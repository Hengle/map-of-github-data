digraph G {
"Kaggle/kaggle-api" -> "Kaggle/docker-python" ["e"=1]
"theainerd/MLInterview" -> "SudalaiRajkumar/Kaggle" ["e"=1]
"geekinglcq/CDCS" -> "EliotAndres/kaggle-past-solutions" ["e"=1]
"aapatel09/handson-unsupervised-learning" -> "aditya1702/Machine-Learning-and-Data-Science" ["e"=1]
"salimt/Courses-" -> "jiadaizhao/Advanced-Machine-Learning-Specialization" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "benhamner/Metrics" ["e"=1]
"corazzon/KaggleStruggle" -> "SudalaiRajkumar/Kaggle" ["e"=1]
"hse-aml/natural-language-processing" -> "hse-aml/intro-to-dl" ["e"=1]
"hse-aml/natural-language-processing" -> "hse-aml/bayesian-methods-for-ml" ["e"=1]
"hse-aml/natural-language-processing" -> "hse-aml/competitive-data-science" ["e"=1]
"hse-aml/natural-language-processing" -> "hse-aml/hadron-collider-machine-learning" ["e"=1]
"hse-aml/natural-language-processing" -> "jiadaizhao/Advanced-Machine-Learning-Specialization" ["e"=1]
"danielfrg/tsne" -> "baidu/fast_rgf"
"danielfrg/tsne" -> "DmitryUlyanov/Multicore-TSNE" ["e"=1]
"danielfrg/tsne" -> "Far0n/kaggletils"
"danielfrg/tsne" -> "geffy/tffm" ["e"=1]
"danielfrg/tsne" -> "lvdmaaten/bhtsne" ["e"=1]
"danielfrg/tsne" -> "animebing/mnist_tsne"
"danielfrg/tsne" -> "rushter/heamy"
"danielfrg/tsne" -> "hse-aml/competitive-data-science"
"danielfrg/tsne" -> "Far0n/xgbfi"
"danielfrg/tsne" -> "srendle/libfm" ["e"=1]
"manifoldai/merf" -> "RGF-team/rgf" ["e"=1]
"luanshiyinyang/Stacking" -> "ShaoQiBNU/stacking"
"luanshiyinyang/Stacking" -> "ikki407/stacking"
"luanshiyinyang/Stacking" -> "XuQiao318/Ensemble-Learning"
"luanshiyinyang/Stacking" -> "yanhan19940405/Data_machine_learning"
"luispedro/BuildingMachineLearningSystemsWithPython" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"luispedro/BuildingMachineLearningSystemsWithPython" -> "kaz-Anova/StackNet" ["e"=1]
"Arturus/kaggle-web-traffic" -> "sjvasquez/web-traffic-forecasting"
"Arturus/kaggle-web-traffic" -> "JEddy92/TimeSeries_Seq2Seq" ["e"=1]
"Arturus/kaggle-web-traffic" -> "guillaume-chevalier/seq2seq-signal-prediction" ["e"=1]
"Arturus/kaggle-web-traffic" -> "ChenglongChen/kaggle-CrowdFlower"
"Arturus/kaggle-web-traffic" -> "jfpuget/Kaggle"
"Arturus/kaggle-web-traffic" -> "kaz-Anova/StackNet"
"Arturus/kaggle-web-traffic" -> "LenzDu/Kaggle-Competition-Favorita"
"Arturus/kaggle-web-traffic" -> "ycjuan/libffm" ["e"=1]
"Arturus/kaggle-web-traffic" -> "entron/entity-embedding-rossmann"
"Arturus/kaggle-web-traffic" -> "aksnzhy/xlearn" ["e"=1]
"Arturus/kaggle-web-traffic" -> "awslabs/gluonts" ["e"=1]
"Arturus/kaggle-web-traffic" -> "farizrahman4u/seq2seq" ["e"=1]
"Arturus/kaggle-web-traffic" -> "Alro10/deep-learning-time-series" ["e"=1]
"Arturus/kaggle-web-traffic" -> "blue-yonder/tsfresh" ["e"=1]
"Arturus/kaggle-web-traffic" -> "wepe/O2O-Coupon-Usage-Forecast" ["e"=1]
"trevorstephens/titanic" -> "wehrley/wehrley.github.io"
"trevorstephens/titanic" -> "mdelhey/kaggle-titanic"
"statisticianinstilettos/recmetrics" -> "benhamner/Metrics" ["e"=1]
"sjvasquez/instacart-basket-prediction" -> "KazukiOnodera/Instacart"
"sjvasquez/instacart-basket-prediction" -> "sjvasquez/web-traffic-forecasting"
"sjvasquez/instacart-basket-prediction" -> "kaz-Anova/StackNet"
"sjvasquez/instacart-basket-prediction" -> "sh1ng/imba"
"sjvasquez/instacart-basket-prediction" -> "qqgeogor/kaggle-quora-solution-8th" ["e"=1]
"sjvasquez/instacart-basket-prediction" -> "sjvasquez/quora-duplicate-questions" ["e"=1]
"sjvasquez/instacart-basket-prediction" -> "plantsgo/Rental-Listing-Inquiries"
"sjvasquez/instacart-basket-prediction" -> "plantsgo/Instacart-Market-Basket-Analysis"
"sjvasquez/instacart-basket-prediction" -> "entron/entity-embedding-rossmann"
"sjvasquez/instacart-basket-prediction" -> "Arturus/kaggle-web-traffic"
"sjvasquez/instacart-basket-prediction" -> "baidu/fast_rgf"
"sjvasquez/instacart-basket-prediction" -> "Far0n/xgbfi"
"sjvasquez/instacart-basket-prediction" -> "Far0n/kaggletils"
"sjvasquez/instacart-basket-prediction" -> "anttttti/Wordbatch"
"sjvasquez/instacart-basket-prediction" -> "jfpuget/LibFM_in_Keras"
"scikit-learn-contrib/DESlib" -> "Menelau/DESlib" ["e"=1]
"scikit-learn-contrib/DESlib" -> "vecxoz/vecstack" ["e"=1]
"reshamas/fastai_deeplearn_part1" -> "floydwch/kaggle-cli" ["e"=1]
"motefly/DeepGBM" -> "Xtra-Computing/thundergbm" ["e"=1]
"Yukong/Deeplearning.ai-Solutions" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"iphysresearch/DataSciComp" -> "EliotAndres/kaggle-past-solutions" ["e"=1]
"iphysresearch/DataSciComp" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"hzy46/TensorFlow-Time-Series-Examples" -> "Arturus/kaggle-web-traffic" ["e"=1]
"Shujian2015/FreeML" -> "PavelOstyakov/toxic" ["e"=1]
"Shujian2015/FreeML" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"Shujian2015/FreeML" -> "kaz-Anova/StackNet" ["e"=1]
"Shujian2015/FreeML" -> "anttttti/Wordbatch" ["e"=1]
"Shujian2015/FreeML" -> "EliotAndres/kaggle-past-solutions" ["e"=1]
"Shujian2015/FreeML" -> "minerva-ml/open-solution-toxic-comments" ["e"=1]
"HunterMcGushion/hyperparameter_hunter" -> "RGF-team/rgf" ["e"=1]
"HunterMcGushion/hyperparameter_hunter" -> "vecxoz/vecstack" ["e"=1]
"abhayspawar/featexp" -> "rushter/heamy" ["e"=1]
"abhayspawar/featexp" -> "EliotAndres/kaggle-past-solutions" ["e"=1]
"abhayspawar/featexp" -> "Far0n/xgbfi" ["e"=1]
"KazukiOnodera/Instacart" -> "sjvasquez/instacart-basket-prediction"
"KazukiOnodera/Instacart" -> "sh1ng/imba"
"KazukiOnodera/Instacart" -> "plantsgo/Instacart-Market-Basket-Analysis"
"KazukiOnodera/Instacart" -> "jfpuget/LibFM_in_Keras"
"KazukiOnodera/Instacart" -> "kaz-Anova/StackNet"
"KazukiOnodera/Instacart" -> "Far0n/kaggletils"
"KazukiOnodera/Instacart" -> "ttvand/Santander-Product-Recommendation"
"KazukiOnodera/Instacart" -> "yihong-chen/instacart-market-basket-analysis"
"KazukiOnodera/Instacart" -> "limexp/xgbfir"
"KazukiOnodera/Instacart" -> "jeongyoonlee/Kaggler"
"KazukiOnodera/Instacart" -> "bestfitting/kaggle" ["e"=1]
"KazukiOnodera/Instacart" -> "nyanp/nyaggle" ["e"=1]
"KazukiOnodera/Instacart" -> "flowlight0/talkingdata-adtracking-fraud-detection" ["e"=1]
"KazukiOnodera/Instacart" -> "anttttti/Wordbatch"
"KazukiOnodera/Instacart" -> "CuteChibiko/TalkingData"
"benanne/kaggle-galaxies" -> "FindBoat/Kaggle" ["e"=1]
"benanne/kaggle-galaxies" -> "ottogroup/kaggle" ["e"=1]
"gatapia/py_ml_utils" -> "kaz-Anova/py_ml_utils"
"sjvasquez/web-traffic-forecasting" -> "Arturus/kaggle-web-traffic"
"sjvasquez/web-traffic-forecasting" -> "JEddy92/TimeSeries_Seq2Seq" ["e"=1]
"sjvasquez/web-traffic-forecasting" -> "LenzDu/Kaggle-Competition-Favorita"
"sjvasquez/web-traffic-forecasting" -> "sjvasquez/instacart-basket-prediction"
"sjvasquez/web-traffic-forecasting" -> "jfpuget/Kaggle"
"sjvasquez/web-traffic-forecasting" -> "PavelOstyakov/toxic"
"sjvasquez/web-traffic-forecasting" -> "kristpapadopoulos/seriesnet" ["e"=1]
"sjvasquez/web-traffic-forecasting" -> "entron/entity-embedding-rossmann"
"sjvasquez/web-traffic-forecasting" -> "sjvasquez/quora-duplicate-questions" ["e"=1]
"sjvasquez/web-traffic-forecasting" -> "kaz-Anova/StackNet"
"sjvasquez/web-traffic-forecasting" -> "Mcompetitions/M5-methods" ["e"=1]
"sjvasquez/web-traffic-forecasting" -> "MaxHalford/kaggle-recruit-restaurant"
"sjvasquez/web-traffic-forecasting" -> "damitkwr/ESRNN-GPU" ["e"=1]
"sjvasquez/web-traffic-forecasting" -> "anttttti/Wordbatch"
"sjvasquez/web-traffic-forecasting" -> "qqgeogor/kaggle-quora-solution-8th" ["e"=1]
"WillKoehrsen/wikipedia-data-science" -> "entron/entity-embedding-rossmann" ["e"=1]
"JEddy92/TimeSeries_Seq2Seq" -> "sjvasquez/web-traffic-forecasting" ["e"=1]
"JEddy92/TimeSeries_Seq2Seq" -> "Arturus/kaggle-web-traffic" ["e"=1]
"SJD1882/MOOC-Coursera-Advanced-Machine-Learning" -> "jiadaizhao/Advanced-Machine-Learning-Specialization"
"SJD1882/MOOC-Coursera-Advanced-Machine-Learning" -> "jlricon/advanced-deep-learning"
"SJD1882/MOOC-Coursera-Advanced-Machine-Learning" -> "lukanovak93/advanced-machine-learning-specialization"
"SJD1882/MOOC-Coursera-Advanced-Machine-Learning" -> "AlessandroCorradini/National-Research-University-Higher-School-of-Economics-Advanced-Machine-Learning-Specialization"
"Brandon-HY-Lin/coursera_How-to-Win-a-Data-Science-Competition-Learn-from-Top-Kagglers" -> "legolas140/competitive-data-science-1"
"Brandon-HY-Lin/coursera_How-to-Win-a-Data-Science-Competition-Learn-from-Top-Kagglers" -> "jiadaizhao/Advanced-Machine-Learning-Specialization"
"hse-aml/competitive-data-science" -> "Far0n/kaggletils"
"hse-aml/competitive-data-science" -> "hse-aml/intro-to-dl"
"hse-aml/competitive-data-science" -> "hse-aml/bayesian-methods-for-ml"
"hse-aml/competitive-data-science" -> "legolas140/competitive-data-science-1"
"hse-aml/competitive-data-science" -> "hse-aml/hadron-collider-machine-learning"
"hse-aml/competitive-data-science" -> "kaz-Anova/StackNet"
"hse-aml/competitive-data-science" -> "rushter/heamy"
"hse-aml/competitive-data-science" -> "jayinai/kaggle-classification"
"hse-aml/competitive-data-science" -> "hse-aml/natural-language-processing" ["e"=1]
"hse-aml/competitive-data-science" -> "Brandon-HY-Lin/coursera_How-to-Win-a-Data-Science-Competition-Learn-from-Top-Kagglers"
"hse-aml/competitive-data-science" -> "danielfrg/tsne"
"hse-aml/competitive-data-science" -> "mervynlee94/Advance-Machine-Learning"
"hse-aml/competitive-data-science" -> "jiadaizhao/Advanced-Machine-Learning-Specialization"
"hse-aml/competitive-data-science" -> "baidu/fast_rgf"
"hse-aml/competitive-data-science" -> "h2oai/pystacknet"
"flowlight0/talkingdata-adtracking-fraud-detection" -> "CuteChibiko/TalkingData" ["e"=1]
"flowlight0/talkingdata-adtracking-fraud-detection" -> "jfpuget/LibFM_in_Keras" ["e"=1]
"flowlight0/talkingdata-adtracking-fraud-detection" -> "pjankiewicz/mercari-solution" ["e"=1]
"wepe/efficient-decision-tree-notes" -> "plantsgo/kesci_ctrip" ["e"=1]
"mjbahmani/My-journey-in-the-data-science-world" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"hse-aml/intro-to-dl" -> "hse-aml/competitive-data-science"
"hse-aml/intro-to-dl" -> "hse-aml/bayesian-methods-for-ml"
"hse-aml/intro-to-dl" -> "hse-aml/natural-language-processing" ["e"=1]
"hse-aml/intro-to-dl" -> "jiadaizhao/Advanced-Machine-Learning-Specialization"
"hse-aml/intro-to-dl" -> "MaxPoon/coursera-Advanced-Machine-Learning-specialization"
"hse-aml/intro-to-dl" -> "hse-aml/hadron-collider-machine-learning"
"hse-aml/intro-to-dl" -> "SJD1882/MOOC-Coursera-Advanced-Machine-Learning"
"hse-aml/intro-to-dl" -> "yandexdataschool/Practical_DL" ["e"=1]
"hse-aml/intro-to-dl" -> "yandexdataschool/Practical_RL" ["e"=1]
"hse-aml/intro-to-dl" -> "Far0n/kaggletils"
"hse-aml/intro-to-dl" -> "kaz-Anova/StackNet"
"hse-aml/intro-to-dl" -> "romeokienzler/ibm-developer"
"hse-aml/intro-to-dl" -> "DanAnastasyev/DeepNLP-Course" ["e"=1]
"hse-aml/intro-to-dl" -> "shenweichen/Coursera" ["e"=1]
"hse-aml/intro-to-dl" -> "sim0nsays/dlcourse_ai" ["e"=1]
"SudalaiRajkumar/PyTorch-Deep-Learning-Minicourse" -> "SudalaiRajkumar/TensorFlow-Book"
"MaxPoon/coursera-Advanced-Machine-Learning-specialization" -> "jlricon/advanced-deep-learning"
"LenzDu/Kaggle-Competition-Favorita" -> "sjvasquez/web-traffic-forecasting"
"LenzDu/Kaggle-Competition-Favorita" -> "ceshine/favorita_sales_forecasting"
"LenzDu/Kaggle-Competition-Favorita" -> "jfpuget/Kaggle"
"LenzDu/Kaggle-Competition-Favorita" -> "MaxHalford/kaggle-recruit-restaurant"
"LenzDu/Kaggle-Competition-Favorita" -> "LenzDu/Kaggle-Competition-Sberbank"
"LenzDu/Kaggle-Competition-Favorita" -> "Mcompetitions/M5-methods" ["e"=1]
"LenzDu/Kaggle-Competition-Favorita" -> "KunalArora/kaggle-m5-forecasting"
"LenzDu/Kaggle-Competition-Favorita" -> "xiaozhouwang/kaggle-porto-seguro"
"LenzDu/Kaggle-Competition-Favorita" -> "Arturus/kaggle-web-traffic"
"minerva-ml/open-solution-home-credit" -> "CuteChibiko/TalkingData" ["e"=1]
"SudalaiRajkumar/ML" -> "SudalaiRajkumar/Kaggle"
"SudalaiRajkumar/ML" -> "SudalaiRajkumar/NLP"
"SudalaiRajkumar/ML" -> "sonnylaskar/Competitions"
"SudalaiRajkumar/ML" -> "aayushmnit/Competitions"
"SudalaiRajkumar/ML" -> "bishwarup307/AV_ClubMahindra"
"SudalaiRajkumar/ML" -> "SudalaiRajkumar/awesome-public-datasets"
"jfpuget/Kaggle" -> "xiaozhouwang/kaggle-porto-seguro"
"jfpuget/Kaggle" -> "jfpuget/LibFM_in_Keras"
"jfpuget/Kaggle" -> "MaxHalford/kaggle-recruit-restaurant"
"jfpuget/Kaggle" -> "CuteChibiko/TalkingData"
"jfpuget/Kaggle" -> "louis925/kaggle-web-traffic-time-series-forecasting"
"jfpuget/Kaggle" -> "sjvasquez/web-traffic-forecasting"
"jfpuget/Kaggle" -> "diefimov/santander_2016"
"pjankiewicz/mercari-solution" -> "anttttti/Wordbatch"
"pjankiewicz/mercari-solution" -> "ChenglongChen/tensorflow-XNN"
"pjankiewicz/mercari-solution" -> "flowlight0/talkingdata-adtracking-fraud-detection" ["e"=1]
"pjankiewicz/mercari-solution" -> "KazukiOnodera/Santander-Customer-Transaction-Prediction" ["e"=1]
"pjankiewicz/mercari-solution" -> "darraghdog/avito-demand"
"pjankiewicz/mercari-solution" -> "nejumi/kaggle_memo" ["e"=1]
"pjankiewicz/mercari-solution" -> "lopuhin/kaggle-script-template" ["e"=1]
"pjankiewicz/mercari-solution" -> "upura/knnFeat" ["e"=1]
"pjankiewicz/mercari-solution" -> "jfpuget/LibFM_in_Keras"
"pjankiewicz/mercari-solution" -> "mxbi/mlcrate"
"aerdem4/lofo-importance" -> "RGF-team/rgf" ["e"=1]
"chasedehan/BoostARoota" -> "limexp/xgbfir" ["e"=1]
"minerva-ml/open-solution-toxic-comments" -> "PavelOstyakov/toxic"
"minerva-ml/open-solution-toxic-comments" -> "mattmotoki/toxic-comment-classification"
"minerva-ml/open-solution-toxic-comments" -> "minerva-ml/open-solution-data-science-bowl-2018" ["e"=1]
"minerva-ml/open-solution-toxic-comments" -> "anttttti/Wordbatch"
"minerva-ml/open-solution-toxic-comments" -> "peterhurford/kaggle-toxic_comment"
"minerva-ml/open-solution-toxic-comments" -> "aerdem4/mercari-price-suggestion" ["e"=1]
"minerva-ml/open-solution-toxic-comments" -> "ChenglongChen/tensorflow-XNN"
"minerva-ml/open-solution-toxic-comments" -> "thinline72/toxic"
"zake7749/DeepToxic" -> "thinline72/toxic"
"zake7749/DeepToxic" -> "mattmotoki/toxic-comment-classification"
"zake7749/DeepToxic" -> "PavelOstyakov/toxic"
"PavelOstyakov/toxic" -> "minerva-ml/open-solution-toxic-comments"
"PavelOstyakov/toxic" -> "thinline72/toxic"
"PavelOstyakov/toxic" -> "mattmotoki/toxic-comment-classification"
"PavelOstyakov/toxic" -> "Donskov7/toxic_comments"
"PavelOstyakov/toxic" -> "qqgeogor/kaggle-quora-solution-8th" ["e"=1]
"PavelOstyakov/toxic" -> "aerdem4/kaggle-quora-dup" ["e"=1]
"PavelOstyakov/toxic" -> "anttttti/Wordbatch"
"PavelOstyakov/toxic" -> "zake7749/DeepToxic"
"PavelOstyakov/toxic" -> "ChenglongChen/kaggle-HomeDepot"
"PavelOstyakov/toxic" -> "sjvasquez/web-traffic-forecasting"
"PavelOstyakov/toxic" -> "xiaozhouwang/kaggle-porto-seguro"
"PavelOstyakov/toxic" -> "oleg-yaroshevskiy/quest_qa_labeling" ["e"=1]
"mxbi/mlcrate" -> "lopuhin/kaggle-kuzushiji-2019" ["e"=1]
"mxbi/mlcrate" -> "pjankiewicz/mercari-solution"
"mxbi/mlcrate" -> "anttttti/Wordbatch"
"mxbi/mlcrate" -> "Far0n/kaggletils"
"mxbi/mlcrate" -> "bestfitting/kaggle" ["e"=1]
"mxbi/mlcrate" -> "mxbi/shell_scripts"
"mxbi/mlcrate" -> "mxbi/ftim"
"ShaoQiBNU/stacking" -> "luanshiyinyang/Stacking"
"jhwjhw0123/Imbalance-XGBoost" -> "limexp/xgbfir" ["e"=1]
"h2oai/pystacknet" -> "kaz-Anova/StackNet"
"h2oai/pystacknet" -> "rushter/heamy"
"h2oai/pystacknet" -> "Far0n/kaggletils"
"h2oai/pystacknet" -> "vecxoz/vecstack"
"h2oai/pystacknet" -> "Cocoxili/DCASE2018Task2" ["e"=1]
"h2oai/pystacknet" -> "PavelOstyakov/toxic"
"CuteChibiko/TalkingData" -> "flowlight0/talkingdata-adtracking-fraud-detection" ["e"=1]
"CuteChibiko/TalkingData" -> "jfpuget/LibFM_in_Keras"
"peterhurford/kaggle-toxic_comment" -> "mattmotoki/toxic-comment-classification"
"jfpuget/LibFM_in_Keras" -> "CuteChibiko/TalkingData"
"jfpuget/LibFM_in_Keras" -> "jfpuget/Kaggle"
"jfpuget/LibFM_in_Keras" -> "flowlight0/talkingdata-adtracking-fraud-detection" ["e"=1]
"jfpuget/LibFM_in_Keras" -> "anttttti/Wordbatch"
"jfpuget/LibFM_in_Keras" -> "xiaozhouwang/kaggle-porto-seguro"
"legolas140/competitive-data-science-1" -> "Brandon-HY-Lin/coursera_How-to-Win-a-Data-Science-Competition-Learn-from-Top-Kagglers"
"legolas140/competitive-data-science-1" -> "mervynlee94/Advance-Machine-Learning"
"legolas140/competitive-data-science-1" -> "hse-aml/competitive-data-science"
"legolas140/competitive-data-science-1" -> "Abhishekmamidi123/Competitive_Data_Science"
"PPshrimpGo/BDCI2018-ChinauUicom-1st-solution" -> "OsloAI/personalized-matching" ["e"=1]
"mattmotoki/toxic-comment-classification" -> "thinline72/toxic"
"mattmotoki/toxic-comment-classification" -> "peterhurford/kaggle-toxic_comment"
"mattmotoki/toxic-comment-classification" -> "minerva-ml/open-solution-toxic-comments"
"xiaozhouwang/kaggle-porto-seguro" -> "jfpuget/Kaggle"
"xiaozhouwang/kaggle-porto-seguro" -> "CuteChibiko/TalkingData"
"xiaozhouwang/kaggle-porto-seguro" -> "jfpuget/LibFM_in_Keras"
"xiaozhouwang/kaggle-porto-seguro" -> "qqgeogor/kaggle-quora-solution-8th" ["e"=1]
"xiaozhouwang/kaggle-porto-seguro" -> "anttttti/Wordbatch"
"jiadaizhao/Advanced-Machine-Learning-Specialization" -> "SJD1882/MOOC-Coursera-Advanced-Machine-Learning"
"jiadaizhao/Advanced-Machine-Learning-Specialization" -> "lukanovak93/advanced-machine-learning-specialization"
"jiadaizhao/Advanced-Machine-Learning-Specialization" -> "Brandon-HY-Lin/coursera_How-to-Win-a-Data-Science-Competition-Learn-from-Top-Kagglers"
"jiadaizhao/Advanced-Machine-Learning-Specialization" -> "jlricon/advanced-deep-learning"
"jiadaizhao/Advanced-Machine-Learning-Specialization" -> "Nabarun21/deep_learning_in_computer_vision"
"jiadaizhao/Advanced-Machine-Learning-Specialization" -> "hse-aml/intro-to-dl"
"jiadaizhao/Advanced-Machine-Learning-Specialization" -> "iampukar/deep-learning-in-computer-vision"
"intellistream/StreamProcessing_ReadingList" -> "intellistream/AllianceDB"
"SudalaiRajkumar/NLP" -> "SudalaiRajkumar/ML"
"SudalaiRajkumar/NLP" -> "SudalaiRajkumar/awesome-public-datasets"
"mlandry22/kaggle" -> "tks0123456789/kaggle-Otto"
"mlandry22/kaggle" -> "ottogroup/kaggle"
"KazukiOnodera/Santander-Customer-Transaction-Prediction" -> "CuteChibiko/TalkingData" ["e"=1]
"hse-aml/bayesian-methods-for-ml" -> "hse-aml/hadron-collider-machine-learning"
"hse-aml/bayesian-methods-for-ml" -> "hse-aml/competitive-data-science"
"hse-aml/bayesian-methods-for-ml" -> "hse-aml/intro-to-dl-pytorch"
"ChenglongChen/tensorflow-XNN" -> "pjankiewicz/mercari-solution"
"ChenglongChen/tensorflow-XNN" -> "anttttti/Wordbatch"
"ChenglongChen/tensorflow-XNN" -> "ChenglongChen/kaggle-HomeDepot"
"ChenglongChen/tensorflow-XNN" -> "minerva-ml/open-solution-toxic-comments"
"ChenglongChen/tensorflow-XNN" -> "ChenglongChen/tensorflow-DeepFM" ["e"=1]
"ChenglongChen/tensorflow-XNN" -> "hexiangnan/neural_factorization_machine" ["e"=1]
"ChenglongChen/tensorflow-XNN" -> "charleshm/deep-ctr" ["e"=1]
"ChenglongChen/tensorflow-XNN" -> "jfpuget/LibFM_in_Keras"
"ChenglongChen/tensorflow-XNN" -> "qqgeogor/kaggle-quora-solution-8th" ["e"=1]
"ChenglongChen/tensorflow-XNN" -> "ogerhsou/Youtube-Recommendation-Tensorflow" ["e"=1]
"ChenglongChen/tensorflow-XNN" -> "siqi13579/ctr_Keras" ["e"=1]
"ChenglongChen/tensorflow-XNN" -> "plantsgo/Rental-Listing-Inquiries"
"hse-aml/hadron-collider-machine-learning" -> "hse-aml/bayesian-methods-for-ml"
"aayushmnit/cookbook" -> "aayushmnit/Data-science-presentation"
"aayushmnit/cookbook" -> "aayushmnit/Competitions"
"Xtra-Computing/briskstream" -> "intellistream/AllianceDB"
"minsuk-heo/kaggle-titanic" -> "ahmedbesbes/How-to-score-0.8134-in-Titanic-Kaggle-Challenge"
"minerva-ml/open-solution-data-science-bowl-2018" -> "minerva-ml/open-solution-toxic-comments" ["e"=1]
"thinline72/toxic" -> "mattmotoki/toxic-comment-classification"
"thinline72/toxic" -> "peterhurford/kaggle-toxic_comment"
"mervynlee94/Advance-Machine-Learning" -> "legolas140/competitive-data-science-1"
"Menelau/DESlib" -> "viisar/brew"
"srendle/libfm" -> "baidu/fast_rgf" ["e"=1]
"floydwch/kaggle-cli" -> "reshamas/fastai_deeplearn_part1" ["e"=1]
"floydwch/kaggle-cli" -> "petrosgk/Kaggle-Carvana-Image-Masking-Challenge" ["e"=1]
"floydwch/kaggle-cli" -> "Far0n/xgbfi"
"floydwch/kaggle-cli" -> "kaz-Anova/StackNet"
"floydwch/kaggle-cli" -> "fastai/courses" ["e"=1]
"floydwch/kaggle-cli" -> "limexp/xgbfir"
"floydwch/kaggle-cli" -> "ChenglongChen/kaggle-HomeDepot"
"floydwch/kaggle-cli" -> "entron/entity-embedding-rossmann"
"floydwch/kaggle-cli" -> "ArdalanM/pyLightGBM"
"floydwch/kaggle-cli" -> "EdwardTyantov/ultrasound-nerve-segmentation" ["e"=1]
"floydwch/kaggle-cli" -> "baidu/fast_rgf"
"floydwch/kaggle-cli" -> "felixlaumon/kaggle-right-whale" ["e"=1]
"floydwch/kaggle-cli" -> "anttttti/Wordbatch"
"floydwch/kaggle-cli" -> "MLWave/Kaggle-Ensemble-Guide"
"floydwch/kaggle-cli" -> "EliotAndres/kaggle-past-solutions"
"Mcompetitions/M5-methods" -> "LenzDu/Kaggle-Competition-Favorita" ["e"=1]
"Mcompetitions/M5-methods" -> "sjvasquez/web-traffic-forecasting" ["e"=1]
"Xtra-Computing/G3" -> "Xtra-Computing/ThundeRiNG"
"Xtra-Computing/thundersvm" -> "Xtra-Computing/thundergbm" ["e"=1]
"viisar/brew" -> "Menelau/DESlib"
"viisar/brew" -> "rushter/heamy"
"viisar/brew" -> "vecxoz/vecstack"
"viisar/brew" -> "xiaozhouwang/kaggle-porto-seguro"
"viisar/brew" -> "Far0n/xgbfi"
"viisar/brew" -> "emanuele/kaggle_pbr"
"viisar/brew" -> "turi-code/python-libffm" ["e"=1]
"viisar/brew" -> "arogozhnikov/infiniteboost"
"viisar/brew" -> "ArdalanM/pyLightGBM"
"ycjuan/kaggle-2014-criteo" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"bingzhengwei/ftrl_proximal_lr" -> "daxiongshu/light-ffm" ["e"=1]
"jeongyoonlee/Kaggler" -> "comadan/FM_FTRL" ["e"=1]
"jeongyoonlee/Kaggler" -> "ycjuan/kaggle-avazu" ["e"=1]
"jeongyoonlee/Kaggler" -> "Far0n/kaggletils"
"jeongyoonlee/Kaggler" -> "nyanp/nyaggle" ["e"=1]
"jeongyoonlee/Kaggler" -> "MLWave/Kaggle-Ensemble-Guide"
"jeongyoonlee/Kaggler" -> "kaz-Anova/StackNet"
"jeongyoonlee/Kaggler" -> "ycjuan/libffm" ["e"=1]
"jeongyoonlee/Kaggler" -> "gatapia/py_ml_utils"
"jeongyoonlee/Kaggler" -> "rushter/heamy"
"jeongyoonlee/Kaggler" -> "ycjuan/kaggle-2014-criteo" ["e"=1]
"jeongyoonlee/Kaggler" -> "daxiongshu/light-ffm"
"jeongyoonlee/Kaggler" -> "RGF-team/rgf"
"jeongyoonlee/Kaggler" -> "owenzhang/kaggle-avazu" ["e"=1]
"jeongyoonlee/Kaggler" -> "kaz-Anova/ensemble_amazon"
"jeongyoonlee/Kaggler" -> "turi-code/python-libffm" ["e"=1]
"karpathy/tsnejs" -> "danielfrg/tsne" ["e"=1]
"OpenMined/PyVertical" -> "Xtra-Computing/FedTree" ["e"=1]
"h2oai/h2o-meetups" -> "jfpuget/LibFM_in_Keras" ["e"=1]
"h2oai/h2o-meetups" -> "anttttti/Wordbatch" ["e"=1]
"melisgl/higgsml" -> "TimSalimans/HiggsML"
"the-black-knight-01/Data-Science-Competitions" -> "earhian/Humpback-Whale-Identification-1st-" ["e"=1]
"the-black-knight-01/Data-Science-Competitions" -> "aasu14/Data-Science-Hackathon-And-Competition" ["e"=1]
"the-black-knight-01/Data-Science-Competitions" -> "EliotAndres/kaggle-past-solutions"
"the-black-knight-01/Data-Science-Competitions" -> "aikho/awesome-feature-engineering" ["e"=1]
"the-black-knight-01/Data-Science-Competitions" -> "benedekrozemberczki/awesome-gradient-boosting-papers" ["e"=1]
"the-black-knight-01/Data-Science-Competitions" -> "aditya1702/Machine-Learning-and-Data-Science"
"the-black-knight-01/Data-Science-Competitions" -> "ybabakhin/kaggle_salt_bes_phalanx" ["e"=1]
"the-black-knight-01/Data-Science-Competitions" -> "apachecn/awesome-data-comp-solution" ["e"=1]
"the-black-knight-01/Data-Science-Competitions" -> "yhangf/ML-NOTE" ["e"=1]
"the-black-knight-01/Data-Science-Competitions" -> "Arturus/kaggle-web-traffic"
"the-black-knight-01/Data-Science-Competitions" -> "Pysamlam/Tips-of-Feature-engineering" ["e"=1]
"the-black-knight-01/Data-Science-Competitions" -> "drivendataorg/competition-winners" ["e"=1]
"the-black-knight-01/Data-Science-Competitions" -> "finlay-liu/kaggle_public" ["e"=1]
"the-black-knight-01/Data-Science-Competitions" -> "MLWave/Kaggle-Ensemble-Guide"
"the-black-knight-01/Data-Science-Competitions" -> "BloodAxe/pytorch-toolbelt" ["e"=1]
"savarin/pyconuk-introtutorial" -> "savarin/python_for_ml"
"savarin/pyconuk-introtutorial" -> "savarin/neural-networks"
"intellistream/MorphStream" -> "intellistream/CANDY-Benchmark"
"intellistream/MorphStream" -> "intellistream/AllianceDB"
"intellistream/MorphStream" -> "intellistream/Sesame"
"TimSalimans/HiggsML" -> "gramolin/flavours-of-physics"
"TimSalimans/HiggsML" -> "MLWave/RGF-sklearn"
"TimSalimans/HiggsML" -> "melisgl/higgsml"
"lsds/LightSaber" -> "lsds/Saber"
"lsds/LightSaber" -> "intellistream/AllianceDB"
"arogozhnikov/readable_capsnet" -> "apple/dmel-demo"
"owenzhang/kaggle-avazu" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"owenzhang/kaggle-avazu" -> "ChenglongChen/kaggle-HomeDepot" ["e"=1]
"MLWave/Kaggle-Ensemble-Guide" -> "emanuele/kaggle_pbr"
"MLWave/Kaggle-Ensemble-Guide" -> "kaz-Anova/StackNet"
"MLWave/Kaggle-Ensemble-Guide" -> "ChenglongChen/kaggle-CrowdFlower"
"MLWave/Kaggle-Ensemble-Guide" -> "jeongyoonlee/Kaggler"
"MLWave/Kaggle-Ensemble-Guide" -> "rushter/heamy"
"MLWave/Kaggle-Ensemble-Guide" -> "EliotAndres/kaggle-past-solutions"
"MLWave/Kaggle-Ensemble-Guide" -> "entron/entity-embedding-rossmann"
"MLWave/Kaggle-Ensemble-Guide" -> "Far0n/xgbfi"
"MLWave/Kaggle-Ensemble-Guide" -> "ycjuan/libffm" ["e"=1]
"MLWave/Kaggle-Ensemble-Guide" -> "Far0n/kaggletils"
"MLWave/Kaggle-Ensemble-Guide" -> "ChenglongChen/kaggle-HomeDepot"
"MLWave/Kaggle-Ensemble-Guide" -> "ycjuan/kaggle-2014-criteo" ["e"=1]
"MLWave/Kaggle-Ensemble-Guide" -> "vecxoz/vecstack"
"MLWave/Kaggle-Ensemble-Guide" -> "RGF-team/rgf"
"MLWave/Kaggle-Ensemble-Guide" -> "TeamHG-Memex/eli5" ["e"=1]
"Kaggle/docker-python" -> "Kaggle/kaggle-api" ["e"=1]
"Kaggle/docker-python" -> "MLWave/Kaggle-Ensemble-Guide"
"Kaggle/docker-python" -> "Kaggle/docker-rstats"
"Kaggle/docker-python" -> "kaz-Anova/StackNet"
"Kaggle/docker-python" -> "nyanp/nyaggle" ["e"=1]
"Kaggle/docker-python" -> "ChenglongChen/kaggle-CrowdFlower"
"Kaggle/docker-python" -> "jeongyoonlee/Kaggler"
"Kaggle/docker-python" -> "nejumi/kaggle_memo" ["e"=1]
"Kaggle/docker-python" -> "jupyter/docker-stacks" ["e"=1]
"Kaggle/docker-python" -> "TeamHG-Memex/eli5" ["e"=1]
"Kaggle/docker-python" -> "trent-b/iterative-stratification" ["e"=1]
"Kaggle/docker-python" -> "ghmagazine/kagglebook" ["e"=1]
"Kaggle/docker-python" -> "microsoft/LightGBM" ["e"=1]
"Kaggle/docker-python" -> "pfnet-research/xfeat" ["e"=1]
"Kaggle/docker-python" -> "YutaroOgawa/pytorch_advanced" ["e"=1]
"SudalaiRajkumar/Kaggle" -> "SudalaiRajkumar/ML"
"SudalaiRajkumar/Kaggle" -> "gdb/kaggle"
"SudalaiRajkumar/Kaggle" -> "jeongyoonlee/Kaggler"
"SudalaiRajkumar/Kaggle" -> "tks0123456789/kaggle-Otto"
"SudalaiRajkumar/Kaggle" -> "corazzon/KaggleStruggle" ["e"=1]
"SudalaiRajkumar/Kaggle" -> "EliotAndres/kaggle-past-solutions"
"SudalaiRajkumar/Kaggle" -> "agconti/kaggle-titanic"
"SudalaiRajkumar/Kaggle" -> "ChenglongChen/kaggle-CrowdFlower"
"SudalaiRajkumar/Kaggle" -> "SudalaiRajkumar/awesome-public-datasets"
"SudalaiRajkumar/Kaggle" -> "mlandry22/kaggle"
"SudalaiRajkumar/Kaggle" -> "sonnylaskar/Competitions"
"SudalaiRajkumar/Kaggle" -> "ttvand/Santander-Product-Recommendation"
"SudalaiRajkumar/Kaggle" -> "SudalaiRajkumar/NLP"
"SudalaiRajkumar/Kaggle" -> "tdeboissiere/Kaggle"
"SudalaiRajkumar/Kaggle" -> "SudalaiRajkumar/TensorFlow-Book"
"Kaggle/docker-rstats" -> "Kaggle/docker-rcran"
"lvdmaaten/bhtsne" -> "danielfrg/tsne" ["e"=1]
"romeokienzler/ibm-developer" -> "SkymindIO/dsx"
"dmlc/wormhole" -> "baidu/fast_rgf" ["e"=1]
"ChenglongChen/kaggle-CrowdFlower" -> "ChenglongChen/kaggle-HomeDepot"
"ChenglongChen/kaggle-CrowdFlower" -> "MLWave/Kaggle-Ensemble-Guide"
"ChenglongChen/kaggle-CrowdFlower" -> "kaz-Anova/StackNet"
"ChenglongChen/kaggle-CrowdFlower" -> "ycjuan/kaggle-2014-criteo" ["e"=1]
"ChenglongChen/kaggle-CrowdFlower" -> "ycjuan/libffm" ["e"=1]
"ChenglongChen/kaggle-CrowdFlower" -> "owenzhang/kaggle-avazu" ["e"=1]
"ChenglongChen/kaggle-CrowdFlower" -> "EliotAndres/kaggle-past-solutions"
"ChenglongChen/kaggle-CrowdFlower" -> "entron/entity-embedding-rossmann"
"ChenglongChen/kaggle-CrowdFlower" -> "ChenglongChen/tensorflow-DeepFM" ["e"=1]
"ChenglongChen/kaggle-CrowdFlower" -> "wepe/O2O-Coupon-Usage-Forecast" ["e"=1]
"ChenglongChen/kaggle-CrowdFlower" -> "emanuele/kaggle_pbr"
"ChenglongChen/kaggle-CrowdFlower" -> "dnc1994/Kaggle-Playground" ["e"=1]
"ChenglongChen/kaggle-CrowdFlower" -> "Arturus/kaggle-web-traffic"
"ChenglongChen/kaggle-CrowdFlower" -> "aksnzhy/xlearn" ["e"=1]
"ChenglongChen/kaggle-CrowdFlower" -> "ycjuan/kaggle-avazu" ["e"=1]
"turi-code/python-libffm" -> "daxiongshu/light-ffm" ["e"=1]
"turi-code/python-libffm" -> "thomaskeck/FastBDT" ["e"=1]
"ycjuan/kaggle-avazu" -> "jeongyoonlee/Kaggler" ["e"=1]
"Xtra-Computing/FedTree" -> "jjiantong/FastPGM"
"Xtra-Computing/FedTree" -> "Xtra-Computing/SOFF"
"Xtra-Computing/FedTree" -> "Samuel-Maddock/federated-boosted-dp-trees"
"mpearmain/BayesBoost" -> "Far0n/xgbfi"
"mpearmain/BayesBoost" -> "Far0n/kaggle-homesite"
"mpearmain/BayesBoost" -> "gramolin/flavours-of-physics"
"thomaskeck/FastBDT" -> "baidu/fast_rgf"
"thomaskeck/FastBDT" -> "ArdalanM/pyLightGBM"
"thomaskeck/FastBDT" -> "dmlc/difacto" ["e"=1]
"thomaskeck/FastBDT" -> "turi-code/python-libffm" ["e"=1]
"gdb/kaggle" -> "SudalaiRajkumar/Kaggle"
"gdb/kaggle" -> "EliotAndres/kaggle-past-solutions"
"gdb/kaggle" -> "tdeboissiere/Kaggle"
"gdb/kaggle" -> "FindBoat/Kaggle"
"gdb/kaggle" -> "ChenglongChen/kaggle-CrowdFlower"
"gdb/kaggle" -> "agconti/kaggle-titanic"
"gdb/kaggle" -> "benanne/kaggle-ndsb" ["e"=1]
"gdb/kaggle" -> "MLWave/Kaggle-Ensemble-Guide"
"gdb/kaggle" -> "openai/requests-for-research" ["e"=1]
"gdb/kaggle" -> "ChenglongChen/kaggle-HomeDepot"
"gdb/kaggle" -> "mila-iqia/summerschool2015" ["e"=1]
"gdb/kaggle" -> "wendykan/DeepLearningMovies" ["e"=1]
"gdb/kaggle" -> "Newmu/Theano-Tutorials" ["e"=1]
"gdb/kaggle" -> "sjchoi86/dl_tutorials" ["e"=1]
"gdb/kaggle" -> "ycjuan/kaggle-2014-criteo" ["e"=1]
"geffy/kaggle-malware" -> "geffy/kaggle-crowdflower" ["e"=1]
"geffy/kaggle-crowdflower" -> "Far0n/kaggle-lmgpip"
"comadan/FM_FTRL" -> "daxiongshu/light-ffm" ["e"=1]
"Xtra-Computing/Vine" -> "Xtra-Computing/ThundeRiNG"
"diefimov/west_nile_virus_2015" -> "Cardal/Kaggle_WestNileVirus"
"jjiantong/FastPGM" -> "lushl9301/Auto-Paper-Access"
"jjiantong/FastPGM" -> "Xtra-Computing/PyOE"
"jturkewitz/SideProjects" -> "palevas/santander-product-recommendation-8th-place"
"jturkewitz/SideProjects" -> "apryor6/Kaggle-Competition-Santander"
"Xtra-Computing/ThundeRiNG" -> "Xtra-Computing/Vine"
"RC4ML/FpgaNIC" -> "jjiantong/FastPGM" ["e"=1]
"ahara/kaggle_otto" -> "tks0123456789/kaggle-Otto"
"tks0123456789/kaggle-Otto" -> "ahara/kaggle_otto"
"tks0123456789/kaggle-Otto" -> "Far0n/kaggle-homesite"
"microsoft/LightLDA" -> "baidu/fast_rgf" ["e"=1]
"NaiboWang/Bilibili-XMLSubtitle-to-ASS" -> "jjiantong/FastPGM" ["e"=1]
"NaiboWang/Bilibili-XMLSubtitle-to-ASS" -> "Xtra-Computing/PyOE" ["e"=1]
"benhamner/Metrics" -> "statisticianinstilettos/recmetrics" ["e"=1]
"benhamner/Metrics" -> "MLWave/Kaggle-Ensemble-Guide"
"benhamner/Metrics" -> "ChenglongChen/kaggle-CrowdFlower"
"benhamner/Metrics" -> "srendle/libfm" ["e"=1]
"benhamner/Metrics" -> "benfred/implicit" ["e"=1]
"benhamner/Metrics" -> "maciejkula/spotlight" ["e"=1]
"benhamner/Metrics" -> "ibayer/fastFM" ["e"=1]
"benhamner/Metrics" -> "entron/entity-embedding-rossmann"
"benhamner/Metrics" -> "Far0n/xgbfi"
"benhamner/Metrics" -> "scikit-learn-contrib/metric-learn" ["e"=1]
"benhamner/Metrics" -> "geffy/tffm" ["e"=1]
"benhamner/Metrics" -> "lyst/lightfm" ["e"=1]
"benhamner/Metrics" -> "Lasagne/Lasagne" ["e"=1]
"benhamner/Metrics" -> "facebookresearch/StarSpace" ["e"=1]
"benhamner/Metrics" -> "ycjuan/libffm" ["e"=1]
"FuChong-cyber/label-inference-attacks" -> "FLAIR-THU/VFLAIR"
"FuChong-cyber/label-inference-attacks" -> "xinjianluo/featureinference-vfl"
"FuChong-cyber/label-inference-attacks" -> "OscarcarLi/label-protection"
"FuChong-cyber/label-inference-attacks" -> "Mr-Ace-1997/Backdoor-Attack-Against-Split-Neural-Network-Based-Vertical-Federated-Learning"
"tqchen/xgboost" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"HanXiaoyang/Kaggle_Titanic" -> "agconti/kaggle-titanic" ["e"=1]
"turi-code/SFrame" -> "baidu/fast_rgf" ["e"=1]
"Far0n/kaggle-lmgpip" -> "diefimov/west_nile_virus_2015"
"Far0n/kaggle-lmgpip" -> "gramolin/flavours-of-physics"
"h2oai/h2o-tutorials" -> "kaz-Anova/StackNet" ["e"=1]
"abhishekkrthakur/walmart2015" -> "abhishekkrthakur/anime_hentai"
"komiya-atsushi/xgboost-predictor-java" -> "Far0n/xgbfi" ["e"=1]
"komiya-atsushi/xgboost-predictor-java" -> "limexp/xgbfir" ["e"=1]
"andosa/treeinterpreter" -> "limexp/xgbfir" ["e"=1]
"emanuele/kaggle_pbr" -> "MLWave/Kaggle-Ensemble-Guide"
"emanuele/kaggle_pbr" -> "ChenglongChen/kaggle-HomeDepot"
"emanuele/kaggle_pbr" -> "ChenglongChen/kaggle-CrowdFlower"
"emanuele/kaggle_pbr" -> "owenzhang/kaggle-avazu" ["e"=1]
"emanuele/kaggle_pbr" -> "lytforgood/MachineLearningTrick" ["e"=1]
"emanuele/kaggle_pbr" -> "MLWave/hodor-autoML"
"emanuele/kaggle_pbr" -> "ArdalanM/pyLightGBM"
"emanuele/kaggle_pbr" -> "kaz-Anova/StackNet"
"emanuele/kaggle_pbr" -> "dustinstansbury/stacked_generalization"
"emanuele/kaggle_pbr" -> "geffy/kaggle-crowdflower"
"emanuele/kaggle_pbr" -> "kaz-Anova/ensemble_amazon"
"emanuele/kaggle_pbr" -> "log0/vertebral"
"emanuele/kaggle_pbr" -> "xiaozhouwang/kaggle-porto-seguro"
"emanuele/kaggle_pbr" -> "jeongyoonlee/Kaggler"
"emanuele/kaggle_pbr" -> "ycjuan/libffm" ["e"=1]
"Far0n/kaggletils" -> "rushter/heamy"
"Far0n/kaggletils" -> "kaz-Anova/StackNet"
"Far0n/kaggletils" -> "jayinai/kaggle-classification"
"Far0n/kaggletils" -> "hse-aml/competitive-data-science"
"Far0n/kaggletils" -> "Far0n/xgbfi"
"Far0n/kaggletils" -> "kaz-Anova/ensemble_amazon"
"Far0n/kaggletils" -> "limexp/xgbfir"
"Far0n/kaggletils" -> "baidu/fast_rgf"
"Far0n/kaggletils" -> "jeongyoonlee/Kaggler"
"Far0n/kaggletils" -> "daxiongshu/light-ffm"
"Far0n/kaggletils" -> "alno/kaggle-allstate-claims-severity"
"Far0n/kaggletils" -> "plantsgo/Rental-Listing-Inquiries"
"Far0n/kaggletils" -> "mervynlee94/Advance-Machine-Learning"
"Far0n/kaggletils" -> "danielfrg/tsne"
"Far0n/kaggletils" -> "h2oai/pystacknet"
"Far0n/xgbfi" -> "limexp/xgbfir"
"Far0n/xgbfi" -> "alno/kaggle-allstate-claims-severity"
"Far0n/xgbfi" -> "ArdalanM/pyLightGBM"
"Far0n/xgbfi" -> "mpearmain/BayesBoost"
"Far0n/xgbfi" -> "Far0n/kaggle-homesite"
"Far0n/xgbfi" -> "daxiongshu/light-ffm"
"Far0n/xgbfi" -> "Far0n/kaggletils"
"Far0n/xgbfi" -> "kaz-Anova/StackNet"
"Far0n/xgbfi" -> "baidu/fast_rgf"
"Far0n/xgbfi" -> "kaz-Anova/ensemble_amazon"
"Far0n/xgbfi" -> "rushter/heamy"
"Far0n/xgbfi" -> "RGF-team/rgf"
"Far0n/xgbfi" -> "anttttti/Wordbatch"
"Far0n/xgbfi" -> "diefimov/santander_2016"
"Far0n/xgbfi" -> "entron/entity-embedding-rossmann"
"entron/entity-embedding-rossmann" -> "ChenglongChen/kaggle-CrowdFlower"
"entron/entity-embedding-rossmann" -> "kaz-Anova/StackNet"
"entron/entity-embedding-rossmann" -> "Far0n/xgbfi"
"entron/entity-embedding-rossmann" -> "ycjuan/libffm" ["e"=1]
"entron/entity-embedding-rossmann" -> "ChenglongChen/kaggle-HomeDepot"
"entron/entity-embedding-rossmann" -> "MLWave/Kaggle-Ensemble-Guide"
"entron/entity-embedding-rossmann" -> "RGF-team/rgf"
"entron/entity-embedding-rossmann" -> "ycjuan/kaggle-2014-criteo" ["e"=1]
"entron/entity-embedding-rossmann" -> "anttttti/Wordbatch"
"entron/entity-embedding-rossmann" -> "sjvasquez/web-traffic-forecasting"
"entron/entity-embedding-rossmann" -> "baidu/fast_rgf"
"entron/entity-embedding-rossmann" -> "scikit-learn-contrib/category_encoders" ["e"=1]
"entron/entity-embedding-rossmann" -> "owenzhang/kaggle-avazu" ["e"=1]
"entron/entity-embedding-rossmann" -> "ycjuan/kaggle-avazu" ["e"=1]
"entron/entity-embedding-rossmann" -> "LenzDu/Kaggle-Competition-Favorita"
"tdeboissiere/Kaggle" -> "nagadomi/kaggle-coupon-purchase-prediction"
"tdeboissiere/Kaggle" -> "FindBoat/Kaggle"
"jfloff/pywFM" -> "RGF-team/rgf" ["e"=1]
"alibaba/Elastic-Federated-Learning-Solution" -> "Xtra-Computing/FedSim"
"nagadomi/kaggle-coupon-purchase-prediction" -> "threecourse/kaggle-coupon-purchase-prediction"
"davidgasquez/kaggle-airbnb" -> "svegapons/kaggle_airbnb"
"Xtra-Computing/FedSim" -> "Xtra-Computing/VertiBench"
"Cardal/Kaggle_WestNileVirus" -> "diefimov/west_nile_virus_2015"
"threecourse/kaggle-coupon-purchase-prediction" -> "nagadomi/kaggle-coupon-purchase-prediction"
"geffy/tffm" -> "baidu/fast_rgf" ["e"=1]
"scikit-learn-contrib/scikit-learn-contrib" -> "RGF-team/rgf" ["e"=1]
"thismlguy/analytics_vidhya" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"thismlguy/analytics_vidhya" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"thismlguy/analytics_vidhya" -> "Arturus/kaggle-web-traffic" ["e"=1]
"thismlguy/analytics_vidhya" -> "entron/entity-embedding-rossmann" ["e"=1]
"ChenglongChen/kaggle-HomeDepot" -> "ChenglongChen/kaggle-CrowdFlower"
"ChenglongChen/kaggle-HomeDepot" -> "ChenglongChen/tensorflow-XNN"
"ChenglongChen/kaggle-HomeDepot" -> "owenzhang/kaggle-avazu" ["e"=1]
"ChenglongChen/kaggle-HomeDepot" -> "ArdalanM/pyLightGBM"
"ChenglongChen/kaggle-HomeDepot" -> "emanuele/kaggle_pbr"
"ChenglongChen/kaggle-HomeDepot" -> "minerva-ml/open-solution-toxic-comments"
"ChenglongChen/kaggle-HomeDepot" -> "kaz-Anova/StackNet"
"ChenglongChen/kaggle-HomeDepot" -> "pjankiewicz/mercari-solution"
"ChenglongChen/kaggle-HomeDepot" -> "daxiongshu/light-ffm"
"ChenglongChen/kaggle-HomeDepot" -> "PavelOstyakov/toxic"
"ChenglongChen/kaggle-HomeDepot" -> "abhishekkrthakur/is_that_a_duplicate_quora_question" ["e"=1]
"ChenglongChen/kaggle-HomeDepot" -> "entron/entity-embedding-rossmann"
"ChenglongChen/kaggle-HomeDepot" -> "qqgeogor/kaggle-quora-solution-8th" ["e"=1]
"ChenglongChen/kaggle-HomeDepot" -> "MLWave/Kaggle-Ensemble-Guide"
"ChenglongChen/kaggle-HomeDepot" -> "anttttti/Wordbatch"
"groveco/content-engine" -> "ttvand/Santander-Product-Recommendation" ["e"=1]
"gereleth/kaggle-telstra" -> "gaborfodor/TNP"
"rushter/heamy" -> "Far0n/kaggletils"
"rushter/heamy" -> "kaz-Anova/StackNet"
"rushter/heamy" -> "limexp/xgbfir"
"rushter/heamy" -> "kaz-Anova/ensemble_amazon"
"rushter/heamy" -> "Far0n/xgbfi"
"rushter/heamy" -> "vecxoz/vecstack"
"rushter/heamy" -> "viisar/brew"
"rushter/heamy" -> "jayinai/kaggle-classification"
"rushter/heamy" -> "h2oai/pystacknet"
"rushter/heamy" -> "reiinakano/xcessiv" ["e"=1]
"rushter/heamy" -> "fukatani/stacked_generalization"
"rushter/heamy" -> "MLWave/Kaggle-Ensemble-Guide"
"rushter/heamy" -> "geffy/tffm" ["e"=1]
"rushter/heamy" -> "daxiongshu/light-ffm"
"rushter/heamy" -> "anttttti/Wordbatch"
"kaz-Anova/ensemble_amazon" -> "Far0n/kaggle-homesite"
"kaz-Anova/ensemble_amazon" -> "rushter/heamy"
"kaz-Anova/ensemble_amazon" -> "Far0n/xgbfi"
"kaz-Anova/ensemble_amazon" -> "Far0n/kaggletils"
"kaz-Anova/ensemble_amazon" -> "gatapia/py_ml_utils"
"kaz-Anova/ensemble_amazon" -> "ttvand/Santander-Product-Recommendation"
"kaz-Anova/ensemble_amazon" -> "geffy/kaggle-crowdflower"
"kaz-Anova/ensemble_amazon" -> "diefimov/santander_2016"
"kaz-Anova/ensemble_amazon" -> "kaz-Anova/StackNet"
"kaz-Anova/ensemble_amazon" -> "kaz-Anova/py_ml_utils"
"Far0n/kaggle-homesite" -> "abhishekkrthakur/walmart2015"
"Far0n/kaggle-homesite" -> "vopani/Kaggle_AirBnB"
"Far0n/kaggle-homesite" -> "tks0123456789/kaggle-Otto"
"diefimov/santander_2016" -> "alno/kaggle-allstate-claims-severity"
"diefimov/santander_2016" -> "daxiongshu/light-ffm"
"diefimov/santander_2016" -> "toshi-k/kaggle-santander-customer-satisfaction"
"diefimov/santander_2016" -> "MLWave/RGF-sklearn"
"fukatani/stacked_generalization" -> "ikki407/stacking"
"mirri66/xgbmagic" -> "Far0n/kaggle-homesite"
"sh1ng/arboretum" -> "sh1ng/imba"
"Keiku/kaggle-airbnb-recruiting-new-user-bookings" -> "svegapons/kaggle_airbnb"
"Keiku/kaggle-airbnb-recruiting-new-user-bookings" -> "nagadomi/kaggle-coupon-purchase-prediction"
"Keiku/kaggle-airbnb-recruiting-new-user-bookings" -> "brandenkmurray/kaggle"
"Keiku/kaggle-airbnb-recruiting-new-user-bookings" -> "ttvand/Facebook-V"
"Keiku/kaggle-airbnb-recruiting-new-user-bookings" -> "Far0n/kaggle-homesite"
"AI-secure/CoPur" -> "13thDayOfLunarMay/TECB-attack"
"AI-secure/CoPur" -> "blingcho/VFLIP-esorics24"
"amsqr/Allen_AI_Kaggle" -> "bwilbertz/kaggle_allen_ai"
"Cardal/Kaggle_AllenAIscience" -> "amsqr/Allen_AI_Kaggle"
"Cardal/Kaggle_AllenAIscience" -> "bwilbertz/kaggle_allen_ai"
"Cardal/Kaggle_AllenAIscience" -> "vopani/Kaggle_AirBnB"
"CNevd/libffm-ftrl" -> "daxiongshu/light-ffm" ["e"=1]
"bwilbertz/kaggle_allen_ai" -> "amsqr/Allen_AI_Kaggle"
"lferry007/LargeVis" -> "thomaskeck/FastBDT" ["e"=1]
"lferry007/LargeVis" -> "ArdalanM/pyLightGBM" ["e"=1]
"lferry007/LargeVis" -> "danielfrg/tsne" ["e"=1]
"EpistasisLab/scikit-rebate" -> "vecxoz/vecstack" ["e"=1]
"RGF-team/rgf" -> "baidu/fast_rgf"
"RGF-team/rgf" -> "anttttti/Wordbatch"
"RGF-team/rgf" -> "MLWave/RGF-sklearn"
"RGF-team/rgf" -> "Far0n/xgbfi"
"RGF-team/rgf" -> "alno/kaggle-allstate-claims-severity"
"RGF-team/rgf" -> "ArdalanM/pyLightGBM"
"RGF-team/rgf" -> "jfpuget/LibFM_in_Keras"
"RGF-team/rgf" -> "Xtra-Computing/thundergbm"
"RGF-team/rgf" -> "kaz-Anova/StackNet"
"RGF-team/rgf" -> "jfloff/pywFM" ["e"=1]
"RGF-team/rgf" -> "thomaskeck/FastBDT"
"RGF-team/rgf" -> "turi-code/python-libffm" ["e"=1]
"RGF-team/rgf" -> "TimSalimans/HiggsML"
"RGF-team/rgf" -> "geffy/tffm" ["e"=1]
"RGF-team/rgf" -> "jeongyoonlee/Kaggler"
"baidu/fast_rgf" -> "danielfrg/tsne"
"baidu/fast_rgf" -> "geffy/tffm" ["e"=1]
"baidu/fast_rgf" -> "thomaskeck/FastBDT"
"baidu/fast_rgf" -> "RGF-team/rgf"
"baidu/fast_rgf" -> "ycjuan/libffm" ["e"=1]
"baidu/fast_rgf" -> "srendle/libfm" ["e"=1]
"baidu/fast_rgf" -> "ArdalanM/pyLightGBM"
"baidu/fast_rgf" -> "Far0n/xgbfi"
"baidu/fast_rgf" -> "dmlc/wormhole" ["e"=1]
"baidu/fast_rgf" -> "daxiongshu/light-ffm"
"baidu/fast_rgf" -> "comadan/FM_FTRL" ["e"=1]
"baidu/fast_rgf" -> "Far0n/kaggletils"
"baidu/fast_rgf" -> "dmlc/difacto" ["e"=1]
"baidu/fast_rgf" -> "alno/kaggle-allstate-claims-severity"
"baidu/fast_rgf" -> "limexp/xgbfir"
"limexp/xgbfir" -> "Far0n/xgbfi"
"limexp/xgbfir" -> "rushter/heamy"
"limexp/xgbfir" -> "ArdalanM/pyLightGBM"
"limexp/xgbfir" -> "Far0n/kaggletils"
"limexp/xgbfir" -> "alno/kaggle-allstate-claims-severity"
"limexp/xgbfir" -> "baidu/fast_rgf"
"limexp/xgbfir" -> "diefimov/santander_2016"
"limexp/xgbfir" -> "kaz-Anova/StackNet"
"limexp/xgbfir" -> "sato9hara/defragTrees"
"limexp/xgbfir" -> "geffy/tffm" ["e"=1]
"limexp/xgbfir" -> "gereleth/kaggle-telstra"
"limexp/xgbfir" -> "daxiongshu/light-ffm"
"limexp/xgbfir" -> "dask/dask-xgboost" ["e"=1]
"limexp/xgbfir" -> "thomaskeck/FastBDT"
"limexp/xgbfir" -> "chasedehan/BoostARoota" ["e"=1]
"anttttti/Wordbatch" -> "pjankiewicz/mercari-solution"
"anttttti/Wordbatch" -> "ChenglongChen/tensorflow-XNN"
"anttttti/Wordbatch" -> "RGF-team/rgf"
"anttttti/Wordbatch" -> "minerva-ml/open-solution-toxic-comments"
"anttttti/Wordbatch" -> "jfpuget/LibFM_in_Keras"
"anttttti/Wordbatch" -> "xiaozhouwang/kaggle-porto-seguro"
"anttttti/Wordbatch" -> "Far0n/xgbfi"
"anttttti/Wordbatch" -> "PavelOstyakov/toxic"
"anttttti/Wordbatch" -> "kaz-Anova/StackNet"
"anttttti/Wordbatch" -> "plantsgo/Rental-Listing-Inquiries"
"anttttti/Wordbatch" -> "mxbi/mlcrate"
"anttttti/Wordbatch" -> "rushter/heamy"
"anttttti/Wordbatch" -> "daxiongshu/light-ffm"
"anttttti/Wordbatch" -> "comadan/FM_FTRL" ["e"=1]
"anttttti/Wordbatch" -> "ChenglongChen/kaggle-HomeDepot"
"FLAIR-THU/VFLAIR" -> "ngc436/awesome-vertical-federated-learning"
"FLAIR-THU/VFLAIR" -> "FuChong-cyber/label-inference-attacks"
"FLAIR-THU/VFLAIR" -> "shentt67/VFL_Survey"
"FLAIR-THU/VFLAIR" -> "Mr-Ace-1997/Backdoor-Attack-Against-Split-Neural-Network-Based-Vertical-Federated-Learning"
"FLAIR-THU/VFLAIR" -> "Xtra-Computing/FedSim"
"FLAIR-THU/VFLAIR" -> "yankang18/FedBCD"
"shenweichen/Coursera" -> "jiadaizhao/Advanced-Machine-Learning-Specialization" ["e"=1]
"shenweichen/Coursera" -> "SJD1882/MOOC-Coursera-Advanced-Machine-Learning" ["e"=1]
"carefree0910/MachineLearning" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"ikki407/stacking" -> "fukatani/stacked_generalization"
"ikki407/stacking" -> "luanshiyinyang/Stacking"
"ikki407/stacking" -> "dustinstansbury/stacked_generalization"
"ikki407/stacking" -> "vecxoz/vecstack"
"lsds/Saber" -> "lsds/LightSaber"
"ben519/MLPB" -> "kaz-Anova/StackNet" ["e"=1]
"ben519/MLPB" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"13thDayOfLunarMay/TECB-attack" -> "Mr-Ace-1997/Backdoor-Attack-Against-Split-Neural-Network-Based-Vertical-Federated-Learning"
"FindBoat/Kaggle" -> "ottogroup/kaggle"
"mkliegl/kaggle-Facebook-V" -> "ttvand/Facebook-V"
"SudalaiRajkumar/DataScienceR" -> "SudalaiRajkumar/awesome-public-datasets"
"jayinai/kaggle-classification" -> "jayinai/kaggle-regression"
"jayinai/kaggle-classification" -> "Far0n/kaggletils"
"jayinai/kaggle-classification" -> "rushter/heamy"
"jayinai/kaggle-classification" -> "jayinai/kaggle-sequence"
"jayinai/kaggle-classification" -> "jayinai/ml-cheatsheet"
"jayinai/kaggle-classification" -> "jayinai/kaggle-image"
"jayinai/kaggle-classification" -> "hse-aml/competitive-data-science"
"jayinai/kaggle-classification" -> "EliotAndres/kaggle-past-solutions"
"ttvand/Facebook-V" -> "mkliegl/kaggle-Facebook-V"
"ttvand/Facebook-V" -> "ttvand/Santander-Product-Recommendation"
"toshi-k/kaggle-distracted-driver-detection" -> "tks0123456789/kaggle-Otto" ["e"=1]
"jayinai/kaggle-regression" -> "jayinai/kaggle-classification"
"jayinai/kaggle-regression" -> "jayinai/kaggle-sequence"
"jayinai/kaggle-regression" -> "jayinai/ml-cheatsheet"
"jayinai/kaggle-image" -> "jayinai/kaggle-sequence"
"Xtra-Computing/OEBench" -> "Xtra-Computing/VertiBench"
"EliotAndres/kaggle-past-solutions" -> "geekinglcq/CDCS" ["e"=1]
"EliotAndres/kaggle-past-solutions" -> "ChenglongChen/kaggle-CrowdFlower"
"EliotAndres/kaggle-past-solutions" -> "kaz-Anova/StackNet"
"EliotAndres/kaggle-past-solutions" -> "Smilexuhc/Data-Competition-TopSolution" ["e"=1]
"EliotAndres/kaggle-past-solutions" -> "MLWave/Kaggle-Ensemble-Guide"
"EliotAndres/kaggle-past-solutions" -> "iphysresearch/DataSciComp" ["e"=1]
"EliotAndres/kaggle-past-solutions" -> "Far0n/xgbfi"
"EliotAndres/kaggle-past-solutions" -> "jeongyoonlee/Kaggler"
"EliotAndres/kaggle-past-solutions" -> "ChenglongChen/kaggle-HomeDepot"
"EliotAndres/kaggle-past-solutions" -> "jayinai/kaggle-classification"
"EliotAndres/kaggle-past-solutions" -> "wepe/O2O-Coupon-Usage-Forecast" ["e"=1]
"EliotAndres/kaggle-past-solutions" -> "Far0n/kaggletils"
"EliotAndres/kaggle-past-solutions" -> "gdb/kaggle"
"EliotAndres/kaggle-past-solutions" -> "ycjuan/kaggle-2014-criteo" ["e"=1]
"EliotAndres/kaggle-past-solutions" -> "SudalaiRajkumar/Kaggle"
"guillaume-chevalier/Awesome-Deep-Learning-Resources" -> "EliotAndres/kaggle-past-solutions" ["e"=1]
"DmitryUlyanov/Multicore-TSNE" -> "danielfrg/tsne" ["e"=1]
"DmitryUlyanov/Multicore-TSNE" -> "rushter/heamy" ["e"=1]
"DmitryUlyanov/Multicore-TSNE" -> "Far0n/kaggletils" ["e"=1]
"DmitryUlyanov/Multicore-TSNE" -> "kaz-Anova/StackNet" ["e"=1]
"vecxoz/vecstack" -> "rushter/heamy"
"vecxoz/vecstack" -> "flennerhag/mlens" ["e"=1]
"vecxoz/vecstack" -> "kaz-Anova/StackNet"
"vecxoz/vecstack" -> "ikki407/stacking"
"vecxoz/vecstack" -> "h2oai/pystacknet"
"vecxoz/vecstack" -> "RGF-team/rgf"
"vecxoz/vecstack" -> "fukatani/stacked_generalization"
"vecxoz/vecstack" -> "viisar/brew"
"vecxoz/vecstack" -> "EpistasisLab/scikit-rebate" ["e"=1]
"vecxoz/vecstack" -> "MLWave/Kaggle-Ensemble-Guide"
"vecxoz/vecstack" -> "scikit-learn-contrib/category_encoders" ["e"=1]
"vecxoz/vecstack" -> "rasbt/mlxtend" ["e"=1]
"vecxoz/vecstack" -> "anttttti/Wordbatch"
"vecxoz/vecstack" -> "TeamHG-Memex/eli5" ["e"=1]
"vecxoz/vecstack" -> "scikit-learn-contrib/boruta_py" ["e"=1]
"Xtra-Computing/thundergbm" -> "Xtra-Computing/thundersvm" ["e"=1]
"Xtra-Computing/thundergbm" -> "RGF-team/rgf"
"Xtra-Computing/thundergbm" -> "motefly/DeepGBM" ["e"=1]
"Xtra-Computing/thundergbm" -> "Xtra-Computing/briskstream"
"Xtra-Computing/thundergbm" -> "jjiantong/FastPGM"
"Xtra-Computing/thundergbm" -> "StatMixedML/LightGBMLSS" ["e"=1]
"Xtra-Computing/thundergbm" -> "dmlc/treelite" ["e"=1]
"Xtra-Computing/thundergbm" -> "Far0n/xgbfi"
"Xtra-Computing/thundergbm" -> "guoday/ctrNet-tool" ["e"=1]
"Xtra-Computing/thundergbm" -> "Xtra-Computing/G3"
"Xtra-Computing/thundergbm" -> "fabsig/GPBoost" ["e"=1]
"Xtra-Computing/thundergbm" -> "Xtra-Computing/FedTree"
"Xtra-Computing/thundergbm" -> "aksnzhy/xlearn" ["e"=1]
"Xtra-Computing/thundergbm" -> "benedekrozemberczki/awesome-gradient-boosting-papers" ["e"=1]
"RubensZimbres/Repo-2017" -> "SudalaiRajkumar/ML" ["e"=1]
"wepe/O2O-Coupon-Usage-Forecast" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"MaxHalford/xam" -> "MaxHalford/kaggle-recruit-restaurant"
"MaxHalford/xam" -> "Laurae2/Laurae" ["e"=1]
"MaxHalford/xam" -> "xiaozhouwang/kaggle-porto-seguro"
"savarin/neural-networks" -> "savarin/python_for_ml"
"ArdalanM/pyLightGBM" -> "Far0n/xgbfi"
"ArdalanM/pyLightGBM" -> "baidu/fast_rgf"
"ArdalanM/pyLightGBM" -> "thomaskeck/FastBDT"
"ArdalanM/pyLightGBM" -> "limexp/xgbfir"
"ArdalanM/pyLightGBM" -> "RGF-team/rgf"
"ArdalanM/pyLightGBM" -> "mirri66/xgbmagic"
"ArdalanM/pyLightGBM" -> "daxiongshu/light-ffm"
"ArdalanM/pyLightGBM" -> "plantsgo/Rental-Listing-Inquiries"
"ArdalanM/pyLightGBM" -> "ChenglongChen/kaggle-HomeDepot"
"ArdalanM/pyLightGBM" -> "gereleth/kaggle-telstra"
"ArdalanM/pyLightGBM" -> "MLWave/RGF-sklearn"
"ArdalanM/pyLightGBM" -> "diefimov/santander_2016"
"ArdalanM/pyLightGBM" -> "wepe/tgboost" ["e"=1]
"ArdalanM/pyLightGBM" -> "arogozhnikov/infiniteboost"
"ArdalanM/pyLightGBM" -> "rushter/heamy"
"wepe/tgboost" -> "ArdalanM/pyLightGBM" ["e"=1]
"wepe/tgboost" -> "plantsgo/Rental-Listing-Inquiries" ["e"=1]
"ttvand/Santander-Product-Recommendation" -> "ttvand/Facebook-V"
"ttvand/Santander-Product-Recommendation" -> "palevas/santander-product-recommendation-8th-place"
"ttvand/Santander-Product-Recommendation" -> "sonnylaskar/Competitions"
"ttvand/Santander-Product-Recommendation" -> "vopani/Kaggle_SantanderProductRecommendation"
"ttvand/Santander-Product-Recommendation" -> "diefimov/santander_2016"
"ttvand/Santander-Product-Recommendation" -> "kweonwooj/kaggle_santander_product_recommendation"
"flennerhag/mlens" -> "vecxoz/vecstack" ["e"=1]
"flennerhag/mlens" -> "rushter/heamy" ["e"=1]
"MaxPoon/coursera-Applied-Data-Science-with-Python" -> "MaxPoon/coursera-Advanced-Machine-Learning-specialization" ["e"=1]
"alno/kaggle-allstate-claims-severity" -> "ternaus/kaggle_allstate"
"alno/kaggle-allstate-claims-severity" -> "daxiongshu/light-ffm"
"alno/kaggle-allstate-claims-severity" -> "Far0n/xgbfi"
"alno/kaggle-allstate-claims-severity" -> "alno/kaggle-outbrain-click-prediction"
"alno/kaggle-allstate-claims-severity" -> "diefimov/santander_2016"
"alno/kaggle-allstate-claims-severity" -> "daxiongshu/stack-nn-tensorflow"
"Mr-Ace-1997/Backdoor-Attack-Against-Split-Neural-Network-Based-Vertical-Federated-Learning" -> "13thDayOfLunarMay/TECB-attack"
"Mr-Ace-1997/Backdoor-Attack-Against-Split-Neural-Network-Based-Vertical-Federated-Learning" -> "blingcho/VFLIP-esorics24"
"alexeygrigorev/outbrain-click-prediction-kaggle" -> "alno/kaggle-outbrain-click-prediction" ["e"=1]
"daxiongshu/light-ffm" -> "daxiongshu/stack-nn-tensorflow"
"daxiongshu/light-ffm" -> "alno/batch-learn"
"daxiongshu/light-ffm" -> "alno/kaggle-outbrain-click-prediction"
"alno/kaggle-outbrain-click-prediction" -> "daxiongshu/light-ffm"
"alno/kaggle-outbrain-click-prediction" -> "alno/batch-learn"
"ngc436/awesome-vertical-federated-learning" -> "Xtra-Computing/VertiBench"
"ngc436/awesome-vertical-federated-learning" -> "Xtra-Computing/FedSim"
"ngc436/awesome-vertical-federated-learning" -> "FLAIR-THU/VFLAIR"
"ngc436/awesome-vertical-federated-learning" -> "shentt67/VFL_Survey"
"pygda-team/pygda" -> "Xtra-Computing/OEBench"
"pygda-team/pygda" -> "Xtra-Computing/VertiBench"
"pygda-team/pygda" -> "Meihan-Liu/24AAAI-A2GNN"
"pygda-team/pygda" -> "Xtra-Computing/FeT"
"palevas/santander-product-recommendation-8th-place" -> "apryor6/Kaggle-Competition-Santander"
"palevas/santander-product-recommendation-8th-place" -> "jturkewitz/SideProjects"
"Xtra-Computing/VertiBench" -> "Xtra-Computing/OEBench"
"Xtra-Computing/VertiBench" -> "Xtra-Computing/PyOE"
"Xtra-Computing/VertiBench" -> "Xtra-Computing/FeT"
"airalcorn2/Recurrent-Convolutional-Neural-Network-Text-Classifier" -> "minerva-ml/open-solution-toxic-comments" ["e"=1]
"alno/batch-learn" -> "daxiongshu/stack-nn-tensorflow"
"alno/batch-learn" -> "daxiongshu/light-ffm"
"ternaus/kaggle_allstate" -> "sadz2201/Kaggle_Allstate"
"SudalaiRajkumar/TensorFlow-Book" -> "SudalaiRajkumar/PyTorch-Deep-Learning-Minicourse"
"reiinakano/xcessiv" -> "kaz-Anova/StackNet" ["e"=1]
"reiinakano/xcessiv" -> "rushter/heamy" ["e"=1]
"reiinakano/xcessiv" -> "Far0n/kaggletils" ["e"=1]
"reiinakano/xcessiv" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"lytforgood/MachineLearningTrick" -> "emanuele/kaggle_pbr" ["e"=1]
"lytforgood/MachineLearningTrick" -> "rushter/heamy" ["e"=1]
"jayinai/ml-interview" -> "jayinai/ml-cheatsheet" ["e"=1]
"guillaume-chevalier/seq2seq-signal-prediction" -> "Arturus/kaggle-web-traffic" ["e"=1]
"guillaume-chevalier/seq2seq-signal-prediction" -> "sjvasquez/web-traffic-forecasting" ["e"=1]
"emilwallner/How-to-learn-Deep-Learning" -> "the-black-knight-01/Data-Science-Competitions" ["e"=1]
"pylablanche/gcForest" -> "RGF-team/rgf" ["e"=1]
"kaz-Anova/StackNet" -> "rushter/heamy"
"kaz-Anova/StackNet" -> "Far0n/kaggletils"
"kaz-Anova/StackNet" -> "h2oai/pystacknet"
"kaz-Anova/StackNet" -> "MLWave/Kaggle-Ensemble-Guide"
"kaz-Anova/StackNet" -> "ChenglongChen/kaggle-CrowdFlower"
"kaz-Anova/StackNet" -> "reiinakano/xcessiv" ["e"=1]
"kaz-Anova/StackNet" -> "Far0n/xgbfi"
"kaz-Anova/StackNet" -> "ycjuan/libffm" ["e"=1]
"kaz-Anova/StackNet" -> "vecxoz/vecstack"
"kaz-Anova/StackNet" -> "entron/entity-embedding-rossmann"
"kaz-Anova/StackNet" -> "anttttti/Wordbatch"
"kaz-Anova/StackNet" -> "kaz-Anova/ensemble_amazon"
"kaz-Anova/StackNet" -> "RGF-team/rgf"
"kaz-Anova/StackNet" -> "jeongyoonlee/Kaggler"
"kaz-Anova/StackNet" -> "EliotAndres/kaggle-past-solutions"
"zygmuntz/hyperband" -> "RGF-team/rgf" ["e"=1]
"abhishekkrthakur/anime_hentai" -> "ankushshah89/ArticleCleaner"
"xiaoming-qxm/JData" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "ChenglongChen/kaggle-HomeDepot" ["e"=1]
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "kaz-Anova/StackNet" ["e"=1]
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "ChenglongChen/kaggle-CrowdFlower" ["e"=1]
"foursking1/jd" -> "plantsgo/Rental-Listing-Inquiries" ["e"=1]
"scikit-learn-contrib/py-earth" -> "RGF-team/rgf" ["e"=1]
"scikit-learn-contrib/py-earth" -> "rushter/heamy" ["e"=1]
"blingcho/VFLIP-esorics24" -> "Mr-Ace-1997/Backdoor-Attack-Against-Split-Neural-Network-Based-Vertical-Federated-Learning"
"blingcho/VFLIP-esorics24" -> "AI-secure/CoPur"
"plantsgo/Rental-Listing-Inquiries" -> "qqgeogor/kaggle-quora-solution-8th" ["e"=1]
"plantsgo/Rental-Listing-Inquiries" -> "plantsgo/kesci_ctrip"
"plantsgo/Rental-Listing-Inquiries" -> "qqgeogor/kaggle_quora_benchmark" ["e"=1]
"plantsgo/Rental-Listing-Inquiries" -> "Codefeater/Kaggle_Reuse_Code" ["e"=1]
"plantsgo/Rental-Listing-Inquiries" -> "plantsgo/Instacart-Market-Basket-Analysis"
"ScarletPan/Kaggle-Rental-Listing-Inquireies" -> "plantsgo/Rental-Listing-Inquiries"
"qqgeogor/kaggle_quora_benchmark" -> "MLWave/RGF-sklearn" ["e"=1]
"jayinai/ml-cheatsheet" -> "jayinai/kaggle-regression"
"jayinai/ml-cheatsheet" -> "jayinai/ml-interview" ["e"=1]
"Xtra-Computing/PyOE" -> "Xtra-Computing/VertiBench"
"Xtra-Computing/PyOE" -> "Xtra-Computing/OEBench"
"Xtra-Computing/PyOE" -> "Xtra-Computing/FeT"
"Xtra-Computing/FeT" -> "Xtra-Computing/VertiBench"
"Xtra-Computing/FeT" -> "Xtra-Computing/OEBench"
"Xtra-Computing/FeT" -> "Xtra-Computing/PyOE"
"Xtra-Computing/FeT" -> "Xtra-Computing/FedSim"
"SudalaiRajkumar/awesome-public-datasets" -> "SudalaiRajkumar/DataScienceR"
"SudalaiRajkumar/awesome-public-datasets" -> "SudalaiRajkumar/TensorFlow-Book"
"agconti/kaggle-titanic" -> "ahmedbesbes/How-to-score-0.8134-in-Titanic-Kaggle-Challenge"
"agconti/kaggle-titanic" -> "SudalaiRajkumar/Kaggle"
"agconti/kaggle-titanic" -> "HanXiaoyang/Kaggle_Titanic" ["e"=1]
"agconti/kaggle-titanic" -> "gdb/kaggle"
"agconti/kaggle-titanic" -> "ChenglongChen/kaggle-CrowdFlower"
"agconti/kaggle-titanic" -> "benanne/kaggle-galaxies" ["e"=1]
"agconti/kaggle-titanic" -> "agconti/KaggleAux"
"agconti/kaggle-titanic" -> "minsuk-heo/kaggle-titanic"
"agconti/kaggle-titanic" -> "savarin/pyconuk-introtutorial"
"agconti/kaggle-titanic" -> "trevorstephens/titanic"
"agconti/kaggle-titanic" -> "UltravioletAnalytics/kaggle-titanic"
"agconti/kaggle-titanic" -> "rasbt/pattern_classification" ["e"=1]
"agconti/kaggle-titanic" -> "aditya1702/Machine-Learning-and-Data-Science"
"agconti/kaggle-titanic" -> "nborwankar/LearnDataScience" ["e"=1]
"agconti/kaggle-titanic" -> "DrSkippy/Data-Science-45min-Intros" ["e"=1]
"alicezheng/feature-engineering-book" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"JianGoForIt/YellowFin" -> "ChenglongChen/tensorflow-XNN" ["e"=1]
"metrofun/machine-learning-surveys" -> "EliotAndres/kaggle-past-solutions" ["e"=1]
"dmlc/treelite" -> "RGF-team/rgf" ["e"=1]
"dmlc/treelite" -> "Xtra-Computing/thundergbm" ["e"=1]
"dmlc/treelite" -> "thomaskeck/FastBDT" ["e"=1]
"QuantScientist/Deep-Learning-Boot-Camp" -> "EliotAndres/kaggle-past-solutions" ["e"=1]
"QuantScientist/Deep-Learning-Boot-Camp" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"CastellanZhang/alphaPLM" -> "daxiongshu/light-ffm" ["e"=1]
"kingfengji/gcForest" -> "kaz-Anova/StackNet" ["e"=1]
"kingfengji/gcForest" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"kingfengji/gcForest" -> "RGF-team/rgf" ["e"=1]
"qqgeogor/kaggle-quora-solution-8th" -> "plantsgo/Rental-Listing-Inquiries" ["e"=1]
"qqgeogor/kaggle-quora-solution-8th" -> "thinline72/toxic" ["e"=1]
"sh1ng/imba" -> "sh1ng/arboretum"
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" -> "floydwch/kaggle-cli" ["e"=1]
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" -> "sh1ng/imba" ["e"=1]
"arogozhnikov/infiniteboost" -> "arogozhnikov/readable_capsnet"
"plantsgo/kesci_ctrip" -> "qiaoguan/Kesci-ctrip-room-prediction"
"plantsgo/kesci_ctrip" -> "plantsgo/Rental-Listing-Inquiries"
"plantsgo/kesci_ctrip" -> "OsloAI/personalized-matching"
"alexeygrigorev/classifying-crisis-reports-dsc" -> "ankushshah89/ArticleCleaner"
"lushl9301/Auto-Paper-Access" -> "jjiantong/FastPGM"
"qiaoguan/Kesci-ctrip-room-prediction" -> "plantsgo/kesci_ctrip"
"Kaggle/kaggle-api" ["l"="45.464,26.015", "c"=68]
"Kaggle/docker-python" ["l"="57.576,24.078"]
"theainerd/MLInterview" ["l"="48.269,26.232", "c"=323]
"SudalaiRajkumar/Kaggle" ["l"="57.475,24.168"]
"geekinglcq/CDCS" ["l"="53.447,27.287", "c"=60]
"EliotAndres/kaggle-past-solutions" ["l"="57.498,24.076"]
"aapatel09/handson-unsupervised-learning" ["l"="45.78,26.667", "c"=68]
"aditya1702/Machine-Learning-and-Data-Science" ["l"="57.569,24.183"]
"salimt/Courses-" ["l"="48.6,28.823", "c"=89]
"jiadaizhao/Advanced-Machine-Learning-Specialization" ["l"="57.451,23.832"]
"scikit-learn-contrib/metric-learn" ["l"="32.764,29.43", "c"=57]
"benhamner/Metrics" ["l"="57.532,24.094"]
"corazzon/KaggleStruggle" ["l"="-4.9,-23.192", "c"=164]
"hse-aml/natural-language-processing" ["l"="48.408,27.302", "c"=1060]
"hse-aml/intro-to-dl" ["l"="57.451,23.875"]
"hse-aml/bayesian-methods-for-ml" ["l"="57.5,23.88"]
"hse-aml/competitive-data-science" ["l"="57.471,23.918"]
"hse-aml/hadron-collider-machine-learning" ["l"="57.491,23.863"]
"danielfrg/tsne" ["l"="57.478,23.946"]
"baidu/fast_rgf" ["l"="57.471,23.972"]
"DmitryUlyanov/Multicore-TSNE" ["l"="45.128,26.212", "c"=68]
"Far0n/kaggletils" ["l"="57.454,23.99"]
"geffy/tffm" ["l"="57.95,23.375", "c"=161]
"lvdmaaten/bhtsne" ["l"="44.905,26.22", "c"=68]
"animebing/mnist_tsne" ["l"="57.448,23.902"]
"rushter/heamy" ["l"="57.438,23.998"]
"Far0n/xgbfi" ["l"="57.465,24.01"]
"srendle/libfm" ["l"="57.973,23.42", "c"=161]
"manifoldai/merf" ["l"="45.199,26.451", "c"=68]
"RGF-team/rgf" ["l"="57.486,23.996"]
"luanshiyinyang/Stacking" ["l"="57.271,23.951"]
"ShaoQiBNU/stacking" ["l"="57.248,23.931"]
"ikki407/stacking" ["l"="57.326,23.979"]
"XuQiao318/Ensemble-Learning" ["l"="57.244,23.955"]
"yanhan19940405/Data_machine_learning" ["l"="57.231,23.942"]
"luispedro/BuildingMachineLearningSystemsWithPython" ["l"="48.062,28.541", "c"=89]
"ChenglongChen/kaggle-CrowdFlower" ["l"="57.479,24.098"]
"kaz-Anova/StackNet" ["l"="57.449,24.024"]
"Arturus/kaggle-web-traffic" ["l"="57.427,24.106"]
"sjvasquez/web-traffic-forecasting" ["l"="57.411,24.069"]
"JEddy92/TimeSeries_Seq2Seq" ["l"="44.884,24.215", "c"=166]
"guillaume-chevalier/seq2seq-signal-prediction" ["l"="44.846,24.197", "c"=166]
"jfpuget/Kaggle" ["l"="57.376,24.067"]
"LenzDu/Kaggle-Competition-Favorita" ["l"="57.379,24.099"]
"ycjuan/libffm" ["l"="58.011,23.415", "c"=161]
"entron/entity-embedding-rossmann" ["l"="57.448,24.064"]
"aksnzhy/xlearn" ["l"="58.049,23.449", "c"=161]
"awslabs/gluonts" ["l"="45.525,26.33", "c"=68]
"farizrahman4u/seq2seq" ["l"="55.837,28.49", "c"=513]
"Alro10/deep-learning-time-series" ["l"="44.98,24.241", "c"=166]
"blue-yonder/tsfresh" ["l"="45.492,26.228", "c"=68]
"wepe/O2O-Coupon-Usage-Forecast" ["l"="57.843,22.723", "c"=976]
"trevorstephens/titanic" ["l"="57.61,24.263"]
"wehrley/wehrley.github.io" ["l"="57.638,24.297"]
"mdelhey/kaggle-titanic" ["l"="57.638,24.271"]
"statisticianinstilettos/recmetrics" ["l"="59.471,23.695", "c"=235]
"sjvasquez/instacart-basket-prediction" ["l"="57.407,24.038"]
"KazukiOnodera/Instacart" ["l"="57.383,24.043"]
"sh1ng/imba" ["l"="57.329,24.046"]
"qqgeogor/kaggle-quora-solution-8th" ["l"="53.047,27.51", "c"=60]
"sjvasquez/quora-duplicate-questions" ["l"="53.033,27.527", "c"=60]
"plantsgo/Rental-Listing-Inquiries" ["l"="57.357,24.005"]
"plantsgo/Instacart-Market-Basket-Analysis" ["l"="57.349,24.03"]
"anttttti/Wordbatch" ["l"="57.424,24.02"]
"jfpuget/LibFM_in_Keras" ["l"="57.384,24.027"]
"scikit-learn-contrib/DESlib" ["l"="45.375,26.417", "c"=68]
"Menelau/DESlib" ["l"="57.369,23.942"]
"vecxoz/vecstack" ["l"="57.404,23.993"]
"reshamas/fastai_deeplearn_part1" ["l"="49.345,28.638", "c"=1136]
"floydwch/kaggle-cli" ["l"="57.498,24.015"]
"motefly/DeepGBM" ["l"="58.076,23.416", "c"=161]
"Xtra-Computing/thundergbm" ["l"="57.612,23.972"]
"Yukong/Deeplearning.ai-Solutions" ["l"="48.508,28.658", "c"=89]
"iphysresearch/DataSciComp" ["l"="57.791,22.606", "c"=976]
"hzy46/TensorFlow-Time-Series-Examples" ["l"="-9.319,12.521", "c"=105]
"Shujian2015/FreeML" ["l"="48.288,26.183", "c"=323]
"PavelOstyakov/toxic" ["l"="57.476,24.02"]
"MLWave/Kaggle-Ensemble-Guide" ["l"="57.491,24.051"]
"minerva-ml/open-solution-toxic-comments" ["l"="57.472,23.997"]
"HunterMcGushion/hyperparameter_hunter" ["l"="45.447,26.339", "c"=68]
"abhayspawar/featexp" ["l"="45.47,26.377", "c"=68]
"ttvand/Santander-Product-Recommendation" ["l"="57.393,24.13"]
"yihong-chen/instacart-market-basket-analysis" ["l"="57.34,24.06"]
"limexp/xgbfir" ["l"="57.435,23.966"]
"jeongyoonlee/Kaggler" ["l"="57.466,24.054"]
"bestfitting/kaggle" ["l"="6.042,-41.09", "c"=259]
"nyanp/nyaggle" ["l"="6,-41.074", "c"=259]
"flowlight0/talkingdata-adtracking-fraud-detection" ["l"="6.062,-41.08", "c"=259]
"CuteChibiko/TalkingData" ["l"="57.356,24.05"]
"benanne/kaggle-galaxies" ["l"="44.738,27.655", "c"=789]
"FindBoat/Kaggle" ["l"="57.492,24.19"]
"ottogroup/kaggle" ["l"="57.454,24.204"]
"gatapia/py_ml_utils" ["l"="57.404,24.09"]
"kaz-Anova/py_ml_utils" ["l"="57.391,24.077"]
"kristpapadopoulos/seriesnet" ["l"="44.823,24.168", "c"=166]
"Mcompetitions/M5-methods" ["l"="45.032,24.286", "c"=166]
"MaxHalford/kaggle-recruit-restaurant" ["l"="57.349,24.091"]
"damitkwr/ESRNN-GPU" ["l"="45.044,24.269", "c"=166]
"WillKoehrsen/wikipedia-data-science" ["l"="45.65,26.541", "c"=68]
"SJD1882/MOOC-Coursera-Advanced-Machine-Learning" ["l"="57.437,23.809"]
"jlricon/advanced-deep-learning" ["l"="57.42,23.815"]
"lukanovak93/advanced-machine-learning-specialization" ["l"="57.447,23.791"]
"AlessandroCorradini/National-Research-University-Higher-School-of-Economics-Advanced-Machine-Learning-Specialization" ["l"="57.424,23.774"]
"Brandon-HY-Lin/coursera_How-to-Win-a-Data-Science-Competition-Learn-from-Top-Kagglers" ["l"="57.471,23.852"]
"legolas140/competitive-data-science-1" ["l"="57.481,23.879"]
"jayinai/kaggle-classification" ["l"="57.509,23.968"]
"mervynlee94/Advance-Machine-Learning" ["l"="57.488,23.905"]
"h2oai/pystacknet" ["l"="57.422,23.977"]
"pjankiewicz/mercari-solution" ["l"="57.377,23.996"]
"wepe/efficient-decision-tree-notes" ["l"="57.715,22.651", "c"=976]
"plantsgo/kesci_ctrip" ["l"="57.292,23.994"]
"mjbahmani/My-journey-in-the-data-science-world" ["l"="47.688,28.095", "c"=89]
"MaxPoon/coursera-Advanced-Machine-Learning-specialization" ["l"="57.403,23.83"]
"yandexdataschool/Practical_DL" ["l"="-44.358,26.065", "c"=551]
"yandexdataschool/Practical_RL" ["l"="57.56,17.956", "c"=45]
"romeokienzler/ibm-developer" ["l"="57.491,23.815"]
"DanAnastasyev/DeepNLP-Course" ["l"="-44.328,26.077", "c"=551]
"shenweichen/Coursera" ["l"="48.535,28.766", "c"=89]
"sim0nsays/dlcourse_ai" ["l"="-44.396,26.091", "c"=551]
"SudalaiRajkumar/PyTorch-Deep-Learning-Minicourse" ["l"="57.5,24.234"]
"SudalaiRajkumar/TensorFlow-Book" ["l"="57.491,24.214"]
"ceshine/favorita_sales_forecasting" ["l"="57.345,24.116"]
"LenzDu/Kaggle-Competition-Sberbank" ["l"="57.354,24.13"]
"KunalArora/kaggle-m5-forecasting" ["l"="57.332,24.126"]
"xiaozhouwang/kaggle-porto-seguro" ["l"="57.394,24.051"]
"minerva-ml/open-solution-home-credit" ["l"="-51.525,7.077", "c"=682]
"SudalaiRajkumar/ML" ["l"="57.451,24.225"]
"SudalaiRajkumar/NLP" ["l"="57.471,24.217"]
"sonnylaskar/Competitions" ["l"="57.431,24.181"]
"aayushmnit/Competitions" ["l"="57.441,24.281"]
"bishwarup307/AV_ClubMahindra" ["l"="57.447,24.256"]
"SudalaiRajkumar/awesome-public-datasets" ["l"="57.478,24.231"]
"louis925/kaggle-web-traffic-time-series-forecasting" ["l"="57.326,24.077"]
"diefimov/santander_2016" ["l"="57.422,24.006"]
"ChenglongChen/tensorflow-XNN" ["l"="57.403,24.015"]
"KazukiOnodera/Santander-Customer-Transaction-Prediction" ["l"="6.103,-41.042", "c"=259]
"darraghdog/avito-demand" ["l"="57.329,23.958"]
"nejumi/kaggle_memo" ["l"="6.007,-41.103", "c"=259]
"lopuhin/kaggle-script-template" ["l"="50.459,30.555", "c"=83]
"upura/knnFeat" ["l"="6.092,-41.124", "c"=259]
"mxbi/mlcrate" ["l"="57.37,23.967"]
"aerdem4/lofo-importance" ["l"="45.299,26.347", "c"=68]
"chasedehan/BoostARoota" ["l"="45.389,26.399", "c"=68]
"mattmotoki/toxic-comment-classification" ["l"="57.51,23.989"]
"minerva-ml/open-solution-data-science-bowl-2018" ["l"="50.561,30.567", "c"=83]
"peterhurford/kaggle-toxic_comment" ["l"="57.527,23.975"]
"aerdem4/mercari-price-suggestion" ["l"="52.963,27.517", "c"=60]
"thinline72/toxic" ["l"="57.525,23.992"]
"zake7749/DeepToxic" ["l"="57.543,23.999"]
"Donskov7/toxic_comments" ["l"="57.54,24.02"]
"aerdem4/kaggle-quora-dup" ["l"="53.021,27.496", "c"=60]
"ChenglongChen/kaggle-HomeDepot" ["l"="57.452,24.041"]
"oleg-yaroshevskiy/quest_qa_labeling" ["l"="57.426,22.884", "c"=876]
"lopuhin/kaggle-kuzushiji-2019" ["l"="50.383,30.511", "c"=83]
"mxbi/shell_scripts" ["l"="57.342,23.939"]
"mxbi/ftim" ["l"="57.328,23.931"]
"jhwjhw0123/Imbalance-XGBoost" ["l"="51.478,30.589", "c"=83]
"Cocoxili/DCASE2018Task2" ["l"="39.751,5.22", "c"=593]
"Abhishekmamidi123/Competitive_Data_Science" ["l"="57.502,23.849"]
"PPshrimpGo/BDCI2018-ChinauUicom-1st-solution" ["l"="57.81,22.637", "c"=976]
"OsloAI/personalized-matching" ["l"="57.248,23.998"]
"Nabarun21/deep_learning_in_computer_vision" ["l"="57.464,23.81"]
"iampukar/deep-learning-in-computer-vision" ["l"="57.466,23.795"]
"intellistream/StreamProcessing_ReadingList" ["l"="57.741,23.857"]
"intellistream/AllianceDB" ["l"="57.743,23.879"]
"mlandry22/kaggle" ["l"="57.451,24.183"]
"tks0123456789/kaggle-Otto" ["l"="57.451,24.152"]
"hse-aml/intro-to-dl-pytorch" ["l"="57.523,23.861"]
"ChenglongChen/tensorflow-DeepFM" ["l"="58.092,23.387", "c"=161]
"hexiangnan/neural_factorization_machine" ["l"="58.015,23.367", "c"=161]
"charleshm/deep-ctr" ["l"="57.806,22.741", "c"=976]
"ogerhsou/Youtube-Recommendation-Tensorflow" ["l"="58.038,23.312", "c"=161]
"siqi13579/ctr_Keras" ["l"="58.139,23.177", "c"=161]
"aayushmnit/cookbook" ["l"="57.432,24.327"]
"aayushmnit/Data-science-presentation" ["l"="57.427,24.351"]
"Xtra-Computing/briskstream" ["l"="57.686,23.923"]
"minsuk-heo/kaggle-titanic" ["l"="57.563,24.258"]
"ahmedbesbes/How-to-score-0.8134-in-Titanic-Kaggle-Challenge" ["l"="57.537,24.257"]
"viisar/brew" ["l"="57.401,23.971"]
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" ["l"="50.51,30.588", "c"=83]
"fastai/courses" ["l"="47.727,28.795", "c"=89]
"ArdalanM/pyLightGBM" ["l"="57.449,23.977"]
"EdwardTyantov/ultrasound-nerve-segmentation" ["l"="62.058,37.029", "c"=178]
"felixlaumon/kaggle-right-whale" ["l"="44.683,27.605", "c"=789]
"Xtra-Computing/G3" ["l"="57.652,23.942"]
"Xtra-Computing/ThundeRiNG" ["l"="57.671,23.915"]
"Xtra-Computing/thundersvm" ["l"="45.427,26.182", "c"=68]
"emanuele/kaggle_pbr" ["l"="57.474,24.036"]
"turi-code/python-libffm" ["l"="57.939,23.42", "c"=161]
"arogozhnikov/infiniteboost" ["l"="57.377,23.92"]
"ycjuan/kaggle-2014-criteo" ["l"="58.018,23.396", "c"=161]
"bingzhengwei/ftrl_proximal_lr" ["l"="57.895,23.441", "c"=161]
"daxiongshu/light-ffm" ["l"="57.434,23.981"]
"comadan/FM_FTRL" ["l"="57.936,23.436", "c"=161]
"ycjuan/kaggle-avazu" ["l"="57.984,23.407", "c"=161]
"owenzhang/kaggle-avazu" ["l"="57.983,23.433", "c"=161]
"kaz-Anova/ensemble_amazon" ["l"="57.435,24.042"]
"karpathy/tsnejs" ["l"="23.469,14.372", "c"=505]
"OpenMined/PyVertical" ["l"="51.439,2.062", "c"=663]
"Xtra-Computing/FedTree" ["l"="57.689,23.966"]
"h2oai/h2o-meetups" ["l"="-2.744,17.322", "c"=455]
"melisgl/higgsml" ["l"="57.554,23.907"]
"TimSalimans/HiggsML" ["l"="57.532,23.945"]
"the-black-knight-01/Data-Science-Competitions" ["l"="57.532,24.131"]
"earhian/Humpback-Whale-Identification-1st-" ["l"="50.575,30.484", "c"=83]
"aasu14/Data-Science-Hackathon-And-Competition" ["l"="47.252,24.827", "c"=425]
"aikho/awesome-feature-engineering" ["l"="45.563,26.469", "c"=68]
"benedekrozemberczki/awesome-gradient-boosting-papers" ["l"="23.666,14.884", "c"=728]
"ybabakhin/kaggle_salt_bes_phalanx" ["l"="50.556,30.456", "c"=83]
"apachecn/awesome-data-comp-solution" ["l"="57.925,22.627", "c"=976]
"yhangf/ML-NOTE" ["l"="50.484,28.109", "c"=104]
"Pysamlam/Tips-of-Feature-engineering" ["l"="50.62,27.968", "c"=104]
"drivendataorg/competition-winners" ["l"="42.385,24.293", "c"=76]
"finlay-liu/kaggle_public" ["l"="53.734,27.174", "c"=60]
"BloodAxe/pytorch-toolbelt" ["l"="50.815,30.167", "c"=83]
"savarin/pyconuk-introtutorial" ["l"="57.554,24.298"]
"savarin/python_for_ml" ["l"="57.57,24.324"]
"savarin/neural-networks" ["l"="57.557,24.338"]
"intellistream/MorphStream" ["l"="57.784,23.871"]
"intellistream/CANDY-Benchmark" ["l"="57.809,23.875"]
"intellistream/Sesame" ["l"="57.805,23.856"]
"gramolin/flavours-of-physics" ["l"="57.559,23.984"]
"MLWave/RGF-sklearn" ["l"="57.488,23.967"]
"lsds/LightSaber" ["l"="57.766,23.844"]
"lsds/Saber" ["l"="57.777,23.826"]
"arogozhnikov/readable_capsnet" ["l"="57.345,23.887"]
"apple/dmel-demo" ["l"="57.326,23.87"]
"TeamHG-Memex/eli5" ["l"="45.403,26.217", "c"=68]
"Kaggle/docker-rstats" ["l"="57.645,24.094"]
"jupyter/docker-stacks" ["l"="43.394,23.825", "c"=95]
"trent-b/iterative-stratification" ["l"="50.689,30.293", "c"=83]
"ghmagazine/kagglebook" ["l"="5.925,-41.124", "c"=259]
"microsoft/LightGBM" ["l"="45.601,26.085", "c"=68]
"pfnet-research/xfeat" ["l"="5.981,-41.072", "c"=259]
"YutaroOgawa/pytorch_advanced" ["l"="5.911,-41.136", "c"=259]
"gdb/kaggle" ["l"="57.496,24.142"]
"agconti/kaggle-titanic" ["l"="57.536,24.208"]
"tdeboissiere/Kaggle" ["l"="57.471,24.196"]
"Kaggle/docker-rcran" ["l"="57.673,24.103"]
"SkymindIO/dsx" ["l"="57.505,23.788"]
"dmlc/wormhole" ["l"="57.827,23.465", "c"=161]
"dnc1994/Kaggle-Playground" ["l"="0.488,12.336", "c"=370]
"thomaskeck/FastBDT" ["l"="57.455,23.942"]
"jjiantong/FastPGM" ["l"="57.722,23.976"]
"Xtra-Computing/SOFF" ["l"="57.705,23.948"]
"Samuel-Maddock/federated-boosted-dp-trees" ["l"="57.722,23.955"]
"mpearmain/BayesBoost" ["l"="57.526,24.034"]
"Far0n/kaggle-homesite" ["l"="57.464,24.113"]
"dmlc/difacto" ["l"="57.879,23.446", "c"=161]
"benanne/kaggle-ndsb" ["l"="44.771,27.64", "c"=789]
"openai/requests-for-research" ["l"="57.37,18.041", "c"=45]
"mila-iqia/summerschool2015" ["l"="44.875,27.654", "c"=789]
"wendykan/DeepLearningMovies" ["l"="53.123,25.319", "c"=172]
"Newmu/Theano-Tutorials" ["l"="44.821,27.657", "c"=789]
"sjchoi86/dl_tutorials" ["l"="-4.742,-22.994", "c"=164]
"geffy/kaggle-malware" ["l"="-42.108,-31.593", "c"=755]
"geffy/kaggle-crowdflower" ["l"="57.523,24.014"]
"Far0n/kaggle-lmgpip" ["l"="57.581,23.975"]
"Xtra-Computing/Vine" ["l"="57.682,23.9"]
"diefimov/west_nile_virus_2015" ["l"="57.621,23.937"]
"Cardal/Kaggle_WestNileVirus" ["l"="57.637,23.919"]
"lushl9301/Auto-Paper-Access" ["l"="57.743,23.98"]
"Xtra-Computing/PyOE" ["l"="57.822,23.976"]
"jturkewitz/SideProjects" ["l"="57.298,24.174"]
"palevas/santander-product-recommendation-8th-place" ["l"="57.322,24.168"]
"apryor6/Kaggle-Competition-Santander" ["l"="57.301,24.188"]
"RC4ML/FpgaNIC" ["l"="32.68,-2.892", "c"=561]
"ahara/kaggle_otto" ["l"="57.431,24.165"]
"microsoft/LightLDA" ["l"="57.817,23.504", "c"=161]
"NaiboWang/Bilibili-XMLSubtitle-to-ASS" ["l"="-52.894,-17.8", "c"=374]
"benfred/implicit" ["l"="59.45,23.761", "c"=235]
"maciejkula/spotlight" ["l"="59.513,23.761", "c"=235]
"ibayer/fastFM" ["l"="57.936,23.396", "c"=161]
"lyst/lightfm" ["l"="59.44,23.799", "c"=235]
"Lasagne/Lasagne" ["l"="47.886,29.002", "c"=89]
"facebookresearch/StarSpace" ["l"="52.979,25.615", "c"=172]
"FuChong-cyber/label-inference-attacks" ["l"="57.96,24.003"]
"FLAIR-THU/VFLAIR" ["l"="57.936,23.989"]
"xinjianluo/featureinference-vfl" ["l"="57.968,24.025"]
"OscarcarLi/label-protection" ["l"="57.984,24.012"]
"Mr-Ace-1997/Backdoor-Attack-Against-Split-Neural-Network-Based-Vertical-Federated-Learning" ["l"="57.972,23.985"]
"tqchen/xgboost" ["l"="57.956,23.406", "c"=161]
"HanXiaoyang/Kaggle_Titanic" ["l"="57.786,22.868", "c"=976]
"turi-code/SFrame" ["l"="57.685,23.535", "c"=161]
"h2oai/h2o-tutorials" ["l"="-2.736,17.347", "c"=455]
"abhishekkrthakur/walmart2015" ["l"="57.534,24.156"]
"abhishekkrthakur/anime_hentai" ["l"="57.587,24.169"]
"komiya-atsushi/xgboost-predictor-java" ["l"="57.862,23.489", "c"=161]
"andosa/treeinterpreter" ["l"="45.244,26.259", "c"=68]
"lytforgood/MachineLearningTrick" ["l"="57.764,22.709", "c"=976]
"MLWave/hodor-autoML" ["l"="57.557,24.045"]
"dustinstansbury/stacked_generalization" ["l"="57.363,24.019"]
"log0/vertebral" ["l"="57.563,24.025"]
"alno/kaggle-allstate-claims-severity" ["l"="57.454,23.962"]
"scikit-learn-contrib/category_encoders" ["l"="45.384,26.286", "c"=68]
"nagadomi/kaggle-coupon-purchase-prediction" ["l"="57.422,24.232"]
"jfloff/pywFM" ["l"="57.926,23.376", "c"=161]
"alibaba/Elastic-Federated-Learning-Solution" ["l"="57.912,23.949"]
"Xtra-Computing/FedSim" ["l"="57.893,23.975"]
"threecourse/kaggle-coupon-purchase-prediction" ["l"="57.414,24.254"]
"davidgasquez/kaggle-airbnb" ["l"="57.359,24.28"]
"svegapons/kaggle_airbnb" ["l"="57.376,24.25"]
"Xtra-Computing/VertiBench" ["l"="57.862,23.976"]
"scikit-learn-contrib/scikit-learn-contrib" ["l"="45.329,26.416", "c"=68]
"thismlguy/analytics_vidhya" ["l"="57.969,23.341", "c"=161]
"abhishekkrthakur/is_that_a_duplicate_quora_question" ["l"="53.065,27.514", "c"=60]
"groveco/content-engine" ["l"="59.466,23.912", "c"=235]
"gereleth/kaggle-telstra" ["l"="57.42,23.922"]
"gaborfodor/TNP" ["l"="57.404,23.891"]
"reiinakano/xcessiv" ["l"="45.468,26.228", "c"=68]
"fukatani/stacked_generalization" ["l"="57.354,23.984"]
"vopani/Kaggle_AirBnB" ["l"="57.405,24.174"]
"toshi-k/kaggle-santander-customer-satisfaction" ["l"="57.38,24.01"]
"mirri66/xgbmagic" ["l"="57.525,24.058"]
"sh1ng/arboretum" ["l"="57.295,24.052"]
"Keiku/kaggle-airbnb-recruiting-new-user-bookings" ["l"="57.4,24.204"]
"brandenkmurray/kaggle" ["l"="57.384,24.231"]
"ttvand/Facebook-V" ["l"="57.37,24.177"]
"AI-secure/CoPur" ["l"="58.005,23.976"]
"13thDayOfLunarMay/TECB-attack" ["l"="57.991,23.986"]
"blingcho/VFLIP-esorics24" ["l"="57.988,23.975"]
"amsqr/Allen_AI_Kaggle" ["l"="57.329,24.239"]
"bwilbertz/kaggle_allen_ai" ["l"="57.342,24.246"]
"Cardal/Kaggle_AllenAIscience" ["l"="57.356,24.223"]
"CNevd/libffm-ftrl" ["l"="57.895,23.457", "c"=161]
"lferry007/LargeVis" ["l"="44.938,26.231", "c"=68]
"EpistasisLab/scikit-rebate" ["l"="45.401,26.417", "c"=68]
"sato9hara/defragTrees" ["l"="57.398,23.907"]
"dask/dask-xgboost" ["l"="43.894,23.768", "c"=95]
"ngc436/awesome-vertical-federated-learning" ["l"="57.907,23.985"]
"shentt67/VFL_Survey" ["l"="57.924,23.976"]
"yankang18/FedBCD" ["l"="57.951,23.973"]
"carefree0910/MachineLearning" ["l"="50.671,27.953", "c"=104]
"ben519/MLPB" ["l"="40.384,35.298", "c"=51]
"mkliegl/kaggle-Facebook-V" ["l"="57.345,24.196"]
"SudalaiRajkumar/DataScienceR" ["l"="57.481,24.254"]
"jayinai/kaggle-regression" ["l"="57.547,23.933"]
"jayinai/kaggle-sequence" ["l"="57.547,23.953"]
"jayinai/ml-cheatsheet" ["l"="57.571,23.926"]
"jayinai/kaggle-image" ["l"="57.564,23.954"]
"toshi-k/kaggle-distracted-driver-detection" ["l"="33.269,30.034", "c"=57]
"Xtra-Computing/OEBench" ["l"="57.845,23.967"]
"Smilexuhc/Data-Competition-TopSolution" ["l"="50.603,28.086", "c"=104]
"guillaume-chevalier/Awesome-Deep-Learning-Resources" ["l"="47.675,28.639", "c"=89]
"flennerhag/mlens" ["l"="45.426,26.333", "c"=68]
"rasbt/mlxtend" ["l"="45.448,26.214", "c"=68]
"scikit-learn-contrib/boruta_py" ["l"="45.394,26.348", "c"=68]
"StatMixedML/LightGBMLSS" ["l"="45.315,26.431", "c"=68]
"dmlc/treelite" ["l"="57.807,23.578", "c"=161]
"guoday/ctrNet-tool" ["l"="57.799,22.655", "c"=976]
"fabsig/GPBoost" ["l"="45.274,26.412", "c"=68]
"RubensZimbres/Repo-2017" ["l"="47.712,28.059", "c"=89]
"MaxHalford/xam" ["l"="57.306,24.093"]
"Laurae2/Laurae" ["l"="58.313,23.748", "c"=161]
"wepe/tgboost" ["l"="57.696,22.661", "c"=976]
"vopani/Kaggle_SantanderProductRecommendation" ["l"="57.36,24.151"]
"kweonwooj/kaggle_santander_product_recommendation" ["l"="57.379,24.156"]
"MaxPoon/coursera-Applied-Data-Science-with-Python" ["l"="48.734,28.775", "c"=89]
"ternaus/kaggle_allstate" ["l"="57.505,23.919"]
"alno/kaggle-outbrain-click-prediction" ["l"="57.422,23.944"]
"daxiongshu/stack-nn-tensorflow" ["l"="57.434,23.94"]
"alexeygrigorev/outbrain-click-prediction-kaggle" ["l"="57.947,23.479", "c"=161]
"alno/batch-learn" ["l"="57.408,23.948"]
"pygda-team/pygda" ["l"="57.863,23.958"]
"Meihan-Liu/24AAAI-A2GNN" ["l"="57.873,23.94"]
"Xtra-Computing/FeT" ["l"="57.851,23.979"]
"airalcorn2/Recurrent-Convolutional-Neural-Network-Text-Classifier" ["l"="53.24,25.072", "c"=172]
"sadz2201/Kaggle_Allstate" ["l"="57.527,23.896"]
"jayinai/ml-interview" ["l"="48.208,26.263", "c"=323]
"emilwallner/How-to-learn-Deep-Learning" ["l"="-33.648,20.257", "c"=1190]
"pylablanche/gcForest" ["l"="58.323,23.63", "c"=161]
"zygmuntz/hyperband" ["l"="45.682,26.263", "c"=68]
"ankushshah89/ArticleCleaner" ["l"="57.621,24.182"]
"xiaoming-qxm/JData" ["l"="57.842,22.776", "c"=976]
"foursking1/jd" ["l"="57.799,22.799", "c"=976]
"scikit-learn-contrib/py-earth" ["l"="45.341,26.402", "c"=68]
"qqgeogor/kaggle_quora_benchmark" ["l"="53.027,27.514", "c"=60]
"Codefeater/Kaggle_Reuse_Code" ["l"="1.303,11.92", "c"=546]
"ScarletPan/Kaggle-Rental-Listing-Inquireies" ["l"="57.284,24.019"]
"agconti/KaggleAux" ["l"="57.56,24.232"]
"UltravioletAnalytics/kaggle-titanic" ["l"="57.58,24.222"]
"rasbt/pattern_classification" ["l"="48.049,28.441", "c"=89]
"nborwankar/LearnDataScience" ["l"="48.07,28.381", "c"=89]
"DrSkippy/Data-Science-45min-Intros" ["l"="48.072,28.432", "c"=89]
"alicezheng/feature-engineering-book" ["l"="45.556,26.435", "c"=68]
"JianGoForIt/YellowFin" ["l"="58.014,23.295", "c"=161]
"metrofun/machine-learning-surveys" ["l"="47.571,28.669", "c"=89]
"QuantScientist/Deep-Learning-Boot-Camp" ["l"="47.714,28.68", "c"=89]
"CastellanZhang/alphaPLM" ["l"="57.899,23.422", "c"=161]
"kingfengji/gcForest" ["l"="58.201,23.557", "c"=161]
"qiaoguan/Kesci-ctrip-room-prediction" ["l"="57.265,23.988"]
"alexeygrigorev/classifying-crisis-reports-dsc" ["l"="57.646,24.192"]
}