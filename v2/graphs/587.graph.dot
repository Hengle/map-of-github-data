digraph G {
"priya-dwivedi/cs224n-Squad-Project" -> "aswalin/SQuAD"
"priya-dwivedi/cs224n-Squad-Project" -> "chrischute/squad"
"priya-dwivedi/cs224n-Squad-Project" -> "Steven-Hewitt/QA-with-Tensorflow"
"priya-dwivedi/cs224n-Squad-Project" -> "allenai/bi-att-flow"
"priya-dwivedi/cs224n-Squad-Project" -> "HKUST-KnowComp/R-Net"
"priya-dwivedi/cs224n-Squad-Project" -> "localminimum/QANet"
"priya-dwivedi/cs224n-Squad-Project" -> "abisee/cs224n-win18-squad"
"priya-dwivedi/cs224n-Squad-Project" -> "deeppavlov/question_generation" ["e"=1]
"priya-dwivedi/cs224n-Squad-Project" -> "sachinbiradar9/Question-Answer-Selection" ["e"=1]
"priya-dwivedi/cs224n-Squad-Project" -> "5hirish/adam_qas"
"priya-dwivedi/cs224n-Squad-Project" -> "chiayewken/bert-qa" ["e"=1]
"priya-dwivedi/cs224n-Squad-Project" -> "ZacBi/CS224n-2019-solutions" ["e"=1]
"priya-dwivedi/cs224n-Squad-Project" -> "allenai/document-qa"
"priya-dwivedi/cs224n-Squad-Project" -> "ElizaLo/Question-Answering-based-on-SQuAD"
"priya-dwivedi/cs224n-Squad-Project" -> "dapurv5/awesome-question-answering" ["e"=1]
"312shan/rc_tf" -> "jingyihiter/myDuReader"
"312shan/rc_tf" -> "SeanLee97/QANet_dureader"
"312shan/rc_tf" -> "shiningliang/MRC2018"
"google/active-qa" -> "seominjoon/piqa"
"google-deepmind/narrativeqa" -> "allenai/document-qa"
"google-deepmind/narrativeqa" -> "google-research-datasets/wiki-reading"
"google-deepmind/narrativeqa" -> "mandarjoshi90/triviaqa"
"google-deepmind/narrativeqa" -> "danqi/rc-cnn-dailymail"
"google-deepmind/narrativeqa" -> "localminimum/QANet"
"google-deepmind/narrativeqa" -> "shuohangwang/SeqMatchSeq"
"google-deepmind/narrativeqa" -> "allenai/bi-att-flow"
"google-deepmind/narrativeqa" -> "mrqa/MRQA-Shared-Task-2019"
"google-deepmind/narrativeqa" -> "Maluuba/newsqa"
"google-deepmind/narrativeqa" -> "hitvoice/DrQA"
"google-deepmind/narrativeqa" -> "xinyadu/nqg" ["e"=1]
"google-deepmind/narrativeqa" -> "hsinyuan-huang/FlowQA"
"google-deepmind/narrativeqa" -> "shuohangwang/mprc"
"google-deepmind/narrativeqa" -> "karthikncode/nlp-datasets" ["e"=1]
"google-deepmind/narrativeqa" -> "nyu-dl/dl4ir-searchQA"
"aswalin/SQuAD" -> "priya-dwivedi/cs224n-Squad-Project"
"aswalin/SQuAD" -> "gauthierdmn/question_answering"
"aswalin/SQuAD" -> "chrischute/squad"
"aswalin/SQuAD" -> "aswalin/Kaggle"
"aswalin/SQuAD" -> "5hirish/adam_qas"
"aswalin/SQuAD" -> "ElizaLo/Question-Answering-based-on-SQuAD"
"aswalin/SQuAD" -> "allenai/document-qa"
"aswalin/SQuAD" -> "kushalj001/pytorch-question-answering"
"aswalin/SQuAD" -> "jind11/SQuAD-QA-System"
"localminimum/QANet" -> "HKUST-KnowComp/R-Net"
"localminimum/QANet" -> "localminimum/R-net"
"localminimum/QANet" -> "allenai/bi-att-flow"
"localminimum/QANet" -> "baidu/DuReader"
"localminimum/QANet" -> "hengruo/QANet-pytorch"
"localminimum/QANet" -> "allenai/document-qa"
"localminimum/QANet" -> "thunlp/RCPapers"
"localminimum/QANet" -> "SeanLee97/QANet_dureader"
"localminimum/QANet" -> "allenai/bilm-tf" ["e"=1]
"localminimum/QANet" -> "zhiguowang/BiMPM" ["e"=1]
"localminimum/QANet" -> "facebookresearch/DrQA"
"localminimum/QANet" -> "shuohangwang/SeqMatchSeq"
"localminimum/QANet" -> "hsinyuan-huang/FusionNet-NLI"
"localminimum/QANet" -> "taoshen58/DiSAN" ["e"=1]
"localminimum/QANet" -> "dapurv5/awesome-question-answering" ["e"=1]
"ymcui/cmrc2018" -> "DRCKnowledgeTeam/DRCD"
"ymcui/cmrc2018" -> "ymcui/cmrc2019"
"ymcui/cmrc2018" -> "ymcui/Chinese-RC-Datasets"
"ymcui/cmrc2018" -> "baidu/DuReader"
"ymcui/cmrc2018" -> "luhua-rain/MRC_Competition_Dureader" ["e"=1]
"ymcui/cmrc2018" -> "ymcui/Cross-Lingual-MRC"
"ymcui/cmrc2018" -> "pluto-junzeng/ChineseSquad"
"ymcui/cmrc2018" -> "ymcui/cmrc2017"
"ymcui/cmrc2018" -> "nlpdata/c3"
"ymcui/cmrc2018" -> "ymcui/Chinese-XLNet" ["e"=1]
"ymcui/cmrc2018" -> "ymcui/expmrc"
"ymcui/cmrc2018" -> "SeanLee97/QANet_dureader"
"ymcui/cmrc2018" -> "ymcui/MacBERT" ["e"=1]
"ymcui/cmrc2018" -> "thunlp/RCPapers"
"ymcui/cmrc2018" -> "china-ai-law-challenge/CAIL2019" ["e"=1]
"baidu/DuReader" -> "allenai/bi-att-flow"
"baidu/DuReader" -> "localminimum/QANet"
"baidu/DuReader" -> "luhua-rain/MRC_Competition_Dureader" ["e"=1]
"baidu/DuReader" -> "HKUST-KnowComp/R-Net"
"baidu/DuReader" -> "SeanLee97/QANet_dureader"
"baidu/DuReader" -> "thunlp/RCPapers"
"baidu/DuReader" -> "ymcui/cmrc2018"
"baidu/DuReader" -> "baidu/AnyQ" ["e"=1]
"baidu/DuReader" -> "ymcui/Chinese-XLNet" ["e"=1]
"baidu/DuReader" -> "allenai/document-qa"
"baidu/DuReader" -> "brightmart/roberta_zh" ["e"=1]
"baidu/DuReader" -> "facebookresearch/DrQA"
"baidu/DuReader" -> "PaddlePaddle/RocketQA" ["e"=1]
"baidu/DuReader" -> "NTMC-Community/MatchZoo" ["e"=1]
"baidu/DuReader" -> "baidu/Dialogue" ["e"=1]
"andrejonasson/dynamic-coattention-network-plus" -> "kihyunwon/dynamic-coattention-network"
"andrejonasson/dynamic-coattention-network-plus" -> "mjacar/tensorflow-dcn-plus"
"andrejonasson/dynamic-coattention-network-plus" -> "atulkum/co-attention"
"bwang514/awesome-HAI" -> "bwang514/PerformanceNet"
"bwang514/awesome-HAI" -> "janetyc/literature-human-ai-collaboration"
"bwang514/awesome-HAI" -> "acetylSv/GST-tacotron"
"bwang514/awesome-HAI" -> "hci-deadlines/hci-deadlines.github.io" ["e"=1]
"ymcui/cmrc2017" -> "ymcui/cmrc2019"
"ymcui/cmrc2017" -> "bojone/CCL_CMRC2017"
"ymcui/cmrc2017" -> "ymcui/Chinese-Cloze-RC"
"ymcui/cmrc2017" -> "ymcui/Cross-Lingual-MRC"
"ymcui/cmrc2017" -> "ymcui/alpaca.cpp"
"bojone/CCL_CMRC2017" -> "ymcui/cmrc2017"
"localminimum/R-net" -> "HKUST-KnowComp/R-Net"
"localminimum/R-net" -> "localminimum/QANet"
"localminimum/R-net" -> "YerevaNN/R-NET-in-Keras"
"localminimum/R-net" -> "unilight/R-NET-in-Tensorflow"
"localminimum/R-net" -> "allenai/bi-att-flow"
"localminimum/R-net" -> "allenai/document-qa"
"localminimum/R-net" -> "shuohangwang/SeqMatchSeq"
"localminimum/R-net" -> "matthew-z/R-net"
"localminimum/R-net" -> "kihyunwon/dynamic-coattention-network"
"localminimum/R-net" -> "OlavHN/attention-over-attention"
"localminimum/R-net" -> "baidu/DuReader"
"localminimum/R-net" -> "hsinyuan-huang/FusionNet-NLI"
"localminimum/R-net" -> "MurtyShikhar/Question-Answering"
"localminimum/R-net" -> "SeanLee97/QANet_dureader"
"localminimum/R-net" -> "thunlp/OpenQA"
"jojonki/BiDAF" -> "galsang/BiDAF-pytorch"
"jojonki/BiDAF" -> "kelayamatoz/BiDAF-PyTorch"
"jojonki/BiDAF" -> "atulkum/co-attention"
"jojonki/BiDAF" -> "thunlp/OpenQA"
"jojonki/BiDAF" -> "hengruo/QANet-pytorch"
"jojonki/BiDAF" -> "yanx27/DuReader_QANet_BiDAF"
"stanfordnlp/coqa-baselines" -> "hsinyuan-huang/FlowQA"
"Chia-Hsuan-Lee/Spoken-SQuAD" -> "Chia-Hsuan-Lee/ODSQA"
"unilight/R-NET-in-Tensorflow" -> "localminimum/R-net"
"unilight/R-NET-in-Tensorflow" -> "HKUST-KnowComp/R-Net"
"unilight/R-NET-in-Tensorflow" -> "matthew-z/R-net"
"unilight/R-NET-in-Tensorflow" -> "YerevaNN/R-NET-in-Keras"
"unilight/R-NET-in-Tensorflow" -> "theSage21/FusionNet"
"HKUST-KnowComp/R-Net" -> "localminimum/QANet"
"HKUST-KnowComp/R-Net" -> "localminimum/R-net"
"HKUST-KnowComp/R-Net" -> "allenai/bi-att-flow"
"HKUST-KnowComp/R-Net" -> "HKUST-KnowComp/MnemonicReader"
"HKUST-KnowComp/R-Net" -> "YerevaNN/R-NET-in-Keras"
"HKUST-KnowComp/R-Net" -> "unilight/R-NET-in-Tensorflow"
"HKUST-KnowComp/R-Net" -> "allenai/document-qa"
"HKUST-KnowComp/R-Net" -> "matthew-z/R-net"
"HKUST-KnowComp/R-Net" -> "baidu/DuReader"
"HKUST-KnowComp/R-Net" -> "shuohangwang/SeqMatchSeq"
"HKUST-KnowComp/R-Net" -> "hsinyuan-huang/FusionNet-NLI"
"HKUST-KnowComp/R-Net" -> "lixinsu/RCZoo"
"HKUST-KnowComp/R-Net" -> "hengruo/QANet-pytorch"
"HKUST-KnowComp/R-Net" -> "kevinduh/san_mrc"
"HKUST-KnowComp/R-Net" -> "spacemanidol/MSMARCO" ["e"=1]
"SeanLee97/QANet_dureader" -> "shiningliang/MRC2018"
"SeanLee97/QANet_dureader" -> "cooscao/BERT-Dureader"
"SeanLee97/QANet_dureader" -> "yanx27/DuReader_QANet_BiDAF"
"SeanLee97/QANet_dureader" -> "312shan/rc_tf"
"SeanLee97/QANet_dureader" -> "jingyihiter/myDuReader"
"SeanLee97/QANet_dureader" -> "xycforgithub/MultiTask-MRC"
"SeanLee97/QANet_dureader" -> "baidu/DuReader"
"SeanLee97/QANet_dureader" -> "matthew-z/R-net"
"SeanLee97/QANet_dureader" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2"
"SeanLee97/QANet_dureader" -> "ymcui/cmrc2019"
"SeanLee97/QANet_dureader" -> "localminimum/QANet"
"SeanLee97/QANet_dureader" -> "lixinsu/RCZoo"
"SeanLee97/QANet_dureader" -> "laddie132/Match-LSTM"
"SeanLee97/QANet_dureader" -> "qizhex/RACE_AR_baselines"
"SeanLee97/QANet_dureader" -> "zcgzcgzcg1/MRC_book"
"atulkum/co-attention" -> "ChawlaAvi/Question_Answering_on_SQuAD"
"galsang/BiDAF-pytorch" -> "jojonki/BiDAF"
"galsang/BiDAF-pytorch" -> "matthew-z/R-net"
"galsang/BiDAF-pytorch" -> "allenai/bi-att-flow"
"galsang/BiDAF-pytorch" -> "hengruo/QANet-pytorch"
"galsang/BiDAF-pytorch" -> "woshiyyya/DFGN-pytorch"
"galsang/BiDAF-pytorch" -> "ymcui/cmrc2019"
"galsang/BiDAF-pytorch" -> "andy840314/QANet-pytorch-"
"galsang/BiDAF-pytorch" -> "kushalj001/pytorch-question-answering"
"galsang/BiDAF-pytorch" -> "thunlp/RCPapers"
"galsang/BiDAF-pytorch" -> "BangLiu/QANet-PyTorch"
"galsang/BiDAF-pytorch" -> "huminghao16/MTMSN"
"galsang/BiDAF-pytorch" -> "shuohangwang/comatch"
"galsang/BiDAF-pytorch" -> "lixinsu/RCZoo"
"galsang/BiDAF-pytorch" -> "kamalkraj/BERT-SQuAD"
"galsang/BiDAF-pytorch" -> "kevinduh/san_mrc"
"lixinsu/RCZoo" -> "HKUST-KnowComp/MnemonicReader"
"lixinsu/RCZoo" -> "freefuiiismyname/capsule-mrc"
"lixinsu/RCZoo" -> "yuhaitao1994/AIchallenger2018_MachineReadingComprehension"
"lixinsu/RCZoo" -> "antdlx/aic18_rc"
"lixinsu/RCZoo" -> "SparkJiao/SLQA"
"hotpotqa/hotpot" -> "woshiyyya/DFGN-pytorch"
"hotpotqa/hotpot" -> "THUDM/CogQA"
"hotpotqa/hotpot" -> "shmsw25/DecompRC"
"hotpotqa/hotpot" -> "Alab-NII/2wikimultihop" ["e"=1]
"hotpotqa/hotpot" -> "qipeng/golden-retriever"
"hotpotqa/hotpot" -> "allenai/document-qa"
"hotpotqa/hotpot" -> "StonyBrookNLP/musique" ["e"=1]
"hotpotqa/hotpot" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"hotpotqa/hotpot" -> "easonnie/semanticRetrievalMRS"
"hotpotqa/hotpot" -> "yuwfan/HGN"
"hotpotqa/hotpot" -> "google-research-datasets/natural-questions" ["e"=1]
"hotpotqa/hotpot" -> "microsoft/SDNet"
"hotpotqa/hotpot" -> "shmsw25/single-hop-rc"
"hotpotqa/hotpot" -> "qizhex/RACE_AR_baselines"
"hotpotqa/hotpot" -> "mandarjoshi90/triviaqa"
"alontalmor/MultiQA" -> "mrqa/MRQA-Shared-Task-2019"
"DRCKnowledgeTeam/DRCD" -> "ymcui/cmrc2018"
"DRCKnowledgeTeam/DRCD" -> "ymcui/Chinese-RC-Datasets"
"DRCKnowledgeTeam/DRCD" -> "ymcui/cmrc2019"
"DRCKnowledgeTeam/DRCD" -> "Chia-Hsuan-Lee/ODSQA"
"DRCKnowledgeTeam/DRCD" -> "ckiplab/ckip-transformers" ["e"=1]
"DRCKnowledgeTeam/DRCD" -> "ckiplab/ckiptagger" ["e"=1]
"DRCKnowledgeTeam/DRCD" -> "nlpdata/c3"
"DRCKnowledgeTeam/DRCD" -> "pluto-junzeng/ChineseSquad"
"DRCKnowledgeTeam/DRCD" -> "allenai/document-qa"
"DRCKnowledgeTeam/DRCD" -> "ymcui/cmrc2017"
"thunlp/RCPapers" -> "thunlp/NREPapers" ["e"=1]
"thunlp/RCPapers" -> "thunlp/KRLPapers" ["e"=1]
"thunlp/RCPapers" -> "allenai/bi-att-flow"
"thunlp/RCPapers" -> "localminimum/QANet"
"thunlp/RCPapers" -> "baidu/DuReader"
"thunlp/RCPapers" -> "luhua-rain/MRC_Competition_Dureader" ["e"=1]
"thunlp/RCPapers" -> "lixinsu/RCZoo"
"thunlp/RCPapers" -> "HKUST-KnowComp/R-Net"
"thunlp/RCPapers" -> "allenai/document-qa"
"thunlp/RCPapers" -> "thunlp/NRLPapers" ["e"=1]
"thunlp/RCPapers" -> "sogou/SogouMRCToolkit" ["e"=1]
"thunlp/RCPapers" -> "thunlp/PLMpapers" ["e"=1]
"thunlp/RCPapers" -> "thunlp/SCPapers" ["e"=1]
"thunlp/RCPapers" -> "matthew-z/R-net"
"thunlp/RCPapers" -> "seriousran/awesome-qa" ["e"=1]
"rajarshd/Multi-Step-Reasoning" -> "seominjoon/denspi"
"rajarshd/Multi-Step-Reasoning" -> "shuohangwang/mprc"
"rajarshd/Multi-Step-Reasoning" -> "allenai/PathNet"
"THUDM/CogQA" -> "woshiyyya/DFGN-pytorch"
"THUDM/CogQA" -> "shmsw25/DecompRC"
"THUDM/CogQA" -> "hotpotqa/hotpot"
"THUDM/CogQA" -> "INK-USC/KagNet" ["e"=1]
"THUDM/CogQA" -> "rajarshd/Multi-Step-Reasoning"
"THUDM/CogQA" -> "haitian-sun/GraftNet" ["e"=1]
"THUDM/CogQA" -> "THUDM/CogKR" ["e"=1]
"THUDM/CogQA" -> "INK-USC/MHGRN" ["e"=1]
"THUDM/CogQA" -> "yicheng-w/CommonSenseMultiHopQA"
"THUDM/CogQA" -> "easonnie/semanticRetrievalMRS"
"THUDM/CogQA" -> "malllabiisc/EmbedKGQA" ["e"=1]
"THUDM/CogQA" -> "qipeng/golden-retriever"
"THUDM/CogQA" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"THUDM/CogQA" -> "thunlp/ERNIE" ["e"=1]
"THUDM/CogQA" -> "thunlp/OpenQA"
"shmsw25/DecompRC" -> "shmsw25/single-hop-rc"
"shmsw25/DecompRC" -> "facebookresearch/UnsupervisedDecomposition"
"shmsw25/DecompRC" -> "woshiyyya/DFGN-pytorch"
"shmsw25/DecompRC" -> "easonnie/semanticRetrievalMRS"
"shmsw25/DecompRC" -> "qipeng/golden-retriever"
"shmsw25/DecompRC" -> "JD-AI-Research-Silicon-Valley/SAE"
"shmsw25/DecompRC" -> "rajarshd/Multi-Step-Reasoning"
"shmsw25/DecompRC" -> "huminghao16/RE3QA"
"shmsw25/DecompRC" -> "THUDM/CogQA"
"chrischute/squad" -> "ankit-ai/SQUAD2.Q-Augmented-Dataset"
"chrischute/squad" -> "surbhardwaj/BERT-QnA-Squad_2.0_Finetuned_Model"
"chrischute/squad" -> "kevinduh/san_mrc"
"chrischute/squad" -> "chrischute/squad-transformer"
"chrischute/squad" -> "aswalin/SQuAD"
"chrischute/squad" -> "kamalkraj/BERT-SQuAD"
"chrischute/squad" -> "priya-dwivedi/cs224n-Squad-Project"
"chrischute/squad" -> "Oceanland-428/Improved-BiDAF-with-Self-Attention"
"chrischute/squad" -> "gauthierdmn/question_answering"
"chrischute/squad" -> "andy840314/QANet-pytorch-"
"hengruo/QANet-pytorch" -> "andy840314/QANet-pytorch-"
"hengruo/QANet-pytorch" -> "BangLiu/QANet-PyTorch"
"hengruo/QANet-pytorch" -> "localminimum/QANet"
"hengruo/QANet-pytorch" -> "matthew-z/R-net"
"hengruo/QANet-pytorch" -> "kevinduh/san_mrc"
"hengruo/QANet-pytorch" -> "jojonki/BiDAF"
"hengruo/QANet-pytorch" -> "HKUST-KnowComp/R-Net"
"hengruo/QANet-pytorch" -> "HKUST-KnowComp/MnemonicReader"
"hengruo/QANet-pytorch" -> "hitvoice/DrQA"
"hengruo/QANet-pytorch" -> "SeanLee97/QANet_dureader"
"hengruo/QANet-pytorch" -> "hackiey/QAnet-pytorch"
"hengruo/QANet-pytorch" -> "galsang/BiDAF-pytorch"
"hengruo/QANet-pytorch" -> "lixinsu/RCZoo"
"hengruo/QANet-pytorch" -> "hsinyuan-huang/FusionNet-NLI"
"hengruo/QANet-pytorch" -> "kanyun-inc/commonsense-rc"
"yicheng-w/CommonSenseMultiHopQA" -> "kanyun-inc/commonsense-rc"
"hsinyuan-huang/FlowQA" -> "microsoft/SDNet"
"hsinyuan-huang/FlowQA" -> "stanfordnlp/coqa-baselines"
"hsinyuan-huang/FlowQA" -> "prdwb/bert_hae" ["e"=1]
"hsinyuan-huang/FlowQA" -> "deepnlp-cs599-usc/quac" ["e"=1]
"hsinyuan-huang/FlowQA" -> "hugochan/GraphFlow"
"hsinyuan-huang/FlowQA" -> "allenai/allennlp-reading-comprehension-research"
"adamluo1995/Bert4CoQA" -> "NTU-SQUAD/transformers-coqa"
"adamluo1995/Bert4CoQA" -> "dido1998/coqa-bert-baselines"
"SeanLee97/nlp_learning" -> "SeanLee97/QANet_dureader"
"SeanLee97/nlp_learning" -> "lining0806/Naive-Bayes-Classifier"
"djunicode/resources" -> "quabanc/awesome-computer-science"
"djunicode/resources" -> "djunicode/DJ-Comps-Book-Exchange"
"djunicode/resources" -> "pujanm/Chat-IO"
"djunicode/resources" -> "krishamehta/Summer-Internships"
"kanyun-inc/commonsense-rc" -> "qizhex/RACE_AR_baselines"
"kanyun-inc/commonsense-rc" -> "bdhingra/ga-reader"
"bwang514/PerformanceNet" -> "zychen423/TF-1.9-cp36-cuda9.2-wheel"
"bwang514/PerformanceNet" -> "andy840314/QANet-pytorch-"
"bwang514/PerformanceNet" -> "ChienYuLu/Play-As-You-Like-Timbre-Enhanced-Multi-modal-Music-Style-Transfer"
"bwang514/PerformanceNet" -> "acetylSv/GST-tacotron"
"bwang514/PerformanceNet" -> "zychen423/UHop" ["e"=1]
"nyu-dl/bert-gen" -> "hsinyuan-huang/FlowQA"
"nyu-dl/bert-gen" -> "JianGuanTHU/StoryEndGen" ["e"=1]
"nyu-dl/bert-gen" -> "harvardnlp/data2text" ["e"=1]
"ChawlaAvi/Question_Answering_on_SQuAD" -> "calberti/bert-joint-nq"
"OpenPecha/Botok" -> "OpenPecha/pybo"
"OpenPecha/Botok" -> "tibetan-nlp/awesome-tibetan-nlp"
"OpenPecha/Botok" -> "tibetan-nlp/classical-tibetan-corpus"
"OpenPecha/Botok" -> "christiansteinert/tibetan-dictionary"
"OpenPecha/Botok" -> "tibetan-nlp/awesome-tibetan-canon"
"hsinyuan-huang/FusionNet-NLI" -> "kevinduh/san_mrc"
"hsinyuan-huang/FusionNet-NLI" -> "salesforce/cove"
"hsinyuan-huang/FusionNet-NLI" -> "allenai/document-qa"
"hsinyuan-huang/FusionNet-NLI" -> "HKUST-KnowComp/R-Net"
"hsinyuan-huang/FusionNet-NLI" -> "shimisalant/CWR"
"hsinyuan-huang/FusionNet-NLI" -> "HKUST-KnowComp/MnemonicReader"
"thunlp/OpenQA" -> "shuohangwang/mprc"
"thunlp/OpenQA" -> "rajarshd/Multi-Step-Reasoning"
"thunlp/OpenQA" -> "allenai/allennlp-reading-comprehension-research"
"thunlp/OpenQA" -> "shmsw25/qa-transfer"
"thunlp/OpenQA" -> "jojonki/BiDAF"
"thunlp/OpenQA" -> "allenai/document-qa"
"thunlp/OpenQA" -> "qipeng/golden-retriever"
"Qzsl123/dcmn" -> "pfZhu/duma_code"
"facebookresearch/UnsupervisedQA" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"facebookresearch/UnsupervisedQA" -> "alontalmor/MultiQA"
"shuohangwang/mprc" -> "bdhingra/quasar"
"shuohangwang/mprc" -> "rajarshd/Multi-Step-Reasoning"
"shuohangwang/mprc" -> "thunlp/OpenQA"
"shuohangwang/mprc" -> "yairf11/MUPPET"
"antdlx/aic18_rc" -> "NoneWait/ai_challenge_2018_mrc"
"antdlx/aic18_rc" -> "renjunxiang/oqmrc_2018"
"nlpdata/mrc_bert_baseline" -> "NoviScl/XLNet_DREAM"
"nlpdata/mrc_bert_baseline" -> "nlpdata/dream"
"nlpdata/mrc_bert_baseline" -> "nlpdata/strategy"
"woshiyyya/DFGN-pytorch" -> "shmsw25/DecompRC"
"woshiyyya/DFGN-pytorch" -> "JD-AI-Research-Silicon-Valley/SAE"
"woshiyyya/DFGN-pytorch" -> "THUDM/CogQA"
"woshiyyya/DFGN-pytorch" -> "hotpotqa/hotpot"
"woshiyyya/DFGN-pytorch" -> "yuwfan/HGN"
"woshiyyya/DFGN-pytorch" -> "shmsw25/single-hop-rc"
"woshiyyya/DFGN-pytorch" -> "yicheng-w/CommonSenseMultiHopQA"
"woshiyyya/DFGN-pytorch" -> "haitian-sun/GraftNet" ["e"=1]
"woshiyyya/DFGN-pytorch" -> "easonnie/semanticRetrievalMRS"
"woshiyyya/DFGN-pytorch" -> "qipeng/golden-retriever"
"shmsw25/single-hop-rc" -> "shmsw25/DecompRC"
"yala/text_nn" -> "taolei87/rcnn"
"nlpdata/dream" -> "nlpdata/mrc_bert_baseline"
"nlpdata/dream" -> "nlpdata/strategy"
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "YingZiqiang/LES-MMRC-Summary" ["e"=1]
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "cooscao/BERT-Dureader"
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "trib-plan/TriB-QA"
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "xwen99/DuReader-Robust-With-Paddlehub"
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "luhua-rain/MRC_Competition_Dureader" ["e"=1]
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "NoneWait/cail2019" ["e"=1]
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "xycforgithub/MultiTask-MRC"
"ymcui/Chinese-RC-Datasets" -> "ymcui/cmrc2019"
"ymcui/Chinese-RC-Datasets" -> "DRCKnowledgeTeam/DRCD"
"ymcui/Chinese-RC-Datasets" -> "ymcui/cmrc2018"
"ymcui/Chinese-RC-Datasets" -> "ewrfcas/bert_cn_finetune" ["e"=1]
"ymcui/Chinese-RC-Datasets" -> "xycforgithub/MultiTask-MRC"
"ymcui/Chinese-RC-Datasets" -> "allenai/allennlp-reading-comprehension"
"ymcui/Chinese-RC-Datasets" -> "XingLuxi/Knowledge-based-Machine-Reading-Comprehension-Papers"
"kevinduh/san_mrc" -> "HKUST-KnowComp/MnemonicReader"
"kevinduh/san_mrc" -> "hsinyuan-huang/FusionNet-NLI"
"kevinduh/san_mrc" -> "ankit-ai/BertQA-Attention-on-Steroids"
"kevinduh/san_mrc" -> "andy840314/QANet-pytorch-"
"kevinduh/san_mrc" -> "allenai/document-qa"
"kevinduh/san_mrc" -> "xycforgithub/MultiTask-MRC"
"kevinduh/san_mrc" -> "hitvoice/DrQA"
"kevinduh/san_mrc" -> "hengruo/QANet-pytorch"
"kevinduh/san_mrc" -> "kevinkwl/AoAReader"
"laddie132/Match-LSTM" -> "matthew-z/R-net"
"laddie132/Match-LSTM" -> "shuohangwang/SeqMatchSeq"
"laddie132/Match-LSTM" -> "HKUST-KnowComp/MnemonicReader"
"laddie132/Match-LSTM" -> "andy840314/QANet-pytorch-"
"laddie132/Match-LSTM" -> "xingdi-eric-yuan/MatchLSTM-PyTorch"
"laddie132/Match-LSTM" -> "xycforgithub/MultiTask-MRC"
"HKUST-KnowComp/MnemonicReader" -> "HKUST-KnowComp/R-Net"
"HKUST-KnowComp/MnemonicReader" -> "lixinsu/RCZoo"
"HKUST-KnowComp/MnemonicReader" -> "kevinduh/san_mrc"
"HKUST-KnowComp/MnemonicReader" -> "SparkJiao/SLQA"
"HKUST-KnowComp/MnemonicReader" -> "laddie132/Match-LSTM"
"HKUST-KnowComp/MnemonicReader" -> "matthew-z/R-net"
"HKUST-KnowComp/MnemonicReader" -> "allenai/document-qa"
"xycforgithub/MultiTask-MRC" -> "nlpdata/strategy"
"xycforgithub/MultiTask-MRC" -> "huminghao16/RE3QA"
"xycforgithub/MultiTask-MRC" -> "shmsw25/single-hop-rc"
"seominjoon/denspi" -> "seominjoon/piqa"
"seominjoon/denspi" -> "rajarshd/Multi-Step-Reasoning"
"seominjoon/denspi" -> "shmsw25/qa-hard-em"
"seominjoon/denspi" -> "qipeng/golden-retriever"
"NoviScl/BERT-RACE" -> "tosmaster/bert-race"
"NoviScl/BERT-RACE" -> "shuohangwang/comatch"
"NoviScl/BERT-RACE" -> "huminghao16/MTMSN"
"NoviScl/BERT-RACE" -> "NoviScl/XLNet_DREAM"
"microsoft/SDNet" -> "hsinyuan-huang/FlowQA"
"microsoft/SDNet" -> "zcgzcgzcg1/MRC_book"
"microsoft/SDNet" -> "stanfordnlp/coqa-baselines"
"microsoft/SDNet" -> "huminghao16/MTMSN"
"tibetan-nlp/tibetan-spellchecker" -> "tibetan-nlp/tibetan-verbs-database"
"tibetan-nlp/tibetan-spellchecker" -> "tibetan-nlp/awesome-tibetan-nlp"
"tibetan-nlp/awesome-tibetan-nlp" -> "tibetan-nlp/classical-tibetan-corpus"
"tibetan-nlp/awesome-tibetan-nlp" -> "buda-base/lucene-bo"
"tibetan-nlp/awesome-tibetan-nlp" -> "tibetan-nlp/tibetan-spellchecker"
"tibetan-nlp/awesome-tibetan-nlp" -> "tibetan-nlp/awesome-tibetan-canon"
"tibetan-nlp/awesome-tibetan-nlp" -> "tibetan-nlp/tibetan-verbs-database"
"tibetan-nlp/awesome-tibetan-nlp" -> "zmr/namsel"
"bat67/TibetanMNIST" -> "OpenPecha/pybo"
"quabanc/awesome-computer-science" -> "pujanm/Chat-IO"
"freefuiiismyname/capsule-mrc" -> "antdlx/aic18_rc"
"freefuiiismyname/capsule-mrc" -> "lixinsu/RCZoo"
"ymcui/cmrc2019" -> "ymcui/cmrc2017"
"ymcui/cmrc2019" -> "ymcui/cmrc2018"
"ymcui/cmrc2019" -> "ymcui/Chinese-RC-Datasets"
"ymcui/cmrc2019" -> "xycforgithub/MultiTask-MRC"
"ymcui/cmrc2019" -> "freefuiiismyname/capsule-mrc"
"ymcui/cmrc2019" -> "ymcui/Cross-Lingual-MRC"
"ymcui/cmrc2019" -> "NoneWait/cail2019" ["e"=1]
"ymcui/cmrc2019" -> "yanx27/DuReader_QANet_BiDAF"
"OpenPecha/pyewts" -> "rogerespel/ewts-js"
"OpenPecha/pyewts" -> "lscalendars/tibcalendar"
"mrqa/MRQA-Shared-Task-2019" -> "alontalmor/MultiQA"
"mrqa/MRQA-Shared-Task-2019" -> "shmsw25/qa-hard-em"
"mrqa/MRQA-Shared-Task-2019" -> "allenai/document-qa"
"mrqa/MRQA-Shared-Task-2019" -> "qipeng/golden-retriever"
"mrqa/MRQA-Shared-Task-2019" -> "nelson-liu/contextual-repr-analysis" ["e"=1]
"mrqa/MRQA-Shared-Task-2019" -> "shmsw25/DecompRC"
"mrqa/MRQA-Shared-Task-2019" -> "robinjia/adversarial-squad"
"mrqa/MRQA-Shared-Task-2019" -> "shuohangwang/mprc"
"mrqa/MRQA-Shared-Task-2019" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"mrqa/MRQA-Shared-Task-2019" -> "huminghao16/MTMSN"
"mrqa/MRQA-Shared-Task-2019" -> "Maluuba/newsqa"
"mrqa/MRQA-Shared-Task-2019" -> "easonnie/semanticRetrievalMRS"
"acetylSv/GST-tacotron" -> "zychen423/TF-1.9-cp36-cuda9.2-wheel"
"shiningliang/MRC2018" -> "SeanLee97/QANet_dureader"
"shiningliang/MRC2018" -> "jingyihiter/myDuReader"
"shiningliang/MRC2018" -> "312shan/rc_tf"
"shiningliang/MRC2018" -> "lxwuguang/G-Reader"
"shiningliang/MRC2018" -> "cooscao/BERT-Dureader"
"shiningliang/MRC2018" -> "yanx27/DuReader_QANet_BiDAF"
"andy840314/QANet-pytorch-" -> "BangLiu/QANet-PyTorch"
"andy840314/QANet-pytorch-" -> "hackiey/QAnet-pytorch"
"andy840314/QANet-pytorch-" -> "zychen423/TF-1.9-cp36-cuda9.2-wheel"
"andy840314/QANet-pytorch-" -> "hengruo/QANet-pytorch"
"andy840314/QANet-pytorch-" -> "bwang514/PerformanceNet"
"andy840314/QANet-pytorch-" -> "kevinduh/san_mrc"
"andy840314/QANet-pytorch-" -> "acetylSv/GST-tacotron"
"SparkJiao/SLQA" -> "allenai/allennlp-reading-comprehension-research"
"huminghao16/RE3QA" -> "huminghao16/MTMSN"
"huminghao16/RE3QA" -> "xycforgithub/MultiTask-MRC"
"huminghao16/RE3QA" -> "nlpdata/strategy"
"huminghao16/RE3QA" -> "bozheng-hit/NQ_BERT-DM"
"IndexFziQ/KMRC-Papers" -> "XingLuxi/Knowledge-based-Machine-Reading-Comprehension-Papers"
"yuhaitao1994/AIchallenger2018_MachineReadingComprehension" -> "lixinsu/RCZoo"
"yuhaitao1994/AIchallenger2018_MachineReadingComprehension" -> "antdlx/aic18_rc"
"yuhaitao1994/AIchallenger2018_MachineReadingComprehension" -> "freefuiiismyname/capsule-mrc"
"seominjoon/piqa" -> "xwhan/ProQA"
"ankit-ai/BertQA-Attention-on-Steroids" -> "kevinduh/san_mrc"
"ankit-ai/BertQA-Attention-on-Steroids" -> "ankit-ai/SQUAD2.Q-Augmented-Dataset"
"marquezo/qanet-impl" -> "hackiey/QAnet-pytorch"
"hackiey/torcheras" -> "hackiey/QAnet-pytorch"
"hackiey/QAnet-pytorch" -> "marquezo/qanet-impl"
"hackiey/QAnet-pytorch" -> "hackiey/torcheras"
"BangLiu/QANet-PyTorch" -> "andy840314/QANet-pytorch-"
"BangLiu/QANet-PyTorch" -> "hackiey/QAnet-pytorch"
"BangLiu/QANet-PyTorch" -> "hengruo/QANet-pytorch"
"noble6emc2/S-NET" -> "shimisalant/CWR"
"jiangycTarheel-zz/EPAr" -> "jiangycTarheel-zz/Adversarial-MultiHopQA"
"jiangycTarheel-zz/EPAr" -> "allenai/PathNet"
"boblandry/hangzhou_house_knowledge" -> "NoneWait/ai_challenge_2018_mrc"
"cooscao/BERT-Dureader" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2"
"cooscao/BERT-Dureader" -> "SeanLee97/QANet_dureader"
"cooscao/BERT-Dureader" -> "trib-plan/TriB-QA"
"cooscao/BERT-Dureader" -> "yanx27/DuReader_QANet_BiDAF"
"cooscao/BERT-Dureader" -> "xwen99/DuReader-Robust-With-Paddlehub"
"cooscao/BERT-Dureader" -> "luhua-rain/MRC_Competition_Dureader" ["e"=1]
"raylin1000/drop-bert" -> "eladsegal/DROP-explorer"
"Chia-Hsuan-Lee/ODSQA" -> "Chia-Hsuan-Lee/Spoken-SQuAD"
"trib-plan/TriB-QA" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2"
"thubtenrigzin/namsel-ocr" -> "tibetan-nlp/awesome-tibetan-canon"
"pluto-junzeng/ChineseSquad" -> "pluto-junzeng/CNSD" ["e"=1]
"pluto-junzeng/ChineseSquad" -> "junzeng-pluto/ChineseSquad"
"iflytek/HFL-Anthology" -> "iflytek/MiniRBT"
"iflytek/HFL-Anthology" -> "ymcui/MacBERT" ["e"=1]
"iflytek/HFL-Anthology" -> "ymcui/Chinese-ELECTRA" ["e"=1]
"iflytek/HFL-Anthology" -> "ymcui/LERT"
"iflytek/HFL-Anthology" -> "ymcui/Chinese-MobileBERT"
"iflytek/HFL-Anthology" -> "airaria/TextPruner"
"javirk/Person_remover" -> "geraldma1998/deep-weather-cleaner"
"javirk/Person_remover" -> "mandalarotation/Concurso_dotcsv_Proyecto_Mamografias"
"javirk/Person_remover" -> "vbayarri/RetoDotCSV2080Super"
"javirk/Person_remover" -> "jesusmartinoza/Open-eyes-using-Pix2Pix"
"javirk/Person_remover" -> "jozech/flash-to-ambient"
"javirk/Person_remover" -> "frantracer/pix2texture"
"javirk/Person_remover" -> "javirk/Person-remover-partial-convolutions"
"javirk/Person_remover" -> "hmartelb/Pix2Pix-Timbre-Transfer"
"eladsegal/tag-based-multi-span-extraction" -> "huminghao16/MTMSN"
"eladsegal/tag-based-multi-span-extraction" -> "llamazing/numnet_plus"
"eladsegal/tag-based-multi-span-extraction" -> "haonan-li/MultiSpanQA"
"eladsegal/tag-based-multi-span-extraction" -> "ag1988/injecting_numeracy"
"efficientqa/retrieval-based-baselines" -> "efficientqa/nq-open"
"cooelf/AwesomeMRC" -> "cooelf/SG-Net"
"cooelf/AwesomeMRC" -> "huminghao16/MTMSN"
"cooelf/AwesomeMRC" -> "cooelf/SemBERT"
"cooelf/AwesomeMRC" -> "luhua-rain/MRC_Competition_Dureader" ["e"=1]
"cooelf/AwesomeMRC" -> "xwen99/DuReader-Robust-With-Paddlehub"
"cooelf/AwesomeMRC" -> "eladsegal/tag-based-multi-span-extraction"
"cooelf/AwesomeMRC" -> "facebookresearch/SpanBERT" ["e"=1]
"cooelf/AwesomeMRC" -> "jinmang2/RetroReader"
"cooelf/AwesomeMRC" -> "thunlp/RCPapers"
"cooelf/AwesomeMRC" -> "songyingxin/MRC-Pytorch"
"cooelf/AwesomeMRC" -> "microsoft/SDNet"
"cooelf/AwesomeMRC" -> "Qzsl123/dcmn"
"cooelf/AwesomeMRC" -> "kevinduh/san_mrc"
"cooelf/AwesomeMRC" -> "yuwfan/HGN"
"cooelf/AwesomeMRC" -> "jind11/MMM-MCQA"
"llamazing/numnet_plus" -> "eladsegal/tag-based-multi-span-extraction"
"llamazing/numnet_plus" -> "ag1988/injecting_numeracy"
"llamazing/numnet_plus" -> "huminghao16/MTMSN"
"llamazing/numnet_plus" -> "ranqiu92/NumNet"
"llamazing/numnet_plus" -> "raylin1000/drop-bert"
"llamazing/numnet_plus" -> "nitishgupta/nmn-drop" ["e"=1]
"ag1988/injecting_numeracy" -> "llamazing/numnet_plus"
"ag1988/injecting_numeracy" -> "oriyor/turning_tables"
"shmsw25/qa-hard-em" -> "seominjoon/denspi"
"zcgzcgzcg1/MRC_book" -> "microsoft/SDNet"
"zcgzcgzcg1/MRC_book" -> "SeanLee97/QANet_dureader"
"zcgzcgzcg1/MRC_book" -> "xanhho/Reading-Comprehension-Question-Answering-Papers"
"kushalj001/pytorch-question-answering" -> "galsang/BiDAF-pytorch"
"kushalj001/pytorch-question-answering" -> "quabanc/awesome-computer-science"
"kushalj001/pytorch-question-answering" -> "djunicode/resources"
"kushalj001/pytorch-question-answering" -> "pujanm/Chat-IO"
"kushalj001/pytorch-question-answering" -> "ZhengZixiang/MRCPapers"
"kushalj001/pytorch-question-answering" -> "aswalin/SQuAD"
"kamalkraj/BERT-SQuAD" -> "surbhardwaj/BERT-QnA-Squad_2.0_Finetuned_Model"
"kamalkraj/BERT-SQuAD" -> "chrischute/squad"
"kamalkraj/BERT-SQuAD" -> "galsang/BiDAF-pytorch"
"kamalkraj/BERT-SQuAD" -> "cooelf/AwesomeMRC"
"kamalkraj/BERT-SQuAD" -> "seriousran/awesome-qa" ["e"=1]
"kamalkraj/BERT-SQuAD" -> "cdqa-suite/cdQA" ["e"=1]
"kamalkraj/BERT-SQuAD" -> "hitvoice/DrQA"
"kamalkraj/BERT-SQuAD" -> "kamalkraj/ALBERT-TF2.0" ["e"=1]
"kamalkraj/BERT-SQuAD" -> "chiayewken/bert-qa" ["e"=1]
"kamalkraj/BERT-SQuAD" -> "cooelf/SG-Net"
"kamalkraj/BERT-SQuAD" -> "alexaapo/BERT-based-pretrained-model-using-SQuAD-2.0-dataset"
"kamalkraj/BERT-SQuAD" -> "adamluo1995/Bert4CoQA"
"kamalkraj/BERT-SQuAD" -> "allenai/bi-att-flow"
"binnz/chinese-qa-with-bert" -> "sunlanchang/Chinese-QA-with-BERT"
"binnz/chinese-qa-with-bert" -> "cooscao/BERT-Dureader"
"facebookresearch/UnsupervisedDecomposition" -> "shmsw25/DecompRC"
"facebookresearch/UnsupervisedDecomposition" -> "shmsw25/single-hop-rc"
"facebookresearch/UnsupervisedDecomposition" -> "JD-AI-Research-Silicon-Valley/SAE"
"adriacabeza/Human-Extractor" -> "frantracer/pix2texture"
"adriacabeza/Human-Extractor" -> "jozech/flash-to-ambient"
"adriacabeza/Human-Extractor" -> "vbayarri/RetoDotCSV2080Super"
"adriacabeza/Human-Extractor" -> "mandalarotation/Concurso_dotcsv_Proyecto_Mamografias"
"adriacabeza/Human-Extractor" -> "jesusmartinoza/Open-eyes-using-Pix2Pix"
"hmartelb/Pix2Pix-Timbre-Transfer" -> "ChienYuLu/Play-As-You-Like-Timbre-Enhanced-Multi-modal-Music-Style-Transfer"
"hmartelb/Pix2Pix-Timbre-Transfer" -> "harskish/Timbrer"
"hmartelb/Pix2Pix-Timbre-Transfer" -> "geraldma1998/deep-weather-cleaner"
"hmartelb/Pix2Pix-Timbre-Transfer" -> "mandalarotation/Concurso_dotcsv_Proyecto_Mamografias"
"hmartelb/Pix2Pix-Timbre-Transfer" -> "frantracer/pix2texture"
"hmartelb/Pix2Pix-Timbre-Transfer" -> "jozech/flash-to-ambient"
"hmartelb/Pix2Pix-Timbre-Transfer" -> "vbayarri/RetoDotCSV2080Super"
"yuwfan/HGN" -> "JD-AI-Research-Silicon-Valley/SAE"
"yuwfan/HGN" -> "IBM/translucent-answer-prediction" ["e"=1]
"yuwfan/HGN" -> "woshiyyya/DFGN-pytorch"
"mandalarotation/Concurso_dotcsv_Proyecto_Mamografias" -> "frantracer/pix2texture"
"mandalarotation/Concurso_dotcsv_Proyecto_Mamografias" -> "jozech/flash-to-ambient"
"mandalarotation/Concurso_dotcsv_Proyecto_Mamografias" -> "vbayarri/RetoDotCSV2080Super"
"mandalarotation/Concurso_dotcsv_Proyecto_Mamografias" -> "geraldma1998/deep-weather-cleaner"
"cooelf/SemBERT" -> "cooelf/AwesomeMRC"
"cooelf/SemBERT" -> "cooelf/SG-Net"
"cooelf/SemBERT" -> "coetaur0/ESIM" ["e"=1]
"jind11/MMM-MCQA" -> "Qzsl123/dcmn"
"easonnie/semanticRetrievalMRS" -> "yairf11/MUPPET"
"bozheng-hit/NQ_BERT-DM" -> "allenai/allennlp-reading-comprehension"
"writepython/tibetan-ocr" -> "zmr/namsel"
"huminghao16/MTMSN" -> "eladsegal/tag-based-multi-span-extraction"
"huminghao16/MTMSN" -> "raylin1000/drop-bert"
"huminghao16/MTMSN" -> "huminghao16/RE3QA"
"JD-AI-Research-Silicon-Valley/SAE" -> "yuwfan/HGN"
"JD-AI-Research-Silicon-Valley/SAE" -> "vikas95/AIR-retriever"
"qipeng/golden-retriever" -> "easonnie/semanticRetrievalMRS"
"qipeng/golden-retriever" -> "yairf11/MUPPET"
"qipeng/golden-retriever" -> "shmsw25/DecompRC"
"qipeng/golden-retriever" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"qipeng/golden-retriever" -> "seominjoon/denspi"
"qipeng/golden-retriever" -> "rajarshd/Multi-Step-Reasoning"
"qipeng/golden-retriever" -> "facebookresearch/QA-Overlap" ["e"=1]
"qipeng/golden-retriever" -> "robinjia/adversarial-squad"
"qipeng/golden-retriever" -> "xwhan/ProQA"
"qipeng/golden-retriever" -> "facebookresearch/multihop_dense_retrieval" ["e"=1]
"qipeng/golden-retriever" -> "thunlp/OpenQA"
"qipeng/golden-retriever" -> "mrqa/MRQA-Shared-Task-2019"
"qipeng/golden-retriever" -> "zycdev/AISO"
"nlpdata/c3" -> "benywon/ReCO"
"nlpdata/c3" -> "ymcui/Chinese-RC-Datasets"
"shmsw25/AmbigQA" -> "xwhan/ProQA"
"shmsw25/AmbigQA" -> "efficientqa/retrieval-based-baselines"
"OpenPecha/pybo" -> "OpenPecha/Botok"
"xwen99/DuReader-Robust-With-Paddlehub" -> "lyj555/LICS2021_MRC"
"xwen99/DuReader-Robust-With-Paddlehub" -> "zhoujx4/DuReader-Checklist-BASELINE"
"xwen99/DuReader-Robust-With-Paddlehub" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2"
"jozech/flash-to-ambient" -> "frantracer/pix2texture"
"jozech/flash-to-ambient" -> "mandalarotation/Concurso_dotcsv_Proyecto_Mamografias"
"jozech/flash-to-ambient" -> "vbayarri/RetoDotCSV2080Super"
"frantracer/pix2texture" -> "jozech/flash-to-ambient"
"jesusmartinoza/Open-eyes-using-Pix2Pix" -> "frantracer/pix2texture"
"jesusmartinoza/Open-eyes-using-Pix2Pix" -> "jozech/flash-to-ambient"
"jesusmartinoza/Open-eyes-using-Pix2Pix" -> "vbayarri/RetoDotCSV2080Super"
"jesusmartinoza/Open-eyes-using-Pix2Pix" -> "mandalarotation/Concurso_dotcsv_Proyecto_Mamografias"
"geraldma1998/deep-weather-cleaner" -> "mandalarotation/Concurso_dotcsv_Proyecto_Mamografias"
"geraldma1998/deep-weather-cleaner" -> "frantracer/pix2texture"
"geraldma1998/deep-weather-cleaner" -> "vbayarri/RetoDotCSV2080Super"
"geraldma1998/deep-weather-cleaner" -> "jozech/flash-to-ambient"
"vbayarri/RetoDotCSV2080Super" -> "frantracer/pix2texture"
"vbayarri/RetoDotCSV2080Super" -> "jozech/flash-to-ambient"
"vbayarri/RetoDotCSV2080Super" -> "mandalarotation/Concurso_dotcsv_Proyecto_Mamografias"
"vbayarri/RetoDotCSV2080Super" -> "geraldma1998/deep-weather-cleaner"
"xwhan/ProQA" -> "AkariAsai/unanswerable_qa"
"lining0806/Naive-Bayes-Classifier" -> "youthpasses/bayes_classifier"
"lining0806/Naive-Bayes-Classifier" -> "pteric/Text-Classify-in-NaiveBayes"
"zhoujx4/DuReader-Checklist-BASELINE" -> "unbiarirang/Dureader-bert"
"zhoujx4/DuReader-Checklist-BASELINE" -> "xwen99/DuReader-Robust-With-Paddlehub"
"zhoujx4/DuReader-Checklist-BASELINE" -> "lyj555/LICS2021_MRC"
"airaria/TextPruner" -> "airaria/TextBrewer" ["e"=1]
"airaria/TextPruner" -> "yangjianxin1/LLMPruner" ["e"=1]
"airaria/TextPruner" -> "ymcui/MacBERT" ["e"=1]
"airaria/TextPruner" -> "princeton-nlp/CoFiPruning" ["e"=1]
"airaria/TextPruner" -> "fuxuelinwudi/ccks2021_track3_baseline"
"airaria/TextPruner" -> "ymcui/LERT"
"airaria/TextPruner" -> "WoosukKwon/retraining-free-pruning" ["e"=1]
"airaria/TextPruner" -> "ymcui/expmrc"
"airaria/TextPruner" -> "destwang/CTCResources" ["e"=1]
"alexaapo/BERT-based-pretrained-model-using-SQuAD-2.0-dataset" -> "Inyrkz/Question-Answering-using-BERT"
"tibetan-nlp/tibetan-verbs-database" -> "tibetan-nlp/tibetan-collation"
"tibetan-nlp/tibetan-verbs-database" -> "tibetan-nlp/awesome-tibetan-canon"
"tibetan-nlp/tibetan-collation" -> "tibetan-nlp/tibetan-verbs-database"
"youthpasses/bayes_classifier" -> "lining0806/Naive-Bayes-Classifier"
"ymcui/PERT" -> "ymcui/LERT"
"ymcui/PERT" -> "ymcui/MacBERT" ["e"=1]
"ymcui/PERT" -> "ymcui/expmrc"
"ymcui/PERT" -> "bojone/Pattern-Exploiting-Training" ["e"=1]
"ymcui/PERT" -> "ymcui/cmrc2018"
"ymcui/PERT" -> "ymcui/cmrc2019"
"ymcui/PERT" -> "iflytek/VLE"
"ymcui/PERT" -> "ymcui/Chinese-ELECTRA" ["e"=1]
"ymcui/PERT" -> "CLUEbenchmark/DataCLUE"
"ymcui/PERT" -> "airaria/TextPruner"
"ymcui/PERT" -> "ymcui/Cross-Lingual-MRC"
"ymcui/PERT" -> "iflytek/cino"
"ymcui/PERT" -> "iflytek/MiniRBT"
"bojone/CLUE-bert4keras" -> "ZhuiyiTechnology/roformer-v2" ["e"=1]
"bojone/CLUE-bert4keras" -> "CLUEbenchmark/DataCLUE"
"bojone/CLUE-bert4keras" -> "nishiwen1214/GLUE-bert4keras" ["e"=1]
"ganeshjawahar/dl4nlp-made-easy" -> "ganeshjawahar/tweet2vec"
"carpedm20/attentive-reader-tensorflow" -> "thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend"
"carpedm20/attentive-reader-tensorflow" -> "aseveryn/deep-qa" ["e"=1]
"carpedm20/attentive-reader-tensorflow" -> "bdhingra/ga-reader"
"CLUEbenchmark/DataCLUE" -> "bojone/CLUE-bert4keras"
"taolei87/rcnn" -> "yala/text_nn"
"taolei87/rcnn" -> "RiaanZoetmulder/Master-Thesis"
"taolei87/rcnn" -> "taolei87/text_convnet"
"taolei87/rcnn" -> "stanfordnlp/spinn" ["e"=1]
"taolei87/rcnn" -> "carpedm20/attentive-reader-tensorflow"
"taolei87/rcnn" -> "taolei87/askubuntu"
"taolei87/rcnn" -> "clab/dynet_tutorial_examples" ["e"=1]
"taolei87/rcnn" -> "yuanzh/aspect_adversarial"
"sunlab-osu/ReasonBERT" -> "oriyor/turning_tables"
"iflytek/cino" -> "FudanNLP/Tibetan-Classification"
"iflytek/cino" -> "luciusssss/mc2_corpus"
"iflytek/cino" -> "NLP-Learning/TiLamb"
"liyc7711/tip-las" -> "FudanNLP/Tibetan-Classification"
"liyc7711/tip-las" -> "OpenPecha/Botok"
"haonan-li/MultiSpanQA" -> "dmis-lab/LIQUID"
"kmul00/torch-vol" -> "ganeshjawahar/dl4nlp-made-easy"
"ymcui/LERT" -> "ymcui/PERT"
"ymcui/LERT" -> "ymcui/MacBERT" ["e"=1]
"ymcui/LERT" -> "iflytek/MiniRBT"
"iflytek/MiniRBT" -> "iflytek/VLE"
"iflytek/MiniRBT" -> "iflytek/HFL-Anthology"
"iflytek/MiniRBT" -> "ymcui/LERT"
"iflytek/MiniRBT" -> "ymcui/PERT"
"iflytek/MiniRBT" -> "Lisennlp/TinyBert" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "carpedm20/attentive-reader-tensorflow"
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "danqi/rc-cnn-dailymail"
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "google-deepmind/rc-data" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "shuohangwang/SeqMatchSeq"
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "shawntan/neural-turing-machines" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "YerevaNN/Dynamic-memory-networks-in-Theano" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "OlavHN/attention-over-attention"
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "ymcui/Eval-on-NN-of-RC"
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "google-research-datasets/wiki-reading"
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "cheng6076/SNLI-attention" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "rkadlec/asreader"
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "bdhingra/ga-reader"
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "mila-iqia/blocks-examples" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"5hirish/adam_qas" -> "raoariel/NLP-Question-Answer-System"
"5hirish/adam_qas" -> "aswalin/SQuAD"
"5hirish/adam_qas" -> "l11x0m7/Question_Answering_Models" ["e"=1]
"5hirish/adam_qas" -> "bwbaugh/causeofwhy"
"5hirish/adam_qas" -> "explosion/spacy-dev-resources" ["e"=1]
"5hirish/adam_qas" -> "tokestermw/spacy_hunspell" ["e"=1]
"dmis-lab/LIQUID" -> "haonan-li/MultiSpanQA"
"allenai/bi-att-flow" -> "localminimum/QANet"
"allenai/bi-att-flow" -> "HKUST-KnowComp/R-Net"
"allenai/bi-att-flow" -> "baidu/DuReader"
"allenai/bi-att-flow" -> "localminimum/R-net"
"allenai/bi-att-flow" -> "allenai/document-qa"
"allenai/bi-att-flow" -> "facebookresearch/DrQA"
"allenai/bi-att-flow" -> "shuohangwang/SeqMatchSeq"
"allenai/bi-att-flow" -> "allenai/bilm-tf" ["e"=1]
"allenai/bi-att-flow" -> "thunlp/RCPapers"
"allenai/bi-att-flow" -> "abisee/pointer-generator" ["e"=1]
"allenai/bi-att-flow" -> "zhiguowang/BiMPM" ["e"=1]
"allenai/bi-att-flow" -> "facebookresearch/InferSent" ["e"=1]
"allenai/bi-att-flow" -> "galsang/BiDAF-pytorch"
"allenai/bi-att-flow" -> "facebookarchive/MemNN" ["e"=1]
"allenai/bi-att-flow" -> "google-deepmind/rc-data" ["e"=1]
"google-research-datasets/wiki-reading" -> "google-deepmind/narrativeqa"
"google-research-datasets/wiki-reading" -> "thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend"
"iflytek/VLE" -> "ymcui/alpaca.cpp"
"iflytek/VLE" -> "ymcui/expmrc"
"iflytek/VLE" -> "ymcui/cmrc2017"
"ganeshjawahar/tweet-classify" -> "ganeshjawahar/tweet2vec"
"ganeshjawahar/tweet-classify" -> "ganeshjawahar/torch-teacher"
"danqi/rc-cnn-dailymail" -> "bdhingra/ga-reader"
"danqi/rc-cnn-dailymail" -> "rkadlec/asreader"
"danqi/rc-cnn-dailymail" -> "qizhex/RACE_AR_baselines"
"danqi/rc-cnn-dailymail" -> "thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend"
"danqi/rc-cnn-dailymail" -> "google-deepmind/rc-data" ["e"=1]
"danqi/rc-cnn-dailymail" -> "shuohangwang/SeqMatchSeq"
"danqi/rc-cnn-dailymail" -> "google-deepmind/narrativeqa"
"danqi/rc-cnn-dailymail" -> "carpedm20/attentive-reader-tensorflow"
"danqi/rc-cnn-dailymail" -> "allenai/bi-att-flow"
"uclnlp/jack" -> "hengruo/QANet-pytorch"
"uclnlp/jack" -> "uclnlp/inferbeddings"
"uclnlp/jack" -> "thunlp/OpenQA"
"ymcui/Chinese-Cloze-RC" -> "ymcui/cmrc2017"
"ymcui/Eval-on-NN-of-RC" -> "rkadlec/asreader"
"ymcui/Eval-on-NN-of-RC" -> "cairoHy/RC-experiments"
"ymcui/Eval-on-NN-of-RC" -> "ganeshjawahar/torch-teacher"
"ymcui/Eval-on-NN-of-RC" -> "bdhingra/ga-reader"
"christiansteinert/tibetan-dictionary" -> "buda-base/lucene-bo"
"christiansteinert/tibetan-dictionary" -> "tibetan-nlp/classical-tibetan-corpus"
"christiansteinert/tibetan-dictionary" -> "OpenPecha/pyewts"
"christiansteinert/tibetan-dictionary" -> "tibetan-nlp/awesome-tibetan-canon"
"christiansteinert/tibetan-dictionary" -> "tibetan-nlp/awesome-tibetan-nlp"
"christiansteinert/tibetan-dictionary" -> "tibetan-nlp/tibetan-verbs-database"
"christiansteinert/tibetan-dictionary" -> "Esukhia/dakje-desktop"
"bwbaugh/causeofwhy" -> "mayank26saxena/gender-bias-analysis-in-movies"
"rkadlec/asreader" -> "ymcui/Eval-on-NN-of-RC"
"rkadlec/asreader" -> "nschuc/alternating-reader-tf"
"rkadlec/asreader" -> "bdhingra/ga-reader"
"rkadlec/asreader" -> "danqi/rc-cnn-dailymail"
"rkadlec/asreader" -> "shimisalant/RaSoR"
"ganeshjawahar/torch-teacher" -> "ganeshjawahar/tweet-classify"
"shuohangwang/SeqMatchSeq" -> "laddie132/Match-LSTM"
"shuohangwang/SeqMatchSeq" -> "zhiguowang/BiMPM" ["e"=1]
"shuohangwang/SeqMatchSeq" -> "bdhingra/ga-reader"
"shuohangwang/SeqMatchSeq" -> "OlavHN/attention-over-attention"
"shuohangwang/SeqMatchSeq" -> "HKUST-KnowComp/R-Net"
"shuohangwang/SeqMatchSeq" -> "allenai/bi-att-flow"
"shuohangwang/SeqMatchSeq" -> "erickrf/multiffn-nli" ["e"=1]
"shuohangwang/SeqMatchSeq" -> "localminimum/R-net"
"shuohangwang/SeqMatchSeq" -> "cheng6076/SNLI-attention" ["e"=1]
"shuohangwang/SeqMatchSeq" -> "MurtyShikhar/Question-Answering"
"shuohangwang/SeqMatchSeq" -> "rkadlec/asreader"
"shuohangwang/SeqMatchSeq" -> "nyu-dl/dl4ir-searchQA"
"shuohangwang/SeqMatchSeq" -> "harvardnlp/decomp-attn" ["e"=1]
"shuohangwang/SeqMatchSeq" -> "kihyunwon/dynamic-coattention-network"
"shuohangwang/SeqMatchSeq" -> "allenai/document-qa"
"OlavHN/attention-over-attention" -> "lc222/attention-over-attention-tf-QA"
"OlavHN/attention-over-attention" -> "kihyunwon/attention-over-attention"
"OlavHN/attention-over-attention" -> "ymcui/Eval-on-NN-of-RC"
"OlavHN/attention-over-attention" -> "shuohangwang/SeqMatchSeq"
"OlavHN/attention-over-attention" -> "rkadlec/asreader"
"OlavHN/attention-over-attention" -> "kihyunwon/dynamic-coattention-network"
"OlavHN/attention-over-attention" -> "bdhingra/ga-reader"
"Maluuba/newsqa" -> "mandarjoshi90/triviaqa"
"Maluuba/newsqa" -> "Maluuba/qgen-workshop" ["e"=1]
"Maluuba/newsqa" -> "mrqa/MRQA-Shared-Task-2019"
"Maluuba/newsqa" -> "robinjia/adversarial-squad"
"Maluuba/newsqa" -> "xinyadu/nqg" ["e"=1]
"Maluuba/newsqa" -> "davidgolub/QuestionGeneration" ["e"=1]
"ganeshjawahar/tweet2vec" -> "ganeshjawahar/dl4nlp-made-easy"
"bdhingra/ga-reader" -> "rkadlec/asreader"
"bdhingra/ga-reader" -> "mingdachen/gated-attention-reader"
"bdhingra/ga-reader" -> "danqi/rc-cnn-dailymail"
"bdhingra/ga-reader" -> "nschuc/alternating-reader-tf"
"bdhingra/ga-reader" -> "ymcui/Eval-on-NN-of-RC"
"bdhingra/ga-reader" -> "kanyun-inc/commonsense-rc"
"bdhingra/ga-reader" -> "shuohangwang/SeqMatchSeq"
"bdhingra/ga-reader" -> "carpedm20/attentive-reader-tensorflow"
"zmr/namsel" -> "tibetan-nlp/tibetan-verbs-database"
"zmr/namsel" -> "tibetan-nlp/awesome-tibetan-nlp"
"zmr/namsel" -> "tibetan-nlp/classical-tibetan-corpus"
"zmr/namsel" -> "writepython/tibetan-ocr"
"kihyunwon/dynamic-coattention-network" -> "andrejonasson/dynamic-coattention-network-plus"
"NLP-Learning/TiLamb" -> "ymaoj/Tibetan-Llama2-Tibetan-Alpaca"
"ymaoj/Tibetan-Llama2-Tibetan-Alpaca" -> "NLP-Learning/TiLamb"
"Esukhia/dakje-desktop" -> "buda-base/lucene-bo"
"mandarjoshi90/triviaqa" -> "allenai/document-qa"
"mandarjoshi90/triviaqa" -> "Maluuba/newsqa"
"mandarjoshi90/triviaqa" -> "shuohangwang/mprc"
"mandarjoshi90/triviaqa" -> "bdhingra/quasar"
"mandarjoshi90/triviaqa" -> "google-deepmind/narrativeqa"
"mandarjoshi90/triviaqa" -> "nyu-dl/dl4ir-searchQA"
"mandarjoshi90/triviaqa" -> "stanfordnlp/coqa-baselines"
"mandarjoshi90/triviaqa" -> "hitvoice/DrQA"
"mandarjoshi90/triviaqa" -> "shimisalant/RaSoR"
"mandarjoshi90/triviaqa" -> "hotpotqa/hotpot"
"mandarjoshi90/triviaqa" -> "kevinduh/san_mrc"
"mandarjoshi90/triviaqa" -> "google-research-datasets/wiki-reading"
"mandarjoshi90/triviaqa" -> "mrqa/MRQA-Shared-Task-2019"
"mandarjoshi90/triviaqa" -> "allenai/bi-att-flow"
"mandarjoshi90/triviaqa" -> "qizhex/RACE_AR_baselines"
"qizhex/RACE_AR_baselines" -> "nlpdata/strategy"
"qizhex/RACE_AR_baselines" -> "kanyun-inc/commonsense-rc"
"qizhex/RACE_AR_baselines" -> "Yifan-Gao/Distractor-Generation-RACE" ["e"=1]
"qizhex/RACE_AR_baselines" -> "nlpdata/mrc_bert_baseline"
"qizhex/RACE_AR_baselines" -> "danqi/rc-cnn-dailymail"
"qizhex/RACE_AR_baselines" -> "shuohangwang/comatch"
"nyu-dl/dl4ir-query-reformulator" -> "nyu-dl/dl4ir-searchQA"
"minimaxir/char-embeddings" -> "minimaxir/char-tsne-visualization"
"minimaxir/char-embeddings" -> "IntuitionEngineeringTeam/chars2vec"
"minimaxir/char-embeddings" -> "matthew-z/R-net"
"nyu-dl/dl4ir-searchQA" -> "nyu-dl/dl4ir-query-reformulator"
"nyu-dl/dl4ir-searchQA" -> "seominjoon/piqa"
"shimisalant/RaSoR" -> "hsgodhia/squad_rasor_nn"
"Esukhia/Corpora" -> "tibetan-nlp/awesome-tibetan-canon"
"Esukhia/Corpora" -> "FudanNLP/Tibetan-Classification"
"hsgodhia/squad_rasor_nn" -> "shimisalant/RaSoR"
"MurtyShikhar/Question-Answering" -> "jind11/SQuAD-QA-System"
"MurtyShikhar/Question-Answering" -> "obryanlouis/qa"
"MurtyShikhar/Question-Answering" -> "shuohangwang/SeqMatchSeq"
"facebookresearch/DrQA" -> "allenai/bi-att-flow"
"facebookresearch/DrQA" -> "allenai/allennlp" ["e"=1]
"facebookresearch/DrQA" -> "facebookresearch/ParlAI" ["e"=1]
"facebookresearch/DrQA" -> "localminimum/QANet"
"facebookresearch/DrQA" -> "facebookresearch/InferSent" ["e"=1]
"facebookresearch/DrQA" -> "attardi/wikiextractor" ["e"=1]
"facebookresearch/DrQA" -> "NTMC-Community/MatchZoo" ["e"=1]
"facebookresearch/DrQA" -> "baidu/AnyQ" ["e"=1]
"facebookresearch/DrQA" -> "zihangdai/xlnet" ["e"=1]
"facebookresearch/DrQA" -> "facebookresearch/DPR" ["e"=1]
"facebookresearch/DrQA" -> "baidu/DuReader"
"facebookresearch/DrQA" -> "Conchylicultor/DeepQA" ["e"=1]
"facebookresearch/DrQA" -> "OpenNMT/OpenNMT-py" ["e"=1]
"facebookresearch/DrQA" -> "facebookresearch/StarSpace" ["e"=1]
"facebookresearch/DrQA" -> "allenai/document-qa"
"allenai/document-qa" -> "HKUST-KnowComp/R-Net"
"allenai/document-qa" -> "localminimum/QANet"
"allenai/document-qa" -> "kevinduh/san_mrc"
"allenai/document-qa" -> "mandarjoshi90/triviaqa"
"allenai/document-qa" -> "localminimum/R-net"
"allenai/document-qa" -> "allenai/bi-att-flow"
"allenai/document-qa" -> "hsinyuan-huang/FusionNet-NLI"
"allenai/document-qa" -> "HKUST-KnowComp/MnemonicReader"
"allenai/document-qa" -> "thunlp/OpenQA"
"allenai/document-qa" -> "mrqa/MRQA-Shared-Task-2019"
"allenai/document-qa" -> "nyu-dl/dl4marco-bert" ["e"=1]
"allenai/document-qa" -> "salesforce/cove"
"allenai/document-qa" -> "google-deepmind/narrativeqa"
"allenai/document-qa" -> "shuohangwang/mprc"
"allenai/document-qa" -> "huminghao16/RE3QA"
"YerevaNN/R-NET-in-Keras" -> "localminimum/R-net"
"YerevaNN/R-NET-in-Keras" -> "HKUST-KnowComp/R-Net"
"YerevaNN/R-NET-in-Keras" -> "unilight/R-NET-in-Tensorflow"
"YerevaNN/R-NET-in-Keras" -> "kihyunwon/dynamic-coattention-network"
"YerevaNN/R-NET-in-Keras" -> "matthew-z/R-net"
"YerevaNN/R-NET-in-Keras" -> "jojonki/BiDAF"
"salesforce/cove" -> "rgsachin/CoVe"
"salesforce/cove" -> "hsinyuan-huang/FusionNet-NLI"
"salesforce/cove" -> "allenai/document-qa"
"salesforce/cove" -> "HKUST-KnowComp/R-Net"
"salesforce/cove" -> "matthew-z/R-net"
"salesforce/cove" -> "Maluuba/newsqa"
"salesforce/cove" -> "allenai/bi-att-flow"
"salesforce/cove" -> "hengruo/QANet-pytorch"
"salesforce/cove" -> "lium-lst/nmtpytorch" ["e"=1]
"salesforce/cove" -> "hitvoice/DrQA"
"salesforce/cove" -> "salesforce/awd-lstm-lm" ["e"=1]
"salesforce/cove" -> "salesforce/pytorch-qrnn" ["e"=1]
"salesforce/cove" -> "facebookresearch/randsent" ["e"=1]
"salesforce/cove" -> "ofirpress/YouMayNotNeedAttention" ["e"=1]
"tibetan-nlp/classical-tibetan-corpus" -> "tibetan-nlp/awesome-tibetan-nlp"
"tibetan-nlp/classical-tibetan-corpus" -> "tibetan-nlp/awesome-tibetan-canon"
"tibetan-nlp/classical-tibetan-corpus" -> "tibetan-nlp/tibetan-verbs-database"
"hitvoice/DrQA" -> "kevinduh/san_mrc"
"hitvoice/DrQA" -> "hengruo/QANet-pytorch"
"hitvoice/DrQA" -> "matthew-z/R-net"
"hitvoice/DrQA" -> "localminimum/QANet"
"hitvoice/DrQA" -> "HKUST-KnowComp/R-Net"
"hitvoice/DrQA" -> "allenai/document-qa"
"hitvoice/DrQA" -> "mandarjoshi90/triviaqa"
"hitvoice/DrQA" -> "facebookresearch/DrQA"
"hitvoice/DrQA" -> "google-deepmind/narrativeqa"
"hitvoice/DrQA" -> "allenai/bi-att-flow"
"hitvoice/DrQA" -> "Maluuba/newsqa"
"hitvoice/DrQA" -> "salesforce/cove"
"hitvoice/DrQA" -> "thunlp/OpenQA"
"hitvoice/DrQA" -> "jojonki/BiDAF"
"hitvoice/DrQA" -> "allenai/deep_qa" ["e"=1]
"robinjia/adversarial-squad" -> "nusnlp/paraphrasing-squad"
"robinjia/adversarial-squad" -> "pramodkaushik/acl18_results"
"robinjia/adversarial-squad" -> "marcotcr/sears" ["e"=1]
"matthew-z/R-net" -> "laddie132/Match-LSTM"
"matthew-z/R-net" -> "HKUST-KnowComp/R-Net"
"matthew-z/R-net" -> "hengruo/QANet-pytorch"
"matthew-z/R-net" -> "unilight/R-NET-in-Tensorflow"
"matthew-z/R-net" -> "HKUST-KnowComp/MnemonicReader"
"matthew-z/R-net" -> "SeanLee97/QANet_dureader"
"matthew-z/R-net" -> "kevinduh/san_mrc"
"matthew-z/R-net" -> "hsinyuan-huang/FusionNet-NLI"
"matthew-z/R-net" -> "galsang/BiDAF-pytorch"
"matthew-z/R-net" -> "kevinkwl/AoAReader"
"matthew-z/R-net" -> "localminimum/R-net"
"matthew-z/R-net" -> "andy840314/QANet-pytorch-"
"matthew-z/R-net" -> "YerevaNN/R-NET-in-Keras"
"lc222/attention-over-attention-tf-QA" -> "OlavHN/attention-over-attention"
"priya-dwivedi/cs224n-Squad-Project" ["l"="54.755,26.59"]
"aswalin/SQuAD" ["l"="54.779,26.608"]
"chrischute/squad" ["l"="54.802,26.571"]
"Steven-Hewitt/QA-with-Tensorflow" ["l"="54.776,26.651"]
"allenai/bi-att-flow" ["l"="54.681,26.519"]
"HKUST-KnowComp/R-Net" ["l"="54.695,26.506"]
"localminimum/QANet" ["l"="54.708,26.522"]
"abisee/cs224n-win18-squad" ["l"="54.741,26.638"]
"deeppavlov/question_generation" ["l"="57.276,29.237"]
"sachinbiradar9/Question-Answer-Selection" ["l"="54.847,26.065"]
"5hirish/adam_qas" ["l"="54.807,26.657"]
"chiayewken/bert-qa" ["l"="55.469,26.151"]
"ZacBi/CS224n-2019-solutions" ["l"="53.652,27.064"]
"allenai/document-qa" ["l"="54.714,26.491"]
"ElizaLo/Question-Answering-based-on-SQuAD" ["l"="54.782,26.626"]
"dapurv5/awesome-question-answering" ["l"="55.573,26.141"]
"312shan/rc_tf" ["l"="54.765,26.569"]
"jingyihiter/myDuReader" ["l"="54.771,26.553"]
"SeanLee97/QANet_dureader" ["l"="54.741,26.542"]
"shiningliang/MRC2018" ["l"="54.783,26.565"]
"google/active-qa" ["l"="54.858,26.296"]
"seominjoon/piqa" ["l"="54.814,26.344"]
"google-deepmind/narrativeqa" ["l"="54.724,26.475"]
"google-research-datasets/wiki-reading" ["l"="54.659,26.509"]
"mandarjoshi90/triviaqa" ["l"="54.725,26.453"]
"danqi/rc-cnn-dailymail" ["l"="54.707,26.565"]
"shuohangwang/SeqMatchSeq" ["l"="54.694,26.552"]
"mrqa/MRQA-Shared-Task-2019" ["l"="54.744,26.404"]
"Maluuba/newsqa" ["l"="54.707,26.425"]
"hitvoice/DrQA" ["l"="54.71,26.471"]
"xinyadu/nqg" ["l"="57.318,29.257"]
"hsinyuan-huang/FlowQA" ["l"="54.694,26.399"]
"shuohangwang/mprc" ["l"="54.734,26.416"]
"karthikncode/nlp-datasets" ["l"="55.82,28.406"]
"nyu-dl/dl4ir-searchQA" ["l"="54.776,26.448"]
"gauthierdmn/question_answering" ["l"="54.806,26.607"]
"aswalin/Kaggle" ["l"="54.802,26.633"]
"kushalj001/pytorch-question-answering" ["l"="54.759,26.626"]
"jind11/SQuAD-QA-System" ["l"="54.725,26.609"]
"localminimum/R-net" ["l"="54.691,26.531"]
"baidu/DuReader" ["l"="54.664,26.542"]
"hengruo/QANet-pytorch" ["l"="54.735,26.495"]
"thunlp/RCPapers" ["l"="54.714,26.541"]
"allenai/bilm-tf" ["l"="53.105,25.598"]
"zhiguowang/BiMPM" ["l"="53.104,27.486"]
"facebookresearch/DrQA" ["l"="54.617,26.505"]
"hsinyuan-huang/FusionNet-NLI" ["l"="54.691,26.48"]
"taoshen58/DiSAN" ["l"="53.479,28.768"]
"ymcui/cmrc2018" ["l"="54.608,26.576"]
"DRCKnowledgeTeam/DRCD" ["l"="54.602,26.595"]
"ymcui/cmrc2019" ["l"="54.633,26.562"]
"ymcui/Chinese-RC-Datasets" ["l"="54.636,26.596"]
"luhua-rain/MRC_Competition_Dureader" ["l"="53.404,27.285"]
"ymcui/Cross-Lingual-MRC" ["l"="54.562,26.586"]
"pluto-junzeng/ChineseSquad" ["l"="54.565,26.613"]
"ymcui/cmrc2017" ["l"="54.559,26.567"]
"nlpdata/c3" ["l"="54.596,26.622"]
"ymcui/Chinese-XLNet" ["l"="53.456,27.231"]
"ymcui/expmrc" ["l"="54.515,26.59"]
"ymcui/MacBERT" ["l"="53.476,27.23"]
"china-ai-law-challenge/CAIL2019" ["l"="53.081,27.65"]
"baidu/AnyQ" ["l"="53.337,27.313"]
"brightmart/roberta_zh" ["l"="53.414,27.216"]
"PaddlePaddle/RocketQA" ["l"="54.461,25.635"]
"NTMC-Community/MatchZoo" ["l"="53.367,27.337"]
"baidu/Dialogue" ["l"="56.736,29.109"]
"andrejonasson/dynamic-coattention-network-plus" ["l"="54.786,26.586"]
"kihyunwon/dynamic-coattention-network" ["l"="54.725,26.571"]
"mjacar/tensorflow-dcn-plus" ["l"="54.816,26.619"]
"atulkum/co-attention" ["l"="54.834,26.529"]
"bwang514/awesome-HAI" ["l"="54.888,26.645"]
"bwang514/PerformanceNet" ["l"="54.86,26.603"]
"janetyc/literature-human-ai-collaboration" ["l"="54.912,26.674"]
"acetylSv/GST-tacotron" ["l"="54.844,26.604"]
"hci-deadlines/hci-deadlines.github.io" ["l"="-30.702,-34.527"]
"bojone/CCL_CMRC2017" ["l"="54.534,26.567"]
"ymcui/Chinese-Cloze-RC" ["l"="54.525,26.545"]
"ymcui/alpaca.cpp" ["l"="54.511,26.567"]
"YerevaNN/R-NET-in-Keras" ["l"="54.683,26.498"]
"unilight/R-NET-in-Tensorflow" ["l"="54.667,26.496"]
"matthew-z/R-net" ["l"="54.712,26.504"]
"OlavHN/attention-over-attention" ["l"="54.677,26.604"]
"MurtyShikhar/Question-Answering" ["l"="54.663,26.569"]
"thunlp/OpenQA" ["l"="54.729,26.432"]
"jojonki/BiDAF" ["l"="54.754,26.479"]
"galsang/BiDAF-pytorch" ["l"="54.749,26.514"]
"kelayamatoz/BiDAF-PyTorch" ["l"="54.754,26.433"]
"yanx27/DuReader_QANet_BiDAF" ["l"="54.749,26.552"]
"stanfordnlp/coqa-baselines" ["l"="54.712,26.406"]
"Chia-Hsuan-Lee/Spoken-SQuAD" ["l"="54.547,26.667"]
"Chia-Hsuan-Lee/ODSQA" ["l"="54.561,26.646"]
"theSage21/FusionNet" ["l"="54.642,26.473"]
"HKUST-KnowComp/MnemonicReader" ["l"="54.7,26.489"]
"lixinsu/RCZoo" ["l"="54.666,26.48"]
"kevinduh/san_mrc" ["l"="54.749,26.494"]
"spacemanidol/MSMARCO" ["l"="54.44,25.804"]
"cooscao/BERT-Dureader" ["l"="54.814,26.557"]
"xycforgithub/MultiTask-MRC" ["l"="54.759,26.522"]
"SunnyMarkLiu/lic2019-dureader2.0-rank2" ["l"="54.832,26.545"]
"laddie132/Match-LSTM" ["l"="54.731,26.531"]
"qizhex/RACE_AR_baselines" ["l"="54.769,26.503"]
"zcgzcgzcg1/MRC_book" ["l"="54.734,26.51"]
"ChawlaAvi/Question_Answering_on_SQuAD" ["l"="54.9,26.541"]
"woshiyyya/DFGN-pytorch" ["l"="54.8,26.416"]
"andy840314/QANet-pytorch-" ["l"="54.786,26.539"]
"BangLiu/QANet-PyTorch" ["l"="54.78,26.518"]
"huminghao16/MTMSN" ["l"="54.829,26.446"]
"shuohangwang/comatch" ["l"="54.805,26.477"]
"kamalkraj/BERT-SQuAD" ["l"="54.809,26.524"]
"freefuiiismyname/capsule-mrc" ["l"="54.622,26.477"]
"yuhaitao1994/AIchallenger2018_MachineReadingComprehension" ["l"="54.625,26.457"]
"antdlx/aic18_rc" ["l"="54.605,26.446"]
"SparkJiao/SLQA" ["l"="54.661,26.444"]
"hotpotqa/hotpot" ["l"="54.773,26.424"]
"THUDM/CogQA" ["l"="54.79,26.39"]
"shmsw25/DecompRC" ["l"="54.789,26.404"]
"Alab-NII/2wikimultihop" ["l"="54.222,25.507"]
"qipeng/golden-retriever" ["l"="54.769,26.378"]
"StonyBrookNLP/musique" ["l"="54.196,25.508"]
"AkariAsai/learning_to_retrieve_reasoning_paths" ["l"="54.515,25.526"]
"easonnie/semanticRetrievalMRS" ["l"="54.769,26.396"]
"yuwfan/HGN" ["l"="54.83,26.416"]
"google-research-datasets/natural-questions" ["l"="54.528,25.556"]
"microsoft/SDNet" ["l"="54.755,26.447"]
"shmsw25/single-hop-rc" ["l"="54.795,26.433"]
"alontalmor/MultiQA" ["l"="54.727,26.339"]
"ckiplab/ckip-transformers" ["l"="22.067,1.97"]
"ckiplab/ckiptagger" ["l"="22.141,1.966"]
"thunlp/NREPapers" ["l"="55.677,26.659"]
"thunlp/KRLPapers" ["l"="53.668,15.963"]
"thunlp/NRLPapers" ["l"="52.929,16.105"]
"sogou/SogouMRCToolkit" ["l"="-51.579,-15"]
"thunlp/PLMpapers" ["l"="53.319,27.158"]
"thunlp/SCPapers" ["l"="52.953,24.92"]
"seriousran/awesome-qa" ["l"="55.513,26.132"]
"rajarshd/Multi-Step-Reasoning" ["l"="54.755,26.371"]
"seominjoon/denspi" ["l"="54.776,26.347"]
"allenai/PathNet" ["l"="54.756,26.312"]
"INK-USC/KagNet" ["l"="55.729,25.979"]
"haitian-sun/GraftNet" ["l"="55.622,26.055"]
"THUDM/CogKR" ["l"="53.822,15.888"]
"INK-USC/MHGRN" ["l"="55.662,26.006"]
"yicheng-w/CommonSenseMultiHopQA" ["l"="54.802,26.452"]
"malllabiisc/EmbedKGQA" ["l"="55.602,26.032"]
"thunlp/ERNIE" ["l"="53.397,27.266"]
"facebookresearch/UnsupervisedDecomposition" ["l"="54.819,26.387"]
"JD-AI-Research-Silicon-Valley/SAE" ["l"="54.834,26.394"]
"huminghao16/RE3QA" ["l"="54.783,26.481"]
"ankit-ai/SQUAD2.Q-Augmented-Dataset" ["l"="54.81,26.542"]
"surbhardwaj/BERT-QnA-Squad_2.0_Finetuned_Model" ["l"="54.837,26.562"]
"chrischute/squad-transformer" ["l"="54.847,26.585"]
"Oceanland-428/Improved-BiDAF-with-Self-Attention" ["l"="54.826,26.602"]
"hackiey/QAnet-pytorch" ["l"="54.802,26.509"]
"kanyun-inc/commonsense-rc" ["l"="54.761,26.537"]
"prdwb/bert_hae" ["l"="54.514,26.046"]
"deepnlp-cs599-usc/quac" ["l"="54.511,26.073"]
"hugochan/GraphFlow" ["l"="54.667,26.367"]
"allenai/allennlp-reading-comprehension-research" ["l"="54.681,26.418"]
"adamluo1995/Bert4CoQA" ["l"="54.883,26.552"]
"NTU-SQUAD/transformers-coqa" ["l"="54.919,26.566"]
"dido1998/coqa-bert-baselines" ["l"="54.909,26.558"]
"SeanLee97/nlp_learning" ["l"="54.89,26.581"]
"lining0806/Naive-Bayes-Classifier" ["l"="54.973,26.602"]
"djunicode/resources" ["l"="54.768,26.693"]
"quabanc/awesome-computer-science" ["l"="54.755,26.675"]
"djunicode/DJ-Comps-Book-Exchange" ["l"="54.78,26.714"]
"pujanm/Chat-IO" ["l"="54.766,26.666"]
"krishamehta/Summer-Internships" ["l"="54.766,26.724"]
"bdhingra/ga-reader" ["l"="54.704,26.598"]
"zychen423/TF-1.9-cp36-cuda9.2-wheel" ["l"="54.832,26.581"]
"ChienYuLu/Play-As-You-Like-Timbre-Enhanced-Multi-modal-Music-Style-Transfer" ["l"="54.946,26.669"]
"zychen423/UHop" ["l"="52.892,25.231"]
"nyu-dl/bert-gen" ["l"="54.644,26.334"]
"JianGuanTHU/StoryEndGen" ["l"="53.628,26.383"]
"harvardnlp/data2text" ["l"="37.716,-2.209"]
"calberti/bert-joint-nq" ["l"="54.934,26.547"]
"OpenPecha/Botok" ["l"="54.192,26.709"]
"OpenPecha/pybo" ["l"="54.179,26.69"]
"tibetan-nlp/awesome-tibetan-nlp" ["l"="54.174,26.738"]
"tibetan-nlp/classical-tibetan-corpus" ["l"="54.182,26.73"]
"christiansteinert/tibetan-dictionary" ["l"="54.164,26.726"]
"tibetan-nlp/awesome-tibetan-canon" ["l"="54.196,26.724"]
"salesforce/cove" ["l"="54.681,26.461"]
"shimisalant/CWR" ["l"="54.642,26.442"]
"shmsw25/qa-transfer" ["l"="54.697,26.377"]
"Qzsl123/dcmn" ["l"="54.909,26.454"]
"pfZhu/duma_code" ["l"="54.939,26.451"]
"facebookresearch/UnsupervisedQA" ["l"="54.708,26.282"]
"bdhingra/quasar" ["l"="54.721,26.392"]
"yairf11/MUPPET" ["l"="54.744,26.382"]
"NoneWait/ai_challenge_2018_mrc" ["l"="54.566,26.414"]
"renjunxiang/oqmrc_2018" ["l"="54.579,26.425"]
"nlpdata/mrc_bert_baseline" ["l"="54.83,26.484"]
"NoviScl/XLNet_DREAM" ["l"="54.864,26.458"]
"nlpdata/dream" ["l"="54.849,26.495"]
"nlpdata/strategy" ["l"="54.807,26.495"]
"yala/text_nn" ["l"="54.633,26.767"]
"taolei87/rcnn" ["l"="54.619,26.747"]
"YingZiqiang/LES-MMRC-Summary" ["l"="53.122,27.556"]
"trib-plan/TriB-QA" ["l"="54.853,26.555"]
"xwen99/DuReader-Robust-With-Paddlehub" ["l"="54.874,26.529"]
"NoneWait/cail2019" ["l"="53.125,27.602"]
"ewrfcas/bert_cn_finetune" ["l"="53.111,27.68"]
"allenai/allennlp-reading-comprehension" ["l"="54.704,26.617"]
"XingLuxi/Knowledge-based-Machine-Reading-Comprehension-Papers" ["l"="54.613,26.647"]
"ankit-ai/BertQA-Attention-on-Steroids" ["l"="54.792,26.499"]
"kevinkwl/AoAReader" ["l"="54.707,26.453"]
"xingdi-eric-yuan/MatchLSTM-PyTorch" ["l"="54.731,26.588"]
"shmsw25/qa-hard-em" ["l"="54.755,26.338"]
"NoviScl/BERT-RACE" ["l"="54.854,26.442"]
"tosmaster/bert-race" ["l"="54.871,26.421"]
"tibetan-nlp/tibetan-spellchecker" ["l"="54.178,26.759"]
"tibetan-nlp/tibetan-verbs-database" ["l"="54.187,26.745"]
"buda-base/lucene-bo" ["l"="54.151,26.737"]
"zmr/namsel" ["l"="54.164,26.754"]
"bat67/TibetanMNIST" ["l"="54.161,26.675"]
"OpenPecha/pyewts" ["l"="54.127,26.73"]
"rogerespel/ewts-js" ["l"="54.107,26.738"]
"lscalendars/tibcalendar" ["l"="54.106,26.722"]
"nelson-liu/contextual-repr-analysis" ["l"="52.925,25.291"]
"robinjia/adversarial-squad" ["l"="54.718,26.362"]
"danqi/acl2020-openqa-tutorial" ["l"="54.495,25.53"]
"lxwuguang/G-Reader" ["l"="54.816,26.591"]
"bozheng-hit/NQ_BERT-DM" ["l"="54.748,26.566"]
"IndexFziQ/KMRC-Papers" ["l"="54.599,26.679"]
"xwhan/ProQA" ["l"="54.806,26.307"]
"marquezo/qanet-impl" ["l"="54.829,26.51"]
"hackiey/torcheras" ["l"="54.823,26.501"]
"noble6emc2/S-NET" ["l"="54.612,26.418"]
"jiangycTarheel-zz/EPAr" ["l"="54.756,26.275"]
"jiangycTarheel-zz/Adversarial-MultiHopQA" ["l"="54.755,26.252"]
"boblandry/hangzhou_house_knowledge" ["l"="54.544,26.395"]
"raylin1000/drop-bert" ["l"="54.875,26.402"]
"eladsegal/DROP-explorer" ["l"="54.892,26.376"]
"thubtenrigzin/namsel-ocr" ["l"="54.175,26.711"]
"pluto-junzeng/CNSD" ["l"="53.357,26.994"]
"junzeng-pluto/ChineseSquad" ["l"="54.534,26.637"]
"iflytek/HFL-Anthology" ["l"="54.416,26.613"]
"iflytek/MiniRBT" ["l"="54.456,26.623"]
"ymcui/Chinese-ELECTRA" ["l"="53.394,27.19"]
"ymcui/LERT" ["l"="54.452,26.605"]
"ymcui/Chinese-MobileBERT" ["l"="54.375,26.61"]
"airaria/TextPruner" ["l"="54.446,26.584"]
"javirk/Person_remover" ["l"="55.054,26.746"]
"geraldma1998/deep-weather-cleaner" ["l"="55.04,26.731"]
"mandalarotation/Concurso_dotcsv_Proyecto_Mamografias" ["l"="55.04,26.742"]
"vbayarri/RetoDotCSV2080Super" ["l"="55.029,26.741"]
"jesusmartinoza/Open-eyes-using-Pix2Pix" ["l"="55.03,26.76"]
"jozech/flash-to-ambient" ["l"="55.026,26.748"]
"frantracer/pix2texture" ["l"="55.037,26.75"]
"javirk/Person-remover-partial-convolutions" ["l"="55.082,26.757"]
"hmartelb/Pix2Pix-Timbre-Transfer" ["l"="55.017,26.724"]
"eladsegal/tag-based-multi-span-extraction" ["l"="54.892,26.427"]
"llamazing/numnet_plus" ["l"="54.904,26.404"]
"haonan-li/MultiSpanQA" ["l"="54.945,26.419"]
"ag1988/injecting_numeracy" ["l"="54.932,26.396"]
"efficientqa/retrieval-based-baselines" ["l"="54.836,26.213"]
"efficientqa/nq-open" ["l"="54.843,26.189"]
"cooelf/AwesomeMRC" ["l"="54.85,26.475"]
"cooelf/SG-Net" ["l"="54.871,26.499"]
"cooelf/SemBERT" ["l"="54.9,26.485"]
"facebookresearch/SpanBERT" ["l"="53.381,27.397"]
"jinmang2/RetroReader" ["l"="54.881,26.468"]
"songyingxin/MRC-Pytorch" ["l"="54.917,26.47"]
"jind11/MMM-MCQA" ["l"="54.891,26.454"]
"ranqiu92/NumNet" ["l"="54.928,26.374"]
"nitishgupta/nmn-drop" ["l"="54.299,27.425"]
"oriyor/turning_tables" ["l"="54.969,26.376"]
"xanhho/Reading-Comprehension-Question-Answering-Papers" ["l"="54.637,26.543"]
"ZhengZixiang/MRCPapers" ["l"="54.748,26.659"]
"cdqa-suite/cdQA" ["l"="55.435,26.166"]
"kamalkraj/ALBERT-TF2.0" ["l"="53.722,27.216"]
"alexaapo/BERT-based-pretrained-model-using-SQuAD-2.0-dataset" ["l"="54.86,26.522"]
"binnz/chinese-qa-with-bert" ["l"="54.887,26.604"]
"sunlanchang/Chinese-QA-with-BERT" ["l"="54.917,26.617"]
"adriacabeza/Human-Extractor" ["l"="55.043,26.764"]
"harskish/Timbrer" ["l"="55.034,26.708"]
"IBM/translucent-answer-prediction" ["l"="37.92,-2.167"]
"coetaur0/ESIM" ["l"="53.194,27.398"]
"writepython/tibetan-ocr" ["l"="54.151,26.769"]
"vikas95/AIR-retriever" ["l"="54.858,26.366"]
"facebookresearch/QA-Overlap" ["l"="54.549,25.498"]
"facebookresearch/multihop_dense_retrieval" ["l"="54.545,25.517"]
"zycdev/AISO" ["l"="54.792,26.335"]
"benywon/ReCO" ["l"="54.582,26.652"]
"shmsw25/AmbigQA" ["l"="54.824,26.249"]
"lyj555/LICS2021_MRC" ["l"="54.912,26.518"]
"zhoujx4/DuReader-Checklist-BASELINE" ["l"="54.919,26.532"]
"AkariAsai/unanswerable_qa" ["l"="54.812,26.28"]
"youthpasses/bayes_classifier" ["l"="54.996,26.617"]
"pteric/Text-Classify-in-NaiveBayes" ["l"="55.01,26.598"]
"unbiarirang/Dureader-bert" ["l"="54.952,26.531"]
"airaria/TextBrewer" ["l"="53.41,27.175"]
"yangjianxin1/LLMPruner" ["l"="39.242,-2.337"]
"princeton-nlp/CoFiPruning" ["l"="53.139,27.884"]
"fuxuelinwudi/ccks2021_track3_baseline" ["l"="54.413,26.567"]
"WoosukKwon/retraining-free-pruning" ["l"="53.128,27.909"]
"destwang/CTCResources" ["l"="53.706,27.429"]
"Inyrkz/Question-Answering-using-BERT" ["l"="54.891,26.518"]
"tibetan-nlp/tibetan-collation" ["l"="54.198,26.759"]
"ymcui/PERT" ["l"="54.493,26.61"]
"bojone/Pattern-Exploiting-Training" ["l"="53.322,26.986"]
"iflytek/VLE" ["l"="54.494,26.586"]
"CLUEbenchmark/DataCLUE" ["l"="54.454,26.664"]
"iflytek/cino" ["l"="54.369,26.659"]
"bojone/CLUE-bert4keras" ["l"="54.437,26.688"]
"ZhuiyiTechnology/roformer-v2" ["l"="53.393,26.994"]
"nishiwen1214/GLUE-bert4keras" ["l"="-53.663,-13.794"]
"ganeshjawahar/dl4nlp-made-easy" ["l"="54.701,26.803"]
"ganeshjawahar/tweet2vec" ["l"="54.698,26.783"]
"carpedm20/attentive-reader-tensorflow" ["l"="54.668,26.635"]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" ["l"="54.667,26.588"]
"aseveryn/deep-qa" ["l"="54.747,25.966"]
"RiaanZoetmulder/Master-Thesis" ["l"="54.591,26.75"]
"taolei87/text_convnet" ["l"="54.598,26.789"]
"stanfordnlp/spinn" ["l"="52.965,25.31"]
"taolei87/askubuntu" ["l"="54.585,26.769"]
"clab/dynet_tutorial_examples" ["l"="53.064,25.358"]
"yuanzh/aspect_adversarial" ["l"="54.622,26.784"]
"sunlab-osu/ReasonBERT" ["l"="54.993,26.363"]
"FudanNLP/Tibetan-Classification" ["l"="54.286,26.686"]
"luciusssss/mc2_corpus" ["l"="54.354,26.679"]
"NLP-Learning/TiLamb" ["l"="54.335,26.662"]
"liyc7711/tip-las" ["l"="54.238,26.693"]
"dmis-lab/LIQUID" ["l"="54.969,26.414"]
"kmul00/torch-vol" ["l"="54.701,26.823"]
"Lisennlp/TinyBert" ["l"="53.449,27.007"]
"google-deepmind/rc-data" ["l"="46.128,27.787"]
"shawntan/neural-turing-machines" ["l"="46.03,27.814"]
"YerevaNN/Dynamic-memory-networks-in-Theano" ["l"="46.068,27.849"]
"ymcui/Eval-on-NN-of-RC" ["l"="54.688,26.635"]
"nyu-dl/dl4mt-tutorial" ["l"="53.728,24.756"]
"cheng6076/SNLI-attention" ["l"="52.756,27.489"]
"rkadlec/asreader" ["l"="54.687,26.59"]
"mila-iqia/blocks-examples" ["l"="44.875,27.723"]
"carpedm20/MemN2N-tensorflow" ["l"="46.129,27.849"]
"raoariel/NLP-Question-Answer-System" ["l"="54.833,26.686"]
"l11x0m7/Question_Answering_Models" ["l"="52.659,25.81"]
"bwbaugh/causeofwhy" ["l"="54.83,26.711"]
"explosion/spacy-dev-resources" ["l"="52.401,25.297"]
"tokestermw/spacy_hunspell" ["l"="51.87,25.223"]
"abisee/pointer-generator" ["l"="58.397,29.109"]
"facebookresearch/InferSent" ["l"="53.016,25.559"]
"facebookarchive/MemNN" ["l"="46.112,27.804"]
"ganeshjawahar/tweet-classify" ["l"="54.694,26.743"]
"ganeshjawahar/torch-teacher" ["l"="54.691,26.709"]
"uclnlp/jack" ["l"="54.666,26.409"]
"uclnlp/inferbeddings" ["l"="54.629,26.377"]
"cairoHy/RC-experiments" ["l"="54.68,26.679"]
"Esukhia/dakje-desktop" ["l"="54.144,26.722"]
"mayank26saxena/gender-bias-analysis-in-movies" ["l"="54.841,26.735"]
"nschuc/alternating-reader-tf" ["l"="54.687,26.619"]
"shimisalant/RaSoR" ["l"="54.651,26.527"]
"erickrf/multiffn-nli" ["l"="52.986,27.467"]
"harvardnlp/decomp-attn" ["l"="52.943,27.48"]
"lc222/attention-over-attention-tf-QA" ["l"="54.647,26.628"]
"kihyunwon/attention-over-attention" ["l"="54.654,26.652"]
"Maluuba/qgen-workshop" ["l"="57.226,29.221"]
"davidgolub/QuestionGeneration" ["l"="57.297,29.233"]
"mingdachen/gated-attention-reader" ["l"="54.708,26.647"]
"ymaoj/Tibetan-Llama2-Tibetan-Alpaca" ["l"="54.316,26.666"]
"Yifan-Gao/Distractor-Generation-RACE" ["l"="57.233,29.342"]
"nyu-dl/dl4ir-query-reformulator" ["l"="54.817,26.432"]
"minimaxir/char-embeddings" ["l"="54.574,26.456"]
"minimaxir/char-tsne-visualization" ["l"="54.545,26.447"]
"IntuitionEngineeringTeam/chars2vec" ["l"="54.517,26.432"]
"hsgodhia/squad_rasor_nn" ["l"="54.62,26.534"]
"Esukhia/Corpora" ["l"="54.243,26.711"]
"obryanlouis/qa" ["l"="54.595,26.557"]
"allenai/allennlp" ["l"="53.002,25.738"]
"facebookresearch/ParlAI" ["l"="53.115,25.785"]
"attardi/wikiextractor" ["l"="53.009,25.629"]
"zihangdai/xlnet" ["l"="53.051,25.718"]
"facebookresearch/DPR" ["l"="54.497,25.597"]
"Conchylicultor/DeepQA" ["l"="55.76,28.404"]
"OpenNMT/OpenNMT-py" ["l"="53.097,25.731"]
"facebookresearch/StarSpace" ["l"="52.979,25.615"]
"nyu-dl/dl4marco-bert" ["l"="54.495,25.763"]
"rgsachin/CoVe" ["l"="54.637,26.424"]
"lium-lst/nmtpytorch" ["l"="53.824,24.668"]
"salesforce/awd-lstm-lm" ["l"="53.085,25.565"]
"salesforce/pytorch-qrnn" ["l"="53.158,25.566"]
"facebookresearch/randsent" ["l"="23.545,14.879"]
"ofirpress/YouMayNotNeedAttention" ["l"="53.847,24.639"]
"allenai/deep_qa" ["l"="55.894,28.39"]
"nusnlp/paraphrasing-squad" ["l"="54.708,26.324"]
"pramodkaushik/acl18_results" ["l"="54.691,26.333"]
"marcotcr/sears" ["l"="52.772,25.312"]
}