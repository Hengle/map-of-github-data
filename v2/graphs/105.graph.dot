digraph G {
"krzjoa/awesome-python-data-science" -> "georgezouq/awesome-ai-in-finance" ["e"=1]
"TheAbhijeet/Django_blog" -> "MicroPyramid/django-blog-it" ["e"=1]
"khuangaf/CryptocurrencyPrediction" -> "nityansuman/warren" ["e"=1]
"firmai/industry-machine-learning" -> "firmai/financial-machine-learning" ["e"=1]
"firmai/industry-machine-learning" -> "firmai/machine-learning-asset-management" ["e"=1]
"alpacahq/alpaca-trade-api-go" -> "alpacahq/alpaca-trade-api-js"
"alpacahq/alpaca-trade-api-go" -> "polygon-io/client-go"
"alpacahq/alpaca-trade-api-go" -> "hadrianl/ibapi"
"alpacahq/alpaca-trade-api-go" -> "andrewstuart/go-robinhood"
"alpacahq/alpaca-trade-api-go" -> "alpacahq/marketstore"
"alpacahq/alpaca-trade-api-go" -> "marpaia/alpaca-trade-api-cpp"
"alpacahq/alpaca-trade-api-go" -> "goinvest/iexcloud" ["e"=1]
"alpacahq/alpaca-trade-api-go" -> "sdcoffey/techan" ["e"=1]
"alpacahq/alpaca-trade-api-go" -> "timpalpant/go-iex"
"alpacahq/alpaca-trade-api-go" -> "markcheno/go-quote" ["e"=1]
"alpacahq/alpaca-trade-api-go" -> "alpacahq/alpaca-trade-api-python"
"alpacahq/alpaca-trade-api-go" -> "d-e-s-o/apca"
"alpacahq/alpaca-trade-api-go" -> "alpacahq/pymarketstore"
"stefan-jansen/machine-learning-for-trading" -> "wilsonfreitas/awesome-quant"
"stefan-jansen/machine-learning-for-trading" -> "firmai/financial-machine-learning"
"stefan-jansen/machine-learning-for-trading" -> "AI4Finance-Foundation/FinRL"
"stefan-jansen/machine-learning-for-trading" -> "microsoft/qlib"
"stefan-jansen/machine-learning-for-trading" -> "je-suis-tm/quant-trading"
"stefan-jansen/machine-learning-for-trading" -> "mementum/backtrader"
"stefan-jansen/machine-learning-for-trading" -> "hudson-and-thames/mlfinlab"
"stefan-jansen/machine-learning-for-trading" -> "quantopian/zipline"
"stefan-jansen/machine-learning-for-trading" -> "QuantConnect/Lean"
"stefan-jansen/machine-learning-for-trading" -> "ranaroussi/quantstats"
"stefan-jansen/machine-learning-for-trading" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"stefan-jansen/machine-learning-for-trading" -> "huseinzol05/Stock-Prediction-Models"
"stefan-jansen/machine-learning-for-trading" -> "AI4Finance-Foundation/FinGPT"
"stefan-jansen/machine-learning-for-trading" -> "kernc/backtesting.py"
"stefan-jansen/machine-learning-for-trading" -> "polakowo/vectorbt"
"man-group/dtale" -> "man-group/arctic" ["e"=1]
"man-group/dtale" -> "hudson-and-thames/mlfinlab" ["e"=1]
"man-group/dtale" -> "man-group/ArcticDB" ["e"=1]
"sammchardy/python-binance" -> "TA-Lib/ta-lib-python" ["e"=1]
"sammchardy/python-binance" -> "mementum/backtrader" ["e"=1]
"sammchardy/python-binance" -> "quantopian/zipline" ["e"=1]
"shirosaidev/stocksight" -> "achillesrasquinha/bulbea"
"shirosaidev/stocksight" -> "robertmartin8/MachineLearningStocks"
"shirosaidev/stocksight" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"shirosaidev/stocksight" -> "LastAncientOne/Stock_Analysis_For_Quant"
"shirosaidev/stocksight" -> "VivekPa/AIAlpha"
"shirosaidev/stocksight" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"shirosaidev/stocksight" -> "tradytics/surpriver"
"shirosaidev/stocksight" -> "huseinzol05/Stock-Prediction-Models"
"shirosaidev/stocksight" -> "kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis"
"shirosaidev/stocksight" -> "lilianweng/stock-rnn"
"shirosaidev/stocksight" -> "scorpionhiccup/StockPricePrediction"
"shirosaidev/stocksight" -> "StockSharp/StockSharp"
"shirosaidev/stocksight" -> "borisbanushev/stockpredictionai"
"shirosaidev/stocksight" -> "tradytics/eiten"
"shirosaidev/stocksight" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"navjot789/online-food-ordering-system-in-php" -> "kaushikjadhav01/Online-Food-Ordering-Web-App"
"winston-dsouza/Online-Food-Ordering-System" -> "kaushikjadhav01/Online-Food-Ordering-Web-App" ["e"=1]
"ranaroussi/quantstats" -> "dcajasn/Riskfolio-Lib"
"ranaroussi/quantstats" -> "robertmartin8/PyPortfolioOpt"
"ranaroussi/quantstats" -> "hudson-and-thames/mlfinlab"
"ranaroussi/quantstats" -> "polakowo/vectorbt"
"ranaroussi/quantstats" -> "quantopian/pyfolio"
"ranaroussi/quantstats" -> "wilsonfreitas/awesome-quant"
"ranaroussi/quantstats" -> "twopirllc/pandas-ta"
"ranaroussi/quantstats" -> "ranaroussi/qtpylib"
"ranaroussi/quantstats" -> "je-suis-tm/quant-trading"
"ranaroussi/quantstats" -> "letianzj/QuantResearch"
"ranaroussi/quantstats" -> "kernc/backtesting.py"
"ranaroussi/quantstats" -> "pmorissette/ffn"
"ranaroussi/quantstats" -> "quantopian/alphalens"
"ranaroussi/quantstats" -> "mementum/backtrader"
"ranaroussi/quantstats" -> "paperswithbacktest/awesome-systematic-trading"
"gaganmanku96/Finding-missing-person-using-AI" -> "nityansuman/warren" ["e"=1]
"Drakkar-Software/OctoBot" -> "blankly-finance/blankly" ["e"=1]
"jesse-ai/jesse" -> "polakowo/vectorbt" ["e"=1]
"jesse-ai/jesse" -> "kernc/backtesting.py" ["e"=1]
"jesse-ai/jesse" -> "blankly-finance/blankly" ["e"=1]
"kernc/backtesting.py" -> "mementum/backtrader"
"kernc/backtesting.py" -> "polakowo/vectorbt"
"kernc/backtesting.py" -> "twopirllc/pandas-ta"
"kernc/backtesting.py" -> "pmorissette/bt"
"kernc/backtesting.py" -> "ranaroussi/quantstats"
"kernc/backtesting.py" -> "TA-Lib/ta-lib-python"
"kernc/backtesting.py" -> "je-suis-tm/quant-trading"
"kernc/backtesting.py" -> "robcarver17/pysystemtrade"
"kernc/backtesting.py" -> "bukosabino/ta"
"kernc/backtesting.py" -> "quantopian/zipline"
"kernc/backtesting.py" -> "wilsonfreitas/awesome-quant"
"kernc/backtesting.py" -> "mhallsmoore/qstrader"
"kernc/backtesting.py" -> "QuantConnect/Lean"
"kernc/backtesting.py" -> "gbeced/pyalgotrade"
"kernc/backtesting.py" -> "robertmartin8/PyPortfolioOpt"
"hummingbot/hummingbot" -> "nautechsystems/nautilus_trader" ["e"=1]
"hummingbot/hummingbot" -> "wilsonfreitas/awesome-quant" ["e"=1]
"hummingbot/hummingbot" -> "mementum/backtrader" ["e"=1]
"hummingbot/hummingbot" -> "QuantConnect/Lean" ["e"=1]
"LiDan456/MAD-GANs" -> "ratschlab/RGAN" ["e"=1]
"jpmorganchase/python-training" -> "goldmansachs/gs-quant"
"jpmorganchase/python-training" -> "firmai/financial-machine-learning"
"jpmorganchase/python-training" -> "JerBouma/FinanceDatabase"
"jpmorganchase/python-training" -> "chrisconlan/algorithmic-trading-with-python"
"jpmorganchase/python-training" -> "mfrdixon/ML_Finance_Codes"
"jpmorganchase/python-training" -> "wilsonfreitas/awesome-quant"
"jpmorganchase/python-training" -> "shashankvemuri/Finance"
"jpmorganchase/python-training" -> "ranaroussi/quantstats"
"jpmorganchase/python-training" -> "letianzj/QuantResearch"
"jpmorganchase/python-training" -> "je-suis-tm/quant-trading"
"jpmorganchase/python-training" -> "OpenBB-finance/OpenBB"
"jpmorganchase/python-training" -> "stefan-jansen/machine-learning-for-trading"
"jpmorganchase/python-training" -> "paperswithbacktest/awesome-systematic-trading"
"jpmorganchase/python-training" -> "cantaro86/Financial-Models-Numerical-Methods"
"jpmorganchase/python-training" -> "anthropics/courses" ["e"=1]
"goldmansachs/gs-quant" -> "google/tf-quant-finance"
"goldmansachs/gs-quant" -> "domokane/FinancePy"
"goldmansachs/gs-quant" -> "wilsonfreitas/awesome-quant"
"goldmansachs/gs-quant" -> "ranaroussi/quantstats"
"goldmansachs/gs-quant" -> "jpmorganchase/python-training"
"goldmansachs/gs-quant" -> "letianzj/QuantResearch"
"goldmansachs/gs-quant" -> "firmai/financial-machine-learning"
"goldmansachs/gs-quant" -> "dcajasn/Riskfolio-Lib"
"goldmansachs/gs-quant" -> "je-suis-tm/quant-trading"
"goldmansachs/gs-quant" -> "pmorissette/ffn"
"goldmansachs/gs-quant" -> "cantaro86/Financial-Models-Numerical-Methods"
"goldmansachs/gs-quant" -> "shashankvemuri/Finance"
"goldmansachs/gs-quant" -> "JerBouma/FinanceDatabase"
"goldmansachs/gs-quant" -> "chrisconlan/algorithmic-trading-with-python"
"goldmansachs/gs-quant" -> "microsoft/qlib"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "blampe/IbPy"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "erdewit/ib_insync"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "cuemacro/finmarketpy"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "ranaroussi/qtpylib"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "jasonstrimpel/volatility-trading"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "gbeced/pyalgotrade"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "robcarver17/pysystemtrade"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "hudson-and-thames/mlfinlab"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "mhallsmoore/qstrader"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "Crypto-toolbox/HFT-Orderbook" ["e"=1]
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "letianzj/QuantResearch"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "jamesmawm/IB-Trading-Models-And-Backtester"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "jamesmawm/mastering-python-for-finance-second-edition"
"jamesmawm/High-Frequency-Trading-Model-with-IB" -> "JerBouma/AlgorithmicTrading"
"twopirllc/pandas-ta" -> "TA-Lib/ta-lib-python"
"twopirllc/pandas-ta" -> "bukosabino/ta"
"twopirllc/pandas-ta" -> "polakowo/vectorbt"
"twopirllc/pandas-ta" -> "kernc/backtesting.py"
"twopirllc/pandas-ta" -> "ranaroussi/quantstats"
"twopirllc/pandas-ta" -> "peerchemist/finta"
"twopirllc/pandas-ta" -> "mementum/backtrader"
"twopirllc/pandas-ta" -> "matplotlib/mplfinance"
"twopirllc/pandas-ta" -> "quantopian/pyfolio"
"twopirllc/pandas-ta" -> "je-suis-tm/quant-trading"
"twopirllc/pandas-ta" -> "hudson-and-thames/mlfinlab"
"twopirllc/pandas-ta" -> "pmorissette/bt"
"twopirllc/pandas-ta" -> "wilsonfreitas/awesome-quant"
"twopirllc/pandas-ta" -> "dcajasn/Riskfolio-Lib"
"twopirllc/pandas-ta" -> "robertmartin8/PyPortfolioOpt"
"Jenniferz28/Time-Series-ARIMA-XGBOOST-RNN" -> "hzy46/TensorFlow-Time-Series-Examples" ["e"=1]
"je-suis-tm/machine-learning" -> "je-suis-tm/graph-theory"
"je-suis-tm/machine-learning" -> "je-suis-tm/recursion-and-dynamic-programming"
"huseinzol05/Stock-Prediction-Models" -> "borisbanushev/stockpredictionai"
"huseinzol05/Stock-Prediction-Models" -> "firmai/financial-machine-learning"
"huseinzol05/Stock-Prediction-Models" -> "AI4Finance-Foundation/FinRL"
"huseinzol05/Stock-Prediction-Models" -> "stefan-jansen/machine-learning-for-trading"
"huseinzol05/Stock-Prediction-Models" -> "je-suis-tm/quant-trading"
"huseinzol05/Stock-Prediction-Models" -> "wilsonfreitas/awesome-quant"
"huseinzol05/Stock-Prediction-Models" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"huseinzol05/Stock-Prediction-Models" -> "scorpionhiccup/StockPricePrediction"
"huseinzol05/Stock-Prediction-Models" -> "tensortrade-org/tensortrade"
"huseinzol05/Stock-Prediction-Models" -> "microsoft/qlib"
"huseinzol05/Stock-Prediction-Models" -> "robertmartin8/MachineLearningStocks"
"huseinzol05/Stock-Prediction-Models" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"huseinzol05/Stock-Prediction-Models" -> "mementum/backtrader"
"huseinzol05/Stock-Prediction-Models" -> "achillesrasquinha/bulbea"
"huseinzol05/Stock-Prediction-Models" -> "hudson-and-thames/mlfinlab"
"r0f1/datascience" -> "firmai/machine-learning-asset-management" ["e"=1]
"r0f1/datascience" -> "ranaroussi/quantstats" ["e"=1]
"r0f1/datascience" -> "hudson-and-thames/mlfinlab" ["e"=1]
"borisbanushev/stockpredictionai" -> "huseinzol05/Stock-Prediction-Models"
"borisbanushev/stockpredictionai" -> "firmai/financial-machine-learning"
"borisbanushev/stockpredictionai" -> "georgezouq/awesome-ai-in-finance"
"borisbanushev/stockpredictionai" -> "hudson-and-thames/mlfinlab"
"borisbanushev/stockpredictionai" -> "tensortrade-org/tensortrade"
"borisbanushev/stockpredictionai" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"borisbanushev/stockpredictionai" -> "AI4Finance-Foundation/FinRL"
"borisbanushev/stockpredictionai" -> "VivekPa/AIAlpha"
"borisbanushev/stockpredictionai" -> "AI4Finance-Foundation/FinRL-Trading" ["e"=1]
"borisbanushev/stockpredictionai" -> "notadamking/RLTrader" ["e"=1]
"borisbanushev/stockpredictionai" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"borisbanushev/stockpredictionai" -> "scorpionhiccup/StockPricePrediction"
"borisbanushev/stockpredictionai" -> "je-suis-tm/quant-trading"
"borisbanushev/stockpredictionai" -> "lilianweng/stock-rnn"
"borisbanushev/stockpredictionai" -> "cbailes/awesome-deep-trading"
"NourozR/Stock-Price-Prediction-LSTM" -> "dzitkowskik/StockPredictionRNN"
"NourozR/Stock-Price-Prediction-LSTM" -> "scorpionhiccup/StockPricePrediction"
"NourozR/Stock-Price-Prediction-LSTM" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"NourozR/Stock-Price-Prediction-LSTM" -> "timestocome/Test-stock-prediction-algorithms"
"NourozR/Stock-Price-Prediction-LSTM" -> "pushpendughosh/Stock-market-forecasting"
"NourozR/Stock-Price-Prediction-LSTM" -> "robertmartin8/MachineLearningStocks"
"NourozR/Stock-Price-Prediction-LSTM" -> "Rajat-dhyani/Stock-Price-Predictor"
"NourozR/Stock-Price-Prediction-LSTM" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"NourozR/Stock-Price-Prediction-LSTM" -> "VivekPa/IntroNeuralNetworks"
"NourozR/Stock-Price-Prediction-LSTM" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"NourozR/Stock-Price-Prediction-LSTM" -> "achillesrasquinha/bulbea"
"NourozR/Stock-Price-Prediction-LSTM" -> "hichenway/stock_predict_with_LSTM"
"NourozR/Stock-Price-Prediction-LSTM" -> "duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network"
"NourozR/Stock-Price-Prediction-LSTM" -> "lilianweng/stock-rnn"
"NourozR/Stock-Price-Prediction-LSTM" -> "yacoubb/stock-trading-ml"
"roq-trading/roq-api" -> "AsyncAlgoTrading/aat" ["e"=1]
"yangwohenmai/LSTM" -> "yangwohenmai/DeepLearningForTSF" ["e"=1]
"yangwohenmai/LSTM" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"yangwohenmai/LSTM" -> "nicodjimenez/lstm"
"yangwohenmai/LSTM" -> "yangwohenmai/TimeSeriesForecasting" ["e"=1]
"yangwohenmai/LSTM" -> "zhouhaoyi/Informer2020" ["e"=1]
"yangwohenmai/LSTM" -> "ndrplz/ConvLSTM_pytorch" ["e"=1]
"yangwohenmai/LSTM" -> "eai2x/Time-Series-Analysis-Tutorial" ["e"=1]
"yangwohenmai/LSTM" -> "PatientEz/CNN-BiLSTM-Attention-Time-Series-Prediction_Keras" ["e"=1]
"yangwohenmai/LSTM" -> "hichenway/stock_predict_with_LSTM"
"yangwohenmai/LSTM" -> "thuml/Autoformer" ["e"=1]
"yangwohenmai/LSTM" -> "thuml/Time-Series-Library" ["e"=1]
"yangwohenmai/LSTM" -> "Alro10/deep-learning-time-series" ["e"=1]
"yangwohenmai/LSTM" -> "dalinvip/cnn-lstm-bilstm-deepcnn-clstm-in-pytorch" ["e"=1]
"yangwohenmai/LSTM" -> "cure-lab/LTSF-Linear" ["e"=1]
"yangwohenmai/LSTM" -> "oliverguhr/transformer-time-series-prediction" ["e"=1]
"firmai/financial-machine-learning" -> "hudson-and-thames/mlfinlab"
"firmai/financial-machine-learning" -> "wilsonfreitas/awesome-quant"
"firmai/financial-machine-learning" -> "georgezouq/awesome-ai-in-finance"
"firmai/financial-machine-learning" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"firmai/financial-machine-learning" -> "je-suis-tm/quant-trading"
"firmai/financial-machine-learning" -> "stefan-jansen/machine-learning-for-trading"
"firmai/financial-machine-learning" -> "ranaroussi/quantstats"
"firmai/financial-machine-learning" -> "dcajasn/Riskfolio-Lib"
"firmai/financial-machine-learning" -> "cantaro86/Financial-Models-Numerical-Methods"
"firmai/financial-machine-learning" -> "letianzj/QuantResearch"
"firmai/financial-machine-learning" -> "AI4Finance-Foundation/FinRL"
"firmai/financial-machine-learning" -> "google/tf-quant-finance"
"firmai/financial-machine-learning" -> "mfrdixon/ML_Finance_Codes"
"firmai/financial-machine-learning" -> "robertmartin8/PyPortfolioOpt"
"firmai/financial-machine-learning" -> "paperswithbacktest/awesome-systematic-trading"
"highfestiva/finplot" -> "matplotlib/mplfinance"
"highfestiva/finplot" -> "louisnw01/lightweight-charts-python" ["e"=1]
"highfestiva/finplot" -> "Skinok/backtrader-pyqt-ui"
"highfestiva/finplot" -> "rsheftel/pandas_market_calendars"
"highfestiva/finplot" -> "tysonwu/stack-orderflow"
"highfestiva/finplot" -> "twopirllc/pandas-ta"
"highfestiva/finplot" -> "polakowo/vectorbt"
"highfestiva/finplot" -> "TechfaneTechnologies/pytvlwcharts"
"highfestiva/finplot" -> "peerchemist/finta"
"highfestiva/finplot" -> "ranaroussi/quantstats"
"highfestiva/finplot" -> "bfolkens/py-market-profile"
"highfestiva/finplot" -> "jmrichardson/tuneta"
"highfestiva/finplot" -> "nardew/talipp"
"highfestiva/finplot" -> "GregoryMorse/trendln"
"highfestiva/finplot" -> "letianzj/QuantResearch"
"dingran/quant-notes" -> "PyPatel/Quant-Finance-Resources" ["e"=1]
"dingran/quant-notes" -> "JerBouma/AlgorithmicTrading" ["e"=1]
"dingran/quant-notes" -> "letianzj/QuantResearch" ["e"=1]
"dingran/quant-notes" -> "LongOnly/Quantitative-Notebooks" ["e"=1]
"dingran/quant-notes" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading" ["e"=1]
"RoughStochVol/rBergomi" -> "ryanmccrickerd/rough_bergomi"
"RoughStochVol/rBergomi" -> "sigurdroemer/rough_volatility"
"svenhsia/Calibrating-Rough-Volatility-Models-with-Deep-Learning" -> "sigurdroemer/rough_volatility"
"svenhsia/Calibrating-Rough-Volatility-Models-with-Deep-Learning" -> "ryanmccrickerd/rough_bergomi"
"svenhsia/Calibrating-Rough-Volatility-Models-with-Deep-Learning" -> "amuguruza/NN-StochVol-Calibrations"
"svenhsia/Calibrating-Rough-Volatility-Models-with-Deep-Learning" -> "sigurdroemer/rough_heston"
"patrick-kidger/signatory" -> "SigCGANs/Conditional-Sig-Wasserstein-GANs" ["e"=1]
"patrick-kidger/signatory" -> "imanolperez/market_simulator" ["e"=1]
"LexPredict/openedgar" -> "edgarminers/python-edgar"
"LexPredict/openedgar" -> "datasets/edgar"
"LexPredict/openedgar" -> "sec-edgar/sec-edgar"
"LexPredict/openedgar" -> "LexPredict/lexpredict-legal-dictionary" ["e"=1]
"LexPredict/openedgar" -> "ryansmccoy/py-sec-edgar"
"LexPredict/openedgar" -> "tooksoi/ScraXBRL"
"LexPredict/openedgar" -> "gaulinmp/pyedgar"
"LexPredict/openedgar" -> "joeyism/py-edgar"
"LexPredict/openedgar" -> "janlukasschroeder/sec-api"
"LexPredict/openedgar" -> "Arelle/EdgarRenderer"
"LexPredict/openedgar" -> "alions7000/SEC-EDGAR-text"
"LexPredict/openedgar" -> "rsljr/edgarParser"
"LexPredict/openedgar" -> "LexPredict/lexpredict-lexnlp" ["e"=1]
"LexPredict/openedgar" -> "LexPredict/lexpredict-contraxsuite" ["e"=1]
"LexPredict/openedgar" -> "lukerosiak/pysec"
"JoinQuant/jqfactor_analyzer" -> "quantopian/alphalens" ["e"=1]
"patrickloeber/python-engineer-notebooks" -> "derekbanas/seaborn" ["e"=1]
"Bloomberg-Beta/Manual" -> "Ameobea/robintrack" ["e"=1]
"askmike/gekko" -> "quantopian/zipline" ["e"=1]
"askmike/gekko" -> "QuantConnect/Lean" ["e"=1]
"askmike/gekko" -> "mementum/backtrader" ["e"=1]
"google/tf-quant-finance" -> "domokane/FinancePy"
"google/tf-quant-finance" -> "goldmansachs/gs-quant"
"google/tf-quant-finance" -> "cantaro86/Financial-Models-Numerical-Methods"
"google/tf-quant-finance" -> "enthought/pyql"
"google/tf-quant-finance" -> "hudson-and-thames/mlfinlab"
"google/tf-quant-finance" -> "pmorissette/ffn"
"google/tf-quant-finance" -> "jsmidt/QuantPy"
"google/tf-quant-finance" -> "quantsbin/Quantsbin"
"google/tf-quant-finance" -> "vollib/vollib"
"google/tf-quant-finance" -> "dcajasn/Riskfolio-Lib"
"google/tf-quant-finance" -> "romanmichaelpaolucci/Q-Fin"
"google/tf-quant-finance" -> "federicomariamassari/financial-engineering"
"google/tf-quant-finance" -> "dbrojas/optlib"
"google/tf-quant-finance" -> "ynouri/pysabr"
"google/tf-quant-finance" -> "alpha-miner/Finance-Python"
"jamesmawm/mastering-python-for-finance-second-edition" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"jamesmawm/mastering-python-for-finance-second-edition" -> "jamesmawm/Mastering-Python-for-Finance-source-codes"
"jamesmawm/mastering-python-for-finance-second-edition" -> "PacktPublishing/Python-for-Finance-Cookbook"
"jamesmawm/mastering-python-for-finance-second-edition" -> "jamesmawm/High-Frequency-Trading-Model-with-IB"
"jamesmawm/mastering-python-for-finance-second-edition" -> "wywongbd/pairstrade-fyp-2019"
"jamesmawm/mastering-python-for-finance-second-edition" -> "Finance-Hub/FinanceHub"
"jamesmawm/mastering-python-for-finance-second-edition" -> "dedwards25/Python_Option_Pricing"
"jamesmawm/mastering-python-for-finance-second-edition" -> "JerBouma/AlgorithmicTrading"
"jamesmawm/mastering-python-for-finance-second-edition" -> "Hvass-Labs/FinanceOps"
"jamesmawm/mastering-python-for-finance-second-edition" -> "robcarver17/systematictradingexamples"
"jamesmawm/mastering-python-for-finance-second-edition" -> "chicago-joe/InteractiveBrokers-PairsTrading-Algo"
"jamesmawm/mastering-python-for-finance-second-edition" -> "MarcosCarreira/DermanPapers"
"jamesmawm/mastering-python-for-finance-second-edition" -> "rsvp/fecon235"
"jamesmawm/mastering-python-for-finance-second-edition" -> "jasonstrimpel/volatility-trading"
"jamesmawm/mastering-python-for-finance-second-edition" -> "PacktPublishing/Learn-Algorithmic-Trading"
"Marigold/universal-portfolios" -> "OLPS/OLPS" ["e"=1]
"Marigold/universal-portfolios" -> "cvxgrp/cvxportfolio"
"Marigold/universal-portfolios" -> "dcajasn/Riskfolio-Lib"
"Marigold/universal-portfolios" -> "jankrepl/deepdow"
"Marigold/universal-portfolios" -> "ZhengyaoJiang/PGPortfolio" ["e"=1]
"Marigold/universal-portfolios" -> "quantopian/empyrical"
"Marigold/universal-portfolios" -> "convexfi/riskparity.py"
"Marigold/universal-portfolios" -> "hudson-and-thames/mlfinlab"
"Marigold/universal-portfolios" -> "fmilthaler/FinQuant"
"Marigold/universal-portfolios" -> "wassname/rl-portfolio-management" ["e"=1]
"Marigold/universal-portfolios" -> "marketneutral/alphatools"
"Marigold/universal-portfolios" -> "firmai/machine-learning-asset-management"
"Marigold/universal-portfolios" -> "jjakimoto/finance_ml"
"Marigold/universal-portfolios" -> "jasonstrimpel/volatility-trading"
"Marigold/universal-portfolios" -> "santoshlite/EigenLedger"
"tradingview/lightweight-charts" -> "TA-Lib/ta-lib-python" ["e"=1]
"tradingview/lightweight-charts" -> "mementum/backtrader" ["e"=1]
"tradingview/lightweight-charts" -> "twopirllc/pandas-ta" ["e"=1]
"tradingview/lightweight-charts" -> "kernc/backtesting.py" ["e"=1]
"tradingview/lightweight-charts" -> "wilsonfreitas/awesome-quant" ["e"=1]
"tradingview/lightweight-charts" -> "QuantConnect/Lean" ["e"=1]
"tradingview/lightweight-charts" -> "ranaroussi/quantstats" ["e"=1]
"EliteQuant/EliteQuant" -> "je-suis-tm/quant-trading"
"EliteQuant/EliteQuant" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"EliteQuant/EliteQuant" -> "hudson-and-thames/mlfinlab"
"EliteQuant/EliteQuant" -> "letianzj/QuantResearch"
"EliteQuant/EliteQuant" -> "wilsonfreitas/awesome-quant"
"EliteQuant/EliteQuant" -> "ranaroussi/quantstats"
"EliteQuant/EliteQuant" -> "ranaroussi/qtpylib"
"EliteQuant/EliteQuant" -> "robertmartin8/PyPortfolioOpt"
"EliteQuant/EliteQuant" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"EliteQuant/EliteQuant" -> "dcajasn/Riskfolio-Lib"
"EliteQuant/EliteQuant" -> "google/tf-quant-finance"
"EliteQuant/EliteQuant" -> "cbailes/awesome-deep-trading"
"EliteQuant/EliteQuant" -> "robcarver17/pysystemtrade"
"EliteQuant/EliteQuant" -> "quantopian/alphalens"
"EliteQuant/EliteQuant" -> "LongOnly/Quantitative-Notebooks"
"jmfernandes/robin_stocks" -> "robinhood-unofficial/pyrh"
"jmfernandes/robin_stocks" -> "sanko/Robinhood"
"jmfernandes/robin_stocks" -> "anilshanbhag/RobinhoodShell"
"jmfernandes/robin_stocks" -> "aurbano/robinhood-node"
"jmfernandes/robin_stocks" -> "tedchou12/webull"
"jmfernandes/robin_stocks" -> "2018kguo/RobinhoodBot"
"jmfernandes/robin_stocks" -> "alexgolec/tda-api"
"jmfernandes/robin_stocks" -> "alpacahq/alpaca-trade-api-python"
"jmfernandes/robin_stocks" -> "timkpaine/tdameritrade"
"jmfernandes/robin_stocks" -> "mcdallas/wallstreet"
"jmfernandes/robin_stocks" -> "torreyleonard/algotrader"
"jmfernandes/robin_stocks" -> "ranaroussi/qtpylib"
"jmfernandes/robin_stocks" -> "michaelchu/optopsy"
"jmfernandes/robin_stocks" -> "Ameobea/robintrack"
"jmfernandes/robin_stocks" -> "je-suis-tm/quant-trading"
"je-suis-tm/web-scraping" -> "je-suis-tm/graph-theory"
"je-suis-tm/web-scraping" -> "sallamy2580/python-web-scrapping"
"je-suis-tm/web-scraping" -> "je-suis-tm/machine-learning"
"je-suis-tm/web-scraping" -> "janlukasschroeder/realtime-newsapi"
"je-suis-tm/web-scraping" -> "avidLearnerInProgress/python-automation-scripts" ["e"=1]
"je-suis-tm/web-scraping" -> "je-suis-tm/quant-trading"
"je-suis-tm/web-scraping" -> "fhamborg/news-please" ["e"=1]
"je-suis-tm/web-scraping" -> "je-suis-tm/recursion-and-dynamic-programming"
"je-suis-tm/web-scraping" -> "cuemacro/findatapy"
"je-suis-tm/web-scraping" -> "firmai/machine-learning-asset-management"
"je-suis-tm/web-scraping" -> "alvarobartt/investpy"
"je-suis-tm/web-scraping" -> "ranaroussi/qtpylib"
"je-suis-tm/web-scraping" -> "LastAncientOne/Stock_Analysis_For_Quant"
"je-suis-tm/web-scraping" -> "chrisconlan/algorithmic-trading-with-python"
"je-suis-tm/web-scraping" -> "domokane/FinancePy"
"bmoscon/cryptofeed" -> "man-group/arctic" ["e"=1]
"bmoscon/cryptofeed" -> "polakowo/vectorbt" ["e"=1]
"nautechsystems/nautilus_trader" -> "nkaz001/hftbacktest" ["e"=1]
"nautechsystems/nautilus_trader" -> "polakowo/vectorbt"
"nautechsystems/nautilus_trader" -> "hummingbot/hummingbot" ["e"=1]
"nautechsystems/nautilus_trader" -> "paperswithbacktest/awesome-systematic-trading"
"nautechsystems/nautilus_trader" -> "ranaroussi/quantstats"
"nautechsystems/nautilus_trader" -> "kernc/backtesting.py"
"nautechsystems/nautilus_trader" -> "barter-rs/barter-rs" ["e"=1]
"nautechsystems/nautilus_trader" -> "wangzhe3224/awesome-systematic-trading"
"nautechsystems/nautilus_trader" -> "QuantConnect/Lean"
"nautechsystems/nautilus_trader" -> "microsoft/qlib"
"nautechsystems/nautilus_trader" -> "mementum/backtrader"
"nautechsystems/nautilus_trader" -> "wilsonfreitas/awesome-quant"
"nautechsystems/nautilus_trader" -> "robcarver17/pysystemtrade"
"nautechsystems/nautilus_trader" -> "je-suis-tm/quant-trading"
"nautechsystems/nautilus_trader" -> "blankly-finance/blankly"
"jasonyip184/StockSentimentTrading" -> "gyanesh-m/Sentiment-analysis-of-financial-news-data"
"jasonyip184/StockSentimentTrading" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"jasonyip184/StockSentimentTrading" -> "PyPatel/Sentiment-Analysis-for-Trading"
"jasonyip184/StockSentimentTrading" -> "damianboh/stock_news_sentiment_analysis"
"cvxpy/cvxpy" -> "cvxgrp/cvxportfolio" ["e"=1]
"cvxpy/cvxpy" -> "robertmartin8/PyPortfolioOpt" ["e"=1]
"yli188/WorldQuant_alpha101_code" -> "popbo/alphas" ["e"=1]
"yli188/WorldQuant_alpha101_code" -> "Harvey-Sun/World_Quant_Alphas" ["e"=1]
"yli188/WorldQuant_alpha101_code" -> "laox1ao/Alpha101-WorldQuant"
"yli188/WorldQuant_alpha101_code" -> "ShiliangZhang-nku/Barra_CNE6" ["e"=1]
"yli188/WorldQuant_alpha101_code" -> "letianzj/QuantResearch"
"yli188/WorldQuant_alpha101_code" -> "RL-MLDM/alphagen" ["e"=1]
"yli188/WorldQuant_alpha101_code" -> "rolling-panda-san/notebooks"
"yli188/WorldQuant_alpha101_code" -> "stefan-jansen/alphalens-reloaded"
"yli188/WorldQuant_alpha101_code" -> "JerBouma/AlgorithmicTrading"
"yli188/WorldQuant_alpha101_code" -> "lc-sysbs/alpha101-new" ["e"=1]
"yli188/WorldQuant_alpha101_code" -> "STHSF/alpha101" ["e"=1]
"yli188/WorldQuant_alpha101_code" -> "zazhang/ep-chan-book-algo-trading"
"yli188/WorldQuant_alpha101_code" -> "wpwpwpwpwpwpwpwpwp/Alpha-101-GTJA-191" ["e"=1]
"yli188/WorldQuant_alpha101_code" -> "sstoikov/microprice" ["e"=1]
"yli188/WorldQuant_alpha101_code" -> "RussellDash332/WQ-Brain" ["e"=1]
"JerBouma/AlgorithmicTrading" -> "letianzj/QuantResearch"
"JerBouma/AlgorithmicTrading" -> "wywongbd/pairstrade-fyp-2019"
"JerBouma/AlgorithmicTrading" -> "KidQuant/Pairs-Trading-With-Python"
"JerBouma/AlgorithmicTrading" -> "jasonstrimpel/volatility-trading"
"JerBouma/AlgorithmicTrading" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"JerBouma/AlgorithmicTrading" -> "fedecaccia/avellaneda-stoikov" ["e"=1]
"JerBouma/AlgorithmicTrading" -> "LongOnly/Quantitative-Notebooks"
"JerBouma/AlgorithmicTrading" -> "PacktPublishing/Learn-Algorithmic-Trading"
"JerBouma/AlgorithmicTrading" -> "jshellen/HFT" ["e"=1]
"JerBouma/AlgorithmicTrading" -> "chrisconlan/algorithmic-trading-with-python"
"JerBouma/AlgorithmicTrading" -> "letianzj/quanttrader"
"JerBouma/AlgorithmicTrading" -> "rolling-panda-san/notebooks"
"JerBouma/AlgorithmicTrading" -> "PyPatel/Options-Trading-Strategies-in-Python"
"JerBouma/AlgorithmicTrading" -> "ivopetiz/algotrading"
"JerBouma/AlgorithmicTrading" -> "jsmidt/QuantPy"
"constverum/Quantdom" -> "s-brez/trading-server"
"constverum/Quantdom" -> "ematvey/pybacktest"
"constverum/Quantdom" -> "ranaroussi/qtpylib"
"constverum/Quantdom" -> "cuemacro/finmarketpy"
"constverum/Quantdom" -> "LongOnly/Quantitative-Notebooks"
"constverum/Quantdom" -> "cuemacro/findatapy"
"constverum/Quantdom" -> "marketneutral/alphatools"
"constverum/Quantdom" -> "michaelchu/optopsy"
"constverum/Quantdom" -> "JerBouma/AlgorithmicTrading"
"constverum/Quantdom" -> "mementum/bta-lib"
"constverum/Quantdom" -> "abbass2/pyqstrat"
"constverum/Quantdom" -> "EliteQuant/EliteQuant_Python" ["e"=1]
"constverum/Quantdom" -> "jsmidt/QuantPy"
"constverum/Quantdom" -> "alpha-miner/Finance-Python"
"constverum/Quantdom" -> "AlgoTraders/stock-analysis-engine"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "hudson-and-thames/mlfinlab"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "jjakimoto/finance_ml"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "boyboi86/AFML"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "hudson-and-thames/research"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "Rachnog/Advanced-Deep-Trading"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "emoen/Machine-Learning-for-Asset-Managers"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "doda/advances-in-financial-ml-notes"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "fernandodelacalle/adv-financial-ml-marcos-exercises"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "robcarver17/pysystemtrade"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "firmai/machine-learning-asset-management"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "letianzj/QuantResearch"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "jasonstrimpel/volatility-trading"
"BlackArbsCEO/Adv_Fin_ML_Exercises" -> "cuemacro/findatapy"
"hudson-and-thames/mlfinlab" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"hudson-and-thames/mlfinlab" -> "robertmartin8/PyPortfolioOpt"
"hudson-and-thames/mlfinlab" -> "ranaroussi/quantstats"
"hudson-and-thames/mlfinlab" -> "firmai/machine-learning-asset-management"
"hudson-and-thames/mlfinlab" -> "dcajasn/Riskfolio-Lib"
"hudson-and-thames/mlfinlab" -> "hudson-and-thames/research"
"hudson-and-thames/mlfinlab" -> "google/tf-quant-finance"
"hudson-and-thames/mlfinlab" -> "firmai/financial-machine-learning"
"hudson-and-thames/mlfinlab" -> "quantopian/pyfolio"
"hudson-and-thames/mlfinlab" -> "letianzj/QuantResearch"
"hudson-and-thames/mlfinlab" -> "robcarver17/pysystemtrade"
"hudson-and-thames/mlfinlab" -> "ranaroussi/qtpylib"
"hudson-and-thames/mlfinlab" -> "EliteQuant/EliteQuant"
"hudson-and-thames/mlfinlab" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"hudson-and-thames/mlfinlab" -> "quantopian/alphalens"
"raidastauras/Trading-Bot" -> "tanvird3/TradingRobot"
"raidastauras/Trading-Bot" -> "PeterMalkin/oandapybot"
"raidastauras/Trading-Bot" -> "bgwrites/Forex-Trader"
"iancamleite/prediciting-binary-options" -> "hayatoy/ml-forex-prediction"
"iancamleite/prediciting-binary-options" -> "tim1234ltp/forex-binary-option-prediction"
"iancamleite/prediciting-binary-options" -> "metheuspsc/Iq_Option_Bots"
"iancamleite/prediciting-binary-options" -> "metaperl/binary-martingale"
"iancamleite/prediciting-binary-options" -> "ItamarRocha/binary-bot"
"pskrunner14/trading-bot" -> "yacoubb/stock-trading-ml" ["e"=1]
"pskrunner14/trading-bot" -> "cbailes/awesome-deep-trading" ["e"=1]
"pskrunner14/trading-bot" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock" ["e"=1]
"pskrunner14/trading-bot" -> "tensortrade-org/tensortrade" ["e"=1]
"pskrunner14/trading-bot" -> "huseinzol05/Stock-Prediction-Models" ["e"=1]
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "omerbsezer/Reinforcement_learning_tutorial_with_demo" ["e"=1]
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "umbertogriffo/Predictive-Maintenance-using-LSTM" ["e"=1]
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "nicodjimenez/lstm"
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "hichenway/stock_predict_with_LSTM"
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "Jenniferz28/Time-Series-ARIMA-XGBOOST-RNN" ["e"=1]
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "lilianweng/stock-rnn"
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "omerbsezer/Generative_Models_Tutorial_with_Demo" ["e"=1]
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "scorpionhiccup/StockPricePrediction"
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "buomsoo-kim/Easy-deep-learning-with-Keras" ["e"=1]
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "imhgchoi/ARIMA-LSTM-hybrid-corrcoef-predict" ["e"=1]
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "yangwohenmai/DeepLearningForTSF" ["e"=1]
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" -> "NourozR/Stock-Price-Prediction-LSTM"
"bfolkens/py-market-profile" -> "beinghorizontal/tpo_project"
"bfolkens/py-market-profile" -> "beinghorizontal/py-market-profile"
"bfolkens/py-market-profile" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"bfolkens/py-market-profile" -> "day0market/support_resistance"
"bfolkens/py-market-profile" -> "rolling-panda-san/notebooks"
"bfolkens/py-market-profile" -> "beinghorizontal/awesome-quant"
"bfolkens/py-market-profile" -> "GregoryMorse/trendln"
"bfolkens/py-market-profile" -> "pranshu0210/market-profile"
"bfolkens/py-market-profile" -> "cenobar/TPO"
"bfolkens/py-market-profile" -> "jasonstrimpel/volatility-trading"
"bfolkens/py-market-profile" -> "tr8dr/tseries-patterns"
"bfolkens/py-market-profile" -> "s-brez/trading-server"
"bfolkens/py-market-profile" -> "Yvictor/TradingGym" ["e"=1]
"bfolkens/py-market-profile" -> "jbn/ZigZag"
"JECSand/yahoofinancials" -> "dpguthrie/yahooquery"
"JECSand/yahoofinancials" -> "yahoo-finance/yahoo-finance"
"JECSand/yahoofinancials" -> "cuemacro/findatapy"
"JECSand/yahoofinancials" -> "RomelTorres/alpha_vantage"
"JECSand/yahoofinancials" -> "JerBouma/FinanceToolkit"
"JECSand/yahoofinancials" -> "Benny-/Yahoo-ticker-symbol-downloader"
"JECSand/yahoofinancials" -> "ranaroussi/yfinance"
"JECSand/yahoofinancials" -> "mariostoev/finviz"
"JECSand/yahoofinancials" -> "fmilthaler/FinQuant"
"JECSand/yahoofinancials" -> "pmorissette/ffn"
"JECSand/yahoofinancials" -> "alvarobartt/investpy"
"JECSand/yahoofinancials" -> "LastAncientOne/Stock_Analysis_For_Quant"
"JECSand/yahoofinancials" -> "pydata/pandas-datareader"
"JECSand/yahoofinancials" -> "petercerno/good-morning"
"JECSand/yahoofinancials" -> "JerBouma/FundamentalsQuantifier"
"mariostoev/finviz" -> "lit26/finvizfinance"
"mariostoev/finviz" -> "AlgoTraders/stock-analysis-engine"
"mariostoev/finviz" -> "alexgolec/tda-api"
"mariostoev/finviz" -> "ranaroussi/qtpylib"
"mariostoev/finviz" -> "timkpaine/tdameritrade"
"mariostoev/finviz" -> "JECSand/yahoofinancials"
"mariostoev/finviz" -> "alpacahq/alpaca-trade-api-python"
"mariostoev/finviz" -> "alpacahq/pylivetrader"
"mariostoev/finviz" -> "AnalyzerREST/python-tradingview-ta" ["e"=1]
"mariostoev/finviz" -> "erdewit/ib_insync"
"mariostoev/finviz" -> "mcdallas/wallstreet"
"mariostoev/finviz" -> "michaelchu/optopsy"
"mariostoev/finviz" -> "JerBouma/FinanceToolkit"
"mariostoev/finviz" -> "alvarobartt/investpy"
"mariostoev/finviz" -> "cuemacro/findatapy"
"yumoxu/stocknet-dataset" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" ["e"=1]
"yumoxu/stocknet-dataset" -> "AI4Finance-Foundation/FinNLP" ["e"=1]
"cuemacro/tcapy" -> "cuemacro/FinancePy"
"cuemacro/tcapy" -> "cuemacro/chartpy"
"cuemacro/tcapy" -> "cuemacro/teaching"
"cuemacro/tcapy" -> "cuemacro/cufflinks"
"cuemacro/tcapy" -> "gjimzhou/MTH9879-Market-Microstructure-Models" ["e"=1]
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "Finance-Hub/FinanceHub"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "MarcosCarreira/DermanPapers"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "LongOnly/Quantitative-Notebooks"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "robcarver17/systematictradingexamples"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "dedwards25/Python_Option_Pricing"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "robcarver17/pysystemtrade_examples"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "LastAncientOne/Stock_Analysis_For_Quant"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "rsvp/fecon235"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "robertmartin8/MachineLearningStocks"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "LastAncientOne/SimpleStockAnalysisPython"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "achillesrasquinha/bulbea"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "letianzj/QuantResearch"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" -> "Hvass-Labs/FinanceOps"
"janlukasschroeder/realtime-newsapi" -> "areed1192/finance-news-aggregator"
"janlukasschroeder/realtime-newsapi" -> "janlukasschroeder/sec-api-python"
"EliteQuant/EliteQuant_Python" -> "constverum/Quantdom" ["e"=1]
"EliteQuant/EliteQuant_Python" -> "EliteQuant/EliteQuant" ["e"=1]
"justdjango/dream_blog" -> "MicroPyramid/django-blog-it" ["e"=1]
"binance-exchange/binance-official-api-docs" -> "TA-Lib/ta-lib-python" ["e"=1]
"LechGrzelak/QuantFinanceBook" -> "LechGrzelak/Computational-Finance-Course"
"LechGrzelak/QuantFinanceBook" -> "LechGrzelak/FinancialEngineering_IR_xVA"
"LechGrzelak/QuantFinanceBook" -> "PythonCharmers/QuantFinance"
"LechGrzelak/QuantFinanceBook" -> "Finance-Hub/FinanceHub"
"LechGrzelak/QuantFinanceBook" -> "ArturSepp/QuantInvestStrats"
"LechGrzelak/QuantFinanceBook" -> "domokane/FinancePy"
"LechGrzelak/QuantFinanceBook" -> "jsmidt/QuantPy"
"LechGrzelak/QuantFinanceBook" -> "quantsbin/Quantsbin"
"LechGrzelak/QuantFinanceBook" -> "LongOnly/Quantitative-Notebooks"
"LechGrzelak/QuantFinanceBook" -> "JerBouma/AlgorithmicTrading"
"LechGrzelak/QuantFinanceBook" -> "letianzj/quanttrader"
"LechGrzelak/QuantFinanceBook" -> "rolling-panda-san/notebooks"
"LechGrzelak/QuantFinanceBook" -> "PyPatel/Quant-Finance-Resources"
"LechGrzelak/QuantFinanceBook" -> "paulperry/quant"
"LechGrzelak/QuantFinanceBook" -> "enthought/pyql"
"LastAncientOne/Stock_Analysis_For_Quant" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"LastAncientOne/Stock_Analysis_For_Quant" -> "robertmartin8/MachineLearningStocks"
"LastAncientOne/Stock_Analysis_For_Quant" -> "LastAncientOne/SimpleStockAnalysisPython"
"LastAncientOne/Stock_Analysis_For_Quant" -> "letianzj/QuantResearch"
"LastAncientOne/Stock_Analysis_For_Quant" -> "fmilthaler/FinQuant"
"LastAncientOne/Stock_Analysis_For_Quant" -> "shashankvemuri/Finance"
"LastAncientOne/Stock_Analysis_For_Quant" -> "LongOnly/Quantitative-Notebooks"
"LastAncientOne/Stock_Analysis_For_Quant" -> "Hvass-Labs/FinanceOps"
"LastAncientOne/Stock_Analysis_For_Quant" -> "jasonstrimpel/volatility-trading"
"LastAncientOne/Stock_Analysis_For_Quant" -> "cuemacro/findatapy"
"LastAncientOne/Stock_Analysis_For_Quant" -> "dcajasn/Riskfolio-Lib"
"LastAncientOne/Stock_Analysis_For_Quant" -> "domokane/FinancePy"
"LastAncientOne/Stock_Analysis_For_Quant" -> "chrisconlan/algorithmic-trading-with-python"
"LastAncientOne/Stock_Analysis_For_Quant" -> "JerBouma/AlgorithmicTrading"
"LastAncientOne/Stock_Analysis_For_Quant" -> "achillesrasquinha/bulbea"
"robertmartin8/PyPortfolioOpt" -> "dcajasn/Riskfolio-Lib"
"robertmartin8/PyPortfolioOpt" -> "ranaroussi/quantstats"
"robertmartin8/PyPortfolioOpt" -> "hudson-and-thames/mlfinlab"
"robertmartin8/PyPortfolioOpt" -> "quantopian/pyfolio"
"robertmartin8/PyPortfolioOpt" -> "polakowo/vectorbt"
"robertmartin8/PyPortfolioOpt" -> "fmilthaler/FinQuant"
"robertmartin8/PyPortfolioOpt" -> "robertmartin8/MachineLearningStocks"
"robertmartin8/PyPortfolioOpt" -> "quantopian/alphalens"
"robertmartin8/PyPortfolioOpt" -> "letianzj/QuantResearch"
"robertmartin8/PyPortfolioOpt" -> "google/tf-quant-finance"
"robertmartin8/PyPortfolioOpt" -> "pmorissette/ffn"
"robertmartin8/PyPortfolioOpt" -> "je-suis-tm/quant-trading"
"robertmartin8/PyPortfolioOpt" -> "wilsonfreitas/awesome-quant"
"robertmartin8/PyPortfolioOpt" -> "domokane/FinancePy"
"robertmartin8/PyPortfolioOpt" -> "kernc/backtesting.py"
"convexfi/riskparity.py" -> "jcrichard/pyrb"
"convexfi/riskparity.py" -> "dppalomar/riskParityPortfolio"
"convexfi/riskparity.py" -> "jankrepl/deepdow"
"convexfi/riskparity.py" -> "abbass2/pyqstrat"
"convexfi/riskparity.py" -> "DanielPNewman/all-weather-risk-parity"
"convexfi/riskparity.py" -> "Marigold/universal-portfolios"
"convexfi/riskparity.py" -> "cvxgrp/cvxportfolio"
"georgezouq/awesome-ai-in-finance" -> "firmai/financial-machine-learning"
"georgezouq/awesome-ai-in-finance" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"georgezouq/awesome-ai-in-finance" -> "letianzj/QuantResearch"
"georgezouq/awesome-ai-in-finance" -> "shashankvemuri/Finance"
"georgezouq/awesome-ai-in-finance" -> "cbailes/awesome-deep-trading"
"georgezouq/awesome-ai-in-finance" -> "wilsonfreitas/awesome-quant"
"georgezouq/awesome-ai-in-finance" -> "paperswithbacktest/awesome-systematic-trading"
"georgezouq/awesome-ai-in-finance" -> "je-suis-tm/quant-trading"
"georgezouq/awesome-ai-in-finance" -> "EliteQuant/EliteQuant"
"georgezouq/awesome-ai-in-finance" -> "ranaroussi/quantstats"
"georgezouq/awesome-ai-in-finance" -> "borisbanushev/stockpredictionai"
"georgezouq/awesome-ai-in-finance" -> "JerBouma/FinanceDatabase"
"georgezouq/awesome-ai-in-finance" -> "google/tf-quant-finance"
"georgezouq/awesome-ai-in-finance" -> "dcajasn/Riskfolio-Lib"
"georgezouq/awesome-ai-in-finance" -> "mfrdixon/ML_Finance_Codes"
"mr-karan/awesome-investing" -> "georgezouq/awesome-ai-in-finance"
"mr-karan/awesome-investing" -> "antontarasenko/awesome-economics" ["e"=1]
"mr-karan/awesome-investing" -> "KrishMunot/awesome-startup" ["e"=1]
"mr-karan/awesome-investing" -> "ong/awesome-decentralized-finance" ["e"=1]
"mr-karan/awesome-investing" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"mr-karan/awesome-investing" -> "jyguyomarch/awesome-productivity" ["e"=1]
"mr-karan/awesome-investing" -> "wilsonfreitas/awesome-quant"
"mr-karan/awesome-investing" -> "tradytics/eiten"
"mr-karan/awesome-investing" -> "shashankvemuri/Finance"
"mr-karan/awesome-investing" -> "ttt30ga/awesome-product-design" ["e"=1]
"mr-karan/awesome-investing" -> "Hvass-Labs/FinanceOps"
"mr-karan/awesome-investing" -> "noteflakes/awesome-music" ["e"=1]
"mr-karan/awesome-investing" -> "huyingjie/Checklist-Checklist" ["e"=1]
"mr-karan/awesome-investing" -> "DopplerHQ/awesome-bots" ["e"=1]
"mr-karan/awesome-investing" -> "dictcp/awesome-git" ["e"=1]
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "daxm/fmpsdk"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "halessi/DCF"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "ikbale/fmp_python"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "patelneel55/financialmodelingprep"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "JerBouma/FundamentalsQuantifier"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "JerBouma/FinanceToolkit"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "razorhash/pyfmpcloud"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "twelvedata/twelvedata-python"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "sec-edgar/sec-edgar"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "cuemacro/findatapy"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "sewardlee337/finreportr"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "SimFin/simfin"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "MatthiWare/FinancialModelingPrep.NET"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "leonarduschen/pyfinmod"
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" -> "tooksoi/ScraXBRL"
"udacimak/udacimak" -> "udacity/artificial-intelligence-for-trading" ["e"=1]
"piquette/finance-go" -> "alpacahq/alpaca-trade-api-go" ["e"=1]
"piquette/finance-go" -> "gofinance/ib" ["e"=1]
"venky14/Stock-Market-Analysis-and-Prediction" -> "stefmolin/stock-analysis"
"venky14/Stock-Market-Analysis-and-Prediction" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"venky14/Stock-Market-Analysis-and-Prediction" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"venky14/Stock-Market-Analysis-and-Prediction" -> "Rajat-dhyani/Stock-Price-Predictor"
"venky14/Stock-Market-Analysis-and-Prediction" -> "nityansuman/warren"
"venky14/Stock-Market-Analysis-and-Prediction" -> "kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis"
"venky14/Stock-Market-Analysis-and-Prediction" -> "Ronak-59/Stock-Prediction"
"venky14/Stock-Market-Analysis-and-Prediction" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"venky14/Stock-Market-Analysis-and-Prediction" -> "scorpionhiccup/StockPricePrediction"
"venky14/Stock-Market-Analysis-and-Prediction" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"venky14/Stock-Market-Analysis-and-Prediction" -> "Vaibhav/Stock-Analysis"
"venky14/Stock-Market-Analysis-and-Prediction" -> "arkochhar/Technical-Indicators"
"venky14/Stock-Market-Analysis-and-Prediction" -> "NGYB/Stocks"
"venky14/Stock-Market-Analysis-and-Prediction" -> "pushpendughosh/Stock-market-forecasting"
"venky14/Stock-Market-Analysis-and-Prediction" -> "anwarcsebd/stock-market-analysis"
"hichenway/stock_predict_with_LSTM" -> "LouisScorpio/datamining"
"hichenway/stock_predict_with_LSTM" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"hichenway/stock_predict_with_LSTM" -> "lilianweng/stock-rnn"
"hichenway/stock_predict_with_LSTM" -> "NourozR/Stock-Price-Prediction-LSTM"
"hichenway/stock_predict_with_LSTM" -> "yangwohenmai/LSTM"
"hichenway/stock_predict_with_LSTM" -> "netblind/stockPredict" ["e"=1]
"hichenway/stock_predict_with_LSTM" -> "TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict" ["e"=1]
"hichenway/stock_predict_with_LSTM" -> "ndrplz/ConvLSTM_pytorch" ["e"=1]
"hichenway/stock_predict_with_LSTM" -> "scorpionhiccup/StockPricePrediction"
"hichenway/stock_predict_with_LSTM" -> "dalinvip/cnn-lstm-bilstm-deepcnn-clstm-in-pytorch" ["e"=1]
"hichenway/stock_predict_with_LSTM" -> "LightingFx/hs300_stock_predict" ["e"=1]
"hichenway/stock_predict_with_LSTM" -> "dzitkowskik/StockPredictionRNN"
"hichenway/stock_predict_with_LSTM" -> "pengxungui/LSTM_stock" ["e"=1]
"hichenway/stock_predict_with_LSTM" -> "nicodjimenez/lstm"
"hichenway/stock_predict_with_LSTM" -> "zhangxu0307/time_series_forecasting_pytorch" ["e"=1]
"toddwschneider/stocks" -> "wagenaartje/stocks.js"
"toddwschneider/stocks" -> "iexg/IEX-API"
"Roibal/Cryptocurrency-Trading-Bots-Python-Beginner-Advance" -> "ivopetiz/algotrading" ["e"=1]
"Dave-Vallance/bt-ccxt-store" -> "rodrigo-brito/backtrader-binance-bot"
"Dave-Vallance/bt-ccxt-store" -> "bartosh/backtrader"
"Dave-Vallance/bt-ccxt-store" -> "verybadsoldier/backtrader_plotting"
"Dave-Vallance/bt-ccxt-store" -> "phonegapX/bt-ccxt-store-cn"
"Dave-Vallance/bt-ccxt-store" -> "Dave-Vallance/tv2bt"
"Dave-Vallance/bt-ccxt-store" -> "happydasch/btplotting"
"Dave-Vallance/bt-ccxt-store" -> "lindomar-oliveira/backtrader-binance"
"Dave-Vallance/bt-ccxt-store" -> "backtrader2/backtrader"
"Dave-Vallance/bt-ccxt-store" -> "OmegaTrading/OmegaUI"
"Dave-Vallance/bt-ccxt-store" -> "Kismuz/btgym" ["e"=1]
"Dave-Vallance/bt-ccxt-store" -> "WISEPLAT/backtrader_binance"
"Dave-Vallance/bt-ccxt-store" -> "Skinok/backtrader-pyqt-ui"
"Dave-Vallance/bt-ccxt-store" -> "Ckend/pythondict-quant"
"Dave-Vallance/bt-ccxt-store" -> "scrtlabs/catalyst" ["e"=1]
"Dave-Vallance/bt-ccxt-store" -> "alpacahq/alpaca-backtrader-api"
"PacktPublishing/40-Algorithms-Every-Programmer-Should-Know" -> "PacktPublishing/Learn-Algorithmic-Trading" ["e"=1]
"PacktPublishing/40-Algorithms-Every-Programmer-Should-Know" -> "PacktPublishing/Python-for-Finance-Cookbook" ["e"=1]
"tedchou12/webull" -> "Jake0303/Webull-Trading-Bot"
"tedchou12/webull" -> "robinhood-unofficial/pyrh"
"tedchou12/webull" -> "jmfernandes/robin_stocks"
"tedchou12/webull" -> "areed1192/td-ameritrade-python-api"
"tedchou12/webull" -> "edmundpf/webull-api-ts"
"tedchou12/webull" -> "webull-inc/openapi-python-sdk"
"tedchou12/webull" -> "alpacahq/alpaca-trade-api-python"
"tedchou12/webull" -> "alexgolec/tda-api"
"tedchou12/webull" -> "aurbano/robinhood-node"
"tedchou12/webull" -> "timkpaine/tdameritrade"
"tedchou12/webull" -> "alpacahq/alpaca-backtrader-api"
"tedchou12/webull" -> "alpacahq/example-scalping"
"tedchou12/webull" -> "Jake0303/RobinHood-RSI-Trading-Bot"
"tedchou12/webull" -> "sanko/Robinhood"
"tedchou12/webull" -> "alexgolec/schwab-py"
"timkpaine/tdameritrade" -> "jeog/TDAmeritradeAPI"
"timkpaine/tdameritrade" -> "areed1192/td-ameritrade-python-api"
"timkpaine/tdameritrade" -> "alexgolec/tda-api"
"timkpaine/tdameritrade" -> "jeog/TOSDataBridge"
"timkpaine/tdameritrade" -> "areed1192/td-ameritrade-api"
"timkpaine/tdameritrade" -> "isonium/TDAmeritrade-API"
"timkpaine/tdameritrade" -> "jshingler/TOS-and-Thinkscript-Snippet-Collection"
"timkpaine/tdameritrade" -> "robinhood-unofficial/pyrh"
"timkpaine/tdameritrade" -> "michaelchu/optopsy"
"timkpaine/tdameritrade" -> "alexgolec/schwab-py"
"timkpaine/tdameritrade" -> "TreyThomas93/python-trading-bot-with-thinkorswim"
"timkpaine/tdameritrade" -> "tkp-archive/pyEX"
"timkpaine/tdameritrade" -> "mariostoev/finviz"
"timkpaine/tdameritrade" -> "jessecooper/pyetrade"
"timkpaine/tdameritrade" -> "AsyncAlgoTrading/aat"
"john5223/minas" -> "hwrdprkns/ThinkOrSwim"
"john5223/minas" -> "yammypotato/Thinkorswim-Scripts"
"ARKInvest/ARK-Invest-Tesla-Valuation-Model" -> "SimplyWallSt/Company-Analysis-Model" ["e"=1]
"ARKInvest/ARK-Invest-Tesla-Valuation-Model" -> "fmilthaler/FinQuant" ["e"=1]
"LexPredict/lexpredict-lexnlp" -> "LexPredict/openedgar" ["e"=1]
"vedic-partap/Event-Driven-Stock-Prediction-using-Deep-Learning" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" ["e"=1]
"je-suis-tm/quant-trading" -> "wilsonfreitas/awesome-quant"
"je-suis-tm/quant-trading" -> "ranaroussi/quantstats"
"je-suis-tm/quant-trading" -> "letianzj/QuantResearch"
"je-suis-tm/quant-trading" -> "EliteQuant/EliteQuant"
"je-suis-tm/quant-trading" -> "chrisconlan/algorithmic-trading-with-python"
"je-suis-tm/quant-trading" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"je-suis-tm/quant-trading" -> "firmai/financial-machine-learning"
"je-suis-tm/quant-trading" -> "kernc/backtesting.py"
"je-suis-tm/quant-trading" -> "paperswithbacktest/awesome-systematic-trading"
"je-suis-tm/quant-trading" -> "stefan-jansen/machine-learning-for-trading"
"je-suis-tm/quant-trading" -> "shashankvemuri/Finance"
"je-suis-tm/quant-trading" -> "polakowo/vectorbt"
"je-suis-tm/quant-trading" -> "hudson-and-thames/mlfinlab"
"je-suis-tm/quant-trading" -> "robertmartin8/PyPortfolioOpt"
"je-suis-tm/quant-trading" -> "dcajasn/Riskfolio-Lib"
"Hvass-Labs/FinanceOps" -> "domokane/FinancePy"
"Hvass-Labs/FinanceOps" -> "shashankvemuri/Finance"
"Hvass-Labs/FinanceOps" -> "LastAncientOne/Stock_Analysis_For_Quant"
"Hvass-Labs/FinanceOps" -> "yhilpisch/py4fi"
"Hvass-Labs/FinanceOps" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"Hvass-Labs/FinanceOps" -> "PacktPublishing/Python-for-Finance-Cookbook"
"Hvass-Labs/FinanceOps" -> "fmilthaler/FinQuant"
"Hvass-Labs/FinanceOps" -> "letianzj/QuantResearch"
"Hvass-Labs/FinanceOps" -> "Auquan/Tutorials"
"Hvass-Labs/FinanceOps" -> "Finance-Hub/FinanceHub"
"Hvass-Labs/FinanceOps" -> "alpha-miner/Finance-Python"
"Hvass-Labs/FinanceOps" -> "dcajasn/Riskfolio-Lib"
"Hvass-Labs/FinanceOps" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"Hvass-Labs/FinanceOps" -> "jasonstrimpel/volatility-trading"
"Hvass-Labs/FinanceOps" -> "marketneutral/alphatools"
"SuperCV/Book" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"healthDataScience/deep-learning-HAR" -> "RobRomijnders/LSTM_tsc" ["e"=1]
"healthDataScience/deep-learning-HAR" -> "aqibsaeed/Multilabel-timeseries-classification-with-LSTM" ["e"=1]
"healthDataScience/deep-learning-HAR" -> "RobRomijnders/CNN_tsc" ["e"=1]
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "cbailes/awesome-deep-trading"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "georgezouq/awesome-ai-in-finance"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "EliteQuant/EliteQuant"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "hudson-and-thames/mlfinlab"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "letianzj/QuantResearch"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "firmai/financial-machine-learning"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "je-suis-tm/quant-trading"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "Yvictor/TradingGym" ["e"=1]
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "paperswithbacktest/awesome-systematic-trading"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "chrisconlan/algorithmic-trading-with-python"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "wilsonfreitas/awesome-quant"
"grananqvist/Awesome-Quant-Machine-Learning-Trading" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"OpenSourceRisk/ORE-SWIG" -> "OpenSourceRisk/Dashboard"
"IbcAlpha/IBC" -> "erdewit/ib_insync"
"IbcAlpha/IBC" -> "ib-controller/ib-controller"
"IbcAlpha/IBC" -> "Voyz/ibeam"
"IbcAlpha/IBC" -> "ib-api-reloaded/ib_async"
"IbcAlpha/IBC" -> "gnzsnz/ib-gateway-docker"
"IbcAlpha/IBC" -> "UnusualAlpha/ib-gateway-docker"
"IbcAlpha/IBC" -> "mvberg/ib-gateway-docker"
"IbcAlpha/IBC" -> "brndnmtthws/thetagang"
"IbcAlpha/IBC" -> "roblav96/headless-ib-gateway-installation-ubuntu-server"
"IbcAlpha/IBC" -> "areed1192/interactive-broker-python-api"
"IbcAlpha/IBC" -> "blampe/IbPy"
"IbcAlpha/IBC" -> "ranaroussi/qtpylib"
"IbcAlpha/IBC" -> "extrange/ibkr-docker"
"IbcAlpha/IBC" -> "robcarver17/pysystemtrade"
"IbcAlpha/IBC" -> "InteractiveBrokers/tws-api-public"
"PyPatel/Options-Trading-Strategies-in-Python" -> "michaelchu/optopsy"
"PyPatel/Options-Trading-Strategies-in-Python" -> "jasonstrimpel/volatility-trading"
"PyPatel/Options-Trading-Strategies-in-Python" -> "JerBouma/AlgorithmicTrading"
"PyPatel/Options-Trading-Strategies-in-Python" -> "PyPatel/Machine-Learning-and-AI-in-Trading"
"PyPatel/Options-Trading-Strategies-in-Python" -> "je-suis-tm/quant-trading"
"PyPatel/Options-Trading-Strategies-in-Python" -> "LongOnly/Quantitative-Notebooks"
"PyPatel/Options-Trading-Strategies-in-Python" -> "LastAncientOne/Stock_Analysis_For_Quant"
"PyPatel/Options-Trading-Strategies-in-Python" -> "sirnfs/OptionSuite"
"PyPatel/Options-Trading-Strategies-in-Python" -> "PyPatel/Quant-Finance-Resources"
"PyPatel/Options-Trading-Strategies-in-Python" -> "mcdallas/wallstreet"
"PyPatel/Options-Trading-Strategies-in-Python" -> "vollib/vollib"
"PyPatel/Options-Trading-Strategies-in-Python" -> "constverum/Quantdom"
"PyPatel/Options-Trading-Strategies-in-Python" -> "letianzj/QuantResearch"
"PyPatel/Options-Trading-Strategies-in-Python" -> "boyac/pyOptionPricing"
"PyPatel/Options-Trading-Strategies-in-Python" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"clf110510/stochastic-volatility" -> "JackJacquier/SSVI"
"clf110510/stochastic-volatility" -> "JackJacquier/SABR-Implied-Volatility"
"exchangeratesapi/exchangeratesapi" -> "apilayer/ratesapi" ["e"=1]
"AI4Finance-Foundation/ElegantRL" -> "AI4Finance-Foundation/FinRL" ["e"=1]
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "PacktPublishing/Learn-Algorithmic-Trading"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "chrisconlan/algorithmic-trading-with-python"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "PacktPublishing/Python-for-Finance-Cookbook"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "cbailes/awesome-deep-trading"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "letianzj/QuantResearch"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "hudson-and-thames/mlfinlab"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "yhilpisch/py4fi2nd"
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" -> "JerBouma/AlgorithmicTrading"
"alpha-xone/xbbg" -> "matthewgilbert/pdblp"
"alpha-xone/xbbg" -> "matthewgilbert/blp"
"alpha-xone/xbbg" -> "msitt/blpapi-python"
"alpha-xone/xbbg" -> "kyuni22/pybbg"
"alpha-xone/xbbg" -> "alex314159/blpapiwrapper"
"alpha-xone/xbbg" -> "bpsmith/tia"
"robcarver17/pysystemtrade_examples" -> "robcarver17/systematictradingexamples"
"robcarver17/pysystemtrade_examples" -> "MarcosCarreira/DermanPapers"
"robcarver17/pysystemtrade_examples" -> "dedwards25/Python_Option_Pricing"
"robcarver17/pysystemtrade_examples" -> "Finance-Hub/FinanceHub"
"robcarver17/pysystemtrade_examples" -> "rsvp/fecon235"
"robcarver17/pysystemtrade_examples" -> "LongOnly/Quantitative-Notebooks"
"robcarver17/pysystemtrade_examples" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"Finance-Hub/FinanceHub" -> "MarcosCarreira/DermanPapers"
"Finance-Hub/FinanceHub" -> "robcarver17/pysystemtrade_examples"
"Finance-Hub/FinanceHub" -> "robcarver17/systematictradingexamples"
"Finance-Hub/FinanceHub" -> "LongOnly/Quantitative-Notebooks"
"Finance-Hub/FinanceHub" -> "dedwards25/Python_Option_Pricing"
"Finance-Hub/FinanceHub" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"Finance-Hub/FinanceHub" -> "rsvp/fecon235"
"Finance-Hub/FinanceHub" -> "domokane/FinancePy"
"Finance-Hub/FinanceHub" -> "jsmidt/QuantPy"
"Finance-Hub/FinanceHub" -> "Finance-Hub/FinanceHubMaterials"
"Finance-Hub/FinanceHub" -> "LechGrzelak/QuantFinanceBook"
"Finance-Hub/FinanceHub" -> "fmilthaler/FinQuant"
"Finance-Hub/FinanceHub" -> "quantsbin/Quantsbin"
"Finance-Hub/FinanceHub" -> "alpha-miner/Finance-Python"
"Finance-Hub/FinanceHub" -> "enthought/pyql"
"LongOnly/Quantitative-Notebooks" -> "MarcosCarreira/DermanPapers"
"LongOnly/Quantitative-Notebooks" -> "Finance-Hub/FinanceHub"
"LongOnly/Quantitative-Notebooks" -> "rsvp/fecon235"
"LongOnly/Quantitative-Notebooks" -> "robcarver17/systematictradingexamples"
"LongOnly/Quantitative-Notebooks" -> "dedwards25/Python_Option_Pricing"
"LongOnly/Quantitative-Notebooks" -> "robcarver17/pysystemtrade_examples"
"LongOnly/Quantitative-Notebooks" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"LongOnly/Quantitative-Notebooks" -> "letianzj/QuantResearch"
"LongOnly/Quantitative-Notebooks" -> "jsmidt/QuantPy"
"LongOnly/Quantitative-Notebooks" -> "paulperry/quant"
"LongOnly/Quantitative-Notebooks" -> "JerBouma/AlgorithmicTrading"
"LongOnly/Quantitative-Notebooks" -> "LastAncientOne/Stock_Analysis_For_Quant"
"LongOnly/Quantitative-Notebooks" -> "jasonstrimpel/volatility-trading"
"LongOnly/Quantitative-Notebooks" -> "shashankvemuri/Finance"
"LongOnly/Quantitative-Notebooks" -> "chrisconlan/algorithmic-trading-with-python"
"cbailes/awesome-deep-trading" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"cbailes/awesome-deep-trading" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"cbailes/awesome-deep-trading" -> "Yvictor/TradingGym" ["e"=1]
"cbailes/awesome-deep-trading" -> "letianzj/QuantResearch"
"cbailes/awesome-deep-trading" -> "georgezouq/awesome-ai-in-finance"
"cbailes/awesome-deep-trading" -> "EliteQuant/EliteQuant"
"cbailes/awesome-deep-trading" -> "joelowj/awesome-algorithmic-trading"
"cbailes/awesome-deep-trading" -> "hudson-and-thames/mlfinlab"
"cbailes/awesome-deep-trading" -> "LongOnly/Quantitative-Notebooks"
"cbailes/awesome-deep-trading" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"cbailes/awesome-deep-trading" -> "tensortrade-org/tensortrade"
"cbailes/awesome-deep-trading" -> "sadighian/crypto-rl" ["e"=1]
"cbailes/awesome-deep-trading" -> "Albert-Z-Guo/Deep-Reinforcement-Stock-Trading" ["e"=1]
"cbailes/awesome-deep-trading" -> "firmai/machine-learning-asset-management"
"cbailes/awesome-deep-trading" -> "firmai/financial-machine-learning"
"notadamking/Stock-Trading-Environment" -> "tensortrade-org/tensortrade" ["e"=1]
"alpacahq/example-hftish" -> "alpacahq/example-scalping" ["e"=1]
"alpacahq/example-hftish" -> "alpacahq/Momentum-Trading-Example" ["e"=1]
"alpacahq/example-hftish" -> "alpacahq/alpaca-backtrader-api" ["e"=1]
"alpacahq/example-hftish" -> "ivopetiz/algotrading" ["e"=1]
"alpacahq/example-hftish" -> "JerBouma/AlgorithmicTrading" ["e"=1]
"influxdata/influxdb-python" -> "man-group/arctic" ["e"=1]
"alvarobartt/investpy" -> "alvarobartt/investiny"
"alvarobartt/investpy" -> "alvarobartt/trendet"
"alvarobartt/investpy" -> "alvarobartt/pyrtfolio"
"alvarobartt/investpy" -> "cuemacro/findatapy"
"alvarobartt/investpy" -> "ranaroussi/quantstats"
"alvarobartt/investpy" -> "dcajasn/Riskfolio-Lib"
"alvarobartt/investpy" -> "hudson-and-thames/mlfinlab"
"alvarobartt/investpy" -> "robertmartin8/PyPortfolioOpt"
"alvarobartt/investpy" -> "pydata/pandas-datareader"
"alvarobartt/investpy" -> "JerBouma/FinanceToolkit"
"alvarobartt/investpy" -> "ranaroussi/qtpylib"
"alvarobartt/investpy" -> "twopirllc/pandas-ta"
"alvarobartt/investpy" -> "peerchemist/finta"
"alvarobartt/investpy" -> "robcarver17/pysystemtrade"
"alvarobartt/investpy" -> "JerBouma/FinanceDatabase"
"quantrocket-llc/moonshot" -> "quantrocket-llc/moonchart"
"quantrocket-llc/moonshot" -> "quantrocket-llc/quantrocket-client"
"quantrocket-llc/moonshot" -> "abbass2/pyqstrat"
"quantrocket-llc/moonshot" -> "quantrocket-llc/ibpythonic"
"quantrocket-llc/moonshot" -> "fja05680/pinkfish"
"quantrocket-llc/moonshot" -> "quantrocket-llc/zipline-extensions"
"quantrocket-llc/moonshot" -> "quantrocket-llc/ibapi-grease"
"fxcm/RestAPI" -> "fxcm/ForexConnectAPI"
"fxcm/RestAPI" -> "fxcm/MarketData"
"fxcm/RestAPI" -> "gehtsoft/forex-connect"
"fxcm/RestAPI" -> "fxcm/JavaAPI"
"fxcm/RestAPI" -> "fxcm/FIXAPI"
"fxcm/RestAPI" -> "hootnot/oanda-api-v20"
"fxcm/RestAPI" -> "fxcm/FXCMTickData"
"fxcm/RestAPI" -> "darwinex/DarwinexLabs" ["e"=1]
"fxcm/RestAPI" -> "oanda/v20-python-samples"
"fxcm/RestAPI" -> "giuse88/duka"
"fxcm/RestAPI" -> "hootnot/oandapyV20-examples"
"fxcm/RestAPI" -> "oanda/oandapy"
"fxcm/RestAPI" -> "mhallsmoore/qsforex"
"CarterBain/AlephNull" -> "maihde/quant"
"CarterBain/AlephNull" -> "benjaminmgross/visualize-wealth"
"CarterBain/AlephNull" -> "Emsu/prophet"
"CarterBain/AlephNull" -> "fja05680/pinkfish"
"CarterBain/AlephNull" -> "panpanpandas/ultrafinance"
"CarterBain/AlephNull" -> "ematvey/pybacktest"
"CarterBain/AlephNull" -> "thalesians/pythalesians"
"CarterBain/AlephNull" -> "cperler/trading"
"ib-controller/ib-controller" -> "IbcAlpha/IBC"
"ib-controller/ib-controller" -> "blampe/IbPy"
"ib-controller/ib-controller" -> "erdewit/ib_insync"
"ib-controller/ib-controller" -> "mvberg/ib-gateway-docker"
"ib-controller/ib-controller" -> "roblav96/headless-ib-gateway-installation-ubuntu-server"
"ib-controller/ib-controller" -> "pilwon/node-ib"
"ib-controller/ib-controller" -> "Komnomnomnom/swigibpy"
"ib-controller/ib-controller" -> "ryankennedyio/ib-docker"
"ib-controller/ib-controller" -> "InteractiveBrokers/tws-api-public"
"ib-controller/ib-controller" -> "Voyz/ibeam"
"ib-controller/ib-controller" -> "gofinance/ib"
"ib-controller/ib-controller" -> "ranaroussi/ezibpy"
"ib-controller/ib-controller" -> "jamesmawm/High-Frequency-Trading-Model-with-IB"
"ib-controller/ib-controller" -> "ib-api-reloaded/ib_async"
"ib-controller/ib-controller" -> "trade-manager/trade-manager" ["e"=1]
"hosseinmoein/DataFrame" -> "lballabio/QuantLib" ["e"=1]
"notadamking/RLTrader" -> "tensortrade-org/tensortrade" ["e"=1]
"notadamking/RLTrader" -> "cbailes/awesome-deep-trading" ["e"=1]
"anilshanbhag/RobinhoodShell" -> "robinhood-unofficial/pyrh"
"anilshanbhag/RobinhoodShell" -> "sanko/Robinhood"
"anilshanbhag/RobinhoodShell" -> "2018kguo/RobinhoodBot"
"anilshanbhag/RobinhoodShell" -> "mstrum/robinhood-python"
"anilshanbhag/RobinhoodShell" -> "aurbano/robinhood-node"
"anilshanbhag/RobinhoodShell" -> "codesociety/friartuck"
"anilshanbhag/RobinhoodShell" -> "joshfraser/robinhood-to-csv"
"anilshanbhag/RobinhoodShell" -> "yura505/robinbot"
"anilshanbhag/RobinhoodShell" -> "jmfernandes/robin_stocks"
"anilshanbhag/RobinhoodShell" -> "tomgrek/rnn-robinhood"
"anilshanbhag/RobinhoodShell" -> "westonplatter/fast_arrow"
"anilshanbhag/RobinhoodShell" -> "aseylys/KStock"
"anilshanbhag/RobinhoodShell" -> "Jake0303/RobinHood-RSI-Trading-Bot"
"anilshanbhag/RobinhoodShell" -> "rohanpai/Robinhood"
"anilshanbhag/RobinhoodShell" -> "chiefsmurph/robinhood-playground"
"polakowo/vectorbt" -> "kernc/backtesting.py"
"polakowo/vectorbt" -> "ranaroussi/quantstats"
"polakowo/vectorbt" -> "twopirllc/pandas-ta"
"polakowo/vectorbt" -> "mementum/backtrader"
"polakowo/vectorbt" -> "hudson-and-thames/mlfinlab"
"polakowo/vectorbt" -> "robertmartin8/PyPortfolioOpt"
"polakowo/vectorbt" -> "pmorissette/bt"
"polakowo/vectorbt" -> "TA-Lib/ta-lib-python"
"polakowo/vectorbt" -> "dcajasn/Riskfolio-Lib"
"polakowo/vectorbt" -> "robcarver17/pysystemtrade"
"polakowo/vectorbt" -> "je-suis-tm/quant-trading"
"polakowo/vectorbt" -> "wilsonfreitas/awesome-quant"
"polakowo/vectorbt" -> "QuantConnect/Lean"
"polakowo/vectorbt" -> "nautechsystems/nautilus_trader"
"polakowo/vectorbt" -> "paperswithbacktest/awesome-systematic-trading"
"ivopetiz/algotrading" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"ivopetiz/algotrading" -> "TheFourGreatErrors/alpha-rptr" ["e"=1]
"ivopetiz/algotrading" -> "amor71/LiuAlgoTrader"
"ivopetiz/algotrading" -> "letianzj/quanttrader"
"ivopetiz/algotrading" -> "alpacahq/example-scalping"
"ivopetiz/algotrading" -> "JerBouma/AlgorithmicTrading"
"ivopetiz/algotrading" -> "Roibal/Cryptocurrency-Trading-Bots-Python-Beginner-Advance" ["e"=1]
"ivopetiz/algotrading" -> "letianzj/QuantResearch"
"ivopetiz/algotrading" -> "s-brez/trading-server"
"ivopetiz/algotrading" -> "PacktPublishing/Learn-Algorithmic-Trading"
"ivopetiz/algotrading" -> "chrisconlan/algorithmic-trading-with-python"
"ivopetiz/algotrading" -> "Yvictor/TradingGym" ["e"=1]
"ivopetiz/algotrading" -> "enzoampil/fastquant"
"ivopetiz/algotrading" -> "Crypto-toolbox/HFT-Orderbook" ["e"=1]
"ivopetiz/algotrading" -> "cbailes/awesome-deep-trading"
"s-brez/trading-server" -> "TheFourGreatErrors/alpha-rptr" ["e"=1]
"s-brez/trading-server" -> "tudorelu/pyjuque" ["e"=1]
"s-brez/trading-server" -> "AsyncAlgoTrading/aat"
"s-brez/trading-server" -> "constverum/Quantdom"
"s-brez/trading-server" -> "kieran-mackle/AutoTrader"
"s-brez/trading-server" -> "ivopetiz/algotrading"
"s-brez/trading-server" -> "amor71/LiuAlgoTrader"
"s-brez/trading-server" -> "mementum/bta-lib"
"s-brez/trading-server" -> "michaelchu/optopsy"
"s-brez/trading-server" -> "robswc/tradingview-webhooks-bot" ["e"=1]
"s-brez/trading-server" -> "alpacahq/example-scalping"
"s-brez/trading-server" -> "SockTrader/SockTrader" ["e"=1]
"s-brez/trading-server" -> "ematvey/pybacktest"
"s-brez/trading-server" -> "happydasch/btplotting"
"s-brez/trading-server" -> "JerBouma/AlgorithmicTrading"
"wolfinch/wolfinch" -> "jrmeier/fast-trade" ["e"=1]
"wolfinch/wolfinch" -> "s-brez/trading-server" ["e"=1]
"bukosabino/ta" -> "twopirllc/pandas-ta"
"bukosabino/ta" -> "TA-Lib/ta-lib-python"
"bukosabino/ta" -> "peerchemist/finta"
"bukosabino/ta" -> "kernc/backtesting.py"
"bukosabino/ta" -> "matplotlib/mplfinance"
"bukosabino/ta" -> "ranaroussi/quantstats"
"bukosabino/ta" -> "mementum/backtrader"
"bukosabino/ta" -> "polakowo/vectorbt"
"bukosabino/ta" -> "hudson-and-thames/mlfinlab"
"bukosabino/ta" -> "quantopian/pyfolio"
"bukosabino/ta" -> "robertmartin8/PyPortfolioOpt"
"bukosabino/ta" -> "ranaroussi/qtpylib"
"bukosabino/ta" -> "pmorissette/bt"
"bukosabino/ta" -> "pmorissette/ffn"
"bukosabino/ta" -> "tensortrade-org/tensortrade"
"ZhengyaoJiang/PGPortfolio" -> "Marigold/universal-portfolios" ["e"=1]
"chengstone/LotteryPredict" -> "yangboz/LotteryPrediction"
"chengstone/LotteryPredict" -> "Liang-yc/ssq"
"chengstone/LotteryPredict" -> "zepen/predict_Lottery_ticket"
"chengstone/LotteryPredict" -> "oahzxd/lottoery"
"chengstone/LotteryPredict" -> "pengyuwang618/lottery"
"chengstone/LotteryPredict" -> "KittenCN/predict_Lottery_ticket"
"chengstone/LotteryPredict" -> "AaronJny/lotto"
"chengstone/LotteryPredict" -> "BEWINDOWEB/lotterygrabber"
"chengstone/LotteryPredict" -> "LouisScorpio/datamining"
"chengstone/LotteryPredict" -> "fight1990/Lottery"
"chengstone/LotteryPredict" -> "Zhibihuanian/-LSTM"
"udacity/artificial-intelligence-for-trading" -> "scumabo/AI-for-Trading"
"udacity/artificial-intelligence-for-trading" -> "ThomasGrivaz/ai-for-trading"
"udacity/artificial-intelligence-for-trading" -> "udacity/artificial-intelligence" ["e"=1]
"udacity/artificial-intelligence-for-trading" -> "cbailes/awesome-deep-trading"
"udacity/artificial-intelligence-for-trading" -> "PyPatel/Machine-Learning-and-AI-in-Trading"
"udacity/artificial-intelligence-for-trading" -> "udacity/ML_SageMaker_Studies" ["e"=1]
"udacity/artificial-intelligence-for-trading" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"udacity/artificial-intelligence-for-trading" -> "michaelsyao/AI-for-Trading"
"udacity/artificial-intelligence-for-trading" -> "purvasingh96/AI-for-Trading"
"udacity/artificial-intelligence-for-trading" -> "ucaiado/QLearning_Trading" ["e"=1]
"udacity/artificial-intelligence-for-trading" -> "PacktPublishing/Learn-Algorithmic-Trading"
"udacity/artificial-intelligence-for-trading" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"udacity/artificial-intelligence-for-trading" -> "udacity/DSND_Term1" ["e"=1]
"udacity/artificial-intelligence-for-trading" -> "jasonstrimpel/volatility-trading"
"udacity/artificial-intelligence-for-trading" -> "udacity/NLP-Exercises" ["e"=1]
"zvtvz/zvt" -> "ranaroussi/quantstats" ["e"=1]
"zvtvz/zvt" -> "quantopian/alphalens" ["e"=1]
"zvtvz/zvt" -> "letianzj/QuantResearch" ["e"=1]
"lifelib-dev/lifelib" -> "fumitoh/modelx"
"lifelib-dev/lifelib" -> "franciscogarate/pyliferisk"
"lifelib-dev/lifelib" -> "casact/chainladder-python"
"lifelib-dev/lifelib" -> "JuliaActuary/LifeContingencies.jl"
"lifelib-dev/lifelib" -> "trollefson/elizur"
"lifelib-dev/lifelib" -> "acturtle/cashflower"
"lifelib-dev/lifelib" -> "spedygiorgio/lifecontingencies"
"lifelib-dev/lifelib" -> "JuliaActuary/ActuaryUtilities.jl"
"lifelib-dev/lifelib" -> "genedan/actuarial-foss"
"lifelib-dev/lifelib" -> "jason-ash/pyesg"
"lifelib-dev/lifelib" -> "casact/FASLR"
"lifelib-dev/lifelib" -> "validatehealth/actuary"
"lifelib-dev/lifelib" -> "Systemorph/IFRS17CalculationEngine"
"tkfy920/PythonQuantitativeFinance" -> "Ckend/pythondict-quant" ["e"=1]
"ShamaUgale/myBooks" -> "manjunath5496/Best-Investing-Books"
"MaximumBeings/public" -> "nburgessx/Papers"
"federicomariamassari/willowtree" -> "bbcho/finoptions-dev"
"federicomariamassari/willowtree" -> "GriffinAustin/pynance"
"federicomariamassari/willowtree" -> "romanmichaelpaolucci/Q-Fin"
"federicomariamassari/willowtree" -> "federicomariamassari/financial-engineering"
"federicomariamassari/willowtree" -> "ynouri/pysabr"
"federicomariamassari/willowtree" -> "quantsbin/Quantsbin"
"federicomariamassari/willowtree" -> "dbrojas/optlib"
"federicomariamassari/willowtree" -> "vollib/vollib"
"federicomariamassari/willowtree" -> "jsmidt/QuantPy"
"federicomariamassari/willowtree" -> "alpha-miner/Finance-Python"
"federicomariamassari/willowtree" -> "enthought/pyql"
"federicomariamassari/willowtree" -> "pmorissette/ffn"
"federicomariamassari/willowtree" -> "domokane/FinancePy"
"federicomariamassari/financial-engineering" -> "GriffinAustin/pynance"
"federicomariamassari/financial-engineering" -> "federicomariamassari/willowtree"
"federicomariamassari/financial-engineering" -> "romanmichaelpaolucci/Q-Fin"
"federicomariamassari/financial-engineering" -> "bbcho/finoptions-dev"
"federicomariamassari/financial-engineering" -> "ynouri/pysabr"
"federicomariamassari/financial-engineering" -> "vollib/vollib"
"federicomariamassari/financial-engineering" -> "quantsbin/Quantsbin"
"federicomariamassari/financial-engineering" -> "jsmidt/QuantPy"
"federicomariamassari/financial-engineering" -> "dbrojas/optlib"
"federicomariamassari/financial-engineering" -> "alpha-miner/Finance-Python"
"federicomariamassari/financial-engineering" -> "enthought/pyql"
"federicomariamassari/financial-engineering" -> "pmorissette/ffn"
"federicomariamassari/financial-engineering" -> "domokane/FinancePy"
"quantopian/trading_calendars" -> "rsheftel/pandas_market_calendars"
"quantopian/trading_calendars" -> "quantopian/empyrical"
"quantopian/trading_calendars" -> "gerrymanoim/exchange_calendars"
"quantopian/trading_calendars" -> "quantopian/alphalens"
"quantopian/trading_calendars" -> "enthought/pyql"
"quantopian/trading_calendars" -> "cuemacro/findatapy"
"quantopian/trading_calendars" -> "quantopian/pyfolio"
"quantopian/trading_calendars" -> "ranaroussi/qtpylib"
"quantopian/trading_calendars" -> "alpacahq/pipeline-live"
"quantopian/trading_calendars" -> "johnbywater/quantdsl"
"quantopian/trading_calendars" -> "quantopian/research_public"
"quantopian/trading_calendars" -> "jasonstrimpel/volatility-trading"
"quantopian/trading_calendars" -> "alpacahq/pylivetrader"
"quantopian/trading_calendars" -> "alpacahq/Momentum-Trading-Example"
"quantopian/trading_calendars" -> "quantopian/mlfinlab"
"quantsbin/Quantsbin" -> "bbcho/finoptions-dev"
"quantsbin/Quantsbin" -> "romanmichaelpaolucci/Q-Fin"
"quantsbin/Quantsbin" -> "GriffinAustin/pynance"
"quantsbin/Quantsbin" -> "federicomariamassari/willowtree"
"quantsbin/Quantsbin" -> "federicomariamassari/financial-engineering"
"quantsbin/Quantsbin" -> "dbrojas/optlib"
"quantsbin/Quantsbin" -> "jsmidt/QuantPy"
"quantsbin/Quantsbin" -> "ynouri/pysabr"
"quantsbin/Quantsbin" -> "vollib/vollib"
"quantsbin/Quantsbin" -> "alpha-miner/Finance-Python"
"quantsbin/Quantsbin" -> "enthought/pyql"
"quantsbin/Quantsbin" -> "domokane/FinancePy"
"quantsbin/Quantsbin" -> "pmorissette/ffn"
"quantsbin/Quantsbin" -> "google/tf-quant-finance"
"quantsbin/Quantsbin" -> "dedwards25/Python_Option_Pricing"
"tensortrade-org/tensortrade" -> "notadamking/RLTrader" ["e"=1]
"tensortrade-org/tensortrade" -> "AminHP/gym-anytrading" ["e"=1]
"tensortrade-org/tensortrade" -> "AI4Finance-Foundation/FinRL"
"tensortrade-org/tensortrade" -> "Yvictor/TradingGym" ["e"=1]
"tensortrade-org/tensortrade" -> "AI4Finance-Foundation/FinRL-Trading" ["e"=1]
"tensortrade-org/tensortrade" -> "hudson-and-thames/mlfinlab"
"tensortrade-org/tensortrade" -> "Kismuz/btgym" ["e"=1]
"tensortrade-org/tensortrade" -> "polakowo/vectorbt"
"tensortrade-org/tensortrade" -> "cbailes/awesome-deep-trading"
"tensortrade-org/tensortrade" -> "sadighian/crypto-rl" ["e"=1]
"tensortrade-org/tensortrade" -> "twopirllc/pandas-ta"
"tensortrade-org/tensortrade" -> "mementum/backtrader"
"tensortrade-org/tensortrade" -> "google/tf-quant-finance"
"tensortrade-org/tensortrade" -> "ranaroussi/quantstats"
"tensortrade-org/tensortrade" -> "bukosabino/ta"
"ChillarAnand/stocktrends" -> "quantroom-pro/pyrenko"
"ChillarAnand/stocktrends" -> "techietrader/Trading-indicators-and-Chart-patterns"
"ChillarAnand/stocktrends" -> "GerardBCN/RenkoTrading"
"ChillarAnand/stocktrends" -> "lamres/renko_trend_following_strategy_catalyst"
"ChillarAnand/stocktrends" -> "pegahcarter/TAcharts"
"ChillarAnand/stocktrends" -> "arkochhar/Technical-Indicators"
"ChillarAnand/stocktrends" -> "aticio/renko"
"ChillarAnand/stocktrends" -> "kylejusticemagnuson/pyti"
"ChillarAnand/stocktrends" -> "LastAncientOne/SimpleStockAnalysisPython"
"ChillarAnand/stocktrends" -> "srlcarlg/renkodf"
"ChillarAnand/stocktrends" -> "alvarobartt/trendet"
"tkp-archive/pyEX" -> "addisonlynch/iexfinance"
"tkp-archive/pyEX" -> "iexg/IEX-API"
"tkp-archive/pyEX" -> "tkp-archive/iexjs" ["e"=1]
"tkp-archive/pyEX" -> "timkpaine/pyEX-zipline"
"tkp-archive/pyEX" -> "alpacahq/pylivetrader"
"tkp-archive/pyEX" -> "timkpaine/temporal-cache" ["e"=1]
"tkp-archive/pyEX" -> "rsheftel/pandas_market_calendars"
"tkp-archive/pyEX" -> "danielecook/iex-api-python"
"tkp-archive/pyEX" -> "timkpaine/tdameritrade"
"tkp-archive/pyEX" -> "twopirllc/AlphaVantageAPI"
"tkp-archive/pyEX" -> "cuemacro/findatapy"
"tkp-archive/pyEX" -> "timpalpant/go-iex"
"tkp-archive/pyEX" -> "AlgoTraders/stock-analysis-engine"
"tkp-archive/pyEX" -> "lvfrazao/IEXTools"
"michaelchu/optopsy" -> "jasonstrimpel/volatility-trading"
"michaelchu/optopsy" -> "sirnfs/OptionSuite"
"michaelchu/optopsy" -> "PyPatel/Options-Trading-Strategies-in-Python"
"michaelchu/optopsy" -> "mcdallas/wallstreet"
"michaelchu/optopsy" -> "vollib/vollib"
"michaelchu/optopsy" -> "pmorissette/ffn"
"michaelchu/optopsy" -> "domokane/FinancePy"
"michaelchu/optopsy" -> "philipodonnell/paperbroker"
"michaelchu/optopsy" -> "ranaroussi/qtpylib"
"michaelchu/optopsy" -> "JerBouma/AlgorithmicTrading"
"michaelchu/optopsy" -> "stefan-jansen/zipline-reloaded"
"michaelchu/optopsy" -> "dedwards25/Python_Option_Pricing"
"michaelchu/optopsy" -> "quantsbin/Quantsbin"
"michaelchu/optopsy" -> "Heerozh/spectre"
"michaelchu/optopsy" -> "cuemacro/findatapy"
"LastAncientOne/SimpleStockAnalysisPython" -> "LastAncientOne/Stock_Analysis_For_Quant"
"LastAncientOne/SimpleStockAnalysisPython" -> "LastAncientOne/Mathematics_for_Machine_Learning"
"LastAncientOne/SimpleStockAnalysisPython" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"LastAncientOne/SimpleStockAnalysisPython" -> "LastAncientOne/Data-Science"
"LastAncientOne/SimpleStockAnalysisPython" -> "stefmolin/stock-analysis"
"LastAncientOne/SimpleStockAnalysisPython" -> "ChillarAnand/stocktrends"
"LastAncientOne/SimpleStockAnalysisPython" -> "LastAncientOne/SimpleStockAnalysisR"
"LastAncientOne/SimpleStockAnalysisPython" -> "arkochhar/Technical-Indicators"
"LastAncientOne/SimpleStockAnalysisPython" -> "Hvass-Labs/FinanceOps"
"LastAncientOne/SimpleStockAnalysisPython" -> "LastAncientOne/Trading-Strategies-in-Emerging-Markets-Coursera"
"LastAncientOne/SimpleStockAnalysisPython" -> "faizancodes/Automated-Fundamental-Analysis"
"LastAncientOne/SimpleStockAnalysisPython" -> "PacktPublishing/Learn-Algorithmic-Trading"
"LastAncientOne/SimpleStockAnalysisPython" -> "LongOnly/Quantitative-Notebooks"
"LastAncientOne/SimpleStockAnalysisPython" -> "LastAncientOne/100_Day_Challenge"
"LastAncientOne/SimpleStockAnalysisPython" -> "alpha-miner/Finance-Python"
"wangy8989/Pairs-Trading-with-Machine-Learning" -> "simaomsarmento/PairsTrading"
"wangy8989/Pairs-Trading-with-Machine-Learning" -> "wywongbd/pairstrade-fyp-2019"
"wangy8989/Pairs-Trading-with-Machine-Learning" -> "shimonanarang/pair-trading"
"wangy8989/Pairs-Trading-with-Machine-Learning" -> "wi-0/Pair-Trading-Reinforcement-Learning" ["e"=1]
"joelowj/awesome-algorithmic-trading" -> "joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance"
"joelowj/awesome-algorithmic-trading" -> "cbailes/awesome-deep-trading"
"joelowj/awesome-algorithmic-trading" -> "JerBouma/AlgorithmicTrading"
"joelowj/awesome-algorithmic-trading" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"joelowj/awesome-algorithmic-trading" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"joelowj/awesome-algorithmic-trading" -> "chrisconlan/algorithmic-trading-with-python"
"joelowj/awesome-algorithmic-trading" -> "LongOnly/Quantitative-Notebooks"
"joelowj/awesome-algorithmic-trading" -> "letianzj/QuantResearch"
"joelowj/awesome-algorithmic-trading" -> "PacktPublishing/Learn-Algorithmic-Trading"
"joelowj/awesome-algorithmic-trading" -> "EliteQuant/EliteQuant"
"joelowj/awesome-algorithmic-trading" -> "LastAncientOne/Stock_Analysis_For_Quant"
"joelowj/awesome-algorithmic-trading" -> "ivopetiz/algotrading"
"joelowj/awesome-algorithmic-trading" -> "ranaroussi/qtpylib"
"joelowj/awesome-algorithmic-trading" -> "Yvictor/TradingGym" ["e"=1]
"joelowj/awesome-algorithmic-trading" -> "jasonstrimpel/volatility-trading"
"marketneutral/alphatools" -> "alpha-miner/alpha-mind"
"marketneutral/alphatools" -> "Finance-Hub/FinanceHub"
"marketneutral/alphatools" -> "alpacahq/pipeline-live"
"marketneutral/alphatools" -> "quantsbin/Quantsbin"
"marketneutral/alphatools" -> "constverum/Quantdom"
"marketneutral/alphatools" -> "emoen/Machine-Learning-for-Asset-Managers"
"marketneutral/alphatools" -> "Hvass-Labs/FinanceOps"
"marketneutral/alphatools" -> "quarkfin/qf-lib"
"marketneutral/alphatools" -> "paulperry/quant"
"marketneutral/alphatools" -> "leosmigel/analyzingalpha"
"marketneutral/alphatools" -> "Marigold/universal-portfolios"
"marketneutral/alphatools" -> "marketneutral/pairs-trading-with-ML"
"marketneutral/alphatools" -> "jjakimoto/finance_ml"
"marketneutral/alphatools" -> "StockGram/Intelligent-Quantitative-Trading"
"marketneutral/alphatools" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"wywongbd/pairstrade-fyp-2019" -> "wi-0/Pair-Trading-Reinforcement-Learning" ["e"=1]
"wywongbd/pairstrade-fyp-2019" -> "wangy8989/Pairs-Trading-with-Machine-Learning"
"wywongbd/pairstrade-fyp-2019" -> "simaomsarmento/PairsTrading"
"wywongbd/pairstrade-fyp-2019" -> "shenyichen105/Deep-Reinforcement-Learning-in-Stock-Trading" ["e"=1]
"wywongbd/pairstrade-fyp-2019" -> "JerBouma/AlgorithmicTrading"
"wywongbd/pairstrade-fyp-2019" -> "sapphire921/HFT-Pairs-Trading" ["e"=1]
"wywongbd/pairstrade-fyp-2019" -> "ScrapeWithYuri/pairstrade-fyp-2019"
"wywongbd/pairstrade-fyp-2019" -> "financialnoob/pairs_trading"
"wywongbd/pairstrade-fyp-2019" -> "marketneutral/pairs-trading-with-ML"
"wywongbd/pairstrade-fyp-2019" -> "sachink2010/AutomatedStockTrading-DeepQ-Learning" ["e"=1]
"wywongbd/pairstrade-fyp-2019" -> "shimonanarang/pair-trading"
"wywongbd/pairstrade-fyp-2019" -> "KidQuant/Pairs-Trading-With-Python"
"wywongbd/pairstrade-fyp-2019" -> "Kostis-S-Z/trading-rl" ["e"=1]
"NGYB/Stocks" -> "timestocome/Test-stock-prediction-algorithms"
"NGYB/Stocks" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"NGYB/Stocks" -> "jjakimoto/finance_ml"
"NGYB/Stocks" -> "robertmartin8/MachineLearningStocks"
"NGYB/Stocks" -> "pushpendughosh/Stock-market-forecasting"
"NGYB/Stocks" -> "VivekPa/AIAlpha"
"NGYB/Stocks" -> "emoen/Machine-Learning-for-Asset-Managers"
"NGYB/Stocks" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"NGYB/Stocks" -> "jankrepl/deepdow"
"NGYB/Stocks" -> "LastAncientOne/Stock_Analysis_For_Quant"
"NGYB/Stocks" -> "VivekPa/IntroNeuralNetworks"
"NGYB/Stocks" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"yhilpisch/py4fi2nd" -> "yhilpisch/py4fi"
"yhilpisch/py4fi2nd" -> "yhilpisch/py4at"
"yhilpisch/py4fi2nd" -> "yhilpisch/dawp"
"yhilpisch/py4fi2nd" -> "yhilpisch/aiif"
"yhilpisch/py4fi2nd" -> "yhilpisch/dx"
"yhilpisch/py4fi2nd" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"yhilpisch/py4fi2nd" -> "PacktPublishing/Python-for-Finance-Cookbook"
"yhilpisch/py4fi2nd" -> "jasonstrimpel/volatility-trading"
"yhilpisch/py4fi2nd" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"yhilpisch/py4fi2nd" -> "chrisconlan/algorithmic-trading-with-python"
"yhilpisch/py4fi2nd" -> "domokane/FinancePy"
"yhilpisch/py4fi2nd" -> "mfrdixon/ML_Finance_Codes"
"yhilpisch/py4fi2nd" -> "hudson-and-thames/mlfinlab"
"yhilpisch/py4fi2nd" -> "cuemacro/findatapy"
"yhilpisch/py4fi2nd" -> "Finance-Hub/FinanceHub"
"fmilthaler/FinQuant" -> "dcajasn/Riskfolio-Lib"
"fmilthaler/FinQuant" -> "domokane/FinancePy"
"fmilthaler/FinQuant" -> "robertmartin8/PyPortfolioOpt"
"fmilthaler/FinQuant" -> "santoshlite/EigenLedger"
"fmilthaler/FinQuant" -> "cuemacro/findatapy"
"fmilthaler/FinQuant" -> "LastAncientOne/Stock_Analysis_For_Quant"
"fmilthaler/FinQuant" -> "letianzj/QuantResearch"
"fmilthaler/FinQuant" -> "JerBouma/FinanceToolkit"
"fmilthaler/FinQuant" -> "tradytics/eiten"
"fmilthaler/FinQuant" -> "shashankvemuri/Finance"
"fmilthaler/FinQuant" -> "Finance-Hub/FinanceHub"
"fmilthaler/FinQuant" -> "chrisconlan/algorithmic-trading-with-python"
"fmilthaler/FinQuant" -> "hudson-and-thames/mlfinlab"
"fmilthaler/FinQuant" -> "ranaroussi/quantstats"
"fmilthaler/FinQuant" -> "pmorissette/ffn"
"stefmolin/stock-analysis" -> "LastAncientOne/SimpleStockAnalysisPython"
"stefmolin/stock-analysis" -> "venky14/Stock-Market-Analysis-and-Prediction"
"stefmolin/stock-analysis" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"stefmolin/stock-analysis" -> "akurgat/automating-technical-analysis"
"stefmolin/stock-analysis" -> "devfinwiz/Fin-Maestro-Web"
"stefmolin/stock-analysis" -> "nityansuman/warren"
"stefmolin/stock-analysis" -> "LechGrzelak/QuantFinanceBook"
"stefmolin/stock-analysis" -> "stefmolin/Hands-On-Data-Analysis-with-Pandas-2nd-edition" ["e"=1]
"stefmolin/stock-analysis" -> "LastAncientOne/Stock_Analysis_For_Quant"
"stefmolin/stock-analysis" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"stefmolin/stock-analysis" -> "doda/advances-in-financial-ml-notes"
"stefmolin/stock-analysis" -> "PacktPublishing/Learn-Algorithmic-Trading"
"stefmolin/stock-analysis" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"stefmolin/stock-analysis" -> "namuan/trading-utils"
"stefmolin/stock-analysis" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"alpacahq/Momentum-Trading-Example" -> "alpacahq/example-scalping"
"alpacahq/Momentum-Trading-Example" -> "alpacahq/alpaca-backtrader-api"
"alpacahq/Momentum-Trading-Example" -> "alpacahq/example-hftish" ["e"=1]
"alpacahq/Momentum-Trading-Example" -> "alpacahq/alpaca-trade-api-python"
"alpacahq/Momentum-Trading-Example" -> "alpacahq/pylivetrader"
"alpacahq/Momentum-Trading-Example" -> "alpacahq/pipeline-live"
"alpacahq/Momentum-Trading-Example" -> "mementum/bta-lib"
"alpacahq/Momentum-Trading-Example" -> "s-brez/trading-server"
"alpacahq/Momentum-Trading-Example" -> "alpacahq/example-portfolio-manager"
"alpacahq/Momentum-Trading-Example" -> "amor71/LiuAlgoTrader"
"alpacahq/Momentum-Trading-Example" -> "LastAncientOne/Stock_Analysis_For_Quant"
"alpacahq/Momentum-Trading-Example" -> "jrmeier/fast-trade"
"alpacahq/Momentum-Trading-Example" -> "alpacahq/samplealgo01"
"alpacahq/Momentum-Trading-Example" -> "TheFourGreatErrors/alpha-rptr" ["e"=1]
"alpacahq/Momentum-Trading-Example" -> "quantopian/trading_calendars"
"enzoampil/fastquant" -> "pmorissette/bt"
"enzoampil/fastquant" -> "pmorissette/ffn"
"enzoampil/fastquant" -> "letianzj/QuantResearch"
"enzoampil/fastquant" -> "cuemacro/finmarketpy"
"enzoampil/fastquant" -> "kernc/backtesting.py"
"enzoampil/fastquant" -> "ranaroussi/qtpylib"
"enzoampil/fastquant" -> "domokane/FinancePy"
"enzoampil/fastquant" -> "robcarver17/pysystemtrade"
"enzoampil/fastquant" -> "hudson-and-thames/mlfinlab"
"enzoampil/fastquant" -> "ivopetiz/algotrading"
"enzoampil/fastquant" -> "michaelchu/optopsy"
"enzoampil/fastquant" -> "polakowo/vectorbt"
"enzoampil/fastquant" -> "ranaroussi/quantstats"
"enzoampil/fastquant" -> "dcajasn/Riskfolio-Lib"
"enzoampil/fastquant" -> "cuemacro/findatapy"
"ranaroussi/pystore" -> "ranaroussi/ezibpy"
"ranaroussi/pystore" -> "ranaroussi/qtpylib"
"ranaroussi/pystore" -> "ranaroussi/multitasking"
"ranaroussi/pystore" -> "man-group/arctic"
"ranaroussi/pystore" -> "abbass2/pyqstrat"
"ranaroussi/pystore" -> "rsheftel/pandas_market_calendars"
"ranaroussi/pystore" -> "ranaroussi/pytrade"
"ranaroussi/pystore" -> "quantrocket-llc/moonshot"
"ranaroussi/pystore" -> "pmorissette/ffn"
"ranaroussi/pystore" -> "vollib/py_vollib"
"ranaroussi/pystore" -> "quantopian/empyrical"
"ranaroussi/pystore" -> "cuemacro/findatapy"
"ranaroussi/pystore" -> "ranaroussi/quantstats"
"ranaroussi/pystore" -> "ranaroussi/pandas-montecarlo" ["e"=1]
"ranaroussi/pystore" -> "cuemacro/chartpy"
"jensolson/SPX-Gamma-Exposure" -> "Matteo-Ferrara/gex-tracker"
"jensolson/SPX-Gamma-Exposure" -> "jensolson/Dark-Pool-Buying"
"jensolson/SPX-Gamma-Exposure" -> "aaguiar10/gflows"
"jensolson/SPX-Gamma-Exposure" -> "erma0x/gexxer"
"AsyncAlgoTrading/aat" -> "s-brez/trading-server"
"AsyncAlgoTrading/aat" -> "crypto-chassis/ccapi" ["e"=1]
"AsyncAlgoTrading/aat" -> "roq-trading/roq-api" ["e"=1]
"AsyncAlgoTrading/aat" -> "quarkfin/qf-lib"
"AsyncAlgoTrading/aat" -> "letianzj/quanttrader"
"AsyncAlgoTrading/aat" -> "abbass2/pyqstrat"
"AsyncAlgoTrading/aat" -> "chronoxor/CppTrader" ["e"=1]
"AsyncAlgoTrading/aat" -> "roq-trading/roq-cpp-samples" ["e"=1]
"AsyncAlgoTrading/aat" -> "amor71/LiuAlgoTrader"
"AsyncAlgoTrading/aat" -> "rburkholder/trade-frame" ["e"=1]
"AsyncAlgoTrading/aat" -> "enthought/pyql"
"AsyncAlgoTrading/aat" -> "michaelchu/optopsy"
"AsyncAlgoTrading/aat" -> "ranaroussi/qtpylib"
"AsyncAlgoTrading/aat" -> "jasonstrimpel/volatility-trading"
"AsyncAlgoTrading/aat" -> "gbeced/basana"
"halessi/DCF" -> "bben1/Automatic-fundamental-investment-valuation"
"halessi/DCF" -> "farbodbahari/Business-Valuation-with-Discounted-Cash-Flow-In-Python"
"halessi/DCF" -> "FinancialModelingPrepAPI/Financial-Modeling-Prep-API"
"halessi/DCF" -> "sonntagsgesicht/dcf"
"halessi/DCF" -> "JerBouma/FundamentalsQuantifier"
"halessi/DCF" -> "astro30/valinvest"
"halessi/DCF" -> "ikbale/fmp_python"
"halessi/DCF" -> "jdvelasq/cashflows"
"halessi/DCF" -> "farhadab/sec-edgar-financials"
"halessi/DCF" -> "ledwindra/discounted-cash-flow"
"halessi/DCF" -> "JerBouma/FinanceToolkit"
"halessi/DCF" -> "leonarduschen/pyfinmod"
"halessi/DCF" -> "jason-ash/pyesg"
"Ceruleanacg/Personae" -> "VivekPa/AIAlpha" ["e"=1]
"Ceruleanacg/Personae" -> "lilianweng/stock-rnn" ["e"=1]
"scoofy/wxStocks" -> "kacperadach/ichimoku_screener"
"scoofy/wxStocks" -> "benjaminmgross/visualize-wealth"
"scoofy/wxStocks" -> "narasimhaprasad/StockPy"
"scoofy/wxStocks" -> "cgoldberg/ystockquote"
"ailabx/ailabx" -> "Ckend/pythondict-quant" ["e"=1]
"dwcoder/QuantitativePrimer" -> "letianzj/QuantResearch" ["e"=1]
"dwcoder/QuantitativePrimer" -> "LongOnly/Quantitative-Notebooks" ["e"=1]
"dwcoder/QuantitativePrimer" -> "google/tf-quant-finance" ["e"=1]
"dwcoder/QuantitativePrimer" -> "cantaro86/Financial-Models-Numerical-Methods" ["e"=1]
"dwcoder/QuantitativePrimer" -> "quantopian/research_public" ["e"=1]
"dwcoder/QuantitativePrimer" -> "Finance-Hub/FinanceHub" ["e"=1]
"dwcoder/QuantitativePrimer" -> "PyPatel/Quant-Finance-Resources" ["e"=1]
"dwcoder/QuantitativePrimer" -> "lballabio/QuantLib" ["e"=1]
"garethdmm/gryphon" -> "ranaroussi/qtpylib" ["e"=1]
"garethdmm/gryphon" -> "man-group/arctic" ["e"=1]
"garethdmm/gryphon" -> "anfederico/gemini" ["e"=1]
"garethdmm/gryphon" -> "s-brez/trading-server" ["e"=1]
"garethdmm/gryphon" -> "AsyncAlgoTrading/aat" ["e"=1]
"nityansuman/warren" -> "kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis"
"nityansuman/warren" -> "Kumar-laxmi/Stock-Prediction-System-Application"
"nityansuman/warren" -> "Rajat-dhyani/Stock-Price-Predictor"
"nityansuman/warren" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"nityansuman/warren" -> "stefmolin/stock-analysis"
"nityansuman/warren" -> "venky14/Stock-Market-Analysis-and-Prediction"
"nityansuman/warren" -> "nityansuman/marvin" ["e"=1]
"nityansuman/warren" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"nityansuman/warren" -> "THINK989/Real-Time-Stock-Market-Prediction-using-Ensemble-DL-and-Rainbow-DQN"
"nityansuman/warren" -> "batman-nair/project-defude" ["e"=1]
"nityansuman/warren" -> "Ronak-59/Stock-Prediction"
"PacktPublishing/Pandas-Cookbook" -> "PacktPublishing/Python-for-Finance-Second-Edition" ["e"=1]
"PacktPublishing/Pandas-Cookbook" -> "PacktPublishing/Python-for-Finance-Cookbook" ["e"=1]
"RonRichman/AI_in_Actuarial_Science" -> "MHaringa/insurancerating"
"actuarial-data-science/Tutorials" -> "RonRichman/AI_in_Actuarial_Science"
"actuarial-data-science/Tutorials" -> "actuarial-data-science/CourseDeepLearningWithActuarialApplications"
"actuarial-data-science/Tutorials" -> "franciscogarate/pyliferisk"
"actuarial-data-science/Tutorials" -> "MHaringa/insurancerating"
"actuarial-data-science/Tutorials" -> "ActuariesInstitute/cookbook"
"actuarial-data-science/Tutorials" -> "genedan/actuarial-foss"
"actuarial-data-science/Tutorials" -> "dutangc/CASdatasets"
"actuarial-data-science/Tutorials" -> "mayer79/ml_lecture"
"actuarial-data-science/Tutorials" -> "casact/chainladder-python"
"actuarial-data-science/Tutorials" -> "kasaai/deeptriangle"
"actuarial-data-science/Tutorials" -> "lifelib-dev/lifelib"
"firmai/machine-learning-asset-management" -> "hudson-and-thames/mlfinlab"
"firmai/machine-learning-asset-management" -> "ranaroussi/quantstats"
"firmai/machine-learning-asset-management" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"firmai/machine-learning-asset-management" -> "robertmartin8/PyPortfolioOpt"
"firmai/machine-learning-asset-management" -> "dcajasn/Riskfolio-Lib"
"firmai/machine-learning-asset-management" -> "firmai/financial-machine-learning"
"firmai/machine-learning-asset-management" -> "letianzj/QuantResearch"
"firmai/machine-learning-asset-management" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"firmai/machine-learning-asset-management" -> "emoen/Machine-Learning-for-Asset-Managers"
"firmai/machine-learning-asset-management" -> "EliteQuant/EliteQuant"
"firmai/machine-learning-asset-management" -> "jankrepl/deepdow"
"firmai/machine-learning-asset-management" -> "jasonstrimpel/volatility-trading"
"firmai/machine-learning-asset-management" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"firmai/machine-learning-asset-management" -> "cbailes/awesome-deep-trading"
"firmai/machine-learning-asset-management" -> "r0f1/datascience" ["e"=1]
"mimoralea/gdrl" -> "TikhonJelvis/RL-book" ["e"=1]
"alpacahq/alpaca-trade-api-python" -> "alpacahq/alpaca-py"
"alpacahq/alpaca-trade-api-python" -> "alpacahq/alpaca-backtrader-api"
"alpacahq/alpaca-trade-api-python" -> "alpacahq/Momentum-Trading-Example"
"alpacahq/alpaca-trade-api-python" -> "alpacahq/pylivetrader"
"alpacahq/alpaca-trade-api-python" -> "alpacahq/example-scalping"
"alpacahq/alpaca-trade-api-python" -> "alpacahq/marketstore"
"alpacahq/alpaca-trade-api-python" -> "alexgolec/tda-api"
"alpacahq/alpaca-trade-api-python" -> "polygon-io/client-python"
"alpacahq/alpaca-trade-api-python" -> "robinhood-unofficial/pyrh"
"alpacahq/alpaca-trade-api-python" -> "ranaroussi/qtpylib"
"alpacahq/alpaca-trade-api-python" -> "erdewit/ib_insync"
"alpacahq/alpaca-trade-api-python" -> "alpacahq/example-hftish" ["e"=1]
"alpacahq/alpaca-trade-api-python" -> "bukosabino/ta"
"alpacahq/alpaca-trade-api-python" -> "RomelTorres/alpha_vantage"
"alpacahq/alpaca-trade-api-python" -> "peerchemist/finta"
"amuguruza/NN-StochVol-Calibrations" -> "svenhsia/Calibrating-Rough-Volatility-Models-with-Deep-Learning"
"amuguruza/NN-StochVol-Calibrations" -> "ryanmccrickerd/rough_bergomi"
"amuguruza/NN-StochVol-Calibrations" -> "bstemper/deep_rough_calibration"
"amuguruza/NN-StochVol-Calibrations" -> "sigurdroemer/rough_volatility"
"amuguruza/NN-StochVol-Calibrations" -> "pfnet-research/pfhedge"
"amuguruza/NN-StochVol-Calibrations" -> "JackJacquier/Heston-normal-and-rough"
"amuguruza/NN-StochVol-Calibrations" -> "mChataign/DupireNN"
"amuguruza/NN-StochVol-Calibrations" -> "ArturSepp/StochVolModels"
"amuguruza/NN-StochVol-Calibrations" -> "amuguruza/RoughFCLT"
"amuguruza/NN-StochVol-Calibrations" -> "clf110510/stochastic-volatility"
"amuguruza/NN-StochVol-Calibrations" -> "vicaws/arbitragerepair"
"krishnavelu/alice_blue" -> "jerokpradeep/pya3"
"krishnavelu/alice_blue" -> "algo2t/alphatrade"
"krishnavelu/alice_blue" -> "jigneshpylab/ZerodhaPythonScripts"
"krishnavelu/alice_blue" -> "aeron7/nsepython"
"krishnavelu/alice_blue" -> "aeron7/BankNIFTY-Golden-Ratio-Strategy"
"krishnavelu/alice_blue" -> "Indian-Algorithmic-Trading-Community/PythonTraderExcelTradeTerminal"
"krishnavelu/alice_blue" -> "paramatrixtech/ksapi"
"abides-sim/abides" -> "hansbuehler/deephedging" ["e"=1]
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "PacktPublishing/Learn-Algorithmic-Trading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "PacktPublishing/Building-Trading-Bots"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "JerBouma/AlgorithmicTrading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "arkochhar/Technical-Indicators"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "mementum/bta-lib"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "PacktPublishing/Python-for-Finance-Cookbook"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "chrisconlan/algorithmic-trading-with-python"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "alpha-miner/Finance-Python"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "yacoubb/stock-trading-ml"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" -> "PacktPublishing/Machine-Learning-for-Finance"
"alpacahq/marketstore" -> "alpacahq/pymarketstore"
"alpacahq/marketstore" -> "man-group/arctic"
"alpacahq/marketstore" -> "alpacahq/pylivetrader"
"alpacahq/marketstore" -> "alpacahq/alpaca-trade-api-python"
"alpacahq/marketstore" -> "cuemacro/findatapy"
"alpacahq/marketstore" -> "thrasher-corp/gocryptotrader" ["e"=1]
"alpacahq/marketstore" -> "sdcoffey/techan" ["e"=1]
"alpacahq/marketstore" -> "ranaroussi/qtpylib"
"alpacahq/marketstore" -> "alpacahq/alpaca-backtrader-api"
"alpacahq/marketstore" -> "alpacahq/alpaca-trade-api-go"
"alpacahq/marketstore" -> "markcheno/go-talib" ["e"=1]
"alpacahq/marketstore" -> "hudson-and-thames/mlfinlab"
"alpacahq/marketstore" -> "0b01/tectonicdb" ["e"=1]
"alpacahq/marketstore" -> "alpacahq/example-scalping"
"alpacahq/marketstore" -> "ranaroussi/pystore"
"rediar/InteractiveBrokers-Algo-Trading-API" -> "mvberg/ib-gateway-docker" ["e"=1]
"torreyleonard/algotrader" -> "aurbano/robinhood-node"
"torreyleonard/algotrader" -> "chiefsmurph/robinhood-playground"
"torreyleonard/algotrader" -> "AlgoTraders/stock-analysis-engine"
"torreyleonard/algotrader" -> "alpacahq/alpaca-trade-api-js"
"torreyleonard/algotrader" -> "codesociety/friartuck"
"torreyleonard/algotrader" -> "roblav96/robinhood.tools"
"torreyleonard/algotrader" -> "sirnfs/OptionSuite"
"torreyleonard/algotrader" -> "anilshanbhag/RobinhoodShell"
"torreyleonard/algotrader" -> "wagenaartje/stocks.js"
"torreyleonard/algotrader" -> "nielse63/stonksjs"
"torreyleonard/algotrader" -> "2018kguo/RobinhoodBot"
"torreyleonard/algotrader" -> "s-brez/trading-server"
"torreyleonard/algotrader" -> "jmfernandes/robin_stocks"
"torreyleonard/algotrader" -> "westonplatter/fast_arrow"
"torreyleonard/algotrader" -> "Ekliptor/WolfBot" ["e"=1]
"2018kguo/RobinhoodBot" -> "Jake0303/RobinHood-RSI-Trading-Bot"
"2018kguo/RobinhoodBot" -> "anilshanbhag/RobinhoodShell"
"2018kguo/RobinhoodBot" -> "tomgrek/rnn-robinhood"
"2018kguo/RobinhoodBot" -> "yura505/robinbot"
"2018kguo/RobinhoodBot" -> "abghorba/Robinhood-Trading-Bot"
"2018kguo/RobinhoodBot" -> "aseylys/KStock"
"2018kguo/RobinhoodBot" -> "robinhood-unofficial/pyrh"
"firmai/business-machine-learning" -> "firmai/machine-learning-asset-management" ["e"=1]
"firmai/business-machine-learning" -> "firmai/financial-machine-learning" ["e"=1]
"JerBouma/FinanceToolkit" -> "JerBouma/FinanceDatabase"
"JerBouma/FinanceToolkit" -> "shashankvemuri/Finance"
"JerBouma/FinanceToolkit" -> "domokane/FinancePy"
"JerBouma/FinanceToolkit" -> "dcajasn/Riskfolio-Lib"
"JerBouma/FinanceToolkit" -> "fmilthaler/FinQuant"
"JerBouma/FinanceToolkit" -> "JerBouma/FundamentalsQuantifier"
"JerBouma/FinanceToolkit" -> "chrisconlan/algorithmic-trading-with-python"
"JerBouma/FinanceToolkit" -> "ranaroussi/quantstats"
"JerBouma/FinanceToolkit" -> "JerBouma/ThePassiveInvestor"
"JerBouma/FinanceToolkit" -> "cuemacro/findatapy"
"JerBouma/FinanceToolkit" -> "letianzj/QuantResearch"
"JerBouma/FinanceToolkit" -> "robertmartin8/PyPortfolioOpt"
"JerBouma/FinanceToolkit" -> "pmorissette/ffn"
"JerBouma/FinanceToolkit" -> "google/tf-quant-finance"
"JerBouma/FinanceToolkit" -> "hudson-and-thames/mlfinlab"
"ryansmccoy/py-sec-edgar" -> "alions7000/SEC-EDGAR-text"
"ryansmccoy/py-sec-edgar" -> "rsljr/edgarParser"
"ryansmccoy/py-sec-edgar" -> "jadchaar/sec-edgar-downloader"
"ryansmccoy/py-sec-edgar" -> "edgarminers/python-edgar"
"fulifeng/Temporal_Relational_Stock_Ranking" -> "sangyx/deep-finance" ["e"=1]
"yahoo-finance/yahoo-finance" -> "hongtaocai/googlefinance"
"yahoo-finance/yahoo-finance" -> "cgoldberg/ystockquote"
"yahoo-finance/yahoo-finance" -> "yhilpisch/py4fi"
"yahoo-finance/yahoo-finance" -> "mcdallas/wallstreet"
"yahoo-finance/yahoo-finance" -> "JECSand/yahoofinancials"
"yahoo-finance/yahoo-finance" -> "pydata/pandas-datareader"
"yahoo-finance/yahoo-finance" -> "cuemacro/findatapy"
"yahoo-finance/yahoo-finance" -> "ranaroussi/yfinance"
"yahoo-finance/yahoo-finance" -> "Benny-/Yahoo-ticker-symbol-downloader"
"yahoo-finance/yahoo-finance" -> "Hvass-Labs/FinanceOps"
"yahoo-finance/yahoo-finance" -> "pmorissette/ffn"
"yahoo-finance/yahoo-finance" -> "cuemacro/finmarketpy"
"yahoo-finance/yahoo-finance" -> "sec-edgar/sec-edgar"
"yahoo-finance/yahoo-finance" -> "ranaroussi/qtpylib"
"yahoo-finance/yahoo-finance" -> "achillesrasquinha/bulbea"
"boyan-soubachov/tastyworks_api" -> "gotasty/tastypl"
"boyan-soubachov/tastyworks_api" -> "tastyware/tastytrade"
"boyan-soubachov/tastyworks_api" -> "tylerfloyd/TastyWorks"
"boyan-soubachov/tastyworks_api" -> "tastytrade/tastytrade-api-js"
"boyan-soubachov/tastyworks_api" -> "tastyware/tastytrade-cli"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "PyPatel/Options-Trading-Strategies-in-Python"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "PyPatel/Quant-Finance-Resources"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "PyPatel/Sentiment-Analysis-for-Trading"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "LongOnly/Quantitative-Notebooks"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "cbailes/awesome-deep-trading"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "timestocome/Test-stock-prediction-algorithms"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "udacity/artificial-intelligence-for-trading"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "JerBouma/AlgorithmicTrading"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "marketneutral/alphatools"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "dzitkowskik/StockPredictionRNN"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "SravB/Algorithmic-Trading"
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "kkuette/TradzQAI" ["e"=1]
"PyPatel/Machine-Learning-and-AI-in-Trading" -> "miroblog/tf_deep_rl_trader" ["e"=1]
"georgedouzas/sports-betting" -> "ScottfreeLLC/AlphaPy" ["e"=1]
"stefmolin/Hands-On-Data-Analysis-with-Pandas" -> "stefmolin/stock-analysis" ["e"=1]
"amaggiulli/QLNet" -> "lballabio/QuantLib-SWIG" ["e"=1]
"amaggiulli/QLNet" -> "lballabio/quantlib-old" ["e"=1]
"amaggiulli/QLNet" -> "OpenSourceRisk/Engine" ["e"=1]
"zslucky/algorithmic_trading_book" -> "letianzj/quanttrader"
"zslucky/algorithmic_trading_book" -> "doda/advances-in-financial-ml-notes"
"zslucky/algorithmic_trading_book" -> "JerBouma/AlgorithmicTrading"
"zslucky/algorithmic_trading_book" -> "PacktPublishing/Learn-Algorithmic-Trading"
"zslucky/algorithmic_trading_book" -> "PyPatel/Quant-Finance-Resources"
"zslucky/algorithmic_trading_book" -> "jenniyanjie/successful-algorithmic-trading"
"zslucky/algorithmic_trading_book" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"zslucky/algorithmic_trading_book" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"zslucky/algorithmic_trading_book" -> "rolling-panda-san/notebooks"
"zslucky/algorithmic_trading_book" -> "fedecaccia/avellaneda-stoikov" ["e"=1]
"zslucky/algorithmic_trading_book" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"zslucky/algorithmic_trading_book" -> "jasonstrimpel/volatility-trading"
"zslucky/algorithmic_trading_book" -> "LechGrzelak/QuantFinanceBook"
"zslucky/algorithmic_trading_book" -> "letianzj/QuantResearch"
"zslucky/algorithmic_trading_book" -> "dummydoo/Advanced-Algorithmic-Trading" ["e"=1]
"SimFin/pdf-crawler" -> "SimFin/web-api-examples"
"SimFin/pdf-crawler" -> "SimFin/bd-extractor"
"yhilpisch/tstables" -> "yhilpisch/tpqps"
"PythonCharmers/QuantFinance" -> "LechGrzelak/QuantFinanceBook"
"PythonCharmers/QuantFinance" -> "Finance-Hub/FinanceHub"
"PythonCharmers/QuantFinance" -> "paulperry/quant"
"PythonCharmers/QuantFinance" -> "quantsbin/Quantsbin"
"PythonCharmers/QuantFinance" -> "LongOnly/Quantitative-Notebooks"
"PythonCharmers/QuantFinance" -> "JerBouma/AlgorithmicTrading"
"PythonCharmers/QuantFinance" -> "marketneutral/alphatools"
"PythonCharmers/QuantFinance" -> "emoen/Machine-Learning-for-Asset-Managers"
"PythonCharmers/QuantFinance" -> "rolling-panda-san/notebooks"
"PythonCharmers/QuantFinance" -> "jsmidt/QuantPy"
"PythonCharmers/QuantFinance" -> "PyPatel/Quant-Finance-Resources"
"PythonCharmers/QuantFinance" -> "letianzj/QuantResearch"
"PythonCharmers/QuantFinance" -> "letianzj/quanttrader"
"PythonCharmers/QuantFinance" -> "quantrocket-codeload/quant-finance-lectures"
"PythonCharmers/QuantFinance" -> "ArturSepp/QuantInvestStrats"
"zepen/predict_Lottery_ticket" -> "KittenCN/predict_Lottery_ticket"
"zepen/predict_Lottery_ticket" -> "Liang-yc/ssq"
"zepen/predict_Lottery_ticket" -> "oahzxd/lottoery"
"zepen/predict_Lottery_ticket" -> "chengstone/LotteryPredict"
"zepen/predict_Lottery_ticket" -> "KittenCN/predict_Lottery_ticket_pytorch"
"zepen/predict_Lottery_ticket" -> "pengyuwang618/lottery"
"zepen/predict_Lottery_ticket" -> "BEWINDOWEB/lotterygrabber"
"zepen/predict_Lottery_ticket" -> "AaronJny/lotto"
"zepen/predict_Lottery_ticket" -> "luhao-worker/tf-lottery"
"zepen/predict_Lottery_ticket" -> "xwwxx/lottery-analysis"
"zepen/predict_Lottery_ticket" -> "yangboz/LotteryPrediction"
"zepen/predict_Lottery_ticket" -> "wushidiguo/hello-lottery"
"zepen/predict_Lottery_ticket" -> "zhaoyangpp/LottoProphet"
"zepen/predict_Lottery_ticket" -> "fight1990/Lottery"
"maanavshah/stock-market-india" -> "vsjha18/nsetools"
"maanavshah/stock-market-india" -> "jugaad-py/jugaad-data"
"maanavshah/stock-market-india" -> "pranjal-joshi/Screeni-py"
"maanavshah/stock-market-india" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"maanavshah/stock-market-india" -> "hi-imcodeman/stock-nse-india"
"maanavshah/stock-market-india" -> "aeron7/nsepython"
"maanavshah/stock-market-india" -> "swapniljariwala/nsepy"
"maanavshah/stock-market-india" -> "deshwalmahesh/NSE-Stock-Scanner"
"maanavshah/stock-market-india" -> "NayakwadiS/mftool"
"maanavshah/stock-market-india" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"maanavshah/stock-market-india" -> "sdabhi23/bsedata"
"maanavshah/stock-market-india" -> "pkjmesra/PKScreener"
"maanavshah/stock-market-india" -> "zerodha/pykiteconnect"
"maanavshah/stock-market-india" -> "hemenkapadia/getbhavcopy"
"maanavshah/stock-market-india" -> "ashishkumar30/Stock_Market_Live_Trading_using_AI"
"je-suis-tm/graph-theory" -> "je-suis-tm/machine-learning"
"je-suis-tm/graph-theory" -> "je-suis-tm/recursion-and-dynamic-programming"
"je-suis-tm/graph-theory" -> "je-suis-tm/web-scraping"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "doda/advances-in-financial-ml-notes"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "boyboi86/AFML"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "jjakimoto/finance_ml"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "hudson-and-thames/presentations"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "JackBrady/Financial-Machine-Learning"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "ki33elev/Adv_Fin_ML"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "Rachnog/Advanced-Deep-Trading"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "emoen/Machine-Learning-for-Asset-Managers"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "peng3738/Selfstudy-note-for-advances-in-financial-machine-learning"
"fernandodelacalle/adv-financial-ml-marcos-exercises" -> "hudson-and-thames/research"
"hzy46/TensorFlow-Time-Series-Examples" -> "tgjeon/TensorFlow-Tutorials-for-Time-Series"
"hzy46/TensorFlow-Time-Series-Examples" -> "Jenniferz28/Time-Series-ARIMA-XGBOOST-RNN" ["e"=1]
"hzy46/TensorFlow-Time-Series-Examples" -> "CasiaFan/time_seires_prediction_using_lstm"
"hzy46/TensorFlow-Time-Series-Examples" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"hzy46/TensorFlow-Time-Series-Examples" -> "PENGZhaoqing/TimeSeriesPrediction" ["e"=1]
"hzy46/TensorFlow-Time-Series-Examples" -> "guillaume-chevalier/seq2seq-signal-prediction" ["e"=1]
"hzy46/TensorFlow-Time-Series-Examples" -> "polyaxon/haupt"
"hzy46/TensorFlow-Time-Series-Examples" -> "JEddy92/TimeSeries_Seq2Seq" ["e"=1]
"hzy46/TensorFlow-Time-Series-Examples" -> "aaxwaz/Multivariate-Time-Series-forecast-using-seq2seq-in-TensorFlow" ["e"=1]
"hzy46/TensorFlow-Time-Series-Examples" -> "chickenbestlover/RNN-Time-series-Anomaly-Detection" ["e"=1]
"hzy46/TensorFlow-Time-Series-Examples" -> "shunyaoshih/TPA-LSTM" ["e"=1]
"hzy46/TensorFlow-Time-Series-Examples" -> "RobRomijnders/LSTM_tsc"
"hzy46/TensorFlow-Time-Series-Examples" -> "Arturus/kaggle-web-traffic" ["e"=1]
"hzy46/TensorFlow-Time-Series-Examples" -> "hzy46/fast-neural-style-tensorflow" ["e"=1]
"hzy46/TensorFlow-Time-Series-Examples" -> "maxim5/time-series-machine-learning" ["e"=1]
"hanbt/learn_dl" -> "nicodjimenez/lstm" ["e"=1]
"alexminnaar/time-series-classification-and-clustering" -> "RobRomijnders/LSTM_tsc" ["e"=1]
"SnehJain/Deep-Neural-Networks-For-Stock-Price-Prediction" -> "matheusbfernandes/stock-market-prediction"
"SnehJain/Deep-Neural-Networks-For-Stock-Price-Prediction" -> "dhingratul/Stock-Price-Prediction"
"SnehJain/Deep-Neural-Networks-For-Stock-Price-Prediction" -> "vietsDeng/Stock-Prediction"
"zslucky/awesome-AI-books" -> "zslucky/algorithmic_trading_book" ["e"=1]
"daneads/pypatent" -> "hopped/uspto-patents-parsing-tools"
"daneads/pypatent" -> "TamerKhraisha/uspto-patent-data-parser"
"daneads/pypatent" -> "ip-tools/uspto-opendata-python"
"daneads/pypatent" -> "ip-tools/patzilla"
"parkerhancock/patent_client" -> "ip-tools/python-epo-ops-client"
"PENGZhaoqing/TimeSeriesPrediction" -> "hzy46/TensorFlow-Time-Series-Examples" ["e"=1]
"mvberg/ib-gateway-docker" -> "antequant/ib-gateway-docker"
"mvberg/ib-gateway-docker" -> "roblav96/headless-ib-gateway-installation-ubuntu-server"
"mvberg/ib-gateway-docker" -> "ryankennedyio/ib-docker"
"mvberg/ib-gateway-docker" -> "UnusualAlpha/ib-gateway-docker"
"mvberg/ib-gateway-docker" -> "ib-controller/ib-controller"
"mvberg/ib-gateway-docker" -> "dvasdekis/ib-gateway-docker-gcp"
"mvberg/ib-gateway-docker" -> "IbcAlpha/IBC"
"mvberg/ib-gateway-docker" -> "manhinhang/ib-gateway-docker"
"mvberg/ib-gateway-docker" -> "ajpierce/ib_tws_docker"
"mvberg/ib-gateway-docker" -> "QuantConnect/IBAutomater"
"mvberg/ib-gateway-docker" -> "rediar/InteractiveBrokers-Algo-Trading-API" ["e"=1]
"mvberg/ib-gateway-docker" -> "Voyz/ibeam"
"mvberg/ib-gateway-docker" -> "jamesmawm/IB-Trading-Models-And-Backtester"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "hungchun-lin/Stock-price-prediction-using-GAN"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "UalwaysKnow/time-series-prediction-with-gan"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "kennedyCzar/STOCK-RETURN-PREDICTION-USING-KNN-SVM-GUASSIAN-PROCESS-ADABOOST-TREE-REGRESSION-AND-QDA"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "proceduralia/pytorch-GAN-timeseries"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "kah-ve/MarketGAN"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "MiloMallo/Stock"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "buriburisuri/timeseries_gan"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "jsyoon0823/TimeGAN"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "longfly04/A-Stock-Prediction-System-with-Deep-Learning"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "grudloff/stock_market_GAN"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "timestocome/Test-stock-prediction-algorithms"
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" -> "hthoai/stock-price-prediction"
"wardbradt/peregrine" -> "ivopetiz/algotrading" ["e"=1]
"areed1192/sigma_coding_youtube" -> "areed1192/td-ameritrade-python-api"
"areed1192/sigma_coding_youtube" -> "areed1192/python-trading-robot"
"areed1192/sigma_coding_youtube" -> "areed1192/python-sec"
"areed1192/sigma_coding_youtube" -> "AllenMattson/VBA" ["e"=1]
"areed1192/sigma_coding_youtube" -> "sec-edgar/sec-edgar"
"areed1192/sigma_coding_youtube" -> "jadchaar/sec-edgar-downloader"
"areed1192/sigma_coding_youtube" -> "edgarminers/python-edgar"
"areed1192/sigma_coding_youtube" -> "areed1192/interactive-broker-python-api"
"areed1192/sigma_coding_youtube" -> "alexgolec/tda-api"
"areed1192/sigma_coding_youtube" -> "carvetighter/VBA-Code-Library" ["e"=1]
"areed1192/sigma_coding_youtube" -> "sancarn/stdVBA" ["e"=1]
"areed1192/sigma_coding_youtube" -> "VBA-tools/VBA-JSON" ["e"=1]
"areed1192/sigma_coding_youtube" -> "letianzj/QuantResearch"
"areed1192/sigma_coding_youtube" -> "jamesmawm/mastering-python-for-finance-second-edition"
"areed1192/sigma_coding_youtube" -> "chrisconlan/algorithmic-trading-with-python"
"janlukasschroeder/sec-api" -> "janlukasschroeder/sec-api-python"
"janlukasschroeder/sec-api" -> "joeyism/py-edgar"
"janlukasschroeder/sec-api" -> "edgarminers/python-edgar"
"janlukasschroeder/sec-api" -> "tooksoi/ScraXBRL"
"janlukasschroeder/sec-api" -> "jadchaar/sec-edgar-downloader"
"janlukasschroeder/sec-api" -> "sec-edgar/sec-edgar"
"janlukasschroeder/sec-api" -> "alions7000/SEC-EDGAR-text"
"janlukasschroeder/sec-api" -> "LexPredict/openedgar"
"janlukasschroeder/sec-api" -> "datasets/edgar"
"janlukasschroeder/sec-api" -> "ryansmccoy/py-sec-edgar"
"janlukasschroeder/sec-api" -> "rsljr/edgarParser"
"janlukasschroeder/sec-api" -> "bergant/finstr"
"janlukasschroeder/sec-api" -> "timothycarambat/senate-stock-watcher-data"
"janlukasschroeder/sec-api" -> "lefterisloukas/edgar-crawler"
"janlukasschroeder/sec-api" -> "leoliu0/cik-cusip-mapping"
"hudson-and-thames/research" -> "hudson-and-thames/presentations"
"hudson-and-thames/research" -> "hudson-and-thames/mlfinlab"
"hudson-and-thames/research" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"hudson-and-thames/research" -> "Jackal08/financial-data-structures"
"hudson-and-thames/research" -> "Rachnog/Advanced-Deep-Trading"
"hudson-and-thames/research" -> "BlackArbsCEO/mixture_model_trading_public"
"hudson-and-thames/research" -> "jjakimoto/finance_ml"
"hudson-and-thames/research" -> "fernandodelacalle/adv-financial-ml-marcos-exercises"
"hudson-and-thames/research" -> "firmai/machine-learning-asset-management"
"hudson-and-thames/research" -> "ranaroussi/qtpylib"
"hudson-and-thames/research" -> "upresearch/statarb"
"hudson-and-thames/research" -> "Marigold/universal-portfolios"
"hudson-and-thames/research" -> "sam31415/timeseriescv"
"hudson-and-thames/research" -> "cuemacro/findatapy"
"hudson-and-thames/research" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"pydata/bottleneck" -> "quantopian/empyrical" ["e"=1]
"jerryxyx/AlphaTrading" -> "alpha-miner/alpha-mind" ["e"=1]
"jerryxyx/AlphaTrading" -> "wywongbd/pairstrade-fyp-2019" ["e"=1]
"jerryxyx/AlphaTrading" -> "JerBouma/AlgorithmicTrading" ["e"=1]
"jcrichard/pyrb" -> "convexfi/riskparity.py"
"jcrichard/pyrb" -> "dppalomar/riskParityPortfolio"
"jcrichard/pyrb" -> "Quantoria/Risk_Budgeting"
"yangboz/LotteryPrediction" -> "chengstone/LotteryPredict"
"yangboz/LotteryPrediction" -> "engineer1982/Machine-Learning-Lottery-Prediction"
"yangboz/LotteryPrediction" -> "tiyh/rnn_lottery_prediction"
"yangboz/LotteryPrediction" -> "pengyuwang618/lottery"
"yangboz/LotteryPrediction" -> "CorvusCodex/LotteryAi"
"coverdrive/MDP-DP-RL" -> "TikhonJelvis/RL-book" ["e"=1]
"borisbanushev/anomaliesinoptions" -> "borisbanushev/predictions"
"borisbanushev/anomaliesinoptions" -> "boyac/pyOptionPricing"
"borisbanushev/anomaliesinoptions" -> "borisbanushev/TradX"
"pilwon/node-ib" -> "maxicus/ib-tws-api"
"pilwon/node-ib" -> "ib-controller/ib-controller"
"pilwon/node-ib" -> "zgsrc/ibjs"
"pilwon/node-ib" -> "ryankennedyio/ib-docker"
"pilwon/node-ib" -> "stoqey/ib"
"pilwon/node-ib" -> "roblav96/headless-ib-gateway-installation-ubuntu-server"
"pilwon/node-ib" -> "blampe/IbPy"
"pilwon/node-ib" -> "gofinance/ib"
"pilwon/node-ib" -> "softwarespartan/IB4m"
"pilwon/node-ib" -> "rudimeier/twsapi"
"pilwon/node-ib" -> "IbcAlpha/IBC"
"pilwon/node-ib" -> "ranaroussi/ezibpy"
"pilwon/node-ib" -> "alpacahq/alpaca-trade-api-js"
"pilwon/node-ib" -> "InteractiveBrokers/tws-api-public"
"pilwon/node-ib" -> "Voyz/ibeam"
"quickfix/quickfix" -> "lballabio/QuantLib" ["e"=1]
"farhadab/sec-edgar-financials" -> "joeyism/py-edgar"
"farhadab/sec-edgar-financials" -> "jadchaar/sec-edgar-downloader"
"farhadab/sec-edgar-financials" -> "edgarminers/python-edgar"
"farhadab/sec-edgar-financials" -> "ryansmccoy/py-sec-edgar"
"farhadab/sec-edgar-financials" -> "alions7000/SEC-EDGAR-text"
"algosenses/Stock_Market_Sentiment_Analysis" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" ["e"=1]
"VivekPa/AIAlpha" -> "VivekPa/IntroNeuralNetworks"
"VivekPa/AIAlpha" -> "robertmartin8/MachineLearningStocks"
"VivekPa/AIAlpha" -> "achillesrasquinha/bulbea"
"VivekPa/AIAlpha" -> "VivekPa/OptimalPortfolio"
"VivekPa/AIAlpha" -> "hudson-and-thames/mlfinlab"
"VivekPa/AIAlpha" -> "lilianweng/stock-rnn"
"VivekPa/AIAlpha" -> "Ceruleanacg/Personae" ["e"=1]
"VivekPa/AIAlpha" -> "ranaroussi/qtpylib"
"VivekPa/AIAlpha" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"VivekPa/AIAlpha" -> "shirosaidev/stocksight"
"VivekPa/AIAlpha" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"VivekPa/AIAlpha" -> "borisbanushev/stockpredictionai"
"VivekPa/AIAlpha" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"VivekPa/AIAlpha" -> "EliteQuant/EliteQuant"
"VivekPa/AIAlpha" -> "LastAncientOne/Stock_Analysis_For_Quant"
"Leo4815162342/dukascopy-node" -> "giuse88/duka" ["e"=1]
"Leo4815162342/dukascopy-node" -> "cuemacro/findatapy" ["e"=1]
"jjakimoto/finance_ml" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"jjakimoto/finance_ml" -> "boyboi86/AFML"
"jjakimoto/finance_ml" -> "doda/advances-in-financial-ml-notes"
"jjakimoto/finance_ml" -> "emoen/Machine-Learning-for-Asset-Managers"
"jjakimoto/finance_ml" -> "Rachnog/Advanced-Deep-Trading"
"jjakimoto/finance_ml" -> "hudson-and-thames/mlfinlab"
"jjakimoto/finance_ml" -> "fernandodelacalle/adv-financial-ml-marcos-exercises"
"jjakimoto/finance_ml" -> "sam31415/timeseriescv"
"jjakimoto/finance_ml" -> "jmrichardson/tuneta"
"jjakimoto/finance_ml" -> "jasonstrimpel/volatility-trading"
"jjakimoto/finance_ml" -> "letianzj/QuantResearch"
"jjakimoto/finance_ml" -> "JackBrady/Financial-Machine-Learning"
"jjakimoto/finance_ml" -> "jankrepl/deepdow"
"jjakimoto/finance_ml" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"jjakimoto/finance_ml" -> "hudson-and-thames/research"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "PacktPublishing/Python-for-Finance-Cookbook"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "PacktPublishing/Python-for-Finance-Second-Edition"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "jamesmawm/mastering-python-for-finance-second-edition"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "yhilpisch/py4fi2nd"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "PacktPublishing/Learn-Algorithmic-Trading"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "PacktPublishing/Machine-Learning-for-Finance"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "Hvass-Labs/FinanceOps"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "alpha-miner/Finance-Python"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "QuantConnect/Tutorials"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "jamesmawm/Mastering-Python-for-Finance-source-codes"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "marketneutral/alphatools"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "yhilpisch/dawp"
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" -> "JerBouma/AlgorithmicTrading"
"AI4Finance-Foundation/FinRL-Tutorials" -> "AI4Finance-Foundation/FinRL" ["e"=1]
"AI4Finance-Foundation/FinRL-Tutorials" -> "TradeMaster-NTU/TradeMaster" ["e"=1]
"AI4Finance-Foundation/FinRL-Tutorials" -> "AI4Finance-Foundation/FinNLP" ["e"=1]
"lambdaclass/options_backtester" -> "sirnfs/OptionSuite"
"lambdaclass/options_backtester" -> "theoptionlab/theoptionlab"
"lambdaclass/options_backtester" -> "boyac/pyOptionPricing"
"gioramponi/GAN_Time_Series" -> "StoicGilgamesh/LSTM-GAN-"
"gioramponi/GAN_Time_Series" -> "numancelik34/TimeSeries-GAN"
"QuantConnect/Research" -> "QuantConnect/Tutorials"
"QuantConnect/Research" -> "QuantConnect/Documentation"
"QuantConnect/Research" -> "QuantConnect/lean-cli"
"QuantConnect/Research" -> "JerBouma/AlgorithmicTrading"
"QuantConnect/Research" -> "KidQuant/Pairs-Trading-With-Python"
"QuantConnect/Research" -> "jasonstrimpel/volatility-trading"
"QuantConnect/Research" -> "rolling-panda-san/notebooks"
"QuantConnect/Research" -> "letianzj/QuantResearch"
"QuantConnect/Research" -> "PacktPublishing/Learn-Algorithmic-Trading"
"QuantConnect/Research" -> "domokane/FinancePy"
"QuantConnect/Research" -> "Marigold/universal-portfolios"
"QuantConnect/Research" -> "alpha-miner/Finance-Python"
"QuantConnect/Research" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"QuantConnect/Research" -> "LechGrzelak/QuantFinanceBook"
"QuantConnect/Research" -> "cuemacro/findatapy"
"yura505/robinbot" -> "aseylys/KStock"
"yura505/robinbot" -> "roblav96/robinhood.tools"
"yura505/robinbot" -> "codesociety/friartuck"
"yura505/robinbot" -> "chiefsmurph/robinhood-playground"
"omerbsezer/Reinforcement_learning_tutorial_with_demo" -> "omerbsezer/LSTM_RNN_Tutorials_with_Demo" ["e"=1]
"sonaam1234/DeepLearningInFinance" -> "jjakimoto/finance_ml" ["e"=1]
"chrism2671/PyTrendFollow" -> "rolling-panda-san/notebooks"
"chrism2671/PyTrendFollow" -> "sofienkaabar/trend-following-strategies" ["e"=1]
"chrism2671/PyTrendFollow" -> "quarkfin/qf-lib"
"chrism2671/PyTrendFollow" -> "JerBouma/AlgorithmicTrading"
"chrism2671/PyTrendFollow" -> "jasonstrimpel/volatility-trading"
"chrism2671/PyTrendFollow" -> "robcarver17/pysystemtrade"
"chrism2671/PyTrendFollow" -> "leosmigel/analyzingalpha"
"chrism2671/PyTrendFollow" -> "Heerozh/spectre"
"chrism2671/PyTrendFollow" -> "letianzj/quanttrader"
"chrism2671/PyTrendFollow" -> "alpacahq/example-hftish" ["e"=1]
"chrism2671/PyTrendFollow" -> "kieranjwood/trading-momentum-transformer" ["e"=1]
"chrism2671/PyTrendFollow" -> "robcarver17/systematictradingexamples"
"chrism2671/PyTrendFollow" -> "letianzj/QuantResearch"
"chrism2671/PyTrendFollow" -> "vollib/vollib"
"mop-tracker/mop" -> "StockSharp/StockSharp" ["e"=1]
"mop-tracker/mop" -> "cgoldberg/ystockquote" ["e"=1]
"AndrewAMD/SierraChartZorroPlugin" -> "john-yan/SierraChartConnect"
"51bitquant/bitquant" -> "Ckend/pythondict-quant" ["e"=1]
"VivekPa/OptimalPortfolio" -> "VivekPa/AIAlpha"
"VivekPa/OptimalPortfolio" -> "liangzp/Reinforcement-learning-in-portfolio-management-" ["e"=1]
"VivekPa/OptimalPortfolio" -> "cvxgrp/cvxportfolio"
"VivekPa/OptimalPortfolio" -> "jankrepl/deepdow"
"VivekPa/OptimalPortfolio" -> "VivekPa/BinomialOptModel"
"VivekPa/OptimalPortfolio" -> "hudson-and-thames/portfoliolab"
"VivekPa/OptimalPortfolio" -> "fmilthaler/FinQuant"
"VivekPa/OptimalPortfolio" -> "yuriak/RLQuant" ["e"=1]
"VivekPa/OptimalPortfolio" -> "VivekPa/IntroNeuralNetworks"
"VivekPa/OptimalPortfolio" -> "czielinski/portfolioopt"
"VivekPa/OptimalPortfolio" -> "convexfi/riskparity.py"
"VivekPa/OptimalPortfolio" -> "kkuette/TradzQAI" ["e"=1]
"VivekPa/OptimalPortfolio" -> "firmai/machine-learning-asset-management"
"VivekPa/OptimalPortfolio" -> "Marigold/universal-portfolios"
"VivekPa/OptimalPortfolio" -> "wywongbd/pairstrade-fyp-2019"
"JackBrady/Financial-Machine-Learning" -> "WongYatChun/Advances-in-Financial-Machine-Learning"
"ltnguyen14/Quant_stock" -> "doncat99/StockRecommendSystem"
"ltnguyen14/Quant_stock" -> "Vaibhav/Stock-Analysis"
"ltnguyen14/Quant_stock" -> "happynoom/DeepTrade"
"ltnguyen14/Quant_stock" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "jigneshpylab/ZerodhaPythonScripts"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "zerodha/kite-connect-python-example"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "sreenivasdoosa/sdoosa-algo-trade-app"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "arkochhar/Technical-Indicators"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "debanshur/algotrading"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "yash12392/kite-automatic-trading"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "ethics/Automatic-Trading-using-Artificial-Intelligence-machine-Learning-on-Indian-Stock-Market-_Zerodha"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "ashishkumar30/ML-AI-Python-Codes"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "vsjha18/nsetools"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "pranjal-joshi/Screeni-py"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "pkjmesra/PKScreener"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "swapniljariwala/nsepy"
"ashishkumar30/Stock_Market_Live_Trading_using_AI" -> "aeron7/BankNIFTY-Golden-Ratio-Strategy"
"ksjagtap/QuantConnect-Trading-Strategies" -> "johnsonshi/Eurodollars"
"ksjagtap/QuantConnect-Trading-Strategies" -> "oreilm49/quantconnect"
"sachink2010/AutomatedStockTrading-DeepQ-Learning" -> "wywongbd/pairstrade-fyp-2019" ["e"=1]
"rosdyana/Going-Deeper-with-Convolutional-Neural-Network-for-Stock-Market-Prediction" -> "jason887/Using-Deep-Learning-Neural-Networks-and-Candlestick-Chart-Representation-to-Predict-Stock-Market"
"rosdyana/Going-Deeper-with-Convolutional-Neural-Network-for-Stock-Market-Prediction" -> "rosdyana/CNN-Financial-Data"
"llSourcell/Reinforcement_Learning_for_Stock_Prediction" -> "dzitkowskik/StockPredictionRNN" ["e"=1]
"AlgoTraders/stock-analysis-engine" -> "LastAncientOne/Stock_Analysis_For_Quant"
"AlgoTraders/stock-analysis-engine" -> "michaelchu/optopsy"
"AlgoTraders/stock-analysis-engine" -> "mariostoev/finviz"
"AlgoTraders/stock-analysis-engine" -> "constverum/Quantdom"
"AlgoTraders/stock-analysis-engine" -> "ranaroussi/qtpylib"
"AlgoTraders/stock-analysis-engine" -> "robertmartin8/MachineLearningStocks"
"AlgoTraders/stock-analysis-engine" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"AlgoTraders/stock-analysis-engine" -> "cuemacro/findatapy"
"AlgoTraders/stock-analysis-engine" -> "ScottfreeLLC/AlphaPy"
"AlgoTraders/stock-analysis-engine" -> "LongOnly/Quantitative-Notebooks"
"AlgoTraders/stock-analysis-engine" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"AlgoTraders/stock-analysis-engine" -> "mcdallas/wallstreet"
"AlgoTraders/stock-analysis-engine" -> "tradytics/surpriver"
"AlgoTraders/stock-analysis-engine" -> "fmilthaler/FinQuant"
"AlgoTraders/stock-analysis-engine" -> "Yvictor/TradingGym" ["e"=1]
"Sinotrade/Shioaji" -> "FinleyLi/MultiCharts-PowerLanguage" ["e"=1]
"MongkonEiadon/IqOption.Net" -> "JorgeBeserra/IqOptionApiDotNet"
"MongkonEiadon/IqOption.Net" -> "n1nj4z33/iqoptionapi"
"MongkonEiadon/IqOption.Net" -> "dsinmsdj/BotMHI_IQOption"
"MongkonEiadon/IqOption.Net" -> "n1nj4z33/iqoption_app"
"MongkonEiadon/IqOption.Net" -> "Lu-Yi-Hsun/iqoptionapi"
"sadighian/crypto-rl" -> "tensortrade-org/tensortrade" ["e"=1]
"sadighian/crypto-rl" -> "cbailes/awesome-deep-trading" ["e"=1]
"saadmk11/banking-system" -> "MicroPyramid/micro-finance" ["e"=1]
"ThomasGrivaz/ai-for-trading" -> "luizcartolano2/udacity-ai-for-trading"
"ThomasGrivaz/ai-for-trading" -> "marcopeix/AI-for-trading"
"ThomasGrivaz/ai-for-trading" -> "udacity/artificial-intelligence-for-trading"
"philfoster/option_screener" -> "GrahamboJangles/PutPremiumProcessor"
"philfoster/option_screener" -> "Options-Visualizer/Options-Visualizer.github.io"
"omarmagh/iq_option_BOT" -> "n1nj4z33/iqoptionbot"
"omarmagh/iq_option_BOT" -> "AlanForester/IQOption-Bot-Trade-System"
"gotasty/tastypl" -> "tylerfloyd/TastyWorks"
"VivekPa/IntroNeuralNetworks" -> "VivekPa/AIAlpha"
"VivekPa/IntroNeuralNetworks" -> "robertmartin8/MachineLearningStocks"
"VivekPa/IntroNeuralNetworks" -> "VivekPa/OptimalPortfolio"
"VivekPa/IntroNeuralNetworks" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"VivekPa/IntroNeuralNetworks" -> "timestocome/Test-stock-prediction-algorithms"
"VivekPa/IntroNeuralNetworks" -> "NourozR/Stock-Price-Prediction-LSTM"
"VivekPa/IntroNeuralNetworks" -> "achillesrasquinha/bulbea"
"VivekPa/IntroNeuralNetworks" -> "dzitkowskik/StockPredictionRNN"
"VivekPa/IntroNeuralNetworks" -> "scorpionhiccup/StockPricePrediction"
"VivekPa/IntroNeuralNetworks" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"VivekPa/IntroNeuralNetworks" -> "yacoubb/stock-trading-ml"
"VivekPa/IntroNeuralNetworks" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"VivekPa/IntroNeuralNetworks" -> "LastAncientOne/Stock_Analysis_For_Quant"
"VivekPa/IntroNeuralNetworks" -> "constverum/Quantdom"
"VivekPa/IntroNeuralNetworks" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"samuelfu/TradingBot" -> "hfwebbed/Stock-Option-Analytics"
"samuelfu/TradingBot" -> "qlero/market_data_extraction_tool"
"jadchaar/sec-edgar-downloader" -> "sec-edgar/sec-edgar"
"jadchaar/sec-edgar-downloader" -> "edgarminers/python-edgar"
"jadchaar/sec-edgar-downloader" -> "joeyism/py-edgar"
"jadchaar/sec-edgar-downloader" -> "farhadab/sec-edgar-financials"
"jadchaar/sec-edgar-downloader" -> "ryansmccoy/py-sec-edgar"
"jadchaar/sec-edgar-downloader" -> "janlukasschroeder/sec-api"
"jadchaar/sec-edgar-downloader" -> "lefterisloukas/edgar-crawler"
"jadchaar/sec-edgar-downloader" -> "dgunning/edgartools"
"jadchaar/sec-edgar-downloader" -> "tooksoi/ScraXBRL"
"jadchaar/sec-edgar-downloader" -> "janlukasschroeder/sec-api-python"
"jadchaar/sec-edgar-downloader" -> "tzuhsial/edgar-10k-mda"
"jadchaar/sec-edgar-downloader" -> "alions7000/SEC-EDGAR-text"
"jadchaar/sec-edgar-downloader" -> "lukerosiak/pysec"
"jadchaar/sec-edgar-downloader" -> "jadchaar/sec-cik-mapper"
"jadchaar/sec-edgar-downloader" -> "jadchaar/sec-edgar-api"
"hfwebbed/Stock-Option-Analytics" -> "samuelfu/TradingBot"
"hfwebbed/Stock-Option-Analytics" -> "westonplatter/portfolio_management"
"PacktPublishing/Python-for-Finance-Cookbook" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"PacktPublishing/Python-for-Finance-Cookbook" -> "PacktPublishing/Python-for-Finance-Second-Edition"
"PacktPublishing/Python-for-Finance-Cookbook" -> "PacktPublishing/Learn-Algorithmic-Trading"
"PacktPublishing/Python-for-Finance-Cookbook" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"PacktPublishing/Python-for-Finance-Cookbook" -> "Hvass-Labs/FinanceOps"
"PacktPublishing/Python-for-Finance-Cookbook" -> "PacktPublishing/Machine-Learning-for-Finance"
"PacktPublishing/Python-for-Finance-Cookbook" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"PacktPublishing/Python-for-Finance-Cookbook" -> "yhilpisch/py4fi2nd"
"PacktPublishing/Python-for-Finance-Cookbook" -> "yhilpisch/py4fi"
"PacktPublishing/Python-for-Finance-Cookbook" -> "Finance-Hub/FinanceHub"
"PacktPublishing/Python-for-Finance-Cookbook" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"PacktPublishing/Python-for-Finance-Cookbook" -> "jamesmawm/mastering-python-for-finance-second-edition"
"PacktPublishing/Python-for-Finance-Cookbook" -> "alpha-miner/Finance-Python"
"PacktPublishing/Python-for-Finance-Cookbook" -> "PacktPublishing/Hands-on-Python-for-Finance"
"PacktPublishing/Python-for-Finance-Cookbook" -> "yhilpisch/dawp"
"firmai/python-business-analytics" -> "firmai/machine-learning-asset-management" ["e"=1]
"imhgchoi/ARIMA-LSTM-hybrid-corrcoef-predict" -> "pushpendughosh/Stock-market-forecasting" ["e"=1]
"tejaslodaya/timeseries-clustering-vae" -> "abudesai/timeVAE" ["e"=1]
"asavine/CompFinance" -> "asavine/CompFinLecture"
"asavine/CompFinance" -> "asavine/Scripting"
"asavine/CompFinance" -> "differential-machine-learning/notebooks"
"asavine/CompFinance" -> "asavine/xlCppTutorial"
"asavine/CompFinance" -> "brnohu/CompFin"
"asavine/CompFinance" -> "OpenSourceRisk/Engine"
"asavine/CompFinance" -> "nburgessx/Papers"
"joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance" -> "joelowj/awesome-algorithmic-trading"
"joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance" -> "Ahmed0028/Machine-Learning-and-Reinforcement-Learning-in-Finance-Specialization"
"joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance" -> "anthonyng2/Machine-Learning-For-Finance"
"joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance" -> "jjakimoto/DQN" ["e"=1]
"joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance" -> "AkshayS21/Reinforcement-Learning-for-Optimal-Financial-Trading"
"Albert-Z-Guo/Deep-Reinforcement-Stock-Trading" -> "cbailes/awesome-deep-trading" ["e"=1]
"mdeverdelhan/ta4j-origins" -> "ib-controller/ib-controller" ["e"=1]
"datasets/edgar" -> "andrewkittredge/financial_fundamentals"
"datasets/edgar" -> "lukerosiak/pysec"
"datasets/edgar" -> "tooksoi/ScraXBRL"
"datasets/edgar" -> "edgarminers/python-edgar"
"datasets/edgar" -> "sec-edgar/sec-edgar"
"datasets/edgar" -> "alions7000/SEC-EDGAR-text"
"datasets/edgar" -> "Arelle/EdgarRenderer"
"datasets/edgar" -> "eliangcs/pystock-crawler"
"datasets/edgar" -> "LexPredict/openedgar"
"datasets/edgar" -> "joeyism/py-edgar"
"datasets/edgar" -> "altova/sec-xbrl"
"datasets/edgar" -> "janlukasschroeder/sec-api"
"datasets/edgar" -> "altova/SECDB"
"datasets/edgar" -> "jadchaar/sec-edgar-downloader"
"datasets/edgar" -> "mwaldstein/edgarWebR"
"abbass2/pyqstrat" -> "fja05680/pinkfish"
"abbass2/pyqstrat" -> "convexfi/riskparity.py"
"abbass2/pyqstrat" -> "ranaroussi/pystore"
"abbass2/pyqstrat" -> "AsyncAlgoTrading/aat"
"abbass2/pyqstrat" -> "ematvey/pybacktest"
"abbass2/pyqstrat" -> "quantrocket-llc/moonshot"
"abbass2/pyqstrat" -> "rsheftel/pandas_market_calendars"
"abbass2/pyqstrat" -> "constverum/Quantdom"
"abbass2/pyqstrat" -> "alpha-miner/alpha-mind"
"abbass2/pyqstrat" -> "ranaroussi/qtpylib"
"abbass2/pyqstrat" -> "enthought/pyql"
"abbass2/pyqstrat" -> "BlackArbsCEO/mixture_model_trading_public"
"abbass2/pyqstrat" -> "quantsbin/Quantsbin"
"abbass2/pyqstrat" -> "ranaroussi/ezibpy"
"abbass2/pyqstrat" -> "alpha-miner/Finance-Python"
"titu1994/LSTM-FCN" -> "RobRomijnders/LSTM_tsc" ["e"=1]
"titu1994/MLSTM-FCN" -> "RobRomijnders/LSTM_tsc" ["e"=1]
"llSourcell/Stock_Market_Prediction" -> "kimber-chen/Tensorflow-for-stock-prediction" ["e"=1]
"Finance-781/FinML" -> "yolsever/ML-in-equity-prediction"
"chakki-works/chABSA-dataset" -> "chakki-works/CoARiJ"
"alpacahq/alpaca-backtrader-api" -> "alpacahq/alpaca-trade-api-python"
"alpacahq/alpaca-backtrader-api" -> "alpacahq/Momentum-Trading-Example"
"alpacahq/alpaca-backtrader-api" -> "alpacahq/pylivetrader"
"alpacahq/alpaca-backtrader-api" -> "alpacahq/example-scalping"
"alpacahq/alpaca-backtrader-api" -> "camelpac/alpaca-proxy-agent"
"alpacahq/alpaca-backtrader-api" -> "alpacahq/example-hftish" ["e"=1]
"alpacahq/alpaca-backtrader-api" -> "verybadsoldier/backtrader_plotting"
"alpacahq/alpaca-backtrader-api" -> "alpacahq/alpaca-py"
"alpacahq/alpaca-backtrader-api" -> "amor71/LiuAlgoTrader"
"alpacahq/alpaca-backtrader-api" -> "happydasch/btplotting"
"alpacahq/alpaca-backtrader-api" -> "s-brez/trading-server"
"alpacahq/alpaca-backtrader-api" -> "alpacahq/pipeline-live"
"alpacahq/alpaca-backtrader-api" -> "shlomiku/zipline-trader"
"alpacahq/alpaca-backtrader-api" -> "constverum/Quantdom"
"alpacahq/alpaca-backtrader-api" -> "alpacahq/marketstore"
"Lu-Yi-Hsun/iqoptionapi" -> "iqoptionapi/iqoptionapi"
"Lu-Yi-Hsun/iqoptionapi" -> "n1nj4z33/iqoptionapi"
"Lu-Yi-Hsun/iqoptionapi" -> "dsinmsdj/iqoptionapi"
"Lu-Yi-Hsun/iqoptionapi" -> "MongkonEiadon/IqOption.Net"
"Lu-Yi-Hsun/iqoptionapi" -> "ItamarRocha/binary-bot"
"Lu-Yi-Hsun/iqoptionapi" -> "harwee/IQOption-Api"
"Lu-Yi-Hsun/iqoptionapi" -> "rrfaria/iqoption-bot"
"Lu-Yi-Hsun/iqoptionapi" -> "n1nj4z33/iqoptionbot"
"Lu-Yi-Hsun/iqoptionapi" -> "metheuspsc/Iq_Option_Bots"
"Lu-Yi-Hsun/iqoptionapi" -> "MatheusGatti/Copiador-De-Entradas"
"Lu-Yi-Hsun/iqoptionapi" -> "Larrycoin/iqoption-bot"
"Lu-Yi-Hsun/iqoptionapi" -> "omarmagh/iq_option_BOT"
"Lu-Yi-Hsun/iqoptionapi" -> "rrfaria/IQOPTION-ML-TRADER"
"Lu-Yi-Hsun/iqoptionapi" -> "JorgeBeserra/IqOptionApiDotNet"
"Lu-Yi-Hsun/iqoptionapi" -> "ericpedra/quotexapi"
"Mottl/hurst" -> "RyanWangZf/Hurst-exponent-R-S-analysis-"
"Mottl/hurst" -> "LRydin/MFDFA" ["e"=1]
"Mottl/hurst" -> "CSchoel/nolds" ["e"=1]
"Mottl/hurst" -> "bashtage/arch"
"Mottl/hurst" -> "PTRRupprecht/GenHurst"
"Mottl/hurst" -> "stfbnc/fathon" ["e"=1]
"Mottl/hurst" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"Mottl/hurst" -> "crflynn/fbm" ["e"=1]
"Mottl/hurst" -> "danielktaylor/PyLimitBook" ["e"=1]
"Mottl/hurst" -> "raphaelvallat/antropy" ["e"=1]
"Mottl/hurst" -> "rsvp/fecon235"
"addisonlynch/iexfinance" -> "tkp-archive/pyEX"
"addisonlynch/iexfinance" -> "iexg/IEX-API"
"addisonlynch/iexfinance" -> "alpacahq/pylivetrader"
"addisonlynch/iexfinance" -> "rsheftel/pandas_market_calendars"
"addisonlynch/iexfinance" -> "quandl/quandl-python"
"addisonlynch/iexfinance" -> "AlgoTraders/stock-analysis-engine"
"addisonlynch/iexfinance" -> "alpacahq/pipeline-live"
"addisonlynch/iexfinance" -> "RomelTorres/alpha_vantage"
"addisonlynch/iexfinance" -> "hydrosquall/tiingo-python"
"addisonlynch/iexfinance" -> "pydata/pandas-datareader"
"addisonlynch/iexfinance" -> "cuemacro/findatapy"
"addisonlynch/iexfinance" -> "alpacahq/alpaca-backtrader-api"
"addisonlynch/iexfinance" -> "alpacahq/alpaca-trade-api-python"
"addisonlynch/iexfinance" -> "pmorissette/ffn"
"addisonlynch/iexfinance" -> "quantopian/trading_calendars"
"Arelle/Arelle" -> "tooksoi/ScraXBRL"
"Arelle/Arelle" -> "lukerosiak/pysec"
"Arelle/Arelle" -> "greedo/python-xbrl"
"Arelle/Arelle" -> "Arelle/EdgarRenderer"
"Arelle/Arelle" -> "Arelle/ixbrl-viewer"
"Arelle/Arelle" -> "manusimidt/py-xbrl"
"Arelle/Arelle" -> "sec-edgar/sec-edgar"
"Arelle/Arelle" -> "altova/sec-xbrl"
"Arelle/Arelle" -> "edgarminers/python-edgar"
"Arelle/Arelle" -> "BuffettCode/edinet_xbrl"
"Arelle/Arelle" -> "datasets/edgar"
"Arelle/Arelle" -> "andrewkittredge/financial_fundamentals"
"Arelle/Arelle" -> "jadchaar/sec-edgar-downloader"
"Arelle/Arelle" -> "joeyism/py-edgar"
"Arelle/Arelle" -> "bergant/XBRLFiles"
"germain-hug/Deep-RL-Keras" -> "xiaochus/Deep-Reinforcement-Learning-Practice" ["e"=1]
"proceduralia/pytorch-GAN-timeseries" -> "numancelik34/TimeSeries-GAN"
"proceduralia/pytorch-GAN-timeseries" -> "jsyoon0823/TimeGAN"
"proceduralia/pytorch-GAN-timeseries" -> "ratschlab/RGAN"
"proceduralia/pytorch-GAN-timeseries" -> "zzw-zwzhang/TimeGAN-pytorch"
"proceduralia/pytorch-GAN-timeseries" -> "SigCGANs/Conditional-Sig-Wasserstein-GANs"
"proceduralia/pytorch-GAN-timeseries" -> "birdx0810/timegan-pytorch"
"proceduralia/pytorch-GAN-timeseries" -> "zhangsunny/GAN-for-Time-Series-in-Pytorch"
"proceduralia/pytorch-GAN-timeseries" -> "imics-lab/tts-gan"
"proceduralia/pytorch-GAN-timeseries" -> "firmai/mtss-gan"
"proceduralia/pytorch-GAN-timeseries" -> "benearnthof/TimeGAN"
"proceduralia/pytorch-GAN-timeseries" -> "buriburisuri/timeseries_gan"
"proceduralia/pytorch-GAN-timeseries" -> "IvanBongiorni/GAN-RNN_Timeseries-imputation" ["e"=1]
"proceduralia/pytorch-GAN-timeseries" -> "gioramponi/GAN_Time_Series"
"proceduralia/pytorch-GAN-timeseries" -> "Yashkataria/CGAN-for-time-series"
"proceduralia/pytorch-GAN-timeseries" -> "firmai/tsgan"
"portfolioplus/pytickersymbols" -> "portfolioplus/pystockfilter"
"portfolioplus/pytickersymbols" -> "portfolioplus/pystockdb"
"alpacahq/alpaca-trade-api-js" -> "alpacahq/alpaca-ts"
"alpacahq/alpaca-trade-api-js" -> "alpacahq/alpaca-trade-api-go"
"alpacahq/alpaca-trade-api-js" -> "alpacahq/alpaca-rn-mobile"
"alpacahq/alpaca-trade-api-js" -> "alpacahq/Alpaca-API"
"alpacahq/alpaca-trade-api-js" -> "alpacahq/alpaca-trade-api-python"
"alpacahq/alpaca-trade-api-js" -> "polygon-io/client-js"
"alpacahq/alpaca-trade-api-js" -> "pilwon/node-ib"
"alpacahq/alpaca-trade-api-js" -> "alpacahq/Momentum-Trading-Example"
"alpacahq/alpaca-trade-api-js" -> "torreyleonard/algotrader"
"alpacahq/alpaca-trade-api-js" -> "maxicus/ib-tws-api"
"alpacahq/alpaca-trade-api-js" -> "alpacahq/alpaca-backtrader-api"
"alpacahq/alpaca-trade-api-js" -> "aurbano/robinhood-node"
"alpacahq/alpaca-trade-api-js" -> "bennycode/coinbase-pro-node" ["e"=1]
"alpacahq/alpaca-trade-api-js" -> "anandanand84/technicalindicators" ["e"=1]
"alpacahq/alpaca-trade-api-js" -> "alpacahq/user-docs"
"PacktPublishing/Hands-on-Python-for-Finance" -> "alexa-samples/alexa-smarthome" ["e"=1]
"PacktPublishing/Hands-on-Python-for-Finance" -> "PacktPublishing/Python-for-Finance-Cookbook"
"PacktPublishing/Hands-on-Python-for-Finance" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"PacktPublishing/Hands-on-Python-for-Finance" -> "PacktPublishing/Python-for-Finance-Second-Edition"
"PacktPublishing/Hands-on-Python-for-Finance" -> "PacktPublishing/Machine-Learning-for-Finance"
"PacktPublishing/Hands-on-Python-for-Finance" -> "krishnaik06/Natural-Language-Processing" ["e"=1]
"PacktPublishing/Hands-on-Python-for-Finance" -> "krishnaik06/Interview-Prepartion-Data-Science" ["e"=1]
"PacktPublishing/Hands-on-Python-for-Finance" -> "krishnaik06/Deployment-flask" ["e"=1]
"hANSIc99/Pythonic" -> "s-brez/trading-server" ["e"=1]
"michaelewens/SDC-to-Compustat-Mapping" -> "michaelewens/MD-A-10-K-data"
"michaelewens/SDC-to-Compustat-Mapping" -> "wharton/wrds"
"bkelly-lab/ipca" -> "bkelly-lab/ReplicationCrisis"
"bkelly-lab/ipca" -> "jasonzy121/Deep_Learning_Asset_Pricing"
"bkelly-lab/ipca" -> "gregzanotti/dlsa-public"
"bkelly-lab/ipca" -> "LouisChen1992/Deep_Learning_in_Asset_Pricing"
"bkelly-lab/ipca" -> "RichardS0268/Autoencoder-Asset-Pricing-Models"
"bkelly-lab/ipca" -> "Feng-CityUHK/EquityCharacteristics"
"bkelly-lab/ipca" -> "OpenSourceAP/CrossSection"
"lballabio/quantlib-old" -> "QuantSoftware/QuantSoftwareToolkit"
"lballabio/quantlib-old" -> "amaggiulli/QLNet" ["e"=1]
"lballabio/quantlib-old" -> "QuantBox/QuantBox_XAPI" ["e"=1]
"lballabio/quantlib-old" -> "enthought/pyql"
"lballabio/quantlib-old" -> "libtrading/libtrading" ["e"=1]
"lballabio/quantlib-old" -> "lballabio/QuantLib-SWIG"
"lballabio/quantlib-old" -> "maihde/quant"
"sec-edgar/sec-edgar" -> "jadchaar/sec-edgar-downloader"
"sec-edgar/sec-edgar" -> "edgarminers/python-edgar"
"sec-edgar/sec-edgar" -> "lukerosiak/pysec"
"sec-edgar/sec-edgar" -> "datasets/edgar"
"sec-edgar/sec-edgar" -> "joeyism/py-edgar"
"sec-edgar/sec-edgar" -> "alions7000/SEC-EDGAR-text"
"sec-edgar/sec-edgar" -> "tooksoi/ScraXBRL"
"sec-edgar/sec-edgar" -> "janlukasschroeder/sec-api"
"sec-edgar/sec-edgar" -> "dgunning/edgartools"
"sec-edgar/sec-edgar" -> "LexPredict/openedgar"
"sec-edgar/sec-edgar" -> "lefterisloukas/edgar-crawler"
"sec-edgar/sec-edgar" -> "Arelle/Arelle"
"sec-edgar/sec-edgar" -> "eliangcs/pystock-crawler"
"sec-edgar/sec-edgar" -> "janlukasschroeder/sec-api-python"
"sec-edgar/sec-edgar" -> "farhadab/sec-edgar-financials"
"CNIPA/PatentDatabases" -> "ryanlstevens/google_patent_scraper"
"CNIPA/PatentDatabases" -> "google/patents-public-data"
"CNIPA/PatentDatabases" -> "ip-tools/python-epo-ops-client"
"CNIPA/PatentDatabases" -> "wenyalintw/Google-Patents-Scraper"
"CNIPA/PatentDatabases" -> "CNIPA/PatentOffices"
"CNIPA/PatentDatabases" -> "USPTO/PatentPublicData"
"pilwon/node-yahoo-finance" -> "pilwon/node-google-finance"
"pilwon/node-yahoo-finance" -> "gadicc/node-yahoo-finance2"
"pilwon/node-yahoo-finance" -> "albertosantini/node-finance"
"pilwon/node-yahoo-finance" -> "wagenaartje/stocks.js"
"pilwon/node-yahoo-finance" -> "markitondemand/DEPRECATED-DataApis"
"pilwon/node-yahoo-finance" -> "pilwon/node-ib"
"jenniyanjie/successful-algorithmic-trading" -> "pystat/SuccessfulAlgorithmicTrading"
"QuantConnect/Documentation" -> "QuantConnect/Tutorials"
"QuantConnect/Documentation" -> "QuantConnect/Research"
"QuantConnect/Documentation" -> "QuantConnect/lean-cli"
"QuantConnect/Documentation" -> "QuantConnect/IBAutomater"
"QuantConnect/Documentation" -> "ksjagtap/QuantConnect-Trading-Strategies"
"Komnomnomnom/swigibpy" -> "robcarver17/ibswigsystematicexamples"
"Komnomnomnom/swigibpy" -> "bdkearns/twspy"
"Komnomnomnom/swigibpy" -> "colinalexander/IbPython3"
"Komnomnomnom/swigibpy" -> "rudimeier/twsapi"
"Komnomnomnom/swigibpy" -> "ib-controller/ib-controller"
"Komnomnomnom/swigibpy" -> "rudimeier/twstools"
"sdv-dev/Copulas" -> "bashtage/arch" ["e"=1]
"pmaji/crypto-whale-watching-app" -> "ivopetiz/algotrading" ["e"=1]
"pmaji/crypto-whale-watching-app" -> "s-brez/trading-server" ["e"=1]
"yhilpisch/tpqoa" -> "oanda/v20-python"
"yhilpisch/tpqoa" -> "yhilpisch/py4at"
"yhilpisch/tpqoa" -> "yhilpisch/aiif"
"yhilpisch/tpqoa" -> "oanda/v20-python-samples"
"techietrader/Trading-indicators-and-Chart-patterns" -> "quantroom-pro/pyrenko"
"techietrader/Trading-indicators-and-Chart-patterns" -> "ChillarAnand/stocktrends"
"techietrader/Trading-indicators-and-Chart-patterns" -> "arkochhar/Technical-Indicators"
"techietrader/Trading-indicators-and-Chart-patterns" -> "GerardBCN/RenkoTrading"
"GerardBCN/RenkoTrading" -> "quantroom-pro/pyrenko"
"handayu/IB-TWS-Multicharts-Trading" -> "handayu/MC-Fundament-Code"
"rodrigo-brito/backtrader-binance-bot" -> "Dave-Vallance/bt-ccxt-store"
"rodrigo-brito/backtrader-binance-bot" -> "lindomar-oliveira/backtrader-binance"
"rodrigo-brito/backtrader-binance-bot" -> "verybadsoldier/backtrader_plotting"
"rodrigo-brito/backtrader-binance-bot" -> "bartosh/backtrader"
"rodrigo-brito/backtrader-binance-bot" -> "WISEPLAT/backtrader_binance"
"rodrigo-brito/backtrader-binance-bot" -> "happydasch/btplotting"
"rodrigo-brito/backtrader-binance-bot" -> "EasyAI/Simple-Binance-Trader" ["e"=1]
"rodrigo-brito/backtrader-binance-bot" -> "Ckend/pythondict-quant"
"rodrigo-brito/backtrader-binance-bot" -> "backtrader2/backtrader"
"rodrigo-brito/backtrader-binance-bot" -> "neilsmurphy/backtrader_template"
"rodrigo-brito/backtrader-binance-bot" -> "dimnorin/backtrader-live"
"rodrigo-brito/backtrader-binance-bot" -> "SinaPournia/DeepLearning-Trader"
"rodrigo-brito/backtrader-binance-bot" -> "OmegaTrading/OmegaUI"
"rodrigo-brito/backtrader-binance-bot" -> "Dave-Vallance/tv2bt"
"rodrigo-brito/backtrader-binance-bot" -> "Hephyrius/Binance-Signal-Bot" ["e"=1]
"schardtbc/iexcloud_api_wrapper" -> "schardtbc/iexcloudR"
"SpiralDevelopment/candlestick-patterns" -> "cm45t3r/candlestick" ["e"=1]
"SpiralDevelopment/candlestick-patterns" -> "stockalgo/stolgo"
"SpiralDevelopment/candlestick-patterns" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"SpiralDevelopment/candlestick-patterns" -> "day0market/support_resistance"
"SpiralDevelopment/candlestick-patterns" -> "hackingthemarkets/candlestick-screener" ["e"=1]
"SpiralDevelopment/candlestick-patterns" -> "arkochhar/Technical-Indicators"
"SpiralDevelopment/candlestick-patterns" -> "GregoryMorse/trendln"
"SpiralDevelopment/candlestick-patterns" -> "SpiralDevelopment/RSI-divergence-detector"
"SpiralDevelopment/candlestick-patterns" -> "kylejusticemagnuson/pyti"
"SpiralDevelopment/candlestick-patterns" -> "cderinbogaz/inpredo"
"SpiralDevelopment/candlestick-patterns" -> "ChillarAnand/stocktrends"
"SpiralDevelopment/candlestick-patterns" -> "AnalyzerREST/python-tradingview-ta" ["e"=1]
"SpiralDevelopment/candlestick-patterns" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"SpiralDevelopment/candlestick-patterns" -> "jchao01/TradingView-data-scraper" ["e"=1]
"SpiralDevelopment/candlestick-patterns" -> "pegahcarter/TAcharts"
"rghuckins/robinhood-google-sheets" -> "roblav96/robinhood.tools"
"fbertram/TuringTrader" -> "michaelchu/optopsy" ["e"=1]
"SockTrader/SockTrader" -> "s-brez/trading-server" ["e"=1]
"sam31415/timeseriescv" -> "WenjieZ/TSCV" ["e"=1]
"sam31415/timeseriescv" -> "jjakimoto/finance_ml"
"sam31415/timeseriescv" -> "fracdiff/fracdiff"
"sam31415/timeseriescv" -> "rspadim/Adv_Fin_ML"
"sam31415/timeseriescv" -> "jmrichardson/tuneta"
"sam31415/timeseriescv" -> "DidierRLopes/timeseries-cv"
"sam31415/timeseriescv" -> "emoen/Machine-Learning-for-Asset-Managers"
"sam31415/timeseriescv" -> "Rachnog/Advanced-Deep-Trading"
"sam31415/timeseriescv" -> "Jianeng/Deep-Learning-in-Asset-Pricing"
"sam31415/timeseriescv" -> "rubenbriones/Probabilistic-Sharpe-Ratio"
"sam31415/timeseriescv" -> "tr8dr/tseries-patterns"
"WenjieZ/TSCV" -> "sam31415/timeseriescv" ["e"=1]
"pilwon/node-google-finance" -> "pilwon/node-yahoo-finance"
"pilwon/node-google-finance" -> "anvk/google-stocks"
"zachwill/fred" -> "avelkoski/FRB"
"zachwill/fred" -> "jjotterson/datapungi_fed"
"zachwill/fred" -> "letsgoexploring/fredpy"
"zachwill/fred" -> "mortada/fredapi"
"zachwill/fred" -> "7astro7/full_fred"
"marketneutral/pairs-trading-with-ML" -> "marketneutral/stock-cluster-nlp"
"marketneutral/pairs-trading-with-ML" -> "wangy8989/Pairs-Trading-with-Machine-Learning"
"marketneutral/pairs-trading-with-ML" -> "wi-0/Pair-Trading-Reinforcement-Learning" ["e"=1]
"marketneutral/pairs-trading-with-ML" -> "wywongbd/pairstrade-fyp-2019"
"marketneutral/pairs-trading-with-ML" -> "simaomsarmento/PairsTrading"
"marketneutral/pairs-trading-with-ML" -> "sapphire921/HFT-Pairs-Trading" ["e"=1]
"marketneutral/pairs-trading-with-ML" -> "shenyichen105/Deep-Reinforcement-Learning-in-Stock-Trading" ["e"=1]
"marketneutral/pairs-trading-with-ML" -> "daehkim/pair-trading"
"marketneutral/pairs-trading-with-ML" -> "financialnoob/pairs_trading"
"marketneutral/pairs-trading-with-ML" -> "marketneutral/alphatools"
"marketneutral/pairs-trading-with-ML" -> "BlackArbsCEO/mixture_model_trading_public"
"Jackal08/financial-data-structures" -> "hudson-and-thames/presentations"
"Jackal08/financial-data-structures" -> "rspadim/Adv_Fin_ML"
"Jackal08/financial-data-structures" -> "Jackal08/QuantInsti-Final-Project-Statistical-Arbitrage"
"WongYatChun/Advances-in-Financial-Machine-Learning" -> "JackBrady/Financial-Machine-Learning"
"WongYatChun/Advances-in-Financial-Machine-Learning" -> "ssunger/Advances-in-Financial-Machine-Learning"
"BuffettCode/edinet_xbrl" -> "teatime77/xbrl-reader"
"BuffettCode/edinet_xbrl" -> "greedo/python-xbrl"
"BuffettCode/edinet_xbrl" -> "chakki-works/xbrr"
"duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network" -> "deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-"
"duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network" -> "timestocome/Test-stock-prediction-algorithms"
"duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network" -> "pushpendughosh/Stock-market-forecasting"
"duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network" -> "Rajat-dhyani/Stock-Price-Predictor"
"duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network" -> "kah-ve/MarketGAN"
"duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network" -> "dzitkowskik/StockPredictionRNN"
"bmoscon/cryptostore" -> "man-group/arctic" ["e"=1]
"bmoscon/cryptostore" -> "s-brez/trading-server" ["e"=1]
"dysonance/Trendy" -> "GregoryMorse/trendln"
"dysonance/Trendy" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"dysonance/Trendy" -> "sohandillikar/SupportResistance"
"dysonance/Trendy" -> "nife8975/Trendline_Tools"
"dysonance/Trendy" -> "day0market/support_resistance"
"dysonance/Trendy" -> "nakulnayyar/SupResGenerator"
"dysonance/Trendy" -> "panpanpandas/ultrafinance"
"dysonance/Trendy" -> "WestXu/support_resistance_line"
"dysonance/Trendy" -> "albertsl/support-resistance_trading-bot"
"YuChenAmberLu/Options-Calculator" -> "yzoz/python-option-calculator"
"YuChenAmberLu/Options-Calculator" -> "AnthonyBradford/optionmatrix"
"YuChenAmberLu/Options-Calculator" -> "hsjharvey/Option-Pricing"
"YuChenAmberLu/Options-Calculator" -> "boyac/pyOptionPricing"
"YuChenAmberLu/Options-Calculator" -> "gabrielepompa88/pyBlackScholesAnalytics"
"selimamrouni/Deep-Portfolio-Management-Reinforcement-Learning" -> "doncat99/StockRecommendSystem" ["e"=1]
"jkirkby3/PROJ_Option_Pricing_Matlab" -> "jkirkby3/fypy"
"jkirkby3/PROJ_Option_Pricing_Matlab" -> "attack68/rateslib"
"jkirkby3/PROJ_Option_Pricing_Matlab" -> "jcfrei/Heston"
"jkirkby3/PROJ_Option_Pricing_Matlab" -> "AnthonyBradford/optionmatrix"
"jkirkby3/PROJ_Option_Pricing_Matlab" -> "hsjharvey/Option-Pricing"
"jkirkby3/PROJ_Option_Pricing_Matlab" -> "jkirkby3/pymle"
"jkirkby3/PROJ_Option_Pricing_Matlab" -> "dedwards25/Python_Option_Pricing"
"jkirkby3/PROJ_Option_Pricing_Matlab" -> "YuMan-Tam/deep-hedging"
"jkirkby3/PROJ_Option_Pricing_Matlab" -> "ynouri/pysabr"
"sebastianheinz/stockprediction" -> "lilianweng/stock-rnn"
"sebastianheinz/stockprediction" -> "dzitkowskik/StockPredictionRNN"
"sebastianheinz/stockprediction" -> "tencia/stocks_rnn"
"sebastianheinz/stockprediction" -> "kimber-chen/Tensorflow-for-stock-prediction"
"sebastianheinz/stockprediction" -> "newellp88/V20pyPro"
"sebastianheinz/stockprediction" -> "FraPochetti/StocksProject"
"sebastianheinz/stockprediction" -> "llSourcell/How-to-Predict-Stock-Prices-Easily-Demo" ["e"=1]
"sebastianheinz/stockprediction" -> "scorpionhiccup/StockPricePrediction"
"sebastianheinz/stockprediction" -> "Rachnog/Deep-Trading" ["e"=1]
"sebastianheinz/stockprediction" -> "achillesrasquinha/bulbea"
"sebastianheinz/stockprediction" -> "VivekPa/IntroNeuralNetworks"
"sebastianheinz/stockprediction" -> "keon/deepstock" ["e"=1]
"sebastianheinz/stockprediction" -> "26hzhang/StockPrediction"
"sebastianheinz/stockprediction" -> "llSourcell/Reinforcement_Learning_for_Stock_Prediction" ["e"=1]
"sebastianheinz/stockprediction" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"alpacahq/pylivetrader" -> "alpacahq/pipeline-live"
"alpacahq/pylivetrader" -> "shlomiku/zipline-trader"
"alpacahq/pylivetrader" -> "alpacahq/alpaca-backtrader-api"
"alpacahq/pylivetrader" -> "zipline-live/zipline"
"alpacahq/pylivetrader" -> "alpacahq/Momentum-Trading-Example"
"alpacahq/pylivetrader" -> "alpacahq/alpaca-trade-api-python"
"alpacahq/pylivetrader" -> "ranaroussi/qtpylib"
"alpacahq/pylivetrader" -> "alpacahq/marketstore"
"alpacahq/pylivetrader" -> "alpacahq/example-scalping"
"alpacahq/pylivetrader" -> "addisonlynch/iexfinance"
"alpacahq/pylivetrader" -> "alpacahq/pymarketstore"
"alpacahq/pylivetrader" -> "alpacahq/example-hftish" ["e"=1]
"alpacahq/pylivetrader" -> "s-brez/trading-server"
"alpacahq/pylivetrader" -> "camelpac/alpaca-proxy-agent"
"alpacahq/pylivetrader" -> "ematvey/pybacktest"
"verybadsoldier/backtrader_plotting" -> "happydasch/btplotting"
"verybadsoldier/backtrader_plotting" -> "OmegaTrading/OmegaUI"
"verybadsoldier/backtrader_plotting" -> "Dave-Vallance/bt-ccxt-store"
"verybadsoldier/backtrader_plotting" -> "rodrigo-brito/backtrader-binance-bot"
"verybadsoldier/backtrader_plotting" -> "Skinok/backtrader-pyqt-ui"
"verybadsoldier/backtrader_plotting" -> "Ckend/pythondict-quant"
"verybadsoldier/backtrader_plotting" -> "backtrader2/backtrader"
"verybadsoldier/backtrader_plotting" -> "iniself/noba"
"verybadsoldier/backtrader_plotting" -> "alpacahq/alpaca-backtrader-api"
"verybadsoldier/backtrader_plotting" -> "Dave-Vallance/tv2bt"
"verybadsoldier/backtrader_plotting" -> "mementum/bta-lib"
"verybadsoldier/backtrader_plotting" -> "lamkashingpaul/backtrader_plotly"
"verybadsoldier/backtrader_plotting" -> "Kismuz/btgym" ["e"=1]
"verybadsoldier/backtrader_plotting" -> "Oxylo/btreport"
"verybadsoldier/backtrader_plotting" -> "neilsmurphy/backtrader_template"
"MathSci/fecon236" -> "rsvp/fecon235"
"MathSci/fecon236" -> "lnsongxf/fecon235"
"LastAncientOne/Mathematics_for_Machine_Learning" -> "LastAncientOne/Data-Science"
"LastAncientOne/Mathematics_for_Machine_Learning" -> "LastAncientOne/Beverages_Long_Term_Investment"
"LastAncientOne/Mathematics_for_Machine_Learning" -> "LastAncientOne/SimpleStockAnalysisR"
"LastAncientOne/Mathematics_for_Machine_Learning" -> "LastAncientOne/100_Day_Challenge"
"LastAncientOne/Mathematics_for_Machine_Learning" -> "LastAncientOne/Scrape_Data"
"LastAncientOne/Data-Science" -> "LastAncientOne/Mathematics_for_Machine_Learning"
"LastAncientOne/Data-Science" -> "LastAncientOne/Beverages_Long_Term_Investment"
"paduel/MT_zeromq_vnc_docker" -> "Python-para-Trading/Mini-Retos-PPT"
"umbertogriffo/Predictive-Maintenance-using-LSTM" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" ["e"=1]
"khramkov/Backtrader-MQL5-API" -> "happydasch/btplotting" ["e"=1]
"khramkov/Backtrader-MQL5-API" -> "Dave-Vallance/tv2bt" ["e"=1]
"teddykoker/blog" -> "teddykoker/survivorship-free-spy"
"CharlesLoo/stock-pattern-recorginition" -> "gaborvecsei/Stocks-Pattern-Analyzer"
"CharlesLoo/stock-pattern-recorginition" -> "RiccardoM/Forex-and-Stock-Python-Pattern-Recognizer"
"CharlesLoo/stock-pattern-recorginition" -> "kanwalpreet18/canslimTechnical"
"CharlesLoo/stock-pattern-recorginition" -> "white07S/TradingPatternScanner"
"CharlesLoo/stock-pattern-recorginition" -> "pecu/FinancialVision"
"CharlesLoo/stock-pattern-recorginition" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"CharlesLoo/stock-pattern-recorginition" -> "day0market/support_resistance"
"CharlesLoo/stock-pattern-recorginition" -> "GregoryMorse/trendln"
"CharlesLoo/stock-pattern-recorginition" -> "Roshanmahes/Quant-Finance"
"CharlesLoo/stock-pattern-recorginition" -> "amit-agni/candlesticks-deeplearning"
"quantroom-pro/pyrenko" -> "lamres/renko_trend_following_strategy_catalyst"
"quantroom-pro/pyrenko" -> "GerardBCN/RenkoTrading"
"quantroom-pro/pyrenko" -> "ChillarAnand/stocktrends"
"quantroom-pro/pyrenko" -> "techietrader/Trading-indicators-and-Chart-patterns"
"quantroom-pro/pyrenko" -> "pegahcarter/TAcharts"
"quantroom-pro/pyrenko" -> "gmoncarz/renko"
"lamres/renko_trend_following_strategy_catalyst" -> "quantroom-pro/pyrenko"
"lamres/renko_trend_following_strategy_catalyst" -> "lamres/pairs_trading_cryptocurrencies_strategy_catalyst"
"lamres/renko_trend_following_strategy_catalyst" -> "GerardBCN/RenkoTrading"
"yangwohenmai/TimeSeriesForecasting" -> "yangwohenmai/LSTM" ["e"=1]
"xiaochus/Deep-Reinforcement-Learning-Practice" -> "tdmdal/rl-hedge-2019"
"happydasch/btoandav20" -> "happydasch/btconfig"
"happydasch/btoandav20" -> "hootnot/oandapyV20-examples"
"happydasch/btoandav20" -> "Dave-Vallance/tv2bt"
"happydasch/btoandav20" -> "ultra1971/backtrader_ib_insync"
"oanda/oandapy" -> "hootnot/oanda-api-v20"
"oanda/oandapy" -> "oanda/v20-python"
"oanda/oandapy" -> "oanda/v20-python-samples"
"oanda/oandapy" -> "hootnot/oandapyV20-examples"
"oanda/oandapy" -> "PeterMalkin/oandapybot"
"oanda/oandapy" -> "oanda/py-api-trading"
"oanda/oandapy" -> "toloco/pyoanda"
"oanda/oandapy" -> "mhallsmoore/qsforex"
"oanda/oandapy" -> "jonromero/forex_algotrading"
"oanda/oandapy" -> "oanda/py-api-streaming"
"oanda/oandapy" -> "anthonyng2/FX-Trading-with-Python-and-Oanda"
"oanda/oandapy" -> "happydasch/btoandav20"
"oanda/oandapy" -> "hayatoy/ml-forex-prediction"
"oanda/oandapy" -> "albertosantini/argo" ["e"=1]
"oanda/oandapy" -> "samuraitaiga/py-metatrader" ["e"=1]
"kayuksel/forex-rl-challenge" -> "noootown/Forex-DQN" ["e"=1]
"khramkov/MQL5-JSON-API" -> "Dave-Vallance/tv2bt" ["e"=1]
"fxcm/MarketData" -> "fxcm/RestAPI"
"fxcm/MarketData" -> "gehtsoft/forex-connect"
"fxcm/MarketData" -> "fxcm/FIXAPI"
"RyanWangZf/Hurst-exponent-R-S-analysis-" -> "PTRRupprecht/GenHurst"
"xiubooth/ML_Codes" -> "Jianeng/Deep-Learning-in-Asset-Pricing"
"xiubooth/ML_Codes" -> "yolsever/ML-in-equity-prediction"
"xiubooth/ML_Codes" -> "Feng-CityUHK/EquityCharacteristics"
"xiubooth/ML_Codes" -> "zeyuz35/Evaluation-of-Machine-Learning-in-Asset-Pricing"
"xiubooth/ML_Codes" -> "LouisChen1992/Deep_Learning_in_Asset_Pricing"
"iexg/IEX-API" -> "tkp-archive/pyEX"
"iexg/IEX-API" -> "addisonlynch/iexfinance"
"iexg/IEX-API" -> "robinhood-unofficial/pyrh"
"iexg/IEX-API" -> "sanko/Robinhood"
"iexg/IEX-API" -> "toddwschneider/stocks"
"iexg/IEX-API" -> "schardtbc/iexcloud_api_wrapper"
"iexg/IEX-API" -> "rsheftel/pandas_market_calendars"
"iexg/IEX-API" -> "AlgoTraders/stock-analysis-engine"
"iexg/IEX-API" -> "WojciechZankowski/iextrading4j" ["e"=1]
"iexg/IEX-API" -> "cuemacro/findatapy"
"iexg/IEX-API" -> "bilalq/iex-api"
"iexg/IEX-API" -> "timpalpant/go-iex"
"iexg/IEX-API" -> "timkpaine/tdameritrade"
"iexg/IEX-API" -> "RomelTorres/alpha_vantage"
"iexg/IEX-API" -> "erdewit/ib_insync"
"PacktPublishing/Machine-Learning-for-Finance" -> "PacktPublishing/Python-for-Finance-Cookbook"
"PacktPublishing/Machine-Learning-for-Finance" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"PacktPublishing/Machine-Learning-for-Finance" -> "anthonyng2/Machine-Learning-For-Finance"
"PacktPublishing/Machine-Learning-for-Finance" -> "yhilpisch/dawp"
"PacktPublishing/Machine-Learning-for-Finance" -> "PacktPublishing/Learn-Algorithmic-Trading"
"PacktPublishing/Machine-Learning-for-Finance" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"PacktPublishing/Machine-Learning-for-Finance" -> "JCreeks/Machine-Learning-in-Finance"
"PacktPublishing/Machine-Learning-for-Finance" -> "jjakimoto/finance_ml"
"PacktPublishing/Machine-Learning-for-Finance" -> "PacktPublishing/Python-for-Finance-Second-Edition"
"PacktPublishing/Machine-Learning-for-Finance" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"PacktPublishing/Machine-Learning-for-Finance" -> "PacktPublishing/Hands-on-Python-for-Finance"
"PacktPublishing/Machine-Learning-for-Finance" -> "joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance"
"PacktPublishing/Machine-Learning-for-Finance" -> "Hvass-Labs/FinanceOps"
"PacktPublishing/Machine-Learning-for-Finance" -> "PacktPublishing/Machine-Learning-for-Finance-video"
"PacktPublishing/Machine-Learning-for-Finance" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python"
"wi-0/Pair-Trading-Reinforcement-Learning" -> "wywongbd/pairstrade-fyp-2019" ["e"=1]
"wi-0/Pair-Trading-Reinforcement-Learning" -> "wangy8989/Pairs-Trading-with-Machine-Learning" ["e"=1]
"wi-0/Pair-Trading-Reinforcement-Learning" -> "marketneutral/pairs-trading-with-ML" ["e"=1]
"twiecki/financial-analysis-python-tutorial" -> "twiecki/datascientist_tutorial"
"twiecki/financial-analysis-python-tutorial" -> "Emsu/prophet"
"twiecki/financial-analysis-python-tutorial" -> "danielfrg/PythonFinance"
"twiecki/financial-analysis-python-tutorial" -> "anthonyng2/Machine-Learning-For-Finance"
"twiecki/financial-analysis-python-tutorial" -> "jamesmawm/Mastering-Python-for-Finance-source-codes"
"twiecki/financial-analysis-python-tutorial" -> "rsvp/fecon235"
"twiecki/financial-analysis-python-tutorial" -> "quandl/quandl-python"
"twiecki/financial-analysis-python-tutorial" -> "twiecki/Bayesian-Modelling-in-Python"
"PacktPublishing/Practical-Time-Series-Analysis" -> "PacktPublishing/Machine-Learning-for-Finance" ["e"=1]
"PacktPublishing/Practical-Time-Series-Analysis" -> "PacktPublishing/Python-for-Finance-Cookbook" ["e"=1]
"leoliu0/cik-cusip-mapping" -> "volkovacodes/Block_Codes"
"leoliu0/cik-cusip-mapping" -> "leoliu0/name_matching"
"Jianeng/Deep-Learning-in-Asset-Pricing" -> "LouisChen1992/Deep_Learning_in_Asset_Pricing"
"Jianeng/Deep-Learning-in-Asset-Pricing" -> "jasonzy121/Deep_Learning_Asset_Pricing"
"Jianeng/Deep-Learning-in-Asset-Pricing" -> "xiubooth/ML_Codes"
"Jianeng/Deep-Learning-in-Asset-Pricing" -> "yolsever/ML-in-equity-prediction"
"euclidjda/deep-quant" -> "euclidjda/dnn-quant"
"euclidjda/deep-quant" -> "euclidjda/value-investing-studies"
"AlphaSmartDog/DeepLearningNotes" -> "alpha-miner/alpha-mind" ["e"=1]
"Ameobea/robintrack" -> "Ameobea/Robinhood"
"Ameobea/robintrack" -> "sanko/Robinhood"
"Ameobea/robintrack" -> "robinhood-unofficial/pyrh"
"Ameobea/robintrack" -> "alexgolec/tda-api"
"Ameobea/robintrack" -> "jmfernandes/robin_stocks"
"Ameobea/robintrack" -> "boyan-soubachov/tastyworks_api"
"Ameobea/robintrack" -> "torreyleonard/algotrader"
"Ameobea/robintrack" -> "timkpaine/tdameritrade"
"Ameobea/robintrack" -> "jeog/TOSDataBridge"
"Ameobea/robintrack" -> "arshyasharifian/investbot"
"Ameobea/robintrack" -> "anilshanbhag/RobinhoodShell"
"Ameobea/robintrack" -> "briansrls/Robinhood-for-Google-Finance"
"Ameobea/robintrack" -> "lhwolff15/InsiderTrading" ["e"=1]
"Ameobea/robintrack" -> "moosh3/robinhood-react"
"Ameobea/robintrack" -> "areed1192/td-ameritrade-python-api"
"harunzengin/ichimokuAlerter" -> "bolobox/ichibot"
"zerodha/gokiteconnect" -> "zerodha/kiteconnectjs"
"bingit2/TradingView-to-ThinkorSwim" -> "korygill/technical-analysis"
"bingit2/TradingView-to-ThinkorSwim" -> "hwrdprkns/ThinkOrSwim"
"bingit2/TradingView-to-ThinkorSwim" -> "sjjohns/ThinkOrSwimStudies"
"bingit2/TradingView-to-ThinkorSwim" -> "yammypotato/Thinkorswim-Scripts"
"bingit2/TradingView-to-ThinkorSwim" -> "john5223/minas"
"bingit2/TradingView-to-ThinkorSwim" -> "bernardcheng/tos_options_dashboard"
"bingit2/TradingView-to-ThinkorSwim" -> "jshingler/TOS-and-Thinkscript-Snippet-Collection"
"bingit2/TradingView-to-ThinkorSwim" -> "RyanHendricks/Thinkorswim-Indicators"
"bingit2/TradingView-to-ThinkorSwim" -> "sureshja/ThinkOrSwim"
"LiDan456/GAN-AD" -> "3778/Ward2ICU" ["e"=1]
"LiDan456/GAN-AD" -> "ratschlab/RGAN" ["e"=1]
"simaomsarmento/PairsTrading" -> "wangy8989/Pairs-Trading-with-Machine-Learning"
"simaomsarmento/PairsTrading" -> "financialnoob/pairs_trading"
"simaomsarmento/PairsTrading" -> "wywongbd/pairstrade-fyp-2019"
"simaomsarmento/PairsTrading" -> "KidQuant/Pairs-Trading-With-Python"
"avidLearnerInProgress/python-automation-scripts" -> "je-suis-tm/web-scraping" ["e"=1]
"alpacahq/Alpaca-API" -> "alpacahq/user-docs"
"472647301/tradingview-web-socket" -> "Dave-Vallance/tv2bt" ["e"=1]
"hydrosquall/tiingo-python" -> "addisonlynch/iexfinance"
"hydrosquall/tiingo-python" -> "business-science/riingo"
"eliangcs/pystock-crawler" -> "lukerosiak/pysec"
"eliangcs/pystock-crawler" -> "eliangcs/pystock-data"
"eliangcs/pystock-crawler" -> "andrewkittredge/financial_fundamentals"
"eliangcs/pystock-crawler" -> "datasets/edgar"
"eliangcs/pystock-crawler" -> "tooksoi/ScraXBRL"
"eliangcs/pystock-crawler" -> "sec-edgar/sec-edgar"
"eliangcs/pystock-crawler" -> "greedo/python-xbrl"
"eliangcs/pystock-crawler" -> "edgarminers/python-edgar"
"eliangcs/pystock-crawler" -> "farhadab/sec-edgar-financials"
"eliangcs/pystock-crawler" -> "altova/sec-xbrl"
"eliangcs/pystock-crawler" -> "alions7000/SEC-EDGAR-text"
"eliangcs/pystock-crawler" -> "altova/SECDB"
"eliangcs/pystock-crawler" -> "Arelle/EdgarRenderer"
"eliangcs/pystock-crawler" -> "bergant/finstr"
"EasyAI/Simple-Binance-Trader" -> "rodrigo-brito/backtrader-binance-bot" ["e"=1]
"mstrum/robinhood-python" -> "wang-ye/robinhood-crypto"
"rippledj/uspto" -> "USPTO/bulk-data-tools"
"apilayer/ratesapi" -> "MicroPyramid/django-web-profiler"
"apilayer/ratesapi" -> "MicroPyramid/microurl"
"apilayer/ratesapi" -> "MicroPyramid/django-webpacker"
"apilayer/ratesapi" -> "MicroPyramid/django-simple-pagination"
"apilayer/ratesapi" -> "MicroPyramid/django-email-gateway"
"apilayer/ratesapi" -> "MicroPyramid/docker-box"
"apilayer/ratesapi" -> "MicroPyramid/django-simple-forum"
"apilayer/ratesapi" -> "MicroPyramid/MicroSite"
"apilayer/ratesapi" -> "MicroPyramid/IAM-Manager"
"apilayer/ratesapi" -> "MicroPyramid/python-validate"
"apilayer/ratesapi" -> "MicroPyramid/gitlab-webhook-django"
"apilayer/ratesapi" -> "MicroPyramid/pietrack"
"apilayer/ratesapi" -> "MicroPyramid/microstorage"
"apilayer/ratesapi" -> "MicroPyramid/Mongo-Slice"
"BlackArbsCEO/mixture_model_trading_public" -> "BlackArbsCEO/Mixture_Models"
"BlackArbsCEO/mixture_model_trading_public" -> "tr8dr/tseries-patterns"
"BlackArbsCEO/mixture_model_trading_public" -> "BlackArbsCEO/option_skew_project_public"
"jeog/TOSDataBridge" -> "jeog/TDAmeritradeAPI"
"jeog/TOSDataBridge" -> "jshingler/TOS-and-Thinkscript-Snippet-Collection"
"jeog/TOSDataBridge" -> "timkpaine/tdameritrade"
"jeog/TOSDataBridge" -> "sjjohns/ThinkOrSwimStudies"
"jeog/TOSDataBridge" -> "bingit2/TradingView-to-ThinkorSwim"
"jeog/TOSDataBridge" -> "korygill/technical-analysis"
"jeog/TOSDataBridge" -> "hwrdprkns/ThinkOrSwim"
"jeog/TOSDataBridge" -> "areed1192/td-ameritrade-python-api"
"jeog/TOSDataBridge" -> "TreyThomas93/python-trading-bot-with-thinkorswim"
"jeog/TOSDataBridge" -> "alexgolec/tda-api"
"jeog/TOSDataBridge" -> "bernardcheng/tos_options_dashboard"
"jeog/TOSDataBridge" -> "drewgriffith15/ThinkOrSwim"
"jeog/TOSDataBridge" -> "areed1192/td-ameritrade-api"
"jeog/TOSDataBridge" -> "dranem05/thinkscripts-pub"
"jeog/TOSDataBridge" -> "crosbymichael/thinkorswim"
"maihde/quant" -> "benjaminmgross/visualize-wealth"
"maihde/quant" -> "panpanpandas/ultrafinance"
"maihde/quant" -> "CarterBain/AlephNull"
"maihde/quant" -> "paulperry/quant"
"maihde/quant" -> "hamiltonkibbe/stocks"
"maihde/quant" -> "Emsu/prophet"
"maihde/quant" -> "fja05680/pinkfish"
"maihde/quant" -> "ematvey/pybacktest"
"maihde/quant" -> "jasonswearingen/QuantShim"
"maihde/quant" -> "thalesians/pythalesians"
"maihde/quant" -> "lsgro/quantcomponents" ["e"=1]
"maihde/quant" -> "mhallsmoore/qsforex"
"maihde/quant" -> "jamesmawm/IB-Trading-Models-And-Backtester"
"fxcm/JavaAPI" -> "fxcm/ForexConnectAPI"
"fxcm/JavaAPI" -> "fxcm/FIXAPI"
"fxcm/ForexConnectAPI" -> "fxcm/JavaAPI"
"fxcm/ForexConnectAPI" -> "gehtsoft/forex-connect"
"fxcm/ForexConnectAPI" -> "fxcm/FIXAPI"
"fxcm/ForexConnectAPI" -> "fxcm/RestAPI"
"fxcm/ForexConnectAPI" -> "fxcm/MarketData"
"fxcm/ForexConnectAPI" -> "PythonProgramming/Pattern-Recognition-for-Forex-Trading"
"zazhang/ep-chan-book-algo-trading" -> "quant-science/sunday-quant-scientist"
"zazhang/ep-chan-book-algo-trading" -> "MarcosCarreira/DermanPapers"
"zazhang/ep-chan-book-algo-trading" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"zazhang/ep-chan-book-algo-trading" -> "robcarver17/systematictradingexamples"
"zazhang/ep-chan-book-algo-trading" -> "chrisconlan/algorithmic-trading-with-python"
"zazhang/ep-chan-book-algo-trading" -> "shashankvemuri/Finance"
"zazhang/ep-chan-book-algo-trading" -> "robcarver17/pysystemtrade_examples"
"zazhang/ep-chan-book-algo-trading" -> "dbrojas/optlib"
"zazhang/ep-chan-book-algo-trading" -> "Coder-World04/Time-Series-Analysis-and-Forecasting" ["e"=1]
"zazhang/ep-chan-book-algo-trading" -> "mfrdixon/ML_Finance_Codes"
"zazhang/ep-chan-book-algo-trading" -> "jo-cho/Technical_Analysis_and_Feature_Engineering"
"zazhang/ep-chan-book-algo-trading" -> "letianzj/QuantResearch"
"zazhang/ep-chan-book-algo-trading" -> "dedwards25/Python_Option_Pricing"
"zazhang/ep-chan-book-algo-trading" -> "LongOnly/Quantitative-Notebooks"
"zazhang/ep-chan-book-algo-trading" -> "ynouri/pysabr"
"Liang-yc/ssq" -> "oahzxd/lottoery"
"Liang-yc/ssq" -> "zepen/predict_Lottery_ticket"
"Liang-yc/ssq" -> "chengstone/LotteryPredict"
"Liang-yc/ssq" -> "fight1990/Lottery"
"Liang-yc/ssq" -> "xwwxx/lottery-analysis"
"Liang-yc/ssq" -> "KittenCN/predict_Lottery_ticket"
"Liang-yc/ssq" -> "AaronJny/lotto"
"Liang-yc/ssq" -> "KittenCN/predict_Lottery_ticket_pytorch"
"Liang-yc/ssq" -> "luhao-worker/tf-lottery"
"Liang-yc/ssq" -> "BEWINDOWEB/lotterygrabber"
"Liang-yc/ssq" -> "piggyone/chromosphere"
"roblav96/headless-ib-gateway-installation-ubuntu-server" -> "mvberg/ib-gateway-docker"
"roblav96/headless-ib-gateway-installation-ubuntu-server" -> "ib-controller/ib-controller"
"roblav96/headless-ib-gateway-installation-ubuntu-server" -> "IbcAlpha/IBC"
"roblav96/headless-ib-gateway-installation-ubuntu-server" -> "UnusualAlpha/ib-gateway-docker"
"roblav96/headless-ib-gateway-installation-ubuntu-server" -> "pilwon/node-ib"
"roblav96/headless-ib-gateway-installation-ubuntu-server" -> "antequant/ib-gateway-docker"
"roblav96/headless-ib-gateway-installation-ubuntu-server" -> "Voyz/ibeam"
"roblav96/headless-ib-gateway-installation-ubuntu-server" -> "zgsrc/ibjs"
"quantopian/bayesalpha" -> "quantopian/mlfinlab"
"quantopian/bayesalpha" -> "quantopian/robintrack"
"Rachnog/Advanced-Deep-Trading" -> "Rachnog/Deep-Trading" ["e"=1]
"Rachnog/Advanced-Deep-Trading" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"Rachnog/Advanced-Deep-Trading" -> "Rachnog/Deep-Portfolio-Management"
"Rachnog/Advanced-Deep-Trading" -> "jjakimoto/finance_ml"
"Rachnog/Advanced-Deep-Trading" -> "JackBrady/Financial-Machine-Learning"
"Rachnog/Advanced-Deep-Trading" -> "emoen/Machine-Learning-for-Asset-Managers"
"Rachnog/Advanced-Deep-Trading" -> "thedimlebowski/Trading-Gym" ["e"=1]
"Rachnog/Advanced-Deep-Trading" -> "Rachnog/Reinforcement-Learning-in-Finance"
"Rachnog/Advanced-Deep-Trading" -> "hudson-and-thames/research"
"Rachnog/Advanced-Deep-Trading" -> "hudson-and-thames/mlfinlab"
"Rachnog/Advanced-Deep-Trading" -> "boyboi86/AFML"
"Rachnog/Advanced-Deep-Trading" -> "fernandodelacalle/adv-financial-ml-marcos-exercises"
"Rachnog/Advanced-Deep-Trading" -> "doda/advances-in-financial-ml-notes"
"Rachnog/Advanced-Deep-Trading" -> "hackthemarket/gym-trading" ["e"=1]
"Rachnog/Advanced-Deep-Trading" -> "fracdiff/fracdiff"
"WestXu/support_resistance_line" -> "sohandillikar/SupportResistance"
"fxcm/FIXAPI" -> "fxcm/JavaAPI"
"fxcm/FIXAPI" -> "fxcm/ForexConnectAPI"
"fxcm/FIXAPI" -> "fxcm/MarketData"
"fxcm/FIXAPI" -> "fxcm/RestAPI"
"MHaringa/insurancerating" -> "kasaai/explain-ml-pricing"
"MHaringa/insurancerating" -> "casact/FASLR"
"MHaringa/insurancerating" -> "genedan/actuarial-foss"
"MHaringa/insurancerating" -> "casact/raw_package"
"michaelewens/MD-A-10-K-data" -> "apodobytko/10K-MDA-Section"
"codesociety/friartuck" -> "yura505/robinbot"
"codesociety/friartuck" -> "roblav96/robinhood.tools"
"codesociety/friartuck" -> "westonplatter/fast_arrow"
"codesociety/friartuck" -> "mstrum/robinhood-python"
"chrisspen/django-sec" -> "altova/sec-edgar-tools"
"jeog/TDAmeritradeAPI" -> "jeog/TOSDataBridge"
"jeog/TDAmeritradeAPI" -> "timkpaine/tdameritrade"
"jeog/TDAmeritradeAPI" -> "areed1192/td-ameritrade-python-api"
"jeog/TDAmeritradeAPI" -> "jshingler/TOS-and-Thinkscript-Snippet-Collection"
"jeog/TDAmeritradeAPI" -> "alexgolec/tda-api"
"jeog/TDAmeritradeAPI" -> "lemieuxm/tdameritrade"
"jeog/TDAmeritradeAPI" -> "ysriram1/tdlink"
"jeog/TDAmeritradeAPI" -> "korygill/technical-analysis"
"jbn/ZigZag" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"jbn/ZigZag" -> "day0market/support_resistance"
"jbn/ZigZag" -> "GregoryMorse/trendln"
"jbn/ZigZag" -> "white07S/TradingPatternScanner"
"jbn/ZigZag" -> "neurotrader888/TrendLineAutomation"
"jbn/ZigZag" -> "dysonance/Trendy"
"jbn/ZigZag" -> "hootnot/oanda-api-v20"
"jbn/ZigZag" -> "bfolkens/py-market-profile"
"jbn/ZigZag" -> "happydasch/btplotting"
"jbn/ZigZag" -> "ChillarAnand/stocktrends"
"jbn/ZigZag" -> "neurotrader888/TechnicalAnalysisAutomation"
"jbn/ZigZag" -> "facioquo/stock-indicators-python"
"jbn/ZigZag" -> "JaktensTid/true-zigzag"
"jbn/ZigZag" -> "ednunezg/pytrendline"
"jbn/ZigZag" -> "FreddieWitherden/ta"
"alpacahq/pipeline-live" -> "alpacahq/pylivetrader"
"alpacahq/pipeline-live" -> "alpacahq/pymarketstore"
"alpacahq/pipeline-live" -> "shlomiku/zipline-trader"
"alpacahq/pipeline-live" -> "camelpac/alpaca-proxy-agent"
"alpacahq/pipeline-live" -> "marketneutral/alphatools"
"alpacahq/pipeline-live" -> "alpacahq/example-portfolio-manager"
"franciscogarate/pyliferisk" -> "lifelib-dev/lifelib"
"franciscogarate/pyliferisk" -> "spedygiorgio/lifecontingencies"
"franciscogarate/pyliferisk" -> "genedan/actuarial-foss"
"franciscogarate/pyliferisk" -> "JuliaActuary/LifeContingencies.jl"
"franciscogarate/pyliferisk" -> "casact/chainladder-python"
"franciscogarate/pyliferisk" -> "trollefson/elizur"
"franciscogarate/pyliferisk" -> "casact/FASLR"
"franciscogarate/pyliferisk" -> "actuarial-data-science/Tutorials"
"franciscogarate/pyliferisk" -> "validatehealth/actuary"
"franciscogarate/pyliferisk" -> "jason-ash/pyesg"
"franciscogarate/pyliferisk" -> "jbalm/ActuarialCashFlowModel"
"bsolomon1124/pyfinance" -> "joosthoeks/jhTAlib"
"bsolomon1124/pyfinance" -> "alpha-miner/alpha-mind"
"bsolomon1124/pyfinance" -> "abbass2/pyqstrat"
"bsolomon1124/pyfinance" -> "marketneutral/alphatools"
"bsolomon1124/pyfinance" -> "quantopian/empyrical"
"bsolomon1124/pyfinance" -> "rsvp/fecon235"
"s0up/robinhood-electron" -> "edwardlai3582/RobInDaHood"
"s0up/robinhood-electron" -> "bcwik9/robinhood-on-rails"
"s0up/robinhood-electron" -> "s0up/robinhood-api"
"terzim/StockScreener" -> "matt6frey/Python-Stock-Screener"
"luhao-worker/tf-lottery" -> "piggyone/chromosphere"
"joequant/bitquant" -> "joequant/algobroker"
"dppalomar/riskParityPortfolio" -> "convexfi/riskparity.py"
"dppalomar/riskParityPortfolio" -> "dppalomar/portfolioBacktest"
"skillachie/finsymbols" -> "ZachLiuGIS/stock_extractor"
"skillachie/finsymbols" -> "econdb/inquisitor"
"skillachie/finsymbols" -> "quantmind/ccy"
"StoicGilgamesh/LSTM-GAN-" -> "Atrin78/Attention-based-Time-Series-Generation"
"chicago-joe/InteractiveBrokers-PairsTrading-Algo" -> "aconstandinou/pairs-trading-equities"
"wzchen/stock_market_prediction" -> "jasti/Stock-Predictor"
"wzchen/stock_market_prediction" -> "FraPochetti/StocksProject"
"wzchen/stock_market_prediction" -> "dzitkowskik/StockPredictionRNN"
"wzchen/stock_market_prediction" -> "jgpavez/LSTM---Stock-prediction"
"wzchen/stock_market_prediction" -> "cgoldberg/ystockquote"
"wzchen/stock_market_prediction" -> "tencia/stocks_rnn"
"wzchen/stock_market_prediction" -> "kimber-chen/Tensorflow-for-stock-prediction"
"wzchen/stock_market_prediction" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"mynl/aggregate" -> "open-source-modelling/insurance_python"
"alpacahq/samplealgo01" -> "alpacahq/sp100algo"
"hadrianl/ibapi" -> "gofinance/ib"
"hadrianl/ibapi" -> "wboayue/ibapi"
"kasaai/pc-pricing-tutorial" -> "kasaai/simulationmachine"
"kasaai/pc-pricing-tutorial" -> "casact/imaginator"
"kasaai/pc-pricing-tutorial" -> "kasaai/insurance"
"kasaai/pc-pricing-tutorial" -> "kasaai/deeptriangle"
"voice32/stock_market_indicators" -> "arkochhar/Technical-Indicators"
"voice32/stock_market_indicators" -> "Crypto-toolbox/pandas-technical-indicators"
"voice32/stock_market_indicators" -> "RiccardoM/Forex-and-Stock-Python-Pattern-Recognizer"
"philipperemy/fractional-differentiation-time-series" -> "simaki/fracdiff"
"philipperemy/fractional-differentiation-time-series" -> "Jackal08/financial-data-structures"
"philipperemy/fractional-differentiation-time-series" -> "fracdiff/fracdiff"
"GireeshS22/upstox" -> "tushaar82/Upstox-Algo-Trading"
"RiccardoM/Forex-and-Stock-Python-Pattern-Recognizer" -> "PythonProgramming/Pattern-Recognition-for-Forex-Trading"
"RiccardoM/Forex-and-Stock-Python-Pattern-Recognizer" -> "CharlesLoo/stock-pattern-recorginition"
"mtompkins/openAlgo" -> "FinleyLi/MultiCharts-PowerLanguage"
"mtompkins/openAlgo" -> "softwarespartan/IB4m"
"JackJacquier/Heston-normal-and-rough" -> "sigurdroemer/rough_heston"
"Ronak-59/Stock-Prediction" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"polyaxon/mloperator" -> "polyaxon/polyaxon-quick-start"
"polyaxon/mloperator" -> "vents-io/vents"
"polyaxon/mloperator" -> "polyaxon/charts"
"polyaxon/mloperator" -> "polyaxon/hypertune"
"polyaxon/mloperator" -> "polyaxon/polyaxon-examples"
"polyaxon/mloperator" -> "polyaxon/sdks"
"polyaxon/mloperator" -> "polyaxon/cli"
"tg12/FAIG" -> "ig-python/trading-ig"
"tg12/FAIG" -> "gfiocco/node-ig-api"
"tg12/FAIG" -> "g-make-it/IG_Trading_Algo_Scripts_Python"
"tg12/FAIG" -> "poryee/AutoTrading"
"tg12/FAIG" -> "tg12/IG-Index-Scalping-Scraping-Bot"
"teatime77/xbrl-reader" -> "BuffettCode/edinet_xbrl"
"zerodha/kite-connect-python-example" -> "karthikramx/algorithmic-trading"
"zerodha/kite-connect-python-example" -> "yudhv/PyTrading"
"MiloMallo/Stock" -> "nmharmon8/StockMarketGAN"
"MiloMallo/Stock" -> "kah-ve/MarketGAN"
"MiloMallo/Stock" -> "timestocome/Test-stock-prediction-algorithms"
"MiloMallo/Stock" -> "deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-"
"MiloMallo/Stock" -> "dzitkowskik/StockPredictionRNN"
"MiloMallo/Stock" -> "borisbanushev/stockpredictionai"
"MiloMallo/Stock" -> "liangzp/Reinforcement-learning-in-portfolio-management-" ["e"=1]
"MiloMallo/Stock" -> "scorpionhiccup/StockPricePrediction"
"MiloMallo/Stock" -> "golsun/deep-RL-trading" ["e"=1]
"MiloMallo/Stock" -> "hungchun-lin/Stock-price-prediction-using-GAN"
"MiloMallo/Stock" -> "llSourcell/Reinforcement_Learning_for_Stock_Prediction" ["e"=1]
"MiloMallo/Stock" -> "kimber-chen/Tensorflow-for-stock-prediction"
"RomelTorres/av_example" -> "twopirllc/AlphaVantageAPI"
"LouisChen1992/Deep_Learning_in_Asset_Pricing" -> "Jianeng/Deep-Learning-in-Asset-Pricing"
"LouisChen1992/Deep_Learning_in_Asset_Pricing" -> "jasonzy121/Deep_Learning_Asset_Pricing"
"LouisChen1992/Deep_Learning_in_Asset_Pricing" -> "LouisChen1992/Deep_Learning_Asset_Pricing"
"LouisChen1992/Deep_Learning_in_Asset_Pricing" -> "yolsever/ML-in-equity-prediction"
"LouisChen1992/Deep_Learning_in_Asset_Pricing" -> "Feng-CityUHK/EquityCharacteristics"
"LouisChen1992/Deep_Learning_in_Asset_Pricing" -> "xiubooth/ML_Codes"
"LouisChen1992/Deep_Learning_in_Asset_Pricing" -> "mfrdixon/Deep_Fundamental_Factors"
"LouisChen1992/Deep_Learning_in_Asset_Pricing" -> "bkelly-lab/ipca"
"LouisChen1992/Deep_Learning_in_Asset_Pricing" -> "bkelly-lab/ReplicationCrisis"
"beinghorizontal/py-market-profile" -> "beinghorizontal/tpo_project"
"beinghorizontal/py-market-profile" -> "beinghorizontal/Support-Resistance"
"beinghorizontal/py-market-profile" -> "beinghorizontal/awesome-quant"
"beinghorizontal/py-market-profile" -> "beinghorizontal/tpo_btc"
"beinghorizontal/Support-Resistance" -> "beinghorizontal/awesome-quant"
"beinghorizontal/Support-Resistance" -> "beinghorizontal/py-market-profile"
"caiobran/mstables" -> "jackmoody11/stockscore"
"caiobran/mstables" -> "aaaccell/morningstar"
"caiobran/mstables" -> "asafravid/sss"
"clifton/docker-ib-gateway" -> "godelsmarket/IBHistoricalDataDownloader"
"alexprengere/currencyconverter" -> "MicroPyramid/forex-python"
"ip-tools/uspto-opendata-python" -> "ip-tools/patzilla"
"ip-tools/uspto-opendata-python" -> "daneads/pypatent"
"ip-tools/uspto-opendata-python" -> "ip-tools/python-epo-ops-client"
"ip-tools/uspto-opendata-python" -> "iamlemec/fastpat"
"ip-tools/uspto-opendata-python" -> "liuqiyuan/UPET-USPTO-Patent-Exploring-Tool"
"jackmoody11/stockscore" -> "lseffer/stock_screener"
"jackmoody11/stockscore" -> "caiobran/mstables"
"jackmoody11/stockscore" -> "jackmoody11/autodcf"
"ip-tools/python-epo-ops-client" -> "ip-tools/patzilla"
"ip-tools/python-epo-ops-client" -> "parkerhancock/patent_client"
"ip-tools/python-epo-ops-client" -> "ip-tools/uspto-opendata-python"
"ip-tools/python-epo-ops-client" -> "iamlemec/fastpat"
"ip-tools/python-epo-ops-client" -> "google/patents-public-data"
"ip-tools/python-epo-ops-client" -> "Patent2net/Patent2Net--Old-stuff"
"ip-tools/python-epo-ops-client" -> "USPTO/PatentPublicData"
"ip-tools/python-epo-ops-client" -> "daneads/pypatent"
"ip-tools/python-epo-ops-client" -> "wipo-analytics/wipo-analytics.github.io"
"ip-tools/python-epo-ops-client" -> "simonemainardi/load_patstat"
"mages/ChainLadder" -> "casact/FASLR"
"mages/ChainLadder" -> "casact/chainladder-python"
"mages/ChainLadder" -> "MHaringa/insurancerating"
"lfochamon/poliTeX" -> "turing-usp/Aprendizado-por-Reforco"
"rflugum/10K-MDA-Section" -> "michaelewens/MD-A-10-K-data"
"rflugum/10K-MDA-Section" -> "apodobytko/10K-MDA-Section"
"apodobytko/10K-MDA-Section" -> "michaelewens/MD-A-10-K-data"
"apodobytko/10K-MDA-Section" -> "michaelewens/Non-compete-Law-Changes"
"QuantConnect/IBAutomater" -> "QuantConnect/quantconnect-cli"
"QuantConnect/IBAutomater" -> "QuantConnect/Documentation"
"QuantConnect/IBAutomater" -> "QuantConnect/FXCM"
"kanghua309/strategy" -> "zipline-live/zipline" ["e"=1]
"sdabhi23/bsedata" -> "hemenkapadia/getbhavcopy"
"shikhirsingh/ETrade-API-Robo-Trading-Monkey-4-NodeJS" -> "kenleezle/ruby-etrade"
"fumitoh/modelx" -> "lifelib-dev/lifelib"
"fumitoh/modelx" -> "genedan/MIES"
"fumitoh/modelx" -> "acturtle/cashflower"
"fumitoh/modelx" -> "JuliaActuary/LifeContingencies.jl"
"atrybyme/Open-Interest-NSE-Live-Analysis" -> "HawkEyeCoding/nse-oi-analysis"
"atrybyme/Open-Interest-NSE-Live-Analysis" -> "anurag-roy/shoonya-option-chain"
"atrybyme/Open-Interest-NSE-Live-Analysis" -> "aadityatamrakar/option_chain_analysis"
"ExcViral/adaptive-forex-forecast" -> "rrguardo/market_predictor_cnn"
"ExcViral/adaptive-forex-forecast" -> "Financial-ML/Market-Analysis-2"
"westonplatter/fast_arrow" -> "westonplatter/chesterton"
"westonplatter/fast_arrow" -> "aamazie/Robinhood"
"westonplatter/fast_arrow" -> "codesociety/friartuck"
"imanolperez/market_simulator" -> "SigCGANs/Sig-Wasserstein-GANs"
"jackindavao/patent-data-mining" -> "poldham/lensr"
"gehtsoft/forex-connect" -> "fxcm/ForexConnectAPI"
"dppalomar/portfolioBacktest" -> "dppalomar/covFactorModel"
"dppalomar/portfolioBacktest" -> "dppalomar/highOrderPortfolios"
"dppalomar/portfolioBacktest" -> "alpha-miner/portfolio-optimizer"
"OmegaTrading/OmegaUI" -> "verybadsoldier/backtrader_plotting"
"OmegaTrading/OmegaUI" -> "backtradercn/backtrader_cn_api_example"
"OmegaTrading/OmegaUI" -> "Skinok/backtrader-pyqt-ui"
"OmegaTrading/OmegaUI" -> "backtrader/backtrader-docs"
"teddykoker/survivorship-free-spy" -> "teddykoker/blog"
"korygill/technical-analysis" -> "bingit2/TradingView-to-ThinkorSwim"
"korygill/technical-analysis" -> "sjjohns/ThinkOrSwimStudies"
"korygill/technical-analysis" -> "hwrdprkns/ThinkOrSwim"
"korygill/technical-analysis" -> "FrozenTundraTrader/sierrachart"
"korygill/technical-analysis" -> "RyanHendricks/Thinkorswim-Indicators"
"korygill/technical-analysis" -> "gc5150/sierrachart"
"korygill/technical-analysis" -> "yammypotato/Thinkorswim-Scripts"
"korygill/technical-analysis" -> "john5223/minas"
"korygill/technical-analysis" -> "FutTrader/footprint-system"
"jason887/Using-Deep-Learning-Neural-Networks-and-Candlestick-Chart-Representation-to-Predict-Stock-Market" -> "amit-agni/candlesticks-deeplearning"
"jason887/Using-Deep-Learning-Neural-Networks-and-Candlestick-Chart-Representation-to-Predict-Stock-Market" -> "aliisoli/candlesticks_study"
"ip-tools/patzilla" -> "ip-tools/uspto-opendata-python"
"ip-tools/patzilla" -> "ip-tools/python-epo-ops-client"
"ip-tools/patzilla" -> "daneads/pypatent"
"je-suis-tm/recursion-and-dynamic-programming" -> "je-suis-tm/search-and-sort"
"helmersl/patent_similarity_search" -> "ryanwhalen/patent_similarity_data"
"helmersl/patent_similarity_search" -> "AI-Growth-Lab/Patent_p2p_similarity_w2v"
"helmersl/patent_similarity_search" -> "jiehsheng/PatentBERT"
"anthonyng2/udemy-the-complete-machine-learning-course-with-python" -> "anthonyng2/FX-Trading-with-Python-and-Oanda"
"alpacahq/pymarketstore" -> "alpacahq/alpaca-erasure"
"alpacahq/pymarketstore" -> "alpacahq/example-portfolio-manager"
"kah-ve/MarketGAN" -> "nmharmon8/StockMarketGAN"
"kah-ve/MarketGAN" -> "jiewwantan/StarTrader" ["e"=1]
"kah-ve/MarketGAN" -> "MiloMallo/Stock"
"kah-ve/MarketGAN" -> "hungchun-lin/Stock-price-prediction-using-GAN"
"yhilpisch/mvportfolio" -> "yhilpisch/dnanlp"
"yhilpisch/mvportfolio" -> "yhilpisch/tpqps"
"yhilpisch/dnanlp" -> "yhilpisch/tpqps"
"yhilpisch/dnanlp" -> "yhilpisch/mvportfolio"
"yhilpisch/tpqps" -> "yhilpisch/dnanlp"
"alpacahq/alpaca-rn-mobile" -> "alpacahq/insomnia-workspace"
"alpacahq/alpaca-rn-mobile" -> "linux08/Dapp"
"SimFin/bd-extractor" -> "SimFin/web-api-examples"
"MicroPyramid/forex-rates-mobile-app" -> "MicroPyramid/django-email-gateway"
"MicroPyramid/forex-rates-mobile-app" -> "MicroPyramid/docker-box"
"MicroPyramid/forex-rates-mobile-app" -> "MicroPyramid/django-webpacker"
"MicroPyramid/forex-rates-mobile-app" -> "MicroPyramid/microurl"
"MicroPyramid/forex-rates-mobile-app" -> "MicroPyramid/django-simple-pagination"
"hudson-and-thames/presentations" -> "hudson-and-thames/research"
"hudson-and-thames/presentations" -> "Jackal08/financial-data-structures"
"portfolioplus/pystockdb" -> "portfolioplus/pystockfilter"
"polyaxon/polyaxon-examples" -> "polyaxon/charts"
"polyaxon/polyaxon-examples" -> "polyaxon/cli"
"polyaxon/polyaxon-examples" -> "polyaxon/polyaxon-quick-start"
"polyaxon/polyaxon-examples" -> "vents-io/vents"
"polyaxon/polyaxon-examples" -> "polyaxon/hypertune"
"polyaxon/polyaxon-examples" -> "polyaxon/sdks"
"polyaxon/polyaxon-examples" -> "polyaxon/mloperator"
"samchaaa/market_profile" -> "sivamgr/tpo_market_profile"
"ashishkumar30/ML-AI-Python-Codes" -> "ashishkumar30/Microservices"
"ashishkumar30/ML-AI-Python-Codes" -> "ashishkumar30/UpGrad-Python-assignments-2018"
"paduel/Python_para_Trading" -> "Python-para-Trading/Mini-Retos-PPT"
"paduel/Python_para_Trading" -> "Python-para-Trading/Webinars-Docs"
"tomgrek/rnn-robinhood" -> "2018kguo/RobinhoodBot"
"kyuni22/pybbg" -> "matthewgilbert/pdblp"
"kyuni22/pybbg" -> "alex314159/blpapiwrapper"
"kyuni22/pybbg" -> "alpha-xone/xbbg"
"kyuni22/pybbg" -> "691175002/BLPInterface"
"kyuni22/pybbg" -> "msitt/blpapi-python"
"kyuni22/pybbg" -> "bpsmith/pybbg"
"kyuni22/pybbg" -> "PaulMest/tia"
"cenkcorapci/forex-prediction" -> "rrguardo/market_predictor_cnn"
"calmitchell617/Springbok" -> "pbharrin/alpha-compiler"
"pengyuwang618/lottery" -> "Zhibihuanian/-LSTM"
"JuliaActuary/MortalityTables.jl" -> "JuliaActuary/LifeContingencies.jl"
"JuliaActuary/MortalityTables.jl" -> "JuliaActuary/Learn"
"polyaxon/hypertune" -> "vents-io/vents"
"polyaxon/hypertune" -> "polyaxon/polyaxon-quick-start"
"polyaxon/hypertune" -> "polyaxon/sdks"
"polyaxon/hypertune" -> "polyaxon/charts"
"polyaxon/hypertune" -> "polyaxon/polyaxon-examples"
"polyaxon/hypertune" -> "polyaxon/cli"
"polyaxon/hypertune" -> "polyaxon/mloperator"
"frankts/tradestation-web-tradingapp-sample" -> "willfavre4/algo_trading"
"ScottfreeLLC/TradeStation" -> "Jon-F-Wood/CrossOver-Trading-Strategy"
"ScottfreeLLC/TradeStation" -> "willbillionquant/easylanguage-tools"
"ScottfreeLLC/TradeStation" -> "frankts/tradestation-web-tradingapp-sample"
"ScottfreeLLC/TradeStation" -> "ht-tradestation/kbb-sqz-macd"
"ScottfreeLLC/TradeStation" -> "brucelinker/EasyLanguage"
"ventureit/vanna-volga_option_price" -> "oumarndiaye/Projet_QF_partie_2"
"rfbressan/py_ssvi" -> "am3p/python"
"oumarndiaye/Projet_QF_partie_2" -> "ventureit/vanna-volga_option_price"
"fjxmlzn/PacGAN" -> "fjxmlzn/GPUTaskScheduler"
"fjxmlzn/PacGAN" -> "akashgit/VEEGAN"
"willbillionquant/easylanguage-tools" -> "CCCzKen/easy2python"
"willbillionquant/easylanguage-tools" -> "activequant/easylanguage_scripts"
"Queeq/pydtc" -> "jason51553262/python-ws-dtc-client"
"Queeq/pydtc" -> "john-yan/SierraChartConnect"
"vrishank97/AlgoTrading" -> "SravB/Algorithmic-Trading"
"lvfrazao/IEXTools" -> "rob-blackbourn/iex_parser"
"amitadate/S-LSTM-GAN-MNIST" -> "jsikyoon/SequentialData-GAN"
"amitadate/S-LSTM-GAN-MNIST" -> "amitadate/gan-compression"
"harwee/IQOption-Api" -> "n1nj4z33/iqoptionapi"
"harwee/IQOption-Api" -> "n1nj4z33/iqoptionbot"
"albertsl/support-resistance_trading-bot" -> "nakulnayyar/SupResGenerator"
"tylerfloyd/TastyWorks" -> "thetatool/tastyworks-rs"
"arun-mansa/tradingbot" -> "AlanForester/IQOption-Bot-Trade-System"
"rrfaria/IQOPTION-ML-TRADER" -> "rrfaria/iqoption-bot"
"kumotrader/ichimoku-crypto" -> "kacperadach/ichimoku_screener"
"kumotrader/ichimoku-crypto" -> "harunzengin/ichimokuAlerter"
"Python-para-Trading/Webinars-Docs" -> "Python-para-Trading/Mini-Retos-PPT"
"mkjiau/MultiCharts_Dll" -> "handayu/MC-Fundament-Code"
"yolsever/ML-in-equity-prediction" -> "zeyuz35/Evaluation-of-Machine-Learning-in-Asset-Pricing"
"yolsever/ML-in-equity-prediction" -> "hrbzkm98/ml-research"
"zoome0215/predictBO" -> "tim1234ltp/forex-binary-option-prediction"
"kasaai/deeptriangle" -> "kasaai/pc-pricing-tutorial"
"polyaxon/cli" -> "polyaxon/charts"
"polyaxon/cli" -> "polyaxon/sdks"
"polyaxon/polyaxon-quick-start" -> "polyaxon/sdks"
"polyaxon/polyaxon-quick-start" -> "polyaxon/charts"
"polyaxon/polyaxon-quick-start" -> "vents-io/vents"
"polyaxon/polyaxon-quick-start" -> "polyaxon/hypertune"
"polyaxon/polyaxon-quick-start" -> "polyaxon/cli"
"polyaxon/charts" -> "polyaxon/polyaxon-examples"
"polyaxon/charts" -> "polyaxon/cli"
"polyaxon/charts" -> "polyaxon/polyaxon-quick-start"
"polyaxon/charts" -> "polyaxon/sdks"
"polyaxon/charts" -> "vents-io/vents"
"vents-io/vents" -> "polyaxon/hypertune"
"vents-io/vents" -> "polyaxon/polyaxon-quick-start"
"vents-io/vents" -> "polyaxon/sdks"
"vents-io/vents" -> "polyaxon/charts"
"vents-io/vents" -> "polyaxon/cli"
"vents-io/vents" -> "polyaxon/polyaxon-examples"
"schardtbc/iexcloudR" -> "TheEliteAnalyst/Riex"
"handayu/MC-Fundament-Code" -> "handayu/IB-TWS-Multicharts-Trading"
"BlackArbsCEO/synthetic_time_series" -> "BlackArbsCEO/Mixture_Models"
"filipemarques87/fx-charts" -> "gmoncarz/renko"
"nhaga/Awesome-Quant-Machine-Learning-Trading" -> "nhaga/financial-machine-learning"
"cuemacro/cufflinks" -> "cuemacro/FinancePy"
"PlamenStilyianov/python-cookbook" -> "PlamenStilyianov/PyCuda"
"jo-cho/advances_in_financial_machine_learning" -> "jo-cho/meta_labeling_simplified"
"brucelinker/EasyLanguage" -> "Jon-F-Wood/CrossOver-Trading-Strategy"
"ashishkumar30/UpGrad-Python-assignments-2018" -> "ashishkumar30/UpGrad-GUI-Project-2018"
"binance/binance-connector-python" -> "TA-Lib/ta-lib-python" ["e"=1]
"binance/binance-connector-python" -> "twopirllc/pandas-ta" ["e"=1]
"binance/binance-connector-python" -> "mementum/backtrader" ["e"=1]
"teenyicons/teenyicons" -> "SamPom100/UnusualVolumeDetector" ["e"=1]
"Z4nzu/hackingtool" -> "OpenBB-finance/OpenBB" ["e"=1]
"StockSharp/StockSharp" -> "QuantConnect/Lean"
"StockSharp/StockSharp" -> "quantopian/zipline"
"StockSharp/StockSharp" -> "je-suis-tm/quant-trading"
"StockSharp/StockSharp" -> "mementum/backtrader"
"StockSharp/StockSharp" -> "wilsonfreitas/awesome-quant"
"StockSharp/StockSharp" -> "kernc/backtesting.py"
"StockSharp/StockSharp" -> "gbeced/pyalgotrade"
"StockSharp/StockSharp" -> "EliteQuant/EliteQuant"
"StockSharp/StockSharp" -> "Superalgos/Superalgos" ["e"=1]
"StockSharp/StockSharp" -> "jesse-ai/jesse" ["e"=1]
"StockSharp/StockSharp" -> "ctubio/Krypto-trading-bot" ["e"=1]
"StockSharp/StockSharp" -> "ranaroussi/qtpylib"
"StockSharp/StockSharp" -> "polakowo/vectorbt"
"StockSharp/StockSharp" -> "michaelgrosner/tribeca" ["e"=1]
"StockSharp/StockSharp" -> "DaveSkender/Stock.Indicators" ["e"=1]
"mikinty/Trading-Interview-Questions" -> "PyPatel/Quant-Finance-Resources" ["e"=1]
"waditu/tushare" -> "quantopian/zipline" ["e"=1]
"waditu/tushare" -> "TA-Lib/ta-lib-python" ["e"=1]
"waditu/tushare" -> "mementum/backtrader" ["e"=1]
"QuantConnect/Lean" -> "StockSharp/StockSharp"
"QuantConnect/Lean" -> "mementum/backtrader"
"QuantConnect/Lean" -> "quantopian/zipline"
"QuantConnect/Lean" -> "wilsonfreitas/awesome-quant"
"QuantConnect/Lean" -> "gbeced/pyalgotrade"
"QuantConnect/Lean" -> "kernc/backtesting.py"
"QuantConnect/Lean" -> "TA-Lib/ta-lib-python"
"QuantConnect/Lean" -> "je-suis-tm/quant-trading"
"QuantConnect/Lean" -> "polakowo/vectorbt"
"QuantConnect/Lean" -> "quantopian/pyfolio"
"QuantConnect/Lean" -> "ranaroussi/quantstats"
"QuantConnect/Lean" -> "stefan-jansen/machine-learning-for-trading"
"QuantConnect/Lean" -> "mhallsmoore/qstrader"
"QuantConnect/Lean" -> "microsoft/qlib"
"QuantConnect/Lean" -> "hudson-and-thames/mlfinlab"
"pmorissette/ffn" -> "pmorissette/bt"
"pmorissette/ffn" -> "vollib/vollib"
"pmorissette/ffn" -> "enthought/pyql"
"pmorissette/ffn" -> "jsmidt/QuantPy"
"pmorissette/ffn" -> "alpha-miner/Finance-Python"
"pmorissette/ffn" -> "GriffinAustin/pynance"
"pmorissette/ffn" -> "domokane/FinancePy"
"pmorissette/ffn" -> "ynouri/pysabr"
"pmorissette/ffn" -> "romanmichaelpaolucci/Q-Fin"
"pmorissette/ffn" -> "federicomariamassari/financial-engineering"
"pmorissette/ffn" -> "quantsbin/Quantsbin"
"pmorissette/ffn" -> "dbrojas/optlib"
"pmorissette/ffn" -> "federicomariamassari/willowtree"
"pmorissette/ffn" -> "bbcho/finoptions-dev"
"pmorissette/ffn" -> "quantopian/empyrical"
"pydata/pandas-datareader" -> "quantopian/pyfolio"
"pydata/pandas-datareader" -> "quandl/quandl-python"
"pydata/pandas-datareader" -> "ranaroussi/yfinance"
"pydata/pandas-datareader" -> "RomelTorres/alpha_vantage"
"pydata/pandas-datareader" -> "matplotlib/mplfinance"
"pydata/pandas-datareader" -> "cuemacro/findatapy"
"pydata/pandas-datareader" -> "pmorissette/ffn"
"pydata/pandas-datareader" -> "quantopian/alphalens"
"pydata/pandas-datareader" -> "TA-Lib/ta-lib-python"
"pydata/pandas-datareader" -> "ranaroussi/quantstats"
"pydata/pandas-datareader" -> "alvarobartt/investpy"
"pydata/pandas-datareader" -> "yahoo-finance/yahoo-finance"
"pydata/pandas-datareader" -> "mortada/fredapi"
"pydata/pandas-datareader" -> "robertmartin8/PyPortfolioOpt"
"pydata/pandas-datareader" -> "twopirllc/pandas-ta"
"mhallsmoore/qsforex" -> "jonromero/forex_algotrading"
"mhallsmoore/qsforex" -> "mhallsmoore/qstrader"
"mhallsmoore/qsforex" -> "hootnot/oanda-api-v20"
"mhallsmoore/qsforex" -> "MicroPyramid/forex-python"
"mhallsmoore/qsforex" -> "ematvey/pybacktest"
"mhallsmoore/qsforex" -> "oanda/oandapy"
"mhallsmoore/qsforex" -> "cuemacro/finmarketpy"
"mhallsmoore/qsforex" -> "giuse88/duka"
"mhallsmoore/qsforex" -> "panpanpandas/ultrafinance"
"mhallsmoore/qsforex" -> "oanda/v20-python-samples"
"mhallsmoore/qsforex" -> "PythonProgramming/Pattern-Recognition-for-Forex-Trading"
"mhallsmoore/qsforex" -> "Emsu/prophet"
"mhallsmoore/qsforex" -> "ranaroussi/qtpylib"
"mhallsmoore/qsforex" -> "pmorissette/bt"
"mhallsmoore/qsforex" -> "gbeced/pyalgotrade"
"hugo2046/QuantsPlaybook" -> "quantopian/alphalens" ["e"=1]
"hugo2046/QuantsPlaybook" -> "paperswithbacktest/awesome-systematic-trading" ["e"=1]
"hugo2046/QuantsPlaybook" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"hugo2046/QuantsPlaybook" -> "microsoft/qlib" ["e"=1]
"purvasingh96/AI-for-Trading" -> "scumabo/AI-for-Trading"
"purvasingh96/AI-for-Trading" -> "michaelsyao/AI-for-Trading"
"purvasingh96/AI-for-Trading" -> "QuantML-Github/QuantML" ["e"=1]
"purvasingh96/AI-for-Trading" -> "purvasingh96/StockGram-Intelligent-Portfolio-Manager"
"purvasingh96/AI-for-Trading" -> "dkl0707/factor_backtest" ["e"=1]
"purvasingh96/AI-for-Trading" -> "chenditc/investment_data" ["e"=1]
"purvasingh96/AI-for-Trading" -> "daehkim/pair-trading"
"purvasingh96/AI-for-Trading" -> "kieranjwood/trading-momentum-transformer" ["e"=1]
"purvasingh96/AI-for-Trading" -> "JerBouma/AlgorithmicTrading"
"krishnaik06/Interview-Prepartion-Data-Science" -> "PacktPublishing/Hands-on-Python-for-Finance" ["e"=1]
"microsoft/qlib" -> "wilsonfreitas/awesome-quant"
"microsoft/qlib" -> "mementum/backtrader"
"microsoft/qlib" -> "AI4Finance-Foundation/FinRL"
"microsoft/qlib" -> "vnpy/vnpy" ["e"=1]
"microsoft/qlib" -> "quantopian/zipline"
"microsoft/qlib" -> "yutiansut/QUANTAXIS" ["e"=1]
"microsoft/qlib" -> "stefan-jansen/machine-learning-for-trading"
"microsoft/qlib" -> "ranaroussi/quantstats"
"microsoft/qlib" -> "akfamily/akshare" ["e"=1]
"microsoft/qlib" -> "TA-Lib/ta-lib-python"
"microsoft/qlib" -> "AI4Finance-Foundation/FinGPT"
"microsoft/qlib" -> "OpenBB-finance/OpenBB"
"microsoft/qlib" -> "UFund-Me/Qbot" ["e"=1]
"microsoft/qlib" -> "ricequant/rqalpha" ["e"=1]
"microsoft/qlib" -> "QuantConnect/Lean"
"Ckend/pythondict-quant" -> "jrothschild33/learn_backtrader" ["e"=1]
"Ckend/pythondict-quant" -> "Skinok/backtrader-pyqt-ui"
"Ckend/pythondict-quant" -> "QuantWorld2022/backtrader" ["e"=1]
"Ckend/pythondict-quant" -> "verybadsoldier/backtrader_plotting"
"Ckend/pythondict-quant" -> "happydasch/btplotting"
"Ckend/pythondict-quant" -> "neilsmurphy/backtrader_template"
"Ckend/pythondict-quant" -> "zwdnet/MyQuant" ["e"=1]
"Ckend/pythondict-quant" -> "FinHackCN/finhack" ["e"=1]
"Ckend/pythondict-quant" -> "rodrigo-brito/backtrader-binance-bot"
"Ckend/pythondict-quant" -> "ailabx/ailabx" ["e"=1]
"Ckend/pythondict-quant" -> "HuaRongSAO/talib-document" ["e"=1]
"Ckend/pythondict-quant" -> "mpquant/MyTT" ["e"=1]
"Ckend/pythondict-quant" -> "tkfy920/qstock" ["e"=1]
"Ckend/pythondict-quant" -> "hugo2046/QuantsPlaybook" ["e"=1]
"Ckend/pythondict-quant" -> "OmegaTrading/OmegaUI"
"polygon-io/client-python" -> "alpacahq/alpaca-py"
"polygon-io/client-python" -> "twelvedata/twelvedata-python"
"polygon-io/client-python" -> "Finnhub-Stock-API/finnhub-python"
"polygon-io/client-python" -> "alpacahq/alpaca-trade-api-python"
"polygon-io/client-python" -> "mcdallas/wallstreet"
"polygon-io/client-python" -> "alexgolec/tda-api"
"polygon-io/client-python" -> "pssolanki111/polygon"
"polygon-io/client-python" -> "ib-api-reloaded/ib_async"
"polygon-io/client-python" -> "alpacahq/alpaca-backtrader-api"
"polygon-io/client-python" -> "erdewit/ib_insync"
"polygon-io/client-python" -> "RomelTorres/alpha_vantage"
"polygon-io/client-python" -> "bpsmith/tia"
"polygon-io/client-python" -> "Nasdaq/data-link-python"
"polygon-io/client-python" -> "lit26/finvizfinance"
"polygon-io/client-python" -> "hongtaocai/googlefinance"
"AI4Finance-Foundation/FinRL-Trading" -> "AI4Finance-Foundation/FinRL" ["e"=1]
"AI4Finance-Foundation/FinRL-Trading" -> "tensortrade-org/tensortrade" ["e"=1]
"AI4Finance-Foundation/FinRL-Trading" -> "cbailes/awesome-deep-trading" ["e"=1]
"AI4Finance-Foundation/FinRL-Trading" -> "borisbanushev/stockpredictionai" ["e"=1]
"AI4Finance-Foundation/FinRL-Trading" -> "hudson-and-thames/mlfinlab" ["e"=1]
"AI4Finance-Foundation/FinRL-Trading" -> "letianzj/QuantResearch" ["e"=1]
"Superalgos/Superalgos" -> "StockSharp/StockSharp" ["e"=1]
"Superalgos/Superalgos" -> "je-suis-tm/quant-trading" ["e"=1]
"AminHP/gym-anytrading" -> "tensortrade-org/tensortrade" ["e"=1]
"AminHP/gym-anytrading" -> "AI4Finance-Foundation/FinRL" ["e"=1]
"AminHP/gym-anytrading" -> "cbailes/awesome-deep-trading" ["e"=1]
"akfamily/akshare" -> "mementum/backtrader" ["e"=1]
"akfamily/akshare" -> "microsoft/qlib" ["e"=1]
"mementum/backtrader" -> "quantopian/zipline"
"mementum/backtrader" -> "kernc/backtesting.py"
"mementum/backtrader" -> "TA-Lib/ta-lib-python"
"mementum/backtrader" -> "vnpy/vnpy" ["e"=1]
"mementum/backtrader" -> "gbeced/pyalgotrade"
"mementum/backtrader" -> "QuantConnect/Lean"
"mementum/backtrader" -> "microsoft/qlib"
"mementum/backtrader" -> "wilsonfreitas/awesome-quant"
"mementum/backtrader" -> "quantopian/pyfolio"
"mementum/backtrader" -> "polakowo/vectorbt"
"mementum/backtrader" -> "ranaroussi/quantstats"
"mementum/backtrader" -> "ricequant/rqalpha" ["e"=1]
"mementum/backtrader" -> "akfamily/akshare" ["e"=1]
"mementum/backtrader" -> "twopirllc/pandas-ta"
"mementum/backtrader" -> "yutiansut/QUANTAXIS" ["e"=1]
"matplotlib/mplfinance" -> "twopirllc/pandas-ta"
"matplotlib/mplfinance" -> "TA-Lib/ta-lib-python"
"matplotlib/mplfinance" -> "ranaroussi/quantstats"
"matplotlib/mplfinance" -> "kernc/backtesting.py"
"matplotlib/mplfinance" -> "bukosabino/ta"
"matplotlib/mplfinance" -> "highfestiva/finplot"
"matplotlib/mplfinance" -> "peerchemist/finta"
"matplotlib/mplfinance" -> "quantopian/pyfolio"
"matplotlib/mplfinance" -> "polakowo/vectorbt"
"matplotlib/mplfinance" -> "mementum/backtrader"
"matplotlib/mplfinance" -> "hudson-and-thames/mlfinlab"
"matplotlib/mplfinance" -> "dcajasn/Riskfolio-Lib"
"matplotlib/mplfinance" -> "ranaroussi/yfinance"
"matplotlib/mplfinance" -> "cuemacro/findatapy"
"matplotlib/mplfinance" -> "robertmartin8/PyPortfolioOpt"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "saeed349/Microservices-Based-Algorithmic-Trading-System-V-2.0"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "saeed349/Quant-Trading-Cloud-Infrastructure"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "ultra1971/algotrading_stack"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "AsyncAlgoTrading/aat"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "leosmigel/analyzingalpha"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "saeed349/Deep-Reinforcement-Learning-in-Trading" ["e"=1]
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "ScottfreeLLC/AlphaPy"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "kieran-mackle/AutoTrader"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "jo-cho/Technical_Analysis_and_Feature_Engineering"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "KVignesh122/AssetNewsSentimentAnalyzer"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "abbass2/pyqstrat"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "algobulls/pyalgostrategypool"
"saeed349/Microservices-Based-Algorithmic-Trading-System" -> "verybadsoldier/backtrader_plotting"
"AI4Finance-Foundation/FinRL" -> "AI4Finance-Foundation/FinRL-Trading" ["e"=1]
"AI4Finance-Foundation/FinRL" -> "microsoft/qlib"
"AI4Finance-Foundation/FinRL" -> "AI4Finance-Foundation/ElegantRL" ["e"=1]
"AI4Finance-Foundation/FinRL" -> "AI4Finance-Foundation/FinRL-Meta" ["e"=1]
"AI4Finance-Foundation/FinRL" -> "AI4Finance-Foundation/FinGPT"
"AI4Finance-Foundation/FinRL" -> "tensortrade-org/tensortrade"
"AI4Finance-Foundation/FinRL" -> "stefan-jansen/machine-learning-for-trading"
"AI4Finance-Foundation/FinRL" -> "firmai/financial-machine-learning"
"AI4Finance-Foundation/FinRL" -> "mementum/backtrader"
"AI4Finance-Foundation/FinRL" -> "wilsonfreitas/awesome-quant"
"AI4Finance-Foundation/FinRL" -> "ranaroussi/quantstats"
"AI4Finance-Foundation/FinRL" -> "huseinzol05/Stock-Prediction-Models"
"AI4Finance-Foundation/FinRL" -> "hudson-and-thames/mlfinlab"
"AI4Finance-Foundation/FinRL" -> "AminHP/gym-anytrading" ["e"=1]
"AI4Finance-Foundation/FinRL" -> "AI4Finance-Foundation/FinRL-Tutorials" ["e"=1]
"alexgolec/tda-api" -> "areed1192/td-ameritrade-python-api"
"alexgolec/tda-api" -> "timkpaine/tdameritrade"
"alexgolec/tda-api" -> "alexgolec/schwab-py"
"alexgolec/tda-api" -> "jeog/TDAmeritradeAPI"
"alexgolec/tda-api" -> "jeog/TOSDataBridge"
"alexgolec/tda-api" -> "tylerebowers/Schwabdev"
"alexgolec/tda-api" -> "hackingthemarkets/tdameritrade" ["e"=1]
"alexgolec/tda-api" -> "areed1192/td-ameritrade-api"
"alexgolec/tda-api" -> "alpacahq/alpaca-trade-api-python"
"alexgolec/tda-api" -> "areed1192/python-trading-robot"
"alexgolec/tda-api" -> "erdewit/ib_insync"
"alexgolec/tda-api" -> "michaelchu/optopsy"
"alexgolec/tda-api" -> "mcdallas/wallstreet"
"alexgolec/tda-api" -> "polygon-io/client-python"
"alexgolec/tda-api" -> "itsjafer/schwab-api"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "aadityatamrakar/option_chain_analysis"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "aeron7/nsepython"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "atrybyme/Open-Interest-NSE-Live-Analysis"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "pranjal-joshi/Screeni-py"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "jugaad-py/jugaad-data"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "swapniljariwala/nsepy"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "ranjanrak/optionchainstream"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "deshwalmahesh/NSE-Stock-Scanner"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "TechfaneTechnologies/QtsApp"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "pkjmesra/PKScreener"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "HawkEyeCoding/nse-oi-analysis"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "sreenivasdoosa/sdoosa-algo-trade-app"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "srikar-kodakandla/fully-automated-nifty-options-trading"
"VarunS2002/Python-NSE-Option-Chain-Analyzer" -> "vsjha18/nsetools"
"GregoryMorse/trendln" -> "day0market/support_resistance"
"GregoryMorse/trendln" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"GregoryMorse/trendln" -> "dysonance/Trendy"
"GregoryMorse/trendln" -> "stockalgo/stolgo"
"GregoryMorse/trendln" -> "alvarobartt/trendet"
"GregoryMorse/trendln" -> "mementum/bta-lib"
"GregoryMorse/trendln" -> "WestXu/support_resistance_line"
"GregoryMorse/trendln" -> "peerchemist/finta"
"GregoryMorse/trendln" -> "kylejusticemagnuson/pyti"
"GregoryMorse/trendln" -> "arkochhar/Technical-Indicators"
"GregoryMorse/trendln" -> "white07S/TradingPatternScanner"
"GregoryMorse/trendln" -> "Kismuz/btgym" ["e"=1]
"GregoryMorse/trendln" -> "ednunezg/pytrendline"
"GregoryMorse/trendln" -> "jbn/ZigZag"
"GregoryMorse/trendln" -> "constverum/Quantdom"
"kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App" -> "kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud"
"kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App" -> "kaushikjadhav01/ModSecurityCRS"
"kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App" -> "kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python"
"kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App" -> "kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN"
"mlpack/mlpack" -> "lballabio/QuantLib" ["e"=1]
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "nityansuman/warren"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "kaushikjadhav01/Real-Time-Object-Detection-API-using-TensorFlow"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "kaushikjadhav01/ModSecurityCRS"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "kaushikjadhav01/Movie-Recommendation-Chatbot"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "kaushikjadhav01/Online-Food-Ordering-Web-App"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "shirosaidev/stocksight"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" -> "venky14/Stock-Market-Analysis-and-Prediction"
"deepfence/ThreatMapper" -> "deepfence/PacketStreamer"
"deepfence/ThreatMapper" -> "deepfence/YaraHunter"
"deepfence/ThreatMapper" -> "deepfence/FlowMeter"
"deepfence/ThreatMapper" -> "deepfence/SecretScanner"
"deepfence/ThreatMapper" -> "deepfence/ebpfguard"
"deepfence/ThreatMapper" -> "kubescape/kubescape" ["e"=1]
"deepfence/ThreatMapper" -> "anchore/grype" ["e"=1]
"deepfence/ThreatMapper" -> "aquasecurity/cloudsploit" ["e"=1]
"deepfence/ThreatMapper" -> "bridgecrewio/checkov" ["e"=1]
"deepfence/ThreatMapper" -> "falcosecurity/falco" ["e"=1]
"deepfence/ThreatMapper" -> "aquasecurity/trivy" ["e"=1]
"deepfence/ThreatMapper" -> "prowler-cloud/prowler" ["e"=1]
"deepfence/ThreatMapper" -> "infobyte/faraday" ["e"=1]
"deepfence/ThreatMapper" -> "aquasecurity/kube-bench" ["e"=1]
"deepfence/ThreatMapper" -> "nccgroup/ScoutSuite" ["e"=1]
"deepfence/SecretScanner" -> "deepfence/YaraHunter"
"deepfence/SecretScanner" -> "deepfence/FlowMeter"
"deepfence/SecretScanner" -> "deepfence/PacketStreamer"
"deepfence/SecretScanner" -> "deepfence/ThreatMapper"
"deepfence/SecretScanner" -> "deepfence/ebpfguard"
"ritvikmath/Time-Series-Analysis" -> "bashtage/arch" ["e"=1]
"josephchenhk/qtrader" -> "Ckend/pythondict-quant" ["e"=1]
"josephchenhk/qtrader" -> "happydasch/btplotting" ["e"=1]
"josephchenhk/qtrader" -> "Skinok/backtrader-pyqt-ui" ["e"=1]
"josephchenhk/qtrader" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"andredumas/techan.js" -> "man-group/arctic" ["e"=1]
"andredumas/techan.js" -> "TulipCharts/tulipindicators" ["e"=1]
"mfrdixon/ML_Finance_Codes" -> "shashankvemuri/Finance"
"mfrdixon/ML_Finance_Codes" -> "chrisconlan/algorithmic-trading-with-python"
"mfrdixon/ML_Finance_Codes" -> "firmai/financial-machine-learning"
"mfrdixon/ML_Finance_Codes" -> "domokane/FinancePy"
"mfrdixon/ML_Finance_Codes" -> "letianzj/QuantResearch"
"mfrdixon/ML_Finance_Codes" -> "quant-science/sunday-quant-scientist"
"mfrdixon/ML_Finance_Codes" -> "dcajasn/Riskfolio-Lib"
"mfrdixon/ML_Finance_Codes" -> "MarcosCarreira/DermanPapers"
"mfrdixon/ML_Finance_Codes" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"mfrdixon/ML_Finance_Codes" -> "jpmorganchase/python-training"
"mfrdixon/ML_Finance_Codes" -> "goldmansachs/gs-quant"
"mfrdixon/ML_Finance_Codes" -> "georgezouq/awesome-ai-in-finance"
"mfrdixon/ML_Finance_Codes" -> "dedwards25/Python_Option_Pricing"
"mfrdixon/ML_Finance_Codes" -> "google/tf-quant-finance"
"mfrdixon/ML_Finance_Codes" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"emoen/Machine-Learning-for-Asset-Managers" -> "jjakimoto/finance_ml"
"emoen/Machine-Learning-for-Asset-Managers" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"emoen/Machine-Learning-for-Asset-Managers" -> "boyboi86/AFML"
"emoen/Machine-Learning-for-Asset-Managers" -> "JackBrady/Financial-Machine-Learning"
"emoen/Machine-Learning-for-Asset-Managers" -> "hudson-and-thames/mlfinlab"
"emoen/Machine-Learning-for-Asset-Managers" -> "Rachnog/Advanced-Deep-Trading"
"emoen/Machine-Learning-for-Asset-Managers" -> "ArturSepp/QuantInvestStrats"
"emoen/Machine-Learning-for-Asset-Managers" -> "quarkfin/qf-lib"
"emoen/Machine-Learning-for-Asset-Managers" -> "doda/advances-in-financial-ml-notes"
"emoen/Machine-Learning-for-Asset-Managers" -> "jankrepl/deepdow"
"emoen/Machine-Learning-for-Asset-Managers" -> "JerBouma/AlgorithmicTrading"
"emoen/Machine-Learning-for-Asset-Managers" -> "firmai/machine-learning-asset-management"
"emoen/Machine-Learning-for-Asset-Managers" -> "jmrichardson/tuneta"
"emoen/Machine-Learning-for-Asset-Managers" -> "fracdiff/fracdiff"
"emoen/Machine-Learning-for-Asset-Managers" -> "cvxgrp/cvxportfolio"
"FraPochetti/StocksProject" -> "jasti/Stock-Predictor"
"FraPochetti/StocksProject" -> "wzchen/stock_market_prediction"
"FraPochetti/StocksProject" -> "FraPochetti/SP-500IndexPythonForecast"
"FraPochetti/StocksProject" -> "DMTSource/daily-stock-forecast"
"FraPochetti/StocksProject" -> "jgpavez/LSTM---Stock-prediction"
"FraPochetti/StocksProject" -> "tencia/stocks_rnn"
"rsvp/fecon235" -> "MarcosCarreira/DermanPapers"
"rsvp/fecon235" -> "robcarver17/systematictradingexamples"
"rsvp/fecon235" -> "LongOnly/Quantitative-Notebooks"
"rsvp/fecon235" -> "robcarver17/pysystemtrade_examples"
"rsvp/fecon235" -> "dedwards25/Python_Option_Pricing"
"rsvp/fecon235" -> "Finance-Hub/FinanceHub"
"rsvp/fecon235" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"rsvp/fecon235" -> "MathSci/fecon236"
"rsvp/fecon235" -> "jasonstrimpel/volatility-trading"
"rsvp/fecon235" -> "domokane/FinancePy"
"rsvp/fecon235" -> "jsmidt/QuantPy"
"rsvp/fecon235" -> "QuantEcon/QuantEcon.py" ["e"=1]
"rsvp/fecon235" -> "enthought/pyql"
"rsvp/fecon235" -> "vollib/vollib"
"rsvp/fecon235" -> "pmorissette/ffn"
"wondertrader/wondertrader" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"wondertrader/wondertrader" -> "mementum/backtrader" ["e"=1]
"binance/binance-public-data" -> "TA-Lib/ta-lib-python" ["e"=1]
"binance/binance-public-data" -> "quantopian/alphalens" ["e"=1]
"hackingthemarkets/tradingview-alpaca-strategy-alert-webhook-heroku" -> "hackingthemarkets/tradingview-interactive-brokers" ["e"=1]
"hackingthemarkets/tradingview-alpaca-strategy-alert-webhook-heroku" -> "hackingthemarkets/interactive-brokers-demo" ["e"=1]
"alexmojaki/futurecoder" -> "Roshanmahes/Quant-Finance" ["e"=1]
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud"
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python"
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App"
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "kaushikjadhav01/ModSecurityCRS"
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "kaushikjadhav01/Movie-Recommendation-Chatbot"
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN"
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans"
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "kaushikjadhav01/Real-Time-Object-Detection-API-using-TensorFlow"
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System"
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis"
"kaushikjadhav01/Online-Food-Ordering-Web-App" -> "navjot789/online-food-ordering-system-in-php"
"tradytics/eiten" -> "tradytics/surpriver"
"tradytics/eiten" -> "dcajasn/Riskfolio-Lib"
"tradytics/eiten" -> "fmilthaler/FinQuant"
"tradytics/eiten" -> "hudson-and-thames/mlfinlab"
"tradytics/eiten" -> "letianzj/QuantResearch"
"tradytics/eiten" -> "ranaroussi/qtpylib"
"tradytics/eiten" -> "robertmartin8/PyPortfolioOpt"
"tradytics/eiten" -> "chrisconlan/algorithmic-trading-with-python"
"tradytics/eiten" -> "LastAncientOne/Stock_Analysis_For_Quant"
"tradytics/eiten" -> "je-suis-tm/quant-trading"
"tradytics/eiten" -> "cuemacro/finmarketpy"
"tradytics/eiten" -> "ranaroussi/quantstats"
"tradytics/eiten" -> "domokane/FinancePy"
"tradytics/eiten" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"tradytics/eiten" -> "jankrepl/deepdow"
"yhilpisch/py4fi" -> "yhilpisch/py4fi2nd"
"yhilpisch/py4fi" -> "yhilpisch/dawp"
"yhilpisch/py4fi" -> "yhilpisch/dx"
"yhilpisch/py4fi" -> "Hvass-Labs/FinanceOps"
"yhilpisch/py4fi" -> "PacktPublishing/Python-for-Finance-Cookbook"
"yhilpisch/py4fi" -> "jamesmawm/Mastering-Python-for-Finance-source-codes"
"yhilpisch/py4fi" -> "domokane/FinancePy"
"yhilpisch/py4fi" -> "quantopian/pyfolio"
"yhilpisch/py4fi" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"yhilpisch/py4fi" -> "quantopian/research_public"
"yhilpisch/py4fi" -> "cuemacro/findatapy"
"yhilpisch/py4fi" -> "quandl/quandl-python"
"yhilpisch/py4fi" -> "shashankvemuri/Finance"
"yhilpisch/py4fi" -> "pmorissette/ffn"
"yhilpisch/py4fi" -> "cuemacro/finmarketpy"
"areed1192/python-trading-robot" -> "areed1192/td-ameritrade-python-api"
"areed1192/python-trading-robot" -> "alexgolec/tda-api"
"areed1192/python-trading-robot" -> "areed1192/td-ameritrade-api"
"areed1192/python-trading-robot" -> "areed1192/interactive-broker-python-api"
"areed1192/python-trading-robot" -> "areed1192/sigma_coding_youtube"
"areed1192/python-trading-robot" -> "tudorelu/pyjuque" ["e"=1]
"areed1192/python-trading-robot" -> "areed1192/python-sec"
"areed1192/python-trading-robot" -> "hackingthemarkets/tradekit" ["e"=1]
"areed1192/python-trading-robot" -> "timkpaine/tdameritrade"
"areed1192/python-trading-robot" -> "arkochhar/Technical-Indicators"
"areed1192/python-trading-robot" -> "amor71/LiuAlgoTrader"
"areed1192/python-trading-robot" -> "PacktPublishing/Learn-Algorithmic-Trading"
"areed1192/python-trading-robot" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python"
"areed1192/python-trading-robot" -> "alpacahq/example-scalping"
"areed1192/python-trading-robot" -> "PacktPublishing/Python-for-Finance-Cookbook"
"cerlymarco/tsmoothie" -> "tr8dr/tseries-patterns" ["e"=1]
"smahesh29/Gender-and-Age-Detection" -> "kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" ["e"=1]
"firmai/data-science-career" -> "firmai/machine-learning-asset-management" ["e"=1]
"jasonstrimpel/volatility-trading" -> "michaelchu/optopsy"
"jasonstrimpel/volatility-trading" -> "vollib/vollib"
"jasonstrimpel/volatility-trading" -> "letianzj/QuantResearch"
"jasonstrimpel/volatility-trading" -> "domokane/FinancePy"
"jasonstrimpel/volatility-trading" -> "dedwards25/Python_Option_Pricing"
"jasonstrimpel/volatility-trading" -> "mcdallas/wallstreet"
"jasonstrimpel/volatility-trading" -> "PyPatel/Options-Trading-Strategies-in-Python"
"jasonstrimpel/volatility-trading" -> "enthought/pyql"
"jasonstrimpel/volatility-trading" -> "robcarver17/pysystemtrade"
"jasonstrimpel/volatility-trading" -> "cuemacro/finmarketpy"
"jasonstrimpel/volatility-trading" -> "dcajasn/Riskfolio-Lib"
"jasonstrimpel/volatility-trading" -> "pmorissette/ffn"
"jasonstrimpel/volatility-trading" -> "JerBouma/AlgorithmicTrading"
"jasonstrimpel/volatility-trading" -> "chrisconlan/algorithmic-trading-with-python"
"jasonstrimpel/volatility-trading" -> "quantsbin/Quantsbin"
"akfamily/aktools" -> "edtechre/pybroker" ["e"=1]
"akfamily/awesome-data" -> "edtechre/pybroker" ["e"=1]
"akfamily/awesome-data" -> "Skinok/backtrader-pyqt-ui" ["e"=1]
"JerBouma/FundamentalsQuantifier" -> "JerBouma/FinanceToolkit"
"JerBouma/FundamentalsQuantifier" -> "JerBouma/ThePassiveInvestor"
"JerBouma/FundamentalsQuantifier" -> "JerBouma/AlgorithmicTrading"
"JerBouma/FundamentalsQuantifier" -> "JerBouma/PersonalFinance"
"JerBouma/FundamentalsQuantifier" -> "cuemacro/findatapy"
"JerBouma/FundamentalsQuantifier" -> "boyac/pyOptionPricing"
"JerBouma/FundamentalsQuantifier" -> "astro30/valinvest"
"JerBouma/FundamentalsQuantifier" -> "alpacahq/pipeline-live"
"petercerno/good-morning" -> "VincentRaia/PyFinancialData"
"petercerno/good-morning" -> "caiobran/mstables"
"SamPom100/UnusualVolumeDetector" -> "tradytics/surpriver"
"SamPom100/UnusualVolumeDetector" -> "bitdefender/hvmi" ["e"=1]
"SamPom100/UnusualVolumeDetector" -> "SamPom100/OptionsAnalyzer"
"SamPom100/UnusualVolumeDetector" -> "teenyicons/teenyicons" ["e"=1]
"SamPom100/UnusualVolumeDetector" -> "brndnmtthws/thetagang"
"SamPom100/UnusualVolumeDetector" -> "stayawayinesctec/stayaway-app" ["e"=1]
"SamPom100/UnusualVolumeDetector" -> "facebookresearch/TransCoder" ["e"=1]
"SamPom100/UnusualVolumeDetector" -> "mariostoev/finviz"
"SamPom100/UnusualVolumeDetector" -> "kaito1410/AutoDD_Rev2"
"SamPom100/UnusualVolumeDetector" -> "Andrew-Reis-SMU-2022/Options_Based_Trading"
"SamPom100/UnusualVolumeDetector" -> "IBM/fhe-toolkit-linux" ["e"=1]
"SamPom100/UnusualVolumeDetector" -> "ckz8780/market-toolkit"
"SamPom100/UnusualVolumeDetector" -> "Ncohen10/StockAlgorithm"
"SamPom100/UnusualVolumeDetector" -> "alexgolec/tda-api"
"SamPom100/UnusualVolumeDetector" -> "LastAncientOne/Stock_Analysis_For_Quant"
"dbrojas/optlib" -> "romanmichaelpaolucci/Q-Fin"
"dbrojas/optlib" -> "GriffinAustin/pynance"
"dbrojas/optlib" -> "bbcho/finoptions-dev"
"dbrojas/optlib" -> "federicomariamassari/willowtree"
"dbrojas/optlib" -> "federicomariamassari/financial-engineering"
"dbrojas/optlib" -> "ynouri/pysabr"
"dbrojas/optlib" -> "quantsbin/Quantsbin"
"dbrojas/optlib" -> "vollib/vollib"
"dbrojas/optlib" -> "jsmidt/QuantPy"
"dbrojas/optlib" -> "enthought/pyql"
"dbrojas/optlib" -> "alpha-miner/Finance-Python"
"dbrojas/optlib" -> "domokane/FinancePy"
"dbrojas/optlib" -> "pmorissette/ffn"
"dbrojas/optlib" -> "dedwards25/Python_Option_Pricing"
"dbrojas/optlib" -> "google/tf-quant-finance"
"DjangoGirls/djangogirls" -> "MicroPyramid/django-blog-it" ["e"=1]
"DaveSkender/Stock.Indicators" -> "StockSharp/StockSharp" ["e"=1]
"PyPatel/Quant-Finance-Resources" -> "PyPatel/Machine-Learning-and-AI-in-Trading"
"PyPatel/Quant-Finance-Resources" -> "Aniruddha-Deb/quant-prep" ["e"=1]
"PyPatel/Quant-Finance-Resources" -> "LechGrzelak/QuantFinanceBook"
"PyPatel/Quant-Finance-Resources" -> "PyPatel/Options-Trading-Strategies-in-Python"
"PyPatel/Quant-Finance-Resources" -> "cybergeekgyan/Quant-Developers-Resources" ["e"=1]
"PyPatel/Quant-Finance-Resources" -> "mikinty/Trading-Interview-Questions" ["e"=1]
"PyPatel/Quant-Finance-Resources" -> "quantrocket-codeload/quant-finance-lectures"
"PyPatel/Quant-Finance-Resources" -> "PythonCharmers/QuantFinance"
"PyPatel/Quant-Finance-Resources" -> "LongOnly/Quantitative-Notebooks"
"PyPatel/Quant-Finance-Resources" -> "letianzj/QuantResearch"
"PyPatel/Quant-Finance-Resources" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"PyPatel/Quant-Finance-Resources" -> "zslucky/algorithmic_trading_book"
"PyPatel/Quant-Finance-Resources" -> "domokane/FinancePy"
"PyPatel/Quant-Finance-Resources" -> "cbailes/awesome-deep-trading"
"PyPatel/Quant-Finance-Resources" -> "jsmidt/QuantPy"
"JerBouma/ThePassiveInvestor" -> "JerBouma/FinanceToolkit"
"JerBouma/ThePassiveInvestor" -> "JerBouma/FundamentalsQuantifier"
"JerBouma/ThePassiveInvestor" -> "JerBouma/PersonalFinance"
"JerBouma/ThePassiveInvestor" -> "JerBouma/FinanceDatabase"
"JerBouma/ThePassiveInvestor" -> "JerBouma/AlgorithmicTrading"
"JerBouma/ThePassiveInvestor" -> "fmilthaler/FinQuant"
"JerBouma/ThePassiveInvestor" -> "LastAncientOne/Stock_Analysis_For_Quant"
"JerBouma/ThePassiveInvestor" -> "VincentTatan/ValueInvesting"
"JerBouma/ThePassiveInvestor" -> "domokane/FinancePy"
"JerBouma/ThePassiveInvestor" -> "Hvass-Labs/FinanceOps"
"JerBouma/ThePassiveInvestor" -> "cuemacro/findatapy"
"JerBouma/ThePassiveInvestor" -> "lit26/finvizfinance"
"JerBouma/ThePassiveInvestor" -> "mcdallas/wallstreet"
"JerBouma/ThePassiveInvestor" -> "jankrepl/deepdow"
"JerBouma/ThePassiveInvestor" -> "jasonstrimpel/volatility-trading"
"dcajasn/Riskfolio-Lib" -> "robertmartin8/PyPortfolioOpt"
"dcajasn/Riskfolio-Lib" -> "ranaroussi/quantstats"
"dcajasn/Riskfolio-Lib" -> "hudson-and-thames/mlfinlab"
"dcajasn/Riskfolio-Lib" -> "domokane/FinancePy"
"dcajasn/Riskfolio-Lib" -> "fmilthaler/FinQuant"
"dcajasn/Riskfolio-Lib" -> "skfolio/skfolio"
"dcajasn/Riskfolio-Lib" -> "letianzj/QuantResearch"
"dcajasn/Riskfolio-Lib" -> "cvxgrp/cvxportfolio"
"dcajasn/Riskfolio-Lib" -> "pmorissette/ffn"
"dcajasn/Riskfolio-Lib" -> "quantopian/pyfolio"
"dcajasn/Riskfolio-Lib" -> "google/tf-quant-finance"
"dcajasn/Riskfolio-Lib" -> "JerBouma/FinanceToolkit"
"dcajasn/Riskfolio-Lib" -> "jankrepl/deepdow"
"dcajasn/Riskfolio-Lib" -> "santoshlite/EigenLedger"
"dcajasn/Riskfolio-Lib" -> "robcarver17/pysystemtrade"
"boyboi86/AFML" -> "doda/advances-in-financial-ml-notes"
"boyboi86/AFML" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"boyboi86/AFML" -> "jjakimoto/finance_ml"
"boyboi86/AFML" -> "emoen/Machine-Learning-for-Asset-Managers"
"boyboi86/AFML" -> "fernandodelacalle/adv-financial-ml-marcos-exercises"
"boyboi86/AFML" -> "JackBrady/Financial-Machine-Learning"
"boyboi86/AFML" -> "ki33elev/Adv_Fin_ML"
"boyboi86/AFML" -> "Rachnog/Advanced-Deep-Trading"
"boyboi86/AFML" -> "JerBouma/AlgorithmicTrading"
"boyboi86/AFML" -> "KidQuant/Pairs-Trading-With-Python"
"boyboi86/AFML" -> "hudson-and-thames/mlfinlab"
"boyboi86/AFML" -> "LechGrzelak/QuantFinanceBook"
"boyboi86/AFML" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"boyboi86/AFML" -> "fedecaccia/avellaneda-stoikov" ["e"=1]
"boyboi86/AFML" -> "letianzj/QuantResearch"
"aapatre/Automatic-Udemy-Course-Enroller-GET-PAID-UDEMY-COURSES-for-FREE" -> "brndnmtthws/thetagang" ["e"=1]
"kotartemiy/newscatcher" -> "hudson-and-thames/mlfinlab" ["e"=1]
"kotartemiy/newscatcher" -> "alexgolec/tda-api" ["e"=1]
"kotartemiy/newscatcher" -> "cantaro86/Financial-Models-Numerical-Methods" ["e"=1]
"kotartemiy/newscatcher" -> "firmai/machine-learning-asset-management" ["e"=1]
"bashtage/arch" -> "bashtage/linearmodels" ["e"=1]
"bashtage/arch" -> "RJT1990/pyflux" ["e"=1]
"bashtage/arch" -> "pmorissette/ffn"
"bashtage/arch" -> "quantopian/empyrical"
"bashtage/arch" -> "jasonstrimpel/volatility-trading"
"bashtage/arch" -> "alkaline-ml/pmdarima" ["e"=1]
"bashtage/arch" -> "jankrepl/deepdow"
"bashtage/arch" -> "dcajasn/Riskfolio-Lib"
"bashtage/arch" -> "hudson-and-thames/mlfinlab"
"bashtage/arch" -> "quantopian/pyfolio"
"bashtage/arch" -> "cvxgrp/cvxportfolio"
"bashtage/arch" -> "enthought/pyql"
"bashtage/arch" -> "pmorissette/bt"
"bashtage/arch" -> "quantopian/alphalens"
"bashtage/arch" -> "cuemacro/finmarketpy"
"faizancodes/Automated-Fundamental-Analysis" -> "hjones20/fundamental-analysis"
"faizancodes/Automated-Fundamental-Analysis" -> "marcosan93/Stock-Performance-Predictor-2.0"
"faizancodes/Automated-Fundamental-Analysis" -> "Skumarr53/Stock-Fundamental-data-scraping-and-analysis"
"ebradyjobory/finance.js" -> "lequant40/portfolio_allocation_js"
"ebradyjobory/finance.js" -> "kgkars/tvm-financejs"
"ebradyjobory/finance.js" -> "cinar/indicatorts" ["e"=1]
"ebradyjobory/finance.js" -> "oussamahamdaoui/forgJs" ["e"=1]
"ebradyjobory/finance.js" -> "pilwon/node-yahoo-finance"
"ebradyjobory/finance.js" -> "TarekRaafat/autoComplete.js" ["e"=1]
"facebookresearch/TransCoder" -> "SamPom100/UnusualVolumeDetector" ["e"=1]
"wondertrader/wtpy" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"gretelai/gretel-synthetics" -> "fjxmlzn/DoppelGANger" ["e"=1]
"chrisconlan/algorithmic-trading-with-python" -> "shashankvemuri/Finance"
"chrisconlan/algorithmic-trading-with-python" -> "letianzj/QuantResearch"
"chrisconlan/algorithmic-trading-with-python" -> "je-suis-tm/quant-trading"
"chrisconlan/algorithmic-trading-with-python" -> "domokane/FinancePy"
"chrisconlan/algorithmic-trading-with-python" -> "mfrdixon/ML_Finance_Codes"
"chrisconlan/algorithmic-trading-with-python" -> "jasonstrimpel/volatility-trading"
"chrisconlan/algorithmic-trading-with-python" -> "ranaroussi/quantstats"
"chrisconlan/algorithmic-trading-with-python" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"chrisconlan/algorithmic-trading-with-python" -> "dcajasn/Riskfolio-Lib"
"chrisconlan/algorithmic-trading-with-python" -> "PacktPublishing/Learn-Algorithmic-Trading"
"chrisconlan/algorithmic-trading-with-python" -> "JerBouma/FinanceToolkit"
"chrisconlan/algorithmic-trading-with-python" -> "hudson-and-thames/mlfinlab"
"chrisconlan/algorithmic-trading-with-python" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"chrisconlan/algorithmic-trading-with-python" -> "ranaroussi/qtpylib"
"chrisconlan/algorithmic-trading-with-python" -> "fmilthaler/FinQuant"
"areed1192/td-ameritrade-python-api" -> "alexgolec/tda-api"
"areed1192/td-ameritrade-python-api" -> "timkpaine/tdameritrade"
"areed1192/td-ameritrade-python-api" -> "areed1192/td-ameritrade-api"
"areed1192/td-ameritrade-python-api" -> "areed1192/python-trading-robot"
"areed1192/td-ameritrade-python-api" -> "jeog/TDAmeritradeAPI"
"areed1192/td-ameritrade-python-api" -> "alexgolec/schwab-py"
"areed1192/td-ameritrade-python-api" -> "jeog/TOSDataBridge"
"areed1192/td-ameritrade-python-api" -> "areed1192/sigma_coding_youtube"
"areed1192/td-ameritrade-python-api" -> "tylerebowers/Schwabdev"
"areed1192/td-ameritrade-python-api" -> "areed1192/tradestation-python-api"
"areed1192/td-ameritrade-python-api" -> "areed1192/interactive-broker-python-api"
"areed1192/td-ameritrade-python-api" -> "TreyThomas93/python-trading-bot-with-thinkorswim"
"areed1192/td-ameritrade-python-api" -> "alpacahq/alpaca-trade-api-python"
"areed1192/td-ameritrade-python-api" -> "itsjafer/schwab-api"
"areed1192/td-ameritrade-python-api" -> "tedchou12/webull"
"0xrushi/tradingview-scraper" -> "Dave-Vallance/tv2bt" ["e"=1]
"DMTSource/daily-stock-forecast" -> "ebidel/polymer-gmail" ["e"=1]
"DMTSource/daily-stock-forecast" -> "FraPochetti/StocksProject"
"DMTSource/daily-stock-forecast" -> "jasti/Stock-Predictor"
"d-e-s-o/apca" -> "d-e-s-o/apcacli"
"d-e-s-o/apca" -> "d-e-s-o/polyio"
"d-e-s-o/apca" -> "marpaia/alpaca-trade-api-cpp"
"letianzj/QuantResearch" -> "dcajasn/Riskfolio-Lib"
"letianzj/QuantResearch" -> "domokane/FinancePy"
"letianzj/QuantResearch" -> "ranaroussi/quantstats"
"letianzj/QuantResearch" -> "je-suis-tm/quant-trading"
"letianzj/QuantResearch" -> "LongOnly/Quantitative-Notebooks"
"letianzj/QuantResearch" -> "jasonstrimpel/volatility-trading"
"letianzj/QuantResearch" -> "JerBouma/AlgorithmicTrading"
"letianzj/QuantResearch" -> "hudson-and-thames/mlfinlab"
"letianzj/QuantResearch" -> "letianzj/quanttrader"
"letianzj/QuantResearch" -> "shashankvemuri/Finance"
"letianzj/QuantResearch" -> "chrisconlan/algorithmic-trading-with-python"
"letianzj/QuantResearch" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"letianzj/QuantResearch" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"letianzj/QuantResearch" -> "EliteQuant/EliteQuant"
"letianzj/QuantResearch" -> "paperswithbacktest/awesome-systematic-trading"
"letianzj/quanttrader" -> "letianzj/QuantResearch"
"letianzj/quanttrader" -> "rolling-panda-san/notebooks"
"letianzj/quanttrader" -> "ivopetiz/algotrading"
"letianzj/quanttrader" -> "JerBouma/AlgorithmicTrading"
"letianzj/quanttrader" -> "amor71/LiuAlgoTrader"
"letianzj/quanttrader" -> "jrmeier/fast-trade"
"letianzj/quanttrader" -> "LechGrzelak/QuantFinanceBook"
"letianzj/quanttrader" -> "quarkfin/qf-lib"
"letianzj/quanttrader" -> "AsyncAlgoTrading/aat"
"letianzj/quanttrader" -> "Finance-Hub/FinanceHub"
"letianzj/quanttrader" -> "coding-kitties/investing-algorithm-framework"
"letianzj/quanttrader" -> "jasonstrimpel/volatility-trading"
"letianzj/quanttrader" -> "michaelchu/optopsy"
"letianzj/quanttrader" -> "enzoampil/fastquant"
"letianzj/quanttrader" -> "kieran-mackle/AutoTrader"
"ProsusAI/finBERT" -> "yya518/FinBERT" ["e"=1]
"ProsusAI/finBERT" -> "valuesimplex/FinBERT" ["e"=1]
"ProsusAI/finBERT" -> "psnonis/FinBERT" ["e"=1]
"ProsusAI/finBERT" -> "icoxfog417/awesome-financial-nlp" ["e"=1]
"ProsusAI/finBERT" -> "fulifeng/Temporal_Relational_Stock_Ranking" ["e"=1]
"ProsusAI/finBERT" -> "hudson-and-thames/mlfinlab"
"ProsusAI/finBERT" -> "AI4Finance-Foundation/FinNLP"
"ProsusAI/finBERT" -> "yumoxu/stocknet-dataset" ["e"=1]
"ProsusAI/finBERT" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"ProsusAI/finBERT" -> "dcajasn/Riskfolio-Lib"
"ProsusAI/finBERT" -> "firmai/financial-machine-learning"
"ProsusAI/finBERT" -> "jankrepl/deepdow"
"ProsusAI/finBERT" -> "yumoxu/stocknet-code" ["e"=1]
"ProsusAI/finBERT" -> "google/tf-quant-finance"
"ProsusAI/finBERT" -> "AI4Finance-Foundation/FinGPT"
"ryanlstevens/google_patent_scraper" -> "wenyalintw/Google-Patents-Scraper"
"ryanlstevens/google_patent_scraper" -> "daneads/pypatent"
"ryanlstevens/google_patent_scraper" -> "Weifanwong/google_patent_spider"
"pmorissette/bt" -> "pmorissette/ffn"
"pmorissette/bt" -> "cuemacro/finmarketpy"
"pmorissette/bt" -> "mhallsmoore/qstrader"
"pmorissette/bt" -> "robcarver17/pysystemtrade"
"pmorissette/bt" -> "gbeced/pyalgotrade"
"pmorissette/bt" -> "kernc/backtesting.py"
"pmorissette/bt" -> "ematvey/pybacktest"
"pmorissette/bt" -> "ranaroussi/quantstats"
"pmorissette/bt" -> "quantopian/alphalens"
"pmorissette/bt" -> "quantopian/pyfolio"
"pmorissette/bt" -> "mementum/backtrader"
"pmorissette/bt" -> "ranaroussi/qtpylib"
"pmorissette/bt" -> "polakowo/vectorbt"
"pmorissette/bt" -> "quantopian/empyrical"
"pmorissette/bt" -> "enzoampil/fastquant"
"santosjorge/cufflinks" -> "quantopian/pyfolio" ["e"=1]
"santosjorge/cufflinks" -> "pydata/pandas-datareader" ["e"=1]
"kotartemiy/pygooglenews" -> "hudson-and-thames/mlfinlab" ["e"=1]
"ig-python/trading-ig" -> "tg12/FAIG"
"ig-python/trading-ig" -> "Lightstreamer/Lightstreamer-example-StockList-client-python"
"ig-python/trading-ig" -> "g-make-it/IG_Trading_Algo_Scripts_Python"
"ig-python/trading-ig" -> "hootnot/oanda-api-v20"
"ig-python/trading-ig" -> "lewisbarber/ig-markets-rest-api-python-library"
"ig-python/trading-ig" -> "Dave-Vallance/bt-ig-store"
"ig-python/trading-ig" -> "fxcm/RestAPI"
"ig-python/trading-ig" -> "oanda/v20-python"
"ig-python/trading-ig" -> "maroxe/igtrade"
"ig-python/trading-ig" -> "ig-python/ig-markets-rest-api-python-library"
"ig-python/trading-ig" -> "yhilpisch/tpqoa"
"vicaws/arbitragerepair" -> "vicaws/neuralSDE-marketmodel"
"bpsmith/tia" -> "matthewgilbert/pdblp"
"bpsmith/tia" -> "alex314159/blpapiwrapper"
"bpsmith/tia" -> "quantmind/ccy"
"bpsmith/tia" -> "econdb/inquisitor"
"bpsmith/tia" -> "ematvey/pybacktest"
"bpsmith/tia" -> "ZachLiuGIS/stock_extractor"
"bpsmith/tia" -> "skillachie/finsymbols"
"bpsmith/tia" -> "kyuni22/pybbg"
"bpsmith/tia" -> "msitt/blpapi-python"
"bpsmith/tia" -> "vollib/vollib"
"bpsmith/tia" -> "femtotrader/pandas_talib"
"bpsmith/tia" -> "alpha-miner/Finance-Python"
"bpsmith/tia" -> "bpsmith/pybbg"
"bpsmith/tia" -> "enthought/pyql"
"bpsmith/tia" -> "johnbywater/quantdsl"
"greedo/python-xbrl" -> "lukerosiak/pysec"
"greedo/python-xbrl" -> "tooksoi/ScraXBRL"
"greedo/python-xbrl" -> "Arelle/Arelle"
"greedo/python-xbrl" -> "BuffettCode/edinet_xbrl"
"greedo/python-xbrl" -> "andrewkittredge/financial_fundamentals"
"greedo/python-xbrl" -> "manusimidt/py-xbrl"
"greedo/python-xbrl" -> "altova/sec-xbrl"
"greedo/python-xbrl" -> "bergant/XBRLFiles"
"greedo/python-xbrl" -> "altova/SECDB"
"greedo/python-xbrl" -> "joeyism/py-edgar"
"altova/sec-xbrl" -> "lukerosiak/pysec"
"altova/sec-xbrl" -> "altova/SECDB"
"altova/sec-xbrl" -> "andrewkittredge/financial_fundamentals"
"altova/sec-xbrl" -> "tooksoi/ScraXBRL"
"hackobi/AI-Scalpel-Trading-Bot" -> "s-brez/trading-server" ["e"=1]
"domokane/FinancePy" -> "enthought/pyql"
"domokane/FinancePy" -> "jsmidt/QuantPy"
"domokane/FinancePy" -> "pmorissette/ffn"
"domokane/FinancePy" -> "vollib/vollib"
"domokane/FinancePy" -> "quantsbin/Quantsbin"
"domokane/FinancePy" -> "dbrojas/optlib"
"domokane/FinancePy" -> "ynouri/pysabr"
"domokane/FinancePy" -> "GriffinAustin/pynance"
"domokane/FinancePy" -> "alpha-miner/Finance-Python"
"domokane/FinancePy" -> "federicomariamassari/financial-engineering"
"domokane/FinancePy" -> "google/tf-quant-finance"
"domokane/FinancePy" -> "romanmichaelpaolucci/Q-Fin"
"domokane/FinancePy" -> "federicomariamassari/willowtree"
"domokane/FinancePy" -> "bbcho/finoptions-dev"
"domokane/FinancePy" -> "dcajasn/Riskfolio-Lib"
"yql/yql-tables" -> "gurch101/StockScraper"
"yql/yql-tables" -> "derek/node-yql"
"fonnesbeck/scipy2014_tutorial" -> "twiecki/Bayesian-Modelling-in-Python" ["e"=1]
"blampe/IbPy" -> "jamesmawm/High-Frequency-Trading-Model-with-IB"
"blampe/IbPy" -> "erdewit/ib_insync"
"blampe/IbPy" -> "InteractiveBrokers/tws-api-public"
"blampe/IbPy" -> "ib-controller/ib-controller"
"blampe/IbPy" -> "ranaroussi/ezibpy"
"blampe/IbPy" -> "gbeced/pyalgotrade"
"blampe/IbPy" -> "Komnomnomnom/swigibpy"
"blampe/IbPy" -> "mhallsmoore/qstrader"
"blampe/IbPy" -> "ranaroussi/qtpylib"
"blampe/IbPy" -> "IbcAlpha/IBC"
"blampe/IbPy" -> "robcarver17/pysystemtrade"
"blampe/IbPy" -> "anthonyng2/ib"
"blampe/IbPy" -> "jamesmawm/IB-Trading-Models-And-Backtester"
"blampe/IbPy" -> "pmorissette/bt"
"blampe/IbPy" -> "cuemacro/finmarketpy"
"robswc/tradingview-webhooks-bot" -> "hackingthemarkets/tradingview-interactive-brokers" ["e"=1]
"iqoptionapi/iqoptionapi" -> "Lu-Yi-Hsun/iqoptionapi"
"iqoptionapi/iqoptionapi" -> "ItamarRocha/binary-bot"
"iqoptionapi/iqoptionapi" -> "n1nj4z33/iqoptionapi"
"iqoptionapi/iqoptionapi" -> "MongkonEiadon/IqOption.Net"
"iqoptionapi/iqoptionapi" -> "CarlosGatti/bot-python-iq-option"
"iqoptionapi/iqoptionapi" -> "jeffex/bot-sinais-2.0"
"iqoptionapi/iqoptionapi" -> "lukefeix/Rob-de-MHI-para-IQoption-Aulas-Completas"
"iqoptionapi/iqoptionapi" -> "Larrycoin/iqoption-bot"
"iqoptionapi/iqoptionapi" -> "cleitonleonel/pyquotex"
"iqoptionapi/iqoptionapi" -> "dsinmsdj/iqoptionapi"
"iqoptionapi/iqoptionapi" -> "kodando-com-Faria/iqoption-robot"
"iqoptionapi/iqoptionapi" -> "ejtraderLabs/ejtraderIQ"
"iqoptionapi/iqoptionapi" -> "metheuspsc/Iq_Option_Bots"
"QuantFans/quantdigger" -> "gbeced/pyalgotrade" ["e"=1]
"ckz8780/market-toolkit" -> "tradytics/surpriver"
"ckz8780/market-toolkit" -> "mr-karan/awesome-investing"
"ckz8780/market-toolkit" -> "botcrypto-io/awesome-crypto-trading-bots" ["e"=1]
"ckz8780/market-toolkit" -> "chrisconlan/algorithmic-trading-with-python"
"ckz8780/market-toolkit" -> "JerBouma/FinanceToolkit"
"ckz8780/market-toolkit" -> "shirosaidev/stocksight"
"ckz8780/market-toolkit" -> "mariostoev/finviz"
"ckz8780/market-toolkit" -> "JerBouma/FinanceDatabase"
"ckz8780/market-toolkit" -> "LastAncientOne/Stock_Analysis_For_Quant"
"ckz8780/market-toolkit" -> "tradytics/eiten"
"ckz8780/market-toolkit" -> "fmilthaler/FinQuant"
"ckz8780/market-toolkit" -> "wilsonfreitas/awesome-quant"
"ckz8780/market-toolkit" -> "hudson-and-thames/mlfinlab"
"ckz8780/market-toolkit" -> "je-suis-tm/quant-trading"
"ckz8780/market-toolkit" -> "brndnmtthws/thetagang"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "stefan-jansen/machine-learning-for-trading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "hudson-and-thames/mlfinlab"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "ranaroussi/quantstats"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "mfrdixon/ML_Finance_Codes"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "stefan-jansen/zipline-reloaded"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "tatsath/fin-ml"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "PacktPublishing/Learn-Algorithmic-Trading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "quantopian/alphalens"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "yhilpisch/py4at"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "twopirllc/pandas-ta"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" -> "dcajasn/Riskfolio-Lib"
"vijaythapa333/web-design-course-restaurant" -> "vijaythapa333/food-order-website-php"
"tatsath/fin-ml" -> "mfrdixon/ML_Finance_Codes"
"tatsath/fin-ml" -> "emoen/Machine-Learning-for-Asset-Managers"
"tatsath/fin-ml" -> "letianzj/QuantResearch"
"tatsath/fin-ml" -> "yhilpisch/aiif"
"tatsath/fin-ml" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"tatsath/fin-ml" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"tatsath/fin-ml" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"tatsath/fin-ml" -> "PacktPublishing/Python-for-Finance-Cookbook"
"tatsath/fin-ml" -> "chrisconlan/algorithmic-trading-with-python"
"tatsath/fin-ml" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition"
"tatsath/fin-ml" -> "dcajasn/Riskfolio-Lib"
"tatsath/fin-ml" -> "jjakimoto/finance_ml"
"tatsath/fin-ml" -> "firmai/financial-machine-learning"
"tatsath/fin-ml" -> "yhilpisch/py4fi2nd"
"tatsath/fin-ml" -> "shashankvemuri/Finance"
"SunshowerC/fund-strategy" -> "Ckend/pythondict-quant" ["e"=1]
"SimFin/simfin" -> "SimFin/simfin-tutorials"
"SimFin/simfin" -> "SimFin/web-api-examples"
"SimFin/simfin" -> "Hvass-Labs/FinanceOps"
"quantopian/qgrid" -> "quantopian/pyfolio" ["e"=1]
"quantopian/qgrid" -> "quantopian/alphalens" ["e"=1]
"quantopian/qgrid" -> "quantopian/research_public" ["e"=1]
"quarkfin/qf-lib" -> "rolling-panda-san/notebooks"
"quarkfin/qf-lib" -> "jasonstrimpel/volatility-trading"
"quarkfin/qf-lib" -> "emoen/Machine-Learning-for-Asset-Managers"
"quarkfin/qf-lib" -> "AsyncAlgoTrading/aat"
"quarkfin/qf-lib" -> "letianzj/quanttrader"
"quarkfin/qf-lib" -> "quantsbin/Quantsbin"
"quarkfin/qf-lib" -> "letianzj/QuantResearch"
"quarkfin/qf-lib" -> "chrism2671/PyTrendFollow"
"quarkfin/qf-lib" -> "stefan-jansen/pyfolio-reloaded"
"quarkfin/qf-lib" -> "Heerozh/spectre"
"quarkfin/qf-lib" -> "ArturSepp/QuantInvestStrats"
"quarkfin/qf-lib" -> "marketneutral/alphatools"
"quarkfin/qf-lib" -> "kieran-mackle/AutoTrader"
"quarkfin/qf-lib" -> "Finance-Hub/FinanceHub"
"quarkfin/qf-lib" -> "pmorissette/ffn"
"cantaro86/Financial-Models-Numerical-Methods" -> "google/tf-quant-finance"
"cantaro86/Financial-Models-Numerical-Methods" -> "firmai/financial-machine-learning"
"cantaro86/Financial-Models-Numerical-Methods" -> "wilsonfreitas/awesome-quant"
"cantaro86/Financial-Models-Numerical-Methods" -> "hudson-and-thames/mlfinlab"
"cantaro86/Financial-Models-Numerical-Methods" -> "domokane/FinancePy"
"cantaro86/Financial-Models-Numerical-Methods" -> "robertmartin8/PyPortfolioOpt"
"cantaro86/Financial-Models-Numerical-Methods" -> "goldmansachs/gs-quant"
"cantaro86/Financial-Models-Numerical-Methods" -> "dcajasn/Riskfolio-Lib"
"cantaro86/Financial-Models-Numerical-Methods" -> "letianzj/QuantResearch"
"cantaro86/Financial-Models-Numerical-Methods" -> "je-suis-tm/quant-trading"
"cantaro86/Financial-Models-Numerical-Methods" -> "ranaroussi/quantstats"
"cantaro86/Financial-Models-Numerical-Methods" -> "lballabio/QuantLib"
"cantaro86/Financial-Models-Numerical-Methods" -> "chrisconlan/algorithmic-trading-with-python"
"cantaro86/Financial-Models-Numerical-Methods" -> "shashankvemuri/Finance"
"cantaro86/Financial-Models-Numerical-Methods" -> "jasonstrimpel/volatility-trading"
"shashankvemuri/Finance" -> "chrisconlan/algorithmic-trading-with-python"
"shashankvemuri/Finance" -> "domokane/FinancePy"
"shashankvemuri/Finance" -> "JerBouma/FinanceDatabase"
"shashankvemuri/Finance" -> "quant-science/sunday-quant-scientist"
"shashankvemuri/Finance" -> "letianzj/QuantResearch"
"shashankvemuri/Finance" -> "JerBouma/FinanceToolkit"
"shashankvemuri/Finance" -> "mfrdixon/ML_Finance_Codes"
"shashankvemuri/Finance" -> "je-suis-tm/quant-trading"
"shashankvemuri/Finance" -> "LastAncientOne/Stock_Analysis_For_Quant"
"shashankvemuri/Finance" -> "fmilthaler/FinQuant"
"shashankvemuri/Finance" -> "dcajasn/Riskfolio-Lib"
"shashankvemuri/Finance" -> "Hvass-Labs/FinanceOps"
"shashankvemuri/Finance" -> "georgezouq/awesome-ai-in-finance"
"shashankvemuri/Finance" -> "firmai/financial-machine-learning"
"shashankvemuri/Finance" -> "LongOnly/Quantitative-Notebooks"
"GitGuardian/ggshield" -> "deepfence/SecretScanner" ["e"=1]
"metheuspsc/Iq_Option_Bots" -> "CarlosGatti/bot-python-iq-option"
"metheuspsc/Iq_Option_Bots" -> "iancamleite/prediciting-binary-options"
"metheuspsc/Iq_Option_Bots" -> "omarmagh/iq_option_BOT"
"metheuspsc/Iq_Option_Bots" -> "mrfhink/IQ-binary-robot"
"metheuspsc/Iq_Option_Bots" -> "ItamarRocha/binary-bot"
"metheuspsc/Iq_Option_Bots" -> "mariofrans/PROJECT__AI-Binary-Options-Trading-Bot"
"metheuspsc/Iq_Option_Bots" -> "sumanblack666/IQ-Option-Lua-scripts"
"metheuspsc/Iq_Option_Bots" -> "irangarcia/binary-options-trading-bot"
"stockalgo/stolgo" -> "day0market/support_resistance"
"stockalgo/stolgo" -> "SpiralDevelopment/candlestick-patterns"
"stockalgo/stolgo" -> "marsandu/PriceAction"
"stockalgo/stolgo" -> "GregoryMorse/trendln"
"stockalgo/stolgo" -> "stockalgo/bandl"
"stockalgo/stolgo" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"stockalgo/stolgo" -> "white07S/TradingPatternScanner"
"stockalgo/stolgo" -> "akurgat/automating-technical-analysis"
"stockalgo/stolgo" -> "SpiralDevelopment/RSI-divergence-detector"
"yangwohenmai/DeepLearningForTSF" -> "yangwohenmai/LSTM" ["e"=1]
"polygon-io/client-js" -> "alpacahq/alpaca-ts"
"GriffinAustin/pynance" -> "bbcho/finoptions-dev"
"GriffinAustin/pynance" -> "federicomariamassari/willowtree"
"GriffinAustin/pynance" -> "romanmichaelpaolucci/Q-Fin"
"GriffinAustin/pynance" -> "federicomariamassari/financial-engineering"
"GriffinAustin/pynance" -> "ynouri/pysabr"
"GriffinAustin/pynance" -> "alpha-miner/Finance-Python"
"GriffinAustin/pynance" -> "vollib/vollib"
"GriffinAustin/pynance" -> "jsmidt/QuantPy"
"GriffinAustin/pynance" -> "quantsbin/Quantsbin"
"GriffinAustin/pynance" -> "dbrojas/optlib"
"GriffinAustin/pynance" -> "enthought/pyql"
"GriffinAustin/pynance" -> "pmorissette/ffn"
"GriffinAustin/pynance" -> "domokane/FinancePy"
"quantopian/mlfinlab" -> "quantopian/robintrack"
"Finnhub-Stock-API/finnhub-python" -> "twelvedata/twelvedata-python"
"Finnhub-Stock-API/finnhub-python" -> "polygon-io/client-python"
"Finnhub-Stock-API/finnhub-python" -> "alpacahq/alpaca-py"
"Finnhub-Stock-API/finnhub-python" -> "hongtaocai/googlefinance"
"Finnhub-Stock-API/finnhub-python" -> "quantmind/ccy"
"Finnhub-Stock-API/finnhub-python" -> "econdb/inquisitor"
"Finnhub-Stock-API/finnhub-python" -> "mcdallas/wallstreet"
"Finnhub-Stock-API/finnhub-python" -> "bpsmith/tia"
"Finnhub-Stock-API/finnhub-python" -> "ZachLiuGIS/stock_extractor"
"Finnhub-Stock-API/finnhub-python" -> "skillachie/finsymbols"
"Finnhub-Stock-API/finnhub-python" -> "vollib/vollib"
"Finnhub-Stock-API/finnhub-python" -> "finnhubio/Finnhub-API" ["e"=1]
"Finnhub-Stock-API/finnhub-python" -> "enthought/pyql"
"Finnhub-Stock-API/finnhub-python" -> "RomelTorres/alpha_vantage"
"Finnhub-Stock-API/finnhub-python" -> "Finnhub-Stock-API/finnhub-go" ["e"=1]
"jrmeier/fast-trade" -> "wolfinch/wolfinch" ["e"=1]
"jrmeier/fast-trade" -> "TheFourGreatErrors/alpha-rptr" ["e"=1]
"jrmeier/fast-trade" -> "letianzj/quanttrader"
"jrmeier/fast-trade" -> "mementum/bta-lib"
"jrmeier/fast-trade" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"jrmeier/fast-trade" -> "ivopetiz/algotrading"
"jrmeier/fast-trade" -> "day0market/support_resistance"
"jrmeier/fast-trade" -> "s-brez/trading-server"
"jrmeier/fast-trade" -> "coding-kitties/investing-algorithm-framework"
"jrmeier/fast-trade" -> "jsmidt/QuantPy"
"jrmeier/fast-trade" -> "enzoampil/fastquant"
"jrmeier/fast-trade" -> "amor71/LiuAlgoTrader"
"jrmeier/fast-trade" -> "GregoryMorse/trendln"
"jrmeier/fast-trade" -> "peerchemist/finta"
"jrmeier/fast-trade" -> "quarkfin/qf-lib"
"day0market/support_resistance" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"day0market/support_resistance" -> "GregoryMorse/trendln"
"day0market/support_resistance" -> "stockalgo/stolgo"
"day0market/support_resistance" -> "arabacibahadir/sup-res"
"day0market/support_resistance" -> "sohandillikar/SupportResistance"
"day0market/support_resistance" -> "jbn/ZigZag"
"day0market/support_resistance" -> "bfolkens/py-market-profile"
"day0market/support_resistance" -> "ednunezg/pytrendline"
"day0market/support_resistance" -> "WestXu/support_resistance_line"
"day0market/support_resistance" -> "dysonance/Trendy"
"day0market/support_resistance" -> "happydasch/btplotting"
"day0market/support_resistance" -> "arkochhar/Technical-Indicators"
"day0market/support_resistance" -> "judopro/Stock_Support_Resistance_ML"
"day0market/support_resistance" -> "mementum/bta-lib"
"day0market/support_resistance" -> "SpiralDevelopment/candlestick-patterns"
"KidQuant/Pairs-Trading-With-Python" -> "financialnoob/pairs_trading"
"KidQuant/Pairs-Trading-With-Python" -> "simaomsarmento/PairsTrading"
"KidQuant/Pairs-Trading-With-Python" -> "JerBouma/AlgorithmicTrading"
"KidQuant/Pairs-Trading-With-Python" -> "rolling-panda-san/notebooks"
"KidQuant/Pairs-Trading-With-Python" -> "SpencerPao/Quantitative_Strategies"
"KidQuant/Pairs-Trading-With-Python" -> "ArturSepp/QuantInvestStrats"
"KidQuant/Pairs-Trading-With-Python" -> "wywongbd/pairstrade-fyp-2019"
"KidQuant/Pairs-Trading-With-Python" -> "sapphire921/HFT-Pairs-Trading" ["e"=1]
"KidQuant/Pairs-Trading-With-Python" -> "wangy8989/Pairs-Trading-with-Machine-Learning"
"KidQuant/Pairs-Trading-With-Python" -> "daehkim/pair-trading"
"KidQuant/Pairs-Trading-With-Python" -> "QuantConnect/Research"
"KidQuant/Pairs-Trading-With-Python" -> "boyboi86/AFML"
"KidQuant/Pairs-Trading-With-Python" -> "emoen/Machine-Learning-for-Asset-Managers"
"KidQuant/Pairs-Trading-With-Python" -> "bradleyboyuyang/Statistical-Arbitrage" ["e"=1]
"KidQuant/Pairs-Trading-With-Python" -> "jsmidt/QuantPy"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "day0market/support_resistance"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "GregoryMorse/trendln"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "arabacibahadir/sup-res"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "sohandillikar/SupportResistance"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "ednunezg/pytrendline"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "jbn/ZigZag"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "SpiralDevelopment/candlestick-patterns"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "dysonance/Trendy"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "white07S/TradingPatternScanner"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "neurotrader888/TrendLineAutomation"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "bfolkens/py-market-profile"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "WestXu/support_resistance_line"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "stockalgo/stolgo"
"BatuhanUsluel/Algorithmic-Support-and-Resistance" -> "TheFourGreatErrors/alpha-rptr" ["e"=1]
"mementum/bta-lib" -> "peerchemist/finta"
"mementum/bta-lib" -> "verybadsoldier/backtrader_plotting"
"mementum/bta-lib" -> "GregoryMorse/trendln"
"mementum/bta-lib" -> "constverum/Quantdom"
"mementum/bta-lib" -> "s-brez/trading-server"
"mementum/bta-lib" -> "jrmeier/fast-trade"
"mementum/bta-lib" -> "femtotrader/pandas_talib"
"mementum/bta-lib" -> "leosmigel/analyzingalpha"
"mementum/bta-lib" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"mementum/bta-lib" -> "JerBouma/AlgorithmicTrading"
"mementum/bta-lib" -> "day0market/support_resistance"
"mementum/bta-lib" -> "kylejusticemagnuson/pyti"
"mementum/bta-lib" -> "wywongbd/pairstrade-fyp-2019"
"mementum/bta-lib" -> "alpacahq/Momentum-Trading-Example"
"mementum/bta-lib" -> "Dave-Vallance/tv2bt"
"daehkim/pair-trading" -> "IanLKaplan/pairs_trading"
"Heerozh/spectre" -> "jankrepl/deepdow"
"Heerozh/spectre" -> "jasonstrimpel/volatility-trading"
"Heerozh/spectre" -> "michaelchu/optopsy"
"Heerozh/spectre" -> "enthought/pyql"
"Heerozh/spectre" -> "santoshlite/EigenLedger"
"Heerozh/spectre" -> "quarkfin/qf-lib"
"Heerozh/spectre" -> "rolling-panda-san/notebooks"
"Heerozh/spectre" -> "vollib/vollib"
"Heerozh/spectre" -> "stefan-jansen/alphalens-reloaded"
"Heerozh/spectre" -> "skfolio/skfolio"
"Heerozh/spectre" -> "kieranjwood/trading-momentum-transformer" ["e"=1]
"Heerozh/spectre" -> "letianzj/quanttrader"
"Heerozh/spectre" -> "domokane/FinancePy"
"Heerozh/spectre" -> "ScottfreeLLC/AlphaPy"
"Heerozh/spectre" -> "dcajasn/Riskfolio-Lib"
"yhilpisch/dx" -> "yhilpisch/dawp"
"yhilpisch/dx" -> "yhilpisch/lvvd"
"yhilpisch/dx" -> "yhilpisch/py4fi2nd"
"yhilpisch/dx" -> "yhilpisch/aiif"
"yhilpisch/dx" -> "yhilpisch/py4at"
"yhilpisch/dx" -> "yhilpisch/py4fi"
"yhilpisch/dx" -> "enthought/pyql"
"yhilpisch/dx" -> "jasonstrimpel/volatility-trading"
"yhilpisch/dx" -> "domokane/FinancePy"
"yhilpisch/dx" -> "yhilpisch/mvportfolio"
"yhilpisch/dx" -> "jamesmawm/Mastering-Python-for-Finance-source-codes"
"yhilpisch/dx" -> "quantopian/empyrical"
"yhilpisch/dx" -> "michaelchu/optopsy"
"yhilpisch/dx" -> "opendoor-labs/pyfin"
"yhilpisch/dx" -> "cuemacro/finmarketpy"
"AlainDaccache/Quantropy" -> "StockGram/Intelligent-Quantitative-Trading"
"AlainDaccache/Quantropy" -> "viniesposito/py-mlfactor"
"AlainDaccache/Quantropy" -> "viniesposito/factor-playground"
"AlainDaccache/Quantropy" -> "PierreNowi/cs230-project"
"wqk666999/CNN-LSTM-Attention" -> "matheusbfernandes/stock-market-prediction" ["e"=1]
"fjxmlzn/DoppelGANger" -> "jsyoon0823/TimeGAN"
"fjxmlzn/DoppelGANger" -> "numancelik34/TimeSeries-GAN"
"fjxmlzn/DoppelGANger" -> "ratschlab/RGAN"
"fjxmlzn/DoppelGANger" -> "netsharecmu/NetShare" ["e"=1]
"fjxmlzn/DoppelGANger" -> "firmai/mtss-gan"
"fjxmlzn/DoppelGANger" -> "gretelai/gretel-synthetics" ["e"=1]
"fjxmlzn/DoppelGANger" -> "zzw-zwzhang/TimeGAN-pytorch"
"fjxmlzn/DoppelGANger" -> "proceduralia/pytorch-GAN-timeseries"
"fjxmlzn/DoppelGANger" -> "ydataai/ydata-synthetic" ["e"=1]
"fjxmlzn/DoppelGANger" -> "imics-lab/tts-gan"
"fjxmlzn/DoppelGANger" -> "gioramponi/GAN_Time_Series"
"fjxmlzn/DoppelGANger" -> "vanderschaarlab/mlforhealthlabpub"
"fjxmlzn/DoppelGANger" -> "mirkosavasta/GANetano"
"fjxmlzn/DoppelGANger" -> "fjxmlzn/GPUTaskScheduler"
"fjxmlzn/DoppelGANger" -> "sdv-dev/SDGym" ["e"=1]
"sreenivasdoosa/sdoosa-algo-trade-python" -> "sreenivasdoosa/sdoosa-algo-trade-app"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "jigneshpylab/ZerodhaPythonScripts"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "debanshur/algotrading"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "NagarajuGunda/PyAlgoMate"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "srikar-kodakandla/fully-automated-nifty-options-trading"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "yashrj25/Entirety-Codes"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "aeron7/nsepython"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "jugaad-py/jugaad-trader"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "pranjal-joshi/Screeni-py"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "ranjanrak/optionchainstream"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "marketcalls/openalgo"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "imvinaypatil/kinetick"
"sreenivasdoosa/sdoosa-algo-trade-python" -> "ashishkumar30/Stock_Market_Live_Trading_using_AI"
"nickmccullum/algorithmic-trading-python" -> "chrisconlan/algorithmic-trading-with-python"
"nickmccullum/algorithmic-trading-python" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"nickmccullum/algorithmic-trading-python" -> "PacktPublishing/Learn-Algorithmic-Trading"
"nickmccullum/algorithmic-trading-python" -> "je-suis-tm/quant-trading"
"nickmccullum/algorithmic-trading-python" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"nickmccullum/algorithmic-trading-python" -> "gbeced/pyalgotrade"
"nickmccullum/algorithmic-trading-python" -> "letianzj/QuantResearch"
"nickmccullum/algorithmic-trading-python" -> "stefan-jansen/machine-learning-for-trading"
"nickmccullum/algorithmic-trading-python" -> "ivopetiz/algotrading"
"nickmccullum/algorithmic-trading-python" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"nickmccullum/algorithmic-trading-python" -> "Yvictor/TradingGym" ["e"=1]
"nickmccullum/algorithmic-trading-python" -> "shashankvemuri/Finance"
"nickmccullum/algorithmic-trading-python" -> "kernc/backtesting.py"
"nickmccullum/algorithmic-trading-python" -> "polakowo/vectorbt"
"nickmccullum/algorithmic-trading-python" -> "LastAncientOne/Stock_Analysis_For_Quant"
"jsyoon0823/TimeGAN" -> "proceduralia/pytorch-GAN-timeseries"
"jsyoon0823/TimeGAN" -> "ratschlab/RGAN"
"jsyoon0823/TimeGAN" -> "birdx0810/timegan-pytorch"
"jsyoon0823/TimeGAN" -> "ydataai/ydata-synthetic" ["e"=1]
"jsyoon0823/TimeGAN" -> "imics-lab/tts-gan"
"jsyoon0823/TimeGAN" -> "fjxmlzn/DoppelGANger"
"jsyoon0823/TimeGAN" -> "zzw-zwzhang/TimeGAN-pytorch"
"jsyoon0823/TimeGAN" -> "SigCGANs/Conditional-Sig-Wasserstein-GANs"
"jsyoon0823/TimeGAN" -> "vanderschaarlab/mlforhealthlabpub"
"jsyoon0823/TimeGAN" -> "firmai/mtss-gan"
"jsyoon0823/TimeGAN" -> "benearnthof/TimeGAN"
"jsyoon0823/TimeGAN" -> "numancelik34/TimeSeries-GAN"
"jsyoon0823/TimeGAN" -> "olofmogren/c-rnn-gan"
"jsyoon0823/TimeGAN" -> "zalandoresearch/pytorch-ts" ["e"=1]
"jsyoon0823/TimeGAN" -> "abudesai/timeVAE"
"finos/legend" -> "goldmansachs/gs-quant" ["e"=1]
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "PacktPublishing/Learn-Algorithmic-Trading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "letianzj/QuantResearch"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "chrisconlan/algorithmic-trading-with-python"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "PacktPublishing/Python-for-Finance-Cookbook"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "jjakimoto/finance_ml"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "domokane/FinancePy"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "cbailes/awesome-deep-trading"
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" -> "LastAncientOne/Stock_Analysis_For_Quant"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "pushpendughosh/Stock-market-forecasting"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "robertmartin8/MachineLearningStocks"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "scorpionhiccup/StockPricePrediction"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "NourozR/Stock-Price-Prediction-LSTM"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "Rajat-dhyani/Stock-Price-Predictor"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "timestocome/Test-stock-prediction-algorithms"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "LastAncientOne/Stock_Analysis_For_Quant"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "achillesrasquinha/bulbea"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "venky14/Stock-Market-Analysis-and-Prediction"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "jjakimoto/finance_ml"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "nityansuman/warren"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis"
"JordiCorbilla/stock-prediction-deep-neural-learning" -> "NGYB/Stocks"
"OpenGamma/Strata" -> "OpenSourceRisk/Engine" ["e"=1]
"OpenGamma/Strata" -> "lballabio/QuantLib" ["e"=1]
"OpenGamma/Strata" -> "lballabio/QuantLib-SWIG" ["e"=1]
"OpenGamma/Strata" -> "attack68/rateslib" ["e"=1]
"alex314159/blpapiwrapper" -> "691175002/BLPInterface"
"alex314159/blpapiwrapper" -> "matthewgilbert/pdblp"
"alex314159/blpapiwrapper" -> "bpsmith/pybbg"
"alex314159/blpapiwrapper" -> "kyuni22/pybbg"
"alex314159/blpapiwrapper" -> "bpsmith/tia"
"alex314159/blpapiwrapper" -> "msitt/blpapi-python"
"alex314159/blpapiwrapper" -> "matthewgilbert/blp"
"alex314159/blpapiwrapper" -> "filmackay/blpapi-py"
"backtrader2/backtrader" -> "happydasch/btplotting"
"backtrader2/backtrader" -> "verybadsoldier/backtrader_plotting"
"backtrader2/backtrader" -> "atreyuxtrading/atreyu-backtrader-api"
"backtrader2/backtrader" -> "happydasch/btconfig"
"backtrader2/backtrader" -> "Dave-Vallance/bt-ccxt-store"
"backtrader2/backtrader" -> "rodrigo-brito/backtrader-binance-bot"
"backtrader2/backtrader" -> "ultra1971/backtrader_ib_insync"
"backtrader2/backtrader" -> "Dave-Vallance/tv2bt"
"backtrader2/backtrader" -> "ab-trader/backtrader_addons"
"backtrader2/backtrader" -> "happydasch/btoandav20"
"backtrader2/backtrader" -> "dimnorin/backtrader-live"
"backtrader2/backtrader" -> "shlomiku/zipline-trader"
"backtrader2/backtrader" -> "lindomar-oliveira/backtrader-binance"
"backtrader2/backtrader" -> "Skinok/backtrader-pyqt-ui"
"backtrader2/backtrader" -> "mementum/bta-lib"
"JonathanRaiman/theano_lstm" -> "JonathanRaiman/cython_lstm" ["e"=1]
"tradytics/surpriver" -> "tradytics/eiten"
"tradytics/surpriver" -> "shirosaidev/stocksight"
"tradytics/surpriver" -> "LastAncientOne/Stock_Analysis_For_Quant"
"tradytics/surpriver" -> "robertmartin8/MachineLearningStocks"
"tradytics/surpriver" -> "peerchemist/finta"
"tradytics/surpriver" -> "AlgoTraders/stock-analysis-engine"
"tradytics/surpriver" -> "ranaroussi/qtpylib"
"tradytics/surpriver" -> "cbailes/awesome-deep-trading"
"tradytics/surpriver" -> "letianzj/QuantResearch"
"tradytics/surpriver" -> "VivekPa/AIAlpha"
"tradytics/surpriver" -> "cuemacro/findatapy"
"tradytics/surpriver" -> "jasonstrimpel/volatility-trading"
"tradytics/surpriver" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"tradytics/surpriver" -> "ivopetiz/algotrading"
"tradytics/surpriver" -> "alvarobartt/trendet"
"twelvedata/twelvedata-python" -> "Finnhub-Stock-API/finnhub-python"
"twelvedata/twelvedata-python" -> "quantmind/ccy"
"twelvedata/twelvedata-python" -> "polygon-io/client-python"
"twelvedata/twelvedata-python" -> "econdb/inquisitor"
"twelvedata/twelvedata-python" -> "ZachLiuGIS/stock_extractor"
"twelvedata/twelvedata-python" -> "alpacahq/alpaca-py"
"twelvedata/twelvedata-python" -> "skillachie/finsymbols"
"twelvedata/twelvedata-python" -> "bpsmith/tia"
"twelvedata/twelvedata-python" -> "quantsbin/Quantsbin"
"twelvedata/twelvedata-python" -> "GriffinAustin/pynance"
"twelvedata/twelvedata-python" -> "alpha-miner/Finance-Python"
"twelvedata/twelvedata-python" -> "enthought/pyql"
"twelvedata/twelvedata-python" -> "hongtaocai/googlefinance"
"twelvedata/twelvedata-python" -> "dedwards25/Python_Option_Pricing"
"twelvedata/twelvedata-python" -> "vollib/vollib"
"alpacahq/example-scalping" -> "alpacahq/Momentum-Trading-Example"
"alpacahq/example-scalping" -> "alpacahq/example-hftish" ["e"=1]
"alpacahq/example-scalping" -> "alpacahq/alpaca-backtrader-api"
"alpacahq/example-scalping" -> "ivopetiz/algotrading"
"alpacahq/example-scalping" -> "amor71/LiuAlgoTrader"
"alpacahq/example-scalping" -> "alpacahq/alpaca-trade-api-python"
"alpacahq/example-scalping" -> "s-brez/trading-server"
"alpacahq/example-scalping" -> "alpacahq/pylivetrader"
"alpacahq/example-scalping" -> "ranaroussi/qtpylib"
"alpacahq/example-scalping" -> "JerBouma/AlgorithmicTrading"
"alpacahq/example-scalping" -> "tudorelu/pyjuque" ["e"=1]
"alpacahq/example-scalping" -> "constverum/Quantdom"
"alpacahq/example-scalping" -> "TheFourGreatErrors/alpha-rptr" ["e"=1]
"alpacahq/example-scalping" -> "peerchemist/finta"
"alpacahq/example-scalping" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"areed1192/tradestation-python-api" -> "mkjiau/MFLL"
"areed1192/tradestation-python-api" -> "tradestation/api-docs"
"d-e-s-o/apcacli" -> "d-e-s-o/apca"
"ebidel/polymer-gmail" -> "DMTSource/daily-stock-forecast" ["e"=1]
"PacktPublishing/Learn-Algorithmic-Trading" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"PacktPublishing/Learn-Algorithmic-Trading" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"PacktPublishing/Learn-Algorithmic-Trading" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"PacktPublishing/Learn-Algorithmic-Trading" -> "chrisconlan/algorithmic-trading-with-python"
"PacktPublishing/Learn-Algorithmic-Trading" -> "PacktPublishing/Python-for-Finance-Cookbook"
"PacktPublishing/Learn-Algorithmic-Trading" -> "JerBouma/AlgorithmicTrading"
"PacktPublishing/Learn-Algorithmic-Trading" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python"
"PacktPublishing/Learn-Algorithmic-Trading" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"PacktPublishing/Learn-Algorithmic-Trading" -> "ivopetiz/algotrading"
"PacktPublishing/Learn-Algorithmic-Trading" -> "cuemacro/findatapy"
"PacktPublishing/Learn-Algorithmic-Trading" -> "jasonstrimpel/volatility-trading"
"PacktPublishing/Learn-Algorithmic-Trading" -> "Hvass-Labs/FinanceOps"
"PacktPublishing/Learn-Algorithmic-Trading" -> "letianzj/QuantResearch"
"PacktPublishing/Learn-Algorithmic-Trading" -> "LastAncientOne/Stock_Analysis_For_Quant"
"PacktPublishing/Learn-Algorithmic-Trading" -> "yhilpisch/py4at"
"stefmolin/Hands-On-Data-Analysis-with-Pandas-2nd-edition" -> "stefmolin/stock-analysis" ["e"=1]
"yassinemaaroufi/MibianLib" -> "opendoor-labs/pyfin"
"yassinemaaroufi/MibianLib" -> "vollib/vollib"
"yassinemaaroufi/MibianLib" -> "vollib/py_vollib"
"yassinemaaroufi/MibianLib" -> "boyac/pyOptionPricing"
"yassinemaaroufi/MibianLib" -> "NagarajuGunda/PyAlgoMate"
"gianlucamalato/machinelearning" -> "judopro/Stock_Support_Resistance_ML"
"gianlucamalato/machinelearning" -> "GregoryMorse/trendln"
"gianlucamalato/machinelearning" -> "harttraveller/roughsr2"
"OpenSourceAP/CrossSection" -> "bkelly-lab/ReplicationCrisis"
"OpenSourceAP/CrossSection" -> "OpenSourceAP/CrossSectionDemos"
"OpenSourceAP/CrossSection" -> "cvxgrp/cvxportfolio"
"OpenSourceAP/CrossSection" -> "bkelly-lab/ipca"
"OpenSourceAP/CrossSection" -> "bashtage/linearmodels" ["e"=1]
"OpenSourceAP/CrossSection" -> "LouisChen1992/Deep_Learning_in_Asset_Pricing"
"OpenSourceAP/CrossSection" -> "xiubooth/ML_Codes"
"OpenSourceAP/CrossSection" -> "wharton/wrds"
"OpenSourceAP/CrossSection" -> "chulwoohan/pyanomaly"
"OpenSourceAP/CrossSection" -> "Feng-CityUHK/EquityCharacteristics"
"OpenSourceAP/CrossSection" -> "michaelewens/SDC-to-Compustat-Mapping"
"OpenSourceAP/CrossSection" -> "Wentao-Xu/HIST" ["e"=1]
"OpenSourceAP/CrossSection" -> "RL-MLDM/alphagen" ["e"=1]
"OpenSourceAP/CrossSection" -> "KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data"
"OpenSourceAP/CrossSection" -> "emoen/Machine-Learning-for-Asset-Managers"
"man-group/notebooker" -> "man-group/ArcticDB" ["e"=1]
"man-group/notebooker" -> "man-group/arctic" ["e"=1]
"cjbayron/c-rnn-gan.pytorch" -> "seyedsaleh/music-generator"
"Jake0303/RobinHood-RSI-Trading-Bot" -> "2018kguo/RobinhoodBot"
"Jake0303/RobinHood-RSI-Trading-Bot" -> "Jake0303/SimplePythonAlpacaStockTradingBot"
"Jake0303/RobinHood-RSI-Trading-Bot" -> "Jake0303/StockPricePrediction"
"Jake0303/RobinHood-RSI-Trading-Bot" -> "Jake0303/CryptoTradingBot"
"Jake0303/RobinHood-RSI-Trading-Bot" -> "yura505/robinbot"
"Jake0303/RobinHood-RSI-Trading-Bot" -> "aseylys/KStock"
"Jake0303/RobinHood-RSI-Trading-Bot" -> "tomgrek/rnn-robinhood"
"Jake0303/RobinHood-RSI-Trading-Bot" -> "Jake0303/Webull-Trading-Bot"
"Jake0303/RobinHood-RSI-Trading-Bot" -> "arshyasharifian/investbot"
"derekbanas/plotly-tutorial" -> "derekbanas/pandas-tutorial"
"derekbanas/plotly-tutorial" -> "derekbanas/NumPy-Tutorial"
"derekbanas/plotly-tutorial" -> "derekbanas/matplotlib"
"derekbanas/plotly-tutorial" -> "derekbanas/seaborn"
"derekbanas/plotly-tutorial" -> "derekbanas/PythonTutorial"
"derekbanas/plotly-tutorial" -> "derekbanas/TimeSeriesAnalysis"
"fja05680/sp500" -> "leosmigel/analyzingalpha"
"fja05680/sp500" -> "teddykoker/survivorship-free-spy"
"fja05680/sp500" -> "rolling-panda-san/notebooks"
"fja05680/sp500" -> "theOGognf/finagg"
"fja05680/sp500" -> "0xfdf/toraniko"
"fja05680/sp500" -> "ib-api-reloaded/ib_async"
"fja05680/sp500" -> "abbass2/pyqstrat"
"fja05680/sp500" -> "fja05680/pinkfish"
"fja05680/sp500" -> "datasets/s-and-p-500-companies" ["e"=1]
"fja05680/sp500" -> "ahmedengu/trading_evolved"
"fja05680/sp500" -> "OpenSourceAP/CrossSection"
"fja05680/sp500" -> "stefan-jansen/zipline-reloaded"
"fja05680/sp500" -> "IbcAlpha/IBC"
"fja05680/sp500" -> "braverock/quantstrat" ["e"=1]
"fja05680/sp500" -> "cuemacro/findatapy"
"algobulls/pyalgostrategypool" -> "algobulls/pyalgotrading"
"shokru/mlfactor.github.io" -> "viniesposito/py-mlfactor"
"crypto-chassis/ccapi" -> "AsyncAlgoTrading/aat" ["e"=1]
"dophist/kaldi-lstm" -> "dansoutner/LSTM" ["e"=1]
"maxicus/ib-tws-api" -> "stoqey/ibkr"
"pecu/FinancialVision" -> "pecu/Series2GAF"
"pecu/FinancialVision" -> "CharlesLoo/stock-pattern-recorginition"
"hackingthemarkets/candlestick-screener" -> "SpiralDevelopment/candlestick-patterns" ["e"=1]
"hackingthemarkets/tradingview-binance-strategy-alert-webhook" -> "hackingthemarkets/tradingview-interactive-brokers" ["e"=1]
"titov-vv/jal" -> "JerBouma/PersonalFinance" ["e"=1]
"GeneralMills/pytrends" -> "pydata/pandas-datareader" ["e"=1]
"GeneralMills/pytrends" -> "quantopian/pyfolio" ["e"=1]
"Dave-Vallance/tv2bt" -> "Dave-Vallance/bt-ccxt-store"
"Dave-Vallance/tv2bt" -> "happydasch/btoandav20"
"Dave-Vallance/tv2bt" -> "neilsmurphy/backtrader_template"
"Dave-Vallance/tv2bt" -> "ultra1971/backtrader_ib_insync"
"Dave-Vallance/tv2bt" -> "khramkov/Backtrader-MQL5-API" ["e"=1]
"Dave-Vallance/tv2bt" -> "OmegaTrading/OmegaUI"
"Dave-Vallance/tv2bt" -> "khramkov/MQL5-JSON-API" ["e"=1]
"Dave-Vallance/tv2bt" -> "verybadsoldier/backtrader_plotting"
"wenyalintw/Google-Patents-Scraper" -> "ryanlstevens/google_patent_scraper"
"wenyalintw/Google-Patents-Scraper" -> "lorenzbr/GooglePatentsPdfDownloader"
"wenyalintw/Google-Patents-Scraper" -> "hopped/uspto-patents-parsing-tools"
"hungchun-lin/Stock-price-prediction-using-GAN" -> "ChickenBenny/Stock-prediction-with-GAN-and-WGAN"
"hungchun-lin/Stock-price-prediction-using-GAN" -> "kah-ve/MarketGAN"
"hungchun-lin/Stock-price-prediction-using-GAN" -> "deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-"
"hungchun-lin/Stock-price-prediction-using-GAN" -> "longfly04/A-Stock-Prediction-System-with-Deep-Learning"
"hungchun-lin/Stock-price-prediction-using-GAN" -> "zshicode/Attention-CLX-stock-prediction" ["e"=1]
"hungchun-lin/Stock-price-prediction-using-GAN" -> "UalwaysKnow/time-series-prediction-with-gan"
"sangyx/deep-finance" -> "fulifeng/Temporal_Relational_Stock_Ranking" ["e"=1]
"sangyx/deep-finance" -> "jwwthu/DL4Stock" ["e"=1]
"sangyx/deep-finance" -> "Wentao-Xu/HIST" ["e"=1]
"sangyx/deep-finance" -> "cbailes/awesome-deep-trading"
"sangyx/deep-finance" -> "RL-MLDM/alphagen" ["e"=1]
"sangyx/deep-finance" -> "hugo2046/QuantsPlaybook" ["e"=1]
"sangyx/deep-finance" -> "georgezouq/awesome-ai-in-finance"
"sangyx/deep-finance" -> "fulifeng/Adv-ALSTM" ["e"=1]
"sangyx/deep-finance" -> "valuesimplex/FinBERT" ["e"=1]
"sangyx/deep-finance" -> "domokane/FinancePy"
"sangyx/deep-finance" -> "microsoft/qlib"
"sangyx/deep-finance" -> "ZhengyaoJiang/PGPortfolio" ["e"=1]
"sangyx/deep-finance" -> "thuquant/awesome-quant" ["e"=1]
"sangyx/deep-finance" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"sangyx/deep-finance" -> "quantopian/alphalens"
"KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data" -> "danielm-github/patentsmatch_bingsearchapproach"
"KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data" -> "KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Replication-Kit"
"KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data" -> "michaelewens/SDC-to-Compustat-Mapping"
"KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data" -> "MS20190155/Measuring-Corporate-Culture-Using-Machine-Learning"
"pegahcarter/TAcharts" -> "quantroom-pro/pyrenko"
"pegahcarter/TAcharts" -> "filipemarques87/fx-charts"
"pegahcarter/TAcharts" -> "ChillarAnand/stocktrends"
"barnumbirr/coinmarketcap" -> "alpacahq/pipeline-live" ["e"=1]
"leosmigel/analyzingalpha" -> "marketneutral/alphatools"
"leosmigel/analyzingalpha" -> "mementum/bta-lib"
"leosmigel/analyzingalpha" -> "santoshlite/EigenLedger"
"leosmigel/analyzingalpha" -> "jjakimoto/finance_ml"
"leosmigel/analyzingalpha" -> "letianzj/quanttrader"
"leosmigel/analyzingalpha" -> "rolling-panda-san/notebooks"
"leosmigel/analyzingalpha" -> "fja05680/sp500"
"leosmigel/analyzingalpha" -> "chrism2671/PyTrendFollow"
"leosmigel/analyzingalpha" -> "jasonstrimpel/volatility-trading"
"leosmigel/analyzingalpha" -> "GregoryMorse/trendln"
"leosmigel/analyzingalpha" -> "michaelchu/optopsy"
"leosmigel/analyzingalpha" -> "happydasch/btplotting"
"leosmigel/analyzingalpha" -> "JerBouma/AlgorithmicTrading"
"leosmigel/analyzingalpha" -> "enthought/pyql"
"leosmigel/analyzingalpha" -> "Heerozh/spectre"
"JarFraud/FraudDetection" -> "michaelewens/MD-A-10-K-data" ["e"=1]
"Dagalon/PyStochasticVolatility" -> "ArturSepp/StochVolModels"
"Dagalon/PyStochasticVolatility" -> "JackJacquier/SABR-Implied-Volatility"
"Dagalon/PyStochasticVolatility" -> "JackJacquier/SSVI"
"jankrepl/deepdow" -> "cvxgrp/cvxportfolio"
"jankrepl/deepdow" -> "dcajasn/Riskfolio-Lib"
"jankrepl/deepdow" -> "convexfi/riskparity.py"
"jankrepl/deepdow" -> "Heerozh/spectre"
"jankrepl/deepdow" -> "skfolio/skfolio"
"jankrepl/deepdow" -> "hudson-and-thames/mlfinlab"
"jankrepl/deepdow" -> "fmilthaler/FinQuant"
"jankrepl/deepdow" -> "robertmartin8/PyPortfolioOpt"
"jankrepl/deepdow" -> "Marigold/universal-portfolios"
"jankrepl/deepdow" -> "jasonstrimpel/volatility-trading"
"jankrepl/deepdow" -> "santoshlite/EigenLedger"
"jankrepl/deepdow" -> "pmorissette/ffn"
"jankrepl/deepdow" -> "emoen/Machine-Learning-for-Asset-Managers"
"jankrepl/deepdow" -> "bashtage/arch"
"jankrepl/deepdow" -> "michaelchu/optopsy"
"areed1192/interactive-broker-python-api" -> "areed1192/interactive-brokers-api"
"areed1192/interactive-broker-python-api" -> "PythonForForex/Interactive-brokers-python-api-guide"
"areed1192/interactive-broker-python-api" -> "Voyz/ibeam"
"areed1192/interactive-broker-python-api" -> "erdewit/ib_insync"
"areed1192/interactive-broker-python-api" -> "utilmon/EasyIB"
"areed1192/interactive-broker-python-api" -> "IbcAlpha/IBC"
"areed1192/interactive-broker-python-api" -> "ranaroussi/ezibpy"
"areed1192/interactive-broker-python-api" -> "InteractiveBrokers/tws-api-public"
"areed1192/interactive-broker-python-api" -> "UnusualAlpha/ib-gateway-docker"
"areed1192/interactive-broker-python-api" -> "Vincentho711/Interactive-Brokers-Trading-Bot"
"areed1192/interactive-broker-python-api" -> "areed1192/python-trading-robot"
"areed1192/interactive-broker-python-api" -> "Voyz/ibind"
"areed1192/interactive-broker-python-api" -> "areed1192/python-sec"
"areed1192/interactive-broker-python-api" -> "hackingthemarkets/tradingview-interactive-brokers"
"areed1192/interactive-broker-python-api" -> "blampe/IbPy"
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" -> "kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python"
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" -> "kaushikjadhav01/ModSecurityCRS"
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" -> "kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud"
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" -> "kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App"
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" -> "kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN"
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" -> "kaushikjadhav01/Real-Time-Object-Detection-API-using-TensorFlow"
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" -> "kaushikjadhav01/Movie-Recommendation-Chatbot"
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" -> "kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans"
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" -> "kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis"
"shilewenuw/get_all_tickers" -> "Benny-/Yahoo-ticker-symbol-downloader"
"shilewenuw/get_all_tickers" -> "portfolioplus/pytickersymbols"
"OLPS/OLPS" -> "Marigold/universal-portfolios" ["e"=1]
"colejhudson/goldman-sachs-quantitative-strategies-research-notes" -> "sstoikov/microprice" ["e"=1]
"colejhudson/goldman-sachs-quantitative-strategies-research-notes" -> "marketneutral/alphatools"
"colejhudson/goldman-sachs-quantitative-strategies-research-notes" -> "s0ap/gs-quantitative-strategies-research-notes"
"colejhudson/goldman-sachs-quantitative-strategies-research-notes" -> "ArturSepp/QuantInvestStrats"
"colejhudson/goldman-sachs-quantitative-strategies-research-notes" -> "bloomberg/quant-research"
"colejhudson/goldman-sachs-quantitative-strategies-research-notes" -> "ryanmccrickerd/rough_bergomi"
"colejhudson/goldman-sachs-quantitative-strategies-research-notes" -> "letianzj/QuantResearch"
"colejhudson/goldman-sachs-quantitative-strategies-research-notes" -> "quantsbin/Quantsbin"
"colejhudson/goldman-sachs-quantitative-strategies-research-notes" -> "meagmohit/ml-quant-interview-prep" ["e"=1]
"Larrycoin/iqoption-bot" -> "AlanForester/IQOption-Bot-Trade-System"
"Lumiwealth/lumibot" -> "kieran-mackle/AutoTrader"
"Lumiwealth/lumibot" -> "blankly-finance/blankly"
"Lumiwealth/lumibot" -> "amor71/LiuAlgoTrader"
"Lumiwealth/lumibot" -> "nicknochnack/MLTradingBot" ["e"=1]
"Lumiwealth/lumibot" -> "kernc/backtesting.py"
"Lumiwealth/lumibot" -> "Yvictor/TradingGym" ["e"=1]
"Lumiwealth/lumibot" -> "enzoampil/fastquant"
"Lumiwealth/lumibot" -> "michaelchu/optopsy"
"Lumiwealth/lumibot" -> "ranaroussi/qtpylib"
"Lumiwealth/lumibot" -> "ivopetiz/algotrading"
"Lumiwealth/lumibot" -> "TheFourGreatErrors/alpha-rptr" ["e"=1]
"Lumiwealth/lumibot" -> "idanya/algo-trader"
"Lumiwealth/lumibot" -> "nkaz001/hftbacktest" ["e"=1]
"Lumiwealth/lumibot" -> "gbeced/basana"
"Lumiwealth/lumibot" -> "edtechre/pybroker"
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" -> "kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud"
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" -> "kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App"
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" -> "kaushikjadhav01/ModSecurityCRS"
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" -> "kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python"
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" -> "kaushikjadhav01/Real-Time-Object-Detection-API-using-TensorFlow"
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" -> "kaushikjadhav01/Movie-Recommendation-Chatbot"
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" -> "kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN"
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" -> "kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System"
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" -> "kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis"
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" -> "kaushikjadhav01/Online-Food-Ordering-Web-App"
"dpguthrie/yahooquery" -> "JECSand/yahoofinancials"
"dpguthrie/yahooquery" -> "atreadw1492/yahoo_fin"
"dpguthrie/yahooquery" -> "alvarobartt/investpy"
"dpguthrie/yahooquery" -> "cuemacro/findatapy"
"dpguthrie/yahooquery" -> "ranaroussi/yfinance"
"dpguthrie/yahooquery" -> "JerBouma/FinanceToolkit"
"dpguthrie/yahooquery" -> "rsheftel/pandas_market_calendars"
"dpguthrie/yahooquery" -> "pmorissette/ffn"
"dpguthrie/yahooquery" -> "pydata/pandas-datareader"
"dpguthrie/yahooquery" -> "twelvedata/twelvedata-python"
"dpguthrie/yahooquery" -> "ranaroussi/quantstats"
"dpguthrie/yahooquery" -> "Finnhub-Stock-API/finnhub-python"
"dpguthrie/yahooquery" -> "bashtage/arch"
"dpguthrie/yahooquery" -> "Benny-/Yahoo-ticker-symbol-downloader"
"dpguthrie/yahooquery" -> "shilewenuw/get_all_tickers"
"panpanpandas/ultrafinance" -> "llazzaro/analyzer"
"panpanpandas/ultrafinance" -> "ematvey/pybacktest"
"panpanpandas/ultrafinance" -> "maihde/quant"
"panpanpandas/ultrafinance" -> "benjaminmgross/visualize-wealth"
"panpanpandas/ultrafinance" -> "femtotrader/pandas_talib"
"panpanpandas/ultrafinance" -> "Emsu/prophet"
"panpanpandas/ultrafinance" -> "sjev/trading-with-python"
"panpanpandas/ultrafinance" -> "CarterBain/AlephNull"
"panpanpandas/ultrafinance" -> "fja05680/pinkfish"
"panpanpandas/ultrafinance" -> "mhallsmoore/qsforex"
"panpanpandas/ultrafinance" -> "dysonance/Trendy"
"panpanpandas/ultrafinance" -> "bpsmith/tia"
"panpanpandas/ultrafinance" -> "quantiacs-legacy/quantiacs-python"
"panpanpandas/ultrafinance" -> "gbeced/pyalgotrade"
"panpanpandas/ultrafinance" -> "blampe/IbPy"
"MIT-LCP/mimic-iv" -> "vanderschaarlab/clairvoyance" ["e"=1]
"Boulder-Investment-Technologies/lppls" -> "Boulder-Investment-Technologies/lppls-ci_tactical_asset_allocation"
"Boulder-Investment-Technologies/lppls" -> "Joshwani/learning-lppl"
"Boulder-Investment-Technologies/lppls" -> "jd8001/LPPL"
"Boulder-Investment-Technologies/lppls" -> "kieranjwood/slow-momentum-fast-reversion" ["e"=1]
"Boulder-Investment-Technologies/lppls" -> "fracdiff/fracdiff"
"Boulder-Investment-Technologies/lppls" -> "jmrichardson/tuneta"
"Boulder-Investment-Technologies/lppls" -> "convexfi/riskparity.py"
"Boulder-Investment-Technologies/lppls" -> "zcakhaa/Multi-Horizon-Forecasting-for-Limit-Order-Books" ["e"=1]
"Boulder-Investment-Technologies/lppls" -> "Heerozh/spectre"
"Boulder-Investment-Technologies/lppls" -> "hudson-and-thames/portfoliolab"
"Boulder-Investment-Technologies/lppls" -> "yli188/WorldQuant_alpha101_code"
"Boulder-Investment-Technologies/lppls" -> "sofienkaabar/the-book-of-trading-strategies" ["e"=1]
"Boulder-Investment-Technologies/lppls" -> "jasonstrimpel/volatility-trading"
"vsjha18/nsetools" -> "swapniljariwala/nsepy"
"vsjha18/nsetools" -> "maanavshah/stock-market-india"
"vsjha18/nsetools" -> "aeron7/nsepython"
"vsjha18/nsetools" -> "jugaad-py/jugaad-data"
"vsjha18/nsetools" -> "zerodha/pykiteconnect"
"vsjha18/nsetools" -> "pranjal-joshi/Screeni-py"
"vsjha18/nsetools" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"vsjha18/nsetools" -> "deshwalmahesh/NSE-Stock-Scanner"
"vsjha18/nsetools" -> "NSEDownload/NSEDownload"
"vsjha18/nsetools" -> "jigneshpylab/ZerodhaPythonScripts"
"vsjha18/nsetools" -> "ashishkumar30/Stock_Market_Live_Trading_using_AI"
"vsjha18/nsetools" -> "pkjmesra/PKScreener"
"vsjha18/nsetools" -> "hi-imcodeman/stock-nse-india"
"vsjha18/nsetools" -> "NayakwadiS/mftool"
"vsjha18/nsetools" -> "jugaad-py/jugaad-trader"
"Jake0303/SimplePythonAlpacaStockTradingBot" -> "Jake0303/StockPricePrediction"
"kaushikjadhav01/Movie-Recommendation-Chatbot" -> "kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud"
"kaushikjadhav01/Movie-Recommendation-Chatbot" -> "kaushikjadhav01/ModSecurityCRS"
"kaushikjadhav01/Movie-Recommendation-Chatbot" -> "kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python"
"kaushikjadhav01/Movie-Recommendation-Chatbot" -> "kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App"
"kaushikjadhav01/Movie-Recommendation-Chatbot" -> "kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN"
"albertosantini/argo" -> "hootnot/oanda-trading-environment" ["e"=1]
"jason51553262/python-ws-dtc-client" -> "john-yan/SierraChartConnect"
"jason51553262/python-ws-dtc-client" -> "Queeq/pydtc"
"beinghorizontal/tpo_project" -> "beinghorizontal/py-market-profile"
"beinghorizontal/tpo_project" -> "beinghorizontal/Support-Resistance"
"beinghorizontal/tpo_project" -> "beinghorizontal/awesome-quant"
"beinghorizontal/tpo_project" -> "beinghorizontal/tpo_btc"
"beinghorizontal/tpo_project" -> "bfolkens/py-market-profile"
"beinghorizontal/tpo_project" -> "beinghorizontal/BhavFnO"
"beinghorizontal/tpo_project" -> "sivamgr/tpo_market_profile"
"jigneshpylab/ZerodhaPythonScripts" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"jigneshpylab/ZerodhaPythonScripts" -> "debanshur/algotrading"
"jigneshpylab/ZerodhaPythonScripts" -> "ashishkumar30/Stock_Market_Live_Trading_using_AI"
"jigneshpylab/ZerodhaPythonScripts" -> "jugaad-py/jugaad-trader"
"jigneshpylab/ZerodhaPythonScripts" -> "sreenivasdoosa/sdoosa-algo-trade-app"
"jigneshpylab/ZerodhaPythonScripts" -> "NagarajuGunda/PyAlgoMate"
"jigneshpylab/ZerodhaPythonScripts" -> "harpalnain/ZerodhaAtom"
"jigneshpylab/ZerodhaPythonScripts" -> "arkochhar/Technical-Indicators"
"jigneshpylab/ZerodhaPythonScripts" -> "yashrj25/Entirety-Codes"
"jigneshpylab/ZerodhaPythonScripts" -> "krishnavelu/alice_blue"
"jigneshpylab/ZerodhaPythonScripts" -> "ranjanrak/optionchainstream"
"jigneshpylab/ZerodhaPythonScripts" -> "zerodha/kite-connect-python-example"
"jigneshpylab/ZerodhaPythonScripts" -> "zerodha/pykiteconnect"
"jigneshpylab/ZerodhaPythonScripts" -> "JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles"
"jigneshpylab/ZerodhaPythonScripts" -> "pranjal-joshi/Screeni-py"
"Options-Visualizer/Options-Visualizer.github.io" -> "vinaykale64/market-monitor"
"Options-Visualizer/Options-Visualizer.github.io" -> "ChiragJhawar/ProjectReward"
"Options-Visualizer/Options-Visualizer.github.io" -> "GrahamboJangles/PutPremiumProcessor"
"akurgat/automating-technical-analysis" -> "stockalgo/stolgo"
"akurgat/automating-technical-analysis" -> "white07S/TradingPatternScanner"
"akurgat/automating-technical-analysis" -> "marsandu/PriceAction"
"akurgat/automating-technical-analysis" -> "stefmolin/stock-analysis"
"akurgat/automating-technical-analysis" -> "day0market/support_resistance"
"akurgat/automating-technical-analysis" -> "devfinwiz/Fin-Maestro-Web"
"akurgat/automating-technical-analysis" -> "rolling-panda-san/notebooks"
"akurgat/automating-technical-analysis" -> "Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies"
"akurgat/automating-technical-analysis" -> "pranjal-joshi/Screeni-py"
"akurgat/automating-technical-analysis" -> "ArturSepp/QuantInvestStrats"
"jktis/Trade-Classification-Algorithms" -> "tr8dr/tseries-patterns"
"jktis/Trade-Classification-Algorithms" -> "sstoikov/microprice" ["e"=1]
"yacoubb/stock-trading-ml" -> "pskrunner14/trading-bot" ["e"=1]
"yacoubb/stock-trading-ml" -> "robertmartin8/MachineLearningStocks"
"yacoubb/stock-trading-ml" -> "pushpendughosh/Stock-market-forecasting"
"yacoubb/stock-trading-ml" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"yacoubb/stock-trading-ml" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"yacoubb/stock-trading-ml" -> "VivekPa/IntroNeuralNetworks"
"yacoubb/stock-trading-ml" -> "Albert-Z-Guo/Deep-Reinforcement-Stock-Trading" ["e"=1]
"yacoubb/stock-trading-ml" -> "dzitkowskik/StockPredictionRNN"
"yacoubb/stock-trading-ml" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python"
"yacoubb/stock-trading-ml" -> "miroblog/deep_rl_trader" ["e"=1]
"yacoubb/stock-trading-ml" -> "achillesrasquinha/bulbea"
"yacoubb/stock-trading-ml" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"yacoubb/stock-trading-ml" -> "NourozR/Stock-Price-Prediction-LSTM"
"yacoubb/stock-trading-ml" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"yacoubb/stock-trading-ml" -> "edwardhdlu/q-trader" ["e"=1]
"evdubs/renegade-way" -> "evdubs/chart-simulator"
"icoxfog417/awesome-financial-nlp" -> "ProsusAI/finBERT" ["e"=1]
"ChiragJhawar/ProjectReward" -> "ApurvShah007/Algorithmic-Trading"
"ChiragJhawar/ProjectReward" -> "Options-Visualizer/Options-Visualizer.github.io"
"ChiragJhawar/ProjectReward" -> "yzoz/python-option-calculator"
"ChiragJhawar/ProjectReward" -> "ApurvShah007/portfolio-optimizer"
"ChiragJhawar/ProjectReward" -> "vinaykale64/market-monitor"
"ChiragJhawar/ProjectReward" -> "ApurvShah007/Tilt-Bot-RC-Car"
"ChiragJhawar/ProjectReward" -> "GrahamboJangles/PutPremiumProcessor"
"ChiragJhawar/ProjectReward" -> "SC4RECOIN/FlowAlgo-Options-Trader"
"ChiragJhawar/ProjectReward" -> "Kamesh-K/Options-Visualization"
"ChiragJhawar/ProjectReward" -> "ApurvShah007/ApurvShah007.github.io"
"lit26/finvizfinance" -> "mariostoev/finviz"
"lit26/finvizfinance" -> "pmorissette/ffn"
"lit26/finvizfinance" -> "ArturSepp/QuantInvestStrats"
"lit26/finvizfinance" -> "mcdallas/wallstreet"
"lit26/finvizfinance" -> "shner-elmo/TradingView-Screener" ["e"=1]
"lit26/finvizfinance" -> "quant-science/sunday-quant-scientist"
"lit26/finvizfinance" -> "coding-kitties/investing-algorithm-framework"
"lit26/finvizfinance" -> "Hvass-Labs/FinanceOps"
"lit26/finvizfinance" -> "letianzj/QuantResearch"
"lit26/finvizfinance" -> "faizancodes/Automated-Fundamental-Analysis"
"lit26/finvizfinance" -> "jsmidt/QuantPy"
"lit26/finvizfinance" -> "hczhu/TickerTick-API"
"lit26/finvizfinance" -> "JerBouma/FinanceDatabase"
"lit26/finvizfinance" -> "shashankvemuri/Finance"
"lit26/finvizfinance" -> "OpenBB-finance/openbb-agents"
"tudorelu/pyjuque" -> "s-brez/trading-server" ["e"=1]
"tudorelu/pyjuque" -> "amor71/LiuAlgoTrader" ["e"=1]
"tudorelu/pyjuque" -> "ivopetiz/algotrading" ["e"=1]
"tudorelu/pyjuque" -> "alpacahq/example-scalping" ["e"=1]
"AnalyzerREST/python-tradingview-ta" -> "twopirllc/pandas-ta" ["e"=1]
"AnalyzerREST/python-tradingview-ta" -> "GregoryMorse/trendln" ["e"=1]
"AnalyzerREST/python-tradingview-ta" -> "peerchemist/finta" ["e"=1]
"Emsu/prophet" -> "benjaminmgross/visualize-wealth"
"Emsu/prophet" -> "ematvey/pybacktest"
"Emsu/prophet" -> "CarterBain/AlephNull"
"Emsu/prophet" -> "maihde/quant"
"Emsu/prophet" -> "panpanpandas/ultrafinance"
"Emsu/prophet" -> "fja05680/pinkfish"
"Emsu/prophet" -> "mhallsmoore/qsforex"
"Emsu/prophet" -> "constverum/Quantdom"
"Emsu/prophet" -> "twiecki/financial-analysis-python-tutorial"
"Emsu/prophet" -> "ranaroussi/qtpylib"
"Emsu/prophet" -> "sjev/trading-with-python"
"Emsu/prophet" -> "pmorissette/bt"
"Emsu/prophet" -> "bpsmith/tia"
"Emsu/prophet" -> "blampe/IbPy"
"SimFin/simfin-tutorials" -> "SimFin/simfin"
"SimFin/simfin-tutorials" -> "Hvass-Labs/FinanceOps"
"SimFin/simfin-tutorials" -> "razorhash/pyfmpcloud"
"scumabo/AI-for-Trading" -> "udacity/artificial-intelligence-for-trading"
"scumabo/AI-for-Trading" -> "michaelsyao/AI-for-Trading"
"scumabo/AI-for-Trading" -> "purvasingh96/AI-for-Trading"
"scumabo/AI-for-Trading" -> "ThomasGrivaz/ai-for-trading"
"jgpavez/LSTM---Stock-prediction" -> "tencia/stocks_rnn"
"jgpavez/LSTM---Stock-prediction" -> "dzitkowskik/StockPredictionRNN"
"jgpavez/LSTM---Stock-prediction" -> "christsaizyt/US-Stock-Market-Prediction-by-LSTM"
"jgpavez/LSTM---Stock-prediction" -> "wzchen/stock_market_prediction"
"jgpavez/LSTM---Stock-prediction" -> "CasiaFan/time_seires_prediction_using_lstm"
"jgpavez/LSTM---Stock-prediction" -> "kimber-chen/Tensorflow-for-stock-prediction"
"jgpavez/LSTM---Stock-prediction" -> "FraPochetti/StocksProject"
"jgpavez/LSTM---Stock-prediction" -> "TaifQureshi/Forex-Lstm"
"jgpavez/LSTM---Stock-prediction" -> "etai83/lstm_stock_prediction"
"jgpavez/LSTM---Stock-prediction" -> "RobRomijnders/LSTM_tsc"
"firmai/awesome-google-colab" -> "firmai/machine-learning-asset-management" ["e"=1]
"mortada/fredapi" -> "avelkoski/FRB"
"mortada/fredapi" -> "zachwill/fred"
"mortada/fredapi" -> "7astro7/full_fred"
"mortada/fredapi" -> "cuemacro/findatapy"
"mortada/fredapi" -> "quantopian/empyrical"
"mortada/fredapi" -> "letsgoexploring/fredpy"
"mortada/fredapi" -> "pydata/pandas-datareader"
"mortada/fredapi" -> "jjotterson/datapungi_fed"
"mortada/fredapi" -> "enthought/pyql"
"mortada/fredapi" -> "sec-edgar/sec-edgar"
"mortada/fredapi" -> "quantopian/pyfolio"
"mortada/fredapi" -> "domokane/FinancePy"
"mortada/fredapi" -> "quandl/quandl-python"
"mortada/fredapi" -> "rsheftel/pandas_market_calendars"
"mortada/fredapi" -> "pmorissette/ffn"
"shlomiku/zipline-trader" -> "alpacahq/pylivetrader"
"shlomiku/zipline-trader" -> "stefan-jansen/zipline-reloaded"
"shlomiku/zipline-trader" -> "alpacahq/pipeline-live"
"shlomiku/zipline-trader" -> "hhatefi/zipline_bundles"
"shlomiku/zipline-trader" -> "zipline-live/zipline"
"shlomiku/zipline-trader" -> "shlomiku/zipline-live2"
"shlomiku/zipline-trader" -> "stefan-jansen/pyfolio-reloaded"
"shlomiku/zipline-trader" -> "backtrader2/backtrader"
"shlomiku/zipline-trader" -> "alpacahq/alpaca-backtrader-api"
"shlomiku/zipline-trader" -> "hotchilianalytics/zipline-broker"
"shlomiku/zipline-trader" -> "quantrocket-llc/moonshot"
"shlomiku/zipline-trader" -> "pbharrin/alpha-compiler"
"shlomiku/zipline-trader" -> "fja05680/pinkfish"
"shlomiku/zipline-trader" -> "marketneutral/alphatools"
"chakki-works/CoARiJ" -> "chakki-works/xbrr"
"chakki-works/CoARiJ" -> "chakki-works/chABSA-dataset"
"amor71/LiuAlgoTrader" -> "ivopetiz/algotrading"
"amor71/LiuAlgoTrader" -> "letianzj/quanttrader"
"amor71/LiuAlgoTrader" -> "kieran-mackle/AutoTrader"
"amor71/LiuAlgoTrader" -> "alpacahq/example-scalping"
"amor71/LiuAlgoTrader" -> "s-brez/trading-server"
"amor71/LiuAlgoTrader" -> "Lumiwealth/lumibot"
"amor71/LiuAlgoTrader" -> "ranaroussi/qtpylib"
"amor71/LiuAlgoTrader" -> "michaelchu/optopsy"
"amor71/LiuAlgoTrader" -> "tudorelu/pyjuque" ["e"=1]
"amor71/LiuAlgoTrader" -> "AsyncAlgoTrading/aat"
"amor71/LiuAlgoTrader" -> "alpacahq/alpaca-backtrader-api"
"amor71/LiuAlgoTrader" -> "fmilthaler/FinQuant"
"amor71/LiuAlgoTrader" -> "Yvictor/TradingGym" ["e"=1]
"amor71/LiuAlgoTrader" -> "chrisconlan/algorithmic-trading-with-python"
"amor71/LiuAlgoTrader" -> "cuemacro/findatapy"
"algobulls/pyalgotrading" -> "algobulls/pyalgostrategypool"
"algobulls/pyalgotrading" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"algobulls/pyalgotrading" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"algobulls/pyalgotrading" -> "debanshur/algotrading"
"jugaad-py/jugaad-data" -> "aeron7/nsepython"
"jugaad-py/jugaad-data" -> "NSEDownload/NSEDownload"
"jugaad-py/jugaad-data" -> "jugaad-py/jugaad-trader"
"jugaad-py/jugaad-data" -> "swapniljariwala/nsepy"
"jugaad-py/jugaad-data" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"jugaad-py/jugaad-data" -> "vsjha18/nsetools"
"jugaad-py/jugaad-data" -> "deshwalmahesh/NSE-Stock-Scanner"
"jugaad-py/jugaad-data" -> "maanavshah/stock-market-india"
"jugaad-py/jugaad-data" -> "hi-imcodeman/stock-nse-india"
"jugaad-py/jugaad-data" -> "pranjal-joshi/Screeni-py"
"jugaad-py/jugaad-data" -> "ranjanrak/optionchainstream"
"jugaad-py/jugaad-data" -> "debaonline4u/NSE-Data"
"jugaad-py/jugaad-data" -> "pkjmesra/PKScreener"
"jugaad-py/jugaad-data" -> "srikar-kodakandla/fully-automated-nifty-options-trading"
"jugaad-py/jugaad-data" -> "yashrj25/Entirety-Codes"
"numancelik34/TimeSeries-GAN" -> "proceduralia/pytorch-GAN-timeseries"
"numancelik34/TimeSeries-GAN" -> "gioramponi/GAN_Time_Series"
"numancelik34/TimeSeries-GAN" -> "StoicGilgamesh/LSTM-GAN-"
"numancelik34/TimeSeries-GAN" -> "buriburisuri/timeseries_gan"
"alpacahq/alpaca-ts" -> "alpacahq/alpaca-trade-api-js"
"alpacahq/alpaca-ts" -> "117/repeat"
"alpacahq/alpaca-ts" -> "alpacahq/typescript-sdk"
"TikhonJelvis/RL-book" -> "coverdrive/technical-documents" ["e"=1]
"TikhonJelvis/RL-book" -> "coverdrive/MDP-DP-RL" ["e"=1]
"TikhonJelvis/RL-book" -> "zcakhaa/Multi-Horizon-Forecasting-for-Limit-Order-Books" ["e"=1]
"TikhonJelvis/RL-book" -> "mfrdixon/dq-MM" ["e"=1]
"TikhonJelvis/RL-book" -> "zcakhaa/DeepLOB-Deep-Convolutional-Neural-Networks-for-Limit-Order-Books" ["e"=1]
"TikhonJelvis/RL-book" -> "emoen/Machine-Learning-for-Asset-Managers"
"TikhonJelvis/RL-book" -> "mfrdixon/ML_Finance_Codes"
"TikhonJelvis/RL-book" -> "sebjai/robust-risk-aware-rl"
"TikhonJelvis/RL-book" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"TikhonJelvis/RL-book" -> "Finance-781/FinML"
"TikhonJelvis/RL-book" -> "cvxgrp/cvxportfolio"
"TikhonJelvis/RL-book" -> "AI4Finance-Foundation/FinRL-Meta" ["e"=1]
"TikhonJelvis/RL-book" -> "boyboi86/AFML"
"TikhonJelvis/RL-book" -> "hansbuehler/deephedging"
"TikhonJelvis/RL-book" -> "selimamrouni/Deep-Portfolio-Management-Reinforcement-Learning" ["e"=1]
"zwdnet/MyQuant" -> "Ckend/pythondict-quant" ["e"=1]
"differential-machine-learning/notebooks" -> "differential-machine-learning/appendices"
"MS20190155/Measuring-Corporate-Culture-Using-Machine-Learning" -> "KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data"
"kengerlwl/ChipDistribution" -> "WestXu/support_resistance_line" ["e"=1]
"jamesmawm/IB-Trading-Models-And-Backtester" -> "godelsmarket/IBHistoricalDataDownloader"
"jamesmawm/IB-Trading-Models-And-Backtester" -> "rudimeier/twstools"
"jamesmawm/IB-Trading-Models-And-Backtester" -> "clifton/docker-ib-gateway"
"albertosantini/node-finance" -> "albertosantini/conpa"
"yya518/FinBERT" -> "ProsusAI/finBERT" ["e"=1]
"yya518/FinBERT" -> "MS20190155/Measuring-Corporate-Culture-Using-Machine-Learning" ["e"=1]
"yya518/FinBERT" -> "lefterisloukas/edgar-crawler" ["e"=1]
"yya518/FinBERT" -> "bkelly-lab/ReplicationCrisis" ["e"=1]
"yya518/FinBERT" -> "AI4Finance-Foundation/FinNLP" ["e"=1]
"derekbanas/matplotlib" -> "derekbanas/pandas-tutorial"
"derekbanas/matplotlib" -> "derekbanas/NumPy-Tutorial"
"derekbanas/matplotlib" -> "derekbanas/seaborn"
"derekbanas/matplotlib" -> "derekbanas/TimeSeriesAnalysis"
"derekbanas/matplotlib" -> "derekbanas/plotly-tutorial"
"marcosan93/Stock-Analyzer" -> "marcosan93/Stock-Performance-Predictor-2.0"
"harpalnain/ZerodhaAtom" -> "jugaad-py/jugaad-trader"
"harpalnain/ZerodhaAtom" -> "debanshur/algotrading"
"harpalnain/ZerodhaAtom" -> "karthikramx/algorithmic-trading"
"systematicinvestor/SIT" -> "chrism2671/PyTrendFollow" ["e"=1]
"stoqey/ib" -> "maxicus/ib-tws-api"
"stoqey/ib" -> "UnusualAlpha/ib-gateway-docker"
"stoqey/ib" -> "stoqey/ibkr"
"stoqey/ib" -> "waytrade/ib-gateway-docker"
"stoqey/ib" -> "Voyz/ibeam"
"stoqey/ib" -> "extrange/ibkr-docker"
"stoqey/ib" -> "gnzsnz/ib-gateway-docker"
"stoqey/ib" -> "manhinhang/ib-gateway-docker"
"stoqey/ib" -> "pilwon/node-ib"
"NehrenD/algo_trading_and_quant_strategies" -> "tr8dr/tseries-patterns"
"NehrenD/algo_trading_and_quant_strategies" -> "doda/advances-in-financial-ml-notes"
"NehrenD/algo_trading_and_quant_strategies" -> "maximemorariu/mpoints" ["e"=1]
"alvarobartt/trendet" -> "alvarobartt/pyrtfolio"
"alvarobartt/trendet" -> "alvarobartt/investpy"
"alvarobartt/trendet" -> "GregoryMorse/trendln"
"alvarobartt/trendet" -> "alvarobartt/investiny"
"alvarobartt/trendet" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"alvarobartt/trendet" -> "marketneutral/alphatools"
"alvarobartt/trendet" -> "ChillarAnand/stocktrends"
"alvarobartt/trendet" -> "day0market/support_resistance"
"alvarobartt/trendet" -> "tudorelu/pyjuque" ["e"=1]
"alvarobartt/trendet" -> "mementum/bta-lib"
"alvarobartt/trendet" -> "rolling-panda-san/notebooks"
"doda/advances-in-financial-ml-notes" -> "boyboi86/AFML"
"doda/advances-in-financial-ml-notes" -> "jjakimoto/finance_ml"
"doda/advances-in-financial-ml-notes" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"doda/advances-in-financial-ml-notes" -> "JackBrady/Financial-Machine-Learning"
"doda/advances-in-financial-ml-notes" -> "fernandodelacalle/adv-financial-ml-marcos-exercises"
"doda/advances-in-financial-ml-notes" -> "peng3738/Selfstudy-note-for-advances-in-financial-machine-learning"
"doda/advances-in-financial-ml-notes" -> "ki33elev/Adv_Fin_ML"
"doda/advances-in-financial-ml-notes" -> "emoen/Machine-Learning-for-Asset-Managers"
"doda/advances-in-financial-ml-notes" -> "boyboi86/mlfinlab"
"doda/advances-in-financial-ml-notes" -> "LechGrzelak/QuantFinanceBook"
"dvasdekis/ib-gateway-docker-gcp" -> "antequant/ib-gateway-docker"
"firmai/atspy" -> "firmai/machine-learning-asset-management" ["e"=1]
"tr8dr/tseries-patterns" -> "jktis/Trade-Classification-Algorithms"
"tr8dr/tseries-patterns" -> "Globe-Research/deep-orderbook" ["e"=1]
"tr8dr/tseries-patterns" -> "zcakhaa/Multi-Horizon-Forecasting-for-Limit-Order-Books" ["e"=1]
"tr8dr/tseries-patterns" -> "BlackArbsCEO/mixture_model_trading_public"
"tr8dr/tseries-patterns" -> "fracdiff/fracdiff"
"tr8dr/tseries-patterns" -> "mmargenot/machine-learning-market-maker" ["e"=1]
"tr8dr/tseries-patterns" -> "theopenstreet/VPIN_HFT" ["e"=1]
"tr8dr/tseries-patterns" -> "kieranjwood/slow-momentum-fast-reversion" ["e"=1]
"pushpendughosh/Stock-market-forecasting" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"pushpendughosh/Stock-market-forecasting" -> "Rajat-dhyani/Stock-Price-Predictor"
"pushpendughosh/Stock-market-forecasting" -> "NourozR/Stock-Price-Prediction-LSTM"
"pushpendughosh/Stock-market-forecasting" -> "duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network"
"pushpendughosh/Stock-market-forecasting" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"pushpendughosh/Stock-market-forecasting" -> "dzitkowskik/StockPredictionRNN"
"pushpendughosh/Stock-market-forecasting" -> "yacoubb/stock-trading-ml"
"pushpendughosh/Stock-market-forecasting" -> "scorpionhiccup/StockPricePrediction"
"pushpendughosh/Stock-market-forecasting" -> "NGYB/Stocks"
"pushpendughosh/Stock-market-forecasting" -> "cbailes/awesome-deep-trading"
"pushpendughosh/Stock-market-forecasting" -> "jmartinezheras/reproduce-stock-market-direction-random-forests"
"pushpendughosh/Stock-market-forecasting" -> "timestocome/Test-stock-prediction-algorithms"
"pushpendughosh/Stock-market-forecasting" -> "robertmartin8/MachineLearningStocks"
"pushpendughosh/Stock-market-forecasting" -> "Hvass-Labs/FinanceOps"
"pushpendughosh/Stock-market-forecasting" -> "makaveli10/StockPrediction_Transformer" ["e"=1]
"ZENALC/algobot" -> "ivopetiz/algotrading" ["e"=1]
"ZENALC/algobot" -> "s-brez/trading-server" ["e"=1]
"rudimeier/twstools" -> "bdkearns/twspy"
"rudimeier/twstools" -> "rudimeier/twsapi"
"rudimeier/twstools" -> "godelsmarket/IBHistoricalDataDownloader"
"PythonForForex/Interactive-brokers-python-api-guide" -> "areed1192/interactive-broker-python-api"
"PythonForForex/Interactive-brokers-python-api-guide" -> "PythonForForex/ib_insync-guide-interactive-brokers"
"PythonForForex/Interactive-brokers-python-api-guide" -> "Jake0303/InteractiveBrokersPythonBot"
"PythonForForex/Interactive-brokers-python-api-guide" -> "areed1192/interactive-brokers-api"
"PythonForForex/Interactive-brokers-python-api-guide" -> "corbinbalzan/IBAPICode"
"PythonForForex/Interactive-brokers-python-api-guide" -> "jamesmawm/IB-Trading-Models-And-Backtester"
"PythonForForex/Interactive-brokers-python-api-guide" -> "hackingthemarkets/tradingview-interactive-brokers"
"PythonForForex/Interactive-brokers-python-api-guide" -> "hackingthemarkets/interactive-brokers-demo"
"PythonForForex/Interactive-brokers-python-api-guide" -> "AlexShakaev/backtesting_and_algotrading_options_with_Interactive_Brokers_API"
"PythonForForex/Interactive-brokers-python-api-guide" -> "ranaroussi/ezibpy"
"tdmdal/rl-hedge-2019" -> "fschur/Deep-Reinforcement-Learning-for-Hedging"
"tdmdal/rl-hedge-2019" -> "rotmanfinhub/gamma-vega-rl-hedging"
"jason-ash/pyesg" -> "lifelib-dev/lifelib"
"jason-ash/pyesg" -> "genedan/actuarial-foss"
"jason-ash/pyesg" -> "JuliaActuary/LifeContingencies.jl"
"jason-ash/pyesg" -> "trollefson/elizur"
"jason-ash/pyesg" -> "Systemorph/IFRS17CalculationEngine"
"jason-ash/pyesg" -> "franciscogarate/pyliferisk"
"jason-ash/pyesg" -> "casact/FASLR"
"genedan/actuarial-foss" -> "casact/FASLR"
"genedan/actuarial-foss" -> "genedan/MIES"
"genedan/actuarial-foss" -> "JuliaActuary/LifeContingencies.jl"
"genedan/actuarial-foss" -> "MHaringa/insurancerating"
"genedan/actuarial-foss" -> "ActuariesInstitute/cookbook"
"genedan/actuarial-foss" -> "OpenActTexts/Loss-Data-Analytics"
"genedan/actuarial-foss" -> "spedygiorgio/lifecontingencies"
"TheFourGreatErrors/alpha-rptr" -> "s-brez/trading-server" ["e"=1]
"TheFourGreatErrors/alpha-rptr" -> "ivopetiz/algotrading" ["e"=1]
"TheFourGreatErrors/alpha-rptr" -> "jrmeier/fast-trade" ["e"=1]
"TheFourGreatErrors/alpha-rptr" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance" ["e"=1]
"sreenivasdoosa/sdoosa-algo-trade-app" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"sreenivasdoosa/sdoosa-algo-trade-app" -> "NagarajuGunda/PyAlgoMate"
"sreenivasdoosa/sdoosa-algo-trade-app" -> "jigneshpylab/ZerodhaPythonScripts"
"sreenivasdoosa/sdoosa-algo-trade-app" -> "yashrj25/Entirety-Codes"
"sreenivasdoosa/sdoosa-algo-trade-app" -> "ranjanrak/optionchainstream"
"sreenivasdoosa/sdoosa-algo-trade-app" -> "imvinaypatil/kinetick"
"sreenivasdoosa/sdoosa-algo-trade-app" -> "algonitish/SwissAlgoKnife"
"sreenivasdoosa/sdoosa-algo-trade-app" -> "debanshur/algotrading"
"coding-kitties/investing-algorithm-framework" -> "ArturSepp/QuantInvestStrats"
"coding-kitties/investing-algorithm-framework" -> "letianzj/quanttrader"
"coding-kitties/investing-algorithm-framework" -> "rolling-panda-san/notebooks"
"coding-kitties/investing-algorithm-framework" -> "ivopetiz/algotrading"
"coding-kitties/investing-algorithm-framework" -> "jo-cho/Technical_Analysis_and_Feature_Engineering"
"coding-kitties/investing-algorithm-framework" -> "rgaveiga/optionlab"
"coding-kitties/investing-algorithm-framework" -> "LechGrzelak/QuantFinanceBook"
"coding-kitties/investing-algorithm-framework" -> "quant-science/sunday-quant-scientist"
"coding-kitties/investing-algorithm-framework" -> "gbeced/basana"
"coding-kitties/investing-algorithm-framework" -> "jsmidt/QuantPy"
"coding-kitties/investing-algorithm-framework" -> "mr-easy/streaming_indicators"
"coding-kitties/investing-algorithm-framework" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"coding-kitties/investing-algorithm-framework" -> "skfolio/skfolio"
"coding-kitties/investing-algorithm-framework" -> "jrmeier/fast-trade"
"coding-kitties/investing-algorithm-framework" -> "enthought/pyql"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "PacktPublishing/Learn-Algorithmic-Trading"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "PacktPublishing/Python-for-Finance-Cookbook"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "PacktPublishing/Hands-On-Financial-Trading-with-Python"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "algobulls/pyalgostrategypool"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "algobulls/pyalgotrading"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "yhilpisch/py4at"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "JerBouma/AlgorithmicTrading"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "chrisconlan/algorithmic-trading-with-python"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "letianzj/quanttrader"
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" -> "LechGrzelak/QuantFinanceBook"
"aeron7/nsepython" -> "jugaad-py/jugaad-data"
"aeron7/nsepython" -> "deshwalmahesh/NSE-Stock-Scanner"
"aeron7/nsepython" -> "aeron7/BankNIFTY-Golden-Ratio-Strategy"
"aeron7/nsepython" -> "swapniljariwala/nsepy"
"aeron7/nsepython" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"aeron7/nsepython" -> "vsjha18/nsetools"
"aeron7/nsepython" -> "jugaad-py/jugaad-trader"
"aeron7/nsepython" -> "NSEDownload/NSEDownload"
"aeron7/nsepython" -> "pranjal-joshi/Screeni-py"
"aeron7/nsepython" -> "imvinaypatil/kinetick"
"aeron7/nsepython" -> "ranjanrak/optionchainstream"
"aeron7/nsepython" -> "pkjmesra/PKScreener"
"aeron7/nsepython" -> "RuchiTanmay/nselib"
"aeron7/nsepython" -> "krishnavelu/alice_blue"
"aeron7/nsepython" -> "srikar-kodakandla/fully-automated-nifty-options-trading"
"johnbywater/quantdsl" -> "opendoor-labs/pyfin"
"johnbywater/quantdsl" -> "llazzaro/analyzer"
"johnbywater/quantdsl" -> "jeffrey-liang/quantitative"
"johnbywater/quantdsl" -> "enthought/pyql"
"johnbywater/quantdsl" -> "vollib/vollib"
"johnbywater/quantdsl" -> "benjaminmgross/visualize-wealth"
"johnbywater/quantdsl" -> "jsmidt/QuantPy"
"johnbywater/quantdsl" -> "rochars/trade"
"johnbywater/quantdsl" -> "joequant/algobroker"
"johnbywater/quantdsl" -> "wegamekinglc/VisualPortfolio"
"johnbywater/quantdsl" -> "alpha-miner/Finance-Python"
"johnbywater/quantdsl" -> "bpsmith/tia"
"johnbywater/quantdsl" -> "ematvey/pybacktest"
"johnbywater/quantdsl" -> "quantmind/dynts"
"johnbywater/quantdsl" -> "alpacahq/pipeline-live"
"nhaga/QuantLib-Python-Docs" -> "nhaga/Awesome-Quant-Machine-Learning-Trading"
"nhaga/QuantLib-Python-Docs" -> "sylam/riskflow"
"edgarminers/python-edgar" -> "joeyism/py-edgar"
"edgarminers/python-edgar" -> "jadchaar/sec-edgar-downloader"
"edgarminers/python-edgar" -> "sec-edgar/sec-edgar"
"edgarminers/python-edgar" -> "alions7000/SEC-EDGAR-text"
"edgarminers/python-edgar" -> "lukerosiak/pysec"
"edgarminers/python-edgar" -> "datasets/edgar"
"edgarminers/python-edgar" -> "tooksoi/ScraXBRL"
"edgarminers/python-edgar" -> "janlukasschroeder/sec-api"
"edgarminers/python-edgar" -> "Arelle/EdgarRenderer"
"edgarminers/python-edgar" -> "tzuhsial/edgar-10k-mda"
"edgarminers/python-edgar" -> "farhadab/sec-edgar-financials"
"edgarminers/python-edgar" -> "ryansmccoy/py-sec-edgar"
"edgarminers/python-edgar" -> "gaulinmp/pyedgar"
"edgarminers/python-edgar" -> "LexPredict/openedgar"
"edgarminers/python-edgar" -> "altova/SECDB"
"derekbanas/NumPy-Tutorial" -> "derekbanas/pandas-tutorial"
"derekbanas/NumPy-Tutorial" -> "derekbanas/matplotlib"
"derekbanas/NumPy-Tutorial" -> "derekbanas/PythonTutorial"
"Feng-CityUHK/EquityCharacteristics" -> "jasonzy121/Deep_Learning_Asset_Pricing"
"Feng-CityUHK/EquityCharacteristics" -> "hrbzkm98/ml-research"
"Feng-CityUHK/EquityCharacteristics" -> "fkempf92/FactorData"
"Feng-CityUHK/EquityCharacteristics" -> "bkelly-lab/ReplicationCrisis"
"THINK989/Real-Time-Stock-Market-Prediction-using-Ensemble-DL-and-Rainbow-DQN" -> "CodeLogist/RL-Forex-trader-LSTM" ["e"=1]
"spidezad/yahoo_finance_data_extract" -> "narasimhaprasad/StockPy"
"ikbale/fmp_python" -> "daxm/fmpsdk"
"cverluise/PatCit" -> "cverluise/openPatstat"
"cverluise/PatCit" -> "cverluise/patentcity"
"sparkstartconsulting/IBKR-API-Rust" -> "wboayue/rust-ibapi"
"sparkstartconsulting/IBKR-API-Rust" -> "rolandgg/rust_ib_api"
"Roshanmahes/Quant-Finance" -> "Roshanmahes/Python-for-Teachers"
"derekbanas/pandas-tutorial" -> "derekbanas/NumPy-Tutorial"
"derekbanas/pandas-tutorial" -> "derekbanas/matplotlib"
"derekbanas/pandas-tutorial" -> "derekbanas/PythonTutorial"
"derekbanas/pandas-tutorial" -> "derekbanas/TimeSeriesAnalysis"
"derekbanas/pandas-tutorial" -> "derekbanas/plotly-tutorial"
"astro30/valinvest" -> "VincentTatan/ValueInvesting"
"astro30/valinvest" -> "dbogatic/value_investing"
"astro30/valinvest" -> "ketan1741/Benjamin-Graham-and-Warren-Buffett-Model-Stock-Exchange-"
"astro30/valinvest" -> "greyblake/humble-investing"
"astro30/valinvest" -> "rbhatia46/Greenblatt-Magic-Formula-Value-Investing"
"astro30/valinvest" -> "euclidjda/value-investing-studies"
"astro30/valinvest" -> "portfolioplus/pystockfilter"
"manjunath5496/Best-Investing-Books" -> "greyblake/humble-investing"
"TamerKhraisha/uspto-patent-data-parser" -> "hopped/uspto-patents-parsing-tools"
"TamerKhraisha/uspto-patent-data-parser" -> "daneads/pypatent"
"TamerKhraisha/uspto-patent-data-parser" -> "lettergram/parse-uspto-xml"
"cverluise/patentcity" -> "cverluise/openPatstat"
"Williano/django-bona-blog" -> "MicroPyramid/django-blog-it" ["e"=1]
"FyersDev/fyers-api-sample-code" -> "tkanhe/Fyers-API-Access-Token-Generation-V2"
"FyersDev/fyers-api-sample-code" -> "srikar-kodakandla/algo-trading-using-fyers-broker-api"
"derekbanas/seaborn" -> "derekbanas/matplotlib"
"derekbanas/seaborn" -> "derekbanas/NumPy-Tutorial"
"derekbanas/seaborn" -> "derekbanas/pandas-tutorial"
"derekbanas/seaborn" -> "derekbanas/TimeSeriesAnalysis"
"derekbanas/seaborn" -> "derekbanas/plotly-tutorial"
"hopped/uspto-patents-parsing-tools" -> "SmartDataAnalytics/linked-uspto-patent-data"
"krishnakuruvadi/portfoliomanager" -> "NayakwadiS/Forecasting_Mutual_Funds"
"cderinbogaz/inpredo" -> "raiak82/LongShortMemorymodelNifty"
"ApurvShah007/Algorithmic-Trading" -> "ApurvShah007/portfolio-optimizer"
"ApurvShah007/Algorithmic-Trading" -> "ApurvShah007/Tilt-Bot-RC-Car"
"ApurvShah007/Algorithmic-Trading" -> "ApurvShah007/ApurvShah007.github.io"
"ApurvShah007/Algorithmic-Trading" -> "ChiragJhawar/ProjectReward"
"ApurvShah007/Algorithmic-Trading" -> "ApurvShah007/ApurvShah007"
"marc-henrard/algorithmic-differentiation-book" -> "asavine/Scripting"
"ItamarRocha/binary-bot" -> "mariofrans/PROJECT__AI-Binary-Options-Trading-Bot"
"ItamarRocha/binary-bot" -> "iancamleite/prediciting-binary-options"
"ItamarRocha/binary-bot" -> "omarmagh/iq_option_BOT"
"ItamarRocha/binary-bot" -> "metheuspsc/Iq_Option_Bots"
"ItamarRocha/binary-bot" -> "CarlosGatti/bot-python-iq-option"
"ItamarRocha/binary-bot" -> "iqoptionapi/iqoptionapi"
"ItamarRocha/binary-bot" -> "AlanForester/IQOption-Bot-Trade-System"
"aeron7/BankNIFTY-Golden-Ratio-Strategy" -> "aeron7/Mastering-AlgoTrading-A-Beginners-Guide-using-KiteConnect-API"
"storieswithsiva/Stock-Market-Analysis" -> "turing-usp/Momentum"
"dkyol/Asset-Pricing-Model" -> "RichardS0268/Autoencoder-Asset-Pricing-Models"
"turing-usp/Aprendizado-por-Reforco" -> "turing-usp/turingquant"
"turing-usp/Aprendizado-por-Reforco" -> "turing-usp/Arvore-de-Habilidades"
"turing-usp/Aprendizado-por-Reforco" -> "turing-usp/Turing-Talks"
"turing-usp/Aprendizado-por-Reforco" -> "turing-usp/fernando-pessoa"
"turing-usp/Aprendizado-por-Reforco" -> "turing-usp/codificacao_de_rostos"
"turing-usp/Aprendizado-por-Reforco" -> "turing-usp/Quant-basics"
"turing-usp/Aprendizado-por-Reforco" -> "turing-usp/Workshop-de-Aprendizado-por-Reforco"
"NayakwadiS/mftool" -> "NayakwadiS/Forecasting_Mutual_Funds"
"NayakwadiS/mftool" -> "codereverser/folioman"
"NayakwadiS/mftool" -> "codereverser/casparser"
"NSEDownload/NSEDownload" -> "jugaad-py/jugaad-data"
"NSEDownload/NSEDownload" -> "aeron7/nsepython"
"NSEDownload/NSEDownload" -> "mehul90/NSE_TRADER"
"NSEDownload/NSEDownload" -> "swapniljariwala/nsepy"
"NSEDownload/NSEDownload" -> "upendrasingh12/Algorithmic-trading"
"manhinhang/ib-gateway-docker" -> "UnusualAlpha/ib-gateway-docker"
"manhinhang/ib-gateway-docker" -> "waytrade/ib-gateway-docker"
"happydasch/btplotting" -> "verybadsoldier/backtrader_plotting"
"happydasch/btplotting" -> "iniself/noba"
"happydasch/btplotting" -> "Skinok/backtrader-pyqt-ui"
"happydasch/btplotting" -> "lamkashingpaul/backtrader_plotly"
"happydasch/btplotting" -> "backtrader2/backtrader"
"happydasch/btplotting" -> "Dave-Vallance/bt-ccxt-store"
"happydasch/btplotting" -> "happydasch/btconfig"
"happydasch/btplotting" -> "iniself/backtrader_bokeh"
"happydasch/btplotting" -> "neilsmurphy/backtrader_template"
"happydasch/btplotting" -> "Ckend/pythondict-quant"
"happydasch/btplotting" -> "rodrigo-brito/backtrader-binance-bot"
"happydasch/btplotting" -> "khramkov/Backtrader-MQL5-API" ["e"=1]
"happydasch/btplotting" -> "dimnorin/backtrader-live"
"happydasch/btplotting" -> "day0market/support_resistance"
"happydasch/btplotting" -> "jrothschild33/learn_backtrader" ["e"=1]
"xiaohan2012/twitter-sent-dnn" -> "jasti/Stock-Predictor" ["e"=1]
"sle14/Vol-surface-parametrisation" -> "JunbeomL22/SurfaceFitting"
"sle14/Vol-surface-parametrisation" -> "sle14/Options-market-making-using-a-stochastic-control-approach"
"danielm-github/patentsmatch_bingsearchapproach" -> "KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data"
"marcosan93/Stock-Performance-Predictor-2.0" -> "marcosan93/Stock-Analyzer"
"mChataign/DupireNN" -> "mChataign/Beyond-Surrogate-Modeling-Learning-the-Local-Volatility-Via-Shape-Constraints"
"opendoor-labs/pyfin" -> "johnbywater/quantdsl"
"opendoor-labs/pyfin" -> "yassinemaaroufi/MibianLib"
"opendoor-labs/pyfin" -> "vollib/vollib"
"opendoor-labs/pyfin" -> "llazzaro/analyzer"
"opendoor-labs/pyfin" -> "jsmidt/QuantPy"
"opendoor-labs/pyfin" -> "boyac/pyOptionPricing"
"opendoor-labs/pyfin" -> "jeffrey-liang/quantitative"
"opendoor-labs/pyfin" -> "enthought/pyql"
"opendoor-labs/pyfin" -> "alpha-miner/Finance-Python"
"opendoor-labs/pyfin" -> "quantmind/dynts"
"opendoor-labs/pyfin" -> "benjaminmgross/visualize-wealth"
"opendoor-labs/pyfin" -> "dedwards25/Python_Option_Pricing"
"opendoor-labs/pyfin" -> "yzoz/python-option-calculator"
"opendoor-labs/pyfin" -> "bpsmith/tia"
"opendoor-labs/pyfin" -> "joequant/algobroker"
"cl-tohoku/bert-japanese" -> "chakki-works/chABSA-dataset" ["e"=1]
"alvarobartt/pyrtfolio" -> "alvarobartt/trendet"
"hackingthemarkets/stockscreener" -> "lseffer/stock_screener" ["e"=1]
"ashishkumar30/Django-Projects" -> "ashishkumar30/UpGrad-GUI-Project-2018"
"CarlosGatti/bot-python-iq-option" -> "irangarcia/binary-options-trading-bot"
"CarlosGatti/bot-python-iq-option" -> "metheuspsc/Iq_Option_Bots"
"CarlosGatti/bot-python-iq-option" -> "mrfhink/IQ-binary-robot"
"CarlosGatti/bot-python-iq-option" -> "mariofrans/PROJECT__AI-Binary-Options-Trading-Bot"
"CarlosGatti/bot-python-iq-option" -> "omarmagh/iq_option_BOT"
"firmai/tsgan" -> "firmai/mtss-gan"
"cuemacro/teaching" -> "cuemacro/FinancePy"
"cuemacro/teaching" -> "cuemacro/cufflinks"
"colinalexander/IbPython3" -> "robcarver17/ibswigsystematicexamples"
"casact/PCDM" -> "casact/raw_package"
"niXman/binapi" -> "AsyncAlgoTrading/aat" ["e"=1]
"mavenium/PyEditorial" -> "MicroPyramid/django-blog-it" ["e"=1]
"gabrielepompa88/pyBlackScholesAnalytics" -> "yzoz/python-option-calculator"
"matheusbfernandes/stock-market-prediction" -> "SnehJain/Deep-Neural-Networks-For-Stock-Price-Prediction"
"matheusbfernandes/stock-market-prediction" -> "vietsDeng/Stock-Prediction"
"matheusbfernandes/stock-market-prediction" -> "Connie-Wild/stock_market_price_prediction" ["e"=1]
"Kamesh-K/Options-Visualization" -> "GrahamboJangles/PutPremiumProcessor"
"kasaai/simulationmachine" -> "kasaai/pc-pricing-tutorial"
"jugaad-py/jugaad-trader" -> "harpalnain/ZerodhaAtom"
"jugaad-py/jugaad-trader" -> "jigneshpylab/ZerodhaPythonScripts"
"jugaad-py/jugaad-trader" -> "jugaad-py/jugaad-data"
"jugaad-py/jugaad-trader" -> "ranjanrak/optionchainstream"
"jugaad-py/jugaad-trader" -> "debanshur/algotrading"
"jugaad-py/jugaad-trader" -> "yashrj25/Entirety-Codes"
"jugaad-py/jugaad-trader" -> "aeron7/nsepython"
"jugaad-py/jugaad-trader" -> "abinthomasonline/findata"
"jugaad-py/jugaad-trader" -> "imvinaypatil/kinetick"
"jugaad-py/jugaad-trader" -> "JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles"
"jugaad-py/jugaad-trader" -> "srikar-kodakandla/fully-automated-nifty-options-trading"
"rbhatia46/Greenblatt-Magic-Formula-Value-Investing" -> "dbogatic/value_investing"
"LichAmnesia/Robinhood" -> "robinhood-unofficial/pyrh"
"beinghorizontal/awesome-quant" -> "beinghorizontal/Support-Resistance"
"beinghorizontal/awesome-quant" -> "beinghorizontal/datascience"
"CasperHogenboom/WGAN_financial_time-series" -> "JamesSullivan/temporalCN"
"harvey1673/pyktrader" -> "wegamekinglc/VisualPortfolio" ["e"=1]
"debanshur/algotrading" -> "jigneshpylab/ZerodhaPythonScripts"
"debanshur/algotrading" -> "harpalnain/ZerodhaAtom"
"debanshur/algotrading" -> "jugaad-py/jugaad-trader"
"debanshur/algotrading" -> "joesinghh/AlgoApp"
"debanshur/algotrading" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"debanshur/algotrading" -> "anandaanv/zerodha-algo-trading"
"debanshur/algotrading" -> "DarthRecca/AlgorithmicTrading"
"wangys96/SVI-Volatility-Surface-Calibration" -> "thedatabeat/SVI"
"wangys96/SVI-Volatility-Surface-Calibration" -> "rfbressan/py_ssvi"
"wangys96/SVI-Volatility-Surface-Calibration" -> "kangzhan/SVI-Surface"
"wangys96/SVI-Volatility-Surface-Calibration" -> "JunbeomL22/SurfaceFitting"
"wangys96/SVI-Volatility-Surface-Calibration" -> "JackJacquier/SSVI"
"asafravid/sss" -> "Eleven-Trading/strade"
"asafravid/sss" -> "devfinwiz/Stock_Screeners_Raw"
"asafravid/sss" -> "jackmoody11/stockscore"
"asafravid/sss" -> "lseffer/stock_screener"
"asafravid/sss" -> "yongghongg/stock-screener"
"OpenApi-5p/py5paisa" -> "dhan-oss/DhanHQ-py"
"Lightstreamer/Lightstreamer-example-StockList-client-python" -> "ig-python/ig-markets-rest-api-python-library"
"tushaar82/Upstox-Algo-Trading" -> "GireeshS22/upstox"
"MicroPyramid/micro-finance" -> "MicroPyramid/python-validate"
"MicroPyramid/micro-finance" -> "MicroPyramid/gitlab-webhook-django"
"MicroPyramid/micro-finance" -> "MicroPyramid/pietrack"
"MicroPyramid/micro-finance" -> "MicroPyramid/microstorage"
"MicroPyramid/micro-finance" -> "MicroPyramid/Mongo-Slice"
"MicroPyramid/micro-finance" -> "MicroPyramid/fetch-tweets"
"MicroPyramid/micro-finance" -> "MicroPyramid/microsocial"
"MicroPyramid/micro-finance" -> "MicroPyramid/django-seo"
"MicroPyramid/micro-finance" -> "MicroPyramid/RaspIce"
"MicroPyramid/micro-finance" -> "MicroPyramid/knol-bits"
"MicroPyramid/micro-finance" -> "MicroPyramid/django-simple-pagination"
"MicroPyramid/micro-finance" -> "MicroPyramid/django-payu"
"MicroPyramid/micro-finance" -> "MicroPyramid/microurl"
"MicroPyramid/micro-finance" -> "MicroPyramid/IAM-Manager"
"MicroPyramid/micro-finance" -> "MicroPyramid/deploy-python"
"bloomberg/quant-research" -> "Michalos88/Quant-Projects"
"bloomberg/quant-research" -> "StockGram/Intelligent-Quantitative-Trading"
"judopro/Stock_Support_Resistance_ML" -> "sohandillikar/SupportResistance"
"arshyasharifian/investbot" -> "hackingthemarkets/alpaca" ["e"=1]
"amit0rana/betterOptionsTrading" -> "algo2t/alphatrade"
"amit0rana/betterOptionsTrading" -> "NagarajuGunda/PyAlgoMate"
"jiehsheng/PatentTransformer" -> "jiehsheng/PatentBERT"
"JorgeBeserra/IqOptionApiDotNet" -> "MatheusGatti/Copiador-De-Entradas"
"jiehsheng/PatentBERT" -> "jiehsheng/PatentTransformer"
"jiehsheng/PatentBERT" -> "AI-Growth-Lab/PatentSBERTa"
"jiehsheng/PatentBERT" -> "helmersl/patent_similarity_search"
"jiehsheng/PatentBERT" -> "ryanwhalen/patent_similarity_data"
"rrfaria/iqoption-bot" -> "rrfaria/IQOPTION-ML-TRADER"
"rrfaria/iqoption-bot" -> "AlanForester/IQOption-Bot-Trade-System"
"rrfaria/iqoption-bot" -> "arun-mansa/tradingbot"
"rudimeier/twsapi" -> "JanBoonen/TwsApiCpp"
"rudimeier/twsapi" -> "rudimeier/twstools"
"rudimeier/twsapi" -> "bdkearns/twspy"
"Nasdaq/NasdaqCloudDataService-SDK-Java" -> "Nasdaq/NasdaqCloudDataService-SDK-Python"
"MicroPyramid/MicroSite" -> "MicroPyramid/microurl"
"MicroPyramid/MicroSite" -> "MicroPyramid/django-seo"
"MicroPyramid/MicroSite" -> "MicroPyramid/microstorage"
"MicroPyramid/MicroSite" -> "MicroPyramid/Mongo-Slice"
"MicroPyramid/MicroSite" -> "MicroPyramid/fetch-tweets"
"MicroPyramid/MicroSite" -> "MicroPyramid/django-simple-pagination"
"MicroPyramid/MicroSite" -> "MicroPyramid/microsocial"
"MicroPyramid/MicroSite" -> "MicroPyramid/python-validate"
"MicroPyramid/MicroSite" -> "MicroPyramid/gitlab-webhook-django"
"MicroPyramid/MicroSite" -> "MicroPyramid/pietrack"
"MicroPyramid/MicroSite" -> "MicroPyramid/RaspIce"
"MicroPyramid/MicroSite" -> "MicroPyramid/docker-box"
"MicroPyramid/MicroSite" -> "MicroPyramid/knol-bits"
"MicroPyramid/MicroSite" -> "MicroPyramid/deploy-python"
"MicroPyramid/MicroSite" -> "MicroPyramid/django-webpacker"
"osparamatrix/ks-orderapi-python" -> "paramatrixtech/ksapi"
"nhaga/financial-machine-learning" -> "nhaga/Awesome-Quant-Machine-Learning-Trading"
"turing-usp/turingquant" -> "turing-usp/Arvore-de-Habilidades"
"turing-usp/turingquant" -> "turing-usp/Quant-basics"
"camelpac/alpaca-proxy-agent" -> "alpacahq/example-portfolio-manager"
"SamPom100/OptionsAnalyzer" -> "james-ralph8555/optionsVisualizer"
"firmai/mtss-gan" -> "Yashkataria/CGAN-for-time-series"
"FutTrader/footprint-system" -> "korygill/technical-analysis"
"FutTrader/footprint-system" -> "FrozenTundraTrader/sierrachart"
"FutTrader/footprint-system" -> "gc5150/sierrachart"
"JackJacquier/SSVI" -> "JunbeomL22/SurfaceFitting"
"JackJacquier/SSVI" -> "JackJacquier/SABR-Implied-Volatility"
"JackJacquier/SSVI" -> "ventureit/vanna-volga_option_price"
"JackJacquier/SSVI" -> "rfbressan/py_ssvi"
"stoqey/ibkr" -> "maxicus/ib-tws-api"
"ApurvShah007/portfolio-optimizer" -> "ApurvShah007/Tilt-Bot-RC-Car"
"ApurvShah007/portfolio-optimizer" -> "ApurvShah007/ApurvShah007.github.io"
"ApurvShah007/portfolio-optimizer" -> "ApurvShah007/Algorithmic-Trading"
"aadityatamrakar/option_chain_analysis" -> "atrybyme/Open-Interest-NSE-Live-Analysis"
"aadityatamrakar/option_chain_analysis" -> "HawkEyeCoding/nse-oi-analysis"
"aadityatamrakar/option_chain_analysis" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"kaushikjadhav01/Real-Time-Object-Detection-API-using-TensorFlow" -> "kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python"
"kaushikjadhav01/Real-Time-Object-Detection-API-using-TensorFlow" -> "kaushikjadhav01/ModSecurityCRS"
"kaushikjadhav01/Real-Time-Object-Detection-API-using-TensorFlow" -> "kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud"
"kaushikjadhav01/Real-Time-Object-Detection-API-using-TensorFlow" -> "kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN"
"kaushikjadhav01/Real-Time-Object-Detection-API-using-TensorFlow" -> "kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App"
"JuliaActuary/ActuaryUtilities.jl" -> "JuliaActuary/Learn"
"JuliaActuary/Learn" -> "JuliaActuary/ExperienceAnalysis.jl"
"YuMan-Tam/deep-hedging" -> "pfnet-research/pfhedge"
"YuMan-Tam/deep-hedging" -> "jsg71/Deep-Hedging"
"YuMan-Tam/deep-hedging" -> "guijinSON/Awesome-Deep-Hedging"
"YuMan-Tam/deep-hedging" -> "hansbuehler/deephedging"
"YuMan-Tam/deep-hedging" -> "alexandrecarbonneau/Deep-Hedging-of-Long-Term-Financial-Derivatives"
"YuMan-Tam/deep-hedging" -> "pfnet-research/NoTransactionBandNetwork"
"YuMan-Tam/deep-hedging" -> "rotmanfinhub/gamma-vega-rl-hedging"
"YuMan-Tam/deep-hedging" -> "tdmdal/rl-hedge-2019"
"polygon-io/client-go" -> "polygon-io/go-app-ticker-wall"
"ryanwhalen/patent_similarity_data" -> "AI-Growth-Lab/Patent_p2p_similarity_w2v"
"jsg71/Deep-Hedging" -> "YuMan-Tam/deep-hedging"
"jsg71/Deep-Hedging" -> "alexandrecarbonneau/Deep-Hedging-of-Long-Term-Financial-Derivatives"
"jsg71/Deep-Hedging" -> "pfnet-research/NoTransactionBandNetwork"
"KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Replication-Kit" -> "Innovation-Information-Initiative/Innovation-Data-Processing-Scripts"
"NayakwadiS/Forecasting_Mutual_Funds" -> "NayakwadiS/mftool"
"Jake0303/Webull-Trading-Bot" -> "Jake0303/SimplePythonAlpacaStockTradingBot"
"Jake0303/Webull-Trading-Bot" -> "Jake0303/CryptoTradingBot"
"Jake0303/Webull-Trading-Bot" -> "LukeWang01/Program-Trading-Based-on-Webull"
"Jake0303/Webull-Trading-Bot" -> "tedchou12/webull"
"Jake0303/Webull-Trading-Bot" -> "Jake0303/StockPricePrediction"
"bergant/XBRLFiles" -> "bergant/xbrlus"
"bergant/XBRLFiles" -> "bergant/finstr"
"hjones20/fundamental-analysis" -> "JamesPNacino/Fundamental-Stock-Analysis-Intrinsic-Value-And-SEC-Financial-Statement-Data-Download"
"portfolioplus/pystockfilter" -> "portfolioplus/pystockdb"
"marsandu/PriceAction" -> "Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies"
"Jake0303/StockPricePrediction" -> "Jake0303/SimplePythonAlpacaStockTradingBot"
"marcosan93/Price-Forecaster" -> "marcosan93/Stock-Analyzer"
"marcosan93/Price-Forecaster" -> "marcosan93/Stock-Performance-Predictor-2.0"
"turing-usp/fernando-pessoa" -> "turing-usp/Arvore-de-Habilidades"
"turing-usp/fernando-pessoa" -> "turing-usp/codificacao_de_rostos"
"turing-usp/fernando-pessoa" -> "turing-usp/turingquant"
"turing-usp/fernando-pessoa" -> "turing-usp/Turing-Talks"
"jjotterson/datapungi_fed" -> "letsgoexploring/fredpy"
"jjotterson/datapungi_fed" -> "zachwill/fred"
"Auquan/auquantoolbox" -> "Auquan/auquan-toolbox-python"
"Rachnog/Deep-Portfolio-Management" -> "Rachnog/Advanced-Deep-Trading"
"Rachnog/Deep-Portfolio-Management" -> "Rachnog/Reinforcement-Learning-in-Finance"
"Rachnog/Deep-Portfolio-Management" -> "wassname/rl-portfolio-management" ["e"=1]
"Rachnog/Deep-Portfolio-Management" -> "vermouth1992/drl-portfolio-management" ["e"=1]
"SigCGANs/Conditional-Sig-Wasserstein-GANs" -> "birdx0810/timegan-pytorch"
"SigCGANs/Conditional-Sig-Wasserstein-GANs" -> "imanolperez/market_simulator"
"SigCGANs/Conditional-Sig-Wasserstein-GANs" -> "ICascha/QuantGANs-replication"
"SigCGANs/Conditional-Sig-Wasserstein-GANs" -> "SigCGANs/Sig-Wasserstein-GANs"
"SigCGANs/Conditional-Sig-Wasserstein-GANs" -> "patrick-kidger/signatory" ["e"=1]
"SigCGANs/Conditional-Sig-Wasserstein-GANs" -> "CasperHogenboom/WGAN_financial_time-series"
"SigCGANs/Conditional-Sig-Wasserstein-GANs" -> "tianlinxu312/cot-gan"
"SigCGANs/Conditional-Sig-Wasserstein-GANs" -> "proceduralia/pytorch-GAN-timeseries"
"SigCGANs/Conditional-Sig-Wasserstein-GANs" -> "Yashkataria/CGAN-for-time-series"
"turing-usp/Momentum" -> "turing-usp/turingquant"
"dsinmsdj/iqoptionapi" -> "dsinmsdj/IQCoding_CopyTrader"
"dsinmsdj/iqoptionapi" -> "dsinmsdj/BotMHI_IQOption"
"PlamenStilyianov/PyCuda" -> "PlamenStilyianov/python-cookbook"
"turing-usp/Turing-Talks" -> "turing-usp/turingquant"
"turing-usp/Turing-Talks" -> "turing-usp/Arvore-de-Habilidades"
"turing-usp/Turing-Talks" -> "turing-usp/fernando-pessoa"
"ekanshsinghal/indian-stock-market" -> "anurag-roy/kite-option-chain"
"kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN" -> "kaushikjadhav01/ModSecurityCRS"
"kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN" -> "kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python"
"kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN" -> "kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud"
"godelsmarket/IBHistoricalDataDownloader" -> "clifton/docker-ib-gateway"
"turing-usp/Arvore-de-Habilidades" -> "turing-usp/turingquant"
"turing-usp/Arvore-de-Habilidades" -> "turing-usp/fernando-pessoa"
"turing-usp/Arvore-de-Habilidades" -> "turing-usp/codificacao_de_rostos"
"turing-usp/Arvore-de-Habilidades" -> "turing-usp/Turing-Talks"
"turing-usp/Workshop-de-Aprendizado-por-Reforco" -> "turing-usp/Arvore-de-Habilidades"
"turing-usp/Quant-basics" -> "turing-usp/turingquant"
"albertosantini/conpa" -> "albertosantini/node-finance"
"Varad2305/Automated-Algorithmic-Trading" -> "ranjanrak/async-ticker"
"ApurvShah007/Tilt-Bot-RC-Car" -> "ApurvShah007/ApurvShah007.github.io"
"kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud" -> "kaushikjadhav01/ModSecurityCRS"
"kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud" -> "kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python"
"kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python" -> "kaushikjadhav01/ModSecurityCRS"
"kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python" -> "kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud"
"kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python" -> "kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN"
"ApurvShah007/ApurvShah007.github.io" -> "ApurvShah007/Tilt-Bot-RC-Car"
"ApurvShah007/ApurvShah007" -> "ApurvShah007/Tilt-Bot-RC-Car"
"ApurvShah007/ApurvShah007" -> "ApurvShah007/ApurvShah007.github.io"
"vijaythapa333/food-order-website-php" -> "vijaythapa333/web-design-course-restaurant"
"vijaythapa333/food-order-website-php" -> "kaushikjadhav01/Online-Food-Ordering-Web-App"
"man-group/arctic" -> "man-group/ArcticDB"
"man-group/arctic" -> "robcarver17/pysystemtrade"
"man-group/arctic" -> "cuemacro/finmarketpy"
"man-group/arctic" -> "mhallsmoore/qstrader"
"man-group/arctic" -> "quantopian/pyfolio"
"man-group/arctic" -> "cuemacro/findatapy"
"man-group/arctic" -> "bmoscon/cryptofeed" ["e"=1]
"man-group/arctic" -> "hudson-and-thames/mlfinlab"
"man-group/arctic" -> "quantopian/alphalens"
"man-group/arctic" -> "quantopian/empyrical"
"man-group/arctic" -> "alpacahq/marketstore"
"man-group/arctic" -> "gbeced/pyalgotrade"
"man-group/arctic" -> "ranaroussi/pystore"
"man-group/arctic" -> "ranaroussi/qtpylib"
"man-group/arctic" -> "man-group/dtale" ["e"=1]
"vnpy/vnpy" -> "mementum/backtrader" ["e"=1]
"vnpy/vnpy" -> "quantopian/zipline" ["e"=1]
"vnpy/vnpy" -> "microsoft/qlib" ["e"=1]
"vnpy/vnpy" -> "TA-Lib/ta-lib-python" ["e"=1]
"OpenBB-finance/OpenBB" -> "wilsonfreitas/awesome-quant"
"OpenBB-finance/OpenBB" -> "freqtrade/freqtrade" ["e"=1]
"OpenBB-finance/OpenBB" -> "microsoft/qlib"
"OpenBB-finance/OpenBB" -> "virattt/ai-hedge-fund" ["e"=1]
"OpenBB-finance/OpenBB" -> "maybe-finance/maybe" ["e"=1]
"OpenBB-finance/OpenBB" -> "unclecode/crawl4ai" ["e"=1]
"OpenBB-finance/OpenBB" -> "ranaroussi/yfinance"
"OpenBB-finance/OpenBB" -> "mendableai/firecrawl" ["e"=1]
"OpenBB-finance/OpenBB" -> "khoj-ai/khoj" ["e"=1]
"OpenBB-finance/OpenBB" -> "goldmansachs/gs-quant"
"OpenBB-finance/OpenBB" -> "AI4Finance-Foundation/FinGPT"
"OpenBB-finance/OpenBB" -> "All-Hands-AI/OpenHands" ["e"=1]
"OpenBB-finance/OpenBB" -> "stefan-jansen/machine-learning-for-trading"
"OpenBB-finance/OpenBB" -> "twentyhq/twenty" ["e"=1]
"OpenBB-finance/OpenBB" -> "Shubhamsaboo/awesome-llm-apps" ["e"=1]
"achannarasappa/ticker" -> "OpenBB-finance/OpenBB" ["e"=1]
"TA-Lib/ta-lib-python" -> "twopirllc/pandas-ta"
"TA-Lib/ta-lib-python" -> "mementum/backtrader"
"TA-Lib/ta-lib-python" -> "quantopian/zipline"
"TA-Lib/ta-lib-python" -> "bukosabino/ta"
"TA-Lib/ta-lib-python" -> "quantopian/pyfolio"
"TA-Lib/ta-lib-python" -> "kernc/backtesting.py"
"TA-Lib/ta-lib-python" -> "matplotlib/mplfinance"
"TA-Lib/ta-lib-python" -> "gbeced/pyalgotrade"
"TA-Lib/ta-lib-python" -> "wilsonfreitas/awesome-quant"
"TA-Lib/ta-lib-python" -> "polakowo/vectorbt"
"TA-Lib/ta-lib-python" -> "ranaroussi/quantstats"
"TA-Lib/ta-lib-python" -> "ricequant/rqalpha" ["e"=1]
"TA-Lib/ta-lib-python" -> "microsoft/qlib"
"TA-Lib/ta-lib-python" -> "quantopian/alphalens"
"TA-Lib/ta-lib-python" -> "QuantConnect/Lean"
"MonsieurV/py-findpeaks" -> "jbn/ZigZag" ["e"=1]
"kieran-mackle/AutoTrader" -> "blankly-finance/blankly"
"kieran-mackle/AutoTrader" -> "Lumiwealth/lumibot"
"kieran-mackle/AutoTrader" -> "kieran-mackle/autotrader-demo"
"kieran-mackle/AutoTrader" -> "s-brez/trading-server"
"kieran-mackle/AutoTrader" -> "amor71/LiuAlgoTrader"
"kieran-mackle/AutoTrader" -> "ranaroussi/qtpylib"
"kieran-mackle/AutoTrader" -> "jmrichardson/tuneta"
"kieran-mackle/AutoTrader" -> "letianzj/quanttrader"
"kieran-mackle/AutoTrader" -> "quarkfin/qf-lib"
"kieran-mackle/AutoTrader" -> "jasonstrimpel/volatility-trading"
"kieran-mackle/AutoTrader" -> "asavinov/intelligent-trading-bot" ["e"=1]
"kieran-mackle/AutoTrader" -> "letianzj/QuantResearch"
"kieran-mackle/AutoTrader" -> "polakowo/vectorbt"
"kieran-mackle/AutoTrader" -> "AsyncAlgoTrading/aat"
"kieran-mackle/AutoTrader" -> "kernc/backtesting.py"
"Viral-Doshi/Gesture-Controlled-Virtual-Mouse" -> "nityansuman/warren" ["e"=1]
"jo-cho/Technical_Analysis_and_Feature_Engineering" -> "quantra-go-algo/ml-trading-book"
"jo-cho/Technical_Analysis_and_Feature_Engineering" -> "jo-cho/Technical_Analysis_Strategies_Cryptocurrency"
"jo-cho/Technical_Analysis_and_Feature_Engineering" -> "jo-cho/trading-rules-using-machine-learning"
"jo-cho/Technical_Analysis_and_Feature_Engineering" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"jo-cho/Technical_Analysis_and_Feature_Engineering" -> "Coder-World04/Complete-Scikit-learn-with-projects-" ["e"=1]
"daxm/fmpsdk" -> "ikbale/fmp_python"
"daxm/fmpsdk" -> "MatthiWare/FinancialModelingPrep.NET"
"daxm/fmpsdk" -> "FinancialModelingPrepAPI/Financial-Modeling-Prep-API"
"daxm/fmpsdk" -> "spacecodewor/fmpcloud-go"
"daxm/fmpsdk" -> "razorhash/pyfmpcloud"
"brndnmtthws/thetagang" -> "IbcAlpha/IBC"
"brndnmtthws/thetagang" -> "erdewit/ib_insync"
"brndnmtthws/thetagang" -> "mcf-long-short/ibkr-options-volatility-trading"
"brndnmtthws/thetagang" -> "ib-api-reloaded/ib_async"
"brndnmtthws/thetagang" -> "michaelchu/optopsy"
"brndnmtthws/thetagang" -> "Voyz/ibeam"
"brndnmtthws/thetagang" -> "jamesmawm/High-Frequency-Trading-Model-with-IB"
"brndnmtthws/thetagang" -> "robcarver17/pysystemtrade"
"brndnmtthws/thetagang" -> "ranaroussi/qtpylib"
"brndnmtthws/thetagang" -> "tradytics/eiten"
"brndnmtthws/thetagang" -> "jasonstrimpel/volatility-trading"
"brndnmtthws/thetagang" -> "alexgolec/tda-api"
"brndnmtthws/thetagang" -> "extrange/ibkr-docker"
"brndnmtthws/thetagang" -> "je-suis-tm/quant-trading"
"brndnmtthws/thetagang" -> "hudson-and-thames/mlfinlab"
"jmrichardson/tuneta" -> "fracdiff/fracdiff"
"jmrichardson/tuneta" -> "emoen/Machine-Learning-for-Asset-Managers"
"jmrichardson/tuneta" -> "jjakimoto/finance_ml"
"jmrichardson/tuneta" -> "kieran-mackle/AutoTrader"
"jmrichardson/tuneta" -> "sam31415/timeseriescv"
"jmrichardson/tuneta" -> "esvhd/pypbo"
"jmrichardson/tuneta" -> "quarkfin/qf-lib"
"jmrichardson/tuneta" -> "rafa-rod/pytrendseries"
"jmrichardson/tuneta" -> "tr8dr/tseries-patterns"
"jmrichardson/tuneta" -> "hudson-and-thames/meta-labeling"
"jmrichardson/tuneta" -> "facioquo/stock-indicators-python"
"jmrichardson/tuneta" -> "jankrepl/deepdow"
"jmrichardson/tuneta" -> "kieranjwood/slow-momentum-fast-reversion" ["e"=1]
"jmrichardson/tuneta" -> "kieranjwood/trading-momentum-transformer" ["e"=1]
"jmrichardson/tuneta" -> "blankly-finance/blankly"
"blankly-finance/blankly" -> "kieran-mackle/AutoTrader"
"blankly-finance/blankly" -> "polakowo/vectorbt"
"blankly-finance/blankly" -> "kernc/backtesting.py"
"blankly-finance/blankly" -> "ranaroussi/quantstats"
"blankly-finance/blankly" -> "Lumiwealth/lumibot"
"blankly-finance/blankly" -> "edtechre/pybroker"
"blankly-finance/blankly" -> "jesse-ai/jesse" ["e"=1]
"blankly-finance/blankly" -> "ranaroussi/qtpylib"
"blankly-finance/blankly" -> "Drakkar-Software/OctoBot" ["e"=1]
"blankly-finance/blankly" -> "dcajasn/Riskfolio-Lib"
"blankly-finance/blankly" -> "pmorissette/bt"
"blankly-finance/blankly" -> "letianzj/QuantResearch"
"blankly-finance/blankly" -> "ivopetiz/algotrading"
"blankly-finance/blankly" -> "chrisconlan/algorithmic-trading-with-python"
"blankly-finance/blankly" -> "nautechsystems/nautilus_trader"
"jrothschild33/learn_backtrader" -> "Ckend/pythondict-quant" ["e"=1]
"jrothschild33/learn_backtrader" -> "Skinok/backtrader-pyqt-ui" ["e"=1]
"jrothschild33/learn_backtrader" -> "mementum/backtrader" ["e"=1]
"jrothschild33/learn_backtrader" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"jrothschild33/learn_backtrader" -> "happydasch/btplotting" ["e"=1]
"guanquann/Stocksera" -> "guanquann/Stocksera-API"
"guanquann/Stocksera" -> "asad70/reddit-sentiment-analysis" ["e"=1]
"guanquann/Stocksera" -> "rgaveiga/optionlab"
"guanquann/Stocksera" -> "rahuljoshi44/GraphVega"
"guanquann/Stocksera" -> "mcdallas/wallstreet"
"guanquann/Stocksera" -> "devfinwiz/Fin-Maestro-Web"
"guanquann/Stocksera" -> "mcf-long-short/ibkr-options-volatility-trading"
"guanquann/Stocksera" -> "philipodonnell/paperbroker"
"guanquann/Stocksera" -> "pranjal-joshi/Screeni-py"
"guanquann/Stocksera" -> "kieran-mackle/AutoTrader"
"guanquann/Stocksera" -> "AnthonyBradford/optionmatrix"
"guanquann/Stocksera" -> "tstewart161/Reddit_Sentiment_Trader" ["e"=1]
"guanquann/Stocksera" -> "kaito1410/AutoDD_Rev2"
"guanquann/Stocksera" -> "santoshlite/EigenLedger"
"guanquann/Stocksera" -> "AlgoTraders/stock-analysis-engine"
"JanBoonen/TwsApiCpp" -> "rudimeier/twsapi"
"janlukasschroeder/sec-api-python" -> "janlukasschroeder/sec-api"
"janlukasschroeder/sec-api-python" -> "jadchaar/sec-edgar-api"
"janlukasschroeder/sec-api-python" -> "jadchaar/sec-edgar-downloader"
"janlukasschroeder/sec-api-python" -> "dgunning/edgartools"
"janlukasschroeder/sec-api-python" -> "edgarminers/python-edgar"
"janlukasschroeder/sec-api-python" -> "ryansmccoy/py-sec-edgar"
"janlukasschroeder/sec-api-python" -> "sec-edgar/sec-edgar"
"janlukasschroeder/sec-api-python" -> "jadchaar/sec-cik-mapper"
"portfolio-performance/portfolio" -> "fmilthaler/FinQuant" ["e"=1]
"portfolio-performance/portfolio" -> "robertmartin8/PyPortfolioOpt" ["e"=1]
"hudson-and-thames/arbitrage_research" -> "hudson-and-thames/arbitragelab"
"deepfence/FlowMeter" -> "deepfence/YaraHunter"
"deepfence/FlowMeter" -> "deepfence/PacketStreamer"
"deepfence/FlowMeter" -> "deepfence/SecretScanner"
"deepfence/FlowMeter" -> "deepfence/ThreatMapper"
"deepfence/FlowMeter" -> "deepfence/ebpfguard"
"rodrigo-brito/ninjabot" -> "ivopetiz/algotrading" ["e"=1]
"quantrocket-codeload/quant-finance-lectures" -> "emoen/Machine-Learning-for-Asset-Managers"
"quantrocket-codeload/quant-finance-lectures" -> "PyPatel/Quant-Finance-Resources"
"quantrocket-codeload/quant-finance-lectures" -> "marketneutral/alphatools"
"quantrocket-codeload/quant-finance-lectures" -> "ArturSepp/QuantInvestStrats"
"quantrocket-codeload/quant-finance-lectures" -> "letianzj/QuantResearch"
"quantrocket-codeload/quant-finance-lectures" -> "PythonCharmers/QuantFinance"
"quantrocket-codeload/quant-finance-lectures" -> "stefan-jansen/pyfolio-reloaded"
"quantrocket-codeload/quant-finance-lectures" -> "0xfdf/toraniko"
"quantrocket-codeload/quant-finance-lectures" -> "LechGrzelak/QuantFinanceBook"
"quantrocket-codeload/quant-finance-lectures" -> "rolling-panda-san/notebooks"
"quantrocket-codeload/quant-finance-lectures" -> "LechGrzelak/Computational-Finance-Course"
"quantrocket-codeload/quant-finance-lectures" -> "KidQuant/Pairs-Trading-With-Python"
"quantrocket-codeload/quant-finance-lectures" -> "lingyixu/Quant-Finance-With-Python-Code"
"grishka/Houseclub" -> "stypr/clubhouse-py"
"grishka/Houseclub" -> "ai-eks/OpenClubhouse"
"grishka/Houseclub" -> "seia-soto/clubhouse-api"
"grishka/Houseclub" -> "grishka/Smithereen" ["e"=1]
"grishka/Houseclub" -> "google/model_search" ["e"=1]
"grishka/Houseclub" -> "callmearta/clubhouse-desktop"
"grishka/Houseclub" -> "bit-world/Houseclub"
"grishka/Houseclub" -> "zhuowei/hipster.house"
"grishka/Houseclub" -> "terrakok/Cicerone" ["e"=1]
"grishka/Houseclub" -> "androidx/androidx" ["e"=1]
"grishka/Houseclub" -> "mobile-roadmap/android-developer-roadmap" ["e"=1]
"grishka/Houseclub" -> "KasperskyLab/Kaspresso" ["e"=1]
"grishka/Houseclub" -> "google/accompanist" ["e"=1]
"grishka/Houseclub" -> "badoo/MVIKotlin" ["e"=1]
"grishka/Houseclub" -> "benawad/dogehouse" ["e"=1]
"JerBouma/FinanceDatabase" -> "JerBouma/FinanceToolkit"
"JerBouma/FinanceDatabase" -> "shashankvemuri/Finance"
"JerBouma/FinanceDatabase" -> "domokane/FinancePy"
"JerBouma/FinanceDatabase" -> "dcajasn/Riskfolio-Lib"
"JerBouma/FinanceDatabase" -> "ranaroussi/quantstats"
"JerBouma/FinanceDatabase" -> "firmai/financial-machine-learning"
"JerBouma/FinanceDatabase" -> "goldmansachs/gs-quant"
"JerBouma/FinanceDatabase" -> "google/tf-quant-finance"
"JerBouma/FinanceDatabase" -> "robertmartin8/PyPortfolioOpt"
"JerBouma/FinanceDatabase" -> "wilsonfreitas/awesome-quant"
"JerBouma/FinanceDatabase" -> "chrisconlan/algorithmic-trading-with-python"
"JerBouma/FinanceDatabase" -> "JerBouma/ThePassiveInvestor"
"JerBouma/FinanceDatabase" -> "letianzj/QuantResearch"
"JerBouma/FinanceDatabase" -> "jpmorganchase/python-training"
"JerBouma/FinanceDatabase" -> "hudson-and-thames/mlfinlab"
"aspromatis/polygon_api" -> "MarketMakerLite/polygon"
"enthought/pyql" -> "vollib/vollib"
"enthought/pyql" -> "jsmidt/QuantPy"
"enthought/pyql" -> "GriffinAustin/pynance"
"enthought/pyql" -> "alpha-miner/Finance-Python"
"enthought/pyql" -> "ynouri/pysabr"
"enthought/pyql" -> "federicomariamassari/financial-engineering"
"enthought/pyql" -> "federicomariamassari/willowtree"
"enthought/pyql" -> "romanmichaelpaolucci/Q-Fin"
"enthought/pyql" -> "bbcho/finoptions-dev"
"enthought/pyql" -> "quantsbin/Quantsbin"
"enthought/pyql" -> "dbrojas/optlib"
"enthought/pyql" -> "pmorissette/ffn"
"enthought/pyql" -> "domokane/FinancePy"
"enthought/pyql" -> "google/tf-quant-finance"
"enthought/pyql" -> "jasonstrimpel/volatility-trading"
"quantopian/pyfolio" -> "quantopian/alphalens"
"quantopian/pyfolio" -> "quantopian/zipline"
"quantopian/pyfolio" -> "quantopian/empyrical"
"quantopian/pyfolio" -> "ranaroussi/quantstats"
"quantopian/pyfolio" -> "quantopian/research_public"
"quantopian/pyfolio" -> "robertmartin8/PyPortfolioOpt"
"quantopian/pyfolio" -> "mementum/backtrader"
"quantopian/pyfolio" -> "gbeced/pyalgotrade"
"quantopian/pyfolio" -> "TA-Lib/ta-lib-python"
"quantopian/pyfolio" -> "hudson-and-thames/mlfinlab"
"quantopian/pyfolio" -> "cuemacro/finmarketpy"
"quantopian/pyfolio" -> "dcajasn/Riskfolio-Lib"
"quantopian/pyfolio" -> "pmorissette/ffn"
"quantopian/pyfolio" -> "pmorissette/bt"
"quantopian/pyfolio" -> "mhallsmoore/qstrader"
"QuantConnect/lean-cli" -> "QuantConnect/Documentation"
"QuantConnect/lean-cli" -> "QuantConnect/Tutorials"
"QuantConnect/lean-cli" -> "QuantConnect/Research"
"QuantConnect/lean-cli" -> "QuantConnect/IBAutomater"
"QuantConnect/lean-cli" -> "QuantConnect/Lean.Brokerages.InteractiveBrokers"
"binance/binance-spot-api-docs" -> "TA-Lib/ta-lib-python" ["e"=1]
"binance/binance-spot-api-docs" -> "mementum/backtrader" ["e"=1]
"sdushantha/wifi-password" -> "gridaco/grida" ["e"=1]
"kuleshov/cornell-cs5785-2020-applied-ml" -> "mfrdixon/ML_Finance_Codes" ["e"=1]
"best-of-lists/best-of" -> "merovinh/best-of-algorithmic-trading" ["e"=1]
"pranjal-joshi/Screeni-py" -> "pkjmesra/PKScreener"
"pranjal-joshi/Screeni-py" -> "deshwalmahesh/NSE-Stock-Scanner"
"pranjal-joshi/Screeni-py" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"pranjal-joshi/Screeni-py" -> "aeron7/nsepython"
"pranjal-joshi/Screeni-py" -> "swapniljariwala/nsepy"
"pranjal-joshi/Screeni-py" -> "marketcalls/openalgo"
"pranjal-joshi/Screeni-py" -> "jugaad-py/jugaad-data"
"pranjal-joshi/Screeni-py" -> "vsjha18/nsetools"
"pranjal-joshi/Screeni-py" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"pranjal-joshi/Screeni-py" -> "jigneshpylab/ZerodhaPythonScripts"
"pranjal-joshi/Screeni-py" -> "maanavshah/stock-market-india"
"pranjal-joshi/Screeni-py" -> "NSEDownload/NSEDownload"
"pranjal-joshi/Screeni-py" -> "TechfaneTechnologies/QtsApp"
"pranjal-joshi/Screeni-py" -> "imvinaypatil/kinetick"
"pranjal-joshi/Screeni-py" -> "NayakwadiS/mftool"
"marcdemers/py_vollib_vectorized" -> "vollib/py_vollib"
"cuemacro/FinancePy" -> "cuemacro/cufflinks"
"hackingthemarkets/tradekit" -> "hackingthemarkets/interactive-brokers-demo" ["e"=1]
"hackingthemarkets/tradekit" -> "hackingthemarkets/tradingview-interactive-brokers" ["e"=1]
"AI4Finance-Foundation/FinRL-Meta" -> "AI4Finance-Foundation/FinRL" ["e"=1]
"AI4Finance-Foundation/FinRL-Meta" -> "TradeMaster-NTU/TradeMaster" ["e"=1]
"AI4Finance-Foundation/FinRL-Meta" -> "AI4Finance-Foundation/FinNLP" ["e"=1]
"AI4Finance-Foundation/FinRL-Meta" -> "tensortrade-org/tensortrade" ["e"=1]
"AI4Finance-Foundation/FinRL-Meta" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"LechGrzelak/Computational-Finance-Course" -> "LechGrzelak/FinancialEngineering_IR_xVA"
"LechGrzelak/Computational-Finance-Course" -> "LechGrzelak/QuantFinanceBook"
"LechGrzelak/Computational-Finance-Course" -> "emoen/Machine-Learning-for-Asset-Managers"
"LechGrzelak/Computational-Finance-Course" -> "nburgessx/SwapsBook"
"LechGrzelak/Computational-Finance-Course" -> "attack68/book_irds3"
"LechGrzelak/Computational-Finance-Course" -> "Finance-Hub/FinanceHub"
"gerrymanoim/exchange_calendars" -> "rsheftel/pandas_market_calendars"
"gerrymanoim/exchange_calendars" -> "quantopian/trading_calendars"
"gerrymanoim/exchange_calendars" -> "stefan-jansen/pyfolio-reloaded"
"gerrymanoim/exchange_calendars" -> "maread99/market_prices"
"gerrymanoim/exchange_calendars" -> "stefan-jansen/alphalens-reloaded"
"gerrymanoim/exchange_calendars" -> "stefan-jansen/zipline-reloaded"
"gerrymanoim/exchange_calendars" -> "vollib/py_vollib"
"gerrymanoim/exchange_calendars" -> "quantopian/empyrical"
"gerrymanoim/exchange_calendars" -> "stefan-jansen/empyrical-reloaded"
"rrag/react-stockcharts" -> "man-group/arctic" ["e"=1]
"hongtaocai/googlefinance" -> "yahoo-finance/yahoo-finance"
"hongtaocai/googlefinance" -> "mcdallas/wallstreet"
"hongtaocai/googlefinance" -> "ZachLiuGIS/stock_extractor"
"hongtaocai/googlefinance" -> "skillachie/finsymbols"
"hongtaocai/googlefinance" -> "cgoldberg/ystockquote"
"hongtaocai/googlefinance" -> "bpsmith/tia"
"hongtaocai/googlefinance" -> "econdb/inquisitor"
"hongtaocai/googlefinance" -> "pdevty/googlefinance-client-python"
"hongtaocai/googlefinance" -> "quantmind/ccy"
"hongtaocai/googlefinance" -> "enthought/pyql"
"hongtaocai/googlefinance" -> "Finnhub-Stock-API/finnhub-python"
"hongtaocai/googlefinance" -> "cuemacro/findatapy"
"hongtaocai/googlefinance" -> "twelvedata/twelvedata-python"
"hongtaocai/googlefinance" -> "jsmidt/QuantPy"
"hongtaocai/googlefinance" -> "vollib/vollib"
"gbeced/pyalgotrade" -> "quantopian/zipline"
"gbeced/pyalgotrade" -> "mementum/backtrader"
"gbeced/pyalgotrade" -> "ricequant/rqalpha" ["e"=1]
"gbeced/pyalgotrade" -> "mhallsmoore/qstrader"
"gbeced/pyalgotrade" -> "pmorissette/bt"
"gbeced/pyalgotrade" -> "Yam-cn/pyalgotrade-cn" ["e"=1]
"gbeced/pyalgotrade" -> "quantopian/pyfolio"
"gbeced/pyalgotrade" -> "cuemacro/finmarketpy"
"gbeced/pyalgotrade" -> "ranaroussi/qtpylib"
"gbeced/pyalgotrade" -> "robcarver17/pysystemtrade"
"gbeced/pyalgotrade" -> "TA-Lib/ta-lib-python"
"gbeced/pyalgotrade" -> "QuantFans/quantdigger" ["e"=1]
"gbeced/pyalgotrade" -> "quantopian/alphalens"
"gbeced/pyalgotrade" -> "QuantConnect/Lean"
"gbeced/pyalgotrade" -> "ematvey/pybacktest"
"finlab-python/finlab_crypto" -> "jmrichardson/tuneta"
"finlab-python/finlab_crypto" -> "histockhero/youtube_code"
"finlab-python/finlab_crypto" -> "andrewwang7/findbillion_stocktw"
"fracdiff/fracdiff" -> "philipperemy/fractional-differentiation-time-series"
"fracdiff/fracdiff" -> "jmrichardson/tuneta"
"fracdiff/fracdiff" -> "tr8dr/tseries-patterns"
"fracdiff/fracdiff" -> "simaki/fracdiff"
"fracdiff/fracdiff" -> "emoen/Machine-Learning-for-Asset-Managers"
"fracdiff/fracdiff" -> "sam31415/timeseriescv"
"fracdiff/fracdiff" -> "hudson-and-thames/meta-labeling"
"fracdiff/fracdiff" -> "Rachnog/Advanced-Deep-Trading"
"fracdiff/fracdiff" -> "Nixtla/tsfeatures" ["e"=1]
"fracdiff/fracdiff" -> "pfnet-research/pfhedge"
"robinhood-unofficial/pyrh" -> "sanko/Robinhood"
"robinhood-unofficial/pyrh" -> "anilshanbhag/RobinhoodShell"
"robinhood-unofficial/pyrh" -> "jmfernandes/robin_stocks"
"robinhood-unofficial/pyrh" -> "aurbano/robinhood-node"
"robinhood-unofficial/pyrh" -> "joshfraser/robinhood-to-csv"
"robinhood-unofficial/pyrh" -> "rohanpai/Robinhood"
"robinhood-unofficial/pyrh" -> "LichAmnesia/Robinhood"
"robinhood-unofficial/pyrh" -> "mstrum/robinhood-python"
"robinhood-unofficial/pyrh" -> "alpacahq/alpaca-trade-api-python"
"robinhood-unofficial/pyrh" -> "westonplatter/fast_arrow"
"robinhood-unofficial/pyrh" -> "tedchou12/webull"
"robinhood-unofficial/pyrh" -> "codesociety/friartuck"
"robinhood-unofficial/pyrh" -> "2018kguo/RobinhoodBot"
"robinhood-unofficial/pyrh" -> "timkpaine/tdameritrade"
"robinhood-unofficial/pyrh" -> "danpaquin/coinbasepro-python" ["e"=1]
"wesdoyle/design-patterns-explained-with-food" -> "justinamiller/DotNet-Coding-Guidelines" ["e"=1]
"google/model_search" -> "ai-eks/OpenClubhouse" ["e"=1]
"just-krivi/option-pricing-models" -> "mcf-long-short/ibkr-options-volatility-trading"
"just-krivi/option-pricing-models" -> "jkirkby3/fypy"
"just-krivi/option-pricing-models" -> "mcf-long-short/fixed-income-and-credit"
"just-krivi/option-pricing-models" -> "hsjharvey/Option-Pricing"
"mcf-long-short/ibkr-options-volatility-trading" -> "SC4RECOIN/FlowAlgo-Options-Trader"
"mcf-long-short/ibkr-options-volatility-trading" -> "aicheung/0dte-trader"
"mcf-long-short/ibkr-options-volatility-trading" -> "Options-Visualizer/Options-Visualizer.github.io"
"mcf-long-short/ibkr-options-volatility-trading" -> "rgaveiga/optionlab"
"mcf-long-short/ibkr-options-volatility-trading" -> "mattsta/icli"
"mcf-long-short/ibkr-options-volatility-trading" -> "PaulSquires/TradeTracker"
"mcf-long-short/ibkr-options-volatility-trading" -> "just-krivi/option-pricing-models"
"mcf-long-short/ibkr-options-volatility-trading" -> "lambdaclass/options_backtester"
"mcf-long-short/ibkr-options-volatility-trading" -> "ChiragJhawar/ProjectReward"
"quantopian/research_public" -> "quantopian/alphalens"
"quantopian/research_public" -> "quantopian/pyfolio"
"quantopian/research_public" -> "quantopian/zipline"
"quantopian/research_public" -> "quantopian/empyrical"
"quantopian/research_public" -> "hudson-and-thames/mlfinlab"
"quantopian/research_public" -> "letianzj/QuantResearch"
"quantopian/research_public" -> "jasonstrimpel/volatility-trading"
"quantopian/research_public" -> "mhallsmoore/qstrader"
"quantopian/research_public" -> "dcajasn/Riskfolio-Lib"
"quantopian/research_public" -> "ranaroussi/quantstats"
"quantopian/research_public" -> "robcarver17/pysystemtrade"
"quantopian/research_public" -> "quantopian/qgrid" ["e"=1]
"quantopian/research_public" -> "cuemacro/finmarketpy"
"quantopian/research_public" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"quantopian/research_public" -> "chrisconlan/algorithmic-trading-with-python"
"nicodjimenez/lstm" -> "yangwohenmai/LSTM"
"nicodjimenez/lstm" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"nicodjimenez/lstm" -> "guillaume-chevalier/LSTM-Human-Activity-Recognition" ["e"=1]
"nicodjimenez/lstm" -> "ndrplz/ConvLSTM_pytorch" ["e"=1]
"nicodjimenez/lstm" -> "HendrikStrobelt/LSTMVis" ["e"=1]
"nicodjimenez/lstm" -> "dansoutner/LSTM"
"nicodjimenez/lstm" -> "carpedm20/lstm-char-cnn-tensorflow" ["e"=1]
"nicodjimenez/lstm" -> "wojzaremba/lstm" ["e"=1]
"nicodjimenez/lstm" -> "gy910210/rnn-from-scratch" ["e"=1]
"nicodjimenez/lstm" -> "lucasjinreal/tensorflow_poems" ["e"=1]
"nicodjimenez/lstm" -> "hichenway/stock_predict_with_LSTM"
"nicodjimenez/lstm" -> "Kyubyong/transformer" ["e"=1]
"nicodjimenez/lstm" -> "salesforce/awd-lstm-lm" ["e"=1]
"nicodjimenez/lstm" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"nicodjimenez/lstm" -> "yangwohenmai/DeepLearningForTSF" ["e"=1]
"Voyz/ibeam" -> "Voyz/ibind"
"Voyz/ibeam" -> "IbcAlpha/IBC"
"Voyz/ibeam" -> "UnusualAlpha/ib-gateway-docker"
"Voyz/ibeam" -> "gnzsnz/ib-gateway-docker"
"Voyz/ibeam" -> "areed1192/interactive-broker-python-api"
"Voyz/ibeam" -> "utilmon/EasyIB"
"Voyz/ibeam" -> "ib-api-reloaded/ib_async"
"Voyz/ibeam" -> "erdewit/ib_insync"
"Voyz/ibeam" -> "extrange/ibkr-docker"
"Voyz/ibeam" -> "hackingthemarkets/interactive-brokers-web-api"
"Voyz/ibeam" -> "ib-controller/ib-controller"
"Voyz/ibeam" -> "stoqey/ib"
"Voyz/ibeam" -> "mvberg/ib-gateway-docker"
"Voyz/ibeam" -> "hackingthemarkets/tradingview-interactive-brokers"
"Voyz/ibeam" -> "PythonForForex/Interactive-brokers-python-api-guide"
"mattsta/ib_insync" -> "ib-api-reloaded/ib_async"
"mattsta/ib_insync" -> "mattsta/icli"
"cuemacro/finmarketpy" -> "cuemacro/findatapy"
"cuemacro/finmarketpy" -> "pmorissette/bt"
"cuemacro/finmarketpy" -> "gbeced/pyalgotrade"
"cuemacro/finmarketpy" -> "ranaroussi/qtpylib"
"cuemacro/finmarketpy" -> "quantopian/pyfolio"
"cuemacro/finmarketpy" -> "mhallsmoore/qstrader"
"cuemacro/finmarketpy" -> "pmorissette/ffn"
"cuemacro/finmarketpy" -> "robcarver17/pysystemtrade"
"cuemacro/finmarketpy" -> "cuemacro/chartpy"
"cuemacro/finmarketpy" -> "jasonstrimpel/volatility-trading"
"cuemacro/finmarketpy" -> "jamesmawm/High-Frequency-Trading-Model-with-IB"
"cuemacro/finmarketpy" -> "hudson-and-thames/mlfinlab"
"cuemacro/finmarketpy" -> "domokane/FinancePy"
"cuemacro/finmarketpy" -> "ranaroussi/quantstats"
"cuemacro/finmarketpy" -> "man-group/arctic"
"matthewgilbert/pdblp" -> "kyuni22/pybbg"
"matthewgilbert/pdblp" -> "msitt/blpapi-python"
"matthewgilbert/pdblp" -> "alpha-xone/xbbg"
"matthewgilbert/pdblp" -> "alex314159/blpapiwrapper"
"matthewgilbert/pdblp" -> "matthewgilbert/blp"
"matthewgilbert/pdblp" -> "bpsmith/tia"
"matthewgilbert/pdblp" -> "691175002/BLPInterface"
"business-science/pytimetk" -> "quant-science/sunday-quant-scientist"
"business-science/pytimetk" -> "business-science/ai-data-science-team" ["e"=1]
"business-science/pytimetk" -> "skfolio/skfolio"
"business-science/pytimetk" -> "zazhang/ep-chan-book-algo-trading"
"business-science/pytimetk" -> "business-science/awesome-generative-ai-data-scientist" ["e"=1]
"business-science/pytimetk" -> "dbrojas/optlib"
"business-science/pytimetk" -> "skforecast/skforecast" ["e"=1]
"business-science/pytimetk" -> "stefan-jansen/zipline-reloaded"
"business-science/pytimetk" -> "jasonstrimpel/volatility-trading"
"business-science/pytimetk" -> "mfrdixon/ML_Finance_Codes"
"business-science/pytimetk" -> "Nixtla/mlforecast" ["e"=1]
"business-science/pytimetk" -> "pmorissette/ffn"
"business-science/pytimetk" -> "Coder-World04/Time-Series-Analysis-and-Forecasting" ["e"=1]
"business-science/pytimetk" -> "functime-org/functime" ["e"=1]
"business-science/pytimetk" -> "mpalenciaolivar/Awesome-Decision-Science" ["e"=1]
"spedygiorgio/lifecontingencies" -> "franciscogarate/pyliferisk"
"spedygiorgio/lifecontingencies" -> "genedan/actuarial-foss"
"valuesimplex/FinBERT" -> "ProsusAI/finBERT" ["e"=1]
"fja05680/pinkfish" -> "benjaminmgross/visualize-wealth"
"fja05680/pinkfish" -> "ematvey/pybacktest"
"fja05680/pinkfish" -> "CarterBain/AlephNull"
"fja05680/pinkfish" -> "abbass2/pyqstrat"
"fja05680/pinkfish" -> "maihde/quant"
"fja05680/pinkfish" -> "Emsu/prophet"
"fja05680/pinkfish" -> "panpanpandas/ultrafinance"
"fja05680/pinkfish" -> "thalesians/pythalesians"
"fja05680/pinkfish" -> "TulipCharts/tulipy"
"fja05680/pinkfish" -> "quantrocket-llc/moonshot"
"fja05680/pinkfish" -> "Chandlercjy/OnePy" ["e"=1]
"whittlem/pycryptobot" -> "blankly-finance/blankly" ["e"=1]
"tstewart161/Reddit_Sentiment_Trader" -> "TreyThomas93/python-trading-bot-with-thinkorswim" ["e"=1]
"tstewart161/Reddit_Sentiment_Trader" -> "g-make-it/IG_Trading_Algo_Scripts_Python" ["e"=1]
"eai2x/Time-Series-Analysis-Tutorial" -> "yangwohenmai/LSTM" ["e"=1]
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "jamesmawm/mastering-python-for-finance-second-edition"
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "gjimzhou/MTH9879-Market-Microstructure-Models" ["e"=1]
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "PacktPublishing/Python-for-Finance-Second-Edition"
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "yhilpisch/py4fi"
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "paulperry/quant"
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "alexbotsula/Price_direction_forecast" ["e"=1]
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "yhilpisch/dawp"
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "jamesmawm/IB-Trading-Models-And-Backtester"
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "jjakimoto/finance_ml"
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "yhilpisch/dx"
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "jamesmawm/High-Frequency-Trading-Model-with-IB"
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "hjeffreywang/Stock_feature_engineering" ["e"=1]
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "SparkAbhi/SignalProcessingWithPython" ["e"=1]
"jamesmawm/Mastering-Python-for-Finance-source-codes" -> "jheusser/vpin" ["e"=1]
"rahuljoshi44/GraphVega" -> "ChiragJhawar/ProjectReward"
"rahuljoshi44/GraphVega" -> "AnthonyBradford/optionmatrix"
"rahuljoshi44/GraphVega" -> "yzoz/python-option-calculator"
"rahuljoshi44/GraphVega" -> "SC4RECOIN/FlowAlgo-Options-Trader"
"rahuljoshi44/GraphVega" -> "Options-Visualizer/Options-Visualizer.github.io"
"rahuljoshi44/GraphVega" -> "vinaykale64/market-monitor"
"rahuljoshi44/GraphVega" -> "hfwebbed/Stock-Option-Analytics"
"rahuljoshi44/GraphVega" -> "fanzhenya/options_lab"
"rahuljoshi44/GraphVega" -> "Jenniferab32/OptionAnalysis"
"rahuljoshi44/GraphVega" -> "BlackOtton/RedStar-Media"
"rahuljoshi44/GraphVega" -> "evdubs/renegade-way"
"rahuljoshi44/GraphVega" -> "bottama/Dynamic-Derivatives-Portfolio-Hedging"
"rahuljoshi44/GraphVega" -> "philipodonnell/paperbroker"
"rahuljoshi44/GraphVega" -> "gridaco/grida"
"vollib/vollib" -> "GriffinAustin/pynance"
"vollib/vollib" -> "jsmidt/QuantPy"
"vollib/vollib" -> "enthought/pyql"
"vollib/vollib" -> "ynouri/pysabr"
"vollib/vollib" -> "alpha-miner/Finance-Python"
"vollib/vollib" -> "federicomariamassari/financial-engineering"
"vollib/vollib" -> "romanmichaelpaolucci/Q-Fin"
"vollib/vollib" -> "federicomariamassari/willowtree"
"vollib/vollib" -> "bbcho/finoptions-dev"
"vollib/vollib" -> "dbrojas/optlib"
"vollib/vollib" -> "quantsbin/Quantsbin"
"vollib/vollib" -> "pmorissette/ffn"
"vollib/vollib" -> "domokane/FinancePy"
"vollib/vollib" -> "jasonstrimpel/volatility-trading"
"vollib/vollib" -> "google/tf-quant-finance"
"romanmichaelpaolucci/Q-Fin" -> "bbcho/finoptions-dev"
"romanmichaelpaolucci/Q-Fin" -> "GriffinAustin/pynance"
"romanmichaelpaolucci/Q-Fin" -> "federicomariamassari/willowtree"
"romanmichaelpaolucci/Q-Fin" -> "federicomariamassari/financial-engineering"
"romanmichaelpaolucci/Q-Fin" -> "quantsbin/Quantsbin"
"romanmichaelpaolucci/Q-Fin" -> "ynouri/pysabr"
"romanmichaelpaolucci/Q-Fin" -> "dbrojas/optlib"
"romanmichaelpaolucci/Q-Fin" -> "vollib/vollib"
"romanmichaelpaolucci/Q-Fin" -> "alpha-miner/Finance-Python"
"romanmichaelpaolucci/Q-Fin" -> "jsmidt/QuantPy"
"romanmichaelpaolucci/Q-Fin" -> "enthought/pyql"
"romanmichaelpaolucci/Q-Fin" -> "pmorissette/ffn"
"romanmichaelpaolucci/Q-Fin" -> "domokane/FinancePy"
"bbcho/finoptions-dev" -> "romanmichaelpaolucci/Q-Fin"
"bbcho/finoptions-dev" -> "federicomariamassari/willowtree"
"bbcho/finoptions-dev" -> "GriffinAustin/pynance"
"bbcho/finoptions-dev" -> "federicomariamassari/financial-engineering"
"bbcho/finoptions-dev" -> "quantsbin/Quantsbin"
"bbcho/finoptions-dev" -> "ynouri/pysabr"
"bbcho/finoptions-dev" -> "dbrojas/optlib"
"bbcho/finoptions-dev" -> "vollib/vollib"
"bbcho/finoptions-dev" -> "jsmidt/QuantPy"
"bbcho/finoptions-dev" -> "alpha-miner/Finance-Python"
"bbcho/finoptions-dev" -> "enthought/pyql"
"bbcho/finoptions-dev" -> "pmorissette/ffn"
"PyFE/PyFENG" -> "PyFE/PyfengForPapers"
"PyFE/PyFENG" -> "Dagalon/PyStochasticVolatility"
"PyFE/PyFENG" -> "vicaws/arbitragerepair"
"PyFE/PyFENG" -> "PyFE/FE-R"
"51bitquant/howtrader" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"sjev/trading-with-python" -> "ematvey/pybacktest"
"sjev/trading-with-python" -> "panpanpandas/ultrafinance"
"sjev/trading-with-python" -> "ranaroussi/ezibpy"
"sjev/trading-with-python" -> "Komnomnomnom/swigibpy"
"sjev/trading-with-python" -> "harvey1673/pyktrader" ["e"=1]
"sjev/trading-with-python" -> "quantrocket-llc/moonshot"
"sjev/trading-with-python" -> "quantiacs-legacy/quantiacs-python"
"trevorstephens/gplearn" -> "quantopian/alphalens" ["e"=1]
"stefan-jansen/alphalens-reloaded" -> "stefan-jansen/pyfolio-reloaded"
"stefan-jansen/alphalens-reloaded" -> "stefan-jansen/zipline-reloaded"
"stefan-jansen/alphalens-reloaded" -> "stefan-jansen/empyrical-reloaded"
"stefan-jansen/alphalens-reloaded" -> "skfolio/skfolio"
"stefan-jansen/alphalens-reloaded" -> "gerrymanoim/exchange_calendars"
"stefan-jansen/alphalens-reloaded" -> "quantopian/alphalens"
"stefan-jansen/alphalens-reloaded" -> "Heerozh/spectre"
"stefan-jansen/alphalens-reloaded" -> "RL-MLDM/alphagen" ["e"=1]
"stefan-jansen/alphalens-reloaded" -> "popbo/alphas" ["e"=1]
"stefan-jansen/alphalens-reloaded" -> "michaelchu/optopsy"
"stefan-jansen/alphalens-reloaded" -> "JoinQuant/jqfactor_analyzer" ["e"=1]
"santoshlite/EigenLedger" -> "dcajasn/Riskfolio-Lib"
"santoshlite/EigenLedger" -> "fmilthaler/FinQuant"
"santoshlite/EigenLedger" -> "ranaroussi/quantstats"
"santoshlite/EigenLedger" -> "jankrepl/deepdow"
"santoshlite/EigenLedger" -> "robertmartin8/PyPortfolioOpt"
"santoshlite/EigenLedger" -> "Heerozh/spectre"
"santoshlite/EigenLedger" -> "quantopian/empyrical"
"santoshlite/EigenLedger" -> "tradytics/eiten"
"santoshlite/EigenLedger" -> "leosmigel/analyzingalpha"
"santoshlite/EigenLedger" -> "cvxgrp/cvxportfolio"
"santoshlite/EigenLedger" -> "Marigold/universal-portfolios"
"santoshlite/EigenLedger" -> "hudson-and-thames/mlfinlab"
"santoshlite/EigenLedger" -> "letianzj/QuantResearch"
"santoshlite/EigenLedger" -> "quarkfin/qf-lib"
"santoshlite/EigenLedger" -> "domokane/FinancePy"
"gadicc/node-yahoo-finance2" -> "pilwon/node-yahoo-finance"
"gadicc/node-yahoo-finance2" -> "pilwon/node-google-finance"
"gadicc/node-yahoo-finance2" -> "phamleduy04/yahoo-stock-api"
"eliangcs/pystock-data" -> "eliangcs/pystock-crawler"
"eliangcs/pystock-data" -> "eliangcs/pystock-github"
"nardew/talipp" -> "gbeced/basana"
"nardew/talipp" -> "mr-easy/streaming_indicators"
"nardew/talipp" -> "rolling-panda-san/notebooks"
"nardew/talipp" -> "MerlinR/Hexital"
"nardew/talipp" -> "day0market/support_resistance"
"nardew/talipp" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"nardew/talipp" -> "jmrichardson/tuneta"
"nardew/talipp" -> "facioquo/stock-indicators-python"
"nardew/talipp" -> "kieran-mackle/AutoTrader"
"nardew/talipp" -> "ntorm1/Atlas"
"nardew/talipp" -> "TulipCharts/tulipindicators"
"nardew/talipp" -> "quarkfin/qf-lib"
"nardew/talipp" -> "TechfaneTechnologies/pytvlwcharts"
"nardew/talipp" -> "skfolio/skfolio"
"nardew/talipp" -> "trufanov-nok/ta-lib-rt"
"AI-Growth-Lab/PatentSBERTa" -> "AI-Growth-Lab/Patent_p2p_similarity_w2v"
"AI-Growth-Lab/PatentSBERTa" -> "MIRICMILAN/US-AI-Patents"
"AI-Growth-Lab/PatentSBERTa" -> "ryanwhalen/patent_similarity_data"
"AI-Growth-Lab/PatentSBERTa" -> "jiehsheng/PatentBERT"
"AI-Growth-Lab/PatentSBERTa" -> "sam-arts/respol_patents_code"
"pythonlessons/RL-Bitcoin-trading-bot" -> "jmrichardson/tuneta" ["e"=1]
"hustcer/star" -> "deepfence/PacketStreamer" ["e"=1]
"SC4RECOIN/FlowAlgo-Options-Trader" -> "ChiragJhawar/ProjectReward"
"SC4RECOIN/FlowAlgo-Options-Trader" -> "Options-Visualizer/Options-Visualizer.github.io"
"SC4RECOIN/FlowAlgo-Options-Trader" -> "fanzhenya/options_lab"
"SC4RECOIN/FlowAlgo-Options-Trader" -> "samuelfu/TradingBot"
"iam-abbas/Reddit-Stock-Trends" -> "kaito1410/AutoDD_Rev2" ["e"=1]
"iam-abbas/Reddit-Stock-Trends" -> "tradytics/surpriver" ["e"=1]
"iam-abbas/Reddit-Stock-Trends" -> "shirosaidev/stocksight" ["e"=1]
"iam-abbas/Reddit-Stock-Trends" -> "LastAncientOne/Stock_Analysis_For_Quant" ["e"=1]
"iam-abbas/Reddit-Stock-Trends" -> "ckz8780/market-toolkit" ["e"=1]
"StreamAlpha/tvdatafeed" -> "Dave-Vallance/tv2bt" ["e"=1]
"StreamAlpha/tvdatafeed" -> "GregoryMorse/trendln" ["e"=1]
"PeterMalkin/oandapybot" -> "10mohi6/oanda-bot-python"
"PeterMalkin/oandapybot" -> "oanda/oandapy"
"PeterMalkin/oandapybot" -> "hootnot/oandapyV20-examples"
"PeterMalkin/oandapybot" -> "trentstauff/FXBot"
"PeterMalkin/oandapybot" -> "hootnot/oanda-api-v20"
"PeterMalkin/oandapybot" -> "oanda/v20-python-samples"
"PeterMalkin/oandapybot" -> "oanda/v20-python"
"PeterMalkin/oandapybot" -> "toloco/pyoanda"
"PeterMalkin/oandapybot" -> "raidastauras/Trading-Bot"
"PeterMalkin/oandapybot" -> "jonromero/forex_algotrading"
"Bugswriter/tuxi" -> "gridaco/grida" ["e"=1]
"deshwalmahesh/NSE-Stock-Scanner" -> "aeron7/nsepython"
"deshwalmahesh/NSE-Stock-Scanner" -> "pranjal-joshi/Screeni-py"
"deshwalmahesh/NSE-Stock-Scanner" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"deshwalmahesh/NSE-Stock-Scanner" -> "jugaad-py/jugaad-data"
"deshwalmahesh/NSE-Stock-Scanner" -> "pkjmesra/PKScreener"
"deshwalmahesh/NSE-Stock-Scanner" -> "srikar-kodakandla/fully-automated-nifty-options-trading"
"deshwalmahesh/NSE-Stock-Scanner" -> "vsjha18/nsetools"
"deshwalmahesh/NSE-Stock-Scanner" -> "atrybyme/Open-Interest-NSE-Live-Analysis"
"deshwalmahesh/NSE-Stock-Scanner" -> "NSEDownload/NSEDownload"
"yhilpisch/py4at" -> "yhilpisch/aiif"
"yhilpisch/py4at" -> "yhilpisch/py4fi2nd"
"yhilpisch/py4at" -> "yhilpisch/dawp"
"yhilpisch/py4at" -> "yhilpisch/dx"
"yhilpisch/py4at" -> "yhilpisch/tpqoa"
"yhilpisch/py4at" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"yhilpisch/py4at" -> "PacktPublishing/Learn-Algorithmic-Trading"
"yhilpisch/py4at" -> "chrisconlan/algorithmic-trading-with-python"
"yhilpisch/py4at" -> "emoen/Machine-Learning-for-Asset-Managers"
"yhilpisch/py4at" -> "yhilpisch/lvvd"
"yhilpisch/py4at" -> "yhilpisch/ftwp"
"yhilpisch/py4at" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"yhilpisch/py4at" -> "LongOnly/Quantitative-Notebooks"
"yhilpisch/py4at" -> "cuemacro/findatapy"
"yhilpisch/py4at" -> "PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading"
"namuan/trading-utils" -> "AlbertRtk/marketools"
"namuan/trading-utils" -> "arshpreet/Hedge-Fund-stock-market-analysis"
"namuan/trading-utils" -> "storieswithsiva/Stock-Market-Analysis"
"namuan/trading-utils" -> "dDevTech/Stock-Market-Predictor"
"stefan-jansen/pyfolio-reloaded" -> "stefan-jansen/alphalens-reloaded"
"stefan-jansen/pyfolio-reloaded" -> "stefan-jansen/zipline-reloaded"
"stefan-jansen/pyfolio-reloaded" -> "stefan-jansen/empyrical-reloaded"
"stefan-jansen/pyfolio-reloaded" -> "skfolio/skfolio"
"stefan-jansen/pyfolio-reloaded" -> "Lumiwealth/quantstats_lumi"
"stefan-jansen/pyfolio-reloaded" -> "gerrymanoim/exchange_calendars"
"stefan-jansen/pyfolio-reloaded" -> "stefan-jansen/python-algorithms"
"stefan-jansen/pyfolio-reloaded" -> "quarkfin/qf-lib"
"stefan-jansen/pyfolio-reloaded" -> "rolling-panda-san/notebooks"
"stefan-jansen/pyfolio-reloaded" -> "dcajasn/Riskfolio-Lib"
"stefan-jansen/pyfolio-reloaded" -> "shlomiku/zipline-trader"
"stefan-jansen/pyfolio-reloaded" -> "letianzj/quanttrader"
"stefan-jansen/pyfolio-reloaded" -> "pmorissette/ffn"
"stefan-jansen/pyfolio-reloaded" -> "stefan-jansen/synthetic-data-for-finance"
"stefan-jansen/pyfolio-reloaded" -> "ranaroussi/quantstats"
"stefan-jansen/zipline-reloaded" -> "stefan-jansen/pyfolio-reloaded"
"stefan-jansen/zipline-reloaded" -> "stefan-jansen/alphalens-reloaded"
"stefan-jansen/zipline-reloaded" -> "shlomiku/zipline-trader"
"stefan-jansen/zipline-reloaded" -> "pmorissette/bt"
"stefan-jansen/zipline-reloaded" -> "dcajasn/Riskfolio-Lib"
"stefan-jansen/zipline-reloaded" -> "polakowo/vectorbt"
"stefan-jansen/zipline-reloaded" -> "robcarver17/pysystemtrade"
"stefan-jansen/zipline-reloaded" -> "ranaroussi/quantstats"
"stefan-jansen/zipline-reloaded" -> "mhallsmoore/qstrader"
"stefan-jansen/zipline-reloaded" -> "quantopian/alphalens"
"stefan-jansen/zipline-reloaded" -> "michaelchu/optopsy"
"stefan-jansen/zipline-reloaded" -> "skfolio/skfolio"
"stefan-jansen/zipline-reloaded" -> "pmorissette/ffn"
"stefan-jansen/zipline-reloaded" -> "vollib/vollib"
"stefan-jansen/zipline-reloaded" -> "letianzj/QuantResearch"
"PacktPublishing/Hands-On-Financial-Trading-with-Python" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"PacktPublishing/Hands-On-Financial-Trading-with-Python" -> "PacktPublishing/Getting-Started-with-Forex-Trading-Using-Python"
"PacktPublishing/Hands-On-Financial-Trading-with-Python" -> "PacktPublishing/Algorithmic-Short-Selling-with-Python"
"PacktPublishing/Hands-On-Financial-Trading-with-Python" -> "PacktPublishing/Learn-Algorithmic-Trading"
"PacktPublishing/Hands-On-Financial-Trading-with-Python" -> "sofienkaabar/contrarian-trading-strategies" ["e"=1]
"PacktPublishing/Hands-On-Financial-Trading-with-Python" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"PacktPublishing/Hands-On-Financial-Trading-with-Python" -> "sofienkaabar/mastering-financial-pattern-recognition" ["e"=1]
"PacktPublishing/Hands-On-Financial-Trading-with-Python" -> "sofienkaabar/the-book-of-trading-strategies" ["e"=1]
"hudson-and-thames/arbitragelab" -> "hudson-and-thames/arbitrage_research"
"hudson-and-thames/arbitragelab" -> "0xfdf/toraniko"
"hudson-and-thames/arbitragelab" -> "skfolio/skfolio"
"hudson-and-thames/arbitragelab" -> "ArturSepp/QuantInvestStrats"
"hudson-and-thames/arbitragelab" -> "beatzxbt/mm-toolbox" ["e"=1]
"hudson-and-thames/arbitragelab" -> "beatzxbt/bybit-smm" ["e"=1]
"hudson-and-thames/arbitragelab" -> "dbrojas/optlib"
"hudson-and-thames/arbitragelab" -> "vollib/vollib"
"hudson-and-thames/arbitragelab" -> "JerBouma/AlgorithmicTrading"
"hudson-and-thames/arbitragelab" -> "jsmidt/QuantPy"
"hudson-and-thames/arbitragelab" -> "quantsbin/Quantsbin"
"hudson-and-thames/arbitragelab" -> "rolling-panda-san/notebooks"
"hudson-and-thames/arbitragelab" -> "jasonstrimpel/volatility-trading"
"hudson-and-thames/arbitragelab" -> "hudson-and-thames/portfoliolab"
"hudson-and-thames/arbitragelab" -> "Heerozh/spectre"
"LechGrzelak/FinancialEngineering_IR_xVA" -> "LechGrzelak/Computational-Finance-Course"
"LechGrzelak/FinancialEngineering_IR_xVA" -> "LechGrzelak/QuantFinanceBook"
"LechGrzelak/FinancialEngineering_IR_xVA" -> "attack68/book_irds3"
"LechGrzelak/FinancialEngineering_IR_xVA" -> "LechGrzelak/PyStochasticVolatility"
"LechGrzelak/FinancialEngineering_IR_xVA" -> "nburgessx/SwapsBook"
"LechGrzelak/FinancialEngineering_IR_xVA" -> "Dagalon/PyStochasticVolatility"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "bingit2/TradingView-to-ThinkorSwim"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "hwrdprkns/ThinkOrSwim"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "jeog/TOSDataBridge"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "sjjohns/ThinkOrSwimStudies"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "jshingler/TOS-and-Thinkscript-Snippet-Collection"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "korygill/technical-analysis"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "tylerebowers/Schwabdev"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "alexgolec/tda-api"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "bernardcheng/tos_options_dashboard"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "xxwikkixx/ChadBot"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "areed1192/td-ameritrade-python-api"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "timkpaine/tdameritrade"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "itsjafer/schwab-api"
"TreyThomas93/python-trading-bot-with-thinkorswim" -> "alexgolec/schwab-py"
"snowtrack/snowfs" -> "zhuowei/hipster.house" ["e"=1]
"joshuaulrich/quantmod" -> "LongOnly/Quantitative-Notebooks" ["e"=1]
"MicroTrendsLtd/NinjaTrader8" -> "DominikBritz/NinjaTrader-indicators-strategies"
"MicroTrendsLtd/NinjaTrader8" -> "beckerben/NinjaTrader"
"MicroTrendsLtd/NinjaTrader8" -> "GithubRealFan/Ninja-Trader-8"
"MicroTrendsLtd/NinjaTrader8" -> "efitzkiwi/NT8SupplyDemandDTBot"
"MicroTrendsLtd/NinjaTrader8" -> "DiegoChuW/RSItradingBot"
"MicroTrendsLtd/NinjaTrader8" -> "trading-code/ninjatrader-freeorderflow"
"MicroTrendsLtd/NinjaTrader8" -> "WaleeTheRobot/order-flow-bot"
"MicroTrendsLtd/NinjaTrader8" -> "magols/NinjaTraderDev"
"MicroTrendsLtd/NinjaTrader8" -> "gjh33/SmartStrategies"
"MicroTrendsLtd/NinjaTrader8" -> "twdsje/Ninjatrader-scripts"
"AI4Finance-Foundation/FinRL_Podracer" -> "AI4Finance-Foundation/FinRL" ["e"=1]
"PythonProgramming/Pattern-Recognition-for-Forex-Trading" -> "hayatoy/ml-forex-prediction"
"PythonProgramming/Pattern-Recognition-for-Forex-Trading" -> "RiccardoM/Forex-and-Stock-Python-Pattern-Recognizer"
"PythonProgramming/Pattern-Recognition-for-Forex-Trading" -> "jonromero/forex_algotrading"
"PythonProgramming/Pattern-Recognition-for-Forex-Trading" -> "fxcm/ForexConnectAPI"
"PythonProgramming/Pattern-Recognition-for-Forex-Trading" -> "noootown/Forex-DQN"
"PythonProgramming/Pattern-Recognition-for-Forex-Trading" -> "theclai/ForexEA"
"PythonProgramming/Pattern-Recognition-for-Forex-Trading" -> "mhallsmoore/qsforex"
"tradologics/AlgoTradingSummit" -> "tyrneh/options-implied-probability"
"ryantcullen/stock-bot" -> "Ncohen10/StockAlgorithm"
"ryantcullen/stock-bot" -> "tradytics/surpriver"
"hashABCD/opstrat" -> "nickdesaulniers/profitnloss"
"PacktPublishing/Algorithmic-Short-Selling-with-Python-Published-by-Packt" -> "PacktPublishing/Algorithmic-Short-Selling-with-Python"
"vanderschaarlab/mlforhealthlabpub" -> "clinicalml/cfrnet" ["e"=1]
"vanderschaarlab/mlforhealthlabpub" -> "AliciaCurth/CATENets" ["e"=1]
"vanderschaarlab/mlforhealthlabpub" -> "jsyoon0823/TimeGAN"
"vanderschaarlab/mlforhealthlabpub" -> "vanderschaarlab/clairvoyance"
"vanderschaarlab/mlforhealthlabpub" -> "imics-lab/tts-gan"
"vanderschaarlab/mlforhealthlabpub" -> "BorealisAI/private-data-generation" ["e"=1]
"vanderschaarlab/mlforhealthlabpub" -> "d909b/drnet" ["e"=1]
"vanderschaarlab/mlforhealthlabpub" -> "fjxmlzn/DoppelGANger"
"vanderschaarlab/mlforhealthlabpub" -> "vanderschaarlab/temporai"
"vanderschaarlab/mlforhealthlabpub" -> "jsyoon0823/GANITE" ["e"=1]
"vanderschaarlab/mlforhealthlabpub" -> "proceduralia/pytorch-GAN-timeseries"
"vanderschaarlab/mlforhealthlabpub" -> "kochbj/Deep-Learning-for-Causal-Inference" ["e"=1]
"vanderschaarlab/mlforhealthlabpub" -> "birdx0810/timegan-pytorch"
"vanderschaarlab/mlforhealthlabpub" -> "vanderschaarlab/synthcity" ["e"=1]
"vanderschaarlab/mlforhealthlabpub" -> "huawei-noah/trustworthyAI" ["e"=1]
"aurbano/robinhood-node" -> "sanko/Robinhood"
"aurbano/robinhood-node" -> "robinhood-unofficial/pyrh"
"aurbano/robinhood-node" -> "torreyleonard/algotrader"
"aurbano/robinhood-node" -> "anilshanbhag/RobinhoodShell"
"aurbano/robinhood-node" -> "yura505/robinbot"
"aurbano/robinhood-node" -> "edwardlai3582/RobInDaHood"
"aurbano/robinhood-node" -> "chiefsmurph/robinhood-playground"
"aurbano/robinhood-node" -> "jmfernandes/robin_stocks"
"aurbano/robinhood-node" -> "2018kguo/RobinhoodBot"
"aurbano/robinhood-node" -> "westonplatter/fast_arrow"
"aurbano/robinhood-node" -> "LichAmnesia/Robinhood"
"aurbano/robinhood-node" -> "joshfraser/robinhood-to-csv"
"aurbano/robinhood-node" -> "bcwik9/robinhood-on-rails"
"aurbano/robinhood-node" -> "rohanpai/Robinhood"
"aurbano/robinhood-node" -> "rghuckins/robinhood-google-sheets"
"stefan-jansen/synthetic-data-for-finance" -> "firmai/mtss-gan"
"stefan-jansen/synthetic-data-for-finance" -> "stefan-jansen/python-algorithms"
"stefan-jansen/synthetic-data-for-finance" -> "CasperHogenboom/WGAN_financial_time-series"
"john-yan/SierraChartConnect" -> "jason51553262/python-ws-dtc-client"
"john-yan/SierraChartConnect" -> "Queeq/pydtc"
"john-yan/SierraChartConnect" -> "AndrewAMD/SierraChartZorroPlugin"
"yhilpisch/dawp" -> "yhilpisch/dx"
"yhilpisch/dawp" -> "yhilpisch/aiif"
"yhilpisch/dawp" -> "yhilpisch/py4fi2nd"
"yhilpisch/dawp" -> "yhilpisch/py4fi"
"yhilpisch/dawp" -> "yhilpisch/py4at"
"yhilpisch/dawp" -> "yhilpisch/lvvd"
"yhilpisch/dawp" -> "Finance-Hub/FinanceHub"
"yhilpisch/dawp" -> "jamesmawm/Mastering-Python-for-Finance-source-codes"
"yhilpisch/dawp" -> "PacktPublishing/Python-for-Finance-Cookbook"
"yhilpisch/dawp" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"yhilpisch/dawp" -> "jasonstrimpel/volatility-trading"
"yhilpisch/dawp" -> "PacktPublishing/Python-for-Finance-Second-Edition"
"yhilpisch/dawp" -> "dedwards25/Python_Option_Pricing"
"yhilpisch/dawp" -> "rsvp/fecon235"
"yhilpisch/dawp" -> "enthought/pyql"
"gridaco/grida" -> "rahuljoshi44/GraphVega"
"gridaco/grida" -> "Bugswriter/tuxi" ["e"=1]
"gridaco/grida" -> "mitmath/computational-thinking" ["e"=1]
"gridaco/grida" -> "nodejs/undici" ["e"=1]
"gridaco/grida" -> "gaih/introduction-to-python" ["e"=1]
"gridaco/grida" -> "activeloopai/deeplake" ["e"=1]
"gridaco/grida" -> "stypr/clubhouse-py"
"gridaco/grida" -> "conwnet/github1s" ["e"=1]
"gridaco/grida" -> "elixir-nx/nx" ["e"=1]
"gridaco/grida" -> "getmeli/meli" ["e"=1]
"gridaco/grida" -> "sniptt-official/ots" ["e"=1]
"gridaco/grida" -> "BlackOtton/RedStar-Media"
"gridaco/grida" -> "salesforce/cloudsplaining" ["e"=1]
"gridaco/grida" -> "jameslittle230/stork" ["e"=1]
"gridaco/grida" -> "deepfence/SecretScanner"
"BlackOtton/RedStar-Media" -> "takeshixx/redstar-tools"
"BlackOtton/RedStar-Media" -> "kaiserfen/RedstarOSxfce"
"stypr/clubhouse-py" -> "grishka/Houseclub"
"stypr/clubhouse-py" -> "seia-soto/clubhouse-api"
"stypr/clubhouse-py" -> "ai-eks/OpenClubhouse"
"stypr/clubhouse-py" -> "yongxinw/GSDT" ["e"=1]
"stypr/clubhouse-py" -> "gridaco/grida"
"stypr/clubhouse-py" -> "callmearta/clubhouse-desktop"
"stypr/clubhouse-py" -> "bestony/neshouse" ["e"=1]
"stypr/clubhouse-py" -> "activeloopai/deeplake" ["e"=1]
"stypr/clubhouse-py" -> "google/model_search" ["e"=1]
"stypr/clubhouse-py" -> "nasa/fprime" ["e"=1]
"stypr/clubhouse-py" -> "justinamiller/DotNet-Coding-Guidelines"
"stypr/clubhouse-py" -> "zhuowei/ClubhouseAPI"
"stypr/clubhouse-py" -> "ccxt/binance-trade-bot" ["e"=1]
"stypr/clubhouse-py" -> "mitmath/computational-thinking" ["e"=1]
"stypr/clubhouse-py" -> "elixir-nx/nx" ["e"=1]
"bkelly-lab/ReplicationCrisis" -> "bkelly-lab/ipca"
"bkelly-lab/ReplicationCrisis" -> "OpenSourceAP/CrossSection"
"bkelly-lab/ReplicationCrisis" -> "Feng-CityUHK/EquityCharacteristics"
"bkelly-lab/ReplicationCrisis" -> "jasonzy121/Deep_Learning_Asset_Pricing"
"bkelly-lab/ReplicationCrisis" -> "fkempf92/FactorData"
"bkelly-lab/ReplicationCrisis" -> "LouisChen1992/Deep_Learning_in_Asset_Pricing"
"bkelly-lab/ReplicationCrisis" -> "chulwoohan/pyanomaly"
"bkelly-lab/ReplicationCrisis" -> "velikov-mihail/AssayingAnomalies"
"bkelly-lab/ReplicationCrisis" -> "Alexander-M-Dickerson/TRACE-corporate-bond-processing"
"bkelly-lab/ReplicationCrisis" -> "KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data"
"bkelly-lab/ReplicationCrisis" -> "xiubooth/ML_Codes"
"bkelly-lab/ReplicationCrisis" -> "Jianeng/Deep-Learning-in-Asset-Pricing"
"bkelly-lab/ReplicationCrisis" -> "goutham-fin/BCF-Workshop"
"ABZ-Aaron/cheat-sheets" -> "g-make-it/IG_Trading_Algo_Scripts_Python" ["e"=1]
"paulperry/quant" -> "maihde/quant"
"paulperry/quant" -> "LongOnly/Quantitative-Notebooks"
"paulperry/quant" -> "MarcosCarreira/DermanPapers"
"paulperry/quant" -> "jsmidt/QuantPy"
"paulperry/quant" -> "Finance-Hub/FinanceHub"
"paulperry/quant" -> "PythonCharmers/QuantFinance"
"paulperry/quant" -> "LechGrzelak/QuantFinanceBook"
"paulperry/quant" -> "benjaminmgross/visualize-wealth"
"paulperry/quant" -> "jamesmawm/Mastering-Python-for-Finance-source-codes"
"paulperry/quant" -> "marketneutral/alphatools"
"paulperry/quant" -> "jasonstrimpel/volatility-trading"
"paulperry/quant" -> "robcarver17/systematictradingexamples"
"paulperry/quant" -> "KidQuant/Pairs-Trading-With-Python"
"paulperry/quant" -> "rsvp/fecon235"
"paulperry/quant" -> "quantsbin/Quantsbin"
"WallStreetAnalytics/wallstreetanalytics" -> "SamPom100/UnusualVolumeDetector" ["e"=1]
"WallStreetAnalytics/wallstreetanalytics" -> "brndnmtthws/thetagang" ["e"=1]
"jkirkby3/pymle" -> "jkirkby3/fypy"
"tradingeconomics/tradingeconomics" -> "mortada/fredapi" ["e"=1]
"tradingeconomics/tradingeconomics" -> "cuemacro/findatapy" ["e"=1]
"tradingeconomics/tradingeconomics" -> "quandl/quandl-python" ["e"=1]
"tradingeconomics/tradingeconomics" -> "rsvp/fecon235" ["e"=1]
"tradingeconomics/tradingeconomics" -> "ranaroussi/qtpylib" ["e"=1]
"tradingeconomics/tradingeconomics" -> "abbass2/pyqstrat" ["e"=1]
"girishg4t/bhavCopy-downloader" -> "girishg4t/nse-bse-bhavcopy"
"areed1192/td-ameritrade-api" -> "areed1192/td-ameritrade-python-api"
"The-NOPE-Project/intraday_nope_research" -> "jensolson/SPX-Gamma-Exposure" ["e"=1]
"AsyncAlgoTrading/algo-coin" -> "AsyncAlgoTrading/aat" ["e"=1]
"AsyncAlgoTrading/algo-coin" -> "anfederico/gemini" ["e"=1]
"AsyncAlgoTrading/algo-coin" -> "bartosh/backtrader" ["e"=1]
"Arelle/EdgarRenderer" -> "lukerosiak/pysec"
"Arelle/EdgarRenderer" -> "edgarminers/python-edgar"
"Arelle/EdgarRenderer" -> "andrewkittredge/financial_fundamentals"
"Arelle/EdgarRenderer" -> "Arelle/Arelle"
"Arelle/EdgarRenderer" -> "tooksoi/ScraXBRL"
"Arelle/EdgarRenderer" -> "datasets/edgar"
"Arelle/EdgarRenderer" -> "altova/sec-xbrl"
"Arelle/EdgarRenderer" -> "alions7000/SEC-EDGAR-text"
"femtotrader/pandas_talib" -> "arkochhar/Technical-Indicators"
"femtotrader/pandas_talib" -> "ematvey/pybacktest"
"femtotrader/pandas_talib" -> "llazzaro/analyzer"
"femtotrader/pandas_talib" -> "panpanpandas/ultrafinance"
"femtotrader/pandas_talib" -> "kylejusticemagnuson/pyti"
"femtotrader/pandas_talib" -> "alpha-miner/Finance-Python"
"femtotrader/pandas_talib" -> "peerchemist/finta"
"femtotrader/pandas_talib" -> "FreddieWitherden/ta"
"femtotrader/pandas_talib" -> "bpsmith/tia"
"femtotrader/pandas_talib" -> "tomyitav/talib-extensions"
"femtotrader/pandas_talib" -> "cuemacro/findatapy"
"femtotrader/pandas_talib" -> "mementum/bta-lib"
"femtotrader/pandas_talib" -> "TulipCharts/tulipy"
"femtotrader/pandas_talib" -> "constverum/Quantdom"
"femtotrader/pandas_talib" -> "pmorissette/ffn"
"Eleven-Trading/TradeNote" -> "mransbro/tradingjournal"
"Eleven-Trading/TradeNote" -> "drozd1krystian/trading-journal"
"Eleven-Trading/TradeNote" -> "sheriv/Trading-journal-with-auto-statistic"
"Eleven-Trading/TradeNote" -> "gbzenobi/CSharp-NT8-OrderFlowKit"
"Eleven-Trading/TradeNote" -> "suenot/profitmaker" ["e"=1]
"Eleven-Trading/TradeNote" -> "PFund-Software-Ltd/pytrade.org"
"Eleven-Trading/TradeNote" -> "algermakiputin/Trading-Journal"
"Eleven-Trading/TradeNote" -> "FrozenTundraTrader/sierrachart"
"SpencerPao/Quantitative_Strategies" -> "KidQuant/Pairs-Trading-With-Python"
"SpencerPao/Quantitative_Strategies" -> "financialnoob/pairs_trading"
"jkirkby3/fypy" -> "jkirkby3/PROJ_Option_Pricing_Matlab"
"jkirkby3/fypy" -> "jkirkby3/pymle"
"jkirkby3/fypy" -> "Robin-Guilliou/Option-Pricing"
"Vincentho711/Interactive-Brokers-Trading-Bot" -> "ozdemirozcelik/pairs-ibkr"
"Vincentho711/Interactive-Brokers-Trading-Bot" -> "Jake0303/InteractiveBrokersPythonBot"
"ednunezg/pytrendline" -> "neurotrader888/TrendLineAutomation"
"ednunezg/pytrendline" -> "sohandillikar/SupportResistance"
"ednunezg/pytrendline" -> "white07S/TradingPatternScanner"
"PythonForForex/ib_insync-guide-interactive-brokers" -> "zoakes/Modular_IB"
"PythonForForex/ib_insync-guide-interactive-brokers" -> "PythonForForex/Interactive-brokers-python-api-guide"
"PythonForForex/ib_insync-guide-interactive-brokers" -> "hackingthemarkets/interactive-brokers-demo"
"robcarver17/ibswigsystematicexamples" -> "colinalexander/IbPython3"
"derekbanas/Python4Finance" -> "derekbanas/pandas-tutorial"
"derekbanas/Python4Finance" -> "derekbanas/matplotlib"
"derekbanas/Python4Finance" -> "derekbanas/TimeSeriesAnalysis"
"derekbanas/Python4Finance" -> "derekbanas/plotly-tutorial"
"derekbanas/Python4Finance" -> "derekbanas/NumPy-Tutorial"
"derekbanas/Python4Finance" -> "derekbanas/seaborn"
"derekbanas/Python4Finance" -> "derekbanas/tensorflow"
"derekbanas/Python4Finance" -> "Hvass-Labs/FinanceOps"
"derekbanas/Python4Finance" -> "derekbanas/StatsModelsRegressions"
"derekbanas/Python4Finance" -> "PacktPublishing/Python-for-Finance-Cookbook"
"derekbanas/Python4Finance" -> "derekbanas/PythonTutorial"
"justinamiller/DotNet-Coding-Guidelines" -> "seia-soto/clubhouse-api"
"justinamiller/DotNet-Coding-Guidelines" -> "yongxinw/GSDT" ["e"=1]
"bestony/neshouse" -> "ai-eks/OpenClubhouse" ["e"=1]
"bestony/neshouse" -> "stypr/clubhouse-py" ["e"=1]
"ai-eks/OpenClubhouse" -> "ai-eks/OpenClubhouse-Worker"
"ai-eks/OpenClubhouse" -> "stypr/clubhouse-py"
"ai-eks/OpenClubhouse" -> "zhuowei/hipster.house"
"ai-eks/OpenClubhouse" -> "seia-soto/clubhouse-api"
"ai-eks/OpenClubhouse" -> "grishka/Houseclub"
"ai-eks/OpenClubhouse" -> "bestony/neshouse" ["e"=1]
"ai-eks/OpenClubhouse" -> "google/model_search" ["e"=1]
"ai-eks/OpenClubhouse" -> "yongxinw/GSDT" ["e"=1]
"ai-eks/OpenClubhouse" -> "snowtrack/snowfs" ["e"=1]
"ai-eks/OpenClubhouse" -> "wiwikuan/fast-srt-subtitle" ["e"=1]
"ai-eks/OpenClubhouse" -> "justinamiller/DotNet-Coding-Guidelines"
"ai-eks/OpenClubhouse" -> "callmearta/clubhouse-desktop"
"ai-eks/OpenClubhouse" -> "teacat/tocas" ["e"=1]
"ai-eks/OpenClubhouse" -> "Aetsu/OffensivePipeline" ["e"=1]
"ai-eks/OpenClubhouse" -> "ballista-compute/ballista" ["e"=1]
"7astro7/full_fred" -> "letsgoexploring/fredpy"
"7astro7/full_fred" -> "avelkoski/FRB"
"7astro7/full_fred" -> "jjotterson/datapungi_fed"
"7astro7/full_fred" -> "gw-moore/pyfredapi"
"7astro7/full_fred" -> "zachwill/fred"
"neilsmurphy/backtrader_template" -> "Skinok/backtrader-pyqt-ui"
"neilsmurphy/backtrader_template" -> "happydasch/btplotting"
"neilsmurphy/backtrader_template" -> "ab-trader/backtrader_addons"
"neilsmurphy/backtrader_template" -> "Ckend/pythondict-quant"
"yhilpisch/aiif" -> "yhilpisch/py4at"
"yhilpisch/aiif" -> "yhilpisch/dawp"
"yhilpisch/aiif" -> "yhilpisch/py4fi2nd"
"yhilpisch/aiif" -> "yhilpisch/ftwp"
"yhilpisch/aiif" -> "yhilpisch/dx"
"yhilpisch/aiif" -> "yhilpisch/lvvd"
"yhilpisch/aiif" -> "yhilpisch/tpqoa"
"yhilpisch/aiif" -> "PacktPublishing/Python-for-Finance-Cookbook"
"yhilpisch/aiif" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"yhilpisch/aiif" -> "yhilpisch/rlfinance"
"yhilpisch/aiif" -> "yhilpisch/aifin"
"trentstauff/FXBot" -> "PeterMalkin/oandapybot"
"trentstauff/FXBot" -> "Mo-Khalifa96/Forex-Trading-Bot"
"trentstauff/FXBot" -> "tanvird3/TradingRobot"
"trentstauff/FXBot" -> "ogunjobiFX/MT4-MT5-Forex-Signal-Copier-Telegram-Bot" ["e"=1]
"trentstauff/FXBot" -> "raidastauras/Trading-Bot"
"Nasdaq/NasdaqCloudDataService-SDK-Python" -> "Nasdaq/NasdaqCloudDataService-REST-API"
"yugedata/Options_Data_Science" -> "Andrew-Reis-SMU-2022/Options_Based_Trading" ["e"=1]
"yugedata/Options_Data_Science" -> "Options-Visualizer/Options-Visualizer.github.io" ["e"=1]
"yugedata/Options_Data_Science" -> "sirnfs/OptionSuite" ["e"=1]
"yugedata/Options_Data_Science" -> "hermeneuticlens/options-toolkit" ["e"=1]
"yugedata/Options_Data_Science" -> "alexgolec/tda-api" ["e"=1]
"Python-para-Trading/Mini-Retos-PPT" -> "paduel/Python_para_Trading"
"ultra1971/algotrading_stack" -> "Python-para-Trading/Mini-Retos-PPT"
"rohanpai/Robinhood" -> "briansrls/Robinhood-for-Google-Finance"
"bullhe4d/bigwatermelon" -> "tensortrade-org/tensortrade" ["e"=1]
"llazzaro/analyzer" -> "jeffrey-liang/quantitative"
"llazzaro/analyzer" -> "joequant/algobroker"
"llazzaro/analyzer" -> "benjaminmgross/visualize-wealth"
"llazzaro/analyzer" -> "rochars/trade"
"llazzaro/analyzer" -> "quantmind/dynts"
"llazzaro/analyzer" -> "panpanpandas/ultrafinance"
"llazzaro/analyzer" -> "edouardpoitras/NowTrade"
"llazzaro/analyzer" -> "ematvey/pybacktest"
"llazzaro/analyzer" -> "wegamekinglc/VisualPortfolio"
"llazzaro/analyzer" -> "thalesians/pythalesians"
"llazzaro/analyzer" -> "femtotrader/pandas_talib"
"llazzaro/analyzer" -> "johnbywater/quantdsl"
"facioquo/stock-indicators-python" -> "jmrichardson/tuneta"
"facioquo/stock-indicators-python" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"facioquo/stock-indicators-python" -> "white07S/TradingPatternScanner"
"facioquo/stock-indicators-python" -> "nardew/talipp"
"letsgoexploring/fredpy" -> "jjotterson/datapungi_fed"
"letsgoexploring/fredpy" -> "7astro7/full_fred"
"czielinski/portfolioopt" -> "cvxgrp/cvxportfolio"
"czielinski/portfolioopt" -> "wellecks/port_opt"
"czielinski/portfolioopt" -> "icezerowjj/MultipleFactorRiskModel" ["e"=1]
"czielinski/portfolioopt" -> "Marigold/universal-portfolios"
"czielinski/portfolioopt" -> "melvinmt/sharpefolio"
"czielinski/portfolioopt" -> "VivekPa/OptimalPortfolio"
"czielinski/portfolioopt" -> "chaitjo/markowitz-portfolio-optimization" ["e"=1]
"czielinski/portfolioopt" -> "quantopian/empyrical"
"czielinski/portfolioopt" -> "sanjeevai/multi-factor-model" ["e"=1]
"czielinski/portfolioopt" -> "jasonstrimpel/covshrink"
"czielinski/portfolioopt" -> "jankrepl/deepdow"
"czielinski/portfolioopt" -> "chrism2671/PyTrendFollow"
"czielinski/portfolioopt" -> "benjaminmgross/visualize-wealth"
"czielinski/portfolioopt" -> "kvsnoufal/portfolio-optimization" ["e"=1]
"czielinski/portfolioopt" -> "jerryxyx/AlphaTrading" ["e"=1]
"calcbench/python_api_client" -> "calcbench/notebooks"
"pfnet-research/pfhedge" -> "YuMan-Tam/deep-hedging"
"pfnet-research/pfhedge" -> "hansbuehler/deephedging"
"pfnet-research/pfhedge" -> "pfnet-research/NoTransactionBandNetwork"
"pfnet-research/pfhedge" -> "guijinSON/Awesome-Deep-Hedging"
"pfnet-research/pfhedge" -> "amuguruza/NN-StochVol-Calibrations"
"pfnet-research/pfhedge" -> "alexandrecarbonneau/Deep-Hedging-of-Long-Term-Financial-Derivatives"
"pfnet-research/pfhedge" -> "jsg71/Deep-Hedging"
"pfnet-research/pfhedge" -> "svenhsia/Calibrating-Rough-Volatility-Models-with-Deep-Learning"
"pfnet-research/pfhedge" -> "ryanmccrickerd/rough_bergomi"
"691175002/BLPInterface" -> "alex314159/blpapiwrapper"
"viniesposito/py-mlfactor" -> "shokru/mlfactor.github.io"
"viniesposito/py-mlfactor" -> "PierreNowi/cs230-project"
"bmoscon/orderbook" -> "tr8dr/tseries-patterns" ["e"=1]
"mattsta/icli" -> "ib-api-reloaded/ib_async"
"mattsta/icli" -> "mattsta/ib_insync"
"mattsta/icli" -> "ClimberMel/ib_tools"
"mattsta/icli" -> "mattsta/trade-balancer"
"mattsta/icli" -> "extrange/ibkr-docker"
"ai-eks/OpenClubhouse-Worker" -> "zhuowei/hipster.house"
"ai-eks/OpenClubhouse-Worker" -> "ai-eks/OpenClubhouse"
"hackingthemarkets/interactive-brokers-demo" -> "hackingthemarkets/tradingview-interactive-brokers"
"hackingthemarkets/interactive-brokers-demo" -> "hackingthemarkets/backtrader-interactive-brokers"
"hackingthemarkets/interactive-brokers-demo" -> "hackingthemarkets/backtrader" ["e"=1]
"hackingthemarkets/interactive-brokers-demo" -> "PythonForForex/ib_insync-guide-interactive-brokers"
"hackingthemarkets/interactive-brokers-demo" -> "Jake0303/InteractiveBrokersPythonBot"
"hackingthemarkets/tradingview-interactive-brokers" -> "hackingthemarkets/tradingview-alpaca-strategy-alert-webhook-heroku" ["e"=1]
"hackingthemarkets/tradingview-interactive-brokers" -> "hackingthemarkets/interactive-brokers-demo"
"hackingthemarkets/tradingview-interactive-brokers" -> "hackingthemarkets/backtrader-interactive-brokers"
"hackingthemarkets/tradingview-interactive-brokers" -> "hackingthemarkets/tradingview-binance-strategy-alert-webhook" ["e"=1]
"hackingthemarkets/tradingview-interactive-brokers" -> "PlusGenie/tbot-tradingboat"
"hackingthemarkets/tradingview-interactive-brokers" -> "hackingthemarkets/interactive-brokers-web-api"
"hackingthemarkets/tradingview-interactive-brokers" -> "nate-ellis/End-to-End-TradingView-Alert-Transmission-and-Interactive-Brokers-API-Automated-Trading-System-"
"hackingthemarkets/tradingview-interactive-brokers" -> "jsarbach/ib-trading"
"hackingthemarkets/tradingview-interactive-brokers" -> "Jake0303/InteractiveBrokersPythonBot"
"hackingthemarkets/tradingview-interactive-brokers" -> "robswc/tradingview-webhooks-bot" ["e"=1]
"hackingthemarkets/tradingview-interactive-brokers" -> "hackingthemarkets/backtrader" ["e"=1]
"hackingthemarkets/tradingview-interactive-brokers" -> "Vincentho711/Interactive-Brokers-Trading-Bot"
"areed1192/interactive-brokers-api" -> "areed1192/interactive-broker-python-api"
"cvxgrp/cvx_short_course" -> "cvxgrp/cvxportfolio" ["e"=1]
"jeffex/bot-sinais-2.0" -> "jeffex/Catalogador"
"zhuowei/hipster.house" -> "ai-eks/OpenClubhouse-Worker"
"codereverser/casparser" -> "codereverser/folioman"
"codereverser/casparser" -> "NayakwadiS/mftool"
"codereverser/casparser" -> "ansingh/casparser"
"PyFE/PyfengForPapers" -> "PyFE/FE-R"
"PyFE/PyfengForPapers" -> "PyFE/PyFENG"
"manusimidt/py-xbrl" -> "greedo/python-xbrl"
"manusimidt/py-xbrl" -> "BrelLibrary/brel"
"manusimidt/py-xbrl" -> "tooksoi/ScraXBRL"
"manusimidt/py-xbrl" -> "marcioalexandre/XbrlParser"
"MarketMakerLite/polygon" -> "pssolanki111/polygon"
"jo-cho/trading-rules-using-machine-learning" -> "jo-cho/meta_labeling_simplified"
"jo-cho/meta_labeling_simplified" -> "jo-cho/advances_in_financial_machine_learning"
"jo-cho/meta_labeling_simplified" -> "jo-cho/trading-rules-using-machine-learning"
"efitzkiwi/NT8SupplyDemandDTBot" -> "kodalli/NT8-PAT-Strategy"
"financialnoob/pairs_trading" -> "KidQuant/Pairs-Trading-With-Python"
"financialnoob/pairs_trading" -> "simaomsarmento/PairsTrading"
"financialnoob/pairs_trading" -> "wangy8989/Pairs-Trading-with-Machine-Learning"
"financialnoob/pairs_trading" -> "wywongbd/pairstrade-fyp-2019"
"financialnoob/pairs_trading" -> "sapphire921/HFT-Pairs-Trading" ["e"=1]
"financialnoob/pairs_trading" -> "david-alber/Pairs-Trading-as-application-to-the-Ornstein-Uhlenbeck-Process"
"financialnoob/pairs_trading" -> "JerBouma/AlgorithmicTrading"
"financialnoob/pairs_trading" -> "SpencerPao/Quantitative_Strategies"
"financialnoob/pairs_trading" -> "sstoikov/microprice" ["e"=1]
"financialnoob/pairs_trading" -> "gjimzhou/MTH9879-Market-Microstructure-Models" ["e"=1]
"financialnoob/pairs_trading" -> "rolling-panda-san/notebooks"
"itsjafer/schwab-api" -> "tylerebowers/Schwabdev"
"itsjafer/schwab-api" -> "alexgolec/schwab-py"
"itsjafer/schwab-api" -> "nathan-fiscaletti/schwab-api-js"
"itsjafer/schwab-api" -> "NelsonDane/public-invest-api"
"itsjafer/schwab-api" -> "tastyware/tastytrade"
"hi-imcodeman/stock-nse-india" -> "jugaad-py/jugaad-data"
"hi-imcodeman/stock-nse-india" -> "NSEDownload/NSEDownload"
"hi-imcodeman/stock-nse-india" -> "aeron7/nsepython"
"callmearta/clubhouse-desktop" -> "seovchinnikov/clubhouse-web"
"callmearta/clubhouse-desktop" -> "varnamproject/govarnam" ["e"=1]
"callmearta/clubhouse-desktop" -> "callmearta/kite"
"benearnthof/TimeGAN" -> "zzw-zwzhang/TimeGAN-pytorch"
"quantmind/ccy" -> "ZachLiuGIS/stock_extractor"
"quantmind/ccy" -> "econdb/inquisitor"
"quantmind/ccy" -> "skillachie/finsymbols"
"bottama/Dynamic-Derivatives-Portfolio-Hedging" -> "blakeheimann2/DynamicDeltaHedge"
"austin-starks/Deep-RL-Stocks" -> "austin-starks/FinAnGPT"
"lhwolff15/InsiderTrading" -> "hermeneuticlens/options-toolkit" ["e"=1]
"birdx0810/timegan-pytorch" -> "zzw-zwzhang/TimeGAN-pytorch"
"birdx0810/timegan-pytorch" -> "SigCGANs/Conditional-Sig-Wasserstein-GANs"
"birdx0810/timegan-pytorch" -> "AlanDongMu/TimeGAN_PytorchRebuild"
"birdx0810/timegan-pytorch" -> "jsyoon0823/TimeGAN"
"birdx0810/timegan-pytorch" -> "benearnthof/TimeGAN"
"birdx0810/timegan-pytorch" -> "proceduralia/pytorch-GAN-timeseries"
"ultra1971/backtrader_ib_insync" -> "atreyuxtrading/atreyu-backtrader-api"
"gaborvecsei/Stocks-Pattern-Analyzer" -> "CharlesLoo/stock-pattern-recorginition"
"gaborvecsei/Stocks-Pattern-Analyzer" -> "BennyThadikaran/stock-pattern"
"gaborvecsei/Stocks-Pattern-Analyzer" -> "kanwalpreet18/canslimTechnical"
"derekbanas/TimeSeriesAnalysis" -> "derekbanas/pandas-tutorial"
"derekbanas/TimeSeriesAnalysis" -> "derekbanas/matplotlib"
"derekbanas/TimeSeriesAnalysis" -> "derekbanas/NumPy-Tutorial"
"derekbanas/TimeSeriesAnalysis" -> "derekbanas/StatsModelsRegressions"
"HawkEyeCoding/nse-oi-analysis" -> "atrybyme/Open-Interest-NSE-Live-Analysis"
"beinghorizontal/BhavFnO" -> "ranjanrak/async-ticker"
"bergant/finstr" -> "bergant/XBRLFiles"
"bergant/finstr" -> "sewardlee337/finreportr"
"bergant/finstr" -> "mwaldstein/edgarWebR"
"bergant/finstr" -> "bergant/xbrlus"
"bergant/finstr" -> "lukerosiak/pysec"
"bergant/finstr" -> "tooksoi/ScraXBRL"
"yhilpisch/pydlon15" -> "yhilpisch/mvportfolio"
"TaifQureshi/Forex-Lstm" -> "rrguardo/market_predictor_cnn"
"TaifQureshi/Forex-Lstm" -> "jerryduncan/pipsProphet"
"ranjanrak/optionchainstream" -> "ranjanrak/async-ticker"
"ranjanrak/optionchainstream" -> "anurag-roy/kite-option-chain"
"ranjanrak/optionchainstream" -> "zerodha/kite-connect-python-example"
"ranjanrak/optionchainstream" -> "pramakrishn/express-option-chain"
"sumanblack666/IQ-Option-Lua-scripts" -> "Muhammad-1990/iqoption"
"sumanblack666/IQ-Option-Lua-scripts" -> "guilhersantos/iq_bots"
"sumanblack666/IQ-Option-Lua-scripts" -> "quadcode-tech/quadcodescript-library"
"iamlemec/fastpat" -> "hopped/uspto-patents-parsing-tools"
"iamlemec/fastpat" -> "liuqiyuan/UPET-USPTO-Patent-Exploring-Tool"
"iamlemec/fastpat" -> "funginstitute/patentprocessor"
"iamlemec/fastpat" -> "ip-tools/uspto-opendata-python"
"iamlemec/fastpat" -> "ip-tools/python-epo-ops-client"
"iamlemec/fastpat" -> "USPTO/PatentPublicData"
"iamlemec/fastpat" -> "google/patents-public-data"
"iamlemec/fastpat" -> "poldham/lensr"
"benjaminmgross/visualize-wealth" -> "wegamekinglc/VisualPortfolio"
"benjaminmgross/visualize-wealth" -> "rochars/trade"
"benjaminmgross/visualize-wealth" -> "thalesians/pythalesians"
"benjaminmgross/visualize-wealth" -> "joequant/algobroker"
"benjaminmgross/visualize-wealth" -> "llazzaro/analyzer"
"benjaminmgross/visualize-wealth" -> "quantmind/dynts"
"benjaminmgross/visualize-wealth" -> "fja05680/pinkfish"
"benjaminmgross/visualize-wealth" -> "maihde/quant"
"benjaminmgross/visualize-wealth" -> "Emsu/prophet"
"benjaminmgross/visualize-wealth" -> "panpanpandas/ultrafinance"
"benjaminmgross/visualize-wealth" -> "CarterBain/AlephNull"
"lindomar-oliveira/backtrader-binance" -> "rodrigo-brito/backtrader-binance-bot"
"lindomar-oliveira/backtrader-binance" -> "WISEPLAT/backtrader_binance"
"lindomar-oliveira/backtrader-binance" -> "Dave-Vallance/bt-ccxt-store"
"lindomar-oliveira/backtrader-binance" -> "EarronYu/backtrader-binance-futures"
"lindomar-oliveira/backtrader-binance" -> "phonegapX/bt-ccxt-store-cn"
"jasonzy121/Deep_Learning_Asset_Pricing" -> "LouisChen1992/Deep_Learning_in_Asset_Pricing"
"jasonzy121/Deep_Learning_Asset_Pricing" -> "Darenar/DeepLearningAssetPricing_torch"
"jasonzy121/Deep_Learning_Asset_Pricing" -> "Jianeng/Deep-Learning-in-Asset-Pricing"
"Alexander-M-Dickerson/TRACE-corporate-bond-processing" -> "GiulioRossetti94/PyBondLab"
"fanzhenya/options_lab" -> "westonplatter/portfolio_management"
"fanzhenya/options_lab" -> "GrahamboJangles/PutPremiumProcessor"
"GrahamboJangles/PutPremiumProcessor" -> "Kamesh-K/Options-Visualization"
"Jake0303/InteractiveBrokersPythonBot" -> "Jake0303/RiskyOptionsBot"
"Jake0303/InteractiveBrokersPythonBot" -> "Vincentho711/Interactive-Brokers-Trading-Bot"
"Jake0303/InteractiveBrokersPythonBot" -> "hackingthemarkets/interactive-brokers-demo"
"Jake0303/InteractiveBrokersPythonBot" -> "PythonForForex/Interactive-brokers-python-api-guide"
"Jake0303/InteractiveBrokersPythonBot" -> "pavankishoremullapudy/InteractiveBrokers_TWS_API"
"utilmon/EasyIB" -> "Voyz/ibeam"
"saeed349/Microservices-Based-Algorithmic-Trading-System-V-2.0" -> "saeed349/Quant-Trading-Cloud-Infrastructure"
"saeed349/Quant-Trading-Cloud-Infrastructure" -> "saeed349/Microservices-Based-Algorithmic-Trading-System-V-2.0"
"id774/finance" -> "danielfrg/PythonFinance"
"matthewgilbert/blp" -> "alpha-xone/xbbg"
"matthewgilbert/blp" -> "matthewgilbert/pdblp"
"matthewgilbert/blp" -> "msitt/blpapi-python"
"matthewgilbert/blp" -> "alex314159/blpapiwrapper"
"matthewgilbert/blp" -> "kyuni22/pybbg"
"seia-soto/clubhouse-api" -> "zhuowei/ClubhouseAPI"
"seia-soto/clubhouse-api" -> "stypr/clubhouse-py"
"seia-soto/clubhouse-api" -> "tomaspavlin/clubhouse-client"
"seia-soto/clubhouse-api" -> "ai-eks/OpenClubhouse"
"brahma-investment-group/big-algo-framework" -> "ClimberMel/ib_tools"
"AlbertRtk/marketools" -> "mohabmes/pystocklib"
"CCCzKen/easy2python" -> "willbillionquant/easylanguage-tools"
"sebjai/robust-risk-aware-rl" -> "sebjai/Portfolio-Wasserstein-Ball"
"hermeneuticlens/options-toolkit" -> "Options-Visualizer/Options-Visualizer.github.io"
"remis-thoughts/svi-zeliade" -> "am3p/python"
"codereverser/folioman" -> "codereverser/casparser"
"codereverser/folioman" -> "NayakwadiS/Forecasting_Mutual_Funds"
"Nasdaq/NasdaqCloudDataService-REST-API" -> "Nasdaq/NasdaqCloudDataService-SDK-Python"
"karthikramx/algorithmic-trading" -> "ranjanrak/async-ticker"
"karthikramx/algorithmic-trading" -> "Varad2305/Automated-Algorithmic-Trading"
"jeffex/Catalogador" -> "jeffex/bot-sinais-2.0"
"newmath/FuturesAndOptionsTradingSimulation" -> "chinmayHundekari/optionMath"
"rolandgg/rust_ib_api" -> "fourbytes/ib_tws_rs"
"JamesSullivan/temporalCN" -> "ICascha/QuantGANs-replication"
"ICascha/QuantGANs-replication" -> "JamesSullivan/temporalCN"
"beinghorizontal/tpo_btc" -> "sivamgr/tpo_market_profile"
"wilsonfreitas/awesome-quant" -> "microsoft/qlib"
"wilsonfreitas/awesome-quant" -> "je-suis-tm/quant-trading"
"wilsonfreitas/awesome-quant" -> "mementum/backtrader"
"wilsonfreitas/awesome-quant" -> "quantopian/zipline"
"wilsonfreitas/awesome-quant" -> "ranaroussi/quantstats"
"wilsonfreitas/awesome-quant" -> "stefan-jansen/machine-learning-for-trading"
"wilsonfreitas/awesome-quant" -> "QuantConnect/Lean"
"wilsonfreitas/awesome-quant" -> "firmai/financial-machine-learning"
"wilsonfreitas/awesome-quant" -> "goldmansachs/gs-quant"
"wilsonfreitas/awesome-quant" -> "hudson-and-thames/mlfinlab"
"wilsonfreitas/awesome-quant" -> "TA-Lib/ta-lib-python"
"wilsonfreitas/awesome-quant" -> "OpenBB-finance/OpenBB"
"wilsonfreitas/awesome-quant" -> "thuquant/awesome-quant" ["e"=1]
"wilsonfreitas/awesome-quant" -> "EliteQuant/EliteQuant"
"wilsonfreitas/awesome-quant" -> "lballabio/QuantLib"
"mhallsmoore/qstrader" -> "robcarver17/pysystemtrade"
"mhallsmoore/qstrader" -> "pmorissette/bt"
"mhallsmoore/qstrader" -> "gbeced/pyalgotrade"
"mhallsmoore/qstrader" -> "mhallsmoore/qsforex"
"mhallsmoore/qstrader" -> "ranaroussi/qtpylib"
"mhallsmoore/qstrader" -> "cuemacro/finmarketpy"
"mhallsmoore/qstrader" -> "quantopian/pyfolio"
"mhallsmoore/qstrader" -> "mementum/backtrader"
"mhallsmoore/qstrader" -> "quantopian/alphalens"
"mhallsmoore/qstrader" -> "hudson-and-thames/mlfinlab"
"mhallsmoore/qstrader" -> "quantopian/zipline"
"mhallsmoore/qstrader" -> "ranaroussi/quantstats"
"mhallsmoore/qstrader" -> "kernc/backtesting.py"
"mhallsmoore/qstrader" -> "pmorissette/ffn"
"mhallsmoore/qstrader" -> "polakowo/vectorbt"
"lballabio/QuantLib" -> "google/tf-quant-finance"
"lballabio/QuantLib" -> "wilsonfreitas/awesome-quant"
"lballabio/QuantLib" -> "quantopian/zipline"
"lballabio/QuantLib" -> "quantopian/pyfolio"
"lballabio/QuantLib" -> "TA-Lib/ta-lib-python"
"lballabio/QuantLib" -> "ranaroussi/quantstats"
"lballabio/QuantLib" -> "mementum/backtrader"
"lballabio/QuantLib" -> "QuantConnect/Lean"
"lballabio/QuantLib" -> "robertmartin8/PyPortfolioOpt"
"lballabio/QuantLib" -> "dcajasn/Riskfolio-Lib"
"lballabio/QuantLib" -> "fasiondog/hikyuu" ["e"=1]
"lballabio/QuantLib" -> "mhallsmoore/qstrader"
"lballabio/QuantLib" -> "hudson-and-thames/mlfinlab"
"lballabio/QuantLib" -> "OpenSourceRisk/Engine"
"lballabio/QuantLib" -> "microsoft/qlib"
"sigurdroemer/rough_volatility" -> "svenhsia/Calibrating-Rough-Volatility-Models-with-Deep-Learning"
"sigurdroemer/rough_volatility" -> "ryanmccrickerd/rough_bergomi"
"sigurdroemer/rough_volatility" -> "RoughStochVol/rBergomi"
"jadchaar/sec-edgar-api" -> "jadchaar/sec-cik-mapper"
"abudesai/timeVAE" -> "abudesai/syntheticdatagen"
"abudesai/timeVAE" -> "imics-lab/tts-cgan"
"abudesai/timeVAE" -> "ML4ITS/TimeVQVAE"
"abudesai/timeVAE" -> "SigCGANs/Conditional-Sig-Wasserstein-GANs"
"deepfence/PacketStreamer" -> "deepfence/YaraHunter"
"deepfence/PacketStreamer" -> "deepfence/FlowMeter"
"deepfence/PacketStreamer" -> "deepfence/SecretScanner"
"deepfence/PacketStreamer" -> "deepfence/ThreatMapper"
"deepfence/PacketStreamer" -> "deepfence/ebpfguard"
"deepfence/YaraHunter" -> "deepfence/FlowMeter"
"deepfence/YaraHunter" -> "deepfence/PacketStreamer"
"deepfence/YaraHunter" -> "deepfence/SecretScanner"
"deepfence/YaraHunter" -> "deepfence/ThreatMapper"
"deepfence/YaraHunter" -> "deepfence/ebpfguard"
"tencia/stocks_rnn" -> "kimber-chen/Tensorflow-for-stock-prediction"
"tencia/stocks_rnn" -> "dzitkowskik/StockPredictionRNN"
"tencia/stocks_rnn" -> "jgpavez/LSTM---Stock-prediction"
"tencia/stocks_rnn" -> "dhingratul/Stock-Price-Prediction"
"tencia/stocks_rnn" -> "scorpionhiccup/StockPricePrediction"
"tencia/stocks_rnn" -> "tgjeon/TensorFlow-Tutorials-for-Time-Series"
"tencia/stocks_rnn" -> "deependersingla/deep_trader" ["e"=1]
"tencia/stocks_rnn" -> "polyaxon/haupt"
"tencia/stocks_rnn" -> "keon/deepstock" ["e"=1]
"tencia/stocks_rnn" -> "FraPochetti/StocksProject"
"tencia/stocks_rnn" -> "wzchen/stock_market_prediction"
"tencia/stocks_rnn" -> "etai83/lstm_stock_prediction"
"tencia/stocks_rnn" -> "Kulbear/stock-prediction"
"tencia/stocks_rnn" -> "kh-kim/stock_market_reinforcement_learning" ["e"=1]
"tencia/stocks_rnn" -> "aqibsaeed/Multilabel-timeseries-classification-with-LSTM"
"alpacahq/alpaca-py" -> "alpacahq/alpaca-trade-api-python"
"alpacahq/alpaca-py" -> "polygon-io/client-python"
"alpacahq/alpaca-py" -> "twelvedata/twelvedata-python"
"alpacahq/alpaca-py" -> "alpacahq/alpaca-backtrader-api"
"alpacahq/alpaca-py" -> "Finnhub-Stock-API/finnhub-python"
"alpacahq/alpaca-py" -> "quantmind/ccy"
"alpacahq/alpaca-py" -> "amor71/LiuAlgoTrader"
"alpacahq/alpaca-py" -> "vollib/vollib"
"alpacahq/alpaca-py" -> "enthought/pyql"
"alpacahq/alpaca-py" -> "pmorissette/ffn"
"alpacahq/alpaca-py" -> "Lumiwealth/lumibot"
"alpacahq/alpaca-py" -> "mcdallas/wallstreet"
"alpacahq/alpaca-py" -> "bpsmith/tia"
"alpacahq/alpaca-py" -> "ZachLiuGIS/stock_extractor"
"alpacahq/alpaca-py" -> "skillachie/finsymbols"
"paperswithbacktest/awesome-systematic-trading" -> "wangzhe3224/awesome-systematic-trading"
"paperswithbacktest/awesome-systematic-trading" -> "ranaroussi/quantstats"
"paperswithbacktest/awesome-systematic-trading" -> "letianzj/QuantResearch"
"paperswithbacktest/awesome-systematic-trading" -> "je-suis-tm/quant-trading"
"paperswithbacktest/awesome-systematic-trading" -> "wilsonfreitas/awesome-quant"
"paperswithbacktest/awesome-systematic-trading" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"paperswithbacktest/awesome-systematic-trading" -> "firmai/financial-machine-learning"
"paperswithbacktest/awesome-systematic-trading" -> "polakowo/vectorbt"
"paperswithbacktest/awesome-systematic-trading" -> "microsoft/qlib"
"paperswithbacktest/awesome-systematic-trading" -> "hugo2046/QuantsPlaybook" ["e"=1]
"paperswithbacktest/awesome-systematic-trading" -> "robcarver17/pysystemtrade"
"paperswithbacktest/awesome-systematic-trading" -> "dcajasn/Riskfolio-Lib"
"paperswithbacktest/awesome-systematic-trading" -> "shashankvemuri/Finance"
"paperswithbacktest/awesome-systematic-trading" -> "kernc/backtesting.py"
"paperswithbacktest/awesome-systematic-trading" -> "mementum/backtrader"
"iniself/noba" -> "iniself/backtrader_bokeh"
"iniself/noba" -> "lamkashingpaul/backtrader_plotly"
"iniself/noba" -> "happydasch/btplotting"
"devfinwiz/Stock_Screeners_Raw" -> "devfinwiz/ALAS"
"devfinwiz/Stock_Screeners_Raw" -> "devfinwiz/Kris-Kringle-Organizer"
"devfinwiz/Stock_Screeners_Raw" -> "devfinwiz/LeetCode-Feeder"
"devfinwiz/Stock_Screeners_Raw" -> "devfinwiz/Python-Voice-Assistant-Virtual-Slave"
"devfinwiz/Stock_Screeners_Raw" -> "devfinwiz/Dynamic-QR"
"dataquestio/project-walkthroughs" -> "nickmccullum/algorithmic-trading-python" ["e"=1]
"QuantWorld2022/backtrader" -> "Ckend/pythondict-quant" ["e"=1]
"QuantWorld2022/backtrader" -> "Skinok/backtrader-pyqt-ui" ["e"=1]
"fortitudo-tech/fortitudo.tech" -> "fortitudo-tech/entropy-pooling"
"fortitudo-tech/fortitudo.tech" -> "fortitudo-tech/pcrm-book"
"fortitudo-tech/fortitudo.tech" -> "ArturSepp/QuantInvestStrats"
"robcarver17/pysystemtrade" -> "mhallsmoore/qstrader"
"robcarver17/pysystemtrade" -> "pmorissette/bt"
"robcarver17/pysystemtrade" -> "hudson-and-thames/mlfinlab"
"robcarver17/pysystemtrade" -> "ranaroussi/qtpylib"
"robcarver17/pysystemtrade" -> "gbeced/pyalgotrade"
"robcarver17/pysystemtrade" -> "cuemacro/finmarketpy"
"robcarver17/pysystemtrade" -> "erdewit/ib_insync"
"robcarver17/pysystemtrade" -> "ranaroussi/quantstats"
"robcarver17/pysystemtrade" -> "jasonstrimpel/volatility-trading"
"robcarver17/pysystemtrade" -> "dcajasn/Riskfolio-Lib"
"robcarver17/pysystemtrade" -> "polakowo/vectorbt"
"robcarver17/pysystemtrade" -> "kernc/backtesting.py"
"robcarver17/pysystemtrade" -> "robcarver17/systematictradingexamples"
"robcarver17/pysystemtrade" -> "quantopian/pyfolio"
"robcarver17/pysystemtrade" -> "letianzj/QuantResearch"
"gbzenobi/CSharp-NT8-OrderFlowKit" -> "trading-code/ninjatrader-freeorderflow"
"gbzenobi/CSharp-NT8-OrderFlowKit" -> "WaleeTheRobot/order-flow-bot"
"gbzenobi/CSharp-NT8-OrderFlowKit" -> "tysonwu/stack-orderflow"
"gbzenobi/CSharp-NT8-OrderFlowKit" -> "OrderFlowTools/TraderLadder"
"gbzenobi/CSharp-NT8-OrderFlowKit" -> "DominikBritz/NinjaTrader-indicators-strategies"
"gbzenobi/CSharp-NT8-OrderFlowKit" -> "murtazayusuf/OrderflowChart"
"gbzenobi/CSharp-NT8-OrderFlowKit" -> "AndreaFerrante/Orderflow"
"gbzenobi/CSharp-NT8-OrderFlowKit" -> "efitzkiwi/NT8SupplyDemandDTBot"
"gbzenobi/CSharp-NT8-OrderFlowKit" -> "MicroTrendsLtd/NinjaTrader8"
"gbzenobi/CSharp-NT8-OrderFlowKit" -> "WaleeTheRobot/open-auto-atr"
"SimplyWallSt/Company-Analysis-Model" -> "SimplyWallSt/Portfolio-Analysis-Model"
"SimplyWallSt/Company-Analysis-Model" -> "halessi/DCF"
"SimplyWallSt/Company-Analysis-Model" -> "anfederico/clairvoyant" ["e"=1]
"SimplyWallSt/Company-Analysis-Model" -> "robertmartin8/MachineLearningStocks"
"SimplyWallSt/Company-Analysis-Model" -> "ckz8780/market-toolkit"
"SimplyWallSt/Company-Analysis-Model" -> "LastAncientOne/Stock_Analysis_For_Quant"
"SimplyWallSt/Company-Analysis-Model" -> "ARKInvest/ARK-Invest-Tesla-Valuation-Model" ["e"=1]
"SimplyWallSt/Company-Analysis-Model" -> "LongOnly/Quantitative-Notebooks"
"SimplyWallSt/Company-Analysis-Model" -> "peerchemist/finta"
"SimplyWallSt/Company-Analysis-Model" -> "AlgoTraders/stock-analysis-engine"
"SimplyWallSt/Company-Analysis-Model" -> "JerBouma/FinanceToolkit"
"SimplyWallSt/Company-Analysis-Model" -> "robertmartin8/PyPortfolioOpt"
"SimplyWallSt/Company-Analysis-Model" -> "FinancialModelingPrepAPI/Financial-Modeling-Prep-API"
"SimplyWallSt/Company-Analysis-Model" -> "hongtaocai/googlefinance"
"SimplyWallSt/Company-Analysis-Model" -> "firmai/machine-learning-asset-management"
"pinax/pinax-blog" -> "MicroPyramid/django-blog-it" ["e"=1]
"lamkashingpaul/backtrader_plotly" -> "iniself/noba"
"wangzhe3224/awesome-systematic-trading" -> "paperswithbacktest/awesome-systematic-trading"
"wangzhe3224/awesome-systematic-trading" -> "wondertrader/wondertrader" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "thuquant/awesome-quant" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "hugo2046/QuantsPlaybook" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "edtechre/pybroker"
"wangzhe3224/awesome-systematic-trading" -> "nkaz001/hftbacktest" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "ranaroussi/quantstats"
"wangzhe3224/awesome-systematic-trading" -> "polakowo/vectorbt"
"wangzhe3224/awesome-systematic-trading" -> "nautechsystems/nautilus_trader"
"wangzhe3224/awesome-systematic-trading" -> "robcarver17/pysystemtrade"
"wangzhe3224/awesome-systematic-trading" -> "je-suis-tm/quant-trading"
"wangzhe3224/awesome-systematic-trading" -> "zvtvz/zvt" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "letianzj/QuantResearch"
"wangzhe3224/awesome-systematic-trading" -> "fasiondog/hikyuu" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "jrothschild33/learn_backtrader" ["e"=1]
"robcarver17/systematictradingexamples" -> "robcarver17/pysystemtrade_examples"
"robcarver17/systematictradingexamples" -> "MarcosCarreira/DermanPapers"
"robcarver17/systematictradingexamples" -> "dedwards25/Python_Option_Pricing"
"robcarver17/systematictradingexamples" -> "Finance-Hub/FinanceHub"
"robcarver17/systematictradingexamples" -> "rsvp/fecon235"
"robcarver17/systematictradingexamples" -> "LongOnly/Quantitative-Notebooks"
"robcarver17/systematictradingexamples" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"robcarver17/systematictradingexamples" -> "robcarver17/pysystemtrade"
"gregzanotti/dlsa-public" -> "jasonzy121/Deep_Learning_Asset_Pricing"
"gregzanotti/dlsa-public" -> "YINDAIYING/Deep-Robust-Statistical-Arbitrage"
"gregzanotti/dlsa-public" -> "bradleyboyuyang/Statistical-Arbitrage" ["e"=1]
"gregzanotti/dlsa-public" -> "bkelly-lab/ipca"
"gregzanotti/dlsa-public" -> "Jackal08/QuantInsti-Final-Project-Statistical-Arbitrage"
"bharaniabhishek123/some-investment-books" -> "pistolla/gnidart"
"bharaniabhishek123/some-investment-books" -> "ShamaUgale/myBooks"
"alpha-miner/Finance-Python" -> "GriffinAustin/pynance"
"alpha-miner/Finance-Python" -> "jsmidt/QuantPy"
"alpha-miner/Finance-Python" -> "vollib/vollib"
"alpha-miner/Finance-Python" -> "ynouri/pysabr"
"alpha-miner/Finance-Python" -> "enthought/pyql"
"alpha-miner/Finance-Python" -> "romanmichaelpaolucci/Q-Fin"
"alpha-miner/Finance-Python" -> "federicomariamassari/financial-engineering"
"alpha-miner/Finance-Python" -> "federicomariamassari/willowtree"
"alpha-miner/Finance-Python" -> "bbcho/finoptions-dev"
"alpha-miner/Finance-Python" -> "quantsbin/Quantsbin"
"alpha-miner/Finance-Python" -> "dbrojas/optlib"
"alpha-miner/Finance-Python" -> "pmorissette/ffn"
"alpha-miner/Finance-Python" -> "domokane/FinancePy"
"alpha-miner/Finance-Python" -> "google/tf-quant-finance"
"alpha-miner/Finance-Python" -> "Finance-Hub/FinanceHub"
"mariofrans/PROJECT__AI-Binary-Options-Trading-Bot" -> "irangarcia/binary-options-trading-bot"
"mariofrans/PROJECT__AI-Binary-Options-Trading-Bot" -> "CarlosGatti/bot-python-iq-option"
"MarcosCarreira/DermanPapers" -> "robcarver17/pysystemtrade_examples"
"MarcosCarreira/DermanPapers" -> "robcarver17/systematictradingexamples"
"MarcosCarreira/DermanPapers" -> "rsvp/fecon235"
"MarcosCarreira/DermanPapers" -> "dedwards25/Python_Option_Pricing"
"MarcosCarreira/DermanPapers" -> "Finance-Hub/FinanceHub"
"MarcosCarreira/DermanPapers" -> "LongOnly/Quantitative-Notebooks"
"MarcosCarreira/DermanPapers" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"MarcosCarreira/DermanPapers" -> "jsmidt/QuantPy"
"MarcosCarreira/DermanPapers" -> "enthought/pyql"
"MarcosCarreira/DermanPapers" -> "vollib/vollib"
"MarcosCarreira/DermanPapers" -> "dbrojas/optlib"
"MarcosCarreira/DermanPapers" -> "ynouri/pysabr"
"MarcosCarreira/DermanPapers" -> "paulperry/quant"
"MarcosCarreira/DermanPapers" -> "quantsbin/Quantsbin"
"MarcosCarreira/DermanPapers" -> "GriffinAustin/pynance"
"arabacibahadir/sup-res" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"arabacibahadir/sup-res" -> "day0market/support_resistance"
"maread99/market_prices" -> "maread99/market_analy"
"psemdel/py-trading-bot" -> "rnikitin/QuantGPT"
"psemdel/py-trading-bot" -> "QubitQuants/vectorbt_pro_tutorials"
"psemdel/py-trading-bot" -> "diliprk/vectorbt_pro_dashboard"
"psemdel/py-trading-bot" -> "Vincentho711/Interactive-Brokers-Trading-Bot"
"imics-lab/tts-gan" -> "imics-lab/tts-cgan"
"imics-lab/tts-gan" -> "Atrin78/Attention-based-Time-Series-Generation"
"imics-lab/tts-gan" -> "jsyoon0823/TimeGAN"
"imics-lab/tts-gan" -> "SigCGANs/Conditional-Sig-Wasserstein-GANs"
"imics-lab/tts-gan" -> "proceduralia/pytorch-GAN-timeseries"
"imics-lab/tts-gan" -> "firmai/mtss-gan"
"imics-lab/tts-gan" -> "lscharwaechter/TransformerGAN"
"imics-lab/tts-gan" -> "abudesai/timeVAE"
"imics-lab/tts-gan" -> "abudesai/syntheticdatagen"
"imics-lab/tts-gan" -> "vanderschaarlab/mlforhealthlabpub"
"imics-lab/tts-gan" -> "gioramponi/GAN_Time_Series"
"imics-lab/tts-gan" -> "MikhailMurashov/ecgGAN" ["e"=1]
"lballabio/QuantLib-SWIG" -> "OpenSourceRisk/Engine"
"lballabio/QuantLib-SWIG" -> "nhaga/QuantLib-Python-Docs"
"lballabio/QuantLib-SWIG" -> "amaggiulli/QLNet" ["e"=1]
"lballabio/QuantLib-SWIG" -> "OpenSourceRisk/ORE-SWIG"
"lballabio/QuantLib-SWIG" -> "lballabio/QuantLib"
"lballabio/QuantLib-SWIG" -> "mgroncki/IPythonScripts"
"lballabio/QuantLib-SWIG" -> "enthought/pyql"
"lballabio/QuantLib-SWIG" -> "OpenGamma/Strata" ["e"=1]
"Nasdaq/data-link-python" -> "quandl/quandl-python"
"Nasdaq/data-link-python" -> "Nasdaq/NasdaqCloudDataService-SDK-Python"
"Nasdaq/data-link-python" -> "Nasdaq/NasdaqCloudDataService-REST-API"
"Nasdaq/data-link-python" -> "enthought/pyql"
"Nasdaq/data-link-python" -> "stefan-jansen/zipline-reloaded"
"Nasdaq/data-link-python" -> "mortada/fredapi"
"Nasdaq/data-link-python" -> "cuemacro/findatapy"
"Nasdaq/data-link-python" -> "polygon-io/client-python"
"Nasdaq/data-link-python" -> "hudson-and-thames/portfoliolab"
"Nasdaq/data-link-python" -> "alpacahq/alpaca-py"
"Nasdaq/data-link-python" -> "yhilpisch/aiif"
"Nasdaq/data-link-python" -> "jo-cho/Technical_Analysis_and_Feature_Engineering"
"Nasdaq/data-link-python" -> "rsheftel/pandas_market_calendars"
"Nasdaq/data-link-python" -> "Finnhub-Stock-API/finnhub-python"
"Nasdaq/data-link-python" -> "mcdallas/wallstreet"
"Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022" -> "Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance"
"Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"asavinov/intelligent-trading-bot" -> "kieran-mackle/AutoTrader" ["e"=1]
"asavinov/intelligent-trading-bot" -> "edtechre/pybroker" ["e"=1]
"asavinov/intelligent-trading-bot" -> "jmrichardson/tuneta" ["e"=1]
"asavinov/intelligent-trading-bot" -> "ivopetiz/algotrading" ["e"=1]
"asavinov/intelligent-trading-bot" -> "blankly-finance/blankly" ["e"=1]
"Skinok/backtrader-pyqt-ui" -> "Ckend/pythondict-quant"
"Skinok/backtrader-pyqt-ui" -> "neilsmurphy/backtrader_template"
"Skinok/backtrader-pyqt-ui" -> "happydasch/btplotting"
"Skinok/backtrader-pyqt-ui" -> "verybadsoldier/backtrader_plotting"
"Skinok/backtrader-pyqt-ui" -> "jrothschild33/learn_backtrader" ["e"=1]
"Skinok/backtrader-pyqt-ui" -> "OmegaTrading/OmegaUI"
"Skinok/backtrader-pyqt-ui" -> "iniself/noba"
"Skinok/backtrader-pyqt-ui" -> "pandalibin/backtrader-cn"
"Skinok/backtrader-pyqt-ui" -> "lindomar-oliveira/backtrader-binance"
"Skinok/backtrader-pyqt-ui" -> "goldenhairs/backtrader_fund" ["e"=1]
"Skinok/backtrader-pyqt-ui" -> "QuantWorld2022/backtrader" ["e"=1]
"Skinok/backtrader-pyqt-ui" -> "zwdnet/trade_strategy" ["e"=1]
"Skinok/backtrader-pyqt-ui" -> "Dave-Vallance/bt-ccxt-store"
"Skinok/backtrader-pyqt-ui" -> "lamkashingpaul/backtrader_plotly"
"Skinok/backtrader-pyqt-ui" -> "highfestiva/finplot"
"tastyware/tastytrade" -> "tastytrade/tastytrade-sdk-python"
"tastyware/tastytrade" -> "tastyware/tastytrade-cli"
"tastyware/tastytrade" -> "LordKaT/tastytrade_api_thing"
"tastyware/tastytrade" -> "peter-oroszvari/tastytrade-api"
"tastyware/tastytrade" -> "tastytrade/tastytrade-api-js"
"tastyware/tastytrade" -> "boyan-soubachov/tastyworks_api"
"yhilpisch/ftwp" -> "yhilpisch/mvportfolio"
"yhilpisch/ftwp" -> "yhilpisch/packaging"
"zshicode/Attention-CLX-stock-prediction" -> "matheusbfernandes/stock-market-prediction" ["e"=1]
"zshicode/Attention-CLX-stock-prediction" -> "hungchun-lin/Stock-price-prediction-using-GAN" ["e"=1]
"kieranjwood/trading-momentum-transformer" -> "Heerozh/spectre" ["e"=1]
"kieranjwood/trading-momentum-transformer" -> "emoen/Machine-Learning-for-Asset-Managers" ["e"=1]
"kieranjwood/trading-momentum-transformer" -> "financialnoob/pairs_trading" ["e"=1]
"kieranjwood/trading-momentum-transformer" -> "jankrepl/deepdow" ["e"=1]
"takeshixx/redstar-tools" -> "BlackOtton/RedStar-Media"
"takeshixx/redstar-tools" -> "happymimimix/DPRK-RedStar-OS-3.0-Modded-ISO"
"Quantreo/BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python"
"Quantreo/BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies"
"Quantreo/BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"Quantreo/BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance"
"Quantreo/BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading"
"Quantreo/BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON"
"Quantreo/BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS"
"Quantreo/BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"markdregan/FreqAI-Marcos-Lopez-De-Prado" -> "ki33elev/Adv_Fin_ML" ["e"=1]
"swapniljariwala/nsepy" -> "vsjha18/nsetools"
"swapniljariwala/nsepy" -> "aeron7/nsepython"
"swapniljariwala/nsepy" -> "jugaad-py/jugaad-data"
"swapniljariwala/nsepy" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"swapniljariwala/nsepy" -> "zerodha/pykiteconnect"
"swapniljariwala/nsepy" -> "NSEDownload/NSEDownload"
"swapniljariwala/nsepy" -> "pranjal-joshi/Screeni-py"
"swapniljariwala/nsepy" -> "jugaad-py/jugaad-trader"
"swapniljariwala/nsepy" -> "jigneshpylab/ZerodhaPythonScripts"
"swapniljariwala/nsepy" -> "deshwalmahesh/NSE-Stock-Scanner"
"swapniljariwala/nsepy" -> "aadityatamrakar/option_chain_analysis"
"swapniljariwala/nsepy" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"swapniljariwala/nsepy" -> "maanavshah/stock-market-india"
"swapniljariwala/nsepy" -> "ashishkumar30/Stock_Market_Live_Trading_using_AI"
"swapniljariwala/nsepy" -> "NayakwadiS/mftool"
"litaotao/IPython-Dashboard" -> "wegamekinglc/AlgoTrading" ["e"=1]
"litaotao/IPython-Dashboard" -> "cuemacro/chartpy" ["e"=1]
"Matteo-Ferrara/gex-tracker" -> "aaguiar10/gflows"
"Matteo-Ferrara/gex-tracker" -> "jensolson/SPX-Gamma-Exposure"
"Matteo-Ferrara/gex-tracker" -> "erma0x/gexxer"
"Matteo-Ferrara/gex-tracker" -> "2187Nick/thinkscript"
"Matteo-Ferrara/gex-tracker" -> "sudoshu/OptionsHacker"
"idanya/algo-trader" -> "amor71/LiuAlgoTrader"
"idanya/algo-trader" -> "Lumiwealth/lumibot"
"idanya/algo-trader" -> "kieran-mackle/AutoTrader"
"idanya/algo-trader" -> "ivopetiz/algotrading"
"idanya/algo-trader" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"idanya/algo-trader" -> "Yvictor/TradingGym" ["e"=1]
"idanya/algo-trader" -> "TheFourGreatErrors/alpha-rptr" ["e"=1]
"idanya/algo-trader" -> "edtechre/pybroker"
"idanya/algo-trader" -> "conor19w/Binance-Futures-Trading-Bot" ["e"=1]
"idanya/algo-trader" -> "s-brez/trading-server"
"idanya/algo-trader" -> "JerBouma/AlgorithmicTrading"
"idanya/algo-trader" -> "robswc/tradingview-webhooks-bot" ["e"=1]
"idanya/algo-trader" -> "PyPatel/Options-Trading-Strategies-in-Python"
"idanya/algo-trader" -> "quarkfin/qf-lib"
"idanya/algo-trader" -> "constverum/Quantdom"
"jonromero/forex_algotrading" -> "mhallsmoore/qsforex"
"jonromero/forex_algotrading" -> "hayatoy/ml-forex-prediction"
"jonromero/forex_algotrading" -> "PythonProgramming/Pattern-Recognition-for-Forex-Trading"
"jonromero/forex_algotrading" -> "oanda/oandapy"
"jonromero/forex_algotrading" -> "hootnot/oanda-api-v20"
"jonromero/forex_algotrading" -> "noootown/Forex-DQN"
"jonromero/forex_algotrading" -> "PeterMalkin/oandapybot"
"jonromero/forex_algotrading" -> "MicroPyramid/forex-python"
"jonromero/forex_algotrading" -> "theclai/ForexEA"
"jonromero/forex_algotrading" -> "giuse88/duka"
"jonromero/forex_algotrading" -> "hootnot/oandapyV20-examples"
"jonromero/forex_algotrading" -> "harveybc/gym-fx" ["e"=1]
"jonromero/forex_algotrading" -> "oanda/v20-python-samples"
"jonromero/forex_algotrading" -> "panpanpandas/ultrafinance"
"jonromero/forex_algotrading" -> "jamesmawm/Mastering-Python-for-Finance-source-codes"
"g-make-it/IG_Trading_Algo_Scripts_Python" -> "tg12/FAIG"
"g-make-it/IG_Trading_Algo_Scripts_Python" -> "ig-python/trading-ig"
"g-make-it/IG_Trading_Algo_Scripts_Python" -> "bennycode/ig-trading-api"
"rochars/trade" -> "benjaminmgross/visualize-wealth"
"rochars/trade" -> "thalesians/pythalesians"
"lefterisloukas/edgar-crawler" -> "jadchaar/sec-edgar-downloader"
"lefterisloukas/edgar-crawler" -> "rsljr/edgarParser"
"lefterisloukas/edgar-crawler" -> "sec-edgar/sec-edgar"
"lefterisloukas/edgar-crawler" -> "joeyism/py-edgar"
"lefterisloukas/edgar-crawler" -> "alions7000/SEC-EDGAR-text"
"lefterisloukas/edgar-crawler" -> "dgunning/edgartools"
"lefterisloukas/edgar-crawler" -> "yya518/FinBERT" ["e"=1]
"lefterisloukas/edgar-crawler" -> "janlukasschroeder/sec-api"
"lefterisloukas/edgar-crawler" -> "edgarminers/python-edgar"
"lefterisloukas/edgar-crawler" -> "bellingcat/EDGAR" ["e"=1]
"lefterisloukas/edgar-crawler" -> "jadchaar/sec-edgar-api"
"lefterisloukas/edgar-crawler" -> "nlpaueb/finer"
"lefterisloukas/edgar-crawler" -> "farhadab/sec-edgar-financials"
"lefterisloukas/edgar-crawler" -> "janlukasschroeder/sec-api-python"
"lefterisloukas/edgar-crawler" -> "alphanome-ai/sec-parser"
"dzitkowskik/StockPredictionRNN" -> "scorpionhiccup/StockPricePrediction"
"dzitkowskik/StockPredictionRNN" -> "tencia/stocks_rnn"
"dzitkowskik/StockPredictionRNN" -> "jgpavez/LSTM---Stock-prediction"
"dzitkowskik/StockPredictionRNN" -> "kimber-chen/Tensorflow-for-stock-prediction"
"dzitkowskik/StockPredictionRNN" -> "NourozR/Stock-Price-Prediction-LSTM"
"dzitkowskik/StockPredictionRNN" -> "ucaiado/rl_trading" ["e"=1]
"dzitkowskik/StockPredictionRNN" -> "lilianweng/stock-rnn"
"dzitkowskik/StockPredictionRNN" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"dzitkowskik/StockPredictionRNN" -> "deependersingla/deep_trader" ["e"=1]
"dzitkowskik/StockPredictionRNN" -> "thedimlebowski/Trading-Gym" ["e"=1]
"dzitkowskik/StockPredictionRNN" -> "timestocome/Test-stock-prediction-algorithms"
"dzitkowskik/StockPredictionRNN" -> "wzchen/stock_market_prediction"
"dzitkowskik/StockPredictionRNN" -> "26hzhang/StockPrediction"
"dzitkowskik/StockPredictionRNN" -> "jamesmawm/High-Frequency-Trading-Model-with-IB"
"dzitkowskik/StockPredictionRNN" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"Shark-ML/Shark" -> "haozhangphd/QuantLib-noBoost" ["e"=1]
"wharton/wrds" -> "michaelewens/SDC-to-Compustat-Mapping"
"wharton/wrds" -> "iangow/wrds_pg"
"wharton/wrds" -> "christianjauregui/famafrench"
"wharton/wrds" -> "michaelewens/MD-A-10-K-data"
"PacktPublishing/Algorithmic-Short-Selling-with-Python" -> "PacktPublishing/Algorithmic-Short-Selling-with-Python-Published-by-Packt"
"guijinSON/Awesome-Deep-Hedging" -> "YuMan-Tam/deep-hedging"
"guijinSON/Awesome-Deep-Hedging" -> "alexandrecarbonneau/Deep-Hedging-of-Long-Term-Financial-Derivatives"
"guijinSON/Awesome-Deep-Hedging" -> "hansbuehler/deephedging"
"imics-lab/tts-cgan" -> "imics-lab/tts-gan"
"imics-lab/tts-cgan" -> "mah533/Augmentation-of-ECG-Training-Dataset-with-CGAN"
"bpierre/loot-rarity" -> "g-make-it/IG_Trading_Algo_Scripts_Python" ["e"=1]
"nburgessx/Papers" -> "nburgessx/QuantResearch"
"nburgessx/Papers" -> "nburgessx/SwapsBook"
"nburgessx/Papers" -> "nburgessx/AlgoTrading"
"nburgessx/Papers" -> "nburgessx/OxfordMBA"
"nburgessx/Papers" -> "MaximumBeings/public"
"shner-elmo/TradingView-Screener" -> "lit26/finvizfinance" ["e"=1]
"shner-elmo/TradingView-Screener" -> "letianzj/quanttrader" ["e"=1]
"shner-elmo/TradingView-Screener" -> "pranjal-joshi/Screeni-py" ["e"=1]
"shner-elmo/TradingView-Screener" -> "BennyThadikaran/stock-pattern" ["e"=1]
"shner-elmo/TradingView-Screener" -> "coding-kitties/investing-algorithm-framework" ["e"=1]
"shner-elmo/TradingView-Screener" -> "Voyz/ibind" ["e"=1]
"MicroPyramid/django-blog-it" -> "MicroPyramid/microurl"
"MicroPyramid/django-blog-it" -> "MicroPyramid/django-simple-forum"
"MicroPyramid/django-blog-it" -> "MicroPyramid/MicroSite"
"MicroPyramid/django-blog-it" -> "MicroPyramid/django-simple-pagination"
"MicroPyramid/django-blog-it" -> "MicroPyramid/django-webpacker"
"MicroPyramid/django-blog-it" -> "MicroPyramid/django-web-profiler"
"MicroPyramid/django-blog-it" -> "MicroPyramid/docker-box"
"MicroPyramid/django-blog-it" -> "MicroPyramid/django-seo"
"MicroPyramid/django-blog-it" -> "MicroPyramid/django-mfa"
"MicroPyramid/django-blog-it" -> "MicroPyramid/microstorage"
"MicroPyramid/django-blog-it" -> "MicroPyramid/Mongo-Slice"
"MicroPyramid/django-blog-it" -> "MicroPyramid/fetch-tweets"
"MicroPyramid/django-blog-it" -> "MicroPyramid/microsocial"
"MicroPyramid/django-blog-it" -> "MicroPyramid/deploy-python"
"MicroPyramid/django-blog-it" -> "MicroPyramid/django-email-gateway"
"zzw-zwzhang/TimeGAN-pytorch" -> "birdx0810/timegan-pytorch"
"zzw-zwzhang/TimeGAN-pytorch" -> "benearnthof/TimeGAN"
"zzw-zwzhang/TimeGAN-pytorch" -> "proceduralia/pytorch-GAN-timeseries"
"extrange/ibkr-docker" -> "gnzsnz/ib-gateway-docker"
"extrange/ibkr-docker" -> "UnusualAlpha/ib-gateway-docker"
"extrange/ibkr-docker" -> "Voyz/ibeam"
"extrange/ibkr-docker" -> "ib-api-reloaded/ib_async"
"extrange/ibkr-docker" -> "manhinhang/ib-gateway-docker"
"extrange/ibkr-docker" -> "mattsta/icli"
"extrange/ibkr-docker" -> "stoqey/ib"
"extrange/ibkr-docker" -> "IbcAlpha/IBC"
"extrange/ibkr-docker" -> "omdv/ibkr-trading"
"quantra-go-algo/ml-trading-book" -> "aws-samples/uncovering-hidden-connections-in-unstructured-financial-data"
"Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022" -> "Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance"
"Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022" -> "Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON"
"Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022" -> "Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022"
"histockhero/youtube_code" -> "WilliamZhuo/ithome_ironman2021"
"vict0rsch/deep_learning" -> "jgpavez/LSTM---Stock-prediction" ["e"=1]
"OrderFlowTools/TraderLadder" -> "michelpmcdonald/Ninjatrader"
"OrderFlowTools/TraderLadder" -> "kodalli/NT8-PAT-Strategy"
"OrderFlowTools/TraderLadder" -> "DominikBritz/NinjaTrader-indicators-strategies"
"sewardlee337/finreportr" -> "mwaldstein/edgarWebR"
"sewardlee337/finreportr" -> "bergant/finstr"
"sewardlee337/finreportr" -> "bergant/XBRLFiles"
"sewardlee337/finreportr" -> "Ljupch0/yfinance"
"Shoonya-Dev/ShoonyaApi-py" -> "Shoonya-Dev/ShoonyaApi-js"
"Shoonya-Dev/ShoonyaApi-py" -> "Tapanhaz/Shoonya_OptionChainStreamer"
"Shoonya-Dev/ShoonyaApi-py" -> "NagarajuGunda/PyAlgoMate"
"Shoonya-Dev/ShoonyaApi-py" -> "narenkram/steadfast-monorepo"
"Shoonya-Dev/ShoonyaApi-py" -> "paramatrixtech/ksapi"
"Shoonya-Dev/ShoonyaApi-py" -> "Kotak-Neo/kotak-neo-api"
"eervin123/tradingview-to-vectorbt" -> "gioruggieri/Vectorbt_Examples"
"eervin123/tradingview-to-vectorbt" -> "Guillaume-Fgt/vectorbt_backtesting"
"wegamekinglc/VisualPortfolio" -> "benjaminmgross/visualize-wealth"
"wegamekinglc/VisualPortfolio" -> "quantmind/dynts"
"pssolanki111/polygon" -> "MarketMakerLite/polygon"
"pssolanki111/polygon" -> "aspromatis/polygon_api"
"FrozenTundraTrader/sierrachart" -> "JM-JO/Sierra-Chart---DLLs"
"FrozenTundraTrader/sierrachart" -> "gcUserStudies/sierrachart"
"FrozenTundraTrader/sierrachart" -> "korygill/technical-analysis"
"FrozenTundraTrader/sierrachart" -> "FutTrader/footprint-system"
"FrozenTundraTrader/sierrachart" -> "gc5150/sierrachart"
"FrozenTundraTrader/sierrachart" -> "john-yan/SierraChartConnect"
"FrozenTundraTrader/sierrachart" -> "Invest-In-a-Tech/Deep-Reinforcement-Learning-DayTradingAgent"
"FrozenTundraTrader/sierrachart" -> "mlwin/SierraChart-Custom-Studies"
"FrozenTundraTrader/sierrachart" -> "jason51553262/python-ws-dtc-client"
"FrozenTundraTrader/sierrachart" -> "Invest-In-a-Tech/Machine-Learning-ES-Emini-Futures"
"avelkoski/FRB" -> "zachwill/fred"
"avelkoski/FRB" -> "jjotterson/datapungi_fed"
"avelkoski/FRB" -> "7astro7/full_fred"
"avelkoski/FRB" -> "mortada/fredapi"
"avelkoski/FRB" -> "letsgoexploring/fredpy"
"avelkoski/FRB" -> "gw-moore/pyfredapi"
"joshfraser/robinhood-to-csv" -> "briansrls/Robinhood-for-Google-Finance"
"joshfraser/robinhood-to-csv" -> "robinhood-unofficial/pyrh"
"joshfraser/robinhood-to-csv" -> "trevorwelch/rh-profit-and-loss"
"joshfraser/robinhood-to-csv" -> "omdv/robinhood-portfolio"
"joshfraser/robinhood-to-csv" -> "westonplatter/fast_arrow"
"joshfraser/robinhood-to-csv" -> "rohanpai/Robinhood"
"joshfraser/robinhood-to-csv" -> "anilshanbhag/RobinhoodShell"
"joshfraser/robinhood-to-csv" -> "rghuckins/robinhood-google-sheets"
"joshfraser/robinhood-to-csv" -> "bcwik9/robinhood-on-rails"
"joshfraser/robinhood-to-csv" -> "mstrum/robinhood-python"
"devfinwiz/Python-Voice-Assistant-Virtual-Slave" -> "devfinwiz/ALAS"
"devfinwiz/Python-Voice-Assistant-Virtual-Slave" -> "devfinwiz/LeetCode-Feeder"
"devfinwiz/Python-Voice-Assistant-Virtual-Slave" -> "devfinwiz/Kris-Kringle-Organizer"
"devfinwiz/ALAS" -> "devfinwiz/LeetCode-Feeder"
"devfinwiz/LeetCode-Feeder" -> "devfinwiz/ALAS"
"devfinwiz/LeetCode-Feeder" -> "devfinwiz/Kris-Kringle-Organizer"
"gofinance/ib" -> "hadrianl/ibapi"
"gofinance/ib" -> "benalexau/ibconnect"
"gofinance/ib" -> "dsouzae/ibstockcli"
"gofinance/ib" -> "ib-controller/ib-controller"
"gofinance/ib" -> "rudimeier/twsapi"
"gofinance/ib" -> "ryankennedyio/ib-docker"
"gofinance/ib" -> "Komnomnomnom/swigibpy"
"gofinance/ib" -> "aktau/gofinance" ["e"=1]
"gofinance/ib" -> "pilwon/node-ib"
"Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS" -> "Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies"
"Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS" -> "Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python"
"Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS" -> "Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON"
"Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS" -> "Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance"
"Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS" -> "Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies"
"Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS" -> "Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022"
"nburgessx/SwapsBook" -> "nburgessx/Papers"
"nburgessx/SwapsBook" -> "nburgessx/QuantResearch"
"nburgessx/SwapsBook" -> "nburgessx/AlgoTrading"
"nburgessx/SwapsBook" -> "attack68/rateslib"
"nburgessx/SwapsBook" -> "attack68/book_irds3"
"nburgessx/SwapsBook" -> "MaximumBeings/public"
"nburgessx/SwapsBook" -> "ArturSepp/StochVolModels"
"nburgessx/SwapsBook" -> "LechGrzelak/FinancialEngineering_IR_xVA"
"uberdeveloper/omspy" -> "uberdeveloper/fastbt"
"uberdeveloper/omspy" -> "ranjanrak/async-ticker"
"Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies" -> "Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON"
"Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies" -> "Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS"
"Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies" -> "Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python"
"Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies" -> "Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance"
"Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies" -> "Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies"
"Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies" -> "Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022"
"Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"jadchaar/sec-cik-mapper" -> "jadchaar/sec-edgar-api"
"alex-hhh/ActivityLog2" -> "evdubs/chart-simulator" ["e"=1]
"tysonwu/stack-orderflow" -> "murtazayusuf/OrderflowChart"
"tysonwu/stack-orderflow" -> "AndreaFerrante/Orderflow"
"tysonwu/stack-orderflow" -> "gbzenobi/CSharp-NT8-OrderFlowKit"
"tysonwu/stack-orderflow" -> "txu2014/binance_orderflow"
"econdb/inquisitor" -> "ZachLiuGIS/stock_extractor"
"econdb/inquisitor" -> "quantmind/ccy"
"econdb/inquisitor" -> "skillachie/finsymbols"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "jimtin/how_to_build_a_metatrader5_trading_bot_expert_advisor" ["e"=1]
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/Alpha-Quant-Course"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance"
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" -> "Joaopeuko/Mql5-Python-Integration" ["e"=1]
"sjjohns/ThinkOrSwimStudies" -> "hwrdprkns/ThinkOrSwim"
"sjjohns/ThinkOrSwimStudies" -> "dranem05/thinkscripts-pub"
"sjjohns/ThinkOrSwimStudies" -> "yammypotato/Thinkorswim-Scripts"
"sjjohns/ThinkOrSwimStudies" -> "korygill/technical-analysis"
"sjjohns/ThinkOrSwimStudies" -> "RyanHendricks/Thinkorswim-Indicators"
"sjjohns/ThinkOrSwimStudies" -> "anupambagchi/denken"
"andrecronje/rarity" -> "g-make-it/IG_Trading_Algo_Scripts_Python" ["e"=1]
"attack68/book_irds3" -> "attack68/rateslib"
"zwdnet/trade_strategy" -> "phonegapX/bt-ctpbee-store" ["e"=1]
"phonegapX/bt-ccxt-store-cn" -> "phonegapX/bt-ctpbee-store"
"phonegapX/bt-ccxt-store-cn" -> "Dave-Vallance/bt-ccxt-store"
"Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON" -> "Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance"
"Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON" -> "Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python"
"Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON" -> "Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies"
"nburgessx/QuantResearch" -> "nburgessx/AlgoTrading"
"nburgessx/QuantResearch" -> "nburgessx/Papers"
"nburgessx/QuantResearch" -> "nburgessx/OxfordMBA"
"nburgessx/QuantResearch" -> "nburgessx/SwapsBook"
"ludrao/django-tellme" -> "MicroPyramid/docker-box"
"ludrao/django-tellme" -> "MicroPyramid/deploy-python"
"ludrao/django-tellme" -> "MicroPyramid/cinnamon-hr"
"ludrao/django-tellme" -> "MicroPyramid/microurl"
"ludrao/django-tellme" -> "MicroPyramid/django-web-profiler"
"ludrao/django-tellme" -> "MicroPyramid/django-mfa"
"ludrao/django-tellme" -> "MicroPyramid/django-webpacker"
"ludrao/django-tellme" -> "MicroPyramid/django-email-gateway"
"ludrao/django-tellme" -> "MicroPyramid/django-simple-forex"
"ludrao/django-tellme" -> "MicroPyramid/IAM-Manager"
"ludrao/django-tellme" -> "MicroPyramid/python-validate"
"ludrao/django-tellme" -> "MicroPyramid/gitlab-webhook-django"
"ludrao/django-tellme" -> "MicroPyramid/pietrack"
"ludrao/django-tellme" -> "MicroPyramid/microstorage"
"AI-Growth-Lab/Patent_p2p_similarity_w2v" -> "ryanwhalen/patent_similarity_data"
"AI-Growth-Lab/Patent_p2p_similarity_w2v" -> "AI-Growth-Lab/PatentSBERTa"
"paramatrixtech/ksapi" -> "osparamatrix/ks-orderapi-python"
"edouardpoitras/NowTrade" -> "jeffrey-liang/quantitative"
"tkanhe/Fyers-API-Access-Token-Generation-V2" -> "FyersDev/fyers-api-sample-code"
"USPTO/bulk-data-tools" -> "rippledj/uspto"
"USPTO/bulk-data-tools" -> "hopped/uspto-patents-parsing-tools"
"magols/NinjaTraderDev" -> "Sandy4321/NinjaTrader.Custom"
"magols/NinjaTraderDev" -> "kodalli/NT8-PAT-Strategy"
"magols/NinjaTraderDev" -> "sohaibmalik/NinjaTrader"
"gaulinmp/pyedgar" -> "Sandra-R-PhD/10-X_Reports_to_Google_Drive"
"YINDAIYING/Deep-Robust-Statistical-Arbitrage" -> "juliansester/statistical-arbitrage"
"altova/SECDB" -> "altova/sec-xbrl"
"altova/SECDB" -> "andrewkittredge/financial_fundamentals"
"altova/SECDB" -> "altova/sec-edgar-tools"
"Jake0303/RiskyOptionsBot" -> "ldt9/PyOptionTrader"
"Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance" -> "Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022"
"Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance" -> "Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON"
"Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS" -> "Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance"
"Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS" -> "Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022"
"Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS" -> "Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON"
"Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS" -> "Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies"
"wegamekinglc/AlgoTrading" -> "alpha-miner/portfolio-optimizer"
"imvinaypatil/kinetick" -> "TechfaneTechnologies/nsepython"
"imvinaypatil/kinetick" -> "TechfaneTechnologies/ZerodhaStrikesAllowedToTrade"
"iangow/wrds_pg" -> "mccgr/edgar"
"iangow/wrds_pg" -> "iangow/wrds2pg"
"iangow/wrds_pg" -> "iangow-public/acct_data"
"phonegapX/bt-ctpbee-store" -> "phonegapX/bt-ccxt-store-cn"
"seyedsaleh/music-generator" -> "cjbayron/c-rnn-gan.pytorch"
"Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python" -> "Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON"
"Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python" -> "Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance"
"Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python" -> "Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies"
"Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python" -> "Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022"
"joequant/algobroker" -> "llazzaro/analyzer"
"joequant/algobroker" -> "joequant/bitquant"
"joequant/algobroker" -> "quantmind/dynts"
"joequant/algobroker" -> "benjaminmgross/visualize-wealth"
"joequant/algobroker" -> "jeffrey-liang/quantitative"
"joequant/algobroker" -> "rochars/trade"
"joequant/algobroker" -> "thalesians/pythalesians"
"RajeshSivadasan/alice-blue-futures" -> "RajeshSivadasan/zerodha-option-selling"
"Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies" -> "Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance"
"Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies" -> "Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON"
"Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies" -> "Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022"
"Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies" -> "Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python"
"kanwalpreet18/canslimTechnical" -> "ariesyi329/StockPatternRecognition"
"MicroPyramid/django-simple-pagination" -> "MicroPyramid/microstorage"
"MicroPyramid/django-simple-pagination" -> "MicroPyramid/Mongo-Slice"
"MicroPyramid/django-simple-pagination" -> "MicroPyramid/fetch-tweets"
"MicroPyramid/django-simple-pagination" -> "MicroPyramid/microsocial"
"MicroPyramid/django-simple-pagination" -> "MicroPyramid/python-validate"
"MicroPyramid/django-simple-pagination" -> "MicroPyramid/gitlab-webhook-django"
"MicroPyramid/django-simple-pagination" -> "MicroPyramid/pietrack"
"MicroPyramid/django-payu" -> "MicroPyramid/microstorage"
"MicroPyramid/django-payu" -> "MicroPyramid/Mongo-Slice"
"MicroPyramid/django-payu" -> "MicroPyramid/fetch-tweets"
"MicroPyramid/django-payu" -> "MicroPyramid/microsocial"
"MicroPyramid/django-payu" -> "MicroPyramid/python-validate"
"MicroPyramid/django-payu" -> "MicroPyramid/gitlab-webhook-django"
"MicroPyramid/django-payu" -> "MicroPyramid/pietrack"
"MicroPyramid/django-payu" -> "MicroPyramid/RaspIce"
"MicroPyramid/django-payu" -> "MicroPyramid/django-seo"
"MicroPyramid/django-payu" -> "MicroPyramid/knol-bits"
"tastyware/tastytrade-cli" -> "tastyware/tastytrade"
"tastyware/tastytrade-cli" -> "tastytrade/tastytrade-sdk-python"
"guijinSON/NNHedge" -> "alexandrecarbonneau/Deep-Hedging-of-Long-Term-Financial-Derivatives"
"sudoshu/OptionsHacker" -> "tifoji/tda_api_programs"
"sudoshu/OptionsHacker" -> "2187Nick/thinkscript"
"AndreaFerrante/Orderflow" -> "akenshaw/btcusdt-orderflow"
"AndreaFerrante/Orderflow" -> "tysonwu/stack-orderflow"
"AndreaFerrante/Orderflow" -> "murtazayusuf/OrderflowChart"
"thedatabeat/SVI" -> "wangys96/SVI-Volatility-Surface-Calibration"
"thedatabeat/SVI" -> "kangzhan/SVI-Surface"
"thedatabeat/SVI" -> "remis-thoughts/svi-zeliade"
"thedatabeat/SVI" -> "JunbeomL22/SurfaceFitting"
"tomyitav/talib-extensions" -> "themichaelusa/realtime_talib"
"Guillaume-Fgt/vectorbt_backtesting" -> "gioruggieri/Vectorbt_Examples"
"gioruggieri/Vectorbt_Examples" -> "eervin123/tradingview-to-vectorbt"
"gioruggieri/Vectorbt_Examples" -> "Guillaume-Fgt/vectorbt_backtesting"
"ashishkumar30/Microservices" -> "ashishkumar30/Django-Projects"
"regexhq/whitespace-regex" -> "eliangcs/pystock-github"
"owocki/pytrader" -> "gbeced/pyalgotrade" ["e"=1]
"owocki/pytrader" -> "jamesmawm/High-Frequency-Trading-Model-with-IB" ["e"=1]
"owocki/pytrader" -> "cuemacro/finmarketpy" ["e"=1]
"guillaume-chevalier/LSTM-Human-Activity-Recognition" -> "nicodjimenez/lstm" ["e"=1]
"fmzquant/strategies" -> "mementum/backtrader" ["e"=1]
"fmzquant/strategies" -> "gbeced/pyalgotrade" ["e"=1]
"TechfaneTechnologies/QtsApp" -> "imvinaypatil/kinetick"
"TechfaneTechnologies/QtsApp" -> "algo2t/alphatrade"
"thuquant/awesome-quant" -> "wilsonfreitas/awesome-quant" ["e"=1]
"thuquant/awesome-quant" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"mcdallas/wallstreet" -> "jasonstrimpel/volatility-trading"
"mcdallas/wallstreet" -> "pmorissette/ffn"
"mcdallas/wallstreet" -> "michaelchu/optopsy"
"mcdallas/wallstreet" -> "cuemacro/findatapy"
"mcdallas/wallstreet" -> "hongtaocai/googlefinance"
"mcdallas/wallstreet" -> "domokane/FinancePy"
"mcdallas/wallstreet" -> "vollib/vollib"
"mcdallas/wallstreet" -> "shashankvemuri/Finance"
"mcdallas/wallstreet" -> "quantsbin/Quantsbin"
"mcdallas/wallstreet" -> "LastAncientOne/Stock_Analysis_For_Quant"
"mcdallas/wallstreet" -> "letianzj/QuantResearch"
"mcdallas/wallstreet" -> "dcajasn/Riskfolio-Lib"
"mcdallas/wallstreet" -> "enthought/pyql"
"mcdallas/wallstreet" -> "JerBouma/FinanceToolkit"
"mcdallas/wallstreet" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"alibaba/ali-dbhub" -> "AI4Finance-Foundation/FinGPT" ["e"=1]
"Jordylek/VolatilityIsMostlyPathDependent" -> "sigurdroemer/rough_volatility"
"ScottfreeLLC/AlphaPy" -> "jankrepl/deepdow"
"ScottfreeLLC/AlphaPy" -> "hudson-and-thames/mlfinlab"
"ScottfreeLLC/AlphaPy" -> "Yvictor/TradingGym" ["e"=1]
"ScottfreeLLC/AlphaPy" -> "jasonstrimpel/volatility-trading"
"ScottfreeLLC/AlphaPy" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"ScottfreeLLC/AlphaPy" -> "Heerozh/spectre"
"ScottfreeLLC/AlphaPy" -> "michaelchu/optopsy"
"ScottfreeLLC/AlphaPy" -> "pmorissette/ffn"
"ScottfreeLLC/AlphaPy" -> "enzoampil/fastquant"
"ScottfreeLLC/AlphaPy" -> "ranaroussi/qtpylib"
"ScottfreeLLC/AlphaPy" -> "robcarver17/pysystemtrade"
"ScottfreeLLC/AlphaPy" -> "letianzj/QuantResearch"
"ScottfreeLLC/AlphaPy" -> "AlgoTraders/stock-analysis-engine"
"ScottfreeLLC/AlphaPy" -> "pmorissette/bt"
"ScottfreeLLC/AlphaPy" -> "robertmartin8/MachineLearningStocks"
"edtechre/pybroker" -> "polakowo/vectorbt"
"edtechre/pybroker" -> "paperswithbacktest/awesome-systematic-trading"
"edtechre/pybroker" -> "wangzhe3224/awesome-systematic-trading"
"edtechre/pybroker" -> "dcajasn/Riskfolio-Lib"
"edtechre/pybroker" -> "letianzj/QuantResearch"
"edtechre/pybroker" -> "ranaroussi/quantstats"
"edtechre/pybroker" -> "blankly-finance/blankly"
"edtechre/pybroker" -> "pmorissette/bt"
"edtechre/pybroker" -> "zvtvz/zvt" ["e"=1]
"edtechre/pybroker" -> "pmorissette/ffn"
"edtechre/pybroker" -> "nkaz001/hftbacktest" ["e"=1]
"edtechre/pybroker" -> "kernc/backtesting.py"
"edtechre/pybroker" -> "quantopian/alphalens"
"edtechre/pybroker" -> "TradeMaster-NTU/TradeMaster"
"edtechre/pybroker" -> "skfolio/skfolio"
"barter-rs/barter-rs" -> "nautechsystems/nautilus_trader" ["e"=1]
"rongardF/tvdatafeed" -> "TechfaneTechnologies/pytvlwcharts" ["e"=1]
"nkaz001/hftbacktest" -> "nautechsystems/nautilus_trader" ["e"=1]
"nkaz001/hftbacktest" -> "letianzj/QuantResearch" ["e"=1]
"nkaz001/hftbacktest" -> "0xfdf/toraniko" ["e"=1]
"nkaz001/hftbacktest" -> "ranaroussi/quantstats" ["e"=1]
"nkaz001/hftbacktest" -> "paperswithbacktest/awesome-systematic-trading" ["e"=1]
"nkaz001/hftbacktest" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"UFund-Me/Qbot" -> "microsoft/qlib" ["e"=1]
"UFund-Me/Qbot" -> "paperswithbacktest/awesome-systematic-trading" ["e"=1]
"UFund-Me/Qbot" -> "mementum/backtrader" ["e"=1]
"pykalman/pykalman" -> "bashtage/arch" ["e"=1]
"yutiansut/QUANTAXIS" -> "mementum/backtrader" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "AI4Finance-Foundation/FinGPT"
"AI4Finance-Foundation/FinNLP" -> "AI4Finance-Foundation/FinRL-Meta" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "The-FinAI/PIXIU" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "AI4Finance-Foundation/FinRL-Tutorials" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "AI4Finance-Foundation/FinRobot"
"AI4Finance-Foundation/FinNLP" -> "yya518/FinBERT" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "JinanZou/Astock" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "FudanDISC/DISC-FinLLM" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "yumoxu/stocknet-dataset" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "Duxiaoman-DI/XuanYuan" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "supersymmetry-technologies/BBT-FinCUGE-Applications" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "AI4Finance-Foundation/FinRL-Trading" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "jerry1993-tech/Cornucopia-LLaMA-Fin-Chinese" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "MetaGLM/FinGLM" ["e"=1]
"AI4Finance-Foundation/FinNLP" -> "ProsusAI/finBERT"
"charliedream1/ai_quant_trade" -> "TradeMaster-NTU/TradeMaster" ["e"=1]
"PlamenStilyianov/FinMathematics" -> "PlamenStilyianov/Quant"
"PlamenStilyianov/FinMathematics" -> "PyPatel/Quant-Finance-Resources"
"PlamenStilyianov/FinMathematics" -> "LechGrzelak/Computational-Finance-Course"
"PlamenStilyianov/FinMathematics" -> "cantaro86/Financial-Models-Numerical-Methods"
"PlamenStilyianov/FinMathematics" -> "letianzj/QuantResearch"
"PlamenStilyianov/FinMathematics" -> "dwcoder/QuantitativePrimer" ["e"=1]
"PlamenStilyianov/FinMathematics" -> "LechGrzelak/QuantFinanceBook"
"PlamenStilyianov/FinMathematics" -> "geniayuan/datasciencecoursera" ["e"=1]
"PlamenStilyianov/FinMathematics" -> "LechGrzelak/FinancialEngineering_IR_xVA"
"PlamenStilyianov/FinMathematics" -> "domokane/FinancePy"
"PlamenStilyianov/FinMathematics" -> "shashankvemuri/Finance"
"PlamenStilyianov/FinMathematics" -> "quantopian/research_public"
"PlamenStilyianov/FinMathematics" -> "yc-liu/readings"
"PlamenStilyianov/FinMathematics" -> "firmai/financial-machine-learning"
"PlamenStilyianov/FinMathematics" -> "dcajasn/Riskfolio-Lib"
"Yam-cn/pyalgotrade-cn" -> "gbeced/pyalgotrade" ["e"=1]
"Yam-cn/pyalgotrade-cn" -> "ematvey/pybacktest" ["e"=1]
"merovinh/best-of-algorithmic-trading" -> "joelowj/awesome-algorithmic-trading"
"merovinh/best-of-algorithmic-trading" -> "coding-kitties/investing-algorithm-framework"
"merovinh/best-of-algorithmic-trading" -> "AliHabibnia/Algorithmic_Trading_with_Python"
"merovinh/best-of-algorithmic-trading" -> "best-of-lists/best-of" ["e"=1]
"merovinh/best-of-algorithmic-trading" -> "zslucky/algorithmic_trading_book"
"avhz/RustQuant" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"anandanand84/technicalindicators" -> "TulipCharts/tulipindicators" ["e"=1]
"man-group/ArcticDB" -> "man-group/arctic"
"man-group/ArcticDB" -> "skfolio/skfolio"
"man-group/ArcticDB" -> "ranaroussi/quantstats"
"man-group/ArcticDB" -> "man-group/notebooker" ["e"=1]
"man-group/ArcticDB" -> "michaelchu/optopsy"
"man-group/ArcticDB" -> "dcajasn/Riskfolio-Lib"
"man-group/ArcticDB" -> "pmorissette/ffn"
"man-group/ArcticDB" -> "stefan-jansen/zipline-reloaded"
"man-group/ArcticDB" -> "domokane/FinancePy"
"man-group/ArcticDB" -> "vollib/vollib"
"man-group/ArcticDB" -> "letianzj/QuantResearch"
"man-group/ArcticDB" -> "polakowo/vectorbt"
"man-group/ArcticDB" -> "visualHFT/VisualHFT" ["e"=1]
"man-group/ArcticDB" -> "nkaz001/hftbacktest" ["e"=1]
"man-group/ArcticDB" -> "stefan-jansen/alphalens-reloaded"
"MicroPyramid/forex-python" -> "MicroPyramid/microurl"
"MicroPyramid/forex-python" -> "MicroPyramid/django-simple-forum"
"MicroPyramid/forex-python" -> "mhallsmoore/qsforex"
"MicroPyramid/forex-python" -> "MicroPyramid/django-simple-pagination"
"MicroPyramid/forex-python" -> "MicroPyramid/docker-box"
"MicroPyramid/forex-python" -> "MicroPyramid/django-mfa"
"MicroPyramid/forex-python" -> "MicroPyramid/MicroSite"
"MicroPyramid/forex-python" -> "MicroPyramid/django-blog-it"
"MicroPyramid/forex-python" -> "MicroPyramid/django-web-profiler"
"MicroPyramid/forex-python" -> "MicroPyramid/django-webpacker"
"MicroPyramid/forex-python" -> "MicroPyramid/django-email-gateway"
"MicroPyramid/forex-python" -> "jonromero/forex_algotrading"
"MicroPyramid/forex-python" -> "MicroPyramid/django-seo"
"MicroPyramid/forex-python" -> "MicroPyramid/deploy-python"
"sanko/Robinhood" -> "robinhood-unofficial/pyrh"
"sanko/Robinhood" -> "aurbano/robinhood-node"
"sanko/Robinhood" -> "anilshanbhag/RobinhoodShell"
"sanko/Robinhood" -> "jmfernandes/robin_stocks"
"sanko/Robinhood" -> "bcwik9/robinhood-on-rails"
"sanko/Robinhood" -> "rohanpai/Robinhood"
"sanko/Robinhood" -> "joshfraser/robinhood-to-csv"
"sanko/Robinhood" -> "mstrum/robinhood-python"
"sanko/Robinhood" -> "Ameobea/robintrack"
"sanko/Robinhood" -> "LichAmnesia/Robinhood"
"sanko/Robinhood" -> "alpacahq/alpaca-trade-api-python"
"sanko/Robinhood" -> "westonplatter/fast_arrow"
"sanko/Robinhood" -> "codesociety/friartuck"
"sanko/Robinhood" -> "torreyleonard/algotrader"
"sanko/Robinhood" -> "tedchou12/webull"
"hansbuehler/deephedging" -> "pfnet-research/pfhedge"
"hansbuehler/deephedging" -> "YuMan-Tam/deep-hedging"
"hansbuehler/deephedging" -> "guijinSON/Awesome-Deep-Hedging"
"hansbuehler/deephedging" -> "alexandrecarbonneau/Deep-Hedging-of-Long-Term-Financial-Derivatives"
"hansbuehler/deephedging" -> "rotmanfinhub/gamma-vega-rl-hedging"
"hansbuehler/deephedging" -> "0xfdf/toraniko"
"hansbuehler/deephedging" -> "pfnet-research/NoTransactionBandNetwork"
"TradeMaster-NTU/TradeMaster" -> "RL-MLDM/alphagen" ["e"=1]
"TradeMaster-NTU/TradeMaster" -> "AI4Finance-Foundation/FinRL-Meta" ["e"=1]
"TradeMaster-NTU/TradeMaster" -> "AI4Finance-Foundation/FinRL"
"TradeMaster-NTU/TradeMaster" -> "hugo2046/QuantsPlaybook" ["e"=1]
"TradeMaster-NTU/TradeMaster" -> "nkaz001/hftbacktest" ["e"=1]
"TradeMaster-NTU/TradeMaster" -> "paperswithbacktest/awesome-systematic-trading"
"TradeMaster-NTU/TradeMaster" -> "wangzhe3224/awesome-systematic-trading"
"TradeMaster-NTU/TradeMaster" -> "edtechre/pybroker"
"TradeMaster-NTU/TradeMaster" -> "wondertrader/wondertrader" ["e"=1]
"TradeMaster-NTU/TradeMaster" -> "chenditc/investment_data" ["e"=1]
"TradeMaster-NTU/TradeMaster" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"TradeMaster-NTU/TradeMaster" -> "microsoft/qlib"
"TradeMaster-NTU/TradeMaster" -> "quantopian/alphalens"
"TradeMaster-NTU/TradeMaster" -> "AI4Finance-Foundation/FinRL-Tutorials" ["e"=1]
"TradeMaster-NTU/TradeMaster" -> "AI4Finance-Foundation/FinRL-Trading" ["e"=1]
"Aniruddha-Deb/quant-prep" -> "PyPatel/Quant-Finance-Resources" ["e"=1]
"RJT1990/pyflux" -> "bashtage/arch" ["e"=1]
"RJT1990/pyflux" -> "man-group/arctic" ["e"=1]
"visualHFT/VisualHFT" -> "letianzj/QuantResearch" ["e"=1]
"visualHFT/VisualHFT" -> "JerBouma/AlgorithmicTrading" ["e"=1]
"Benny-/Yahoo-ticker-symbol-downloader" -> "portfolioplus/pytickersymbols"
"Benny-/Yahoo-ticker-symbol-downloader" -> "shilewenuw/get_all_tickers"
"Benny-/Yahoo-ticker-symbol-downloader" -> "cgoldberg/ystockquote"
"Benny-/Yahoo-ticker-symbol-downloader" -> "stockdatalab/YAHOO-FINANCE-SCREENER-SYMBOLS-AND-HISTORICAL-DATA"
"rouseguy/TimeSeriesAnalysiswithPython" -> "tgjeon/TensorFlow-Tutorials-for-Time-Series" ["e"=1]
"RobRomijnders/LSTM_tsc" -> "RobRomijnders/CNN_tsc"
"RobRomijnders/LSTM_tsc" -> "aqibsaeed/Multilabel-timeseries-classification-with-LSTM"
"RobRomijnders/LSTM_tsc" -> "tgjeon/TensorFlow-Tutorials-for-Time-Series"
"RobRomijnders/LSTM_tsc" -> "titu1994/LSTM-FCN" ["e"=1]
"RobRomijnders/LSTM_tsc" -> "titu1994/MLSTM-FCN" ["e"=1]
"RobRomijnders/LSTM_tsc" -> "polyaxon/haupt"
"RobRomijnders/LSTM_tsc" -> "cauchyturing/UCR_Time_Series_Classification_Deep_Learning_Baseline" ["e"=1]
"RobRomijnders/LSTM_tsc" -> "jgpavez/LSTM---Stock-prediction"
"RobRomijnders/LSTM_tsc" -> "healthDataScience/deep-learning-HAR" ["e"=1]
"RobRomijnders/LSTM_tsc" -> "tencia/stocks_rnn"
"RobRomijnders/LSTM_tsc" -> "CasiaFan/time_seires_prediction_using_lstm"
"RobRomijnders/LSTM_tsc" -> "alexminnaar/time-series-classification-and-clustering" ["e"=1]
"RobRomijnders/LSTM_tsc" -> "titu1994/LSTM-FCN-Ablation" ["e"=1]
"RL-MLDM/alphagen" -> "TradeMaster-NTU/TradeMaster" ["e"=1]
"USPTO/PatentPublicData" -> "USPTO/bulk-data-tools"
"USPTO/PatentPublicData" -> "google/patents-public-data"
"USPTO/PatentPublicData" -> "rippledj/uspto"
"USPTO/PatentPublicData" -> "iamlemec/fastpat"
"USPTO/PatentPublicData" -> "ip-tools/python-epo-ops-client"
"USPTO/PatentPublicData" -> "hopped/uspto-patents-parsing-tools"
"USPTO/PatentPublicData" -> "funginstitute/patentprocessor"
"USPTO/PatentPublicData" -> "ip-tools/uspto-opendata-python"
"USPTO/PatentPublicData" -> "poldham/opensource-patent-analytics"
"USPTO/PatentPublicData" -> "syspect-sec/uspto"
"USPTO/PatentPublicData" -> "liuqiyuan/UPET-USPTO-Patent-Exploring-Tool"
"USPTO/PatentPublicData" -> "wipo-analytics/wipo-analytics.github.io"
"USPTO/PatentPublicData" -> "SmartDataAnalytics/linked-uspto-patent-data"
"erykml/Python-for-Finance-Cookbook-2E" -> "PacktPublishing/Python-for-Finance-Cookbook" ["e"=1]
"UnusualAlpha/ib-gateway-docker" -> "gnzsnz/ib-gateway-docker"
"UnusualAlpha/ib-gateway-docker" -> "manhinhang/ib-gateway-docker"
"UnusualAlpha/ib-gateway-docker" -> "Voyz/ibeam"
"UnusualAlpha/ib-gateway-docker" -> "extrange/ibkr-docker"
"UnusualAlpha/ib-gateway-docker" -> "mvberg/ib-gateway-docker"
"UnusualAlpha/ib-gateway-docker" -> "IbcAlpha/IBC"
"UnusualAlpha/ib-gateway-docker" -> "ib-api-reloaded/ib_async"
"UnusualAlpha/ib-gateway-docker" -> "waytrade/ib-gateway-docker"
"UnusualAlpha/ib-gateway-docker" -> "stoqey/ib"
"UnusualAlpha/ib-gateway-docker" -> "dvasdekis/ib-gateway-docker-gcp"
"UnusualAlpha/ib-gateway-docker" -> "mattsta/ib_insync"
"UnusualAlpha/ib-gateway-docker" -> "QuantConnect/IBAutomater"
"UnusualAlpha/ib-gateway-docker" -> "psemdel/py-trading-bot"
"UnusualAlpha/ib-gateway-docker" -> "Voyz/ibind"
"UnusualAlpha/ib-gateway-docker" -> "roblav96/headless-ib-gateway-installation-ubuntu-server"
"quantopian/empyrical" -> "quantopian/pyfolio"
"quantopian/empyrical" -> "quantopian/alphalens"
"quantopian/empyrical" -> "pmorissette/ffn"
"quantopian/empyrical" -> "quantopian/trading_calendars"
"quantopian/empyrical" -> "pmorissette/bt"
"quantopian/empyrical" -> "dcajasn/Riskfolio-Lib"
"quantopian/empyrical" -> "cuemacro/findatapy"
"quantopian/empyrical" -> "ranaroussi/quantstats"
"quantopian/empyrical" -> "enthought/pyql"
"quantopian/empyrical" -> "cvxgrp/cvxportfolio"
"quantopian/empyrical" -> "cuemacro/finmarketpy"
"quantopian/empyrical" -> "jasonstrimpel/volatility-trading"
"quantopian/empyrical" -> "quantopian/research_public"
"quantopian/empyrical" -> "ranaroussi/qtpylib"
"quantopian/empyrical" -> "hudson-and-thames/mlfinlab"
"terry3041/pyChatGPT" -> "bhattbhavesh91/voice-assistant-whisper-chatgpt" ["e"=1]
"Nikorasu/LiveWhisper" -> "JohnZolton/scribe" ["e"=1]
"polyaxon/traceml" -> "HHammond/PrettyPandas" ["e"=1]
"polyaxon/traceml" -> "NathanEpstein/Dora" ["e"=1]
"polyaxon/traceml" -> "SauceCat/PDPbox" ["e"=1]
"polyaxon/traceml" -> "engarde-dev/engarde" ["e"=1]
"polyaxon/traceml" -> "polyaxon/polyaxon-quick-start"
"polyaxon/traceml" -> "vents-io/vents"
"polyaxon/traceml" -> "SauceCat/pydqc" ["e"=1]
"polyaxon/traceml" -> "polyaxon/charts"
"polyaxon/traceml" -> "polyaxon/hypertune"
"polyaxon/traceml" -> "polyaxon/cli"
"polyaxon/traceml" -> "polyaxon/polyaxon-examples"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "kylejusticemagnuson/pyti"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "kimber-chen/Tensorflow-for-stock-prediction"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "dhingratul/Stock-Price-Prediction"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "arkochhar/Technical-Indicators"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "keon/deepstock" ["e"=1]
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "venky14/Stock-Market-Analysis-and-Prediction"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "achillesrasquinha/bulbea"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "lilianweng/stock-rnn"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "timestocome/Test-stock-prediction-algorithms"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "dzitkowskik/StockPredictionRNN"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "femtotrader/pandas_talib"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "JasonDoingGreat/Convolutional-Networks-for-Stock-Predicting"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" -> "robertmartin8/MachineLearningStocks"
"iRavinderBrar/Kite_Zerodha" -> "harpalnain/ZerodhaAtom"
"iRavinderBrar/Kite_Zerodha" -> "jugaad-py/jugaad-trader"
"iRavinderBrar/Kite_Zerodha" -> "ranjanrak/optionchainstream"
"iRavinderBrar/Kite_Zerodha" -> "srikar-kodakandla/fully-automated-nifty-options-trading"
"iRavinderBrar/Kite_Zerodha" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"iRavinderBrar/Kite_Zerodha" -> "yash12392/tradewithpython-blogs"
"iRavinderBrar/Kite_Zerodha" -> "anurag-roy/kite-option-chain"
"zerodha/pykiteconnect" -> "swapniljariwala/nsepy"
"zerodha/pykiteconnect" -> "vsjha18/nsetools"
"zerodha/pykiteconnect" -> "jigneshpylab/ZerodhaPythonScripts"
"zerodha/pykiteconnect" -> "zerodha/javakiteconnect"
"zerodha/pykiteconnect" -> "arkochhar/Technical-Indicators"
"zerodha/pykiteconnect" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"zerodha/pykiteconnect" -> "zerodha/kite-connect-python-example"
"zerodha/pykiteconnect" -> "ashishkumar30/Stock_Market_Live_Trading_using_AI"
"zerodha/pykiteconnect" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"zerodha/pykiteconnect" -> "zerodha/kiteconnectjs"
"zerodha/pykiteconnect" -> "iRavinderBrar/Kite_Zerodha"
"zerodha/pykiteconnect" -> "jugaad-py/jugaad-trader"
"zerodha/pykiteconnect" -> "aeron7/nsepython"
"zerodha/pykiteconnect" -> "zerodha/dotnetkiteconnect"
"zerodha/pykiteconnect" -> "ranjanrak/optionchainstream"
"theOGognf/finagg" -> "fja05680/sp500"
"white07S/TradingPatternScanner" -> "keithorange/PatternPy"
"white07S/TradingPatternScanner" -> "BennyThadikaran/stock-pattern"
"white07S/TradingPatternScanner" -> "zeta-zetra/chart_patterns"
"white07S/TradingPatternScanner" -> "ednunezg/pytrendline"
"white07S/TradingPatternScanner" -> "neurotrader888/TrendLineAutomation"
"white07S/TradingPatternScanner" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"white07S/TradingPatternScanner" -> "SpiralDevelopment/RSI-divergence-detector"
"white07S/TradingPatternScanner" -> "zeta-zetra/code"
"white07S/TradingPatternScanner" -> "CharlesLoo/stock-pattern-recorginition"
"white07S/TradingPatternScanner" -> "stockalgo/stolgo"
"tylerebowers/Schwabdev" -> "alexgolec/schwab-py"
"tylerebowers/Schwabdev" -> "itsjafer/schwab-api"
"tylerebowers/Schwabdev" -> "bluedabadi/SchwabAutoTrading"
"tylerebowers/Schwabdev" -> "alexgolec/tda-api"
"tylerebowers/Schwabdev" -> "areed1192/td-ameritrade-python-api"
"tylerebowers/Schwabdev" -> "ib-api-reloaded/ib_async"
"tylerebowers/Schwabdev" -> "TreyThomas93/python-trading-bot-with-thinkorswim"
"tylerebowers/Schwabdev" -> "areed1192/td-ameritrade-api"
"tylerebowers/Schwabdev" -> "roninio/Schwab-API-with-Streamlit"
"tylerebowers/Schwabdev" -> "tastyware/tastytrade"
"tylerebowers/Schwabdev" -> "2187Nick/thinkscript"
"tylerebowers/Schwabdev" -> "jeog/TOSDataBridge"
"tylerebowers/Schwabdev" -> "timkpaine/tdameritrade"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "srikar-kodakandla/algo-trading-using-fyers-broker-api"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "RajeshSivadasan/alice-blue-futures"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "joesinghh/AlgoApp"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "karthikramx/algorithmic-trading"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "debaonline4u/NSE-Data"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "vikassharma545/APICostFree-Zerodha-Trade"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "QuickLearner171998/Python-Algo-Trading-Zerodha"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "ranjanrak/optionchainstream"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "TechfaneTechnologies/QtsApp"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "algo2t/alphatrade"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "debanshur/algotrading"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "harpalnain/ZerodhaAtom"
"srikar-kodakandla/fully-automated-nifty-options-trading" -> "jugaad-py/jugaad-trader"
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "polyaxon/haupt"
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "RobRomijnders/LSTM_tsc"
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "hzy46/TensorFlow-Time-Series-Examples"
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "tencia/stocks_rnn"
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "BenjiKCF/Neural-Net-with-Financial-Time-Series-Data" ["e"=1]
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "guillaume-chevalier/seq2seq-signal-prediction" ["e"=1]
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "llSourcell/How-to-Use-Tensorflow-for-Time-Series-Live-" ["e"=1]
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "pusj/LSTM-Time-Series-Analysis-using-Tensorflow"
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "AileenNielsen/TimeSeriesAnalysisWithPython" ["e"=1]
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "rouseguy/TimeSeriesAnalysiswithPython" ["e"=1]
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "aqibsaeed/Multilabel-timeseries-classification-with-LSTM"
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "alexminnaar/time-series-classification-and-clustering" ["e"=1]
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "RJT1990/pyflux" ["e"=1]
"tgjeon/TensorFlow-Tutorials-for-Time-Series" -> "kimber-chen/Tensorflow-for-stock-prediction"
"alexgolec/schwab-py" -> "tylerebowers/Schwabdev"
"alexgolec/schwab-py" -> "itsjafer/schwab-api"
"alexgolec/schwab-py" -> "alexgolec/tda-api"
"alexgolec/schwab-py" -> "areed1192/td-ameritrade-python-api"
"alexgolec/schwab-py" -> "areed1192/td-ameritrade-api"
"alexgolec/schwab-py" -> "tastyware/tastytrade"
"alexgolec/schwab-py" -> "peter-oroszvari/tastytrade-api"
"ChickenBenny/Stock-prediction-with-GAN-and-WGAN" -> "hungchun-lin/Stock-price-prediction-using-GAN"
"RobRomijnders/CNN_tsc" -> "RobRomijnders/LSTM_tsc"
"exein-io/pulsar" -> "deepfence/ebpfguard" ["e"=1]
"ytliu74/FactorVAE" -> "dkyol/Asset-Pricing-Model" ["e"=1]
"NelsonDane/auto-rsa" -> "NelsonDane/fennel-invest-api"
"NelsonDane/auto-rsa" -> "NelsonDane/public-invest-api"
"NelsonDane/auto-rsa" -> "Prem-ium/Auto-StockTrader"
"NelsonDane/auto-rsa" -> "itsjafer/reverse-stock-split-arbitrage"
"NelsonDane/auto-rsa" -> "DrakeHooks/CasinoClaim"
"dgunning/edgartools" -> "jadchaar/sec-edgar-downloader"
"dgunning/edgartools" -> "sec-edgar/sec-edgar"
"dgunning/edgartools" -> "john-friedman/datamule-python"
"dgunning/edgartools" -> "janlukasschroeder/sec-api-python"
"dgunning/edgartools" -> "lefterisloukas/edgar-crawler"
"dgunning/edgartools" -> "alphanome-ai/sec-parser"
"dgunning/edgartools" -> "edgarminers/python-edgar"
"dgunning/edgartools" -> "virattt/financial-datasets"
"dgunning/edgartools" -> "rsljr/edgarParser"
"dgunning/edgartools" -> "jadchaar/sec-edgar-api"
"dgunning/edgartools" -> "bellingcat/EDGAR" ["e"=1]
"dgunning/edgartools" -> "janlukasschroeder/sec-api"
"dgunning/edgartools" -> "ib-api-reloaded/ib_async"
"dgunning/edgartools" -> "john-friedman/SEC-Parsers"
"dgunning/edgartools" -> "skfolio/skfolio"
"martinshkreli/models" -> "mariostoev/finviz" ["e"=1]
"martinshkreli/models" -> "0xfdf/toraniko" ["e"=1]
"martinshkreli/models" -> "sec-edgar/sec-edgar" ["e"=1]
"martinshkreli/models" -> "JerBouma/FinanceDatabase" ["e"=1]
"martinshkreli/models" -> "OpenBB-finance/OpenBB" ["e"=1]
"austin-starks/NextTrade" -> "austin-starks/FinAnGPT"
"austin-starks/NextTrade" -> "barter-rs/barter-rs" ["e"=1]
"austin-starks/NextTrade" -> "amor71/LiuAlgoTrader"
"austin-starks/NextTrade" -> "idanya/algo-trader"
"austin-starks/NextTrade" -> "austin-starks/Deep-RL-Stocks"
"austin-starks/NextTrade" -> "nkaz001/hftbacktest" ["e"=1]
"austin-starks/NextTrade" -> "edtechre/pybroker"
"austin-starks/NextTrade" -> "nautechsystems/nautilus_trader"
"austin-starks/NextTrade" -> "AmpyFin/ampyfin"
"austin-starks/NextTrade" -> "visualHFT/VisualHFT" ["e"=1]
"austin-starks/NextTrade" -> "StockSharp/StockSharp"
"austin-starks/NextTrade" -> "ranaroussi/quantstats"
"austin-starks/NextTrade" -> "ivebotunac/PrimoGPT"
"austin-starks/NextTrade" -> "Ameobea/tickgrinder" ["e"=1]
"austin-starks/NextTrade" -> "shashankvemuri/Finance"
"ki33elev/Adv_Fin_ML" -> "markdregan/FreqAI-Marcos-Lopez-De-Prado" ["e"=1]
"antontarasenko/awesome-economics" -> "rsvp/fecon235" ["e"=1]
"ofirnachum/sequence_gan" -> "olofmogren/c-rnn-gan" ["e"=1]
"ro31337/libretaxi" -> "maxbbraun/trump2cash" ["e"=1]
"NathanEpstein/Dora" -> "polyaxon/traceml" ["e"=1]
"ChawlaAvi/Daily-Dose-of-Data-Science" -> "business-science/pytimetk" ["e"=1]
"TechfaneTechnologies/pytvlwcharts" -> "louisnw01/lightweight-charts-python" ["e"=1]
"TechfaneTechnologies/pytvlwcharts" -> "tysonwu/dash-tradingview" ["e"=1]
"TechfaneTechnologies/pytvlwcharts" -> "TechfaneTechnologies/QtsApp"
"TechfaneTechnologies/pytvlwcharts" -> "NagarajuGunda/PyAlgoMate"
"TechfaneTechnologies/pytvlwcharts" -> "imvinaypatil/kinetick"
"TechfaneTechnologies/pytvlwcharts" -> "JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles"
"TechfaneTechnologies/pytvlwcharts" -> "TechfaneTechnologies/ZerodhaStrikesAllowedToTrade"
"TechfaneTechnologies/pytvlwcharts" -> "ranjanrak/optionchainstream"
"TechfaneTechnologies/pytvlwcharts" -> "jugaad-py/jugaad-trader"
"TechfaneTechnologies/pytvlwcharts" -> "aeron7/nsepython"
"TechfaneTechnologies/pytvlwcharts" -> "marketcalls/openalgo"
"TechfaneTechnologies/pytvlwcharts" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"TechfaneTechnologies/pytvlwcharts" -> "narenkram/steadfast-monorepo"
"TechfaneTechnologies/pytvlwcharts" -> "Indian-Algorithmic-Trading-Community/Zerodha"
"TechfaneTechnologies/pytvlwcharts" -> "pranjal-joshi/Screeni-py"
"tysonwu/dash-tradingview" -> "TechfaneTechnologies/pytvlwcharts" ["e"=1]
"scorpionhiccup/StockPricePrediction" -> "dzitkowskik/StockPredictionRNN"
"scorpionhiccup/StockPricePrediction" -> "robertmartin8/MachineLearningStocks"
"scorpionhiccup/StockPricePrediction" -> "achillesrasquinha/bulbea"
"scorpionhiccup/StockPricePrediction" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"scorpionhiccup/StockPricePrediction" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"scorpionhiccup/StockPricePrediction" -> "NourozR/Stock-Price-Prediction-LSTM"
"scorpionhiccup/StockPricePrediction" -> "lilianweng/stock-rnn"
"scorpionhiccup/StockPricePrediction" -> "huseinzol05/Stock-Prediction-Models"
"scorpionhiccup/StockPricePrediction" -> "Rajat-dhyani/Stock-Price-Predictor"
"scorpionhiccup/StockPricePrediction" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"scorpionhiccup/StockPricePrediction" -> "tencia/stocks_rnn"
"scorpionhiccup/StockPricePrediction" -> "kimber-chen/Tensorflow-for-stock-prediction"
"scorpionhiccup/StockPricePrediction" -> "borisbanushev/stockpredictionai"
"scorpionhiccup/StockPricePrediction" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"scorpionhiccup/StockPricePrediction" -> "VivekPa/AIAlpha"
"alvarobartt/investiny" -> "alvarobartt/investpy"
"alvarobartt/investiny" -> "ymyke/tessa"
"alvarobartt/investiny" -> "alvarobartt/trendet"
"alvarobartt/investiny" -> "DavideViolante/investing-com-api"
"alvarobartt/investiny" -> "alvarobartt/pyrtfolio"
"n1nj4z33/iqoptionapi" -> "n1nj4z33/iqoptionbot"
"n1nj4z33/iqoptionapi" -> "harwee/IQOption-Api"
"n1nj4z33/iqoptionapi" -> "MongkonEiadon/IqOption.Net"
"n1nj4z33/iqoptionapi" -> "Lu-Yi-Hsun/iqoptionapi"
"n1nj4z33/iqoptionapi" -> "AlanForester/IQOption-Bot-Trade-System"
"n1nj4z33/iqoptionapi" -> "CarlosGatti/bot-python-iq-option"
"n1nj4z33/iqoptionapi" -> "iqoptionapi/iqoptionapi"
"n1nj4z33/iqoptionapi" -> "omarmagh/iq_option_BOT"
"intuition-io/intuition" -> "intuition-io/insights"
"PlamenStilyianov/Quant" -> "PlamenStilyianov/FinMathematics"
"PlamenStilyianov/Quant" -> "nburgessx/SwapsBook"
"PlamenStilyianov/Quant" -> "cheerzzh/CPP-design-pattern-derivatives-pricing"
"PlamenStilyianov/Quant" -> "LechGrzelak/Computational-Finance-Course"
"PlamenStilyianov/Quant" -> "PlamenStilyianov/python-cookbook"
"PlamenStilyianov/Quant" -> "ynouri/pysabr"
"PlamenStilyianov/Quant" -> "quantrocket-codeload/quant-finance-lectures"
"tooksoi/ScraXBRL" -> "lukerosiak/pysec"
"tooksoi/ScraXBRL" -> "datasets/edgar"
"tooksoi/ScraXBRL" -> "greedo/python-xbrl"
"tooksoi/ScraXBRL" -> "andrewkittredge/financial_fundamentals"
"tooksoi/ScraXBRL" -> "edgarminers/python-edgar"
"tooksoi/ScraXBRL" -> "altova/sec-xbrl"
"tooksoi/ScraXBRL" -> "Arelle/Arelle"
"tooksoi/ScraXBRL" -> "janlukasschroeder/sec-api"
"tooksoi/ScraXBRL" -> "Arelle/EdgarRenderer"
"tooksoi/ScraXBRL" -> "manusimidt/py-xbrl"
"tooksoi/ScraXBRL" -> "altova/SECDB"
"tooksoi/ScraXBRL" -> "sec-edgar/sec-edgar"
"tooksoi/ScraXBRL" -> "alions7000/SEC-EDGAR-text"
"tooksoi/ScraXBRL" -> "secdatabase/SEC-XBRL-Financial-Statement-Dataset"
"tooksoi/ScraXBRL" -> "bergant/XBRLFiles"
"BennyThadikaran/eod2" -> "BennyThadikaran/NseIndiaApi"
"BennyThadikaran/eod2" -> "karthikramx/algorithmic-trading"
"QubitQuants/vectorbt_pro_tutorials" -> "AlgoTrading101/VectorBT-AlgoTrading101"
"QubitQuants/vectorbt_pro_tutorials" -> "Newtoniano/vectorbt_backtests"
"QubitQuants/vectorbt_pro_tutorials" -> "eervin123/tradingview-to-vectorbt"
"KittenCN/predict_Lottery_ticket" -> "KittenCN/predict_Lottery_ticket_pytorch"
"KittenCN/predict_Lottery_ticket" -> "zepen/predict_Lottery_ticket"
"KittenCN/predict_Lottery_ticket" -> "wushidiguo/hello-lottery"
"KittenCN/predict_Lottery_ticket" -> "chengstone/LotteryPredict"
"KittenCN/predict_Lottery_ticket" -> "oahzxd/lottoery"
"oanda/v20-python" -> "oanda/v20-python-samples"
"oanda/v20-python" -> "hootnot/oanda-api-v20"
"oanda/v20-python" -> "oanda/oandapy"
"oanda/v20-python" -> "hootnot/oandapyV20-examples"
"oanda/v20-python" -> "yhilpisch/tpqoa"
"oanda/v20-python" -> "PeterMalkin/oandapybot"
"oanda/v20-python" -> "anthonyng2/FX-Trading-with-Python-and-Oanda"
"oanda/v20-python" -> "oanda/py-api-streaming"
"ArturSepp/QuantInvestStrats" -> "ArturSepp/StochVolModels"
"ArturSepp/QuantInvestStrats" -> "ArturSepp/OptimalPortfolios"
"ArturSepp/QuantInvestStrats" -> "rolling-panda-san/notebooks"
"ArturSepp/QuantInvestStrats" -> "coding-kitties/investing-algorithm-framework"
"ArturSepp/QuantInvestStrats" -> "LechGrzelak/QuantFinanceBook"
"ArturSepp/QuantInvestStrats" -> "rgaveiga/optionlab"
"ArturSepp/QuantInvestStrats" -> "skfolio/skfolio"
"ArturSepp/QuantInvestStrats" -> "0xfdf/toraniko"
"ArturSepp/QuantInvestStrats" -> "hudson-and-thames/arbitragelab"
"ArturSepp/QuantInvestStrats" -> "emoen/Machine-Learning-for-Asset-Managers"
"ArturSepp/QuantInvestStrats" -> "KidQuant/Pairs-Trading-With-Python"
"ArturSepp/QuantInvestStrats" -> "jsmidt/QuantPy"
"ArturSepp/QuantInvestStrats" -> "fortitudo-tech/fortitudo.tech"
"ArturSepp/QuantInvestStrats" -> "vollib/vollib"
"ArturSepp/QuantInvestStrats" -> "quarkfin/qf-lib"
"FinHackCN/finhack" -> "Ckend/pythondict-quant" ["e"=1]
"wushidiguo/hello-lottery" -> "koala9527/lottery-uniapp"
"jimtin/how_to_build_a_metatrader5_trading_bot_expert_advisor" -> "Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" ["e"=1]
"wboayue/rust-ibapi" -> "sparkstartconsulting/IBKR-API-Rust"
"stefan-jansen/python-algorithms" -> "stefan-jansen/synthetic-data-for-finance"
"stefan-jansen/python-algorithms" -> "stefan-jansen/stock-analysis-engine"
"stefan-jansen/python-algorithms" -> "stefan-jansen/pyfolio-reloaded"
"hudson-and-thames/meta-labeling" -> "jo-cho/meta_labeling_simplified"
"hudson-and-thames/meta-labeling" -> "jo-cho/trading-rules-using-machine-learning"
"prabakar2610/TradingBooks" -> "pistolla/gnidart"
"quantgirluk/aleatory" -> "quantgirluk/Understanding-Quantitative-Finance"
"quantgirluk/aleatory" -> "quantgirluk/fanchart"
"quantgirluk/aleatory" -> "ArturSepp/StochVolModels"
"quantgirluk/aleatory" -> "dbrojas/optlib"
"quantgirluk/aleatory" -> "ArturSepp/QuantInvestStrats"
"quantgirluk/aleatory" -> "MarcosCarreira/DermanPapers"
"quantgirluk/aleatory" -> "milenavuletic/VolGAN"
"quantgirluk/aleatory" -> "quantgirluk/Yield-Curves-Visual"
"quantgirluk/aleatory" -> "ynouri/pysabr"
"quantgirluk/aleatory" -> "dedwards25/Python_Option_Pricing"
"devfinwiz/Dynamic-QR" -> "devfinwiz/ALAS"
"devfinwiz/Dynamic-QR" -> "devfinwiz/Kris-Kringle-Organizer"
"devfinwiz/Dynamic-QR" -> "devfinwiz/LeetCode-Feeder"
"giuse88/duka" -> "Leo4815162342/dukascopy-node" ["e"=1]
"giuse88/duka" -> "mhallsmoore/qsforex"
"giuse88/duka" -> "philipperemy/FX-1-Minute-Data" ["e"=1]
"giuse88/duka" -> "fxcm/FXCMTickData"
"giuse88/duka" -> "ninety47/dukascopy"
"giuse88/duka" -> "hootnot/oanda-api-v20"
"giuse88/duka" -> "adyzng/go-duka"
"giuse88/duka" -> "jonromero/forex_algotrading"
"giuse88/duka" -> "cuemacro/findatapy"
"giuse88/duka" -> "harveybc/gym-fx" ["e"=1]
"giuse88/duka" -> "darwinex/DarwinexLabs" ["e"=1]
"devfinwiz/Fin-Maestro-Web" -> "devfinwiz/Fin-Maestro-Kin"
"devfinwiz/Fin-Maestro-Web" -> "devfinwiz/Stock_Screeners_Raw"
"devfinwiz/Fin-Maestro-Web" -> "devfinwiz/ALAS"
"devfinwiz/Fin-Maestro-Web" -> "devfinwiz/Dynamic-QR"
"devfinwiz/Fin-Maestro-Web" -> "devfinwiz/LeetCode-Feeder"
"devfinwiz/Fin-Maestro-Web" -> "devfinwiz/Kris-Kringle-Organizer"
"devfinwiz/Fin-Maestro-Web" -> "devfinwiz/Python-Voice-Assistant-Virtual-Slave"
"zeta-zetra/code" -> "zeta-zetra/chart_patterns"
"zeta-zetra/code" -> "neurotrader888/TrendLineAutomation"
"NagarajuGunda/PyAlgoMate" -> "NagarajuGunda/NSEIndexOptionsData"
"NagarajuGunda/PyAlgoMate" -> "JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles"
"NagarajuGunda/PyAlgoMate" -> "madmay247/breeze-historical-options"
"NagarajuGunda/PyAlgoMate" -> "narenkram/steadfast-monorepo"
"NagarajuGunda/PyAlgoMate" -> "souvik131/trade-snippets"
"NagarajuGunda/PyAlgoMate" -> "yashrj25/Entirety-Codes"
"NagarajuGunda/PyAlgoMate" -> "imvinaypatil/kinetick"
"NagarajuGunda/PyAlgoMate" -> "Jsuresh47/Trading-Strategies"
"angel-one/smartapi-python" -> "dhan-oss/DhanHQ-py"
"angel-one/smartapi-python" -> "OpenApi-5p/py5paisa"
"EconLQ/TWS-orders-placement-via-Tradinview-webhooks" -> "PlusGenie/tradingview-webhooks-bot"
"farbodbahari/Business-Valuation-with-Discounted-Cash-Flow-In-Python" -> "halessi/DCF"
"tyrneh/options-implied-probability" -> "tradologics/AlgoTradingSummit"
"GithubRealFan/Ninja-Trader-8" -> "GithubRealFan/ABM-Compiler-Python"
"GithubRealFan/Ninja-Trader-8" -> "GithubRealFan/Simple-Projects-CUDA"
"GithubRealFan/Ninja-Trader-8" -> "GithubRealFan/PHP-Based-ChatGPT-API"
"ArturSepp/StochVolModels" -> "Dagalon/PyStochasticVolatility"
"ArturSepp/StochVolModels" -> "ArturSepp/OptimalPortfolios"
"ArturSepp/StochVolModels" -> "ArturSepp/QuantInvestStrats"
"Prem-ium/Auto-StockTrader" -> "NelsonDane/auto-rsa"
"aaguiar10/gflows" -> "Matteo-Ferrara/gex-tracker"
"polyaxon/haupt" -> "tgjeon/TensorFlow-Tutorials-for-Time-Series"
"polyaxon/haupt" -> "aqibsaeed/Multilabel-timeseries-classification-with-LSTM"
"polyaxon/haupt" -> "tencia/stocks_rnn"
"polyaxon/haupt" -> "RobRomijnders/LSTM_tsc"
"polyaxon/haupt" -> "CasiaFan/time_seires_prediction_using_lstm"
"polyaxon/haupt" -> "jgpavez/LSTM---Stock-prediction"
"polyaxon/haupt" -> "polyaxon/polyaxon-quick-start"
"polyaxon/haupt" -> "vents-io/vents"
"polyaxon/haupt" -> "polyaxon/charts"
"polyaxon/haupt" -> "polyaxon/hypertune"
"polyaxon/haupt" -> "polyaxon/cli"
"polyaxon/haupt" -> "lucasjinreal/LSTM_learn"
"polyaxon/haupt" -> "polyaxon/polyaxon-examples"
"polyaxon/haupt" -> "loliverhennigh/Convolutional-LSTM-in-Tensorflow" ["e"=1]
"polyaxon/haupt" -> "polyaxon/mloperator"
"Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies"
"Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading"
"Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python"
"Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS"
"Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/Alpha-Quant-Course"
"Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python"
"Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS"
"Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON"
"Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" -> "Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022"
"webull-inc/openapi-python-sdk" -> "webull-inc/openapi-java-sdk"
"jerokpradeep/pya3" -> "TradeViaPython/a3_aliceblue"
"ZachLiuGIS/stock_extractor" -> "econdb/inquisitor"
"ZachLiuGIS/stock_extractor" -> "quantmind/ccy"
"ZachLiuGIS/stock_extractor" -> "skillachie/finsymbols"
"Jsuresh47/Trading-Strategies" -> "JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles"
"neurotrader888/TVLIndicator" -> "neurotrader888/VSAIndicator"
"neurotrader888/TVLIndicator" -> "neurotrader888/PermutationEntropy"
"vikassharma545/APICostFree-Zerodha-Trade" -> "vikassharma545/Historical-Market-data-From-Zerodha"
"ozdemirozcelik/pairs-ibkr" -> "zhwang2001/Recurrent-Neural-Network-Trading-Bot"
"velikov-mihail/AssayingAnomalies" -> "velikov-mihail/AnomaliesPhDModule"
"mattheaphy/actxps" -> "actuarialopensource/pymort"
"mattheaphy/actxps" -> "JuliaActuary/ExperienceAnalysis.jl"
"AliHabibnia/Machine-Learning-from-Theory-to-Practice" -> "AliHabibnia/ECON_5314G_Big_Data_Economics"
"AliHabibnia/Machine-Learning-from-Theory-to-Practice" -> "AliHabibnia/CMDA_4984_Data_Science_for_Quantitative_Finance"
"DominikBritz/NinjaTrader-indicators-strategies" -> "trading-code/ninjatrader-freeorderflow"
"DominikBritz/NinjaTrader-indicators-strategies" -> "beckerben/NinjaTrader"
"DominikBritz/NinjaTrader-indicators-strategies" -> "MicroTrendsLtd/NinjaTrader8"
"DominikBritz/NinjaTrader-indicators-strategies" -> "OmidVHeravi/NinjaTraderTools"
"DominikBritz/NinjaTrader-indicators-strategies" -> "WaleeTheRobot/order-flow-bot"
"DominikBritz/NinjaTrader-indicators-strategies" -> "efitzkiwi/NT8SupplyDemandDTBot"
"DominikBritz/NinjaTrader-indicators-strategies" -> "GithubRealFan/Ninja-Trader-8"
"DominikBritz/NinjaTrader-indicators-strategies" -> "kodalli/NT8-PAT-Strategy"
"bhattbhavesh91/voice-assistant-whisper-chatgpt" -> "hackingthemarkets/chatgpt-api-whisper-api-voice-assistant"
"suzgunmirac/hupd" -> "TamerKhraisha/uspto-patent-data-parser"
"ML4ITS/TimeVQVAE" -> "ML4ITS/TimeVQVAE-AnomalyDetection"
"ML4ITS/TimeVQVAE" -> "YihaoAng/TSGBench"
"AliHabibnia/ECON_5314G_Big_Data_Economics" -> "AliHabibnia/Machine-Learning-from-Theory-to-Practice"
"hackingthemarkets/openai-whisper-voice-commands" -> "hackingthemarkets/qa-assistant-eleven-labs-voice-cloning"
"hackingthemarkets/openai-whisper-voice-commands" -> "JohnZolton/scribe"
"funginstitute/downloads" -> "funginstitute/disambiguator"
"2187Nick/thinkscript" -> "sudoshu/OptionsHacker"
"2187Nick/thinkscript" -> "2187Nick/tos-streamlit-dashboard"
"2187Nick/thinkscript" -> "tifoji/pyrtdc"
"2187Nick/thinkscript" -> "anvgun/Options_Analyzer"
"2187Nick/thinkscript" -> "Matteo-Ferrara/gex-tracker"
"quantgirluk/Understanding-Quantitative-Finance" -> "quantgirluk/fanchart"
"quantgirluk/Understanding-Quantitative-Finance" -> "quantgirluk/ICMM"
"Idirect-Tech/Breeze-Python-SDK" -> "Idirect-Tech/Breeze-Python-Examples"
"Idirect-Tech/Breeze-Python-SDK" -> "madmay247/breeze-historical-options"
"AliHabibnia/CMDA_4984_Data_Science_for_Quantitative_Finance" -> "AliHabibnia/ECON_5314G_Big_Data_Economics"
"AliHabibnia/CMDA_4984_Data_Science_for_Quantitative_Finance" -> "AliHabibnia/Machine-Learning-from-Theory-to-Practice"
"tuckerbalch/QSTK" -> "QuantSoftware/QuantSoftwareToolkit"
"ymh1989/SABR_local_vol" -> "ventureit/vanna-volga_option_price"
"Jackal08/QuantInsti-Final-Project-Statistical-Arbitrage" -> "Jackal08/financial-data-structures"
"KittenCN/predict_Lottery_ticket_pytorch" -> "KittenCN/predict_Lottery_ticket"
"instruritesh/ZStreamingQuote" -> "DarthRecca/AlgorithmicTrading"
"atreyuxtrading/atreyu-backtrader-api" -> "ultra1971/backtrader_ib_insync"
"Idirect-Tech/Breeze-Python-Examples" -> "Idirect-Tech/Breeze-Python-SDK"
"WISEPLAT/backtrader" -> "WISEPLAT/QuikPy"
"dhan-oss/DhanHQ-py" -> "Indian-Algorithmic-Trading-Community/DhanHQ-Ticker-py"
"dhan-oss/DhanHQ-py" -> "OpenApi-5p/py5paisa"
"oahzxd/lottoery" -> "Liang-yc/ssq"
"oahzxd/lottoery" -> "pengyuwang618/lottery"
"oahzxd/lottoery" -> "zepen/predict_Lottery_ticket"
"oahzxd/lottoery" -> "BEWINDOWEB/lotterygrabber"
"oahzxd/lottoery" -> "fight1990/Lottery"
"oahzxd/lottoery" -> "xwwxx/lottery-analysis"
"oahzxd/lottoery" -> "yinyayun/prediction"
"Tapanhaz/MiniScalper_UI" -> "narenkram/steadfast-app"
"fourbytes/ib_tws_rs" -> "rolandgg/rust_ib_api"
"AI4Finance-Foundation/FinGPT" -> "AI4Finance-Foundation/FinRL"
"AI4Finance-Foundation/FinGPT" -> "microsoft/qlib"
"AI4Finance-Foundation/FinGPT" -> "AI4Finance-Foundation/FinNLP"
"AI4Finance-Foundation/FinGPT" -> "AI4Finance-Foundation/FinRobot"
"AI4Finance-Foundation/FinGPT" -> "stefan-jansen/machine-learning-for-trading"
"AI4Finance-Foundation/FinGPT" -> "OpenBB-finance/OpenBB"
"AI4Finance-Foundation/FinGPT" -> "FoundationAgents/MetaGPT" ["e"=1]
"AI4Finance-Foundation/FinGPT" -> "wilsonfreitas/awesome-quant"
"AI4Finance-Foundation/FinGPT" -> "microsoft/autogen" ["e"=1]
"AI4Finance-Foundation/FinGPT" -> "run-llama/llama_index" ["e"=1]
"AI4Finance-Foundation/FinGPT" -> "firmai/financial-machine-learning"
"AI4Finance-Foundation/FinGPT" -> "AntonOsika/gpt-engineer" ["e"=1]
"AI4Finance-Foundation/FinGPT" -> "assafelovic/gpt-researcher" ["e"=1]
"AI4Finance-Foundation/FinGPT" -> "TransformerOptimus/SuperAGI" ["e"=1]
"AI4Finance-Foundation/FinGPT" -> "QuivrHQ/quivr" ["e"=1]
"cleitonleonel/pyquotex" -> "zagmi/qxbroker"
"quantopian/zipline" -> "mementum/backtrader"
"quantopian/zipline" -> "quantopian/pyfolio"
"quantopian/zipline" -> "gbeced/pyalgotrade"
"quantopian/zipline" -> "TA-Lib/ta-lib-python"
"quantopian/zipline" -> "vnpy/vnpy" ["e"=1]
"quantopian/zipline" -> "quantopian/alphalens"
"quantopian/zipline" -> "QuantConnect/Lean"
"quantopian/zipline" -> "ricequant/rqalpha" ["e"=1]
"quantopian/zipline" -> "wilsonfreitas/awesome-quant"
"quantopian/zipline" -> "microsoft/qlib"
"quantopian/zipline" -> "waditu/tushare" ["e"=1]
"quantopian/zipline" -> "yutiansut/QUANTAXIS" ["e"=1]
"quantopian/zipline" -> "mhallsmoore/qstrader"
"quantopian/zipline" -> "kernc/backtesting.py"
"quantopian/zipline" -> "lballabio/QuantLib"
"intro-stat-learning/ISLP_labs" -> "mfrdixon/ML_Finance_Codes" ["e"=1]
"mckinsey/vizro" -> "business-science/pytimetk" ["e"=1]
"mckinsey/vizro" -> "skfolio/skfolio" ["e"=1]
"mckinsey/vizro" -> "mfrdixon/ML_Finance_Codes" ["e"=1]
"mckinsey/vizro" -> "ranaroussi/quantstats" ["e"=1]
"bbfamily/abu" -> "quantopian/zipline" ["e"=1]
"bbfamily/abu" -> "mementum/backtrader" ["e"=1]
"ricequant/rqalpha" -> "quantopian/zipline" ["e"=1]
"ricequant/rqalpha" -> "gbeced/pyalgotrade" ["e"=1]
"ricequant/rqalpha" -> "quantopian/alphalens" ["e"=1]
"ricequant/rqalpha" -> "mementum/backtrader" ["e"=1]
"AileenNielsen/TimeSeriesAnalysisWithPython" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" ["e"=1]
"AileenNielsen/TimeSeriesAnalysisWithPython" -> "tgjeon/TensorFlow-Tutorials-for-Time-Series" ["e"=1]
"louisnw01/lightweight-charts-python" -> "TechfaneTechnologies/pytvlwcharts" ["e"=1]
"louisnw01/lightweight-charts-python" -> "highfestiva/finplot" ["e"=1]
"louisnw01/lightweight-charts-python" -> "twopirllc/pandas-ta" ["e"=1]
"louisnw01/lightweight-charts-python" -> "polakowo/vectorbt" ["e"=1]
"louisnw01/lightweight-charts-python" -> "ranaroussi/quantstats" ["e"=1]
"louisnw01/lightweight-charts-python" -> "kieran-mackle/AutoTrader" ["e"=1]
"louisnw01/lightweight-charts-python" -> "kernc/backtesting.py" ["e"=1]
"louisnw01/lightweight-charts-python" -> "ib-api-reloaded/ib_async" ["e"=1]
"alphanome-ai/sec-ai" -> "alphanome-ai/sec-parser"
"deepfence/ebpfguard" -> "deepfence/YaraHunter"
"deepfence/ebpfguard" -> "deepfence/FlowMeter"
"deepfence/ebpfguard" -> "deepfence/PacketStreamer"
"deepfence/ebpfguard" -> "deepfence/SecretScanner"
"deepfence/ebpfguard" -> "OpInCo-Community/support"
"deepfence/ebpfguard" -> "lockc-project/lockc" ["e"=1]
"deepfence/ebpfguard" -> "bpfman/bpfman" ["e"=1]
"beatzxbt/bybit-smm" -> "0xfdf/toraniko" ["e"=1]
"beatzxbt/bybit-smm" -> "hudson-and-thames/arbitragelab" ["e"=1]
"danpaquin/coinbasepro-python" -> "robinhood-unofficial/pyrh" ["e"=1]
"MichalOkon/imc_prosperity" -> "nicolassinott/IMC_Prosperity"
"MichalOkon/imc_prosperity" -> "BakerStreetPhantom/IMC-Prosperity-Trading-Challenge-2023"
"MichalOkon/imc_prosperity" -> "n-0/backtest-imc-prosperity-2023"
"MichalOkon/imc_prosperity" -> "jmerle/imc-prosperity-2-visualizer"
"nicolassinott/IMC_Prosperity" -> "MichalOkon/imc_prosperity"
"nicolassinott/IMC_Prosperity" -> "n-0/backtest-imc-prosperity-2023"
"nicolassinott/IMC_Prosperity" -> "jmerle/imc-prosperity-2-visualizer"
"n-0/backtest-imc-prosperity-2023" -> "nicolassinott/IMC_Prosperity"
"n-0/backtest-imc-prosperity-2023" -> "MichalOkon/imc_prosperity"
"n-0/backtest-imc-prosperity-2023" -> "jmerle/imc-prosperity-2-visualizer"
"n-0/backtest-imc-prosperity-2023" -> "BakerStreetPhantom/IMC-Prosperity-Trading-Challenge-2023"
"n-0/backtest-imc-prosperity-2023" -> "ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal"
"ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal" -> "jmerle/imc-prosperity-2"
"ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal" -> "ericcccsliu/imc-prosperity-2"
"ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal" -> "n-0/backtest-imc-prosperity-2023"
"ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal" -> "nicolassinott/IMC_Prosperity"
"ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal" -> "pe049395/IMC-Prosperity-2024"
"ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal" -> "MichalOkon/imc_prosperity"
"ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal" -> "jmerle/imc-prosperity-2-visualizer"
"ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal" -> "jmerle/imc-prosperity-2-backtester"
"ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal" -> "gabsens/IMC-Prosperity-2-Manual"
"peerchemist/finta" -> "twopirllc/pandas-ta"
"peerchemist/finta" -> "bukosabino/ta"
"peerchemist/finta" -> "ranaroussi/qtpylib"
"peerchemist/finta" -> "pmorissette/ffn"
"peerchemist/finta" -> "kylejusticemagnuson/pyti"
"peerchemist/finta" -> "cuemacro/finmarketpy"
"peerchemist/finta" -> "ranaroussi/quantstats"
"peerchemist/finta" -> "kernc/backtesting.py"
"peerchemist/finta" -> "cuemacro/findatapy"
"peerchemist/finta" -> "hudson-and-thames/mlfinlab"
"peerchemist/finta" -> "TA-Lib/ta-lib-python"
"peerchemist/finta" -> "pmorissette/bt"
"peerchemist/finta" -> "Crypto-toolbox/pandas-technical-indicators"
"peerchemist/finta" -> "matplotlib/mplfinance"
"peerchemist/finta" -> "robertmartin8/PyPortfolioOpt"
"zagmi/qxbroker" -> "cleitonleonel/pyquotex"
"zagmi/qxbroker" -> "ericpedra/quotexapi"
"BigBrotherTrade/trader" -> "paperswithbacktest/awesome-systematic-trading" ["e"=1]
"BigBrotherTrade/trader" -> "mementum/backtrader" ["e"=1]
"BigBrotherTrade/trader" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"BigBrotherTrade/trader" -> "microsoft/qlib" ["e"=1]
"cuemacro/findatapy" -> "cuemacro/finmarketpy"
"cuemacro/findatapy" -> "cuemacro/chartpy"
"cuemacro/findatapy" -> "domokane/FinancePy"
"cuemacro/findatapy" -> "ranaroussi/qtpylib"
"cuemacro/findatapy" -> "mcdallas/wallstreet"
"cuemacro/findatapy" -> "fmilthaler/FinQuant"
"cuemacro/findatapy" -> "pmorissette/ffn"
"cuemacro/findatapy" -> "hudson-and-thames/mlfinlab"
"cuemacro/findatapy" -> "jasonstrimpel/volatility-trading"
"cuemacro/findatapy" -> "robcarver17/pysystemtrade"
"cuemacro/findatapy" -> "quantopian/empyrical"
"cuemacro/findatapy" -> "letianzj/QuantResearch"
"cuemacro/findatapy" -> "enthought/pyql"
"cuemacro/findatapy" -> "dcajasn/Riskfolio-Lib"
"cuemacro/findatapy" -> "LastAncientOne/Stock_Analysis_For_Quant"
"cgohlke/talib-build" -> "TA-Lib/ta-lib" ["e"=1]
"cgohlke/talib-build" -> "TA-Lib/ta-lib-python" ["e"=1]
"cgohlke/talib-build" -> "edtechre/pybroker" ["e"=1]
"cgohlke/talib-build" -> "stefan-jansen/pyfolio-reloaded" ["e"=1]
"quantopian/alphalens" -> "quantopian/pyfolio"
"quantopian/alphalens" -> "quantopian/empyrical"
"quantopian/alphalens" -> "quantopian/zipline"
"quantopian/alphalens" -> "quantopian/research_public"
"quantopian/alphalens" -> "ranaroussi/quantstats"
"quantopian/alphalens" -> "ricequant/rqalpha" ["e"=1]
"quantopian/alphalens" -> "hudson-and-thames/mlfinlab"
"quantopian/alphalens" -> "pmorissette/bt"
"quantopian/alphalens" -> "robertmartin8/PyPortfolioOpt"
"quantopian/alphalens" -> "dcajasn/Riskfolio-Lib"
"quantopian/alphalens" -> "mhallsmoore/qstrader"
"quantopian/alphalens" -> "gbeced/pyalgotrade"
"quantopian/alphalens" -> "mementum/backtrader"
"quantopian/alphalens" -> "TA-Lib/ta-lib-python"
"quantopian/alphalens" -> "pmorissette/ffn"
"SimplyWallSt/Portfolio-Analysis-Model" -> "SimplyWallSt/Company-Analysis-Model"
"KittenCN/stock_prediction" -> "KittenCN/predict_Lottery_ticket_pytorch" ["e"=1]
"kimber-chen/Tensorflow-for-stock-prediction" -> "tencia/stocks_rnn"
"kimber-chen/Tensorflow-for-stock-prediction" -> "dhingratul/Stock-Price-Prediction"
"kimber-chen/Tensorflow-for-stock-prediction" -> "dzitkowskik/StockPredictionRNN"
"kimber-chen/Tensorflow-for-stock-prediction" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"kimber-chen/Tensorflow-for-stock-prediction" -> "llSourcell/How-to-Predict-Stock-Prices-Easily-Demo" ["e"=1]
"kimber-chen/Tensorflow-for-stock-prediction" -> "kh-kim/stock_market_reinforcement_learning" ["e"=1]
"kimber-chen/Tensorflow-for-stock-prediction" -> "Kulbear/stock-prediction"
"kimber-chen/Tensorflow-for-stock-prediction" -> "vietsDeng/Stock-Prediction"
"kimber-chen/Tensorflow-for-stock-prediction" -> "scorpionhiccup/StockPricePrediction"
"kimber-chen/Tensorflow-for-stock-prediction" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"kimber-chen/Tensorflow-for-stock-prediction" -> "jgpavez/LSTM---Stock-prediction"
"kimber-chen/Tensorflow-for-stock-prediction" -> "deependersingla/deep_trader" ["e"=1]
"kimber-chen/Tensorflow-for-stock-prediction" -> "etai83/lstm_stock_prediction"
"kimber-chen/Tensorflow-for-stock-prediction" -> "wzchen/stock_market_prediction"
"kimber-chen/Tensorflow-for-stock-prediction" -> "llSourcell/predicting_stock_prices" ["e"=1]
"rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading" ["e"=1]
"rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" -> "jamesmawm/High-Frequency-Trading-Model-with-IB" ["e"=1]
"rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" -> "letianzj/QuantResearch" ["e"=1]
"rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" -> "hudson-and-thames/mlfinlab" ["e"=1]
"rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" -> "ivopetiz/algotrading" ["e"=1]
"rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" -> "JerBouma/AlgorithmicTrading" ["e"=1]
"rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" -> "cbailes/awesome-deep-trading" ["e"=1]
"jealous/stockstats" -> "peerchemist/finta"
"jealous/stockstats" -> "kylejusticemagnuson/pyti"
"jealous/stockstats" -> "pmorissette/ffn"
"jealous/stockstats" -> "femtotrader/pandas_talib"
"jealous/stockstats" -> "TA-Lib/ta-lib-python"
"jealous/stockstats" -> "cuemacro/findatapy"
"jealous/stockstats" -> "dcajasn/Riskfolio-Lib"
"jealous/stockstats" -> "enzoampil/fastquant"
"jealous/stockstats" -> "michaelchu/optopsy"
"jealous/stockstats" -> "twopirllc/pandas-ta"
"jealous/stockstats" -> "LastAncientOne/Stock_Analysis_For_Quant"
"jealous/stockstats" -> "ematvey/pybacktest"
"jealous/stockstats" -> "pmorissette/bt"
"jealous/stockstats" -> "bukosabino/ta"
"jealous/stockstats" -> "mcdallas/wallstreet"
"quant-science/sunday-quant-scientist" -> "shashankvemuri/Finance"
"quant-science/sunday-quant-scientist" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"quant-science/sunday-quant-scientist" -> "zazhang/ep-chan-book-algo-trading"
"quant-science/sunday-quant-scientist" -> "chrisconlan/algorithmic-trading-with-python"
"quant-science/sunday-quant-scientist" -> "mfrdixon/ML_Finance_Codes"
"quant-science/sunday-quant-scientist" -> "business-science/pytimetk"
"quant-science/sunday-quant-scientist" -> "robcarver17/systematictradingexamples"
"quant-science/sunday-quant-scientist" -> "letianzj/QuantResearch"
"quant-science/sunday-quant-scientist" -> "MarcosCarreira/DermanPapers"
"quant-science/sunday-quant-scientist" -> "dedwards25/Python_Option_Pricing"
"quant-science/sunday-quant-scientist" -> "JerBouma/FinanceDatabase"
"quant-science/sunday-quant-scientist" -> "skfolio/skfolio"
"quant-science/sunday-quant-scientist" -> "dbrojas/optlib"
"quant-science/sunday-quant-scientist" -> "LongOnly/Quantitative-Notebooks"
"quant-science/sunday-quant-scientist" -> "coding-kitties/investing-algorithm-framework"
"ClementPerroud/Gym-Trading-Env" -> "TradeMaster-NTU/TradeMaster" ["e"=1]
"TA-Lib/ta-lib" -> "TA-Lib/ta-lib-python"
"TA-Lib/ta-lib" -> "TulipCharts/tulipindicators"
"TA-Lib/ta-lib" -> "twopirllc/pandas-ta"
"TA-Lib/ta-lib" -> "cgohlke/talib-build" ["e"=1]
"TA-Lib/ta-lib" -> "nardew/talipp"
"TA-Lib/ta-lib" -> "HuaRongSAO/talib-document" ["e"=1]
"TA-Lib/ta-lib" -> "stefan-jansen/zipline-reloaded"
"TA-Lib/ta-lib" -> "rburkholder/trade-frame" ["e"=1]
"TA-Lib/ta-lib" -> "greyblake/ta-rs" ["e"=1]
"TA-Lib/ta-lib" -> "trufanov-nok/ta-lib-rt"
"TA-Lib/ta-lib" -> "gbeced/basana"
"TA-Lib/ta-lib" -> "fpga2u/AXOrderBook" ["e"=1]
"TA-Lib/ta-lib" -> "lballabio/QuantLib"
"TA-Lib/ta-lib" -> "openctp/openctp" ["e"=1]
"TA-Lib/ta-lib" -> "ranaroussi/quantstats"
"0burak/imperial_hft" -> "0xfdf/toraniko" ["e"=1]
"ematvey/pybacktest" -> "panpanpandas/ultrafinance"
"ematvey/pybacktest" -> "pmorissette/bt"
"ematvey/pybacktest" -> "Emsu/prophet"
"ematvey/pybacktest" -> "llazzaro/analyzer"
"ematvey/pybacktest" -> "fja05680/pinkfish"
"ematvey/pybacktest" -> "femtotrader/pandas_talib"
"ematvey/pybacktest" -> "gbeced/pyalgotrade"
"ematvey/pybacktest" -> "ranaroussi/qtpylib"
"ematvey/pybacktest" -> "bpsmith/tia"
"ematvey/pybacktest" -> "benjaminmgross/visualize-wealth"
"ematvey/pybacktest" -> "cuemacro/finmarketpy"
"ematvey/pybacktest" -> "Yam-cn/pyalgotrade-cn" ["e"=1]
"ematvey/pybacktest" -> "constverum/Quantdom"
"ematvey/pybacktest" -> "pmorissette/ffn"
"ematvey/pybacktest" -> "sjev/trading-with-python"
"ryankennedyio/ib-docker" -> "francoisruty/fruty_trading-automation"
"ryankennedyio/ib-docker" -> "clifton/docker-ib-gateway"
"ryankennedyio/ib-docker" -> "mvberg/ib-gateway-docker"
"Rachnog/Deep-Trading" -> "Rachnog/Advanced-Deep-Trading" ["e"=1]
"Rachnog/Deep-Trading" -> "BlackArbsCEO/Adv_Fin_ML_Exercises" ["e"=1]
"Rachnog/Deep-Trading" -> "hudson-and-thames/mlfinlab" ["e"=1]
"Rachnog/Deep-Trading" -> "cbailes/awesome-deep-trading" ["e"=1]
"deependersingla/deep_trader" -> "achillesrasquinha/bulbea" ["e"=1]
"Barca0412/Introduction-to-Quantitative-Finance" -> "purvasingh96/AI-for-Trading" ["e"=1]
"anfederico/stocktalk" -> "anfederico/gemini" ["e"=1]
"anfederico/stocktalk" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" ["e"=1]
"anfederico/stocktalk" -> "cgoldberg/ystockquote" ["e"=1]
"anfederico/stocktalk" -> "achillesrasquinha/bulbea" ["e"=1]
"anfederico/stocktalk" -> "hongtaocai/googlefinance" ["e"=1]
"anfederico/stocktalk" -> "jasti/Stock-Predictor" ["e"=1]
"ranaroussi/qtpylib" -> "ranaroussi/quantstats"
"ranaroussi/qtpylib" -> "mhallsmoore/qstrader"
"ranaroussi/qtpylib" -> "cuemacro/finmarketpy"
"ranaroussi/qtpylib" -> "hudson-and-thames/mlfinlab"
"ranaroussi/qtpylib" -> "robcarver17/pysystemtrade"
"ranaroussi/qtpylib" -> "gbeced/pyalgotrade"
"ranaroussi/qtpylib" -> "ranaroussi/ezibpy"
"ranaroussi/qtpylib" -> "cuemacro/findatapy"
"ranaroussi/qtpylib" -> "peerchemist/finta"
"ranaroussi/qtpylib" -> "pmorissette/bt"
"ranaroussi/qtpylib" -> "erdewit/ib_insync"
"ranaroussi/qtpylib" -> "quantopian/pyfolio"
"ranaroussi/qtpylib" -> "EliteQuant/EliteQuant"
"ranaroussi/qtpylib" -> "ematvey/pybacktest"
"ranaroussi/qtpylib" -> "robertmartin8/PyPortfolioOpt"
"ranaroussi/ezibpy" -> "ranaroussi/qtpylib"
"ranaroussi/ezibpy" -> "ranaroussi/pystore"
"ranaroussi/ezibpy" -> "jamesmawm/IB-Trading-Models-And-Backtester"
"ranaroussi/ezibpy" -> "blampe/IbPy"
"ranaroussi/ezibpy" -> "erdewit/tws_async"
"ranaroussi/ezibpy" -> "Komnomnomnom/swigibpy"
"ranaroussi/ezibpy" -> "erdewit/ib_insync"
"ranaroussi/ezibpy" -> "sjev/trading-with-python"
"ranaroussi/ezibpy" -> "areed1192/interactive-broker-python-api"
"ranaroussi/ezibpy" -> "ib-controller/ib-controller"
"ranaroussi/ezibpy" -> "abbass2/pyqstrat"
"ranaroussi/ezibpy" -> "hackingthemarkets/tradingview-interactive-brokers"
"ranaroussi/ezibpy" -> "PythonForForex/Interactive-brokers-python-api-guide"
"ranaroussi/ezibpy" -> "Vincentho711/Interactive-Brokers-Trading-Bot"
"ranaroussi/ezibpy" -> "mvberg/ib-gateway-docker"
"popbo/alphas" -> "yli188/WorldQuant_alpha101_code" ["e"=1]
"cuemacro/chartpy" -> "cuemacro/findatapy"
"cuemacro/chartpy" -> "cuemacro/finmarketpy"
"cuemacro/chartpy" -> "cuemacro/tcapy"
"cuemacro/chartpy" -> "cuemacro/cufflinks"
"cuemacro/chartpy" -> "cuemacro/teaching"
"cuemacro/chartpy" -> "cuemacro/FinancePy"
"cuemacro/chartpy" -> "bpsmith/tia"
"cuemacro/chartpy" -> "rsheftel/pandas_market_calendars"
"cuemacro/chartpy" -> "man-group/arctic"
"cuemacro/chartpy" -> "ematvey/pybacktest"
"cuemacro/chartpy" -> "yhilpisch/dx"
"cuemacro/chartpy" -> "mhallsmoore/qsforex"
"cuemacro/chartpy" -> "ranaroussi/ezibpy"
"cuemacro/chartpy" -> "man-group/mdf" ["e"=1]
"cuemacro/chartpy" -> "thalesians/tsa"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "quant-science/sunday-quant-scientist"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "jo-cho/Technical_Analysis_and_Feature_Engineering"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "robcarver17/systematictradingexamples"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "PacktPublishing/Python-Algorithmic-Trading-Cookbook"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "MarcosCarreira/DermanPapers"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "zazhang/ep-chan-book-algo-trading"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "mfrdixon/ML_Finance_Codes"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "chrisconlan/algorithmic-trading-with-python"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "dedwards25/Python_Option_Pricing"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "quantra-go-algo/ml-trading-book"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "shashankvemuri/Finance"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "robcarver17/pysystemtrade_examples"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "coding-kitties/investing-algorithm-framework"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "stefan-jansen/zipline-reloaded"
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" -> "PacktPublishing/Hands-On-Financial-Trading-with-Python"
"RuchiTanmay/nselib" -> "aeron7/nsepython"
"anfederico/clairvoyant" -> "anfederico/gemini" ["e"=1]
"anfederico/clairvoyant" -> "achillesrasquinha/bulbea" ["e"=1]
"anfederico/clairvoyant" -> "cuemacro/finmarketpy" ["e"=1]
"anfederico/clairvoyant" -> "quantopian/pyfolio" ["e"=1]
"okeeffed/cheat-sheets" -> "stefan-jansen/python-algorithms" ["e"=1]
"tastytrade/tastytrade-api-js" -> "tastytrade/tastytrade-sdk-python"
"tastytrade/tastytrade-api-js" -> "tastyware/tastytrade"
"tastytrade/tastytrade-api-js" -> "peter-oroszvari/tastytrade-api"
"tastytrade/tastytrade-api-js" -> "LordKaT/tastytrade_api_thing"
"Melelery/c-binance-futures-quant" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"hootnot/oanda-api-v20" -> "hootnot/oandapyV20-examples"
"hootnot/oanda-api-v20" -> "oanda/v20-python-samples"
"hootnot/oanda-api-v20" -> "oanda/v20-python"
"hootnot/oanda-api-v20" -> "oanda/oandapy"
"hootnot/oanda-api-v20" -> "mhallsmoore/qsforex"
"hootnot/oanda-api-v20" -> "PeterMalkin/oandapybot"
"hootnot/oanda-api-v20" -> "jonromero/forex_algotrading"
"hootnot/oanda-api-v20" -> "fxcm/RestAPI"
"hootnot/oanda-api-v20" -> "yhilpisch/tpqoa"
"hootnot/oanda-api-v20" -> "giuse88/duka"
"hootnot/oanda-api-v20" -> "anthonyng2/FX-Trading-with-Python-and-Oanda"
"hootnot/oanda-api-v20" -> "happydasch/btoandav20"
"hootnot/oanda-api-v20" -> "hootnot/oanda-trading-environment"
"hootnot/oanda-api-v20" -> "ig-python/trading-ig"
"hootnot/oanda-api-v20" -> "bgwrites/Forex-Trader"
"buriburisuri/ebgan" -> "buriburisuri/timeseries_gan" ["e"=1]
"WISEPLAT/backtrader_binance" -> "lindomar-oliveira/backtrader-binance"
"WISEPLAT/backtrader_binance" -> "WISEPLAT/Learn-BackTrader" ["e"=1]
"WISEPLAT/backtrader_binance" -> "WISEPLAT/backtrader"
"WISEPLAT/backtrader_binance" -> "rodrigo-brito/backtrader-binance-bot"
"WISEPLAT/backtrader_binance" -> "Dave-Vallance/bt-ccxt-store"
"zonination/investing" -> "cuemacro/finmarketpy" ["e"=1]
"MicroPyramid/django-simple-forum" -> "MicroPyramid/django-simple-pagination"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/microurl"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/django-webpacker"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/django-email-gateway"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/django-web-profiler"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/docker-box"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/MicroSite"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/deploy-python"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/microstorage"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/Mongo-Slice"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/fetch-tweets"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/microsocial"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/django-seo"
"MicroPyramid/django-simple-forum" -> "MicroPyramid/python-validate"
"The-FinAI/PIXIU" -> "AI4Finance-Foundation/FinNLP" ["e"=1]
"Kotak-Neo/kotak-neo-api" -> "paramatrixtech/ksapi"
"Kotak-Neo/kotak-neo-api" -> "Shoonya-Dev/ShoonyaApi-py"
"Kotak-Neo/kotak-neo-api" -> "vinay-ram1999/AlgoTrade-API"
"matplotlib/mpl-finance" -> "ematvey/pybacktest"
"matplotlib/mpl-finance" -> "matplotlib/mplfinance"
"matplotlib/mpl-finance" -> "dysonance/Trendy"
"FinleyLi/MultiCharts-PowerLanguage" -> "handayu/MC-Fundament-Code"
"FinleyLi/MultiCharts-PowerLanguage" -> "handayu/IB-TWS-Multicharts-Trading"
"FinleyLi/MultiCharts-PowerLanguage" -> "mkjiau/MFLL"
"FinleyLi/MultiCharts-PowerLanguage" -> "brucelinker/EasyLanguage"
"FinleyLi/MultiCharts-PowerLanguage" -> "mkjiau/MultiCharts_Dll"
"FinleyLi/MultiCharts-PowerLanguage" -> "mtompkins/openAlgo"
"anurag-roy/kite-option-chain" -> "anurag-roy/shoonya-option-chain"
"anurag-roy/kite-option-chain" -> "ekanshsinghal/indian-stock-market"
"ldt9/PyOptionTrader" -> "Jake0303/RiskyOptionsBot"
"n1nj4z33/iqoptionbot" -> "omarmagh/iq_option_BOT"
"n1nj4z33/iqoptionbot" -> "AlanForester/IQOption-Bot-Trade-System"
"neurotrader888/TechnicalAnalysisAutomation" -> "neurotrader888/TrendLineAutomation"
"neurotrader888/TechnicalAnalysisAutomation" -> "neurotrader888/TrendlineBreakoutMetaLabel"
"neurotrader888/TechnicalAnalysisAutomation" -> "keithorange/PatternPy"
"neurotrader888/TechnicalAnalysisAutomation" -> "neurotrader888/RSI-PCA"
"neurotrader888/TechnicalAnalysisAutomation" -> "neurotrader888/market-structure"
"neurotrader888/TechnicalAnalysisAutomation" -> "neurotrader888/VolatilityHawkes"
"neurotrader888/TechnicalAnalysisAutomation" -> "zeta-zetra/code"
"neurotrader888/TechnicalAnalysisAutomation" -> "neurotrader888/PermutationEntropy"
"neurotrader888/TechnicalAnalysisAutomation" -> "neurotrader888/TVLIndicator"
"neurotrader888/TechnicalAnalysisAutomation" -> "neurotrader888/TimeSeriesReversibility"
"neurotrader888/TechnicalAnalysisAutomation" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"neurotrader888/TechnicalAnalysisAutomation" -> "white07S/TradingPatternScanner"
"neurotrader888/TechnicalAnalysisAutomation" -> "neurotrader888/IntramarketDifference"
"neurotrader888/TechnicalAnalysisAutomation" -> "neurotrader888/TimeSeriesVisibilityGraphs"
"neurotrader888/TechnicalAnalysisAutomation" -> "BennyThadikaran/stock-pattern"
"gbeced/basana" -> "nardew/talipp"
"gbeced/basana" -> "gbeced/pyalgotrade"
"gbeced/basana" -> "AsyncAlgoTrading/aat"
"gbeced/basana" -> "edtechre/pybroker"
"gbeced/basana" -> "letianzj/quanttrader"
"gbeced/basana" -> "stefan-jansen/zipline-reloaded"
"gbeced/basana" -> "nkaz001/hftbacktest" ["e"=1]
"gbeced/basana" -> "coding-kitties/investing-algorithm-framework"
"gbeced/basana" -> "kieran-mackle/AutoTrader"
"gbeced/basana" -> "pmorissette/bt"
"gbeced/basana" -> "beatzxbt/bybit-smm" ["e"=1]
"gbeced/basana" -> "wangzhe3224/awesome-systematic-trading"
"gbeced/basana" -> "barter-rs/barter-rs" ["e"=1]
"gbeced/basana" -> "amor71/LiuAlgoTrader"
"gbeced/basana" -> "quarkfin/qf-lib"
"alphanome-ai/sec-parser" -> "alphanome-ai/sec-ai"
"alphanome-ai/sec-parser" -> "Elijas/sec-downloader"
"alphanome-ai/sec-parser" -> "john-friedman/SEC-Parsers"
"alphanome-ai/sec-parser" -> "john-friedman/datamule-python"
"alphanome-ai/sec-parser" -> "rsljr/edgarParser"
"alphanome-ai/sec-parser" -> "jadchaar/sec-edgar-api"
"LordKaT/tastytrade_api_thing" -> "peter-oroszvari/tastytrade-api"
"LordKaT/tastytrade_api_thing" -> "tastyware/tastytrade"
"joshyattridge/smart-money-concepts" -> "psemdel/py-trading-bot"
"joshyattridge/smart-money-concepts" -> "keithorange/PatternPy"
"joshyattridge/smart-money-concepts" -> "crypto-axis/SMC-Algo-Trading"
"joshyattridge/smart-money-concepts" -> "rnikitin/QuantGPT"
"joshyattridge/smart-money-concepts" -> "neurotrader888/TechnicalAnalysisAutomation"
"joshyattridge/smart-money-concepts" -> "rabichawila/smart-money-py"
"joshyattridge/smart-money-concepts" -> "day0market/support_resistance"
"joshyattridge/smart-money-concepts" -> "freqtrade/technical" ["e"=1]
"joshyattridge/smart-money-concepts" -> "zeta-zetra/code"
"joshyattridge/smart-money-concepts" -> "nardew/talipp"
"joshyattridge/smart-money-concepts" -> "vlex05/SMC-Algo-Trading"
"joshyattridge/smart-money-concepts" -> "TheSnowGuru/PyTrader-python-mt4-mt5-trading-api-connector-drag-n-drop" ["e"=1]
"joshyattridge/smart-money-concepts" -> "louisnw01/lightweight-charts-python" ["e"=1]
"joshyattridge/smart-money-concepts" -> "QubitQuants/vectorbt_pro_tutorials"
"joshyattridge/smart-money-concepts" -> "nkaz001/hftbacktest" ["e"=1]
"neurotrader888/VolatilityHawkes" -> "neurotrader888/RSI-PCA"
"neurotrader888/VolatilityHawkes" -> "neurotrader888/PermutationEntropy"
"neurotrader888/VolatilityHawkes" -> "neurotrader888/TVLIndicator"
"neurotrader888/VolatilityHawkes" -> "neurotrader888/TimeSeriesReversibility"
"neurotrader888/VolatilityHawkes" -> "neurotrader888/TimeSeriesVisibilityGraphs"
"neurotrader888/VolatilityHawkes" -> "neurotrader888/VSAIndicator"
"neurotrader888/VolatilityHawkes" -> "neurotrader888/TradeDependenceRunsTest"
"funginstitute/patentprocessor" -> "funginstitute/downloads"
"funginstitute/patentprocessor" -> "funginstitute/disambiguator"
"funginstitute/patentprocessor" -> "iamlemec/fastpat"
"funginstitute/patentprocessor" -> "patentnetwork/CPP_Disambiguation"
"rburkholder/trade-frame" -> "AnthonyBradford/optionmatrix" ["e"=1]
"rburkholder/trade-frame" -> "jasonstrimpel/volatility-trading" ["e"=1]
"rburkholder/trade-frame" -> "AsyncAlgoTrading/aat" ["e"=1]
"lequant40/portfolio_analytics_js" -> "lequant40/portfolio_allocation_js"
"gnzsnz/ib-gateway-docker" -> "UnusualAlpha/ib-gateway-docker"
"gnzsnz/ib-gateway-docker" -> "extrange/ibkr-docker"
"gnzsnz/ib-gateway-docker" -> "quantbelt/jupyter-quant"
"gnzsnz/ib-gateway-docker" -> "ib-api-reloaded/ib_async"
"gnzsnz/ib-gateway-docker" -> "Voyz/ibeam"
"gnzsnz/ib-gateway-docker" -> "IbcAlpha/IBC"
"gnzsnz/ib-gateway-docker" -> "Voyz/ibind"
"gnzsnz/ib-gateway-docker" -> "mattsta/ib_insync"
"gnzsnz/ib-gateway-docker" -> "manhinhang/ib-gateway-docker"
"gnzsnz/ib-gateway-docker" -> "stoqey/ib"
"gnzsnz/ib-gateway-docker" -> "quantbelt/ib_fundamental"
"gnzsnz/ib-gateway-docker" -> "mattsta/icli"
"gnzsnz/ib-gateway-docker" -> "Lumiwealth/quantstats_lumi"
"gnzsnz/ib-gateway-docker" -> "erdewit/ib_insync"
"gnzsnz/ib-gateway-docker" -> "wboayue/rust-ibapi"
"davecliff/BristolStockExchange" -> "haozhangphd/QuantLib-noBoost" ["e"=1]
"AIM-IT4/QuantitativeDerivativeModels" -> "AIM-IT4/StochasticModelsAssetPricing"
"AIM-IT4/QuantitativeDerivativeModels" -> "nburgessx/AlgoTrading"
"quantbelt/jupyter-quant" -> "gnzsnz/ib-gateway-docker"
"quantbelt/jupyter-quant" -> "gnzsnz/jupyter-quant"
"quantbelt/jupyter-quant" -> "quantbelt/ib_fundamental"
"quantbelt/jupyter-quant" -> "KVignesh122/AssetNewsSentimentAnalyzer"
"jeffrey-liang/quantitative" -> "quantmind/dynts"
"jeffrey-liang/quantitative" -> "llazzaro/analyzer"
"rgaveiga/optionlab" -> "ArturSepp/QuantInvestStrats"
"rgaveiga/optionlab" -> "mcf-long-short/ibkr-options-volatility-trading"
"rgaveiga/optionlab" -> "michaelchu/optopsy"
"rgaveiga/optionlab" -> "quantbelt/jupyter-quant"
"rgaveiga/optionlab" -> "sirnfs/OptionSuite"
"rgaveiga/optionlab" -> "letianzj/quanttrader"
"rgaveiga/optionlab" -> "rolling-panda-san/notebooks"
"rgaveiga/optionlab" -> "coding-kitties/investing-algorithm-framework"
"rgaveiga/optionlab" -> "vollib/vollib"
"rgaveiga/optionlab" -> "Options-Visualizer/Options-Visualizer.github.io"
"rgaveiga/optionlab" -> "jasonstrimpel/volatility-trading"
"rgaveiga/optionlab" -> "AnthonyBradford/optionmatrix"
"rgaveiga/optionlab" -> "hashABCD/opstrat"
"rgaveiga/optionlab" -> "PyPatel/Options-Trading-Strategies-in-Python"
"rgaveiga/optionlab" -> "TechfaneTechnologies/QtsApp"
"Vaibhav/Stock-Analysis" -> "timestocome/Test-stock-prediction-algorithms"
"Vaibhav/Stock-Analysis" -> "ltnguyen14/Quant_stock"
"Vaibhav/Stock-Analysis" -> "arkochhar/Technical-Indicators"
"Vaibhav/Stock-Analysis" -> "doncat99/StockRecommendSystem"
"Vaibhav/Stock-Analysis" -> "LastAncientOne/Stock_Analysis_For_Quant"
"Vaibhav/Stock-Analysis" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"Vaibhav/Stock-Analysis" -> "boyac/pyOptionPricing"
"Vaibhav/Stock-Analysis" -> "kennedyCzar/STOCK-RETURN-PREDICTION-USING-KNN-SVM-GUASSIAN-PROCESS-ADABOOST-TREE-REGRESSION-AND-QDA"
"Vaibhav/Stock-Analysis" -> "alvarobartt/trendet"
"Vaibhav/Stock-Analysis" -> "ChillarAnand/stocktrends"
"Vaibhav/Stock-Analysis" -> "venky14/Stock-Market-Analysis-and-Prediction"
"Vaibhav/Stock-Analysis" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"Vaibhav/Stock-Analysis" -> "LastAncientOne/SimpleStockAnalysisPython"
"Vaibhav/Stock-Analysis" -> "Finance-Hub/FinanceHub"
"Vaibhav/Stock-Analysis" -> "stefmolin/stock-analysis"
"MicroPyramid/django-mfa" -> "MicroPyramid/django-web-profiler"
"MicroPyramid/django-mfa" -> "MicroPyramid/microurl"
"MicroPyramid/django-mfa" -> "MicroPyramid/django-email-gateway"
"MicroPyramid/django-mfa" -> "MicroPyramid/django-webpacker"
"MicroPyramid/django-mfa" -> "MicroPyramid/django-simple-pagination"
"MicroPyramid/django-mfa" -> "MicroPyramid/docker-box"
"MicroPyramid/django-mfa" -> "MicroPyramid/django-simple-forum"
"MicroPyramid/django-mfa" -> "MicroPyramid/deploy-python"
"MicroPyramid/django-mfa" -> "MicroPyramid/MicroSite"
"MicroPyramid/django-mfa" -> "MicroPyramid/microstorage"
"MicroPyramid/django-mfa" -> "MicroPyramid/Mongo-Slice"
"MicroPyramid/django-mfa" -> "MicroPyramid/RaspIce"
"MicroPyramid/django-mfa" -> "MicroPyramid/fetch-tweets"
"MicroPyramid/django-mfa" -> "MicroPyramid/microsocial"
"keithorange/PatternPy" -> "BennyThadikaran/stock-pattern"
"keithorange/PatternPy" -> "white07S/TradingPatternScanner"
"keithorange/PatternPy" -> "zeta-zetra/chart_patterns"
"keithorange/PatternPy" -> "neurotrader888/TechnicalAnalysisAutomation"
"keithorange/PatternPy" -> "zeta-zetra/code"
"keithorange/PatternPy" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"keithorange/PatternPy" -> "joshyattridge/smart-money-concepts"
"hackingthemarkets/qa-assistant-eleven-labs-voice-cloning" -> "hackingthemarkets/chatgpt-api-whisper-api-voice-assistant"
"hackingthemarkets/qa-assistant-eleven-labs-voice-cloning" -> "hackingthemarkets/openai-whisper-voice-commands"
"neurotrader888/TrendLineAutomation" -> "neurotrader888/TrendlineBreakoutMetaLabel"
"neurotrader888/TrendLineAutomation" -> "neurotrader888/TechnicalAnalysisAutomation"
"neurotrader888/TrendLineAutomation" -> "neurotrader888/RSI-PCA"
"neurotrader888/TrendLineAutomation" -> "neurotrader888/TVLIndicator"
"neurotrader888/TrendLineAutomation" -> "zeta-zetra/code"
"neurotrader888/TrendLineAutomation" -> "ednunezg/pytrendline"
"neurotrader888/TrendLineAutomation" -> "neurotrader888/PermutationEntropy"
"neurotrader888/TrendLineAutomation" -> "neurotrader888/VolatilityHawkes"
"neurotrader888/TrendLineAutomation" -> "neurotrader888/VSAIndicator"
"neurotrader888/TrendLineAutomation" -> "neurotrader888/TimeSeriesReversibility"
"neurotrader888/TrendLineAutomation" -> "white07S/TradingPatternScanner"
"pkjmesra/PKScreener" -> "pranjal-joshi/Screeni-py"
"pkjmesra/PKScreener" -> "deshwalmahesh/NSE-Stock-Scanner"
"pkjmesra/PKScreener" -> "aeron7/nsepython"
"pkjmesra/PKScreener" -> "marketcalls/openalgo"
"pkjmesra/PKScreener" -> "pkjmesra/PKNSETools"
"pkjmesra/PKScreener" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"pkjmesra/PKScreener" -> "BennyThadikaran/eod2"
"pkjmesra/PKScreener" -> "jugaad-py/jugaad-data"
"pkjmesra/PKScreener" -> "TechfaneTechnologies/QtsApp"
"pkjmesra/PKScreener" -> "BennyThadikaran/NseIndiaApi"
"pkjmesra/PKScreener" -> "NayakwadiS/mftool"
"pkjmesra/PKScreener" -> "debaonline4u/NSE-Data"
"murtazayusuf/OrderflowChart" -> "tysonwu/stack-orderflow"
"murtazayusuf/OrderflowChart" -> "AndreaFerrante/Orderflow"
"murtazayusuf/OrderflowChart" -> "txu2014/binance_orderflow"
"murtazayusuf/OrderflowChart" -> "gbzenobi/CSharp-NT8-OrderFlowKit"
"Ameobea/tickgrinder" -> "AsyncAlgoTrading/aat" ["e"=1]
"zerodha/kiteconnectjs" -> "zerodha/javakiteconnect"
"zerodha/kiteconnectjs" -> "zerodha/gokiteconnect"
"zerodha/kiteconnectjs" -> "zerodha/pykiteconnect"
"zerodha/kiteconnectjs" -> "zerodha/dotnetkiteconnect"
"zerodha/kiteconnectjs" -> "sreenivasdoosa/sdoosa-algo-trade-app"
"trading-code/ninjatrader-freeorderflow" -> "DominikBritz/NinjaTrader-indicators-strategies"
"trading-code/ninjatrader-freeorderflow" -> "GithubRealFan/Ninja-Trader-8"
"trading-code/ninjatrader-freeorderflow" -> "twdsje/Ninjatrader-scripts"
"trading-code/ninjatrader-freeorderflow" -> "MicroTrendsLtd/NinjaTrader8"
"trading-code/ninjatrader-freeorderflow" -> "michelpmcdonald/Ninjatrader"
"trading-code/ninjatrader-freeorderflow" -> "WaleeTheRobot/order-flow-bot"
"trading-code/ninjatrader-freeorderflow" -> "efitzkiwi/NT8SupplyDemandDTBot"
"trading-code/ninjatrader-freeorderflow" -> "kodalli/NT8-PAT-Strategy"
"trading-code/ninjatrader-freeorderflow" -> "gbzenobi/CSharp-NT8-OrderFlowKit"
"trading-code/ninjatrader-freeorderflow" -> "rpraka/ChartATM"
"theclai/ForexEA" -> "tanvird3/TradingRobot"
"kacperadach/ichimoku_screener" -> "kumotrader/ichimoku-crypto"
"hackingthemarkets/chatgpt-api-whisper-api-voice-assistant" -> "hackingthemarkets/qa-assistant-eleven-labs-voice-cloning"
"hackingthemarkets/chatgpt-api-whisper-api-voice-assistant" -> "hackingthemarkets/openai-whisper-voice-commands"
"hackingthemarkets/chatgpt-api-whisper-api-voice-assistant" -> "bhattbhavesh91/voice-assistant-whisper-chatgpt"
"hackingthemarkets/chatgpt-api-whisper-api-voice-assistant" -> "hackingthemarkets/financial-news-llama-index"
"hackingthemarkets/chatgpt-api-whisper-api-voice-assistant" -> "hackingthemarkets/interactive-brokers-web-api"
"hackingthemarkets/chatgpt-api-whisper-api-voice-assistant" -> "jakecyr/chatgpt-voice-assistant" ["e"=1]
"hackingthemarkets/chatgpt-api-whisper-api-voice-assistant" -> "DonGuillotine/chatGPT_whisper_AI_voice_assistant"
"PlusGenie/tbot-tradingboat" -> "PlusGenie/ib-gateway-docker"
"PlusGenie/tbot-tradingboat" -> "PlusGenie/tradingview-webhooks-bot"
"PlusGenie/tbot-tradingboat" -> "hackingthemarkets/tradingview-interactive-brokers"
"PlusGenie/tradingview-webhooks-bot" -> "PlusGenie/ib-gateway-docker"
"AIM-IT4/StochasticModelsAssetPricing" -> "AIM-IT4/Python-For-Quants"
"buriburisuri/supervised_infogan" -> "buriburisuri/timeseries_gan" ["e"=1]
"clinicalml/cfrnet" -> "vanderschaarlab/mlforhealthlabpub" ["e"=1]
"buriburisuri/sugartensor" -> "buriburisuri/timeseries_gan" ["e"=1]
"nburgessx/AlgoTrading" -> "nburgessx/QuantResearch"
"nburgessx/AlgoTrading" -> "nburgessx/OxfordMBA"
"nburgessx/AlgoTrading" -> "nburgessx/Papers"
"nburgessx/AlgoTrading" -> "AIM-IT4/QuantitativeDerivativeModels"
"RichardS0268/Autoencoder-Asset-Pricing-Models" -> "dkyol/Asset-Pricing-Model"
"RichardS0268/Autoencoder-Asset-Pricing-Models" -> "ZhuZhouFan/CQVAE"
"quantiacs-legacy/quantiacs-python" -> "quantiacs-legacy/python-sample-strategies"
"quantiacs-legacy/quantiacs-python" -> "quantiacs-legacy/Trendfollowing-Sample-Strategy"
"quantiacs-legacy/quantiacs-python" -> "jsisaacs/QuantStrategies"
"CorvusCodex/LotteryAi" -> "KN4KNG/LotteryNumberPredictor"
"CasiaFan/time_seires_prediction_using_lstm" -> "jgpavez/LSTM---Stock-prediction"
"CasiaFan/time_seires_prediction_using_lstm" -> "polyaxon/haupt"
"CasiaFan/time_seires_prediction_using_lstm" -> "yifan-guo-cwru/Time-Series-Prediction-with-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras"
"CasiaFan/time_seires_prediction_using_lstm" -> "PatientEz/Multidimensional-time-series-prediction-"
"CasiaFan/time_seires_prediction_using_lstm" -> "RobRomijnders/LSTM_tsc"
"CasiaFan/time_seires_prediction_using_lstm" -> "lucasjinreal/LSTM_learn"
"AliHabibnia/Algorithmic_Trading_with_Python" -> "AliHabibnia/CMDA_4984_Data_Science_for_Quantitative_Finance"
"AliHabibnia/Algorithmic_Trading_with_Python" -> "PFund-Software-Ltd/pytrade.org"
"AliHabibnia/Algorithmic_Trading_with_Python" -> "coding-kitties/investing-algorithm-framework"
"AliHabibnia/Algorithmic_Trading_with_Python" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"jasti/Stock-Predictor" -> "wzchen/stock_market_prediction"
"jasti/Stock-Predictor" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"jasti/Stock-Predictor" -> "FraPochetti/StocksProject"
"jasti/Stock-Predictor" -> "xiaohan2012/twitter-sent-dnn" ["e"=1]
"jasti/Stock-Predictor" -> "anfederico/stockeye" ["e"=1]
"jasti/Stock-Predictor" -> "narasimhaprasad/StockPy"
"jasti/Stock-Predictor" -> "scoofy/wxStocks"
"jasti/Stock-Predictor" -> "giladbi/algorithmic-trading" ["e"=1]
"jasti/Stock-Predictor" -> "hamiltonkibbe/stocks"
"jasti/Stock-Predictor" -> "intuition-io/intuition"
"jasti/Stock-Predictor" -> "gurch101/StockScraper"
"jasti/Stock-Predictor" -> "uclatommy/tweetfeels" ["e"=1]
"jasti/Stock-Predictor" -> "DMTSource/daily-stock-forecast"
"jasti/Stock-Predictor" -> "jakemmarsh/neural-network-stock-predictor"
"jasti/Stock-Predictor" -> "mdengler/stockquote"
"lingyixu/Quant-Finance-With-Python-Code" -> "JoaoJungblut/QuantFinanceTraining"
"attack68/rateslib" -> "attack68/book_irds3"
"attack68/rateslib" -> "nburgessx/SwapsBook"
"attack68/rateslib" -> "ArturSepp/StochVolModels"
"attack68/rateslib" -> "OpenSourceRisk/Engine"
"attack68/rateslib" -> "jkirkby3/PROJ_Option_Pricing_Matlab"
"oanda/py-api-trading" -> "oanda/py-api-streaming"
"neurotrader888/TrendlineBreakoutMetaLabel" -> "neurotrader888/TimeSeriesReversibility"
"neurotrader888/TrendlineBreakoutMetaLabel" -> "neurotrader888/VSAIndicator"
"neurotrader888/TrendlineBreakoutMetaLabel" -> "neurotrader888/RSI-PCA"
"neurotrader888/TrendlineBreakoutMetaLabel" -> "neurotrader888/TimeSeriesVisibilityGraphs"
"neurotrader888/TrendlineBreakoutMetaLabel" -> "neurotrader888/TrendLineAutomation"
"neurotrader888/TrendlineBreakoutMetaLabel" -> "neurotrader888/TradeDependenceRunsTest"
"neurotrader888/TrendlineBreakoutMetaLabel" -> "neurotrader888/TVLIndicator"
"neurotrader888/TrendlineBreakoutMetaLabel" -> "neurotrader888/VolatilityHawkes"
"neurotrader888/TrendlineBreakoutMetaLabel" -> "neurotrader888/PermutationEntropy"
"aeron7/nifty-banknifty-intraday-data" -> "debaonline4u/NSE-Data"
"briansrls/Robinhood-for-Google-Finance" -> "joshfraser/robinhood-to-csv"
"esvhd/pypbo" -> "mrbcuda/pbo"
"esvhd/pypbo" -> "rubenbriones/Probabilistic-Sharpe-Ratio"
"neurotrader888/RSI-PCA" -> "neurotrader888/VSAIndicator"
"neurotrader888/RSI-PCA" -> "neurotrader888/TVLIndicator"
"neurotrader888/RSI-PCA" -> "neurotrader888/VolatilityHawkes"
"neurotrader888/RSI-PCA" -> "neurotrader888/TimeSeriesVisibilityGraphs"
"neurotrader888/RSI-PCA" -> "neurotrader888/TimeSeriesReversibility"
"neurotrader888/RSI-PCA" -> "neurotrader888/TradeDependenceRunsTest"
"neurotrader888/RSI-PCA" -> "neurotrader888/PermutationEntropy"
"xushanthu-2014/imc_prosperity_trading_bot" -> "BakerStreetPhantom/IMC-Prosperity-Trading-Challenge-2023"
"NagarajuGunda/NSEIndexOptionsData" -> "NagarajuGunda/PyAlgoMate"
"hackingthemarkets/financial-news-llama-index" -> "hackingthemarkets/openai-whisper-voice-commands"
"hackingthemarkets/financial-news-llama-index" -> "hackingthemarkets/qa-assistant-eleven-labs-voice-cloning"
"thalesians/pythalesians" -> "benjaminmgross/visualize-wealth"
"thalesians/pythalesians" -> "rochars/trade"
"neurotrader888/PermutationEntropy" -> "neurotrader888/TVLIndicator"
"JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles" -> "JagadeeshBoyidi/Live-PNL-PLot"
"JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles" -> "xcode88/fno-pre-req"
"JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles" -> "RustAlgo/920_Straddle"
"JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles" -> "NagarajuGunda/PyAlgoMate"
"maread99/market_analy" -> "maread99/market_prices"
"buriburisuri/timeseries_gan" -> "ratschlab/RGAN"
"buriburisuri/timeseries_gan" -> "gioramponi/GAN_Time_Series"
"buriburisuri/timeseries_gan" -> "numancelik34/TimeSeries-GAN"
"buriburisuri/timeseries_gan" -> "buriburisuri/supervised_infogan" ["e"=1]
"buriburisuri/timeseries_gan" -> "jeanjerome/semisupervised_timeseries_infogan"
"buriburisuri/timeseries_gan" -> "buriburisuri/ebgan" ["e"=1]
"buriburisuri/timeseries_gan" -> "proceduralia/pytorch-GAN-timeseries"
"buriburisuri/timeseries_gan" -> "SongDark/timeseries_infogan"
"buriburisuri/timeseries_gan" -> "buriburisuri/sugartensor" ["e"=1]
"buriburisuri/timeseries_gan" -> "starhou/One-dimensional-GAN"
"buriburisuri/timeseries_gan" -> "buriburisuri/ac-gan" ["e"=1]
"buriburisuri/timeseries_gan" -> "StoicGilgamesh/LSTM-GAN-"
"buriburisuri/timeseries_gan" -> "jsikyoon/SequentialData-GAN"
"Quantreo/Alpha-Quant-Course" -> "fortitudo-tech/pcrm-book"
"jmerle/imc-prosperity-visualizer" -> "jmerle/imc-prosperity-2-visualizer"
"gurch101/StockScraper" -> "cttn/Stockex"
"Invest-In-a-Tech/Machine-Learning-ES-Emini-Futures" -> "Invest-In-a-Tech/Deep-Reinforcement-Learning-DayTradingAgent"
"Indian-Algorithmic-Trading-Community/PythonTraderExcelTradeTerminal" -> "Tapanhaz/Shoonya_OptionChainStreamer"
"Indian-Algorithmic-Trading-Community/PythonTraderExcelTradeTerminal" -> "Indian-Algorithmic-Trading-Community/Zerodha"
"tastytrade/tastytrade-sdk-python" -> "tastyware/tastytrade"
"tastytrade/tastytrade-sdk-python" -> "tastyware/tastytrade-cli"
"tastytrade/tastytrade-sdk-python" -> "peter-oroszvari/tastytrade-api"
"tastytrade/tastytrade-sdk-python" -> "tastytrade/tastytrade-api-js"
"volkovacodes/Block_Codes" -> "volkovacodes/IPO-Review-Chapter"
"GithubRealFan/HairColorChange" -> "GithubRealFan/ABM-Compiler-Python"
"GithubRealFan/HairColorChange" -> "GithubRealFan/Simple-Projects-CUDA"
"GithubRealFan/HairColorChange" -> "GithubRealFan/PHP-Based-ChatGPT-API"
"GithubRealFan/HairColorChange" -> "GithubRealFan/Ninja-Trader-8"
"peter-oroszvari/tastytrade-api" -> "LordKaT/tastytrade_api_thing"
"peter-oroszvari/tastytrade-api" -> "tastytrade/tastytrade-sdk-python"
"BakerStreetPhantom/IMC-Prosperity-Trading-Challenge-2023" -> "xushanthu-2014/imc_prosperity_trading_bot"
"GithubRealFan/PHP-Based-ChatGPT-API" -> "GithubRealFan/ABM-Compiler-Python"
"GithubRealFan/PHP-Based-ChatGPT-API" -> "GithubRealFan/Simple-Projects-CUDA"
"anurag-roy/shoonya-option-chain" -> "anurag-roy/kite-option-chain"
"Yifeng-He/Deep-Learning-Time-Series-Prediction-using-LSTM-Recurrent-Neural-Networks" -> "yifan-guo-cwru/Time-Series-Prediction-with-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras"
"gmoncarz/renko" -> "filipemarques87/fx-charts"
"PlusGenie/ib-gateway-docker" -> "PlusGenie/tradingview-webhooks-bot"
"neurotrader888/VSAIndicator" -> "neurotrader888/TradeDependenceRunsTest"
"neurotrader888/VSAIndicator" -> "neurotrader888/TimeSeriesReversibility"
"neurotrader888/TimeSeriesVisibilityGraphs" -> "neurotrader888/TimeSeriesReversibility"
"neurotrader888/TimeSeriesVisibilityGraphs" -> "neurotrader888/VSAIndicator"
"neurotrader888/TimeSeriesReversibility" -> "neurotrader888/VSAIndicator"
"neurotrader888/TradeDependenceRunsTest" -> "neurotrader888/VSAIndicator"
"neurotrader888/TradeDependenceRunsTest" -> "neurotrader888/TimeSeriesReversibility"
"neurotrader888/IntramarketDifference" -> "neurotrader888/VSAIndicator"
"neurotrader888/IntramarketDifference" -> "neurotrader888/TimeSeriesReversibility"
"iniself/backtrader_bokeh" -> "iniself/noba"
"koala9527/lottery-uniapp" -> "wushidiguo/hello-lottery"
"AIM-IT4/Python-For-Quants" -> "AIM-IT4/StochasticModelsAssetPricing"
"AlgoTrading101/VectorBT-AlgoTrading101" -> "QubitQuants/vectorbt_pro_tutorials"
"godtopus/LeanTrading" -> "sohaibmalik/NinjaTrader"
"oanda/v20-python-samples" -> "oanda/v20-python"
"oanda/v20-python-samples" -> "hootnot/oanda-api-v20"
"oanda/v20-python-samples" -> "hootnot/oandapyV20-examples"
"oanda/v20-python-samples" -> "oanda/oandapy"
"oanda/v20-python-samples" -> "anthonyng2/FX-Trading-with-Python-and-Oanda"
"oanda/v20-python-samples" -> "PeterMalkin/oandapybot"
"oanda/v20-python-samples" -> "oanda/py-api-streaming"
"oanda/v20-python-samples" -> "happydasch/btoandav20"
"oanda/v20-python-samples" -> "yhilpisch/tpqoa"
"oanda/v20-python-samples" -> "mhallsmoore/qsforex"
"oanda/v20-python-samples" -> "oanda/py-api-trading"
"fxcm/FXCMTickData" -> "fxcm/FXCMTimeSeriesData"
"fxcm/FXCMTickData" -> "fxcm/FXCM-API-Offerings"
"maxbbraun/trump2cash" -> "quantopian/zipline"
"maxbbraun/trump2cash" -> "StockSharp/StockSharp"
"maxbbraun/trump2cash" -> "DeviaVir/zenbot" ["e"=1]
"maxbbraun/trump2cash" -> "butor/blackbird" ["e"=1]
"maxbbraun/trump2cash" -> "michaelgrosner/tribeca" ["e"=1]
"maxbbraun/trump2cash" -> "ricequant/rqalpha" ["e"=1]
"maxbbraun/trump2cash" -> "oxford-cs-deepnlp-2017/lectures" ["e"=1]
"maxbbraun/trump2cash" -> "jamesmawm/High-Frequency-Trading-Model-with-IB"
"maxbbraun/trump2cash" -> "gbeced/pyalgotrade"
"maxbbraun/trump2cash" -> "owocki/pytrader" ["e"=1]
"maxbbraun/trump2cash" -> "mementum/backtrader"
"maxbbraun/trump2cash" -> "cuemacro/finmarketpy"
"maxbbraun/trump2cash" -> "samshadwell/TrumpScript" ["e"=1]
"maxbbraun/trump2cash" -> "CryptoSignal/Crypto-Signal" ["e"=1]
"maxbbraun/trump2cash" -> "huseinzol05/Stock-Prediction-Models"
"TraderOracle/Quantower" -> "TraderOracle/TradingView"
"TraderOracle/Quantower" -> "TraderOracle/ATAS-Buy-Sell"
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "lilianweng/stock-rnn"
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "yangwohenmai/LSTM"
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "huseinzol05/Stock-Prediction-Models"
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "nicodjimenez/lstm"
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "borisbanushev/stockpredictionai"
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "tgjeon/TensorFlow-Tutorials-for-Time-Series"
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "Alro10/deep-learning-time-series" ["e"=1]
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "hichenway/stock_predict_with_LSTM"
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "scorpionhiccup/StockPricePrediction"
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "achillesrasquinha/bulbea"
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "AileenNielsen/TimeSeriesAnalysisWithPython" ["e"=1]
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "BenjiKCF/Neural-Net-with-Financial-Time-Series-Data" ["e"=1]
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "deependersingla/deep_trader" ["e"=1]
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "llSourcell/How-to-Predict-Stock-Prices-Easily-Demo" ["e"=1]
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" -> "dzitkowskik/StockPredictionRNN"
"Netflix/conductor" -> "deepfence/ThreatMapper" ["e"=1]
"Netflix/conductor" -> "deepfence/PacketStreamer" ["e"=1]
"numerai/example-scripts" -> "emoen/Machine-Learning-for-Asset-Managers" ["e"=1]
"microsoft/RD-Agent" -> "microsoft/qlib" ["e"=1]
"microsoft/RD-Agent" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"google-deepmind/uncertain_ground_truth" -> "zazhang/ep-chan-book-algo-trading" ["e"=1]
"agentuniverse-ai/agentUniverse" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"OpenBB-finance/openbb-agents" -> "quant-science/sunday-quant-scientist"
"OpenBB-finance/openbb-agents" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook"
"OpenBB-finance/openbb-agents" -> "lit26/finvizfinance"
"OpenBB-finance/openbb-agents" -> "KVignesh122/AssetNewsSentimentAnalyzer"
"OpenBB-finance/openbb-agents" -> "shashankvemuri/Finance"
"OpenBB-finance/openbb-agents" -> "JerBouma/FinanceDatabase"
"OpenBB-finance/openbb-agents" -> "mfrdixon/ML_Finance_Codes"
"OpenBB-finance/openbb-agents" -> "AI4Finance-Foundation/FinRobot"
"OpenBB-finance/openbb-agents" -> "pmorissette/ffn"
"OpenBB-finance/openbb-agents" -> "virattt/financial-agent-ui" ["e"=1]
"OpenBB-finance/openbb-agents" -> "georgezouq/awesome-ai-in-finance"
"OpenBB-finance/openbb-agents" -> "zazhang/ep-chan-book-algo-trading"
"OpenBB-finance/openbb-agents" -> "JerBouma/FinanceToolkit"
"OpenBB-finance/openbb-agents" -> "vollib/vollib"
"OpenBB-finance/openbb-agents" -> "reflex-dev/reflex-llm-examples" ["e"=1]
"BennyThadikaran/stock-pattern" -> "keithorange/PatternPy"
"BennyThadikaran/stock-pattern" -> "white07S/TradingPatternScanner"
"BennyThadikaran/stock-pattern" -> "zeta-zetra/chart_patterns"
"BennyThadikaran/stock-pattern" -> "BennyThadikaran/eod2"
"BennyThadikaran/stock-pattern" -> "gaborvecsei/Stocks-Pattern-Analyzer"
"AI4Finance-Foundation/FinRobot" -> "AI4Finance-Foundation/FinGPT"
"AI4Finance-Foundation/FinRobot" -> "microsoft/RD-Agent" ["e"=1]
"AI4Finance-Foundation/FinRobot" -> "AI4Finance-Foundation/FinRL"
"AI4Finance-Foundation/FinRobot" -> "pipiku915/FinMem-LLM-StockTrading" ["e"=1]
"AI4Finance-Foundation/FinRobot" -> "AI4Finance-Foundation/FinNLP"
"AI4Finance-Foundation/FinRobot" -> "AI4Finance-Foundation/FinRL-Meta" ["e"=1]
"AI4Finance-Foundation/FinRobot" -> "charliedream1/ai_quant_trade" ["e"=1]
"AI4Finance-Foundation/FinRobot" -> "AI4Finance-Foundation/FinRL-Trading" ["e"=1]
"AI4Finance-Foundation/FinRobot" -> "TradeMaster-NTU/TradeMaster"
"AI4Finance-Foundation/FinRobot" -> "georgezouq/awesome-ai-in-finance"
"AI4Finance-Foundation/FinRobot" -> "microsoft/qlib"
"AI4Finance-Foundation/FinRobot" -> "AI4Finance-Foundation/FinRL-Tutorials" ["e"=1]
"AI4Finance-Foundation/FinRobot" -> "MetaGLM/FinGLM" ["e"=1]
"AI4Finance-Foundation/FinRobot" -> "OpenBB-finance/openbb-agents"
"AI4Finance-Foundation/FinRobot" -> "lastmile-ai/mcp-agent" ["e"=1]
"cybergeekgyan/Quant-Developers-Resources" -> "PyPatel/Quant-Finance-Resources" ["e"=1]
"Open-Trader/opentrader" -> "Lumiwealth/lumibot" ["e"=1]
"Open-Trader/opentrader" -> "merovinh/best-of-algorithmic-trading" ["e"=1]
"Open-Trader/opentrader" -> "nautechsystems/nautilus_trader" ["e"=1]
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "vedic-partap/Event-Driven-Stock-Prediction-using-Deep-Learning" ["e"=1]
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "scorpionhiccup/StockPricePrediction"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "jasti/Stock-Predictor"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "shirosaidev/stocksight"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "gyanesh-m/Sentiment-analysis-of-financial-news-data"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "achillesrasquinha/bulbea"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "ssatia/strtsmrt"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "dzitkowskik/StockPredictionRNN"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "jasonyip184/StockSentimentTrading"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "lilianweng/stock-rnn"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "yumoxu/stocknet-dataset" ["e"=1]
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "VivekPa/AIAlpha"
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"OpenSourceRisk/Engine" -> "OpenSourceRisk/ORE-SWIG"
"OpenSourceRisk/Engine" -> "OpenSourceRisk/Dashboard"
"OpenSourceRisk/Engine" -> "haozhangphd/QuantLib-noBoost"
"OpenSourceRisk/Engine" -> "lballabio/QuantLib-SWIG"
"OpenSourceRisk/Engine" -> "OpenGamma/Strata" ["e"=1]
"OpenSourceRisk/Engine" -> "attack68/rateslib"
"OpenSourceRisk/Engine" -> "lballabio/QuantLib"
"OpenSourceRisk/Engine" -> "finmath/finmath-lib" ["e"=1]
"OpenSourceRisk/Engine" -> "mgroncki/IPythonScripts"
"OpenSourceRisk/Engine" -> "AcadiaSoft/simm-lib"
"OpenSourceRisk/Engine" -> "asavine/CompFinance"
"OpenSourceRisk/Engine" -> "nhaga/QuantLib-Python-Docs"
"OpenSourceRisk/Engine" -> "pazzo83/QuantLib.jl" ["e"=1]
"OpenSourceRisk/Engine" -> "enthought/pyql"
"OpenSourceRisk/Engine" -> "auto-differentiation/xad" ["e"=1]
"OpenSourceRisk/Dashboard" -> "OpenSourceRisk/ORE-SWIG"
"msitt/blpapi-python" -> "matthewgilbert/pdblp"
"msitt/blpapi-python" -> "alpha-xone/xbbg"
"msitt/blpapi-python" -> "matthewgilbert/blp"
"msitt/blpapi-python" -> "kyuni22/pybbg"
"msitt/blpapi-python" -> "alex314159/blpapiwrapper"
"msitt/blpapi-python" -> "tkim/emsx_api_repository"
"msitt/blpapi-python" -> "bpsmith/tia"
"msitt/blpapi-python" -> "691175002/BLPInterface"
"msitt/blpapi-python" -> "bpsmith/pybbg"
"msitt/blpapi-python" -> "cuemacro/findatapy"
"msitt/blpapi-python" -> "Rblp/Rblpapi"
"msitt/blpapi-python" -> "pricingmonkey/blpapi-web"
"Lumiwealth/quantstats_lumi" -> "stefan-jansen/pyfolio-reloaded"
"skfolio/skfolio" -> "dcajasn/Riskfolio-Lib"
"skfolio/skfolio" -> "cvxgrp/cvxportfolio"
"skfolio/skfolio" -> "domokane/FinancePy"
"skfolio/skfolio" -> "robertmartin8/PyPortfolioOpt"
"skfolio/skfolio" -> "ranaroussi/quantstats"
"skfolio/skfolio" -> "ArturSepp/QuantInvestStrats"
"skfolio/skfolio" -> "jankrepl/deepdow"
"skfolio/skfolio" -> "stefan-jansen/pyfolio-reloaded"
"skfolio/skfolio" -> "pmorissette/ffn"
"skfolio/skfolio" -> "hudson-and-thames/arbitragelab"
"skfolio/skfolio" -> "jasonstrimpel/volatility-trading"
"skfolio/skfolio" -> "shashankvemuri/Finance"
"skfolio/skfolio" -> "0xfdf/toraniko"
"skfolio/skfolio" -> "stefan-jansen/zipline-reloaded"
"skfolio/skfolio" -> "fmilthaler/FinQuant"
"marketcalls/openalgo" -> "NagarajuGunda/PyAlgoMate"
"marketcalls/openalgo" -> "pkjmesra/PKScreener"
"marketcalls/openalgo" -> "pranjal-joshi/Screeni-py"
"marketcalls/openalgo" -> "sreenivasdoosa/sdoosa-algo-trade-python"
"marketcalls/openalgo" -> "srikar-kodakandla/fully-automated-nifty-options-trading"
"marketcalls/openalgo" -> "narenkram/steadfast-monorepo"
"marketcalls/openalgo" -> "TechfaneTechnologies/pytvlwcharts"
"marketcalls/openalgo" -> "marketcalls/openadvisor"
"marketcalls/openalgo" -> "ranjanrak/optionchainstream"
"marketcalls/openalgo" -> "deshwalmahesh/NSE-Stock-Scanner"
"marketcalls/openalgo" -> "madmay247/breeze-historical-options"
"marketcalls/openalgo" -> "VarunS2002/Python-NSE-Option-Chain-Analyzer"
"marketcalls/openalgo" -> "Indian-Algorithmic-Trading-Community/PythonTraderExcelTradeTerminal"
"marketcalls/openalgo" -> "imvinaypatil/kinetick"
"marketcalls/openalgo" -> "jigneshpylab/ZerodhaPythonScripts"
"virattt/financial-agent-ui" -> "virattt/financial-datasets" ["e"=1]
"virattt/financial-agent-ui" -> "virattt/financial-agent" ["e"=1]
"pipiku915/FinMem-LLM-StockTrading" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"pipiku915/FinMem-LLM-StockTrading" -> "TradeMaster-NTU/TradeMaster" ["e"=1]
"pipiku915/FinMem-LLM-StockTrading" -> "microsoft/MarS" ["e"=1]
"Auquan/Tutorials" -> "Auquan/auquan-toolbox-python"
"Auquan/Tutorials" -> "Hvass-Labs/FinanceOps"
"Auquan/Tutorials" -> "Finance-Hub/FinanceHub"
"Auquan/Tutorials" -> "LastAncientOne/Stock_Analysis_For_Quant"
"Auquan/Tutorials" -> "letianzj/QuantResearch"
"Auquan/Tutorials" -> "BlackArbsCEO/Adv_Fin_ML_Exercises"
"Auquan/Tutorials" -> "jasonstrimpel/volatility-trading"
"Auquan/Tutorials" -> "QuantConnect/Tutorials"
"Auquan/Tutorials" -> "rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["e"=1]
"Auquan/Tutorials" -> "rolling-panda-san/notebooks"
"Auquan/Tutorials" -> "JerBouma/AlgorithmicTrading"
"Auquan/Tutorials" -> "KidQuant/Pairs-Trading-With-Python"
"Auquan/Tutorials" -> "hudson-and-thames/mlfinlab"
"Auquan/Tutorials" -> "LongOnly/Quantitative-Notebooks"
"Auquan/Tutorials" -> "Auquan/auquantoolbox"
"rsheftel/pandas_market_calendars" -> "gerrymanoim/exchange_calendars"
"rsheftel/pandas_market_calendars" -> "quantopian/trading_calendars"
"rsheftel/pandas_market_calendars" -> "cuemacro/findatapy"
"rsheftel/pandas_market_calendars" -> "quantopian/empyrical"
"rsheftel/pandas_market_calendars" -> "pmorissette/ffn"
"rsheftel/pandas_market_calendars" -> "ranaroussi/pystore"
"rsheftel/pandas_market_calendars" -> "abbass2/pyqstrat"
"rsheftel/pandas_market_calendars" -> "man-group/arctic"
"rsheftel/pandas_market_calendars" -> "enthought/pyql"
"rsheftel/pandas_market_calendars" -> "bashtage/arch"
"rsheftel/pandas_market_calendars" -> "bpsmith/tia"
"rsheftel/pandas_market_calendars" -> "robcarver17/pysystemtrade"
"rsheftel/pandas_market_calendars" -> "pmorissette/bt"
"rsheftel/pandas_market_calendars" -> "michaelchu/optopsy"
"rsheftel/pandas_market_calendars" -> "erdewit/ib_insync"
"ranaroussi/multitasking" -> "ranaroussi/pystore"
"ib-api-reloaded/ib_async" -> "mattsta/ib_insync"
"ib-api-reloaded/ib_async" -> "gnzsnz/ib-gateway-docker"
"ib-api-reloaded/ib_async" -> "erdewit/ib_insync"
"ib-api-reloaded/ib_async" -> "IbcAlpha/IBC"
"ib-api-reloaded/ib_async" -> "Voyz/ibind"
"ib-api-reloaded/ib_async" -> "mattsta/icli"
"ib-api-reloaded/ib_async" -> "Voyz/ibeam"
"ib-api-reloaded/ib_async" -> "UnusualAlpha/ib-gateway-docker"
"ib-api-reloaded/ib_async" -> "extrange/ibkr-docker"
"ib-api-reloaded/ib_async" -> "quantbelt/ib_fundamental"
"ib-api-reloaded/ib_async" -> "quantbelt/jupyter-quant"
"ib-api-reloaded/ib_async" -> "ib-controller/ib-controller"
"ib-api-reloaded/ib_async" -> "adidror005/youtube-videos"
"ib-api-reloaded/ib_async" -> "brndnmtthws/thetagang"
"ib-api-reloaded/ib_async" -> "robcarver17/pysystemtrade"
"calclavia/DeepJ" -> "imalikshake/StyleNet" ["e"=1]
"PFund-Software-Ltd/pfund" -> "PFund-Software-Ltd/pfeed"
"cvxgrp/cvxportfolio" -> "jankrepl/deepdow"
"cvxgrp/cvxportfolio" -> "dcajasn/Riskfolio-Lib"
"cvxgrp/cvxportfolio" -> "skfolio/skfolio"
"cvxgrp/cvxportfolio" -> "czielinski/portfolioopt"
"cvxgrp/cvxportfolio" -> "robertmartin8/PyPortfolioOpt"
"cvxgrp/cvxportfolio" -> "Marigold/universal-portfolios"
"cvxgrp/cvxportfolio" -> "quantopian/empyrical"
"cvxgrp/cvxportfolio" -> "jasonstrimpel/volatility-trading"
"cvxgrp/cvxportfolio" -> "hudson-and-thames/mlfinlab"
"cvxgrp/cvxportfolio" -> "OpenSourceAP/CrossSection"
"cvxgrp/cvxportfolio" -> "0xfdf/toraniko"
"cvxgrp/cvxportfolio" -> "quantopian/alphalens"
"cvxgrp/cvxportfolio" -> "emoen/Machine-Learning-for-Asset-Managers"
"cvxgrp/cvxportfolio" -> "pmorissette/ffn"
"cvxgrp/cvxportfolio" -> "VivekPa/OptimalPortfolio"
"mdn/django-diy-blog" -> "MicroPyramid/django-blog-it" ["e"=1]
"BennyThadikaran/NseIndiaApi" -> "BennyThadikaran/BseIndiaApi"
"zerodha/javakiteconnect" -> "instruritesh/ZStreamingQuote"
"zerodha/javakiteconnect" -> "zerodha/pykiteconnect"
"zerodha/javakiteconnect" -> "zerodha/kiteconnectjs"
"zerodha/javakiteconnect" -> "yash12392/kite-automatic-trading"
"olofmogren/c-rnn-gan" -> "cjbayron/c-rnn-gan.pytorch"
"olofmogren/c-rnn-gan" -> "ratschlab/RGAN"
"olofmogren/c-rnn-gan" -> "subpath/Keras_music_gereration" ["e"=1]
"olofmogren/c-rnn-gan" -> "ofirnachum/sequence_gan" ["e"=1]
"olofmogren/c-rnn-gan" -> "RichardYang40148/MidiNet" ["e"=1]
"olofmogren/c-rnn-gan" -> "jsyoon0823/TimeGAN"
"olofmogren/c-rnn-gan" -> "LantaoYu/SeqGAN" ["e"=1]
"olofmogren/c-rnn-gan" -> "umbrellabeach/music-generation-with-DL" ["e"=1]
"olofmogren/c-rnn-gan" -> "jakezhaojb/ARAE" ["e"=1]
"olofmogren/c-rnn-gan" -> "proceduralia/pytorch-GAN-timeseries"
"olofmogren/c-rnn-gan" -> "buriburisuri/timeseries_gan"
"olofmogren/c-rnn-gan" -> "amitadate/S-LSTM-GAN-MNIST"
"olofmogren/c-rnn-gan" -> "SigCGANs/Conditional-Sig-Wasserstein-GANs"
"olofmogren/c-rnn-gan" -> "Zardinality/WGAN-tensorflow" ["e"=1]
"olofmogren/c-rnn-gan" -> "imalikshake/StyleNet"
"keon/deepstock" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis" ["e"=1]
"keon/deepstock" -> "achillesrasquinha/bulbea" ["e"=1]
"keon/deepstock" -> "tencia/stocks_rnn" ["e"=1]
"keon/deepstock" -> "marketneutral/pairs-trading-with-ML" ["e"=1]
"keon/deepstock" -> "timestocome/Test-stock-prediction-algorithms" ["e"=1]
"kylemcdonald/FreeWifi" -> "maxbbraun/trump2cash" ["e"=1]
"FudanDISC/DISC-FinLLM" -> "AI4Finance-Foundation/FinNLP" ["e"=1]
"rainx/inside-zipline" -> "zipline-live/zipline" ["e"=1]
"Voyz/ibind" -> "Voyz/ibeam"
"Voyz/ibind" -> "ib-api-reloaded/ib_async"
"Voyz/ibind" -> "utilmon/EasyIB"
"Voyz/ibind" -> "gnzsnz/ib-gateway-docker"
"Voyz/ibind" -> "hackingthemarkets/interactive-brokers-web-api"
"Voyz/ibind" -> "quantbelt/ib_fundamental"
"Voyz/ibind" -> "UnusualAlpha/ib-gateway-docker"
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "RobRomijnders/LSTM_tsc"
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "polyaxon/haupt"
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "YerevaNN/mimic3-benchmarks" ["e"=1]
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "tencia/stocks_rnn"
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "aurotripathy/lstm-anomaly-detect" ["e"=1]
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "titu1994/MLSTM-FCN" ["e"=1]
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "tgjeon/TensorFlow-Tutorials-for-Time-Series"
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "alexminnaar/time-series-classification-and-clustering" ["e"=1]
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "FrancisArgnR/Time-series---deep-learning---state-of-the-art" ["e"=1]
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "healthDataScience/deep-learning-HAR" ["e"=1]
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "titu1994/LSTM-FCN" ["e"=1]
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "CasiaFan/time_seires_prediction_using_lstm"
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "guillaume-chevalier/LSTM-Human-Activity-Recognition" ["e"=1]
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" -> "loliverhennigh/Convolutional-LSTM-in-Tensorflow" ["e"=1]
"datacamp/datacamp-community-tutorials" -> "quandl/quandl-python" ["e"=1]
"datacamp/datacamp-community-tutorials" -> "yhilpisch/py4fi" ["e"=1]
"datacamp/datacamp-community-tutorials" -> "quantopian/pyfolio" ["e"=1]
"datacamp/datacamp-community-tutorials" -> "robertmartin8/MachineLearningStocks" ["e"=1]
"datacamp/datacamp-community-tutorials" -> "QuantConnect/Tutorials" ["e"=1]
"datacamp/datacamp-community-tutorials" -> "cuemacro/findatapy" ["e"=1]
"ckmarkoh/GAN-tensorflow" -> "jsikyoon/SequentialData-GAN"
"jmerle/imc-prosperity-2-visualizer" -> "jmerle/imc-prosperity-visualizer"
"jmerle/imc-prosperity-2-visualizer" -> "jmerle/imc-prosperity-2-backtester"
"jmerle/imc-prosperity-2-visualizer" -> "jmerle/imc-prosperity-2-submitter"
"jmerle/imc-prosperity-2-visualizer" -> "nicolassinott/IMC_Prosperity"
"jmerle/imc-prosperity-2-visualizer" -> "n-0/backtest-imc-prosperity-2023"
"jmerle/imc-prosperity-2-visualizer" -> "MichalOkon/imc_prosperity"
"facebookarchive/bootstrapped" -> "bashtage/arch" ["e"=1]
"udacity/artificial-intelligence" -> "udacity/artificial-intelligence-for-trading" ["e"=1]
"cm45t3r/candlestick" -> "SpiralDevelopment/candlestick-patterns" ["e"=1]
"TulipCharts/tulipindicators" -> "TulipCharts/tulipy"
"TulipCharts/tulipindicators" -> "TulipCharts/tulipnode" ["e"=1]
"TulipCharts/tulipindicators" -> "TA-Lib/ta-lib"
"TulipCharts/tulipindicators" -> "peerchemist/finta"
"TulipCharts/tulipindicators" -> "nardew/talipp"
"TulipCharts/tulipindicators" -> "cirla/tulipy"
"TulipCharts/tulipindicators" -> "anandanand84/technicalindicators" ["e"=1]
"TulipCharts/tulipindicators" -> "mementum/bta-lib"
"TulipCharts/tulipindicators" -> "Boulder-Investment-Technologies/lppls"
"TulipCharts/tulipindicators" -> "kylejusticemagnuson/pyti"
"TulipCharts/tulipindicators" -> "twopirllc/pandas-ta"
"TulipCharts/tulipindicators" -> "femtotrader/pandas_talib"
"TulipCharts/tulipindicators" -> "pmorissette/ffn"
"TulipCharts/tulipindicators" -> "oransel/node-talib" ["e"=1]
"TulipCharts/tulipindicators" -> "roq-trading/roq-api" ["e"=1]
"TulipCharts/tulipy" -> "TulipCharts/tulipindicators"
"TulipCharts/tulipy" -> "joosthoeks/jhTAlib"
"TulipCharts/tulipy" -> "fja05680/pinkfish"
"TulipCharts/tulipy" -> "cirla/tulipy"
"TulipCharts/tulipy" -> "peerchemist/finta"
"TulipCharts/tulipy" -> "kylejusticemagnuson/pyti"
"TulipCharts/tulipy" -> "femtotrader/pandas_talib"
"TulipCharts/tulipy" -> "llazzaro/analyzer"
"TulipCharts/tulipy" -> "mementum/bta-lib"
"austin-starks/FinAnGPT" -> "austin-starks/Deep-RL-Stocks"
"austin-starks/FinAnGPT" -> "austin-starks/NextTrade"
"austin-starks/FinAnGPT" -> "austin-starks/Promptimizer"
"austin-starks/FinAnGPT" -> "austin-starks/FinAnGPT-Pro"
"rolling-panda-san/notebooks" -> "chrism2671/PyTrendFollow"
"rolling-panda-san/notebooks" -> "ArturSepp/QuantInvestStrats"
"rolling-panda-san/notebooks" -> "quarkfin/qf-lib"
"rolling-panda-san/notebooks" -> "letianzj/quanttrader"
"rolling-panda-san/notebooks" -> "KidQuant/Pairs-Trading-With-Python"
"rolling-panda-san/notebooks" -> "jasonstrimpel/volatility-trading"
"rolling-panda-san/notebooks" -> "letianzj/QuantResearch"
"rolling-panda-san/notebooks" -> "JerBouma/AlgorithmicTrading"
"rolling-panda-san/notebooks" -> "LechGrzelak/QuantFinanceBook"
"rolling-panda-san/notebooks" -> "michaelchu/optopsy"
"rolling-panda-san/notebooks" -> "emoen/Machine-Learning-for-Asset-Managers"
"rolling-panda-san/notebooks" -> "fedecaccia/avellaneda-stoikov" ["e"=1]
"rolling-panda-san/notebooks" -> "0xfdf/toraniko"
"rolling-panda-san/notebooks" -> "skfolio/skfolio"
"rolling-panda-san/notebooks" -> "stefan-jansen/pyfolio-reloaded"
"twosigma/flint" -> "man-group/arctic" ["e"=1]
"AnthonyBradford/optionmatrix" -> "yzoz/python-option-calculator"
"AnthonyBradford/optionmatrix" -> "ChiragJhawar/ProjectReward"
"AnthonyBradford/optionmatrix" -> "rburkholder/trade-frame" ["e"=1]
"AnthonyBradford/optionmatrix" -> "evdubs/renegade-way"
"AnthonyBradford/optionmatrix" -> "Jenniferab32/OptionAnalysis"
"AnthonyBradford/optionmatrix" -> "rahuljoshi44/GraphVega"
"AnthonyBradford/optionmatrix" -> "SC4RECOIN/FlowAlgo-Options-Trader"
"AnthonyBradford/optionmatrix" -> "YuChenAmberLu/Options-Calculator"
"nicknochnack/MLTradingBot" -> "Lumiwealth/lumibot" ["e"=1]
"buriburisuri/ac-gan" -> "buriburisuri/timeseries_gan" ["e"=1]
"hootnot/oandapyV20-examples" -> "hootnot/oanda-api-v20"
"hootnot/oandapyV20-examples" -> "oanda/v20-python-samples"
"hootnot/oandapyV20-examples" -> "oanda/v20-python"
"hootnot/oandapyV20-examples" -> "hootnot/oanda-trading-environment"
"hootnot/oandapyV20-examples" -> "oanda/oandapy"
"hootnot/oandapyV20-examples" -> "PeterMalkin/oandapybot"
"hootnot/oandapyV20-examples" -> "anthonyng2/FX-Trading-with-Python-and-Oanda"
"hootnot/oandapyV20-examples" -> "happydasch/btoandav20"
"nimashahbazi/optiver-trading-close" -> "ChunhanLi/9th-kaggle-optiver-trading-close"
"nimashahbazi/optiver-trading-close" -> "hudson-and-thames/arbitragelab"
"nimashahbazi/optiver-trading-close" -> "milenavuletic/Fin-GAN"
"nimashahbazi/optiver-trading-close" -> "0xfdf/toraniko"
"nimashahbazi/optiver-trading-close" -> "bradleyboyuyang/ML-HFT" ["e"=1]
"nimashahbazi/optiver-trading-close" -> "kieranjwood/trading-momentum-transformer" ["e"=1]
"nimashahbazi/optiver-trading-close" -> "gjimzhou/MTH9879-Market-Microstructure-Models" ["e"=1]
"nimashahbazi/optiver-trading-close" -> "ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal"
"nimashahbazi/optiver-trading-close" -> "jo-cho/Technical_Analysis_and_Feature_Engineering"
"nimashahbazi/optiver-trading-close" -> "skfolio/skfolio"
"pbharrin/alpha-compiler" -> "calmitchell617/Springbok"
"PFund-Software-Ltd/pytrade.org" -> "PFund-Software-Ltd/pfund"
"PFund-Software-Ltd/pytrade.org" -> "PFund-Software-Ltd/pfeed"
"hudson-and-thames/backtest_tutorial" -> "hudson-and-thames/arbitrage_research"
"SaberaTalukder/TOTEM" -> "ML4ITS/TimeVQVAE" ["e"=1]
"ChunhanLi/9th-kaggle-optiver-trading-close" -> "osyuksel/kaggle-optiver-2024"
"TulipCharts/tulipnode" -> "TulipCharts/tulipindicators" ["e"=1]
"milenavuletic/Fin-GAN" -> "milenavuletic/VolGAN"
"yhilpisch/lvvd" -> "yhilpisch/mvportfolio"
"yhilpisch/lvvd" -> "yhilpisch/dx"
"yhilpisch/lvvd" -> "yhilpisch/dawp"
"yhilpisch/lvvd" -> "yhilpisch/aiif"
"yhilpisch/lvvd" -> "yhilpisch/pydlon15"
"yhilpisch/lvvd" -> "yhilpisch/ftwp"
"beatzxbt/mm-toolbox" -> "0xfdf/toraniko" ["e"=1]
"gabsens/IMC-Prosperity-2-Manual" -> "jmerle/imc-prosperity-2"
"gabsens/IMC-Prosperity-2-Manual" -> "pe049395/IMC-Prosperity-2024"
"WaleeTheRobot/order-flow-bot" -> "WaleeTheRobot/open-auto-atr"
"WaleeTheRobot/order-flow-bot" -> "beckerben/NinjaTrader"
"WaleeTheRobot/order-flow-bot" -> "DominikBritz/NinjaTrader-indicators-strategies"
"WaleeTheRobot/order-flow-bot" -> "trading-code/ninjatrader-freeorderflow"
"WaleeTheRobot/order-flow-bot" -> "MicroTrendsLtd/NinjaTrader8"
"WaleeTheRobot/order-flow-bot" -> "efitzkiwi/NT8SupplyDemandDTBot"
"WaleeTheRobot/order-flow-bot" -> "TraderOracle/NinjaTrader"
"WaleeTheRobot/order-flow-bot" -> "WaleeTheRobot/open-auto-trend-support-resistance"
"WaleeTheRobot/order-flow-bot" -> "gbzenobi/CSharp-NT8-OrderFlowKit"
"WaleeTheRobot/order-flow-bot" -> "twdsje/Ninjatrader-scripts"
"WaleeTheRobot/order-flow-bot" -> "OmidVHeravi/NinjaTraderTools"
"WaleeTheRobot/order-flow-bot" -> "WaleeTheRobot/ninja-trader-discord-messenger"
"WaleeTheRobot/order-flow-bot" -> "kodalli/NT8-PAT-Strategy"
"WaleeTheRobot/order-flow-bot" -> "magols/NinjaTraderDev"
"WaleeTheRobot/order-flow-bot" -> "jDoom/NinjaScripts"
"RobRomijnders/AE_ts" -> "ratschlab/RGAN" ["e"=1]
"datasets/s-and-p-500-companies" -> "fja05680/sp500" ["e"=1]
"datasets/s-and-p-500-companies" -> "lukerosiak/pysec" ["e"=1]
"datasets/s-and-p-500-companies" -> "datasets/edgar" ["e"=1]
"datasets/s-and-p-500-companies" -> "edgarminers/python-edgar" ["e"=1]
"twdsje/Ninjatrader-scripts" -> "Sandy4321/NinjaTrader.Custom"
"danielfrg/PythonFinance" -> "id774/finance"
"virattt/financial-datasets" -> "virattt/financial-agent-ui" ["e"=1]
"virattt/financial-datasets" -> "virattt/financial-agent"
"virattt/financial-datasets" -> "virattt/openbb-financialdatasets-backend"
"bartosh/backtrader" -> "Dave-Vallance/bt-ccxt-store"
"bartosh/backtrader" -> "rodrigo-brito/backtrader-binance-bot"
"TraderOracle/ATAS" -> "TraderOracle/TradingView"
"TraderOracle/ATAS" -> "TraderOracle/Quantower"
"TraderOracle/ATAS" -> "TraderOracle/NinjaTrader"
"TraderOracle/ATAS" -> "TraderOracle/ATAS-Buy-Sell"
"TraderOracle/ATAS" -> "TraderOracle/SierraChart"
"jmerle/imc-prosperity-2-backtester" -> "jmerle/imc-prosperity-2-visualizer"
"jmerle/imc-prosperity-2-backtester" -> "jmerle/imc-prosperity-2-submitter"
"jmerle/imc-prosperity-2-backtester" -> "MichalOkon/imc_prosperity"
"jmerle/imc-prosperity-2-backtester" -> "jmerle/imc-prosperity-2"
"ML4ITS/TimeVQVAE-AnomalyDetection" -> "ML4ITS/TimeVQVAE"
"jmerle/imc-prosperity-2" -> "gabsens/IMC-Prosperity-2-Manual"
"jmerle/imc-prosperity-2" -> "ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal"
"jmerle/imc-prosperity-2" -> "pe049395/IMC-Prosperity-2024"
"jmerle/imc-prosperity-2" -> "ericcccsliu/imc-prosperity-2"
"jmerle/imc-prosperity-2" -> "jmerle/imc-prosperity-3-visualizer"
"jmerle/imc-prosperity-2" -> "MichalOkon/imc_prosperity"
"jmerle/imc-prosperity-2" -> "jmerle/imc-prosperity-2-backtester"
"jmerle/imc-prosperity-2" -> "nicolassinott/IMC_Prosperity"
"devfinwiz/Fin-Maestro-Kin" -> "devfinwiz/Fin-Maestro-Web"
"devfinwiz/Fin-Maestro-Kin" -> "devfinwiz/LeetCode-Feeder"
"pe049395/IMC-Prosperity-2024" -> "Luka-R-Lukacevic/prosperity2"
"pe049395/IMC-Prosperity-2024" -> "jmerle/imc-prosperity-2"
"pe049395/IMC-Prosperity-2024" -> "gabsens/IMC-Prosperity-2-Manual"
"dansoutner/LSTM" -> "JonathanRaiman/cython_lstm"
"crosbymichael/thinkorswim" -> "neberej/tos-client"
"tradestation/api-docs" -> "tradestation/webapi-docs"
"tradestation/api-docs" -> "ht-tradestation/kbb-sqz-macd"
"rnikitin/QuantGPT" -> "psemdel/py-trading-bot"
"rnikitin/QuantGPT" -> "BaileySimrell/QuantGPT-v2"
"rnikitin/QuantGPT" -> "QubitQuants/vectorbt_pro_tutorials"
"PFund-Software-Ltd/pfeed" -> "PFund-Software-Ltd/pfund"
"JamesBrofos/Odin" -> "JamesBrofos/Odin-Securities"
"hemenkapadia/getbhavcopy" -> "girishg4t/bhavCopy-downloader"
"hemenkapadia/getbhavcopy" -> "sdabhi23/bsedata"
"virattt/financial-agent" -> "virattt/financial-datasets"
"NelsonDane/fennel-invest-api" -> "NelsonDane/public-invest-api"
"Auquan/auquan-toolbox-python" -> "Auquan/auquantoolbox"
"Auquan/auquan-toolbox-python" -> "Auquan/Tutorials"
"funginstitute/disambiguator" -> "funginstitute/downloads"
"blockchain99/stock-predict-by-RNN-LSTM" -> "christsaizyt/US-Stock-Market-Prediction-by-LSTM"
"BennyThadikaran/BseIndiaApi" -> "BennyThadikaran/NseIndiaApi"
"milenavuletic/VolGAN" -> "milenavuletic/Fin-GAN"
"milenavuletic/VolGAN" -> "BrianNingUT/ArbFreeIV-VAE"
"TraderOracle/NinjaTrader" -> "TraderOracle/ATAS"
"TraderOracle/NinjaTrader" -> "TraderOracle/TradingView"
"TraderOracle/NinjaTrader" -> "TraderOracle/Quantower"
"TraderOracle/NinjaTrader" -> "TraderOracle/ATAS-Buy-Sell"
"lseffer/stock_screener" -> "jackmoody11/stockscore"
"lseffer/stock_screener" -> "terzim/StockScreener"
"lseffer/stock_screener" -> "asafravid/sss"
"Invest-In-a-Tech/Deep-Reinforcement-Learning-DayTradingAgent" -> "Invest-In-a-Tech/Machine-Learning-ES-Emini-Futures"
"WaleeTheRobot/open-auto-atr" -> "WaleeTheRobot/open-auto-trend-support-resistance"
"yash12392/kite-automatic-trading" -> "yudhv/PyTrading"
"TraderOracle/TradingView" -> "TraderOracle/Quantower"
"TraderOracle/TradingView" -> "TraderOracle/ATAS"
"JuliaActuary/LifeContingencies.jl" -> "JuliaActuary/MortalityTables.jl"
"NelsonDane/public-invest-api" -> "NelsonDane/fennel-invest-api"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "hwrdprkns/ThinkOrSwim"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "korygill/technical-analysis"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "jeog/TOSDataBridge"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "john5223/minas"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "bingit2/TradingView-to-ThinkorSwim"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "yammypotato/Thinkorswim-Scripts"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "sjjohns/ThinkOrSwimStudies"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "drewgriffith15/ThinkOrSwim"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "jeog/TDAmeritradeAPI"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "TreyThomas93/python-trading-bot-with-thinkorswim"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "dranem05/thinkscripts-pub"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "2187Nick/thinkscript"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "anupambagchi/denken"
"jshingler/TOS-and-Thinkscript-Snippet-Collection" -> "timkpaine/tdameritrade"
"RomelTorres/alpha_vantage" -> "ranaroussi/yfinance"
"RomelTorres/alpha_vantage" -> "pydata/pandas-datareader"
"RomelTorres/alpha_vantage" -> "quantopian/pyfolio"
"RomelTorres/alpha_vantage" -> "TA-Lib/ta-lib-python"
"RomelTorres/alpha_vantage" -> "ranaroussi/quantstats"
"RomelTorres/alpha_vantage" -> "twopirllc/pandas-ta"
"RomelTorres/alpha_vantage" -> "matplotlib/mplfinance"
"RomelTorres/alpha_vantage" -> "bukosabino/ta"
"RomelTorres/alpha_vantage" -> "cuemacro/findatapy"
"RomelTorres/alpha_vantage" -> "hudson-and-thames/mlfinlab"
"RomelTorres/alpha_vantage" -> "mementum/backtrader"
"RomelTorres/alpha_vantage" -> "wilsonfreitas/awesome-quant"
"RomelTorres/alpha_vantage" -> "ranaroussi/qtpylib"
"RomelTorres/alpha_vantage" -> "alpacahq/alpaca-trade-api-python"
"RomelTorres/alpha_vantage" -> "addisonlynch/iexfinance"
"virattt/ai-hedge-fund" -> "OpenBB-finance/OpenBB" ["e"=1]
"AndysDeepAbstractions/How-to-Predict-Stock-Prices-Easily-Demo" -> "etai83/lstm_stock_prediction"
"alkaline-ml/pmdarima" -> "bashtage/arch" ["e"=1]
"alexa-samples/alexa-smarthome" -> "PacktPublishing/Hands-on-Python-for-Finance" ["e"=1]
"vollib/py_vollib" -> "marcdemers/py_vollib_vectorized"
"vollib/py_vollib" -> "vollib/py_lets_be_rational"
"vollib/py_vollib" -> "vollib/vollib"
"vollib/py_vollib" -> "vollib/lets_be_rational"
"vollib/py_vollib" -> "hashABCD/opstrat"
"vollib/py_vollib" -> "gabrielepompa88/pyBlackScholesAnalytics"
"vollib/py_vollib" -> "gerrymanoim/exchange_calendars"
"vollib/py_vollib" -> "jasonstrimpel/volatility-trading"
"vollib/py_vollib" -> "plotly/dash-volatility-surface"
"vollib/py_vollib" -> "yassinemaaroufi/MibianLib"
"vollib/py_vollib" -> "ynouri/pysabr"
"mintapi/mintapi" -> "robinhood-unofficial/pyrh" ["e"=1]
"mintapi/mintapi" -> "jmfernandes/robin_stocks" ["e"=1]
"zipline-live/zipline" -> "alpacahq/pylivetrader"
"zipline-live/zipline" -> "jimgoo/zipline-tensorboard"
"zipline-live/zipline" -> "zipline-live/zipline-live.github.io"
"zipline-live/zipline" -> "shlomiku/zipline-trader"
"zipline-live/zipline" -> "rainx/inside-zipline" ["e"=1]
"zipline-live/zipline" -> "kanghua309/strategy" ["e"=1]
"zipline-live/zipline" -> "alpacahq/pipeline-live"
"zipline-live/zipline" -> "JaysonAlbert/zipline" ["e"=1]
"zipline-live/zipline" -> "ib-controller/ib-controller"
"zipline-live/zipline" -> "quantrocket-llc/moonshot"
"zipline-live/zipline" -> "pbharrin/alpha-compiler"
"zipline-live/zipline" -> "marketneutral/alphatools"
"zipline-live/zipline" -> "ranaroussi/ezibpy"
"zipline-live/zipline" -> "quantopian/trading_calendars"
"zipline-live/zipline" -> "quantopian/empyrical"
"Bohr1005/xcrypto" -> "TradeMaster-NTU/TradeMaster" ["e"=1]
"robertmartin8/MachineLearningStocks" -> "achillesrasquinha/bulbea"
"robertmartin8/MachineLearningStocks" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"robertmartin8/MachineLearningStocks" -> "LastAncientOne/Stock_Analysis_For_Quant"
"robertmartin8/MachineLearningStocks" -> "robertmartin8/PyPortfolioOpt"
"robertmartin8/MachineLearningStocks" -> "scorpionhiccup/StockPricePrediction"
"robertmartin8/MachineLearningStocks" -> "VivekPa/AIAlpha"
"robertmartin8/MachineLearningStocks" -> "shirosaidev/stocksight"
"robertmartin8/MachineLearningStocks" -> "VivekPa/IntroNeuralNetworks"
"robertmartin8/MachineLearningStocks" -> "hudson-and-thames/mlfinlab"
"robertmartin8/MachineLearningStocks" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading"
"robertmartin8/MachineLearningStocks" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"robertmartin8/MachineLearningStocks" -> "cuemacro/findatapy"
"robertmartin8/MachineLearningStocks" -> "ranaroussi/qtpylib"
"robertmartin8/MachineLearningStocks" -> "jasonstrimpel/volatility-trading"
"robertmartin8/MachineLearningStocks" -> "huseinzol05/Stock-Prediction-Models"
"BenjiKCF/Neural-Net-with-Financial-Time-Series-Data" -> "tgjeon/TensorFlow-Tutorials-for-Time-Series" ["e"=1]
"BenjiKCF/Neural-Net-with-Financial-Time-Series-Data" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" ["e"=1]
"BenjiKCF/Neural-Net-with-Financial-Time-Series-Data" -> "kimber-chen/Tensorflow-for-stock-prediction" ["e"=1]
"QuantEcon/QuantEcon.py" -> "rsvp/fecon235" ["e"=1]
"QuantEcon/QuantEcon.py" -> "bashtage/arch" ["e"=1]
"QuantEcon/QuantEcon.py" -> "domokane/FinancePy" ["e"=1]
"QuantEcon/QuantEcon.py" -> "LongOnly/Quantitative-Notebooks" ["e"=1]
"bashtage/linearmodels" -> "bashtage/arch" ["e"=1]
"bashtage/linearmodels" -> "OpenSourceAP/CrossSection" ["e"=1]
"cgoldberg/ystockquote" -> "hongtaocai/googlefinance"
"cgoldberg/ystockquote" -> "yahoo-finance/yahoo-finance"
"cgoldberg/ystockquote" -> "scoofy/wxStocks"
"cgoldberg/ystockquote" -> "Benny-/Yahoo-ticker-symbol-downloader"
"cgoldberg/ystockquote" -> "wzchen/stock_market_prediction"
"cgoldberg/ystockquote" -> "gurch101/StockScraper"
"cgoldberg/ystockquote" -> "jasti/Stock-Predictor"
"cgoldberg/ystockquote" -> "keon/deepstock" ["e"=1]
"cgoldberg/ystockquote" -> "fearofcode/bateman" ["e"=1]
"cgoldberg/ystockquote" -> "mdengler/stockquote"
"valeman/Awesome_Math_Books" -> "mfrdixon/ML_Finance_Codes" ["e"=1]
"Kulbear/deep-learning-nano-foundation" -> "Kulbear/stock-prediction" ["e"=1]
"python-streamz/streamz" -> "ranaroussi/pystore" ["e"=1]
"python-streamz/streamz" -> "man-group/arctic" ["e"=1]
"Blosc/bcolz" -> "man-group/arctic" ["e"=1]
"ivanseidel/Is-Now-Illegal" -> "maxbbraun/trump2cash" ["e"=1]
"Yvictor/TradingGym" -> "grananqvist/Awesome-Quant-Machine-Learning-Trading" ["e"=1]
"Yvictor/TradingGym" -> "tensortrade-org/tensortrade" ["e"=1]
"Yvictor/TradingGym" -> "cbailes/awesome-deep-trading" ["e"=1]
"Yvictor/TradingGym" -> "ranaroussi/qtpylib" ["e"=1]
"InteractiveBrokers/tws-api-public" -> "blampe/IbPy"
"InteractiveBrokers/tws-api-public" -> "erdewit/ib_insync"
"InteractiveBrokers/tws-api-public" -> "ib-controller/ib-controller"
"InteractiveBrokers/tws-api-public" -> "rudimeier/twsapi"
"InteractiveBrokers/tws-api-public" -> "areed1192/interactive-broker-python-api"
"InteractiveBrokers/tws-api-public" -> "IbcAlpha/IBC"
"InteractiveBrokers/tws-api-public" -> "jamesmawm/High-Frequency-Trading-Model-with-IB"
"InteractiveBrokers/tws-api-public" -> "jamesmawm/IB-Trading-Models-And-Backtester"
"InteractiveBrokers/tws-api-public" -> "rediar/InteractiveBrokers-Algo-Trading-API" ["e"=1]
"InteractiveBrokers/tws-api-public" -> "PythonForForex/Interactive-brokers-python-api-guide"
"InteractiveBrokers/tws-api-public" -> "ranaroussi/ezibpy"
"InteractiveBrokers/tws-api-public" -> "gofinance/ib"
"InteractiveBrokers/tws-api-public" -> "JanBoonen/TwsApiCpp"
"InteractiveBrokers/tws-api-public" -> "pilwon/node-ib"
"InteractiveBrokers/tws-api-public" -> "ryankennedyio/ib-docker"
"AlexWan/OsEngine" -> "ivopetiz/algotrading" ["e"=1]
"sirnfs/OptionSuite" -> "lambdaclass/options_backtester"
"sirnfs/OptionSuite" -> "michaelchu/optopsy"
"sirnfs/OptionSuite" -> "philipodonnell/paperbroker"
"sirnfs/OptionSuite" -> "Andrew-Reis-SMU-2022/Options_Based_Trading"
"sirnfs/OptionSuite" -> "yzoz/python-option-calculator"
"jsmidt/QuantPy" -> "GriffinAustin/pynance"
"jsmidt/QuantPy" -> "vollib/vollib"
"jsmidt/QuantPy" -> "alpha-miner/Finance-Python"
"jsmidt/QuantPy" -> "enthought/pyql"
"jsmidt/QuantPy" -> "federicomariamassari/financial-engineering"
"jsmidt/QuantPy" -> "federicomariamassari/willowtree"
"jsmidt/QuantPy" -> "quantsbin/Quantsbin"
"jsmidt/QuantPy" -> "romanmichaelpaolucci/Q-Fin"
"jsmidt/QuantPy" -> "ynouri/pysabr"
"jsmidt/QuantPy" -> "bbcho/finoptions-dev"
"jsmidt/QuantPy" -> "dbrojas/optlib"
"jsmidt/QuantPy" -> "pmorissette/ffn"
"jsmidt/QuantPy" -> "domokane/FinancePy"
"jsmidt/QuantPy" -> "google/tf-quant-finance"
"jsmidt/QuantPy" -> "MarcosCarreira/DermanPapers"
"kylejusticemagnuson/pyti" -> "Crypto-toolbox/pandas-technical-indicators"
"kylejusticemagnuson/pyti" -> "arkochhar/Technical-Indicators"
"kylejusticemagnuson/pyti" -> "peerchemist/finta"
"kylejusticemagnuson/pyti" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"kylejusticemagnuson/pyti" -> "femtotrader/pandas_talib"
"kylejusticemagnuson/pyti" -> "ChillarAnand/stocktrends"
"kylejusticemagnuson/pyti" -> "GregoryMorse/trendln"
"kylejusticemagnuson/pyti" -> "jealous/stockstats"
"kylejusticemagnuson/pyti" -> "TulipCharts/tulipy"
"kylejusticemagnuson/pyti" -> "mementum/bta-lib"
"kylejusticemagnuson/pyti" -> "joosthoeks/jhTAlib"
"kylejusticemagnuson/pyti" -> "ranaroussi/qtpylib"
"kylejusticemagnuson/pyti" -> "ematvey/pybacktest"
"kylejusticemagnuson/pyti" -> "techietrader/Trading-indicators-and-Chart-patterns"
"kylejusticemagnuson/pyti" -> "freqtrade/technical" ["e"=1]
"john-friedman/datamule-python" -> "john-friedman/SEC-Parsers"
"john-friedman/datamule-python" -> "alphanome-ai/sec-parser"
"john-friedman/datamule-python" -> "dgunning/edgartools"
"john-friedman/datamule-python" -> "jadchaar/sec-edgar-downloader"
"john-friedman/datamule-python" -> "janlukasschroeder/sec-api"
"achillesrasquinha/bulbea" -> "robertmartin8/MachineLearningStocks"
"achillesrasquinha/bulbea" -> "shirosaidev/stocksight"
"achillesrasquinha/bulbea" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"achillesrasquinha/bulbea" -> "scorpionhiccup/StockPricePrediction"
"achillesrasquinha/bulbea" -> "VivekPa/AIAlpha"
"achillesrasquinha/bulbea" -> "deependersingla/deep_trader" ["e"=1]
"achillesrasquinha/bulbea" -> "LastAncientOne/Stock_Analysis_For_Quant"
"achillesrasquinha/bulbea" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"achillesrasquinha/bulbea" -> "anfederico/clairvoyant" ["e"=1]
"achillesrasquinha/bulbea" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"achillesrasquinha/bulbea" -> "huseinzol05/Stock-Prediction-Models"
"achillesrasquinha/bulbea" -> "keon/deepstock" ["e"=1]
"achillesrasquinha/bulbea" -> "hudson-and-thames/mlfinlab"
"achillesrasquinha/bulbea" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"achillesrasquinha/bulbea" -> "cuemacro/finmarketpy"
"yzoz/python-option-calculator" -> "ChiragJhawar/ProjectReward"
"yzoz/python-option-calculator" -> "Jenniferab32/OptionAnalysis"
"yzoz/python-option-calculator" -> "AnthonyBradford/optionmatrix"
"yzoz/python-option-calculator" -> "Options-Visualizer/Options-Visualizer.github.io"
"yzoz/python-option-calculator" -> "samuelfu/TradingBot"
"yzoz/python-option-calculator" -> "Robin-Guilliou/Option-Pricing"
"yzoz/python-option-calculator" -> "hfwebbed/Stock-Option-Analytics"
"yzoz/python-option-calculator" -> "fanzhenya/options_lab"
"hayatoy/ml-forex-prediction" -> "noootown/Forex-DQN"
"hayatoy/ml-forex-prediction" -> "iancamleite/prediciting-binary-options"
"hayatoy/ml-forex-prediction" -> "PythonProgramming/Pattern-Recognition-for-Forex-Trading"
"hayatoy/ml-forex-prediction" -> "jonromero/forex_algotrading"
"hayatoy/ml-forex-prediction" -> "ExcViral/adaptive-forex-forecast"
"hayatoy/ml-forex-prediction" -> "cenkcorapci/forex-prediction"
"hayatoy/ml-forex-prediction" -> "RiccardoM/Forex-and-Stock-Python-Pattern-Recognizer"
"hayatoy/ml-forex-prediction" -> "hootnot/oandapyV20-examples"
"hayatoy/ml-forex-prediction" -> "edeane/forex"
"hayatoy/ml-forex-prediction" -> "MikaelFuresjo/ImundboQuant"
"hayatoy/ml-forex-prediction" -> "mhallsmoore/qsforex"
"hayatoy/ml-forex-prediction" -> "harveybc/gym-fx" ["e"=1]
"hayatoy/ml-forex-prediction" -> "PeterMalkin/oandapybot"
"hayatoy/ml-forex-prediction" -> "theclai/ForexEA"
"llSourcell/How-to-Predict-Stock-Prices-Easily-Demo" -> "etai83/lstm_stock_prediction" ["e"=1]
"llSourcell/How-to-Predict-Stock-Prices-Easily-Demo" -> "kimber-chen/Tensorflow-for-stock-prediction" ["e"=1]
"llSourcell/How-to-Predict-Stock-Prices-Easily-Demo" -> "AndysDeepAbstractions/How-to-Predict-Stock-Prices-Easily-Demo" ["e"=1]
"llSourcell/How-to-Predict-Stock-Prices-Easily-Demo" -> "scorpionhiccup/StockPricePrediction" ["e"=1]
"guillaume-chevalier/seq2seq-signal-prediction" -> "tgjeon/TensorFlow-Tutorials-for-Time-Series" ["e"=1]
"quandl/quandl-python" -> "Nasdaq/data-link-python"
"quandl/quandl-python" -> "cuemacro/findatapy"
"quandl/quandl-python" -> "quantopian/pyfolio"
"quandl/quandl-python" -> "pydata/pandas-datareader"
"quandl/quandl-python" -> "cuemacro/finmarketpy"
"quandl/quandl-python" -> "yhilpisch/py4fi"
"quandl/quandl-python" -> "gbeced/pyalgotrade"
"quandl/quandl-python" -> "quantopian/alphalens"
"quandl/quandl-python" -> "pmorissette/ffn"
"quandl/quandl-python" -> "addisonlynch/iexfinance"
"quandl/quandl-python" -> "ranaroussi/qtpylib"
"quandl/quandl-python" -> "mhallsmoore/qstrader"
"quandl/quandl-python" -> "rsvp/fecon235"
"quandl/quandl-python" -> "mortada/fredapi"
"quandl/quandl-python" -> "quantopian/empyrical"
"microsoft/MarS" -> "YOYZHANG/open-source-ai-weekly" ["e"=1]
"microsoft/MarS" -> "microsoft/RD-Agent" ["e"=1]
"microsoft/MarS" -> "TradeMaster-NTU/TradeMaster"
"microsoft/MarS" -> "bklieger-groq/stockbot-on-groq" ["e"=1]
"microsoft/MarS" -> "pipiku915/FinMem-LLM-StockTrading" ["e"=1]
"microsoft/MarS" -> "AI4Finance-Foundation/FinRobot"
"microsoft/MarS" -> "microsoft/PromptWizard" ["e"=1]
"microsoft/MarS" -> "edtechre/pybroker"
"microsoft/MarS" -> "wangzhe3224/awesome-systematic-trading"
"microsoft/MarS" -> "RL-MLDM/alphagen" ["e"=1]
"microsoft/MarS" -> "LLMQuant/quant-wiki" ["e"=1]
"microsoft/MarS" -> "OpenBB-finance/openbb-agents"
"microsoft/MarS" -> "DulyHao/AlphaForge" ["e"=1]
"microsoft/MarS" -> "SJTU-DMTai/StockMixer" ["e"=1]
"microsoft/MarS" -> "The-FinAI/PIXIU" ["e"=1]
"business-science/awesome-generative-ai-data-scientist" -> "business-science/pytimetk" ["e"=1]
"business-science/awesome-generative-ai-data-scientist" -> "quant-science/sunday-quant-scientist" ["e"=1]
"business-science/awesome-generative-ai-data-scientist" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" ["e"=1]
"quickfixgo/quickfix" -> "gofinance/ib" ["e"=1]
"noootown/Forex-DQN" -> "hayatoy/ml-forex-prediction"
"noootown/Forex-DQN" -> "harveybc/gym-fx" ["e"=1]
"noootown/Forex-DQN" -> "kayuksel/forex-rl-challenge" ["e"=1]
"noootown/Forex-DQN" -> "rrguardo/market_predictor_cnn"
"noootown/Forex-DQN" -> "Kostis-S-Z/trading-rl" ["e"=1]
"noootown/Forex-DQN" -> "cenkcorapci/forex-prediction"
"noootown/Forex-DQN" -> "jonromero/forex_algotrading"
"noootown/Forex-DQN" -> "ExcViral/adaptive-forex-forecast"
"noootown/Forex-DQN" -> "6-Billionaires/trading-gym" ["e"=1]
"noootown/Forex-DQN" -> "miroblog/tf_deep_rl_trader" ["e"=1]
"noootown/Forex-DQN" -> "iancamleite/prediciting-binary-options"
"noootown/Forex-DQN" -> "kreukle/Q-learning-NN"
"noootown/Forex-DQN" -> "zbanga/FXCM_currency"
"noootown/Forex-DQN" -> "henrybyhee/TradingTensors" ["e"=1]
"noootown/Forex-DQN" -> "PythonProgramming/Pattern-Recognition-for-Forex-Trading"
"BlackArbsCEO/Mixture_Models" -> "BlackArbsCEO/synthetic_time_series"
"BlackArbsCEO/Mixture_Models" -> "BlackArbsCEO/iex_intraday_equity_downloader_public"
"christsaizyt/US-Stock-Market-Prediction-by-LSTM" -> "blockchain99/stock-predict-by-RNN-LSTM"
"erdewit/tws_async" -> "rudimeier/twstools"
"bklieger-groq/stockbot-on-groq" -> "microsoft/MarS" ["e"=1]
"bklieger-groq/stockbot-on-groq" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"hackingthemarkets/interactive-brokers-web-api" -> "hackingthemarkets/ai-trading-agent"
"hackingthemarkets/interactive-brokers-web-api" -> "hackingthemarkets/gemini-multimodal-structured-extraction"
"hackingthemarkets/interactive-brokers-web-api" -> "hackingthemarkets/tradingview-interactive-brokers"
"hackingthemarkets/interactive-brokers-web-api" -> "Voyz/ibeam"
"timestocome/Test-stock-prediction-algorithms" -> "26hzhang/StockPrediction"
"timestocome/Test-stock-prediction-algorithms" -> "Vaibhav/Stock-Analysis"
"timestocome/Test-stock-prediction-algorithms" -> "happynoom/DeepTrade"
"timestocome/Test-stock-prediction-algorithms" -> "LiamConnell/deep-algotrading" ["e"=1]
"timestocome/Test-stock-prediction-algorithms" -> "NGYB/Stocks"
"timestocome/Test-stock-prediction-algorithms" -> "christsaizyt/US-Stock-Market-Prediction-by-LSTM"
"timestocome/Test-stock-prediction-algorithms" -> "duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network"
"timestocome/Test-stock-prediction-algorithms" -> "doncat99/StockRecommendSystem"
"timestocome/Test-stock-prediction-algorithms" -> "NourozR/Stock-Price-Prediction-LSTM"
"timestocome/Test-stock-prediction-algorithms" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"timestocome/Test-stock-prediction-algorithms" -> "dzitkowskik/StockPredictionRNN"
"timestocome/Test-stock-prediction-algorithms" -> "thedimlebowski/Trading-Gym" ["e"=1]
"timestocome/Test-stock-prediction-algorithms" -> "giladbi/algorithmic-trading" ["e"=1]
"timestocome/Test-stock-prediction-algorithms" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"timestocome/Test-stock-prediction-algorithms" -> "robertmartin8/MachineLearningStocks"
"himanshu2406/Algo.Py" -> "ivebotunac/PrimoGPT"
"himanshu2406/Algo.Py" -> "Morritse/SentimenTA"
"himanshu2406/Algo.Py" -> "AmpyFin/ampyfin"
"himanshu2406/Algo.Py" -> "austin-starks/FinAnGPT-Pro"
"himanshu2406/Algo.Py" -> "psemdel/py-trading-bot"
"himanshu2406/Algo.Py" -> "cenab/MSTO"
"himanshu2406/Algo.Py" -> "russs123/backtests"
"himanshu2406/Algo.Py" -> "QubitQuants/vectorbt_pro_tutorials"
"himanshu2406/Algo.Py" -> "sesto-dev/metatrader5-quant-server-python"
"himanshu2406/Algo.Py" -> "Dze237/flutter_inapp_purchase"
"AlanForester/IQOption-Bot-Trade-System" -> "arun-mansa/tradingbot"
"LouisScorpio/datamining" -> "quantzzh/dlstock" ["e"=1]
"LouisScorpio/datamining" -> "hichenway/stock_predict_with_LSTM"
"LouisScorpio/datamining" -> "kimber-chen/Tensorflow-for-stock-prediction"
"LouisScorpio/datamining" -> "BUPTLdy/Sentiment-Analysis" ["e"=1]
"LouisScorpio/datamining" -> "CasiaFan/time_seires_prediction_using_lstm"
"LouisScorpio/datamining" -> "lilianweng/stock-rnn"
"LouisScorpio/datamining" -> "chengstone/LotteryPredict"
"LouisScorpio/datamining" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"LouisScorpio/datamining" -> "polyaxon/haupt"
"LouisScorpio/datamining" -> "jimenbian/stock-rnn"
"LouisScorpio/datamining" -> "tencia/stocks_rnn"
"LouisScorpio/datamining" -> "neelabhpant/Deep-Learning-in-Python"
"Harvey-Sun/World_Quant_Alphas" -> "yli188/WorldQuant_alpha101_code" ["e"=1]
"AmpyFin/ampyfin" -> "cenab/MSTO"
"AmpyFin/ampyfin" -> "Morritse/SentimenTA"
"AmpyFin/ampyfin" -> "himanshu2406/Algo.Py"
"AmpyFin/ampyfin" -> "ivebotunac/PrimoGPT"
"AmpyFin/ampyfin" -> "tg12/Market-Pressure-Analyzer"
"AmpyFin/ampyfin" -> "PFund-Software-Ltd/pytrade.org"
"AmpyFin/ampyfin" -> "tyrneh/options-implied-probability"
"AmpyFin/ampyfin" -> "r0fls/soad"
"AmpyFin/ampyfin" -> "sesto-dev/metatrader5-quant-server-python"
"business-science/free-ai-tips" -> "business-science/pytimetk" ["e"=1]
"business-science/free-ai-tips" -> "quant-science/sunday-quant-scientist" ["e"=1]
"etai83/lstm_stock_prediction" -> "AndysDeepAbstractions/How-to-Predict-Stock-Prices-Easily-Demo"
"etai83/lstm_stock_prediction" -> "llSourcell/How-to-Predict-Stock-Prices-Easily-Demo" ["e"=1]
"etai83/lstm_stock_prediction" -> "llSourcell/How-to-Generate-Art-Demo" ["e"=1]
"etai83/lstm_stock_prediction" -> "avhirupc/Stock-Market-Prediction-Challenge" ["e"=1]
"andrewkittredge/financial_fundamentals" -> "datasets/edgar"
"andrewkittredge/financial_fundamentals" -> "lukerosiak/pysec"
"andrewkittredge/financial_fundamentals" -> "tooksoi/ScraXBRL"
"andrewkittredge/financial_fundamentals" -> "altova/sec-xbrl"
"andrewkittredge/financial_fundamentals" -> "altova/SECDB"
"andrewkittredge/financial_fundamentals" -> "Arelle/EdgarRenderer"
"andrewkittredge/financial_fundamentals" -> "greedo/python-xbrl"
"andrewkittredge/financial_fundamentals" -> "calcbench/python_api_client"
"andrewkittredge/financial_fundamentals" -> "eliangcs/pystock-crawler"
"uclatommy/tweetfeels" -> "jasti/Stock-Predictor" ["e"=1]
"anthonyng2/FX-Trading-with-Python-and-Oanda" -> "dpf205/python-trading-algo-oanda-api"
"0xfdf/toraniko" -> "beatzxbt/bybit-smm" ["e"=1]
"0xfdf/toraniko" -> "beatzxbt/mm-toolbox" ["e"=1]
"0xfdf/toraniko" -> "hudson-and-thames/arbitragelab"
"0xfdf/toraniko" -> "ArturSepp/QuantInvestStrats"
"0xfdf/toraniko" -> "nkaz001/hftbacktest" ["e"=1]
"0xfdf/toraniko" -> "0xFaust12/alt_data_factor_research"
"0xfdf/toraniko" -> "cvxgrp/cvxportfolio"
"0xfdf/toraniko" -> "skfolio/skfolio"
"0xfdf/toraniko" -> "gjimzhou/MTH9879-Market-Microstructure-Models" ["e"=1]
"0xfdf/toraniko" -> "hansbuehler/deephedging"
"0xfdf/toraniko" -> "jshellen/HFT" ["e"=1]
"0xfdf/toraniko" -> "rolling-panda-san/notebooks"
"0xfdf/toraniko" -> "robcarver17/pysystemtrade"
"0xfdf/toraniko" -> "javifalces/HFTFramework" ["e"=1]
"0xfdf/toraniko" -> "microprediction/precise" ["e"=1]
"0xFaust12/alt_data_factor_research" -> "andrewlfc7/funding-arb-bot" ["e"=1]
"ericcccsliu/imc-prosperity-2" -> "jmerle/imc-prosperity-2"
"ericcccsliu/imc-prosperity-2" -> "ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal"
"ericcccsliu/imc-prosperity-2" -> "pe049395/IMC-Prosperity-2024"
"ericcccsliu/imc-prosperity-2" -> "gabsens/IMC-Prosperity-2-Manual"
"ericcccsliu/imc-prosperity-2" -> "jmerle/imc-prosperity-3-backtester"
"ericcccsliu/imc-prosperity-2" -> "jmerle/imc-prosperity-3-visualizer"
"ericcccsliu/imc-prosperity-2" -> "jmerle/imc-prosperity-2-backtester"
"ericcccsliu/imc-prosperity-2" -> "nicolassinott/IMC_Prosperity"
"harveybc/gym-fx" -> "noootown/Forex-DQN" ["e"=1]
"Kulbear/stock-prediction" -> "kimber-chen/Tensorflow-for-stock-prediction"
"Kulbear/stock-prediction" -> "dzitkowskik/StockPredictionRNN"
"Kulbear/stock-prediction" -> "tencia/stocks_rnn"
"Kulbear/stock-prediction" -> "timestocome/Test-stock-prediction-algorithms"
"Kulbear/stock-prediction" -> "etai83/lstm_stock_prediction"
"bcwik9/robinhood-on-rails" -> "edwardlai3582/RobInDaHood"
"bcwik9/robinhood-on-rails" -> "rememberlenny/robinhood-ruby"
"bcwik9/robinhood-on-rails" -> "s0up/robinhood-electron"
"mp2893/medgan" -> "ratschlab/RGAN" ["e"=1]
"finmath/finmath-lib" -> "OpenSourceRisk/Engine" ["e"=1]
"finmath/finmath-lib" -> "haozhangphd/QuantLib-noBoost" ["e"=1]
"finmath/finmath-lib" -> "LechGrzelak/QuantFinanceBook" ["e"=1]
"quantbelt/ib_fundamental" -> "ClimberMel/ib_tools"
"KVignesh122/AssetNewsSentimentAnalyzer" -> "0xFaust12/alt_data_factor_research"
"gyanesh-m/Sentiment-analysis-of-financial-news-data" -> "rohanag/StockMarketSentimentAnalysis"
"gyanesh-m/Sentiment-analysis-of-financial-news-data" -> "jasonyip184/StockSentimentTrading"
"narenkram/steadfast-monorepo" -> "narenkram/steadfast-app"
"upstox/upstox-nodejs" -> "upstox/upstox-java"
"Omar-Karimov/ChartScanAI" -> "zeta-zetra/chart_patterns"
"tkim/emsx_api_repository" -> "tkim/emsx_api_doc"
"tkim/emsx_api_repository" -> "pricingmonkey/blpapi-web"
"JamesPNacino/Fundamental-Stock-Analysis-Intrinsic-Value-And-SEC-Financial-Statement-Data-Download" -> "hjones20/fundamental-analysis"
"alpha-miner/alpha-mind" -> "alpha-miner/portfolio-optimizer"
"alpha-miner/alpha-mind" -> "wegamekinglc/AlgoTrading"
"alpha-miner/alpha-mind" -> "xingetouzi/jaqs-fxdayu" ["e"=1]
"alpha-miner/alpha-mind" -> "alpha-miner/Finance-Python"
"alpha-miner/alpha-mind" -> "marketneutral/alphatools"
"alpha-miner/alpha-mind" -> "iLampard/WindAdapter"
"alpha-miner/alpha-mind" -> "wegamekinglc/VisualPortfolio"
"MicroPyramid/docker-box" -> "MicroPyramid/microurl"
"MicroPyramid/docker-box" -> "MicroPyramid/django-webpacker"
"MicroPyramid/docker-box" -> "MicroPyramid/django-simple-pagination"
"MicroPyramid/docker-box" -> "MicroPyramid/django-email-gateway"
"MicroPyramid/docker-box" -> "MicroPyramid/django-web-profiler"
"MicroPyramid/docker-box" -> "MicroPyramid/django-simple-forum"
"MicroPyramid/docker-box" -> "MicroPyramid/docker-box"
"MicroPyramid/docker-box" -> "MicroPyramid/deploy-python"
"MicroPyramid/docker-box" -> "MicroPyramid/django-seo"
"MicroPyramid/docker-box" -> "MicroPyramid/microstorage"
"MicroPyramid/docker-box" -> "MicroPyramid/Mongo-Slice"
"MicroPyramid/docker-box" -> "MicroPyramid/fetch-tweets"
"MicroPyramid/docker-box" -> "MicroPyramid/microsocial"
"MicroPyramid/docker-box" -> "MicroPyramid/MicroSite"
"MicroPyramid/docker-box" -> "MicroPyramid/python-validate"
"sureshja/ThinkOrSwim" -> "RyanHendricks/Thinkorswim-Indicators"
"pcaspers/Quantuccia" -> "eddelbuettel/rcppquantuccia"
"MicroPyramid/django-webpacker" -> "MicroPyramid/django-simple-pagination"
"MicroPyramid/django-webpacker" -> "MicroPyramid/microurl"
"MicroPyramid/django-webpacker" -> "MicroPyramid/django-email-gateway"
"MicroPyramid/django-webpacker" -> "MicroPyramid/django-web-profiler"
"MicroPyramid/django-webpacker" -> "MicroPyramid/docker-box"
"MicroPyramid/django-webpacker" -> "MicroPyramid/django-simple-forum"
"MicroPyramid/django-webpacker" -> "MicroPyramid/python-validate"
"MicroPyramid/django-webpacker" -> "MicroPyramid/gitlab-webhook-django"
"MicroPyramid/django-webpacker" -> "MicroPyramid/django-seo"
"MicroPyramid/django-webpacker" -> "MicroPyramid/pietrack"
"MicroPyramid/django-webpacker" -> "MicroPyramid/deploy-python"
"MicroPyramid/django-webpacker" -> "MicroPyramid/microstorage"
"MicroPyramid/django-webpacker" -> "MicroPyramid/Mongo-Slice"
"MicroPyramid/django-webpacker" -> "MicroPyramid/fetch-tweets"
"narenkram/steadfast-app" -> "Tapanhaz/MiniScalper_UI"
"mccgr/edgar" -> "iangow/wrds_pg"
"pusj/LSTM-Time-Series-Analysis-using-Tensorflow" -> "akash13singh/LSTM_TimeSeries"
"Jon-F-Wood/CrossOver-Trading-Strategy" -> "brucelinker/EasyLanguage"
"Jon-F-Wood/CrossOver-Trading-Strategy" -> "activequant/easylanguage_scripts"
"Jon-F-Wood/CrossOver-Trading-Strategy" -> "ht-tradestation/kbb-sqz-macd"
"Jon-F-Wood/CrossOver-Trading-Strategy" -> "ScottfreeLLC/TradeStation"
"yammypotato/Thinkorswim-Scripts" -> "hwrdprkns/ThinkOrSwim"
"rrguardo/market_predictor_cnn" -> "TaifQureshi/Forex-Lstm"
"CodeUpdaterBot/ClickUi" -> "austin-starks/FinAnGPT-Pro" ["e"=1]
"wagenaartje/stocks.js" -> "zackurben/alphavantage"
"ccxt/ccxt" -> "mementum/backtrader" ["e"=1]
"ccxt/ccxt" -> "quantopian/zipline" ["e"=1]
"ccxt/ccxt" -> "TA-Lib/ta-lib-python" ["e"=1]
"ccxt/ccxt" -> "wilsonfreitas/awesome-quant" ["e"=1]
"freqtrade/freqtrade" -> "OpenBB-finance/OpenBB" ["e"=1]
"freqtrade/freqtrade" -> "mementum/backtrader" ["e"=1]
"freqtrade/freqtrade" -> "wilsonfreitas/awesome-quant" ["e"=1]
"freqtrade/freqtrade" -> "quantopian/zipline" ["e"=1]
"freqtrade/freqtrade" -> "microsoft/qlib" ["e"=1]
"freqtrade/freqtrade" -> "QuantConnect/Lean" ["e"=1]
"freqtrade/freqtrade" -> "stefan-jansen/machine-learning-for-trading" ["e"=1]
"ranaroussi/yfinance" -> "mementum/backtrader"
"ranaroussi/yfinance" -> "wilsonfreitas/awesome-quant"
"ranaroussi/yfinance" -> "TA-Lib/ta-lib-python"
"ranaroussi/yfinance" -> "ranaroussi/quantstats"
"ranaroussi/yfinance" -> "OpenBB-finance/OpenBB"
"ranaroussi/yfinance" -> "twopirllc/pandas-ta"
"ranaroussi/yfinance" -> "quantopian/zipline"
"ranaroussi/yfinance" -> "microsoft/qlib"
"ranaroussi/yfinance" -> "RomelTorres/alpha_vantage"
"ranaroussi/yfinance" -> "kernc/backtesting.py"
"ranaroussi/yfinance" -> "quantopian/pyfolio"
"ranaroussi/yfinance" -> "JerBouma/FinanceDatabase"
"ranaroussi/yfinance" -> "matplotlib/mplfinance"
"ranaroussi/yfinance" -> "robertmartin8/PyPortfolioOpt"
"ranaroussi/yfinance" -> "pydata/pandas-datareader"
"google/patents-public-data" -> "USPTO/PatentPublicData"
"google/patents-public-data" -> "ip-tools/python-epo-ops-client"
"google/patents-public-data" -> "iamlemec/fastpat"
"google/patents-public-data" -> "KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data"
"google/patents-public-data" -> "AI-Growth-Lab/PatentSBERTa"
"google/patents-public-data" -> "ip-tools/patzilla"
"google/patents-public-data" -> "jiehsheng/PatentBERT"
"google/patents-public-data" -> "cverluise/PatCit"
"google/patents-public-data" -> "ip-tools/uspto-opendata-python"
"google/patents-public-data" -> "wenyalintw/Google-Patents-Scraper"
"google/patents-public-data" -> "funginstitute/patentprocessor"
"google/patents-public-data" -> "ryanlstevens/google_patent_scraper"
"google/patents-public-data" -> "parkerhancock/patent_client"
"google/patents-public-data" -> "daneads/pypatent"
"google/patents-public-data" -> "CNIPA/PatentDatabases"
"LLMQuant/quant-wiki" -> "TradeMaster-NTU/TradeMaster" ["e"=1]
"LLMQuant/quant-wiki" -> "paperswithbacktest/awesome-systematic-trading" ["e"=1]
"LLMQuant/quant-wiki" -> "microsoft/MarS" ["e"=1]
"lilianweng/stock-rnn" -> "VivekPa/AIAlpha"
"lilianweng/stock-rnn" -> "dzitkowskik/StockPredictionRNN"
"lilianweng/stock-rnn" -> "jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction"
"lilianweng/stock-rnn" -> "scorpionhiccup/StockPricePrediction"
"lilianweng/stock-rnn" -> "Ceruleanacg/Personae" ["e"=1]
"lilianweng/stock-rnn" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction"
"lilianweng/stock-rnn" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"lilianweng/stock-rnn" -> "achillesrasquinha/bulbea"
"lilianweng/stock-rnn" -> "borisbanushev/stockpredictionai"
"lilianweng/stock-rnn" -> "shirosaidev/stocksight"
"lilianweng/stock-rnn" -> "hichenway/stock_predict_with_LSTM"
"lilianweng/stock-rnn" -> "deependersingla/deep_trader" ["e"=1]
"lilianweng/stock-rnn" -> "huseinzol05/Stock-Prediction-Models"
"lilianweng/stock-rnn" -> "kh-kim/stock_market_reinforcement_learning" ["e"=1]
"lilianweng/stock-rnn" -> "NourozR/Stock-Price-Prediction-LSTM"
"dedwards25/Python_Option_Pricing" -> "MarcosCarreira/DermanPapers"
"dedwards25/Python_Option_Pricing" -> "robcarver17/pysystemtrade_examples"
"dedwards25/Python_Option_Pricing" -> "robcarver17/systematictradingexamples"
"dedwards25/Python_Option_Pricing" -> "Finance-Hub/FinanceHub"
"dedwards25/Python_Option_Pricing" -> "LongOnly/Quantitative-Notebooks"
"dedwards25/Python_Option_Pricing" -> "rsvp/fecon235"
"dedwards25/Python_Option_Pricing" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"dedwards25/Python_Option_Pricing" -> "dbrojas/optlib"
"dedwards25/Python_Option_Pricing" -> "vollib/vollib"
"dedwards25/Python_Option_Pricing" -> "boyac/pyOptionPricing"
"dedwards25/Python_Option_Pricing" -> "jasonstrimpel/volatility-trading"
"dedwards25/Python_Option_Pricing" -> "quantsbin/Quantsbin"
"dedwards25/Python_Option_Pricing" -> "ynouri/pysabr"
"dedwards25/Python_Option_Pricing" -> "jsmidt/QuantPy"
"dedwards25/Python_Option_Pricing" -> "domokane/FinancePy"
"ryanmccrickerd/rough_bergomi" -> "bstemper/deep_rough_calibration"
"ryanmccrickerd/rough_bergomi" -> "svenhsia/Calibrating-Rough-Volatility-Models-with-Deep-Learning"
"ryanmccrickerd/rough_bergomi" -> "sigurdroemer/rough_volatility"
"ryanmccrickerd/rough_bergomi" -> "RoughStochVol/rBergomi"
"ryanmccrickerd/rough_bergomi" -> "amuguruza/NN-StochVol-Calibrations"
"erdewit/ib_insync" -> "IbcAlpha/IBC"
"erdewit/ib_insync" -> "ib-api-reloaded/ib_async"
"erdewit/ib_insync" -> "blampe/IbPy"
"erdewit/ib_insync" -> "robcarver17/pysystemtrade"
"erdewit/ib_insync" -> "jamesmawm/High-Frequency-Trading-Model-with-IB"
"erdewit/ib_insync" -> "ranaroussi/qtpylib"
"erdewit/ib_insync" -> "ib-controller/ib-controller"
"erdewit/ib_insync" -> "Voyz/ibeam"
"erdewit/ib_insync" -> "InteractiveBrokers/tws-api-public"
"erdewit/ib_insync" -> "brndnmtthws/thetagang"
"erdewit/ib_insync" -> "areed1192/interactive-broker-python-api"
"erdewit/ib_insync" -> "hudson-and-thames/mlfinlab"
"erdewit/ib_insync" -> "mementum/backtrader"
"erdewit/ib_insync" -> "ranaroussi/quantstats"
"erdewit/ib_insync" -> "polakowo/vectorbt"
"24mlight/A_Share_investment_Agent" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"vprusso/youtube_tutorials" -> "areed1192/sigma_coding_youtube" ["e"=1]
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "austin-starks/FinAnGPT-Pro" ["e"=1]
"business-science/ai-data-science-team" -> "business-science/pytimetk" ["e"=1]
"business-science/ai-data-science-team" -> "quant-science/sunday-quant-scientist" ["e"=1]
"business-science/ai-data-science-team" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" ["e"=1]
"maxim5/time-series-machine-learning" -> "doncat99/StockRecommendSystem" ["e"=1]
"ndrplz/ConvLSTM_pytorch" -> "yangwohenmai/LSTM" ["e"=1]
"ndrplz/ConvLSTM_pytorch" -> "nicodjimenez/lstm" ["e"=1]
"atreadw1492/yahoo_fin" -> "dpguthrie/yahooquery"
"ynouri/pysabr" -> "GriffinAustin/pynance"
"ynouri/pysabr" -> "federicomariamassari/willowtree"
"ynouri/pysabr" -> "romanmichaelpaolucci/Q-Fin"
"ynouri/pysabr" -> "bbcho/finoptions-dev"
"ynouri/pysabr" -> "federicomariamassari/financial-engineering"
"ynouri/pysabr" -> "vollib/vollib"
"ynouri/pysabr" -> "alpha-miner/Finance-Python"
"ynouri/pysabr" -> "dbrojas/optlib"
"ynouri/pysabr" -> "quantsbin/Quantsbin"
"ynouri/pysabr" -> "jsmidt/QuantPy"
"ynouri/pysabr" -> "enthought/pyql"
"ynouri/pysabr" -> "pmorissette/ffn"
"ynouri/pysabr" -> "domokane/FinancePy"
"Rajat-dhyani/Stock-Price-Predictor" -> "scorpionhiccup/StockPricePrediction"
"Rajat-dhyani/Stock-Price-Predictor" -> "JordiCorbilla/stock-prediction-deep-neural-learning"
"Rajat-dhyani/Stock-Price-Predictor" -> "LastAncientOne/Deep_Learning_Machine_Learning_Stock"
"Rajat-dhyani/Stock-Price-Predictor" -> "pushpendughosh/Stock-market-forecasting"
"Rajat-dhyani/Stock-Price-Predictor" -> "nityansuman/warren"
"Rajat-dhyani/Stock-Price-Predictor" -> "NourozR/Stock-Price-Prediction-LSTM"
"Rajat-dhyani/Stock-Price-Predictor" -> "duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network"
"Rajat-dhyani/Stock-Price-Predictor" -> "venky14/Stock-Market-Analysis-and-Prediction"
"Rajat-dhyani/Stock-Price-Predictor" -> "timestocome/Test-stock-prediction-algorithms"
"Rajat-dhyani/Stock-Price-Predictor" -> "dzitkowskik/StockPredictionRNN"
"Rajat-dhyani/Stock-Price-Predictor" -> "robertmartin8/MachineLearningStocks"
"Rajat-dhyani/Stock-Price-Predictor" -> "Albert-Z-Guo/Deep-Reinforcement-Stock-Trading" ["e"=1]
"Rajat-dhyani/Stock-Price-Predictor" -> "VivekPa/IntroNeuralNetworks"
"scrtlabs/catalyst" -> "ranaroussi/qtpylib" ["e"=1]
"scrtlabs/catalyst" -> "gbeced/pyalgotrade" ["e"=1]
"scrtlabs/catalyst" -> "quantopian/zipline" ["e"=1]
"scrtlabs/catalyst" -> "hudson-and-thames/mlfinlab" ["e"=1]
"scrtlabs/catalyst" -> "mhallsmoore/qstrader" ["e"=1]
"scrtlabs/catalyst" -> "cuemacro/finmarketpy" ["e"=1]
"kokspflanze/alpha-vantage-api" -> "joseraul/alpha-vantage-api"
"zackurben/alphavantage" -> "wagenaartje/stocks.js"
"zackurben/alphavantage" -> "prediqtiv/alpha-vantage-cookbook"
"zackurben/alphavantage" -> "IBM/watson-stock-advisor"
"zackurben/alphavantage" -> "kokspflanze/alpha-vantage-api"
"zackurben/alphavantage" -> "zackurben/stocks"
"virattt/ai-financial-agent" -> "virattt/financial-datasets" ["e"=1]
"virattt/ai-financial-agent" -> "virattt/financial-agent" ["e"=1]
"virattt/ai-financial-agent" -> "hackingthemarkets/interactive-brokers-web-api" ["e"=1]
"casact/chainladder-python" -> "mages/ChainLadder"
"casact/chainladder-python" -> "lifelib-dev/lifelib"
"casact/chainladder-python" -> "casact/FASLR"
"casact/chainladder-python" -> "genedan/actuarial-foss"
"casact/chainladder-python" -> "casact/tryangle"
"casact/chainladder-python" -> "MHaringa/insurancerating"
"casact/chainladder-python" -> "franciscogarate/pyliferisk"
"casact/chainladder-python" -> "mynl/aggregate"
"casact/chainladder-python" -> "acturtle/cashflower"
"casact/chainladder-python" -> "trollefson/elizur"
"casact/chainladder-python" -> "validatehealth/actuary"
"casact/chainladder-python" -> "JuliaActuary/LifeContingencies.jl"
"casact/chainladder-python" -> "casact/raw_package"
"casact/chainladder-python" -> "fumitoh/modelx"
"casact/chainladder-python" -> "ActuariesInstitute/cookbook"
"24mlight/Free_US_Investment_Agent_System" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"arkochhar/Technical-Indicators" -> "femtotrader/pandas_talib"
"arkochhar/Technical-Indicators" -> "techietrader/Trading-indicators-and-Chart-patterns"
"arkochhar/Technical-Indicators" -> "kylejusticemagnuson/pyti"
"arkochhar/Technical-Indicators" -> "jigneshpylab/ZerodhaPythonScripts"
"arkochhar/Technical-Indicators" -> "ChillarAnand/stocktrends"
"arkochhar/Technical-Indicators" -> "voice32/stock_market_indicators"
"arkochhar/Technical-Indicators" -> "philipxjm/Deep-Convolution-Stock-Technical-Analysis"
"arkochhar/Technical-Indicators" -> "Crypto-toolbox/pandas-technical-indicators"
"arkochhar/Technical-Indicators" -> "ashishkumar30/Stock_Market_Live_Trading_using_AI"
"arkochhar/Technical-Indicators" -> "BatuhanUsluel/Algorithmic-Support-and-Resistance"
"arkochhar/Technical-Indicators" -> "zerodha/pykiteconnect"
"arkochhar/Technical-Indicators" -> "day0market/support_resistance"
"arkochhar/Technical-Indicators" -> "GregoryMorse/trendln"
"arkochhar/Technical-Indicators" -> "peerchemist/finta"
"arkochhar/Technical-Indicators" -> "LastAncientOne/SimpleStockAnalysisPython"
"neurotrader888/mcpt" -> "neurotrader888/market-structure"
"neurotrader888/mcpt" -> "neurotrader888/VolatilityHawkes"
"HuaRongSAO/talib-document" -> "TA-Lib/ta-lib-python" ["e"=1]
"anfederico/gemini" -> "anfederico/stocktalk" ["e"=1]
"anfederico/gemini" -> "anfederico/clairvoyant" ["e"=1]
"anfederico/gemini" -> "quantroom-pro/cryptocurrency.backtester"
"anfederico/gemini" -> "anfederico/stockeye" ["e"=1]
"anfederico/gemini" -> "constverum/Quantdom"
"anfederico/gemini" -> "scrtlabs/catalyst" ["e"=1]
"anfederico/gemini" -> "AsyncAlgoTrading/algo-coin" ["e"=1]
"anfederico/gemini" -> "philipodonnell/paperbroker"
"anfederico/gemini" -> "ematvey/pybacktest"
"anfederico/gemini" -> "BitcoinExchangeFH/BitcoinExchangeFH" ["e"=1]
"anfederico/gemini" -> "Kismuz/btgym" ["e"=1]
"anfederico/gemini" -> "pmorissette/bt"
"anfederico/gemini" -> "ranaroussi/qtpylib"
"anfederico/gemini" -> "thedimlebowski/Trading-Gym" ["e"=1]
"anfederico/gemini" -> "peerchemist/finta"
"thalesians/tsa" -> "thalesians/bayestsa"
"thalesians/tsa" -> "thalesians/lathalesians"
"philipperemy/FX-1-Minute-Data" -> "giuse88/duka" ["e"=1]
"philipperemy/FX-1-Minute-Data" -> "cuemacro/findatapy" ["e"=1]
"philipperemy/FX-1-Minute-Data" -> "rolling-panda-san/notebooks" ["e"=1]
"philipperemy/FX-1-Minute-Data" -> "oanda/oandapy" ["e"=1]
"philipperemy/FX-1-Minute-Data" -> "hayatoy/ml-forex-prediction" ["e"=1]
"philipperemy/FX-1-Minute-Data" -> "rsheftel/pandas_market_calendars" ["e"=1]
"philipperemy/FX-1-Minute-Data" -> "fxcm/MarketData" ["e"=1]
"upstox/upstox-python" -> "tushaar82/Upstox-Algo-Trading"
"upstox/upstox-python" -> "dhan-oss/DhanHQ-py"
"upstox/upstox-python" -> "FyersDev/fyers-api-sample-code"
"upstox/upstox-python" -> "upstox/upstox-nodejs"
"upstox/upstox-python" -> "GireeshS22/upstox"
"ArvinLovegood/go-stock" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"Kismuz/btgym" -> "tensortrade-org/tensortrade" ["e"=1]
"Kismuz/btgym" -> "ranaroussi/qtpylib" ["e"=1]
"MicroPyramid/Django-CRM" -> "MicroPyramid/django-blog-it" ["e"=1]
"MicroPyramid/Django-CRM" -> "MicroPyramid/django-mfa" ["e"=1]
"MicroPyramid/Django-CRM" -> "MicroPyramid/django-web-profiler" ["e"=1]
"PacktPublishing/Python-for-Finance-Second-Edition" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"PacktPublishing/Python-for-Finance-Second-Edition" -> "PacktPublishing/Python-for-Finance-Cookbook"
"PacktPublishing/Python-for-Finance-Second-Edition" -> "jamesmawm/Mastering-Python-for-Finance-source-codes"
"PacktPublishing/Python-for-Finance-Second-Edition" -> "PacktPublishing/Hands-on-Python-for-Finance-V"
"PacktPublishing/Python-for-Finance-Second-Edition" -> "yhilpisch/dawp"
"PacktPublishing/Python-for-Finance-Second-Edition" -> "PacktPublishing/Hands-on-Python-for-Finance"
"PacktPublishing/Python-for-Finance-Second-Edition" -> "yhilpisch/py4fi"
"PacktPublishing/Python-for-Finance-Second-Edition" -> "yhilpisch/py4fi2nd"
"PacktPublishing/Python-for-Finance-Second-Edition" -> "PacktPublishing/Machine-Learning-for-Finance"
"Crypto-toolbox/pandas-technical-indicators" -> "kylejusticemagnuson/pyti"
"Crypto-toolbox/pandas-technical-indicators" -> "peerchemist/finta"
"Crypto-toolbox/pandas-technical-indicators" -> "arkochhar/Technical-Indicators"
"Crypto-toolbox/pandas-technical-indicators" -> "techietrader/Trading-indicators-and-Chart-patterns"
"Crypto-toolbox/pandas-technical-indicators" -> "femtotrader/pandas_talib"
"Crypto-toolbox/pandas-technical-indicators" -> "voice32/stock_market_indicators"
"Crypto-toolbox/pandas-technical-indicators" -> "ematvey/pybacktest"
"Crypto-toolbox/pandas-technical-indicators" -> "dysonance/Trendy"
"Crypto-toolbox/pandas-technical-indicators" -> "Crypto-toolbox/btfxwss" ["e"=1]
"Crypto-toolbox/pandas-technical-indicators" -> "jealous/stockstats"
"Crypto-toolbox/pandas-technical-indicators" -> "GregoryMorse/trendln"
"Crypto-toolbox/pandas-technical-indicators" -> "BlackArbsCEO/mixture_model_trading_public"
"Crypto-toolbox/pandas-technical-indicators" -> "marketneutral/alphatools"
"Crypto-toolbox/pandas-technical-indicators" -> "Crypto-toolbox/bitex" ["e"=1]
"Crypto-toolbox/pandas-technical-indicators" -> "Crypto-toolbox/HFT-Orderbook" ["e"=1]
"OpenActTexts/Loss-Data-Analytics" -> "ewfrees/LifeCon"
"OpenActTexts/Loss-Data-Analytics" -> "genedan/actuarial-foss"
"OpenActTexts/Loss-Data-Analytics" -> "genedan/MIES"
"OpenActTexts/Loss-Data-Analytics" -> "ewfrees/Loss-Data-Analytics-Ed1"
"SUFE-AIFLM-Lab/Fin-R1" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"dhingratul/Stock-Price-Prediction" -> "SnehJain/Deep-Neural-Networks-For-Stock-Price-Prediction"
"dhingratul/Stock-Price-Prediction" -> "matheusbfernandes/stock-market-prediction"
"dhingratul/Stock-Price-Prediction" -> "kimber-chen/Tensorflow-for-stock-prediction"
"ivebotunac/PrimoGPT" -> "himanshu2406/Algo.Py"
"ivebotunac/PrimoGPT" -> "Morritse/SentimenTA"
"ivebotunac/PrimoGPT" -> "AmpyFin/ampyfin"
"happynoom/DeepTrade" -> "happynoom/DeepTrade_keras"
"happynoom/DeepTrade" -> "timestocome/Test-stock-prediction-algorithms"
"happynoom/DeepTrade" -> "ltnguyen14/Quant_stock"
"happynoom/DeepTrade" -> "robertmartin8/MachineLearningStocks"
"shenyichen105/Deep-Reinforcement-Learning-in-Stock-Trading" -> "wywongbd/pairstrade-fyp-2019" ["e"=1]
"ucaiado/rl_trading" -> "dzitkowskik/StockPredictionRNN" ["e"=1]
"geniayuan/datasciencecoursera" -> "PlamenStilyianov/FinMathematics" ["e"=1]
"vsmolyakov/experiments_with_python" -> "christsaizyt/US-Stock-Market-Prediction-by-LSTM"
"vsmolyakov/experiments_with_python" -> "blockchain99/stock-predict-by-RNN-LSTM"
"lequant40/portfolio_allocation_js" -> "lequant40/portfolio_analytics_js"
"QuantConnect/Tutorials" -> "QuantConnect/Research"
"QuantConnect/Tutorials" -> "QuantConnect/Documentation"
"QuantConnect/Tutorials" -> "QuantConnect/lean-cli"
"QuantConnect/Tutorials" -> "PacktPublishing/Mastering-Python-for-Finance-Second-Edition"
"QuantConnect/Tutorials" -> "quantiacs-legacy/quantiacs-python"
"QuantConnect/Tutorials" -> "Auquan/Tutorials"
"QuantConnect/Tutorials" -> "QuantConnect/IBAutomater"
"QuantConnect/Tutorials" -> "alpha-miner/Finance-Python"
"QuantConnect/Tutorials" -> "PacktPublishing/Learn-Algorithmic-Trading"
"QuantConnect/Tutorials" -> "cuemacro/findatapy"
"QuantConnect/Tutorials" -> "BlackArbsCEO/mixture_model_trading_public"
"QuantConnect/Tutorials" -> "jamesmawm/Mastering-Python-for-Finance-source-codes"
"QuantConnect/Tutorials" -> "alpha-miner/alpha-mind"
"QuantConnect/Tutorials" -> "marketneutral/alphatools"
"QuantConnect/Tutorials" -> "jasonstrimpel/volatility-trading"
"ratschlab/RGAN" -> "jsyoon0823/TimeGAN"
"ratschlab/RGAN" -> "buriburisuri/timeseries_gan"
"ratschlab/RGAN" -> "proceduralia/pytorch-GAN-timeseries"
"ratschlab/RGAN" -> "LiDan456/MAD-GANs" ["e"=1]
"ratschlab/RGAN" -> "LiDan456/GAN-AD" ["e"=1]
"ratschlab/RGAN" -> "olofmogren/c-rnn-gan"
"ratschlab/RGAN" -> "fjxmlzn/DoppelGANger"
"ratschlab/RGAN" -> "numancelik34/TimeSeries-GAN"
"ratschlab/RGAN" -> "SigCGANs/Conditional-Sig-Wasserstein-GANs"
"ratschlab/RGAN" -> "gioramponi/GAN_Time_Series"
"ratschlab/RGAN" -> "atreyasha/mv-temporal-rgan"
"ratschlab/RGAN" -> "mp2893/medgan" ["e"=1]
"ratschlab/RGAN" -> "imics-lab/tts-gan"
"ratschlab/RGAN" -> "Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" ["e"=1]
"ratschlab/RGAN" -> "3778/Ward2ICU"
"QuantSoftware/QuantSoftwareToolkit" -> "tuckerbalch/QSTK"
"QuantSoftware/QuantSoftwareToolkit" -> "llazzaro/analyzer"
"QuantSoftware/QuantSoftwareToolkit" -> "johnbywater/quantdsl"
"QuantSoftware/QuantSoftwareToolkit" -> "thalesians/pythalesians"
"QuantSoftware/QuantSoftwareToolkit" -> "maihde/quant"
"QuantSoftware/QuantSoftwareToolkit" -> "panpanpandas/ultrafinance"
"QuantSoftware/QuantSoftwareToolkit" -> "lballabio/quantlib-old"
"QuantSoftware/QuantSoftwareToolkit" -> "jeffrey-liang/quantitative"
"QuantSoftware/QuantSoftwareToolkit" -> "femtotrader/pandas_talib"
"QuantSoftware/QuantSoftwareToolkit" -> "ematvey/pybacktest"
"QuantSoftware/QuantSoftwareToolkit" -> "joequant/algobroker"
"QuantSoftware/QuantSoftwareToolkit" -> "edouardpoitras/NowTrade"
"VincentTatan/ValueInvesting" -> "astro30/valinvest"
"VincentTatan/ValueInvesting" -> "dbogatic/value_investing"
"VincentTatan/ValueInvesting" -> "rbhatia46/Greenblatt-Magic-Formula-Value-Investing"
"VincentTatan/ValueInvesting" -> "euclidjda/value-investing-studies"
"hackingthemarkets/ai-trading-agent" -> "hackingthemarkets/prediction-market-assistant"
"hackingthemarkets/ai-trading-agent" -> "hackingthemarkets/interactive-brokers-web-api"
"hackingthemarkets/ai-trading-agent" -> "hackingthemarkets/prediction-markets"
"hackingthemarkets/ai-trading-agent" -> "hackingthemarkets/ai-hedge-fund"
"jessecooper/pyetrade" -> "philfoster/option_screener"
"jessecooper/pyetrade" -> "theidealist/node-etrade-api"
"jessecooper/pyetrade" -> "shikhirsingh/ETrade-API-Robo-Trading-Monkey-4-NodeJS"
"jessecooper/pyetrade" -> "haualan/etradePythonAPI"
"quantrocket-llc/quantrocket-client" -> "quantrocket-llc/codeload-demo"
"hackingthemarkets/gemini-multimodal-structured-extraction" -> "hackingthemarkets/ai-trading-agent"
"hackingthemarkets/gemini-multimodal-structured-extraction" -> "hackingthemarkets/interactive-brokers-web-api"
"haozhangphd/QuantLib-noBoost" -> "pcaspers/Quantuccia"
"haozhangphd/QuantLib-noBoost" -> "quantlibnode/quantlibnode"
"haozhangphd/QuantLib-noBoost" -> "phelps-sg/jasa" ["e"=1]
"quantrocket-llc/ibpythonic" -> "quantrocket-llc/ibapi-grease"
"quantrocket-llc/ibpythonic" -> "quantrocket-llc/zipline-extensions"
"plotly/dash-volatility-surface" -> "ymh1989/SABR_local_vol"
"plotly/dash-volatility-surface" -> "jackluo/volatility-surface"
"happynoom/DeepTrade_keras" -> "happynoom/DeepTrade"
"darwinex/DarwinexLabs" -> "fxcm/RestAPI" ["e"=1]
"joeyism/py-edgar" -> "edgarminers/python-edgar"
"joeyism/py-edgar" -> "farhadab/sec-edgar-financials"
"joeyism/py-edgar" -> "jadchaar/sec-edgar-downloader"
"joeyism/py-edgar" -> "janlukasschroeder/sec-api"
"joeyism/py-edgar" -> "alions7000/SEC-EDGAR-text"
"joeyism/py-edgar" -> "lukerosiak/pysec"
"joeyism/py-edgar" -> "sec-edgar/sec-edgar"
"joeyism/py-edgar" -> "tooksoi/ScraXBRL"
"joeyism/py-edgar" -> "andrewkittredge/financial_fundamentals"
"joeyism/py-edgar" -> "datasets/edgar"
"joeyism/py-edgar" -> "ryansmccoy/py-sec-edgar"
"joeyism/py-edgar" -> "secdatabase/SEC-XBRL-Financial-Statement-Dataset"
"joeyism/py-edgar" -> "LexPredict/openedgar"
"joeyism/py-edgar" -> "tzuhsial/edgar-10k-mda"
"joeyism/py-edgar" -> "Theling/10-K-scraper"
"lukerosiak/pysec" -> "tooksoi/ScraXBRL"
"lukerosiak/pysec" -> "altova/sec-xbrl"
"lukerosiak/pysec" -> "greedo/python-xbrl"
"lukerosiak/pysec" -> "datasets/edgar"
"lukerosiak/pysec" -> "andrewkittredge/financial_fundamentals"
"lukerosiak/pysec" -> "eliangcs/pystock-crawler"
"lukerosiak/pysec" -> "edgarminers/python-edgar"
"lukerosiak/pysec" -> "sec-edgar/sec-edgar"
"lukerosiak/pysec" -> "chrisspen/django-sec"
"lukerosiak/pysec" -> "Arelle/EdgarRenderer"
"lukerosiak/pysec" -> "Arelle/Arelle"
"lukerosiak/pysec" -> "joeyism/py-edgar"
"lukerosiak/pysec" -> "altova/SECDB"
"lukerosiak/pysec" -> "alions7000/SEC-EDGAR-text"
"lukerosiak/pysec" -> "bergant/finstr"
"philipodonnell/paperbroker" -> "sirnfs/OptionSuite"
"philipodonnell/paperbroker" -> "yzoz/python-option-calculator"
"philipodonnell/paperbroker" -> "michaelchu/optopsy"
"philipodonnell/paperbroker" -> "JamesBrofos/Odin"
"philipodonnell/paperbroker" -> "samuelfu/TradingBot"
"philipodonnell/paperbroker" -> "chinmayHundekari/optionMath"
"philipodonnell/paperbroker" -> "lambdaclass/options_backtester"
"26hzhang/StockPrediction" -> "timestocome/Test-stock-prediction-algorithms"
"26hzhang/StockPrediction" -> "philipxjm/Steward"
"26hzhang/StockPrediction" -> "dzitkowskik/StockPredictionRNN"
"doncat99/StockRecommendSystem" -> "ltnguyen14/Quant_stock"
"Chandlercjy/OnePy" -> "fja05680/pinkfish" ["e"=1]
"Chandlercjy/OnePy" -> "ematvey/pybacktest" ["e"=1]
"tg12/2025-trading-automation-scripts" -> "tg12/Market-Pressure-Analyzer"
"boyac/pyOptionPricing" -> "dedwards25/Python_Option_Pricing"
"boyac/pyOptionPricing" -> "yzoz/python-option-calculator"
"boyac/pyOptionPricing" -> "quantsbin/Quantsbin"
"boyac/pyOptionPricing" -> "lambdaclass/options_backtester"
"boyac/pyOptionPricing" -> "borisbanushev/anomaliesinoptions"
"boyac/pyOptionPricing" -> "plotly/dash-volatility-surface"
"boyac/pyOptionPricing" -> "hsjharvey/Option-Pricing"
"boyac/pyOptionPricing" -> "YuChenAmberLu/Options-Calculator"
"boyac/pyOptionPricing" -> "clf110510/stochastic-volatility"
"boyac/pyOptionPricing" -> "ChiragJhawar/ProjectReward"
"boyac/pyOptionPricing" -> "vollib/vollib"
"boyac/pyOptionPricing" -> "opendoor-labs/pyfin"
"boyac/pyOptionPricing" -> "AnthonyBradford/optionmatrix"
"jmerle/imc-prosperity-3-backtester" -> "jmerle/imc-prosperity-3-visualizer"
"jmerle/imc-prosperity-3-backtester" -> "jmerle/imc-prosperity-3-submitter"
"jmerle/imc-prosperity-3-backtester" -> "gabsens/IMC-Prosperity-2-Manual"
"alions7000/SEC-EDGAR-text" -> "edgarminers/python-edgar"
"alions7000/SEC-EDGAR-text" -> "ryansmccoy/py-sec-edgar"
"alions7000/SEC-EDGAR-text" -> "datasets/edgar"
"alions7000/SEC-EDGAR-text" -> "joeyism/py-edgar"
"alions7000/SEC-EDGAR-text" -> "lukerosiak/pysec"
"alions7000/SEC-EDGAR-text" -> "tzuhsial/edgar-10k-mda"
"alions7000/SEC-EDGAR-text" -> "rsljr/edgarParser"
"cenab/MSTO" -> "Morritse/SentimenTA"
"hwrdprkns/ThinkOrSwim" -> "sjjohns/ThinkOrSwimStudies"
"hwrdprkns/ThinkOrSwim" -> "yammypotato/Thinkorswim-Scripts"
"hwrdprkns/ThinkOrSwim" -> "RyanHendricks/Thinkorswim-Indicators"
"hwrdprkns/ThinkOrSwim" -> "sureshja/ThinkOrSwim"
"hwrdprkns/ThinkOrSwim" -> "john5223/minas"
"hwrdprkns/ThinkOrSwim" -> "bingit2/TradingView-to-ThinkorSwim"
"hwrdprkns/ThinkOrSwim" -> "dranem05/thinkscripts-pub"
"hwrdprkns/ThinkOrSwim" -> "anupambagchi/denken"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/django-webpacker"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/microurl"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/django-simple-pagination"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/django-email-gateway"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/django-simple-forum"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/docker-box"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/deploy-python"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/python-validate"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/gitlab-webhook-django"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/pietrack"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/microstorage"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/Mongo-Slice"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/fetch-tweets"
"MicroPyramid/django-web-profiler" -> "MicroPyramid/microsocial"
"velikov-mihail/AI-Powered-Scholarship" -> "velikov-mihail/AssayingAnomalies"
"Morritse/SentimenTA" -> "cenab/MSTO"
"jmerle/imc-prosperity-3-visualizer" -> "jmerle/imc-prosperity-3-backtester"
"jmerle/imc-prosperity-3-visualizer" -> "jmerle/imc-prosperity-3-submitter"
"jmerle/imc-prosperity-3-submitter" -> "jmerle/imc-prosperity-3-visualizer"
"tifoji/pyrtdc" -> "2187Nick/tos-streamlit-dashboard"
"mwaldstein/edgarWebR" -> "sewardlee337/finreportr"
"mwaldstein/edgarWebR" -> "Gunratan/edgar"
"timpalpant/go-iex" -> "lvfrazao/IEXTools"
"anthonyng2/Machine-Learning-For-Finance" -> "anthonyng2/FX-Trading-with-Python-and-Oanda"
"anthonyng2/Machine-Learning-For-Finance" -> "JCreeks/Machine-Learning-in-Finance"
"anthonyng2/Machine-Learning-For-Finance" -> "joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance"
"anthonyng2/Machine-Learning-For-Finance" -> "PacktPublishing/Machine-Learning-for-Finance"
"anthonyng2/Machine-Learning-For-Finance" -> "anthonyng2/udemy-the-complete-machine-learning-course-with-python"
"anthonyng2/Machine-Learning-For-Finance" -> "shenyichen105/Deep-Reinforcement-Learning-in-Stock-Trading" ["e"=1]
"neurotrader888/market-structure" -> "neurotrader888/mcpt"
"SravB/Algorithmic-Trading" -> "vrishank97/AlgoTrading"
"neberej/tos-client" -> "stephen-eades/tos-trade-bot"
"quantmind/dynts" -> "jeffrey-liang/quantitative"
"quantmind/dynts" -> "akarat/exchange"
"bstemper/deep_rough_calibration" -> "ryanmccrickerd/rough_bergomi"
"bstemper/deep_rough_calibration" -> "RoughStochVol/small-time_asymptotics_fractional"
"PTRRupprecht/GenHurst" -> "RyanWangZf/Hurst-exponent-R-S-analysis-"
"SolbiatiAlessandro/RNN-stocks-prediction" -> "zbanga/FXCM_currency"
"gnagel/greeks" -> "chinmayHundekari/optionMath"
"asavine/Scripting" -> "marc-henrard/algorithmic-differentiation-book"
"2187Nick/tos-streamlit-dashboard" -> "tifoji/pyrtdc"
"polyaxon/polyaxon-lib" -> "polyaxon/sdks"
"EazyDuz1t/EzOptions" -> "anvgun/Options_Analyzer"
"s0up/robinhood-api" -> "thisiskj/robinhood-trader"
"krzjoa/awesome-python-data-science" ["l"="26.07,-26.047", "c"=32]
"georgezouq/awesome-ai-in-finance" ["l"="-9.02,12.763"]
"TheAbhijeet/Django_blog" ["l"="47.785,19.831", "c"=599]
"MicroPyramid/django-blog-it" ["l"="-8.881,13.636"]
"khuangaf/CryptocurrencyPrediction" ["l"="-10.27,11.507", "c"=408]
"nityansuman/warren" ["l"="-9.224,12.808"]
"firmai/industry-machine-learning" ["l"="48.137,26.12", "c"=323]
"firmai/financial-machine-learning" ["l"="-8.982,12.745"]
"firmai/machine-learning-asset-management" ["l"="-9.066,12.866"]
"alpacahq/alpaca-trade-api-go" ["l"="-8.585,13.096"]
"alpacahq/alpaca-trade-api-js" ["l"="-8.551,13.052"]
"polygon-io/client-go" ["l"="-8.431,13.16"]
"hadrianl/ibapi" ["l"="-8.521,13.084"]
"andrewstuart/go-robinhood" ["l"="-8.506,13.112"]
"alpacahq/marketstore" ["l"="-8.774,13.033"]
"marpaia/alpaca-trade-api-cpp" ["l"="-8.48,13.142"]
"goinvest/iexcloud" ["l"="-10.975,10.632", "c"=720]
"sdcoffey/techan" ["l"="-10.856,10.639", "c"=720]
"timpalpant/go-iex" ["l"="-8.639,13.07"]
"markcheno/go-quote" ["l"="-10.903,10.606", "c"=720]
"alpacahq/alpaca-trade-api-python" ["l"="-8.74,13.031"]
"d-e-s-o/apca" ["l"="-8.45,13.175"]
"alpacahq/pymarketstore" ["l"="-8.744,13.109"]
"stefan-jansen/machine-learning-for-trading" ["l"="-8.884,12.661"]
"wilsonfreitas/awesome-quant" ["l"="-8.869,12.719"]
"AI4Finance-Foundation/FinRL" ["l"="-8.922,12.615"]
"microsoft/qlib" ["l"="-8.82,12.644"]
"je-suis-tm/quant-trading" ["l"="-8.927,12.794"]
"mementum/backtrader" ["l"="-8.808,12.765"]
"hudson-and-thames/mlfinlab" ["l"="-8.959,12.864"]
"quantopian/zipline" ["l"="-8.73,12.759"]
"QuantConnect/Lean" ["l"="-8.779,12.73"]
"ranaroussi/quantstats" ["l"="-8.9,12.851"]
"grananqvist/Awesome-Quant-Machine-Learning-Trading" ["l"="-9.043,12.81"]
"huseinzol05/Stock-Prediction-Models" ["l"="-9.037,12.672"]
"AI4Finance-Foundation/FinGPT" ["l"="-8.887,12.538"]
"kernc/backtesting.py" ["l"="-8.842,12.813"]
"polakowo/vectorbt" ["l"="-8.874,12.817"]
"man-group/dtale" ["l"="45.246,26.133", "c"=68]
"man-group/arctic" ["l"="-8.806,12.96"]
"man-group/ArcticDB" ["l"="-8.888,12.935"]
"sammchardy/python-binance" ["l"="-10.62,11.525", "c"=408]
"TA-Lib/ta-lib-python" ["l"="-8.798,12.815"]
"shirosaidev/stocksight" ["l"="-9.117,12.758"]
"achillesrasquinha/bulbea" ["l"="-9.139,12.783"]
"robertmartin8/MachineLearningStocks" ["l"="-9.11,12.827"]
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" ["l"="-9.197,12.751"]
"LastAncientOne/Stock_Analysis_For_Quant" ["l"="-9.07,12.904"]
"VivekPa/AIAlpha" ["l"="-9.111,12.795"]
"LastAncientOne/Deep_Learning_Machine_Learning_Stock" ["l"="-9.117,12.886"]
"tradytics/surpriver" ["l"="-9.054,12.891"]
"kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis" ["l"="-9.172,12.704"]
"lilianweng/stock-rnn" ["l"="-9.183,12.697"]
"scorpionhiccup/StockPricePrediction" ["l"="-9.186,12.727"]
"StockSharp/StockSharp" ["l"="-8.812,12.708"]
"borisbanushev/stockpredictionai" ["l"="-9.101,12.7"]
"tradytics/eiten" ["l"="-8.988,12.852"]
"philipxjm/Deep-Convolution-Stock-Technical-Analysis" ["l"="-9.193,12.859"]
"navjot789/online-food-ordering-system-in-php" ["l"="-9.161,12.544"]
"kaushikjadhav01/Online-Food-Ordering-Web-App" ["l"="-9.163,12.596"]
"winston-dsouza/Online-Food-Ordering-System" ["l"="10.281,-30.332", "c"=902]
"dcajasn/Riskfolio-Lib" ["l"="-8.962,12.886"]
"robertmartin8/PyPortfolioOpt" ["l"="-8.934,12.849"]
"quantopian/pyfolio" ["l"="-8.825,12.875"]
"twopirllc/pandas-ta" ["l"="-8.863,12.849"]
"ranaroussi/qtpylib" ["l"="-8.888,12.957"]
"letianzj/QuantResearch" ["l"="-8.999,12.913"]
"pmorissette/ffn" ["l"="-8.931,12.969"]
"quantopian/alphalens" ["l"="-8.874,12.874"]
"paperswithbacktest/awesome-systematic-trading" ["l"="-8.911,12.759"]
"gaganmanku96/Finding-missing-person-using-AI" ["l"="-20.46,13.154", "c"=591]
"Drakkar-Software/OctoBot" ["l"="-10.535,11.498", "c"=408]
"blankly-finance/blankly" ["l"="-8.921,12.878"]
"jesse-ai/jesse" ["l"="-10.536,11.535", "c"=408]
"pmorissette/bt" ["l"="-8.857,12.935"]
"robcarver17/pysystemtrade" ["l"="-8.877,12.913"]
"bukosabino/ta" ["l"="-8.826,12.845"]
"mhallsmoore/qstrader" ["l"="-8.819,12.918"]
"gbeced/pyalgotrade" ["l"="-8.802,12.896"]
"hummingbot/hummingbot" ["l"="-10.574,11.559", "c"=408]
"nautechsystems/nautilus_trader" ["l"="-8.847,12.765"]
"LiDan456/MAD-GANs" ["l"="52.477,14.767", "c"=569]
"ratschlab/RGAN" ["l"="-9.824,12.857"]
"jpmorganchase/python-training" ["l"="-8.966,12.698"]
"goldmansachs/gs-quant" ["l"="-8.945,12.748"]
"JerBouma/FinanceDatabase" ["l"="-8.986,12.802"]
"chrisconlan/algorithmic-trading-with-python" ["l"="-9.02,12.891"]
"mfrdixon/ML_Finance_Codes" ["l"="-9.019,12.851"]
"shashankvemuri/Finance" ["l"="-9.003,12.868"]
"OpenBB-finance/OpenBB" ["l"="-8.778,12.545"]
"cantaro86/Financial-Models-Numerical-Methods" ["l"="-8.958,12.788"]
"anthropics/courses" ["l"="40.974,0.201", "c"=7]
"google/tf-quant-finance" ["l"="-8.947,12.9"]
"domokane/FinancePy" ["l"="-8.986,12.957"]
"jamesmawm/High-Frequency-Trading-Model-with-IB" ["l"="-8.836,12.962"]
"blampe/IbPy" ["l"="-8.751,13.011"]
"rorysroes/SGX-Full-OrderBook-Tick-Data-Trading-Strategy" ["l"="-10.72,12.937", "c"=265]
"erdewit/ib_insync" ["l"="-8.748,12.978"]
"cuemacro/finmarketpy" ["l"="-8.867,12.958"]
"jasonstrimpel/volatility-trading" ["l"="-9.005,12.985"]
"Crypto-toolbox/HFT-Orderbook" ["l"="-10.653,12.935", "c"=265]
"jamesmawm/IB-Trading-Models-And-Backtester" ["l"="-8.747,13.091"]
"jamesmawm/mastering-python-for-finance-second-edition" ["l"="-9.057,13.033"]
"JerBouma/AlgorithmicTrading" ["l"="-9.059,13.009"]
"peerchemist/finta" ["l"="-8.932,12.986"]
"matplotlib/mplfinance" ["l"="-8.849,12.881"]
"Jenniferz28/Time-Series-ARIMA-XGBOOST-RNN" ["l"="45.032,24.118", "c"=166]
"hzy46/TensorFlow-Time-Series-Examples" ["l"="-9.319,12.521"]
"je-suis-tm/machine-learning" ["l"="-9.105,12.633"]
"je-suis-tm/graph-theory" ["l"="-9.11,12.661"]
"je-suis-tm/recursion-and-dynamic-programming" ["l"="-9.09,12.646"]
"jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction" ["l"="-9.203,12.596"]
"tensortrade-org/tensortrade" ["l"="-8.924,12.712"]
"r0f1/datascience" ["l"="26.069,-25.962", "c"=32]
"AI4Finance-Foundation/FinRL-Trading" ["l"="-9.556,14.855", "c"=970]
"notadamking/RLTrader" ["l"="-9.583,14.781", "c"=970]
"cbailes/awesome-deep-trading" ["l"="-9.07,12.83"]
"NourozR/Stock-Price-Prediction-LSTM" ["l"="-9.2,12.77"]
"dzitkowskik/StockPredictionRNN" ["l"="-9.226,12.744"]
"JordiCorbilla/stock-prediction-deep-neural-learning" ["l"="-9.185,12.81"]
"timestocome/Test-stock-prediction-algorithms" ["l"="-9.241,12.806"]
"pushpendughosh/Stock-market-forecasting" ["l"="-9.202,12.817"]
"Rajat-dhyani/Stock-Price-Predictor" ["l"="-9.21,12.792"]
"VivekPa/IntroNeuralNetworks" ["l"="-9.159,12.82"]
"hichenway/stock_predict_with_LSTM" ["l"="-9.233,12.61"]
"duemig/Stanford-Project-Predicting-stock-prices-using-a-LSTM-Network" ["l"="-9.285,12.798"]
"yacoubb/stock-trading-ml" ["l"="-9.163,12.846"]
"roq-trading/roq-api" ["l"="-10.607,12.936", "c"=265]
"AsyncAlgoTrading/aat" ["l"="-8.918,13.062"]
"yangwohenmai/LSTM" ["l"="-9.222,12.495"]
"yangwohenmai/DeepLearningForTSF" ["l"="45.039,24.18", "c"=166]
"nicodjimenez/lstm" ["l"="-9.232,12.532"]
"yangwohenmai/TimeSeriesForecasting" ["l"="45.078,24.145", "c"=166]
"zhouhaoyi/Informer2020" ["l"="44.975,24.366", "c"=166]
"ndrplz/ConvLSTM_pytorch" ["l"="41.508,25.807", "c"=537]
"eai2x/Time-Series-Analysis-Tutorial" ["l"="45.006,24.235", "c"=166]
"PatientEz/CNN-BiLSTM-Attention-Time-Series-Prediction_Keras" ["l"="44.945,24.186", "c"=166]
"thuml/Autoformer" ["l"="44.918,24.376", "c"=166]
"thuml/Time-Series-Library" ["l"="45.002,24.437", "c"=166]
"Alro10/deep-learning-time-series" ["l"="44.98,24.241", "c"=166]
"dalinvip/cnn-lstm-bilstm-deepcnn-clstm-in-pytorch" ["l"="53.317,28.693", "c"=1200]
"cure-lab/LTSF-Linear" ["l"="44.941,24.393", "c"=166]
"oliverguhr/transformer-time-series-prediction" ["l"="44.912,24.286", "c"=166]
"highfestiva/finplot" ["l"="-8.972,13.109"]
"louisnw01/lightweight-charts-python" ["l"="-8.318,11.436", "c"=807]
"Skinok/backtrader-pyqt-ui" ["l"="-9.042,13.294"]
"rsheftel/pandas_market_calendars" ["l"="-8.85,13.023"]
"tysonwu/stack-orderflow" ["l"="-8.642,13.561"]
"TechfaneTechnologies/pytvlwcharts" ["l"="-9.335,13.346"]
"bfolkens/py-market-profile" ["l"="-9.155,13.189"]
"jmrichardson/tuneta" ["l"="-9.128,13.045"]
"nardew/talipp" ["l"="-9.059,13.132"]
"GregoryMorse/trendln" ["l"="-9.12,13.176"]
"dingran/quant-notes" ["l"="31.803,-25.978", "c"=531]
"PyPatel/Quant-Finance-Resources" ["l"="-9.071,12.965"]
"LongOnly/Quantitative-Notebooks" ["l"="-9.053,12.95"]
"RoughStochVol/rBergomi" ["l"="-8.623,12.903"]
"ryanmccrickerd/rough_bergomi" ["l"="-8.657,12.925"]
"sigurdroemer/rough_volatility" ["l"="-8.621,12.92"]
"svenhsia/Calibrating-Rough-Volatility-Models-with-Deep-Learning" ["l"="-8.632,12.933"]
"amuguruza/NN-StochVol-Calibrations" ["l"="-8.635,12.983"]
"sigurdroemer/rough_heston" ["l"="-8.589,12.911"]
"patrick-kidger/signatory" ["l"="22.919,14.72", "c"=505]
"SigCGANs/Conditional-Sig-Wasserstein-GANs" ["l"="-9.794,12.867"]
"imanolperez/market_simulator" ["l"="-9.837,12.906"]
"LexPredict/openedgar" ["l"="-9.454,12.732"]
"edgarminers/python-edgar" ["l"="-9.426,12.763"]
"datasets/edgar" ["l"="-9.465,12.748"]
"sec-edgar/sec-edgar" ["l"="-9.385,12.78"]
"LexPredict/lexpredict-legal-dictionary" ["l"="52.704,27.914", "c"=60]
"ryansmccoy/py-sec-edgar" ["l"="-9.43,12.747"]
"tooksoi/ScraXBRL" ["l"="-9.471,12.762"]
"gaulinmp/pyedgar" ["l"="-9.468,12.698"]
"joeyism/py-edgar" ["l"="-9.45,12.748"]
"janlukasschroeder/sec-api" ["l"="-9.437,12.73"]
"Arelle/EdgarRenderer" ["l"="-9.478,12.739"]
"alions7000/SEC-EDGAR-text" ["l"="-9.447,12.762"]
"rsljr/edgarParser" ["l"="-9.431,12.712"]
"LexPredict/lexpredict-lexnlp" ["l"="52.721,27.878", "c"=60]
"LexPredict/lexpredict-contraxsuite" ["l"="52.701,27.931", "c"=60]
"lukerosiak/pysec" ["l"="-9.482,12.755"]
"JoinQuant/jqfactor_analyzer" ["l"="-8.68,15.771", "c"=565]
"patrickloeber/python-engineer-notebooks" ["l"="47.952,26.038", "c"=323]
"derekbanas/seaborn" ["l"="-9.47,13.153"]
"Bloomberg-Beta/Manual" ["l"="-21.202,11.435", "c"=22]
"Ameobea/robintrack" ["l"="-8.527,13.022"]
"askmike/gekko" ["l"="-10.485,11.656", "c"=408]
"enthought/pyql" ["l"="-8.937,13.04"]
"jsmidt/QuantPy" ["l"="-8.988,13.022"]
"quantsbin/Quantsbin" ["l"="-8.974,13.02"]
"vollib/vollib" ["l"="-8.964,13.043"]
"romanmichaelpaolucci/Q-Fin" ["l"="-8.955,13.008"]
"federicomariamassari/financial-engineering" ["l"="-8.944,13.018"]
"dbrojas/optlib" ["l"="-8.966,13"]
"ynouri/pysabr" ["l"="-8.949,13.043"]
"alpha-miner/Finance-Python" ["l"="-8.993,13.043"]
"PacktPublishing/Mastering-Python-for-Finance-Second-Edition" ["l"="-9.085,13.041"]
"jamesmawm/Mastering-Python-for-Finance-source-codes" ["l"="-9.027,13.095"]
"PacktPublishing/Python-for-Finance-Cookbook" ["l"="-9.103,13.027"]
"wywongbd/pairstrade-fyp-2019" ["l"="-9.158,13.065"]
"Finance-Hub/FinanceHub" ["l"="-9.053,12.994"]
"dedwards25/Python_Option_Pricing" ["l"="-9.006,13.015"]
"Hvass-Labs/FinanceOps" ["l"="-9.101,12.956"]
"robcarver17/systematictradingexamples" ["l"="-9.032,12.968"]
"chicago-joe/InteractiveBrokers-PairsTrading-Algo" ["l"="-9.162,13.149"]
"MarcosCarreira/DermanPapers" ["l"="-9.022,12.983"]
"rsvp/fecon235" ["l"="-9.016,13.005"]
"PacktPublishing/Learn-Algorithmic-Trading" ["l"="-9.085,12.975"]
"Marigold/universal-portfolios" ["l"="-9.044,12.964"]
"OLPS/OLPS" ["l"="-9.602,14.598", "c"=970]
"cvxgrp/cvxportfolio" ["l"="-8.974,12.985"]
"jankrepl/deepdow" ["l"="-9.033,12.935"]
"ZhengyaoJiang/PGPortfolio" ["l"="-9.59,14.674", "c"=970]
"quantopian/empyrical" ["l"="-8.891,12.978"]
"convexfi/riskparity.py" ["l"="-9.118,13.027"]
"fmilthaler/FinQuant" ["l"="-9.017,12.911"]
"wassname/rl-portfolio-management" ["l"="-9.572,14.683", "c"=970]
"marketneutral/alphatools" ["l"="-9.046,13.043"]
"jjakimoto/finance_ml" ["l"="-9.111,12.973"]
"santoshlite/EigenLedger" ["l"="-9.002,12.946"]
"tradingview/lightweight-charts" ["l"="-8.368,11.52", "c"=807]
"EliteQuant/EliteQuant" ["l"="-8.959,12.823"]
"jmfernandes/robin_stocks" ["l"="-8.618,12.967"]
"robinhood-unofficial/pyrh" ["l"="-8.544,12.983"]
"sanko/Robinhood" ["l"="-8.53,12.961"]
"anilshanbhag/RobinhoodShell" ["l"="-8.506,12.942"]
"aurbano/robinhood-node" ["l"="-8.5,12.962"]
"tedchou12/webull" ["l"="-8.588,13.008"]
"2018kguo/RobinhoodBot" ["l"="-8.507,12.918"]
"alexgolec/tda-api" ["l"="-8.69,13.084"]
"timkpaine/tdameritrade" ["l"="-8.65,13.094"]
"mcdallas/wallstreet" ["l"="-8.939,13.001"]
"torreyleonard/algotrader" ["l"="-8.574,12.971"]
"michaelchu/optopsy" ["l"="-8.92,13.037"]
"je-suis-tm/web-scraping" ["l"="-9.07,12.781"]
"sallamy2580/python-web-scrapping" ["l"="-9.108,12.727"]
"janlukasschroeder/realtime-newsapi" ["l"="-9.305,12.707"]
"avidLearnerInProgress/python-automation-scripts" ["l"="24.18,-24.444", "c"=839]
"fhamborg/news-please" ["l"="46.036,23.972", "c"=588]
"cuemacro/findatapy" ["l"="-8.952,12.982"]
"alvarobartt/investpy" ["l"="-8.989,12.895"]
"bmoscon/cryptofeed" ["l"="-10.662,12.968", "c"=265]
"nkaz001/hftbacktest" ["l"="-10.741,12.993", "c"=265]
"barter-rs/barter-rs" ["l"="-10.704,13.041", "c"=265]
"wangzhe3224/awesome-systematic-trading" ["l"="-8.884,12.772"]
"jasonyip184/StockSentimentTrading" ["l"="-9.237,12.689"]
"gyanesh-m/Sentiment-analysis-of-financial-news-data" ["l"="-9.244,12.653"]
"PyPatel/Sentiment-Analysis-for-Trading" ["l"="-9.226,12.78"]
"damianboh/stock_news_sentiment_analysis" ["l"="-9.261,12.631"]
"cvxpy/cvxpy" ["l"="50.99,25.8", "c"=743]
"yli188/WorldQuant_alpha101_code" ["l"="-9.098,13.014"]
"popbo/alphas" ["l"="-8.656,15.797", "c"=565]
"Harvey-Sun/World_Quant_Alphas" ["l"="-11.011,12.983", "c"=265]
"laox1ao/Alpha101-WorldQuant" ["l"="-9.206,13.029"]
"ShiliangZhang-nku/Barra_CNE6" ["l"="-8.694,15.722", "c"=565]
"RL-MLDM/alphagen" ["l"="-8.588,15.752", "c"=565]
"rolling-panda-san/notebooks" ["l"="-9.04,13.055"]
"stefan-jansen/alphalens-reloaded" ["l"="-8.927,13.022"]
"lc-sysbs/alpha101-new" ["l"="-8.695,15.88", "c"=565]
"STHSF/alpha101" ["l"="-8.684,15.861", "c"=565]
"zazhang/ep-chan-book-algo-trading" ["l"="-9.026,12.95"]
"wpwpwpwpwpwpwpwpwp/Alpha-101-GTJA-191" ["l"="-8.693,15.924", "c"=565]
"sstoikov/microprice" ["l"="-10.782,12.954", "c"=265]
"RussellDash332/WQ-Brain" ["l"="-11.121,13.084", "c"=265]
"KidQuant/Pairs-Trading-With-Python" ["l"="-9.11,13.054"]
"fedecaccia/avellaneda-stoikov" ["l"="-10.763,12.953", "c"=265]
"jshellen/HFT" ["l"="-10.768,12.969", "c"=265]
"letianzj/quanttrader" ["l"="-9.002,13.031"]
"PyPatel/Options-Trading-Strategies-in-Python" ["l"="-9.029,13.015"]
"ivopetiz/algotrading" ["l"="-8.989,12.976"]
"constverum/Quantdom" ["l"="-8.966,13.066"]
"s-brez/trading-server" ["l"="-8.932,13.087"]
"ematvey/pybacktest" ["l"="-8.91,13.098"]
"mementum/bta-lib" ["l"="-9.032,13.138"]
"abbass2/pyqstrat" ["l"="-8.918,13.081"]
"EliteQuant/EliteQuant_Python" ["l"="-8.714,14.5", "c"=177]
"AlgoTraders/stock-analysis-engine" ["l"="-8.937,12.951"]
"BlackArbsCEO/Adv_Fin_ML_Exercises" ["l"="-9.067,12.927"]
"boyboi86/AFML" ["l"="-9.132,12.975"]
"hudson-and-thames/research" ["l"="-9.125,12.96"]
"Rachnog/Advanced-Deep-Trading" ["l"="-9.155,12.983"]
"emoen/Machine-Learning-for-Asset-Managers" ["l"="-9.078,13.001"]
"doda/advances-in-financial-ml-notes" ["l"="-9.163,12.972"]
"fernandodelacalle/adv-financial-ml-marcos-exercises" ["l"="-9.154,12.96"]
"raidastauras/Trading-Bot" ["l"="-9.027,13.52"]
"tanvird3/TradingRobot" ["l"="-9.006,13.539"]
"PeterMalkin/oandapybot" ["l"="-9.017,13.459"]
"bgwrites/Forex-Trader" ["l"="-9.053,13.49"]
"iancamleite/prediciting-binary-options" ["l"="-8.969,13.714"]
"hayatoy/ml-forex-prediction" ["l"="-9.009,13.491"]
"tim1234ltp/forex-binary-option-prediction" ["l"="-8.971,13.758"]
"metheuspsc/Iq_Option_Bots" ["l"="-8.947,13.864"]
"metaperl/binary-martingale" ["l"="-8.955,13.747"]
"ItamarRocha/binary-bot" ["l"="-8.927,13.863"]
"pskrunner14/trading-bot" ["l"="-9.531,14.807", "c"=970]
"omerbsezer/LSTM_RNN_Tutorials_with_Demo" ["l"="-9.213,12.66"]
"omerbsezer/Reinforcement_learning_tutorial_with_demo" ["l"="57.612,18.134", "c"=45]
"umbertogriffo/Predictive-Maintenance-using-LSTM" ["l"="51.263,37.939", "c"=545]
"omerbsezer/Generative_Models_Tutorial_with_Demo" ["l"="57.555,18.055", "c"=45]
"buomsoo-kim/Easy-deep-learning-with-Keras" ["l"="47.405,28.512", "c"=89]
"imhgchoi/ARIMA-LSTM-hybrid-corrcoef-predict" ["l"="45.095,24.046", "c"=166]
"beinghorizontal/tpo_project" ["l"="-9.273,13.255"]
"beinghorizontal/py-market-profile" ["l"="-9.257,13.252"]
"BatuhanUsluel/Algorithmic-Support-and-Resistance" ["l"="-9.159,13.212"]
"day0market/support_resistance" ["l"="-9.141,13.214"]
"beinghorizontal/awesome-quant" ["l"="-9.253,13.268"]
"pranshu0210/market-profile" ["l"="-9.188,13.218"]
"cenobar/TPO" ["l"="-9.2,13.234"]
"tr8dr/tseries-patterns" ["l"="-9.216,13.095"]
"Yvictor/TradingGym" ["l"="-9.612,14.76", "c"=970]
"jbn/ZigZag" ["l"="-9.148,13.252"]
"JECSand/yahoofinancials" ["l"="-8.978,12.911"]
"dpguthrie/yahooquery" ["l"="-8.918,12.906"]
"yahoo-finance/yahoo-finance" ["l"="-9.037,12.909"]
"RomelTorres/alpha_vantage" ["l"="-8.774,12.904"]
"JerBouma/FinanceToolkit" ["l"="-9.039,12.873"]
"Benny-/Yahoo-ticker-symbol-downloader" ["l"="-9.145,12.871"]
"ranaroussi/yfinance" ["l"="-8.762,12.79"]
"mariostoev/finviz" ["l"="-8.867,12.998"]
"pydata/pandas-datareader" ["l"="-8.849,12.904"]
"petercerno/good-morning" ["l"="-9.351,12.991"]
"JerBouma/FundamentalsQuantifier" ["l"="-9.132,12.939"]
"lit26/finvizfinance" ["l"="-8.964,12.95"]
"alpacahq/pylivetrader" ["l"="-8.809,13.083"]
"AnalyzerREST/python-tradingview-ta" ["l"="-8.329,11.349", "c"=807]
"yumoxu/stocknet-dataset" ["l"="-8.432,15.637", "c"=565]
"AI4Finance-Foundation/FinNLP" ["l"="-8.965,12.538"]
"cuemacro/tcapy" ["l"="-8.764,13.156"]
"cuemacro/FinancePy" ["l"="-8.774,13.141"]
"cuemacro/chartpy" ["l"="-8.833,13.098"]
"cuemacro/teaching" ["l"="-8.781,13.156"]
"cuemacro/cufflinks" ["l"="-8.786,13.139"]
"gjimzhou/MTH9879-Market-Microstructure-Models" ["l"="-10.789,13.005", "c"=265]
"robcarver17/pysystemtrade_examples" ["l"="-9.06,12.972"]
"LastAncientOne/SimpleStockAnalysisPython" ["l"="-9.173,13.011"]
"areed1192/finance-news-aggregator" ["l"="-9.375,12.629"]
"janlukasschroeder/sec-api-python" ["l"="-9.392,12.737"]
"justdjango/dream_blog" ["l"="47.771,19.77", "c"=599]
"binance-exchange/binance-official-api-docs" ["l"="-9.756,10.477", "c"=614]
"LechGrzelak/QuantFinanceBook" ["l"="-9.034,13.031"]
"LechGrzelak/Computational-Finance-Course" ["l"="-8.942,13.107"]
"LechGrzelak/FinancialEngineering_IR_xVA" ["l"="-8.86,13.136"]
"PythonCharmers/QuantFinance" ["l"="-9.047,13.022"]
"ArturSepp/QuantInvestStrats" ["l"="-8.999,13.072"]
"paulperry/quant" ["l"="-9.027,13.047"]
"jcrichard/pyrb" ["l"="-9.223,13.044"]
"dppalomar/riskParityPortfolio" ["l"="-9.229,13.077"]
"DanielPNewman/all-weather-risk-parity" ["l"="-9.2,13.043"]
"mr-karan/awesome-investing" ["l"="-9.059,12.748"]
"antontarasenko/awesome-economics" ["l"="42.737,26.81", "c"=1056]
"KrishMunot/awesome-startup" ["l"="26.167,-26.321", "c"=32]
"ong/awesome-decentralized-finance" ["l"="-20.829,10.663", "c"=22]
"jyguyomarch/awesome-productivity" ["l"="26.14,-26.198", "c"=32]
"ttt30ga/awesome-product-design" ["l"="26.148,-26.14", "c"=32]
"noteflakes/awesome-music" ["l"="26.031,-26.251", "c"=32]
"huyingjie/Checklist-Checklist" ["l"="26.239,-26.125", "c"=32]
"DopplerHQ/awesome-bots" ["l"="26.205,-26.119", "c"=32]
"dictcp/awesome-git" ["l"="26.192,-26.137", "c"=32]
"FinancialModelingPrepAPI/Financial-Modeling-Prep-API" ["l"="-9.288,12.867"]
"daxm/fmpsdk" ["l"="-9.365,12.878"]
"halessi/DCF" ["l"="-9.365,12.833"]
"ikbale/fmp_python" ["l"="-9.368,12.859"]
"patelneel55/financialmodelingprep" ["l"="-9.329,12.856"]
"razorhash/pyfmpcloud" ["l"="-9.341,12.893"]
"twelvedata/twelvedata-python" ["l"="-8.938,13.065"]
"sewardlee337/finreportr" ["l"="-9.482,12.716"]
"SimFin/simfin" ["l"="-9.332,12.94"]
"MatthiWare/FinancialModelingPrep.NET" ["l"="-9.345,12.87"]
"leonarduschen/pyfinmod" ["l"="-9.348,12.849"]
"udacimak/udacimak" ["l"="47.464,28.512", "c"=89]
"udacity/artificial-intelligence-for-trading" ["l"="-9.197,12.904"]
"piquette/finance-go" ["l"="-10.914,10.64", "c"=720]
"gofinance/ib" ["l"="-8.579,13.067"]
"venky14/Stock-Market-Analysis-and-Prediction" ["l"="-9.21,12.839"]
"stefmolin/stock-analysis" ["l"="-9.222,12.933"]
"Ronak-59/Stock-Prediction" ["l"="-9.251,12.772"]
"Vaibhav/Stock-Analysis" ["l"="-9.203,12.931"]
"arkochhar/Technical-Indicators" ["l"="-9.178,13.142"]
"NGYB/Stocks" ["l"="-9.163,12.88"]
"anwarcsebd/stock-market-analysis" ["l"="-9.257,12.824"]
"LouisScorpio/datamining" ["l"="-9.294,12.502"]
"netblind/stockPredict" ["l"="-8.774,14.932", "c"=177]
"TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict" ["l"="-8.795,14.947", "c"=177]
"LightingFx/hs300_stock_predict" ["l"="-8.757,14.941", "c"=177]
"pengxungui/LSTM_stock" ["l"="-8.747,14.889", "c"=177]
"zhangxu0307/time_series_forecasting_pytorch" ["l"="44.924,24.173", "c"=166]
"toddwschneider/stocks" ["l"="-8.523,12.877"]
"wagenaartje/stocks.js" ["l"="-8.347,12.864"]
"iexg/IEX-API" ["l"="-8.682,12.976"]
"Roibal/Cryptocurrency-Trading-Bots-Python-Beginner-Advance" ["l"="-10.393,11.527", "c"=408]
"Dave-Vallance/bt-ccxt-store" ["l"="-9.032,13.331"]
"rodrigo-brito/backtrader-binance-bot" ["l"="-9.049,13.341"]
"bartosh/backtrader" ["l"="-9.059,13.371"]
"verybadsoldier/backtrader_plotting" ["l"="-9.025,13.274"]
"phonegapX/bt-ccxt-store-cn" ["l"="-9.066,13.401"]
"Dave-Vallance/tv2bt" ["l"="-9.02,13.317"]
"happydasch/btplotting" ["l"="-9.047,13.27"]
"lindomar-oliveira/backtrader-binance" ["l"="-9.044,13.364"]
"backtrader2/backtrader" ["l"="-9.009,13.296"]
"OmegaTrading/OmegaUI" ["l"="-9.067,13.338"]
"Kismuz/btgym" ["l"="-9.588,14.745", "c"=970]
"WISEPLAT/backtrader_binance" ["l"="-9.07,13.385"]
"Ckend/pythondict-quant" ["l"="-9.07,13.32"]
"scrtlabs/catalyst" ["l"="-10.363,11.623", "c"=408]
"alpacahq/alpaca-backtrader-api" ["l"="-8.84,13.114"]
"PacktPublishing/40-Algorithms-Every-Programmer-Should-Know" ["l"="24.078,-24.303", "c"=839]
"Jake0303/Webull-Trading-Bot" ["l"="-8.493,12.903"]
"areed1192/td-ameritrade-python-api" ["l"="-8.632,13.106"]
"edmundpf/webull-api-ts" ["l"="-8.547,13.009"]
"webull-inc/openapi-python-sdk" ["l"="-8.492,13.016"]
"alpacahq/example-scalping" ["l"="-8.853,13.054"]
"Jake0303/RobinHood-RSI-Trading-Bot" ["l"="-8.472,12.907"]
"alexgolec/schwab-py" ["l"="-8.574,13.116"]
"jeog/TDAmeritradeAPI" ["l"="-8.599,13.153"]
"jeog/TOSDataBridge" ["l"="-8.572,13.154"]
"areed1192/td-ameritrade-api" ["l"="-8.635,13.128"]
"isonium/TDAmeritrade-API" ["l"="-8.601,13.131"]
"jshingler/TOS-and-Thinkscript-Snippet-Collection" ["l"="-8.54,13.185"]
"TreyThomas93/python-trading-bot-with-thinkorswim" ["l"="-8.571,13.17"]
"tkp-archive/pyEX" ["l"="-8.723,13.062"]
"jessecooper/pyetrade" ["l"="-8.633,13.314"]
"john5223/minas" ["l"="-8.5,13.225"]
"hwrdprkns/ThinkOrSwim" ["l"="-8.517,13.212"]
"yammypotato/Thinkorswim-Scripts" ["l"="-8.513,13.229"]
"ARKInvest/ARK-Invest-Tesla-Valuation-Model" ["l"="-47.375,-25.189", "c"=70]
"SimplyWallSt/Company-Analysis-Model" ["l"="-9.121,12.863"]
"vedic-partap/Event-Driven-Stock-Prediction-using-Deep-Learning" ["l"="-8.381,15.639", "c"=565]
"yhilpisch/py4fi" ["l"="-9.033,12.996"]
"Auquan/Tutorials" ["l"="-9.122,12.991"]
"SuperCV/Book" ["l"="-6.348,18.505", "c"=779]
"healthDataScience/deep-learning-HAR" ["l"="48.224,34.049", "c"=168]
"RobRomijnders/LSTM_tsc" ["l"="-9.351,12.564"]
"aqibsaeed/Multilabel-timeseries-classification-with-LSTM" ["l"="-9.338,12.546"]
"RobRomijnders/CNN_tsc" ["l"="-9.4,12.534"]
"PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading" ["l"="-9.1,12.931"]
"OpenSourceRisk/ORE-SWIG" ["l"="-8.669,13.179"]
"OpenSourceRisk/Dashboard" ["l"="-8.646,13.19"]
"IbcAlpha/IBC" ["l"="-8.696,13.016"]
"ib-controller/ib-controller" ["l"="-8.68,13.044"]
"Voyz/ibeam" ["l"="-8.64,13.034"]
"ib-api-reloaded/ib_async" ["l"="-8.713,13"]
"gnzsnz/ib-gateway-docker" ["l"="-8.647,13.011"]
"UnusualAlpha/ib-gateway-docker" ["l"="-8.657,13.054"]
"mvberg/ib-gateway-docker" ["l"="-8.662,13.069"]
"brndnmtthws/thetagang" ["l"="-8.798,12.987"]
"roblav96/headless-ib-gateway-installation-ubuntu-server" ["l"="-8.632,13.051"]
"areed1192/interactive-broker-python-api" ["l"="-8.687,13.062"]
"extrange/ibkr-docker" ["l"="-8.662,13.015"]
"InteractiveBrokers/tws-api-public" ["l"="-8.663,13.038"]
"PyPatel/Machine-Learning-and-AI-in-Trading" ["l"="-9.152,12.907"]
"sirnfs/OptionSuite" ["l"="-8.876,13.164"]
"boyac/pyOptionPricing" ["l"="-8.955,13.186"]
"clf110510/stochastic-volatility" ["l"="-8.718,13.187"]
"JackJacquier/SSVI" ["l"="-8.635,13.292"]
"JackJacquier/SABR-Implied-Volatility" ["l"="-8.68,13.241"]
"exchangeratesapi/exchangeratesapi" ["l"="-14.658,27.991", "c"=29]
"apilayer/ratesapi" ["l"="-8.877,13.677"]
"AI4Finance-Foundation/ElegantRL" ["l"="57.809,18.061", "c"=45]
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition_Original" ["l"="-9.111,12.915"]
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Bots-with-Python" ["l"="-9.1,12.993"]
"PacktPublishing/Python-Algorithmic-Trading-Cookbook" ["l"="-9.128,13.014"]
"PacktPublishing/Machine-Learning-for-Algorithmic-Trading-Second-Edition" ["l"="-9.047,12.848"]
"yhilpisch/py4fi2nd" ["l"="-9.077,13.018"]
"alpha-xone/xbbg" ["l"="-8.969,13.273"]
"matthewgilbert/pdblp" ["l"="-8.968,13.252"]
"matthewgilbert/blp" ["l"="-8.985,13.281"]
"msitt/blpapi-python" ["l"="-9.002,13.247"]
"kyuni22/pybbg" ["l"="-8.983,13.263"]
"alex314159/blpapiwrapper" ["l"="-8.981,13.248"]
"bpsmith/tia" ["l"="-8.944,13.15"]
"Finance-Hub/FinanceHubMaterials" ["l"="-9.166,13.026"]
"joelowj/awesome-algorithmic-trading" ["l"="-9.076,12.946"]
"sadighian/crypto-rl" ["l"="-10.741,12.899", "c"=265]
"Albert-Z-Guo/Deep-Reinforcement-Stock-Trading" ["l"="-9.527,14.772", "c"=970]
"notadamking/Stock-Trading-Environment" ["l"="-9.575,14.802", "c"=970]
"alpacahq/example-hftish" ["l"="-10.697,12.969", "c"=265]
"alpacahq/Momentum-Trading-Example" ["l"="-8.847,13.083"]
"influxdata/influxdb-python" ["l"="4.388,-7.007", "c"=0]
"alvarobartt/investiny" ["l"="-9.183,12.969"]
"alvarobartt/trendet" ["l"="-9.135,13.059"]
"alvarobartt/pyrtfolio" ["l"="-9.155,13.002"]
"quantrocket-llc/moonshot" ["l"="-8.837,13.168"]
"quantrocket-llc/moonchart" ["l"="-8.796,13.23"]
"quantrocket-llc/quantrocket-client" ["l"="-8.775,13.247"]
"quantrocket-llc/ibpythonic" ["l"="-8.808,13.243"]
"fja05680/pinkfish" ["l"="-8.911,13.147"]
"quantrocket-llc/zipline-extensions" ["l"="-8.805,13.218"]
"quantrocket-llc/ibapi-grease" ["l"="-8.81,13.228"]
"fxcm/RestAPI" ["l"="-8.982,13.462"]
"fxcm/ForexConnectAPI" ["l"="-8.974,13.496"]
"fxcm/MarketData" ["l"="-8.979,13.525"]
"gehtsoft/forex-connect" ["l"="-8.989,13.514"]
"fxcm/JavaAPI" ["l"="-8.955,13.506"]
"fxcm/FIXAPI" ["l"="-8.964,13.518"]
"hootnot/oanda-api-v20" ["l"="-9.02,13.407"]
"fxcm/FXCMTickData" ["l"="-8.948,13.484"]
"darwinex/DarwinexLabs" ["l"="-9.363,11.493", "c"=808]
"oanda/v20-python-samples" ["l"="-9.008,13.393"]
"giuse88/duka" ["l"="-8.961,13.364"]
"hootnot/oandapyV20-examples" ["l"="-9.017,13.43"]
"oanda/oandapy" ["l"="-9.002,13.418"]
"mhallsmoore/qsforex" ["l"="-8.93,13.269"]
"CarterBain/AlephNull" ["l"="-8.904,13.189"]
"maihde/quant" ["l"="-8.93,13.15"]
"benjaminmgross/visualize-wealth" ["l"="-8.965,13.143"]
"Emsu/prophet" ["l"="-8.894,13.143"]
"panpanpandas/ultrafinance" ["l"="-8.924,13.171"]
"thalesians/pythalesians" ["l"="-8.941,13.189"]
"cperler/trading" ["l"="-8.843,13.268"]
"pilwon/node-ib" ["l"="-8.587,13.044"]
"Komnomnomnom/swigibpy" ["l"="-8.669,13.099"]
"ryankennedyio/ib-docker" ["l"="-8.619,13.069"]
"ranaroussi/ezibpy" ["l"="-8.733,13.076"]
"trade-manager/trade-manager" ["l"="-9.82,10.794", "c"=614]
"hosseinmoein/DataFrame" ["l"="-20.02,-25.9", "c"=10]
"lballabio/QuantLib" ["l"="-8.768,12.851"]
"mstrum/robinhood-python" ["l"="-8.462,12.939"]
"codesociety/friartuck" ["l"="-8.487,12.943"]
"joshfraser/robinhood-to-csv" ["l"="-8.453,12.957"]
"yura505/robinbot" ["l"="-8.463,12.922"]
"tomgrek/rnn-robinhood" ["l"="-8.48,12.885"]
"westonplatter/fast_arrow" ["l"="-8.476,12.958"]
"aseylys/KStock" ["l"="-8.455,12.902"]
"rohanpai/Robinhood" ["l"="-8.469,12.976"]
"chiefsmurph/robinhood-playground" ["l"="-8.492,12.924"]
"TheFourGreatErrors/alpha-rptr" ["l"="-11.304,11.563", "c"=1243]
"amor71/LiuAlgoTrader" ["l"="-8.903,13.04"]
"enzoampil/fastquant" ["l"="-8.93,12.927"]
"tudorelu/pyjuque" ["l"="-11.259,11.579", "c"=1243]
"kieran-mackle/AutoTrader" ["l"="-8.979,13.007"]
"robswc/tradingview-webhooks-bot" ["l"="-8.331,11.299", "c"=807]
"SockTrader/SockTrader" ["l"="-9.619,10.376", "c"=614]
"wolfinch/wolfinch" ["l"="-11.284,11.593", "c"=1243]
"jrmeier/fast-trade" ["l"="-9.009,13.095"]
"chengstone/LotteryPredict" ["l"="-9.4,12.243"]
"yangboz/LotteryPrediction" ["l"="-9.461,12.19"]
"Liang-yc/ssq" ["l"="-9.413,12.193"]
"zepen/predict_Lottery_ticket" ["l"="-9.413,12.171"]
"oahzxd/lottoery" ["l"="-9.393,12.186"]
"pengyuwang618/lottery" ["l"="-9.431,12.208"]
"KittenCN/predict_Lottery_ticket" ["l"="-9.429,12.183"]
"AaronJny/lotto" ["l"="-9.412,12.215"]
"BEWINDOWEB/lotterygrabber" ["l"="-9.383,12.203"]
"fight1990/Lottery" ["l"="-9.397,12.207"]
"Zhibihuanian/-LSTM" ["l"="-9.434,12.233"]
"scumabo/AI-for-Trading" ["l"="-9.268,12.915"]
"ThomasGrivaz/ai-for-trading" ["l"="-9.277,12.896"]
"udacity/artificial-intelligence" ["l"="49.226,27.803", "c"=1018]
"udacity/ML_SageMaker_Studies" ["l"="49.15,27.687", "c"=1018]
"michaelsyao/AI-for-Trading" ["l"="-9.278,12.929"]
"purvasingh96/AI-for-Trading" ["l"="-9.257,12.951"]
"ucaiado/QLearning_Trading" ["l"="-9.598,14.704", "c"=970]
"udacity/DSND_Term1" ["l"="49.175,27.702", "c"=1018]
"udacity/NLP-Exercises" ["l"="49.211,27.771", "c"=1018]
"zvtvz/zvt" ["l"="-8.435,14.763", "c"=177]
"lifelib-dev/lifelib" ["l"="-9.861,12.454"]
"fumitoh/modelx" ["l"="-9.864,12.423"]
"franciscogarate/pyliferisk" ["l"="-9.875,12.458"]
"casact/chainladder-python" ["l"="-9.899,12.455"]
"JuliaActuary/LifeContingencies.jl" ["l"="-9.848,12.442"]
"trollefson/elizur" ["l"="-9.857,12.477"]
"acturtle/cashflower" ["l"="-9.882,12.424"]
"spedygiorgio/lifecontingencies" ["l"="-9.868,12.438"]
"JuliaActuary/ActuaryUtilities.jl" ["l"="-9.859,12.397"]
"genedan/actuarial-foss" ["l"="-9.885,12.441"]
"jason-ash/pyesg" ["l"="-9.806,12.503"]
"casact/FASLR" ["l"="-9.879,12.474"]
"validatehealth/actuary" ["l"="-9.898,12.437"]
"Systemorph/IFRS17CalculationEngine" ["l"="-9.83,12.477"]
"tkfy920/PythonQuantitativeFinance" ["l"="-8.698,15.751", "c"=565]
"ShamaUgale/myBooks" ["l"="-9.869,13.054"]
"manjunath5496/Best-Investing-Books" ["l"="-9.746,13.02"]
"MaximumBeings/public" ["l"="-8.707,13.28"]
"nburgessx/Papers" ["l"="-8.69,13.268"]
"federicomariamassari/willowtree" ["l"="-8.959,13.018"]
"bbcho/finoptions-dev" ["l"="-8.948,13.027"]
"GriffinAustin/pynance" ["l"="-8.962,13.03"]
"quantopian/trading_calendars" ["l"="-8.866,13.036"]
"gerrymanoim/exchange_calendars" ["l"="-8.887,13.085"]
"alpacahq/pipeline-live" ["l"="-8.873,13.092"]
"johnbywater/quantdsl" ["l"="-8.952,13.135"]
"quantopian/research_public" ["l"="-8.896,12.893"]
"quantopian/mlfinlab" ["l"="-8.728,13.171"]
"AminHP/gym-anytrading" ["l"="-9.599,14.823", "c"=970]
"ChillarAnand/stocktrends" ["l"="-9.213,13.121"]
"quantroom-pro/pyrenko" ["l"="-9.273,13.157"]
"techietrader/Trading-indicators-and-Chart-patterns" ["l"="-9.213,13.146"]
"GerardBCN/RenkoTrading" ["l"="-9.261,13.15"]
"lamres/renko_trend_following_strategy_catalyst" ["l"="-9.307,13.163"]
"pegahcarter/TAcharts" ["l"="-9.266,13.174"]
"aticio/renko" ["l"="-9.273,13.138"]
"kylejusticemagnuson/pyti" ["l"="-9.078,13.089"]
"srlcarlg/renkodf" ["l"="-9.287,13.139"]
"addisonlynch/iexfinance" ["l"="-8.792,13.015"]
"tkp-archive/iexjs" ["l"="43.367,24.243", "c"=95]
"timkpaine/pyEX-zipline" ["l"="-8.689,13.11"]
"timkpaine/temporal-cache" ["l"="43.385,24.221", "c"=95]
"danielecook/iex-api-python" ["l"="-8.676,13.128"]
"twopirllc/AlphaVantageAPI" ["l"="-8.601,13.203"]
"lvfrazao/IEXTools" ["l"="-8.649,13.128"]
"philipodonnell/paperbroker" ["l"="-8.893,13.245"]
"stefan-jansen/zipline-reloaded" ["l"="-8.897,12.994"]
"Heerozh/spectre" ["l"="-8.996,13"]
"LastAncientOne/Mathematics_for_Machine_Learning" ["l"="-9.28,13.025"]
"LastAncientOne/Data-Science" ["l"="-9.27,13.016"]
"LastAncientOne/SimpleStockAnalysisR" ["l"="-9.247,13.022"]
"LastAncientOne/Trading-Strategies-in-Emerging-Markets-Coursera" ["l"="-9.261,13.029"]
"faizancodes/Automated-Fundamental-Analysis" ["l"="-9.023,13.232"]
"LastAncientOne/100_Day_Challenge" ["l"="-9.253,13.014"]
"wangy8989/Pairs-Trading-with-Machine-Learning" ["l"="-9.196,13.088"]
"simaomsarmento/PairsTrading" ["l"="-9.18,13.081"]
"shimonanarang/pair-trading" ["l"="-9.237,13.095"]
"wi-0/Pair-Trading-Reinforcement-Learning" ["l"="-9.528,14.722", "c"=970]
"joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance" ["l"="-9.139,13.123"]
"alpha-miner/alpha-mind" ["l"="-9.053,13.149"]
"quarkfin/qf-lib" ["l"="-9.01,13.04"]
"leosmigel/analyzingalpha" ["l"="-9.012,13.073"]
"marketneutral/pairs-trading-with-ML" ["l"="-9.182,13.065"]
"StockGram/Intelligent-Quantitative-Trading" ["l"="-9.076,12.727"]
"shenyichen105/Deep-Reinforcement-Learning-in-Stock-Trading" ["l"="-9.575,14.726", "c"=970]
"sapphire921/HFT-Pairs-Trading" ["l"="-10.792,12.881", "c"=265]
"ScrapeWithYuri/pairstrade-fyp-2019" ["l"="-9.205,13.105"]
"financialnoob/pairs_trading" ["l"="-9.162,13.083"]
"sachink2010/AutomatedStockTrading-DeepQ-Learning" ["l"="-9.538,14.776", "c"=970]
"Kostis-S-Z/trading-rl" ["l"="-9.524,14.733", "c"=970]
"yhilpisch/py4at" ["l"="-9.087,13.058"]
"yhilpisch/dawp" ["l"="-9.07,13.062"]
"yhilpisch/aiif" ["l"="-9.083,13.107"]
"yhilpisch/dx" ["l"="-9.03,13.077"]
"akurgat/automating-technical-analysis" ["l"="-9.24,13.161"]
"devfinwiz/Fin-Maestro-Web" ["l"="-9.339,13.099"]
"stefmolin/Hands-On-Data-Analysis-with-Pandas-2nd-edition" ["l"="47.026,24.773", "c"=425]
"namuan/trading-utils" ["l"="-9.559,12.875"]
"alpacahq/example-portfolio-manager" ["l"="-8.795,13.114"]
"alpacahq/samplealgo01" ["l"="-8.752,13.174"]
"ranaroussi/pystore" ["l"="-8.833,13.044"]
"ranaroussi/multitasking" ["l"="-8.768,13.113"]
"ranaroussi/pytrade" ["l"="-8.778,13.101"]
"vollib/py_vollib" ["l"="-8.925,13.186"]
"ranaroussi/pandas-montecarlo" ["l"="-8.926,15.554", "c"=565]
"jensolson/SPX-Gamma-Exposure" ["l"="-8.219,13.205"]
"Matteo-Ferrara/gex-tracker" ["l"="-8.272,13.203"]
"jensolson/Dark-Pool-Buying" ["l"="-8.181,13.211"]
"aaguiar10/gflows" ["l"="-8.241,13.212"]
"erma0x/gexxer" ["l"="-8.236,13.194"]
"crypto-chassis/ccapi" ["l"="-10.693,12.949", "c"=265]
"chronoxor/CppTrader" ["l"="-10.56,12.922", "c"=265]
"roq-trading/roq-cpp-samples" ["l"="-10.574,12.983", "c"=265]
"rburkholder/trade-frame" ["l"="-10.629,12.942", "c"=265]
"gbeced/basana" ["l"="-8.913,13.015"]
"bben1/Automatic-fundamental-investment-valuation" ["l"="-9.429,12.841"]
"farbodbahari/Business-Valuation-with-Discounted-Cash-Flow-In-Python" ["l"="-9.4,12.839"]
"sonntagsgesicht/dcf" ["l"="-9.414,12.831"]
"astro30/valinvest" ["l"="-9.416,12.931"]
"jdvelasq/cashflows" ["l"="-9.443,12.857"]
"farhadab/sec-edgar-financials" ["l"="-9.431,12.78"]
"ledwindra/discounted-cash-flow" ["l"="-9.41,12.853"]
"Ceruleanacg/Personae" ["l"="-9.667,14.715", "c"=970]
"scoofy/wxStocks" ["l"="-9.24,12.839"]
"kacperadach/ichimoku_screener" ["l"="-9.349,12.716"]
"narasimhaprasad/StockPy" ["l"="-9.314,12.769"]
"cgoldberg/ystockquote" ["l"="-9.183,12.838"]
"ailabx/ailabx" ["l"="-8.447,14.847", "c"=177]
"dwcoder/QuantitativePrimer" ["l"="31.778,-25.962", "c"=531]
"garethdmm/gryphon" ["l"="-10.609,12.979", "c"=265]
"anfederico/gemini" ["l"="-8.859,13.109"]
"Kumar-laxmi/Stock-Prediction-System-Application" ["l"="-9.292,12.774"]
"nityansuman/marvin" ["l"="-20.376,13.114", "c"=591]
"THINK989/Real-Time-Stock-Market-Prediction-using-Ensemble-DL-and-Rainbow-DQN" ["l"="-9.309,12.751"]
"batman-nair/project-defude" ["l"="-20.434,13.158", "c"=591]
"PacktPublishing/Pandas-Cookbook" ["l"="47.771,28.215", "c"=89]
"PacktPublishing/Python-for-Finance-Second-Edition" ["l"="-9.103,13.078"]
"RonRichman/AI_in_Actuarial_Science" ["l"="-9.947,12.431"]
"MHaringa/insurancerating" ["l"="-9.92,12.455"]
"actuarial-data-science/Tutorials" ["l"="-9.923,12.422"]
"actuarial-data-science/CourseDeepLearningWithActuarialApplications" ["l"="-9.959,12.409"]
"ActuariesInstitute/cookbook" ["l"="-9.918,12.438"]
"dutangc/CASdatasets" ["l"="-9.956,12.39"]
"mayer79/ml_lecture" ["l"="-9.937,12.391"]
"kasaai/deeptriangle" ["l"="-9.986,12.375"]
"mimoralea/gdrl" ["l"="57.677,18.056", "c"=45]
"TikhonJelvis/RL-book" ["l"="-9.012,12.961"]
"alpacahq/alpaca-py" ["l"="-8.867,13.072"]
"polygon-io/client-python" ["l"="-8.819,13.059"]
"bstemper/deep_rough_calibration" ["l"="-8.611,12.918"]
"pfnet-research/pfhedge" ["l"="-8.703,12.936"]
"JackJacquier/Heston-normal-and-rough" ["l"="-8.589,12.932"]
"mChataign/DupireNN" ["l"="-8.517,12.99"]
"ArturSepp/StochVolModels" ["l"="-8.812,13.139"]
"amuguruza/RoughFCLT" ["l"="-8.589,12.947"]
"vicaws/arbitragerepair" ["l"="-8.496,13.089"]
"krishnavelu/alice_blue" ["l"="-9.458,13.419"]
"jerokpradeep/pya3" ["l"="-9.525,13.463"]
"algo2t/alphatrade" ["l"="-9.427,13.396"]
"jigneshpylab/ZerodhaPythonScripts" ["l"="-9.379,13.353"]
"aeron7/nsepython" ["l"="-9.409,13.425"]
"aeron7/BankNIFTY-Golden-Ratio-Strategy" ["l"="-9.463,13.441"]
"Indian-Algorithmic-Trading-Community/PythonTraderExcelTradeTerminal" ["l"="-9.468,13.405"]
"paramatrixtech/ksapi" ["l"="-9.549,13.461"]
"abides-sim/abides" ["l"="-10.774,12.81", "c"=265]
"hansbuehler/deephedging" ["l"="-8.734,12.935"]
"PacktPublishing/Building-Trading-Bots" ["l"="-9.206,13.015"]
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" ["l"="-9.049,12.98"]
"PacktPublishing/Machine-Learning-for-Finance" ["l"="-9.121,13.063"]
"thrasher-corp/gocryptotrader" ["l"="-10.822,10.607", "c"=720]
"markcheno/go-talib" ["l"="-10.849,10.62", "c"=720]
"0b01/tectonicdb" ["l"="-10.673,12.991", "c"=265]
"rediar/InteractiveBrokers-Algo-Trading-API" ["l"="-9.804,10.767", "c"=614]
"roblav96/robinhood.tools" ["l"="-8.477,12.932"]
"nielse63/stonksjs" ["l"="-8.55,12.931"]
"Ekliptor/WolfBot" ["l"="-9.648,10.324", "c"=614]
"abghorba/Robinhood-Trading-Bot" ["l"="-8.441,12.851"]
"firmai/business-machine-learning" ["l"="48.293,25.981", "c"=323]
"JerBouma/ThePassiveInvestor" ["l"="-9.083,12.918"]
"jadchaar/sec-edgar-downloader" ["l"="-9.403,12.761"]
"fulifeng/Temporal_Relational_Stock_Ranking" ["l"="-8.491,15.655", "c"=565]
"sangyx/deep-finance" ["l"="-9.013,12.722"]
"hongtaocai/googlefinance" ["l"="-8.981,13.052"]
"boyan-soubachov/tastyworks_api" ["l"="-8.382,13.106"]
"gotasty/tastypl" ["l"="-8.32,13.12"]
"tastyware/tastytrade" ["l"="-8.436,13.13"]
"tylerfloyd/TastyWorks" ["l"="-8.316,13.103"]
"tastytrade/tastytrade-api-js" ["l"="-8.404,13.131"]
"tastyware/tastytrade-cli" ["l"="-8.389,13.136"]
"SravB/Algorithmic-Trading" ["l"="-9.335,12.914"]
"kkuette/TradzQAI" ["l"="-9.534,14.709", "c"=970]
"miroblog/tf_deep_rl_trader" ["l"="-9.534,14.744", "c"=970]
"georgedouzas/sports-betting" ["l"="50.102,25.138", "c"=874]
"ScottfreeLLC/AlphaPy" ["l"="-8.976,12.935"]
"stefmolin/Hands-On-Data-Analysis-with-Pandas" ["l"="47.061,24.789", "c"=425]
"amaggiulli/QLNet" ["l"="-10.537,13.6", "c"=1168]
"lballabio/QuantLib-SWIG" ["l"="-8.73,13.136"]
"lballabio/quantlib-old" ["l"="-8.869,13.189"]
"OpenSourceRisk/Engine" ["l"="-8.686,13.153"]
"zslucky/algorithmic_trading_book" ["l"="-9.111,13.004"]
"jenniyanjie/successful-algorithmic-trading" ["l"="-9.288,13.008"]
"dummydoo/Advanced-Algorithmic-Trading" ["l"="-11.013,12.874", "c"=265]
"SimFin/pdf-crawler" ["l"="-9.529,12.982"]
"SimFin/web-api-examples" ["l"="-9.461,12.968"]
"SimFin/bd-extractor" ["l"="-9.507,12.978"]
"yhilpisch/tstables" ["l"="-9.155,13.294"]
"yhilpisch/tpqps" ["l"="-9.125,13.244"]
"quantrocket-codeload/quant-finance-lectures" ["l"="-9.029,13.062"]
"KittenCN/predict_Lottery_ticket_pytorch" ["l"="-9.431,12.153"]
"luhao-worker/tf-lottery" ["l"="-9.438,12.165"]
"xwwxx/lottery-analysis" ["l"="-9.39,12.163"]
"wushidiguo/hello-lottery" ["l"="-9.414,12.132"]
"zhaoyangpp/LottoProphet" ["l"="-9.437,12.107"]
"maanavshah/stock-market-india" ["l"="-9.39,13.463"]
"vsjha18/nsetools" ["l"="-9.393,13.428"]
"jugaad-py/jugaad-data" ["l"="-9.407,13.444"]
"pranjal-joshi/Screeni-py" ["l"="-9.352,13.401"]
"VarunS2002/Python-NSE-Option-Chain-Analyzer" ["l"="-9.38,13.415"]
"hi-imcodeman/stock-nse-india" ["l"="-9.426,13.469"]
"swapniljariwala/nsepy" ["l"="-9.372,13.429"]
"deshwalmahesh/NSE-Stock-Scanner" ["l"="-9.386,13.445"]
"NayakwadiS/mftool" ["l"="-9.389,13.509"]
"sreenivasdoosa/sdoosa-algo-trade-python" ["l"="-9.358,13.364"]
"sdabhi23/bsedata" ["l"="-9.438,13.546"]
"pkjmesra/PKScreener" ["l"="-9.369,13.445"]
"zerodha/pykiteconnect" ["l"="-9.402,13.363"]
"hemenkapadia/getbhavcopy" ["l"="-9.453,13.567"]
"ashishkumar30/Stock_Market_Live_Trading_using_AI" ["l"="-9.378,13.371"]
"hudson-and-thames/presentations" ["l"="-9.182,13.036"]
"JackBrady/Financial-Machine-Learning" ["l"="-9.196,12.982"]
"ki33elev/Adv_Fin_ML" ["l"="-9.195,12.956"]
"peng3738/Selfstudy-note-for-advances-in-financial-machine-learning" ["l"="-9.213,12.957"]
"tgjeon/TensorFlow-Tutorials-for-Time-Series" ["l"="-9.307,12.557"]
"CasiaFan/time_seires_prediction_using_lstm" ["l"="-9.368,12.538"]
"PENGZhaoqing/TimeSeriesPrediction" ["l"="57.908,22.659", "c"=976]
"guillaume-chevalier/seq2seq-signal-prediction" ["l"="44.846,24.197", "c"=166]
"polyaxon/haupt" ["l"="-9.355,12.513"]
"JEddy92/TimeSeries_Seq2Seq" ["l"="44.884,24.215", "c"=166]
"aaxwaz/Multivariate-Time-Series-forecast-using-seq2seq-in-TensorFlow" ["l"="44.806,24.181", "c"=166]
"chickenbestlover/RNN-Time-series-Anomaly-Detection" ["l"="52.417,14.767", "c"=569]
"shunyaoshih/TPA-LSTM" ["l"="44.915,24.224", "c"=166]
"Arturus/kaggle-web-traffic" ["l"="57.427,24.106", "c"=864]
"hzy46/fast-neural-style-tensorflow" ["l"="45.597,29.417", "c"=170]
"maxim5/time-series-machine-learning" ["l"="45.026,24.019", "c"=166]
"hanbt/learn_dl" ["l"="53.482,27.423", "c"=60]
"alexminnaar/time-series-classification-and-clustering" ["l"="43.702,26.776", "c"=1089]
"SnehJain/Deep-Neural-Networks-For-Stock-Price-Prediction" ["l"="-9.331,12.649"]
"matheusbfernandes/stock-market-prediction" ["l"="-9.342,12.631"]
"dhingratul/Stock-Price-Prediction" ["l"="-9.295,12.687"]
"vietsDeng/Stock-Prediction" ["l"="-9.318,12.636"]
"zslucky/awesome-AI-books" ["l"="20.898,17.375", "c"=237]
"daneads/pypatent" ["l"="-8.083,13.828"]
"hopped/uspto-patents-parsing-tools" ["l"="-8.068,13.844"]
"TamerKhraisha/uspto-patent-data-parser" ["l"="-8.038,13.831"]
"ip-tools/uspto-opendata-python" ["l"="-8.107,13.849"]
"ip-tools/patzilla" ["l"="-8.11,13.83"]
"parkerhancock/patent_client" ["l"="-8.127,13.853"]
"ip-tools/python-epo-ops-client" ["l"="-8.095,13.839"]
"antequant/ib-gateway-docker" ["l"="-8.602,13.06"]
"dvasdekis/ib-gateway-docker-gcp" ["l"="-8.606,13.074"]
"manhinhang/ib-gateway-docker" ["l"="-8.619,13.037"]
"ajpierce/ib_tws_docker" ["l"="-8.594,13.083"]
"QuantConnect/IBAutomater" ["l"="-8.864,13.153"]
"deshpandenu/Time-Series-Forecasting-of-Amazon-Stock-Prices-using-Neural-Networks-LSTM-and-GAN-" ["l"="-9.494,12.823"]
"hungchun-lin/Stock-price-prediction-using-GAN" ["l"="-9.471,12.827"]
"UalwaysKnow/time-series-prediction-with-gan" ["l"="-9.518,12.826"]
"kennedyCzar/STOCK-RETURN-PREDICTION-USING-KNN-SVM-GUASSIAN-PROCESS-ADABOOST-TREE-REGRESSION-AND-QDA" ["l"="-9.393,12.884"]
"proceduralia/pytorch-GAN-timeseries" ["l"="-9.774,12.837"]
"kah-ve/MarketGAN" ["l"="-9.412,12.808"]
"MiloMallo/Stock" ["l"="-9.342,12.777"]
"buriburisuri/timeseries_gan" ["l"="-9.777,12.877"]
"jsyoon0823/TimeGAN" ["l"="-9.793,12.83"]
"longfly04/A-Stock-Prediction-System-with-Deep-Learning" ["l"="-9.531,12.841"]
"grudloff/stock_market_GAN" ["l"="-9.541,12.819"]
"hthoai/stock-price-prediction" ["l"="-9.56,12.827"]
"wardbradt/peregrine" ["l"="-10.348,11.555", "c"=408]
"areed1192/sigma_coding_youtube" ["l"="-8.918,13"]
"areed1192/python-trading-robot" ["l"="-8.825,13.076"]
"areed1192/python-sec" ["l"="-8.779,13.083"]
"AllenMattson/VBA" ["l"="-50.577,6.603", "c"=754]
"carvetighter/VBA-Code-Library" ["l"="-50.561,6.618", "c"=754]
"sancarn/stdVBA" ["l"="-50.602,6.565", "c"=754]
"VBA-tools/VBA-JSON" ["l"="-50.657,6.603", "c"=754]
"bergant/finstr" ["l"="-9.511,12.719"]
"timothycarambat/senate-stock-watcher-data" ["l"="-9.484,12.671"]
"lefterisloukas/edgar-crawler" ["l"="-9.414,12.734"]
"leoliu0/cik-cusip-mapping" ["l"="-9.565,12.635"]
"Jackal08/financial-data-structures" ["l"="-9.155,13.12"]
"BlackArbsCEO/mixture_model_trading_public" ["l"="-9.158,13.103"]
"upresearch/statarb" ["l"="-9.287,12.958"]
"sam31415/timeseriescv" ["l"="-9.141,13.078"]
"pydata/bottleneck" ["l"="43.796,23.699", "c"=95]
"jerryxyx/AlphaTrading" ["l"="-8.775,15.686", "c"=565]
"Quantoria/Risk_Budgeting" ["l"="-9.283,13.059"]
"engineer1982/Machine-Learning-Lottery-Prediction" ["l"="-9.501,12.164"]
"tiyh/rnn_lottery_prediction" ["l"="-9.491,12.183"]
"CorvusCodex/LotteryAi" ["l"="-9.501,12.132"]
"coverdrive/MDP-DP-RL" ["l"="61.252,13.211", "c"=313]
"borisbanushev/anomaliesinoptions" ["l"="-8.942,13.309"]
"borisbanushev/predictions" ["l"="-8.932,13.374"]
"borisbanushev/TradX" ["l"="-8.931,13.352"]
"maxicus/ib-tws-api" ["l"="-8.545,13.034"]
"zgsrc/ibjs" ["l"="-8.568,13.04"]
"stoqey/ib" ["l"="-8.602,13.029"]
"softwarespartan/IB4m" ["l"="-8.406,13.17"]
"rudimeier/twsapi" ["l"="-8.609,13.089"]
"quickfix/quickfix" ["l"="-10.523,12.831", "c"=265]
"algosenses/Stock_Market_Sentiment_Analysis" ["l"="-8.773,14.893", "c"=177]
"VivekPa/OptimalPortfolio" ["l"="-9.118,12.929"]
"Leo4815162342/dukascopy-node" ["l"="-9.359,11.457", "c"=808]
"QuantConnect/Tutorials" ["l"="-9.043,13.101"]
"AI4Finance-Foundation/FinRL-Tutorials" ["l"="-9.562,14.829", "c"=970]
"TradeMaster-NTU/TradeMaster" ["l"="-8.92,12.672"]
"lambdaclass/options_backtester" ["l"="-8.893,13.228"]
"theoptionlab/theoptionlab" ["l"="-8.87,13.306"]
"gioramponi/GAN_Time_Series" ["l"="-9.808,12.849"]
"StoicGilgamesh/LSTM-GAN-" ["l"="-9.811,12.88"]
"numancelik34/TimeSeries-GAN" ["l"="-9.793,12.853"]
"QuantConnect/Research" ["l"="-9.05,13.069"]
"QuantConnect/Documentation" ["l"="-8.996,13.167"]
"QuantConnect/lean-cli" ["l"="-9.022,13.159"]
"sonaam1234/DeepLearningInFinance" ["l"="36.873,3.369", "c"=526]
"chrism2671/PyTrendFollow" ["l"="-9.019,13.026"]
"sofienkaabar/trend-following-strategies" ["l"="45.423,27.179", "c"=68]
"kieranjwood/trading-momentum-transformer" ["l"="-10.824,12.849", "c"=265]
"mop-tracker/mop" ["l"="4.888,-5.286", "c"=784]
"AndrewAMD/SierraChartZorroPlugin" ["l"="-8.382,13.429"]
"john-yan/SierraChartConnect" ["l"="-8.406,13.41"]
"51bitquant/bitquant" ["l"="-10.656,10.781", "c"=720]
"liangzp/Reinforcement-learning-in-portfolio-management-" ["l"="-9.537,14.687", "c"=970]
"VivekPa/BinomialOptModel" ["l"="-9.236,12.902"]
"hudson-and-thames/portfoliolab" ["l"="-9.064,13.078"]
"yuriak/RLQuant" ["l"="-9.565,14.715", "c"=970]
"czielinski/portfolioopt" ["l"="-9.073,12.987"]
"WongYatChun/Advances-in-Financial-Machine-Learning" ["l"="-9.28,12.99"]
"ltnguyen14/Quant_stock" ["l"="-9.258,12.874"]
"doncat99/StockRecommendSystem" ["l"="-9.271,12.857"]
"happynoom/DeepTrade" ["l"="-9.281,12.826"]
"zerodha/kite-connect-python-example" ["l"="-9.433,13.372"]
"sreenivasdoosa/sdoosa-algo-trade-app" ["l"="-9.414,13.374"]
"debanshur/algotrading" ["l"="-9.409,13.346"]
"yash12392/kite-automatic-trading" ["l"="-9.464,13.364"]
"ethics/Automatic-Trading-using-Artificial-Intelligence-machine-Learning-on-Indian-Stock-Market-_Zerodha" ["l"="-9.438,13.337"]
"ashishkumar30/ML-AI-Python-Codes" ["l"="-9.518,13.396"]
"ksjagtap/QuantConnect-Trading-Strategies" ["l"="-8.975,13.303"]
"johnsonshi/Eurodollars" ["l"="-8.971,13.346"]
"oreilm49/quantconnect" ["l"="-8.962,13.339"]
"rosdyana/Going-Deeper-with-Convolutional-Neural-Network-for-Stock-Market-Prediction" ["l"="-9.295,13.685"]
"jason887/Using-Deep-Learning-Neural-Networks-and-Candlestick-Chart-Representation-to-Predict-Stock-Market" ["l"="-9.268,13.616"]
"rosdyana/CNN-Financial-Data" ["l"="-9.309,13.717"]
"llSourcell/Reinforcement_Learning_for_Stock_Prediction" ["l"="-9.554,14.67", "c"=970]
"Sinotrade/Shioaji" ["l"="22.134,1.94", "c"=208]
"FinleyLi/MultiCharts-PowerLanguage" ["l"="-8.241,13.299"]
"MongkonEiadon/IqOption.Net" ["l"="-8.897,13.967"]
"JorgeBeserra/IqOptionApiDotNet" ["l"="-8.876,13.974"]
"n1nj4z33/iqoptionapi" ["l"="-8.907,13.93"]
"dsinmsdj/BotMHI_IQOption" ["l"="-8.903,13.996"]
"n1nj4z33/iqoption_app" ["l"="-8.869,13.995"]
"Lu-Yi-Hsun/iqoptionapi" ["l"="-8.896,13.944"]
"saadmk11/banking-system" ["l"="47.884,19.924", "c"=599]
"MicroPyramid/micro-finance" ["l"="-8.864,13.685"]
"luizcartolano2/udacity-ai-for-trading" ["l"="-9.317,12.897"]
"marcopeix/AI-for-trading" ["l"="-9.328,12.884"]
"philfoster/option_screener" ["l"="-8.778,13.364"]
"GrahamboJangles/PutPremiumProcessor" ["l"="-8.85,13.382"]
"Options-Visualizer/Options-Visualizer.github.io" ["l"="-8.879,13.349"]
"omarmagh/iq_option_BOT" ["l"="-8.911,13.903"]
"n1nj4z33/iqoptionbot" ["l"="-8.89,13.921"]
"AlanForester/IQOption-Bot-Trade-System" ["l"="-8.893,13.907"]
"samuelfu/TradingBot" ["l"="-8.898,13.352"]
"hfwebbed/Stock-Option-Analytics" ["l"="-8.905,13.393"]
"qlero/market_data_extraction_tool" ["l"="-8.89,13.386"]
"dgunning/edgartools" ["l"="-9.349,12.75"]
"tzuhsial/edgar-10k-mda" ["l"="-9.453,12.784"]
"jadchaar/sec-cik-mapper" ["l"="-9.416,12.712"]
"jadchaar/sec-edgar-api" ["l"="-9.399,12.715"]
"westonplatter/portfolio_management" ["l"="-8.898,13.428"]
"PacktPublishing/Hands-on-Python-for-Finance" ["l"="-9.137,13.095"]
"firmai/python-business-analytics" ["l"="48.314,25.955", "c"=323]
"tejaslodaya/timeseries-clustering-vae" ["l"="52.57,14.717", "c"=569]
"abudesai/timeVAE" ["l"="-9.874,12.838"]
"asavine/CompFinance" ["l"="-8.587,13.274"]
"asavine/CompFinLecture" ["l"="-8.54,13.325"]
"asavine/Scripting" ["l"="-8.534,13.308"]
"differential-machine-learning/notebooks" ["l"="-8.496,13.338"]
"asavine/xlCppTutorial" ["l"="-8.558,13.299"]
"brnohu/CompFin" ["l"="-8.561,13.316"]
"Ahmed0028/Machine-Learning-and-Reinforcement-Learning-in-Finance-Specialization" ["l"="-9.227,13.183"]
"anthonyng2/Machine-Learning-For-Finance" ["l"="-9.097,13.196"]
"jjakimoto/DQN" ["l"="-9.61,14.672", "c"=970]
"AkshayS21/Reinforcement-Learning-for-Optimal-Financial-Trading" ["l"="-9.195,13.192"]
"mdeverdelhan/ta4j-origins" ["l"="-9.753,10.714", "c"=614]
"andrewkittredge/financial_fundamentals" ["l"="-9.504,12.752"]
"eliangcs/pystock-crawler" ["l"="-9.489,12.773"]
"altova/sec-xbrl" ["l"="-9.514,12.761"]
"altova/SECDB" ["l"="-9.509,12.774"]
"mwaldstein/edgarWebR" ["l"="-9.518,12.694"]
"titu1994/LSTM-FCN" ["l"="43.617,26.797", "c"=1089]
"titu1994/MLSTM-FCN" ["l"="43.636,26.788", "c"=1089]
"llSourcell/Stock_Market_Prediction" ["l"="49.789,26.817", "c"=791]
"kimber-chen/Tensorflow-for-stock-prediction" ["l"="-9.266,12.687"]
"Finance-781/FinML" ["l"="-8.852,13.21"]
"yolsever/ML-in-equity-prediction" ["l"="-8.738,13.341"]
"chakki-works/chABSA-dataset" ["l"="-9.762,12.596"]
"chakki-works/CoARiJ" ["l"="-9.735,12.613"]
"camelpac/alpaca-proxy-agent" ["l"="-8.801,13.13"]
"shlomiku/zipline-trader" ["l"="-8.88,13.134"]
"iqoptionapi/iqoptionapi" ["l"="-8.931,13.938"]
"dsinmsdj/iqoptionapi" ["l"="-8.92,13.98"]
"harwee/IQOption-Api" ["l"="-8.877,13.937"]
"rrfaria/iqoption-bot" ["l"="-8.863,13.93"]
"MatheusGatti/Copiador-De-Entradas" ["l"="-8.859,13.973"]
"Larrycoin/iqoption-bot" ["l"="-8.914,13.951"]
"rrfaria/IQOPTION-ML-TRADER" ["l"="-8.857,13.95"]
"ericpedra/quotexapi" ["l"="-8.884,14.005"]
"Mottl/hurst" ["l"="-8.835,12.936"]
"RyanWangZf/Hurst-exponent-R-S-analysis-" ["l"="-8.718,12.891"]
"LRydin/MFDFA" ["l"="62.207,34.672", "c"=405]
"CSchoel/nolds" ["l"="62.183,34.604", "c"=405]
"bashtage/arch" ["l"="-8.907,12.925"]
"PTRRupprecht/GenHurst" ["l"="-8.727,12.904"]
"stfbnc/fathon" ["l"="62.19,34.648", "c"=405]
"crflynn/fbm" ["l"="-11.004,12.906", "c"=265]
"danielktaylor/PyLimitBook" ["l"="-10.656,12.889", "c"=265]
"raphaelvallat/antropy" ["l"="62.13,34.494", "c"=405]
"quandl/quandl-python" ["l"="-8.853,12.983"]
"hydrosquall/tiingo-python" ["l"="-8.708,13.112"]
"Arelle/Arelle" ["l"="-9.497,12.736"]
"greedo/python-xbrl" ["l"="-9.525,12.743"]
"Arelle/ixbrl-viewer" ["l"="-9.567,12.689"]
"manusimidt/py-xbrl" ["l"="-9.548,12.74"]
"BuffettCode/edinet_xbrl" ["l"="-9.59,12.703"]
"bergant/XBRLFiles" ["l"="-9.529,12.719"]
"germain-hug/Deep-RL-Keras" ["l"="57.534,18.115", "c"=45]
"xiaochus/Deep-Reinforcement-Learning-Practice" ["l"="-8.51,12.779"]
"zzw-zwzhang/TimeGAN-pytorch" ["l"="-9.791,12.801"]
"birdx0810/timegan-pytorch" ["l"="-9.8,12.813"]
"zhangsunny/GAN-for-Time-Series-in-Pytorch" ["l"="-9.769,12.788"]
"imics-lab/tts-gan" ["l"="-9.831,12.833"]
"firmai/mtss-gan" ["l"="-9.719,12.859"]
"benearnthof/TimeGAN" ["l"="-9.776,12.806"]
"IvanBongiorni/GAN-RNN_Timeseries-imputation" ["l"="45.237,26.708", "c"=68]
"Yashkataria/CGAN-for-time-series" ["l"="-9.756,12.86"]
"firmai/tsgan" ["l"="-9.74,12.834"]
"portfolioplus/pytickersymbols" ["l"="-9.292,12.891"]
"portfolioplus/pystockfilter" ["l"="-9.37,12.91"]
"portfolioplus/pystockdb" ["l"="-9.352,12.903"]
"alpacahq/alpaca-ts" ["l"="-8.448,13.072"]
"alpacahq/alpaca-rn-mobile" ["l"="-8.382,13.056"]
"alpacahq/Alpaca-API" ["l"="-8.446,13.047"]
"polygon-io/client-js" ["l"="-8.422,13.066"]
"bennycode/coinbase-pro-node" ["l"="-9.556,10.359", "c"=614]
"anandanand84/technicalindicators" ["l"="-9.66,10.349", "c"=614]
"alpacahq/user-docs" ["l"="-8.469,13.066"]
"alexa-samples/alexa-smarthome" ["l"="35.363,1.373", "c"=1086]
"krishnaik06/Natural-Language-Processing" ["l"="48.372,24.772", "c"=389]
"krishnaik06/Interview-Prepartion-Data-Science" ["l"="48.3,24.844", "c"=389]
"krishnaik06/Deployment-flask" ["l"="48.341,24.782", "c"=389]
"hANSIc99/Pythonic" ["l"="43.558,18.902", "c"=1020]
"michaelewens/SDC-to-Compustat-Mapping" ["l"="-8.567,13.444"]
"michaelewens/MD-A-10-K-data" ["l"="-8.516,13.477"]
"wharton/wrds" ["l"="-8.568,13.462"]
"bkelly-lab/ipca" ["l"="-8.706,13.405"]
"bkelly-lab/ReplicationCrisis" ["l"="-8.667,13.408"]
"jasonzy121/Deep_Learning_Asset_Pricing" ["l"="-8.727,13.393"]
"gregzanotti/dlsa-public" ["l"="-8.791,13.408"]
"LouisChen1992/Deep_Learning_in_Asset_Pricing" ["l"="-8.706,13.386"]
"RichardS0268/Autoencoder-Asset-Pricing-Models" ["l"="-8.652,13.496"]
"Feng-CityUHK/EquityCharacteristics" ["l"="-8.684,13.389"]
"OpenSourceAP/CrossSection" ["l"="-8.724,13.313"]
"QuantSoftware/QuantSoftwareToolkit" ["l"="-8.928,13.205"]
"QuantBox/QuantBox_XAPI" ["l"="-8.659,14.573", "c"=177]
"libtrading/libtrading" ["l"="-10.56,12.893", "c"=265]
"CNIPA/PatentDatabases" ["l"="-8.113,13.812"]
"ryanlstevens/google_patent_scraper" ["l"="-8.1,13.797"]
"google/patents-public-data" ["l"="-8.141,13.827"]
"wenyalintw/Google-Patents-Scraper" ["l"="-8.086,13.808"]
"CNIPA/PatentOffices" ["l"="-8.122,13.787"]
"USPTO/PatentPublicData" ["l"="-8.082,13.86"]
"pilwon/node-yahoo-finance" ["l"="-8.217,12.902"]
"pilwon/node-google-finance" ["l"="-8.175,12.875"]
"gadicc/node-yahoo-finance2" ["l"="-8.154,12.897"]
"albertosantini/node-finance" ["l"="-8.133,12.868"]
"markitondemand/DEPRECATED-DataApis" ["l"="-8.168,12.927"]
"pystat/SuccessfulAlgorithmicTrading" ["l"="-9.359,13.019"]
"robcarver17/ibswigsystematicexamples" ["l"="-8.619,13.147"]
"bdkearns/twspy" ["l"="-8.622,13.121"]
"colinalexander/IbPython3" ["l"="-8.633,13.152"]
"rudimeier/twstools" ["l"="-8.653,13.117"]
"sdv-dev/Copulas" ["l"="44.832,26.482", "c"=68]
"pmaji/crypto-whale-watching-app" ["l"="-10.222,11.613", "c"=408]
"yhilpisch/tpqoa" ["l"="-9.063,13.287"]
"oanda/v20-python" ["l"="-9.04,13.415"]
"handayu/IB-TWS-Multicharts-Trading" ["l"="-8.218,13.325"]
"handayu/MC-Fundament-Code" ["l"="-8.217,13.31"]
"EasyAI/Simple-Binance-Trader" ["l"="-11.283,11.566", "c"=1243]
"neilsmurphy/backtrader_template" ["l"="-9.047,13.316"]
"dimnorin/backtrader-live" ["l"="-9.034,13.313"]
"SinaPournia/DeepLearning-Trader" ["l"="-9.103,13.422"]
"Hephyrius/Binance-Signal-Bot" ["l"="-11.324,11.576", "c"=1243]
"schardtbc/iexcloud_api_wrapper" ["l"="-8.509,13.002"]
"schardtbc/iexcloudR" ["l"="-8.429,13.007"]
"SpiralDevelopment/candlestick-patterns" ["l"="-9.205,13.172"]
"cm45t3r/candlestick" ["l"="-9.599,10.324", "c"=614]
"stockalgo/stolgo" ["l"="-9.207,13.218"]
"hackingthemarkets/candlestick-screener" ["l"="-8.19,11.204", "c"=807]
"SpiralDevelopment/RSI-divergence-detector" ["l"="-9.229,13.247"]
"cderinbogaz/inpredo" ["l"="-9.319,13.237"]
"jchao01/TradingView-data-scraper" ["l"="-8.363,11.332", "c"=807]
"rghuckins/robinhood-google-sheets" ["l"="-8.431,12.927"]
"fbertram/TuringTrader" ["l"="-10.549,13.636", "c"=1168]
"WenjieZ/TSCV" ["l"="45.335,26.525", "c"=68]
"fracdiff/fracdiff" ["l"="-9.155,13.037"]
"rspadim/Adv_Fin_ML" ["l"="-9.192,13.124"]
"DidierRLopes/timeseries-cv" ["l"="-9.233,13.121"]
"Jianeng/Deep-Learning-in-Asset-Pricing" ["l"="-8.767,13.349"]
"rubenbriones/Probabilistic-Sharpe-Ratio" ["l"="-9.273,13.103"]
"anvk/google-stocks" ["l"="-8.149,12.846"]
"zachwill/fred" ["l"="-8.768,13.056"]
"avelkoski/FRB" ["l"="-8.764,13.073"]
"jjotterson/datapungi_fed" ["l"="-8.759,13.047"]
"letsgoexploring/fredpy" ["l"="-8.754,13.055"]
"mortada/fredapi" ["l"="-8.84,13"]
"7astro7/full_fred" ["l"="-8.75,13.07"]
"marketneutral/stock-cluster-nlp" ["l"="-9.254,13.094"]
"daehkim/pair-trading" ["l"="-9.247,13.037"]
"Jackal08/QuantInsti-Final-Project-Statistical-Arbitrage" ["l"="-9.044,13.244"]
"ssunger/Advances-in-Financial-Machine-Learning" ["l"="-9.325,12.996"]
"teatime77/xbrl-reader" ["l"="-9.624,12.686"]
"chakki-works/xbrr" ["l"="-9.672,12.651"]
"bmoscon/cryptostore" ["l"="-10.67,12.947", "c"=265]
"dysonance/Trendy" ["l"="-9.094,13.221"]
"sohandillikar/SupportResistance" ["l"="-9.168,13.251"]
"nife8975/Trendline_Tools" ["l"="-9.135,13.274"]
"nakulnayyar/SupResGenerator" ["l"="-9.118,13.265"]
"WestXu/support_resistance_line" ["l"="-9.156,13.234"]
"albertsl/support-resistance_trading-bot" ["l"="-9.12,13.28"]
"YuChenAmberLu/Options-Calculator" ["l"="-8.917,13.29"]
"yzoz/python-option-calculator" ["l"="-8.904,13.32"]
"AnthonyBradford/optionmatrix" ["l"="-8.921,13.327"]
"hsjharvey/Option-Pricing" ["l"="-8.874,13.266"]
"gabrielepompa88/pyBlackScholesAnalytics" ["l"="-8.898,13.301"]
"selimamrouni/Deep-Portfolio-Management-Reinforcement-Learning" ["l"="-9.52,14.687", "c"=970]
"jkirkby3/PROJ_Option_Pricing_Matlab" ["l"="-8.829,13.19"]
"jkirkby3/fypy" ["l"="-8.819,13.27"]
"attack68/rateslib" ["l"="-8.762,13.19"]
"jcfrei/Heston" ["l"="-8.788,13.251"]
"jkirkby3/pymle" ["l"="-8.801,13.263"]
"YuMan-Tam/deep-hedging" ["l"="-8.677,12.935"]
"sebastianheinz/stockprediction" ["l"="-9.237,12.718"]
"tencia/stocks_rnn" ["l"="-9.288,12.632"]
"newellp88/V20pyPro" ["l"="-9.261,12.657"]
"FraPochetti/StocksProject" ["l"="-9.308,12.678"]
"llSourcell/How-to-Predict-Stock-Prices-Easily-Demo" ["l"="-9.578,14.616", "c"=970]
"Rachnog/Deep-Trading" ["l"="-9.65,14.686", "c"=970]
"keon/deepstock" ["l"="-9.634,14.646", "c"=970]
"26hzhang/StockPrediction" ["l"="-9.266,12.75"]
"zipline-live/zipline" ["l"="-8.813,13.112"]
"iniself/noba" ["l"="-9.077,13.294"]
"lamkashingpaul/backtrader_plotly" ["l"="-9.061,13.301"]
"Oxylo/btreport" ["l"="-9.094,13.334"]
"MathSci/fecon236" ["l"="-9.066,13.103"]
"lnsongxf/fecon235" ["l"="-9.097,13.152"]
"LastAncientOne/Beverages_Long_Term_Investment" ["l"="-9.312,13.02"]
"LastAncientOne/Scrape_Data" ["l"="-9.326,13.029"]
"paduel/MT_zeromq_vnc_docker" ["l"="-9.487,13.121"]
"Python-para-Trading/Mini-Retos-PPT" ["l"="-9.423,13.121"]
"khramkov/Backtrader-MQL5-API" ["l"="-9.366,11.518", "c"=808]
"teddykoker/blog" ["l"="-8.561,12.835"]
"teddykoker/survivorship-free-spy" ["l"="-8.619,12.882"]
"CharlesLoo/stock-pattern-recorginition" ["l"="-9.173,13.372"]
"gaborvecsei/Stocks-Pattern-Analyzer" ["l"="-9.206,13.41"]
"RiccardoM/Forex-and-Stock-Python-Pattern-Recognizer" ["l"="-9.091,13.407"]
"kanwalpreet18/canslimTechnical" ["l"="-9.212,13.436"]
"white07S/TradingPatternScanner" ["l"="-9.19,13.288"]
"pecu/FinancialVision" ["l"="-9.188,13.45"]
"Roshanmahes/Quant-Finance" ["l"="-9.213,13.463"]
"amit-agni/candlesticks-deeplearning" ["l"="-9.227,13.509"]
"gmoncarz/renko" ["l"="-9.319,13.185"]
"lamres/pairs_trading_cryptocurrencies_strategy_catalyst" ["l"="-9.372,13.186"]
"tdmdal/rl-hedge-2019" ["l"="-8.587,12.842"]
"happydasch/btoandav20" ["l"="-9.008,13.375"]
"happydasch/btconfig" ["l"="-9.01,13.334"]
"ultra1971/backtrader_ib_insync" ["l"="-9.006,13.354"]
"oanda/py-api-trading" ["l"="-9.029,13.45"]
"toloco/pyoanda" ["l"="-9.032,13.476"]
"jonromero/forex_algotrading" ["l"="-8.978,13.412"]
"oanda/py-api-streaming" ["l"="-9.037,13.437"]
"anthonyng2/FX-Trading-with-Python-and-Oanda" ["l"="-9.049,13.383"]
"albertosantini/argo" ["l"="-10.723,12.025", "c"=408]
"samuraitaiga/py-metatrader" ["l"="-9.522,11.376", "c"=808]
"kayuksel/forex-rl-challenge" ["l"="-9.484,14.731", "c"=970]
"noootown/Forex-DQN" ["l"="-9.033,13.495"]
"khramkov/MQL5-JSON-API" ["l"="-9.38,11.51", "c"=808]
"xiubooth/ML_Codes" ["l"="-8.717,13.368"]
"zeyuz35/Evaluation-of-Machine-Learning-in-Asset-Pricing" ["l"="-8.703,13.36"]
"WojciechZankowski/iextrading4j" ["l"="-9.753,10.803", "c"=614]
"bilalq/iex-api" ["l"="-8.611,12.935"]
"JCreeks/Machine-Learning-in-Finance" ["l"="-9.139,13.153"]
"PacktPublishing/Machine-Learning-for-Finance-video" ["l"="-9.188,13.107"]
"twiecki/financial-analysis-python-tutorial" ["l"="-8.905,13.17"]
"twiecki/datascientist_tutorial" ["l"="-8.869,13.226"]
"danielfrg/PythonFinance" ["l"="-8.806,13.288"]
"twiecki/Bayesian-Modelling-in-Python" ["l"="-8.876,13.216"]
"PacktPublishing/Practical-Time-Series-Analysis" ["l"="45.006,24.097", "c"=166]
"volkovacodes/Block_Codes" ["l"="-9.62,12.595"]
"leoliu0/name_matching" ["l"="-9.592,12.617"]
"euclidjda/deep-quant" ["l"="-9.567,12.951"]
"euclidjda/dnn-quant" ["l"="-9.601,12.953"]
"euclidjda/value-investing-studies" ["l"="-9.481,12.944"]
"AlphaSmartDog/DeepLearningNotes" ["l"="-9.639,14.704", "c"=970]
"Ameobea/Robinhood" ["l"="-8.482,13.029"]
"arshyasharifian/investbot" ["l"="-8.435,12.968"]
"briansrls/Robinhood-for-Google-Finance" ["l"="-8.443,12.989"]
"lhwolff15/InsiderTrading" ["l"="-7.981,11.086", "c"=807]
"moosh3/robinhood-react" ["l"="-8.463,13.022"]
"harunzengin/ichimokuAlerter" ["l"="-9.441,12.614"]
"bolobox/ichibot" ["l"="-9.468,12.593"]
"zerodha/gokiteconnect" ["l"="-9.558,13.363"]
"zerodha/kiteconnectjs" ["l"="-9.501,13.363"]
"bingit2/TradingView-to-ThinkorSwim" ["l"="-8.528,13.223"]
"korygill/technical-analysis" ["l"="-8.514,13.25"]
"sjjohns/ThinkOrSwimStudies" ["l"="-8.53,13.211"]
"bernardcheng/tos_options_dashboard" ["l"="-8.548,13.203"]
"RyanHendricks/Thinkorswim-Indicators" ["l"="-8.506,13.237"]
"sureshja/ThinkOrSwim" ["l"="-8.492,13.24"]
"LiDan456/GAN-AD" ["l"="52.526,14.759", "c"=569]
"3778/Ward2ICU" ["l"="-9.867,12.885"]
"472647301/tradingview-web-socket" ["l"="-8.431,11.442", "c"=807]
"business-science/riingo" ["l"="-8.655,13.167"]
"eliangcs/pystock-data" ["l"="-9.582,12.772"]
"wang-ye/robinhood-crypto" ["l"="-8.402,12.896"]
"rippledj/uspto" ["l"="-8.054,13.878"]
"USPTO/bulk-data-tools" ["l"="-8.045,13.866"]
"MicroPyramid/django-web-profiler" ["l"="-8.857,13.645"]
"MicroPyramid/microurl" ["l"="-8.879,13.648"]
"MicroPyramid/django-webpacker" ["l"="-8.866,13.655"]
"MicroPyramid/django-simple-pagination" ["l"="-8.877,13.659"]
"MicroPyramid/django-email-gateway" ["l"="-8.869,13.629"]
"MicroPyramid/docker-box" ["l"="-8.867,13.645"]
"MicroPyramid/django-simple-forum" ["l"="-8.866,13.64"]
"MicroPyramid/MicroSite" ["l"="-8.854,13.656"]
"MicroPyramid/IAM-Manager" ["l"="-8.857,13.703"]
"MicroPyramid/python-validate" ["l"="-8.862,13.671"]
"MicroPyramid/gitlab-webhook-django" ["l"="-8.857,13.677"]
"MicroPyramid/pietrack" ["l"="-8.849,13.674"]
"MicroPyramid/microstorage" ["l"="-8.856,13.665"]
"MicroPyramid/Mongo-Slice" ["l"="-8.863,13.662"]
"BlackArbsCEO/Mixture_Models" ["l"="-9.309,13.139"]
"BlackArbsCEO/option_skew_project_public" ["l"="-9.234,13.136"]
"drewgriffith15/ThinkOrSwim" ["l"="-8.516,13.178"]
"dranem05/thinkscripts-pub" ["l"="-8.526,13.194"]
"crosbymichael/thinkorswim" ["l"="-8.482,13.219"]
"hamiltonkibbe/stocks" ["l"="-9.156,12.927"]
"jasonswearingen/QuantShim" ["l"="-8.911,13.221"]
"lsgro/quantcomponents" ["l"="-9.759,10.771", "c"=614]
"PythonProgramming/Pattern-Recognition-for-Forex-Trading" ["l"="-8.998,13.441"]
"quant-science/sunday-quant-scientist" ["l"="-9.016,12.932"]
"Coder-World04/Time-Series-Analysis-and-Forecasting" ["l"="48.172,26.681", "c"=323]
"jo-cho/Technical_Analysis_and_Feature_Engineering" ["l"="-9.016,13.058"]
"piggyone/chromosphere" ["l"="-9.453,12.165"]
"quantopian/bayesalpha" ["l"="-8.663,13.232"]
"quantopian/robintrack" ["l"="-8.683,13.212"]
"Rachnog/Deep-Portfolio-Management" ["l"="-9.249,12.976"]
"thedimlebowski/Trading-Gym" ["l"="-9.585,14.715", "c"=970]
"Rachnog/Reinforcement-Learning-in-Finance" ["l"="-9.26,12.993"]
"hackthemarket/gym-trading" ["l"="-9.596,14.727", "c"=970]
"kasaai/explain-ml-pricing" ["l"="-9.957,12.462"]
"casact/raw_package" ["l"="-9.939,12.472"]
"apodobytko/10K-MDA-Section" ["l"="-8.489,13.492"]
"chrisspen/django-sec" ["l"="-9.543,12.766"]
"altova/sec-edgar-tools" ["l"="-9.545,12.781"]
"lemieuxm/tdameritrade" ["l"="-8.571,13.189"]
"ysriram1/tdlink" ["l"="-8.575,13.203"]
"neurotrader888/TrendLineAutomation" ["l"="-9.21,13.316"]
"neurotrader888/TechnicalAnalysisAutomation" ["l"="-9.206,13.339"]
"facioquo/stock-indicators-python" ["l"="-9.145,13.171"]
"JaktensTid/true-zigzag" ["l"="-9.168,13.287"]
"ednunezg/pytrendline" ["l"="-9.179,13.265"]
"FreddieWitherden/ta" ["l"="-9.103,13.24"]
"jbalm/ActuarialCashFlowModel" ["l"="-9.898,12.422"]
"bsolomon1124/pyfinance" ["l"="-8.995,13.12"]
"joosthoeks/jhTAlib" ["l"="-9.054,13.174"]
"s0up/robinhood-electron" ["l"="-8.36,12.913"]
"edwardlai3582/RobInDaHood" ["l"="-8.395,12.92"]
"bcwik9/robinhood-on-rails" ["l"="-8.405,12.935"]
"s0up/robinhood-api" ["l"="-8.314,12.899"]
"terzim/StockScreener" ["l"="-9.706,13.109"]
"matt6frey/Python-Stock-Screener" ["l"="-9.735,13.116"]
"joequant/bitquant" ["l"="-8.951,13.28"]
"joequant/algobroker" ["l"="-8.955,13.205"]
"dppalomar/portfolioBacktest" ["l"="-9.29,13.172"]
"skillachie/finsymbols" ["l"="-8.914,13.121"]
"ZachLiuGIS/stock_extractor" ["l"="-8.925,13.103"]
"econdb/inquisitor" ["l"="-8.931,13.116"]
"quantmind/ccy" ["l"="-8.917,13.11"]
"Atrin78/Attention-based-Time-Series-Generation" ["l"="-9.841,12.878"]
"aconstandinou/pairs-trading-equities" ["l"="-9.214,13.194"]
"wzchen/stock_market_prediction" ["l"="-9.267,12.712"]
"jasti/Stock-Predictor" ["l"="-9.284,12.739"]
"jgpavez/LSTM---Stock-prediction" ["l"="-9.304,12.657"]
"mynl/aggregate" ["l"="-9.966,12.442"]
"open-source-modelling/insurance_python" ["l"="-10,12.436"]
"alpacahq/sp100algo" ["l"="-8.725,13.218"]
"wboayue/ibapi" ["l"="-8.475,13.089"]
"kasaai/pc-pricing-tutorial" ["l"="-10.015,12.354"]
"kasaai/simulationmachine" ["l"="-10.021,12.334"]
"casact/imaginator" ["l"="-10.041,12.352"]
"kasaai/insurance" ["l"="-10.038,12.334"]
"voice32/stock_market_indicators" ["l"="-9.131,13.229"]
"Crypto-toolbox/pandas-technical-indicators" ["l"="-9.08,13.13"]
"philipperemy/fractional-differentiation-time-series" ["l"="-9.213,13.073"]
"simaki/fracdiff" ["l"="-9.237,13.055"]
"GireeshS22/upstox" ["l"="-9.796,13.746"]
"tushaar82/Upstox-Algo-Trading" ["l"="-9.808,13.738"]
"mtompkins/openAlgo" ["l"="-8.286,13.263"]
"polyaxon/mloperator" ["l"="-9.376,12.449"]
"polyaxon/polyaxon-quick-start" ["l"="-9.397,12.458"]
"vents-io/vents" ["l"="-9.389,12.448"]
"polyaxon/charts" ["l"="-9.403,12.449"]
"polyaxon/hypertune" ["l"="-9.396,12.44"]
"polyaxon/polyaxon-examples" ["l"="-9.383,12.436"]
"polyaxon/sdks" ["l"="-9.407,12.436"]
"polyaxon/cli" ["l"="-9.387,12.458"]
"tg12/FAIG" ["l"="-9.118,13.582"]
"ig-python/trading-ig" ["l"="-9.078,13.503"]
"gfiocco/node-ig-api" ["l"="-9.146,13.622"]
"g-make-it/IG_Trading_Algo_Scripts_Python" ["l"="-9.095,13.576"]
"poryee/AutoTrading" ["l"="-9.135,13.605"]
"tg12/IG-Index-Scalping-Scraping-Bot" ["l"="-9.128,13.623"]
"karthikramx/algorithmic-trading" ["l"="-9.431,13.408"]
"yudhv/PyTrading" ["l"="-9.482,13.372"]
"nmharmon8/StockMarketGAN" ["l"="-9.392,12.805"]
"golsun/deep-RL-trading" ["l"="-9.544,14.731", "c"=970]
"RomelTorres/av_example" ["l"="-8.531,13.273"]
"LouisChen1992/Deep_Learning_Asset_Pricing" ["l"="-8.679,13.432"]
"mfrdixon/Deep_Fundamental_Factors" ["l"="-8.663,13.445"]
"beinghorizontal/Support-Resistance" ["l"="-9.277,13.276"]
"beinghorizontal/tpo_btc" ["l"="-9.297,13.269"]
"caiobran/mstables" ["l"="-9.562,13.058"]
"jackmoody11/stockscore" ["l"="-9.617,13.077"]
"aaaccell/morningstar" ["l"="-9.607,13.051"]
"asafravid/sss" ["l"="-9.601,13.099"]
"clifton/docker-ib-gateway" ["l"="-8.672,13.114"]
"godelsmarket/IBHistoricalDataDownloader" ["l"="-8.689,13.125"]
"alexprengere/currencyconverter" ["l"="-8.931,13.641"]
"MicroPyramid/forex-python" ["l"="-8.891,13.574"]
"iamlemec/fastpat" ["l"="-8.103,13.866"]
"liuqiyuan/UPET-USPTO-Patent-Exploring-Tool" ["l"="-8.088,13.879"]
"lseffer/stock_screener" ["l"="-9.647,13.095"]
"jackmoody11/autodcf" ["l"="-9.651,13.07"]
"Patent2net/Patent2Net--Old-stuff" ["l"="-8.061,13.815"]
"wipo-analytics/wipo-analytics.github.io" ["l"="-8.055,13.852"]
"simonemainardi/load_patstat" ["l"="-8.059,13.83"]
"mages/ChainLadder" ["l"="-9.911,12.478"]
"lfochamon/poliTeX" ["l"="-10.051,12.647"]
"turing-usp/Aprendizado-por-Reforco" ["l"="-10.011,12.667"]
"rflugum/10K-MDA-Section" ["l"="-8.47,13.491"]
"michaelewens/Non-compete-Law-Changes" ["l"="-8.459,13.506"]
"QuantConnect/quantconnect-cli" ["l"="-8.816,13.205"]
"QuantConnect/FXCM" ["l"="-8.836,13.204"]
"kanghua309/strategy" ["l"="-8.54,14.523", "c"=177]
"shikhirsingh/ETrade-API-Robo-Trading-Monkey-4-NodeJS" ["l"="-8.589,13.368"]
"kenleezle/ruby-etrade" ["l"="-8.57,13.393"]
"genedan/MIES" ["l"="-9.882,12.406"]
"atrybyme/Open-Interest-NSE-Live-Analysis" ["l"="-9.387,13.484"]
"HawkEyeCoding/nse-oi-analysis" ["l"="-9.369,13.485"]
"anurag-roy/shoonya-option-chain" ["l"="-9.429,13.501"]
"aadityatamrakar/option_chain_analysis" ["l"="-9.363,13.467"]
"ExcViral/adaptive-forex-forecast" ["l"="-9.081,13.465"]
"rrguardo/market_predictor_cnn" ["l"="-9.134,13.33"]
"Financial-ML/Market-Analysis-2" ["l"="-9.107,13.494"]
"westonplatter/chesterton" ["l"="-8.428,12.947"]
"aamazie/Robinhood" ["l"="-8.414,12.958"]
"SigCGANs/Sig-Wasserstein-GANs" ["l"="-9.824,12.895"]
"jackindavao/patent-data-mining" ["l"="-8.052,13.93"]
"poldham/lensr" ["l"="-8.072,13.904"]
"dppalomar/covFactorModel" ["l"="-9.345,13.194"]
"dppalomar/highOrderPortfolios" ["l"="-9.338,13.181"]
"alpha-miner/portfolio-optimizer" ["l"="-9.178,13.189"]
"backtradercn/backtrader_cn_api_example" ["l"="-9.115,13.379"]
"backtrader/backtrader-docs" ["l"="-9.128,13.397"]
"FrozenTundraTrader/sierrachart" ["l"="-8.465,13.365"]
"gc5150/sierrachart" ["l"="-8.486,13.313"]
"FutTrader/footprint-system" ["l"="-8.472,13.313"]
"aliisoli/candlesticks_study" ["l"="-9.277,13.643"]
"je-suis-tm/search-and-sort" ["l"="-9.094,12.588"]
"helmersl/patent_similarity_search" ["l"="-8.161,13.933"]
"ryanwhalen/patent_similarity_data" ["l"="-8.149,13.925"]
"AI-Growth-Lab/Patent_p2p_similarity_w2v" ["l"="-8.139,13.937"]
"jiehsheng/PatentBERT" ["l"="-8.156,13.904"]
"anthonyng2/udemy-the-complete-machine-learning-course-with-python" ["l"="-9.114,13.321"]
"alpacahq/alpaca-erasure" ["l"="-8.708,13.143"]
"jiewwantan/StarTrader" ["l"="-9.549,14.812", "c"=970]
"yhilpisch/mvportfolio" ["l"="-9.101,13.178"]
"yhilpisch/dnanlp" ["l"="-9.115,13.219"]
"alpacahq/insomnia-workspace" ["l"="-8.33,13.066"]
"linux08/Dapp" ["l"="-8.327,13.049"]
"MicroPyramid/forex-rates-mobile-app" ["l"="-8.896,13.665"]
"samchaaa/market_profile" ["l"="-9.343,13.284"]
"sivamgr/tpo_market_profile" ["l"="-9.315,13.274"]
"ashishkumar30/Microservices" ["l"="-9.573,13.397"]
"ashishkumar30/UpGrad-Python-assignments-2018" ["l"="-9.567,13.41"]
"paduel/Python_para_Trading" ["l"="-9.458,13.116"]
"Python-para-Trading/Webinars-Docs" ["l"="-9.472,13.11"]
"691175002/BLPInterface" ["l"="-8.998,13.274"]
"bpsmith/pybbg" ["l"="-8.978,13.23"]
"PaulMest/tia" ["l"="-8.978,13.324"]
"cenkcorapci/forex-prediction" ["l"="-9.07,13.451"]
"calmitchell617/Springbok" ["l"="-8.781,13.196"]
"pbharrin/alpha-compiler" ["l"="-8.803,13.17"]
"JuliaActuary/MortalityTables.jl" ["l"="-9.844,12.408"]
"JuliaActuary/Learn" ["l"="-9.861,12.37"]
"frankts/tradestation-web-tradingapp-sample" ["l"="-8.113,13.378"]
"willfavre4/algo_trading" ["l"="-8.09,13.392"]
"ScottfreeLLC/TradeStation" ["l"="-8.146,13.354"]
"Jon-F-Wood/CrossOver-Trading-Strategy" ["l"="-8.16,13.342"]
"willbillionquant/easylanguage-tools" ["l"="-8.11,13.357"]
"ht-tradestation/kbb-sqz-macd" ["l"="-8.197,13.337"]
"brucelinker/EasyLanguage" ["l"="-8.18,13.332"]
"ventureit/vanna-volga_option_price" ["l"="-8.679,13.32"]
"oumarndiaye/Projet_QF_partie_2" ["l"="-8.66,13.335"]
"rfbressan/py_ssvi" ["l"="-8.575,13.342"]
"am3p/python" ["l"="-8.538,13.37"]
"fjxmlzn/PacGAN" ["l"="-9.966,12.772"]
"fjxmlzn/GPUTaskScheduler" ["l"="-9.908,12.79"]
"akashgit/VEEGAN" ["l"="-10.001,12.763"]
"CCCzKen/easy2python" ["l"="-8.089,13.36"]
"activequant/easylanguage_scripts" ["l"="-8.129,13.346"]
"Queeq/pydtc" ["l"="-8.388,13.407"]
"jason51553262/python-ws-dtc-client" ["l"="-8.409,13.394"]
"vrishank97/AlgoTrading" ["l"="-9.39,12.914"]
"rob-blackbourn/iex_parser" ["l"="-8.612,13.175"]
"amitadate/S-LSTM-GAN-MNIST" ["l"="-9.899,12.9"]
"jsikyoon/SequentialData-GAN" ["l"="-9.871,12.917"]
"amitadate/gan-compression" ["l"="-9.928,12.911"]
"thetatool/tastyworks-rs" ["l"="-8.282,13.105"]
"arun-mansa/tradingbot" ["l"="-8.869,13.91"]
"kumotrader/ichimoku-crypto" ["l"="-9.396,12.664"]
"mkjiau/MultiCharts_Dll" ["l"="-8.202,13.305"]
"hrbzkm98/ml-research" ["l"="-8.69,13.371"]
"zoome0215/predictBO" ["l"="-8.966,13.787"]
"TheEliteAnalyst/Riex" ["l"="-8.387,13.004"]
"BlackArbsCEO/synthetic_time_series" ["l"="-9.342,13.149"]
"filipemarques87/fx-charts" ["l"="-9.309,13.197"]
"nhaga/Awesome-Quant-Machine-Learning-Trading" ["l"="-8.604,13.28"]
"nhaga/financial-machine-learning" ["l"="-8.587,13.303"]
"PlamenStilyianov/python-cookbook" ["l"="-8.82,13.168"]
"PlamenStilyianov/PyCuda" ["l"="-8.803,13.193"]
"jo-cho/advances_in_financial_machine_learning" ["l"="-9.285,13.089"]
"jo-cho/meta_labeling_simplified" ["l"="-9.25,13.081"]
"ashishkumar30/UpGrad-GUI-Project-2018" ["l"="-9.601,13.414"]
"binance/binance-connector-python" ["l"="-9.838,10.461", "c"=614]
"teenyicons/teenyicons" ["l"="-3.55,-29.124", "c"=4]
"SamPom100/UnusualVolumeDetector" ["l"="-8.949,13.087"]
"Z4nzu/hackingtool" ["l"="12.753,-9.972", "c"=18]
"Superalgos/Superalgos" ["l"="-10.565,11.507", "c"=408]
"ctubio/Krypto-trading-bot" ["l"="-10.43,11.578", "c"=408]
"michaelgrosner/tribeca" ["l"="-10.362,11.655", "c"=408]
"DaveSkender/Stock.Indicators" ["l"="-10.58,13.64", "c"=1168]
"mikinty/Trading-Interview-Questions" ["l"="31.781,-25.989", "c"=531]
"waditu/tushare" ["l"="-8.386,14.645", "c"=177]
"hugo2046/QuantsPlaybook" ["l"="-8.397,14.778", "c"=177]
"QuantML-Github/QuantML" ["l"="-8.607,15.768", "c"=565]
"purvasingh96/StockGram-Intelligent-Portfolio-Manager" ["l"="-9.308,12.957"]
"dkl0707/factor_backtest" ["l"="-8.71,15.793", "c"=565]
"chenditc/investment_data" ["l"="-8.59,15.736", "c"=565]
"vnpy/vnpy" ["l"="-8.327,14.642", "c"=177]
"yutiansut/QUANTAXIS" ["l"="-8.458,14.714", "c"=177]
"akfamily/akshare" ["l"="-8.353,14.76", "c"=177]
"UFund-Me/Qbot" ["l"="-8.295,14.736", "c"=177]
"ricequant/rqalpha" ["l"="-8.462,14.679", "c"=177]
"jrothschild33/learn_backtrader" ["l"="-8.455,14.803", "c"=177]
"QuantWorld2022/backtrader" ["l"="-8.659,15.776", "c"=565]
"zwdnet/MyQuant" ["l"="-8.744,15.845", "c"=565]
"FinHackCN/finhack" ["l"="-8.647,15.736", "c"=565]
"HuaRongSAO/talib-document" ["l"="-8.5,14.754", "c"=177]
"mpquant/MyTT" ["l"="-8.478,14.822", "c"=177]
"tkfy920/qstock" ["l"="-8.464,14.862", "c"=177]
"Finnhub-Stock-API/finnhub-python" ["l"="-8.896,13.066"]
"pssolanki111/polygon" ["l"="-8.694,13.223"]
"Nasdaq/data-link-python" ["l"="-8.883,13.055"]
"saeed349/Microservices-Based-Algorithmic-Trading-System" ["l"="-9.043,13.121"]
"saeed349/Microservices-Based-Algorithmic-Trading-System-V-2.0" ["l"="-9.067,13.19"]
"saeed349/Quant-Trading-Cloud-Infrastructure" ["l"="-9.074,13.176"]
"ultra1971/algotrading_stack" ["l"="-9.261,13.13"]
"saeed349/Deep-Reinforcement-Learning-in-Trading" ["l"="-9.548,14.753", "c"=970]
"KVignesh122/AssetNewsSentimentAnalyzer" ["l"="-8.873,13.019"]
"algobulls/pyalgostrategypool" ["l"="-9.197,13.147"]
"AI4Finance-Foundation/FinRL-Meta" ["l"="-9.6,14.868", "c"=970]
"tylerebowers/Schwabdev" ["l"="-8.567,13.132"]
"hackingthemarkets/tdameritrade" ["l"="-8.095,11.231", "c"=807]
"itsjafer/schwab-api" ["l"="-8.526,13.145"]
"ranjanrak/optionchainstream" ["l"="-9.417,13.407"]
"TechfaneTechnologies/QtsApp" ["l"="-9.318,13.372"]
"srikar-kodakandla/fully-automated-nifty-options-trading" ["l"="-9.433,13.426"]
"kaushikjadhav01/Cancer-Donation-Portal-Python-Flask-App" ["l"="-9.185,12.625"]
"kaushikjadhav01/Implementaion-of-Private-Cloud-using-ownCloud" ["l"="-9.182,12.636"]
"kaushikjadhav01/ModSecurityCRS" ["l"="-9.172,12.635"]
"kaushikjadhav01/Live-Video-Sketching-through-webcam-using-OpenCv-Python" ["l"="-9.175,12.624"]
"kaushikjadhav01/Object-Detecion-via-Smartphone-Camera-using-Faster-R-CNN" ["l"="-9.166,12.628"]
"mlpack/mlpack" ["l"="47.673,29.17", "c"=89]
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" ["l"="-9.173,12.646"]
"kaushikjadhav01/COVID-19-Detection-Flask-App-based-on-Chest-X-rays-and-CT-Scans" ["l"="-9.159,12.639"]
"kaushikjadhav01/Real-Time-Object-Detection-API-using-TensorFlow" ["l"="-9.165,12.615"]
"kaushikjadhav01/Movie-Recommendation-Chatbot" ["l"="-9.156,12.624"]
"deepfence/ThreatMapper" ["l"="-8.993,14.337"]
"deepfence/PacketStreamer" ["l"="-9.036,14.31"]
"deepfence/YaraHunter" ["l"="-8.979,14.29"]
"deepfence/FlowMeter" ["l"="-9.005,14.301"]
"deepfence/SecretScanner" ["l"="-9.008,14.244"]
"deepfence/ebpfguard" ["l"="-9.017,14.281"]
"kubescape/kubescape" ["l"="7.612,-8.81", "c"=14]
"anchore/grype" ["l"="7.665,-8.635", "c"=14]
"aquasecurity/cloudsploit" ["l"="11.283,-4.696", "c"=147]
"bridgecrewio/checkov" ["l"="10.477,-6.272", "c"=162]
"falcosecurity/falco" ["l"="7.745,-8.746", "c"=14]
"aquasecurity/trivy" ["l"="7.825,-8.559", "c"=14]
"prowler-cloud/prowler" ["l"="11.353,-4.729", "c"=147]
"infobyte/faraday" ["l"="-47.95,-30.502", "c"=11]
"aquasecurity/kube-bench" ["l"="7.701,-8.809", "c"=14]
"nccgroup/ScoutSuite" ["l"="11.327,-4.691", "c"=147]
"ritvikmath/Time-Series-Analysis" ["l"="44.963,24.062", "c"=166]
"josephchenhk/qtrader" ["l"="-10.544,10.831", "c"=720]
"andredumas/techan.js" ["l"="-8.378,11.639", "c"=807]
"TulipCharts/tulipindicators" ["l"="-8.991,13.095"]
"FraPochetti/SP-500IndexPythonForecast" ["l"="-9.353,12.644"]
"DMTSource/daily-stock-forecast" ["l"="-9.336,12.676"]
"QuantEcon/QuantEcon.py" ["l"="42.757,26.758", "c"=1056]
"wondertrader/wondertrader" ["l"="-8.421,14.674", "c"=177]
"binance/binance-public-data" ["l"="-9.857,10.488", "c"=614]
"hackingthemarkets/tradingview-alpaca-strategy-alert-webhook-heroku" ["l"="-8.193,11.221", "c"=807]
"hackingthemarkets/tradingview-interactive-brokers" ["l"="-8.543,13.099"]
"hackingthemarkets/interactive-brokers-demo" ["l"="-8.524,13.127"]
"alexmojaki/futurecoder" ["l"="45.437,20.854", "c"=20]
"hackingthemarkets/tradekit" ["l"="-8.178,11.224", "c"=807]
"cerlymarco/tsmoothie" ["l"="45.413,26.452", "c"=68]
"smahesh29/Gender-and-Age-Detection" ["l"="32.894,29.222", "c"=57]
"firmai/data-science-career" ["l"="48.252,26.085", "c"=323]
"akfamily/aktools" ["l"="-8.532,14.823", "c"=177]
"edtechre/pybroker" ["l"="-8.908,12.826"]
"akfamily/awesome-data" ["l"="-8.574,14.822", "c"=177]
"JerBouma/PersonalFinance" ["l"="-9.175,12.913"]
"VincentRaia/PyFinancialData" ["l"="-9.403,13"]
"bitdefender/hvmi" ["l"="-43.043,-35.257", "c"=40]
"SamPom100/OptionsAnalyzer" ["l"="-8.89,13.21"]
"stayawayinesctec/stayaway-app" ["l"="-1.012,3.126", "c"=258]
"facebookresearch/TransCoder" ["l"="36.033,-0.233", "c"=315]
"kaito1410/AutoDD_Rev2" ["l"="-8.996,13.214"]
"Andrew-Reis-SMU-2022/Options_Based_Trading" ["l"="-8.887,13.181"]
"IBM/fhe-toolkit-linux" ["l"="51.353,1.342", "c"=378]
"ckz8780/market-toolkit" ["l"="-9.013,12.824"]
"Ncohen10/StockAlgorithm" ["l"="-9.122,13.085"]
"DjangoGirls/djangogirls" ["l"="46.896,18.675", "c"=52]
"Aniruddha-Deb/quant-prep" ["l"="31.825,-25.961", "c"=531]
"cybergeekgyan/Quant-Developers-Resources" ["l"="31.849,-25.969", "c"=531]
"VincentTatan/ValueInvesting" ["l"="-9.386,12.94"]
"skfolio/skfolio" ["l"="-8.972,12.967"]
"aapatre/Automatic-Udemy-Course-Enroller-GET-PAID-UDEMY-COURSES-for-FREE" ["l"="-52.179,14.249", "c"=592]
"kotartemiy/newscatcher" ["l"="45.933,23.893", "c"=588]
"bashtage/linearmodels" ["l"="43.745,25.652", "c"=372]
"RJT1990/pyflux" ["l"="45.55,26.296", "c"=68]
"alkaline-ml/pmdarima" ["l"="45.444,26.38", "c"=68]
"hjones20/fundamental-analysis" ["l"="-8.988,13.349"]
"marcosan93/Stock-Performance-Predictor-2.0" ["l"="-8.947,13.43"]
"Skumarr53/Stock-Fundamental-data-scraping-and-analysis" ["l"="-8.998,13.316"]
"ebradyjobory/finance.js" ["l"="-8.041,12.864"]
"lequant40/portfolio_allocation_js" ["l"="-7.971,12.848"]
"kgkars/tvm-financejs" ["l"="-8.008,12.856"]
"cinar/indicatorts" ["l"="-9.593,10.343", "c"=614]
"oussamahamdaoui/forgJs" ["l"="-4.188,-28.826", "c"=4]
"TarekRaafat/autoComplete.js" ["l"="22.555,-29.542", "c"=36]
"wondertrader/wtpy" ["l"="-8.483,14.706", "c"=177]
"gretelai/gretel-synthetics" ["l"="44.817,26.54", "c"=68]
"fjxmlzn/DoppelGANger" ["l"="-9.82,12.819"]
"areed1192/tradestation-python-api" ["l"="-8.392,13.241"]
"0xrushi/tradingview-scraper" ["l"="-8.311,11.357", "c"=807]
"ebidel/polymer-gmail" ["l"="-8.506,-24.713", "c"=454]
"d-e-s-o/apcacli" ["l"="-8.422,13.194"]
"d-e-s-o/polyio" ["l"="-8.404,13.199"]
"coding-kitties/investing-algorithm-framework" ["l"="-9.002,13.058"]
"ProsusAI/finBERT" ["l"="-9,12.68"]
"yya518/FinBERT" ["l"="53.795,26.925", "c"=60]
"valuesimplex/FinBERT" ["l"="53.632,27.155", "c"=60]
"psnonis/FinBERT" ["l"="53.817,26.943", "c"=60]
"icoxfog417/awesome-financial-nlp" ["l"="53.722,27.048", "c"=60]
"yumoxu/stocknet-code" ["l"="-8.436,15.652", "c"=565]
"Weifanwong/google_patent_spider" ["l"="-8.086,13.775"]
"santosjorge/cufflinks" ["l"="45.247,26.072", "c"=68]
"kotartemiy/pygooglenews" ["l"="45.93,23.941", "c"=588]
"Lightstreamer/Lightstreamer-example-StockList-client-python" ["l"="-9.118,13.547"]
"lewisbarber/ig-markets-rest-api-python-library" ["l"="-9.095,13.528"]
"Dave-Vallance/bt-ig-store" ["l"="-9.093,13.546"]
"maroxe/igtrade" ["l"="-9.081,13.536"]
"ig-python/ig-markets-rest-api-python-library" ["l"="-9.107,13.531"]
"vicaws/neuralSDE-marketmodel" ["l"="-8.431,13.098"]
"femtotrader/pandas_talib" ["l"="-9.013,13.118"]
"hackobi/AI-Scalpel-Trading-Bot" ["l"="-11.274,11.611", "c"=1243]
"yql/yql-tables" ["l"="-9.444,12.577"]
"gurch101/StockScraper" ["l"="-9.334,12.698"]
"derek/node-yql" ["l"="-9.488,12.532"]
"fonnesbeck/scipy2014_tutorial" ["l"="39.285,35.998", "c"=714]
"anthonyng2/ib" ["l"="-8.7,13.041"]
"CarlosGatti/bot-python-iq-option" ["l"="-8.934,13.899"]
"jeffex/bot-sinais-2.0" ["l"="-8.951,13.984"]
"lukefeix/Rob-de-MHI-para-IQoption-Aulas-Completas" ["l"="-8.939,13.967"]
"cleitonleonel/pyquotex" ["l"="-8.913,14.017"]
"kodando-com-Faria/iqoption-robot" ["l"="-8.957,13.948"]
"ejtraderLabs/ejtraderIQ" ["l"="-8.957,13.965"]
"QuantFans/quantdigger" ["l"="-8.52,14.704", "c"=177]
"botcrypto-io/awesome-crypto-trading-bots" ["l"="-10.511,11.478", "c"=408]
"tatsath/fin-ml" ["l"="-9.088,12.892"]
"vijaythapa333/web-design-course-restaurant" ["l"="-9.172,12.373"]
"vijaythapa333/food-order-website-php" ["l"="-9.169,12.429"]
"SunshowerC/fund-strategy" ["l"="-8.376,14.936", "c"=177]
"SimFin/simfin-tutorials" ["l"="-9.305,12.929"]
"quantopian/qgrid" ["l"="43.577,23.976", "c"=95]
"stefan-jansen/pyfolio-reloaded" ["l"="-8.978,13.033"]
"GitGuardian/ggshield" ["l"="56.016,-10.986", "c"=24]
"mrfhink/IQ-binary-robot" ["l"="-8.959,13.894"]
"mariofrans/PROJECT__AI-Binary-Options-Trading-Bot" ["l"="-8.93,13.882"]
"sumanblack666/IQ-Option-Lua-scripts" ["l"="-8.989,13.921"]
"irangarcia/binary-options-trading-bot" ["l"="-8.948,13.886"]
"marsandu/PriceAction" ["l"="-9.325,13.208"]
"stockalgo/bandl" ["l"="-9.28,13.236"]
"finnhubio/Finnhub-API" ["l"="-11.106,10.654", "c"=720]
"Finnhub-Stock-API/finnhub-go" ["l"="-11.055,10.622", "c"=720]
"arabacibahadir/sup-res" ["l"="-9.185,13.241"]
"judopro/Stock_Support_Resistance_ML" ["l"="-9.207,13.27"]
"SpencerPao/Quantitative_Strategies" ["l"="-9.176,13.099"]
"bradleyboyuyang/Statistical-Arbitrage" ["l"="-10.838,12.953", "c"=265]
"IanLKaplan/pairs_trading" ["l"="-9.322,13.049"]
"yhilpisch/lvvd" ["l"="-9.095,13.128"]
"opendoor-labs/pyfin" ["l"="-8.982,13.152"]
"AlainDaccache/Quantropy" ["l"="-9.076,12.485"]
"viniesposito/py-mlfactor" ["l"="-9.073,12.387"]
"viniesposito/factor-playground" ["l"="-9.076,12.449"]
"PierreNowi/cs230-project" ["l"="-9.073,12.423"]
"wqk666999/CNN-LSTM-Attention" ["l"="-8.814,15.014", "c"=177]
"netsharecmu/NetShare" ["l"="-40.133,-32.76", "c"=903]
"ydataai/ydata-synthetic" ["l"="50.61,-0.438", "c"=421]
"vanderschaarlab/mlforhealthlabpub" ["l"="-9.834,12.797"]
"mirkosavasta/GANetano" ["l"="-9.858,12.791"]
"sdv-dev/SDGym" ["l"="44.86,26.506", "c"=68]
"NagarajuGunda/PyAlgoMate" ["l"="-9.392,13.342"]
"JagadeeshBoyidi/AlgoOriginals-TimeBasedStraddles" ["l"="-9.423,13.349"]
"yashrj25/Entirety-Codes" ["l"="-9.395,13.382"]
"jugaad-py/jugaad-trader" ["l"="-9.409,13.394"]
"marketcalls/openalgo" ["l"="-9.39,13.397"]
"imvinaypatil/kinetick" ["l"="-9.366,13.382"]
"nickmccullum/algorithmic-trading-python" ["l"="-9.015,12.798"]
"olofmogren/c-rnn-gan" ["l"="-9.852,12.862"]
"zalandoresearch/pytorch-ts" ["l"="44.975,24.322", "c"=166]
"finos/legend" ["l"="-5.244,10.999", "c"=452]
"OpenGamma/Strata" ["l"="-5.309,10.49", "c"=452]
"filmackay/blpapi-py" ["l"="-8.965,13.314"]
"atreyuxtrading/atreyu-backtrader-api" ["l"="-9.022,13.368"]
"ab-trader/backtrader_addons" ["l"="-9.023,13.346"]
"JonathanRaiman/theano_lstm" ["l"="44.858,27.636", "c"=789]
"JonathanRaiman/cython_lstm" ["l"="-9.249,12.382"]
"mkjiau/MFLL" ["l"="-8.31,13.28"]
"tradestation/api-docs" ["l"="-8.28,13.306"]
"yassinemaaroufi/MibianLib" ["l"="-9.039,13.207"]
"gianlucamalato/machinelearning" ["l"="-9.237,13.288"]
"harttraveller/roughsr2" ["l"="-9.277,13.319"]
"OpenSourceAP/CrossSectionDemos" ["l"="-8.672,13.354"]
"chulwoohan/pyanomaly" ["l"="-8.656,13.379"]
"Wentao-Xu/HIST" ["l"="-8.538,15.699", "c"=565]
"KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data" ["l"="-8.483,13.528"]
"man-group/notebooker" ["l"="45.477,19.423", "c"=1169]
"cjbayron/c-rnn-gan.pytorch" ["l"="-9.928,12.881"]
"seyedsaleh/music-generator" ["l"="-9.956,12.886"]
"Jake0303/SimplePythonAlpacaStockTradingBot" ["l"="-8.442,12.873"]
"Jake0303/StockPricePrediction" ["l"="-8.441,12.888"]
"Jake0303/CryptoTradingBot" ["l"="-8.459,12.875"]
"derekbanas/plotly-tutorial" ["l"="-9.453,13.163"]
"derekbanas/pandas-tutorial" ["l"="-9.447,13.147"]
"derekbanas/NumPy-Tutorial" ["l"="-9.446,13.134"]
"derekbanas/matplotlib" ["l"="-9.46,13.139"]
"derekbanas/PythonTutorial" ["l"="-9.427,13.141"]
"derekbanas/TimeSeriesAnalysis" ["l"="-9.436,13.153"]
"fja05680/sp500" ["l"="-8.813,13.04"]
"theOGognf/finagg" ["l"="-8.708,12.969"]
"0xfdf/toraniko" ["l"="-8.893,13.019"]
"datasets/s-and-p-500-companies" ["l"="-4.811,-42.386", "c"=302]
"ahmedengu/trading_evolved" ["l"="-8.721,13.019"]
"braverock/quantstrat" ["l"="40.083,35.435", "c"=51]
"algobulls/pyalgotrading" ["l"="-9.261,13.193"]
"shokru/mlfactor.github.io" ["l"="-9.071,12.34"]
"dophist/kaldi-lstm" ["l"="35.78,2.214", "c"=308]
"dansoutner/LSTM" ["l"="-9.243,12.426"]
"stoqey/ibkr" ["l"="-8.523,13.044"]
"pecu/Series2GAF" ["l"="-9.202,13.506"]
"hackingthemarkets/tradingview-binance-strategy-alert-webhook" ["l"="-8.257,11.257", "c"=807]
"titov-vv/jal" ["l"="31.648,-23.136", "c"=358]
"GeneralMills/pytrends" ["l"="24.703,-28.669", "c"=1455]
"lorenzbr/GooglePatentsPdfDownloader" ["l"="-8.059,13.788"]
"ChickenBenny/Stock-prediction-with-GAN-and-WGAN" ["l"="-9.508,12.853"]
"zshicode/Attention-CLX-stock-prediction" ["l"="-8.863,15.058", "c"=177]
"jwwthu/DL4Stock" ["l"="-8.477,15.636", "c"=565]
"fulifeng/Adv-ALSTM" ["l"="-8.467,15.659", "c"=565]
"thuquant/awesome-quant" ["l"="-8.431,14.699", "c"=177]
"danielm-github/patentsmatch_bingsearchapproach" ["l"="-8.455,13.536"]
"KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Replication-Kit" ["l"="-8.429,13.563"]
"MS20190155/Measuring-Corporate-Culture-Using-Machine-Learning" ["l"="-8.455,13.56"]
"barnumbirr/coinmarketcap" ["l"="-10.165,11.684", "c"=408]
"JarFraud/FraudDetection" ["l"="53.14,15.33", "c"=1273]
"Dagalon/PyStochasticVolatility" ["l"="-8.713,13.204"]
"areed1192/interactive-brokers-api" ["l"="-8.629,13.087"]
"PythonForForex/Interactive-brokers-python-api-guide" ["l"="-8.608,13.105"]
"utilmon/EasyIB" ["l"="-8.612,13.049"]
"Vincentho711/Interactive-Brokers-Trading-Bot" ["l"="-8.63,13.17"]
"Voyz/ibind" ["l"="-8.623,13.019"]
"shilewenuw/get_all_tickers" ["l"="-9.182,12.878"]
"colejhudson/goldman-sachs-quantitative-strategies-research-notes" ["l"="-8.961,12.913"]
"s0ap/gs-quantitative-strategies-research-notes" ["l"="-9.07,12.805"]
"bloomberg/quant-research" ["l"="-9.051,12.714"]
"meagmohit/ml-quant-interview-prep" ["l"="31.812,-25.993", "c"=531]
"Lumiwealth/lumibot" ["l"="-8.908,12.982"]
"nicknochnack/MLTradingBot" ["l"="30.775,30.12", "c"=860]
"idanya/algo-trader" ["l"="-8.982,13.078"]
"atreadw1492/yahoo_fin" ["l"="-8.742,12.875"]
"llazzaro/analyzer" ["l"="-8.962,13.172"]
"sjev/trading-with-python" ["l"="-8.825,13.15"]
"quantiacs-legacy/quantiacs-python" ["l"="-8.846,13.243"]
"MIT-LCP/mimic-iv" ["l"="-33.188,16.17", "c"=404]
"vanderschaarlab/clairvoyance" ["l"="-9.891,12.763"]
"Boulder-Investment-Technologies/lppls" ["l"="-9.148,13.051"]
"Boulder-Investment-Technologies/lppls-ci_tactical_asset_allocation" ["l"="-9.261,13.056"]
"Joshwani/learning-lppl" ["l"="-9.196,13.055"]
"jd8001/LPPL" ["l"="-9.246,13.066"]
"kieranjwood/slow-momentum-fast-reversion" ["l"="-10.843,12.82", "c"=265]
"zcakhaa/Multi-Horizon-Forecasting-for-Limit-Order-Books" ["l"="-10.866,12.866", "c"=265]
"sofienkaabar/the-book-of-trading-strategies" ["l"="45.413,27.195", "c"=68]
"NSEDownload/NSEDownload" ["l"="-9.41,13.465"]
"hootnot/oanda-trading-environment" ["l"="-9.047,13.456"]
"beinghorizontal/BhavFnO" ["l"="-9.369,13.308"]
"harpalnain/ZerodhaAtom" ["l"="-9.431,13.386"]
"vinaykale64/market-monitor" ["l"="-8.9,13.411"]
"ChiragJhawar/ProjectReward" ["l"="-8.887,13.368"]
"Quantreo/Algorithmic-trading-using-PRICE-ACTION-strategies" ["l"="-9.477,13.216"]
"jktis/Trade-Classification-Algorithms" ["l"="-9.297,13.113"]
"miroblog/deep_rl_trader" ["l"="-9.549,14.765", "c"=970]
"edwardhdlu/q-trader" ["l"="-9.565,14.742", "c"=970]
"evdubs/renegade-way" ["l"="-8.893,13.461"]
"evdubs/chart-simulator" ["l"="-8.869,13.512"]
"ApurvShah007/Algorithmic-Trading" ["l"="-8.88,13.419"]
"ApurvShah007/portfolio-optimizer" ["l"="-8.876,13.433"]
"ApurvShah007/Tilt-Bot-RC-Car" ["l"="-8.87,13.412"]
"SC4RECOIN/FlowAlgo-Options-Trader" ["l"="-8.901,13.371"]
"Kamesh-K/Options-Visualization" ["l"="-8.856,13.397"]
"ApurvShah007/ApurvShah007.github.io" ["l"="-8.866,13.422"]
"shner-elmo/TradingView-Screener" ["l"="-8.293,11.417", "c"=807]
"hczhu/TickerTick-API" ["l"="-8.786,12.936"]
"OpenBB-finance/openbb-agents" ["l"="-8.986,12.831"]
"christsaizyt/US-Stock-Market-Prediction-by-LSTM" ["l"="-9.295,12.593"]
"TaifQureshi/Forex-Lstm" ["l"="-9.223,13.109"]
"etai83/lstm_stock_prediction" ["l"="-9.322,12.615"]
"firmai/awesome-google-colab" ["l"="48.25,25.983", "c"=323]
"hhatefi/zipline_bundles" ["l"="-8.837,13.222"]
"shlomiku/zipline-live2" ["l"="-8.852,13.194"]
"hotchilianalytics/zipline-broker" ["l"="-8.854,13.176"]
"debaonline4u/NSE-Data" ["l"="-9.434,13.488"]
"117/repeat" ["l"="-8.404,13.078"]
"alpacahq/typescript-sdk" ["l"="-8.382,13.077"]
"coverdrive/technical-documents" ["l"="61.214,13.184", "c"=313]
"mfrdixon/dq-MM" ["l"="-10.824,12.893", "c"=265]
"zcakhaa/DeepLOB-Deep-Convolutional-Neural-Networks-for-Limit-Order-Books" ["l"="-10.846,12.853", "c"=265]
"sebjai/robust-risk-aware-rl" ["l"="-9.094,12.857"]
"differential-machine-learning/appendices" ["l"="-8.453,13.349"]
"kengerlwl/ChipDistribution" ["l"="-8.53,14.915", "c"=177]
"albertosantini/conpa" ["l"="-8.106,12.857"]
"marcosan93/Stock-Analyzer" ["l"="-8.927,13.477"]
"systematicinvestor/SIT" ["l"="40.02,35.445", "c"=51]
"waytrade/ib-gateway-docker" ["l"="-8.581,13.027"]
"NehrenD/algo_trading_and_quant_strategies" ["l"="-9.295,13.047"]
"maximemorariu/mpoints" ["l"="-11.151,12.799", "c"=265]
"boyboi86/mlfinlab" ["l"="-9.233,12.958"]
"firmai/atspy" ["l"="45.335,26.474", "c"=68]
"Globe-Research/deep-orderbook" ["l"="-10.877,12.852", "c"=265]
"mmargenot/machine-learning-market-maker" ["l"="-10.856,12.904", "c"=265]
"theopenstreet/VPIN_HFT" ["l"="-10.767,13.018", "c"=265]
"jmartinezheras/reproduce-stock-market-direction-random-forests" ["l"="-9.308,12.804"]
"makaveli10/StockPrediction_Transformer" ["l"="-8.892,15.047", "c"=177]
"ZENALC/algobot" ["l"="-47.231,-25.498", "c"=70]
"PythonForForex/ib_insync-guide-interactive-brokers" ["l"="-8.543,13.131"]
"Jake0303/InteractiveBrokersPythonBot" ["l"="-8.548,13.152"]
"corbinbalzan/IBAPICode" ["l"="-8.527,13.109"]
"AlexShakaev/backtesting_and_algotrading_options_with_Interactive_Brokers_API" ["l"="-8.548,13.116"]
"fschur/Deep-Reinforcement-Learning-for-Hedging" ["l"="-8.548,12.808"]
"rotmanfinhub/gamma-vega-rl-hedging" ["l"="-8.65,12.886"]
"OpenActTexts/Loss-Data-Analytics" ["l"="-9.901,12.398"]
"algonitish/SwissAlgoKnife" ["l"="-9.472,13.383"]
"rgaveiga/optionlab" ["l"="-8.968,13.156"]
"mr-easy/streaming_indicators" ["l"="-9.074,13.16"]
"PacktPublishing/Hands-On-Financial-Trading-with-Python" ["l"="-9.166,12.942"]
"RuchiTanmay/nselib" ["l"="-9.451,13.463"]
"jeffrey-liang/quantitative" ["l"="-8.968,13.203"]
"rochars/trade" ["l"="-8.971,13.187"]
"wegamekinglc/VisualPortfolio" ["l"="-8.993,13.183"]
"quantmind/dynts" ["l"="-8.981,13.196"]
"nhaga/QuantLib-Python-Docs" ["l"="-8.639,13.221"]
"sylam/riskflow" ["l"="-8.605,13.247"]
"fkempf92/FactorData" ["l"="-8.647,13.419"]
"CodeLogist/RL-Forex-trader-LSTM" ["l"="-9.491,14.774", "c"=970]
"spidezad/yahoo_finance_data_extract" ["l"="-9.368,12.719"]
"cverluise/PatCit" ["l"="-8.175,13.857"]
"cverluise/openPatstat" ["l"="-8.197,13.866"]
"cverluise/patentcity" ["l"="-8.195,13.882"]
"sparkstartconsulting/IBKR-API-Rust" ["l"="-8.338,12.986"]
"wboayue/rust-ibapi" ["l"="-8.412,12.994"]
"rolandgg/rust_ib_api" ["l"="-8.285,12.98"]
"Roshanmahes/Python-for-Teachers" ["l"="-9.232,13.492"]
"dbogatic/value_investing" ["l"="-9.438,12.935"]
"ketan1741/Benjamin-Graham-and-Warren-Buffett-Model-Stock-Exchange-" ["l"="-9.47,12.925"]
"greyblake/humble-investing" ["l"="-9.597,12.98"]
"rbhatia46/Greenblatt-Magic-Formula-Value-Investing" ["l"="-9.44,12.951"]
"lettergram/parse-uspto-xml" ["l"="-8.01,13.844"]
"Williano/django-bona-blog" ["l"="47.863,19.819", "c"=599]
"FyersDev/fyers-api-sample-code" ["l"="-9.696,13.641"]
"tkanhe/Fyers-API-Access-Token-Generation-V2" ["l"="-9.715,13.658"]
"srikar-kodakandla/algo-trading-using-fyers-broker-api" ["l"="-9.576,13.543"]
"SmartDataAnalytics/linked-uspto-patent-data" ["l"="-8.062,13.867"]
"krishnakuruvadi/portfoliomanager" ["l"="-9.434,13.616"]
"NayakwadiS/Forecasting_Mutual_Funds" ["l"="-9.413,13.565"]
"raiak82/LongShortMemorymodelNifty" ["l"="-9.359,13.252"]
"ApurvShah007/ApurvShah007" ["l"="-8.866,13.441"]
"marc-henrard/algorithmic-differentiation-book" ["l"="-8.514,13.323"]
"aeron7/Mastering-AlgoTrading-A-Beginners-Guide-using-KiteConnect-API" ["l"="-9.515,13.48"]
"storieswithsiva/Stock-Market-Analysis" ["l"="-9.708,12.798"]
"turing-usp/Momentum" ["l"="-9.841,12.734"]
"dkyol/Asset-Pricing-Model" ["l"="-8.633,13.518"]
"turing-usp/turingquant" ["l"="-9.967,12.686"]
"turing-usp/Arvore-de-Habilidades" ["l"="-10.003,12.685"]
"turing-usp/Turing-Talks" ["l"="-9.988,12.683"]
"turing-usp/fernando-pessoa" ["l"="-9.997,12.671"]
"turing-usp/codificacao_de_rostos" ["l"="-10.02,12.68"]
"turing-usp/Quant-basics" ["l"="-9.981,12.668"]
"turing-usp/Workshop-de-Aprendizado-por-Reforco" ["l"="-10.034,12.676"]
"codereverser/folioman" ["l"="-9.399,13.552"]
"codereverser/casparser" ["l"="-9.387,13.567"]
"mehul90/NSE_TRADER" ["l"="-9.448,13.516"]
"upendrasingh12/Algorithmic-trading" ["l"="-9.426,13.521"]
"iniself/backtrader_bokeh" ["l"="-9.095,13.294"]
"xiaohan2012/twitter-sent-dnn" ["l"="53.058,25.28", "c"=172]
"sle14/Vol-surface-parametrisation" ["l"="-8.517,13.414"]
"JunbeomL22/SurfaceFitting" ["l"="-8.564,13.37"]
"sle14/Options-market-making-using-a-stochastic-control-approach" ["l"="-8.492,13.434"]
"mChataign/Beyond-Surrogate-Modeling-Learning-the-Local-Volatility-Via-Shape-Constraints" ["l"="-8.465,13"]
"cl-tohoku/bert-japanese" ["l"="5.766,-41.036", "c"=259]
"hackingthemarkets/stockscreener" ["l"="-8.151,11.211", "c"=807]
"ashishkumar30/Django-Projects" ["l"="-9.607,13.4"]
"casact/PCDM" ["l"="-9.973,12.481"]
"niXman/binapi" ["l"="-9.638,10.592", "c"=614]
"mavenium/PyEditorial" ["l"="47.809,19.839", "c"=599]
"Connie-Wild/stock_market_price_prediction" ["l"="-10.514,11.927", "c"=408]
"abinthomasonline/findata" ["l"="-9.481,13.423"]
"LichAmnesia/Robinhood" ["l"="-8.49,12.986"]
"beinghorizontal/datascience" ["l"="-9.285,13.294"]
"CasperHogenboom/WGAN_financial_time-series" ["l"="-9.631,12.918"]
"JamesSullivan/temporalCN" ["l"="-9.704,12.909"]
"harvey1673/pyktrader" ["l"="-8.632,14.615", "c"=177]
"joesinghh/AlgoApp" ["l"="-9.454,13.383"]
"anandaanv/zerodha-algo-trading" ["l"="-9.454,13.309"]
"DarthRecca/AlgorithmicTrading" ["l"="-9.489,13.33"]
"wangys96/SVI-Volatility-Surface-Calibration" ["l"="-8.555,13.359"]
"thedatabeat/SVI" ["l"="-8.538,13.385"]
"kangzhan/SVI-Surface" ["l"="-8.523,13.376"]
"Eleven-Trading/strade" ["l"="-9.63,13.117"]
"devfinwiz/Stock_Screeners_Raw" ["l"="-9.443,13.092"]
"yongghongg/stock-screener" ["l"="-9.662,13.125"]
"OpenApi-5p/py5paisa" ["l"="-9.878,13.775"]
"dhan-oss/DhanHQ-py" ["l"="-9.852,13.769"]
"MicroPyramid/fetch-tweets" ["l"="-8.85,13.663"]
"MicroPyramid/microsocial" ["l"="-8.87,13.667"]
"MicroPyramid/django-seo" ["l"="-8.886,13.652"]
"MicroPyramid/RaspIce" ["l"="-8.836,13.682"]
"MicroPyramid/knol-bits" ["l"="-8.842,13.702"]
"MicroPyramid/django-payu" ["l"="-8.852,13.689"]
"MicroPyramid/deploy-python" ["l"="-8.854,13.631"]
"Michalos88/Quant-Projects" ["l"="-9.066,12.62"]
"hackingthemarkets/alpaca" ["l"="-8.183,11.171", "c"=807]
"amit0rana/betterOptionsTrading" ["l"="-9.453,13.352"]
"jiehsheng/PatentTransformer" ["l"="-8.177,13.918"]
"AI-Growth-Lab/PatentSBERTa" ["l"="-8.134,13.912"]
"JanBoonen/TwsApiCpp" ["l"="-8.57,13.084"]
"Nasdaq/NasdaqCloudDataService-SDK-Java" ["l"="-8.723,13.241"]
"Nasdaq/NasdaqCloudDataService-SDK-Python" ["l"="-8.782,13.171"]
"osparamatrix/ks-orderapi-python" ["l"="-9.577,13.485"]
"james-ralph8555/optionsVisualizer" ["l"="-8.859,13.259"]
"JuliaActuary/ExperienceAnalysis.jl" ["l"="-9.878,12.334"]
"jsg71/Deep-Hedging" ["l"="-8.647,12.904"]
"guijinSON/Awesome-Deep-Hedging" ["l"="-8.689,12.911"]
"alexandrecarbonneau/Deep-Hedging-of-Long-Term-Financial-Derivatives" ["l"="-8.669,12.902"]
"pfnet-research/NoTransactionBandNetwork" ["l"="-8.674,12.914"]
"polygon-io/go-app-ticker-wall" ["l"="-8.353,13.17"]
"Innovation-Information-Initiative/Innovation-Data-Processing-Scripts" ["l"="-8.401,13.583"]
"LukeWang01/Program-Trading-Based-on-Webull" ["l"="-8.465,12.856"]
"bergant/xbrlus" ["l"="-9.548,12.704"]
"JamesPNacino/Fundamental-Stock-Analysis-Intrinsic-Value-And-SEC-Financial-Statement-Data-Download" ["l"="-8.972,13.386"]
"marcosan93/Price-Forecaster" ["l"="-8.918,13.498"]
"Auquan/auquantoolbox" ["l"="-9.239,12.996"]
"Auquan/auquan-toolbox-python" ["l"="-9.213,12.998"]
"vermouth1992/drl-portfolio-management" ["l"="-9.552,14.691", "c"=970]
"ICascha/QuantGANs-replication" ["l"="-9.74,12.896"]
"tianlinxu312/cot-gan" ["l"="-9.81,12.904"]
"dsinmsdj/IQCoding_CopyTrader" ["l"="-8.932,14.007"]
"ekanshsinghal/indian-stock-market" ["l"="-9.468,13.502"]
"anurag-roy/kite-option-chain" ["l"="-9.45,13.48"]
"Varad2305/Automated-Algorithmic-Trading" ["l"="-9.461,13.396"]
"ranjanrak/async-ticker" ["l"="-9.45,13.374"]
"freqtrade/freqtrade" ["l"="-10.633,11.578", "c"=408]
"virattt/ai-hedge-fund" ["l"="40.862,-0.245", "c"=7]
"maybe-finance/maybe" ["l"="15.914,-10.526", "c"=198]
"unclecode/crawl4ai" ["l"="40.839,-0.071", "c"=7]
"mendableai/firecrawl" ["l"="40.822,-0.021", "c"=7]
"khoj-ai/khoj" ["l"="40.759,-0.047", "c"=7]
"All-Hands-AI/OpenHands" ["l"="40.668,0.021", "c"=7]
"twentyhq/twenty" ["l"="15.908,-10.299", "c"=198]
"Shubhamsaboo/awesome-llm-apps" ["l"="40.932,-0.02", "c"=7]
"achannarasappa/ticker" ["l"="4.958,-5.194", "c"=784]
"MonsieurV/py-findpeaks" ["l"="61.118,15.769", "c"=184]
"kieran-mackle/autotrader-demo" ["l"="-9.145,13.023"]
"asavinov/intelligent-trading-bot" ["l"="-10.481,11.469", "c"=408]
"Viral-Doshi/Gesture-Controlled-Virtual-Mouse" ["l"="-20.451,13.118", "c"=591]
"quantra-go-algo/ml-trading-book" ["l"="-9.107,13.095"]
"jo-cho/Technical_Analysis_Strategies_Cryptocurrency" ["l"="-9.029,13.123"]
"jo-cho/trading-rules-using-machine-learning" ["l"="-9.199,13.073"]
"Coder-World04/Complete-Scikit-learn-with-projects-" ["l"="48.191,26.709", "c"=323]
"spacecodewor/fmpcloud-go" ["l"="-9.42,12.885"]
"mcf-long-short/ibkr-options-volatility-trading" ["l"="-8.867,13.243"]
"esvhd/pypbo" ["l"="-9.3,13.08"]
"rafa-rod/pytrendseries" ["l"="-9.27,13.078"]
"hudson-and-thames/meta-labeling" ["l"="-9.213,13.058"]
"guanquann/Stocksera" ["l"="-9.022,13.197"]
"guanquann/Stocksera-API" ["l"="-9.064,13.248"]
"asad70/reddit-sentiment-analysis" ["l"="-8.016,11.11", "c"=807]
"rahuljoshi44/GraphVega" ["l"="-8.93,13.451"]
"tstewart161/Reddit_Sentiment_Trader" ["l"="-10.454,11.21", "c"=408]
"portfolio-performance/portfolio" ["l"="12.794,-9.016", "c"=18]
"hudson-and-thames/arbitrage_research" ["l"="-8.939,13.172"]
"hudson-and-thames/arbitragelab" ["l"="-8.955,13.058"]
"rodrigo-brito/ninjabot" ["l"="-10.801,10.64", "c"=720]
"lingyixu/Quant-Finance-With-Python-Code" ["l"="-9.073,13.21"]
"grishka/Houseclub" ["l"="-9.129,14.119"]
"stypr/clubhouse-py" ["l"="-9.105,14.032"]
"ai-eks/OpenClubhouse" ["l"="-9.142,14.084"]
"seia-soto/clubhouse-api" ["l"="-9.11,14.075"]
"grishka/Smithereen" ["l"="-48.501,1.228", "c"=475]
"google/model_search" ["l"="45.411,26.012", "c"=68]
"callmearta/clubhouse-desktop" ["l"="-9.176,14.088"]
"bit-world/Houseclub" ["l"="-9.135,14.163"]
"zhuowei/hipster.house" ["l"="-9.163,14.132"]
"terrakok/Cicerone" ["l"="55.881,-14.988", "c"=1219]
"androidx/androidx" ["l"="54.814,-14.164", "c"=25]
"mobile-roadmap/android-developer-roadmap" ["l"="52.407,-13.507", "c"=231]
"KasperskyLab/Kaspresso" ["l"="54.811,-14.323", "c"=25]
"google/accompanist" ["l"="54.764,-14.168", "c"=25]
"badoo/MVIKotlin" ["l"="54.667,-14.156", "c"=25]
"benawad/dogehouse" ["l"="-3.978,-29.71", "c"=4]
"aspromatis/polygon_api" ["l"="-8.653,13.268"]
"MarketMakerLite/polygon" ["l"="-8.669,13.254"]
"QuantConnect/Lean.Brokerages.InteractiveBrokers" ["l"="-9.053,13.225"]
"binance/binance-spot-api-docs" ["l"="-9.813,10.433", "c"=614]
"sdushantha/wifi-password" ["l"="-13.394,-6.249", "c"=86]
"gridaco/grida" ["l"="-9.022,13.838"]
"kuleshov/cornell-cs5785-2020-applied-ml" ["l"="47.957,26.469", "c"=323]
"best-of-lists/best-of" ["l"="25.929,-25.824", "c"=32]
"merovinh/best-of-algorithmic-trading" ["l"="-9.104,13.113"]
"marcdemers/py_vollib_vectorized" ["l"="-8.915,13.24"]
"AI4Finance-Foundation/FinRobot" ["l"="-8.962,12.588"]
"nburgessx/SwapsBook" ["l"="-8.771,13.212"]
"attack68/book_irds3" ["l"="-8.812,13.182"]
"maread99/market_prices" ["l"="-8.781,13.228"]
"stefan-jansen/empyrical-reloaded" ["l"="-8.904,13.077"]
"rrag/react-stockcharts" ["l"="-8.423,11.625", "c"=807]
"pdevty/googlefinance-client-python" ["l"="-9.036,13.178"]
"Yam-cn/pyalgotrade-cn" ["l"="-8.564,14.663", "c"=177]
"finlab-python/finlab_crypto" ["l"="-9.378,13.049"]
"histockhero/youtube_code" ["l"="-9.467,13.052"]
"andrewwang7/findbillion_stocktw" ["l"="-9.426,13.048"]
"Nixtla/tsfeatures" ["l"="45.372,26.465", "c"=68]
"danpaquin/coinbasepro-python" ["l"="-10.311,11.731", "c"=408]
"wesdoyle/design-patterns-explained-with-food" ["l"="-34.155,-0.99", "c"=8]
"justinamiller/DotNet-Coding-Guidelines" ["l"="-9.088,14.086"]
"just-krivi/option-pricing-models" ["l"="-8.836,13.302"]
"mcf-long-short/fixed-income-and-credit" ["l"="-8.81,13.354"]
"aicheung/0dte-trader" ["l"="-8.853,13.313"]
"mattsta/icli" ["l"="-8.679,13.027"]
"PaulSquires/TradeTracker" ["l"="-8.828,13.32"]
"guillaume-chevalier/LSTM-Human-Activity-Recognition" ["l"="48.152,34.039", "c"=168]
"HendrikStrobelt/LSTMVis" ["l"="46.116,27.74", "c"=277]
"carpedm20/lstm-char-cnn-tensorflow" ["l"="46.213,27.79", "c"=277]
"wojzaremba/lstm" ["l"="46.075,27.717", "c"=277]
"gy910210/rnn-from-scratch" ["l"="51.767,28.281", "c"=104]
"lucasjinreal/tensorflow_poems" ["l"="53.424,27.572", "c"=60]
"Kyubyong/transformer" ["l"="53.233,25.678", "c"=172]
"salesforce/awd-lstm-lm" ["l"="53.085,25.565", "c"=172]
"sherjilozair/char-rnn-tensorflow" ["l"="46.238,27.763", "c"=277]
"hackingthemarkets/interactive-brokers-web-api" ["l"="-8.473,13.049"]
"mattsta/ib_insync" ["l"="-8.667,12.998"]
"business-science/pytimetk" ["l"="-8.958,12.929"]
"business-science/ai-data-science-team" ["l"="41.37,0.257", "c"=7]
"business-science/awesome-generative-ai-data-scientist" ["l"="41.432,0.329", "c"=7]
"skforecast/skforecast" ["l"="45.426,26.424", "c"=68]
"Nixtla/mlforecast" ["l"="45.399,26.437", "c"=68]
"functime-org/functime" ["l"="43.647,26.288", "c"=1179]
"mpalenciaolivar/Awesome-Decision-Science" ["l"="43.774,26.232", "c"=1179]
"TulipCharts/tulipy" ["l"="-9.003,13.143"]
"Chandlercjy/OnePy" ["l"="-8.6,14.629", "c"=177]
"whittlem/pycryptobot" ["l"="-10.515,11.446", "c"=408]
"alexbotsula/Price_direction_forecast" ["l"="-10.792,13.076", "c"=265]
"hjeffreywang/Stock_feature_engineering" ["l"="-10.805,13.077", "c"=265]
"SparkAbhi/SignalProcessingWithPython" ["l"="-10.801,13.107", "c"=265]
"jheusser/vpin" ["l"="-10.778,13.07", "c"=265]
"fanzhenya/options_lab" ["l"="-8.893,13.401"]
"Jenniferab32/OptionAnalysis" ["l"="-8.92,13.386"]
"BlackOtton/RedStar-Media" ["l"="-9.005,13.709"]
"bottama/Dynamic-Derivatives-Portfolio-Hedging" ["l"="-8.9,13.52"]
"PyFE/PyFENG" ["l"="-8.506,13.193"]
"PyFE/PyfengForPapers" ["l"="-8.47,13.208"]
"PyFE/FE-R" ["l"="-8.465,13.223"]
"51bitquant/howtrader" ["l"="-10.635,10.842", "c"=720]
"trevorstephens/gplearn" ["l"="21.949,15.744", "c"=516]
"phamleduy04/yahoo-stock-api" ["l"="-8.112,12.9"]
"eliangcs/pystock-github" ["l"="-9.628,12.763"]
"MerlinR/Hexital" ["l"="-9.088,13.172"]
"ntorm1/Atlas" ["l"="-9.083,13.194"]
"trufanov-nok/ta-lib-rt" ["l"="-8.978,13.125"]
"MIRICMILAN/US-AI-Patents" ["l"="-8.113,13.94"]
"sam-arts/respol_patents_code" ["l"="-8.127,13.952"]
"pythonlessons/RL-Bitcoin-trading-bot" ["l"="-9.501,14.826", "c"=970]
"hustcer/star" ["l"="-8.515,14.641", "c"=177]
"iam-abbas/Reddit-Stock-Trends" ["l"="26.218,-26.624", "c"=32]
"StreamAlpha/tvdatafeed" ["l"="-8.267,11.36", "c"=807]
"10mohi6/oanda-bot-python" ["l"="-9.049,13.517"]
"trentstauff/FXBot" ["l"="-9.029,13.545"]
"Bugswriter/tuxi" ["l"="-14.173,-3.658", "c"=71]
"yhilpisch/ftwp" ["l"="-9.121,13.141"]
"AlbertRtk/marketools" ["l"="-9.633,12.877"]
"arshpreet/Hedge-Fund-stock-market-analysis" ["l"="-9.609,12.863"]
"dDevTech/Stock-Market-Predictor" ["l"="-9.599,12.886"]
"Lumiwealth/quantstats_lumi" ["l"="-8.818,13.019"]
"stefan-jansen/python-algorithms" ["l"="-9.23,13.012"]
"stefan-jansen/synthetic-data-for-finance" ["l"="-9.378,12.969"]
"PacktPublishing/Getting-Started-with-Forex-Trading-Using-Python" ["l"="-9.246,12.927"]
"PacktPublishing/Algorithmic-Short-Selling-with-Python" ["l"="-9.186,12.79"]
"sofienkaabar/contrarian-trading-strategies" ["l"="45.401,27.181", "c"=68]
"sofienkaabar/mastering-financial-pattern-recognition" ["l"="45.403,27.16", "c"=68]
"beatzxbt/mm-toolbox" ["l"="-10.815,13.06", "c"=265]
"beatzxbt/bybit-smm" ["l"="-10.782,13.023", "c"=265]
"LechGrzelak/PyStochasticVolatility" ["l"="-8.826,13.176"]
"xxwikkixx/ChadBot" ["l"="-8.558,13.215"]
"snowtrack/snowfs" ["l"="-31.333,-27.467", "c"=194]
"joshuaulrich/quantmod" ["l"="40.214,35.426", "c"=51]
"MicroTrendsLtd/NinjaTrader8" ["l"="-8.513,13.739"]
"DominikBritz/NinjaTrader-indicators-strategies" ["l"="-8.531,13.731"]
"beckerben/NinjaTrader" ["l"="-8.524,13.754"]
"GithubRealFan/Ninja-Trader-8" ["l"="-8.523,13.772"]
"efitzkiwi/NT8SupplyDemandDTBot" ["l"="-8.531,13.71"]
"DiegoChuW/RSItradingBot" ["l"="-8.48,13.757"]
"trading-code/ninjatrader-freeorderflow" ["l"="-8.521,13.72"]
"WaleeTheRobot/order-flow-bot" ["l"="-8.503,13.727"]
"magols/NinjaTraderDev" ["l"="-8.494,13.765"]
"gjh33/SmartStrategies" ["l"="-8.507,13.771"]
"twdsje/Ninjatrader-scripts" ["l"="-8.489,13.744"]
"AI4Finance-Foundation/FinRL_Podracer" ["l"="-9.575,14.885", "c"=970]
"theclai/ForexEA" ["l"="-8.989,13.487"]
"tradologics/AlgoTradingSummit" ["l"="-8.673,13.567"]
"tyrneh/options-implied-probability" ["l"="-8.684,13.527"]
"ryantcullen/stock-bot" ["l"="-9.217,12.978"]
"hashABCD/opstrat" ["l"="-8.945,13.255"]
"nickdesaulniers/profitnloss" ["l"="-8.942,13.332"]
"PacktPublishing/Algorithmic-Short-Selling-with-Python-Published-by-Packt" ["l"="-9.173,12.75"]
"clinicalml/cfrnet" ["l"="43.574,25.531", "c"=372]
"AliciaCurth/CATENets" ["l"="43.535,25.541", "c"=372]
"BorealisAI/private-data-generation" ["l"="50.683,1.139", "c"=750]
"d909b/drnet" ["l"="43.53,25.522", "c"=372]
"vanderschaarlab/temporai" ["l"="-9.867,12.752"]
"jsyoon0823/GANITE" ["l"="43.571,25.5", "c"=372]
"kochbj/Deep-Learning-for-Causal-Inference" ["l"="43.609,25.526", "c"=372]
"vanderschaarlab/synthcity" ["l"="44.881,26.554", "c"=68]
"huawei-noah/trustworthyAI" ["l"="43.677,25.494", "c"=372]
"mitmath/computational-thinking" ["l"="22.045,16.606", "c"=77]
"nodejs/undici" ["l"="-0.331,-33.847", "c"=110]
"gaih/introduction-to-python" ["l"="-1.13,3.026", "c"=258]
"activeloopai/deeplake" ["l"="45.165,25.816", "c"=68]
"conwnet/github1s" ["l"="-4.041,-29.481", "c"=4]
"elixir-nx/nx" ["l"="4.573,14.865", "c"=44]
"getmeli/meli" ["l"="-52.28,14.29", "c"=592]
"sniptt-official/ots" ["l"="-13.493,-5.922", "c"=86]
"salesforce/cloudsplaining" ["l"="11.214,-4.681", "c"=147]
"jameslittle230/stork" ["l"="-13.375,-6.147", "c"=86]
"takeshixx/redstar-tools" ["l"="-9.03,13.755"]
"kaiserfen/RedstarOSxfce" ["l"="-9.003,13.743"]
"yongxinw/GSDT" ["l"="54.399,32.578", "c"=279]
"bestony/neshouse" ["l"="-1.219,2.995", "c"=258]
"nasa/fprime" ["l"="19.45,14.332", "c"=868]
"zhuowei/ClubhouseAPI" ["l"="-9.078,14.058"]
"ccxt/binance-trade-bot" ["l"="-10.584,11.473", "c"=408]
"velikov-mihail/AssayingAnomalies" ["l"="-8.618,13.483"]
"Alexander-M-Dickerson/TRACE-corporate-bond-processing" ["l"="-8.618,13.458"]
"goutham-fin/BCF-Workshop" ["l"="-8.636,13.439"]
"ABZ-Aaron/cheat-sheets" ["l"="38.53,3.109", "c"=54]
"WallStreetAnalytics/wallstreetanalytics" ["l"="55.896,-7.18", "c"=944]
"tradingeconomics/tradingeconomics" ["l"="42.722,26.869", "c"=1056]
"girishg4t/bhavCopy-downloader" ["l"="-9.491,13.618"]
"girishg4t/nse-bse-bhavcopy" ["l"="-9.509,13.645"]
"The-NOPE-Project/intraday_nope_research" ["l"="-32.425,-1.352", "c"=139]
"AsyncAlgoTrading/algo-coin" ["l"="-10.227,11.632", "c"=408]
"tomyitav/talib-extensions" ["l"="-9.085,13.248"]
"Eleven-Trading/TradeNote" ["l"="-8.557,13.541"]
"mransbro/tradingjournal" ["l"="-8.53,13.583"]
"drozd1krystian/trading-journal" ["l"="-8.553,13.581"]
"sheriv/Trading-journal-with-auto-statistic" ["l"="-8.53,13.561"]
"gbzenobi/CSharp-NT8-OrderFlowKit" ["l"="-8.555,13.666"]
"suenot/profitmaker" ["l"="-9.61,10.442", "c"=614]
"PFund-Software-Ltd/pytrade.org" ["l"="-8.744,13.447"]
"algermakiputin/Trading-Journal" ["l"="-8.545,13.567"]
"Robin-Guilliou/Option-Pricing" ["l"="-8.852,13.334"]
"ozdemirozcelik/pairs-ibkr" ["l"="-8.579,13.234"]
"zoakes/Modular_IB" ["l"="-8.496,13.15"]
"derekbanas/Python4Finance" ["l"="-9.383,13.118"]
"derekbanas/tensorflow" ["l"="-9.438,13.113"]
"derekbanas/StatsModelsRegressions" ["l"="-9.413,13.143"]
"ai-eks/OpenClubhouse-Worker" ["l"="-9.171,14.113"]
"wiwikuan/fast-srt-subtitle" ["l"="22.416,1.725", "c"=208]
"teacat/tocas" ["l"="22.327,1.885", "c"=208]
"Aetsu/OffensivePipeline" ["l"="-47.097,-32.265", "c"=41]
"ballista-compute/ballista" ["l"="-0.551,14.985", "c"=729]
"gw-moore/pyfredapi" ["l"="-8.728,13.113"]
"yhilpisch/rlfinance" ["l"="-9.139,13.19"]
"yhilpisch/aifin" ["l"="-9.117,13.156"]
"Mo-Khalifa96/Forex-Trading-Bot" ["l"="-9.029,13.593"]
"ogunjobiFX/MT4-MT5-Forex-Signal-Copier-Telegram-Bot" ["l"="-9.322,11.406", "c"=808]
"Nasdaq/NasdaqCloudDataService-REST-API" ["l"="-8.799,13.149"]
"yugedata/Options_Data_Science" ["l"="55.893,-7.256", "c"=944]
"hermeneuticlens/options-toolkit" ["l"="-8.84,13.41"]
"bullhe4d/bigwatermelon" ["l"="-32.452,-1.316", "c"=139]
"edouardpoitras/NowTrade" ["l"="-8.941,13.234"]
"wellecks/port_opt" ["l"="-9.185,12.994"]
"icezerowjj/MultipleFactorRiskModel" ["l"="-8.786,15.65", "c"=565]
"melvinmt/sharpefolio" ["l"="-9.19,13.007"]
"chaitjo/markowitz-portfolio-optimization" ["l"="46.975,25.111", "c"=425]
"sanjeevai/multi-factor-model" ["l"="-8.813,15.671", "c"=565]
"jasonstrimpel/covshrink" ["l"="-9.171,12.993"]
"kvsnoufal/portfolio-optimization" ["l"="-9.64,14.77", "c"=970]
"calcbench/python_api_client" ["l"="-9.572,12.744"]
"calcbench/notebooks" ["l"="-9.606,12.744"]
"bmoscon/orderbook" ["l"="-10.699,12.926", "c"=265]
"ClimberMel/ib_tools" ["l"="-8.613,12.986"]
"mattsta/trade-balancer" ["l"="-8.612,13.001"]
"hackingthemarkets/backtrader-interactive-brokers" ["l"="-8.494,13.127"]
"hackingthemarkets/backtrader" ["l"="-8.154,11.197", "c"=807]
"PlusGenie/tbot-tradingboat" ["l"="-8.455,13.109"]
"nate-ellis/End-to-End-TradingView-Alert-Transmission-and-Interactive-Brokers-API-Automated-Trading-System-" ["l"="-8.489,13.107"]
"jsarbach/ib-trading" ["l"="-8.473,13.118"]
"cvxgrp/cvx_short_course" ["l"="50.948,25.75", "c"=743]
"jeffex/Catalogador" ["l"="-8.961,14.005"]
"ansingh/casparser" ["l"="-9.395,13.601"]
"BrelLibrary/brel" ["l"="-9.589,12.729"]
"marcioalexandre/XbrlParser" ["l"="-9.607,12.725"]
"kodalli/NT8-PAT-Strategy" ["l"="-8.524,13.74"]
"david-alber/Pairs-Trading-as-application-to-the-Ornstein-Uhlenbeck-Process" ["l"="-9.24,13.11"]
"nathan-fiscaletti/schwab-api-js" ["l"="-8.476,13.16"]
"NelsonDane/public-invest-api" ["l"="-8.357,13.216"]
"seovchinnikov/clubhouse-web" ["l"="-9.207,14.123"]
"varnamproject/govarnam" ["l"="-13.684,-4.883", "c"=86]
"callmearta/kite" ["l"="-9.219,14.099"]
"blakeheimann2/DynamicDeltaHedge" ["l"="-8.883,13.545"]
"austin-starks/Deep-RL-Stocks" ["l"="-8.711,13.163"]
"austin-starks/FinAnGPT" ["l"="-8.696,13.194"]
"AlanDongMu/TimeGAN_PytorchRebuild" ["l"="-9.811,12.776"]
"BennyThadikaran/stock-pattern" ["l"="-9.217,13.374"]
"yhilpisch/pydlon15" ["l"="-9.115,13.204"]
"jerryduncan/pipsProphet" ["l"="-9.278,13.124"]
"pramakrishn/express-option-chain" ["l"="-9.482,13.448"]
"Muhammad-1990/iqoption" ["l"="-8.993,13.945"]
"guilhersantos/iq_bots" ["l"="-9.012,13.932"]
"quadcode-tech/quadcodescript-library" ["l"="-9.01,13.954"]
"funginstitute/patentprocessor" ["l"="-8.106,13.886"]
"EarronYu/backtrader-binance-futures" ["l"="-9.068,13.416"]
"Darenar/DeepLearningAssetPricing_torch" ["l"="-8.7,13.428"]
"GiulioRossetti94/PyBondLab" ["l"="-8.592,13.485"]
"Jake0303/RiskyOptionsBot" ["l"="-8.449,13.211"]
"pavankishoremullapudy/InteractiveBrokers_TWS_API" ["l"="-8.5,13.168"]
"id774/finance" ["l"="-8.779,13.324"]
"tomaspavlin/clubhouse-client" ["l"="-9.084,14.112"]
"brahma-investment-group/big-algo-framework" ["l"="-8.568,12.938"]
"mohabmes/pystocklib" ["l"="-9.668,12.877"]
"sebjai/Portfolio-Wasserstein-Ball" ["l"="-9.098,12.81"]
"remis-thoughts/svi-zeliade" ["l"="-8.517,13.392"]
"newmath/FuturesAndOptionsTradingSimulation" ["l"="-8.819,13.381"]
"chinmayHundekari/optionMath" ["l"="-8.843,13.346"]
"fourbytes/ib_tws_rs" ["l"="-8.262,12.978"]
"fasiondog/hikyuu" ["l"="-8.502,14.689", "c"=177]
"abudesai/syntheticdatagen" ["l"="-9.867,12.821"]
"imics-lab/tts-cgan" ["l"="-9.885,12.82"]
"ML4ITS/TimeVQVAE" ["l"="-9.974,12.834"]
"deependersingla/deep_trader" ["l"="-9.619,14.707", "c"=970]
"Kulbear/stock-prediction" ["l"="-9.28,12.668"]
"kh-kim/stock_market_reinforcement_learning" ["l"="-9.609,14.691", "c"=970]
"devfinwiz/ALAS" ["l"="-9.409,13.106"]
"devfinwiz/Kris-Kringle-Organizer" ["l"="-9.397,13.087"]
"devfinwiz/LeetCode-Feeder" ["l"="-9.399,13.098"]
"devfinwiz/Python-Voice-Assistant-Virtual-Slave" ["l"="-9.409,13.087"]
"devfinwiz/Dynamic-QR" ["l"="-9.416,13.095"]
"dataquestio/project-walkthroughs" ["l"="47.386,25.422", "c"=425]
"fortitudo-tech/fortitudo.tech" ["l"="-9.178,13.168"]
"fortitudo-tech/entropy-pooling" ["l"="-9.234,13.211"]
"fortitudo-tech/pcrm-book" ["l"="-9.353,13.219"]
"OrderFlowTools/TraderLadder" ["l"="-8.55,13.717"]
"murtazayusuf/OrderflowChart" ["l"="-8.594,13.62"]
"AndreaFerrante/Orderflow" ["l"="-8.612,13.62"]
"WaleeTheRobot/open-auto-atr" ["l"="-8.517,13.693"]
"SimplyWallSt/Portfolio-Analysis-Model" ["l"="-9.224,12.859"]
"anfederico/clairvoyant" ["l"="45.07,20.491", "c"=20]
"pinax/pinax-blog" ["l"="47.565,18.601", "c"=52]
"YINDAIYING/Deep-Robust-Statistical-Arbitrage" ["l"="-8.775,13.488"]
"bharaniabhishek123/some-investment-books" ["l"="-9.966,13.078"]
"pistolla/gnidart" ["l"="-10.024,13.091"]
"maread99/market_analy" ["l"="-8.755,13.266"]
"psemdel/py-trading-bot" ["l"="-8.805,13.332"]
"rnikitin/QuantGPT" ["l"="-8.874,13.393"]
"QubitQuants/vectorbt_pro_tutorials" ["l"="-8.853,13.428"]
"diliprk/vectorbt_pro_dashboard" ["l"="-8.785,13.382"]
"lscharwaechter/TransformerGAN" ["l"="-9.859,12.81"]
"MikhailMurashov/ecgGAN" ["l"="62.937,35.03", "c"=1044]
"mgroncki/IPythonScripts" ["l"="-8.663,13.2"]
"Quantreo/UDEMY-Advanced-CRYPTOCURRENCIES-strategies-for-Algorithmic-tradinhg-2022" ["l"="-9.511,13.212"]
"Quantreo/UDEMY-Algorithmic-trading-for-absolute-BEGINNERS" ["l"="-9.518,13.229"]
"Quantreo/UDEMY-STATISTIC-AND-PROBABILITY-for-quantitative-finance" ["l"="-9.524,13.211"]
"Quantreo/UDEMY-FOREX-strategies-for-algorithmic-trading-2022" ["l"="-9.525,13.222"]
"pandalibin/backtrader-cn" ["l"="-9.101,13.37"]
"goldenhairs/backtrader_fund" ["l"="-8.724,15.719", "c"=565]
"zwdnet/trade_strategy" ["l"="-8.739,15.757", "c"=565]
"tastytrade/tastytrade-sdk-python" ["l"="-8.406,13.147"]
"LordKaT/tastytrade_api_thing" ["l"="-8.419,13.141"]
"peter-oroszvari/tastytrade-api" ["l"="-8.443,13.142"]
"yhilpisch/packaging" ["l"="-9.161,13.167"]
"happymimimix/DPRK-RedStar-OS-3.0-Modded-ISO" ["l"="-9.046,13.78"]
"Quantreo/BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" ["l"="-9.549,13.226"]
"Quantreo/UDEMY-DEEP-LEARNING-for-algorithmic-trading-using-Python" ["l"="-9.508,13.229"]
"Quantreo/UDEMY-Algorithmic-Trading-with-Python-MACHINE-LEARNING-strategies" ["l"="-9.532,13.229"]
"Quantreo/2nd-edition-BOOK-AMAZON-Python-for-Finance-and-Algorithmic-Trading" ["l"="-9.538,13.244"]
"Quantreo/UDEMY-Algorithmic-trading-from-A-TO-Z-USING-PYTHON" ["l"="-9.514,13.219"]
"Quantreo/UDEMY-Python-for-Algorithmic-Trading-TECHNICAL-ANALYSIS" ["l"="-9.535,13.215"]
"markdregan/FreqAI-Marcos-Lopez-De-Prado" ["l"="-10.713,11.254", "c"=408]
"litaotao/IPython-Dashboard" ["l"="43.721,24.084", "c"=95]
"wegamekinglc/AlgoTrading" ["l"="-9.127,13.199"]
"2187Nick/thinkscript" ["l"="-8.363,13.194"]
"sudoshu/OptionsHacker" ["l"="-8.312,13.204"]
"conor19w/Binance-Futures-Trading-Bot" ["l"="-11.325,11.516", "c"=1243]
"harveybc/gym-fx" ["l"="-9.507,14.744", "c"=970]
"bennycode/ig-trading-api" ["l"="-9.103,13.623"]
"bellingcat/EDGAR" ["l"="-47.173,-27.637", "c"=97]
"nlpaueb/finer" ["l"="-9.455,12.675"]
"alphanome-ai/sec-parser" ["l"="-9.429,12.678"]
"ucaiado/rl_trading" ["l"="-9.547,14.716", "c"=970]
"Shark-ML/Shark" ["l"="47.635,29.181", "c"=89]
"haozhangphd/QuantLib-noBoost" ["l"="-8.551,13.252"]
"iangow/wrds_pg" ["l"="-8.51,13.539"]
"christianjauregui/famafrench" ["l"="-8.541,13.491"]
"mah533/Augmentation-of-ECG-Training-Dataset-with-CGAN" ["l"="-9.923,12.812"]
"bpierre/loot-rarity" ["l"="-19.911,10.25", "c"=22]
"nburgessx/QuantResearch" ["l"="-8.71,13.263"]
"nburgessx/AlgoTrading" ["l"="-8.686,13.292"]
"nburgessx/OxfordMBA" ["l"="-8.674,13.283"]
"MicroPyramid/django-mfa" ["l"="-8.843,13.643"]
"omdv/ibkr-trading" ["l"="-8.598,12.987"]
"aws-samples/uncovering-hidden-connections-in-unstructured-financial-data" ["l"="-9.151,13.139"]
"WilliamZhuo/ithome_ironman2021" ["l"="-9.508,13.056"]
"vict0rsch/deep_learning" ["l"="52.388,14.915", "c"=569]
"michelpmcdonald/Ninjatrader" ["l"="-8.548,13.739"]
"Ljupch0/yfinance" ["l"="-9.526,12.672"]
"Shoonya-Dev/ShoonyaApi-py" ["l"="-9.529,13.428"]
"Shoonya-Dev/ShoonyaApi-js" ["l"="-9.567,13.441"]
"Tapanhaz/Shoonya_OptionChainStreamer" ["l"="-9.512,13.421"]
"narenkram/steadfast-monorepo" ["l"="-9.444,13.394"]
"Kotak-Neo/kotak-neo-api" ["l"="-9.58,13.459"]
"eervin123/tradingview-to-vectorbt" ["l"="-8.826,13.503"]
"gioruggieri/Vectorbt_Examples" ["l"="-8.818,13.524"]
"Guillaume-Fgt/vectorbt_backtesting" ["l"="-8.812,13.538"]
"JM-JO/Sierra-Chart---DLLs" ["l"="-8.441,13.397"]
"gcUserStudies/sierrachart" ["l"="-8.433,13.37"]
"Invest-In-a-Tech/Deep-Reinforcement-Learning-DayTradingAgent" ["l"="-8.443,13.382"]
"mlwin/SierraChart-Custom-Studies" ["l"="-8.455,13.392"]
"Invest-In-a-Tech/Machine-Learning-ES-Emini-Futures" ["l"="-8.429,13.383"]
"trevorwelch/rh-profit-and-loss" ["l"="-8.388,12.958"]
"omdv/robinhood-portfolio" ["l"="-8.368,12.946"]
"benalexau/ibconnect" ["l"="-8.51,13.065"]
"dsouzae/ibstockcli" ["l"="-8.527,13.066"]
"aktau/gofinance" ["l"="-10.958,10.597", "c"=720]
"uberdeveloper/omspy" ["l"="-9.541,13.385"]
"uberdeveloper/fastbt" ["l"="-9.587,13.383"]
"alex-hhh/ActivityLog2" ["l"="-23.417,-21.46", "c"=182]
"txu2014/binance_orderflow" ["l"="-8.616,13.597"]
"Quantreo/MetaTrader-5-AUTOMATED-TRADING-using-Python" ["l"="-9.516,13.241"]
"jimtin/how_to_build_a_metatrader5_trading_bot_expert_advisor" ["l"="-9.301,11.55", "c"=808]
"Quantreo/Alpha-Quant-Course" ["l"="-9.472,13.24"]
"Joaopeuko/Mql5-Python-Integration" ["l"="-9.373,11.543", "c"=808]
"anupambagchi/denken" ["l"="-8.5,13.21"]
"andrecronje/rarity" ["l"="-20.232,10.356", "c"=22]
"phonegapX/bt-ctpbee-store" ["l"="-9.094,13.444"]
"ludrao/django-tellme" ["l"="-8.836,13.669"]
"MicroPyramid/cinnamon-hr" ["l"="-8.809,13.688"]
"MicroPyramid/django-simple-forex" ["l"="-8.816,13.702"]
"Sandy4321/NinjaTrader.Custom" ["l"="-8.473,13.769"]
"sohaibmalik/NinjaTrader" ["l"="-8.479,13.802"]
"Sandra-R-PhD/10-X_Reports_to_Google_Drive" ["l"="-9.502,12.665"]
"juliansester/statistical-arbitrage" ["l"="-8.765,13.524"]
"ldt9/PyOptionTrader" ["l"="-8.421,13.232"]
"TechfaneTechnologies/nsepython" ["l"="-9.359,13.339"]
"TechfaneTechnologies/ZerodhaStrikesAllowedToTrade" ["l"="-9.335,13.383"]
"mccgr/edgar" ["l"="-8.501,13.561"]
"iangow/wrds2pg" ["l"="-8.489,13.574"]
"iangow-public/acct_data" ["l"="-8.486,13.556"]
"RajeshSivadasan/alice-blue-futures" ["l"="-9.497,13.492"]
"RajeshSivadasan/zerodha-option-selling" ["l"="-9.525,13.521"]
"ariesyi329/StockPatternRecognition" ["l"="-9.234,13.469"]
"guijinSON/NNHedge" ["l"="-8.618,12.857"]
"tifoji/tda_api_programs" ["l"="-8.289,13.218"]
"akenshaw/btcusdt-orderflow" ["l"="-8.606,13.652"]
"themichaelusa/realtime_talib" ["l"="-9.132,13.302"]
"regexhq/whitespace-regex" ["l"="-9.657,12.757"]
"owocki/pytrader" ["l"="-10.315,11.614", "c"=408]
"fmzquant/strategies" ["l"="-8.435,14.623", "c"=177]
"alibaba/ali-dbhub" ["l"="-3.471,11.588", "c"=15]
"Jordylek/VolatilityIsMostlyPathDependent" ["l"="-8.564,12.871"]
"rongardF/tvdatafeed" ["l"="-8.28,11.402", "c"=807]
"pykalman/pykalman" ["l"="64.04,12.689", "c"=1121]
"The-FinAI/PIXIU" ["l"="39.238,-1.916", "c"=202]
"JinanZou/Astock" ["l"="-8.416,15.674", "c"=565]
"FudanDISC/DISC-FinLLM" ["l"="39.188,-1.925", "c"=202]
"Duxiaoman-DI/XuanYuan" ["l"="39.139,-2.011", "c"=202]
"supersymmetry-technologies/BBT-FinCUGE-Applications" ["l"="39.218,-1.959", "c"=202]
"jerry1993-tech/Cornucopia-LLaMA-Fin-Chinese" ["l"="39.167,-1.956", "c"=202]
"MetaGLM/FinGLM" ["l"="39.075,-1.984", "c"=202]
"charliedream1/ai_quant_trade" ["l"="-8.371,14.826", "c"=177]
"PlamenStilyianov/FinMathematics" ["l"="-8.917,12.946"]
"PlamenStilyianov/Quant" ["l"="-8.877,13.113"]
"geniayuan/datasciencecoursera" ["l"="31.839,-25.997", "c"=531]
"yc-liu/readings" ["l"="-8.759,12.928"]
"AliHabibnia/Algorithmic_Trading_with_Python" ["l"="-8.959,13.223"]
"avhz/RustQuant" ["l"="-10.74,13.06", "c"=265]
"visualHFT/VisualHFT" ["l"="-10.723,12.969", "c"=265]
"stockdatalab/YAHOO-FINANCE-SCREENER-SYMBOLS-AND-HISTORICAL-DATA" ["l"="-9.216,12.877"]
"rouseguy/TimeSeriesAnalysiswithPython" ["l"="44.992,24.022", "c"=166]
"cauchyturing/UCR_Time_Series_Classification_Deep_Learning_Baseline" ["l"="43.66,26.791", "c"=1089]
"titu1994/LSTM-FCN-Ablation" ["l"="43.586,26.793", "c"=1089]
"poldham/opensource-patent-analytics" ["l"="-8.034,13.885"]
"syspect-sec/uspto" ["l"="-8.058,13.894"]
"erykml/Python-for-Finance-Cookbook-2E" ["l"="45.409,27.032", "c"=68]
"terry3041/pyChatGPT" ["l"="43.853,0.801", "c"=135]
"bhattbhavesh91/voice-assistant-whisper-chatgpt" ["l"="-8.16,13.084"]
"Nikorasu/LiveWhisper" ["l"="40.366,3.14", "c"=908]
"JohnZolton/scribe" ["l"="-8.08,13.059"]
"polyaxon/traceml" ["l"="-9.412,12.413"]
"HHammond/PrettyPandas" ["l"="43.724,24.151", "c"=95]
"NathanEpstein/Dora" ["l"="43.774,24.172", "c"=95]
"SauceCat/PDPbox" ["l"="45.287,26.229", "c"=68]
"engarde-dev/engarde" ["l"="43.768,24.089", "c"=95]
"SauceCat/pydqc" ["l"="-2.173,14.915", "c"=43]
"JasonDoingGreat/Convolutional-Networks-for-Stock-Predicting" ["l"="-9.261,12.841"]
"iRavinderBrar/Kite_Zerodha" ["l"="-9.443,13.44"]
"yash12392/tradewithpython-blogs" ["l"="-9.499,13.514"]
"zerodha/javakiteconnect" ["l"="-9.482,13.348"]
"zerodha/dotnetkiteconnect" ["l"="-9.497,13.385"]
"keithorange/PatternPy" ["l"="-9.172,13.335"]
"zeta-zetra/chart_patterns" ["l"="-9.2,13.365"]
"zeta-zetra/code" ["l"="-9.183,13.346"]
"bluedabadi/SchwabAutoTrading" ["l"="-8.483,13.175"]
"roninio/Schwab-API-with-Streamlit" ["l"="-8.527,13.161"]
"vikassharma545/APICostFree-Zerodha-Trade" ["l"="-9.495,13.47"]
"QuickLearner171998/Python-Algo-Trading-Zerodha" ["l"="-9.477,13.472"]
"BenjiKCF/Neural-Net-with-Financial-Time-Series-Data" ["l"="-9.596,14.645", "c"=970]
"llSourcell/How-to-Use-Tensorflow-for-Time-Series-Live-" ["l"="49.856,26.886", "c"=791]
"pusj/LSTM-Time-Series-Analysis-using-Tensorflow" ["l"="-9.338,12.48"]
"AileenNielsen/TimeSeriesAnalysisWithPython" ["l"="44.982,24.083", "c"=166]
"exein-io/pulsar" ["l"="7.32,-6.182", "c"=335]
"ytliu74/FactorVAE" ["l"="-8.505,15.801", "c"=565]
"NelsonDane/auto-rsa" ["l"="-8.262,13.247"]
"NelsonDane/fennel-invest-api" ["l"="-8.316,13.233"]
"Prem-ium/Auto-StockTrader" ["l"="-8.236,13.263"]
"itsjafer/reverse-stock-split-arbitrage" ["l"="-8.215,13.258"]
"DrakeHooks/CasinoClaim" ["l"="-8.229,13.245"]
"john-friedman/datamule-python" ["l"="-9.409,12.697"]
"virattt/financial-datasets" ["l"="-9.509,12.603"]
"john-friedman/SEC-Parsers" ["l"="-9.392,12.692"]
"martinshkreli/models" ["l"="25.063,-26.406", "c"=32]
"austin-starks/NextTrade" ["l"="-8.791,13.055"]
"AmpyFin/ampyfin" ["l"="-8.724,13.415"]
"ivebotunac/PrimoGPT" ["l"="-8.741,13.365"]
"Ameobea/tickgrinder" ["l"="-10.642,13.034", "c"=265]
"ofirnachum/sequence_gan" ["l"="57.8,29.362", "c"=1082]
"ro31337/libretaxi" ["l"="23.398,-26.795", "c"=28]
"maxbbraun/trump2cash" ["l"="-8.71,12.698"]
"ChawlaAvi/Daily-Dose-of-Data-Science" ["l"="48.084,26.517", "c"=323]
"tysonwu/dash-tradingview" ["l"="43.098,25.275", "c"=1215]
"Indian-Algorithmic-Trading-Community/Zerodha" ["l"="-9.426,13.363"]
"ymyke/tessa" ["l"="-9.273,12.973"]
"DavideViolante/investing-com-api" ["l"="-9.305,12.982"]
"intuition-io/intuition" ["l"="-9.365,12.667"]
"intuition-io/insights" ["l"="-9.399,12.636"]
"cheerzzh/CPP-design-pattern-derivatives-pricing" ["l"="-8.796,13.207"]
"secdatabase/SEC-XBRL-Financial-Statement-Dataset" ["l"="-9.497,12.707"]
"BennyThadikaran/eod2" ["l"="-9.328,13.444"]
"BennyThadikaran/NseIndiaApi" ["l"="-9.341,13.496"]
"AlgoTrading101/VectorBT-AlgoTrading101" ["l"="-8.835,13.458"]
"Newtoniano/vectorbt_backtests" ["l"="-8.846,13.467"]
"ArturSepp/OptimalPortfolios" ["l"="-8.897,13.131"]
"koala9527/lottery-uniapp" ["l"="-9.409,12.106"]
"stefan-jansen/stock-analysis-engine" ["l"="-9.295,13.02"]
"prabakar2610/TradingBooks" ["l"="-10.064,13.099"]
"quantgirluk/aleatory" ["l"="-8.894,13.114"]
"quantgirluk/Understanding-Quantitative-Finance" ["l"="-8.825,13.219"]
"quantgirluk/fanchart" ["l"="-8.846,13.185"]
"milenavuletic/VolGAN" ["l"="-8.752,13.138"]
"quantgirluk/Yield-Curves-Visual" ["l"="-8.853,13.163"]
"philipperemy/FX-1-Minute-Data" ["l"="-9.469,14.746", "c"=970]
"ninety47/dukascopy" ["l"="-8.937,13.41"]
"adyzng/go-duka" ["l"="-8.948,13.401"]
"devfinwiz/Fin-Maestro-Kin" ["l"="-9.379,13.095"]
"NagarajuGunda/NSEIndexOptionsData" ["l"="-9.406,13.319"]
"madmay247/breeze-historical-options" ["l"="-9.481,13.396"]
"souvik131/trade-snippets" ["l"="-9.419,13.306"]
"Jsuresh47/Trading-Strategies" ["l"="-9.433,13.319"]
"angel-one/smartapi-python" ["l"="-9.888,13.797"]
"EconLQ/TWS-orders-placement-via-Tradinview-webhooks" ["l"="-8.348,13.127"]
"PlusGenie/tradingview-webhooks-bot" ["l"="-8.391,13.118"]
"GithubRealFan/ABM-Compiler-Python" ["l"="-8.52,13.793"]
"GithubRealFan/Simple-Projects-CUDA" ["l"="-8.53,13.797"]
"GithubRealFan/PHP-Based-ChatGPT-API" ["l"="-8.51,13.802"]
"lucasjinreal/LSTM_learn" ["l"="-9.399,12.488"]
"loliverhennigh/Convolutional-LSTM-in-Tensorflow" ["l"="41.507,25.75", "c"=537]
"webull-inc/openapi-java-sdk" ["l"="-8.448,13.016"]
"TradeViaPython/a3_aliceblue" ["l"="-9.552,13.488"]
"neurotrader888/TVLIndicator" ["l"="-9.227,13.346"]
"neurotrader888/VSAIndicator" ["l"="-9.247,13.353"]
"neurotrader888/PermutationEntropy" ["l"="-9.232,13.335"]
"vikassharma545/Historical-Market-data-From-Zerodha" ["l"="-9.529,13.498"]
"zhwang2001/Recurrent-Neural-Network-Trading-Bot" ["l"="-8.557,13.27"]
"velikov-mihail/AnomaliesPhDModule" ["l"="-8.599,13.506"]
"mattheaphy/actxps" ["l"="-9.892,12.308"]
"actuarialopensource/pymort" ["l"="-9.903,12.289"]
"AliHabibnia/Machine-Learning-from-Theory-to-Practice" ["l"="-8.869,13.359"]
"AliHabibnia/ECON_5314G_Big_Data_Economics" ["l"="-8.864,13.371"]
"AliHabibnia/CMDA_4984_Data_Science_for_Quantitative_Finance" ["l"="-8.89,13.334"]
"OmidVHeravi/NinjaTraderTools" ["l"="-8.507,13.75"]
"hackingthemarkets/chatgpt-api-whisper-api-voice-assistant" ["l"="-8.191,13.059"]
"suzgunmirac/hupd" ["l"="-7.997,13.827"]
"ML4ITS/TimeVQVAE-AnomalyDetection" ["l"="-10.004,12.826"]
"YihaoAng/TSGBench" ["l"="-10.014,12.845"]
"hackingthemarkets/openai-whisper-voice-commands" ["l"="-8.124,13.056"]
"hackingthemarkets/qa-assistant-eleven-labs-voice-cloning" ["l"="-8.151,13.054"]
"funginstitute/downloads" ["l"="-8.092,13.923"]
"funginstitute/disambiguator" ["l"="-8.089,13.91"]
"2187Nick/tos-streamlit-dashboard" ["l"="-8.329,13.205"]
"tifoji/pyrtdc" ["l"="-8.334,13.219"]
"anvgun/Options_Analyzer" ["l"="-8.306,13.185"]
"quantgirluk/ICMM" ["l"="-8.784,13.269"]
"Idirect-Tech/Breeze-Python-SDK" ["l"="-9.582,13.425"]
"Idirect-Tech/Breeze-Python-Examples" ["l"="-9.613,13.436"]
"tuckerbalch/QSTK" ["l"="-8.911,13.255"]
"ymh1989/SABR_local_vol" ["l"="-8.758,13.316"]
"instruritesh/ZStreamingQuote" ["l"="-9.531,13.334"]
"WISEPLAT/backtrader" ["l"="-9.118,13.456"]
"WISEPLAT/QuikPy" ["l"="-9.137,13.488"]
"Indian-Algorithmic-Trading-Community/DhanHQ-Ticker-py" ["l"="-9.854,13.798"]
"yinyayun/prediction" ["l"="-9.369,12.163"]
"Tapanhaz/MiniScalper_UI" ["l"="-9.516,13.443"]
"narenkram/steadfast-app" ["l"="-9.498,13.428"]
"FoundationAgents/MetaGPT" ["l"="40.43,0.067", "c"=7]
"microsoft/autogen" ["l"="40.57,0.22", "c"=7]
"run-llama/llama_index" ["l"="40.423,0.353", "c"=7]
"AntonOsika/gpt-engineer" ["l"="40.255,0.071", "c"=7]
"assafelovic/gpt-researcher" ["l"="40.767,0.173", "c"=7]
"TransformerOptimus/SuperAGI" ["l"="41.043,-3.921", "c"=146]
"QuivrHQ/quivr" ["l"="40.365,0.104", "c"=7]
"zagmi/qxbroker" ["l"="-8.894,14.035"]
"intro-stat-learning/ISLP_labs" ["l"="48.449,28.328", "c"=89]
"mckinsey/vizro" ["l"="-0.582,15.766", "c"=268]
"bbfamily/abu" ["l"="-8.371,14.693", "c"=177]
"alphanome-ai/sec-ai" ["l"="-9.457,12.638"]
"OpInCo-Community/support" ["l"="-9.049,14.274"]
"lockc-project/lockc" ["l"="7.387,-6.195", "c"=335]
"bpfman/bpfman" ["l"="7.241,-6.17", "c"=335]
"MichalOkon/imc_prosperity" ["l"="-8.388,12.621"]
"nicolassinott/IMC_Prosperity" ["l"="-8.382,12.633"]
"BakerStreetPhantom/IMC-Prosperity-Trading-Challenge-2023" ["l"="-8.391,12.595"]
"n-0/backtest-imc-prosperity-2023" ["l"="-8.399,12.628"]
"jmerle/imc-prosperity-2-visualizer" ["l"="-8.38,12.611"]
"ShubhamAnandJain/IMC-Prosperity-2023-Stanford-Cardinal" ["l"="-8.408,12.664"]
"jmerle/imc-prosperity-2" ["l"="-8.367,12.644"]
"ericcccsliu/imc-prosperity-2" ["l"="-8.354,12.632"]
"pe049395/IMC-Prosperity-2024" ["l"="-8.353,12.658"]
"jmerle/imc-prosperity-2-backtester" ["l"="-8.368,12.622"]
"gabsens/IMC-Prosperity-2-Manual" ["l"="-8.344,12.644"]
"BigBrotherTrade/trader" ["l"="-8.319,14.7", "c"=177]
"cgohlke/talib-build" ["l"="-8.506,14.822", "c"=177]
"TA-Lib/ta-lib" ["l"="-8.904,12.964"]
"KittenCN/stock_prediction" ["l"="-8.784,14.988", "c"=177]
"llSourcell/predicting_stock_prices" ["l"="49.758,26.811", "c"=791]
"jealous/stockstats" ["l"="-8.951,12.962"]
"ClementPerroud/Gym-Trading-Env" ["l"="-9.626,14.816", "c"=970]
"greyblake/ta-rs" ["l"="-10.673,13.074", "c"=265]
"fpga2u/AXOrderBook" ["l"="-8.555,15.805", "c"=565]
"openctp/openctp" ["l"="-8.549,14.737", "c"=177]
"0burak/imperial_hft" ["l"="-10.71,12.998", "c"=265]
"francoisruty/fruty_trading-automation" ["l"="-8.545,13.077"]
"Barca0412/Introduction-to-Quantitative-Finance" ["l"="-8.653,15.756", "c"=565]
"anfederico/stocktalk" ["l"="38.759,33.982", "c"=988]
"erdewit/tws_async" ["l"="-8.66,13.143"]
"man-group/mdf" ["l"="45.52,19.436", "c"=1169]
"thalesians/tsa" ["l"="-8.747,13.239"]
"okeeffed/cheat-sheets" ["l"="28.968,-26.451", "c"=73]
"Melelery/c-binance-futures-quant" ["l"="-10.584,10.831", "c"=720]
"buriburisuri/ebgan" ["l"="46.056,29.277", "c"=170]
"WISEPLAT/Learn-BackTrader" ["l"="-10.671,13.973", "c"=1168]
"zonination/investing" ["l"="23.136,-26.767", "c"=28]
"vinay-ram1999/AlgoTrade-API" ["l"="-9.616,13.479"]
"matplotlib/mpl-finance" ["l"="-8.932,13.131"]
"neurotrader888/TrendlineBreakoutMetaLabel" ["l"="-9.246,13.339"]
"neurotrader888/RSI-PCA" ["l"="-9.239,13.349"]
"neurotrader888/market-structure" ["l"="-9.251,13.4"]
"neurotrader888/VolatilityHawkes" ["l"="-9.246,13.364"]
"neurotrader888/TimeSeriesReversibility" ["l"="-9.23,13.354"]
"neurotrader888/IntramarketDifference" ["l"="-9.239,13.375"]
"neurotrader888/TimeSeriesVisibilityGraphs" ["l"="-9.233,13.365"]
"Elijas/sec-downloader" ["l"="-9.478,12.636"]
"joshyattridge/smart-money-concepts" ["l"="-9.076,13.356"]
"crypto-axis/SMC-Algo-Trading" ["l"="-9.122,13.415"]
"rabichawila/smart-money-py" ["l"="-9.097,13.388"]
"freqtrade/technical" ["l"="-10.699,11.367", "c"=408]
"vlex05/SMC-Algo-Trading" ["l"="-9.108,13.394"]
"TheSnowGuru/PyTrader-python-mt4-mt5-trading-api-connector-drag-n-drop" ["l"="-9.389,11.493", "c"=808]
"neurotrader888/TradeDependenceRunsTest" ["l"="-9.26,13.36"]
"patentnetwork/CPP_Disambiguation" ["l"="-8.106,13.908"]
"lequant40/portfolio_analytics_js" ["l"="-7.943,12.842"]
"quantbelt/jupyter-quant" ["l"="-8.721,13.04"]
"quantbelt/ib_fundamental" ["l"="-8.65,12.993"]
"davecliff/BristolStockExchange" ["l"="-10.651,12.823", "c"=265]
"AIM-IT4/QuantitativeDerivativeModels" ["l"="-8.643,13.341"]
"AIM-IT4/StochasticModelsAssetPricing" ["l"="-8.604,13.389"]
"gnzsnz/jupyter-quant" ["l"="-8.683,13.001"]
"pkjmesra/PKNSETools" ["l"="-9.351,13.481"]
"rpraka/ChartATM" ["l"="-8.487,13.716"]
"hackingthemarkets/financial-news-llama-index" ["l"="-8.134,13.037"]
"jakecyr/chatgpt-voice-assistant" ["l"="35.55,3.124", "c"=1271]
"DonGuillotine/chatGPT_whisper_AI_voice_assistant" ["l"="-8.14,13.076"]
"PlusGenie/ib-gateway-docker" ["l"="-8.406,13.11"]
"AIM-IT4/Python-For-Quants" ["l"="-8.588,13.41"]
"buriburisuri/supervised_infogan" ["l"="46.073,29.239", "c"=170]
"buriburisuri/sugartensor" ["l"="46.07,29.257", "c"=170]
"ZhuZhouFan/CQVAE" ["l"="-8.64,13.532"]
"quantiacs-legacy/python-sample-strategies" ["l"="-8.801,13.309"]
"quantiacs-legacy/Trendfollowing-Sample-Strategy" ["l"="-8.785,13.298"]
"jsisaacs/QuantStrategies" ["l"="-8.818,13.301"]
"KN4KNG/LotteryNumberPredictor" ["l"="-9.521,12.105"]
"yifan-guo-cwru/Time-Series-Prediction-with-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras" ["l"="-9.443,12.472"]
"PatientEz/Multidimensional-time-series-prediction-" ["l"="-9.42,12.506"]
"anfederico/stockeye" ["l"="-15.845,-8.265", "c"=1915]
"giladbi/algorithmic-trading" ["l"="-10.068,12.679", "c"=265]
"uclatommy/tweetfeels" ["l"="53.026,25.269", "c"=172]
"jakemmarsh/neural-network-stock-predictor" ["l"="-9.358,12.693"]
"mdengler/stockquote" ["l"="-9.261,12.786"]
"JoaoJungblut/QuantFinanceTraining" ["l"="-9.1,13.263"]
"aeron7/nifty-banknifty-intraday-data" ["l"="-9.478,13.542"]
"mrbcuda/pbo" ["l"="-9.358,13.08"]
"xushanthu-2014/imc_prosperity_trading_bot" ["l"="-8.384,12.574"]
"JagadeeshBoyidi/Live-PNL-PLot" ["l"="-9.465,13.335"]
"xcode88/fno-pre-req" ["l"="-9.455,13.325"]
"RustAlgo/920_Straddle" ["l"="-9.475,13.319"]
"jeanjerome/semisupervised_timeseries_infogan" ["l"="-9.774,12.911"]
"SongDark/timeseries_infogan" ["l"="-9.791,12.91"]
"starhou/One-dimensional-GAN" ["l"="-9.816,12.932"]
"buriburisuri/ac-gan" ["l"="45.995,29.236", "c"=170]
"jmerle/imc-prosperity-visualizer" ["l"="-8.363,12.584"]
"cttn/Stockex" ["l"="-9.378,12.653"]
"volkovacodes/IPO-Review-Chapter" ["l"="-9.645,12.575"]
"GithubRealFan/HairColorChange" ["l"="-8.523,13.809"]
"Yifeng-He/Deep-Learning-Time-Series-Prediction-using-LSTM-Recurrent-Neural-Networks" ["l"="-9.487,12.43"]
"godtopus/LeanTrading" ["l"="-8.472,13.83"]
"fxcm/FXCMTimeSeriesData" ["l"="-8.932,13.521"]
"fxcm/FXCM-API-Offerings" ["l"="-8.937,13.541"]
"DeviaVir/zenbot" ["l"="-10.454,11.617", "c"=408]
"butor/blackbird" ["l"="-10.41,11.639", "c"=408]
"oxford-cs-deepnlp-2017/lectures" ["l"="47.787,28.658", "c"=89]
"samshadwell/TrumpScript" ["l"="-16.8,-6.613", "c"=469]
"CryptoSignal/Crypto-Signal" ["l"="-10.492,11.562", "c"=408]
"TraderOracle/Quantower" ["l"="-8.429,13.815"]
"TraderOracle/TradingView" ["l"="-8.429,13.83"]
"TraderOracle/ATAS-Buy-Sell" ["l"="-8.416,13.805"]
"Netflix/conductor" ["l"="-2.926,12.024", "c"=15]
"numerai/example-scripts" ["l"="-20.309,11.972", "c"=22]
"microsoft/RD-Agent" ["l"="41.204,0.082", "c"=7]
"google-deepmind/uncertain_ground_truth" ["l"="43.766,26.183", "c"=1179]
"agentuniverse-ai/agentUniverse" ["l"="36.841,-2.117", "c"=797]
"virattt/financial-agent-ui" ["l"="41.408,0.469", "c"=7]
"reflex-dev/reflex-llm-examples" ["l"="41.476,0.254", "c"=7]
"pipiku915/FinMem-LLM-StockTrading" ["l"="-8.447,15.76", "c"=565]
"lastmile-ai/mcp-agent" ["l"="41.276,-0.004", "c"=7]
"Open-Trader/opentrader" ["l"="-10.62,11.48", "c"=408]
"ssatia/strtsmrt" ["l"="-9.219,12.689"]
"finmath/finmath-lib" ["l"="-9.776,10.749", "c"=614]
"AcadiaSoft/simm-lib" ["l"="-8.628,13.203"]
"pazzo83/QuantLib.jl" ["l"="-11.093,12.661", "c"=265]
"auto-differentiation/xad" ["l"="-19.396,-25.783", "c"=10]
"tkim/emsx_api_repository" ["l"="-9.094,13.309"]
"Rblp/Rblpapi" ["l"="-9.11,13.349"]
"pricingmonkey/blpapi-web" ["l"="-9.071,13.274"]
"marketcalls/openadvisor" ["l"="-9.444,13.411"]
"virattt/financial-agent" ["l"="-9.549,12.566"]
"microsoft/MarS" ["l"="-8.964,12.644"]
"adidror005/youtube-videos" ["l"="-8.647,12.951"]
"calclavia/DeepJ" ["l"="38.654,3.899", "c"=201]
"imalikshake/StyleNet" ["l"="-9.925,12.852"]
"PFund-Software-Ltd/pfund" ["l"="-8.73,13.506"]
"PFund-Software-Ltd/pfeed" ["l"="-8.734,13.491"]
"mdn/django-diy-blog" ["l"="46.876,18.607", "c"=52]
"BennyThadikaran/BseIndiaApi" ["l"="-9.341,13.527"]
"subpath/Keras_music_gereration" ["l"="38.716,3.954", "c"=201]
"RichardYang40148/MidiNet" ["l"="38.754,4.08", "c"=201]
"LantaoYu/SeqGAN" ["l"="57.813,29.4", "c"=1082]
"umbrellabeach/music-generation-with-DL" ["l"="1.45,11.935", "c"=546]
"jakezhaojb/ARAE" ["l"="57.732,29.378", "c"=1082]
"Zardinality/WGAN-tensorflow" ["l"="45.979,29.162", "c"=170]
"kylemcdonald/FreeWifi" ["l"="23.408,-26.871", "c"=28]
"rainx/inside-zipline" ["l"="-8.557,14.605", "c"=177]
"YerevaNN/mimic3-benchmarks" ["l"="-33.225,16.213", "c"=404]
"aurotripathy/lstm-anomaly-detect" ["l"="52.406,14.825", "c"=569]
"FrancisArgnR/Time-series---deep-learning---state-of-the-art" ["l"="48.343,34.296", "c"=168]
"datacamp/datacamp-community-tutorials" ["l"="47.091,24.979", "c"=425]
"ckmarkoh/GAN-tensorflow" ["l"="-9.918,12.943"]
"jmerle/imc-prosperity-2-submitter" ["l"="-8.357,12.6"]
"facebookarchive/bootstrapped" ["l"="43.472,25.769", "c"=372]
"TulipCharts/tulipnode" ["l"="-9.63,10.346", "c"=614]
"cirla/tulipy" ["l"="-9.015,13.179"]
"oransel/node-talib" ["l"="-9.631,10.325", "c"=614]
"austin-starks/Promptimizer" ["l"="-8.623,13.263"]
"austin-starks/FinAnGPT-Pro" ["l"="-8.69,13.338"]
"twosigma/flint" ["l"="-2.656,17.1", "c"=455]
"nimashahbazi/optiver-trading-close" ["l"="-8.764,12.95"]
"ChunhanLi/9th-kaggle-optiver-trading-close" ["l"="-8.664,12.868"]
"milenavuletic/Fin-GAN" ["l"="-8.724,13.094"]
"bradleyboyuyang/ML-HFT" ["l"="-10.774,12.937", "c"=265]
"hudson-and-thames/backtest_tutorial" ["l"="-8.884,13.288"]
"SaberaTalukder/TOTEM" ["l"="44.978,24.601", "c"=166]
"osyuksel/kaggle-optiver-2024" ["l"="-8.623,12.834"]
"TraderOracle/NinjaTrader" ["l"="-8.439,13.798"]
"WaleeTheRobot/open-auto-trend-support-resistance" ["l"="-8.494,13.703"]
"WaleeTheRobot/ninja-trader-discord-messenger" ["l"="-8.473,13.725"]
"jDoom/NinjaScripts" ["l"="-8.463,13.739"]
"RobRomijnders/AE_ts" ["l"="52.535,14.68", "c"=569]
"virattt/openbb-financialdatasets-backend" ["l"="-9.536,12.584"]
"TraderOracle/ATAS" ["l"="-8.415,13.82"]
"TraderOracle/SierraChart" ["l"="-8.397,13.844"]
"jmerle/imc-prosperity-3-visualizer" ["l"="-8.321,12.625"]
"Luka-R-Lukacevic/prosperity2" ["l"="-8.323,12.657"]
"neberej/tos-client" ["l"="-8.432,13.259"]
"tradestation/webapi-docs" ["l"="-8.262,13.328"]
"BaileySimrell/QuantGPT-v2" ["l"="-8.852,13.444"]
"JamesBrofos/Odin" ["l"="-8.836,13.364"]
"JamesBrofos/Odin-Securities" ["l"="-8.818,13.411"]
"blockchain99/stock-predict-by-RNN-LSTM" ["l"="-9.295,12.535"]
"BrianNingUT/ArbFreeIV-VAE" ["l"="-8.699,13.176"]
"AndysDeepAbstractions/How-to-Predict-Stock-Prices-Easily-Demo" ["l"="-9.359,12.593"]
"vollib/py_lets_be_rational" ["l"="-8.9,13.274"]
"vollib/lets_be_rational" ["l"="-8.893,13.263"]
"plotly/dash-volatility-surface" ["l"="-8.859,13.28"]
"mintapi/mintapi" ["l"="13.603,-8.548", "c"=18]
"jimgoo/zipline-tensorboard" ["l"="-8.741,13.203"]
"zipline-live/zipline-live.github.io" ["l"="-8.775,13.131"]
"JaysonAlbert/zipline" ["l"="-8.52,14.575", "c"=177]
"Bohr1005/xcrypto" ["l"="-10.833,13.016", "c"=265]
"fearofcode/bateman" ["l"="-9.708,10.821", "c"=614]
"valeman/Awesome_Math_Books" ["l"="43.79,26.169", "c"=1179]
"Kulbear/deep-learning-nano-foundation" ["l"="49.099,27.7", "c"=1018]
"python-streamz/streamz" ["l"="43.796,23.843", "c"=95]
"Blosc/bcolz" ["l"="43.828,23.829", "c"=95]
"ivanseidel/Is-Now-Illegal" ["l"="23.395,-27.125", "c"=28]
"AlexWan/OsEngine" ["l"="-10.536,13.734", "c"=1168]
"edeane/forex" ["l"="-9.013,13.568"]
"MikaelFuresjo/ImundboQuant" ["l"="-8.992,13.561"]
"YOYZHANG/open-source-ai-weekly" ["l"="-55.149,-11.241", "c"=365]
"bklieger-groq/stockbot-on-groq" ["l"="41.421,0.39", "c"=7]
"microsoft/PromptWizard" ["l"="41.175,0.25", "c"=7]
"LLMQuant/quant-wiki" ["l"="-8.613,15.674", "c"=565]
"DulyHao/AlphaForge" ["l"="-8.586,15.782", "c"=565]
"SJTU-DMTai/StockMixer" ["l"="-8.49,15.715", "c"=565]
"quickfixgo/quickfix" ["l"="-10.475,12.848", "c"=265]
"6-Billionaires/trading-gym" ["l"="-9.532,14.756", "c"=970]
"kreukle/Q-learning-NN" ["l"="-9.056,13.55"]
"zbanga/FXCM_currency" ["l"="-9.051,13.586"]
"henrybyhee/TradingTensors" ["l"="-9.666,14.663", "c"=970]
"BlackArbsCEO/iex_intraday_equity_downloader_public" ["l"="-9.365,13.159"]
"hackingthemarkets/ai-trading-agent" ["l"="-8.392,13.037"]
"hackingthemarkets/gemini-multimodal-structured-extraction" ["l"="-8.418,13.04"]
"LiamConnell/deep-algotrading" ["l"="-9.569,14.642", "c"=970]
"himanshu2406/Algo.Py" ["l"="-8.751,13.419"]
"Morritse/SentimenTA" ["l"="-8.723,13.434"]
"cenab/MSTO" ["l"="-8.711,13.45"]
"russs123/backtests" ["l"="-8.745,13.472"]
"sesto-dev/metatrader5-quant-server-python" ["l"="-8.723,13.465"]
"Dze237/flutter_inapp_purchase" ["l"="-8.759,13.462"]
"quantzzh/dlstock" ["l"="-8.825,14.775", "c"=177]
"BUPTLdy/Sentiment-Analysis" ["l"="50.086,22.153", "c"=890]
"jimenbian/stock-rnn" ["l"="-9.301,12.438"]
"neelabhpant/Deep-Learning-in-Python" ["l"="-9.318,12.39"]
"tg12/Market-Pressure-Analyzer" ["l"="-8.704,13.496"]
"r0fls/soad" ["l"="-8.687,13.472"]
"business-science/free-ai-tips" ["l"="41.482,0.284", "c"=7]
"llSourcell/How-to-Generate-Art-Demo" ["l"="49.883,26.774", "c"=791]
"avhirupc/Stock-Market-Prediction-Challenge" ["l"="49.768,26.744", "c"=791]
"dpf205/python-trading-algo-oanda-api" ["l"="-9.073,13.43"]
"0xFaust12/alt_data_factor_research" ["l"="-8.832,13.023"]
"javifalces/HFTFramework" ["l"="-10.794,12.962", "c"=265]
"microprediction/precise" ["l"="45.343,26.681", "c"=68]
"andrewlfc7/funding-arb-bot" ["l"="-10.824,13.099", "c"=265]
"jmerle/imc-prosperity-3-backtester" ["l"="-8.319,12.61"]
"rememberlenny/robinhood-ruby" ["l"="-8.34,12.925"]
"mp2893/medgan" ["l"="-33.285,16.236", "c"=404]
"rohanag/StockMarketSentimentAnalysis" ["l"="-9.267,12.588"]
"upstox/upstox-nodejs" ["l"="-9.825,13.724"]
"upstox/upstox-java" ["l"="-9.848,13.727"]
"Omar-Karimov/ChartScanAI" ["l"="-9.233,13.422"]
"tkim/emsx_api_doc" ["l"="-9.132,13.35"]
"xingetouzi/jaqs-fxdayu" ["l"="-8.844,15.759", "c"=565]
"iLampard/WindAdapter" ["l"="-9.074,13.226"]
"pcaspers/Quantuccia" ["l"="-8.486,13.285"]
"eddelbuettel/rcppquantuccia" ["l"="-8.45,13.302"]
"akash13singh/LSTM_TimeSeries" ["l"="-9.345,12.442"]
"CodeUpdaterBot/ClickUi" ["l"="42.636,1.828", "c"=952]
"zackurben/alphavantage" ["l"="-8.253,12.809"]
"ccxt/ccxt" ["l"="-10.57,11.645", "c"=408]
"24mlight/A_Share_investment_Agent" ["l"="-8.575,15.652", "c"=565]
"vprusso/youtube_tutorials" ["l"="52.969,25.277", "c"=172]
"SaiAkhil066/DeepSeek-RAG-Chatbot" ["l"="41.406,0.233", "c"=7]
"kokspflanze/alpha-vantage-api" ["l"="-8.195,12.797"]
"joseraul/alpha-vantage-api" ["l"="-8.167,12.786"]
"prediqtiv/alpha-vantage-cookbook" ["l"="-8.198,12.769"]
"IBM/watson-stock-advisor" ["l"="-8.226,12.773"]
"zackurben/stocks" ["l"="-8.226,12.802"]
"virattt/ai-financial-agent" ["l"="41.453,0.255", "c"=7]
"casact/tryangle" ["l"="-9.937,12.458"]
"24mlight/Free_US_Investment_Agent_System" ["l"="-8.542,15.669", "c"=565]
"neurotrader888/mcpt" ["l"="-9.266,13.421"]
"quantroom-pro/cryptocurrency.backtester" ["l"="-8.795,13.182"]
"BitcoinExchangeFH/BitcoinExchangeFH" ["l"="-10.277,11.641", "c"=408]
"thalesians/bayestsa" ["l"="-8.73,13.283"]
"thalesians/lathalesians" ["l"="-8.73,13.269"]
"upstox/upstox-python" ["l"="-9.791,13.718"]
"ArvinLovegood/go-stock" ["l"="-8.442,14.928", "c"=177]
"MicroPyramid/Django-CRM" ["l"="47.056,18.594", "c"=52]
"PacktPublishing/Hands-on-Python-for-Finance-V" ["l"="-9.171,13.12"]
"Crypto-toolbox/btfxwss" ["l"="-10.2,11.753", "c"=408]
"Crypto-toolbox/bitex" ["l"="-10.229,11.684", "c"=408]
"ewfrees/LifeCon" ["l"="-9.906,12.368"]
"ewfrees/Loss-Data-Analytics-Ed1" ["l"="-9.918,12.377"]
"SUFE-AIFLM-Lab/Fin-R1" ["l"="39.254,-1.895", "c"=202]
"happynoom/DeepTrade_keras" ["l"="-9.338,12.816"]
"vsmolyakov/experiments_with_python" ["l"="-9.312,12.476"]
"atreyasha/mv-temporal-rgan" ["l"="-9.876,12.866"]
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" ["l"="45.227,26.733", "c"=68]
"hackingthemarkets/prediction-market-assistant" ["l"="-8.341,13.029"]
"hackingthemarkets/prediction-markets" ["l"="-8.353,13.043"]
"hackingthemarkets/ai-hedge-fund" ["l"="-8.358,13.026"]
"theidealist/node-etrade-api" ["l"="-8.601,13.352"]
"haualan/etradePythonAPI" ["l"="-8.609,13.335"]
"quantrocket-llc/codeload-demo" ["l"="-8.755,13.284"]
"quantlibnode/quantlibnode" ["l"="-8.51,13.285"]
"phelps-sg/jasa" ["l"="-10.679,12.81", "c"=265]
"jackluo/volatility-surface" ["l"="-8.832,13.335"]
"Theling/10-K-scraper" ["l"="-9.485,12.692"]
"philipxjm/Steward" ["l"="-9.315,12.727"]
"tg12/2025-trading-automation-scripts" ["l"="-8.7,13.549"]
"jmerle/imc-prosperity-3-submitter" ["l"="-8.3,12.614"]
"velikov-mihail/AI-Powered-Scholarship" ["l"="-8.594,13.523"]
"Gunratan/edgar" ["l"="-9.555,12.664"]
"stephen-eades/tos-trade-bot" ["l"="-8.406,13.279"]
"akarat/exchange" ["l"="-8.995,13.232"]
"RoughStochVol/small-time_asymptotics_fractional" ["l"="-8.577,12.892"]
"SolbiatiAlessandro/RNN-stocks-prediction" ["l"="-9.061,13.637"]
"gnagel/greeks" ["l"="-8.822,13.394"]
"polyaxon/polyaxon-lib" ["l"="-9.437,12.415"]
"EazyDuz1t/EzOptions" ["l"="-8.27,13.176"]
"thisiskj/robinhood-trader" ["l"="-8.287,12.891"]
}