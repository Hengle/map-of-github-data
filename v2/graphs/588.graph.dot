digraph G {
"lemon24/reader" -> "feedhq/feedhq" ["e"=1]
"codelucas/newspaper" -> "grangier/python-goose"
"codelucas/newspaper" -> "fhamborg/news-please"
"codelucas/newspaper" -> "buriy/python-readability"
"codelucas/newspaper" -> "explosion/spaCy" ["e"=1]
"codelucas/newspaper" -> "binux/pyspider" ["e"=1]
"codelucas/newspaper" -> "piskvorky/gensim" ["e"=1]
"codelucas/newspaper" -> "scrapinghub/portia" ["e"=1]
"codelucas/newspaper" -> "psf/requests-html" ["e"=1]
"codelucas/newspaper" -> "clips/pattern" ["e"=1]
"codelucas/newspaper" -> "flairNLP/flair" ["e"=1]
"codelucas/newspaper" -> "facebookresearch/fastText" ["e"=1]
"codelucas/newspaper" -> "sloria/TextBlob" ["e"=1]
"codelucas/newspaper" -> "miso-belica/sumy" ["e"=1]
"codelucas/newspaper" -> "scrapy/scrapy" ["e"=1]
"codelucas/newspaper" -> "joke2k/faker" ["e"=1]
"microlinkhq/unavatar" -> "microlinkhq/metascraper"
"microlinkhq/unavatar" -> "microlinkhq/cards"
"microlinkhq/unavatar" -> "microlinkhq/splashy"
"microlinkhq/unavatar" -> "spatie/laravel-google-fonts" ["e"=1]
"microlinkhq/unavatar" -> "microlinkhq/browserless" ["e"=1]
"microlinkhq/unavatar" -> "vercel/avatar" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "collabnix/kubelabs" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "ajeetraina/kubernetes101" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "schenkd/nginx-ui"
"knrt10/kubernetes-basicLearning" -> "Tikam02/DevOps-Guide" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "eon01/kubernetes-workshop" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "diegolnasc/kubernetes-best-practices" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "presmihaylov/booknotes" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "fpereiro/backendlore" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "Rolstenhouse/unofficial-apis"
"knrt10/kubernetes-basicLearning" -> "ContainerSolutions/kubernetes-examples" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "veeral-patel/how-to-secure-anything" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "trimstray/nginx-admins-handbook" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "justinamiller/SoftwareArchitect" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "palash25/best-practices-checklist" ["e"=1]
"knrt10/kubernetes-basicLearning" -> "linkedin/school-of-sre" ["e"=1]
"Decodo/Decodo" -> "oxylabs/google-news-scraper"
"Decodo/Decodo" -> "oxylabs/how-to-scrape-google-images"
"Decodo/Decodo" -> "oxylabs/google-maps-scraper"
"Decodo/Decodo" -> "oxylabs/how-to-scrape-google-flights"
"Decodo/Decodo" -> "oxylabs/how-to-scrape-google-scholar"
"Decodo/Decodo" -> "oxylabs/amazon-scraper"
"Decodo/Decodo" -> "oxylabs/quick-start-guide"
"kurtmckee/feedparser" -> "lkiesow/python-feedgen"
"kurtmckee/feedparser" -> "codelucas/newspaper"
"kurtmckee/feedparser" -> "Alir3z4/html2text"
"kurtmckee/feedparser" -> "buriy/python-readability"
"kurtmckee/feedparser" -> "mmcdole/gofeed" ["e"=1]
"kurtmckee/feedparser" -> "scrapinghub/dateparser" ["e"=1]
"kurtmckee/feedparser" -> "scrapinghub/extruct" ["e"=1]
"kurtmckee/feedparser" -> "kurtmckee/listparser"
"kurtmckee/feedparser" -> "lemon24/reader"
"kurtmckee/feedparser" -> "dateutil/dateutil" ["e"=1]
"kurtmckee/feedparser" -> "Suor/funcy" ["e"=1]
"kurtmckee/feedparser" -> "gabrielfalcao/HTTPretty" ["e"=1]
"kurtmckee/feedparser" -> "FactoryBoy/factory_boy" ["e"=1]
"kurtmckee/feedparser" -> "lxml/lxml" ["e"=1]
"kurtmckee/feedparser" -> "Python-Markdown/markdown"
"trentm/python-markdown2" -> "Python-Markdown/markdown"
"trentm/python-markdown2" -> "lepture/mistune"
"trentm/python-markdown2" -> "richleland/pygments-css"
"trentm/python-markdown2" -> "neutronX/django-markdownx" ["e"=1]
"trentm/python-markdown2" -> "miyuchina/mistletoe"
"trentm/python-markdown2" -> "getpelican/pelican" ["e"=1]
"trentm/python-markdown2" -> "aaronsw/html2text"
"trentm/python-markdown2" -> "jazzband/django-taggit" ["e"=1]
"trentm/python-markdown2" -> "Alir3z4/html2text"
"trentm/python-markdown2" -> "pallets/werkzeug" ["e"=1]
"trentm/python-markdown2" -> "trentm/django-markdown-deux" ["e"=1]
"trentm/python-markdown2" -> "xhtml2pdf/xhtml2pdf" ["e"=1]
"trentm/python-markdown2" -> "jazzband/tablib" ["e"=1]
"trentm/python-markdown2" -> "Kozea/WeasyPrint" ["e"=1]
"trentm/python-markdown2" -> "matthewwithanm/python-markdownify"
"buriy/python-readability" -> "grangier/python-goose"
"buriy/python-readability" -> "timbertson/python-readability"
"buriy/python-readability" -> "dragnet-org/dragnet"
"buriy/python-readability" -> "luin/readability"
"buriy/python-readability" -> "codelucas/newspaper"
"buriy/python-readability" -> "mozilla/readability"
"buriy/python-readability" -> "misja/python-boilerpipe"
"buriy/python-readability" -> "adbar/trafilatura"
"buriy/python-readability" -> "goose3/goose3"
"buriy/python-readability" -> "Alir3z4/html2text"
"buriy/python-readability" -> "kohlschutter/boilerpipe"
"buriy/python-readability" -> "fhamborg/news-please"
"buriy/python-readability" -> "kingwkb/readability"
"buriy/python-readability" -> "GeneralNewsExtractor/GeneralNewsExtractor" ["e"=1]
"buriy/python-readability" -> "miso-belica/sumy" ["e"=1]
"aaronsw/html2text" -> "Alir3z4/html2text"
"aaronsw/html2text" -> "matthewwithanm/python-markdownify"
"aaronsw/html2text" -> "buriy/python-readability"
"aaronsw/html2text" -> "elliotgao2/tomd"
"aaronsw/html2text" -> "trentm/python-markdown2"
"aaronsw/html2text" -> "mixmark-io/turndown" ["e"=1]
"aaronsw/html2text" -> "Python-Markdown/markdown"
"aaronsw/html2text" -> "jazzband/tablib" ["e"=1]
"aaronsw/html2text" -> "mozilla/bleach" ["e"=1]
"aaronsw/html2text" -> "lepture/mistune"
"aaronsw/html2text" -> "grangier/python-goose"
"aaronsw/html2text" -> "thephpleague/html-to-markdown" ["e"=1]
"aaronsw/html2text" -> "pallets/werkzeug" ["e"=1]
"aaronsw/html2text" -> "scrapy/parsel" ["e"=1]
"aaronsw/html2text" -> "scrapinghub/dateparser" ["e"=1]
"jshemas/openGraphScraper" -> "microlinkhq/metascraper"
"jshemas/openGraphScraper" -> "withspectrum/micro-open-graph"
"jshemas/openGraphScraper" -> "samholmes/node-open-graph"
"jshemas/openGraphScraper" -> "xieguanglei/react-pace-progress"
"jshemas/openGraphScraper" -> "jacktuck/unfurl"
"jshemas/openGraphScraper" -> "hamid/dollar-tomans-api"
"jshemas/openGraphScraper" -> "hamid/iranian-news-agencies-crawler"
"jshemas/openGraphScraper" -> "hamid/react-native-persian-date-picker"
"jshemas/openGraphScraper" -> "hamid/react-native-ios-settings-bundle"
"jshemas/openGraphScraper" -> "laurengarcia/url-metadata"
"adbar/trafilatura" -> "miso-belica/jusText"
"adbar/trafilatura" -> "scrapinghub/article-extraction-benchmark"
"adbar/trafilatura" -> "huggingface/datatrove" ["e"=1]
"adbar/trafilatura" -> "buriy/python-readability"
"adbar/trafilatura" -> "fhamborg/news-please"
"adbar/trafilatura" -> "dottxt-ai/outlines" ["e"=1]
"adbar/trafilatura" -> "mozilla/readability"
"adbar/trafilatura" -> "codelucas/newspaper"
"adbar/trafilatura" -> "google-research/deduplicate-text-datasets" ["e"=1]
"adbar/trafilatura" -> "neuml/txtai" ["e"=1]
"adbar/trafilatura" -> "dragnet-org/dragnet"
"adbar/trafilatura" -> "Unstructured-IO/unstructured" ["e"=1]
"adbar/trafilatura" -> "goose3/goose3"
"adbar/trafilatura" -> "Alir3z4/html2text"
"adbar/trafilatura" -> "alirezamika/autoscraper"
"GravityLabs/goose" -> "karussell/snacktory"
"GravityLabs/goose" -> "kohlschutter/boilerpipe"
"GravityLabs/goose" -> "grangier/python-goose"
"GravityLabs/goose" -> "apresta/tagger" ["e"=1]
"GravityLabs/goose" -> "jiminoc/goose"
"GravityLabs/goose" -> "yostudios/Spritemapper" ["e"=1]
"GravityLabs/goose" -> "udibr/bitcoinApp" ["e"=1]
"GravityLabs/goose" -> "Cue/greplin-bloom-filter"
"GravityLabs/goose" -> "joehewitt/scrollability" ["e"=1]
"GravityLabs/goose" -> "peterc/pismo" ["e"=1]
"GravityLabs/goose" -> "LinkedInAttic/indextank-engine" ["e"=1]
"GravityLabs/goose" -> "cantino/ruby-readability" ["e"=1]
"GravityLabs/goose" -> "nathanmarz/elephantdb" ["e"=1]
"GravityLabs/goose" -> "NICTA/scoobi" ["e"=1]
"GravityLabs/goose" -> "nathanmarz/cascalog" ["e"=1]
"lepture/mistune" -> "miyuchina/mistletoe"
"lepture/mistune" -> "Python-Markdown/markdown"
"lepture/mistune" -> "trentm/python-markdown2"
"lepture/mistune" -> "executablebooks/markdown-it-py"
"lepture/mistune" -> "frostming/marko"
"lepture/mistune" -> "lepture/mistune-contrib"
"lepture/mistune" -> "jazzband/tablib" ["e"=1]
"lepture/mistune" -> "JessicaTegner/pypandoc"
"lepture/mistune" -> "Alir3z4/html2text"
"lepture/mistune" -> "richleland/pygments-css"
"lepture/mistune" -> "pylixm/django-mdeditor" ["e"=1]
"lepture/mistune" -> "coleifer/huey" ["e"=1]
"lepture/mistune" -> "msiemens/tinydb" ["e"=1]
"lepture/mistune" -> "FSX/misaka"
"lepture/mistune" -> "coleifer/peewee" ["e"=1]
"seperman/fast-autocomplete" -> "rodricios/autocomplete"
"Cue/greplin-lucene-utils" -> "Cue/greplin-bloom-filter"
"ziyan/spider" -> "dragnet-org/dragnet"
"mattlisiv/newsapi-python" -> "SlapBot/newsapi"
"mattlisiv/newsapi-python" -> "kotartemiy/pygooglenews"
"arrix/node-readability" -> "mingcheng/php-readability" ["e"=1]
"arrix/node-readability" -> "4poc/feedability"
"arrix/node-readability" -> "Tjatse/node-readability"
"arrix/node-readability" -> "bndr/node-read"
"atmos/camo" -> "willwashburn/phpamo"
"atmos/camo" -> "cactus/go-camo"
"atmos/camo" -> "itteco/iframely"
"atmos/camo" -> "mperham/girl_friday" ["e"=1]
"dylang/node-rss" -> "jpmonette/feed"
"dylang/node-rss" -> "danmactough/node-feedparser"
"Alir3z4/html2text" -> "aaronsw/html2text"
"Alir3z4/html2text" -> "matthewwithanm/python-markdownify"
"Alir3z4/html2text" -> "buriy/python-readability"
"Alir3z4/html2text" -> "deanmalmgren/textract" ["e"=1]
"Alir3z4/html2text" -> "adbar/trafilatura"
"Alir3z4/html2text" -> "mozilla/bleach" ["e"=1]
"Alir3z4/html2text" -> "michaelhelmick/lassie" ["e"=1]
"Alir3z4/html2text" -> "kurtmckee/feedparser"
"Alir3z4/html2text" -> "weblyzard/inscriptis"
"Alir3z4/html2text" -> "john-kurkowski/tldextract" ["e"=1]
"Alir3z4/html2text" -> "lepture/mistune"
"Alir3z4/html2text" -> "peterbe/premailer" ["e"=1]
"Alir3z4/html2text" -> "coleifer/micawber" ["e"=1]
"Alir3z4/html2text" -> "html5lib/html5lib-python" ["e"=1]
"Alir3z4/html2text" -> "Python-Markdown/markdown"
"microlinkhq/sdk" -> "winhtaikaung/react-tiny-link"
"microlinkhq/sdk" -> "microlinkhq/metascraper"
"microlinkhq/sdk" -> "microlinkhq/cards"
"microlinkhq/sdk" -> "e-oj/grabity"
"microlinkhq/sdk" -> "withspectrum/micro-open-graph"
"frostming/marko" -> "miyuchina/mistletoe"
"frostming/marko" -> "executablebooks/markdown-it-py"
"dankito/Readability4J" -> "chimbori/crux"
"winhtaikaung/react-tiny-link" -> "microlinkhq/sdk"
"winhtaikaung/react-tiny-link" -> "withspectrum/micro-open-graph"
"Tjatse/node-readability" -> "Tjatse/spider2"
"Tjatse/node-readability" -> "arrix/node-readability"
"Iceloof/GoogleNews" -> "ranahaani/GNews"
"Iceloof/GoogleNews" -> "kotartemiy/pygooglenews"
"Iceloof/GoogleNews" -> "lewisdonovan/google-news-scraper"
"Cue/greplin-bloom-filter" -> "Cue/greplin-lucene-utils"
"dalab/web2text" -> "kennethkenneth/AuthorExtractor"
"dalab/web2text" -> "mrjleo/boilernet"
"chimbori/crux" -> "dankito/Readability4J"
"chimbori/crux" -> "karussell/snacktory"
"chimbori/crux" -> "chimbori/crux"
"chimbori/crux" -> "saket/unfurl" ["e"=1]
"hamid/react-native-ios-settings-bundle" -> "hamid/react-native-persian-date-picker"
"hamid/react-native-ios-settings-bundle" -> "hamid/iranian-news-agencies-crawler"
"hamid/react-native-ios-settings-bundle" -> "hamid/mashya-instagram-api"
"hamid/react-native-ios-settings-bundle" -> "hamid/dollar-tomans-api"
"hamid/react-native-ios-settings-bundle" -> "hamid/react-native-reanimated-bottom-sheet"
"srijiths/readabilityBUNDLE" -> "karussell/snacktory"
"srijiths/readabilityBUNDLE" -> "basis-technology-corp/Java-readability"
"executablebooks/markdown-it-py" -> "frostming/marko"
"executablebooks/markdown-it-py" -> "miyuchina/mistletoe"
"executablebooks/markdown-it-py" -> "executablebooks/MyST-Parser" ["e"=1]
"executablebooks/markdown-it-py" -> "hukkin/mdformat"
"executablebooks/markdown-it-py" -> "njvack/markdown-to-json"
"executablebooks/markdown-it-py" -> "executablebooks/mdit-py-plugins"
"executablebooks/markdown-it-py" -> "lepture/mistune"
"executablebooks/markdown-it-py" -> "executablebooks/MyST-NB" ["e"=1]
"executablebooks/markdown-it-py" -> "Python-Markdown/markdown"
"executablebooks/markdown-it-py" -> "JessicaTegner/pypandoc"
"executablebooks/markdown-it-py" -> "matthewwithanm/python-markdownify"
"executablebooks/markdown-it-py" -> "python-poetry/tomlkit" ["e"=1]
"executablebooks/markdown-it-py" -> "executablebooks/sphinx-design" ["e"=1]
"executablebooks/markdown-it-py" -> "rr-/docstring_parser" ["e"=1]
"executablebooks/markdown-it-py" -> "facelessuser/pymdown-extensions" ["e"=1]
"schenkd/nginx-ui" -> "plotly/falcon" ["e"=1]
"schenkd/nginx-ui" -> "knrt10/kubernetes-basicLearning"
"schenkd/nginx-ui" -> "alfiopuglisi/guietta"
"schenkd/nginx-ui" -> "cym1102/nginxWebUI" ["e"=1]
"schenkd/nginx-ui" -> "trimstray/nginx-admins-handbook" ["e"=1]
"schenkd/nginx-ui" -> "0xJacky/nginx-ui" ["e"=1]
"schenkd/nginx-ui" -> "onlyGuo/nginx-gui" ["e"=1]
"schenkd/nginx-ui" -> "digitalocean/nginxconfig.io" ["e"=1]
"schenkd/nginx-ui" -> "oct16/TimeCat" ["e"=1]
"schenkd/nginx-ui" -> "muesli/duf" ["e"=1]
"schenkd/nginx-ui" -> "statping/statping" ["e"=1]
"schenkd/nginx-ui" -> "nakabonne/ali" ["e"=1]
"schenkd/nginx-ui" -> "ADD-SP/ngx_waf" ["e"=1]
"schenkd/nginx-ui" -> "zmister2016/MrDoc" ["e"=1]
"schenkd/nginx-ui" -> "openspug/spug" ["e"=1]
"mrjleo/boilernet" -> "dalab/web2text"
"kotartemiy/newscatcher" -> "kotartemiy/pygooglenews"
"kotartemiy/newscatcher" -> "codelucas/newspaper"
"kotartemiy/newscatcher" -> "fhamborg/news-please"
"kotartemiy/newscatcher" -> "Rolstenhouse/unofficial-apis"
"kotartemiy/newscatcher" -> "kotartemiy/extract-news-api"
"kotartemiy/newscatcher" -> "man-group/dtale" ["e"=1]
"kotartemiy/newscatcher" -> "hudson-and-thames/mlfinlab" ["e"=1]
"kotartemiy/newscatcher" -> "alexgolec/tda-api" ["e"=1]
"kotartemiy/newscatcher" -> "alfiopuglisi/guietta"
"kotartemiy/newscatcher" -> "cortexlabs/cortex" ["e"=1]
"kotartemiy/newscatcher" -> "cantaro86/Financial-Models-Numerical-Methods" ["e"=1]
"kotartemiy/newscatcher" -> "harttraveller/finlib"
"kotartemiy/newscatcher" -> "plotly/falcon" ["e"=1]
"kotartemiy/newscatcher" -> "firmai/machine-learning-asset-management" ["e"=1]
"kotartemiy/newscatcher" -> "SigmaQuan/Better-Python-59-Ways"
"hukkin/mdformat" -> "executablebooks/markdown-it-py"
"hukkin/mdformat" -> "executablebooks/MyST-Parser" ["e"=1]
"hukkin/mdformat" -> "igorshubovych/markdownlint-cli" ["e"=1]
"kotartemiy/pygooglenews" -> "kotartemiy/newscatcher"
"kotartemiy/pygooglenews" -> "Iceloof/GoogleNews"
"kotartemiy/pygooglenews" -> "ranahaani/GNews"
"kotartemiy/pygooglenews" -> "fhamborg/news-please"
"kotartemiy/pygooglenews" -> "kotartemiy/extract-news-api"
"kotartemiy/pygooglenews" -> "alfiopuglisi/guietta"
"kotartemiy/pygooglenews" -> "codelucas/newspaper"
"kotartemiy/pygooglenews" -> "Rolstenhouse/unofficial-apis"
"kotartemiy/pygooglenews" -> "mattlisiv/newsapi-python"
"kotartemiy/pygooglenews" -> "socialpoint-labs/sheetfu" ["e"=1]
"kotartemiy/pygooglenews" -> "GeneralMills/pytrends" ["e"=1]
"kotartemiy/pygooglenews" -> "lewisdonovan/google-news-scraper"
"kotartemiy/pygooglenews" -> "fhamborg/Giveme5W1H" ["e"=1]
"kotartemiy/pygooglenews" -> "minimaxir/aitextgen" ["e"=1]
"kotartemiy/pygooglenews" -> "hudson-and-thames/mlfinlab" ["e"=1]
"alirezamika/autoscraper" -> "lorey/mlscraper"
"alirezamika/autoscraper" -> "lorien/awesome-web-scraping" ["e"=1]
"alirezamika/autoscraper" -> "twintproject/twint" ["e"=1]
"alirezamika/autoscraper" -> "huangsam/ultimate-python" ["e"=1]
"alirezamika/autoscraper" -> "bee-san/Ciphey" ["e"=1]
"alirezamika/autoscraper" -> "ScrapeGraphAI/Scrapegraph-ai" ["e"=1]
"alirezamika/autoscraper" -> "adbar/trafilatura"
"alirezamika/autoscraper" -> "codelucas/newspaper"
"alirezamika/autoscraper" -> "learning-at-home/hivemind" ["e"=1]
"alirezamika/autoscraper" -> "apify/crawlee" ["e"=1]
"alirezamika/autoscraper" -> "microsoft/playwright-python" ["e"=1]
"alirezamika/autoscraper" -> "neuml/txtai" ["e"=1]
"alirezamika/autoscraper" -> "jbesomi/texthero" ["e"=1]
"alirezamika/autoscraper" -> "mherrmann/helium" ["e"=1]
"alirezamika/autoscraper" -> "lux-org/lux" ["e"=1]
"Sangarshanan/jazzit" -> "sanand0/pyconindia2020"
"Sangarshanan/jazzit" -> "alfiopuglisi/guietta"
"alfiopuglisi/guietta" -> "jbesomi/texthero" ["e"=1]
"alfiopuglisi/guietta" -> "KartikChugh/Otto" ["e"=1]
"alfiopuglisi/guietta" -> "hauntsaninja/pyp" ["e"=1]
"alfiopuglisi/guietta" -> "kotartemiy/pygooglenews"
"alfiopuglisi/guietta" -> "fbdesignpro/sweetviz" ["e"=1]
"alfiopuglisi/guietta" -> "schenkd/nginx-ui"
"alfiopuglisi/guietta" -> "Overv/outrun" ["e"=1]
"alfiopuglisi/guietta" -> "Rolstenhouse/unofficial-apis"
"alfiopuglisi/guietta" -> "enthought/traitsui" ["e"=1]
"alfiopuglisi/guietta" -> "nackjicholson/aiosql" ["e"=1]
"alfiopuglisi/guietta" -> "adamerose/PandasGUI" ["e"=1]
"alfiopuglisi/guietta" -> "CCExtractor/vardbg" ["e"=1]
"alfiopuglisi/guietta" -> "pywebio/PyWebIO" ["e"=1]
"alfiopuglisi/guietta" -> "bchao1/bullet" ["e"=1]
"alfiopuglisi/guietta" -> "kotartemiy/newscatcher"
"ageitgey/node-unfluff" -> "luin/readability"
"ageitgey/node-unfluff" -> "jbrooksuk/node-summary" ["e"=1]
"ageitgey/node-unfluff" -> "kohlschutter/boilerpipe"
"ageitgey/node-unfluff" -> "microlinkhq/metascraper"
"ageitgey/node-unfluff" -> "dragnet-org/dragnet"
"ageitgey/node-unfluff" -> "grangier/python-goose"
"ageitgey/node-unfluff" -> "bndr/node-read"
"ageitgey/node-unfluff" -> "Tjatse/node-readability"
"ageitgey/node-unfluff" -> "postlight/parser"
"ageitgey/node-unfluff" -> "mauricesvay/ImageResolver"
"ageitgey/node-unfluff" -> "extractus/article-extractor"
"ageitgey/node-unfluff" -> "simplecrawler/simplecrawler" ["e"=1]
"ageitgey/node-unfluff" -> "danmactough/node-feedparser"
"ageitgey/node-unfluff" -> "GravityLabs/goose"
"ageitgey/node-unfluff" -> "mozilla/readability"
"lorey/mlscraper" -> "alirezamika/autoscraper"
"lorey/mlscraper" -> "aimuch/iAI" ["e"=1]
"lorey/mlscraper" -> "Boris-code/feapder" ["e"=1]
"lorey/mlscraper" -> "AtuboDad/playwright_stealth" ["e"=1]
"lorey/mlscraper" -> "adbar/trafilatura"
"lorey/mlscraper" -> "dragnet-org/dragnet"
"lorey/mlscraper" -> "learnbyexample/practice_python_projects" ["e"=1]
"lorey/mlscraper" -> "shibing624/python-tutorial" ["e"=1]
"lorey/mlscraper" -> "bee-san/pyWhat" ["e"=1]
"lorey/mlscraper" -> "jamesturk/scrapeghost" ["e"=1]
"lorey/mlscraper" -> "theahmadov/NIVOS" ["e"=1]
"lorey/mlscraper" -> "lixi5338619/magical_spider" ["e"=1]
"lorey/mlscraper" -> "greycodee/wechat-backup" ["e"=1]
"lorey/mlscraper" -> "xingxingzaixian/python-django-online-exam" ["e"=1]
"lorey/mlscraper" -> "gm365/Web3_Tutorial" ["e"=1]
"JessicaTegner/pypandoc" -> "sergiocorreia/panflute" ["e"=1]
"JessicaTegner/pypandoc" -> "jgm/pandocfilters" ["e"=1]
"JessicaTegner/pypandoc" -> "boisgera/pandoc"
"JessicaTegner/pypandoc" -> "miyuchina/mistletoe"
"JessicaTegner/pypandoc" -> "adityarathod/pyandoc"
"JessicaTegner/pypandoc" -> "tomduck/pandoc-fignos" ["e"=1]
"JessicaTegner/pypandoc" -> "executablebooks/markdown-it-py"
"JessicaTegner/pypandoc" -> "tomduck/pandoc-eqnos" ["e"=1]
"JessicaTegner/pypandoc" -> "ActiveState/appdirs" ["e"=1]
"JessicaTegner/pypandoc" -> "frostming/marko"
"JessicaTegner/pypandoc" -> "tox-dev/sphinx-autodoc-typehints" ["e"=1]
"JessicaTegner/pypandoc" -> "lepture/mistune"
"JessicaTegner/pypandoc" -> "pandoc-scholar/pandoc-scholar" ["e"=1]
"JessicaTegner/pypandoc" -> "executablebooks/MyST-Parser" ["e"=1]
"JessicaTegner/pypandoc" -> "timtylin/scholdoc" ["e"=1]
"danmactough/node-feedparser" -> "rbren/rss-parser"
"danmactough/node-feedparser" -> "dylang/node-rss"
"danmactough/node-feedparser" -> "scripting/feedRead"
"danmactough/node-feedparser" -> "alabeduarte/feedparser-promised"
"danmactough/node-feedparser" -> "luin/readability"
"danmactough/node-feedparser" -> "fent/feedme.js"
"danmactough/node-feedparser" -> "scripting/river5"
"danmactough/node-feedparser" -> "filipedeschamps/rss-feed-emitter" ["e"=1]
"danmactough/node-feedparser" -> "ageitgey/node-unfluff"
"danmactough/node-feedparser" -> "mashpie/i18n-node" ["e"=1]
"danmactough/node-feedparser" -> "jpmonette/feed"
"danmactough/node-feedparser" -> "bndr/node-read"
"danmactough/node-feedparser" -> "feedjira/feedjira" ["e"=1]
"danmactough/node-feedparser" -> "microlinkhq/metascraper"
"danmactough/node-feedparser" -> "kelektiv/node-cron" ["e"=1]
"prathyvsh/formal-systems-in-biology" -> "prathyvsh/notation"
"prathyvsh/formal-systems-in-biology" -> "prathyvsh/lambda-calculus-visualizations"
"ohyicong/Google-Image-Scraper" -> "JJLimmm/Website-Image-Scraper"
"ohyicong/Google-Image-Scraper" -> "ultralytics/flickr_scraper" ["e"=1]
"ohyicong/Google-Image-Scraper" -> "pevers/images-scraper"
"ohyicong/Google-Image-Scraper" -> "oxylabs/google-play-scraper"
"ohyicong/Google-Image-Scraper" -> "rundfunk47/Google-Image-Scraper"
"ohyicong/Google-Image-Scraper" -> "ostrolucky/Bulk-Bing-Image-downloader" ["e"=1]
"ohyicong/Google-Image-Scraper" -> "debadridtt/Scraping-Google-Images-using-Python"
"ohyicong/Google-Image-Scraper" -> "MahdiNavaei/Google-Scholar-Scraper"
"ohyicong/Google-Image-Scraper" -> "oxylabs/amazon-review-scraper"
"ohyicong/Google-Image-Scraper" -> "omkarcloud/amazon-scraper"
"richleland/pygments-css" -> "trentm/python-markdown2"
"richleland/pygments-css" -> "jwarby/jekyll-pygments-themes"
"richleland/pygments-css" -> "Andrew-liu/my_blog_tutorial" ["e"=1]
"richleland/pygments-css" -> "rouge-ruby/rouge" ["e"=1]
"richleland/pygments-css" -> "lepture/mistune"
"richleland/pygments-css" -> "penibelst/jekyll-compress-html" ["e"=1]
"richleland/pygments-css" -> "stacklens/django_blog_tutorial" ["e"=1]
"richleland/pygments-css" -> "toshimaru/jekyll-toc" ["e"=1]
"richleland/pygments-css" -> "idleberg/base16-pygments"
"richleland/pygments-css" -> "nickbalestra/kactus" ["e"=1]
"richleland/pygments-css" -> "pylixm/django-mdeditor" ["e"=1]
"richleland/pygments-css" -> "christian-fei/Simple-Jekyll-Search" ["e"=1]
"richleland/pygments-css" -> "georgemandis/jekyll-rss-feeds" ["e"=1]
"richleland/pygments-css" -> "gettalong/kramdown" ["e"=1]
"kohlschutter/boilerpipe" -> "misja/python-boilerpipe"
"kohlschutter/boilerpipe" -> "dragnet-org/dragnet"
"kohlschutter/boilerpipe" -> "GravityLabs/goose"
"kohlschutter/boilerpipe" -> "luin/readability"
"kohlschutter/boilerpipe" -> "rodricios/eatiht"
"kohlschutter/boilerpipe" -> "karussell/snacktory"
"kohlschutter/boilerpipe" -> "jiminoc/goose"
"kohlschutter/boilerpipe" -> "buriy/python-readability"
"kohlschutter/boilerpipe" -> "grangier/python-goose"
"kohlschutter/boilerpipe" -> "miso-belica/jusText"
"kohlschutter/boilerpipe" -> "datalib/libextract"
"kohlschutter/boilerpipe" -> "ageitgey/node-unfluff"
"kohlschutter/boilerpipe" -> "srijiths/readabilityBUNDLE"
"kohlschutter/boilerpipe" -> "pvdlg/boilerpipe"
"kohlschutter/boilerpipe" -> "timbertson/python-readability"
"bevacqua/local-storage" -> "bevacqua/insignia" ["e"=1]
"bevacqua/local-storage" -> "hamid/dollar-tomans-api"
"bevacqua/local-storage" -> "hamid/iranian-news-agencies-crawler"
"bevacqua/local-storage" -> "hamid/react-native-persian-date-picker"
"bevacqua/local-storage" -> "hamid/react-native-ios-settings-bundle"
"sdepold/jquery-rss" -> "sdepold/feedrapp"
"sdepold/jquery-rss" -> "enginkizil/FeedEk"
"sdepold/jquery-rss" -> "jfhovinne/jFeed"
"sdepold/jquery-rss" -> "sdepold/vanilla-rss"
"Rolstenhouse/unofficial-apis" -> "kevinzg/facebook-scraper" ["e"=1]
"Rolstenhouse/unofficial-apis" -> "lvarayut/javascript-style-guide" ["e"=1]
"Rolstenhouse/unofficial-apis" -> "kotartemiy/newscatcher"
"Rolstenhouse/unofficial-apis" -> "xz/new.css" ["e"=1]
"Rolstenhouse/unofficial-apis" -> "f-prime/Blunt" ["e"=1]
"Rolstenhouse/unofficial-apis" -> "veeral-patel/how-to-secure-anything" ["e"=1]
"Rolstenhouse/unofficial-apis" -> "adminho/public-apis"
"Rolstenhouse/unofficial-apis" -> "fpereiro/backendlore" ["e"=1]
"Rolstenhouse/unofficial-apis" -> "luruke/browser-2020" ["e"=1]
"Rolstenhouse/unofficial-apis" -> "alfiopuglisi/guietta"
"Rolstenhouse/unofficial-apis" -> "kotartemiy/pygooglenews"
"Rolstenhouse/unofficial-apis" -> "minimaxir/hacker-news-undocumented" ["e"=1]
"Rolstenhouse/unofficial-apis" -> "goabstract/Marketing-for-Engineers" ["e"=1]
"Rolstenhouse/unofficial-apis" -> "alias-rahil/handwritten.js" ["e"=1]
"Rolstenhouse/unofficial-apis" -> "knrt10/kubernetes-basicLearning"
"misja/python-boilerpipe" -> "kohlschutter/boilerpipe"
"misja/python-boilerpipe" -> "dragnet-org/dragnet"
"misja/python-boilerpipe" -> "slaveofcode/boilerpipe3"
"misja/python-boilerpipe" -> "miso-belica/jusText"
"misja/python-boilerpipe" -> "datalib/libextract"
"misja/python-boilerpipe" -> "buriy/python-readability"
"misja/python-boilerpipe" -> "grangier/python-goose"
"misja/python-boilerpipe" -> "rodricios/eatiht"
"misja/python-boilerpipe" -> "goose3/goose3"
"misja/python-boilerpipe" -> "dalab/web2text"
"misja/python-boilerpipe" -> "scrapinghub/article-extraction-benchmark"
"misja/python-boilerpipe" -> "chrislinan/cx-extractor-python" ["e"=1]
"pratikpv/google_news_scraper_and_sentiment_analyzer" -> "pratikpv/predicting_bitcoin_market"
"scripting/pagePark" -> "scripting/myWord"
"scripting/pagePark" -> "scripting/listicle"
"karussell/snacktory" -> "chimbori/crux"
"karussell/snacktory" -> "wuman/JReadability"
"karussell/snacktory" -> "srijiths/readabilityBUNDLE"
"karussell/snacktory" -> "GravityLabs/goose"
"karussell/snacktory" -> "basis-technology-corp/Java-readability"
"karussell/snacktory" -> "kohlschutter/boilerpipe"
"karussell/snacktory" -> "jiminoc/goose"
"scrapinghub/article-extraction-benchmark" -> "markusmobius/go-domdistiller" ["e"=1]
"scrapinghub/article-extraction-benchmark" -> "TeamHG-Memex/html-text" ["e"=1]
"scrapinghub/article-extraction-benchmark" -> "dalab/web2text"
"scrapinghub/article-extraction-benchmark" -> "adbar/htmldate"
"scrapinghub/article-extraction-benchmark" -> "currentslab/extractnet"
"scrapinghub/article-extraction-benchmark" -> "scrapinghub/product-extraction-benchmark"
"scrapinghub/article-extraction-benchmark" -> "adbar/trafilatura"
"starfishmod/jquery-oembed-all" -> "nfl/jquery-oembed-all"
"lewisdonovan/google-news-scraper" -> "oxylabs/how-to-bypass-amazon-captcha"
"lewisdonovan/google-news-scraper" -> "ranahaani/GNews"
"lewisdonovan/google-news-scraper" -> "easonlai/google_news_content_scrape_and_analyze_with_gpt"
"lewisdonovan/google-news-scraper" -> "Iceloof/GoogleNews"
"lewisdonovan/google-news-scraper" -> "pratikpv/google_news_scraper_and_sentiment_analyzer"
"lewisdonovan/google-news-scraper" -> "philipperemy/google-news-scraper"
"lewisdonovan/google-news-scraper" -> "oxylabs/how-to-scrape-google-trends"
"lewisdonovan/google-news-scraper" -> "oxylabs/how-to-scrape-google-flights"
"lewisdonovan/google-news-scraper" -> "oxylabs/how-to-scrape-google-finance"
"lewisdonovan/google-news-scraper" -> "fhamborg/news-please"
"lewisdonovan/google-news-scraper" -> "omkarcloud/amazon-scraper"
"lewisdonovan/google-news-scraper" -> "oxylabs/google-play-scraper"
"lewisdonovan/google-news-scraper" -> "oxylabs/how-to-scrape-google-jobs"
"lewisdonovan/google-news-scraper" -> "oxylabs/amazon-asin-scraper"
"rodricios/eatiht" -> "datalib/libextract"
"rodricios/eatiht" -> "dragnet-org/dragnet"
"rodricios/eatiht" -> "rodricios/crawl-to-the-future"
"rodricios/eatiht" -> "kohlschutter/boilerpipe"
"rodricios/eatiht" -> "misja/python-boilerpipe"
"rodricios/eatiht" -> "jiminoc/goose"
"microlinkhq/cards" -> "joe-bell/next-google-fonts" ["e"=1]
"nfl/jquery-oembed-all" -> "starfishmod/jquery-oembed-all"
"scrapehero-code/amazon-scraper" -> "tducret/amazon-scraper-python" ["e"=1]
"scrapehero-code/amazon-scraper" -> "drawrowfly/amazon-product-api" ["e"=1]
"scrapehero-code/amazon-scraper" -> "omkarcloud/amazon-scraper"
"scrapehero-code/amazon-scraper" -> "oxylabs/how-to-scrape-google-jobs"
"scrapehero-code/amazon-scraper" -> "scrapehero-code/amazon-review-scraper" ["e"=1]
"scrapehero-code/amazon-scraper" -> "MahdiNavaei/Google-Scholar-Scraper"
"scrapehero-code/amazon-scraper" -> "dynamohuang/amazon-scrapy" ["e"=1]
"scrapehero-code/amazon-scraper" -> "oxylabs/amazon-asin-scraper"
"scrapehero-code/amazon-scraper" -> "oxylabs/how-to-scrape-google-flights"
"scrapehero-code/amazon-scraper" -> "oxylabs/how-to-bypass-amazon-captcha"
"scrapehero-code/amazon-scraper" -> "oxylabs/google-play-scraper"
"scrapehero-code/amazon-scraper" -> "oxylabs/amazon-review-scraper"
"scrapehero-code/amazon-scraper" -> "ian-kerins/amazon-python-scrapy-scraper" ["e"=1]
"scrapehero-code/amazon-scraper" -> "ShantanuJalkote/amazon-data-scraper"
"scrapehero-code/amazon-scraper" -> "oxylabs/how-to-scrape-amazon-prices"
"fent/feedme.js" -> "fent/node-feedsub"
"svpino/rfeed" -> "lkiesow/python-feedgen"
"sanand0/pyconindia2020" -> "pythonindia/inpycon2020"
"pratikpv/predicting_bitcoin_market" -> "pratikpv/google_news_scraper_and_sentiment_analyzer"
"pratikpv/predicting_bitcoin_market" -> "pratikpv/reddit_scraper_and_sentiment_analyzer"
"fent/node-feedsub" -> "fent/feedme.js"
"pythonindia/inpycon2020" -> "sanand0/pyconindia2020"
"itteco/iframely" -> "iamcal/oembed"
"itteco/iframely" -> "leedo/noembed"
"itteco/iframely" -> "microlinkhq/metascraper"
"itteco/iframely" -> "microlinkhq/sdk"
"itteco/iframely" -> "php-embed/Embed" ["e"=1]
"itteco/iframely" -> "shobhitsharma/embedo"
"itteco/iframely" -> "nfl/jquery-oembed-all"
"itteco/iframely" -> "ritz078/embed-js" ["e"=1]
"itteco/iframely" -> "linkesch/medium-editor-insert-plugin" ["e"=1]
"itteco/iframely" -> "essence/essence" ["e"=1]
"itteco/iframely" -> "nodeca/probe-image-size" ["e"=1]
"itteco/iframely" -> "itteco/embedjs"
"itteco/iframely" -> "nodeca/embedza"
"itteco/iframely" -> "discourse/onebox" ["e"=1]
"oxylabs/Python-Web-Scraping-Tutorial" -> "oxylabs/aliexpress-scraper"
"oxylabs/Python-Web-Scraping-Tutorial" -> "oxylabs/youtube-scraper"
"oxylabs/Python-Web-Scraping-Tutorial" -> "oxylabs/web-unblocker"
"oxylabs/Python-Web-Scraping-Tutorial" -> "oxylabs/quick-start-guide"
"oxylabs/Python-Web-Scraping-Tutorial" -> "oxylabs/google-shopping-scraper"
"grangier/python-goose" -> "rmax/scrapy-redis" ["e"=1]
"grangier/python-goose" -> "buriy/python-readability"
"grangier/python-goose" -> "codelucas/newspaper"
"grangier/python-goose" -> "rq/rq" ["e"=1]
"grangier/python-goose" -> "goose3/goose3"
"grangier/python-goose" -> "dragnet-org/dragnet"
"grangier/python-goose" -> "GravityLabs/goose"
"grangier/python-goose" -> "misja/python-boilerpipe"
"grangier/python-goose" -> "gnemoug/distribute_crawler" ["e"=1]
"grangier/python-goose" -> "scrapinghub/portia" ["e"=1]
"grangier/python-goose" -> "miso-belica/sumy" ["e"=1]
"grangier/python-goose" -> "kohlschutter/boilerpipe"
"grangier/python-goose" -> "binux/pyspider" ["e"=1]
"grangier/python-goose" -> "xiaoxu193/PyTeaser" ["e"=1]
"grangier/python-goose" -> "rodricios/eatiht"
"mozilla/readability" -> "luin/readability"
"mozilla/readability" -> "postlight/parser"
"mozilla/readability" -> "buriy/python-readability"
"mozilla/readability" -> "mixmark-io/turndown" ["e"=1]
"mozilla/readability" -> "extractus/article-extractor"
"mozilla/readability" -> "codelucas/newspaper"
"mozilla/readability" -> "adbar/trafilatura"
"mozilla/readability" -> "PlasmoHQ/plasmo" ["e"=1]
"mozilla/readability" -> "automerge/automerge-classic" ["e"=1]
"mozilla/readability" -> "go-shiori/go-readability" ["e"=1]
"mozilla/readability" -> "cure53/DOMPurify" ["e"=1]
"mozilla/readability" -> "yjs/yjs" ["e"=1]
"mozilla/readability" -> "apify/crawlee" ["e"=1]
"mozilla/readability" -> "Y2Z/monolith" ["e"=1]
"mozilla/readability" -> "nextapps-de/flexsearch" ["e"=1]
"luin/readability" -> "mozilla/readability"
"luin/readability" -> "buriy/python-readability"
"luin/readability" -> "ageitgey/node-unfluff"
"luin/readability" -> "arrix/node-readability"
"luin/readability" -> "kohlschutter/boilerpipe"
"luin/readability" -> "postlight/parser"
"luin/readability" -> "Tjatse/node-readability"
"luin/readability" -> "timbertson/python-readability"
"luin/readability" -> "bndr/node-read"
"luin/readability" -> "karussell/snacktory"
"luin/readability" -> "cantino/ruby-readability" ["e"=1]
"luin/readability" -> "kingwkb/readability"
"luin/readability" -> "mingcheng/php-readability" ["e"=1]
"luin/readability" -> "adadgio/safari-reader-js"
"luin/readability" -> "danmactough/node-feedparser"
"datalib/libextract" -> "rodricios/eatiht"
"datalib/libextract" -> "misja/python-boilerpipe"
"datalib/libextract" -> "dragnet-org/dragnet"
"datalib/libextract" -> "rodricios/autocomplete"
"ranahaani/GNews" -> "Iceloof/GoogleNews"
"ranahaani/GNews" -> "AndyTheFactory/newspaper4k"
"ranahaani/GNews" -> "lewisdonovan/google-news-scraper"
"ranahaani/GNews" -> "kotartemiy/pygooglenews"
"ranahaani/GNews" -> "fhamborg/news-please"
"ranahaani/GNews" -> "easonlai/google_news_content_scrape_and_analyze_with_gpt"
"ranahaani/GNews" -> "santhoshse7en/news-fetch"
"ranahaani/GNews" -> "SSujitX/google-news-url-decoder"
"leafac/caxa" -> "yao-pkg/pkg"
"rodricios/autocomplete" -> "seperman/fast-autocomplete"
"rodricios/autocomplete" -> "rodricios/eatiht"
"rodricios/autocomplete" -> "datalib/libextract"
"rodricios/autocomplete" -> "rodricios/crawl-to-the-future"
"scripting/myWord" -> "scripting/myWordEditor"
"scripting/myWordEditor" -> "scripting/myWord"
"scripting/myWordEditor" -> "scripting/nodeStorage"
"scripting/myWordEditor" -> "scripting/pagePark"
"johnbumgarner/newspaper3_usage_overview" -> "johnbumgarner/newshound"
"hamid/react-native-persian-date-picker" -> "hamid/iranian-news-agencies-crawler"
"hamid/react-native-persian-date-picker" -> "hamid/dollar-tomans-api"
"hamid/react-native-persian-date-picker" -> "hamid/mashya-instagram-api"
"hamid/react-native-persian-date-picker" -> "hamid/react-native-ios-settings-bundle"
"hamid/react-native-persian-date-picker" -> "hamid/react-native-reanimated-bottom-sheet"
"kingwkb/readability" -> "timbertson/python-readability"
"kingwkb/readability" -> "bookieio/breadability"
"matthewwithanm/python-markdownify" -> "Alir3z4/html2text"
"matthewwithanm/python-markdownify" -> "aaronsw/html2text"
"matthewwithanm/python-markdownify" -> "executablebooks/markdown-it-py"
"matthewwithanm/python-markdownify" -> "adbar/trafilatura"
"matthewwithanm/python-markdownify" -> "Python-Markdown/markdown"
"matthewwithanm/python-markdownify" -> "pymupdf/PyMuPDF" ["e"=1]
"matthewwithanm/python-markdownify" -> "opendatalab/magic-html" ["e"=1]
"matthewwithanm/python-markdownify" -> "miyuchina/mistletoe"
"matthewwithanm/python-markdownify" -> "mwilliamson/python-mammoth" ["e"=1]
"matthewwithanm/python-markdownify" -> "JessicaTegner/pypandoc"
"matthewwithanm/python-markdownify" -> "JohannesKaufmann/html-to-markdown" ["e"=1]
"matthewwithanm/python-markdownify" -> "lepture/mistune"
"matthewwithanm/python-markdownify" -> "mixmark-io/turndown" ["e"=1]
"matthewwithanm/python-markdownify" -> "supermemoryai/markdowner" ["e"=1]
"matthewwithanm/python-markdownify" -> "frostming/marko"
"njvack/markdown-to-json" -> "scottstanfield/markdown-to-json"
"njvack/markdown-to-json" -> "executablebooks/markdown-it-py"
"oxylabs/quick-start-guide" -> "oxylabs/aliexpress-scraper"
"oxylabs/quick-start-guide" -> "oxylabs/youtube-scraper"
"oxylabs/quick-start-guide" -> "oxylabs/Python-Web-Scraping-Tutorial"
"oxylabs/quick-start-guide" -> "oxylabs/web-unblocker"
"oxylabs/quick-start-guide" -> "oxylabs/amazon-scraper"
"oxylabs/quick-start-guide" -> "oxylabs/tripadvisor-scraper"
"oxylabs/quick-start-guide" -> "oxylabs/google-news-scraper"
"rbren/rss-parser" -> "danmactough/node-feedparser"
"rbren/rss-parser" -> "nasa8x/rss-to-json"
"rbren/rss-parser" -> "sdepold/jquery-rss"
"rbren/rss-parser" -> "extractus/feed-extractor"
"rbren/rss-parser" -> "zenn-dev/zenn-editor" ["e"=1]
"rbren/rss-parser" -> "dylang/node-rss"
"rbren/rss-parser" -> "postlight/parser"
"rbren/rss-parser" -> "hongkiat/js-rss-reader"
"rbren/rss-parser" -> "jpmonette/feed"
"rbren/rss-parser" -> "extractus/article-extractor"
"rbren/rss-parser" -> "apostrophecms/sanitize-html" ["e"=1]
"rbren/rss-parser" -> "hello-efficiency-inc/raven-reader" ["e"=1]
"rbren/rss-parser" -> "mrsteele/dotenv-webpack" ["e"=1]
"dragnet-org/dragnet" -> "misja/python-boilerpipe"
"dragnet-org/dragnet" -> "rodricios/eatiht"
"dragnet-org/dragnet" -> "buriy/python-readability"
"dragnet-org/dragnet" -> "ziyan/spider"
"dragnet-org/dragnet" -> "miso-belica/jusText"
"dragnet-org/dragnet" -> "datalib/libextract"
"dragnet-org/dragnet" -> "dalab/web2text"
"dragnet-org/dragnet" -> "kohlschutter/boilerpipe"
"dragnet-org/dragnet" -> "grangier/python-goose"
"dragnet-org/dragnet" -> "currentslab/extractnet"
"dragnet-org/dragnet" -> "seomoz/dragnet_data"
"dragnet-org/dragnet" -> "scrapinghub/article-extraction-benchmark"
"dragnet-org/dragnet" -> "scrapinghub/extruct" ["e"=1]
"dragnet-org/dragnet" -> "scrapy/scrapely" ["e"=1]
"dragnet-org/dragnet" -> "codelucas/newspaper"
"extractus/article-extractor" -> "extractus/feed-extractor"
"extractus/article-extractor" -> "mozilla/readability"
"extractus/article-extractor" -> "microlinkhq/metascraper"
"extractus/article-extractor" -> "postlight/parser"
"extractus/article-extractor" -> "extractus/oembed-extractor"
"extractus/article-extractor" -> "ageitgey/node-unfluff"
"extractus/article-extractor" -> "luin/readability"
"extractus/article-extractor" -> "adbar/trafilatura"
"extractus/article-extractor" -> "romansky/dom-to-semantic-markdown"
"extractus/article-extractor" -> "eta-dev/eta" ["e"=1]
"extractus/article-extractor" -> "ranyitz/qnm" ["e"=1]
"extractus/article-extractor" -> "addyosmani/bg-remove" ["e"=1]
"extractus/article-extractor" -> "leafac/caxa"
"extractus/article-extractor" -> "rbren/rss-parser"
"extractus/article-extractor" -> "Sh4yy/cloudflare-email" ["e"=1]
"extractus/feed-extractor" -> "extractus/oembed-extractor"
"weblyzard/inscriptis" -> "miso-belica/jusText"
"weblyzard/inscriptis" -> "adbar/courlan"
"hamid/iranian-news-agencies-crawler" -> "hamid/dollar-tomans-api"
"hamid/mashya-instagram-api" -> "hamid/iranian-news-agencies-crawler"
"hamid/mashya-instagram-api" -> "hamid/react-native-persian-date-picker"
"hamid/mashya-instagram-api" -> "hamid/dollar-tomans-api"
"hamid/mashya-instagram-api" -> "hamid/react-native-ios-settings-bundle"
"oxylabs/amazon-scraper" -> "oxylabs/google-news-scraper"
"oxylabs/amazon-scraper" -> "oxylabs/google-maps-scraper"
"oxylabs/amazon-scraper" -> "oxylabs/how-to-scrape-google-flights"
"oxylabs/amazon-scraper" -> "oxylabs/how-to-scrape-amazon-prices"
"oxylabs/amazon-scraper" -> "oxylabs/google-shopping-scraper"
"oxylabs/amazon-scraper" -> "oxylabs/how-to-bypass-amazon-captcha"
"oxylabs/amazon-scraper" -> "oxylabs/quick-start-guide"
"oxylabs/amazon-scraper" -> "oxylabs/how-to-scrape-google-scholar"
"oxylabs/amazon-scraper" -> "oxylabs/how-to-scrape-google-images"
"oxylabs/amazon-scraper" -> "oxylabs/amazon-review-scraper"
"oxylabs/amazon-scraper" -> "oxylabs/google-play-scraper"
"oxylabs/amazon-scraper" -> "oxylabs/amazon-asin-scraper"
"oxylabs/amazon-scraper" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/amazon-scraper" -> "oxylabs/free-proxy-list"
"oxylabs/amazon-scraper" -> "oxylabs/web-unblocker"
"microlinkhq/metascraper" -> "microlinkhq/browserless" ["e"=1]
"microlinkhq/metascraper" -> "microlinkhq/sdk"
"microlinkhq/metascraper" -> "jacktuck/unfurl"
"microlinkhq/metascraper" -> "jshemas/openGraphScraper"
"microlinkhq/metascraper" -> "microlinkhq/unavatar"
"microlinkhq/metascraper" -> "extractus/article-extractor"
"microlinkhq/metascraper" -> "vercel/og-image" ["e"=1]
"microlinkhq/metascraper" -> "mozilla/page-metadata-parser"
"microlinkhq/metascraper" -> "microlinkhq/cards"
"microlinkhq/metascraper" -> "itteco/iframely"
"microlinkhq/metascraper" -> "ageitgey/node-unfluff"
"microlinkhq/metascraper" -> "withspectrum/micro-open-graph"
"microlinkhq/metascraper" -> "postlight/parser"
"microlinkhq/metascraper" -> "danmactough/node-feedparser"
"microlinkhq/metascraper" -> "mozilla/readability"
"nodejs/single-executable" -> "nodejs/postject"
"scripting/river5" -> "scripting/1999-project"
"scripting/river5" -> "scripting/pagePark"
"scripting/river5" -> "scripting/river4"
"scripting/river5" -> "scripting/myWord"
"scripting/river5" -> "scripting/myWordEditor"
"scripting/river5" -> "scripting/tweetsToRss" ["e"=1]
"oxylabs/google-shopping-scraper" -> "oxylabs/how-to-scrape-amazon-prices"
"oxylabs/google-shopping-scraper" -> "oxylabs/how-to-scrape-google-flights"
"oxylabs/google-shopping-scraper" -> "oxylabs/amazon-review-scraper"
"oxylabs/google-shopping-scraper" -> "oxylabs/google-play-scraper"
"oxylabs/google-shopping-scraper" -> "oxylabs/how-to-bypass-amazon-captcha"
"oxylabs/google-shopping-scraper" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/google-shopping-scraper" -> "oxylabs/amazon-asin-scraper"
"oxylabs/google-shopping-scraper" -> "oxylabs/how-to-scrape-google-scholar"
"oxylabs/google-shopping-scraper" -> "oxylabs/google-news-scraper"
"oxylabs/google-shopping-scraper" -> "oxylabs/amazon-scraper"
"oxylabs/etsy-scraper" -> "oxylabs/netflix-scraper"
"oxylabs/etsy-scraper" -> "oxylabs/tripadvisor-scraper"
"oxylabs/etsy-scraper" -> "oxylabs/craigslist-scraper"
"nodejs/postject" -> "nodejs/single-executable"
"oxylabs/ebay-scraper" -> "oxylabs/best-buy-scraper"
"rundfunk47/Google-Image-Scraper" -> "Gman0909/RedHole"
"oxylabs/best-buy-scraper" -> "oxylabs/tripadvisor-scraper"
"oxylabs/best-buy-scraper" -> "oxylabs/ebay-scraper"
"oxylabs/best-buy-scraper" -> "oxylabs/youtube-scraper"
"Python-Markdown/markdown" -> "trentm/python-markdown2"
"Python-Markdown/markdown" -> "lepture/mistune"
"Python-Markdown/markdown" -> "facelessuser/pymdown-extensions" ["e"=1]
"Python-Markdown/markdown" -> "pallets/jinja" ["e"=1]
"Python-Markdown/markdown" -> "yaml/pyyaml" ["e"=1]
"Python-Markdown/markdown" -> "executablebooks/markdown-it-py"
"Python-Markdown/markdown" -> "getpelican/pelican" ["e"=1]
"Python-Markdown/markdown" -> "neutronX/django-markdownx" ["e"=1]
"Python-Markdown/markdown" -> "mozilla/bleach" ["e"=1]
"Python-Markdown/markdown" -> "pallets/werkzeug" ["e"=1]
"Python-Markdown/markdown" -> "pygments/pygments" ["e"=1]
"Python-Markdown/markdown" -> "theskumar/python-dotenv" ["e"=1]
"Python-Markdown/markdown" -> "mkdocs/mkdocs" ["e"=1]
"Python-Markdown/markdown" -> "python-pillow/Pillow" ["e"=1]
"Python-Markdown/markdown" -> "django-commons/django-debug-toolbar" ["e"=1]
"wuman/JReadability" -> "karussell/snacktory"
"postlight/parser" -> "mozilla/readability"
"postlight/parser" -> "postlight/parser-api" ["e"=1]
"postlight/parser" -> "luin/readability"
"postlight/parser" -> "extractus/article-extractor"
"postlight/parser" -> "nextapps-de/flexsearch" ["e"=1]
"postlight/parser" -> "buriy/python-readability"
"postlight/parser" -> "microlinkhq/metascraper"
"postlight/parser" -> "codelucas/newspaper"
"postlight/parser" -> "mixmark-io/turndown" ["e"=1]
"postlight/parser" -> "feedbin/feedbin" ["e"=1]
"postlight/parser" -> "RSS-Bridge/rss-bridge" ["e"=1]
"postlight/parser" -> "ageitgey/node-unfluff"
"postlight/parser" -> "instantpage/instant.page" ["e"=1]
"postlight/parser" -> "Ranchero-Software/NetNewsWire" ["e"=1]
"postlight/parser" -> "wallabag/wallabag" ["e"=1]
"oxylabs/google-play-scraper" -> "oxylabs/amazon-asin-scraper"
"oxylabs/google-play-scraper" -> "oxylabs/how-to-scrape-google-jobs"
"yao-pkg/pkg" -> "yao-pkg/pkg-fetch"
"yao-pkg/pkg" -> "vercel/pkg-fetch"
"yao-pkg/pkg" -> "nodejs/single-executable"
"yao-pkg/pkg" -> "AngaBlue/exe"
"yao-pkg/pkg" -> "leafac/caxa"
"yao-pkg/pkg" -> "chjj/bpkg"
"yao-pkg/pkg" -> "yao-pkg/pkg-binaries"
"oxylabs/google-maps-scraper" -> "oxylabs/google-news-scraper"
"oxylabs/google-maps-scraper" -> "oxylabs/how-to-scrape-google-flights"
"oxylabs/google-maps-scraper" -> "oxylabs/amazon-scraper"
"oxylabs/google-maps-scraper" -> "oxylabs/how-to-scrape-amazon-prices"
"oxylabs/google-maps-scraper" -> "oxylabs/how-to-scrape-google-images"
"oxylabs/google-maps-scraper" -> "oxylabs/google-shopping-scraper"
"oxylabs/google-maps-scraper" -> "oxylabs/how-to-scrape-google-scholar"
"oxylabs/google-maps-scraper" -> "oxylabs/how-to-bypass-amazon-captcha"
"oxylabs/google-maps-scraper" -> "Decodo/Decodo"
"oxylabs/google-maps-scraper" -> "oxylabs/amazon-review-scraper"
"oxylabs/google-maps-scraper" -> "oxylabs/google-play-scraper"
"oxylabs/google-maps-scraper" -> "oxylabs/amazon-asin-scraper"
"oxylabs/google-maps-scraper" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/google-maps-scraper" -> "oxylabs/free-proxy-list"
"oxylabs/amazon-review-scraper" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/amazon-review-scraper" -> "oxylabs/amazon-asin-scraper"
"oxylabs/amazon-review-scraper" -> "oxylabs/google-play-scraper"
"oxylabs/amazon-review-scraper" -> "oxylabs/how-to-scrape-google-trends"
"oxylabs/amazon-review-scraper" -> "oxylabs/how-to-scrape-google-finance"
"oxylabs/amazon-review-scraper" -> "oxylabs/how-to-scrape-google-scholar"
"oxylabs/amazon-review-scraper" -> "oxylabs/web-scraping-google-sheets"
"oxylabs/amazon-review-scraper" -> "oxylabs/how-to-scrape-google-images"
"oxylabs/tripadvisor-scraper" -> "oxylabs/netflix-scraper"
"oxylabs/tripadvisor-scraper" -> "oxylabs/etsy-scraper"
"oxylabs/tripadvisor-scraper" -> "oxylabs/youtube-scraper"
"oxylabs/tripadvisor-scraper" -> "oxylabs/craigslist-scraper"
"oxylabs/tripadvisor-scraper" -> "oxylabs/best-buy-scraper"
"oxylabs/tripadvisor-scraper" -> "oxylabs/aliexpress-scraper"
"mozilla/page-metadata-parser" -> "mozilla/page-metadata-service"
"timbertson/python-readability" -> "kingwkb/readability"
"timbertson/python-readability" -> "buriy/python-readability"
"timbertson/python-readability" -> "MHordecki/readability-redux"
"timbertson/python-readability" -> "bookieio/breadability"
"timbertson/python-readability" -> "srid/readability"
"timbertson/python-readability" -> "dcramer/decruft"
"timbertson/python-readability" -> "ReadabilityHoldings/python-readability-api"
"timbertson/python-readability" -> "hatena/extract-content-javascript"
"oxylabs/web-unblocker" -> "oxylabs/aliexpress-scraper"
"oxylabs/web-unblocker" -> "oxylabs/youtube-scraper"
"oxylabs/web-unblocker" -> "oxylabs/Python-Web-Scraping-Tutorial"
"oxylabs/web-unblocker" -> "oxylabs/quick-start-guide"
"oxylabs/web-unblocker" -> "oxylabs/google-shopping-scraper"
"oxylabs/web-unblocker" -> "oxylabs/how-to-scrape-google-scholar"
"vercel/pkg-fetch" -> "yao-pkg/pkg-fetch"
"vercel/pkg-fetch" -> "yao-pkg/pkg"
"vercel/pkg-fetch" -> "yao-pkg/pkg-binaries"
"oxylabs/aliexpress-scraper" -> "oxylabs/youtube-scraper"
"oxylabs/aliexpress-scraper" -> "oxylabs/Python-Web-Scraping-Tutorial"
"oxylabs/aliexpress-scraper" -> "oxylabs/web-unblocker"
"oxylabs/aliexpress-scraper" -> "oxylabs/quick-start-guide"
"oxylabs/netflix-scraper" -> "oxylabs/etsy-scraper"
"oxylabs/netflix-scraper" -> "oxylabs/craigslist-scraper"
"oxylabs/netflix-scraper" -> "oxylabs/tripadvisor-scraper"
"oxylabs/amazon-asin-scraper" -> "oxylabs/google-play-scraper"
"oxylabs/amazon-asin-scraper" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/amazon-asin-scraper" -> "oxylabs/amazon-review-scraper"
"oxylabs/craigslist-scraper" -> "oxylabs/netflix-scraper"
"oxylabs/craigslist-scraper" -> "oxylabs/etsy-scraper"
"MahdiNavaei/Google-Scholar-Scraper" -> "omkarcloud/amazon-scraper"
"fhamborg/news-please" -> "fhamborg/Giveme5W1H" ["e"=1]
"fhamborg/news-please" -> "codelucas/newspaper"
"fhamborg/news-please" -> "adbar/trafilatura"
"fhamborg/news-please" -> "fhamborg/NewsMTSC"
"fhamborg/news-please" -> "buriy/python-readability"
"fhamborg/news-please" -> "commoncrawl/news-crawl" ["e"=1]
"fhamborg/news-please" -> "kotartemiy/pygooglenews"
"fhamborg/news-please" -> "AndyTheFactory/newspaper4k"
"fhamborg/news-please" -> "lewisdonovan/google-news-scraper"
"fhamborg/news-please" -> "dragnet-org/dragnet"
"fhamborg/news-please" -> "goose3/goose3"
"fhamborg/news-please" -> "kotartemiy/newscatcher"
"fhamborg/news-please" -> "ranahaani/GNews"
"fhamborg/news-please" -> "santhoshse7en/news-fetch"
"fhamborg/news-please" -> "miso-belica/jusText"
"oxylabs/how-to-scrape-google-scholar" -> "oxylabs/amazon-review-scraper"
"oxylabs/how-to-scrape-google-scholar" -> "oxylabs/how-to-scrape-google-images"
"oxylabs/how-to-scrape-google-scholar" -> "oxylabs/amazon-asin-scraper"
"oxylabs/how-to-scrape-google-scholar" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/how-to-scrape-google-scholar" -> "oxylabs/google-play-scraper"
"oxylabs/how-to-scrape-google-scholar" -> "oxylabs/how-to-scrape-google-flights"
"oxylabs/how-to-scrape-google-scholar" -> "oxylabs/how-to-scrape-google-trends"
"oxylabs/how-to-scrape-google-scholar" -> "oxylabs/how-to-scrape-google-finance"
"oxylabs/google-news-scraper" -> "oxylabs/google-maps-scraper"
"oxylabs/google-news-scraper" -> "oxylabs/how-to-scrape-google-flights"
"oxylabs/google-news-scraper" -> "oxylabs/amazon-scraper"
"oxylabs/google-news-scraper" -> "oxylabs/how-to-scrape-amazon-prices"
"oxylabs/google-news-scraper" -> "oxylabs/how-to-scrape-google-images"
"oxylabs/google-news-scraper" -> "oxylabs/google-shopping-scraper"
"oxylabs/google-news-scraper" -> "Decodo/Decodo"
"oxylabs/google-news-scraper" -> "oxylabs/how-to-bypass-amazon-captcha"
"oxylabs/google-news-scraper" -> "oxylabs/how-to-scrape-google-scholar"
"oxylabs/google-news-scraper" -> "oxylabs/amazon-review-scraper"
"oxylabs/google-news-scraper" -> "oxylabs/amazon-asin-scraper"
"oxylabs/google-news-scraper" -> "oxylabs/google-play-scraper"
"oxylabs/google-news-scraper" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/google-news-scraper" -> "oxylabs/quick-start-guide"
"oxylabs/google-news-scraper" -> "oxylabs/free-proxy-list"
"AndyTheFactory/newspaper4k" -> "johnbumgarner/newspaper3_usage_overview"
"AndyTheFactory/newspaper4k" -> "ranahaani/GNews"
"AndyTheFactory/newspaper4k" -> "fhamborg/news-please"
"AndyTheFactory/newspaper4k" -> "adbar/trafilatura"
"AndyTheFactory/newspaper4k" -> "goose3/goose3"
"AndyTheFactory/newspaper4k" -> "codelucas/newspaper"
"AndyTheFactory/newspaper4k" -> "Iceloof/GoogleNews"
"AndyTheFactory/newspaper4k" -> "scrapinghub/article-extraction-benchmark"
"goose3/goose3" -> "grangier/python-goose"
"goose3/goose3" -> "miso-belica/jusText"
"goose3/goose3" -> "buriy/python-readability"
"goose3/goose3" -> "misja/python-boilerpipe"
"goose3/goose3" -> "scrapinghub/article-extraction-benchmark"
"goose3/goose3" -> "adbar/trafilatura"
"goose3/goose3" -> "fhamborg/news-please"
"goose3/goose3" -> "dragnet-org/dragnet"
"goose3/goose3" -> "chrislinan/cx-extractor-python" ["e"=1]
"goose3/goose3" -> "weblyzard/inscriptis"
"goose3/goose3" -> "AndyTheFactory/newspaper4k"
"goose3/goose3" -> "codelucas/newspaper"
"goose3/goose3" -> "michaelhelmick/lassie" ["e"=1]
"goose3/goose3" -> "GeneralNewsExtractor/GeneralNewsExtractor" ["e"=1]
"goose3/goose3" -> "adbar/htmldate"
"oxylabs/how-to-scrape-google-jobs" -> "oxylabs/amazon-asin-scraper"
"oxylabs/how-to-scrape-google-jobs" -> "oxylabs/google-play-scraper"
"oxylabs/how-to-scrape-google-jobs" -> "oxylabs/amazon-review-scraper"
"oxylabs/how-to-scrape-google-jobs" -> "oxylabs/how-to-scrape-google-trends"
"oxylabs/how-to-scrape-google-jobs" -> "oxylabs/how-to-scrape-google-finance"
"oxylabs/youtube-scraper" -> "oxylabs/aliexpress-scraper"
"oxylabs/youtube-scraper" -> "oxylabs/Python-Web-Scraping-Tutorial"
"oxylabs/youtube-scraper" -> "oxylabs/web-unblocker"
"oxylabs/youtube-scraper" -> "oxylabs/quick-start-guide"
"oxylabs/how-to-scrape-amazon-prices" -> "oxylabs/how-to-scrape-google-flights"
"oxylabs/how-to-scrape-amazon-prices" -> "oxylabs/how-to-bypass-amazon-captcha"
"oxylabs/how-to-scrape-amazon-prices" -> "oxylabs/google-shopping-scraper"
"oxylabs/how-to-scrape-amazon-prices" -> "oxylabs/amazon-asin-scraper"
"oxylabs/how-to-scrape-amazon-prices" -> "oxylabs/google-play-scraper"
"oxylabs/how-to-scrape-amazon-prices" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/how-to-scrape-amazon-prices" -> "oxylabs/amazon-review-scraper"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/how-to-scrape-amazon-prices"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/how-to-bypass-amazon-captcha"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/google-shopping-scraper"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/google-news-scraper"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/amazon-asin-scraper"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/google-play-scraper"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/amazon-review-scraper"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/how-to-scrape-google-scholar"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/google-maps-scraper"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/how-to-scrape-google-images"
"oxylabs/how-to-scrape-google-flights" -> "oxylabs/amazon-scraper"
"enginkizil/FeedEk" -> "sdepold/jquery-rss"
"enginkizil/FeedEk" -> "jfhovinne/jFeed"
"omkarcloud/amazon-scraper" -> "MahdiNavaei/Google-Scholar-Scraper"
"xieguanglei/react-pace-progress" -> "hamid/dollar-tomans-api"
"xieguanglei/react-pace-progress" -> "hamid/react-native-reanimated-bottom-sheet"
"xieguanglei/react-pace-progress" -> "hamid/iranian-news-agencies-crawler"
"xieguanglei/react-pace-progress" -> "hamid/react-native-persian-date-picker"
"Netbreeze-GmbH/boilerpipe" -> "pvdlg/boilerpipe"
"withspectrum/micro-open-graph" -> "winhtaikaung/react-tiny-link"
"oxylabs/how-to-scrape-google-images" -> "oxylabs/how-to-scrape-google-scholar"
"oxylabs/how-to-scrape-google-images" -> "oxylabs/amazon-review-scraper"
"oxylabs/how-to-scrape-google-images" -> "oxylabs/amazon-asin-scraper"
"oxylabs/how-to-scrape-google-images" -> "oxylabs/google-play-scraper"
"oxylabs/how-to-scrape-google-images" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/how-to-scrape-google-images" -> "oxylabs/how-to-scrape-google-trends"
"oxylabs/how-to-scrape-google-images" -> "oxylabs/how-to-scrape-google-flights"
"oxylabs/how-to-scrape-google-images" -> "oxylabs/how-to-scrape-google-finance"
"oxylabs/how-to-scrape-google-images" -> "oxylabs/web-scraping-google-sheets"
"jpmonette/feed" -> "dylang/node-rss"
"jpmonette/feed" -> "danmactough/node-feedparser"
"romansky/dom-to-semantic-markdown" -> "arunsupe/semantic-grep" ["e"=1]
"romansky/dom-to-semantic-markdown" -> "dleemiller/WordLlama" ["e"=1]
"romansky/dom-to-semantic-markdown" -> "oto-labs/librarian"
"miso-belica/jusText" -> "misja/python-boilerpipe"
"miso-belica/jusText" -> "weblyzard/inscriptis"
"miso-belica/jusText" -> "dragnet-org/dragnet"
"miso-belica/jusText" -> "adbar/trafilatura"
"miso-belica/jusText" -> "goose3/goose3"
"miso-belica/jusText" -> "jmriebold/BoilerPy3"
"miso-belica/jusText" -> "dalab/web2text"
"miso-belica/jusText" -> "adbar/courlan"
"miso-belica/jusText" -> "dkpro/dkpro-c4corpus" ["e"=1]
"miso-belica/jusText" -> "scrapinghub/article-extraction-benchmark"
"miso-belica/jusText" -> "kohlschutter/boilerpipe"
"miso-belica/jusText" -> "keirp/OpenWebMath"
"miso-belica/jusText" -> "buriy/python-readability"
"miso-belica/jusText" -> "facebookresearch/cc_net" ["e"=1]
"miso-belica/jusText" -> "rodricios/eatiht"
"SigmaQuan/Better-Python-59-Ways" -> "bslatkin/effectivepython" ["e"=1]
"SigmaQuan/Better-Python-59-Ways" -> "dabeaz-course/practical-python" ["e"=1]
"SigmaQuan/Better-Python-59-Ways" -> "blobcity/python-for-data-science"
"SigmaQuan/Better-Python-59-Ways" -> "kotartemiy/newscatcher"
"SigmaQuan/Better-Python-59-Ways" -> "alfiopuglisi/guietta"
"SigmaQuan/Better-Python-59-Ways" -> "photonlines/Intuitive-Guide-to-Maxwells-Equations" ["e"=1]
"SigmaQuan/Better-Python-59-Ways" -> "socialpoint-labs/sheetfu" ["e"=1]
"SigmaQuan/Better-Python-59-Ways" -> "arogozhnikov/python3_with_pleasure" ["e"=1]
"SigmaQuan/Better-Python-59-Ways" -> "EONRaider/violent-python3" ["e"=1]
"SigmaQuan/Better-Python-59-Ways" -> "kotartemiy/pygooglenews"
"SigmaQuan/Better-Python-59-Ways" -> "prathyvsh/formal-systems-in-biology"
"SigmaQuan/Better-Python-59-Ways" -> "lukasz-madon/awesome-concepts" ["e"=1]
"SigmaQuan/Better-Python-59-Ways" -> "hoanhan101/algo" ["e"=1]
"SigmaQuan/Better-Python-59-Ways" -> "pdfernhout/High-Performance-Organizations-Reading-List" ["e"=1]
"SigmaQuan/Better-Python-59-Ways" -> "say4n/hotreload"
"philipperemy/expressvpn-python" -> "philipperemy/google-news-scraper"
"oxylabs/how-to-scrape-google-trends" -> "oxylabs/how-to-scrape-google-finance"
"nasa8x/rss-to-json" -> "ayusharma/RSS-to-JSON"
"SSujitX/google-news-url-decoder" -> "SuYenTing/Python-web-crawler"
"elliotgao2/xweb" -> "elliotgao2/xdata"
"jacktuck/unfurl" -> "microlinkhq/metascraper"
"iamcal/oembed" -> "itteco/iframely"
"iamcal/oembed" -> "leedo/noembed"
"iamcal/oembed" -> "embedly/player.js"
"jfhovinne/jFeed" -> "sdepold/jquery-rss"
"jfhovinne/jFeed" -> "enginkizil/FeedEk"
"elliotgao2/tomd" -> "LCTT/LCTT-Helper" ["e"=1]
"elliotgao2/tomd" -> "aaronsw/html2text"
"elliotgao2/tomd" -> "elliotgao2/xweb"
"elliotgao2/tomd" -> "elliotgao2/xdata"
"miyuchina/mistletoe" -> "lepture/mistune"
"miyuchina/mistletoe" -> "frostming/marko"
"miyuchina/mistletoe" -> "executablebooks/markdown-it-py"
"miyuchina/mistletoe" -> "JessicaTegner/pypandoc"
"miyuchina/mistletoe" -> "hukkin/mdformat"
"miyuchina/mistletoe" -> "Hrabal/TemPy"
"miyuchina/mistletoe" -> "wntrblm/nox" ["e"=1]
"miyuchina/mistletoe" -> "sergiocorreia/panflute" ["e"=1]
"miyuchina/mistletoe" -> "Python-Markdown/markdown"
"miyuchina/mistletoe" -> "tox-dev/platformdirs" ["e"=1]
"miyuchina/mistletoe" -> "FSX/misaka"
"miyuchina/mistletoe" -> "trentm/python-markdown2"
"miyuchina/mistletoe" -> "elliotgao2/tomd"
"lkiesow/python-feedgen" -> "svpino/rfeed"
"lkiesow/python-feedgen" -> "tobinus/python-podgen"
"lkiesow/python-feedgen" -> "kurtmckee/feedparser"
"lkiesow/python-feedgen" -> "jkbrzt/podcats" ["e"=1]
"jiminoc/goose" -> "basis-technology-corp/Java-readability"
"oxylabs/free-proxy-list" -> "oxylabs/how-to-bypass-amazon-captcha"
"oxylabs/free-proxy-list" -> "oxylabs/how-to-scrape-amazon-prices"
"oxylabs/free-proxy-list" -> "oxylabs/how-to-scrape-google-flights"
"oxylabs/free-proxy-list" -> "oxylabs/how-to-scrape-google-trends"
"oxylabs/free-proxy-list" -> "oxylabs/amazon-review-scraper"
"oxylabs/free-proxy-list" -> "oxylabs/amazon-asin-scraper"
"oxylabs/free-proxy-list" -> "oxylabs/google-play-scraper"
"oxylabs/free-proxy-list" -> "oxylabs/how-to-scrape-google-jobs"
"oxylabs/free-proxy-list" -> "oxylabs/amazon-scraper"
"pvdlg/boilerpipe" -> "Netbreeze-GmbH/boilerpipe"
"Gman0909/RedHole" -> "rundfunk47/Google-Image-Scraper"
"lemon24/reader" ["l"="46.108,24.168"]
"feedhq/feedhq" ["l"="13.15,-8.874"]
"codelucas/newspaper" ["l"="46.098,23.942"]
"grangier/python-goose" ["l"="46.229,23.976"]
"fhamborg/news-please" ["l"="46.036,23.972"]
"buriy/python-readability" ["l"="46.199,23.959"]
"explosion/spaCy" ["l"="52.919,25.931"]
"binux/pyspider" ["l"="48.441,23.405"]
"piskvorky/gensim" ["l"="52.949,25.849"]
"scrapinghub/portia" ["l"="48.696,23.358"]
"psf/requests-html" ["l"="44.804,20.556"]
"clips/pattern" ["l"="52.89,25.99"]
"flairNLP/flair" ["l"="52.897,25.764"]
"facebookresearch/fastText" ["l"="53.043,25.835"]
"sloria/TextBlob" ["l"="52.86,25.882"]
"miso-belica/sumy" ["l"="52.402,25.698"]
"scrapy/scrapy" ["l"="44.53,20.25"]
"joke2k/faker" ["l"="44.687,20.582"]
"microlinkhq/unavatar" ["l"="46.42,23.743"]
"microlinkhq/metascraper" ["l"="46.4,23.791"]
"microlinkhq/cards" ["l"="46.45,23.786"]
"microlinkhq/splashy" ["l"="46.43,23.701"]
"spatie/laravel-google-fonts" ["l"="-14.657,30.582"]
"microlinkhq/browserless" ["l"="47.53,21.542"]
"vercel/avatar" ["l"="-3.681,-30.089"]
"knrt10/kubernetes-basicLearning" ["l"="45.782,23.883"]
"collabnix/kubelabs" ["l"="29.199,-23.933"]
"ajeetraina/kubernetes101" ["l"="28.917,-23.824"]
"schenkd/nginx-ui" ["l"="45.775,23.834"]
"Tikam02/DevOps-Guide" ["l"="29.088,-24.732"]
"eon01/kubernetes-workshop" ["l"="7.73,-8.642"]
"diegolnasc/kubernetes-best-practices" ["l"="-13.475,-5.955"]
"presmihaylov/booknotes" ["l"="28.929,-26.947"]
"fpereiro/backendlore" ["l"="26.591,-26.133"]
"Rolstenhouse/unofficial-apis" ["l"="45.859,23.905"]
"ContainerSolutions/kubernetes-examples" ["l"="28.974,-23.989"]
"veeral-patel/how-to-secure-anything" ["l"="26.776,-26.297"]
"trimstray/nginx-admins-handbook" ["l"="-14.105,-6.504"]
"justinamiller/SoftwareArchitect" ["l"="26.51,-26.288"]
"palash25/best-practices-checklist" ["l"="25.848,-26.198"]
"linkedin/school-of-sre" ["l"="29.164,-24.656"]
"Decodo/Decodo" ["l"="45.639,24.133"]
"oxylabs/google-news-scraper" ["l"="45.67,24.12"]
"oxylabs/how-to-scrape-google-images" ["l"="45.697,24.108"]
"oxylabs/google-maps-scraper" ["l"="45.687,24.139"]
"oxylabs/how-to-scrape-google-flights" ["l"="45.711,24.095"]
"oxylabs/how-to-scrape-google-scholar" ["l"="45.7,24.076"]
"oxylabs/amazon-scraper" ["l"="45.665,24.098"]
"oxylabs/quick-start-guide" ["l"="45.605,24.1"]
"kurtmckee/feedparser" ["l"="46.131,24.103"]
"lkiesow/python-feedgen" ["l"="46.069,24.152"]
"Alir3z4/html2text" ["l"="46.202,24.094"]
"mmcdole/gofeed" ["l"="3.99,-8.916"]
"scrapinghub/dateparser" ["l"="48.893,23.298"]
"scrapinghub/extruct" ["l"="48.903,23.275"]
"kurtmckee/listparser" ["l"="46.093,24.118"]
"dateutil/dateutil" ["l"="44.87,20.874"]
"Suor/funcy" ["l"="45.181,20.916"]
"gabrielfalcao/HTTPretty" ["l"="45.178,20.863"]
"FactoryBoy/factory_boy" ["l"="47.279,18.345"]
"lxml/lxml" ["l"="44.822,20.764"]
"Python-Markdown/markdown" ["l"="46.215,24.174"]
"trentm/python-markdown2" ["l"="46.222,24.206"]
"lepture/mistune" ["l"="46.261,24.191"]
"richleland/pygments-css" ["l"="46.225,24.259"]
"neutronX/django-markdownx" ["l"="47.168,18.626"]
"miyuchina/mistletoe" ["l"="46.26,24.226"]
"getpelican/pelican" ["l"="44.575,20.602"]
"aaronsw/html2text" ["l"="46.215,24.131"]
"jazzband/django-taggit" ["l"="47.218,18.52"]
"pallets/werkzeug" ["l"="44.645,20.754"]
"trentm/django-markdown-deux" ["l"="47.001,18.64"]
"xhtml2pdf/xhtml2pdf" ["l"="47.284,18.429"]
"jazzband/tablib" ["l"="44.992,20.661"]
"Kozea/WeasyPrint" ["l"="47.203,18.293"]
"matthewwithanm/python-markdownify" ["l"="46.254,24.152"]
"timbertson/python-readability" ["l"="46.304,23.933"]
"dragnet-org/dragnet" ["l"="46.193,23.985"]
"luin/readability" ["l"="46.288,23.884"]
"mozilla/readability" ["l"="46.226,23.87"]
"misja/python-boilerpipe" ["l"="46.21,24.001"]
"adbar/trafilatura" ["l"="46.148,23.959"]
"goose3/goose3" ["l"="46.137,23.989"]
"kohlschutter/boilerpipe" ["l"="46.264,23.962"]
"kingwkb/readability" ["l"="46.278,23.926"]
"GeneralNewsExtractor/GeneralNewsExtractor" ["l"="48.469,23.341"]
"elliotgao2/tomd" ["l"="46.176,24.213"]
"mixmark-io/turndown" ["l"="-2.155,-35.953"]
"mozilla/bleach" ["l"="47.307,18.411"]
"thephpleague/html-to-markdown" ["l"="-14.28,24.602"]
"scrapy/parsel" ["l"="48.913,23.312"]
"jshemas/openGraphScraper" ["l"="46.484,23.715"]
"withspectrum/micro-open-graph" ["l"="46.49,23.763"]
"samholmes/node-open-graph" ["l"="46.524,23.714"]
"xieguanglei/react-pace-progress" ["l"="46.504,23.688"]
"jacktuck/unfurl" ["l"="46.453,23.753"]
"hamid/dollar-tomans-api" ["l"="46.525,23.691"]
"hamid/iranian-news-agencies-crawler" ["l"="46.512,23.677"]
"hamid/react-native-persian-date-picker" ["l"="46.524,23.68"]
"hamid/react-native-ios-settings-bundle" ["l"="46.525,23.669"]
"laurengarcia/url-metadata" ["l"="46.477,23.667"]
"miso-belica/jusText" ["l"="46.172,24.001"]
"scrapinghub/article-extraction-benchmark" ["l"="46.137,24.008"]
"huggingface/datatrove" ["l"="38.609,-0.53"]
"dottxt-ai/outlines" ["l"="40.845,0.621"]
"google-research/deduplicate-text-datasets" ["l"="38.55,-0.567"]
"neuml/txtai" ["l"="40.746,0.567"]
"Unstructured-IO/unstructured" ["l"="40.796,0.527"]
"alirezamika/autoscraper" ["l"="46.088,23.869"]
"GravityLabs/goose" ["l"="46.302,23.968"]
"karussell/snacktory" ["l"="46.335,23.976"]
"apresta/tagger" ["l"="47.314,17.556"]
"jiminoc/goose" ["l"="46.302,23.999"]
"yostudios/Spritemapper" ["l"="3.506,-34.092"]
"udibr/bitcoinApp" ["l"="-20.857,5.809"]
"Cue/greplin-bloom-filter" ["l"="46.38,24.021"]
"joehewitt/scrollability" ["l"="3.539,-34.131"]
"peterc/pismo" ["l"="4.307,-37.302"]
"LinkedInAttic/indextank-engine" ["l"="-3.209,19.997"]
"cantino/ruby-readability" ["l"="4.276,-37.223"]
"nathanmarz/elephantdb" ["l"="-23.381,-20.469"]
"NICTA/scoobi" ["l"="-3.325,19.79"]
"nathanmarz/cascalog" ["l"="-23.558,-20.429"]
"executablebooks/markdown-it-py" ["l"="46.288,24.217"]
"frostming/marko" ["l"="46.287,24.236"]
"lepture/mistune-contrib" ["l"="46.301,24.168"]
"JessicaTegner/pypandoc" ["l"="46.318,24.217"]
"pylixm/django-mdeditor" ["l"="47.145,18.661"]
"coleifer/huey" ["l"="44.772,20.906"]
"msiemens/tinydb" ["l"="44.853,20.707"]
"FSX/misaka" ["l"="46.314,24.19"]
"coleifer/peewee" ["l"="44.662,20.775"]
"seperman/fast-autocomplete" ["l"="46.332,24.076"]
"rodricios/autocomplete" ["l"="46.295,24.054"]
"Cue/greplin-lucene-utils" ["l"="46.409,24.037"]
"ziyan/spider" ["l"="46.199,24.027"]
"mattlisiv/newsapi-python" ["l"="45.964,23.924"]
"SlapBot/newsapi" ["l"="45.981,23.893"]
"kotartemiy/pygooglenews" ["l"="45.93,23.941"]
"arrix/node-readability" ["l"="46.359,23.856"]
"mingcheng/php-readability" ["l"="-16.538,25.627"]
"4poc/feedability" ["l"="46.396,23.857"]
"Tjatse/node-readability" ["l"="46.355,23.878"]
"bndr/node-read" ["l"="46.332,23.831"]
"atmos/camo" ["l"="46.705,23.805"]
"willwashburn/phpamo" ["l"="46.738,23.791"]
"cactus/go-camo" ["l"="46.758,23.819"]
"itteco/iframely" ["l"="46.575,23.787"]
"mperham/girl_friday" ["l"="2.878,-35.542"]
"dylang/node-rss" ["l"="46.321,23.725"]
"jpmonette/feed" ["l"="46.307,23.7"]
"danmactough/node-feedparser" ["l"="46.324,23.765"]
"deanmalmgren/textract" ["l"="46.205,4.716"]
"michaelhelmick/lassie" ["l"="47.612,19.077"]
"weblyzard/inscriptis" ["l"="46.173,24.043"]
"john-kurkowski/tldextract" ["l"="5.85,-4.407"]
"peterbe/premailer" ["l"="47.514,18.509"]
"coleifer/micawber" ["l"="47.545,18.979"]
"html5lib/html5lib-python" ["l"="45.003,20.686"]
"microlinkhq/sdk" ["l"="46.49,23.799"]
"winhtaikaung/react-tiny-link" ["l"="46.517,23.779"]
"e-oj/grabity" ["l"="46.531,23.836"]
"dankito/Readability4J" ["l"="46.427,23.992"]
"chimbori/crux" ["l"="46.39,23.985"]
"Tjatse/spider2" ["l"="46.395,23.885"]
"Iceloof/GoogleNews" ["l"="45.92,24.001"]
"ranahaani/GNews" ["l"="45.952,24.003"]
"lewisdonovan/google-news-scraper" ["l"="45.85,24.045"]
"dalab/web2text" ["l"="46.169,23.973"]
"kennethkenneth/AuthorExtractor" ["l"="46.158,23.928"]
"mrjleo/boilernet" ["l"="46.171,23.939"]
"saket/unfurl" ["l"="54.397,-14.328"]
"hamid/mashya-instagram-api" ["l"="46.542,23.678"]
"hamid/react-native-reanimated-bottom-sheet" ["l"="46.509,23.661"]
"srijiths/readabilityBUNDLE" ["l"="46.325,23.995"]
"basis-technology-corp/Java-readability" ["l"="46.339,24.008"]
"executablebooks/MyST-Parser" ["l"="44.887,21.561"]
"hukkin/mdformat" ["l"="46.294,24.267"]
"njvack/markdown-to-json" ["l"="46.335,24.272"]
"executablebooks/mdit-py-plugins" ["l"="46.325,24.244"]
"executablebooks/MyST-NB" ["l"="44.916,21.593"]
"python-poetry/tomlkit" ["l"="45.097,21.198"]
"executablebooks/sphinx-design" ["l"="44.903,21.557"]
"rr-/docstring_parser" ["l"="45.128,21.336"]
"facelessuser/pymdown-extensions" ["l"="45.029,21.586"]
"plotly/falcon" ["l"="-3.618,-28.762"]
"alfiopuglisi/guietta" ["l"="45.86,23.863"]
"cym1102/nginxWebUI" ["l"="-62.414,15.041"]
"0xJacky/nginx-ui" ["l"="-62.256,15.074"]
"onlyGuo/nginx-gui" ["l"="-3.242,11.499"]
"digitalocean/nginxconfig.io" ["l"="-47.968,12.797"]
"oct16/TimeCat" ["l"="-4.085,-32.888"]
"muesli/duf" ["l"="-13.517,-6.898"]
"statping/statping" ["l"="11.887,-8.961"]
"nakabonne/ali" ["l"="4.075,-9.043"]
"ADD-SP/ngx_waf" ["l"="-20.906,-21.584"]
"zmister2016/MrDoc" ["l"="2.809,-9.247"]
"openspug/spug" ["l"="8.974,-5.553"]
"kotartemiy/newscatcher" ["l"="45.933,23.893"]
"kotartemiy/extract-news-api" ["l"="45.9,23.926"]
"man-group/dtale" ["l"="45.246,26.133"]
"hudson-and-thames/mlfinlab" ["l"="-8.959,12.864"]
"alexgolec/tda-api" ["l"="-8.69,13.084"]
"cortexlabs/cortex" ["l"="45.328,25.857"]
"cantaro86/Financial-Models-Numerical-Methods" ["l"="-8.958,12.788"]
"harttraveller/finlib" ["l"="45.948,23.848"]
"firmai/machine-learning-asset-management" ["l"="-9.066,12.866"]
"SigmaQuan/Better-Python-59-Ways" ["l"="45.901,23.826"]
"igorshubovych/markdownlint-cli" ["l"="-55.589,7.479"]
"socialpoint-labs/sheetfu" ["l"="44.331,15.806"]
"GeneralMills/pytrends" ["l"="24.703,-28.669"]
"fhamborg/Giveme5W1H" ["l"="54.294,28.82"]
"minimaxir/aitextgen" ["l"="53.454,25.907"]
"lorey/mlscraper" ["l"="46.137,23.891"]
"lorien/awesome-web-scraping" ["l"="26.263,-26.03"]
"twintproject/twint" ["l"="-46.658,-27.841"]
"huangsam/ultimate-python" ["l"="23.993,-24.747"]
"bee-san/Ciphey" ["l"="-45.222,-32.309"]
"ScrapeGraphAI/Scrapegraph-ai" ["l"="40.813,0.112"]
"learning-at-home/hivemind" ["l"="38.55,-0.261"]
"apify/crawlee" ["l"="40.876,-0.306"]
"microsoft/playwright-python" ["l"="44.659,20.418"]
"jbesomi/texthero" ["l"="52.727,25.752"]
"mherrmann/helium" ["l"="42.901,20.781"]
"lux-org/lux" ["l"="45.236,26.161"]
"Sangarshanan/jazzit" ["l"="45.792,23.774"]
"sanand0/pyconindia2020" ["l"="45.757,23.741"]
"KartikChugh/Otto" ["l"="-13.38,-5.945"]
"hauntsaninja/pyp" ["l"="45.332,21.129"]
"fbdesignpro/sweetviz" ["l"="45.298,26.186"]
"Overv/outrun" ["l"="-13.402,-6.358"]
"enthought/traitsui" ["l"="62.616,0.373"]
"nackjicholson/aiosql" ["l"="44.941,21.165"]
"adamerose/PandasGUI" ["l"="45.272,26.14"]
"CCExtractor/vardbg" ["l"="48.431,23.636"]
"pywebio/PyWebIO" ["l"="42.689,20.712"]
"bchao1/bullet" ["l"="45.113,20.686"]
"ageitgey/node-unfluff" ["l"="46.302,23.859"]
"jbrooksuk/node-summary" ["l"="52.266,25.689"]
"postlight/parser" ["l"="46.271,23.832"]
"mauricesvay/ImageResolver" ["l"="46.24,23.813"]
"extractus/article-extractor" ["l"="46.278,23.793"]
"simplecrawler/simplecrawler" ["l"="22.342,-26.757"]
"aimuch/iAI" ["l"="51.989,15.506"]
"Boris-code/feapder" ["l"="48.03,22.043"]
"AtuboDad/playwright_stealth" ["l"="47.35,21.503"]
"learnbyexample/practice_python_projects" ["l"="44.112,24.89"]
"shibing624/python-tutorial" ["l"="48.071,23.529"]
"bee-san/pyWhat" ["l"="-45.408,-32.237"]
"jamesturk/scrapeghost" ["l"="41.402,-3.915"]
"theahmadov/NIVOS" ["l"="-46.582,-26.188"]
"lixi5338619/magical_spider" ["l"="48.2,22.057"]
"greycodee/wechat-backup" ["l"="45.529,-1.368"]
"xingxingzaixian/python-django-online-exam" ["l"="42.528,21.198"]
"gm365/Web3_Tutorial" ["l"="-23.733,9.37"]
"sergiocorreia/panflute" ["l"="-3.512,22"]
"jgm/pandocfilters" ["l"="-3.527,21.987"]
"boisgera/pandoc" ["l"="46.373,24.248"]
"adityarathod/pyandoc" ["l"="46.376,24.218"]
"tomduck/pandoc-fignos" ["l"="-3.528,22.007"]
"tomduck/pandoc-eqnos" ["l"="-3.544,21.995"]
"ActiveState/appdirs" ["l"="45.154,21.062"]
"tox-dev/sphinx-autodoc-typehints" ["l"="44.985,21.473"]
"pandoc-scholar/pandoc-scholar" ["l"="-3.503,22.043"]
"timtylin/scholdoc" ["l"="-3.442,22.046"]
"rbren/rss-parser" ["l"="46.271,23.728"]
"scripting/feedRead" ["l"="46.355,23.738"]
"alabeduarte/feedparser-promised" ["l"="46.358,23.757"]
"fent/feedme.js" ["l"="46.362,23.695"]
"scripting/river5" ["l"="46.301,23.596"]
"filipedeschamps/rss-feed-emitter" ["l"="5.942,-20.423"]
"mashpie/i18n-node" ["l"="-0.022,-34.121"]
"feedjira/feedjira" ["l"="4.531,-37.265"]
"kelektiv/node-cron" ["l"="0.005,-34.012"]
"prathyvsh/formal-systems-in-biology" ["l"="45.863,23.731"]
"prathyvsh/notation" ["l"="45.863,23.688"]
"prathyvsh/lambda-calculus-visualizations" ["l"="45.832,23.7"]
"ohyicong/Google-Image-Scraper" ["l"="45.778,24.173"]
"JJLimmm/Website-Image-Scraper" ["l"="45.782,24.203"]
"ultralytics/flickr_scraper" ["l"="46.069,5.408"]
"pevers/images-scraper" ["l"="45.787,24.234"]
"oxylabs/google-play-scraper" ["l"="45.74,24.109"]
"rundfunk47/Google-Image-Scraper" ["l"="45.76,24.209"]
"ostrolucky/Bulk-Bing-Image-downloader" ["l"="24.603,-28.285"]
"debadridtt/Scraping-Google-Images-using-Python" ["l"="45.806,24.197"]
"MahdiNavaei/Google-Scholar-Scraper" ["l"="45.799,24.142"]
"oxylabs/amazon-review-scraper" ["l"="45.724,24.111"]
"omkarcloud/amazon-scraper" ["l"="45.811,24.121"]
"jwarby/jekyll-pygments-themes" ["l"="46.216,24.321"]
"Andrew-liu/my_blog_tutorial" ["l"="49.227,22.499"]
"rouge-ruby/rouge" ["l"="4.375,-37.321"]
"penibelst/jekyll-compress-html" ["l"="-39.951,15.113"]
"stacklens/django_blog_tutorial" ["l"="48.983,22.468"]
"toshimaru/jekyll-toc" ["l"="-39.975,15.091"]
"idleberg/base16-pygments" ["l"="46.206,24.293"]
"nickbalestra/kactus" ["l"="-40.744,15.44"]
"christian-fei/Simple-Jekyll-Search" ["l"="-39.914,15.128"]
"georgemandis/jekyll-rss-feeds" ["l"="-39.919,14.968"]
"gettalong/kramdown" ["l"="4.453,-37.307"]
"rodricios/eatiht" ["l"="46.249,24.003"]
"datalib/libextract" ["l"="46.251,24.024"]
"pvdlg/boilerpipe" ["l"="46.328,23.957"]
"bevacqua/local-storage" ["l"="46.548,23.652"]
"bevacqua/insignia" ["l"="22.515,-26.962"]
"sdepold/jquery-rss" ["l"="46.199,23.622"]
"sdepold/feedrapp" ["l"="46.164,23.619"]
"enginkizil/FeedEk" ["l"="46.193,23.591"]
"jfhovinne/jFeed" ["l"="46.172,23.593"]
"sdepold/vanilla-rss" ["l"="46.215,23.6"]
"kevinzg/facebook-scraper" ["l"="38.997,33.958"]
"lvarayut/javascript-style-guide" ["l"="23.485,1.178"]
"xz/new.css" ["l"="23.98,-25.604"]
"f-prime/Blunt" ["l"="22.974,-29.492"]
"adminho/public-apis" ["l"="45.823,23.923"]
"luruke/browser-2020" ["l"="-3.737,-29.058"]
"minimaxir/hacker-news-undocumented" ["l"="-3.664,-28.104"]
"goabstract/Marketing-for-Engineers" ["l"="26.562,-26.36"]
"alias-rahil/handwritten.js" ["l"="22.83,-29.513"]
"slaveofcode/boilerpipe3" ["l"="46.226,24.046"]
"chrislinan/cx-extractor-python" ["l"="48.562,23.617"]
"pratikpv/google_news_scraper_and_sentiment_analyzer" ["l"="45.863,24.085"]
"pratikpv/predicting_bitcoin_market" ["l"="45.872,24.108"]
"scripting/pagePark" ["l"="46.321,23.549"]
"scripting/myWord" ["l"="46.301,23.56"]
"scripting/listicle" ["l"="46.331,23.525"]
"wuman/JReadability" ["l"="46.368,23.992"]
"markusmobius/go-domdistiller" ["l"="4.408,-9.15"]
"TeamHG-Memex/html-text" ["l"="48.946,23.202"]
"adbar/htmldate" ["l"="46.1,24.019"]
"currentslab/extractnet" ["l"="46.148,24.032"]
"scrapinghub/product-extraction-benchmark" ["l"="46.114,24.032"]
"starfishmod/jquery-oembed-all" ["l"="46.647,23.85"]
"nfl/jquery-oembed-all" ["l"="46.626,23.832"]
"oxylabs/how-to-bypass-amazon-captcha" ["l"="45.744,24.126"]
"easonlai/google_news_content_scrape_and_analyze_with_gpt" ["l"="45.896,24.028"]
"philipperemy/google-news-scraper" ["l"="45.815,24.016"]
"oxylabs/how-to-scrape-google-trends" ["l"="45.761,24.084"]
"oxylabs/how-to-scrape-google-finance" ["l"="45.752,24.064"]
"oxylabs/how-to-scrape-google-jobs" ["l"="45.728,24.082"]
"oxylabs/amazon-asin-scraper" ["l"="45.737,24.095"]
"rodricios/crawl-to-the-future" ["l"="46.283,24.033"]
"joe-bell/next-google-fonts" ["l"="-1.447,-30.008"]
"scrapehero-code/amazon-scraper" ["l"="45.77,24.113"]
"tducret/amazon-scraper-python" ["l"="47,23.502"]
"drawrowfly/amazon-product-api" ["l"="47.005,23.466"]
"scrapehero-code/amazon-review-scraper" ["l"="46.997,23.431"]
"dynamohuang/amazon-scrapy" ["l"="46.978,23.536"]
"ian-kerins/amazon-python-scrapy-scraper" ["l"="46.949,23.54"]
"ShantanuJalkote/amazon-data-scraper" ["l"="45.798,24.107"]
"oxylabs/how-to-scrape-amazon-prices" ["l"="45.713,24.126"]
"fent/node-feedsub" ["l"="46.376,23.666"]
"svpino/rfeed" ["l"="46.035,24.174"]
"pythonindia/inpycon2020" ["l"="45.74,23.727"]
"pratikpv/reddit_scraper_and_sentiment_analyzer" ["l"="45.88,24.133"]
"iamcal/oembed" ["l"="46.646,23.754"]
"leedo/noembed" ["l"="46.634,23.787"]
"php-embed/Embed" ["l"="-16.229,25.65"]
"shobhitsharma/embedo" ["l"="46.599,23.741"]
"ritz078/embed-js" ["l"="22.666,-27.281"]
"linkesch/medium-editor-insert-plugin" ["l"="-1.746,-36.233"]
"essence/essence" ["l"="-16.156,25.623"]
"nodeca/probe-image-size" ["l"="-0.382,-35.879"]
"itteco/embedjs" ["l"="46.603,23.796"]
"nodeca/embedza" ["l"="46.592,23.818"]
"discourse/onebox" ["l"="4.442,-37.527"]
"oxylabs/Python-Web-Scraping-Tutorial" ["l"="45.594,24.074"]
"oxylabs/aliexpress-scraper" ["l"="45.575,24.095"]
"oxylabs/youtube-scraper" ["l"="45.57,24.08"]
"oxylabs/web-unblocker" ["l"="45.616,24.078"]
"oxylabs/google-shopping-scraper" ["l"="45.683,24.085"]
"rmax/scrapy-redis" ["l"="48.611,23.358"]
"rq/rq" ["l"="44.632,20.844"]
"gnemoug/distribute_crawler" ["l"="48.562,23.433"]
"xiaoxu193/PyTeaser" ["l"="52.367,25.686"]
"PlasmoHQ/plasmo" ["l"="9.021,-43.42"]
"automerge/automerge-classic" ["l"="-3.866,-29.412"]
"go-shiori/go-readability" ["l"="4.276,-9.075"]
"cure53/DOMPurify" ["l"="-3.685,-29.45"]
"yjs/yjs" ["l"="-3.621,-29.649"]
"Y2Z/monolith" ["l"="-13.391,-7.048"]
"nextapps-de/flexsearch" ["l"="-4.092,-29.439"]
"adadgio/safari-reader-js" ["l"="46.264,23.904"]
"AndyTheFactory/newspaper4k" ["l"="46.05,24.001"]
"santhoshse7en/news-fetch" ["l"="45.986,23.99"]
"SSujitX/google-news-url-decoder" ["l"="45.934,24.05"]
"leafac/caxa" ["l"="46.372,23.606"]
"yao-pkg/pkg" ["l"="46.413,23.527"]
"scripting/myWordEditor" ["l"="46.297,23.538"]
"scripting/nodeStorage" ["l"="46.287,23.5"]
"johnbumgarner/newspaper3_usage_overview" ["l"="46.019,24.05"]
"johnbumgarner/newshound" ["l"="46.002,24.076"]
"bookieio/breadability" ["l"="46.324,23.915"]
"pymupdf/PyMuPDF" ["l"="46.116,4.768"]
"opendatalab/magic-html" ["l"="49.678,29.572"]
"mwilliamson/python-mammoth" ["l"="46.046,4.573"]
"JohannesKaufmann/html-to-markdown" ["l"="4.238,-8.954"]
"supermemoryai/markdowner" ["l"="41.185,0.289"]
"scottstanfield/markdown-to-json" ["l"="46.371,24.318"]
"oxylabs/tripadvisor-scraper" ["l"="45.53,24.085"]
"nasa8x/rss-to-json" ["l"="46.256,23.667"]
"extractus/feed-extractor" ["l"="46.247,23.752"]
"zenn-dev/zenn-editor" ["l"="5.803,-39.913"]
"hongkiat/js-rss-reader" ["l"="46.246,23.697"]
"apostrophecms/sanitize-html" ["l"="0.243,-34.108"]
"hello-efficiency-inc/raven-reader" ["l"="-17.483,-1.452"]
"mrsteele/dotenv-webpack" ["l"="0.536,-26.78"]
"seomoz/dragnet_data" ["l"="46.219,24.027"]
"scrapy/scrapely" ["l"="48.851,23.299"]
"extractus/oembed-extractor" ["l"="46.234,23.767"]
"romansky/dom-to-semantic-markdown" ["l"="46.191,23.722"]
"eta-dev/eta" ["l"="2.441,-30.873"]
"ranyitz/qnm" ["l"="-4.297,-30.004"]
"addyosmani/bg-remove" ["l"="45.377,-0.36"]
"Sh4yy/cloudflare-email" ["l"="16.294,-10.012"]
"adbar/courlan" ["l"="46.155,24.059"]
"oxylabs/free-proxy-list" ["l"="45.724,24.144"]
"vercel/og-image" ["l"="-3.6,-29.881"]
"mozilla/page-metadata-parser" ["l"="46.451,23.834"]
"nodejs/single-executable" ["l"="46.437,23.454"]
"nodejs/postject" ["l"="46.447,23.424"]
"scripting/1999-project" ["l"="46.267,23.556"]
"scripting/river4" ["l"="46.271,23.582"]
"scripting/tweetsToRss" ["l"="45.884,20.165"]
"oxylabs/etsy-scraper" ["l"="45.49,24.077"]
"oxylabs/netflix-scraper" ["l"="45.503,24.087"]
"oxylabs/craigslist-scraper" ["l"="45.504,24.067"]
"oxylabs/ebay-scraper" ["l"="45.506,24.121"]
"oxylabs/best-buy-scraper" ["l"="45.526,24.106"]
"Gman0909/RedHole" ["l"="45.751,24.227"]
"pallets/jinja" ["l"="44.625,20.735"]
"yaml/pyyaml" ["l"="44.947,20.924"]
"pygments/pygments" ["l"="44.984,21.078"]
"theskumar/python-dotenv" ["l"="44.736,20.793"]
"mkdocs/mkdocs" ["l"="44.558,20.763"]
"python-pillow/Pillow" ["l"="44.441,20.574"]
"django-commons/django-debug-toolbar" ["l"="47.16,18.427"]
"postlight/parser-api" ["l"="13.379,-9.027"]
"feedbin/feedbin" ["l"="13.031,-8.897"]
"RSS-Bridge/rss-bridge" ["l"="12.961,-8.969"]
"instantpage/instant.page" ["l"="-4.011,-28.933"]
"Ranchero-Software/NetNewsWire" ["l"="25.996,-22.819"]
"wallabag/wallabag" ["l"="12.797,-8.866"]
"yao-pkg/pkg-fetch" ["l"="46.448,23.517"]
"vercel/pkg-fetch" ["l"="46.437,23.497"]
"AngaBlue/exe" ["l"="46.388,23.505"]
"chjj/bpkg" ["l"="46.443,23.54"]
"yao-pkg/pkg-binaries" ["l"="46.41,23.491"]
"oxylabs/web-scraping-google-sheets" ["l"="45.693,24.171"]
"mozilla/page-metadata-service" ["l"="46.473,23.853"]
"MHordecki/readability-redux" ["l"="46.373,23.924"]
"srid/readability" ["l"="46.334,23.937"]
"dcramer/decruft" ["l"="46.351,23.941"]
"ReadabilityHoldings/python-readability-api" ["l"="46.349,23.92"]
"hatena/extract-content-javascript" ["l"="46.378,23.948"]
"fhamborg/NewsMTSC" ["l"="46.012,24.012"]
"commoncrawl/news-crawl" ["l"="38.568,32.551"]
"Netbreeze-GmbH/boilerpipe" ["l"="46.355,23.962"]
"arunsupe/semantic-grep" ["l"="3.847,12.833"]
"dleemiller/WordLlama" ["l"="41.215,0.72"]
"oto-labs/librarian" ["l"="46.155,23.69"]
"jmriebold/BoilerPy3" ["l"="46.127,24.047"]
"dkpro/dkpro-c4corpus" ["l"="38.41,32.562"]
"keirp/OpenWebMath" ["l"="46.188,23.926"]
"facebookresearch/cc_net" ["l"="38.527,-0.625"]
"bslatkin/effectivepython" ["l"="47.907,23.671"]
"dabeaz-course/practical-python" ["l"="23.979,-24.815"]
"blobcity/python-for-data-science" ["l"="45.873,23.787"]
"photonlines/Intuitive-Guide-to-Maxwells-Equations" ["l"="-45.551,-34.526"]
"arogozhnikov/python3_with_pleasure" ["l"="47.486,28.655"]
"EONRaider/violent-python3" ["l"="-47.435,-25.881"]
"lukasz-madon/awesome-concepts" ["l"="-0.547,3.3"]
"hoanhan101/algo" ["l"="4.194,-9.109"]
"pdfernhout/High-Performance-Organizations-Reading-List" ["l"="26.399,-26.58"]
"say4n/hotreload" ["l"="45.911,23.77"]
"philipperemy/expressvpn-python" ["l"="45.784,23.994"]
"ayusharma/RSS-to-JSON" ["l"="46.25,23.64"]
"SuYenTing/Python-web-crawler" ["l"="45.927,24.076"]
"elliotgao2/xweb" ["l"="46.139,24.266"]
"elliotgao2/xdata" ["l"="46.152,24.244"]
"embedly/player.js" ["l"="46.701,23.721"]
"LCTT/LCTT-Helper" ["l"="-15.964,-10.517"]
"Hrabal/TemPy" ["l"="46.263,24.292"]
"wntrblm/nox" ["l"="45.137,21.156"]
"tox-dev/platformdirs" ["l"="45.108,21.178"]
"tobinus/python-podgen" ["l"="46.056,24.191"]
"jkbrzt/podcats" ["l"="60.453,-23.763"]
}