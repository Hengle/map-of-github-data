digraph G {
"deeplearningzerotoall/PyTorch" -> "deeplearningzerotoall/TensorFlow"
"deeplearningzerotoall/PyTorch" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"deeplearningzerotoall/PyTorch" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"deeplearningzerotoall/PyTorch" -> "jungwoo-ha/WeeklyArxivTalk"
"deeplearningzerotoall/PyTorch" -> "boost-devs/ai-tech-interview"
"deeplearningzerotoall/PyTorch" -> "WegraLee/deep-learning-from-scratch"
"deeplearningzerotoall/PyTorch" -> "teddylee777/machine-learning"
"deeplearningzerotoall/PyTorch" -> "kakaobrain/pororo"
"deeplearningzerotoall/PyTorch" -> "PyTorchKorea/tutorials-kr"
"deeplearningzerotoall/PyTorch" -> "visionNoob/CS231N_17_KOR_SUB"
"deeplearningzerotoall/PyTorch" -> "ratsgo/embedding"
"deeplearningzerotoall/PyTorch" -> "ukairia777/tensorflow-nlp-tutorial"
"deeplearningzerotoall/PyTorch" -> "songys/AwesomeKorean_Data"
"deeplearningzerotoall/PyTorch" -> "jiphyeonjeon/season1"
"deeplearningzerotoall/PyTorch" -> "zzsza/Kaggle-knowhow"
"sharebook-kr/book-cryptocurrency" -> "youtube-jocoding/pyupbit-autotrade"
"sharebook-kr/book-cryptocurrency" -> "sharebook-kr/pyupbit"
"sharebook-kr/book-cryptocurrency" -> "msaltnet/smtm"
"sharebook-kr/book-cryptocurrency" -> "sharebook-kr/cryptocurrency-trading-bot"
"sharebook-kr/book-cryptocurrency" -> "pystockhub/book"
"sharebook-kr/book-cryptocurrency" -> "sharebook-kr/pybithumb"
"sharebook-kr/book-cryptocurrency" -> "sharebook-kr/pykorbit"
"sharebook-kr/pyupbit" -> "youtube-jocoding/pyupbit-autotrade"
"sharebook-kr/pyupbit" -> "sharebook-kr/book-cryptocurrency"
"sharebook-kr/pyupbit" -> "sharebook-kr/pybithumb"
"sharebook-kr/pyupbit" -> "inasie/upbitpy"
"sharebook-kr/pyupbit" -> "sharebook-kr/pykrx"
"sharebook-kr/pyupbit" -> "koreainvestment/open-trading-api"
"sharebook-kr/pyupbit" -> "sharebook-kr/mojito"
"sharebook-kr/pyupbit" -> "chaeso/upbitbot"
"sharebook-kr/pyupbit" -> "youtube-jocoding/gpt-bitcoin"
"sharebook-kr/pyupbit" -> "sharebook-kr/pykiwoom"
"sharebook-kr/pyupbit" -> "quantylab/rltrader"
"sharebook-kr/pyupbit" -> "FinanceData/FinanceDataReader"
"sharebook-kr/pyupbit" -> "uJhin/python-upbit-client"
"sharebook-kr/pyupbit" -> "showmethecoin/upbit-trader"
"sharebook-kr/pyupbit" -> "programgarden/book"
"dhkdn9192/data_engineer_career" -> "dhkdn9192/StockPatternStream"
"dhkdn9192/data_engineer_career" -> "yansfil/data-engineering-study"
"dhkdn9192/data_engineer_career" -> "heehehe/job-trend"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "ndb796/python-for-coding-test" ["e"=1]
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "ndb796/Fast_Campus_Algorithm_Lecture_Notes" ["e"=1]
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "teddylee777/machine-learning"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "rickiepark/handson-ml2"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "WegraLee/deep-learning-from-scratch"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "corazzon/OpenDataWrangling"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "yoonkt200/python-data-analysis"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "onlybooks/python-algorithm-interview" ["e"=1]
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "KerasKorea/KEKOxTutorial"
"heartcored98/Standalone-DeepLearning" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"heartcored98/Standalone-DeepLearning" -> "jungwoo-ha/WeeklyArxivTalk"
"heartcored98/Standalone-DeepLearning" -> "KLUE-benchmark/KLUE"
"heartcored98/Standalone-DeepLearning" -> "boost-devs/ai-tech-interview"
"heartcored98/Standalone-DeepLearning" -> "SKTBrain/KoBERT"
"heartcored98/Standalone-DeepLearning" -> "PyTorchKorea/tutorials-kr"
"heartcored98/Standalone-DeepLearning" -> "teddylee777/machine-learning"
"heartcored98/Standalone-DeepLearning" -> "rickiepark/handson-ml2"
"heartcored98/Standalone-DeepLearning" -> "Lilcob/-DL_PaperReadingMeeting"
"heartcored98/Standalone-DeepLearning" -> "visionNoob/CS231N_17_KOR_SUB"
"heartcored98/Standalone-DeepLearning" -> "reinforcement-learning-kr/how_to_study_rl"
"heartcored98/Standalone-DeepLearning" -> "zzsza/Kaggle-knowhow"
"heartcored98/Standalone-DeepLearning" -> "songys/AwesomeKorean_Data"
"heartcored98/Standalone-DeepLearning" -> "kakaobrain/nlp-paper-reading"
"heartcored98/Standalone-DeepLearning" -> "kakaobrain/pororo"
"KerasKorea/KEKOxTutorial" -> "KerasKorea/KerasObjectDetector" ["e"=1]
"KerasKorea/KEKOxTutorial" -> "ratsgo/embedding"
"KerasKorea/KEKOxTutorial" -> "deep-diver/Machine-Learning-Yearning-Korean-Translation"
"KerasKorea/KEKOxTutorial" -> "keras-team/keras-docs-ko" ["e"=1]
"KerasKorea/KEKOxTutorial" -> "seopbo/nlp_classification"
"KerasKorea/KEKOxTutorial" -> "SKTBrain/KoBERT"
"KerasKorea/KEKOxTutorial" -> "songys/AwesomeKorean_Data"
"KerasKorea/KEKOxTutorial" -> "deeplearningzerotoall/TensorFlow"
"KerasKorea/KEKOxTutorial" -> "zzsza/kyle-school"
"KerasKorea/KEKOxTutorial" -> "visionNoob/CS231N_17_KOR_SUB"
"KerasKorea/KEKOxTutorial" -> "KerasKorea/KerasKorea.github.io" ["e"=1]
"KerasKorea/KEKOxTutorial" -> "datanada/Awesome-Korean-NLP"
"KerasKorea/KEKOxTutorial" -> "zzsza/Kaggle-knowhow"
"KerasKorea/KEKOxTutorial" -> "jskDr/keraspp"
"teddylee777/machine-learning" -> "boost-devs/ai-tech-interview"
"teddylee777/machine-learning" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"teddylee777/machine-learning" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"teddylee777/machine-learning" -> "zzsza/Datascience-Interview-Questions"
"teddylee777/machine-learning" -> "brave-people/brave-tech-interview" ["e"=1]
"teddylee777/machine-learning" -> "onlybooks/python-algorithm-interview" ["e"=1]
"teddylee777/machine-learning" -> "brave-people/Dev-Event" ["e"=1]
"teddylee777/machine-learning" -> "ndb796/python-for-coding-test" ["e"=1]
"teddylee777/machine-learning" -> "tony9402/baekjoon" ["e"=1]
"teddylee777/machine-learning" -> "leehosung/awesome-devteam" ["e"=1]
"teddylee777/machine-learning" -> "jojoldu/junior-recruit-scheduler" ["e"=1]
"teddylee777/machine-learning" -> "Integerous/goQuality-dev-contents" ["e"=1]
"teddylee777/machine-learning" -> "gyoogle/tech-interview-for-developer" ["e"=1]
"teddylee777/machine-learning" -> "WooVictory/Ready-For-Tech-Interview" ["e"=1]
"teddylee777/machine-learning" -> "WegraLee/deep-learning-from-scratch"
"naver/kor2vec" -> "coolengineer/sejong-corpus"
"naver/kor2vec" -> "naver/claf"
"naver/kor2vec" -> "Beomi/KcBERT"
"naver/kor2vec" -> "monologg/KoELECTRA"
"naver/kor2vec" -> "likejazz/korean-sentence-splitter"
"naver/kor2vec" -> "monologg/DistilKoBERT"
"naver/kor2vec" -> "datanada/Awesome-Korean-NLP"
"naver/kor2vec" -> "dongjun-Lee/kor2vec"
"naver/kor2vec" -> "SungjoonPark/KoreanWordVectors"
"naver/kor2vec" -> "kocohub/korean-hate-speech"
"naver/kor2vec" -> "lovit/soynlp"
"naver/kor2vec" -> "naver/nlp-challenge"
"naver/kor2vec" -> "ratsgo/embedding"
"naver/kor2vec" -> "warnikchow/3i4k"
"naver/kor2vec" -> "eagle705/pytorch-bert-crf-ner"
"corazzon/OpenDataWrangling" -> "corazzon/petitionWrangling"
"corazzon/OpenDataWrangling" -> "corazzon/open-data-analysis-basic"
"corazzon/OpenDataWrangling" -> "corazzon/KaggleStruggle"
"corazzon/OpenDataWrangling" -> "corazzon/cracking-the-pandas-cheat-sheet"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "zzsza/Datascience-Interview-Questions"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "teddylee777/machine-learning"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "boost-devs/ai-tech-interview"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "zzsza/Kaggle-knowhow"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "onlybooks/python-algorithm-interview" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "awesome-devblog/awesome-devblog" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "brave-people/brave-tech-interview" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "ndb796/python-for-coding-test" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "jojoldu/junior-recruit-scheduler" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "leehosung/awesome-devteam" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "WeareSoft/tech-interview" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "WooVictory/Ready-For-Tech-Interview" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "Integerous/goQuality-dev-contents" ["e"=1]
"FinanceData/FinanceDataReader" -> "FinanceData/OpenDartReader"
"FinanceData/FinanceDataReader" -> "sharebook-kr/pykrx"
"FinanceData/FinanceDataReader" -> "FinanceData/marcap"
"FinanceData/FinanceDataReader" -> "josw123/dart-fss"
"FinanceData/FinanceDataReader" -> "koreainvestment/open-trading-api"
"FinanceData/FinanceDataReader" -> "quantylab/rltrader"
"FinanceData/FinanceDataReader" -> "INVESTAR/StockAnalysisInPython"
"FinanceData/FinanceDataReader" -> "WooilJeong/PublicDataReader"
"FinanceData/FinanceDataReader" -> "elbakramer/koapy"
"FinanceData/FinanceDataReader" -> "sharebook-kr/mojito"
"FinanceData/FinanceDataReader" -> "sharebook-kr/pyupbit"
"FinanceData/FinanceDataReader" -> "golbin/TensorFlow-Tutorials"
"FinanceData/FinanceDataReader" -> "gyusu/Creon-Datareader"
"FinanceData/FinanceDataReader" -> "Beomi/KoAlpaca"
"FinanceData/FinanceDataReader" -> "hyunyulhenry/quant_py"
"josw123/dart-fss" -> "FinanceData/OpenDartReader"
"josw123/dart-fss" -> "josw123/dart-scraper"
"josw123/dart-fss" -> "sharebook-kr/pykrx"
"josw123/dart-fss" -> "FinanceData/FinanceDataReader"
"josw123/dart-fss" -> "josw123/dart-fss-classifier"
"josw123/dart-fss" -> "sharebook-kr/mojito"
"josw123/dart-fss" -> "FinanceData/marcap"
"josw123/dart-fss" -> "elbakramer/koapy"
"josw123/dart-fss" -> "wikibook/stock-trading"
"josw123/dart-fss" -> "pystockhub/book"
"josw123/dart-fss" -> "suminb/finance"
"lovit/textrank" -> "lovit/KR-WordRank"
"haven-jeon/PyKoSpacing" -> "ssut/py-hanspell"
"haven-jeon/PyKoSpacing" -> "hyunwoongko/kss"
"haven-jeon/PyKoSpacing" -> "lovit/soyspacing"
"haven-jeon/PyKoSpacing" -> "lovit/soynlp"
"haven-jeon/PyKoSpacing" -> "ko-nlp/Korpora"
"haven-jeon/PyKoSpacing" -> "Beomi/KcBERT"
"haven-jeon/PyKoSpacing" -> "SKTBrain/KoBERT"
"haven-jeon/PyKoSpacing" -> "kocohub/korean-hate-speech"
"haven-jeon/PyKoSpacing" -> "songys/AwesomeKorean_Data"
"haven-jeon/PyKoSpacing" -> "bab2min/Kiwi"
"haven-jeon/PyKoSpacing" -> "lovit/KR-WordRank"
"haven-jeon/PyKoSpacing" -> "bab2min/kiwipiepy"
"haven-jeon/PyKoSpacing" -> "monologg/KoELECTRA"
"haven-jeon/PyKoSpacing" -> "likejazz/korean-sentence-splitter"
"haven-jeon/PyKoSpacing" -> "datanada/Awesome-Korean-NLP"
"rickiepark/handson-ml2" -> "WegraLee/deep-learning-from-scratch-2"
"rickiepark/handson-ml2" -> "rickiepark/handson-ml"
"rickiepark/handson-ml2" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"rickiepark/handson-ml2" -> "rickiepark/deep-learning-with-python-notebooks"
"rickiepark/handson-ml2" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"rickiepark/handson-ml2" -> "rickiepark/hg-mldl"
"rickiepark/handson-ml2" -> "jungwoo-ha/WeeklyArxivTalk"
"rickiepark/handson-ml2" -> "WegraLee/deep-learning-from-scratch-3"
"rickiepark/handson-ml2" -> "WegraLee/deep-learning-from-scratch"
"rickiepark/handson-ml2" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"rickiepark/handson-ml2" -> "songys/AwesomeKorean_Data"
"rickiepark/handson-ml2" -> "SKT-AI/KoGPT2"
"rickiepark/handson-ml2" -> "heartcored98/Standalone-DeepLearning"
"rickiepark/handson-ml2" -> "teddylee777/machine-learning"
"rickiepark/handson-ml2" -> "SKTBrain/KoBERT"
"konlpy/konlpy" -> "datanada/Awesome-Korean-NLP"
"konlpy/konlpy" -> "kakao/khaiii"
"konlpy/konlpy" -> "lovit/soynlp"
"konlpy/konlpy" -> "e9t/nsmc"
"konlpy/konlpy" -> "twitter/twitter-korean-text"
"konlpy/konlpy" -> "open-korean-text/open-korean-text"
"konlpy/konlpy" -> "SKTBrain/KoBERT"
"konlpy/konlpy" -> "ko-nlp/Korpora"
"konlpy/konlpy" -> "haven-jeon/PyKoSpacing"
"konlpy/konlpy" -> "SKT-AI/KoGPT2"
"konlpy/konlpy" -> "ratsgo/embedding"
"konlpy/konlpy" -> "golbin/TensorFlow-Tutorials"
"konlpy/konlpy" -> "kakaobrain/pororo"
"konlpy/konlpy" -> "KLUE-benchmark/KLUE"
"konlpy/konlpy" -> "songys/AwesomeKorean_Data"
"corazzon/KaggleStruggle" -> "corazzon/OpenDataWrangling"
"corazzon/KaggleStruggle" -> "corazzon/petitionWrangling"
"corazzon/KaggleStruggle" -> "zzsza/Kaggle-knowhow"
"corazzon/KaggleStruggle" -> "e9t/nsmc"
"corazzon/KaggleStruggle" -> "rickiepark/introduction_to_ml_with_python"
"corazzon/KaggleStruggle" -> "amueller/odscon-2015"
"corazzon/KaggleStruggle" -> "SudalaiRajkumar/Kaggle" ["e"=1]
"corazzon/KaggleStruggle" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"corazzon/KaggleStruggle" -> "GunhoChoi/PyTorch-FastCampus"
"corazzon/KaggleStruggle" -> "corazzon/open-data-analysis-basic"
"corazzon/KaggleStruggle" -> "zzsza/Datascience-Interview-Questions"
"WegraLee/deep-learning-from-scratch-2" -> "WegraLee/deep-learning-from-scratch-3"
"WegraLee/deep-learning-from-scratch-2" -> "WegraLee/deep-learning-from-scratch"
"WegraLee/deep-learning-from-scratch-2" -> "ratsgo/embedding"
"WegraLee/deep-learning-from-scratch-2" -> "rickiepark/handson-ml2"
"WegraLee/deep-learning-from-scratch-2" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"eddykim777/qtbook" -> "CppKorea/CppCoreGuidelines"
"eddykim777/qtbook" -> "robotpilot/ros-seminar"
"eddykim777/qtbook" -> "sunkyoo/opencv4cvml"
"eddykim777/qtbook" -> "corazzon/OpenDataWrangling"
"hyunwoongko/kochat" -> "hyunwoongko/kocrawl"
"hyunwoongko/kochat" -> "ko-nlp/Korpora"
"hyunwoongko/kochat" -> "monologg/KoELECTRA"
"hyunwoongko/kochat" -> "Beomi/KcBERT"
"hyunwoongko/kochat" -> "SKT-AI/KoGPT2"
"hyunwoongko/kochat" -> "haven-jeon/KoGPT2-chatbot"
"hyunwoongko/kochat" -> "hyunwoongko/kss"
"hyunwoongko/kochat" -> "kakaobrain/pororo"
"hyunwoongko/kochat" -> "kakaobrain/kogpt"
"hyunwoongko/kochat" -> "nawnoes/WellnessConversation-LanguageModel"
"hyunwoongko/kochat" -> "songys/AwesomeKorean_Data"
"hyunwoongko/kochat" -> "tunib-ai/oslo"
"hyunwoongko/kochat" -> "SKT-AI/KoBART"
"hyunwoongko/kochat" -> "SKTBrain/KoBERT"
"hyunwoongko/kochat" -> "songys/Chatbot_data"
"chaeso/upbitbot" -> "joshephan/upbit_tradingbot"
"chaeso/upbitbot" -> "sharebook-kr/cryptocurrency-trading-bot"
"pilsung-kang/Business-Analytics-IME654-" -> "pilsung-kang/Text-Analytics"
"pilsung-kang/Business-Analytics-IME654-" -> "pilsung-kang/multivariate-data-analysis"
"pilsung-kang/Business-Analytics-IME654-" -> "pilsung-kang/Business-Analytics-ITS504-"
"pilsung-kang/Business-Analytics-IME654-" -> "kh-kim/nlp_with_pytorch_examples"
"pilsung-kang/Business-Analytics-IME654-" -> "aailabkaist/Introduction-to-Artificial-Intelligence-Machine-Learning" ["e"=1]
"pilsung-kang/Business-Analytics-IME654-" -> "ClustProject/KUDataOutlier"
"rickiepark/deep-learning-with-python-notebooks" -> "gilbutITbook/006975"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/python-machine-learning-book-2nd-edition"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/handson-ml"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/introduction_to_ml_with_python"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/handson-ml2"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/do-it-dl"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/GDL_code"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/deep-learning-with-python-2nd"
"rickiepark/deep-learning-with-python-notebooks" -> "deep-diver/Machine-Learning-Yearning-Korean-Translation"
"rickiepark/deep-learning-with-python-notebooks" -> "e9t/nsmc"
"carpedm20/multi-speaker-tacotron-tensorflow" -> "hccho2/Tacotron-Wavenet-Vocoder-Korean"
"carpedm20/multi-speaker-tacotron-tensorflow" -> "hccho2/Tacotron2-Wavenet-Korean-TTS"
"carpedm20/multi-speaker-tacotron-tensorflow" -> "GSByeon/multi-speaker-tacotron-tensorflow"
"carpedm20/multi-speaker-tacotron-tensorflow" -> "keithito/tacotron" ["e"=1]
"carpedm20/multi-speaker-tacotron-tensorflow" -> "Kyubyong/tacotron" ["e"=1]
"carpedm20/multi-speaker-tacotron-tensorflow" -> "NVIDIA/mellotron" ["e"=1]
"carpedm20/multi-speaker-tacotron-tensorflow" -> "r9y9/deepvoice3_pytorch" ["e"=1]
"carpedm20/multi-speaker-tacotron-tensorflow" -> "lifefeel/SpeechSynthesis"
"carpedm20/multi-speaker-tacotron-tensorflow" -> "sokcuri/multi-speaker-tacotron-tensorflow"
"carpedm20/multi-speaker-tacotron-tensorflow" -> "goodatlas/zeroth"
"carpedm20/multi-speaker-tacotron-tensorflow" -> "kakao/khaiii"
"carpedm20/multi-speaker-tacotron-tensorflow" -> "r9y9/wavenet_vocoder" ["e"=1]
"carpedm20/multi-speaker-tacotron-tensorflow" -> "scarletcho/KoG2P"
"carpedm20/multi-speaker-tacotron-tensorflow" -> "syang1993/gst-tacotron" ["e"=1]
"carpedm20/multi-speaker-tacotron-tensorflow" -> "Rayhane-mamah/Tacotron-2" ["e"=1]
"kakao/khaiii" -> "lovit/soynlp"
"kakao/khaiii" -> "konlpy/konlpy"
"kakao/khaiii" -> "SKTBrain/KoBERT"
"kakao/khaiii" -> "e9t/nsmc"
"kakao/khaiii" -> "kakaobrain/pororo"
"kakao/khaiii" -> "datanada/Awesome-Korean-NLP"
"kakao/khaiii" -> "SKT-AI/KoGPT2"
"kakao/khaiii" -> "monologg/KoELECTRA"
"kakao/khaiii" -> "ko-nlp/Korpora"
"kakao/khaiii" -> "open-korean-text/open-korean-text"
"kakao/khaiii" -> "bab2min/Kiwi"
"kakao/khaiii" -> "kakaobrain/kogpt"
"kakao/khaiii" -> "ratsgo/embedding"
"kakao/khaiii" -> "songys/AwesomeKorean_Data"
"kakao/khaiii" -> "Beomi/KcBERT"
"Kyubyong/g2pK" -> "scarletcho/KoG2P"
"Kyubyong/g2pK" -> "HGU-DLLAB/Korean-FastSpeech2-Pytorch"
"Kyubyong/g2pK" -> "SMART-TTS/SMART-G2P"
"Kyubyong/g2pK" -> "likejazz/korean-sentence-splitter"
"Kyubyong/g2pK" -> "hyunwoongko/kss"
"Kyubyong/g2pK" -> "hccho2/Tacotron-Wavenet-Vocoder-Korean"
"Kyubyong/g2pK" -> "JoungheeKim/K-wav2vec"
"Kyubyong/g2pK" -> "hccho2/Tacotron2-Wavenet-Korean-TTS"
"Kyubyong/g2pK" -> "rtzr/Awesome-Korean-Speech-Recognition"
"Kyubyong/g2pK" -> "ko-nlp/Korpora"
"Kyubyong/g2pK" -> "sooftware/kospeech"
"Kyubyong/g2pK" -> "clovaai/ClovaCall"
"idebtor/nowic" -> "hongshin/OperatingSystem"
"idebtor/nowic" -> "idebtor/JoyAI"
"idebtor/nowic" -> "hongshin/DiscreteMath"
"quantylab/systrader" -> "didw/PyTrader"
"quantylab/systrader" -> "didw/quant_trading"
"quantylab/systrader" -> "coreanq/kw_condition"
"quantylab/systrader" -> "quantylab/rltrader"
"sharebook-kr/pybithumb" -> "sharebook-kr/pykorbit"
"sharebook-kr/pybithumb" -> "sharebook-kr/pyupbit"
"lumyjuwon/KoreaNewsCrawler" -> "songys/AwesomeKorean_Data"
"lumyjuwon/KoreaNewsCrawler" -> "eagle705/pytorch-bert-crf-ner"
"lumyjuwon/KoreaNewsCrawler" -> "SKT-AI/KoGPT2"
"lumyjuwon/KoreaNewsCrawler" -> "ratsgo/embedding"
"lumyjuwon/KoreaNewsCrawler" -> "likejazz/korean-sentence-splitter"
"lumyjuwon/KoreaNewsCrawler" -> "monologg/KoBigBird"
"lumyjuwon/KoreaNewsCrawler" -> "ko-nlp/Korpora"
"FinanceData/marcap" -> "FinanceData/OpenDartReader"
"FinanceData/marcap" -> "FinanceData/FinanceDataReader"
"FinanceData/marcap" -> "sharebook-kr/pykrx"
"FinanceData/marcap" -> "quantylab/systrader"
"FinanceData/marcap" -> "josw123/dart-fss"
"FinanceData/marcap" -> "koreainvestment/open-trading-api"
"ratsgo/embedding" -> "lovit/soynlp"
"ratsgo/embedding" -> "Beomi/KcBERT"
"ratsgo/embedding" -> "eagle705/pytorch-bert-crf-ner"
"ratsgo/embedding" -> "SKTBrain/KoBERT"
"ratsgo/embedding" -> "songys/AwesomeKorean_Data"
"ratsgo/embedding" -> "ko-nlp/Korpora"
"ratsgo/embedding" -> "seopbo/nlp_classification"
"ratsgo/embedding" -> "e9t/nsmc"
"ratsgo/embedding" -> "KLUE-benchmark/KLUE"
"ratsgo/embedding" -> "datanada/Awesome-Korean-NLP"
"ratsgo/embedding" -> "monologg/KoELECTRA"
"ratsgo/embedding" -> "yeontaek/BERT-Korean-Model"
"ratsgo/embedding" -> "SKT-AI/KoGPT2"
"ratsgo/embedding" -> "SKT-AI/KoBART"
"ratsgo/embedding" -> "kocohub/korean-hate-speech"
"goodatlas/zeroth" -> "clovaai/ClovaCall"
"goodatlas/zeroth" -> "sooftware/kospeech"
"goodatlas/zeroth" -> "rtzr/Awesome-Korean-Speech-Recognition"
"goodatlas/zeroth" -> "Kyubyong/g2pK"
"goodatlas/zeroth" -> "scarletcho/KoG2P"
"goodatlas/zeroth" -> "datanada/Awesome-Korean-NLP"
"goodatlas/zeroth" -> "coolengineer/sejong-corpus"
"goodatlas/zeroth" -> "hccho2/Tacotron-Wavenet-Vocoder-Korean"
"goodatlas/zeroth" -> "scarletcho/KoLM"
"goodatlas/zeroth" -> "kakao/khaiii"
"goodatlas/zeroth" -> "lovit/soynlp"
"goodatlas/zeroth" -> "naver/kor2vec"
"goodatlas/zeroth" -> "monologg/KoELECTRA"
"goodatlas/zeroth" -> "likejazz/korean-sentence-splitter"
"goodatlas/zeroth" -> "carpedm20/multi-speaker-tacotron-tensorflow"
"dhlee347/pytorchic-bert" -> "graykode/ALBERT-Pytorch" ["e"=1]
"dhlee347/pytorchic-bert" -> "monologg/KoELECTRA"
"dhlee347/pytorchic-bert" -> "datanada/Awesome-Korean-NLP"
"dhlee347/pytorchic-bert" -> "seopbo/nlp_classification"
"dhlee347/pytorchic-bert" -> "kakaobrain/kor-nlu-datasets"
"dhlee347/pytorchic-bert" -> "SKT-AI/KoGPT2"
"dhlee347/pytorchic-bert" -> "eagle705/pytorch-bert-crf-ner"
"dhlee347/pytorchic-bert" -> "songys/AwesomeKorean_Data"
"dhlee347/pytorchic-bert" -> "ratsgo/embedding"
"dhlee347/pytorchic-bert" -> "Huffon/nlp-startups"
"dhlee347/pytorchic-bert" -> "kakaobrain/nlp-paper-reading"
"dhlee347/pytorchic-bert" -> "SKTBrain/KoBERT"
"dhlee347/pytorchic-bert" -> "codertimo/BERT-pytorch" ["e"=1]
"dhlee347/pytorchic-bert" -> "e9t/nsmc"
"dhlee347/pytorchic-bert" -> "Beomi/KcBERT"
"quantylab/rltrader" -> "quantylab/systrader"
"quantylab/rltrader" -> "sharebook-kr/pykrx"
"quantylab/rltrader" -> "FinanceData/FinanceDataReader"
"quantylab/rltrader" -> "elbakramer/koapy"
"quantylab/rltrader" -> "INVESTAR/StockAnalysisInPython"
"quantylab/rltrader" -> "FinanceData/OpenDartReader"
"quantylab/rltrader" -> "wikibook/stock-trading"
"quantylab/rltrader" -> "pystockhub/book"
"quantylab/rltrader" -> "quant4junior/algoTrade"
"quantylab/rltrader" -> "programgarden/book"
"quantylab/rltrader" -> "koreainvestment/open-trading-api"
"quantylab/rltrader" -> "rlcode/reinforcement-learning-kr"
"quantylab/rltrader" -> "gyusu/Creon-Datareader"
"quantylab/rltrader" -> "breadum/kiwoom"
"quantylab/rltrader" -> "FinanceData/marcap"
"zzsza/Datascience-Interview-Questions" -> "boost-devs/ai-tech-interview"
"zzsza/Datascience-Interview-Questions" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"zzsza/Datascience-Interview-Questions" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"zzsza/Datascience-Interview-Questions" -> "zzsza/Kaggle-knowhow"
"zzsza/Datascience-Interview-Questions" -> "teddylee777/machine-learning"
"zzsza/Datascience-Interview-Questions" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"zzsza/Datascience-Interview-Questions" -> "SKTBrain/KoBERT"
"zzsza/Datascience-Interview-Questions" -> "lovit/soynlp"
"zzsza/Datascience-Interview-Questions" -> "monologg/KoELECTRA"
"zzsza/Datascience-Interview-Questions" -> "songys/AwesomeKorean_Data"
"zzsza/Datascience-Interview-Questions" -> "jungwoo-ha/WeeklyArxivTalk"
"zzsza/Datascience-Interview-Questions" -> "KLUE-benchmark/KLUE"
"zzsza/Datascience-Interview-Questions" -> "WegraLee/deep-learning-from-scratch"
"zzsza/Datascience-Interview-Questions" -> "kakaobrain/pororo"
"zzsza/Datascience-Interview-Questions" -> "kakaobrain/kogpt"
"hongshin/DiscreteMath" -> "hongshin/OperatingSystem"
"hongshin/DiscreteMath" -> "hongshin/LearningC"
"hongshin/DiscreteMath" -> "idebtor/nowic"
"hongshin/DiscreteMath" -> "hongshin/interesting-articles-in-software-engineering"
"hongshin/DiscreteMath" -> "jongwoojeff/DiscreteMathematics"
"hongshin/DiscreteMath" -> "idebtor/JoyAI"
"hongshin/DiscreteMath" -> "handong-life/college-timetable"
"korquad/korquad.github.io" -> "enlipleai/kor_pretrain_LM"
"visionNoob/CS231N_17_KOR_SUB" -> "deep-diver/Machine-Learning-Yearning-Korean-Translation"
"visionNoob/CS231N_17_KOR_SUB" -> "WegraLee/deep-learning-from-scratch"
"visionNoob/CS231N_17_KOR_SUB" -> "zzsza/Kaggle-knowhow"
"visionNoob/CS231N_17_KOR_SUB" -> "GunhoChoi/PyTorch-FastCampus"
"visionNoob/CS231N_17_KOR_SUB" -> "zzsza/Datascience-Interview-Questions"
"visionNoob/CS231N_17_KOR_SUB" -> "golbin/TensorFlow-Tutorials"
"visionNoob/CS231N_17_KOR_SUB" -> "jungwoo-ha/WeeklyArxivTalk"
"visionNoob/CS231N_17_KOR_SUB" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"visionNoob/CS231N_17_KOR_SUB" -> "aikorea/cs231n"
"visionNoob/CS231N_17_KOR_SUB" -> "deeplearningzerotoall/TensorFlow"
"visionNoob/CS231N_17_KOR_SUB" -> "heartcored98/Standalone-DeepLearning"
"visionNoob/CS231N_17_KOR_SUB" -> "reinforcement-learning-kr/how_to_study_rl"
"visionNoob/CS231N_17_KOR_SUB" -> "KerasKorea/KEKOxTutorial"
"visionNoob/CS231N_17_KOR_SUB" -> "boost-devs/ai-tech-interview"
"visionNoob/CS231N_17_KOR_SUB" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"reinforcement-learning-kr/how_to_study_rl" -> "rlcode/reinforcement-learning-kr"
"reinforcement-learning-kr/how_to_study_rl" -> "utilForever/rl-paper-study"
"reinforcement-learning-kr/how_to_study_rl" -> "seungeunrho/RLfrombasics"
"reinforcement-learning-kr/how_to_study_rl" -> "Junyoungpark/ReinforcementLearningAtoZ"
"reinforcement-learning-kr/how_to_study_rl" -> "reinforcement-learning-kr/Unity_ML_Agents"
"reinforcement-learning-kr/how_to_study_rl" -> "rlcode/reinforcement-learning-kr-v2"
"reinforcement-learning-kr/how_to_study_rl" -> "dongminlee94/Samsung-DRL-Code"
"reinforcement-learning-kr/how_to_study_rl" -> "taeoh-kim/pr12"
"reinforcement-learning-kr/how_to_study_rl" -> "zzsza/Kaggle-knowhow"
"reinforcement-learning-kr/how_to_study_rl" -> "hunkim/ReinforcementZeroToAll"
"reinforcement-learning-kr/how_to_study_rl" -> "reinforcement-learning-kr/Unity_ML_Agents_2.0"
"reinforcement-learning-kr/how_to_study_rl" -> "jungwoo-ha/WeeklyArxivTalk"
"reinforcement-learning-kr/how_to_study_rl" -> "reinforcement-learning-kr/rl_bootcamp"
"reinforcement-learning-kr/how_to_study_rl" -> "heartcored98/Standalone-DeepLearning"
"reinforcement-learning-kr/how_to_study_rl" -> "zzsza/Deep_Learning_starting_with_the_latest_papers"
"hongshin/OperatingSystem" -> "hongshin/LearningC"
"hongshin/OperatingSystem" -> "hongshin/interesting-articles-in-software-engineering"
"hongshin/OperatingSystem" -> "callee2006/2019-Winter-HGU-Machine-Learing-Camp"
"hongshin/OperatingSystem" -> "idebtor/JoyAI"
"sunkyoo/opencv4cvml" -> "gilbutITbook/006939"
"idebtor/JoyAI" -> "idebtor/KMOOC-ML"
"idebtor/JoyAI" -> "hongshin/OperatingSystem"
"deeplearningzerotoall/TensorFlow" -> "deeplearningzerotoall/season2"
"deeplearningzerotoall/TensorFlow" -> "deeplearningzerotoall/PyTorch"
"deeplearningzerotoall/TensorFlow" -> "zzsza/Kaggle-knowhow"
"deeplearningzerotoall/TensorFlow" -> "KerasKorea/KEKOxTutorial"
"deeplearningzerotoall/TensorFlow" -> "visionNoob/CS231N_17_KOR_SUB"
"deeplearningzerotoall/TensorFlow" -> "d2l-ai/d2l-ko"
"deeplearningzerotoall/TensorFlow" -> "ratsgo/embedding"
"deeplearningzerotoall/TensorFlow" -> "NLP-kr/tensorflow-ml-nlp"
"deeplearningzerotoall/TensorFlow" -> "rickiepark/handson-ml"
"Kyubyong/dl_career_faq" -> "naver/nlp-challenge"
"lovit/python_ml4nlp" -> "lovit/textmining_dataset"
"PyTorchKorea/tutorials-kr" -> "Beomi/KcBERT"
"PyTorchKorea/tutorials-kr" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"PyTorchKorea/tutorials-kr" -> "SKT-AI/KoGPT2"
"PyTorchKorea/tutorials-kr" -> "ko-nlp/Korpora"
"PyTorchKorea/tutorials-kr" -> "monologg/KoBERT-Transformers"
"PyTorchKorea/tutorials-kr" -> "boost-devs/ai-tech-interview"
"PyTorchKorea/tutorials-kr" -> "KLUE-benchmark/KLUE"
"PyTorchKorea/tutorials-kr" -> "kakaobrain/nlp-paper-reading"
"PyTorchKorea/tutorials-kr" -> "heartcored98/Standalone-DeepLearning"
"PyTorchKorea/tutorials-kr" -> "ukairia777/tensorflow-nlp-tutorial"
"PyTorchKorea/tutorials-kr" -> "changukshin/Awesome-Korean-NLP-Papers"
"PyTorchKorea/tutorials-kr" -> "songys/AwesomeKorean_Data"
"PyTorchKorea/tutorials-kr" -> "SKT-AI/KoBART"
"PyTorchKorea/tutorials-kr" -> "SKTBrain/KoBERT"
"PyTorchKorea/tutorials-kr" -> "nawnoes/WellnessConversation-LanguageModel"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "GunhoChoi/PyTorch-FastCampus"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "visionNoob/CS231N_17_KOR_SUB"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "deep-diver/fastai-course-korean"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "nmhkahn/deep_learning_tutorial"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "tensorflowkorea/tensorflow-kr"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "sjchoi86/dl_tutorials_10weeks"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "KerasKorea/KEKOxTutorial"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "deep-diver/DeepModels"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "golbin/TensorFlow-Tutorials"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "seopbo/nlp_classification"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "Curt-Park/reinforcement_learning_an_introduction"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "jskDr/keraspp"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "bzantium/nlp-tensorflow"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "rickiepark/deep-learning-with-python-notebooks"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "callee2006/2019-Winter-HGU-Machine-Learing-Camp"
"rickiepark/do-it-dl" -> "rickiepark/python-machine-learning-book-2nd-edition"
"deep-diver/CIFAR10-img-classification-tensorflow" -> "deep-diver/DeepModels"
"deep-diver/CIFAR10-img-classification-tensorflow" -> "deep-diver/fastai-course-korean"
"bzantium/nlp-tensorflow" -> "bzantium/chatbot-seminar"
"bzantium/nlp-tensorflow" -> "bzantium/simplex-method-matlab"
"jskDr/keraspp" -> "GunhoChoi/PyTorch-FastCampus"
"jskDr/keraspp" -> "nmhkahn/deep_learning_tutorial"
"spellcheck-ko/hunspell-dict-ko" -> "changwoo/hunspell-dict-ko"
"spellcheck-ko/hunspell-dict-ko" -> "ssut/py-hanspell"
"spellcheck-ko/hunspell-dict-ko" -> "9beach/hanspell"
"spellcheck-ko/hunspell-dict-ko" -> "korean-input/issues" ["e"=1]
"spellcheck-ko/hunspell-dict-ko" -> "open-korean-text/open-korean-text"
"spellcheck-ko/hunspell-dict-ko" -> "sublee/hangulize"
"southkorea/southkorea-postal-codes" -> "southkorea/southkorea-population"
"CubbyFlow/CubbyFlow" -> "utilForever/RosettaStone"
"CubbyFlow/CubbyFlow" -> "utilForever/CubbyFlow-v1"
"CubbyFlow/CubbyFlow" -> "utilForever/CubbyTower"
"CubbyFlow/CubbyFlow" -> "utilForever/CubbyDNN"
"CubbyFlow/CubbyFlow" -> "OxideEngine/Oxide"
"CubbyFlow/CubbyFlow" -> "utilForever/2021-KAIST-Include-AlphaGoZero"
"CubbyFlow/CubbyFlow" -> "CppKorea/Cpp20Study"
"CubbyFlow/CubbyFlow" -> "utilForever/baba-is-auto"
"CubbyFlow/CubbyFlow" -> "doyubkim/fluid-engine-dev" ["e"=1]
"CubbyFlow/CubbyFlow" -> "utilForever/CGStudy"
"CubbyFlow/CubbyFlow" -> "CubbyFlow/RustyFlow"
"sjhwang82/AdvancedML" -> "sjhwang82/DeepLearning"
"sjhwang82/AdvancedML" -> "jungwoo-ha/WeeklyArxivTalk"
"sjhwang82/AdvancedML" -> "haebeom-lee/l2b" ["e"=1]
"sjhwang82/AdvancedML" -> "seominjoon/kaist-ai605"
"sjhwang82/AdvancedML" -> "sjhwang82/GenerativeAI"
"sjhwang82/AdvancedML" -> "DAVIAN-Lab/Paper-study" ["e"=1]
"sjhwang82/AdvancedML" -> "kwonminki/One-sentence_Diffusion_summary"
"sjhwang82/AdvancedML" -> "juho-lee/bnp" ["e"=1]
"sjhwang82/AdvancedML" -> "clovaai/AdamP" ["e"=1]
"sjhwang82/AdvancedML" -> "CownowAn/DiffusionNAG" ["e"=1]
"sharebook-kr/pykrx" -> "FinanceData/FinanceDataReader"
"sharebook-kr/pykrx" -> "FinanceData/OpenDartReader"
"sharebook-kr/pykrx" -> "josw123/dart-fss"
"sharebook-kr/pykrx" -> "koreainvestment/open-trading-api"
"sharebook-kr/pykrx" -> "FinanceData/marcap"
"sharebook-kr/pykrx" -> "Soju06/python-kis"
"sharebook-kr/pykrx" -> "hyunyulhenry/quant_py"
"sharebook-kr/pykrx" -> "quantylab/rltrader"
"sharebook-kr/pykrx" -> "sharebook-kr/mojito"
"sharebook-kr/pykrx" -> "INVESTAR/StockAnalysisInPython"
"sharebook-kr/pykrx" -> "WooilJeong/PublicDataReader"
"sharebook-kr/pykrx" -> "elbakramer/koapy"
"sharebook-kr/pykrx" -> "sharebook-kr/pykiwoom"
"sharebook-kr/pykrx" -> "sharebook-kr/pyupbit"
"sharebook-kr/pykrx" -> "quantylab/systrader"
"NLP-kr/tensorflow-ml-nlp" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"NLP-kr/tensorflow-ml-nlp" -> "seopbo/nlp_classification"
"NLP-kr/tensorflow-ml-nlp" -> "modulabs/NLP-bootcamp"
"NLP-kr/tensorflow-ml-nlp" -> "Beomi/KcBERT"
"NLP-kr/tensorflow-ml-nlp" -> "pingpong-ai/chatspace"
"NLP-kr/tensorflow-ml-nlp" -> "e9t/nsmc"
"NLP-kr/tensorflow-ml-nlp" -> "SKT-AI/KoBART"
"NLP-kr/tensorflow-ml-nlp" -> "lovit/KR-WordRank"
"seopbo/nlp_classification" -> "modulabs/NLP-bootcamp"
"seopbo/nlp_classification" -> "monologg/DistilKoBERT"
"seopbo/nlp_classification" -> "lovit/textmining-tutorial"
"seopbo/nlp_classification" -> "Beomi/KcBERT"
"seopbo/nlp_classification" -> "ratsgo/embedding"
"seopbo/nlp_classification" -> "changukshin/Awesome-Korean-NLP-Papers"
"seopbo/nlp_classification" -> "lovit/fastcampus_textml_blogs"
"seopbo/nlp_classification" -> "naver/claf"
"seopbo/nlp_classification" -> "lovit/python_ml4nlp"
"seopbo/nlp_classification" -> "seopbo/nlp_tutorials"
"seopbo/nlp_classification" -> "ko-nlp/Korpora"
"seopbo/nlp_classification" -> "coolengineer/sejong-corpus"
"seopbo/nlp_classification" -> "kakaobrain/nlp-paper-reading"
"seopbo/nlp_classification" -> "monologg/KoELECTRA"
"seopbo/nlp_classification" -> "warnikchow/3i4k"
"idebtor/KMOOC-ML" -> "idebtor/JoyAI"
"9beach/hanspell" -> "9beach/vscode-hanspell" ["e"=1]
"9beach/hanspell" -> "ssut/py-hanspell"
"9beach/hanspell" -> "9beach/hanspell-hs" ["e"=1]
"gilbutITbook/006975" -> "rickiepark/deep-learning-with-python-notebooks"
"park1200656/KnuSentiLex" -> "mrlee23/KoreanSentimentAnalyzer"
"park1200656/KnuSentiLex" -> "coolengineer/sejong-corpus"
"park1200656/KnuSentiLex" -> "lovit/customized_konlpy"
"park1200656/KnuSentiLex" -> "lovit/KR-WordRank"
"park1200656/KnuSentiLex" -> "bab2min/corpus"
"park1200656/KnuSentiLex" -> "koshort/pyeunjeon"
"park1200656/KnuSentiLex" -> "e9t/nsmc"
"park1200656/KnuSentiLex" -> "Beomi/KcBERT"
"park1200656/KnuSentiLex" -> "Beomi/KcELECTRA"
"sharebook-kr/pykiwoom" -> "breadum/kiwoom"
"sharebook-kr/pykiwoom" -> "sharebook-kr/mojito"
"sharebook-kr/pykiwoom" -> "elbakramer/koapy"
"sharebook-kr/pykiwoom" -> "BlueWhaleKo/kiwoom_api_handler"
"kakaobrain/word2word" -> "kakaobrain/kor-nlu-datasets"
"kakaobrain/word2word" -> "bitextor/bicleaner" ["e"=1]
"kakaobrain/word2word" -> "kakaobrain/kortok"
"kakaobrain/word2word" -> "Kyubyong/KoParadigm"
"suparklingmin/lecture" -> "sgunderscore/hatescore-korean-hate-speech"
"devunt/10th-amendment" -> "Curzy/Wolsemap"
"devunt/10th-amendment" -> "puzzlet/constitution-kr"
"devunt/10th-amendment" -> "akic4op4/GNE"
"puzzlet/constitution-kr" -> "devunt/10th-amendment"
"kh-kim/nlp_with_pytorch_examples" -> "seopbo/first_project_nlp"
"kh-kim/nlp_with_pytorch_examples" -> "kh-kim/simple-ntc"
"kh-kim/nlp_with_pytorch_examples" -> "kh-kim/simple-nmt"
"deep-diver/EN-FR-MLT-tensorflow" -> "deep-diver/DeepModels"
"GSByeon/multi-speaker-tacotron-tensorflow" -> "carpedm20/multi-speaker-tacotron-tensorflow"
"GSByeon/multi-speaker-tacotron-tensorflow" -> "kastnerkyle/multi-speaker-tacotron-tensorflow"
"junyoung-jamong/KiwoomOS" -> "pystockhub/pykiwoom"
"kmounlp/NER" -> "machinereading/KoreanNERCorpus"
"kmounlp/NER" -> "monologg/KoBERT-Transformers"
"zzsza/Kaggle-knowhow" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"zzsza/Kaggle-knowhow" -> "zzsza/Datascience-Interview-Questions"
"zzsza/Kaggle-knowhow" -> "zzsza/kyle-school"
"zzsza/Kaggle-knowhow" -> "stevekwon211/Hello-Kaggle-Guide-KOR"
"zzsza/Kaggle-knowhow" -> "GunhoChoi/PyTorch-FastCampus"
"zzsza/Kaggle-knowhow" -> "ratsgo/embedding"
"zzsza/Kaggle-knowhow" -> "visionNoob/CS231N_17_KOR_SUB"
"zzsza/Kaggle-knowhow" -> "Kyubyong/dl_career_faq"
"zzsza/Kaggle-knowhow" -> "corazzon/KaggleStruggle"
"zzsza/Kaggle-knowhow" -> "keon/3-min-pytorch"
"zzsza/Kaggle-knowhow" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"zzsza/Kaggle-knowhow" -> "boost-devs/ai-tech-interview"
"zzsza/Kaggle-knowhow" -> "seopbo/nlp_classification"
"zzsza/Kaggle-knowhow" -> "YBIGTA/DeepNLP-Study"
"zzsza/Kaggle-knowhow" -> "teddylee777/machine-learning"
"rickiepark/handson-ml" -> "rickiepark/introduction_to_ml_with_python"
"rickiepark/handson-ml" -> "rickiepark/handson-ml2"
"rickiepark/handson-ml" -> "rickiepark/deep-learning-with-python-notebooks"
"rickiepark/handson-ml" -> "wikibook/tf2"
"rickiepark/handson-ml" -> "WegraLee/deep-learning-from-scratch"
"rickiepark/handson-ml" -> "visionNoob/CS231N_17_KOR_SUB"
"rickiepark/handson-ml" -> "rickiepark/GDL_code"
"rickiepark/handson-ml" -> "deeplearningzerotoall/TensorFlow"
"rickiepark/handson-ml" -> "insightbook/data-science-from-scratch"
"rickiepark/handson-ml" -> "ratsgo/embedding"
"rickiepark/handson-ml" -> "GunhoChoi/PyTorch-FastCampus"
"rickiepark/handson-ml" -> "rickiepark/python-machine-learning-book-2nd-edition"
"rickiepark/handson-ml" -> "zzsza/Kaggle-knowhow"
"rickiepark/handson-ml" -> "deeplearningzerotoall/season2"
"rickiepark/handson-ml" -> "kakao/khaiii"
"changukshin/Awesome-Korean-NLP-Papers" -> "seopbo/nlp_classification"
"changukshin/Awesome-Korean-NLP-Papers" -> "datanada/Awesome-Korean-NLP"
"changukshin/Awesome-Korean-NLP-Papers" -> "kakaobrain/kor-nlu-datasets"
"changukshin/Awesome-Korean-NLP-Papers" -> "monologg/DistilKoBERT"
"changukshin/Awesome-Korean-NLP-Papers" -> "snunlp/KR-BERT"
"changukshin/Awesome-Korean-NLP-Papers" -> "monologg/KoELECTRA"
"changukshin/Awesome-Korean-NLP-Papers" -> "Beomi/KcBERT"
"changukshin/Awesome-Korean-NLP-Papers" -> "KLUE-benchmark/KLUE"
"changukshin/Awesome-Korean-NLP-Papers" -> "monologg/KoBERT-Transformers"
"changukshin/Awesome-Korean-NLP-Papers" -> "ko-nlp/Korpora"
"changukshin/Awesome-Korean-NLP-Papers" -> "SungjoonPark/KoreanWordVectors"
"changukshin/Awesome-Korean-NLP-Papers" -> "likejazz/korean-sentence-splitter"
"changukshin/Awesome-Korean-NLP-Papers" -> "naver/nlp-challenge"
"changukshin/Awesome-Korean-NLP-Papers" -> "koalanlp/koalanlp"
"changukshin/Awesome-Korean-NLP-Papers" -> "Huffon/nlp-startups"
"naver/nlp-challenge" -> "coolengineer/sejong-corpus"
"naver/nlp-challenge" -> "naver/claf"
"naver/nlp-challenge" -> "warnikchow/3i4k"
"naver/nlp-challenge" -> "kmounlp/NER"
"naver/nlp-challenge" -> "kakaobrain/kor-nlu-datasets"
"naver/nlp-challenge" -> "monologg/KoELECTRA"
"naver/nlp-challenge" -> "eagle705/pytorch-bert-crf-ner"
"naver/nlp-challenge" -> "changukshin/Awesome-Korean-NLP-Papers"
"naver/nlp-challenge" -> "jungyeul/korean-parallel-corpora"
"naver/nlp-challenge" -> "monologg/KoBERT-Transformers"
"kakao-arena/brunch-article-recommendation" -> "JungoKim/brunch_nafma"
"kh-kim/simple-nmt" -> "kh-kim/simple-ntc"
"kh-kim/simple-nmt" -> "kh-kim/nlp_with_pytorch_examples"
"reinforcement-learning-kr/Unity_ML_Agents" -> "reinforcement-learning-kr/Unity_ML_Agents_2.0"
"reinforcement-learning-kr/Unity_ML_Agents" -> "reinforcement-learning-kr/rl_bootcamp"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "illidanlab/Simulator"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "mktal/kddcup-starting-kit"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "zzsza/kyle-school"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "hitsuji5/fleet-sim"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "zzsza/bigquery-tutorial"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "liulingbo918/CSTN" ["e"=1]
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "LevinJ/Supply-demand-forecasting"
"deeplearningzerotoall/season2" -> "deeplearningzerotoall/TensorFlow"
"songys/Chatbot_data" -> "nawnoes/WellnessConversation-LanguageModel"
"songys/Chatbot_data" -> "songys/AwesomeKorean_Data"
"songys/Chatbot_data" -> "ko-nlp/Korpora"
"songys/Chatbot_data" -> "haven-jeon/KoGPT2-chatbot"
"songys/Chatbot_data" -> "monologg/KoELECTRA"
"songys/Chatbot_data" -> "KB-AI-Research/KB-ALBERT"
"songys/Chatbot_data" -> "Beomi/KcBERT"
"songys/Chatbot_data" -> "kakaobrain/kor-nlu-datasets"
"songys/Chatbot_data" -> "SKT-AI/KoGPT2"
"songys/Chatbot_data" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"songys/Chatbot_data" -> "KLUE-benchmark/KLUE"
"songys/Chatbot_data" -> "kocohub/korean-hate-speech"
"songys/Chatbot_data" -> "kakaobrain/kogpt"
"songys/Chatbot_data" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"songys/Chatbot_data" -> "monologg/DistilKoBERT"
"gyusu/Creon-Datareader" -> "gyusu/Kiwoom_datareader"
"gyusu/Creon-Datareader" -> "quantylab/systrader"
"gyusu/Creon-Datareader" -> "elbakramer/koapy"
"gyusu/Creon-Datareader" -> "taehyunjo90/gatherer"
"josw123/dart-scraper" -> "josw123/dart-fss-classifier"
"Huffon/NLP101" -> "kakaobrain/nlp-paper-reading"
"Huffon/NLP101" -> "Huffon/nlp-startups"
"Huffon/NLP101" -> "monologg/KoELECTRA"
"Huffon/NLP101" -> "seopbo/nlp_classification"
"Huffon/NLP101" -> "jiphyeonjeon/season1"
"Huffon/NLP101" -> "Huffon/nlp-various-tutorials"
"Huffon/NLP101" -> "SKT-AI/KoBART"
"Huffon/NLP101" -> "ko-nlp/Korpora"
"Huffon/NLP101" -> "kakaobrain/kor-nlu-datasets"
"Huffon/NLP101" -> "KLUE-benchmark/KLUE"
"Huffon/NLP101" -> "naver/kor2vec"
"Huffon/NLP101" -> "uoneway/Text-Summarization-Repo"
"Huffon/NLP101" -> "changukshin/Awesome-Korean-NLP-Papers"
"Huffon/NLP101" -> "songys/AwesomeKorean_Data"
"Huffon/NLP101" -> "datanada/Awesome-Korean-NLP"
"WICWIU/WICWIU" -> "callee2006/2019-Winter-HGU-Machine-Learing-Camp"
"WICWIU/WICWIU" -> "callee2006/HGUNeuralNetworks"
"WICWIU/WICWIU" -> "HGU-DLLAB/Korean-FastSpeech2-Pytorch"
"keon/3-min-pytorch" -> "GunhoChoi/PyTorch-FastCampus"
"keon/3-min-pytorch" -> "NLP-kr/tensorflow-ml-nlp"
"keon/3-min-pytorch" -> "coolengineer/sejong-corpus"
"keon/3-min-pytorch" -> "zzsza/Kaggle-knowhow"
"keon/3-min-pytorch" -> "songys/CS224N_17_KOR_SUB"
"keon/3-min-pytorch" -> "Beomi/KcBERT"
"keon/3-min-pytorch" -> "pingpong-ai/chatspace"
"keon/3-min-pytorch" -> "lovit/KR-WordRank"
"keon/3-min-pytorch" -> "lovit/customized_konlpy"
"keon/3-min-pytorch" -> "koalanlp/koalanlp"
"hangulize/hangulize" -> "sublee/hangulize"
"hangulize/hangulize" -> "muik/transliteration"
"hangulize/hangulize" -> "suapapa/go_hangul"
"lovit/textmining-tutorial" -> "lovit/python_ml4nlp"
"lovit/textmining-tutorial" -> "seopbo/nlp_classification"
"lovit/textmining-tutorial" -> "lovit/soynlp"
"lovit/textmining-tutorial" -> "lovit/KR-WordRank"
"lovit/textmining-tutorial" -> "lovit/textmining_dataset"
"lovit/textmining-tutorial" -> "ratsgo/embedding"
"lovit/textmining-tutorial" -> "kocohub/korean-hate-speech"
"lovit/textmining-tutorial" -> "lovit/customized_konlpy"
"lovit/textmining-tutorial" -> "datanada/Awesome-Korean-NLP"
"lovit/textmining-tutorial" -> "lovit/fastcampus_textml_blogs"
"lovit/textmining-tutorial" -> "ko-nlp/Korpora"
"lovit/textmining-tutorial" -> "e9t/nsmc"
"lovit/textmining-tutorial" -> "modulabs/NLP-bootcamp"
"lovit/textmining-tutorial" -> "MrBananaHuman/KorNlpTutorial"
"lovit/textmining-tutorial" -> "lovit/soyspacing"
"hongshin/LearningC" -> "hongshin/interesting-articles-in-software-engineering"
"hongshin/LearningC" -> "hongshin/DataStructures"
"callee2006/2019-Winter-HGU-Machine-Learing-Camp" -> "WICWIU/WICWIU"
"callee2006/2019-Winter-HGU-Machine-Learing-Camp" -> "callee2006/MachineLearning"
"callee2006/2019-Winter-HGU-Machine-Learing-Camp" -> "hongshin/OperatingSystem"
"lqez/awesome-hangul" -> "sublee/hangulize"
"lqez/awesome-hangul" -> "dahlia/seonbi"
"lqez/awesome-hangul" -> "kaniblu/hangul-utils"
"lqez/awesome-hangul" -> "disjukr/just-news" ["e"=1]
"lqez/awesome-hangul" -> "hangulize/hangulize"
"lqez/awesome-hangul" -> "kocohub/korean-hate-speech"
"lqez/awesome-hangul" -> "what-studio/tossi"
"lqez/awesome-hangul" -> "RanolP/ko-translation-terms"
"lqez/awesome-hangul" -> "nunalang/nuna" ["e"=1]
"YBIGTA/Data-Science" -> "YBIGTA/data-science-2018"
"corazzon/cracking-the-pandas-cheat-sheet" -> "corazzon/open-data-analysis-basic"
"SungjoonPark/KoreanWordVectors" -> "coolengineer/sejong-corpus"
"SungjoonPark/KoreanWordVectors" -> "naver/claf"
"SungjoonPark/KoreanWordVectors" -> "dongjun-Lee/kor2vec"
"rickiepark/python-machine-learning-book-2nd-edition" -> "gilbutITbook/007022"
"rickiepark/python-machine-learning-book-2nd-edition" -> "rickiepark/machine-learning-with-python-cookbook"
"illidanlab/Simulator" -> "hitsuji5/fleet-sim"
"illidanlab/Simulator" -> "szlhl1040/Vehicles-Dispatch-Simulator"
"illidanlab/Simulator" -> "mktal/kddcup-starting-kit"
"illidanlab/Simulator" -> "Jinjiarui/CoRide"
"illidanlab/Simulator" -> "Autumncow/Order-dispatch"
"illidanlab/Simulator" -> "zzsza/Awesome-Mobility-Machine-Learning-Contents"
"illidanlab/Simulator" -> "juhyeonkim95/TaxiSimulatorOnGraph"
"illidanlab/Simulator" -> "mlii/mfrl" ["e"=1]
"yeontaek/BERT-Korean-Model" -> "yeontaek/BERT-MECAB-Korean-Model"
"naver/claf" -> "tbai2019/HanBert-54k-N"
"naver/claf" -> "naver/nlp-challenge"
"naver/claf" -> "monologg/HanBert-Transformers"
"naver/claf" -> "SungjoonPark/KoreanWordVectors"
"naver/claf" -> "naver/kor2vec"
"naver/claf" -> "seominjoon/piqa" ["e"=1]
"naver/claf" -> "coolengineer/sejong-corpus"
"naver/claf" -> "emorynlp/ud-korean"
"naver/claf" -> "monologg/DistilKoBERT"
"naver/claf" -> "warnikchow/dlk2nlp"
"naver/claf" -> "seopbo/nlp_classification"
"naver/claf" -> "kakaobrain/kortok"
"naver/claf" -> "clovaai/subword-qac"
"kh-kim/simple-ntc" -> "kh-kim/simple-nmt"
"kh-kim/simple-ntc" -> "kh-kim/nlp_with_pytorch_examples"
"deep-diver/Soccer-Ball-Detection-YOLOv2" -> "deep-diver/Object-Detection-YOLOv2-Darkflow"
"deep-diver/Soccer-Ball-Detection-YOLOv2" -> "deep-diver/fastai-course-korean"
"devsisters/multi-speaker-tacotron-tensorflow" -> "akic4op4/GNE"
"devsisters/multi-speaker-tacotron-tensorflow" -> "sjchoi86/dl_tutorials_10weeks"
"devsisters/multi-speaker-tacotron-tensorflow" -> "TensorFlowKR/dlcampjeju"
"devsisters/multi-speaker-tacotron-tensorflow" -> "GSByeon/multi-speaker-tacotron-tensorflow"
"devsisters/multi-speaker-tacotron-tensorflow" -> "Kyubyong/deepvoice3" ["e"=1]
"devsisters/multi-speaker-tacotron-tensorflow" -> "hunkim/KaggleZeroToAll"
"devsisters/multi-speaker-tacotron-tensorflow" -> "golbin/TensorFlow-Tutorials"
"devsisters/multi-speaker-tacotron-tensorflow" -> "carpedm20/multi-speaker-tacotron-tensorflow"
"devsisters/multi-speaker-tacotron-tensorflow" -> "muik/transliteration"
"haven-jeon/KoSpacing" -> "forkonlp/DNH4"
"sharebook-kr/cryptocurrency-trading-bot" -> "chaeso/upbitbot"
"CppKorea/CppTemplateStudy" -> "CppKorea/DesignPattern"
"CppKorea/CppTemplateStudy" -> "CppKorea/OptimizedCppStudy"
"CppKorea/CppTemplateStudy" -> "CppKorea/CppConcurrencyInAction"
"CppKorea/CppTemplateStudy" -> "CppKorea/Cpp20Study"
"CppKorea/CppTemplateStudy" -> "jacking75/boost_asio_sample"
"hccho2/Tacotron2-Wavenet-Korean-TTS" -> "hccho2/Tacotron-Wavenet-Vocoder-Korean"
"hccho2/Tacotron2-Wavenet-Korean-TTS" -> "HGU-DLLAB/Korean-FastSpeech2-Pytorch"
"hccho2/Tacotron2-Wavenet-Korean-TTS" -> "carpedm20/multi-speaker-tacotron-tensorflow"
"hccho2/Tacotron2-Wavenet-Korean-TTS" -> "clovaai/ClovaCall"
"hccho2/Tacotron2-Wavenet-Korean-TTS" -> "Kyubyong/g2pK"
"hccho2/Tacotron2-Wavenet-Korean-TTS" -> "lifefeel/SpeechSynthesis"
"hccho2/Tacotron-Wavenet-Vocoder-Korean" -> "hccho2/Tacotron2-Wavenet-Korean-TTS"
"hccho2/Tacotron-Wavenet-Vocoder-Korean" -> "carpedm20/multi-speaker-tacotron-tensorflow"
"hccho2/Tacotron-Wavenet-Vocoder-Korean" -> "lifefeel/SpeechSynthesis"
"hccho2/Tacotron-Wavenet-Vocoder-Korean" -> "scarletcho/KoG2P"
"hccho2/Tacotron-Wavenet-Vocoder-Korean" -> "Kyubyong/g2pK"
"hccho2/Tacotron-Wavenet-Vocoder-Korean" -> "HGU-DLLAB/Korean-FastSpeech2-Pytorch"
"hccho2/Tacotron-Wavenet-Vocoder-Korean" -> "hccho2/hccho2.github.io"
"higee/elastic" -> "wikibook/elasticsearch"
"higee/elastic" -> "HowookJeong/elasticsearch-analysis-arirang"
"YBIGTA/DeepNLP-Study" -> "YBIGTA/Deep_learning"
"YBIGTA/DeepNLP-Study" -> "DSKSD/Pytorch_Fast_Campus_2018"
"YBIGTA/DeepNLP-Study" -> "modulabs/NLP-bootcamp"
"YBIGTA/DeepNLP-Study" -> "insuj3on/HelloPyTorch"
"emorynlp/ud-korean" -> "UniversalDependencies/UD_Korean-Kaist"
"hyunwoongko/social-robot-bao" -> "hyunwoongko/citrus-pest-disease-recognition"
"hyunwoongko/social-robot-bao" -> "hyunwoongko/strabismus-recognition"
"HowookJeong/elasticsearch-analysis-arirang" -> "korlucene/arirang-analyzer-es-plugin"
"warnikchow/dlk2nlp" -> "warnikchow/3i4k"
"graykode/DeepLearning-Study" -> "stevejhkang/kubernetes-tutorial"
"stevejhkang/kubernetes-tutorial" -> "graykode/kubernetes-glusterfs-aws"
"stevejhkang/kubernetes-tutorial" -> "Dcom-KHU/dcom-tech-interview"
"stevejhkang/kubernetes-tutorial" -> "graykode/aws-kubeadm-terraform"
"pingpong-ai/chatspace" -> "pingpong-ai/dialogue-generation-models"
"pingpong-ai/chatspace" -> "lovit/soyspacing"
"pingpong-ai/chatspace" -> "monologg/DistilKoBERT"
"pingpong-ai/chatspace" -> "coolengineer/sejong-corpus"
"pingpong-ai/chatspace" -> "pingpong-ai/kg-cvae-generator"
"deep-diver/DeepModels" -> "deep-diver/fastai-course-korean"
"warnikchow/3i4k" -> "warnikchow/dlk2nlp"
"wikibook/python-real-estate" -> "bjpublic/python-for-finance-data"
"wonseokjung/ReinforcementLearning_byWonseok" -> "wonseokjung/ai_supermario"
"gilbutITbook/007022" -> "rickiepark/python-machine-learning-book-2nd-edition"
"lovit/fastcampus_textml_blogs" -> "lovit/python_ml4nlp"
"lovit/fastcampus_textml_blogs" -> "modulabs/NLP-bootcamp"
"lifefeel/SpeechSynthesis" -> "hccho2/Tacotron-Wavenet-Vocoder-Korean"
"lifefeel/SpeechSynthesis" -> "hccho2/Tacotron2-Wavenet-Korean-TTS"
"deep-diver/fastai-course-korean" -> "deep-diver/DeepModels"
"deep-diver/fastai-course-korean" -> "jehyunlee/code-snippet"
"R-Korea/weekly_R_quiz" -> "R-Korea/RUCK2020"
"R-Korea/weekly_R_quiz" -> "encaion/R_edu"
"R-Korea/weekly_R_quiz" -> "shinykorea/Meetup"
"utilForever/cpp-developer-roadmap" -> "CubbyFlow/RustyFlow"
"shinykorea/Meetup" -> "R-Korea/RUCK2020"
"machinereading/KoreanNERCorpus" -> "kmounlp/NER"
"dongminlee94/Samsung-DRL-Code" -> "reinforcement-learning-kr/rl_bootcamp"
"JungoKim/brunch_nafma" -> "jihoo-kim/BrunchRec"
"JungoKim/brunch_nafma" -> "kakao-arena/brunch-article-recommendation"
"gusdnd852/Hyunwoong" -> "hyunwoongko/social-robot-bao"
"modulabs/NLP-bootcamp" -> "seopbo/nlp_classification"
"modulabs/NLP-bootcamp" -> "lovit/fastcampus_textml_blogs"
"modulabs/NLP-bootcamp" -> "modulabs/beyondBERT"
"modulabs/NLP-bootcamp" -> "jiphyeonjeon/season1"
"modulabs/NLP-bootcamp" -> "lassl/lassl"
"thejungwon/MyChromeExtension" -> "thejungwon/boostcamp_project_ocr"
"thejungwon/MyChromeExtension" -> "thejungwon/boostcamp_project_mask"
"simonjisu/nsmc_study" -> "seopbo/first_project_nlp"
"corazzon/petitionWrangling" -> "corazzon/OpenDataWrangling"
"NamDinhRobotics/proSLAM" -> "gyubeomim/pgo_toy_example"
"wonseokjung/ai_supermario" -> "wonseokjung/ReinforcementLearning_byWonseok"
"bzantium/simplex-method-matlab" -> "bzantium/chatbot-seminar"
"YBIGTA/data-science-2018" -> "YBIGTA/Data-Science"
"jihoo-kim/BrunchRec" -> "JungoKim/brunch_nafma"
"lovit/textmining_dataset" -> "lovit/python_ml4nlp"
"hongshin/interesting-articles-in-software-engineering" -> "hongshin/LearningC"
"Dcom-KHU/Node.js-Tutorial" -> "KHU-AGI/LFS-GAN"
"Dcom-KHU/Node.js-Tutorial" -> "Dcom-KHU/dcom-career-guide"
"FinanceData/OpenDartReader" -> "FinanceData/FinanceDataReader"
"FinanceData/OpenDartReader" -> "josw123/dart-fss"
"FinanceData/OpenDartReader" -> "sharebook-kr/pykrx"
"FinanceData/OpenDartReader" -> "FinanceData/marcap"
"FinanceData/OpenDartReader" -> "WooilJeong/PublicDataReader"
"FinanceData/OpenDartReader" -> "josw123/dart-scraper"
"FinanceData/OpenDartReader" -> "quantylab/rltrader"
"FinanceData/OpenDartReader" -> "elbakramer/koapy"
"FinanceData/OpenDartReader" -> "hyunyulhenry/quant_py"
"FinanceData/OpenDartReader" -> "gyusu/Creon-Datareader"
"FinanceData/OpenDartReader" -> "koreainvestment/open-trading-api"
"FinanceData/OpenDartReader" -> "wikibook/stock-trading"
"FinanceData/OpenDartReader" -> "pystockhub/book"
"FinanceData/OpenDartReader" -> "INVESTAR/StockAnalysisInPython"
"FinanceData/OpenDartReader" -> "suminb/finance"
"rickiepark/hg-mldl" -> "rickiepark/hg-da"
"rickiepark/hg-mldl" -> "rickiepark/handson-ml2"
"rickiepark/hg-mldl" -> "rickiepark/handson-ml3"
"rickiepark/hg-mldl" -> "BaekKyunShin/musthave_mldl_problem_solving_strategy"
"catSirup/KorEDA" -> "jucho2725/ktextaug"
"catSirup/KorEDA" -> "toriving/KoEDA"
"kakaobrain/nlp-paper-reading" -> "monologg/KoELECTRA"
"kakaobrain/nlp-paper-reading" -> "Beomi/KcBERT"
"kakaobrain/nlp-paper-reading" -> "kakaobrain/kor-nlu-datasets"
"kakaobrain/nlp-paper-reading" -> "SKT-AI/KoBART"
"kakaobrain/nlp-paper-reading" -> "jiphyeonjeon/season1"
"kakaobrain/nlp-paper-reading" -> "kocohub/korean-hate-speech"
"kakaobrain/nlp-paper-reading" -> "KLUE-benchmark/KLUE"
"kakaobrain/nlp-paper-reading" -> "kakaobrain/pororo"
"kakaobrain/nlp-paper-reading" -> "uoneway/Text-Summarization-Repo"
"kakaobrain/nlp-paper-reading" -> "jungwoo-ha/WeeklyArxivTalk"
"kakaobrain/nlp-paper-reading" -> "kiyoungkim1/LMkor"
"kakaobrain/nlp-paper-reading" -> "SKT-AI/KoGPT2"
"kakaobrain/nlp-paper-reading" -> "monologg/DistilKoBERT"
"kakaobrain/nlp-paper-reading" -> "yukyunglee/Transformer_Survey_Study"
"kakaobrain/nlp-paper-reading" -> "KB-AI-Research/KB-ALBERT"
"WegraLee/deep-learning-from-scratch-3" -> "WegraLee/deep-learning-from-scratch-2"
"WegraLee/deep-learning-from-scratch-3" -> "WegraLee/deep-learning-from-scratch"
"WegraLee/deep-learning-from-scratch-3" -> "WegraLee/deep-learning-from-scratch-4"
"WegraLee/deep-learning-from-scratch-3" -> "subinium/Deep-Papers"
"sooftware/attentions" -> "sooftware/seq2seq"
"sooftware/attentions" -> "sooftware/Naver-AI-Hackathon-Speech"
"sooftware/attentions" -> "sooftware/transformer"
"sooftware/attentions" -> "sooftware/kospeech"
"sooftware/attentions" -> "sooftware/ksponspeech"
"sooftware/attentions" -> "sooftware/speech-transformer"
"sooftware/attentions" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/attentions" -> "sooftware/speech-paper-review"
"sooftware/attentions" -> "sooftware/jasper"
"sooftware/attentions" -> "sooftware/conformer" ["e"=1]
"sooftware/attentions" -> "sooftware/TIL"
"sooftware/attentions" -> "sooftware/tacotron2"
"sooftware/attentions" -> "kakaobrain/nlp-paper-reading"
"sooftware/attentions" -> "changzy00/pytorch-attention" ["e"=1]
"sooftware/attentions" -> "tunib-ai/tunib-electra"
"Beomi/KcBERT" -> "Beomi/KcELECTRA"
"Beomi/KcBERT" -> "monologg/KoELECTRA"
"Beomi/KcBERT" -> "ko-nlp/Korpora"
"Beomi/KcBERT" -> "songys/AwesomeKorean_Data"
"Beomi/KcBERT" -> "kakaobrain/kor-nlu-datasets"
"Beomi/KcBERT" -> "kocohub/korean-hate-speech"
"Beomi/KcBERT" -> "SKTBrain/KoBERT"
"Beomi/KcBERT" -> "KLUE-benchmark/KLUE"
"Beomi/KcBERT" -> "SKT-AI/KoGPT2"
"Beomi/KcBERT" -> "kakaobrain/nlp-paper-reading"
"Beomi/KcBERT" -> "kiyoungkim1/LMkor"
"Beomi/KcBERT" -> "lovit/soynlp"
"Beomi/KcBERT" -> "e9t/nsmc"
"Beomi/KcBERT" -> "ratsgo/embedding"
"Beomi/KcBERT" -> "KB-AI-Research/KB-ALBERT"
"ko-nlp/Korpora" -> "songys/AwesomeKorean_Data"
"ko-nlp/Korpora" -> "Beomi/KcBERT"
"ko-nlp/Korpora" -> "SKT-AI/KoGPT2"
"ko-nlp/Korpora" -> "KLUE-benchmark/KLUE"
"ko-nlp/Korpora" -> "monologg/KoELECTRA"
"ko-nlp/Korpora" -> "kakaobrain/kor-nlu-datasets"
"ko-nlp/Korpora" -> "KB-AI-Research/KB-ALBERT"
"ko-nlp/Korpora" -> "lovit/soynlp"
"ko-nlp/Korpora" -> "kocohub/korean-hate-speech"
"ko-nlp/Korpora" -> "SKT-AI/KoBART"
"ko-nlp/Korpora" -> "kakaobrain/kogpt"
"ko-nlp/Korpora" -> "kakaobrain/pororo"
"ko-nlp/Korpora" -> "hyunwoongko/kss"
"ko-nlp/Korpora" -> "kiyoungkim1/LMkor"
"ko-nlp/Korpora" -> "SKTBrain/KoBERT"
"WooilJeong/PublicDataReader" -> "FinanceData/OpenDartReader"
"WooilJeong/PublicDataReader" -> "WooilJeong/PyKakao"
"WooilJeong/PublicDataReader" -> "FinanceData/FinanceDataReader"
"WooilJeong/PublicDataReader" -> "sharebook-kr/pykrx"
"WooilJeong/PublicDataReader" -> "vuski/admdongkor"
"WooilJeong/PublicDataReader" -> "hahnlee/hwp-rs" ["e"=1]
"WooilJeong/PublicDataReader" -> "kakaobrain/kogpt"
"WooilJeong/PublicDataReader" -> "rtzr/Awesome-Korean-Speech-Recognition"
"WooilJeong/PublicDataReader" -> "SKTBrain/KoBERT"
"WooilJeong/PublicDataReader" -> "songys/AwesomeKorean_Data"
"WooilJeong/PublicDataReader" -> "Beomi/KoAlpaca"
"WooilJeong/PublicDataReader" -> "bab2min/Kiwi"
"WooilJeong/PublicDataReader" -> "lovit/soynlp"
"WooilJeong/PublicDataReader" -> "Beomi/KcBERT"
"WooilJeong/PublicDataReader" -> "koreainvestment/open-trading-api"
"salesforce/ctrl-sum" -> "hyunwoongko/summarizers"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "boost-devs/ai-tech-interview"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "teddylee777/machine-learning"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "zzsza/Datascience-Interview-Questions"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "jungwoo-ha/WeeklyArxivTalk"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "heartcored98/Standalone-DeepLearning"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "songys/AwesomeKorean_Data"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "ndb796/python-for-coding-test" ["e"=1]
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "SKTBrain/KoBERT"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "Seonghoon-Yu/AI_Paper_Review"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "onlybooks/python-algorithm-interview" ["e"=1]
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "PyTorchKorea/tutorials-kr"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "kakaobrain/kogpt"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "ukairia777/tensorflow-nlp-tutorial"
"SKT-AI/KoGPT2" -> "SKT-AI/KoBART"
"SKT-AI/KoGPT2" -> "kakaobrain/kogpt"
"SKT-AI/KoGPT2" -> "SKTBrain/KoBERT"
"SKT-AI/KoGPT2" -> "monologg/KoELECTRA"
"SKT-AI/KoGPT2" -> "ko-nlp/Korpora"
"SKT-AI/KoGPT2" -> "songys/AwesomeKorean_Data"
"SKT-AI/KoGPT2" -> "gyunggyung/KoGPT2-FineTuning"
"SKT-AI/KoGPT2" -> "haven-jeon/KoGPT2-chatbot"
"SKT-AI/KoGPT2" -> "KLUE-benchmark/KLUE"
"SKT-AI/KoGPT2" -> "Beomi/KcBERT"
"SKT-AI/KoGPT2" -> "kakaobrain/pororo"
"SKT-AI/KoGPT2" -> "kiyoungkim1/LMkor"
"SKT-AI/KoGPT2" -> "eagle705/pytorch-bert-crf-ner"
"SKT-AI/KoGPT2" -> "Beomi/KoAlpaca"
"SKT-AI/KoGPT2" -> "lovit/soynlp"
"monologg/KoBERT-Transformers" -> "monologg/DistilKoBERT"
"monologg/KoBERT-Transformers" -> "monologg/KoELECTRA"
"monologg/KoBERT-Transformers" -> "kakaobrain/kor-nlu-datasets"
"monologg/KoBERT-Transformers" -> "kmounlp/NER"
"monologg/KoBERT-Transformers" -> "monologg/KoBigBird"
"monologg/KoBERT-Transformers" -> "snunlp/KR-BERT"
"monologg/KoBERT-Transformers" -> "Huffon/klue-transformers-tutorial"
"monologg/KoBERT-Transformers" -> "Huffon/nlp-startups"
"monologg/KoBERT-Transformers" -> "Beomi/KcBERT"
"monologg/KoBERT-Transformers" -> "Beomi/KcELECTRA"
"monologg/KoBERT-Transformers" -> "KLUE-benchmark/KLUE"
"monologg/KoBERT-Transformers" -> "monologg/HanBert-Transformers"
"monologg/KoBERT-Transformers" -> "SKT-AI/KoBART"
"monologg/KoBERT-Transformers" -> "SKTBrain/KoBERT"
"monologg/KoBERT-Transformers" -> "eagle705/pytorch-bert-crf-ner"
"songys/AwesomeKorean_Data" -> "ko-nlp/Korpora"
"songys/AwesomeKorean_Data" -> "SKT-AI/KoGPT2"
"songys/AwesomeKorean_Data" -> "Beomi/KcBERT"
"songys/AwesomeKorean_Data" -> "monologg/KoELECTRA"
"songys/AwesomeKorean_Data" -> "SKTBrain/KoBERT"
"songys/AwesomeKorean_Data" -> "KLUE-benchmark/KLUE"
"songys/AwesomeKorean_Data" -> "lovit/soynlp"
"songys/AwesomeKorean_Data" -> "SKT-AI/KoBART"
"songys/AwesomeKorean_Data" -> "HeegyuKim/open-korean-instructions"
"songys/AwesomeKorean_Data" -> "songys/Chatbot_data"
"songys/AwesomeKorean_Data" -> "kakaobrain/kogpt"
"songys/AwesomeKorean_Data" -> "kocohub/korean-hate-speech"
"songys/AwesomeKorean_Data" -> "kakaobrain/kor-nlu-datasets"
"songys/AwesomeKorean_Data" -> "Beomi/KoAlpaca"
"songys/AwesomeKorean_Data" -> "kakaobrain/pororo"
"quant4junior/algoTrade" -> "finterstellar/quant_machine"
"alexanderskulikov/discrete-math-python-scripts" -> "ChanchalKumarMaji/Introduction-to-Discrete-Mathematics-for-Computer-Science-Specialization"
"alexanderskulikov/discrete-math-python-scripts" -> "PacktPublishing/Practical-Discrete-Mathematics"
"alexanderskulikov/discrete-math-python-scripts" -> "hongshin/DiscreteMath"
"INVESTAR/StockAnalysisInPython" -> "koreainvestment/open-trading-api"
"INVESTAR/StockAnalysisInPython" -> "FinanceData/FinanceDataReader"
"INVESTAR/StockAnalysisInPython" -> "quantylab/rltrader"
"INVESTAR/StockAnalysisInPython" -> "sharebook-kr/pykrx"
"INVESTAR/StockAnalysisInPython" -> "quant4junior/algoTrade"
"INVESTAR/StockAnalysisInPython" -> "FinanceData/OpenDartReader"
"INVESTAR/StockAnalysisInPython" -> "breadum/kiwoom"
"INVESTAR/StockAnalysisInPython" -> "sharebook-kr/pykiwoom"
"INVESTAR/StockAnalysisInPython" -> "pystockhub/book"
"INVESTAR/StockAnalysisInPython" -> "elbakramer/koapy"
"INVESTAR/StockAnalysisInPython" -> "quantylab/systrader"
"INVESTAR/StockAnalysisInPython" -> "programgarden/book"
"INVESTAR/StockAnalysisInPython" -> "hyunyulhenry/quant_py"
"INVESTAR/StockAnalysisInPython" -> "gyusu/Creon-Datareader"
"INVESTAR/StockAnalysisInPython" -> "youtube-jocoding/pyupbit-autotrade"
"SKTBrain/KoBERT" -> "SKT-AI/KoGPT2"
"SKTBrain/KoBERT" -> "monologg/KoELECTRA"
"SKTBrain/KoBERT" -> "songys/AwesomeKorean_Data"
"SKTBrain/KoBERT" -> "eagle705/pytorch-bert-crf-ner"
"SKTBrain/KoBERT" -> "e9t/nsmc"
"SKTBrain/KoBERT" -> "SKT-AI/KoBART"
"SKTBrain/KoBERT" -> "Beomi/KcBERT"
"SKTBrain/KoBERT" -> "lovit/soynlp"
"SKTBrain/KoBERT" -> "kakaobrain/kogpt"
"SKTBrain/KoBERT" -> "kakao/khaiii"
"SKTBrain/KoBERT" -> "KLUE-benchmark/KLUE"
"SKTBrain/KoBERT" -> "ko-nlp/Korpora"
"SKTBrain/KoBERT" -> "kakaobrain/pororo"
"SKTBrain/KoBERT" -> "ratsgo/embedding"
"SKTBrain/KoBERT" -> "Beomi/KoAlpaca"
"monologg/DistilKoBERT" -> "monologg/HanBert-Transformers"
"monologg/DistilKoBERT" -> "monologg/KoBERT-Transformers"
"monologg/DistilKoBERT" -> "monologg/KoELECTRA"
"monologg/DistilKoBERT" -> "Beomi/KcELECTRA"
"monologg/DistilKoBERT" -> "snunlp/KR-BERT"
"monologg/DistilKoBERT" -> "KB-AI-Research/KB-ALBERT"
"monologg/DistilKoBERT" -> "monologg/KoBERT-NER"
"monologg/DistilKoBERT" -> "Beomi/KcBERT"
"monologg/DistilKoBERT" -> "kakaobrain/kor-nlu-datasets"
"monologg/DistilKoBERT" -> "enlipleai/kor_pretrain_LM"
"monologg/DistilKoBERT" -> "pingpong-ai/chatspace"
"monologg/DistilKoBERT" -> "seopbo/nlp_classification"
"monologg/DistilKoBERT" -> "pingpong-ai/dialogue-generation-models"
"monologg/DistilKoBERT" -> "tbai2019/HanBert-54k-N"
"monologg/DistilKoBERT" -> "monologg/KoBERT-nsmc"
"Huffon/nlp-startups" -> "kakaobrain/kor-nlu-datasets"
"Huffon/nlp-startups" -> "sooftware/k-startups"
"Huffon/nlp-startups" -> "tunib-ai/tunib-electra"
"Huffon/nlp-startups" -> "monologg/KoBigBird"
"Huffon/nlp-startups" -> "gyunggyung/Korea-Startups"
"Huffon/nlp-startups" -> "lovit/huggingface_konlpy" ["e"=1]
"Huffon/nlp-startups" -> "monologg/KoBERT-Transformers"
"Huffon/nlp-startups" -> "KR-HappyFace/KoDALLE"
"Huffon/nlp-startups" -> "sooftware/Korean-PLM"
"bab2min/kiwipiepy" -> "bab2min/Kiwi"
"bab2min/kiwipiepy" -> "hyunwoongko/kss"
"bab2min/kiwipiepy" -> "ko-nlp/Korpora"
"bab2min/kiwipiepy" -> "haven-jeon/PyKoSpacing"
"bab2min/kiwipiepy" -> "hyunwoongko/pecab"
"bab2min/kiwipiepy" -> "lovit/soynlp"
"bab2min/kiwipiepy" -> "ssut/py-hanspell"
"bab2min/kiwipiepy" -> "kakaobrain/kor-nlu-datasets"
"bab2min/kiwipiepy" -> "lassl/lassl"
"bab2min/kiwipiepy" -> "rtzr/Awesome-Korean-Speech-Recognition"
"bab2min/kiwipiepy" -> "NomaDamas/awesome-korean-llm"
"bab2min/kiwipiepy" -> "kakaobrain/kogpt"
"bab2min/kiwipiepy" -> "kmounlp/NER"
"bab2min/kiwipiepy" -> "eagle705/pytorch-bert-crf-ner"
"bab2min/kiwipiepy" -> "ssisOneTeam/Korean-Embedding-Model-Performance-Benchmark-for-Retriever"
"elbakramer/koapy" -> "breadum/kiwoom"
"elbakramer/koapy" -> "coreanq/kw_condition"
"elbakramer/koapy" -> "sharebook-kr/pykiwoom"
"elbakramer/koapy" -> "quantylab/systrader"
"elbakramer/koapy" -> "didw/PyTrader"
"elbakramer/koapy" -> "Soju06/python-kis"
"elbakramer/koapy" -> "sculove/QWebview-plus"
"elbakramer/koapy" -> "koreainvestment/open-trading-api"
"elbakramer/koapy" -> "taehyunjo90/gatherer"
"elbakramer/koapy" -> "quantylab/rltrader"
"elbakramer/koapy" -> "sharebook-kr/mojito"
"elbakramer/koapy" -> "programgarden/book"
"elbakramer/koapy" -> "gyusu/Creon-Datareader"
"elbakramer/koapy" -> "kdseo/PyTrader"
"seungeunrho/RLfrombasics" -> "reinforcement-learning-kr/how_to_study_rl"
"jongwoojeff/DiscreteMathematics" -> "hongshin/DiscreteMath"
"jongwoojeff/DiscreteMathematics" -> "err0r500/foundational-knowledge-for-programmers"
"jongwoojeff/DiscreteMathematics" -> "AbhishekSinhaCoder/Computer-Science-Notes"
"monologg/KoELECTRA" -> "KLUE-benchmark/KLUE"
"monologg/KoELECTRA" -> "Beomi/KcBERT"
"monologg/KoELECTRA" -> "SKT-AI/KoBART"
"monologg/KoELECTRA" -> "SKT-AI/KoGPT2"
"monologg/KoELECTRA" -> "kiyoungkim1/LMkor"
"monologg/KoELECTRA" -> "SKTBrain/KoBERT"
"monologg/KoELECTRA" -> "kakaobrain/kor-nlu-datasets"
"monologg/KoELECTRA" -> "eagle705/pytorch-bert-crf-ner"
"monologg/KoELECTRA" -> "songys/AwesomeKorean_Data"
"monologg/KoELECTRA" -> "kakaobrain/kogpt"
"monologg/KoELECTRA" -> "ko-nlp/Korpora"
"monologg/KoELECTRA" -> "kakaobrain/pororo"
"monologg/KoELECTRA" -> "monologg/DistilKoBERT"
"monologg/KoELECTRA" -> "monologg/KoBigBird"
"monologg/KoELECTRA" -> "kocohub/korean-hate-speech"
"twitter/twitter-korean-text" -> "open-korean-text/open-korean-text"
"twitter/twitter-korean-text" -> "konlpy/konlpy"
"twitter/twitter-korean-text" -> "datanada/Awesome-Korean-NLP"
"twitter/twitter-korean-text" -> "e9t/nsmc"
"twitter/twitter-korean-text" -> "seoul-opengov/opengov" ["e"=1]
"twitter/twitter-korean-text" -> "lovit/soynlp"
"twitter/twitter-korean-text" -> "kakao/khaiii"
"twitter/twitter-korean-text" -> "shineware/KOMORAN"
"twitter/twitter-korean-text" -> "golbin/TensorFlow-Tutorials"
"twitter/twitter-korean-text" -> "coolengineer/sejong-corpus"
"twitter/twitter-korean-text" -> "SKTBrain/KoBERT"
"twitter/twitter-korean-text" -> "kakao/s2graph" ["e"=1]
"twitter/twitter-korean-text" -> "open-korean-text/elasticsearch-analysis-openkoreantext"
"twitter/twitter-korean-text" -> "theeluwin/textrankr"
"twitter/twitter-korean-text" -> "bluedisk/hangul-toolkit"
"zzsza/kyle-school" -> "zzsza/Kaggle-knowhow"
"zzsza/kyle-school" -> "zzsza/Perfect-Guide-about-Machine-Learning-Study"
"zzsza/kyle-school" -> "zzsza/Datascience_School"
"zzsza/kyle-school" -> "MLOpsKR/Awesome-MLOps-Contents" ["e"=1]
"zzsza/kyle-school" -> "MrBananaHuman/KorNlpTutorial"
"lsjsj92/recommender_system_with_Python" -> "RS-KR/GNN-RS-Beginner"
"lsjsj92/recommender_system_with_Python" -> "choco9966/Recommendation-Tutorial"
"lsjsj92/recommender_system_with_Python" -> "jaewonlee-728/fastcampus-RecSys"
"BM-K/KoSentenceBERT-ETRI" -> "BM-K/KoSentenceBERT-SKT"
"BM-K/KoSentenceBERT-ETRI" -> "BM-K/KoMiniLM"
"BM-K/KoSentenceBERT-ETRI" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"BM-K/KoSentenceBERT-ETRI" -> "kakaobrain/kor-nlu-datasets"
"BM-K/KoSentenceBERT-ETRI" -> "BM-K/KoSimCSE-SKT"
"BM-K/KoSentenceBERT-ETRI" -> "BM-K/Troll-Detector"
"BM-K/KoSentenceBERT-ETRI" -> "BM-K/Styling-Chatbot-with-Transformer"
"BM-K/KoSentenceBERT-ETRI" -> "kocohub/korean-hate-speech"
"BM-K/KoSentenceBERT-ETRI" -> "Beomi/KcELECTRA"
"BM-K/KoSentenceBERT-ETRI" -> "BM-K/KoSentenceBERT_V2"
"koalanlp/koalanlp" -> "lovit/soyspacing"
"koalanlp/koalanlp" -> "koshort/pyeunjeon"
"koalanlp/koalanlp" -> "likejazz/korean-sentence-splitter"
"koalanlp/koalanlp" -> "coolengineer/sejong-corpus"
"koalanlp/koalanlp" -> "lovit/KR-WordRank"
"koalanlp/koalanlp" -> "datanada/Awesome-Korean-NLP"
"koalanlp/koalanlp" -> "changukshin/Awesome-Korean-NLP-Papers"
"koalanlp/koalanlp" -> "shineware/KOMORAN"
"koalanlp/koalanlp" -> "lovit/soynlp"
"2runo/Curse-detection-data" -> "kocohub/korean-hate-speech"
"2runo/Curse-detection-data" -> "ZIZUN/korean-malicious-comments-dataset"
"2runo/Curse-detection-data" -> "Nam-SW/badword_check"
"2runo/Curse-detection-data" -> "2runo/Curse-detection" ["e"=1]
"2runo/Curse-detection-data" -> "omh02033/dimi-petition-front" ["e"=1]
"kakaobrain/kor-nlu-datasets" -> "KLUE-benchmark/KLUE"
"kakaobrain/kor-nlu-datasets" -> "monologg/KoELECTRA"
"kakaobrain/kor-nlu-datasets" -> "snunlp/KR-BERT"
"kakaobrain/kor-nlu-datasets" -> "Beomi/KcBERT"
"kakaobrain/kor-nlu-datasets" -> "ko-nlp/Korpora"
"kakaobrain/kor-nlu-datasets" -> "Huffon/nlp-startups"
"kakaobrain/kor-nlu-datasets" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"kakaobrain/kor-nlu-datasets" -> "kocohub/korean-hate-speech"
"kakaobrain/kor-nlu-datasets" -> "monologg/KoBERT-Transformers"
"kakaobrain/kor-nlu-datasets" -> "songys/AwesomeKorean_Data"
"kakaobrain/kor-nlu-datasets" -> "BM-K/KoSentenceBERT-ETRI"
"kakaobrain/kor-nlu-datasets" -> "ko-nlp/Open-korean-corpora"
"kakaobrain/kor-nlu-datasets" -> "SKT-AI/KoBART"
"kakaobrain/kor-nlu-datasets" -> "kakaobrain/nlp-paper-reading"
"kakaobrain/kor-nlu-datasets" -> "monologg/KoBigBird"
"kakao/buffalo" -> "kakao/n2" ["e"=1]
"kakao/buffalo" -> "kakao/recoteam"
"kakao/buffalo" -> "kakao/khaiii"
"kakao/buffalo" -> "yoongi0428/RecSys_PyTorch" ["e"=1]
"kakao/buffalo" -> "reinforcement-learning-kr/how_to_study_rl"
"kakao/buffalo" -> "MrBananaHuman/KorNlpTutorial"
"kakao/buffalo" -> "monologg/KoELECTRA"
"kakao/buffalo" -> "ceo21ckim/Awesome-Recsys" ["e"=1]
"kakao/buffalo" -> "RS-KR/GNN-RS-Beginner"
"kakao/buffalo" -> "kakaobrain/pororo"
"kakao/buffalo" -> "naver/claf"
"kakao/buffalo" -> "SKTBrain/KoBERT"
"kakao/buffalo" -> "warnikchow/dlk2nlp"
"kakao/buffalo" -> "SKT-AI/KoGPT2"
"kakao/buffalo" -> "jihoo-kim/BrunchRec"
"kimwoonggon/publicservant_AI" -> "KB-AI-Research/KB-ALBERT"
"kimwoonggon/publicservant_AI" -> "Beomi/KcBERT"
"kimwoonggon/publicservant_AI" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"kimwoonggon/publicservant_AI" -> "kakaobrain/nlp-paper-reading"
"kimwoonggon/publicservant_AI" -> "monologg/KoBERT-NER"
"KB-AI-Research/KB-ALBERT" -> "ko-nlp/Korpora"
"KB-AI-Research/KB-ALBERT" -> "monologg/DistilKoBERT"
"KB-AI-Research/KB-ALBERT" -> "monologg/KoELECTRA"
"KB-AI-Research/KB-ALBERT" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"KB-AI-Research/KB-ALBERT" -> "Beomi/KcBERT"
"KB-AI-Research/KB-ALBERT" -> "Beomi/KcELECTRA"
"KB-AI-Research/KB-ALBERT" -> "monologg/KoBigBird"
"KB-AI-Research/KB-ALBERT" -> "kakaobrain/kor-nlu-datasets"
"KB-AI-Research/KB-ALBERT" -> "bab2min/corpus"
"KB-AI-Research/KB-ALBERT" -> "SKT-AI/KoBART"
"KB-AI-Research/KB-ALBERT" -> "kocohub/korean-hate-speech"
"KB-AI-Research/KB-ALBERT" -> "songys/Chatbot_data"
"KB-AI-Research/KB-ALBERT" -> "KLUE-benchmark/KLUE"
"KB-AI-Research/KB-ALBERT" -> "sooftware/Korean-PLM"
"KB-AI-Research/KB-ALBERT" -> "eagle705/pytorch-bert-crf-ner"
"Huffon/pytorch-transformer-kor-eng" -> "Huffon/klue-transformers-tutorial"
"gyunggyung/Korea-Startups" -> "Huffon/nlp-startups"
"snunlp/KR-BERT" -> "kakaobrain/kor-nlu-datasets"
"snunlp/KR-BERT" -> "monologg/DistilKoBERT"
"snunlp/KR-BERT" -> "Beomi/KcBERT"
"snunlp/KR-BERT" -> "Beomi/KcELECTRA"
"snunlp/KR-BERT" -> "monologg/KoELECTRA"
"snunlp/KR-BERT" -> "monologg/KoBERT-Transformers"
"snunlp/KR-BERT" -> "SKT-AI/KoBART"
"snunlp/KR-BERT" -> "changukshin/Awesome-Korean-NLP-Papers"
"snunlp/KR-BERT" -> "ko-nlp/Korpora"
"snunlp/KR-BERT" -> "KLUE-benchmark/KLUE"
"snunlp/KR-BERT" -> "koshort/pyeunjeon"
"snunlp/KR-BERT" -> "Huffon/nlp-startups"
"snunlp/KR-BERT" -> "likejazz/korean-sentence-splitter"
"sooftware/kospeech" -> "openspeech-team/openspeech" ["e"=1]
"sooftware/kospeech" -> "kakaobrain/pororo"
"sooftware/kospeech" -> "sooftware/ksponspeech"
"sooftware/kospeech" -> "clovaai/ClovaCall"
"sooftware/kospeech" -> "rtzr/Awesome-Korean-Speech-Recognition"
"sooftware/kospeech" -> "monologg/KoELECTRA"
"sooftware/kospeech" -> "sooftware/k-startups"
"sooftware/kospeech" -> "KLUE-benchmark/KLUE"
"sooftware/kospeech" -> "goodatlas/zeroth"
"sooftware/kospeech" -> "kakaobrain/kogpt"
"sooftware/kospeech" -> "HGU-DLLAB/Korean-FastSpeech2-Pytorch"
"sooftware/kospeech" -> "sooftware/conformer" ["e"=1]
"sooftware/kospeech" -> "sooftware/Speech-Recognition-Tutorial"
"sooftware/kospeech" -> "Kyubyong/g2pK"
"sooftware/kospeech" -> "ko-nlp/Korpora"
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "Kyubyong/g2pK"
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "hccho2/Tacotron2-Wavenet-Korean-TTS"
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "rishikksh20/VocGAN" ["e"=1]
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "emotiontts/emotiontts_open_db" ["e"=1]
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "Jackson-Kang/MFARunner"
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "keonlee9420/Expressive-FastSpeech2" ["e"=1]
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "WICWIU/WICWIU"
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "SMART-TTS/SMART-G2P"
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "sooftware/kospeech"
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "hccho2/Tacotron-Wavenet-Vocoder-Korean"
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" -> "scarletcho/KoLM"
"nawnoes/WellnessConversation-LanguageModel" -> "haven-jeon/KoGPT2-chatbot"
"nawnoes/WellnessConversation-LanguageModel" -> "songys/Chatbot_data"
"nawnoes/WellnessConversation-LanguageModel" -> "gyunggyung/KoGPT2-FineTuning"
"nawnoes/WellnessConversation-LanguageModel" -> "Beomi/KcBERT"
"nawnoes/WellnessConversation-LanguageModel" -> "ko-nlp/Korpora"
"nawnoes/WellnessConversation-LanguageModel" -> "monologg/KoELECTRA"
"nawnoes/WellnessConversation-LanguageModel" -> "KB-AI-Research/KB-ALBERT"
"nawnoes/WellnessConversation-LanguageModel" -> "kocohub/korean-hate-speech"
"nawnoes/WellnessConversation-LanguageModel" -> "SKT-AI/KoGPT2"
"nawnoes/WellnessConversation-LanguageModel" -> "SKT-AI/KoBART"
"nawnoes/WellnessConversation-LanguageModel" -> "Huffon/klue-transformers-tutorial"
"nawnoes/WellnessConversation-LanguageModel" -> "kakaobrain/kor-nlu-datasets"
"nawnoes/WellnessConversation-LanguageModel" -> "songys/AwesomeKorean_Data"
"nawnoes/WellnessConversation-LanguageModel" -> "Huffon/nlp-startups"
"utilForever/rl-paper-study" -> "reinforcement-learning-kr/how_to_study_rl"
"utilForever/rl-paper-study" -> "utilForever/2021-KAIST-Include-AlphaGoZero"
"utilForever/rl-paper-study" -> "utilForever/2019-OSS-Summer-RLBasic"
"utilForever/rl-paper-study" -> "Junyoungpark/ReinforcementLearningAtoZ"
"utilForever/rl-paper-study" -> "reinforcement-learning-kr/2021_RLKR_Drone_Delivery_Challenge_with_Unity"
"utilForever/rl-paper-study" -> "Lilcob/-DL_PaperReadingMeeting"
"jaewonlee-728/fastcampus-RecSys" -> "lsjsj92/recommender_system_with_Python"
"utilForever/baba-is-auto" -> "frechele/BabaIsAgent-v0"
"utilForever/baba-is-auto" -> "utilForever/2022-KW-RLEnv"
"eagle705/pytorch-bert-crf-ner" -> "monologg/KoELECTRA"
"eagle705/pytorch-bert-crf-ner" -> "SKTBrain/KoBERT"
"eagle705/pytorch-bert-crf-ner" -> "SKT-AI/KoBART"
"eagle705/pytorch-bert-crf-ner" -> "songys/AwesomeKorean_Data"
"eagle705/pytorch-bert-crf-ner" -> "Beomi/KcBERT"
"eagle705/pytorch-bert-crf-ner" -> "SKT-AI/KoGPT2"
"eagle705/pytorch-bert-crf-ner" -> "ratsgo/embedding"
"eagle705/pytorch-bert-crf-ner" -> "lovit/soynlp"
"eagle705/pytorch-bert-crf-ner" -> "KLUE-benchmark/KLUE"
"eagle705/pytorch-bert-crf-ner" -> "ko-nlp/Korpora"
"eagle705/pytorch-bert-crf-ner" -> "KB-AI-Research/KB-ALBERT"
"eagle705/pytorch-bert-crf-ner" -> "kiyoungkim1/LMkor"
"eagle705/pytorch-bert-crf-ner" -> "monologg/KoBERT-Transformers"
"eagle705/pytorch-bert-crf-ner" -> "monologg/DistilKoBERT"
"eagle705/pytorch-bert-crf-ner" -> "kmounlp/NER"
"bab2min/corpus" -> "ZIZUN/korean-malicious-comments-dataset"
"bab2min/corpus" -> "KB-AI-Research/KB-ALBERT"
"bab2min/corpus" -> "enlipleai/kor_pretrain_LM"
"xlgames-inc/XLE" -> "utilForever/CubbyFlow-v1"
"xlgames-inc/XLE" -> "Circular-Studios/Dash" ["e"=1]
"xlgames-inc/XLE" -> "utilForever/Cubby-v1"
"xlgames-inc/XLE" -> "PolygonTek/BlueshiftEngine" ["e"=1]
"xlgames-inc/XLE" -> "djewsbury/XLE"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "NLP-kr/tensorflow-ml-nlp"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "KB-AI-Research/KB-ALBERT"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "lovit/KR-WordRank"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "Beomi/KcBERT"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "gyunggyung/KoGPT2-FineTuning"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "ko-nlp/Korpora"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "songys/AwesomeKorean_Data"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "uoneway/Text-Summarization-Repo"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "haven-jeon/KoGPT2-chatbot"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "ratsgo/embedding"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "songys/Chatbot_data"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "SKT-AI/KoGPT2"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "Beomi/KcELECTRA"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "pilsung-kang/Text-Analytics"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "lovit/soynlp"
"wikibook/stock-trading" -> "bjpublic/python-for-finance-data"
"rlcode/reinforcement-learning-kr-v2" -> "rlcode/reinforcement-learning-kr"
"rlcode/reinforcement-learning-kr-v2" -> "reinforcement-learning-kr/how_to_study_rl"
"kocohub/korean-hate-speech" -> "Beomi/KcBERT"
"kocohub/korean-hate-speech" -> "kakaobrain/kor-nlu-datasets"
"kocohub/korean-hate-speech" -> "monologg/KoELECTRA"
"kocohub/korean-hate-speech" -> "ko-nlp/Korpora"
"kocohub/korean-hate-speech" -> "KLUE-benchmark/KLUE"
"kocohub/korean-hate-speech" -> "2runo/Curse-detection-data"
"kocohub/korean-hate-speech" -> "smilegate-ai/korean_unsmile_dataset"
"kocohub/korean-hate-speech" -> "songys/AwesomeKorean_Data"
"kocohub/korean-hate-speech" -> "e9t/nsmc"
"kocohub/korean-hate-speech" -> "Beomi/KcELECTRA"
"kocohub/korean-hate-speech" -> "kakaobrain/nlp-paper-reading"
"kocohub/korean-hate-speech" -> "BM-K/KoSentenceBERT-ETRI"
"kocohub/korean-hate-speech" -> "jason9693/APEACH"
"kocohub/korean-hate-speech" -> "KB-AI-Research/KB-ALBERT"
"kocohub/korean-hate-speech" -> "SKT-AI/KoBART"
"roomylee/nlp-papers-with-arxiv" -> "roomylee/EMNLP-2019-Papers"
"roomylee/nlp-papers-with-arxiv" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"roomylee/nlp-papers-with-arxiv" -> "neubig/lowresource-nlp-bootcamp-2020" ["e"=1]
"roomylee/nlp-papers-with-arxiv" -> "allenai/acl2022-zerofewshot-tutorial" ["e"=1]
"roomylee/nlp-papers-with-arxiv" -> "Huffon/nlp-startups"
"roomylee/nlp-papers-with-arxiv" -> "kakaobrain/nlp-paper-reading"
"roomylee/nlp-papers-with-arxiv" -> "facebookresearch/unlikelihood_training" ["e"=1]
"roomylee/nlp-papers-with-arxiv" -> "neulab/Text-Summarization-Papers" ["e"=1]
"roomylee/nlp-papers-with-arxiv" -> "pingpong-ai/dialogue-generation-models"
"roomylee/nlp-papers-with-arxiv" -> "monologg/KoELECTRA"
"likejazz/korean-sentence-splitter" -> "coolengineer/sejong-corpus"
"likejazz/korean-sentence-splitter" -> "hyunwoongko/kss"
"likejazz/korean-sentence-splitter" -> "enlipleai/kor_pretrain_LM"
"likejazz/korean-sentence-splitter" -> "jeongukjae/korean-spacing-model"
"likejazz/korean-sentence-splitter" -> "monologg/KoELECTRA"
"likejazz/korean-sentence-splitter" -> "lovit/soyspacing"
"likejazz/korean-sentence-splitter" -> "monologg/DistilKoBERT"
"likejazz/korean-sentence-splitter" -> "koalanlp/koalanlp"
"likejazz/korean-sentence-splitter" -> "naver/kor2vec"
"likejazz/korean-sentence-splitter" -> "kocohub/korean-hate-speech"
"likejazz/korean-sentence-splitter" -> "KB-AI-Research/KB-ALBERT"
"likejazz/korean-sentence-splitter" -> "ko-nlp/Korpora"
"likejazz/korean-sentence-splitter" -> "Beomi/KcBERT"
"likejazz/korean-sentence-splitter" -> "Kyubyong/g2pK"
"likejazz/korean-sentence-splitter" -> "kakaobrain/kor-nlu-datasets"
"monologg/KoBERT-nsmc" -> "monologg/KoBERT-NER"
"gyunggyung/KoGPT2-FineTuning" -> "haven-jeon/KoGPT2-chatbot"
"gyunggyung/KoGPT2-FineTuning" -> "SKT-AI/KoGPT2"
"gyunggyung/KoGPT2-FineTuning" -> "shbictai/narrativeKoGPT2"
"gyunggyung/KoGPT2-FineTuning" -> "nawnoes/WellnessConversation-LanguageModel"
"gyunggyung/KoGPT2-FineTuning" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"gyunggyung/KoGPT2-FineTuning" -> "SKT-AI/KoBART"
"gyunggyung/KoGPT2-FineTuning" -> "KB-AI-Research/KB-ALBERT"
"gyunggyung/KoGPT2-FineTuning" -> "monologg/KoELECTRA"
"gyunggyung/KoGPT2-FineTuning" -> "songys/AwesomeKorean_Data"
"gyunggyung/KoGPT2-FineTuning" -> "MrBananaHuman/KorGPT2Tutorial"
"gyunggyung/KoGPT2-FineTuning" -> "seujung/KoBART-summarization"
"gyunggyung/KoGPT2-FineTuning" -> "ko-nlp/Korpora"
"gyunggyung/KoGPT2-FineTuning" -> "likejazz/korean-sentence-splitter"
"gyunggyung/KoGPT2-FineTuning" -> "monologg/KoBigBird"
"gyunggyung/KoGPT2-FineTuning" -> "sohyeon98720/KoGPT2-finetuning"
"suminb/finance" -> "ssut/PushBank2"
"Lilcob/-DL_PaperReadingMeeting" -> "jiphyeonjeon/season1"
"Lilcob/-DL_PaperReadingMeeting" -> "sjchoi86/2022-1-deep-learning-applications"
"Lilcob/-DL_PaperReadingMeeting" -> "yukyunglee/Transformer_Survey_Study"
"Lilcob/-DL_PaperReadingMeeting" -> "subinium/Deep-Papers"
"Lilcob/-DL_PaperReadingMeeting" -> "hyunwoongko/kss"
"Lilcob/-DL_PaperReadingMeeting" -> "kakaobrain/nlp-paper-reading"
"Lilcob/-DL_PaperReadingMeeting" -> "lassl/lassl"
"Lilcob/-DL_PaperReadingMeeting" -> "jungwoo-ha/WeeklyArxivTalk"
"Lilcob/-DL_PaperReadingMeeting" -> "KLUE-benchmark/KLUE"
"SMART-TTS/SMART-Vocoder" -> "SMART-TTS/SMART-Long_Sentence_TTS"
"SMART-TTS/SMART-Vocoder" -> "SMART-TTS/SMART-NAR_Fast_TTS"
"SMART-TTS/SMART-Vocoder" -> "SMART-TTS/SMART-Single_Emotional_TTS"
"SMART-TTS/SMART-Vocoder" -> "SMART-TTS/SMART-G2P"
"sooftware/ksponspeech" -> "sooftware/transformer"
"sooftware/ksponspeech" -> "sooftware/seq2seq"
"sooftware/ksponspeech" -> "sooftware/jasper"
"sooftware/ksponspeech" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/ksponspeech" -> "sooftware/Naver-AI-Hackathon-Speech"
"sooftware/ksponspeech" -> "sooftware/speech-transformer"
"sooftware/ksponspeech" -> "sooftware/tacotron2"
"sooftware/ksponspeech" -> "sooftware/speech-paper-review"
"sooftware/speech-transformer" -> "sooftware/transformer"
"sooftware/speech-transformer" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/speech-transformer" -> "sooftware/seq2seq"
"sooftware/speech-transformer" -> "sooftware/ksponspeech"
"sooftware/speech-transformer" -> "sooftware/End-to-End-Speech-Recognition-Models"
"sooftware/speech-transformer" -> "sooftware/jasper"
"sooftware/speech-transformer" -> "sooftware/tacotron2"
"sooftware/speech-transformer" -> "sooftware/deepspeech2"
"graykode/commit-autosuggestions" -> "graykode/matorage"
"graykode/commit-autosuggestions" -> "stevejhkang/kubernetes-tutorial"
"graykode/commit-autosuggestions" -> "jason9693/Soongsil-BERT"
"graykode/commit-autosuggestions" -> "graykode/toeicbert"
"graykode/commit-autosuggestions" -> "MrBananaHuman/KorNlpTutorial"
"graykode/commit-autosuggestions" -> "nakosung/ai-dungeon-cli"
"graykode/commit-autosuggestions" -> "KLUE-benchmark/KLUE"
"graykode/commit-autosuggestions" -> "kakaobrain/nlp-paper-reading"
"graykode/commit-autosuggestions" -> "monologg/KoELECTRA"
"graykode/commit-autosuggestions" -> "monologg/HanBert-Transformers"
"MrBananaHuman/KorGPT2Tutorial" -> "MrBananaHuman/KalBert"
"haven-jeon/KoGPT2-chatbot" -> "gyunggyung/KoGPT2-FineTuning"
"haven-jeon/KoGPT2-chatbot" -> "SKT-AI/KoGPT2"
"haven-jeon/KoGPT2-chatbot" -> "nawnoes/WellnessConversation-LanguageModel"
"haven-jeon/KoGPT2-chatbot" -> "songys/Chatbot_data"
"haven-jeon/KoGPT2-chatbot" -> "monologg/KoBigBird"
"shbictai/narrativeKoGPT2" -> "gyunggyung/KoGPT2-FineTuning"
"emliang/RL-for-Transportation" -> "emliang/Multi-Agent-RL"
"emliang/RL-for-Transportation" -> "szlhl1040/Vehicles-Dispatch-Simulator"
"emliang/RL-for-Transportation" -> "hitsuji5/fleet-sim"
"Huffon/nlp-various-tutorials" -> "hyunwoongko/kobart-transformers"
"fast-ai-kr/ko-translation" -> "jehyunlee/code-snippet"
"fast-ai-kr/ko-translation" -> "deep-diver/fastai-course-korean"
"jungyeul/korean-parallel-corpora" -> "coolengineer/sejong-corpus"
"jungyeul/korean-parallel-corpora" -> "kaniblu/hangul-utils"
"jungyeul/korean-parallel-corpora" -> "haven-jeon/ko_en_neural_machine_translation"
"jungyeul/korean-parallel-corpora" -> "emorynlp/ud-korean"
"gyunggyung/AGI-Papers" -> "gyunggyung/KoGPT2-FineTuning"
"gyunggyung/AGI-Papers" -> "gyunggyung/PyTorch"
"gyunggyung/AGI-Papers" -> "changukshin/Awesome-Korean-NLP-Papers"
"gyunggyung/AGI-Papers" -> "HAE-RAE/HAE-RAE-BENCH"
"gyunggyung/AGI-Papers" -> "sooftware/Korean-PLM"
"roomylee/EMNLP-2019-Papers" -> "roomylee/nlp-papers-with-arxiv"
"roomylee/EMNLP-2019-Papers" -> "facebookresearch/unlikelihood_training" ["e"=1]
"roomylee/EMNLP-2019-Papers" -> "pingpong-ai/dialogue-generation-models"
"UMich-ML-Group/RL-Ridesharing" -> "szlhl1040/Vehicles-Dispatch-Simulator"
"UMich-ML-Group/RL-Ridesharing" -> "Jinjiarui/CoRide"
"UMich-ML-Group/RL-Ridesharing" -> "dingyuan-shi/Learning-To-Dispatch"
"enlipleai/kor_pretrain_LM" -> "monologg/HanBert-Transformers"
"enlipleai/kor_pretrain_LM" -> "likejazz/korean-sentence-splitter"
"enlipleai/kor_pretrain_LM" -> "monologg/DistilKoBERT"
"haven-jeon/KoNLP" -> "haven-jeon/NIADic"
"haven-jeon/KoNLP" -> "forkonlp/DNH4"
"haven-jeon/KoNLP" -> "haven-jeon/KoSpacing"
"haven-jeon/KoNLP" -> "forkonlp/N2H4"
"hyunwoongko/bigdata-lecture" -> "hyunwoongko/strabismus-recognition"
"hyunwoongko/bigdata-lecture" -> "hyunwoongko/social-robot-bao"
"SMART-TTS/SMART-Single_Emotional_TTS" -> "SMART-TTS/SMART-Vocoder"
"SMART-TTS/SMART-Single_Emotional_TTS" -> "SMART-TTS/SMART-Long_Sentence_TTS"
"SMART-TTS/SMART-Single_Emotional_TTS" -> "SMART-TTS/SMART-NAR_Fast_TTS"
"SMART-TTS/SMART-Single_Emotional_TTS" -> "SMART-TTS/SMART-G2P"
"mktal/kddcup-starting-kit" -> "illidanlab/Simulator"
"mktal/kddcup-starting-kit" -> "maybeluo/KDDCup2020-RL-1st-solution"
"mktal/kddcup-starting-kit" -> "laxatives/rl"
"mktal/kddcup-starting-kit" -> "szlhl1040/Vehicles-Dispatch-Simulator"
"programgarden/book" -> "programgarden/youtube"
"programgarden/book" -> "pystockhub/book"
"CppKorea/CppKoreaSeminar7th" -> "CppKorea/CodeOfConduct"
"taeoh-kim/pr12" -> "jungwoo-ha/WeeklyArxivTalk"
"taeoh-kim/pr12" -> "Kyubyong/dl_career_faq"
"clovaai/ClovaCall" -> "JoungheeKim/K-wav2vec"
"clovaai/ClovaCall" -> "sooftware/kospeech"
"clovaai/ClovaCall" -> "sooftware/ksponspeech"
"clovaai/ClovaCall" -> "fd873630/RNN-Transducer"
"clovaai/ClovaCall" -> "goodatlas/zeroth"
"clovaai/ClovaCall" -> "hccho2/Tacotron2-Wavenet-Korean-TTS"
"clovaai/ClovaCall" -> "Huffon/nlp-startups"
"monologg/KoBERT-KorQuAD" -> "codertimo/KorQuAD-Question-Generation"
"monologg/KoBERT-KorQuAD" -> "graykode/KorQuAD-beginner"
"monologg/KoBERT-KorQuAD" -> "monologg/KoELECTRA-Pipeline"
"maybeluo/KDDCup2020-RL-1st-solution" -> "laxatives/rl"
"maybeluo/KDDCup2020-RL-1st-solution" -> "szlhl1040/Vehicles-Dispatch-Simulator"
"laxatives/rl" -> "maybeluo/KDDCup2020-RL-1st-solution"
"data-system-wiki/designing-data-intensive-applications" -> "heehehe/job-trend"
"hyunwoongko/kocrawl" -> "hyunwoongko/kochat"
"hyunwoongko/kocrawl" -> "hyunwoongko/kobart-transformers"
"hyunwoongko/kocrawl" -> "hyunwoongko/citrus-pest-disease-recognition"
"hyunwoongko/kocrawl" -> "hyunwoongko/social-robot-bao"
"hyunwoongko/kocrawl" -> "hyunwoongko/strabismus-recognition"
"pingpong-ai/dialogue-generation-models" -> "kakaobrain/kortok"
"pingpong-ai/dialogue-generation-models" -> "pingpong-ai/chatspace"
"monologg/KoBERT-NER" -> "monologg/KoBERT-nsmc"
"monologg/KoBERT-NER" -> "monologg/DistilKoBERT"
"jucho2725/ktextaug" -> "catSirup/KorEDA"
"jucho2725/ktextaug" -> "toriving/KoEDA"
"SMART-TTS/SMART-G2P" -> "SMART-TTS/SMART-Long_Sentence_TTS"
"SMART-TTS/SMART-G2P" -> "SMART-TTS/SMART-Vocoder"
"SMART-TTS/SMART-G2P" -> "SMART-TTS/SMART-NAR_Fast_TTS"
"SMART-TTS/SMART-G2P" -> "SMART-TTS/SMART-Single_Emotional_TTS"
"SMART-TTS/SMART-G2P" -> "SMART-TTS/SMART-Multi-Speaker-Style-TTS"
"monologg/HanBert-Transformers" -> "tbai2019/HanBert-54k-N"
"monologg/HanBert-Transformers" -> "monologg/DistilKoBERT"
"monologg/HanBert-Transformers" -> "monologg/KoELECTRA-Pipeline"
"monologg/KoCharELECTRA" -> "monologg/KoELECTRA-Pipeline"
"SMART-TTS/SMART-NAR_Fast_TTS" -> "SMART-TTS/SMART-Long_Sentence_TTS"
"SMART-TTS/SMART-NAR_Fast_TTS" -> "SMART-TTS/SMART-Vocoder"
"SMART-TTS/SMART-NAR_Fast_TTS" -> "SMART-TTS/SMART-Single_Emotional_TTS"
"SMART-TTS/SMART-NAR_Fast_TTS" -> "SMART-TTS/SMART-G2P"
"hchung12/espnet-asr" -> "fd873630/RNN-Transducer"
"hchung12/espnet-asr" -> "qute012/korean-speech-recognition-quartznet"
"wikibook/tf2" -> "wikibook/xai"
"szlhl1040/Vehicles-Dispatch-Simulator" -> "dingyuan-shi/Learning-To-Dispatch"
"szlhl1040/Vehicles-Dispatch-Simulator" -> "juhyeonkim95/TaxiSimulatorOnGraph"
"szlhl1040/Vehicles-Dispatch-Simulator" -> "UMich-ML-Group/RL-Ridesharing"
"szlhl1040/Vehicles-Dispatch-Simulator" -> "maybeluo/KDDCup2020-RL-1st-solution"
"szlhl1040/Vehicles-Dispatch-Simulator" -> "hitsuji5/fleet-sim"
"szlhl1040/Vehicles-Dispatch-Simulator" -> "illidanlab/Simulator"
"tbai2019/HanBert-54k-N" -> "monologg/HanBert-Transformers"
"tbai2019/HanBert-54k-N" -> "naver/claf"
"tbai2019/HanBert-54k-N" -> "domyounglee/korbert-mecab-multigpu"
"tbai2019/HanBert-54k-N" -> "monologg/DistilKoBERT"
"tbai2019/HanBert-54k-N" -> "enlipleai/kor_pretrain_LM"
"teammatmul/project-purifier" -> "2runo/Curse-detection-data"
"programgarden/youtube" -> "programgarden/book"
"BM-K/Dialogue-Generation-BERT-GPT2-Korean" -> "BM-K/Dialogue-Generation-BERT-GPT2-English"
"BM-K/Dialogue-Generation-BERT-GPT2-Korean" -> "BM-K/KoSentenceBERT_V2"
"BM-K/Dialogue-Generation-BERT-GPT2-Korean" -> "BM-K/Troll-Detector"
"BM-K/Dialogue-Generation-BERT-GPT2-Korean" -> "BM-K/Analyzing-Product-Review-System-with-BERT"
"hyunwoongko/resnext-parallel" -> "hyunwoongko/strabismus-recognition"
"qute012/korean-speech-recognition-quartznet" -> "qute012/kosr"
"sooftware/Naver-AI-Hackathon-Speech" -> "sooftware/seq2seq"
"CppKorea/Cpp20Study" -> "CppKorea/DesignPattern"
"gyubeomim/pgo_toy_example" -> "LimHyungTae/pcl_tutorial"
"OxideEngine/Oxide" -> "utilForever/CubbyEngine"
"fd873630/deep_speech_2_korean" -> "fd873630/RNN-Transducer"
"hyunwoongko/citrus-pest-disease-recognition" -> "hyunwoongko/social-robot-bao"
"hyunwoongko/citrus-pest-disease-recognition" -> "hyunwoongko/strabismus-recognition"
"BM-K/Dialogue-Generation-BERT-GPT2-English" -> "BM-K/Dialogue-Generation-BERT-GPT2-Korean"
"BM-K/Dialogue-Generation-BERT-GPT2-English" -> "BM-K/KoSentenceBERT_V2"
"BM-K/Dialogue-Generation-BERT-GPT2-English" -> "BM-K/Analyzing-Product-Review-System-with-BERT"
"haven-jeon/TrainKoSpacing" -> "Taekyoon/takos-alpha"
"sooftware/seq2seq" -> "sooftware/Naver-AI-Hackathon-Speech"
"sooftware/seq2seq" -> "sooftware/TIL"
"sooftware/seq2seq" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/seq2seq" -> "sooftware/transformer"
"sooftware/seq2seq" -> "sooftware/speech-paper-review"
"sooftware/seq2seq" -> "sooftware/tacotron2"
"sooftware/transformer" -> "sooftware/seq2seq"
"sooftware/transformer" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/transformer" -> "sooftware/Naver-AI-Hackathon-Speech"
"sooftware/transformer" -> "sooftware/tacotron2"
"sooftware/transformer" -> "sooftware/jasper"
"sooftware/transformer" -> "sooftware/speech-transformer"
"sooftware/transformer" -> "sooftware/ksponspeech"
"seopbo/first_project_nlp" -> "simonjisu/nsmc_study"
"BM-K/Styling-Chatbot-with-Transformer" -> "BM-K/Analyzing-Product-Review-System-with-BERT"
"BM-K/Styling-Chatbot-with-Transformer" -> "BM-K/KoSentenceBERT_V2"
"BM-K/Styling-Chatbot-with-Transformer" -> "BM-K/Dialogue-Generation-BERT-GPT2-Korean"
"BM-K/Styling-Chatbot-with-Transformer" -> "BM-K/Dialogue-Generation-BERT-GPT2-English"
"BM-K/Styling-Chatbot-with-Transformer" -> "BM-K/Troll-Detector"
"BM-K/Analyzing-Product-Review-System-with-BERT" -> "BM-K/Dialogue-Generation-BERT-GPT2-English"
"BM-K/Analyzing-Product-Review-System-with-BERT" -> "BM-K/KoSentenceBERT_V2"
"BM-K/Analyzing-Product-Review-System-with-BERT" -> "BM-K/Dialogue-Generation-BERT-GPT2-Korean"
"BM-K/Analyzing-Product-Review-System-with-BERT" -> "BM-K/Styling-Chatbot-with-Transformer"
"hyunwoongko/strabismus-recognition" -> "hyunwoongko/citrus-pest-disease-recognition"
"hyunwoongko/strabismus-recognition" -> "hyunwoongko/bigdata-lecture"
"sooftware/speech-paper-review" -> "sooftware/TIL"
"sooftware/speech-paper-review" -> "sooftware/seq2seq"
"sooftware/speech-paper-review" -> "sooftware/Naver-AI-Hackathon-Speech"
"sooftware/speech-paper-review" -> "sooftware/Fairseq-Listen-Attend-Spell"
"jungwoo-ha/WeeklyArxivTalk" -> "KLUE-benchmark/KLUE"
"jungwoo-ha/WeeklyArxivTalk" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"jungwoo-ha/WeeklyArxivTalk" -> "boost-devs/ai-tech-interview"
"jungwoo-ha/WeeklyArxivTalk" -> "kakaobrain/nlp-paper-reading"
"jungwoo-ha/WeeklyArxivTalk" -> "kakaobrain/kogpt"
"jungwoo-ha/WeeklyArxivTalk" -> "monologg/KoELECTRA"
"jungwoo-ha/WeeklyArxivTalk" -> "kakaobrain/pororo"
"jungwoo-ha/WeeklyArxivTalk" -> "tunib-ai/large-scale-lm-tutorials"
"jungwoo-ha/WeeklyArxivTalk" -> "songys/AwesomeKorean_Data"
"jungwoo-ha/WeeklyArxivTalk" -> "SKT-AI/KoGPT2"
"jungwoo-ha/WeeklyArxivTalk" -> "sjchoi86/2022-1-deep-learning-applications"
"jungwoo-ha/WeeklyArxivTalk" -> "ko-nlp/Korpora"
"jungwoo-ha/WeeklyArxivTalk" -> "SKT-AI/KoBART"
"jungwoo-ha/WeeklyArxivTalk" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"jungwoo-ha/WeeklyArxivTalk" -> "kwonminki/One-sentence_Diffusion_summary"
"tunib-ai/parallelformers" -> "tunib-ai/oslo"
"tunib-ai/parallelformers" -> "tunib-ai/large-scale-lm-tutorials"
"tunib-ai/parallelformers" -> "jiphyeonjeon/season2"
"tunib-ai/parallelformers" -> "KLUE-benchmark/KLUE"
"tunib-ai/parallelformers" -> "tunib-ai/tunib-electra"
"tunib-ai/parallelformers" -> "monologg/KoBigBird"
"tunib-ai/parallelformers" -> "kakaobrain/pororo"
"tunib-ai/parallelformers" -> "monologg/KoELECTRA"
"tunib-ai/parallelformers" -> "EleutherAI/polyglot"
"tunib-ai/parallelformers" -> "kakaobrain/nlp-paper-reading"
"tunib-ai/parallelformers" -> "Lightning-Universe/lightning-transformers"
"tunib-ai/parallelformers" -> "lassl/lassl"
"tunib-ai/parallelformers" -> "sooftware/Korean-PLM"
"tunib-ai/parallelformers" -> "hyunwoongko/kss"
"tunib-ai/parallelformers" -> "hyunwoongko/kochat"
"youtube-jocoding/pyupbit-autotrade" -> "sharebook-kr/book-cryptocurrency"
"youtube-jocoding/pyupbit-autotrade" -> "sharebook-kr/pyupbit"
"youtube-jocoding/pyupbit-autotrade" -> "youtube-jocoding/gpt-bitcoin"
"youtube-jocoding/pyupbit-autotrade" -> "hyeon9698/upbit_bot"
"youtube-jocoding/pyupbit-autotrade" -> "youtube-jocoding/koreainvestment-autotrade"
"youtube-jocoding/pyupbit-autotrade" -> "msaltnet/smtm"
"jiphyeonjeon/season1" -> "jiphyeonjeon/season2"
"jiphyeonjeon/season1" -> "modulabs/NLP-bootcamp"
"jiphyeonjeon/season1" -> "yukyunglee/Transformer_Survey_Study"
"jiphyeonjeon/season1" -> "jiphyeonjeon/season3"
"jiphyeonjeon/season1" -> "kakaobrain/nlp-paper-reading"
"jiphyeonjeon/season1" -> "tunib-ai/oslo"
"jiphyeonjeon/season1" -> "tunib-ai/large-scale-lm-tutorials"
"jiphyeonjeon/season1" -> "Lilcob/-DL_PaperReadingMeeting"
"jiphyeonjeon/season1" -> "jason9693/APEACH"
"jiphyeonjeon/season1" -> "lassl/lassl"
"jiphyeonjeon/season1" -> "uoneway/Text-Summarization-Repo"
"yukyunglee/Transformer_Survey_Study" -> "jiphyeonjeon/season2"
"yukyunglee/Transformer_Survey_Study" -> "yukyunglee/transformers-resources"
"yukyunglee/Transformer_Survey_Study" -> "Huffon/klue-transformers-tutorial"
"yukyunglee/Transformer_Survey_Study" -> "jiphyeonjeon/season1"
"yukyunglee/Transformer_Survey_Study" -> "tunib-ai/large-scale-lm-tutorials"
"yukyunglee/Transformer_Survey_Study" -> "KLUE-benchmark/KLUE-baseline"
"yukyunglee/Transformer_Survey_Study" -> "yukyunglee/Awesome-Dialogue-State-Tracking" ["e"=1]
"yukyunglee/Transformer_Survey_Study" -> "jinmang2/boostcamp_ai_tech_2"
"yukyunglee/Transformer_Survey_Study" -> "monologg/KoBigBird"
"yukyunglee/Transformer_Survey_Study" -> "sooftware/Korean-PLM"
"yukyunglee/Transformer_Survey_Study" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"yukyunglee/Transformer_Survey_Study" -> "lassl/lassl"
"yukyunglee/Transformer_Survey_Study" -> "kakaobrain/nlp-paper-reading"
"Lightning-Universe/lightning-transformers" -> "Lightning-Universe/lightning-flash" ["e"=1]
"Lightning-Universe/lightning-transformers" -> "Lightning-Universe/lightning-bolts" ["e"=1]
"Lightning-Universe/lightning-transformers" -> "tunib-ai/parallelformers"
"Lightning-Universe/lightning-transformers" -> "tunib-ai/oslo"
"Lightning-Universe/lightning-transformers" -> "Lightning-AI/torchmetrics" ["e"=1]
"Lightning-Universe/lightning-transformers" -> "KLUE-benchmark/KLUE"
"Lightning-Universe/lightning-transformers" -> "Lightning-AI/deep-learning-project-template" ["e"=1]
"Lightning-Universe/lightning-transformers" -> "gritmind/python-nori"
"Lightning-Universe/lightning-transformers" -> "SeanNaren/minGPT"
"Lightning-Universe/lightning-transformers" -> "monologg/KoBigBird"
"Lightning-Universe/lightning-transformers" -> "Huffon/nlp-startups"
"Lightning-Universe/lightning-transformers" -> "lassl/lassl"
"Lightning-Universe/lightning-transformers" -> "kiyoungkim1/LMkor"
"Lightning-Universe/lightning-transformers" -> "KLUE-benchmark/KLUE-baseline"
"Lightning-Universe/lightning-transformers" -> "AIRC-KETI/ke-t5"
"Seonghoon-Yu/AI_Paper_Review" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"Seonghoon-Yu/AI_Paper_Review" -> "songys/AwesomeKorean_Data"
"Seonghoon-Yu/AI_Paper_Review" -> "boost-devs/ai-tech-interview"
"Seonghoon-Yu/AI_Paper_Review" -> "subinium/Misc-Cheatsheet"
"Seonghoon-Yu/AI_Paper_Review" -> "jungwoo-ha/WeeklyArxivTalk"
"Seonghoon-Yu/AI_Paper_Review" -> "seujung/KoBART-summarization"
"Seonghoon-Yu/AI_Paper_Review" -> "uoneway/Text-Summarization-Repo"
"Seonghoon-Yu/AI_Paper_Review" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"Seonghoon-Yu/AI_Paper_Review" -> "teddylee777/machine-learning"
"Seonghoon-Yu/AI_Paper_Review" -> "ukairia777/tensorflow-nlp-tutorial"
"Seonghoon-Yu/AI_Paper_Review" -> "sjchoi86/2022-1-deep-learning-applications"
"boost-devs/ai-tech-interview" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"boost-devs/ai-tech-interview" -> "zzsza/Datascience-Interview-Questions"
"boost-devs/ai-tech-interview" -> "teddylee777/machine-learning"
"boost-devs/ai-tech-interview" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"boost-devs/ai-tech-interview" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"boost-devs/ai-tech-interview" -> "jungwoo-ha/WeeklyArxivTalk"
"boost-devs/ai-tech-interview" -> "songys/AwesomeKorean_Data"
"boost-devs/ai-tech-interview" -> "Beomi/KoAlpaca"
"boost-devs/ai-tech-interview" -> "brave-people/brave-tech-interview" ["e"=1]
"boost-devs/ai-tech-interview" -> "kakaobrain/kogpt"
"boost-devs/ai-tech-interview" -> "onlybooks/python-algorithm-interview" ["e"=1]
"boost-devs/ai-tech-interview" -> "tony9402/baekjoon" ["e"=1]
"boost-devs/ai-tech-interview" -> "teddylee777/langchain-kr"
"boost-devs/ai-tech-interview" -> "subinium/Misc-Cheatsheet"
"boost-devs/ai-tech-interview" -> "brave-people/Dev-Event" ["e"=1]
"uJhin/upbit-client" -> "uJhin/upbit-client-docs"
"uJhin/upbit-client" -> "uJhin/python-upbit-client"
"hyunjun/bookmarks" -> "datanada/Awesome-Korean-NLP"
"hyunjun/bookmarks" -> "eagle705/pytorch-bert-crf-ner"
"hyunjun/bookmarks" -> "songys/AwesomeKorean_Data"
"hyunjun/bookmarks" -> "e9t/nsmc"
"hyunjun/bookmarks" -> "kakao/khaiii"
"hyunjun/bookmarks" -> "awesome-devblog/awesome-devblog" ["e"=1]
"hyunjun/bookmarks" -> "lovit/soynlp"
"hyunjun/bookmarks" -> "GunhoChoi/PyTorch-FastCampus"
"hyunjun/bookmarks" -> "SKTBrain/KoBERT"
"hyunjun/bookmarks" -> "konlpy/konlpy"
"hyunjun/bookmarks" -> "zzsza/Datascience-Interview-Questions"
"hyunjun/bookmarks" -> "seopbo/nlp_classification"
"hyunjun/bookmarks" -> "golbin/TensorFlow-Tutorials"
"hyunjun/bookmarks" -> "monologg/KoELECTRA"
"hyunjun/bookmarks" -> "lovit/KR-WordRank"
"SKT-AI/KoBART" -> "seujung/KoBART-summarization"
"SKT-AI/KoBART" -> "SKT-AI/KoGPT2"
"SKT-AI/KoBART" -> "monologg/KoELECTRA"
"SKT-AI/KoBART" -> "KLUE-benchmark/KLUE"
"SKT-AI/KoBART" -> "uoneway/Text-Summarization-Repo"
"SKT-AI/KoBART" -> "SKTBrain/KoBERT"
"SKT-AI/KoBART" -> "kiyoungkim1/LMkor"
"SKT-AI/KoBART" -> "ko-nlp/Korpora"
"SKT-AI/KoBART" -> "songys/AwesomeKorean_Data"
"SKT-AI/KoBART" -> "kakaobrain/kor-nlu-datasets"
"SKT-AI/KoBART" -> "eagle705/pytorch-bert-crf-ner"
"SKT-AI/KoBART" -> "kakaobrain/pororo"
"SKT-AI/KoBART" -> "kakaobrain/nlp-paper-reading"
"SKT-AI/KoBART" -> "monologg/KoBigBird"
"SKT-AI/KoBART" -> "kakaobrain/kogpt"
"SeanNaren/minGPT" -> "williamFalcon/minGPT"
"uoneway/Text-Summarization-Repo" -> "seujung/KoBART-summarization"
"uoneway/Text-Summarization-Repo" -> "SKT-AI/KoBART"
"uoneway/Text-Summarization-Repo" -> "uoneway/KoBertSum"
"uoneway/Text-Summarization-Repo" -> "cosmoquester/2021-dialogue-summary-competition"
"uoneway/Text-Summarization-Repo" -> "songys/AwesomeKorean_Data"
"uoneway/Text-Summarization-Repo" -> "monologg/KoELECTRA"
"uoneway/Text-Summarization-Repo" -> "kakaobrain/nlp-paper-reading"
"uoneway/Text-Summarization-Repo" -> "KLUE-benchmark/KLUE"
"uoneway/Text-Summarization-Repo" -> "AIRC-KETI/ke-t5"
"uoneway/Text-Summarization-Repo" -> "jiphyeonjeon/season1"
"uoneway/Text-Summarization-Repo" -> "pilsung-kang/Text-Analytics"
"uoneway/Text-Summarization-Repo" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"uoneway/Text-Summarization-Repo" -> "sooftware/k-startups"
"uoneway/Text-Summarization-Repo" -> "Huffon/nlp-startups"
"uoneway/Text-Summarization-Repo" -> "jiphyeonjeon/season2"
"ssut/py-hanspell" -> "haven-jeon/PyKoSpacing"
"ssut/py-hanspell" -> "lovit/soynlp"
"ssut/py-hanspell" -> "9beach/hanspell"
"ssut/py-hanspell" -> "lovit/soyspacing"
"ssut/py-hanspell" -> "bab2min/kiwipiepy"
"ssut/py-hanspell" -> "kakaobrain/kor-nlu-datasets"
"ssut/py-hanspell" -> "lovit/KR-WordRank"
"ssut/py-hanspell" -> "hyunwoongko/kss"
"ssut/py-hanspell" -> "SKTBrain/KoBERT"
"ssut/py-hanspell" -> "monologg/KoELECTRA"
"ssut/py-hanspell" -> "bluedisk/hangul-toolkit"
"ssut/py-hanspell" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"ssut/py-hanspell" -> "SKT-AI/KoBART"
"ssut/py-hanspell" -> "Beomi/KcBERT"
"ssut/py-hanspell" -> "spellcheck-ko/hunspell-dict-ko"
"kakaobrain/pororo" -> "monologg/KoELECTRA"
"kakaobrain/pororo" -> "KLUE-benchmark/KLUE"
"kakaobrain/pororo" -> "kakaobrain/kogpt"
"kakaobrain/pororo" -> "ko-nlp/Korpora"
"kakaobrain/pororo" -> "sooftware/kospeech"
"kakaobrain/pororo" -> "SKT-AI/KoGPT2"
"kakaobrain/pororo" -> "SKTBrain/KoBERT"
"kakaobrain/pororo" -> "songys/AwesomeKorean_Data"
"kakaobrain/pororo" -> "SKT-AI/KoBART"
"kakaobrain/pororo" -> "Beomi/KcBERT"
"kakaobrain/pororo" -> "hyunwoongko/kss"
"kakaobrain/pororo" -> "kakaobrain/nlp-paper-reading"
"kakaobrain/pororo" -> "lovit/soynlp"
"kakaobrain/pororo" -> "jungwoo-ha/WeeklyArxivTalk"
"kakaobrain/pororo" -> "kakao/khaiii"
"shineware/KOMORAN" -> "shineware/PyKOMORAN"
"shineware/KOMORAN" -> "coolengineer/sejong-corpus"
"shineware/KOMORAN" -> "open-korean-text/open-korean-text"
"shineware/KOMORAN" -> "koalanlp/koalanlp"
"shineware/KOMORAN" -> "shineware/komoran-2.0"
"shineware/KOMORAN" -> "twitter/twitter-korean-text"
"shineware/KOMORAN" -> "kakao/khaiii"
"shineware/KOMORAN" -> "SungjoonPark/KoreanWordVectors"
"shineware/KOMORAN" -> "lovit/soynlp"
"shineware/KOMORAN" -> "lovit/textmining-tutorial"
"shineware/KOMORAN" -> "hyunwoongko/kss"
"shineware/KOMORAN" -> "e9t/nsmc"
"shineware/KOMORAN" -> "konlpy/konlpy"
"shineware/KOMORAN" -> "bab2min/Kiwi"
"shineware/KOMORAN" -> "lovit/soyspacing"
"subinium/Misc-Cheatsheet" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"subinium/Misc-Cheatsheet" -> "boost-devs/ai-tech-interview"
"subinium/Misc-Cheatsheet" -> "jungwoo-ha/WeeklyArxivTalk"
"subinium/Misc-Cheatsheet" -> "yukyunglee/Transformer_Survey_Study"
"subinium/Misc-Cheatsheet" -> "SKT-AI/KoBART"
"subinium/Misc-Cheatsheet" -> "kakao/recoteam"
"subinium/Misc-Cheatsheet" -> "monologg/KoBigBird"
"subinium/Misc-Cheatsheet" -> "uoneway/Text-Summarization-Repo"
"subinium/Misc-Cheatsheet" -> "tunib-ai/large-scale-lm-tutorials"
"subinium/Misc-Cheatsheet" -> "sooftware/k-startups"
"subinium/Misc-Cheatsheet" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"subinium/Misc-Cheatsheet" -> "sooftware/Korean-PLM"
"subinium/Misc-Cheatsheet" -> "rickiepark/nlp-with-pytorch"
"subinium/Misc-Cheatsheet" -> "Seonghoon-Yu/AI_Paper_Review"
"subinium/Misc-Cheatsheet" -> "subinium/Problem-Solving"
"utilForever/modern-cpp-tutorial" -> "CppKorea/CppCoreGuidelines"
"utilForever/modern-cpp-tutorial" -> "utilForever/Cubby-v1"
"utilForever/modern-cpp-tutorial" -> "CppKorea/Cpp20Study"
"utilForever/modern-cpp-tutorial" -> "jwvg0425/ModernCppStudy"
"utilForever/modern-cpp-tutorial" -> "utilForever/modern-cpp-next"
"utilForever/modern-cpp-tutorial" -> "utilForever/SimpleRPG-Text"
"utilForever/modern-cpp-tutorial" -> "CppKorea/OptimizedCppStudy"
"utilForever/modern-cpp-tutorial" -> "CppKorea/DesignPattern"
"utilForever/modern-cpp-tutorial" -> "utilForever/OpenGLTutorial"
"Beomi/KcELECTRA" -> "Beomi/KcBERT"
"Beomi/KcELECTRA" -> "monologg/DistilKoBERT"
"Beomi/KcELECTRA" -> "KLUE-benchmark/KLUE"
"Beomi/KcELECTRA" -> "monologg/KoELECTRA"
"Beomi/KcELECTRA" -> "searle-j/KOTE"
"Beomi/KcELECTRA" -> "kocohub/korean-hate-speech"
"Beomi/KcELECTRA" -> "KB-AI-Research/KB-ALBERT"
"Beomi/KcELECTRA" -> "kakaobrain/kor-nlu-datasets"
"Beomi/KcELECTRA" -> "snunlp/KR-BERT"
"Beomi/KcELECTRA" -> "ko-nlp/Korpora"
"Beomi/KcELECTRA" -> "monologg/KoBigBird"
"Beomi/KcELECTRA" -> "SKT-AI/KoBART"
"Beomi/KcELECTRA" -> "songys/AwesomeKorean_Data"
"Beomi/KcELECTRA" -> "hyunwoongko/kss"
"Beomi/KcELECTRA" -> "monologg/KoBERT-Transformers"
"kiyoungkim1/LMkor" -> "monologg/KoELECTRA"
"kiyoungkim1/LMkor" -> "SKT-AI/KoBART"
"kiyoungkim1/LMkor" -> "hyunwoongko/kss"
"kiyoungkim1/LMkor" -> "Beomi/KcBERT"
"kiyoungkim1/LMkor" -> "ko-nlp/Korpora"
"kiyoungkim1/LMkor" -> "SKT-AI/KoGPT2"
"kiyoungkim1/LMkor" -> "KLUE-benchmark/KLUE"
"kiyoungkim1/LMkor" -> "kakaobrain/kogpt"
"kiyoungkim1/LMkor" -> "monologg/KoBigBird"
"kiyoungkim1/LMkor" -> "kakaobrain/nlp-paper-reading"
"kiyoungkim1/LMkor" -> "eagle705/pytorch-bert-crf-ner"
"kiyoungkim1/LMkor" -> "kakaobrain/kor-nlu-datasets"
"kiyoungkim1/LMkor" -> "songys/AwesomeKorean_Data"
"kiyoungkim1/LMkor" -> "AIRC-KETI/ke-t5"
"kiyoungkim1/LMkor" -> "Beomi/KcELECTRA"
"BM-K/KoSentenceBERT-SKT" -> "BM-K/KoSentenceBERT-ETRI"
"BM-K/KoSentenceBERT-SKT" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"BM-K/KoSentenceBERT-SKT" -> "jhgan00/ko-sentence-transformers"
"BM-K/KoSentenceBERT-SKT" -> "BM-K/KoSimCSE-SKT"
"BM-K/KoSentenceBERT-SKT" -> "BM-K/KoMiniLM"
"BM-K/KoSentenceBERT-SKT" -> "BM-K/Troll-Detector"
"BM-K/KoSentenceBERT-SKT" -> "BM-K/Styling-Chatbot-with-Transformer"
"BM-K/KoSentenceBERT-SKT" -> "BM-K/KoBART-summarization-pytorch"
"BM-K/KoSentenceBERT-SKT" -> "kakaobrain/kor-nlu-datasets"
"snunlp/KR-SBERT" -> "adlnlp/K-MHaS"
"rosinality/ml-papers" -> "jungwoo-ha/WeeklyArxivTalk"
"rosinality/ml-papers" -> "dhkim0225/1day_1paper" ["e"=1]
"AIRC-KETI/ke-t5" -> "monologg/KoBigBird"
"AIRC-KETI/ke-t5" -> "AIRC-KETI/ke-t5-downstreams"
"AIRC-KETI/ke-t5" -> "paust-team/pko-t5"
"AIRC-KETI/ke-t5" -> "toriving/KoEDA"
"AIRC-KETI/ke-t5" -> "KLUE-benchmark/KLUE"
"AIRC-KETI/ke-t5" -> "AIRC-KETI/VL-KE-T5"
"AIRC-KETI/ke-t5" -> "naver-ai/carecall-corpus"
"AIRC-KETI/ke-t5" -> "monologg/KoELECTRA"
"AIRC-KETI/ke-t5" -> "sooftware/Korean-PLM"
"AIRC-KETI/ke-t5" -> "kakaobrain/kor-nlu-datasets"
"AIRC-KETI/ke-t5" -> "hyunwoongko/kss"
"AIRC-KETI/ke-t5" -> "tunib-ai/tunib-electra"
"AIRC-KETI/ke-t5" -> "seujung/KoBART-summarization"
"AIRC-KETI/ke-t5" -> "SKT-AI/KoBART"
"AIRC-KETI/ke-t5" -> "EleutherAI/polyglot"
"southkorea/seoul-maps" -> "southkorea/southkorea-maps"
"southkorea/seoul-maps" -> "southkorea/southkorea-population"
"stevekwon211/Hello-Kaggle-Guide-KOR" -> "zzsza/Kaggle-knowhow"
"hwk0702/keras2torch" -> "yukyunglee/transformers-resources"
"hwk0702/keras2torch" -> "DSBA-Lab/CodeLab"
"hwk0702/keras2torch" -> "ClustProject/KUDataClassification"
"hyunwoongko/kss" -> "likejazz/korean-sentence-splitter"
"hyunwoongko/kss" -> "kiyoungkim1/LMkor"
"hyunwoongko/kss" -> "hyunwoongko/pecab"
"hyunwoongko/kss" -> "KLUE-benchmark/KLUE"
"hyunwoongko/kss" -> "ko-nlp/Korpora"
"hyunwoongko/kss" -> "monologg/KoELECTRA"
"hyunwoongko/kss" -> "monologg/KoBigBird"
"hyunwoongko/kss" -> "hyunwoongko/python-mecab-kor"
"hyunwoongko/kss" -> "bab2min/kiwipiepy"
"hyunwoongko/kss" -> "haven-jeon/PyKoSpacing"
"hyunwoongko/kss" -> "kakaobrain/kor-nlu-datasets"
"hyunwoongko/kss" -> "kakaobrain/pororo"
"hyunwoongko/kss" -> "AIRC-KETI/ke-t5"
"hyunwoongko/kss" -> "Beomi/KcELECTRA"
"hyunwoongko/kss" -> "songys/AwesomeKorean_Data"
"ropas/pytea" -> "tunib-ai/tunib-electra"
"ropas/pytea" -> "tunib-ai/oslo"
"robotpilot/ros2-seminar-examples" -> "robotpilot/ros-seminar"
"thunlp/SOS4NLP" -> "tunib-ai/large-scale-lm-tutorials"
"thunlp/SOS4NLP" -> "kakaobrain/nlp-paper-reading"
"thunlp/SOS4NLP" -> "jiphyeonjeon/season1"
"thunlp/SOS4NLP" -> "hyunwoongko/pecab"
"thunlp/SOS4NLP" -> "Huffon/klue-transformers-tutorial"
"thunlp/SOS4NLP" -> "KLUE-benchmark/KLUE"
"thunlp/SOS4NLP" -> "jiphyeonjeon/season2"
"thunlp/SOS4NLP" -> "yukyunglee/Transformer_Survey_Study"
"thunlp/SOS4NLP" -> "lassl/lassl"
"thunlp/SOS4NLP" -> "hyunwoongko/kss"
"thunlp/SOS4NLP" -> "monologg/KoELECTRA"
"thunlp/SOS4NLP" -> "AIRC-KETI/ke-t5"
"thunlp/SOS4NLP" -> "monologg/KoBigBird"
"hyunwoongko/nlp-datasets" -> "hyunwoongko/dialobot"
"hyunwoongko/nlp-datasets" -> "hyunwoongko/bert2bert-summarization"
"hyunwoongko/nlp-datasets" -> "hyunwoongko/kobart-transformers"
"BM-K/KoSimCSE-SKT" -> "BM-K/KoMiniLM"
"BM-K/KoSimCSE-SKT" -> "BM-K/Troll-Detector"
"BM-K/KoSimCSE-SKT" -> "BM-K/KoBART-summarization-pytorch"
"BM-K/KoSimCSE-SKT" -> "BM-K/KoSentenceBERT_V2"
"BM-K/KoSimCSE-SKT" -> "BM-K/Styling-Chatbot-with-Transformer"
"BM-K/KoSimCSE-SKT" -> "BM-K/Dialogue-Generation-BERT-GPT2-Korean"
"yansfil/data-engineering-study" -> "yansfil/grab-data-world"
"yansfil/data-engineering-study" -> "dhkdn9192/data_engineer_career"
"sooftware/End-to-End-Speech-Recognition-Models" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/End-to-End-Speech-Recognition-Models" -> "sooftware/deepspeech2"
"sooftware/End-to-End-Speech-Recognition-Models" -> "sooftware/lightning-asr"
"rickiepark/nlp-with-pytorch" -> "rickiepark/nlp-with-transformers"
"rickiepark/nlp-with-pytorch" -> "ratsgo/nlpbook"
"sooftware/lightning-asr" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/lightning-asr" -> "sooftware/tacotron2"
"sooftware/lightning-asr" -> "sooftware/End-to-End-Speech-Recognition-Models"
"wikibook/elasticsearch" -> "higee/elastic"
"uoneway/KoBertSum" -> "seujung/KoBART-summarization"
"uoneway/KoBertSum" -> "raqoon886/KorBertSum"
"uoneway/KoBertSum" -> "uoneway/Text-Summarization-Repo"
"uJhin/python-upbit-client" -> "uJhin/upbit-client-docs"
"uJhin/python-upbit-client" -> "uJhin/upbit-client"
"ko-nlp/Open-korean-corpora" -> "kakaobrain/kor-nlu-datasets"
"ko-nlp/Open-korean-corpora" -> "ko-nlp/Korpora"
"ko-nlp/Open-korean-corpora" -> "pingpong-ai/dialogue-generation-models"
"KLUE-benchmark/KLUE" -> "monologg/KoELECTRA"
"KLUE-benchmark/KLUE" -> "kakaobrain/kor-nlu-datasets"
"KLUE-benchmark/KLUE" -> "monologg/KoBigBird"
"KLUE-benchmark/KLUE" -> "ko-nlp/Korpora"
"KLUE-benchmark/KLUE" -> "SKT-AI/KoBART"
"KLUE-benchmark/KLUE" -> "kakaobrain/pororo"
"KLUE-benchmark/KLUE" -> "songys/AwesomeKorean_Data"
"KLUE-benchmark/KLUE" -> "kakaobrain/kogpt"
"KLUE-benchmark/KLUE" -> "KLUE-benchmark/KLUE-baseline"
"KLUE-benchmark/KLUE" -> "Beomi/KcBERT"
"KLUE-benchmark/KLUE" -> "kocohub/korean-hate-speech"
"KLUE-benchmark/KLUE" -> "SKT-AI/KoGPT2"
"KLUE-benchmark/KLUE" -> "jungwoo-ha/WeeklyArxivTalk"
"KLUE-benchmark/KLUE" -> "Beomi/KcELECTRA"
"KLUE-benchmark/KLUE" -> "AIRC-KETI/ke-t5"
"hyunwoongko/summarizers" -> "hyunwoongko/dialobot"
"hyunwoongko/summarizers" -> "salesforce/ctrl-sum"
"hyunwoongko/openchat" -> "tunib-ai/large-scale-lm-tutorials"
"hyunwoongko/openchat" -> "hyunwoongko/kochat"
"hyunwoongko/openchat" -> "tunib-ai/oslo"
"hyunwoongko/openchat" -> "haven-jeon/KoGPT2-chatbot"
"hyunwoongko/openchat" -> "kakaobrain/nlp-paper-reading"
"hyunwoongko/openchat" -> "hyunwoongko/dialobot"
"hyunwoongko/openchat" -> "tunib-ai/parallelformers"
"hyunwoongko/openchat" -> "jiphyeonjeon/season2"
"hyunwoongko/openchat" -> "kakaobrain/pororo"
"hyunwoongko/openchat" -> "kakaobrain/kortok"
"hyunwoongko/openchat" -> "sangdee/kss-java"
"hyunwoongko/openchat" -> "hyunwoongko/kobart-transformers"
"hyunwoongko/openchat" -> "KLUE-benchmark/KLUE-baseline"
"hyunwoongko/openchat" -> "monologg/KoBigBird"
"hyunwoongko/openchat" -> "kocohub/korean-hate-speech"
"utilForever/CubbyTower" -> "utilForever/2022-CppKorea-DataStructure"
"utilForever/CubbyTower" -> "utilForever/CubbyEngine"
"utilForever/CubbyTower" -> "utilForever/2022-KW-ECS-Development"
"seujung/KoBART-summarization" -> "SKT-AI/KoBART"
"seujung/KoBART-summarization" -> "uoneway/Text-Summarization-Repo"
"seujung/KoBART-summarization" -> "uoneway/KoBertSum"
"seujung/KoBART-summarization" -> "hyunwoongko/kobart-transformers"
"seujung/KoBART-summarization" -> "monologg/KoELECTRA"
"seujung/KoBART-summarization" -> "AIRC-KETI/ke-t5"
"umi0410/how-to-backend-in-go" -> "FacerAin/facerain.github.io"
"breadum/kiwoom" -> "elbakramer/koapy"
"breadum/kiwoom" -> "sharebook-kr/pykiwoom"
"breadum/kiwoom" -> "coreanq/kw_condition"
"breadum/kiwoom" -> "Soju06/python-kis"
"breadum/kiwoom" -> "sharebook-kr/mojito"
"breadum/kiwoom" -> "koreainvestment/open-trading-api"
"sooftware/pytorch-lr-scheduler" -> "sooftware/jasper"
"sooftware/pytorch-lr-scheduler" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/pytorch-lr-scheduler" -> "sooftware/transformer"
"reinforcement-learning-kr/Unity_ML_Agents_2.0" -> "reinforcement-learning-kr/Unity_ML_Agents"
"AIRC-KETI/ke-t5-downstreams" -> "AIRC-KETI/long-ke-t5"
"jaketae/koclip" -> "KLUE-benchmark/KLUE-baseline"
"jaketae/koclip" -> "navervision/KELIP"
"jaketae/koclip" -> "lassl/lassl"
"toriving/KoEDA" -> "KLUE-benchmark/KLUE-baseline"
"toriving/KoEDA" -> "jucho2725/ktextaug"
"jason9693/APEACH" -> "tunib-ai/DKTC"
"jason9693/APEACH" -> "jinmang2/DOOLY"
"BoostcampAITech/lecture-note-python-basics-for-ai" -> "sjchoi86/upstage-basic-deeplearning"
"BoostcampAITech/lecture-note-python-basics-for-ai" -> "thejungwon/boostcamp_project_ocr"
"BoostcampAITech/lecture-note-python-basics-for-ai" -> "MoMentum99/pstage_01_image_classification"
"sjchoi86/upstage-basic-deeplearning" -> "BoostcampAITech/lecture-note-python-basics-for-ai"
"sjchoi86/upstage-basic-deeplearning" -> "yukyunglee/transformers-resources"
"KLUE-benchmark/KLUE-baseline" -> "toriving/KoEDA"
"KLUE-benchmark/KLUE-baseline" -> "lassl/lassl"
"KLUE-benchmark/KLUE-baseline" -> "jiphyeonjeon/season2"
"KLUE-benchmark/KLUE-baseline" -> "Huffon/klue-transformers-tutorial"
"Huffon/klue-transformers-tutorial" -> "KLUE-benchmark/KLUE-baseline"
"Huffon/klue-transformers-tutorial" -> "seopbo/nlp_tutorials"
"Huffon/klue-transformers-tutorial" -> "yukyunglee/Transformer_Survey_Study"
"Huffon/klue-transformers-tutorial" -> "KLUE-benchmark/KLUE"
"hyeon9698/upbit_bot" -> "showmethecoin/upbit-trader"
"hyeon9698/upbit_bot" -> "sigmak/coinAutoTrader"
"hyeon9698/upbit_bot" -> "chaeso/upbitbot"
"uJhin/upbit-client-docs" -> "uJhin/python-upbit-client"
"uJhin/upbit-client-docs" -> "uJhin/upbit-client"
"sooftware/RNN-Transducer" -> "sooftware/jasper"
"sooftware/RNN-Transducer" -> "sooftware/tacotron2"
"raqoon886/KorBertSum" -> "HaloKim/KorBertSum"
"raqoon886/KorBertSum" -> "uoneway/KoBertSum"
"utilForever/2021-KAIST-Include-AlphaGoZero" -> "utilForever/Runeterra"
"utilForever/CGStudy" -> "utilForever/phys"
"jinmang2/boostcamp_ai_tech_2" -> "ydy8989/boostcamp"
"jinmang2/boostcamp_ai_tech_2" -> "jinmang2/HuggingTemplate"
"sjhwang82/DeepLearning" -> "Nardien/KALA" ["e"=1]
"handong-life/college-timetable" -> "shine-jung/food-handong"
"handong-life/college-timetable" -> "zoomkoding/zoomkoding.github.io"
"handong-life/college-timetable" -> "zoomkoding/gongmojoo.com"
"ydy8989/boostcamp" -> "jinmang2/boostcamp_ai_tech_2"
"FacerAin/facerain.github.io" -> "Dcom-KHU/dcom-career-guide"
"FacerAin/facerain.github.io" -> "Dcom-KHU/dcom-tech-interview"
"BM-K/Troll-Detector" -> "BM-K/KoSentenceBERT_V2"
"BM-K/Troll-Detector" -> "BM-K/Dialogue-Generation-BERT-GPT2-Korean"
"BM-K/Troll-Detector" -> "BM-K/Dialogue-Generation-BERT-GPT2-English"
"SMART-TTS/SMART-Long_Sentence_TTS" -> "SMART-TTS/SMART-NAR_Fast_TTS"
"SMART-TTS/SMART-Long_Sentence_TTS" -> "SMART-TTS/SMART-Vocoder"
"SMART-TTS/SMART-Long_Sentence_TTS" -> "SMART-TTS/SMART-Single_Emotional_TTS"
"SMART-TTS/SMART-Long_Sentence_TTS" -> "SMART-TTS/SMART-G2P"
"jiphyeonjeon/season2" -> "jiphyeonjeon/season1"
"jiphyeonjeon/season2" -> "jiphyeonjeon/season3"
"jiphyeonjeon/season2" -> "tunib-ai/oslo"
"jiphyeonjeon/season2" -> "KLUE-benchmark/KLUE-baseline"
"jiphyeonjeon/season2" -> "yukyunglee/Transformer_Survey_Study"
"jiphyeonjeon/season2" -> "hyunwoongko/dialobot"
"jiphyeonjeon/season2" -> "tunib-ai/tunib-electra"
"jiphyeonjeon/season2" -> "tunib-ai/large-scale-lm-tutorials"
"jiphyeonjeon/season2" -> "tunib-ai/DKTC"
"jiphyeonjeon/season2" -> "toriving/KoEDA"
"sangdee/kss-java" -> "hyunwoongko/pecab"
"sangdee/kss-java" -> "hyunwoongko/dialobot"
"kakaobrain/kortok" -> "pingpong-ai/dialogue-generation-models"
"sooftware/deepspeech2" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/deepspeech2" -> "sooftware/End-to-End-Speech-Recognition-Models"
"fd873630/RNN-Transducer" -> "hchung12/espnet-asr"
"thejungwon/boostcamp_project_mask" -> "thejungwon/boostcamp_project_ocr"
"sooftware/luna-transformer" -> "sooftware/jasper"
"sooftware/luna-transformer" -> "sooftware/Fairseq-Listen-Attend-Spell"
"ClustProject/KUDataPreprocessing" -> "ClustProject/KUDataOutlier"
"HaloKim/KorBertSum" -> "raqoon886/KorBertSum"
"qute012/kosr" -> "qute012/korean-speech-recognition-quartznet"
"sooftware/tacotron2" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/tacotron2" -> "sooftware/seq2seq"
"hyunwoongko/megatron-11b" -> "hyunwoongko/dialobot"
"sooftware/jasper" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/jasper" -> "sooftware/tacotron2"
"sooftware/jasper" -> "sooftware/seq2seq"
"sooftware/jasper" -> "sooftware/transformer"
"MoMentum99/pstage_01_image_classification" -> "thejungwon/boostcamp_project_ocr"
"thejungwon/boostcamp_project_ocr" -> "thejungwon/boostcamp_project_mask"
"hyunwoongko/dialobot" -> "hyunwoongko/megatron-11b"
"BM-K/KoSentenceBERT_V2" -> "BM-K/Dialogue-Generation-BERT-GPT2-English"
"BM-K/KoSentenceBERT_V2" -> "BM-K/Dialogue-Generation-BERT-GPT2-Korean"
"BM-K/KoSentenceBERT_V2" -> "BM-K/Troll-Detector"
"BM-K/KoSentenceBERT_V2" -> "BM-K/Analyzing-Product-Review-System-with-BERT"
"vhrehfdl/bentoml_tutorial" -> "vhrehfdl/MLflow_tutorial"
"lucidrains/PaLM-pytorch" -> "lucidrains/PaLM-jax"
"lucidrains/PaLM-pytorch" -> "conceptofmind/PaLM" ["e"=1]
"lucidrains/PaLM-pytorch" -> "lucidrains/RETRO-pytorch"
"lucidrains/PaLM-pytorch" -> "tunib-ai/oslo"
"lucidrains/PaLM-pytorch" -> "hpcaitech/PaLM-colossalai" ["e"=1]
"lucidrains/PaLM-pytorch" -> "lassl/lassl"
"lucidrains/PaLM-pytorch" -> "monologg/KoBigBird"
"lucidrains/PaLM-pytorch" -> "lucidrains/flamingo-pytorch" ["e"=1]
"lucidrains/PaLM-pytorch" -> "google-research/FLAN" ["e"=1]
"lucidrains/PaLM-pytorch" -> "Lightning-Universe/lightning-transformers"
"lucidrains/PaLM-pytorch" -> "lucidrains/CoCa-pytorch" ["e"=1]
"lucidrains/PaLM-pytorch" -> "tunib-ai/parallelformers"
"lucidrains/PaLM-pytorch" -> "kakaobrain/mindall-e"
"lucidrains/PaLM-pytorch" -> "princeton-nlp/LM-BFF" ["e"=1]
"lucidrains/PaLM-pytorch" -> "lucidrains/parti-pytorch" ["e"=1]
"kakaoenterprise/JORLDY" -> "reinforcement-learning-kr/2021_RLKR_Drone_Delivery_Challenge_with_Unity"
"kakaoenterprise/JORLDY" -> "reinforcement-learning-kr/Unity_ML_Agents_2.0"
"kakaoenterprise/JORLDY" -> "kakaobrain/brain-agent"
"kakaoenterprise/JORLDY" -> "utilForever/rl-paper-study"
"kakaoenterprise/JORLDY" -> "medipixel/rl_algorithms" ["e"=1]
"kakaoenterprise/JORLDY" -> "reinforcement-learning-kr/how_to_study_rl"
"kakaoenterprise/JORLDY" -> "reinforcement-learning-kr/rl_bootcamp"
"kakaoenterprise/JORLDY" -> "dongminlee94/Samsung-DRL-Code"
"kakaoenterprise/JORLDY" -> "chagmgang/distributed_reinforcement_learning"
"kakaoenterprise/JORLDY" -> "sail-sg/envpool" ["e"=1]
"sharebook-kr/mojito" -> "Soju06/python-kis"
"sharebook-kr/mojito" -> "pjueon/pykis"
"sharebook-kr/mojito" -> "koreainvestment/open-trading-api"
"BaekKyunShin/musthave_mldl_problem_solving_strategy" -> "lovedlim/BigDataCertificationCourses"
"kakao/recoteam" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"kakao/recoteam" -> "SeongBeomLEE/RecSys-Tech-Blog-Article"
"kakao/recoteam" -> "SeongBeomLEE/RecsysTutorial"
"kakao/recoteam" -> "kakao/buffalo"
"kakao/recoteam" -> "ceo21ckim/Awesome-Recsys" ["e"=1]
"kakao/recoteam" -> "RS-KR/GNN-RS-Beginner"
"kakao/recoteam" -> "boost-devs/ai-tech-interview"
"kakao/recoteam" -> "UpstageAI/2022-lguplus-AI-Ground"
"kakao/recoteam" -> "subinium/Misc-Cheatsheet"
"kakao/recoteam" -> "kakao/n2" ["e"=1]
"kakao/recoteam" -> "zzsza/Datascience-Interview-Questions"
"kakao/recoteam" -> "jihoo-kim/awesome-RecSys" ["e"=1]
"kakao/recoteam" -> "jihoo-kim/Awesome-Generative-RecSys" ["e"=1]
"kakao/recoteam" -> "jaewonlee-728/fastcampus-RecSys"
"kakao/recoteam" -> "CausalInferenceLab/Causal-Inference-with-Python"
"lucidrains/RETRO-pytorch" -> "Langboat/mengzi-retrieval-lm"
"lucidrains/RETRO-pytorch" -> "facebookresearch/atlas" ["e"=1]
"lucidrains/RETRO-pytorch" -> "lucidrains/memorizing-transformers-pytorch" ["e"=1]
"lucidrains/RETRO-pytorch" -> "lucidrains/PaLM-pytorch"
"lucidrains/RETRO-pytorch" -> "facebookresearch/contriever" ["e"=1]
"lucidrains/RETRO-pytorch" -> "urvashik/knnlm" ["e"=1]
"lucidrains/RETRO-pytorch" -> "AI21Labs/in-context-ralm" ["e"=1]
"lucidrains/RETRO-pytorch" -> "castorini/pyserini" ["e"=1]
"lucidrains/RETRO-pytorch" -> "lucidrains/flamingo-pytorch" ["e"=1]
"lucidrains/RETRO-pytorch" -> "facebookresearch/FiD" ["e"=1]
"lucidrains/RETRO-pytorch" -> "texttron/tevatron" ["e"=1]
"lucidrains/RETRO-pytorch" -> "tunib-ai/oslo"
"lucidrains/RETRO-pytorch" -> "princeton-nlp/LM-BFF" ["e"=1]
"lucidrains/RETRO-pytorch" -> "r-three/t-few" ["e"=1]
"lucidrains/RETRO-pytorch" -> "tunib-ai/parallelformers"
"CppKorea/CppCoreGuidelines" -> "utilForever/modern-cpp-tutorial"
"CppKorea/CppCoreGuidelines" -> "CppKorea/DesignPattern"
"CppKorea/CppCoreGuidelines" -> "CppKorea/CppConcurrencyInAction"
"CppKorea/CppCoreGuidelines" -> "jacking75/examples_CMake"
"CppKorea/CppCoreGuidelines" -> "mingrammer/git-tips" ["e"=1]
"CppKorea/CppCoreGuidelines" -> "jwvg0425/ModernCppStudy"
"CppKorea/CppCoreGuidelines" -> "utilForever/RosettaStone"
"CppKorea/CppCoreGuidelines" -> "CppKorea/IntroductionToModernCpp"
"CppKorea/CppCoreGuidelines" -> "eddykim777/qtbook"
"CppKorea/CppCoreGuidelines" -> "naver/d2codingfont" ["e"=1]
"CppKorea/CppCoreGuidelines" -> "CppKorea/CppTemplateStudy"
"CppKorea/CppCoreGuidelines" -> "CubbyFlow/CubbyFlow"
"CppKorea/CppCoreGuidelines" -> "junsooo/linux-insides-ko"
"CppKorea/CppCoreGuidelines" -> "CppKorea/OptimizedCppStudy"
"CppKorea/CppCoreGuidelines" -> "CppKorea/Cpp20Study"
"cosmoquester/2021-dialogue-summary-competition" -> "seopbo/nlp_tutorials"
"cosmoquester/2021-dialogue-summary-competition" -> "uoneway/Text-Summarization-Repo"
"cosmoquester/2021-dialogue-summary-competition" -> "tunib-ai/DKTC"
"cosmoquester/2021-dialogue-summary-competition" -> "Huffon/klue-transformers-tutorial"
"cosmoquester/2021-dialogue-summary-competition" -> "toriving/KoEDA"
"cosmoquester/2021-dialogue-summary-competition" -> "KLUE-benchmark/KLUE-baseline"
"kakaobrain/kogpt" -> "SKT-AI/KoGPT2"
"kakaobrain/kogpt" -> "monologg/KoELECTRA"
"kakaobrain/kogpt" -> "Beomi/KoAlpaca"
"kakaobrain/kogpt" -> "KLUE-benchmark/KLUE"
"kakaobrain/kogpt" -> "kakaobrain/pororo"
"kakaobrain/kogpt" -> "SKTBrain/KoBERT"
"kakaobrain/kogpt" -> "ko-nlp/Korpora"
"kakaobrain/kogpt" -> "songys/AwesomeKorean_Data"
"kakaobrain/kogpt" -> "kakaobrain/mindall-e"
"kakaobrain/kogpt" -> "SKT-AI/KoBART"
"kakaobrain/kogpt" -> "monologg/KoBigBird"
"kakaobrain/kogpt" -> "kiyoungkim1/LMkor"
"kakaobrain/kogpt" -> "Beomi/KcBERT"
"kakaobrain/kogpt" -> "nlpai-lab/KULLM"
"kakaobrain/kogpt" -> "EleutherAI/polyglot"
"kakaobrain/mindall-e" -> "kakaobrain/kogpt"
"kakaobrain/mindall-e" -> "monologg/KoBigBird"
"kakaobrain/mindall-e" -> "tunib-ai/oslo"
"kakaobrain/mindall-e" -> "kakaobrain/coyo-dataset" ["e"=1]
"kakaobrain/mindall-e" -> "KLUE-benchmark/KLUE"
"kakaobrain/mindall-e" -> "tunib-ai/large-scale-lm-tutorials"
"kakaobrain/mindall-e" -> "jungwoo-ha/WeeklyArxivTalk"
"kakaobrain/mindall-e" -> "monologg/KoELECTRA"
"kakaobrain/mindall-e" -> "sooftware/Korean-PLM"
"kakaobrain/mindall-e" -> "kakaobrain/pororo"
"kakaobrain/mindall-e" -> "kakaobrain/rq-vae-transformer" ["e"=1]
"kakaobrain/mindall-e" -> "ko-nlp/Korpora"
"kakaobrain/mindall-e" -> "yukyunglee/Transformer_Survey_Study"
"kakaobrain/mindall-e" -> "smilegate-ai/korean_unsmile_dataset"
"kakaobrain/mindall-e" -> "AIRC-KETI/ke-t5"
"cresset-template/cresset" -> "jungwoo-ha/WeeklyArxivTalk"
"cresset-template/cresset" -> "KLUE-benchmark/KLUE"
"cresset-template/cresset" -> "pilsung-kang/Text-Analytics"
"cresset-template/cresset" -> "kakaobrain/kogpt"
"cresset-template/cresset" -> "AminRezaei0x443/PyTorch-LIT"
"cresset-template/cresset" -> "tunib-ai/oslo"
"cresset-template/cresset" -> "tunib-ai/large-scale-lm-tutorials"
"cresset-template/cresset" -> "sooftware/k-startups"
"cresset-template/cresset" -> "subinium/Misc-Cheatsheet"
"cresset-template/cresset" -> "byeongjokim/MLOps-Example"
"cresset-template/cresset" -> "kimwoonggon/publicservant_AI"
"cresset-template/cresset" -> "kakaobrain/nlp-paper-reading"
"cresset-template/cresset" -> "kakaobrain/pororo"
"cresset-template/cresset" -> "rentruewang/koila" ["e"=1]
"cresset-template/cresset" -> "EleutherAI/polyglot"
"smilegate-ai/HuLiC" -> "smilegate-ai/korean_unsmile_dataset"
"koreainvestment/open-trading-api" -> "Soju06/python-kis"
"koreainvestment/open-trading-api" -> "sharebook-kr/mojito"
"koreainvestment/open-trading-api" -> "sharebook-kr/pykrx"
"koreainvestment/open-trading-api" -> "pjueon/pykis"
"koreainvestment/open-trading-api" -> "elbakramer/koapy"
"koreainvestment/open-trading-api" -> "INVESTAR/StockAnalysisInPython"
"koreainvestment/open-trading-api" -> "FinanceData/FinanceDataReader"
"koreainvestment/open-trading-api" -> "breadum/kiwoom"
"koreainvestment/open-trading-api" -> "youtube-jocoding/koreainvestment-autotrade"
"koreainvestment/open-trading-api" -> "FinanceData/marcap"
"koreainvestment/open-trading-api" -> "FinanceData/OpenDartReader"
"koreainvestment/open-trading-api" -> "msaltnet/smtm"
"koreainvestment/open-trading-api" -> "sharebook-kr/pyupbit"
"koreainvestment/open-trading-api" -> "quantylab/rltrader"
"koreainvestment/open-trading-api" -> "gyusu/Creon-Datareader"
"JeongJiHeon/ScoreDiffusionModel" -> "kwonminki/One-sentence_Diffusion_summary"
"JeongJiHeon/ScoreDiffusionModel" -> "yang-song/score_sde_pytorch" ["e"=1]
"JeongJiHeon/ScoreDiffusionModel" -> "sangyun884/Diffusion-Models-Seminar"
"JeongJiHeon/ScoreDiffusionModel" -> "sunlin-ai/diffusion_tutorial" ["e"=1]
"JeongJiHeon/ScoreDiffusionModel" -> "sjchoi86/2022-1-deep-learning-applications"
"JeongJiHeon/ScoreDiffusionModel" -> "acids-ircam/diffusion_models" ["e"=1]
"JeongJiHeon/ScoreDiffusionModel" -> "cloneofsimo/consistency_models" ["e"=1]
"sooftware/k-startups" -> "tunib-ai/tunib-electra"
"sooftware/k-startups" -> "tunib-ai/DKTC"
"sooftware/k-startups" -> "Huffon/nlp-startups"
"sooftware/k-startups" -> "tunib-ai/oslo"
"sooftware/k-startups" -> "tunib-ai/KMWP"
"sooftware/k-startups" -> "jiphyeonjeon/season2"
"sooftware/k-startups" -> "sooftware/nlp-tasks"
"sooftware/k-startups" -> "toriving/KoEDA"
"sooftware/k-startups" -> "uoneway/Text-Summarization-Repo"
"sooftware/k-startups" -> "sooftware/kospeech"
"sooftware/k-startups" -> "sooftware/Korean-PLM"
"sooftware/k-startups" -> "sooftware/ksponspeech"
"sooftware/k-startups" -> "cosmoquester/2021-dialogue-summary-competition"
"sooftware/k-startups" -> "gyunggyung/Korea-Startups"
"sooftware/k-startups" -> "sooftware/jasper"
"CppKorea/CppConcurrencyInAction" -> "CppKorea/DesignPattern"
"CppKorea/CppConcurrencyInAction" -> "CppKorea/IntroductionToModernCpp"
"CppKorea/CppConcurrencyInAction" -> "CppKorea/CppTemplateStudy"
"CppKorea/CppConcurrencyInAction" -> "CppKorea/CppKoreaSeminar7th"
"ukairia777/tensorflow-nlp-tutorial" -> "KLUE-benchmark/KLUE"
"ukairia777/tensorflow-nlp-tutorial" -> "songys/AwesomeKorean_Data"
"ukairia777/tensorflow-nlp-tutorial" -> "SKTBrain/KoBERT"
"ukairia777/tensorflow-nlp-tutorial" -> "sooftware/Korean-PLM"
"ukairia777/tensorflow-nlp-tutorial" -> "SKT-AI/KoGPT2"
"ukairia777/tensorflow-nlp-tutorial" -> "ratsgo/embedding"
"ukairia777/tensorflow-nlp-tutorial" -> "kakaobrain/kogpt"
"ukairia777/tensorflow-nlp-tutorial" -> "ko-nlp/Korpora"
"ukairia777/tensorflow-nlp-tutorial" -> "kocohub/korean-hate-speech"
"ukairia777/tensorflow-nlp-tutorial" -> "kakaobrain/pororo"
"ukairia777/tensorflow-nlp-tutorial" -> "Beomi/KoAlpaca"
"ukairia777/tensorflow-nlp-tutorial" -> "Beomi/KcBERT"
"ukairia777/tensorflow-nlp-tutorial" -> "monologg/KoELECTRA"
"ukairia777/tensorflow-nlp-tutorial" -> "hyunwoongko/kss"
"ukairia777/tensorflow-nlp-tutorial" -> "kiyoungkim1/LMkor"
"sjchoi86/2022-1-deep-learning-applications" -> "Lilcob/-DL_PaperReadingMeeting"
"sjchoi86/2022-1-deep-learning-applications" -> "yukyunglee/transformers-resources"
"sjchoi86/2022-1-deep-learning-applications" -> "jungwoo-ha/WeeklyArxivTalk"
"sjchoi86/2022-1-deep-learning-applications" -> "sangyun884/Diffusion-Models-Seminar"
"sjchoi86/2022-1-deep-learning-applications" -> "yukyunglee/Transformer_Survey_Study"
"sjchoi86/2022-1-deep-learning-applications" -> "searle-j/KOTE"
"sjchoi86/2022-1-deep-learning-applications" -> "jwkanggist/self-supervised-learning-narratives-1"
"sjchoi86/2022-1-deep-learning-applications" -> "sjchoi86/yet-another-rl-tutorial"
"sjchoi86/2022-1-deep-learning-applications" -> "kakaobrain/nlp-paper-reading"
"tunib-ai/DKTC" -> "tunib-ai/KMWP"
"tunib-ai/DKTC" -> "tunib-ai/transformers"
"tunib-ai/DKTC" -> "tunib-ai/tunib-electra"
"tunib-ai/DKTC" -> "jason9693/APEACH"
"WooilJeong/PyKakao" -> "WooilJeong/PyNaver"
"WooilJeong/PyKakao" -> "WooilJeong/PublicDataReader"
"WooilJeong/PyNaver" -> "WooilJeong/PyKakao"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "BM-K/KoSentenceBERT-SKT"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "BM-K/KoSentenceBERT-ETRI"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "BM-K/KoMiniLM"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "BM-K/KoSimCSE-SKT"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "kakaobrain/kor-nlu-datasets"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "hyunwoongko/pecab"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "sooftware/Korean-PLM"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "jhgan00/ko-sentence-transformers"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "airobotlab/KoChatGPT"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "nlpai-lab/KURE"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "BM-K/KoDiffCSE"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "monologg/KoBigBird"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "NomaDamas/awesome-korean-llm"
"BM-K/Sentence-Embedding-Is-All-You-Need" -> "EleutherAI/polyglot"
"jhgan00/ko-sentence-transformers" -> "BM-K/KoSentenceBERT-SKT"
"jhgan00/ko-sentence-transformers" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"jhgan00/ko-sentence-transformers" -> "snunlp/KR-SBERT"
"jhgan00/ko-sentence-transformers" -> "NomaDamas/awesome-korean-llm"
"jhgan00/ko-sentence-transformers" -> "kakaobrain/kor-nlu-datasets"
"jhgan00/ko-sentence-transformers" -> "melodysdreamj/KoVicuna"
"jhgan00/ko-sentence-transformers" -> "ssisOneTeam/Korean-Embedding-Model-Performance-Benchmark-for-Retriever"
"jhgan00/ko-sentence-transformers" -> "TmaxEdu/KorDPR"
"jhgan00/ko-sentence-transformers" -> "EleutherAI/polyglot"
"jhgan00/ko-sentence-transformers" -> "Beomi/KcELECTRA"
"jhgan00/ko-sentence-transformers" -> "nlpai-lab/KULLM"
"jhgan00/ko-sentence-transformers" -> "Beomi/ko-lm-evaluation-harness"
"jhgan00/ko-sentence-transformers" -> "deepseasw/nlp_model_list"
"jwkanggist/self-supervised-learning-narratives-1" -> "jwkanggist/SSL-narratives-NLP-1"
"jwkanggist/self-supervised-learning-narratives-1" -> "jwkanggist/SSL-narratives-VLM-1"
"e9t/nsmc" -> "SKTBrain/KoBERT"
"e9t/nsmc" -> "Beomi/KcBERT"
"e9t/nsmc" -> "kocohub/korean-hate-speech"
"e9t/nsmc" -> "konlpy/konlpy"
"e9t/nsmc" -> "datanada/Awesome-Korean-NLP"
"e9t/nsmc" -> "lovit/soynlp"
"e9t/nsmc" -> "songys/AwesomeKorean_Data"
"e9t/nsmc" -> "monologg/KoELECTRA"
"e9t/nsmc" -> "kakaobrain/kor-nlu-datasets"
"e9t/nsmc" -> "KLUE-benchmark/KLUE"
"e9t/nsmc" -> "ko-nlp/Korpora"
"e9t/nsmc" -> "SKT-AI/KoGPT2"
"e9t/nsmc" -> "ratsgo/embedding"
"e9t/nsmc" -> "kakao/khaiii"
"e9t/nsmc" -> "SKT-AI/KoBART"
"monologg/KoBigBird" -> "KLUE-benchmark/KLUE"
"monologg/KoBigBird" -> "AIRC-KETI/ke-t5"
"monologg/KoBigBird" -> "monologg/KoELECTRA"
"monologg/KoBigBird" -> "KLUE-benchmark/KLUE-baseline"
"monologg/KoBigBird" -> "sooftware/Korean-PLM"
"monologg/KoBigBird" -> "toriving/KoEDA"
"monologg/KoBigBird" -> "hyunwoongko/pecab"
"monologg/KoBigBird" -> "lassl/lassl"
"monologg/KoBigBird" -> "LG-NLP/KorWikiTableQuestions"
"monologg/KoBigBird" -> "kakaobrain/kor-nlu-datasets"
"monologg/KoBigBird" -> "Huffon/nlp-startups"
"monologg/KoBigBird" -> "tunib-ai/tunib-electra"
"monologg/KoBigBird" -> "monologg/KoBERT-Transformers"
"monologg/KoBigBird" -> "SKT-AI/KoBART"
"monologg/KoBigBird" -> "hyunwoongko/kss"
"EleutherAI/dps" -> "Beomi/easy-lm-trainer"
"smilegate-ai/korean_unsmile_dataset" -> "smilegate-ai/HuLiC"
"smilegate-ai/korean_unsmile_dataset" -> "kocohub/korean-hate-speech"
"smilegate-ai/korean_unsmile_dataset" -> "smilegate-ai/korean_smile_style_dataset"
"smilegate-ai/korean_unsmile_dataset" -> "sgunderscore/hatescore-korean-hate-speech"
"smilegate-ai/korean_unsmile_dataset" -> "monologg/KoELECTRA"
"smilegate-ai/korean_unsmile_dataset" -> "ko-nlp/Korpora"
"smilegate-ai/korean_unsmile_dataset" -> "jason9693/APEACH"
"smilegate-ai/korean_unsmile_dataset" -> "searle-j/KOTE"
"smilegate-ai/korean_unsmile_dataset" -> "KLUE-benchmark/KLUE"
"smilegate-ai/korean_unsmile_dataset" -> "monologg/KoBigBird"
"smilegate-ai/korean_unsmile_dataset" -> "songys/AwesomeKorean_Data"
"smilegate-ai/korean_unsmile_dataset" -> "Beomi/KcELECTRA"
"smilegate-ai/korean_unsmile_dataset" -> "Beomi/KcBERT"
"smilegate-ai/korean_unsmile_dataset" -> "toriving/KoEDA"
"smilegate-ai/korean_unsmile_dataset" -> "sooftware/Korean-PLM"
"lucidrains/PaLM-jax" -> "lucidrains/PaLM-pytorch"
"utilForever/2022-Make-Interpreter-Rust" -> "utilForever/2022-Make-Compiler-Rust"
"utilForever/2022-Make-Interpreter-Rust" -> "utilForever/2022-CppKorea-DataStructure"
"sculove/xing-plus" -> "sculove/QWebview-plus"
"sculove/xing-plus" -> "sharebook-kr/pyxing"
"sculove/xing-plus" -> "taehyunjo90/gatherer"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "boost-devs/ai-tech-interview"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "jungwoo-ha/WeeklyArxivTalk"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "kakao/recoteam"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "yukyunglee/Transformer_Survey_Study"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "sjchoi86/upstage-basic-deeplearning"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "boostcamp-AI-Tech-alumni/Events"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "zzsza/Datascience-Interview-Questions"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "songys/Chatbot_data"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "subinium/Misc-Cheatsheet"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "songys/AwesomeKorean_Data"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "mlops-for-mle/mlops-for-mle" ["e"=1]
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "jinmang2/boostcamp_ai_tech_2"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "toriving/KoEDA"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "thejungwon/Boostcamp-CV-Serving"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "tunib-ai/large-scale-lm-tutorials"
"sgunderscore/hatescore-korean-hate-speech" -> "smilegate-ai/korean_unsmile_dataset"
"sgunderscore/hatescore-korean-hate-speech" -> "searle-j/KOTE"
"kristjankorjus/applied-deep-learning-resources" -> "sjchoi86/Deep-Learning-101"
"kristjankorjus/applied-deep-learning-resources" -> "szwed/awesome-machine-learning-python"
"EleutherAI/polyglot" -> "tunib-ai/large-scale-lm-tutorials"
"EleutherAI/polyglot" -> "sooftware/Korean-PLM"
"EleutherAI/polyglot" -> "HeegyuKim/open-korean-instructions"
"EleutherAI/polyglot" -> "nlpai-lab/KULLM"
"EleutherAI/polyglot" -> "lassl/lassl"
"EleutherAI/polyglot" -> "melodysdreamj/KoVicuna"
"EleutherAI/polyglot" -> "Beomi/KoAlpaca"
"EleutherAI/polyglot" -> "EleutherAI/oslo"
"EleutherAI/polyglot" -> "tunib-ai/oslo"
"EleutherAI/polyglot" -> "naver-ai/korean-safety-benchmarks"
"EleutherAI/polyglot" -> "KLUE-benchmark/KLUE"
"EleutherAI/polyglot" -> "monologg/KoELECTRA"
"EleutherAI/polyglot" -> "airobotlab/KoChatGPT"
"EleutherAI/polyglot" -> "kakaobrain/kogpt"
"EleutherAI/polyglot" -> "AIRC-KETI/ke-t5"
"tunib-ai/large-scale-lm-tutorials" -> "tunib-ai/oslo"
"tunib-ai/large-scale-lm-tutorials" -> "EleutherAI/polyglot"
"tunib-ai/large-scale-lm-tutorials" -> "jiphyeonjeon/season2"
"tunib-ai/large-scale-lm-tutorials" -> "KLUE-benchmark/KLUE"
"tunib-ai/large-scale-lm-tutorials" -> "lassl/lassl"
"tunib-ai/large-scale-lm-tutorials" -> "tunib-ai/parallelformers"
"tunib-ai/large-scale-lm-tutorials" -> "yukyunglee/Transformer_Survey_Study"
"tunib-ai/large-scale-lm-tutorials" -> "EleutherAI/oslo"
"tunib-ai/large-scale-lm-tutorials" -> "jiphyeonjeon/season1"
"tunib-ai/large-scale-lm-tutorials" -> "monologg/KoBigBird"
"tunib-ai/large-scale-lm-tutorials" -> "sooftware/Korean-PLM"
"tunib-ai/large-scale-lm-tutorials" -> "hyunwoongko/pecab"
"tunib-ai/large-scale-lm-tutorials" -> "jungwoo-ha/WeeklyArxivTalk"
"tunib-ai/large-scale-lm-tutorials" -> "VumBleBot/odqa_baseline_code" ["e"=1]
"tunib-ai/large-scale-lm-tutorials" -> "smilegate-ai/korean_unsmile_dataset"
"utilForever/Cubby-v1" -> "utilForever/PolyMapGenerator"
"utilForever/Cubby-v1" -> "utilForever/PBRStudy"
"utilForever/Cubby-v1" -> "utilForever/CubbyFlow-v1"
"jorditorresBCN/LibroTensorFlow" -> "jorditorresBCN/FirstContactWithTensorFlow-2ndEdition"
"SeongBeomLEE/RecsysTutorial" -> "SeongBeomLEE/RecSys-Tech-Blog-Article"
"SeongBeomLEE/RecSys-Tech-Blog-Article" -> "SeongBeomLEE/RecsysTutorial"
"SeongBeomLEE/RecSys-Tech-Blog-Article" -> "kakao/recoteam"
"AIRC-KETI/VL-KE-T5" -> "AIRC-KETI/kowow"
"TmaxEdu/KorDPR" -> "redlion0929/KorDPR_NLP"
"KR-HappyFace/KoDALLE" -> "hihellohowareyou/RESREF_Chatbot_data_for_Korean"
"searle-j/KOTE" -> "sooftware/Korean-PLM"
"searle-j/KOTE" -> "Beomi/KcELECTRA"
"tunib-ai/oslo" -> "lassl/lassl"
"tunib-ai/oslo" -> "tunib-ai/large-scale-lm-tutorials"
"tunib-ai/oslo" -> "jiphyeonjeon/season2"
"tunib-ai/oslo" -> "tunib-ai/DKTC"
"tunib-ai/oslo" -> "tunib-ai/tunib-electra"
"tunib-ai/oslo" -> "tunib-ai/parallelformers"
"tunib-ai/oslo" -> "tunib-ai/KMWP"
"tunib-ai/oslo" -> "sooftware/k-startups"
"tunib-ai/oslo" -> "KLUE-benchmark/KLUE-baseline"
"tunib-ai/oslo" -> "EleutherAI/oslo"
"tunib-ai/oslo" -> "EleutherAI/polyglot"
"tunib-ai/oslo" -> "jiphyeonjeon/season1"
"tunib-ai/oslo" -> "sooftware/Korean-PLM"
"tunib-ai/oslo" -> "tunib-ai/transformers"
"tunib-ai/oslo" -> "hyunwoongko/kocrawl"
"yukyunglee/transformers-resources" -> "TooTouch/REVECA"
"yukyunglee/transformers-resources" -> "DSBA-Lab/CodeLab"
"yukyunglee/transformers-resources" -> "yookyungkho/DSBA_CS224N_2021"
"LimHyungTae/pcl_tutorial" -> "gyubeomim/pgo_toy_example"
"ClustProject/KUDataClassification" -> "ClustProject/KUDataRegression"
"ClustProject/KUDataClassification" -> "ClustProject/KUDataRepresentation"
"ClustProject/KUDataClassification" -> "ClustProject/KUDataForecasting"
"ClustProject/KUDataRegression" -> "ClustProject/KUDataClassification"
"ClustProject/KUDataRegression" -> "ClustProject/KUDataRepresentation"
"ClustProject/KUDataRegression" -> "ClustProject/KUDataForecasting"
"kakaobrain/brain-agent" -> "chagmgang/distributed_reinforcement_learning"
"jiphyeonjeon/season3" -> "jiphyeonjeon/season2"
"lassl/lassl" -> "tunib-ai/oslo"
"lassl/lassl" -> "seopbo/nlp_tutorials"
"lassl/lassl" -> "EleutherAI/oslo"
"lassl/lassl" -> "hyunwoongko/kobart-transformers"
"lassl/lassl" -> "hyunwoongko/pecab"
"lassl/lassl" -> "KLUE-benchmark/KLUE-baseline"
"lassl/lassl" -> "sooftware/Korean-PLM"
"lassl/lassl" -> "tunib-ai/tunib-electra"
"BM-K/KoBART-summarization-pytorch" -> "BM-K/Troll-Detector"
"BM-K/KoMiniLM" -> "BM-K/Troll-Detector"
"BM-K/KoMiniLM" -> "BM-K/KoBART-summarization-pytorch"
"BM-K/KoMiniLM" -> "BM-K/KoSimCSE-SKT"
"BM-K/KoMiniLM" -> "BM-K/KoSentenceBERT_V2"
"tunib-ai/tunib-electra" -> "tunib-ai/transformers"
"tunib-ai/tunib-electra" -> "tunib-ai/KMWP"
"tunib-ai/tunib-electra" -> "tunib-ai/DKTC"
"SMART-TTS/SMART-Multi-Speaker-Style-TTS" -> "SMART-TTS/SMART-Long_Sentence_TTS"
"SMART-TTS/SMART-Multi-Speaker-Style-TTS" -> "SMART-TTS/SMART-NAR_Fast_TTS"
"SMART-TTS/SMART-Multi-Speaker-Style-TTS" -> "SMART-TTS/SMART-Vocoder"
"SMART-TTS/SMART-Multi-Speaker-Style-TTS" -> "SMART-TTS/SMART-Single_Emotional_TTS"
"seopbo/nlp_tutorials" -> "lassl/lassl"
"tunib-ai/KMWP" -> "tunib-ai/DKTC"
"tunib-ai/KMWP" -> "tunib-ai/transformers"
"tunib-ai/KMWP" -> "tunib-ai/tunib-electra"
"ClustProject/KUDataRepresentation" -> "ClustProject/KUDataForecasting"
"ClustProject/KUDataRepresentation" -> "ClustProject/KUDataRegression"
"ClustProject/KUDataRepresentation" -> "ClustProject/KUDataClassification"
"ClustProject/KUDataForecasting" -> "ClustProject/KUDataRepresentation"
"ClustProject/KUDataForecasting" -> "ClustProject/KUDataRegression"
"ClustProject/KUDataForecasting" -> "ClustProject/KUDataClassification"
"ClustProject/KUDataOutlier" -> "ClustProject/KUDataPreprocessing"
"ClustProject/KUDataOutlier" -> "ClustProject/KUDataClassification"
"ClustProject/KUDataOutlier" -> "ClustProject/KUDataRegression"
"ClustProject/KUDataOutlier" -> "ClustProject/KUDataRepresentation"
"ClustProject/KUDataOutlier" -> "ClustProject/KUDataForecasting"
"metterian/peep-talk" -> "sugyeonge/Towards-diverse-QAG"
"metterian/peep-talk" -> "dlawjddn803/INFO"
"tunib-ai/transformers" -> "tunib-ai/tunib-electra"
"tunib-ai/transformers" -> "tunib-ai/KMWP"
"vhrehfdl/MLflow_tutorial" -> "vhrehfdl/bentoml_tutorial"
"vhrehfdl/MLflow_tutorial" -> "CausalInferenceLab/Experimentation-platform-materials"
"vhrehfdl/MLflow_tutorial" -> "vhrehfdl/NLP_Company"
"Dcom-KHU/dcom-tech-interview" -> "FacerAin/facerain.github.io"
"Dcom-KHU/dcom-tech-interview" -> "stevejhkang/kubernetes-tutorial"
"Dcom-KHU/dcom-tech-interview" -> "Dcom-KHU/dcom-career-guide"
"utilForever/2022-Make-Compiler-Rust" -> "utilForever/2022-Make-Interpreter-Rust"
"sooftware/nlp-tasks" -> "sooftware/luna-transformer"
"sooftware/nlp-tasks" -> "sooftware/sooftware.io"
"TooTouch/REVECA" -> "ClustProject/KUDataRepresentation"
"TooTouch/REVECA" -> "ClustProject/KUDataForecasting"
"sjchoi86/Tensorflow-101" -> "terryum/TensorFlow_Exercises"
"sjchoi86/Tensorflow-101" -> "guillaume-chevalier/LSTM-Human-Activity-Recognition" ["e"=1]
"sjchoi86/Tensorflow-101" -> "nlintz/TensorFlow-Tutorials" ["e"=1]
"sjchoi86/Tensorflow-101" -> "sjchoi86/dl_tutorials"
"sjchoi86/Tensorflow-101" -> "pkmital/tensorflow_tutorials" ["e"=1]
"sjchoi86/Tensorflow-101" -> "sjchoi86/dl_tutorials_10weeks"
"sjchoi86/Tensorflow-101" -> "sjchoi86/Deep-Learning-101"
"sjchoi86/Tensorflow-101" -> "sjchoi86/advanced-tensorflow"
"sjchoi86/Tensorflow-101" -> "instillai/TensorFlow-Course" ["e"=1]
"sjchoi86/Tensorflow-101" -> "nfmcclure/tensorflow_cookbook" ["e"=1]
"sjchoi86/Tensorflow-101" -> "jtoy/awesome-tensorflow" ["e"=1]
"sjchoi86/Tensorflow-101" -> "alrojo/tensorflow-tutorial" ["e"=1]
"sjchoi86/Tensorflow-101" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"sjchoi86/Tensorflow-101" -> "BinRoot/TensorFlow-Book" ["e"=1]
"sjchoi86/Tensorflow-101" -> "tflearn/tflearn" ["e"=1]
"kjsman/stable-diffusion-pytorch" -> "hkproj/pytorch-stable-diffusion" ["e"=1]
"kjsman/stable-diffusion-pytorch" -> "tunib-ai/large-scale-lm-tutorials"
"kjsman/stable-diffusion-pytorch" -> "owenliang/pytorch-diffusion"
"kjsman/stable-diffusion-pytorch" -> "EleutherAI/polyglot"
"kjsman/stable-diffusion-pytorch" -> "sjchoi86/2022-1-deep-learning-applications"
"kjsman/stable-diffusion-pytorch" -> "explainingai-code/StableDiffusion-PyTorch" ["e"=1]
"kjsman/stable-diffusion-pytorch" -> "dome272/Diffusion-Models-pytorch" ["e"=1]
"kjsman/stable-diffusion-pytorch" -> "lassl/lassl"
"kjsman/stable-diffusion-pytorch" -> "kwonminki/One-sentence_Diffusion_summary"
"kjsman/stable-diffusion-pytorch" -> "AssemblyAI-Community/MinImagen" ["e"=1]
"kjsman/stable-diffusion-pytorch" -> "JeongJiHeon/ScoreDiffusionModel"
"kjsman/stable-diffusion-pytorch" -> "kh-kim/arxiv-translator"
"kjsman/stable-diffusion-pytorch" -> "sooftware/Korean-PLM"
"kjsman/stable-diffusion-pytorch" -> "ukairia777/tensorflow-nlp-tutorial"
"kjsman/stable-diffusion-pytorch" -> "lucidrains/classifier-free-guidance-pytorch" ["e"=1]
"DSBA-Lab/CodeLab" -> "ClustProject/KUDataRepresentation"
"DSBA-Lab/CodeLab" -> "ClustProject/KUDataForecasting"
"DSBA-Lab/CodeLab" -> "yukyunglee/transformers-resources"
"DSBA-Lab/CodeLab" -> "yookyungkho/DSBA_CS224N_2021"
"DSBA-Lab/CodeLab" -> "ClustProject/Clust"
"kwonminki/One-sentence_Diffusion_summary" -> "jungwoo-ha/WeeklyArxivTalk"
"kwonminki/One-sentence_Diffusion_summary" -> "sangyun884/Diffusion-Models-Seminar"
"kwonminki/One-sentence_Diffusion_summary" -> "JeongJiHeon/ScoreDiffusionModel"
"kwonminki/One-sentence_Diffusion_summary" -> "kwonminki/Asyrp_official" ["e"=1]
"kwonminki/One-sentence_Diffusion_summary" -> "boost-devs/ai-tech-interview"
"kwonminki/One-sentence_Diffusion_summary" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"kwonminki/One-sentence_Diffusion_summary" -> "rosinality/ml-papers"
"kwonminki/One-sentence_Diffusion_summary" -> "wangkai930418/awesome-diffusion-categorized" ["e"=1]
"kwonminki/One-sentence_Diffusion_summary" -> "sjchoi86/2022-1-deep-learning-applications"
"kwonminki/One-sentence_Diffusion_summary" -> "Seonghoon-Yu/AI_Paper_Review"
"kwonminki/One-sentence_Diffusion_summary" -> "sjhwang82/AdvancedML"
"kwonminki/One-sentence_Diffusion_summary" -> "awjuliani/pytorch-diffusion" ["e"=1]
"kwonminki/One-sentence_Diffusion_summary" -> "gwang-kim/DiffusionCLIP" ["e"=1]
"kwonminki/One-sentence_Diffusion_summary" -> "subinium/Misc-Cheatsheet"
"hyunwoongko/pecab" -> "lassl/lassl"
"hyunwoongko/pecab" -> "sooftware/Korean-PLM"
"hyunwoongko/pecab" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"hyunwoongko/pecab" -> "hyunwoongko/kss"
"hyunwoongko/pecab" -> "monologg/KoBigBird"
"hyunwoongko/pecab" -> "KLUE-benchmark/KLUE-baseline"
"hyunwoongko/pecab" -> "tunib-ai/tunib-electra"
"hyunwoongko/pecab" -> "hyunwoongko/python-mecab-kor"
"hyunwoongko/pecab" -> "monologg/KoCharELECTRA"
"hyunwoongko/pecab" -> "seopbo/nlp_tutorials"
"sjchoi86/Deep-Learning-101" -> "kristjankorjus/applied-deep-learning-resources"
"sjchoi86/Deep-Learning-101" -> "sjchoi86/dl_tutorials_10weeks"
"sjchoi86/Deep-Learning-101" -> "sjchoi86/Tensorflow-101"
"sjchoi86/Deep-Learning-101" -> "KnHuq/Dynamic-Tensorflow-Tutorial" ["e"=1]
"sjchoi86/Deep-Learning-101" -> "sjchoi86/dl_tutorials_3rd"
"sjchoi86/Deep-Learning-101" -> "sjchoi86/advanced-tensorflow"
"akic4op4/GNE" -> "devunt/10th-amendment"
"akic4op4/GNE" -> "devsisters/multi-speaker-tacotron-tensorflow"
"akic4op4/GNE" -> "theeluwin/textrankr"
"akic4op4/GNE" -> "xnuk/K-SSVM-node"
"CausalInferenceLab/Causal-Inference-with-Python" -> "CausalInferenceLab/causal-inference-practice"
"CausalInferenceLab/Causal-Inference-with-Python" -> "CausalInferenceLab/OCE-Materials"
"CausalInferenceLab/Causal-Inference-with-Python" -> "CausalInferenceLab/CausalInferenceLab.github.io"
"CausalInferenceLab/Causal-Inference-with-Python" -> "CausalInferenceLab/causal-inference-in-python-code"
"CausalInferenceLab/Causal-Inference-with-Python" -> "CausalInferenceLab/Experimentation-platform-materials"
"CausalInferenceLab/Causal-Inference-with-Python" -> "Pseudo-Lab/data-engineering-for-everybody"
"CausalInferenceLab/Causal-Inference-with-Python" -> "sjchoi86/2022-1-deep-learning-applications"
"CausalInferenceLab/Causal-Inference-with-Python" -> "CausalInferenceLab/causal-inference-lecture"
"CausalInferenceLab/Causal-Inference-with-Python" -> "CausalInferenceLab/Gamifying-Causal-Inference-with-Game"
"CausalInferenceLab/Causal-Inference-with-Python" -> "uoneway/Text-Summarization-Repo"
"CausalInferenceLab/Causal-Inference-with-Python" -> "kakao/recoteam"
"CausalInferenceLab/Causal-Inference-with-Python" -> "boost-devs/ai-tech-interview"
"CausalInferenceLab/Causal-Inference-with-Python" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"CausalInferenceLab/Causal-Inference-with-Python" -> "jungwoo-ha/WeeklyArxivTalk"
"CausalInferenceLab/Causal-Inference-with-Python" -> "pilsung-kang/Text-Analytics"
"sculove/QWebview-plus" -> "sculove/xing-plus"
"sculove/QWebview-plus" -> "sculove/Kiwoom-Helper"
"sculove/QWebview-plus" -> "coreanq/kw_condition"
"sculove/QWebview-plus" -> "didw/PyTrader"
"sculove/QWebview-plus" -> "elbakramer/koapy"
"sculove/QWebview-plus" -> "sharebook-kr/pykiwoom"
"sculove/QWebview-plus" -> "didw/PyMLT"
"sculove/QWebview-plus" -> "gyusu/Creon-Datareader"
"theeluwin/textrankr" -> "theeluwin/lexrankr"
"theeluwin/textrankr" -> "lovit/KR-WordRank"
"hunkim/effective_python_notebook" -> "hunkim/ml"
"hunkim/effective_python_notebook" -> "hunkim/Wit-Facebook" ["e"=1]
"hunkim/ml" -> "hunkim/effective_python_notebook"
"hunkim/ml" -> "hunkim/TensorFlow-ML-Exercises"
"EleutherAI/oslo" -> "lassl/lassl"
"EleutherAI/oslo" -> "jason9693/polyglot-finetuning-oslo"
"EleutherAI/oslo" -> "jason9693/oslo-kogpt-finetunig"
"EleutherAI/oslo" -> "tunib-ai/oslo"
"EleutherAI/oslo" -> "EleutherAI/polyglot"
"EleutherAI/oslo" -> "EleutherAI/dps"
"EleutherAI/oslo" -> "tunib-ai/large-scale-lm-tutorials"
"EleutherAI/oslo" -> "sooftware/Korean-PLM"
"EleutherAI/oslo" -> "jiphyeonjeon/season2"
"EleutherAI/oslo" -> "hyunwoongko/python-mecab-kor"
"EleutherAI/oslo" -> "hyunwoongko/pecab"
"forkonlp/N2H4" -> "forkonlp/DNH4"
"forkonlp/N2H4" -> "haven-jeon/KoNLP"
"forkonlp/N2H4" -> "SungjoonPark/KoreanWordVectors"
"forkonlp/N2H4" -> "e9t/nsmc"
"forkonlp/N2H4" -> "NamyounKim/NLP4kec"
"forkonlp/N2H4" -> "datanada/Awesome-Korean-NLP"
"forkonlp/N2H4" -> "coolengineer/sejong-corpus"
"forkonlp/N2H4" -> "mrchypark/tqk"
"forkonlp/N2H4" -> "R-Korea/weekly_R_quiz"
"forkonlp/N2H4" -> "lovit/KR-WordRank"
"TensorFlowKR/awesome_tensorflow_implementations" -> "sjchoi86/dl_tutorials_10weeks"
"TensorFlowKR/awesome_tensorflow_implementations" -> "FuZer/StudyTensorFlow"
"TensorFlowKR/awesome_tensorflow_implementations" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "jazzsaxmafia/show_attend_and_tell.tensorflow" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "aikorea/cs231n"
"TensorFlowKR/awesome_tensorflow_implementations" -> "jazzsaxmafia/show_and_tell.tensorflow" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "golbin/TensorFlow-Tutorials"
"TensorFlowKR/awesome_tensorflow_implementations" -> "hunkim/effective_python_notebook"
"TensorFlowKR/awesome_tensorflow_implementations" -> "sjchoi86/Deep-Learning-101"
"TensorFlowKR/awesome_tensorflow_implementations" -> "nlintz/TensorFlow-Tutorials" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "TensorFlowKR/dlcampjeju"
"TensorFlowKR/awesome_tensorflow_implementations" -> "nicolas-ivanov/tf_seq2seq_chatbot" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "datanada/Awesome-Korean-NLP"
"TensorFlowKR/awesome_tensorflow_implementations" -> "jazzsaxmafia/video_to_sequence" ["e"=1]
"terryum/TensorFlow_Exercises" -> "sjchoi86/Tensorflow-101"
"terryum/TensorFlow_Exercises" -> "guillaume-chevalier/LSTM-Human-Activity-Recognition" ["e"=1]
"terryum/TensorFlow_Exercises" -> "pkmital/tensorflow_tutorials" ["e"=1]
"terryum/TensorFlow_Exercises" -> "hardmaru/write-rnn-tensorflow" ["e"=1]
"terryum/TensorFlow_Exercises" -> "instillai/TensorFlow-Course" ["e"=1]
"terryum/TensorFlow_Exercises" -> "DjangoPeng/tensorflow-in-depth" ["e"=1]
"terryum/TensorFlow_Exercises" -> "zsdonghao/text-to-image" ["e"=1]
"jorditorresBCN/FirstContactWithTensorFlow" -> "rickiepark/first-steps-with-tensorflow"
"hyunyulhenry/quant_py" -> "sharebook-kr/pykrx"
"hyunyulhenry/quant_py" -> "FinanceData/OpenDartReader"
"hyunyulhenry/quant_py" -> "hyunyulhenry/quant_cookbook"
"hyunyulhenry/quant_py" -> "jung-min-seo/A-Roadmap-for-the-quant-beginner"
"hyunyulhenry/quant_py" -> "quant4junior/algoTrade"
"hyunyulhenry/quant_py" -> "wikibook/quant"
"jaketae/storyteller" -> "tunib-ai/oslo"
"jaketae/storyteller" -> "lassl/lassl"
"jaketae/storyteller" -> "jiphyeonjeon/season2"
"jaketae/storyteller" -> "neosapience/editts"
"sooftware/Korean-PLM" -> "EleutherAI/polyglot"
"sooftware/Korean-PLM" -> "lassl/lassl"
"sooftware/Korean-PLM" -> "hyunwoongko/pecab"
"sooftware/Korean-PLM" -> "HeegyuKim/open-korean-instructions"
"sooftware/Korean-PLM" -> "monologg/KoBigBird"
"sooftware/Korean-PLM" -> "searle-j/KOTE"
"sooftware/Korean-PLM" -> "naver-ai/korean-safety-benchmarks"
"sooftware/Korean-PLM" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"sooftware/Korean-PLM" -> "jiphyeonjeon/season2"
"sooftware/Korean-PLM" -> "smilegate-ai/korean_smile_style_dataset"
"sooftware/Korean-PLM" -> "AIRC-KETI/ke-t5"
"sooftware/Korean-PLM" -> "deepseasw/nlp_model_list"
"sooftware/Korean-PLM" -> "tunib-ai/tunib-electra"
"sooftware/Korean-PLM" -> "EleutherAI/oslo"
"sooftware/Korean-PLM" -> "monologg/KoELECTRA"
"Soju06/python-kis" -> "pjueon/pykis"
"Soju06/python-kis" -> "sharebook-kr/mojito"
"Soju06/python-kis" -> "koreainvestment/open-trading-api"
"Soju06/python-kis" -> "breadum/kiwoom"
"Soju06/python-kis" -> "elbakramer/koapy"
"Soju06/python-kis" -> "sharebook-kr/pykrx"
"FuZer/StudyTensorFlow" -> "golbin/TensorFlow-ML-Exercises"
"FuZer/StudyTensorFlow" -> "tensorflowkorea/tensorflow-kr"
"FuZer/StudyTensorFlow" -> "nmhkahn/deep_learning_tutorial"
"FuZer/StudyTensorFlow" -> "TensorFlowKR/awesome_tensorflow_implementations"
"FuZer/StudyTensorFlow" -> "sjchoi86/dl_tutorials_10weeks"
"boostcamp-AI-Tech-alumni/Events" -> "thejungwon/search-engine-tutorial"
"Beomi/easy-lm-trainer" -> "jason9693/oslo-kogpt-finetunig"
"mechurak/kiwoom" -> "didw/PyTrader"
"rickiepark/nlp-with-transformers" -> "rickiepark/nlp-with-pytorch"
"minsuk-heo/problemsolving" -> "leechanwoo/Tensorflow-projects"
"monologg/nlp-arxiv-daily" -> "hyunwoongko/nlp-datasets"
"hyunwoongko/python-mecab-kor" -> "tunib-ai/artwork_captions"
"muik/transliteration" -> "hangulize/hangulize"
"muik/transliteration" -> "sublee/hangulize"
"muik/transliteration" -> "scarletcho/KoLM"
"muik/transliteration" -> "bluedisk/korean_char_rnn"
"muik/transliteration" -> "scarletcho/KoG2P"
"jwkanggist/SSL-narratives-VLM-1" -> "jwkanggist/SSL-narratives-NLP-1"
"jwkanggist/SSL-narratives-VLM-1" -> "jwkanggist/self-supervised-learning-narratives-1"
"jwkanggist/SSL-narratives-VLM-1" -> "jwkangmarco/LLM-narratives"
"bluedisk/korean_char_rnn" -> "insikk/kor-char-rnn-tensorflow"
"aikorea/cs231n" -> "nmhkahn/deep_learning_tutorial"
"aikorea/cs231n" -> "sjchoi86/dl_tutorials_10weeks"
"aikorea/cs231n" -> "likejazz/cnn-text-classification-tf"
"pjueon/pykis" -> "Soju06/python-kis"
"pjueon/pykis" -> "sharebook-kr/mojito"
"utilForever/2022-KW-ECS-Development" -> "utilForever/2022-KW-RLEnv"
"smilegate-ai/korean_smile_style_dataset" -> "smilegate-ai/korean_unsmile_dataset"
"smilegate-ai/korean_smile_style_dataset" -> "smilegate-ai/HuLiC"
"smilegate-ai/korean_smile_style_dataset" -> "sooftware/Korean-PLM"
"smilegate-ai/korean_smile_style_dataset" -> "searle-j/KOTE"
"smilegate-ai/korean_smile_style_dataset" -> "tunib-ai/DKTC"
"hugman/deep_learning" -> "krikit/annie"
"kaniblu/hangul-utils" -> "bluedisk/hangul-toolkit"
"kaniblu/hangul-utils" -> "jungyeul/korean-parallel-corpora"
"kaniblu/hangul-utils" -> "kakaobrain/kor-nlu-datasets"
"kaniblu/hangul-utils" -> "lassl/lassl"
"kaniblu/hangul-utils" -> "ZIZUN/korean-malicious-comments-dataset"
"kaniblu/hangul-utils" -> "kocohub/korean-hate-speech"
"kaniblu/hangul-utils" -> "bab2min/corpus"
"kaniblu/hangul-utils" -> "JDongian/python-jamo"
"kaniblu/hangul-utils" -> "KLUE-benchmark/KLUE"
"minsuk-heo/BigData" -> "higee/elastic"
"Curzy/Wolsemap" -> "sunrint/recruit"
"Pseudo-Lab/data-engineering-for-everybody" -> "heehehe/job-trend"
"Pseudo-Lab/data-engineering-for-everybody" -> "CausalInferenceLab/causal-inference-lecture"
"Pseudo-Lab/data-engineering-for-everybody" -> "Pseudo-Lab/CPython-Guide"
"Pseudo-Lab/data-engineering-for-everybody" -> "CausalInferenceLab/causal-inference-practice"
"utilForever/2022-KW-RLEnv" -> "utilForever/2022-KW-ECS-Development"
"utilForever/2022-KW-RLEnv" -> "utilForever/CubbyRocket"
"Seoneun/T5-Question-Generation" -> "BM-K/KoDiffCSE"
"JJuOn/paper-crawler" -> "KHU-AGI/LFS-GAN"
"dlawjddn803/INFO" -> "sugyeonge/Towards-diverse-QAG"
"dlawjddn803/INFO" -> "metterian/peep-talk"
"Dcom-KHU/dcom-career-guide" -> "FacerAin/facerain.github.io"
"Dcom-KHU/dcom-career-guide" -> "Dcom-KHU/dcom-tech-interview"
"jason9693/polyglot-finetuning-oslo" -> "hyunwoongko/beyond-lm"
"ClustProject/Clust" -> "ClustProject/KUDataTransferlearning"
"ClustProject/Clust" -> "ClustProject/KUDataMultitasklearning"
"jwkanggist/SSL-narratives-NLP-1" -> "jwkanggist/SSL-narratives-VLM-1"
"jwkanggist/SSL-narratives-NLP-1" -> "jwkanggist/self-supervised-learning-narratives-1"
"huggingface/large_language_model_training_playbook" -> "huggingface/llm_training_handbook"
"huggingface/large_language_model_training_playbook" -> "tunib-ai/oslo"
"huggingface/large_language_model_training_playbook" -> "tunib-ai/large-scale-lm-tutorials"
"Beomi/KoAlpaca" -> "nlpai-lab/KULLM"
"Beomi/KoAlpaca" -> "kakaobrain/kogpt"
"Beomi/KoAlpaca" -> "HeegyuKim/open-korean-instructions"
"Beomi/KoAlpaca" -> "songys/AwesomeKorean_Data"
"Beomi/KoAlpaca" -> "NomaDamas/awesome-korean-llm"
"Beomi/KoAlpaca" -> "EleutherAI/polyglot"
"Beomi/KoAlpaca" -> "SKTBrain/KoBERT"
"Beomi/KoAlpaca" -> "SKT-AI/KoGPT2"
"Beomi/KoAlpaca" -> "monologg/KoELECTRA"
"Beomi/KoAlpaca" -> "airobotlab/KoChatGPT"
"Beomi/KoAlpaca" -> "KLUE-benchmark/KLUE"
"Beomi/KoAlpaca" -> "Beomi/KcBERT"
"Beomi/KoAlpaca" -> "ko-nlp/Korpora"
"Beomi/KoAlpaca" -> "boost-devs/ai-tech-interview"
"Beomi/KoAlpaca" -> "teddylee777/langchain-kr"
"boostcampaitech5/level3_nlp_finalproject-nlp-08" -> "boostcampaitech5/level3_nlp_finalproject-nlp-12"
"what-studio/tossi" -> "what-studio/smartformat-korean"
"what-studio/tossi" -> "sublee/korean"
"what-studio/tossi" -> "sublee/hangulize"
"what-studio/tossi" -> "what-studio/SmartFormat.NET-Korean"
"robotpilot/ros-seminar" -> "robotpilot/ros2-seminar-examples"
"robotpilot/ros-seminar" -> "ROBOTIS-GIT/OpenCR" ["e"=1]
"robotpilot/ros-seminar" -> "ROBOTIS-GIT/ros_tutorials" ["e"=1]
"robotpilot/ros-seminar" -> "robotpilot/rosbook_kr"
"robotpilot/ros-seminar" -> "tbmoon/kalman_filter" ["e"=1]
"robotpilot/ros-seminar" -> "changh95/visual-slam-roadmap" ["e"=1]
"robotpilot/ros-seminar" -> "PyTorchKorea/tutorials-kr"
"robotpilot/ros-seminar" -> "ROBOTIS-GIT/open_manipulator" ["e"=1]
"robotpilot/ros-seminar" -> "changh95/WeeklySpatialAI"
"robotpilot/ros-seminar" -> "rlcode/reinforcement-learning-kr"
"robotpilot/ros-seminar" -> "eddykim777/qtbook"
"robotpilot/ros-seminar" -> "reinforcement-learning-kr/how_to_study_rl"
"robotpilot/ros-seminar" -> "gyubeomim/pgo_toy_example"
"NomaDamas/KICE_slayer_AI_Korean" -> "nlpai-lab/KULLM"
"NomaDamas/KICE_slayer_AI_Korean" -> "NomaDamas/awesome-korean-llm"
"NomaDamas/KICE_slayer_AI_Korean" -> "Marker-Inc-Korea/RAGchain"
"NomaDamas/KICE_slayer_AI_Korean" -> "Beomi/KoAlpaca"
"NomaDamas/KICE_slayer_AI_Korean" -> "Marker-Inc-Korea/Korean-SAT-LLM-Leaderboard"
"NomaDamas/KICE_slayer_AI_Korean" -> "HeegyuKim/open-korean-instructions"
"NomaDamas/KICE_slayer_AI_Korean" -> "smilegate-ai/korean_unsmile_dataset"
"NomaDamas/KICE_slayer_AI_Korean" -> "rtzr/Awesome-Korean-Speech-Recognition"
"NomaDamas/KICE_slayer_AI_Korean" -> "airobotlab/KoChatGPT"
"NomaDamas/KICE_slayer_AI_Korean" -> "songys/AwesomeKorean_Data"
"NomaDamas/KICE_slayer_AI_Korean" -> "EleutherAI/polyglot"
"NomaDamas/KICE_slayer_AI_Korean" -> "davidkim205/komt"
"NomaDamas/KICE_slayer_AI_Korean" -> "ko-nlp/Korpora"
"NomaDamas/KICE_slayer_AI_Korean" -> "kocohub/korean-hate-speech"
"NomaDamas/KICE_slayer_AI_Korean" -> "SKT-AI/KoGPT2"
"melodysdreamj/WizardVicunaLM" -> "melodysdreamj/KoVicuna"
"melodysdreamj/WizardVicunaLM" -> "turboderp/exllama" ["e"=1]
"melodysdreamj/WizardVicunaLM" -> "HeegyuKim/open-korean-instructions"
"melodysdreamj/WizardVicunaLM" -> "teknium1/GPTeacher" ["e"=1]
"melodysdreamj/WizardVicunaLM" -> "keldenl/gpt-llama.cpp" ["e"=1]
"melodysdreamj/WizardVicunaLM" -> "HAE-RAE/HAE-RAE-BENCH"
"melodysdreamj/WizardVicunaLM" -> "nlpai-lab/KULLM"
"melodysdreamj/WizardVicunaLM" -> "aigoopy/llm-jeopardy" ["e"=1]
"melodysdreamj/WizardVicunaLM" -> "nlpxucan/WizardLM" ["e"=1]
"melodysdreamj/WizardVicunaLM" -> "CStanKonrad/long_llama" ["e"=1]
"melodysdreamj/WizardVicunaLM" -> "kroll-software/babyagi4all" ["e"=1]
"melodysdreamj/WizardVicunaLM" -> "epfml/landmark-attention" ["e"=1]
"melodysdreamj/WizardVicunaLM" -> "deep-diver/LLM-As-Chatbot" ["e"=1]
"melodysdreamj/WizardVicunaLM" -> "yaodongC/awesome-instruction-dataset" ["e"=1]
"melodysdreamj/WizardVicunaLM" -> "flurb18/AgentOoba" ["e"=1]
"rtzr/Awesome-Korean-Speech-Recognition" -> "NomaDamas/awesome-korean-llm"
"rtzr/Awesome-Korean-Speech-Recognition" -> "sooftware/kospeech"
"rtzr/Awesome-Korean-Speech-Recognition" -> "nlpai-lab/KULLM"
"rtzr/Awesome-Korean-Speech-Recognition" -> "ko-nlp/Korpora"
"rtzr/Awesome-Korean-Speech-Recognition" -> "Beomi/KcBERT"
"rtzr/Awesome-Korean-Speech-Recognition" -> "Kyubyong/g2pK"
"rtzr/Awesome-Korean-Speech-Recognition" -> "HeegyuKim/open-korean-instructions"
"rtzr/Awesome-Korean-Speech-Recognition" -> "goodatlas/zeroth"
"rtzr/Awesome-Korean-Speech-Recognition" -> "bab2min/kiwipiepy"
"rtzr/Awesome-Korean-Speech-Recognition" -> "HGU-DLLAB/Korean-FastSpeech2-Pytorch"
"rtzr/Awesome-Korean-Speech-Recognition" -> "uoneway/Text-Summarization-Repo"
"rtzr/Awesome-Korean-Speech-Recognition" -> "kakaobrain/kogpt"
"rtzr/Awesome-Korean-Speech-Recognition" -> "seujung/KoBART-summarization"
"rtzr/Awesome-Korean-Speech-Recognition" -> "NomaDamas/KICE_slayer_AI_Korean"
"rtzr/Awesome-Korean-Speech-Recognition" -> "naver-ai/korean-safety-benchmarks"
"UpstageAI/dataverse" -> "UpstageAI/evalverse"
"UpstageAI/dataverse" -> "nlpai-lab/KULLM"
"UpstageAI/dataverse" -> "KU-HIAI/Ko-Gemma"
"UpstageAI/dataverse" -> "HeegyuKim/open-korean-instructions"
"UpstageAI/dataverse" -> "NomaDamas/awesome-korean-llm"
"UpstageAI/dataverse" -> "naver-ai/korean-safety-benchmarks"
"UpstageAI/dataverse" -> "metterian/peep-talk"
"UpstageAI/dataverse" -> "khanrc/honeybee"
"UpstageAI/dataverse" -> "dlawjddn803/INFO"
"UpstageAI/dataverse" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"UpstageAI/dataverse" -> "NomaDamas/KICE_slayer_AI_Korean"
"UpstageAI/dataverse" -> "EleutherAI/polyglot"
"UpstageAI/dataverse" -> "HAE-RAE/HAE-RAE-BENCH"
"UpstageAI/dataverse" -> "sugyeonge/Towards-diverse-QAG"
"UpstageAI/dataverse" -> "tunib-ai/large-scale-lm-tutorials"
"Marker-Inc-Korea/RAGchain" -> "NomaDamas/awesome-korean-llm"
"Marker-Inc-Korea/RAGchain" -> "NomaDamas/KICE_slayer_AI_Korean"
"Marker-Inc-Korea/RAGchain" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"Marker-Inc-Korea/RAGchain" -> "nlpai-lab/KULLM"
"Marker-Inc-Korea/RAGchain" -> "HeegyuKim/open-korean-instructions"
"Marker-Inc-Korea/RAGchain" -> "airobotlab/KoChatGPT"
"Marker-Inc-Korea/RAGchain" -> "tabtoyou/KoLLaVA"
"Marker-Inc-Korea/RAGchain" -> "nlpai-lab/KURE"
"Marker-Inc-Korea/RAGchain" -> "Marker-Inc-Korea/K-G-OAT"
"Marker-Inc-Korea/RAGchain" -> "Beomi/ko-lm-evaluation-harness"
"Marker-Inc-Korea/RAGchain" -> "rtzr/Awesome-Korean-Speech-Recognition"
"Marker-Inc-Korea/RAGchain" -> "UpstageAI/evalverse"
"Marker-Inc-Korea/RAGchain" -> "Marker-Inc-Korea/COT_steering"
"jwj7140/Gugugo" -> "ssisOneTeam/Korean-Embedding-Model-Performance-Benchmark-for-Retriever"
"NomaDamas/awesome-korean-llm" -> "nlpai-lab/KULLM"
"NomaDamas/awesome-korean-llm" -> "HeegyuKim/open-korean-instructions"
"NomaDamas/awesome-korean-llm" -> "Beomi/KoAlpaca"
"NomaDamas/awesome-korean-llm" -> "airobotlab/KoChatGPT"
"NomaDamas/awesome-korean-llm" -> "rtzr/Awesome-Korean-Speech-Recognition"
"NomaDamas/awesome-korean-llm" -> "songys/AwesomeKorean_Data"
"NomaDamas/awesome-korean-llm" -> "Marker-Inc-Korea/RAGchain"
"NomaDamas/awesome-korean-llm" -> "jhgan00/ko-sentence-transformers"
"NomaDamas/awesome-korean-llm" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"NomaDamas/awesome-korean-llm" -> "davidkim205/komt"
"NomaDamas/awesome-korean-llm" -> "NomaDamas/KICE_slayer_AI_Korean"
"NomaDamas/awesome-korean-llm" -> "42dot/42dot_LLM"
"NomaDamas/awesome-korean-llm" -> "naver-ai/korean-safety-benchmarks"
"NomaDamas/awesome-korean-llm" -> "EleutherAI/polyglot"
"NomaDamas/awesome-korean-llm" -> "kakaobrain/kor-nlu-datasets"
"naver-ai/korean-safety-benchmarks" -> "42dot/42dot_LLM"
"naver-ai/korean-safety-benchmarks" -> "HAE-RAE/HAE-RAE-BENCH"
"naver-ai/korean-safety-benchmarks" -> "sooftware/Korean-PLM"
"naver-ai/korean-safety-benchmarks" -> "boychaboy/KOLD"
"naver-ai/korean-safety-benchmarks" -> "nlpai-lab/KULLM"
"naver-ai/korean-safety-benchmarks" -> "EleutherAI/polyglot"
"naver-ai/korean-safety-benchmarks" -> "EleutherAI/hae-rae"
"naver-ai/korean-safety-benchmarks" -> "HeegyuKim/open-korean-instructions"
"naver-ai/korean-safety-benchmarks" -> "Beomi/ko-lm-evaluation-harness"
"naver-ai/korean-safety-benchmarks" -> "NomaDamas/awesome-korean-llm"
"naver-ai/korean-safety-benchmarks" -> "smilegate-ai/korean_smile_style_dataset"
"naver-ai/korean-safety-benchmarks" -> "paust-team/pko-t5"
"naver-ai/korean-safety-benchmarks" -> "airobotlab/KoChatGPT"
"sjchoi86/dl_tutorials" -> "sjchoi86/Tensorflow-101"
"sjchoi86/dl_tutorials" -> "sjchoi86/Deep-Learning-101"
"sjchoi86/dl_tutorials" -> "joanbruna/stat212b" ["e"=1]
"sjchoi86/dl_tutorials" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"sjchoi86/dl_tutorials" -> "sjchoi86/dl_tutorials_10weeks"
"sjchoi86/dl_tutorials" -> "alrojo/tensorflow-tutorial" ["e"=1]
"sjchoi86/dl_tutorials" -> "sjchoi86/advanced-tensorflow"
"sjchoi86/dl_tutorials" -> "KnHuq/Dynamic-Tensorflow-Tutorial" ["e"=1]
"sjchoi86/dl_tutorials" -> "floydhub/dl-setup" ["e"=1]
"sjchoi86/dl_tutorials" -> "dennybritz/deeplearning-papernotes" ["e"=1]
"sjchoi86/dl_tutorials" -> "jxieeducation/DIY-Data-Science" ["e"=1]
"sjchoi86/dl_tutorials" -> "TensorFlowKR/awesome_tensorflow_implementations"
"sjchoi86/dl_tutorials" -> "sjchoi86/dl_tutorials_3rd"
"sjchoi86/dl_tutorials" -> "kjw0612/awesome-rnn" ["e"=1]
"sjchoi86/dl_tutorials" -> "nlintz/TensorFlow-Tutorials" ["e"=1]
"nlpai-lab/KULLM" -> "Beomi/KoAlpaca"
"nlpai-lab/KULLM" -> "NomaDamas/awesome-korean-llm"
"nlpai-lab/KULLM" -> "HeegyuKim/open-korean-instructions"
"nlpai-lab/KULLM" -> "EleutherAI/polyglot"
"nlpai-lab/KULLM" -> "airobotlab/KoChatGPT"
"nlpai-lab/KULLM" -> "songys/AwesomeKorean_Data"
"nlpai-lab/KULLM" -> "naver-ai/korean-safety-benchmarks"
"nlpai-lab/KULLM" -> "nlpai-lab/KURE"
"nlpai-lab/KULLM" -> "melodysdreamj/KoVicuna"
"nlpai-lab/KULLM" -> "kakaobrain/kogpt"
"nlpai-lab/KULLM" -> "ko-nlp/Korpora"
"nlpai-lab/KULLM" -> "Beomi/KcBERT"
"nlpai-lab/KULLM" -> "NomaDamas/KICE_slayer_AI_Korean"
"nlpai-lab/KULLM" -> "sooftware/Korean-PLM"
"nlpai-lab/KULLM" -> "hyunwoongko/kss"
"HeegyuKim/open-korean-instructions" -> "nlpai-lab/KULLM"
"HeegyuKim/open-korean-instructions" -> "NomaDamas/awesome-korean-llm"
"HeegyuKim/open-korean-instructions" -> "airobotlab/KoChatGPT"
"HeegyuKim/open-korean-instructions" -> "sooftware/Korean-PLM"
"HeegyuKim/open-korean-instructions" -> "EleutherAI/polyglot"
"HeegyuKim/open-korean-instructions" -> "Beomi/KoAlpaca"
"HeegyuKim/open-korean-instructions" -> "songys/AwesomeKorean_Data"
"HeegyuKim/open-korean-instructions" -> "instructkr/LogicKor"
"HeegyuKim/open-korean-instructions" -> "nlpai-lab/KURE"
"HeegyuKim/open-korean-instructions" -> "davidkim205/komt"
"HeegyuKim/open-korean-instructions" -> "HAE-RAE/HAE-RAE-BENCH"
"HeegyuKim/open-korean-instructions" -> "Marker-Inc-Korea/KO-Platypus"
"HeegyuKim/open-korean-instructions" -> "ko-nlp/Korpora"
"HeegyuKim/open-korean-instructions" -> "Beomi/ko-lm-evaluation-harness"
"HeegyuKim/open-korean-instructions" -> "naver-ai/korean-safety-benchmarks"
"huggingface/llm_training_handbook" -> "huggingface/large_language_model_training_playbook"
"owenliang/pytorch-diffusion" -> "owenliang/pytorch-transformer"
"owenliang/pytorch-diffusion" -> "owenliang/mnist-dits"
"owenliang/pytorch-diffusion" -> "owenliang/mnist-vit"
"owenliang/pytorch-diffusion" -> "owenliang/mnist-clip"
"owenliang/pytorch-diffusion" -> "owenliang/another-pytorch"
"MrBananaHuman/CounselGPT" -> "human-rights-corpus/HRC"
"airobotlab/KoChatGPT" -> "HeegyuKim/open-korean-instructions"
"airobotlab/KoChatGPT" -> "NomaDamas/awesome-korean-llm"
"airobotlab/KoChatGPT" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"airobotlab/KoChatGPT" -> "nlpai-lab/KULLM"
"airobotlab/KoChatGPT" -> "EleutherAI/polyglot"
"airobotlab/KoChatGPT" -> "sooftware/Korean-PLM"
"airobotlab/KoChatGPT" -> "HAE-RAE/HAE-RAE-BENCH"
"airobotlab/KoChatGPT" -> "Beomi/KoAlpaca"
"airobotlab/KoChatGPT" -> "Marker-Inc-Korea/KO-Platypus"
"airobotlab/KoChatGPT" -> "davidkim205/komt"
"airobotlab/KoChatGPT" -> "songys/AwesomeKorean_Data"
"airobotlab/KoChatGPT" -> "nlpai-lab/KURE"
"airobotlab/KoChatGPT" -> "naver-ai/korean-safety-benchmarks"
"airobotlab/KoChatGPT" -> "tabtoyou/KoLLaVA"
"airobotlab/KoChatGPT" -> "smilegate-ai/korean_smile_style_dataset"
"melodysdreamj/KoVicuna" -> "EleutherAI/hae-rae"
"melodysdreamj/KoVicuna" -> "EleutherAI/polyglot"
"quantumaikr/KoreanLM" -> "42dot/42dot_LLM"
"quantumaikr/KoreanLM" -> "human-rights-corpus/HRC"
"davidkim205/komt" -> "Marker-Inc-Korea/KO-Platypus"
"davidkim205/komt" -> "HeegyuKim/open-korean-instructions"
"davidkim205/komt" -> "NomaDamas/awesome-korean-llm"
"davidkim205/komt" -> "melodysdreamj/KoVicuna"
"davidkim205/komt" -> "davidkim205/nox"
"davidkim205/komt" -> "airobotlab/KoChatGPT"
"davidkim205/komt" -> "Marker-Inc-Korea/K-G-OAT"
"davidkim205/komt" -> "nlpai-lab/KULLM"
"jacking75/examples_CMake" -> "jacking75/boost_asio_sample"
"jacking75/examples_CMake" -> "changh95/WeeklySpatialAI"
"jacking75/examples_CMake" -> "jacking75/edu_cpp_IOCP" ["e"=1]
"jacking75/examples_CMake" -> "CppKorea/CppCoreGuidelines"
"tensorflowkorea/tensorflow-kr" -> "FuZer/StudyTensorFlow"
"tensorflowkorea/tensorflow-kr" -> "rickiepark/first-steps-with-tensorflow"
"tensorflowkorea/tensorflow-kr" -> "deep-diver/Machine-Learning-Yearning-Korean-Translation"
"tensorflowkorea/tensorflow-kr" -> "golbin/TensorFlow-Tutorials"
"tensorflowkorea/tensorflow-kr" -> "hunkim/KaggleZeroToAll"
"tensorflowkorea/tensorflow-kr" -> "datanada/Awesome-Korean-NLP"
"tensorflowkorea/tensorflow-kr" -> "TensorFlowKR/dlcampjeju"
"HAE-RAE/HAE-RAE-BENCH" -> "naver-ai/korean-safety-benchmarks"
"HAE-RAE/HAE-RAE-BENCH" -> "EleutherAI/hae-rae"
"HAE-RAE/HAE-RAE-BENCH" -> "HeegyuKim/open-korean-instructions"
"tabtoyou/KoLLaVA" -> "HeegyuKim/open-korean-instructions"
"tabtoyou/KoLLaVA" -> "EleutherAI/polyglot"
"tabtoyou/KoLLaVA" -> "nlpai-lab/KULLM"
"tabtoyou/KoLLaVA" -> "melodysdreamj/KoVicuna"
"tabtoyou/KoLLaVA" -> "airobotlab/KoChatGPT"
"tabtoyou/KoLLaVA" -> "Beomi/KoAlpaca"
"tabtoyou/KoLLaVA" -> "naver-ai/korean-safety-benchmarks"
"tabtoyou/KoLLaVA" -> "Marker-Inc-Korea/COT_steering"
"tabtoyou/KoLLaVA" -> "davidkim205/komt"
"tabtoyou/KoLLaVA" -> "lovit/KoBERTScore"
"tabtoyou/KoLLaVA" -> "lassl/lassl"
"tabtoyou/KoLLaVA" -> "jaketae/koclip"
"tabtoyou/KoLLaVA" -> "AIRC-KETI/ke-t5"
"tabtoyou/KoLLaVA" -> "lcw99/evolve-instruct" ["e"=1]
"tabtoyou/KoLLaVA" -> "hyunwoongko/kss"
"coreanq/kw_condition" -> "didw/PyTrader"
"coreanq/kw_condition" -> "didw/PyMLT"
"CppKorea/DesignPattern" -> "CppKorea/OptimizedCppStudy"
"CppKorea/DesignPattern" -> "CppKorea/CppTemplateStudy"
"CppKorea/DesignPattern" -> "CppKorea/IntroductionToModernCpp"
"CppKorea/DesignPattern" -> "CppKorea/CppConcurrencyInAction"
"CppKorea/DesignPattern" -> "CppKorea/Cpp20Study"
"pystockhub/book" -> "kdseo/PyTrader"
"pystockhub/book" -> "programgarden/book"
"42dot/42dot_LLM" -> "quantumaikr/KoreanLM"
"42dot/42dot_LLM" -> "human-rights-corpus/HRC"
"42dot/42dot_LLM" -> "naver-ai/korean-safety-benchmarks"
"42dot/42dot_LLM" -> "MrBananaHuman/CounselGPT"
"42dot/42dot_LLM" -> "EleutherAI/hae-rae"
"42dot/42dot_LLM" -> "Marker-Inc-Korea/KO-Platypus"
"42dot/42dot_LLM" -> "JoJo0217/rlhf_korean_dataset"
"owenliang/pytorch-transformer" -> "owenliang/mnist-vit"
"owenliang/pytorch-transformer" -> "owenliang/pytorch-diffusion"
"owenliang/pytorch-transformer" -> "owenliang/another-pytorch"
"krikit/annie" -> "hugman/deep_learning"
"hongshin/DataStructures" -> "hongshin/LearningC"
"Flative/jude" -> "sunrint/recruit"
"Beomi/ko-lm-evaluation-harness" -> "DopeorNope-Lee/Ko-Fine-tuning_DataGen"
"Beomi/ko-lm-evaluation-harness" -> "instructkr/LogicKor"
"Marker-Inc-Korea/K-G-OAT" -> "ssisOneTeam/Korean-Embedding-Model-Performance-Benchmark-for-Retriever"
"liner-engineering/llm-meetup" -> "liner-engineering/liner-pdf-chat-tutorial"
"KHU-AGI/LFS-GAN" -> "JJuOn/paper-crawler"
"KHU-AGI/LFS-GAN" -> "KU-VGI/GUIDE"
"CausalInferenceLab/CausalInferenceLab.github.io" -> "CausalInferenceLab/causal-inference-practice"
"CausalInferenceLab/CausalInferenceLab.github.io" -> "CausalInferenceLab/causal-inference-lecture"
"ClustProject/KUDataMultitasklearning" -> "ClustProject/KUDataTransferlearning"
"ClustProject/KUDataMultitasklearning" -> "ClustProject/Clust"
"rickiepark/first-steps-with-tensorflow" -> "jorditorresBCN/FirstContactWithTensorFlow"
"rickiepark/first-steps-with-tensorflow" -> "jorditorresBCN/FirstContactWithTensorFlow-2ndEdition"
"sugyeonge/Towards-diverse-QAG" -> "metterian/peep-talk"
"sugyeonge/Towards-diverse-QAG" -> "dlawjddn803/INFO"
"ClustProject/KUDataTransferlearning" -> "ClustProject/KUDataMultitasklearning"
"ClustProject/KUDataTransferlearning" -> "ClustProject/Clust"
"hyunwoongko/beyond-lm" -> "jason9693/polyglot-finetuning-oslo"
"khanrc/honeybee" -> "NomaDamas/awesome-korean-llm"
"khanrc/honeybee" -> "nlpai-lab/KULLM"
"khanrc/honeybee" -> "tabtoyou/KoLLaVA"
"khanrc/honeybee" -> "kakao/kanana"
"khanrc/honeybee" -> "kakaobrain/trident"
"khanrc/honeybee" -> "kakaobrain/noc" ["e"=1]
"khanrc/honeybee" -> "NomaDamas/KICE_slayer_AI_Korean"
"khanrc/honeybee" -> "UpstageAI/evalverse"
"khanrc/honeybee" -> "HeegyuKim/open-korean-instructions"
"khanrc/honeybee" -> "UpstageAI/dataverse"
"khanrc/honeybee" -> "kakaobrain/coyo-dataset" ["e"=1]
"khanrc/honeybee" -> "WisconsinAIVision/ViP-LLaVA" ["e"=1]
"khanrc/honeybee" -> "kakaobrain/kogpt"
"khanrc/honeybee" -> "liner-engineering/llm-meetup"
"khanrc/honeybee" -> "rtzr/Awesome-Korean-Speech-Recognition"
"kdseo/PyTrader" -> "didw/PyTrader"
"kdseo/PyTrader" -> "pystockhub/book"
"golbin/TensorFlow-Tutorials" -> "hunkim/DeepLearningZeroToAll"
"golbin/TensorFlow-Tutorials" -> "GunhoChoi/PyTorch-FastCampus"
"golbin/TensorFlow-Tutorials" -> "awesome-devblog/awesome-devblog" ["e"=1]
"golbin/TensorFlow-Tutorials" -> "konlpy/konlpy"
"golbin/TensorFlow-Tutorials" -> "kakao/khaiii"
"golbin/TensorFlow-Tutorials" -> "WegraLee/deep-learning-from-scratch"
"golbin/TensorFlow-Tutorials" -> "datanada/Awesome-Korean-NLP"
"golbin/TensorFlow-Tutorials" -> "sjchoi86/dl_tutorials_10weeks"
"golbin/TensorFlow-Tutorials" -> "lovit/soynlp"
"golbin/TensorFlow-Tutorials" -> "mingrammer/git-tips" ["e"=1]
"golbin/TensorFlow-Tutorials" -> "nhn/fe.javascript" ["e"=1]
"golbin/TensorFlow-Tutorials" -> "visionNoob/CS231N_17_KOR_SUB"
"golbin/TensorFlow-Tutorials" -> "tensorflowkorea/tensorflow-kr"
"golbin/TensorFlow-Tutorials" -> "twitter/twitter-korean-text"
"golbin/TensorFlow-Tutorials" -> "rlcode/reinforcement-learning-kr"
"WegraLee/deep-learning-from-scratch" -> "WegraLee/deep-learning-from-scratch-2"
"WegraLee/deep-learning-from-scratch" -> "WegraLee/deep-learning-from-scratch-3"
"WegraLee/deep-learning-from-scratch" -> "golbin/TensorFlow-Tutorials"
"WegraLee/deep-learning-from-scratch" -> "boost-devs/ai-tech-interview"
"WegraLee/deep-learning-from-scratch" -> "teddylee777/machine-learning"
"WegraLee/deep-learning-from-scratch" -> "visionNoob/CS231N_17_KOR_SUB"
"WegraLee/deep-learning-from-scratch" -> "zzsza/Datascience-Interview-Questions"
"WegraLee/deep-learning-from-scratch" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"WegraLee/deep-learning-from-scratch" -> "hunkim/DeepLearningZeroToAll"
"WegraLee/deep-learning-from-scratch" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"WegraLee/deep-learning-from-scratch" -> "rickiepark/handson-ml2"
"WegraLee/deep-learning-from-scratch" -> "youbeebee/deeplearning_from_scratch"
"WegraLee/deep-learning-from-scratch" -> "zzsza/Kaggle-knowhow"
"WegraLee/deep-learning-from-scratch" -> "konlpy/konlpy"
"WegraLee/deep-learning-from-scratch" -> "jungwoo-ha/WeeklyArxivTalk"
"likejazz/llama3.np" -> "likejazz/llama3.cuda"
"likejazz/llama3.np" -> "idoh/mamba.np"
"likejazz/llama3.np" -> "NomaDamas/KICE_slayer_AI_Korean"
"likejazz/llama3.np" -> "hyunwoongko/kss"
"likejazz/llama3.np" -> "NomaDamas/awesome-korean-llm"
"likejazz/llama3.np" -> "jungwoo-ha/WeeklyArxivTalk"
"likejazz/llama3.np" -> "mustafaaljadery/llama3v" ["e"=1]
"likejazz/llama3.np" -> "nlpai-lab/KURE"
"likejazz/llama3.np" -> "alessiodm/drl-zh" ["e"=1]
"likejazz/llama3.np" -> "Beomi/KoAlpaca"
"likejazz/llama3.np" -> "tunib-ai/large-scale-lm-tutorials"
"likejazz/llama3.np" -> "hscspring/llama.np"
"likejazz/llama3.np" -> "smilegate-ai/korean_unsmile_dataset"
"likejazz/llama3.np" -> "hyunwoongko/pecab"
"likejazz/llama3.np" -> "joennlae/tensorli" ["e"=1]
"datanada/Awesome-Korean-NLP" -> "konlpy/konlpy"
"datanada/Awesome-Korean-NLP" -> "lovit/soynlp"
"datanada/Awesome-Korean-NLP" -> "e9t/nsmc"
"datanada/Awesome-Korean-NLP" -> "ko-nlp/Korpora"
"datanada/Awesome-Korean-NLP" -> "open-korean-text/open-korean-text"
"datanada/Awesome-Korean-NLP" -> "songys/AwesomeKorean_Data"
"datanada/Awesome-Korean-NLP" -> "monologg/KoELECTRA"
"datanada/Awesome-Korean-NLP" -> "changukshin/Awesome-Korean-NLP-Papers"
"datanada/Awesome-Korean-NLP" -> "ratsgo/embedding"
"datanada/Awesome-Korean-NLP" -> "SKTBrain/KoBERT"
"datanada/Awesome-Korean-NLP" -> "Beomi/KcBERT"
"datanada/Awesome-Korean-NLP" -> "twitter/twitter-korean-text"
"datanada/Awesome-Korean-NLP" -> "SKT-AI/KoBART"
"datanada/Awesome-Korean-NLP" -> "kocohub/korean-hate-speech"
"datanada/Awesome-Korean-NLP" -> "kakao/khaiii"
"golbin/TensorFlow-ML-Exercises" -> "FuZer/StudyTensorFlow"
"golbin/TensorFlow-ML-Exercises" -> "sjchoi86/dl_tutorials_10weeks"
"golbin/TensorFlow-ML-Exercises" -> "golbin/TensorFlow-MNIST"
"golbin/TensorFlow-ML-Exercises" -> "rickiepark/first-steps-with-tensorflow"
"open-korean-text/open-korean-text" -> "twitter/twitter-korean-text"
"open-korean-text/open-korean-text" -> "konlpy/konlpy"
"open-korean-text/open-korean-text" -> "datanada/Awesome-Korean-NLP"
"open-korean-text/open-korean-text" -> "shineware/KOMORAN"
"open-korean-text/open-korean-text" -> "kakao/khaiii"
"open-korean-text/open-korean-text" -> "lovit/soynlp"
"open-korean-text/open-korean-text" -> "open-korean-text/elasticsearch-analysis-openkoreantext"
"open-korean-text/open-korean-text" -> "bab2min/Kiwi"
"open-korean-text/open-korean-text" -> "HowookJeong/elasticsearch-analysis-arirang"
"open-korean-text/open-korean-text" -> "lovit/KR-WordRank"
"open-korean-text/open-korean-text" -> "e9t/nsmc"
"open-korean-text/open-korean-text" -> "ko-nlp/Korpora"
"open-korean-text/open-korean-text" -> "SKT-AI/KoGPT2"
"open-korean-text/open-korean-text" -> "koalanlp/koalanlp"
"open-korean-text/open-korean-text" -> "lovit/customized_konlpy"
"teddylee777/langchain-kr" -> "Beomi/KoAlpaca"
"teddylee777/langchain-kr" -> "Marker-Inc-Korea/AutoRAG" ["e"=1]
"teddylee777/langchain-kr" -> "boost-devs/ai-tech-interview"
"teddylee777/langchain-kr" -> "teddylee777/langserve_ollama"
"teddylee777/langchain-kr" -> "nlpai-lab/KULLM"
"teddylee777/langchain-kr" -> "teddylee777/langchain-teddynote"
"teddylee777/langchain-kr" -> "songys/AwesomeKorean_Data"
"teddylee777/langchain-kr" -> "HeegyuKim/open-korean-instructions"
"teddylee777/langchain-kr" -> "LangChain-OpenTutorial/LangChain-OpenTutorial"
"teddylee777/langchain-kr" -> "sionic-ai/xionic-ko-llama-3-70b"
"teddylee777/langchain-kr" -> "NomaDamas/awesome-korean-llm"
"teddylee777/langchain-kr" -> "teddylee777/machine-learning"
"teddylee777/langchain-kr" -> "zzsza/Datascience-Interview-Questions"
"teddylee777/langchain-kr" -> "teddynote-lab/mcp-usecase"
"teddylee777/langchain-kr" -> "teddynote-lab/langgraph-mcp-agents"
"sjchoi86/advanced-tensorflow" -> "sjchoi86/dl_tutorials_10weeks"
"sjchoi86/advanced-tensorflow" -> "sjchoi86/Tensorflow-101"
"sjchoi86/advanced-tensorflow" -> "sjchoi86/bayes-nn" ["e"=1]
"sjchoi86/advanced-tensorflow" -> "hunkim/KaggleZeroToAll"
"sjchoi86/advanced-tensorflow" -> "sjchoi86/Deep-Learning-101"
"sjchoi86/advanced-tensorflow" -> "wookayin/TensorFlowKR-2017-talk-bestpractice"
"sjchoi86/advanced-tensorflow" -> "nmhkahn/deep_learning_tutorial"
"sjchoi86/advanced-tensorflow" -> "TensorFlowKR/dlcampjeju"
"sjchoi86/advanced-tensorflow" -> "GunhoChoi/PyTorch-FastCampus"
"sjchoi86/advanced-tensorflow" -> "sjchoi86/dl_tutorials"
"sjchoi86/advanced-tensorflow" -> "bi-lab/deeplearning_tutorial"
"sjchoi86/advanced-tensorflow" -> "golbin/TensorFlow-Tutorials"
"sjchoi86/advanced-tensorflow" -> "hunkim/ReinforcementZeroToAll"
"sjchoi86/advanced-tensorflow" -> "golbin/TensorFlow-ML-Exercises"
"sjchoi86/advanced-tensorflow" -> "sjchoi86/deep-uncertainty"
"ssisOneTeam/Korean-Embedding-Model-Performance-Benchmark-for-Retriever" -> "Marker-Inc-Korea/AutoRAG-example-korean-embedding-benchmark"
"teddylee777/langserve_ollama" -> "teddylee777/langchain-teddynote"
"teddylee777/langserve_ollama" -> "teddylee777/langchain-kr"
"teddylee777/langserve_ollama" -> "teddynote-lab/mcp-usecase"
"teddylee777/langserve_ollama" -> "teddylee777/teddynote-parser-api-client"
"teddylee777/langserve_ollama" -> "Atipico1/Kor-IR"
"teddylee777/langserve_ollama" -> "sionic-ai/xionic-ko-llama-3-70b"
"CausalInferenceLab/OCE-Materials" -> "CausalInferenceLab/causal-inference-practice"
"CausalInferenceLab/OCE-Materials" -> "CausalInferenceLab/causal-inference-lecture"
"CausalInferenceLab/OCE-Materials" -> "CausalInferenceLab/CausalInferenceLab.github.io"
"CausalInferenceLab/causal-inference-practice" -> "CausalInferenceLab/OCE-Materials"
"CausalInferenceLab/causal-inference-practice" -> "CausalInferenceLab/Experimentation-platform-materials"
"CausalInferenceLab/causal-inference-practice" -> "CausalInferenceLab/causal-inference-lecture"
"CausalInferenceLab/causal-inference-practice" -> "CausalInferenceLab/CausalInferenceLab.github.io"
"theeluwin/lexrankr" -> "theeluwin/textrankr"
"sionic-ai/xionic-ko-llama-3-70b" -> "teddylee777/langserve_ollama"
"sionic-ai/xionic-ko-llama-3-70b" -> "teddylee777/langchain-kr"
"sionic-ai/xionic-ko-llama-3-70b" -> "teddylee777/openai-api-kr"
"sionic-ai/xionic-ko-llama-3-70b" -> "sionic-ai/xionic"
"sionic-ai/xionic-ko-llama-3-70b" -> "teddylee777/langchain-teddynote"
"wookayin/TensorFlowKR-2017-talk-bestpractice" -> "wookayin/tensorflow-talk-debugging" ["e"=1]
"wookayin/TensorFlowKR-2017-talk-bestpractice" -> "TensorFlowKR/dlcampjeju"
"UpstageAI/evalverse" -> "UpstageAI/dataverse"
"UpstageAI/evalverse" -> "KU-HIAI/Ko-Gemma"
"UpstageAI/evalverse" -> "nlpai-lab/KULLM"
"UpstageAI/evalverse" -> "HAE-RAE/HAE-RAE-BENCH"
"UpstageAI/evalverse" -> "metterian/peep-talk"
"UpstageAI/evalverse" -> "paust-team/pko-t5"
"UpstageAI/evalverse" -> "naver-ai/korean-safety-benchmarks"
"UpstageAI/evalverse" -> "dlawjddn803/INFO"
"UpstageAI/evalverse" -> "HeegyuKim/open-korean-instructions"
"KyujinHan/Sakura-SOLAR-DPO" -> "boostcampaitech5/level3_nlp_finalproject-nlp-12"
"instructkr/LogicKor" -> "ssisOneTeam/Korean-Embedding-Model-Performance-Benchmark-for-Retriever"
"instructkr/LogicKor" -> "nlpai-lab/KURE"
"instructkr/LogicKor" -> "HeegyuKim/open-korean-instructions"
"instructkr/LogicKor" -> "Beomi/ko-lm-evaluation-harness"
"instructkr/LogicKor" -> "Atipico1/Kor-IR"
"instructkr/LogicKor" -> "StableFluffy/EasyLLMFeaturePorter"
"instructkr/LogicKor" -> "wandb/llm-kr-eval"
"youtube-jocoding/gpt-bitcoin" -> "youtube-jocoding/pyupbit-autotrade"
"youtube-jocoding/gpt-bitcoin" -> "sharebook-kr/pyupbit"
"youtube-jocoding/gpt-bitcoin" -> "youtube-jocoding/koreainvestment-autotrade"
"davidkim205/nox" -> "davidkim205/komt"
"davidkim205/nox" -> "davidkim205/kollm_evaluation"
"davidkim205/nox" -> "KyujinHan/Sakura-SOLAR-DPO"
"utilForever/CubbyFlow-v1" -> "utilForever/PBRStudy"
"DopeorNope-Lee/Ko-Fine-tuning_DataGen" -> "jwj7140/Gunmo-emo-classification"
"DopeorNope-Lee/Ko-Fine-tuning_DataGen" -> "Beomi/ko-lm-evaluation-harness"
"bluedisk/hangul-toolkit" -> "coolengineer/sejong-corpus"
"bluedisk/hangul-toolkit" -> "kaniblu/hangul-utils"
"bluedisk/hangul-toolkit" -> "Beomi/KcBERT"
"bluedisk/hangul-toolkit" -> "lovit/soynlp"
"bluedisk/hangul-toolkit" -> "datanada/Awesome-Korean-NLP"
"bluedisk/hangul-toolkit" -> "seopbo/nlp_classification"
"bluedisk/hangul-toolkit" -> "naver/kor2vec"
"bluedisk/hangul-toolkit" -> "likejazz/korean-sentence-splitter"
"bluedisk/hangul-toolkit" -> "bluedisk/korean_char_rnn"
"bluedisk/hangul-toolkit" -> "naver/nlp-challenge"
"bluedisk/hangul-toolkit" -> "krikit/annie"
"bluedisk/hangul-toolkit" -> "pingpong-ai/chatspace"
"bluedisk/hangul-toolkit" -> "ko-nlp/Korpora"
"bluedisk/hangul-toolkit" -> "kocohub/korean-hate-speech"
"bluedisk/hangul-toolkit" -> "kakaobrain/kor-nlu-datasets"
"owenliang/mnist-vit" -> "owenliang/mnist-dits"
"owenliang/mnist-vit" -> "owenliang/pytorch-transformer"
"sjchoi86/dl_tutorials_10weeks" -> "sjchoi86/advanced-tensorflow"
"sjchoi86/dl_tutorials_10weeks" -> "nmhkahn/deep_learning_tutorial"
"sjchoi86/dl_tutorials_10weeks" -> "GunhoChoi/PyTorch-FastCampus"
"sjchoi86/dl_tutorials_10weeks" -> "hunkim/KaggleZeroToAll"
"sjchoi86/dl_tutorials_10weeks" -> "TensorFlowKR/awesome_tensorflow_implementations"
"sjchoi86/dl_tutorials_10weeks" -> "sjchoi86/Tensorflow-101"
"sjchoi86/dl_tutorials_10weeks" -> "golbin/TensorFlow-ML-Exercises"
"sjchoi86/dl_tutorials_10weeks" -> "golbin/TensorFlow-Tutorials"
"sjchoi86/dl_tutorials_10weeks" -> "sjchoi86/Deep-Learning-101"
"sjchoi86/dl_tutorials_10weeks" -> "aikorea/cs231n"
"sjchoi86/dl_tutorials_10weeks" -> "FuZer/StudyTensorFlow"
"sjchoi86/dl_tutorials_10weeks" -> "devsisters/multi-speaker-tacotron-tensorflow"
"sjchoi86/dl_tutorials_10weeks" -> "GunhoChoi/Kind-PyTorch-Tutorial"
"sjchoi86/dl_tutorials_10weeks" -> "TensorFlowKR/dlcampjeju"
"sjchoi86/dl_tutorials_10weeks" -> "hunkim/ReinforcementZeroToAll"
"owenliang/mnist-clip" -> "owenliang/mnist-vit"
"owenliang/mnist-clip" -> "owenliang/pytorch-diffusion"
"scarletcho/KoG2P" -> "Kyubyong/g2pK"
"scarletcho/KoG2P" -> "scarletcho/KoLM"
"scarletcho/KoG2P" -> "lifefeel/Grapheme-to-Phoneme"
"rickiepark/introduction_to_ml_with_python" -> "rickiepark/first-steps-with-tensorflow"
"rickiepark/introduction_to_ml_with_python" -> "rickiepark/handson-ml"
"rickiepark/introduction_to_ml_with_python" -> "rickiepark/machine-learning-with-python-cookbook"
"rickiepark/introduction_to_ml_with_python" -> "rickiepark/deep-learning-with-python-notebooks"
"rickiepark/introduction_to_ml_with_python" -> "rickiepark/do-it-dl"
"rickiepark/introduction_to_ml_with_python" -> "corazzon/KaggleStruggle"
"KU-VGI/GUIDE" -> "KHU-AGI/LFS-GAN"
"KU-VGI/GUIDE" -> "JJuOn/paper-crawler"
"hunkim/SolarLLMChatDemo" -> "KyujinHan/Sakura-SOLAR-DPO"
"scarletcho/KoLM" -> "scarletcho/KoG2P"
"KU-VGI/BUS" -> "JJuOn/paper-crawler"
"KU-VGI/BUS" -> "KU-VGI/GUIDE"
"CausalInferenceLab/causal-inference-in-python-code" -> "CausalInferenceLab/causal-inference-practice"
"CausalInferenceLab/causal-inference-in-python-code" -> "CausalInferenceLab/CausalInferenceLab.github.io"
"CausalInferenceLab/causal-inference-in-python-code" -> "CausalInferenceLab/Marketing_Science"
"CausalInferenceLab/causal-inference-in-python-code" -> "CausalInferenceLab/Experimentation-platform-materials"
"owenliang/mnist-dits" -> "owenliang/mnist-vit"
"owenliang/mnist-dits" -> "owenliang/pytorch-diffusion"
"owenliang/mnist-dits" -> "owenliang/pytorch-transformer"
"MrBananaHuman/UnethicalQuestionsKor" -> "human-rights-corpus/HRC"
"heehehe/job-trend" -> "Pseudo-Lab/data-engineering-for-everybody"
"JINU6497/Time-series-LLM" -> "ClustProject/KUDataRepresentation"
"JINU6497/Time-series-LLM" -> "ClustProject/KUDataForecasting"
"CausalInferenceLab/causal-inference-lecture" -> "CausalInferenceLab/causal-inference-practice"
"CausalInferenceLab/causal-inference-lecture" -> "CausalInferenceLab/Marketing_Science"
"CausalInferenceLab/causal-inference-lecture" -> "CausalInferenceLab/causal-inference-with-causalML"
"CausalInferenceLab/causal-inference-lecture" -> "CausalInferenceLab/CausalInferenceLab.github.io"
"jwkangmarco/LLM-narratives" -> "jwkanggist/SSL-narratives-VLM-1"
"jwkangmarco/LLM-narratives" -> "jwkanggist/SSL-narratives-NLP-1"
"CausalInferenceLab/Smart_Causal_Inference" -> "CausalInferenceLab/Marketing_Science"
"KU-HIAI/Ko-Gemma" -> "J-Seo/KoCommonGEN-V2"
"KU-HIAI/Ko-Gemma" -> "metterian/peep-talk"
"KU-HIAI/Ko-Gemma" -> "sugyeonge/Towards-diverse-QAG"
"KU-HIAI/Ko-Gemma" -> "dlawjddn803/INFO"
"socurites/char-rnn-korean" -> "insikk/kor-char-rnn-tensorflow"
"SeoroMin/Prompt4LLM-Eval" -> "ClustProject/Clust"
"SeoroMin/Prompt4LLM-Eval" -> "ClustProject/KUDataTransferlearning"
"hunkim/DeepLearningZeroToAll" -> "golbin/TensorFlow-Tutorials"
"hunkim/DeepLearningZeroToAll" -> "hunkim/PyTorchZeroToAll" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "WegraLee/deep-learning-from-scratch"
"hunkim/DeepLearningZeroToAll" -> "nlintz/TensorFlow-Tutorials" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "awesome-devblog/awesome-devblog" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "chiphuyen/stanford-tensorflow-tutorials" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"hunkim/DeepLearningZeroToAll" -> "sjchoi86/dl_tutorials_10weeks"
"hunkim/DeepLearningZeroToAll" -> "sjchoi86/Tensorflow-101"
"hunkim/DeepLearningZeroToAll" -> "GunhoChoi/PyTorch-FastCampus"
"hunkim/DeepLearningZeroToAll" -> "teddylee777/machine-learning"
"hunkim/DeepLearningZeroToAll" -> "konlpy/konlpy"
"hunkim/DeepLearningZeroToAll" -> "hunkim/ReinforcementZeroToAll"
"hunkim/DeepLearningZeroToAll" -> "leriomaggio/deep-learning-keras-tensorflow" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "Hvass-Labs/TensorFlow-Tutorials" ["e"=1]
"Atipico1/Kor-IR" -> "instructkr/reranker-simple-benchmark"
"Atipico1/Kor-IR" -> "Marker-Inc-Korea/AutoRAG-example-korean-embedding-benchmark"
"Atipico1/Kor-IR" -> "nlpai-lab/KURE"
"pilsung-kang/Text-Analytics" -> "uoneway/Text-Summarization-Repo"
"pilsung-kang/Text-Analytics" -> "pilsung-kang/multivariate-data-analysis"
"pilsung-kang/Text-Analytics" -> "ratsgo/embedding"
"pilsung-kang/Text-Analytics" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"pilsung-kang/Text-Analytics" -> "pilsung-kang/Business-Analytics-IME654-"
"pilsung-kang/Text-Analytics" -> "SKT-AI/KoBART"
"pilsung-kang/Text-Analytics" -> "yukyunglee/Transformer_Survey_Study"
"pilsung-kang/Text-Analytics" -> "e9t/nsmc"
"pilsung-kang/Text-Analytics" -> "seopbo/nlp_classification"
"pilsung-kang/Text-Analytics" -> "sjchoi86/2022-1-deep-learning-applications"
"pilsung-kang/Text-Analytics" -> "changukshin/Awesome-Korean-NLP-Papers"
"pilsung-kang/Text-Analytics" -> "seopbo/nlp_tutorials"
"pilsung-kang/Text-Analytics" -> "modulabs/NLP-bootcamp"
"pilsung-kang/Text-Analytics" -> "kakaobrain/nlp-paper-reading"
"UpstageAI/solar-prompt-cookbook" -> "LangChain-OpenTutorial/LangChain-OpenTutorial"
"UpstageAI/solar-prompt-cookbook" -> "UpstageAI/cookbook"
"UpstageAI/solar-prompt-cookbook" -> "teddynote-lab/mcp-usecase"
"UpstageAI/solar-prompt-cookbook" -> "teddylee777/langchain-teddynote"
"UpstageAI/solar-prompt-cookbook" -> "teddynote-lab/LangGraph-HandsOn"
"UpstageAI/solar-prompt-cookbook" -> "Atipico1/Kor-IR"
"bab2min/Kiwi" -> "bab2min/kiwipiepy"
"bab2min/Kiwi" -> "ko-nlp/Korpora"
"bab2min/Kiwi" -> "hyunwoongko/kss"
"bab2min/Kiwi" -> "lovit/soynlp"
"bab2min/Kiwi" -> "kakao/khaiii"
"bab2min/Kiwi" -> "haven-jeon/PyKoSpacing"
"bab2min/Kiwi" -> "songys/AwesomeKorean_Data"
"bab2min/Kiwi" -> "open-korean-text/open-korean-text"
"bab2min/Kiwi" -> "Beomi/KcBERT"
"bab2min/Kiwi" -> "kakaobrain/kogpt"
"bab2min/Kiwi" -> "SKTBrain/KoBERT"
"bab2min/Kiwi" -> "koalanlp/koalanlp"
"bab2min/Kiwi" -> "kakaobrain/kor-nlu-datasets"
"bab2min/Kiwi" -> "lovit/soyspacing"
"bab2min/Kiwi" -> "Beomi/KoAlpaca"
"idoh/mamba.np" -> "idoh/fast_mamba.np"
"teddylee777/langchain-teddynote" -> "teddylee777/langserve_ollama"
"teddylee777/langchain-teddynote" -> "teddynote-lab/mcp-usecase"
"teddylee777/langchain-teddynote" -> "Marker-Inc-Korea/AutoRAG-example-korean-embedding-benchmark"
"teddylee777/langchain-teddynote" -> "Atipico1/Kor-IR"
"hunkim/DeepLearningStars" -> "hunkim/KaggleZeroToAll"
"hunkim/DeepLearningStars" -> "hunkim/ml"
"hunkim/DeepLearningStars" -> "hunkim/effective_python_notebook"
"hunkim/DeepLearningStars" -> "hunkim/ReinforcementZeroToAll"
"hunkim/DeepLearningStars" -> "golbin/TensorFlow-ML-Exercises"
"hunkim/DeepLearningStars" -> "TensorFlowKR/dlcampjeju"
"hunkim/DeepLearningStars" -> "MarwanELAdawy/project-based-learning-frontend" ["e"=1]
"hunkim/DeepLearningStars" -> "hunkim/PythonZeroToAll"
"hunkim/DeepLearningStars" -> "sjchoi86/dl_tutorials_10weeks"
"hunkim/DeepLearningStars" -> "nmhkahn/deep_learning_tutorial"
"hunkim/DeepLearningStars" -> "hunkim/Wit-Facebook" ["e"=1]
"jihoo-kim/awesome-production-llm" -> "airobotlab/KoChatGPT"
"jihoo-kim/awesome-production-llm" -> "songys/AwesomeKorean_Data"
"jihoo-kim/awesome-production-llm" -> "nlpai-lab/KULLM"
"jihoo-kim/awesome-production-llm" -> "nlpai-lab/KURE"
"jihoo-kim/awesome-production-llm" -> "StableFluffy/EasyLLMFeaturePorter"
"jihoo-kim/awesome-production-llm" -> "magpie-align/magpie" ["e"=1]
"jihoo-kim/awesome-production-llm" -> "gyunggyung/MLLMArxivTalk"
"jihoo-kim/awesome-production-llm" -> "HAE-RAE/HAE-RAE-BENCH"
"jihoo-kim/awesome-production-llm" -> "naver-ai/korean-safety-benchmarks"
"jihoo-kim/awesome-production-llm" -> "tunib-ai/large-scale-lm-tutorials"
"jihoo-kim/awesome-production-llm" -> "UpstageAI/dataverse"
"jihoo-kim/awesome-production-llm" -> "hyunwoongko/kss"
"jihoo-kim/awesome-production-llm" -> "NomaDamas/awesome-korean-llm"
"jihoo-kim/awesome-production-llm" -> "HeegyuKim/open-korean-instructions"
"TensorFlowKR/dlcampjeju" -> "wookayin/TensorFlowKR-2017-talk-bestpractice"
"TensorFlowKR/dlcampjeju" -> "sjchoi86/dl_tutorials_10weeks"
"TensorFlowKR/dlcampjeju" -> "devsisters/multi-speaker-tacotron-tensorflow"
"TensorFlowKR/dlcampjeju" -> "hunkim/KaggleZeroToAll"
"TensorFlowKR/dlcampjeju" -> "nmhkahn/deep_learning_tutorial"
"TensorFlowKR/dlcampjeju" -> "sjchoi86/advanced-tensorflow"
"TensorFlowKR/dlcampjeju" -> "tensorflowkorea/tensorflow-kr"
"TensorFlowKR/dlcampjeju" -> "TensorFlowKR/awesome_tensorflow_implementations"
"TensorFlowKR/dlcampjeju" -> "datanada/Awesome-Korean-NLP"
"TensorFlowKR/dlcampjeju" -> "GunhoChoi/PyTorch-FastCampus"
"TensorFlowKR/dlcampjeju" -> "Curt-Park/cs231n_assignments" ["e"=1]
"TensorFlowKR/dlcampjeju" -> "leechanwoo/Tensorflow-projects"
"TensorFlowKR/dlcampjeju" -> "hunkim/effective_python_notebook"
"TensorFlowKR/dlcampjeju" -> "hunkim/ReinforcementZeroToAll"
"TensorFlowKR/dlcampjeju" -> "hwalsuklee/how-far-can-we-go-with-MNIST" ["e"=1]
"hunkim/ReinforcementZeroToAll" -> "hunkim/KaggleZeroToAll"
"hunkim/ReinforcementZeroToAll" -> "rlcode/reinforcement-learning-kr"
"hunkim/ReinforcementZeroToAll" -> "Junyoungpark/ReinforcementLearningAtoZ"
"hunkim/ReinforcementZeroToAll" -> "hunkim/PythonZeroToAll"
"hunkim/ReinforcementZeroToAll" -> "hunkim/DeepRL-Agents"
"hunkim/ReinforcementZeroToAll" -> "sjchoi86/dl_tutorials_10weeks"
"hunkim/ReinforcementZeroToAll" -> "jcwleo/Reinforcement_Learning"
"hunkim/ReinforcementZeroToAll" -> "hunkim/DeepLearningStars"
"hunkim/ReinforcementZeroToAll" -> "hunkim/ml"
"hunkim/ReinforcementZeroToAll" -> "reinforcement-learning-kr/how_to_study_rl"
"southkorea/southkorea-maps" -> "southkorea/seoul-maps"
"southkorea/southkorea-maps" -> "vuski/admdongkor"
"southkorea/southkorea-maps" -> "seoul-opengov/opengov" ["e"=1]
"southkorea/southkorea-maps" -> "OhmyNews/12-14_kapf"
"southkorea/southkorea-maps" -> "datanada/Awesome-Korean-NLP"
"southkorea/southkorea-maps" -> "open-korean-text/open-korean-text"
"southkorea/southkorea-maps" -> "konlpy/konlpy"
"southkorea/southkorea-maps" -> "teampopong/pokr.kr"
"southkorea/southkorea-maps" -> "twitter/twitter-korean-text"
"southkorea/southkorea-maps" -> "e9t/nsmc"
"southkorea/southkorea-maps" -> "kakao/khaiii"
"southkorea/southkorea-maps" -> "milooy/cartmango"
"southkorea/southkorea-maps" -> "PinkWink/DataScience"
"southkorea/southkorea-maps" -> "southkorea/southkorea-postal-codes"
"southkorea/southkorea-maps" -> "forkonlp/N2H4"
"UpstageAI/cookbook" -> "UpstageAI/solar-prompt-cookbook"
"UpstageAI/cookbook" -> "2JAE22/NaverAIBoostCamp_7th_paper"
"LG-AI-EXAONE/EXAONE-3.0" -> "LG-AI-EXAONE/KoMT-Bench"
"LG-AI-EXAONE/EXAONE-3.0" -> "LG-AI-EXAONE/EXAONE-3.5"
"LG-AI-EXAONE/EXAONE-3.0" -> "nlpai-lab/KURE"
"didw/PyTrader" -> "didw/PyMLT"
"didw/PyTrader" -> "pystockhub/pykiwoom"
"didw/PyTrader" -> "mechurak/kiwoom"
"didw/PyTrader" -> "kdseo/PyTrader"
"didw/PyMLT" -> "didw/PyTrader"
"nlpai-lab/KURE" -> "Marker-Inc-Korea/AutoRAG-example-korean-embedding-benchmark"
"nlpai-lab/KURE" -> "su-park/mteb_ko_leaderboard"
"nlpai-lab/KURE" -> "instructkr/LogicKor"
"nlpai-lab/KURE" -> "ssisOneTeam/Korean-Embedding-Model-Performance-Benchmark-for-Retriever"
"nlpai-lab/KURE" -> "Atipico1/Kor-IR"
"nlpai-lab/KURE" -> "HeegyuKim/open-korean-instructions"
"nlpai-lab/KURE" -> "nlpai-lab/KULLM"
"nlpai-lab/KURE" -> "KU-HIAI/Ko-Gemma"
"nlpai-lab/KURE" -> "BM-K/Sentence-Embedding-Is-All-You-Need"
"hunkim/PythonZeroToAll" -> "hunkim/DeepRL-Agents"
"hunkim/PythonZeroToAll" -> "hunkim/TensorFlow-ML-Exercises"
"Marker-Inc-Korea/AutoRAG-example-korean-embedding-benchmark" -> "nlpai-lab/KURE"
"likejazz/llama3.cuda" -> "likejazz/llama3.np"
"likejazz/llama3.cuda" -> "jh941213/multiagent_backend"
"GunhoChoi/Kind-PyTorch-Tutorial" -> "GunhoChoi/PyTorch-FastCampus"
"GunhoChoi/Kind-PyTorch-Tutorial" -> "sjchoi86/dl_tutorials_10weeks"
"GunhoChoi/Kind-PyTorch-Tutorial" -> "soravux/pytorch_tutorial" ["e"=1]
"GunhoChoi/Kind-PyTorch-Tutorial" -> "nmhkahn/deep_learning_tutorial"
"GunhoChoi/Kind-PyTorch-Tutorial" -> "stormraiser/GAN-weight-norm" ["e"=1]
"GunhoChoi/Kind-PyTorch-Tutorial" -> "GunhoChoi/Deep-Learning-For-Beginners" ["e"=1]
"GunhoChoi/Kind-PyTorch-Tutorial" -> "Atcold/pytorch-CortexNet" ["e"=1]
"Marker-Inc-Korea/AutoRAG-tutorial-ko" -> "Marker-Inc-Korea/AutoRAG-example-korean-embedding-benchmark"
"su-park/mteb_ko_leaderboard" -> "nlpai-lab/KURE"
"su-park/mteb_ko_leaderboard" -> "ssisOneTeam/Korean-Embedding-Model-Performance-Benchmark-for-Retriever"
"su-park/mteb_ko_leaderboard" -> "Marker-Inc-Korea/AutoRAG-example-korean-embedding-benchmark"
"su-park/mteb_ko_leaderboard" -> "instructkr/LogicKor"
"LG-AI-EXAONE/EXAONE-3.5" -> "kakao/kanana"
"LG-AI-EXAONE/EXAONE-3.5" -> "LG-AI-EXAONE/EXAONE-3.0"
"LG-AI-EXAONE/EXAONE-3.5" -> "LG-AI-EXAONE/KoMT-Bench"
"LG-AI-EXAONE/KoMT-Bench" -> "Marker-Inc-Korea/KoLLM_Eval"
"daje0601/CoT-Reasoning_without_Prompting" -> "liner-engineering/llm-meetup"
"CppKorea/OptimizedCppStudy" -> "CppKorea/DesignPattern"
"CppKorea/OptimizedCppStudy" -> "CppKorea/CppTemplateStudy"
"hunkim/KaggleZeroToAll" -> "hunkim/PythonZeroToAll"
"hunkim/KaggleZeroToAll" -> "hunkim/ReinforcementZeroToAll"
"hunkim/KaggleZeroToAll" -> "sjchoi86/dl_tutorials_10weeks"
"J-Seo/KoCommonGEN-V2" -> "KU-HIAI/Ko-Gemma"
"OnAnd0n/ko-embedding-leaderboard" -> "instructkr/reranker-simple-benchmark"
"hunkim/DeepRL-Agents" -> "hunkim/PythonZeroToAll"
"hunkim/DeepRL-Agents" -> "hunkim/TensorFlow-ML-Exercises"
"CausalInferenceLab/Experimentation-platform-materials" -> "CausalInferenceLab/causal-inference-practice"
"CausalInferenceLab/Experimentation-platform-materials" -> "CausalInferenceLab/Smart_Causal_Inference"
"insikk/kor-char-rnn-tensorflow" -> "socurites/char-rnn-korean"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "UpstageAI/solar-prompt-cookbook"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "teddylee777/langchain-kr"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "teddynote-lab/langgraph-mcp-agents"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "teddynote-lab/mcp-usecase"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "teddynote-lab/LangGraph-HandsOn"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "langchain-ai/langgraph-supervisor-py" ["e"=1]
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "instructkr/LogicKor"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "jh941213/multiagent_backend"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "teddylee777/langserve_ollama"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "UpstageAI/dataverse"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "teddynote-lab/langgraph-qna-agent"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "kakao/kanana"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "ssisOneTeam/Korean-Embedding-Model-Performance-Benchmark-for-Retriever"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "Atipico1/Kor-IR"
"LangChain-OpenTutorial/LangChain-OpenTutorial" -> "kakao/FunctionChat-Bench"
"GunhoChoi/PyTorch-FastCampus" -> "nmhkahn/deep_learning_tutorial"
"GunhoChoi/PyTorch-FastCampus" -> "sjchoi86/dl_tutorials_10weeks"
"GunhoChoi/PyTorch-FastCampus" -> "GunhoChoi/Kind-PyTorch-Tutorial"
"GunhoChoi/PyTorch-FastCampus" -> "keon/3-min-pytorch"
"GunhoChoi/PyTorch-FastCampus" -> "datanada/Awesome-Korean-NLP"
"GunhoChoi/PyTorch-FastCampus" -> "golbin/TensorFlow-Tutorials"
"GunhoChoi/PyTorch-FastCampus" -> "deep-diver/Machine-Learning-Yearning-Korean-Translation"
"GunhoChoi/PyTorch-FastCampus" -> "taki0112/Awesome-DeepLearning-Study"
"GunhoChoi/PyTorch-FastCampus" -> "zzsza/Kaggle-knowhow"
"GunhoChoi/PyTorch-FastCampus" -> "jskDr/keraspp"
"GunhoChoi/PyTorch-FastCampus" -> "visionNoob/CS231N_17_KOR_SUB"
"GunhoChoi/PyTorch-FastCampus" -> "GunhoChoi/Deep-Learning-For-Beginners" ["e"=1]
"GunhoChoi/PyTorch-FastCampus" -> "e9t/nsmc"
"GunhoChoi/PyTorch-FastCampus" -> "sjchoi86/bayes-nn" ["e"=1]
"GunhoChoi/PyTorch-FastCampus" -> "Kyubyong/dl_career_faq"
"utilForever/RosettaStone" -> "CubbyFlow/CubbyFlow"
"utilForever/RosettaStone" -> "utilForever/Runeterra"
"utilForever/RosettaStone" -> "CppKorea/CppCoreGuidelines"
"utilForever/RosettaStone" -> "krta2/awesome-nonsan" ["e"=1]
"utilForever/RosettaStone" -> "utilForever/RosettaStone-GUI"
"utilForever/RosettaStone" -> "utilForever/2022-Make-Interpreter-Rust"
"utilForever/RosettaStone" -> "HearthSim/SabberStone" ["e"=1]
"utilForever/RosettaStone" -> "peter1591/hearthstone-ai" ["e"=1]
"utilForever/RosettaStone" -> "utilForever/baba-is-auto"
"utilForever/RosettaStone" -> "rkm0959/Number_Theory_in_CP_PS" ["e"=1]
"utilForever/RosettaStone" -> "utilForever/2022-Korea-Rust-Backend" ["e"=1]
"utilForever/RosettaStone" -> "CppKorea/Cpp20Study"
"utilForever/RosettaStone" -> "OxideEngine/Oxide"
"utilForever/RosettaStone" -> "sesang06/awesome-alternative-military-service" ["e"=1]
"utilForever/RosettaStone" -> "utilForever/Cubby-v1"
"CausalInferenceLab/Lang2SQL" -> "CausalInferenceLab/Marketing_Science"
"CausalInferenceLab/Lang2SQL" -> "CausalInferenceLab/Smart_Causal_Inference"
"jcwleo/Reinforcement_Learning" -> "rlcode/paper-reviews"
"jcwleo/Reinforcement_Learning" -> "dongminlee94/Samsung-DRL-Code"
"lovit/soynlp" -> "lovit/KR-WordRank"
"lovit/soynlp" -> "SKTBrain/KoBERT"
"lovit/soynlp" -> "kakao/khaiii"
"lovit/soynlp" -> "ko-nlp/Korpora"
"lovit/soynlp" -> "monologg/KoELECTRA"
"lovit/soynlp" -> "songys/AwesomeKorean_Data"
"lovit/soynlp" -> "datanada/Awesome-Korean-NLP"
"lovit/soynlp" -> "konlpy/konlpy"
"lovit/soynlp" -> "ratsgo/embedding"
"lovit/soynlp" -> "Beomi/KcBERT"
"lovit/soynlp" -> "eagle705/pytorch-bert-crf-ner"
"lovit/soynlp" -> "e9t/nsmc"
"lovit/soynlp" -> "SKT-AI/KoGPT2"
"lovit/soynlp" -> "haven-jeon/PyKoSpacing"
"lovit/soynlp" -> "lovit/textmining-tutorial"
"utilForever/modern-cpp-next" -> "utilForever/ProgrammingPractice"
"teddynote-lab/langgraph-mcp-agents" -> "teddynote-lab/mcp-usecase"
"teddynote-lab/langgraph-mcp-agents" -> "teddynote-lab/langgraph-react-mcp-chat"
"teddynote-lab/langgraph-mcp-agents" -> "teddynote-lab/langgraph-qna-agent"
"teddynote-lab/langgraph-mcp-agents" -> "nlpai-lab/KURE"
"teddynote-lab/langgraph-mcp-agents" -> "langchain-ai/langchain-mcp-adapters" ["e"=1]
"teddynote-lab/langgraph-mcp-agents" -> "langchain-ai/react-agent" ["e"=1]
"teddynote-lab/langgraph-mcp-agents" -> "teddynote-lab/langgraph-dynamic-mcp-agents"
"teddynote-lab/langgraph-mcp-agents" -> "LangChain-OpenTutorial/LangChain-OpenTutorial"
"teddynote-lab/langgraph-mcp-agents" -> "teddylee777/dify-openwebui"
"teddynote-lab/langgraph-mcp-agents" -> "teddylee777/langchain-kr"
"teddynote-lab/langgraph-mcp-agents" -> "Atipico1/Kor-IR"
"teddynote-lab/langgraph-mcp-agents" -> "esxr/langgraph-mcp" ["e"=1]
"teddynote-lab/langgraph-mcp-agents" -> "instructkr/LogicKor"
"teddynote-lab/langgraph-mcp-agents" -> "teddylee777/langchain-teddynote"
"teddynote-lab/langgraph-mcp-agents" -> "teddynote-lab/LangGraph-HandsOn"
"j-min/DL-for-Chatbot" -> "TensorMSA/tensormsa_jupyter"
"j-min/DL-for-Chatbot" -> "bluedisk/korean_char_rnn"
"sublee/hangulize" -> "hangulize/hangulize"
"sublee/hangulize" -> "muik/transliteration"
"sublee/hangulize" -> "sublee/korean"
"sublee/hangulize" -> "what-studio/tossi"
"sublee/hangulize" -> "lqez/awesome-hangul"
"teddynote-lab/mcp-usecase" -> "teddynote-lab/langgraph-mcp-agents"
"teddynote-lab/mcp-usecase" -> "teddylee777/langchain-teddynote"
"teddynote-lab/mcp-usecase" -> "teddynote-lab/langgraph-react-mcp-chat"
"teddynote-lab/mcp-usecase" -> "teddynote-lab/LangGraph-HandsOn"
"teddynote-lab/mcp-usecase" -> "teddylee777/dify-openwebui"
"LG-AI-EXAONE/EXAONE-Deep" -> "kakao/kanana"
"LG-AI-EXAONE/EXAONE-Deep" -> "LG-AI-EXAONE/EXAONE-3.0"
"LG-AI-EXAONE/EXAONE-Deep" -> "LG-AI-EXAONE/EXAONE-3.5"
"southkorea/southkorea-population" -> "southkorea/southkorea-postal-codes"
"nmhkahn/deep_learning_tutorial" -> "sjchoi86/dl_tutorials_10weeks"
"nmhkahn/deep_learning_tutorial" -> "GunhoChoi/PyTorch-FastCampus"
"nmhkahn/deep_learning_tutorial" -> "aikorea/cs231n"
"nmhkahn/deep_learning_tutorial" -> "taki0112/Awesome-DeepLearning-Study"
"nmhkahn/deep_learning_tutorial" -> "FuZer/StudyTensorFlow"
"vuski/admdongkor" -> "southkorea/southkorea-maps"
"vuski/admdongkor" -> "WooilJeong/PublicDataReader"
"vuski/admdongkor" -> "WWolf/korea-election"
"vuski/admdongkor" -> "southkorea/seoul-maps"
"vuski/admdongkor" -> "hahnlee/hwp.js" ["e"=1]
"vuski/admdongkor" -> "remotty/documents.docker.co.kr" ["e"=1]
"lovit/KR-WordRank" -> "lovit/soynlp"
"lovit/KR-WordRank" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"lovit/KR-WordRank" -> "lovit/soyspacing"
"lovit/KR-WordRank" -> "songys/AwesomeKorean_Data"
"lovit/KR-WordRank" -> "Beomi/KcBERT"
"lovit/KR-WordRank" -> "lovit/textrank"
"lovit/KR-WordRank" -> "lovit/textmining-tutorial"
"lovit/KR-WordRank" -> "ko-nlp/Korpora"
"lovit/KR-WordRank" -> "Beomi/KcELECTRA"
"lovit/KR-WordRank" -> "koalanlp/koalanlp"
"lovit/KR-WordRank" -> "datanada/Awesome-Korean-NLP"
"lovit/KR-WordRank" -> "monologg/KoELECTRA"
"lovit/KR-WordRank" -> "kocohub/korean-hate-speech"
"lovit/KR-WordRank" -> "haven-jeon/PyKoSpacing"
"lovit/KR-WordRank" -> "SKT-AI/KoGPT2"
"Marker-Inc-Korea/COT_steering" -> "daje0601/CoT-Reasoning_without_Prompting"
"Marker-Inc-Korea/COT_steering" -> "DopeorNope-Lee/Ko-Fine-tuning_DataGen"
"coolengineer/sejong-corpus" -> "SungjoonPark/KoreanWordVectors"
"coolengineer/sejong-corpus" -> "likejazz/korean-sentence-splitter"
"coolengineer/sejong-corpus" -> "naver/nlp-challenge"
"coolengineer/sejong-corpus" -> "bluedisk/hangul-toolkit"
"coolengineer/sejong-corpus" -> "naver/kor2vec"
"coolengineer/sejong-corpus" -> "jungyeul/korean-parallel-corpora"
"coolengineer/sejong-corpus" -> "naver/claf"
"coolengineer/sejong-corpus" -> "pingpong-ai/chatspace"
"rlcode/reinforcement-learning-kr" -> "reinforcement-learning-kr/how_to_study_rl"
"rlcode/reinforcement-learning-kr" -> "hunkim/ReinforcementZeroToAll"
"rlcode/reinforcement-learning-kr" -> "rlcode/reinforcement-learning-kr-v2"
"rlcode/reinforcement-learning-kr" -> "utilForever/rl-paper-study"
"rlcode/reinforcement-learning-kr" -> "golbin/TensorFlow-Tutorials"
"rlcode/reinforcement-learning-kr" -> "jcwleo/Reinforcement_Learning"
"rlcode/reinforcement-learning-kr" -> "jskDr/keraspp"
"rlcode/reinforcement-learning-kr" -> "medipixel/rl_algorithms" ["e"=1]
"rlcode/reinforcement-learning-kr" -> "reinforcement-learning-kr/pg_travel" ["e"=1]
"rlcode/reinforcement-learning-kr" -> "quantylab/rltrader"
"rlcode/reinforcement-learning-kr" -> "seungeunrho/RLfrombasics"
"rlcode/reinforcement-learning-kr" -> "GunhoChoi/PyTorch-FastCampus"
"rlcode/reinforcement-learning-kr" -> "sjchoi86/dl_tutorials_10weeks"
"rlcode/reinforcement-learning-kr" -> "wonseokjung/ai_supermario"
"rlcode/reinforcement-learning-kr" -> "keon/3-min-pytorch"
"pdpdds/SkyOS" -> "pdpdds/yuzaos"
"pdpdds/SkyOS" -> "pdpdds/CGSFII" ["e"=1]
"pdpdds/SkyOS" -> "CppKorea/CppTemplateStudy"
"PinkWink/DataScience" -> "corazzon/petitionWrangling"
"PinkWink/DataScience" -> "southkorea/southkorea-maps"
"PinkWink/DataScience" -> "PinkWink/playing_data"
"PinkWink/DataScience" -> "e9t/nsmc"
"kakao/kanana" -> "LG-AI-EXAONE/EXAONE-3.5"
"kakao/kanana" -> "kakao/FunctionChat-Bench"
"kakao/kanana" -> "tabtoyou/KoLLaVA"
"kakao/kanana" -> "HeegyuKim/open-korean-instructions"
"dongjun-Lee/kor2vec" -> "SungjoonPark/KoreanWordVectors"
"mrlee23/KoreanSentimentAnalyzer" -> "park1200656/KnuSentiLex"
"YBIGTA/Deep_learning" -> "YBIGTA/data-science-2018"
"YBIGTA/Deep_learning" -> "YBIGTA/DeepNLP-Study"
"lovit/soyspacing" -> "jeongukjae/korean-spacing-model"
"lovit/soyspacing" -> "pingpong-ai/chatspace"
"lovit/soyspacing" -> "Taekyoon/takos-alpha"
"lovit/soyspacing" -> "lovit/customized_konlpy"
"lovit/soyspacing" -> "lovit/pycrfsuite_spacing"
"lovit/soyspacing" -> "haven-jeon/PyKoSpacing"
"lovit/soyspacing" -> "lovit/KR-WordRank"
"lovit/soyspacing" -> "likejazz/korean-sentence-splitter"
"lovit/customized_konlpy" -> "lovit/soyspacing"
"instructkr/reranker-simple-benchmark" -> "OnAnd0n/ko-embedding-leaderboard"
"Pseudo-Lab/EfficientML" -> "CausalInferenceLab/Smart_Causal_Inference"
"deeplearningzerotoall/PyTorch" ["l"="-5.007,-23.199"]
"deeplearningzerotoall/TensorFlow" ["l"="-4.945,-23.164"]
"ndb796/Deep-Learning-Paper-Review-and-Practice" ["l"="-5.023,-23.218"]
"Team-Neighborhood/I-want-to-study-Data-Science" ["l"="-4.969,-23.225"]
"jungwoo-ha/WeeklyArxivTalk" ["l"="-5.068,-23.217"]
"boost-devs/ai-tech-interview" ["l"="-5.049,-23.235"]
"WegraLee/deep-learning-from-scratch" ["l"="-4.955,-23.19"]
"teddylee777/machine-learning" ["l"="-4.995,-23.241"]
"kakaobrain/pororo" ["l"="-5.094,-23.169"]
"PyTorchKorea/tutorials-kr" ["l"="-5.058,-23.177"]
"visionNoob/CS231N_17_KOR_SUB" ["l"="-4.952,-23.142"]
"ratsgo/embedding" ["l"="-5.054,-23.139"]
"ukairia777/tensorflow-nlp-tutorial" ["l"="-5.1,-23.195"]
"songys/AwesomeKorean_Data" ["l"="-5.112,-23.16"]
"jiphyeonjeon/season1" ["l"="-5.119,-23.23"]
"zzsza/Kaggle-knowhow" ["l"="-4.962,-23.162"]
"sharebook-kr/book-cryptocurrency" ["l"="-5.044,-22.692"]
"youtube-jocoding/pyupbit-autotrade" ["l"="-5.022,-22.702"]
"sharebook-kr/pyupbit" ["l"="-5.036,-22.728"]
"msaltnet/smtm" ["l"="-5.014,-22.72"]
"sharebook-kr/cryptocurrency-trading-bot" ["l"="-5.06,-22.649"]
"pystockhub/book" ["l"="-5.064,-22.75"]
"sharebook-kr/pybithumb" ["l"="-5.027,-22.682"]
"sharebook-kr/pykorbit" ["l"="-5.031,-22.661"]
"inasie/upbitpy" ["l"="-4.995,-22.669"]
"sharebook-kr/pykrx" ["l"="-5.075,-22.802"]
"koreainvestment/open-trading-api" ["l"="-5.043,-22.787"]
"sharebook-kr/mojito" ["l"="-5.049,-22.771"]
"chaeso/upbitbot" ["l"="-5.047,-22.658"]
"youtube-jocoding/gpt-bitcoin" ["l"="-4.996,-22.698"]
"sharebook-kr/pykiwoom" ["l"="-5.074,-22.737"]
"quantylab/rltrader" ["l"="-5.034,-22.813"]
"FinanceData/FinanceDataReader" ["l"="-5.064,-22.841"]
"uJhin/python-upbit-client" ["l"="-5.03,-22.627"]
"showmethecoin/upbit-trader" ["l"="-5.039,-22.674"]
"programgarden/book" ["l"="-5.056,-22.736"]
"dhkdn9192/data_engineer_career" ["l"="-4.854,-23.58"]
"dhkdn9192/StockPatternStream" ["l"="-4.861,-23.605"]
"yansfil/data-engineering-study" ["l"="-4.837,-23.611"]
"heehehe/job-trend" ["l"="-4.891,-23.499"]
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" ["l"="-4.921,-23.234"]
"ndb796/python-for-coding-test" ["l"="-4.149,-21.323"]
"ndb796/Fast_Campus_Algorithm_Lecture_Notes" ["l"="-4.103,-21.31"]
"rickiepark/handson-ml2" ["l"="-4.978,-23.201"]
"corazzon/OpenDataWrangling" ["l"="-4.825,-23.234"]
"yoonkt200/python-data-analysis" ["l"="-4.876,-23.284"]
"onlybooks/python-algorithm-interview" ["l"="-4.059,-21.337"]
"KerasKorea/KEKOxTutorial" ["l"="-4.972,-23.122"]
"heartcored98/Standalone-DeepLearning" ["l"="-5.013,-23.178"]
"KLUE-benchmark/KLUE" ["l"="-5.126,-23.17"]
"SKTBrain/KoBERT" ["l"="-5.08,-23.135"]
"Lilcob/-DL_PaperReadingMeeting" ["l"="-5.073,-23.231"]
"reinforcement-learning-kr/how_to_study_rl" ["l"="-4.85,-23.148"]
"kakaobrain/nlp-paper-reading" ["l"="-5.121,-23.182"]
"KerasKorea/KerasObjectDetector" ["l"="45.973,25.483"]
"deep-diver/Machine-Learning-Yearning-Korean-Translation" ["l"="-4.903,-23.052"]
"keras-team/keras-docs-ko" ["l"="45.944,25.525"]
"seopbo/nlp_classification" ["l"="-5.067,-23.122"]
"zzsza/kyle-school" ["l"="-4.888,-23.061"]
"KerasKorea/KerasKorea.github.io" ["l"="45.961,25.5"]
"datanada/Awesome-Korean-NLP" ["l"="-5.044,-23.084"]
"jskDr/keraspp" ["l"="-4.891,-23.083"]
"zzsza/Datascience-Interview-Questions" ["l"="-5.036,-23.199"]
"brave-people/brave-tech-interview" ["l"="-4.076,-21.385"]
"brave-people/Dev-Event" ["l"="-4.136,-21.364"]
"tony9402/baekjoon" ["l"="-4.127,-21.34"]
"leehosung/awesome-devteam" ["l"="-4.063,-21.402"]
"jojoldu/junior-recruit-scheduler" ["l"="-4.151,-21.43"]
"Integerous/goQuality-dev-contents" ["l"="-4.15,-21.399"]
"gyoogle/tech-interview-for-developer" ["l"="-4.188,-21.335"]
"WooVictory/Ready-For-Tech-Interview" ["l"="-4.109,-21.374"]
"naver/kor2vec" ["l"="-5.109,-23.076"]
"coolengineer/sejong-corpus" ["l"="-5.094,-23.049"]
"naver/claf" ["l"="-5.102,-23.061"]
"Beomi/KcBERT" ["l"="-5.118,-23.125"]
"monologg/KoELECTRA" ["l"="-5.125,-23.144"]
"likejazz/korean-sentence-splitter" ["l"="-5.139,-23.084"]
"monologg/DistilKoBERT" ["l"="-5.143,-23.098"]
"dongjun-Lee/kor2vec" ["l"="-5.095,-23.011"]
"SungjoonPark/KoreanWordVectors" ["l"="-5.091,-23.031"]
"kocohub/korean-hate-speech" ["l"="-5.143,-23.117"]
"lovit/soynlp" ["l"="-5.083,-23.102"]
"naver/nlp-challenge" ["l"="-5.097,-23.085"]
"warnikchow/3i4k" ["l"="-5.057,-23.069"]
"eagle705/pytorch-bert-crf-ner" ["l"="-5.098,-23.126"]
"corazzon/petitionWrangling" ["l"="-4.864,-23.195"]
"corazzon/open-data-analysis-basic" ["l"="-4.827,-23.252"]
"corazzon/KaggleStruggle" ["l"="-4.9,-23.192"]
"corazzon/cracking-the-pandas-cheat-sheet" ["l"="-4.796,-23.269"]
"awesome-devblog/awesome-devblog" ["l"="-4.062,-21.439"]
"zzsza/Boostcamp-AI-Tech-Product-Serving" ["l"="-5.063,-23.26"]
"WeareSoft/tech-interview" ["l"="-4.119,-21.409"]
"FinanceData/OpenDartReader" ["l"="-5.071,-22.818"]
"FinanceData/marcap" ["l"="-5.053,-22.815"]
"josw123/dart-fss" ["l"="-5.056,-22.797"]
"INVESTAR/StockAnalysisInPython" ["l"="-5.07,-22.779"]
"WooilJeong/PublicDataReader" ["l"="-5.092,-22.967"]
"elbakramer/koapy" ["l"="-5.073,-22.762"]
"golbin/TensorFlow-Tutorials" ["l"="-4.938,-23.063"]
"gyusu/Creon-Datareader" ["l"="-5.092,-22.762"]
"Beomi/KoAlpaca" ["l"="-5.189,-23.16"]
"hyunyulhenry/quant_py" ["l"="-5.118,-22.794"]
"josw123/dart-scraper" ["l"="-5.102,-22.813"]
"josw123/dart-fss-classifier" ["l"="-5.098,-22.796"]
"wikibook/stock-trading" ["l"="-5.01,-22.777"]
"suminb/finance" ["l"="-5.002,-22.794"]
"lovit/textrank" ["l"="-5.073,-23.023"]
"lovit/KR-WordRank" ["l"="-5.083,-23.083"]
"haven-jeon/PyKoSpacing" ["l"="-5.125,-23.102"]
"ssut/py-hanspell" ["l"="-5.153,-23.083"]
"hyunwoongko/kss" ["l"="-5.166,-23.165"]
"lovit/soyspacing" ["l"="-5.108,-23.048"]
"ko-nlp/Korpora" ["l"="-5.129,-23.131"]
"bab2min/Kiwi" ["l"="-5.114,-23.093"]
"bab2min/kiwipiepy" ["l"="-5.182,-23.136"]
"WegraLee/deep-learning-from-scratch-2" ["l"="-4.948,-23.217"]
"rickiepark/handson-ml" ["l"="-4.918,-23.164"]
"rickiepark/deep-learning-with-python-notebooks" ["l"="-4.891,-23.155"]
"NLP-kr/tensorflow-ml-nlp-tf2" ["l"="-5.109,-23.136"]
"rickiepark/hg-mldl" ["l"="-4.885,-23.313"]
"WegraLee/deep-learning-from-scratch-3" ["l"="-4.942,-23.248"]
"SKT-AI/KoGPT2" ["l"="-5.102,-23.147"]
"konlpy/konlpy" ["l"="-5.024,-23.096"]
"kakao/khaiii" ["l"="-5.064,-23.092"]
"e9t/nsmc" ["l"="-5.056,-23.112"]
"twitter/twitter-korean-text" ["l"="-5.024,-23.052"]
"open-korean-text/open-korean-text" ["l"="-5.054,-23.052"]
"rickiepark/introduction_to_ml_with_python" ["l"="-4.863,-23.156"]
"amueller/odscon-2015" ["l"="-4.851,-23.248"]
"SudalaiRajkumar/Kaggle" ["l"="57.475,24.168"]
"GunhoChoi/PyTorch-FastCampus" ["l"="-4.914,-23.091"]
"eddykim777/qtbook" ["l"="-4.649,-23.29"]
"CppKorea/CppCoreGuidelines" ["l"="-4.491,-23.346"]
"robotpilot/ros-seminar" ["l"="-4.752,-23.231"]
"sunkyoo/opencv4cvml" ["l"="-4.61,-23.33"]
"hyunwoongko/kochat" ["l"="-5.16,-23.183"]
"hyunwoongko/kocrawl" ["l"="-5.243,-23.259"]
"haven-jeon/KoGPT2-chatbot" ["l"="-5.17,-23.152"]
"kakaobrain/kogpt" ["l"="-5.146,-23.168"]
"nawnoes/WellnessConversation-LanguageModel" ["l"="-5.151,-23.153"]
"tunib-ai/oslo" ["l"="-5.196,-23.256"]
"SKT-AI/KoBART" ["l"="-5.122,-23.158"]
"songys/Chatbot_data" ["l"="-5.138,-23.155"]
"joshephan/upbit_tradingbot" ["l"="-5.06,-22.624"]
"pilsung-kang/Business-Analytics-IME654-" ["l"="-4.978,-23.178"]
"pilsung-kang/Text-Analytics" ["l"="-5.07,-23.192"]
"pilsung-kang/multivariate-data-analysis" ["l"="-4.995,-23.174"]
"pilsung-kang/Business-Analytics-ITS504-" ["l"="-4.931,-23.153"]
"kh-kim/nlp_with_pytorch_examples" ["l"="-4.907,-22.999"]
"aailabkaist/Introduction-to-Artificial-Intelligence-Machine-Learning" ["l"="46.022,30.417"]
"ClustProject/KUDataOutlier" ["l"="-4.955,-23.358"]
"gilbutITbook/006975" ["l"="-4.827,-23.161"]
"rickiepark/python-machine-learning-book-2nd-edition" ["l"="-4.842,-23.191"]
"rickiepark/do-it-dl" ["l"="-4.843,-23.175"]
"rickiepark/GDL_code" ["l"="-4.874,-23.178"]
"rickiepark/deep-learning-with-python-2nd" ["l"="-4.825,-23.196"]
"carpedm20/multi-speaker-tacotron-tensorflow" ["l"="-5.138,-22.968"]
"hccho2/Tacotron-Wavenet-Vocoder-Korean" ["l"="-5.185,-22.981"]
"hccho2/Tacotron2-Wavenet-Korean-TTS" ["l"="-5.203,-22.993"]
"GSByeon/multi-speaker-tacotron-tensorflow" ["l"="-5.075,-22.93"]
"keithito/tacotron" ["l"="37.153,2.502"]
"Kyubyong/tacotron" ["l"="37.134,2.54"]
"NVIDIA/mellotron" ["l"="37.278,2.509"]
"r9y9/deepvoice3_pytorch" ["l"="37.171,2.532"]
"lifefeel/SpeechSynthesis" ["l"="-5.196,-22.955"]
"sokcuri/multi-speaker-tacotron-tensorflow" ["l"="-5.148,-22.905"]
"goodatlas/zeroth" ["l"="-5.162,-23.042"]
"r9y9/wavenet_vocoder" ["l"="37.174,2.512"]
"scarletcho/KoG2P" ["l"="-5.2,-22.975"]
"syang1993/gst-tacotron" ["l"="37.29,2.503"]
"Rayhane-mamah/Tacotron-2" ["l"="37.17,2.478"]
"Kyubyong/g2pK" ["l"="-5.202,-23.036"]
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" ["l"="-5.18,-22.999"]
"SMART-TTS/SMART-G2P" ["l"="-5.308,-22.938"]
"JoungheeKim/K-wav2vec" ["l"="-5.26,-23.011"]
"rtzr/Awesome-Korean-Speech-Recognition" ["l"="-5.21,-23.123"]
"sooftware/kospeech" ["l"="-5.202,-23.093"]
"clovaai/ClovaCall" ["l"="-5.238,-23.042"]
"idebtor/nowic" ["l"="-4.63,-22.747"]
"hongshin/OperatingSystem" ["l"="-4.691,-22.793"]
"idebtor/JoyAI" ["l"="-4.645,-22.773"]
"hongshin/DiscreteMath" ["l"="-4.601,-22.733"]
"quantylab/systrader" ["l"="-5.09,-22.775"]
"didw/PyTrader" ["l"="-5.118,-22.72"]
"didw/quant_trading" ["l"="-5.124,-22.754"]
"coreanq/kw_condition" ["l"="-5.1,-22.736"]
"lumyjuwon/KoreaNewsCrawler" ["l"="-5.085,-23.156"]
"monologg/KoBigBird" ["l"="-5.162,-23.198"]
"yeontaek/BERT-Korean-Model" ["l"="-4.99,-23.057"]
"scarletcho/KoLM" ["l"="-5.182,-22.967"]
"dhlee347/pytorchic-bert" ["l"="-5.07,-23.152"]
"graykode/ALBERT-Pytorch" ["l"="53.6,27.126"]
"kakaobrain/kor-nlu-datasets" ["l"="-5.165,-23.134"]
"Huffon/nlp-startups" ["l"="-5.179,-23.17"]
"codertimo/BERT-pytorch" ["l"="53.159,25.744"]
"quant4junior/algoTrade" ["l"="-5.111,-22.772"]
"rlcode/reinforcement-learning-kr" ["l"="-4.866,-23.074"]
"breadum/kiwoom" ["l"="-5.051,-22.756"]
"hongshin/LearningC" ["l"="-4.632,-22.764"]
"hongshin/interesting-articles-in-software-engineering" ["l"="-4.647,-22.759"]
"jongwoojeff/DiscreteMathematics" ["l"="-4.557,-22.695"]
"handong-life/college-timetable" ["l"="-4.591,-22.685"]
"korquad/korquad.github.io" ["l"="-5.24,-22.982"]
"enlipleai/kor_pretrain_LM" ["l"="-5.166,-23.055"]
"aikorea/cs231n" ["l"="-4.868,-23.037"]
"utilForever/rl-paper-study" ["l"="-4.791,-23.182"]
"seungeunrho/RLfrombasics" ["l"="-4.816,-23.126"]
"Junyoungpark/ReinforcementLearningAtoZ" ["l"="-4.792,-23.134"]
"reinforcement-learning-kr/Unity_ML_Agents" ["l"="-4.776,-23.164"]
"rlcode/reinforcement-learning-kr-v2" ["l"="-4.834,-23.114"]
"dongminlee94/Samsung-DRL-Code" ["l"="-4.756,-23.138"]
"taeoh-kim/pr12" ["l"="-4.925,-23.183"]
"hunkim/ReinforcementZeroToAll" ["l"="-4.815,-23.076"]
"reinforcement-learning-kr/Unity_ML_Agents_2.0" ["l"="-4.762,-23.173"]
"reinforcement-learning-kr/rl_bootcamp" ["l"="-4.766,-23.153"]
"zzsza/Deep_Learning_starting_with_the_latest_papers" ["l"="-4.795,-23.155"]
"callee2006/2019-Winter-HGU-Machine-Learing-Camp" ["l"="-4.849,-22.89"]
"gilbutITbook/006939" ["l"="-4.593,-23.355"]
"idebtor/KMOOC-ML" ["l"="-4.619,-22.781"]
"deeplearningzerotoall/season2" ["l"="-4.901,-23.173"]
"d2l-ai/d2l-ko" ["l"="-4.878,-23.228"]
"NLP-kr/tensorflow-ml-nlp" ["l"="-5.044,-23.127"]
"Kyubyong/dl_career_faq" ["l"="-4.951,-23.118"]
"lovit/python_ml4nlp" ["l"="-5.003,-23.113"]
"lovit/textmining_dataset" ["l"="-4.989,-23.098"]
"monologg/KoBERT-Transformers" ["l"="-5.139,-23.14"]
"changukshin/Awesome-Korean-NLP-Papers" ["l"="-5.112,-23.112"]
"deep-diver/fastai-course-korean" ["l"="-4.792,-22.935"]
"nmhkahn/deep_learning_tutorial" ["l"="-4.857,-23.052"]
"tensorflowkorea/tensorflow-kr" ["l"="-4.887,-23.028"]
"sjchoi86/dl_tutorials_10weeks" ["l"="-4.839,-23.04"]
"deep-diver/DeepModels" ["l"="-4.816,-22.943"]
"Curt-Park/reinforcement_learning_an_introduction" ["l"="-4.884,-22.998"]
"bzantium/nlp-tensorflow" ["l"="-4.849,-22.948"]
"deep-diver/CIFAR10-img-classification-tensorflow" ["l"="-4.786,-22.909"]
"bzantium/chatbot-seminar" ["l"="-4.84,-22.917"]
"bzantium/simplex-method-matlab" ["l"="-4.826,-22.921"]
"spellcheck-ko/hunspell-dict-ko" ["l"="-5.159,-22.999"]
"changwoo/hunspell-dict-ko" ["l"="-5.17,-22.95"]
"9beach/hanspell" ["l"="-5.18,-23.022"]
"korean-input/issues" ["l"="-5.018,-20.864"]
"sublee/hangulize" ["l"="-5.224,-22.905"]
"southkorea/southkorea-postal-codes" ["l"="-4.976,-22.989"]
"southkorea/southkorea-population" ["l"="-4.972,-22.968"]
"CubbyFlow/CubbyFlow" ["l"="-4.416,-23.306"]
"utilForever/RosettaStone" ["l"="-4.429,-23.324"]
"utilForever/CubbyFlow-v1" ["l"="-4.355,-23.353"]
"utilForever/CubbyTower" ["l"="-4.365,-23.286"]
"utilForever/CubbyDNN" ["l"="-4.415,-23.277"]
"OxideEngine/Oxide" ["l"="-4.396,-23.313"]
"utilForever/2021-KAIST-Include-AlphaGoZero" ["l"="-4.565,-23.255"]
"CppKorea/Cpp20Study" ["l"="-4.447,-23.351"]
"utilForever/baba-is-auto" ["l"="-4.371,-23.324"]
"doyubkim/fluid-engine-dev" ["l"="-24.746,-27.842"]
"utilForever/CGStudy" ["l"="-4.378,-23.306"]
"CubbyFlow/RustyFlow" ["l"="-4.348,-23.286"]
"sjhwang82/AdvancedML" ["l"="-5.047,-23.358"]
"sjhwang82/DeepLearning" ["l"="-5.033,-23.397"]
"haebeom-lee/l2b" ["l"="57.627,19.208"]
"seominjoon/kaist-ai605" ["l"="-5.054,-23.397"]
"sjhwang82/GenerativeAI" ["l"="-5.043,-23.412"]
"DAVIAN-Lab/Paper-study" ["l"="-33.564,20.565"]
"kwonminki/One-sentence_Diffusion_summary" ["l"="-5.061,-23.299"]
"juho-lee/bnp" ["l"="23.148,14.782"]
"clovaai/AdamP" ["l"="23.608,14.834"]
"CownowAn/DiffusionNAG" ["l"="52.54,33.979"]
"Soju06/python-kis" ["l"="-5.034,-22.764"]
"modulabs/NLP-bootcamp" ["l"="-5.043,-23.174"]
"pingpong-ai/chatspace" ["l"="-5.121,-23.055"]
"lovit/textmining-tutorial" ["l"="-5.05,-23.1"]
"lovit/fastcampus_textml_blogs" ["l"="-5.024,-23.14"]
"seopbo/nlp_tutorials" ["l"="-5.117,-23.218"]
"9beach/vscode-hanspell" ["l"="-5.545,-21.866"]
"9beach/hanspell-hs" ["l"="-48.369,0.76"]
"park1200656/KnuSentiLex" ["l"="-5.122,-23.042"]
"mrlee23/KoreanSentimentAnalyzer" ["l"="-5.126,-22.993"]
"lovit/customized_konlpy" ["l"="-5.068,-23.036"]
"bab2min/corpus" ["l"="-5.183,-23.052"]
"koshort/pyeunjeon" ["l"="-5.148,-23.055"]
"Beomi/KcELECTRA" ["l"="-5.158,-23.142"]
"BlueWhaleKo/kiwoom_api_handler" ["l"="-5.083,-22.692"]
"kakaobrain/word2word" ["l"="-5.291,-23.033"]
"bitextor/bicleaner" ["l"="53.858,24.867"]
"kakaobrain/kortok" ["l"="-5.223,-23.071"]
"Kyubyong/KoParadigm" ["l"="-5.338,-22.997"]
"suparklingmin/lecture" ["l"="-5.212,-23.38"]
"sgunderscore/hatescore-korean-hate-speech" ["l"="-5.202,-23.281"]
"devunt/10th-amendment" ["l"="-4.9,-22.823"]
"Curzy/Wolsemap" ["l"="-4.878,-22.755"]
"puzzlet/constitution-kr" ["l"="-4.893,-22.79"]
"akic4op4/GNE" ["l"="-4.924,-22.895"]
"seopbo/first_project_nlp" ["l"="-4.89,-22.945"]
"kh-kim/simple-ntc" ["l"="-4.898,-22.971"]
"kh-kim/simple-nmt" ["l"="-4.884,-22.962"]
"deep-diver/EN-FR-MLT-tensorflow" ["l"="-4.786,-22.886"]
"kastnerkyle/multi-speaker-tacotron-tensorflow" ["l"="-5.083,-22.892"]
"junyoung-jamong/KiwoomOS" ["l"="-5.173,-22.645"]
"pystockhub/pykiwoom" ["l"="-5.153,-22.675"]
"kmounlp/NER" ["l"="-5.098,-23.109"]
"machinereading/KoreanNERCorpus" ["l"="-5.04,-23.112"]
"stevekwon211/Hello-Kaggle-Guide-KOR" ["l"="-4.911,-23.207"]
"keon/3-min-pytorch" ["l"="-5.002,-23.082"]
"YBIGTA/DeepNLP-Study" ["l"="-4.891,-23.257"]
"wikibook/tf2" ["l"="-4.834,-23.216"]
"insightbook/data-science-from-scratch" ["l"="-4.856,-23.217"]
"snunlp/KR-BERT" ["l"="-5.156,-23.112"]
"koalanlp/koalanlp" ["l"="-5.088,-23.066"]
"jungyeul/korean-parallel-corpora" ["l"="-5.129,-23.019"]
"kakao-arena/brunch-article-recommendation" ["l"="-4.928,-23.006"]
"JungoKim/brunch_nafma" ["l"="-4.944,-23.031"]
"zzsza/Awesome-Mobility-Machine-Learning-Contents" ["l"="-4.749,-22.784"]
"illidanlab/Simulator" ["l"="-4.722,-22.72"]
"mktal/kddcup-starting-kit" ["l"="-4.701,-22.722"]
"hitsuji5/fleet-sim" ["l"="-4.739,-22.711"]
"zzsza/bigquery-tutorial" ["l"="-4.715,-22.764"]
"liulingbo918/CSTN" ["l"="52.564,17.351"]
"LevinJ/Supply-demand-forecasting" ["l"="-4.749,-22.753"]
"KB-AI-Research/KB-ALBERT" ["l"="-5.152,-23.128"]
"gyusu/Kiwoom_datareader" ["l"="-5.136,-22.733"]
"taehyunjo90/gatherer" ["l"="-5.105,-22.722"]
"Huffon/NLP101" ["l"="-5.107,-23.181"]
"Huffon/nlp-various-tutorials" ["l"="-5.186,-23.269"]
"uoneway/Text-Summarization-Repo" ["l"="-5.124,-23.205"]
"WICWIU/WICWIU" ["l"="-5.005,-22.928"]
"callee2006/HGUNeuralNetworks" ["l"="-4.988,-22.904"]
"songys/CS224N_17_KOR_SUB" ["l"="-4.971,-23.041"]
"hangulize/hangulize" ["l"="-5.217,-22.882"]
"muik/transliteration" ["l"="-5.17,-22.913"]
"suapapa/go_hangul" ["l"="-5.24,-22.84"]
"MrBananaHuman/KorNlpTutorial" ["l"="-4.982,-23.076"]
"hongshin/DataStructures" ["l"="-4.609,-22.763"]
"callee2006/MachineLearning" ["l"="-4.826,-22.868"]
"lqez/awesome-hangul" ["l"="-5.238,-22.938"]
"dahlia/seonbi" ["l"="-5.295,-22.888"]
"kaniblu/hangul-utils" ["l"="-5.176,-23.067"]
"disjukr/just-news" ["l"="-4.849,-22.124"]
"what-studio/tossi" ["l"="-5.265,-22.877"]
"RanolP/ko-translation-terms" ["l"="-5.274,-22.909"]
"nunalang/nuna" ["l"="-54.469,4.381"]
"YBIGTA/Data-Science" ["l"="-4.781,-23.339"]
"YBIGTA/data-science-2018" ["l"="-4.798,-23.326"]
"gilbutITbook/007022" ["l"="-4.805,-23.212"]
"rickiepark/machine-learning-with-python-cookbook" ["l"="-4.816,-23.183"]
"szlhl1040/Vehicles-Dispatch-Simulator" ["l"="-4.713,-22.687"]
"Jinjiarui/CoRide" ["l"="-4.687,-22.678"]
"Autumncow/Order-dispatch" ["l"="-4.707,-22.702"]
"juhyeonkim95/TaxiSimulatorOnGraph" ["l"="-4.732,-22.69"]
"mlii/mfrl" ["l"="57.815,18.315"]
"yeontaek/BERT-MECAB-Korean-Model" ["l"="-4.971,-23.027"]
"tbai2019/HanBert-54k-N" ["l"="-5.141,-23.045"]
"monologg/HanBert-Transformers" ["l"="-5.126,-23.084"]
"seominjoon/piqa" ["l"="54.814,26.344"]
"emorynlp/ud-korean" ["l"="-5.109,-22.989"]
"warnikchow/dlk2nlp" ["l"="-5.026,-23.071"]
"clovaai/subword-qac" ["l"="-5.09,-22.992"]
"deep-diver/Soccer-Ball-Detection-YOLOv2" ["l"="-4.727,-22.886"]
"deep-diver/Object-Detection-YOLOv2-Darkflow" ["l"="-4.696,-22.869"]
"devsisters/multi-speaker-tacotron-tensorflow" ["l"="-4.939,-22.973"]
"TensorFlowKR/dlcampjeju" ["l"="-4.859,-23.019"]
"Kyubyong/deepvoice3" ["l"="37.219,2.573"]
"hunkim/KaggleZeroToAll" ["l"="-4.822,-23.039"]
"haven-jeon/KoSpacing" ["l"="-5.029,-22.887"]
"forkonlp/DNH4" ["l"="-5.03,-22.918"]
"CppKorea/CppTemplateStudy" ["l"="-4.477,-23.38"]
"CppKorea/DesignPattern" ["l"="-4.462,-23.375"]
"CppKorea/OptimizedCppStudy" ["l"="-4.464,-23.362"]
"CppKorea/CppConcurrencyInAction" ["l"="-4.473,-23.395"]
"jacking75/boost_asio_sample" ["l"="-4.516,-23.36"]
"hccho2/hccho2.github.io" ["l"="-5.206,-22.941"]
"higee/elastic" ["l"="-4.864,-22.802"]
"wikibook/elasticsearch" ["l"="-4.842,-22.779"]
"HowookJeong/elasticsearch-analysis-arirang" ["l"="-4.951,-22.903"]
"YBIGTA/Deep_learning" ["l"="-4.837,-23.297"]
"DSKSD/Pytorch_Fast_Campus_2018" ["l"="-4.857,-23.297"]
"insuj3on/HelloPyTorch" ["l"="-4.856,-23.276"]
"UniversalDependencies/UD_Korean-Kaist" ["l"="-5.112,-22.943"]
"hyunwoongko/social-robot-bao" ["l"="-5.292,-23.294"]
"hyunwoongko/citrus-pest-disease-recognition" ["l"="-5.282,-23.286"]
"hyunwoongko/strabismus-recognition" ["l"="-5.305,-23.294"]
"korlucene/arirang-analyzer-es-plugin" ["l"="-4.941,-22.871"]
"graykode/DeepLearning-Study" ["l"="-4.881,-22.865"]
"stevejhkang/kubernetes-tutorial" ["l"="-4.9,-22.903"]
"graykode/kubernetes-glusterfs-aws" ["l"="-4.893,-22.878"]
"Dcom-KHU/dcom-tech-interview" ["l"="-4.843,-22.862"]
"graykode/aws-kubeadm-terraform" ["l"="-4.878,-22.884"]
"pingpong-ai/dialogue-generation-models" ["l"="-5.197,-23.059"]
"pingpong-ai/kg-cvae-generator" ["l"="-5.141,-23.011"]
"wikibook/python-real-estate" ["l"="-4.934,-22.69"]
"bjpublic/python-for-finance-data" ["l"="-4.962,-22.728"]
"wonseokjung/ReinforcementLearning_byWonseok" ["l"="-4.727,-23.095"]
"wonseokjung/ai_supermario" ["l"="-4.759,-23.092"]
"jehyunlee/code-snippet" ["l"="-4.762,-22.917"]
"R-Korea/weekly_R_quiz" ["l"="-4.997,-22.888"]
"R-Korea/RUCK2020" ["l"="-4.992,-22.86"]
"encaion/R_edu" ["l"="-4.973,-22.868"]
"shinykorea/Meetup" ["l"="-4.978,-22.852"]
"utilForever/cpp-developer-roadmap" ["l"="-4.306,-23.276"]
"jihoo-kim/BrunchRec" ["l"="-4.966,-23.067"]
"gusdnd852/Hyunwoong" ["l"="-5.319,-23.302"]
"modulabs/beyondBERT" ["l"="-4.988,-23.152"]
"lassl/lassl" ["l"="-5.173,-23.234"]
"thejungwon/MyChromeExtension" ["l"="-4.853,-23.481"]
"thejungwon/boostcamp_project_ocr" ["l"="-4.88,-23.455"]
"thejungwon/boostcamp_project_mask" ["l"="-4.864,-23.47"]
"simonjisu/nsmc_study" ["l"="-4.88,-22.924"]
"NamDinhRobotics/proSLAM" ["l"="-4.681,-23.32"]
"gyubeomim/pgo_toy_example" ["l"="-4.705,-23.284"]
"Dcom-KHU/Node.js-Tutorial" ["l"="-4.732,-22.831"]
"KHU-AGI/LFS-GAN" ["l"="-4.671,-22.824"]
"Dcom-KHU/dcom-career-guide" ["l"="-4.802,-22.845"]
"rickiepark/hg-da" ["l"="-4.863,-23.351"]
"rickiepark/handson-ml3" ["l"="-4.836,-23.351"]
"BaekKyunShin/musthave_mldl_problem_solving_strategy" ["l"="-4.822,-23.381"]
"catSirup/KorEDA" ["l"="-5.145,-23.339"]
"jucho2725/ktextaug" ["l"="-5.153,-23.319"]
"toriving/KoEDA" ["l"="-5.151,-23.263"]
"kiyoungkim1/LMkor" ["l"="-5.138,-23.181"]
"yukyunglee/Transformer_Survey_Study" ["l"="-5.121,-23.251"]
"WegraLee/deep-learning-from-scratch-4" ["l"="-4.917,-23.293"]
"subinium/Deep-Papers" ["l"="-4.988,-23.27"]
"sooftware/attentions" ["l"="-5.318,-23.096"]
"sooftware/seq2seq" ["l"="-5.355,-23.074"]
"sooftware/Naver-AI-Hackathon-Speech" ["l"="-5.362,-23.084"]
"sooftware/transformer" ["l"="-5.352,-23.063"]
"sooftware/ksponspeech" ["l"="-5.321,-23.075"]
"sooftware/speech-transformer" ["l"="-5.369,-23.071"]
"sooftware/Fairseq-Listen-Attend-Spell" ["l"="-5.367,-23.063"]
"sooftware/speech-paper-review" ["l"="-5.349,-23.083"]
"sooftware/jasper" ["l"="-5.339,-23.078"]
"sooftware/conformer" ["l"="35.754,2.242"]
"sooftware/TIL" ["l"="-5.355,-23.093"]
"sooftware/tacotron2" ["l"="-5.359,-23.055"]
"changzy00/pytorch-attention" ["l"="-54.647,-12.559"]
"tunib-ai/tunib-electra" ["l"="-5.216,-23.222"]
"WooilJeong/PyKakao" ["l"="-5.109,-22.908"]
"vuski/admdongkor" ["l"="-5.023,-22.955"]
"hahnlee/hwp-rs" ["l"="-5.095,-20.937"]
"salesforce/ctrl-sum" ["l"="-5.485,-23.255"]
"hyunwoongko/summarizers" ["l"="-5.434,-23.256"]
"Seonghoon-Yu/AI_Paper_Review" ["l"="-5.077,-23.247"]
"gyunggyung/KoGPT2-FineTuning" ["l"="-5.178,-23.126"]
"Huffon/klue-transformers-tutorial" ["l"="-5.132,-23.235"]
"HeegyuKim/open-korean-instructions" ["l"="-5.268,-23.199"]
"finterstellar/quant_machine" ["l"="-5.146,-22.75"]
"alexanderskulikov/discrete-math-python-scripts" ["l"="-4.5,-22.709"]
"ChanchalKumarMaji/Introduction-to-Discrete-Mathematics-for-Computer-Science-Specialization" ["l"="-4.456,-22.712"]
"PacktPublishing/Practical-Discrete-Mathematics" ["l"="-4.463,-22.681"]
"monologg/KoBERT-NER" ["l"="-5.196,-23.074"]
"monologg/KoBERT-nsmc" ["l"="-5.216,-23.054"]
"sooftware/k-startups" ["l"="-5.21,-23.186"]
"gyunggyung/Korea-Startups" ["l"="-5.22,-23.151"]
"lovit/huggingface_konlpy" ["l"="56.457,29.276"]
"KR-HappyFace/KoDALLE" ["l"="-5.185,-23.289"]
"sooftware/Korean-PLM" ["l"="-5.203,-23.212"]
"hyunwoongko/pecab" ["l"="-5.193,-23.217"]
"NomaDamas/awesome-korean-llm" ["l"="-5.261,-23.175"]
"ssisOneTeam/Korean-Embedding-Model-Performance-Benchmark-for-Retriever" ["l"="-5.331,-23.226"]
"sculove/QWebview-plus" ["l"="-5.101,-22.707"]
"kdseo/PyTrader" ["l"="-5.087,-22.724"]
"err0r500/foundational-knowledge-for-programmers" ["l"="-4.535,-22.649"]
"AbhishekSinhaCoder/Computer-Science-Notes" ["l"="-4.523,-22.675"]
"seoul-opengov/opengov" ["l"="-5.057,-21.801"]
"shineware/KOMORAN" ["l"="-5.073,-23.057"]
"kakao/s2graph" ["l"="-19.247,-23.947"]
"open-korean-text/elasticsearch-analysis-openkoreantext" ["l"="-5.02,-23.008"]
"theeluwin/textrankr" ["l"="-4.99,-22.96"]
"bluedisk/hangul-toolkit" ["l"="-5.131,-23.062"]
"zzsza/Perfect-Guide-about-Machine-Learning-Study" ["l"="-4.822,-23.092"]
"zzsza/Datascience_School" ["l"="-4.84,-23.085"]
"MLOpsKR/Awesome-MLOps-Contents" ["l"="-4.684,-22.219"]
"lsjsj92/recommender_system_with_Python" ["l"="-4.993,-23.386"]
"RS-KR/GNN-RS-Beginner" ["l"="-4.992,-23.287"]
"choco9966/Recommendation-Tutorial" ["l"="-4.989,-23.445"]
"jaewonlee-728/fastcampus-RecSys" ["l"="-4.997,-23.359"]
"BM-K/KoSentenceBERT-ETRI" ["l"="-5.234,-23.121"]
"BM-K/KoSentenceBERT-SKT" ["l"="-5.268,-23.126"]
"BM-K/KoMiniLM" ["l"="-5.284,-23.123"]
"BM-K/Sentence-Embedding-Is-All-You-Need" ["l"="-5.251,-23.168"]
"BM-K/KoSimCSE-SKT" ["l"="-5.278,-23.113"]
"BM-K/Troll-Detector" ["l"="-5.277,-23.102"]
"BM-K/Styling-Chatbot-with-Transformer" ["l"="-5.288,-23.1"]
"BM-K/KoSentenceBERT_V2" ["l"="-5.28,-23.092"]
"2runo/Curse-detection-data" ["l"="-5.227,-23.031"]
"ZIZUN/korean-malicious-comments-dataset" ["l"="-5.214,-23.019"]
"Nam-SW/badword_check" ["l"="-5.271,-22.994"]
"2runo/Curse-detection" ["l"="-5.194,-20.793"]
"omh02033/dimi-petition-front" ["l"="-5.194,-20.836"]
"ko-nlp/Open-korean-corpora" ["l"="-5.183,-23.092"]
"kakao/buffalo" ["l"="-5.014,-23.153"]
"kakao/n2" ["l"="-1.097,3.934"]
"kakao/recoteam" ["l"="-5.017,-23.276"]
"yoongi0428/RecSys_PyTorch" ["l"="59.416,23.619"]
"ceo21ckim/Awesome-Recsys" ["l"="59.346,22.971"]
"kimwoonggon/publicservant_AI" ["l"="-5.175,-23.112"]
"Huffon/pytorch-transformer-kor-eng" ["l"="-5.109,-23.3"]
"openspeech-team/openspeech" ["l"="35.761,2.278"]
"sooftware/Speech-Recognition-Tutorial" ["l"="-5.264,-23.067"]
"rishikksh20/VocGAN" ["l"="37.39,2.502"]
"emotiontts/emotiontts_open_db" ["l"="38.506,2.413"]
"Jackson-Kang/MFARunner" ["l"="-5.221,-22.958"]
"keonlee9420/Expressive-FastSpeech2" ["l"="38.405,2.27"]
"utilForever/2019-OSS-Summer-RLBasic" ["l"="-4.747,-23.203"]
"reinforcement-learning-kr/2021_RLKR_Drone_Delivery_Challenge_with_Unity" ["l"="-4.725,-23.194"]
"frechele/BabaIsAgent-v0" ["l"="-4.338,-23.33"]
"utilForever/2022-KW-RLEnv" ["l"="-4.33,-23.313"]
"xlgames-inc/XLE" ["l"="-4.316,-23.38"]
"Circular-Studios/Dash" ["l"="-22.983,-22.583"]
"utilForever/Cubby-v1" ["l"="-4.372,-23.371"]
"PolygonTek/BlueshiftEngine" ["l"="-23.103,-27.317"]
"djewsbury/XLE" ["l"="-4.287,-23.39"]
"smilegate-ai/korean_unsmile_dataset" ["l"="-5.18,-23.194"]
"jason9693/APEACH" ["l"="-5.196,-23.182"]
"roomylee/nlp-papers-with-arxiv" ["l"="-5.229,-23.089"]
"roomylee/EMNLP-2019-Papers" ["l"="-5.264,-23.046"]
"danqi/acl2020-openqa-tutorial" ["l"="54.495,25.53"]
"neubig/lowresource-nlp-bootcamp-2020" ["l"="52.812,25.546"]
"allenai/acl2022-zerofewshot-tutorial" ["l"="36.947,-2.563"]
"facebookresearch/unlikelihood_training" ["l"="53.41,26.083"]
"neulab/Text-Summarization-Papers" ["l"="58.37,29.049"]
"jeongukjae/korean-spacing-model" ["l"="-5.148,-23.025"]
"shbictai/narrativeKoGPT2" ["l"="-5.241,-23.104"]
"MrBananaHuman/KorGPT2Tutorial" ["l"="-5.285,-23.061"]
"seujung/KoBART-summarization" ["l"="-5.145,-23.201"]
"sohyeon98720/KoGPT2-finetuning" ["l"="-5.22,-23.106"]
"ssut/PushBank2" ["l"="-4.966,-22.77"]
"sjchoi86/2022-1-deep-learning-applications" ["l"="-5.08,-23.286"]
"SMART-TTS/SMART-Vocoder" ["l"="-5.345,-22.926"]
"SMART-TTS/SMART-Long_Sentence_TTS" ["l"="-5.331,-22.909"]
"SMART-TTS/SMART-NAR_Fast_TTS" ["l"="-5.332,-22.922"]
"SMART-TTS/SMART-Single_Emotional_TTS" ["l"="-5.35,-22.912"]
"sooftware/End-to-End-Speech-Recognition-Models" ["l"="-5.407,-23.054"]
"sooftware/deepspeech2" ["l"="-5.401,-23.067"]
"graykode/commit-autosuggestions" ["l"="-5.04,-23.031"]
"graykode/matorage" ["l"="-5.009,-22.988"]
"jason9693/Soongsil-BERT" ["l"="-5.026,-22.978"]
"graykode/toeicbert" ["l"="-5.049,-22.962"]
"nakosung/ai-dungeon-cli" ["l"="-5.029,-22.995"]
"MrBananaHuman/KalBert" ["l"="-5.332,-23.024"]
"emliang/RL-for-Transportation" ["l"="-4.734,-22.664"]
"emliang/Multi-Agent-RL" ["l"="-4.732,-22.634"]
"hyunwoongko/kobart-transformers" ["l"="-5.231,-23.247"]
"fast-ai-kr/ko-translation" ["l"="-4.755,-22.901"]
"haven-jeon/ko_en_neural_machine_translation" ["l"="-5.143,-22.945"]
"gyunggyung/AGI-Papers" ["l"="-5.254,-23.134"]
"gyunggyung/PyTorch" ["l"="-5.363,-23.109"]
"HAE-RAE/HAE-RAE-BENCH" ["l"="-5.301,-23.194"]
"UMich-ML-Group/RL-Ridesharing" ["l"="-4.697,-22.662"]
"dingyuan-shi/Learning-To-Dispatch" ["l"="-4.708,-22.652"]
"haven-jeon/KoNLP" ["l"="-5.049,-22.915"]
"haven-jeon/NIADic" ["l"="-5.053,-22.882"]
"forkonlp/N2H4" ["l"="-5.049,-22.985"]
"hyunwoongko/bigdata-lecture" ["l"="-5.316,-23.312"]
"maybeluo/KDDCup2020-RL-1st-solution" ["l"="-4.688,-22.696"]
"laxatives/rl" ["l"="-4.671,-22.705"]
"programgarden/youtube" ["l"="-5.064,-22.708"]
"CppKorea/CppKoreaSeminar7th" ["l"="-4.447,-23.433"]
"CppKorea/CodeOfConduct" ["l"="-4.433,-23.458"]
"fd873630/RNN-Transducer" ["l"="-5.362,-22.975"]
"monologg/KoBERT-KorQuAD" ["l"="-5.134,-23.408"]
"codertimo/KorQuAD-Question-Generation" ["l"="-5.151,-23.453"]
"graykode/KorQuAD-beginner" ["l"="-5.132,-23.453"]
"monologg/KoELECTRA-Pipeline" ["l"="-5.122,-23.28"]
"data-system-wiki/designing-data-intensive-applications" ["l"="-4.874,-23.531"]
"SMART-TTS/SMART-Multi-Speaker-Style-TTS" ["l"="-5.342,-22.901"]
"monologg/KoCharELECTRA" ["l"="-5.151,-23.291"]
"hchung12/espnet-asr" ["l"="-5.403,-22.948"]
"qute012/korean-speech-recognition-quartznet" ["l"="-5.447,-22.924"]
"wikibook/xai" ["l"="-4.789,-23.244"]
"domyounglee/korbert-mecab-multigpu" ["l"="-5.145,-22.992"]
"teammatmul/project-purifier" ["l"="-5.291,-22.981"]
"BM-K/Dialogue-Generation-BERT-GPT2-Korean" ["l"="-5.297,-23.092"]
"BM-K/Dialogue-Generation-BERT-GPT2-English" ["l"="-5.288,-23.08"]
"BM-K/Analyzing-Product-Review-System-with-BERT" ["l"="-5.301,-23.08"]
"hyunwoongko/resnext-parallel" ["l"="-5.356,-23.319"]
"qute012/kosr" ["l"="-5.467,-22.911"]
"LimHyungTae/pcl_tutorial" ["l"="-4.688,-23.297"]
"utilForever/CubbyEngine" ["l"="-4.384,-23.293"]
"fd873630/deep_speech_2_korean" ["l"="-5.399,-22.964"]
"haven-jeon/TrainKoSpacing" ["l"="-5.128,-22.922"]
"Taekyoon/takos-alpha" ["l"="-5.115,-22.967"]
"tunib-ai/large-scale-lm-tutorials" ["l"="-5.17,-23.244"]
"tunib-ai/parallelformers" ["l"="-5.186,-23.235"]
"jiphyeonjeon/season2" ["l"="-5.178,-23.254"]
"EleutherAI/polyglot" ["l"="-5.22,-23.204"]
"Lightning-Universe/lightning-transformers" ["l"="-5.166,-23.272"]
"hyeon9698/upbit_bot" ["l"="-5.019,-22.651"]
"youtube-jocoding/koreainvestment-autotrade" ["l"="-5,-22.729"]
"jiphyeonjeon/season3" ["l"="-5.145,-23.274"]
"yukyunglee/transformers-resources" ["l"="-5.026,-23.373"]
"KLUE-benchmark/KLUE-baseline" ["l"="-5.158,-23.248"]
"yukyunglee/Awesome-Dialogue-State-Tracking" ["l"="56.515,29.244"]
"jinmang2/boostcamp_ai_tech_2" ["l"="-5.095,-23.324"]
"Lightning-Universe/lightning-flash" ["l"="51.035,29.615"]
"Lightning-Universe/lightning-bolts" ["l"="50.957,29.568"]
"Lightning-AI/torchmetrics" ["l"="50.984,29.581"]
"Lightning-AI/deep-learning-project-template" ["l"="51.048,29.579"]
"gritmind/python-nori" ["l"="-5.159,-23.355"]
"SeanNaren/minGPT" ["l"="-5.163,-23.386"]
"AIRC-KETI/ke-t5" ["l"="-5.182,-23.212"]
"subinium/Misc-Cheatsheet" ["l"="-5.097,-23.257"]
"teddylee777/langchain-kr" ["l"="-5.241,-23.278"]
"uJhin/upbit-client" ["l"="-5.022,-22.598"]
"uJhin/upbit-client-docs" ["l"="-5.037,-22.603"]
"hyunjun/bookmarks" ["l"="-5.02,-23.121"]
"williamFalcon/minGPT" ["l"="-5.168,-23.428"]
"uoneway/KoBertSum" ["l"="-5.124,-23.264"]
"cosmoquester/2021-dialogue-summary-competition" ["l"="-5.145,-23.244"]
"shineware/PyKOMORAN" ["l"="-5.068,-22.999"]
"shineware/komoran-2.0" ["l"="-5.053,-23.007"]
"rickiepark/nlp-with-pytorch" ["l"="-5.097,-23.428"]
"subinium/Problem-Solving" ["l"="-5.088,-23.307"]
"utilForever/modern-cpp-tutorial" ["l"="-4.429,-23.379"]
"jwvg0425/ModernCppStudy" ["l"="-4.45,-23.393"]
"utilForever/modern-cpp-next" ["l"="-4.387,-23.427"]
"utilForever/SimpleRPG-Text" ["l"="-4.415,-23.408"]
"utilForever/OpenGLTutorial" ["l"="-4.399,-23.394"]
"searle-j/KOTE" ["l"="-5.175,-23.221"]
"jhgan00/ko-sentence-transformers" ["l"="-5.285,-23.156"]
"BM-K/KoBART-summarization-pytorch" ["l"="-5.297,-23.112"]
"snunlp/KR-SBERT" ["l"="-5.401,-23.113"]
"adlnlp/K-MHaS" ["l"="-5.451,-23.096"]
"rosinality/ml-papers" ["l"="-5.031,-23.312"]
"dhkim0225/1day_1paper" ["l"="46.245,6.315"]
"AIRC-KETI/ke-t5-downstreams" ["l"="-5.213,-23.295"]
"paust-team/pko-t5" ["l"="-5.282,-23.234"]
"AIRC-KETI/VL-KE-T5" ["l"="-5.217,-23.312"]
"naver-ai/carecall-corpus" ["l"="-5.267,-23.268"]
"southkorea/seoul-maps" ["l"="-4.99,-22.978"]
"southkorea/southkorea-maps" ["l"="-4.999,-23.02"]
"hwk0702/keras2torch" ["l"="-4.992,-23.421"]
"DSBA-Lab/CodeLab" ["l"="-5.005,-23.425"]
"ClustProject/KUDataClassification" ["l"="-4.961,-23.414"]
"hyunwoongko/python-mecab-kor" ["l"="-5.224,-23.256"]
"ropas/pytea" ["l"="-5.255,-23.311"]
"robotpilot/ros2-seminar-examples" ["l"="-4.715,-23.243"]
"thunlp/SOS4NLP" ["l"="-5.152,-23.228"]
"hyunwoongko/nlp-datasets" ["l"="-5.367,-23.285"]
"hyunwoongko/dialobot" ["l"="-5.298,-23.256"]
"hyunwoongko/bert2bert-summarization" ["l"="-5.421,-23.299"]
"yansfil/grab-data-world" ["l"="-4.825,-23.636"]
"sooftware/lightning-asr" ["l"="-5.401,-23.039"]
"rickiepark/nlp-with-transformers" ["l"="-5.098,-23.467"]
"ratsgo/nlpbook" ["l"="-5.092,-23.493"]
"raqoon886/KorBertSum" ["l"="-5.115,-23.323"]
"hyunwoongko/openchat" ["l"="-5.196,-23.2"]
"sangdee/kss-java" ["l"="-5.243,-23.234"]
"utilForever/2022-CppKorea-DataStructure" ["l"="-4.354,-23.263"]
"utilForever/2022-KW-ECS-Development" ["l"="-4.333,-23.297"]
"umi0410/how-to-backend-in-go" ["l"="-4.798,-22.814"]
"FacerAin/facerain.github.io" ["l"="-4.82,-22.841"]
"sooftware/pytorch-lr-scheduler" ["l"="-5.386,-23.053"]
"AIRC-KETI/long-ke-t5" ["l"="-5.229,-23.33"]
"jaketae/koclip" ["l"="-5.231,-23.3"]
"navervision/KELIP" ["l"="-5.265,-23.375"]
"tunib-ai/DKTC" ["l"="-5.204,-23.229"]
"jinmang2/DOOLY" ["l"="-5.24,-23.144"]
"BoostcampAITech/lecture-note-python-basics-for-ai" ["l"="-4.924,-23.414"]
"sjchoi86/upstage-basic-deeplearning" ["l"="-4.979,-23.368"]
"MoMentum99/pstage_01_image_classification" ["l"="-4.89,-23.44"]
"sigmak/coinAutoTrader" ["l"="-5.005,-22.626"]
"sooftware/RNN-Transducer" ["l"="-5.38,-23.032"]
"HaloKim/KorBertSum" ["l"="-5.118,-23.354"]
"utilForever/Runeterra" ["l"="-4.494,-23.285"]
"utilForever/phys" ["l"="-4.353,-23.307"]
"ydy8989/boostcamp" ["l"="-5.1,-23.356"]
"jinmang2/HuggingTemplate" ["l"="-5.095,-23.367"]
"Nardien/KALA" ["l"="57.542,19.097"]
"shine-jung/food-handong" ["l"="-4.575,-22.669"]
"zoomkoding/zoomkoding.github.io" ["l"="-4.596,-22.664"]
"zoomkoding/gongmojoo.com" ["l"="-4.582,-22.656"]
"sooftware/luna-transformer" ["l"="-5.341,-23.062"]
"ClustProject/KUDataPreprocessing" ["l"="-4.928,-23.368"]
"hyunwoongko/megatron-11b" ["l"="-5.324,-23.276"]
"vhrehfdl/bentoml_tutorial" ["l"="-4.917,-23.496"]
"vhrehfdl/MLflow_tutorial" ["l"="-4.925,-23.477"]
"lucidrains/PaLM-pytorch" ["l"="-5.186,-23.312"]
"lucidrains/PaLM-jax" ["l"="-5.186,-23.375"]
"conceptofmind/PaLM" ["l"="38.012,-1.565"]
"lucidrains/RETRO-pytorch" ["l"="-5.216,-23.353"]
"hpcaitech/PaLM-colossalai" ["l"="38.989,-0.888"]
"lucidrains/flamingo-pytorch" ["l"="49.022,30.299"]
"google-research/FLAN" ["l"="37.18,-0.137"]
"lucidrains/CoCa-pytorch" ["l"="48.961,30.31"]
"kakaobrain/mindall-e" ["l"="-5.138,-23.218"]
"princeton-nlp/LM-BFF" ["l"="50.039,38.082"]
"lucidrains/parti-pytorch" ["l"="46.571,30.514"]
"kakaoenterprise/JORLDY" ["l"="-4.731,-23.168"]
"kakaobrain/brain-agent" ["l"="-4.673,-23.183"]
"medipixel/rl_algorithms" ["l"="57.604,18.29"]
"chagmgang/distributed_reinforcement_learning" ["l"="-4.68,-23.166"]
"sail-sg/envpool" ["l"="59.282,17.489"]
"pjueon/pykis" ["l"="-5.019,-22.756"]
"lovedlim/BigDataCertificationCourses" ["l"="-4.793,-23.41"]
"SeongBeomLEE/RecSys-Tech-Blog-Article" ["l"="-4.982,-23.304"]
"SeongBeomLEE/RecsysTutorial" ["l"="-4.962,-23.311"]
"UpstageAI/2022-lguplus-AI-Ground" ["l"="-4.971,-23.326"]
"jihoo-kim/awesome-RecSys" ["l"="59.436,23.685"]
"jihoo-kim/Awesome-Generative-RecSys" ["l"="59.312,22.91"]
"CausalInferenceLab/Causal-Inference-with-Python" ["l"="-5.003,-23.323"]
"Langboat/mengzi-retrieval-lm" ["l"="-5.233,-23.419"]
"facebookresearch/atlas" ["l"="54.454,25.579"]
"lucidrains/memorizing-transformers-pytorch" ["l"="37.965,-1.611"]
"facebookresearch/contriever" ["l"="54.494,25.618"]
"urvashik/knnlm" ["l"="36.965,-2.651"]
"AI21Labs/in-context-ralm" ["l"="54.396,25.53"]
"castorini/pyserini" ["l"="54.512,25.65"]
"facebookresearch/FiD" ["l"="54.475,25.57"]
"texttron/tevatron" ["l"="54.504,25.68"]
"r-three/t-few" ["l"="50.119,38.15"]
"jacking75/examples_CMake" ["l"="-4.535,-23.329"]
"mingrammer/git-tips" ["l"="-5.121,-21.837"]
"CppKorea/IntroductionToModernCpp" ["l"="-4.49,-23.375"]
"naver/d2codingfont" ["l"="-4.95,-20.967"]
"junsooo/linux-insides-ko" ["l"="-4.516,-23.388"]
"nlpai-lab/KULLM" ["l"="-5.241,-23.186"]
"kakaobrain/coyo-dataset" ["l"="49.003,30.342"]
"kakaobrain/rq-vae-transformer" ["l"="46.537,30.551"]
"cresset-template/cresset" ["l"="-5.158,-23.212"]
"AminRezaei0x443/PyTorch-LIT" ["l"="-5.267,-23.152"]
"byeongjokim/MLOps-Example" ["l"="-5.135,-23.282"]
"rentruewang/koila" ["l"="21.589,14.187"]
"smilegate-ai/HuLiC" ["l"="-5.23,-23.228"]
"JeongJiHeon/ScoreDiffusionModel" ["l"="-5.081,-23.338"]
"yang-song/score_sde_pytorch" ["l"="45.727,31.575"]
"sangyun884/Diffusion-Models-Seminar" ["l"="-5.058,-23.334"]
"sunlin-ai/diffusion_tutorial" ["l"="45.568,31.696"]
"acids-ircam/diffusion_models" ["l"="45.639,31.624"]
"cloneofsimo/consistency_models" ["l"="46.246,30.426"]
"tunib-ai/KMWP" ["l"="-5.221,-23.238"]
"sooftware/nlp-tasks" ["l"="-5.315,-23.119"]
"jwkanggist/self-supervised-learning-narratives-1" ["l"="-5.068,-23.412"]
"sjchoi86/yet-another-rl-tutorial" ["l"="-5.077,-23.362"]
"tunib-ai/transformers" ["l"="-5.216,-23.248"]
"WooilJeong/PyNaver" ["l"="-5.122,-22.879"]
"airobotlab/KoChatGPT" ["l"="-5.257,-23.191"]
"nlpai-lab/KURE" ["l"="-5.315,-23.238"]
"BM-K/KoDiffCSE" ["l"="-5.324,-23.142"]
"melodysdreamj/KoVicuna" ["l"="-5.288,-23.171"]
"TmaxEdu/KorDPR" ["l"="-5.386,-23.132"]
"Beomi/ko-lm-evaluation-harness" ["l"="-5.338,-23.208"]
"deepseasw/nlp_model_list" ["l"="-5.302,-23.155"]
"jwkanggist/SSL-narratives-NLP-1" ["l"="-5.057,-23.441"]
"jwkanggist/SSL-narratives-VLM-1" ["l"="-5.068,-23.446"]
"LG-NLP/KorWikiTableQuestions" ["l"="-5.165,-23.297"]
"EleutherAI/dps" ["l"="-5.268,-23.35"]
"Beomi/easy-lm-trainer" ["l"="-5.284,-23.381"]
"smilegate-ai/korean_smile_style_dataset" ["l"="-5.233,-23.213"]
"utilForever/2022-Make-Interpreter-Rust" ["l"="-4.385,-23.267"]
"utilForever/2022-Make-Compiler-Rust" ["l"="-4.374,-23.246"]
"sculove/xing-plus" ["l"="-5.112,-22.677"]
"sharebook-kr/pyxing" ["l"="-5.124,-22.645"]
"boostcamp-AI-Tech-alumni/Events" ["l"="-5.037,-23.336"]
"mlops-for-mle/mlops-for-mle" ["l"="-4.783,-22.142"]
"thejungwon/Boostcamp-CV-Serving" ["l"="-5.039,-23.293"]
"kristjankorjus/applied-deep-learning-resources" ["l"="-4.664,-22.993"]
"sjchoi86/Deep-Learning-101" ["l"="-4.752,-23.015"]
"szwed/awesome-machine-learning-python" ["l"="-4.593,-22.976"]
"EleutherAI/oslo" ["l"="-5.212,-23.265"]
"naver-ai/korean-safety-benchmarks" ["l"="-5.284,-23.195"]
"VumBleBot/odqa_baseline_code" ["l"="56.433,29.298"]
"utilForever/PolyMapGenerator" ["l"="-4.351,-23.398"]
"utilForever/PBRStudy" ["l"="-4.347,-23.373"]
"jorditorresBCN/LibroTensorFlow" ["l"="-4.664,-22.934"]
"jorditorresBCN/FirstContactWithTensorFlow-2ndEdition" ["l"="-4.717,-22.959"]
"AIRC-KETI/kowow" ["l"="-5.24,-23.349"]
"redlion0929/KorDPR_NLP" ["l"="-5.423,-23.119"]
"hihellohowareyou/RESREF_Chatbot_data_for_Korean" ["l"="-5.17,-23.33"]
"TooTouch/REVECA" ["l"="-4.999,-23.407"]
"yookyungkho/DSBA_CS224N_2021" ["l"="-5.02,-23.414"]
"ClustProject/KUDataRegression" ["l"="-4.958,-23.402"]
"ClustProject/KUDataRepresentation" ["l"="-4.975,-23.406"]
"ClustProject/KUDataForecasting" ["l"="-4.973,-23.416"]
"metterian/peep-talk" ["l"="-5.345,-23.22"]
"sugyeonge/Towards-diverse-QAG" ["l"="-5.355,-23.224"]
"dlawjddn803/INFO" ["l"="-5.342,-23.233"]
"CausalInferenceLab/Experimentation-platform-materials" ["l"="-4.948,-23.411"]
"vhrehfdl/NLP_Company" ["l"="-4.921,-23.509"]
"sooftware/sooftware.io" ["l"="-5.346,-23.11"]
"sjchoi86/Tensorflow-101" ["l"="-4.73,-23.04"]
"terryum/TensorFlow_Exercises" ["l"="-4.653,-23.044"]
"guillaume-chevalier/LSTM-Human-Activity-Recognition" ["l"="48.152,34.039"]
"nlintz/TensorFlow-Tutorials" ["l"="47.787,28.822"]
"sjchoi86/dl_tutorials" ["l"="-4.742,-22.994"]
"pkmital/tensorflow_tutorials" ["l"="47.724,28.859"]
"sjchoi86/advanced-tensorflow" ["l"="-4.803,-23.024"]
"instillai/TensorFlow-Course" ["l"="50.79,28.373"]
"nfmcclure/tensorflow_cookbook" ["l"="47.774,28.763"]
"jtoy/awesome-tensorflow" ["l"="47.814,28.742"]
"alrojo/tensorflow-tutorial" ["l"="47.79,28.718"]
"aymericdamien/TensorFlow-Examples" ["l"="47.951,28.706"]
"BinRoot/TensorFlow-Book" ["l"="47.758,28.727"]
"tflearn/tflearn" ["l"="47.841,28.826"]
"kjsman/stable-diffusion-pytorch" ["l"="-5.135,-23.311"]
"hkproj/pytorch-stable-diffusion" ["l"="45.679,31.766"]
"owenliang/pytorch-diffusion" ["l"="-5.172,-23.506"]
"explainingai-code/StableDiffusion-PyTorch" ["l"="45.626,31.781"]
"dome272/Diffusion-Models-pytorch" ["l"="45.741,31.645"]
"AssemblyAI-Community/MinImagen" ["l"="44.7,31.216"]
"kh-kim/arxiv-translator" ["l"="-5.126,-23.384"]
"lucidrains/classifier-free-guidance-pytorch" ["l"="45.665,31.626"]
"ClustProject/Clust" ["l"="-4.993,-23.506"]
"kwonminki/Asyrp_official" ["l"="33.256,31.465"]
"wangkai930418/awesome-diffusion-categorized" ["l"="33.379,31.258"]
"awjuliani/pytorch-diffusion" ["l"="45.565,31.662"]
"gwang-kim/DiffusionCLIP" ["l"="33.367,31.415"]
"KnHuq/Dynamic-Tensorflow-Tutorial" ["l"="46.16,27.86"]
"sjchoi86/dl_tutorials_3rd" ["l"="-4.703,-22.984"]
"xnuk/K-SSVM-node" ["l"="-4.914,-22.866"]
"CausalInferenceLab/causal-inference-practice" ["l"="-4.951,-23.388"]
"CausalInferenceLab/OCE-Materials" ["l"="-4.962,-23.372"]
"CausalInferenceLab/CausalInferenceLab.github.io" ["l"="-4.949,-23.372"]
"CausalInferenceLab/causal-inference-in-python-code" ["l"="-4.965,-23.389"]
"Pseudo-Lab/data-engineering-for-everybody" ["l"="-4.925,-23.433"]
"CausalInferenceLab/causal-inference-lecture" ["l"="-4.938,-23.39"]
"CausalInferenceLab/Gamifying-Causal-Inference-with-Game" ["l"="-4.979,-23.345"]
"sculove/Kiwoom-Helper" ["l"="-5.129,-22.677"]
"didw/PyMLT" ["l"="-5.125,-22.704"]
"theeluwin/lexrankr" ["l"="-4.971,-22.928"]
"hunkim/effective_python_notebook" ["l"="-4.776,-23.039"]
"hunkim/ml" ["l"="-4.761,-23.062"]
"hunkim/Wit-Facebook" ["l"="23.876,2.022"]
"hunkim/TensorFlow-ML-Exercises" ["l"="-4.752,-23.078"]
"jason9693/polyglot-finetuning-oslo" ["l"="-5.243,-23.332"]
"jason9693/oslo-kogpt-finetunig" ["l"="-5.26,-23.336"]
"NamyounKim/NLP4kec" ["l"="-5.058,-22.945"]
"mrchypark/tqk" ["l"="-5.04,-22.934"]
"TensorFlowKR/awesome_tensorflow_implementations" ["l"="-4.844,-23.008"]
"FuZer/StudyTensorFlow" ["l"="-4.827,-23.019"]
"NickShahML/tensorflow_with_latest_papers" ["l"="46.15,27.801"]
"jazzsaxmafia/show_attend_and_tell.tensorflow" ["l"="48.521,31.967"]
"carpedm20/MemN2N-tensorflow" ["l"="46.129,27.849"]
"jazzsaxmafia/show_and_tell.tensorflow" ["l"="48.496,31.964"]
"nicolas-ivanov/tf_seq2seq_chatbot" ["l"="55.772,28.467"]
"jazzsaxmafia/video_to_sequence" ["l"="48.121,32.801"]
"hardmaru/write-rnn-tensorflow" ["l"="46.453,7.65"]
"DjangoPeng/tensorflow-in-depth" ["l"="-5.263,13.442"]
"zsdonghao/text-to-image" ["l"="45.785,29.226"]
"jorditorresBCN/FirstContactWithTensorFlow" ["l"="-4.755,-22.96"]
"rickiepark/first-steps-with-tensorflow" ["l"="-4.792,-23.001"]
"hyunyulhenry/quant_cookbook" ["l"="-5.169,-22.775"]
"jung-min-seo/A-Roadmap-for-the-quant-beginner" ["l"="-5.168,-22.754"]
"wikibook/quant" ["l"="-5.149,-22.78"]
"jaketae/storyteller" ["l"="-5.189,-23.339"]
"neosapience/editts" ["l"="-5.197,-23.415"]
"golbin/TensorFlow-ML-Exercises" ["l"="-4.782,-23.016"]
"thejungwon/search-engine-tutorial" ["l"="-5.039,-23.377"]
"mechurak/kiwoom" ["l"="-5.143,-22.7"]
"minsuk-heo/problemsolving" ["l"="-4.721,-22.921"]
"leechanwoo/Tensorflow-projects" ["l"="-4.782,-22.954"]
"monologg/nlp-arxiv-daily" ["l"="-5.441,-23.325"]
"tunib-ai/artwork_captions" ["l"="-5.265,-23.293"]
"bluedisk/korean_char_rnn" ["l"="-5.199,-22.904"]
"jwkangmarco/LLM-narratives" ["l"="-5.06,-23.466"]
"insikk/kor-char-rnn-tensorflow" ["l"="-5.213,-22.851"]
"likejazz/cnn-text-classification-tf" ["l"="-4.851,-22.977"]
"hugman/deep_learning" ["l"="-5.178,-22.931"]
"krikit/annie" ["l"="-5.163,-22.963"]
"JDongian/python-jamo" ["l"="-5.24,-23.003"]
"minsuk-heo/BigData" ["l"="-4.833,-22.749"]
"sunrint/recruit" ["l"="-4.863,-22.716"]
"Pseudo-Lab/CPython-Guide" ["l"="-4.905,-23.458"]
"utilForever/CubbyRocket" ["l"="-4.303,-23.316"]
"Seoneun/T5-Question-Generation" ["l"="-5.366,-23.135"]
"JJuOn/paper-crawler" ["l"="-4.649,-22.828"]
"hyunwoongko/beyond-lm" ["l"="-5.253,-23.358"]
"ClustProject/KUDataTransferlearning" ["l"="-4.997,-23.527"]
"ClustProject/KUDataMultitasklearning" ["l"="-4.982,-23.525"]
"huggingface/large_language_model_training_playbook" ["l"="-5.237,-23.388"]
"huggingface/llm_training_handbook" ["l"="-5.264,-23.451"]
"boostcampaitech5/level3_nlp_finalproject-nlp-08" ["l"="-5.631,-23.104"]
"boostcampaitech5/level3_nlp_finalproject-nlp-12" ["l"="-5.596,-23.113"]
"what-studio/smartformat-korean" ["l"="-5.287,-22.845"]
"sublee/korean" ["l"="-5.25,-22.862"]
"what-studio/SmartFormat.NET-Korean" ["l"="-5.302,-22.851"]
"ROBOTIS-GIT/OpenCR" ["l"="60.267,12.662"]
"ROBOTIS-GIT/ros_tutorials" ["l"="60.244,12.773"]
"robotpilot/rosbook_kr" ["l"="-4.724,-23.263"]
"tbmoon/kalman_filter" ["l"="48.723,32.292"]
"changh95/visual-slam-roadmap" ["l"="59.382,11.178"]
"ROBOTIS-GIT/open_manipulator" ["l"="60.259,12.708"]
"changh95/WeeklySpatialAI" ["l"="-4.623,-23.278"]
"NomaDamas/KICE_slayer_AI_Korean" ["l"="-5.234,-23.164"]
"Marker-Inc-Korea/RAGchain" ["l"="-5.292,-23.182"]
"Marker-Inc-Korea/Korean-SAT-LLM-Leaderboard" ["l"="-5.341,-23.13"]
"davidkim205/komt" ["l"="-5.312,-23.173"]
"melodysdreamj/WizardVicunaLM" ["l"="-5.346,-23.162"]
"turboderp/exllama" ["l"="42.603,-2.014"]
"teknium1/GPTeacher" ["l"="42.501,-2.047"]
"keldenl/gpt-llama.cpp" ["l"="40.953,-3.776"]
"aigoopy/llm-jeopardy" ["l"="36.319,0.079"]
"nlpxucan/WizardLM" ["l"="40.014,0.576"]
"CStanKonrad/long_llama" ["l"="38.013,-1.527"]
"kroll-software/babyagi4all" ["l"="42.528,-2.145"]
"epfml/landmark-attention" ["l"="38.036,-1.5"]
"deep-diver/LLM-As-Chatbot" ["l"="39.849,0.651"]
"yaodongC/awesome-instruction-dataset" ["l"="39.041,-2.338"]
"flurb18/AgentOoba" ["l"="42.645,-2.118"]
"UpstageAI/dataverse" ["l"="-5.298,-23.22"]
"UpstageAI/evalverse" ["l"="-5.319,-23.212"]
"KU-HIAI/Ko-Gemma" ["l"="-5.355,-23.235"]
"khanrc/honeybee" ["l"="-5.315,-23.192"]
"tabtoyou/KoLLaVA" ["l"="-5.277,-23.214"]
"Marker-Inc-Korea/K-G-OAT" ["l"="-5.35,-23.192"]
"Marker-Inc-Korea/COT_steering" ["l"="-5.37,-23.207"]
"jwj7140/Gugugo" ["l"="-5.413,-23.237"]
"42dot/42dot_LLM" ["l"="-5.375,-23.171"]
"boychaboy/KOLD" ["l"="-5.375,-23.19"]
"EleutherAI/hae-rae" ["l"="-5.328,-23.173"]
"joanbruna/stat212b" ["l"="47.831,28.854"]
"floydhub/dl-setup" ["l"="47.764,28.86"]
"dennybritz/deeplearning-papernotes" ["l"="47.764,28.803"]
"jxieeducation/DIY-Data-Science" ["l"="46.224,27.842"]
"kjw0612/awesome-rnn" ["l"="47.892,28.734"]
"instructkr/LogicKor" ["l"="-5.338,-23.254"]
"Marker-Inc-Korea/KO-Platypus" ["l"="-5.333,-23.183"]
"owenliang/pytorch-transformer" ["l"="-5.165,-23.533"]
"owenliang/mnist-dits" ["l"="-5.185,-23.529"]
"owenliang/mnist-vit" ["l"="-5.178,-23.545"]
"owenliang/mnist-clip" ["l"="-5.197,-23.544"]
"owenliang/another-pytorch" ["l"="-5.153,-23.544"]
"MrBananaHuman/CounselGPT" ["l"="-5.455,-23.174"]
"human-rights-corpus/HRC" ["l"="-5.445,-23.162"]
"quantumaikr/KoreanLM" ["l"="-5.421,-23.165"]
"davidkim205/nox" ["l"="-5.435,-23.143"]
"jacking75/edu_cpp_IOCP" ["l"="-26.135,-32.285"]
"lovit/KoBERTScore" ["l"="-5.372,-23.229"]
"lcw99/evolve-instruct" ["l"="36.275,0.065"]
"JoJo0217/rlhf_korean_dataset" ["l"="-5.409,-23.155"]
"Flative/jude" ["l"="-4.853,-22.688"]
"DopeorNope-Lee/Ko-Fine-tuning_DataGen" ["l"="-5.397,-23.211"]
"liner-engineering/llm-meetup" ["l"="-5.431,-23.196"]
"liner-engineering/liner-pdf-chat-tutorial" ["l"="-5.487,-23.198"]
"KU-VGI/GUIDE" ["l"="-4.647,-22.817"]
"kakao/kanana" ["l"="-5.39,-23.256"]
"kakaobrain/trident" ["l"="-5.41,-23.186"]
"kakaobrain/noc" ["l"="48.616,30.462"]
"WisconsinAIVision/ViP-LLaVA" ["l"="47.4,30.245"]
"hunkim/DeepLearningZeroToAll" ["l"="-4.884,-23.121"]
"nhn/fe.javascript" ["l"="-5.159,-21.844"]
"youbeebee/deeplearning_from_scratch" ["l"="-4.912,-23.264"]
"likejazz/llama3.np" ["l"="-5.257,-23.246"]
"likejazz/llama3.cuda" ["l"="-5.299,-23.311"]
"idoh/mamba.np" ["l"="-5.386,-23.31"]
"mustafaaljadery/llama3v" ["l"="47.236,30.05"]
"alessiodm/drl-zh" ["l"="40.562,5.893"]
"hscspring/llama.np" ["l"="-5.289,-23.273"]
"joennlae/tensorli" ["l"="52.905,32.427"]
"golbin/TensorFlow-MNIST" ["l"="-4.713,-23.006"]
"Marker-Inc-Korea/AutoRAG" ["l"="41.124,0.522"]
"teddylee777/langserve_ollama" ["l"="-5.308,-23.336"]
"teddylee777/langchain-teddynote" ["l"="-5.326,-23.332"]
"LangChain-OpenTutorial/LangChain-OpenTutorial" ["l"="-5.343,-23.302"]
"sionic-ai/xionic-ko-llama-3-70b" ["l"="-5.301,-23.359"]
"teddynote-lab/mcp-usecase" ["l"="-5.338,-23.347"]
"teddynote-lab/langgraph-mcp-agents" ["l"="-5.339,-23.323"]
"sjchoi86/bayes-nn" ["l"="22.403,15.348"]
"wookayin/TensorFlowKR-2017-talk-bestpractice" ["l"="-4.817,-22.982"]
"bi-lab/deeplearning_tutorial" ["l"="-4.775,-22.975"]
"sjchoi86/deep-uncertainty" ["l"="-4.775,-22.992"]
"Marker-Inc-Korea/AutoRAG-example-korean-embedding-benchmark" ["l"="-5.35,-23.276"]
"teddylee777/teddynote-parser-api-client" ["l"="-5.329,-23.381"]
"Atipico1/Kor-IR" ["l"="-5.359,-23.302"]
"teddylee777/openai-api-kr" ["l"="-5.335,-23.407"]
"sionic-ai/xionic" ["l"="-5.315,-23.411"]
"wookayin/tensorflow-talk-debugging" ["l"="46.196,27.905"]
"KyujinHan/Sakura-SOLAR-DPO" ["l"="-5.553,-23.128"]
"StableFluffy/EasyLLMFeaturePorter" ["l"="-5.318,-23.257"]
"wandb/llm-kr-eval" ["l"="-5.377,-23.27"]
"davidkim205/kollm_evaluation" ["l"="-5.481,-23.13"]
"jwj7140/Gunmo-emo-classification" ["l"="-5.454,-23.217"]
"GunhoChoi/Kind-PyTorch-Tutorial" ["l"="-4.842,-23.069"]
"lifefeel/Grapheme-to-Phoneme" ["l"="-5.246,-22.955"]
"hunkim/SolarLLMChatDemo" ["l"="-5.604,-23.135"]
"KU-VGI/BUS" ["l"="-4.623,-22.822"]
"CausalInferenceLab/Marketing_Science" ["l"="-4.942,-23.425"]
"MrBananaHuman/UnethicalQuestionsKor" ["l"="-5.487,-23.158"]
"JINU6497/Time-series-LLM" ["l"="-4.966,-23.437"]
"CausalInferenceLab/causal-inference-with-causalML" ["l"="-4.908,-23.403"]
"CausalInferenceLab/Smart_Causal_Inference" ["l"="-4.944,-23.449"]
"J-Seo/KoCommonGEN-V2" ["l"="-5.389,-23.237"]
"socurites/char-rnn-korean" ["l"="-5.22,-22.827"]
"SeoroMin/Prompt4LLM-Eval" ["l"="-4.99,-23.541"]
"hunkim/PyTorchZeroToAll" ["l"="50.637,28.494"]
"chiphuyen/stanford-tensorflow-tutorials" ["l"="47.839,28.711"]
"leriomaggio/deep-learning-keras-tensorflow" ["l"="47.743,28.67"]
"Hvass-Labs/TensorFlow-Tutorials" ["l"="47.801,28.694"]
"instructkr/reranker-simple-benchmark" ["l"="-5.416,-23.346"]
"UpstageAI/solar-prompt-cookbook" ["l"="-5.384,-23.353"]
"UpstageAI/cookbook" ["l"="-5.426,-23.393"]
"teddynote-lab/LangGraph-HandsOn" ["l"="-5.365,-23.349"]
"idoh/fast_mamba.np" ["l"="-5.418,-23.332"]
"hunkim/DeepLearningStars" ["l"="-4.798,-23.052"]
"MarwanELAdawy/project-based-learning-frontend" ["l"="-21.922,-23.814"]
"hunkim/PythonZeroToAll" ["l"="-4.783,-23.069"]
"jihoo-kim/awesome-production-llm" ["l"="-5.257,-23.22"]
"magpie-align/magpie" ["l"="37.287,-0.241"]
"gyunggyung/MLLMArxivTalk" ["l"="-5.308,-23.269"]
"Curt-Park/cs231n_assignments" ["l"="48.449,28.487"]
"hwalsuklee/how-far-can-we-go-with-MNIST" ["l"="44.67,28.805"]
"hunkim/DeepRL-Agents" ["l"="-4.775,-23.082"]
"jcwleo/Reinforcement_Learning" ["l"="-4.774,-23.105"]
"OhmyNews/12-14_kapf" ["l"="-4.963,-22.978"]
"teampopong/pokr.kr" ["l"="-4.962,-22.955"]
"milooy/cartmango" ["l"="-4.959,-22.997"]
"PinkWink/DataScience" ["l"="-4.959,-23.088"]
"2JAE22/NaverAIBoostCamp_7th_paper" ["l"="-5.454,-23.418"]
"LG-AI-EXAONE/EXAONE-3.0" ["l"="-5.447,-23.286"]
"LG-AI-EXAONE/KoMT-Bench" ["l"="-5.504,-23.291"]
"LG-AI-EXAONE/EXAONE-3.5" ["l"="-5.461,-23.273"]
"su-park/mteb_ko_leaderboard" ["l"="-5.356,-23.254"]
"jh941213/multiagent_backend" ["l"="-5.356,-23.336"]
"soravux/pytorch_tutorial" ["l"="48.124,28.536"]
"stormraiser/GAN-weight-norm" ["l"="46.046,28.959"]
"GunhoChoi/Deep-Learning-For-Beginners" ["l"="48.561,32.351"]
"Atcold/pytorch-CortexNet" ["l"="41.443,25.74"]
"Marker-Inc-Korea/AutoRAG-tutorial-ko" ["l"="-5.411,-23.313"]
"Marker-Inc-Korea/KoLLM_Eval" ["l"="-5.536,-23.3"]
"daje0601/CoT-Reasoning_without_Prompting" ["l"="-5.435,-23.214"]
"OnAnd0n/ko-embedding-leaderboard" ["l"="-5.438,-23.362"]
"langchain-ai/langgraph-supervisor-py" ["l"="41.487,0.306"]
"teddynote-lab/langgraph-qna-agent" ["l"="-5.375,-23.329"]
"kakao/FunctionChat-Bench" ["l"="-5.404,-23.289"]
"taki0112/Awesome-DeepLearning-Study" ["l"="-4.854,-23.093"]
"krta2/awesome-nonsan" ["l"="-4.063,-21.205"]
"utilForever/RosettaStone-GUI" ["l"="-4.443,-23.298"]
"HearthSim/SabberStone" ["l"="-4.139,-23.125"]
"peter1591/hearthstone-ai" ["l"="-4.137,-23.104"]
"rkm0959/Number_Theory_in_CP_PS" ["l"="-3.984,-21.126"]
"utilForever/2022-Korea-Rust-Backend" ["l"="-4.635,-21.937"]
"sesang06/awesome-alternative-military-service" ["l"="-3.978,-21.341"]
"CausalInferenceLab/Lang2SQL" ["l"="-4.928,-23.458"]
"rlcode/paper-reviews" ["l"="-4.724,-23.115"]
"utilForever/ProgrammingPractice" ["l"="-4.367,-23.449"]
"teddynote-lab/langgraph-react-mcp-chat" ["l"="-5.349,-23.364"]
"langchain-ai/langchain-mcp-adapters" ["l"="41.412,0.259"]
"langchain-ai/react-agent" ["l"="41.676,0.417"]
"teddynote-lab/langgraph-dynamic-mcp-agents" ["l"="-5.379,-23.375"]
"teddylee777/dify-openwebui" ["l"="-5.359,-23.373"]
"esxr/langgraph-mcp" ["l"="41.526,0.342"]
"j-min/DL-for-Chatbot" ["l"="-5.268,-22.811"]
"TensorMSA/tensormsa_jupyter" ["l"="-5.297,-22.777"]
"LG-AI-EXAONE/EXAONE-Deep" ["l"="-5.478,-23.297"]
"WWolf/korea-election" ["l"="-5.012,-22.913"]
"hahnlee/hwp.js" ["l"="-5.018,-20.921"]
"remotty/documents.docker.co.kr" ["l"="-3.953,-21.493"]
"reinforcement-learning-kr/pg_travel" ["l"="57.499,18.266"]
"pdpdds/SkyOS" ["l"="-4.476,-23.438"]
"pdpdds/yuzaos" ["l"="-4.47,-23.468"]
"pdpdds/CGSFII" ["l"="-26.025,-32.11"]
"PinkWink/playing_data" ["l"="-4.937,-23.093"]
"lovit/pycrfsuite_spacing" ["l"="-5.109,-23.006"]
"Pseudo-Lab/EfficientML" ["l"="-4.945,-23.48"]
}