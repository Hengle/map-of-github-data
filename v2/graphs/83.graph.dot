digraph G {
"tensorflow/lucid" -> "pytorch/captum"
"tensorflow/lucid" -> "yosinski/deep-visualization-toolbox" ["e"=1]
"tensorflow/lucid" -> "raghakot/keras-vis" ["e"=1]
"tensorflow/lucid" -> "interpretml/interpret" ["e"=1]
"tensorflow/lucid" -> "marcotcr/lime" ["e"=1]
"tensorflow/lucid" -> "greentfrapp/lucent" ["e"=1]
"tensorflow/lucid" -> "cleverhans-lab/cleverhans" ["e"=1]
"tensorflow/lucid" -> "PAIR-code/facets" ["e"=1]
"tensorflow/lucid" -> "soumith/ganhacks" ["e"=1]
"tensorflow/lucid" -> "lmcinnes/umap" ["e"=1]
"tensorflow/lucid" -> "utkuozbulak/pytorch-cnn-visualizations"
"tensorflow/lucid" -> "google/dopamine" ["e"=1]
"tensorflow/lucid" -> "google-deepmind/graph_nets" ["e"=1]
"tensorflow/lucid" -> "google-deepmind/sonnet" ["e"=1]
"tensorflow/lucid" -> "google-deepmind/trfl" ["e"=1]
"jax-ml/jax" -> "google/flax" ["e"=1]
"jax-ml/jax" -> "Lightning-AI/pytorch-lightning"
"jax-ml/jax" -> "ray-project/ray"
"jax-ml/jax" -> "HIPS/autograd" ["e"=1]
"jax-ml/jax" -> "pytorch/pytorch" ["e"=1]
"jax-ml/jax" -> "triton-lang/triton" ["e"=1]
"jax-ml/jax" -> "google-research/google-research"
"jax-ml/jax" -> "deepspeedai/DeepSpeed" ["e"=1]
"jax-ml/jax" -> "facebookresearch/faiss" ["e"=1]
"jax-ml/jax" -> "arogozhnikov/einops"
"jax-ml/jax" -> "google-deepmind/dm-haiku" ["e"=1]
"jax-ml/jax" -> "shap/shap" ["e"=1]
"jax-ml/jax" -> "google-deepmind/deepmind-research"
"jax-ml/jax" -> "huggingface/transformers" ["e"=1]
"jax-ml/jax" -> "horovod/horovod" ["e"=1]
"Lightning-AI/pytorch-lightning" -> "huggingface/pytorch-image-models"
"Lightning-AI/pytorch-lightning" -> "jax-ml/jax"
"Lightning-AI/pytorch-lightning" -> "pytorch/pytorch" ["e"=1]
"Lightning-AI/pytorch-lightning" -> "ray-project/ray"
"Lightning-AI/pytorch-lightning" -> "deepspeedai/DeepSpeed" ["e"=1]
"Lightning-AI/pytorch-lightning" -> "huggingface/transformers" ["e"=1]
"Lightning-AI/pytorch-lightning" -> "albumentations-team/albumentations"
"Lightning-AI/pytorch-lightning" -> "lutzroeder/netron"
"Lightning-AI/pytorch-lightning" -> "facebookresearch/detectron2"
"Lightning-AI/pytorch-lightning" -> "pyg-team/pytorch_geometric" ["e"=1]
"Lightning-AI/pytorch-lightning" -> "google-research/google-research"
"Lightning-AI/pytorch-lightning" -> "arogozhnikov/einops"
"Lightning-AI/pytorch-lightning" -> "facebookresearch/faiss" ["e"=1]
"Lightning-AI/pytorch-lightning" -> "pytorch/examples"
"Lightning-AI/pytorch-lightning" -> "lucidrains/vit-pytorch"
"microsoft/tensorwatch" -> "interpretml/interpret" ["e"=1]
"microsoft/tensorwatch" -> "timsainb/tensorflow2-generative-models" ["e"=1]
"microsoft/tensorwatch" -> "TDAmeritrade/stumpy" ["e"=1]
"microsoft/tensorwatch" -> "benedekrozemberczki/awesome-decision-tree-papers" ["e"=1]
"microsoft/tensorwatch" -> "lanpa/tensorboardX"
"microsoft/tensorwatch" -> "tensorflow/lucid"
"microsoft/tensorwatch" -> "catalyst-team/catalyst"
"microsoft/tensorwatch" -> "facebookresearch/hiplot" ["e"=1]
"microsoft/tensorwatch" -> "waleedka/hiddenlayer"
"microsoft/tensorwatch" -> "google-research/tensor2robot" ["e"=1]
"microsoft/tensorwatch" -> "facebookresearch/XLM" ["e"=1]
"microsoft/tensorwatch" -> "facebookresearch/maskrcnn-benchmark"
"microsoft/tensorwatch" -> "facebookresearch/pytext" ["e"=1]
"microsoft/tensorwatch" -> "fossasia/visdom"
"microsoft/tensorwatch" -> "facebookresearch/mmf" ["e"=1]
"HumanSignal/label-studio" -> "cvat-ai/cvat"
"HumanSignal/label-studio" -> "HumanSignal/labelImg"
"HumanSignal/label-studio" -> "doccano/doccano" ["e"=1]
"HumanSignal/label-studio" -> "wkentaro/labelme"
"HumanSignal/label-studio" -> "Lightning-AI/pytorch-lightning"
"HumanSignal/label-studio" -> "ultralytics/ultralytics"
"HumanSignal/label-studio" -> "HumanSignal/awesome-data-labeling"
"HumanSignal/label-studio" -> "gradio-app/gradio" ["e"=1]
"HumanSignal/label-studio" -> "facebookresearch/detectron2"
"HumanSignal/label-studio" -> "albumentations-team/albumentations"
"HumanSignal/label-studio" -> "iterative/dvc" ["e"=1]
"HumanSignal/label-studio" -> "mlflow/mlflow" ["e"=1]
"HumanSignal/label-studio" -> "facebookresearch/faiss" ["e"=1]
"HumanSignal/label-studio" -> "lutzroeder/netron"
"HumanSignal/label-studio" -> "streamlit/streamlit" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "NVIDIA/TensorRT"
"NVIDIA/DeepLearningExamples" -> "NVIDIA/Megatron-LM" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "NVIDIA/NeMo" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "NVIDIA/apex"
"NVIDIA/DeepLearningExamples" -> "horovod/horovod" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "triton-inference-server/server" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "NVIDIA/FasterTransformer" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "pytorch/examples"
"NVIDIA/DeepLearningExamples" -> "huggingface/pytorch-image-models"
"NVIDIA/DeepLearningExamples" -> "Lightning-AI/pytorch-lightning"
"NVIDIA/DeepLearningExamples" -> "deepspeedai/DeepSpeed" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "NVIDIA/DALI"
"NVIDIA/DeepLearningExamples" -> "NVIDIA/nvidia-docker"
"NVIDIA/DeepLearningExamples" -> "google-research/google-research"
"NVIDIA/DeepLearningExamples" -> "lutzroeder/netron"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/Serving"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/models"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/Paddle"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleFleetX"
"PaddlePaddle/VisualDL" -> "lanpa/tensorboardX"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/VisualDL" -> "fossasia/visdom"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PGL"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleGAN"
"HarisIqbal88/PlotNeuralNet" -> "huggingface/pytorch-image-models"
"HarisIqbal88/PlotNeuralNet" -> "lutzroeder/netron"
"HarisIqbal88/PlotNeuralNet" -> "dair-ai/ml-visuals"
"HarisIqbal88/PlotNeuralNet" -> "Lightning-AI/pytorch-lightning"
"HarisIqbal88/PlotNeuralNet" -> "lucidrains/vit-pytorch"
"HarisIqbal88/PlotNeuralNet" -> "facebookresearch/detectron2"
"HarisIqbal88/PlotNeuralNet" -> "open-mmlab/mmdetection"
"HarisIqbal88/PlotNeuralNet" -> "vdumoulin/conv_arithmetic"
"HarisIqbal88/PlotNeuralNet" -> "pytorch/examples"
"HarisIqbal88/PlotNeuralNet" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"HarisIqbal88/PlotNeuralNet" -> "aleju/imgaug"
"HarisIqbal88/PlotNeuralNet" -> "jax-ml/jax"
"HarisIqbal88/PlotNeuralNet" -> "albumentations-team/albumentations"
"HarisIqbal88/PlotNeuralNet" -> "pyg-team/pytorch_geometric" ["e"=1]
"HarisIqbal88/PlotNeuralNet" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"google-deepmind/deepmind-research" -> "google-deepmind/alphafold" ["e"=1]
"google-deepmind/deepmind-research" -> "google-research/google-research"
"google-deepmind/deepmind-research" -> "jax-ml/jax"
"google-deepmind/deepmind-research" -> "openai/baselines" ["e"=1]
"google-deepmind/deepmind-research" -> "Lightning-AI/pytorch-lightning"
"google-deepmind/deepmind-research" -> "pyg-team/pytorch_geometric" ["e"=1]
"google-deepmind/deepmind-research" -> "google-deepmind/acme" ["e"=1]
"google-deepmind/deepmind-research" -> "huggingface/pytorch-image-models"
"google-deepmind/deepmind-research" -> "arogozhnikov/einops"
"google-deepmind/deepmind-research" -> "lucidrains/vit-pytorch"
"google-deepmind/deepmind-research" -> "facebookresearch/detr"
"google-deepmind/deepmind-research" -> "openai/spinningup" ["e"=1]
"google-deepmind/deepmind-research" -> "google-deepmind/sonnet" ["e"=1]
"google-deepmind/deepmind-research" -> "dmlc/dgl" ["e"=1]
"google-deepmind/deepmind-research" -> "openai/CLIP"
"hysts/pytorch_image_classification" -> "bearpaw/pytorch-classification"
"hysts/pytorch_image_classification" -> "weiaicunzai/awesome-image-classification"
"hysts/pytorch_image_classification" -> "weiaicunzai/pytorch-cifar100"
"hysts/pytorch_image_classification" -> "lxztju/pytorch_classification"
"hysts/pytorch_image_classification" -> "aaron-xichen/pytorch-playground"
"hysts/pytorch_image_classification" -> "bentrevett/pytorch-image-classification"
"hysts/pytorch_image_classification" -> "Cadene/pretrained-models.pytorch"
"hysts/pytorch_image_classification" -> "kuangliu/pytorch-cifar"
"hysts/pytorch_image_classification" -> "lukemelas/EfficientNet-PyTorch"
"hysts/pytorch_image_classification" -> "clovaai/CutMix-PyTorch"
"hysts/pytorch_image_classification" -> "facebookresearch/pycls"
"hysts/pytorch_image_classification" -> "weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks"
"hysts/pytorch_image_classification" -> "akamaster/pytorch_resnet_cifar10"
"hysts/pytorch_image_classification" -> "miraclewkf/ImageClassification-PyTorch"
"hysts/pytorch_image_classification" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"eriklindernoren/PyTorch-YOLOv3" -> "ultralytics/yolov3"
"eriklindernoren/PyTorch-YOLOv3" -> "ayooshkathuria/pytorch-yolo-v3"
"eriklindernoren/PyTorch-YOLOv3" -> "jwyang/faster-rcnn.pytorch"
"eriklindernoren/PyTorch-YOLOv3" -> "amdegroot/ssd.pytorch"
"eriklindernoren/PyTorch-YOLOv3" -> "Tianxiaomo/pytorch-YOLOv4"
"eriklindernoren/PyTorch-YOLOv3" -> "xingyizhou/CenterNet"
"eriklindernoren/PyTorch-YOLOv3" -> "qqwweee/keras-yolo3"
"eriklindernoren/PyTorch-YOLOv3" -> "facebookresearch/maskrcnn-benchmark"
"eriklindernoren/PyTorch-YOLOv3" -> "AlexeyAB/darknet"
"eriklindernoren/PyTorch-YOLOv3" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"eriklindernoren/PyTorch-YOLOv3" -> "amusi/awesome-object-detection"
"eriklindernoren/PyTorch-YOLOv3" -> "hoya012/deep_learning_object_detection"
"eriklindernoren/PyTorch-YOLOv3" -> "open-mmlab/mmdetection"
"eriklindernoren/PyTorch-YOLOv3" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"eriklindernoren/PyTorch-YOLOv3" -> "YunYang1994/tensorflow-yolov3" ["e"=1]
"ultralytics/yolov3" -> "eriklindernoren/PyTorch-YOLOv3"
"ultralytics/yolov3" -> "AlexeyAB/darknet"
"ultralytics/yolov3" -> "Tianxiaomo/pytorch-YOLOv4"
"ultralytics/yolov3" -> "xingyizhou/CenterNet"
"ultralytics/yolov3" -> "ayooshkathuria/pytorch-yolo-v3"
"ultralytics/yolov3" -> "qqwweee/keras-yolo3"
"ultralytics/yolov3" -> "open-mmlab/mmdetection"
"ultralytics/yolov3" -> "Megvii-BaseDetection/YOLOX"
"ultralytics/yolov3" -> "ultralytics/yolov5"
"ultralytics/yolov3" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"ultralytics/yolov3" -> "pjreddie/darknet"
"ultralytics/yolov3" -> "jwyang/faster-rcnn.pytorch"
"ultralytics/yolov3" -> "hoya012/deep_learning_object_detection"
"ultralytics/yolov3" -> "amdegroot/ssd.pytorch"
"ultralytics/yolov3" -> "facebookresearch/maskrcnn-benchmark"
"google-ai-edge/mediapipe" -> "CMU-Perceptual-Computing-Lab/openpose"
"google-ai-edge/mediapipe" -> "facebookresearch/detectron2"
"google-ai-edge/mediapipe" -> "Tencent/ncnn"
"google-ai-edge/mediapipe" -> "deepinsight/insightface" ["e"=1]
"google-ai-edge/mediapipe" -> "open-mmlab/mmdetection"
"google-ai-edge/mediapipe" -> "tensorflow/tfjs-models" ["e"=1]
"google-ai-edge/mediapipe" -> "lutzroeder/netron"
"google-ai-edge/mediapipe" -> "facebookresearch/segment-anything"
"google-ai-edge/mediapipe" -> "AlexeyAB/darknet"
"google-ai-edge/mediapipe" -> "MVIG-SJTU/AlphaPose" ["e"=1]
"google-ai-edge/mediapipe" -> "opencv/opencv" ["e"=1]
"google-ai-edge/mediapipe" -> "ultralytics/yolov5"
"google-ai-edge/mediapipe" -> "huggingface/pytorch-image-models"
"google-ai-edge/mediapipe" -> "spmallick/learnopencv"
"google-ai-edge/mediapipe" -> "alibaba/MNN"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "amusi/CVPR2025-Papers-with-Code"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "open-mmlab/mmdetection"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "amusi/daily-paper-computer-vision"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "hoya012/deep_learning_object_detection"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "microsoft/Swin-Transformer"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "amusi/awesome-object-detection"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "mrgloom/awesome-semantic-segmentation"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "jwyang/faster-rcnn.pytorch"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "huggingface/pytorch-image-models"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "xmu-xiaoma666/External-Attention-pytorch"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "xingyizhou/CenterNet"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "jacobgil/pytorch-grad-cam"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "lucidrains/vit-pytorch"
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" -> "Cadene/pretrained-models.pytorch"
"facebookresearch/Detectron" -> "matterport/Mask_RCNN"
"facebookresearch/Detectron" -> "facebookresearch/detectron2"
"facebookresearch/Detectron" -> "facebookresearch/maskrcnn-benchmark"
"facebookresearch/Detectron" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"facebookresearch/Detectron" -> "open-mmlab/mmdetection"
"facebookresearch/Detectron" -> "tensorflow/models" ["e"=1]
"facebookresearch/Detectron" -> "pjreddie/darknet"
"facebookresearch/Detectron" -> "jwyang/faster-rcnn.pytorch"
"facebookresearch/Detectron" -> "aleju/imgaug"
"facebookresearch/Detectron" -> "BVLC/caffe" ["e"=1]
"facebookresearch/Detectron" -> "hoya012/deep_learning_object_detection"
"facebookresearch/Detectron" -> "CMU-Perceptual-Computing-Lab/openpose"
"facebookresearch/Detectron" -> "AlexeyAB/darknet"
"facebookresearch/Detectron" -> "HumanSignal/labelImg"
"facebookresearch/Detectron" -> "pytorch/examples"
"onnx/onnx" -> "microsoft/onnxruntime"
"onnx/onnx" -> "lutzroeder/netron"
"onnx/onnx" -> "NVIDIA/TensorRT"
"onnx/onnx" -> "apache/tvm"
"onnx/onnx" -> "Tencent/ncnn"
"onnx/onnx" -> "onnx/tutorials"
"onnx/onnx" -> "horovod/horovod" ["e"=1]
"onnx/onnx" -> "onnx/models"
"onnx/onnx" -> "pytorch/pytorch" ["e"=1]
"onnx/onnx" -> "apache/mxnet" ["e"=1]
"onnx/onnx" -> "alibaba/MNN"
"onnx/onnx" -> "jax-ml/jax"
"onnx/onnx" -> "ray-project/ray"
"onnx/onnx" -> "facebookresearch/faiss" ["e"=1]
"onnx/onnx" -> "BVLC/caffe" ["e"=1]
"utkuozbulak/pytorch-cnn-visualizations" -> "jacobgil/pytorch-grad-cam"
"utkuozbulak/pytorch-cnn-visualizations" -> "Cadene/pretrained-models.pytorch"
"utkuozbulak/pytorch-cnn-visualizations" -> "lanpa/tensorboardX"
"utkuozbulak/pytorch-cnn-visualizations" -> "jwyang/faster-rcnn.pytorch"
"utkuozbulak/pytorch-cnn-visualizations" -> "facebookresearch/maskrcnn-benchmark"
"utkuozbulak/pytorch-cnn-visualizations" -> "huggingface/pytorch-image-models"
"utkuozbulak/pytorch-cnn-visualizations" -> "lukemelas/EfficientNet-PyTorch"
"utkuozbulak/pytorch-cnn-visualizations" -> "pytorch/examples"
"utkuozbulak/pytorch-cnn-visualizations" -> "pytorch/vision"
"utkuozbulak/pytorch-cnn-visualizations" -> "aleju/imgaug"
"utkuozbulak/pytorch-cnn-visualizations" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"utkuozbulak/pytorch-cnn-visualizations" -> "mrgloom/awesome-semantic-segmentation"
"utkuozbulak/pytorch-cnn-visualizations" -> "open-mmlab/mmdetection"
"utkuozbulak/pytorch-cnn-visualizations" -> "albumentations-team/albumentations"
"utkuozbulak/pytorch-cnn-visualizations" -> "lucidrains/vit-pytorch"
"osmr/imgclsmob" -> "Cadene/pretrained-models.pytorch"
"osmr/imgclsmob" -> "lukemelas/EfficientNet-PyTorch"
"osmr/imgclsmob" -> "zhanghang1989/ResNeSt"
"osmr/imgclsmob" -> "BloodAxe/pytorch-toolbelt"
"osmr/imgclsmob" -> "rwightman/gen-efficientnet-pytorch"
"osmr/imgclsmob" -> "dmlc/gluon-cv"
"osmr/imgclsmob" -> "facebookresearch/pycls"
"osmr/imgclsmob" -> "xingyizhou/CenterNet"
"osmr/imgclsmob" -> "tensorflow/tpu"
"osmr/imgclsmob" -> "albumentations-team/albumentations"
"osmr/imgclsmob" -> "qubvel/classification_models"
"osmr/imgclsmob" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"osmr/imgclsmob" -> "qubvel-org/segmentation_models.pytorch"
"osmr/imgclsmob" -> "qubvel/efficientnet"
"osmr/imgclsmob" -> "huggingface/pytorch-image-models"
"onnx/models" -> "onnx/tutorials"
"onnx/models" -> "microsoft/onnxruntime"
"onnx/models" -> "onnx/onnx"
"onnx/models" -> "NVIDIA/TensorRT"
"onnx/models" -> "lutzroeder/netron"
"onnx/models" -> "onnx/onnx-tensorrt" ["e"=1]
"onnx/models" -> "apache/tvm"
"onnx/models" -> "daquexian/onnx-simplifier"
"onnx/models" -> "AlexeyAB/darknet"
"onnx/models" -> "Tencent/ncnn"
"onnx/models" -> "openvinotoolkit/open_model_zoo" ["e"=1]
"onnx/models" -> "wang-xinyu/tensorrtx"
"onnx/models" -> "PINTO0309/PINTO_model_zoo"
"onnx/models" -> "dusty-nv/jetson-inference" ["e"=1]
"onnx/models" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"qubvel/classification_models" -> "qubvel/segmentation_models"
"qubvel/classification_models" -> "qubvel/efficientnet"
"qubvel/classification_models" -> "keras-team/keras-applications"
"qubvel/classification_models" -> "bonlime/keras-deeplab-v3-plus" ["e"=1]
"qubvel/classification_models" -> "titu1994/Keras-ResNeXt" ["e"=1]
"qubvel/classification_models" -> "osmr/imgclsmob"
"qubvel/classification_models" -> "selimsef/dsb2018_topcoders"
"qubvel/classification_models" -> "titu1994/keras-squeeze-excite-network" ["e"=1]
"qubvel/classification_models" -> "BloodAxe/pytorch-toolbelt"
"qubvel/classification_models" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"qubvel/classification_models" -> "trent-b/iterative-stratification"
"qubvel/classification_models" -> "kobiso/CBAM-keras" ["e"=1]
"qubvel/classification_models" -> "Cadene/pretrained-models.pytorch"
"qubvel/classification_models" -> "qubvel/tta_wrapper"
"qubvel/classification_models" -> "titu1994/Keras-Classification-Models" ["e"=1]
"google-research/google-research" -> "google-research/bert" ["e"=1]
"google-research/google-research" -> "huggingface/pytorch-image-models"
"google-research/google-research" -> "huggingface/transformers" ["e"=1]
"google-research/google-research" -> "jax-ml/jax"
"google-research/google-research" -> "facebookresearch/faiss" ["e"=1]
"google-research/google-research" -> "Lightning-AI/pytorch-lightning"
"google-research/google-research" -> "google-deepmind/deepmind-research"
"google-research/google-research" -> "facebookresearch/fairseq" ["e"=1]
"google-research/google-research" -> "openai/CLIP"
"google-research/google-research" -> "tensorflow/models" ["e"=1]
"google-research/google-research" -> "deepspeedai/DeepSpeed" ["e"=1]
"google-research/google-research" -> "facebookresearch/detectron2"
"google-research/google-research" -> "microsoft/unilm" ["e"=1]
"google-research/google-research" -> "pytorch/pytorch" ["e"=1]
"google-research/google-research" -> "pytorch/examples"
"GOATmessi8/RFBNet" -> "lzx1413/PytorchSSD"
"GOATmessi8/RFBNet" -> "sfzhang15/RefineDet"
"GOATmessi8/RFBNet" -> "princeton-vl/CornerNet"
"GOATmessi8/RFBNet" -> "VDIGPKU/M2Det"
"GOATmessi8/RFBNet" -> "GOATmessi8/ASFF"
"GOATmessi8/RFBNet" -> "tianzhi0549/FCOS"
"GOATmessi8/RFBNet" -> "zhaoweicai/cascade-rcnn"
"GOATmessi8/RFBNet" -> "amdegroot/ssd.pytorch"
"GOATmessi8/RFBNet" -> "mahyarnajibi/SNIPER"
"GOATmessi8/RFBNet" -> "princeton-vl/CornerNet-Lite"
"GOATmessi8/RFBNet" -> "ShuangXieIrene/ssds.pytorch"
"GOATmessi8/RFBNet" -> "tusen-ai/simpledet"
"GOATmessi8/RFBNet" -> "xingyizhou/ExtremeNet"
"GOATmessi8/RFBNet" -> "Duankaiwen/CenterNet"
"GOATmessi8/RFBNet" -> "zengarden/light_head_rcnn"
"lutzroeder/netron" -> "open-mmlab/mmdetection"
"lutzroeder/netron" -> "onnx/onnx"
"lutzroeder/netron" -> "Tencent/ncnn"
"lutzroeder/netron" -> "huggingface/pytorch-image-models"
"lutzroeder/netron" -> "Lightning-AI/pytorch-lightning"
"lutzroeder/netron" -> "AlexeyAB/darknet"
"lutzroeder/netron" -> "facebookresearch/detectron2"
"lutzroeder/netron" -> "HarisIqbal88/PlotNeuralNet"
"lutzroeder/netron" -> "NVIDIA/TensorRT"
"lutzroeder/netron" -> "aleju/imgaug"
"lutzroeder/netron" -> "ultralytics/yolov5"
"lutzroeder/netron" -> "pytorch/pytorch" ["e"=1]
"lutzroeder/netron" -> "microsoft/onnxruntime"
"lutzroeder/netron" -> "apache/tvm"
"lutzroeder/netron" -> "albumentations-team/albumentations"
"Stinky-Tofu/Stronger-yolo" -> "Tencent/ObjectDetection-OneStageDet"
"Stinky-Tofu/Stronger-yolo" -> "Adamdad/keras-YOLOv3-mobilenet" ["e"=1]
"Stinky-Tofu/Stronger-yolo" -> "talebolano/yolov3-network-slimming" ["e"=1]
"Stinky-Tofu/Stronger-yolo" -> "eric612/MobileNet-YOLO" ["e"=1]
"Stinky-Tofu/Stronger-yolo" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"Stinky-Tofu/Stronger-yolo" -> "wlguan/Stronger-yolo-pytorch"
"Stinky-Tofu/Stronger-yolo" -> "lzx1413/PytorchSSD"
"Stinky-Tofu/Stronger-yolo" -> "BobLiu20/YOLOv3_PyTorch"
"Stinky-Tofu/Stronger-yolo" -> "PengyiZhang/SlimYOLOv3" ["e"=1]
"Stinky-Tofu/Stronger-yolo" -> "fsx950223/mobilenetv2-yolov3" ["e"=1]
"Stinky-Tofu/Stronger-yolo" -> "princeton-vl/CornerNet-Lite"
"Stinky-Tofu/Stronger-yolo" -> "generalized-iou/g-darknet" ["e"=1]
"Stinky-Tofu/Stronger-yolo" -> "ShuangXieIrene/ssds.pytorch"
"Stinky-Tofu/Stronger-yolo" -> "GOATmessi8/ASFF"
"Stinky-Tofu/Stronger-yolo" -> "xingyizhou/ExtremeNet"
"Tencent/ObjectDetection-OneStageDet" -> "Stinky-Tofu/Stronger-yolo"
"Tencent/ObjectDetection-OneStageDet" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"Tencent/ObjectDetection-OneStageDet" -> "princeton-vl/CornerNet"
"Tencent/ObjectDetection-OneStageDet" -> "princeton-vl/CornerNet-Lite"
"Tencent/ObjectDetection-OneStageDet" -> "tusen-ai/simpledet"
"Tencent/ObjectDetection-OneStageDet" -> "Duankaiwen/CenterNet"
"Tencent/ObjectDetection-OneStageDet" -> "ayooshkathuria/pytorch-yolo-v3"
"Tencent/ObjectDetection-OneStageDet" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"Tencent/ObjectDetection-OneStageDet" -> "tianzhi0549/FCOS"
"Tencent/ObjectDetection-OneStageDet" -> "eriklindernoren/PyTorch-YOLOv3"
"Tencent/ObjectDetection-OneStageDet" -> "amusi/awesome-object-detection"
"Tencent/ObjectDetection-OneStageDet" -> "xingyizhou/CenterNet"
"Tencent/ObjectDetection-OneStageDet" -> "amdegroot/ssd.pytorch"
"Tencent/ObjectDetection-OneStageDet" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"Tencent/ObjectDetection-OneStageDet" -> "megvii-model/ShuffleNet-Series"
"princeton-vl/CornerNet-Lite" -> "princeton-vl/CornerNet"
"princeton-vl/CornerNet-Lite" -> "Duankaiwen/CenterNet"
"princeton-vl/CornerNet-Lite" -> "xingyizhou/ExtremeNet"
"princeton-vl/CornerNet-Lite" -> "tianzhi0549/FCOS"
"princeton-vl/CornerNet-Lite" -> "xingyizhou/CenterNet"
"princeton-vl/CornerNet-Lite" -> "tusen-ai/simpledet"
"princeton-vl/CornerNet-Lite" -> "Tencent/ObjectDetection-OneStageDet"
"princeton-vl/CornerNet-Lite" -> "sfzhang15/RefineDet"
"princeton-vl/CornerNet-Lite" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"princeton-vl/CornerNet-Lite" -> "GOATmessi8/RFBNet"
"princeton-vl/CornerNet-Lite" -> "liuwei16/CSP"
"princeton-vl/CornerNet-Lite" -> "VDIGPKU/M2Det"
"princeton-vl/CornerNet-Lite" -> "STVIR/pysot" ["e"=1]
"princeton-vl/CornerNet-Lite" -> "foolwood/SiamMask" ["e"=1]
"princeton-vl/CornerNet-Lite" -> "mahyarnajibi/SNIPER"
"xiaolai-sqlai/mobilenetv3" -> "kuan-wang/pytorch-mobilenet-v3" ["e"=1]
"xiaolai-sqlai/mobilenetv3" -> "d-li14/mobilenetv3.pytorch" ["e"=1]
"xiaolai-sqlai/mobilenetv3" -> "megvii-model/ShuffleNet-Series"
"xiaolai-sqlai/mobilenetv3" -> "tonylins/pytorch-mobilenet-v2" ["e"=1]
"xiaolai-sqlai/mobilenetv3" -> "leaderj1001/MobileNetV3-Pytorch" ["e"=1]
"xiaolai-sqlai/mobilenetv3" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"xiaolai-sqlai/mobilenetv3" -> "d-li14/mobilenetv2.pytorch" ["e"=1]
"xiaolai-sqlai/mobilenetv3" -> "rwightman/gen-efficientnet-pytorch"
"xiaolai-sqlai/mobilenetv3" -> "lukemelas/EfficientNet-PyTorch"
"xiaolai-sqlai/mobilenetv3" -> "huawei-noah/Efficient-AI-Backbones"
"xiaolai-sqlai/mobilenetv3" -> "Tencent/ObjectDetection-OneStageDet"
"xiaolai-sqlai/mobilenetv3" -> "tianzhi0549/FCOS"
"xiaolai-sqlai/mobilenetv3" -> "princeton-vl/CornerNet-Lite"
"xiaolai-sqlai/mobilenetv3" -> "xingyizhou/CenterNet"
"xiaolai-sqlai/mobilenetv3" -> "Zehaos/MobileNet" ["e"=1]
"OlafenwaMoses/ImageAI" -> "HumanSignal/labelImg"
"OlafenwaMoses/ImageAI" -> "ageitgey/face_recognition" ["e"=1]
"OlafenwaMoses/ImageAI" -> "AlexeyAB/darknet"
"OlafenwaMoses/ImageAI" -> "qqwweee/keras-yolo3"
"OlafenwaMoses/ImageAI" -> "matterport/Mask_RCNN"
"OlafenwaMoses/ImageAI" -> "davidsandberg/facenet" ["e"=1]
"OlafenwaMoses/ImageAI" -> "pjreddie/darknet"
"OlafenwaMoses/ImageAI" -> "spmallick/learnopencv"
"OlafenwaMoses/ImageAI" -> "thtrieu/darkflow" ["e"=1]
"OlafenwaMoses/ImageAI" -> "fizyr/keras-retinanet"
"OlafenwaMoses/ImageAI" -> "aleju/imgaug"
"OlafenwaMoses/ImageAI" -> "facebookresearch/Detectron"
"OlafenwaMoses/ImageAI" -> "tensorflow/models" ["e"=1]
"OlafenwaMoses/ImageAI" -> "CMU-Perceptual-Computing-Lab/openpose"
"OlafenwaMoses/ImageAI" -> "hoya012/deep_learning_object_detection"
"waspinator/pycococreator" -> "jsbroks/imantics"
"waspinator/pycococreator" -> "xieenze/PolarMask"
"waspinator/pycococreator" -> "zjhuang22/maskscoring_rcnn"
"waspinator/pycococreator" -> "multimodallearning/pytorch-mask-rcnn"
"waspinator/pycococreator" -> "roytseng-tw/Detectron.pytorch"
"waspinator/pycococreator" -> "chrise96/image-to-coco-json-converter"
"waspinator/pycococreator" -> "aim-uofa/AdelaiDet"
"waspinator/pycococreator" -> "SamsungLabs/adaptis" ["e"=1]
"waspinator/pycococreator" -> "youngwanLEE/CenterMask"
"waspinator/pycococreator" -> "ShuLiu1993/PANet"
"waspinator/pycococreator" -> "jsbroks/coco-annotator"
"waspinator/pycococreator" -> "WXinlong/SOLO"
"waspinator/pycococreator" -> "GothicAi/Instaboost"
"waspinator/pycococreator" -> "ming71/mmdetection-annotated"
"waspinator/pycococreator" -> "cocodataset/cocoapi"
"yhenon/pytorch-retinanet" -> "kuangliu/pytorch-retinanet"
"yhenon/pytorch-retinanet" -> "tianzhi0549/FCOS"
"yhenon/pytorch-retinanet" -> "amdegroot/ssd.pytorch"
"yhenon/pytorch-retinanet" -> "xingyizhou/CenterNet"
"yhenon/pytorch-retinanet" -> "princeton-vl/CornerNet"
"yhenon/pytorch-retinanet" -> "jwyang/faster-rcnn.pytorch"
"yhenon/pytorch-retinanet" -> "sfzhang15/ATSS"
"yhenon/pytorch-retinanet" -> "toandaominh1997/EfficientDet.Pytorch"
"yhenon/pytorch-retinanet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"yhenon/pytorch-retinanet" -> "eriklindernoren/PyTorch-YOLOv3"
"yhenon/pytorch-retinanet" -> "lufficc/SSD"
"yhenon/pytorch-retinanet" -> "facebookresearch/maskrcnn-benchmark"
"yhenon/pytorch-retinanet" -> "tusen-ai/simpledet"
"yhenon/pytorch-retinanet" -> "Duankaiwen/CenterNet"
"yhenon/pytorch-retinanet" -> "jwyang/fpn.pytorch"
"open-mmlab/mmdetection" -> "facebookresearch/detectron2"
"open-mmlab/mmdetection" -> "huggingface/pytorch-image-models"
"open-mmlab/mmdetection" -> "facebookresearch/detr"
"open-mmlab/mmdetection" -> "facebookresearch/maskrcnn-benchmark"
"open-mmlab/mmdetection" -> "ultralytics/yolov5"
"open-mmlab/mmdetection" -> "hoya012/deep_learning_object_detection"
"open-mmlab/mmdetection" -> "microsoft/Swin-Transformer"
"open-mmlab/mmdetection" -> "AlexeyAB/darknet"
"open-mmlab/mmdetection" -> "xingyizhou/CenterNet"
"open-mmlab/mmdetection" -> "open-mmlab/mmsegmentation"
"open-mmlab/mmdetection" -> "facebookresearch/Detectron"
"open-mmlab/mmdetection" -> "amusi/CVPR2025-Papers-with-Code"
"open-mmlab/mmdetection" -> "open-mmlab/mmcv"
"open-mmlab/mmdetection" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"open-mmlab/mmdetection" -> "jwyang/faster-rcnn.pytorch"
"huggingface/pytorch-image-models" -> "lucidrains/vit-pytorch"
"huggingface/pytorch-image-models" -> "open-mmlab/mmdetection"
"huggingface/pytorch-image-models" -> "microsoft/Swin-Transformer"
"huggingface/pytorch-image-models" -> "facebookresearch/detectron2"
"huggingface/pytorch-image-models" -> "albumentations-team/albumentations"
"huggingface/pytorch-image-models" -> "facebookresearch/detr"
"huggingface/pytorch-image-models" -> "openai/CLIP"
"huggingface/pytorch-image-models" -> "google-research/vision_transformer"
"huggingface/pytorch-image-models" -> "qubvel-org/segmentation_models.pytorch"
"huggingface/pytorch-image-models" -> "jacobgil/pytorch-grad-cam"
"huggingface/pytorch-image-models" -> "Lightning-AI/pytorch-lightning"
"huggingface/pytorch-image-models" -> "facebookresearch/segment-anything"
"huggingface/pytorch-image-models" -> "lukemelas/EfficientNet-PyTorch"
"huggingface/pytorch-image-models" -> "amusi/CVPR2025-Papers-with-Code"
"huggingface/pytorch-image-models" -> "pytorch/vision"
"qubvel-org/segmentation_models.pytorch" -> "open-mmlab/mmsegmentation"
"qubvel-org/segmentation_models.pytorch" -> "albumentations-team/albumentations"
"qubvel-org/segmentation_models.pytorch" -> "huggingface/pytorch-image-models"
"qubvel-org/segmentation_models.pytorch" -> "qubvel/segmentation_models"
"qubvel-org/segmentation_models.pytorch" -> "JunMa11/SegLossOdyssey" ["e"=1]
"qubvel-org/segmentation_models.pytorch" -> "mrgloom/awesome-semantic-segmentation"
"qubvel-org/segmentation_models.pytorch" -> "MIC-DKFZ/nnUNet" ["e"=1]
"qubvel-org/segmentation_models.pytorch" -> "lukemelas/EfficientNet-PyTorch"
"qubvel-org/segmentation_models.pytorch" -> "Cadene/pretrained-models.pytorch"
"qubvel-org/segmentation_models.pytorch" -> "jacobgil/pytorch-grad-cam"
"qubvel-org/segmentation_models.pytorch" -> "milesial/Pytorch-UNet"
"qubvel-org/segmentation_models.pytorch" -> "lucidrains/vit-pytorch"
"qubvel-org/segmentation_models.pytorch" -> "open-mmlab/mmdetection"
"qubvel-org/segmentation_models.pytorch" -> "facebookresearch/detectron2"
"qubvel-org/segmentation_models.pytorch" -> "Beckschen/TransUNet" ["e"=1]
"NVIDIA/TensorRT" -> "onnx/onnx-tensorrt" ["e"=1]
"NVIDIA/TensorRT" -> "wang-xinyu/tensorrtx"
"NVIDIA/TensorRT" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"NVIDIA/TensorRT" -> "triton-inference-server/server" ["e"=1]
"NVIDIA/TensorRT" -> "NVIDIA/TensorRT-LLM" ["e"=1]
"NVIDIA/TensorRT" -> "apache/tvm"
"NVIDIA/TensorRT" -> "NVIDIA/FasterTransformer" ["e"=1]
"NVIDIA/TensorRT" -> "Tencent/ncnn"
"NVIDIA/TensorRT" -> "microsoft/onnxruntime"
"NVIDIA/TensorRT" -> "pytorch/TensorRT" ["e"=1]
"NVIDIA/TensorRT" -> "daquexian/onnx-simplifier"
"NVIDIA/TensorRT" -> "onnx/onnx"
"NVIDIA/TensorRT" -> "triton-lang/triton" ["e"=1]
"NVIDIA/TensorRT" -> "NVIDIA/cutlass" ["e"=1]
"NVIDIA/TensorRT" -> "alibaba/MNN"
"arogozhnikov/einops" -> "google/flax" ["e"=1]
"arogozhnikov/einops" -> "Lightning-AI/pytorch-lightning"
"arogozhnikov/einops" -> "kornia/kornia"
"arogozhnikov/einops" -> "jax-ml/jax"
"arogozhnikov/einops" -> "lucidrains/vit-pytorch"
"arogozhnikov/einops" -> "facebookresearch/hydra"
"arogozhnikov/einops" -> "huggingface/accelerate" ["e"=1]
"arogozhnikov/einops" -> "huggingface/pytorch-image-models"
"arogozhnikov/einops" -> "triton-lang/triton" ["e"=1]
"arogozhnikov/einops" -> "lucidrains/x-transformers" ["e"=1]
"arogozhnikov/einops" -> "albumentations-team/albumentations"
"arogozhnikov/einops" -> "facebookresearch/xformers" ["e"=1]
"arogozhnikov/einops" -> "NVIDIA/apex"
"arogozhnikov/einops" -> "KevinMusgrave/pytorch-metric-learning"
"arogozhnikov/einops" -> "ashleve/lightning-hydra-template"
"Erkaman/poisson_blend" -> "owenzlz/DeepImageBlending" ["e"=1]
"Erkaman/poisson_blend" -> "cheind/poisson-image-editing"
"matterport/Mask_RCNN" -> "facebookresearch/Detectron"
"matterport/Mask_RCNN" -> "facebookresearch/detectron2"
"matterport/Mask_RCNN" -> "facebookresearch/maskrcnn-benchmark"
"matterport/Mask_RCNN" -> "tensorflow/models" ["e"=1]
"matterport/Mask_RCNN" -> "open-mmlab/mmdetection"
"matterport/Mask_RCNN" -> "aleju/imgaug"
"matterport/Mask_RCNN" -> "AlexeyAB/darknet"
"matterport/Mask_RCNN" -> "HumanSignal/labelImg"
"matterport/Mask_RCNN" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"matterport/Mask_RCNN" -> "pjreddie/darknet"
"matterport/Mask_RCNN" -> "wkentaro/labelme"
"matterport/Mask_RCNN" -> "mrgloom/awesome-semantic-segmentation"
"matterport/Mask_RCNN" -> "hoya012/deep_learning_object_detection"
"matterport/Mask_RCNN" -> "qqwweee/keras-yolo3"
"matterport/Mask_RCNN" -> "jwyang/faster-rcnn.pytorch"
"microsoft/onnxruntime" -> "onnx/onnx"
"microsoft/onnxruntime" -> "NVIDIA/TensorRT"
"microsoft/onnxruntime" -> "apache/tvm"
"microsoft/onnxruntime" -> "lutzroeder/netron"
"microsoft/onnxruntime" -> "Tencent/ncnn"
"microsoft/onnxruntime" -> "daquexian/onnx-simplifier"
"microsoft/onnxruntime" -> "onnx/models"
"microsoft/onnxruntime" -> "triton-inference-server/server" ["e"=1]
"microsoft/onnxruntime" -> "triton-lang/triton" ["e"=1]
"microsoft/onnxruntime" -> "deepspeedai/DeepSpeed" ["e"=1]
"microsoft/onnxruntime" -> "alibaba/MNN"
"microsoft/onnxruntime" -> "onnx/onnx-tensorrt" ["e"=1]
"microsoft/onnxruntime" -> "Dao-AILab/flash-attention" ["e"=1]
"microsoft/onnxruntime" -> "openvinotoolkit/openvino" ["e"=1]
"microsoft/onnxruntime" -> "NVIDIA/FasterTransformer" ["e"=1]
"cvat-ai/cvat" -> "wkentaro/labelme"
"cvat-ai/cvat" -> "HumanSignal/label-studio"
"cvat-ai/cvat" -> "HumanSignal/labelImg"
"cvat-ai/cvat" -> "microsoft/VoTT"
"cvat-ai/cvat" -> "albumentations-team/albumentations"
"cvat-ai/cvat" -> "facebookresearch/detectron2"
"cvat-ai/cvat" -> "open-mmlab/mmdetection"
"cvat-ai/cvat" -> "aleju/imgaug"
"cvat-ai/cvat" -> "AlexeyAB/darknet"
"cvat-ai/cvat" -> "Megvii-BaseDetection/YOLOX"
"cvat-ai/cvat" -> "WongKinYiu/yolov7"
"cvat-ai/cvat" -> "huggingface/pytorch-image-models"
"cvat-ai/cvat" -> "xingyizhou/CenterNet"
"cvat-ai/cvat" -> "lutzroeder/netron"
"cvat-ai/cvat" -> "kornia/kornia"
"HumanSignal/awesome-data-labeling" -> "HumanSignal/label-studio"
"HumanSignal/awesome-data-labeling" -> "cvat-ai/cvat"
"HumanSignal/awesome-data-labeling" -> "jsbroks/awesome-dataset-tools"
"HumanSignal/awesome-data-labeling" -> "SkalskiP/make-sense"
"HumanSignal/awesome-data-labeling" -> "microsoft/VoTT"
"HumanSignal/awesome-data-labeling" -> "UniversalDataTool/universal-data-tool"
"HumanSignal/awesome-data-labeling" -> "kelvins/awesome-mlops" ["e"=1]
"HumanSignal/awesome-data-labeling" -> "taivop/awesome-data-annotation"
"HumanSignal/awesome-data-labeling" -> "jsbroks/coco-annotator"
"HumanSignal/awesome-data-labeling" -> "Hitachi-Automotive-And-Industry-Lab/semantic-segmentation-editor" ["e"=1]
"HumanSignal/awesome-data-labeling" -> "abreheret/PixelAnnotationTool"
"HumanSignal/awesome-data-labeling" -> "snorkel-team/snorkel" ["e"=1]
"HumanSignal/awesome-data-labeling" -> "wkentaro/labelme"
"HumanSignal/awesome-data-labeling" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"HumanSignal/awesome-data-labeling" -> "doccano/doccano" ["e"=1]
"facebookresearch/hydra" -> "omry/omegaconf"
"facebookresearch/hydra" -> "ashleve/lightning-hydra-template"
"facebookresearch/hydra" -> "Lightning-AI/pytorch-lightning"
"facebookresearch/hydra" -> "arogozhnikov/einops"
"facebookresearch/hydra" -> "iterative/dvc" ["e"=1]
"facebookresearch/hydra" -> "optuna/optuna" ["e"=1]
"facebookresearch/hydra" -> "mlflow/mlflow" ["e"=1]
"facebookresearch/hydra" -> "jax-ml/jax"
"facebookresearch/hydra" -> "google/flax" ["e"=1]
"facebookresearch/hydra" -> "facebookresearch/pytorch3d" ["e"=1]
"facebookresearch/hydra" -> "kornia/kornia"
"facebookresearch/hydra" -> "huggingface/accelerate" ["e"=1]
"facebookresearch/hydra" -> "ray-project/ray"
"facebookresearch/hydra" -> "fastapi/typer" ["e"=1]
"facebookresearch/hydra" -> "aimhubio/aim" ["e"=1]
"vietnh1009/QuickDraw" -> "vietnh1009/Yolo-v2-pytorch"
"vietnh1009/QuickDraw" -> "anuragreddygv323/computer-vision-projects"
"vietnh1009/QuickDraw" -> "akshaybahadur21/QuickDraw"
"vietnh1009/QuickDraw" -> "vietnh1009/Super-mario-bros-A3C-pytorch" ["e"=1]
"vietnh1009/QuickDraw" -> "victordibia/handtrack.js" ["e"=1]
"vietnh1009/QuickDraw" -> "ByronHsu/Never-Blink" ["e"=1]
"vietnh1009/QuickDraw" -> "uvipen/Character-level-cnn-tensorflow"
"vietnh1009/QuickDraw" -> "vietnh1009/Very-deep-cnn-pytorch"
"vietnh1009/QuickDraw" -> "vietnh1009/Deeplab-pytorch"
"vietnh1009/QuickDraw" -> "vietnh1009/Character-level-cnn-pytorch"
"vietnh1009/QuickDraw" -> "akshaybhatia10/ComputerVision-Projects"
"vietnh1009/QuickDraw" -> "Bennington-Distributed-Systems-2017/DarkDarkGo" ["e"=1]
"vietnh1009/QuickDraw" -> "vietnh1009/AirGesture"
"vietnh1009/QuickDraw" -> "my8100/files" ["e"=1]
"microsoft/MMdnn" -> "ysh329/deep-learning-model-convertor" ["e"=1]
"microsoft/MMdnn" -> "Cadene/pretrained-models.pytorch"
"microsoft/MMdnn" -> "weiliu89/caffe" ["e"=1]
"microsoft/MMdnn" -> "IntelLabs/distiller" ["e"=1]
"microsoft/MMdnn" -> "Tencent/ncnn"
"microsoft/MMdnn" -> "apache/tvm"
"microsoft/MMdnn" -> "alibaba/MNN"
"microsoft/MMdnn" -> "facebookresearch/maskrcnn-benchmark"
"microsoft/MMdnn" -> "ethereon/caffe-tensorflow" ["e"=1]
"microsoft/MMdnn" -> "aleju/imgaug"
"microsoft/MMdnn" -> "lutzroeder/netron"
"microsoft/MMdnn" -> "Tencent/PocketFlow" ["e"=1]
"microsoft/MMdnn" -> "tensorpack/tensorpack" ["e"=1]
"microsoft/MMdnn" -> "xingyizhou/CenterNet"
"microsoft/MMdnn" -> "lukemelas/EfficientNet-PyTorch"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "amusi/ECCV2024-Papers-with-Code"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "amusi/ICCV2023-Papers-with-Code"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "52CV/CVPR-2021-Papers"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "amusi/daily-paper-computer-vision"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "amusi/CVPR2025-Papers-with-Code"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "Sophia-11/Awesome-ICCV"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "tianzhi0549/FCOS"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "dk-liang/Awesome-Visual-Transformer"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "junfu1115/DANet" ["e"=1]
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "amusi/awesome-object-detection"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "aim-uofa/AdelaiDet"
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" -> "speedinghzl/CCNet" ["e"=1]
"hoya012/CVPR-2019-Paper-Statistics" -> "shaohua0116/ICLR2019-OpenReviewData"
"hoya012/CVPR-2019-Paper-Statistics" -> "hoya012/ICCV-2019-Paper-Statistics"
"hoya012/CVPR-2019-Paper-Statistics" -> "xiaolonw/TimeCycle" ["e"=1]
"hoya012/CVPR-2019-Paper-Statistics" -> "Sophia-11/Awesome-ICCV"
"hoya012/CVPR-2019-Paper-Statistics" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"dbolya/yolact" -> "aim-uofa/AdelaiDet"
"dbolya/yolact" -> "WXinlong/SOLO"
"dbolya/yolact" -> "xingyizhou/CenterNet"
"dbolya/yolact" -> "zjhuang22/maskscoring_rcnn"
"dbolya/yolact" -> "tianzhi0549/FCOS"
"dbolya/yolact" -> "facebookresearch/maskrcnn-benchmark"
"dbolya/yolact" -> "WisconsinAIVision/yolact_edge"
"dbolya/yolact" -> "foolwood/SiamMask" ["e"=1]
"dbolya/yolact" -> "tusen-ai/simpledet"
"dbolya/yolact" -> "lukemelas/EfficientNet-PyTorch"
"dbolya/yolact" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"dbolya/yolact" -> "mrgloom/awesome-semantic-segmentation"
"dbolya/yolact" -> "ultralytics/yolov3"
"dbolya/yolact" -> "princeton-vl/CornerNet-Lite"
"dbolya/yolact" -> "Duankaiwen/CenterNet"
"alibaba/MNN" -> "Tencent/ncnn"
"alibaba/MNN" -> "Tencent/TNN"
"alibaba/MNN" -> "XiaoMi/mace" ["e"=1]
"alibaba/MNN" -> "apache/tvm"
"alibaba/MNN" -> "OAID/Tengine" ["e"=1]
"alibaba/MNN" -> "daquexian/onnx-simplifier"
"alibaba/MNN" -> "NVIDIA/TensorRT"
"alibaba/MNN" -> "PaddlePaddle/Paddle-Lite"
"alibaba/MNN" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"alibaba/MNN" -> "RangiLyu/nanodet"
"alibaba/MNN" -> "ShiqiYu/libfacedetection" ["e"=1]
"alibaba/MNN" -> "IntelLabs/distiller" ["e"=1]
"alibaba/MNN" -> "xingyizhou/CenterNet"
"alibaba/MNN" -> "onnx/onnx"
"alibaba/MNN" -> "Tencent/PocketFlow" ["e"=1]
"Swall0w/torchstat" -> "Lyken17/pytorch-OpCounter"
"Swall0w/torchstat" -> "sovrasov/flops-counter.pytorch"
"Swall0w/torchstat" -> "megvii-model/ShuffleNet-Series"
"Swall0w/torchstat" -> "JiahuiYu/slimmable_networks" ["e"=1]
"Swall0w/torchstat" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"Swall0w/torchstat" -> "sksq96/pytorch-summary"
"Swall0w/torchstat" -> "yu-changqian/TorchSeg" ["e"=1]
"Swall0w/torchstat" -> "666DZY666/micronet" ["e"=1]
"Swall0w/torchstat" -> "facebookresearch/fvcore"
"Swall0w/torchstat" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"Swall0w/torchstat" -> "Oldpan/Pytorch-Memory-Utils"
"Swall0w/torchstat" -> "IntelLabs/distiller" ["e"=1]
"Swall0w/torchstat" -> "roytseng-tw/Detectron.pytorch"
"Swall0w/torchstat" -> "Duankaiwen/CenterNet"
"Swall0w/torchstat" -> "open-mmlab/mmaction" ["e"=1]
"facebookresearch/maskrcnn-benchmark" -> "jwyang/faster-rcnn.pytorch"
"facebookresearch/maskrcnn-benchmark" -> "facebookresearch/detectron2"
"facebookresearch/maskrcnn-benchmark" -> "open-mmlab/mmdetection"
"facebookresearch/maskrcnn-benchmark" -> "roytseng-tw/Detectron.pytorch"
"facebookresearch/maskrcnn-benchmark" -> "xingyizhou/CenterNet"
"facebookresearch/maskrcnn-benchmark" -> "facebookresearch/Detectron"
"facebookresearch/maskrcnn-benchmark" -> "Cadene/pretrained-models.pytorch"
"facebookresearch/maskrcnn-benchmark" -> "tianzhi0549/FCOS"
"facebookresearch/maskrcnn-benchmark" -> "eriklindernoren/PyTorch-YOLOv3"
"facebookresearch/maskrcnn-benchmark" -> "amdegroot/ssd.pytorch"
"facebookresearch/maskrcnn-benchmark" -> "multimodallearning/pytorch-mask-rcnn"
"facebookresearch/maskrcnn-benchmark" -> "matterport/Mask_RCNN"
"facebookresearch/maskrcnn-benchmark" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"facebookresearch/maskrcnn-benchmark" -> "hoya012/deep_learning_object_detection"
"facebookresearch/maskrcnn-benchmark" -> "amusi/awesome-object-detection"
"facebookresearch/mixup-cifar10" -> "clovaai/CutMix-PyTorch"
"facebookresearch/mixup-cifar10" -> "hongyi-zhang/mixup"
"facebookresearch/mixup-cifar10" -> "uoguelph-mlrg/Cutout"
"facebookresearch/mixup-cifar10" -> "vikasverma1077/manifold_mixup"
"facebookresearch/mixup-cifar10" -> "DeepVoltaire/AutoAugment"
"facebookresearch/mixup-cifar10" -> "google-research/mixmatch"
"facebookresearch/mixup-cifar10" -> "CuriousAI/mean-teacher"
"facebookresearch/mixup-cifar10" -> "YU1ut/MixMatch-pytorch"
"facebookresearch/mixup-cifar10" -> "kakaobrain/fast-autoaugment"
"facebookresearch/mixup-cifar10" -> "ildoonet/pytorch-randaugment"
"facebookresearch/mixup-cifar10" -> "zhunzhong07/Random-Erasing" ["e"=1]
"facebookresearch/mixup-cifar10" -> "LiJunnan1992/DivideMix"
"facebookresearch/mixup-cifar10" -> "tengshaofeng/ResidualAttentionNetwork-pytorch" ["e"=1]
"facebookresearch/mixup-cifar10" -> "google-research/fixmatch"
"facebookresearch/mixup-cifar10" -> "google-research/augmix"
"fizyr/keras-retinanet" -> "qqwweee/keras-yolo3"
"fizyr/keras-retinanet" -> "matterport/Mask_RCNN"
"fizyr/keras-retinanet" -> "endernewton/tf-faster-rcnn" ["e"=1]
"fizyr/keras-retinanet" -> "yhenon/pytorch-retinanet"
"fizyr/keras-retinanet" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"fizyr/keras-retinanet" -> "yhenon/keras-frcnn" ["e"=1]
"fizyr/keras-retinanet" -> "aleju/imgaug"
"fizyr/keras-retinanet" -> "balancap/SSD-Tensorflow" ["e"=1]
"fizyr/keras-retinanet" -> "facebookresearch/Detectron"
"fizyr/keras-retinanet" -> "amusi/awesome-object-detection"
"fizyr/keras-retinanet" -> "xingyizhou/CenterNet"
"fizyr/keras-retinanet" -> "pierluigiferrari/ssd_keras" ["e"=1]
"fizyr/keras-retinanet" -> "hoya012/deep_learning_object_detection"
"fizyr/keras-retinanet" -> "fchollet/deep-learning-models" ["e"=1]
"fizyr/keras-retinanet" -> "facebookresearch/maskrcnn-benchmark"
"Duankaiwen/CenterNet" -> "princeton-vl/CornerNet"
"Duankaiwen/CenterNet" -> "princeton-vl/CornerNet-Lite"
"Duankaiwen/CenterNet" -> "xingyizhou/CenterNet"
"Duankaiwen/CenterNet" -> "tianzhi0549/FCOS"
"Duankaiwen/CenterNet" -> "xingyizhou/ExtremeNet"
"Duankaiwen/CenterNet" -> "tusen-ai/simpledet"
"Duankaiwen/CenterNet" -> "VDIGPKU/M2Det"
"Duankaiwen/CenterNet" -> "zjhuang22/maskscoring_rcnn"
"Duankaiwen/CenterNet" -> "Tencent/ObjectDetection-OneStageDet"
"Duankaiwen/CenterNet" -> "sfzhang15/RefineDet"
"Duankaiwen/CenterNet" -> "sfzhang15/ATSS"
"Duankaiwen/CenterNet" -> "GOATmessi8/RFBNet"
"Duankaiwen/CenterNet" -> "ethanhe42/KL-Loss"
"Duankaiwen/CenterNet" -> "zhaoweicai/cascade-rcnn"
"Duankaiwen/CenterNet" -> "zhangxiaosong18/FreeAnchor"
"SunShiFu/storm_car_analysis" -> "jasonclub/SmartCityBackgroundSystem"
"onnx/tensorflow-onnx" -> "onnx/onnx-tensorflow"
"onnx/tensorflow-onnx" -> "daquexian/onnx-simplifier"
"onnx/tensorflow-onnx" -> "onnx/onnx-tensorrt" ["e"=1]
"onnx/tensorflow-onnx" -> "onnx/tutorials"
"onnx/tensorflow-onnx" -> "onnx/onnxmltools" ["e"=1]
"onnx/tensorflow-onnx" -> "onnx/keras-onnx" ["e"=1]
"onnx/tensorflow-onnx" -> "microsoft/onnxruntime"
"onnx/tensorflow-onnx" -> "NVIDIA/TensorRT"
"onnx/tensorflow-onnx" -> "tensorflow/tensorrt" ["e"=1]
"onnx/tensorflow-onnx" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"onnx/tensorflow-onnx" -> "ZhangGe6/onnx-modifier" ["e"=1]
"onnx/tensorflow-onnx" -> "onnx/onnx"
"onnx/tensorflow-onnx" -> "Tencent/TNN"
"onnx/tensorflow-onnx" -> "wang-xinyu/tensorrtx"
"onnx/tensorflow-onnx" -> "onnx/optimizer" ["e"=1]
"chenyuntc/simple-faster-rcnn-pytorch" -> "jwyang/faster-rcnn.pytorch"
"chenyuntc/simple-faster-rcnn-pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"chenyuntc/simple-faster-rcnn-pytorch" -> "amdegroot/ssd.pytorch"
"chenyuntc/simple-faster-rcnn-pytorch" -> "longcw/faster_rcnn_pytorch"
"chenyuntc/simple-faster-rcnn-pytorch" -> "eriklindernoren/PyTorch-YOLOv3"
"chenyuntc/simple-faster-rcnn-pytorch" -> "facebookresearch/maskrcnn-benchmark"
"chenyuntc/simple-faster-rcnn-pytorch" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"chenyuntc/simple-faster-rcnn-pytorch" -> "amusi/awesome-object-detection"
"chenyuntc/simple-faster-rcnn-pytorch" -> "hoya012/deep_learning_object_detection"
"chenyuntc/simple-faster-rcnn-pytorch" -> "endernewton/tf-faster-rcnn" ["e"=1]
"chenyuntc/simple-faster-rcnn-pytorch" -> "Cadene/pretrained-models.pytorch"
"chenyuntc/simple-faster-rcnn-pytorch" -> "xingyizhou/CenterNet"
"chenyuntc/simple-faster-rcnn-pytorch" -> "roytseng-tw/Detectron.pytorch"
"chenyuntc/simple-faster-rcnn-pytorch" -> "tianzhi0549/FCOS"
"chenyuntc/simple-faster-rcnn-pytorch" -> "open-mmlab/mmdetection"
"amusi/daily-paper-computer-vision" -> "amusi/CVPR2025-Papers-with-Code"
"amusi/daily-paper-computer-vision" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"amusi/daily-paper-computer-vision" -> "amusi/awesome-object-detection"
"amusi/daily-paper-computer-vision" -> "amusi/Deep-Learning-Interview-Book" ["e"=1]
"amusi/daily-paper-computer-vision" -> "hoya012/deep_learning_object_detection"
"amusi/daily-paper-computer-vision" -> "mrgloom/awesome-semantic-segmentation"
"amusi/daily-paper-computer-vision" -> "amusi/AI-Job-Notes" ["e"=1]
"amusi/daily-paper-computer-vision" -> "amusi/ECCV2024-Papers-with-Code"
"amusi/daily-paper-computer-vision" -> "facebookresearch/maskrcnn-benchmark"
"amusi/daily-paper-computer-vision" -> "jwyang/faster-rcnn.pytorch"
"amusi/daily-paper-computer-vision" -> "SnailTyan/deep-learning-papers-translation"
"amusi/daily-paper-computer-vision" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"amusi/daily-paper-computer-vision" -> "open-mmlab/mmdetection"
"amusi/daily-paper-computer-vision" -> "Cadene/pretrained-models.pytorch"
"amusi/daily-paper-computer-vision" -> "foolwood/benchmark_results" ["e"=1]
"spytensor/prepare_detection_dataset" -> "ming71/mmdetection-annotated"
"spytensor/prepare_detection_dataset" -> "ming71/toolbox" ["e"=1]
"spytensor/prepare_detection_dataset" -> "hhaAndroid/mmdetection-mini"
"spytensor/prepare_detection_dataset" -> "tianzhi0549/FCOS"
"spytensor/prepare_detection_dataset" -> "tusen-ai/simpledet"
"spytensor/prepare_detection_dataset" -> "aim-uofa/AdelaiDet"
"spytensor/prepare_detection_dataset" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"spytensor/prepare_detection_dataset" -> "dingjiansw101/AerialDetection" ["e"=1]
"spytensor/prepare_detection_dataset" -> "ruoqianguo/cascade-rcnn_Pytorch"
"spytensor/prepare_detection_dataset" -> "yhenon/pytorch-retinanet"
"spytensor/prepare_detection_dataset" -> "VDIGPKU/M2Det"
"spytensor/prepare_detection_dataset" -> "xingyizhou/CenterNet"
"spytensor/prepare_detection_dataset" -> "SJTU-Thinklab-Det/DOTA-DOAI" ["e"=1]
"spytensor/prepare_detection_dataset" -> "Duankaiwen/CenterNet"
"spytensor/prepare_detection_dataset" -> "zjhuang22/maskscoring_rcnn"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/models"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleOCR"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleGAN"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleHub" -> "ymcui/Chinese-BERT-wwm" ["e"=1]
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/ERNIE" ["e"=1]
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleSpeech" ["e"=1]
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/PaddleHub" -> "DayBreak-u/chineseocr_lite" ["e"=1]
"PaddlePaddle/PaddleHub" -> "babysor/MockingBird" ["e"=1]
"albumentations-team/albumentations" -> "aleju/imgaug"
"albumentations-team/albumentations" -> "huggingface/pytorch-image-models"
"albumentations-team/albumentations" -> "qubvel-org/segmentation_models.pytorch"
"albumentations-team/albumentations" -> "open-mmlab/mmdetection"
"albumentations-team/albumentations" -> "lukemelas/EfficientNet-PyTorch"
"albumentations-team/albumentations" -> "Cadene/pretrained-models.pytorch"
"albumentations-team/albumentations" -> "facebookresearch/detectron2"
"albumentations-team/albumentations" -> "kornia/kornia"
"albumentations-team/albumentations" -> "Lightning-AI/pytorch-lightning"
"albumentations-team/albumentations" -> "facebookresearch/detr"
"albumentations-team/albumentations" -> "mrgloom/awesome-semantic-segmentation"
"albumentations-team/albumentations" -> "jacobgil/pytorch-grad-cam"
"albumentations-team/albumentations" -> "qubvel/segmentation_models"
"albumentations-team/albumentations" -> "lucidrains/vit-pytorch"
"albumentations-team/albumentations" -> "pytorch/vision"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "sgrvinod/Deep-Tutorials-for-PyTorch" ["e"=1]
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "amdegroot/ssd.pytorch"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "rafaelpadilla/Object-Detection-Metrics"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "jwyang/faster-rcnn.pytorch"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "eriklindernoren/PyTorch-YOLOv3"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "ayooshkathuria/pytorch-yolo-v3"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "qfgaohao/pytorch-ssd"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "lufficc/SSD"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "Cadene/pretrained-models.pytorch"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "xingyizhou/CenterNet"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "tianzhi0549/FCOS"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "hoya012/deep_learning_object_detection"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "yhenon/pytorch-retinanet"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "lukemelas/EfficientNet-PyTorch"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "sgrvinod/a-PyTorch-Tutorial-to-Image-Captioning" ["e"=1]
"lukemelas/EfficientNet-PyTorch" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"lukemelas/EfficientNet-PyTorch" -> "Cadene/pretrained-models.pytorch"
"lukemelas/EfficientNet-PyTorch" -> "tensorflow/tpu"
"lukemelas/EfficientNet-PyTorch" -> "xingyizhou/CenterNet"
"lukemelas/EfficientNet-PyTorch" -> "huggingface/pytorch-image-models"
"lukemelas/EfficientNet-PyTorch" -> "zhanghang1989/ResNeSt"
"lukemelas/EfficientNet-PyTorch" -> "albumentations-team/albumentations"
"lukemelas/EfficientNet-PyTorch" -> "open-mmlab/mmdetection"
"lukemelas/EfficientNet-PyTorch" -> "facebookresearch/maskrcnn-benchmark"
"lukemelas/EfficientNet-PyTorch" -> "google/automl"
"lukemelas/EfficientNet-PyTorch" -> "jwyang/faster-rcnn.pytorch"
"lukemelas/EfficientNet-PyTorch" -> "NVIDIA/apex"
"lukemelas/EfficientNet-PyTorch" -> "aleju/imgaug"
"lukemelas/EfficientNet-PyTorch" -> "qubvel-org/segmentation_models.pytorch"
"lukemelas/EfficientNet-PyTorch" -> "ultralytics/yolov3"
"ufoym/deepo" -> "floydhub/dl-docker" ["e"=1]
"ufoym/deepo" -> "NVIDIA/nvidia-docker"
"ufoym/deepo" -> "vahidk/EffectiveTensorflow" ["e"=1]
"ufoym/deepo" -> "RedditSota/state-of-the-art-result-for-machine-learning-problems" ["e"=1]
"ufoym/deepo" -> "horovod/horovod" ["e"=1]
"ufoym/deepo" -> "aleju/imgaug"
"ufoym/deepo" -> "lanpa/tensorboardX"
"ufoym/deepo" -> "Cadene/pretrained-models.pytorch"
"ufoym/deepo" -> "PAIR-code/facets" ["e"=1]
"ufoym/deepo" -> "facebookresearch/maskrcnn-benchmark"
"ufoym/deepo" -> "facebookarchive/caffe2" ["e"=1]
"ufoym/deepo" -> "kailashahirwar/cheatsheets-ai" ["e"=1]
"ufoym/deepo" -> "facebookresearch/Detectron"
"ufoym/deepo" -> "fossasia/visdom"
"ufoym/deepo" -> "mdbloice/Augmentor"
"longpeng2008/yousan.ai" -> "QianyanTech/Image-Downloader" ["e"=1]
"longpeng2008/yousan.ai" -> "amusi/awesome-object-detection"
"longpeng2008/yousan.ai" -> "donnyyou/torchcv"
"longpeng2008/yousan.ai" -> "ming71/CV_PaperDaily"
"longpeng2008/yousan.ai" -> "ChanChiChoi/awesome-Face_Recognition" ["e"=1]
"longpeng2008/yousan.ai" -> "dongdonghy/Detection-PyTorch-Notebook"
"longpeng2008/yousan.ai" -> "longpeng2008/Awesome_DNN_Researchers"
"longpeng2008/yousan.ai" -> "longpeng2008/LongPeng_ML_Course"
"longpeng2008/yousan.ai" -> "weiaicunzai/awesome-image-classification"
"longpeng2008/yousan.ai" -> "xavier-zy/Awesome-pytorch-list-CNVersion" ["e"=1]
"longpeng2008/yousan.ai" -> "pprp/SimpleCVReproduction"
"longpeng2008/yousan.ai" -> "snowkylin/tensorflow-handbook" ["e"=1]
"longpeng2008/yousan.ai" -> "Captain1986/CaptainBlackboard"
"longpeng2008/yousan.ai" -> "gzr2017/ImageProcessing100Wen"
"longpeng2008/yousan.ai" -> "polarisZhao/awesome-face" ["e"=1]
"microsoft/computervision-recipes" -> "jbhuang0604/awesome-computer-vision" ["e"=1]
"microsoft/computervision-recipes" -> "microsoft/nlp-recipes" ["e"=1]
"microsoft/computervision-recipes" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"microsoft/computervision-recipes" -> "facebookresearch/detectron2"
"microsoft/computervision-recipes" -> "rasbt/deeplearning-models" ["e"=1]
"microsoft/computervision-recipes" -> "kjw0612/awesome-deep-vision" ["e"=1]
"microsoft/computervision-recipes" -> "kmario23/deep-learning-drizzle" ["e"=1]
"microsoft/computervision-recipes" -> "albumentations-team/albumentations"
"microsoft/computervision-recipes" -> "kornia/kornia"
"microsoft/computervision-recipes" -> "fastai/fastbook" ["e"=1]
"microsoft/computervision-recipes" -> "recommenders-team/recommenders" ["e"=1]
"microsoft/computervision-recipes" -> "amusi/awesome-object-detection"
"microsoft/computervision-recipes" -> "huggingface/pytorch-image-models"
"microsoft/computervision-recipes" -> "aleju/imgaug"
"microsoft/computervision-recipes" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"houxiao/machine_learning_note" -> "xiyusullos/ml_exercise"
"diffgram/diffgram" -> "UniversalDataTool/universal-data-tool"
"diffgram/diffgram" -> "argilla-io/argilla" ["e"=1]
"diffgram/diffgram" -> "HumanSignal/label-studio"
"diffgram/diffgram" -> "zenml-io/zenml" ["e"=1]
"diffgram/diffgram" -> "airctic/icevision" ["e"=1]
"diffgram/diffgram" -> "HumanSignal/awesome-data-labeling"
"diffgram/diffgram" -> "supervisely/supervisely"
"diffgram/diffgram" -> "eugeneyan/ml-design-docs" ["e"=1]
"diffgram/diffgram" -> "aimhubio/aim" ["e"=1]
"diffgram/diffgram" -> "deepchecks/deepchecks" ["e"=1]
"diffgram/diffgram" -> "bit-bots/imagetagger"
"diffgram/diffgram" -> "Lightning-Universe/lightning-bolts"
"diffgram/diffgram" -> "Labelbox/labelbox-custom-labeling-apps"
"diffgram/diffgram" -> "code-kern-ai/refinery" ["e"=1]
"diffgram/diffgram" -> "SeldonIO/seldon-core" ["e"=1]
"katsura-jp/pytorch-cosine-annealing-with-warmup" -> "ildoonet/pytorch-gradual-warmup-lr"
"katsura-jp/pytorch-cosine-annealing-with-warmup" -> "qubvel/ttach"
"katsura-jp/pytorch-cosine-annealing-with-warmup" -> "Tony-Y/pytorch_warmup"
"katsura-jp/pytorch-cosine-annealing-with-warmup" -> "Zasder3/train-CLIP" ["e"=1]
"milesial/Pytorch-UNet" -> "qubvel-org/segmentation_models.pytorch"
"milesial/Pytorch-UNet" -> "zhixuhao/unet" ["e"=1]
"milesial/Pytorch-UNet" -> "MIC-DKFZ/nnUNet" ["e"=1]
"milesial/Pytorch-UNet" -> "mrgloom/awesome-semantic-segmentation"
"milesial/Pytorch-UNet" -> "LeeJunHyun/Image_Segmentation" ["e"=1]
"milesial/Pytorch-UNet" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"milesial/Pytorch-UNet" -> "huggingface/pytorch-image-models"
"milesial/Pytorch-UNet" -> "bigmb/Unet-Segmentation-Pytorch-Nest-of-Unets" ["e"=1]
"milesial/Pytorch-UNet" -> "open-mmlab/mmsegmentation"
"milesial/Pytorch-UNet" -> "open-mmlab/mmdetection"
"milesial/Pytorch-UNet" -> "ShawnBIT/UNet-family" ["e"=1]
"milesial/Pytorch-UNet" -> "pytorch/vision"
"milesial/Pytorch-UNet" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"milesial/Pytorch-UNet" -> "lucidrains/vit-pytorch"
"milesial/Pytorch-UNet" -> "facebookresearch/detectron2"
"NVIDIA/DALI" -> "NVIDIA/apex"
"NVIDIA/DALI" -> "NVIDIA/TensorRT"
"NVIDIA/DALI" -> "horovod/horovod" ["e"=1]
"NVIDIA/DALI" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"NVIDIA/DALI" -> "lanpa/tensorboardX"
"NVIDIA/DALI" -> "kornia/kornia"
"NVIDIA/DALI" -> "triton-inference-server/server" ["e"=1]
"NVIDIA/DALI" -> "Cadene/pretrained-models.pytorch"
"NVIDIA/DALI" -> "NVIDIA/nccl" ["e"=1]
"NVIDIA/DALI" -> "onnx/onnx-tensorrt" ["e"=1]
"NVIDIA/DALI" -> "IntelLabs/distiller" ["e"=1]
"NVIDIA/DALI" -> "pytorch/TensorRT" ["e"=1]
"NVIDIA/DALI" -> "apache/tvm"
"NVIDIA/DALI" -> "xingyizhou/CenterNet"
"NVIDIA/DALI" -> "facebookresearch/maskrcnn-benchmark"
"BobLiu20/YOLOv3_PyTorch" -> "DeNA/PyTorch_YOLOv3"
"BobLiu20/YOLOv3_PyTorch" -> "andy-yun/pytorch-0.4-yolov3"
"BobLiu20/YOLOv3_PyTorch" -> "ayooshkathuria/pytorch-yolo-v3"
"BobLiu20/YOLOv3_PyTorch" -> "Tencent/ObjectDetection-OneStageDet"
"BobLiu20/YOLOv3_PyTorch" -> "Stinky-Tofu/Stronger-yolo"
"BobLiu20/YOLOv3_PyTorch" -> "lzx1413/PytorchSSD"
"BobLiu20/YOLOv3_PyTorch" -> "ShuangXieIrene/ssds.pytorch"
"BobLiu20/YOLOv3_PyTorch" -> "marvis/pytorch-yolo3"
"BobLiu20/YOLOv3_PyTorch" -> "marvis/pytorch-yolo2"
"BobLiu20/YOLOv3_PyTorch" -> "eriklindernoren/PyTorch-YOLOv3"
"BobLiu20/YOLOv3_PyTorch" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"BobLiu20/YOLOv3_PyTorch" -> "GOATmessi8/RFBNet"
"BobLiu20/YOLOv3_PyTorch" -> "princeton-vl/CornerNet"
"BobLiu20/YOLOv3_PyTorch" -> "longcw/yolo2-pytorch"
"BobLiu20/YOLOv3_PyTorch" -> "talebolano/yolov3-network-slimming" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "UniversalDataTool/react-image-annotate" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "HumanSignal/awesome-data-labeling"
"UniversalDataTool/universal-data-tool" -> "Slava/label-tool"
"UniversalDataTool/universal-data-tool" -> "doccano/doccano" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "HumanSignal/label-studio"
"UniversalDataTool/universal-data-tool" -> "SkalskiP/make-sense"
"UniversalDataTool/universal-data-tool" -> "taivop/awesome-data-annotation"
"UniversalDataTool/universal-data-tool" -> "diffgram/diffgram"
"UniversalDataTool/universal-data-tool" -> "jsbroks/coco-annotator"
"UniversalDataTool/universal-data-tool" -> "gnes-ai/gnes" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "l3p-cv/lost"
"UniversalDataTool/universal-data-tool" -> "edtr-io/edtr-io" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "jsbroks/awesome-dataset-tools"
"UniversalDataTool/universal-data-tool" -> "annotorious/annotorious" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "juand-r/entity-recognition-datasets" ["e"=1]
"NVIDIA/apex" -> "NVIDIA/DALI"
"NVIDIA/apex" -> "lanpa/tensorboardX"
"NVIDIA/apex" -> "Cadene/pretrained-models.pytorch"
"NVIDIA/apex" -> "lukemelas/EfficientNet-PyTorch"
"NVIDIA/apex" -> "NVIDIA/Megatron-LM" ["e"=1]
"NVIDIA/apex" -> "horovod/horovod" ["e"=1]
"NVIDIA/apex" -> "facebookresearch/maskrcnn-benchmark"
"NVIDIA/apex" -> "NVIDIA/TensorRT"
"NVIDIA/apex" -> "Lyken17/pytorch-OpCounter"
"NVIDIA/apex" -> "Dao-AILab/flash-attention" ["e"=1]
"NVIDIA/apex" -> "huggingface/pytorch-image-models"
"NVIDIA/apex" -> "pytorch/examples"
"NVIDIA/apex" -> "NVIDIA/FasterTransformer" ["e"=1]
"NVIDIA/apex" -> "albumentations-team/albumentations"
"NVIDIA/apex" -> "facebookresearch/detr"
"idealo/imagededup" -> "idealo/image-quality-assessment" ["e"=1]
"idealo/imagededup" -> "JohannesBuchner/imagehash"
"idealo/imagededup" -> "philipbl/duplicate-images"
"idealo/imagededup" -> "albumentations-team/albumentations"
"idealo/imagededup" -> "idealo/image-super-resolution" ["e"=1]
"idealo/imagededup" -> "elisemercury/Duplicate-Image-Finder"
"idealo/imagededup" -> "lukemelas/EfficientNet-PyTorch"
"idealo/imagededup" -> "aleju/imgaug"
"idealo/imagededup" -> "KevinMusgrave/pytorch-metric-learning"
"idealo/imagededup" -> "0x90d/videoduplicatefinder" ["e"=1]
"idealo/imagededup" -> "facebookresearch/pycls"
"idealo/imagededup" -> "xingyizhou/CenterNet"
"idealo/imagededup" -> "mlfoundations/open_clip" ["e"=1]
"idealo/imagededup" -> "visual-layer/fastdup" ["e"=1]
"idealo/imagededup" -> "rom1504/clip-retrieval" ["e"=1]
"pytorch/hub" -> "Luolc/AdaBound"
"pytorch/hub" -> "Eurus-Holmes/LIS-YNP" ["e"=1]
"pytorch/hub" -> "facebookresearch/ClassyVision"
"pytorch/hub" -> "facebookresearch/pytorch_GAN_zoo" ["e"=1]
"pytorch/hub" -> "PetrochukM/PyTorch-NLP" ["e"=1]
"pytorch/hub" -> "kimiyoung/transformer-xl" ["e"=1]
"pytorch/hub" -> "pytorch/ignite"
"pytorch/hub" -> "LiyuanLucasLiu/RAdam"
"pytorch/hub" -> "xingyizhou/ExtremeNet"
"pytorch/hub" -> "donnyyou/torchcv"
"pytorch/hub" -> "facebookresearch/maskrcnn-benchmark"
"pytorch/hub" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"pytorch/hub" -> "zasdfgbnm/TorchSnooper"
"pytorch/hub" -> "zjhuang22/maskscoring_rcnn"
"pytorch/hub" -> "weightagnostic/weightagnostic.github.io" ["e"=1]
"tensorspace-team/tensorspace" -> "tensorflow/lucid"
"tensorspace-team/tensorspace" -> "NVIDIA/vid2vid" ["e"=1]
"tensorspace-team/tensorspace" -> "tensorflow/adanet" ["e"=1]
"tensorspace-team/tensorspace" -> "google-deepmind/trfl" ["e"=1]
"tensorspace-team/tensorspace" -> "keras-team/autokeras" ["e"=1]
"tensorspace-team/tensorspace" -> "facebookresearch/maskrcnn-benchmark"
"tensorspace-team/tensorspace" -> "google/dopamine" ["e"=1]
"tensorspace-team/tensorspace" -> "zziz/pwc" ["e"=1]
"tensorspace-team/tensorspace" -> "mdbloice/Augmentor"
"tensorspace-team/tensorspace" -> "HarisIqbal88/PlotNeuralNet"
"tensorspace-team/tensorspace" -> "Luolc/AdaBound"
"tensorspace-team/tensorspace" -> "horovod/horovod" ["e"=1]
"tensorspace-team/tensorspace" -> "facebookresearch/pytext" ["e"=1]
"tensorspace-team/tensorspace" -> "facebookresearch/DensePose" ["e"=1]
"tensorspace-team/tensorspace" -> "transcranial/keras-js" ["e"=1]
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "weijiaheng/Advances-in-Label-Noise-Learning"
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "songhwanjun/Awesome-Noisy-Labels"
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "LiJunnan1992/DivideMix"
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "yassouali/awesome-semi-supervised-learning"
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "gorkemalgan/deep_learning_with_noisy_labels_literature"
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "bhanML/Co-teaching"
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "jason718/awesome-self-supervised-learning" ["e"=1]
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "zhaoxin94/awesome-domain-adaptation" ["e"=1]
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "cleanlab/cleanlab" ["e"=1]
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "HobbitLong/SupContrast" ["e"=1]
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "FLHonker/Awesome-Knowledge-Distillation" ["e"=1]
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "xialeiliu/Awesome-Incremental-Learning" ["e"=1]
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "TorchSSL/TorchSSL"
"subeeshvasu/Awesome-Learning-with-Label-Noise" -> "open-mmlab/mmselfsup" ["e"=1]
"fbcotter/pytorch_wavelets" -> "v0lta/PyTorch-Wavelet-Toolbox"
"fbcotter/pytorch_wavelets" -> "PyWavelets/pywt"
"fbcotter/pytorch_wavelets" -> "lpj-github-io/MWCNNv2" ["e"=1]
"fbcotter/pytorch_wavelets" -> "kymatio/kymatio"
"fbcotter/pytorch_wavelets" -> "tomrunia/PyTorchWavelets"
"fbcotter/pytorch_wavelets" -> "lpj0/MWCNN" ["e"=1]
"fbcotter/pytorch_wavelets" -> "hhb072/WaveletSRNet" ["e"=1]
"fbcotter/pytorch_wavelets" -> "zh217/torch-dct" ["e"=1]
"fbcotter/pytorch_wavelets" -> "LiQiufu/WaveCNet"
"fbcotter/pytorch_wavelets" -> "swz30/Restormer" ["e"=1]
"fbcotter/pytorch_wavelets" -> "kaix90/DCTNet" ["e"=1]
"fbcotter/pytorch_wavelets" -> "benedekrozemberczki/GraphWaveletNeuralNetwork" ["e"=1]
"fbcotter/pytorch_wavelets" -> "BGU-CS-VIL/WTConv" ["e"=1]
"fbcotter/pytorch_wavelets" -> "Po-Hsun-Su/pytorch-ssim" ["e"=1]
"fbcotter/pytorch_wavelets" -> "EndlessSora/focal-frequency-loss" ["e"=1]
"Lyken17/pytorch-OpCounter" -> "sovrasov/flops-counter.pytorch"
"Lyken17/pytorch-OpCounter" -> "Swall0w/torchstat"
"Lyken17/pytorch-OpCounter" -> "IntelLabs/distiller" ["e"=1]
"Lyken17/pytorch-OpCounter" -> "Cadene/pretrained-models.pytorch"
"Lyken17/pytorch-OpCounter" -> "NVIDIA/apex"
"Lyken17/pytorch-OpCounter" -> "lukemelas/EfficientNet-PyTorch"
"Lyken17/pytorch-OpCounter" -> "sksq96/pytorch-summary"
"Lyken17/pytorch-OpCounter" -> "lanpa/tensorboardX"
"Lyken17/pytorch-OpCounter" -> "he-y/Awesome-Pruning" ["e"=1]
"Lyken17/pytorch-OpCounter" -> "huawei-noah/Efficient-AI-Backbones"
"Lyken17/pytorch-OpCounter" -> "facebookresearch/maskrcnn-benchmark"
"Lyken17/pytorch-OpCounter" -> "DingXiaoH/RepVGG"
"Lyken17/pytorch-OpCounter" -> "facebookresearch/fvcore"
"Lyken17/pytorch-OpCounter" -> "xingyizhou/CenterNet"
"Lyken17/pytorch-OpCounter" -> "quark0/darts" ["e"=1]
"daquexian/onnx-simplifier" -> "onnx/onnx-tensorrt" ["e"=1]
"daquexian/onnx-simplifier" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"daquexian/onnx-simplifier" -> "onnx/optimizer" ["e"=1]
"daquexian/onnx-simplifier" -> "NVIDIA/TensorRT"
"daquexian/onnx-simplifier" -> "ZhangGe6/onnx-modifier" ["e"=1]
"daquexian/onnx-simplifier" -> "wang-xinyu/tensorrtx"
"daquexian/onnx-simplifier" -> "Tencent/TNN"
"daquexian/onnx-simplifier" -> "alibaba/MNN"
"daquexian/onnx-simplifier" -> "OpenPPL/ppq" ["e"=1]
"daquexian/onnx-simplifier" -> "onnx/tensorflow-onnx"
"daquexian/onnx-simplifier" -> "Tencent/ncnn"
"daquexian/onnx-simplifier" -> "RangiLyu/nanodet"
"daquexian/onnx-simplifier" -> "xlite-dev/lite.ai.toolkit"
"daquexian/onnx-simplifier" -> "666DZY666/micronet" ["e"=1]
"daquexian/onnx-simplifier" -> "DingXiaoH/RepVGG"
"qqwweee/keras-yolo3" -> "YunYang1994/tensorflow-yolov3" ["e"=1]
"qqwweee/keras-yolo3" -> "AlexeyAB/darknet"
"qqwweee/keras-yolo3" -> "eriklindernoren/PyTorch-YOLOv3"
"qqwweee/keras-yolo3" -> "ultralytics/yolov3"
"qqwweee/keras-yolo3" -> "balancap/SSD-Tensorflow" ["e"=1]
"qqwweee/keras-yolo3" -> "experiencor/keras-yolo3" ["e"=1]
"qqwweee/keras-yolo3" -> "allanzelener/YAD2K" ["e"=1]
"qqwweee/keras-yolo3" -> "pjreddie/darknet"
"qqwweee/keras-yolo3" -> "wizyoung/YOLOv3_TensorFlow" ["e"=1]
"qqwweee/keras-yolo3" -> "amusi/awesome-object-detection"
"qqwweee/keras-yolo3" -> "hoya012/deep_learning_object_detection"
"qqwweee/keras-yolo3" -> "ayooshkathuria/pytorch-yolo-v3"
"qqwweee/keras-yolo3" -> "thtrieu/darkflow" ["e"=1]
"qqwweee/keras-yolo3" -> "fizyr/keras-retinanet"
"qqwweee/keras-yolo3" -> "HumanSignal/labelImg"
"Paperspace/DataAugmentationForObjectDetection" -> "maozezhong/CV_ToolBox" ["e"=1]
"Paperspace/DataAugmentationForObjectDetection" -> "kemaloksuz/ObjectDetectionImbalance"
"Paperspace/DataAugmentationForObjectDetection" -> "codebox/image_augmentor"
"Paperspace/DataAugmentationForObjectDetection" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"Paperspace/DataAugmentationForObjectDetection" -> "tusen-ai/simpledet"
"Paperspace/DataAugmentationForObjectDetection" -> "VDIGPKU/M2Det"
"Paperspace/DataAugmentationForObjectDetection" -> "AgaMiko/data-augmentation-review"
"Paperspace/DataAugmentationForObjectDetection" -> "rafaelpadilla/Object-Detection-Metrics"
"Paperspace/DataAugmentationForObjectDetection" -> "GOATmessi8/RFBNet"
"Paperspace/DataAugmentationForObjectDetection" -> "ming71/mmdetection-annotated"
"Paperspace/DataAugmentationForObjectDetection" -> "princeton-vl/CornerNet"
"Paperspace/DataAugmentationForObjectDetection" -> "tianzhi0549/FCOS"
"Paperspace/DataAugmentationForObjectDetection" -> "GOATmessi8/ASFF"
"Paperspace/DataAugmentationForObjectDetection" -> "yhenon/pytorch-retinanet"
"Paperspace/DataAugmentationForObjectDetection" -> "CrazyVertigo/awesome-data-augmentation"
"kakaobrain/fast-autoaugment" -> "DeepVoltaire/AutoAugment"
"kakaobrain/fast-autoaugment" -> "ildoonet/pytorch-randaugment"
"kakaobrain/fast-autoaugment" -> "arcelien/pba"
"kakaobrain/fast-autoaugment" -> "clovaai/CutMix-PyTorch"
"kakaobrain/fast-autoaugment" -> "facebookresearch/pycls"
"kakaobrain/fast-autoaugment" -> "google-research/augmix"
"kakaobrain/fast-autoaugment" -> "4uiiurz1/pytorch-auto-augment"
"kakaobrain/fast-autoaugment" -> "mit-han-lab/proxylessnas" ["e"=1]
"kakaobrain/fast-autoaugment" -> "kakaobrain/torchgpipe" ["e"=1]
"kakaobrain/fast-autoaugment" -> "D-X-Y/AutoDL-Projects" ["e"=1]
"kakaobrain/fast-autoaugment" -> "JunYeopLee/fast-autoaugment-efficientnet-pytorch"
"kakaobrain/fast-autoaugment" -> "tensorflow/tpu"
"kakaobrain/fast-autoaugment" -> "VDIGPKU/DADA"
"kakaobrain/fast-autoaugment" -> "facebookresearch/mixup-cifar10"
"kakaobrain/fast-autoaugment" -> "lukemelas/EfficientNet-PyTorch"
"clovaai/CutMix-PyTorch" -> "facebookresearch/mixup-cifar10"
"clovaai/CutMix-PyTorch" -> "kakaobrain/fast-autoaugment"
"clovaai/CutMix-PyTorch" -> "DeepVoltaire/AutoAugment"
"clovaai/CutMix-PyTorch" -> "ecs-vlc/FMix"
"clovaai/CutMix-PyTorch" -> "google-research/augmix"
"clovaai/CutMix-PyTorch" -> "dvlab-research/GridMask"
"clovaai/CutMix-PyTorch" -> "uoguelph-mlrg/Cutout"
"clovaai/CutMix-PyTorch" -> "ildoonet/pytorch-randaugment"
"clovaai/CutMix-PyTorch" -> "vikasverma1077/manifold_mixup"
"clovaai/CutMix-PyTorch" -> "ildoonet/cutmix"
"clovaai/CutMix-PyTorch" -> "zhanghang1989/ResNeSt"
"clovaai/CutMix-PyTorch" -> "facebookresearch/pycls"
"clovaai/CutMix-PyTorch" -> "facebookresearch/FixRes"
"clovaai/CutMix-PyTorch" -> "clovaai/wsolevaluation" ["e"=1]
"clovaai/CutMix-PyTorch" -> "ildoonet/pytorch-gradual-warmup-lr"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "4uiiurz1/pytorch-deform-conv-v2"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "CharlesShang/DCNv2"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "oeway/pytorch-deform-conv"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "msracver/Deformable-ConvNets"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "ChunhuanLin/deform_conv_pytorch"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "1zb/deformable-convolution-pytorch"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "xvjiarui/GCNet" ["e"=1]
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "xinntao/EDVR" ["e"=1]
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "AlexHex7/Non-local_pytorch" ["e"=1]
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "princeton-vl/CornerNet"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "speedinghzl/CCNet" ["e"=1]
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "lucasjinreal/DCNv2_latest"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "YapengTian/TDAN-VSR-CVPR-2020" ["e"=1]
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "tianzhi0549/FCOS"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "fundamentalvision/Deformable-DETR"
"microsoft/RepPoints" -> "Scalsol/RepPointsV2"
"microsoft/RepPoints" -> "zhangxiaosong18/FreeAnchor"
"microsoft/RepPoints" -> "justimyhxu/Dense-RepPoints"
"microsoft/RepPoints" -> "sfzhang15/ATSS"
"microsoft/RepPoints" -> "xingyizhou/ExtremeNet"
"microsoft/RepPoints" -> "Megvii-BaseDetection/BorderDet"
"microsoft/RepPoints" -> "xieenze/PolarMask"
"microsoft/RepPoints" -> "OceanPang/Libra_R-CNN"
"microsoft/RepPoints" -> "FateScript/CenterNet-better"
"microsoft/RepPoints" -> "vacancy/PreciseRoIPooling"
"microsoft/RepPoints" -> "tianzhi0549/FCOS"
"microsoft/RepPoints" -> "Duankaiwen/CenterNet"
"microsoft/RepPoints" -> "princeton-vl/CornerNet"
"microsoft/RepPoints" -> "taokong/FoveaBox"
"microsoft/RepPoints" -> "STVIR/Grid-R-CNN"
"graetz23/JWave" -> "nightscape/scave"
"ultralytics/JSON2YOLO" -> "ssaru/convert2Yolo"
"ultralytics/JSON2YOLO" -> "vietanhdev/anylabeling" ["e"=1]
"ultralytics/JSON2YOLO" -> "open-mmlab/mmyolo"
"ultralytics/JSON2YOLO" -> "NirAharon/BoT-SORT" ["e"=1]
"ultralytics/JSON2YOLO" -> "triple-Mu/YOLOv8-TensorRT" ["e"=1]
"ultralytics/JSON2YOLO" -> "lucasjinreal/yolov7_d2"
"ultralytics/JSON2YOLO" -> "TexasInstruments/edgeai-yolov5" ["e"=1]
"ultralytics/JSON2YOLO" -> "meituan/YOLOv6"
"ultralytics/JSON2YOLO" -> "obss/sahi"
"ultralytics/JSON2YOLO" -> "rooneysh/Labelme2YOLO"
"ultralytics/JSON2YOLO" -> "hukaixuan19970627/yolov5_obb" ["e"=1]
"ultralytics/JSON2YOLO" -> "AILab-CVC/YOLO-World" ["e"=1]
"ultralytics/JSON2YOLO" -> "autodistill/autodistill" ["e"=1]
"ultralytics/JSON2YOLO" -> "cgvict/roLabelImg" ["e"=1]
"ultralytics/JSON2YOLO" -> "pylabel-project/pylabel"
"szagoruyko/pytorchviz" -> "sksq96/pytorch-summary"
"szagoruyko/pytorchviz" -> "waleedka/hiddenlayer"
"szagoruyko/pytorchviz" -> "lanpa/tensorboardX"
"szagoruyko/pytorchviz" -> "TylerYep/torchinfo"
"szagoruyko/pytorchviz" -> "fossasia/visdom"
"szagoruyko/pytorchviz" -> "skorch-dev/skorch" ["e"=1]
"szagoruyko/pytorchviz" -> "NVIDIA/apex"
"szagoruyko/pytorchviz" -> "Cadene/pretrained-models.pytorch"
"szagoruyko/pytorchviz" -> "Lyken17/pytorch-OpCounter"
"szagoruyko/pytorchviz" -> "arogozhnikov/einops"
"szagoruyko/pytorchviz" -> "utkuozbulak/pytorch-cnn-visualizations"
"szagoruyko/pytorchviz" -> "pytorch/ignite"
"szagoruyko/pytorchviz" -> "pytorch/captum"
"szagoruyko/pytorchviz" -> "sovrasov/flops-counter.pytorch"
"szagoruyko/pytorchviz" -> "meetps/pytorch-semseg" ["e"=1]
"hoya012/deep_learning_object_detection" -> "amusi/awesome-object-detection"
"hoya012/deep_learning_object_detection" -> "open-mmlab/mmdetection"
"hoya012/deep_learning_object_detection" -> "mrgloom/awesome-semantic-segmentation"
"hoya012/deep_learning_object_detection" -> "facebookresearch/maskrcnn-benchmark"
"hoya012/deep_learning_object_detection" -> "xingyizhou/CenterNet"
"hoya012/deep_learning_object_detection" -> "jwyang/faster-rcnn.pytorch"
"hoya012/deep_learning_object_detection" -> "eriklindernoren/PyTorch-YOLOv3"
"hoya012/deep_learning_object_detection" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"hoya012/deep_learning_object_detection" -> "AlexeyAB/darknet"
"hoya012/deep_learning_object_detection" -> "ultralytics/yolov3"
"hoya012/deep_learning_object_detection" -> "rafaelpadilla/Object-Detection-Metrics"
"hoya012/deep_learning_object_detection" -> "Cadene/pretrained-models.pytorch"
"hoya012/deep_learning_object_detection" -> "aleju/imgaug"
"hoya012/deep_learning_object_detection" -> "amdegroot/ssd.pytorch"
"hoya012/deep_learning_object_detection" -> "facebookresearch/detectron2"
"pjreddie/darknet" -> "AlexeyAB/darknet"
"pjreddie/darknet" -> "HumanSignal/labelImg"
"pjreddie/darknet" -> "ultralytics/yolov3"
"pjreddie/darknet" -> "facebookresearch/Detectron"
"pjreddie/darknet" -> "qqwweee/keras-yolo3"
"pjreddie/darknet" -> "thtrieu/darkflow" ["e"=1]
"pjreddie/darknet" -> "tensorflow/models" ["e"=1]
"pjreddie/darknet" -> "BVLC/caffe" ["e"=1]
"pjreddie/darknet" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"pjreddie/darknet" -> "open-mmlab/mmdetection"
"pjreddie/darknet" -> "matterport/Mask_RCNN"
"pjreddie/darknet" -> "eriklindernoren/PyTorch-YOLOv3"
"pjreddie/darknet" -> "facebookresearch/detectron2"
"pjreddie/darknet" -> "Tencent/ncnn"
"pjreddie/darknet" -> "ultralytics/yolov5"
"CoinCheung/pytorch-loss" -> "JunMa11/SegLossOdyssey" ["e"=1]
"CoinCheung/pytorch-loss" -> "clcarwin/focal_loss_pytorch"
"CoinCheung/pytorch-loss" -> "zhanghang1989/ResNeSt"
"CoinCheung/pytorch-loss" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"CoinCheung/pytorch-loss" -> "Jongchan/attention-module" ["e"=1]
"CoinCheung/pytorch-loss" -> "KevinMusgrave/pytorch-metric-learning"
"CoinCheung/pytorch-loss" -> "ufoym/imbalanced-dataset-sampler"
"CoinCheung/pytorch-loss" -> "DingXiaoH/RepVGG"
"CoinCheung/pytorch-loss" -> "KaiyangZhou/pytorch-center-loss" ["e"=1]
"CoinCheung/pytorch-loss" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"CoinCheung/pytorch-loss" -> "lukemelas/EfficientNet-PyTorch"
"CoinCheung/pytorch-loss" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"CoinCheung/pytorch-loss" -> "yatengLG/Focal-Loss-Pytorch" ["e"=1]
"CoinCheung/pytorch-loss" -> "Cadene/pretrained-models.pytorch"
"CoinCheung/pytorch-loss" -> "clovaai/CutMix-PyTorch"
"JsonChao/ML-Roadmap" -> "mihui/ml"
"JsonChao/ML-Roadmap" -> "gopala-kr/ai-learning-roadmap"
"JsonChao/ML-Roadmap" -> "srcolinas/roadmap-to-AI"
"JsonChao/ML-Roadmap" -> "luuductrung1234/dev-roadmap"
"JsonChao/ML-Roadmap" -> "RoryDuncan/learn-python-roadmap"
"JsonChao/ML-Roadmap" -> "RatulGhosh/awesome-machine-learning"
"JsonChao/ML-Roadmap" -> "TalalAlrawajfeh/machine-learning-roadmap" ["e"=1]
"JsonChao/ML-Roadmap" -> "chris-chris/ml-engineer-roadmap" ["e"=1]
"JsonChao/ML-Roadmap" -> "orsanawwad/awesome-roadmaps" ["e"=1]
"JsonChao/ML-Roadmap" -> "L1aoXingyu/Roadmap-of-DL-and-ML" ["e"=1]
"JsonChao/ML-Roadmap" -> "sayan-feb27/roadmap"
"JsonChao/ML-Roadmap" -> "raycad/devops-roadmap" ["e"=1]
"JsonChao/ML-Roadmap" -> "yngz/cs-roadmap"
"Tencent/tencent-ml-images" -> "Tencent/PocketFlow" ["e"=1]
"Tencent/tencent-ml-images" -> "facebookresearch/maskrcnn-benchmark"
"Tencent/tencent-ml-images" -> "megvii-research/ML-GCN" ["e"=1]
"Tencent/tencent-ml-images" -> "openimages/dataset" ["e"=1]
"Tencent/tencent-ml-images" -> "Tencent/ObjectDetection-OneStageDet"
"Tencent/tencent-ml-images" -> "zjhuang22/maskscoring_rcnn"
"Tencent/tencent-ml-images" -> "dmlc/gluon-cv"
"Tencent/tencent-ml-images" -> "tusen-ai/simpledet"
"Tencent/tencent-ml-images" -> "tensorflow/tpu"
"Tencent/tencent-ml-images" -> "Cadene/pretrained-models.pytorch"
"Tencent/tencent-ml-images" -> "princeton-vl/CornerNet"
"Tencent/tencent-ml-images" -> "NVIDIA/DALI"
"Tencent/tencent-ml-images" -> "tensorpack/tensorpack" ["e"=1]
"Tencent/tencent-ml-images" -> "Rock-100/FaceKit" ["e"=1]
"Tencent/tencent-ml-images" -> "Tencent/FaceDetection-DSFD" ["e"=1]
"PaddlePaddle/Paddle-Lite" -> "Tencent/ncnn"
"PaddlePaddle/Paddle-Lite" -> "alibaba/MNN"
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/Paddle"
"PaddlePaddle/Paddle-Lite" -> "XiaoMi/mace" ["e"=1]
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/models"
"PaddlePaddle/Paddle-Lite" -> "Tencent/TNN"
"PaddlePaddle/Paddle-Lite" -> "OAID/Tengine" ["e"=1]
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/Paddle-Lite-Demo"
"PaddlePaddle/Paddle-Lite" -> "apache/tvm"
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/Paddle-Lite" -> "ARM-software/ComputeLibrary" ["e"=1]
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/Paddle-Lite" -> "facebookarchive/caffe2" ["e"=1]
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/Paddle-Lite" -> "ShiqiYu/libfacedetection" ["e"=1]
"keras-team/keras-applications" -> "keras-team/keras-preprocessing" ["e"=1]
"keras-team/keras-applications" -> "fchollet/deep-learning-models" ["e"=1]
"keras-team/keras-applications" -> "keras-team/keras-contrib" ["e"=1]
"keras-team/keras-applications" -> "qubvel/classification_models"
"keras-team/keras-applications" -> "qubvel/efficientnet"
"keras-team/keras-applications" -> "qqwweee/keras-yolo3"
"keras-team/keras-applications" -> "keras-team/keras-tuner" ["e"=1]
"keras-team/keras-applications" -> "bonlime/keras-deeplab-v3-plus" ["e"=1]
"keras-team/keras-applications" -> "pierluigiferrari/ssd_keras" ["e"=1]
"keras-team/keras-applications" -> "eriklindernoren/Keras-GAN" ["e"=1]
"keras-team/keras-applications" -> "allanzelener/YAD2K" ["e"=1]
"keras-team/keras-applications" -> "YunYang1994/tensorflow-yolov3" ["e"=1]
"keras-team/keras-applications" -> "qubvel/segmentation_models"
"keras-team/keras-applications" -> "flyyufelix/cnn_finetune" ["e"=1]
"keras-team/keras-applications" -> "fchollet/keras-resources" ["e"=1]
"kymatio/kymatio" -> "edouardoyallon/pyscatwave"
"kymatio/kymatio" -> "fbcotter/pytorch_wavelets"
"kymatio/kymatio" -> "lostanlen/scattering.m"
"kymatio/kymatio" -> "OverLordGoldDragon/ssqueezepy"
"kymatio/kymatio" -> "SihaoCheng/scattering_transform"
"kymatio/kymatio" -> "tomrunia/PyTorchWavelets"
"kymatio/kymatio" -> "v0lta/PyTorch-Wavelet-Toolbox"
"kymatio/kymatio" -> "scatnet/scatnet"
"kymatio/kymatio" -> "j-zarka/SparseScatNet"
"kymatio/kymatio" -> "edouardoyallon/scalingscattering"
"kymatio/kymatio" -> "KinWaiCheuk/nnAudio" ["e"=1]
"kymatio/kymatio" -> "PyWavelets/pywt"
"kymatio/kymatio" -> "csteinmetz1/dasp-pytorch" ["e"=1]
"kymatio/kymatio" -> "csteinmetz1/auraloss" ["e"=1]
"kymatio/kymatio" -> "benedekrozemberczki/GraphWaveletNeuralNetwork" ["e"=1]
"fossasia/susi_python" -> "fossasia/FOSSASIA-Office"
"fossasia/susi_python" -> "fossasia/susi_speech_server"
"fossasia/susi_python" -> "fossasia/photos.fossasia.org"
"fossasia/susi_python" -> "fossasia/susi_installer"
"fossasia/susi_python" -> "voicerepublic/vr-api-specs"
"fossasia/susi_python" -> "voicerepublic/vr-mobile"
"fossasia/susi_python" -> "voicerepublic/transitions"
"fossasia/susi_python" -> "voicerepublic/vr-devbox"
"fossasia/susi_python" -> "voicerepublic/upscuits"
"fossasia/susi_python" -> "voicerepublic/vr-fidelity"
"fossasia/susi_python" -> "voicerepublic/linux"
"fossasia/susi_python" -> "voicerepublic/vr-logorrhoe"
"fossasia/susi_python" -> "voicerepublic/activeadmin-dragonfly"
"fossasia/susi_python" -> "voicerepublic/voicerepublic_dev"
"fossasia/susi_python" -> "voicerepublic/faye"
"catalyst-team/catalyst" -> "BloodAxe/pytorch-toolbelt"
"catalyst-team/catalyst" -> "albumentations-team/albumentations"
"catalyst-team/catalyst" -> "pytorch/ignite"
"catalyst-team/catalyst" -> "qubvel-org/segmentation_models.pytorch"
"catalyst-team/catalyst" -> "KevinMusgrave/pytorch-metric-learning"
"catalyst-team/catalyst" -> "yandexdataschool/Practical_RL" ["e"=1]
"catalyst-team/catalyst" -> "skorch-dev/skorch" ["e"=1]
"catalyst-team/catalyst" -> "qubvel/ttach"
"catalyst-team/catalyst" -> "Cadene/pretrained-models.pytorch"
"catalyst-team/catalyst" -> "jettify/pytorch-optimizer"
"catalyst-team/catalyst" -> "arogozhnikov/einops"
"catalyst-team/catalyst" -> "qubvel/segmentation_models"
"catalyst-team/catalyst" -> "kornia/kornia"
"catalyst-team/catalyst" -> "lukemelas/EfficientNet-PyTorch"
"catalyst-team/catalyst" -> "yandexdataschool/Practical_DL" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "nitrain/nitrain"
"Bjarten/early-stopping-pytorch" -> "pytorch/ignite"
"Bjarten/early-stopping-pytorch" -> "sksq96/pytorch-summary"
"Bjarten/early-stopping-pytorch" -> "davidtvs/pytorch-lr-finder"
"Bjarten/early-stopping-pytorch" -> "skorch-dev/skorch" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "ufoym/imbalanced-dataset-sampler"
"Bjarten/early-stopping-pytorch" -> "trent-b/iterative-stratification"
"Bjarten/early-stopping-pytorch" -> "tczhangzhi/pytorch-distributed"
"Bjarten/early-stopping-pytorch" -> "pytorch/captum"
"Bjarten/early-stopping-pytorch" -> "mortezamg63/Accessing-and-modifying-different-layers-of-a-pretrained-model-in-pytorch"
"Bjarten/early-stopping-pytorch" -> "tengshaofeng/ResidualAttentionNetwork-pytorch" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "dreamquark-ai/tabnet" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "ildoonet/pytorch-gradual-warmup-lr"
"Bjarten/early-stopping-pytorch" -> "jadore801120/attention-is-all-you-need-pytorch" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "prakashpandey9/Text-Classification-Pytorch" ["e"=1]
"hujie-frank/SENet" -> "moskomule/senet.pytorch" ["e"=1]
"hujie-frank/SENet" -> "liuzhuang13/DenseNet" ["e"=1]
"hujie-frank/SENet" -> "msracver/Deformable-ConvNets"
"hujie-frank/SENet" -> "taki0112/SENet-Tensorflow" ["e"=1]
"hujie-frank/SENet" -> "Cadene/pretrained-models.pytorch"
"hujie-frank/SENet" -> "weiliu89/caffe" ["e"=1]
"hujie-frank/SENet" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"hujie-frank/SENet" -> "princeton-vl/CornerNet"
"hujie-frank/SENet" -> "junfu1115/DANet" ["e"=1]
"hujie-frank/SENet" -> "tusen-ai/simpledet"
"hujie-frank/SENet" -> "KaimingHe/deep-residual-networks" ["e"=1]
"hujie-frank/SENet" -> "tensorflow/tpu"
"hujie-frank/SENet" -> "sfzhang15/RefineDet"
"hujie-frank/SENet" -> "xingyizhou/CenterNet"
"hujie-frank/SENet" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"philferriere/cocoapi" -> "cocodataset/cocoapi"
"philferriere/cocoapi" -> "facebookresearch/maskrcnn-benchmark"
"philferriere/cocoapi" -> "princeton-vl/CornerNet"
"philferriere/cocoapi" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"philferriere/cocoapi" -> "xingyizhou/CenterNet"
"philferriere/cocoapi" -> "amdegroot/ssd.pytorch"
"philferriere/cocoapi" -> "WXinlong/SOLO"
"philferriere/cocoapi" -> "tianzhi0549/FCOS"
"philferriere/cocoapi" -> "dbolya/yolact"
"philferriere/cocoapi" -> "jwyang/faster-rcnn.pytorch"
"philferriere/cocoapi" -> "Tianxiaomo/pytorch-YOLOv4"
"philferriere/cocoapi" -> "aim-uofa/AdelaiDet"
"philferriere/cocoapi" -> "conansherry/detectron2"
"philferriere/cocoapi" -> "zjhuang22/maskscoring_rcnn"
"philferriere/cocoapi" -> "princeton-vl/CornerNet-Lite"
"onnx/tutorials" -> "onnx/models"
"onnx/tutorials" -> "onnx/onnx"
"onnx/tutorials" -> "onnx/tensorflow-onnx"
"onnx/tutorials" -> "onnx/onnx-tensorrt" ["e"=1]
"onnx/tutorials" -> "daquexian/onnx-simplifier"
"onnx/tutorials" -> "NVIDIA/TensorRT"
"onnx/tutorials" -> "microsoft/onnxruntime"
"onnx/tutorials" -> "onnx/onnx-tensorflow"
"onnx/tutorials" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"onnx/tutorials" -> "ysh329/deep-learning-model-convertor" ["e"=1]
"onnx/tutorials" -> "onnx/onnxmltools" ["e"=1]
"onnx/tutorials" -> "IntelLabs/distiller" ["e"=1]
"onnx/tutorials" -> "microsoft/MMdnn"
"onnx/tutorials" -> "apache/tvm"
"onnx/tutorials" -> "xingyizhou/CenterNet"
"amusi/awesome-object-detection" -> "hoya012/deep_learning_object_detection"
"amusi/awesome-object-detection" -> "mrgloom/awesome-semantic-segmentation"
"amusi/awesome-object-detection" -> "xingyizhou/CenterNet"
"amusi/awesome-object-detection" -> "jwyang/faster-rcnn.pytorch"
"amusi/awesome-object-detection" -> "facebookresearch/maskrcnn-benchmark"
"amusi/awesome-object-detection" -> "eriklindernoren/PyTorch-YOLOv3"
"amusi/awesome-object-detection" -> "open-mmlab/mmdetection"
"amusi/awesome-object-detection" -> "amusi/daily-paper-computer-vision"
"amusi/awesome-object-detection" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"amusi/awesome-object-detection" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"amusi/awesome-object-detection" -> "tusen-ai/simpledet"
"amusi/awesome-object-detection" -> "tianzhi0549/FCOS"
"amusi/awesome-object-detection" -> "foolwood/benchmark_results" ["e"=1]
"amusi/awesome-object-detection" -> "Cadene/pretrained-models.pytorch"
"amusi/awesome-object-detection" -> "ultralytics/yolov3"
"rafaelpadilla/Object-Detection-Metrics" -> "rafaelpadilla/review_object_detection_metrics"
"rafaelpadilla/Object-Detection-Metrics" -> "Cartucho/mAP"
"rafaelpadilla/Object-Detection-Metrics" -> "hoya012/deep_learning_object_detection"
"rafaelpadilla/Object-Detection-Metrics" -> "amusi/awesome-object-detection"
"rafaelpadilla/Object-Detection-Metrics" -> "eriklindernoren/PyTorch-YOLOv3"
"rafaelpadilla/Object-Detection-Metrics" -> "xingyizhou/CenterNet"
"rafaelpadilla/Object-Detection-Metrics" -> "jwyang/faster-rcnn.pytorch"
"rafaelpadilla/Object-Detection-Metrics" -> "facebookresearch/maskrcnn-benchmark"
"rafaelpadilla/Object-Detection-Metrics" -> "ultralytics/yolov3"
"rafaelpadilla/Object-Detection-Metrics" -> "tianzhi0549/FCOS"
"rafaelpadilla/Object-Detection-Metrics" -> "aleju/imgaug"
"rafaelpadilla/Object-Detection-Metrics" -> "open-mmlab/mmdetection"
"rafaelpadilla/Object-Detection-Metrics" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"rafaelpadilla/Object-Detection-Metrics" -> "amdegroot/ssd.pytorch"
"rafaelpadilla/Object-Detection-Metrics" -> "qqwweee/keras-yolo3"
"CharlesShang/DCNv2" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"CharlesShang/DCNv2" -> "lucasjinreal/DCNv2_latest"
"CharlesShang/DCNv2" -> "lbin/DCNv2"
"CharlesShang/DCNv2" -> "4uiiurz1/pytorch-deform-conv-v2"
"CharlesShang/DCNv2" -> "msracver/Deformable-ConvNets"
"CharlesShang/DCNv2" -> "xingyizhou/CenterNet"
"CharlesShang/DCNv2" -> "xinntao/EDVR" ["e"=1]
"CharlesShang/DCNv2" -> "xingyizhou/ExtremeNet"
"CharlesShang/DCNv2" -> "oeway/pytorch-deform-conv"
"CharlesShang/DCNv2" -> "Duankaiwen/CenterNet"
"CharlesShang/DCNv2" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"CharlesShang/DCNv2" -> "tianzhi0549/FCOS"
"CharlesShang/DCNv2" -> "princeton-vl/CornerNet-Lite"
"CharlesShang/DCNv2" -> "xingyizhou/CenterTrack" ["e"=1]
"CharlesShang/DCNv2" -> "xingyizhou/CenterNet2"
"zjhuang22/maskscoring_rcnn" -> "ShuLiu1993/PANet"
"zjhuang22/maskscoring_rcnn" -> "facebookresearch/maskrcnn-benchmark"
"zjhuang22/maskscoring_rcnn" -> "tianzhi0549/FCOS"
"zjhuang22/maskscoring_rcnn" -> "dbolya/yolact"
"zjhuang22/maskscoring_rcnn" -> "tusen-ai/simpledet"
"zjhuang22/maskscoring_rcnn" -> "Duankaiwen/CenterNet"
"zjhuang22/maskscoring_rcnn" -> "foolwood/SiamMask" ["e"=1]
"zjhuang22/maskscoring_rcnn" -> "princeton-vl/CornerNet"
"zjhuang22/maskscoring_rcnn" -> "xieenze/PolarMask"
"zjhuang22/maskscoring_rcnn" -> "princeton-vl/CornerNet-Lite"
"zjhuang22/maskscoring_rcnn" -> "aim-uofa/AdelaiDet"
"zjhuang22/maskscoring_rcnn" -> "xingyizhou/ExtremeNet"
"zjhuang22/maskscoring_rcnn" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"zjhuang22/maskscoring_rcnn" -> "junfu1115/DANet" ["e"=1]
"zjhuang22/maskscoring_rcnn" -> "roytseng-tw/Detectron.pytorch"
"tianzhi0549/FCOS" -> "princeton-vl/CornerNet"
"tianzhi0549/FCOS" -> "xingyizhou/CenterNet"
"tianzhi0549/FCOS" -> "aim-uofa/AdelaiDet"
"tianzhi0549/FCOS" -> "Duankaiwen/CenterNet"
"tianzhi0549/FCOS" -> "sfzhang15/ATSS"
"tianzhi0549/FCOS" -> "tusen-ai/simpledet"
"tianzhi0549/FCOS" -> "princeton-vl/CornerNet-Lite"
"tianzhi0549/FCOS" -> "facebookresearch/maskrcnn-benchmark"
"tianzhi0549/FCOS" -> "amdegroot/ssd.pytorch"
"tianzhi0549/FCOS" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"tianzhi0549/FCOS" -> "zjhuang22/maskscoring_rcnn"
"tianzhi0549/FCOS" -> "GOATmessi8/RFBNet"
"tianzhi0549/FCOS" -> "yhenon/pytorch-retinanet"
"tianzhi0549/FCOS" -> "msracver/Deformable-ConvNets"
"tianzhi0549/FCOS" -> "amusi/awesome-object-detection"
"xingyizhou/CenterNet" -> "Duankaiwen/CenterNet"
"xingyizhou/CenterNet" -> "tianzhi0549/FCOS"
"xingyizhou/CenterNet" -> "princeton-vl/CornerNet"
"xingyizhou/CenterNet" -> "xingyizhou/CenterTrack" ["e"=1]
"xingyizhou/CenterNet" -> "facebookresearch/maskrcnn-benchmark"
"xingyizhou/CenterNet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"xingyizhou/CenterNet" -> "open-mmlab/mmdetection"
"xingyizhou/CenterNet" -> "princeton-vl/CornerNet-Lite"
"xingyizhou/CenterNet" -> "eriklindernoren/PyTorch-YOLOv3"
"xingyizhou/CenterNet" -> "ultralytics/yolov3"
"xingyizhou/CenterNet" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"xingyizhou/CenterNet" -> "lukemelas/EfficientNet-PyTorch"
"xingyizhou/CenterNet" -> "ifzhang/FairMOT" ["e"=1]
"xingyizhou/CenterNet" -> "tusen-ai/simpledet"
"xingyizhou/CenterNet" -> "amusi/awesome-object-detection"
"yuhuayc/da-faster-rcnn" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"yuhuayc/da-faster-rcnn" -> "VisionLearningGroup/DA_Detection"
"yuhuayc/da-faster-rcnn" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"yuhuayc/da-faster-rcnn" -> "naoto0804/cross-domain-detection"
"yuhuayc/da-faster-rcnn" -> "megvii-research/CR-DA-DET"
"yuhuayc/da-faster-rcnn" -> "chaoqichen/HTCN"
"yuhuayc/da-faster-rcnn" -> "ChrisAllenMing/GPA-detection"
"yuhuayc/da-faster-rcnn" -> "chengchunhsu/EveryPixelMatters"
"yuhuayc/da-faster-rcnn" -> "xinge008/SCDA"
"yuhuayc/da-faster-rcnn" -> "krumo/Detectron-DA-Faster-RCNN"
"yuhuayc/da-faster-rcnn" -> "harsh-99/SCL"
"yuhuayc/da-faster-rcnn" -> "kevinhkhsu/DA_detection"
"yuhuayc/da-faster-rcnn" -> "divyam02/dafrcnn-pytorch"
"yuhuayc/da-faster-rcnn" -> "AruniRC/detectron-self-train"
"yuhuayc/da-faster-rcnn" -> "kinredon/DA_Detection_Material"
"CodecWang/opencv-python-tutorial" -> "gzr2017/ImageProcessing100Wen"
"CodecWang/opencv-python-tutorial" -> "makelove/OpenCV-Python-Tutorial"
"CodecWang/opencv-python-tutorial" -> "JimmyHHua/opencv_tutorials"
"CodecWang/opencv-python-tutorial" -> "fendouai/OpenCVTutorials"
"CodecWang/opencv-python-tutorial" -> "spmallick/learnopencv"
"CodecWang/opencv-python-tutorial" -> "oreillymedia/Learning-OpenCV-3_examples"
"CodecWang/opencv-python-tutorial" -> "CodecWang/learn-opencv-edu" ["e"=1]
"CodecWang/opencv-python-tutorial" -> "QianMo/OpenCV3-Intro-Book-Src"
"CodecWang/opencv-python-tutorial" -> "vipstone/faceai" ["e"=1]
"CodecWang/opencv-python-tutorial" -> "czy36mengfei/tensorflow2_tutorials_chinese" ["e"=1]
"CodecWang/opencv-python-tutorial" -> "amusi/awesome-object-detection"
"CodecWang/opencv-python-tutorial" -> "eastmountyxz/ImageProcessing-Python"
"CodecWang/opencv-python-tutorial" -> "ex2tron/OpenCV-Python-Tutorial"
"CodecWang/opencv-python-tutorial" -> "amusi/daily-paper-computer-vision"
"CodecWang/opencv-python-tutorial" -> "ShusenTang/Dive-into-DL-PyTorch" ["e"=1]
"ruiminshen/yolo2-pytorch" -> "marvis/pytorch-yolo2"
"ruiminshen/yolo2-pytorch" -> "longcw/yolo2-pytorch"
"ruiminshen/yolo2-pytorch" -> "ruiminshen/yolo-tf" ["e"=1]
"ruiminshen/yolo2-pytorch" -> "glample/Arnold" ["e"=1]
"ruiminshen/yolo2-pytorch" -> "Breakend/gym-extensions" ["e"=1]
"ruiminshen/yolo2-pytorch" -> "marvis/pytorch-yolo3"
"ruiminshen/yolo2-pytorch" -> "longcw/RoIAlign.pytorch"
"ruiminshen/yolo2-pytorch" -> "kuangliu/torchcv"
"ruiminshen/yolo2-pytorch" -> "felixgwu/mask_rcnn_pytorch"
"ruiminshen/yolo2-pytorch" -> "ShadowXZT/pytorch_RFCN"
"ruiminshen/yolo2-pytorch" -> "longcw/faster_rcnn_pytorch"
"ruiminshen/yolo2-pytorch" -> "cory8249/yolo2-pytorch" ["e"=1]
"ruiminshen/yolo2-pytorch" -> "soeaver/Pytorch_Mask_RCNN"
"ruiminshen/yolo2-pytorch" -> "andy-yun/pytorch-0.4-yolov3"
"ruiminshen/yolo2-pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"rwightman/gen-efficientnet-pytorch" -> "rwightman/efficientdet-pytorch"
"rwightman/gen-efficientnet-pytorch" -> "lukemelas/EfficientNet-PyTorch"
"rwightman/gen-efficientnet-pytorch" -> "facebookresearch/pycls"
"rwightman/gen-efficientnet-pytorch" -> "xiaolai-sqlai/mobilenetv3"
"rwightman/gen-efficientnet-pytorch" -> "facebookresearch/mobile-vision" ["e"=1]
"rwightman/gen-efficientnet-pytorch" -> "toandaominh1997/EfficientDet.Pytorch"
"rwightman/gen-efficientnet-pytorch" -> "kuan-wang/pytorch-mobilenet-v3" ["e"=1]
"rwightman/gen-efficientnet-pytorch" -> "megvii-model/ShuffleNet-Series"
"rwightman/gen-efficientnet-pytorch" -> "BloodAxe/pytorch-toolbelt"
"rwightman/gen-efficientnet-pytorch" -> "tensorflow/tpu"
"rwightman/gen-efficientnet-pytorch" -> "facebookresearch/FixRes"
"rwightman/gen-efficientnet-pytorch" -> "zhanghang1989/ResNeSt"
"rwightman/gen-efficientnet-pytorch" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"rwightman/gen-efficientnet-pytorch" -> "google-research/augmix"
"rwightman/gen-efficientnet-pytorch" -> "mit-han-lab/once-for-all" ["e"=1]
"PaddlePaddle/PGL" -> "alibaba/euler" ["e"=1]
"PaddlePaddle/PGL" -> "snap-stanford/ogb" ["e"=1]
"PaddlePaddle/PGL" -> "PaddlePaddle/PaddleHelix" ["e"=1]
"PaddlePaddle/PGL" -> "THUDM/CogDL" ["e"=1]
"PaddlePaddle/PGL" -> "alibaba/graph-learn" ["e"=1]
"PaddlePaddle/PGL" -> "PaddlePaddle/PARL" ["e"=1]
"PaddlePaddle/PGL" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/PGL" -> "dmlc/dgl" ["e"=1]
"PaddlePaddle/PGL" -> "PaddlePaddle/models"
"PaddlePaddle/PGL" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/PGL" -> "PaddlePaddle/Serving"
"PaddlePaddle/PGL" -> "PaddlePaddle/ERNIE" ["e"=1]
"PaddlePaddle/PGL" -> "shenweichen/GraphEmbedding" ["e"=1]
"PaddlePaddle/PGL" -> "williamleif/GraphSAGE" ["e"=1]
"PaddlePaddle/PGL" -> "facebookresearch/PyTorch-BigGraph" ["e"=1]
"princeton-vl/CornerNet" -> "princeton-vl/CornerNet-Lite"
"princeton-vl/CornerNet" -> "Duankaiwen/CenterNet"
"princeton-vl/CornerNet" -> "tianzhi0549/FCOS"
"princeton-vl/CornerNet" -> "xingyizhou/CenterNet"
"princeton-vl/CornerNet" -> "xingyizhou/ExtremeNet"
"princeton-vl/CornerNet" -> "tusen-ai/simpledet"
"princeton-vl/CornerNet" -> "GOATmessi8/RFBNet"
"princeton-vl/CornerNet" -> "msracver/Deformable-ConvNets"
"princeton-vl/CornerNet" -> "sfzhang15/RefineDet"
"princeton-vl/CornerNet" -> "mahyarnajibi/SNIPER"
"princeton-vl/CornerNet" -> "Tencent/ObjectDetection-OneStageDet"
"princeton-vl/CornerNet" -> "zhaoweicai/cascade-rcnn"
"princeton-vl/CornerNet" -> "amdegroot/ssd.pytorch"
"princeton-vl/CornerNet" -> "facebookresearch/maskrcnn-benchmark"
"princeton-vl/CornerNet" -> "sfzhang15/ATSS"
"sksq96/pytorch-summary" -> "TylerYep/torchinfo"
"sksq96/pytorch-summary" -> "lanpa/tensorboardX"
"sksq96/pytorch-summary" -> "szagoruyko/pytorchviz"
"sksq96/pytorch-summary" -> "Lyken17/pytorch-OpCounter"
"sksq96/pytorch-summary" -> "Cadene/pretrained-models.pytorch"
"sksq96/pytorch-summary" -> "NVIDIA/apex"
"sksq96/pytorch-summary" -> "pytorch/ignite"
"sksq96/pytorch-summary" -> "lukemelas/EfficientNet-PyTorch"
"sksq96/pytorch-summary" -> "sovrasov/flops-counter.pytorch"
"sksq96/pytorch-summary" -> "utkuozbulak/pytorch-cnn-visualizations"
"sksq96/pytorch-summary" -> "facebookresearch/maskrcnn-benchmark"
"sksq96/pytorch-summary" -> "albumentations-team/albumentations"
"sksq96/pytorch-summary" -> "fossasia/visdom"
"sksq96/pytorch-summary" -> "jwyang/faster-rcnn.pytorch"
"sksq96/pytorch-summary" -> "mdbloice/Augmentor"
"gzr2017/ImageProcessing100Wen" -> "CodecWang/opencv-python-tutorial"
"gzr2017/ImageProcessing100Wen" -> "oreillymedia/Learning-OpenCV-3_examples"
"gzr2017/ImageProcessing100Wen" -> "fendouai/OpenCVTutorials"
"gzr2017/ImageProcessing100Wen" -> "yoyoyo-yo/Gasyori100knock" ["e"=1]
"gzr2017/ImageProcessing100Wen" -> "JimmyHHua/opencv_tutorials"
"gzr2017/ImageProcessing100Wen" -> "spmallick/learnopencv"
"gzr2017/ImageProcessing100Wen" -> "makelove/OpenCV-Python-Tutorial"
"gzr2017/ImageProcessing100Wen" -> "KuKuXia/Image_Processing_100_Questions"
"gzr2017/ImageProcessing100Wen" -> "ShusenTang/Dive-into-DL-PyTorch" ["e"=1]
"gzr2017/ImageProcessing100Wen" -> "amusi/daily-paper-computer-vision"
"gzr2017/ImageProcessing100Wen" -> "hoya012/deep_learning_object_detection"
"gzr2017/ImageProcessing100Wen" -> "amusi/awesome-object-detection"
"gzr2017/ImageProcessing100Wen" -> "Sophia-11/Machine-Learning-Notes" ["e"=1]
"gzr2017/ImageProcessing100Wen" -> "QianMo/OpenCV3-Intro-Book-Src"
"gzr2017/ImageProcessing100Wen" -> "zergtant/pytorch-handbook" ["e"=1]
"sfzhang15/RefineDet" -> "GOATmessi8/RFBNet"
"sfzhang15/RefineDet" -> "zhaoweicai/cascade-rcnn"
"sfzhang15/RefineDet" -> "lzx1413/PytorchSSD"
"sfzhang15/RefineDet" -> "princeton-vl/CornerNet"
"sfzhang15/RefineDet" -> "szq0214/DSOD" ["e"=1]
"sfzhang15/RefineDet" -> "zengarden/light_head_rcnn"
"sfzhang15/RefineDet" -> "VDIGPKU/M2Det"
"sfzhang15/RefineDet" -> "mahyarnajibi/SNIPER"
"sfzhang15/RefineDet" -> "tusen-ai/simpledet"
"sfzhang15/RefineDet" -> "princeton-vl/CornerNet-Lite"
"sfzhang15/RefineDet" -> "msracver/Relation-Networks-for-Object-Detection"
"sfzhang15/RefineDet" -> "Duankaiwen/CenterNet"
"sfzhang15/RefineDet" -> "shicai/MobileNet-Caffe" ["e"=1]
"sfzhang15/RefineDet" -> "Robert-JunWang/Pelee" ["e"=1]
"sfzhang15/RefineDet" -> "weiliu89/caffe" ["e"=1]
"bentrevett/pytorch-image-classification" -> "hysts/pytorch_image_classification"
"bentrevett/pytorch-image-classification" -> "bentrevett/a-tour-of-pytorch-optimizers"
"bentrevett/pytorch-image-classification" -> "Mayurji/Image-Classification-PyTorch"
"bentrevett/pytorch-image-classification" -> "bentrevett/pytorch-sentiment-analysis" ["e"=1]
"bentrevett/pytorch-image-classification" -> "bentrevett/pytorch-seq2seq" ["e"=1]
"bentrevett/pytorch-image-classification" -> "weiaicunzai/awesome-image-classification"
"bentrevett/pytorch-image-classification" -> "bentrevett/pytorch-generative-models"
"bentrevett/pytorch-image-classification" -> "bentrevett/machine-learning-courses"
"bentrevett/pytorch-image-classification" -> "utkuozbulak/pytorch-custom-dataset-examples"
"bentrevett/pytorch-image-classification" -> "lxztju/pytorch_classification"
"bentrevett/pytorch-image-classification" -> "davidtvs/pytorch-lr-finder"
"bentrevett/pytorch-image-classification" -> "sgrvinod/a-PyTorch-Tutorial-to-Object-Detection"
"bentrevett/pytorch-image-classification" -> "bentrevett/pytorch-pos-tagging"
"bentrevett/pytorch-image-classification" -> "bearpaw/pytorch-classification"
"bentrevett/pytorch-image-classification" -> "weiaicunzai/pytorch-cifar100"
"ybabakhin/kaggle_salt_bes_phalanx" -> "tugstugi/pytorch-saltnet"
"ybabakhin/kaggle_salt_bes_phalanx" -> "SeuTao/TGS-Salt-Identification"
"ybabakhin/kaggle_salt_bes_phalanx" -> "amirassov/kaggle-imaterialist"
"ybabakhin/kaggle_salt_bes_phalanx" -> "sneddy/pneumothorax-segmentation"
"ybabakhin/kaggle_salt_bes_phalanx" -> "lRomul/argus-tgs-salt"
"ybabakhin/kaggle_salt_bes_phalanx" -> "pudae/kaggle-humpback"
"ybabakhin/kaggle_salt_bes_phalanx" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"ybabakhin/kaggle_salt_bes_phalanx" -> "selimsef/dsb2018_topcoders"
"ybabakhin/kaggle_salt_bes_phalanx" -> "SeuTao/Humpback-Whale-Identification"
"ybabakhin/kaggle_salt_bes_phalanx" -> "BloodAxe/pytorch-toolbelt"
"ybabakhin/kaggle_salt_bes_phalanx" -> "i-pan/kaggle-rsna18"
"ybabakhin/kaggle_salt_bes_phalanx" -> "earhian/Humpback-Whale-Identification-1st-"
"ybabakhin/kaggle_salt_bes_phalanx" -> "bestfitting/kaggle" ["e"=1]
"ybabakhin/kaggle_salt_bes_phalanx" -> "lyakaap/Kaggle-Carvana-3rd-Place-Solution"
"ybabakhin/kaggle_salt_bes_phalanx" -> "pudae/kaggle-hpa"
"SnailTyan/deep-learning-papers-translation" -> "hoya012/deep_learning_object_detection"
"SnailTyan/deep-learning-papers-translation" -> "amusi/awesome-object-detection"
"SnailTyan/deep-learning-papers-translation" -> "amusi/daily-paper-computer-vision"
"SnailTyan/deep-learning-papers-translation" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"SnailTyan/deep-learning-papers-translation" -> "qqwweee/keras-yolo3"
"SnailTyan/deep-learning-papers-translation" -> "jwyang/faster-rcnn.pytorch"
"SnailTyan/deep-learning-papers-translation" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"SnailTyan/deep-learning-papers-translation" -> "chenyuntc/pytorch-book" ["e"=1]
"SnailTyan/deep-learning-papers-translation" -> "amdegroot/ssd.pytorch"
"SnailTyan/deep-learning-papers-translation" -> "eriklindernoren/PyTorch-YOLOv3"
"SnailTyan/deep-learning-papers-translation" -> "eragonruan/text-detection-ctpn" ["e"=1]
"SnailTyan/deep-learning-papers-translation" -> "chenyuntc/simple-faster-rcnn-pytorch"
"SnailTyan/deep-learning-papers-translation" -> "xiaofengShi/CHINESE-OCR" ["e"=1]
"SnailTyan/deep-learning-papers-translation" -> "zergtant/pytorch-handbook" ["e"=1]
"SnailTyan/deep-learning-papers-translation" -> "balancap/SSD-Tensorflow" ["e"=1]
"mahyarnajibi/SNIPER" -> "tusen-ai/simpledet"
"mahyarnajibi/SNIPER" -> "princeton-vl/CornerNet"
"mahyarnajibi/SNIPER" -> "sfzhang15/RefineDet"
"mahyarnajibi/SNIPER" -> "GOATmessi8/RFBNet"
"mahyarnajibi/SNIPER" -> "VDIGPKU/M2Det"
"mahyarnajibi/SNIPER" -> "tianzhi0549/FCOS"
"mahyarnajibi/SNIPER" -> "zhaoweicai/cascade-rcnn"
"mahyarnajibi/SNIPER" -> "msracver/Relation-Networks-for-Object-Detection"
"mahyarnajibi/SNIPER" -> "xingyizhou/ExtremeNet"
"mahyarnajibi/SNIPER" -> "msracver/Deformable-ConvNets"
"mahyarnajibi/SNIPER" -> "princeton-vl/CornerNet-Lite"
"mahyarnajibi/SNIPER" -> "zengarden/light_head_rcnn"
"mahyarnajibi/SNIPER" -> "vacancy/PreciseRoIPooling"
"mahyarnajibi/SNIPER" -> "Duankaiwen/CenterNet"
"mahyarnajibi/SNIPER" -> "zjhuang22/maskscoring_rcnn"
"Cartucho/mAP" -> "rafaelpadilla/Object-Detection-Metrics"
"Cartucho/mAP" -> "qqwweee/keras-yolo3"
"Cartucho/mAP" -> "xingyizhou/CenterNet"
"Cartucho/mAP" -> "eriklindernoren/PyTorch-YOLOv3"
"Cartucho/mAP" -> "Tianxiaomo/pytorch-YOLOv4"
"Cartucho/mAP" -> "amdegroot/ssd.pytorch"
"Cartucho/mAP" -> "ultralytics/yolov3"
"Cartucho/mAP" -> "hoya012/deep_learning_object_detection"
"Cartucho/mAP" -> "amusi/awesome-object-detection"
"Cartucho/mAP" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"Cartucho/mAP" -> "jwyang/faster-rcnn.pytorch"
"Cartucho/mAP" -> "tianzhi0549/FCOS"
"Cartucho/mAP" -> "AlexeyAB/darknet"
"Cartucho/mAP" -> "YunYang1994/tensorflow-yolov3" ["e"=1]
"Cartucho/mAP" -> "Tencent/ObjectDetection-OneStageDet"
"voicerepublic/faye" -> "voicerepublic/activeadmin-dragonfly"
"voicerepublic/faye" -> "voicerepublic/linux"
"voicerepublic/faye" -> "voicerepublic/upscuits"
"voicerepublic/faye" -> "voicerepublic/transitions"
"voicerepublic/faye" -> "voicerepublic/vr-api-specs"
"voicerepublic/faye" -> "voicerepublic/voicerepublic_dev"
"voicerepublic/faye" -> "voicerepublic/vr-mobile"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/activeadmin-dragonfly"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/upscuits"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/linux"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/faye"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/vr-mobile"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/transitions"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/vr-api-specs"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/vr-devbox"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/vr-knowledge-base-audio-processing"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/pdf-viewer"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/vr-fidelity"
"voicerepublic/voicerepublic_dev" -> "voicerepublic/vr-logorrhoe"
"fossasia/in.pslab.io" -> "fossasia/fossasia-jekyll-theme"
"fossasia/fossasia-jekyll-theme" -> "fossasia/in.pslab.io"
"fossasia/fossasia-jekyll-theme" -> "fossasia/2021.codeheat.org"
"fossasia/2021.codeheat.org" -> "fossasia/eventyay-artwork"
"fossasia/2021.codeheat.org" -> "fossasia/fossasia-jekyll-theme"
"fossasia/eventyay-artwork" -> "fossasia/2021.codeheat.org"
"fossasia/eventyay-artwork" -> "fossasia/fossasia-jekyll-theme"
"fossasia/summit.fossasia.org" -> "fossasia/photos.fossasia.org"
"fossasia/summit.fossasia.org" -> "fossasia/susi_python"
"fossasia/summit.fossasia.org" -> "fossasia/susi_speech_server"
"fossasia/summit.fossasia.org" -> "fossasia/FOSSASIA-Office"
"fossasia/summit.fossasia.org" -> "fossasia/susi_installer"
"fossasia/summit.fossasia.org" -> "voicerepublic/vr-api-specs"
"fossasia/summit.fossasia.org" -> "voicerepublic/linux"
"fossasia/summit.fossasia.org" -> "fossasia/eventyay-artwork"
"fossasia/photos.fossasia.org" -> "fossasia/susi_python"
"fossasia/photos.fossasia.org" -> "fossasia/FOSSASIA-Office"
"fossasia/photos.fossasia.org" -> "fossasia/susi_speech_server"
"fossasia/susi_installer" -> "fossasia/susi_python"
"fossasia/susi_installer" -> "fossasia/photos.fossasia.org"
"fossasia/susi_installer" -> "fossasia/susi_speech_server"
"fossasia/susi_installer" -> "fossasia/FOSSASIA-Office"
"fossasia/susi_installer" -> "voicerepublic/vr-api-specs"
"fossasia/susi_installer" -> "voicerepublic/vr-devbox"
"fossasia/susi_installer" -> "fossasia/summit.fossasia.org"
"fossasia/susi_installer" -> "voicerepublic/vr-fidelity"
"fossasia/susi_installer" -> "voicerepublic/linux"
"fossasia/susi_installer" -> "voicerepublic/faye"
"fossasia/susi_installer" -> "voicerepublic/upscuits"
"fossasia/susi_installer" -> "voicerepublic/transitions"
"fossasia/susi_installer" -> "voicerepublic/activeadmin-dragonfly"
"fossasia/susi_installer" -> "voicerepublic/vr-streambox"
"fossasia/susi_installer" -> "voicerepublic/vr-mobile"
"voicerepublic/vr-mobile" -> "voicerepublic/activeadmin-dragonfly"
"voicerepublic/vr-mobile" -> "voicerepublic/upscuits"
"voicerepublic/vr-mobile" -> "voicerepublic/vr-api-specs"
"voicerepublic/vr-mobile" -> "voicerepublic/transitions"
"voicerepublic/vr-mobile" -> "voicerepublic/voicerepublic_dev"
"voicerepublic/vr-mobile" -> "voicerepublic/faye"
"voicerepublic/vr-fidelity" -> "voicerepublic/vr-devbox"
"voicerepublic/vr-fidelity" -> "voicerepublic/pdf-viewer"
"voicerepublic/vr-fidelity" -> "voicerepublic/vr-knowledge-base-audio-processing"
"voicerepublic/vr-fidelity" -> "voicerepublic/vr-streambox"
"voicerepublic/vr-fidelity" -> "voicerepublic/vr-logorrhoe"
"voicerepublic/vr-fidelity" -> "voicerepublic/linux"
"voicerepublic/vr-fidelity" -> "voicerepublic/faye"
"voicerepublic/vr-devbox" -> "voicerepublic/vr-fidelity"
"voicerepublic/vr-devbox" -> "voicerepublic/vr-knowledge-base-audio-processing"
"voicerepublic/vr-devbox" -> "voicerepublic/pdf-viewer"
"voicerepublic/vr-devbox" -> "voicerepublic/vr-streambox"
"voicerepublic/vr-devbox" -> "voicerepublic/vr-logorrhoe"
"voicerepublic/vr-devbox" -> "voicerepublic/linux"
"voicerepublic/vr-devbox" -> "voicerepublic/activeadmin-dragonfly"
"voicerepublic/vr-devbox" -> "voicerepublic/transitions"
"voicerepublic/vr-devbox" -> "voicerepublic/vr-backoffice"
"voicerepublic/vr-devbox" -> "voicerepublic/vr-api-specs"
"voicerepublic/vr-knowledge-base-audio-processing" -> "voicerepublic/vr-devbox"
"voicerepublic/vr-knowledge-base-audio-processing" -> "voicerepublic/pdf-viewer"
"voicerepublic/vr-knowledge-base-audio-processing" -> "voicerepublic/vr-logorrhoe"
"voicerepublic/vr-knowledge-base-audio-processing" -> "voicerepublic/vr-streambox"
"voicerepublic/vr-knowledge-base-audio-processing" -> "voicerepublic/vr-fidelity"
"voicerepublic/vr-knowledge-base-audio-processing" -> "voicerepublic/linux"
"voicerepublic/vr-knowledge-base-audio-processing" -> "voicerepublic/activeadmin-dragonfly"
"voicerepublic/vr-knowledge-base-audio-processing" -> "voicerepublic/transitions"
"voicerepublic/vr-streambox" -> "voicerepublic/vr-logorrhoe"
"voicerepublic/vr-streambox" -> "voicerepublic/vr-devbox"
"voicerepublic/vr-streambox" -> "voicerepublic/vr-knowledge-base-audio-processing"
"voicerepublic/vr-streambox" -> "voicerepublic/vr-fidelity"
"voicerepublic/vr-streambox" -> "voicerepublic/pdf-viewer"
"voicerepublic/vr-logorrhoe" -> "voicerepublic/vr-streambox"
"voicerepublic/vr-logorrhoe" -> "voicerepublic/pdf-viewer"
"voicerepublic/vr-logorrhoe" -> "voicerepublic/vr-devbox"
"voicerepublic/vr-logorrhoe" -> "voicerepublic/vr-knowledge-base-audio-processing"
"voicerepublic/vr-logorrhoe" -> "voicerepublic/vr-backoffice"
"voicerepublic/vr-logorrhoe" -> "voicerepublic/vr-fidelity"
"fossasia/susi_speech_server" -> "fossasia/FOSSASIA-Office"
"fossasia/susi_speech_server" -> "fossasia/susi_python"
"fossasia/susi_speech_server" -> "fossasia/photos.fossasia.org"
"fossasia/FOSSASIA-Office" -> "fossasia/susi_speech_server"
"fossasia/FOSSASIA-Office" -> "fossasia/susi_python"
"fossasia/FOSSASIA-Office" -> "fossasia/photos.fossasia.org"
"voicerepublic/vr-backoffice" -> "voicerepublic/vr-logorrhoe"
"dmlc/gluon-cv" -> "tusen-ai/simpledet"
"dmlc/gluon-cv" -> "xingyizhou/CenterNet"
"dmlc/gluon-cv" -> "amusi/awesome-object-detection"
"dmlc/gluon-cv" -> "facebookresearch/maskrcnn-benchmark"
"dmlc/gluon-cv" -> "msracver/Deformable-ConvNets"
"dmlc/gluon-cv" -> "princeton-vl/CornerNet"
"dmlc/gluon-cv" -> "tianzhi0549/FCOS"
"dmlc/gluon-cv" -> "Cadene/pretrained-models.pytorch"
"dmlc/gluon-cv" -> "Tencent/ObjectDetection-OneStageDet"
"dmlc/gluon-cv" -> "hoya012/deep_learning_object_detection"
"dmlc/gluon-cv" -> "lukemelas/EfficientNet-PyTorch"
"dmlc/gluon-cv" -> "zhanghang1989/ResNeSt"
"dmlc/gluon-cv" -> "open-mmlab/mmdetection"
"dmlc/gluon-cv" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"dmlc/gluon-cv" -> "aleju/imgaug"
"Udayraj123/OMRChecker" -> "iansan5653/open-mcr"
"Udayraj123/OMRChecker" -> "rbaron/omr"
"Udayraj123/OMRChecker" -> "Udayraj123/AndroidOMRHelper"
"Udayraj123/OMRChecker" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"Udayraj123/OMRChecker" -> "mythrex/OMR-Scanner"
"Udayraj123/OMRChecker" -> "jansenfelipe/omr"
"Udayraj123/OMRChecker" -> "MohawkMEDIC/omrmarkengine"
"Udayraj123/OMRChecker" -> "SullyChen/Automatic-Grading-OpenCV-Python"
"Udayraj123/OMRChecker" -> "andrewdcampbell/OpenCV-Document-Scanner" ["e"=1]
"Udayraj123/OMRChecker" -> "bthicks/OMR-Grader"
"Udayraj123/OMRChecker" -> "letssolvetogether/OMRChecker"
"Udayraj123/OMRChecker" -> "Practical-CV/OMR-Scanner-and-Test-Grader-using-OpenCV"
"Udayraj123/OMRChecker" -> "Bonfire/OptiGrader"
"Udayraj123/OMRChecker" -> "sakethbachu/OMR-scanner"
"Udayraj123/OMRChecker" -> "IITGuwahati-AI/Learning-Content" ["e"=1]
"voicerepublic/pdf-viewer" -> "voicerepublic/vr-devbox"
"voicerepublic/pdf-viewer" -> "voicerepublic/vr-knowledge-base-audio-processing"
"voicerepublic/pdf-viewer" -> "voicerepublic/vr-logorrhoe"
"voicerepublic/pdf-viewer" -> "voicerepublic/vr-fidelity"
"voicerepublic/pdf-viewer" -> "voicerepublic/vr-streambox"
"voicerepublic/pdf-viewer" -> "voicerepublic/linux"
"pytorch/ignite" -> "skorch-dev/skorch" ["e"=1]
"pytorch/ignite" -> "lanpa/tensorboardX"
"pytorch/ignite" -> "catalyst-team/catalyst"
"pytorch/ignite" -> "pytorch/tnt"
"pytorch/ignite" -> "nitrain/nitrain"
"pytorch/ignite" -> "sksq96/pytorch-summary"
"pytorch/ignite" -> "pytorch/text" ["e"=1]
"pytorch/ignite" -> "Lightning-AI/pytorch-lightning"
"pytorch/ignite" -> "fossasia/visdom"
"pytorch/ignite" -> "NVIDIA/apex"
"pytorch/ignite" -> "Cadene/pretrained-models.pytorch"
"pytorch/ignite" -> "allenai/allennlp" ["e"=1]
"pytorch/ignite" -> "arogozhnikov/einops"
"pytorch/ignite" -> "pytorch/captum"
"pytorch/ignite" -> "albumentations-team/albumentations"
"qubvel/segmentation_models" -> "qubvel-org/segmentation_models.pytorch"
"qubvel/segmentation_models" -> "divamgupta/image-segmentation-keras" ["e"=1]
"qubvel/segmentation_models" -> "qubvel/classification_models"
"qubvel/segmentation_models" -> "mrgloom/awesome-semantic-segmentation"
"qubvel/segmentation_models" -> "zhixuhao/unet" ["e"=1]
"qubvel/segmentation_models" -> "albumentations-team/albumentations"
"qubvel/segmentation_models" -> "qubvel/efficientnet"
"qubvel/segmentation_models" -> "bonlime/keras-deeplab-v3-plus" ["e"=1]
"qubvel/segmentation_models" -> "JunMa11/SegLossOdyssey" ["e"=1]
"qubvel/segmentation_models" -> "MrGiovanni/UNetPlusPlus" ["e"=1]
"qubvel/segmentation_models" -> "aleju/imgaug"
"qubvel/segmentation_models" -> "GeorgeSeif/Semantic-Segmentation-Suite" ["e"=1]
"qubvel/segmentation_models" -> "Cadene/pretrained-models.pytorch"
"qubvel/segmentation_models" -> "ShawnBIT/UNet-family" ["e"=1]
"qubvel/segmentation_models" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"kornia/kornia" -> "facebookresearch/pytorch3d" ["e"=1]
"kornia/kornia" -> "albumentations-team/albumentations"
"kornia/kornia" -> "huggingface/pytorch-image-models"
"kornia/kornia" -> "arogozhnikov/einops"
"kornia/kornia" -> "Lightning-AI/pytorch-lightning"
"kornia/kornia" -> "qubvel-org/segmentation_models.pytorch"
"kornia/kornia" -> "aleju/imgaug"
"kornia/kornia" -> "KevinMusgrave/pytorch-metric-learning"
"kornia/kornia" -> "facebookresearch/detr"
"kornia/kornia" -> "NVIDIAGameWorks/kaolin" ["e"=1]
"kornia/kornia" -> "lucidrains/vit-pytorch"
"kornia/kornia" -> "facebookresearch/detectron2"
"kornia/kornia" -> "colmap/colmap" ["e"=1]
"kornia/kornia" -> "NVIDIA/DALI"
"kornia/kornia" -> "lukemelas/EfficientNet-PyTorch"
"tomrunia/PyTorchWavelets" -> "edouardoyallon/pyscatwave"
"tomrunia/PyTorchWavelets" -> "fbcotter/pytorch_wavelets"
"tomrunia/PyTorchWavelets" -> "v0lta/PyTorch-Wavelet-Toolbox"
"tomrunia/PyTorchWavelets" -> "yoyolicoris/pytorch-NMF"
"tomrunia/PyTorchWavelets" -> "aaren/wavelets"
"tomrunia/PyTorchWavelets" -> "alsauve/scaleogram"
"tomrunia/PyTorchWavelets" -> "kymatio/kymatio"
"omry/omegaconf" -> "facebookresearch/hydra"
"omry/omegaconf" -> "Lightning-AI/torchmetrics"
"omry/omegaconf" -> "rbgirshick/yacs"
"omry/omegaconf" -> "arogozhnikov/einops"
"omry/omegaconf" -> "facebookresearch/hiplot" ["e"=1]
"omry/omegaconf" -> "facebookincubator/submitit" ["e"=1]
"omry/omegaconf" -> "ashleve/lightning-hydra-template"
"omry/omegaconf" -> "aimhubio/aim" ["e"=1]
"omry/omegaconf" -> "patrick-kidger/torchtyping" ["e"=1]
"omry/omegaconf" -> "Lightning-Universe/lightning-bolts"
"omry/omegaconf" -> "patrick-kidger/jaxtyping" ["e"=1]
"omry/omegaconf" -> "onelivesleft/PrettyErrors" ["e"=1]
"omry/omegaconf" -> "IDSIA/sacred" ["e"=1]
"omry/omegaconf" -> "google/gin-config" ["e"=1]
"omry/omegaconf" -> "facebookresearch/fairscale" ["e"=1]
"SkalskiP/make-sense" -> "microsoft/VoTT"
"SkalskiP/make-sense" -> "HumanSignal/awesome-data-labeling"
"SkalskiP/make-sense" -> "cvat-ai/cvat"
"SkalskiP/make-sense" -> "Labelbox/labelbox-custom-labeling-apps"
"SkalskiP/make-sense" -> "HumanSignal/label-studio"
"SkalskiP/make-sense" -> "l3p-cv/lost"
"SkalskiP/make-sense" -> "jsbroks/coco-annotator"
"SkalskiP/make-sense" -> "UniversalDataTool/universal-data-tool"
"SkalskiP/make-sense" -> "obss/sahi"
"SkalskiP/make-sense" -> "wkentaro/labelme"
"SkalskiP/make-sense" -> "bit-bots/imagetagger"
"SkalskiP/make-sense" -> "HumanSignal/labelImg"
"SkalskiP/make-sense" -> "abreheret/PixelAnnotationTool"
"SkalskiP/make-sense" -> "autodistill/autodistill" ["e"=1]
"SkalskiP/make-sense" -> "albumentations-team/albumentations"
"Luolc/AdaBound" -> "LiyuanLucasLiu/RAdam"
"Luolc/AdaBound" -> "zjhuang22/maskscoring_rcnn"
"Luolc/AdaBound" -> "lanpa/tensorboardX"
"Luolc/AdaBound" -> "lukemelas/EfficientNet-PyTorch"
"Luolc/AdaBound" -> "Cadene/pretrained-models.pytorch"
"Luolc/AdaBound" -> "zihangdai/xlnet" ["e"=1]
"Luolc/AdaBound" -> "taki0112/Tensorflow-Cookbook" ["e"=1]
"Luolc/AdaBound" -> "facebookresearch/maskrcnn-benchmark"
"Luolc/AdaBound" -> "donnyyou/torchcv"
"Luolc/AdaBound" -> "jettify/pytorch-optimizer"
"Luolc/AdaBound" -> "ajbrock/BigGAN-PyTorch" ["e"=1]
"Luolc/AdaBound" -> "tensorflow/lingvo" ["e"=1]
"Luolc/AdaBound" -> "msracver/Deformable-ConvNets"
"Luolc/AdaBound" -> "zhanghang1989/ResNeSt"
"Luolc/AdaBound" -> "juntang-zhuang/Adabelief-Optimizer"
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/Mastering-OpenCV-4-with-Python"
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/Learning-OpenCV-5-Computer-Vision-with-Python-Fourth-Edition"
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/Modern-Computer-Vision-with-PyTorch" ["e"=1]
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "moelgendy/deep_learning_for_vision_systems"
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition"
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/Qt-5-and-OpenCV-4-Computer-Vision-Projects" ["e"=1]
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/Hands-On-Computer-Vision-with-TensorFlow-2" ["e"=1]
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/OpenCV-4-with-Python-Blueprints-Second-Edition"
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/OpenCV3-Computer-Vision-Application-Programming-Cookbook-Third-Edition"
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/Python-Natural-Language-Processing-Cookbook"
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/Tensorflow-2.0-Computer-Vision-Cookbook" ["e"=1]
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "dloperab/PyImageSearch-CV-DL-CrashCourse"
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" -> "PacktPublishing/OpenCV-3-Computer-Vision-with-Python-Cookbook"
"gsurma/image_classifier" -> "IBM/image-classification-using-cnn-and-keras"
"lucasjinreal/alfred" -> "lucasjinreal/thor"
"lucasjinreal/alfred" -> "NVIDIA/runx"
"lucasjinreal/alfred" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"lucasjinreal/alfred" -> "GOATmessi8/ASFF"
"lucasjinreal/alfred" -> "hhaAndroid/mmdetection-mini"
"lucasjinreal/alfred" -> "WangYueFt/detr3d" ["e"=1]
"lucasjinreal/alfred" -> "lucasjinreal/yolov7_d2"
"lucasjinreal/alfred" -> "joe-siyuan-qiao/DetectoRS"
"lucasjinreal/alfred" -> "lucasjinreal/nb" ["e"=1]
"lucasjinreal/alfred" -> "xingyizhou/CenterNet2"
"lucasjinreal/alfred" -> "ming71/mmdetection-annotated"
"lucasjinreal/alfred" -> "chaytonmin/Awesome-BEV-Perception-Multi-Cameras" ["e"=1]
"lucasjinreal/alfred" -> "V2AI/Det3D" ["e"=1]
"lucasjinreal/alfred" -> "open-mmlab/OpenPCDet" ["e"=1]
"lucasjinreal/alfred" -> "microsoft/RepPoints"
"yngz/cs-roadmap" -> "srcolinas/roadmap-to-AI"
"yngz/cs-roadmap" -> "siAyush/Data-Structure-and-Algorithms-Study-Plan"
"yngz/cs-roadmap" -> "shiv4nsh/awesome-computer-science-resources" ["e"=1]
"yngz/cs-roadmap" -> "orsanawwad/awesome-roadmaps" ["e"=1]
"yngz/cs-roadmap" -> "luuductrung1234/dev-roadmap"
"yngz/cs-roadmap" -> "surajrampure/berkeley-cs-courses" ["e"=1]
"yngz/cs-roadmap" -> "JsonChao/ML-Roadmap"
"yngz/cs-roadmap" -> "AB1908/CS-Books" ["e"=1]
"yngz/cs-roadmap" -> "yngz/cs61b" ["e"=1]
"marcusklasson/GroceryStoreDataset" -> "PhilJd/freiburg_groceries_dataset"
"marcusklasson/GroceryStoreDataset" -> "gulvarol/grocerydataset"
"marcusklasson/GroceryStoreDataset" -> "abhinavsagar/Grocery-Product-Classification"
"marcusklasson/GroceryStoreDataset" -> "empathy87/nn-grocery-shelves"
"marcusklasson/GroceryStoreDataset" -> "tobiagru/ObjectDetectionGroceryProducts"
"timgaripov/swa" -> "pytorch/contrib"
"timgaripov/swa" -> "timgaripov/dnn-mode-connectivity"
"timgaripov/swa" -> "benathi/fastswa-semi-sup"
"timgaripov/swa" -> "wjmaddox/swa_gaussian" ["e"=1]
"timgaripov/swa" -> "facebookresearch/mixup-cifar10"
"timgaripov/swa" -> "kakaobrain/fast-autoaugment"
"timgaripov/swa" -> "BloodAxe/pytorch-toolbelt"
"timgaripov/swa" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"timgaripov/swa" -> "LiyuanLucasLiu/RAdam"
"timgaripov/swa" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"timgaripov/swa" -> "ZFTurbo/Weighted-Boxes-Fusion"
"timgaripov/swa" -> "earhian/Humpback-Whale-Identification-1st-"
"timgaripov/swa" -> "clovaai/CutMix-PyTorch"
"timgaripov/swa" -> "CuriousAI/mean-teacher"
"timgaripov/swa" -> "kemaloksuz/ObjectDetectionImbalance"
"roytseng-tw/Detectron.pytorch" -> "facebookresearch/maskrcnn-benchmark"
"roytseng-tw/Detectron.pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"roytseng-tw/Detectron.pytorch" -> "jwyang/faster-rcnn.pytorch"
"roytseng-tw/Detectron.pytorch" -> "longcw/faster_rcnn_pytorch"
"roytseng-tw/Detectron.pytorch" -> "ShuLiu1993/PANet"
"roytseng-tw/Detectron.pytorch" -> "multimodallearning/pytorch-mask-rcnn"
"roytseng-tw/Detectron.pytorch" -> "princeton-vl/CornerNet"
"roytseng-tw/Detectron.pytorch" -> "msracver/Deformable-ConvNets"
"roytseng-tw/Detectron.pytorch" -> "jwyang/fpn.pytorch"
"roytseng-tw/Detectron.pytorch" -> "longcw/yolo2-pytorch"
"roytseng-tw/Detectron.pytorch" -> "amdegroot/ssd.pytorch"
"roytseng-tw/Detectron.pytorch" -> "ignacio-rocco/detectorch"
"roytseng-tw/Detectron.pytorch" -> "tianzhi0549/FCOS"
"roytseng-tw/Detectron.pytorch" -> "Cadene/pretrained-models.pytorch"
"roytseng-tw/Detectron.pytorch" -> "CSAILVision/semantic-segmentation-pytorch" ["e"=1]
"victoresque/pytorch-template" -> "MrGemy95/Tensorflow-Project-Template" ["e"=1]
"victoresque/pytorch-template" -> "moemen95/Pytorch-Project-Template"
"victoresque/pytorch-template" -> "ashleve/lightning-hydra-template"
"victoresque/pytorch-template" -> "boost-devs/ai-tech-interview" ["e"=1]
"victoresque/pytorch-template" -> "lanpa/tensorboardX"
"victoresque/pytorch-template" -> "Lightning-AI/pytorch-lightning"
"victoresque/pytorch-template" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"victoresque/pytorch-template" -> "Cadene/pretrained-models.pytorch"
"victoresque/pytorch-template" -> "bharathgs/Awesome-pytorch-list" ["e"=1]
"victoresque/pytorch-template" -> "sksq96/pytorch-summary"
"victoresque/pytorch-template" -> "L1aoXingyu/Deep-Learning-Project-Template" ["e"=1]
"victoresque/pytorch-template" -> "arogozhnikov/einops"
"victoresque/pytorch-template" -> "pytorch/examples"
"victoresque/pytorch-template" -> "pytorch/ignite"
"victoresque/pytorch-template" -> "zzsza/Boostcamp-AI-Tech-Product-Serving" ["e"=1]
"longcw/RoIAlign.pytorch" -> "ignacio-rocco/detectorch"
"longcw/RoIAlign.pytorch" -> "wjchaoGit/Group-Activity-Recognition" ["e"=1]
"longcw/RoIAlign.pytorch" -> "soeaver/Pytorch_Mask_RCNN"
"longcw/RoIAlign.pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"longcw/RoIAlign.pytorch" -> "roytseng-tw/Detectron.pytorch"
"longcw/RoIAlign.pytorch" -> "1zb/deformable-convolution-pytorch"
"longcw/RoIAlign.pytorch" -> "longcw/faster_rcnn_pytorch"
"longcw/RoIAlign.pytorch" -> "multimodallearning/pytorch-mask-rcnn"
"longcw/RoIAlign.pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"longcw/RoIAlign.pytorch" -> "wannabeOG/Mask-RCNN"
"longcw/RoIAlign.pytorch" -> "vacancy/PreciseRoIPooling"
"longcw/RoIAlign.pytorch" -> "jwyang/fpn.pytorch"
"longcw/RoIAlign.pytorch" -> "kuangliu/torchcv"
"longcw/RoIAlign.pytorch" -> "AceCoooool/RoIAlign-RoIPool-pytorch"
"longcw/RoIAlign.pytorch" -> "felixgwu/mask_rcnn_pytorch"
"lzx1413/PytorchSSD" -> "ShuangXieIrene/ssds.pytorch"
"lzx1413/PytorchSSD" -> "GOATmessi8/RFBNet"
"lzx1413/PytorchSSD" -> "luuuyi/RefineDet.PyTorch"
"lzx1413/PytorchSSD" -> "sfzhang15/RefineDet"
"lzx1413/PytorchSSD" -> "VDIGPKU/M2Det"
"lzx1413/PytorchSSD" -> "yqyao/SSD_Pytorch"
"lzx1413/PytorchSSD" -> "lufficc/SSD"
"lzx1413/PytorchSSD" -> "princeton-vl/CornerNet"
"lzx1413/PytorchSSD" -> "ruoqianguo/DetNet_pytorch"
"lzx1413/PytorchSSD" -> "amdegroot/ssd.pytorch"
"lzx1413/PytorchSSD" -> "ruoqianguo/cascade-rcnn_Pytorch"
"lzx1413/PytorchSSD" -> "VDIGPKU/CFENet"
"lzx1413/PytorchSSD" -> "jwyang/fpn.pytorch"
"lzx1413/PytorchSSD" -> "qfgaohao/pytorch-ssd"
"lzx1413/PytorchSSD" -> "Stinky-Tofu/Stronger-yolo"
"Labelbox/labelbox-custom-labeling-apps" -> "abreheret/PixelAnnotationTool"
"Labelbox/labelbox-custom-labeling-apps" -> "microsoft/VoTT"
"Labelbox/labelbox-custom-labeling-apps" -> "christopher5106/FastAnnotationTool" ["e"=1]
"Labelbox/labelbox-custom-labeling-apps" -> "Labelbox/labelbox-python"
"Labelbox/labelbox-custom-labeling-apps" -> "Hitachi-Automotive-And-Industry-Lab/semantic-segmentation-editor" ["e"=1]
"Labelbox/labelbox-custom-labeling-apps" -> "NaturalIntelligence/imglab"
"Labelbox/labelbox-custom-labeling-apps" -> "CSAILVision/LabelMeAnnotationTool"
"Labelbox/labelbox-custom-labeling-apps" -> "jsbroks/coco-annotator"
"Labelbox/labelbox-custom-labeling-apps" -> "SkalskiP/make-sense"
"Labelbox/labelbox-custom-labeling-apps" -> "Cartucho/OpenLabeling"
"Labelbox/labelbox-custom-labeling-apps" -> "cvat-ai/cvat"
"Labelbox/labelbox-custom-labeling-apps" -> "bit-bots/imagetagger"
"Labelbox/labelbox-custom-labeling-apps" -> "virajmavani/semi-auto-image-annotation-tool"
"Labelbox/labelbox-custom-labeling-apps" -> "HumanSignal/awesome-data-labeling"
"Labelbox/labelbox-custom-labeling-apps" -> "visipedia/annotation_tools"
"zengarden/light_head_rcnn" -> "chenyilun95/tf-cpn" ["e"=1]
"zengarden/light_head_rcnn" -> "sfzhang15/RefineDet"
"zengarden/light_head_rcnn" -> "zhaoweicai/cascade-rcnn"
"zengarden/light_head_rcnn" -> "terrychenism/Deformable-ConvNets" ["e"=1]
"zengarden/light_head_rcnn" -> "szq0214/DSOD" ["e"=1]
"zengarden/light_head_rcnn" -> "bharatsingh430/soft-nms" ["e"=1]
"zengarden/light_head_rcnn" -> "GOATmessi8/RFBNet"
"zengarden/light_head_rcnn" -> "HiKapok/X-Detector"
"zengarden/light_head_rcnn" -> "mahyarnajibi/SNIPER"
"zengarden/light_head_rcnn" -> "chengsq/pytorch-lighthead"
"zengarden/light_head_rcnn" -> "farmingyard/ShuffleNet" ["e"=1]
"zengarden/light_head_rcnn" -> "ijkguo/mx-rcnn" ["e"=1]
"zengarden/light_head_rcnn" -> "miaow1988/ShuffleNet_V2_pytorch_caffe" ["e"=1]
"zengarden/light_head_rcnn" -> "tusen-ai/simpledet"
"zengarden/light_head_rcnn" -> "TuSimple/mx-maskrcnn" ["e"=1]
"PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" -> "PacktPublishing/Mastering-OpenCV-4-Third-Edition"
"PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" -> "PacktPublishing/Qt-5-and-OpenCV-4-Computer-Vision-Projects" ["e"=1]
"PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" -> "PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" ["e"=1]
"PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" -> "fengzhenHIT/learnOpenCV4"
"PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" -> "PacktPublishing/Building-Computer-Vision-Projects-with-OpenCV4-and-CPlusPlus"
"PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" -> "oreillymedia/Learning-OpenCV-3_examples"
"seominseok0429/pytorch-warmup-cosine-lr" -> "seominseok0429/inception-I3D-NON-LOCAL"
"seominseok0429/pytorch-warmup-cosine-lr" -> "seominseok0429/cifar10-mobilenetv2-pytorch"
"seominseok0429/pytorch-warmup-cosine-lr" -> "J911/DeepLabV3Plus-for-Beginners"
"seominseok0429/pytorch-warmup-cosine-lr" -> "J911/WRN-pytorch"
"seominseok0429/pytorch-warmup-cosine-lr" -> "DaehanKim-Korea/ResNet_SSD_Pytorch"
"lars76/kmeans-anchor-boxes" -> "PaulChongPeng/darknet" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "GOATmessi8/ASFF"
"lars76/kmeans-anchor-boxes" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "PengyiZhang/SlimYOLOv3" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "princeton-vl/CornerNet"
"lars76/kmeans-anchor-boxes" -> "fsx950223/mobilenetv2-yolov3" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "Stinky-Tofu/Stronger-yolo"
"lars76/kmeans-anchor-boxes" -> "ruoqianguo/DetNet_pytorch"
"lars76/kmeans-anchor-boxes" -> "VDIGPKU/M2Det"
"lars76/kmeans-anchor-boxes" -> "Tencent/ObjectDetection-OneStageDet"
"lars76/kmeans-anchor-boxes" -> "ChenYingpeng/caffe-yolov3" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "princeton-vl/CornerNet-Lite"
"lars76/kmeans-anchor-boxes" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "GOATmessi8/RFBNet"
"lufficc/SSD" -> "amdegroot/ssd.pytorch"
"lufficc/SSD" -> "qfgaohao/pytorch-ssd"
"lufficc/SSD" -> "lzx1413/PytorchSSD"
"lufficc/SSD" -> "GOATmessi8/RFBNet"
"lufficc/SSD" -> "ShuangXieIrene/ssds.pytorch"
"lufficc/SSD" -> "yhenon/pytorch-retinanet"
"lufficc/SSD" -> "jwyang/faster-rcnn.pytorch"
"lufficc/SSD" -> "bubbliiiing/ssd-pytorch"
"lufficc/SSD" -> "Tencent/ObjectDetection-OneStageDet"
"lufficc/SSD" -> "princeton-vl/CornerNet"
"lufficc/SSD" -> "tianzhi0549/FCOS"
"lufficc/SSD" -> "GOATmessi8/ASFF"
"lufficc/SSD" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"lufficc/SSD" -> "yatengLG/SSD-Pytorch" ["e"=1]
"lufficc/SSD" -> "sgrvinod/a-PyTorch-Tutorial-to-Object-Detection"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "Megvii-BaseDetection/DeFCN"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "sfzhang15/ATSS"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "Megvii-BaseDetection/BorderDet"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "kuanhungchen/awesome-tiny-object-detection" ["e"=1]
"XinZhangRadar/awesome-anchor-free-object-detection" -> "Duankaiwen/CPNDet"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "ray-lee-94/AnchorFreeDetection" ["e"=1]
"XinZhangRadar/awesome-anchor-free-object-detection" -> "microsoft/RepPoints"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "Scalsol/RepPointsV2"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "FateScript/CenterNet-better"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "PeizeSun/SparseR-CNN"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "kemaloksuz/ObjectDetectionImbalance"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "clobotics/piou" ["e"=1]
"XinZhangRadar/awesome-anchor-free-object-detection" -> "implus/GFocal"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "hyz-xmaster/VarifocalNet"
"XinZhangRadar/awesome-anchor-free-object-detection" -> "SJTU-Thinklab-Det/DOTA-DOAI" ["e"=1]
"multimodallearning/pytorch-mask-rcnn" -> "wannabeOG/Mask-RCNN"
"multimodallearning/pytorch-mask-rcnn" -> "facebookresearch/maskrcnn-benchmark"
"multimodallearning/pytorch-mask-rcnn" -> "roytseng-tw/Detectron.pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "ruotianluo/pytorch-faster-rcnn"
"multimodallearning/pytorch-mask-rcnn" -> "jwyang/faster-rcnn.pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "zjhuang22/maskscoring_rcnn"
"multimodallearning/pytorch-mask-rcnn" -> "longcw/faster_rcnn_pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "soeaver/Pytorch_Mask_RCNN"
"multimodallearning/pytorch-mask-rcnn" -> "amdegroot/ssd.pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "chenyuntc/simple-faster-rcnn-pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "jfzhang95/pytorch-deeplab-xception" ["e"=1]
"multimodallearning/pytorch-mask-rcnn" -> "meetps/pytorch-semseg" ["e"=1]
"multimodallearning/pytorch-mask-rcnn" -> "tianzhi0549/FCOS"
"multimodallearning/pytorch-mask-rcnn" -> "Okery/PyTorch-Simple-MaskRCNN"
"multimodallearning/pytorch-mask-rcnn" -> "princeton-vl/CornerNet"
"yoyolicoris/pytorch-NMF" -> "tomrunia/PyTorchWavelets"
"mingx9527/Data_Label_Tools" -> "hzylmf/od-annotation"
"mingx9527/Data_Label_Tools" -> "lzx1413/labelImgPlus"
"mingx9527/Data_Label_Tools" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"mingx9527/Data_Label_Tools" -> "cgvict/roLabelImg" ["e"=1]
"mingx9527/Data_Label_Tools" -> "yuanyuanli85/Fast_Human_Pose_Estimation_Pytorch" ["e"=1]
"mingx9527/Data_Label_Tools" -> "Robert-JunWang/Pelee" ["e"=1]
"mingx9527/Data_Label_Tools" -> "wucng/TensorExpand"
"mingx9527/Data_Label_Tools" -> "microsoft/VoTT"
"jsbroks/coco-annotator" -> "jsbroks/imantics"
"jsbroks/coco-annotator" -> "microsoft/VoTT"
"jsbroks/coco-annotator" -> "cvat-ai/cvat"
"jsbroks/coco-annotator" -> "visipedia/annotation_tools"
"jsbroks/coco-annotator" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"jsbroks/coco-annotator" -> "dbolya/yolact"
"jsbroks/coco-annotator" -> "HRNet/HigherHRNet-Human-Pose-Estimation" ["e"=1]
"jsbroks/coco-annotator" -> "waspinator/pycococreator"
"jsbroks/coco-annotator" -> "cocodataset/cocoapi"
"jsbroks/coco-annotator" -> "wkentaro/labelme"
"jsbroks/coco-annotator" -> "HumanSignal/awesome-data-labeling"
"jsbroks/coco-annotator" -> "Labelbox/labelbox-custom-labeling-apps"
"jsbroks/coco-annotator" -> "abreheret/PixelAnnotationTool"
"jsbroks/coco-annotator" -> "SkalskiP/make-sense"
"jsbroks/coco-annotator" -> "microsoft/human-pose-estimation.pytorch" ["e"=1]
"PyWavelets/pywt" -> "fbcotter/pytorch_wavelets"
"PyWavelets/pywt" -> "regeirk/pycwt"
"PyWavelets/pywt" -> "laszukdawid/PyEMD"
"PyWavelets/pywt" -> "OverLordGoldDragon/ssqueezepy"
"PyWavelets/pywt" -> "aaren/wavelets"
"PyWavelets/pywt" -> "kymatio/kymatio"
"PyWavelets/pywt" -> "taspinar/siml"
"PyWavelets/pywt" -> "v0lta/PyTorch-Wavelet-Toolbox"
"PyWavelets/pywt" -> "MIT-LCP/wfdb-python" ["e"=1]
"PyWavelets/pywt" -> "nigma/pywt"
"PyWavelets/pywt" -> "alsauve/scaleogram"
"PyWavelets/pywt" -> "ct6502/wavelets"
"PyWavelets/pywt" -> "rafat/wavelib"
"PyWavelets/pywt" -> "tomrunia/PyTorchWavelets"
"PyWavelets/pywt" -> "tslearn-team/tslearn" ["e"=1]
"Cartucho/OpenLabeling" -> "AlexeyAB/Yolo_mark" ["e"=1]
"Cartucho/OpenLabeling" -> "jekhor/aerial-cars-dataset"
"Cartucho/OpenLabeling" -> "Labelbox/labelbox-custom-labeling-apps"
"Cartucho/OpenLabeling" -> "abreheret/PixelAnnotationTool"
"Cartucho/OpenLabeling" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"Cartucho/OpenLabeling" -> "alexandre01/UltimateLabeling" ["e"=1]
"Cartucho/OpenLabeling" -> "developer0hye/Yolo_Label"
"Cartucho/OpenLabeling" -> "ivangrov/YOLOv3-Series"
"Cartucho/OpenLabeling" -> "ceccocats/tkDNN" ["e"=1]
"Cartucho/OpenLabeling" -> "microsoft/VoTT"
"Cartucho/OpenLabeling" -> "cvhciKIT/sloth" ["e"=1]
"Cartucho/OpenLabeling" -> "Guanghan/ROLO" ["e"=1]
"Cartucho/OpenLabeling" -> "puzzledqs/BBox-Label-Tool" ["e"=1]
"Cartucho/OpenLabeling" -> "lzx1413/LabelImgTool"
"Cartucho/OpenLabeling" -> "experiencor/keras-yolo2" ["e"=1]
"hari-sikchi/awesome-ai-safety" -> "harsh-99/Sequential-Data-Loader-and-Model-for-Variable-Length-Data"
"intel-iot-devkit/smart-retail-analytics" -> "intel-iot-devkit/store-traffic-monitor-python"
"intel-iot-devkit/smart-retail-analytics" -> "intel-iot-devkit/intruder-detector-python"
"DeepVoltaire/AutoAugment" -> "kakaobrain/fast-autoaugment"
"DeepVoltaire/AutoAugment" -> "ildoonet/pytorch-randaugment"
"DeepVoltaire/AutoAugment" -> "clovaai/CutMix-PyTorch"
"DeepVoltaire/AutoAugment" -> "4uiiurz1/pytorch-auto-augment"
"DeepVoltaire/AutoAugment" -> "uoguelph-mlrg/Cutout"
"DeepVoltaire/AutoAugment" -> "arcelien/pba"
"DeepVoltaire/AutoAugment" -> "facebookresearch/mixup-cifar10"
"DeepVoltaire/AutoAugment" -> "Cadene/pretrained-models.pytorch"
"DeepVoltaire/AutoAugment" -> "google-research/augmix"
"DeepVoltaire/AutoAugment" -> "lukemelas/EfficientNet-PyTorch"
"DeepVoltaire/AutoAugment" -> "facebookresearch/pycls"
"DeepVoltaire/AutoAugment" -> "mdbloice/Augmentor"
"DeepVoltaire/AutoAugment" -> "zhanghang1989/ResNeSt"
"DeepVoltaire/AutoAugment" -> "facebookresearch/FixRes"
"DeepVoltaire/AutoAugment" -> "ZFTurbo/Weighted-Boxes-Fusion"
"vrcarva/vmdpy" -> "shenmusmart/VMD_python"
"vrcarva/vmdpy" -> "laszukdawid/PyEMD"
"vrcarva/vmdpy" -> "vrcarva/ewtpy"
"vrcarva/vmdpy" -> "FateMurphy/CEEMDAN_LSTM"
"vrcarva/vmdpy" -> "MVRonkin/dsatools"
"vrcarva/vmdpy" -> "FateMurphy/CEEMDAN-VMD-GRU"
"vrcarva/vmdpy" -> "XinweiJiang/VMD"
"vrcarva/vmdpy" -> "sanshuishou/-VMD-Attention-LSTM-"
"vrcarva/vmdpy" -> "yunyueye/MVMD"
"vrcarva/vmdpy" -> "hustcxl/SP_Lib"
"vrcarva/vmdpy" -> "jaidevd/pyhht"
"labmlai/labml" -> "Lightning-Universe/lightning-bolts"
"labmlai/labml" -> "aimhubio/aim" ["e"=1]
"labmlai/labml" -> "arogozhnikov/einops"
"labmlai/labml" -> "Lightning-Universe/lightning-flash"
"labmlai/labml" -> "labmlai/annotated_deep_learning_paper_implementations"
"labmlai/labml" -> "CalculatedContent/WeightWatcher" ["e"=1]
"labmlai/labml" -> "vahidk/EffectivePyTorch" ["e"=1]
"labmlai/labml" -> "facebookresearch/fairscale" ["e"=1]
"labmlai/labml" -> "labmlai/app" ["e"=1]
"labmlai/labml" -> "labmlai/python_autocomplete" ["e"=1]
"labmlai/labml" -> "AakashKumarNain/annotated_research_papers" ["e"=1]
"labmlai/labml" -> "abhishekkrthakur/colabcode" ["e"=1]
"labmlai/labml" -> "facebookresearch/hydra"
"labmlai/labml" -> "replicate/keepsake" ["e"=1]
"labmlai/labml" -> "pytorch/captum"
"abreheret/PixelAnnotationTool" -> "Labelbox/labelbox-custom-labeling-apps"
"abreheret/PixelAnnotationTool" -> "Hitachi-Automotive-And-Industry-Lab/semantic-segmentation-editor" ["e"=1]
"abreheret/PixelAnnotationTool" -> "wkentaro/labelme"
"abreheret/PixelAnnotationTool" -> "cvat-ai/cvat"
"abreheret/PixelAnnotationTool" -> "microsoft/VoTT"
"abreheret/PixelAnnotationTool" -> "dbolya/yolact"
"abreheret/PixelAnnotationTool" -> "HumanSignal/awesome-data-labeling"
"abreheret/PixelAnnotationTool" -> "fidler-lab/polyrnn-pp-pytorch" ["e"=1]
"abreheret/PixelAnnotationTool" -> "fidler-lab/curve-gcn" ["e"=1]
"abreheret/PixelAnnotationTool" -> "kyamagu/js-segment-annotator"
"abreheret/PixelAnnotationTool" -> "jsbroks/coco-annotator"
"abreheret/PixelAnnotationTool" -> "GeorgeSeif/Semantic-Segmentation-Suite" ["e"=1]
"abreheret/PixelAnnotationTool" -> "mrgloom/awesome-semantic-segmentation"
"abreheret/PixelAnnotationTool" -> "bonlime/keras-deeplab-v3-plus" ["e"=1]
"abreheret/PixelAnnotationTool" -> "CSAILVision/LabelMeAnnotationTool"
"ahmedbesbes/character-based-cnn" -> "vietnh1009/Character-level-cnn-pytorch"
"Sophia-11/Awesome-CVPR-Paper" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"Sophia-11/Awesome-CVPR-Paper" -> "ahong007007/awesomeCV"
"Sophia-11/Awesome-CVPR-Paper" -> "52CV/CVPR-2021-Papers"
"Sophia-11/Awesome-CVPR-Paper" -> "AlexHex7/Non-local_pytorch" ["e"=1]
"Sophia-11/Awesome-CVPR-Paper" -> "amusi/ICCV2023-Papers-with-Code"
"Sophia-11/Awesome-CVPR-Paper" -> "amusi/ECCV2024-Papers-with-Code"
"Sophia-11/Awesome-CVPR-Paper" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"Sophia-11/Awesome-CVPR-Paper" -> "Sophia-11/Awesome-ICCV"
"Sophia-11/Awesome-CVPR-Paper" -> "implus/PytorchInsight" ["e"=1]
"Sophia-11/Awesome-CVPR-Paper" -> "fudan-zvg/SETR" ["e"=1]
"Sophia-11/Awesome-CVPR-Paper" -> "zhanghang1989/ResNeSt"
"Sophia-11/Awesome-CVPR-Paper" -> "dk-liang/Awesome-Visual-Transformer"
"apachecn/opencv-doc-zh" -> "fendouai/OpenCVTutorials"
"apachecn/opencv-doc-zh" -> "QianMo/OpenCV3-Intro-Book-Src"
"JimmyHHua/opencv_tutorials" -> "CodecWang/opencv-python-tutorial"
"JimmyHHua/opencv_tutorials" -> "makelove/OpenCV-Python-Tutorial"
"JimmyHHua/opencv_tutorials" -> "fendouai/OpenCVTutorials"
"JimmyHHua/opencv_tutorials" -> "gzr2017/ImageProcessing100Wen"
"JimmyHHua/opencv_tutorials" -> "oreillymedia/Learning-OpenCV-3_examples"
"JimmyHHua/opencv_tutorials" -> "QianMo/OpenCV3-Intro-Book-Src"
"JimmyHHua/opencv_tutorials" -> "spmallick/learnopencv"
"JimmyHHua/opencv_tutorials" -> "abidrahmank/OpenCV2-Python-Tutorials"
"JimmyHHua/opencv_tutorials" -> "murtazahassan/OpenCV-Python-Tutorials-and-Projects"
"JimmyHHua/opencv_tutorials" -> "luohenyueji/OpenCV-Practical-Exercise"
"JimmyHHua/opencv_tutorials" -> "PacktPublishing/Mastering-OpenCV-4-Third-Edition"
"JimmyHHua/opencv_tutorials" -> "amusi/awesome-object-detection"
"JimmyHHua/opencv_tutorials" -> "shouxieai/tensorRT_Pro" ["e"=1]
"JimmyHHua/opencv_tutorials" -> "BBuf/Image-processing-algorithm" ["e"=1]
"JimmyHHua/opencv_tutorials" -> "hoya012/deep_learning_object_detection"
"YU1ut/MixMatch-pytorch" -> "google-research/mixmatch"
"YU1ut/MixMatch-pytorch" -> "kekmodel/FixMatch-pytorch"
"YU1ut/MixMatch-pytorch" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"YU1ut/MixMatch-pytorch" -> "LiJunnan1992/DivideMix"
"YU1ut/MixMatch-pytorch" -> "CuriousAI/mean-teacher"
"YU1ut/MixMatch-pytorch" -> "google-research/fixmatch"
"YU1ut/MixMatch-pytorch" -> "lyakaap/VAT-pytorch"
"YU1ut/MixMatch-pytorch" -> "ildoonet/unsupervised-data-augmentation"
"YU1ut/MixMatch-pytorch" -> "gan3sh500/mixmatch-pytorch" ["e"=1]
"YU1ut/MixMatch-pytorch" -> "TorchSSL/TorchSSL"
"YU1ut/MixMatch-pytorch" -> "vikasverma1077/ICT"
"YU1ut/MixMatch-pytorch" -> "benathi/fastswa-semi-sup"
"YU1ut/MixMatch-pytorch" -> "google-research/remixmatch"
"YU1ut/MixMatch-pytorch" -> "brain-research/realistic-ssl-evaluation"
"YU1ut/MixMatch-pytorch" -> "yassouali/awesome-semi-supervised-learning"
"vrcarva/ewtpy" -> "bhurat/EWT-Python"
"cvdfoundation/open-images-dataset" -> "openimages/dataset" ["e"=1]
"cvdfoundation/open-images-dataset" -> "cvdfoundation/google-landmark" ["e"=1]
"cvdfoundation/open-images-dataset" -> "EscVM/OIDv4_ToolKit" ["e"=1]
"cvdfoundation/open-images-dataset" -> "Tencent/tencent-ml-images"
"cvdfoundation/open-images-dataset" -> "Megvii-BaseDetection/cvpods"
"cvdfoundation/open-images-dataset" -> "Duankaiwen/CenterNet"
"cvdfoundation/open-images-dataset" -> "Robert-JunWang/Pelee" ["e"=1]
"cvdfoundation/open-images-dataset" -> "ashkamath/mdetr" ["e"=1]
"cvdfoundation/open-images-dataset" -> "princeton-vl/CornerNet"
"cvdfoundation/open-images-dataset" -> "tianzhi0549/FCOS"
"cvdfoundation/open-images-dataset" -> "raoyongming/DenseCLIP" ["e"=1]
"LiyuanLucasLiu/RAdam" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"LiyuanLucasLiu/RAdam" -> "Luolc/AdaBound"
"LiyuanLucasLiu/RAdam" -> "jettify/pytorch-optimizer"
"LiyuanLucasLiu/RAdam" -> "lukemelas/EfficientNet-PyTorch"
"LiyuanLucasLiu/RAdam" -> "CyberZHG/keras-radam" ["e"=1]
"LiyuanLucasLiu/RAdam" -> "digantamisra98/Mish"
"LiyuanLucasLiu/RAdam" -> "facebookresearch/pycls"
"LiyuanLucasLiu/RAdam" -> "alphadl/lookahead.pytorch"
"LiyuanLucasLiu/RAdam" -> "mgrankin/over9000"
"LiyuanLucasLiu/RAdam" -> "adobe/antialiased-cnns"
"LiyuanLucasLiu/RAdam" -> "kakaobrain/fast-autoaugment"
"LiyuanLucasLiu/RAdam" -> "NVIDIA/apex"
"LiyuanLucasLiu/RAdam" -> "lonePatient/lookahead_pytorch"
"LiyuanLucasLiu/RAdam" -> "zhanghang1989/ResNeSt"
"LiyuanLucasLiu/RAdam" -> "juntang-zhuang/Adabelief-Optimizer"
"sovrasov/flops-counter.pytorch" -> "Lyken17/pytorch-OpCounter"
"sovrasov/flops-counter.pytorch" -> "Swall0w/torchstat"
"sovrasov/flops-counter.pytorch" -> "facebookresearch/fvcore"
"sovrasov/flops-counter.pytorch" -> "IntelLabs/distiller" ["e"=1]
"sovrasov/flops-counter.pytorch" -> "sksq96/pytorch-summary"
"sovrasov/flops-counter.pytorch" -> "DingXiaoH/RepVGG"
"sovrasov/flops-counter.pytorch" -> "he-y/Awesome-Pruning" ["e"=1]
"sovrasov/flops-counter.pytorch" -> "NVIDIA/apex"
"sovrasov/flops-counter.pytorch" -> "Cadene/pretrained-models.pytorch"
"sovrasov/flops-counter.pytorch" -> "tianzhi0549/FCOS"
"sovrasov/flops-counter.pytorch" -> "huawei-noah/Efficient-AI-Backbones"
"sovrasov/flops-counter.pytorch" -> "megvii-model/ShuffleNet-Series"
"sovrasov/flops-counter.pytorch" -> "msracver/Deformable-ConvNets"
"sovrasov/flops-counter.pytorch" -> "lukemelas/EfficientNet-PyTorch"
"sovrasov/flops-counter.pytorch" -> "zhanghang1989/ResNeSt"
"donnyyou/torchcv" -> "yu-changqian/TorchSeg" ["e"=1]
"donnyyou/torchcv" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"donnyyou/torchcv" -> "openseg-group/openseg.pytorch" ["e"=1]
"donnyyou/torchcv" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"donnyyou/torchcv" -> "zijundeng/pytorch-semantic-segmentation" ["e"=1]
"donnyyou/torchcv" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"donnyyou/torchcv" -> "tianzhi0549/FCOS"
"donnyyou/torchcv" -> "meetps/pytorch-semseg" ["e"=1]
"donnyyou/torchcv" -> "junfu1115/DANet" ["e"=1]
"donnyyou/torchcv" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"donnyyou/torchcv" -> "jfzhang95/pytorch-deeplab-xception" ["e"=1]
"donnyyou/torchcv" -> "Tencent/ObjectDetection-OneStageDet"
"donnyyou/torchcv" -> "megvii-model/ShuffleNet-Series"
"donnyyou/torchcv" -> "facebookresearch/maskrcnn-benchmark"
"donnyyou/torchcv" -> "tusen-ai/simpledet"
"gmalivenko/pytorch2keras" -> "gmalivenko/onnx2keras"
"gmalivenko/pytorch2keras" -> "ysh329/deep-learning-model-convertor" ["e"=1]
"gmalivenko/pytorch2keras" -> "gzuidhof/nn-transfer"
"gmalivenko/pytorch2keras" -> "onnx/onnx-tensorflow"
"gmalivenko/pytorch2keras" -> "qubvel/classification_models"
"gmalivenko/pytorch2keras" -> "leonidk/pytorch-tf"
"gmalivenko/pytorch2keras" -> "see--/keras-centernet"
"gmalivenko/pytorch2keras" -> "ybabakhin/kaggle_salt_bes_phalanx"
"gmalivenko/pytorch2keras" -> "ecs-vlc/FMix"
"gmalivenko/pytorch2keras" -> "amir-abdi/keras_to_tensorflow" ["e"=1]
"gmalivenko/pytorch2keras" -> "qubvel/efficientnet"
"tusen-ai/simpledet" -> "princeton-vl/CornerNet"
"tusen-ai/simpledet" -> "tianzhi0549/FCOS"
"tusen-ai/simpledet" -> "Duankaiwen/CenterNet"
"tusen-ai/simpledet" -> "xingyizhou/CenterNet"
"tusen-ai/simpledet" -> "mahyarnajibi/SNIPER"
"tusen-ai/simpledet" -> "princeton-vl/CornerNet-Lite"
"tusen-ai/simpledet" -> "dmlc/gluon-cv"
"tusen-ai/simpledet" -> "msracver/Deformable-ConvNets"
"tusen-ai/simpledet" -> "VDIGPKU/M2Det"
"tusen-ai/simpledet" -> "facebookresearch/maskrcnn-benchmark"
"tusen-ai/simpledet" -> "sfzhang15/RefineDet"
"tusen-ai/simpledet" -> "amusi/awesome-object-detection"
"tusen-ai/simpledet" -> "Tencent/ObjectDetection-OneStageDet"
"tusen-ai/simpledet" -> "zjhuang22/maskscoring_rcnn"
"tusen-ai/simpledet" -> "xingyizhou/ExtremeNet"
"utkuozbulak/pytorch-custom-dataset-examples" -> "ufoym/imbalanced-dataset-sampler"
"utkuozbulak/pytorch-custom-dataset-examples" -> "mortezamg63/Accessing-and-modifying-different-layers-of-a-pretrained-model-in-pytorch"
"utkuozbulak/pytorch-custom-dataset-examples" -> "sksq96/pytorch-summary"
"utkuozbulak/pytorch-custom-dataset-examples" -> "waleedka/hiddenlayer"
"utkuozbulak/pytorch-custom-dataset-examples" -> "ugent-korea/pytorch-unet-segmentation" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "jcjohnson/pytorch-examples" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "kevinzakka/hypersearch" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "victoresque/pytorch-template"
"utkuozbulak/pytorch-custom-dataset-examples" -> "lanpa/tensorboardX"
"utkuozbulak/pytorch-custom-dataset-examples" -> "pytorch/ignite"
"utkuozbulak/pytorch-custom-dataset-examples" -> "bentrevett/pytorch-image-classification"
"utkuozbulak/pytorch-custom-dataset-examples" -> "hunkim/PyTorchZeroToAll" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "skorch-dev/skorch" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "Spandan-Madan/Pytorch_fine_tuning_Tutorial"
"utkuozbulak/pytorch-custom-dataset-examples" -> "Spandan-Madan/A-Collection-of-important-tasks-in-pytorch"
"zasdfgbnm/TorchSnooper" -> "awwong1/torchprof"
"zasdfgbnm/TorchSnooper" -> "demuxin/pytorch_tricks"
"zasdfgbnm/TorchSnooper" -> "Lyken17/Efficient-PyTorch"
"zasdfgbnm/TorchSnooper" -> "xingyizhou/ExtremeNet"
"zasdfgbnm/TorchSnooper" -> "MisaOgura/flashtorch" ["e"=1]
"zasdfgbnm/TorchSnooper" -> "Lyken17/pytorch-memonger"
"zasdfgbnm/TorchSnooper" -> "BlackHC/tfpyth" ["e"=1]
"zasdfgbnm/TorchSnooper" -> "Oldpan/Pytorch-Memory-Utils"
"zasdfgbnm/TorchSnooper" -> "ptrblck/pytorch_misc" ["e"=1]
"zasdfgbnm/TorchSnooper" -> "szagoruyko/pytorchviz"
"zasdfgbnm/TorchSnooper" -> "princeton-vl/CornerNet-Lite"
"zasdfgbnm/TorchSnooper" -> "microsoft/tensorwatch"
"zasdfgbnm/TorchSnooper" -> "shrubb/box-convolutions"
"zasdfgbnm/TorchSnooper" -> "sksq96/pytorch-summary"
"zasdfgbnm/TorchSnooper" -> "tanglang96/DataLoaders_DALI"
"qubvel/efficientnet" -> "xuannianz/EfficientDet"
"qubvel/efficientnet" -> "tensorflow/tpu"
"qubvel/efficientnet" -> "qubvel/classification_models"
"qubvel/efficientnet" -> "lukemelas/EfficientNet-PyTorch"
"qubvel/efficientnet" -> "qubvel/segmentation_models"
"qubvel/efficientnet" -> "google/automl"
"qubvel/efficientnet" -> "rwightman/efficientdet-pytorch"
"qubvel/efficientnet" -> "rwightman/gen-efficientnet-pytorch"
"qubvel/efficientnet" -> "titu1994/keras-efficientnets" ["e"=1]
"qubvel/efficientnet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"qubvel/efficientnet" -> "keras-team/keras-applications"
"qubvel/efficientnet" -> "raghakot/keras-vis" ["e"=1]
"qubvel/efficientnet" -> "toandaominh1997/EfficientDet.Pytorch"
"qubvel/efficientnet" -> "osmr/imgclsmob"
"qubvel/efficientnet" -> "ZFTurbo/Weighted-Boxes-Fusion"
"chrischoy/MakePytorchPlusPlus" -> "chrischoy/pytorch-custom-cuda-tutorial"
"kyamagu/js-segment-annotator" -> "AKSHAYUBHAT/ImageSegmentation"
"kyamagu/js-segment-annotator" -> "commaai/commacoloring"
"kyamagu/js-segment-annotator" -> "annotorious/annotorious-v1" ["e"=1]
"kyamagu/js-segment-annotator" -> "CSAILVision/LabelMeAnnotationTool"
"kyamagu/js-segment-annotator" -> "eBay/modanet" ["e"=1]
"kyamagu/js-segment-annotator" -> "Slava/label-tool"
"kyamagu/js-segment-annotator" -> "bearpaw/clothing-co-parsing" ["e"=1]
"kyamagu/js-segment-annotator" -> "TimoSaemann/caffe-segnet-cudnn5" ["e"=1]
"kyamagu/js-segment-annotator" -> "abreheret/PixelAnnotationTool"
"kyamagu/js-segment-annotator" -> "alexgkendall/SegNet-Tutorial" ["e"=1]
"analyticalmindsltd/smote_variants" -> "felix-last/kmeans_smote"
"analyticalmindsltd/smote_variants" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"analyticalmindsltd/smote_variants" -> "ZhiningLiu1998/imbalanced-ensemble"
"analyticalmindsltd/smote_variants" -> "dialnd/imbalanced-algorithms"
"analyticalmindsltd/smote_variants" -> "dd1github/DeepSMOTE"
"analyticalmindsltd/smote_variants" -> "ZhiningLiu1998/self-paced-ensemble"
"analyticalmindsltd/smote_variants" -> "damianhorna/multi-imbalance"
"analyticalmindsltd/smote_variants" -> "Albertsr/Class-Imbalance"
"analyticalmindsltd/smote_variants" -> "scikit-learn-contrib/DESlib" ["e"=1]
"analyticalmindsltd/smote_variants" -> "chongshengzhang/Multi_Imbalance"
"analyticalmindsltd/smote_variants" -> "syxiaa/RSMOTE"
"analyticalmindsltd/smote_variants" -> "gykovacs/common_datasets"
"analyticalmindsltd/smote_variants" -> "tgsmith61591/smrt"
"analyticalmindsltd/smote_variants" -> "scikit-learn-contrib/imbalanced-learn" ["e"=1]
"analyticalmindsltd/smote_variants" -> "georgedouzas/imbalanced-learn-extra"
"younesse-cv/PatchMatch" -> "ZQPei/patchmatch_inpainting"
"younesse-cv/PatchMatch" -> "zmoratto/PatchMatch" ["e"=1]
"younesse-cv/PatchMatch" -> "vacancy/PyPatchMatch"
"younesse-cv/PatchMatch" -> "MingtaoGuo/PatchMatch"
"younesse-cv/PatchMatch" -> "chwahaha/Space-Time-completion-of-Image"
"eg4000/SKU110K_CVPR19" -> "Anymake/DRN_CVPR2020" ["e"=1]
"eg4000/SKU110K_CVPR19" -> "Media-Smart/SKU110K-DenseDet" ["e"=1]
"eg4000/SKU110K_CVPR19" -> "tobiagru/ObjectDetectionGroceryProducts"
"eg4000/SKU110K_CVPR19" -> "tyomj/product_detection"
"eg4000/SKU110K_CVPR19" -> "ParallelDots/generic-sku-detection-benchmark"
"eg4000/SKU110K_CVPR19" -> "shayanalibhatti/Retail-Store-Item-Detection-using-YOLOv5"
"eg4000/SKU110K_CVPR19" -> "Duankaiwen/CenterNet"
"eg4000/SKU110K_CVPR19" -> "xg-chu/CrowdDet"
"eg4000/SKU110K_CVPR19" -> "sfzhang15/RefineDet"
"eg4000/SKU110K_CVPR19" -> "empathy87/nn-grocery-shelves"
"eg4000/SKU110K_CVPR19" -> "gulvarol/grocerydataset"
"eg4000/SKU110K_CVPR19" -> "VDIGPKU/M2Det"
"eg4000/SKU110K_CVPR19" -> "xingyizhou/ExtremeNet"
"eg4000/SKU110K_CVPR19" -> "twangnh/Distilling-Object-Detectors" ["e"=1]
"eg4000/SKU110K_CVPR19" -> "liuwei16/CSP"
"zhaoweicai/cascade-rcnn" -> "zhaoweicai/Detectron-Cascade-RCNN"
"zhaoweicai/cascade-rcnn" -> "ruoqianguo/cascade-rcnn_Pytorch"
"zhaoweicai/cascade-rcnn" -> "sfzhang15/RefineDet"
"zhaoweicai/cascade-rcnn" -> "princeton-vl/CornerNet"
"zhaoweicai/cascade-rcnn" -> "msracver/Relation-Networks-for-Object-Detection"
"zhaoweicai/cascade-rcnn" -> "GOATmessi8/RFBNet"
"zhaoweicai/cascade-rcnn" -> "zengarden/light_head_rcnn"
"zhaoweicai/cascade-rcnn" -> "vacancy/PreciseRoIPooling"
"zhaoweicai/cascade-rcnn" -> "mahyarnajibi/SNIPER"
"zhaoweicai/cascade-rcnn" -> "Duankaiwen/CenterNet"
"zhaoweicai/cascade-rcnn" -> "VDIGPKU/M2Det"
"zhaoweicai/cascade-rcnn" -> "msracver/Deformable-ConvNets"
"zhaoweicai/cascade-rcnn" -> "bharatsingh430/soft-nms" ["e"=1]
"zhaoweicai/cascade-rcnn" -> "YuwenXiong/py-R-FCN" ["e"=1]
"zhaoweicai/cascade-rcnn" -> "tianzhi0549/FCOS"
"abeardear/pytorch-YOLO-v1" -> "motokimura/yolo_v1_pytorch"
"abeardear/pytorch-YOLO-v1" -> "longcw/yolo2-pytorch"
"abeardear/pytorch-YOLO-v1" -> "yjh0410/new-YOLOv1_PyTorch"
"abeardear/pytorch-YOLO-v1" -> "Tshzzz/pytorch_yolov1"
"abeardear/pytorch-YOLO-v1" -> "duanyiqun/YOLO-Minimal"
"abeardear/pytorch-YOLO-v1" -> "BobLiu20/YOLOv3_PyTorch"
"abeardear/pytorch-YOLO-v1" -> "yjh0410/yolov2-yolov3_PyTorch"
"abeardear/pytorch-YOLO-v1" -> "vietnh1009/Yolo-v2-pytorch"
"abeardear/pytorch-YOLO-v1" -> "eriklindernoren/PyTorch-YOLOv3"
"abeardear/pytorch-YOLO-v1" -> "ayooshkathuria/pytorch-yolo-v3"
"abeardear/pytorch-YOLO-v1" -> "Tianxiaomo/pytorch-YOLOv4"
"abeardear/pytorch-YOLO-v1" -> "amdegroot/ssd.pytorch"
"abeardear/pytorch-YOLO-v1" -> "yjh0410/PyTorch_YOLOv1"
"abeardear/pytorch-YOLO-v1" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"abeardear/pytorch-YOLO-v1" -> "ultralytics/yolov3"
"vietnh1009/Yolo-v2-pytorch" -> "tztztztztz/yolov2.pytorch"
"vietnh1009/Yolo-v2-pytorch" -> "longcw/yolo2-pytorch"
"vietnh1009/Yolo-v2-pytorch" -> "motokimura/yolo_v1_pytorch"
"vietnh1009/Yolo-v2-pytorch" -> "vietnh1009/Very-deep-cnn-pytorch"
"vietnh1009/Yolo-v2-pytorch" -> "abeardear/pytorch-YOLO-v1"
"vietnh1009/Yolo-v2-pytorch" -> "vietnh1009/Character-level-cnn-pytorch"
"vietnh1009/Yolo-v2-pytorch" -> "Peterisfar/YOLOV3"
"vietnh1009/Yolo-v2-pytorch" -> "vietnh1009/Deeplab-pytorch"
"vietnh1009/Yolo-v2-pytorch" -> "ruiminshen/yolo2-pytorch"
"vietnh1009/Yolo-v2-pytorch" -> "yjh0410/new-YOLOv1_PyTorch"
"vietnh1009/Yolo-v2-pytorch" -> "yjh0410/yolov2-yolov3_PyTorch"
"vietnh1009/Yolo-v2-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"ShichenLiu/CondenseNet" -> "gaohuang/MSDNet"
"ShichenLiu/CondenseNet" -> "jianghaojun/CondenseNetV2" ["e"=1]
"ShichenLiu/CondenseNet" -> "chenxi116/PNASNet.pytorch" ["e"=1]
"ShichenLiu/CondenseNet" -> "JiahuiYu/slimmable_networks" ["e"=1]
"ShichenLiu/CondenseNet" -> "tonylins/pytorch-mobilenet-v2" ["e"=1]
"ShichenLiu/CondenseNet" -> "gpleiss/efficient_densenet_pytorch"
"ShichenLiu/CondenseNet" -> "szq0214/DSOD" ["e"=1]
"ShichenLiu/CondenseNet" -> "avirambh/MSDNet-GCN"
"ShichenLiu/CondenseNet" -> "1zb/deformable-convolution-pytorch"
"ShichenLiu/CondenseNet" -> "homles11/IGCV3" ["e"=1]
"ShichenLiu/CondenseNet" -> "prlz77/ResNeXt.pytorch"
"ShichenLiu/CondenseNet" -> "cypw/DPNs" ["e"=1]
"ShichenLiu/CondenseNet" -> "Robert-JunWang/Pelee" ["e"=1]
"ShichenLiu/CondenseNet" -> "soeaver/caffe-model" ["e"=1]
"ShichenLiu/CondenseNet" -> "enyac-group/single-path-nas" ["e"=1]
"siAyush/Data-Structure-and-Algorithms-Study-Plan" -> "clarkyu2016/Become-a-Data-Analyst"
"siAyush/Data-Structure-and-Algorithms-Study-Plan" -> "PepperGo/WebTechnologies"
"siAyush/Data-Structure-and-Algorithms-Study-Plan" -> "jodaz/speedstudy"
"siAyush/Data-Structure-and-Algorithms-Study-Plan" -> "carlosavieira/self-study"
"siAyush/Data-Structure-and-Algorithms-Study-Plan" -> "desicochrane/data-science-masters"
"jiweibo/ImageNet" -> "weiaicunzai/pytorch-cifar100"
"jiweibo/ImageNet" -> "aaron-xichen/pytorch-playground"
"jiweibo/ImageNet" -> "akamaster/pytorch_resnet_cifar10"
"jiweibo/ImageNet" -> "htqin/IR-Net" ["e"=1]
"jiweibo/ImageNet" -> "floydhub/imagenet"
"jiweibo/ImageNet" -> "chenyaofo/pytorch-cifar-models" ["e"=1]
"jiweibo/ImageNet" -> "huyvnphan/PyTorch_CIFAR10" ["e"=1]
"jiweibo/ImageNet" -> "jiecaoyu/pytorch_imagenet" ["e"=1]
"jiweibo/ImageNet" -> "bearpaw/pytorch-classification"
"jiweibo/ImageNet" -> "zgcr/SimpleAICV_pytorch_training_examples"
"akamaster/pytorch_resnet_cifar10" -> "weiaicunzai/pytorch-cifar100"
"akamaster/pytorch_resnet_cifar10" -> "kuangliu/pytorch-cifar"
"akamaster/pytorch_resnet_cifar10" -> "huyvnphan/PyTorch_CIFAR10" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "bearpaw/pytorch-classification"
"akamaster/pytorch_resnet_cifar10" -> "bmsookim/wide-resnet.pytorch"
"akamaster/pytorch_resnet_cifar10" -> "he-y/Awesome-Pruning" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "chengyangfu/pytorch-vgg-cifar10"
"akamaster/pytorch_resnet_cifar10" -> "aaron-xichen/pytorch-playground"
"akamaster/pytorch_resnet_cifar10" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "hendrycks/robustness" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "chenyaofo/pytorch-cifar-models" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "tomgoldstein/loss-landscape" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "BorealisAI/advertorch" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "RobustBench/robustbench" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "junyuseu/pytorch-cifar-models"
"naoto0804/cross-domain-detection" -> "VisionLearningGroup/DA_Detection"
"naoto0804/cross-domain-detection" -> "yuhuayc/da-faster-rcnn"
"naoto0804/cross-domain-detection" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"naoto0804/cross-domain-detection" -> "chengchunhsu/EveryPixelMatters"
"naoto0804/cross-domain-detection" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"naoto0804/cross-domain-detection" -> "kinredon/DA_Detection_Material"
"naoto0804/cross-domain-detection" -> "megvii-research/CR-DA-DET"
"naoto0804/cross-domain-detection" -> "chaoqichen/HTCN"
"naoto0804/cross-domain-detection" -> "TKKim93/DivMatch"
"naoto0804/cross-domain-detection" -> "wangs311/awesome-domain-adaptation-object-detection"
"naoto0804/cross-domain-detection" -> "harsh-99/SCL"
"naoto0804/cross-domain-detection" -> "ChrisAllenMing/GPA-detection"
"naoto0804/cross-domain-detection" -> "kevinhkhsu/DA_detection"
"naoto0804/cross-domain-detection" -> "kinredon/umt"
"naoto0804/cross-domain-detection" -> "facebookresearch/adaptive_teacher"
"kinredon/DA_Detection_Material" -> "wangs311/awesome-domain-adaptation-object-detection"
"kinredon/DA_Detection_Material" -> "VisionLearningGroup/DA_Detection"
"kinredon/DA_Detection_Material" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"kinredon/DA_Detection_Material" -> "facebookresearch/adaptive_teacher"
"kinredon/DA_Detection_Material" -> "chengchunhsu/EveryPixelMatters"
"kinredon/DA_Detection_Material" -> "kinredon/Harmonious-Teacher"
"kinredon/DA_Detection_Material" -> "kinredon/umt"
"kinredon/DA_Detection_Material" -> "chaoqichen/HTCN"
"kinredon/DA_Detection_Material" -> "megvii-research/CR-DA-DET"
"kinredon/DA_Detection_Material" -> "ChrisAllenMing/GPA-detection"
"kinredon/DA_Detection_Material" -> "xinge008/SCDA"
"kinredon/DA_Detection_Material" -> "hikvision-research/ProbabilisticTeacher"
"kinredon/DA_Detection_Material" -> "naoto0804/cross-domain-detection"
"kinredon/DA_Detection_Material" -> "CityU-AIM-Group/SIGMA"
"kinredon/DA_Detection_Material" -> "kevinhkhsu/DA_detection"
"ayooshkathuria/pytorch-yolo-v3" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"ayooshkathuria/pytorch-yolo-v3" -> "eriklindernoren/PyTorch-YOLOv3"
"ayooshkathuria/pytorch-yolo-v3" -> "ultralytics/yolov3"
"ayooshkathuria/pytorch-yolo-v3" -> "amdegroot/ssd.pytorch"
"ayooshkathuria/pytorch-yolo-v3" -> "longcw/yolo2-pytorch"
"ayooshkathuria/pytorch-yolo-v3" -> "Tencent/ObjectDetection-OneStageDet"
"ayooshkathuria/pytorch-yolo-v3" -> "jwyang/faster-rcnn.pytorch"
"ayooshkathuria/pytorch-yolo-v3" -> "qqwweee/keras-yolo3"
"ayooshkathuria/pytorch-yolo-v3" -> "facebookresearch/maskrcnn-benchmark"
"ayooshkathuria/pytorch-yolo-v3" -> "xingyizhou/CenterNet"
"ayooshkathuria/pytorch-yolo-v3" -> "amusi/awesome-object-detection"
"ayooshkathuria/pytorch-yolo-v3" -> "roytseng-tw/Detectron.pytorch"
"ayooshkathuria/pytorch-yolo-v3" -> "marvis/pytorch-yolo2"
"ayooshkathuria/pytorch-yolo-v3" -> "BobLiu20/YOLOv3_PyTorch"
"ayooshkathuria/pytorch-yolo-v3" -> "princeton-vl/CornerNet"
"DeNA/PyTorch_YOLOv3" -> "BobLiu20/YOLOv3_PyTorch"
"DeNA/PyTorch_YOLOv3" -> "Stinky-Tofu/Stronger-yolo"
"DeNA/PyTorch_YOLOv3" -> "motokimura/PyTorch_Gaussian_YOLOv3" ["e"=1]
"DeNA/PyTorch_YOLOv3" -> "Peterisfar/YOLOV3"
"DeNA/PyTorch_YOLOv3" -> "VDIGPKU/M2Det"
"DeNA/PyTorch_YOLOv3" -> "andy-yun/pytorch-0.4-yolov3"
"DeNA/PyTorch_YOLOv3" -> "Tencent/ObjectDetection-OneStageDet"
"DeNA/PyTorch_YOLOv3" -> "jwchoi384/Gaussian_YOLOv3" ["e"=1]
"DeNA/PyTorch_YOLOv3" -> "marvis/pytorch-yolo2"
"DeNA/PyTorch_YOLOv3" -> "WongKinYiu/CrossStagePartialNetworks"
"rcrandall/PatchMatch" -> "ikuwow/PatchMatch"
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "BBuf/Image-processing-algorithm" ["e"=1]
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "rmislam/PythonSIFT" ["e"=1]
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "ZeLianWen/Image-Registration" ["e"=1]
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "gzr2017/ImageProcessing100Wen"
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "gloomyfish1998/opencv_tutorial"
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "CV-xueba/A01_cvclass_basic" ["e"=1]
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "eastmountyxz/ImageProcessing-Python"
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "oreillymedia/Learning-OpenCV-3_examples"
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "zonechen1994/CV_Interview" ["e"=1]
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "harleyszhang/cv_note" ["e"=1]
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "jhfmat/ISP-pipeline-hdrplus" ["e"=1]
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "CodecWang/opencv-python-tutorial"
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "makelove/OpenCV-Python-Tutorial"
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "luohenyueji/OpenCV-Practical-Exercise"
"o0o0o0o0o0o0o/image-processing-from-scratch" -> "JimmyHHua/opencv_tutorials"
"luuuyi/RefineDet.PyTorch" -> "lzx1413/PytorchSSD"
"luuuyi/RefineDet.PyTorch" -> "dd604/refinedet.pytorch"
"luuuyi/RefineDet.PyTorch" -> "yqyao/SSD_Pytorch"
"luuuyi/RefineDet.PyTorch" -> "sfzhang15/RefineDet"
"luuuyi/RefineDet.PyTorch" -> "Ranchentx/EFGRNet"
"luuuyi/RefineDet.PyTorch" -> "ruoqianguo/DetNet_pytorch"
"luuuyi/RefineDet.PyTorch" -> "KimSoybean/ScratchDet"
"luuuyi/RefineDet.PyTorch" -> "GOATmessi8/RFBNet"
"luuuyi/RefineDet.PyTorch" -> "VDIGPKU/M2Det"
"luuuyi/RefineDet.PyTorch" -> "uoip/SSD-variants"
"luuuyi/RefineDet.PyTorch" -> "libuyu/GHM_Detection"
"open-mmlab/mmcv" -> "open-mmlab/mmsegmentation"
"open-mmlab/mmcv" -> "open-mmlab/mmdetection"
"open-mmlab/mmcv" -> "open-mmlab/mmpretrain"
"open-mmlab/mmcv" -> "open-mmlab/mmdetection3d" ["e"=1]
"open-mmlab/mmcv" -> "xingyizhou/CenterNet"
"open-mmlab/mmcv" -> "open-mmlab/mmdeploy"
"open-mmlab/mmcv" -> "open-mmlab/mmagic" ["e"=1]
"open-mmlab/mmcv" -> "facebookresearch/maskrcnn-benchmark"
"open-mmlab/mmcv" -> "tianzhi0549/FCOS"
"open-mmlab/mmcv" -> "facebookresearch/detr"
"open-mmlab/mmcv" -> "microsoft/Swin-Transformer"
"open-mmlab/mmcv" -> "facebookresearch/detectron2"
"open-mmlab/mmcv" -> "open-mmlab/mmselfsup" ["e"=1]
"open-mmlab/mmcv" -> "open-mmlab/mmengine"
"open-mmlab/mmcv" -> "open-mmlab/mmaction2" ["e"=1]
"qqlu/Amodal-Instance-Segmentation-through-KINS-Dataset" -> "YutingXiao/Amodal-Segmentation-Based-on-Visible-Region-Segmentation-and-Shape-Prior"
"qqlu/Amodal-Instance-Segmentation-through-KINS-Dataset" -> "Wakeupbuddy/amodalAPI"
"qqlu/Amodal-Instance-Segmentation-through-KINS-Dataset" -> "Consulting4J/lazymongo"
"qqlu/Amodal-Instance-Segmentation-through-KINS-Dataset" -> "waiyulam/ORCNN"
"onnx/onnx-tensorflow" -> "onnx/tensorflow-onnx"
"onnx/onnx-tensorflow" -> "daquexian/onnx-simplifier"
"onnx/onnx-tensorflow" -> "PINTO0309/onnx2tf"
"onnx/onnx-tensorflow" -> "onnx/tutorials"
"onnx/onnx-tensorflow" -> "MPolaris/onnx2tflite" ["e"=1]
"onnx/onnx-tensorflow" -> "onnx/onnx-tensorrt" ["e"=1]
"onnx/onnx-tensorflow" -> "sithu31296/PyTorch-ONNX-TFLite"
"onnx/onnx-tensorflow" -> "ysh329/deep-learning-model-convertor" ["e"=1]
"onnx/onnx-tensorflow" -> "cinastanbean/pytorch-onnx-tensorflow-pb"
"onnx/onnx-tensorflow" -> "onnx/onnxmltools" ["e"=1]
"onnx/onnx-tensorflow" -> "IntelLabs/distiller" ["e"=1]
"onnx/onnx-tensorflow" -> "gmalivenko/pytorch2keras"
"onnx/onnx-tensorflow" -> "MTLab/onnx2caffe" ["e"=1]
"onnx/onnx-tensorflow" -> "uxlfoundation/oneDNN" ["e"=1]
"onnx/onnx-tensorflow" -> "Tencent/TNN"
"moelgendy/deep_learning_for_vision_systems" -> "PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition"
"kuangliu/torchcv" -> "kuangliu/pytorch-ssd"
"kuangliu/torchcv" -> "ignacio-rocco/detectorch"
"kuangliu/torchcv" -> "c0nn3r/RetinaNet"
"kuangliu/torchcv" -> "1zb/deformable-convolution-pytorch"
"kuangliu/torchcv" -> "ShuangXieIrene/ssds.pytorch"
"kuangliu/torchcv" -> "lzx1413/PytorchSSD"
"kuangliu/torchcv" -> "uoip/SSD-variants"
"kuangliu/torchcv" -> "soeaver/Pytorch_Mask_RCNN"
"kuangliu/torchcv" -> "bharatsingh430/Deformable-ConvNets" ["e"=1]
"kuangliu/torchcv" -> "marvis/pytorch-yolo2"
"kuangliu/torchcv" -> "jwyang/fpn.pytorch"
"kuangliu/torchcv" -> "kuangliu/pytorch-retinanet"
"kuangliu/torchcv" -> "longcw/RoIAlign.pytorch"
"hzylmf/od-annotation" -> "gaopinghai/LabelWeb"
"hzylmf/od-annotation" -> "vandyyu/dataset_labeling"
"hzylmf/od-annotation" -> "liu-nlper/SLTK" ["e"=1]
"hzylmf/od-annotation" -> "liuhuanyong/TopicCluster" ["e"=1]
"hzylmf/od-annotation" -> "mingx9527/Data_Label_Tools"
"ignacio-rocco/detectorch" -> "kuangliu/torchcv"
"ignacio-rocco/detectorch" -> "roytseng-tw/Detectron.pytorch"
"ignacio-rocco/detectorch" -> "c0nn3r/RetinaNet"
"ignacio-rocco/detectorch" -> "longcw/RoIAlign.pytorch"
"ignacio-rocco/detectorch" -> "felixgwu/mask_rcnn_pytorch"
"ignacio-rocco/detectorch" -> "veronikayurchuk/pretrained-models.pytorch"
"ignacio-rocco/detectorch" -> "soeaver/Pytorch_Mask_RCNN"
"ignacio-rocco/detectorch" -> "marvis/pytorch-yolo3"
"ignacio-rocco/detectorch" -> "1zb/deformable-convolution-pytorch"
"ignacio-rocco/detectorch" -> "lzx1413/PytorchSSD"
"ignacio-rocco/detectorch" -> "marvis/pytorch-yolo2"
"ignacio-rocco/detectorch" -> "longcw/yolo2-pytorch"
"ignacio-rocco/detectorch" -> "clcarwin/convert_torch_to_pytorch"
"ignacio-rocco/detectorch" -> "youansheng/pytorch-cv" ["e"=1]
"ignacio-rocco/detectorch" -> "longcw/faster_rcnn_pytorch"
"Lyken17/Efficient-PyTorch" -> "tanglang96/DataLoaders_DALI"
"Lyken17/Efficient-PyTorch" -> "Fangyh09/Image2LMDB"
"Lyken17/Efficient-PyTorch" -> "rmccorm4/PyTorch-LMDB"
"Lyken17/Efficient-PyTorch" -> "lartpang/PyTorchTricks"
"Lyken17/Efficient-PyTorch" -> "vahidk/tfrecord"
"Lyken17/Efficient-PyTorch" -> "Lyken17/pytorch-memonger"
"Lyken17/Efficient-PyTorch" -> "xunge/pytorch_lmdb_imagenet"
"Lyken17/Efficient-PyTorch" -> "mit-han-lab/proxylessnas" ["e"=1]
"Lyken17/Efficient-PyTorch" -> "yuhuixu1993/PC-DARTS" ["e"=1]
"Lyken17/Efficient-PyTorch" -> "Lyken17/pytorch-OpCounter"
"Lyken17/Efficient-PyTorch" -> "NVIDIA/DALI"
"Lyken17/Efficient-PyTorch" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"Lyken17/Efficient-PyTorch" -> "BayesWatch/sequential-imagenet-dataloader"
"Lyken17/Efficient-PyTorch" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"Lyken17/Efficient-PyTorch" -> "D-X-Y/AutoDL-Projects" ["e"=1]
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "ayooshkathuria/pytorch-yolo-v3"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "eriklindernoren/PyTorch-YOLOv3"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "Tencent/ObjectDetection-OneStageDet"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "ultralytics/yolov3"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "amdegroot/ssd.pytorch"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "princeton-vl/CornerNet"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "longcw/yolo2-pytorch"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "amusi/awesome-object-detection"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "qqwweee/keras-yolo3"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "jwyang/faster-rcnn.pytorch"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "princeton-vl/CornerNet-Lite"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "tianzhi0549/FCOS"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "chenyuntc/simple-faster-rcnn-pytorch"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "Tianxiaomo/pytorch-YOLOv4"
"akshaybahadur21/QuickDraw" -> "keisukeirie/quickdraw_prediction_model"
"akshaybahadur21/QuickDraw" -> "fanbyprinciple/air_paint"
"EvilPsyCHo/Attention-PyTorch" -> "bubbliiiing/Keras-Attention"
"EvilPsyCHo/Attention-PyTorch" -> "thomlake/pytorch-attention"
"EvilPsyCHo/Attention-PyTorch" -> "yuquanle/Attention-Mechanisms-paper"
"waleedka/hiddenlayer" -> "szagoruyko/pytorchviz"
"waleedka/hiddenlayer" -> "sksq96/pytorch-summary"
"waleedka/hiddenlayer" -> "lanpa/tensorboardX"
"waleedka/hiddenlayer" -> "microsoft/tensorwatch"
"waleedka/hiddenlayer" -> "utkuozbulak/pytorch-cnn-visualizations"
"waleedka/hiddenlayer" -> "Cadene/pretrained-models.pytorch"
"waleedka/hiddenlayer" -> "pytorch/ignite"
"waleedka/hiddenlayer" -> "LiyuanLucasLiu/RAdam"
"waleedka/hiddenlayer" -> "skorch-dev/skorch" ["e"=1]
"waleedka/hiddenlayer" -> "tusen-ai/simpledet"
"waleedka/hiddenlayer" -> "pytorch/tnt"
"waleedka/hiddenlayer" -> "donnyyou/torchcv"
"waleedka/hiddenlayer" -> "Tencent/ObjectDetection-OneStageDet"
"waleedka/hiddenlayer" -> "StacyYang/gluoncv-torch" ["e"=1]
"waleedka/hiddenlayer" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"PacktPublishing/Mastering-OpenCV-4-with-Python" -> "PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition"
"PacktPublishing/Mastering-OpenCV-4-with-Python" -> "PacktPublishing/Mastering-OpenCV-4-Third-Edition"
"PacktPublishing/Mastering-OpenCV-4-with-Python" -> "PacktPublishing/Building-Computer-Vision-Projects-with-OpenCV4-and-CPlusPlus"
"PacktPublishing/Mastering-OpenCV-4-with-Python" -> "PacktPublishing/OpenCV-4-with-Python-Blueprints-Second-Edition"
"PacktPublishing/Mastering-OpenCV-4-with-Python" -> "PacktPublishing/Hands-On-Machine-Learning-with-OpenCV-4"
"PacktPublishing/Mastering-OpenCV-4-with-Python" -> "PacktPublishing/OpenCV-3-Computer-Vision-with-Python-Cookbook"
"regeirk/pycwt" -> "aaren/wavelets"
"regeirk/pycwt" -> "mabelcalim/waipy"
"regeirk/pycwt" -> "ct6502/wavelets"
"regeirk/pycwt" -> "grinsted/wavelet-coherence"
"regeirk/pycwt" -> "fastlib/fCWT"
"regeirk/pycwt" -> "alsauve/scaleogram"
"regeirk/pycwt" -> "OverLordGoldDragon/ssqueezepy"
"regeirk/pycwt" -> "LinkedEarth/Pyleoclim_util"
"regeirk/pycwt" -> "PyWavelets/pywt"
"regeirk/pycwt" -> "yangysc/Wavelet-HFCM"
"IgorSusmelj/pytorch-styleguide" -> "vahidk/EffectivePyTorch" ["e"=1]
"IgorSusmelj/pytorch-styleguide" -> "victoresque/pytorch-template"
"IgorSusmelj/pytorch-styleguide" -> "TylerYep/torchinfo"
"IgorSusmelj/pytorch-styleguide" -> "sksq96/pytorch-summary"
"IgorSusmelj/pytorch-styleguide" -> "moemen95/Pytorch-Project-Template"
"IgorSusmelj/pytorch-styleguide" -> "ashleve/lightning-hydra-template"
"IgorSusmelj/pytorch-styleguide" -> "paperswithcode/releasing-research-code" ["e"=1]
"IgorSusmelj/pytorch-styleguide" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"IgorSusmelj/pytorch-styleguide" -> "arogozhnikov/einops"
"IgorSusmelj/pytorch-styleguide" -> "bighuang624/AI-research-tools" ["e"=1]
"IgorSusmelj/pytorch-styleguide" -> "lightly-ai/lightly" ["e"=1]
"IgorSusmelj/pytorch-styleguide" -> "bharathgs/Awesome-pytorch-list" ["e"=1]
"IgorSusmelj/pytorch-styleguide" -> "KevinMusgrave/pytorch-metric-learning"
"IgorSusmelj/pytorch-styleguide" -> "pytorch/captum"
"IgorSusmelj/pytorch-styleguide" -> "jason718/awesome-self-supervised-learning" ["e"=1]
"willard-yuan/pcv-book-code" -> "jesolem/PCV"
"willard-yuan/pcv-book-code" -> "yeyun111/dlcv_for_beginners"
"willard-yuan/pcv-book-code" -> "techfort/pycv"
"willard-yuan/pcv-book-code" -> "tinyzqh/Opencv-Computer-Vision-Practice-Python-"
"willard-yuan/pcv-book-code" -> "PacktPublishing/OpenCV3-Computer-Vision-Application-Programming-Cookbook-Third-Edition"
"willard-yuan/pcv-book-code" -> "DragonFive/cv_nlp_deeplearning"
"brain-research/realistic-ssl-evaluation" -> "google-research/mixmatch"
"brain-research/realistic-ssl-evaluation" -> "takerum/vat_tf"
"brain-research/realistic-ssl-evaluation" -> "benathi/fastswa-semi-sup"
"brain-research/realistic-ssl-evaluation" -> "CuriousAI/mean-teacher"
"brain-research/realistic-ssl-evaluation" -> "perrying/realistic-ssl-evaluation-pytorch"
"brain-research/realistic-ssl-evaluation" -> "siit-vtt/semi-supervised-learning-pytorch"
"brain-research/realistic-ssl-evaluation" -> "vikasverma1077/ICT"
"brain-research/realistic-ssl-evaluation" -> "YU1ut/MixMatch-pytorch"
"brain-research/realistic-ssl-evaluation" -> "google-research/remixmatch"
"brain-research/realistic-ssl-evaluation" -> "9310gaurav/virtual-adversarial-training"
"brain-research/realistic-ssl-evaluation" -> "lyakaap/VAT-pytorch"
"brain-research/realistic-ssl-evaluation" -> "google-research/fixmatch"
"brain-research/realistic-ssl-evaluation" -> "iBelieveCJM/pseudo_label-pytorch"
"brain-research/realistic-ssl-evaluation" -> "ZHKKKe/DualStudent" ["e"=1]
"brain-research/realistic-ssl-evaluation" -> "s-laine/tempens"
"richardaecn/class-balanced-loss" -> "vandit15/Class-balanced-loss-pytorch"
"richardaecn/class-balanced-loss" -> "kaidic/LDAM-DRW"
"richardaecn/class-balanced-loss" -> "megvii-research/BBN"
"richardaecn/class-balanced-loss" -> "zhmiao/OpenLongTailRecognition-OLTR"
"richardaecn/class-balanced-loss" -> "facebookresearch/classifier-balancing"
"richardaecn/class-balanced-loss" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"richardaecn/class-balanced-loss" -> "frank-xwang/RIDE-LongTailRecognition"
"richardaecn/class-balanced-loss" -> "YyzHarry/imbalanced-semi-self"
"richardaecn/class-balanced-loss" -> "richardaecn/cvpr18-inaturalist-transfer" ["e"=1]
"richardaecn/class-balanced-loss" -> "visipedia/inat_comp"
"richardaecn/class-balanced-loss" -> "tztztztztz/eql.detectron2"
"richardaecn/class-balanced-loss" -> "dvlab-research/MiSLAS"
"richardaecn/class-balanced-loss" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"richardaecn/class-balanced-loss" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"richardaecn/class-balanced-loss" -> "jiangtaoxie/fast-MPN-COV" ["e"=1]
"zhmiao/OpenLongTailRecognition-OLTR" -> "facebookresearch/classifier-balancing"
"zhmiao/OpenLongTailRecognition-OLTR" -> "kaidic/LDAM-DRW"
"zhmiao/OpenLongTailRecognition-OLTR" -> "megvii-research/BBN"
"zhmiao/OpenLongTailRecognition-OLTR" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"zhmiao/OpenLongTailRecognition-OLTR" -> "frank-xwang/RIDE-LongTailRecognition"
"zhmiao/OpenLongTailRecognition-OLTR" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"zhmiao/OpenLongTailRecognition-OLTR" -> "richardaecn/class-balanced-loss"
"zhmiao/OpenLongTailRecognition-OLTR" -> "gidariss/FewShotWithoutForgetting" ["e"=1]
"zhmiao/OpenLongTailRecognition-OLTR" -> "iCGY96/awesome_OpenSetRecognition_list" ["e"=1]
"zhmiao/OpenLongTailRecognition-OLTR" -> "dvlab-research/Parametric-Contrastive-Learning"
"zhmiao/OpenLongTailRecognition-OLTR" -> "Vanint/Awesome-LongTailed-Learning"
"zhmiao/OpenLongTailRecognition-OLTR" -> "visipedia/inat_comp"
"zhmiao/OpenLongTailRecognition-OLTR" -> "abhijitbendale/OSDN" ["e"=1]
"zhmiao/OpenLongTailRecognition-OLTR" -> "tztztztztz/eql.detectron2"
"zhmiao/OpenLongTailRecognition-OLTR" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"adobe/antialiased-cnns" -> "google-research/augmix"
"adobe/antialiased-cnns" -> "zhanghang1989/ResNeSt"
"adobe/antialiased-cnns" -> "MaureenZOU/Adaptive-anti-Aliasing"
"adobe/antialiased-cnns" -> "fyu/drn" ["e"=1]
"adobe/antialiased-cnns" -> "LiyuanLucasLiu/RAdam"
"adobe/antialiased-cnns" -> "facebookresearch/pycls"
"adobe/antialiased-cnns" -> "richzhang/antialiased-cnns"
"adobe/antialiased-cnns" -> "ajbrock/BigGAN-PyTorch" ["e"=1]
"adobe/antialiased-cnns" -> "kakaobrain/fast-autoaugment"
"adobe/antialiased-cnns" -> "xingyizhou/ExtremeNet"
"adobe/antialiased-cnns" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"adobe/antialiased-cnns" -> "JudyYe/zero-shot-gcn" ["e"=1]
"adobe/antialiased-cnns" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"adobe/antialiased-cnns" -> "tianzhi0549/FCOS"
"adobe/antialiased-cnns" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"facebookresearch/pycls" -> "zhanghang1989/ResNeSt"
"facebookresearch/pycls" -> "facebookresearch/ClassyVision"
"facebookresearch/pycls" -> "mit-han-lab/proxylessnas" ["e"=1]
"facebookresearch/pycls" -> "mit-han-lab/once-for-all" ["e"=1]
"facebookresearch/pycls" -> "lukemelas/EfficientNet-PyTorch"
"facebookresearch/pycls" -> "facebookresearch/mobile-vision" ["e"=1]
"facebookresearch/pycls" -> "kakaobrain/fast-autoaugment"
"facebookresearch/pycls" -> "rwightman/gen-efficientnet-pytorch"
"facebookresearch/pycls" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"facebookresearch/pycls" -> "megvii-model/ShuffleNet-Series"
"facebookresearch/pycls" -> "JiahuiYu/slimmable_networks" ["e"=1]
"facebookresearch/pycls" -> "zhanghang1989/RegNet-Search-PyTorch" ["e"=1]
"facebookresearch/pycls" -> "D-X-Y/Awesome-AutoDL" ["e"=1]
"facebookresearch/pycls" -> "quark0/darts" ["e"=1]
"facebookresearch/pycls" -> "facebookresearch/vissl" ["e"=1]
"kaidic/LDAM-DRW" -> "megvii-research/BBN"
"kaidic/LDAM-DRW" -> "facebookresearch/classifier-balancing"
"kaidic/LDAM-DRW" -> "zhmiao/OpenLongTailRecognition-OLTR"
"kaidic/LDAM-DRW" -> "richardaecn/class-balanced-loss"
"kaidic/LDAM-DRW" -> "frank-xwang/RIDE-LongTailRecognition"
"kaidic/LDAM-DRW" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"kaidic/LDAM-DRW" -> "vandit15/Class-balanced-loss-pytorch"
"kaidic/LDAM-DRW" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"kaidic/LDAM-DRW" -> "YyzHarry/imbalanced-semi-self"
"kaidic/LDAM-DRW" -> "Vanint/SADE-AgnosticLT"
"kaidic/LDAM-DRW" -> "dvlab-research/Parametric-Contrastive-Learning"
"kaidic/LDAM-DRW" -> "dvlab-research/MiSLAS"
"kaidic/LDAM-DRW" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"kaidic/LDAM-DRW" -> "Vanint/Awesome-LongTailed-Learning"
"kaidic/LDAM-DRW" -> "ShadeAlsha/LTR-weight-balancing"
"xiyusullos/ml_exercise" -> "houxiao/machine_learning_note"
"xiyusullos/ml_exercise" -> "ahangchen/melon_concepts"
"xiyusullos/ml_exercise" -> "Microstrong0305/Machine-Learning-ZhouZhiHua"
"xiyusullos/ml_exercise" -> "HadXu/ML-From-Scratch"
"xiyusullos/ml_exercise" -> "wererLinC/Machine_Learning"
"williamFalcon/test-tube" -> "Lightning-AI/deep-learning-project-template"
"williamFalcon/test-tube" -> "IDSIA/sacred" ["e"=1]
"williamFalcon/test-tube" -> "zygmuntz/hyperband" ["e"=1]
"williamFalcon/test-tube" -> "henripal/labnotebook" ["e"=1]
"williamFalcon/test-tube" -> "torrvision/crayon"
"williamFalcon/test-tube" -> "Lightning-Universe/lightning-bolts"
"williamFalcon/test-tube" -> "harvardnlp/pytorch-struct" ["e"=1]
"williamFalcon/test-tube" -> "nitrain/nitrain"
"williamFalcon/test-tube" -> "ikostrikov/pytorch-flows" ["e"=1]
"williamFalcon/test-tube" -> "pytorch/tnt"
"williamFalcon/test-tube" -> "Kaixhin/FGLab" ["e"=1]
"williamFalcon/test-tube" -> "salesforce/matchbox" ["e"=1]
"williamFalcon/test-tube" -> "facebookresearch/higher" ["e"=1]
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition"
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "fengzhenHIT/learnOpenCV4"
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "fengzhenHIT/OpenCV-contrib-module-Chinese-Tutorials"
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "PacktPublishing/Mastering-OpenCV-4-with-Python"
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "oreillymedia/Learning-OpenCV-3_examples"
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" ["e"=1]
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "gzr2017/ImageProcessing100Wen"
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "fendouai/OpenCVTutorials"
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "laganiere/OpenCV3Cookbook"
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "sundyCoder/DEye" ["e"=1]
"gykovacs/common_datasets" -> "syxiaa/RSMOTE"
"PaddlePaddle/Serving" -> "PaddlePaddle/PaddleFleetX"
"PaddlePaddle/Serving" -> "Galloping-Vijay/laravel-wjfcms" ["e"=1]
"PaddlePaddle/Serving" -> "Crytochain/Chain-Go" ["e"=1]
"PaddlePaddle/Serving" -> "JChrysanthemum/VSMD" ["e"=1]
"PaddlePaddle/Serving" -> "HAIRLAB/Pre_Surv_COVID_19" ["e"=1]
"PaddlePaddle/Serving" -> "H-Liu1997/Pytorch-Networks" ["e"=1]
"PaddlePaddle/Serving" -> "ir-st/ANPT" ["e"=1]
"PaddlePaddle/Serving" -> "CodeFrankZZZ/machine_learning" ["e"=1]
"PaddlePaddle/Serving" -> "chenmingxiang110/Chinese-automatic-speech-recognition" ["e"=1]
"PaddlePaddle/Serving" -> "Cryptochain-VON/VON-Mask" ["e"=1]
"PaddlePaddle/Serving" -> "mortimer-cra/AlarmRobot" ["e"=1]
"PaddlePaddle/Serving" -> "Cryptochain-VON/Crypto" ["e"=1]
"PaddlePaddle/Serving" -> "chenmingxiang110/Growing-Neural-Cellular-Automata" ["e"=1]
"PaddlePaddle/Serving" -> "HaloTrouvaille/YOLO-Multi-Backbones-Attention" ["e"=1]
"PaddlePaddle/Serving" -> "hongwen1993/fast-drools-spring-boot-starter" ["e"=1]
"ShuangXieIrene/ssds.pytorch" -> "lzx1413/PytorchSSD"
"ShuangXieIrene/ssds.pytorch" -> "qfgaohao/pytorch-ssd"
"ShuangXieIrene/ssds.pytorch" -> "GOATmessi8/RFBNet"
"ShuangXieIrene/ssds.pytorch" -> "shaoshengsong/MobileNetV3-SSD" ["e"=1]
"ShuangXieIrene/ssds.pytorch" -> "lufficc/SSD"
"ShuangXieIrene/ssds.pytorch" -> "Stinky-Tofu/Stronger-yolo"
"ShuangXieIrene/ssds.pytorch" -> "marvis/pytorch-yolo2"
"ShuangXieIrene/ssds.pytorch" -> "BobLiu20/YOLOv3_PyTorch"
"ShuangXieIrene/ssds.pytorch" -> "uoip/SSD-variants"
"ShuangXieIrene/ssds.pytorch" -> "amdegroot/ssd.pytorch"
"ShuangXieIrene/ssds.pytorch" -> "lucasjinreal/ssds_pytorch"
"ShuangXieIrene/ssds.pytorch" -> "xingyizhou/ExtremeNet"
"ShuangXieIrene/ssds.pytorch" -> "kuangliu/torchcv"
"ShuangXieIrene/ssds.pytorch" -> "sfzhang15/RefineDet"
"ShuangXieIrene/ssds.pytorch" -> "yqyao/SSD_Pytorch"
"dongdonghy/Detection-PyTorch-Notebook" -> "bobo0810/PytorchNetHub"
"dongdonghy/Detection-PyTorch-Notebook" -> "GOATmessi8/ASFF"
"dongdonghy/Detection-PyTorch-Notebook" -> "Tianxiaomo/pytorch-YOLOv4"
"dongdonghy/Detection-PyTorch-Notebook" -> "chenyuntc/simple-faster-rcnn-pytorch"
"dongdonghy/Detection-PyTorch-Notebook" -> "pprp/SimpleCVReproduction"
"dongdonghy/Detection-PyTorch-Notebook" -> "jwyang/faster-rcnn.pytorch"
"dongdonghy/Detection-PyTorch-Notebook" -> "dragen1860/Deep-Learning-with-PyTorch-Tutorials" ["e"=1]
"dongdonghy/Detection-PyTorch-Notebook" -> "hhaAndroid/mmdetection-mini"
"dongdonghy/Detection-PyTorch-Notebook" -> "longpeng2008/yousan.ai"
"dongdonghy/Detection-PyTorch-Notebook" -> "amdegroot/ssd.pytorch"
"dongdonghy/Detection-PyTorch-Notebook" -> "Tencent/ObjectDetection-OneStageDet"
"dongdonghy/Detection-PyTorch-Notebook" -> "bubbliiiing/yolov4-pytorch"
"dongdonghy/Detection-PyTorch-Notebook" -> "kemaloksuz/ObjectDetectionImbalance"
"dongdonghy/Detection-PyTorch-Notebook" -> "eriklindernoren/PyTorch-YOLOv3"
"dongdonghy/Detection-PyTorch-Notebook" -> "amusi/awesome-object-detection"
"chenyuntc/pytorch-best-practice" -> "chenyuntc/pytorch-book" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "pytorch/tnt"
"chenyuntc/pytorch-best-practice" -> "ShomyLiu/pytorch-relation-extraction" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "ypwhs/dogs_vs_cats" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "longcw/faster_rcnn_pytorch"
"chenyuntc/pytorch-best-practice" -> "chenyuntc/simple-faster-rcnn-pytorch"
"chenyuntc/pytorch-best-practice" -> "L1aoXingyu/pytorch-beginner" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "ruotianluo/pytorch-faster-rcnn"
"chenyuntc/pytorch-best-practice" -> "spytensor/pytorch-image-classification" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "moskomule/senet.pytorch" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "lzx1413/PytorchSSD"
"chenyuntc/pytorch-best-practice" -> "chenyuntc/PyTorchText" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "L1aoXingyu/code-of-learn-deep-learning-with-pytorch" ["e"=1]
"willemmanuel/poisson-image-editing" -> "PPPW/poisson-image-editing"
"willemmanuel/poisson-image-editing" -> "yskmt/pb"
"PPPW/poisson-image-editing" -> "willemmanuel/poisson-image-editing"
"PPPW/poisson-image-editing" -> "deepankarc/image-poisson-blending"
"tobiagru/ObjectDetectionGroceryProducts" -> "ParallelDots/generic-sku-detection-benchmark"
"tobiagru/ObjectDetectionGroceryProducts" -> "gulvarol/grocerydataset"
"tobiagru/ObjectDetectionGroceryProducts" -> "tyomj/product_detection"
"lyakaap/VAT-pytorch" -> "9310gaurav/virtual-adversarial-training"
"lyakaap/VAT-pytorch" -> "takerum/vat_tf"
"lyakaap/VAT-pytorch" -> "benathi/fastswa-semi-sup"
"lyakaap/VAT-pytorch" -> "takerum/vat"
"lyakaap/VAT-pytorch" -> "YU1ut/MixMatch-pytorch"
"lyakaap/VAT-pytorch" -> "jik0730/VAT-pytorch"
"lyakaap/VAT-pytorch" -> "CuriousAI/mean-teacher"
"lyakaap/VAT-pytorch" -> "naoto0804/pytorch-VAT"
"lyakaap/VAT-pytorch" -> "vikasverma1077/ICT"
"lyakaap/VAT-pytorch" -> "ferretj/temporal-ensembling"
"lyakaap/VAT-pytorch" -> "brain-research/realistic-ssl-evaluation"
"lyakaap/VAT-pytorch" -> "s-laine/tempens"
"lyakaap/VAT-pytorch" -> "siit-vtt/semi-supervised-learning-pytorch"
"lyakaap/VAT-pytorch" -> "xinmei9322/SNTG"
"lyakaap/VAT-pytorch" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"hustcxl/SP_Lib" -> "MVRonkin/dsatools"
"hustcxl/SP_Lib" -> "ZhaoZhibin/DL-based-Intelligent-Diagnosis-Benchmark" ["e"=1]
"hustcxl/SP_Lib" -> "hustcxl/Rotating-machine-fault-data-set" ["e"=1]
"hustcxl/SP_Lib" -> "vrcarva/vmdpy"
"hustcxl/SP_Lib" -> "gkaposto/Swarm-Decomposition"
"hustcxl/SP_Lib" -> "laszukdawid/PyEMD"
"hustcxl/SP_Lib" -> "ZhaoZhibin/UDTL" ["e"=1]
"akshaybhatia10/ComputerVision-Projects" -> "anuragreddygv323/computer-vision-projects"
"akshaybhatia10/ComputerVision-Projects" -> "rssr25/Computer-Vision"
"akshaybhatia10/ComputerVision-Projects" -> "PacktPublishing/OpenCV-Computer-Vision-Projects-with-Python"
"akshaybhatia10/ComputerVision-Projects" -> "moadmmh/Awesome-OpenCV"
"HuaJiuShi/-MATLAB-GUI-" -> "Graceliulingzi/MATLAB-GUI-design--image-processing"
"qfgaohao/pytorch-ssd" -> "lufficc/SSD"
"qfgaohao/pytorch-ssd" -> "amdegroot/ssd.pytorch"
"qfgaohao/pytorch-ssd" -> "ShuangXieIrene/ssds.pytorch"
"qfgaohao/pytorch-ssd" -> "lzx1413/PytorchSSD"
"qfgaohao/pytorch-ssd" -> "chuanqi305/MobileNet-SSD" ["e"=1]
"qfgaohao/pytorch-ssd" -> "shaoshengsong/MobileNetV3-SSD" ["e"=1]
"qfgaohao/pytorch-ssd" -> "GOATmessi8/RFBNet"
"qfgaohao/pytorch-ssd" -> "Tencent/ObjectDetection-OneStageDet"
"qfgaohao/pytorch-ssd" -> "sgrvinod/a-PyTorch-Tutorial-to-Object-Detection"
"qfgaohao/pytorch-ssd" -> "princeton-vl/CornerNet"
"qfgaohao/pytorch-ssd" -> "chuanqi305/MobileNetv2-SSDLite" ["e"=1]
"qfgaohao/pytorch-ssd" -> "Duankaiwen/CenterNet"
"qfgaohao/pytorch-ssd" -> "tonylins/pytorch-mobilenet-v2" ["e"=1]
"qfgaohao/pytorch-ssd" -> "tianzhi0549/FCOS"
"qfgaohao/pytorch-ssd" -> "weiliu89/caffe" ["e"=1]
"ShuLiu1993/PANet" -> "zjhuang22/maskscoring_rcnn"
"ShuLiu1993/PANet" -> "roytseng-tw/Detectron.pytorch"
"ShuLiu1993/PANet" -> "tusen-ai/simpledet"
"ShuLiu1993/PANet" -> "tianzhi0549/FCOS"
"ShuLiu1993/PANet" -> "princeton-vl/CornerNet"
"ShuLiu1993/PANet" -> "facebookresearch/maskrcnn-benchmark"
"ShuLiu1993/PANet" -> "openseg-group/OCNet.pytorch" ["e"=1]
"ShuLiu1993/PANet" -> "VDIGPKU/M2Det"
"ShuLiu1993/PANet" -> "mahyarnajibi/SNIPER"
"ShuLiu1993/PANet" -> "sfzhang15/RefineDet"
"ShuLiu1993/PANet" -> "Duankaiwen/CenterNet"
"ShuLiu1993/PANet" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"ShuLiu1993/PANet" -> "xieenze/PolarMask"
"ShuLiu1993/PANet" -> "uber-research/UPSNet" ["e"=1]
"ShuLiu1993/PANet" -> "msracver/Relation-Networks-for-Object-Detection"
"SeuTao/kaggle-competition-solutions" -> "SeuTao/TGS-Salt-Identification"
"SeuTao/kaggle-competition-solutions" -> "matrixgardener/statistical_learning_method"
"SeuTao/kaggle-competition-solutions" -> "SeuTao/Humpback-Whale-Identification"
"SeuTao/kaggle-competition-solutions" -> "wangjiegit/WJImageBrowser"
"SeuTao/kaggle-competition-solutions" -> "luyunfeng/soulcoder"
"SeuTao/kaggle-competition-solutions" -> "matrixgardener/matrixgardener.github.io" ["e"=1]
"SeuTao/kaggle-competition-solutions" -> "bomberjin/BM-commons-Utils"
"SeuTao/kaggle-competition-solutions" -> "FishPlusOrange/pocket-manual"
"SeuTao/kaggle-competition-solutions" -> "weijiyang/webpack-chunk"
"SeuTao/kaggle-competition-solutions" -> "jieyuanfei/jianshu-react-mobile"
"SeuTao/kaggle-competition-solutions" -> "wangjiegit/WJBannerView" ["e"=1]
"SeuTao/kaggle-competition-solutions" -> "weijiyang/wechat"
"rbgirshick/yacs" -> "facebookresearch/fvcore"
"rbgirshick/yacs" -> "facebookresearch/pycls"
"rbgirshick/yacs" -> "omry/omegaconf"
"rbgirshick/yacs" -> "facebookresearch/maskrcnn-benchmark"
"rbgirshick/yacs" -> "tianzhi0549/FCOS"
"rbgirshick/yacs" -> "openseg-group/openseg.pytorch" ["e"=1]
"rbgirshick/yacs" -> "L1aoXingyu/Deep-Learning-Project-Template" ["e"=1]
"rbgirshick/yacs" -> "facebookresearch/ClassyVision"
"rbgirshick/yacs" -> "roytseng-tw/Detectron.pytorch"
"rbgirshick/yacs" -> "lvis-dataset/lvis-api"
"rbgirshick/yacs" -> "facebookresearch/vissl" ["e"=1]
"rbgirshick/yacs" -> "Lyken17/pytorch-OpCounter"
"rbgirshick/yacs" -> "arogozhnikov/einops"
"rbgirshick/yacs" -> "sfzhang15/ATSS"
"rbgirshick/yacs" -> "mapillary/inplace_abn" ["e"=1]
"pytorch/extension-cpp" -> "isdanni/log-bst"
"pytorch/extension-cpp" -> "isdanni/mit6.824"
"pytorch/extension-cpp" -> "chrischoy/pytorch-custom-cuda-tutorial"
"pytorch/extension-cpp" -> "zdevito/ATen"
"pytorch/extension-cpp" -> "szagoruyko/pyinn"
"pytorch/extension-cpp" -> "isdanni/log-boost"
"pytorch/extension-cpp" -> "pytorch/extension-ffi"
"pytorch/extension-cpp" -> "tczhangzhi/pytorch-parallel" ["e"=1]
"pytorch/extension-cpp" -> "isdanni/rating"
"pytorch/extension-cpp" -> "NVIDIA-developer-blog/code-samples" ["e"=1]
"pytorch/extension-cpp" -> "chrischoy/MakePytorchPlusPlus"
"pytorch/extension-cpp" -> "NVIDIA/cccl" ["e"=1]
"pytorch/extension-cpp" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"pytorch/extension-cpp" -> "ignacio-rocco/detectorch"
"pytorch/extension-cpp" -> "pytorch/tnt"
"knjcode/imgdupes" -> "umbertogriffo/fast-near-duplicate-image-search"
"knjcode/imgdupes" -> "markusressel/py-image-dedup"
"knjcode/imgdupes" -> "philipbl/duplicate-images"
"mehulrastogi/Deep-Belief-Network-pytorch" -> "wmingwei/restricted-boltzmann-machine-deep-belief-network-deep-boltzmann-machine-in-pytorch"
"mehulrastogi/Deep-Belief-Network-pytorch" -> "AmanPriyanshu/Deep-Belief-Networks-in-PyTorch"
"mehulrastogi/Deep-Belief-Network-pytorch" -> "GabrielBianconi/pytorch-rbm"
"mehulrastogi/Deep-Belief-Network-pytorch" -> "zhuofupan/Pytorch-Deep-Neural-Networks"
"mehulrastogi/Deep-Belief-Network-pytorch" -> "albertbup/deep-belief-network"
"mehulrastogi/Deep-Belief-Network-pytorch" -> "AlvinLXS/DBN-and-RBM-in-pytorch"
"lonePatient/Deep_Learning_For_Computer_Vision_With_Python" -> "pivapi/Deep-Learning-For-Computer-Vision-With-Python"
"lonePatient/Deep_Learning_For_Computer_Vision_With_Python" -> "TyroneLi/pyimagesearchcode"
"lonePatient/Deep_Learning_For_Computer_Vision_With_Python" -> "Abhs9/DL4CVStarterBundle"
"supervisely/supervisely" -> "DeepSystems/supervisely-tutorials" ["e"=1]
"supervisely/supervisely" -> "ryouchinsa/Rectlabel-support"
"supervisely/supervisely" -> "supervisely/dataset-tools"
"DIYer22/boxx" -> "jbohnslav/opencv_transforms"
"DIYer22/boxx" -> "BUCT-Vision/weekly-review"
"wannabeOG/Mask-RCNN" -> "multimodallearning/pytorch-mask-rcnn"
"wannabeOG/Mask-RCNN" -> "soeaver/Pytorch_Mask_RCNN"
"wannabeOG/Mask-RCNN" -> "roytseng-tw/Detectron.pytorch"
"wannabeOG/Mask-RCNN" -> "facebookresearch/maskrcnn-benchmark"
"wannabeOG/Mask-RCNN" -> "zjhuang22/maskscoring_rcnn"
"wannabeOG/Mask-RCNN" -> "ruotianluo/pytorch-faster-rcnn"
"wannabeOG/Mask-RCNN" -> "jytime/Mask_RCNN_Pytorch"
"wannabeOG/Mask-RCNN" -> "longcw/faster_rcnn_pytorch"
"wannabeOG/Mask-RCNN" -> "longcw/RoIAlign.pytorch"
"wannabeOG/Mask-RCNN" -> "Okery/PyTorch-Simple-MaskRCNN"
"wannabeOG/Mask-RCNN" -> "princeton-vl/CornerNet"
"wannabeOG/Mask-RCNN" -> "jwyang/fpn.pytorch"
"wannabeOG/Mask-RCNN" -> "donnyyou/torchcv"
"wannabeOG/Mask-RCNN" -> "jwyang/faster-rcnn.pytorch"
"wannabeOG/Mask-RCNN" -> "yhenon/pytorch-retinanet"
"ucbdrive/dla" -> "fyu/drn" ["e"=1]
"ucbdrive/dla" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"ucbdrive/dla" -> "CharlesShang/DCNv2"
"lzx1413/LabelImgTool" -> "lzx1413/labelImgPlus"
"taivop/awesome-data-annotation" -> "jsbroks/awesome-dataset-tools"
"taivop/awesome-data-annotation" -> "HumanSignal/awesome-data-labeling"
"taivop/awesome-data-annotation" -> "vmware/data-annotator-for-machine-learning"
"asanakoy/kaggle_carvana_segmentation" -> "lyakaap/Kaggle-Carvana-3rd-Place-Solution"
"asanakoy/kaggle_carvana_segmentation" -> "petrosgk/Kaggle-Carvana-Image-Masking-Challenge"
"asanakoy/kaggle_carvana_segmentation" -> "selimsef/dsb2018_topcoders"
"asanakoy/kaggle_carvana_segmentation" -> "ternaus/TernausNet" ["e"=1]
"asanakoy/kaggle_carvana_segmentation" -> "minerva-ml/open-solution-data-science-bowl-2018"
"asanakoy/kaggle_carvana_segmentation" -> "killthekitten/kaggle-ds-bowl-2018-baseline"
"asanakoy/kaggle_carvana_segmentation" -> "sneddy/pneumothorax-segmentation"
"asanakoy/kaggle_carvana_segmentation" -> "broadinstitute/keras-rcnn" ["e"=1]
"asanakoy/kaggle_carvana_segmentation" -> "lopuhin/kaggle-dsbowl-2018-dataset-fixes"
"asanakoy/kaggle_carvana_segmentation" -> "ternaus/robot-surgery-segmentation" ["e"=1]
"asanakoy/kaggle_carvana_segmentation" -> "ybabakhin/kaggle_salt_bes_phalanx"
"asanakoy/kaggle_carvana_segmentation" -> "SeuTao/kaggle-competition-solutions"
"asanakoy/kaggle_carvana_segmentation" -> "xiaozhouwang/tensorflow_speech_recognition_solution"
"asanakoy/kaggle_carvana_segmentation" -> "snakers4/ds_bowl_2018"
"asanakoy/kaggle_carvana_segmentation" -> "lopuhin/kaggle-dstl" ["e"=1]
"selimsef/dsb2018_topcoders" -> "jacobkie/2018DSB"
"selimsef/dsb2018_topcoders" -> "Lopezurrutia/DSB_2018"
"selimsef/dsb2018_topcoders" -> "mirzaevinom/data_science_bowl_2018"
"selimsef/dsb2018_topcoders" -> "pdima/kaggle_2018_data_science_bowl_solution"
"selimsef/dsb2018_topcoders" -> "minerva-ml/open-solution-data-science-bowl-2018"
"selimsef/dsb2018_topcoders" -> "asanakoy/kaggle_carvana_segmentation"
"selimsef/dsb2018_topcoders" -> "lopuhin/kaggle-dsbowl-2018-dataset-fixes"
"selimsef/dsb2018_topcoders" -> "lyakaap/Kaggle-Carvana-3rd-Place-Solution"
"selimsef/dsb2018_topcoders" -> "ybabakhin/kaggle_salt_bes_phalanx"
"selimsef/dsb2018_topcoders" -> "tugstugi/pytorch-saltnet"
"selimsef/dsb2018_topcoders" -> "PavelOstyakov/predictions_balancing"
"selimsef/dsb2018_topcoders" -> "sneddy/pneumothorax-segmentation"
"selimsef/dsb2018_topcoders" -> "ternaus/TernausNet" ["e"=1]
"selimsef/dsb2018_topcoders" -> "samuelschen/DSB2018"
"selimsef/dsb2018_topcoders" -> "SeuTao/kaggle-competition-solutions"
"pytorch/contrib" -> "timgaripov/swa"
"pytorch/contrib" -> "izmailovpavel/contrib_swa_examples"
"google-research/uda" -> "google-research/mixmatch"
"google-research/uda" -> "SanghunYun/UDA_pytorch"
"google-research/uda" -> "jasonwei20/eda_nlp" ["e"=1]
"google-research/uda" -> "makcedward/nlpaug" ["e"=1]
"google-research/uda" -> "zhanlaoban/EDA_NLP_for_Chinese" ["e"=1]
"google-research/uda" -> "YU1ut/MixMatch-pytorch"
"google-research/uda" -> "CuriousAI/mean-teacher"
"google-research/uda" -> "zihangdai/xlnet" ["e"=1]
"google-research/uda" -> "google-research/fixmatch"
"google-research/uda" -> "princeton-nlp/SimCSE" ["e"=1]
"google-research/uda" -> "brightmart/albert_zh" ["e"=1]
"google-research/uda" -> "namisan/mt-dnn" ["e"=1]
"google-research/uda" -> "facebookresearch/XLM" ["e"=1]
"google-research/uda" -> "brightmart/roberta_zh" ["e"=1]
"google-research/uda" -> "kakaobrain/fast-autoaugment"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Paddle-Inference-Demo"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Paddle-Lite-Demo"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/PaddleHelix" ["e"=1]
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/docs"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Parakeet" ["e"=1]
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Serving"
"PaddlePaddle/Paddle2ONNX" -> "AgentMaker/Paddle-Image-Models" ["e"=1]
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/PGL"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/PaddleFleetX"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/PaddleYOLO"
"felix-last/kmeans_smote" -> "felix-last/evaluate-kmeans-smote"
"felix-last/kmeans_smote" -> "analyticalmindsltd/smote_variants"
"felix-last/kmeans_smote" -> "syxiaa/RSMOTE"
"Captain1986/CaptainBlackboard" -> "pprp/SimpleCVReproduction"
"Captain1986/CaptainBlackboard" -> "GYee/CV_interviews_Q-A" ["e"=1]
"Captain1986/CaptainBlackboard" -> "kuanhungchen/awesome-tiny-object-detection" ["e"=1]
"Captain1986/CaptainBlackboard" -> "amusi/CV-Company-List" ["e"=1]
"Captain1986/CaptainBlackboard" -> "harleyszhang/cv_note" ["e"=1]
"Captain1986/CaptainBlackboard" -> "ming71/CV_PaperDaily"
"Captain1986/CaptainBlackboard" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"Captain1986/CaptainBlackboard" -> "amusi/awesome-object-detection"
"Captain1986/CaptainBlackboard" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"Captain1986/CaptainBlackboard" -> "666DZY666/micronet" ["e"=1]
"Captain1986/CaptainBlackboard" -> "yizt/Grad-CAM.pytorch" ["e"=1]
"Captain1986/CaptainBlackboard" -> "lcylmhlcy/Awesome-algorithm-interview" ["e"=1]
"Captain1986/CaptainBlackboard" -> "ispc-lab/SmallObjectDetectionList" ["e"=1]
"Captain1986/CaptainBlackboard" -> "princeton-vl/CornerNet"
"Captain1986/CaptainBlackboard" -> "huawei-noah/Efficient-AI-Backbones"
"martisak/dotnets" -> "gwding/draw_convnet" ["e"=1]
"Oldpan/Pytorch-Memory-Utils" -> "Swall0w/torchstat"
"Oldpan/Pytorch-Memory-Utils" -> "Lyken17/pytorch-memonger"
"Oldpan/Pytorch-Memory-Utils" -> "Lyken17/pytorch-OpCounter"
"Oldpan/Pytorch-Memory-Utils" -> "sovrasov/flops-counter.pytorch"
"Oldpan/Pytorch-Memory-Utils" -> "zasdfgbnm/TorchSnooper"
"Oldpan/Pytorch-Memory-Utils" -> "Stonesjtu/pytorch_memlab"
"Oldpan/Pytorch-Memory-Utils" -> "prigoyal/pytorch_memonger"
"Oldpan/Pytorch-Memory-Utils" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"Oldpan/Pytorch-Memory-Utils" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"Oldpan/Pytorch-Memory-Utils" -> "lartpang/PyTorchTricks"
"Oldpan/Pytorch-Memory-Utils" -> "NVIDIA/runx"
"Oldpan/Pytorch-Memory-Utils" -> "zhengzhugithub/CV-arXiv-Daily" ["e"=1]
"Oldpan/Pytorch-Memory-Utils" -> "JiahuiYu/slimmable_networks" ["e"=1]
"Oldpan/Pytorch-Memory-Utils" -> "NVIDIA/apex"
"creafz/pytorch-cnn-finetune" -> "dmitrijsc/practical-rl"
"creafz/pytorch-cnn-finetune" -> "kiselev1189/EEGClassificationMCNN"
"creafz/pytorch-cnn-finetune" -> "ternaus/TernausNetV2"
"creafz/pytorch-cnn-finetune" -> "ignacio-rocco/detectorch"
"creafz/pytorch-cnn-finetune" -> "alexeygrigorev/libftrl-python"
"creafz/pytorch-cnn-finetune" -> "Cadene/pretrained-models.pytorch"
"creafz/pytorch-cnn-finetune" -> "Spandan-Madan/Pytorch_fine_tuning_Tutorial"
"creafz/pytorch-cnn-finetune" -> "bestfitting/kaggle" ["e"=1]
"creafz/pytorch-cnn-finetune" -> "oavdeev/getbox"
"creafz/pytorch-cnn-finetune" -> "emakhov/data-quality-framework"
"creafz/pytorch-cnn-finetune" -> "sherman/blobkeeper"
"creafz/pytorch-cnn-finetune" -> "dartrevan/ChemTextMining"
"creafz/pytorch-cnn-finetune" -> "n01z3/kaggle_amazon_from_space"
"creafz/pytorch-cnn-finetune" -> "DBusAI/TF_Eager"
"creafz/pytorch-cnn-finetune" -> "ArkadiyD/CythonXGB"
"moemen95/Pytorch-Project-Template" -> "victoresque/pytorch-template"
"moemen95/Pytorch-Project-Template" -> "FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template"
"moemen95/Pytorch-Project-Template" -> "L1aoXingyu/Deep-Learning-Project-Template" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "MrGemy95/Tensorflow-Project-Template" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "IgorSusmelj/pytorch-styleguide"
"moemen95/Pytorch-Project-Template" -> "seopbo/nlp_classification" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "lyakaap/pytorch-template" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "Lightning-AI/deep-learning-project-template"
"moemen95/Pytorch-Project-Template" -> "ryul99/pytorch-project-template"
"moemen95/Pytorch-Project-Template" -> "Swall0w/torchstat"
"moemen95/Pytorch-Project-Template" -> "sksq96/pytorch-summary"
"moemen95/Pytorch-Project-Template" -> "bighuang624/AI-research-tools" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "ritchieng/deep-learning-wizard" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "hagerrady13/ERFNet-PyTorch"
"xingyizhou/ExtremeNet" -> "princeton-vl/CornerNet"
"xingyizhou/ExtremeNet" -> "Duankaiwen/CenterNet"
"xingyizhou/ExtremeNet" -> "princeton-vl/CornerNet-Lite"
"xingyizhou/ExtremeNet" -> "ethanhe42/KL-Loss"
"xingyizhou/ExtremeNet" -> "tusen-ai/simpledet"
"xingyizhou/ExtremeNet" -> "GOATmessi8/RFBNet"
"xingyizhou/ExtremeNet" -> "VDIGPKU/M2Det"
"xingyizhou/ExtremeNet" -> "tianzhi0549/FCOS"
"xingyizhou/ExtremeNet" -> "microsoft/RepPoints"
"xingyizhou/ExtremeNet" -> "OceanPang/Libra_R-CNN"
"xingyizhou/ExtremeNet" -> "vacancy/PreciseRoIPooling"
"xingyizhou/ExtremeNet" -> "mahyarnajibi/SNIPER"
"xingyizhou/ExtremeNet" -> "sfzhang15/ATSS"
"xingyizhou/ExtremeNet" -> "scaelles/DEXTR-PyTorch" ["e"=1]
"xingyizhou/ExtremeNet" -> "sfzhang15/RefineDet"
"chengchengzi/Digital-Image-Processing" -> "Ultrasty/Digital-Image-Processing"
"chengchengzi/Digital-Image-Processing" -> "qcymkxyc/Image-Process"
"chengchengzi/Digital-Image-Processing" -> "LiuFG/digital_image_process"
"chengchengzi/Digital-Image-Processing" -> "MAhaitao999/digital_image_processing"
"chengchengzi/Digital-Image-Processing" -> "matlablyz/Digital-images"
"chengchengzi/Digital-Image-Processing" -> "HansKing98/MATLAB-Image-Processing"
"chengchengzi/Digital-Image-Processing" -> "my3rs/ImageQt" ["e"=1]
"jsbroks/imantics" -> "waspinator/pycococreator"
"jsbroks/imantics" -> "chrise96/image-to-coco-json-converter"
"jsbroks/imantics" -> "hanskrupakar/COCO-Style-Dataset-Generator-GUI"
"jsbroks/imantics" -> "jsbroks/coco-annotator"
"jsbroks/imantics" -> "Tony607/labelme2coco"
"jsbroks/imantics" -> "Chien-Hung/DetVisGUI"
"trent-b/iterative-stratification" -> "amirassov/kaggle-imaterialist"
"trent-b/iterative-stratification" -> "qubvel/ttach"
"trent-b/iterative-stratification" -> "pudae/kaggle-hpa"
"trent-b/iterative-stratification" -> "BloodAxe/pytorch-toolbelt"
"trent-b/iterative-stratification" -> "dreamquark-ai/tabnet" ["e"=1]
"trent-b/iterative-stratification" -> "ZFTurbo/Weighted-Boxes-Fusion"
"trent-b/iterative-stratification" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"trent-b/iterative-stratification" -> "SeuTao/Humpback-Whale-Identification"
"trent-b/iterative-stratification" -> "psinger/kaggle-landmark-recognition-2020-1st-place" ["e"=1]
"trent-b/iterative-stratification" -> "nyanp/nyaggle" ["e"=1]
"trent-b/iterative-stratification" -> "pudae/kaggle-humpback"
"trent-b/iterative-stratification" -> "tugstugi/pytorch-saltnet"
"trent-b/iterative-stratification" -> "earhian/Humpback-Whale-Identification-1st-"
"trent-b/iterative-stratification" -> "rwightman/efficientdet-pytorch"
"trent-b/iterative-stratification" -> "sneddy/pneumothorax-segmentation"
"virajmavani/semi-auto-image-annotation-tool" -> "scaelles/DEXTR-PyTorch" ["e"=1]
"virajmavani/semi-auto-image-annotation-tool" -> "l3p-cv/lost"
"virajmavani/semi-auto-image-annotation-tool" -> "fidler-lab/curve-gcn" ["e"=1]
"virajmavani/semi-auto-image-annotation-tool" -> "bit-bots/imagetagger"
"virajmavani/semi-auto-image-annotation-tool" -> "frazerlin/fcanet" ["e"=1]
"virajmavani/semi-auto-image-annotation-tool" -> "fidler-lab/polyrnn-pp-pytorch" ["e"=1]
"virajmavani/semi-auto-image-annotation-tool" -> "Labelbox/labelbox-custom-labeling-apps"
"virajmavani/semi-auto-image-annotation-tool" -> "shuyucool/Labelme"
"szagoruyko/binary-wide-resnet" -> "McDonnell-Lab/1-bit-per-weight"
"jwyang/fpn.pytorch" -> "roytseng-tw/Detectron.pytorch"
"jwyang/fpn.pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"jwyang/fpn.pytorch" -> "kuangliu/pytorch-fpn"
"jwyang/fpn.pytorch" -> "jwyang/faster-rcnn.pytorch"
"jwyang/fpn.pytorch" -> "longcw/faster_rcnn_pytorch"
"jwyang/fpn.pytorch" -> "lzx1413/PytorchSSD"
"jwyang/fpn.pytorch" -> "unsky/FPN" ["e"=1]
"jwyang/fpn.pytorch" -> "ruoqianguo/DetNet_pytorch"
"jwyang/fpn.pytorch" -> "princeton-vl/CornerNet"
"jwyang/fpn.pytorch" -> "ruoqianguo/FPN_Pytorch"
"jwyang/fpn.pytorch" -> "ruoqianguo/cascade-rcnn_Pytorch"
"jwyang/fpn.pytorch" -> "yhenon/pytorch-retinanet"
"jwyang/fpn.pytorch" -> "GOATmessi8/RFBNet"
"jwyang/fpn.pytorch" -> "tianzhi0549/FCOS"
"jwyang/fpn.pytorch" -> "amdegroot/ssd.pytorch"
"megvii-research/megvii-pku-dl-course" -> "megvii-research/tf-tutorials"
"megvii-research/megvii-pku-dl-course" -> "MegEngine/Models"
"megvii-research/megvii-pku-dl-course" -> "megvii-research/megvii-tsinghua-dl-course"
"megvii-research/megvii-pku-dl-course" -> "MegEngine/Hub"
"megvii-research/megvii-pku-dl-course" -> "megvii-research/hpman"
"megvii-research/megvii-pku-dl-course" -> "MegEngine/MegEngine"
"kuangliu/pytorch-retinanet" -> "yhenon/pytorch-retinanet"
"kuangliu/pytorch-retinanet" -> "c0nn3r/RetinaNet"
"kuangliu/pytorch-retinanet" -> "longcw/yolo2-pytorch"
"kuangliu/pytorch-retinanet" -> "marvis/pytorch-yolo2"
"kuangliu/pytorch-retinanet" -> "roytseng-tw/Detectron.pytorch"
"kuangliu/pytorch-retinanet" -> "ruotianluo/pytorch-faster-rcnn"
"kuangliu/pytorch-retinanet" -> "amdegroot/ssd.pytorch"
"kuangliu/pytorch-retinanet" -> "longcw/faster_rcnn_pytorch"
"kuangliu/pytorch-retinanet" -> "princeton-vl/CornerNet"
"kuangliu/pytorch-retinanet" -> "jwyang/fpn.pytorch"
"kuangliu/pytorch-retinanet" -> "tianzhi0549/FCOS"
"kuangliu/pytorch-retinanet" -> "GOATmessi8/RFBNet"
"kuangliu/pytorch-retinanet" -> "lzx1413/PytorchSSD"
"kuangliu/pytorch-retinanet" -> "ignacio-rocco/detectorch"
"kuangliu/pytorch-retinanet" -> "sfzhang15/RefineDet"
"msracver/Relation-Networks-for-Object-Detection" -> "zhaoweicai/cascade-rcnn"
"msracver/Relation-Networks-for-Object-Detection" -> "vacancy/PreciseRoIPooling"
"msracver/Relation-Networks-for-Object-Detection" -> "sfzhang15/RefineDet"
"msracver/Relation-Networks-for-Object-Detection" -> "mahyarnajibi/SNIPER"
"msracver/Relation-Networks-for-Object-Detection" -> "princeton-vl/CornerNet"
"msracver/Relation-Networks-for-Object-Detection" -> "msracver/Deformable-ConvNets"
"msracver/Relation-Networks-for-Object-Detection" -> "heefe92/Relation_Networks-pytorch"
"msracver/Relation-Networks-for-Object-Detection" -> "choasup/SIN" ["e"=1]
"msracver/Relation-Networks-for-Object-Detection" -> "xingyizhou/ExtremeNet"
"msracver/Relation-Networks-for-Object-Detection" -> "roytseng-tw/Detectron.pytorch"
"msracver/Relation-Networks-for-Object-Detection" -> "lzx1413/PytorchSSD"
"msracver/Relation-Networks-for-Object-Detection" -> "tianzhi0549/FCOS"
"msracver/Relation-Networks-for-Object-Detection" -> "tusen-ai/simpledet"
"msracver/Relation-Networks-for-Object-Detection" -> "zengarden/light_head_rcnn"
"msracver/Relation-Networks-for-Object-Detection" -> "xvjiarui/GCNet" ["e"=1]
"ruoqianguo/DetNet_pytorch" -> "ruoqianguo/FPN_Pytorch"
"ruoqianguo/DetNet_pytorch" -> "ruoqianguo/cascade-rcnn_Pytorch"
"ruoqianguo/DetNet_pytorch" -> "lzx1413/PytorchSSD"
"ruoqianguo/DetNet_pytorch" -> "zhaoweicai/cascade-rcnn"
"ruoqianguo/DetNet_pytorch" -> "luuuyi/RefineDet.PyTorch"
"ruoqianguo/DetNet_pytorch" -> "GOATmessi8/RFBNet"
"ruoqianguo/DetNet_pytorch" -> "jwyang/fpn.pytorch"
"ruoqianguo/DetNet_pytorch" -> "bailvwangzi/repulsion_loss_ssd"
"ruoqianguo/DetNet_pytorch" -> "KimSoybean/ScratchDet"
"ruoqianguo/DetNet_pytorch" -> "xingyizhou/ExtremeNet"
"ruoqianguo/DetNet_pytorch" -> "ethanhe42/softer-NMS"
"ruoqianguo/DetNet_pytorch" -> "VDIGPKU/CFENet"
"ruoqianguo/DetNet_pytorch" -> "OceanPang/Libra_R-CNN"
"ruoqianguo/DetNet_pytorch" -> "zengarden/light_head_rcnn"
"ruoqianguo/DetNet_pytorch" -> "szq0214/DSOD" ["e"=1]
"miguelvr/dropblock" -> "Randl/DropBlock-pytorch"
"miguelvr/dropblock" -> "libuyu/GHM_Detection"
"miguelvr/dropblock" -> "XingangPan/IBN-Net" ["e"=1]
"miguelvr/dropblock" -> "switchablenorms/Switchable-Normalization" ["e"=1]
"miguelvr/dropblock" -> "uoguelph-mlrg/Cutout"
"miguelvr/dropblock" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"miguelvr/dropblock" -> "joe-siyuan-qiao/WeightStandardization" ["e"=1]
"miguelvr/dropblock" -> "clovaai/CutMix-PyTorch"
"miguelvr/dropblock" -> "jiangtaoxie/fast-MPN-COV" ["e"=1]
"libuyu/GHM_Detection" -> "ethanhe42/KL-Loss"
"libuyu/GHM_Detection" -> "Duankaiwen/CenterNet"
"libuyu/GHM_Detection" -> "xingyizhou/ExtremeNet"
"libuyu/GHM_Detection" -> "princeton-vl/CornerNet"
"libuyu/GHM_Detection" -> "vacancy/PreciseRoIPooling"
"libuyu/GHM_Detection" -> "GOATmessi8/RFBNet"
"libuyu/GHM_Detection" -> "OceanPang/Libra_R-CNN"
"libuyu/GHM_Detection" -> "ethanhe42/softer-NMS"
"libuyu/GHM_Detection" -> "princeton-vl/CornerNet-Lite"
"libuyu/GHM_Detection" -> "sfzhang15/ATSS"
"libuyu/GHM_Detection" -> "miguelvr/dropblock"
"libuyu/GHM_Detection" -> "tusen-ai/simpledet"
"libuyu/GHM_Detection" -> "ruoqianguo/DetNet_pytorch"
"libuyu/GHM_Detection" -> "liuwei16/CSP"
"libuyu/GHM_Detection" -> "zhaoweicai/cascade-rcnn"
"zhuofupan/Pytorch-Deep-Neural-Networks" -> "zhuofupan/Tensorflow-Deep-Neural-Networks"
"zhuofupan/Pytorch-Deep-Neural-Networks" -> "mehulrastogi/Deep-Belief-Network-pytorch"
"zhuofupan/Pytorch-Deep-Neural-Networks" -> "JustusvLiebig/Soft_Sensor_Experiments" ["e"=1]
"zhuofupan/Pytorch-Deep-Neural-Networks" -> "erika1203/dbnPytorch"
"bobo0810/PytorchNetHub" -> "dongdonghy/Detection-PyTorch-Notebook"
"bobo0810/PytorchNetHub" -> "abeardear/pytorch-YOLO-v1"
"bobo0810/PytorchNetHub" -> "bobo0810/HS-ResNet"
"bobo0810/PytorchNetHub" -> "yatengLG/SSD-Pytorch" ["e"=1]
"bobo0810/PytorchNetHub" -> "bobo0810/LearnDeepSpeed"
"bobo0810/PytorchNetHub" -> "Tencent/ObjectDetection-OneStageDet"
"bobo0810/PytorchNetHub" -> "GOATmessi8/ASFF"
"bobo0810/PytorchNetHub" -> "DingXiaoH/ACNet" ["e"=1]
"bobo0810/PytorchNetHub" -> "ming71/mmdetection-annotated"
"bobo0810/PytorchNetHub" -> "lzx1413/PytorchSSD"
"bobo0810/PytorchNetHub" -> "pprp/voc2007_for_yolo_torch"
"bobo0810/PytorchNetHub" -> "pprp/SimpleCVReproduction"
"bobo0810/PytorchNetHub" -> "Stinky-Tofu/Stronger-yolo"
"bobo0810/PytorchNetHub" -> "hhaAndroid/mmdetection-mini"
"bobo0810/PytorchNetHub" -> "bbaibowen/computer-vision" ["e"=1]
"yell/boltzmann-machines" -> "echen/restricted-boltzmann-machines"
"yell/boltzmann-machines" -> "meownoid/tensorflow-rbm"
"yell/boltzmann-machines" -> "wuaalb/keras_extensions"
"yell/boltzmann-machines" -> "andrewgordonwilson/bayesgan" ["e"=1]
"yell/boltzmann-machines" -> "GabrielBianconi/pytorch-rbm"
"yell/boltzmann-machines" -> "netket/netket" ["e"=1]
"yell/boltzmann-machines" -> "PIQuIL/QuCumber" ["e"=1]
"yell/boltzmann-machines" -> "gabrieleangeletti/Deep-Learning-TensorFlow"
"yell/boltzmann-machines" -> "omimo/xRBM"
"yell/boltzmann-machines" -> "MelJan/PyDeep"
"yell/boltzmann-machines" -> "reiinakano/gan-playground"
"yell/boltzmann-machines" -> "astorfi/TensorFlow-World-Resources" ["e"=1]
"yell/boltzmann-machines" -> "nitishsrivastava/deepnet" ["e"=1]
"yell/boltzmann-machines" -> "ofirnachum/tree_rnn" ["e"=1]
"Wizaron/instance-segmentation-pytorch" -> "hq-jiang/instance-segmentation-with-discriminative-loss-tensorflow"
"Wizaron/instance-segmentation-pytorch" -> "davyneven/fastSceneUnderstanding"
"Wizaron/instance-segmentation-pytorch" -> "davyneven/SpatialEmbeddings"
"Wizaron/instance-segmentation-pytorch" -> "aimerykong/Recurrent-Pixel-Embedding-for-Instance-Grouping"
"Wizaron/instance-segmentation-pytorch" -> "nyoki-mtl/pytorch-discriminative-loss"
"Wizaron/instance-segmentation-pytorch" -> "linksense/LightNet" ["e"=1]
"Wizaron/instance-segmentation-pytorch" -> "kulikovv/DeepColoring"
"Wizaron/instance-segmentation-pytorch" -> "harryhan618/LaneNet" ["e"=1]
"Wizaron/instance-segmentation-pytorch" -> "twke18/Adaptive_Affinity_Fields" ["e"=1]
"Wizaron/instance-segmentation-pytorch" -> "min2209/dwt"
"ternaus/TernausNetV2" -> "dmitrijsc/practical-rl"
"ternaus/TernausNetV2" -> "ternaus/kaggle_dstl_submission" ["e"=1]
"ternaus/TernausNetV2" -> "ternaus/TernausNet" ["e"=1]
"ternaus/TernausNetV2" -> "kiselev1189/EEGClassificationMCNN"
"ternaus/TernausNetV2" -> "ternaus/robot-surgery-segmentation" ["e"=1]
"ternaus/TernausNetV2" -> "oavdeev/getbox"
"ternaus/TernausNetV2" -> "sherman/blobkeeper"
"ternaus/TernausNetV2" -> "ex4sperans/maggot"
"ternaus/TernausNetV2" -> "neptune-ai/open-solution-mapping-challenge" ["e"=1]
"ternaus/TernausNetV2" -> "emakhov/data-quality-framework"
"ternaus/TernausNetV2" -> "lext/deep_docker"
"ternaus/TernausNetV2" -> "fgvbrt/nips_rl"
"ternaus/TernausNetV2" -> "DBusAI/TF_Eager"
"ternaus/TernausNetV2" -> "Dumbris/trunklucator"
"ternaus/TernausNetV2" -> "atrof/atrof.github.io"
"ildoonet/unsupervised-data-augmentation" -> "vfdev-5/UDA-pytorch"
"ildoonet/unsupervised-data-augmentation" -> "SanghunYun/UDA_pytorch"
"ildoonet/unsupervised-data-augmentation" -> "Jongchan/unsupervised_data_augmentation_pytorch"
"ildoonet/unsupervised-data-augmentation" -> "YU1ut/MixMatch-pytorch"
"ildoonet/unsupervised-data-augmentation" -> "sud0301/my_uda_pytorch"
"ildoonet/unsupervised-data-augmentation" -> "peisuke/UnsupervisedDataAugmentation.pytorch"
"ildoonet/unsupervised-data-augmentation" -> "google-research/remixmatch"
"ildoonet/unsupervised-data-augmentation" -> "maple-research-lab/EnAET"
"davyneven/fastSceneUnderstanding" -> "hq-jiang/instance-segmentation-with-discriminative-loss-tensorflow"
"davyneven/fastSceneUnderstanding" -> "Wizaron/instance-segmentation-pytorch"
"davyneven/fastSceneUnderstanding" -> "davyneven/SpatialEmbeddings"
"davyneven/fastSceneUnderstanding" -> "aimerykong/Recurrent-Pixel-Embedding-for-Instance-Grouping"
"davyneven/fastSceneUnderstanding" -> "twke18/Adaptive_Affinity_Fields" ["e"=1]
"hq-jiang/instance-segmentation-with-discriminative-loss-tensorflow" -> "davyneven/fastSceneUnderstanding"
"hq-jiang/instance-segmentation-with-discriminative-loss-tensorflow" -> "Wizaron/instance-segmentation-pytorch"
"hq-jiang/instance-segmentation-with-discriminative-loss-tensorflow" -> "davyneven/SpatialEmbeddings"
"facebookresearch/FixRes" -> "lucidrains/lambda-networks"
"facebookresearch/FixRes" -> "rwightman/gen-efficientnet-pytorch"
"facebookresearch/FixRes" -> "lukemelas/EfficientNet-PyTorch"
"facebookresearch/FixRes" -> "zhanghang1989/ResNeSt"
"facebookresearch/FixRes" -> "clovaai/CutMix-PyTorch"
"facebookresearch/FixRes" -> "facebookresearch/ClassyVision"
"facebookresearch/FixRes" -> "kakaobrain/fast-autoaugment"
"facebookresearch/FixRes" -> "google-research/noisystudent"
"facebookresearch/FixRes" -> "facebookresearch/pycls"
"facebookresearch/FixRes" -> "Alibaba-MIIL/TResNet"
"facebookresearch/FixRes" -> "szq0214/MEAL-V2" ["e"=1]
"facebookresearch/FixRes" -> "facebookresearch/WSL-Images"
"facebookresearch/FixRes" -> "joe-siyuan-qiao/WeightStandardization" ["e"=1]
"facebookresearch/FixRes" -> "joe-siyuan-qiao/DetectoRS"
"facebookresearch/FixRes" -> "clovaai/assembled-cnn" ["e"=1]
"vikasverma1077/manifold_mixup" -> "facebookresearch/mixup-cifar10"
"vikasverma1077/manifold_mixup" -> "vikasverma1077/ICT"
"vikasverma1077/manifold_mixup" -> "clovaai/CutMix-PyTorch"
"vikasverma1077/manifold_mixup" -> "snu-mllab/Co-Mixup"
"vikasverma1077/manifold_mixup" -> "google-research/augmix"
"vikasverma1077/manifold_mixup" -> "JasonZhang156/awesome-mixed-sample-data-augmentation"
"vikasverma1077/manifold_mixup" -> "YU1ut/MixMatch-pytorch"
"vikasverma1077/manifold_mixup" -> "google-research/mixmatch"
"vikasverma1077/manifold_mixup" -> "hongyi-zhang/mixup"
"vikasverma1077/manifold_mixup" -> "lyakaap/VAT-pytorch"
"vikasverma1077/manifold_mixup" -> "nupurkmr9/S2M2_fewshot" ["e"=1]
"vikasverma1077/manifold_mixup" -> "snu-mllab/PuzzleMix"
"vikasverma1077/manifold_mixup" -> "DaikiTanak/manifold_mixup"
"vikasverma1077/manifold_mixup" -> "Westlake-AI/openmixup" ["e"=1]
"vikasverma1077/manifold_mixup" -> "benathi/fastswa-semi-sup"
"ildoonet/pytorch-gradual-warmup-lr" -> "Tony-Y/pytorch_warmup"
"ildoonet/pytorch-gradual-warmup-lr" -> "clovaai/CutMix-PyTorch"
"ildoonet/pytorch-gradual-warmup-lr" -> "kakaobrain/fast-autoaugment"
"ildoonet/pytorch-gradual-warmup-lr" -> "ufoym/imbalanced-dataset-sampler"
"ildoonet/pytorch-gradual-warmup-lr" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"ildoonet/pytorch-gradual-warmup-lr" -> "CoinCheung/pytorch-loss"
"ildoonet/pytorch-gradual-warmup-lr" -> "LiyuanLucasLiu/RAdam"
"ildoonet/pytorch-gradual-warmup-lr" -> "DeepVoltaire/AutoAugment"
"ildoonet/pytorch-gradual-warmup-lr" -> "qubvel/ttach"
"ildoonet/pytorch-gradual-warmup-lr" -> "ildoonet/pytorch-randaugment"
"ildoonet/pytorch-gradual-warmup-lr" -> "BloodAxe/pytorch-toolbelt"
"ildoonet/pytorch-gradual-warmup-lr" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"ildoonet/pytorch-gradual-warmup-lr" -> "jettify/pytorch-optimizer"
"ildoonet/pytorch-gradual-warmup-lr" -> "lucidrains/byol-pytorch" ["e"=1]
"ildoonet/pytorch-gradual-warmup-lr" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"zhaoweicai/Detectron-Cascade-RCNN" -> "zhaoweicai/cascade-rcnn"
"zhaoweicai/Detectron-Cascade-RCNN" -> "ruoqianguo/cascade-rcnn_Pytorch"
"zhaoweicai/Detectron-Cascade-RCNN" -> "ethanhe42/KL-Loss"
"zhaoweicai/Detectron-Cascade-RCNN" -> "OceanPang/Libra_R-CNN"
"zhaoweicai/Detectron-Cascade-RCNN" -> "VDIGPKU/CBNet_caffe"
"zhaoweicai/Detectron-Cascade-RCNN" -> "xingyizhou/ExtremeNet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "tusen-ai/simpledet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "zhangxiaosong18/FreeAnchor"
"zhaoweicai/Detectron-Cascade-RCNN" -> "princeton-vl/CornerNet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "Duankaiwen/CenterNet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "princeton-vl/CornerNet-Lite"
"zhaoweicai/Detectron-Cascade-RCNN" -> "sfzhang15/RefineDet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "Sense-X/TSD"
"zhaoweicai/Detectron-Cascade-RCNN" -> "chongruo/detectron2-ResNeSt"
"zhaoweicai/Detectron-Cascade-RCNN" -> "thangvubk/Cascade-RPN"
"plynx-team/plynx" -> "belskikh/kekas"
"plynx-team/plynx" -> "ryfeus/stepfunctions2processing"
"plynx-team/plynx" -> "YaYaB/shuffle-big-file"
"plynx-team/plynx" -> "alxmamaev/theloop"
"plynx-team/plynx" -> "Dumbris/trunklucator"
"imedslab/pytorch_bn_fusion" -> "imedslab/solt"
"imedslab/pytorch_bn_fusion" -> "alxmamaev/theloop"
"belskikh/kekas" -> "toodef/neural-pipeline"
"belskikh/kekas" -> "goodok/fastai_sparse"
"belskikh/kekas" -> "qubvel/tta_wrapper"
"belskikh/kekas" -> "zyfra/ebonite"
"osai-ai/tensor-stream" -> "osai-ai/dokai"
"osai-ai/tensor-stream" -> "CompVis/metric-learning-divide-and-conquer" ["e"=1]
"osai-ai/tensor-stream" -> "lRomul/argus"
"osai-ai/tensor-stream" -> "lRomul/rosny"
"osai-ai/tensor-stream" -> "shrubb/box-convolutions"
"osai-ai/tensor-stream" -> "lRomul/argus-freesound" ["e"=1]
"osai-ai/tensor-stream" -> "toodef/neural-pipeline"
"osai-ai/tensor-stream" -> "MyLtYkRiTiK/ComputerVision_Tutorials_in_Russian"
"ryfeus/stepfunctions2processing" -> "DmitriiShubin/SBD"
"ryfeus/stepfunctions2processing" -> "alxmamaev/theloop"
"ryfeus/stepfunctions2processing" -> "goodok/fastai_sparse"
"toodef/neural-pipeline" -> "belskikh/kekas"
"toodef/neural-pipeline" -> "shrubb/box-convolutions"
"toodef/neural-pipeline" -> "unit8co/vegans" ["e"=1]
"toodef/neural-pipeline" -> "kiselev1189/insightface-just-works"
"toodef/neural-pipeline" -> "Yorko/gender-unbiased_BERT-based_pronoun_resolution"
"alxmamaev/theloop" -> "lopuhin/kaggle-jigsaw-2019"
"goodok/fastai_sparse" -> "DmitriiShubin/SBD"
"aabzaliev/google-coreference-3rd-place" -> "DmitriiShubin/SBD"
"aabzaliev/google-coreference-3rd-place" -> "epoch8/keras_elmo_bert"
"Tony607/Keras_Bag_of_Tricks" -> "SJTU-DL-lab/Bag_of_Tricks_CNN"
"luohenyueji/OpenCV-Practical-Exercise" -> "fengzhenHIT/OpenCV-contrib-module-Chinese-Tutorials"
"luohenyueji/OpenCV-Practical-Exercise" -> "PacktPublishing/Qt-5-and-OpenCV-4-Computer-Vision-Projects" ["e"=1]
"luohenyueji/OpenCV-Practical-Exercise" -> "WordZzzz/fisheye_calibration" ["e"=1]
"divyam02/dafrcnn-pytorch" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"divyam02/dafrcnn-pytorch" -> "chaoqichen/HTCN"
"VisionLearningGroup/DA_Detection" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"VisionLearningGroup/DA_Detection" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"VisionLearningGroup/DA_Detection" -> "yuhuayc/da-faster-rcnn"
"VisionLearningGroup/DA_Detection" -> "chaoqichen/HTCN"
"VisionLearningGroup/DA_Detection" -> "megvii-research/CR-DA-DET"
"VisionLearningGroup/DA_Detection" -> "kinredon/DA_Detection_Material"
"VisionLearningGroup/DA_Detection" -> "ChrisAllenMing/GPA-detection"
"VisionLearningGroup/DA_Detection" -> "harsh-99/SCL"
"VisionLearningGroup/DA_Detection" -> "naoto0804/cross-domain-detection"
"VisionLearningGroup/DA_Detection" -> "chengchunhsu/EveryPixelMatters"
"VisionLearningGroup/DA_Detection" -> "xinge008/SCDA"
"VisionLearningGroup/DA_Detection" -> "kinredon/umt"
"VisionLearningGroup/DA_Detection" -> "kevinhkhsu/DA_detection"
"VisionLearningGroup/DA_Detection" -> "TKKim93/DivMatch"
"VisionLearningGroup/DA_Detection" -> "caiqi/mean-teacher-cross-domain-detection"
"youtubevos/MaskTrackRCNN" -> "JialeCao001/SipMask"
"youtubevos/MaskTrackRCNN" -> "youtubevos/cocoapi"
"youtubevos/MaskTrackRCNN" -> "YuqingWang1029/VisTR"
"youtubevos/MaskTrackRCNN" -> "sabarim/STEm-Seg"
"youtubevos/MaskTrackRCNN" -> "VisualComputingInstitute/TrackR-CNN" ["e"=1]
"youtubevos/MaskTrackRCNN" -> "seoungwugoh/STM" ["e"=1]
"youtubevos/MaskTrackRCNN" -> "jiawen-zhu/Awesome-Video-Instance-Segmentation"
"youtubevos/MaskTrackRCNN" -> "VisualComputingInstitute/mots_tools" ["e"=1]
"youtubevos/MaskTrackRCNN" -> "sydney0zq/PTSNet" ["e"=1]
"youtubevos/MaskTrackRCNN" -> "lyxok1/STM-Training" ["e"=1]
"youtubevos/MaskTrackRCNN" -> "wjf5203/SeqFormer"
"youtubevos/MaskTrackRCNN" -> "andr345/frtm-vos" ["e"=1]
"youtubevos/MaskTrackRCNN" -> "FoundationVision/VNext"
"youtubevos/MaskTrackRCNN" -> "hustvl/CrossVIS"
"youtubevos/MaskTrackRCNN" -> "xieenze/PolarMask"
"Spandan-Madan/A-Collection-of-important-tasks-in-pytorch" -> "Spandan-Madan/Pytorch_fine_tuning_Tutorial"
"Spandan-Madan/A-Collection-of-important-tasks-in-pytorch" -> "mortezamg63/Accessing-and-modifying-different-layers-of-a-pretrained-model-in-pytorch"
"ruoqianguo/cascade-rcnn_Pytorch" -> "zhaoweicai/cascade-rcnn"
"ruoqianguo/cascade-rcnn_Pytorch" -> "zhaoweicai/Detectron-Cascade-RCNN"
"ruoqianguo/cascade-rcnn_Pytorch" -> "ruoqianguo/DetNet_pytorch"
"ruoqianguo/cascade-rcnn_Pytorch" -> "lzx1413/PytorchSSD"
"ruoqianguo/cascade-rcnn_Pytorch" -> "DetectionTeamUCAS/Cascade-RCNN_Tensorflow" ["e"=1]
"ruoqianguo/cascade-rcnn_Pytorch" -> "jwyang/fpn.pytorch"
"ruoqianguo/cascade-rcnn_Pytorch" -> "ming71/mmdetection-annotated"
"ruoqianguo/cascade-rcnn_Pytorch" -> "GOATmessi8/RFBNet"
"ruoqianguo/cascade-rcnn_Pytorch" -> "vacancy/PreciseRoIPooling"
"ruoqianguo/cascade-rcnn_Pytorch" -> "VDIGPKU/M2Det"
"ruoqianguo/cascade-rcnn_Pytorch" -> "ruoqianguo/FPN_Pytorch"
"ruoqianguo/cascade-rcnn_Pytorch" -> "luuuyi/RefineDet.PyTorch"
"ruoqianguo/cascade-rcnn_Pytorch" -> "Hao-Gong/cascade-rcnn-fpn-faster_rcnn-pytorch1.0"
"ruoqianguo/cascade-rcnn_Pytorch" -> "tusen-ai/simpledet"
"ruoqianguo/cascade-rcnn_Pytorch" -> "yhenon/pytorch-retinanet"
"yqyao/FCOS_PLUS" -> "Lausannen/NAS-FCOS" ["e"=1]
"yqyao/FCOS_PLUS" -> "sfzhang15/ATSS"
"yqyao/FCOS_PLUS" -> "HRNet/HRNet-FCOS" ["e"=1]
"yqyao/FCOS_PLUS" -> "tianzhi0549/FCOS"
"yqyao/FCOS_PLUS" -> "zhangxiaosong18/FreeAnchor"
"yqyao/FCOS_PLUS" -> "yqyao/SSD_Pytorch"
"yqyao/FCOS_PLUS" -> "Megvii-BaseDetection/BorderDet"
"yqyao/FCOS_PLUS" -> "Megvii-BaseDetection/DeFCN"
"yqyao/FCOS_PLUS" -> "KiveeDong/CentripetalNet"
"yqyao/FCOS_PLUS" -> "zhenghao977/FCOS-PyTorch" ["e"=1]
"yqyao/FCOS_PLUS" -> "FateScript/CenterNet-better"
"yqyao/FCOS_PLUS" -> "xieenze/PolarMask"
"yqyao/FCOS_PLUS" -> "Scalsol/RepPointsV2"
"yqyao/FCOS_PLUS" -> "vacancy/PreciseRoIPooling"
"yqyao/FCOS_PLUS" -> "aliborji/DetectionUpperbound"
"MingtaoGuo/PatchMatch" -> "harveyslash/PatchMatch"
"MingtaoGuo/PatchMatch" -> "younesse-cv/PatchMatch"
"MingtaoGuo/PatchMatch" -> "MingtaoGuo/Deep-image-analogy-TensorFlow" ["e"=1]
"MingtaoGuo/PatchMatch" -> "YuanTingHsieh/Image_Completion"
"MingtaoGuo/PatchMatch" -> "zhaoyuzhi/deepfillv2" ["e"=1]
"MingtaoGuo/PatchMatch" -> "ikuwow/PatchMatch"
"MingtaoGuo/PatchMatch" -> "Ben-Louis/Deep-Image-Analogy-PyTorch" ["e"=1]
"MingtaoGuo/PatchMatch" -> "nebula-beta/PatchMatch" ["e"=1]
"MingtaoGuo/PatchMatch" -> "ZQPei/patchmatch_inpainting"
"MingtaoGuo/PatchMatch" -> "microsoft/CoCosNet-v2" ["e"=1]
"MingtaoGuo/PatchMatch" -> "MingtaoGuo/sngan_projection_TensorFlow" ["e"=1]
"MingtaoGuo/PatchMatch" -> "FangjinhuaWang/PatchmatchNet" ["e"=1]
"ildoonet/data-science-bowl-2018" -> "nicolefinnie/kaggle-dsb2018"
"clcarwin/focal_loss_pytorch" -> "CoinCheung/pytorch-loss"
"clcarwin/focal_loss_pytorch" -> "yatengLG/Focal-Loss-Pytorch" ["e"=1]
"clcarwin/focal_loss_pytorch" -> "jfzhang95/pytorch-deeplab-xception" ["e"=1]
"clcarwin/focal_loss_pytorch" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"clcarwin/focal_loss_pytorch" -> "kuangliu/pytorch-retinanet"
"clcarwin/focal_loss_pytorch" -> "moskomule/senet.pytorch" ["e"=1]
"clcarwin/focal_loss_pytorch" -> "ufoym/imbalanced-dataset-sampler"
"clcarwin/focal_loss_pytorch" -> "Hsuxu/Loss_ToolBox-PyTorch" ["e"=1]
"clcarwin/focal_loss_pytorch" -> "KaiyangZhou/pytorch-center-loss" ["e"=1]
"clcarwin/focal_loss_pytorch" -> "junfu1115/DANet" ["e"=1]
"clcarwin/focal_loss_pytorch" -> "richardaecn/class-balanced-loss"
"clcarwin/focal_loss_pytorch" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"clcarwin/focal_loss_pytorch" -> "AlexHex7/Non-local_pytorch" ["e"=1]
"clcarwin/focal_loss_pytorch" -> "lukemelas/EfficientNet-PyTorch"
"clcarwin/focal_loss_pytorch" -> "Cadene/pretrained-models.pytorch"
"kuangliu/pytorch-fpn" -> "jwyang/fpn.pytorch"
"kuangliu/pytorch-fpn" -> "kuangliu/pytorch-retinanet"
"kuangliu/pytorch-fpn" -> "ruotianluo/pytorch-faster-rcnn"
"kuangliu/pytorch-fpn" -> "unsky/FPN" ["e"=1]
"kuangliu/pytorch-fpn" -> "wuzheng-sjtu/FastFPN" ["e"=1]
"kuangliu/pytorch-fpn" -> "longcw/yolo2-pytorch"
"kuangliu/pytorch-fpn" -> "longcw/faster_rcnn_pytorch"
"kuangliu/pytorch-fpn" -> "ShuLiu1993/PANet"
"kuangliu/pytorch-fpn" -> "oeway/pytorch-deform-conv"
"kuangliu/pytorch-fpn" -> "princeton-vl/CornerNet"
"kuangliu/pytorch-fpn" -> "1zb/deformable-convolution-pytorch"
"kuangliu/pytorch-fpn" -> "VDIGPKU/M2Det"
"kuangliu/pytorch-fpn" -> "speedinghzl/CCNet" ["e"=1]
"kuangliu/pytorch-fpn" -> "lzx1413/PytorchSSD"
"kuangliu/pytorch-fpn" -> "xmyqsh/FPN" ["e"=1]
"rois-codh/kmnist" -> "rois-codh/kaokore"
"rois-codh/kmnist" -> "ranihorev/Kuzushiji_MNIST"
"rois-codh/kmnist" -> "tascj/kaggle-kuzushiji-recognition"
"rois-codh/kmnist" -> "megagonlabs/ginza" ["e"=1]
"tsterbak/keras_tta" -> "artyompal/google_landmark_2019"
"qubvel/tta_wrapper" -> "tsterbak/keras_tta"
"qubvel/tta_wrapper" -> "belskikh/kekas"
"musket-ml/segmentation_training_pipeline" -> "artyompal/google_landmark_2019"
"flaboss/python_stratified_sampling" -> "artyompal/google_landmark_2019"
"amusi/CVPR2019-Code" -> "ethanhe42/KL-Loss"
"amusi/CVPR2019-Code" -> "zhaoweicai/Detectron-Cascade-RCNN"
"amusi/CVPR2019-Code" -> "amusi/PyTorch-From-Zero-To-One" ["e"=1]
"amusi/CVPR2019-Code" -> "amusi/TensorFlow-From-Zero-To-One" ["e"=1]
"amusi/CVPR2019-Code" -> "liuwei16/CSP"
"amusi/CVPR2019-Code" -> "implus/PytorchInsight" ["e"=1]
"amusi/CVPR2019-Code" -> "lzx1413/PytorchSSD"
"amusi/CVPR2019-Code" -> "zhengzhugithub/CV-arXiv-Daily" ["e"=1]
"amusi/CVPR2019-Code" -> "amusi/daily-paper-computer-vision"
"amusi/CVPR2019-Code" -> "princeton-vl/CornerNet"
"amusi/CVPR2019-Code" -> "princeton-vl/CornerNet-Lite"
"amusi/CVPR2019-Code" -> "foolwood/SiamMask" ["e"=1]
"amusi/CVPR2019-Code" -> "STVIR/Grid-R-CNN"
"amusi/CVPR2019-Code" -> "xvjiarui/GCNet" ["e"=1]
"amusi/CVPR2019-Code" -> "tianzhi0549/FCOS"
"PavelOstyakov/pipeline" -> "bestfitting/kaggle" ["e"=1]
"PavelOstyakov/pipeline" -> "PavelOstyakov/predictions_balancing"
"PavelOstyakov/pipeline" -> "lopuhin/kaggle-script-template"
"PavelOstyakov/pipeline" -> "liaopeiyuan/kaggle-solutions"
"PavelOstyakov/pipeline" -> "amirassov/kaggle-pneumothorax"
"marvis/pytorch-yolo3" -> "marvis/pytorch-yolo2"
"marvis/pytorch-yolo3" -> "andy-yun/pytorch-0.4-yolov3"
"marvis/pytorch-yolo3" -> "longcw/yolo2-pytorch"
"marvis/pytorch-yolo3" -> "BobLiu20/YOLOv3_PyTorch"
"marvis/pytorch-yolo3" -> "ignacio-rocco/detectorch"
"marvis/pytorch-yolo3" -> "ayooshkathuria/pytorch-yolo-v3"
"marvis/pytorch-yolo3" -> "lzx1413/PytorchSSD"
"marvis/pytorch-yolo3" -> "marvis/pytorch-caffe-darknet-convert" ["e"=1]
"marvis/pytorch-yolo3" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"marvis/pytorch-yolo3" -> "miaow1988/ShuffleNet_V2_pytorch_caffe" ["e"=1]
"marvis/pytorch-yolo3" -> "ShuangXieIrene/ssds.pytorch"
"marvis/pytorch-yolo3" -> "ShadowXZT/pytorch_RFCN"
"marvis/pytorch-yolo3" -> "ruiminshen/yolo2-pytorch"
"marvis/pytorch-yolo3" -> "soeaver/Pytorch_Mask_RCNN"
"marvis/pytorch-yolo3" -> "zengarden/light_head_rcnn"
"ethanhe42/softer-NMS" -> "ethanhe42/KL-Loss"
"ethanhe42/softer-NMS" -> "vacancy/PreciseRoIPooling"
"ethanhe42/softer-NMS" -> "VDIGPKU/CFENet"
"ethanhe42/softer-NMS" -> "bharatsingh430/soft-nms" ["e"=1]
"ethanhe42/softer-NMS" -> "ruoqianguo/DetNet_pytorch"
"ethanhe42/softer-NMS" -> "lzx1413/PytorchSSD"
"ethanhe42/softer-NMS" -> "xingyizhou/ExtremeNet"
"ethanhe42/softer-NMS" -> "hosang/gossipnet"
"ethanhe42/softer-NMS" -> "GOATmessi8/RFBNet"
"ethanhe42/softer-NMS" -> "libuyu/GHM_Detection"
"ethanhe42/softer-NMS" -> "OceanPang/Libra_R-CNN"
"acm5656/ssd_pytorch" -> "lzx1413/PytorchSSD"
"yahoojapan/AnnexML" -> "xmc-aalto/bonsai"
"uoip/SSD-variants" -> "chenyuntc/dsod.pytorch"
"uoip/SSD-variants" -> "ShuangXieIrene/ssds.pytorch"
"uoip/SSD-variants" -> "szq0214/DSOD" ["e"=1]
"uoip/SSD-variants" -> "lzx1413/PytorchSSD"
"uoip/SSD-variants" -> "luuuyi/RefineDet.PyTorch"
"uoip/SSD-variants" -> "jiangzhengkai/Video-Detection" ["e"=1]
"uoip/SSD-variants" -> "qijiezhao/pytorch-ssd"
"uoip/SSD-variants" -> "yqyao/SSD_Pytorch"
"uoip/SSD-variants" -> "kuangliu/torchcv"
"yqyao/SSD_Pytorch" -> "yqyao/DRFNet"
"yqyao/SSD_Pytorch" -> "yqyao/YOLOv3_Pytorch"
"yqyao/SSD_Pytorch" -> "luuuyi/RefineDet.PyTorch"
"yqyao/SSD_Pytorch" -> "lzx1413/PytorchSSD"
"yqyao/SSD_Pytorch" -> "yqyao/FCOS_PLUS"
"KimSoybean/ScratchDet" -> "VDIGPKU/CFENet"
"KimSoybean/ScratchDet" -> "OceanPang/Libra_R-CNN"
"KimSoybean/ScratchDet" -> "hli2020/feature_intertwiner"
"KimSoybean/ScratchDet" -> "ethanhe42/KL-Loss"
"KimSoybean/ScratchDet" -> "xingyizhou/ExtremeNet"
"KimSoybean/ScratchDet" -> "vaesl/LRF-Net"
"KimSoybean/ScratchDet" -> "Ranchentx/EFGRNet"
"KimSoybean/ScratchDet" -> "generalized-iou/Detectron.pytorch" ["e"=1]
"KimSoybean/ScratchDet" -> "ruoqianguo/DetNet_pytorch"
"KimSoybean/ScratchDet" -> "luuuyi/RefineDet.PyTorch"
"KimSoybean/ScratchDet" -> "HCIILAB/DeRPN" ["e"=1]
"KimSoybean/ScratchDet" -> "ChiCheng123/SRN" ["e"=1]
"see--/keras-centernet" -> "xuannianz/keras-CenterNet"
"see--/keras-centernet" -> "Stick-To/CenterNet-tensorflow"
"see--/keras-centernet" -> "Stick-To/Object-Detection-Tensorflow"
"see--/keras-centernet" -> "see--/kuzushiji-recognition"
"see--/keras-centernet" -> "xggIoU/centernet_tensorflow_wilderface_voc"
"see--/keras-centernet" -> "fsx950223/mobilenetv2-yolov3" ["e"=1]
"see--/keras-centernet" -> "DetectionTeamUCAS/FCOS_Tensorflow"
"see--/keras-centernet" -> "xuannianz/EfficientDet"
"see--/keras-centernet" -> "titu1994/keras-efficientnets" ["e"=1]
"see--/keras-centernet" -> "miemie2013/Keras-YOLOv4" ["e"=1]
"see--/keras-centernet" -> "bubbliiiing/centernet-keras"
"mratsim/Amazon-Forest-Computer-Vision" -> "bfortuner/pytorch-kaggle-starter"
"DmitriiShubin/SBD" -> "aabzaliev/google-coreference-3rd-place"
"l3p-cv/lost" -> "bit-bots/imagetagger"
"l3p-cv/lost" -> "Slava/label-tool"
"l3p-cv/lost" -> "virajmavani/semi-auto-image-annotation-tool"
"l3p-cv/lost" -> "scalabel/scalabel" ["e"=1]
"l3p-cv/lost" -> "SkalskiP/make-sense"
"l3p-cv/lost" -> "kinhong/OpenLabeler"
"l3p-cv/lost" -> "Britefury/django-labeller"
"l3p-cv/lost" -> "Kitware/dive" ["e"=1]
"vacancy/PreciseRoIPooling" -> "msracver/Relation-Networks-for-Object-Detection"
"vacancy/PreciseRoIPooling" -> "ethanhe42/KL-Loss"
"vacancy/PreciseRoIPooling" -> "zhaoweicai/cascade-rcnn"
"vacancy/PreciseRoIPooling" -> "ethanhe42/softer-NMS"
"vacancy/PreciseRoIPooling" -> "xingyizhou/ExtremeNet"
"vacancy/PreciseRoIPooling" -> "princeton-vl/CornerNet"
"vacancy/PreciseRoIPooling" -> "zhangxiaosong18/FreeAnchor"
"vacancy/PreciseRoIPooling" -> "foolwood/DaSiamRPN" ["e"=1]
"vacancy/PreciseRoIPooling" -> "GOATmessi8/RFBNet"
"vacancy/PreciseRoIPooling" -> "StrangerZhang/pysot-toolkit" ["e"=1]
"vacancy/PreciseRoIPooling" -> "mahyarnajibi/SNIPER"
"vacancy/PreciseRoIPooling" -> "microsoft/RepPoints"
"vacancy/PreciseRoIPooling" -> "bharatsingh430/soft-nms" ["e"=1]
"vacancy/PreciseRoIPooling" -> "visionml/pytracking" ["e"=1]
"vacancy/PreciseRoIPooling" -> "researchmm/SiamDW" ["e"=1]
"jekhor/aerial-cars-dataset" -> "aniskoubaa/car_detection_yolo_faster_rcnn_uvsc2019"
"jekhor/aerial-cars-dataset" -> "jekhor/darknet"
"aniskoubaa/car_detection_yolo_faster_rcnn_uvsc2019" -> "jekhor/aerial-cars-dataset"
"Abhs9/DL4CVStarterBundle" -> "hsSam/PracticalPythonAndOpenCV_CaseStudies"
"Abhs9/DL4CVStarterBundle" -> "WhatTheFar/opencv-cheatsheet"
"Abhs9/DL4CVStarterBundle" -> "whydna/Deep-Learning-For-Computer-Vision"
"Abhs9/DL4CVStarterBundle" -> "lonePatient/Deep_Learning_For_Computer_Vision_With_Python"
"BloodAxe/pytorch-toolbelt" -> "catalyst-team/catalyst"
"BloodAxe/pytorch-toolbelt" -> "qubvel/ttach"
"BloodAxe/pytorch-toolbelt" -> "qubvel-org/segmentation_models.pytorch"
"BloodAxe/pytorch-toolbelt" -> "ZFTurbo/Weighted-Boxes-Fusion"
"BloodAxe/pytorch-toolbelt" -> "rwightman/efficientdet-pytorch"
"BloodAxe/pytorch-toolbelt" -> "amirassov/kaggle-imaterialist"
"BloodAxe/pytorch-toolbelt" -> "ybabakhin/kaggle_salt_bes_phalanx"
"BloodAxe/pytorch-toolbelt" -> "rwightman/gen-efficientnet-pytorch"
"BloodAxe/pytorch-toolbelt" -> "trent-b/iterative-stratification"
"BloodAxe/pytorch-toolbelt" -> "jettify/pytorch-optimizer"
"BloodAxe/pytorch-toolbelt" -> "mapillary/inplace_abn" ["e"=1]
"BloodAxe/pytorch-toolbelt" -> "JunMa11/SegLossOdyssey" ["e"=1]
"BloodAxe/pytorch-toolbelt" -> "osmr/imgclsmob"
"BloodAxe/pytorch-toolbelt" -> "ternaus/TernausNetV2"
"BloodAxe/pytorch-toolbelt" -> "lightforever/mlcomp"
"google-research/mixmatch" -> "YU1ut/MixMatch-pytorch"
"google-research/mixmatch" -> "google-research/fixmatch"
"google-research/mixmatch" -> "gan3sh500/mixmatch-pytorch" ["e"=1]
"google-research/mixmatch" -> "CuriousAI/mean-teacher"
"google-research/mixmatch" -> "google-research/uda"
"google-research/mixmatch" -> "brain-research/realistic-ssl-evaluation"
"google-research/mixmatch" -> "kekmodel/FixMatch-pytorch"
"google-research/mixmatch" -> "google-research/remixmatch"
"google-research/mixmatch" -> "facebookresearch/mixup-cifar10"
"google-research/mixmatch" -> "google-research/augmix"
"google-research/mixmatch" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"google-research/mixmatch" -> "LiJunnan1992/DivideMix"
"google-research/mixmatch" -> "iBelieveCJM/pseudo_label-pytorch"
"google-research/mixmatch" -> "yassouali/awesome-semi-supervised-learning"
"google-research/mixmatch" -> "vikasverma1077/ICT"
"lightforever/mlcomp" -> "catalyst-team/classification"
"lightforever/mlcomp" -> "catalyst-team/catalyst-info"
"lightforever/mlcomp" -> "MyLtYkRiTiK/ComputerVision_Tutorials_in_Russian"
"lightforever/mlcomp" -> "DmitriiShubin/SBD"
"jytime/Mask_RCNN_Pytorch" -> "Okery/PyTorch-Simple-MaskRCNN"
"jytime/Mask_RCNN_Pytorch" -> "wannabeOG/Mask-RCNN"
"jytime/Mask_RCNN_Pytorch" -> "multimodallearning/pytorch-mask-rcnn"
"jytime/Mask_RCNN_Pytorch" -> "darolt/mask_rcnn"
"alphadl/lookahead.pytorch" -> "lonePatient/lookahead_pytorch"
"alphadl/lookahead.pytorch" -> "michaelrzhang/lookahead"
"alphadl/lookahead.pytorch" -> "mgrankin/over9000"
"alphadl/lookahead.pytorch" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"alphadl/lookahead.pytorch" -> "LiyuanLucasLiu/RAdam"
"alphadl/lookahead.pytorch" -> "bojone/keras_lookahead" ["e"=1]
"developer0hye/Yolo_Label" -> "AlexeyAB/Yolo_mark" ["e"=1]
"developer0hye/Yolo_Label" -> "ceccocats/tkDNN" ["e"=1]
"developer0hye/Yolo_Label" -> "Cartucho/OpenLabeling"
"developer0hye/Yolo_Label" -> "ssaru/convert2Yolo"
"developer0hye/Yolo_Label" -> "ryouchinsa/Rectlabel-support"
"developer0hye/Yolo_Label" -> "ArtyZe/yolo_segmentation"
"rahulkidambi/AccSGD" -> "bes-dev/mpl.pytorch"
"liaopeiyuan/kaggle-solutions" -> "SeuTao/TGS-Salt-Identification"
"liaopeiyuan/kaggle-solutions" -> "tugstugi/pytorch-saltnet"
"liaopeiyuan/kaggle-solutions" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"liaopeiyuan/kaggle-solutions" -> "ShawnBIT/Loss-family"
"liaopeiyuan/kaggle-solutions" -> "lin-honghui/tianchi_CountyAgriculturalBrain_top1" ["e"=1]
"liaopeiyuan/kaggle-solutions" -> "PavelOstyakov/pipeline"
"stigma0617/VoVNet.pytorch" -> "stigma0617/maskrcnn-benchmark-vovnet"
"stigma0617/VoVNet.pytorch" -> "youngwanLEE/vovnet-detectron2"
"stigma0617/VoVNet.pytorch" -> "youngwanLEE/CenterMask"
"VDIGPKU/M2Det" -> "GOATmessi8/RFBNet"
"VDIGPKU/M2Det" -> "lzx1413/PytorchSSD"
"VDIGPKU/M2Det" -> "sfzhang15/RefineDet"
"VDIGPKU/M2Det" -> "tusen-ai/simpledet"
"VDIGPKU/M2Det" -> "Duankaiwen/CenterNet"
"VDIGPKU/M2Det" -> "princeton-vl/CornerNet"
"VDIGPKU/M2Det" -> "mahyarnajibi/SNIPER"
"VDIGPKU/M2Det" -> "xingyizhou/ExtremeNet"
"VDIGPKU/M2Det" -> "zhaoweicai/cascade-rcnn"
"VDIGPKU/M2Det" -> "princeton-vl/CornerNet-Lite"
"VDIGPKU/M2Det" -> "VDIGPKU/CFENet"
"VDIGPKU/M2Det" -> "tianzhi0549/FCOS"
"VDIGPKU/M2Det" -> "amdegroot/ssd.pytorch"
"VDIGPKU/M2Det" -> "ethanhe42/KL-Loss"
"VDIGPKU/M2Det" -> "ShuLiu1993/PANet"
"motokimura/yolo_v1_pytorch" -> "abeardear/pytorch-YOLO-v1"
"motokimura/yolo_v1_pytorch" -> "zzzheng/pytorch-yolo-v1"
"motokimura/yolo_v1_pytorch" -> "happyjin/pytorch-YOLO"
"motokimura/yolo_v1_pytorch" -> "yjh0410/yolov2-yolov3_PyTorch"
"motokimura/yolo_v1_pytorch" -> "vietnh1009/Yolo-v2-pytorch"
"Peterisfar/YOLOV3" -> "wlguan/Stronger-yolo-pytorch"
"Peterisfar/YOLOV3" -> "DeNA/PyTorch_YOLOv3"
"Peterisfar/YOLOV3" -> "GOATmessi8/ASFF"
"Peterisfar/YOLOV3" -> "yjh0410/yolov2-yolov3_PyTorch"
"Peterisfar/YOLOV3" -> "vaesl/LRF-Net"
"dyhan0920/PyramidNet-PyTorch" -> "jhkim89/PyramidNet"
"dyhan0920/PyramidNet-PyTorch" -> "hysts/pytorch_shake_shake"
"alexeygrigorev/libftrl-python" -> "sherman/blobkeeper"
"alexeygrigorev/libftrl-python" -> "dmitrijsc/practical-rl"
"alexeygrigorev/libftrl-python" -> "oavdeev/getbox"
"alexeygrigorev/libftrl-python" -> "emakhov/data-quality-framework"
"alexeygrigorev/libftrl-python" -> "dartrevan/ChemTextMining"
"alexeygrigorev/libftrl-python" -> "atrof/atrof.github.io"
"alexeygrigorev/libftrl-python" -> "kiselev1189/EEGClassificationMCNN"
"alexeygrigorev/libftrl-python" -> "fgvbrt/nips_rl"
"alexeygrigorev/libftrl-python" -> "DBusAI/TF_Eager"
"alexeygrigorev/libftrl-python" -> "indeedeng/vowpal-wabbit-java"
"alexeygrigorev/libftrl-python" -> "ArkadiyD/CythonXGB"
"alexeygrigorev/libftrl-python" -> "lext/deep_docker"
"alexeygrigorev/libftrl-python" -> "Dumbris/trunklucator"
"alexeygrigorev/libftrl-python" -> "n01z3/kaggle_amazon_from_space"
"alexeygrigorev/libftrl-python" -> "ex4sperans/maggot"
"Stick-To/Object-Detection-Tensorflow" -> "Stick-To/CenterNet-tensorflow"
"Stick-To/Object-Detection-Tensorflow" -> "Stick-To/RefineDet-tensorflow"
"Stick-To/Object-Detection-Tensorflow" -> "see--/keras-centernet"
"Stick-To/Object-Detection-Tensorflow" -> "DetectionTeamUCAS/FCOS_Tensorflow"
"Stick-To/Object-Detection-Tensorflow" -> "Stick-To/RetinaNet-tensorflow"
"Stick-To/Object-Detection-Tensorflow" -> "Stick-To/PFPNet-tensorflow"
"Stick-To/Object-Detection-Tensorflow" -> "xuannianz/keras-CenterNet"
"Stick-To/Object-Detection-Tensorflow" -> "xggIoU/centernet_tensorflow_wilderface_voc"
"Stick-To/Object-Detection-Tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/Object-Detection-Tensorflow" -> "Stick-To/light-head-rcnn-tensorflow"
"Stick-To/Object-Detection-Tensorflow" -> "Stick-To/YOLO-tensorflow"
"Stick-To/Object-Detection-Tensorflow" -> "Stick-To/Deep_Conv_Backone_tensorflow"
"Stick-To/Object-Detection-Tensorflow" -> "Stick-To/Online_Image_Augmentor_tensorflow"
"Stick-To/Object-Detection-Tensorflow" -> "Stick-To/DLA-tensorflow"
"ming71/mmdetection-annotated" -> "hhaAndroid/mmdetection-mini"
"ming71/mmdetection-annotated" -> "ming71/toolbox" ["e"=1]
"ming71/mmdetection-annotated" -> "spytensor/prepare_detection_dataset"
"ming71/mmdetection-annotated" -> "ming71/CV_PaperDaily"
"ming71/mmdetection-annotated" -> "Sense-X/TSD"
"ming71/mmdetection-annotated" -> "tusen-ai/simpledet"
"ming71/mmdetection-annotated" -> "kemaloksuz/ObjectDetectionImbalance"
"ming71/mmdetection-annotated" -> "foocker/mmdetection-code-analysis" ["e"=1]
"ming71/mmdetection-annotated" -> "ruoqianguo/cascade-rcnn_Pytorch"
"ming71/mmdetection-annotated" -> "OceanPang/Libra_R-CNN"
"ming71/mmdetection-annotated" -> "dingjiansw101/AerialDetection" ["e"=1]
"ming71/mmdetection-annotated" -> "sfzhang15/ATSS"
"ming71/mmdetection-annotated" -> "Tencent/ObjectDetection-OneStageDet"
"ming71/mmdetection-annotated" -> "SJTU-Thinklab-Det/DOTA-DOAI" ["e"=1]
"ming71/mmdetection-annotated" -> "zhengye1995/underwater-object-detection" ["e"=1]
"ming71/CV_PaperDaily" -> "ming71/toolbox" ["e"=1]
"ming71/CV_PaperDaily" -> "ming71/mmdetection-annotated"
"ming71/CV_PaperDaily" -> "SJTU-Thinklab-Det/DOTA-DOAI" ["e"=1]
"ming71/CV_PaperDaily" -> "csuhan/s2anet" ["e"=1]
"ming71/CV_PaperDaily" -> "Megvii-BaseDetection/BorderDet"
"ming71/CV_PaperDaily" -> "hhaAndroid/mmdetection-mini"
"ming71/CV_PaperDaily" -> "dingjiansw101/AerialDetection" ["e"=1]
"ming71/CV_PaperDaily" -> "SJTU-Thinklab-Det/r3det-on-mmdetection" ["e"=1]
"ming71/CV_PaperDaily" -> "CAPTAIN-WHU/DOTA_devkit" ["e"=1]
"ming71/CV_PaperDaily" -> "pprp/SimpleCVReproduction"
"ming71/CV_PaperDaily" -> "sfzhang15/ATSS"
"ming71/CV_PaperDaily" -> "yangxue0827/RotationDetection" ["e"=1]
"ming71/CV_PaperDaily" -> "tusen-ai/simpledet"
"ming71/CV_PaperDaily" -> "kemaloksuz/ObjectDetectionImbalance"
"ming71/CV_PaperDaily" -> "Sense-X/TSD"
"Eric3911/Related-works-ch" -> "Eric3911/Mini-SSD"
"Eric3911/Related-works-ch" -> "Eric3911/Paper-Sharing"
"Eric3911/Related-works-ch" -> "Eric3911/yolov3-darknet"
"bfortuner/pytorch-kaggle-starter" -> "bfortuner/pytorch-cheatsheet"
"bfortuner/pytorch-kaggle-starter" -> "mratsim/Amazon-Forest-Computer-Vision"
"bfortuner/pytorch-kaggle-starter" -> "earhian/Humpback-Whale-Identification-1st-"
"bfortuner/pytorch-kaggle-starter" -> "sneddy/pneumothorax-segmentation"
"bfortuner/pytorch-kaggle-starter" -> "minerva-ml/open-solution-data-science-bowl-2018"
"bfortuner/pytorch-kaggle-starter" -> "bes-dev/mpl.pytorch"
"digantamisra98/Mish" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"digantamisra98/Mish" -> "LiyuanLucasLiu/RAdam"
"digantamisra98/Mish" -> "thomasbrandon/mish-cuda"
"digantamisra98/Mish" -> "digantamisra98/Echo"
"digantamisra98/Mish" -> "lessw2020/mish"
"digantamisra98/Mish" -> "WongKinYiu/CrossStagePartialNetworks"
"digantamisra98/Mish" -> "aksht94/UdacityOpenSource" ["e"=1]
"digantamisra98/Mish" -> "mgrankin/over9000"
"digantamisra98/Mish" -> "zhanghang1989/ResNeSt"
"digantamisra98/Mish" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"digantamisra98/Mish" -> "kakaobrain/fast-autoaugment"
"digantamisra98/Mish" -> "juntang-zhuang/Adabelief-Optimizer"
"digantamisra98/Mish" -> "facebookresearch/OctConv" ["e"=1]
"digantamisra98/Mish" -> "rwightman/gen-efficientnet-pytorch"
"digantamisra98/Mish" -> "muellerzr/Practical-Deep-Learning-for-Coders-2.0" ["e"=1]
"gmalivenko/awesome-computer-vision-models" -> "anuragreddygv323/computer-vision-projects"
"gmalivenko/awesome-computer-vision-models" -> "gmalivenko/cat-gan"
"gmalivenko/awesome-computer-vision-models" -> "Angzz/awesome-panoptic-segmentation" ["e"=1]
"gmalivenko/awesome-computer-vision-models" -> "kuzand/Computer-Vision-Video-Lectures"
"lucasjinreal/ssds_pytorch" -> "yuchenZhangTG/SSD_resnet_pytorch"
"abidrahmank/OpenCV-Python" -> "simondlevy/OpenCV-Python-Hacks"
"mdai/ml-lessons" -> "i-pan/kaggle-rsna18"
"mdai/ml-lessons" -> "deeponcology/PyTorchMedicalAI"
"Slava/label-tool" -> "rachelcao277/LabelImage"
"Slava/label-tool" -> "l3p-cv/lost"
"Slava/label-tool" -> "codingdogs/imageLabel"
"ArtyZe/yolo_segmentation" -> "zhengshoujian/darknet-yolo-segmentation"
"ArtyZe/yolo_segmentation" -> "bonsai89/unet_darknet_YOLO_AI_image_segmentation"
"ArtyZe/yolo_segmentation" -> "ArtyZe/yolov3_lite"
"codingdogs/imageLabel" -> "spivet/labelImg"
"ct6502/wavelets" -> "regeirk/pycwt"
"ct6502/wavelets" -> "grinsted/wavelet-coherence"
"ct6502/wavelets" -> "aaren/wavelets"
"ct6502/wavelets" -> "mabelcalim/waipy"
"ct6502/wavelets" -> "hhuangwx/cmaps" ["e"=1]
"ct6502/wavelets" -> "LinkedEarth/Pyleoclim_util"
"ct6502/wavelets" -> "ajdawson/eofs" ["e"=1]
"ct6502/wavelets" -> "shenyulu/easyclimate" ["e"=1]
"yukkyo/voc2coco" -> "Tony607/voc2coco"
"yukkyo/voc2coco" -> "shiyemin/voc2coco"
"yukkyo/voc2coco" -> "roboflow/voc2coco"
"yukkyo/voc2coco" -> "ssaru/convert2Yolo"
"yikun2019/PENCIL" -> "ferriswym/learn-with-noisy-labels"
"yikun2019/PENCIL" -> "YU1ut/JointOptimization"
"yikun2019/PENCIL" -> "PaulAlbert31/LabelNoiseCorrection"
"yikun2019/PENCIL" -> "ljmiao/PENCIL"
"yikun2019/PENCIL" -> "chenpf1025/noisy_label_understanding_utilizing"
"yikun2019/PENCIL" -> "HanxunH/SCELoss-Reproduce"
"yikun2019/PENCIL" -> "Newbeeer/L_DMI"
"yikun2019/PENCIL" -> "bhanML/Co-teaching"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Paddle-Inference-Demo"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Serving"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/PaddleFleetX"
"PaddlePaddle/X2Paddle" -> "PaddleEdu/paper-reproduction-tutorials"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/PALM"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Parakeet" ["e"=1]
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/docs"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Paddle-Lite-Demo"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/PGL"
"PaddlePaddle/X2Paddle" -> "AgentMaker/Paddle-Image-Models" ["e"=1]
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/PaddleHelix" ["e"=1]
"tinyzqh/Opencv-Computer-Vision-Practice-Python-" -> "FLyingLSJ/Computer_Vision_Project"
"tinyzqh/Opencv-Computer-Vision-Practice-Python-" -> "fengzhenHIT/OpenCV_Projects"
"PacktPublishing/Deep-Learning-for-Computer-Vision" -> "whydna/Deep-Learning-For-Computer-Vision"
"HRNet/HRNet-Object-Detection" -> "HRNet/HRNet-Image-Classification" ["e"=1]
"HRNet/HRNet-Object-Detection" -> "HRNet/HRNet-MaskRCNN-Benchmark" ["e"=1]
"HRNet/HRNet-Object-Detection" -> "HRNet/HRNet-FCOS" ["e"=1]
"HRNet/HRNet-Object-Detection" -> "xingyizhou/ExtremeNet"
"HRNet/HRNet-Object-Detection" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"HRNet/HRNet-Object-Detection" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"HRNet/HRNet-Object-Detection" -> "Duankaiwen/CenterNet"
"HRNet/HRNet-Object-Detection" -> "zhangxiaosong18/FreeAnchor"
"HRNet/HRNet-Object-Detection" -> "princeton-vl/CornerNet-Lite"
"HRNet/HRNet-Object-Detection" -> "xvjiarui/GCNet" ["e"=1]
"HRNet/HRNet-Object-Detection" -> "vacancy/PreciseRoIPooling"
"HRNet/HRNet-Object-Detection" -> "princeton-vl/CornerNet"
"HRNet/HRNet-Object-Detection" -> "tianzhi0549/FCOS"
"HRNet/HRNet-Object-Detection" -> "HRNet/HRNet-Facial-Landmark-Detection" ["e"=1]
"HRNet/HRNet-Object-Detection" -> "joe-siyuan-qiao/DetectoRS"
"prigoyal/pytorch_memonger" -> "csrhddlam/pytorch-checkpoint"
"arcelien/pba" -> "kakaobrain/fast-autoaugment"
"arcelien/pba" -> "DeepVoltaire/AutoAugment"
"arcelien/pba" -> "ildoonet/pytorch-randaugment"
"arcelien/pba" -> "VDIGPKU/DADA"
"arcelien/pba" -> "enyac-group/single-path-nas" ["e"=1]
"arcelien/pba" -> "MattKleinsmith/pbt"
"arcelien/pba" -> "moskomule/dda"
"vfdev-5/UDA-pytorch" -> "ildoonet/unsupervised-data-augmentation"
"benathi/fastswa-semi-sup" -> "vikasverma1077/ICT"
"benathi/fastswa-semi-sup" -> "qinenergy/adanet"
"benathi/fastswa-semi-sup" -> "ferretj/temporal-ensembling"
"benathi/fastswa-semi-sup" -> "lyakaap/VAT-pytorch"
"benathi/fastswa-semi-sup" -> "EricArazo/PseudoLabeling"
"benathi/fastswa-semi-sup" -> "xinmei9322/SNTG"
"benathi/fastswa-semi-sup" -> "siit-vtt/semi-supervised-learning-pytorch"
"benathi/fastswa-semi-sup" -> "sud0301/semisup-semseg" ["e"=1]
"benathi/fastswa-semi-sup" -> "brain-research/realistic-ssl-evaluation"
"benathi/fastswa-semi-sup" -> "perrying/realistic-ssl-evaluation-pytorch"
"benathi/fastswa-semi-sup" -> "Britefury/self-ensemble-visual-domain-adapt" ["e"=1]
"benathi/fastswa-semi-sup" -> "iSarmad/MeanTeacher-SNTG-HybridNet"
"benathi/fastswa-semi-sup" -> "CuriousAI/mean-teacher"
"benathi/fastswa-semi-sup" -> "YU1ut/MixMatch-pytorch"
"siddsax/XML-CNN" -> "siddsax/VisualizeMSDNet"
"siddsax/XML-CNN" -> "siddsax/Graph-NN"
"siddsax/XML-CNN" -> "siddsax/Normalizing_Flows"
"siddsax/XML-CNN" -> "yourh/AttentionXML"
"mabelcalim/waipy" -> "aaren/wavelets"
"mabelcalim/waipy" -> "danielefranceschi/wavelets-climatological-time-series"
"facebookresearch/WSL-Images" -> "facebookresearch/semi-supervised-ImageNet1K-models"
"facebookresearch/WSL-Images" -> "facebookresearch/FixRes"
"facebookresearch/WSL-Images" -> "appian42/kaggle-rsna-intracranial-hemorrhage"
"facebookresearch/WSL-Images" -> "facebookresearch/fair_self_supervision_benchmark" ["e"=1]
"facebookresearch/WSL-Images" -> "hessamb/label-refinery"
"jacobkie/2018DSB" -> "Lopezurrutia/DSB_2018"
"jacobkie/2018DSB" -> "pdima/kaggle_2018_data_science_bowl_solution"
"jacobkie/2018DSB" -> "selimsef/dsb2018_topcoders"
"jacobkie/2018DSB" -> "mirzaevinom/data_science_bowl_2018"
"jacobkie/2018DSB" -> "lopuhin/kaggle-dsbowl-2018-dataset-fixes"
"pdima/kaggle_2018_data_science_bowl_solution" -> "Lopezurrutia/DSB_2018"
"pdima/kaggle_2018_data_science_bowl_solution" -> "jacobkie/2018DSB"
"4uiiurz1/pytorch-deform-conv-v2" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"4uiiurz1/pytorch-deform-conv-v2" -> "ChunhuanLin/deform_conv_pytorch"
"4uiiurz1/pytorch-deform-conv-v2" -> "oeway/pytorch-deform-conv"
"4uiiurz1/pytorch-deform-conv-v2" -> "CharlesShang/DCNv2"
"4uiiurz1/pytorch-deform-conv-v2" -> "msracver/Deformable-ConvNets"
"4uiiurz1/pytorch-deform-conv-v2" -> "XinyiYing/D3Dnet" ["e"=1]
"4uiiurz1/pytorch-deform-conv-v2" -> "developer0hye/PyTorch-Deformable-Convolution-v2"
"4uiiurz1/pytorch-deform-conv-v2" -> "1zb/deformable-convolution-pytorch"
"4uiiurz1/pytorch-deform-conv-v2" -> "lucasjinreal/DCNv2_latest"
"4uiiurz1/pytorch-deform-conv-v2" -> "xinntao/EDVR" ["e"=1]
"4uiiurz1/pytorch-deform-conv-v2" -> "speedinghzl/CCNet" ["e"=1]
"4uiiurz1/pytorch-deform-conv-v2" -> "xvjiarui/GCNet" ["e"=1]
"4uiiurz1/pytorch-deform-conv-v2" -> "kastnerkyle/deform-conv" ["e"=1]
"Spandan-Madan/Pytorch_fine_tuning_Tutorial" -> "bmsookim/fine-tuning.pytorch"
"Spandan-Madan/Pytorch_fine_tuning_Tutorial" -> "creafz/pytorch-cnn-finetune"
"Spandan-Madan/Pytorch_fine_tuning_Tutorial" -> "Spandan-Madan/A-Collection-of-important-tasks-in-pytorch"
"ufoym/imbalanced-dataset-sampler" -> "CoinCheung/pytorch-loss"
"ufoym/imbalanced-dataset-sampler" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"ufoym/imbalanced-dataset-sampler" -> "ildoonet/pytorch-gradual-warmup-lr"
"ufoym/imbalanced-dataset-sampler" -> "KevinMusgrave/pytorch-metric-learning"
"ufoym/imbalanced-dataset-sampler" -> "JunMa11/SegLossOdyssey" ["e"=1]
"ufoym/imbalanced-dataset-sampler" -> "lukemelas/EfficientNet-PyTorch"
"ufoym/imbalanced-dataset-sampler" -> "vandit15/Class-balanced-loss-pytorch"
"ufoym/imbalanced-dataset-sampler" -> "qubvel/ttach"
"ufoym/imbalanced-dataset-sampler" -> "Cadene/pretrained-models.pytorch"
"ufoym/imbalanced-dataset-sampler" -> "sksq96/pytorch-summary"
"ufoym/imbalanced-dataset-sampler" -> "pytorch/captum"
"ufoym/imbalanced-dataset-sampler" -> "adambielski/siamese-triplet" ["e"=1]
"ufoym/imbalanced-dataset-sampler" -> "facebookresearch/classifier-balancing"
"ufoym/imbalanced-dataset-sampler" -> "jacobgil/pytorch-grad-cam"
"ufoym/imbalanced-dataset-sampler" -> "albumentations-team/albumentations"
"EvgenyKashin/SRMnet" -> "taki0112/SRM-Tensorflow"
"EvgenyKashin/SRMnet" -> "hyunjaelee410/style-based-recalibration-module"
"EvgenyKashin/SRMnet" -> "TezRomacH/safitty"
"ex4sperans/maggot" -> "oavdeev/getbox"
"ex4sperans/maggot" -> "dmitrijsc/practical-rl"
"ex4sperans/maggot" -> "emakhov/data-quality-framework"
"ex4sperans/maggot" -> "dartrevan/ChemTextMining"
"ex4sperans/maggot" -> "Dumbris/trunklucator"
"ex4sperans/maggot" -> "indeedeng/vowpal-wabbit-java"
"ex4sperans/maggot" -> "kiselev1189/EEGClassificationMCNN"
"ex4sperans/maggot" -> "sherman/blobkeeper"
"ex4sperans/maggot" -> "lext/deep_docker"
"ex4sperans/maggot" -> "n01z3/kaggle_amazon_from_space"
"ex4sperans/maggot" -> "fgvbrt/nips_rl"
"ex4sperans/maggot" -> "atrof/atrof.github.io"
"ex4sperans/maggot" -> "ArkadiyD/CythonXGB"
"ex4sperans/maggot" -> "DBusAI/TF_Eager"
"ex4sperans/maggot" -> "alexeygrigorev/libftrl-python"
"imedslab/solt" -> "imedslab/pytorch_bn_fusion"
"dloperab/PyImageSearch-CV-DL-CrashCourse" -> "SIlvaMFPedro/pyimagesearch"
"dloperab/PyImageSearch-CV-DL-CrashCourse" -> "meizhoubao/pyimagesearch"
"dloperab/PyImageSearch-CV-DL-CrashCourse" -> "parekhakhil/pyImageSearch"
"dloperab/PyImageSearch-CV-DL-CrashCourse" -> "YunchuZhang/PyImageSearch-Gurus-Course"
"dloperab/PyImageSearch-CV-DL-CrashCourse" -> "Abhs9/DL4CVStarterBundle"
"dloperab/PyImageSearch-CV-DL-CrashCourse" -> "vinayakShenoy/PyImageSearchGurus-Course"
"BIGBALLON/CIFAR-ZOO" -> "BIGBALLON/cifar-10-cnn"
"BIGBALLON/CIFAR-ZOO" -> "implus/PytorchInsight" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "bearpaw/pytorch-classification"
"BIGBALLON/CIFAR-ZOO" -> "weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks"
"BIGBALLON/CIFAR-ZOO" -> "weiaicunzai/pytorch-cifar100"
"BIGBALLON/CIFAR-ZOO" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "tanglang96/DataLoaders_DALI"
"BIGBALLON/CIFAR-ZOO" -> "lxtGH/OctaveConv_pytorch" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "hongyi-zhang/mixup"
"BIGBALLON/CIFAR-ZOO" -> "implus/SKNet" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "MingSun-Tse/Efficient-Deep-Learning" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "liuyuemaicha/cnn_model"
"BIGBALLON/CIFAR-ZOO" -> "JiahuiYu/slimmable_networks" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "akamaster/pytorch_resnet_cifar10"
"BIGBALLON/CIFAR-ZOO" -> "donnyyou/torchcv"
"OceanPang/Libra_R-CNN" -> "KimSoybean/ScratchDet"
"OceanPang/Libra_R-CNN" -> "ethanhe42/KL-Loss"
"OceanPang/Libra_R-CNN" -> "xingyizhou/ExtremeNet"
"OceanPang/Libra_R-CNN" -> "microsoft/RepPoints"
"OceanPang/Libra_R-CNN" -> "thangvubk/Cascade-RPN"
"OceanPang/Libra_R-CNN" -> "STVIR/Grid-R-CNN"
"OceanPang/Libra_R-CNN" -> "zhaoweicai/Detectron-Cascade-RCNN"
"OceanPang/Libra_R-CNN" -> "zhaoweicai/cascade-rcnn"
"OceanPang/Libra_R-CNN" -> "sfzhang15/ATSS"
"OceanPang/Libra_R-CNN" -> "Ranchentx/EFGRNet"
"OceanPang/Libra_R-CNN" -> "ruoqianguo/DetNet_pytorch"
"OceanPang/Libra_R-CNN" -> "ChiCheng123/SRN" ["e"=1]
"OceanPang/Libra_R-CNN" -> "ray-lee-94/AnchorFreeDetection" ["e"=1]
"OceanPang/Libra_R-CNN" -> "ming71/mmdetection-annotated"
"OceanPang/Libra_R-CNN" -> "libuyu/GHM_Detection"
"samlss/Bloom" -> "matrixgardener/statistical_learning_method"
"Lyken17/pytorch-memonger" -> "Lyken17/Efficient-PyTorch"
"Lyken17/pytorch-memonger" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"Lyken17/pytorch-memonger" -> "mapillary/inplace_abn" ["e"=1]
"Lyken17/pytorch-memonger" -> "Oldpan/Pytorch-Memory-Utils"
"Lyken17/pytorch-memonger" -> "oeway/pytorch-deform-conv"
"Lyken17/pytorch-memonger" -> "tanglang96/DataLoaders_DALI"
"Lyken17/pytorch-memonger" -> "lartpang/PyTorchTricks"
"Lyken17/pytorch-memonger" -> "jbohnslav/opencv_transforms"
"Lyken17/pytorch-memonger" -> "Link-Li/Balanced-DataParallel"
"Lyken17/pytorch-memonger" -> "zhijian-liu/torchprofile" ["e"=1]
"timgaripov/dnn-mode-connectivity" -> "fdraxler/PyTorch-AutoNEB"
"timgaripov/dnn-mode-connectivity" -> "apple/learning-subspaces" ["e"=1]
"timgaripov/dnn-mode-connectivity" -> "benathi/fastswa-semi-sup"
"timgaripov/dnn-mode-connectivity" -> "timgaripov/swa"
"timgaripov/dnn-mode-connectivity" -> "noahgolmant/pytorch-hessian-eigenthings" ["e"=1]
"timgaripov/dnn-mode-connectivity" -> "amirgholami/PyHessian" ["e"=1]
"timgaripov/dnn-mode-connectivity" -> "g-benton/loss-surface-simplexes" ["e"=1]
"timgaripov/dnn-mode-connectivity" -> "g-benton/hessian-eff-dim"
"timgaripov/dnn-mode-connectivity" -> "rahimentezari/PermutationInvariance"
"ferretj/temporal-ensembling" -> "siit-vtt/semi-supervised-learning-pytorch"
"ferretj/temporal-ensembling" -> "benathi/fastswa-semi-sup"
"ferretj/temporal-ensembling" -> "s-laine/tempens"
"ferretj/temporal-ensembling" -> "semi-supervised-paper/semi-supervised-paper-implementation"
"ferretj/temporal-ensembling" -> "tensorfreitas/Temporal-Ensembling-for-Semi-Supervised-Learning"
"ferretj/temporal-ensembling" -> "9310gaurav/virtual-adversarial-training"
"qijiezhao/pytorch-ssd" -> "lopuhin/ssd.pytorch"
"qijiezhao/pytorch-ssd" -> "VDIGPKU/CFENet"
"qijiezhao/pytorch-ssd" -> "yuchenZhangTG/SSD_resnet_pytorch"
"qijiezhao/pytorch-ssd" -> "lucasjinreal/ssds_pytorch"
"Microos/citypersons2voc" -> "shadowwalker00/CaltechPestrain2VOC"
"bailvwangzi/repulsion_loss_ssd" -> "rainofmine/Repulsion_Loss"
"bailvwangzi/repulsion_loss_ssd" -> "rainofmine/Bi-box_Regression"
"bailvwangzi/repulsion_loss_ssd" -> "VideoObjectSearch/ALFNet"
"bailvwangzi/repulsion_loss_ssd" -> "JegernOUTT/repulsion_loss"
"bailvwangzi/repulsion_loss_ssd" -> "liuwei16/CSP"
"bailvwangzi/repulsion_loss_ssd" -> "xingkongliang/Pedestrian-Detection"
"bailvwangzi/repulsion_loss_ssd" -> "lwpyr/CSP-pedestrian-detection-in-pytorch"
"bailvwangzi/repulsion_loss_ssd" -> "ruoqianguo/DetNet_pytorch"
"bailvwangzi/repulsion_loss_ssd" -> "qijiezhao/pytorch-ssd"
"bailvwangzi/repulsion_loss_ssd" -> "bharatsingh430/soft-nms" ["e"=1]
"liuwei16/ALFNet" -> "VideoObjectSearch/ALFNet"
"liuwei16/ALFNet" -> "xingkongliang/Pedestrian-Detection"
"liuwei16/ALFNet" -> "rainofmine/Bi-box_Regression"
"liuwei16/ALFNet" -> "garrickbrazil/SDS-RCNN"
"liuwei16/ALFNet" -> "rainofmine/Repulsion_Loss"
"liuwei16/ALFNet" -> "liuwei16/CSP"
"dlyldxwl/fssd.pytorch" -> "dlyldxwl/Stronger-One-stage-detector-with-much-Tricks"
"dlyldxwl/fssd.pytorch" -> "fanbinqi/FSSD-reimplementation"
"ethanhe42/KL-Loss" -> "ethanhe42/softer-NMS"
"ethanhe42/KL-Loss" -> "xingyizhou/ExtremeNet"
"ethanhe42/KL-Loss" -> "vacancy/PreciseRoIPooling"
"ethanhe42/KL-Loss" -> "Duankaiwen/CenterNet"
"ethanhe42/KL-Loss" -> "OceanPang/Libra_R-CNN"
"ethanhe42/KL-Loss" -> "princeton-vl/CornerNet"
"ethanhe42/KL-Loss" -> "kemaloksuz/ObjectDetectionImbalance"
"ethanhe42/KL-Loss" -> "zhaoweicai/cascade-rcnn"
"ethanhe42/KL-Loss" -> "KimSoybean/ScratchDet"
"ethanhe42/KL-Loss" -> "zhangxiaosong18/FreeAnchor"
"ethanhe42/KL-Loss" -> "tianzhi0549/FCOS"
"ethanhe42/KL-Loss" -> "libuyu/GHM_Detection"
"ethanhe42/KL-Loss" -> "tusen-ai/simpledet"
"ethanhe42/KL-Loss" -> "VDIGPKU/M2Det"
"ethanhe42/KL-Loss" -> "GOATmessi8/RFBNet"
"dlyldxwl/Stronger-One-stage-detector-with-much-Tricks" -> "dlyldxwl/fssd.pytorch"
"krumo/Detectron-DA-Faster-RCNN" -> "Gabriel-Macias/robust_frcnn"
"krumo/Detectron-DA-Faster-RCNN" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"krumo/Detectron-DA-Faster-RCNN" -> "harsh-99/SCL"
"bentrevett/pytorch-rl" -> "bentrevett/pytorch-generative-models"
"fabric-lab/hyperledger-fabric-manager" -> "cckuailong/ICS_SCAN"
"fabric-lab/hyperledger-fabric-manager" -> "shipengqi/sactive-bot" ["e"=1]
"fabric-lab/hyperledger-fabric-manager" -> "luyunfeng/soulcoder"
"facebookarchive/tutorials" -> "breadbread1984/Caffe2-C-demo"
"vietnh1009/Character-level-cnn-pytorch" -> "vietnh1009/Very-deep-cnn-pytorch"
"vietnh1009/Character-level-cnn-pytorch" -> "uvipen/Character-level-cnn-tensorflow"
"vietnh1009/Character-level-cnn-pytorch" -> "uvipen/Very-deep-cnn-tensorflow"
"ChunhuanLin/deform_conv_pytorch" -> "4uiiurz1/pytorch-deform-conv-v2"
"ChunhuanLin/deform_conv_pytorch" -> "1zb/deformable-convolution-pytorch"
"ChunhuanLin/deform_conv_pytorch" -> "oeway/pytorch-deform-conv"
"ChunhuanLin/deform_conv_pytorch" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"ChunhuanLin/deform_conv_pytorch" -> "kastnerkyle/deform-conv" ["e"=1]
"ChunhuanLin/deform_conv_pytorch" -> "CharlesShang/DCNv2"
"ChunhuanLin/deform_conv_pytorch" -> "CHONSPQX/modulated-deform-conv" ["e"=1]
"TKKim93/DivMatch" -> "caiqi/mean-teacher-cross-domain-detection"
"TKKim93/DivMatch" -> "harsh-99/SCL"
"TKKim93/DivMatch" -> "basiclab/DA-OD-MEAA-PyTorch"
"TKKim93/DivMatch" -> "xinge008/SCDA"
"TKKim93/DivMatch" -> "megvii-research/CR-DA-DET"
"TKKim93/DivMatch" -> "uitrbn/CST_DA_detection"
"TKKim93/DivMatch" -> "ChrisAllenMing/GPA-detection"
"TKKim93/DivMatch" -> "He-Zhenwei/MAF"
"wucng/TensorExpand" -> "GothicAi/Instaboost"
"wucng/TensorExpand" -> "Stinky-Tofu/Stronger-yolo"
"wucng/TensorExpand" -> "RobertCsordas/RFCN-tensorflow" ["e"=1]
"wucng/TensorExpand" -> "ming71/toolbox" ["e"=1]
"iBelieveCJM/pseudo_label-pytorch" -> "EricArazo/PseudoLabeling"
"iBelieveCJM/pseudo_label-pytorch" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"iBelieveCJM/pseudo_label-pytorch" -> "ferretj/temporal-ensembling"
"iBelieveCJM/pseudo_label-pytorch" -> "CuriousAI/mean-teacher"
"iBelieveCJM/pseudo_label-pytorch" -> "YU1ut/MixMatch-pytorch"
"iBelieveCJM/pseudo_label-pytorch" -> "9310gaurav/virtual-adversarial-training"
"iBelieveCJM/pseudo_label-pytorch" -> "shubhamjn1/Pseudo-Labelling---A-Semi-supervised-learning-technique"
"iBelieveCJM/pseudo_label-pytorch" -> "brain-research/realistic-ssl-evaluation"
"iBelieveCJM/pseudo_label-pytorch" -> "google-research/mixmatch"
"iBelieveCJM/pseudo_label-pytorch" -> "nayeemrizve/ups"
"iBelieveCJM/pseudo_label-pytorch" -> "TorchSSL/TorchSSL"
"iBelieveCJM/pseudo_label-pytorch" -> "s-laine/tempens"
"iBelieveCJM/pseudo_label-pytorch" -> "benathi/fastswa-semi-sup"
"iBelieveCJM/pseudo_label-pytorch" -> "kimiyoung/ssl_bad_gan"
"iBelieveCJM/pseudo_label-pytorch" -> "P1Analytics/Pseudo-Label-for-Deep-Neural-Networks"
"Kyubyong/nlp_made_easy" -> "soutsios/pos-tagger-bert"
"yqyao/YOLOv3_Pytorch" -> "yqyao/DRFNet"
"Stonesjtu/pytorch_memlab" -> "awwong1/torchprof"
"Stonesjtu/pytorch_memlab" -> "NVIDIA/PyProf"
"Stonesjtu/pytorch_memlab" -> "patrick-kidger/torchtyping" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "getkeops/keops" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "facebookresearch/fairscale" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "jacobkimmel/pytorch_modelsize"
"Stonesjtu/pytorch_memlab" -> "TylerYep/torchinfo"
"Stonesjtu/pytorch_memlab" -> "facebookresearch/higher" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "jettify/pytorch-optimizer"
"Stonesjtu/pytorch_memlab" -> "kakaobrain/torchgpipe" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "xl0/lovely-tensors" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "Oldpan/Pytorch-Memory-Utils"
"Stonesjtu/pytorch_memlab" -> "pytorch/PiPPy" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "zhijian-liu/torchprofile" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "Lyken17/pytorch-OpCounter"
"daixiangzi/face_detection" -> "daixiangzi/PRCV2019"
"daixiangzi/face_detection" -> "daixiangzi/Caffe-PCN"
"srcolinas/roadmap-to-AI" -> "gopala-kr/ai-learning-roadmap"
"srcolinas/roadmap-to-AI" -> "JsonChao/ML-Roadmap"
"srcolinas/roadmap-to-AI" -> "athivvat/ai-engineer-guide"
"srcolinas/roadmap-to-AI" -> "niladridutt/McCarthy-AI-Roadmap" ["e"=1]
"srcolinas/roadmap-to-AI" -> "EngrSaad2/Artificial-Intelligence-Engineer-Roadmap"
"srcolinas/roadmap-to-AI" -> "yngz/cs-roadmap"
"yizt/cv-papers" -> "SnailTyan/deep-learning-papers-translation"
"yizt/cv-papers" -> "Tencent/ObjectDetection-OneStageDet"
"yizt/cv-papers" -> "zeusees/HyperDL-Tutorial" ["e"=1]
"yizt/cv-papers" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"yizt/cv-papers" -> "amusi/daily-paper-computer-vision"
"yizt/cv-papers" -> "xiaofengShi/CHINESE-OCR" ["e"=1]
"yizt/cv-papers" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"yizt/cv-papers" -> "jiangxiluning/FOTS.PyTorch" ["e"=1]
"yizt/cv-papers" -> "czla/daily-paper-visual-tracking" ["e"=1]
"yizt/cv-papers" -> "amusi/awesome-object-detection"
"yizt/cv-papers" -> "YCG09/chinese_ocr" ["e"=1]
"yizt/cv-papers" -> "ming71/CV_PaperDaily"
"yizt/cv-papers" -> "GOATmessi8/RFBNet"
"yizt/cv-papers" -> "princeton-vl/CornerNet-Lite"
"yizt/cv-papers" -> "zhengzhugithub/CV-arXiv-Daily" ["e"=1]
"zavolokas/Inpainting" -> "YuanTingHsieh/Image_Completion"
"zavolokas/Inpainting" -> "zavolokas/SeamCarving"
"zavolokas/Inpainting" -> "zavolokas/PatchMatch"
"zavolokas/Inpainting" -> "vacancy/PyPatchMatch"
"zavolokas/Inpainting" -> "Pranshu258/Image_Completion"
"zavolokas/Inpainting" -> "sooham/inpainting"
"zavolokas/Inpainting" -> "Mugichoko445/PixMix-Inpainting"
"zavolokas/Inpainting" -> "lyndonzheng/Pluralistic-Inpainting" ["e"=1]
"davidtvs/pytorch-lr-finder" -> "qubvel/ttach"
"davidtvs/pytorch-lr-finder" -> "BloodAxe/pytorch-toolbelt"
"davidtvs/pytorch-lr-finder" -> "ildoonet/pytorch-gradual-warmup-lr"
"davidtvs/pytorch-lr-finder" -> "trent-b/iterative-stratification"
"davidtvs/pytorch-lr-finder" -> "jettify/pytorch-optimizer"
"davidtvs/pytorch-lr-finder" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"davidtvs/pytorch-lr-finder" -> "LiyuanLucasLiu/RAdam"
"davidtvs/pytorch-lr-finder" -> "ufoym/imbalanced-dataset-sampler"
"davidtvs/pytorch-lr-finder" -> "clovaai/CutMix-PyTorch"
"davidtvs/pytorch-lr-finder" -> "catalyst-team/catalyst"
"davidtvs/pytorch-lr-finder" -> "usuyama/pytorch-unet" ["e"=1]
"davidtvs/pytorch-lr-finder" -> "dkumazaw/onecyclelr"
"davidtvs/pytorch-lr-finder" -> "sksq96/pytorch-summary"
"davidtvs/pytorch-lr-finder" -> "rwightman/gen-efficientnet-pytorch"
"davidtvs/pytorch-lr-finder" -> "google-research/augmix"
"ZFTurbo/Keras-RetinaNet-for-Open-Images-Challenge-2018" -> "amirassov/kaggle-imaterialist"
"ZFTurbo/Keras-RetinaNet-for-Open-Images-Challenge-2018" -> "radekosmulski/yolo_open_images"
"ZFTurbo/Keras-RetinaNet-for-Open-Images-Challenge-2018" -> "SeuTao/Humpback-Whale-Identification"
"ZFTurbo/Keras-RetinaNet-for-Open-Images-Challenge-2018" -> "ZFTurbo/Mean-Average-Precision-for-Boxes"
"ZFTurbo/Keras-RetinaNet-for-Open-Images-Challenge-2018" -> "minerva-ml/open-solution-googleai-object-detection"
"ZFTurbo/Keras-RetinaNet-for-Open-Images-Challenge-2018" -> "lRomul/argus-tgs-salt"
"ZFTurbo/Keras-RetinaNet-for-Open-Images-Challenge-2018" -> "pudae/kaggle-humpback"
"PYFTS/notebooks" -> "PYFTS/pyFTS"
"GarrettLee/label_noise_correction" -> "emalach/UpdateByDisagreement"
"markjay4k/Mask-RCNN-series" -> "augmentedstartups/mask-rcnn"
"markjay4k/Mask-RCNN-series" -> "SUYEgit/Surgery-Robot-Detection-Segmentation"
"deeponcology/applied-dl-2018" -> "deeponcology/PyTorchMedicalAI"
"zhengshoujian/darknet-yolo-segmentation" -> "ArtyZe/yolo_segmentation"
"zhengshoujian/darknet-yolo-segmentation" -> "bonsai89/unet_darknet_YOLO_AI_image_segmentation"
"STVIR/Grid-R-CNN" -> "zhangxiaosong18/FreeAnchor"
"STVIR/Grid-R-CNN" -> "OceanPang/Libra_R-CNN"
"STVIR/Grid-R-CNN" -> "Hwang64/PSIS"
"STVIR/Grid-R-CNN" -> "microsoft/RepPoints"
"STVIR/Grid-R-CNN" -> "thangvubk/Cascade-RPN"
"STVIR/Grid-R-CNN" -> "tztztztztz/eql.detectron2"
"STVIR/Grid-R-CNN" -> "ethanhe42/KL-Loss"
"uoguelph-mlrg/Cutout" -> "facebookresearch/mixup-cifar10"
"uoguelph-mlrg/Cutout" -> "DeepVoltaire/AutoAugment"
"uoguelph-mlrg/Cutout" -> "clovaai/CutMix-PyTorch"
"uoguelph-mlrg/Cutout" -> "zhunzhong07/Random-Erasing" ["e"=1]
"uoguelph-mlrg/Cutout" -> "bmsookim/wide-resnet.pytorch"
"uoguelph-mlrg/Cutout" -> "xgastaldi/shake-shake"
"uoguelph-mlrg/Cutout" -> "hongyi-zhang/mixup"
"uoguelph-mlrg/Cutout" -> "kakaobrain/fast-autoaugment"
"uoguelph-mlrg/Cutout" -> "hysts/pytorch_shake_shake"
"uoguelph-mlrg/Cutout" -> "miguelvr/dropblock"
"uoguelph-mlrg/Cutout" -> "dyhan0920/PyramidNet-PyTorch"
"uoguelph-mlrg/Cutout" -> "vikasverma1077/manifold_mixup"
"uoguelph-mlrg/Cutout" -> "bearpaw/pytorch-classification"
"uoguelph-mlrg/Cutout" -> "dvlab-research/GridMask"
"uoguelph-mlrg/Cutout" -> "ildoonet/pytorch-randaugment"
"HadXu/ML-From-Scratch" -> "xiyusullos/ml_exercise"
"HadXu/ML-From-Scratch" -> "wererLinC/Machine_Learning"
"HadXu/ML-From-Scratch" -> "ahangchen/melon_concepts"
"HadXu/ML-From-Scratch" -> "HadXu/machine-learning"
"HadXu/ML-From-Scratch" -> "houxiao/machine_learning_note"
"HadXu/ML-From-Scratch" -> "wenhan123/ML-Python-"
"mmazeika/glc" -> "LiJunnan1992/MLNT"
"danieltan07/learning-to-reweight-examples" -> "uber-research/learning-to-reweight-examples"
"danieltan07/learning-to-reweight-examples" -> "xjtushujun/meta-weight-net"
"danieltan07/learning-to-reweight-examples" -> "google/mentornet"
"danieltan07/learning-to-reweight-examples" -> "LiJunnan1992/MLNT"
"danieltan07/learning-to-reweight-examples" -> "chenpf1025/noisy_label_understanding_utilizing"
"danieltan07/learning-to-reweight-examples" -> "mmazeika/glc"
"danieltan07/learning-to-reweight-examples" -> "mtoneva/example_forgetting"
"danieltan07/learning-to-reweight-examples" -> "bhanML/Co-teaching"
"danieltan07/learning-to-reweight-examples" -> "kaidic/LDAM-DRW"
"danieltan07/learning-to-reweight-examples" -> "TinfoilHat0/Learning-to-Reweight-Examples-for-Robust-Deep-Learning-with-PyTorch-Higher"
"danieltan07/learning-to-reweight-examples" -> "PaulAlbert31/LabelNoiseCorrection"
"danieltan07/learning-to-reweight-examples" -> "AlanChou/Truncated-Loss"
"Stomach-ache/awesome-long-tail-learning" -> "Vanint/Awesome-LongTailed-Learning"
"Stomach-ache/awesome-long-tail-learning" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"Stomach-ache/awesome-long-tail-learning" -> "wutong16/DistributionBalancedLoss"
"Stomach-ache/awesome-long-tail-learning" -> "facebookresearch/classifier-balancing"
"Stomach-ache/awesome-long-tail-learning" -> "kaidic/LDAM-DRW"
"Stomach-ache/awesome-long-tail-learning" -> "GZWQ/Awesome-Long-Tailed"
"Stomach-ache/awesome-long-tail-learning" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"Stomach-ache/awesome-long-tail-learning" -> "weijiaheng/Advances-in-Label-Noise-Learning"
"Stomach-ache/awesome-long-tail-learning" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"Stomach-ache/awesome-long-tail-learning" -> "megvii-research/BBN"
"Stomach-ache/awesome-long-tail-learning" -> "shijxcs/LIFT"
"Stomach-ache/awesome-long-tail-learning" -> "frank-xwang/RIDE-LongTailRecognition"
"Stomach-ache/awesome-long-tail-learning" -> "Gank0078/ACR"
"Stomach-ache/awesome-long-tail-learning" -> "JosephKJ/Awesome-Novel-Class-Discovery" ["e"=1]
"Stomach-ache/awesome-long-tail-learning" -> "zhmiao/OpenLongTailRecognition-OLTR"
"perrying/realistic-ssl-evaluation-pytorch" -> "perrying/pytorch-consistency-regularization"
"perrying/realistic-ssl-evaluation-pytorch" -> "siit-vtt/semi-supervised-learning-pytorch"
"whydna/Deep-Learning-For-Computer-Vision" -> "TyroneLi/pyimagesearchcode"
"whydna/Deep-Learning-For-Computer-Vision" -> "positronn/DL4CV2"
"xingkongliang/Pedestrian-Detection" -> "liuwei16/ALFNet"
"xingkongliang/Pedestrian-Detection" -> "liuwei16/CSP"
"xingkongliang/Pedestrian-Detection" -> "lwpyr/CSP-pedestrian-detection-in-pytorch"
"xingkongliang/Pedestrian-Detection" -> "Leotju/MGAN"
"xingkongliang/Pedestrian-Detection" -> "rainofmine/Bi-box_Regression"
"xingkongliang/Pedestrian-Detection" -> "hasanirtiza/Pedestron"
"xingkongliang/Pedestrian-Detection" -> "rainofmine/Repulsion_Loss"
"xingkongliang/Pedestrian-Detection" -> "bailvwangzi/repulsion_loss_ssd"
"xingkongliang/Pedestrian-Detection" -> "garrickbrazil/SDS-RCNN"
"xingkongliang/Pedestrian-Detection" -> "Microos/citypersons2voc"
"xingkongliang/Pedestrian-Detection" -> "buffer51/lstm-rcnn-pedestrian-detection" ["e"=1]
"xingkongliang/Pedestrian-Detection" -> "zhangliliang/RPN_BF" ["e"=1]
"xingkongliang/Pedestrian-Detection" -> "VideoObjectSearch/ALFNet"
"xingkongliang/Pedestrian-Detection" -> "mitmul/caltech-pedestrian-dataset-converter"
"KuKuXia/Image_Processing_100_Questions" -> "yoyoyo-yo/Gasyori100knock" ["e"=1]
"KuKuXia/Image_Processing_100_Questions" -> "KuKuXia/OpenCV_for_Beginners"
"KuKuXia/Image_Processing_100_Questions" -> "gzr2017/ImageProcessing100Wen"
"liuwei16/CSP" -> "lwpyr/CSP-pedestrian-detection-in-pytorch"
"liuwei16/CSP" -> "xingkongliang/Pedestrian-Detection"
"liuwei16/CSP" -> "hasanirtiza/Pedestron"
"liuwei16/CSP" -> "liuwei16/ALFNet"
"liuwei16/CSP" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["e"=1]
"liuwei16/CSP" -> "princeton-vl/CornerNet-Lite"
"liuwei16/CSP" -> "VideoObjectSearch/ALFNet"
"liuwei16/CSP" -> "Duankaiwen/CenterNet"
"liuwei16/CSP" -> "bailvwangzi/repulsion_loss_ssd"
"liuwei16/CSP" -> "GOATmessi8/RFBNet"
"liuwei16/CSP" -> "Leotju/MGAN"
"liuwei16/CSP" -> "princeton-vl/CornerNet"
"liuwei16/CSP" -> "ethanhe42/KL-Loss"
"liuwei16/CSP" -> "aditya-vora/FCHD-Fully-Convolutional-Head-Detector" ["e"=1]
"liuwei16/CSP" -> "xingyizhou/ExtremeNet"
"lwpyr/CSP-pedestrian-detection-in-pytorch" -> "rainofmine/Bi-box_Regression"
"lwpyr/CSP-pedestrian-detection-in-pytorch" -> "liuwei16/CSP"
"lwpyr/CSP-pedestrian-detection-in-pytorch" -> "xingkongliang/Pedestrian-Detection"
"lwpyr/CSP-pedestrian-detection-in-pytorch" -> "WangWenhao0716/Adapted-Center-and-Scale-Prediction"
"lwpyr/CSP-pedestrian-detection-in-pytorch" -> "Leotju/MGAN"
"lwpyr/CSP-pedestrian-detection-in-pytorch" -> "ZongweiZhou1/CenterNetPerson"
"lwpyr/CSP-pedestrian-detection-in-pytorch" -> "Justinhzy/pedestrian-detector"
"lwpyr/CSP-pedestrian-detection-in-pytorch" -> "zhangminwen/Center-and-Scale-Prediction-CSP-Pytorch"
"lwpyr/CSP-pedestrian-detection-in-pytorch" -> "rainofmine/Repulsion_Loss"
"Sophia-11/Awesome-CV-Resources" -> "Sophia-11/Awesome-ICCV"
"loshchil/AdamW-and-SGDW" -> "loshchil/SGDR"
"loshchil/AdamW-and-SGDW" -> "xgastaldi/shake-shake"
"hessamb/label-refinery" -> "zhaoweicai/EdMIPS" ["e"=1]
"bit-bots/bitbots_main" -> "bit-bots/YOEO"
"shiyemin/voc2coco" -> "wkoa/voc2coco"
"shiyemin/voc2coco" -> "yukkyo/voc2coco"
"shiyemin/voc2coco" -> "Tony607/voc2coco"
"Tony607/voc2coco" -> "yukkyo/voc2coco"
"Tony607/voc2coco" -> "shiyemin/voc2coco"
"Tony607/voc2coco" -> "ming71/toolbox" ["e"=1]
"Tony607/voc2coco" -> "xuhuasheng/mmdetection_plot_pr_curve"
"lucasjinreal/thor" -> "lucasjinreal/alfred"
"lucasjinreal/thor" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"dingyang9642/AILabel" -> "codingdogs/imageLabel"
"dingyang9642/AILabel" -> "fuyi501/ailabel-me"
"mtoneva/example_forgetting" -> "uber-research/learning-to-reweight-examples"
"mtoneva/example_forgetting" -> "mansheej/data_diet" ["e"=1]
"mtoneva/example_forgetting" -> "danieltan07/learning-to-reweight-examples"
"emalach/UpdateByDisagreement" -> "GarrettLee/label_noise_correction"
"bhanML/Co-teaching" -> "google/mentornet"
"bhanML/Co-teaching" -> "hongxin001/JoCoR"
"bhanML/Co-teaching" -> "LiJunnan1992/DivideMix"
"bhanML/Co-teaching" -> "xingruiyu/coteaching_plus"
"bhanML/Co-teaching" -> "subeeshvasu/Awesome-Learning-with-Label-Noise"
"bhanML/Co-teaching" -> "bhanML/Masking"
"bhanML/Co-teaching" -> "chenpf1025/noisy_label_understanding_utilizing"
"bhanML/Co-teaching" -> "LiJunnan1992/MLNT"
"bhanML/Co-teaching" -> "yikun2019/PENCIL"
"bhanML/Co-teaching" -> "PaulAlbert31/LabelNoiseCorrection"
"bhanML/Co-teaching" -> "shengliu66/ELR"
"bhanML/Co-teaching" -> "songhwanjun/Awesome-Noisy-Labels"
"bhanML/Co-teaching" -> "AlanChou/Truncated-Loss"
"bhanML/Co-teaching" -> "uber-research/learning-to-reweight-examples"
"bhanML/Co-teaching" -> "danieltan07/learning-to-reweight-examples"
"xingruiyu/coteaching_plus" -> "hongxin001/JoCoR"
"xingruiyu/coteaching_plus" -> "tmllab/2021_NeurIPS_PES"
"xingruiyu/coteaching_plus" -> "NUST-Machine-Intelligence-Laboratory/Jo-SRC"
"NaturalIntelligence/imglab" -> "Labelbox/labelbox-custom-labeling-apps"
"NaturalIntelligence/imglab" -> "CSAILVision/LabelMeAnnotationTool"
"NaturalIntelligence/imglab" -> "bit-bots/imagetagger"
"NaturalIntelligence/imglab" -> "NaturalIntelligence/nimn-spec"
"NaturalIntelligence/imglab" -> "jsbroks/coco-annotator"
"NaturalIntelligence/imglab" -> "microsoft/VoTT"
"NaturalIntelligence/imglab" -> "NaturalIntelligence/Stubmatic"
"NaturalIntelligence/imglab" -> "kinhong/OpenLabeler"
"NaturalIntelligence/imglab" -> "node-muneem/anumargak"
"NaturalIntelligence/imglab" -> "abreheret/PixelAnnotationTool"
"NaturalIntelligence/imglab" -> "l3p-cv/lost"
"NaturalIntelligence/imglab" -> "Slava/label-tool"
"NaturalIntelligence/imglab" -> "SkalskiP/make-sense"
"NaturalIntelligence/imglab" -> "soeaver/caffe-model" ["e"=1]
"NaturalIntelligence/imglab" -> "HumanSignal/awesome-data-labeling"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "asanakoy/kaggle_carvana_segmentation"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "tugstugi/pytorch-saltnet"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "selimsef/dsb2018_topcoders"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "pdima/kaggle_2018_data_science_bowl_solution"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "petrosgk/Kaggle-Carvana-Image-Masking-Challenge"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "killthekitten/kaggle-carvana-2017" ["e"=1]
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "jacobkie/2018DSB"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "EdwardTyantov/ultrasound-nerve-segmentation" ["e"=1]
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "ternaus/TernausNet" ["e"=1]
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "Lopezurrutia/DSB_2018"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "ybabakhin/kaggle_salt_bes_phalanx"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "mirzaevinom/data_science_bowl_2018"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "GlastonburyC/Dilated-U-net"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "minerva-ml/open-solution-data-science-bowl-2018"
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" -> "lopuhin/kaggle-dstl" ["e"=1]
"mortezamg63/Accessing-and-modifying-different-layers-of-a-pretrained-model-in-pytorch" -> "Spandan-Madan/A-Collection-of-important-tasks-in-pytorch"
"ebrevdo/synchrosqueezing" -> "HaizhaoYang/SynLab"
"gmalivenko/onnx2keras" -> "gmalivenko/pytorch2keras"
"gmalivenko/onnx2keras" -> "lain-m21/pytorch-to-tflite-example"
"gmalivenko/onnx2keras" -> "AxisCommunications/onnx-to-keras"
"yuquanle/Attention-Mechanisms-paper" -> "thunlp/HNRE" ["e"=1]
"mint-lab/awesome-robotics-datasets" -> "youngguncho/awesome-slam-datasets" ["e"=1]
"mint-lab/awesome-robotics-datasets" -> "wanghuayou1028/ICRA2021-SLAM-paper-list" ["e"=1]
"mint-lab/awesome-robotics-datasets" -> "gisbi-kim/PyICP-SLAM" ["e"=1]
"mint-lab/awesome-robotics-datasets" -> "mjyc/awesome-hri-datasets"
"SeuTao/Humpback-Whale-Identification" -> "pudae/kaggle-humpback"
"SeuTao/Humpback-Whale-Identification" -> "earhian/Humpback-Whale-Identification-1st-"
"SeuTao/Humpback-Whale-Identification" -> "SeuTao/kaggle-competition-solutions"
"SeuTao/Humpback-Whale-Identification" -> "SeuTao/TGS-Salt-Identification"
"SeuTao/Humpback-Whale-Identification" -> "aaxwaz/Humpback-whale-identification-challenge"
"SeuTao/Humpback-Whale-Identification" -> "pudae/kaggle-hpa"
"SeuTao/Humpback-Whale-Identification" -> "YU1ut/imet-6th-soltuion"
"SeuTao/Humpback-Whale-Identification" -> "i-pan/kaggle-rsna18"
"SeuTao/Humpback-Whale-Identification" -> "amirassov/kaggle-imaterialist"
"SeuTao/Humpback-Whale-Identification" -> "yelanlan/Pneumothorax-Segmentation-2nd-place-solution"
"SeuTao/Humpback-Whale-Identification" -> "ahrnbom/ensemble-objdet"
"SeuTao/Humpback-Whale-Identification" -> "ducha-aiki/whale-identification-2018"
"bhanML/Masking" -> "Sunarker/Safeguarded-Dynamic-Label-Regression-for-Noisy-Supervision"
"bhanML/Masking" -> "xingjunm/dimensionality-driven-learning"
"markjay4k/YOLO-series" -> "markjay4k/Mask-RCNN-series"
"jbohnslav/opencv_transforms" -> "hityzy1122/opencv_transforms_torchvision"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/Serving"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/docs"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/PLSC"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/PaddleFleetX" -> "elasticdeeplearning/edl" ["e"=1]
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/benchmark"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/PALM"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/AutoDL"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/PaddleRec" ["e"=1]
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/PaddleCloud"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/ElasticCTR"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/VisualDL"
"PaddlePaddle/PaddleFleetX" -> "PaddlePaddle/community"
"dmitrijsc/practical-rl" -> "oavdeev/getbox"
"dmitrijsc/practical-rl" -> "dartrevan/ChemTextMining"
"dmitrijsc/practical-rl" -> "emakhov/data-quality-framework"
"dmitrijsc/practical-rl" -> "sherman/blobkeeper"
"dmitrijsc/practical-rl" -> "Dumbris/trunklucator"
"dmitrijsc/practical-rl" -> "kiselev1189/EEGClassificationMCNN"
"oavdeev/getbox" -> "emakhov/data-quality-framework"
"oavdeev/getbox" -> "dartrevan/ChemTextMining"
"oavdeev/getbox" -> "dmitrijsc/practical-rl"
"oavdeev/getbox" -> "sherman/blobkeeper"
"oavdeev/getbox" -> "atrof/atrof.github.io"
"emakhov/data-quality-framework" -> "oavdeev/getbox"
"emakhov/data-quality-framework" -> "dartrevan/ChemTextMining"
"emakhov/data-quality-framework" -> "sherman/blobkeeper"
"emakhov/data-quality-framework" -> "dmitrijsc/practical-rl"
"emakhov/data-quality-framework" -> "atrof/atrof.github.io"
"Dumbris/trunklucator" -> "dmitrijsc/practical-rl"
"Dumbris/trunklucator" -> "oavdeev/getbox"
"Dumbris/trunklucator" -> "emakhov/data-quality-framework"
"Dumbris/trunklucator" -> "dartrevan/ChemTextMining"
"Dumbris/trunklucator" -> "sherman/blobkeeper"
"Dumbris/trunklucator" -> "atrof/atrof.github.io"
"Dumbris/trunklucator" -> "lext/deep_docker"
"Dumbris/trunklucator" -> "n01z3/kaggle_amazon_from_space"
"Dumbris/trunklucator" -> "kiselev1189/EEGClassificationMCNN"
"Dumbris/trunklucator" -> "indeedeng/vowpal-wabbit-java"
"Dumbris/trunklucator" -> "fgvbrt/nips_rl"
"Dumbris/trunklucator" -> "ArkadiyD/CythonXGB"
"Dumbris/trunklucator" -> "DBusAI/TF_Eager"
"Dumbris/trunklucator" -> "ex4sperans/maggot"
"NaturalIntelligence/nimn-spec" -> "NaturalIntelligence/nimnjs"
"NaturalIntelligence/nimn-spec" -> "node-muneem/anumargak"
"NaturalIntelligence/nimn-spec" -> "funcards/match-it"
"NaturalIntelligence/nimn-spec" -> "node-muneem/muneem"
"NaturalIntelligence/nimn-spec" -> "socialat/team"
"shaohua0116/ICLR2019-OpenReviewData" -> "shaohua0116/ICLR2020-OpenReviewData"
"shaohua0116/ICLR2019-OpenReviewData" -> "Chillee/OpenReviewExplorer"
"shaohua0116/ICLR2019-OpenReviewData" -> "hoya012/CVPR-2019-Paper-Statistics"
"shaohua0116/ICLR2019-OpenReviewData" -> "xuanqing94/BayesianDefense"
"shaohua0116/ICLR2019-OpenReviewData" -> "lancopku/AAPR" ["e"=1]
"zhuofupan/Tensorflow-Deep-Neural-Networks" -> "zhuofupan/Pytorch-Deep-Neural-Networks"
"zhuofupan/Tensorflow-Deep-Neural-Networks" -> "myme5261314/dbn_tf"
"2015xli/DBN" -> "rodrigosetti/dbn-cuda"
"murari023/awesome-aerial-object-detection" -> "tzxiang/awesome-semantic-understanding-for-aerial-scene"
"murari023/awesome-aerial-object-detection" -> "J911/J911"
"awwong1/torchprof" -> "zhijian-liu/torchprofile" ["e"=1]
"awwong1/torchprof" -> "NVIDIA/PyProf"
"awwong1/torchprof" -> "Stonesjtu/pytorch_memlab"
"awwong1/torchprof" -> "zasdfgbnm/TorchSnooper"
"awwong1/torchprof" -> "facebookresearch/mobile-vision" ["e"=1]
"awwong1/torchprof" -> "zhuwenxi/pytorch-profiling-tool"
"hityzy1122/opencv_transforms_torchvision" -> "jbohnslav/opencv_transforms"
"empathy87/nn-grocery-shelves" -> "gulvarol/grocerydataset"
"empathy87/nn-grocery-shelves" -> "tobiagru/ObjectDetectionGroceryProducts"
"pudae/kaggle-hpa" -> "pudae/kaggle-humpback"
"pudae/kaggle-hpa" -> "SeuTao/Humpback-Whale-Identification"
"pudae/kaggle-hpa" -> "YU1ut/imet-6th-soltuion"
"pudae/kaggle-hpa" -> "earhian/Humpback-Whale-Identification-1st-"
"pudae/kaggle-hpa" -> "fuxuliu/Human_Protein"
"pudae/kaggle-hpa" -> "BloodAxe/Kaggle-2019-Blindness-Detection"
"pudae/kaggle-hpa" -> "pudae/kaggle-understanding-clouds"
"pudae/kaggle-hpa" -> "spytensor/kaggle_human_protein_baseline"
"pudae/kaggle-hpa" -> "maciej-sypetkowski/kaggle-rcic-1st"
"pudae/kaggle-hpa" -> "tugstugi/pytorch-saltnet"
"pudae/kaggle-hpa" -> "SeuTao/kaggle-competition-solutions"
"pudae/kaggle-hpa" -> "iezepov/combat-wombat-bias-in-toxicity"
"pudae/kaggle-hpa" -> "ildoonet/kaggle-human-protein-atlas-image-classification"
"pudae/kaggle-hpa" -> "sneddy/pneumothorax-segmentation"
"pudae/kaggle-hpa" -> "i-pan/kaggle-rsna18"
"earhian/Humpback-Whale-Identification-1st-" -> "SeuTao/Humpback-Whale-Identification"
"earhian/Humpback-Whale-Identification-1st-" -> "pudae/kaggle-humpback"
"earhian/Humpback-Whale-Identification-1st-" -> "pudae/kaggle-hpa"
"earhian/Humpback-Whale-Identification-1st-" -> "SeuTao/TGS-Salt-Identification"
"earhian/Humpback-Whale-Identification-1st-" -> "SeuTao/kaggle-competition-solutions"
"earhian/Humpback-Whale-Identification-1st-" -> "tugstugi/pytorch-saltnet"
"earhian/Humpback-Whale-Identification-1st-" -> "amirassov/kaggle-imaterialist"
"earhian/Humpback-Whale-Identification-1st-" -> "bestfitting/kaggle" ["e"=1]
"earhian/Humpback-Whale-Identification-1st-" -> "ybabakhin/kaggle_salt_bes_phalanx"
"earhian/Humpback-Whale-Identification-1st-" -> "sneddy/pneumothorax-segmentation"
"earhian/Humpback-Whale-Identification-1st-" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"earhian/Humpback-Whale-Identification-1st-" -> "ZFTurbo/Keras-RetinaNet-for-Open-Images-Challenge-2018"
"earhian/Humpback-Whale-Identification-1st-" -> "lopuhin/kaggle-imet-2019"
"earhian/Humpback-Whale-Identification-1st-" -> "aaxwaz/Humpback-whale-identification-challenge"
"earhian/Humpback-Whale-Identification-1st-" -> "radekosmulski/whale" ["e"=1]
"aaren/wavelets" -> "mabelcalim/waipy"
"aaren/wavelets" -> "regeirk/pycwt"
"aaren/wavelets" -> "ct6502/wavelets"
"aaren/wavelets" -> "tomrunia/PyTorchWavelets"
"aaren/wavelets" -> "OverLordGoldDragon/ssqueezepy"
"aaren/wavelets" -> "alsauve/scaleogram"
"aaren/wavelets" -> "nigma/pywt"
"aaren/wavelets" -> "PyWavelets/pywt"
"aaren/wavelets" -> "nickgeoca/cwt-tensorflow"
"aaren/wavelets" -> "jaidevd/pyhht"
"jimdengdev/opencv_exercises" -> "TonyStark1997/OpenCV-Python"
"gloomyfish1998/opencv_tutorial" -> "gloomyfish1998/opencv4android" ["e"=1]
"gloomyfish1998/opencv_tutorial" -> "jsxyhelu/GOCvHelper"
"gloomyfish1998/opencv_tutorial" -> "fengzhenHIT/OpenCV-contrib-module-Chinese-Tutorials"
"gloomyfish1998/opencv_tutorial" -> "oreillymedia/Learning-OpenCV-3_examples"
"gloomyfish1998/opencv_tutorial" -> "ShuaiLYU/Deep-Learning-Approach-for-Surface-Defect-Detection" ["e"=1]
"gloomyfish1998/opencv_tutorial" -> "DWCTOD/AI_study"
"gloomyfish1998/opencv_tutorial" -> "QianMo/OpenCV3-Intro-Book-Src"
"visipedia/annotation_tools" -> "salihkaragoz/pose-residual-network-pytorch" ["e"=1]
"visipedia/annotation_tools" -> "matteorr/coco-analyze" ["e"=1]
"visipedia/annotation_tools" -> "Jeff-sjtu/labelKeypoint"
"visipedia/annotation_tools" -> "mkocabas/pose-residual-network" ["e"=1]
"snakers4/ds_bowl_2018" -> "pdima/kaggle_2018_data_science_bowl_solution"
"snakers4/ds_bowl_2018" -> "minerva-ml/open-solution-data-science-bowl-2018"
"snakers4/ds_bowl_2018" -> "nicolefinnie/kaggle-dsb2018"
"snakers4/ds_bowl_2018" -> "mirzaevinom/data_science_bowl_2018"
"DaikiTanaka-UT/JointOptimization" -> "YU1ut/JointOptimization"
"inaturalist/SeekReactNative" -> "inaturalist/INaturalistIOS"
"inaturalist/SeekReactNative" -> "inaturalist/iNaturalistReactNative"
"inaturalist/SeekReactNative" -> "inaturalist/inaturalistjs"
"inaturalist/SeekReactNative" -> "inaturalist/iNaturalistAndroid"
"inaturalist/SeekReactNative" -> "inaturalist/inatVisionAPI"
"shrubb/box-convolutions" -> "toodef/neural-pipeline"
"shrubb/box-convolutions" -> "EvgenyKashin/SRMnet"
"shrubb/box-convolutions" -> "belskikh/kekas"
"shrubb/box-convolutions" -> "osai-ai/tensor-stream"
"shrubb/box-convolutions" -> "CompVis/metric-learning-divide-and-conquer" ["e"=1]
"shrubb/box-convolutions" -> "kevin-ssy/FishNet" ["e"=1]
"ahong007007/awesomeCV" -> "ming71/CV_PaperDaily"
"ahong007007/awesomeCV" -> "Sophia-11/Awesome-CVPR-Paper"
"DenisVorotyntsev/CategoricalEncodingBenchmark" -> "DmitriiShubin/SBD"
"DenisVorotyntsev/CategoricalEncodingBenchmark" -> "DenisVorotyntsev/AutoSeries"
"SullyChen/Automatic-Grading-OpenCV-Python" -> "m-cakir/bubble-sheet-multiple-choice-scanner"
"i-pan/kaggle-rsna18" -> "pmcheng/rsna-pneumonia"
"i-pan/kaggle-rsna18" -> "ahrnbom/ensemble-objdet"
"i-pan/kaggle-rsna18" -> "SeuTao/Humpback-Whale-Identification"
"i-pan/kaggle-rsna18" -> "tatigabru/kaggle-rsna" ["e"=1]
"i-pan/kaggle-rsna18" -> "pudae/kaggle-hpa"
"i-pan/kaggle-rsna18" -> "ybabakhin/kaggle_salt_bes_phalanx"
"i-pan/kaggle-rsna18" -> "SeuTao/kaggle-competition-solutions"
"i-pan/kaggle-rsna18" -> "mdai/ml-lessons"
"Jeff-sjtu/labelKeypoint" -> "pprp/landmark_annotation"
"pablospe/MVCDemo" -> "jelinson/MVC"
"pablospe/MVCDemo" -> "xin-xinhanggao/efficient_quadtree"
"pivapi/Deep-Learning-For-Computer-Vision-With-Python" -> "lonePatient/Deep_Learning_For_Computer_Vision_With_Python"
"Sleepychord/ImprovedGAN-pytorch" -> "kimiyoung/ssl_bad_gan"
"Sleepychord/ImprovedGAN-pytorch" -> "cezannec/capsule_net_pytorch" ["e"=1]
"Sleepychord/ImprovedGAN-pytorch" -> "jihunchoi/recurrent-batch-normalization-pytorch"
"Sleepychord/ImprovedGAN-pytorch" -> "eli5168/improved_gan_pytorch"
"Sleepychord/ImprovedGAN-pytorch" -> "LDOUBLEV/semi-supervised-GAN"
"Sleepychord/ImprovedGAN-pytorch" -> "udacity/sagemaker-deployment" ["e"=1]
"Sleepychord/ImprovedGAN-pytorch" -> "udacity/dermatologist-ai" ["e"=1]
"Sleepychord/ImprovedGAN-pytorch" -> "nejlag/Semi-Supervised-Learning-GAN"
"Sleepychord/ImprovedGAN-pytorch" -> "benathi/fastswa-semi-sup"
"Sleepychord/ImprovedGAN-pytorch" -> "9310gaurav/virtual-adversarial-training"
"Sleepychord/ImprovedGAN-pytorch" -> "zhenxuan00/triple-gan" ["e"=1]
"Sleepychord/ImprovedGAN-pytorch" -> "daixiangzi/ImprovedGan-pytorch"
"Sleepychord/ImprovedGAN-pytorch" -> "iBelieveCJM/pseudo_label-pytorch"
"Sleepychord/ImprovedGAN-pytorch" -> "ferretj/temporal-ensembling"
"Sleepychord/ImprovedGAN-pytorch" -> "openai/improved-gan" ["e"=1]
"hongyi-zhang/mixup" -> "facebookresearch/mixup-cifar10"
"hongyi-zhang/mixup" -> "yu4u/mixup-generator" ["e"=1]
"hongyi-zhang/mixup" -> "vikasverma1077/manifold_mixup"
"hongyi-zhang/mixup" -> "uoguelph-mlrg/Cutout"
"hongyi-zhang/mixup" -> "google-research/mixmatch"
"hongyi-zhang/mixup" -> "unsky/mixup" ["e"=1]
"hongyi-zhang/mixup" -> "clovaai/CutMix-PyTorch"
"hongyi-zhang/mixup" -> "megvii-research/BBN"
"hongyi-zhang/mixup" -> "richardaecn/class-balanced-loss"
"davyneven/SpatialEmbeddings" -> "Wizaron/instance-segmentation-pytorch"
"davyneven/SpatialEmbeddings" -> "hq-jiang/instance-segmentation-with-discriminative-loss-tensorflow"
"davyneven/SpatialEmbeddings" -> "davyneven/fastSceneUnderstanding"
"davyneven/SpatialEmbeddings" -> "alicranck/instance-seg"
"davyneven/SpatialEmbeddings" -> "juglab/EmbedSeg" ["e"=1]
"davyneven/SpatialEmbeddings" -> "aimerykong/Recurrent-Pixel-Embedding-for-Instance-Grouping"
"davyneven/SpatialEmbeddings" -> "yinghdb/EmbedMask"
"davyneven/SpatialEmbeddings" -> "czyczyyzc/MyDeepMetric"
"chenpf1025/noisy_label_understanding_utilizing" -> "xingjunm/dimensionality-driven-learning"
"chenpf1025/noisy_label_understanding_utilizing" -> "LiJunnan1992/MLNT"
"aaxwaz/Humpback-whale-identification-challenge" -> "YU1ut/imet-6th-soltuion"
"mirzaevinom/data_science_bowl_2018" -> "jacobkie/2018DSB"
"mirzaevinom/data_science_bowl_2018" -> "Lopezurrutia/DSB_2018"
"mirzaevinom/data_science_bowl_2018" -> "selimsef/dsb2018_topcoders"
"mirzaevinom/data_science_bowl_2018" -> "pdima/kaggle_2018_data_science_bowl_solution"
"mirzaevinom/data_science_bowl_2018" -> "ildoonet/data-science-bowl-2018"
"mirzaevinom/data_science_bowl_2018" -> "killthekitten/kaggle-ds-bowl-2018-baseline"
"mirzaevinom/data_science_bowl_2018" -> "snakers4/ds_bowl_2018"
"mirzaevinom/data_science_bowl_2018" -> "gangadhar-p/NucleiDetectron"
"mirzaevinom/data_science_bowl_2018" -> "nicolefinnie/kaggle-dsb2018"
"mirzaevinom/data_science_bowl_2018" -> "minerva-ml/open-solution-data-science-bowl-2018"
"mirzaevinom/data_science_bowl_2018" -> "kamalkraj/DATA-SCIENCE-BOWL-2018"
"mirzaevinom/data_science_bowl_2018" -> "lopuhin/kaggle-dsbowl-2018-dataset-fixes"
"jhwjhw0123/Imbalance-XGBoost" -> "ZhiningLiu1998/self-paced-ensemble"
"jhwjhw0123/Imbalance-XGBoost" -> "dialnd/imbalanced-algorithms"
"jhwjhw0123/Imbalance-XGBoost" -> "jrzaurin/LightGBM-with-Focal-Loss"
"jhwjhw0123/Imbalance-XGBoost" -> "limexp/xgbfir" ["e"=1]
"jhwjhw0123/Imbalance-XGBoost" -> "ZhiningLiu1998/imbalanced-ensemble"
"google/mentornet" -> "bhanML/Co-teaching"
"google/mentornet" -> "uber-research/learning-to-reweight-examples"
"google/mentornet" -> "danieltan07/learning-to-reweight-examples"
"google/mentornet" -> "xingjunm/dimensionality-driven-learning"
"google/mentornet" -> "LiJunnan1992/MLNT"
"google/mentornet" -> "AlanChou/Truncated-Loss"
"google/mentornet" -> "chenpf1025/noisy_label_understanding_utilizing"
"google/mentornet" -> "PaulAlbert31/LabelNoiseCorrection"
"google/mentornet" -> "udibr/noisy_labels"
"google/mentornet" -> "hongxin001/JoCoR"
"google/mentornet" -> "kuanghuei/clean-net"
"google/mentornet" -> "mmazeika/glc"
"google/mentornet" -> "LiJunnan1992/DivideMix"
"google/mentornet" -> "bhanML/Masking"
"google/mentornet" -> "xingruiyu/coteaching_plus"
"PaddlePaddle/benchmark" -> "PaddlePaddle/continuous_evaluation"
"PaddlePaddle/benchmark" -> "PaddlePaddle/paddle-ce-latest-kpis"
"PaddlePaddle/benchmark" -> "PaddlePaddle/PaddleTest"
"PaddlePaddle/benchmark" -> "PaddlePaddle/VisionTools"
"PaddlePaddle/benchmark" -> "PaddlePaddle/community"
"PaddlePaddle/benchmark" -> "PaddlePaddle/tape"
"PaddlePaddle/benchmark" -> "PaddlePaddle/Perf"
"nachiket273/One_Cycle_Policy" -> "dkumazaw/onecyclelr"
"EMNLP2019LSAN/LSAN" -> "EiraZhang/LACO"
"EMNLP2019LSAN/LSAN" -> "adrinta/MAGNET"
"EMNLP2019LSAN/LSAN" -> "yourh/AttentionXML"
"EMNLP2019LSAN/LSAN" -> "iliaschalkidis/lmtc-eurlex57k"
"EMNLP2019LSAN/LSAN" -> "xiaolin1207/HTTN-master"
"EMNLP2019LSAN/LSAN" -> "lancopku/SGM" ["e"=1]
"EMNLP2019LSAN/LSAN" -> "HX-idiot/Hybrid_Attention_XML"
"intel-iot-devkit/store-traffic-monitor-python" -> "intel-iot-devkit/shopper-gaze-monitor-python"
"Tony607/labelme2coco" -> "Tony607/mmdetection_instance_segmentation_demo"
"Tony607/labelme2coco" -> "fcakyon/labelme2coco"
"lonePatient/lookahead_pytorch" -> "alphadl/lookahead.pytorch"
"lonePatient/lookahead_pytorch" -> "mgrankin/over9000"
"nejlag/Semi-Supervised-Learning-GAN" -> "raghav64/SemiSuper_GAN"
"GabrielBianconi/pytorch-rbm" -> "wmingwei/restricted-boltzmann-machine-deep-belief-network-deep-boltzmann-machine-in-pytorch"
"GabrielBianconi/pytorch-rbm" -> "mehulrastogi/Deep-Belief-Network-pytorch"
"GabrielBianconi/pytorch-rbm" -> "odie2630463/Restricted-Boltzmann-Machines-in-pytorch"
"GabrielBianconi/pytorch-rbm" -> "bacnguyencong/rbm-pytorch"
"GabrielBianconi/pytorch-rbm" -> "echen/restricted-boltzmann-machines"
"GabrielBianconi/pytorch-rbm" -> "omimo/xRBM"
"david-cortes/costsensitive" -> "nnikolaou/Cost-sensitive-Boosting-Tutorial"
"Albertsr/Class-Imbalance" -> "albahnsen/CostSensitiveClassification"
"Albertsr/Class-Imbalance" -> "iamyuanchung/csdnn"
"youtubevos/cocoapi" -> "qjy981010/cocoapi"
"youtubevos/cocoapi" -> "youtubevos/MaskTrackRCNN"
"youtubevos/cocoapi" -> "sabarim/STEm-Seg"
"youtubevos/cocoapi" -> "youtubevos/vis2vos"
"facebookresearch/GloRe" -> "kiyohiro8/GraphBasedGlobalReasoning"
"facebookresearch/GloRe" -> "HCPLab-SYSU/SSGRL"
"c0nn3r/RetinaNet" -> "kuangliu/pytorch-retinanet"
"c0nn3r/RetinaNet" -> "andreaazzini/retinanet.pytorch"
"c0nn3r/RetinaNet" -> "ignacio-rocco/detectorch"
"c0nn3r/RetinaNet" -> "kuangliu/torchcv"
"c0nn3r/RetinaNet" -> "veronikayurchuk/pretrained-models.pytorch"
"c0nn3r/RetinaNet" -> "felixgwu/mask_rcnn_pytorch"
"c0nn3r/RetinaNet" -> "unsky/RetinaNet" ["e"=1]
"yuchenZhangTG/SSD_resnet_pytorch" -> "lucasjinreal/ssds_pytorch"
"yuchenZhangTG/SSD_resnet_pytorch" -> "DaehanKim-Korea/ResNet_SSD_Pytorch"
"wangjiegit/WJMoviePlayer" -> "wangjiegit/WJImageBrowser"
"lRomul/argus" -> "osai-ai/dokai"
"lRomul/argus" -> "lRomul/ranzcr-clip"
"lRomul/argus" -> "lRomul/rosny"
"lRomul/argus" -> "lRomul/ball-action-spotting" ["e"=1]
"lRomul/argus" -> "lRomul/gramtion"
"UiO-CS/tf-wavelets" -> "nickgeoca/cwt-tensorflow"
"Hua-YS/AID-Multilabel-Dataset" -> "Hua-YS/DFC15-Multilabel-Dataset"
"Hua-YS/AID-Multilabel-Dataset" -> "Hua-YS/Multi-Scene-Recognition"
"Extreme-classification/deepxml" -> "Extreme-classification/DECAF"
"Extreme-classification/deepxml" -> "Extreme-classification/GalaXC"
"Extreme-classification/deepxml" -> "Extreme-classification/siamesexml"
"Extreme-classification/deepxml" -> "Extreme-classification/ECLARE"
"Extreme-classification/deepxml" -> "kunaldahiya/pyxclib"
"uber-research/learning-to-reweight-examples" -> "danieltan07/learning-to-reweight-examples"
"uber-research/learning-to-reweight-examples" -> "xjtushujun/meta-weight-net"
"uber-research/learning-to-reweight-examples" -> "google/mentornet"
"uber-research/learning-to-reweight-examples" -> "LiJunnan1992/MLNT"
"uber-research/learning-to-reweight-examples" -> "mtoneva/example_forgetting"
"uber-research/learning-to-reweight-examples" -> "chenpf1025/noisy_label_understanding_utilizing"
"uber-research/learning-to-reweight-examples" -> "mmazeika/glc"
"uber-research/learning-to-reweight-examples" -> "tanyuqian/learning-data-manipulation"
"uber-research/learning-to-reweight-examples" -> "PaulAlbert31/LabelNoiseCorrection"
"uber-research/learning-to-reweight-examples" -> "bhanML/Co-teaching"
"uber-research/learning-to-reweight-examples" -> "xingjunm/dimensionality-driven-learning"
"PaulAlbert31/LabelNoiseCorrection" -> "chenpf1025/noisy_label_understanding_utilizing"
"PaulAlbert31/LabelNoiseCorrection" -> "LiJunnan1992/MLNT"
"PaulAlbert31/LabelNoiseCorrection" -> "xingjunm/dimensionality-driven-learning"
"PaulAlbert31/LabelNoiseCorrection" -> "Cysu/noisy_label"
"PaulAlbert31/LabelNoiseCorrection" -> "yikun2019/PENCIL"
"PaulAlbert31/LabelNoiseCorrection" -> "LiJunnan1992/DivideMix"
"PaulAlbert31/LabelNoiseCorrection" -> "DiegoOrtego/LabelNoiseMOIT"
"PaulAlbert31/LabelNoiseCorrection" -> "EricArazo/PseudoLabeling"
"PaulAlbert31/LabelNoiseCorrection" -> "giorgiop/loss-correction"
"PaulAlbert31/LabelNoiseCorrection" -> "gorkemalgan/deep_learning_with_noisy_labels_literature"
"PaulAlbert31/LabelNoiseCorrection" -> "hongxin001/JoCoR"
"PaulAlbert31/LabelNoiseCorrection" -> "Newbeeer/L_DMI"
"PaulAlbert31/LabelNoiseCorrection" -> "AlanChou/Truncated-Loss"
"PaulAlbert31/LabelNoiseCorrection" -> "bhanML/Co-teaching"
"PaulAlbert31/LabelNoiseCorrection" -> "DaikiTanaka-UT/JointOptimization"
"garrickbrazil/SDS-RCNN" -> "zhangliliang/RPN_BF" ["e"=1]
"garrickbrazil/SDS-RCNN" -> "liuwei16/ALFNet"
"garrickbrazil/SDS-RCNN" -> "rainofmine/Repulsion_Loss"
"garrickbrazil/SDS-RCNN" -> "Leotju/MGAN"
"garrickbrazil/SDS-RCNN" -> "garrickbrazil/AR-Ped"
"GothicAi/Instaboost" -> "GothicAi/InstaBoost-pypi"
"GothicAi/Instaboost" -> "thangvubk/Cascade-RPN"
"GothicAi/Instaboost" -> "DirtyHarryLYL/DJ-RN" ["e"=1]
"GothicAi/Instaboost" -> "Sense-X/TSD"
"GothicAi/Instaboost" -> "zhangxiaosong18/FreeAnchor"
"GothicAi/Instaboost" -> "DirtyHarryLYL/SymNet" ["e"=1]
"plantnet/GeoLifeCLEF" -> "cesar-leblanc/hdm-framework"
"plantnet/GeoLifeCLEF" -> "plantnet/malpolon"
"kimiyoung/ssl_bad_gan" -> "Sleepychord/ImprovedGAN-pytorch"
"kimiyoung/ssl_bad_gan" -> "9310gaurav/virtual-adversarial-training"
"kimiyoung/ssl_bad_gan" -> "eli5168/improved_gan_pytorch"
"kimiyoung/ssl_bad_gan" -> "zhenxuan00/triple-gan" ["e"=1]
"kimiyoung/ssl_bad_gan" -> "takerum/vat_tf"
"kimiyoung/ssl_bad_gan" -> "LDOUBLEV/semi-supervised-GAN"
"kimiyoung/ssl_bad_gan" -> "christiancosgrove/good-semi-bad-gan"
"kimiyoung/ssl_bad_gan" -> "nejlag/Semi-Supervised-Learning-GAN"
"PacktPublishing/OpenCV-3-Computer-Vision-with-Python-Cookbook" -> "PacktPublishing/OpenCV-3-x-with-Python-By-Example"
"Po-Jen/awesome-human-robot-interaction" -> "mjyc/awesome-hri-datasets"
"Po-Jen/awesome-human-robot-interaction" -> "Healthcare-Robotics/assistive-gym" ["e"=1]
"Po-Jen/awesome-human-robot-interaction" -> "Po-Jen/awesome-grasping"
"MattKleinsmith/pbt" -> "bkj/pbt"
"MattKleinsmith/pbt" -> "angusfung/population-based-training"
"MattKleinsmith/pbt" -> "voiler/PopulationBasedTraining"
"ildoonet/cutmix" -> "ecs-vlc/FMix"
"ildoonet/cutmix" -> "clovaai/CutMix-PyTorch"
"ildoonet/cutmix" -> "owruby/shake-drop_pytorch"
"amirassov/kaggle-imaterialist" -> "sneddy/pneumothorax-segmentation"
"amirassov/kaggle-imaterialist" -> "ybabakhin/kaggle_salt_bes_phalanx"
"amirassov/kaggle-imaterialist" -> "ZFTurbo/Keras-RetinaNet-for-Open-Images-Challenge-2018"
"amirassov/kaggle-imaterialist" -> "SeuTao/Humpback-Whale-Identification"
"amirassov/kaggle-imaterialist" -> "visipedia/imat_comp" ["e"=1]
"amirassov/kaggle-imaterialist" -> "YU1ut/imet-6th-soltuion"
"amirassov/kaggle-imaterialist" -> "earhian/Humpback-Whale-Identification-1st-"
"amirassov/kaggle-imaterialist" -> "ahrnbom/ensemble-objdet"
"amirassov/kaggle-imaterialist" -> "trent-b/iterative-stratification"
"amirassov/kaggle-imaterialist" -> "pudae/kaggle-hpa"
"amirassov/kaggle-imaterialist" -> "BloodAxe/pytorch-toolbelt"
"amirassov/kaggle-imaterialist" -> "pudae/kaggle-humpback"
"amirassov/kaggle-imaterialist" -> "CompVis/metric-learning-divide-and-conquer" ["e"=1]
"amirassov/kaggle-imaterialist" -> "bestfitting/kaggle" ["e"=1]
"amirassov/kaggle-imaterialist" -> "PavelOstyakov/predictions_balancing"
"SeuTao/TGS-Salt-Identification" -> "SeuTao/kaggle-competition-solutions"
"SeuTao/TGS-Salt-Identification" -> "tugstugi/pytorch-saltnet"
"SeuTao/TGS-Salt-Identification" -> "SeuTao/Humpback-Whale-Identification"
"SeuTao/TGS-Salt-Identification" -> "matrixgardener/statistical_learning_method"
"SeuTao/TGS-Salt-Identification" -> "bomberjin/BM-commons-Utils"
"SeuTao/TGS-Salt-Identification" -> "FishPlusOrange/pocket-manual"
"SeuTao/TGS-Salt-Identification" -> "matrixgardener/matrixgardener.github.io" ["e"=1]
"SeuTao/TGS-Salt-Identification" -> "luyunfeng/soulcoder"
"SeuTao/TGS-Salt-Identification" -> "lingyejun/dating-java8"
"SeuTao/TGS-Salt-Identification" -> "wangjiegit/WJImageBrowser"
"SeuTao/TGS-Salt-Identification" -> "jieyuanfei/jianshu-react-mobile"
"heefe92/Relation_Networks-pytorch" -> "msracver/Relation-Networks-for-Object-Detection"
"pangwong/pytorch-multi-label-classifier" -> "hellowangqian/multi-label-image-classification"
"pangwong/pytorch-multi-label-classifier" -> "suraj-deshmukh/Keras-Multi-Label-Image-Classification"
"pangwong/pytorch-multi-label-classifier" -> "aman5319/Multi-Label"
"pangwong/pytorch-multi-label-classifier" -> "BartyzalRadek/Multi-label-Inception-net"
"pangwong/pytorch-multi-label-classifier" -> "megvii-research/ML-GCN" ["e"=1]
"pangwong/pytorch-multi-label-classifier" -> "bbrattoli/PascalClassificationPytorch"
"pangwong/pytorch-multi-label-classifier" -> "RandolphVI/Multi-Label-Text-Classification" ["e"=1]
"pangwong/pytorch-multi-label-classifier" -> "jiangqy/Customized-DataLoader-pytorch"
"pangwong/pytorch-multi-label-classifier" -> "yang-ruixin/PyTorch-Image-Models-Multi-Label-Classification"
"pangwong/pytorch-multi-label-classifier" -> "SlongLiu/query2labels"
"pangwong/pytorch-multi-label-classifier" -> "Epiphqny/Multiple-instance-learning" ["e"=1]
"andy-yun/pytorch-0.4-yolov3" -> "marvis/pytorch-yolo3"
"andy-yun/pytorch-0.4-yolov3" -> "marvis/pytorch-yolo2"
"andy-yun/pytorch-0.4-yolov3" -> "BobLiu20/YOLOv3_PyTorch"
"andy-yun/pytorch-0.4-yolov3" -> "yqyao/YOLOv3_Pytorch"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/Object-Detection-Tensorflow"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/PFPNet-tensorflow"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/RefineDet-tensorflow"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/RetinaNet-tensorflow"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/CenterNet-tensorflow" -> "see--/keras-centernet"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/Online_Image_Augmentor_tensorflow"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/light-head-rcnn-tensorflow"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/DLA-tensorflow"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/YOLO-tensorflow"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/ResNet-tensorflow"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/WideResNet-tensorflow"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/watershed"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/vlad"
"Stick-To/CenterNet-tensorflow" -> "Stick-To/DPN-tensorflow"
"siit-vtt/semi-supervised-learning-pytorch" -> "ferretj/temporal-ensembling"
"siit-vtt/semi-supervised-learning-pytorch" -> "tensorfreitas/Temporal-Ensembling-for-Semi-Supervised-Learning"
"siit-vtt/semi-supervised-learning-pytorch" -> "perrying/realistic-ssl-evaluation-pytorch"
"Sophia-11/Awesome-ICCV" -> "Sophia-11/Awesome-CV-Resources"
"Sophia-11/Awesome-ICCV" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"Sophia-11/Awesome-ICCV" -> "Sophia-11/Awesome-NeurIPS2019-NIPS2019"
"Sophia-11/Awesome-ICCV" -> "hoya012/CVPR-2019-Paper-Statistics"
"pyinat/pyinaturalist" -> "pyinat/pyinaturalist-convert"
"pyinat/pyinaturalist" -> "inaturalist/iNaturalistAPI"
"pyinat/pyinaturalist" -> "inaturalist/inaturalist-open-data"
"CaoWGG/torch-yolov3" -> "CaoWGG/CenterNet-darknet"
"PaddlePaddle/docs" -> "PaddlePaddle/benchmark"
"PaddlePaddle/docs" -> "PaddlePaddle/PaddleFleetX"
"PaddlePaddle/docs" -> "PaddlePaddle/community"
"PaddlePaddle/docs" -> "PaddlePaddle/Paddle-Inference-Demo"
"PaddlePaddle/docs" -> "PaddlePaddle/PaddlePaddle.org"
"PaddlePaddle/docs" -> "PaddlePaddle/AutoDL"
"PaddlePaddle/docs" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/docs" -> "PaddlePaddle/PaddleCloud"
"PaddlePaddle/docs" -> "PaddlePaddle/hapi"
"PaddlePaddle/docs" -> "PaddlePaddle/examples"
"PaddlePaddle/docs" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/docs" -> "PaddlePaddle/PLSC"
"PaddlePaddle/docs" -> "PaddlePaddle/PaddleTest"
"PaddlePaddle/docs" -> "PaddlePaddle/PALM"
"PaddlePaddle/docs" -> "PaddleCV-SIG/PaddleRS" ["e"=1]
"PaddlePaddle/AutoDL" -> "PaddlePaddle/benchmark"
"PaddlePaddle/PaddlePaddle.org" -> "PaddlePaddle/tape"
"PaddlePaddle/PaddlePaddle.org" -> "PaddlePaddle/continuous_evaluation"
"PaddlePaddle/PaddlePaddle.org" -> "PaddlePaddle/Mobile"
"PaddlePaddle/PaddlePaddle.org" -> "PaddlePaddle/Paddle-bot"
"PaddlePaddle/PaddlePaddle.org" -> "PaddlePaddle/recordio"
"9310gaurav/virtual-adversarial-training" -> "lyakaap/VAT-pytorch"
"9310gaurav/virtual-adversarial-training" -> "takerum/vat_tf"
"9310gaurav/virtual-adversarial-training" -> "jik0730/VAT-pytorch"
"9310gaurav/virtual-adversarial-training" -> "ferretj/temporal-ensembling"
"9310gaurav/virtual-adversarial-training" -> "kimiyoung/ssl_bad_gan"
"9310gaurav/virtual-adversarial-training" -> "takerum/vat"
"9310gaurav/virtual-adversarial-training" -> "siit-vtt/semi-supervised-learning-pytorch"
"LiJunnan1992/MLNT" -> "mmazeika/glc"
"LiJunnan1992/MLNT" -> "chenpf1025/noisy_label_understanding_utilizing"
"LiJunnan1992/MLNT" -> "bhanML/coteaching_plus"
"LiJunnan1992/MLNT" -> "PaulAlbert31/LabelNoiseCorrection"
"LiJunnan1992/MLNT" -> "DaikiTanaka-UT/JointOptimization"
"LiJunnan1992/MLNT" -> "hongxin001/JoCoR"
"vikasverma1077/ICT" -> "benathi/fastswa-semi-sup"
"vikasverma1077/ICT" -> "xinmei9322/SNTG"
"vikasverma1077/ICT" -> "qinenergy/adanet"
"vikasverma1077/ICT" -> "perrying/realistic-ssl-evaluation-pytorch"
"junyuseu/pytorch-cifar-models" -> "bearpaw/pytorch-classification"
"junyuseu/pytorch-cifar-models" -> "bmsookim/wide-resnet.pytorch"
"junyuseu/pytorch-cifar-models" -> "akamaster/pytorch_resnet_cifar10"
"owruby/shake-drop_pytorch" -> "owruby/shake-shake_pytorch"
"tugstugi/pytorch-speech-commands" -> "adiyoss/GCommandsPytorch"
"tugstugi/pytorch-speech-commands" -> "xiaozhouwang/tensorflow_speech_recognition_solution"
"erika1203/dbnPytorch" -> "Jxinyee/dbn_pytorch"
"shadowwalker00/CaltechPestrain2VOC" -> "Microos/citypersons2voc"
"shadowwalker00/CaltechPestrain2VOC" -> "CasiaFan/Dataset_to_VOC_converter"
"qixuxiang/Pytorch_Lightweight_Network" -> "mohhao/TF-Keras-ThunderNet"
"pudae/kaggle-humpback" -> "SeuTao/Humpback-Whale-Identification"
"pudae/kaggle-humpback" -> "aaxwaz/Humpback-whale-identification-challenge"
"pudae/kaggle-humpback" -> "pudae/kaggle-hpa"
"pudae/kaggle-humpback" -> "earhian/Humpback-Whale-Identification-1st-"
"pudae/kaggle-humpback" -> "qrfaction/2nd-Freesound-Audio-Tagging-2019" ["e"=1]
"pudae/kaggle-humpback" -> "see--/kuzushiji-recognition"
"pudae/kaggle-humpback" -> "PavelOstyakov/predictions_balancing"
"pudae/kaggle-humpback" -> "YU1ut/imet-6th-soltuion"
"pudae/kaggle-humpback" -> "lRomul/argus-tgs-salt"
"pudae/kaggle-humpback" -> "pudae/kaggle-understanding-clouds"
"lopuhin/kaggle-dsbowl-2018-dataset-fixes" -> "killthekitten/kaggle-ds-bowl-2018-baseline"
"lopuhin/kaggle-dsbowl-2018-dataset-fixes" -> "YanWang2014/Mask_RCNN"
"lopuhin/kaggle-dsbowl-2018-dataset-fixes" -> "minerva-ml/open-solution-data-science-bowl-2018"
"lopuhin/kaggle-dsbowl-2018-dataset-fixes" -> "jacobkie/2018DSB"
"lopuhin/kaggle-dsbowl-2018-dataset-fixes" -> "yuanqing811/DSB2018_stage1_test"
"lopuhin/kaggle-dsbowl-2018-dataset-fixes" -> "broadinstitute/keras-rcnn" ["e"=1]
"lopuhin/kaggle-dsbowl-2018-dataset-fixes" -> "mirzaevinom/data_science_bowl_2018"
"lopuhin/kaggle-dsbowl-2018-dataset-fixes" -> "selimsef/dsb2018_topcoders"
"megvii-research/tf-tutorials" -> "megvii-research/megvii-pku-dl-course"
"megvii-research/tf-tutorials" -> "OO-guide-2019/oo-rules" ["e"=1]
"megvii-research/tf-tutorials" -> "Mistariano/buaaoo-elevator-test-suit"
"svishnu88/TGS-SaltNet" -> "svishnu88/TGS-SaltIdentification-Open-Solution-fastai"
"svishnu88/TGS-SaltNet" -> "tugstugi/pytorch-saltnet"
"svishnu88/TGS-SaltNet" -> "radekosmulski/tgs_salt_solution" ["e"=1]
"hysts/pytorch_shake_shake" -> "owruby/shake-shake_pytorch"
"hellowangqian/multi-label-image-classification" -> "FT-ZHOU-ZZZ/DSDL"
"hellowangqian/multi-label-image-classification" -> "srp753/Multi-label-Image-Classification-using-Tensorflow"
"hellowangqian/multi-label-image-classification" -> "Enjia/Spatial-Regularization-Network-in-Tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/PFPNet-tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/RetinaNet-tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/light-head-rcnn-tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/Online_Image_Augmentor_tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/ResNet-tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/WideResNet-tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/DLA-tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/YOLO-tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/DPN-tensorflow"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/watershed"
"Stick-To/RefineDet-tensorflow" -> "Stick-To/vlad"
"kuaifengle/flutter-wechat" -> "kuaifengle/koa2-mysql-vue-vant"
"kuaifengle/flutter-wechat" -> "luyunfeng/soulcoder"
"kuaifengle/flutter-wechat" -> "bomberjin/BM-commons-Utils"
"kuaifengle/flutter-wechat" -> "aD4wn/Happy_MinecraftClient"
"kuaifengle/flutter-wechat" -> "lingyejun/dating-java8"
"kuaifengle/flutter-wechat" -> "lingyejun/LeetCode"
"kuaifengle/flutter-wechat" -> "matrixgardener/statistical_learning_method"
"GuokaiLiu/Noisy-Labels-Problem-Collection" -> "bhanML/Masking"
"GuokaiLiu/Noisy-Labels-Problem-Collection" -> "udibr/noisy_labels"
"tomrunia/TF_FeatureExtraction" -> "efidalgo/AutoBlur-CNN-Features"
"LDOUBLEV/semi-supervised-GAN" -> "clvrai/SSGAN-Tensorflow" ["e"=1]
"LDOUBLEV/semi-supervised-GAN" -> "kimiyoung/ssl_bad_gan"
"LDOUBLEV/semi-supervised-GAN" -> "Sleepychord/ImprovedGAN-pytorch"
"LDOUBLEV/semi-supervised-GAN" -> "nejlag/Semi-Supervised-Learning-GAN"
"tugstugi/pytorch-saltnet" -> "SeuTao/TGS-Salt-Identification"
"tugstugi/pytorch-saltnet" -> "svishnu88/TGS-SaltNet"
"tugstugi/pytorch-saltnet" -> "ybabakhin/kaggle_salt_bes_phalanx"
"tugstugi/pytorch-saltnet" -> "neptune-ai/open-solution-salt-identification"
"tugstugi/pytorch-saltnet" -> "lRomul/argus-tgs-salt"
"tugstugi/pytorch-saltnet" -> "lyakaap/Kaggle-Carvana-3rd-Place-Solution"
"tugstugi/pytorch-saltnet" -> "pudae/kaggle-hpa"
"tugstugi/pytorch-saltnet" -> "liaopeiyuan/kaggle-solutions"
"tugstugi/pytorch-saltnet" -> "pdima/kaggle_2018_data_science_bowl_solution"
"tugstugi/pytorch-saltnet" -> "sneddy/pneumothorax-segmentation"
"tugstugi/pytorch-saltnet" -> "earhian/Humpback-Whale-Identification-1st-"
"tugstugi/pytorch-saltnet" -> "selimsef/dsb2018_topcoders"
"Eric3911/Mini-SSD" -> "fanbinqi/FSSD-reimplementation"
"Eric3911/Mini-SSD" -> "dlyldxwl/Similar-DUC-Caffe-implement"
"DocF/Soft-NMS" -> "OneDirection9/soft-nms"
"DocF/Soft-NMS" -> "bharatsingh430/soft-nms" ["e"=1]
"DocF/Soft-NMS" -> "miaoshuyu/object-detection-usages"
"hsSam/PracticalPythonAndOpenCV_CaseStudies" -> "Abhs9/DL4CVStarterBundle"
"socialat/team" -> "funcards/match-it"
"socialat/team" -> "node-muneem/anumargak"
"socialat/team" -> "node-muneem/muneem"
"lopuhin/kaggle-script-template" -> "lopuhin/kaggle-imet-2019"
"pmcheng/rsna-pneumonia" -> "i-pan/kaggle-rsna18"
"pmcheng/rsna-pneumonia" -> "pfnet-research/pfneumonia"
"digantamisra98/Echo" -> "digantamisra98/Mila"
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/AirNet-PyTorch" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/mxnet-model" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/py-RFCN-priv" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/pytorch-priv" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/Parsing-R-CNN" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/CrossNet-PyTorch" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "longcw/RoIAlign.pytorch"
"soeaver/Pytorch_Mask_RCNN" -> "wannabeOG/Mask-RCNN"
"soeaver/Pytorch_Mask_RCNN" -> "multimodallearning/pytorch-mask-rcnn"
"soeaver/Pytorch_Mask_RCNN" -> "ignacio-rocco/detectorch"
"soeaver/Pytorch_Mask_RCNN" -> "kuangliu/torchcv"
"soeaver/Pytorch_Mask_RCNN" -> "skrish13/PyTorch-mask-x-rcnn" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "minerva-ml/open-solution-data-science-bowl-2018"
"DetectionTeamUCAS/FCOS_Tensorflow" -> "xuannianz/keras-fcos"
"DetectionTeamUCAS/FCOS_Tensorflow" -> "DetectionTeamUCAS/RetinaNet_Tensorflow" ["e"=1]
"DetectionTeamUCAS/FCOS_Tensorflow" -> "Stick-To/Object-Detection-Tensorflow"
"DetectionTeamUCAS/FCOS_Tensorflow" -> "DetectionTeamUCAS/R-FCN_Tensorflow" ["e"=1]
"subho406/TF-Speech-Recognition-Challenge-Solution" -> "xiaozhouwang/tensorflow_speech_recognition_solution"
"bharatsingh430/snip" -> "mahyarnajibi/SNIPER"
"HiKapok/PSROIAlign" -> "HiKapok/X-Detector"
"kiselev1189/insightface-just-works" -> "DmitriiShubin/SBD"
"kiselev1189/insightface-just-works" -> "MyLtYkRiTiK/ComputerVision_Tutorials_in_Russian"
"kiselev1189/insightface-just-works" -> "IlyaDobrynin/opti_models"
"HiKapok/X-Detector" -> "TropComplique/light-head-rcnn"
"HiKapok/X-Detector" -> "HiKapok/PSROIAlign"
"James-Yip/AttentionImageClass" -> "Enjia/Spatial-Regularization-Network-in-Tensorflow"
"James-Yip/AttentionImageClass" -> "zhufengx/SRN_multilabel"
"James-Yip/AttentionImageClass" -> "cvcode18/imbalanced_learning" ["e"=1]
"James-Yip/AttentionImageClass" -> "hguosc/visual_attention_consistency"
"James-Yip/AttentionImageClass" -> "HCPLab-SYSU/SSGRL"
"James-Yip/AttentionImageClass" -> "CCC-123/Hydraplus_Net" ["e"=1]
"James-Yip/AttentionImageClass" -> "EricYangsw/Multi-Label-Classification"
"James-Yip/AttentionImageClass" -> "AmrMaghraby/CNN-RNN-A-Unified-Framework-for-Multi-label-Image-Classification"
"lopuhin/kaggle-imet-2019" -> "YU1ut/imet-6th-soltuion"
"lopuhin/kaggle-imet-2019" -> "lopuhin/kaggle-script-template"
"thuwyh/Jigsaw-Unintended-Bias-in-Toxicity-Classification" -> "sakami0000/kaggle_jigsaw"
"thuwyh/Jigsaw-Unintended-Bias-in-Toxicity-Classification" -> "ngxbac/Kaggle-Jigsaw"
"thuwyh/Jigsaw-Unintended-Bias-in-Toxicity-Classification" -> "iezepov/combat-wombat-bias-in-toxicity"
"4uiiurz1/kaggle-aptos2019-blindness-detection" -> "BloodAxe/Kaggle-2019-Blindness-Detection"
"4uiiurz1/kaggle-aptos2019-blindness-detection" -> "mikelkl/APTOS2019"
"neptune-ai/open-solution-salt-identification" -> "tugstugi/pytorch-saltnet"
"neptune-ai/open-solution-salt-identification" -> "svishnu88/TGS-SaltNet"
"neptune-ai/open-solution-salt-identification" -> "minerva-ml/open-solution-ship-detection" ["e"=1]
"killthekitten/kaggle-ds-bowl-2018-baseline" -> "YanWang2014/Mask_RCNN"
"killthekitten/kaggle-ds-bowl-2018-baseline" -> "lopuhin/kaggle-dsbowl-2018-dataset-fixes"
"killthekitten/kaggle-ds-bowl-2018-baseline" -> "minerva-ml/open-solution-data-science-bowl-2018"
"chwahaha/Space-Time-completion-of-Image" -> "Pranshu258/Image_Completion"
"chwahaha/Space-Time-completion-of-Image" -> "chwahaha/statistic-of-similar-patch-offset"
"chengsq/pytorch-lighthead" -> "TreB1eN/Lighthead-RCNN-in-Pytorch0.4.1"
"harveyslash/PatchMatch" -> "MingtaoGuo/PatchMatch"
"uvipen/Very-deep-cnn-tensorflow" -> "uvipen/Character-level-cnn-tensorflow"
"YanWang2014/Mask_RCNN" -> "killthekitten/kaggle-ds-bowl-2018-baseline"
"bonsai89/unet_darknet_YOLO_AI_image_segmentation" -> "ArtyZe/yolo_segmentation"
"bonsai89/unet_darknet_YOLO_AI_image_segmentation" -> "zhengshoujian/darknet-yolo-segmentation"
"kunaldahiya/pyxclib" -> "Extreme-classification/siamesexml"
"kunaldahiya/pyxclib" -> "Extreme-classification/GalaXC"
"kunaldahiya/pyxclib" -> "Extreme-classification/deepxml"
"kunaldahiya/pyxclib" -> "Extreme-classification/DECAF"
"kunaldahiya/pyxclib" -> "nilesh2797/zestxml"
"kunaldahiya/pyxclib" -> "yourh/AttentionXML"
"kunaldahiya/pyxclib" -> "Extreme-classification/ngame"
"kunaldahiya/pyxclib" -> "tomtung/omikuji"
"kunaldahiya/pyxclib" -> "OctoberChang/X-Transformer"
"kunaldahiya/pyxclib" -> "Extreme-classification/MUFIN"
"kunaldahiya/pyxclib" -> "mwydmuch/napkinXC"
"Mugichoko445/PixMix-Inpainting" -> "Mugichoko445/Fast-Digital-Image-Inpainting"
"PaddlePaddle/continuous_evaluation" -> "PaddlePaddle/paddle-ce-latest-kpis"
"PaddlePaddle/paddle-ce-latest-kpis" -> "PaddlePaddle/continuous_evaluation"
"Mugichoko445/Fast-Digital-Image-Inpainting" -> "Mugichoko445/PixMix-Inpainting"
"fgvbrt/nips_rl" -> "sherman/blobkeeper"
"fgvbrt/nips_rl" -> "atrof/atrof.github.io"
"fgvbrt/nips_rl" -> "oavdeev/getbox"
"fgvbrt/nips_rl" -> "emakhov/data-quality-framework"
"fgvbrt/nips_rl" -> "dartrevan/ChemTextMining"
"fgvbrt/nips_rl" -> "lext/deep_docker"
"fgvbrt/nips_rl" -> "n01z3/kaggle_amazon_from_space"
"fgvbrt/nips_rl" -> "dmitrijsc/practical-rl"
"floydhub/imagenet" -> "czs0x55aa/pytorch-chatbot"
"alsauve/scaleogram" -> "CSchoel/learn-wavelets"
"node-muneem/anumargak" -> "node-muneem/muneem"
"node-muneem/anumargak" -> "funcards/match-it"
"node-muneem/anumargak" -> "socialat/team"
"node-muneem/anumargak" -> "NaturalIntelligence/nimnjs"
"node-muneem/anumargak" -> "amitguptagwl/fast-lorem-ipsum"
"lext/deep_docker" -> "oavdeev/getbox"
"lext/deep_docker" -> "atrof/atrof.github.io"
"lext/deep_docker" -> "emakhov/data-quality-framework"
"lext/deep_docker" -> "sherman/blobkeeper"
"lext/deep_docker" -> "dartrevan/ChemTextMining"
"lext/deep_docker" -> "n01z3/kaggle_amazon_from_space"
"lext/deep_docker" -> "fgvbrt/nips_rl"
"lext/deep_docker" -> "dmitrijsc/practical-rl"
"lext/deep_docker" -> "ArkadiyD/CythonXGB"
"VDIGPKU/CFENet" -> "qijiezhao/pytorch-ssd"
"VDIGPKU/CFENet" -> "KimSoybean/ScratchDet"
"VDIGPKU/CFENet" -> "VDIGPKU/M2Det"
"VDIGPKU/CFENet" -> "ethanhe42/softer-NMS"
"VDIGPKU/CFENet" -> "lzx1413/PytorchSSD"
"leokarlin/LaSO" -> "tankche1/IDeMe-Net" ["e"=1]
"leokarlin/LaSO" -> "voyazici/orderless-rnn-classification"
"leokarlin/LaSO" -> "HCPLab-SYSU/SSGRL"
"leokarlin/LaSO" -> "zhufengx/SRN_multilabel"
"hguosc/visual_attention_consistency" -> "HCPLab-SYSU/SSGRL"
"hguosc/visual_attention_consistency" -> "James-Yip/AttentionImageClass"
"hguosc/visual_attention_consistency" -> "voyazici/orderless-rnn-classification"
"sunshengfei/vue-vmarker" -> "sunshengfei/ui-picture-bd-marker"
"xiaozhouwang/tensorflow_speech_recognition_solution" -> "subho406/TF-Speech-Recognition-Challenge-Solution"
"xiaozhouwang/tensorflow_speech_recognition_solution" -> "heyt0ny/KaggleBiatch"
"xiaozhouwang/tensorflow_speech_recognition_solution" -> "YU1ut/imet-6th-soltuion"
"jrvmalik/time-frequency-analysis" -> "phamduonghung/FSSTn"
"jrvmalik/time-frequency-analysis" -> "HaizhaoYang/SynLab"
"ruoqianguo/FPN_Pytorch" -> "ruoqianguo/DetNet_pytorch"
"kuanghuei/clean-net" -> "xingjunm/dimensionality-driven-learning"
"PacktPublishing/OpenCV-3-x-with-Python-By-Example" -> "PacktPublishing/OpenCV-3-Computer-Vision-with-Python-Cookbook"
"jfpuget/DSB_2018" -> "nicolefinnie/kaggle-dsb2018"
"YU1ut/imet-6th-soltuion" -> "lopuhin/kaggle-imet-2019"
"rainofmine/Repulsion_Loss" -> "rainofmine/Bi-box_Regression"
"rainofmine/Repulsion_Loss" -> "bailvwangzi/repulsion_loss_ssd"
"rainofmine/Repulsion_Loss" -> "dongdonghy/repulsion-loss-faster-rcnn-pytorch"
"rainofmine/Repulsion_Loss" -> "miltonbd/ECCV_2018_pedestrian_detection_challenege"
"rainofmine/Repulsion_Loss" -> "VideoObjectSearch/ALFNet"
"rainofmine/Repulsion_Loss" -> "kalyo-zjl/APD"
"rainofmine/Repulsion_Loss" -> "dongdonghy/repulsion_loss_pytorch"
"rainofmine/Repulsion_Loss" -> "Leotju/MGAN"
"NobuoTsukamoto/tflite-cv-example" -> "NobuoTsukamoto/benchmarks"
"NobuoTsukamoto/tflite-cv-example" -> "guichristmann/edge-tpu-tiny-yolo"
"soutsios/pos-tagger-bert" -> "soutsios/pos-tagger-bert-tensorflow"
"cancam/LRP" -> "kemaloksuz/LRP-Error"
"aimerykong/Recurrent-Pixel-Embedding-for-Instance-Grouping" -> "Wizaron/instance-segmentation-pytorch"
"iliaschalkidis/lmtc-eurlex57k" -> "EMNLP2019LSAN/LSAN"
"iliaschalkidis/lmtc-eurlex57k" -> "kongds/LightXML"
"spytensor/kaggle_human_protein_baseline" -> "fuxuliu/Human_Protein"
"heyt0ny/KaggleBiatch" -> "sherman/blobkeeper"
"heyt0ny/KaggleBiatch" -> "atrof/atrof.github.io"
"heyt0ny/KaggleBiatch" -> "fgvbrt/nips_rl"
"heyt0ny/KaggleBiatch" -> "n01z3/kaggle_amazon_from_space"
"heyt0ny/KaggleBiatch" -> "emakhov/data-quality-framework"
"heyt0ny/KaggleBiatch" -> "lext/deep_docker"
"heyt0ny/KaggleBiatch" -> "dmitrijsc/practical-rl"
"heyt0ny/KaggleBiatch" -> "DBusAI/TF_Eager"
"heyt0ny/KaggleBiatch" -> "oavdeev/getbox"
"heyt0ny/KaggleBiatch" -> "dartrevan/ChemTextMining"
"heyt0ny/KaggleBiatch" -> "premolab/SGIMC"
"atrof/atrof.github.io" -> "sherman/blobkeeper"
"atrof/atrof.github.io" -> "oavdeev/getbox"
"atrof/atrof.github.io" -> "emakhov/data-quality-framework"
"atrof/atrof.github.io" -> "fgvbrt/nips_rl"
"atrof/atrof.github.io" -> "lext/deep_docker"
"DBusAI/TF_Eager" -> "emakhov/data-quality-framework"
"DBusAI/TF_Eager" -> "sherman/blobkeeper"
"DBusAI/TF_Eager" -> "oavdeev/getbox"
"DBusAI/TF_Eager" -> "dmitrijsc/practical-rl"
"DBusAI/TF_Eager" -> "atrof/atrof.github.io"
"DBusAI/TF_Eager" -> "dartrevan/ChemTextMining"
"DBusAI/TF_Eager" -> "fgvbrt/nips_rl"
"DBusAI/TF_Eager" -> "kiselev1189/EEGClassificationMCNN"
"phamduonghung/WSST2" -> "phamduonghung/FSSTn"
"phamduonghung/WSST2" -> "tormii/SSET"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "divyam02/dafrcnn-pytorch"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "VisionLearningGroup/DA_Detection"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "caiqi/mean-teacher-cross-domain-detection"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "megvii-research/CR-DA-DET"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "harsh-99/SCL"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "yuhuayc/da-faster-rcnn"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "ChrisAllenMing/GPA-detection"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "chaoqichen/HTCN"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "kevinhkhsu/DA_detection"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "TKKim93/DivMatch"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "xinge008/SCDA"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "chengchunhsu/EveryPixelMatters"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "naoto0804/cross-domain-detection"
"tiancity-NJU/da-faster-rcnn-PyTorch" -> "frank-xwang/towards-universal-object-detection"
"4uiiurz1/pytorch-auto-augment" -> "JunYeopLee/fast-autoaugment-efficientnet-pytorch"
"4uiiurz1/pytorch-auto-augment" -> "DeepVoltaire/AutoAugment"
"4uiiurz1/pytorch-auto-augment" -> "kakaobrain/fast-autoaugment"
"Stick-To/DLA-tensorflow" -> "Stick-To/ResNet-tensorflow"
"Stick-To/DLA-tensorflow" -> "Stick-To/WideResNet-tensorflow"
"Stick-To/DLA-tensorflow" -> "Stick-To/DPN-tensorflow"
"Stick-To/DLA-tensorflow" -> "Stick-To/light-head-rcnn-tensorflow"
"Stick-To/DLA-tensorflow" -> "Stick-To/Online_Image_Augmentor_tensorflow"
"Stick-To/DLA-tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/DLA-tensorflow" -> "Stick-To/watershed"
"minerva-ml/open-solution-data-science-bowl-2018" -> "lopuhin/kaggle-dsbowl-2018-dataset-fixes"
"minerva-ml/open-solution-data-science-bowl-2018" -> "killthekitten/kaggle-ds-bowl-2018-baseline"
"minerva-ml/open-solution-data-science-bowl-2018" -> "minerva-ml/open-solution-toxic-comments" ["e"=1]
"minerva-ml/open-solution-data-science-bowl-2018" -> "snakers4/ds_bowl_2018"
"minerva-ml/open-solution-data-science-bowl-2018" -> "selimsef/dsb2018_topcoders"
"minerva-ml/open-solution-data-science-bowl-2018" -> "Lopezurrutia/DSB_2018"
"minerva-ml/open-solution-data-science-bowl-2018" -> "jacobkie/2018DSB"
"minerva-ml/open-solution-data-science-bowl-2018" -> "louis-she/dsb"
"minerva-ml/open-solution-data-science-bowl-2018" -> "kamalkraj/DATA-SCIENCE-BOWL-2018"
"minerva-ml/open-solution-data-science-bowl-2018" -> "mirzaevinom/data_science_bowl_2018"
"minerva-ml/open-solution-data-science-bowl-2018" -> "samuelschen/DSB2018"
"deeponcology/PyTorchMedicalAI" -> "deeponcology/applied-dl-2018"
"PacktPublishing/Hands-On-Machine-Learning-with-OpenCV-4" -> "PacktPublishing/Hands-On-OpenCV-4-with-Python"
"nicolefinnie/kaggle-dsb2018" -> "jfpuget/DSB_2018"
"tomtung/omikuji" -> "tomtung/craftml-rs"
"tomtung/omikuji" -> "xmc-aalto/bonsai"
"makalo/CornerNet" -> "Stick-To/CenterNet-tensorflow"
"Lopezurrutia/DSB_2018" -> "jacobkie/2018DSB"
"Lopezurrutia/DSB_2018" -> "pdima/kaggle_2018_data_science_bowl_solution"
"Lopezurrutia/DSB_2018" -> "selimsef/dsb2018_topcoders"
"hellozgy/bnlstm-pytorch" -> "h-jia/batch_normalized_LSTM"
"VideoObjectSearch/ALFNet" -> "liuwei16/ALFNet"
"VideoObjectSearch/ALFNet" -> "rainofmine/Repulsion_Loss"
"VideoObjectSearch/ALFNet" -> "rainofmine/Bi-box_Regression"
"VideoObjectSearch/ALFNet" -> "kalyo-zjl/APD"
"VideoObjectSearch/ALFNet" -> "bailvwangzi/repulsion_loss_ssd"
"voiler/PopulationBasedTraining" -> "angusfung/population-based-training"
"voiler/PopulationBasedTraining" -> "elsheikh21/population-based-training-of-NNs"
"sunshengfei/ui-picture-bd-marker" -> "sunshengfei/vue-vmarker"
"BloodAxe/Kaggle-2019-Blindness-Detection" -> "4uiiurz1/kaggle-aptos2019-blindness-detection"
"avirambh/MSDNet-GCN" -> "gaohuang/MSDNet"
"rainofmine/Bi-box_Regression" -> "rainofmine/Repulsion_Loss"
"rainofmine/Bi-box_Regression" -> "Leotju/MGAN"
"rainofmine/Bi-box_Regression" -> "lwpyr/CSP-pedestrian-detection-in-pytorch"
"rainofmine/Bi-box_Regression" -> "kalyo-zjl/APD"
"rainofmine/Bi-box_Regression" -> "liuwei16/ALFNet"
"rainofmine/Bi-box_Regression" -> "miltonbd/ECCV_2018_pedestrian_detection_challenege"
"rainofmine/Bi-box_Regression" -> "VideoObjectSearch/ALFNet"
"rainofmine/Bi-box_Regression" -> "xingkongliang/Pedestrian-Detection"
"xingjunm/dimensionality-driven-learning" -> "chenpf1025/noisy_label_understanding_utilizing"
"xingjunm/dimensionality-driven-learning" -> "bhanML/Masking"
"xingjunm/dimensionality-driven-learning" -> "Sunarker/Safeguarded-Dynamic-Label-Regression-for-Noisy-Supervision"
"Treers/MetaCost" -> "alianoroozi/Cost-Sensitive-Learning-By-Genetic"
"hyunjaelee410/style-based-recalibration-module" -> "EvgenyKashin/SRMnet"
"georgedouzas/imbalanced-learn-extra" -> "NOVA-IMS-Innovation-and-Analytics-Lab/publications"
"xggIoU/centernet_tensorflow_wilderface_voc" -> "lucasjinreal/CenterNet_Pro_Max"
"bit-bots/wolfgang_robot" -> "RoboCup-Humanoid-TC/webots"
"bit-bots/wolfgang_robot" -> "SUSTAINA-OP/SUSTAINA-OP"
"vietnh1009/Deeplab-pytorch" -> "vietnh1009/Very-deep-cnn-pytorch"
"lopuhin/kaggle-kuzushiji-2019" -> "tascj/kaggle-kuzushiji-recognition"
"lopuhin/kaggle-kuzushiji-2019" -> "see--/kuzushiji-recognition"
"lopuhin/kaggle-kuzushiji-2019" -> "knjcode/kaggle-kuzushiji-recognition-2019"
"AruniRC/detectron-self-train" -> "krumo/Detectron-DA-Faster-RCNN"
"AruniRC/detectron-self-train" -> "megvii-research/CR-DA-DET"
"AruniRC/detectron-self-train" -> "harsh-99/SCL"
"AruniRC/detectron-self-train" -> "yuhuayc/da-faster-rcnn"
"fanbinqi/CNN-Based-FPGA" -> "fanbinqi/FSSD-reimplementation"
"fanbinqi/CNN-Based-FPGA" -> "fanbinqi/SSD-Tensorflow"
"gbif/gbif-api" -> "gbif/checklistbank"
"gbif/gbif-api" -> "gbif/rs.gbif.org"
"TreB1eN/Lighthead-RCNN-in-Pytorch0.4.1" -> "chengsq/pytorch-lighthead"
"gbif/checklistbank" -> "gbif/gbif-data-validator"
"gbif/checklistbank" -> "gbif/gbif-api"
"NaturalIntelligence/nimnjs" -> "node-muneem/anumargak"
"dlyldxwl/Similar-DUC-Caffe-implement" -> "fanbinqi/FSSD-reimplementation"
"dlyldxwl/Similar-DUC-Caffe-implement" -> "fanbinqi/SSD-Tensorflow"
"dlyldxwl/Similar-DUC-Caffe-implement" -> "fanbinqi/CNN-Based-FPGA"
"wei-yuma/multitrident" -> "Ranchentx/EFGRNet"
"wei-yuma/multitrident" -> "vaesl/LFIP"
"wei-yuma/multitrident" -> "dlyldxwl/Stronger-One-stage-detector-with-much-Tricks"
"zhanghacker/MVPHabit" -> "binlian/binglian-blog"
"binlian/binglian-blog" -> "EOSDTIO/EosWallet"
"binlian/binglian-blog" -> "luyunfeng/soulcoder"
"Mistariano/buaaoo-elevator-test-suit" -> "MinJieDev/Roadmap-Frontend"
"jodaz/speedstudy" -> "siAyush/Data-Structure-and-Algorithms-Study-Plan"
"dkumazaw/onecyclelr" -> "nachiket273/One_Cycle_Policy"
"nagmakhan/multi-label-analysis" -> "ushasi/Siamese-spatial-Graph-Convolution-Network"
"ushasi/Siamese-spatial-Graph-Convolution-Network" -> "nagmakhan/multi-label-analysis"
"funcards/match-it" -> "socialat/team"
"funcards/match-it" -> "node-muneem/anumargak"
"fredericobormann/MensaViewer" -> "lilioid/pixeldike"
"fredericobormann/MensaViewer" -> "irgendwr/go-stine"
"GothicAi/InstaBoost-pypi" -> "GothicAi/Instaboost"
"Ranchentx/EFGRNet" -> "vaesl/LRF-Net"
"Ranchentx/EFGRNet" -> "wei-yuma/multitrident"
"Ranchentx/EFGRNet" -> "JialeCao001/HSD"
"Ranchentx/EFGRNet" -> "zl1994/IoU-Uniform-R-CNN"
"Ranchentx/EFGRNet" -> "aliborji/DetectionUpperbound"
"SJTU-DL-lab/Bag_of_Tricks_CNN" -> "Tony607/Keras_Bag_of_Tricks"
"Enjia/Spatial-Regularization-Network-in-Tensorflow" -> "EricYangsw/Multi-Label-Classification"
"Enjia/Spatial-Regularization-Network-in-Tensorflow" -> "nagmakhan/multi-label-analysis"
"EricYangsw/Multi-Label-Classification" -> "Enjia/Spatial-Regularization-Network-in-Tensorflow"
"owruby/shake-shake_pytorch" -> "owruby/shake-drop_pytorch"
"angusfung/population-based-training" -> "voiler/PopulationBasedTraining"
"angusfung/population-based-training" -> "elsheikh21/population-based-training-of-NNs"
"angusfung/population-based-training" -> "fediazgon/pbt-keras"
"siddsax/Graph-NN" -> "siddsax/VisualizeMSDNet"
"Wuriqilang/Industry4.0-CV" -> "hua1024/industrial-vision-recognition"
"PaddlePaddle/XWorld" -> "PaddlePaddle/continuous_evaluation"
"PaddlePaddle/XWorld" -> "PaddlePaddle/VisionTools"
"lilioid/pixeldike" -> "fredericobormann/MensaViewer"
"node-muneem/muneem" -> "node-muneem/anumargak"
"node-muneem/muneem" -> "socialat/team"
"node-muneem/muneem" -> "funcards/match-it"
"iezepov/combat-wombat-bias-in-toxicity" -> "thuwyh/Jigsaw-Unintended-Bias-in-Toxicity-Classification"
"iezepov/combat-wombat-bias-in-toxicity" -> "sakami0000/kaggle_jigsaw"
"iezepov/combat-wombat-bias-in-toxicity" -> "see--/natural-question-answering"
"iezepov/combat-wombat-bias-in-toxicity" -> "ngxbac/Kaggle-Jigsaw"
"iezepov/combat-wombat-bias-in-toxicity" -> "BloodAxe/Kaggle-2019-Blindness-Detection"
"zhanghanduo/yolo3_pytorch" -> "xuannianz/keras-CenterNet"
"harsh-99/PyTorch-Tutorials" -> "harsh-99/Sequential-Data-Loader-and-Model-for-Variable-Length-Data"
"harsh-99/PyTorch-Tutorials" -> "siddhanthaldar/CUDA-CNN-Traffic-Sign-Recognition"
"harsh-99/PyTorch-Tutorials" -> "apugoneappu/ask_me_anything"
"harsh-99/PyTorch-Tutorials" -> "harsh-99/SCL"
"bbrattoli/PascalClassificationPytorch" -> "lyz04551/voc2007_classification_pytorch"
"PepperGo/WebTechnologies" -> "carlosavieira/self-study"
"PepperGo/WebTechnologies" -> "siAyush/Data-Structure-and-Algorithms-Study-Plan"
"ronghuaiyang/faster-rcnn-caltech-pedestrian-pytorch" -> "miltonbd/ECCV_2018_pedestrian_detection_challenege"
"YijinLiu/tf-cpu" -> "ValYouW/crossplatform-tflite-object-detecion"
"NOVA-IMS-Innovation-and-Analytics-Lab/publications" -> "georgedouzas/imbalanced-learn-extra"
"ljmiao/PENCIL" -> "ferriswym/learn-with-noisy-labels"
"vietnh1009/Very-deep-cnn-pytorch" -> "uvipen/Very-deep-cnn-tensorflow"
"vietnh1009/Very-deep-cnn-pytorch" -> "vietnh1009/Character-level-cnn-pytorch"
"vietnh1009/Very-deep-cnn-pytorch" -> "uvipen/Character-level-cnn-tensorflow"
"fanbinqi/SSD-Tensorflow" -> "fanbinqi/FSSD-reimplementation"
"fanbinqi/SSD-Tensorflow" -> "fanbinqi/CNN-Based-FPGA"
"fanbinqi/SSD-Tensorflow" -> "dlyldxwl/Similar-DUC-Caffe-implement"
"AlexGidiotis/Advanced-ML-techniques" -> "alianoroozi/Cost-Sensitive-Learning-By-Genetic"
"siddsax/Normalizing_Flows" -> "siddsax/Graph-NN"
"siddsax/Normalizing_Flows" -> "siddsax/VisualizeMSDNet"
"siddsax/VisualizeMSDNet" -> "siddsax/Graph-NN"
"Stick-To/ResNet-tensorflow" -> "Stick-To/WideResNet-tensorflow"
"Stick-To/ResNet-tensorflow" -> "Stick-To/DPN-tensorflow"
"Stick-To/ResNet-tensorflow" -> "Stick-To/light-head-rcnn-tensorflow"
"Stick-To/ResNet-tensorflow" -> "Stick-To/Online_Image_Augmentor_tensorflow"
"Stick-To/ResNet-tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/ResNet-tensorflow" -> "Stick-To/DLA-tensorflow"
"uvipen/Character-level-cnn-tensorflow" -> "uvipen/Very-deep-cnn-tensorflow"
"Stick-To/FCOS-tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/FCOS-tensorflow" -> "Stick-To/YOLO-tensorflow"
"daixiangzi/Caffe-PCN" -> "daixiangzi/PRCV2019"
"daixiangzi/Caffe-PCN" -> "daixiangzi/face_detection"
"Stick-To/PFPNet-tensorflow" -> "Stick-To/light-head-rcnn-tensorflow"
"Stick-To/PFPNet-tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/PFPNet-tensorflow" -> "Stick-To/Online_Image_Augmentor_tensorflow"
"Stick-To/PFPNet-tensorflow" -> "Stick-To/YOLO-tensorflow"
"Stick-To/PFPNet-tensorflow" -> "Stick-To/RetinaNet-tensorflow"
"Stick-To/PFPNet-tensorflow" -> "Stick-To/ResNet-tensorflow"
"Stick-To/PFPNet-tensorflow" -> "Stick-To/WideResNet-tensorflow"
"Stick-To/PFPNet-tensorflow" -> "Stick-To/DPN-tensorflow"
"hinanmu/BPMLL" -> "hinanmu/C2AE_tensorflow"
"vaesl/LFIP" -> "vaesl/LRF-Net"
"NaturalIntelligence/fastify-xml-body-parser" -> "amitguptagwl/fast-lorem-ipsum"
"NaturalIntelligence/fastify-xml-body-parser" -> "NaturalIntelligence/Grapes"
"ferriswym/learn-with-noisy-labels" -> "ljmiao/PENCIL"
"YunchuZhang/PyImageSearch-Gurus-Course" -> "vinayakShenoy/PyImageSearchGurus-Course"
"Stick-To/YOLO-tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/YOLO-tensorflow" -> "Stick-To/light-head-rcnn-tensorflow"
"Stick-To/YOLO-tensorflow" -> "Stick-To/Online_Image_Augmentor_tensorflow"
"Stick-To/YOLO-tensorflow" -> "Stick-To/ResNet-tensorflow"
"Stick-To/YOLO-tensorflow" -> "Stick-To/WideResNet-tensorflow"
"bubbliiiing/Data-Structure-and-Algorithm" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/Data-Structure-and-Algorithm" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/Data-Structure-and-Algorithm" -> "bubbliiiing/Reinforcement-Learning"
"bubbliiiing/Data-Structure-and-Algorithm" -> "bubbliiiing/ssd_keras"
"bubbliiiing/Reinforcement-Learning" -> "bubbliiiing/Optimization_Algorithm"
"Stick-To/WideResNet-tensorflow" -> "Stick-To/ResNet-tensorflow"
"Stick-To/WideResNet-tensorflow" -> "Stick-To/DPN-tensorflow"
"Stick-To/WideResNet-tensorflow" -> "Stick-To/light-head-rcnn-tensorflow"
"Stick-To/WideResNet-tensorflow" -> "Stick-To/Online_Image_Augmentor_tensorflow"
"Stick-To/WideResNet-tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/WideResNet-tensorflow" -> "Stick-To/DLA-tensorflow"
"Stick-To/DPN-tensorflow" -> "Stick-To/Online_Image_Augmentor_tensorflow"
"Stick-To/DPN-tensorflow" -> "Stick-To/ResNet-tensorflow"
"Stick-To/DPN-tensorflow" -> "Stick-To/WideResNet-tensorflow"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/light-head-rcnn-tensorflow"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/Online_Image_Augmentor_tensorflow"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/PFPNet-tensorflow"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/ResNet-tensorflow"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/WideResNet-tensorflow"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/DPN-tensorflow"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/DLA-tensorflow"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/YOLO-tensorflow"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/watershed"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/vlad"
"Stick-To/RetinaNet-tensorflow" -> "Stick-To/RefineDet-tensorflow"
"Stick-To/Online_Image_Augmentor_tensorflow" -> "Stick-To/DPN-tensorflow"
"Stick-To/Online_Image_Augmentor_tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/Online_Image_Augmentor_tensorflow" -> "Stick-To/ResNet-tensorflow"
"Stick-To/Online_Image_Augmentor_tensorflow" -> "Stick-To/WideResNet-tensorflow"
"Stick-To/light-head-rcnn-tensorflow" -> "Stick-To/SSD-tensorflow"
"Stick-To/light-head-rcnn-tensorflow" -> "Stick-To/ResNet-tensorflow"
"Stick-To/light-head-rcnn-tensorflow" -> "Stick-To/WideResNet-tensorflow"
"fanbinqi/FSSD-reimplementation" -> "fanbinqi/CNN-Based-FPGA"
"fanbinqi/FSSD-reimplementation" -> "fanbinqi/SSD-Tensorflow"
"fanbinqi/FFBNet" -> "fanbinqi/FSSD-reimplementation"
"HansBug/debug_logger" -> "Mistariano/buaaoo-elevator-test-suit"
"siddhanthaldar/CUDA-CNN-Traffic-Sign-Recognition" -> "harsh-99/Sequential-Data-Loader-and-Model-for-Variable-Length-Data"
"Stick-To/SSD-tensorflow" -> "Stick-To/light-head-rcnn-tensorflow"
"seominseok0429/cifar10-mobilenetv2-pytorch" -> "seominseok0429/inception-I3D-NON-LOCAL"
"PaddlePaddle/PaddleOCR" -> "JaidedAI/EasyOCR" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "tesseract-ocr/tesseract" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "hiroi-sora/Umi-OCR" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "DayBreak-u/chineseocr_lite" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "ultralytics/yolov5"
"PaddlePaddle/PaddleOCR" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "THUDM/ChatGLM-6B" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "fighting41love/funNLP" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "opendatalab/MinerU" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "langgenius/dify" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "ultralytics/ultralytics"
"PaddlePaddle/PaddleOCR" -> "hiyouga/LLaMA-Factory" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleOCR" -> "facebookresearch/segment-anything"
"PaddlePaddle/PaddleOCR" -> "fatedier/frp" ["e"=1]
"zyfra/ebonite" -> "belskikh/kekas"
"zyfra/ebonite" -> "mike0sv/pyjackson"
"zyfra/ebonite" -> "lightforever/mlcomp"
"zyfra/ebonite" -> "DenisVorotyntsev/CategoricalEncodingBenchmark"
"zyfra/ebonite" -> "ex4sperans/maggot"
"fchollet/ARC-AGI" -> "michaelhodel/arc-dsl" ["e"=1]
"fchollet/ARC-AGI" -> "michaelhodel/re-arc" ["e"=1]
"fchollet/ARC-AGI" -> "arogozhnikov/einops"
"fchollet/ARC-AGI" -> "google-deepmind/acme" ["e"=1]
"fchollet/ARC-AGI" -> "ellisk42/ec" ["e"=1]
"fchollet/ARC-AGI" -> "google-deepmind/deepmind-research"
"fchollet/ARC-AGI" -> "google/flax" ["e"=1]
"fchollet/ARC-AGI" -> "google/trax" ["e"=1]
"fchollet/ARC-AGI" -> "google/BIG-bench" ["e"=1]
"fchollet/ARC-AGI" -> "stanfordnlp/dspy" ["e"=1]
"fchollet/ARC-AGI" -> "jax-ml/jax"
"fchollet/ARC-AGI" -> "lmcinnes/umap" ["e"=1]
"fchollet/ARC-AGI" -> "google-deepmind/dm-haiku" ["e"=1]
"fchollet/ARC-AGI" -> "google-deepmind/graph_nets" ["e"=1]
"fchollet/ARC-AGI" -> "tensorflow/lucid"
"eastmountyxz/ImageProcessing-Python" -> "eastmountyxz/Book3-Python-ImageProcessing"
"eastmountyxz/ImageProcessing-Python" -> "eastmountyxz/HWCloudImageRecognition"
"eastmountyxz/ImageProcessing-Python" -> "waitingfordark/four_flower" ["e"=1]
"eastmountyxz/ImageProcessing-Python" -> "lxztju/pytorch_classification"
"eastmountyxz/ImageProcessing-Python" -> "CodecWang/opencv-python-tutorial"
"eastmountyxz/ImageProcessing-Python" -> "qcymkxyc/Image-Process"
"eastmountyxz/ImageProcessing-Python" -> "BBuf/Image-processing-algorithm" ["e"=1]
"eastmountyxz/ImageProcessing-Python" -> "Charmve/computer-vision-in-action"
"eastmountyxz/ImageProcessing-Python" -> "gzr2017/ImageProcessing100Wen"
"eastmountyxz/ImageProcessing-Python" -> "GYee/CV_interviews_Q-A" ["e"=1]
"eastmountyxz/ImageProcessing-Python" -> "2209520576/Image-Processing-Algorithm" ["e"=1]
"eastmountyxz/ImageProcessing-Python" -> "makelove/OpenCV-Python-Tutorial"
"eastmountyxz/ImageProcessing-Python" -> "wusaifei/garbage_classify" ["e"=1]
"eastmountyxz/ImageProcessing-Python" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"eastmountyxz/ImageProcessing-Python" -> "cruxopen/openISP" ["e"=1]
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/yolov4-pytorch"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/faster-rcnn-pytorch"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/yolov5-pytorch"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/yolo3-pytorch" -> "ultralytics/yolov3"
"bubbliiiing/yolo3-pytorch" -> "eriklindernoren/PyTorch-YOLOv3"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/yolo3-pytorch" -> "Tianxiaomo/pytorch-YOLOv4"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/yolov7-pytorch"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/yolo3-keras"
"bubbliiiing/yolo3-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/yolo3-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/yolov4-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/yolov7-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/yolov5-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "chenyuntc/simple-faster-rcnn-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "jwyang/faster-rcnn.pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/faster-rcnn-keras"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/unet-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/retinanet-pytorch"
"bubbliiiing/faster-rcnn-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"PaddlePaddle/PaddleDetection" -> "Megvii-BaseDetection/YOLOX"
"PaddlePaddle/PaddleDetection" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleDetection" -> "open-mmlab/mmdetection"
"PaddlePaddle/PaddleDetection" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleDetection" -> "WongKinYiu/yolov7"
"PaddlePaddle/PaddleDetection" -> "mikel-brostrom/boxmot" ["e"=1]
"PaddlePaddle/PaddleDetection" -> "wang-xinyu/tensorrtx"
"PaddlePaddle/PaddleDetection" -> "AlexeyAB/darknet"
"PaddlePaddle/PaddleDetection" -> "ultralytics/yolov5"
"PaddlePaddle/PaddleDetection" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleDetection" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/PaddleDetection" -> "RangiLyu/nanodet"
"PaddlePaddle/PaddleDetection" -> "facebookresearch/detectron2"
"PaddlePaddle/PaddleDetection" -> "meituan/YOLOv6"
"PaddlePaddle/PaddleDetection" -> "ultralytics/ultralytics"
"facebookresearch/detectron2" -> "open-mmlab/mmdetection"
"facebookresearch/detectron2" -> "huggingface/pytorch-image-models"
"facebookresearch/detectron2" -> "facebookresearch/detr"
"facebookresearch/detectron2" -> "facebookresearch/maskrcnn-benchmark"
"facebookresearch/detectron2" -> "facebookresearch/Detectron"
"facebookresearch/detectron2" -> "matterport/Mask_RCNN"
"facebookresearch/detectron2" -> "facebookresearch/segment-anything"
"facebookresearch/detectron2" -> "AlexeyAB/darknet"
"facebookresearch/detectron2" -> "ultralytics/yolov5"
"facebookresearch/detectron2" -> "microsoft/Swin-Transformer"
"facebookresearch/detectron2" -> "lucidrains/vit-pytorch"
"facebookresearch/detectron2" -> "albumentations-team/albumentations"
"facebookresearch/detectron2" -> "openai/CLIP"
"facebookresearch/detectron2" -> "pytorch/vision"
"facebookresearch/detectron2" -> "jwyang/faster-rcnn.pytorch"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "ZhiningLiu1998/imbalanced-ensemble"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "facebookresearch/classifier-balancing"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "ZhiningLiu1998/self-paced-ensemble"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "kaidic/LDAM-DRW"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "analyticalmindsltd/smote_variants"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "Vanint/Awesome-LongTailed-Learning"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "YyzHarry/imbalanced-semi-self"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "Stomach-ache/awesome-long-tail-learning"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "megvii-research/BBN"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "subeeshvasu/Awesome-Learning-with-Label-Noise"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "zhmiao/OpenLongTailRecognition-OLTR"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "ufoym/imbalanced-dataset-sampler"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "yassouali/awesome-semi-supervised-learning"
"ZhiningLiu1998/awesome-imbalanced-learning" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"wang-xinyu/tensorrtx" -> "shouxieai/tensorRT_Pro" ["e"=1]
"wang-xinyu/tensorrtx" -> "NVIDIA/TensorRT"
"wang-xinyu/tensorrtx" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"wang-xinyu/tensorrtx" -> "onnx/onnx-tensorrt" ["e"=1]
"wang-xinyu/tensorrtx" -> "Megvii-BaseDetection/YOLOX"
"wang-xinyu/tensorrtx" -> "enazoe/yolo-tensorrt" ["e"=1]
"wang-xinyu/tensorrtx" -> "Tianxiaomo/pytorch-YOLOv4"
"wang-xinyu/tensorrtx" -> "RangiLyu/nanodet"
"wang-xinyu/tensorrtx" -> "mikel-brostrom/boxmot" ["e"=1]
"wang-xinyu/tensorrtx" -> "AlexeyAB/darknet"
"wang-xinyu/tensorrtx" -> "jkjung-avt/tensorrt_demos" ["e"=1]
"wang-xinyu/tensorrtx" -> "WongKinYiu/yolov7"
"wang-xinyu/tensorrtx" -> "ultralytics/yolov3"
"wang-xinyu/tensorrtx" -> "xlite-dev/lite.ai.toolkit"
"wang-xinyu/tensorrtx" -> "xingyizhou/CenterNet"
"toandaominh1997/EfficientDet.Pytorch" -> "signatrix/efficientdet"
"toandaominh1997/EfficientDet.Pytorch" -> "xuannianz/EfficientDet"
"toandaominh1997/EfficientDet.Pytorch" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"toandaominh1997/EfficientDet.Pytorch" -> "GOATmessi8/ASFF"
"toandaominh1997/EfficientDet.Pytorch" -> "google/automl"
"toandaominh1997/EfficientDet.Pytorch" -> "lukemelas/EfficientNet-PyTorch"
"toandaominh1997/EfficientDet.Pytorch" -> "rwightman/efficientdet-pytorch"
"toandaominh1997/EfficientDet.Pytorch" -> "sfzhang15/ATSS"
"toandaominh1997/EfficientDet.Pytorch" -> "tianzhi0549/FCOS"
"toandaominh1997/EfficientDet.Pytorch" -> "joe-siyuan-qiao/DetectoRS"
"toandaominh1997/EfficientDet.Pytorch" -> "xingyizhou/CenterNet"
"toandaominh1997/EfficientDet.Pytorch" -> "yhenon/pytorch-retinanet"
"toandaominh1997/EfficientDet.Pytorch" -> "Duankaiwen/CenterNet"
"toandaominh1997/EfficientDet.Pytorch" -> "zhanghang1989/ResNeSt"
"toandaominh1997/EfficientDet.Pytorch" -> "VDIGPKU/CBNet_caffe"
"amusi/CVPR2025-Papers-with-Code" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"amusi/CVPR2025-Papers-with-Code" -> "microsoft/Swin-Transformer"
"amusi/CVPR2025-Papers-with-Code" -> "open-mmlab/mmdetection"
"amusi/CVPR2025-Papers-with-Code" -> "huggingface/pytorch-image-models"
"amusi/CVPR2025-Papers-with-Code" -> "amusi/daily-paper-computer-vision"
"amusi/CVPR2025-Papers-with-Code" -> "lucidrains/vit-pytorch"
"amusi/CVPR2025-Papers-with-Code" -> "amusi/ECCV2024-Papers-with-Code"
"amusi/CVPR2025-Papers-with-Code" -> "xmu-xiaoma666/External-Attention-pytorch"
"amusi/CVPR2025-Papers-with-Code" -> "facebookresearch/detr"
"amusi/CVPR2025-Papers-with-Code" -> "amusi/ICCV2023-Papers-with-Code"
"amusi/CVPR2025-Papers-with-Code" -> "mli/paper-reading"
"amusi/CVPR2025-Papers-with-Code" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"amusi/CVPR2025-Papers-with-Code" -> "openai/CLIP"
"amusi/CVPR2025-Papers-with-Code" -> "facebookresearch/segment-anything"
"amusi/CVPR2025-Papers-with-Code" -> "facebookresearch/detectron2"
"google/automl" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"google/automl" -> "xuannianz/EfficientDet"
"google/automl" -> "lukemelas/EfficientNet-PyTorch"
"google/automl" -> "toandaominh1997/EfficientDet.Pytorch"
"google/automl" -> "tensorflow/tpu"
"google/automl" -> "xingyizhou/CenterNet"
"google/automl" -> "facebookresearch/detr"
"google/automl" -> "AlexeyAB/darknet"
"google/automl" -> "zhanghang1989/ResNeSt"
"google/automl" -> "Tianxiaomo/pytorch-YOLOv4"
"google/automl" -> "WongKinYiu/ScaledYOLOv4"
"google/automl" -> "qubvel/efficientnet"
"google/automl" -> "open-mmlab/mmdetection"
"google/automl" -> "ultralytics/yolov3"
"google/automl" -> "tianzhi0549/FCOS"
"rwightman/efficientdet-pytorch" -> "ZFTurbo/Weighted-Boxes-Fusion"
"rwightman/efficientdet-pytorch" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"rwightman/efficientdet-pytorch" -> "rwightman/gen-efficientnet-pytorch"
"rwightman/efficientdet-pytorch" -> "toandaominh1997/EfficientDet.Pytorch"
"rwightman/efficientdet-pytorch" -> "lukemelas/EfficientNet-PyTorch"
"rwightman/efficientdet-pytorch" -> "google/automl"
"rwightman/efficientdet-pytorch" -> "BloodAxe/pytorch-toolbelt"
"rwightman/efficientdet-pytorch" -> "xuannianz/EfficientDet"
"rwightman/efficientdet-pytorch" -> "signatrix/efficientdet"
"rwightman/efficientdet-pytorch" -> "qubvel/efficientnet"
"rwightman/efficientdet-pytorch" -> "qubvel/ttach"
"rwightman/efficientdet-pytorch" -> "facebookresearch/pycls"
"rwightman/efficientdet-pytorch" -> "WongKinYiu/ScaledYOLOv4"
"rwightman/efficientdet-pytorch" -> "zhanghang1989/ResNeSt"
"rwightman/efficientdet-pytorch" -> "google-research/augmix"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "google/automl"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "lukemelas/EfficientNet-PyTorch"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "toandaominh1997/EfficientDet.Pytorch"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "xingyizhou/CenterNet"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "Tianxiaomo/pytorch-YOLOv4"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "zhanghang1989/ResNeSt"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "tianzhi0549/FCOS"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "ultralytics/yolov3"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "amusi/awesome-object-detection"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "RangiLyu/nanodet"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "rwightman/efficientdet-pytorch"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "eriklindernoren/PyTorch-YOLOv3"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "AlexeyAB/darknet"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "xuannianz/EfficientDet"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "open-mmlab/mmdetection"
"lxztju/pytorch_classification" -> "hysts/pytorch_image_classification"
"lxztju/pytorch_classification" -> "weiaicunzai/awesome-image-classification"
"lxztju/pytorch_classification" -> "bearpaw/pytorch-classification"
"lxztju/pytorch_classification" -> "weiaicunzai/pytorch-cifar100"
"lxztju/pytorch_classification" -> "wusaifei/garbage_classify" ["e"=1]
"lxztju/pytorch_classification" -> "DLLXW/data-science-competition" ["e"=1]
"lxztju/pytorch_classification" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"lxztju/pytorch_classification" -> "eastmountyxz/ImageProcessing-Python"
"lxztju/pytorch_classification" -> "harleyszhang/cv_note" ["e"=1]
"lxztju/pytorch_classification" -> "tslgithub/image_class" ["e"=1]
"lxztju/pytorch_classification" -> "WenmuZhou/PytorchOCR" ["e"=1]
"lxztju/pytorch_classification" -> "BangguWu/ECANet" ["e"=1]
"lxztju/pytorch_classification" -> "open-mmlab/mmpretrain"
"lxztju/pytorch_classification" -> "spytensor/pytorch_img_classification_for_competition" ["e"=1]
"lxztju/pytorch_classification" -> "waitingfordark/four_flower" ["e"=1]
"ultralytics/yolov5" -> "ultralytics/ultralytics"
"ultralytics/yolov5" -> "open-mmlab/mmdetection"
"ultralytics/yolov5" -> "AlexeyAB/darknet"
"ultralytics/yolov5" -> "WongKinYiu/yolov7"
"ultralytics/yolov5" -> "facebookresearch/detectron2"
"ultralytics/yolov5" -> "huggingface/pytorch-image-models"
"ultralytics/yolov5" -> "ultralytics/yolov3"
"ultralytics/yolov5" -> "HumanSignal/labelImg"
"ultralytics/yolov5" -> "Megvii-BaseDetection/YOLOX"
"ultralytics/yolov5" -> "facebookresearch/segment-anything"
"ultralytics/yolov5" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"ultralytics/yolov5" -> "PaddlePaddle/PaddleDetection"
"ultralytics/yolov5" -> "wang-xinyu/tensorrtx"
"ultralytics/yolov5" -> "pjreddie/darknet"
"ultralytics/yolov5" -> "lutzroeder/netron"
"open-mmlab/mmsegmentation" -> "qubvel-org/segmentation_models.pytorch"
"open-mmlab/mmsegmentation" -> "open-mmlab/mmcv"
"open-mmlab/mmsegmentation" -> "open-mmlab/mmdetection"
"open-mmlab/mmsegmentation" -> "microsoft/Swin-Transformer"
"open-mmlab/mmsegmentation" -> "NVlabs/SegFormer" ["e"=1]
"open-mmlab/mmsegmentation" -> "open-mmlab/mmpretrain"
"open-mmlab/mmsegmentation" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"open-mmlab/mmsegmentation" -> "mrgloom/awesome-semantic-segmentation"
"open-mmlab/mmsegmentation" -> "huggingface/pytorch-image-models"
"open-mmlab/mmsegmentation" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"open-mmlab/mmsegmentation" -> "PaddlePaddle/PaddleSeg"
"open-mmlab/mmsegmentation" -> "open-mmlab/mmdetection3d" ["e"=1]
"open-mmlab/mmsegmentation" -> "facebookresearch/detectron2"
"open-mmlab/mmsegmentation" -> "facebookresearch/detr"
"open-mmlab/mmsegmentation" -> "facebookresearch/Mask2Former" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "Rudrabha/Wav2Lip" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleSpeech" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "OpenTalker/SadTalker" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "OpenTalker/video-retalking" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "AliaksandrSiarohin/first-order-model" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/PaddleGAN" -> "open-mmlab/mmagic" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "XPixelGroup/BasicSR" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "PeterL1n/BackgroundMattingV2" ["e"=1]
"Alibaba-MIIL/ASL" -> "SlongLiu/query2labels"
"Alibaba-MIIL/ASL" -> "wutong16/DistributionBalancedLoss"
"Alibaba-MIIL/ASL" -> "Alibaba-MIIL/TResNet"
"Alibaba-MIIL/ASL" -> "Alibaba-MIIL/ML_Decoder"
"Alibaba-MIIL/ASL" -> "QData/C-Tran"
"Alibaba-MIIL/ASL" -> "megvii-research/ML-GCN" ["e"=1]
"Alibaba-MIIL/ASL" -> "HCPLab-SYSU/SSGRL"
"Alibaba-MIIL/ASL" -> "JiaweiZhao-git/Awesome-Multi-label-Image-Recognition"
"Alibaba-MIIL/ASL" -> "Kevinz-code/CSRA"
"Alibaba-MIIL/ASL" -> "Alibaba-MIIL/PartialLabelingCSL"
"Alibaba-MIIL/ASL" -> "Yejin0111/ADD-GCN"
"Alibaba-MIIL/ASL" -> "Alibaba-MIIL/ImageNet21K"
"Alibaba-MIIL/ASL" -> "chehao2628/MSRN"
"Alibaba-MIIL/ASL" -> "naver-ai/relabel_imagenet" ["e"=1]
"Alibaba-MIIL/ASL" -> "hellowangqian/multi-label-image-classification"
"aim-uofa/AdelaiDet" -> "WXinlong/SOLO"
"aim-uofa/AdelaiDet" -> "tianzhi0549/FCOS"
"aim-uofa/AdelaiDet" -> "dbolya/yolact"
"aim-uofa/AdelaiDet" -> "xieenze/PolarMask"
"aim-uofa/AdelaiDet" -> "xingyizhou/CenterNet"
"aim-uofa/AdelaiDet" -> "MhLiao/DB" ["e"=1]
"aim-uofa/AdelaiDet" -> "PeizeSun/SparseR-CNN"
"aim-uofa/AdelaiDet" -> "sfzhang15/ATSS"
"aim-uofa/AdelaiDet" -> "Yuliang-Liu/bezier_curve_text_spotting" ["e"=1]
"aim-uofa/AdelaiDet" -> "zhanghang1989/ResNeSt"
"aim-uofa/AdelaiDet" -> "facebookresearch/maskrcnn-benchmark"
"aim-uofa/AdelaiDet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"aim-uofa/AdelaiDet" -> "xingyizhou/CenterNet2"
"aim-uofa/AdelaiDet" -> "facebookresearch/detr"
"aim-uofa/AdelaiDet" -> "youngwanLEE/CenterMask"
"labmlai/annotated_deep_learning_paper_implementations" -> "google-research/tuning_playbook"
"labmlai/annotated_deep_learning_paper_implementations" -> "mli/paper-reading"
"labmlai/annotated_deep_learning_paper_implementations" -> "binary-husky/gpt_academic" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "huggingface/pytorch-image-models"
"labmlai/annotated_deep_learning_paper_implementations" -> "huggingface/transformers" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "facebookresearch/segment-anything"
"labmlai/annotated_deep_learning_paper_implementations" -> "lucidrains/vit-pytorch"
"labmlai/annotated_deep_learning_paper_implementations" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"labmlai/annotated_deep_learning_paper_implementations" -> "rasbt/LLMs-from-scratch" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "krahets/hello-algo" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "hiyouga/LLaMA-Factory" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "yunjey/pytorch-tutorial" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "d2l-ai/d2l-zh" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "amusi/CVPR2025-Papers-with-Code"
"labmlai/annotated_deep_learning_paper_implementations" -> "floodsung/Deep-Learning-Papers-Reading-Roadmap" ["e"=1]
"WZMIAOMIAO/deep-learning-for-image-processing" -> "amusi/CVPR2025-Papers-with-Code"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "huggingface/pytorch-image-models"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "xmu-xiaoma666/External-Attention-pytorch"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "mli/paper-reading"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "ultralytics/yolov5"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "open-mmlab/mmdetection"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "microsoft/Swin-Transformer"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "lucidrains/vit-pytorch"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "labmlai/annotated_deep_learning_paper_implementations"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "jacobgil/pytorch-grad-cam"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "pytorch/vision"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "ultralytics/ultralytics"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "dair-ai/ml-visuals"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "facebookresearch/segment-anything"
"jettify/pytorch-optimizer" -> "juntang-zhuang/Adabelief-Optimizer"
"jettify/pytorch-optimizer" -> "LiyuanLucasLiu/RAdam"
"jettify/pytorch-optimizer" -> "KevinMusgrave/pytorch-metric-learning"
"jettify/pytorch-optimizer" -> "BloodAxe/pytorch-toolbelt"
"jettify/pytorch-optimizer" -> "tomgoldstein/loss-landscape" ["e"=1]
"jettify/pytorch-optimizer" -> "clovaai/AdamP" ["e"=1]
"jettify/pytorch-optimizer" -> "arogozhnikov/einops"
"jettify/pytorch-optimizer" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"jettify/pytorch-optimizer" -> "davda54/sam"
"jettify/pytorch-optimizer" -> "catalyst-team/catalyst"
"jettify/pytorch-optimizer" -> "facebookresearch/vissl" ["e"=1]
"jettify/pytorch-optimizer" -> "kornia/kornia"
"jettify/pytorch-optimizer" -> "facebookresearch/fairscale" ["e"=1]
"jettify/pytorch-optimizer" -> "facebookresearch/pycls"
"jettify/pytorch-optimizer" -> "rwightman/efficientdet-pytorch"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleGAN"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/models"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleVideo" ["e"=1]
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleOCR"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/VisualDL"
"PaddlePaddle/PaddleClas" -> "RangiLyu/nanodet"
"PaddlePaddle/PaddleClas" -> "Megvii-BaseDetection/YOLOX"
"bubbliiiing/yolov4-pytorch" -> "bubbliiiing/yolo3-pytorch"
"bubbliiiing/yolov4-pytorch" -> "Tianxiaomo/pytorch-YOLOv4"
"bubbliiiing/yolov4-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/yolov4-pytorch" -> "WongKinYiu/PyTorch_YOLOv4"
"bubbliiiing/yolov4-pytorch" -> "bubbliiiing/faster-rcnn-pytorch"
"bubbliiiing/yolov4-pytorch" -> "argusswift/YOLOv4-pytorch" ["e"=1]
"bubbliiiing/yolov4-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/yolov4-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/yolov4-pytorch" -> "bubbliiiing/yolov5-pytorch"
"bubbliiiing/yolov4-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/yolov4-pytorch" -> "bubbliiiing/yolov4-keras"
"bubbliiiing/yolov4-pytorch" -> "bubbliiiing/yolov7-pytorch"
"bubbliiiing/yolov4-pytorch" -> "WongKinYiu/ScaledYOLOv4"
"bubbliiiing/yolov4-pytorch" -> "ultralytics/yolov3"
"bubbliiiing/yolov4-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"object-detection-algorithm/R-CNN" -> "zjZSTU/Fast-R-CNN"
"object-detection-algorithm/R-CNN" -> "FLyingLSJ/PyTorch-YOLOv3-master"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/PaddleSlim" -> "666DZY666/micronet" ["e"=1]
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/PaddleSlim" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/Serving"
"PaddlePaddle/PaddleSlim" -> "open-mmlab/mmrazor" ["e"=1]
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleSlim" -> "OpenPPL/ppq" ["e"=1]
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/PaddleFleetX"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/PaddleVideo" ["e"=1]
"PaddlePaddle/PaddleSlim" -> "DingXiaoH/RepVGG"
"PaddlePaddle/PaddleSlim" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"facebookresearch/detr" -> "fundamentalvision/Deformable-DETR"
"facebookresearch/detr" -> "microsoft/Swin-Transformer"
"facebookresearch/detr" -> "facebookresearch/detectron2"
"facebookresearch/detr" -> "open-mmlab/mmdetection"
"facebookresearch/detr" -> "huggingface/pytorch-image-models"
"facebookresearch/detr" -> "lucidrains/vit-pytorch"
"facebookresearch/detr" -> "google-research/vision_transformer"
"facebookresearch/detr" -> "xingyizhou/CenterNet"
"facebookresearch/detr" -> "openai/CLIP"
"facebookresearch/detr" -> "amusi/CVPR2025-Papers-with-Code"
"facebookresearch/detr" -> "facebookresearch/maskrcnn-benchmark"
"facebookresearch/detr" -> "Megvii-BaseDetection/YOLOX"
"facebookresearch/detr" -> "facebookresearch/mae"
"facebookresearch/detr" -> "facebookresearch/deit"
"facebookresearch/detr" -> "facebookresearch/dino"
"voxel51/fiftyone" -> "cvat-ai/cvat"
"voxel51/fiftyone" -> "kornia/kornia"
"voxel51/fiftyone" -> "IDEA-Research/Grounded-Segment-Anything" ["e"=1]
"voxel51/fiftyone" -> "huggingface/pytorch-image-models"
"voxel51/fiftyone" -> "facebookresearch/dinov2" ["e"=1]
"voxel51/fiftyone" -> "albumentations-team/albumentations"
"voxel51/fiftyone" -> "mlfoundations/open_clip" ["e"=1]
"voxel51/fiftyone" -> "obss/sahi"
"voxel51/fiftyone" -> "facebookresearch/detectron2"
"voxel51/fiftyone" -> "lightly-ai/lightly" ["e"=1]
"voxel51/fiftyone" -> "facebookresearch/sam2" ["e"=1]
"voxel51/fiftyone" -> "facebookresearch/detr"
"voxel51/fiftyone" -> "lucidrains/vit-pytorch"
"voxel51/fiftyone" -> "facebookresearch/segment-anything"
"voxel51/fiftyone" -> "openai/CLIP"
"open-mmlab/mmpretrain" -> "open-mmlab/mmsegmentation"
"open-mmlab/mmpretrain" -> "open-mmlab/mmcv"
"open-mmlab/mmpretrain" -> "open-mmlab/mmdeploy"
"open-mmlab/mmpretrain" -> "open-mmlab/mmselfsup" ["e"=1]
"open-mmlab/mmpretrain" -> "open-mmlab/mmyolo"
"open-mmlab/mmpretrain" -> "open-mmlab/mmrazor" ["e"=1]
"open-mmlab/mmpretrain" -> "open-mmlab/mmengine"
"open-mmlab/mmpretrain" -> "open-mmlab/mmfewshot" ["e"=1]
"open-mmlab/mmpretrain" -> "open-mmlab/mmaction2" ["e"=1]
"open-mmlab/mmpretrain" -> "open-mmlab/mmdetection3d" ["e"=1]
"open-mmlab/mmpretrain" -> "open-mmlab/mmocr" ["e"=1]
"open-mmlab/mmpretrain" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/mmpretrain" -> "open-mmlab/mmdetection"
"open-mmlab/mmpretrain" -> "open-mmlab/mmagic" ["e"=1]
"open-mmlab/mmpretrain" -> "DingXiaoH/RepVGG"
"dog-qiuqiu/Yolo-Fastest" -> "dog-qiuqiu/MobileNet-Yolo" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "dog-qiuqiu/Yolo-FastestV2" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "RangiLyu/nanodet"
"dog-qiuqiu/Yolo-Fastest" -> "cmdbug/YOLOv5_NCNN" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "dog-qiuqiu/FastestDet" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "ppogg/YOLOv5-Lite" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "WongKinYiu/PyTorch_YOLOv4"
"dog-qiuqiu/Yolo-Fastest" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "WongKinYiu/ScaledYOLOv4"
"dog-qiuqiu/Yolo-Fastest" -> "Megvii-BaseDetection/YOLOX"
"dog-qiuqiu/Yolo-Fastest" -> "Tianxiaomo/pytorch-YOLOv4"
"dog-qiuqiu/Yolo-Fastest" -> "enazoe/yolo-tensorrt" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "DingXiaoH/RepVGG"
"PaddlePaddle/PaddleSeg" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleSeg" -> "open-mmlab/mmsegmentation"
"PaddlePaddle/PaddleSeg" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleSeg" -> "qubvel-org/segmentation_models.pytorch"
"PaddlePaddle/PaddleSeg" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/PaddleSeg" -> "mrgloom/awesome-semantic-segmentation"
"PaddlePaddle/PaddleSeg" -> "wkentaro/labelme"
"PaddlePaddle/PaddleSeg" -> "IDEA-Research/Grounded-Segment-Anything" ["e"=1]
"PaddlePaddle/PaddleSeg" -> "Megvii-BaseDetection/YOLOX"
"PaddlePaddle/PaddleSeg" -> "open-mmlab/mmdetection"
"PaddlePaddle/PaddleSeg" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/PaddleSeg" -> "ZHKKKe/MODNet" ["e"=1]
"PaddlePaddle/PaddleSeg" -> "facebookresearch/detectron2"
"PaddlePaddle/PaddleSeg" -> "PeterL1n/BackgroundMattingV2" ["e"=1]
"PaddlePaddle/PaddleSeg" -> "microsoft/Swin-Transformer"
"mindspore-ai/mindspore" -> "mindspore-ai/docs"
"mindspore-ai/mindspore" -> "mindspore-ai/akg"
"mindspore-ai/mindspore" -> "mindspore-ai/mindinsight"
"mindspore-ai/mindspore" -> "mindspore-ai/graphengine"
"mindspore-ai/mindspore" -> "mindspore-ai/community"
"mindspore-ai/mindspore" -> "mindspore-ai/ms-operator"
"mindspore-ai/mindspore" -> "mindspore-ai/mail_templates"
"mindspore-ai/mindspore" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/mindspore" -> "mindspore-ai/book"
"mindspore-ai/mindspore" -> "mindspore-ai/infrastructure"
"mindspore-ai/mindspore" -> "mindspore-ai/serving"
"mindspore-ai/mindspore" -> "mindspore-ai/hub"
"mindspore-ai/mindspore" -> "mindspore-ai/course"
"mindspore-ai/mindspore" -> "mindspore-ai/mindarmour"
"mindspore-ai/mindspore" -> "apache/tvm"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleVideo" ["e"=1]
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/awesome-DeepLearning" -> "BR-IDL/PaddleViT"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/awesome-DeepLearning" -> "amusi/Deep-Learning-Interview-Book" ["e"=1]
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/models"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/Paddle"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleGAN"
"PaddlePaddle/awesome-DeepLearning" -> "datawhalechina/competition-baseline" ["e"=1]
"PaddlePaddle/awesome-DeepLearning" -> "xlite-dev/lite.ai.toolkit"
"dair-ai/ml-visuals" -> "amusi/CVPR2025-Papers-with-Code"
"dair-ai/ml-visuals" -> "mli/paper-reading"
"dair-ai/ml-visuals" -> "HarisIqbal88/PlotNeuralNet"
"dair-ai/ml-visuals" -> "xmu-xiaoma666/External-Attention-pytorch"
"dair-ai/ml-visuals" -> "huggingface/pytorch-image-models"
"dair-ai/ml-visuals" -> "lucidrains/vit-pytorch"
"dair-ai/ml-visuals" -> "google-research/tuning_playbook"
"dair-ai/ml-visuals" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"dair-ai/ml-visuals" -> "labmlai/annotated_deep_learning_paper_implementations"
"dair-ai/ml-visuals" -> "microsoft/Swin-Transformer"
"dair-ai/ml-visuals" -> "ShusenTang/Dive-into-DL-PyTorch" ["e"=1]
"dair-ai/ml-visuals" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"dair-ai/ml-visuals" -> "jacobgil/pytorch-grad-cam"
"dair-ai/ml-visuals" -> "thunlp/GNNPapers" ["e"=1]
"dair-ai/ml-visuals" -> "zergtant/pytorch-handbook" ["e"=1]
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "darraghdog/rsna"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "appian42/kaggle-rsna-intracranial-hemorrhage"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "okotaku/kaggle_rsna2019_3rd_solution"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "SeuTao/kaggle-competition-solutions"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "ngxbac/Kaggle-RSNA"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "yelanlan/Pneumothorax-Segmentation-2nd-place-solution"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "sneddy/pneumothorax-segmentation"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "bestfitting/kaggle" ["e"=1]
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "pudae/kaggle-understanding-clouds"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "pudae/kaggle-hpa"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "amirassov/kaggle-imaterialist"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "i-pan/kaggle-rsna18"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "earhian/Humpback-Whale-Identification-1st-"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "SeuTao/Humpback-Whale-Identification"
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" -> "perone/medicaltorch" ["e"=1]
"fengzhenHIT/learnOpenCV4" -> "fengzhenHIT/learnOpenCV4_Python"
"fengzhenHIT/learnOpenCV4" -> "fengzhenHIT/OpenCV_Projects"
"fengzhenHIT/learnOpenCV4" -> "fengzhenHIT/OpenCV-contrib-module-Chinese-Tutorials"
"fengzhenHIT/learnOpenCV4" -> "PacktPublishing/Mastering-OpenCV-4-Third-Edition"
"fengzhenHIT/learnOpenCV4" -> "fengzhenHIT/Leran-OpenCV-4-data"
"inaturalist/inaturalist" -> "inaturalist/iNaturalistAPI"
"inaturalist/inaturalist" -> "inaturalist/INaturalistIOS"
"inaturalist/inaturalist" -> "inaturalist/iNaturalistAndroid"
"inaturalist/inaturalist" -> "inaturalist/iNaturalistReactNative"
"inaturalist/inaturalist" -> "pyinat/pyinaturalist"
"inaturalist/inaturalist" -> "inaturalist/SeekReactNative"
"inaturalist/inaturalist" -> "inaturalist/inaturalist-open-data"
"inaturalist/inaturalist" -> "inaturalist/inaturalistjs"
"inaturalist/inaturalist" -> "jumear/stirfry"
"inaturalist/inaturalist" -> "inaturalist/inatVisionAPI"
"inaturalist/inaturalist" -> "tdwg/dwc"
"inaturalist/inaturalist" -> "Growstuff/growstuff" ["e"=1]
"inaturalist/inaturalist" -> "gbif/pygbif"
"inaturalist/inaturalist" -> "globalbioticinteractions/globalbioticinteractions"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/OpenCV-Python-Tutorials-and-Projects"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Learn-OpenCV-cpp-in-4-Hours"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Face-Recognition"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "Fafa-DL/Opencv-project"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Document-Scanner"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Learn-Python"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Real-Time-Object-Measurement"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "rchavezj/OpenCV_Projects"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Angle-Finder"
"huawei-noah/Efficient-AI-Backbones" -> "DingXiaoH/RepVGG"
"huawei-noah/Efficient-AI-Backbones" -> "zhanghang1989/ResNeSt"
"huawei-noah/Efficient-AI-Backbones" -> "RangiLyu/nanodet"
"huawei-noah/Efficient-AI-Backbones" -> "facebookresearch/ConvNeXt"
"huawei-noah/Efficient-AI-Backbones" -> "iamhankai/ghostnet.pytorch"
"huawei-noah/Efficient-AI-Backbones" -> "lukemelas/EfficientNet-PyTorch"
"huawei-noah/Efficient-AI-Backbones" -> "microsoft/Swin-Transformer"
"huawei-noah/Efficient-AI-Backbones" -> "Lyken17/pytorch-OpCounter"
"huawei-noah/Efficient-AI-Backbones" -> "xmu-xiaoma666/External-Attention-pytorch"
"huawei-noah/Efficient-AI-Backbones" -> "xiaolai-sqlai/mobilenetv3"
"huawei-noah/Efficient-AI-Backbones" -> "Megvii-BaseDetection/YOLOX"
"huawei-noah/Efficient-AI-Backbones" -> "megvii-model/ShuffleNet-Series"
"huawei-noah/Efficient-AI-Backbones" -> "xingyizhou/CenterNet"
"huawei-noah/Efficient-AI-Backbones" -> "huawei-noah/Efficient-Computing" ["e"=1]
"huawei-noah/Efficient-AI-Backbones" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/faster-rcnn-pytorch"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/retinanet-pytorch"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/yolov4-pytorch"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/yolo3-pytorch"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/ssd-keras"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/faster-rcnn-keras"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/RFB-keras"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/ssd-pytorch" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/mask-recognize" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/mask-recognize" -> "bubbliiiing/poems-generator"
"bubbliiiing/mask-recognize" -> "bubbliiiing/mtcnn-keras"
"bubbliiiing/mask-recognize" -> "bubbliiiing/ssd_keras"
"bubbliiiing/mask-recognize" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/mask-recognize" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/mask-recognize" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/mask-recognize" -> "bubbliiiing/Transfer-Learning"
"bubbliiiing/mask-recognize" -> "bubbliiiing/classic-convolution-network"
"bubbliiiing/mask-recognize" -> "bubbliiiing/RFB-keras"
"bubbliiiing/mask-recognize" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/mask-recognize" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/mask-recognize" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/mask-recognize" -> "bubbliiiing/Keras-Attention"
"bubbliiiing/mask-recognize" -> "bubbliiiing/Mobilenet-SSD-Essay"
"jsbroks/awesome-dataset-tools" -> "taivop/awesome-data-annotation"
"jsbroks/awesome-dataset-tools" -> "HumanSignal/awesome-data-labeling"
"jsbroks/awesome-dataset-tools" -> "l3p-cv/lost"
"jsbroks/awesome-dataset-tools" -> "jsbroks/coco-annotator"
"jsbroks/awesome-dataset-tools" -> "UniversalDataTool/universal-data-tool"
"jsbroks/awesome-dataset-tools" -> "mint-lab/awesome-robotics-datasets"
"jsbroks/awesome-dataset-tools" -> "Labelbox/labelbox-custom-labeling-apps"
"Jittor/jittor" -> "MegEngine/MegEngine"
"Jittor/jittor" -> "Oneflow-Inc/oneflow" ["e"=1]
"Jittor/jittor" -> "apache/tvm"
"Jittor/jittor" -> "bytedance/byteps" ["e"=1]
"Jittor/jittor" -> "microsoft/nnfusion" ["e"=1]
"Jittor/jittor" -> "mindspore-ai/mindspore"
"Jittor/jittor" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"Jittor/jittor" -> "alibaba/BladeDISC" ["e"=1]
"Jittor/jittor" -> "Tencent/TNN"
"Jittor/jittor" -> "Jittor/JNeRF" ["e"=1]
"Jittor/jittor" -> "halide/Halide" ["e"=1]
"Jittor/jittor" -> "MenghaoGuo/PCT" ["e"=1]
"Jittor/jittor" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["e"=1]
"Jittor/jittor" -> "alibaba/MNN"
"Jittor/jittor" -> "tqchen/tinyflow" ["e"=1]
"WongKinYiu/PyTorch_YOLOv4" -> "Tianxiaomo/pytorch-YOLOv4"
"WongKinYiu/PyTorch_YOLOv4" -> "WongKinYiu/ScaledYOLOv4"
"WongKinYiu/PyTorch_YOLOv4" -> "argusswift/YOLOv4-pytorch" ["e"=1]
"WongKinYiu/PyTorch_YOLOv4" -> "bubbliiiing/yolov4-pytorch"
"WongKinYiu/PyTorch_YOLOv4" -> "WongKinYiu/yolor"
"WongKinYiu/PyTorch_YOLOv4" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"WongKinYiu/PyTorch_YOLOv4" -> "ultralytics/yolov3"
"WongKinYiu/PyTorch_YOLOv4" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"WongKinYiu/PyTorch_YOLOv4" -> "WongKinYiu/CrossStagePartialNetworks"
"WongKinYiu/PyTorch_YOLOv4" -> "GOATmessi8/ASFF"
"WongKinYiu/PyTorch_YOLOv4" -> "tianzhi0549/FCOS"
"WongKinYiu/PyTorch_YOLOv4" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"WongKinYiu/PyTorch_YOLOv4" -> "Megvii-BaseDetection/YOLOX"
"WongKinYiu/PyTorch_YOLOv4" -> "wang-xinyu/tensorrtx"
"WongKinYiu/PyTorch_YOLOv4" -> "RangiLyu/nanodet"
"sightmachine/SimpleCV" -> "jesolem/PCV"
"sightmachine/SimpleCV" -> "liuliu/ccv" ["e"=1]
"sightmachine/SimpleCV" -> "scikit-image/scikit-image" ["e"=1]
"sightmachine/SimpleCV" -> "sightmachine/simplecv-examples"
"sightmachine/SimpleCV" -> "vlfeat/vlfeat" ["e"=1]
"sightmachine/SimpleCV" -> "luispedro/mahotas"
"sightmachine/SimpleCV" -> "ukoethe/vigra" ["e"=1]
"sightmachine/SimpleCV" -> "peterbraden/node-opencv" ["e"=1]
"sightmachine/SimpleCV" -> "abidrahmank/OpenCV2-Python-Tutorials"
"sightmachine/SimpleCV" -> "zk00006/OpenTLD" ["e"=1]
"sightmachine/SimpleCV" -> "waveform80/picamera" ["e"=1]
"sightmachine/SimpleCV" -> "sightmachine/simplecv-js"
"sightmachine/SimpleCV" -> "lessthanoptimal/BoofCV" ["e"=1]
"sightmachine/SimpleCV" -> "utahta/pythonbrew" ["e"=1]
"sightmachine/SimpleCV" -> "cmusatyalab/openface" ["e"=1]
"PINTO0309/PINTO_model_zoo" -> "xlite-dev/lite.ai.toolkit"
"PINTO0309/PINTO_model_zoo" -> "terryky/tflite_gles_app"
"PINTO0309/PINTO_model_zoo" -> "RangiLyu/nanodet"
"PINTO0309/PINTO_model_zoo" -> "daquexian/onnx-simplifier"
"PINTO0309/PINTO_model_zoo" -> "axinc-ai/ailia-models" ["e"=1]
"PINTO0309/PINTO_model_zoo" -> "iwatake2222/play_with_tflite"
"PINTO0309/PINTO_model_zoo" -> "Megvii-BaseDetection/YOLOX"
"PINTO0309/PINTO_model_zoo" -> "PINTO0309/openvino2tensorflow"
"PINTO0309/PINTO_model_zoo" -> "openvinotoolkit/open_model_zoo" ["e"=1]
"PINTO0309/PINTO_model_zoo" -> "wang-xinyu/tensorrtx"
"PINTO0309/PINTO_model_zoo" -> "ppogg/YOLOv5-Lite" ["e"=1]
"PINTO0309/PINTO_model_zoo" -> "PINTO0309/tflite2tensorflow"
"PINTO0309/PINTO_model_zoo" -> "PINTO0309/onnx2tf"
"PINTO0309/PINTO_model_zoo" -> "lucasjinreal/yolov7_d2"
"PINTO0309/PINTO_model_zoo" -> "onnx/models"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/Serving"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/Paddle-Inference-Demo"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/Paddle-Lite-Demo" -> "equationl/paddleocr4android" ["e"=1]
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/Paddle-Lite-Demo" -> "FeiGeChuanShu/ncnn_paddleocr" ["e"=1]
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/LiteKit"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/PaddleFleetX"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/hapi"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/benchmark"
"PaddlePaddle/Paddle-Lite-Demo" -> "cmdbug/YOLOv5_NCNN" ["e"=1]
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/AutoDL"
"shanglianlm0525/PyTorch-Networks" -> "shanglianlm0525/CvPytorch" ["e"=1]
"shanglianlm0525/PyTorch-Networks" -> "pprp/SimpleCVReproduction"
"shanglianlm0525/PyTorch-Networks" -> "huawei-noah/Efficient-AI-Backbones"
"shanglianlm0525/PyTorch-Networks" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"shanglianlm0525/PyTorch-Networks" -> "zhanghang1989/ResNeSt"
"shanglianlm0525/PyTorch-Networks" -> "xmu-xiaoma666/External-Attention-pytorch"
"shanglianlm0525/PyTorch-Networks" -> "BangguWu/ECANet" ["e"=1]
"shanglianlm0525/PyTorch-Networks" -> "junfu1115/DANet" ["e"=1]
"shanglianlm0525/PyTorch-Networks" -> "murufeng/awesome_lightweight_networks"
"shanglianlm0525/PyTorch-Networks" -> "RangiLyu/nanodet"
"shanglianlm0525/PyTorch-Networks" -> "AlexHex7/Non-local_pytorch" ["e"=1]
"shanglianlm0525/PyTorch-Networks" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"shanglianlm0525/PyTorch-Networks" -> "Jongchan/attention-module" ["e"=1]
"shanglianlm0525/PyTorch-Networks" -> "iscyy/ultralyticsPro" ["e"=1]
"shanglianlm0525/PyTorch-Networks" -> "xingyizhou/CenterNet"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/yolov4-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/yolo3-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/yolov5-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/yolov7-tiny-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/classification-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/yolov4-tiny-tf2"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/yolov4-tiny-keras"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/yolov7-pytorch"
"bubbliiiing/yolov4-tiny-pytorch" -> "bubbliiiing/yolov4-keras"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/VisualDL"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/models"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleGAN"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/Serving"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleOCR"
"pytorch/captum" -> "interpretml/interpret" ["e"=1]
"pytorch/captum" -> "shap/shap" ["e"=1]
"pytorch/captum" -> "skorch-dev/skorch" ["e"=1]
"pytorch/captum" -> "KevinMusgrave/pytorch-metric-learning"
"pytorch/captum" -> "arogozhnikov/einops"
"pytorch/captum" -> "SeldonIO/alibi" ["e"=1]
"pytorch/captum" -> "marcotcr/lime" ["e"=1]
"pytorch/captum" -> "utkuozbulak/pytorch-cnn-visualizations"
"pytorch/captum" -> "jacobgil/pytorch-grad-cam"
"pytorch/captum" -> "jphall663/awesome-machine-learning-interpretability" ["e"=1]
"pytorch/captum" -> "kundajelab/deeplift" ["e"=1]
"pytorch/captum" -> "cdpierse/transformers-interpret" ["e"=1]
"pytorch/captum" -> "tensorflow/lucid"
"pytorch/captum" -> "Lightning-AI/pytorch-lightning"
"pytorch/captum" -> "albermax/innvestigate" ["e"=1]
"KevinMusgrave/pytorch-metric-learning" -> "adambielski/siamese-triplet" ["e"=1]
"KevinMusgrave/pytorch-metric-learning" -> "huggingface/pytorch-image-models"
"KevinMusgrave/pytorch-metric-learning" -> "Confusezius/Deep-Metric-Learning-Baselines" ["e"=1]
"KevinMusgrave/pytorch-metric-learning" -> "bnu-wangxun/Deep_Metric" ["e"=1]
"KevinMusgrave/pytorch-metric-learning" -> "kornia/kornia"
"KevinMusgrave/pytorch-metric-learning" -> "albumentations-team/albumentations"
"KevinMusgrave/pytorch-metric-learning" -> "facebookresearch/vissl" ["e"=1]
"KevinMusgrave/pytorch-metric-learning" -> "HobbitLong/SupContrast" ["e"=1]
"KevinMusgrave/pytorch-metric-learning" -> "Cadene/pretrained-models.pytorch"
"KevinMusgrave/pytorch-metric-learning" -> "facebookresearch/moco" ["e"=1]
"KevinMusgrave/pytorch-metric-learning" -> "arogozhnikov/einops"
"KevinMusgrave/pytorch-metric-learning" -> "google-research/simclr" ["e"=1]
"KevinMusgrave/pytorch-metric-learning" -> "lukemelas/EfficientNet-PyTorch"
"KevinMusgrave/pytorch-metric-learning" -> "qubvel-org/segmentation_models.pytorch"
"KevinMusgrave/pytorch-metric-learning" -> "jacobgil/pytorch-grad-cam"
"megvii-model/ShuffleNet-Series" -> "xiaolai-sqlai/mobilenetv3"
"megvii-model/ShuffleNet-Series" -> "mit-han-lab/proxylessnas" ["e"=1]
"megvii-model/ShuffleNet-Series" -> "miaow1988/ShuffleNet_V2_pytorch_caffe" ["e"=1]
"megvii-model/ShuffleNet-Series" -> "Tencent/ObjectDetection-OneStageDet"
"megvii-model/ShuffleNet-Series" -> "JiahuiYu/slimmable_networks" ["e"=1]
"megvii-model/ShuffleNet-Series" -> "princeton-vl/CornerNet"
"megvii-model/ShuffleNet-Series" -> "tusen-ai/simpledet"
"megvii-model/ShuffleNet-Series" -> "donnyyou/torchcv"
"megvii-model/ShuffleNet-Series" -> "Duankaiwen/CenterNet"
"megvii-model/ShuffleNet-Series" -> "tianzhi0549/FCOS"
"megvii-model/ShuffleNet-Series" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"megvii-model/ShuffleNet-Series" -> "DingXiaoH/RepVGG"
"megvii-model/ShuffleNet-Series" -> "huawei-noah/Efficient-AI-Backbones"
"megvii-model/ShuffleNet-Series" -> "D-X-Y/AutoDL-Projects" ["e"=1]
"megvii-model/ShuffleNet-Series" -> "zhanghang1989/ResNeSt"
"CrazyVertigo/awesome-data-augmentation" -> "dvlab-research/GridMask"
"CrazyVertigo/awesome-data-augmentation" -> "AgaMiko/data-augmentation-review"
"CrazyVertigo/awesome-data-augmentation" -> "google-research/augmix"
"CrazyVertigo/awesome-data-augmentation" -> "ZFTurbo/Weighted-Boxes-Fusion"
"CrazyVertigo/awesome-data-augmentation" -> "hhaAndroid/mmdetection-mini"
"CrazyVertigo/awesome-data-augmentation" -> "GOATmessi8/ASFF"
"CrazyVertigo/awesome-data-augmentation" -> "kemaloksuz/ObjectDetectionImbalance"
"CrazyVertigo/awesome-data-augmentation" -> "Paperspace/DataAugmentationForObjectDetection"
"CrazyVertigo/awesome-data-augmentation" -> "DeepVoltaire/AutoAugment"
"CrazyVertigo/awesome-data-augmentation" -> "kakaobrain/fast-autoaugment"
"CrazyVertigo/awesome-data-augmentation" -> "xingyizhou/CenterNet2"
"CrazyVertigo/awesome-data-augmentation" -> "jshilong/SEPC"
"CrazyVertigo/awesome-data-augmentation" -> "clovaai/CutMix-PyTorch"
"CrazyVertigo/awesome-data-augmentation" -> "zhanghang1989/ResNeSt"
"CrazyVertigo/awesome-data-augmentation" -> "zhunzhong07/Random-Erasing" ["e"=1]
"zju3dv/snake" -> "xieenze/PolarMask"
"zju3dv/snake" -> "youngwanLEE/CenterMask"
"zju3dv/snake" -> "WXinlong/SOLO"
"zju3dv/snake" -> "aim-uofa/AdelaiDet"
"zju3dv/snake" -> "fidler-lab/curve-gcn" ["e"=1]
"zju3dv/snake" -> "zhang-tao-whu/e2ec"
"zju3dv/snake" -> "youngwanLEE/centermask2"
"zju3dv/snake" -> "lkevinzc/dance"
"zju3dv/snake" -> "PeizeSun/SparseR-CNN"
"zju3dv/snake" -> "openseg-group/openseg.pytorch" ["e"=1]
"zju3dv/snake" -> "dbolya/yolact"
"zju3dv/snake" -> "xingyizhou/ExtremeNet"
"zju3dv/snake" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"zju3dv/snake" -> "zhanghang1989/ResNeSt"
"zju3dv/snake" -> "tianzhi0549/FCOS"
"Scalsol/RepPointsV2" -> "microsoft/RepPoints"
"Scalsol/RepPointsV2" -> "Megvii-BaseDetection/BorderDet"
"Scalsol/RepPointsV2" -> "justimyhxu/Dense-RepPoints"
"Scalsol/RepPointsV2" -> "PeizeSun/OneNet"
"Scalsol/RepPointsV2" -> "hyz-xmaster/VarifocalNet"
"Scalsol/RepPointsV2" -> "kkhoot/PAA"
"Scalsol/RepPointsV2" -> "implus/GFocalV2"
"Scalsol/RepPointsV2" -> "hyz-xmaster/swa_object_detection" ["e"=1]
"Scalsol/RepPointsV2" -> "xingyizhou/CenterNet2"
"Scalsol/RepPointsV2" -> "implus/GFocal"
"Scalsol/RepPointsV2" -> "Megvii-BaseDetection/AutoAssign"
"Scalsol/RepPointsV2" -> "PeizeSun/SparseR-CNN"
"Scalsol/RepPointsV2" -> "sfzhang15/ATSS"
"Scalsol/RepPointsV2" -> "microsoft/RelationNet2"
"Scalsol/RepPointsV2" -> "jshilong/SEPC"
"Megvii-BaseDetection/BorderDet" -> "Scalsol/RepPointsV2"
"Megvii-BaseDetection/BorderDet" -> "Megvii-BaseDetection/DeFCN"
"Megvii-BaseDetection/BorderDet" -> "implus/GFocal"
"Megvii-BaseDetection/BorderDet" -> "kkhoot/PAA"
"Megvii-BaseDetection/BorderDet" -> "Megvii-BaseDetection/cvpods"
"Megvii-BaseDetection/BorderDet" -> "PeizeSun/SparseR-CNN"
"Megvii-BaseDetection/BorderDet" -> "hkzhang95/DynamicRCNN"
"Megvii-BaseDetection/BorderDet" -> "sfzhang15/ATSS"
"Megvii-BaseDetection/BorderDet" -> "Sense-X/TSD"
"Megvii-BaseDetection/BorderDet" -> "implus/GFocalV2"
"Megvii-BaseDetection/BorderDet" -> "FateScript/CenterNet-better"
"Megvii-BaseDetection/BorderDet" -> "microsoft/RepPoints"
"Megvii-BaseDetection/BorderDet" -> "yqyao/FCOS_PLUS"
"Megvii-BaseDetection/BorderDet" -> "microsoft/RelationNet2"
"Megvii-BaseDetection/BorderDet" -> "joe-siyuan-qiao/DetectoRS"
"TheNerdful8/Lecture2Gether" -> "fredericobormann/MensaViewer"
"TheNerdful8/Lecture2Gether" -> "lilioid/pixeldike"
"amusi/ECCV2024-Papers-with-Code" -> "amusi/ICCV2023-Papers-with-Code"
"amusi/ECCV2024-Papers-with-Code" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"amusi/ECCV2024-Papers-with-Code" -> "amusi/CVPR2025-Papers-with-Code"
"amusi/ECCV2024-Papers-with-Code" -> "amusi/daily-paper-computer-vision"
"amusi/ECCV2024-Papers-with-Code" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"amusi/ECCV2024-Papers-with-Code" -> "52CV/CVPR-2021-Papers"
"amusi/ECCV2024-Papers-with-Code" -> "dk-liang/Awesome-Visual-Transformer"
"amusi/ECCV2024-Papers-with-Code" -> "huawei-noah/Efficient-AI-Backbones"
"amusi/ECCV2024-Papers-with-Code" -> "aim-uofa/AdelaiDet"
"amusi/ECCV2024-Papers-with-Code" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"amusi/ECCV2024-Papers-with-Code" -> "DWCTOD/CVPR2024-Papers-with-Code-Demo"
"amusi/ECCV2024-Papers-with-Code" -> "Kobaayyy/Awesome-CVPR2025-CVPR2024-CVPR2021-CVPR2020-Low-Level-Vision" ["e"=1]
"amusi/ECCV2024-Papers-with-Code" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"amusi/ECCV2024-Papers-with-Code" -> "microsoft/Swin-Transformer"
"amusi/ECCV2024-Papers-with-Code" -> "zhanghang1989/ResNeSt"
"luxonis/depthai" -> "luxonis/depthai-experiments"
"luxonis/depthai" -> "luxonis/depthai-python"
"luxonis/depthai" -> "luxonis/depthai-hardware"
"luxonis/depthai" -> "luxonis/depthai-core"
"luxonis/depthai" -> "luxonis/depthai-ml-training"
"luxonis/depthai" -> "luxonis/depthai-ros"
"luxonis/depthai" -> "geaxgx/depthai_blazepose"
"luxonis/depthai" -> "geaxgx/depthai_hand_tracker"
"luxonis/depthai" -> "luxonis/depthai-tutorials"
"luxonis/depthai" -> "SpectacularAI/sdk-examples"
"luxonis/depthai" -> "luxonis/depthai-gui"
"luxonis/depthai" -> "duncanrhamill/oakd_orbslam3"
"luxonis/depthai" -> "keijiro/DepthAITestbed"
"luxonis/depthai" -> "PINTO0309/PINTO_model_zoo"
"luxonis/depthai" -> "compphoto/BoostingMonocularDepth" ["e"=1]
"TylerYep/torchinfo" -> "sksq96/pytorch-summary"
"TylerYep/torchinfo" -> "Lightning-AI/torchmetrics"
"TylerYep/torchinfo" -> "arogozhnikov/einops"
"TylerYep/torchinfo" -> "szagoruyko/pytorchviz"
"TylerYep/torchinfo" -> "Lyken17/pytorch-OpCounter"
"TylerYep/torchinfo" -> "sovrasov/flops-counter.pytorch"
"TylerYep/torchinfo" -> "ashleve/lightning-hydra-template"
"TylerYep/torchinfo" -> "facebookresearch/fvcore"
"TylerYep/torchinfo" -> "jettify/pytorch-optimizer"
"TylerYep/torchinfo" -> "mert-kurttutan/torchview" ["e"=1]
"TylerYep/torchinfo" -> "XuehaiPan/nvitop" ["e"=1]
"TylerYep/torchinfo" -> "pytorch/captum"
"TylerYep/torchinfo" -> "huggingface/accelerate" ["e"=1]
"TylerYep/torchinfo" -> "IgorSusmelj/pytorch-styleguide"
"TylerYep/torchinfo" -> "KevinMusgrave/pytorch-metric-learning"
"zhanghang1989/ResNeSt" -> "lukemelas/EfficientNet-PyTorch"
"zhanghang1989/ResNeSt" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"zhanghang1989/ResNeSt" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"zhanghang1989/ResNeSt" -> "junfu1115/DANet" ["e"=1]
"zhanghang1989/ResNeSt" -> "tianzhi0549/FCOS"
"zhanghang1989/ResNeSt" -> "facebookresearch/pycls"
"zhanghang1989/ResNeSt" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"zhanghang1989/ResNeSt" -> "joe-siyuan-qiao/DetectoRS"
"zhanghang1989/ResNeSt" -> "aim-uofa/AdelaiDet"
"zhanghang1989/ResNeSt" -> "xingyizhou/CenterNet"
"zhanghang1989/ResNeSt" -> "chongruo/detectron2-ResNeSt"
"zhanghang1989/ResNeSt" -> "DingXiaoH/RepVGG"
"zhanghang1989/ResNeSt" -> "Cadene/pretrained-models.pytorch"
"zhanghang1989/ResNeSt" -> "tensorflow/tpu"
"zhanghang1989/ResNeSt" -> "huawei-noah/Efficient-AI-Backbones"
"WXinlong/SOLO" -> "aim-uofa/AdelaiDet"
"WXinlong/SOLO" -> "xieenze/PolarMask"
"WXinlong/SOLO" -> "dbolya/yolact"
"WXinlong/SOLO" -> "zju3dv/snake"
"WXinlong/SOLO" -> "Epiphqny/SOLOv2"
"WXinlong/SOLO" -> "tianzhi0549/FCOS"
"WXinlong/SOLO" -> "youngwanLEE/CenterMask"
"WXinlong/SOLO" -> "PeizeSun/SparseR-CNN"
"WXinlong/SOLO" -> "youngwanLEE/centermask2"
"WXinlong/SOLO" -> "hustvl/SparseInst"
"WXinlong/SOLO" -> "xingyizhou/CenterNet2"
"WXinlong/SOLO" -> "joe-siyuan-qiao/DetectoRS"
"WXinlong/SOLO" -> "zhanghang1989/ResNeSt"
"WXinlong/SOLO" -> "sfzhang15/ATSS"
"WXinlong/SOLO" -> "xingyizhou/CenterNet"
"chongruo/detectron2-ResNeSt" -> "joe-siyuan-qiao/DetectoRS"
"chongruo/detectron2-ResNeSt" -> "zhanghang1989/ResNeSt"
"chongruo/detectron2-ResNeSt" -> "Sense-X/TSD"
"chongruo/detectron2-ResNeSt" -> "youngwanLEE/vovnet-detectron2"
"chongruo/detectron2-ResNeSt" -> "zhaoweicai/Detectron-Cascade-RCNN"
"chongruo/detectron2-ResNeSt" -> "conradry/copy-paste-aug"
"chongruo/detectron2-ResNeSt" -> "youngwanLEE/CenterMask"
"chongruo/detectron2-ResNeSt" -> "hkzhang95/DynamicRCNN"
"chongruo/detectron2-ResNeSt" -> "youngwanLEE/centermask2"
"chongruo/detectron2-ResNeSt" -> "sxhxliang/detectron2_backbone"
"chongruo/detectron2-ResNeSt" -> "grimoire/mmdetection-to-tensorrt" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "bonlime/keras-deeplab-v3-plus" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "divamgupta/image-segmentation-keras" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "dbolya/yolact"
"ayoolaolafenwa/PixelLib" -> "WisconsinAIVision/yolact_edge"
"ayoolaolafenwa/PixelLib" -> "airctic/icevision" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "youngwanLEE/CenterMask"
"ayoolaolafenwa/PixelLib" -> "google-research-datasets/Objectron" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "obss/sahi"
"ayoolaolafenwa/PixelLib" -> "qubvel/segmentation_models"
"ayoolaolafenwa/PixelLib" -> "krishnaik06/Image-Segmentation-Using-Pixellib" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "ultralytics/JSON2YOLO"
"ayoolaolafenwa/PixelLib" -> "azavea/raster-vision" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "WXinlong/SOLO"
"ayoolaolafenwa/PixelLib" -> "Tessellate-Imaging/Monk_Object_Detection" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "codebox/image_augmentor"
"niconielsen32/ComputerVision" -> "niconielsen32/NeuralNetworks"
"niconielsen32/ComputerVision" -> "niconielsen32/ArtificialIntelligence"
"niconielsen32/ComputerVision" -> "luigifreda/pyslam" ["e"=1]
"niconielsen32/ComputerVision" -> "LearnTechWithUs/Stereo-Vision" ["e"=1]
"niconielsen32/ComputerVision" -> "FoamoftheSea/KITTI_visual_odometry" ["e"=1]
"niconielsen32/ComputerVision" -> "polygon-software/python-visual-odometry" ["e"=1]
"niconielsen32/ComputerVision" -> "niconielsen32/PoseEstimation3DObjectDetection"
"niconielsen32/ComputerVision" -> "niconielsen32/VisualSLAM"
"niconielsen32/ComputerVision" -> "tryolabs/norfair" ["e"=1]
"niconielsen32/ComputerVision" -> "isl-org/MiDaS" ["e"=1]
"niconielsen32/ComputerVision" -> "niconielsen32/PointClouds"
"niconielsen32/ComputerVision" -> "ruhyadi/YOLO3D" ["e"=1]
"niconielsen32/ComputerVision" -> "niconielsen32/ObjectTracking"
"niconielsen32/ComputerVision" -> "RizwanMunawar/yolov7-object-tracking" ["e"=1]
"niconielsen32/ComputerVision" -> "changh95/visual-slam-roadmap" ["e"=1]
"megvii-research/BBN" -> "facebookresearch/classifier-balancing"
"megvii-research/BBN" -> "kaidic/LDAM-DRW"
"megvii-research/BBN" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"megvii-research/BBN" -> "zhmiao/OpenLongTailRecognition-OLTR"
"megvii-research/BBN" -> "frank-xwang/RIDE-LongTailRecognition"
"megvii-research/BBN" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"megvii-research/BBN" -> "richardaecn/class-balanced-loss"
"megvii-research/BBN" -> "vandit15/Class-balanced-loss-pytorch"
"megvii-research/BBN" -> "YyzHarry/imbalanced-semi-self"
"megvii-research/BBN" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"megvii-research/BBN" -> "tztztztztz/eql.detectron2"
"megvii-research/BBN" -> "visipedia/inat_comp"
"megvii-research/BBN" -> "wutong16/DistributionBalancedLoss"
"megvii-research/BBN" -> "jiequancui/ResLT"
"megvii-research/BBN" -> "dvlab-research/MiSLAS"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "HarisIqbal88/PlotNeuralNet"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "paulgavrikov/visualkeras"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "alexlenail/NN-SVG" ["e"=1]
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "gwding/draw_convnet" ["e"=1]
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "lutzroeder/netron"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "dair-ai/ml-visuals"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "jacobgil/pytorch-grad-cam"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "utkuozbulak/pytorch-cnn-visualizations"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "huggingface/pytorch-image-models"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "kornia/kornia"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "arogozhnikov/einops"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "garrettj403/SciencePlots" ["e"=1]
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "pytorch/captum"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "qubvel-org/segmentation_models.pytorch"
"murtazahassan/Object-Following-Robot" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Object-Following-Robot" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Object-Following-Robot" -> "murtazahassan/Obstacle-Avoding-Robot"
"Lightning-Universe/lightning-bolts" -> "Lightning-Universe/lightning-flash"
"Lightning-Universe/lightning-bolts" -> "Lightning-AI/deep-learning-project-template"
"Lightning-Universe/lightning-bolts" -> "Lightning-AI/torchmetrics"
"Lightning-Universe/lightning-bolts" -> "Lightning-Universe/lightning-transformers" ["e"=1]
"Lightning-Universe/lightning-bolts" -> "facebookresearch/vissl" ["e"=1]
"Lightning-Universe/lightning-bolts" -> "ashleve/lightning-hydra-template"
"Lightning-Universe/lightning-bolts" -> "lightly-ai/lightly" ["e"=1]
"Lightning-Universe/lightning-bolts" -> "Lightning-AI/pytorch-lightning"
"Lightning-Universe/lightning-bolts" -> "libffcv/ffcv"
"Lightning-Universe/lightning-bolts" -> "facebookresearch/hydra"
"Lightning-Universe/lightning-bolts" -> "pytorch/captum"
"Lightning-Universe/lightning-bolts" -> "skorch-dev/skorch" ["e"=1]
"Lightning-Universe/lightning-bolts" -> "vturrisi/solo-learn" ["e"=1]
"Lightning-Universe/lightning-bolts" -> "facebookresearch/swav" ["e"=1]
"Lightning-Universe/lightning-bolts" -> "jettify/pytorch-optimizer"
"luxonis/depthai-core" -> "luxonis/depthai-ros"
"luxonis/depthai-core" -> "luxonis/depthai-python"
"luxonis/depthai-core" -> "luxonis/depthai-ml-training"
"luxonis/depthai-core" -> "luxonis/depthai"
"luxonis/depthai-core" -> "Serafadam/depthai_ros_driver"
"luxonis/depthai-core" -> "luxonis/depthai-experiments"
"luxonis/depthai-core" -> "ibaiGorordo/depthai-android-unity-example"
"luxonis/depthai-core" -> "luxonis/depthai-hardware"
"luxonis/depthai-core" -> "luxonis/depthai-shared"
"luxonis/depthai-ros" -> "luxonis/depthai-core"
"luxonis/depthai-ros" -> "Serafadam/depthai_ros_driver"
"luxonis/depthai-ros" -> "luxonis/depthai-ros-examples"
"luxonis/depthai-ros" -> "luxonis/depthai-python"
"luxonis/depthai-ros" -> "SpectacularAI/sdk-examples"
"luxonis/depthai-ros" -> "luxonis/depthai-experiments"
"luxonis/depthai-ros" -> "eduidl/rtui" ["e"=1]
"luxonis/depthai-ros" -> "luxonis/depthai"
"luxonis/depthai-ros" -> "luxonis/depthai-hardware"
"luxonis/depthai-ros" -> "NVIDIA-ISAAC-ROS/isaac_ros_visual_slam" ["e"=1]
"luxonis/depthai-ros" -> "naturerobots/mesh_tools" ["e"=1]
"kekmodel/FixMatch-pytorch" -> "google-research/fixmatch"
"kekmodel/FixMatch-pytorch" -> "YU1ut/MixMatch-pytorch"
"kekmodel/FixMatch-pytorch" -> "LeeDoYup/FixMatch-pytorch" ["e"=1]
"kekmodel/FixMatch-pytorch" -> "TorchSSL/TorchSSL"
"kekmodel/FixMatch-pytorch" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"kekmodel/FixMatch-pytorch" -> "yassouali/awesome-semi-supervised-learning"
"kekmodel/FixMatch-pytorch" -> "google-research/mixmatch"
"kekmodel/FixMatch-pytorch" -> "kekmodel/MPL-pytorch"
"kekmodel/FixMatch-pytorch" -> "microsoft/Semi-supervised-learning"
"kekmodel/FixMatch-pytorch" -> "ildoonet/pytorch-randaugment"
"kekmodel/FixMatch-pytorch" -> "CuriousAI/mean-teacher"
"kekmodel/FixMatch-pytorch" -> "YyzHarry/imbalanced-semi-self"
"kekmodel/FixMatch-pytorch" -> "LiJunnan1992/DivideMix"
"kekmodel/FixMatch-pytorch" -> "gan3sh500/mixmatch-pytorch" ["e"=1]
"kekmodel/FixMatch-pytorch" -> "HobbitLong/SupContrast" ["e"=1]
"Graceliulingzi/MATLAB-GUI-design--image-processing" -> "HuaJiuShi/-MATLAB-GUI-"
"facebookresearch/fvcore" -> "sovrasov/flops-counter.pytorch"
"facebookresearch/fvcore" -> "Lyken17/pytorch-OpCounter"
"facebookresearch/fvcore" -> "facebookresearch/pycls"
"facebookresearch/fvcore" -> "facebookresearch/ClassyVision"
"facebookresearch/fvcore" -> "rbgirshick/yacs"
"facebookresearch/fvcore" -> "facebookresearch/vissl" ["e"=1]
"facebookresearch/fvcore" -> "facebookresearch/deit"
"facebookresearch/fvcore" -> "facebookresearch/SlowFast" ["e"=1]
"facebookresearch/fvcore" -> "NVIDIA/DALI"
"facebookresearch/fvcore" -> "Swall0w/torchstat"
"facebookresearch/fvcore" -> "facebookresearch/pytorchvideo" ["e"=1]
"facebookresearch/fvcore" -> "facebookresearch/ConvNeXt"
"facebookresearch/fvcore" -> "facebookresearch/moco" ["e"=1]
"facebookresearch/fvcore" -> "open-mmlab/mmcv"
"facebookresearch/fvcore" -> "facebookresearch/mobile-vision" ["e"=1]
"FateScript/CenterNet-better" -> "JDAI-CV/centerX"
"FateScript/CenterNet-better" -> "lucasjinreal/CenterNet_Pro_Max"
"FateScript/CenterNet-better" -> "zzzxxxttt/pytorch_simple_CenterNet_45"
"FateScript/CenterNet-better" -> "xingyizhou/CenterNet2"
"FateScript/CenterNet-better" -> "lbin/CenterNet-better-plus"
"FateScript/CenterNet-better" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"FateScript/CenterNet-better" -> "bleakie/CenterMulti" ["e"=1]
"FateScript/CenterNet-better" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"FateScript/CenterNet-better" -> "Megvii-BaseDetection/BorderDet"
"FateScript/CenterNet-better" -> "ZJULearning/ttfnet"
"FateScript/CenterNet-better" -> "PeizeSun/OneNet"
"FateScript/CenterNet-better" -> "ZeroE04/R-CenterNet" ["e"=1]
"FateScript/CenterNet-better" -> "microsoft/RepPoints"
"FateScript/CenterNet-better" -> "sfzhang15/ATSS"
"FateScript/CenterNet-better" -> "tensorboy/centerpose" ["e"=1]
"OpnTec/2022.opentechsummit.de" -> "OpnTec/pycon.world"
"fossasia/2019.codeheat.org" -> "fossasia/fossasia-presentations"
"fossasia/2019.codeheat.org" -> "OpnTec/2022.opentechsummit.de"
"fossasia/2019.codeheat.org" -> "fossasia/delhi.jugaadfest.com"
"fossasia/2019.codeheat.org" -> "fossasia/hyderabad.jugaadfest.com"
"OpnTec/pycon.world" -> "OpnTec/srilanka.pycon.world"
"OpnTec/pycon.world" -> "OpnTec/singapore.pycon.world"
"OpnTec/pycon.world" -> "OpnTec/vietnam.pycon.world"
"OpnTec/pycon.world" -> "OpnTec/opentech.asia"
"OpnTec/pycon.world" -> "OpnTec/china.pycon.world"
"OpnTec/pycon.world" -> "OpnTec/indochina.pycon.world"
"OpnTec/pycon.world" -> "OpnTec/germany.pycon.world"
"OpnTec/pycon.world" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/pycon.world" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/pycon.world" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/pycon.world" -> "OpnTec/2022.opentechsummit.de"
"OpnTec/pycon.world" -> "OpnTec/thai.opentech.asia"
"OpnTec/pycon.world" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/pycon.world" -> "OpnTec/south.opentechsummit.in"
"OpnTec/pycon.world" -> "OpnTec/thaiday.opentech.asia"
"fossasia/fossasia-presentations" -> "fossasia/hyderabad.jugaadfest.com"
"fossasia/fossasia-presentations" -> "fossasia/delhi.jugaadfest.com"
"fossasia/fossasia-presentations" -> "fossasia/orgmanager"
"fossasia/fossasia-presentations" -> "fossasia/2019.codeheat.org"
"OpnTec/srilanka.pycon.world" -> "OpnTec/singapore.pycon.world"
"OpnTec/srilanka.pycon.world" -> "OpnTec/vietnam.pycon.world"
"OpnTec/srilanka.pycon.world" -> "OpnTec/pycon.world"
"OpnTec/srilanka.pycon.world" -> "OpnTec/china.pycon.world"
"OpnTec/srilanka.pycon.world" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/srilanka.pycon.world" -> "OpnTec/opentech.asia"
"OpnTec/srilanka.pycon.world" -> "OpnTec/indochina.pycon.world"
"OpnTec/srilanka.pycon.world" -> "OpnTec/germany.pycon.world"
"OpnTec/srilanka.pycon.world" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/srilanka.pycon.world" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/srilanka.pycon.world" -> "OpnTec/south.opentechsummit.in"
"OpnTec/srilanka.pycon.world" -> "OpnTec/thai.opentech.asia"
"OpnTec/srilanka.pycon.world" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/srilanka.pycon.world" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/srilanka.pycon.world" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/singapore.pycon.world" -> "OpnTec/srilanka.pycon.world"
"OpnTec/singapore.pycon.world" -> "OpnTec/china.pycon.world"
"OpnTec/singapore.pycon.world" -> "OpnTec/vietnam.pycon.world"
"OpnTec/singapore.pycon.world" -> "OpnTec/opentech.asia"
"OpnTec/singapore.pycon.world" -> "OpnTec/indochina.pycon.world"
"OpnTec/singapore.pycon.world" -> "OpnTec/germany.pycon.world"
"OpnTec/singapore.pycon.world" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/singapore.pycon.world" -> "OpnTec/pycon.world"
"OpnTec/singapore.pycon.world" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/singapore.pycon.world" -> "OpnTec/thai.opentech.asia"
"OpnTec/singapore.pycon.world" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/singapore.pycon.world" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/singapore.pycon.world" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/singapore.pycon.world" -> "OpnTec/indochina.opentech.asia"
"OpnTec/singapore.pycon.world" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/vietnam.pycon.world" -> "OpnTec/indochina.pycon.world"
"OpnTec/vietnam.pycon.world" -> "OpnTec/opentech.asia"
"OpnTec/vietnam.pycon.world" -> "OpnTec/china.pycon.world"
"OpnTec/vietnam.pycon.world" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/vietnam.pycon.world" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/vietnam.pycon.world" -> "OpnTec/germany.pycon.world"
"OpnTec/vietnam.pycon.world" -> "OpnTec/singapore.pycon.world"
"OpnTec/vietnam.pycon.world" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/vietnam.pycon.world" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/vietnam.pycon.world" -> "OpnTec/srilanka.pycon.world"
"OpnTec/vietnam.pycon.world" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/vietnam.pycon.world" -> "OpnTec/japan.opentech.asia"
"OpnTec/vietnam.pycon.world" -> "OpnTec/thai.opentech.asia"
"OpnTec/vietnam.pycon.world" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/vietnam.pycon.world" -> "OpnTec/indochina.opentech.asia"
"OpnTec/germany.pycon.world" -> "OpnTec/indochina.pycon.world"
"OpnTec/germany.pycon.world" -> "OpnTec/opentech.asia"
"OpnTec/germany.pycon.world" -> "OpnTec/vietnam.pycon.world"
"OpnTec/germany.pycon.world" -> "OpnTec/china.pycon.world"
"OpnTec/germany.pycon.world" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/germany.pycon.world" -> "OpnTec/singapore.pycon.world"
"OpnTec/germany.pycon.world" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/germany.pycon.world" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/germany.pycon.world" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/germany.pycon.world" -> "OpnTec/srilanka.pycon.world"
"OpnTec/germany.pycon.world" -> "OpnTec/thai.opentech.asia"
"OpnTec/germany.pycon.world" -> "OpnTec/indochina.opentech.asia"
"OpnTec/germany.pycon.world" -> "OpnTec/aisg.opentech.asia"
"OpnTec/germany.pycon.world" -> "OpnTec/japan.opentech.asia"
"OpnTec/germany.pycon.world" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/indochina.pycon.world" -> "OpnTec/germany.pycon.world"
"OpnTec/indochina.pycon.world" -> "OpnTec/vietnam.pycon.world"
"OpnTec/indochina.pycon.world" -> "OpnTec/china.pycon.world"
"OpnTec/indochina.pycon.world" -> "OpnTec/opentech.asia"
"OpnTec/indochina.pycon.world" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/indochina.pycon.world" -> "OpnTec/singapore.pycon.world"
"OpnTec/indochina.pycon.world" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/indochina.pycon.world" -> "OpnTec/thai.opentech.asia"
"OpnTec/indochina.pycon.world" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/indochina.pycon.world" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/indochina.pycon.world" -> "OpnTec/srilanka.pycon.world"
"OpnTec/indochina.pycon.world" -> "OpnTec/indochina.opentech.asia"
"OpnTec/indochina.pycon.world" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/indochina.pycon.world" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/indochina.pycon.world" -> "OpnTec/japan.opentech.asia"
"OpnTec/china.pycon.world" -> "OpnTec/opentech.asia"
"OpnTec/china.pycon.world" -> "OpnTec/indochina.pycon.world"
"OpnTec/china.pycon.world" -> "OpnTec/vietnam.pycon.world"
"OpnTec/china.pycon.world" -> "OpnTec/singapore.pycon.world"
"OpnTec/china.pycon.world" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/china.pycon.world" -> "OpnTec/germany.pycon.world"
"OpnTec/china.pycon.world" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/china.pycon.world" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/china.pycon.world" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/china.pycon.world" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/china.pycon.world" -> "OpnTec/south.opentechsummit.in"
"OpnTec/china.pycon.world" -> "OpnTec/aisg.opentech.asia"
"OpnTec/china.pycon.world" -> "OpnTec/thai.opentech.asia"
"OpnTec/china.pycon.world" -> "OpnTec/srilanka.pycon.world"
"OpnTec/china.pycon.world" -> "OpnTec/indochina.opentech.asia"
"OpnTec/opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/opentech.asia" -> "OpnTec/germany.pycon.world"
"OpnTec/opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/opentech.asia" -> "OpnTec/indochina.pycon.world"
"OpnTec/opentech.asia" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/opentech.asia" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/opentech.asia" -> "OpnTec/singapore.pycon.world"
"OpnTec/opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/opentech.asia" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/opentech.asia" -> "OpnTec/indochina.opentech.asia"
"OpnTec/opentech.asia" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/indochina.pycon.world"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/germany.pycon.world"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/indochina.opentech.asia"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/cloudsg.opentech.asia"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/srilanka.pycon.world"
"OpnTec/srilanka.opentech.asia" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/aisg.opentech.asia"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/indochina.pycon.world"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/germany.pycon.world"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/malaysia.opentech.asia"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/thaiday.opentech.asia" -> "OpnTec/indochina.opentech.asia"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/malaysia.opentech.asia"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/aisg.opentech.asia"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/indochina.pycon.world"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/cloudsg.opentech.asia"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/germany.pycon.world"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/myanmar.opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/aisg.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/cloudsg.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/indochina.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/malaysia.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/cloudsg.opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/malaysia.opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/aisg.opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/indochina.opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/vietnam.opentech.asia" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/aisg.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/malaysia.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/japan.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/cloudsg.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/indochina.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/japan.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/japan.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/japan.opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/indochina.opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/indochina.opentech.asia" -> "OpnTec/aisg.opentech.asia"
"OpnTec/indochina.opentech.asia" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/indochina.opentech.asia" -> "OpnTec/cloudsg.opentech.asia"
"OpnTec/indochina.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/indochina.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/indochina.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/indochina.opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/indochina.opentech.asia" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/indochina.opentech.asia" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/indochina.opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/indochina.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/indochina.opentech.asia" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/indochina.opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/indochina.opentech.asia" -> "OpnTec/indochina.pycon.world"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/indochina.opentech.asia"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/aisg.opentech.asia"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/malaysia.opentech.asia"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/devopssg.opentech.asia" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/south.opentechsummit.in"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/vietnam.pycon.world"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/opentech.asia"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/2019.opentechsummit.cn"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/thai.opentech.asia"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/china.pycon.world"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/indochina.opentech.asia"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/aisg.opentech.asia"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/indochina.pycon.world"
"OpnTec/delhiday.opentechsummit.in" -> "OpnTec/myanmar.opentech.asia"
"fossasia/delhi.jugaadfest.com" -> "fossasia/hyderabad.jugaadfest.com"
"fossasia/delhi.jugaadfest.com" -> "fossasia/fossasia-presentations"
"fossasia/delhi.jugaadfest.com" -> "fossasia/orgmanager"
"fossasia/delhi.jugaadfest.com" -> "fossasia/speech_recognition"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/vietnam.pycon.world"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/china.pycon.world"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/2019.opentechsummit.cn"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/opentech.asia"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/delhiday.opentechsummit.in"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/srilanka.pycon.world"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/indochina.pycon.world"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/srilanka.opentech.asia"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/germany.pycon.world"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/thai.opentech.asia"
"fossasia/delhi.jugaadfest.com" -> "OpnTec/cloudsg.opentech.asia"
"fossasia/speech_recognition" -> "fossasia/delhi.jugaadfest.com"
"fossasia/speech_recognition" -> "fossasia/magic-epaper-case"
"fossasia/speech_recognition" -> "fossasia/hyderabad.jugaadfest.com"
"fossasia/speech_recognition" -> "OpnTec/pycon.cn"
"fossasia/speech_recognition" -> "fossasia/fossasia-presentations"
"fossasia/speech_recognition" -> "fossasia/orgmanager"
"fossasia/speech_recognition" -> "fossasia/libsigrokdecode"
"fossasia/speech_recognition" -> "OpnTec/vietnam.pycon.world"
"fossasia/speech_recognition" -> "OpnTec/2019.opentechsummit.cn"
"fossasia/speech_recognition" -> "fossasia/led-name-badge-ls32"
"fossasia/speech_recognition" -> "OpnTec/delhiday.opentechsummit.in"
"fossasia/speech_recognition" -> "OpnTec/opentech.asia"
"fossasia/speech_recognition" -> "fossasia/libsigrok"
"fossasia/speech_recognition" -> "OpnTec/indochina.pycon.world"
"fossasia/speech_recognition" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/pycon.cn" -> "OpnTec/opentechsummit.cn"
"OpnTec/pycon.cn" -> "OpnTec/2019.opentechsummit.cn"
"OpnTec/pycon.cn" -> "OpnTec/kiku.ai"
"OpnTec/pycon.cn" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/pycon.cn" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/pycon.cn" -> "OpnTec/vietnam.pycon.world"
"OpnTec/pycon.cn" -> "OpnTec/south.opentechsummit.in"
"OpnTec/pycon.cn" -> "OpnTec/mbm.vn"
"OpnTec/pycon.cn" -> "OpnTec/thai.opentech.asia"
"OpnTec/pycon.cn" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/pycon.cn" -> "OpnTec/opentech.asia"
"OpnTec/pycon.cn" -> "OpnTec/aisg.opentech.asia"
"OpnTec/pycon.cn" -> "OpnTec/china.pycon.world"
"OpnTec/pycon.cn" -> "OpnTec/indochina.pycon.world"
"OpnTec/pycon.cn" -> "OpnTec/myanmar.opentech.asia"
"fossasia/led-name-badge-ls32" -> "fossasia/speech_recognition"
"fossasia/led-name-badge-ls32" -> "fossasia/delhi.jugaadfest.com"
"fossasia/led-name-badge-ls32" -> "fossasia/magic-epaper-case"
"fossasia/led-name-badge-ls32" -> "fossasia/hyderabad.jugaadfest.com"
"fossasia/led-name-badge-ls32" -> "fossasia/fossasia-presentations"
"fossasia/led-name-badge-ls32" -> "OpnTec/pycon.cn"
"fossasia/led-name-badge-ls32" -> "fossasia/orgmanager"
"fossasia/led-name-badge-ls32" -> "fossasia/libsigrokdecode"
"fossasia/led-name-badge-ls32" -> "fossasia/libsigrok"
"fossasia/led-name-badge-ls32" -> "OpnTec/vietnam.pycon.world"
"fossasia/led-name-badge-ls32" -> "OpnTec/delhiday.opentechsummit.in"
"fossasia/led-name-badge-ls32" -> "OpnTec/kiku.ai"
"fossasia/led-name-badge-ls32" -> "OpnTec/2019.opentechsummit.cn"
"fossasia/led-name-badge-ls32" -> "OpnTec/opentechsummit.cn"
"fossasia/led-name-badge-ls32" -> "OpnTec/opentech.asia"
"OpnTec/mbm.vn" -> "OpnTec/opentechsummit.cn"
"OpnTec/mbm.vn" -> "OpnTec/kiku.ai"
"OpnTec/mbm.vn" -> "OpnTec/loklak_tweetsearch_android"
"OpnTec/mbm.vn" -> "OpnTec/libregraphics.asia"
"OpnTec/mbm.vn" -> "OpnTec/pycon.cn"
"OpnTec/mbm.vn" -> "fossasia/libsigrokdecode"
"OpnTec/mbm.vn" -> "fossasia/libsigrok"
"OpnTec/mbm.vn" -> "fossasia/magic-epaper-case"
"OpnTec/mbm.vn" -> "OpnTec/2019.opentechsummit.cn"
"OpnTec/mbm.vn" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/mbm.vn" -> "OpnTec/opentech.asia"
"OpnTec/mbm.vn" -> "OpnTec/delhiday.opentechsummit.in"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Learn-OpenCV-in-3-hours"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Face-Recognition"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "rchavezj/OpenCV_Projects"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Learn-OpenCV-cpp-in-4-Hours"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Document-Scanner"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Real-Time-Object-Measurement"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Learn-Python"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/OpenCV-Sudoku-Solver"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Angle-Finder"
"luxonis/depthai-experiments" -> "luxonis/depthai-python"
"luxonis/depthai-experiments" -> "luxonis/depthai"
"luxonis/depthai-experiments" -> "luxonis/depthai-ml-training"
"luxonis/depthai-experiments" -> "luxonis/depthai-hardware"
"luxonis/depthai-experiments" -> "luxonis/depthai-core"
"luxonis/depthai-experiments" -> "geaxgx/depthai_blazepose"
"luxonis/depthai-experiments" -> "luxonis/depthai-ros"
"luxonis/depthai-experiments" -> "geaxgx/depthai_hand_tracker"
"luxonis/depthai-experiments" -> "cortictechnology/cep"
"luxonis/depthai-experiments" -> "luxonis/depthai-unity"
"luxonis/depthai-experiments" -> "duncanrhamill/oakd_orbslam3"
"luxonis/depthai-experiments" -> "luxonis/depthai-gui"
"luxonis/depthai-experiments" -> "geaxgx/depthai_pipeline_graph"
"luxonis/depthai-experiments" -> "PINTO0309/PINTO_model_zoo"
"luxonis/depthai-experiments" -> "SpectacularAI/sdk-examples"
"google-research/fixmatch" -> "kekmodel/FixMatch-pytorch"
"google-research/fixmatch" -> "google-research/mixmatch"
"google-research/fixmatch" -> "TorchSSL/TorchSSL"
"google-research/fixmatch" -> "YU1ut/MixMatch-pytorch"
"google-research/fixmatch" -> "yassouali/awesome-semi-supervised-learning"
"google-research/fixmatch" -> "LeeDoYup/FixMatch-pytorch" ["e"=1]
"google-research/fixmatch" -> "microsoft/Semi-supervised-learning"
"google-research/fixmatch" -> "google-research/remixmatch"
"google-research/fixmatch" -> "YyzHarry/imbalanced-semi-self"
"google-research/fixmatch" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"google-research/fixmatch" -> "google-research/augmix"
"google-research/fixmatch" -> "CuriousAI/mean-teacher"
"google-research/fixmatch" -> "LiJunnan1992/DivideMix"
"google-research/fixmatch" -> "brain-research/realistic-ssl-evaluation"
"google-research/fixmatch" -> "google-research/uda"
"yjh0410/yolov2-yolov3_PyTorch" -> "yjh0410/new-YOLOv1_PyTorch"
"yjh0410/yolov2-yolov3_PyTorch" -> "yjh0410/CenterNet-Lite"
"yjh0410/yolov2-yolov3_PyTorch" -> "yjh0410/PyTorch_YOLO-Family"
"yjh0410/yolov2-yolov3_PyTorch" -> "tztztztztz/yolov2.pytorch"
"yjh0410/yolov2-yolov3_PyTorch" -> "Peterisfar/YOLOV3"
"yjh0410/yolov2-yolov3_PyTorch" -> "yjh0410/RT-ODLab"
"yjh0410/yolov2-yolov3_PyTorch" -> "yjh0410/DetLAB"
"yjh0410/yolov2-yolov3_PyTorch" -> "yjh0410/PyTorch_YOLOv2"
"yjh0410/yolov2-yolov3_PyTorch" -> "motokimura/yolo_v1_pytorch"
"OpnTec/aisg.opentech.asia" -> "OpnTec/cloudsg.opentech.asia"
"OpnTec/aisg.opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/aisg.opentech.asia" -> "OpnTec/indochina.opentech.asia"
"OpnTec/aisg.opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/aisg.opentech.asia" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/aisg.opentech.asia" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/aisg.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/aisg.opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/aisg.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/aisg.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/aisg.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/aisg.opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/aisg.opentech.asia" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/aisg.opentech.asia" -> "OpnTec/malaysia.opentech.asia"
"OpnTec/aisg.opentech.asia" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/aisg.opentech.asia"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/indochina.opentech.asia"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/thai.opentech.asia"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/malaysia.opentech.asia"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/cloudsg.opentech.asia" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/thai.opentech.asia" -> "OpnTec/indochina.opentech.asia"
"OpnTec/thai.opentech.asia" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/thai.opentech.asia" -> "OpnTec/opentech.asia"
"OpnTec/thai.opentech.asia" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/thai.opentech.asia" -> "OpnTec/aisg.opentech.asia"
"OpnTec/thai.opentech.asia" -> "OpnTec/vietnam.pycon.world"
"OpnTec/thai.opentech.asia" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/thai.opentech.asia" -> "OpnTec/south.opentechsummit.in"
"OpnTec/thai.opentech.asia" -> "OpnTec/china.pycon.world"
"OpnTec/thai.opentech.asia" -> "OpnTec/indochina.pycon.world"
"OpnTec/thai.opentech.asia" -> "OpnTec/cloudsg.opentech.asia"
"OpnTec/thai.opentech.asia" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/thai.opentech.asia" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/thai.opentech.asia" -> "OpnTec/japan.opentech.asia"
"OpnTec/thai.opentech.asia" -> "OpnTec/2019.opentechsummit.cn"
"OpnTec/south.opentechsummit.in" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/south.opentechsummit.in" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/south.opentechsummit.in" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/south.opentechsummit.in" -> "OpnTec/opentech.asia"
"OpnTec/south.opentechsummit.in" -> "OpnTec/china.pycon.world"
"OpnTec/south.opentechsummit.in" -> "OpnTec/thai.opentech.asia"
"OpnTec/south.opentechsummit.in" -> "OpnTec/vietnam.pycon.world"
"OpnTec/south.opentechsummit.in" -> "OpnTec/aisg.opentech.asia"
"OpnTec/south.opentechsummit.in" -> "OpnTec/indochina.opentech.asia"
"OpnTec/south.opentechsummit.in" -> "OpnTec/2019.opentechsummit.cn"
"OpnTec/south.opentechsummit.in" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/south.opentechsummit.in" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/south.opentechsummit.in" -> "OpnTec/myanmar.opentech.asia"
"OpnTec/south.opentechsummit.in" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/south.opentechsummit.in" -> "OpnTec/cloudsg.opentech.asia"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/south.opentechsummit.in"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/thai.opentech.asia"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/2019.opentechsummit.cn"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/vietnam.pycon.world"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/opentech.asia"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/indochina.opentech.asia"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/aisg.opentech.asia"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/china.pycon.world"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/srilanka.pycon.world"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/singapore.pycon.world"
"OpnTec/austria.opentechsummit.eu" -> "OpnTec/thaiday.opentech.asia"
"fossasia/orgmanager" -> "fossasia/hyderabad.jugaadfest.com"
"fossasia/orgmanager" -> "fossasia/delhi.jugaadfest.com"
"fossasia/orgmanager" -> "fossasia/fossasia-presentations"
"fossasia/orgmanager" -> "OpnTec/vietnam.pycon.world"
"fossasia/orgmanager" -> "OpnTec/2019.opentechsummit.cn"
"fossasia/orgmanager" -> "OpnTec/opentech.asia"
"fossasia/orgmanager" -> "OpnTec/delhiday.opentechsummit.in"
"fossasia/orgmanager" -> "OpnTec/south.opentechsummit.in"
"fossasia/orgmanager" -> "fossasia/speech_recognition"
"fossasia/orgmanager" -> "OpnTec/srilanka.opentech.asia"
"fossasia/orgmanager" -> "OpnTec/china.pycon.world"
"fossasia/orgmanager" -> "OpnTec/myanmar.opentech.asia"
"fossasia/orgmanager" -> "OpnTec/vietnam.opentech.asia"
"fossasia/orgmanager" -> "OpnTec/thaiday.opentech.asia"
"fossasia/orgmanager" -> "OpnTec/thai.opentech.asia"
"fossasia/hyderabad.jugaadfest.com" -> "fossasia/delhi.jugaadfest.com"
"fossasia/hyderabad.jugaadfest.com" -> "fossasia/fossasia-presentations"
"fossasia/hyderabad.jugaadfest.com" -> "fossasia/orgmanager"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/vietnam.pycon.world"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/2019.opentechsummit.cn"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/china.pycon.world"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/thai.opentech.asia"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/delhiday.opentechsummit.in"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/south.opentechsummit.in"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/srilanka.opentech.asia"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/indochina.pycon.world"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/opentech.asia"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/srilanka.pycon.world"
"fossasia/hyderabad.jugaadfest.com" -> "OpnTec/singapore.pycon.world"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/south.opentechsummit.in"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/thai.opentech.asia"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/vietnam.pycon.world"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/opentech.asia"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/srilanka.opentech.asia"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/thaiday.opentech.asia"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/devopssg.opentech.asia"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/aisg.opentech.asia"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/china.pycon.world"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/indochina.opentech.asia"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/cloudsg.opentech.asia"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/vietnam.opentech.asia"
"OpnTec/2019.opentechsummit.cn" -> "OpnTec/japan.opentech.asia"
"OpnTec/kiku.ai" -> "OpnTec/opentechsummit.cn"
"OpnTec/kiku.ai" -> "OpnTec/mbm.vn"
"OpnTec/kiku.ai" -> "OpnTec/pycon.cn"
"OpnTec/kiku.ai" -> "OpnTec/loklak_tweetsearch_android"
"OpnTec/kiku.ai" -> "OpnTec/libregraphics.asia"
"OpnTec/kiku.ai" -> "fossasia/magic-epaper-case"
"OpnTec/kiku.ai" -> "OpnTec/2019.opentechsummit.cn"
"OpnTec/kiku.ai" -> "fossasia/libsigrokdecode"
"OpnTec/kiku.ai" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/kiku.ai" -> "fossasia/libsigrok"
"OpnTec/kiku.ai" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/kiku.ai" -> "OpnTec/south.opentechsummit.in"
"OpnTec/kiku.ai" -> "OpnTec/thai.opentech.asia"
"OpnTec/kiku.ai" -> "OpnTec/vietnam.pycon.world"
"OpnTec/kiku.ai" -> "OpnTec/opentech.asia"
"fossasia/magic-epaper-case" -> "fossasia/libsigrokdecode"
"fossasia/magic-epaper-case" -> "fossasia/libsigrok"
"fossasia/magic-epaper-case" -> "OpnTec/opentechsummit.cn"
"fossasia/magic-epaper-case" -> "OpnTec/kiku.ai"
"fossasia/magic-epaper-case" -> "fossasia/speech_recognition"
"fossasia/magic-epaper-case" -> "OpnTec/mbm.vn"
"fossasia/magic-epaper-case" -> "OpnTec/loklak_tweetsearch_android"
"fossasia/magic-epaper-case" -> "OpnTec/pycon.cn"
"fossasia/magic-epaper-case" -> "fossasia/delhi.jugaadfest.com"
"fossasia/magic-epaper-case" -> "fossasia/hyderabad.jugaadfest.com"
"fossasia/magic-epaper-case" -> "OpnTec/libregraphics.asia"
"OpnTec/opentechsummit.cn" -> "OpnTec/mbm.vn"
"OpnTec/opentechsummit.cn" -> "OpnTec/kiku.ai"
"OpnTec/opentechsummit.cn" -> "OpnTec/pycon.cn"
"OpnTec/opentechsummit.cn" -> "OpnTec/loklak_tweetsearch_android"
"OpnTec/opentechsummit.cn" -> "OpnTec/libregraphics.asia"
"OpnTec/opentechsummit.cn" -> "fossasia/magic-epaper-case"
"OpnTec/opentechsummit.cn" -> "OpnTec/2019.opentechsummit.cn"
"OpnTec/opentechsummit.cn" -> "fossasia/libsigrokdecode"
"OpnTec/opentechsummit.cn" -> "fossasia/libsigrok"
"OpnTec/opentechsummit.cn" -> "OpnTec/delhiday.opentechsummit.in"
"OpnTec/opentechsummit.cn" -> "OpnTec/south.opentechsummit.in"
"OpnTec/opentechsummit.cn" -> "OpnTec/austria.opentechsummit.eu"
"OpnTec/opentechsummit.cn" -> "OpnTec/vietnam.pycon.world"
"OpnTec/opentechsummit.cn" -> "OpnTec/opentech.asia"
"OpnTec/opentechsummit.cn" -> "OpnTec/thaiday.opentech.asia"
"xuannianz/EfficientDet" -> "toandaominh1997/EfficientDet.Pytorch"
"xuannianz/EfficientDet" -> "qubvel/efficientnet"
"xuannianz/EfficientDet" -> "google/automl"
"xuannianz/EfficientDet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"xuannianz/EfficientDet" -> "signatrix/efficientdet"
"xuannianz/EfficientDet" -> "rwightman/efficientdet-pytorch"
"xuannianz/EfficientDet" -> "hunglc007/tensorflow-yolov4-tflite" ["e"=1]
"xuannianz/EfficientDet" -> "xingyizhou/CenterNet"
"xuannianz/EfficientDet" -> "GOATmessi8/ASFF"
"xuannianz/EfficientDet" -> "Duankaiwen/CenterNet"
"xuannianz/EfficientDet" -> "see--/keras-centernet"
"xuannianz/EfficientDet" -> "tensorflow/tpu"
"xuannianz/EfficientDet" -> "xuannianz/SAPD"
"xuannianz/EfficientDet" -> "lukemelas/EfficientNet-PyTorch"
"xuannianz/EfficientDet" -> "Stick-To/Object-Detection-Tensorflow"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/retinanet-pytorch"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/efficientdet-tf2"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/RFB-keras"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/efficientdet-pytorch" -> "bubbliiiing/detr-pytorch"
"Tianxiaomo/pytorch-YOLOv4" -> "WongKinYiu/PyTorch_YOLOv4"
"Tianxiaomo/pytorch-YOLOv4" -> "ultralytics/yolov3"
"Tianxiaomo/pytorch-YOLOv4" -> "WongKinYiu/ScaledYOLOv4"
"Tianxiaomo/pytorch-YOLOv4" -> "AlexeyAB/darknet"
"Tianxiaomo/pytorch-YOLOv4" -> "bubbliiiing/yolov4-pytorch"
"Tianxiaomo/pytorch-YOLOv4" -> "eriklindernoren/PyTorch-YOLOv3"
"Tianxiaomo/pytorch-YOLOv4" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"Tianxiaomo/pytorch-YOLOv4" -> "Megvii-BaseDetection/YOLOX"
"Tianxiaomo/pytorch-YOLOv4" -> "wang-xinyu/tensorrtx"
"Tianxiaomo/pytorch-YOLOv4" -> "xingyizhou/CenterNet"
"Tianxiaomo/pytorch-YOLOv4" -> "hunglc007/tensorflow-yolov4-tflite" ["e"=1]
"Tianxiaomo/pytorch-YOLOv4" -> "RangiLyu/nanodet"
"Tianxiaomo/pytorch-YOLOv4" -> "argusswift/YOLOv4-pytorch" ["e"=1]
"Tianxiaomo/pytorch-YOLOv4" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"Tianxiaomo/pytorch-YOLOv4" -> "lukemelas/EfficientNet-PyTorch"
"kkhoot/PAA" -> "xl8-ai/WordSiMT"
"kkhoot/PAA" -> "Scalsol/RepPointsV2"
"kkhoot/PAA" -> "implus/GFocalV2"
"kkhoot/PAA" -> "Megvii-BaseDetection/BorderDet"
"kkhoot/PAA" -> "Megvii-BaseDetection/OTA"
"kkhoot/PAA" -> "Megvii-BaseDetection/DeFCN"
"kkhoot/PAA" -> "fcjian/TOOD"
"kkhoot/PAA" -> "jshilong/SEPC"
"kkhoot/PAA" -> "Megvii-BaseDetection/AutoAssign"
"kkhoot/PAA" -> "sfzhang15/ATSS"
"kkhoot/PAA" -> "hyz-xmaster/VarifocalNet"
"kkhoot/PAA" -> "implus/GFocal"
"kkhoot/PAA" -> "kemaloksuz/aLRPLoss"
"echen/restricted-boltzmann-machines" -> "yell/boltzmann-machines"
"echen/restricted-boltzmann-machines" -> "meownoid/tensorflow-rbm"
"echen/restricted-boltzmann-machines" -> "GabrielBianconi/pytorch-rbm"
"echen/restricted-boltzmann-machines" -> "albertbup/deep-belief-network"
"echen/restricted-boltzmann-machines" -> "gabrieleangeletti/Deep-Learning-TensorFlow"
"echen/restricted-boltzmann-machines" -> "wuaalb/keras_extensions"
"echen/restricted-boltzmann-machines" -> "echen/dirichlet-process" ["e"=1]
"echen/restricted-boltzmann-machines" -> "srendle/libfm" ["e"=1]
"echen/restricted-boltzmann-machines" -> "Cospel/rbm-ae-tf"
"echen/restricted-boltzmann-machines" -> "felipecruz/CFRBM"
"echen/restricted-boltzmann-machines" -> "mehulrastogi/Deep-Belief-Network-pytorch"
"echen/restricted-boltzmann-machines" -> "joanbruna/stat212b" ["e"=1]
"echen/restricted-boltzmann-machines" -> "benanne/morb"
"echen/restricted-boltzmann-machines" -> "coreylynch/pyFM" ["e"=1]
"echen/restricted-boltzmann-machines" -> "MrChrisJohnson/implicit-mf" ["e"=1]
"tczhangzhi/pytorch-distributed" -> "rentainhe/pytorch-distributed-training"
"tczhangzhi/pytorch-distributed" -> "tanglang96/DataLoaders_DALI"
"tczhangzhi/pytorch-distributed" -> "lartpang/PyTorchTricks"
"tczhangzhi/pytorch-distributed" -> "666DZY666/micronet" ["e"=1]
"tczhangzhi/pytorch-distributed" -> "dk-liang/Awesome-Visual-Transformer"
"tczhangzhi/pytorch-distributed" -> "jia-zhuang/pytorch-multi-gpu-training"
"tczhangzhi/pytorch-distributed" -> "CoinCheung/pytorch-loss"
"tczhangzhi/pytorch-distributed" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"tczhangzhi/pytorch-distributed" -> "pengzhiliang/MAE-pytorch"
"tczhangzhi/pytorch-distributed" -> "Lyken17/pytorch-OpCounter"
"tczhangzhi/pytorch-distributed" -> "facebookresearch/moco" ["e"=1]
"tczhangzhi/pytorch-distributed" -> "DingXiaoH/RepVGG"
"tczhangzhi/pytorch-distributed" -> "facebookresearch/pycls"
"tczhangzhi/pytorch-distributed" -> "NVIDIA/apex"
"tczhangzhi/pytorch-distributed" -> "sovrasov/flops-counter.pytorch"
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/Serving"
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/Paddle.js" -> "max-team/Mars" ["e"=1]
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/Paddle.js" -> "searchfe/ts2php" ["e"=1]
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/docs"
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/PaddleFleetX"
"PaddlePaddle/Paddle.js" -> "react-melon/melon" ["e"=1]
"PaddlePaddle/Paddle.js" -> "xr2117/bean-mapping" ["e"=1]
"PaddlePaddle/Paddle.js" -> "lihang212010/Elasticsearch-ais" ["e"=1]
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/PaddleScience" ["e"=1]
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/Parakeet" ["e"=1]
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/Paddle-Lite-Demo"
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/Paddle.js" -> "mazouri/kvcache" ["e"=1]
"fengzhenHIT/OpenCV_Projects" -> "wenhaoli-xmu/opencv_projects"
"fengzhenHIT/OpenCV_Projects" -> "tinyzqh/Opencv-Computer-Vision-Practice-Python-"
"fengzhenHIT/OpenCV_Projects" -> "fengzhenHIT/MachineVisionAlgorithm"
"fengzhenHIT/OpenCV_Projects" -> "fengzhenHIT/learnOpenCV4"
"sithu31296/PyTorch-ONNX-TFLite" -> "omerferhatt/torch2tflite"
"sithu31296/PyTorch-ONNX-TFLite" -> "PINTO0309/onnx2tf"
"sithu31296/PyTorch-ONNX-TFLite" -> "MPolaris/onnx2tflite" ["e"=1]
"sithu31296/PyTorch-ONNX-TFLite" -> "onnx/onnx-tensorflow"
"sithu31296/PyTorch-ONNX-TFLite" -> "google-ai-edge/ai-edge-torch"
"sithu31296/PyTorch-ONNX-TFLite" -> "eliberis/tflite-tools" ["e"=1]
"sithu31296/PyTorch-ONNX-TFLite" -> "PINTO0309/openvino2tensorflow"
"Fafa-DL/Image-Augmentation" -> "Fafa-DL/LabelConvert"
"Fafa-DL/Image-Augmentation" -> "Fafa-DL/Awesome-Backbones"
"Fafa-DL/Image-Augmentation" -> "WangQvQ/YOLOMagic" ["e"=1]
"Fafa-DL/Image-Augmentation" -> "Javacr/PyQt5-YOLOv5" ["e"=1]
"Fafa-DL/Image-Augmentation" -> "iscyy/ultralyticsPro" ["e"=1]
"Fafa-DL/Image-Augmentation" -> "bubbliiiing/yolov5-pytorch"
"Fafa-DL/Image-Augmentation" -> "bubbliiiing/object-detection-augmentation"
"Fafa-DL/Image-Augmentation" -> "Fafa-DL/Opencv-project"
"Fafa-DL/Image-Augmentation" -> "TommyZihao/Train_Custom_Dataset"
"Fafa-DL/Image-Augmentation" -> "z1069614715/objectdetection_script"
"Fafa-DL/Image-Augmentation" -> "iscyy/yoloair2" ["e"=1]
"Fafa-DL/Image-Augmentation" -> "midasklr/yolov5prune" ["e"=1]
"Fafa-DL/Image-Augmentation" -> "open-mmlab/mmyolo"
"Fafa-DL/Image-Augmentation" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"Fafa-DL/Image-Augmentation" -> "bubbliiiing/yolov7-pytorch"
"facebookresearch/ClassyVision" -> "facebookresearch/pycls"
"facebookresearch/ClassyVision" -> "facebookresearch/vissl" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/mobile-vision" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/SlowFast" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/VMZ" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/fvcore"
"facebookresearch/ClassyVision" -> "open-mmlab/mmaction" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/FixRes"
"facebookresearch/ClassyVision" -> "facebookresearch/video-long-term-feature-banks" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/pytorchvideo" ["e"=1]
"facebookresearch/ClassyVision" -> "gsig/PyVideoResearch" ["e"=1]
"facebookresearch/ClassyVision" -> "mit-han-lab/temporal-shift-module" ["e"=1]
"facebookresearch/ClassyVision" -> "decisionforce/TPN" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/video-nonlocal-net" ["e"=1]
"facebookresearch/ClassyVision" -> "rwightman/gen-efficientnet-pytorch"
"iansan5653/open-mcr" -> "Udayraj123/OMRChecker"
"iansan5653/open-mcr" -> "MohawkMEDIC/omrmarkengine"
"iansan5653/open-mcr" -> "rbaron/omr"
"iansan5653/open-mcr" -> "jansenfelipe/omr"
"fendouai/OpenCVTutorials" -> "JimmyHHua/opencv_tutorials"
"fendouai/OpenCVTutorials" -> "gzr2017/ImageProcessing100Wen"
"fendouai/OpenCVTutorials" -> "CodecWang/opencv-python-tutorial"
"fendouai/OpenCVTutorials" -> "makelove/OpenCV-Python-Tutorial"
"fendouai/OpenCVTutorials" -> "oreillymedia/Learning-OpenCV-3_examples"
"fendouai/OpenCVTutorials" -> "QianMo/OpenCV3-Intro-Book-Src"
"fendouai/OpenCVTutorials" -> "apachecn/opencv-doc-zh"
"fendouai/OpenCVTutorials" -> "PacktPublishing/Mastering-OpenCV-4-Third-Edition"
"fendouai/OpenCVTutorials" -> "fendouai/PyTorchDocs" ["e"=1]
"fendouai/OpenCVTutorials" -> "spmallick/learnopencv"
"fendouai/OpenCVTutorials" -> "PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition"
"fendouai/OpenCVTutorials" -> "dongdonghy/Detection-PyTorch-Notebook"
"fendouai/OpenCVTutorials" -> "eastmountyxz/ImageProcessing-Python"
"fendouai/OpenCVTutorials" -> "gloomyfish1998/opencv_tutorial"
"fendouai/OpenCVTutorials" -> "HuangCongQing/pcl-learning" ["e"=1]
"eastmountyxz/Python-zero2one" -> "eastmountyxz/HWCloudImageRecognition"
"ZFTurbo/Weighted-Boxes-Fusion" -> "rwightman/efficientdet-pytorch"
"ZFTurbo/Weighted-Boxes-Fusion" -> "qubvel/ttach"
"ZFTurbo/Weighted-Boxes-Fusion" -> "joe-siyuan-qiao/DetectoRS"
"ZFTurbo/Weighted-Boxes-Fusion" -> "BloodAxe/pytorch-toolbelt"
"ZFTurbo/Weighted-Boxes-Fusion" -> "zhengye1995/underwater-object-detection" ["e"=1]
"ZFTurbo/Weighted-Boxes-Fusion" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"ZFTurbo/Weighted-Boxes-Fusion" -> "WongKinYiu/ScaledYOLOv4"
"ZFTurbo/Weighted-Boxes-Fusion" -> "obss/sahi"
"ZFTurbo/Weighted-Boxes-Fusion" -> "hhaAndroid/mmdetection-mini"
"ZFTurbo/Weighted-Boxes-Fusion" -> "WongKinYiu/yolor"
"ZFTurbo/Weighted-Boxes-Fusion" -> "shinya7y/UniverseNet"
"ZFTurbo/Weighted-Boxes-Fusion" -> "xingyizhou/CenterNet2"
"ZFTurbo/Weighted-Boxes-Fusion" -> "PeizeSun/SparseR-CNN"
"ZFTurbo/Weighted-Boxes-Fusion" -> "sfzhang15/ATSS"
"ZFTurbo/Weighted-Boxes-Fusion" -> "albumentations-team/albumentations"
"yjh0410/CenterNet-Lite" -> "yjh0410/CenterNet-plus"
"yjh0410/CenterNet-Lite" -> "yjh0410/FCOS-RT_PyTorch"
"bubbliiiing/unet-keras" -> "bubbliiiing/deeplabv3-plus-keras"
"bubbliiiing/unet-keras" -> "bubbliiiing/pspnet-tf2"
"bubbliiiing/unet-keras" -> "bubbliiiing/unet-tf2"
"bubbliiiing/unet-keras" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/unet-keras" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/unet-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/unet-keras" -> "bubbliiiing/retinaface-tf2"
"bubbliiiing/unet-keras" -> "bubbliiiing/srgan-keras"
"bubbliiiing/unet-keras" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/unet-keras" -> "bubbliiiing/pspnet-keras"
"cocodataset/cocoapi" -> "facebookresearch/maskrcnn-benchmark"
"cocodataset/cocoapi" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"cocodataset/cocoapi" -> "jwyang/faster-rcnn.pytorch"
"cocodataset/cocoapi" -> "xingyizhou/CenterNet"
"cocodataset/cocoapi" -> "msracver/Deformable-ConvNets"
"cocodataset/cocoapi" -> "amdegroot/ssd.pytorch"
"cocodataset/cocoapi" -> "open-mmlab/mmdetection"
"cocodataset/cocoapi" -> "weiliu89/caffe" ["e"=1]
"cocodataset/cocoapi" -> "eriklindernoren/PyTorch-YOLOv3"
"cocodataset/cocoapi" -> "facebookresearch/detectron2"
"cocodataset/cocoapi" -> "facebookresearch/Detectron"
"cocodataset/cocoapi" -> "rafaelpadilla/Object-Detection-Metrics"
"cocodataset/cocoapi" -> "open-mmlab/mmcv"
"cocodataset/cocoapi" -> "pytorch/vision"
"cocodataset/cocoapi" -> "tianzhi0549/FCOS"
"gbif/pygbif" -> "BelgianBiodiversityPlatform/python-dwca-reader"
"gbif/pygbif" -> "gbif/gbif-api"
"gbif/pygbif" -> "plantnet/gbif-dl"
"gbif/pygbif" -> "gbif/rs.gbif.org"
"Tencent/TNN" -> "alibaba/MNN"
"Tencent/TNN" -> "Tencent/ncnn"
"Tencent/TNN" -> "OAID/Tengine" ["e"=1]
"Tencent/TNN" -> "daquexian/onnx-simplifier"
"Tencent/TNN" -> "XiaoMi/mace" ["e"=1]
"Tencent/TNN" -> "RangiLyu/nanodet"
"Tencent/TNN" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"Tencent/TNN" -> "xlite-dev/lite.ai.toolkit"
"Tencent/TNN" -> "huawei-noah/bolt" ["e"=1]
"Tencent/TNN" -> "nihui/opencv-mobile"
"Tencent/TNN" -> "apache/tvm"
"Tencent/TNN" -> "666DZY666/micronet" ["e"=1]
"Tencent/TNN" -> "NVIDIA/TensorRT"
"Tencent/TNN" -> "OpenPPL/ppl.nn" ["e"=1]
"Tencent/TNN" -> "Tencent/PocketFlow" ["e"=1]
"uploadcare/pillow-simd" -> "NVIDIA/DALI"
"uploadcare/pillow-simd" -> "discord/lilliput" ["e"=1]
"uploadcare/pillow-simd" -> "libffcv/ffcv"
"uploadcare/pillow-simd" -> "pytorch/torchdynamo" ["e"=1]
"uploadcare/pillow-simd" -> "ermig1979/Simd" ["e"=1]
"uploadcare/pillow-simd" -> "NVIDIA/apex"
"uploadcare/pillow-simd" -> "pytorch/TensorRT" ["e"=1]
"uploadcare/pillow-simd" -> "PyAV-Org/PyAV" ["e"=1]
"uploadcare/pillow-simd" -> "pytorch/accimage"
"uploadcare/pillow-simd" -> "dmlc/decord" ["e"=1]
"uploadcare/pillow-simd" -> "python-pillow/Pillow" ["e"=1]
"uploadcare/pillow-simd" -> "pytorch/tnt"
"uploadcare/pillow-simd" -> "facebookresearch/FixRes"
"uploadcare/pillow-simd" -> "mapillary/inplace_abn" ["e"=1]
"uploadcare/pillow-simd" -> "ijl/orjson" ["e"=1]
"google-research/augmix" -> "hendrycks/robustness" ["e"=1]
"google-research/augmix" -> "clovaai/CutMix-PyTorch"
"google-research/augmix" -> "izmailovpavel/understandingbdl" ["e"=1]
"google-research/augmix" -> "kakaobrain/fast-autoaugment"
"google-research/augmix" -> "hendrycks/imagenet-r" ["e"=1]
"google-research/augmix" -> "anguyen8/sam" ["e"=1]
"google-research/augmix" -> "google-research/fixmatch"
"google-research/augmix" -> "MadryLab/cox" ["e"=1]
"google-research/augmix" -> "vikasverma1077/manifold_mixup"
"google-research/augmix" -> "6004x/jade" ["e"=1]
"google-research/augmix" -> "clovaai/AdamP" ["e"=1]
"google-research/augmix" -> "google-research/mixmatch"
"google-research/augmix" -> "oxwhirl/treeqn" ["e"=1]
"google-research/augmix" -> "adobe/antialiased-cnns"
"google-research/augmix" -> "bayesiains/nsf" ["e"=1]
"Tony-Y/pytorch_warmup" -> "ildoonet/pytorch-gradual-warmup-lr"
"jasmcaus/caer" -> "jasmcaus/opencv-course"
"jasmcaus/caer" -> "jasmcaus/hazel"
"jasmcaus/caer" -> "jasmcaus/ai-math-roadmap"
"jasmcaus/caer" -> "jasmcaus/dotfiles"
"jasmcaus/caer" -> "jasmcaus/canaro"
"NVIDIA/runx" -> "lucasjinreal/alfred"
"NVIDIA/runx" -> "fastnlp/fitlog" ["e"=1]
"NVIDIA/runx" -> "openseg-group/openseg.pytorch" ["e"=1]
"NVIDIA/runx" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"NVIDIA/runx" -> "Santosh-Gupta/SpeedTorch"
"joe-siyuan-qiao/DetectoRS" -> "zhanghang1989/ResNeSt"
"joe-siyuan-qiao/DetectoRS" -> "Sense-X/TSD"
"joe-siyuan-qiao/DetectoRS" -> "sfzhang15/ATSS"
"joe-siyuan-qiao/DetectoRS" -> "chongruo/detectron2-ResNeSt"
"joe-siyuan-qiao/DetectoRS" -> "aim-uofa/AdelaiDet"
"joe-siyuan-qiao/DetectoRS" -> "implus/GFocal"
"joe-siyuan-qiao/DetectoRS" -> "WongKinYiu/ScaledYOLOv4"
"joe-siyuan-qiao/DetectoRS" -> "GOATmessi8/ASFF"
"joe-siyuan-qiao/DetectoRS" -> "PeizeSun/SparseR-CNN"
"joe-siyuan-qiao/DetectoRS" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"joe-siyuan-qiao/DetectoRS" -> "Megvii-BaseDetection/BorderDet"
"joe-siyuan-qiao/DetectoRS" -> "toandaominh1997/EfficientDet.Pytorch"
"joe-siyuan-qiao/DetectoRS" -> "ZFTurbo/Weighted-Boxes-Fusion"
"joe-siyuan-qiao/DetectoRS" -> "VDIGPKU/CBNet_caffe"
"joe-siyuan-qiao/DetectoRS" -> "WXinlong/SOLO"
"ZQPei/patchmatch_inpainting" -> "younesse-cv/PatchMatch"
"ZQPei/patchmatch_inpainting" -> "WenFuLee/CS-766-Computer-Vision"
"yjh0410/new-YOLOv1_PyTorch" -> "yjh0410/yolov2-yolov3_PyTorch"
"yjh0410/new-YOLOv1_PyTorch" -> "yjh0410/PyTorch_YOLOv1"
"yjh0410/new-YOLOv1_PyTorch" -> "abeardear/pytorch-YOLO-v1"
"yjh0410/new-YOLOv1_PyTorch" -> "yjh0410/PyTorch_YOLO-Family"
"yjh0410/new-YOLOv1_PyTorch" -> "yjh0410/yolov3-plus_PyTorch"
"yjh0410/new-YOLOv1_PyTorch" -> "Tshzzz/pytorch_yolov1"
"yjh0410/new-YOLOv1_PyTorch" -> "lavendelion/YOLOv1-from-scratch"
"yjh0410/new-YOLOv1_PyTorch" -> "duanyiqun/YOLO-Minimal"
"FishYuLi/BalancedGroupSoftmax" -> "tztztztztz/eql.detectron2"
"FishYuLi/BalancedGroupSoftmax" -> "tztztztztz/eqlv2"
"FishYuLi/BalancedGroupSoftmax" -> "CASIA-IVA-Lab/ACSL"
"FishYuLi/BalancedGroupSoftmax" -> "frank-xwang/RIDE-LongTailRecognition"
"FishYuLi/BalancedGroupSoftmax" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"FishYuLi/BalancedGroupSoftmax" -> "Sense-X/TSD"
"FishYuLi/BalancedGroupSoftmax" -> "facebookresearch/classifier-balancing"
"GiantPandaCV/yolov3-point" -> "pprp/voc2007_for_yolo_torch"
"GiantPandaCV/yolov3-point" -> "pprp/SimpleCVReproduction"
"GiantPandaCV/yolov3-point" -> "gmayday1997/SmallObjectAugmentation" ["e"=1]
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/RFB-keras"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/retinanet-pytorch"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/efficientdet-tf2"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/retinaface-keras"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/efficientnet-yolo3-pytorch" -> "bubbliiiing/mobilenet-yolov4-tf2"
"fengzhenHIT/OpenCV-contrib-module-Chinese-Tutorials" -> "fengzhenHIT/learnOpenCV4"
"WangWenhao0716/Adapted-Center-and-Scale-Prediction" -> "WangWenhao0716/Attentive-WaveBlock" ["e"=1]
"WangWenhao0716/Adapted-Center-and-Scale-Prediction" -> "WangWenhao0716/V2L" ["e"=1]
"WangWenhao0716/Adapted-Center-and-Scale-Prediction" -> "lwpyr/CSP-pedestrian-detection-in-pytorch"
"WangWenhao0716/Adapted-Center-and-Scale-Prediction" -> "kalyo-zjl/APD"
"ikuwow/PatchMatch" -> "rcrandall/PatchMatch"
"HumanSignal/label-studio-ml-backend" -> "HumanSignal/label-studio-converter"
"HumanSignal/label-studio-ml-backend" -> "HumanSignal/label-studio-frontend"
"HumanSignal/label-studio-ml-backend" -> "HumanSignal/label-studio-sdk"
"HumanSignal/label-studio-ml-backend" -> "HumanSignal/label-studio-transformers"
"HumanSignal/label-studio-ml-backend" -> "seblful/label-studio-yolo-backend"
"HumanSignal/label-studio-ml-backend" -> "HumanSignal/label-studio"
"HumanSignal/label-studio-ml-backend" -> "open-mmlab/playground" ["e"=1]
"HumanSignal/label-studio-ml-backend" -> "35grain/label-studio-yolov8-backend"
"kuzand/Computer-Vision-Video-Lectures" -> "slgero/testovoe" ["e"=1]
"damianhorna/multi-imbalance" -> "chongshengzhang/Multi_Imbalance"
"damianhorna/multi-imbalance" -> "maciejczyzewski/batchboost"
"hhaAndroid/mmdetection-mini" -> "ming71/mmdetection-annotated"
"hhaAndroid/mmdetection-mini" -> "dingjiansw101/AerialDetection" ["e"=1]
"hhaAndroid/mmdetection-mini" -> "spytensor/prepare_detection_dataset"
"hhaAndroid/mmdetection-mini" -> "GOATmessi8/ASFF"
"hhaAndroid/mmdetection-mini" -> "ming71/toolbox" ["e"=1]
"hhaAndroid/mmdetection-mini" -> "hyz-xmaster/VarifocalNet"
"hhaAndroid/mmdetection-mini" -> "xingyizhou/CenterNet2"
"hhaAndroid/mmdetection-mini" -> "ZeroE04/R-CenterNet" ["e"=1]
"hhaAndroid/mmdetection-mini" -> "PeizeSun/SparseR-CNN"
"hhaAndroid/mmdetection-mini" -> "kemaloksuz/ObjectDetectionImbalance"
"hhaAndroid/mmdetection-mini" -> "microsoft/SoftTeacher"
"hhaAndroid/mmdetection-mini" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"hhaAndroid/mmdetection-mini" -> "yangxue0827/RotationDetection" ["e"=1]
"hhaAndroid/mmdetection-mini" -> "grimoire/mmdetection-to-tensorrt" ["e"=1]
"hhaAndroid/mmdetection-mini" -> "aim-uofa/AdelaiDet"
"bentrevett/pytorch-pos-tagging" -> "bentrevett/pytorch-nli"
"bentrevett/pytorch-pos-tagging" -> "bentrevett/pytorch-text-classification"
"bentrevett/pytorch-pos-tagging" -> "soutsios/pos-tagger-bert"
"bentrevett/pytorch-pos-tagging" -> "bentrevett/pytorch-language-modeling"
"bentrevett/pytorch-pos-tagging" -> "bentrevett/a-tour-of-pytorch-optimizers"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/hrnet-pytorch"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/deeplabv3-plus-pytorch"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/segformer-pytorch"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/unet-pytorch"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/Semantic-Segmentation"
"bubbliiiing/pspnet-pytorch" -> "Lextal/pspnet-pytorch" ["e"=1]
"bubbliiiing/pspnet-pytorch" -> "ggyyzm/pytorch_segmentation"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/retinanet-pytorch"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/unet-keras"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/segmentation-format-fix"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/classification-pytorch"
"bubbliiiing/pspnet-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"yassouali/awesome-semi-supervised-learning" -> "microsoft/Semi-supervised-learning"
"yassouali/awesome-semi-supervised-learning" -> "TorchSSL/TorchSSL"
"yassouali/awesome-semi-supervised-learning" -> "kekmodel/FixMatch-pytorch"
"yassouali/awesome-semi-supervised-learning" -> "subeeshvasu/Awesome-Learning-with-Label-Noise"
"yassouali/awesome-semi-supervised-learning" -> "jason718/awesome-self-supervised-learning" ["e"=1]
"yassouali/awesome-semi-supervised-learning" -> "google-research/fixmatch"
"yassouali/awesome-semi-supervised-learning" -> "CuriousAI/mean-teacher"
"yassouali/awesome-semi-supervised-learning" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"yassouali/awesome-semi-supervised-learning" -> "zhaoxin94/awesome-domain-adaptation" ["e"=1]
"yassouali/awesome-semi-supervised-learning" -> "HiLab-git/SSL4MIS" ["e"=1]
"yassouali/awesome-semi-supervised-learning" -> "YU1ut/MixMatch-pytorch"
"yassouali/awesome-semi-supervised-learning" -> "charlesCXK/TorchSemiSeg" ["e"=1]
"yassouali/awesome-semi-supervised-learning" -> "iCGY96/awesome_OpenSetRecognition_list" ["e"=1]
"yassouali/awesome-semi-supervised-learning" -> "open-mmlab/mmselfsup" ["e"=1]
"yassouali/awesome-semi-supervised-learning" -> "HobbitLong/PyContrast" ["e"=1]
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Angle-Finder"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Learn-Python"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Digits-Classification"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Face-Recognition"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Document-Scanner"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Object-Following-Robot"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/darknet"
"xjtushujun/meta-weight-net" -> "ShiYunyi/Meta-Weight-Net_Code-Optimization"
"xjtushujun/meta-weight-net" -> "danieltan07/learning-to-reweight-examples"
"xjtushujun/meta-weight-net" -> "uber-research/learning-to-reweight-examples"
"xjtushujun/meta-weight-net" -> "microsoft/MLC"
"xjtushujun/meta-weight-net" -> "xjtushujun/Meta-weight-net_class-imbalance"
"xjtushujun/meta-weight-net" -> "LiJunnan1992/MLNT"
"xjtushujun/meta-weight-net" -> "mmazeika/glc"
"xjtushujun/meta-weight-net" -> "bhanML/Co-teaching"
"xjtushujun/meta-weight-net" -> "LiJunnan1992/DivideMix"
"xjtushujun/meta-weight-net" -> "xjtushujun/CMW-Net"
"xjtushujun/meta-weight-net" -> "AdrienLE/ANIML" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "GOATmessi8/ASFF"
"WongKinYiu/CrossStagePartialNetworks" -> "WongKinYiu/ScaledYOLOv4"
"WongKinYiu/CrossStagePartialNetworks" -> "WongKinYiu/PyTorch_YOLOv4"
"WongKinYiu/CrossStagePartialNetworks" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "ceccocats/tkDNN" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "PengyiZhang/SlimYOLOv3" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "toandaominh1997/EfficientDet.Pytorch"
"WongKinYiu/CrossStagePartialNetworks" -> "Tianxiaomo/pytorch-YOLOv4"
"WongKinYiu/CrossStagePartialNetworks" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "WongKinYiu/PartialResidualNetworks" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "sfzhang15/ATSS"
"WongKinYiu/CrossStagePartialNetworks" -> "signatrix/efficientdet"
"WongKinYiu/CrossStagePartialNetworks" -> "kemaloksuz/ObjectDetectionImbalance"
"WongKinYiu/CrossStagePartialNetworks" -> "megvii-model/YOLOF"
"facebookresearch/classifier-balancing" -> "megvii-research/BBN"
"facebookresearch/classifier-balancing" -> "zhmiao/OpenLongTailRecognition-OLTR"
"facebookresearch/classifier-balancing" -> "kaidic/LDAM-DRW"
"facebookresearch/classifier-balancing" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"facebookresearch/classifier-balancing" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"facebookresearch/classifier-balancing" -> "frank-xwang/RIDE-LongTailRecognition"
"facebookresearch/classifier-balancing" -> "YyzHarry/imbalanced-semi-self"
"facebookresearch/classifier-balancing" -> "Vanint/Awesome-LongTailed-Learning"
"facebookresearch/classifier-balancing" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"facebookresearch/classifier-balancing" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"facebookresearch/classifier-balancing" -> "richardaecn/class-balanced-loss"
"facebookresearch/classifier-balancing" -> "vandit15/Class-balanced-loss-pytorch"
"facebookresearch/classifier-balancing" -> "Stomach-ache/awesome-long-tail-learning"
"facebookresearch/classifier-balancing" -> "dvlab-research/Parametric-Contrastive-Learning"
"facebookresearch/classifier-balancing" -> "wutong16/DistributionBalancedLoss"
"youngwanLEE/centermask2" -> "youngwanLEE/CenterMask"
"youngwanLEE/centermask2" -> "youngwanLEE/vovnet-detectron2"
"youngwanLEE/centermask2" -> "xieenze/PolarMask"
"youngwanLEE/centermask2" -> "aim-uofa/AdelaiDet"
"youngwanLEE/centermask2" -> "WXinlong/SOLO"
"youngwanLEE/centermask2" -> "sfzhang15/ATSS"
"youngwanLEE/centermask2" -> "zju3dv/snake"
"youngwanLEE/centermask2" -> "xingyizhou/CenterNet2"
"youngwanLEE/centermask2" -> "WisconsinAIVision/yolact_edge"
"youngwanLEE/centermask2" -> "joe-siyuan-qiao/DetectoRS"
"youngwanLEE/centermask2" -> "FateScript/CenterNet-better"
"youngwanLEE/centermask2" -> "CaoWGG/CenterNet-CondInst"
"youngwanLEE/centermask2" -> "dbolya/yolact"
"youngwanLEE/centermask2" -> "JialeCao001/SipMask"
"youngwanLEE/centermask2" -> "DeepSceneSeg/EfficientPS" ["e"=1]
"implus/GFocal" -> "implus/GFocalV2"
"implus/GFocal" -> "sfzhang15/ATSS"
"implus/GFocal" -> "Megvii-BaseDetection/BorderDet"
"implus/GFocal" -> "Megvii-BaseDetection/DeFCN"
"implus/GFocal" -> "PeizeSun/OneNet"
"implus/GFocal" -> "hyz-xmaster/VarifocalNet"
"implus/GFocal" -> "joe-siyuan-qiao/DetectoRS"
"implus/GFocal" -> "megvii-model/YOLOF"
"implus/GFocal" -> "Duankaiwen/CPNDet"
"implus/GFocal" -> "Scalsol/RepPointsV2"
"implus/GFocal" -> "xingyizhou/CenterNet2"
"implus/GFocal" -> "PeizeSun/SparseR-CNN"
"implus/GFocal" -> "kkhoot/PAA"
"implus/GFocal" -> "HikariTJU/LD" ["e"=1]
"implus/GFocal" -> "cccorn/AP-loss"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/mtcnn-keras"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/poems-generator"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/ssd_keras"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/facenet-keras"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/RFB-keras"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/Transfer-Learning"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/classic-convolution-network"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/Keras-Attention"
"bubbliiiing/keras-face-recognition" -> "bubbliiiing/Data-Structure-and-Algorithm"
"qubvel/ttach" -> "BloodAxe/pytorch-toolbelt"
"qubvel/ttach" -> "ZFTurbo/Weighted-Boxes-Fusion"
"qubvel/ttach" -> "sneddy/pneumothorax-segmentation"
"qubvel/ttach" -> "trent-b/iterative-stratification"
"qubvel/ttach" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"qubvel/ttach" -> "catalyst-team/catalyst"
"qubvel/ttach" -> "rwightman/efficientdet-pytorch"
"qubvel/ttach" -> "qubvel-org/segmentation_models.pytorch"
"qubvel/ttach" -> "JunMa11/SegLossOdyssey" ["e"=1]
"qubvel/ttach" -> "ecs-vlc/FMix"
"qubvel/ttach" -> "davidtvs/pytorch-lr-finder"
"qubvel/ttach" -> "andrewekhalel/edafa" ["e"=1]
"qubvel/ttach" -> "amirassov/kaggle-imaterialist"
"qubvel/ttach" -> "CoinCheung/pytorch-loss"
"qubvel/ttach" -> "davda54/sam"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/LiteKit"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/CINN"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/benchmark"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/docs"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/hapi"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/Paddle-bot"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/continuous_integration"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/community"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/PLSC"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/Paddle-Lite-Demo"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/PaddleTest"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/Serving"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/ssd-keras"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/poems-generator"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/ssd_keras"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/retinaface-keras"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/mtcnn-keras"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/faster-rcnn-keras"
"bubbliiiing/retinanet-keras" -> "bubbliiiing/efficientdet-tf2"
"qcymkxyc/Image-Process" -> "MAhaitao999/digital_image_processing"
"qcymkxyc/Image-Process" -> "LiuFG/digital_image_process"
"qcymkxyc/Image-Process" -> "Ultrasty/Digital-Image-Processing"
"qcymkxyc/Image-Process" -> "chengchengzi/Digital-Image-Processing"
"qcymkxyc/Image-Process" -> "fei-aiart/courses"
"qcymkxyc/Image-Process" -> "eastmountyxz/Book3-Python-ImageProcessing"
"PaddlePaddle/community" -> "PaddlePaddle/benchmark"
"PaddlePaddle/community" -> "PaddlePaddle/PaddleTest"
"PaddlePaddle/community" -> "PaddlePaddle/continuous_evaluation"
"PaddlePaddle/community" -> "PaddlePaddle/CINN"
"PyImageSearch/imutils" -> "aleju/imgaug"
"PyImageSearch/imutils" -> "davisking/dlib" ["e"=1]
"PyImageSearch/imutils" -> "spmallick/learnopencv"
"PyImageSearch/imutils" -> "albumentations-team/albumentations"
"PyImageSearch/imutils" -> "scikit-image/scikit-image" ["e"=1]
"PyImageSearch/imutils" -> "HumanSignal/labelImg"
"PyImageSearch/imutils" -> "cmusatyalab/openface" ["e"=1]
"PyImageSearch/imutils" -> "jeffbass/imagezmq" ["e"=1]
"PyImageSearch/imutils" -> "thtrieu/darkflow" ["e"=1]
"PyImageSearch/imutils" -> "nwojke/deep_sort" ["e"=1]
"PyImageSearch/imutils" -> "abewley/sort" ["e"=1]
"PyImageSearch/imutils" -> "davidsandberg/facenet" ["e"=1]
"PyImageSearch/imutils" -> "cocodataset/cocoapi"
"PyImageSearch/imutils" -> "mdbloice/Augmentor"
"PyImageSearch/imutils" -> "opencv/opencv-python" ["e"=1]
"MegEngine/MegEngine" -> "Jittor/jittor"
"MegEngine/MegEngine" -> "Tencent/TNN"
"MegEngine/MegEngine" -> "apache/tvm"
"MegEngine/MegEngine" -> "alibaba/MNN"
"MegEngine/MegEngine" -> "mindspore-ai/mindspore"
"MegEngine/MegEngine" -> "Oneflow-Inc/oneflow" ["e"=1]
"MegEngine/MegEngine" -> "Tencent/ncnn"
"MegEngine/MegEngine" -> "MegEngine/Models"
"MegEngine/MegEngine" -> "NVIDIA/TensorRT"
"MegEngine/MegEngine" -> "OAID/Tengine" ["e"=1]
"MegEngine/MegEngine" -> "bytedance/byteps" ["e"=1]
"MegEngine/MegEngine" -> "OpenPPL/ppl.nn" ["e"=1]
"MegEngine/MegEngine" -> "flame/how-to-optimize-gemm" ["e"=1]
"MegEngine/MegEngine" -> "NVIDIA/cutlass" ["e"=1]
"MegEngine/MegEngine" -> "daquexian/onnx-simplifier"
"pprp/SimpleCVReproduction" -> "pprp/awesome-attention-mechanism-in-cv" ["e"=1]
"pprp/SimpleCVReproduction" -> "GiantPandaCV/yolov3-point"
"pprp/SimpleCVReproduction" -> "GOATmessi8/ASFF"
"pprp/SimpleCVReproduction" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"pprp/SimpleCVReproduction" -> "hhaAndroid/mmdetection-mini"
"pprp/SimpleCVReproduction" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"pprp/SimpleCVReproduction" -> "pprp/voc2007_for_yolo_torch"
"pprp/SimpleCVReproduction" -> "xingyizhou/CenterNet2"
"pprp/SimpleCVReproduction" -> "sfzhang15/ATSS"
"pprp/SimpleCVReproduction" -> "ZeroE04/R-CenterNet" ["e"=1]
"pprp/SimpleCVReproduction" -> "zhanghang1989/ResNeSt"
"pprp/SimpleCVReproduction" -> "shanglianlm0525/PyTorch-Networks"
"pprp/SimpleCVReproduction" -> "houqb/CoordAttention" ["e"=1]
"pprp/SimpleCVReproduction" -> "ming71/CV_PaperDaily"
"pprp/SimpleCVReproduction" -> "BangguWu/ECANet" ["e"=1]
"paulgavrikov/visualkeras" -> "ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network"
"paulgavrikov/visualkeras" -> "viscom-ulm/Net2Vis"
"paulgavrikov/visualkeras" -> "willyfh/visualtorch"
"paulgavrikov/visualkeras" -> "martisak/dotnets"
"paulgavrikov/visualkeras" -> "keplr-io/quiver" ["e"=1]
"paulgavrikov/visualkeras" -> "kennethleungty/Neural-Network-Architecture-Diagrams"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/mask-rcnn-keras"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/ssd-keras"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/classic-convolution-network"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/Transfer-Learning"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/GAN-keras"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/faster-rcnn-keras"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/RFB-keras"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/Keras-Attention"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/pspnet-pytorch"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/yolo3-keras"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/poems-generator"
"bubbliiiing/Semantic-Segmentation" -> "bubbliiiing/unet-keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/ssd-keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/yolov4-keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/faster-rcnn-keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/yolov4-tf2"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/mask-rcnn-keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/Semantic-Segmentation"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/yolov4-tiny-keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/keras-face-recognition"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/yolo3-keras" -> "bubbliiiing/GAN-keras"
"hasanirtiza/Pedestron" -> "liuwei16/CSP"
"hasanirtiza/Pedestron" -> "cvgroup-njust/CityPersons"
"hasanirtiza/Pedestron" -> "JialeCao001/PedSurvey"
"hasanirtiza/Pedestron" -> "Leotju/MGAN"
"hasanirtiza/Pedestron" -> "xg-chu/CrowdDet"
"hasanirtiza/Pedestron" -> "xingkongliang/Pedestrian-Detection"
"hasanirtiza/Pedestron" -> "hasanirtiza/PedesFormer-Transformer-Networks-For-Pedestrian-Detection"
"hasanirtiza/Pedestron" -> "WangWenhao0716/Adapted-Center-and-Scale-Prediction"
"hasanirtiza/Pedestron" -> "SamsungLabs/iterdet"
"hasanirtiza/Pedestron" -> "lwpyr/CSP-pedestrian-detection-in-pytorch"
"hasanirtiza/Pedestron" -> "AbdulHannanKhan/F2DNet"
"hasanirtiza/Pedestron" -> "megvii-model/CrowdDetection"
"hasanirtiza/Pedestron" -> "megvii-model/YOLOF"
"hasanirtiza/Pedestron" -> "WongKinYiu/ScaledYOLOv4"
"hasanirtiza/Pedestron" -> "VideoObjectSearch/ALFNet"
"Okery/PyTorch-Simple-MaskRCNN" -> "jytime/Mask_RCNN_Pytorch"
"Okery/PyTorch-Simple-MaskRCNN" -> "buhuixiezuowendelihua/TorchVision_Maskrcnn"
"Okery/PyTorch-Simple-MaskRCNN" -> "multimodallearning/pytorch-mask-rcnn"
"Okery/PyTorch-Simple-MaskRCNN" -> "wannabeOG/Mask-RCNN"
"Okery/PyTorch-Simple-MaskRCNN" -> "darolt/mask_rcnn"
"Okery/PyTorch-Simple-MaskRCNN" -> "feiyuhuahuo/Yolact_minimal"
"Okery/PyTorch-Simple-MaskRCNN" -> "bubbliiiing/mask-rcnn-keras"
"ildoonet/pytorch-randaugment" -> "kakaobrain/fast-autoaugment"
"ildoonet/pytorch-randaugment" -> "DeepVoltaire/AutoAugment"
"ildoonet/pytorch-randaugment" -> "kekmodel/FixMatch-pytorch"
"ildoonet/pytorch-randaugment" -> "YU1ut/MixMatch-pytorch"
"ildoonet/pytorch-randaugment" -> "clovaai/CutMix-PyTorch"
"ildoonet/pytorch-randaugment" -> "google-research/fixmatch"
"ildoonet/pytorch-randaugment" -> "arcelien/pba"
"ildoonet/pytorch-randaugment" -> "facebookresearch/mixup-cifar10"
"ildoonet/pytorch-randaugment" -> "google-research/augmix"
"ildoonet/pytorch-randaugment" -> "4uiiurz1/pytorch-auto-augment"
"ildoonet/pytorch-randaugment" -> "google-research/noisystudent"
"ildoonet/pytorch-randaugment" -> "kaidic/LDAM-DRW"
"ildoonet/pytorch-randaugment" -> "ildoonet/unsupervised-data-augmentation"
"ildoonet/pytorch-randaugment" -> "VDIGPKU/DADA"
"ildoonet/pytorch-randaugment" -> "ildoonet/pytorch-gradual-warmup-lr"
"amzn/pecos" -> "OctoberChang/X-Transformer"
"amzn/pecos" -> "yourh/AttentionXML"
"amzn/pecos" -> "kunaldahiya/pyxclib"
"amzn/pecos" -> "tomtung/omikuji"
"amzn/pecos" -> "Extreme-classification/GalaXC"
"amzn/pecos" -> "kongds/LightXML"
"amzn/pecos" -> "nilesh2797/zestxml"
"amzn/pecos" -> "Extreme-classification/siamesexml"
"amzn/pecos" -> "AndyJZhao/GLEM" ["e"=1]
"amzn/pecos" -> "jianhao2016/GPRGNN" ["e"=1]
"amzn/pecos" -> "mwydmuch/napkinXC"
"amzn/pecos" -> "Extreme-classification/deepxml"
"amzn/pecos" -> "XiaoxinHe/TAPE" ["e"=1]
"szymonmaszke/torchdatasets" -> "szymonmaszke/torchfunc"
"giddyyupp/coco-minitrain" -> "nerminsamet/houghnet"
"giddyyupp/coco-minitrain" -> "blisgard/BucketedRankingBasedLosses"
"grinsted/wavelet-coherence" -> "ct6502/wavelets"
"grinsted/wavelet-coherence" -> "regeirk/pycwt"
"lartpang/PyTorchTricks" -> "tczhangzhi/pytorch-distributed"
"lartpang/PyTorchTricks" -> "demuxin/pytorch_tricks"
"lartpang/PyTorchTricks" -> "Lyken17/Efficient-PyTorch"
"lartpang/PyTorchTricks" -> "666DZY666/micronet" ["e"=1]
"lartpang/PyTorchTricks" -> "donnyyou/torchcv"
"lartpang/PyTorchTricks" -> "CoinCheung/pytorch-loss"
"lartpang/PyTorchTricks" -> "tanglang96/DataLoaders_DALI"
"lartpang/PyTorchTricks" -> "dk-liang/Awesome-Visual-Transformer"
"lartpang/PyTorchTricks" -> "zhanghang1989/ResNeSt"
"lartpang/PyTorchTricks" -> "Lyken17/pytorch-OpCounter"
"lartpang/PyTorchTricks" -> "Lyken17/pytorch-memonger"
"lartpang/PyTorchTricks" -> "joe-siyuan-qiao/DetectoRS"
"lartpang/PyTorchTricks" -> "DeepVAC/deepvac"
"lartpang/PyTorchTricks" -> "hhaAndroid/mmdetection-mini"
"lartpang/PyTorchTricks" -> "wpf535236337/real-time-network" ["e"=1]
"CaoWGG/CenterNet-CondInst" -> "Epiphqny/CondInst"
"CaoWGG/CenterNet-CondInst" -> "CaoWGG/Mobilenetv2-CenterNet"
"yourh/AttentionXML" -> "kongds/LightXML"
"yourh/AttentionXML" -> "OctoberChang/X-Transformer"
"yourh/AttentionXML" -> "siddsax/XML-CNN"
"yourh/AttentionXML" -> "EMNLP2019LSAN/LSAN"
"yourh/AttentionXML" -> "kunaldahiya/pyxclib"
"yourh/AttentionXML" -> "amzn/pecos"
"yourh/AttentionXML" -> "huiyegit/APLC_XLNet"
"yourh/AttentionXML" -> "RandolphVI/Hierarchical-Multi-Label-Text-Classification" ["e"=1]
"yourh/AttentionXML" -> "tomtung/omikuji"
"yourh/AttentionXML" -> "mwydmuch/extremeText"
"yourh/AttentionXML" -> "Roche/BalancedLossNLP"
"yourh/AttentionXML" -> "lancopku/SGM" ["e"=1]
"yourh/AttentionXML" -> "nilesh2797/zestxml"
"yourh/AttentionXML" -> "Extreme-classification/siamesexml"
"huawei-noah/AdderNet" -> "huawei-noah/Efficient-AI-Backbones"
"huawei-noah/AdderNet" -> "guoyongcs/DRN" ["e"=1]
"huawei-noah/AdderNet" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"huawei-noah/AdderNet" -> "huawei-noah/bolt" ["e"=1]
"huawei-noah/AdderNet" -> "mostafaelhoushi/DeepShift"
"huawei-noah/AdderNet" -> "huawei-noah/vega" ["e"=1]
"huawei-noah/AdderNet" -> "pkuxmq/Invertible-Image-Rescaling" ["e"=1]
"huawei-noah/AdderNet" -> "huawei-noah/Efficient-Computing" ["e"=1]
"huawei-noah/AdderNet" -> "iamhankai/ghostnet.pytorch"
"huawei-noah/AdderNet" -> "GATECH-EIC/ShiftAddNet"
"huawei-noah/AdderNet" -> "XPixelGroup/ClassSR" ["e"=1]
"huawei-noah/AdderNet" -> "JiahuiYu/slimmable_networks" ["e"=1]
"huawei-noah/AdderNet" -> "zhanghang1989/ResNeSt"
"huawei-noah/AdderNet" -> "mit-han-lab/proxylessnas" ["e"=1]
"huawei-noah/AdderNet" -> "d-li14/involution"
"sfzhang15/ATSS" -> "tianzhi0549/FCOS"
"sfzhang15/ATSS" -> "implus/GFocal"
"sfzhang15/ATSS" -> "implus/GFocalV2"
"sfzhang15/ATSS" -> "PeizeSun/SparseR-CNN"
"sfzhang15/ATSS" -> "microsoft/RepPoints"
"sfzhang15/ATSS" -> "kemaloksuz/ObjectDetectionImbalance"
"sfzhang15/ATSS" -> "GOATmessi8/ASFF"
"sfzhang15/ATSS" -> "princeton-vl/CornerNet"
"sfzhang15/ATSS" -> "yqyao/FCOS_PLUS"
"sfzhang15/ATSS" -> "zhangxiaosong18/FreeAnchor"
"sfzhang15/ATSS" -> "PeizeSun/OneNet"
"sfzhang15/ATSS" -> "aim-uofa/AdelaiDet"
"sfzhang15/ATSS" -> "xingyizhou/CenterNet2"
"sfzhang15/ATSS" -> "Megvii-BaseDetection/DeFCN"
"sfzhang15/ATSS" -> "Duankaiwen/CenterNet"
"kemaloksuz/ObjectDetectionImbalance" -> "sfzhang15/ATSS"
"kemaloksuz/ObjectDetectionImbalance" -> "tusen-ai/simpledet"
"kemaloksuz/ObjectDetectionImbalance" -> "ethanhe42/KL-Loss"
"kemaloksuz/ObjectDetectionImbalance" -> "tianzhi0549/FCOS"
"kemaloksuz/ObjectDetectionImbalance" -> "GOATmessi8/ASFF"
"kemaloksuz/ObjectDetectionImbalance" -> "zhangxiaosong18/FreeAnchor"
"kemaloksuz/ObjectDetectionImbalance" -> "chenjoya/sampling-free" ["e"=1]
"kemaloksuz/ObjectDetectionImbalance" -> "princeton-vl/CornerNet"
"kemaloksuz/ObjectDetectionImbalance" -> "microsoft/RepPoints"
"kemaloksuz/ObjectDetectionImbalance" -> "Sense-X/TSD"
"kemaloksuz/ObjectDetectionImbalance" -> "ming71/mmdetection-annotated"
"kemaloksuz/ObjectDetectionImbalance" -> "joe-siyuan-qiao/DetectoRS"
"kemaloksuz/ObjectDetectionImbalance" -> "Duankaiwen/CenterNet"
"kemaloksuz/ObjectDetectionImbalance" -> "dbolya/tide"
"kemaloksuz/ObjectDetectionImbalance" -> "implus/GFocalV2"
"dbolya/tide" -> "kemaloksuz/ObjectDetectionImbalance"
"dbolya/tide" -> "PeizeSun/SparseR-CNN"
"dbolya/tide" -> "rafaelpadilla/review_object_detection_metrics"
"dbolya/tide" -> "sfzhang15/ATSS"
"dbolya/tide" -> "joe-siyuan-qiao/DetectoRS"
"dbolya/tide" -> "ethanhe42/KL-Loss"
"dbolya/tide" -> "hhaAndroid/mmdetection-mini"
"dbolya/tide" -> "jshilong/SEPC"
"dbolya/tide" -> "aim-uofa/AdelaiDet"
"dbolya/tide" -> "IDEA-Research/awesome-detection-transformer" ["e"=1]
"dbolya/tide" -> "conradry/copy-paste-aug"
"dbolya/tide" -> "yzd-v/FGD" ["e"=1]
"dbolya/tide" -> "Megvii-BaseDetection/cvpods"
"dbolya/tide" -> "microsoft/SoftTeacher"
"dbolya/tide" -> "xingyizhou/CenterNet2"
"lbin/DCNv2" -> "lucasjinreal/DCNv2_latest"
"lbin/DCNv2" -> "CharlesShang/DCNv2"
"lbin/DCNv2" -> "MatthewHowe/DCNv2"
"lbin/DCNv2" -> "rathaROG/DCNv2_Windows"
"lbin/DCNv2" -> "CaptainEven/MCMOT" ["e"=1]
"lbin/DCNv2" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"lbin/DCNv2" -> "xingyizhou/CenterTrack" ["e"=1]
"lbin/DCNv2" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"lbin/DCNv2" -> "JialianW/TraDeS" ["e"=1]
"lbin/DCNv2" -> "PeizeSun/TransTrack" ["e"=1]
"bubbliiiing/Siamese-tf2" -> "bubbliiiing/ssd_keras"
"bubbliiiing/Siamese-tf2" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/Siamese-tf2" -> "bubbliiiing/Siamese-keras"
"bubbliiiing/Siamese-tf2" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/Siamese-tf2" -> "bubbliiiing/Reinforcement-Learning"
"PaddlePaddle/ElasticCTR" -> "PaddlePaddle/PaddleCraft"
"sneddy/pneumothorax-segmentation" -> "yelanlan/Pneumothorax-Segmentation-2nd-place-solution"
"sneddy/pneumothorax-segmentation" -> "bestfitting/kaggle" ["e"=1]
"sneddy/pneumothorax-segmentation" -> "earhian/SIIM-ACR-Pneumothorax-Segmentation-5th"
"sneddy/pneumothorax-segmentation" -> "amirassov/kaggle-pneumothorax"
"sneddy/pneumothorax-segmentation" -> "amirassov/kaggle-imaterialist"
"sneddy/pneumothorax-segmentation" -> "ybabakhin/kaggle_salt_bes_phalanx"
"sneddy/pneumothorax-segmentation" -> "pudae/kaggle-understanding-clouds"
"sneddy/pneumothorax-segmentation" -> "tugstugi/pytorch-saltnet"
"sneddy/pneumothorax-segmentation" -> "pudae/kaggle-hpa"
"sneddy/pneumothorax-segmentation" -> "qubvel/ttach"
"sneddy/pneumothorax-segmentation" -> "pudae/kaggle-humpback"
"sneddy/pneumothorax-segmentation" -> "lopuhin/kaggle-kuzushiji-2019"
"sneddy/pneumothorax-segmentation" -> "selimsef/dsb2018_topcoders"
"sneddy/pneumothorax-segmentation" -> "appian42/kaggle-rsna-intracranial-hemorrhage"
"sneddy/pneumothorax-segmentation" -> "SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection"
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "moemen95/Pytorch-Project-Template"
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "FrancescoSaverioZuppichini/mirror" ["e"=1]
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "Lightning-AI/deep-learning-project-template"
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "zzsza/Boostcamp-AI-Tech-Product-Serving" ["e"=1]
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "FrancescoSaverioZuppichini/glasses"
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "victoresque/pytorch-template"
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "FrancescoSaverioZuppichini/A-journey-into-Convolutional-Neural-Network-visualization-" ["e"=1]
"samiraabnar/attention_flow" -> "jacobgil/vit-explain"
"samiraabnar/attention_flow" -> "hila-chefer/Transformer-Explainability"
"samiraabnar/attention_flow" -> "hila-chefer/Transformer-MM-Explainability"
"samiraabnar/attention_flow" -> "gorokoba560/norm-analysis-of-transformer"
"LiQiufu/WaveCNet" -> "LiQiufu/WaveSNet"
"LiQiufu/WaveCNet" -> "CVI-SZU/WaveCNet"
"xieenze/PolarMask" -> "youngwanLEE/CenterMask"
"xieenze/PolarMask" -> "zju3dv/snake"
"xieenze/PolarMask" -> "WXinlong/SOLO"
"xieenze/PolarMask" -> "aim-uofa/AdelaiDet"
"xieenze/PolarMask" -> "tianzhi0549/FCOS"
"xieenze/PolarMask" -> "zjhuang22/maskscoring_rcnn"
"xieenze/PolarMask" -> "Epiphqny/SOLO"
"xieenze/PolarMask" -> "youngwanLEE/centermask2"
"xieenze/PolarMask" -> "sfzhang15/ATSS"
"xieenze/PolarMask" -> "microsoft/RepPoints"
"xieenze/PolarMask" -> "uber-research/UPSNet" ["e"=1]
"xieenze/PolarMask" -> "zhangxiaosong18/FreeAnchor"
"xieenze/PolarMask" -> "ShuLiu1993/PANet"
"xieenze/PolarMask" -> "dbolya/yolact"
"xieenze/PolarMask" -> "Duankaiwen/CenterNet"
"AgaMiko/data-augmentation-review" -> "CrazyVertigo/awesome-data-augmentation"
"AgaMiko/data-augmentation-review" -> "Paperspace/DataAugmentationForObjectDetection"
"AgaMiko/data-augmentation-review" -> "kakaobrain/fast-autoaugment"
"AgaMiko/data-augmentation-review" -> "codebox/image_augmentor"
"AgaMiko/data-augmentation-review" -> "makcedward/nlpaug" ["e"=1]
"AgaMiko/data-augmentation-review" -> "google-research/uda"
"AgaMiko/data-augmentation-review" -> "jason718/awesome-self-supervised-learning" ["e"=1]
"AgaMiko/data-augmentation-review" -> "iver56/audiomentations" ["e"=1]
"AgaMiko/data-augmentation-review" -> "arcelien/pba"
"AgaMiko/data-augmentation-review" -> "subeeshvasu/Awesome-Learning-with-Label-Noise"
"AgaMiko/data-augmentation-review" -> "kemaloksuz/ObjectDetectionImbalance"
"AgaMiko/data-augmentation-review" -> "DeepVoltaire/AutoAugment"
"AgaMiko/data-augmentation-review" -> "albumentations-team/albumentations"
"AgaMiko/data-augmentation-review" -> "uchidalab/time_series_augmentation" ["e"=1]
"AgaMiko/data-augmentation-review" -> "aleju/imgaug"
"GOATmessi8/ASFF" -> "GOATmessi8/RFBNet"
"GOATmessi8/ASFF" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"GOATmessi8/ASFF" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"GOATmessi8/ASFF" -> "WongKinYiu/CrossStagePartialNetworks"
"GOATmessi8/ASFF" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"GOATmessi8/ASFF" -> "sfzhang15/ATSS"
"GOATmessi8/ASFF" -> "toandaominh1997/EfficientDet.Pytorch"
"GOATmessi8/ASFF" -> "tianzhi0549/FCOS"
"GOATmessi8/ASFF" -> "jwchoi384/Gaussian_YOLOv3" ["e"=1]
"GOATmessi8/ASFF" -> "Zzh-tju/DIoU-darknet" ["e"=1]
"GOATmessi8/ASFF" -> "kemaloksuz/ObjectDetectionImbalance"
"GOATmessi8/ASFF" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"GOATmessi8/ASFF" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"GOATmessi8/ASFF" -> "tusen-ai/simpledet"
"GOATmessi8/ASFF" -> "joe-siyuan-qiao/DetectoRS"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "LiyuanLucasLiu/RAdam"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "lessw2020/Ranger21"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "mgrankin/over9000"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "digantamisra98/Mish"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "lonePatient/lookahead_pytorch"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "lessw2020/Best-Deep-Learning-Optimizers"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "alphadl/lookahead.pytorch"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "juntang-zhuang/Adabelief-Optimizer"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "jettify/pytorch-optimizer"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "lessw2020/mish"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "lessw2020/Ranger-Mish-ImageWoof-5"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "Yonghongwei/Gradient-Centralization"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "clovaai/CutMix-PyTorch"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "kakaobrain/fast-autoaugment"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "ildoonet/pytorch-gradual-warmup-lr"
"lessw2020/Best-Deep-Learning-Optimizers" -> "amirgholami/adahessian" ["e"=1]
"lessw2020/Best-Deep-Learning-Optimizers" -> "davda54/ada-hessian" ["e"=1]
"lessw2020/Best-Deep-Learning-Optimizers" -> "lessw2020/Ranger21"
"lessw2020/Best-Deep-Learning-Optimizers" -> "shivram1987/diffGrad"
"YyzHarry/imbalanced-semi-self" -> "facebookresearch/classifier-balancing"
"YyzHarry/imbalanced-semi-self" -> "kaidic/LDAM-DRW"
"YyzHarry/imbalanced-semi-self" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"YyzHarry/imbalanced-semi-self" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"YyzHarry/imbalanced-semi-self" -> "megvii-research/BBN"
"YyzHarry/imbalanced-semi-self" -> "google-research/fixmatch"
"YyzHarry/imbalanced-semi-self" -> "kekmodel/FixMatch-pytorch"
"YyzHarry/imbalanced-semi-self" -> "richardaecn/class-balanced-loss"
"YyzHarry/imbalanced-semi-self" -> "frank-xwang/RIDE-LongTailRecognition"
"YyzHarry/imbalanced-semi-self" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"YyzHarry/imbalanced-semi-self" -> "bbuing9/DARP"
"YyzHarry/imbalanced-semi-self" -> "willwhitney/reprieve" ["e"=1]
"YyzHarry/imbalanced-semi-self" -> "YyzHarry/imbalanced-regression"
"YyzHarry/imbalanced-semi-self" -> "anguyen8/sam" ["e"=1]
"YyzHarry/imbalanced-semi-self" -> "MadryLab/cox" ["e"=1]
"vandit15/Class-balanced-loss-pytorch" -> "richardaecn/class-balanced-loss"
"vandit15/Class-balanced-loss-pytorch" -> "kaidic/LDAM-DRW"
"vandit15/Class-balanced-loss-pytorch" -> "megvii-research/BBN"
"vandit15/Class-balanced-loss-pytorch" -> "facebookresearch/classifier-balancing"
"vandit15/Class-balanced-loss-pytorch" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"vandit15/Class-balanced-loss-pytorch" -> "zhmiao/OpenLongTailRecognition-OLTR"
"vandit15/Class-balanced-loss-pytorch" -> "clovaai/CutMix-PyTorch"
"vandit15/Class-balanced-loss-pytorch" -> "kemaloksuz/ObjectDetectionImbalance"
"vandit15/Class-balanced-loss-pytorch" -> "CoinCheung/pytorch-loss"
"vandit15/Class-balanced-loss-pytorch" -> "ufoym/imbalanced-dataset-sampler"
"vandit15/Class-balanced-loss-pytorch" -> "KaiyangZhou/pytorch-center-loss" ["e"=1]
"vandit15/Class-balanced-loss-pytorch" -> "fcakyon/balanced-loss"
"vandit15/Class-balanced-loss-pytorch" -> "frank-xwang/RIDE-LongTailRecognition"
"vandit15/Class-balanced-loss-pytorch" -> "YyzHarry/imbalanced-semi-self"
"vandit15/Class-balanced-loss-pytorch" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"earhian/SIIM-ACR-Pneumothorax-Segmentation-5th" -> "yelanlan/Pneumothorax-Segmentation-2nd-place-solution"
"earhian/SIIM-ACR-Pneumothorax-Segmentation-5th" -> "arc144/siim-pneumothorax"
"murtazahassan/Face-Recognition" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Face-Recognition" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Face-Recognition" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Face-Recognition" -> "murtazahassan/Learn-Python"
"murtazahassan/Face-Recognition" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Face-Recognition" -> "murtazahassan/Document-Scanner"
"murtazahassan/Face-Recognition" -> "murtazahassan/Angle-Finder"
"murtazahassan/Face-Recognition" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/Face-Recognition" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"murtazahassan/Face-Recognition" -> "murtazahassan/Digits-Classification"
"murtazahassan/Face-Recognition" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Face-Recognition" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Face-Recognition" -> "murtazahassan/OpenCV-Sudoku-Solver"
"murtazahassan/Face-Recognition" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Face-Recognition" -> "murtazahassan/Real-Time-Object-Measurement"
"ZhiningLiu1998/self-paced-ensemble" -> "ZhiningLiu1998/imbalanced-ensemble"
"ZhiningLiu1998/self-paced-ensemble" -> "ZhiningLiu1998/mesa"
"ZhiningLiu1998/self-paced-ensemble" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"ZhiningLiu1998/self-paced-ensemble" -> "jhwjhw0123/Imbalance-XGBoost"
"ZhiningLiu1998/self-paced-ensemble" -> "chongshengzhang/Multi_Imbalance"
"ZhiningLiu1998/self-paced-ensemble" -> "dialnd/imbalanced-algorithms"
"ZhiningLiu1998/self-paced-ensemble" -> "JinJunRen/GB-SMOTE"
"ZhiningLiu1998/mesa" -> "ZhiningLiu1998/self-paced-ensemble"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "frank-xwang/RIDE-LongTailRecognition"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "facebookresearch/classifier-balancing"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "megvii-research/BBN"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "kaidic/LDAM-DRW"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "Stomach-ache/awesome-long-tail-learning"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "Vanint/Awesome-LongTailed-Learning"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "zhmiao/OpenLongTailRecognition-OLTR"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "xialeiliu/Awesome-LongTailed-Recognition"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "Vanint/SADE-AgnosticLT"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "YyzHarry/imbalanced-semi-self"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "dvlab-research/Parametric-Contrastive-Learning"
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" -> "dvlab-research/MiSLAS"
"moskomule/dda" -> "albumentations-team/autoalbument"
"moskomule/dda" -> "VDIGPKU/DADA"
"moskomule/dda" -> "mhariat/Fast-PBA_AutoAugment"
"bes-dev/mean_average_precision" -> "slgero/receipt_parser"
"bes-dev/mean_average_precision" -> "IlyaDobrynin/GridMixup"
"bes-dev/mean_average_precision" -> "ZFTurbo/Mean-Average-Precision-for-Boxes"
"bes-dev/mean_average_precision" -> "kiselev1189/EEGClassificationMCNN"
"mindspore-ai/docs" -> "mindspore-ai/mail_templates"
"mindspore-ai/docs" -> "mindspore-ai/book"
"mindspore-ai/docs" -> "mindspore-ai/ms-operator"
"mindspore-ai/docs" -> "mindspore-ai/hub"
"mindspore-ai/docs" -> "mindspore-ai/serving"
"mindspore-ai/docs" -> "mindspore-ai/community"
"mindspore-ai/docs" -> "mindspore-ai/mindinsight"
"mindspore-ai/docs" -> "mindspore-ai/graphengine"
"mindspore-ai/docs" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/docs" -> "mindspore-ai/course"
"mindspore-ai/docs" -> "mindspore-ai/akg"
"mindspore-ai/docs" -> "mindspore-ai/infrastructure"
"mindspore-ai/docs" -> "mindspore-ai/mindarmour"
"sxhxliang/detectron2_backbone" -> "youngwanLEE/vovnet-detectron2"
"sxhxliang/detectron2_backbone" -> "zzzxxxttt/simple_detectron2_EfficientDet"
"sxhxliang/detectron2_backbone" -> "Epiphqny/Yolact_fcos"
"sxhxliang/detectron2_backbone" -> "chensnathan/YOLOF"
"youngwanLEE/CenterMask" -> "youngwanLEE/centermask2"
"youngwanLEE/CenterMask" -> "xieenze/PolarMask"
"youngwanLEE/CenterMask" -> "youngwanLEE/vovnet-detectron2"
"youngwanLEE/CenterMask" -> "zju3dv/snake"
"youngwanLEE/CenterMask" -> "aim-uofa/AdelaiDet"
"youngwanLEE/CenterMask" -> "WXinlong/SOLO"
"youngwanLEE/CenterMask" -> "sfzhang15/ATSS"
"youngwanLEE/CenterMask" -> "stigma0617/VoVNet.pytorch"
"youngwanLEE/CenterMask" -> "tianzhi0549/FCOS"
"youngwanLEE/CenterMask" -> "dbolya/yolact"
"youngwanLEE/CenterMask" -> "GOATmessi8/ASFF"
"youngwanLEE/CenterMask" -> "joe-siyuan-qiao/DetectoRS"
"youngwanLEE/CenterMask" -> "JialeCao001/SipMask"
"youngwanLEE/CenterMask" -> "KiveeDong/CentripetalNet"
"youngwanLEE/CenterMask" -> "implus/GFocal"
"fcakyon/labelme2coco" -> "ivder/LabelMeYoloConverter"
"fcakyon/labelme2coco" -> "rooneysh/Labelme2YOLO"
"fcakyon/labelme2coco" -> "Tony607/labelme2coco"
"vacancy/PyPatchMatch" -> "younesse-cv/PatchMatch"
"mindspore-ai/course" -> "mindspore-ai/hub"
"mindspore-ai/course" -> "mindspore-ai/serving"
"mindspore-ai/course" -> "mindspore-ai/mail_templates"
"mindspore-ai/course" -> "mindspore-ai/book"
"mindspore-ai/course" -> "mindspore-ai/ms-operator"
"mindspore-ai/course" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/course" -> "mindspore-ai/community"
"mindspore-ai/course" -> "mindspore-ai/graphengine"
"mindspore-ai/course" -> "mindspore-ai/mindinsight"
"mindspore-ai/course" -> "mindspore-ai/akg"
"mindspore-ai/course" -> "mindspore-ai/docs"
"mindspore-ai/course" -> "mindspore-ai/infrastructure"
"KiveeDong/CentripetalNet" -> "arashwan/matrixnet"
"KiveeDong/CentripetalNet" -> "ggjy/HitDet.pytorch" ["e"=1]
"KiveeDong/CentripetalNet" -> "lucasjinreal/CenterNet_Pro_Max"
"KiveeDong/CentripetalNet" -> "yqyao/FCOS_PLUS"
"KiveeDong/CentripetalNet" -> "sfzhang15/ATSS"
"KiveeDong/CentripetalNet" -> "caiqi/sample-weighting-network" ["e"=1]
"KiveeDong/CentripetalNet" -> "Megvii-BaseDetection/BorderDet"
"KiveeDong/CentripetalNet" -> "Ranchentx/EFGRNet"
"Alibaba-MIIL/TResNet" -> "Alibaba-MIIL/ASL"
"Alibaba-MIIL/TResNet" -> "Alibaba-MIIL/ML_Decoder"
"Alibaba-MIIL/TResNet" -> "HCPLab-SYSU/SSGRL"
"Alibaba-MIIL/TResNet" -> "szq0214/MEAL-V2" ["e"=1]
"Alibaba-MIIL/TResNet" -> "naver-ai/relabel_imagenet" ["e"=1]
"Alibaba-MIIL/TResNet" -> "mathkey/mssnet"
"Alibaba-MIIL/TResNet" -> "facebookresearch/FixRes"
"Alibaba-MIIL/TResNet" -> "Alibaba-MIIL/ImageNet21K"
"Alibaba-MIIL/TResNet" -> "facebookresearch/pycls"
"Alibaba-MIIL/TResNet" -> "clovaai/assembled-cnn" ["e"=1]
"Alibaba-MIIL/TResNet" -> "mgrankin/over9000"
"Sense-X/TSD" -> "jshilong/SEPC"
"Sense-X/TSD" -> "JialeCao001/D2Det" ["e"=1]
"Sense-X/TSD" -> "joe-siyuan-qiao/DetectoRS"
"Sense-X/TSD" -> "Megvii-BaseDetection/BorderDet"
"Sense-X/TSD" -> "Megvii-BaseDetection/DeFCN"
"Sense-X/TSD" -> "PeizeSun/SparseR-CNN"
"Sense-X/TSD" -> "implus/GFocalV2"
"Sense-X/TSD" -> "thangvubk/Cascade-RPN"
"Sense-X/TSD" -> "tztztztztz/eql.detectron2"
"Sense-X/TSD" -> "ming71/mmdetection-annotated"
"Sense-X/TSD" -> "kemaloksuz/ObjectDetectionImbalance"
"Sense-X/TSD" -> "sfzhang15/ATSS"
"Sense-X/TSD" -> "chongruo/detectron2-ResNeSt"
"Sense-X/TSD" -> "microsoft/RepPoints"
"Sense-X/TSD" -> "KiveeDong/CentripetalNet"
"Caojunxu/AC-FPN" -> "jshilong/SEPC"
"Caojunxu/AC-FPN" -> "Duankaiwen/CPNDet"
"vahidk/tfrecord" -> "Lyken17/Efficient-PyTorch"
"vahidk/tfrecord" -> "pgmmpk/tfrecord"
"vahidk/tfrecord" -> "jongwook/tfrecord_lite"
"vahidk/tfrecord" -> "webdataset/webdataset" ["e"=1]
"vahidk/tfrecord" -> "podgorskiy/DareBlopy"
"vahidk/tfrecord" -> "NVIDIA/runx"
"vahidk/tfrecord" -> "dmlc/decord" ["e"=1]
"vahidk/tfrecord" -> "rwightman/gen-efficientnet-pytorch"
"jia-zhuang/pytorch-multi-gpu-training" -> "tczhangzhi/pytorch-distributed"
"jia-zhuang/pytorch-multi-gpu-training" -> "salesforce/ALBEF" ["e"=1]
"albumentations-team/albumentations_examples" -> "qubvel/ttach"
"albumentations-team/albumentations_examples" -> "CrazyVertigo/awesome-data-augmentation"
"albumentations-team/albumentations_examples" -> "ZFTurbo/Weighted-Boxes-Fusion"
"albumentations-team/albumentations_examples" -> "DocF/Soft-NMS"
"albumentations-team/albumentations_examples" -> "DeepVoltaire/AutoAugment"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/facenet-retinaface-pytorch"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/facenet-pytorch"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/retinaface-tf2"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/arcface-pytorch"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/pytorch-GAN"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/retinaface-keras"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/RFB-keras"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/mtcnn-keras"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/facenet-retinaface-keras"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/ssd_keras"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/retinaface-pytorch" -> "bubbliiiing/centernet-keras"
"VDIGPKU/CBNet_caffe" -> "VDIGPKU/CBNet_pytorch" ["e"=1]
"VDIGPKU/CBNet_caffe" -> "joe-siyuan-qiao/DetectoRS"
"VDIGPKU/CBNet_caffe" -> "sfzhang15/ATSS"
"VDIGPKU/CBNet_caffe" -> "toandaominh1997/EfficientDet.Pytorch"
"VDIGPKU/CBNet_caffe" -> "zhaoweicai/Detectron-Cascade-RCNN"
"VDIGPKU/CBNet_caffe" -> "implus/GFocalV2"
"VDIGPKU/CBNet_caffe" -> "arashwan/matrixnet"
"VDIGPKU/CBNet_caffe" -> "zhangxiaosong18/FreeAnchor"
"VDIGPKU/CBNet_caffe" -> "Sense-X/TSD"
"VDIGPKU/CBNet_caffe" -> "Zzh-tju/DIoU-darknet" ["e"=1]
"VDIGPKU/CBNet_caffe" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"VDIGPKU/CBNet_caffe" -> "panjianning/cbnet" ["e"=1]
"VDIGPKU/CBNet_caffe" -> "implus/GFocal"
"vvssttkk/dst" -> "aabzaliev/google-coreference-3rd-place"
"ivanpanshin/flask_gunicorn_nginx_docker" -> "IlyaDobrynin/GridMixup"
"osai-ai/dokai" -> "lRomul/rosny"
"osai-ai/dokai" -> "lRomul/argus"
"osai-ai/dokai" -> "lRomul/gramtion"
"bubbliiiing/ssd-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/ssd-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/ssd-keras" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/ssd-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/ssd-keras" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/ssd-keras" -> "bubbliiiing/faster-rcnn-keras"
"bubbliiiing/ssd-keras" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/ssd-keras" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/ssd-keras" -> "bubbliiiing/Transfer-Learning"
"bubbliiiing/ssd-keras" -> "bubbliiiing/poems-generator"
"bubbliiiing/ssd-keras" -> "bubbliiiing/ssd_keras"
"bubbliiiing/ssd-keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/ssd-keras" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/ssd-keras" -> "bubbliiiing/yolo3-keras"
"bubbliiiing/ssd-keras" -> "bubbliiiing/efficientdet-keras"
"DeepVAC/deepvac" -> "ahangchen/torch_base" ["e"=1]
"DeepVAC/deepvac" -> "Jermmy/pytorch-quantization-demo" ["e"=1]
"DeepVAC/deepvac" -> "ModelTC/MQBench" ["e"=1]
"DeepVAC/deepvac" -> "DeepVAC/libdeepvac" ["e"=1]
"DeepVAC/deepvac" -> "lartpang/PyTorchTricks"
"DeepVAC/deepvac" -> "666DZY666/micronet" ["e"=1]
"DeepVAC/deepvac" -> "foolwood/pytorch-slimming" ["e"=1]
"DeepVAC/deepvac" -> "murufeng/awesome_lightweight_networks"
"DeepVAC/deepvac" -> "JDAI-CV/centerX"
"bubbliiiing/RFB-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/RFB-keras" -> "bubbliiiing/ssd_keras"
"bubbliiiing/RFB-keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/RFB-keras" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/RFB-keras" -> "bubbliiiing/poems-generator"
"bubbliiiing/RFB-keras" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/RFB-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/RFB-keras" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/RFB-keras" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/RFB-keras" -> "bubbliiiing/efficientdet-keras"
"iwatake2222/play_with_tflite" -> "iwatake2222/InferenceHelper"
"iwatake2222/play_with_tflite" -> "karthickai/tflite"
"iwatake2222/play_with_tflite" -> "terryky/tflite_gles_app"
"iwatake2222/play_with_tflite" -> "iwatake2222/play_with_tensorrt"
"iwatake2222/play_with_tflite" -> "PINTO0309/tflite2tensorflow"
"iwatake2222/play_with_tflite" -> "PINTO0309/openvino2tensorflow"
"iwatake2222/play_with_tflite" -> "ValYouW/tflite-dist"
"iwatake2222/play_with_tflite" -> "NobuoTsukamoto/tflite-cv-example"
"iwatake2222/play_with_tflite" -> "terryky/android_tflite"
"iwatake2222/play_with_tflite" -> "PINTO0309/PINTO_model_zoo"
"iwatake2222/play_with_tflite" -> "ValYouW/tflite-win-c"
"iwatake2222/play_with_tflite" -> "pntt3011/mediapipe_face_iris_cpp"
"iwatake2222/play_with_tflite" -> "iwatake2222/self-driving-ish_computer_vision_system"
"iwatake2222/play_with_tflite" -> "apennisi/deep_sort" ["e"=1]
"iwatake2222/play_with_tflite" -> "google-coral/libedgetpu" ["e"=1]
"He-Zhenwei/MAF" -> "He-Zhenwei/ATF"
"He-Zhenwei/MAF" -> "uitrbn/CST_DA_detection"
"He-Zhenwei/ATF" -> "He-Zhenwei/MAF"
"He-Zhenwei/ATF" -> "uitrbn/CST_DA_detection"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/ssd-keras"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/faster-rcnn-keras"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/mask-rcnn-tf2"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/Semantic-Segmentation"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/poems-generator"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/classic-convolution-network"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/Transfer-Learning"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/Keras-Attention"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/mask-rcnn-keras" -> "bubbliiiing/GAN-keras"
"albahnsen/CostSensitiveClassification" -> "Albertsr/Class-Imbalance"
"albahnsen/CostSensitiveClassification" -> "david-cortes/costsensitive"
"albahnsen/CostSensitiveClassification" -> "nnikolaou/Cost-sensitive-Boosting-Tutorial"
"albahnsen/CostSensitiveClassification" -> "iamyuanchung/csdnn"
"albahnsen/CostSensitiveClassification" -> "Treers/MetaCost"
"albahnsen/CostSensitiveClassification" -> "airanmehr/cssvm"
"FrancescoSaverioZuppichini/glasses" -> "FrancescoSaverioZuppichini/ViT"
"FrancescoSaverioZuppichini/glasses" -> "FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template"
"FrancescoSaverioZuppichini/glasses" -> "vietnh1009/SSD-pytorch"
"FrancescoSaverioZuppichini/glasses" -> "ivy-llc/vision"
"PaddlePaddle/InterpretDL" -> "PaddlePaddle/TrustAI"
"PaddlePaddle/InterpretDL" -> "PaddlePaddle/benchmark"
"rafat/wavelib" -> "fastlib/fCWT"
"rafat/wavelib" -> "rafat/wavelet1d"
"rafat/wavelib" -> "rafat/wdenoise"
"rafat/wavelib" -> "oschulz/blitzwave"
"rafat/wavelib" -> "graetz23/JWave"
"rafat/wavelib" -> "pierrepaleo/PDWT"
"rafat/wavelib" -> "berndporr/iir1" ["e"=1]
"rafat/wavelib" -> "sjneph/modwt"
"rafat/wavelib" -> "rafat/liftwave"
"rafat/wavelib" -> "Lichtso/CCWT"
"rafat/wavelib" -> "PyWavelets/pywt"
"MVRonkin/dsatools" -> "yunyueye/MVMD"
"MVRonkin/dsatools" -> "shenmusmart/VMD_python"
"MVRonkin/dsatools" -> "XinweiJiang/VMD"
"tdwg/dwc" -> "tdwg/dwc-qa"
"tdwg/dwc" -> "tdwg/bdq"
"tdwg/dwc" -> "gbif/ipt"
"tdwg/dwc" -> "specify/specify7"
"tdwg/dwc" -> "BelgianBiodiversityPlatform/python-dwca-reader"
"tdwg/dwc" -> "gbif/gbif-api"
"tdwg/dwc" -> "CatalogueOfLife/general"
"tdwg/dwc" -> "tdwg/interaction"
"tdwg/dwc" -> "tdwg/attribution"
"tdwg/dwc" -> "Symbiota/Symbiota"
"tdwg/dwc" -> "VertNet/bels"
"tdwg/dwc" -> "tdwg/cd"
"tdwg/dwc" -> "globalbioticinteractions/globalbioticinteractions"
"murtazahassan/Learn-Python" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Learn-Python" -> "murtazahassan/darknet"
"murtazahassan/Learn-Python" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Learn-Python" -> "murtazahassan/Object-Following-Robot"
"murtazahassan/Learn-Python" -> "murtazahassan/Angle-Finder"
"murtazahassan/Learn-Python" -> "murtazahassan/TeslaCyberTruck-Arduino"
"zgcr/SimpleAICV_pytorch_training_examples" -> "yjh0410/yolov2-yolov3_PyTorch"
"zgcr/SimpleAICV_pytorch_training_examples" -> "hhaAndroid/mmdetection-mini"
"zgcr/SimpleAICV_pytorch_training_examples" -> "zgcr/AICITY2020_track2_reid_BeBetter"
"zgcr/SimpleAICV_pytorch_training_examples" -> "miaoshuyu/object-detection-usages"
"zgcr/SimpleAICV_pytorch_training_examples" -> "zzzxxxttt/pytorch_simple_CenterNet_45"
"zgcr/SimpleAICV_pytorch_training_examples" -> "BIGBALLON/distribuuuu" ["e"=1]
"MegEngine/Models" -> "MegEngine/Hub"
"MegEngine/Models" -> "MegEngine/Docs"
"MegEngine/Models" -> "MegEngine/MegRay"
"MegEngine/Models" -> "MegEngine/Documentation"
"MegEngine/Models" -> "MegEngine/mgeconvert"
"HCPLab-SYSU/SSGRL" -> "mathkey/mssnet"
"HCPLab-SYSU/SSGRL" -> "hguosc/visual_attention_consistency"
"HCPLab-SYSU/SSGRL" -> "zhufengx/SRN_multilabel"
"HCPLab-SYSU/SSGRL" -> "Yejin0111/ADD-GCN"
"HCPLab-SYSU/SSGRL" -> "FT-ZHOU-ZZZ/DSDL"
"HCPLab-SYSU/SSGRL" -> "James-Yip/AttentionImageClass"
"HCPLab-SYSU/SSGRL" -> "Yochengliu/MLIC-KD-WSD"
"HCPLab-SYSU/SSGRL" -> "leokarlin/LaSO"
"HCPLab-SYSU/SSGRL" -> "megvii-research/ML-GCN" ["e"=1]
"HCPLab-SYSU/SSGRL" -> "voyazici/orderless-rnn-classification"
"HCPLab-SYSU/SSGRL" -> "gaobb/MCAR"
"HCPLab-SYSU/SSGRL" -> "HCPLab-SYSU/HCP-MLR-PL"
"HCPLab-SYSU/SSGRL" -> "wutong16/DistributionBalancedLoss"
"HCPLab-SYSU/SSGRL" -> "Hua-YS/AID-Multilabel-Dataset"
"HCPLab-SYSU/SSGRL" -> "SlongLiu/query2labels"
"miaoshuyu/object-detection-usages" -> "DocF/Soft-NMS"
"miaoshuyu/object-detection-usages" -> "fcjian/TOOD"
"miaoshuyu/object-detection-usages" -> "ShengkaiWu/IoU-aware-single-stage-object-detector"
"jiang-du/BlazePose-tensorflow" -> "vietanhdev/tf-blazepose"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "yuhuayc/da-faster-rcnn"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "VisionLearningGroup/DA_Detection"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "chengchunhsu/EveryPixelMatters"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "megvii-research/CR-DA-DET"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "kinredon/DA_Detection_Material"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "kevinhkhsu/DA_detection"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "harsh-99/SCL"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "krumo/Detectron-DA-Faster-RCNN"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "TKKim93/DivMatch"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "chaoqichen/HTCN"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "wangs311/awesome-domain-adaptation-object-detection"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "xinge008/SCDA"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "naoto0804/cross-domain-detection"
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" -> "facebookresearch/adaptive_teacher"
"terryky/tflite_gles_app" -> "iwatake2222/play_with_tflite"
"terryky/tflite_gles_app" -> "PINTO0309/PINTO_model_zoo"
"terryky/tflite_gles_app" -> "PINTO0309/tflite2tensorflow"
"terryky/tflite_gles_app" -> "PINTO0309/openvino2tensorflow"
"terryky/tflite_gles_app" -> "terryky/tfjs_webgl_app" ["e"=1]
"terryky/tflite_gles_app" -> "google-coral/project-bodypix" ["e"=1]
"terryky/tflite_gles_app" -> "terryky/android_tflite"
"terryky/tflite_gles_app" -> "NobuoTsukamoto/tflite-cv-example"
"terryky/tflite_gles_app" -> "NVIDIA-AI-IOT/trt_pose" ["e"=1]
"terryky/tflite_gles_app" -> "jiuqiant/mediapipe_python_aarch64"
"terryky/tflite_gles_app" -> "asus4/tf-lite-unity-sample" ["e"=1]
"terryky/tflite_gles_app" -> "PINTO0309/mediapipe-bin"
"terryky/tflite_gles_app" -> "michalfaber/tensorflow_Realtime_Multi-Person_Pose_Estimation" ["e"=1]
"terryky/tflite_gles_app" -> "patlevin/tfjs-to-tf" ["e"=1]
"terryky/tflite_gles_app" -> "mgyong/awesome-mediapipe" ["e"=1]
"Yonghongwei/Gradient-Centralization" -> "hyz-xmaster/swa_object_detection" ["e"=1]
"Yonghongwei/Gradient-Centralization" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"Yonghongwei/Gradient-Centralization" -> "iamhankai/ghostnet.pytorch"
"Yonghongwei/Gradient-Centralization" -> "Islanna/DynamicReLU" ["e"=1]
"Yonghongwei/Gradient-Centralization" -> "anonymous47823493/EagleEye" ["e"=1]
"Yonghongwei/Gradient-Centralization" -> "megvii-research/BBN"
"Yonghongwei/Gradient-Centralization" -> "JiahuiYu/slimmable_networks" ["e"=1]
"chrise96/image-to-coco-json-converter" -> "Mortyzhang/Mask2polygon_tool"
"chrise96/image-to-coco-json-converter" -> "jsbroks/imantics"
"JialeCao001/SipMask" -> "youtubevos/MaskTrackRCNN"
"JialeCao001/SipMask" -> "sabarim/STEm-Seg"
"JialeCao001/SipMask" -> "YuqingWang1029/VisTR"
"JialeCao001/SipMask" -> "lyxok1/STM-Training" ["e"=1]
"JialeCao001/SipMask" -> "hustvl/BMaskR-CNN" ["e"=1]
"JialeCao001/SipMask" -> "feiyuhuahuo/Yolact_minimal"
"JialeCao001/SipMask" -> "youngwanLEE/CenterMask"
"JialeCao001/SipMask" -> "idilesenzulfikar/UNOVOST" ["e"=1]
"JialeCao001/SipMask" -> "Epiphqny/Yolact_fcos"
"JialeCao001/SipMask" -> "Epiphqny/CondInst"
"JialeCao001/SipMask" -> "z-x-yang/CFBI" ["e"=1]
"JialeCao001/SipMask" -> "seoungwugoh/STM" ["e"=1]
"JialeCao001/SipMask" -> "mcahny/vps" ["e"=1]
"JialeCao001/SipMask" -> "VisualComputingInstitute/TrackR-CNN" ["e"=1]
"JialeCao001/SipMask" -> "youtubevos/cocoapi"
"Santosh-Gupta/SpeedTorch" -> "tanglang96/DataLoaders_DALI"
"Santosh-Gupta/SpeedTorch" -> "szymonmaszke/torchlayers"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/fcos-pytorch"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/efficientdet-tf2"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/centernet-keras"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/detr-pytorch"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/pytorch-GAN"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/retinanet-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"xunge/pytorch_lmdb_imagenet" -> "haformer/haformer"
"xunge/pytorch_lmdb_imagenet" -> "knowonething/Traffic-Simulation-Tool"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "FateScript/CenterNet-better"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "ZeroE04/R-CenterNet" ["e"=1]
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "lucasjinreal/CenterNet_Pro_Max"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "yjh0410/CenterNet-Lite"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "bubbliiiing/centernet-pytorch"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "Duankaiwen/PyCenterNet"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "xingyizhou/CenterNet2"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "lbin/CenterNet-better-plus"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "zzzxxxttt/pytorch_simple_CenterNet_47"
"megvii-research/hpman" -> "megvii-research/hpargparse"
"XiaohangZhan/deocclusion" -> "lkeab/BCNet"
"XiaohangZhan/deocclusion" -> "cvlab-columbia/pix2gestalt"
"XiaohangZhan/deocclusion" -> "qqlu/Amodal-Instance-Segmentation-through-KINS-Dataset"
"XiaohangZhan/deocclusion" -> "Hangz-nju-cuhk/Rotate-and-Render" ["e"=1]
"XiaohangZhan/deocclusion" -> "XiaohangZhan/deocclusion-demo"
"XiaohangZhan/deocclusion" -> "XingangPan/deep-generative-prior" ["e"=1]
"XiaohangZhan/deocclusion" -> "Yaoyi-Li/GCA-Matting" ["e"=1]
"XiaohangZhan/deocclusion" -> "XiaohangZhan/conditional-motion-propagation" ["e"=1]
"XiaohangZhan/deocclusion" -> "facebookresearch/synsin" ["e"=1]
"XiaohangZhan/deocclusion" -> "Wakeupbuddy/amodalAPI"
"XiaohangZhan/deocclusion" -> "kam1107/RealnessGAN" ["e"=1]
"XiaohangZhan/deocclusion" -> "naoto0804/pytorch-inpainting-with-partial-conv" ["e"=1]
"XiaohangZhan/deocclusion" -> "SamsungLabs/adaptis" ["e"=1]
"XiaohangZhan/deocclusion" -> "aim-uofa/AdelaiDet"
"matlablyz/Digital-images" -> "HuaJiuShi/-MATLAB-GUI-"
"mjyc/awesome-hri-datasets" -> "Po-Jen/awesome-human-robot-interaction"
"Lightning-AI/deep-learning-project-template" -> "Lightning-Universe/lightning-bolts"
"Lightning-AI/deep-learning-project-template" -> "Lightning-AI/torchmetrics"
"Lightning-AI/deep-learning-project-template" -> "Lightning-Universe/lightning-transformers" ["e"=1]
"Lightning-AI/deep-learning-project-template" -> "Lightning-Universe/lightning-flash"
"Lightning-AI/deep-learning-project-template" -> "ashleve/lightning-hydra-template"
"Lightning-AI/deep-learning-project-template" -> "grok-ai/nn-template" ["e"=1]
"Lightning-AI/deep-learning-project-template" -> "Lightning-AI/tutorials"
"Lightning-AI/deep-learning-project-template" -> "FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template"
"Lightning-AI/deep-learning-project-template" -> "victoresque/pytorch-template"
"Lightning-AI/deep-learning-project-template" -> "Lightning-AI/pytorch-lightning"
"Lightning-AI/deep-learning-project-template" -> "williamFalcon/test-tube"
"Lightning-AI/deep-learning-project-template" -> "paperswithcode/releasing-research-code" ["e"=1]
"Lightning-AI/deep-learning-project-template" -> "patrick-kidger/torchtyping" ["e"=1]
"Lightning-AI/deep-learning-project-template" -> "miracleyoo/pytorch-lightning-template" ["e"=1]
"Lightning-AI/deep-learning-project-template" -> "huggingface/knockknock" ["e"=1]
"iamhankai/ghostnet.pytorch" -> "d-li14/ghostnet.pytorch" ["e"=1]
"iamhankai/ghostnet.pytorch" -> "TingsongYu/ghostnet_cifar10" ["e"=1]
"iamhankai/ghostnet.pytorch" -> "huawei-noah/Efficient-AI-Backbones"
"iamhankai/ghostnet.pytorch" -> "sfzhang15/ATSS"
"iamhankai/ghostnet.pytorch" -> "kuan-wang/pytorch-mobilenet-v3" ["e"=1]
"iamhankai/ghostnet.pytorch" -> "Star-Clouds/CenterFace" ["e"=1]
"iamhankai/ghostnet.pytorch" -> "xiaolai-sqlai/mobilenetv3"
"iamhankai/ghostnet.pytorch" -> "MCG-NKU/SCNet" ["e"=1]
"iamhankai/ghostnet.pytorch" -> "megvii-model/ShuffleNet-Series"
"iamhankai/ghostnet.pytorch" -> "implus/GFocal"
"iamhankai/ghostnet.pytorch" -> "zhanghang1989/ResNeSt"
"iamhankai/ghostnet.pytorch" -> "toandaominh1997/EfficientDet.Pytorch"
"iamhankai/ghostnet.pytorch" -> "yitu-opensource/MobileNeXt" ["e"=1]
"iamhankai/ghostnet.pytorch" -> "xxradon/PytorchToCaffe" ["e"=1]
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Angle-Finder"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Learn-Python"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Object-Following-Robot"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Digits-Classification"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Face-Recognition"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/darknet"
"FLyingLSJ/PyTorch-YOLOv3-master" -> "FLyingLSJ/Computer_Vision_Project"
"google-research/noisystudent" -> "google-research/fixmatch"
"google-research/noisystudent" -> "facebookresearch/FixRes"
"google-research/noisystudent" -> "sally20921/NoisyStudent"
"google-research/noisystudent" -> "ildoonet/pytorch-randaugment"
"google-research/noisystudent" -> "google-research/uda"
"google-research/noisystudent" -> "HobbitLong/PyContrast" ["e"=1]
"google-research/noisystudent" -> "szq0214/MEAL-V2" ["e"=1]
"google-research/noisystudent" -> "facebookresearch/swav" ["e"=1]
"google-research/noisystudent" -> "google-research/augmix"
"google-research/noisystudent" -> "EricArazo/PseudoLabeling"
"google-research/noisystudent" -> "google-research/s4l" ["e"=1]
"google-research/noisystudent" -> "CuriousAI/mean-teacher"
"google-research/noisystudent" -> "lucidrains/byol-pytorch" ["e"=1]
"google-research/noisystudent" -> "yzou2/CRST" ["e"=1]
"google-research/noisystudent" -> "google-research/mixmatch"
"YisenWang/symmetric_cross_entropy_for_noisy_labels" -> "HanxunH/SCELoss-Reproduce"
"YisenWang/symmetric_cross_entropy_for_noisy_labels" -> "YisenWang/dynamic_adv_training" ["e"=1]
"YisenWang/symmetric_cross_entropy_for_noisy_labels" -> "AlanChou/Truncated-Loss"
"YisenWang/symmetric_cross_entropy_for_noisy_labels" -> "HanxunH/Active-Passive-Losses"
"HanxunH/SCELoss-Reproduce" -> "YisenWang/symmetric_cross_entropy_for_noisy_labels"
"HanxunH/SCELoss-Reproduce" -> "AlanChou/Truncated-Loss"
"HanxunH/SCELoss-Reproduce" -> "xingjunm/dimensionality-driven-learning"
"HanxunH/SCELoss-Reproduce" -> "yikun2019/PENCIL"
"HanxunH/SCELoss-Reproduce" -> "HanxunH/Active-Passive-Losses"
"HanxunH/SCELoss-Reproduce" -> "LiJunnan1992/DivideMix"
"HanxunH/SCELoss-Reproduce" -> "YU1ut/JointOptimization"
"simondlevy/OpenCV-Python-Hacks" -> "abidrahmank/OpenCV-Python"
"soo89/ISD-SSD" -> "ShouyangDong/tse-t"
"soo89/ISD-SSD" -> "soo89/CSD-SSD"
"HumanSignal/label-studio-converter" -> "HumanSignal/label-studio-sdk"
"HumanSignal/label-studio-converter" -> "HumanSignal/label-studio-ml-backend"
"HumanSignal/label-studio-converter" -> "HumanSignal/label-studio-transformers"
"HumanSignal/label-studio-converter" -> "HumanSignal/label-studio-frontend"
"OverLordGoldDragon/ssqueezepy" -> "fastlib/fCWT"
"OverLordGoldDragon/ssqueezepy" -> "regeirk/pycwt"
"OverLordGoldDragon/ssqueezepy" -> "kymatio/kymatio"
"OverLordGoldDragon/ssqueezepy" -> "aaren/wavelets"
"OverLordGoldDragon/ssqueezepy" -> "PyWavelets/pywt"
"OverLordGoldDragon/ssqueezepy" -> "laszukdawid/PyEMD"
"OverLordGoldDragon/ssqueezepy" -> "ebrevdo/synchrosqueezing"
"OverLordGoldDragon/ssqueezepy" -> "vrcarva/vmdpy"
"OverLordGoldDragon/ssqueezepy" -> "MVRonkin/dsatools"
"OverLordGoldDragon/ssqueezepy" -> "pistonly/modwtpy"
"OverLordGoldDragon/ssqueezepy" -> "raphaelvallat/antropy" ["e"=1]
"OverLordGoldDragon/ssqueezepy" -> "alsauve/scaleogram"
"OverLordGoldDragon/ssqueezepy" -> "tomrunia/PyTorchWavelets"
"OverLordGoldDragon/ssqueezepy" -> "taspinar/siml"
"OverLordGoldDragon/ssqueezepy" -> "scikit-signal/tftb"
"tanglang96/DataLoaders_DALI" -> "Lyken17/Efficient-PyTorch"
"tanglang96/DataLoaders_DALI" -> "yaysummeriscoming/DALI_pytorch_demo"
"tanglang96/DataLoaders_DALI" -> "NVIDIA/DALI"
"tanglang96/DataLoaders_DALI" -> "megvii-model/ShuffleNet-Series"
"tanglang96/DataLoaders_DALI" -> "JiahuiYu/slimmable_networks" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "zhijian-liu/torchprofile" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "chenxin061/pdarts" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "tczhangzhi/pytorch-distributed"
"tanglang96/DataLoaders_DALI" -> "mit-han-lab/proxylessnas" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "D-X-Y/AutoDL-Projects" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "facebookresearch/mobile-vision" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "Duankaiwen/CenterNet"
"tanglang96/DataLoaders_DALI" -> "guan-yuan/awesome-AutoML-and-Lightweight-Models" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "Lyken17/pytorch-OpCounter"
"tanglang96/DataLoaders_DALI" -> "facebookresearch/pycls"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "LiJunnan1992/DivideMix"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "subeeshvasu/Awesome-Learning-with-Label-Noise"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "gorkemalgan/MSLG_noisy_label"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "GuokaiLiu/Noisy-Labels-Problem-Collection"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "pxiangwu/PLC"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "shengliu66/ELR"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "PaulAlbert31/LabelNoiseCorrection"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "songhwanjun/Awesome-Noisy-Labels"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "hongxin001/JoCoR"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "microsoft/MLC"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "yikun2019/PENCIL"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "chenpf1025/noisy_label_understanding_utilizing"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "bhanML/label-noise-papers"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "LiJunnan1992/MLNT"
"gorkemalgan/deep_learning_with_noisy_labels_literature" -> "udibr/noisy_labels"
"NVIDIA/PyProf" -> "adityaiitb/pyprof2"
"NVIDIA/PyProf" -> "awwong1/torchprof"
"NVIDIA/PyProf" -> "Stonesjtu/pytorch_memlab"
"NVIDIA/PyProf" -> "pytorch/kineto" ["e"=1]
"rachelcao277/LabelImage" -> "hold-baby/label-img"
"rachelcao277/LabelImage" -> "Slava/label-tool"
"rachelcao277/LabelImage" -> "sunshengfei/ui-picture-bd-marker"
"rachelcao277/LabelImage" -> "fuyi501/ailabel-me"
"rachelcao277/LabelImage" -> "dingyang9642/AILabel"
"Corezcy/EEMD-LSTM-DO-Prediction" -> "pengchen233/EEMD-LSTM-Model"
"szymonmaszke/torchlayers" -> "imedslab/solt"
"szymonmaszke/torchlayers" -> "szymonmaszke/torchfunc"
"szymonmaszke/torchlayers" -> "szymonmaszke/torchdatasets"
"szymonmaszke/torchlayers" -> "Santosh-Gupta/SpeedTorch"
"pprp/voc2007_for_yolo_torch" -> "GiantPandaCV/yolov3-point"
"pprp/voc2007_for_yolo_torch" -> "pprp/deep_sort_yolov3_pytorch" ["e"=1]
"pprp/voc2007_for_yolo_torch" -> "BBuf/cv_tools" ["e"=1]
"pprp/voc2007_for_yolo_torch" -> "ZJU-lishuang/yolov5_prune" ["e"=1]
"pprp/voc2007_for_yolo_torch" -> "pprp/SimpleCVReproduction"
"commonsmachinery/blockhash-python" -> "commonsmachinery/blockhash"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/yolov4-tiny-keras"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/yolo3-keras"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/yolov4-tf2"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/ssd-keras"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/faster-rcnn-keras"
"bubbliiiing/yolov4-keras" -> "miemie2013/Keras-YOLOv4" ["e"=1]
"bubbliiiing/yolov4-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/yolov4-keras" -> "Ma-Dan/keras-yolo4" ["e"=1]
"bubbliiiing/yolov4-keras" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/yolov4-keras" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"mindspore-ai/infrastructure" -> "mindspore-ai/mail_templates"
"mindspore-ai/infrastructure" -> "mindspore-ai/book"
"mindspore-ai/infrastructure" -> "mindspore-ai/ms-operator"
"mindspore-ai/infrastructure" -> "mindspore-ai/hub"
"mindspore-ai/infrastructure" -> "mindspore-ai/serving"
"mindspore-ai/infrastructure" -> "mindspore-ai/community"
"mindspore-ai/infrastructure" -> "mindspore-ai/graphengine"
"mindspore-ai/infrastructure" -> "mindspore-ai/mindinsight"
"mindspore-ai/infrastructure" -> "mindspore-ai/mindspore-21-days-tutorials"
"SanghunYun/UDA_pytorch" -> "ildoonet/unsupervised-data-augmentation"
"SanghunYun/UDA_pytorch" -> "google-research/uda"
"SanghunYun/UDA_pytorch" -> "SALT-NLP/MixText" ["e"=1]
"SanghunYun/UDA_pytorch" -> "vfdev-5/UDA-pytorch"
"SanghunYun/UDA_pytorch" -> "zhoujx4/NLP-Series-text-cls"
"SanghunYun/UDA_pytorch" -> "YU1ut/MixMatch-pytorch"
"lucasjinreal/DCNv2_latest" -> "CharlesShang/DCNv2"
"lucasjinreal/DCNv2_latest" -> "lbin/DCNv2"
"lucasjinreal/DCNv2_latest" -> "MatthewHowe/DCNv2"
"lucasjinreal/DCNv2_latest" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"lucasjinreal/DCNv2_latest" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"lucasjinreal/DCNv2_latest" -> "xingyizhou/CenterNet2"
"lucasjinreal/DCNv2_latest" -> "xingyizhou/CenterTrack" ["e"=1]
"lucasjinreal/DCNv2_latest" -> "4uiiurz1/pytorch-deform-conv-v2"
"lucasjinreal/DCNv2_latest" -> "mrnabati/CenterFusion" ["e"=1]
"lucasjinreal/DCNv2_latest" -> "developer0hye/PyTorch-Deformable-Convolution-v2"
"lucasjinreal/DCNv2_latest" -> "ZrrSkywalker/MonoDETR" ["e"=1]
"lucasjinreal/DCNv2_latest" -> "zhangyp15/MonoFlex" ["e"=1]
"lucasjinreal/DCNv2_latest" -> "dlunion/tensorRTIntegrate" ["e"=1]
"lucasjinreal/DCNv2_latest" -> "GOATmessi8/ASFF"
"lucasjinreal/DCNv2_latest" -> "tteepe/DCNv2"
"HumanSignal/label-studio-frontend" -> "HumanSignal/label-studio-converter"
"HumanSignal/label-studio-frontend" -> "HumanSignal/label-studio-ml-backend"
"HumanSignal/label-studio-frontend" -> "HumanSignal/dm2"
"HumanSignal/label-studio-frontend" -> "HumanSignal/label-studio-transformers"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/ssd-keras"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/yolo3-keras"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/mask-rcnn-keras"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/yolov4-keras"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/poems-generator"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/faster-rcnn-tf2"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/yolov4-tiny-keras"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/faster-rcnn-keras" -> "bubbliiiing/Mobilenet-SSD-Essay"
"mindspore-ai/mindarmour" -> "mindspore-ai/mail_templates"
"mindspore-ai/mindarmour" -> "mindspore-ai/mindinsight"
"mindspore-ai/mindarmour" -> "mindspore-ai/book"
"mindspore-ai/mindarmour" -> "mindspore-ai/graphengine"
"mindspore-ai/mindarmour" -> "mindspore-ai/ms-operator"
"mindspore-ai/mindarmour" -> "mindspore-ai/community"
"mindspore-ai/mindarmour" -> "mindspore-ai/hub"
"mindspore-ai/mindarmour" -> "mindspore-ai/serving"
"mindspore-ai/mindarmour" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/mindarmour" -> "mindspore-ai/course"
"mindspore-ai/mindarmour" -> "mindspore-ai/docs"
"mindspore-ai/mindarmour" -> "mindspore-ai/akg"
"mindspore-ai/mindarmour" -> "mindspore-ai/infrastructure"
"ZJULearning/ttfnet" -> "FateScript/CenterNet-better"
"ZJULearning/ttfnet" -> "JDAI-CV/centerX"
"ZJULearning/ttfnet" -> "xingyizhou/CenterNet2"
"ZJULearning/ttfnet" -> "lucasjinreal/CenterNet_Pro_Max"
"ZJULearning/ttfnet" -> "lizhe960118/CenterNet"
"ZJULearning/ttfnet" -> "sfzhang15/ATSS"
"ZJULearning/ttfnet" -> "microsoft/RepPoints"
"ZJULearning/ttfnet" -> "Megvii-BaseDetection/BorderDet"
"ZJULearning/ttfnet" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"ZJULearning/ttfnet" -> "Scalsol/RepPointsV2"
"ZJULearning/ttfnet" -> "zhangxiaosong18/FreeAnchor"
"ZJULearning/ttfnet" -> "implus/GFocalV2"
"ZJULearning/ttfnet" -> "Anymake/DRN_CVPR2020" ["e"=1]
"ZJULearning/ttfnet" -> "PeizeSun/OneNet"
"ZJULearning/ttfnet" -> "ZeroE04/R-CenterNet" ["e"=1]
"bubbliiiing/Siamese-keras" -> "bubbliiiing/Siamese-tf2"
"bubbliiiing/Siamese-keras" -> "bubbliiiing/ssd_keras"
"bubbliiiing/Siamese-keras" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/Siamese-keras" -> "bubbliiiing/Optimization_Algorithm"
"AlanChou/Truncated-Loss" -> "HanxunH/SCELoss-Reproduce"
"AlanChou/Truncated-Loss" -> "LiJunnan1992/MLNT"
"AlanChou/Truncated-Loss" -> "xiaoboxia/CDR"
"HanxunH/Active-Passive-Losses" -> "xingjunm/dimensionality-driven-learning"
"HanxunH/Active-Passive-Losses" -> "HanxunH/RobustWRN"
"demuxin/pytorch_tricks" -> "lartpang/PyTorchTricks"
"demuxin/pytorch_tricks" -> "quincyliang/nlp-data-augmentation" ["e"=1]
"demuxin/pytorch_tricks" -> "zasdfgbnm/TorchSnooper"
"hongxin001/JoCoR" -> "xingruiyu/coteaching_plus"
"hongxin001/JoCoR" -> "LiJunnan1992/DivideMix"
"hongxin001/JoCoR" -> "LiJunnan1992/MLNT"
"hongxin001/JoCoR" -> "bhanML/Co-teaching"
"tzxiang/awesome-semantic-understanding-for-aerial-scene" -> "ming71/RIDet" ["e"=1]
"signatrix/efficientdet" -> "toandaominh1997/EfficientDet.Pytorch"
"signatrix/efficientdet" -> "xuannianz/EfficientDet"
"signatrix/efficientdet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"signatrix/efficientdet" -> "rwightman/efficientdet-pytorch"
"signatrix/efficientdet" -> "WongKinYiu/CrossStagePartialNetworks"
"signatrix/efficientdet" -> "SweetyTian/efficientdet" ["e"=1]
"signatrix/efficientdet" -> "kentaroy47/efficientdet.pytorch" ["e"=1]
"signatrix/efficientdet" -> "google/automl"
"signatrix/efficientdet" -> "VDIGPKU/CBNet_caffe"
"signatrix/efficientdet" -> "coderhss/efficientdet-pytorch"
"signatrix/efficientdet" -> "GOATmessi8/ASFF"
"signatrix/efficientdet" -> "sfzhang15/ATSS"
"signatrix/efficientdet" -> "youngwanLEE/vovnet-detectron2"
"signatrix/efficientdet" -> "implus/GFocal"
"signatrix/efficientdet" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"albumentations-team/autoalbument" -> "moskomule/dda"
"taokong/FoveaBox" -> "zhangxiaosong18/FreeAnchor"
"taokong/FoveaBox" -> "thangvubk/Cascade-RPN"
"taokong/FoveaBox" -> "microsoft/RepPoints"
"taokong/FoveaBox" -> "sfzhang15/ATSS"
"taokong/FoveaBox" -> "yqyao/FCOS_PLUS"
"taokong/FoveaBox" -> "Duankaiwen/CenterNet"
"taokong/FoveaBox" -> "Ranchentx/EFGRNet"
"taokong/FoveaBox" -> "OceanPang/Libra_R-CNN"
"taokong/FoveaBox" -> "KiveeDong/CentripetalNet"
"taokong/FoveaBox" -> "Leotju/MGAN"
"taokong/FoveaBox" -> "tianzhi0549/FCOS"
"taokong/FoveaBox" -> "xingyizhou/ExtremeNet"
"taokong/FoveaBox" -> "KimSoybean/ScratchDet"
"taokong/FoveaBox" -> "hdjang/Feature-Selective-Anchor-Free-Module-for-Single-Shot-Object-Detection"
"taokong/FoveaBox" -> "mrlooi/rotated_maskrcnn" ["e"=1]
"ParallelDots/generic-sku-detection-benchmark" -> "tyomj/product_detection"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/poems-generator"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/ssd_keras"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/classic-convolution-network"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/Transfer-Learning"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/RFB-keras"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/QRcode-location"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/mtcnn-keras"
"bubbliiiing/Keras-Attention" -> "bubbliiiing/Reinforcement-Learning"
"youngwanLEE/vovnet-detectron2" -> "youngwanLEE/centermask2"
"youngwanLEE/vovnet-detectron2" -> "youngwanLEE/CenterMask"
"youngwanLEE/vovnet-detectron2" -> "sxhxliang/detectron2_backbone"
"youngwanLEE/vovnet-detectron2" -> "stigma0617/VoVNet.pytorch"
"youngwanLEE/vovnet-detectron2" -> "youngwanLEE/VoV3D" ["e"=1]
"youngwanLEE/vovnet-detectron2" -> "chongruo/detectron2-ResNeSt"
"youngwanLEE/vovnet-detectron2" -> "implus/GFocal"
"youngwanLEE/vovnet-detectron2" -> "youngwanLEE/VoVNet-RefineDet"
"youngwanLEE/vovnet-detectron2" -> "FateScript/CenterNet-better"
"youngwanLEE/vovnet-detectron2" -> "Sense-X/TSD"
"thangvubk/Cascade-RPN" -> "zhangxiaosong18/FreeAnchor"
"thangvubk/Cascade-RPN" -> "jshilong/SEPC"
"thangvubk/Cascade-RPN" -> "HardLaugh/EfficientDet-bifpn" ["e"=1]
"thangvubk/Cascade-RPN" -> "taokong/FoveaBox"
"thangvubk/Cascade-RPN" -> "zl1994/IoU-Uniform-R-CNN"
"ZFTurbo/Mean-Average-Precision-for-Boxes" -> "bes-dev/mean_average_precision"
"zhangxiaosong18/FreeAnchor" -> "microsoft/RepPoints"
"zhangxiaosong18/FreeAnchor" -> "sfzhang15/ATSS"
"zhangxiaosong18/FreeAnchor" -> "taokong/FoveaBox"
"zhangxiaosong18/FreeAnchor" -> "Duankaiwen/CenterNet"
"zhangxiaosong18/FreeAnchor" -> "tianzhi0549/FCOS"
"zhangxiaosong18/FreeAnchor" -> "thangvubk/Cascade-RPN"
"zhangxiaosong18/FreeAnchor" -> "ethanhe42/KL-Loss"
"zhangxiaosong18/FreeAnchor" -> "yqyao/FCOS_PLUS"
"zhangxiaosong18/FreeAnchor" -> "vacancy/PreciseRoIPooling"
"zhangxiaosong18/FreeAnchor" -> "kemaloksuz/ObjectDetectionImbalance"
"zhangxiaosong18/FreeAnchor" -> "princeton-vl/CornerNet"
"zhangxiaosong18/FreeAnchor" -> "princeton-vl/CornerNet-Lite"
"zhangxiaosong18/FreeAnchor" -> "STVIR/Grid-R-CNN"
"zhangxiaosong18/FreeAnchor" -> "xingyizhou/ExtremeNet"
"zhangxiaosong18/FreeAnchor" -> "chenjoya/sampling-free" ["e"=1]
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "facebookresearch/classifier-balancing"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "frank-xwang/RIDE-LongTailRecognition"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "megvii-research/BBN"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "kaidic/LDAM-DRW"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "zhmiao/OpenLongTailRecognition-OLTR"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "YyzHarry/imbalanced-semi-self"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "richardaecn/class-balanced-loss"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "wutong16/DistributionBalancedLoss"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "xialeiliu/Awesome-LongTailed-Recognition"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "Stomach-ache/awesome-long-tail-learning"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "Vanint/SADE-AgnosticLT"
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "yue-zhongqi/ifsl" ["e"=1]
"KaihuaTang/Long-Tailed-Recognition.pytorch" -> "KaihuaTang/Generalized-Long-Tailed-Benchmarks.pytorch"
"michaelrzhang/lookahead" -> "mgrankin/over9000"
"michaelrzhang/lookahead" -> "alphadl/lookahead.pytorch"
"michaelrzhang/lookahead" -> "lonePatient/lookahead_pytorch"
"Epiphqny/SOLOv2" -> "Epiphqny/CondInst"
"Epiphqny/SOLOv2" -> "WXinlong/SOLO"
"Epiphqny/SOLOv2" -> "OpenFirework/pytorch_solov2" ["e"=1]
"Epiphqny/SOLOv2" -> "Epiphqny/SOLO"
"bubbliiiing/retinaface-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/retinaface-keras" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/retinaface-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/retinaface-keras" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/retinaface-keras" -> "bubbliiiing/retinaface-tf2"
"bubbliiiing/retinaface-keras" -> "bubbliiiing/facenet-retinaface-keras"
"bubbliiiing/retinaface-tf2" -> "bubbliiiing/ssd_keras"
"bubbliiiing/retinaface-tf2" -> "bubbliiiing/retinaface-keras"
"scikit-signal/tftb" -> "jaidevd/pyhht"
"scikit-signal/tftb" -> "chendaichao/Hilbert-Huang-transform"
"scikit-signal/tftb" -> "HHTpy/HHTpywrapper"
"murtazahassan/Digits-Classification" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Digits-Classification" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Digits-Classification" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Digits-Classification" -> "murtazahassan/Learn-Python"
"murtazahassan/Digits-Classification" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Digits-Classification" -> "murtazahassan/Angle-Finder"
"murtazahassan/Digits-Classification" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Digits-Classification" -> "murtazahassan/Object-Following-Robot"
"Duankaiwen/CPNDet" -> "cccorn/AP-loss"
"Duankaiwen/CPNDet" -> "jshilong/SEPC"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/poems-generator"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/classic-convolution-network"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/ssd_keras"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/Reinforcement-Learning"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/Keras-Attention"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/RFB-keras"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/QRcode-location"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/Transfer-Learning" -> "bubbliiiing/ssd-keras"
"feiyuhuahuo/Yolact_minimal" -> "DataXujing/yolact_pytorch"
"feiyuhuahuo/Yolact_minimal" -> "JialeCao001/SipMask"
"feiyuhuahuo/Yolact_minimal" -> "WisconsinAIVision/yolact_edge"
"feiyuhuahuo/Yolact_minimal" -> "OpenFirework/pytorch_solov2" ["e"=1]
"feiyuhuahuo/Yolact_minimal" -> "Epiphqny/SOLO"
"feiyuhuahuo/Yolact_minimal" -> "hpc203/yolact-opencv-dnn-cpp-python" ["e"=1]
"feiyuhuahuo/Yolact_minimal" -> "Epiphqny/Yolact_fcos"
"feiyuhuahuo/Yolact_minimal" -> "bubbliiiing/yolact-pytorch"
"feiyuhuahuo/Yolact_minimal" -> "bubbliiiing/yolact-keras"
"feiyuhuahuo/Yolact_minimal" -> "youngwanLEE/CenterMask"
"feiyuhuahuo/Yolact_minimal" -> "youngwanLEE/centermask2"
"implus/GFocalV2" -> "implus/GFocal"
"implus/GFocalV2" -> "hyz-xmaster/VarifocalNet"
"implus/GFocalV2" -> "sfzhang15/ATSS"
"implus/GFocalV2" -> "Megvii-BaseDetection/DeFCN"
"implus/GFocalV2" -> "fcjian/TOOD"
"implus/GFocalV2" -> "xingyizhou/CenterNet2"
"implus/GFocalV2" -> "kkhoot/PAA"
"implus/GFocalV2" -> "PeizeSun/SparseR-CNN"
"implus/GFocalV2" -> "PeizeSun/OneNet"
"implus/GFocalV2" -> "cccorn/AP-loss"
"implus/GFocalV2" -> "chensnathan/YOLOF"
"implus/GFocalV2" -> "megvii-model/YOLOF"
"implus/GFocalV2" -> "Megvii-BaseDetection/BorderDet"
"implus/GFocalV2" -> "Scalsol/RepPointsV2"
"implus/GFocalV2" -> "jshilong/SEPC"
"bubbliiiing/GAN-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/GAN-keras" -> "bubbliiiing/poems-generator"
"bubbliiiing/GAN-keras" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/GAN-keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/GAN-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/GAN-keras" -> "bubbliiiing/Keras-Attention"
"bubbliiiing/GAN-keras" -> "bubbliiiing/dcgan-keras"
"bubbliiiing/GAN-keras" -> "bubbliiiing/Transfer-Learning"
"bubbliiiing/GAN-keras" -> "bubbliiiing/mtcnn-keras"
"bubbliiiing/GAN-keras" -> "bubbliiiing/ssd_keras"
"bubbliiiing/GAN-keras" -> "bubbliiiing/classic-convolution-network"
"bubbliiiing/GAN-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/GAN-keras" -> "bubbliiiing/ssd-keras"
"bubbliiiing/GAN-keras" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/GAN-keras" -> "bubbliiiing/Data-Structure-and-Algorithm"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "kekmodel/FixMatch-pytorch"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "YU1ut/MixMatch-pytorch"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "iBelieveCJM/pseudo_label-pytorch"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "yassouali/awesome-semi-supervised-learning"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "google-research/fixmatch"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "TorchSSL/TorchSSL"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "SHI-Labs/Semi-Supervised-Transfer-Learning"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "CuriousAI/mean-teacher"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "perrying/realistic-ssl-evaluation-pytorch"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "google-research/mixmatch"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "lyakaap/VAT-pytorch"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "vikasverma1077/ICT"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "nayeemrizve/ups"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "perrying/pytorch-consistency-regularization"
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" -> "LeeDoYup/FixMatch-pytorch" ["e"=1]
"bbuing9/DARP" -> "YUE-FAN/CoSSL"
"bbuing9/DARP" -> "google-research/crest"
"bbuing9/DARP" -> "ytaek-oh/daso"
"bbuing9/DARP" -> "LeeHyuck/ABC"
"nickkunz/smogn" -> "paobranco/SMOGN-LIDTA17"
"nickkunz/smogn" -> "YyzHarry/imbalanced-regression"
"nickkunz/smogn" -> "paobranco/ImbalancedLearningRegression"
"nickkunz/smogn" -> "nickkunz/nestedhyperboost"
"nickkunz/smogn" -> "SteiMi/density-based-weighting-for-imbalanced-regression"
"nickkunz/smogn" -> "SteiMi/denseweight"
"nickkunz/smogn" -> "CDonnerer/xgboost-distribution" ["e"=1]
"MAhaitao999/digital_image_processing" -> "qcymkxyc/Image-Process"
"MAhaitao999/digital_image_processing" -> "LiuFG/digital_image_process"
"MAhaitao999/digital_image_processing" -> "Ultrasty/Digital-Image-Processing"
"bonlime/pytorch-tools" -> "MyLtYkRiTiK/ComputerVision_Tutorials_in_Russian"
"szymonmaszke/torchfunc" -> "szymonmaszke/torchdatasets"
"shinya7y/UniverseNet" -> "hyz-xmaster/swa_object_detection" ["e"=1]
"shinya7y/UniverseNet" -> "VDIGPKU/CBNetV2"
"shinya7y/UniverseNet" -> "hyz-xmaster/VarifocalNet"
"shinya7y/UniverseNet" -> "ZFTurbo/Weighted-Boxes-Fusion"
"shinya7y/UniverseNet" -> "microsoft/SoftTeacher"
"shinya7y/UniverseNet" -> "amirassov/kaggle-global-wheat-detection" ["e"=1]
"shinya7y/UniverseNet" -> "shinya7y/WaymoCOCO"
"shinya7y/UniverseNet" -> "muzishen/VIPriors-Object-Detection-Challenge" ["e"=1]
"shinya7y/UniverseNet" -> "jshilong/SEPC"
"shinya7y/UniverseNet" -> "implus/GFocalV2"
"shinya7y/UniverseNet" -> "SamsungLabs/iterdet"
"shinya7y/UniverseNet" -> "joe-siyuan-qiao/DetectoRS"
"shinya7y/UniverseNet" -> "xingyizhou/CenterNet2"
"mindspore-ai/graphengine" -> "mindspore-ai/mail_templates"
"mindspore-ai/graphengine" -> "mindspore-ai/book"
"mindspore-ai/graphengine" -> "mindspore-ai/community"
"mindspore-ai/graphengine" -> "mindspore-ai/ms-operator"
"mindspore-ai/graphengine" -> "mindspore-ai/hub"
"mindspore-ai/graphengine" -> "mindspore-ai/mindinsight"
"mindspore-ai/graphengine" -> "mindspore-ai/serving"
"mindspore-ai/graphengine" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/graphengine" -> "mindspore-ai/course"
"mindspore-ai/graphengine" -> "mindspore-ai/akg"
"mindspore-ai/graphengine" -> "mindspore-ai/docs"
"mindspore-ai/graphengine" -> "mindspore-ai/mindarmour"
"mindspore-ai/graphengine" -> "mindspore-ai/infrastructure"
"lvjiaqi77/PRODEN" -> "palm-ml/valen"
"lvjiaqi77/PRODEN" -> "hongwei-wen/LW-loss-for-partial-label"
"lvjiaqi77/PRODEN" -> "wwangwitsel/awesome-partial-label-learning"
"lvjiaqi77/PRODEN" -> "wu-dd/Advances-in-Partial-and-Complementary-Label-Learning"
"lvjiaqi77/PRODEN" -> "hbzju/SoLar"
"wang3702/EnAET" -> "maple-research-lab/EnAET"
"luxonis/depthai-python" -> "luxonis/depthai-experiments"
"luxonis/depthai-python" -> "luxonis/depthai"
"luxonis/depthai-python" -> "luxonis/depthai-core"
"luxonis/depthai-python" -> "luxonis/depthai-ml-training"
"luxonis/depthai-python" -> "luxonis/depthai-hardware"
"luxonis/depthai-python" -> "luxonis/depthai-ros"
"luxonis/depthai-python" -> "geaxgx/depthai_blazepose"
"luxonis/depthai-python" -> "luxonis/depthai-tutorials"
"luxonis/depthai-python" -> "luxonis/depthai-gui"
"luxonis/depthai-python" -> "luxonis/esp32-spi-message-demo"
"luxonis/depthai-python" -> "geaxgx/depthai_hand_tracker"
"luxonis/depthai-python" -> "luxonis/depthai-docs-website"
"FLyingLSJ/Computer_Vision_Project" -> "tinyzqh/Opencv-Computer-Vision-Practice-Python-"
"FLyingLSJ/Computer_Vision_Project" -> "FLyingLSJ/PyTorch-YOLOv3-master"
"benanne/morb" -> "wuaalb/keras_extensions"
"murtazahassan/Document-Scanner" -> "murtazahassan/Angle-Finder"
"murtazahassan/Document-Scanner" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Document-Scanner" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"murtazahassan/Document-Scanner" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Document-Scanner" -> "murtazahassan/Learn-Python"
"murtazahassan/Document-Scanner" -> "murtazahassan/Face-Recognition"
"murtazahassan/Document-Scanner" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Document-Scanner" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Document-Scanner" -> "murtazahassan/Object-Following-Robot"
"murtazahassan/Document-Scanner" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Document-Scanner" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Document-Scanner" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Document-Scanner" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/Document-Scanner" -> "murtazahassan/Digits-Classification"
"murtazahassan/Document-Scanner" -> "murtazahassan/Real-Time-Object-Measurement"
"PaddlePaddle/PLSC" -> "PaddlePaddle/PASSL"
"PaddlePaddle/PLSC" -> "PaddlePaddle/benchmark"
"jshilong/SEPC" -> "Sense-X/TSD"
"jshilong/SEPC" -> "JialeCao001/D2Det" ["e"=1]
"jshilong/SEPC" -> "Gus-Guo/AugFPN" ["e"=1]
"jshilong/SEPC" -> "Caojunxu/AC-FPN"
"jshilong/SEPC" -> "caiqi/sample-weighting-network" ["e"=1]
"jshilong/SEPC" -> "thangvubk/Cascade-RPN"
"jshilong/SEPC" -> "implus/GFocalV2"
"jshilong/SEPC" -> "sfzhang15/ATSS"
"jshilong/SEPC" -> "kkhoot/PAA"
"jshilong/SEPC" -> "Duankaiwen/CPNDet"
"jshilong/SEPC" -> "Megvii-BaseDetection/DeFCN"
"jshilong/SEPC" -> "ggjy/HitDet.pytorch" ["e"=1]
"jshilong/SEPC" -> "StevenGrove/DynamicHead"
"jshilong/SEPC" -> "jshilong/FisherPruning" ["e"=1]
"jshilong/SEPC" -> "Scalsol/RepPointsV2"
"hkzhang95/DynamicRCNN" -> "hkzhang95/Awesome-CV-bibfiles"
"hkzhang95/DynamicRCNN" -> "Megvii-BaseDetection/BorderDet"
"luxonis/depthai-ml-training" -> "luxonis/depthai-python"
"luxonis/depthai-ml-training" -> "luxonis/depthai-tutorials"
"luxonis/depthai-ml-training" -> "luxonis/depthai-core"
"luxonis/depthai-ml-training" -> "luxonis/depthai-experiments"
"guichristmann/edge-tpu-tiny-yolo" -> "NobuoTsukamoto/tflite-cv-example"
"LiuFG/digital_image_process" -> "qcymkxyc/Image-Process"
"LiuFG/digital_image_process" -> "MAhaitao999/digital_image_processing"
"LiuFG/digital_image_process" -> "Ultrasty/Digital-Image-Processing"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Document-Scanner"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Face-Recognition"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Learn-Python"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/darknet"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Angle-Finder"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/OpenCV-Sudoku-Solver"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Digits-Classification"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Real-Time-Object-Measurement"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Learn-OpenCV-cpp-in-4-Hours"
"ValYouW/tflite-dist" -> "ValYouW/crossplatform-tflite-object-detecion"
"ValYouW/tflite-dist" -> "ValYouW/tflite-win-c"
"ValYouW/tflite-dist" -> "cuongvng/TF-Lite-Cpp-API-for-Android"
"ValYouW/tflite-dist" -> "karthickai/tflite"
"thomasbrandon/mish-cuda" -> "lessw2020/Ranger-Mish-ImageWoof-5"
"lvis-dataset/lvis-api" -> "tztztztztz/eql.detectron2"
"lvis-dataset/lvis-api" -> "thangvubk/Cascade-RPN"
"lvis-dataset/lvis-api" -> "GothicAi/Instaboost"
"lvis-dataset/lvis-api" -> "yqyao/FCOS_PLUS"
"shayanalibhatti/Retail-Store-Item-Detection-using-YOLOv5" -> "bhimar/GrocerEye"
"shayanalibhatti/Retail-Store-Item-Detection-using-YOLOv5" -> "intel-iot-devkit/smart-retail-analytics"
"shayanalibhatti/Retail-Store-Item-Detection-using-YOLOv5" -> "Media-Smart/SKU110K-DenseDet" ["e"=1]
"shayanalibhatti/Retail-Store-Item-Detection-using-YOLOv5" -> "sayakpaul/Grocery-Product-Detection"
"shayanalibhatti/Retail-Store-Item-Detection-using-YOLOv5" -> "lucamarini22/Product-Recognition-on-Store-Shelves"
"jrzaurin/LightGBM-with-Focal-Loss" -> "jhwjhw0123/Imbalance-XGBoost"
"jrzaurin/LightGBM-with-Focal-Loss" -> "lucacarniato/multi-class-lightgbm-with-focal-loss"
"chaoqichen/HTCN" -> "ChrisAllenMing/GPA-detection"
"chaoqichen/HTCN" -> "megvii-research/CR-DA-DET"
"chaoqichen/HTCN" -> "harsh-99/SCL"
"chaoqichen/HTCN" -> "xinge008/SCDA"
"chaoqichen/HTCN" -> "VisionLearningGroup/DA_Detection"
"chaoqichen/HTCN" -> "kevinhkhsu/DA_detection"
"chaoqichen/HTCN" -> "chengchunhsu/EveryPixelMatters"
"chaoqichen/HTCN" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"chaoqichen/HTCN" -> "uitrbn/CST_DA_detection"
"chaoqichen/HTCN" -> "caiqi/mean-teacher-cross-domain-detection"
"chaoqichen/HTCN" -> "TKKim93/DivMatch"
"chaoqichen/HTCN" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"chaoqichen/HTCN" -> "kinredon/umt"
"chaoqichen/HTCN" -> "czzbb/I3Net"
"chaoqichen/HTCN" -> "kinredon/DA_Detection_Material"
"ahmetius/LP-DeepSSL" -> "EricArazo/PseudoLabeling"
"EricArazo/PseudoLabeling" -> "benathi/fastswa-semi-sup"
"EricArazo/PseudoLabeling" -> "ahmetius/LP-DeepSSL"
"EricArazo/PseudoLabeling" -> "iBelieveCJM/pseudo_label-pytorch"
"EricArazo/PseudoLabeling" -> "siit-vtt/semi-supervised-learning-pytorch"
"EricArazo/PseudoLabeling" -> "PaulAlbert31/LabelNoiseCorrection"
"iwatake2222/play_with_tensorrt" -> "iwatake2222/InferenceHelper"
"iwatake2222/play_with_tensorrt" -> "iwatake2222/play_with_tflite"
"iwatake2222/play_with_tensorrt" -> "NobuoTsukamoto/tensorrt-examples"
"LiJunnan1992/DivideMix" -> "shengliu66/ELR"
"LiJunnan1992/DivideMix" -> "hongxin001/JoCoR"
"LiJunnan1992/DivideMix" -> "YU1ut/MixMatch-pytorch"
"LiJunnan1992/DivideMix" -> "gorkemalgan/deep_learning_with_noisy_labels_literature"
"LiJunnan1992/DivideMix" -> "subeeshvasu/Awesome-Learning-with-Label-Noise"
"LiJunnan1992/DivideMix" -> "PaulAlbert31/LabelNoiseCorrection"
"LiJunnan1992/DivideMix" -> "bhanML/Co-teaching"
"LiJunnan1992/DivideMix" -> "weijiaheng/Advances-in-Label-Noise-Learning"
"LiJunnan1992/DivideMix" -> "songhwanjun/Awesome-Noisy-Labels"
"LiJunnan1992/DivideMix" -> "HanxunH/SCELoss-Reproduce"
"LiJunnan1992/DivideMix" -> "UCSC-REAL/cifar-10-100n"
"LiJunnan1992/DivideMix" -> "kekmodel/FixMatch-pytorch"
"LiJunnan1992/DivideMix" -> "LiJunnan1992/MLNT"
"LiJunnan1992/DivideMix" -> "google-research/fixmatch"
"LiJunnan1992/DivideMix" -> "ContrastToDivide/C2D"
"luxonis/depthai-hardware" -> "luxonis/depthai"
"luxonis/depthai-hardware" -> "luxonis/depthai-python"
"luxonis/depthai-hardware" -> "luxonis/depthai-experiments"
"luxonis/depthai-hardware" -> "luxonis/depthai-core"
"luxonis/depthai-hardware" -> "luxonis/depthai-ros"
"luxonis/depthai-hardware" -> "luxonis/depthai-ml-training"
"luxonis/depthai-hardware" -> "luxonis/depthai-tutorials"
"luxonis/depthai-hardware" -> "ibaiGorordo/ONNX-CREStereo-Depth-Estimation" ["e"=1]
"yaysummeriscoming/DALI_pytorch_demo" -> "tanglang96/DataLoaders_DALI"
"bubbliiiing/efficientnet-yolo3-keras" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/efficientnet-yolo3-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/efficientnet-yolo3-keras" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/efficientnet-yolo3-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/efficientnet-yolo3-keras" -> "bubbliiiing/retinaface-keras"
"hyz-xmaster/VarifocalNet" -> "implus/GFocalV2"
"hyz-xmaster/VarifocalNet" -> "hyz-xmaster/swa_object_detection" ["e"=1]
"hyz-xmaster/VarifocalNet" -> "Scalsol/RepPointsV2"
"hyz-xmaster/VarifocalNet" -> "Megvii-BaseDetection/DeFCN"
"hyz-xmaster/VarifocalNet" -> "fcjian/TOOD"
"hyz-xmaster/VarifocalNet" -> "megvii-model/YOLOF"
"hyz-xmaster/VarifocalNet" -> "PeizeSun/OneNet"
"hyz-xmaster/VarifocalNet" -> "implus/GFocal"
"hyz-xmaster/VarifocalNet" -> "strongwolf/DW" ["e"=1]
"hyz-xmaster/VarifocalNet" -> "kkhoot/PAA"
"hyz-xmaster/VarifocalNet" -> "Megvii-BaseDetection/OTA"
"hyz-xmaster/VarifocalNet" -> "sfzhang15/ATSS"
"hyz-xmaster/VarifocalNet" -> "Megvii-BaseDetection/BorderDet"
"hyz-xmaster/VarifocalNet" -> "HikariTJU/LD" ["e"=1]
"hyz-xmaster/VarifocalNet" -> "VDIGPKU/CBNetV2"
"megvii-model/CrowdDetection" -> "xg-chu/CrowdDet"
"megvii-model/CrowdDetection" -> "SamsungLabs/iterdet"
"megvii-model/CrowdDetection" -> "Megvii-BaseDetection/DeFCN"
"google-research/ssl_detection" -> "facebookresearch/unbiased-teacher"
"google-research/ssl_detection" -> "soo89/CSD-SSD"
"google-research/ssl_detection" -> "microsoft/SoftTeacher"
"google-research/ssl_detection" -> "Megvii-BaseDetection/DenseTeacher"
"google-research/ssl_detection" -> "chenbinghui1/DSL"
"google-research/ssl_detection" -> "ligang-cs/PseCo"
"google-research/ssl_detection" -> "wonheeML/mtl-ssl"
"google-research/ssl_detection" -> "NVlabs/wetectron" ["e"=1]
"google-research/ssl_detection" -> "soo89/CSD-RFCN"
"google-research/ssl_detection" -> "amirbar/DETReg" ["e"=1]
"google-research/ssl_detection" -> "mightyzau/Instant-Teaching"
"google-research/ssl_detection" -> "google-research/fixmatch"
"google-research/ssl_detection" -> "VisionLearningGroup/DA_Detection"
"google-research/ssl_detection" -> "YU1ut/MixMatch-pytorch"
"google-research/ssl_detection" -> "kekmodel/FixMatch-pytorch"
"shaohua0116/ICLR2020-OpenReviewData" -> "evanzd/ICLR2021-OpenReviewData"
"shaohua0116/ICLR2020-OpenReviewData" -> "shaohua0116/ICLR2019-OpenReviewData"
"buhuixiezuowendelihua/TorchVision_Maskrcnn" -> "Okery/PyTorch-Simple-MaskRCNN"
"buhuixiezuowendelihua/TorchVision_Maskrcnn" -> "bubbliiiing/yolact-pytorch"
"perrying/pytorch-consistency-regularization" -> "perrying/realistic-ssl-evaluation-pytorch"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/ssd-keras"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/ssd_keras"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/poems-generator"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/mobilenet-ssd-keras" -> "bubbliiiing/count-mAP-txt"
"mgrankin/over9000" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"mgrankin/over9000" -> "lessw2020/mish"
"mgrankin/over9000" -> "lonePatient/lookahead_pytorch"
"mgrankin/over9000" -> "lessw2020/Ranger-Mish-ImageWoof-5"
"mgrankin/over9000" -> "lessw2020/Ranger21"
"mgrankin/over9000" -> "michaelrzhang/lookahead"
"mgrankin/over9000" -> "alphadl/lookahead.pytorch"
"mgrankin/over9000" -> "sdoria/SimpleSelfAttention" ["e"=1]
"mgrankin/over9000" -> "LiyuanLucasLiu/RAdam"
"mgrankin/over9000" -> "pabloppp/pytorch-tools"
"mgrankin/over9000" -> "lessw2020/Best-Deep-Learning-Optimizers"
"mgrankin/over9000" -> "Alibaba-MIIL/TResNet"
"mgrankin/over9000" -> "BloodAxe/pytorch-toolbelt"
"shengliu66/ELR" -> "LiJunnan1992/DivideMix"
"shengliu66/ELR" -> "xiaoboxia/CDR"
"shengliu66/ELR" -> "ContrastToDivide/C2D"
"shengliu66/ELR" -> "weijiaheng/Advances-in-Label-Noise-Learning"
"shengliu66/ELR" -> "pxiangwu/PLC"
"shengliu66/ELR" -> "haochenglouis/cores"
"shengliu66/ELR" -> "UCSC-REAL/cores"
"shengliu66/ELR" -> "gorkemalgan/deep_learning_with_noisy_labels_literature"
"shengliu66/ELR" -> "hongxin001/JoCoR"
"shengliu66/ELR" -> "shengliu66/SOP"
"shengliu66/ELR" -> "KentoNishi/Augmentation-for-LNL"
"shengliu66/ELR" -> "Kangningthu/ADELE"
"shengliu66/ELR" -> "DiegoOrtego/LabelNoiseMOIT"
"shengliu66/ELR" -> "UCSC-REAL/cifar-10-100n"
"shengliu66/ELR" -> "bhanML/Co-teaching"
"kevinhkhsu/DA_detection" -> "megvii-research/CR-DA-DET"
"kevinhkhsu/DA_detection" -> "caiqi/mean-teacher-cross-domain-detection"
"kevinhkhsu/DA_detection" -> "chengchunhsu/EveryPixelMatters"
"kevinhkhsu/DA_detection" -> "chaoqichen/HTCN"
"kevinhkhsu/DA_detection" -> "harsh-99/SCL"
"kevinhkhsu/DA_detection" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"kevinhkhsu/DA_detection" -> "TKKim93/DivMatch"
"kevinhkhsu/DA_detection" -> "ChrisAllenMing/GPA-detection"
"kevinhkhsu/DA_detection" -> "uitrbn/CST_DA_detection"
"kevinhkhsu/DA_detection" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"kevinhkhsu/DA_detection" -> "xinge008/SCDA"
"kevinhkhsu/DA_detection" -> "VisionLearningGroup/DA_Detection"
"kevinhkhsu/DA_detection" -> "MCG-NJU/TIA"
"kevinhkhsu/DA_detection" -> "kinredon/umt"
"fpv-iplab/DA-RetinaNet" -> "GiovanniPasq/DA-Faster-RCNN"
"fpv-iplab/DA-RetinaNet" -> "fpv-iplab/STMDA-RetinaNet"
"fpv-iplab/DA-RetinaNet" -> "XuYunqiu/H2FA_R-CNN"
"ancasag/ensembleObjectDetection" -> "ahrnbom/ensemble-objdet"
"pprp/landmark_annotation" -> "Jeff-sjtu/labelKeypoint"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Learn-Python"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Angle-Finder"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/darknet"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Object-Following-Robot"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Face-Recognition"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/OpenCV-Sudoku-Solver"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/Object-Following-Robot"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/Angle-Finder"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/Learn-Python"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/darknet"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Angle-Finder" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Angle-Finder" -> "murtazahassan/Object-Following-Robot"
"murtazahassan/Angle-Finder" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Angle-Finder" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Angle-Finder" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Angle-Finder" -> "murtazahassan/Learn-Python"
"Chien-Hung/DetVisGUI" -> "heboyong/visual-for-mmdetection"
"Chien-Hung/DetVisGUI" -> "Stephenfang51/mmdetection_visualize" ["e"=1]
"TAO-Dataset/tao" -> "feiaxyt/Winner_ECCV20_TAO"
"TAO-Dataset/tao" -> "SysCV/qdtrack" ["e"=1]
"TAO-Dataset/tao" -> "Ali2500/BURST-benchmark"
"waiyulam/ORCNN" -> "apchenstu/SLN-Amodal"
"waiyulam/ORCNN" -> "Wakeupbuddy/amodalAPI"
"waiyulam/ORCNN" -> "YutingXiao/Amodal-Segmentation-Based-on-Visible-Region-Segmentation-and-Shape-Prior"
"ChrisAllenMing/GPA-detection" -> "chaoqichen/HTCN"
"ChrisAllenMing/GPA-detection" -> "harsh-99/SCL"
"ChrisAllenMing/GPA-detection" -> "megvii-research/CR-DA-DET"
"ChrisAllenMing/GPA-detection" -> "caiqi/mean-teacher-cross-domain-detection"
"ChrisAllenMing/GPA-detection" -> "chengchunhsu/EveryPixelMatters"
"ChrisAllenMing/GPA-detection" -> "xinge008/SCDA"
"ChrisAllenMing/GPA-detection" -> "kinredon/umt"
"ChrisAllenMing/GPA-detection" -> "TKKim93/DivMatch"
"ChrisAllenMing/GPA-detection" -> "VisionLearningGroup/DA_Detection"
"ChrisAllenMing/GPA-detection" -> "uitrbn/CST_DA_detection"
"ChrisAllenMing/GPA-detection" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"ChrisAllenMing/GPA-detection" -> "kevinhkhsu/DA_detection"
"ChrisAllenMing/GPA-detection" -> "He-Zhenwei/ATF"
"ChrisAllenMing/GPA-detection" -> "basiclab/DA-OD-MEAA-PyTorch"
"ChrisAllenMing/GPA-detection" -> "He-Zhenwei/MAF"
"chengchunhsu/EveryPixelMatters" -> "megvii-research/CR-DA-DET"
"chengchunhsu/EveryPixelMatters" -> "ChrisAllenMing/GPA-detection"
"chengchunhsu/EveryPixelMatters" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"chengchunhsu/EveryPixelMatters" -> "xinge008/SCDA"
"chengchunhsu/EveryPixelMatters" -> "kevinhkhsu/DA_detection"
"chengchunhsu/EveryPixelMatters" -> "VisionLearningGroup/DA_Detection"
"chengchunhsu/EveryPixelMatters" -> "chaoqichen/HTCN"
"chengchunhsu/EveryPixelMatters" -> "harsh-99/SCL"
"chengchunhsu/EveryPixelMatters" -> "kinredon/DA_Detection_Material"
"chengchunhsu/EveryPixelMatters" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"chengchunhsu/EveryPixelMatters" -> "He-Zhenwei/ATF"
"chengchunhsu/EveryPixelMatters" -> "caiqi/mean-teacher-cross-domain-detection"
"chengchunhsu/EveryPixelMatters" -> "kinredon/umt"
"chengchunhsu/EveryPixelMatters" -> "fpv-iplab/DA-RetinaNet"
"chengchunhsu/EveryPixelMatters" -> "naoto0804/cross-domain-detection"
"CaoWGG/Mobilenetv2-CenterNet" -> "CaoWGG/CenterNet-darknet"
"cjf8899/SSD_ResNet_Pytorch" -> "J911/J911"
"cjf8899/SSD_ResNet_Pytorch" -> "DaehanKim-Korea/ResNet_SSD_Pytorch"
"cjf8899/SSD_ResNet_Pytorch" -> "cjf8899/simple_tool_pytorch"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/efficientdet-tf2"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/faster-rcnn-tf2"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/yolov4-tiny-tf2"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/RFB-keras"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/pspnet-tf2"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/yolov4-tf2"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/ssd_keras"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/mobilenet-yolov4-tf2"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/retinaface-tf2"
"bubbliiiing/ssd-tf2" -> "bubbliiiing/mobilenet-ssd-keras"
"PaddlePaddle/PALM" -> "PaddlePaddle/PaddleCraft"
"vaesl/LRF-Net" -> "vaesl/LFIP"
"vaesl/LRF-Net" -> "Ranchentx/EFGRNet"
"vaesl/LRF-Net" -> "zl1994/IoU-Uniform-R-CNN"
"vaesl/LRF-Net" -> "wei-yuma/multitrident"
"Epiphqny/SOLO" -> "Epiphqny/Yolact_fcos"
"Epiphqny/SOLO" -> "Epiphqny/CondInst"
"Epiphqny/SOLO" -> "LaoYang1994/PanopticSegmentation" ["e"=1]
"Epiphqny/SOLO" -> "xieenze/PolarMask"
"ecs-vlc/FMix" -> "snu-mllab/PuzzleMix"
"ecs-vlc/FMix" -> "clovaai/CutMix-PyTorch"
"ecs-vlc/FMix" -> "Shaoli-Huang/SnapMix"
"ecs-vlc/FMix" -> "ildoonet/cutmix"
"ecs-vlc/FMix" -> "dvlab-research/GridMask"
"ecs-vlc/FMix" -> "JasonZhang156/awesome-mixed-sample-data-augmentation"
"ecs-vlc/FMix" -> "google-research/augmix"
"ecs-vlc/FMix" -> "yelanlan/Pneumothorax-Segmentation-2nd-place-solution"
"ecs-vlc/FMix" -> "qubvel/ttach"
"lucasjinreal/CenterNet_Pro_Max" -> "bleakie/CenterMulti" ["e"=1]
"lucasjinreal/CenterNet_Pro_Max" -> "FateScript/CenterNet-better"
"lucasjinreal/CenterNet_Pro_Max" -> "tensorboy/centerpose" ["e"=1]
"lucasjinreal/CenterNet_Pro_Max" -> "ZeroE04/R-CenterNet" ["e"=1]
"lucasjinreal/CenterNet_Pro_Max" -> "xggIoU/centernet_tensorflow_wilderface_voc"
"lucasjinreal/CenterNet_Pro_Max" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"lucasjinreal/CenterNet_Pro_Max" -> "wlguan/Stronger-yolo-pytorch"
"lucasjinreal/CenterNet_Pro_Max" -> "lizhe960118/CenterNet"
"lucasjinreal/CenterNet_Pro_Max" -> "KiveeDong/CentripetalNet"
"wutong16/DistributionBalancedLoss" -> "Alibaba-MIIL/ASL"
"wutong16/DistributionBalancedLoss" -> "HCPLab-SYSU/SSGRL"
"wutong16/DistributionBalancedLoss" -> "mathkey/mssnet"
"wutong16/DistributionBalancedLoss" -> "Roche/BalancedLossNLP"
"wutong16/DistributionBalancedLoss" -> "Stomach-ache/awesome-long-tail-learning"
"wutong16/DistributionBalancedLoss" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"wutong16/DistributionBalancedLoss" -> "Yejin0111/ADD-GCN"
"wutong16/DistributionBalancedLoss" -> "wutong16/Adversarial_Long-Tail"
"wutong16/DistributionBalancedLoss" -> "megvii-research/BBN"
"wutong16/DistributionBalancedLoss" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"wutong16/DistributionBalancedLoss" -> "hguosc/visual_attention_consistency"
"wutong16/DistributionBalancedLoss" -> "facebookresearch/classifier-balancing"
"wutong16/DistributionBalancedLoss" -> "QData/C-Tran"
"wutong16/DistributionBalancedLoss" -> "frank-xwang/RIDE-LongTailRecognition"
"wutong16/DistributionBalancedLoss" -> "hellowangqian/multi-label-image-classification"
"pmeletis/panoptic_parts" -> "lxtGH/Panoptic-PartFormer"
"ryul99/pytorch-project-template" -> "ryul99/DevEnv-with-Docker"
"daixiangzi/Grad_Cam-pytorch-resnet50" -> "daixiangzi/PRCV2019"
"MioChiu/TF_CenterNet" -> "wave-club/wave_club_shop" ["e"=1]
"facebookresearch/semi-supervised-ImageNet1K-models" -> "facebookresearch/WSL-Images"
"bubbliiiing/QRcode-location" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/QRcode-location" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/QRcode-location" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/QRcode-location" -> "bubbliiiing/Reinforcement-Learning"
"bubbliiiing/QRcode-location" -> "bubbliiiing/ssd_keras"
"bubbliiiing/QRcode-location" -> "bubbliiiing/poems-generator"
"tztztztztz/eql.detectron2" -> "tztztztztz/eqlv2"
"tztztztztz/eql.detectron2" -> "FishYuLi/BalancedGroupSoftmax"
"tztztztztz/eql.detectron2" -> "JoyHuYY1412/LST_LVIS"
"tztztztztz/eql.detectron2" -> "Sense-X/TSD"
"PaddlePaddle/CINN" -> "PaddlePaddle/Perf"
"PaddlePaddle/CINN" -> "PaddlePaddle/benchmark"
"PaddlePaddle/CINN" -> "PaddlePaddle/paddle_upgrade_tool"
"PaddlePaddle/CINN" -> "PaddlePaddle/VisionTools"
"PaddlePaddle/CINN" -> "PaddlePaddle/hapi"
"PaddlePaddle/CINN" -> "PaddlePaddle/Mobile"
"PaddlePaddle/CINN" -> "PaddlePaddle/community"
"commonsmachinery/blockhash" -> "commonsmachinery/blockhash-python"
"mindspore-ai/akg" -> "mindspore-ai/hub"
"mindspore-ai/akg" -> "mindspore-ai/mail_templates"
"mindspore-ai/akg" -> "mindspore-ai/serving"
"mindspore-ai/akg" -> "mindspore-ai/book"
"mindspore-ai/akg" -> "mindspore-ai/graphengine"
"mindspore-ai/akg" -> "mindspore-ai/community"
"mindspore-ai/akg" -> "mindspore-ai/ms-operator"
"mindspore-ai/akg" -> "mindspore-ai/mindinsight"
"mindspore-ai/akg" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/akg" -> "mindspore-ai/course"
"mindspore-ai/akg" -> "mindspore-ai/docs"
"mindspore-ai/akg" -> "mindspore-ai/infrastructure"
"mindspore-ai/akg" -> "mindspore-ai/mindarmour"
"Sophia-11/Awesome-NeurIPS2019-NIPS2019" -> "extreme-assistant/nips2019"
"PaddlePaddle/epep" -> "PaddlePaddle/tape"
"PaddlePaddle/epep" -> "PaddlePaddle/examples"
"DayBreak-u/Thundernet_Pytorch" -> "qixuxiang/Pytorch_Lightweight_Network"
"DayBreak-u/Thundernet_Pytorch" -> "mohhao/TF-Keras-ThunderNet"
"DayBreak-u/Thundernet_Pytorch" -> "vaesl/LRF-Net"
"DayBreak-u/Thundernet_Pytorch" -> "DayBreak-u/thundernet_mmdetection"
"DayBreak-u/Thundernet_Pytorch" -> "DayBreak-u/Snet"
"DayBreak-u/Thundernet_Pytorch" -> "jwchoi384/Gaussian_YOLOv3" ["e"=1]
"DayBreak-u/Thundernet_Pytorch" -> "lyxok1/Tiny-DSOD" ["e"=1]
"DayBreak-u/Thundernet_Pytorch" -> "Ranchentx/EFGRNet"
"VisDrone/MultiDrone" -> "VisDrone/Multi-Drone-Multi-Object-Detection-and-Tracking"
"harsh-99/SCL" -> "TKKim93/DivMatch"
"harsh-99/SCL" -> "ChrisAllenMing/GPA-detection"
"harsh-99/SCL" -> "chaoqichen/HTCN"
"harsh-99/SCL" -> "uitrbn/CST_DA_detection"
"harsh-99/SCL" -> "caiqi/mean-teacher-cross-domain-detection"
"harsh-99/SCL" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"harsh-99/SCL" -> "Gabriel-Macias/robust_frcnn"
"harsh-99/SCL" -> "megvii-research/CR-DA-DET"
"harsh-99/SCL" -> "xinge008/SCDA"
"harsh-99/SCL" -> "VisionLearningGroup/DA_Detection"
"harsh-99/SCL" -> "kevinhkhsu/DA_detection"
"harsh-99/SCL" -> "basiclab/DA-OD-MEAA-PyTorch"
"harsh-99/SCL" -> "chengchunhsu/EveryPixelMatters"
"harsh-99/SCL" -> "harsh-99/Sequential-Data-Loader-and-Model-for-Variable-Length-Data"
"harsh-99/SCL" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"dvlab-research/GridMask" -> "CrazyVertigo/awesome-data-augmentation"
"dvlab-research/GridMask" -> "clovaai/CutMix-PyTorch"
"dvlab-research/GridMask" -> "ecs-vlc/FMix"
"dvlab-research/GridMask" -> "google-research/augmix"
"dvlab-research/GridMask" -> "cccorn/AP-loss"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/Transfer-Learning"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/poems-generator"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/Keras-Attention"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/ssd_keras"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/RFB-keras"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/mtcnn-keras"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/QRcode-location"
"bubbliiiing/classic-convolution-network" -> "bubbliiiing/Mobilenet-SSD-Essay"
"mohhao/TF-Keras-ThunderNet" -> "qixuxiang/Pytorch_Lightweight_Network"
"mohhao/TF-Keras-ThunderNet" -> "hereszsz/thundernet-tensorflow2.0"
"globalbioticinteractions/globalbioticinteractions" -> "tdwg/interaction"
"frank-xwang/towards-universal-object-detection" -> "TKKim93/DivMatch"
"frank-xwang/towards-universal-object-detection" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"frank-xwang/towards-universal-object-detection" -> "caiqi/mean-teacher-cross-domain-detection"
"frank-xwang/towards-universal-object-detection" -> "megvii-research/CR-DA-DET"
"bubbliiiing/poems-generator" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/poems-generator" -> "bubbliiiing/ssd_keras"
"bubbliiiing/poems-generator" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/poems-generator" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/poems-generator" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/poems-generator" -> "bubbliiiing/Reinforcement-Learning"
"hdjang/Feature-Selective-Anchor-Free-Module-for-Single-Shot-Object-Detection" -> "xuannianz/FSAF"
"hdjang/Feature-Selective-Anchor-Free-Module-for-Single-Shot-Object-Detection" -> "xuannianz/SAPD"
"JialeCao001/PedSurvey" -> "hasanirtiza/Pedestron"
"JialeCao001/PedSurvey" -> "CalayZhou/MBNet" ["e"=1]
"JialeCao001/PedSurvey" -> "CalayZhou/Multispectral-Pedestrian-Detection-Resource" ["e"=1]
"JialeCao001/PedSurvey" -> "Leotju/MGAN"
"JialeCao001/PedSurvey" -> "Hatmm/PED-DETR-for-Pedestrian-Detection"
"JialeCao001/PedSurvey" -> "cvgroup-njust/CityPersons"
"JialeCao001/PedSurvey" -> "SamsungLabs/iterdet"
"JialeCao001/PedSurvey" -> "sejong-rcv/MLPD-Multi-Label-Pedestrian-Detection" ["e"=1]
"JialeCao001/PedSurvey" -> "xg-chu/CrowdDet"
"wangsr126/RDSNet" -> "vaesl/LRF-Net"
"wangsr126/RDSNet" -> "yinghdb/EmbedMask"
"wangsr126/RDSNet" -> "KiveeDong/CentripetalNet"
"wangsr126/RDSNet" -> "Epiphqny/SOLO"
"wangsr126/RDSNet" -> "Ranchentx/EFGRNet"
"wangsr126/RDSNet" -> "jshilong/SEPC"
"wangsr126/RDSNet" -> "zl1994/IoU-Uniform-R-CNN"
"nightsnack/YOLObile" -> "megvii-model/YOLOF"
"nightsnack/YOLObile" -> "idstcv/ZenNAS" ["e"=1]
"nightsnack/YOLObile" -> "D0352276/CSL-YOLO"
"nightsnack/YOLObile" -> "JDAI-CV/centerX"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/poems-generator"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/ssd_keras"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/keras-face-recognition"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/mask-recognize"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/Transfer-Learning"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/classic-convolution-network"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/count-mAP-txt"
"bubbliiiing/mtcnn-keras" -> "bubbliiiing/QRcode-location"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/yolov4-tiny-keras"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/mobilenet-yolov4-tf2"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/yolov4-tf2"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/centernet-tf2"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/ssd-tf2"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/efficientdet-tf2"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/retinaface-keras"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/RFB-keras"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/mobilenet-yolov4-keras"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/yolov4-tiny-tf2" -> "bubbliiiing/faster-rcnn-tf2"
"SIlvaMFPedro/pyimagesearch" -> "meizhoubao/pyimagesearch"
"SIlvaMFPedro/pyimagesearch" -> "dloperab/PyImageSearch-CV-DL-CrashCourse"
"xg-chu/CrowdDet" -> "megvii-model/CrowdDetection"
"xg-chu/CrowdDet" -> "SamsungLabs/iterdet"
"xg-chu/CrowdDet" -> "hasanirtiza/Pedestron"
"xg-chu/CrowdDet" -> "Leotju/MGAN"
"xg-chu/CrowdDet" -> "JialeCao001/PedSurvey"
"xg-chu/CrowdDet" -> "PeizeSun/OneNet"
"xg-chu/CrowdDet" -> "Anymake/DRN_CVPR2020" ["e"=1]
"xg-chu/CrowdDet" -> "youngwanLEE/CenterMask"
"xg-chu/CrowdDet" -> "Megvii-BaseDetection/AutoAssign"
"xg-chu/CrowdDet" -> "cvgroup-njust/CityPersons"
"ContrastToDivide/C2D" -> "UCSC-REAL/cores"
"google-research/remixmatch" -> "lim3944/ReMixmatch-pytorch"
"tascj/kaggle-kuzushiji-recognition" -> "lopuhin/kaggle-kuzushiji-2019"
"tascj/kaggle-kuzushiji-recognition" -> "knjcode/kaggle-kuzushiji-recognition-2019"
"tascj/kaggle-kuzushiji-recognition" -> "see--/kuzushiji-recognition"
"tascj/kaggle-kuzushiji-recognition" -> "t-hanya/kuzushiji-recognition"
"justimyhxu/Dense-RepPoints" -> "Scalsol/RepPointsV2"
"justimyhxu/Dense-RepPoints" -> "microsoft/RepPoints"
"justimyhxu/Dense-RepPoints" -> "Megvii-BaseDetection/AutoAssign"
"justimyhxu/Dense-RepPoints" -> "FangyunWei/PointSetAnchor"
"SamsungLabs/iterdet" -> "xg-chu/CrowdDet"
"SamsungLabs/iterdet" -> "thuwyh/BAAI-2020-CrowdHuman-Baseline"
"SamsungLabs/iterdet" -> "megvii-model/CrowdDetection"
"SamsungLabs/iterdet" -> "JialeCao001/PedSurvey"
"SamsungLabs/iterdet" -> "SamsungLabs/saic_depth_completion" ["e"=1]
"SamsungLabs/iterdet" -> "hasanirtiza/Pedestron"
"SamsungLabs/iterdet" -> "megvii-research/Iter-E2EDET"
"mindspore-ai/mindinsight" -> "mindspore-ai/mail_templates"
"mindspore-ai/mindinsight" -> "mindspore-ai/book"
"mindspore-ai/mindinsight" -> "mindspore-ai/community"
"mindspore-ai/mindinsight" -> "mindspore-ai/graphengine"
"mindspore-ai/mindinsight" -> "mindspore-ai/ms-operator"
"mindspore-ai/mindinsight" -> "mindspore-ai/hub"
"mindspore-ai/mindinsight" -> "mindspore-ai/serving"
"mindspore-ai/mindinsight" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/mindinsight" -> "mindspore-ai/course"
"mindspore-ai/mindinsight" -> "mindspore-ai/docs"
"mindspore-ai/mindinsight" -> "mindspore-ai/akg"
"mindspore-ai/mindinsight" -> "mindspore-ai/mindarmour"
"mindspore-ai/mindinsight" -> "mindspore-ai/infrastructure"
"shenmusmart/VMD_python" -> "vrcarva/vmdpy"
"PaddlePaddle/Contrib" -> "PaddlePaddle/paddle_upgrade_tool"
"lessw2020/Ranger-Mish-ImageWoof-5" -> "lessw2020/mish"
"lessw2020/Ranger-Mish-ImageWoof-5" -> "nestordemeure/fastai-extensions-repository" ["e"=1]
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/ssd_keras"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/poems-generator"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/RFB-keras"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/ssd-keras"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/seq2seq-keras"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/Transfer-Learning"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/QRcode-location"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/Reinforcement-Learning"
"bubbliiiing/count-mAP-txt" -> "bubbliiiing/classic-convolution-network"
"xuannianz/keras-CenterNet" -> "see--/keras-centernet"
"xuannianz/keras-CenterNet" -> "bubbliiiing/centernet-keras"
"xuannianz/keras-CenterNet" -> "zhanghanduo/yolo3_pytorch"
"xuannianz/keras-CenterNet" -> "Stick-To/Object-Detection-Tensorflow"
"xuannianz/keras-CenterNet" -> "MioChiu/TF_CenterNet"
"xuannianz/keras-CenterNet" -> "xggIoU/centernet_tensorflow_wilderface_voc"
"xuannianz/keras-CenterNet" -> "TymonXie/tymon"
"darraghdog/rsna" -> "SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection"
"darraghdog/rsna" -> "appian42/kaggle-rsna-intracranial-hemorrhage"
"darraghdog/rsna" -> "ngxbac/Kaggle-RSNA"
"darraghdog/rsna" -> "okotaku/kaggle_rsna2019_3rd_solution"
"darraghdog/rsna" -> "XUXUSSS/kaggle_rsna2019_4th_solution"
"mikelkl/APTOS2019" -> "4uiiurz1/kaggle-aptos2019-blindness-detection"
"mikelkl/APTOS2019" -> "tahsin314/40th_place_solution_aptos2019-blindness-detection"
"luca-ant/gaze_tracker" -> "pperle/gaze-tracking"
"JasonZhang156/awesome-mixed-sample-data-augmentation" -> "alldbi/SuperMix"
"arashwan/matrixnet" -> "KiveeDong/CentripetalNet"
"arashwan/matrixnet" -> "Ranchentx/EFGRNet"
"xumingze0308/TRN.pytorch" -> "wangxiang1230/OadTR"
"xumingze0308/TRN.pytorch" -> "amazon-science/long-short-term-transformer"
"xumingze0308/TRN.pytorch" -> "rajskar/CS763Project"
"PaddlePaddle/PaddleCraft" -> "PaddlePaddle/examples"
"PaddlePaddle/PaddleCraft" -> "PaddlePaddle/Paddle-bot"
"PaddlePaddle/PaddleCraft" -> "PaddlePaddle/tape"
"murtazahassan/lineFollowerPID" -> "murtazahassan/TeslaCyberTruck-Arduino"
"DenisVorotyntsev/AutoSeries" -> "DeepBlueAI/AutoSeries"
"cvgroup-njust/CityPersons" -> "hasanirtiza/Pedestron"
"cvgroup-njust/CityPersons" -> "kalyo-zjl/APD"
"cvgroup-njust/CityPersons" -> "zehuichen123/cityperson2coco"
"cvgroup-njust/CityPersons" -> "Leotju/MGAN"
"bubbliiiing/seq2seq-keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/seq2seq-keras" -> "bubbliiiing/ssd_keras"
"bubbliiiing/seq2seq-keras" -> "bubbliiiing/poems-generator"
"bubbliiiing/seq2seq-keras" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/seq2seq-keras" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/seq2seq-keras" -> "bubbliiiing/Reinforcement-Learning"
"lessw2020/mish" -> "lessw2020/Ranger-Mish-ImageWoof-5"
"wererLinC/Machine_Learning" -> "xiyusullos/ml_exercise"
"seominseok0429/label-smoothing-visualization-pytorch" -> "seominseok0429/inception-I3D-NON-LOCAL"
"seominseok0429/label-smoothing-visualization-pytorch" -> "seominseok0429/pytorch-warmup-cosine-lr"
"seominseok0429/label-smoothing-visualization-pytorch" -> "sundw2014/DCM"
"seominseok0429/label-smoothing-visualization-pytorch" -> "J911/DeepLabV3Plus-for-Beginners"
"mostafaelhoushi/DeepShift" -> "GATECH-EIC/ShiftAddNet"
"xuannianz/keras-fcos" -> "DetectionTeamUCAS/FCOS_Tensorflow"
"xuannianz/keras-fcos" -> "Stick-To/FCOS-tensorflow"
"xuannianz/keras-fcos" -> "xuannianz/FSAF"
"xiaoboxia/Classification-with-noisy-labels-by-importance-reweighting" -> "xiaoboxia/T-Revision"
"xiaoboxia/Classification-with-noisy-labels-by-importance-reweighting" -> "xiaoboxia/Part-dependent-label-noise"
"xiaoboxia/Classification-with-noisy-labels-by-importance-reweighting" -> "xiaoboxia/CDR"
"Yejin0111/ADD-GCN" -> "HCPLab-SYSU/SSGRL"
"Yejin0111/ADD-GCN" -> "gaobb/MCAR"
"Yejin0111/ADD-GCN" -> "mathkey/mssnet"
"Yejin0111/ADD-GCN" -> "JiaweiZhao-git/Awesome-Multi-label-Image-Recognition"
"Yejin0111/ADD-GCN" -> "QData/C-Tran"
"Yejin0111/ADD-GCN" -> "iCVTEAM/TDRG"
"Yejin0111/ADD-GCN" -> "ReML-AI/MGTN"
"Yejin0111/ADD-GCN" -> "FT-ZHOU-ZZZ/DSDL"
"pudae/kaggle-understanding-clouds" -> "yelanlan/Pneumothorax-Segmentation-2nd-place-solution"
"pudae/kaggle-understanding-clouds" -> "senkin13/kaggle" ["e"=1]
"pudae/kaggle-understanding-clouds" -> "pudae/kaggle-hpa"
"pudae/kaggle-understanding-clouds" -> "lime-robot/dsb2019" ["e"=1]
"pudae/kaggle-understanding-clouds" -> "pudae/kaggle-humpback"
"pudae/kaggle-understanding-clouds" -> "bestfitting/kaggle" ["e"=1]
"pudae/kaggle-understanding-clouds" -> "sneddy/pneumothorax-segmentation"
"pudae/kaggle-understanding-clouds" -> "phalanx-hk/kaggle_template" ["e"=1]
"pudae/kaggle-understanding-clouds" -> "naivelamb/kaggle-cloud-organization"
"pudae/kaggle-understanding-clouds" -> "BloodAxe/Kaggle-2019-Blindness-Detection"
"pudae/kaggle-understanding-clouds" -> "SeuTao/Humpback-Whale-Identification"
"cheind/inpaint" -> "sooham/inpainting"
"bubbliiiing/efficientdet-keras" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/efficientdet-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/efficientdet-keras" -> "bubbliiiing/retinaface-keras"
"bubbliiiing/efficientdet-keras" -> "bubbliiiing/efficientdet-tf2"
"bubbliiiing/efficientdet-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/efficientdet-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/efficientdet-keras" -> "bubbliiiing/centernet-keras"
"bubbliiiing/efficientdet-keras" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/retinaface-keras"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/yolov4-tiny-tf2"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/yolov4-keras"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/mobilenet-yolov4-keras"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/efficientdet-tf2"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/mobilenet-yolov4-tf2"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/Reinforcement-Learning"
"bubbliiiing/yolov4-tiny-keras" -> "bubbliiiing/centernet-keras"
"maciej-sypetkowski/kaggle-rcic-1st" -> "amirassov/kaggle-pneumothorax"
"nerminsamet/houghnet" -> "nerminsamet/ppdet"
"nerminsamet/houghnet" -> "giddyyupp/coco-minitrain"
"nerminsamet/houghnet" -> "justimyhxu/Dense-RepPoints"
"okotaku/kaggle_rsna2019_3rd_solution" -> "ngxbac/Kaggle-RSNA"
"okotaku/kaggle_rsna2019_3rd_solution" -> "darraghdog/rsna"
"Extreme-classification/siamesexml" -> "Extreme-classification/GalaXC"
"Extreme-classification/siamesexml" -> "Extreme-classification/DECAF"
"Extreme-classification/siamesexml" -> "Extreme-classification/MUFIN"
"Extreme-classification/siamesexml" -> "Extreme-classification/ECLARE"
"jiankang1991/GRN-SNDL" -> "nagmakhan/multi-label-analysis"
"Leotju/MGAN" -> "rainofmine/Bi-box_Regression"
"Leotju/MGAN" -> "kalyo-zjl/APD"
"Leotju/MGAN" -> "lwpyr/CSP-pedestrian-detection-in-pytorch"
"Leotju/MGAN" -> "xingkongliang/Pedestrian-Detection"
"Leotju/MGAN" -> "rainofmine/Repulsion_Loss"
"Leotju/MGAN" -> "ZongweiZhou1/CenterNetPerson"
"Leotju/MGAN" -> "Li-Chengyang/MSDS-RCNN" ["e"=1]
"Leotju/MGAN" -> "hasanirtiza/Pedestron"
"Leotju/MGAN" -> "garrickbrazil/SDS-RCNN"
"Leotju/MGAN" -> "WangWenhao0716/Adapted-Center-and-Scale-Prediction"
"Leotju/MGAN" -> "cvgroup-njust/CityPersons"
"Leotju/MGAN" -> "liuwei16/ALFNet"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/yolov4-tiny-tf2"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/yolov4-keras"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/efficientdet-tf2"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/ssd-tf2"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/yolov4-tiny-keras"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/mobilenet-yolov4-tf2"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/retinanet-keras"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/ssd-keras"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/yolo3-keras"
"bubbliiiing/yolov4-tf2" -> "xiao9616/yolo4_tensorflow2" ["e"=1]
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/faster-rcnn-tf2"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/yolov4-tf2" -> "bubbliiiing/RFB-keras"
"cccorn/AP-loss" -> "kemaloksuz/aLRPLoss"
"cccorn/AP-loss" -> "Duankaiwen/CPNDet"
"cccorn/AP-loss" -> "implus/GFocalV2"
"xiaoboxia/T-Revision" -> "xiaoboxia/Part-dependent-label-noise"
"xiaoboxia/T-Revision" -> "xiaoboxia/Classification-with-noisy-labels-by-importance-reweighting"
"xiaoboxia/T-Revision" -> "xiaoboxia/CDR"
"xiaoboxia/T-Revision" -> "bhanML/Masking"
"caiqi/mean-teacher-cross-domain-detection" -> "TKKim93/DivMatch"
"caiqi/mean-teacher-cross-domain-detection" -> "uitrbn/CST_DA_detection"
"caiqi/mean-teacher-cross-domain-detection" -> "He-Zhenwei/ATF"
"caiqi/mean-teacher-cross-domain-detection" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"caiqi/mean-teacher-cross-domain-detection" -> "harsh-99/SCL"
"caiqi/mean-teacher-cross-domain-detection" -> "xinge008/SCDA"
"caiqi/mean-teacher-cross-domain-detection" -> "ChrisAllenMing/GPA-detection"
"caiqi/mean-teacher-cross-domain-detection" -> "basiclab/DA-OD-MEAA-PyTorch"
"caiqi/mean-teacher-cross-domain-detection" -> "kevinhkhsu/DA_detection"
"caiqi/mean-teacher-cross-domain-detection" -> "He-Zhenwei/MAF"
"see--/kuzushiji-recognition" -> "see--/pneumothorax-segmentation"
"see--/kuzushiji-recognition" -> "lopuhin/kaggle-kuzushiji-2019"
"bubbliiiing/M2det-Keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/M2det-Keras" -> "bubbliiiing/ssd_keras"
"bubbliiiing/M2det-Keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/M2det-Keras" -> "bubbliiiing/poems-generator"
"bubbliiiing/M2det-Keras" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/M2det-Keras" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/M2det-Keras" -> "bubbliiiing/retinanet-keras"
"daixiangzi/ImprovedGan-pytorch" -> "daixiangzi/PRCV2019"
"tormii/HST" -> "tormii/SSET"
"yjh0410/YOLAF" -> "yjh0410/yolov3-plus_PyTorch"
"yjh0410/YOLAF" -> "guiker/flyCat"
"yjh0410/YOLAF" -> "hua1995116/npm-stat"
"snu-mllab/PuzzleMix" -> "snu-mllab/Co-Mixup"
"snu-mllab/PuzzleMix" -> "ecs-vlc/FMix"
"soo89/CSD-SSD" -> "soo89/CSD-RFCN"
"soo89/CSD-SSD" -> "soo89/ISD-SSD"
"soo89/CSD-SSD" -> "google-research/ssl_detection"
"appian42/kaggle-rsna-intracranial-hemorrhage" -> "darraghdog/rsna"
"appian42/kaggle-rsna-intracranial-hemorrhage" -> "ngxbac/Kaggle-RSNA"
"appian42/kaggle-rsna-intracranial-hemorrhage" -> "SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection"
"appian42/kaggle-rsna-intracranial-hemorrhage" -> "XUXUSSS/kaggle_rsna2019_4th_solution"
"appian42/kaggle-rsna-intracranial-hemorrhage" -> "okotaku/kaggle_rsna2019_3rd_solution"
"appian42/kaggle-rsna-intracranial-hemorrhage" -> "bestfitting/kaggle" ["e"=1]
"appian42/kaggle-rsna-intracranial-hemorrhage" -> "okotaku/kaggle_quora2019"
"DaehanKim-Korea/ResNet_SSD_Pytorch" -> "cjf8899/SSD_ResNet_Pytorch"
"MegEngine/Hub" -> "MegEngine/Docs"
"MegEngine/Hub" -> "MegEngine/MegRay"
"MegEngine/Hub" -> "MegEngine/Models"
"isdanni/mit6.824" -> "isdanni/log-bst"
"isdanni/mit6.824" -> "isdanni/rating"
"isdanni/mit6.824" -> "isdanni/log-boost"
"tormii/SSET" -> "tormii/HST"
"murtazahassan/TeslaCyberTruck-Arduino" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/TeslaCyberTruck-Arduino" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/TeslaCyberTruck-Arduino" -> "murtazahassan/Object-Following-Robot"
"mindspore-ai/hub" -> "mindspore-ai/serving"
"mindspore-ai/hub" -> "mindspore-ai/mail_templates"
"mindspore-ai/hub" -> "mindspore-ai/book"
"mindspore-ai/hub" -> "mindspore-ai/ms-operator"
"fsgo/go_fmt" -> "fsgo/smart-go-dl"
"fsgo/go_fmt" -> "fsgo/bin-auto-switcher"
"murtazahassan/Robot-Arm-Gesture-Control" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Robot-Arm-Gesture-Control" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Robot-Arm-Gesture-Control" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Robot-Arm-Gesture-Control" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Robot-Arm-Gesture-Control" -> "murtazahassan/Learn-Python"
"murtazahassan/Robot-Arm-Gesture-Control" -> "murtazahassan/Object-Following-Robot"
"murtazahassan/Robot-Arm-Gesture-Control" -> "murtazahassan/Digits-Classification"
"Epiphqny/CondInst" -> "CaoWGG/CenterNet-CondInst"
"Epiphqny/CondInst" -> "Epiphqny/SOLOv2"
"Epiphqny/CondInst" -> "Epiphqny/SOLO"
"Epiphqny/CondInst" -> "Epiphqny/Yolact_fcos"
"wwangwitsel/awesome-partial-label-learning" -> "wwangwitsel/PARM"
"wwangwitsel/awesome-partial-label-learning" -> "lvjiaqi77/PRODEN"
"OctoberChang/X-Transformer" -> "kongds/LightXML"
"OctoberChang/X-Transformer" -> "huiyegit/APLC_XLNet"
"OctoberChang/X-Transformer" -> "yourh/AttentionXML"
"OctoberChang/X-Transformer" -> "guoqunabc/X-BERT"
"OctoberChang/X-Transformer" -> "siddsax/XML-CNN"
"OctoberChang/X-Transformer" -> "nilesh2797/zestxml"
"OctoberChang/X-Transformer" -> "kunaldahiya/pyxclib"
"OctoberChang/X-Transformer" -> "OctoberChang/X-Transformer"
"OctoberChang/X-Transformer" -> "Extreme-classification/siamesexml"
"yelanlan/Pneumothorax-Segmentation-2nd-place-solution" -> "sneddy/pneumothorax-segmentation"
"yelanlan/Pneumothorax-Segmentation-2nd-place-solution" -> "earhian/SIIM-ACR-Pneumothorax-Segmentation-5th"
"yelanlan/Pneumothorax-Segmentation-2nd-place-solution" -> "fhopfmueller/bi-tempered-loss-pytorch"
"VDIGPKU/DADA" -> "moskomule/dda"
"VDIGPKU/DADA" -> "Awesome-AutoAug-Algorithms/AWS-OHL-AutoAug"
"MegEngine/MegRay" -> "MegEngine/Docs"
"MegEngine/MegRay" -> "MegEngine/Hub"
"mindspore-ai/book" -> "mindspore-ai/mail_templates"
"mindspore-ai/book" -> "mindspore-ai/ms-operator"
"mindspore-ai/book" -> "mindspore-ai/hub"
"mindspore-ai/book" -> "mindspore-ai/serving"
"mindspore-ai/book" -> "mindspore-ai/community"
"mindspore-ai/book" -> "mindspore-ai/graphengine"
"mindspore-ai/book" -> "mindspore-ai/mindinsight"
"mindspore-ai/book" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/book" -> "mindspore-ai/course"
"J911/DeepLabV3Plus-for-Beginners" -> "seominseok0429/inception-I3D-NON-LOCAL"
"J911/DeepLabV3Plus-for-Beginners" -> "seominseok0429/cifar10-mobilenetv2-pytorch"
"J911/DeepLabV3Plus-for-Beginners" -> "J911/J911"
"MegEngine/Docs" -> "MegEngine/MegRay"
"MegEngine/Docs" -> "MegEngine/Hub"
"MegEngine/Docs" -> "MegEngine/Models"
"extreme-assistant/nips2019" -> "Sophia-11/Awesome-NeurIPS2019-NIPS2019"
"eastmountyxz/CSDNBlog-AI-for-Python" -> "eastmountyxz/CSDNBlog-ImageProcessing"
"maple-research-lab/EnAET" -> "wang3702/EnAET"
"amirassov/kaggle-pneumothorax" -> "katsura-jp/tour-of-albumentations" ["e"=1]
"anirudhshenoy/pseudo_labeling_small_datasets" -> "peimengsui/semi_supervised_mnist"
"njulus/REFILLED" -> "sundw2014/DCM"
"kemaloksuz/aLRPLoss" -> "cancam/LRP"
"kemaloksuz/aLRPLoss" -> "cccorn/AP-loss"
"IlyaDobrynin/opti_models" -> "IlyaDobrynin/GridMixup"
"jetdillo/tenacity_rover" -> "jetdillo/oakd_models"
"xuannianz/SAPD" -> "xuannianz/FSAF"
"bubbliiiing/efficientdet-tf2" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/efficientdet-tf2" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/efficientdet-tf2" -> "bubbliiiing/efficientnet-yolo3-keras"
"bubbliiiing/efficientdet-tf2" -> "bubbliiiing/Reinforcement-Learning"
"PaddlePaddle/examples" -> "PaddlePaddle/PaddleCraft"
"PaddlePaddle/examples" -> "PaddlePaddle/Paddle-bot"
"sakami0000/kaggle_jigsaw" -> "thuwyh/Jigsaw-Unintended-Bias-in-Toxicity-Classification"
"mathkey/mssnet" -> "HCPLab-SYSU/SSGRL"
"mathkey/mssnet" -> "Enjia/Spatial-Regularization-Network-in-Tensorflow"
"mathkey/mssnet" -> "nagmakhan/multi-label-analysis"
"PaddlePaddle/paddle_upgrade_tool" -> "PaddlePaddle/Paddle-bot"
"PaddlePaddle/paddle_upgrade_tool" -> "PaddlePaddle/tape"
"PaddlePaddle/paddle_upgrade_tool" -> "PaddlePaddle/Contrib"
"PaddlePaddle/paddle_upgrade_tool" -> "PaddlePaddle/Perf"
"PaddlePaddle/paddle_upgrade_tool" -> "PaddlePaddle/recordio"
"megvii-research/CR-DA-DET" -> "chaoqichen/HTCN"
"megvii-research/CR-DA-DET" -> "xinge008/SCDA"
"megvii-research/CR-DA-DET" -> "ChrisAllenMing/GPA-detection"
"megvii-research/CR-DA-DET" -> "chengchunhsu/EveryPixelMatters"
"megvii-research/CR-DA-DET" -> "kevinhkhsu/DA_detection"
"megvii-research/CR-DA-DET" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"megvii-research/CR-DA-DET" -> "TKKim93/DivMatch"
"megvii-research/CR-DA-DET" -> "VisionLearningGroup/DA_Detection"
"megvii-research/CR-DA-DET" -> "harsh-99/SCL"
"megvii-research/CR-DA-DET" -> "He-Zhenwei/MAF"
"megvii-research/CR-DA-DET" -> "uitrbn/CST_DA_detection"
"megvii-research/CR-DA-DET" -> "caiqi/mean-teacher-cross-domain-detection"
"megvii-research/CR-DA-DET" -> "basiclab/DA-OD-MEAA-PyTorch"
"megvii-research/CR-DA-DET" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"megvii-research/CR-DA-DET" -> "Gabriel-Macias/robust_frcnn"
"luxonis/depthai-shared" -> "luxonis/DepthAI-PyFlow"
"sabarim/STEm-Seg" -> "youtubevos/cocoapi"
"sabarim/STEm-Seg" -> "sabarim/3DC-Seg" ["e"=1]
"sabarim/STEm-Seg" -> "JialeCao001/SipMask"
"sabarim/STEm-Seg" -> "lyxok1/STM-Training" ["e"=1]
"sabarim/STEm-Seg" -> "youtubevos/MaskTrackRCNN"
"taixw2/rmini" -> "Consulting4J/lazymongo"
"irgendwr/go-stine" -> "felsenhower/stine_calendar_bot"
"irgendwr/go-stine" -> "fredericobormann/MensaViewer"
"hkzhang95/Awesome-CV-bibfiles" -> "FateScript/nnprof"
"PaddlePaddle/hapi" -> "PaddlePaddle/benchmark"
"PaddlePaddle/hapi" -> "PaddlePaddle/VisionTools"
"PaddlePaddle/hapi" -> "PaddlePaddle/CINN"
"xuannianz/FSAF" -> "hdjang/Feature-Selective-Anchor-Free-Module-for-Single-Shot-Object-Detection"
"xuannianz/FSAF" -> "xuannianz/SAPD"
"xuannianz/FSAF" -> "xuannianz/keras-fcos"
"xinge008/SCDA" -> "megvii-research/CR-DA-DET"
"xinge008/SCDA" -> "TKKim93/DivMatch"
"xinge008/SCDA" -> "chaoqichen/HTCN"
"xinge008/SCDA" -> "caiqi/mean-teacher-cross-domain-detection"
"xinge008/SCDA" -> "ChrisAllenMing/GPA-detection"
"xinge008/SCDA" -> "harsh-99/SCL"
"xinge008/SCDA" -> "chengchunhsu/EveryPixelMatters"
"xinge008/SCDA" -> "uitrbn/CST_DA_detection"
"xinge008/SCDA" -> "frezaeix/VISGA_Public"
"xinge008/SCDA" -> "VisionLearningGroup/DA_Detection"
"xinge008/SCDA" -> "basiclab/DA-OD-MEAA-PyTorch"
"xinge008/SCDA" -> "He-Zhenwei/MAF"
"xinge008/SCDA" -> "MCG-NJU/TIA"
"xinge008/SCDA" -> "kevinhkhsu/DA_detection"
"xinge008/SCDA" -> "tiancity-NJU/da-faster-rcnn-PyTorch"
"harsh-99/Sequential-Data-Loader-and-Model-for-Variable-Length-Data" -> "siddhanthaldar/CUDA-CNN-Traffic-Sign-Recognition"
"murtazahassan/Learn-Raspberry-Pi" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Learn-Raspberry-Pi" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Learn-Raspberry-Pi" -> "murtazahassan/Object-Following-Robot"
"murtazahassan/Learn-Raspberry-Pi" -> "murtazahassan/Angle-Finder"
"murtazahassan/Learn-Raspberry-Pi" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"CaoWGG/TensorMask" -> "CaoWGG/CenterNet-darknet"
"wlguan/Stronger-yolo-pytorch" -> "Peterisfar/YOLOV3"
"wlguan/Stronger-yolo-pytorch" -> "Stinky-Tofu/Stronger-yolo"
"wlguan/Stronger-yolo-pytorch" -> "apxlwl/MNN-yolov3" ["e"=1]
"wlguan/Stronger-yolo-pytorch" -> "lucasjinreal/CenterNet_Pro_Max"
"wlguan/Stronger-yolo-pytorch" -> "dlyldxwl/Stronger-One-stage-detector-with-much-Tricks"
"bentrevett/pytorch-nli" -> "bentrevett/pytorch-for-code"
"jiawen-zhu/Awesome-Video-Instance-Segmentation" -> "jdc08161063/spatio-temporal-embedding"
"bubbliiiing/Optimization_Algorithm" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/Optimization_Algorithm" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/Optimization_Algorithm" -> "bubbliiiing/ssd_keras"
"bubbliiiing/Optimization_Algorithm" -> "bubbliiiing/Reinforcement-Learning"
"apchenstu/SLN-Amodal" -> "waiyulam/ORCNN"
"apchenstu/SLN-Amodal" -> "YutingXiao/Amodal-Segmentation-Based-on-Visible-Region-Segmentation-and-Shape-Prior"
"niconielsen32/AlgortihmsAndDataStructures" -> "niconielsen32/Robotics"
"mindspore-ai/mail_templates" -> "mindspore-ai/book"
"mindspore-ai/mail_templates" -> "mindspore-ai/ms-operator"
"mindspore-ai/mail_templates" -> "mindspore-ai/hub"
"mindspore-ai/mail_templates" -> "mindspore-ai/serving"
"mindspore-ai/community" -> "mindspore-ai/mail_templates"
"mindspore-ai/community" -> "mindspore-ai/book"
"mindspore-ai/community" -> "mindspore-ai/ms-operator"
"mindspore-ai/community" -> "mindspore-ai/hub"
"mindspore-ai/community" -> "mindspore-ai/graphengine"
"mindspore-ai/community" -> "mindspore-ai/mindinsight"
"mindspore-ai/community" -> "mindspore-ai/serving"
"mindspore-ai/community" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/community" -> "mindspore-ai/course"
"mindspore-ai/community" -> "mindspore-ai/akg"
"mindspore-ai/community" -> "mindspore-ai/docs"
"mindspore-ai/ms-operator" -> "mindspore-ai/mail_templates"
"mindspore-ai/ms-operator" -> "mindspore-ai/book"
"mindspore-ai/ms-operator" -> "mindspore-ai/hub"
"mindspore-ai/ms-operator" -> "mindspore-ai/serving"
"mindspore-ai/ms-operator" -> "mindspore-ai/community"
"mindspore-ai/ms-operator" -> "mindspore-ai/graphengine"
"mindspore-ai/ms-operator" -> "mindspore-ai/mindinsight"
"mindspore-ai/ms-operator" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/ms-operator" -> "mindspore-ai/course"
"mindspore-ai/ms-operator" -> "mindspore-ai/docs"
"mindspore-ai/ms-operator" -> "mindspore-ai/akg"
"windxrz/DCFR" -> "h-yu16/Sparse_Variable_Independence"
"bubbliiiing/Mobilenet-SSD-Essay" -> "bubbliiiing/mobilenet-ssd-keras"
"bubbliiiing/Mobilenet-SSD-Essay" -> "bubbliiiing/RFB-keras"
"bubbliiiing/Mobilenet-SSD-Essay" -> "bubbliiiing/M2det-Keras"
"bubbliiiing/Mobilenet-SSD-Essay" -> "bubbliiiing/ssd_keras"
"bubbliiiing/Mobilenet-SSD-Essay" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/Mobilenet-SSD-Essay" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/Mobilenet-SSD-Essay" -> "bubbliiiing/poems-generator"
"bubbliiiing/Mobilenet-SSD-Essay" -> "bubbliiiing/Data-Structure-and-Algorithm"
"yinghdb/EmbedMask" -> "NaiyuGao/SSAP"
"tyomj/product_detection" -> "ParallelDots/generic-sku-detection-benchmark"
"tyomj/product_detection" -> "naviocean/faster_rcnn_sku110"
"murtazahassan/Obstacle-Avoding-Robot" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Obstacle-Avoding-Robot" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Obstacle-Avoding-Robot" -> "murtazahassan/Object-Following-Robot"
"soo89/CSD-RFCN" -> "soo89/CSD-SSD"
"soo89/CSD-RFCN" -> "soo89/ISD-SSD"
"CaoWGG/CenterNet-darknet" -> "CaoWGG/torch-yolov3"
"shjo-april/Tensorflow_FCOS" -> "Stick-To/FCOS-tensorflow"
"uitrbn/CST_DA_detection" -> "Gabriel-Macias/robust_frcnn"
"uitrbn/CST_DA_detection" -> "basiclab/DA-OD-MEAA-PyTorch"
"uitrbn/CST_DA_detection" -> "He-Zhenwei/MAF"
"bubbliiiing/pspnet-keras" -> "bubbliiiing/pspnet-tf2"
"zhangminwen/Center-and-Scale-Prediction-CSP-Pytorch" -> "wang-xinyu/csp.pytorch"
"jelinson/MVC" -> "xin-xinhanggao/efficient_quadtree"
"jelinson/MVC" -> "pablospe/MVCDemo"
"jelinson/MVC" -> "sunsiy10/ImageWorkShop"
"Gabriel-Macias/robust_frcnn" -> "uitrbn/CST_DA_detection"
"Gabriel-Macias/robust_frcnn" -> "basiclab/DA-OD-MEAA-PyTorch"
"jaywhen/Pmer" -> "1998v7/Self-Filtering"
"jasonseu/MultiLabelClassification" -> "jasonseu/TSFormer"
"jasonseu/MultiLabelClassification" -> "jasonseu/cnn_graph.pytorch"
"UCI-CARL/MotionEnergy" -> "UCI-CARL/VisualStimulusToolbox"
"UCI-CARL/VisualStimulusToolbox" -> "UCI-CARL/MotionEnergy"
"bubbliiiing/Mnist-recognition-By-Slim" -> "bubbliiiing/ssd_keras"
"bubbliiiing/Mnist-recognition-By-Slim" -> "bubbliiiing/Optimization_Algorithm"
"daixiangzi/Mask-Detection" -> "daixiangzi/PRCV2019"
"bubbliiiing/ssd_keras" -> "bubbliiiing/Mnist-recognition-By-Slim"
"bubbliiiing/ssd_keras" -> "bubbliiiing/Optimization_Algorithm"
"DeepWisdom/AutoSeries2019" -> "DeepBlueAI/AutoSeries"
"DeepBlueAI/AutoSeries" -> "DeepWisdom/AutoSeries2019"
"daixiangzi/PRCV2019" -> "daixiangzi/face_detection"
"daixiangzi/PRCV2019" -> "daixiangzi/Caffe-PCN"
"seominseok0429/inception-I3D-NON-LOCAL" -> "seominseok0429/cifar10-mobilenetv2-pytorch"
"eastmountyxz/Book3-Python-ImageProcessing" -> "eastmountyxz/HWCloudImageRecognition"
"eastmountyxz/Book3-Python-ImageProcessing" -> "eastmountyxz/ImageProcessing-Python"
"eastmountyxz/Book3-Python-ImageProcessing" -> "eastmountyxz/CSDNBlog-ImageProcessing"
"Charmve/computer-vision-in-action" -> "Charmve/Surface-Defect-Detection" ["e"=1]
"Charmve/computer-vision-in-action" -> "harleyszhang/cv_note" ["e"=1]
"Charmve/computer-vision-in-action" -> "datawhalechina/dive-into-cv-pytorch" ["e"=1]
"Charmve/computer-vision-in-action" -> "52CV/CV-Surveys"
"Charmve/computer-vision-in-action" -> "amusi/daily-paper-computer-vision"
"Charmve/computer-vision-in-action" -> "iscyy/ultralyticsPro" ["e"=1]
"Charmve/computer-vision-in-action" -> "GYee/CV_interviews_Q-A" ["e"=1]
"Charmve/computer-vision-in-action" -> "gzr2017/ImageProcessing100Wen"
"Charmve/computer-vision-in-action" -> "HuangCongQing/UCAS_Course_2019" ["e"=1]
"Charmve/computer-vision-in-action" -> "amusi/Deep-Learning-Interview-Book" ["e"=1]
"Charmve/computer-vision-in-action" -> "enpeizhao/CVprojects" ["e"=1]
"Charmve/computer-vision-in-action" -> "MingchaoZhu/DeepLearning" ["e"=1]
"Charmve/computer-vision-in-action" -> "amusi/CVPR2025-Papers-with-Code"
"Charmve/computer-vision-in-action" -> "lyhue1991/eat_pytorch_in_20_days" ["e"=1]
"Charmve/computer-vision-in-action" -> "makelove/OpenCV-Python-Tutorial"
"Megvii-BaseDetection/YOLOX" -> "meituan/YOLOv6"
"Megvii-BaseDetection/YOLOX" -> "WongKinYiu/yolov7"
"Megvii-BaseDetection/YOLOX" -> "wang-xinyu/tensorrtx"
"Megvii-BaseDetection/YOLOX" -> "RangiLyu/nanodet"
"Megvii-BaseDetection/YOLOX" -> "Tianxiaomo/pytorch-YOLOv4"
"Megvii-BaseDetection/YOLOX" -> "ifzhang/ByteTrack" ["e"=1]
"Megvii-BaseDetection/YOLOX" -> "mikel-brostrom/boxmot" ["e"=1]
"Megvii-BaseDetection/YOLOX" -> "open-mmlab/mmdetection"
"Megvii-BaseDetection/YOLOX" -> "PaddlePaddle/PaddleDetection"
"Megvii-BaseDetection/YOLOX" -> "xingyizhou/CenterNet"
"Megvii-BaseDetection/YOLOX" -> "ultralytics/yolov3"
"Megvii-BaseDetection/YOLOX" -> "AlexeyAB/darknet"
"Megvii-BaseDetection/YOLOX" -> "microsoft/Swin-Transformer"
"Megvii-BaseDetection/YOLOX" -> "lucasjinreal/yolov7_d2"
"Megvii-BaseDetection/YOLOX" -> "facebookresearch/detr"
"ivy-llc/ivy" -> "jax-ml/jax"
"ivy-llc/ivy" -> "Lightning-AI/pytorch-lightning"
"ivy-llc/ivy" -> "google-research/tuning_playbook"
"ivy-llc/ivy" -> "gradio-app/gradio" ["e"=1]
"ivy-llc/ivy" -> "tinygrad/tinygrad" ["e"=1]
"ivy-llc/ivy" -> "eugeneyan/applied-ml" ["e"=1]
"ivy-llc/ivy" -> "google/flax" ["e"=1]
"ivy-llc/ivy" -> "ray-project/ray"
"ivy-llc/ivy" -> "karpathy/nanoGPT" ["e"=1]
"ivy-llc/ivy" -> "arogozhnikov/einops"
"ivy-llc/ivy" -> "dair-ai/ML-YouTube-Courses" ["e"=1]
"ivy-llc/ivy" -> "ml-tooling/best-of-ml-python" ["e"=1]
"ivy-llc/ivy" -> "karpathy/minGPT" ["e"=1]
"ivy-llc/ivy" -> "HarisIqbal88/PlotNeuralNet"
"ivy-llc/ivy" -> "mlflow/mlflow" ["e"=1]
"google-research/vision_transformer" -> "lucidrains/vit-pytorch"
"google-research/vision_transformer" -> "microsoft/Swin-Transformer"
"google-research/vision_transformer" -> "huggingface/pytorch-image-models"
"google-research/vision_transformer" -> "facebookresearch/detr"
"google-research/vision_transformer" -> "openai/CLIP"
"google-research/vision_transformer" -> "facebookresearch/deit"
"google-research/vision_transformer" -> "facebookresearch/mae"
"google-research/vision_transformer" -> "jacobgil/pytorch-grad-cam"
"google-research/vision_transformer" -> "facebookresearch/dino"
"google-research/vision_transformer" -> "facebookresearch/ConvNeXt"
"google-research/vision_transformer" -> "amusi/CVPR2025-Papers-with-Code"
"google-research/vision_transformer" -> "facebookresearch/moco" ["e"=1]
"google-research/vision_transformer" -> "jeonsworld/ViT-pytorch"
"google-research/vision_transformer" -> "dk-liang/Awesome-Visual-Transformer"
"google-research/vision_transformer" -> "mlfoundations/open_clip" ["e"=1]
"lucidrains/vit-pytorch" -> "huggingface/pytorch-image-models"
"lucidrains/vit-pytorch" -> "google-research/vision_transformer"
"lucidrains/vit-pytorch" -> "microsoft/Swin-Transformer"
"lucidrains/vit-pytorch" -> "facebookresearch/detr"
"lucidrains/vit-pytorch" -> "openai/CLIP"
"lucidrains/vit-pytorch" -> "jacobgil/pytorch-grad-cam"
"lucidrains/vit-pytorch" -> "amusi/CVPR2025-Papers-with-Code"
"lucidrains/vit-pytorch" -> "open-mmlab/mmdetection"
"lucidrains/vit-pytorch" -> "facebookresearch/mae"
"lucidrains/vit-pytorch" -> "facebookresearch/detectron2"
"lucidrains/vit-pytorch" -> "facebookresearch/segment-anything"
"lucidrains/vit-pytorch" -> "xmu-xiaoma666/External-Attention-pytorch"
"lucidrains/vit-pytorch" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"lucidrains/vit-pytorch" -> "facebookresearch/deit"
"lucidrains/vit-pytorch" -> "lucidrains/denoising-diffusion-pytorch" ["e"=1]
"RangiLyu/nanodet" -> "Megvii-BaseDetection/YOLOX"
"RangiLyu/nanodet" -> "dog-qiuqiu/Yolo-Fastest"
"RangiLyu/nanodet" -> "wang-xinyu/tensorrtx"
"RangiLyu/nanodet" -> "xingyizhou/CenterNet"
"RangiLyu/nanodet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"RangiLyu/nanodet" -> "DingXiaoH/RepVGG"
"RangiLyu/nanodet" -> "Tencent/ncnn"
"RangiLyu/nanodet" -> "Tianxiaomo/pytorch-YOLOv4"
"RangiLyu/nanodet" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"RangiLyu/nanodet" -> "tianzhi0549/FCOS"
"RangiLyu/nanodet" -> "xlite-dev/lite.ai.toolkit"
"RangiLyu/nanodet" -> "meituan/YOLOv6"
"RangiLyu/nanodet" -> "ppogg/YOLOv5-Lite" ["e"=1]
"RangiLyu/nanodet" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"RangiLyu/nanodet" -> "cmdbug/YOLOv5_NCNN" ["e"=1]
"jiawei-ren/BalancedMetaSoftmax-Classification" -> "jiawei-ren/BalancedMetaSoftmax"
"jiawei-ren/BalancedMetaSoftmax-Classification" -> "Megvii-BaseDetection/DisAlign"
"jiawei-ren/BalancedMetaSoftmax-Classification" -> "Vanint/SADE-AgnosticLT"
"jiawei-ren/BalancedMetaSoftmax-Classification" -> "hyperconnect/LADE"
"jiawei-ren/BalancedMetaSoftmax-Classification" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"jiawei-ren/BalancedMetaSoftmax-Classification" -> "xialeiliu/Long-Tailed-CIL"
"jiawei-ren/BalancedMetaSoftmax-Classification" -> "frank-xwang/RIDE-LongTailRecognition"
"jiawei-ren/BalancedMetaSoftmax-Classification" -> "dvlab-research/MiSLAS"
"openai/CLIP" -> "mlfoundations/open_clip" ["e"=1]
"openai/CLIP" -> "facebookresearch/segment-anything"
"openai/CLIP" -> "haotian-liu/LLaVA" ["e"=1]
"openai/CLIP" -> "huggingface/pytorch-image-models"
"openai/CLIP" -> "lucidrains/vit-pytorch"
"openai/CLIP" -> "huggingface/diffusers" ["e"=1]
"openai/CLIP" -> "salesforce/LAVIS" ["e"=1]
"openai/CLIP" -> "microsoft/Swin-Transformer"
"openai/CLIP" -> "CompVis/latent-diffusion" ["e"=1]
"openai/CLIP" -> "lllyasviel/ControlNet" ["e"=1]
"openai/CLIP" -> "microsoft/unilm" ["e"=1]
"openai/CLIP" -> "google-research/vision_transformer"
"openai/CLIP" -> "IDEA-Research/Grounded-Segment-Anything" ["e"=1]
"openai/CLIP" -> "facebookresearch/detr"
"openai/CLIP" -> "BradyFU/Awesome-Multimodal-Large-Language-Models" ["e"=1]
"WisconsinAIVision/yolact_edge" -> "dbolya/yolact"
"WisconsinAIVision/yolact_edge" -> "WXinlong/SOLO"
"WisconsinAIVision/yolact_edge" -> "feiyuhuahuo/Yolact_minimal"
"WisconsinAIVision/yolact_edge" -> "youngwanLEE/centermask2"
"WisconsinAIVision/yolact_edge" -> "aim-uofa/AdelaiDet"
"WisconsinAIVision/yolact_edge" -> "enazoe/yolo-tensorrt" ["e"=1]
"WisconsinAIVision/yolact_edge" -> "zju3dv/snake"
"WisconsinAIVision/yolact_edge" -> "jkjung-avt/tensorrt_demos" ["e"=1]
"WisconsinAIVision/yolact_edge" -> "WongKinYiu/ScaledYOLOv4"
"WisconsinAIVision/yolact_edge" -> "hustvl/SparseInst"
"WisconsinAIVision/yolact_edge" -> "JialeCao001/SipMask"
"WisconsinAIVision/yolact_edge" -> "WongKinYiu/yolor"
"WisconsinAIVision/yolact_edge" -> "linghu8812/tensorrt_inference" ["e"=1]
"WisconsinAIVision/yolact_edge" -> "RangiLyu/nanodet"
"WisconsinAIVision/yolact_edge" -> "ceccocats/tkDNN" ["e"=1]
"52CV/CVPR-2021-Papers" -> "52CV/CVPR-2022-Papers"
"52CV/CVPR-2021-Papers" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"52CV/CVPR-2021-Papers" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"52CV/CVPR-2021-Papers" -> "amusi/ICCV2023-Papers-with-Code"
"52CV/CVPR-2021-Papers" -> "52CV/CV-Surveys"
"52CV/CVPR-2021-Papers" -> "dk-liang/Awesome-Visual-Transformer"
"52CV/CVPR-2021-Papers" -> "amusi/CVPR2025-Papers-with-Code"
"52CV/CVPR-2021-Papers" -> "amusi/ECCV2024-Papers-with-Code"
"52CV/CVPR-2021-Papers" -> "DingXiaoH/RepVGG"
"52CV/CVPR-2021-Papers" -> "52CV/ICCV-2021-Papers"
"52CV/CVPR-2021-Papers" -> "microsoft/Swin-Transformer"
"52CV/CVPR-2021-Papers" -> "aim-uofa/AdelaiDet"
"52CV/CVPR-2021-Papers" -> "pengzhiliang/MAE-pytorch"
"52CV/CVPR-2021-Papers" -> "facebookresearch/moco" ["e"=1]
"52CV/CVPR-2021-Papers" -> "msracver/Deformable-ConvNets"
"microsoft/Swin-Transformer" -> "google-research/vision_transformer"
"microsoft/Swin-Transformer" -> "lucidrains/vit-pytorch"
"microsoft/Swin-Transformer" -> "huggingface/pytorch-image-models"
"microsoft/Swin-Transformer" -> "facebookresearch/detr"
"microsoft/Swin-Transformer" -> "facebookresearch/ConvNeXt"
"microsoft/Swin-Transformer" -> "open-mmlab/mmdetection"
"microsoft/Swin-Transformer" -> "facebookresearch/mae"
"microsoft/Swin-Transformer" -> "amusi/CVPR2025-Papers-with-Code"
"microsoft/Swin-Transformer" -> "openai/CLIP"
"microsoft/Swin-Transformer" -> "open-mmlab/mmsegmentation"
"microsoft/Swin-Transformer" -> "facebookresearch/detectron2"
"microsoft/Swin-Transformer" -> "facebookresearch/deit"
"microsoft/Swin-Transformer" -> "jacobgil/pytorch-grad-cam"
"microsoft/Swin-Transformer" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"microsoft/Swin-Transformer" -> "fundamentalvision/Deformable-DETR"
"Alibaba-MIIL/ImageNet21K" -> "Alibaba-MIIL/ML_Decoder"
"Alibaba-MIIL/ImageNet21K" -> "google-research/reassessed-imagenet" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "Alibaba-MIIL/ASL"
"Alibaba-MIIL/ImageNet21K" -> "google-research/big_transfer" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "Alibaba-MIIL/TResNet"
"Alibaba-MIIL/ImageNet21K" -> "zihangJiang/TokenLabeling" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "naver-ai/relabel_imagenet" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "facebookresearch/vissl" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "mlfoundations/wise-ft" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "facebookresearch/moco-v3" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "szq0214/MEAL-V2" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "UCSC-VLAA/CLIPA" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "modestyachts/ImageNetV2" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "facebookresearch/pycls"
"Alibaba-MIIL/ImageNet21K" -> "sail-sg/volo"
"xmu-xiaoma666/External-Attention-pytorch" -> "MenghaoGuo/Awesome-Vision-Attentions"
"xmu-xiaoma666/External-Attention-pytorch" -> "amusi/CVPR2025-Papers-with-Code"
"xmu-xiaoma666/External-Attention-pytorch" -> "huggingface/pytorch-image-models"
"xmu-xiaoma666/External-Attention-pytorch" -> "lucidrains/vit-pytorch"
"xmu-xiaoma666/External-Attention-pytorch" -> "microsoft/Swin-Transformer"
"xmu-xiaoma666/External-Attention-pytorch" -> "jacobgil/pytorch-grad-cam"
"xmu-xiaoma666/External-Attention-pytorch" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"xmu-xiaoma666/External-Attention-pytorch" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"xmu-xiaoma666/External-Attention-pytorch" -> "xmu-xiaoma666/FightingCV-Paper-Reading"
"xmu-xiaoma666/External-Attention-pytorch" -> "dair-ai/ml-visuals"
"xmu-xiaoma666/External-Attention-pytorch" -> "open-mmlab/mmdetection"
"xmu-xiaoma666/External-Attention-pytorch" -> "open-mmlab/mmsegmentation"
"xmu-xiaoma666/External-Attention-pytorch" -> "huawei-noah/Efficient-AI-Backbones"
"xmu-xiaoma666/External-Attention-pytorch" -> "facebookresearch/ConvNeXt"
"xmu-xiaoma666/External-Attention-pytorch" -> "mli/paper-reading"
"YuqingWang1029/VisTR" -> "youtubevos/MaskTrackRCNN"
"YuqingWang1029/VisTR" -> "hustvl/QueryInst"
"YuqingWang1029/VisTR" -> "seoungwugoh/STM" ["e"=1]
"YuqingWang1029/VisTR" -> "z-x-yang/CFBI" ["e"=1]
"YuqingWang1029/VisTR" -> "youtubevos/cocoapi"
"YuqingWang1029/VisTR" -> "wjf5203/SeqFormer"
"YuqingWang1029/VisTR" -> "FoundationVision/VNext"
"YuqingWang1029/VisTR" -> "sukjunhwang/IFC"
"YuqingWang1029/VisTR" -> "JialeCao001/SipMask"
"YuqingWang1029/VisTR" -> "yoxu515/aot-benchmark" ["e"=1]
"YuqingWang1029/VisTR" -> "sabarim/STEm-Seg"
"YuqingWang1029/VisTR" -> "facebookresearch/MaskFormer" ["e"=1]
"YuqingWang1029/VisTR" -> "wjn922/ReferFormer" ["e"=1]
"YuqingWang1029/VisTR" -> "hkchengrex/STCN" ["e"=1]
"YuqingWang1029/VisTR" -> "lkeab/BCNet"
"jacobgil/vit-explain" -> "hila-chefer/Transformer-Explainability"
"jacobgil/vit-explain" -> "samiraabnar/attention_flow"
"jacobgil/vit-explain" -> "hila-chefer/Transformer-MM-Explainability"
"jacobgil/vit-explain" -> "jeonsworld/ViT-pytorch"
"jacobgil/vit-explain" -> "sayakpaul/probing-vits" ["e"=1]
"jacobgil/vit-explain" -> "luo3300612/Visualizer"
"jacobgil/vit-explain" -> "lukemelas/PyTorch-Pretrained-ViT"
"jacobgil/vit-explain" -> "facebookresearch/deit"
"jacobgil/vit-explain" -> "damo-cv/TransReID" ["e"=1]
"jacobgil/vit-explain" -> "rentainhe/visualization"
"jacobgil/vit-explain" -> "facebookresearch/dino"
"jacobgil/vit-explain" -> "frgfm/torch-cam" ["e"=1]
"jacobgil/vit-explain" -> "dk-liang/Awesome-Visual-Transformer"
"jacobgil/vit-explain" -> "KMnP/vpt" ["e"=1]
"jacobgil/vit-explain" -> "jacobgil/pytorch-grad-cam"
"open-mmlab/mmgeneration" -> "TommyZihao/MMGeneration_Tutorials"
"open-mmlab/mmgeneration" -> "open-mmlab/mmagic" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mmselfsup" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mmdeploy"
"open-mmlab/mmgeneration" -> "open-mmlab/mmpretrain"
"open-mmlab/mmgeneration" -> "open-mmlab/mmfewshot" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mim" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mmrazor" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mmcv"
"open-mmlab/mmgeneration" -> "open-mmlab/mmflow" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mmtracking" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mmsegmentation"
"open-mmlab/mmgeneration" -> "open-mmlab/mmhuman3d" ["e"=1]
"open-mmlab/mmgeneration" -> "NVlabs/stylegan2-ada-pytorch" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/MMGEN-FaceStylor" ["e"=1]
"hardikvasa/google-images-download" -> "s0md3v/Photon" ["e"=1]
"hardikvasa/google-images-download" -> "shobrook/rebound" ["e"=1]
"hardikvasa/google-images-download" -> "aleju/imgaug"
"hardikvasa/google-images-download" -> "QianyanTech/Image-Downloader" ["e"=1]
"hardikvasa/google-images-download" -> "HumanSignal/labelImg"
"hardikvasa/google-images-download" -> "YoongiKim/AutoCrawler" ["e"=1]
"hardikvasa/google-images-download" -> "Cadene/pretrained-models.pytorch"
"hardikvasa/google-images-download" -> "mdbloice/Augmentor"
"hardikvasa/google-images-download" -> "albumentations-team/albumentations"
"hardikvasa/google-images-download" -> "thtrieu/darkflow" ["e"=1]
"hardikvasa/google-images-download" -> "facebookresearch/Detectron"
"hardikvasa/google-images-download" -> "ageitgey/face_recognition" ["e"=1]
"hardikvasa/google-images-download" -> "davidsandberg/facenet" ["e"=1]
"hardikvasa/google-images-download" -> "fastai/fastai" ["e"=1]
"hardikvasa/google-images-download" -> "soumith/ganhacks" ["e"=1]
"Shopify/upgrow" -> "Shopify/packwerk" ["e"=1]
"Shopify/upgrow" -> "zilverline/sequent" ["e"=1]
"Shopify/upgrow" -> "facebookresearch/d2go"
"WongKinYiu/yolor" -> "WongKinYiu/ScaledYOLOv4"
"WongKinYiu/yolor" -> "WongKinYiu/PyTorch_YOLOv4"
"WongKinYiu/yolor" -> "Megvii-BaseDetection/YOLOX"
"WongKinYiu/yolor" -> "lucasjinreal/yolov7_d2"
"WongKinYiu/yolor" -> "meituan/YOLOv6"
"WongKinYiu/yolor" -> "Tianxiaomo/pytorch-YOLOv4"
"WongKinYiu/yolor" -> "hustvl/YOLOP" ["e"=1]
"WongKinYiu/yolor" -> "xingyizhou/CenterNet2"
"WongKinYiu/yolor" -> "RangiLyu/nanodet"
"WongKinYiu/yolor" -> "WongKinYiu/yolov7"
"WongKinYiu/yolor" -> "ZFTurbo/Weighted-Boxes-Fusion"
"WongKinYiu/yolor" -> "DingXiaoH/RepVGG"
"WongKinYiu/yolor" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"WongKinYiu/yolor" -> "jkjung-avt/tensorrt_demos" ["e"=1]
"WongKinYiu/yolor" -> "enazoe/yolo-tensorrt" ["e"=1]
"kennethleungty/Neural-Network-Architecture-Diagrams" -> "ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network"
"kennethleungty/Neural-Network-Architecture-Diagrams" -> "paulgavrikov/visualkeras"
"kennethleungty/Neural-Network-Architecture-Diagrams" -> "davidstutz/latex-resources" ["e"=1]
"kennethleungty/Neural-Network-Architecture-Diagrams" -> "HarisIqbal88/PlotNeuralNet"
"jasmcaus/opencv-course" -> "jasmcaus/caer"
"jasmcaus/opencv-course" -> "jasmcaus/hazel"
"jasmcaus/opencv-course" -> "jasmcaus/ai-math-roadmap"
"jasmcaus/opencv-course" -> "murtazahassan/Learn-OpenCV-in-3-hours"
"jasmcaus/opencv-course" -> "jasmcaus/dotfiles"
"jasmcaus/opencv-course" -> "jasmcaus/canaro"
"jasmcaus/opencv-course" -> "JimmyHHua/opencv_tutorials"
"jasmcaus/opencv-course" -> "mrdbourke/tensorflow-deep-learning" ["e"=1]
"jasmcaus/opencv-course" -> "nicknochnack/TFODCourse" ["e"=1]
"jasmcaus/opencv-course" -> "makelove/OpenCV-Python-Tutorial"
"jasmcaus/opencv-course" -> "murtazahassan/OpenCV-Python-Tutorials-and-Projects"
"jasmcaus/opencv-course" -> "GokuMohandas/mlops-course" ["e"=1]
"jasmcaus/opencv-course" -> "PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition"
"jasmcaus/opencv-course" -> "flatplanet/Intro-To-TKinter-Youtube-Course" ["e"=1]
"jasmcaus/opencv-course" -> "BhanuPrakashNani/Image_Processing" ["e"=1]
"ashleve/lightning-hydra-template" -> "facebookresearch/hydra"
"ashleve/lightning-hydra-template" -> "victoresque/pytorch-template"
"ashleve/lightning-hydra-template" -> "arogozhnikov/einops"
"ashleve/lightning-hydra-template" -> "Lightning-AI/pytorch-lightning"
"ashleve/lightning-hydra-template" -> "Lightning-Universe/lightning-bolts"
"ashleve/lightning-hydra-template" -> "Lightning-AI/deep-learning-project-template"
"ashleve/lightning-hydra-template" -> "Lightning-AI/torchmetrics"
"ashleve/lightning-hydra-template" -> "miracleyoo/pytorch-lightning-template" ["e"=1]
"ashleve/lightning-hydra-template" -> "aimhubio/aim" ["e"=1]
"ashleve/lightning-hydra-template" -> "grok-ai/nn-template" ["e"=1]
"ashleve/lightning-hydra-template" -> "TylerYep/torchinfo"
"ashleve/lightning-hydra-template" -> "KevinMusgrave/pytorch-metric-learning"
"ashleve/lightning-hydra-template" -> "libffcv/ffcv"
"ashleve/lightning-hydra-template" -> "google-research/tuning_playbook"
"ashleve/lightning-hydra-template" -> "AntixK/PyTorch-VAE" ["e"=1]
"obss/sahi" -> "Megvii-BaseDetection/YOLOX"
"obss/sahi" -> "meituan/YOLOv6"
"obss/sahi" -> "mikel-brostrom/boxmot" ["e"=1]
"obss/sahi" -> "WongKinYiu/yolov7"
"obss/sahi" -> "open-mmlab/mmyolo"
"obss/sahi" -> "lucasjinreal/yolov7_d2"
"obss/sahi" -> "Deci-AI/super-gradients" ["e"=1]
"obss/sahi" -> "lyuwenyu/RT-DETR" ["e"=1]
"obss/sahi" -> "kuanhungchen/awesome-tiny-object-detection" ["e"=1]
"obss/sahi" -> "CVHub520/X-AnyLabeling" ["e"=1]
"obss/sahi" -> "ifzhang/ByteTrack" ["e"=1]
"obss/sahi" -> "ZFTurbo/Weighted-Boxes-Fusion"
"obss/sahi" -> "wang-xinyu/tensorrtx"
"obss/sahi" -> "iscyy/ultralyticsPro" ["e"=1]
"obss/sahi" -> "WongKinYiu/yolov9" ["e"=1]
"spmallick/learnopencv" -> "opencv/opencv" ["e"=1]
"spmallick/learnopencv" -> "AlexeyAB/darknet"
"spmallick/learnopencv" -> "CMU-Perceptual-Computing-Lab/openpose"
"spmallick/learnopencv" -> "pjreddie/darknet"
"spmallick/learnopencv" -> "jbhuang0604/awesome-computer-vision" ["e"=1]
"spmallick/learnopencv" -> "HumanSignal/labelImg"
"spmallick/learnopencv" -> "open-mmlab/mmdetection"
"spmallick/learnopencv" -> "facebookresearch/detectron2"
"spmallick/learnopencv" -> "matterport/Mask_RCNN"
"spmallick/learnopencv" -> "gzr2017/ImageProcessing100Wen"
"spmallick/learnopencv" -> "aleju/imgaug"
"spmallick/learnopencv" -> "opencv/opencv_contrib" ["e"=1]
"spmallick/learnopencv" -> "tensorflow/models" ["e"=1]
"spmallick/learnopencv" -> "hoya012/deep_learning_object_detection"
"spmallick/learnopencv" -> "CodecWang/opencv-python-tutorial"
"nihui/opencv-mobile" -> "cmdbug/YOLOv5_NCNN" ["e"=1]
"nihui/opencv-mobile" -> "pnnx/pnnx" ["e"=1]
"nihui/opencv-mobile" -> "Tencent/TNN"
"nihui/opencv-mobile" -> "Tencent/ncnn"
"nihui/opencv-mobile" -> "FeiGeChuanShu/ncnn-android-yolov8" ["e"=1]
"nihui/opencv-mobile" -> "xlite-dev/lite.ai.toolkit"
"nihui/opencv-mobile" -> "zchrissirhcz/awesome-ncnn" ["e"=1]
"nihui/opencv-mobile" -> "RangiLyu/nanodet"
"nihui/opencv-mobile" -> "daquexian/onnx-simplifier"
"nihui/opencv-mobile" -> "nihui/ncnn-android-nanodet" ["e"=1]
"nihui/opencv-mobile" -> "nihui/ncnn-android-yolov5" ["e"=1]
"nihui/opencv-mobile" -> "airockchip/rknn_model_zoo" ["e"=1]
"nihui/opencv-mobile" -> "alibaba/MNN"
"nihui/opencv-mobile" -> "OAID/Tengine" ["e"=1]
"nihui/opencv-mobile" -> "dog-qiuqiu/Yolo-Fastest"
"DingXiaoH/RepVGG" -> "huawei-noah/Efficient-AI-Backbones"
"DingXiaoH/RepVGG" -> "RangiLyu/nanodet"
"DingXiaoH/RepVGG" -> "facebookresearch/ConvNeXt"
"DingXiaoH/RepVGG" -> "Megvii-BaseDetection/YOLOX"
"DingXiaoH/RepVGG" -> "zhanghang1989/ResNeSt"
"DingXiaoH/RepVGG" -> "megvii-model/RepVGG" ["e"=1]
"DingXiaoH/RepVGG" -> "xingyizhou/CenterNet"
"DingXiaoH/RepVGG" -> "microsoft/Swin-Transformer"
"DingXiaoH/RepVGG" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"DingXiaoH/RepVGG" -> "meituan/YOLOv6"
"DingXiaoH/RepVGG" -> "tianzhi0549/FCOS"
"DingXiaoH/RepVGG" -> "daquexian/onnx-simplifier"
"DingXiaoH/RepVGG" -> "lukemelas/EfficientNet-PyTorch"
"DingXiaoH/RepVGG" -> "666DZY666/micronet" ["e"=1]
"DingXiaoH/RepVGG" -> "WongKinYiu/ScaledYOLOv4"
"luo3300612/Visualizer" -> "rentainhe/visualization"
"luo3300612/Visualizer" -> "hila-chefer/Transformer-Explainability"
"luo3300612/Visualizer" -> "jacobgil/vit-explain"
"luo3300612/Visualizer" -> "hila-chefer/Transformer-MM-Explainability"
"luo3300612/Visualizer" -> "dk-liang/Awesome-Visual-Transformer"
"luo3300612/Visualizer" -> "dvlab-research/LISA" ["e"=1]
"luo3300612/Visualizer" -> "chenzhik/VisualizerX"
"luo3300612/Visualizer" -> "facebookresearch/deit"
"luo3300612/Visualizer" -> "KaiyangZhou/CoOp" ["e"=1]
"luo3300612/Visualizer" -> "jacobgil/pytorch-grad-cam"
"luo3300612/Visualizer" -> "KMnP/vpt" ["e"=1]
"luo3300612/Visualizer" -> "raoyongming/DynamicViT" ["e"=1]
"luo3300612/Visualizer" -> "czczup/ViT-Adapter" ["e"=1]
"luo3300612/Visualizer" -> "LeapLabTHU/DAT" ["e"=1]
"luo3300612/Visualizer" -> "IDEA-Research/detrex" ["e"=1]
"bubbliiiing/unet-pytorch" -> "bubbliiiing/deeplabv3-plus-pytorch"
"bubbliiiing/unet-pytorch" -> "bubbliiiing/pspnet-pytorch"
"bubbliiiing/unet-pytorch" -> "bigmb/Unet-Segmentation-Pytorch-Nest-of-Unets" ["e"=1]
"bubbliiiing/unet-pytorch" -> "Andy-zhujunwen/UNET-ZOO" ["e"=1]
"bubbliiiing/unet-pytorch" -> "bubbliiiing/segmentation-format-fix"
"bubbliiiing/unet-pytorch" -> "Beckschen/TransUNet" ["e"=1]
"bubbliiiing/unet-pytorch" -> "bubbliiiing/segformer-pytorch"
"bubbliiiing/unet-pytorch" -> "HuCaoFighting/Swin-Unet" ["e"=1]
"bubbliiiing/unet-pytorch" -> "qiaofengsheng/pytorch-UNet"
"bubbliiiing/unet-pytorch" -> "bubbliiiing/faster-rcnn-pytorch"
"bubbliiiing/unet-pytorch" -> "bubbliiiing/classification-pytorch"
"bubbliiiing/unet-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/unet-pytorch" -> "4uiiurz1/pytorch-nested-unet" ["e"=1]
"bubbliiiing/unet-pytorch" -> "linhandev/dataset" ["e"=1]
"bubbliiiing/unet-pytorch" -> "MrGiovanni/UNetPlusPlus" ["e"=1]
"RapidAI/LabelConvert" -> "ZJU-lishuang/yolov5_prune" ["e"=1]
"fei-aiart/courses" -> "qcymkxyc/Image-Process"
"fei-aiart/courses" -> "LiuFG/digital_image_process"
"fei-aiart/courses" -> "Ultrasty/Digital-Image-Processing"
"fei-aiart/courses" -> "Wuriqilang/Industry4.0-CV"
"jesolem/PCV" -> "willard-yuan/pcv-book-code"
"jesolem/PCV" -> "vlfeat/vlfeat" ["e"=1]
"jesolem/PCV" -> "sightmachine/SimpleCV"
"jesolem/PCV" -> "MasteringOpenCV/code" ["e"=1]
"jesolem/PCV" -> "abidrahmank/OpenCV2-Python-Tutorials"
"jesolem/PCV" -> "snavely/bundler_sfm" ["e"=1]
"jesolem/PCV" -> "luispedro/mahotas"
"jesolem/PCV" -> "oreillymedia/Learning-OpenCV-3_examples"
"jesolem/PCV" -> "techfort/pycv"
"jesolem/PCV" -> "ukoethe/vigra" ["e"=1]
"jesolem/PCV" -> "scikit-image/scikit-image" ["e"=1]
"jesolem/PCV" -> "mapillary/OpenSfM" ["e"=1]
"jesolem/PCV" -> "liuliu/ccv" ["e"=1]
"jesolem/PCV" -> "lisa-lab/pylearn2" ["e"=1]
"jesolem/PCV" -> "scikit-image/skimage-tutorials" ["e"=1]
"amusi/ICCV2023-Papers-with-Code" -> "amusi/ECCV2024-Papers-with-Code"
"amusi/ICCV2023-Papers-with-Code" -> "amusi/CVPR2025-Papers-with-Code"
"amusi/ICCV2023-Papers-with-Code" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"amusi/ICCV2023-Papers-with-Code" -> "52CV/CVPR-2021-Papers"
"amusi/ICCV2023-Papers-with-Code" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"amusi/ICCV2023-Papers-with-Code" -> "dk-liang/Awesome-Visual-Transformer"
"amusi/ICCV2023-Papers-with-Code" -> "amusi/daily-paper-computer-vision"
"amusi/ICCV2023-Papers-with-Code" -> "microsoft/Swin-Transformer"
"amusi/ICCV2023-Papers-with-Code" -> "DmitryRyumin/ICCV-2023-Papers" ["e"=1]
"amusi/ICCV2023-Papers-with-Code" -> "facebookresearch/Mask2Former" ["e"=1]
"amusi/ICCV2023-Papers-with-Code" -> "DWCTOD/CVPR2024-Papers-with-Code-Demo"
"amusi/ICCV2023-Papers-with-Code" -> "whai362/PVT"
"amusi/ICCV2023-Papers-with-Code" -> "MzeroMiko/VMamba" ["e"=1]
"amusi/ICCV2023-Papers-with-Code" -> "fundamentalvision/Deformable-DETR"
"amusi/ICCV2023-Papers-with-Code" -> "pengzhiliang/MAE-pytorch"
"52CV/CV-Surveys" -> "52CV/CVPR-2021-Papers"
"52CV/CV-Surveys" -> "52CV/CVPR-2022-Papers"
"52CV/CV-Surveys" -> "amusi/CVPR2025-Papers-with-Code"
"52CV/CV-Surveys" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"52CV/CV-Surveys" -> "52CV/CVPR-2023-Papers"
"52CV/CV-Surveys" -> "amusi/ICCV2023-Papers-with-Code"
"52CV/CV-Surveys" -> "amusi/ECCV2024-Papers-with-Code"
"52CV/CV-Surveys" -> "harleyszhang/cv_note" ["e"=1]
"52CV/CV-Surveys" -> "amusi/daily-paper-computer-vision"
"52CV/CV-Surveys" -> "DingXiaoH/RepVGG"
"52CV/CV-Surveys" -> "amusi/Deep-Learning-Interview-Book" ["e"=1]
"52CV/CV-Surveys" -> "GYee/CV_interviews_Q-A" ["e"=1]
"52CV/CV-Surveys" -> "52CV/CVPR-2024-Papers"
"52CV/CV-Surveys" -> "open-mmlab/mmrazor" ["e"=1]
"52CV/CV-Surveys" -> "dk-liang/Awesome-Visual-Transformer"
"inaturalist/inaturalist-open-data" -> "inaturalist/inatVisionTraining"
"facebookresearch/deit" -> "facebookresearch/mae"
"facebookresearch/deit" -> "microsoft/Swin-Transformer"
"facebookresearch/deit" -> "google-research/vision_transformer"
"facebookresearch/deit" -> "facebookresearch/dino"
"facebookresearch/deit" -> "whai362/PVT"
"facebookresearch/deit" -> "facebookresearch/ConvNeXt"
"facebookresearch/deit" -> "fundamentalvision/Deformable-DETR"
"facebookresearch/deit" -> "facebookresearch/moco" ["e"=1]
"facebookresearch/deit" -> "facebookresearch/detr"
"facebookresearch/deit" -> "lucidrains/vit-pytorch"
"facebookresearch/deit" -> "yitu-opensource/T2T-ViT"
"facebookresearch/deit" -> "facebookresearch/vissl" ["e"=1]
"facebookresearch/deit" -> "dk-liang/Awesome-Visual-Transformer"
"facebookresearch/deit" -> "jeonsworld/ViT-pytorch"
"facebookresearch/deit" -> "huggingface/pytorch-image-models"
"aleju/imgaug" -> "albumentations-team/albumentations"
"aleju/imgaug" -> "mdbloice/Augmentor"
"aleju/imgaug" -> "open-mmlab/mmdetection"
"aleju/imgaug" -> "Cadene/pretrained-models.pytorch"
"aleju/imgaug" -> "mrgloom/awesome-semantic-segmentation"
"aleju/imgaug" -> "huggingface/pytorch-image-models"
"aleju/imgaug" -> "facebookresearch/maskrcnn-benchmark"
"aleju/imgaug" -> "facebookresearch/Detectron"
"aleju/imgaug" -> "facebookresearch/detectron2"
"aleju/imgaug" -> "hoya012/deep_learning_object_detection"
"aleju/imgaug" -> "xingyizhou/CenterNet"
"aleju/imgaug" -> "matterport/Mask_RCNN"
"aleju/imgaug" -> "lukemelas/EfficientNet-PyTorch"
"aleju/imgaug" -> "AlexeyAB/darknet"
"aleju/imgaug" -> "wkentaro/labelme"
"zetane/viewer" -> "zetane/ZetaForge" ["e"=1]
"zetane/viewer" -> "julrog/nn_vis" ["e"=1]
"zetane/viewer" -> "ZhangGe6/onnx-modifier" ["e"=1]
"zetane/viewer" -> "microsoft/onnxconverter-common" ["e"=1]
"zetane/viewer" -> "apple/ml-cvnets" ["e"=1]
"zetane/viewer" -> "lutzroeder/netron"
"zetane/viewer" -> "Megvii-BaseDetection/YOLOX"
"zetane/viewer" -> "jacobgil/pytorch-grad-cam"
"zetane/viewer" -> "daquexian/onnx-simplifier"
"zetane/viewer" -> "xmu-xiaoma666/External-Attention-pytorch"
"zetane/viewer" -> "OpenPPL/ppq" ["e"=1]
"zetane/viewer" -> "open-mmlab/mmrazor" ["e"=1]
"zetane/viewer" -> "xlite-dev/lite.ai.toolkit"
"zetane/viewer" -> "murufeng/awesome_lightweight_networks"
"zetane/viewer" -> "open-mmlab/mmcv"
"Fafa-DL/Opencv-project" -> "murtazahassan/Learn-OpenCV-in-3-hours"
"Fafa-DL/Opencv-project" -> "Fafa-DL/Image-Augmentation"
"Fafa-DL/Opencv-project" -> "Fafa-DL/Awesome-Backbones"
"Fafa-DL/Opencv-project" -> "csuzhhj/OpenCVCourse_by_xjtu"
"Fafa-DL/Opencv-project" -> "Cuirongcheng/Image-matching-and-ranging-based-on-binocular-stereo-vision" ["e"=1]
"Fafa-DL/Opencv-project" -> "murtazahassan/Real-Time-Object-Measurement"
"PaddlePaddle/PASSL" -> "PaddlePaddle/PaddleSports"
"PaddlePaddle/PASSL" -> "PaddlePaddle/PLSC"
"PaddlePaddle/PASSL" -> "PaddlePaddle/VIMER" ["e"=1]
"PaddlePaddle/PASSL" -> "PaddlePaddle/hapi"
"PaddlePaddle/PASSL" -> "PaddlePaddle/PaConvert"
"PaddlePaddle/PASSL" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/PASSL" -> "PaddlePaddle/CINN"
"PaddlePaddle/PASSL" -> "PaddlePaddle/benchmark"
"PaddlePaddle/PASSL" -> "PaddlePaddle/VisionTools"
"techfort/pycv" -> "willard-yuan/pcv-book-code"
"techfort/pycv" -> "abidrahmank/OpenCV2-Python-Tutorials"
"techfort/pycv" -> "QianMo/OpenCV3-Intro-Book-Src"
"techfort/pycv" -> "mbeyeler/opencv-python-blueprints"
"techfort/pycv" -> "yeyun111/dlcv_for_beginners"
"techfort/pycv" -> "HadXu/machine-learning"
"techfort/pycv" -> "jesolem/PCV"
"AKSHAYUBHAT/ImageSegmentation" -> "kyamagu/js-segment-annotator"
"cvzone/cvzone" -> "homuler/MediaPipeUnityPlugin" ["e"=1]
"cvzone/cvzone" -> "murtazahassan/OpenCV-Python-Tutorials-and-Projects"
"cvzone/cvzone" -> "Kazuhito00/hand-gesture-recognition-using-mediapipe" ["e"=1]
"cvzone/cvzone" -> "Fafa-DL/Opencv-project"
"cvzone/cvzone" -> "Kazuhito00/mediapipe-python-sample"
"cvzone/cvzone" -> "Asadullah-Dal17/Eyes-Position-Estimator-Mediapipe"
"cvzone/cvzone" -> "niconielsen32/ComputerVision"
"cvzone/cvzone" -> "murtazahassan/Learn-OpenCV-in-3-hours"
"cvzone/cvzone" -> "axinc-ai/ailia-models" ["e"=1]
"cvzone/cvzone" -> "TesseraktZero/UnityHandTrackingWithMediapipe" ["e"=1]
"cvzone/cvzone" -> "google-ai-edge/mediapipe"
"cvzone/cvzone" -> "MengHao666/Minimal-Hand-pytorch" ["e"=1]
"cvzone/cvzone" -> "nicknochnack/TFODCourse" ["e"=1]
"cvzone/cvzone" -> "tryolabs/norfair" ["e"=1]
"cvzone/cvzone" -> "WongKinYiu/yolor"
"PINTO0309/tflite2tensorflow" -> "PINTO0309/TensorflowLite-bin" ["e"=1]
"PINTO0309/tflite2tensorflow" -> "PINTO0309/openvino2tensorflow"
"PINTO0309/tflite2tensorflow" -> "iwatake2222/play_with_tflite"
"PINTO0309/tflite2tensorflow" -> "terryky/tflite_gles_app"
"PINTO0309/tflite2tensorflow" -> "PINTO0309/simple-onnx-processing-tools"
"PINTO0309/tflite2tensorflow" -> "NobuoTsukamoto/tflite-cv-example"
"songhwanjun/Awesome-Noisy-Labels" -> "weijiaheng/Advances-in-Label-Noise-Learning"
"songhwanjun/Awesome-Noisy-Labels" -> "subeeshvasu/Awesome-Learning-with-Label-Noise"
"songhwanjun/Awesome-Noisy-Labels" -> "LiJunnan1992/DivideMix"
"songhwanjun/Awesome-Noisy-Labels" -> "gorkemalgan/deep_learning_with_noisy_labels_literature"
"songhwanjun/Awesome-Noisy-Labels" -> "bhanML/label-noise-papers"
"songhwanjun/Awesome-Noisy-Labels" -> "bhanML/Co-teaching"
"songhwanjun/Awesome-Noisy-Labels" -> "kaist-dmlab/RecencyBias" ["e"=1]
"songhwanjun/Awesome-Noisy-Labels" -> "kaist-dmlab/STARE" ["e"=1]
"songhwanjun/Awesome-Noisy-Labels" -> "shengliu66/ELR"
"songhwanjun/Awesome-Noisy-Labels" -> "TorchSSL/TorchSSL"
"songhwanjun/Awesome-Noisy-Labels" -> "yikun2019/PENCIL"
"songhwanjun/Awesome-Noisy-Labels" -> "kaist-dmlab/Hi-COVIDNet" ["e"=1]
"songhwanjun/Awesome-Noisy-Labels" -> "AlanChou/Truncated-Loss"
"songhwanjun/Awesome-Noisy-Labels" -> "kaist-dmlab/TensorSparkML" ["e"=1]
"songhwanjun/Awesome-Noisy-Labels" -> "kaist-dmlab/Ada-Boundary" ["e"=1]
"QianMo/OpenCV3-Intro-Book-Src" -> "oreillymedia/Learning-OpenCV-3_examples"
"QianMo/OpenCV3-Intro-Book-Src" -> "fendouai/OpenCVTutorials"
"QianMo/OpenCV3-Intro-Book-Src" -> "gzr2017/ImageProcessing100Wen"
"QianMo/OpenCV3-Intro-Book-Src" -> "JimmyHHua/opencv_tutorials"
"QianMo/OpenCV3-Intro-Book-Src" -> "makelove/OpenCV-Python-Tutorial"
"QianMo/OpenCV3-Intro-Book-Src" -> "QianMo/free-programming-books-zh_CN" ["e"=1]
"QianMo/OpenCV3-Intro-Book-Src" -> "QianMo/Real-Time-Rendering-3rd-CN-Summary-Ebook" ["e"=1]
"QianMo/OpenCV3-Intro-Book-Src" -> "CodecWang/opencv-python-tutorial"
"QianMo/OpenCV3-Intro-Book-Src" -> "liuruoze/EasyPR" ["e"=1]
"QianMo/OpenCV3-Intro-Book-Src" -> "gaoxiang12/slambook" ["e"=1]
"QianMo/OpenCV3-Intro-Book-Src" -> "opencv/opencv_contrib" ["e"=1]
"QianMo/OpenCV3-Intro-Book-Src" -> "liulinbo/slam" ["e"=1]
"QianMo/OpenCV3-Intro-Book-Src" -> "MasteringOpenCV/code" ["e"=1]
"QianMo/OpenCV3-Intro-Book-Src" -> "QianMo/Direct3D-Win32-Book-Src-Code" ["e"=1]
"QianMo/OpenCV3-Intro-Book-Src" -> "techfort/pycv"
"DWCTOD/ICCV2021-Papers-with-Code-Demo" -> "DWCTOD/CVPR2024-Papers-with-Code-Demo"
"DWCTOD/ICCV2021-Papers-with-Code-Demo" -> "DWCTOD/ECCV2022-Papers-with-Code-Demo"
"DWCTOD/ICCV2021-Papers-with-Code-Demo" -> "DrMahdiRezaei/DeepSOCIAL" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "facebookresearch/detr"
"fundamentalvision/Deformable-DETR" -> "IDEA-Research/DINO" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "IDEA-Research/detrex" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "fundamentalvision/BEVFormer" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "PeizeSun/SparseR-CNN"
"fundamentalvision/Deformable-DETR" -> "microsoft/Swin-Transformer"
"fundamentalvision/Deformable-DETR" -> "facebookresearch/deit"
"fundamentalvision/Deformable-DETR" -> "facebookresearch/Mask2Former" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "IDEA-Research/DN-DETR" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "IDEA-Research/DAB-DETR" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "lyuwenyu/RT-DETR" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "IDEA-Research/awesome-detection-transformer" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "aim-uofa/AdelaiDet"
"fundamentalvision/Deformable-DETR" -> "ShoufaChen/DiffusionDet" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "whai362/PVT"
"dk-liang/Awesome-Visual-Transformer" -> "DirtyHarryLYL/Transformer-in-Vision"
"dk-liang/Awesome-Visual-Transformer" -> "cmhungsteve/Awesome-Transformer-Attention"
"dk-liang/Awesome-Visual-Transformer" -> "microsoft/Swin-Transformer"
"dk-liang/Awesome-Visual-Transformer" -> "facebookresearch/deit"
"dk-liang/Awesome-Visual-Transformer" -> "Yangzhangcst/Transformer-in-Computer-Vision"
"dk-liang/Awesome-Visual-Transformer" -> "google-research/vision_transformer"
"dk-liang/Awesome-Visual-Transformer" -> "lucidrains/vit-pytorch"
"dk-liang/Awesome-Visual-Transformer" -> "IDEA-Research/awesome-detection-transformer" ["e"=1]
"dk-liang/Awesome-Visual-Transformer" -> "fundamentalvision/Deformable-DETR"
"dk-liang/Awesome-Visual-Transformer" -> "whai362/PVT"
"dk-liang/Awesome-Visual-Transformer" -> "jason718/awesome-self-supervised-learning" ["e"=1]
"dk-liang/Awesome-Visual-Transformer" -> "facebookresearch/ConvNeXt"
"dk-liang/Awesome-Visual-Transformer" -> "52CV/CVPR-2021-Papers"
"dk-liang/Awesome-Visual-Transformer" -> "MenghaoGuo/Awesome-Vision-Attentions"
"dk-liang/Awesome-Visual-Transformer" -> "facebookresearch/detr"
"facebookresearch/dino" -> "facebookresearch/dinov2" ["e"=1]
"facebookresearch/dino" -> "facebookresearch/mae"
"facebookresearch/dino" -> "facebookresearch/deit"
"facebookresearch/dino" -> "facebookresearch/moco" ["e"=1]
"facebookresearch/dino" -> "facebookresearch/vissl" ["e"=1]
"facebookresearch/dino" -> "microsoft/Swin-Transformer"
"facebookresearch/dino" -> "facebookresearch/detr"
"facebookresearch/dino" -> "mlfoundations/open_clip" ["e"=1]
"facebookresearch/dino" -> "google-research/vision_transformer"
"facebookresearch/dino" -> "lucidrains/vit-pytorch"
"facebookresearch/dino" -> "google-research/simclr" ["e"=1]
"facebookresearch/dino" -> "openai/CLIP"
"facebookresearch/dino" -> "facebookresearch/ConvNeXt"
"facebookresearch/dino" -> "IDEA-Research/DINO" ["e"=1]
"facebookresearch/dino" -> "huggingface/pytorch-image-models"
"Lightning-AI/torchmetrics" -> "Lightning-Universe/lightning-bolts"
"Lightning-AI/torchmetrics" -> "Lightning-Universe/lightning-flash"
"Lightning-AI/torchmetrics" -> "TylerYep/torchinfo"
"Lightning-AI/torchmetrics" -> "Lightning-Universe/lightning-transformers" ["e"=1]
"Lightning-AI/torchmetrics" -> "Lightning-AI/deep-learning-project-template"
"Lightning-AI/torchmetrics" -> "ashleve/lightning-hydra-template"
"Lightning-AI/torchmetrics" -> "arogozhnikov/einops"
"Lightning-AI/torchmetrics" -> "omry/omegaconf"
"Lightning-AI/torchmetrics" -> "facebookresearch/hydra"
"Lightning-AI/torchmetrics" -> "pytorch/captum"
"Lightning-AI/torchmetrics" -> "huggingface/accelerate" ["e"=1]
"Lightning-AI/torchmetrics" -> "KevinMusgrave/pytorch-metric-learning"
"Lightning-AI/torchmetrics" -> "Lightning-AI/pytorch-lightning"
"Lightning-AI/torchmetrics" -> "patrick-kidger/torchtyping" ["e"=1]
"Lightning-AI/torchmetrics" -> "kornia/kornia"
"Lightning-Universe/lightning-flash" -> "Lightning-Universe/lightning-bolts"
"Lightning-Universe/lightning-flash" -> "Lightning-Universe/lightning-transformers" ["e"=1]
"Lightning-Universe/lightning-flash" -> "Lightning-AI/torchmetrics"
"Lightning-Universe/lightning-flash" -> "Lightning-AI/deep-learning-project-template"
"Lightning-Universe/lightning-flash" -> "airctic/icevision" ["e"=1]
"Lightning-Universe/lightning-flash" -> "gradsflow/gradsflow-automl" ["e"=1]
"Lightning-Universe/lightning-flash" -> "baal-org/baal" ["e"=1]
"Lightning-Universe/lightning-flash" -> "Lightning-AI/tutorials"
"Lightning-Universe/lightning-flash" -> "skorch-dev/skorch" ["e"=1]
"Lightning-Universe/lightning-flash" -> "pytorch/captum"
"Lightning-Universe/lightning-flash" -> "catalyst-team/catalyst"
"Lightning-Universe/lightning-flash" -> "lightly-ai/lightly" ["e"=1]
"Lightning-Universe/lightning-flash" -> "facebookresearch/fairscale" ["e"=1]
"Lightning-Universe/lightning-flash" -> "replicate/keepsake" ["e"=1]
"Lightning-Universe/lightning-flash" -> "pytorch/functorch" ["e"=1]
"SwinTransformer/Swin-Transformer-Object-Detection" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation" ["e"=1]
"SwinTransformer/Swin-Transformer-Object-Detection" -> "microsoft/Swin-Transformer"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "fundamentalvision/Deformable-DETR"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "microsoft/SoftTeacher"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "IDEA-Research/DINO" ["e"=1]
"SwinTransformer/Swin-Transformer-Object-Detection" -> "microsoft/DynamicHead"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "xingyizhou/CenterNet2"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "whai362/PVT"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "aim-uofa/AdelaiDet"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "facebookresearch/detr"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "PeizeSun/SparseR-CNN"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "WXinlong/SOLO"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "Megvii-BaseDetection/YOLOX"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "WongKinYiu/yolor"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "WongKinYiu/ScaledYOLOv4"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/classification-keras"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/Siamese-pytorch" ["e"=1]
"bubbliiiing/classification-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/hrnet-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/classification-tf2"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/deeplabv3-plus-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/yolact-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/pspnet-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/yolov5-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/classification-pytorch" -> "bubbliiiing/classic-convolution-network"
"Megvii-BaseDetection/cvpods" -> "Megvii-BaseDetection/DeFCN"
"Megvii-BaseDetection/cvpods" -> "Megvii-BaseDetection/OTA"
"Megvii-BaseDetection/cvpods" -> "Megvii-BaseDetection/BorderDet"
"Megvii-BaseDetection/cvpods" -> "Megvii-BaseDetection/AutoAssign"
"Megvii-BaseDetection/cvpods" -> "megvii-model/YOLOF"
"Megvii-BaseDetection/cvpods" -> "chensnathan/YOLOF"
"Megvii-BaseDetection/cvpods" -> "PeizeSun/OneNet"
"Megvii-BaseDetection/cvpods" -> "PeizeSun/SparseR-CNN"
"Megvii-BaseDetection/cvpods" -> "kkhoot/PAA"
"Megvii-BaseDetection/cvpods" -> "Megvii-BaseDetection/DisAlign"
"Megvii-BaseDetection/cvpods" -> "phalanx-hk/kaggle_template" ["e"=1]
"Megvii-BaseDetection/cvpods" -> "microsoft/RelationNet2"
"Megvii-BaseDetection/cvpods" -> "damo-cv/FCOSPss"
"Megvii-BaseDetection/cvpods" -> "microsoft/SoftTeacher"
"Megvii-BaseDetection/cvpods" -> "implus/GFocalV2"
"Megvii-BaseDetection/DisAlign" -> "hyperconnect/LADE"
"Megvii-BaseDetection/DisAlign" -> "dvlab-research/MiSLAS"
"OpnTec/loklak_tweetsearch_android" -> "OpnTec/libregraphics.asia"
"OpnTec/loklak_tweetsearch_android" -> "OpnTec/mbm.vn"
"OpnTec/loklak_tweetsearch_android" -> "OpnTec/opentechsummit.cn"
"OpnTec/loklak_tweetsearch_android" -> "OpnTec/kiku.ai"
"OpnTec/loklak_tweetsearch_android" -> "fossasia/libsigrok"
"OpnTec/loklak_tweetsearch_android" -> "fossasia/libsigrokdecode"
"OpnTec/loklak_tweetsearch_android" -> "OpnTec/pycon.cn"
"OpnTec/loklak_tweetsearch_android" -> "fossasia/magic-epaper-case"
"fossasia/libsigrok" -> "fossasia/libsigrokdecode"
"fossasia/libsigrok" -> "OpnTec/loklak_tweetsearch_android"
"fossasia/libsigrok" -> "fossasia/magic-epaper-case"
"fossasia/libsigrok" -> "OpnTec/libregraphics.asia"
"fossasia/libsigrok" -> "OpnTec/mbm.vn"
"fossasia/libsigrok" -> "fossasia/eventyay.de"
"fossasia/libsigrok" -> "OpnTec/opentechsummit.cn"
"fossasia/libsigrok" -> "OpnTec/kiku.ai"
"OpnTec/libregraphics.asia" -> "OpnTec/loklak_tweetsearch_android"
"OpnTec/libregraphics.asia" -> "OpnTec/mbm.vn"
"OpnTec/libregraphics.asia" -> "OpnTec/opentechsummit.cn"
"OpnTec/libregraphics.asia" -> "OpnTec/kiku.ai"
"OpnTec/libregraphics.asia" -> "fossasia/libsigrok"
"OpnTec/libregraphics.asia" -> "fossasia/libsigrokdecode"
"OpnTec/libregraphics.asia" -> "OpnTec/pycon.cn"
"OpnTec/libregraphics.asia" -> "fossasia/eventyay.de"
"OpnTec/libregraphics.asia" -> "fossasia/magic-epaper-case"
"fossasia/eventyay.de" -> "fossasia/libsigrok"
"fossasia/eventyay.de" -> "fossasia/libsigrokdecode"
"fossasia/eventyay.de" -> "OpnTec/libregraphics.asia"
"fossasia/eventyay.de" -> "OpnTec/loklak_tweetsearch_android"
"fossasia/eventyay.de" -> "fossasia/magic-epaper-case"
"fossasia/eventyay.de" -> "OpnTec/mbm.vn"
"voicerepublic/upscuits" -> "voicerepublic/linux"
"voicerepublic/upscuits" -> "voicerepublic/activeadmin-dragonfly"
"voicerepublic/upscuits" -> "voicerepublic/transitions"
"voicerepublic/upscuits" -> "voicerepublic/faye"
"voicerepublic/upscuits" -> "voicerepublic/vr-api-specs"
"voicerepublic/upscuits" -> "voicerepublic/vr-mobile"
"voicerepublic/upscuits" -> "voicerepublic/voicerepublic_dev"
"voicerepublic/upscuits" -> "voicerepublic/vr-logorrhoe"
"voicerepublic/upscuits" -> "voicerepublic/vr-devbox"
"voicerepublic/upscuits" -> "voicerepublic/vr-fidelity"
"OpnTec/openxlab" -> "OpnTec/labs.fossasia.org"
"OpnTec/openxlab" -> "fossasia/code.fossasia.org"
"OpnTec/openxlab" -> "fossasia/eventyay.de"
"OpnTec/openxlab" -> "OpnTec/libregraphics.asia"
"OpnTec/openxlab" -> "OpnTec/loklak_tweetsearch_android"
"OpnTec/labs.fossasia.org" -> "OpnTec/openxlab"
"OpnTec/labs.fossasia.org" -> "fossasia/code.fossasia.org"
"OpnTec/labs.fossasia.org" -> "OpnTec/libregraphics.asia"
"fossasia/code.fossasia.org" -> "fossasia/ember-l10n"
"fossasia/code.fossasia.org" -> "OpnTec/labs.fossasia.org"
"fossasia/code.fossasia.org" -> "OpnTec/openxlab"
"fossasia/code.fossasia.org" -> "fossasia/2020.codeheat.org"
"wangs311/awesome-domain-adaptation-object-detection" -> "kinredon/DA_Detection_Material"
"wangs311/awesome-domain-adaptation-object-detection" -> "facebookresearch/adaptive_teacher"
"wangs311/awesome-domain-adaptation-object-detection" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"wangs311/awesome-domain-adaptation-object-detection" -> "chengchunhsu/EveryPixelMatters"
"wangs311/awesome-domain-adaptation-object-detection" -> "fpv-iplab/DA-RetinaNet"
"wangs311/awesome-domain-adaptation-object-detection" -> "kinredon/umt"
"wangs311/awesome-domain-adaptation-object-detection" -> "naoto0804/cross-domain-detection"
"wangs311/awesome-domain-adaptation-object-detection" -> "VisionLearningGroup/DA_Detection"
"wangs311/awesome-domain-adaptation-object-detection" -> "ChrisAllenMing/GPA-detection"
"wangs311/awesome-domain-adaptation-object-detection" -> "megvii-research/CR-DA-DET"
"wangs311/awesome-domain-adaptation-object-detection" -> "CityU-AIM-Group/SIGMA"
"wangs311/awesome-domain-adaptation-object-detection" -> "hnuzhy/SSDA-YOLO"
"wangs311/awesome-domain-adaptation-object-detection" -> "encounter1997/SFA"
"wangs311/awesome-domain-adaptation-object-detection" -> "chaoqichen/HTCN"
"wangs311/awesome-domain-adaptation-object-detection" -> "yuhuayc/sa-da-faster"
"fossasia/libsigrokdecode" -> "fossasia/libsigrok"
"fossasia/libsigrokdecode" -> "fossasia/magic-epaper-case"
"fossasia/libsigrokdecode" -> "OpnTec/loklak_tweetsearch_android"
"fossasia/libsigrokdecode" -> "OpnTec/libregraphics.asia"
"fossasia/libsigrokdecode" -> "OpnTec/opentechsummit.cn"
"fossasia/libsigrokdecode" -> "OpnTec/mbm.vn"
"fossasia/libsigrokdecode" -> "OpnTec/kiku.ai"
"fossasia/libsigrokdecode" -> "fossasia/eventyay.de"
"fossasia/libsigrokdecode" -> "OpnTec/pycon.cn"
"fossasia/libsigrokdecode" -> "fossasia/speech_recognition"
"rafaelpadilla/review_object_detection_metrics" -> "rafaelpadilla/Object-Detection-Metrics"
"rafaelpadilla/review_object_detection_metrics" -> "dbolya/tide"
"rafaelpadilla/review_object_detection_metrics" -> "Cartucho/mAP"
"rafaelpadilla/review_object_detection_metrics" -> "WongKinYiu/yolor"
"rafaelpadilla/review_object_detection_metrics" -> "obss/sahi"
"rafaelpadilla/review_object_detection_metrics" -> "WongKinYiu/ScaledYOLOv4"
"rafaelpadilla/review_object_detection_metrics" -> "rwightman/efficientdet-pytorch"
"rafaelpadilla/review_object_detection_metrics" -> "JonathonLuiten/TrackEval" ["e"=1]
"rafaelpadilla/review_object_detection_metrics" -> "airctic/icevision" ["e"=1]
"rafaelpadilla/review_object_detection_metrics" -> "ZFTurbo/Weighted-Boxes-Fusion"
"rafaelpadilla/review_object_detection_metrics" -> "cheind/py-motmetrics" ["e"=1]
"rafaelpadilla/review_object_detection_metrics" -> "microsoft/SoftTeacher"
"rafaelpadilla/review_object_detection_metrics" -> "laclouis5/globox"
"rafaelpadilla/review_object_detection_metrics" -> "jkjung-avt/tensorrt_demos" ["e"=1]
"rafaelpadilla/review_object_detection_metrics" -> "autodistill/autodistill" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "DirtyHarryLYL/Transformer-in-Vision"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "dk-liang/Awesome-Visual-Transformer"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "cmhungsteve/Awesome-Transformer-Attention"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "lxtGH/Awesome-Segmentation-With-Transformer" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "IDEA-Research/awesome-detection-transformer" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "zhenyingfang/Awesome-Temporal-Action-Detection-Temporal-Action-Proposal-Generation" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "LeapLabTHU/DAT" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "sangminwoo/awesome-vision-and-language" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "MarkMoHR/Awesome-Referring-Image-Segmentation" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "hila-chefer/Transformer-Explainability"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "EdisonLeeeee/Awesome-Masked-Autoencoders" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "liliu-avril/Awesome-Segment-Anything" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "fahadshamshad/awesome-transformers-in-medical-imaging" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "yuewang-cuhk/awesome-vision-language-pretraining-papers" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "sail-sg/poolformer" ["e"=1]
"lucidrains/lambda-networks" -> "leaderj1001/LambdaNetworks" ["e"=1]
"lucidrains/lambda-networks" -> "lucidrains/performer-pytorch" ["e"=1]
"lucidrains/lambda-networks" -> "zhanghang1989/ResNeSt"
"lucidrains/lambda-networks" -> "facebookresearch/FixRes"
"lucidrains/lambda-networks" -> "szq0214/MEAL-V2" ["e"=1]
"lucidrains/lambda-networks" -> "juntang-zhuang/Adabelief-Optimizer"
"lucidrains/lambda-networks" -> "yitu-opensource/T2T-ViT"
"lucidrains/lambda-networks" -> "facebookresearch/deit"
"lucidrains/lambda-networks" -> "d-li14/involution"
"lucidrains/lambda-networks" -> "PeizeSun/OneNet"
"lucidrains/lambda-networks" -> "clovaai/rexnet" ["e"=1]
"lucidrains/lambda-networks" -> "DingXiaoH/RepVGG"
"lucidrains/lambda-networks" -> "WongKinYiu/ScaledYOLOv4"
"lucidrains/lambda-networks" -> "facebookresearch/pycls"
"lucidrains/lambda-networks" -> "joe-siyuan-qiao/DetectoRS"
"heylight/canvas-select" -> "wanglin2/markjs"
"heylight/canvas-select" -> "hold-baby/label-img"
"jeonsworld/ViT-pytorch" -> "facebookresearch/deit"
"jeonsworld/ViT-pytorch" -> "google-research/vision_transformer"
"jeonsworld/ViT-pytorch" -> "lukemelas/PyTorch-Pretrained-ViT"
"jeonsworld/ViT-pytorch" -> "jacobgil/vit-explain"
"jeonsworld/ViT-pytorch" -> "yitu-opensource/T2T-ViT"
"jeonsworld/ViT-pytorch" -> "hila-chefer/Transformer-Explainability"
"jeonsworld/ViT-pytorch" -> "lucidrains/vit-pytorch"
"jeonsworld/ViT-pytorch" -> "dk-liang/Awesome-Visual-Transformer"
"jeonsworld/ViT-pytorch" -> "Beckschen/TransUNet" ["e"=1]
"jeonsworld/ViT-pytorch" -> "fudan-zvg/SETR" ["e"=1]
"jeonsworld/ViT-pytorch" -> "TACJu/TransFG" ["e"=1]
"jeonsworld/ViT-pytorch" -> "asyml/vision-transformer-pytorch"
"jeonsworld/ViT-pytorch" -> "gupta-abhay/pytorch-vit"
"jeonsworld/ViT-pytorch" -> "DirtyHarryLYL/Transformer-in-Vision"
"jeonsworld/ViT-pytorch" -> "microsoft/Swin-Transformer"
"davda54/sam" -> "google-research/sam"
"davda54/sam" -> "tomgoldstein/loss-landscape" ["e"=1]
"davda54/sam" -> "SamsungLabs/ASAM"
"davda54/sam" -> "moskomule/sam.pytorch"
"davda54/sam" -> "jettify/pytorch-optimizer"
"davda54/sam" -> "amirgholami/PyHessian" ["e"=1]
"davda54/sam" -> "facebookresearch/deit"
"davda54/sam" -> "juntang-zhuang/GSAM"
"davda54/sam" -> "lucidrains/lion-pytorch" ["e"=1]
"davda54/sam" -> "libffcv/ffcv"
"davda54/sam" -> "facebookresearch/DomainBed" ["e"=1]
"davda54/sam" -> "qubvel/ttach"
"davda54/sam" -> "rwightman/efficientdet-pytorch"
"davda54/sam" -> "lukemelas/EfficientNet-PyTorch"
"davda54/sam" -> "jeonsworld/ViT-pytorch"
"xingyizhou/CenterNet2" -> "megvii-model/YOLOF"
"xingyizhou/CenterNet2" -> "PeizeSun/SparseR-CNN"
"xingyizhou/CenterNet2" -> "FateScript/CenterNet-better"
"xingyizhou/CenterNet2" -> "xingyizhou/CenterTrack" ["e"=1]
"xingyizhou/CenterNet2" -> "WongKinYiu/ScaledYOLOv4"
"xingyizhou/CenterNet2" -> "implus/GFocalV2"
"xingyizhou/CenterNet2" -> "sfzhang15/ATSS"
"xingyizhou/CenterNet2" -> "xingyizhou/CenterNet"
"xingyizhou/CenterNet2" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"xingyizhou/CenterNet2" -> "aim-uofa/AdelaiDet"
"xingyizhou/CenterNet2" -> "PeizeSun/OneNet"
"xingyizhou/CenterNet2" -> "JDAI-CV/centerX"
"xingyizhou/CenterNet2" -> "Megvii-BaseDetection/DeFCN"
"xingyizhou/CenterNet2" -> "ZJULearning/ttfnet"
"xingyizhou/CenterNet2" -> "tianweiy/CenterPoint" ["e"=1]
"ZhiningLiu1998/imbalanced-ensemble" -> "ZhiningLiu1998/self-paced-ensemble"
"ZhiningLiu1998/imbalanced-ensemble" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"ZhiningLiu1998/imbalanced-ensemble" -> "analyticalmindsltd/smote_variants"
"ZhiningLiu1998/imbalanced-ensemble" -> "chongshengzhang/Multi_Imbalance"
"ZhiningLiu1998/imbalanced-ensemble" -> "ZhiningLiu1998/mesa"
"ZhiningLiu1998/imbalanced-ensemble" -> "YyzHarry/imbalanced-semi-self"
"ZhiningLiu1998/imbalanced-ensemble" -> "damianhorna/multi-imbalance"
"ZhiningLiu1998/imbalanced-ensemble" -> "jhwjhw0123/Imbalance-XGBoost"
"lukemelas/PyTorch-Pretrained-ViT" -> "jeonsworld/ViT-pytorch"
"lukemelas/PyTorch-Pretrained-ViT" -> "jacobgil/vit-explain"
"lukemelas/PyTorch-Pretrained-ViT" -> "asyml/vision-transformer-pytorch"
"lukemelas/PyTorch-Pretrained-ViT" -> "google-research/vision_transformer"
"lukemelas/PyTorch-Pretrained-ViT" -> "DirtyHarryLYL/Transformer-in-Vision"
"lukemelas/PyTorch-Pretrained-ViT" -> "FrancescoSaverioZuppichini/ViT"
"lukemelas/PyTorch-Pretrained-ViT" -> "facebookresearch/deit"
"lukemelas/PyTorch-Pretrained-ViT" -> "hila-chefer/Transformer-Explainability"
"lukemelas/PyTorch-Pretrained-ViT" -> "kentaroy47/vision-transformers-cifar10" ["e"=1]
"lukemelas/PyTorch-Pretrained-ViT" -> "lucidrains/vit-pytorch"
"lukemelas/PyTorch-Pretrained-ViT" -> "dk-liang/Awesome-Visual-Transformer"
"lukemelas/PyTorch-Pretrained-ViT" -> "lucidrains/TimeSformer-pytorch" ["e"=1]
"lukemelas/PyTorch-Pretrained-ViT" -> "yitu-opensource/T2T-ViT"
"lukemelas/PyTorch-Pretrained-ViT" -> "Alibaba-MIIL/ImageNet21K"
"lukemelas/PyTorch-Pretrained-ViT" -> "luo3300612/Visualizer"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/retinanet-pytorch"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/centernet-keras"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/centernet-pytorch" -> "ZeroE04/R-CenterNet" ["e"=1]
"bubbliiiing/centernet-pytorch" -> "yjh0410/CenterNet-plus"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/centernet-tf2"
"bubbliiiing/centernet-pytorch" -> "zzzxxxttt/pytorch_simple_CenterNet_45"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/retinaface-pytorch"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/RFB-keras"
"bubbliiiing/centernet-pytorch" -> "bubbliiiing/Mobilenet-SSD-Essay"
"developer0hye/PyTorch-Deformable-Convolution-v2" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"developer0hye/PyTorch-Deformable-Convolution-v2" -> "4uiiurz1/pytorch-deform-conv-v2"
"developer0hye/PyTorch-Deformable-Convolution-v2" -> "yjh0410/CenterNet-plus"
"developer0hye/PyTorch-Deformable-Convolution-v2" -> "lucasjinreal/DCNv2_latest"
"developer0hye/PyTorch-Deformable-Convolution-v2" -> "CHONSPQX/modulated-deform-conv" ["e"=1]
"developer0hye/PyTorch-Deformable-Convolution-v2" -> "ChunhuanLin/deform_conv_pytorch"
"yjh0410/CenterNet-plus" -> "yjh0410/CenterNet-Lite"
"yjh0410/CenterNet-plus" -> "xiaogangjia/CenterNet-FPN"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "DWCTOD/ECCV2022-Papers-with-Code-Demo"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "DWCTOD/ICCV2021-Papers-with-Code-Demo"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "amusi/ICCV2023-Papers-with-Code"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "amusi/ECCV2024-Papers-with-Code"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "amusi/CVPR2025-Papers-with-Code"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "52CV/CVPR-2021-Papers"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "52CV/CVPR-2023-Papers"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "52CV/CV-Surveys"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "facebookresearch/ConvNeXt"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "MenghaoGuo/Awesome-Vision-Attentions"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "gbstack/CVPR-2022-papers"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "huawei-noah/Efficient-AI-Backbones"
"DWCTOD/CVPR2024-Papers-with-Code-Demo" -> "amusi/daily-paper-computer-vision"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/facenet-retinaface-pytorch"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/arcface-pytorch"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/retinaface-pytorch"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/keras-face-recognition"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/pytorch-GAN"
"bubbliiiing/facenet-pytorch" -> "yeyupiaoling/Pytorch-MobileFaceNet" ["e"=1]
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/retinanet-pytorch"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/Siamese-pytorch" ["e"=1]
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/classification-pytorch"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/classification-keras"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/yolov7-pytorch"
"bubbliiiing/facenet-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"facebookresearch/d2go" -> "facebookresearch/mobile-vision" ["e"=1]
"facebookresearch/d2go" -> "Shopify/upgrow"
"facebookresearch/d2go" -> "pytorch/android-demo-app" ["e"=1]
"facebookresearch/d2go" -> "connor-create/wsbtrades"
"facebookresearch/d2go" -> "youngwanLEE/centermask2"
"facebookresearch/d2go" -> "facebookresearch/ClassyVision"
"facebookresearch/d2go" -> "Megvii-BaseDetection/DeFCN"
"facebookresearch/d2go" -> "xingyizhou/CenterNet2"
"facebookresearch/d2go" -> "sxhxliang/detectron2_backbone"
"facebookresearch/d2go" -> "Megvii-BaseDetection/cvpods"
"facebookresearch/d2go" -> "chongruo/detectron2-ResNeSt"
"facebookresearch/d2go" -> "dbolya/tide"
"facebookresearch/d2go" -> "megvii-model/YOLOF"
"facebookresearch/d2go" -> "grimoire/mmdetection-to-tensorrt" ["e"=1]
"facebookresearch/d2go" -> "megvii-model/DetNAS" ["e"=1]
"SlongLiu/query2labels" -> "QData/C-Tran"
"SlongLiu/query2labels" -> "Alibaba-MIIL/ML_Decoder"
"SlongLiu/query2labels" -> "Alibaba-MIIL/ASL"
"SlongLiu/query2labels" -> "JiaweiZhao-git/Awesome-Multi-label-Image-Recognition"
"SlongLiu/query2labels" -> "gaobb/MCAR"
"SlongLiu/query2labels" -> "HCPLab-SYSU/SSGRL"
"SlongLiu/query2labels" -> "Kevinz-code/CSRA"
"SlongLiu/query2labels" -> "starmemda/MlTr"
"SlongLiu/query2labels" -> "FT-ZHOU-ZZZ/DSDL"
"SlongLiu/query2labels" -> "Yejin0111/ADD-GCN"
"SlongLiu/query2labels" -> "curt-tigges/query2label"
"SlongLiu/query2labels" -> "chehao2628/MSRN"
"SlongLiu/query2labels" -> "Alibaba-MIIL/PartialLabelingCSL"
"SlongLiu/query2labels" -> "wutong16/DistributionBalancedLoss"
"SlongLiu/query2labels" -> "yang-ruixin/PyTorch-Image-Models-Multi-Label-Classification"
"elisemercury/Duplicate-Image-Finder" -> "philipbl/duplicate-images"
"elisemercury/Duplicate-Image-Finder" -> "markusressel/py-image-dedup"
"elisemercury/Duplicate-Image-Finder" -> "magamig/duplicate-images-finder"
"elisemercury/Duplicate-Image-Finder" -> "prateekralhan/Streamlit-based-Duplicate-Images-Finder"
"elisemercury/Duplicate-Image-Finder" -> "idealo/imagededup"
"elisemercury/Duplicate-Image-Finder" -> "adumrewal/SIFTImageSimilarity" ["e"=1]
"elisemercury/Duplicate-Image-Finder" -> "elisemercury/AutoClean"
"google-research/sam" -> "davda54/sam"
"google-research/sam" -> "SamsungLabs/ASAM"
"google-research/sam" -> "moskomule/sam.pytorch"
"google-research/sam" -> "juntang-zhuang/GSAM"
"google-research/sam" -> "tomgoldstein/loss-landscape" ["e"=1]
"google-research/sam" -> "shengliu66/ELR"
"google-research/sam" -> "google/spectral-density" ["e"=1]
"google-research/sam" -> "microsoft/CvT" ["e"=1]
"google-research/sam" -> "zihangJiang/TokenLabeling" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "xmu-xiaoma666/FightingCV-Course"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "xmu-xiaoma666/External-Attention-pytorch"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "iscyy/ultralyticsPro" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "MenghaoGuo/Awesome-Vision-Attentions"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "pprp/awesome-attention-mechanism-in-cv" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "jizhishutong/YOLOU" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "houqb/CoordAttention" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "Fafa-DL/Awesome-Backbones"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "murufeng/awesome_lightweight_networks"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "open-mmlab/OpenMMLabCourse"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "ZhugeKongan/torch-template-for-deep-learning" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "ZjjConan/SimAM" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "DWCTOD/CVPR2024-Papers-with-Code-Demo"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "huawei-noah/Efficient-AI-Backbones"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "alibaba/EasyCV"
"albertbup/deep-belief-network" -> "mehulrastogi/Deep-Belief-Network-pytorch"
"albertbup/deep-belief-network" -> "2015xli/DBN"
"albertbup/deep-belief-network" -> "myme5261314/dbn_tf"
"albertbup/deep-belief-network" -> "meownoid/tensorflow-rbm"
"albertbup/deep-belief-network" -> "gabrieleangeletti/Deep-Learning-TensorFlow"
"albertbup/deep-belief-network" -> "lucastheis/deepbelief"
"albertbup/deep-belief-network" -> "echen/restricted-boltzmann-machines"
"albertbup/deep-belief-network" -> "zhuofupan/Tensorflow-Deep-Neural-Networks"
"albertbup/deep-belief-network" -> "AmanPriyanshu/Deep-Belief-Networks-in-PyTorch"
"albertbup/deep-belief-network" -> "wuaalb/keras_extensions"
"albertbup/deep-belief-network" -> "kaushiksk/RBM_DBN"
"albertbup/deep-belief-network" -> "wmingwei/restricted-boltzmann-machine-deep-belief-network-deep-boltzmann-machine-in-pytorch"
"albertbup/deep-belief-network" -> "matrachma/Deep-Belief-Network-for-Regression"
"albertbup/deep-belief-network" -> "arthurmeyer/Convolutional_Deep_Belief_Network"
"albertbup/deep-belief-network" -> "GabrielBianconi/pytorch-rbm"
"PeizeSun/SparseR-CNN" -> "PeizeSun/OneNet"
"PeizeSun/SparseR-CNN" -> "Megvii-BaseDetection/DeFCN"
"PeizeSun/SparseR-CNN" -> "xingyizhou/CenterNet2"
"PeizeSun/SparseR-CNN" -> "sfzhang15/ATSS"
"PeizeSun/SparseR-CNN" -> "fundamentalvision/Deformable-DETR"
"PeizeSun/SparseR-CNN" -> "megvii-model/YOLOF"
"PeizeSun/SparseR-CNN" -> "aim-uofa/AdelaiDet"
"PeizeSun/SparseR-CNN" -> "implus/GFocalV2"
"PeizeSun/SparseR-CNN" -> "tianzhi0549/FCOS"
"PeizeSun/SparseR-CNN" -> "Megvii-BaseDetection/BorderDet"
"PeizeSun/SparseR-CNN" -> "facebookresearch/MaskFormer" ["e"=1]
"PeizeSun/SparseR-CNN" -> "WXinlong/SOLO"
"PeizeSun/SparseR-CNN" -> "whai362/PVT"
"PeizeSun/SparseR-CNN" -> "joe-siyuan-qiao/DetectoRS"
"PeizeSun/SparseR-CNN" -> "Sense-X/TSD"
"VDIGPKU/CBNetV2" -> "hyz-xmaster/swa_object_detection" ["e"=1]
"VDIGPKU/CBNetV2" -> "microsoft/SoftTeacher"
"VDIGPKU/CBNetV2" -> "microsoft/DynamicHead"
"VDIGPKU/CBNetV2" -> "shinya7y/UniverseNet"
"VDIGPKU/CBNetV2" -> "hyz-xmaster/VarifocalNet"
"VDIGPKU/CBNetV2" -> "EMI-Group/FaPN" ["e"=1]
"VDIGPKU/CBNetV2" -> "microsoft/CSWin-Transformer" ["e"=1]
"VDIGPKU/CBNetV2" -> "kemaloksuz/RankSortLoss"
"VDIGPKU/CBNetV2" -> "Megvii-BaseDetection/DeFCN"
"VDIGPKU/CBNetV2" -> "hustvl/QueryInst"
"VDIGPKU/CBNetV2" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"VDIGPKU/CBNetV2" -> "VDIGPKU/CBNet_pytorch" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "hila-chefer/Transformer-Explainability"
"hila-chefer/Transformer-MM-Explainability" -> "jacobgil/vit-explain"
"hila-chefer/Transformer-MM-Explainability" -> "samiraabnar/attention_flow"
"hila-chefer/Transformer-MM-Explainability" -> "haofanwang/natural-language-joint-query-search" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "luo3300612/Visualizer"
"hila-chefer/Transformer-MM-Explainability" -> "rmokady/CLIP_prefix_caption" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "mertyg/vision-language-models-are-bows" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "facebookresearch/SLIP" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "KaiyangZhou/CoOp" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "ashkamath/mdetr" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "salesforce/ALBEF" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "jeonsworld/ViT-pytorch"
"hila-chefer/Transformer-MM-Explainability" -> "airsplay/lxmert" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "Sense-GVT/DeCLIP" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "lucidrains/flamingo-pytorch" ["e"=1]
"Kevinz-code/CSRA" -> "QData/C-Tran"
"Kevinz-code/CSRA" -> "JiaweiZhao-git/Awesome-Multi-label-Image-Recognition"
"Kevinz-code/CSRA" -> "SlongLiu/query2labels"
"Kevinz-code/CSRA" -> "Alibaba-MIIL/ASL"
"Kevinz-code/CSRA" -> "chehao2628/MSRN"
"Kevinz-code/CSRA" -> "suilin0432/SoS-WSOD"
"weijiaheng/Advances-in-Label-Noise-Learning" -> "subeeshvasu/Awesome-Learning-with-Label-Noise"
"weijiaheng/Advances-in-Label-Noise-Learning" -> "songhwanjun/Awesome-Noisy-Labels"
"weijiaheng/Advances-in-Label-Noise-Learning" -> "LiJunnan1992/DivideMix"
"weijiaheng/Advances-in-Label-Noise-Learning" -> "UCSC-REAL/cifar-10-100n"
"weijiaheng/Advances-in-Label-Noise-Learning" -> "shengliu66/ELR"
"weijiaheng/Advances-in-Label-Noise-Learning" -> "PeiranLi0930/Comprehensive_DL_Tutor" ["e"=1]
"weijiaheng/Advances-in-Label-Noise-Learning" -> "elleryqueenhomels/fast_neural_style_transfer" ["e"=1]
"weijiaheng/Advances-in-Label-Noise-Learning" -> "WAMAWAMA/WAMA_Modules" ["e"=1]
"weijiaheng/Advances-in-Label-Noise-Learning" -> "risesoft-y9/Data-Labeling" ["e"=1]
"weijiaheng/Advances-in-Label-Noise-Learning" -> "weijiaheng/Robust-f-divergence-measures"
"weijiaheng/Advances-in-Label-Noise-Learning" -> "fudan-generative-vision/dynamicPDB" ["e"=1]
"weijiaheng/Advances-in-Label-Noise-Learning" -> "Stomach-ache/awesome-long-tail-learning"
"weijiaheng/Advances-in-Label-Noise-Learning" -> "shengliu66/SOP"
"weijiaheng/Advances-in-Label-Noise-Learning" -> "Text-to-Audio/Make-An-Audio" ["e"=1]
"weijiaheng/Advances-in-Label-Noise-Learning" -> "gorkemalgan/deep_learning_with_noisy_labels_literature"
"rooneysh/Labelme2YOLO" -> "GreatV/labelme2yolo"
"rooneysh/Labelme2YOLO" -> "fcakyon/labelme2coco"
"Kazuhito00/mediapipe-python-sample" -> "PINTO0309/mediapipe-bin"
"Kazuhito00/mediapipe-python-sample" -> "Kazuhito00/hand-gesture-recognition-using-mediapipe" ["e"=1]
"Kazuhito00/mediapipe-python-sample" -> "Kazuhito00/Tokyo2020-Pictogram-using-MediaPipe"
"Kazuhito00/mediapipe-python-sample" -> "wmuron/motpy" ["e"=1]
"kemaloksuz/RankSortLoss" -> "fcjian/TOOD"
"kemaloksuz/RankSortLoss" -> "dvlab-research/SA-AutoAug" ["e"=1]
"kemaloksuz/RankSortLoss" -> "kemaloksuz/aLRPLoss"
"kemaloksuz/RankSortLoss" -> "hyz-xmaster/VarifocalNet"
"yjh0410/PyTorch_YOLOv2" -> "yjh0410/DetLAB"
"xlite-dev/lite.ai.toolkit" -> "PaddlePaddle/FastDeploy"
"xlite-dev/lite.ai.toolkit" -> "wang-xinyu/tensorrtx"
"xlite-dev/lite.ai.toolkit" -> "shouxieai/tensorRT_Pro" ["e"=1]
"xlite-dev/lite.ai.toolkit" -> "deepcam-cn/yolov5-face" ["e"=1]
"xlite-dev/lite.ai.toolkit" -> "RangiLyu/nanodet"
"xlite-dev/lite.ai.toolkit" -> "daquexian/onnx-simplifier"
"xlite-dev/lite.ai.toolkit" -> "Megvii-BaseDetection/YOLOX"
"xlite-dev/lite.ai.toolkit" -> "Tencent/TNN"
"xlite-dev/lite.ai.toolkit" -> "Tencent/ncnn"
"xlite-dev/lite.ai.toolkit" -> "nihui/opencv-mobile"
"xlite-dev/lite.ai.toolkit" -> "ppogg/YOLOv5-Lite" ["e"=1]
"xlite-dev/lite.ai.toolkit" -> "open-mmlab/mmdeploy"
"xlite-dev/lite.ai.toolkit" -> "meituan/YOLOv6"
"xlite-dev/lite.ai.toolkit" -> "alibaba/MNN"
"xlite-dev/lite.ai.toolkit" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "chinhsuanwu/mobilevit-pytorch" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "wilile26811249/MobileViT" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "apple/ml-cvnets" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "huawei-noah/Efficient-AI-Backbones"
"murufeng/awesome_lightweight_networks" -> "hkzhang-git/ParC-Net" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "micronDLA/MobileViTv3" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "DingXiaoH/RepVGG"
"murufeng/awesome_lightweight_networks" -> "MenghaoGuo/Awesome-Vision-Attentions"
"murufeng/awesome_lightweight_networks" -> "houqb/CoordAttention" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "shanglianlm0525/PyTorch-Networks"
"murufeng/awesome_lightweight_networks" -> "JierunChen/FasterNet" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "iscyy/ultralyticsPro" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "ppogg/YOLOv5-Lite" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "ChengpengChen/RepGhost" ["e"=1]
"hila-chefer/Transformer-Explainability" -> "hila-chefer/Transformer-MM-Explainability"
"hila-chefer/Transformer-Explainability" -> "jacobgil/vit-explain"
"hila-chefer/Transformer-Explainability" -> "facebookresearch/deit"
"hila-chefer/Transformer-Explainability" -> "jeonsworld/ViT-pytorch"
"hila-chefer/Transformer-Explainability" -> "luo3300612/Visualizer"
"hila-chefer/Transformer-Explainability" -> "samiraabnar/attention_flow"
"hila-chefer/Transformer-Explainability" -> "jacobgil/pytorch-grad-cam"
"hila-chefer/Transformer-Explainability" -> "dk-liang/Awesome-Visual-Transformer"
"hila-chefer/Transformer-Explainability" -> "yitu-opensource/T2T-ViT"
"hila-chefer/Transformer-Explainability" -> "DirtyHarryLYL/Transformer-in-Vision"
"hila-chefer/Transformer-Explainability" -> "facebookresearch/dino"
"hila-chefer/Transformer-Explainability" -> "cdpierse/transformers-interpret" ["e"=1]
"hila-chefer/Transformer-Explainability" -> "whai362/PVT"
"hila-chefer/Transformer-Explainability" -> "pytorch/captum"
"hila-chefer/Transformer-Explainability" -> "zihangJiang/TokenLabeling" ["e"=1]
"WongKinYiu/ScaledYOLOv4" -> "WongKinYiu/PyTorch_YOLOv4"
"WongKinYiu/ScaledYOLOv4" -> "WongKinYiu/yolor"
"WongKinYiu/ScaledYOLOv4" -> "Tianxiaomo/pytorch-YOLOv4"
"WongKinYiu/ScaledYOLOv4" -> "WongKinYiu/CrossStagePartialNetworks"
"WongKinYiu/ScaledYOLOv4" -> "xingyizhou/CenterNet2"
"WongKinYiu/ScaledYOLOv4" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"WongKinYiu/ScaledYOLOv4" -> "Megvii-BaseDetection/YOLOX"
"WongKinYiu/ScaledYOLOv4" -> "hunglc007/tensorflow-yolov4-tflite" ["e"=1]
"WongKinYiu/ScaledYOLOv4" -> "joe-siyuan-qiao/DetectoRS"
"WongKinYiu/ScaledYOLOv4" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"WongKinYiu/ScaledYOLOv4" -> "GOATmessi8/ASFF"
"WongKinYiu/ScaledYOLOv4" -> "RangiLyu/nanodet"
"WongKinYiu/ScaledYOLOv4" -> "enazoe/yolo-tensorrt" ["e"=1]
"WongKinYiu/ScaledYOLOv4" -> "DingXiaoH/RepVGG"
"WongKinYiu/ScaledYOLOv4" -> "xingyizhou/CenterNet"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Learn-Python"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/darknet"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/OpenCV-Sudoku-Solver"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Learn-OpenCV-in-3-hours"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Face-Recognition"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Document-Scanner"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Angle-Finder"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Real-Time-Object-Measurement"
"geaxgx/depthai_blazepose" -> "geaxgx/depthai_movenet"
"geaxgx/depthai_blazepose" -> "geaxgx/depthai_hand_tracker"
"geaxgx/depthai_blazepose" -> "geaxgx/openvino_blazepose"
"geaxgx/depthai_blazepose" -> "luxonis/depthai-experiments"
"geaxgx/depthai_blazepose" -> "luxonis/depthai-python"
"geaxgx/depthai_blazepose" -> "vietanhdev/tf-blazepose"
"geaxgx/depthai_blazepose" -> "creativeIKEP/BlazePoseBarracuda" ["e"=1]
"geaxgx/depthai_blazepose" -> "jiang-du/BlazePose-tensorflow"
"geaxgx/depthai_blazepose" -> "luxonis/depthai"
"geaxgx/depthai_blazepose" -> "luxonis/depthai-core"
"geaxgx/depthai_blazepose" -> "luxonis/depthai-ml-training"
"geaxgx/depthai_blazepose" -> "geaxgx/depthai_handface"
"geaxgx/depthai_blazepose" -> "PINTO0309/tflite2tensorflow"
"cortictechnology/cep" -> "luxonis/depthai-gui"
"cortictechnology/cep" -> "cortictechnology/cait"
"yitu-opensource/T2T-ViT" -> "sail-sg/volo"
"yitu-opensource/T2T-ViT" -> "whai362/PVT"
"yitu-opensource/T2T-ViT" -> "facebookresearch/deit"
"yitu-opensource/T2T-ViT" -> "zihangJiang/TokenLabeling" ["e"=1]
"yitu-opensource/T2T-ViT" -> "lucidrains/bottleneck-transformer-pytorch" ["e"=1]
"yitu-opensource/T2T-ViT" -> "jeonsworld/ViT-pytorch"
"yitu-opensource/T2T-ViT" -> "raoyongming/DynamicViT" ["e"=1]
"yitu-opensource/T2T-ViT" -> "d-li14/involution"
"yitu-opensource/T2T-ViT" -> "dk-liang/Awesome-Visual-Transformer"
"yitu-opensource/T2T-ViT" -> "facebookresearch/convit" ["e"=1]
"yitu-opensource/T2T-ViT" -> "fudan-zvg/SETR" ["e"=1]
"yitu-opensource/T2T-ViT" -> "sail-sg/poolformer" ["e"=1]
"yitu-opensource/T2T-ViT" -> "Meituan-AutoML/Twins" ["e"=1]
"yitu-opensource/T2T-ViT" -> "lucidrains/lambda-networks"
"yitu-opensource/T2T-ViT" -> "hila-chefer/Transformer-Explainability"
"lucasjinreal/yolov7_d2" -> "meituan/YOLOv6"
"lucasjinreal/yolov7_d2" -> "WongKinYiu/yolov7"
"lucasjinreal/yolov7_d2" -> "Megvii-BaseDetection/YOLOX"
"lucasjinreal/yolov7_d2" -> "iscyy/ultralyticsPro" ["e"=1]
"lucasjinreal/yolov7_d2" -> "wang-xinyu/tensorrtx"
"lucasjinreal/yolov7_d2" -> "WongKinYiu/yolor"
"lucasjinreal/yolov7_d2" -> "jizhishutong/YOLOU" ["e"=1]
"lucasjinreal/yolov7_d2" -> "deepcam-cn/yolov5-face" ["e"=1]
"lucasjinreal/yolov7_d2" -> "RangiLyu/nanodet"
"lucasjinreal/yolov7_d2" -> "mikel-brostrom/boxmot" ["e"=1]
"lucasjinreal/yolov7_d2" -> "Linaom1214/TensorRT-For-YOLO-Series" ["e"=1]
"lucasjinreal/yolov7_d2" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"lucasjinreal/yolov7_d2" -> "Tianxiaomo/pytorch-YOLOv4"
"lucasjinreal/yolov7_d2" -> "WongKinYiu/ScaledYOLOv4"
"lucasjinreal/yolov7_d2" -> "ppogg/YOLOv5-Lite" ["e"=1]
"Megvii-BaseDetection/OTA" -> "Megvii-BaseDetection/DeFCN"
"Megvii-BaseDetection/OTA" -> "Megvii-BaseDetection/AutoAssign"
"Megvii-BaseDetection/OTA" -> "Megvii-BaseDetection/cvpods"
"Megvii-BaseDetection/OTA" -> "Megvii-BaseDetection/LLA"
"Megvii-BaseDetection/OTA" -> "kkhoot/PAA"
"Megvii-BaseDetection/OTA" -> "strongwolf/DW" ["e"=1]
"Megvii-BaseDetection/OTA" -> "fcjian/TOOD"
"Megvii-BaseDetection/OTA" -> "hyz-xmaster/VarifocalNet"
"Megvii-BaseDetection/OTA" -> "chensnathan/YOLOF"
"YutingXiao/Amodal-Segmentation-Based-on-Visible-Region-Segmentation-and-Shape-Prior" -> "apchenstu/SLN-Amodal"
"YutingXiao/Amodal-Segmentation-Based-on-Visible-Region-Segmentation-and-Shape-Prior" -> "waiyulam/ORCNN"
"YutingXiao/Amodal-Segmentation-Based-on-Visible-Region-Segmentation-and-Shape-Prior" -> "qqlu/Amodal-Instance-Segmentation-through-KINS-Dataset"
"YutingXiao/Amodal-Segmentation-Based-on-Visible-Region-Segmentation-and-Shape-Prior" -> "trqminh/aistron"
"YutingXiao/Amodal-Segmentation-Based-on-Visible-Region-Segmentation-and-Shape-Prior" -> "amazon-science/c2f-seg"
"whai362/PVT" -> "facebookresearch/deit"
"whai362/PVT" -> "Meituan-AutoML/Twins" ["e"=1]
"whai362/PVT" -> "yitu-opensource/T2T-ViT"
"whai362/PVT" -> "fundamentalvision/Deformable-DETR"
"whai362/PVT" -> "NVlabs/SegFormer" ["e"=1]
"whai362/PVT" -> "facebookresearch/MaskFormer" ["e"=1]
"whai362/PVT" -> "PeizeSun/SparseR-CNN"
"whai362/PVT" -> "fudan-zvg/SETR" ["e"=1]
"whai362/PVT" -> "facebookresearch/ConvNeXt"
"whai362/PVT" -> "microsoft/Swin-Transformer"
"whai362/PVT" -> "microsoft/CSWin-Transformer" ["e"=1]
"whai362/PVT" -> "dk-liang/Awesome-Visual-Transformer"
"whai362/PVT" -> "d-li14/involution"
"whai362/PVT" -> "aim-uofa/AdelaiDet"
"whai362/PVT" -> "DengPingFan/Polyp-PVT" ["e"=1]
"YyzHarry/imbalanced-regression" -> "jiawei-ren/BalancedMSE"
"YyzHarry/imbalanced-regression" -> "BorealisAI/ranksim-imbalanced-regression"
"YyzHarry/imbalanced-regression" -> "nickkunz/smogn"
"YyzHarry/imbalanced-regression" -> "YyzHarry/imbalanced-semi-self"
"YyzHarry/imbalanced-regression" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"YyzHarry/imbalanced-regression" -> "facebookresearch/classifier-balancing"
"YyzHarry/imbalanced-regression" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"YyzHarry/imbalanced-regression" -> "YyzHarry/multi-domain-imbalance"
"YyzHarry/imbalanced-regression" -> "SteiMi/density-based-weighting-for-imbalanced-regression"
"YyzHarry/imbalanced-regression" -> "kaiwenzha/Rank-N-Contrast"
"YyzHarry/imbalanced-regression" -> "kaidic/LDAM-DRW"
"YyzHarry/imbalanced-regression" -> "frank-xwang/RIDE-LongTailRecognition"
"YyzHarry/imbalanced-regression" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"YyzHarry/imbalanced-regression" -> "manujosephv/pytorch_tabular" ["e"=1]
"YyzHarry/imbalanced-regression" -> "Stomach-ache/awesome-long-tail-learning"
"gupta-abhay/pytorch-vit" -> "jeonsworld/ViT-pytorch"
"microsoft/DynamicHead" -> "implus/GFocalV2"
"microsoft/DynamicHead" -> "microsoft/SoftTeacher"
"microsoft/DynamicHead" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"microsoft/DynamicHead" -> "xingyizhou/CenterNet2"
"microsoft/DynamicHead" -> "VDIGPKU/CBNetV2"
"microsoft/DynamicHead" -> "fcjian/TOOD"
"microsoft/DynamicHead" -> "hyz-xmaster/VarifocalNet"
"microsoft/DynamicHead" -> "PeizeSun/SparseR-CNN"
"microsoft/DynamicHead" -> "joe-siyuan-qiao/DetectoRS"
"microsoft/DynamicHead" -> "hyz-xmaster/swa_object_detection" ["e"=1]
"microsoft/DynamicHead" -> "xieenze/DetCo" ["e"=1]
"microsoft/DynamicHead" -> "megvii-research/SOLQ"
"microsoft/DynamicHead" -> "IDEA-Research/awesome-detection-transformer" ["e"=1]
"microsoft/DynamicHead" -> "IDEA-Research/DINO" ["e"=1]
"microsoft/DynamicHead" -> "sail-sg/volo"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Learn-Python"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/darknet"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/OpenCV-Sudoku-Solver"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Angle-Finder"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Face-Recognition"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Digits-Classification"
"PeizeSun/OneNet" -> "Megvii-BaseDetection/DeFCN"
"PeizeSun/OneNet" -> "PeizeSun/SparseR-CNN"
"PeizeSun/OneNet" -> "Scalsol/RepPointsV2"
"PeizeSun/OneNet" -> "sfzhang15/ATSS"
"PeizeSun/OneNet" -> "megvii-model/YOLOF"
"PeizeSun/OneNet" -> "implus/GFocalV2"
"PeizeSun/OneNet" -> "xingyizhou/CenterNet2"
"PeizeSun/OneNet" -> "hyz-xmaster/VarifocalNet"
"PeizeSun/OneNet" -> "JDAI-CV/centerX"
"PeizeSun/OneNet" -> "implus/GFocal"
"PeizeSun/OneNet" -> "FateScript/CenterNet-better"
"PeizeSun/OneNet" -> "Megvii-BaseDetection/BorderDet"
"PeizeSun/OneNet" -> "aim-uofa/AdelaiDet"
"PeizeSun/OneNet" -> "Megvii-BaseDetection/AutoAssign"
"PeizeSun/OneNet" -> "microsoft/RelationNet2"
"Asadullah-Dal17/Eyes-Position-Estimator-Mediapipe" -> "Asadullah-Dal17/Eyes-Tracking-Opencv-and-Dlib"
"Asadullah-Dal17/Eyes-Position-Estimator-Mediapipe" -> "alireza787b/Python-Gaze-Face-Tracker"
"Asadullah-Dal17/Eyes-Position-Estimator-Mediapipe" -> "pperle/gaze-tracking-pipeline"
"rentainhe/pytorch-distributed-training" -> "tczhangzhi/pytorch-distributed"
"rentainhe/pytorch-distributed-training" -> "LeeYN-43/Clover"
"rentainhe/visualization" -> "luo3300612/Visualizer"
"rentainhe/visualization" -> "Berry-Wu/Visualization"
"rentainhe/visualization" -> "jacobgil/vit-explain"
"rentainhe/visualization" -> "facebookresearch/grid-feats-vqa" ["e"=1]
"rentainhe/visualization" -> "MILVLG/mcan-vqa" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "jettify/pytorch-optimizer"
"juntang-zhuang/Adabelief-Optimizer" -> "lucidrains/lambda-networks"
"juntang-zhuang/Adabelief-Optimizer" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"juntang-zhuang/Adabelief-Optimizer" -> "LiyuanLucasLiu/RAdam"
"juntang-zhuang/Adabelief-Optimizer" -> "lucidrains/performer-pytorch" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "Luolc/AdaBound"
"juntang-zhuang/Adabelief-Optimizer" -> "sail-sg/Adan" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "davda54/sam"
"juntang-zhuang/Adabelief-Optimizer" -> "lessw2020/Ranger21"
"juntang-zhuang/Adabelief-Optimizer" -> "digantamisra98/Mish"
"juntang-zhuang/Adabelief-Optimizer" -> "facebookresearch/madgrad"
"juntang-zhuang/Adabelief-Optimizer" -> "microsoft/fastformers" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "mlpen/Nystromformer" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "google-research/augmix"
"juntang-zhuang/Adabelief-Optimizer" -> "d-li14/involution"
"d-li14/involution" -> "houqb/CoordAttention" ["e"=1]
"d-li14/involution" -> "ChristophReich1996/Involution"
"d-li14/involution" -> "whai362/PVT"
"d-li14/involution" -> "DingXiaoH/RepVGG"
"d-li14/involution" -> "yitu-opensource/T2T-ViT"
"d-li14/involution" -> "megvii-model/YOLOF"
"d-li14/involution" -> "xingyizhou/CenterNet2"
"d-li14/involution" -> "BangguWu/ECANet" ["e"=1]
"d-li14/involution" -> "implus/GFocalV2"
"d-li14/involution" -> "lucidrains/lambda-networks"
"d-li14/involution" -> "d-li14/efficientnetv2.pytorch" ["e"=1]
"d-li14/involution" -> "PeizeSun/SparseR-CNN"
"d-li14/involution" -> "facebookresearch/deit"
"d-li14/involution" -> "zhanghang1989/ResNeSt"
"d-li14/involution" -> "DingXiaoH/DiverseBranchBlock" ["e"=1]
"niconielsen32/NeuralNetworks" -> "niconielsen32/ArtificialIntelligence"
"niconielsen32/NeuralNetworks" -> "niconielsen32/Robotics"
"niconielsen32/NeuralNetworks" -> "niconielsen32/AlgortihmsAndDataStructures"
"niconielsen32/NeuralNetworks" -> "niconielsen32/PointClouds"
"niconielsen32/NeuralNetworks" -> "niconielsen32/ObjectTracking"
"FrancescoSaverioZuppichini/ViT" -> "FrancescoSaverioZuppichini/glasses"
"FrancescoSaverioZuppichini/ViT" -> "lukemelas/PyTorch-Pretrained-ViT"
"FrancescoSaverioZuppichini/ViT" -> "jeonsworld/ViT-pytorch"
"facebookresearch/AugLy" -> "facebookresearch/vissl" ["e"=1]
"facebookresearch/AugLy" -> "makcedward/nlpaug" ["e"=1]
"facebookresearch/AugLy" -> "albumentations-team/albumentations"
"facebookresearch/AugLy" -> "facebookresearch/pytorchvideo" ["e"=1]
"facebookresearch/AugLy" -> "kornia/kornia"
"facebookresearch/AugLy" -> "KevinMusgrave/pytorch-metric-learning"
"facebookresearch/AugLy" -> "libffcv/ffcv"
"facebookresearch/AugLy" -> "arogozhnikov/einops"
"facebookresearch/AugLy" -> "QData/TextAttack" ["e"=1]
"facebookresearch/AugLy" -> "pytorch/captum"
"facebookresearch/AugLy" -> "facebookresearch/dino"
"facebookresearch/AugLy" -> "lightly-ai/lightly" ["e"=1]
"facebookresearch/AugLy" -> "speechbrain/speechbrain" ["e"=1]
"facebookresearch/AugLy" -> "iver56/audiomentations" ["e"=1]
"facebookresearch/AugLy" -> "cleanlab/cleanlab" ["e"=1]
"uvavision/Curriculum-Labeling" -> "nayeemrizve/ups"
"zhanggang001/RefineMask" -> "chenhang98/BPR"
"zhanggang001/RefineMask" -> "bowenc0221/boundary-iou-api"
"zhanggang001/RefineMask" -> "zhang-tao-whu/e2ec"
"zhanggang001/RefineMask" -> "aliyun/DCT-Mask"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/retinaface-pytorch"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/facenet-pytorch"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/arcface-pytorch"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/pytorch-GAN"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/srgan-keras"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/facenet-retinaface-keras"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/retinaface-tf2"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/Data-Structure-and-Algorithm"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/facenet-retinaface-pytorch" -> "bubbliiiing/retinanet-pytorch"
"Megvii-BaseDetection/DeFCN" -> "PeizeSun/OneNet"
"Megvii-BaseDetection/DeFCN" -> "Megvii-BaseDetection/cvpods"
"Megvii-BaseDetection/DeFCN" -> "Megvii-BaseDetection/AutoAssign"
"Megvii-BaseDetection/DeFCN" -> "megvii-model/YOLOF"
"Megvii-BaseDetection/DeFCN" -> "PeizeSun/SparseR-CNN"
"Megvii-BaseDetection/DeFCN" -> "Megvii-BaseDetection/OTA"
"Megvii-BaseDetection/DeFCN" -> "implus/GFocalV2"
"Megvii-BaseDetection/DeFCN" -> "Megvii-BaseDetection/BorderDet"
"Megvii-BaseDetection/DeFCN" -> "hyz-xmaster/VarifocalNet"
"Megvii-BaseDetection/DeFCN" -> "damo-cv/FCOSPss"
"Megvii-BaseDetection/DeFCN" -> "sfzhang15/ATSS"
"Megvii-BaseDetection/DeFCN" -> "kkhoot/PAA"
"Megvii-BaseDetection/DeFCN" -> "implus/GFocal"
"Megvii-BaseDetection/DeFCN" -> "fcjian/TOOD"
"Megvii-BaseDetection/DeFCN" -> "microsoft/RelationNet2"
"microsoft/SoftTeacher" -> "facebookresearch/unbiased-teacher"
"microsoft/SoftTeacher" -> "google-research/ssl_detection"
"microsoft/SoftTeacher" -> "ligang-cs/PseCo"
"microsoft/SoftTeacher" -> "VDIGPKU/CBNetV2"
"microsoft/SoftTeacher" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"microsoft/SoftTeacher" -> "Megvii-BaseDetection/DenseTeacher"
"microsoft/SoftTeacher" -> "microsoft/DynamicHead"
"microsoft/SoftTeacher" -> "xingyizhou/CenterNet2"
"microsoft/SoftTeacher" -> "Adamdad/ConsistentTeacher" ["e"=1]
"microsoft/SoftTeacher" -> "hhaAndroid/mmdetection-mini"
"microsoft/SoftTeacher" -> "TorchSSL/TorchSSL"
"microsoft/SoftTeacher" -> "IDEA-Research/DINO" ["e"=1]
"microsoft/SoftTeacher" -> "amirbar/DETReg" ["e"=1]
"microsoft/SoftTeacher" -> "PeizeSun/SparseR-CNN"
"microsoft/SoftTeacher" -> "AlibabaResearch/efficientteacher" ["e"=1]
"apugoneappu/ask_me_anything" -> "harsh-99/PyTorch-Tutorials"
"apugoneappu/ask_me_anything" -> "harsh-99/Sequential-Data-Loader-and-Model-for-Variable-Length-Data"
"apugoneappu/ask_me_anything" -> "open-wa/wa-automate-deploy-heroku"
"apugoneappu/ask_me_anything" -> "karnakgp/Karna" ["e"=1]
"yjh0410/PyTorch_YOLOv1" -> "yjh0410/PyTorch_YOLO-Family"
"yjh0410/PyTorch_YOLOv1" -> "yjh0410/RT-ODLab"
"yjh0410/PyTorch_YOLOv1" -> "yjh0410/new-YOLOv1_PyTorch"
"yjh0410/PyTorch_YOLOv1" -> "yjh0410/PyTorch_YOLOv3"
"yjh0410/PyTorch_YOLOv1" -> "yjh0410/FreeYOLO"
"lkeab/BCNet" -> "SysCV/transfiner"
"lkeab/BCNet" -> "XiaohangZhan/deocclusion"
"lkeab/BCNet" -> "YuqingWang1029/VisTR"
"lkeab/BCNet" -> "hustvl/QueryInst"
"lkeab/BCNet" -> "dvlab-research/PanopticFCN" ["e"=1]
"lkeab/BCNet" -> "waiyulam/ORCNN"
"lkeab/BCNet" -> "UARK-AICV/AISFormer"
"lkeab/BCNet" -> "WXinlong/SOLO"
"lkeab/BCNet" -> "YutingXiao/Amodal-Segmentation-Based-on-Visible-Region-Segmentation-and-Shape-Prior"
"lkeab/BCNet" -> "qqlu/Amodal-Instance-Segmentation-through-KINS-Dataset"
"lkeab/BCNet" -> "Championchess/A-Tri-Layer-Plugin-to-Improve-Occluded-Detection" ["e"=1]
"lkeab/BCNet" -> "SysCV/pcan" ["e"=1]
"lkeab/BCNet" -> "chenhang98/BPR"
"lkeab/BCNet" -> "zhanggang001/RefineMask"
"lkeab/BCNet" -> "megvii-research/SOLQ"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "iCVTEAM/Awesome-Multi-label-Image-Recognition"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "QData/C-Tran"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "iCVTEAM/TDRG"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "Yejin0111/ADD-GCN"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "Kevinz-code/CSRA"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "SlongLiu/query2labels"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "putao537/Awesome-Multi-label-Image-Recognition"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "gaobb/MCAR"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "sunanhe/MKT"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "Alibaba-MIIL/ML_Decoder"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "chehao2628/MSRN"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "HCPLab-SYSU/HCP-MLR-PL"
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" -> "guozix/TaI-DPT"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/mobilenet-yolov4-keras"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/mobilenet-yolov4-tf2"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/centernet-keras"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/yolov4-pytorch"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/retinanet-pytorch"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/Mobilenet-SSD-Essay"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/yolov5-pytorch"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/yolov7-pytorch"
"bubbliiiing/mobilenet-yolov4-pytorch" -> "bubbliiiing/count-mAP-txt"
"hustvl/YOLOS" -> "hustvl/MIMDet" ["e"=1]
"hustvl/YOLOS" -> "naver-ai/vidt" ["e"=1]
"hustvl/YOLOS" -> "hustvl/QueryInst"
"hustvl/YOLOS" -> "xingyizhou/CenterNet2"
"hustvl/YOLOS" -> "fundamentalvision/Deformable-DETR"
"hustvl/YOLOS" -> "megvii-model/YOLOF"
"hustvl/YOLOS" -> "WongKinYiu/yolor"
"hustvl/YOLOS" -> "Meituan-AutoML/Twins" ["e"=1]
"hustvl/YOLOS" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"hustvl/YOLOS" -> "Megvii-BaseDetection/OTA"
"hustvl/YOLOS" -> "Atten4Vis/ConditionalDETR" ["e"=1]
"hustvl/YOLOS" -> "ashkamath/mdetr" ["e"=1]
"hustvl/YOLOS" -> "amirbar/DETReg" ["e"=1]
"hustvl/YOLOS" -> "IDEA-Research/DN-DETR" ["e"=1]
"hustvl/YOLOS" -> "whai362/PVT"
"Chumsy0725/logit-adj-pytorch" -> "ShadeAlsha/LTR-weight-balancing"
"iwatake2222/InferenceHelper" -> "iwatake2222/play_with_tflite"
"iwatake2222/InferenceHelper" -> "iwatake2222/play_with_tensorrt"
"iwatake2222/InferenceHelper" -> "ValYouW/tflite-dist"
"iwatake2222/InferenceHelper" -> "iwatake2222/self-driving-ish_computer_vision_system"
"bubbliiiing/pytorch-GAN" -> "bubbliiiing/Reinforcement-Learning"
"megvii-model/YOLOF" -> "chensnathan/YOLOF"
"megvii-model/YOLOF" -> "Megvii-BaseDetection/DeFCN"
"megvii-model/YOLOF" -> "xingyizhou/CenterNet2"
"megvii-model/YOLOF" -> "PeizeSun/SparseR-CNN"
"megvii-model/YOLOF" -> "PeizeSun/OneNet"
"megvii-model/YOLOF" -> "Megvii-BaseDetection/cvpods"
"megvii-model/YOLOF" -> "implus/GFocalV2"
"megvii-model/YOLOF" -> "hyz-xmaster/VarifocalNet"
"megvii-model/YOLOF" -> "implus/GFocal"
"megvii-model/YOLOF" -> "sfzhang15/ATSS"
"megvii-model/YOLOF" -> "fcjian/TOOD"
"megvii-model/YOLOF" -> "WongKinYiu/ScaledYOLOv4"
"megvii-model/YOLOF" -> "joe-siyuan-qiao/DetectoRS"
"megvii-model/YOLOF" -> "DingXiaoH/RepVGG"
"megvii-model/YOLOF" -> "JosephKJ/OWOD" ["e"=1]
"fcjian/TOOD" -> "implus/GFocalV2"
"fcjian/TOOD" -> "kkhoot/PAA"
"fcjian/TOOD" -> "hyz-xmaster/VarifocalNet"
"fcjian/TOOD" -> "Megvii-BaseDetection/DeFCN"
"fcjian/TOOD" -> "kemaloksuz/RankSortLoss"
"fcjian/TOOD" -> "Megvii-BaseDetection/OTA"
"fcjian/TOOD" -> "chensnathan/YOLOF"
"fcjian/TOOD" -> "megvii-model/YOLOF"
"fcjian/TOOD" -> "strongwolf/DW" ["e"=1]
"fcjian/TOOD" -> "Megvii-BaseDetection/AutoAssign"
"fcjian/TOOD" -> "damo-cv/FCOSPss"
"fcjian/TOOD" -> "Megvii-BaseDetection/BorderDet"
"fcjian/TOOD" -> "ChenhongyiYang/QueryDet-PyTorch" ["e"=1]
"fcjian/TOOD" -> "Atten4Vis/ConditionalDETR" ["e"=1]
"fengzhenHIT/learnOpenCV4_Python" -> "fengzhenHIT/learnOpenCV4"
"bubbliiiing/dcgan-keras" -> "bubbliiiing/srgan-keras"
"philipbl/duplicate-images" -> "beeftornado/duplicate-image-finder"
"philipbl/duplicate-images" -> "knjcode/imgdupes"
"philipbl/duplicate-images" -> "elisemercury/Duplicate-Image-Finder"
"philipbl/duplicate-images" -> "idealo/imagededup"
"philipbl/duplicate-images" -> "benhoyt/dhash"
"philipbl/duplicate-images" -> "vuolter/deplicate"
"philipbl/duplicate-images" -> "umbertogriffo/fast-near-duplicate-image-search"
"philipbl/duplicate-images" -> "markusressel/py-image-dedup"
"plantnet/PlantNet-300K" -> "garcinc/noised-topk"
"plantnet/PlantNet-300K" -> "plantnet/gbif-dl"
"plantnet/PlantNet-300K" -> "cesar-leblanc/hdm-framework"
"plantnet/PlantNet-300K" -> "plantnet/my.plantnet"
"plantnet/PlantNet-300K" -> "plantnet/GeoLifeCLEF"
"asyml/vision-transformer-pytorch" -> "lukemelas/PyTorch-Pretrained-ViT"
"asyml/vision-transformer-pytorch" -> "jeonsworld/ViT-pytorch"
"microsoft/RelationNet2" -> "Megvii-BaseDetection/AutoAssign"
"microsoft/RelationNet2" -> "Megvii-BaseDetection/DeFCN"
"microsoft/RelationNet2" -> "Megvii-BaseDetection/BorderDet"
"microsoft/RelationNet2" -> "implus/GFocalV2"
"extreme-assistant/survey-computer-vision-2020" -> "extreme-assistant/survey-computer-vision-2021"
"extreme-assistant/survey-computer-vision-2020" -> "extreme-assistant/Awesome-CV-Team"
"extreme-assistant/survey-computer-vision-2020" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"extreme-assistant/survey-computer-vision-2020" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"extreme-assistant/survey-computer-vision-2020" -> "jeya-maria-jose/Medical-Transformer" ["e"=1]
"chensnathan/YOLOF" -> "megvii-model/YOLOF"
"chensnathan/YOLOF" -> "implus/GFocalV2"
"chensnathan/YOLOF" -> "fcjian/TOOD"
"chensnathan/YOLOF" -> "dvlab-research/SA-AutoAug" ["e"=1]
"chensnathan/YOLOF" -> "Megvii-BaseDetection/OTA"
"chensnathan/YOLOF" -> "Megvii-BaseDetection/cvpods"
"chensnathan/YOLOF" -> "Megvii-BaseDetection/DeFCN"
"chensnathan/YOLOF" -> "hyz-xmaster/VarifocalNet"
"lessw2020/Ranger21" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"lessw2020/Ranger21" -> "lessw2020/Best-Deep-Learning-Optimizers"
"lessw2020/Ranger21" -> "mgrankin/over9000"
"lessw2020/Ranger21" -> "facebookresearch/madgrad"
"lessw2020/Ranger21" -> "amirgholami/adahessian" ["e"=1]
"vietanhdev/tf-blazepose" -> "jiang-du/BlazePose-tensorflow"
"vietanhdev/tf-blazepose" -> "geaxgx/openvino_blazepose"
"vietanhdev/tf-blazepose" -> "geaxgx/depthai_blazepose"
"hustvl/QueryInst" -> "hustvl/TeViT"
"hustvl/QueryInst" -> "YuqingWang1029/VisTR"
"hustvl/QueryInst" -> "hujiecpp/ISTR"
"hustvl/QueryInst" -> "hustvl/CrossVIS"
"hustvl/QueryInst" -> "megvii-research/SOLQ"
"hustvl/QueryInst" -> "hustvl/MIMDet" ["e"=1]
"hustvl/QueryInst" -> "hustvl/SparseInst"
"hustvl/QueryInst" -> "PeizeSun/SparseR-CNN"
"hustvl/QueryInst" -> "hustvl/ViG" ["e"=1]
"hustvl/QueryInst" -> "wjf5203/SeqFormer"
"hustvl/QueryInst" -> "youtubevos/cocoapi"
"hustvl/QueryInst" -> "lkeab/BCNet"
"hustvl/QueryInst" -> "FoundationVision/VNext"
"hustvl/QueryInst" -> "hustvl/YOLOS"
"hustvl/QueryInst" -> "hustvl/DiG" ["e"=1]
"yang-ruixin/PyTorch-Image-Models-Multi-Label-Classification" -> "yang-ruixin/pytorch-image-models-with-simclr"
"yang-ruixin/PyTorch-Image-Models-Multi-Label-Classification" -> "hellowangqian/multi-label-image-classification"
"dvgodoy/dl-visuals" -> "sscardapane/reprodl2021" ["e"=1]
"dvgodoy/dl-visuals" -> "dvgodoy/PyTorchStepByStep" ["e"=1]
"dvgodoy/dl-visuals" -> "jalammar/ecco" ["e"=1]
"dvgodoy/dl-visuals" -> "facebookresearch/vissl" ["e"=1]
"dvgodoy/dl-visuals" -> "facebookresearch/AugLy"
"dvgodoy/dl-visuals" -> "dair-ai/nlp_paper_summaries" ["e"=1]
"dvgodoy/dl-visuals" -> "libffcv/ffcv"
"dvgodoy/dl-visuals" -> "huggingface/awesome-papers" ["e"=1]
"dvgodoy/dl-visuals" -> "probml/pyprobml" ["e"=1]
"dvgodoy/dl-visuals" -> "dair-ai/ml-visuals"
"dvgodoy/dl-visuals" -> "phalanx-hk/kaggle_template" ["e"=1]
"dvgodoy/dl-visuals" -> "paperswithcode/releasing-research-code" ["e"=1]
"dvgodoy/dl-visuals" -> "arXivTimes/arXivTimes" ["e"=1]
"dvgodoy/dl-visuals" -> "pfnet/pysen" ["e"=1]
"dvgodoy/dl-visuals" -> "louisfb01/Best_AI_paper_2020" ["e"=1]
"TransylvanianInstituteOfNeuroscience/Superlets" -> "irhum/superlets"
"encounter1997/SFA" -> "encounter1997/DE-CondDETR"
"encounter1997/SFA" -> "encounter1997/DE-DETRs"
"encounter1997/SFA" -> "encounter1997/Arxiv-Daily"
"encounter1997/SFA" -> "encounter1997/FP-DETR"
"encounter1997/SFA" -> "zhukaii/SPPR" ["e"=1]
"encounter1997/SFA" -> "lhc1224/OSAD_Net" ["e"=1]
"encounter1997/SFA" -> "kinredon/umt"
"encounter1997/SFA" -> "MCG-NJU/TIA"
"encounter1997/SFA" -> "CityU-AIM-Group/SIGMA"
"SparseL/SAE-FCM" -> "julzerinos/python-fuzzy-cognitve-maps"
"SparseL/SAE-FCM" -> "yangysc/Wavelet-HFCM"
"bubbliiiing/facenet-keras" -> "bubbliiiing/facenet-retinaface-keras"
"bubbliiiing/facenet-keras" -> "bubbliiiing/facenet-tf2"
"bubbliiiing/facenet-keras" -> "bubbliiiing/retinaface-keras"
"bubbliiiing/facenet-keras" -> "bubbliiiing/Optimization_Algorithm"
"QData/C-Tran" -> "SlongLiu/query2labels"
"QData/C-Tran" -> "JiaweiZhao-git/Awesome-Multi-label-Image-Recognition"
"QData/C-Tran" -> "Kevinz-code/CSRA"
"QData/C-Tran" -> "gaobb/MCAR"
"QData/C-Tran" -> "Yejin0111/ADD-GCN"
"QData/C-Tran" -> "hellowangqian/multi-label-image-classification"
"QData/C-Tran" -> "Alibaba-MIIL/ASL"
"QData/C-Tran" -> "FT-ZHOU-ZZZ/DSDL"
"QData/C-Tran" -> "Alibaba-MIIL/ML_Decoder"
"QData/C-Tran" -> "iCVTEAM/TDRG"
"QData/C-Tran" -> "starmemda/MlTr"
"QData/C-Tran" -> "HCPLab-SYSU/SSGRL"
"QData/C-Tran" -> "sunanhe/MKT"
"QData/C-Tran" -> "jasonseu/SALGL"
"QData/C-Tran" -> "chehao2628/MSRN"
"Lightning-AI/tutorials" -> "Lightning-AI/utilities" ["e"=1]
"Lightning-AI/tutorials" -> "gradsflow/gradsflow-automl" ["e"=1]
"Lightning-AI/tutorials" -> "pystiche/pystiche" ["e"=1]
"Lightning-AI/tutorials" -> "Lightning-Universe/lightning-transformers" ["e"=1]
"cjf8899/OCR_kor_en" -> "J911/J911"
"cjf8899/OCR_kor_en" -> "cjf8899/CDRL-SA"
"Ultrasty/Digital-Image-Processing" -> "chengchengzi/Digital-Image-Processing"
"Ultrasty/Digital-Image-Processing" -> "MAhaitao999/digital_image_processing"
"Ultrasty/Digital-Image-Processing" -> "qcymkxyc/Image-Process"
"Ultrasty/Digital-Image-Processing" -> "LiuFG/digital_image_process"
"Ultrasty/Digital-Image-Processing" -> "dipum/dipum-toolbox"
"Ultrasty/Digital-Image-Processing" -> "fei-aiart/courses"
"Ultrasty/Digital-Image-Processing" -> "matlablyz/Digital-images"
"bubbliiiing/unet-tf2" -> "bubbliiiing/pspnet-tf2"
"bubbliiiing/unet-tf2" -> "bubbliiiing/deeplabv3-plus-tf2"
"bubbliiiing/deeplabv3-plus-keras" -> "bubbliiiing/deeplabv3-plus-tf2"
"DirtyHarryLYL/Transformer-in-Vision" -> "dk-liang/Awesome-Visual-Transformer"
"DirtyHarryLYL/Transformer-in-Vision" -> "Yangzhangcst/Transformer-in-Computer-Vision"
"DirtyHarryLYL/Transformer-in-Vision" -> "DirtyHarryLYL/HOI-Learning-List" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "yuewang-cuhk/awesome-vision-language-pretraining-papers" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "facebookresearch/deit"
"DirtyHarryLYL/Transformer-in-Vision" -> "cmhungsteve/Awesome-Transformer-Attention"
"DirtyHarryLYL/Transformer-in-Vision" -> "DirtyHarryLYL/LLM-in-Vision" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "hila-chefer/Transformer-Explainability"
"DirtyHarryLYL/Transformer-in-Vision" -> "whai362/PVT"
"DirtyHarryLYL/Transformer-in-Vision" -> "ashkamath/mdetr" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "jeonsworld/ViT-pytorch"
"DirtyHarryLYL/Transformer-in-Vision" -> "yitu-opensource/T2T-ViT"
"DirtyHarryLYL/Transformer-in-Vision" -> "ttengwang/Awesome_Prompting_Papers_in_Computer_Vision" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "raoyongming/DynamicViT" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "52CV/CVPR-2021-Papers"
"facebookresearch/unbiased-teacher" -> "google-research/ssl_detection"
"facebookresearch/unbiased-teacher" -> "microsoft/SoftTeacher"
"facebookresearch/unbiased-teacher" -> "facebookresearch/unbiased-teacher-v2"
"facebookresearch/unbiased-teacher" -> "facebookresearch/adaptive_teacher"
"facebookresearch/unbiased-teacher" -> "kinredon/umt"
"facebookresearch/unbiased-teacher" -> "soo89/CSD-SSD"
"facebookresearch/unbiased-teacher" -> "Megvii-BaseDetection/DenseTeacher"
"facebookresearch/unbiased-teacher" -> "chengchunhsu/EveryPixelMatters"
"facebookresearch/unbiased-teacher" -> "mightyzau/Instant-Teaching"
"facebookresearch/unbiased-teacher" -> "amirbar/DETReg" ["e"=1]
"facebookresearch/unbiased-teacher" -> "HikariTJU/LD" ["e"=1]
"facebookresearch/unbiased-teacher" -> "kinredon/DA_Detection_Material"
"facebookresearch/unbiased-teacher" -> "naoto0804/cross-domain-detection"
"facebookresearch/unbiased-teacher" -> "hikvision-research/SSOD"
"facebookresearch/unbiased-teacher" -> "wangs311/awesome-domain-adaptation-object-detection"
"kongds/LightXML" -> "nilesh2797/zestxml"
"kongds/LightXML" -> "OctoberChang/X-Transformer"
"kongds/LightXML" -> "yourh/AttentionXML"
"kongds/LightXML" -> "XunGuangxu/CorNet"
"kongds/LightXML" -> "huiyegit/APLC_XLNet"
"kongds/LightXML" -> "chiennv2000/LR-GCN"
"kongds/LightXML" -> "Extreme-classification/ECLARE"
"kongds/LightXML" -> "siddsax/XML-CNN"
"kongds/LightXML" -> "Extreme-classification/deepxml"
"kongds/LightXML" -> "EMNLP2019LSAN/LSAN"
"facebookresearch/madgrad" -> "lessw2020/Ranger21"
"facebookresearch/madgrad" -> "jettify/pytorch-optimizer"
"facebookresearch/madgrad" -> "lessw2020/Best-Deep-Learning-Optimizers"
"facebookresearch/madgrad" -> "juntang-zhuang/Adabelief-Optimizer"
"facebookresearch/madgrad" -> "amirgholami/adahessian" ["e"=1]
"facebookresearch/madgrad" -> "pinterest/querybook" ["e"=1]
"facebookresearch/madgrad" -> "lucidrains/lambda-networks"
"facebookresearch/madgrad" -> "qubvel/ttach"
"facebookresearch/madgrad" -> "Yonghongwei/Gradient-Centralization"
"facebookresearch/madgrad" -> "Lightning-Universe/lightning-flash"
"encounter1997/Arxiv-Daily" -> "encounter1997/DE-CondDETR"
"microsoft/MLC" -> "WuYichen-97/Learning-to-Purify-Noisy-Labels-via-Meta-Soft-Label-Corrector"
"microsoft/MLC" -> "gorkemalgan/MSLG_noisy_label"
"microsoft/MLC" -> "chenpf1025/IDN"
"bubbliiiing/yolo3-tf2" -> "bubbliiiing/efficientnet-yolo3-tf2"
"bubbliiiing/yolo3-tf2" -> "bubbliiiing/yolox-tf2"
"MatthewHowe/DCNv2" -> "tteepe/DCNv2"
"MatthewHowe/DCNv2" -> "lucasjinreal/DCNv2_latest"
"MatthewHowe/DCNv2" -> "rathaROG/DCNv2_Windows"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/ssd-tf2"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/centernet-keras"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/centernet-tf2"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/efficientdet-tf2"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/yolov4-tiny-tf2"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/yolov5-tf2"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/faster-rcnn-keras"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/retinaface-tf2"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/yolov4-tf2"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/pspnet-tf2"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/unet-keras"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/yolo3-tf2"
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/mobilenet-yolov4-tf2"
"bubbliiiing/faster-rcnn-tf2" -> "cmd23333/Faster-rcnn-tensorflow2.x" ["e"=1]
"bubbliiiing/faster-rcnn-tf2" -> "bubbliiiing/Data-Structure-and-Algorithm"
"sukjunhwang/IFC" -> "sukjunhwang/VITA"
"sukjunhwang/IFC" -> "miranheo/GenVIS"
"sukjunhwang/IFC" -> "hustvl/CrossVIS"
"sukjunhwang/IFC" -> "KimHanjung/VISAGE"
"SamsungLabs/ASAM" -> "juntang-zhuang/GSAM"
"SamsungLabs/ASAM" -> "dydjw9/Efficient_SAM"
"SamsungLabs/ASAM" -> "Mi-Peng/Sparse-Sharpness-Aware-Minimization"
"xingyizhou/UniDet" -> "xingyizhou/CenterNet2"
"xingyizhou/UniDet" -> "PeizeSun/OneNet"
"xingyizhou/UniDet" -> "Megvii-BaseDetection/DeFCN"
"xingyizhou/UniDet" -> "dvlab-research/SA-AutoAug" ["e"=1]
"xingyizhou/UniDet" -> "HikariTJU/LD" ["e"=1]
"xingyizhou/UniDet" -> "facebookresearch/Detic" ["e"=1]
"xingyizhou/UniDet" -> "facebookresearch/unbiased-teacher"
"xingyizhou/UniDet" -> "frank-xwang/towards-universal-object-detection"
"xingyizhou/UniDet" -> "JosephKJ/OWOD" ["e"=1]
"xingyizhou/UniDet" -> "ZwwWayne/K-Net"
"xingyizhou/UniDet" -> "PeizeSun/SparseR-CNN"
"xingyizhou/UniDet" -> "Sense-X/TSD"
"xingyizhou/UniDet" -> "amazon-science/bigdetection" ["e"=1]
"xingyizhou/UniDet" -> "FateScript/CenterNet-better"
"AmanPriyanshu/Deep-Belief-Networks-in-PyTorch" -> "mehulrastogi/Deep-Belief-Network-pytorch"
"sail-sg/volo" -> "zihangJiang/TokenLabeling" ["e"=1]
"sail-sg/volo" -> "yitu-opensource/T2T-ViT"
"sail-sg/volo" -> "houqb/VisionPermutator" ["e"=1]
"sail-sg/volo" -> "whai362/PVT"
"sail-sg/volo" -> "facebookresearch/convit" ["e"=1]
"sail-sg/volo" -> "zhoudaquan/Refiner_ViT" ["e"=1]
"sail-sg/volo" -> "szq0214/MEAL-V2" ["e"=1]
"sail-sg/volo" -> "SwinTransformer/Transformer-SSL" ["e"=1]
"sail-sg/volo" -> "microsoft/DynamicHead"
"sail-sg/volo" -> "facebookresearch/deit"
"sail-sg/volo" -> "ShoufaChen/CycleMLP" ["e"=1]
"sail-sg/volo" -> "microsoft/CSWin-Transformer" ["e"=1]
"sail-sg/volo" -> "wofmanaf/ResT" ["e"=1]
"sail-sg/volo" -> "sail-sg/poolformer" ["e"=1]
"sail-sg/volo" -> "lucidrains/lambda-networks"
"Taeyoung96/Yolo-to-COCO-format-converter" -> "RapidAI/LabelConvert"
"Taeyoung96/Yolo-to-COCO-format-converter" -> "Taeyoung96/Taeyoung96.github.io"
"Taeyoung96/Yolo-to-COCO-format-converter" -> "laclouis5/globox"
"Taeyoung96/Yolo-to-COCO-format-converter" -> "pylabel-project/samples"
"v0lta/PyTorch-Wavelet-Toolbox" -> "fbcotter/pytorch_wavelets"
"v0lta/PyTorch-Wavelet-Toolbox" -> "gan-police/frequency-forensics"
"v0lta/PyTorch-Wavelet-Toolbox" -> "Fraunhofer-SCAI/wavelet_pooling"
"v0lta/PyTorch-Wavelet-Toolbox" -> "tomrunia/PyTorchWavelets"
"v0lta/PyTorch-Wavelet-Toolbox" -> "HazeDT/WaveletKernelNet" ["e"=1]
"v0lta/PyTorch-Wavelet-Toolbox" -> "lpj-github-io/MWCNNv2" ["e"=1]
"v0lta/PyTorch-Wavelet-Toolbox" -> "yyk-wew/F3Net" ["e"=1]
"v0lta/PyTorch-Wavelet-Toolbox" -> "LiQiufu/WaveCNet"
"v0lta/PyTorch-Wavelet-Toolbox" -> "kymatio/kymatio"
"v0lta/PyTorch-Wavelet-Toolbox" -> "v0lta/Jax-Wavelet-Toolbox"
"bubbliiiing/facenet-retinaface-keras" -> "bubbliiiing/Optimization_Algorithm"
"xxgege/StableNet" -> "KunKuang/Decorrelated-Weighted-Regression"
"xxgege/StableNet" -> "x-zho14/MAPLE"
"xxgege/StableNet" -> "Silver-Shen/Stable_Linear_Model_Learning"
"xxgege/StableNet" -> "h-yu16/Sparse_Variable_Independence"
"AICVHub/Copy-Paste-for-Semantic-Segmentation" -> "conradry/copy-paste-aug"
"JDAI-CV/centerX" -> "FateScript/CenterNet-better"
"JDAI-CV/centerX" -> "lxc86739795/human_vehicle_parsing_platform" ["e"=1]
"JDAI-CV/centerX" -> "PeizeSun/OneNet"
"JDAI-CV/centerX" -> "xingyizhou/CenterNet2"
"JDAI-CV/centerX" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"JDAI-CV/centerX" -> "ZJULearning/ttfnet"
"JDAI-CV/centerX" -> "xbq1994/HAA" ["e"=1]
"JDAI-CV/centerX" -> "ZeroE04/R-CenterNet" ["e"=1]
"JDAI-CV/centerX" -> "GOATmessi8/ASFF"
"JDAI-CV/centerX" -> "YuhaoCheng/PyAnomaly" ["e"=1]
"JDAI-CV/centerX" -> "tensorboy/centerpose" ["e"=1]
"JDAI-CV/centerX" -> "lucasjinreal/CenterNet_Pro_Max"
"JDAI-CV/centerX" -> "sfzhang15/ATSS"
"JDAI-CV/centerX" -> "Syencil/tensorRT" ["e"=1]
"JDAI-CV/centerX" -> "lbin/CenterNet-better-plus"
"jasmcaus/ai-math-roadmap" -> "jasmcaus/hazel"
"jasmcaus/ai-math-roadmap" -> "jasmcaus/caer"
"jasmcaus/ai-math-roadmap" -> "jasmcaus/dotfiles"
"jasmcaus/ai-math-roadmap" -> "EngrSaad2/Artificial-Intelligence-Engineer-Roadmap"
"jasmcaus/ai-math-roadmap" -> "jasmcaus/opencv-course"
"jasmcaus/ai-math-roadmap" -> "TalalAlrawajfeh/mathematics-roadmap" ["e"=1]
"jasmcaus/ai-math-roadmap" -> "srcolinas/roadmap-to-AI"
"jasmcaus/ai-math-roadmap" -> "athivvat/ai-engineer-guide"
"tinyms-ai/tinyms" -> "tinyms-ai/awesome-rusted-ai"
"tinyms-ai/tinyms" -> "mindspore-ai/mindarmour"
"Cy743652/CEEMDAN-LSTM" -> "avilarenan/xlstmceemdan"
"frank-xwang/RIDE-LongTailRecognition" -> "Vanint/SADE-AgnosticLT"
"frank-xwang/RIDE-LongTailRecognition" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"frank-xwang/RIDE-LongTailRecognition" -> "dvlab-research/Parametric-Contrastive-Learning"
"frank-xwang/RIDE-LongTailRecognition" -> "jiequancui/ResLT"
"frank-xwang/RIDE-LongTailRecognition" -> "KaihuaTang/Long-Tailed-Recognition.pytorch"
"frank-xwang/RIDE-LongTailRecognition" -> "kaidic/LDAM-DRW"
"frank-xwang/RIDE-LongTailRecognition" -> "dvlab-research/MiSLAS"
"frank-xwang/RIDE-LongTailRecognition" -> "megvii-research/BBN"
"frank-xwang/RIDE-LongTailRecognition" -> "hyperconnect/LADE"
"frank-xwang/RIDE-LongTailRecognition" -> "facebookresearch/classifier-balancing"
"frank-xwang/RIDE-LongTailRecognition" -> "zhmiao/OpenLongTailRecognition-OLTR"
"frank-xwang/RIDE-LongTailRecognition" -> "Megvii-BaseDetection/DisAlign"
"frank-xwang/RIDE-LongTailRecognition" -> "Vanint/Awesome-LongTailed-Learning"
"frank-xwang/RIDE-LongTailRecognition" -> "ShadeAlsha/LTR-weight-balancing"
"frank-xwang/RIDE-LongTailRecognition" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"pxiangwu/PLC" -> "chenpf1025/IDN"
"LJSthu/HRM" -> "LJSthu/Kernelized-HRM"
"LJSthu/HRM" -> "AIflowerQ/InvPref_KDD_2022"
"LJSthu/HRM" -> "h-yu16/Sparse_Variable_Independence"
"evanzd/ICLR2021-OpenReviewData" -> "shaohua0116/ICLR2020-OpenReviewData"
"evanzd/ICLR2021-OpenReviewData" -> "fedebotu/ICLR2022-OpenReviewData"
"evanzd/ICLR2021-OpenReviewData" -> "kashif/ICLR2022-OpenReviewData"
"evanzd/ICLR2021-OpenReviewData" -> "ranpox/openreview-visualization"
"HaizhaoYang/SynLab" -> "HaizhaoYang/SST_compare"
"HaizhaoYang/SynLab" -> "phamduonghung/FSSTn"
"HaizhaoYang/SynLab" -> "jrvmalik/time-frequency-analysis"
"HaizhaoYang/SynLab" -> "tormii/HST"
"HaizhaoYang/SynLab" -> "tormii/SSET"
"HaizhaoYang/SynLab" -> "phamduonghung/WSST2"
"extreme-assistant/Awesome-CV-Team" -> "extreme-assistant/survey-computer-vision-2020"
"kekmodel/MPL-pytorch" -> "kekmodel/FixMatch-pytorch"
"kekmodel/MPL-pytorch" -> "TorchSSL/TorchSSL"
"kekmodel/MPL-pytorch" -> "ifsheldon/MPL_Lightning"
"kekmodel/MPL-pytorch" -> "EricArazo/PseudoLabeling"
"kekmodel/MPL-pytorch" -> "nayeemrizve/ups"
"kekmodel/MPL-pytorch" -> "SanghunYun/UDA_pytorch"
"kekmodel/MPL-pytorch" -> "uvavision/Curriculum-Labeling"
"kekmodel/MPL-pytorch" -> "YU1ut/MixMatch-pytorch"
"kekmodel/MPL-pytorch" -> "salesforce/CoMatch"
"kekmodel/MPL-pytorch" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"kekmodel/MPL-pytorch" -> "iBelieveCJM/pseudo_label-pytorch"
"kekmodel/MPL-pytorch" -> "anirudhshenoy/pseudo_labeling_small_datasets"
"kekmodel/MPL-pytorch" -> "kekmodel/UDA-pytorch"
"kekmodel/MPL-pytorch" -> "microsoft/MLC"
"kekmodel/MPL-pytorch" -> "yassouali/awesome-semi-supervised-learning"
"geaxgx/depthai_hand_tracker" -> "geaxgx/depthai_blazepose"
"geaxgx/depthai_hand_tracker" -> "cortictechnology/vision_ui"
"geaxgx/depthai_hand_tracker" -> "geaxgx/depthai_movenet"
"geaxgx/depthai_hand_tracker" -> "luxonis/depthai-experiments"
"geaxgx/depthai_hand_tracker" -> "luxonis/depthai"
"geaxgx/depthai_hand_tracker" -> "luxonis/depthai-python"
"geaxgx/depthai_hand_tracker" -> "duncanrhamill/oakd_orbslam3"
"geaxgx/depthai_hand_tracker" -> "facebookresearch/ContactPose" ["e"=1]
"geaxgx/depthai_hand_tracker" -> "SeanChenxy/HandMesh" ["e"=1]
"geaxgx/depthai_hand_tracker" -> "geaxgx/depthai_handface"
"geaxgx/depthai_hand_tracker" -> "luxonis/depthai-core"
"geaxgx/depthai_hand_tracker" -> "luxonis/depthai-unity"
"geaxgx/depthai_hand_tracker" -> "geaxgx/openvino_hand_tracker"
"geaxgx/depthai_hand_tracker" -> "geaxgx/depthai_pipeline_graph"
"geaxgx/depthai_hand_tracker" -> "SpectacularAI/sdk-examples"
"tztztztztz/eqlv2" -> "tztztztztz/eql.detectron2"
"tztztztztz/eqlv2" -> "CASIA-IVA-Lab/ACSL"
"tztztztztz/eqlv2" -> "FishYuLi/BalancedGroupSoftmax"
"tztztztztz/eqlv2" -> "fcjian/LOCE"
"tztztztztz/eqlv2" -> "ModelTC/United-Perception"
"xiaoboxia/CDR" -> "xiaoboxia/Part-dependent-label-noise"
"xiaoboxia/CDR" -> "xiaoboxia/Classification-with-noisy-labels-by-importance-reweighting"
"xiaoboxia/CDR" -> "xiaoboxia/T-Revision"
"abidrahmank/OpenCV2-Python" -> "abidrahmank/OpenCV-Python"
"abidrahmank/OpenCV2-Python" -> "abidrahmank/OpenCV2-Python-Tutorials"
"geaxgx/openvino_movenet_multipose" -> "geaxgx/openvino_movenet"
"conradry/copy-paste-aug" -> "RocketFlash/CAP_augmentation"
"conradry/copy-paste-aug" -> "AICVHub/Copy-Paste-for-Semantic-Segmentation"
"conradry/copy-paste-aug" -> "xingyizhou/CenterNet2"
"conradry/copy-paste-aug" -> "microsoft/SoftTeacher"
"conradry/copy-paste-aug" -> "debidatta/syndata-generation"
"conradry/copy-paste-aug" -> "hustvl/QueryInst"
"conradry/copy-paste-aug" -> "VDIGPKU/CBNetV2"
"conradry/copy-paste-aug" -> "chongruo/detectron2-ResNeSt"
"conradry/copy-paste-aug" -> "dvlab-research/SA-AutoAug" ["e"=1]
"conradry/copy-paste-aug" -> "dbolya/tide"
"conradry/copy-paste-aug" -> "ZFTurbo/Weighted-Boxes-Fusion"
"conradry/copy-paste-aug" -> "joe-siyuan-qiao/DetectoRS"
"conradry/copy-paste-aug" -> "PeizeSun/SparseR-CNN"
"conradry/copy-paste-aug" -> "fcjian/TOOD"
"conradry/copy-paste-aug" -> "MarkPotanin/copy_paste_aug_detectron2"
"hongwei-wen/LW-loss-for-partial-label" -> "palm-ml/valen"
"n2cholas/shapecheck" -> "open-wa/wa-automate-deploy-heroku"
"sayakpaul/Grocery-Product-Detection" -> "gulvarol/grocerydataset"
"wangxiang1230/OadTR" -> "wangxiang1230/Awesome-Online-Action-Detection"
"wangxiang1230/OadTR" -> "amazon-science/long-short-term-transformer"
"wangxiang1230/OadTR" -> "Echo0125/MAT-Memory-and-Anticipation-Transformer"
"wangxiang1230/OadTR" -> "xumingze0308/TRN.pytorch"
"wangxiang1230/OadTR" -> "zhaoyue-zephyrus/TeSTra"
"wangxiang1230/OadTR" -> "VividLe/Online-Action-Detection" ["e"=1]
"wangxiang1230/OadTR" -> "jbistanbul/MiniROAD"
"RocketFlash/CAP_augmentation" -> "conradry/copy-paste-aug"
"dvlab-research/Parametric-Contrastive-Learning" -> "frank-xwang/RIDE-LongTailRecognition"
"dvlab-research/Parametric-Contrastive-Learning" -> "dvlab-research/MiSLAS"
"dvlab-research/Parametric-Contrastive-Learning" -> "FlamieZhu/Balanced-Contrastive-Learning"
"dvlab-research/Parametric-Contrastive-Learning" -> "jiequancui/ResLT"
"dvlab-research/Parametric-Contrastive-Learning" -> "LTH14/targeted-supcon"
"dvlab-research/Parametric-Contrastive-Learning" -> "ShadeAlsha/LTR-weight-balancing"
"dvlab-research/Parametric-Contrastive-Learning" -> "Bazinga699/NCL"
"dvlab-research/Parametric-Contrastive-Learning" -> "gaopengcuhk/BALLAD"
"dvlab-research/Parametric-Contrastive-Learning" -> "Vanint/SADE-AgnosticLT"
"dvlab-research/Parametric-Contrastive-Learning" -> "Megvii-BaseDetection/DisAlign"
"dvlab-research/Parametric-Contrastive-Learning" -> "shijxcs/LIFT"
"dvlab-research/Parametric-Contrastive-Learning" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"dvlab-research/Parametric-Contrastive-Learning" -> "Vanint/Awesome-LongTailed-Learning"
"dvlab-research/Parametric-Contrastive-Learning" -> "kaidic/LDAM-DRW"
"dvlab-research/Parametric-Contrastive-Learning" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"chendaichao/Hilbert-Huang-transform" -> "HHTpy/HHTpywrapper"
"chendaichao/Hilbert-Huang-transform" -> "jaidevd/pyhht"
"PINTO0309/mediapipe-bin" -> "jiuqiant/mediapipe_python_aarch64"
"PINTO0309/mediapipe-bin" -> "Kazuhito00/mediapipe-python-sample"
"eastmountyxz/CSDNBlog-ImageProcessing" -> "eastmountyxz/CSDNBlog-AI-for-Python"
"daooshee/HLA-Face-Code" -> "Ir1d/DARKFACE_eval_tools"
"specify/specify7" -> "specify/specify6"
"specify/specify7" -> "Symbiota/Symbiota"
"specify/specify7" -> "Symbiota/Symbiota-deprecated"
"xiaoboxia/Part-dependent-label-noise" -> "xiaoboxia/CDR"
"xiaoboxia/Part-dependent-label-noise" -> "xiaoboxia/T-Revision"
"xiaoboxia/Part-dependent-label-noise" -> "xiaoboxia/Classification-with-noisy-labels-by-importance-reweighting"
"xiaoboxia/Part-dependent-label-noise" -> "chenpf1025/IDN"
"chenpf1025/IDN" -> "chenpf1025/RobustnessAccuracy"
"chenpf1025/IDN" -> "pxiangwu/PLC"
"jiequancui/ResLT" -> "gaopengcuhk/BALLAD"
"jiequancui/ResLT" -> "Vanint/SADE-AgnosticLT"
"jiequancui/ResLT" -> "hyperconnect/LADE"
"jiequancui/ResLT" -> "frank-xwang/RIDE-LongTailRecognition"
"jiequancui/ResLT" -> "dvlab-research/Parametric-Contrastive-Learning"
"jiequancui/ResLT" -> "dvlab-research/MiSLAS"
"omerferhatt/torch2tflite" -> "sithu31296/PyTorch-ONNX-TFLite"
"agrechnev/first_steps_mediapipe" -> "rajkundu/libmp-example"
"agrechnev/first_steps_mediapipe" -> "pntt3011/mediapipe_face_iris_cpp"
"agrechnev/first_steps_mediapipe" -> "asprecic/mediapipe-qt-integration-example"
"duncanrhamill/oakd_orbslam3" -> "rapyuta-robotics/depthai_ros"
"bubbliiiing/mobilenet-yolov4-tf2" -> "bubbliiiing/mobilenet-yolov4-keras"
"gan-police/frequency-forensics" -> "Fraunhofer-SCAI/wavelet_pooling"
"bentrevett/a-tour-of-pytorch-optimizers" -> "bentrevett/machine-learning-courses"
"bentrevett/a-tour-of-pytorch-optimizers" -> "bentrevett/pytorch-language-modeling"
"bentrevett/a-tour-of-pytorch-optimizers" -> "bentrevett/pytorch-text-classification"
"SUSTAINA-OP/SUSTAINA-OP" -> "bit-bots/wolfgang_robot"
"SUSTAINA-OP/SUSTAINA-OP" -> "citbrains/GankenKun_webots"
"ivy-llc/vision" -> "RajGhugare19/RL-algorithms"
"murtazahassan/darknet" -> "murtazahassan/Learn-Raspberry-Pi"
"nayeemrizve/ups" -> "uvavision/Curriculum-Labeling"
"nayeemrizve/ups" -> "TorchSSL/TorchSSL"
"nayeemrizve/ups" -> "Haochen-Wang409/U2PL" ["e"=1]
"nayeemrizve/ups" -> "hbzju/PiCO"
"nayeemrizve/ups" -> "iBelieveCJM/pseudo_label-pytorch"
"nayeemrizve/ups" -> "perrying/realistic-ssl-evaluation-pytorch"
"nayeemrizve/ups" -> "EricArazo/PseudoLabeling"
"nayeemrizve/ups" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"Hua-YS/Semantic-Segmentation-with-Sparse-Labels" -> "Hua-YS/Multi-Scene-Recognition"
"Kazuhito00/Tokyo2020-Pictogram-using-MediaPipe" -> "Kazuhito00/mediapipe-python-sample"
"kinredon/umt" -> "hikvision-research/ProbabilisticTeacher"
"kinredon/umt" -> "facebookresearch/adaptive_teacher"
"kinredon/umt" -> "kinredon/Harmonious-Teacher"
"kinredon/umt" -> "ChrisAllenMing/GPA-detection"
"kinredon/umt" -> "caiqi/mean-teacher-cross-domain-detection"
"kinredon/umt" -> "MCG-NJU/TIA"
"kinredon/umt" -> "uitrbn/CST_DA_detection"
"kinredon/umt" -> "VisionLearningGroup/DA_Detection"
"kinredon/umt" -> "Shengcao-Cao/CMT"
"kinredon/umt" -> "harsh-99/SCL"
"kinredon/umt" -> "kevinhkhsu/DA_detection"
"kinredon/umt" -> "chaoqichen/HTCN"
"kinredon/umt" -> "chengchunhsu/EveryPixelMatters"
"kinredon/umt" -> "megvii-research/CR-DA-DET"
"kinredon/umt" -> "xinge008/SCDA"
"jaidevd/pyhht" -> "scikit-signal/tftb"
"jaidevd/pyhht" -> "chendaichao/Hilbert-Huang-transform"
"jaidevd/pyhht" -> "HHTpy/HHTpywrapper"
"jaidevd/pyhht" -> "laszukdawid/PyEMD"
"jaidevd/pyhht" -> "kulia/Hilbert-Huang-transform"
"megvii-research/SOLQ" -> "hujiecpp/ISTR"
"megvii-research/SOLQ" -> "hustvl/QueryInst"
"murtazahassan/OpenCV-Sudoku-Solver" -> "murtazahassan/darknet"
"murtazahassan/OpenCV-Sudoku-Solver" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/OpenCV-Sudoku-Solver" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/OpenCV-Sudoku-Solver" -> "murtazahassan/Learn-Python"
"murtazahassan/OpenCV-Sudoku-Solver" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/OpenCV-Sudoku-Solver" -> "murtazahassan/Angle-Finder"
"bubbliiiing/srgan-keras" -> "bubbliiiing/dcgan-keras"
"hustvl/CrossVIS" -> "sukjunhwang/IFC"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/mail_templates"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/hub"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/serving"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/book"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/ms-operator"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/community"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/course"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/graphengine"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/mindinsight"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/akg"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/docs"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/infrastructure"
"mindspore-ai/mindspore-21-days-tutorials" -> "mindspore-ai/mindarmour"
"hsuantien/mlc_lsdr" -> "chihkuanyeh/C2AE"
"inaturalist/iNaturalistAndroid" -> "inaturalist/INaturalistIOS"
"inaturalist/iNaturalistAndroid" -> "inaturalist/iNaturalistAPI"
"inaturalist/iNaturalistAndroid" -> "inaturalist/inaturalist"
"inaturalist/iNaturalistAndroid" -> "inaturalist/SeekReactNative"
"geaxgx/depthai_movenet" -> "geaxgx/openvino_movenet"
"PINTO0309/openvino2tensorflow" -> "PINTO0309/onnx2tf"
"PINTO0309/openvino2tensorflow" -> "PINTO0309/tflite2tensorflow"
"PINTO0309/openvino2tensorflow" -> "NobuoTsukamoto/tflite-cv-example"
"PINTO0309/openvino2tensorflow" -> "iwatake2222/play_with_tflite"
"PINTO0309/openvino2tensorflow" -> "PINTO0309/simple-onnx-processing-tools"
"PINTO0309/openvino2tensorflow" -> "iwatake2222/InferenceHelper"
"PINTO0309/openvino2tensorflow" -> "PINTO0309/PINTO_model_zoo"
"PINTO0309/openvino2tensorflow" -> "terryky/tflite_gles_app"
"PINTO0309/openvino2tensorflow" -> "NobuoTsukamoto/benchmarks"
"PINTO0309/openvino2tensorflow" -> "PINTO0309/scc4onnx"
"DiegoOrtego/LabelNoiseMOIT" -> "DiegoOrtego/LabelNoiseDRPL"
"DiegoOrtego/LabelNoiseMOIT" -> "PaulAlbert31/ReLaB"
"chenhang98/BPR" -> "zhanggang001/RefineMask"
"chenhang98/BPR" -> "MengyuWang826/SegRefiner" ["e"=1]
"chenhang98/BPR" -> "lxtGH/BSSeg"
"chenhang98/BPR" -> "bowenc0221/boundary-iou-api"
"gbif/ipt" -> "gbif/portal16"
"gbif/ipt" -> "tdwg/dwc-qa"
"gbif/ipt" -> "gbif/gbif-api"
"gbif/ipt" -> "BelgianBiodiversityPlatform/python-dwca-reader"
"gbif/ipt" -> "tdwg/dwc"
"gbif/ipt" -> "gbif/gbif-data-validator"
"gbif/ipt" -> "gbif/data-mobilization"
"lostanlen/scattering.m" -> "kymatio/phaseharmonics"
"gaobb/MCAR" -> "chehao2628/MSRN"
"inaturalist/INaturalistIOS" -> "inaturalist/iNaturalistAndroid"
"inaturalist/INaturalistIOS" -> "inaturalist/inaturalist"
"inaturalist/INaturalistIOS" -> "inaturalist/iNaturalistAPI"
"inaturalist/INaturalistIOS" -> "inaturalist/iNaturalistReactNative"
"inaturalist/INaturalistIOS" -> "inaturalist/SeekReactNative"
"inaturalist/INaturalistIOS" -> "inaturalist/inatVisionAPI"
"GuanshuoXu/RSNA-STR-Pulmonary-Embolism-Detection" -> "amirassov/kaggle-pneumothorax"
"KentoNishi/Augmentation-for-LNL" -> "ContrastToDivide/C2D"
"KentoNishi/Augmentation-for-LNL" -> "yingyichen-cyy/Nested-Co-teaching"
"salesforce/CoMatch" -> "zijian-hu/SimPLE"
"salesforce/CoMatch" -> "mingkai-zheng/SimMatch"
"salesforce/CoMatch" -> "salesforce/MoPro"
"salesforce/CoMatch" -> "salesforce/MUST"
"jiuqiant/mediapipe_python_aarch64" -> "PINTO0309/mediapipe-bin"
"bupt-ai-cz/BALNMP" -> "bupt-ai-cz/Hybrid-Model-Enabling-Highly-Efficient-Follicular-Segmentation"
"bupt-ai-cz/BALNMP" -> "bupt-ai-cz/HSA-NRL"
"ytaek-oh/daso" -> "YUE-FAN/CoSSL"
"ytaek-oh/daso" -> "LeeHyuck/ABC"
"ytaek-oh/daso" -> "bbuing9/DARP"
"PaddlePaddle/LiteKit" -> "PaddlePaddle/Paddle-bot"
"PaddlePaddle/LiteKit" -> "PaddlePaddle/Paddle-Inference-Demo"
"PaddlePaddle/LiteKit" -> "PaddlePaddle/paddle_upgrade_tool"
"PaddlePaddle/LiteKit" -> "PaddlePaddle/continuous_evaluation"
"PaddlePaddle/LiteKit" -> "PaddlePaddle/hapi"
"PaddlePaddle/LiteKit" -> "PaddlePaddle/VisionTools"
"julzerinos/python-fuzzy-cognitve-maps" -> "SparseL/SAE-FCM"
"PaddlePaddle/PaddleTest" -> "PaddlePaddle/benchmark"
"PaddlePaddle/PaddleTest" -> "PaddlePaddle/continuous_integration"
"inaturalist/iNaturalistAPI" -> "inaturalist/inaturalist"
"inaturalist/iNaturalistAPI" -> "inaturalist/inaturalistjs"
"inaturalist/iNaturalistAPI" -> "inaturalist/INaturalistIOS"
"inaturalist/iNaturalistAPI" -> "inaturalist/iNaturalistAndroid"
"inaturalist/iNaturalistAPI" -> "inaturalist/inatVisionAPI"
"inaturalist/iNaturalistAPI" -> "pyinat/pyinaturalist"
"lxtGH/TemporalPyramidRouting" -> "lxtGH/QueryPanSeg"
"NobuoTsukamoto/tensorrt-examples" -> "NobuoTsukamoto/benchmarks"
"MegEngine/mgeconvert" -> "MegEngine/Documentation"
"MegEngine/mgeconvert" -> "megvii-research/basecls"
"June-Li/SSL_yolov3_seal_FixMatch" -> "wangerxiao001/yolov5_SSL"
"dvlab-research/MiSLAS" -> "ShadeAlsha/LTR-weight-balancing"
"dvlab-research/MiSLAS" -> "dvlab-research/Parametric-Contrastive-Learning"
"dvlab-research/MiSLAS" -> "hyperconnect/LADE"
"dvlab-research/MiSLAS" -> "jiequancui/ResLT"
"dvlab-research/MiSLAS" -> "frank-xwang/RIDE-LongTailRecognition"
"dvlab-research/MiSLAS" -> "Keke921/GCLLoss"
"dvlab-research/MiSLAS" -> "Megvii-BaseDetection/DisAlign"
"dvlab-research/MiSLAS" -> "naver-ai/cmo"
"dvlab-research/MiSLAS" -> "ynu-yangpeng/GLMC"
"dvlab-research/MiSLAS" -> "Vanint/SADE-AgnosticLT"
"geaxgx/openvino_blazepose" -> "geaxgx/openvino_movenet"
"geaxgx/openvino_blazepose" -> "geaxgx/depthai_movenet"
"Vanint/SADE-AgnosticLT" -> "frank-xwang/RIDE-LongTailRecognition"
"Vanint/SADE-AgnosticLT" -> "hyperconnect/LADE"
"Vanint/SADE-AgnosticLT" -> "jiequancui/ResLT"
"Vanint/SADE-AgnosticLT" -> "emasa/BalPoE-CalibratedLT"
"Vanint/SADE-AgnosticLT" -> "Bazinga699/NCL"
"Vanint/SADE-AgnosticLT" -> "ChangyaoTian/VL-LTR"
"Vanint/SADE-AgnosticLT" -> "Vanint/Awesome-LongTailed-Learning"
"Vanint/SADE-AgnosticLT" -> "dvlab-research/MiSLAS"
"Vanint/SADE-AgnosticLT" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"Vanint/SADE-AgnosticLT" -> "gaopengcuhk/BALLAD"
"Vanint/SADE-AgnosticLT" -> "dvlab-research/Parametric-Contrastive-Learning"
"Vanint/SADE-AgnosticLT" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"Megvii-BaseDetection/AutoAssign" -> "Megvii-BaseDetection/DeFCN"
"Megvii-BaseDetection/AutoAssign" -> "Megvii-BaseDetection/OTA"
"ChristophReich1996/Involution" -> "shuuchen/involution.pytorch"
"ChristophReich1996/Involution" -> "shikishima-TasakiLab/Involution-PyTorch"
"fpv-iplab/STMDA-RetinaNet" -> "fpv-iplab/DA-RetinaNet"
"fpv-iplab/STMDA-RetinaNet" -> "GiovanniPasq/DA-Faster-RCNN"
"hyperconnect/LADE" -> "Vanint/SADE-AgnosticLT"
"hyperconnect/LADE" -> "jiequancui/ResLT"
"hyperconnect/LADE" -> "dvlab-research/MiSLAS"
"hyperconnect/LADE" -> "Megvii-BaseDetection/DisAlign"
"hyperconnect/LADE" -> "frank-xwang/RIDE-LongTailRecognition"
"hyperconnect/LADE" -> "dvirsamuel/DRO-LT" ["e"=1]
"MegEngine/YOLOX" -> "megvii-research/basecls"
"SHI-Labs/Semi-Supervised-Transfer-Learning" -> "islam-nassar/semco"
"52CV/ICCV-2021-Papers" -> "52CV/CVPR-2022-Papers"
"52CV/ICCV-2021-Papers" -> "52CV/ECCV-2022-Papers"
"52CV/ICCV-2021-Papers" -> "52CV/CVPR-2021-Papers"
"52CV/ICCV-2021-Papers" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"cuongvng/Face-Detection-TFLite-JNI-Android" -> "cuongvng/TF-Lite-Cpp-API-for-Android"
"cuongvng/Face-Detection-TFLite-JNI-Android" -> "cuongvng/TF-Lite-Cpp-API-Android-Example"
"chenpf1025/RobustnessAccuracy" -> "chenpf1025/IDN"
"cuongvng/TF-Lite-Cpp-API-for-Android" -> "cuongvng/Face-Detection-TFLite-JNI-Android"
"cuongvng/TF-Lite-Cpp-API-for-Android" -> "cuongvng/TF-Lite-Cpp-API-Android-Example"
"cuongvng/TF-Lite-Cpp-API-for-Android" -> "karthickai/tflite"
"GZWQ/Awesome-Long-Tailed" -> "ShadeAlsha/LTR-weight-balancing"
"GZWQ/Awesome-Long-Tailed" -> "ChangyaoTian/VL-LTR"
"google-research/crest" -> "bbuing9/DARP"
"google-research/crest" -> "LeeHyuck/ABC"
"google-research/crest" -> "YUE-FAN/CoSSL"
"google-research/crest" -> "ytaek-oh/daso"
"lkevinzc/dance" -> "zhang-tao-whu/e2ec"
"pntt3011/mediapipe_face_iris_cpp" -> "agrechnev/first_steps_mediapipe"
"hujiecpp/ISTR" -> "easton-cau/SOTR"
"hujiecpp/ISTR" -> "megvii-research/SOLQ"
"hujiecpp/ISTR" -> "hustvl/QueryInst"
"hujiecpp/ISTR" -> "dvlab-research/SA-AutoAug" ["e"=1]
"hujiecpp/ISTR" -> "hujiecpp/YOSO"
"easton-cau/SOTR" -> "hujiecpp/ISTR"
"elijahcole/single-positive-multi-label" -> "Correr-Zhou/SPML-AckTheUnknown"
"elijahcole/single-positive-multi-label" -> "Correr-Zhou/Awesome-Single-Positive-Multi-Label-Learning"
"elijahcole/single-positive-multi-label" -> "snucml/LargeLossMatters"
"bubbliiiing/facenet-tf2" -> "bubbliiiing/retinaface-tf2"
"bubbliiiing/facenet-tf2" -> "bubbliiiing/Optimization_Algorithm"
"bubbliiiing/facenet-tf2" -> "bubbliiiing/facenet-retinaface-keras"
"jiawei-ren/BalancedMetaSoftmax" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"Extreme-classification/DECAF" -> "Extreme-classification/ECLARE"
"Extreme-classification/DECAF" -> "Extreme-classification/GalaXC"
"Extreme-classification/DECAF" -> "Extreme-classification/siamesexml"
"Extreme-classification/DECAF" -> "Extreme-classification/deepxml"
"Extreme-classification/DECAF" -> "Extreme-classification/MUFIN"
"PINTO0309/mtomo" -> "NobuoTsukamoto/benchmarks"
"bubbliiiing/centernet-tf2" -> "bubbliiiing/centernet-keras"
"GuillaumeLeclerc/fastargs" -> "lengstrom/tensorguard"
"yjh0410/PyTorch_YOLOv3" -> "yjh0410/DetLAB"
"adrinta/MAGNET" -> "EMNLP2019LSAN/LSAN"
"jasmcaus/hazel" -> "jasmcaus/dotfiles"
"Extreme-classification/GalaXC" -> "Extreme-classification/siamesexml"
"Extreme-classification/GalaXC" -> "Extreme-classification/ECLARE"
"Extreme-classification/GalaXC" -> "Extreme-classification/DECAF"
"Extreme-classification/GalaXC" -> "Extreme-classification/MUFIN"
"bupt-ai-cz/Glomeruli-Instance-Segmentation" -> "bupt-ai-cz/Hybrid-Model-Enabling-Highly-Efficient-Follicular-Segmentation"
"bubbliiiing/centernet-keras" -> "bubbliiiing/centernet-tf2"
"bubbliiiing/centernet-keras" -> "bubbliiiing/RFB-keras"
"bubbliiiing/centernet-keras" -> "bubbliiiing/mobilenet-yolov4-keras"
"bubbliiiing/centernet-keras" -> "bubbliiiing/retinaface-keras"
"bubbliiiing/centernet-keras" -> "bubbliiiing/efficientdet-keras"
"bubbliiiing/centernet-keras" -> "bubbliiiing/efficientdet-tf2"
"bubbliiiing/centernet-keras" -> "bubbliiiing/ssd_keras"
"wwangwitsel/PARM" -> "wwangwitsel/awesome-partial-label-learning"
"bit-bots/YOEO" -> "ros-sports/ipm"
"SteiMi/denseweight" -> "SteiMi/density-based-weighting-for-imbalanced-regression"
"SteiMi/density-based-weighting-for-imbalanced-regression" -> "SteiMi/denseweight"
"fsgo/bin-auto-switcher" -> "fsgo/smart-go-dl"
"karthickai/tflite" -> "cuongvng/TF-Lite-Cpp-API-for-Android"
"snu-mllab/Co-Mixup" -> "snu-mllab/PuzzleMix"
"snu-mllab/Co-Mixup" -> "alldbi/SuperMix"
"snu-mllab/Co-Mixup" -> "snu-mllab/Neural-Relation-Graph"
"hua1995116/npm-stat" -> "guiker/flyCat"
"hua1995116/npm-stat" -> "yjh0410/yolov3-plus_PyTorch"
"bentrevett/pytorch-language-modeling" -> "bentrevett/pytorch-text-classification"
"UCSC-REAL/cores" -> "UCSC-REAL/CAL"
"UCSC-REAL/cores" -> "lijichang/LNL-NCE"
"UCSC-REAL/cores" -> "UCSC-REAL/SimiFeat"
"UCSC-REAL/CAL" -> "UCSC-REAL/SimiFeat"
"UCSC-REAL/CAL" -> "UCSC-REAL/cores"
"UCSC-REAL/CAL" -> "UCSC-REAL/SelfSup_NoisyLabel"
"basiclab/DA-OD-MEAA-PyTorch" -> "uitrbn/CST_DA_detection"
"basiclab/DA-OD-MEAA-PyTorch" -> "Gabriel-Macias/robust_frcnn"
"bupt-ai-cz/Hybrid-Model-Enabling-Highly-Efficient-Follicular-Segmentation" -> "bupt-ai-cz/Glomeruli-Instance-Segmentation"
"FateScript/nnprof" -> "hkzhang95/Awesome-CV-bibfiles"
"mindspore-ai/serving" -> "mindspore-ai/hub"
"mindspore-ai/serving" -> "mindspore-ai/mail_templates"
"mindspore-ai/serving" -> "mindspore-ai/book"
"mindspore-ai/serving" -> "mindspore-ai/ms-operator"
"mindspore-ai/serving" -> "mindspore-ai/mindspore-21-days-tutorials"
"mindspore-ai/serving" -> "mindspore-ai/community"
"mindspore-ai/serving" -> "mindspore-ai/course"
"mindspore-ai/serving" -> "mindspore-ai/graphengine"
"mindspore-ai/serving" -> "mindspore-ai/mindinsight"
"bubbliiiing/mobilenet-yolov4-keras" -> "bubbliiiing/mobilenet-yolov4-tf2"
"bubbliiiing/mobilenet-yolov4-keras" -> "bubbliiiing/centernet-keras"
"bubbliiiing/mobilenet-yolov4-keras" -> "bubbliiiing/efficientnet-yolo3-keras"
"Extreme-classification/ECLARE" -> "Extreme-classification/DECAF"
"Extreme-classification/ECLARE" -> "Extreme-classification/GalaXC"
"pranshu97/effunet" -> "J911/J911"
"lxtGH/BSSeg" -> "lxtGH/QueryPanSeg"
"lxtGH/BSSeg" -> "lxtGH/TemporalPyramidRouting"
"lxtGH/QueryPanSeg" -> "lxtGH/TemporalPyramidRouting"
"Annbless/ViTAE" -> "Annbless/RegionCL"
"Annbless/ViTAE" -> "encounter1997/DE-CondDETR"
"Annbless/ViTAE" -> "encounter1997/Arxiv-Daily"
"Annbless/ViTAE" -> "RogerZhangzz/CAG_UDA" ["e"=1]
"niconielsen32/Robotics" -> "niconielsen32/AlgortihmsAndDataStructures"
"CupidJay/Scaled-down-self-supervised-learning" -> "heekhero/ACSR"
"bentrevett/pytorch-text-classification" -> "bentrevett/pytorch-language-modeling"
"MegEngine/Documentation" -> "megvii-research/basecls"
"wangerxiao001/yolov5_SSL" -> "June-Li/SSL_yolov3_seal_FixMatch"
"Taeyoung96/2021-Capstone-Design" -> "Taeyoung96/Taeyoung96.github.io"
"jasmcaus/dotfiles" -> "jasmcaus/hazel"
"alibaba/EasyCV" -> "alibaba/EasyNLP" ["e"=1]
"alibaba/EasyCV" -> "IDEA-Research/detrex" ["e"=1]
"alibaba/EasyCV" -> "lucasjinreal/yolov7_d2"
"alibaba/EasyCV" -> "open-mmlab/mmselfsup" ["e"=1]
"alibaba/EasyCV" -> "meituan/YOLOv6"
"alibaba/EasyCV" -> "open-mmlab/mmyolo"
"alibaba/EasyCV" -> "IDEA-Research/DINO" ["e"=1]
"alibaba/EasyCV" -> "iscyy/ultralyticsPro" ["e"=1]
"alibaba/EasyCV" -> "jizhishutong/YOLOU" ["e"=1]
"alibaba/EasyCV" -> "WongKinYiu/yolor"
"alibaba/EasyCV" -> "DingXiaoH/RepVGG"
"alibaba/EasyCV" -> "open-mmlab/mmpretrain"
"alibaba/EasyCV" -> "Megvii-BaseDetection/YOLOX"
"alibaba/EasyCV" -> "IDEA-Research/awesome-detection-transformer" ["e"=1]
"alibaba/EasyCV" -> "PaddlePaddle/PaddleYOLO"
"eastmountyxz/HWCloudImageRecognition" -> "eastmountyxz/Book3-Python-ImageProcessing"
"eastmountyxz/HWCloudImageRecognition" -> "eastmountyxz/Python-zero2one"
"eastmountyxz/HWCloudImageRecognition" -> "eastmountyxz/ImageProcessing-Python"
"NVIDIA/nvidia-docker" -> "horovod/horovod" ["e"=1]
"NVIDIA/nvidia-docker" -> "NVIDIA/TensorRT"
"NVIDIA/nvidia-docker" -> "apache/mxnet" ["e"=1]
"NVIDIA/nvidia-docker" -> "BVLC/caffe" ["e"=1]
"NVIDIA/nvidia-docker" -> "NVIDIA/DeepLearningExamples"
"NVIDIA/nvidia-docker" -> "kubeflow/kubeflow" ["e"=1]
"NVIDIA/nvidia-docker" -> "facebookresearch/Detectron"
"NVIDIA/nvidia-docker" -> "tensorflow/models" ["e"=1]
"NVIDIA/nvidia-docker" -> "NVIDIA/apex"
"NVIDIA/nvidia-docker" -> "NVIDIA/k8s-device-plugin" ["e"=1]
"NVIDIA/nvidia-docker" -> "NVIDIA/nvidia-container-toolkit" ["e"=1]
"NVIDIA/nvidia-docker" -> "pjreddie/darknet"
"NVIDIA/nvidia-docker" -> "triton-inference-server/server" ["e"=1]
"NVIDIA/nvidia-docker" -> "onnx/onnx"
"NVIDIA/nvidia-docker" -> "NVIDIA/DIGITS" ["e"=1]
"mli/paper-reading" -> "amusi/CVPR2025-Papers-with-Code"
"mli/paper-reading" -> "labmlai/annotated_deep_learning_paper_implementations"
"mli/paper-reading" -> "openai/CLIP"
"mli/paper-reading" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"mli/paper-reading" -> "huggingface/pytorch-image-models"
"mli/paper-reading" -> "d2l-ai/d2l-zh" ["e"=1]
"mli/paper-reading" -> "microsoft/Swin-Transformer"
"mli/paper-reading" -> "hiyouga/LLaMA-Factory" ["e"=1]
"mli/paper-reading" -> "BradyFU/Awesome-Multimodal-Large-Language-Models" ["e"=1]
"mli/paper-reading" -> "lucidrains/vit-pytorch"
"mli/paper-reading" -> "facebookresearch/segment-anything"
"mli/paper-reading" -> "dair-ai/ml-visuals"
"mli/paper-reading" -> "kaixindelele/ChatPaper" ["e"=1]
"mli/paper-reading" -> "liguodongiot/llm-action" ["e"=1]
"mli/paper-reading" -> "scutan90/DeepLearning-500-questions" ["e"=1]
"HumanSignal/labelImg" -> "wkentaro/labelme"
"HumanSignal/labelImg" -> "AlexeyAB/darknet"
"HumanSignal/labelImg" -> "pjreddie/darknet"
"HumanSignal/labelImg" -> "ultralytics/yolov5"
"HumanSignal/labelImg" -> "open-mmlab/mmdetection"
"HumanSignal/labelImg" -> "tensorflow/models" ["e"=1]
"HumanSignal/labelImg" -> "matterport/Mask_RCNN"
"HumanSignal/labelImg" -> "facebookresearch/detectron2"
"HumanSignal/labelImg" -> "aleju/imgaug"
"HumanSignal/labelImg" -> "cvat-ai/cvat"
"HumanSignal/labelImg" -> "HumanSignal/label-studio"
"HumanSignal/labelImg" -> "ultralytics/yolov3"
"HumanSignal/labelImg" -> "facebookresearch/Detectron"
"HumanSignal/labelImg" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"HumanSignal/labelImg" -> "qqwweee/keras-yolo3"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/mae"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/moco" ["e"=1]
"pengzhiliang/MAE-pytorch" -> "microsoft/SimMIM" ["e"=1]
"pengzhiliang/MAE-pytorch" -> "facebookresearch/deit"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/ConvNeXt"
"pengzhiliang/MAE-pytorch" -> "open-mmlab/mmselfsup" ["e"=1]
"pengzhiliang/MAE-pytorch" -> "microsoft/Swin-Transformer"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/moco-v3" ["e"=1]
"pengzhiliang/MAE-pytorch" -> "FlyEgle/MAE-pytorch"
"pengzhiliang/MAE-pytorch" -> "dk-liang/Awesome-Visual-Transformer"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/dino"
"pengzhiliang/MAE-pytorch" -> "lucidrains/vit-pytorch"
"pengzhiliang/MAE-pytorch" -> "google-research/simclr" ["e"=1]
"pengzhiliang/MAE-pytorch" -> "sail-sg/poolformer" ["e"=1]
"pengzhiliang/MAE-pytorch" -> "HobbitLong/PyContrast" ["e"=1]
"facebookresearch/mae" -> "pengzhiliang/MAE-pytorch"
"facebookresearch/mae" -> "microsoft/Swin-Transformer"
"facebookresearch/mae" -> "facebookresearch/moco" ["e"=1]
"facebookresearch/mae" -> "facebookresearch/ConvNeXt"
"facebookresearch/mae" -> "facebookresearch/dino"
"facebookresearch/mae" -> "facebookresearch/deit"
"facebookresearch/mae" -> "lucidrains/vit-pytorch"
"facebookresearch/mae" -> "google-research/vision_transformer"
"facebookresearch/mae" -> "mlfoundations/open_clip" ["e"=1]
"facebookresearch/mae" -> "huggingface/pytorch-image-models"
"facebookresearch/mae" -> "openai/CLIP"
"facebookresearch/mae" -> "facebookresearch/detr"
"facebookresearch/mae" -> "facebookresearch/dinov2" ["e"=1]
"facebookresearch/mae" -> "open-mmlab/mmselfsup" ["e"=1]
"facebookresearch/mae" -> "facebookresearch/DiT" ["e"=1]
"hustvl/TeViT" -> "hustvl/QueryInst"
"hustvl/TeViT" -> "NVlabs/MinVIS"
"hustvl/TeViT" -> "hustvl/BoxTeacher" ["e"=1]
"hustvl/TeViT" -> "OmkarThawakar/MSSTS-VIS"
"hustvl/TeViT" -> "hustvl/MIMDet" ["e"=1]
"hustvl/TeViT" -> "sukjunhwang/VITA"
"hustvl/TeViT" -> "youtubevos/cocoapi"
"hustvl/TeViT" -> "hustvl/RILS" ["e"=1]
"hustvl/TeViT" -> "hustvl/DiG" ["e"=1]
"hustvl/TeViT" -> "wjn922/ReferFormer" ["e"=1]
"hustvl/TeViT" -> "wjf5203/SeqFormer"
"hustvl/TeViT" -> "hustvl/Featurized-QueryRCNN" ["e"=1]
"hustvl/TeViT" -> "hustvl/CrossVIS"
"hustvl/TeViT" -> "JerryX1110/awesome-rvos" ["e"=1]
"hustvl/TeViT" -> "hustvl/ViG" ["e"=1]
"bubbliiiing/segformer-pytorch" -> "bubbliiiing/hrnet-pytorch"
"bubbliiiing/segformer-pytorch" -> "bubbliiiing/segmentation-format-fix"
"bubbliiiing/segformer-pytorch" -> "lucidrains/segformer-pytorch" ["e"=1]
"bubbliiiing/segformer-pytorch" -> "bubbliiiing/pspnet-pytorch"
"bubbliiiing/segformer-pytorch" -> "bubbliiiing/deeplabv3-plus-pytorch"
"bubbliiiing/segformer-pytorch" -> "NVlabs/SegFormer" ["e"=1]
"bubbliiiing/segformer-pytorch" -> "Deeachain/Segmentation-Pytorch" ["e"=1]
"bubbliiiing/segformer-pytorch" -> "bubbliiiing/unet-pytorch"
"bubbliiiing/segformer-pytorch" -> "ggyyzm/pytorch_segmentation"
"bubbliiiing/segformer-pytorch" -> "Visual-Attention-Network/SegNeXt" ["e"=1]
"bubbliiiing/segformer-pytorch" -> "WangLibo1995/GeoSeg" ["e"=1]
"microsoft/Semi-supervised-learning" -> "TorchSSL/TorchSSL"
"microsoft/Semi-supervised-learning" -> "yassouali/awesome-semi-supervised-learning"
"microsoft/Semi-supervised-learning" -> "kekmodel/FixMatch-pytorch"
"microsoft/Semi-supervised-learning" -> "google-research/fixmatch"
"microsoft/Semi-supervised-learning" -> "LiheYoung/UniMatch" ["e"=1]
"microsoft/Semi-supervised-learning" -> "thuml/Transfer-Learning-Library" ["e"=1]
"microsoft/Semi-supervised-learning" -> "HiLab-git/SSL4MIS" ["e"=1]
"microsoft/Semi-supervised-learning" -> "KaiyangZhou/Dassl.pytorch" ["e"=1]
"microsoft/Semi-supervised-learning" -> "nayeemrizve/ups"
"microsoft/Semi-supervised-learning" -> "YGZWQZD/LAMDA-SSL" ["e"=1]
"microsoft/Semi-supervised-learning" -> "LiJunnan1992/DivideMix"
"microsoft/Semi-supervised-learning" -> "YU1ut/MixMatch-pytorch"
"microsoft/Semi-supervised-learning" -> "microsoft/robustlearn" ["e"=1]
"microsoft/Semi-supervised-learning" -> "SupeRuier/awesome-active-learning" ["e"=1]
"microsoft/Semi-supervised-learning" -> "Imbalance-VLM/Imbalance-VLM" ["e"=1]
"FlyEgle/MAE-pytorch" -> "IcarusWizard/MAE"
"FlyEgle/MAE-pytorch" -> "pengzhiliang/MAE-pytorch"
"FlyEgle/MAE-pytorch" -> "BUPT-PRIV/MAE-priv"
"FlyEgle/MAE-pytorch" -> "ariG23498/mae-scalable-vision-learners"
"FlyEgle/MAE-pytorch" -> "FlyEgle/SDWNet"
"IcarusWizard/MAE" -> "FlyEgle/MAE-pytorch"
"IcarusWizard/MAE" -> "Kedreamix/MAE-for-CIFAR"
"IcarusWizard/MAE" -> "liujiyuan13/MAE-code"
"IcarusWizard/MAE" -> "IgorSusmelj/barlowtwins" ["e"=1]
"gbstack/CVPR-2022-papers" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"gbstack/CVPR-2022-papers" -> "DWCTOD/ECCV2022-Papers-with-Code-Demo"
"gbstack/CVPR-2022-papers" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"qiaofengsheng/pytorch-UNet" -> "bubbliiiing/unet-pytorch"
"qiaofengsheng/pytorch-UNet" -> "bubbliiiing/segmentation-format-fix"
"fastlib/fCWT" -> "rafat/wavelib"
"fastlib/fCWT" -> "OverLordGoldDragon/ssqueezepy"
"fastlib/fCWT" -> "Lichtso/CCWT"
"fastlib/fCWT" -> "regeirk/pycwt"
"fastlib/fCWT" -> "TransylvanianInstituteOfNeuroscience/Superlets"
"SpectacularAI/sdk-examples" -> "SpectacularAI/sdk"
"SpectacularAI/sdk-examples" -> "SpectacularAI/HybVIO" ["e"=1]
"SpectacularAI/sdk-examples" -> "luxonis/depthai-ros"
"cmhungsteve/Awesome-Transformer-Attention" -> "dk-liang/Awesome-Visual-Transformer"
"cmhungsteve/Awesome-Transformer-Attention" -> "Yangzhangcst/Transformer-in-Computer-Vision"
"cmhungsteve/Awesome-Transformer-Attention" -> "diff-usion/Awesome-Diffusion-Models" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "DirtyHarryLYL/Transformer-in-Vision"
"cmhungsteve/Awesome-Transformer-Attention" -> "IDEA-Research/awesome-detection-transformer" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "lucidrains/vit-pytorch"
"cmhungsteve/Awesome-Transformer-Attention" -> "MenghaoGuo/Awesome-Vision-Attentions"
"cmhungsteve/Awesome-Transformer-Attention" -> "jacobgil/pytorch-grad-cam"
"cmhungsteve/Awesome-Transformer-Attention" -> "microsoft/Swin-Transformer"
"cmhungsteve/Awesome-Transformer-Attention" -> "facebookresearch/ConvNeXt"
"cmhungsteve/Awesome-Transformer-Attention" -> "facebookresearch/deit"
"cmhungsteve/Awesome-Transformer-Attention" -> "BradyFU/Awesome-Multimodal-Large-Language-Models" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "mlfoundations/open_clip" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "huggingface/pytorch-image-models"
"cmhungsteve/Awesome-Transformer-Attention" -> "google-research/vision_transformer"
"CSAILVision/LabelMeAnnotationTool" -> "wkentaro/labelme"
"CSAILVision/LabelMeAnnotationTool" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "christopher5106/FastAnnotationTool" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "kyamagu/js-segment-annotator"
"CSAILVision/LabelMeAnnotationTool" -> "Labelbox/labelbox-custom-labeling-apps"
"CSAILVision/LabelMeAnnotationTool" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "soeaver/caffe-model" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "daijifeng001/R-FCN" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "hszhao/PSPNet" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "msracver/FCIS" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "microsoft/VoTT"
"CSAILVision/LabelMeAnnotationTool" -> "NaturalIntelligence/imglab"
"CSAILVision/LabelMeAnnotationTool" -> "forresti/SqueezeNet" ["e"=1]
"bubbliiiing/deeplabv3-plus-pytorch" -> "VainF/DeepLabV3Plus-Pytorch" ["e"=1]
"bubbliiiing/deeplabv3-plus-pytorch" -> "bubbliiiing/unet-pytorch"
"bubbliiiing/deeplabv3-plus-pytorch" -> "bubbliiiing/pspnet-pytorch"
"bubbliiiing/deeplabv3-plus-pytorch" -> "bubbliiiing/segformer-pytorch"
"bubbliiiing/deeplabv3-plus-pytorch" -> "bubbliiiing/hrnet-pytorch"
"bubbliiiing/deeplabv3-plus-pytorch" -> "bubbliiiing/segmentation-format-fix"
"bubbliiiing/deeplabv3-plus-pytorch" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"bubbliiiing/deeplabv3-plus-pytorch" -> "yassouali/pytorch-segmentation" ["e"=1]
"bubbliiiing/deeplabv3-plus-pytorch" -> "bubbliiiing/classification-pytorch"
"bubbliiiing/deeplabv3-plus-pytorch" -> "ggyyzm/pytorch_segmentation"
"bubbliiiing/deeplabv3-plus-pytorch" -> "bubbliiiing/Semantic-Segmentation"
"bubbliiiing/deeplabv3-plus-pytorch" -> "bubbliiiing/yolov8-pytorch"
"bubbliiiing/deeplabv3-plus-pytorch" -> "jfzhang95/pytorch-deeplab-xception" ["e"=1]
"bubbliiiing/deeplabv3-plus-pytorch" -> "open-mmlab/mmsegmentation"
"bubbliiiing/deeplabv3-plus-pytorch" -> "Deeachain/Segmentation-Pytorch" ["e"=1]
"bubbliiiing/clip-pytorch" -> "bubbliiiing/detr-pytorch"
"bubbliiiing/clip-pytorch" -> "sugarandgugu/Text2Image-Retrieval"
"bubbliiiing/clip-pytorch" -> "yangjianxin1/CLIP-Chinese"
"weiaicunzai/awesome-image-classification" -> "amusi/awesome-object-detection"
"weiaicunzai/awesome-image-classification" -> "weiaicunzai/pytorch-cifar100"
"weiaicunzai/awesome-image-classification" -> "hysts/pytorch_image_classification"
"weiaicunzai/awesome-image-classification" -> "hoya012/deep_learning_object_detection"
"weiaicunzai/awesome-image-classification" -> "mrgloom/awesome-semantic-segmentation"
"weiaicunzai/awesome-image-classification" -> "amusi/TensorFlow-From-Zero-To-One" ["e"=1]
"weiaicunzai/awesome-image-classification" -> "Cadene/pretrained-models.pytorch"
"weiaicunzai/awesome-image-classification" -> "lukemelas/EfficientNet-PyTorch"
"weiaicunzai/awesome-image-classification" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"weiaicunzai/awesome-image-classification" -> "ChanChiChoi/awesome-Face_Recognition" ["e"=1]
"weiaicunzai/awesome-image-classification" -> "lxztju/pytorch_classification"
"weiaicunzai/awesome-image-classification" -> "weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks"
"weiaicunzai/awesome-image-classification" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"weiaicunzai/awesome-image-classification" -> "bearpaw/pytorch-classification"
"weiaicunzai/awesome-image-classification" -> "amusi/daily-paper-computer-vision"
"Fafa-DL/Awesome-Backbones" -> "Fafa-DL/Image-Augmentation"
"Fafa-DL/Awesome-Backbones" -> "TommyZihao/Train_Custom_Dataset"
"Fafa-DL/Awesome-Backbones" -> "iscyy/ultralyticsPro" ["e"=1]
"Fafa-DL/Awesome-Backbones" -> "xmu-xiaoma666/External-Attention-pytorch"
"Fafa-DL/Awesome-Backbones" -> "open-mmlab/mmpretrain"
"Fafa-DL/Awesome-Backbones" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"Fafa-DL/Awesome-Backbones" -> "huawei-noah/Efficient-AI-Backbones"
"Fafa-DL/Awesome-Backbones" -> "Fafa-DL/LabelConvert"
"Fafa-DL/Awesome-Backbones" -> "murufeng/awesome_lightweight_networks"
"Fafa-DL/Awesome-Backbones" -> "MenghaoGuo/Awesome-Vision-Attentions"
"Fafa-DL/Awesome-Backbones" -> "Fafa-DL/Opencv-project"
"Fafa-DL/Awesome-Backbones" -> "schrodingercatss/tuning_playbook_zh_cn" ["e"=1]
"Fafa-DL/Awesome-Backbones" -> "bubbliiiing/faster-rcnn-pytorch"
"Fafa-DL/Awesome-Backbones" -> "jacobgil/pytorch-grad-cam"
"Fafa-DL/Awesome-Backbones" -> "xmu-xiaoma666/FightingCV-Paper-Reading"
"libffcv/ffcv" -> "facebookresearch/vissl" ["e"=1]
"libffcv/ffcv" -> "webdataset/webdataset" ["e"=1]
"libffcv/ffcv" -> "mosaicml/composer" ["e"=1]
"libffcv/ffcv" -> "arogozhnikov/einops"
"libffcv/ffcv" -> "kornia/kornia"
"libffcv/ffcv" -> "vturrisi/solo-learn" ["e"=1]
"libffcv/ffcv" -> "libffcv/ffcv-imagenet"
"libffcv/ffcv" -> "facebookresearch/ConvNeXt"
"libffcv/ffcv" -> "lightly-ai/lightly" ["e"=1]
"libffcv/ffcv" -> "Lightning-Universe/lightning-bolts"
"libffcv/ffcv" -> "rom1504/img2dataset" ["e"=1]
"libffcv/ffcv" -> "xl0/lovely-tensors" ["e"=1]
"libffcv/ffcv" -> "huggingface/accelerate" ["e"=1]
"libffcv/ffcv" -> "KevinMusgrave/pytorch-metric-learning"
"libffcv/ffcv" -> "facebookresearch/dino"
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/yolov7-pytorch"
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/yolov4-pytorch"
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/yolo3-pytorch"
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/yolov8-pytorch"
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/faster-rcnn-pytorch"
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/yolov5-v6.1-pytorch"
"bubbliiiing/yolov5-pytorch" -> "iscyy/ultralyticsPro" ["e"=1]
"bubbliiiing/yolov5-pytorch" -> "HuKai97/yolov5-5.x-annotations" ["e"=1]
"bubbliiiing/yolov5-pytorch" -> "WangQvQ/YOLOMagic" ["e"=1]
"bubbliiiing/yolov5-pytorch" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"bubbliiiing/yolov5-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/yolov5-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/yolov7-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/yolov4-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/faster-rcnn-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/yolo3-pytorch"
"bubbliiiing/yolox-pytorch" -> "Megvii-BaseDetection/YOLOX"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/yolov8-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/detr-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/yolov7-tiny-pytorch"
"bubbliiiing/yolox-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"open-mmlab/mmengine" -> "open-mmlab/mmeval" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/mmdeploy"
"open-mmlab/mmengine" -> "open-mmlab/mmpretrain"
"open-mmlab/mmengine" -> "open-mmlab/mmcv"
"open-mmlab/mmengine" -> "open-mmlab/mim" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/mmyolo"
"open-mmlab/mmengine" -> "open-mmlab/mmrazor" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/mmflow" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/playground" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/mmfewshot" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/Multimodal-GPT" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/mmselfsup" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/OpenMMLabCourse"
"open-mmlab/mmengine" -> "open-mmlab/mmsegmentation"
"mrgloom/awesome-semantic-segmentation" -> "CSAILVision/semantic-segmentation-pytorch" ["e"=1]
"mrgloom/awesome-semantic-segmentation" -> "amusi/awesome-object-detection"
"mrgloom/awesome-semantic-segmentation" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"mrgloom/awesome-semantic-segmentation" -> "meetps/pytorch-semseg" ["e"=1]
"mrgloom/awesome-semantic-segmentation" -> "hoya012/deep_learning_object_detection"
"mrgloom/awesome-semantic-segmentation" -> "qubvel-org/segmentation_models.pytorch"
"mrgloom/awesome-semantic-segmentation" -> "open-mmlab/mmsegmentation"
"mrgloom/awesome-semantic-segmentation" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"mrgloom/awesome-semantic-segmentation" -> "aleju/imgaug"
"mrgloom/awesome-semantic-segmentation" -> "open-mmlab/mmdetection"
"mrgloom/awesome-semantic-segmentation" -> "Cadene/pretrained-models.pytorch"
"mrgloom/awesome-semantic-segmentation" -> "facebookresearch/maskrcnn-benchmark"
"mrgloom/awesome-semantic-segmentation" -> "zijundeng/pytorch-semantic-segmentation" ["e"=1]
"mrgloom/awesome-semantic-segmentation" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"mrgloom/awesome-semantic-segmentation" -> "jfzhang95/pytorch-deeplab-xception" ["e"=1]
"luispedro/mahotas" -> "luispedro/milk" ["e"=1]
"luispedro/mahotas" -> "luispedro/imread"
"luispedro/mahotas" -> "luispedro/jug"
"luispedro/mahotas" -> "scikit-image/scikit-image" ["e"=1]
"amazon-science/long-short-term-transformer" -> "zhaoyue-zephyrus/TeSTra"
"amazon-science/long-short-term-transformer" -> "wangxiang1230/OadTR"
"amazon-science/long-short-term-transformer" -> "xumingze0308/TRN.pytorch"
"amazon-science/long-short-term-transformer" -> "jbistanbul/MiniROAD"
"amazon-science/long-short-term-transformer" -> "Echo0125/MAT-Memory-and-Anticipation-Transformer"
"amazon-science/long-short-term-transformer" -> "VividLe/Online-Action-Detection" ["e"=1]
"amazon-science/long-short-term-transformer" -> "wangxiang1230/Awesome-Online-Action-Detection"
"amazon-science/long-short-term-transformer" -> "sqiangcao99/E2E-LOAD"
"LTH14/targeted-supcon" -> "FlamieZhu/Balanced-Contrastive-Learning"
"LTH14/targeted-supcon" -> "dvlab-research/Parametric-Contrastive-Learning"
"LTH14/targeted-supcon" -> "VITA-Group/SDCLR"
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "meownoid/tensorflow-rbm"
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "albertbup/deep-belief-network"
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "cmgreen210/TensorFlowDeepAutoencoder" ["e"=1]
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "tobegit3hub/tensorflow_template_application" ["e"=1]
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "Cospel/rbm-ae-tf"
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "myme5261314/dbn_tf"
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "ahangchen/GDLnotes" ["e"=1]
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "alrojo/tensorflow-tutorial" ["e"=1]
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "CreatCodeBuild/TensorFlow-and-DeepLearning-Tutorial" ["e"=1]
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "songgc/TF-recomm" ["e"=1]
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "KnHuq/Dynamic-Tensorflow-Tutorial" ["e"=1]
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "ikostrikov/TensorFlow-VAE-GAN-DRAW" ["e"=1]
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "wuaalb/keras_extensions"
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "echen/restricted-boltzmann-machines"
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "rajarsheem/libsdae-autoencoder-tensorflow" ["e"=1]
"handong1587/handong1587.github.io" -> "foolwood/benchmark_results" ["e"=1]
"handong1587/handong1587.github.io" -> "msracver/Deformable-ConvNets"
"handong1587/handong1587.github.io" -> "Cysu/open-reid" ["e"=1]
"handong1587/handong1587.github.io" -> "KaiyangZhou/deep-person-reid" ["e"=1]
"handong1587/handong1587.github.io" -> "weiliu89/caffe" ["e"=1]
"handong1587/handong1587.github.io" -> "amdegroot/ssd.pytorch"
"handong1587/handong1587.github.io" -> "chongyangtao/Awesome-Scene-Text-Recognition" ["e"=1]
"handong1587/handong1587.github.io" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"handong1587/handong1587.github.io" -> "Cadene/pretrained-models.pytorch"
"handong1587/handong1587.github.io" -> "princeton-vl/CornerNet"
"handong1587/handong1587.github.io" -> "tensorpack/tensorpack" ["e"=1]
"handong1587/handong1587.github.io" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"handong1587/handong1587.github.io" -> "michuanhaohao/reid-strong-baseline" ["e"=1]
"handong1587/handong1587.github.io" -> "mrgloom/awesome-semantic-segmentation"
"handong1587/handong1587.github.io" -> "roytseng-tw/Detectron.pytorch"
"MenghaoGuo/Awesome-Vision-Attentions" -> "xmu-xiaoma666/External-Attention-pytorch"
"MenghaoGuo/Awesome-Vision-Attentions" -> "pprp/awesome-attention-mechanism-in-cv" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "dk-liang/Awesome-Visual-Transformer"
"MenghaoGuo/Awesome-Vision-Attentions" -> "huawei-noah/Efficient-AI-Backbones"
"MenghaoGuo/Awesome-Vision-Attentions" -> "facebookresearch/ConvNeXt"
"MenghaoGuo/Awesome-Vision-Attentions" -> "cmhungsteve/Awesome-Transformer-Attention"
"MenghaoGuo/Awesome-Vision-Attentions" -> "houqb/CoordAttention" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "jacobgil/pytorch-grad-cam"
"MenghaoGuo/Awesome-Vision-Attentions" -> "Visual-Attention-Network/VAN-Classification" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "amusi/CVPR2025-Papers-with-Code"
"MenghaoGuo/Awesome-Vision-Attentions" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"MenghaoGuo/Awesome-Vision-Attentions" -> "Jongchan/attention-module" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "microsoft/Swin-Transformer"
"MenghaoGuo/Awesome-Vision-Attentions" -> "52CV/CVPR-2021-Papers"
"MenghaoGuo/Awesome-Vision-Attentions" -> "amusi/ICCV2023-Papers-with-Code"
"facebookresearch/ConvNeXt" -> "microsoft/Swin-Transformer"
"facebookresearch/ConvNeXt" -> "facebookresearch/ConvNeXt-V2" ["e"=1]
"facebookresearch/ConvNeXt" -> "facebookresearch/mae"
"facebookresearch/ConvNeXt" -> "DingXiaoH/RepVGG"
"facebookresearch/ConvNeXt" -> "facebookresearch/deit"
"facebookresearch/ConvNeXt" -> "huggingface/pytorch-image-models"
"facebookresearch/ConvNeXt" -> "facebookresearch/detr"
"facebookresearch/ConvNeXt" -> "facebookresearch/dino"
"facebookresearch/ConvNeXt" -> "google-research/vision_transformer"
"facebookresearch/ConvNeXt" -> "facebookresearch/moco" ["e"=1]
"facebookresearch/ConvNeXt" -> "lucidrains/vit-pytorch"
"facebookresearch/ConvNeXt" -> "huawei-noah/Efficient-AI-Backbones"
"facebookresearch/ConvNeXt" -> "open-mmlab/mmsegmentation"
"facebookresearch/ConvNeXt" -> "Megvii-BaseDetection/YOLOX"
"facebookresearch/ConvNeXt" -> "jacobgil/pytorch-grad-cam"
"1vpmaster/SimpleTrack" -> "JackWoo0831/Swin-JDE"
"voicerepublic/vr-api-specs" -> "voicerepublic/activeadmin-dragonfly"
"voicerepublic/vr-api-specs" -> "voicerepublic/transitions"
"voicerepublic/vr-api-specs" -> "voicerepublic/upscuits"
"voicerepublic/vr-api-specs" -> "voicerepublic/linux"
"voicerepublic/vr-api-specs" -> "voicerepublic/faye"
"voicerepublic/vr-api-specs" -> "voicerepublic/vr-mobile"
"voicerepublic/vr-api-specs" -> "voicerepublic/vr-devbox"
"voicerepublic/vr-api-specs" -> "voicerepublic/voicerepublic_dev"
"voicerepublic/vr-api-specs" -> "voicerepublic/vr-streambox"
"voicerepublic/vr-api-specs" -> "voicerepublic/vr-fidelity"
"voicerepublic/vr-api-specs" -> "voicerepublic/vr-logorrhoe"
"fossasia/ember-l10n" -> "fossasia/2020.codeheat.org"
"fossasia/ember-l10n" -> "fossasia/code.fossasia.org"
"fossasia/ember-l10n" -> "fossasia/2022.fossasia.org"
"fossasia/ember-l10n" -> "OpnTec/labs.fossasia.org"
"fossasia/ember-l10n" -> "OpnTec/openxlab"
"fossasia/2020.codeheat.org" -> "fossasia/ember-l10n"
"fossasia/2020.codeheat.org" -> "fossasia/2022.fossasia.org"
"fossasia/2020.codeheat.org" -> "fossasia/code.fossasia.org"
"fossasia/2020.codeheat.org" -> "OpnTec/labs.fossasia.org"
"fossasia/2020.codeheat.org" -> "OpnTec/openxlab"
"fossasia/2022.fossasia.org" -> "fossasia/2020.codeheat.org"
"fossasia/2022.fossasia.org" -> "fossasia/ember-l10n"
"fossasia/2022.fossasia.org" -> "fossasia/chatmosphere-app"
"fossasia/2022.fossasia.org" -> "fossasia/cmake-microchip"
"fossasia/2022.fossasia.org" -> "fossasia/code.fossasia.org"
"fossasia/chatmosphere-app" -> "fossasia/cmake-microchip"
"fossasia/chatmosphere-app" -> "fossasia/2022.fossasia.org"
"fossasia/chatmosphere-app" -> "fossasia/2020.codeheat.org"
"fossasia/chatmosphere-app" -> "fossasia/ember-l10n"
"fossasia/cmake-microchip" -> "fossasia/chatmosphere-app"
"fossasia/cmake-microchip" -> "fossasia/2022.fossasia.org"
"fossasia/cmake-microchip" -> "fossasia/2020.codeheat.org"
"fossasia/cmake-microchip" -> "fossasia/ember-l10n"
"pperle/gaze-tracking-pipeline" -> "pperle/gaze-data-collection"
"pperle/gaze-tracking-pipeline" -> "pperle/gaze-tracking"
"pperle/gaze-tracking-pipeline" -> "luca-ant/gaze_tracker"
"makelove/OpenCV-Python-Tutorial" -> "CodecWang/opencv-python-tutorial"
"makelove/OpenCV-Python-Tutorial" -> "JimmyHHua/opencv_tutorials"
"makelove/OpenCV-Python-Tutorial" -> "fendouai/OpenCVTutorials"
"makelove/OpenCV-Python-Tutorial" -> "spmallick/learnopencv"
"makelove/OpenCV-Python-Tutorial" -> "gzr2017/ImageProcessing100Wen"
"makelove/OpenCV-Python-Tutorial" -> "vipstone/faceai" ["e"=1]
"makelove/OpenCV-Python-Tutorial" -> "abidrahmank/OpenCV2-Python-Tutorials"
"makelove/OpenCV-Python-Tutorial" -> "QianMo/OpenCV3-Intro-Book-Src"
"makelove/OpenCV-Python-Tutorial" -> "chenyuntc/pytorch-book" ["e"=1]
"makelove/OpenCV-Python-Tutorial" -> "SnailTyan/deep-learning-papers-translation"
"makelove/OpenCV-Python-Tutorial" -> "amusi/awesome-object-detection"
"makelove/OpenCV-Python-Tutorial" -> "oreillymedia/Learning-OpenCV-3_examples"
"makelove/OpenCV-Python-Tutorial" -> "zergtant/pytorch-handbook" ["e"=1]
"makelove/OpenCV-Python-Tutorial" -> "PyQt5/PyQt" ["e"=1]
"makelove/OpenCV-Python-Tutorial" -> "Ewenwan/MVision" ["e"=1]
"mbeyeler/opencv-python-blueprints" -> "UCI-CARL/MotionEnergy"
"mbeyeler/opencv-python-blueprints" -> "UCI-CARL/VisualStimulusToolbox"
"hustvl/SparseInst" -> "junjiehe96/FastInst"
"hustvl/SparseInst" -> "hustvl/QueryInst"
"hustvl/SparseInst" -> "WXinlong/SOLO"
"hustvl/SparseInst" -> "hustvl/TopFormer" ["e"=1]
"hustvl/SparseInst" -> "hustvl/MIMDet" ["e"=1]
"hustvl/SparseInst" -> "zhang-tao-whu/e2ec"
"hustvl/SparseInst" -> "FoundationVision/VNext"
"hustvl/SparseInst" -> "SysCV/transfiner"
"hustvl/SparseInst" -> "hustvl/ViG" ["e"=1]
"hustvl/SparseInst" -> "hustvl/Senna" ["e"=1]
"hustvl/SparseInst" -> "hustvl/DiG" ["e"=1]
"hustvl/SparseInst" -> "hustvl/mmMamba" ["e"=1]
"hustvl/SparseInst" -> "megvii-research/SOLQ"
"hustvl/SparseInst" -> "leandro-svg/SparseInst_TensorRT"
"hustvl/SparseInst" -> "PeizeSun/OneNet"
"open-mmlab/mmdeploy" -> "open-mmlab/mmrazor" ["e"=1]
"open-mmlab/mmdeploy" -> "open-mmlab/mmpretrain"
"open-mmlab/mmdeploy" -> "open-mmlab/mmyolo"
"open-mmlab/mmdeploy" -> "OpenPPL/ppq" ["e"=1]
"open-mmlab/mmdeploy" -> "open-mmlab/mmcv"
"open-mmlab/mmdeploy" -> "shouxieai/tensorRT_Pro" ["e"=1]
"open-mmlab/mmdeploy" -> "open-mmlab/mmengine"
"open-mmlab/mmdeploy" -> "open-mmlab/mmdetection3d" ["e"=1]
"open-mmlab/mmdeploy" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/mmdeploy" -> "wang-xinyu/tensorrtx"
"open-mmlab/mmdeploy" -> "daquexian/onnx-simplifier"
"open-mmlab/mmdeploy" -> "open-mmlab/mmsegmentation"
"open-mmlab/mmdeploy" -> "OpenPPL/ppl.nn" ["e"=1]
"open-mmlab/mmdeploy" -> "open-mmlab/mmocr" ["e"=1]
"open-mmlab/mmdeploy" -> "onnx/onnx-tensorrt" ["e"=1]
"Duankaiwen/PyCenterNet" -> "MohsenZand/ObjectBox"
"bubbliiiing/yolov5-v6.1-pytorch" -> "bubbliiiing/fcos-pytorch"
"52CV/CVPR-2022-Papers" -> "52CV/CVPR-2021-Papers"
"52CV/CVPR-2022-Papers" -> "52CV/ECCV-2022-Papers"
"52CV/CVPR-2022-Papers" -> "52CV/ICCV-2021-Papers"
"52CV/CVPR-2022-Papers" -> "52CV/CVPR-2023-Papers"
"52CV/CVPR-2022-Papers" -> "52CV/WACV-2022-Papers"
"52CV/CVPR-2022-Papers" -> "52CV/CV-Surveys"
"52CV/CVPR-2022-Papers" -> "DWCTOD/ECCV2022-Papers-with-Code-Demo"
"52CV/CVPR-2022-Papers" -> "amusi/ECCV2024-Papers-with-Code"
"52CV/CVPR-2022-Papers" -> "SYSU-SAIL/DASR" ["e"=1]
"52CV/CVPR-2022-Papers" -> "amusi/ICCV2023-Papers-with-Code"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PASSL"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PaddleVideo" ["e"=1]
"BR-IDL/PaddleViT" -> "PaddlePaddle/X2Paddle"
"BR-IDL/PaddleViT" -> "PaddlePaddle/awesome-DeepLearning"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PaddleSlim"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PaddleYOLO"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PaddleClas"
"BR-IDL/PaddleViT" -> "PaddlePaddle/VIMER" ["e"=1]
"BR-IDL/PaddleViT" -> "apple/ml-cvnets" ["e"=1]
"BR-IDL/PaddleViT" -> "hustvl/TopFormer" ["e"=1]
"BR-IDL/PaddleViT" -> "PaddlePaddle/PaddleSeg"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PGL"
"BR-IDL/PaddleViT" -> "whai362/PVT"
"BR-IDL/PaddleViT" -> "murufeng/awesome_lightweight_networks"
"BR-IDL/PaddleViT" -> "PaddlePaddle/Serving"
"dydjw9/Efficient_SAM" -> "nblt/RWP"
"dydjw9/Efficient_SAM" -> "mueller-mp/SAM-ON"
"dydjw9/Efficient_SAM" -> "Mi-Peng/Sparse-Sharpness-Aware-Minimization"
"bubbliiiing/object-detection-augmentation" -> "bubbliiiing/yolact-pytorch"
"bubbliiiing/object-detection-augmentation" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/object-detection-augmentation" -> "bubbliiiing/mask-rcnn-tf2"
"bubbliiiing/object-detection-augmentation" -> "bubbliiiing/detr-pytorch"
"frank-xwang/debiased-pseudo-labeling" -> "salesforce/MUST"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/PyTorch_YOLOv1"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/FreeYOLO"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/PyTorch_YOLOF"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/yolov2-yolov3_PyTorch"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/RT-ODLab"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/PyTorch_YOLOv3"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/new-YOLOv1_PyTorch"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/PyTorch_YOLOv2"
"TorchSSL/TorchSSL" -> "microsoft/Semi-supervised-learning"
"TorchSSL/TorchSSL" -> "yassouali/awesome-semi-supervised-learning"
"TorchSSL/TorchSSL" -> "kekmodel/FixMatch-pytorch"
"TorchSSL/TorchSSL" -> "google-research/fixmatch"
"TorchSSL/TorchSSL" -> "YU1ut/MixMatch-pytorch"
"TorchSSL/TorchSSL" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"TorchSSL/TorchSSL" -> "LiheYoung/UniMatch" ["e"=1]
"TorchSSL/TorchSSL" -> "HiLab-git/SSL4MIS" ["e"=1]
"TorchSSL/TorchSSL" -> "microsoft/SoftTeacher"
"TorchSSL/TorchSSL" -> "CuriousAI/mean-teacher"
"TorchSSL/TorchSSL" -> "kekmodel/MPL-pytorch"
"TorchSSL/TorchSSL" -> "nayeemrizve/ups"
"TorchSSL/TorchSSL" -> "open-mmlab/mmselfsup" ["e"=1]
"TorchSSL/TorchSSL" -> "subeeshvasu/Awesome-Learning-with-Label-Noise"
"TorchSSL/TorchSSL" -> "thuml/Transfer-Learning-Library" ["e"=1]
"snucml/LargeLossMatters" -> "Correr-Zhou/SPML-AckTheUnknown"
"bubbliiiing/yolox-keras" -> "bubbliiiing/yolact-tf2"
"bubbliiiing/yolox-keras" -> "bubbliiiing/yolact-keras"
"bubbliiiing/yolox-keras" -> "bubbliiiing/efficientdet-tf2"
"zhang-tao-whu/e2ec" -> "lkevinzc/dance"
"zhang-tao-whu/e2ec" -> "SysCV/transfiner"
"zhang-tao-whu/e2ec" -> "fh2019ustc/PolySnake"
"zhang-tao-whu/e2ec" -> "zhanggang001/RefineMask"
"zhang-tao-whu/e2ec" -> "zju3dv/snake"
"zhang-tao-whu/e2ec" -> "hustvl/SparseInst"
"zhang-tao-whu/e2ec" -> "olivia-w12/PatchDCT"
"zhang-tao-whu/e2ec" -> "zorzi-s/PolyWorldPretrainedNetwork" ["e"=1]
"zhang-tao-whu/e2ec" -> "megvii-research/SOLQ"
"Kazuhito00/MOT-Tracking-by-Detection-Pipeline" -> "NobuoTsukamoto/benchmarks"
"ChangyaoTian/VL-LTR" -> "gaopengcuhk/BALLAD"
"ChangyaoTian/VL-LTR" -> "DongSky/LPT"
"libffcv/ffcv-imagenet" -> "GuillaumeLeclerc/fastargs"
"libffcv/ffcv-imagenet" -> "facebookresearch/FFCV-SSL"
"wuaalb/keras_extensions" -> "benanne/morb"
"wuaalb/keras_extensions" -> "meownoid/tensorflow-rbm"
"wuaalb/keras_extensions" -> "Cospel/rbm-ae-tf"
"bubbliiiing/yolov5-tf2" -> "bubbliiiing/yolox-tf2"
"bubbliiiing/yolov5-tf2" -> "bubbliiiing/efficientnet-yolo3-tf2"
"bubbliiiing/yolov5-tf2" -> "bubbliiiing/centernet-tf2"
"bubbliiiing/yolov5-tf2" -> "bubbliiiing/yolo3-tf2"
"bubbliiiing/yolov5-tf2" -> "bubbliiiing/faster-rcnn-tf2"
"alibaba/TinyNeuralNetwork" -> "quic/aimet" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "ModelTC/MQBench" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "MPolaris/onnx2tflite" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "OpenPPL/ppq" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "PINTO0309/onnx2tf"
"alibaba/TinyNeuralNetwork" -> "google-ai-edge/ai-edge-torch"
"alibaba/TinyNeuralNetwork" -> "open-mmlab/mmrazor" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "THU-MIG/torch-model-compression"
"alibaba/TinyNeuralNetwork" -> "666DZY666/micronet" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "openvinotoolkit/nncf" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "VainF/Torch-Pruning" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "nndeploy/nndeploy" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "mit-han-lab/tinyengine" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "mit-han-lab/tinyml" ["e"=1]
"alibaba/TinyNeuralNetwork" -> "Jermmy/pytorch-quantization-demo" ["e"=1]
"PYFTS/pyFTS" -> "PYFTS/notebooks"
"PYFTS/pyFTS" -> "asiviero/fuzzy_time_series_predictor"
"PYFTS/pyFTS" -> "yangysc/Wavelet-HFCM"
"PYFTS/pyFTS" -> "carlomazzaferro/scikit-hts" ["e"=1]
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmyolo"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmrazor" ["e"=1]
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmpretrain"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmdeploy"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmengine"
"open-mmlab/OpenMMLabCourse" -> "TommyZihao/MMPose_Tutorials"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/OpenMMLabCamp"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/playground" ["e"=1]
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmdetection3d" ["e"=1]
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmfewshot" ["e"=1]
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmcv"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmsegmentation"
"open-mmlab/OpenMMLabCourse" -> "TommyZihao/MMSegmentation_Tutorials"
"open-mmlab/OpenMMLabCourse" -> "hhaAndroid/mmdetection-mini"
"ZwwWayne/K-Net" -> "lxtGH/Video-K-Net"
"ZwwWayne/K-Net" -> "facebookresearch/MaskFormer" ["e"=1]
"ZwwWayne/K-Net" -> "zhiqi-li/Panoptic-SegFormer"
"ZwwWayne/K-Net" -> "Tai-Wang/Depth-from-Motion" ["e"=1]
"ZwwWayne/K-Net" -> "open-mmlab/mim" ["e"=1]
"ZwwWayne/K-Net" -> "jshilong/GroupRCNN" ["e"=1]
"ZwwWayne/K-Net" -> "PeizeSun/OneNet"
"ZwwWayne/K-Net" -> "megvii-research/SOLQ"
"ZwwWayne/K-Net" -> "PeizeSun/SparseR-CNN"
"ZwwWayne/K-Net" -> "dvlab-research/PanopticFCN" ["e"=1]
"ZwwWayne/K-Net" -> "tfzhou/ContrastiveSeg" ["e"=1]
"ZwwWayne/K-Net" -> "jshilong/GPT4RoI" ["e"=1]
"ZwwWayne/K-Net" -> "fcjian/TOOD"
"ZwwWayne/K-Net" -> "IDEA-Research/DN-DETR" ["e"=1]
"ZwwWayne/K-Net" -> "zhanggang001/RefineMask"
"chenbinghui1/DSL" -> "Megvii-BaseDetection/DenseTeacher"
"chenbinghui1/DSL" -> "HunterJ-Lin/ActiveTeacher"
"chenbinghui1/DSL" -> "mightyzau/Instant-Teaching"
"chenbinghui1/DSL" -> "ligang-cs/PseCo"
"chenbinghui1/DSL" -> "hikvision-research/SSOD"
"FateMurphy/CEEMDAN_LSTM" -> "FateMurphy/CEEMDAN-VMD-GRU"
"FateMurphy/CEEMDAN_LSTM" -> "ArcherCYM/CEEMDAN-LSTM"
"FateMurphy/CEEMDAN_LSTM" -> "Cy743652/CEEMDAN-LSTM"
"FateMurphy/CEEMDAN_LSTM" -> "GivyBoy/CEEMDAN-and-LSTM-CNN-CBAM"
"FateMurphy/CEEMDAN_LSTM" -> "vrcarva/vmdpy"
"FateMurphy/CEEMDAN_LSTM" -> "irenekarijadi/RF-LSTM-CEEMDAN"
"FateMurphy/CEEMDAN_LSTM" -> "MVRonkin/dsatools"
"FateMurphy/CEEMDAN_LSTM" -> "Corezcy/EEMD-LSTM-DO-Prediction"
"bubbliiiing/yolact-pytorch" -> "bubbliiiing/yolact-keras"
"bubbliiiing/yolact-pytorch" -> "bubbliiiing/mask-rcnn-tf2"
"Vanint/Awesome-LongTailed-Learning" -> "Stomach-ache/awesome-long-tail-learning"
"Vanint/Awesome-LongTailed-Learning" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"Vanint/Awesome-LongTailed-Learning" -> "Vanint/SADE-AgnosticLT"
"Vanint/Awesome-LongTailed-Learning" -> "frank-xwang/RIDE-LongTailRecognition"
"Vanint/Awesome-LongTailed-Learning" -> "facebookresearch/classifier-balancing"
"Vanint/Awesome-LongTailed-Learning" -> "dvlab-research/Parametric-Contrastive-Learning"
"Vanint/Awesome-LongTailed-Learning" -> "kaidic/LDAM-DRW"
"Vanint/Awesome-LongTailed-Learning" -> "ynu-yangpeng/GLMC"
"Vanint/Awesome-LongTailed-Learning" -> "zhmiao/OpenLongTailRecognition-OLTR"
"Vanint/Awesome-LongTailed-Learning" -> "ZhiningLiu1998/awesome-imbalanced-learning"
"Vanint/Awesome-LongTailed-Learning" -> "Chumsy0725/logit-adj-pytorch"
"Vanint/Awesome-LongTailed-Learning" -> "GZWQ/Awesome-Long-Tailed"
"Vanint/Awesome-LongTailed-Learning" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"Vanint/Awesome-LongTailed-Learning" -> "jiequancui/ResLT"
"Vanint/Awesome-LongTailed-Learning" -> "ShadeAlsha/LTR-weight-balancing"
"BorealisAI/ranksim-imbalanced-regression" -> "BorealisAI/ConR"
"SysCV/transfiner" -> "zhang-tao-whu/e2ec"
"SysCV/transfiner" -> "lkeab/BCNet"
"SysCV/transfiner" -> "hustvl/SparseInst"
"SysCV/transfiner" -> "olivia-w12/PatchDCT"
"SysCV/transfiner" -> "zhanggang001/RefineMask"
"SysCV/transfiner" -> "SysCV/pcan" ["e"=1]
"SysCV/transfiner" -> "junjiehe96/FastInst"
"SysCV/transfiner" -> "easton-cau/SOTR"
"SysCV/transfiner" -> "IDEA-Research/MaskDINO" ["e"=1]
"SysCV/transfiner" -> "hujiecpp/ISTR"
"SysCV/transfiner" -> "facebookresearch/Mask2Former" ["e"=1]
"SysCV/transfiner" -> "HDETR/H-Deformable-DETR" ["e"=1]
"HYUNJS/SGT" -> "KimHanjung/VISAGE"
"HYUNJS/SGT" -> "liuqk3/OUTrack"
"HYUNJS/SGT" -> "jbistanbul/MiniROAD"
"HYUNJS/SGT" -> "1vpmaster/SimpleTrack"
"TommyZihao/MMGeneration_Tutorials" -> "open-mmlab/mmgeneration"
"wenyyu/Image-Adaptive-YOLO" -> "wenyyu/IA-Seg"
"wenyyu/Image-Adaptive-YOLO" -> "Gatedip/GDIP-Yolo"
"wenyyu/Image-Adaptive-YOLO" -> "hnuzhy/SSDA-YOLO"
"wenyyu/Image-Adaptive-YOLO" -> "Mazin-Hnewa/MS-DAYOLO"
"wenyyu/Image-Adaptive-YOLO" -> "yz-wang/TogetherNet"
"wenyyu/Image-Adaptive-YOLO" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"wenyyu/Image-Adaptive-YOLO" -> "zhilin007/FFA-Net" ["e"=1]
"wenyyu/Image-Adaptive-YOLO" -> "sunshangquan/ReForDe"
"wenyyu/Image-Adaptive-YOLO" -> "cuiziteng/ICCV_MAET"
"wenyyu/Image-Adaptive-YOLO" -> "cuiziteng/Illumination-Adaptive-Transformer" ["e"=1]
"wenyyu/Image-Adaptive-YOLO" -> "MayankSingal/PyTorch-Image-Dehazing" ["e"=1]
"wenyyu/Image-Adaptive-YOLO" -> "IDKiro/DehazeFormer" ["e"=1]
"wenyyu/Image-Adaptive-YOLO" -> "LiWentomng/OrientedRepPoints" ["e"=1]
"wenyyu/Image-Adaptive-YOLO" -> "BookerDeWitt/MSBDN-DFF" ["e"=1]
"wenyyu/Image-Adaptive-YOLO" -> "NIvykk/DENet"
"encounter1997/FP-DETR" -> "encounter1997/DE-CondDETR"
"encounter1997/FP-DETR" -> "encounter1997/DE-DETRs"
"encounter1997/FP-DETR" -> "encounter1997/Arxiv-Daily"
"encounter1997/FP-DETR" -> "zhechen/Deformable-DETR-REGO" ["e"=1]
"encounter1997/FP-DETR" -> "encounter1997/SFA"
"Alibaba-MIIL/ML_Decoder" -> "SlongLiu/query2labels"
"Alibaba-MIIL/ML_Decoder" -> "Alibaba-MIIL/PartialLabelingCSL"
"Alibaba-MIIL/ML_Decoder" -> "Alibaba-MIIL/ASL"
"Alibaba-MIIL/ML_Decoder" -> "JiaweiZhao-git/Awesome-Multi-label-Image-Recognition"
"Alibaba-MIIL/ML_Decoder" -> "QData/C-Tran"
"Alibaba-MIIL/ML_Decoder" -> "Alibaba-MIIL/TResNet"
"Alibaba-MIIL/ML_Decoder" -> "Alibaba-MIIL/ImageNet21K"
"Alibaba-MIIL/ML_Decoder" -> "openvinotoolkit/deep-object-reid"
"Alibaba-MIIL/ML_Decoder" -> "Alibaba-MIIL/Solving_ImageNet"
"bubbliiiing/dcgan-pytorch" -> "bubbliiiing/srgan-pytorch"
"bubbliiiing/dcgan-pytorch" -> "bubbliiiing/pytorch-GAN"
"bubbliiiing/dcgan-pytorch" -> "bubbliiiing/cyclegan-pytorch"
"bubbliiiing/mask-rcnn-tf2" -> "bubbliiiing/yolact-pytorch"
"jansenfelipe/omr" -> "henricavalcante/openomr"
"jansenfelipe/omr" -> "iansan5653/open-mcr"
"jansenfelipe/omr" -> "rbaron/omr"
"jansenfelipe/omr" -> "tsauvine/omr"
"jansenfelipe/omr" -> "MohawkMEDIC/omrmarkengine"
"jansenfelipe/omr" -> "artesaos/warehouse" ["e"=1]
"Mazin-Hnewa/MS-DAYOLO" -> "hnuzhy/SSDA-YOLO"
"Mazin-Hnewa/MS-DAYOLO" -> "Vibashan/online-da"
"Mazin-Hnewa/MS-DAYOLO" -> "kinredon/umt"
"Mazin-Hnewa/MS-DAYOLO" -> "dliu5812/DDF"
"Mazin-Hnewa/MS-DAYOLO" -> "Feobi1999/TDD"
"Feobi1999/TDD" -> "hikvision-research/ProbabilisticTeacher"
"Feobi1999/TDD" -> "Vibashan/irg-sfda"
"YUE-FAN/CoSSL" -> "ytaek-oh/daso"
"YUE-FAN/CoSSL" -> "bbuing9/DARP"
"YUE-FAN/CoSSL" -> "LeeHyuck/ABC"
"bubbliiiing/segmentation-format-fix" -> "bubbliiiing/hrnet-pytorch"
"bubbliiiing/segmentation-format-fix" -> "bubbliiiing/segformer-pytorch"
"bubbliiiing/segmentation-format-fix" -> "bubbliiiing/deeplabv3-plus-pytorch"
"Cysu/noisy_label" -> "giorgiop/loss-correction"
"Cysu/noisy_label" -> "PaulAlbert31/LabelNoiseCorrection"
"Cysu/noisy_label" -> "imisra/latent-noise-icnm"
"Cysu/noisy_label" -> "udibr/noisy_labels"
"Cysu/noisy_label" -> "LiJunnan1992/MLNT"
"Cysu/noisy_label" -> "DaikiTanaka-UT/JointOptimization"
"keijiro/DepthAITestbed" -> "luxonis/depthai-unity"
"keijiro/DepthAITestbed" -> "keijiro/MetavidoTimeline" ["e"=1]
"keijiro/DepthAITestbed" -> "ibaiGorordo/depthai-android-unity-example"
"luxonis/depthai-unity" -> "keijiro/DepthAITestbed"
"luxonis/depthai-unity" -> "gespona/depthai-unity-plugin"
"takerum/vat" -> "takerum/vat_tf"
"takerum/vat" -> "takerum/vat_chainer"
"takerum/vat" -> "lyakaap/VAT-pytorch"
"takerum/vat" -> "naoto0804/pytorch-VAT"
"fuyi501/ailabel-me" -> "jasonclub/SmartCityBackgroundSystem"
"yjh0410/DetLAB" -> "yjh0410/PyTorch_YOLOv3"
"zyayoung/Iter-Deformable-DETR" -> "megvii-research/Iter-E2EDET"
"iwatake2222/self-driving-ish_computer_vision_system" -> "shouxieai/learning-cuda-trt" ["e"=1]
"iwatake2222/self-driving-ish_computer_vision_system" -> "iwatake2222/InferenceHelper"
"iwatake2222/self-driving-ish_computer_vision_system" -> "iwatake2222/play_with_tensorrt"
"iwatake2222/self-driving-ish_computer_vision_system" -> "iwatake2222/play_with_tflite"
"iwatake2222/self-driving-ish_computer_vision_system" -> "NobuoTsukamoto/tensorrt-examples"
"iwatake2222/self-driving-ish_computer_vision_system" -> "cfzd/Ultra-Fast-Lane-Detection-v2" ["e"=1]
"iwatake2222/self-driving-ish_computer_vision_system" -> "tjqansthd/LapDepth-release" ["e"=1]
"iwatake2222/self-driving-ish_computer_vision_system" -> "shouxieai/infer" ["e"=1]
"MetaVisionLab/DDG" -> "MetaVisionLab/PE"
"MetaVisionLab/DDG" -> "MetaVisionLab/MetaFBP"
"MetaVisionLab/DDG" -> "MetaVisionLab/SSDG"
"MetaVisionLab/DDG" -> "hikvision-research/DomainGeneralization"
"MetaVisionLab/SSDG" -> "MetaVisionLab/PE"
"MetaVisionLab/SSDG" -> "MetaVisionLab/MetaFBP"
"nickmckay/LiPD-utilities" -> "nickmckay/GeoChronR"
"bubbliiiing/hrnet-pytorch" -> "bubbliiiing/pspnet-pytorch"
"bubbliiiing/hrnet-pytorch" -> "bubbliiiing/DeepLabV3Plus-Pytorch"
"bubbliiiing/hrnet-pytorch" -> "bubbliiiing/segmentation-format-fix"
"bubbliiiing/hrnet-pytorch" -> "bubbliiiing/segformer-pytorch"
"bubbliiiing/hrnet-pytorch" -> "bubbliiiing/deeplabv3-plus-pytorch"
"yjh0410/FreeYOLO" -> "yjh0410/DetLAB"
"yjh0410/FreeYOLO" -> "yjh0410/AVA_Dataset" ["e"=1]
"mingkai-zheng/SimMatch" -> "mingkai-zheng/SimMatchV2"
"mingkai-zheng/SimMatch" -> "TencentYoutuResearch/Classification-SemiCLS"
"52CV/ECCV-2022-Papers" -> "52CV/WACV-2022-Papers"
"52CV/ECCV-2022-Papers" -> "52CV/CVPR-2022-Papers"
"bubbliiiing/deeplabv3-plus-tf2" -> "bubbliiiing/deeplabv3-plus-keras"
"bubbliiiing/deeplabv3-plus-tf2" -> "bubbliiiing/pspnet-tf2"
"wu-dd/Advances-in-Partial-and-Complementary-Label-Learning" -> "1998v7/Advances-in-Partial-Label-Learning"
"wu-dd/Advances-in-Partial-and-Complementary-Label-Learning" -> "lvjiaqi77/PRODEN"
"wu-dd/Advances-in-Partial-and-Complementary-Label-Learning" -> "palm-ml/valen"
"wu-dd/Advances-in-Partial-and-Complementary-Label-Learning" -> "hongwei-wen/LW-loss-for-partial-label"
"facebookresearch/adaptive_teacher" -> "kinredon/umt"
"facebookresearch/adaptive_teacher" -> "hikvision-research/ProbabilisticTeacher"
"facebookresearch/adaptive_teacher" -> "Shengcao-Cao/CMT"
"facebookresearch/adaptive_teacher" -> "CityU-AIM-Group/SIGMA"
"facebookresearch/adaptive_teacher" -> "kinredon/DA_Detection_Material"
"facebookresearch/adaptive_teacher" -> "wangs311/awesome-domain-adaptation-object-detection"
"facebookresearch/adaptive_teacher" -> "kinredon/Harmonious-Teacher"
"facebookresearch/adaptive_teacher" -> "thuml/Decoupled-Adaptation-for-Cross-Domain-Object-Detection"
"facebookresearch/adaptive_teacher" -> "hnuzhy/SSDA-YOLO"
"facebookresearch/adaptive_teacher" -> "chengchunhsu/EveryPixelMatters"
"facebookresearch/adaptive_teacher" -> "krumo/Domain-Adaptive-Faster-RCNN-PyTorch"
"facebookresearch/adaptive_teacher" -> "Feobi1999/TDD"
"facebookresearch/adaptive_teacher" -> "VisionLearningGroup/DA_Detection"
"facebookresearch/adaptive_teacher" -> "yuhuayc/sa-da-faster"
"facebookresearch/adaptive_teacher" -> "JeremyZhao1998/MRT-release"
"encounter1997/DE-DETRs" -> "encounter1997/DE-CondDETR"
"encounter1997/DE-DETRs" -> "encounter1997/FP-DETR"
"encounter1997/DE-DETRs" -> "encounter1997/SFA"
"encounter1997/DE-DETRs" -> "encounter1997/Arxiv-Daily"
"encounter1997/DE-CondDETR" -> "encounter1997/DE-DETRs"
"encounter1997/DE-CondDETR" -> "encounter1997/Arxiv-Daily"
"encounter1997/DE-CondDETR" -> "encounter1997/FP-DETR"
"encounter1997/DE-CondDETR" -> "encounter1997/SFA"
"ModelTC/United-Perception" -> "ModelTC/MQBench" ["e"=1]
"ModelTC/United-Perception" -> "tztztztztz/eqlv2"
"ModelTC/United-Perception" -> "hyz-xmaster/swa_object_detection" ["e"=1]
"ModelTC/United-Perception" -> "ModelTC/AAAI2023_EAMPD"
"ModelTC/United-Perception" -> "ModelTC/Dipoorlet" ["e"=1]
"ModelTC/United-Perception" -> "sfzhang15/ATSS"
"extreme-assistant/Deep-learning-datasets" -> "extreme-assistant/survey-computer-vision-2022"
"megvii-research/introduction-neural-3d-reconstruction" -> "megvii-research/cv-master-ex"
"megvii-research/introduction-neural-3d-reconstruction" -> "megvii-research/megvii-tsinghua-dl-course"
"bubbliiiing/arcface-pytorch" -> "bubbliiiing/facenet-pytorch"
"bubbliiiing/arcface-pytorch" -> "bubbliiiing/retinaface-pytorch"
"bubbliiiing/arcface-pytorch" -> "siriusdemon/Build-Your-Own-Face-Model" ["e"=1]
"bubbliiiing/arcface-pytorch" -> "bubbliiiing/facenet-retinaface-pytorch"
"bubbliiiing/arcface-pytorch" -> "bubbliiiing/pytorch-GAN"
"pylabel-project/pylabel" -> "pylabel-project/samples"
"pylabel-project/pylabel" -> "laclouis5/globox"
"pylabel-project/pylabel" -> "tw-yshuang/coco2yolo"
"pylabel-project/samples" -> "pylabel-project/pylabel"
"wjf5203/SeqFormer" -> "FoundationVision/VNext"
"wjf5203/SeqFormer" -> "NVlabs/MinVIS"
"wjf5203/SeqFormer" -> "miranheo/GenVIS"
"wjf5203/SeqFormer" -> "wjn922/ReferFormer" ["e"=1]
"wjf5203/SeqFormer" -> "sukjunhwang/VITA"
"wjf5203/SeqFormer" -> "hustvl/TeViT"
"wjf5203/SeqFormer" -> "qjy981010/CMaskTrack-RCNN"
"wjf5203/SeqFormer" -> "sukjunhwang/IFC"
"wjf5203/SeqFormer" -> "YuqingWang1029/VisTR"
"wjf5203/SeqFormer" -> "JerryX1110/awesome-rvos" ["e"=1]
"wjf5203/SeqFormer" -> "TAO-Dataset/tao"
"wjf5203/SeqFormer" -> "hustvl/CrossVIS"
"wjf5203/SeqFormer" -> "lxtGH/Video-K-Net"
"wjf5203/SeqFormer" -> "hustvl/QueryInst"
"wjf5203/SeqFormer" -> "youtubevos/cocoapi"
"hbzju/PiCO" -> "hbzju/SoLar"
"hbzju/PiCO" -> "lvjiaqi77/PRODEN"
"hbzju/PiCO" -> "wu-dd/Advances-in-Partial-and-Complementary-Label-Learning"
"hbzju/PiCO" -> "eddiexia98/PaPi"
"hbzju/PiCO" -> "xiemk/awesome-weakly-supervised-multi-label-learning"
"hbzju/PiCO" -> "palm-ml/valen"
"hbzju/PiCO" -> "hongwei-wen/LW-loss-for-partial-label"
"hbzju/PiCO" -> "zeroQiaoba/ALIM" ["e"=1]
"hbzju/PiCO" -> "UCSC-REAL/cifar-10-100n"
"hbzju/PiCO" -> "zhongjingyu1/Partial-Multi-Label-Learning"
"hbzju/PiCO" -> "UCSC-REAL/cores"
"hbzju/PiCO" -> "ShikunLi/Sel-CL"
"hbzju/PiCO" -> "1998v7/Advances-in-Partial-Label-Learning"
"PaddlePaddle/TrustAI" -> "PaddlePaddle/InterpretDL"
"SpectacularAI/sdk" -> "SpectacularAI/sdk-examples"
"hnuzhy/SSDA-YOLO" -> "Mazin-Hnewa/MS-DAYOLO"
"hnuzhy/SSDA-YOLO" -> "facebookresearch/adaptive_teacher"
"hnuzhy/SSDA-YOLO" -> "vs-cv/sf-yolo"
"hnuzhy/SSDA-YOLO" -> "AlibabaResearch/efficientteacher" ["e"=1]
"hnuzhy/SSDA-YOLO" -> "luogen1996/OneTeacher"
"hnuzhy/SSDA-YOLO" -> "kinredon/umt"
"hnuzhy/SSDA-YOLO" -> "tiankongzhang/MGADA"
"hnuzhy/SSDA-YOLO" -> "hikvision-research/ProbabilisticTeacher"
"hnuzhy/SSDA-YOLO" -> "GiovanniPasq/DA-Faster-RCNN"
"hnuzhy/SSDA-YOLO" -> "kinredon/Harmonious-Teacher"
"hnuzhy/SSDA-YOLO" -> "wangs311/awesome-domain-adaptation-object-detection"
"hnuzhy/SSDA-YOLO" -> "Hlings/AsyFOD" ["e"=1]
"hnuzhy/SSDA-YOLO" -> "giuliomattolin/ConfMix"
"CityU-AIM-Group/SIGMA" -> "CityU-AIM-Group/SCAN"
"CityU-AIM-Group/SIGMA" -> "facebookresearch/adaptive_teacher"
"CityU-AIM-Group/SIGMA" -> "hikvision-research/ProbabilisticTeacher"
"CityU-AIM-Group/SIGMA" -> "MCG-NJU/TIA"
"CityU-AIM-Group/SIGMA" -> "Feobi1999/TDD"
"CityU-AIM-Group/SIGMA" -> "Vibashan/irg-sfda"
"CityU-AIM-Group/SIGMA" -> "chengchunhsu/EveryPixelMatters"
"CityU-AIM-Group/SIGMA" -> "tiankongzhang/MGADA"
"CityU-AIM-Group/SIGMA" -> "encounter1997/SFA"
"CityU-AIM-Group/SIGMA" -> "kinredon/DA_Detection_Material"
"CityU-AIM-Group/SIGMA" -> "chaoqichen/HTCN"
"CityU-AIM-Group/SIGMA" -> "thuml/Decoupled-Adaptation-for-Cross-Domain-Object-Detection"
"CityU-AIM-Group/SIGMA" -> "Shengcao-Cao/CMT"
"CityU-AIM-Group/SIGMA" -> "kinredon/Harmonious-Teacher"
"CityU-AIM-Group/SIGMA" -> "kevinhkhsu/DA_detection"
"tiankongzhang/MGADA" -> "MCG-NJU/TIA"
"ShiYunyi/Meta-Weight-Net_Code-Optimization" -> "xjtushujun/meta-weight-net"
"ShiYunyi/Meta-Weight-Net_Code-Optimization" -> "xjtushujun/CMW-Net"
"UCSC-REAL/cifar-10-100n" -> "UCSC-REAL/SimiFeat"
"UCSC-REAL/cifar-10-100n" -> "UCSC-REAL/CAL"
"UCSC-REAL/cifar-10-100n" -> "UCSC-REAL/cores"
"UCSC-REAL/cifar-10-100n" -> "shengliu66/SOP"
"UCSC-REAL/cifar-10-100n" -> "UCSC-REAL/negative-label-smoothing"
"fateshelled/OnnxGraphQt" -> "PINTO0309/sit4onnx"
"asprecic/mediapipe" -> "asprecic/mediapipe-qt-integration-example"
"asprecic/mediapipe-qt-integration-example" -> "asprecic/mediapipe"
"asprecic/mediapipe-qt-integration-example" -> "rajkundu/libmp-example"
"TommyZihao/MMTracking_Tutorials" -> "TommyZihao/MMDetection_Tutorials"
"cheind/poisson-image-editing" -> "pablospe/MVCDemo"
"cheind/poisson-image-editing" -> "Erkaman/poisson_blend"
"cheind/poisson-image-editing" -> "cheind/inpaint"
"cheind/poisson-image-editing" -> "willemmanuel/poisson-image-editing"
"VIPSeg-Dataset/VIPSeg-Dataset" -> "lxtGH/Video-K-Net"
"VIPSeg-Dataset/VIPSeg-Dataset" -> "GuoleiSun/VSS-MRCFA" ["e"=1]
"VIPSeg-Dataset/VIPSeg-Dataset" -> "haochenheheda/LVVIS"
"VIPSeg-Dataset/VIPSeg-Dataset" -> "sukjunhwang/VITA"
"VIPSeg-Dataset/VIPSeg-Dataset" -> "Ali2500/BURST-benchmark"
"VIPSeg-Dataset/VIPSeg-Dataset" -> "KainingYing/CTVIS"
"VIPSeg-Dataset/VIPSeg-Dataset" -> "lxtGH/Tube-Link"
"VIPSeg-Dataset/VIPSeg-Dataset" -> "VSPW-dataset/VSPW-dataset-download" ["e"=1]
"VIPSeg-Dataset/VIPSeg-Dataset" -> "NVlabs/MinVIS"
"palm-ml/valen" -> "lvjiaqi77/PRODEN"
"palm-ml/valen" -> "hongwei-wen/LW-loss-for-partial-label"
"JackWoo0831/Swin-JDE" -> "1vpmaster/SimpleTrack"
"PINTO0309/simple-onnx-processing-tools" -> "fateshelled/OnnxGraphQt"
"PINTO0309/simple-onnx-processing-tools" -> "PINTO0309/sit4onnx"
"PINTO0309/simple-onnx-processing-tools" -> "PINTO0309/scc4onnx"
"PINTO0309/simple-onnx-processing-tools" -> "Kazuhito00/YOLOX-Colaboratory-Training-Sample"
"lxtGH/Video-K-Net" -> "VIPSeg-Dataset/VIPSeg-Dataset"
"lxtGH/Video-K-Net" -> "lxtGH/Tube-Link"
"lxtGH/Video-K-Net" -> "ZwwWayne/K-Net"
"lxtGH/Video-K-Net" -> "lxtGH/Panoptic-PartFormer"
"niconielsen32/VisualSLAM" -> "niconielsen32/Robotics"
"bubbliiiing/yolox-tf2" -> "bubbliiiing/efficientnet-yolo3-tf2"
"bubbliiiing/yolox-tf2" -> "bubbliiiing/yolo3-tf2"
"bubbliiiing/yolox-tf2" -> "bubbliiiing/yolact-tf2"
"bubbliiiing/yolox-tf2" -> "bubbliiiing/centernet-tf2"
"wangxiang1230/Awesome-Online-Action-Detection" -> "Echo0125/MAT-Memory-and-Anticipation-Transformer"
"wangxiang1230/Awesome-Online-Action-Detection" -> "wangxiang1230/OadTR"
"wangxiang1230/Awesome-Online-Action-Detection" -> "jbistanbul/MiniROAD"
"ShikunLi/Sel-CL" -> "xiaoboxia/CDR"
"HCPLab-SYSU/HCP-MLR-PL" -> "voyazici/visual-transformers-classification"
"HCPLab-SYSU/HCP-MLR-PL" -> "jameslahm/SCPNet"
"Robbie-Xu/CPSD" -> "voyazici/visual-transformers-classification"
"Bazinga699/NCL" -> "Vanint/SADE-AgnosticLT"
"Bazinga699/NCL" -> "ynu-yangpeng/GLMC"
"Bazinga699/NCL" -> "dvlab-research/Parametric-Contrastive-Learning"
"YyzHarry/multi-domain-imbalance" -> "YyzHarry/SubpopBench" ["e"=1]
"jiawei-ren/BalancedMSE" -> "YyzHarry/imbalanced-regression"
"jiawei-ren/BalancedMSE" -> "BorealisAI/ranksim-imbalanced-regression"
"jiawei-ren/BalancedMSE" -> "frank-xwang/RIDE-LongTailRecognition"
"jiawei-ren/BalancedMSE" -> "jiawei-ren/BalancedMetaSoftmax-Classification"
"jiawei-ren/BalancedMSE" -> "hongfz16/HCMoCo" ["e"=1]
"jiawei-ren/BalancedMSE" -> "YyzHarry/multi-domain-imbalance"
"jiawei-ren/BalancedMSE" -> "LTH14/targeted-supcon"
"jiawei-ren/BalancedMSE" -> "ZhangYuanhan-AI/OmniBenchmark" ["e"=1]
"jiawei-ren/BalancedMSE" -> "jiequancui/ResLT"
"cuiziteng/ICCV_MAET" -> "cuiziteng/Illumination-Adaptive-Transformer" ["e"=1]
"cuiziteng/ICCV_MAET" -> "ZPDu/DAI-Net"
"cuiziteng/ICCV_MAET" -> "khurramHashmi/FeatEnHancer"
"cuiziteng/ICCV_MAET" -> "NIvykk/DENet"
"cuiziteng/ICCV_MAET" -> "Gatedip/GDIP-Yolo"
"cuiziteng/ICCV_MAET" -> "dvlab-research/SNR-Aware-Low-Light-Enhance" ["e"=1]
"cuiziteng/ICCV_MAET" -> "daooshee/HLA-Face-Code"
"cuiziteng/ICCV_MAET" -> "cuiziteng/ECCV_AERIS"
"fedebotu/ICLR2022-OpenReviewData" -> "fedebotu/ICLR2023-OpenReviewData"
"fedebotu/ICLR2022-OpenReviewData" -> "EdisonLeeeee/ICLR2022-OpenReviewData"
"HumanSignal/label-studio-sdk" -> "HumanSignal/label-studio-converter"
"megvii-research/basecls" -> "MegEngine/MegCat"
"yang-ruixin/pytorch-image-models-with-simclr" -> "yang-ruixin/PyTorch-Image-Models-Multi-Label-Classification"
"zhiqi-li/Panoptic-SegFormer" -> "ZwwWayne/K-Net"
"zhiqi-li/Panoptic-SegFormer" -> "hujiecpp/YOSO"
"salesforce/MUST" -> "frank-xwang/debiased-pseudo-labeling"
"qjy981010/CMaskTrack-RCNN" -> "qjy981010/cocoapi"
"bubbliiiing/srgan-pytorch" -> "bubbliiiing/dcgan-pytorch"
"bubbliiiing/srgan-pytorch" -> "bubbliiiing/srgan-keras"
"bubbliiiing/srgan-pytorch" -> "bubbliiiing/cyclegan-pytorch"
"megvii-research/PCB" -> "suilin0432/SoS-WSOD"
"XuYunqiu/H2FA_R-CNN" -> "tiankongzhang/MGADA"
"XuYunqiu/H2FA_R-CNN" -> "dliu5812/DDF"
"XuYunqiu/H2FA_R-CNN" -> "thuml/Decoupled-Adaptation-for-Cross-Domain-Object-Detection"
"Vibashan/irg-sfda" -> "Flashkong/Source-Free-Object-Detection-by-Learning-to-Overlook-Domain-Style"
"Vibashan/irg-sfda" -> "ChuQiaosong/AASFOD"
"Vibashan/irg-sfda" -> "Vibashan/online-da"
"Vibashan/irg-sfda" -> "EPFL-IMOS/simple-SFOD"
"Vibashan/irg-sfda" -> "hikvision-research/ProbabilisticTeacher"
"Vibashan/irg-sfda" -> "Shengcao-Cao/CMT"
"Vibashan/irg-sfda" -> "Feobi1999/TDD"
"Vibashan/online-da" -> "Vibashan/irg-sfda"
"Vibashan/online-da" -> "EPFL-IMOS/simple-SFOD"
"Vibashan/online-da" -> "Shengcao-Cao/CMT"
"gaopengcuhk/BALLAD" -> "ChangyaoTian/VL-LTR"
"gaopengcuhk/BALLAD" -> "jiequancui/ResLT"
"mitmul/caltech-pedestrian-dataset-converter" -> "CasiaFan/Dataset_to_VOC_converter"
"mitmul/caltech-pedestrian-dataset-converter" -> "shadowwalker00/CaltechPestrain2VOC"
"mitmul/caltech-pedestrian-dataset-converter" -> "zhangliliang/RPN_BF" ["e"=1]
"mitmul/caltech-pedestrian-dataset-converter" -> "liuwei16/CSP"
"mitmul/caltech-pedestrian-dataset-converter" -> "simonzachau/caltech-pedestrian-dataset-to-yolo-format-converter"
"mitmul/caltech-pedestrian-dataset-converter" -> "xingkongliang/Pedestrian-Detection"
"mitmul/caltech-pedestrian-dataset-converter" -> "Leotju/MGAN"
"mitmul/caltech-pedestrian-dataset-converter" -> "hizhangp/caltech-pedestrian-converter"
"Flashkong/Source-Free-Object-Detection-by-Learning-to-Overlook-Domain-Style" -> "Vibashan/irg-sfda"
"Flashkong/Source-Free-Object-Detection-by-Learning-to-Overlook-Domain-Style" -> "ChuQiaosong/AASFOD"
"Flashkong/Source-Free-Object-Detection-by-Learning-to-Overlook-Domain-Style" -> "EPFL-IMOS/simple-SFOD"
"Flashkong/Source-Free-Object-Detection-by-Learning-to-Overlook-Domain-Style" -> "Vibashan/online-da"
"inaturalist/iNaturalistReactNative" -> "inaturalist/INaturalistIOS"
"inaturalist/iNaturalistReactNative" -> "inaturalist/SeekReactNative"
"Roche/BalancedLossNLP" -> "blessu/BalancedLossNLP"
"Roche/BalancedLossNLP" -> "wutong16/DistributionBalancedLoss"
"Roche/BalancedLossNLP" -> "adrinta/MAGNET"
"Roche/BalancedLossNLP" -> "EiraZhang/LACO"
"Roche/BalancedLossNLP" -> "aehrc/LAAT" ["e"=1]
"Alibaba-MIIL/Solving_ImageNet" -> "Alibaba-MIIL/PETA"
"megvii-research/Iter-E2EDET" -> "zyayoung/Iter-Deformable-DETR"
"PaddlePaddle/PaddleCustomDevice" -> "PaddlePaddle/PaddleTest"
"JongMokKim/mix-unmix" -> "mightyzau/Instant-Teaching"
"ros-sports/ipm" -> "bit-bots/YOEO"
"ros-sports/ipm" -> "ros-sports/rqt_image_overlay"
"HanxunH/RobustWRN" -> "HanxunH/MDAttack"
"HaizhaoYang/SST_compare" -> "HaizhaoYang/SynLab"
"HaizhaoYang/SST_compare" -> "phamduonghung/FSSTn"
"LeeHyuck/ABC" -> "LeeHyuck/CDMAD"
"ShadeAlsha/LTR-weight-balancing" -> "dvlab-research/MiSLAS"
"ShadeAlsha/LTR-weight-balancing" -> "ynu-yangpeng/GLMC"
"ShadeAlsha/LTR-weight-balancing" -> "Keke921/GCLLoss"
"ShadeAlsha/LTR-weight-balancing" -> "KaihuaTang/Generalized-Long-Tailed-Benchmarks.pytorch"
"ShadeAlsha/LTR-weight-balancing" -> "GZWQ/Awesome-Long-Tailed"
"ShadeAlsha/LTR-weight-balancing" -> "dvlab-research/Parametric-Contrastive-Learning"
"ShadeAlsha/LTR-weight-balancing" -> "Megvii-BaseDetection/DisAlign"
"ShadeAlsha/LTR-weight-balancing" -> "jinyan-06/SHIKE"
"AIflowerQ/InvPref_KDD_2022" -> "LJSthu/HRM"
"Annbless/RegionCL" -> "Annbless/ViTAE"
"HunterJ-Lin/ActiveTeacher" -> "HunterJ-Lin/WSOVOD"
"HunterJ-Lin/ActiveTeacher" -> "luogen1996/OneTeacher"
"HunterJ-Lin/ActiveTeacher" -> "chenbinghui1/DSL"
"HunterJ-Lin/ActiveTeacher" -> "Quyans/GOI-Hyperplane"
"paobranco/ImbalancedLearningRegression" -> "paobranco/Pre-processingApproachesImbalanceRegression"
"naver-ai/cmo" -> "naver-ai/hmix-gmix"
"cjf8899/FeatureMap_Visualize_Pytorch" -> "J911/J911"
"juntang-zhuang/GSAM" -> "dydjw9/Efficient_SAM"
"juntang-zhuang/GSAM" -> "AngusDujw/SAF"
"juntang-zhuang/GSAM" -> "tml-epfl/understanding-sam"
"juntang-zhuang/GSAM" -> "xxgege/GAM"
"juntang-zhuang/GSAM" -> "SamsungLabs/ASAM"
"juntang-zhuang/GSAM" -> "Wang-pengfei/SAGM" ["e"=1]
"juntang-zhuang/GSAM" -> "Mi-Peng/Sparse-Sharpness-Aware-Minimization"
"ibaiGorordo/Tensorflow-Mobile-Generic-Object-Localizer" -> "PINTO0309/mtomo"
"MCG-NJU/TIA" -> "tiankongzhang/MGADA"
"MCG-NJU/TIA" -> "kinredon/Harmonious-Teacher"
"MCG-NJU/TIA" -> "CityU-AIM-Group/SCAN"
"TencentYoutuResearch/Classification-SemiCLS" -> "mingkai-zheng/SimMatch"
"Abhishek-Arora/Image-Classification-Using-SVM" -> "Emmanu-Varghese/Image-Classification-using-SVM"
"Kazuhito00/Skin-Clothes-Hair-Segmentation-using-SMP" -> "NobuoTsukamoto/benchmarks"
"sherman/blobkeeper" -> "atrof/atrof.github.io"
"sherman/blobkeeper" -> "oavdeev/getbox"
"sherman/blobkeeper" -> "emakhov/data-quality-framework"
"sherman/blobkeeper" -> "dartrevan/ChemTextMining"
"sherman/blobkeeper" -> "fgvbrt/nips_rl"
"sherman/blobkeeper" -> "n01z3/kaggle_amazon_from_space"
"sherman/blobkeeper" -> "dmitrijsc/practical-rl"
"UCSC-REAL/SimiFeat" -> "UCSC-REAL/CAL"
"UCSC-REAL/SimiFeat" -> "UCSC-REAL/cifar-10-100n"
"UCSC-REAL/SimiFeat" -> "UCSC-REAL/cores"
"UCSC-REAL/SimiFeat" -> "UCSC-REAL/SelfSup_NoisyLabel"
"bupt-ai-cz/PGDF" -> "bupt-ai-cz/Hybrid-Model-Enabling-Highly-Efficient-Follicular-Segmentation"
"bupt-ai-cz/PGDF" -> "bupt-ai-cz/Glomeruli-Instance-Segmentation"
"bupt-ai-cz/PGDF" -> "bupt-ai-cz/HSA-NRL"
"shengliu66/SOP" -> "Justherozen/ProMix"
"Serafadam/depthai_ros_driver" -> "jetdillo/oakd_models"
"Serafadam/depthai_ros_driver" -> "Serafadam/ros_docsets"
"fsgo/smart-go-dl" -> "fsgo/bin-auto-switcher"
"fsgo/smart-go-dl" -> "fsgo/go_fmt"
"xxgege/NICO-plus" -> "h-yu16/Sparse_Variable_Independence"
"extreme-assistant/survey-computer-vision-2021" -> "extreme-assistant/survey-computer-vision-2022"
"cjf8899/CDRL" -> "cjf8899/CDRL-SA"
"dliu5812/DDF" -> "XuYunqiu/H2FA_R-CNN"
"dliu5812/DDF" -> "MCG-NJU/TIA"
"thuml/Decoupled-Adaptation-for-Cross-Domain-Object-Detection" -> "XuYunqiu/H2FA_R-CNN"
"jetdillo/oakd_models" -> "jetdillo/tenacity_rover"
"frezaeix/VISGA_Public" -> "strongwolf/CDG"
"bupt-ai-cz/HSA-NRL" -> "bupt-ai-cz/PGDF"
"bupt-ai-cz/HSA-NRL" -> "bupt-ai-cz/Hybrid-Model-Enabling-Highly-Efficient-Follicular-Segmentation"
"CityU-AIM-Group/SCAN" -> "MCG-NJU/TIA"
"CityU-AIM-Group/SCAN" -> "CityU-AIM-Group/SIGMA"
"putao537/Awesome-Multi-label-Image-Recognition" -> "HCPLab-SYSU/HCP-MLR-PL"
"FeixiangLu/PaddleSports" -> "PaddlePaddle/PaddleSports"
"bubbliiiing/yolact-tf2" -> "bubbliiiing/yolact-keras"
"bubbliiiing/yolact-keras" -> "bubbliiiing/yolact-tf2"
"suilin0432/SoS-WSOD" -> "heekhero/ACSR"
"google-research/tuning_playbook" -> "labmlai/annotated_deep_learning_paper_implementations"
"google-research/tuning_playbook" -> "huggingface/pytorch-image-models"
"google-research/tuning_playbook" -> "facebookresearch/segment-anything"
"google-research/tuning_playbook" -> "mli/paper-reading"
"google-research/tuning_playbook" -> "karpathy/nanoGPT" ["e"=1]
"google-research/tuning_playbook" -> "lucidrains/vit-pytorch"
"google-research/tuning_playbook" -> "Lightning-AI/pytorch-lightning"
"google-research/tuning_playbook" -> "deepspeedai/DeepSpeed" ["e"=1]
"google-research/tuning_playbook" -> "huggingface/peft" ["e"=1]
"google-research/tuning_playbook" -> "schrodingercatss/tuning_playbook_zh_cn" ["e"=1]
"google-research/tuning_playbook" -> "huggingface/diffusers" ["e"=1]
"google-research/tuning_playbook" -> "google-research/google-research"
"google-research/tuning_playbook" -> "dair-ai/ml-visuals"
"google-research/tuning_playbook" -> "openai/CLIP"
"google-research/tuning_playbook" -> "microsoft/unilm" ["e"=1]
"vdumoulin/conv_arithmetic" -> "soumith/ganhacks" ["e"=1]
"vdumoulin/conv_arithmetic" -> "pytorch/examples"
"vdumoulin/conv_arithmetic" -> "aleju/imgaug"
"vdumoulin/conv_arithmetic" -> "lanpa/tensorboardX"
"vdumoulin/conv_arithmetic" -> "mrgloom/awesome-semantic-segmentation"
"vdumoulin/conv_arithmetic" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"vdumoulin/conv_arithmetic" -> "pytorch/vision"
"vdumoulin/conv_arithmetic" -> "facebookresearch/Detectron"
"vdumoulin/conv_arithmetic" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"vdumoulin/conv_arithmetic" -> "Cadene/pretrained-models.pytorch"
"vdumoulin/conv_arithmetic" -> "hindupuravinash/the-gan-zoo" ["e"=1]
"vdumoulin/conv_arithmetic" -> "yunjey/pytorch-tutorial" ["e"=1]
"vdumoulin/conv_arithmetic" -> "huggingface/pytorch-image-models"
"vdumoulin/conv_arithmetic" -> "HarisIqbal88/PlotNeuralNet"
"vdumoulin/conv_arithmetic" -> "open-mmlab/mmdetection"
"TommyZihao/Train_Custom_Dataset" -> "TommyZihao/Label2Everything"
"TommyZihao/Train_Custom_Dataset" -> "TommyZihao/MMSegmentation_Tutorials"
"TommyZihao/Train_Custom_Dataset" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"TommyZihao/Train_Custom_Dataset" -> "TommyZihao/zihao_course" ["e"=1]
"TommyZihao/Train_Custom_Dataset" -> "z1069614715/objectdetection_script"
"TommyZihao/Train_Custom_Dataset" -> "open-mmlab/mmpretrain"
"TommyZihao/Train_Custom_Dataset" -> "Fafa-DL/Awesome-Backbones"
"TommyZihao/Train_Custom_Dataset" -> "frgfm/torch-cam" ["e"=1]
"TommyZihao/Train_Custom_Dataset" -> "jacobgil/pytorch-grad-cam"
"TommyZihao/Train_Custom_Dataset" -> "TommyZihao/MMPose_Tutorials"
"TommyZihao/Train_Custom_Dataset" -> "open-mmlab/OpenMMLabCourse"
"TommyZihao/Train_Custom_Dataset" -> "CVHub520/X-AnyLabeling" ["e"=1]
"TommyZihao/Train_Custom_Dataset" -> "open-mmlab/mmyolo"
"TommyZihao/Train_Custom_Dataset" -> "xmu-xiaoma666/External-Attention-pytorch"
"TommyZihao/Train_Custom_Dataset" -> "Fafa-DL/Image-Augmentation"
"PaddlePaddle/PaddleYOLO" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/PaddleYOLO" -> "jizhishutong/YOLOU" ["e"=1]
"PaddlePaddle/PaddleYOLO" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/PaddleYOLO" -> "TexasInstruments/edgeai-yolov5" ["e"=1]
"PaddlePaddle/PaddleYOLO" -> "dog-qiuqiu/FastestDet" ["e"=1]
"PaddlePaddle/PaddleYOLO" -> "PaddlePaddle/PASSL"
"PaddlePaddle/PaddleYOLO" -> "miemie2013/miemiedetection" ["e"=1]
"PaddlePaddle/PaddleYOLO" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/PaddleYOLO" -> "iscyy/ultralyticsPro" ["e"=1]
"PaddlePaddle/PaddleYOLO" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/PaddleYOLO" -> "midasklr/yolov5prune" ["e"=1]
"PaddlePaddle/PaddleYOLO" -> "FeiYull/TensorRT-Alpha" ["e"=1]
"PaddlePaddle/PaddleYOLO" -> "open-mmlab/mmyolo"
"PaddlePaddle/PaddleYOLO" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleYOLO" -> "Linaom1214/TensorRT-For-YOLO-Series" ["e"=1]
"ultralytics/ultralytics" -> "ultralytics/yolov5"
"ultralytics/ultralytics" -> "WongKinYiu/yolov7"
"ultralytics/ultralytics" -> "facebookresearch/segment-anything"
"ultralytics/ultralytics" -> "open-mmlab/mmdetection"
"ultralytics/ultralytics" -> "THU-MIG/yolov10" ["e"=1]
"ultralytics/ultralytics" -> "WongKinYiu/yolov9" ["e"=1]
"ultralytics/ultralytics" -> "facebookresearch/detectron2"
"ultralytics/ultralytics" -> "huggingface/pytorch-image-models"
"ultralytics/ultralytics" -> "z1069614715/objectdetection_script"
"ultralytics/ultralytics" -> "PaddlePaddle/PaddleDetection"
"ultralytics/ultralytics" -> "PaddlePaddle/PaddleOCR"
"ultralytics/ultralytics" -> "HumanSignal/labelImg"
"ultralytics/ultralytics" -> "openai/CLIP"
"ultralytics/ultralytics" -> "Megvii-BaseDetection/YOLOX"
"ultralytics/ultralytics" -> "IDEA-Research/Grounded-Segment-Anything" ["e"=1]
"open-mmlab/mmyolo" -> "open-mmlab/mmdeploy"
"open-mmlab/mmyolo" -> "iscyy/ultralyticsPro" ["e"=1]
"open-mmlab/mmyolo" -> "open-mmlab/mmpretrain"
"open-mmlab/mmyolo" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/mmyolo" -> "meituan/YOLOv6"
"open-mmlab/mmyolo" -> "open-mmlab/mmrazor" ["e"=1]
"open-mmlab/mmyolo" -> "Megvii-BaseDetection/YOLOX"
"open-mmlab/mmyolo" -> "open-mmlab/OpenMMLabCourse"
"open-mmlab/mmyolo" -> "lyuwenyu/RT-DETR" ["e"=1]
"open-mmlab/mmyolo" -> "open-mmlab/mmengine"
"open-mmlab/mmyolo" -> "open-mmlab/mmcv"
"open-mmlab/mmyolo" -> "lucasjinreal/yolov7_d2"
"open-mmlab/mmyolo" -> "obss/sahi"
"open-mmlab/mmyolo" -> "WongKinYiu/yolov7"
"open-mmlab/mmyolo" -> "AILab-CVC/YOLO-World" ["e"=1]
"meituan/YOLOv6" -> "WongKinYiu/yolov7"
"meituan/YOLOv6" -> "lucasjinreal/yolov7_d2"
"meituan/YOLOv6" -> "Megvii-BaseDetection/YOLOX"
"meituan/YOLOv6" -> "wang-xinyu/tensorrtx"
"meituan/YOLOv6" -> "open-mmlab/mmyolo"
"meituan/YOLOv6" -> "RangiLyu/nanodet"
"meituan/YOLOv6" -> "iscyy/ultralyticsPro" ["e"=1]
"meituan/YOLOv6" -> "DingXiaoH/RepVGG"
"meituan/YOLOv6" -> "mikel-brostrom/boxmot" ["e"=1]
"meituan/YOLOv6" -> "ifzhang/ByteTrack" ["e"=1]
"meituan/YOLOv6" -> "PaddlePaddle/PaddleDetection"
"meituan/YOLOv6" -> "WongKinYiu/yolor"
"meituan/YOLOv6" -> "Tianxiaomo/pytorch-YOLOv4"
"meituan/YOLOv6" -> "WongKinYiu/yolov9" ["e"=1]
"meituan/YOLOv6" -> "deepcam-cn/yolov5-face" ["e"=1]
"z1069614715/objectdetection_script" -> "iscyy/ultralyticsPro" ["e"=1]
"z1069614715/objectdetection_script" -> "lyuwenyu/RT-DETR" ["e"=1]
"z1069614715/objectdetection_script" -> "ultralytics/ultralytics"
"z1069614715/objectdetection_script" -> "WongKinYiu/yolov9" ["e"=1]
"z1069614715/objectdetection_script" -> "open-mmlab/mmyolo"
"z1069614715/objectdetection_script" -> "WongKinYiu/yolov7"
"z1069614715/objectdetection_script" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"z1069614715/objectdetection_script" -> "mikel-brostrom/boxmot" ["e"=1]
"z1069614715/objectdetection_script" -> "xmu-xiaoma666/External-Attention-pytorch"
"z1069614715/objectdetection_script" -> "ai-dawang/PlugNPlay-Modules"
"z1069614715/objectdetection_script" -> "CVHub520/X-AnyLabeling" ["e"=1]
"z1069614715/objectdetection_script" -> "amusi/CVPR2025-Papers-with-Code"
"z1069614715/objectdetection_script" -> "THU-MIG/yolov10" ["e"=1]
"z1069614715/objectdetection_script" -> "open-mmlab/mmdetection"
"z1069614715/objectdetection_script" -> "TommyZihao/Train_Custom_Dataset"
"wkentaro/labelme" -> "HumanSignal/labelImg"
"wkentaro/labelme" -> "open-mmlab/mmdetection"
"wkentaro/labelme" -> "cvat-ai/cvat"
"wkentaro/labelme" -> "facebookresearch/detectron2"
"wkentaro/labelme" -> "aleju/imgaug"
"wkentaro/labelme" -> "mrgloom/awesome-semantic-segmentation"
"wkentaro/labelme" -> "matterport/Mask_RCNN"
"wkentaro/labelme" -> "AlexeyAB/darknet"
"wkentaro/labelme" -> "albumentations-team/albumentations"
"wkentaro/labelme" -> "ultralytics/yolov3"
"wkentaro/labelme" -> "facebookresearch/maskrcnn-benchmark"
"wkentaro/labelme" -> "xingyizhou/CenterNet"
"wkentaro/labelme" -> "Megvii-BaseDetection/YOLOX"
"wkentaro/labelme" -> "open-mmlab/mmsegmentation"
"wkentaro/labelme" -> "facebookresearch/detr"
"Auorui/Opencv-project-training" -> "wenhaoli-xmu/opencv_projects"
"WongKinYiu/yolov7" -> "meituan/YOLOv6"
"WongKinYiu/yolov7" -> "Megvii-BaseDetection/YOLOX"
"WongKinYiu/yolov7" -> "ultralytics/yolov5"
"WongKinYiu/yolov7" -> "ultralytics/ultralytics"
"WongKinYiu/yolov7" -> "lucasjinreal/yolov7_d2"
"WongKinYiu/yolov7" -> "WongKinYiu/yolov9" ["e"=1]
"WongKinYiu/yolov7" -> "AlexeyAB/darknet"
"WongKinYiu/yolov7" -> "mikel-brostrom/boxmot" ["e"=1]
"WongKinYiu/yolov7" -> "wang-xinyu/tensorrtx"
"WongKinYiu/yolov7" -> "open-mmlab/mmdetection"
"WongKinYiu/yolov7" -> "PaddlePaddle/PaddleDetection"
"WongKinYiu/yolov7" -> "ultralytics/yolov3"
"WongKinYiu/yolov7" -> "facebookresearch/detr"
"WongKinYiu/yolov7" -> "microsoft/Swin-Transformer"
"WongKinYiu/yolov7" -> "facebookresearch/detectron2"
"yangjianxin1/CLIP-Chinese" -> "OFA-Sys/Chinese-CLIP" ["e"=1]
"yangjianxin1/CLIP-Chinese" -> "yangjianxin1/CPM" ["e"=1]
"yangjianxin1/CLIP-Chinese" -> "bubbliiiing/clip-pytorch"
"yangjianxin1/CLIP-Chinese" -> "yangjianxin1/OFA-Chinese"
"yangjianxin1/CLIP-Chinese" -> "yangjianxin1/ClipCap-Chinese" ["e"=1]
"yangjianxin1/CLIP-Chinese" -> "yangjianxin1/GPT2-chitchat" ["e"=1]
"Kazuhito00/Image-Processing-Node-Editor" -> "motojinc25/WeDX"
"Kazuhito00/Image-Processing-Node-Editor" -> "Kazuhito00/MOT-Tracking-by-Detection-Pipeline"
"Kazuhito00/Image-Processing-Node-Editor" -> "fateshelled/OnnxGraphQt"
"Kazuhito00/Image-Processing-Node-Editor" -> "devemin/Geospatial2ros"
"Kazuhito00/Image-Processing-Node-Editor" -> "Kazuhito00/mediapipe-python-sample"
"Kazuhito00/Image-Processing-Node-Editor" -> "NobuoTsukamoto/tensorrt-examples"
"Kazuhito00/Image-Processing-Node-Editor" -> "AISIN-TRC/E2Pose"
"Kazuhito00/Image-Processing-Node-Editor" -> "xiong-jie-y/ml-examples"
"Kazuhito00/Image-Processing-Node-Editor" -> "Kazuhito00/omnidirectional-viewer-sample-using-opencv"
"Kazuhito00/Image-Processing-Node-Editor" -> "ibaiGorordo/ONNX-CREStereo-Depth-Estimation" ["e"=1]
"wookayin/gpustat" -> "wookayin/gpustat-web" ["e"=1]
"wookayin/gpustat" -> "Syllo/nvtop"
"wookayin/gpustat" -> "XuehaiPan/nvitop" ["e"=1]
"wookayin/gpustat" -> "lanpa/tensorboardX"
"wookayin/gpustat" -> "sksq96/pytorch-summary"
"wookayin/gpustat" -> "fossasia/visdom"
"wookayin/gpustat" -> "arogozhnikov/einops"
"wookayin/gpustat" -> "paperswithcode/ai-deadlines" ["e"=1]
"wookayin/gpustat" -> "IDSIA/sacred" ["e"=1]
"wookayin/gpustat" -> "NVIDIA/apex"
"wookayin/gpustat" -> "horovod/horovod" ["e"=1]
"wookayin/gpustat" -> "anderskm/gputil"
"wookayin/gpustat" -> "kornia/kornia"
"wookayin/gpustat" -> "wookayin/dotfiles" ["e"=1]
"wookayin/gpustat" -> "google-research/arxiv-latex-cleaner" ["e"=1]
"mdbloice/Augmentor" -> "aleju/imgaug"
"mdbloice/Augmentor" -> "albumentations-team/albumentations"
"mdbloice/Augmentor" -> "Cadene/pretrained-models.pytorch"
"mdbloice/Augmentor" -> "lanpa/tensorboardX"
"mdbloice/Augmentor" -> "mrgloom/awesome-semantic-segmentation"
"mdbloice/Augmentor" -> "lukemelas/EfficientNet-PyTorch"
"mdbloice/Augmentor" -> "facebookresearch/maskrcnn-benchmark"
"mdbloice/Augmentor" -> "msracver/Deformable-ConvNets"
"mdbloice/Augmentor" -> "meetps/pytorch-semseg" ["e"=1]
"mdbloice/Augmentor" -> "sksq96/pytorch-summary"
"mdbloice/Augmentor" -> "fossasia/visdom"
"mdbloice/Augmentor" -> "roytseng-tw/Detectron.pytorch"
"mdbloice/Augmentor" -> "handong1587/handong1587.github.io"
"mdbloice/Augmentor" -> "xingyizhou/CenterNet"
"mdbloice/Augmentor" -> "tensorpack/tensorpack" ["e"=1]
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/yolov7-tiny-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/yolov5-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/yolov8-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/faster-rcnn-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/yolov4-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/ssd-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/yolov7-pytorch" -> "iscyy/ultralyticsPro" ["e"=1]
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/centernet-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/object-detection-augmentation"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/yolov5-v6.1-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/detr-pytorch"
"bubbliiiing/yolov7-pytorch" -> "bubbliiiing/classification-pytorch"
"voicerepublic/transitions" -> "voicerepublic/activeadmin-dragonfly"
"voicerepublic/transitions" -> "voicerepublic/upscuits"
"voicerepublic/transitions" -> "voicerepublic/linux"
"voicerepublic/transitions" -> "voicerepublic/vr-api-specs"
"voicerepublic/transitions" -> "voicerepublic/faye"
"voicerepublic/transitions" -> "voicerepublic/vr-logorrhoe"
"voicerepublic/transitions" -> "voicerepublic/vr-mobile"
"voicerepublic/transitions" -> "voicerepublic/vr-devbox"
"voicerepublic/transitions" -> "voicerepublic/vr-knowledge-base-audio-processing"
"voicerepublic/transitions" -> "voicerepublic/voicerepublic_dev"
"xmu-xiaoma666/FightingCV-Course" -> "xmu-xiaoma666/FightingCV-Paper-Reading"
"xiemk/awesome-weakly-supervised-multi-label-learning" -> "xiemk/SPML-LAC"
"xiemk/awesome-weakly-supervised-multi-label-learning" -> "zhongjingyu1/Partial-Multi-Label-Learning"
"xiemk/awesome-weakly-supervised-multi-label-learning" -> "Correr-Zhou/Awesome-Single-Positive-Multi-Label-Learning"
"PaddlePaddle/FastDeploy" -> "xlite-dev/lite.ai.toolkit"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/FastDeploy" -> "wang-xinyu/tensorrtx"
"PaddlePaddle/FastDeploy" -> "shouxieai/tensorRT_Pro" ["e"=1]
"PaddlePaddle/FastDeploy" -> "airockchip/rknn_model_zoo" ["e"=1]
"PaddlePaddle/FastDeploy" -> "open-mmlab/mmdeploy"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/PaddleYOLO"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/FastDeploy" -> "OpenPPL/ppq" ["e"=1]
"PaddlePaddle/FastDeploy" -> "CVHub520/X-AnyLabeling" ["e"=1]
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/FastDeploy" -> "FeiYull/TensorRT-Alpha" ["e"=1]
"PINTO0309/onnx2tf" -> "MPolaris/onnx2tflite" ["e"=1]
"PINTO0309/onnx2tf" -> "google-ai-edge/ai-edge-torch"
"PINTO0309/onnx2tf" -> "AlexanderLutsenko/nobuco"
"PINTO0309/onnx2tf" -> "PINTO0309/openvino2tensorflow"
"PINTO0309/onnx2tf" -> "onnx/onnx-tensorflow"
"PINTO0309/onnx2tf" -> "sithu31296/PyTorch-ONNX-TFLite"
"PINTO0309/onnx2tf" -> "alibaba/TinyNeuralNetwork"
"PINTO0309/onnx2tf" -> "ZhangGe6/onnx-modifier" ["e"=1]
"PINTO0309/onnx2tf" -> "PINTO0309/simple-onnx-processing-tools"
"PINTO0309/onnx2tf" -> "PINTO0309/PINTO_model_zoo"
"PINTO0309/onnx2tf" -> "iwatake2222/play_with_tflite"
"PINTO0309/onnx2tf" -> "daquexian/onnx-simplifier"
"PINTO0309/onnx2tf" -> "onnx/tensorflow-onnx"
"PINTO0309/onnx2tf" -> "quic/ai-hub-models"
"PINTO0309/onnx2tf" -> "PINTO0309/tflite2tensorflow"
"z1069614715/z1069614715" -> "z1069614715/objectdetection_script"
"TommyZihao/MMPose_Tutorials" -> "TommyZihao/Label2Everything"
"TommyZihao/MMPose_Tutorials" -> "open-mmlab/mmpose" ["e"=1]
"TommyZihao/MMPose_Tutorials" -> "TommyZihao/MMDetection_Tutorials"
"TommyZihao/MMPose_Tutorials" -> "open-mmlab/OpenMMLabCourse"
"TommyZihao/MMPose_Tutorials" -> "TommyZihao/MMSegmentation_Tutorials"
"TommyZihao/MMPose_Tutorials" -> "leeyegy/SimCC" ["e"=1]
"TommyZihao/MMPose_Tutorials" -> "TommyZihao/Train_Custom_Dataset"
"TommyZihao/MMPose_Tutorials" -> "Tau-J/rtmlib" ["e"=1]
"TommyZihao/MMPose_Tutorials" -> "ViTAE-Transformer/ViTPose" ["e"=1]
"TommyZihao/MMPose_Tutorials" -> "zczcwh/DL-HPE" ["e"=1]
"TommyZihao/MMPose_Tutorials" -> "TommyZihao/MMGeneration_Tutorials"
"TommyZihao/MMPose_Tutorials" -> "JinluZhang1126/MixSTE" ["e"=1]
"Fafa-DL/LabelConvert" -> "Fafa-DL/Image-Augmentation"
"bubbliiiing/yolov7-tiny-pytorch" -> "bubbliiiing/yolov7-pytorch"
"bubbliiiing/yolov7-tiny-pytorch" -> "bubbliiiing/efficientnet-yolo3-pytorch"
"bubbliiiing/yolov7-tiny-pytorch" -> "bubbliiiing/yolov5-v6.1-pytorch"
"bubbliiiing/yolov7-tiny-pytorch" -> "bubbliiiing/fcos-pytorch"
"bubbliiiing/yolov7-tiny-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/yolov7-tiny-pytorch" -> "bubbliiiing/mobilenet-yolov4-pytorch"
"bubbliiiing/yolov7-tiny-pytorch" -> "bubbliiiing/detr-pytorch"
"bubbliiiing/yolov7-tiny-pytorch" -> "bubbliiiing/yolov8-pytorch"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "DWCTOD/ECCV2022-Papers-with-Code-Demo"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "extreme-assistant/survey-computer-vision-2022"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "extreme-assistant/survey-computer-vision-2021"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "extreme-assistant/ICCV2023-Paper-Code-Interpretation"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "52CV/ICCV-2021-Papers"
"Megvii-BaseDetection/DenseTeacher" -> "chenbinghui1/DSL"
"Megvii-BaseDetection/DenseTeacher" -> "ligang-cs/PseCo"
"Megvii-BaseDetection/DenseTeacher" -> "facebookresearch/unbiased-teacher-v2"
"Megvii-BaseDetection/DenseTeacher" -> "hikvision-research/SSOD"
"Megvii-BaseDetection/DenseTeacher" -> "HamPerdredes/SOOD" ["e"=1]
"giuliomattolin/ConfMix" -> "kinredon/Harmonious-Teacher"
"giuliomattolin/ConfMix" -> "tiankongzhang/MGADA"
"laganiere/OpenCV3Cookbook" -> "laganiere/OpenCV2Cookbook2ndEd"
"Gatedip/GDIP-Yolo" -> "sunshangquan/ReForDe"
"Gatedip/GDIP-Yolo" -> "NIvykk/DENet"
"Gatedip/GDIP-Yolo" -> "yz-wang/TogetherNet"
"Gatedip/GDIP-Yolo" -> "wenyyu/IA-Seg"
"52CV/CVPR-2023-Papers" -> "52CV/ICCV-2023-Papers"
"52CV/CVPR-2023-Papers" -> "52CV/CVPR-2022-Papers"
"52CV/CVPR-2023-Papers" -> "52CV/CVPR-2024-Papers"
"52CV/CVPR-2023-Papers" -> "amusi/ICCV2023-Papers-with-Code"
"52CV/CVPR-2023-Papers" -> "52CV/CV-Surveys"
"52CV/CVPR-2023-Papers" -> "DmitryRyumin/ICCV-2023-Papers" ["e"=1]
"52CV/CVPR-2023-Papers" -> "52CV/ECCV-2022-Papers"
"52CV/CVPR-2023-Papers" -> "52CV/WACV-2023-Papers"
"52CV/CVPR-2023-Papers" -> "DWCTOD/CVPR2024-Papers-with-Code-Demo"
"52CV/CVPR-2023-Papers" -> "amusi/ECCV2024-Papers-with-Code"
"52CV/CVPR-2023-Papers" -> "52CV/CVPR-2021-Papers"
"52CV/CVPR-2023-Papers" -> "52CV/WACV-2024-Papers"
"52CV/CVPR-2023-Papers" -> "KMnP/vpt" ["e"=1]
"52CV/CVPR-2023-Papers" -> "amusi/CVPR2025-Papers-with-Code"
"TommyZihao/MMSegmentation_Tutorials" -> "TommyZihao/Label2Everything"
"TommyZihao/MMSegmentation_Tutorials" -> "open-mmlab/mmsegmentation"
"TommyZihao/MMSegmentation_Tutorials" -> "TommyZihao/Train_Custom_Dataset"
"TommyZihao/MMSegmentation_Tutorials" -> "TommyZihao/MMPose_Tutorials"
"TommyZihao/MMSegmentation_Tutorials" -> "bubbliiiing/segformer-pytorch"
"TommyZihao/MMSegmentation_Tutorials" -> "open-mmlab/OpenMMLabCourse"
"TommyZihao/MMSegmentation_Tutorials" -> "bubbliiiing/deeplabv3-plus-pytorch"
"TommyZihao/MMSegmentation_Tutorials" -> "bubbliiiing/unet-pytorch"
"TommyZihao/MMSegmentation_Tutorials" -> "yatengLG/ISAT_with_segment_anything" ["e"=1]
"TommyZihao/MMSegmentation_Tutorials" -> "WangLibo1995/GeoSeg" ["e"=1]
"TommyZihao/MMSegmentation_Tutorials" -> "Junjue-Wang/LoveDA" ["e"=1]
"TommyZihao/MMSegmentation_Tutorials" -> "open-mmlab/OpenMMLabCamp"
"TommyZihao/MMSegmentation_Tutorials" -> "zhuqinfeng1999/Samba" ["e"=1]
"TommyZihao/MMSegmentation_Tutorials" -> "bubbliiiing/pspnet-pytorch"
"DWCTOD/ECCV2022-Papers-with-Code-Demo" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"DWCTOD/ECCV2022-Papers-with-Code-Demo" -> "DWCTOD/CVPR2024-Papers-with-Code-Demo"
"DWCTOD/ECCV2022-Papers-with-Code-Demo" -> "DWCTOD/ICCV2021-Papers-with-Code-Demo"
"DWCTOD/ECCV2022-Papers-with-Code-Demo" -> "52CV/ECCV-2022-Papers"
"DWCTOD/ECCV2022-Papers-with-Code-Demo" -> "52CV/CVPR-2022-Papers"
"POZAlabs/ComMU-code" -> "jbistanbul/MiniROAD"
"POZAlabs/ComMU-code" -> "KimHanjung/VISAGE"
"Cospel/rbm-ae-tf" -> "meownoid/tensorflow-rbm"
"Cospel/rbm-ae-tf" -> "lonl/CDBN"
"PaddlePaddle/PaddleSports" -> "FeixiangLu/PaddleSports"
"PaddlePaddle/PaddleSports" -> "KirigiriSuzumiya/Sports_Game_Tracker"
"VisDrone/Multi-Drone-Multi-Object-Detection-and-Tracking" -> "VisDrone/MultiDrone"
"VisDrone/Multi-Drone-Multi-Object-Detection-and-Tracking" -> "LiuShuaiyr/UAVMOT"
"VisDrone/Multi-Drone-Multi-Object-Detection-and-Tracking" -> "1vpmaster/SimpleTrack"
"bubbliiiing/cyclegan-pytorch" -> "bubbliiiing/pytorch-GAN"
"bubbliiiing/cyclegan-pytorch" -> "bubbliiiing/fcos-pytorch"
"FoundationVision/VNext" -> "wjf5203/SeqFormer"
"FoundationVision/VNext" -> "NVlabs/MinVIS"
"FoundationVision/VNext" -> "miranheo/GenVIS"
"FoundationVision/VNext" -> "sukjunhwang/VITA"
"FoundationVision/VNext" -> "wjn922/ReferFormer" ["e"=1]
"FoundationVision/VNext" -> "MasterBin-IIAU/Unicorn" ["e"=1]
"FoundationVision/VNext" -> "hkchengrex/XMem" ["e"=1]
"FoundationVision/VNext" -> "YuqingWang1029/VisTR"
"FoundationVision/VNext" -> "suhwan-cho/awesome-video-object-segmentation" ["e"=1]
"FoundationVision/VNext" -> "zhang-tao-whu/DVIS"
"FoundationVision/VNext" -> "KainingYing/CTVIS"
"FoundationVision/VNext" -> "yoxu515/aot-benchmark" ["e"=1]
"FoundationVision/VNext" -> "hustvl/CrossVIS"
"FoundationVision/VNext" -> "hkchengrex/STCN" ["e"=1]
"FoundationVision/VNext" -> "lxtGH/Tube-Link"
"open-rdc/ROS2_Walking_Pattern_Generator" -> "citbrains/GankenKun_webots"
"hikvision-research/ProbabilisticTeacher" -> "Shengcao-Cao/CMT"
"hikvision-research/ProbabilisticTeacher" -> "kinredon/Harmonious-Teacher"
"hikvision-research/ProbabilisticTeacher" -> "Feobi1999/TDD"
"hikvision-research/ProbabilisticTeacher" -> "kinredon/umt"
"hikvision-research/ProbabilisticTeacher" -> "facebookresearch/adaptive_teacher"
"hikvision-research/ProbabilisticTeacher" -> "Vibashan/irg-sfda"
"hikvision-research/ProbabilisticTeacher" -> "weii41392/AQT"
"hikvision-research/ProbabilisticTeacher" -> "Flashkong/Source-Free-Object-Detection-by-Learning-to-Overlook-Domain-Style"
"hikvision-research/ProbabilisticTeacher" -> "MCG-NJU/TIA"
"hikvision-research/DomainGeneralization" -> "hikvision-research/SlimDA"
"hikvision-research/DomainGeneralization" -> "MetaVisionLab/DDG"
"pierrepaleo/PDWT" -> "pierrepaleo/pypwt"
"pierrepaleo/PDWT" -> "Greenleaf88/CUDA2DWaveletTransform"
"zhaoyue-zephyrus/TeSTra" -> "amazon-science/long-short-term-transformer"
"zhaoyue-zephyrus/TeSTra" -> "jbistanbul/MiniROAD"
"zhaoyue-zephyrus/TeSTra" -> "Echo0125/MAT-Memory-and-Anticipation-Transformer"
"zhaoyue-zephyrus/TeSTra" -> "wangxiang1230/OadTR"
"zhaoyue-zephyrus/TeSTra" -> "wangxiang1230/Awesome-Online-Action-Detection"
"zhaoyue-zephyrus/TeSTra" -> "sqiangcao99/E2E-LOAD"
"open-mmlab/OpenMMLabCamp" -> "TommyZihao/MMDetection_Tutorials"
"LinkedEarth/Pyleoclim_util" -> "modons/LMR"
"LinkedEarth/Pyleoclim_util" -> "Yefee/xcesm"
"LinkedEarth/Pyleoclim_util" -> "LinkedEarth/PyleoTutorials"
"LinkedEarth/Pyleoclim_util" -> "nickmckay/LiPD-utilities"
"LinkedEarth/Pyleoclim_util" -> "sylvia-dee/PRYSM"
"ligang-cs/PseCo" -> "hikvision-research/SSOD"
"ligang-cs/PseCo" -> "Megvii-BaseDetection/DenseTeacher"
"ligang-cs/PseCo" -> "chenbinghui1/DSL"
"ligang-cs/PseCo" -> "facebookresearch/unbiased-teacher-v2"
"ligang-cs/PseCo" -> "luogen1996/OneTeacher"
"ligang-cs/PseCo" -> "Adamdad/ConsistentTeacher" ["e"=1]
"ligang-cs/PseCo" -> "kinredon/umt"
"ligang-cs/PseCo" -> "mightyzau/Instant-Teaching"
"ligang-cs/PseCo" -> "JCZ404/Semi-DETR"
"ligang-cs/PseCo" -> "HunterJ-Lin/ActiveTeacher"
"sunxm2357/DualCoOp" -> "guozix/TaI-DPT"
"guozix/TaI-DPT" -> "sunxm2357/DualCoOp"
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/Paddle3D" -> "HaohaoNJU/CenterPoint" ["e"=1]
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/PaddleYOLO"
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/PaddleRS" ["e"=1]
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/Paddle3D" -> "OpenDriveLab/Birds-eye-view-Perception" ["e"=1]
"PaddlePaddle/Paddle3D" -> "HuangJunJie2017/BEVDet" ["e"=1]
"PaddlePaddle/Paddle3D" -> "qcraftai/pillarnext" ["e"=1]
"PaddlePaddle/Paddle3D" -> "ADLab-AutoDrive/BEVFusion" ["e"=1]
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/PASSL"
"PaddlePaddle/Paddle3D" -> "megvii-research/PETR" ["e"=1]
"PaddlePaddle/Paddle3D" -> "NVIDIA-AI-IOT/Lidar_AI_Solution" ["e"=1]
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/Paddle3D" -> "PointsCoder/Awesome-3D-Object-Detection-for-Autonomous-Driving" ["e"=1]
"PaddlePaddle/Paddle3D" -> "NVIDIA-AI-IOT/CUDA-PointPillars" ["e"=1]
"Correr-Zhou/SPML-AckTheUnknown" -> "Correr-Zhou/Awesome-Single-Positive-Multi-Label-Learning"
"TommyZihao/MMDetection_Tutorials" -> "TommyZihao/MMClassification_Tutorials"
"wenyyu/IA-Seg" -> "Gatedip/GDIP-Yolo"
"lzx1413/labelImgPlus" -> "lzx1413/LabelImgTool"
"sukjunhwang/VITA" -> "miranheo/GenVIS"
"sukjunhwang/VITA" -> "KimHanjung/VISAGE"
"sukjunhwang/VITA" -> "NVlabs/MinVIS"
"sukjunhwang/VITA" -> "KainingYing/CTVIS"
"sukjunhwang/VITA" -> "sukjunhwang/IFC"
"sukjunhwang/VITA" -> "Ali2500/BURST-benchmark"
"sukjunhwang/VITA" -> "OmkarThawakar/MSSTS-VIS"
"sukjunhwang/VITA" -> "haochenheheda/LVVIS"
"sukjunhwang/VITA" -> "VIPSeg-Dataset/VIPSeg-Dataset"
"NVlabs/MinVIS" -> "sukjunhwang/VITA"
"NVlabs/MinVIS" -> "miranheo/GenVIS"
"NVlabs/MinVIS" -> "FoundationVision/VNext"
"NVlabs/MinVIS" -> "KainingYing/CTVIS"
"NVlabs/MinVIS" -> "wjf5203/SeqFormer"
"NVlabs/MinVIS" -> "VIPSeg-Dataset/VIPSeg-Dataset"
"NVlabs/MinVIS" -> "haochenheheda/LVVIS"
"NVlabs/MinVIS" -> "Ali2500/BURST-benchmark"
"NVlabs/MinVIS" -> "lxtGH/Tube-Link"
"NVlabs/MinVIS" -> "hustvl/TeViT"
"NVlabs/MinVIS" -> "zhang-tao-whu/DVIS"
"NVlabs/MinVIS" -> "QingZhong1996/Awesome-Video-Instance-Segmentation-Papers"
"NVlabs/MinVIS" -> "zhang-tao-whu/DVIS_Plus"
"NVlabs/MinVIS" -> "sukjunhwang/IFC"
"bubbliiiing/detr-pytorch" -> "bubbliiiing/fcos-pytorch"
"bubbliiiing/detr-pytorch" -> "bubbliiiing/retinanet-pytorch"
"bubbliiiing/detr-pytorch" -> "bubbliiiing/efficientdet-pytorch"
"bubbliiiing/detr-pytorch" -> "bubbliiiing/clip-pytorch"
"bubbliiiing/detr-pytorch" -> "bubbliiiing/object-detection-augmentation"
"bubbliiiing/detr-pytorch" -> "bubbliiiing/yolov8-pytorch"
"bubbliiiing/detr-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/detr-pytorch" -> "bubbliiiing/cyclegan-pytorch"
"bubbliiiing/detr-pytorch" -> "bubbliiiing/yolov7-tiny-pytorch"
"facebookresearch/unbiased-teacher-v2" -> "facebookresearch/unbiased-teacher"
"facebookresearch/unbiased-teacher-v2" -> "Megvii-BaseDetection/DenseTeacher"
"facebookresearch/unbiased-teacher-v2" -> "ligang-cs/PseCo"
"facebookresearch/unbiased-teacher-v2" -> "hikvision-research/SSOD"
"facebookresearch/unbiased-teacher-v2" -> "chenbinghui1/DSL"
"FateMurphy/CEEMDAN-VMD-GRU" -> "FateMurphy/CEEMDAN_LSTM"
"FateMurphy/CEEMDAN-VMD-GRU" -> "GivyBoy/CEEMDAN-and-LSTM-CNN-CBAM"
"FateMurphy/CEEMDAN-VMD-GRU" -> "ArcherCYM/CEEMDAN-LSTM"
"FateMurphy/CEEMDAN-VMD-GRU" -> "sanshuishou/-VMD-Attention-LSTM-"
"FateMurphy/CEEMDAN-VMD-GRU" -> "chyaou/VMD-CNN-LSTM-AM-wind-power-forecast"
"yz-wang/TogetherNet" -> "Gatedip/GDIP-Yolo"
"jinlong17/DA-Detect" -> "tiankongzhang/MGADA"
"hikvision-research/SSOD" -> "ligang-cs/PseCo"
"hikvision-research/SSOD" -> "luogen1996/OneTeacher"
"hikvision-research/SSOD" -> "Megvii-BaseDetection/DenseTeacher"
"hikvision-research/SSOD" -> "chenbinghui1/DSL"
"hikvision-research/SSOD" -> "facebookresearch/unbiased-teacher-v2"
"hikvision-research/SSOD" -> "hikvision-research/ProbabilisticTeacher"
"hikvision-research/SSOD" -> "hikvision-research/SlimDA"
"hikvision-research/SSOD" -> "HunterJ-Lin/ActiveTeacher"
"1998v7/Advances-in-Partial-Label-Learning" -> "1998v7/Self-Filtering"
"1998v7/Advances-in-Partial-Label-Learning" -> "wu-dd/Advances-in-Partial-and-Complementary-Label-Learning"
"HadXu/machine-learning" -> "HadXu/ML-From-Scratch"
"sunshangquan/ReForDe" -> "Gatedip/GDIP-Yolo"
"jasonseu/TSFormer" -> "jasonseu/MultiLabelClassification"
"jasonseu/TSFormer" -> "jasonseu/SALGL"
"yhlleo/tensorflow.cifar10" -> "persistforever/cifar10-tensorflow"
"Justherozen/ProMix" -> "hbzju/SoLar"
"Justherozen/ProMix" -> "shengliu66/SOP"
"Justherozen/ProMix" -> "bupt-ai-cz/PGDF"
"Justherozen/ProMix" -> "Justherozen/TRAILER" ["e"=1]
"Justherozen/ProMix" -> "UCSC-REAL/cores"
"felipecruz/CFRBM" -> "ThanhChinhBK/RBM_CF"
"felipecruz/CFRBM" -> "erwtokritos/collaborativefiltering-rbm"
"Correr-Zhou/Awesome-Single-Positive-Multi-Label-Learning" -> "jameslahm/SCPNet"
"Correr-Zhou/Awesome-Single-Positive-Multi-Label-Learning" -> "Correr-Zhou/SPML-AckTheUnknown"
"quic/qidk" -> "quic/ai-hub-models"
"quic/qidk" -> "quic/ai-hub-apps"
"NIvykk/DENet" -> "Gatedip/GDIP-Yolo"
"miranheo/GenVIS" -> "sukjunhwang/VITA"
"miranheo/GenVIS" -> "KimHanjung/VISAGE"
"miranheo/GenVIS" -> "KainingYing/CTVIS"
"miranheo/GenVIS" -> "NVlabs/MinVIS"
"miranheo/GenVIS" -> "Ali2500/BURST-benchmark"
"miranheo/GenVIS" -> "lxtGH/Tube-Link"
"miranheo/GenVIS" -> "sukjunhwang/IFC"
"miranheo/GenVIS" -> "haochenheheda/LVVIS"
"miranheo/GenVIS" -> "wjf5203/SeqFormer"
"GiovanniPasq/DA-Faster-RCNN" -> "fpv-iplab/DA-RetinaNet"
"GiovanniPasq/DA-Faster-RCNN" -> "fpv-iplab/STMDA-RetinaNet"
"FlamieZhu/Balanced-Contrastive-Learning" -> "LTH14/targeted-supcon"
"FlamieZhu/Balanced-Contrastive-Learning" -> "dvlab-research/Parametric-Contrastive-Learning"
"FlamieZhu/Balanced-Contrastive-Learning" -> "Keke921/GCLLoss"
"FlamieZhu/Balanced-Contrastive-Learning" -> "ynu-yangpeng/GLMC"
"UARK-AICV/AISFormer" -> "trqminh/aistron"
"trqminh/aistron" -> "UARK-AICV/AISFormer"
"luogen1996/OneTeacher" -> "HunterJ-Lin/ActiveTeacher"
"luogen1996/OneTeacher" -> "hikvision-research/SSOD"
"luogen1996/OneTeacher" -> "June-Li/SSL_yolov3_seal_FixMatch"
"facebookresearch/FFCV-SSL" -> "libffcv/ffcv-imagenet"
"gesanqiu/SNPE_Tutorial" -> "gesanqiu/Chinese_MobileBert_on_SNPE"
"KaihuaTang/Generalized-Long-Tailed-Benchmarks.pytorch" -> "ShadeAlsha/LTR-weight-balancing"
"KaihuaTang/Generalized-Long-Tailed-Benchmarks.pytorch" -> "yxymessi/H2E-Framework" ["e"=1]
"cuiziteng/ECCV_AERIS" -> "dnap512/SROD"
"niconielsen32/ObjectTracking" -> "niconielsen32/Robotics"
"niconielsen32/ObjectTracking" -> "niconielsen32/AlgortihmsAndDataStructures"
"rajkundu/mediapipe" -> "rajkundu/libmp-example"
"pierrepaleo/pypwt" -> "pierrepaleo/PDWT"
"Ali2500/BURST-benchmark" -> "haochenheheda/LVVIS"
"Ali2500/BURST-benchmark" -> "sukjunhwang/VITA"
"Ali2500/BURST-benchmark" -> "Ali2500/TarViS"
"Ali2500/BURST-benchmark" -> "miranheo/GenVIS"
"Ali2500/BURST-benchmark" -> "VIPSeg-Dataset/VIPSeg-Dataset"
"niconielsen32/PoseEstimation3DObjectDetection" -> "niconielsen32/ObjectTracking"
"niconielsen32/PoseEstimation3DObjectDetection" -> "niconielsen32/PointClouds"
"DongSky/LPT" -> "ChangyaoTian/VL-LTR"
"DongSky/LPT" -> "shijxcs/LIFT"
"zzubqh/Mask2Former-Simplify" -> "IDEA-Research/MP-Former"
"rajkundu/libmp-example" -> "rajkundu/mediapipe"
"PaddlePaddle/PaDiff" -> "PaddlePaddle/PaConvert"
"PaddlePaddle/PaDiff" -> "zhouwei25/PaConvert-Origin"
"OpenGVLab/Official-ConvMAE-Det" -> "OpenGVLab/MovieMind"
"jahongir7174/YOLOv8-pt" -> "jahongir7174/YOLOv11-pt"
"GivyBoy/CEEMDAN-and-LSTM-CNN-CBAM" -> "FateMurphy/CEEMDAN-VMD-GRU"
"GivyBoy/CEEMDAN-and-LSTM-CNN-CBAM" -> "ArcherCYM/CEEMDAN-LSTM"
"extreme-assistant/survey-computer-vision-2022" -> "extreme-assistant/survey-computer-vision-2021"
"Mi-Peng/Sparse-Sharpness-Aware-Minimization" -> "nblt/RWP"
"Mi-Peng/Sparse-Sharpness-Aware-Minimization" -> "dydjw9/Efficient_SAM"
"nblt/RWP" -> "MarlonBecker/MSAM"
"TommyZihao/MMClassification_Tutorials" -> "TommyZihao/MMDetection_Tutorials"
"Richard-61/FineAction" -> "OpenGVLab/MovieMind"
"Richard-61/FineAction" -> "TuanTNG/SimOn"
"sqiangcao99/E2E-LOAD" -> "jbistanbul/MiniROAD"
"Pranshu258/Image_Completion" -> "chwahaha/Space-Time-completion-of-Image"
"Pranshu258/Image_Completion" -> "RomainCroze/Statistical-Image-Completion"
"Pranshu258/Image_Completion" -> "bachase/inpaint"
"myme5261314/dbn_tf" -> "siucaan/ML0120EN_Course"
"myme5261314/dbn_tf" -> "lucastheis/deepbelief"
"myme5261314/dbn_tf" -> "rodrigosetti/dbn-cuda"
"myme5261314/dbn_tf" -> "zhuofupan/Tensorflow-Deep-Neural-Networks"
"hikvision-research/SparseShiftLayer" -> "hikvision-research/SlimDA"
"Quyans/ARStudio" -> "Quyans/GOI-Hyperplane"
"UHHRobotics22-23/MarimbaBot" -> "ros-sports/ipm"
"megvii-research/basedet" -> "MegEngine/MegCat"
"TuanTNG/SimOn" -> "musicalOffering/ActionSwitch-release"
"hikvision-research/SlimDA" -> "hikvision-research/DomainGeneralization"
"hikvision-research/SlimDA" -> "hikvision-research/SparseShiftLayer"
"facebookresearch/segment-anything" -> "IDEA-Research/Grounded-Segment-Anything" ["e"=1]
"facebookresearch/segment-anything" -> "openai/CLIP"
"facebookresearch/segment-anything" -> "facebookresearch/sam2" ["e"=1]
"facebookresearch/segment-anything" -> "lllyasviel/ControlNet" ["e"=1]
"facebookresearch/segment-anything" -> "huggingface/pytorch-image-models"
"facebookresearch/segment-anything" -> "facebookresearch/detectron2"
"facebookresearch/segment-anything" -> "open-mmlab/mmdetection"
"facebookresearch/segment-anything" -> "meta-llama/llama" ["e"=1]
"facebookresearch/segment-anything" -> "huggingface/diffusers" ["e"=1]
"facebookresearch/segment-anything" -> "facebookresearch/dinov2" ["e"=1]
"facebookresearch/segment-anything" -> "ultralytics/ultralytics"
"facebookresearch/segment-anything" -> "haotian-liu/LLaVA" ["e"=1]
"facebookresearch/segment-anything" -> "CompVis/stable-diffusion" ["e"=1]
"facebookresearch/segment-anything" -> "lucidrains/vit-pytorch"
"facebookresearch/segment-anything" -> "Vision-CAIR/MiniGPT-4" ["e"=1]
"pytorch/examples" -> "yunjey/pytorch-tutorial" ["e"=1]
"pytorch/examples" -> "pytorch/vision"
"pytorch/examples" -> "pytorch/tutorials" ["e"=1]
"pytorch/examples" -> "bharathgs/Awesome-pytorch-list" ["e"=1]
"pytorch/examples" -> "pytorch/pytorch" ["e"=1]
"pytorch/examples" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"pytorch/examples" -> "huggingface/pytorch-image-models"
"pytorch/examples" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"pytorch/examples" -> "lanpa/tensorboardX"
"pytorch/examples" -> "soumith/ganhacks" ["e"=1]
"pytorch/examples" -> "Cadene/pretrained-models.pytorch"
"pytorch/examples" -> "chenyuntc/pytorch-book" ["e"=1]
"pytorch/examples" -> "tensorflow/models" ["e"=1]
"pytorch/examples" -> "vdumoulin/conv_arithmetic"
"pytorch/examples" -> "open-mmlab/mmdetection"
"PaddlePaddle/Paddle" -> "PaddlePaddle/models"
"PaddlePaddle/Paddle" -> "apache/mxnet" ["e"=1]
"PaddlePaddle/Paddle" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/Paddle" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"PaddlePaddle/Paddle" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/Paddle" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/Paddle" -> "BVLC/caffe" ["e"=1]
"PaddlePaddle/Paddle" -> "ApolloAuto/apollo" ["e"=1]
"PaddlePaddle/Paddle" -> "PaddlePaddle/PaddleOCR"
"PaddlePaddle/Paddle" -> "Tencent/ncnn"
"PaddlePaddle/Paddle" -> "dmlc/xgboost" ["e"=1]
"PaddlePaddle/Paddle" -> "exacity/deeplearningbook-chinese" ["e"=1]
"PaddlePaddle/Paddle" -> "PaddlePaddle/book"
"PaddlePaddle/Paddle" -> "fxsjy/jieba" ["e"=1]
"PaddlePaddle/Paddle" -> "pytorch/pytorch" ["e"=1]
"laszukdawid/PyEMD" -> "vrcarva/vmdpy"
"laszukdawid/PyEMD" -> "jaidevd/pyhht"
"laszukdawid/PyEMD" -> "FateMurphy/CEEMDAN_LSTM"
"laszukdawid/PyEMD" -> "PyWavelets/pywt"
"laszukdawid/PyEMD" -> "scikit-signal/tftb"
"laszukdawid/PyEMD" -> "hustcxl/SP_Lib"
"laszukdawid/PyEMD" -> "OverLordGoldDragon/ssqueezepy"
"laszukdawid/PyEMD" -> "tianyagk/PyEMD"
"laszukdawid/PyEMD" -> "MVRonkin/dsatools"
"laszukdawid/PyEMD" -> "wmayner/pyemd" ["e"=1]
"laszukdawid/PyEMD" -> "nikdon/pyEntropy" ["e"=1]
"laszukdawid/PyEMD" -> "MattWillFlood/EntropyHub" ["e"=1]
"laszukdawid/PyEMD" -> "vrcarva/ewtpy"
"laszukdawid/PyEMD" -> "regeirk/pycwt"
"laszukdawid/PyEMD" -> "Corezcy/EEMD-LSTM-DO-Prediction"
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/yolov7-pytorch"
"bubbliiiing/yolov8-pytorch" -> "DataXujing/YOLOv8" ["e"=1]
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/yolov5-pytorch"
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/yolox-pytorch"
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/detr-pytorch"
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/yolov7-tiny-pytorch"
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/deeplabv3-plus-pytorch"
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/retinanet-pytorch"
"bubbliiiing/yolov8-pytorch" -> "Jai-wei/YOLOv8-PySide6-GUI" ["e"=1]
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/faster-rcnn-pytorch"
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/classification-pytorch"
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/yolov4-pytorch"
"bubbliiiing/yolov8-pytorch" -> "bubbliiiing/yolov4-tiny-pytorch"
"bubbliiiing/yolov8-pytorch" -> "Sharpiless/Yolov5-Deepsort" ["e"=1]
"bubbliiiing/yolov8-pytorch" -> "jahongir7174/YOLOv8-pt"
"Echo0125/MAT-Memory-and-Anticipation-Transformer" -> "wangxiang1230/Awesome-Online-Action-Detection"
"Echo0125/MAT-Memory-and-Anticipation-Transformer" -> "wangxiang1230/OadTR"
"Echo0125/MAT-Memory-and-Anticipation-Transformer" -> "jbistanbul/MiniROAD"
"hujiecpp/YOSO" -> "hujiecpp/ISTR"
"hujiecpp/YOSO" -> "zhiqi-li/Panoptic-SegFormer"
"hujiecpp/YOSO" -> "hujiecpp/Mini-Segment-Anything"
"hujiecpp/YOSO" -> "hujiecpp/PE3R" ["e"=1]
"loshchil/SGDR" -> "loshchil/AdamW-and-SGDW"
"loshchil/SGDR" -> "gaohuang/SnapshotEnsemble" ["e"=1]
"loshchil/SGDR" -> "gngdb/pytorch-cifar-sgdr"
"TommyZihao/Label2Everything" -> "TommyZihao/MMSegmentation_Tutorials"
"TommyZihao/Label2Everything" -> "TommyZihao/Train_Custom_Dataset"
"TommyZihao/Label2Everything" -> "TommyZihao/MMPose_Tutorials"
"TommyZihao/Label2Everything" -> "ultralytics/JSON2YOLO"
"TommyZihao/Label2Everything" -> "TomMao23/multiyolov5" ["e"=1]
"TommyZihao/Label2Everything" -> "leeyegy/SimCC" ["e"=1]
"lxtGH/Tube-Link" -> "miranheo/GenVIS"
"lxtGH/Tube-Link" -> "KainingYing/CTVIS"
"lxtGH/Tube-Link" -> "VIPSeg-Dataset/VIPSeg-Dataset"
"lxtGH/Tube-Link" -> "lxtGH/Video-K-Net"
"lxtGH/Tube-Link" -> "zhang-tao-whu/DVIS"
"lxtGH/Tube-Link" -> "sukjunhwang/VITA"
"lxtGH/Tube-Link" -> "zhang-tao-whu/DVIS_Plus"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/linux"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/transitions"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/faye"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/upscuits"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/vr-api-specs"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/vr-mobile"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/voicerepublic_dev"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/vr-devbox"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/vr-knowledge-base-audio-processing"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/vr-logorrhoe"
"voicerepublic/activeadmin-dragonfly" -> "voicerepublic/pdf-viewer"
"mariobehling/Xoai-Artwork" -> "OpnTec/2023.opentechsummit.de"
"mariobehling/Xoai-Artwork" -> "fossasia/chatmosphere-app"
"mariobehling/Xoai-Artwork" -> "fossasia/cmake-microchip"
"pistonly/modwtpy" -> "samluxenberg1/Time-Series-Forecasting-with-Wavelets"
"SysCV/MaskFreeVIS" -> "miranheo/GenVIS"
"SysCV/MaskFreeVIS" -> "NVlabs/MinVIS"
"SysCV/MaskFreeVIS" -> "lxtGH/Tube-Link"
"SysCV/MaskFreeVIS" -> "FoundationVision/VNext"
"SysCV/MaskFreeVIS" -> "sukjunhwang/VITA"
"sugarandgugu/Text2Image-Retrieval" -> "sjy0727/CLIP-Text-Image-Retrieval"
"sugarandgugu/Text2Image-Retrieval" -> "sugarandgugu/Simple-Trl-Training"
"sugarandgugu/Text2Image-Retrieval" -> "hpc203/Chinese-CLIP-opencv-onnxrun"
"AlexanderLutsenko/nobuco" -> "PINTO0309/onnx2tf"
"AlexanderLutsenko/nobuco" -> "google-ai-edge/ai-edge-torch"
"Erlemar/Erlemar.github.io" -> "dmitrijsc/practical-rl"
"Erlemar/Erlemar.github.io" -> "sajal2692/data-science-portfolio" ["e"=1]
"Erlemar/Erlemar.github.io" -> "oavdeev/getbox"
"Erlemar/Erlemar.github.io" -> "dartrevan/ChemTextMining"
"Erlemar/Erlemar.github.io" -> "sherman/blobkeeper"
"Erlemar/Erlemar.github.io" -> "alexeygrigorev/libftrl-python"
"Erlemar/Erlemar.github.io" -> "atrof/atrof.github.io"
"Erlemar/Erlemar.github.io" -> "emakhov/data-quality-framework"
"Erlemar/Erlemar.github.io" -> "indeedeng/vowpal-wabbit-java"
"Erlemar/Erlemar.github.io" -> "Dumbris/trunklucator"
"Erlemar/Erlemar.github.io" -> "ex4sperans/maggot"
"Erlemar/Erlemar.github.io" -> "kiselev1189/EEGClassificationMCNN"
"Erlemar/Erlemar.github.io" -> "lext/deep_docker"
"Erlemar/Erlemar.github.io" -> "fgvbrt/nips_rl"
"Erlemar/Erlemar.github.io" -> "DBusAI/TF_Eager"
"junjiehe96/FastInst" -> "hustvl/SparseInst"
"junjiehe96/FastInst" -> "olivia-w12/PatchDCT"
"junjiehe96/FastInst" -> "IDEA-Research/MP-Former"
"kinredon/Harmonious-Teacher" -> "Shengcao-Cao/CMT"
"kinredon/Harmonious-Teacher" -> "hikvision-research/ProbabilisticTeacher"
"kinredon/Harmonious-Teacher" -> "tiankongzhang/MGADA"
"MrYxJ/calculate-flops.pytorch" -> "zugexiaodui/torch_flops"
"MrYxJ/calculate-flops.pytorch" -> "sovrasov/flops-counter.pytorch"
"MrYxJ/calculate-flops.pytorch" -> "facebookresearch/fvcore"
"MrYxJ/calculate-flops.pytorch" -> "Lyken17/pytorch-OpCounter"
"MrYxJ/calculate-flops.pytorch" -> "daixiangzi/Awesome-Token-Compress" ["e"=1]
"MrYxJ/calculate-flops.pytorch" -> "zhijian-liu/torchprofile" ["e"=1]
"MrYxJ/calculate-flops.pytorch" -> "HuangOwen/Awesome-LLM-Compression" ["e"=1]
"MrYxJ/calculate-flops.pytorch" -> "facebookresearch/ToMe" ["e"=1]
"MrYxJ/calculate-flops.pytorch" -> "fla-org/flash-linear-attention" ["e"=1]
"MrYxJ/calculate-flops.pytorch" -> "deepspeedai/Megatron-DeepSpeed" ["e"=1]
"MetaVisionLab/MetaFBP" -> "MetaVisionLab/PE"
"MetaVisionLab/MetaFBP" -> "MetaVisionLab/SSDG"
"MetaVisionLab/MetaFBP" -> "MetaVisionLab/DDG"
"52CV/ICCV-2023-Papers" -> "52CV/ECCV-2022-Papers"
"52CV/ICCV-2023-Papers" -> "52CV/CVPR-2023-Papers"
"52CV/ICCV-2023-Papers" -> "52CV/WACV-2024-Papers"
"mecarill/2pcnet" -> "Shengcao-Cao/CMT"
"mecarill/2pcnet" -> "facebookresearch/adaptive_teacher"
"mecarill/2pcnet" -> "JeremyZhao1998/MRT-release"
"meownoid/tensorflow-rbm" -> "Cospel/rbm-ae-tf"
"meownoid/tensorflow-rbm" -> "wuaalb/keras_extensions"
"meownoid/tensorflow-rbm" -> "n01z3/kaggle_amazon_from_space"
"meownoid/tensorflow-rbm" -> "yell/boltzmann-machines"
"meownoid/tensorflow-rbm" -> "gabrieleangeletti/Deep-Learning-TensorFlow"
"meownoid/tensorflow-rbm" -> "echen/restricted-boltzmann-machines"
"meownoid/tensorflow-rbm" -> "atrof/atrof.github.io"
"meownoid/tensorflow-rbm" -> "sherman/blobkeeper"
"meownoid/tensorflow-rbm" -> "lext/deep_docker"
"meownoid/tensorflow-rbm" -> "fgvbrt/nips_rl"
"meownoid/tensorflow-rbm" -> "ArkadiyD/CythonXGB"
"meownoid/tensorflow-rbm" -> "kiselev1189/EEGClassificationMCNN"
"meownoid/tensorflow-rbm" -> "emakhov/data-quality-framework"
"meownoid/tensorflow-rbm" -> "albertbup/deep-belief-network"
"meownoid/tensorflow-rbm" -> "heyt0ny/KaggleBiatch"
"mwydmuch/extremeText" -> "tomtung/omikuji"
"IDEA-Research/MP-Former" -> "zzubqh/Mask2Former-Simplify"
"PaddlePaddle/PaConvert" -> "PaddlePaddle/PaDiff"
"codebox/image_augmentor" -> "Paperspace/DataAugmentationForObjectDetection"
"codebox/image_augmentor" -> "AgaMiko/data-augmentation-review"
"codebox/image_augmentor" -> "mdbloice/Augmentor"
"codebox/image_augmentor" -> "CrazyVertigo/awesome-data-augmentation"
"codebox/image_augmentor" -> "kevinlin311tw/caffe-augmentation" ["e"=1]
"zhang-tao-whu/DVIS" -> "zhang-tao-whu/DVIS_Plus"
"zhang-tao-whu/DVIS" -> "KainingYing/CTVIS"
"zhang-tao-whu/DVIS" -> "haochenheheda/LVVIS"
"zhang-tao-whu/DVIS" -> "lxtGH/Tube-Link"
"zhang-tao-whu/DVIS" -> "Seung-Hun-Lee/CAVIS"
"zhang-tao-whu/DVIS" -> "Ali2500/BURST-benchmark"
"zhang-tao-whu/DVIS" -> "miranheo/GenVIS"
"zhang-tao-whu/DVIS" -> "VIPSeg-Dataset/VIPSeg-Dataset"
"zhang-tao-whu/DVIS" -> "sukjunhwang/VITA"
"zhang-tao-whu/DVIS" -> "NVlabs/MinVIS"
"zhang-tao-whu/DVIS" -> "MinghanLi/UniVS"
"zhang-tao-whu/DVIS" -> "Ali2500/TarViS"
"MetaVisionLab/PE" -> "MetaVisionLab/MetaFBP"
"MetaVisionLab/PE" -> "MetaVisionLab/DDG"
"MetaVisionLab/PE" -> "MetaVisionLab/SSDG"
"rchavezj/OpenCV_Projects" -> "murtazahassan/OpenCV-Python-Tutorials-and-Projects"
"rchavezj/OpenCV_Projects" -> "TusharSSurve/OpenCV"
"PaddlePaddle/ERNIE-SDK" -> "baidubce/bce-qianfan-sdk"
"PaddlePaddle/ERNIE-SDK" -> "PaddlePaddle/PaddleMIX"
"PaddlePaddle/ERNIE-SDK" -> "PaddlePaddle/docs"
"PaddlePaddle/ERNIE-SDK" -> "PaddlePaddle/PaddleRS" ["e"=1]
"PaddlePaddle/ERNIE-SDK" -> "PaddlePaddle/PaddleScience" ["e"=1]
"PaddlePaddle/ERNIE-SDK" -> "baidubce/app-builder"
"PaddlePaddle/ERNIE-SDK" -> "AgentEra/Agently-Daily-News-Collector" ["e"=1]
"PaddlePaddle/ERNIE-SDK" -> "PaddleCV-SIG/PaddleLabel" ["e"=1]
"PaddlePaddle/ERNIE-SDK" -> "linhandev/medSeg" ["e"=1]
"dialnd/imbalanced-algorithms" -> "ZhiningLiu1998/mesa"
"dialnd/imbalanced-algorithms" -> "jhwjhw0123/Imbalance-XGBoost"
"dialnd/imbalanced-algorithms" -> "analyticalmindsltd/smote_variants"
"dialnd/imbalanced-algorithms" -> "ZhiningLiu1998/self-paced-ensemble"
"dialnd/imbalanced-algorithms" -> "albahnsen/CostSensitiveClassification"
"XiangchenYin/PE-YOLO" -> "Gatedip/GDIP-Yolo"
"XiangchenYin/PE-YOLO" -> "NIvykk/DENet"
"commaai/commacoloring" -> "commaai/chffr-api"
"commaai/commacoloring" -> "commaai/web"
"jameslahm/SCPNet" -> "Correr-Zhou/Awesome-Single-Positive-Multi-Label-Learning"
"Championchess/Amodal-Completion-in-the-Wild" -> "k8xu/amodal"
"Championchess/Amodal-Completion-in-the-Wild" -> "cvlab-columbia/pix2gestalt"
"Championchess/Amodal-Completion-in-the-Wild" -> "saraao/amodal"
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/PaConvert"
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/ERNIE-SDK"
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/PaddleScience" ["e"=1]
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/PaddleFleetX"
"PaddlePaddle/PaddleMIX" -> "PaddleCV-SIG/PaddleLabel" ["e"=1]
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/PaddleYOLO"
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/PASSL"
"PaddlePaddle/PaddleMIX" -> "360AILAB-NLP/360LayoutAnalysis" ["e"=1]
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/PaddleMIX" -> "AlibabaResearch/AdvancedLiterateMachinery" ["e"=1]
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/PaddleMIX" -> "PaddlePaddle/PaddleVideo" ["e"=1]
"yjh0410/RT-ODLab" -> "yjh0410/PyTorch_YOLOv1"
"yjh0410/RT-ODLab" -> "yjh0410/FreeYOLO"
"yjh0410/RT-ODLab" -> "yjh0410/PyTorch_YOLO-Family"
"yjh0410/RT-ODLab" -> "yjh0410/YOLO-Tutorial-v2"
"yjh0410/RT-ODLab" -> "yjh0410/yolov2-yolov3_PyTorch"
"yjh0410/RT-ODLab" -> "yjh0410/ODLab"
"xxgege/GAM" -> "nblt/RWP"
"xxgege/GAM" -> "windxrz/DCFR"
"tml-epfl/sam-low-rank-features" -> "mueller-mp/SAM-ON"
"Gank0078/ACR" -> "LeeHyuck/CDMAD"
"shijxcs/LIFT" -> "DongSky/LPT"
"shijxcs/LIFT" -> "dialogueeeeee/LTGC"
"shijxcs/LIFT" -> "Gank0078/FineSSL"
"shijxcs/LIFT" -> "Gank0078/ACR"
"shijxcs/LIFT" -> "ChangyaoTian/VL-LTR"
"pytorch/extension-ffi" -> "sniklaus/pytorch-extension"
"pytorch/extension-ffi" -> "chrischoy/pytorch-custom-cuda-tutorial"
"pytorch/extension-ffi" -> "facebookarchive/torch-rnnlib" ["e"=1]
"KainingYing/CTVIS" -> "zhang-tao-whu/DVIS"
"KainingYing/CTVIS" -> "sukjunhwang/VITA"
"KainingYing/CTVIS" -> "miranheo/GenVIS"
"KainingYing/CTVIS" -> "QingZhong1996/Awesome-Video-Instance-Segmentation-Papers"
"KainingYing/CTVIS" -> "haochenheheda/LVVIS"
"justinkay/aldi" -> "JeremyZhao1998/MRT-release"
"jasonseu/SALGL" -> "jasonseu/TSFormer"
"meizhoubao/pyimagesearch" -> "SIlvaMFPedro/pyimagesearch"
"meizhoubao/pyimagesearch" -> "dloperab/PyImageSearch-CV-DL-CrashCourse"
"commaai/chffr-api" -> "commaai/web"
"commaai/chffr-api" -> "commaai/commacoloring"
"commaai/chffr-api" -> "commaai/CVCalendar"
"Shengcao-Cao/CMT" -> "hikvision-research/ProbabilisticTeacher"
"Shengcao-Cao/CMT" -> "kinredon/Harmonious-Teacher"
"Shengcao-Cao/CMT" -> "h751410234/DATR"
"Shengcao-Cao/CMT" -> "weii41392/AQT"
"Shengcao-Cao/CMT" -> "JeremyZhao1998/MRT-release"
"Shengcao-Cao/CMT" -> "Vibashan/online-da"
"ArcherCYM/CEEMDAN-LSTM" -> "GivyBoy/CEEMDAN-and-LSTM-CNN-CBAM"
"ArcherCYM/CEEMDAN-LSTM" -> "FateMurphy/CEEMDAN-VMD-GRU"
"ArcherCYM/CEEMDAN-LSTM" -> "FateMurphy/CEEMDAN_LSTM"
"hitachi-rd-cv/MILA" -> "ChuQiaosong/AASFOD"
"ynu-yangpeng/GLMC" -> "ShadeAlsha/LTR-weight-balancing"
"ynu-yangpeng/GLMC" -> "Keke921/GCLLoss"
"ynu-yangpeng/GLMC" -> "Bazinga699/NCL"
"ynu-yangpeng/GLMC" -> "FlamieZhu/Balanced-Contrastive-Learning"
"sjy0727/CLIP-Text-Image-Retrieval" -> "sugarandgugu/Text2Image-Retrieval"
"sjy0727/CLIP-Text-Image-Retrieval" -> "soup-L/Multimodal_retrieval"
"h751410234/RemoteSensingTeacher" -> "h751410234/DATR"
"haochenheheda/LVVIS" -> "cilinyan/VISA" ["e"=1]
"haochenheheda/LVVIS" -> "Ali2500/BURST-benchmark"
"haochenheheda/LVVIS" -> "KainingYing/CTVIS"
"haochenheheda/LVVIS" -> "zwq456/CLIP-VIS" ["e"=1]
"haochenheheda/LVVIS" -> "VIPSeg-Dataset/VIPSeg-Dataset"
"haochenheheda/LVVIS" -> "zhang-tao-whu/DVIS"
"haochenheheda/LVVIS" -> "sukjunhwang/VITA"
"haochenheheda/LVVIS" -> "heshuting555/DsHmp" ["e"=1]
"haochenheheda/LVVIS" -> "miranheo/GenVIS"
"k8sp/sextant" -> "baifendian/Sirius"
"k8sp/sextant" -> "k8sp/tutorials"
"JCZ404/Semi-DETR" -> "ligang-cs/PseCo"
"facebookresearch/ego4d-goalstep" -> "facebookresearch/htstep"
"facebookresearch/ego4d-goalstep" -> "jbistanbul/MiniROAD"
"sanshuishou/-VMD-Attention-LSTM-" -> "FateMurphy/CEEMDAN-VMD-GRU"
"embrace000/shapelet_transformer" -> "knowonething/Traffic-Simulation-Tool"
"embrace000/shapelet_transformer" -> "WenqiZhang-HIT/MGDN-project"
"namkoong-lab/whyshift" -> "namkoong-lab/dro"
"namkoong-lab/whyshift" -> "windxrz/DCFR"
"JeremyZhao1998/MRT-release" -> "mecarill/classawareteacher"
"JeremyZhao1998/MRT-release" -> "Shengcao-Cao/CMT"
"JeremyZhao1998/MRT-release" -> "weii41392/AQT"
"nickgeoca/cwt-tensorflow" -> "UiO-CS/tf-wavelets"
"snu-mllab/Achievement-Distillation" -> "snu-mllab/Neural-Relation-Graph"
"snu-mllab/Achievement-Distillation" -> "snu-mllab/DPPO"
"snu-mllab/Achievement-Distillation" -> "snu-mllab/Efficient-CNN-Depth-Compression"
"hjaurum/DHash" -> "benhoyt/dhash"
"snu-mllab/Efficient-CNN-Depth-Compression" -> "snu-mllab/Neural-Relation-Graph"
"jbistanbul/MiniROAD" -> "sqiangcao99/E2E-LOAD"
"jbistanbul/MiniROAD" -> "KimHanjung/VISAGE"
"jbistanbul/MiniROAD" -> "musicalOffering/ActionSwitch-release"
"fceschmidt/bullshit-arch" -> "irgendwr/go-stine"
"felsenhower/stine_calendar_bot" -> "irgendwr/go-stine"
"felsenhower/stine_calendar_bot" -> "fredericobormann/MensaViewer"
"h-yu16/Sparse_Variable_Independence" -> "windxrz/DCFR"
"MarlonBecker/MSAM" -> "nblt/RWP"
"JianxGao/C2F-Seg" -> "amazon-science/c2f-seg"
"amitguptagwl/Java-Rule-Book" -> "amitguptagwl/fast-lorem-ipsum"
"amitguptagwl/Java-Rule-Book" -> "NaturalIntelligence/Grapes"
"amitguptagwl/Java-Rule-Book" -> "NaturalIntelligence/fastify-xml-body-parser"
"OpenGVLab/MovieMind" -> "Richard-61/FineAction"
"cjf8899/CDRL-SA" -> "J911/J911"
"ray-project/ray" -> "jax-ml/jax"
"ray-project/ray" -> "vllm-project/vllm" ["e"=1]
"ray-project/ray" -> "deepspeedai/DeepSpeed" ["e"=1]
"ray-project/ray" -> "mlflow/mlflow" ["e"=1]
"ray-project/ray" -> "Lightning-AI/pytorch-lightning"
"ray-project/ray" -> "horovod/horovod" ["e"=1]
"ray-project/ray" -> "openai/baselines" ["e"=1]
"ray-project/ray" -> "facebookresearch/faiss" ["e"=1]
"ray-project/ray" -> "openai/gym" ["e"=1]
"ray-project/ray" -> "dask/dask" ["e"=1]
"ray-project/ray" -> "pytorch/pytorch" ["e"=1]
"ray-project/ray" -> "DLR-RM/stable-baselines3" ["e"=1]
"ray-project/ray" -> "modin-project/modin" ["e"=1]
"ray-project/ray" -> "shap/shap" ["e"=1]
"ray-project/ray" -> "streamlit/streamlit" ["e"=1]
"anderskm/gputil" -> "wookayin/gpustat"
"anderskm/gputil" -> "sksq96/pytorch-summary"
"anderskm/gputil" -> "Stonesjtu/pytorch_memlab"
"anderskm/gputil" -> "Oldpan/Pytorch-Memory-Utils"
"anderskm/gputil" -> "Santosh-Gupta/SpeedTorch"
"anderskm/gputil" -> "uber/petastorm" ["e"=1]
"anderskm/gputil" -> "BloodAxe/pytorch-toolbelt"
"pytorch/vision" -> "pytorch/examples"
"pytorch/vision" -> "huggingface/pytorch-image-models"
"pytorch/vision" -> "open-mmlab/mmdetection"
"pytorch/vision" -> "Cadene/pretrained-models.pytorch"
"pytorch/vision" -> "facebookresearch/detectron2"
"pytorch/vision" -> "jwyang/faster-rcnn.pytorch"
"pytorch/vision" -> "facebookresearch/maskrcnn-benchmark"
"pytorch/vision" -> "pytorch/pytorch" ["e"=1]
"pytorch/vision" -> "microsoft/Swin-Transformer"
"pytorch/vision" -> "facebookresearch/detr"
"pytorch/vision" -> "lucidrains/vit-pytorch"
"pytorch/vision" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"pytorch/vision" -> "albumentations-team/albumentations"
"pytorch/vision" -> "jacobgil/pytorch-grad-cam"
"pytorch/vision" -> "lukemelas/EfficientNet-PyTorch"
"quic/ai-hub-models" -> "quic/ai-hub-apps"
"quic/ai-hub-models" -> "quic/qidk"
"quic/ai-hub-models" -> "quic/aimet-model-zoo" ["e"=1]
"quic/ai-hub-models" -> "quic/aimet" ["e"=1]
"quic/ai-hub-models" -> "google-ai-edge/ai-edge-torch"
"quic/ai-hub-models" -> "UbiquitousLearning/mllm" ["e"=1]
"quic/ai-hub-models" -> "XiaoMi/StableDiffusionOnDevice"
"quic/ai-hub-models" -> "argmaxinc/WhisperKitAndroid"
"quic/ai-hub-models" -> "Achazwl/mlc"
"quic/ai-hub-models" -> "pytorch/executorch" ["e"=1]
"quic/ai-hub-models" -> "PINTO0309/onnx2tf"
"quic/ai-hub-models" -> "microsoft/onnxruntime-genai" ["e"=1]
"quic/ai-hub-models" -> "microsoft/onnxruntime-extensions" ["e"=1]
"quic/ai-hub-models" -> "microsoft/onnxruntime-inference-examples" ["e"=1]
"quic/ai-hub-models" -> "gesanqiu/SNPE_Tutorial"
"52CV/CVPR-2024-Papers" -> "52CV/ECCV-2024-Papers" ["e"=1]
"52CV/CVPR-2024-Papers" -> "52CV/CVPR-2023-Papers"
"52CV/CVPR-2024-Papers" -> "52CV/ICCV-2023-Papers"
"52CV/CVPR-2024-Papers" -> "amusi/ECCV2024-Papers-with-Code"
"52CV/CVPR-2024-Papers" -> "Yangzhangcst/Mamba-in-CV" ["e"=1]
"52CV/CVPR-2024-Papers" -> "yinizhilian/ICLR2025-Papers-with-Code" ["e"=1]
"52CV/CVPR-2024-Papers" -> "52CV/CV-Surveys"
"52CV/CVPR-2024-Papers" -> "amusi/CVPR2025-Papers-with-Code"
"52CV/CVPR-2024-Papers" -> "DmitryRyumin/CVPR-2023-24-Papers" ["e"=1]
"52CV/CVPR-2024-Papers" -> "amusi/ICCV2023-Papers-with-Code"
"52CV/CVPR-2024-Papers" -> "52CV/WACV-2024-Papers"
"52CV/CVPR-2024-Papers" -> "MzeroMiko/VMamba" ["e"=1]
"52CV/CVPR-2024-Papers" -> "Kobaayyy/Awesome-CVPR2025-CVPR2024-CVPR2021-CVPR2020-Low-Level-Vision" ["e"=1]
"52CV/CVPR-2024-Papers" -> "NVlabs/MambaVision" ["e"=1]
"52CV/CVPR-2024-Papers" -> "DmitryRyumin/ICCV-2023-Papers" ["e"=1]
"amazon-science/c2f-seg" -> "JianxGao/C2F-Seg"
"amazon-science/c2f-seg" -> "UARK-AICV/AISFormer"
"apache/tvm" -> "triton-lang/triton" ["e"=1]
"apache/tvm" -> "BBuf/tvm_mlir_learn" ["e"=1]
"apache/tvm" -> "halide/Halide" ["e"=1]
"apache/tvm" -> "NVIDIA/TensorRT"
"apache/tvm" -> "Tencent/ncnn"
"apache/tvm" -> "alibaba/MNN"
"apache/tvm" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"apache/tvm" -> "NVIDIA/cutlass" ["e"=1]
"apache/tvm" -> "onnx/onnx"
"apache/tvm" -> "NVIDIA/FasterTransformer" ["e"=1]
"apache/tvm" -> "iree-org/iree" ["e"=1]
"apache/tvm" -> "horovod/horovod" ["e"=1]
"apache/tvm" -> "pytorch/glow" ["e"=1]
"apache/tvm" -> "apache/mxnet" ["e"=1]
"apache/tvm" -> "uxlfoundation/oneDNN" ["e"=1]
"kuangliu/pytorch-cifar" -> "weiaicunzai/pytorch-cifar100"
"kuangliu/pytorch-cifar" -> "Cadene/pretrained-models.pytorch"
"kuangliu/pytorch-cifar" -> "akamaster/pytorch_resnet_cifar10"
"kuangliu/pytorch-cifar" -> "bearpaw/pytorch-classification"
"kuangliu/pytorch-cifar" -> "aaron-xichen/pytorch-playground"
"kuangliu/pytorch-cifar" -> "pytorch/examples"
"kuangliu/pytorch-cifar" -> "lanpa/tensorboardX"
"kuangliu/pytorch-cifar" -> "pytorch/vision"
"kuangliu/pytorch-cifar" -> "lukemelas/EfficientNet-PyTorch"
"kuangliu/pytorch-cifar" -> "jwyang/faster-rcnn.pytorch"
"kuangliu/pytorch-cifar" -> "utkuozbulak/pytorch-cnn-visualizations"
"kuangliu/pytorch-cifar" -> "huggingface/pytorch-image-models"
"kuangliu/pytorch-cifar" -> "amdegroot/ssd.pytorch"
"kuangliu/pytorch-cifar" -> "IntelLabs/distiller" ["e"=1]
"kuangliu/pytorch-cifar" -> "Lyken17/pytorch-OpCounter"
"AlexeyAB/darknet" -> "pjreddie/darknet"
"AlexeyAB/darknet" -> "ultralytics/yolov3"
"AlexeyAB/darknet" -> "Tianxiaomo/pytorch-YOLOv4"
"AlexeyAB/darknet" -> "HumanSignal/labelImg"
"AlexeyAB/darknet" -> "open-mmlab/mmdetection"
"AlexeyAB/darknet" -> "ultralytics/yolov5"
"AlexeyAB/darknet" -> "qqwweee/keras-yolo3"
"AlexeyAB/darknet" -> "eriklindernoren/PyTorch-YOLOv3"
"AlexeyAB/darknet" -> "facebookresearch/detectron2"
"AlexeyAB/darknet" -> "Megvii-BaseDetection/YOLOX"
"AlexeyAB/darknet" -> "hoya012/deep_learning_object_detection"
"AlexeyAB/darknet" -> "xingyizhou/CenterNet"
"AlexeyAB/darknet" -> "WongKinYiu/yolov7"
"AlexeyAB/darknet" -> "wang-xinyu/tensorrtx"
"AlexeyAB/darknet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"microsoft/VoTT" -> "cvat-ai/cvat"
"microsoft/VoTT" -> "wkentaro/labelme"
"microsoft/VoTT" -> "Labelbox/labelbox-custom-labeling-apps"
"microsoft/VoTT" -> "HumanSignal/labelImg"
"microsoft/VoTT" -> "zzh8829/yolov3-tf2" ["e"=1]
"microsoft/VoTT" -> "AlexeyAB/Yolo_mark" ["e"=1]
"microsoft/VoTT" -> "SkalskiP/make-sense"
"microsoft/VoTT" -> "HumanSignal/awesome-data-labeling"
"microsoft/VoTT" -> "jsbroks/coco-annotator"
"microsoft/VoTT" -> "albumentations-team/albumentations"
"microsoft/VoTT" -> "thtrieu/darkflow" ["e"=1]
"microsoft/VoTT" -> "aleju/imgaug"
"microsoft/VoTT" -> "HumanSignal/label-studio"
"microsoft/VoTT" -> "abewley/sort" ["e"=1]
"microsoft/VoTT" -> "qqwweee/keras-yolo3"
"NaturalIntelligence/Stubmatic" -> "node-muneem/anumargak"
"NaturalIntelligence/Stubmatic" -> "NaturalIntelligence/Grapes"
"NaturalIntelligence/Stubmatic" -> "node-muneem/muneem"
"NaturalIntelligence/Stubmatic" -> "NaturalIntelligence/nimnjs"
"NaturalIntelligence/Stubmatic" -> "NaturalIntelligence/nimn-spec"
"NaturalIntelligence/Stubmatic" -> "amitguptagwl/Java-Rule-Book"
"NaturalIntelligence/Stubmatic" -> "funcards/match-it"
"NaturalIntelligence/Stubmatic" -> "socialat/team"
"NaturalIntelligence/Stubmatic" -> "NaturalIntelligence/cytorus"
"NaturalIntelligence/Stubmatic" -> "NaturalIntelligence/StubbyDB"
"ryfeus/lambda-packs" -> "Miserlou/lambda-packages" ["e"=1]
"ryfeus/lambda-packs" -> "dmitrijsc/practical-rl"
"ryfeus/lambda-packs" -> "ryfeus/stepfunctions2processing"
"ryfeus/lambda-packs" -> "oavdeev/getbox"
"ryfeus/lambda-packs" -> "kiselev1189/EEGClassificationMCNN"
"ryfeus/lambda-packs" -> "mthenw/awesome-layers" ["e"=1]
"ryfeus/lambda-packs" -> "emakhov/data-quality-framework"
"ryfeus/lambda-packs" -> "ex4sperans/maggot"
"ryfeus/lambda-packs" -> "ryansb/sklearn-build-lambda" ["e"=1]
"ryfeus/lambda-packs" -> "indeedeng/vowpal-wabbit-java"
"ryfeus/lambda-packs" -> "Dumbris/trunklucator"
"ryfeus/lambda-packs" -> "dartrevan/ChemTextMining"
"ryfeus/lambda-packs" -> "smithclay/lambdium" ["e"=1]
"ryfeus/lambda-packs" -> "alexeygrigorev/libftrl-python"
"ryfeus/lambda-packs" -> "ternaus/TernausNetV2"
"rbaron/omr" -> "iansan5653/open-mcr"
"rbaron/omr" -> "jansenfelipe/omr"
"rbaron/omr" -> "Udayraj123/OMRChecker"
"rbaron/omr" -> "MohawkMEDIC/omrmarkengine"
"rbaron/omr" -> "GregoryCMiller/omr"
"rbaron/omr" -> "tsauvine/omr"
"rbaron/omr" -> "EuracBiomedicalResearch/RescueOMR"
"rbaron/omr" -> "Udayraj123/AndroidOMRHelper"
"Achazwl/mlc" -> "tc-mb/llama.cpp"
"Achazwl/mlc" -> "quic/ai-hub-models"
"Achazwl/mlc" -> "OpenBMB/MiniCPM" ["e"=1]
"Achazwl/mlc" -> "XiaoMi/StableDiffusionOnDevice"
"Achazwl/mlc" -> "TroyTzou/mlc-llm-android"
"Achazwl/mlc" -> "UbiquitousLearning/mllm" ["e"=1]
"Achazwl/mlc" -> "ZTMIDGO/Android-Stable-diffusion-ONNX" ["e"=1]
"Achazwl/mlc" -> "ShiftHackZ/Stable-Diffusion-Android" ["e"=1]
"ZPDu/DAI-Net" -> "cuiziteng/ICCV_MAET"
"ZPDu/DAI-Net" -> "zhangyin1996/ISP-Teacher"
"PaddlePaddle/book" -> "PaddlePaddle/models"
"PaddlePaddle/book" -> "PaddlePaddle/Paddle"
"PaddlePaddle/book" -> "PaddlePaddle/ERNIE" ["e"=1]
"PaddlePaddle/book" -> "alibaba/x-deeplearning" ["e"=1]
"PaddlePaddle/book" -> "Angel-ML/angel" ["e"=1]
"PaddlePaddle/book" -> "baidu/Familia" ["e"=1]
"PaddlePaddle/book" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/book" -> "PaddlePaddle/VisualDL"
"PaddlePaddle/book" -> "yeyupiaoling/LearnPaddle" ["e"=1]
"PaddlePaddle/book" -> "koth/kcws" ["e"=1]
"PaddlePaddle/book" -> "ycjuan/libffm" ["e"=1]
"PaddlePaddle/book" -> "wzhe06/Ad-papers" ["e"=1]
"PaddlePaddle/book" -> "ycjuan/kaggle-2014-criteo" ["e"=1]
"PaddlePaddle/book" -> "PaddlePaddle/PGL"
"PaddlePaddle/book" -> "baidu/bigflow" ["e"=1]
"KimHanjung/VISAGE" -> "miranheo/GenVIS"
"KimHanjung/VISAGE" -> "kingsj0405/DIFE"
"KimHanjung/VISAGE" -> "jbistanbul/MiniROAD"
"KimHanjung/VISAGE" -> "musicalOffering/ActionSwitch-release"
"KimHanjung/VISAGE" -> "sukjunhwang/VITA"
"KimHanjung/VISAGE" -> "hongsunjang/pipe-bd" ["e"=1]
"k8xu/amodal" -> "Championchess/Amodal-Completion-in-the-Wild"
"k8xu/amodal" -> "cvlab-columbia/pix2gestalt"
"quic/ai-hub-apps" -> "quic/ai-hub-models"
"quic/ai-hub-apps" -> "argmaxinc/WhisperKitAndroid"
"quic/ai-hub-apps" -> "quic/qidk"
"quic/ai-hub-apps" -> "XiaoMi/StableDiffusionOnDevice"
"baidubce/bce-qianfan-sdk" -> "baidubce/app-builder"
"baidubce/bce-qianfan-sdk" -> "baidubce/qianfan-models-cookbook"
"baidubce/bce-qianfan-sdk" -> "PaddlePaddle/ERNIE-SDK"
"baidubce/bce-qianfan-sdk" -> "ninehills/langchain-wenxin"
"Refefer/fastxml" -> "xiaohan2012/sleec_python"
"Refefer/fastxml" -> "xmc-aalto/bonsai"
"Refefer/fastxml" -> "OctoberChang/X-Transformer"
"pytorch/tnt" -> "pytorch/ignite"
"pytorch/tnt" -> "nitrain/nitrain"
"pytorch/tnt" -> "facebookarchive/torchnet" ["e"=1]
"pytorch/tnt" -> "lanpa/tensorboardX"
"pytorch/tnt" -> "gram-ai/capsule-networks" ["e"=1]
"pytorch/tnt" -> "fossasia/visdom"
"pytorch/tnt" -> "torrvision/crayon"
"pytorch/tnt" -> "pytorch/text" ["e"=1]
"pytorch/tnt" -> "sksq96/pytorch-summary"
"pytorch/tnt" -> "longcw/faster_rcnn_pytorch"
"pytorch/tnt" -> "szagoruyko/functional-zoo"
"pytorch/tnt" -> "TeamHG-Memex/tensorboard_logger"
"pytorch/tnt" -> "gpleiss/efficient_densenet_pytorch"
"pytorch/tnt" -> "probtorch/probtorch" ["e"=1]
"pytorch/tnt" -> "skorch-dev/skorch" ["e"=1]
"oreillymedia/Learning-OpenCV-3_examples" -> "gzr2017/ImageProcessing100Wen"
"oreillymedia/Learning-OpenCV-3_examples" -> "QianMo/OpenCV3-Intro-Book-Src"
"oreillymedia/Learning-OpenCV-3_examples" -> "CodecWang/opencv-python-tutorial"
"oreillymedia/Learning-OpenCV-3_examples" -> "spmallick/learnopencv"
"oreillymedia/Learning-OpenCV-3_examples" -> "fendouai/OpenCVTutorials"
"oreillymedia/Learning-OpenCV-3_examples" -> "JimmyHHua/opencv_tutorials"
"oreillymedia/Learning-OpenCV-3_examples" -> "opencv/opencv_contrib" ["e"=1]
"oreillymedia/Learning-OpenCV-3_examples" -> "gaoxiang12/slambook" ["e"=1]
"oreillymedia/Learning-OpenCV-3_examples" -> "mbeyeler/opencv-machine-learning"
"oreillymedia/Learning-OpenCV-3_examples" -> "PacktPublishing/Mastering-OpenCV-4-Third-Edition"
"oreillymedia/Learning-OpenCV-3_examples" -> "makelove/OpenCV-Python-Tutorial"
"oreillymedia/Learning-OpenCV-3_examples" -> "MasteringOpenCV/code" ["e"=1]
"oreillymedia/Learning-OpenCV-3_examples" -> "amusi/awesome-object-detection"
"oreillymedia/Learning-OpenCV-3_examples" -> "Ewenwan/MVision" ["e"=1]
"oreillymedia/Learning-OpenCV-3_examples" -> "HKUST-Aerial-Robotics/VINS-Mono" ["e"=1]
"hpc203/Chinese-CLIP-opencv-onnxrun" -> "hpc203/image_captioning-opencv-onnxrun"
"hpc203/Chinese-CLIP-opencv-onnxrun" -> "sugarandgugu/Text2Image-Retrieval"
"TeamHG-Memex/tensorboard_logger" -> "torrvision/crayon"
"TeamHG-Memex/tensorboard_logger" -> "dmlc/tensorboard" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "JianGoForIt/YellowFin_Pytorch"
"TeamHG-Memex/tensorboard_logger" -> "szagoruyko/functional-zoo"
"TeamHG-Memex/tensorboard_logger" -> "DeepMark/deepmark" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "chrisranderson/beholder"
"TeamHG-Memex/tensorboard_logger" -> "pytorch/tnt"
"TeamHG-Memex/tensorboard_logger" -> "lanpa/tensorboardX"
"TeamHG-Memex/tensorboard_logger" -> "martinarjovsky/WassersteinGAN" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "twitter-archive/torch-autograd" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "szagoruyko/pyinn"
"TeamHG-Memex/tensorboard_logger" -> "buriburisuri/sugartensor" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "Kaixhin/nninit" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "rewonc/pastalog" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "Element-Research/rnn" ["e"=1]
"zhang-tao-whu/DVIS_Plus" -> "zhang-tao-whu/DVIS"
"zhang-tao-whu/DVIS_Plus" -> "Seung-Hun-Lee/CAVIS"
"zhang-tao-whu/DVIS_Plus" -> "MinghanLi/UniVS"
"zhang-tao-whu/DVIS_Plus" -> "KainingYing/CTVIS"
"zhang-tao-whu/DVIS_Plus" -> "haochenheheda/LVVIS"
"zhang-tao-whu/DVIS_Plus" -> "lxtGH/Tube-Link"
"zhang-tao-whu/DVIS_Plus" -> "sukjunhwang/VITA"
"torrvision/crayon" -> "TeamHG-Memex/tensorboard_logger"
"torrvision/crayon" -> "clcarwin/convert_torch_to_pytorch"
"torrvision/crayon" -> "szagoruyko/functional-zoo"
"torrvision/crayon" -> "szagoruyko/diracnets"
"torrvision/crayon" -> "longcw/faster_rcnn_pytorch"
"torrvision/crayon" -> "felixgwu/mask_rcnn_pytorch"
"torrvision/crayon" -> "zdevito/ATen"
"torrvision/crayon" -> "fmassa/optimize-net" ["e"=1]
"torrvision/crayon" -> "JianGoForIt/YellowFin_Pytorch"
"torrvision/crayon" -> "ignacio-rocco/detectorch"
"torrvision/crayon" -> "kimhc6028/relational-networks" ["e"=1]
"torrvision/crayon" -> "Kaixhin/nninit" ["e"=1]
"torrvision/crayon" -> "dmlc/tensorboard" ["e"=1]
"torrvision/crayon" -> "tensorflow/fold" ["e"=1]
"torrvision/crayon" -> "szagoruyko/pyinn"
"szagoruyko/functional-zoo" -> "szagoruyko/attention-transfer" ["e"=1]
"szagoruyko/functional-zoo" -> "szagoruyko/diracnets"
"szagoruyko/functional-zoo" -> "nitrain/nitrain"
"szagoruyko/functional-zoo" -> "torrvision/crayon"
"szagoruyko/functional-zoo" -> "jacobgil/pytorch-explain-black-box" ["e"=1]
"szagoruyko/functional-zoo" -> "cemoody/topicsne" ["e"=1]
"szagoruyko/functional-zoo" -> "ignacio-rocco/detectorch"
"szagoruyko/functional-zoo" -> "carpedm20/BEGAN-pytorch" ["e"=1]
"szagoruyko/functional-zoo" -> "felixgwu/mask_rcnn_pytorch"
"szagoruyko/functional-zoo" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"szagoruyko/functional-zoo" -> "vinhkhuc/PyTorch-Mini-Tutorials"
"szagoruyko/functional-zoo" -> "fxia22/stn.pytorch" ["e"=1]
"szagoruyko/functional-zoo" -> "edouardoyallon/pyscatwave"
"szagoruyko/functional-zoo" -> "TeamHG-Memex/tensorboard_logger"
"szagoruyko/functional-zoo" -> "yu-changqian/pytorch-segmentation" ["e"=1]
"PacktPublishing/OpenCV-Computer-Vision-Projects-with-Python" -> "anuragreddygv323/computer-vision-projects"
"udibr/noisy_labels" -> "GuokaiLiu/Noisy-Labels-Problem-Collection"
"udibr/noisy_labels" -> "xingjunm/dimensionality-driven-learning"
"udibr/noisy_labels" -> "bhanML/Masking"
"udibr/noisy_labels" -> "Cysu/noisy_label"
"udibr/noisy_labels" -> "GarrettLee/label_noise_correction"
"udibr/noisy_labels" -> "pokaxpoka/RoGNoisyLabel"
"rdcolema/tensorflow-image-classification" -> "Fdevmsy/Image_Classification_with_5_methods"
"rdcolema/tensorflow-image-classification" -> "suraj-deshmukh/Keras-Multi-Label-Image-Classification"
"rdcolema/tensorflow-image-classification" -> "jibikbam/CNN-3D-images-Tensorflow" ["e"=1]
"rdcolema/tensorflow-image-classification" -> "gsurma/image_classifier"
"rdcolema/tensorflow-image-classification" -> "wolfib/image-classification-CIFAR10-tf"
"rdcolema/tensorflow-image-classification" -> "legolas123/cv-tricks.com"
"desicochrane/data-science-masters" -> "siAyush/Data-Structure-and-Algorithms-Study-Plan"
"desicochrane/data-science-masters" -> "clarkyu2016/Become-a-Data-Analyst"
"desicochrane/data-science-masters" -> "jodaz/speedstudy"
"desicochrane/data-science-masters" -> "PepperGo/WebTechnologies"
"desicochrane/data-science-masters" -> "mbaykenar/digital-logic-design"
"baidubce/app-builder" -> "baidubce/bce-qianfan-sdk"
"baidubce/app-builder" -> "baidubce/qianfan-models-cookbook"
"baidubce/app-builder" -> "PaddlePaddle/ERNIE-SDK"
"baidubce/app-builder" -> "PaddlePaddle/PaddleFleetX"
"baidubce/app-builder" -> "fsgo/smart-go-dl"
"baidubce/app-builder" -> "ecomfe/reskript" ["e"=1]
"taspinar/siml" -> "alsauve/scaleogram"
"taspinar/siml" -> "regeirk/pycwt"
"taspinar/siml" -> "taspinar/sidl"
"taspinar/siml" -> "PyWavelets/pywt"
"taspinar/siml" -> "OverLordGoldDragon/ssqueezepy"
"taspinar/siml" -> "mnf2014/article_fft_wavelet_ecg"
"taspinar/siml" -> "dmbee/seglearn" ["e"=1]
"taspinar/siml" -> "aaren/wavelets"
"taspinar/siml" -> "taspinar/numerical-mooc"
"taspinar/siml" -> "yakouyang/Multilevel_Wavelet_Decomposition_Network_Pytorch" ["e"=1]
"taspinar/siml" -> "kristpapadopoulos/seriesnet" ["e"=1]
"clarkyu2016/Become-a-Data-Analyst" -> "siAyush/Data-Structure-and-Algorithms-Study-Plan"
"clarkyu2016/Become-a-Data-Analyst" -> "PepperGo/WebTechnologies"
"MinghanLi/UniVS" -> "zhang-tao-whu/DVIS_Plus"
"MinghanLi/UniVS" -> "strongwolf/OpenSD" ["e"=1]
"MinghanLi/UniVS" -> "zhang-tao-whu/DVIS"
"yeyun111/dlcv_for_beginners" -> "willard-yuan/pcv-book-code"
"yeyun111/dlcv_for_beginners" -> "amusi/daily-paper-computer-vision"
"yeyun111/dlcv_for_beginners" -> "shicai/MobileNet-Caffe" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "soeaver/caffe-model" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "chenriwei/DeepFace" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "weiliu89/caffe" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "vanhuyz/CycleGAN-TensorFlow" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "devnag/pytorch-generative-adversarial-networks" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "yahoo/open_nsfw" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "meetps/pytorch-semseg" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "shekkizh/FCN.tensorflow" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "TuSimple/TuSimple-DUC" ["e"=1]
"yeyun111/dlcv_for_beginners" -> "oreillymedia/Learning-OpenCV-3_examples"
"jhkim89/PyramidNet" -> "dyhan0920/PyramidNet-PyTorch"
"jhkim89/PyramidNet" -> "jhkim89/PyramidNet-caffe"
"google-ai-edge/ai-edge-torch" -> "google-ai-edge/LiteRT" ["e"=1]
"google-ai-edge/ai-edge-torch" -> "PINTO0309/onnx2tf"
"google-ai-edge/ai-edge-torch" -> "AlexanderLutsenko/nobuco"
"google-ai-edge/ai-edge-torch" -> "google-ai-edge/model-explorer" ["e"=1]
"google-ai-edge/ai-edge-torch" -> "pytorch/executorch" ["e"=1]
"google-ai-edge/ai-edge-torch" -> "alibaba/TinyNeuralNetwork"
"google-ai-edge/ai-edge-torch" -> "quic/ai-hub-models"
"google-ai-edge/ai-edge-torch" -> "MPolaris/onnx2tflite" ["e"=1]
"google-ai-edge/ai-edge-torch" -> "google-ai-edge/ai-edge-quantizer" ["e"=1]
"google-ai-edge/ai-edge-torch" -> "sithu31296/PyTorch-ONNX-TFLite"
"google-ai-edge/ai-edge-torch" -> "Samsung/ONE" ["e"=1]
"google-ai-edge/ai-edge-torch" -> "apple/ml-mobileclip" ["e"=1]
"google-ai-edge/ai-edge-torch" -> "mit-han-lab/tinyengine" ["e"=1]
"google-ai-edge/ai-edge-torch" -> "PINTO0309/openvino2tensorflow"
"google-ai-edge/ai-edge-torch" -> "UbiquitousLearning/mllm" ["e"=1]
"s-laine/tempens" -> "xinmei9322/SNTG"
"s-laine/tempens" -> "ferretj/temporal-ensembling"
"s-laine/tempens" -> "takerum/vat_tf"
"s-laine/tempens" -> "9310gaurav/virtual-adversarial-training"
"s-laine/tempens" -> "CuriousAI/mean-teacher"
"s-laine/tempens" -> "benathi/fastswa-semi-sup"
"s-laine/tempens" -> "tensorfreitas/Temporal-Ensembling-for-Semi-Supervised-Learning"
"s-laine/tempens" -> "takerum/vat"
"tc-mb/llama.cpp" -> "tc-mb/ollama"
"bit-bots/bitbots_vision" -> "ros-sports/rqt_image_overlay"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "weiaicunzai/pytorch-cifar100"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "weiaicunzai/awesome-image-classification"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "clovaai/CutMix-PyTorch"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "facebookresearch/pycls"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "facebookresearch/mixup-cifar10"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "DeepVoltaire/AutoAugment"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "tanglang96/DataLoaders_DALI"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "BIGBALLON/CIFAR-ZOO"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "hysts/pytorch_image_classification"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "implus/PytorchInsight" ["e"=1]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "SJTU-DL-lab/Bag_of_Tricks_CNN"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "bearpaw/pytorch-classification"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "vandit15/Class-balanced-loss-pytorch"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "666DZY666/micronet" ["e"=1]
"kaiwenzha/Rank-N-Contrast" -> "BorealisAI/ConR"
"zhongjingyu1/Partial-Multi-Label-Learning" -> "xiemk/awesome-weakly-supervised-multi-label-learning"
"zhongjingyu1/Partial-Multi-Label-Learning" -> "A11en0/Multi-View-Multi-Label-Model-Collections"
"tensorflow/embedding-projector-standalone" -> "tensorflow/tensorboard-plugin-example"
"namkoong-lab/dro" -> "namkoong-lab/whyshift"
"namkoong-lab/dro" -> "Prinway/Distributionally-Robust-Optimization-Notes"
"nblt/F-SAM" -> "nblt/RWP"
"kiselev1189/EEGClassificationMCNN" -> "oavdeev/getbox"
"kiselev1189/EEGClassificationMCNN" -> "dmitrijsc/practical-rl"
"kiselev1189/EEGClassificationMCNN" -> "emakhov/data-quality-framework"
"kiselev1189/EEGClassificationMCNN" -> "dartrevan/ChemTextMining"
"kiselev1189/EEGClassificationMCNN" -> "sherman/blobkeeper"
"kiselev1189/EEGClassificationMCNN" -> "indeedeng/vowpal-wabbit-java"
"kiselev1189/EEGClassificationMCNN" -> "DBusAI/TF_Eager"
"kiselev1189/EEGClassificationMCNN" -> "atrof/atrof.github.io"
"kiselev1189/EEGClassificationMCNN" -> "ArkadiyD/CythonXGB"
"kiselev1189/EEGClassificationMCNN" -> "fgvbrt/nips_rl"
"kiselev1189/EEGClassificationMCNN" -> "n01z3/kaggle_amazon_from_space"
"kiselev1189/EEGClassificationMCNN" -> "Dumbris/trunklucator"
"kiselev1189/EEGClassificationMCNN" -> "lext/deep_docker"
"snu-mllab/DPPO" -> "snu-mllab/Neural-Relation-Graph"
"snu-mllab/DPPO" -> "snu-mllab/Achievement-Distillation"
"snu-mllab/DPPO" -> "snu-mllab/Efficient-CNN-Depth-Compression"
"mihui/ml" -> "JsonChao/ML-Roadmap"
"mihui/ml" -> "gopala-kr/ai-learning-roadmap"
"machengcheng2016/CPE-LTSSL" -> "LeeHyuck/CDMAD"
"omimo/xRBM" -> "taneishi/CRBM"
"omimo/xRBM" -> "cjackie/CRBM"
"PhilJd/freiburg_groceries_dataset" -> "gulvarol/grocerydataset"
"xin-xinhanggao/efficient_quadtree" -> "jelinson/MVC"
"cvlab-columbia/pix2gestalt" -> "k8xu/amodal"
"cvlab-columbia/pix2gestalt" -> "Championchess/Amodal-Completion-in-the-Wild"
"cvlab-columbia/pix2gestalt" -> "amazon-science/c2f-seg"
"MadryLab/modelcomponents" -> "microsoft/unadversarial" ["e"=1]
"MadryLab/modelcomponents" -> "MadryLab/DsDm"
"suraj-deshmukh/Keras-Multi-Label-Image-Classification" -> "BartyzalRadek/Multi-label-Inception-net"
"suraj-deshmukh/Keras-Multi-Label-Image-Classification" -> "pangwong/pytorch-multi-label-classifier"
"suraj-deshmukh/Keras-Multi-Label-Image-Classification" -> "dhruvramani/C2AE-Multilabel-Classification"
"suraj-deshmukh/Keras-Multi-Label-Image-Classification" -> "hellowangqian/multi-label-image-classification"
"suraj-deshmukh/Keras-Multi-Label-Image-Classification" -> "rdcolema/tensorflow-image-classification"
"suraj-deshmukh/Keras-Multi-Label-Image-Classification" -> "may-/cnn-re-tf" ["e"=1]
"suraj-deshmukh/Keras-Multi-Label-Image-Classification" -> "isobar-us/multilabel-image-classification-tensorflow"
"MadryLab/DsDm" -> "lengstrom/tensorguard"
"argmaxinc/whisperkittools" -> "argmaxinc/WhisperKitAndroid"
"argmaxinc/whisperkittools" -> "smpanaro/more-ane-transformers" ["e"=1]
"argmaxinc/whisperkittools" -> "argmaxinc/SDBench"
"OpnTec/2023.opentechsummit.de" -> "fossasia/wp-rotatingtweets"
"OpnTec/2023.opentechsummit.de" -> "fossasia/eventyay-ticket-video"
"hwalsuklee/tensorflow-mnist-cnn" -> "zonghua94/mnist"
"J911/MISO-VFI" -> "J911/J911"
"HunterJ-Lin/WSOVOD" -> "swagger-coder/ASDA"
"PaddlePaddle/VisionTools" -> "PaddlePaddle/continuous_evaluation"
"PaddlePaddle/VisionTools" -> "PaddlePaddle/tape"
"PaddlePaddle/VisionTools" -> "PaddlePaddle/Paddle-bot"
"tdwg/bdq" -> "tdwg/dwc-qa"
"fossasia/wp-rotatingtweets" -> "OpnTec/2023.opentechsummit.de"
"fossasia/wp-rotatingtweets" -> "fossasia/eventyay-ticket-video"
"fossasia/wp-rotatingtweets" -> "fossasia/eventyay-ticket-pages"
"fossasia/wp-rotatingtweets" -> "fossasia/eventyay-talk-video"
"Lichtso/CCWT" -> "grz0zrg/ccwt.js"
"EvgenyKashin/CommentsAnalysis" -> "atrof/atrof.github.io"
"EvgenyKashin/CommentsAnalysis" -> "emakhov/data-quality-framework"
"EvgenyKashin/CommentsAnalysis" -> "sherman/blobkeeper"
"EvgenyKashin/CommentsAnalysis" -> "lext/deep_docker"
"EvgenyKashin/CommentsAnalysis" -> "n01z3/kaggle_amazon_from_space"
"modons/LMR" -> "Yefee/xcesm"
"modons/LMR" -> "fzhu2e/cfr"
"h751410234/DATR" -> "h751410234/RemoteSensingTeacher"
"h751410234/DATR" -> "Shengcao-Cao/CMT"
"Justherozen/FreeAL" -> "Justherozen/ProMix"
"Wakeupbuddy/amodalAPI" -> "waiyulam/ORCNN"
"Wakeupbuddy/amodalAPI" -> "qqlu/Amodal-Instance-Segmentation-through-KINS-Dataset"
"snu-mllab/Neural-Relation-Graph" -> "snu-mllab/Achievement-Distillation"
"snu-mllab/Neural-Relation-Graph" -> "snu-mllab/Efficient-CNN-Depth-Compression"
"snu-mllab/Neural-Relation-Graph" -> "snu-mllab/DPPO"
"hpc203/gaze-estimation-opencv-dnn" -> "hpc203/image_captioning-opencv-onnxrun"
"Cadene/pretrained-models.pytorch" -> "lukemelas/EfficientNet-PyTorch"
"Cadene/pretrained-models.pytorch" -> "facebookresearch/maskrcnn-benchmark"
"Cadene/pretrained-models.pytorch" -> "jwyang/faster-rcnn.pytorch"
"Cadene/pretrained-models.pytorch" -> "aleju/imgaug"
"Cadene/pretrained-models.pytorch" -> "lanpa/tensorboardX"
"Cadene/pretrained-models.pytorch" -> "huggingface/pytorch-image-models"
"Cadene/pretrained-models.pytorch" -> "pytorch/vision"
"Cadene/pretrained-models.pytorch" -> "albumentations-team/albumentations"
"Cadene/pretrained-models.pytorch" -> "amdegroot/ssd.pytorch"
"Cadene/pretrained-models.pytorch" -> "utkuozbulak/pytorch-cnn-visualizations"
"Cadene/pretrained-models.pytorch" -> "open-mmlab/mmdetection"
"Cadene/pretrained-models.pytorch" -> "amusi/awesome-object-detection"
"Cadene/pretrained-models.pytorch" -> "mrgloom/awesome-semantic-segmentation"
"Cadene/pretrained-models.pytorch" -> "hoya012/deep_learning_object_detection"
"Cadene/pretrained-models.pytorch" -> "pytorch/examples"
"CMU-Perceptual-Computing-Lab/openpose" -> "MVIG-SJTU/AlphaPose" ["e"=1]
"CMU-Perceptual-Computing-Lab/openpose" -> "ZheC/Realtime_Multi-Person_Pose_Estimation" ["e"=1]
"CMU-Perceptual-Computing-Lab/openpose" -> "google-ai-edge/mediapipe"
"CMU-Perceptual-Computing-Lab/openpose" -> "facebookresearch/Detectron"
"CMU-Perceptual-Computing-Lab/openpose" -> "facebookresearch/DensePose" ["e"=1]
"CMU-Perceptual-Computing-Lab/openpose" -> "facebookresearch/detectron2"
"CMU-Perceptual-Computing-Lab/openpose" -> "ildoonet/tf-pose-estimation" ["e"=1]
"CMU-Perceptual-Computing-Lab/openpose" -> "tensorflow/models" ["e"=1]
"CMU-Perceptual-Computing-Lab/openpose" -> "AlexeyAB/darknet"
"CMU-Perceptual-Computing-Lab/openpose" -> "matterport/Mask_RCNN"
"CMU-Perceptual-Computing-Lab/openpose" -> "pjreddie/darknet"
"CMU-Perceptual-Computing-Lab/openpose" -> "open-mmlab/mmdetection"
"CMU-Perceptual-Computing-Lab/openpose" -> "spmallick/learnopencv"
"CMU-Perceptual-Computing-Lab/openpose" -> "ageitgey/face_recognition" ["e"=1]
"CMU-Perceptual-Computing-Lab/openpose" -> "opencv/opencv" ["e"=1]
"PaddlePaddle/models" -> "PaddlePaddle/ERNIE" ["e"=1]
"PaddlePaddle/models" -> "PaddlePaddle/Paddle"
"PaddlePaddle/models" -> "PaddlePaddle/book"
"PaddlePaddle/models" -> "ymcui/Chinese-BERT-wwm" ["e"=1]
"PaddlePaddle/models" -> "Embedding/Chinese-Word-Vectors" ["e"=1]
"PaddlePaddle/models" -> "brightmart/nlp_chinese_corpus" ["e"=1]
"PaddlePaddle/models" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/models" -> "brightmart/albert_zh" ["e"=1]
"PaddlePaddle/models" -> "baidu/AnyQ" ["e"=1]
"PaddlePaddle/models" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/models" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/models" -> "baidu/lac" ["e"=1]
"PaddlePaddle/models" -> "zihangdai/xlnet" ["e"=1]
"PaddlePaddle/models" -> "alibaba/x-deeplearning" ["e"=1]
"PaddlePaddle/models" -> "brightmart/text_classification" ["e"=1]
"ai-dawang/PlugNPlay-Modules" -> "AIFengheshu/Plug-play-modules" ["e"=1]
"ai-dawang/PlugNPlay-Modules" -> "z1069614715/objectdetection_script"
"ai-dawang/PlugNPlay-Modules" -> "BGU-CS-VIL/WTConv" ["e"=1]
"ai-dawang/PlugNPlay-Modules" -> "MzeroMiko/VMamba" ["e"=1]
"ai-dawang/PlugNPlay-Modules" -> "northBeggar/Plug-and-Play" ["e"=1]
"ai-dawang/PlugNPlay-Modules" -> "xmu-xiaoma666/External-Attention-pytorch"
"ai-dawang/PlugNPlay-Modules" -> "KawaiiAsh/deepLearning-modules-toolbox" ["e"=1]
"ai-dawang/PlugNPlay-Modules" -> "hustvl/Vim" ["e"=1]
"ai-dawang/PlugNPlay-Modules" -> "amusi/CVPR2025-Papers-with-Code"
"ai-dawang/PlugNPlay-Modules" -> "dair-ai/ml-visuals"
"ai-dawang/PlugNPlay-Modules" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"ai-dawang/PlugNPlay-Modules" -> "AccumulateMore/CV" ["e"=1]
"ai-dawang/PlugNPlay-Modules" -> "pprp/awesome-attention-mechanism-in-cv" ["e"=1]
"ai-dawang/PlugNPlay-Modules" -> "lyuwenyu/RT-DETR" ["e"=1]
"ai-dawang/PlugNPlay-Modules" -> "Human9000/nd-Mamba2-torch" ["e"=1]
"amdegroot/ssd.pytorch" -> "jwyang/faster-rcnn.pytorch"
"amdegroot/ssd.pytorch" -> "lufficc/SSD"
"amdegroot/ssd.pytorch" -> "eriklindernoren/PyTorch-YOLOv3"
"amdegroot/ssd.pytorch" -> "weiliu89/caffe" ["e"=1]
"amdegroot/ssd.pytorch" -> "balancap/SSD-Tensorflow" ["e"=1]
"amdegroot/ssd.pytorch" -> "longcw/yolo2-pytorch"
"amdegroot/ssd.pytorch" -> "xingyizhou/CenterNet"
"amdegroot/ssd.pytorch" -> "facebookresearch/maskrcnn-benchmark"
"amdegroot/ssd.pytorch" -> "tianzhi0549/FCOS"
"amdegroot/ssd.pytorch" -> "ayooshkathuria/pytorch-yolo-v3"
"amdegroot/ssd.pytorch" -> "princeton-vl/CornerNet"
"amdegroot/ssd.pytorch" -> "longcw/faster_rcnn_pytorch"
"amdegroot/ssd.pytorch" -> "GOATmessi8/RFBNet"
"amdegroot/ssd.pytorch" -> "qfgaohao/pytorch-ssd"
"amdegroot/ssd.pytorch" -> "Cadene/pretrained-models.pytorch"
"Shivanandroy/Study-Materials" -> "hsSam/PracticalPythonAndOpenCV_CaseStudies"
"weiaicunzai/pytorch-cifar100" -> "kuangliu/pytorch-cifar"
"weiaicunzai/pytorch-cifar100" -> "weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks"
"weiaicunzai/pytorch-cifar100" -> "akamaster/pytorch_resnet_cifar10"
"weiaicunzai/pytorch-cifar100" -> "weiaicunzai/awesome-image-classification"
"weiaicunzai/pytorch-cifar100" -> "bearpaw/pytorch-classification"
"weiaicunzai/pytorch-cifar100" -> "Cadene/pretrained-models.pytorch"
"weiaicunzai/pytorch-cifar100" -> "aaron-xichen/pytorch-playground"
"weiaicunzai/pytorch-cifar100" -> "pytorch/vision"
"weiaicunzai/pytorch-cifar100" -> "lukemelas/EfficientNet-PyTorch"
"weiaicunzai/pytorch-cifar100" -> "jacobgil/pytorch-grad-cam"
"weiaicunzai/pytorch-cifar100" -> "Lyken17/pytorch-OpCounter"
"weiaicunzai/pytorch-cifar100" -> "hysts/pytorch_image_classification"
"weiaicunzai/pytorch-cifar100" -> "huggingface/pytorch-image-models"
"weiaicunzai/pytorch-cifar100" -> "jwyang/faster-rcnn.pytorch"
"weiaicunzai/pytorch-cifar100" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"longcw/yolo2-pytorch" -> "marvis/pytorch-yolo2"
"longcw/yolo2-pytorch" -> "longcw/faster_rcnn_pytorch"
"longcw/yolo2-pytorch" -> "amdegroot/ssd.pytorch"
"longcw/yolo2-pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"longcw/yolo2-pytorch" -> "ayooshkathuria/pytorch-yolo-v3"
"longcw/yolo2-pytorch" -> "roytseng-tw/Detectron.pytorch"
"longcw/yolo2-pytorch" -> "marvis/pytorch-yolo3"
"longcw/yolo2-pytorch" -> "abeardear/pytorch-YOLO-v1"
"longcw/yolo2-pytorch" -> "kuangliu/pytorch-retinanet"
"longcw/yolo2-pytorch" -> "ruiminshen/yolo2-pytorch"
"longcw/yolo2-pytorch" -> "princeton-vl/CornerNet"
"longcw/yolo2-pytorch" -> "marvis/pytorch-caffe-darknet-convert" ["e"=1]
"longcw/yolo2-pytorch" -> "jwyang/faster-rcnn.pytorch"
"longcw/yolo2-pytorch" -> "msracver/Deformable-ConvNets"
"longcw/yolo2-pytorch" -> "gliese581gg/YOLO_tensorflow" ["e"=1]
"JohannesBuchner/imagehash" -> "idealo/imagededup"
"JohannesBuchner/imagehash" -> "rhsimplex/image-match" ["e"=1]
"JohannesBuchner/imagehash" -> "bunchesofdonald/photohash"
"JohannesBuchner/imagehash" -> "aetilius/pHash" ["e"=1]
"JohannesBuchner/imagehash" -> "jenssegers/imagehash" ["e"=1]
"JohannesBuchner/imagehash" -> "PyImageSearch/imutils"
"JohannesBuchner/imagehash" -> "corona10/goimagehash" ["e"=1]
"JohannesBuchner/imagehash" -> "spotify/annoy" ["e"=1]
"JohannesBuchner/imagehash" -> "philipbl/duplicate-images"
"JohannesBuchner/imagehash" -> "PyAV-Org/PyAV" ["e"=1]
"JohannesBuchner/imagehash" -> "kkroening/ffmpeg-python" ["e"=1]
"JohannesBuchner/imagehash" -> "benhoyt/dhash"
"JohannesBuchner/imagehash" -> "aleju/imgaug"
"JohannesBuchner/imagehash" -> "commonsmachinery/blockhash-python"
"JohannesBuchner/imagehash" -> "albumentations-team/albumentations"
"fossasia/visdom" -> "lanpa/tensorboardX"
"fossasia/visdom" -> "fossasia/libsigrok"
"fossasia/visdom" -> "fossasia/speech_recognition"
"fossasia/visdom" -> "fossasia/libsigrokdecode"
"fossasia/visdom" -> "fossasia/eventyay.de"
"fossasia/visdom" -> "fossasia/susi_installer"
"fossasia/visdom" -> "fossasia/magic-epaper-case"
"fossasia/visdom" -> "fossasia/hyderabad.jugaadfest.com"
"fossasia/visdom" -> "fossasia/2021.codeheat.org"
"fossasia/visdom" -> "fossasia/fossasia-presentations"
"fossasia/visdom" -> "OpnTec/vietnam.pycon.world"
"fossasia/visdom" -> "fossasia/susi_python"
"fossasia/visdom" -> "fossasia/delhi.jugaadfest.com"
"fossasia/visdom" -> "OpnTec/opentech.asia"
"fossasia/visdom" -> "fossasia/FOSSASIA-Office"
"athivvat/ai-engineer-guide" -> "EngrSaad2/Artificial-Intelligence-Engineer-Roadmap"
"athivvat/ai-engineer-guide" -> "srcolinas/roadmap-to-AI"
"athivvat/ai-engineer-guide" -> "gopala-kr/ai-learning-roadmap"
"nitrain/nitrain" -> "pytorch/ignite"
"nitrain/nitrain" -> "lanpa/tensorboardX"
"nitrain/nitrain" -> "pytorch/tnt"
"nitrain/nitrain" -> "szagoruyko/functional-zoo"
"nitrain/nitrain" -> "longcw/faster_rcnn_pytorch"
"nitrain/nitrain" -> "skorch-dev/skorch" ["e"=1]
"nitrain/nitrain" -> "spro/practical-pytorch" ["e"=1]
"nitrain/nitrain" -> "meetps/pytorch-semseg" ["e"=1]
"nitrain/nitrain" -> "torrvision/crayon"
"nitrain/nitrain" -> "sksq96/pytorch-summary"
"nitrain/nitrain" -> "fossasia/visdom"
"nitrain/nitrain" -> "yu-changqian/pytorch-segmentation" ["e"=1]
"nitrain/nitrain" -> "mdbloice/Augmentor"
"nitrain/nitrain" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"nitrain/nitrain" -> "roytseng-tw/Detectron.pytorch"
"mbeyeler/opencv-machine-learning" -> "oreillymedia/Learning-OpenCV-3_examples"
"mbeyeler/opencv-machine-learning" -> "PacktPublishing/OpenCV-3-x-with-Python-By-Example"
"mbeyeler/opencv-machine-learning" -> "leonvanbokhorst/NoteBooks-Statistics-and-MachineLearning" ["e"=1]
"mbeyeler/opencv-machine-learning" -> "PacktPublishing/OpenCV-3-Computer-Vision-with-Python-Cookbook"
"mbeyeler/opencv-machine-learning" -> "makelove/OpenCV-Python-Tutorial"
"mbeyeler/opencv-machine-learning" -> "abidrahmank/OpenCV2-Python-Tutorials"
"mbeyeler/opencv-machine-learning" -> "datitran/object_detector_app" ["e"=1]
"mbeyeler/opencv-machine-learning" -> "jimdengdev/opencv_exercises"
"mbeyeler/opencv-machine-learning" -> "PacktPublishing/Computer-Vision-with-OpenCV-3-and-Qt5" ["e"=1]
"mbeyeler/opencv-machine-learning" -> "mbeyeler/opencv-python-blueprints"
"mbeyeler/opencv-machine-learning" -> "PacktPublishing/OpenCV-Computer-Vision-Projects-with-Python"
"mbeyeler/opencv-machine-learning" -> "QianMo/OpenCV3-Intro-Book-Src"
"mbeyeler/opencv-machine-learning" -> "JimmyHHua/opencv_tutorials"
"longcw/faster_rcnn_pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"longcw/faster_rcnn_pytorch" -> "jwyang/faster-rcnn.pytorch"
"longcw/faster_rcnn_pytorch" -> "longcw/yolo2-pytorch"
"longcw/faster_rcnn_pytorch" -> "roytseng-tw/Detectron.pytorch"
"longcw/faster_rcnn_pytorch" -> "amdegroot/ssd.pytorch"
"longcw/faster_rcnn_pytorch" -> "chenyuntc/simple-faster-rcnn-pytorch"
"longcw/faster_rcnn_pytorch" -> "felixgwu/mask_rcnn_pytorch"
"longcw/faster_rcnn_pytorch" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"longcw/faster_rcnn_pytorch" -> "marvis/pytorch-yolo2"
"longcw/faster_rcnn_pytorch" -> "jwyang/fpn.pytorch"
"longcw/faster_rcnn_pytorch" -> "ShadowXZT/pytorch_RFCN"
"longcw/faster_rcnn_pytorch" -> "oeway/pytorch-deform-conv"
"longcw/faster_rcnn_pytorch" -> "msracver/Deformable-ConvNets"
"longcw/faster_rcnn_pytorch" -> "endernewton/tf-faster-rcnn" ["e"=1]
"longcw/faster_rcnn_pytorch" -> "princeton-vl/CornerNet"
"aaron-xichen/pytorch-playground" -> "kuangliu/pytorch-cifar"
"aaron-xichen/pytorch-playground" -> "Cadene/pretrained-models.pytorch"
"aaron-xichen/pytorch-playground" -> "weiaicunzai/pytorch-cifar100"
"aaron-xichen/pytorch-playground" -> "bearpaw/pytorch-classification"
"aaron-xichen/pytorch-playground" -> "IntelLabs/distiller" ["e"=1]
"aaron-xichen/pytorch-playground" -> "longcw/faster_rcnn_pytorch"
"aaron-xichen/pytorch-playground" -> "666DZY666/micronet" ["e"=1]
"aaron-xichen/pytorch-playground" -> "roytseng-tw/Detectron.pytorch"
"aaron-xichen/pytorch-playground" -> "szagoruyko/attention-transfer" ["e"=1]
"aaron-xichen/pytorch-playground" -> "ruotianluo/pytorch-faster-rcnn"
"aaron-xichen/pytorch-playground" -> "hysts/pytorch_image_classification"
"aaron-xichen/pytorch-playground" -> "amdegroot/ssd.pytorch"
"aaron-xichen/pytorch-playground" -> "gpleiss/efficient_densenet_pytorch"
"aaron-xichen/pytorch-playground" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"aaron-xichen/pytorch-playground" -> "Lyken17/pytorch-OpCounter"
"visipedia/inat_comp" -> "macaodha/inat_comp_2018" ["e"=1]
"visipedia/inat_comp" -> "richardaecn/cvpr18-inaturalist-transfer" ["e"=1]
"visipedia/inat_comp" -> "megvii-research/BBN"
"visipedia/inat_comp" -> "zhmiao/OpenLongTailRecognition-OLTR"
"visipedia/inat_comp" -> "richardaecn/class-balanced-loss"
"visipedia/inat_comp" -> "zzw-zwzhang/Awesome-of-Long-Tailed-Recognition"
"visipedia/inat_comp" -> "kaidic/LDAM-DRW"
"visipedia/inat_comp" -> "frank-xwang/RIDE-LongTailRecognition"
"visipedia/inat_comp" -> "visipedia/iwildcam_comp" ["e"=1]
"visipedia/inat_comp" -> "facebookresearch/classifier-balancing"
"visipedia/inat_comp" -> "dvlab-research/Parametric-Contrastive-Learning"
"visipedia/inat_comp" -> "YyzHarry/imbalanced-semi-self"
"visipedia/inat_comp" -> "pyinat/pyinaturalist"
"visipedia/inat_comp" -> "TACJu/TransFG" ["e"=1]
"visipedia/inat_comp" -> "visipedia/newt"
"kuangliu/pytorch-ssd" -> "kuangliu/torchcv"
"kuangliu/pytorch-ssd" -> "kuangliu/pytorch-yolov2"
"gaohuang/MSDNet" -> "kalviny/MSDNet-PyTorch" ["e"=1]
"gaohuang/MSDNet" -> "avirambh/MSDNet-GCN"
"gaohuang/MSDNet" -> "ShichenLiu/CondenseNet"
"gaohuang/MSDNet" -> "yangle15/RANet-pytorch" ["e"=1]
"gaohuang/MSDNet" -> "ucbdrive/skipnet" ["e"=1]
"gaohuang/MSDNet" -> "gpleiss/efficient_densenet_pytorch"
"gaohuang/MSDNet" -> "cypw/DPNs" ["e"=1]
"gaohuang/MSDNet" -> "felixgwu/img_classification_pk_pytorch"
"gaohuang/MSDNet" -> "ikhlestov/vision_networks" ["e"=1]
"oeway/pytorch-deform-conv" -> "1zb/deformable-convolution-pytorch"
"oeway/pytorch-deform-conv" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"oeway/pytorch-deform-conv" -> "msracver/Deformable-ConvNets"
"oeway/pytorch-deform-conv" -> "ChunhuanLin/deform_conv_pytorch"
"oeway/pytorch-deform-conv" -> "4uiiurz1/pytorch-deform-conv-v2"
"oeway/pytorch-deform-conv" -> "felixlaumon/deform-conv" ["e"=1]
"oeway/pytorch-deform-conv" -> "longcw/faster_rcnn_pytorch"
"oeway/pytorch-deform-conv" -> "CharlesShang/DCNv2"
"oeway/pytorch-deform-conv" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"oeway/pytorch-deform-conv" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"oeway/pytorch-deform-conv" -> "fxia22/stn.pytorch" ["e"=1]
"oeway/pytorch-deform-conv" -> "roytseng-tw/Detectron.pytorch"
"oeway/pytorch-deform-conv" -> "switchablenorms/Switchable-Normalization" ["e"=1]
"oeway/pytorch-deform-conv" -> "AlexHex7/Non-local_pytorch" ["e"=1]
"oeway/pytorch-deform-conv" -> "princeton-vl/CornerNet"
"leonidk/pytorch-tf" -> "jiachen0212/pytorch-caffe-darknet-convert"
"debidatta/syndata-generation" -> "debidatta/pixelobjectness-bilinear"
"debidatta/syndata-generation" -> "dvornikita/context_aug"
"debidatta/syndata-generation" -> "yskmt/pb"
"debidatta/syndata-generation" -> "RocketFlash/CAP_augmentation"
"debidatta/syndata-generation" -> "TannerGilbert/Computer-Vision-Synthetic-Data-Generation"
"debidatta/syndata-generation" -> "conradry/copy-paste-aug"
"rickiepark/awesome-pytorch" -> "vinhkhuc/PyTorch-Mini-Tutorials"
"rickiepark/awesome-pytorch" -> "popol1991/seq2seq-pytorch-example"
"bamos/densenet.pytorch" -> "andreasveit/densenet-pytorch"
"bamos/densenet.pytorch" -> "gpleiss/efficient_densenet_pytorch"
"bamos/densenet.pytorch" -> "liuzhuang13/DenseNet" ["e"=1]
"bamos/densenet.pytorch" -> "longcw/faster_rcnn_pytorch"
"bamos/densenet.pytorch" -> "mattmacy/vnet.pytorch" ["e"=1]
"bamos/densenet.pytorch" -> "szagoruyko/wide-residual-networks" ["e"=1]
"bamos/densenet.pytorch" -> "oeway/pytorch-deform-conv"
"bamos/densenet.pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"bamos/densenet.pytorch" -> "fyu/dilation" ["e"=1]
"bamos/densenet.pytorch" -> "ShadowXZT/pytorch_RFCN"
"bamos/densenet.pytorch" -> "szagoruyko/attention-transfer" ["e"=1]
"bamos/densenet.pytorch" -> "1zb/deformable-convolution-pytorch"
"bamos/densenet.pytorch" -> "prlz77/ResNeXt.pytorch"
"bamos/densenet.pytorch" -> "longcw/yolo2-pytorch"
"bamos/densenet.pytorch" -> "bfortuner/pytorch_tiramisu" ["e"=1]
"chainer/chainercv" -> "chainer/chainer" ["e"=1]
"chainer/chainercv" -> "chainer/chainerrl" ["e"=1]
"chainer/chainercv" -> "chenyuntc/simple-faster-rcnn-pytorch"
"chainer/chainercv" -> "chainer/chainermn" ["e"=1]
"chainer/chainercv" -> "chainer/chainerui" ["e"=1]
"chainer/chainercv" -> "ruotianluo/pytorch-faster-rcnn"
"chainer/chainercv" -> "mitmul/chainer-faster-rcnn" ["e"=1]
"chainer/chainercv" -> "pfnet-research/chainer-gan-lib" ["e"=1]
"chainer/chainercv" -> "roytseng-tw/Detectron.pytorch"
"chainer/chainercv" -> "kuangliu/torchcv"
"chainer/chainercv" -> "amdegroot/ssd.pytorch"
"chainer/chainercv" -> "leetenki/YOLOv2" ["e"=1]
"chainer/chainercv" -> "chainer/onnx-chainer" ["e"=1]
"chainer/chainercv" -> "longcw/faster_rcnn_pytorch"
"chainer/chainercv" -> "jwyang/fpn.pytorch"
"takerum/vat_tf" -> "takerum/vat"
"takerum/vat_tf" -> "lyakaap/VAT-pytorch"
"takerum/vat_tf" -> "9310gaurav/virtual-adversarial-training"
"takerum/vat_tf" -> "takerum/vat_chainer"
"takerum/vat_tf" -> "s-laine/tempens"
"takerum/vat_tf" -> "brain-research/realistic-ssl-evaluation"
"takerum/vat_tf" -> "kimiyoung/ssl_bad_gan"
"takerum/vat_tf" -> "Britefury/self-ensemble-visual-domain-adapt" ["e"=1]
"takerum/vat_tf" -> "CuriousAI/mean-teacher"
"takerum/vat_tf" -> "vikasverma1077/ICT"
"takerum/vat_tf" -> "benathi/fastswa-semi-sup"
"takerum/vat_tf" -> "tensorfreitas/Temporal-Ensembling-for-Semi-Supervised-Learning"
"takerum/vat_tf" -> "sakishinoda/tf-ssl"
"felixgwu/mask_rcnn_pytorch" -> "yu-changqian/pytorch-segmentation" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "longcw/faster_rcnn_pytorch"
"felixgwu/mask_rcnn_pytorch" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "msracver/FCIS" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "ShadowXZT/pytorch_RFCN"
"felixgwu/mask_rcnn_pytorch" -> "jasjeetIM/Mask-RCNN" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "voidrank/FastMask" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "xiaohaoChen/rrc_detection" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "clcarwin/convert_torch_to_pytorch"
"felixgwu/mask_rcnn_pytorch" -> "xbresson/spectral_graph_convnets" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "ignacio-rocco/detectorch"
"felixgwu/mask_rcnn_pytorch" -> "bharatsingh430/Deformable-ConvNets" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "TuSimple/mx-maskrcnn" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "1zb/deformable-convolution-pytorch"
"felixgwu/mask_rcnn_pytorch" -> "guosheng/refinenet" ["e"=1]
"BAILOOL/ANMS-Codes" -> "dmitrijsc/practical-rl"
"BAILOOL/ANMS-Codes" -> "dartrevan/ChemTextMining"
"BAILOOL/ANMS-Codes" -> "sherman/blobkeeper"
"BAILOOL/ANMS-Codes" -> "oavdeev/getbox"
"BAILOOL/ANMS-Codes" -> "emakhov/data-quality-framework"
"BAILOOL/ANMS-Codes" -> "kiselev1189/EEGClassificationMCNN"
"BAILOOL/ANMS-Codes" -> "fgvbrt/nips_rl"
"BAILOOL/ANMS-Codes" -> "DBusAI/TF_Eager"
"BAILOOL/ANMS-Codes" -> "atrof/atrof.github.io"
"BAILOOL/ANMS-Codes" -> "alexeygrigorev/libftrl-python"
"BAILOOL/ANMS-Codes" -> "indeedeng/vowpal-wabbit-java"
"BAILOOL/ANMS-Codes" -> "Dumbris/trunklucator"
"BAILOOL/ANMS-Codes" -> "lext/deep_docker"
"BAILOOL/ANMS-Codes" -> "zju3dv/GIFT" ["e"=1]
"BAILOOL/ANMS-Codes" -> "rmsalinas/fbow" ["e"=1]
"benhoyt/dhash" -> "benhoyt/pybktree"
"benhoyt/dhash" -> "hjaurum/DHash"
"jihunchoi/recurrent-batch-normalization-pytorch" -> "Sleepychord/ImprovedGAN-pytorch"
"jihunchoi/recurrent-batch-normalization-pytorch" -> "h-jia/batch_normalized_LSTM"
"jihunchoi/recurrent-batch-normalization-pytorch" -> "OlavHN/bnlstm" ["e"=1]
"jihunchoi/recurrent-batch-normalization-pytorch" -> "salesforce/matchbox" ["e"=1]
"bfortuner/pytorch-cheatsheet" -> "rcompton/ml_cheat_sheet" ["e"=1]
"bfortuner/pytorch-cheatsheet" -> "bfortuner/pytorch-kaggle-starter"
"clcarwin/convert_torch_to_pytorch" -> "bshillingford/python-torchfile" ["e"=1]
"clcarwin/convert_torch_to_pytorch" -> "prlz77/ResNeXt.pytorch"
"clcarwin/convert_torch_to_pytorch" -> "felixgwu/mask_rcnn_pytorch"
"clcarwin/convert_torch_to_pytorch" -> "torrvision/crayon"
"clcarwin/convert_torch_to_pytorch" -> "ignacio-rocco/detectorch"
"clcarwin/convert_torch_to_pytorch" -> "oeway/pytorch-deform-conv"
"clcarwin/convert_torch_to_pytorch" -> "facebookresearch/ResNeXt" ["e"=1]
"clcarwin/convert_torch_to_pytorch" -> "fanq15/caffe_to_torch_to_pytorch" ["e"=1]
"clcarwin/convert_torch_to_pytorch" -> "ShadowXZT/pytorch_RFCN"
"clcarwin/convert_torch_to_pytorch" -> "facebookresearch/clevr-iep" ["e"=1]
"clcarwin/convert_torch_to_pytorch" -> "longcw/faster_rcnn_pytorch"
"clcarwin/convert_torch_to_pytorch" -> "gpleiss/efficient_densenet_pytorch"
"clcarwin/convert_torch_to_pytorch" -> "yu-changqian/pytorch-segmentation" ["e"=1]
"clcarwin/convert_torch_to_pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"clcarwin/convert_torch_to_pytorch" -> "szagoruyko/attention-transfer" ["e"=1]
"prlz77/ResNeXt.pytorch" -> "miraclewkf/ResNeXt-PyTorch" ["e"=1]
"prlz77/ResNeXt.pytorch" -> "facebookresearch/ResNeXt" ["e"=1]
"prlz77/ResNeXt.pytorch" -> "D-X-Y/NAS-Bench-201" ["e"=1]
"prlz77/ResNeXt.pytorch" -> "clcarwin/convert_torch_to_pytorch"
"prlz77/ResNeXt.pytorch" -> "bearpaw/pytorch-classification"
"prlz77/ResNeXt.pytorch" -> "felixgwu/img_classification_pk_pytorch"
"prlz77/ResNeXt.pytorch" -> "gpleiss/efficient_densenet_pytorch"
"prlz77/ResNeXt.pytorch" -> "jaxony/ShuffleNet" ["e"=1]
"prlz77/ResNeXt.pytorch" -> "ShichenLiu/CondenseNet"
"prlz77/ResNeXt.pytorch" -> "oeway/pytorch-deform-conv"
"prlz77/ResNeXt.pytorch" -> "1zb/deformable-convolution-pytorch"
"prlz77/ResNeXt.pytorch" -> "andreasveit/densenet-pytorch"
"prlz77/ResNeXt.pytorch" -> "longcw/faster_rcnn_pytorch"
"prlz77/ResNeXt.pytorch" -> "bamos/densenet.pytorch"
"prlz77/ResNeXt.pytorch" -> "xternalz/WideResNet-pytorch"
"marvis/pytorch-yolo2" -> "longcw/yolo2-pytorch"
"marvis/pytorch-yolo2" -> "marvis/pytorch-yolo3"
"marvis/pytorch-yolo2" -> "ruiminshen/yolo2-pytorch"
"marvis/pytorch-yolo2" -> "marvis/pytorch-caffe-darknet-convert" ["e"=1]
"marvis/pytorch-yolo2" -> "andy-yun/pytorch-0.4-yolov3"
"marvis/pytorch-yolo2" -> "longcw/faster_rcnn_pytorch"
"marvis/pytorch-yolo2" -> "ayooshkathuria/pytorch-yolo-v3"
"marvis/pytorch-yolo2" -> "kuangliu/pytorch-retinanet"
"marvis/pytorch-yolo2" -> "roytseng-tw/Detectron.pytorch"
"marvis/pytorch-yolo2" -> "ruotianluo/pytorch-faster-rcnn"
"marvis/pytorch-yolo2" -> "amdegroot/ssd.pytorch"
"marvis/pytorch-yolo2" -> "ShuangXieIrene/ssds.pytorch"
"marvis/pytorch-yolo2" -> "princeton-vl/CornerNet"
"marvis/pytorch-yolo2" -> "lzx1413/PytorchSSD"
"marvis/pytorch-yolo2" -> "szq0214/DSOD" ["e"=1]
"chengyangfu/pytorch-vgg-cifar10" -> "akamaster/pytorch_resnet_cifar10"
"chengyangfu/pytorch-vgg-cifar10" -> "jcjohnson/pytorch-vgg" ["e"=1]
"chengyangfu/pytorch-vgg-cifar10" -> "geifmany/cifar-vgg"
"chengyangfu/pytorch-vgg-cifar10" -> "huyvnphan/PyTorch_CIFAR10" ["e"=1]
"chengyangfu/pytorch-vgg-cifar10" -> "mjiansun/cifar10-vgg16"
"chengyangfu/pytorch-vgg-cifar10" -> "kuangliu/pytorch-cifar"
"chengyangfu/pytorch-vgg-cifar10" -> "aaron-xichen/pytorch-playground"
"chengyangfu/pytorch-vgg-cifar10" -> "junyuseu/pytorch-cifar-models"
"ryouchinsa/Rectlabel-support" -> "supervisely/supervisely"
"ryouchinsa/Rectlabel-support" -> "open-edge-platform/datumaro" ["e"=1]
"PacktPublishing/OpenCV3-Computer-Vision-Application-Programming-Cookbook-Third-Edition" -> "laganiere/OpenCV3Cookbook"
"PacktPublishing/OpenCV3-Computer-Vision-Application-Programming-Cookbook-Third-Edition" -> "PacktPublishing/Mastering-OpenCV3-Second-Edition"
"PacktPublishing/OpenCV3-Computer-Vision-Application-Programming-Cookbook-Third-Edition" -> "PacktPublishing/OpenCV-4-Computer-Vision-Application-Programming-Cookbook-Fourth-Edition"
"vinhkhuc/PyTorch-Mini-Tutorials" -> "rickiepark/awesome-pytorch"
"vinhkhuc/PyTorch-Mini-Tutorials" -> "szagoruyko/functional-zoo"
"Seung-Hun-Lee/CAVIS" -> "zhang-tao-whu/DVIS_Plus"
"Seung-Hun-Lee/CAVIS" -> "zhang-tao-whu/DVIS"
"Quyans/GOI-Hyperplane" -> "Quyans/Drag-Your-Gaussian"
"Quyans/GOI-Hyperplane" -> "Quyans/ARStudio"
"Quyans/GOI-Hyperplane" -> "HunterJ-Lin/WSOVOD"
"Quyans/GOI-Hyperplane" -> "swagger-coder/ASDA"
"Quyans/GOI-Hyperplane" -> "nhw649/EOV-Seg" ["e"=1]
"legolas123/cv-tricks.com" -> "jiecaoyu/XNOR-Net-PyTorch" ["e"=1]
"legolas123/cv-tricks.com" -> "rdcolema/tensorflow-image-classification"
"legolas123/cv-tricks.com" -> "markjay4k/YOLO-series"
"BartyzalRadek/Multi-label-Inception-net" -> "suraj-deshmukh/Keras-Multi-Label-Image-Classification"
"BartyzalRadek/Multi-label-Inception-net" -> "hellowangqian/multi-label-image-classification"
"BartyzalRadek/Multi-label-Inception-net" -> "AmrMaghraby/CNN-RNN-A-Unified-Framework-for-Multi-label-Image-Classification"
"BartyzalRadek/Multi-label-Inception-net" -> "pangwong/pytorch-multi-label-classifier"
"BartyzalRadek/Multi-label-Inception-net" -> "HCPLab-SYSU/SSGRL"
"andreasveit/densenet-pytorch" -> "bamos/densenet.pytorch"
"andreasveit/densenet-pytorch" -> "gpleiss/efficient_densenet_pytorch"
"andreasveit/densenet-pytorch" -> "lizhengwei1992/ResidualDenseNetwork-Pytorch" ["e"=1]
"andreasveit/densenet-pytorch" -> "prlz77/ResNeXt.pytorch"
"andreasveit/densenet-pytorch" -> "ShichenLiu/CondenseNet"
"andreasveit/densenet-pytorch" -> "xternalz/WideResNet-pytorch"
"andreasveit/densenet-pytorch" -> "bmsookim/wide-resnet.pytorch"
"andreasveit/densenet-pytorch" -> "yu-changqian/pytorch-segmentation" ["e"=1]
"andreasveit/densenet-pytorch" -> "kevinzakka/densenet"
"andreasveit/densenet-pytorch" -> "felixgwu/img_classification_pk_pytorch"
"andreasveit/densenet-pytorch" -> "liuzhuang13/DenseNet" ["e"=1]
"andreasveit/densenet-pytorch" -> "taki0112/Densenet-Tensorflow" ["e"=1]
"felixgwu/img_classification_pk_pytorch" -> "felixgwu/mask_rcnn_pytorch"
"felixgwu/img_classification_pk_pytorch" -> "avirambh/MSDNet-GCN"
"felixgwu/img_classification_pk_pytorch" -> "prlz77/ResNeXt.pytorch"
"felixgwu/img_classification_pk_pytorch" -> "gaohuang/MSDNet"
"felixgwu/img_classification_pk_pytorch" -> "bearpaw/pytorch-classification"
"felixgwu/img_classification_pk_pytorch" -> "szagoruyko/functional-zoo"
"felixgwu/img_classification_pk_pytorch" -> "yu-changqian/pytorch-segmentation" ["e"=1]
"felixgwu/img_classification_pk_pytorch" -> "1zb/deformable-convolution-pytorch"
"xgastaldi/shake-shake" -> "hysts/pytorch_shake_shake"
"xgastaldi/shake-shake" -> "jhkim89/PyramidNet"
"yangysc/Wavelet-HFCM" -> "SparseL/SAE-FCM"
"yangysc/Wavelet-HFCM" -> "julzerinos/python-fuzzy-cognitve-maps"
"xternalz/WideResNet-pytorch" -> "bmsookim/wide-resnet.pytorch"
"xternalz/WideResNet-pytorch" -> "szagoruyko/wide-residual-networks" ["e"=1]
"dartrevan/ChemTextMining" -> "oavdeev/getbox"
"dartrevan/ChemTextMining" -> "emakhov/data-quality-framework"
"dartrevan/ChemTextMining" -> "dmitrijsc/practical-rl"
"dartrevan/ChemTextMining" -> "sherman/blobkeeper"
"dartrevan/ChemTextMining" -> "atrof/atrof.github.io"
"RoryDuncan/learn-python-roadmap" -> "RoryDuncan/learning-roadmaps"
"edouardoyallon/pyscatwave" -> "edouardoyallon/scalingscattering"
"edouardoyallon/pyscatwave" -> "kymatio/kymatio"
"edouardoyallon/pyscatwave" -> "edouardoyallon/scatwave"
"edouardoyallon/pyscatwave" -> "tomrunia/PyTorchWavelets"
"edouardoyallon/pyscatwave" -> "lostanlen/scattering.m"
"edouardoyallon/pyscatwave" -> "szagoruyko/pyinn"
"edouardoyallon/scalingscattering" -> "edouardoyallon/scatwave"
"edouardoyallon/scalingscattering" -> "edouardoyallon/pyscatwave"
"gulvarol/grocerydataset" -> "empathy87/nn-grocery-shelves"
"gulvarol/grocerydataset" -> "sayakpaul/Grocery-Product-Detection"
"gulvarol/grocerydataset" -> "PhilJd/freiburg_groceries_dataset"
"gulvarol/grocerydataset" -> "tobiagru/ObjectDetectionGroceryProducts"
"PaddlePaddle/PaddleCloud" -> "elasticdeeplearning/edl" ["e"=1]
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/AutoDL"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/tape"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/recordio"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/PaddleFlow"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/docs"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/Mobile"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/PaddlePaddle.org"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/benchmark"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/continuous_evaluation"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/VisionTools"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/XWorld"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/PaddleFleetX"
"PaddlePaddle/PaddleCloud" -> "PaddlePaddle/CINN"
"PaddlePaddle/PaddleCloud" -> "k8sp/sextant"
"scatnet/scatnet" -> "edouardoyallon/ScatNetLight"
"scatnet/scatnet" -> "oinegue/scatnetgpu"
"anuragreddygv323/computer-vision-projects" -> "akshaybhatia10/ComputerVision-Projects"
"anuragreddygv323/computer-vision-projects" -> "PacktPublishing/OpenCV-Computer-Vision-Projects-with-Python"
"MohawkMEDIC/omrmarkengine" -> "manharsharma007/OMR"
"ssaru/convert2Yolo" -> "ultralytics/JSON2YOLO"
"ssaru/convert2Yolo" -> "Tony607/voc2coco"
"ssaru/convert2Yolo" -> "yukkyo/voc2coco"
"ssaru/convert2Yolo" -> "WongKinYiu/ScaledYOLOv4"
"ssaru/convert2Yolo" -> "ManivannanMurugavel/YOLO-Annotation-Tool"
"ssaru/convert2Yolo" -> "luuuyi/RefineDet.PyTorch"
"ssaru/convert2Yolo" -> "AlexeyAB/Yolo_mark" ["e"=1]
"giorgiop/loss-correction" -> "GarrettLee/label_noise_correction"
"giorgiop/loss-correction" -> "Cysu/noisy_label"
"giorgiop/loss-correction" -> "Sunarker/Safeguarded-Dynamic-Label-Regression-for-Noisy-Supervision"
"giorgiop/loss-correction" -> "GuokaiLiu/Noisy-Labels-Problem-Collection"
"giorgiop/loss-correction" -> "bhanML/Masking"
"giorgiop/loss-correction" -> "xingjunm/dimensionality-driven-learning"
"ahrnbom/ensemble-objdet" -> "i-pan/kaggle-rsna18"
"ahrnbom/ensemble-objdet" -> "ancasag/ensembleObjectDetection"
"ahrnbom/ensemble-objdet" -> "SeuTao/Humpback-Whale-Identification"
"CatalogueOfLife/general" -> "tdwg/developers"
"tdwg/dwc-qa" -> "tdwg/bdq"
"zonghua94/mnist" -> "hwalsuklee/tensorflow-mnist-cnn"
"WenqiZhang-HIT/MGDN-project" -> "knowonething/Traffic-Simulation-Tool"
"jahongir7174/YOLOv11-pt" -> "jahongir7174/YOLOv8-pt"
"benhoyt/pybktree" -> "benhoyt/dhash"
"ShadowXZT/pytorch_RFCN" -> "RobertCsordas/RFCN-tensorflow" ["e"=1]
"ShadowXZT/pytorch_RFCN" -> "YuwenXiong/py-R-FCN" ["e"=1]
"ShadowXZT/pytorch_RFCN" -> "princewang1994/R-FCN.pytorch" ["e"=1]
"ShadowXZT/pytorch_RFCN" -> "felixgwu/mask_rcnn_pytorch"
"ShadowXZT/pytorch_RFCN" -> "longcw/faster_rcnn_pytorch"
"ShadowXZT/pytorch_RFCN" -> "longcw/yolo2-pytorch"
"ShadowXZT/pytorch_RFCN" -> "daijifeng001/caffe-rfcn" ["e"=1]
"ShadowXZT/pytorch_RFCN" -> "daijifeng001/R-FCN" ["e"=1]
"ShadowXZT/pytorch_RFCN" -> "1zb/deformable-convolution-pytorch"
"ShadowXZT/pytorch_RFCN" -> "abhi2610/ohem" ["e"=1]
"ShadowXZT/pytorch_RFCN" -> "feichtenhofer/Detect-Track" ["e"=1]
"ShadowXZT/pytorch_RFCN" -> "yousongzhu/CoupleNet" ["e"=1]
"ShadowXZT/pytorch_RFCN" -> "ruotianluo/pytorch-faster-rcnn"
"zhufengx/SRN_multilabel" -> "Enjia/Spatial-Regularization-Network-in-Tensorflow"
"zhufengx/SRN_multilabel" -> "James-Yip/AttentionImageClass"
"zhufengx/SRN_multilabel" -> "HCPLab-SYSU/SSGRL"
"zhufengx/SRN_multilabel" -> "cvcode18/imbalanced_learning" ["e"=1]
"zhufengx/SRN_multilabel" -> "mathkey/mssnet"
"zhufengx/SRN_multilabel" -> "leokarlin/LaSO"
"zhufengx/SRN_multilabel" -> "yolomax/rru-reid" ["e"=1]
"zhufengx/SRN_multilabel" -> "Hua-YS/AID-Multilabel-Dataset"
"k8sp/tutorials" -> "cioc/ray-kubernetes"
"BelgianBiodiversityPlatform/python-dwca-reader" -> "gbif/gbif-api"
"lbktrinh/DRU" -> "EPFL-IMOS/simple-SFOD"
"argmaxinc/WhisperKitAndroid" -> "argmaxinc/whisperkittools"
"zhyever/Amodal-Depth-Anything" -> "saraao/amodal"
"fossasia/badgemagic-rs" -> "fossasia/eventyay-ticket-video"
"fossasia/badgemagic-rs" -> "fossasia/eventyay-ticket-pages"
"fossasia/badgemagic-rs" -> "fossasia/eventyay-talk-video"
"fossasia/badgemagic-rs" -> "fossasia/eventyay-talk-pages"
"fossasia/badgemagic-rs" -> "fossasia/lang.eventyay.com"
"fossasia/badgemagic-rs" -> "fossasia/2024.fossasia.org"
"fossasia/badgemagic-rs" -> "fossasia/badgemagic-case"
"fossasia/badgemagic-rs" -> "fossasia/eventyay-talk-schedule"
"fossasia/badgemagic-rs" -> "fossasia/wp-rotatingtweets"
"fossasia/badgemagic-rs" -> "fossasia/eventyay-tickets-exhibitors"
"fossasia/badgemagic-rs" -> "OpnTec/2023.opentechsummit.de"
"fossasia/badgemagic-rs" -> "fossasia/eventyay-tickets-paypal"
"fossasia/badgemagic-rs" -> "fossasia/badgemagic-go"
"fossasia/eventyay-ticket-pages" -> "fossasia/eventyay-ticket-video"
"fossasia/eventyay-ticket-pages" -> "fossasia/eventyay-talk-video"
"fossasia/eventyay-ticket-video" -> "fossasia/eventyay-ticket-pages"
"fossasia/eventyay-ticket-video" -> "fossasia/eventyay-talk-video"
"fossasia/eventyay-talk-pages" -> "fossasia/eventyay-ticket-video"
"fossasia/eventyay-talk-video" -> "fossasia/eventyay-ticket-video"
"fossasia/eventyay-talk-video" -> "fossasia/eventyay-ticket-pages"
"fossasia/lang.eventyay.com" -> "fossasia/2024.fossasia.org"
"fossasia/eventyay-tickets-stripe" -> "fossasia/eventyay-tickets-paypal"
"fossasia/2024.fossasia.org" -> "fossasia/lang.eventyay.com"
"phamduonghung/FSSTn" -> "phamduonghung/WSST2"
"phamduonghung/FSSTn" -> "jrvmalik/time-frequency-analysis"
"phamduonghung/FSSTn" -> "HaizhaoYang/SST_compare"
"phamduonghung/FSSTn" -> "tormii/HST"
"Tencent/ncnn" -> "alibaba/MNN"
"Tencent/ncnn" -> "Tencent/TNN"
"Tencent/ncnn" -> "apache/tvm"
"Tencent/ncnn" -> "NVIDIA/TensorRT"
"Tencent/ncnn" -> "XiaoMi/mace" ["e"=1]
"Tencent/ncnn" -> "lutzroeder/netron"
"Tencent/ncnn" -> "RangiLyu/nanodet"
"Tencent/ncnn" -> "open-mmlab/mmdetection"
"Tencent/ncnn" -> "PaddlePaddle/Paddle-Lite"
"Tencent/ncnn" -> "OAID/Tengine" ["e"=1]
"Tencent/ncnn" -> "AlexeyAB/darknet"
"Tencent/ncnn" -> "wang-xinyu/tensorrtx"
"Tencent/ncnn" -> "ShiqiYu/libfacedetection" ["e"=1]
"Tencent/ncnn" -> "onnx/onnx"
"Tencent/ncnn" -> "Megvii-BaseDetection/YOLOX"
"jacobgil/pytorch-grad-cam" -> "huggingface/pytorch-image-models"
"jacobgil/pytorch-grad-cam" -> "frgfm/torch-cam" ["e"=1]
"jacobgil/pytorch-grad-cam" -> "lucidrains/vit-pytorch"
"jacobgil/pytorch-grad-cam" -> "utkuozbulak/pytorch-cnn-visualizations"
"jacobgil/pytorch-grad-cam" -> "microsoft/Swin-Transformer"
"jacobgil/pytorch-grad-cam" -> "xmu-xiaoma666/External-Attention-pytorch"
"jacobgil/pytorch-grad-cam" -> "facebookresearch/detr"
"jacobgil/pytorch-grad-cam" -> "open-mmlab/mmdetection"
"jacobgil/pytorch-grad-cam" -> "amusi/CVPR2025-Papers-with-Code"
"jacobgil/pytorch-grad-cam" -> "google-research/vision_transformer"
"jacobgil/pytorch-grad-cam" -> "extreme-assistant/CVPR2024-Paper-Code-Interpretation"
"jacobgil/pytorch-grad-cam" -> "qubvel-org/segmentation_models.pytorch"
"jacobgil/pytorch-grad-cam" -> "albumentations-team/albumentations"
"jacobgil/pytorch-grad-cam" -> "pytorch/vision"
"jacobgil/pytorch-grad-cam" -> "openai/CLIP"
"lanpa/tensorboardX" -> "fossasia/visdom"
"lanpa/tensorboardX" -> "Cadene/pretrained-models.pytorch"
"lanpa/tensorboardX" -> "facebookresearch/maskrcnn-benchmark"
"lanpa/tensorboardX" -> "NVIDIA/apex"
"lanpa/tensorboardX" -> "pytorch/examples"
"lanpa/tensorboardX" -> "jwyang/faster-rcnn.pytorch"
"lanpa/tensorboardX" -> "sksq96/pytorch-summary"
"lanpa/tensorboardX" -> "soumith/ganhacks" ["e"=1]
"lanpa/tensorboardX" -> "pytorch/vision"
"lanpa/tensorboardX" -> "wiseodd/generative-models" ["e"=1]
"lanpa/tensorboardX" -> "utkuozbulak/pytorch-cnn-visualizations"
"lanpa/tensorboardX" -> "roytseng-tw/Detectron.pytorch"
"lanpa/tensorboardX" -> "bharathgs/Awesome-pytorch-list" ["e"=1]
"lanpa/tensorboardX" -> "pytorch/ignite"
"lanpa/tensorboardX" -> "vdumoulin/conv_arithmetic"
"msracver/Deformable-ConvNets" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"msracver/Deformable-ConvNets" -> "oeway/pytorch-deform-conv"
"msracver/Deformable-ConvNets" -> "daijifeng001/R-FCN" ["e"=1]
"msracver/Deformable-ConvNets" -> "princeton-vl/CornerNet"
"msracver/Deformable-ConvNets" -> "msracver/FCIS" ["e"=1]
"msracver/Deformable-ConvNets" -> "tusen-ai/simpledet"
"msracver/Deformable-ConvNets" -> "CharlesShang/DCNv2"
"msracver/Deformable-ConvNets" -> "YuwenXiong/py-R-FCN" ["e"=1]
"msracver/Deformable-ConvNets" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"msracver/Deformable-ConvNets" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"msracver/Deformable-ConvNets" -> "TuSimple/mx-maskrcnn" ["e"=1]
"msracver/Deformable-ConvNets" -> "xingyizhou/CenterNet"
"msracver/Deformable-ConvNets" -> "tianzhi0549/FCOS"
"msracver/Deformable-ConvNets" -> "facebookresearch/maskrcnn-benchmark"
"msracver/Deformable-ConvNets" -> "liuzhuang13/DenseNet" ["e"=1]
"Syllo/nvtop" -> "XuehaiPan/nvitop" ["e"=1]
"Syllo/nvtop" -> "wookayin/gpustat"
"Syllo/nvtop" -> "aristocratos/btop" ["e"=1]
"Syllo/nvtop" -> "flightlessmango/MangoHud" ["e"=1]
"Syllo/nvtop" -> "ClementTsang/bottom" ["e"=1]
"Syllo/nvtop" -> "NVIDIA/nvidia-docker"
"Syllo/nvtop" -> "arogozhnikov/einops"
"Syllo/nvtop" -> "cupy/cupy" ["e"=1]
"Syllo/nvtop" -> "NVIDIA/apex"
"Syllo/nvtop" -> "FeralInteractive/gamemode" ["e"=1]
"Syllo/nvtop" -> "NVIDIA/open-gpu-kernel-modules" ["e"=1]
"Syllo/nvtop" -> "htop-dev/htop" ["e"=1]
"Syllo/nvtop" -> "triton-lang/triton" ["e"=1]
"Syllo/nvtop" -> "lanpa/tensorboardX"
"Syllo/nvtop" -> "wwmm/easyeffects" ["e"=1]
"jwyang/faster-rcnn.pytorch" -> "chenyuntc/simple-faster-rcnn-pytorch"
"jwyang/faster-rcnn.pytorch" -> "facebookresearch/maskrcnn-benchmark"
"jwyang/faster-rcnn.pytorch" -> "amdegroot/ssd.pytorch"
"jwyang/faster-rcnn.pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"jwyang/faster-rcnn.pytorch" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"jwyang/faster-rcnn.pytorch" -> "longcw/faster_rcnn_pytorch"
"jwyang/faster-rcnn.pytorch" -> "eriklindernoren/PyTorch-YOLOv3"
"jwyang/faster-rcnn.pytorch" -> "roytseng-tw/Detectron.pytorch"
"jwyang/faster-rcnn.pytorch" -> "Cadene/pretrained-models.pytorch"
"jwyang/faster-rcnn.pytorch" -> "open-mmlab/mmdetection"
"jwyang/faster-rcnn.pytorch" -> "amusi/awesome-object-detection"
"jwyang/faster-rcnn.pytorch" -> "xingyizhou/CenterNet"
"jwyang/faster-rcnn.pytorch" -> "hoya012/deep_learning_object_detection"
"jwyang/faster-rcnn.pytorch" -> "endernewton/tf-faster-rcnn" ["e"=1]
"jwyang/faster-rcnn.pytorch" -> "ultralytics/yolov3"
"Quyans/Drag-Your-Gaussian" -> "Quyans/GOI-Hyperplane"
"Quyans/Drag-Your-Gaussian" -> "swagger-coder/ASDA"
"Quyans/Drag-Your-Gaussian" -> "Quyans/ARStudio"
"Quyans/Drag-Your-Gaussian" -> "HunterJ-Lin/WSOVOD"
"tensorflow/tpu" -> "lukemelas/EfficientNet-PyTorch"
"tensorflow/tpu" -> "qubvel/efficientnet"
"tensorflow/tpu" -> "google/automl"
"tensorflow/tpu" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"tensorflow/tpu" -> "zhanghang1989/ResNeSt"
"tensorflow/tpu" -> "xingyizhou/CenterNet"
"tensorflow/tpu" -> "tianzhi0549/FCOS"
"tensorflow/tpu" -> "facebookresearch/maskrcnn-benchmark"
"tensorflow/tpu" -> "Cadene/pretrained-models.pytorch"
"tensorflow/tpu" -> "tusen-ai/simpledet"
"tensorflow/tpu" -> "amusi/awesome-object-detection"
"tensorflow/tpu" -> "aleju/imgaug"
"tensorflow/tpu" -> "princeton-vl/CornerNet"
"tensorflow/tpu" -> "msracver/Deformable-ConvNets"
"tensorflow/tpu" -> "dmlc/gluon-cv"
"locuslab/pytorch_fft" -> "szagoruyko/diracnets"
"locuslab/pytorch_fft" -> "edouardoyallon/pyscatwave"
"locuslab/pytorch_fft" -> "1zb/deformable-convolution-pytorch"
"locuslab/pytorch_fft" -> "jhjacobsen/pytorch-i-revnet" ["e"=1]
"locuslab/pytorch_fft" -> "sniklaus/pytorch-extension"
"locuslab/pytorch_fft" -> "DeepInsight-PCALab/CompactBilinearPooling-Pytorch" ["e"=1]
"voicerepublic/linux" -> "voicerepublic/activeadmin-dragonfly"
"voicerepublic/linux" -> "voicerepublic/upscuits"
"voicerepublic/linux" -> "voicerepublic/faye"
"voicerepublic/linux" -> "voicerepublic/transitions"
"voicerepublic/linux" -> "voicerepublic/vr-api-specs"
"voicerepublic/linux" -> "voicerepublic/vr-devbox"
"voicerepublic/linux" -> "voicerepublic/vr-fidelity"
"voicerepublic/linux" -> "voicerepublic/voicerepublic_dev"
"voicerepublic/linux" -> "voicerepublic/vr-knowledge-base-audio-processing"
"voicerepublic/linux" -> "voicerepublic/vr-logorrhoe"
"voicerepublic/linux" -> "voicerepublic/pdf-viewer"
"voicerepublic/linux" -> "voicerepublic/vr-streambox"
"voicerepublic/linux" -> "voicerepublic/vr-mobile"
"leovandriel/caffe2_cpp_tutorial" -> "leovandriel/caffe2_models"
"leovandriel/caffe2_cpp_tutorial" -> "breadbread1984/Caffe2-C-demo"
"leovandriel/caffe2_cpp_tutorial" -> "facebookarchive/tutorials"
"leovandriel/caffe2_cpp_tutorial" -> "zdevito/ATen"
"leovandriel/caffe2_cpp_tutorial" -> "facebookarchive/models" ["e"=1]
"leovandriel/caffe2_cpp_tutorial" -> "warmspringwinds/pytorch-cpp"
"leovandriel/caffe2_cpp_tutorial" -> "KleinYuan/Caffe2-iOS" ["e"=1]
"leovandriel/caffe2_cpp_tutorial" -> "peterneher/peters-stuff"
"CuriousAI/mean-teacher" -> "google-research/mixmatch"
"CuriousAI/mean-teacher" -> "YU1ut/MixMatch-pytorch"
"CuriousAI/mean-teacher" -> "brain-research/realistic-ssl-evaluation"
"CuriousAI/mean-teacher" -> "lyakaap/VAT-pytorch"
"CuriousAI/mean-teacher" -> "yassouali/awesome-semi-supervised-learning"
"CuriousAI/mean-teacher" -> "kekmodel/FixMatch-pytorch"
"CuriousAI/mean-teacher" -> "s-laine/tempens"
"CuriousAI/mean-teacher" -> "benathi/fastswa-semi-sup"
"CuriousAI/mean-teacher" -> "google-research/uda"
"CuriousAI/mean-teacher" -> "takerum/vat_tf"
"CuriousAI/mean-teacher" -> "iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch"
"CuriousAI/mean-teacher" -> "iBelieveCJM/pseudo_label-pytorch"
"CuriousAI/mean-teacher" -> "facebookresearch/mixup-cifar10"
"CuriousAI/mean-teacher" -> "google-research/fixmatch"
"CuriousAI/mean-teacher" -> "wohlert/semi-supervised-pytorch" ["e"=1]
"szagoruyko/diracnets" -> "JianGoForIt/YellowFin_Pytorch"
"szagoruyko/diracnets" -> "kimhc6028/relational-networks" ["e"=1]
"szagoruyko/diracnets" -> "facebookresearch/clevr-iep" ["e"=1]
"szagoruyko/diracnets" -> "szagoruyko/functional-zoo"
"szagoruyko/diracnets" -> "ZhouYanzhao/ORN" ["e"=1]
"szagoruyko/diracnets" -> "torrvision/crayon"
"szagoruyko/diracnets" -> "bayesgroup/variational-dropout-sparsifies-dnn" ["e"=1]
"szagoruyko/diracnets" -> "felixgwu/mask_rcnn_pytorch"
"szagoruyko/diracnets" -> "rwightman/pytorch-dpn-pretrained" ["e"=1]
"szagoruyko/diracnets" -> "locuslab/pytorch_fft"
"bit-bots/imagetagger" -> "l3p-cv/lost"
"bit-bots/imagetagger" -> "fredericobormann/MensaViewer"
"bit-bots/imagetagger" -> "RoboCup-Humanoid-TC/webots"
"bit-bots/imagetagger" -> "bit-bots/YOEO"
"bearpaw/pytorch-classification" -> "hysts/pytorch_image_classification"
"bearpaw/pytorch-classification" -> "kuangliu/pytorch-cifar"
"bearpaw/pytorch-classification" -> "weiaicunzai/pytorch-cifar100"
"bearpaw/pytorch-classification" -> "aaron-xichen/pytorch-playground"
"bearpaw/pytorch-classification" -> "Cadene/pretrained-models.pytorch"
"bearpaw/pytorch-classification" -> "akamaster/pytorch_resnet_cifar10"
"bearpaw/pytorch-classification" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"bearpaw/pytorch-classification" -> "prlz77/ResNeXt.pytorch"
"bearpaw/pytorch-classification" -> "bmsookim/wide-resnet.pytorch"
"bearpaw/pytorch-classification" -> "junyuseu/pytorch-cifar-models"
"bearpaw/pytorch-classification" -> "gpleiss/efficient_densenet_pytorch"
"bearpaw/pytorch-classification" -> "felixgwu/img_classification_pk_pytorch"
"bearpaw/pytorch-classification" -> "msracver/Deformable-ConvNets"
"bearpaw/pytorch-classification" -> "haitongli/knowledge-distillation-pytorch" ["e"=1]
"bearpaw/pytorch-classification" -> "roytseng-tw/Detectron.pytorch"
"chrisranderson/beholder" -> "JianGoForIt/YellowFin_Pytorch"
"chrisranderson/beholder" -> "tensorflow/tensorboard-plugin-example"
"chrisranderson/beholder" -> "TeamHG-Memex/tensorboard_logger"
"chrisranderson/beholder" -> "bioinf-jku/SNNs" ["e"=1]
"ruotianluo/pytorch-faster-rcnn" -> "longcw/faster_rcnn_pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "jwyang/faster-rcnn.pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "chenyuntc/simple-faster-rcnn-pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "roytseng-tw/Detectron.pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "longcw/yolo2-pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "amdegroot/ssd.pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "jwyang/fpn.pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "endernewton/tf-faster-rcnn" ["e"=1]
"ruotianluo/pytorch-faster-rcnn" -> "facebookresearch/maskrcnn-benchmark"
"ruotianluo/pytorch-faster-rcnn" -> "multimodallearning/pytorch-mask-rcnn"
"ruotianluo/pytorch-faster-rcnn" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"ruotianluo/pytorch-faster-rcnn" -> "princeton-vl/CornerNet"
"ruotianluo/pytorch-faster-rcnn" -> "kuangliu/pytorch-retinanet"
"ruotianluo/pytorch-faster-rcnn" -> "tianzhi0549/FCOS"
"ruotianluo/pytorch-faster-rcnn" -> "ayooshkathuria/pytorch-yolo-v3"
"gpleiss/efficient_densenet_pytorch" -> "bamos/densenet.pytorch"
"gpleiss/efficient_densenet_pytorch" -> "liuzhuang13/DenseNet" ["e"=1]
"gpleiss/efficient_densenet_pytorch" -> "andreasveit/densenet-pytorch"
"gpleiss/efficient_densenet_pytorch" -> "longcw/faster_rcnn_pytorch"
"gpleiss/efficient_densenet_pytorch" -> "szagoruyko/attention-transfer" ["e"=1]
"gpleiss/efficient_densenet_pytorch" -> "gaohuang/MSDNet"
"gpleiss/efficient_densenet_pytorch" -> "meetps/pytorch-semseg" ["e"=1]
"gpleiss/efficient_densenet_pytorch" -> "mapillary/inplace_abn" ["e"=1]
"gpleiss/efficient_densenet_pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"gpleiss/efficient_densenet_pytorch" -> "msracver/Deformable-ConvNets"
"gpleiss/efficient_densenet_pytorch" -> "prlz77/ResNeXt.pytorch"
"gpleiss/efficient_densenet_pytorch" -> "ShichenLiu/CondenseNet"
"gpleiss/efficient_densenet_pytorch" -> "lanpa/tensorboardX"
"gpleiss/efficient_densenet_pytorch" -> "longcw/yolo2-pytorch"
"gpleiss/efficient_densenet_pytorch" -> "zijundeng/pytorch-semantic-segmentation" ["e"=1]
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" -> "asanakoy/kaggle_carvana_segmentation"
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" -> "EdwardTyantov/ultrasound-nerve-segmentation" ["e"=1]
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" -> "lyakaap/Kaggle-Carvana-3rd-Place-Solution"
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" -> "floydwch/kaggle-cli" ["e"=1]
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" -> "minerva-ml/open-solution-data-science-bowl-2018"
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" -> "sh1ng/imba" ["e"=1]
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" -> "jocicmarko/ultrasound-nerve-segmentation" ["e"=1]
"zdevito/ATen" -> "warmspringwinds/pytorch-cpp"
"zdevito/ATen" -> "pytorch/extension-cpp"
"zdevito/ATen" -> "torrvision/crayon"
"zdevito/ATen" -> "facebookresearch/TensorComprehensions" ["e"=1]
"zdevito/ATen" -> "chrischoy/pytorch-custom-cuda-tutorial"
"zdevito/ATen" -> "ebetica/autogradpp"
"zdevito/ATen" -> "pytorch/gloo" ["e"=1]
"zdevito/ATen" -> "leovandriel/caffe2_cpp_tutorial"
"zdevito/ATen" -> "Maratyszcza/NNPACK" ["e"=1]
"zdevito/ATen" -> "torch/cunn" ["e"=1]
"zdevito/ATen" -> "salesforce/matchbox" ["e"=1]
"zdevito/ATen" -> "pytorch/extension-ffi"
"zdevito/ATen" -> "szagoruyko/pyinn"
"zdevito/ATen" -> "google/gemmlowp" ["e"=1]
"zdevito/ATen" -> "facebookarchive/torch-rnnlib" ["e"=1]
"BIGBALLON/cifar-10-cnn" -> "persistforever/cifar10-tensorflow"
"BIGBALLON/cifar-10-cnn" -> "BIGBALLON/CIFAR-ZOO"
"BIGBALLON/cifar-10-cnn" -> "wenxinxu/resnet-in-tensorflow" ["e"=1]
"BIGBALLON/cifar-10-cnn" -> "junyuseu/pytorch-cifar-models"
"BIGBALLON/cifar-10-cnn" -> "geifmany/cifar-vgg"
"BIGBALLON/cifar-10-cnn" -> "kuangliu/pytorch-cifar"
"BIGBALLON/cifar-10-cnn" -> "BIGBALLON/Deep-learning-and-practices"
"BIGBALLON/cifar-10-cnn" -> "yhlleo/tensorflow.cifar10"
"BIGBALLON/cifar-10-cnn" -> "bearpaw/pytorch-classification"
"BIGBALLON/cifar-10-cnn" -> "junyuseu/ResNet-on-Cifar10" ["e"=1]
"BIGBALLON/cifar-10-cnn" -> "aaron-xichen/pytorch-playground"
"BIGBALLON/cifar-10-cnn" -> "carlini/nn_robust_attacks" ["e"=1]
"BIGBALLON/cifar-10-cnn" -> "matteo-dunnhofer/imagenet" ["e"=1]
"BIGBALLON/cifar-10-cnn" -> "exelban/tensorflow-cifar-10"
"BIGBALLON/cifar-10-cnn" -> "SpikeKing/keras-yolo3-detection" ["e"=1]
"1zb/deformable-convolution-pytorch" -> "oeway/pytorch-deform-conv"
"1zb/deformable-convolution-pytorch" -> "ChunhuanLin/deform_conv_pytorch"
"1zb/deformable-convolution-pytorch" -> "bharatsingh430/Deformable-ConvNets" ["e"=1]
"1zb/deformable-convolution-pytorch" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"1zb/deformable-convolution-pytorch" -> "yu-changqian/pytorch-segmentation" ["e"=1]
"1zb/deformable-convolution-pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"1zb/deformable-convolution-pytorch" -> "kuangliu/torchcv"
"1zb/deformable-convolution-pytorch" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"1zb/deformable-convolution-pytorch" -> "felixgwu/mask_rcnn_pytorch"
"1zb/deformable-convolution-pytorch" -> "ShadowXZT/pytorch_RFCN"
"1zb/deformable-convolution-pytorch" -> "longcw/RoIAlign.pytorch"
"1zb/deformable-convolution-pytorch" -> "ignacio-rocco/detectorch"
"1zb/deformable-convolution-pytorch" -> "msracver/Deformable-ConvNets"
"min2209/dwt" -> "snakers4/ds_bowl_2018"
"min2209/dwt" -> "dmarcosg/DSAC" ["e"=1]
"min2209/dwt" -> "davyneven/SpatialEmbeddings"
"chrischoy/pytorch-custom-cuda-tutorial" -> "chrischoy/MakePytorchPlusPlus"
"chrischoy/pytorch-custom-cuda-tutorial" -> "szagoruyko/pyinn"
"chrischoy/pytorch-custom-cuda-tutorial" -> "pytorch/extension-ffi"
"chrischoy/pytorch-custom-cuda-tutorial" -> "pytorch/extension-cpp"
"chrischoy/pytorch-custom-cuda-tutorial" -> "sniklaus/pytorch-extension"
"chrischoy/pytorch-custom-cuda-tutorial" -> "oeway/pytorch-deform-conv"
"chrischoy/pytorch-custom-cuda-tutorial" -> "ignacio-rocco/detectorch"
"chrischoy/pytorch-custom-cuda-tutorial" -> "zdevito/ATen"
"chrischoy/pytorch-custom-cuda-tutorial" -> "szagoruyko/binary-wide-resnet"
"igorcmoura/inpaint-object-remover" -> "cantarinigiorgio/Image-Inpainting"
"igorcmoura/inpaint-object-remover" -> "S12P/Inpainting"
"igorcmoura/inpaint-object-remover" -> "sooham/inpainting"
"igorcmoura/inpaint-object-remover" -> "ikuwow/inpainting_criminisi2004"
"igorcmoura/inpaint-object-remover" -> "luigman/image-inpainting"
"abidrahmank/OpenCV2-Python-Tutorials" -> "abidrahmank/OpenCV2-Python"
"abidrahmank/OpenCV2-Python-Tutorials" -> "makelove/OpenCV-Python-Tutorial"
"abidrahmank/OpenCV2-Python-Tutorials" -> "gitanat/simple-ocr-opencv" ["e"=1]
"abidrahmank/OpenCV2-Python-Tutorials" -> "techfort/pycv"
"abidrahmank/OpenCV2-Python-Tutorials" -> "jesolem/PCV"
"abidrahmank/OpenCV2-Python-Tutorials" -> "PyImageSearch/imutils"
"abidrahmank/OpenCV2-Python-Tutorials" -> "JimmyHHua/opencv_tutorials"
"abidrahmank/OpenCV2-Python-Tutorials" -> "abidrahmank/OpenCV-Python"
"abidrahmank/OpenCV2-Python-Tutorials" -> "CodecWang/opencv-python-tutorial"
"abidrahmank/OpenCV2-Python-Tutorials" -> "shekkizh/ImageProcessingProjects" ["e"=1]
"abidrahmank/OpenCV2-Python-Tutorials" -> "opencv/opencv-python" ["e"=1]
"abidrahmank/OpenCV2-Python-Tutorials" -> "mbeyeler/opencv-machine-learning"
"abidrahmank/OpenCV2-Python-Tutorials" -> "sightmachine/SimpleCV"
"abidrahmank/OpenCV2-Python-Tutorials" -> "bsdnoobz/opencv-code" ["e"=1]
"abidrahmank/OpenCV2-Python-Tutorials" -> "MicrocontrollersAndMore/OpenCV_3_License_Plate_Recognition_Python" ["e"=1]
"dhruvramani/C2AE-Multilabel-Classification" -> "chihkuanyeh/C2AE"
"dhruvramani/C2AE-Multilabel-Classification" -> "hinanmu/C2AE_tensorflow"
"dhruvramani/C2AE-Multilabel-Classification" -> "xiaohan2012/sleec_python"
"dhruvramani/C2AE-Multilabel-Classification" -> "algorithmdog/Representation-based-Multilabel-Learning"
"CasiaFan/Dataset_to_VOC_converter" -> "shadowwalker00/CaltechPestrain2VOC"
"CasiaFan/Dataset_to_VOC_converter" -> "mitmul/caltech-pedestrian-dataset-converter"
"CasiaFan/Dataset_to_VOC_converter" -> "Microos/citypersons2voc"
"CasiaFan/Dataset_to_VOC_converter" -> "HiKapok/X-Detector"
"CasiaFan/Dataset_to_VOC_converter" -> "kalyo-zjl/APD"
"hgpvision/darknet" -> "BBuf/Darknet" ["e"=1]
"hgpvision/darknet" -> "marvis/pytorch-caffe-darknet-convert" ["e"=1]
"hgpvision/darknet" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"hgpvision/darknet" -> "eric612/MobileNet-YOLO" ["e"=1]
"hgpvision/darknet" -> "Tencent/ObjectDetection-OneStageDet"
"hgpvision/darknet" -> "princeton-vl/CornerNet"
"hgpvision/darknet" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"hgpvision/darknet" -> "weiliu89/caffe" ["e"=1]
"hgpvision/darknet" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"hgpvision/darknet" -> "ayooshkathuria/pytorch-yolo-v3"
"hgpvision/darknet" -> "qqwweee/keras-yolo3"
"hgpvision/darknet" -> "balancap/SSD-Tensorflow" ["e"=1]
"hgpvision/darknet" -> "pjreddie/darknet"
"hgpvision/darknet" -> "ChenYingpeng/caffe-yolov3" ["e"=1]
"hgpvision/darknet" -> "AlexeyAB/darknet"
"ebattenberg/crbm-drum-patterns" -> "taneishi/CRBM"
"persistforever/cifar10-tensorflow" -> "BIGBALLON/cifar-10-cnn"
"persistforever/cifar10-tensorflow" -> "yhlleo/tensorflow.cifar10"
"persistforever/cifar10-tensorflow" -> "Ecohnoch/tensorflow-cifar100"
"persistforever/cifar10-tensorflow" -> "wenxinxu/resnet-in-tensorflow" ["e"=1]
"persistforever/cifar10-tensorflow" -> "hwalsuklee/tensorflow-mnist-cnn"
"persistforever/cifar10-tensorflow" -> "Cloudox/Cifar10-Classify"
"persistforever/cifar10-tensorflow" -> "wolfib/image-classification-CIFAR10-tf"
"persistforever/cifar10-tensorflow" -> "matteo-dunnhofer/imagenet" ["e"=1]
"bmsookim/wide-resnet.pytorch" -> "xternalz/WideResNet-pytorch"
"bmsookim/wide-resnet.pytorch" -> "szagoruyko/wide-residual-networks" ["e"=1]
"bmsookim/wide-resnet.pytorch" -> "uoguelph-mlrg/Cutout"
"bmsookim/wide-resnet.pytorch" -> "akamaster/pytorch_resnet_cifar10"
"bmsookim/wide-resnet.pytorch" -> "fra31/auto-attack" ["e"=1]
"bmsookim/wide-resnet.pytorch" -> "bearpaw/pytorch-classification"
"bmsookim/wide-resnet.pytorch" -> "RobustBench/robustbench" ["e"=1]
"bmsookim/wide-resnet.pytorch" -> "junyuseu/pytorch-cifar-models"
"bmsookim/wide-resnet.pytorch" -> "BorealisAI/advertorch" ["e"=1]
"bmsookim/wide-resnet.pytorch" -> "andreasveit/densenet-pytorch"
"bmsookim/wide-resnet.pytorch" -> "hendrycks/robustness" ["e"=1]
"bmsookim/wide-resnet.pytorch" -> "MadryLab/robustness" ["e"=1]
"bmsookim/wide-resnet.pytorch" -> "kuangliu/pytorch-cifar"
"bmsookim/wide-resnet.pytorch" -> "DeepVoltaire/AutoAugment"
"bmsookim/wide-resnet.pytorch" -> "yaodongyu/TRADES" ["e"=1]
"sniklaus/pytorch-extension" -> "szagoruyko/pyinn"
"sniklaus/pytorch-extension" -> "edouardoyallon/scatwave"
"Fdevmsy/Image_Classification_with_5_methods" -> "rdcolema/tensorflow-image-classification"
"Fdevmsy/Image_Classification_with_5_methods" -> "Abhishek-Arora/Image-Classification-Using-SVM"
"Fdevmsy/Image_Classification_with_5_methods" -> "efidalgo/AutoBlur-CNN-Features"
"chihkuanyeh/C2AE" -> "hsuantien/mlc_lsdr"
"lucastheis/deepbelief" -> "rodrigosetti/dbn-cuda"
"indeedeng/vowpal-wabbit-java" -> "oavdeev/getbox"
"indeedeng/vowpal-wabbit-java" -> "emakhov/data-quality-framework"
"indeedeng/vowpal-wabbit-java" -> "dartrevan/ChemTextMining"
"indeedeng/vowpal-wabbit-java" -> "dmitrijsc/practical-rl"
"indeedeng/vowpal-wabbit-java" -> "sherman/blobkeeper"
"indeedeng/vowpal-wabbit-java" -> "kiselev1189/EEGClassificationMCNN"
"indeedeng/vowpal-wabbit-java" -> "atrof/atrof.github.io"
"indeedeng/vowpal-wabbit-java" -> "fgvbrt/nips_rl"
"indeedeng/vowpal-wabbit-java" -> "lext/deep_docker"
"indeedeng/vowpal-wabbit-java" -> "n01z3/kaggle_amazon_from_space"
"indeedeng/vowpal-wabbit-java" -> "ArkadiyD/CythonXGB"
"indeedeng/vowpal-wabbit-java" -> "DBusAI/TF_Eager"
"geifmany/cifar-vgg" -> "mjiansun/cifar10-vgg16"
"geifmany/cifar-vgg" -> "chengyangfu/pytorch-vgg-cifar10"
"xiangrufan/keras-mtcnn" -> "bubbliiiing/mtcnn-keras"
"xiangrufan/keras-mtcnn" -> "YIYIMZ/yiyi_mtcnn_keras"
"ahangchen/melon_concepts" -> "xiyusullos/ml_exercise"
"aim-uofa/SegAgent" -> "saraao/amodal"
"warmspringwinds/pytorch-cpp" -> "zdevito/ATen"
"PaddlePaddle/Mobile" -> "PaddlePaddle/tape"
"PaddlePaddle/Mobile" -> "PaddlePaddle/PaddlePaddle.org"
"PaddlePaddle/Mobile" -> "PaddlePaddle/Perf"
"PaddlePaddle/Mobile" -> "PaddlePaddle/continuous_evaluation"
"PaddlePaddle/Mobile" -> "PaddlePaddle/VisionTools"
"PaddlePaddle/Mobile" -> "lcy-seso/LearningNotes"
"lzx1413/CAFFE_SSD" -> "dlyldxwl/fssd.pytorch"
"baidubce/qianfan-models-cookbook" -> "baidubce/bce-qianfan-sdk"
"baidubce/qianfan-models-cookbook" -> "baidubce/app-builder"
"JianGoForIt/YellowFin_Pytorch" -> "JianGoForIt/YellowFin" ["e"=1]
"JianGoForIt/YellowFin_Pytorch" -> "szagoruyko/pyinn"
"JianGoForIt/YellowFin_Pytorch" -> "szagoruyko/diracnets"
"JianGoForIt/YellowFin_Pytorch" -> "vzhong/dashboard" ["e"=1]
"JianGoForIt/YellowFin_Pytorch" -> "fmassa/optimize-net" ["e"=1]
"knowonething/Traffic-Simulation-Tool" -> "WenqiZhang-HIT/MGDN-project"
"bmsookim/fine-tuning.pytorch" -> "meliketoy/image-preprocessing"
"wmingwei/restricted-boltzmann-machine-deep-belief-network-deep-boltzmann-machine-in-pytorch" -> "mehulrastogi/Deep-Belief-Network-pytorch"
"ArkadiyD/CythonXGB" -> "oavdeev/getbox"
"ArkadiyD/CythonXGB" -> "lext/deep_docker"
"ArkadiyD/CythonXGB" -> "n01z3/kaggle_amazon_from_space"
"ArkadiyD/CythonXGB" -> "atrof/atrof.github.io"
"ArkadiyD/CythonXGB" -> "emakhov/data-quality-framework"
"ArkadiyD/CythonXGB" -> "sherman/blobkeeper"
"ArkadiyD/CythonXGB" -> "dmitrijsc/practical-rl"
"ArkadiyD/CythonXGB" -> "kiselev1189/EEGClassificationMCNN"
"ArkadiyD/CythonXGB" -> "dartrevan/ChemTextMining"
"ArkadiyD/CythonXGB" -> "fgvbrt/nips_rl"
"szagoruyko/pyinn" -> "sniklaus/pytorch-extension"
"szagoruyko/pyinn" -> "JianGoForIt/YellowFin_Pytorch"
"szagoruyko/pyinn" -> "chrischoy/pytorch-custom-cuda-tutorial"
"szagoruyko/pyinn" -> "edouardoyallon/pyscatwave"
"gopala-kr/ai-learning-roadmap" -> "srcolinas/roadmap-to-AI"
"gopala-kr/ai-learning-roadmap" -> "mihui/ml"
"n01z3/kaggle_amazon_from_space" -> "sherman/blobkeeper"
"n01z3/kaggle_amazon_from_space" -> "atrof/atrof.github.io"
"n01z3/kaggle_amazon_from_space" -> "oavdeev/getbox"
"n01z3/kaggle_amazon_from_space" -> "emakhov/data-quality-framework"
"n01z3/kaggle_amazon_from_space" -> "lext/deep_docker"
"n01z3/kaggle_amazon_from_space" -> "fgvbrt/nips_rl"
"n01z3/kaggle_amazon_from_space" -> "dartrevan/ChemTextMining"
"n01z3/kaggle_amazon_from_space" -> "ArkadiyD/CythonXGB"
"premolab/SGIMC" -> "atrof/atrof.github.io"
"dfourer/ASTRES_toolbox" -> "tormii/HST"
"PaddlePaddle/recordio" -> "PaddlePaddle/continuous_evaluation"
"PaddlePaddle/recordio" -> "PaddlePaddle/Paddle-bot"
"PaddlePaddle/recordio" -> "PaddlePaddle/tape"
"tensorflow/lucid" ["l"="51.048,29.542"]
"pytorch/captum" ["l"="50.955,29.638"]
"yosinski/deep-visualization-toolbox" ["l"="50.466,33.227"]
"raghakot/keras-vis" ["l"="50.472,33.257"]
"interpretml/interpret" ["l"="45.309,26.145"]
"marcotcr/lime" ["l"="45.438,26.108"]
"greentfrapp/lucent" ["l"="44.751,31.509"]
"cleverhans-lab/cleverhans" ["l"="38.958,-7.394"]
"PAIR-code/facets" ["l"="45.488,25.987"]
"soumith/ganhacks" ["l"="45.764,29.133"]
"lmcinnes/umap" ["l"="45.346,26.158"]
"utkuozbulak/pytorch-cnn-visualizations" ["l"="50.822,29.762"]
"google/dopamine" ["l"="57.536,17.993"]
"google-deepmind/graph_nets" ["l"="52.964,16.035"]
"google-deepmind/sonnet" ["l"="57.431,17.873"]
"google-deepmind/trfl" ["l"="57.506,18.106"]
"jax-ml/jax" ["l"="50.809,29.353"]
"google/flax" ["l"="21.721,13.999"]
"Lightning-AI/pytorch-lightning" ["l"="50.795,29.491"]
"ray-project/ray" ["l"="50.74,29.255"]
"HIPS/autograd" ["l"="45.729,26.037"]
"pytorch/pytorch" ["l"="48.274,28.966"]
"triton-lang/triton" ["l"="38.919,-0.703"]
"google-research/google-research" ["l"="50.731,29.386"]
"deepspeedai/DeepSpeed" ["l"="39.997,0.424"]
"facebookresearch/faiss" ["l"="53.099,26.041"]
"arogozhnikov/einops" ["l"="50.9,29.579"]
"google-deepmind/dm-haiku" ["l"="21.721,14.052"]
"shap/shap" ["l"="45.443,26.065"]
"google-deepmind/deepmind-research" ["l"="50.791,29.428"]
"huggingface/transformers" ["l"="39.827,0.123"]
"horovod/horovod" ["l"="45.559,25.861"]
"huggingface/pytorch-image-models" ["l"="50.672,29.653"]
"albumentations-team/albumentations" ["l"="50.754,29.731"]
"lutzroeder/netron" ["l"="50.438,29.655"]
"facebookresearch/detectron2" ["l"="50.571,29.698"]
"pyg-team/pytorch_geometric" ["l"="53.044,16.016"]
"pytorch/examples" ["l"="50.825,29.621"]
"lucidrains/vit-pytorch" ["l"="50.683,29.606"]
"microsoft/tensorwatch" ["l"="51.022,29.765"]
"timsainb/tensorflow2-generative-models" ["l"="45.975,29.091"]
"TDAmeritrade/stumpy" ["l"="45.458,26.319"]
"benedekrozemberczki/awesome-decision-tree-papers" ["l"="51.649,15.707"]
"lanpa/tensorboardX" ["l"="50.919,29.781"]
"catalyst-team/catalyst" ["l"="50.914,29.869"]
"facebookresearch/hiplot" ["l"="45.406,26.077"]
"waleedka/hiddenlayer" ["l"="50.964,29.876"]
"google-research/tensor2robot" ["l"="59.578,16.474"]
"facebookresearch/XLM" ["l"="53.036,25.657"]
"facebookresearch/maskrcnn-benchmark" ["l"="50.751,29.917"]
"facebookresearch/pytext" ["l"="52.976,25.701"]
"fossasia/visdom" ["l"="51.116,29.383"]
"facebookresearch/mmf" ["l"="48.638,32.057"]
"HumanSignal/label-studio" ["l"="50.437,29.502"]
"cvat-ai/cvat" ["l"="50.495,29.651"]
"HumanSignal/labelImg" ["l"="50.506,29.738"]
"doccano/doccano" ["l"="53.187,27.265"]
"wkentaro/labelme" ["l"="50.51,29.698"]
"ultralytics/ultralytics" ["l"="50.35,29.629"]
"HumanSignal/awesome-data-labeling" ["l"="50.378,29.503"]
"gradio-app/gradio" ["l"="39.955,0.241"]
"iterative/dvc" ["l"="45.319,25.9"]
"mlflow/mlflow" ["l"="45.387,25.899"]
"streamlit/streamlit" ["l"="44.476,20.451"]
"NVIDIA/DeepLearningExamples" ["l"="50.583,29.53"]
"NVIDIA/TensorRT" ["l"="50.264,29.769"]
"NVIDIA/Megatron-LM" ["l"="38.862,-0.695"]
"NVIDIA/NeMo" ["l"="38.896,-0.862"]
"NVIDIA/apex" ["l"="50.832,29.796"]
"triton-inference-server/server" ["l"="39.002,-0.74"]
"NVIDIA/FasterTransformer" ["l"="38.883,-0.641"]
"NVIDIA/DALI" ["l"="50.737,29.833"]
"NVIDIA/nvidia-docker" ["l"="50.492,29.589"]
"PaddlePaddle/VisualDL" ["l"="50.198,29.578"]
"PaddlePaddle/PaddleX" ["l"="50.13,29.609"]
"PaddlePaddle/PaddleDetection" ["l"="50.235,29.715"]
"PaddlePaddle/Serving" ["l"="50.077,29.529"]
"PaddlePaddle/models" ["l"="50.038,29.609"]
"PaddlePaddle/Paddle" ["l"="50.003,29.643"]
"PaddlePaddle/PaddleSeg" ["l"="50.315,29.679"]
"PaddlePaddle/PaddleClas" ["l"="50.169,29.648"]
"PaddlePaddle/PaddleFleetX" ["l"="50.017,29.505"]
"PaddlePaddle/PaddleSlim" ["l"="50.106,29.594"]
"PaddlePaddle/Paddle-Lite" ["l"="50.086,29.69"]
"PaddlePaddle/PGL" ["l"="50.034,29.561"]
"PaddlePaddle/X2Paddle" ["l"="50.045,29.535"]
"PaddlePaddle/PaddleGAN" ["l"="50.136,29.568"]
"HarisIqbal88/PlotNeuralNet" ["l"="50.721,29.525"]
"dair-ai/ml-visuals" ["l"="50.669,29.5"]
"open-mmlab/mmdetection" ["l"="50.617,29.783"]
"vdumoulin/conv_arithmetic" ["l"="50.771,29.68"]
"eriklindernoren/PyTorch-GAN" ["l"="45.694,29.02"]
"aleju/imgaug" ["l"="50.709,29.799"]
"junyanz/pytorch-CycleGAN-and-pix2pix" ["l"="45.639,29.106"]
"google-deepmind/alphafold" ["l"="24.297,13.298"]
"openai/baselines" ["l"="57.585,18.024"]
"google-deepmind/acme" ["l"="57.66,18.169"]
"facebookresearch/detr" ["l"="50.658,29.739"]
"openai/spinningup" ["l"="57.669,17.989"]
"dmlc/dgl" ["l"="52.921,16.046"]
"openai/CLIP" ["l"="50.642,29.547"]
"hysts/pytorch_image_classification" ["l"="51.049,29.956"]
"bearpaw/pytorch-classification" ["l"="51.083,29.978"]
"weiaicunzai/awesome-image-classification" ["l"="50.954,29.91"]
"weiaicunzai/pytorch-cifar100" ["l"="50.989,29.914"]
"lxztju/pytorch_classification" ["l"="51.022,29.903"]
"aaron-xichen/pytorch-playground" ["l"="51.028,29.971"]
"bentrevett/pytorch-image-classification" ["l"="51.118,29.923"]
"Cadene/pretrained-models.pytorch" ["l"="50.832,29.881"]
"kuangliu/pytorch-cifar" ["l"="50.994,29.882"]
"lukemelas/EfficientNet-PyTorch" ["l"="50.814,29.93"]
"clovaai/CutMix-PyTorch" ["l"="51.09,30.177"]
"facebookresearch/pycls" ["l"="50.962,30.059"]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" ["l"="51.076,30.037"]
"akamaster/pytorch_resnet_cifar10" ["l"="51.11,29.955"]
"miraclewkf/ImageClassification-PyTorch" ["l"="51.178,29.921"]
"Tramac/awesome-semantic-segmentation-pytorch" ["l"="53.321,30.92"]
"eriklindernoren/PyTorch-YOLOv3" ["l"="50.655,29.971"]
"ultralytics/yolov3" ["l"="50.567,29.945"]
"ayooshkathuria/pytorch-yolo-v3" ["l"="50.743,30.031"]
"jwyang/faster-rcnn.pytorch" ["l"="50.77,29.946"]
"amdegroot/ssd.pytorch" ["l"="50.808,30.028"]
"Tianxiaomo/pytorch-YOLOv4" ["l"="50.522,30.01"]
"xingyizhou/CenterNet" ["l"="50.687,29.978"]
"qqwweee/keras-yolo3" ["l"="50.584,29.898"]
"AlexeyAB/darknet" ["l"="50.496,29.853"]
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" ["l"="50.7,30.031"]
"amusi/awesome-object-detection" ["l"="50.791,29.909"]
"hoya012/deep_learning_object_detection" ["l"="50.71,29.872"]
"zylo117/Yet-Another-EfficientDet-Pytorch" ["l"="50.672,30.028"]
"YunYang1994/tensorflow-yolov3" ["l"="50.385,32.96"]
"Megvii-BaseDetection/YOLOX" ["l"="50.432,29.878"]
"ultralytics/yolov5" ["l"="50.386,29.716"]
"pjreddie/darknet" ["l"="50.479,29.806"]
"google-ai-edge/mediapipe" ["l"="50.34,29.758"]
"CMU-Perceptual-Computing-Lab/openpose" ["l"="50.442,29.763"]
"Tencent/ncnn" ["l"="50.241,29.805"]
"deepinsight/insightface" ["l"="33.561,29.386"]
"tensorflow/tfjs-models" ["l"="-32.798,-35.764"]
"facebookresearch/segment-anything" ["l"="50.506,29.519"]
"MVIG-SJTU/AlphaPose" ["l"="31.738,28.071"]
"opencv/opencv" ["l"="48.256,29.118"]
"spmallick/learnopencv" ["l"="50.792,29.813"]
"alibaba/MNN" ["l"="50.189,29.806"]
"extreme-assistant/CVPR2024-Paper-Code-Interpretation" ["l"="50.767,29.784"]
"amusi/CVPR2025-Papers-with-Code" ["l"="50.719,29.658"]
"extreme-assistant/ICCV2023-Paper-Code-Interpretation" ["l"="50.93,29.758"]
"amusi/daily-paper-computer-vision" ["l"="50.876,29.818"]
"microsoft/Swin-Transformer" ["l"="50.669,29.705"]
"mrgloom/awesome-semantic-segmentation" ["l"="50.686,29.829"]
"xmu-xiaoma666/External-Attention-pytorch" ["l"="50.615,29.71"]
"jacobgil/pytorch-grad-cam" ["l"="50.726,29.696"]
"facebookresearch/Detectron" ["l"="50.57,29.767"]
"matterport/Mask_RCNN" ["l"="50.58,29.816"]
"rbgirshick/py-faster-rcnn" ["l"="50.507,33.119"]
"tensorflow/models" ["l"="48.134,28.884"]
"BVLC/caffe" ["l"="48.066,29.002"]
"onnx/onnx" ["l"="50.254,29.677"]
"microsoft/onnxruntime" ["l"="50.173,29.746"]
"apache/tvm" ["l"="50.13,29.773"]
"onnx/tutorials" ["l"="50.191,29.845"]
"onnx/models" ["l"="50.143,29.815"]
"apache/mxnet" ["l"="47.989,29.03"]
"pytorch/vision" ["l"="50.737,29.759"]
"osmr/imgclsmob" ["l"="50.727,29.989"]
"zhanghang1989/ResNeSt" ["l"="50.804,30.048"]
"BloodAxe/pytorch-toolbelt" ["l"="50.815,30.167"]
"rwightman/gen-efficientnet-pytorch" ["l"="50.853,30.081"]
"dmlc/gluon-cv" ["l"="50.751,29.974"]
"tensorflow/tpu" ["l"="50.764,30.01"]
"qubvel/classification_models" ["l"="50.648,30.139"]
"qubvel-org/segmentation_models.pytorch" ["l"="50.68,29.784"]
"qubvel/efficientnet" ["l"="50.665,30.064"]
"onnx/onnx-tensorrt" ["l"="53.248,32.637"]
"daquexian/onnx-simplifier" ["l"="50.2,29.876"]
"openvinotoolkit/open_model_zoo" ["l"="64.208,-2.607"]
"wang-xinyu/tensorrtx" ["l"="50.315,29.877"]
"PINTO0309/PINTO_model_zoo" ["l"="49.966,29.931"]
"dusty-nv/jetson-inference" ["l"="53.247,32.512"]
"NVIDIA-AI-IOT/torch2trt" ["l"="53.275,32.58"]
"qubvel/segmentation_models" ["l"="50.661,29.928"]
"keras-team/keras-applications" ["l"="50.567,30.063"]
"bonlime/keras-deeplab-v3-plus" ["l"="53.407,30.745"]
"titu1994/Keras-ResNeXt" ["l"="50.508,33.311"]
"selimsef/dsb2018_topcoders" ["l"="50.54,30.529"]
"titu1994/keras-squeeze-excite-network" ["l"="50.545,33.362"]
"bermanmaxim/LovaszSoftmax" ["l"="53.42,30.909"]
"trent-b/iterative-stratification" ["l"="50.689,30.293"]
"kobiso/CBAM-keras" ["l"="50.602,33.392"]
"qubvel/tta_wrapper" ["l"="50.794,30.531"]
"titu1994/Keras-Classification-Models" ["l"="50.452,33.353"]
"google-research/bert" ["l"="53.095,25.874"]
"facebookresearch/fairseq" ["l"="53.135,25.953"]
"microsoft/unilm" ["l"="38.785,-0.95"]
"GOATmessi8/RFBNet" ["l"="50.841,30.155"]
"lzx1413/PytorchSSD" ["l"="50.876,30.172"]
"sfzhang15/RefineDet" ["l"="50.856,30.175"]
"princeton-vl/CornerNet" ["l"="50.825,30.115"]
"VDIGPKU/M2Det" ["l"="50.835,30.174"]
"GOATmessi8/ASFF" ["l"="50.73,30.161"]
"tianzhi0549/FCOS" ["l"="50.778,30.086"]
"zhaoweicai/cascade-rcnn" ["l"="50.869,30.19"]
"mahyarnajibi/SNIPER" ["l"="50.863,30.155"]
"princeton-vl/CornerNet-Lite" ["l"="50.807,30.139"]
"ShuangXieIrene/ssds.pytorch" ["l"="50.89,30.166"]
"tusen-ai/simpledet" ["l"="50.814,30.097"]
"xingyizhou/ExtremeNet" ["l"="50.835,30.193"]
"Duankaiwen/CenterNet" ["l"="50.797,30.153"]
"zengarden/light_head_rcnn" ["l"="50.909,30.21"]
"Stinky-Tofu/Stronger-yolo" ["l"="50.773,30.163"]
"Tencent/ObjectDetection-OneStageDet" ["l"="50.764,30.065"]
"Adamdad/keras-YOLOv3-mobilenet" ["l"="50.414,32.898"]
"talebolano/yolov3-network-slimming" ["l"="52.829,33.37"]
"eric612/MobileNet-YOLO" ["l"="51.673,33.285"]
"Lam1360/YOLOv3-model-pruning" ["l"="52.792,33.375"]
"wlguan/Stronger-yolo-pytorch" ["l"="50.685,30.322"]
"BobLiu20/YOLOv3_PyTorch" ["l"="50.825,30.133"]
"PengyiZhang/SlimYOLOv3" ["l"="52.844,33.344"]
"fsx950223/mobilenetv2-yolov3" ["l"="50.448,32.83"]
"generalized-iou/g-darknet" ["l"="52.951,33.324"]
"tanluren/yolov3-channel-and-layer-pruning" ["l"="52.798,33.345"]
"megvii-model/ShuffleNet-Series" ["l"="50.831,30.026"]
"liuwei16/CSP" ["l"="50.88,30.311"]
"STVIR/pysot" ["l"="54.681,33.787"]
"foolwood/SiamMask" ["l"="54.672,33.816"]
"xiaolai-sqlai/mobilenetv3" ["l"="50.773,30.036"]
"kuan-wang/pytorch-mobilenet-v3" ["l"="51.845,33.133"]
"d-li14/mobilenetv3.pytorch" ["l"="51.826,33.107"]
"tonylins/pytorch-mobilenet-v2" ["l"="51.783,33.197"]
"leaderj1001/MobileNetV3-Pytorch" ["l"="51.874,33.104"]
"d-li14/mobilenetv2.pytorch" ["l"="51.789,33.171"]
"huawei-noah/Efficient-AI-Backbones" ["l"="50.696,29.909"]
"Zehaos/MobileNet" ["l"="50.428,33.132"]
"OlafenwaMoses/ImageAI" ["l"="50.549,29.843"]
"ageitgey/face_recognition" ["l"="33.654,29.431"]
"davidsandberg/facenet" ["l"="33.416,29.377"]
"thtrieu/darkflow" ["l"="50.392,33.004"]
"fizyr/keras-retinanet" ["l"="50.627,29.882"]
"waspinator/pycococreator" ["l"="50.604,30.039"]
"jsbroks/imantics" ["l"="50.349,29.948"]
"xieenze/PolarMask" ["l"="50.704,30.206"]
"zjhuang22/maskscoring_rcnn" ["l"="50.768,30.109"]
"multimodallearning/pytorch-mask-rcnn" ["l"="50.818,30.068"]
"roytseng-tw/Detectron.pytorch" ["l"="50.882,30.03"]
"chrise96/image-to-coco-json-converter" ["l"="50.4,30.023"]
"aim-uofa/AdelaiDet" ["l"="50.719,30.104"]
"SamsungLabs/adaptis" ["l"="53.213,30.852"]
"youngwanLEE/CenterMask" ["l"="50.669,30.227"]
"ShuLiu1993/PANet" ["l"="50.798,30.122"]
"jsbroks/coco-annotator" ["l"="50.401,29.651"]
"WXinlong/SOLO" ["l"="50.67,30.202"]
"GothicAi/Instaboost" ["l"="50.695,30.191"]
"ming71/mmdetection-annotated" ["l"="50.773,30.182"]
"cocodataset/cocoapi" ["l"="50.663,29.892"]
"yhenon/pytorch-retinanet" ["l"="50.79,30.068"]
"kuangliu/pytorch-retinanet" ["l"="50.916,30.099"]
"sfzhang15/ATSS" ["l"="50.765,30.213"]
"toandaominh1997/EfficientDet.Pytorch" ["l"="50.707,30.119"]
"lufficc/SSD" ["l"="50.788,30.103"]
"jwyang/fpn.pytorch" ["l"="50.882,30.112"]
"open-mmlab/mmsegmentation" ["l"="50.519,29.799"]
"open-mmlab/mmcv" ["l"="50.53,29.877"]
"google-research/vision_transformer" ["l"="50.739,29.626"]
"JunMa11/SegLossOdyssey" ["l"="61.863,36.884"]
"MIC-DKFZ/nnUNet" ["l"="61.832,36.882"]
"milesial/Pytorch-UNet" ["l"="50.605,29.655"]
"Beckschen/TransUNet" ["l"="61.845,36.92"]
"NVIDIA/TensorRT-LLM" ["l"="38.92,-0.621"]
"pytorch/TensorRT" ["l"="53.262,32.686"]
"NVIDIA/cutlass" ["l"="38.965,-0.634"]
"kornia/kornia" ["l"="50.815,29.658"]
"facebookresearch/hydra" ["l"="50.954,29.462"]
"huggingface/accelerate" ["l"="38.719,-0.759"]
"lucidrains/x-transformers" ["l"="45.933,31.614"]
"facebookresearch/xformers" ["l"="38.829,-0.716"]
"KevinMusgrave/pytorch-metric-learning" ["l"="50.92,29.719"]
"ashleve/lightning-hydra-template" ["l"="50.979,29.546"]
"Erkaman/poisson_blend" ["l"="50.604,31.414"]
"owenzlz/DeepImageBlending" ["l"="46.56,31.291"]
"cheind/poisson-image-editing" ["l"="50.624,31.391"]
"Dao-AILab/flash-attention" ["l"="38.876,-0.736"]
"openvinotoolkit/openvino" ["l"="64.163,-2.572"]
"microsoft/VoTT" ["l"="50.42,29.582"]
"WongKinYiu/yolov7" ["l"="50.383,29.816"]
"jsbroks/awesome-dataset-tools" ["l"="50.337,29.425"]
"SkalskiP/make-sense" ["l"="50.393,29.546"]
"UniversalDataTool/universal-data-tool" ["l"="50.369,29.444"]
"kelvins/awesome-mlops" ["l"="47.985,26.358"]
"taivop/awesome-data-annotation" ["l"="50.361,29.4"]
"Hitachi-Automotive-And-Industry-Lab/semantic-segmentation-editor" ["l"="64.464,12.413"]
"abreheret/PixelAnnotationTool" ["l"="50.38,29.578"]
"snorkel-team/snorkel" ["l"="52.691,25.708"]
"EthicalML/awesome-production-machine-learning" ["l"="48.011,26.19"]
"omry/omegaconf" ["l"="50.998,29.604"]
"optuna/optuna" ["l"="45.547,26.085"]
"facebookresearch/pytorch3d" ["l"="63.484,1.559"]
"fastapi/typer" ["l"="44.78,20.724"]
"aimhubio/aim" ["l"="45.216,25.814"]
"vietnh1009/QuickDraw" ["l"="50.886,30.511"]
"vietnh1009/Yolo-v2-pytorch" ["l"="50.702,30.331"]
"anuragreddygv323/computer-vision-projects" ["l"="51.076,30.469"]
"akshaybahadur21/QuickDraw" ["l"="50.917,30.623"]
"vietnh1009/Super-mario-bros-A3C-pytorch" ["l"="57.561,18.15"]
"victordibia/handtrack.js" ["l"="-31.512,-35.723"]
"ByronHsu/Never-Blink" ["l"="-4.238,-28.255"]
"uvipen/Character-level-cnn-tensorflow" ["l"="50.832,30.503"]
"vietnh1009/Very-deep-cnn-pytorch" ["l"="50.805,30.469"]
"vietnh1009/Deeplab-pytorch" ["l"="50.799,30.452"]
"vietnh1009/Character-level-cnn-pytorch" ["l"="50.808,30.486"]
"akshaybhatia10/ComputerVision-Projects" ["l"="51.052,30.491"]
"Bennington-Distributed-Systems-2017/DarkDarkGo" ["l"="-43.946,11.1"]
"vietnh1009/AirGesture" ["l"="50.913,30.59"]
"my8100/files" ["l"="-43.967,11.096"]
"microsoft/MMdnn" ["l"="50.438,29.84"]
"ysh329/deep-learning-model-convertor" ["l"="50.344,33.145"]
"weiliu89/caffe" ["l"="50.506,33.094"]
"IntelLabs/distiller" ["l"="52.71,33.427"]
"ethereon/caffe-tensorflow" ["l"="50.47,33.139"]
"Tencent/PocketFlow" ["l"="52.744,33.373"]
"tensorpack/tensorpack" ["l"="50.5,33.165"]
"amusi/ECCV2024-Papers-with-Code" ["l"="50.862,29.779"]
"amusi/ICCV2023-Papers-with-Code" ["l"="50.838,29.727"]
"52CV/CVPR-2021-Papers" ["l"="50.856,29.757"]
"Sophia-11/Awesome-ICCV" ["l"="51.144,29.679"]
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" ["l"="51.021,29.693"]
"dk-liang/Awesome-Visual-Transformer" ["l"="50.812,29.72"]
"junfu1115/DANet" ["l"="53.435,30.991"]
"HRNet/HRNet-Semantic-Segmentation" ["l"="53.339,30.954"]
"speedinghzl/CCNet" ["l"="53.423,31.008"]
"hoya012/CVPR-2019-Paper-Statistics" ["l"="51.27,29.605"]
"shaohua0116/ICLR2019-OpenReviewData" ["l"="51.463,29.509"]
"hoya012/ICCV-2019-Paper-Statistics" ["l"="51.332,29.574"]
"xiaolonw/TimeCycle" ["l"="47.9,34.57"]
"dbolya/yolact" ["l"="50.644,30.08"]
"WisconsinAIVision/yolact_edge" ["l"="50.578,30.195"]
"Tencent/TNN" ["l"="50.14,29.861"]
"XiaoMi/mace" ["l"="37.239,0.718"]
"OAID/Tengine" ["l"="50.933,2.661"]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["l"="33.454,29.248"]
"RangiLyu/nanodet" ["l"="50.401,29.946"]
"ShiqiYu/libfacedetection" ["l"="33.457,29.3"]
"Swall0w/torchstat" ["l"="50.893,29.934"]
"Lyken17/pytorch-OpCounter" ["l"="50.863,29.894"]
"sovrasov/flops-counter.pytorch" ["l"="50.866,29.917"]
"JiahuiYu/slimmable_networks" ["l"="52.823,34.024"]
"Eric-mingjie/rethinking-network-pruning" ["l"="52.711,33.398"]
"sksq96/pytorch-summary" ["l"="50.953,29.828"]
"yu-changqian/TorchSeg" ["l"="53.383,30.952"]
"666DZY666/micronet" ["l"="52.669,33.387"]
"facebookresearch/fvcore" ["l"="50.889,29.887"]
"zhanghang1989/PyTorch-Encoding" ["l"="53.4,30.931"]
"Oldpan/Pytorch-Memory-Utils" ["l"="50.805,29.968"]
"open-mmlab/mmaction" ["l"="47.884,33.873"]
"facebookresearch/mixup-cifar10" ["l"="51.215,30.222"]
"hongyi-zhang/mixup" ["l"="51.211,30.245"]
"uoguelph-mlrg/Cutout" ["l"="51.177,30.166"]
"vikasverma1077/manifold_mixup" ["l"="51.24,30.239"]
"DeepVoltaire/AutoAugment" ["l"="51.06,30.134"]
"google-research/mixmatch" ["l"="51.323,30.286"]
"CuriousAI/mean-teacher" ["l"="51.351,30.287"]
"YU1ut/MixMatch-pytorch" ["l"="51.361,30.31"]
"kakaobrain/fast-autoaugment" ["l"="51.093,30.156"]
"ildoonet/pytorch-randaugment" ["l"="51.189,30.227"]
"zhunzhong07/Random-Erasing" ["l"="56.034,32.765"]
"LiJunnan1992/DivideMix" ["l"="51.487,30.396"]
"tengshaofeng/ResidualAttentionNetwork-pytorch" ["l"="53.494,31.14"]
"google-research/fixmatch" ["l"="51.331,30.315"]
"google-research/augmix" ["l"="51.12,30.201"]
"endernewton/tf-faster-rcnn" ["l"="50.445,33.088"]
"yhenon/keras-frcnn" ["l"="50.494,33.143"]
"balancap/SSD-Tensorflow" ["l"="50.425,33.061"]
"pierluigiferrari/ssd_keras" ["l"="50.37,33.067"]
"fchollet/deep-learning-models" ["l"="50.375,33.173"]
"ethanhe42/KL-Loss" ["l"="50.841,30.217"]
"zhangxiaosong18/FreeAnchor" ["l"="50.794,30.221"]
"SunShiFu/storm_car_analysis" ["l"="50.035,29.107"]
"jasonclub/SmartCityBackgroundSystem" ["l"="50.058,29.128"]
"onnx/tensorflow-onnx" ["l"="50.108,29.867"]
"onnx/onnx-tensorflow" ["l"="50.088,29.955"]
"onnx/onnxmltools" ["l"="-44.274,6.076"]
"onnx/keras-onnx" ["l"="-44.328,6.033"]
"tensorflow/tensorrt" ["l"="53.102,32.65"]
"ZhangGe6/onnx-modifier" ["l"="-44.202,6.021"]
"onnx/optimizer" ["l"="-44.239,6.049"]
"chenyuntc/simple-faster-rcnn-pytorch" ["l"="50.785,29.984"]
"ruotianluo/pytorch-faster-rcnn" ["l"="50.887,30.059"]
"longcw/faster_rcnn_pytorch" ["l"="50.955,30.041"]
"amusi/Deep-Learning-Interview-Book" ["l"="50.623,28.193"]
"amusi/AI-Job-Notes" ["l"="50.559,28.208"]
"SnailTyan/deep-learning-papers-translation" ["l"="50.799,29.872"]
"foolwood/benchmark_results" ["l"="54.729,33.77"]
"spytensor/prepare_detection_dataset" ["l"="50.751,30.129"]
"ming71/toolbox" ["l"="53.042,31.945"]
"hhaAndroid/mmdetection-mini" ["l"="50.754,30.168"]
"dingjiansw101/AerialDetection" ["l"="53.031,31.986"]
"ruoqianguo/cascade-rcnn_Pytorch" ["l"="50.85,30.194"]
"SJTU-Thinklab-Det/DOTA-DOAI" ["l"="53.056,31.979"]
"PaddlePaddle/PaddleHub" ["l"="50.082,29.627"]
"PaddlePaddle/PaddleNLP" ["l"="53.157,27.17"]
"PaddlePaddle/PaddleOCR" ["l"="50.03,29.7"]
"ymcui/Chinese-BERT-wwm" ["l"="53.357,27.223"]
"PaddlePaddle/ERNIE" ["l"="53.328,27.242"]
"PaddlePaddle/PaddleSpeech" ["l"="38.259,1.518"]
"DayBreak-u/chineseocr_lite" ["l"="46.206,7.407"]
"babysor/MockingBird" ["l"="38.231,1.347"]
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" ["l"="50.824,29.983"]
"sgrvinod/Deep-Tutorials-for-PyTorch" ["l"="48.628,31.81"]
"rafaelpadilla/Object-Detection-Metrics" ["l"="50.692,29.95"]
"qfgaohao/pytorch-ssd" ["l"="50.85,30.106"]
"sgrvinod/a-PyTorch-Tutorial-to-Image-Captioning" ["l"="48.608,31.879"]
"google/automl" ["l"="50.638,30.021"]
"ufoym/deepo" ["l"="50.824,29.691"]
"floydhub/dl-docker" ["l"="47.797,28.859"]
"vahidk/EffectiveTensorflow" ["l"="47.659,28.7"]
"RedditSota/state-of-the-art-result-for-machine-learning-problems" ["l"="47.648,28.737"]
"facebookarchive/caffe2" ["l"="47.886,29.061"]
"kailashahirwar/cheatsheets-ai" ["l"="47.71,28.617"]
"mdbloice/Augmentor" ["l"="50.883,29.85"]
"longpeng2008/yousan.ai" ["l"="50.862,29.985"]
"QianyanTech/Image-Downloader" ["l"="48.295,23.42"]
"donnyyou/torchcv" ["l"="50.91,29.998"]
"ming71/CV_PaperDaily" ["l"="50.774,30.136"]
"ChanChiChoi/awesome-Face_Recognition" ["l"="33.401,29.319"]
"dongdonghy/Detection-PyTorch-Notebook" ["l"="50.736,30.059"]
"longpeng2008/Awesome_DNN_Researchers" ["l"="51.009,29.987"]
"longpeng2008/LongPeng_ML_Course" ["l"="50.93,30.022"]
"xavier-zy/Awesome-pytorch-list-CNVersion" ["l"="50.732,28.294"]
"pprp/SimpleCVReproduction" ["l"="50.678,30.115"]
"snowkylin/tensorflow-handbook" ["l"="50.713,28.214"]
"Captain1986/CaptainBlackboard" ["l"="50.719,30.044"]
"gzr2017/ImageProcessing100Wen" ["l"="51.067,29.79"]
"polarisZhao/awesome-face" ["l"="33.294,29.268"]
"microsoft/computervision-recipes" ["l"="50.808,29.571"]
"jbhuang0604/awesome-computer-vision" ["l"="47.724,28.755"]
"microsoft/nlp-recipes" ["l"="52.848,25.725"]
"ritchieng/the-incredible-pytorch" ["l"="47.978,26.259"]
"rasbt/deeplearning-models" ["l"="50.834,28.404"]
"kjw0612/awesome-deep-vision" ["l"="47.831,28.792"]
"kmario23/deep-learning-drizzle" ["l"="47.784,28.47"]
"fastai/fastbook" ["l"="47.665,28.403"]
"recommenders-team/recommenders" ["l"="59.388,23.856"]
"houxiao/machine_learning_note" ["l"="51.807,29.611"]
"xiyusullos/ml_exercise" ["l"="51.823,29.621"]
"diffgram/diffgram" ["l"="50.432,29.413"]
"argilla-io/argilla" ["l"="52.528,25.718"]
"zenml-io/zenml" ["l"="45.223,25.876"]
"airctic/icevision" ["l"="49.414,28.613"]
"supervisely/supervisely" ["l"="50.276,29.334"]
"eugeneyan/ml-design-docs" ["l"="45.565,26.632"]
"deepchecks/deepchecks" ["l"="45.231,26.033"]
"bit-bots/imagetagger" ["l"="50.337,29.368"]
"Lightning-Universe/lightning-bolts" ["l"="50.957,29.568"]
"Labelbox/labelbox-custom-labeling-apps" ["l"="50.344,29.491"]
"code-kern-ai/refinery" ["l"="52.43,25.674"]
"SeldonIO/seldon-core" ["l"="45.311,25.819"]
"katsura-jp/pytorch-cosine-annealing-with-warmup" ["l"="51.063,30.193"]
"ildoonet/pytorch-gradual-warmup-lr" ["l"="51.069,30.113"]
"qubvel/ttach" ["l"="50.876,30.131"]
"Tony-Y/pytorch_warmup" ["l"="51.14,30.157"]
"Zasder3/train-CLIP" ["l"="49.054,30.363"]
"zhixuhao/unet" ["l"="61.936,36.986"]
"LeeJunHyun/Image_Segmentation" ["l"="61.909,36.964"]
"bigmb/Unet-Segmentation-Pytorch-Nest-of-Unets" ["l"="61.873,36.94"]
"ShawnBIT/UNet-family" ["l"="61.899,36.925"]
"NVIDIA/nccl" ["l"="38.96,-0.676"]
"DeNA/PyTorch_YOLOv3" ["l"="50.784,30.198"]
"andy-yun/pytorch-0.4-yolov3" ["l"="50.909,30.175"]
"marvis/pytorch-yolo3" ["l"="50.919,30.135"]
"marvis/pytorch-yolo2" ["l"="50.902,30.115"]
"longcw/yolo2-pytorch" ["l"="50.882,30.09"]
"UniversalDataTool/react-image-annotate" ["l"="-51.955,-11.537"]
"Slava/label-tool" ["l"="50.242,29.328"]
"gnes-ai/gnes" ["l"="52.9,25.615"]
"l3p-cv/lost" ["l"="50.313,29.395"]
"edtr-io/edtr-io" ["l"="-4.048,-28.708"]
"annotorious/annotorious" ["l"="-52.036,-11.561"]
"juand-r/entity-recognition-datasets" ["l"="53.591,27.503"]
"idealo/imagededup" ["l"="51.052,29.696"]
"idealo/image-quality-assessment" ["l"="46.924,31.348"]
"JohannesBuchner/imagehash" ["l"="51.093,29.608"]
"philipbl/duplicate-images" ["l"="51.208,29.546"]
"idealo/image-super-resolution" ["l"="-34.921,21.625"]
"elisemercury/Duplicate-Image-Finder" ["l"="51.178,29.553"]
"0x90d/videoduplicatefinder" ["l"="38.87,33.222"]
"mlfoundations/open_clip" ["l"="48.974,30.216"]
"visual-layer/fastdup" ["l"="44.969,25.894"]
"rom1504/clip-retrieval" ["l"="49.021,30.321"]
"pytorch/hub" ["l"="50.937,30.005"]
"Luolc/AdaBound" ["l"="50.941,29.967"]
"Eurus-Holmes/LIS-YNP" ["l"="51.272,27.542"]
"facebookresearch/ClassyVision" ["l"="50.934,30.061"]
"facebookresearch/pytorch_GAN_zoo" ["l"="45.846,28.979"]
"PetrochukM/PyTorch-NLP" ["l"="53.04,25.625"]
"kimiyoung/transformer-xl" ["l"="53.149,25.692"]
"pytorch/ignite" ["l"="50.991,29.781"]
"LiyuanLucasLiu/RAdam" ["l"="51.031,30.058"]
"zasdfgbnm/TorchSnooper" ["l"="50.855,30.028"]
"weightagnostic/weightagnostic.github.io" ["l"="-35.381,-2.687"]
"tensorspace-team/tensorspace" ["l"="51.004,29.723"]
"NVIDIA/vid2vid" ["l"="45.652,29.047"]
"tensorflow/adanet" ["l"="45.54,26.002"]
"keras-team/autokeras" ["l"="45.58,26.009"]
"zziz/pwc" ["l"="47.583,28.45"]
"facebookresearch/DensePose" ["l"="31.696,28.046"]
"transcranial/keras-js" ["l"="-32.554,-35.862"]
"subeeshvasu/Awesome-Learning-with-Label-Noise" ["l"="51.437,30.403"]
"weijiaheng/Advances-in-Label-Noise-Learning" ["l"="51.483,30.452"]
"songhwanjun/Awesome-Noisy-Labels" ["l"="51.507,30.423"]
"yassouali/awesome-semi-supervised-learning" ["l"="51.391,30.349"]
"gorkemalgan/deep_learning_with_noisy_labels_literature" ["l"="51.539,30.423"]
"bhanML/Co-teaching" ["l"="51.559,30.425"]
"jason718/awesome-self-supervised-learning" ["l"="52.954,29.587"]
"zhaoxin94/awesome-domain-adaptation" ["l"="51.315,37.646"]
"cleanlab/cleanlab" ["l"="45.132,25.932"]
"HobbitLong/SupContrast" ["l"="52.991,29.56"]
"ZhiningLiu1998/awesome-imbalanced-learning" ["l"="51.335,30.424"]
"FLHonker/Awesome-Knowledge-Distillation" ["l"="53.517,33.556"]
"xialeiliu/Awesome-Incremental-Learning" ["l"="34.032,31.971"]
"TorchSSL/TorchSSL" ["l"="51.361,30.352"]
"open-mmlab/mmselfsup" ["l"="52.975,29.543"]
"fbcotter/pytorch_wavelets" ["l"="52.183,29.905"]
"v0lta/PyTorch-Wavelet-Toolbox" ["l"="52.173,29.885"]
"PyWavelets/pywt" ["l"="52.26,29.888"]
"lpj-github-io/MWCNNv2" ["l"="-35.051,21.394"]
"kymatio/kymatio" ["l"="52.105,29.902"]
"tomrunia/PyTorchWavelets" ["l"="52.142,29.897"]
"lpj0/MWCNN" ["l"="-35.059,21.428"]
"hhb072/WaveletSRNet" ["l"="-35.063,21.358"]
"zh217/torch-dct" ["l"="53.717,31.187"]
"LiQiufu/WaveCNet" ["l"="52.201,29.929"]
"swz30/Restormer" ["l"="-34.985,21.43"]
"kaix90/DCTNet" ["l"="53.688,31.184"]
"benedekrozemberczki/GraphWaveletNeuralNetwork" ["l"="52.79,15.849"]
"BGU-CS-VIL/WTConv" ["l"="49.086,32.894"]
"Po-Hsun-Su/pytorch-ssim" ["l"="45.785,31.332"]
"EndlessSora/focal-frequency-loss" ["l"="50.563,2.676"]
"he-y/Awesome-Pruning" ["l"="52.686,33.403"]
"DingXiaoH/RepVGG" ["l"="50.617,29.93"]
"quark0/darts" ["l"="52.854,33.982"]
"OpenPPL/ppq" ["l"="52.571,33.354"]
"xlite-dev/lite.ai.toolkit" ["l"="50.235,29.859"]
"experiencor/keras-yolo3" ["l"="50.396,32.937"]
"allanzelener/YAD2K" ["l"="50.381,33.03"]
"wizyoung/YOLOv3_TensorFlow" ["l"="50.419,32.928"]
"Paperspace/DataAugmentationForObjectDetection" ["l"="50.856,30.128"]
"maozezhong/CV_ToolBox" ["l"="53.164,13.903"]
"kemaloksuz/ObjectDetectionImbalance" ["l"="50.816,30.199"]
"codebox/image_augmentor" ["l"="50.903,30.086"]
"AgaMiko/data-augmentation-review" ["l"="51.002,30.125"]
"CrazyVertigo/awesome-data-augmentation" ["l"="50.931,30.183"]
"arcelien/pba" ["l"="51.152,30.201"]
"4uiiurz1/pytorch-auto-augment" ["l"="51.134,30.177"]
"mit-han-lab/proxylessnas" ["l"="52.87,34.021"]
"kakaobrain/torchgpipe" ["l"="7.285,-11.069"]
"D-X-Y/AutoDL-Projects" ["l"="52.849,34.023"]
"JunYeopLee/fast-autoaugment-efficientnet-pytorch" ["l"="51.178,30.188"]
"VDIGPKU/DADA" ["l"="51.218,30.193"]
"ecs-vlc/FMix" ["l"="50.987,30.239"]
"dvlab-research/GridMask" ["l"="51.033,30.223"]
"ildoonet/cutmix" ["l"="51.099,30.222"]
"facebookresearch/FixRes" ["l"="50.995,30.15"]
"clovaai/wsolevaluation" ["l"="54.19,31.612"]
"chengdazhi/Deformable-Convolution-V2-PyTorch" ["l"="50.965,30.131"]
"4uiiurz1/pytorch-deform-conv-v2" ["l"="50.984,30.172"]
"CharlesShang/DCNv2" ["l"="50.934,30.158"]
"oeway/pytorch-deform-conv" ["l"="50.998,30.098"]
"msracver/Deformable-ConvNets" ["l"="50.906,30.047"]
"ChunhuanLin/deform_conv_pytorch" ["l"="51.014,30.148"]
"1zb/deformable-convolution-pytorch" ["l"="51.052,30.099"]
"xvjiarui/GCNet" ["l"="53.475,31.045"]
"xinntao/EDVR" ["l"="-35.046,21.581"]
"AlexHex7/Non-local_pytorch" ["l"="53.479,31.065"]
"lucasjinreal/DCNv2_latest" ["l"="50.954,30.209"]
"YapengTian/TDAN-VSR-CVPR-2020" ["l"="-35.125,21.568"]
"fundamentalvision/Deformable-DETR" ["l"="50.74,29.892"]
"microsoft/RepPoints" ["l"="50.782,30.243"]
"Scalsol/RepPointsV2" ["l"="50.756,30.292"]
"justimyhxu/Dense-RepPoints" ["l"="50.78,30.373"]
"Megvii-BaseDetection/BorderDet" ["l"="50.757,30.273"]
"OceanPang/Libra_R-CNN" ["l"="50.832,30.247"]
"FateScript/CenterNet-better" ["l"="50.7,30.277"]
"vacancy/PreciseRoIPooling" ["l"="50.859,30.212"]
"taokong/FoveaBox" ["l"="50.787,30.269"]
"STVIR/Grid-R-CNN" ["l"="50.865,30.275"]
"graetz23/JWave" ["l"="52.485,29.908"]
"nightscape/scave" ["l"="52.516,29.907"]
"ultralytics/JSON2YOLO" ["l"="50.292,30.012"]
"ssaru/convert2Yolo" ["l"="50.332,30.014"]
"vietanhdev/anylabeling" ["l"="48.817,30.008"]
"open-mmlab/mmyolo" ["l"="50.361,29.892"]
"NirAharon/BoT-SORT" ["l"="54.47,32.467"]
"triple-Mu/YOLOv8-TensorRT" ["l"="53.406,32.663"]
"lucasjinreal/yolov7_d2" ["l"="50.381,29.973"]
"TexasInstruments/edgeai-yolov5" ["l"="31.91,28.259"]
"meituan/YOLOv6" ["l"="50.363,29.926"]
"obss/sahi" ["l"="50.456,29.951"]
"rooneysh/Labelme2YOLO" ["l"="50.084,30.05"]
"hukaixuan19970627/yolov5_obb" ["l"="53.126,31.992"]
"AILab-CVC/YOLO-World" ["l"="48.743,30.053"]
"autodistill/autodistill" ["l"="48.728,30.002"]
"cgvict/roLabelImg" ["l"="53.086,31.956"]
"pylabel-project/pylabel" ["l"="50.132,30.114"]
"szagoruyko/pytorchviz" ["l"="50.957,29.781"]
"TylerYep/torchinfo" ["l"="50.964,29.733"]
"skorch-dev/skorch" ["l"="45.56,26.121"]
"meetps/pytorch-semseg" ["l"="53.377,30.884"]
"CoinCheung/pytorch-loss" ["l"="50.967,30.014"]
"clcarwin/focal_loss_pytorch" ["l"="51.001,30.052"]
"Jongchan/attention-module" ["l"="53.525,31.101"]
"ufoym/imbalanced-dataset-sampler" ["l"="51.038,30.033"]
"KaiyangZhou/pytorch-center-loss" ["l"="33.114,29.428"]
"yatengLG/Focal-Loss-Pytorch" ["l"="-52.939,-15.406"]
"JsonChao/ML-Roadmap" ["l"="51.595,29.367"]
"mihui/ml" ["l"="51.571,29.378"]
"gopala-kr/ai-learning-roadmap" ["l"="51.544,29.395"]
"srcolinas/roadmap-to-AI" ["l"="51.515,29.413"]
"luuductrung1234/dev-roadmap" ["l"="51.623,29.326"]
"RoryDuncan/learn-python-roadmap" ["l"="51.661,29.32"]
"RatulGhosh/awesome-machine-learning" ["l"="51.651,29.351"]
"TalalAlrawajfeh/machine-learning-roadmap" ["l"="48.419,25.116"]
"chris-chris/ml-engineer-roadmap" ["l"="48.021,26.139"]
"orsanawwad/awesome-roadmaps" ["l"="26.265,-26.112"]
"L1aoXingyu/Roadmap-of-DL-and-ML" ["l"="50.45,28.184"]
"sayan-feb27/roadmap" ["l"="51.629,29.367"]
"raycad/devops-roadmap" ["l"="26.235,-25.935"]
"yngz/cs-roadmap" ["l"="51.602,29.342"]
"Tencent/tencent-ml-images" ["l"="50.724,30.011"]
"megvii-research/ML-GCN" ["l"="52.824,15.918"]
"openimages/dataset" ["l"="50.533,33.067"]
"Rock-100/FaceKit" ["l"="33.25,29.205"]
"Tencent/FaceDetection-DSFD" ["l"="33.344,29.251"]
"PaddlePaddle/Paddle-Lite-Demo" ["l"="50.011,29.551"]
"ARM-software/ComputeLibrary" ["l"="37.183,0.77"]
"PaddlePaddle/FastDeploy" ["l"="50.118,29.663"]
"keras-team/keras-preprocessing" ["l"="45.774,25.856"]
"keras-team/keras-contrib" ["l"="53.878,27.193"]
"keras-team/keras-tuner" ["l"="45.637,25.918"]
"eriklindernoren/Keras-GAN" ["l"="45.733,29.058"]
"flyyufelix/cnn_finetune" ["l"="50.439,33.234"]
"fchollet/keras-resources" ["l"="47.697,28.66"]
"edouardoyallon/pyscatwave" ["l"="51.797,29.933"]
"lostanlen/scattering.m" ["l"="51.962,29.917"]
"OverLordGoldDragon/ssqueezepy" ["l"="52.302,29.867"]
"SihaoCheng/scattering_transform" ["l"="52.098,29.874"]
"scatnet/scatnet" ["l"="52.129,29.941"]
"j-zarka/SparseScatNet" ["l"="52.101,29.926"]
"edouardoyallon/scalingscattering" ["l"="51.87,29.928"]
"KinWaiCheuk/nnAudio" ["l"="38.518,4.05"]
"csteinmetz1/dasp-pytorch" ["l"="38.771,3.976"]
"csteinmetz1/auraloss" ["l"="38.618,4.005"]
"fossasia/susi_python" ["l"="51.223,28.866"]
"fossasia/FOSSASIA-Office" ["l"="51.189,28.942"]
"fossasia/susi_speech_server" ["l"="51.216,28.899"]
"fossasia/photos.fossasia.org" ["l"="51.182,28.894"]
"fossasia/susi_installer" ["l"="51.205,28.857"]
"voicerepublic/vr-api-specs" ["l"="51.218,28.796"]
"voicerepublic/vr-mobile" ["l"="51.188,28.802"]
"voicerepublic/transitions" ["l"="51.24,28.795"]
"voicerepublic/vr-devbox" ["l"="51.247,28.767"]
"voicerepublic/upscuits" ["l"="51.239,28.813"]
"voicerepublic/vr-fidelity" ["l"="51.267,28.782"]
"voicerepublic/linux" ["l"="51.228,28.779"]
"voicerepublic/vr-logorrhoe" ["l"="51.262,28.75"]
"voicerepublic/activeadmin-dragonfly" ["l"="51.201,28.78"]
"voicerepublic/voicerepublic_dev" ["l"="51.212,28.764"]
"voicerepublic/faye" ["l"="51.211,28.816"]
"yandexdataschool/Practical_RL" ["l"="57.56,17.956"]
"jettify/pytorch-optimizer" ["l"="50.972,29.95"]
"yandexdataschool/Practical_DL" ["l"="-44.358,26.065"]
"Bjarten/early-stopping-pytorch" ["l"="51.015,29.945"]
"nitrain/nitrain" ["l"="51.086,29.846"]
"davidtvs/pytorch-lr-finder" ["l"="50.991,30.071"]
"tczhangzhi/pytorch-distributed" ["l"="50.924,29.897"]
"mortezamg63/Accessing-and-modifying-different-layers-of-a-pretrained-model-in-pytorch" ["l"="51.144,29.993"]
"dreamquark-ai/tabnet" ["l"="45.99,24.7"]
"jadore801120/attention-is-all-you-need-pytorch" ["l"="53.218,25.739"]
"prakashpandey9/Text-Classification-Pytorch" ["l"="53.355,28.716"]
"hujie-frank/SENet" ["l"="50.855,30.055"]
"moskomule/senet.pytorch" ["l"="53.478,31.089"]
"liuzhuang13/DenseNet" ["l"="50.531,33.199"]
"taki0112/SENet-Tensorflow" ["l"="50.54,33.259"]
"KaimingHe/deep-residual-networks" ["l"="50.538,33.165"]
"shelhamer/fcn.berkeleyvision.org" ["l"="50.562,33.144"]
"philferriere/cocoapi" ["l"="50.714,30.072"]
"leoxiaobin/deep-high-resolution-net.pytorch" ["l"="31.728,28.114"]
"conansherry/detectron2" ["l"="50.843,30.259"]
"rafaelpadilla/review_object_detection_metrics" ["l"="50.625,30.104"]
"Cartucho/mAP" ["l"="50.629,29.987"]
"lbin/DCNv2" ["l"="50.992,30.212"]
"CaoWGG/TensorRT-CenterNet" ["l"="53.189,32.699"]
"xingyizhou/CenterTrack" ["l"="54.503,32.59"]
"xingyizhou/CenterNet2" ["l"="50.729,30.212"]
"ifzhang/FairMOT" ["l"="54.531,32.576"]
"yuhuayc/da-faster-rcnn" ["l"="51.729,30.2"]
"krumo/Domain-Adaptive-Faster-RCNN-PyTorch" ["l"="51.736,30.222"]
"VisionLearningGroup/DA_Detection" ["l"="51.687,30.22"]
"tiancity-NJU/da-faster-rcnn-PyTorch" ["l"="51.683,30.21"]
"naoto0804/cross-domain-detection" ["l"="51.687,30.233"]
"megvii-research/CR-DA-DET" ["l"="51.704,30.21"]
"chaoqichen/HTCN" ["l"="51.717,30.224"]
"ChrisAllenMing/GPA-detection" ["l"="51.705,30.201"]
"chengchunhsu/EveryPixelMatters" ["l"="51.702,30.221"]
"xinge008/SCDA" ["l"="51.715,30.205"]
"krumo/Detectron-DA-Faster-RCNN" ["l"="51.758,30.199"]
"harsh-99/SCL" ["l"="51.728,30.211"]
"kevinhkhsu/DA_detection" ["l"="51.717,30.213"]
"divyam02/dafrcnn-pytorch" ["l"="51.693,30.244"]
"AruniRC/detectron-self-train" ["l"="51.752,30.182"]
"kinredon/DA_Detection_Material" ["l"="51.707,30.243"]
"CodecWang/opencv-python-tutorial" ["l"="51.094,29.77"]
"makelove/OpenCV-Python-Tutorial" ["l"="51.124,29.786"]
"JimmyHHua/opencv_tutorials" ["l"="51.099,29.803"]
"fendouai/OpenCVTutorials" ["l"="51.152,29.792"]
"oreillymedia/Learning-OpenCV-3_examples" ["l"="51.179,29.773"]
"CodecWang/learn-opencv-edu" ["l"="-20.388,-28.621"]
"QianMo/OpenCV3-Intro-Book-Src" ["l"="51.211,29.775"]
"vipstone/faceai" ["l"="33.371,29.563"]
"czy36mengfei/tensorflow2_tutorials_chinese" ["l"="50.673,28.262"]
"eastmountyxz/ImageProcessing-Python" ["l"="51.021,29.81"]
"ex2tron/OpenCV-Python-Tutorial" ["l"="51.196,29.723"]
"ShusenTang/Dive-into-DL-PyTorch" ["l"="50.849,28.247"]
"ruiminshen/yolo2-pytorch" ["l"="50.94,30.134"]
"ruiminshen/yolo-tf" ["l"="50.474,32.968"]
"glample/Arnold" ["l"="57.285,18.239"]
"Breakend/gym-extensions" ["l"="57.27,18.305"]
"longcw/RoIAlign.pytorch" ["l"="50.958,30.11"]
"kuangliu/torchcv" ["l"="50.968,30.153"]
"felixgwu/mask_rcnn_pytorch" ["l"="51.093,30.063"]
"ShadowXZT/pytorch_RFCN" ["l"="51.012,30.082"]
"cory8249/yolo2-pytorch" ["l"="51.607,33.558"]
"soeaver/Pytorch_Mask_RCNN" ["l"="50.91,30.16"]
"rwightman/efficientdet-pytorch" ["l"="50.751,30.099"]
"facebookresearch/mobile-vision" ["l"="52.863,34.043"]
"mit-han-lab/once-for-all" ["l"="52.809,34.01"]
"alibaba/euler" ["l"="52.987,16.127"]
"snap-stanford/ogb" ["l"="52.743,16.069"]
"PaddlePaddle/PaddleHelix" ["l"="24.325,13.455"]
"THUDM/CogDL" ["l"="52.756,16.095"]
"alibaba/graph-learn" ["l"="51.621,15.325"]
"PaddlePaddle/PARL" ["l"="57.779,17.985"]
"PaddlePaddle/Paddle2ONNX" ["l"="50.057,29.556"]
"shenweichen/GraphEmbedding" ["l"="52.891,16.098"]
"williamleif/GraphSAGE" ["l"="52.872,16.069"]
"facebookresearch/PyTorch-BigGraph" ["l"="52.97,16.094"]
"yoyoyo-yo/Gasyori100knock" ["l"="5.862,-41.103"]
"KuKuXia/Image_Processing_100_Questions" ["l"="51.174,29.717"]
"Sophia-11/Machine-Learning-Notes" ["l"="50.771,28.062"]
"zergtant/pytorch-handbook" ["l"="50.809,28.286"]
"szq0214/DSOD" ["l"="51.692,33.428"]
"msracver/Relation-Networks-for-Object-Detection" ["l"="50.892,30.15"]
"shicai/MobileNet-Caffe" ["l"="51.674,33.332"]
"Robert-JunWang/Pelee" ["l"="51.725,33.343"]
"bentrevett/a-tour-of-pytorch-optimizers" ["l"="51.27,29.88"]
"Mayurji/Image-Classification-PyTorch" ["l"="51.232,29.904"]
"bentrevett/pytorch-sentiment-analysis" ["l"="53.013,25.707"]
"bentrevett/pytorch-seq2seq" ["l"="53.128,25.731"]
"bentrevett/pytorch-generative-models" ["l"="51.253,29.877"]
"bentrevett/machine-learning-courses" ["l"="51.212,29.893"]
"utkuozbulak/pytorch-custom-dataset-examples" ["l"="51.076,29.917"]
"bentrevett/pytorch-pos-tagging" ["l"="51.337,29.871"]
"ybabakhin/kaggle_salt_bes_phalanx" ["l"="50.556,30.456"]
"tugstugi/pytorch-saltnet" ["l"="50.52,30.513"]
"SeuTao/TGS-Salt-Identification" ["l"="50.466,30.575"]
"amirassov/kaggle-imaterialist" ["l"="50.605,30.418"]
"sneddy/pneumothorax-segmentation" ["l"="50.573,30.451"]
"lRomul/argus-tgs-salt" ["l"="50.547,30.508"]
"pudae/kaggle-humpback" ["l"="50.55,30.478"]
"SeuTao/Humpback-Whale-Identification" ["l"="50.536,30.494"]
"i-pan/kaggle-rsna18" ["l"="50.476,30.516"]
"earhian/Humpback-Whale-Identification-1st-" ["l"="50.575,30.484"]
"bestfitting/kaggle" ["l"="6.042,-41.09"]
"lyakaap/Kaggle-Carvana-3rd-Place-Solution" ["l"="50.526,30.549"]
"pudae/kaggle-hpa" ["l"="50.512,30.49"]
"chenyuntc/pytorch-book" ["l"="50.71,28.363"]
"eragonruan/text-detection-ctpn" ["l"="46.262,7.249"]
"xiaofengShi/CHINESE-OCR" ["l"="46.287,7.304"]
"voicerepublic/vr-knowledge-base-audio-processing" ["l"="51.233,28.743"]
"voicerepublic/pdf-viewer" ["l"="51.253,28.728"]
"fossasia/in.pslab.io" ["l"="51.018,28.882"]
"fossasia/fossasia-jekyll-theme" ["l"="51.045,28.939"]
"fossasia/2021.codeheat.org" ["l"="51.079,29.026"]
"fossasia/eventyay-artwork" ["l"="51.096,28.945"]
"fossasia/summit.fossasia.org" ["l"="51.171,28.861"]
"voicerepublic/vr-streambox" ["l"="51.284,28.756"]
"voicerepublic/vr-backoffice" ["l"="51.29,28.697"]
"Udayraj123/OMRChecker" ["l"="49.783,30.308"]
"iansan5653/open-mcr" ["l"="49.736,30.329"]
"rbaron/omr" ["l"="49.712,30.325"]
"Udayraj123/AndroidOMRHelper" ["l"="49.732,30.305"]
"murtazahassan/Optical-Mark-Recognition-OPENCV" ["l"="50.231,30.08"]
"mythrex/OMR-Scanner" ["l"="49.772,30.347"]
"jansenfelipe/omr" ["l"="49.711,30.344"]
"MohawkMEDIC/omrmarkengine" ["l"="49.733,30.346"]
"SullyChen/Automatic-Grading-OpenCV-Python" ["l"="49.746,30.368"]
"andrewdcampbell/OpenCV-Document-Scanner" ["l"="-52.546,8.256"]
"bthicks/OMR-Grader" ["l"="49.76,30.287"]
"letssolvetogether/OMRChecker" ["l"="49.766,30.33"]
"Practical-CV/OMR-Scanner-and-Test-Grader-using-OpenCV" ["l"="49.753,30.313"]
"Bonfire/OptiGrader" ["l"="49.756,30.299"]
"sakethbachu/OMR-scanner" ["l"="49.787,30.333"]
"IITGuwahati-AI/Learning-Content" ["l"="47.726,28.032"]
"pytorch/tnt" ["l"="51.125,29.856"]
"pytorch/text" ["l"="53.07,25.646"]
"allenai/allennlp" ["l"="53.002,25.738"]
"divamgupta/image-segmentation-keras" ["l"="61.967,37.015"]
"MrGiovanni/UNetPlusPlus" ["l"="61.873,36.968"]
"GeorgeSeif/Semantic-Segmentation-Suite" ["l"="53.387,30.825"]
"NVIDIAGameWorks/kaolin" ["l"="63.668,1.428"]
"colmap/colmap" ["l"="63.413,1.637"]
"yoyolicoris/pytorch-NMF" ["l"="52.139,29.865"]
"aaren/wavelets" ["l"="52.285,29.887"]
"alsauve/scaleogram" ["l"="52.264,29.91"]
"Lightning-AI/torchmetrics" ["l"="50.984,29.581"]
"rbgirshick/yacs" ["l"="50.906,29.919"]
"facebookincubator/submitit" ["l"="21.614,14.08"]
"patrick-kidger/torchtyping" ["l"="21.645,14.092"]
"patrick-kidger/jaxtyping" ["l"="21.793,14.05"]
"onelivesleft/PrettyErrors" ["l"="44.93,20.609"]
"IDSIA/sacred" ["l"="45.555,25.933"]
"google/gin-config" ["l"="21.661,14.029"]
"facebookresearch/fairscale" ["l"="38.777,-0.604"]
"zihangdai/xlnet" ["l"="53.051,25.718"]
"taki0112/Tensorflow-Cookbook" ["l"="50.625,28.329"]
"ajbrock/BigGAN-PyTorch" ["l"="45.825,29.003"]
"tensorflow/lingvo" ["l"="35.536,2.371"]
"juntang-zhuang/Adabelief-Optimizer" ["l"="51.014,30.026"]
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" ["l"="51.453,29.606"]
"PacktPublishing/Mastering-OpenCV-4-with-Python" ["l"="51.395,29.637"]
"PacktPublishing/Learning-OpenCV-5-Computer-Vision-with-Python-Fourth-Edition" ["l"="51.511,29.587"]
"PacktPublishing/Modern-Computer-Vision-with-PyTorch" ["l"="47.632,26.585"]
"moelgendy/deep_learning_for_vision_systems" ["l"="51.49,29.568"]
"PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" ["l"="51.314,29.684"]
"PacktPublishing/Qt-5-and-OpenCV-4-Computer-Vision-Projects" ["l"="-20.51,-28.154"]
"PacktPublishing/Hands-On-Computer-Vision-with-TensorFlow-2" ["l"="47.757,26.828"]
"PacktPublishing/OpenCV-4-with-Python-Blueprints-Second-Edition" ["l"="51.427,29.605"]
"PacktPublishing/OpenCV3-Computer-Vision-Application-Programming-Cookbook-Third-Edition" ["l"="51.498,29.621"]
"PacktPublishing/Python-Natural-Language-Processing-Cookbook" ["l"="51.524,29.558"]
"PacktPublishing/Tensorflow-2.0-Computer-Vision-Cookbook" ["l"="47.751,26.865"]
"dloperab/PyImageSearch-CV-DL-CrashCourse" ["l"="51.782,29.468"]
"PacktPublishing/OpenCV-3-Computer-Vision-with-Python-Cookbook" ["l"="51.383,29.703"]
"gsurma/image_classifier" ["l"="51.753,30.735"]
"IBM/image-classification-using-cnn-and-keras" ["l"="51.804,30.752"]
"lucasjinreal/alfred" ["l"="50.621,30.198"]
"lucasjinreal/thor" ["l"="50.546,30.239"]
"NVIDIA/runx" ["l"="50.653,30.172"]
"WangYueFt/detr3d" ["l"="64.573,11.268"]
"joe-siyuan-qiao/DetectoRS" ["l"="50.74,30.186"]
"lucasjinreal/nb" ["l"="53.285,32.862"]
"chaytonmin/Awesome-BEV-Perception-Multi-Cameras" ["l"="64.567,11.304"]
"V2AI/Det3D" ["l"="64.55,11.041"]
"open-mmlab/OpenPCDet" ["l"="64.523,11.079"]
"siAyush/Data-Structure-and-Algorithms-Study-Plan" ["l"="51.728,29.257"]
"shiv4nsh/awesome-computer-science-resources" ["l"="26.191,-25.465"]
"surajrampure/berkeley-cs-courses" ["l"="31.942,-26.134"]
"AB1908/CS-Books" ["l"="26.246,-25.865"]
"yngz/cs61b" ["l"="-7.098,20.344"]
"marcusklasson/GroceryStoreDataset" ["l"="50.941,30.545"]
"PhilJd/freiburg_groceries_dataset" ["l"="50.954,30.558"]
"gulvarol/grocerydataset" ["l"="50.945,30.517"]
"abhinavsagar/Grocery-Product-Classification" ["l"="50.955,30.583"]
"empathy87/nn-grocery-shelves" ["l"="50.933,30.498"]
"tobiagru/ObjectDetectionGroceryProducts" ["l"="50.928,30.485"]
"timgaripov/swa" ["l"="51.06,30.261"]
"pytorch/contrib" ["l"="51.094,30.333"]
"timgaripov/dnn-mode-connectivity" ["l"="51.215,30.304"]
"benathi/fastswa-semi-sup" ["l"="51.381,30.289"]
"wjmaddox/swa_gaussian" ["l"="22.488,15.393"]
"vacancy/Synchronized-BatchNorm-PyTorch" ["l"="53.403,31.025"]
"ZFTurbo/Weighted-Boxes-Fusion" ["l"="50.733,30.141"]
"ignacio-rocco/detectorch" ["l"="51.033,30.107"]
"CSAILVision/semantic-segmentation-pytorch" ["l"="53.338,30.875"]
"victoresque/pytorch-template" ["l"="51.012,29.651"]
"MrGemy95/Tensorflow-Project-Template" ["l"="47.618,28.765"]
"moemen95/Pytorch-Project-Template" ["l"="51.082,29.655"]
"boost-devs/ai-tech-interview" ["l"="-5.049,-23.235"]
"bharathgs/Awesome-pytorch-list" ["l"="50.741,28.402"]
"L1aoXingyu/Deep-Learning-Project-Template" ["l"="55.86,32.813"]
"zzsza/Boostcamp-AI-Tech-Product-Serving" ["l"="-5.063,-23.26"]
"wjchaoGit/Group-Activity-Recognition" ["l"="47.619,33.875"]
"fxia22/stn.pytorch" ["l"="45.816,27.718"]
"wannabeOG/Mask-RCNN" ["l"="50.832,30.086"]
"AceCoooool/RoIAlign-RoIPool-pytorch" ["l"="51.019,30.19"]
"luuuyi/RefineDet.PyTorch" ["l"="50.831,30.231"]
"yqyao/SSD_Pytorch" ["l"="50.863,30.247"]
"ruoqianguo/DetNet_pytorch" ["l"="50.869,30.231"]
"VDIGPKU/CFENet" ["l"="50.903,30.255"]
"christopher5106/FastAnnotationTool" ["l"="50.409,33.076"]
"Labelbox/labelbox-python" ["l"="50.281,29.416"]
"NaturalIntelligence/imglab" ["l"="50.303,29.444"]
"CSAILVision/LabelMeAnnotationTool" ["l"="50.31,29.495"]
"Cartucho/OpenLabeling" ["l"="50.255,29.476"]
"virajmavani/semi-auto-image-annotation-tool" ["l"="50.303,29.372"]
"visipedia/annotation_tools" ["l"="50.332,29.457"]
"chenyilun95/tf-cpn" ["l"="31.65,28.181"]
"terrychenism/Deformable-ConvNets" ["l"="51.664,33.484"]
"bharatsingh430/soft-nms" ["l"="51.675,33.457"]
"HiKapok/X-Detector" ["l"="51.008,30.38"]
"chengsq/pytorch-lighthead" ["l"="50.987,30.32"]
"farmingyard/ShuffleNet" ["l"="51.668,33.321"]
"ijkguo/mx-rcnn" ["l"="51.729,33.556"]
"miaow1988/ShuffleNet_V2_pytorch_caffe" ["l"="51.719,33.259"]
"TuSimple/mx-maskrcnn" ["l"="51.746,33.537"]
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" ["l"="51.279,29.71"]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" ["l"="36.762,0.699"]
"fengzhenHIT/learnOpenCV4" ["l"="51.395,29.672"]
"PacktPublishing/Building-Computer-Vision-Projects-with-OpenCV4-and-CPlusPlus" ["l"="51.371,29.627"]
"seominseok0429/pytorch-warmup-cosine-lr" ["l"="51.82,30.523"]
"seominseok0429/inception-I3D-NON-LOCAL" ["l"="51.858,30.541"]
"seominseok0429/cifar10-mobilenetv2-pytorch" ["l"="51.853,30.529"]
"J911/DeepLabV3Plus-for-Beginners" ["l"="51.873,30.535"]
"J911/WRN-pytorch" ["l"="51.847,30.516"]
"DaehanKim-Korea/ResNet_SSD_Pytorch" ["l"="51.63,30.469"]
"lars76/kmeans-anchor-boxes" ["l"="50.794,30.177"]
"PaulChongPeng/darknet" ["l"="51.699,33.342"]
"ChenYingpeng/caffe-yolov3" ["l"="51.648,33.285"]
"coldlarry/YOLOv3-complete-pruning" ["l"="52.809,33.362"]
"bubbliiiing/ssd-pytorch" ["l"="50.305,30.244"]
"yatengLG/SSD-Pytorch" ["l"="-52.928,-15.35"]
"XinZhangRadar/awesome-anchor-free-object-detection" ["l"="50.787,30.283"]
"Megvii-BaseDetection/DeFCN" ["l"="50.773,30.294"]
"kuanhungchen/awesome-tiny-object-detection" ["l"="53.911,31.987"]
"Duankaiwen/CPNDet" ["l"="50.818,30.332"]
"ray-lee-94/AnchorFreeDetection" ["l"="50.721,33.457"]
"PeizeSun/SparseR-CNN" ["l"="50.754,30.202"]
"clobotics/piou" ["l"="53.043,32.002"]
"implus/GFocal" ["l"="50.744,30.256"]
"hyz-xmaster/VarifocalNet" ["l"="50.77,30.283"]
"jfzhang95/pytorch-deeplab-xception" ["l"="53.373,30.907"]
"Okery/PyTorch-Simple-MaskRCNN" ["l"="50.628,30.171"]
"mingx9527/Data_Label_Tools" ["l"="50.275,29.573"]
"hzylmf/od-annotation" ["l"="50.189,29.489"]
"lzx1413/labelImgPlus" ["l"="50.194,29.458"]
"yuanyuanli85/Fast_Human_Pose_Estimation_Pytorch" ["l"="31.693,28.202"]
"wucng/TensorExpand" ["l"="50.523,29.98"]
"HRNet/HigherHRNet-Human-Pose-Estimation" ["l"="31.758,28.182"]
"microsoft/human-pose-estimation.pytorch" ["l"="31.699,28.157"]
"regeirk/pycwt" ["l"="52.332,29.899"]
"laszukdawid/PyEMD" ["l"="52.35,29.827"]
"taspinar/siml" ["l"="52.296,29.913"]
"MIT-LCP/wfdb-python" ["l"="63.024,35.254"]
"nigma/pywt" ["l"="52.264,29.858"]
"ct6502/wavelets" ["l"="52.325,29.918"]
"rafat/wavelib" ["l"="52.396,29.913"]
"tslearn-team/tslearn" ["l"="45.498,26.324"]
"AlexeyAB/Yolo_mark" ["l"="50.452,32.935"]
"jekhor/aerial-cars-dataset" ["l"="50.152,29.391"]
"obendidi/Tracking-with-darkflow" ["l"="54.591,32.709"]
"alexandre01/UltimateLabeling" ["l"="-1.478,3.244"]
"developer0hye/Yolo_Label" ["l"="50.207,29.524"]
"ivangrov/YOLOv3-Series" ["l"="50.215,29.426"]
"ceccocats/tkDNN" ["l"="53.224,32.625"]
"cvhciKIT/sloth" ["l"="50.52,33.018"]
"Guanghan/ROLO" ["l"="54.822,33.703"]
"puzzledqs/BBox-Label-Tool" ["l"="50.479,32.998"]
"lzx1413/LabelImgTool" ["l"="50.186,29.429"]
"experiencor/keras-yolo2" ["l"="50.411,33.025"]
"hari-sikchi/awesome-ai-safety" ["l"="51.884,30.273"]
"harsh-99/Sequential-Data-Loader-and-Model-for-Variable-Length-Data" ["l"="51.836,30.253"]
"intel-iot-devkit/smart-retail-analytics" ["l"="51.063,30.655"]
"intel-iot-devkit/store-traffic-monitor-python" ["l"="51.091,30.711"]
"intel-iot-devkit/intruder-detector-python" ["l"="51.086,30.675"]
"vrcarva/vmdpy" ["l"="52.396,29.802"]
"shenmusmart/VMD_python" ["l"="52.423,29.81"]
"vrcarva/ewtpy" ["l"="52.376,29.776"]
"FateMurphy/CEEMDAN_LSTM" ["l"="52.435,29.786"]
"MVRonkin/dsatools" ["l"="52.387,29.818"]
"FateMurphy/CEEMDAN-VMD-GRU" ["l"="52.444,29.765"]
"XinweiJiang/VMD" ["l"="52.414,29.794"]
"sanshuishou/-VMD-Attention-LSTM-" ["l"="52.424,29.763"]
"yunyueye/MVMD" ["l"="52.413,29.819"]
"hustcxl/SP_Lib" ["l"="52.369,29.796"]
"jaidevd/pyhht" ["l"="52.377,29.843"]
"labmlai/labml" ["l"="50.907,29.473"]
"Lightning-Universe/lightning-flash" ["l"="51.035,29.615"]
"labmlai/annotated_deep_learning_paper_implementations" ["l"="50.577,29.37"]
"CalculatedContent/WeightWatcher" ["l"="52.52,25.686"]
"vahidk/EffectivePyTorch" ["l"="23.619,15.003"]
"labmlai/app" ["l"="44.945,29.539"]
"labmlai/python_autocomplete" ["l"="44.867,29.518"]
"AakashKumarNain/annotated_research_papers" ["l"="48.04,26.387"]
"abhishekkrthakur/colabcode" ["l"="47.918,26.533"]
"replicate/keepsake" ["l"="45.305,25.954"]
"fidler-lab/polyrnn-pp-pytorch" ["l"="53.203,30.789"]
"fidler-lab/curve-gcn" ["l"="53.244,30.835"]
"kyamagu/js-segment-annotator" ["l"="50.251,29.429"]
"ahmedbesbes/character-based-cnn" ["l"="50.839,30.566"]
"Sophia-11/Awesome-CVPR-Paper" ["l"="50.917,29.815"]
"ahong007007/awesomeCV" ["l"="50.937,29.929"]
"implus/PytorchInsight" ["l"="53.499,31.047"]
"fudan-zvg/SETR" ["l"="53.247,31.058"]
"apachecn/opencv-doc-zh" ["l"="51.249,29.787"]
"abidrahmank/OpenCV2-Python-Tutorials" ["l"="51.284,29.767"]
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" ["l"="50.359,30.031"]
"luohenyueji/OpenCV-Practical-Exercise" ["l"="51.24,29.717"]
"shouxieai/tensorRT_Pro" ["l"="53.346,32.653"]
"BBuf/Image-processing-algorithm" ["l"="-33.603,23.068"]
"kekmodel/FixMatch-pytorch" ["l"="51.364,30.331"]
"iBelieveCJM/Tricks-of-Semi-supervisedDeepLeanring-Pytorch" ["l"="51.395,30.322"]
"lyakaap/VAT-pytorch" ["l"="51.403,30.281"]
"ildoonet/unsupervised-data-augmentation" ["l"="51.318,30.341"]
"gan3sh500/mixmatch-pytorch" ["l"="23.564,14.857"]
"vikasverma1077/ICT" ["l"="51.378,30.276"]
"google-research/remixmatch" ["l"="51.375,30.319"]
"brain-research/realistic-ssl-evaluation" ["l"="51.395,30.299"]
"bhurat/EWT-Python" ["l"="52.38,29.747"]
"cvdfoundation/open-images-dataset" ["l"="50.717,30.179"]
"cvdfoundation/google-landmark" ["l"="58.074,9.023"]
"EscVM/OIDv4_ToolKit" ["l"="50.46,32.871"]
"Megvii-BaseDetection/cvpods" ["l"="50.792,30.303"]
"ashkamath/mdetr" ["l"="48.833,31.941"]
"raoyongming/DenseCLIP" ["l"="48.818,30.315"]
"lessw2020/Ranger-Deep-Learning-Optimizer" ["l"="51.084,30.086"]
"CyberZHG/keras-radam" ["l"="54.12,27.047"]
"digantamisra98/Mish" ["l"="51.042,30.087"]
"alphadl/lookahead.pytorch" ["l"="51.12,30.107"]
"mgrankin/over9000" ["l"="51.117,30.137"]
"adobe/antialiased-cnns" ["l"="51.025,30.168"]
"lonePatient/lookahead_pytorch" ["l"="51.131,30.12"]
"openseg-group/openseg.pytorch" ["l"="53.345,30.977"]
"zijundeng/pytorch-semantic-segmentation" ["l"="53.401,30.878"]
"gmalivenko/pytorch2keras" ["l"="50.441,30.186"]
"gmalivenko/onnx2keras" ["l"="50.352,30.161"]
"gzuidhof/nn-transfer" ["l"="50.395,30.242"]
"leonidk/pytorch-tf" ["l"="50.405,30.262"]
"see--/keras-centernet" ["l"="50.417,30.318"]
"amir-abdi/keras_to_tensorflow" ["l"="50.3,33.157"]
"ugent-korea/pytorch-unet-segmentation" ["l"="62.024,36.946"]
"jcjohnson/pytorch-examples" ["l"="50.691,28.51"]
"kevinzakka/hypersearch" ["l"="45.739,26.324"]
"hunkim/PyTorchZeroToAll" ["l"="50.637,28.494"]
"Spandan-Madan/Pytorch_fine_tuning_Tutorial" ["l"="51.096,30.27"]
"Spandan-Madan/A-Collection-of-important-tasks-in-pytorch" ["l"="51.147,30.097"]
"awwong1/torchprof" ["l"="50.686,30.005"]
"demuxin/pytorch_tricks" ["l"="50.897,29.974"]
"Lyken17/Efficient-PyTorch" ["l"="50.696,30.06"]
"MisaOgura/flashtorch" ["l"="53.523,30.992"]
"Lyken17/pytorch-memonger" ["l"="50.751,30.05"]
"BlackHC/tfpyth" ["l"="44.78,29.47"]
"ptrblck/pytorch_misc" ["l"="61.815,36.673"]
"shrubb/box-convolutions" ["l"="50.845,30.616"]
"tanglang96/DataLoaders_DALI" ["l"="50.9,30.017"]
"xuannianz/EfficientDet" ["l"="50.627,30.13"]
"titu1994/keras-efficientnets" ["l"="50.545,33.395"]
"chrischoy/MakePytorchPlusPlus" ["l"="51.413,29.991"]
"chrischoy/pytorch-custom-cuda-tutorial" ["l"="51.381,30.009"]
"AKSHAYUBHAT/ImageSegmentation" ["l"="50.186,29.377"]
"commaai/commacoloring" ["l"="50.133,29.319"]
"annotorious/annotorious-v1" ["l"="50.594,32.967"]
"eBay/modanet" ["l"="43.565,30.763"]
"bearpaw/clothing-co-parsing" ["l"="43.537,30.803"]
"TimoSaemann/caffe-segnet-cudnn5" ["l"="53.52,30.758"]
"alexgkendall/SegNet-Tutorial" ["l"="53.505,30.8"]
"analyticalmindsltd/smote_variants" ["l"="51.491,30.564"]
"felix-last/kmeans_smote" ["l"="51.529,30.6"]
"ZhiningLiu1998/imbalanced-ensemble" ["l"="51.436,30.524"]
"dialnd/imbalanced-algorithms" ["l"="51.504,30.59"]
"dd1github/DeepSMOTE" ["l"="51.552,30.588"]
"ZhiningLiu1998/self-paced-ensemble" ["l"="51.456,30.538"]
"damianhorna/multi-imbalance" ["l"="51.464,30.578"]
"Albertsr/Class-Imbalance" ["l"="51.566,30.655"]
"scikit-learn-contrib/DESlib" ["l"="45.375,26.417"]
"chongshengzhang/Multi_Imbalance" ["l"="51.46,30.558"]
"syxiaa/RSMOTE" ["l"="51.524,30.581"]
"gykovacs/common_datasets" ["l"="51.525,30.568"]
"tgsmith61591/smrt" ["l"="51.528,30.624"]
"scikit-learn-contrib/imbalanced-learn" ["l"="45.488,26.194"]
"georgedouzas/imbalanced-learn-extra" ["l"="51.549,30.608"]
"younesse-cv/PatchMatch" ["l"="50.505,31.924"]
"ZQPei/patchmatch_inpainting" ["l"="50.493,31.946"]
"zmoratto/PatchMatch" ["l"="65.443,4.976"]
"vacancy/PyPatchMatch" ["l"="50.512,31.894"]
"MingtaoGuo/PatchMatch" ["l"="50.522,31.947"]
"chwahaha/Space-Time-completion-of-Image" ["l"="50.482,31.9"]
"eg4000/SKU110K_CVPR19" ["l"="50.893,30.373"]
"Anymake/DRN_CVPR2020" ["l"="53.026,32.003"]
"Media-Smart/SKU110K-DenseDet" ["l"="33.589,29.054"]
"tyomj/product_detection" ["l"="50.914,30.469"]
"ParallelDots/generic-sku-detection-benchmark" ["l"="50.919,30.453"]
"shayanalibhatti/Retail-Store-Item-Detection-using-YOLOv5" ["l"="50.998,30.558"]
"xg-chu/CrowdDet" ["l"="50.818,30.39"]
"twangnh/Distilling-Object-Detectors" ["l"="53.653,33.492"]
"zhaoweicai/Detectron-Cascade-RCNN" ["l"="50.815,30.213"]
"YuwenXiong/py-R-FCN" ["l"="51.715,33.474"]
"abeardear/pytorch-YOLO-v1" ["l"="50.669,30.183"]
"motokimura/yolo_v1_pytorch" ["l"="50.642,30.303"]
"yjh0410/new-YOLOv1_PyTorch" ["l"="50.607,30.321"]
"Tshzzz/pytorch_yolov1" ["l"="50.591,30.259"]
"duanyiqun/YOLO-Minimal" ["l"="50.607,30.265"]
"yjh0410/yolov2-yolov3_PyTorch" ["l"="50.634,30.337"]
"yjh0410/PyTorch_YOLOv1" ["l"="50.584,30.346"]
"tztztztztz/yolov2.pytorch" ["l"="50.652,30.365"]
"Peterisfar/YOLOV3" ["l"="50.703,30.306"]
"bubbliiiing/efficientnet-yolo3-pytorch" ["l"="50.252,30.276"]
"ShichenLiu/CondenseNet" ["l"="51.178,30.053"]
"gaohuang/MSDNet" ["l"="51.203,30.036"]
"jianghaojun/CondenseNetV2" ["l"="49.268,32.968"]
"chenxi116/PNASNet.pytorch" ["l"="52.954,34.063"]
"gpleiss/efficient_densenet_pytorch" ["l"="51.093,30.011"]
"avirambh/MSDNet-GCN" ["l"="51.229,30.044"]
"homles11/IGCV3" ["l"="51.861,33.354"]
"prlz77/ResNeXt.pytorch" ["l"="51.125,30.038"]
"cypw/DPNs" ["l"="51.705,33.526"]
"soeaver/caffe-model" ["l"="51.656,33.388"]
"enyac-group/single-path-nas" ["l"="52.883,34.051"]
"clarkyu2016/Become-a-Data-Analyst" ["l"="51.761,29.25"]
"PepperGo/WebTechnologies" ["l"="51.745,29.246"]
"jodaz/speedstudy" ["l"="51.736,29.234"]
"carlosavieira/self-study" ["l"="51.751,29.262"]
"desicochrane/data-science-masters" ["l"="51.762,29.229"]
"jiweibo/ImageNet" ["l"="51.069,30.017"]
"htqin/IR-Net" ["l"="52.489,33.536"]
"floydhub/imagenet" ["l"="51.219,29.996"]
"chenyaofo/pytorch-cifar-models" ["l"="38.941,-7.604"]
"huyvnphan/PyTorch_CIFAR10" ["l"="38.969,-7.538"]
"jiecaoyu/pytorch_imagenet" ["l"="51.454,37.419"]
"zgcr/SimpleAICV_pytorch_training_examples" ["l"="50.812,30.292"]
"bmsookim/wide-resnet.pytorch" ["l"="51.148,30.018"]
"chengyangfu/pytorch-vgg-cifar10" ["l"="51.155,29.937"]
"hendrycks/robustness" ["l"="38.902,-7.543"]
"tomgoldstein/loss-landscape" ["l"="38.946,-7.574"]
"BorealisAI/advertorch" ["l"="38.999,-7.484"]
"RobustBench/robustbench" ["l"="38.999,-7.51"]
"junyuseu/pytorch-cifar-models" ["l"="51.165,29.973"]
"TKKim93/DivMatch" ["l"="51.693,30.204"]
"wangs311/awesome-domain-adaptation-object-detection" ["l"="51.727,30.238"]
"kinredon/umt" ["l"="51.711,30.232"]
"facebookresearch/adaptive_teacher" ["l"="51.731,30.251"]
"kinredon/Harmonious-Teacher" ["l"="51.763,30.25"]
"hikvision-research/ProbabilisticTeacher" ["l"="51.749,30.259"]
"CityU-AIM-Group/SIGMA" ["l"="51.761,30.238"]
"motokimura/PyTorch_Gaussian_YOLOv3" ["l"="52.922,33.306"]
"jwchoi384/Gaussian_YOLOv3" ["l"="52.887,33.325"]
"WongKinYiu/CrossStagePartialNetworks" ["l"="50.676,30.141"]
"rcrandall/PatchMatch" ["l"="50.51,32.001"]
"ikuwow/PatchMatch" ["l"="50.513,31.983"]
"o0o0o0o0o0o0o/image-processing-from-scratch" ["l"="51.169,29.747"]
"rmislam/PythonSIFT" ["l"="63.085,37.2"]
"ZeLianWen/Image-Registration" ["l"="63.07,37.251"]
"gloomyfish1998/opencv_tutorial" ["l"="51.267,29.735"]
"CV-xueba/A01_cvclass_basic" ["l"="60.809,9.219"]
"zonechen1994/CV_Interview" ["l"="50.476,28.218"]
"harleyszhang/cv_note" ["l"="50.517,28.214"]
"jhfmat/ISP-pipeline-hdrplus" ["l"="-34.606,22.327"]
"dd604/refinedet.pytorch" ["l"="50.879,30.292"]
"Ranchentx/EFGRNet" ["l"="50.761,30.374"]
"KimSoybean/ScratchDet" ["l"="50.846,30.281"]
"uoip/SSD-variants" ["l"="50.921,30.233"]
"libuyu/GHM_Detection" ["l"="50.882,30.217"]
"open-mmlab/mmpretrain" ["l"="50.465,29.896"]
"open-mmlab/mmdetection3d" ["l"="64.503,11.149"]
"open-mmlab/mmdeploy" ["l"="50.347,29.856"]
"open-mmlab/mmagic" ["l"="-35.002,21.54"]
"open-mmlab/mmengine" ["l"="50.421,29.903"]
"open-mmlab/mmaction2" ["l"="47.969,33.787"]
"qqlu/Amodal-Instance-Segmentation-through-KINS-Dataset" ["l"="50.598,30.589"]
"YutingXiao/Amodal-Segmentation-Based-on-Visible-Region-Segmentation-and-Shape-Prior" ["l"="50.612,30.602"]
"Wakeupbuddy/amodalAPI" ["l"="50.602,30.57"]
"Consulting4J/lazymongo" ["l"="50.549,30.679"]
"waiyulam/ORCNN" ["l"="50.614,30.584"]
"PINTO0309/onnx2tf" ["l"="49.882,29.935"]
"MPolaris/onnx2tflite" ["l"="-54.166,-12.496"]
"sithu31296/PyTorch-ONNX-TFLite" ["l"="49.906,29.958"]
"cinastanbean/pytorch-onnx-tensorflow-pb" ["l"="50.011,29.984"]
"MTLab/onnx2caffe" ["l"="51.613,33.212"]
"uxlfoundation/oneDNN" ["l"="37.195,0.838"]
"kuangliu/pytorch-ssd" ["l"="51.022,30.207"]
"c0nn3r/RetinaNet" ["l"="51.032,30.135"]
"bharatsingh430/Deformable-ConvNets" ["l"="51.692,33.487"]
"gaopinghai/LabelWeb" ["l"="50.142,29.436"]
"vandyyu/dataset_labeling" ["l"="50.145,29.455"]
"liu-nlper/SLTK" ["l"="53.581,27.48"]
"liuhuanyong/TopicCluster" ["l"="54.056,28.925"]
"veronikayurchuk/pretrained-models.pytorch" ["l"="51.091,30.13"]
"clcarwin/convert_torch_to_pytorch" ["l"="51.111,30.05"]
"youansheng/pytorch-cv" ["l"="31.531,28.187"]
"Fangyh09/Image2LMDB" ["l"="50.59,30.123"]
"rmccorm4/PyTorch-LMDB" ["l"="50.601,30.113"]
"lartpang/PyTorchTricks" ["l"="50.815,30.004"]
"vahidk/tfrecord" ["l"="50.58,30.164"]
"xunge/pytorch_lmdb_imagenet" ["l"="50.526,30.172"]
"yuhuixu1993/PC-DARTS" ["l"="52.866,34.058"]
"BayesWatch/sequential-imagenet-dataloader" ["l"="50.537,30.146"]
"keisukeirie/quickdraw_prediction_model" ["l"="50.916,30.666"]
"fanbyprinciple/air_paint" ["l"="50.926,30.649"]
"EvilPsyCHo/Attention-PyTorch" ["l"="49.98,30.412"]
"bubbliiiing/Keras-Attention" ["l"="50.154,30.321"]
"thomlake/pytorch-attention" ["l"="49.921,30.429"]
"yuquanle/Attention-Mechanisms-paper" ["l"="49.926,30.456"]
"StacyYang/gluoncv-torch" ["l"="53.444,31.022"]
"PacktPublishing/Hands-On-Machine-Learning-with-OpenCV-4" ["l"="51.425,29.588"]
"mabelcalim/waipy" ["l"="52.316,29.89"]
"grinsted/wavelet-coherence" ["l"="52.35,29.926"]
"fastlib/fCWT" ["l"="52.373,29.89"]
"LinkedEarth/Pyleoclim_util" ["l"="52.376,29.961"]
"yangysc/Wavelet-HFCM" ["l"="52.457,29.953"]
"IgorSusmelj/pytorch-styleguide" ["l"="51.045,29.65"]
"paperswithcode/releasing-research-code" ["l"="-3.828,23.492"]
"bighuang624/AI-research-tools" ["l"="-4.035,23.517"]
"lightly-ai/lightly" ["l"="52.926,29.524"]
"willard-yuan/pcv-book-code" ["l"="51.439,29.695"]
"jesolem/PCV" ["l"="51.418,29.731"]
"yeyun111/dlcv_for_beginners" ["l"="51.313,29.733"]
"techfort/pycv" ["l"="51.381,29.735"]
"tinyzqh/Opencv-Computer-Vision-Practice-Python-" ["l"="51.564,29.637"]
"DragonFive/cv_nlp_deeplearning" ["l"="51.507,29.677"]
"takerum/vat_tf" ["l"="51.436,30.281"]
"perrying/realistic-ssl-evaluation-pytorch" ["l"="51.422,30.326"]
"siit-vtt/semi-supervised-learning-pytorch" ["l"="51.439,30.308"]
"9310gaurav/virtual-adversarial-training" ["l"="51.459,30.286"]
"iBelieveCJM/pseudo_label-pytorch" ["l"="51.422,30.314"]
"ZHKKKe/DualStudent" ["l"="51.363,37.216"]
"s-laine/tempens" ["l"="51.42,30.286"]
"richardaecn/class-balanced-loss" ["l"="51.236,30.398"]
"vandit15/Class-balanced-loss-pytorch" ["l"="51.189,30.32"]
"kaidic/LDAM-DRW" ["l"="51.286,30.43"]
"megvii-research/BBN" ["l"="51.247,30.421"]
"zhmiao/OpenLongTailRecognition-OLTR" ["l"="51.253,30.44"]
"facebookresearch/classifier-balancing" ["l"="51.269,30.42"]
"KaihuaTang/Long-Tailed-Recognition.pytorch" ["l"="51.276,30.457"]
"frank-xwang/RIDE-LongTailRecognition" ["l"="51.262,30.457"]
"YyzHarry/imbalanced-semi-self" ["l"="51.31,30.421"]
"richardaecn/cvpr18-inaturalist-transfer" ["l"="-52.993,-16.884"]
"visipedia/inat_comp" ["l"="51.298,30.494"]
"tztztztztz/eql.detectron2" ["l"="51.048,30.36"]
"dvlab-research/MiSLAS" ["l"="51.246,30.476"]
"zzw-zwzhang/Awesome-of-Long-Tailed-Recognition" ["l"="51.289,30.45"]
"jiawei-ren/BalancedMetaSoftmax-Classification" ["l"="51.25,30.463"]
"jiangtaoxie/fast-MPN-COV" ["l"="-53.02,-16.891"]
"gidariss/FewShotWithoutForgetting" ["l"="57.762,19.331"]
"iCGY96/awesome_OpenSetRecognition_list" ["l"="52.69,14.179"]
"dvlab-research/Parametric-Contrastive-Learning" ["l"="51.28,30.486"]
"Vanint/Awesome-LongTailed-Learning" ["l"="51.296,30.467"]
"abhijitbendale/OSDN" ["l"="52.75,14.179"]
"MaureenZOU/Adaptive-anti-Aliasing" ["l"="51.135,30.233"]
"fyu/drn" ["l"="53.475,30.876"]
"richzhang/antialiased-cnns" ["l"="51.11,30.247"]
"JudyYe/zero-shot-gcn" ["l"="58.004,19.353"]
"zhanghang1989/RegNet-Search-PyTorch" ["l"="52.939,34.156"]
"D-X-Y/Awesome-AutoDL" ["l"="52.837,34.003"]
"facebookresearch/vissl" ["l"="52.961,29.524"]
"Vanint/SADE-AgnosticLT" ["l"="51.271,30.478"]
"ShadeAlsha/LTR-weight-balancing" ["l"="51.264,30.498"]
"ahangchen/melon_concepts" ["l"="51.819,29.64"]
"Microstrong0305/Machine-Learning-ZhouZhiHua" ["l"="51.861,29.618"]
"HadXu/ML-From-Scratch" ["l"="51.775,29.629"]
"wererLinC/Machine_Learning" ["l"="51.834,29.604"]
"williamFalcon/test-tube" ["l"="51.131,29.717"]
"Lightning-AI/deep-learning-project-template" ["l"="51.048,29.579"]
"zygmuntz/hyperband" ["l"="45.682,26.263"]
"henripal/labnotebook" ["l"="45.596,25.93"]
"torrvision/crayon" ["l"="51.239,29.958"]
"harvardnlp/pytorch-struct" ["l"="57.622,29.477"]
"ikostrikov/pytorch-flows" ["l"="23.076,14.457"]
"Kaixhin/FGLab" ["l"="45.533,25.579"]
"salesforce/matchbox" ["l"="53.862,24.659"]
"facebookresearch/higher" ["l"="57.824,19.464"]
"fengzhenHIT/OpenCV-contrib-module-Chinese-Tutorials" ["l"="51.337,29.693"]
"laganiere/OpenCV3Cookbook" ["l"="51.426,29.643"]
"sundyCoder/DEye" ["l"="53.268,13.995"]
"Galloping-Vijay/laravel-wjfcms" ["l"="-55.341,-14.215"]
"Crytochain/Chain-Go" ["l"="-55.254,-14.27"]
"JChrysanthemum/VSMD" ["l"="-55.327,-14.209"]
"HAIRLAB/Pre_Surv_COVID_19" ["l"="-55.301,-14.251"]
"H-Liu1997/Pytorch-Networks" ["l"="-55.23,-14.263"]
"ir-st/ANPT" ["l"="-55.327,-14.226"]
"CodeFrankZZZ/machine_learning" ["l"="-55.349,-14.229"]
"chenmingxiang110/Chinese-automatic-speech-recognition" ["l"="-55.307,-14.218"]
"Cryptochain-VON/VON-Mask" ["l"="-55.244,-14.262"]
"mortimer-cra/AlarmRobot" ["l"="-55.288,-14.236"]
"Cryptochain-VON/Crypto" ["l"="-55.247,-14.277"]
"chenmingxiang110/Growing-Neural-Cellular-Automata" ["l"="-55.242,-14.292"]
"HaloTrouvaille/YOLO-Multi-Backbones-Attention" ["l"="-55.315,-14.242"]
"hongwen1993/fast-drools-spring-boot-starter" ["l"="-55.206,-14.253"]
"shaoshengsong/MobileNetV3-SSD" ["l"="51.902,33.096"]
"lucasjinreal/ssds_pytorch" ["l"="51.086,30.308"]
"bobo0810/PytorchNetHub" ["l"="50.699,30.16"]
"dragen1860/Deep-Learning-with-PyTorch-Tutorials" ["l"="50.771,28.307"]
"bubbliiiing/yolov4-pytorch" ["l"="50.374,30.173"]
"chenyuntc/pytorch-best-practice" ["l"="50.992,30.009"]
"ShomyLiu/pytorch-relation-extraction" ["l"="55.671,26.637"]
"ypwhs/dogs_vs_cats" ["l"="46.064,6.916"]
"L1aoXingyu/pytorch-beginner" ["l"="50.616,28.448"]
"spytensor/pytorch-image-classification" ["l"="42.427,25.982"]
"chenyuntc/PyTorchText" ["l"="53.483,27.369"]
"L1aoXingyu/code-of-learn-deep-learning-with-pytorch" ["l"="50.647,28.377"]
"willemmanuel/poisson-image-editing" ["l"="50.67,31.159"]
"PPPW/poisson-image-editing" ["l"="50.666,31.195"]
"yskmt/pb" ["l"="50.724,30.867"]
"deepankarc/image-poisson-blending" ["l"="50.662,31.229"]
"takerum/vat" ["l"="51.452,30.269"]
"jik0730/VAT-pytorch" ["l"="51.439,30.264"]
"naoto0804/pytorch-VAT" ["l"="51.437,30.253"]
"ferretj/temporal-ensembling" ["l"="51.447,30.295"]
"xinmei9322/SNTG" ["l"="51.402,30.265"]
"ZhaoZhibin/DL-based-Intelligent-Diagnosis-Benchmark" ["l"="51.456,38.006"]
"hustcxl/Rotating-machine-fault-data-set" ["l"="51.45,37.985"]
"gkaposto/Swarm-Decomposition" ["l"="52.357,29.769"]
"ZhaoZhibin/UDTL" ["l"="51.478,38.006"]
"rssr25/Computer-Vision" ["l"="51.069,30.558"]
"PacktPublishing/OpenCV-Computer-Vision-Projects-with-Python" ["l"="51.135,30.32"]
"moadmmh/Awesome-OpenCV" ["l"="51.059,30.538"]
"HuaJiuShi/-MATLAB-GUI-" ["l"="50.206,30.123"]
"Graceliulingzi/MATLAB-GUI-design--image-processing" ["l"="50.166,30.126"]
"chuanqi305/MobileNet-SSD" ["l"="51.709,33.321"]
"chuanqi305/MobileNetv2-SSDLite" ["l"="51.692,33.305"]
"openseg-group/OCNet.pytorch" ["l"="53.407,30.968"]
"uber-research/UPSNet" ["l"="53.247,30.919"]
"SeuTao/kaggle-competition-solutions" ["l"="50.481,30.567"]
"matrixgardener/statistical_learning_method" ["l"="50.417,30.642"]
"wangjiegit/WJImageBrowser" ["l"="50.441,30.631"]
"luyunfeng/soulcoder" ["l"="50.386,30.663"]
"matrixgardener/matrixgardener.github.io" ["l"="-52.895,-16.574"]
"bomberjin/BM-commons-Utils" ["l"="50.421,30.622"]
"FishPlusOrange/pocket-manual" ["l"="50.448,30.613"]
"weijiyang/webpack-chunk" ["l"="50.451,30.597"]
"jieyuanfei/jianshu-react-mobile" ["l"="50.427,30.605"]
"wangjiegit/WJBannerView" ["l"="-52.901,-16.555"]
"weijiyang/wechat" ["l"="50.466,30.607"]
"lvis-dataset/lvis-api" ["l"="50.893,30.239"]
"mapillary/inplace_abn" ["l"="53.427,30.924"]
"pytorch/extension-cpp" ["l"="51.386,29.973"]
"isdanni/log-bst" ["l"="51.452,29.93"]
"isdanni/mit6.824" ["l"="51.471,29.939"]
"zdevito/ATen" ["l"="51.447,29.977"]
"szagoruyko/pyinn" ["l"="51.471,29.961"]
"isdanni/log-boost" ["l"="51.45,29.952"]
"pytorch/extension-ffi" ["l"="51.449,30.003"]
"tczhangzhi/pytorch-parallel" ["l"="-51.515,-14.703"]
"isdanni/rating" ["l"="51.435,29.948"]
"NVIDIA-developer-blog/code-samples" ["l"="36.723,0.91"]
"NVIDIA/cccl" ["l"="36.699,0.959"]
"KnowingNothing/MatmulTutorial" ["l"="36.884,0.961"]
"knjcode/imgdupes" ["l"="51.264,29.507"]
"umbertogriffo/fast-near-duplicate-image-search" ["l"="51.293,29.495"]
"markusressel/py-image-dedup" ["l"="51.235,29.518"]
"mehulrastogi/Deep-Belief-Network-pytorch" ["l"="51.067,30.982"]
"wmingwei/restricted-boltzmann-machine-deep-belief-network-deep-boltzmann-machine-in-pytorch" ["l"="51.062,30.966"]
"AmanPriyanshu/Deep-Belief-Networks-in-PyTorch" ["l"="51.083,30.974"]
"GabrielBianconi/pytorch-rbm" ["l"="51.042,30.975"]
"zhuofupan/Pytorch-Deep-Neural-Networks" ["l"="51.093,31.02"]
"albertbup/deep-belief-network" ["l"="51.072,30.937"]
"AlvinLXS/DBN-and-RBM-in-pytorch" ["l"="51.07,31.015"]
"lonePatient/Deep_Learning_For_Computer_Vision_With_Python" ["l"="51.989,29.356"]
"pivapi/Deep-Learning-For-Computer-Vision-With-Python" ["l"="52.013,29.35"]
"TyroneLi/pyimagesearchcode" ["l"="52.007,29.331"]
"Abhs9/DL4CVStarterBundle" ["l"="51.963,29.382"]
"DeepSystems/supervisely-tutorials" ["l"="46.357,7.002"]
"ryouchinsa/Rectlabel-support" ["l"="50.223,29.368"]
"supervisely/dataset-tools" ["l"="50.258,29.3"]
"DIYer22/boxx" ["l"="50.147,30.156"]
"jbohnslav/opencv_transforms" ["l"="50.373,30.125"]
"BUCT-Vision/weekly-review" ["l"="50.095,30.171"]
"jytime/Mask_RCNN_Pytorch" ["l"="50.706,30.14"]
"ucbdrive/dla" ["l"="51.038,30.292"]
"kimyoon-young/centerNet-deep-sort" ["l"="54.517,32.651"]
"vmware/data-annotator-for-machine-learning" ["l"="50.359,29.335"]
"asanakoy/kaggle_carvana_segmentation" ["l"="50.543,30.567"]
"petrosgk/Kaggle-Carvana-Image-Masking-Challenge" ["l"="50.51,30.588"]
"ternaus/TernausNet" ["l"="61.919,37.013"]
"minerva-ml/open-solution-data-science-bowl-2018" ["l"="50.561,30.567"]
"killthekitten/kaggle-ds-bowl-2018-baseline" ["l"="50.544,30.606"]
"broadinstitute/keras-rcnn" ["l"="50.586,33.076"]
"lopuhin/kaggle-dsbowl-2018-dataset-fixes" ["l"="50.539,30.589"]
"ternaus/robot-surgery-segmentation" ["l"="61.893,37.05"]
"xiaozhouwang/tensorflow_speech_recognition_solution" ["l"="50.652,30.662"]
"snakers4/ds_bowl_2018" ["l"="50.513,30.633"]
"lopuhin/kaggle-dstl" ["l"="42.008,24.016"]
"jacobkie/2018DSB" ["l"="50.527,30.577"]
"Lopezurrutia/DSB_2018" ["l"="50.524,30.564"]
"mirzaevinom/data_science_bowl_2018" ["l"="50.523,30.602"]
"pdima/kaggle_2018_data_science_bowl_solution" ["l"="50.512,30.572"]
"PavelOstyakov/predictions_balancing" ["l"="50.505,30.505"]
"samuelschen/DSB2018" ["l"="50.56,30.584"]
"izmailovpavel/contrib_swa_examples" ["l"="51.11,30.371"]
"google-research/uda" ["l"="51.287,30.273"]
"SanghunYun/UDA_pytorch" ["l"="51.338,30.34"]
"jasonwei20/eda_nlp" ["l"="53.43,27.163"]
"makcedward/nlpaug" ["l"="52.729,25.717"]
"zhanlaoban/EDA_NLP_for_Chinese" ["l"="53.472,27.213"]
"princeton-nlp/SimCSE" ["l"="53.339,27.107"]
"brightmart/albert_zh" ["l"="53.393,27.247"]
"namisan/mt-dnn" ["l"="53.308,27.184"]
"brightmart/roberta_zh" ["l"="53.414,27.216"]
"PaddlePaddle/Paddle3D" ["l"="50.062,29.578"]
"PaddlePaddle/Paddle-Inference-Demo" ["l"="49.979,29.513"]
"PaddlePaddle/docs" ["l"="49.979,29.491"]
"PaddlePaddle/Parakeet" ["l"="37.343,2.474"]
"AgentMaker/Paddle-Image-Models" ["l"="35.611,1.948"]
"PaddlePaddle/PaddleYOLO" ["l"="50.132,29.641"]
"felix-last/evaluate-kmeans-smote" ["l"="51.551,30.625"]
"GYee/CV_interviews_Q-A" ["l"="50.498,28.202"]
"amusi/CV-Company-List" ["l"="50.514,28.238"]
"yizt/Grad-CAM.pytorch" ["l"="23.978,14.468"]
"lcylmhlcy/Awesome-algorithm-interview" ["l"="50.531,28.194"]
"ispc-lab/SmallObjectDetectionList" ["l"="53.921,31.959"]
"martisak/dotnets" ["l"="50.931,29.262"]
"gwding/draw_convnet" ["l"="47.648,28.967"]
"Stonesjtu/pytorch_memlab" ["l"="50.741,29.947"]
"prigoyal/pytorch_memonger" ["l"="50.532,30.099"]
"zhengzhugithub/CV-arXiv-Daily" ["l"="-51.529,-14.832"]
"creafz/pytorch-cnn-finetune" ["l"="51.002,30.53"]
"dmitrijsc/practical-rl" ["l"="50.978,30.671"]
"kiselev1189/EEGClassificationMCNN" ["l"="50.979,30.685"]
"ternaus/TernausNetV2" ["l"="50.972,30.634"]
"alexeygrigorev/libftrl-python" ["l"="51.001,30.669"]
"oavdeev/getbox" ["l"="50.991,30.672"]
"emakhov/data-quality-framework" ["l"="50.989,30.685"]
"sherman/blobkeeper" ["l"="50.995,30.68"]
"dartrevan/ChemTextMining" ["l"="50.985,30.677"]
"n01z3/kaggle_amazon_from_space" ["l"="51.002,30.689"]
"DBusAI/TF_Eager" ["l"="50.987,30.663"]
"ArkadiyD/CythonXGB" ["l"="51.005,30.68"]
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" ["l"="51.101,29.572"]
"seopbo/nlp_classification" ["l"="-5.067,-23.122"]
"lyakaap/pytorch-template" ["l"="6.084,-41.018"]
"ryul99/pytorch-project-template" ["l"="51.172,29.588"]
"ritchieng/deep-learning-wizard" ["l"="47.791,26.523"]
"hagerrady13/ERFNet-PyTorch" ["l"="51.134,29.616"]
"scaelles/DEXTR-PyTorch" ["l"="53.241,30.75"]
"chengchengzi/Digital-Image-Processing" ["l"="50.428,30.084"]
"Ultrasty/Digital-Image-Processing" ["l"="50.442,30.095"]
"qcymkxyc/Image-Process" ["l"="50.54,30.047"]
"LiuFG/digital_image_process" ["l"="50.471,30.087"]
"MAhaitao999/digital_image_processing" ["l"="50.461,30.075"]
"matlablyz/Digital-images" ["l"="50.336,30.108"]
"HansKing98/MATLAB-Image-Processing" ["l"="50.384,30.099"]
"my3rs/ImageQt" ["l"="-20.387,-28.027"]
"hanskrupakar/COCO-Style-Dataset-Generator-GUI" ["l"="50.238,29.973"]
"Tony607/labelme2coco" ["l"="50.109,30.018"]
"Chien-Hung/DetVisGUI" ["l"="50.191,29.987"]
"psinger/kaggle-landmark-recognition-2020-1st-place" ["l"="58.171,8.944"]
"nyanp/nyaggle" ["l"="6,-41.074"]
"frazerlin/fcanet" ["l"="53.192,30.585"]
"shuyucool/Labelme" ["l"="50.281,29.297"]
"szagoruyko/binary-wide-resnet" ["l"="51.486,30.027"]
"McDonnell-Lab/1-bit-per-weight" ["l"="51.529,30.03"]
"kuangliu/pytorch-fpn" ["l"="50.927,30.117"]
"unsky/FPN" ["l"="51.641,33.435"]
"ruoqianguo/FPN_Pytorch" ["l"="50.902,30.224"]
"megvii-research/megvii-pku-dl-course" ["l"="49.739,30.068"]
"megvii-research/tf-tutorials" ["l"="49.707,30.11"]
"MegEngine/Models" ["l"="49.729,30.037"]
"megvii-research/megvii-tsinghua-dl-course" ["l"="49.64,30.128"]
"MegEngine/Hub" ["l"="49.709,30.063"]
"megvii-research/hpman" ["l"="49.681,30.104"]
"MegEngine/MegEngine" ["l"="49.984,29.855"]
"heefe92/Relation_Networks-pytorch" ["l"="50.961,30.188"]
"choasup/SIN" ["l"="53.808,30.588"]
"bailvwangzi/repulsion_loss_ssd" ["l"="50.917,30.358"]
"ethanhe42/softer-NMS" ["l"="50.879,30.249"]
"miguelvr/dropblock" ["l"="51.074,30.228"]
"Randl/DropBlock-pytorch" ["l"="51.131,30.277"]
"XingangPan/IBN-Net" ["l"="55.986,32.807"]
"switchablenorms/Switchable-Normalization" ["l"="53.428,31.11"]
"joe-siyuan-qiao/WeightStandardization" ["l"="53.404,31.129"]
"zhuofupan/Tensorflow-Deep-Neural-Networks" ["l"="51.097,30.995"]
"JustusvLiebig/Soft_Sensor_Experiments" ["l"="46.561,29.731"]
"erika1203/dbnPytorch" ["l"="51.106,31.056"]
"bobo0810/HS-ResNet" ["l"="50.617,30.223"]
"bobo0810/LearnDeepSpeed" ["l"="50.583,30.233"]
"DingXiaoH/ACNet" ["l"="53.491,31.025"]
"pprp/voc2007_for_yolo_torch" ["l"="50.618,30.155"]
"bbaibowen/computer-vision" ["l"="54.457,32.854"]
"yell/boltzmann-machines" ["l"="51.009,30.936"]
"echen/restricted-boltzmann-machines" ["l"="51.038,30.924"]
"meownoid/tensorflow-rbm" ["l"="51.018,30.817"]
"wuaalb/keras_extensions" ["l"="51.028,30.891"]
"andrewgordonwilson/bayesgan" ["l"="23.543,14.82"]
"netket/netket" ["l"="21.815,17.724"]
"PIQuIL/QuCumber" ["l"="21.778,17.728"]
"gabrieleangeletti/Deep-Learning-TensorFlow" ["l"="51.057,30.901"]
"omimo/xRBM" ["l"="51.021,31.008"]
"MelJan/PyDeep" ["l"="50.987,30.969"]
"reiinakano/gan-playground" ["l"="50.97,31.01"]
"astorfi/TensorFlow-World-Resources" ["l"="47.481,28.69"]
"nitishsrivastava/deepnet" ["l"="47.998,28.919"]
"ofirnachum/tree_rnn" ["l"="46.054,27.805"]
"Wizaron/instance-segmentation-pytorch" ["l"="50.376,30.903"]
"hq-jiang/instance-segmentation-with-discriminative-loss-tensorflow" ["l"="50.388,30.886"]
"davyneven/fastSceneUnderstanding" ["l"="50.366,30.882"]
"davyneven/SpatialEmbeddings" ["l"="50.401,30.861"]
"aimerykong/Recurrent-Pixel-Embedding-for-Instance-Grouping" ["l"="50.35,30.902"]
"nyoki-mtl/pytorch-discriminative-loss" ["l"="50.34,30.937"]
"linksense/LightNet" ["l"="53.44,30.897"]
"kulikovv/DeepColoring" ["l"="50.364,30.949"]
"harryhan618/LaneNet" ["l"="64.202,10.357"]
"twke18/Adaptive_Affinity_Fields" ["l"="53.38,31.152"]
"min2209/dwt" ["l"="50.425,30.811"]
"ternaus/kaggle_dstl_submission" ["l"="41.999,24.039"]
"ex4sperans/maggot" ["l"="50.968,30.683"]
"neptune-ai/open-solution-mapping-challenge" ["l"="42.537,23.163"]
"lext/deep_docker" ["l"="50.995,30.7"]
"fgvbrt/nips_rl" ["l"="50.987,30.696"]
"Dumbris/trunklucator" ["l"="50.977,30.695"]
"atrof/atrof.github.io" ["l"="50.987,30.701"]
"vfdev-5/UDA-pytorch" ["l"="51.324,30.363"]
"Jongchan/unsupervised_data_augmentation_pytorch" ["l"="51.328,30.377"]
"sud0301/my_uda_pytorch" ["l"="51.3,30.357"]
"peisuke/UnsupervisedDataAugmentation.pytorch" ["l"="51.307,30.369"]
"maple-research-lab/EnAET" ["l"="51.386,30.418"]
"lucidrains/lambda-networks" ["l"="50.866,30.012"]
"google-research/noisystudent" ["l"="51.239,30.261"]
"Alibaba-MIIL/TResNet" ["l"="51.157,30.36"]
"szq0214/MEAL-V2" ["l"="53.585,33.623"]
"facebookresearch/WSL-Images" ["l"="50.95,30.344"]
"clovaai/assembled-cnn" ["l"="58.073,8.813"]
"snu-mllab/Co-Mixup" ["l"="51.212,30.267"]
"JasonZhang156/awesome-mixed-sample-data-augmentation" ["l"="51.158,30.272"]
"nupurkmr9/S2M2_fewshot" ["l"="57.772,19.263"]
"snu-mllab/PuzzleMix" ["l"="51.138,30.259"]
"DaikiTanak/manifold_mixup" ["l"="51.281,30.234"]
"Westlake-AI/openmixup" ["l"="52.794,29.435"]
"lucidrains/byol-pytorch" ["l"="53.015,29.515"]
"VDIGPKU/CBNet_caffe" ["l"="50.74,30.227"]
"Sense-X/TSD" ["l"="50.811,30.258"]
"chongruo/detectron2-ResNeSt" ["l"="50.741,30.243"]
"thangvubk/Cascade-RPN" ["l"="50.807,30.276"]
"plynx-team/plynx" ["l"="50.947,30.746"]
"belskikh/kekas" ["l"="50.866,30.664"]
"ryfeus/stepfunctions2processing" ["l"="50.957,30.762"]
"YaYaB/shuffle-big-file" ["l"="50.955,30.784"]
"alxmamaev/theloop" ["l"="51.004,30.752"]
"imedslab/pytorch_bn_fusion" ["l"="51.065,30.692"]
"imedslab/solt" ["l"="51.069,30.625"]
"toodef/neural-pipeline" ["l"="50.855,30.695"]
"goodok/fastai_sparse" ["l"="50.911,30.736"]
"zyfra/ebonite" ["l"="50.899,30.702"]
"osai-ai/tensor-stream" ["l"="50.836,30.728"]
"osai-ai/dokai" ["l"="50.832,30.791"]
"CompVis/metric-learning-divide-and-conquer" ["l"="32.773,29.461"]
"lRomul/argus" ["l"="50.815,30.796"]
"lRomul/rosny" ["l"="50.828,30.773"]
"lRomul/argus-freesound" ["l"="39.763,5.247"]
"MyLtYkRiTiK/ComputerVision_Tutorials_in_Russian" ["l"="50.872,30.744"]
"DmitriiShubin/SBD" ["l"="50.91,30.759"]
"unit8co/vegans" ["l"="23.585,14.868"]
"kiselev1189/insightface-just-works" ["l"="50.875,30.775"]
"Yorko/gender-unbiased_BERT-based_pronoun_resolution" ["l"="50.865,30.727"]
"lopuhin/kaggle-jigsaw-2019" ["l"="51.016,30.779"]
"aabzaliev/google-coreference-3rd-place" ["l"="50.926,30.809"]
"epoch8/keras_elmo_bert" ["l"="50.934,30.836"]
"Tony607/Keras_Bag_of_Tricks" ["l"="51.267,30.081"]
"SJTU-DL-lab/Bag_of_Tricks_CNN" ["l"="51.218,30.071"]
"WordZzzz/fisheye_calibration" ["l"="60.655,10.299"]
"caiqi/mean-teacher-cross-domain-detection" ["l"="51.691,30.198"]
"youtubevos/MaskTrackRCNN" ["l"="50.675,30.49"]
"JialeCao001/SipMask" ["l"="50.631,30.381"]
"youtubevos/cocoapi" ["l"="50.672,30.511"]
"YuqingWang1029/VisTR" ["l"="50.673,30.529"]
"sabarim/STEm-Seg" ["l"="50.658,30.465"]
"VisualComputingInstitute/TrackR-CNN" ["l"="54.483,32.662"]
"seoungwugoh/STM" ["l"="47.756,34.658"]
"jiawen-zhu/Awesome-Video-Instance-Segmentation" ["l"="50.668,30.557"]
"VisualComputingInstitute/mots_tools" ["l"="54.439,32.651"]
"sydney0zq/PTSNet" ["l"="47.719,34.699"]
"lyxok1/STM-Training" ["l"="47.766,34.645"]
"wjf5203/SeqFormer" ["l"="50.675,30.596"]
"andr345/frtm-vos" ["l"="47.758,34.686"]
"FoundationVision/VNext" ["l"="50.689,30.608"]
"hustvl/CrossVIS" ["l"="50.68,30.573"]
"DetectionTeamUCAS/Cascade-RCNN_Tensorflow" ["l"="52.849,31.988"]
"Hao-Gong/cascade-rcnn-fpn-faster_rcnn-pytorch1.0" ["l"="50.899,30.275"]
"yqyao/FCOS_PLUS" ["l"="50.787,30.256"]
"Lausannen/NAS-FCOS" ["l"="52.897,34.138"]
"HRNet/HRNet-FCOS" ["l"="61.42,37.72"]
"KiveeDong/CentripetalNet" ["l"="50.723,30.315"]
"zhenghao977/FCOS-PyTorch" ["l"="50.293,28.456"]
"aliborji/DetectionUpperbound" ["l"="50.763,30.357"]
"harveyslash/PatchMatch" ["l"="50.539,31.967"]
"MingtaoGuo/Deep-image-analogy-TensorFlow" ["l"="46.256,28.929"]
"YuanTingHsieh/Image_Completion" ["l"="50.537,31.901"]
"zhaoyuzhi/deepfillv2" ["l"="44.705,29.272"]
"Ben-Louis/Deep-Image-Analogy-PyTorch" ["l"="45.772,29.439"]
"nebula-beta/PatchMatch" ["l"="65.395,4.944"]
"microsoft/CoCosNet-v2" ["l"="44.741,30.505"]
"MingtaoGuo/sngan_projection_TensorFlow" ["l"="46.227,28.94"]
"FangjinhuaWang/PatchmatchNet" ["l"="60.445,9.309"]
"ildoonet/data-science-bowl-2018" ["l"="50.513,30.661"]
"nicolefinnie/kaggle-dsb2018" ["l"="50.5,30.653"]
"Hsuxu/Loss_ToolBox-PyTorch" ["l"="61.983,36.866"]
"wuzheng-sjtu/FastFPN" ["l"="51.614,33.479"]
"xmyqsh/FPN" ["l"="51.636,33.477"]
"rois-codh/kmnist" ["l"="50.176,30.663"]
"rois-codh/kaokore" ["l"="50.126,30.707"]
"ranihorev/Kuzushiji_MNIST" ["l"="50.147,30.686"]
"tascj/kaggle-kuzushiji-recognition" ["l"="50.316,30.55"]
"megagonlabs/ginza" ["l"="5.766,-41.007"]
"tsterbak/keras_tta" ["l"="50.78,30.636"]
"artyompal/google_landmark_2019" ["l"="50.767,30.718"]
"musket-ml/segmentation_training_pipeline" ["l"="50.756,30.768"]
"flaboss/python_stratified_sampling" ["l"="50.763,30.749"]
"amusi/CVPR2019-Code" ["l"="50.89,30.186"]
"amusi/PyTorch-From-Zero-To-One" ["l"="50.625,28.302"]
"amusi/TensorFlow-From-Zero-To-One" ["l"="50.565,28.241"]
"PavelOstyakov/pipeline" ["l"="50.431,30.555"]
"lopuhin/kaggle-script-template" ["l"="50.459,30.555"]
"liaopeiyuan/kaggle-solutions" ["l"="50.437,30.575"]
"amirassov/kaggle-pneumothorax" ["l"="50.445,30.528"]
"marvis/pytorch-caffe-darknet-convert" ["l"="51.664,33.272"]
"hosang/gossipnet" ["l"="50.933,30.316"]
"acm5656/ssd_pytorch" ["l"="50.971,30.284"]
"yahoojapan/AnnexML" ["l"="51.708,31.079"]
"xmc-aalto/bonsai" ["l"="51.691,31.04"]
"chenyuntc/dsod.pytorch" ["l"="50.971,30.306"]
"jiangzhengkai/Video-Detection" ["l"="54.967,33.806"]
"qijiezhao/pytorch-ssd" ["l"="51.006,30.31"]
"yqyao/DRFNet" ["l"="50.909,30.289"]
"yqyao/YOLOv3_Pytorch" ["l"="50.919,30.266"]
"hli2020/feature_intertwiner" ["l"="50.886,30.347"]
"vaesl/LRF-Net" ["l"="50.747,30.412"]
"generalized-iou/Detectron.pytorch" ["l"="53.002,33.327"]
"HCIILAB/DeRPN" ["l"="46.6,7.173"]
"ChiCheng123/SRN" ["l"="33.323,29.183"]
"xuannianz/keras-CenterNet" ["l"="50.349,30.36"]
"Stick-To/CenterNet-tensorflow" ["l"="50.367,30.379"]
"Stick-To/Object-Detection-Tensorflow" ["l"="50.395,30.355"]
"see--/kuzushiji-recognition" ["l"="50.401,30.474"]
"xggIoU/centernet_tensorflow_wilderface_voc" ["l"="50.478,30.343"]
"DetectionTeamUCAS/FCOS_Tensorflow" ["l"="50.414,30.364"]
"miemie2013/Keras-YOLOv4" ["l"="50.432,32.803"]
"bubbliiiing/centernet-keras" ["l"="50.241,30.3"]
"mratsim/Amazon-Forest-Computer-Vision" ["l"="50.459,30.703"]
"bfortuner/pytorch-kaggle-starter" ["l"="50.485,30.635"]
"scalabel/scalabel" ["l"="64.367,10.431"]
"kinhong/OpenLabeler" ["l"="50.269,29.387"]
"Britefury/django-labeller" ["l"="50.3,29.315"]
"Kitware/dive" ["l"="62.189,35.876"]
"foolwood/DaSiamRPN" ["l"="54.698,33.732"]
"StrangerZhang/pysot-toolkit" ["l"="54.637,33.724"]
"visionml/pytracking" ["l"="54.634,33.782"]
"researchmm/SiamDW" ["l"="54.659,33.74"]
"aniskoubaa/car_detection_yolo_faster_rcnn_uvsc2019" ["l"="50.12,29.368"]
"jekhor/darknet" ["l"="50.135,29.358"]
"hsSam/PracticalPythonAndOpenCV_CaseStudies" ["l"="52.009,29.378"]
"WhatTheFar/opencv-cheatsheet" ["l"="51.987,29.392"]
"whydna/Deep-Learning-For-Computer-Vision" ["l"="52.028,29.335"]
"lightforever/mlcomp" ["l"="50.879,30.61"]
"catalyst-team/classification" ["l"="50.893,30.647"]
"catalyst-team/catalyst-info" ["l"="50.876,30.641"]
"darolt/mask_rcnn" ["l"="50.611,30.178"]
"michaelrzhang/lookahead" ["l"="51.162,30.139"]
"bojone/keras_lookahead" ["l"="54.226,27.01"]
"ArtyZe/yolo_segmentation" ["l"="50.065,29.379"]
"rahulkidambi/AccSGD" ["l"="50.374,30.797"]
"bes-dev/mpl.pytorch" ["l"="50.417,30.744"]
"ShawnBIT/Loss-family" ["l"="50.373,30.628"]
"lin-honghui/tianchi_CountyAgriculturalBrain_top1" ["l"="57.613,23.19"]
"stigma0617/VoVNet.pytorch" ["l"="50.628,30.266"]
"stigma0617/maskrcnn-benchmark-vovnet" ["l"="50.578,30.275"]
"youngwanLEE/vovnet-detectron2" ["l"="50.668,30.271"]
"zzzheng/pytorch-yolo-v1" ["l"="50.617,30.346"]
"happyjin/pytorch-YOLO" ["l"="50.567,30.351"]
"dyhan0920/PyramidNet-PyTorch" ["l"="51.342,30.155"]
"jhkim89/PyramidNet" ["l"="51.4,30.152"]
"hysts/pytorch_shake_shake" ["l"="51.307,30.155"]
"indeedeng/vowpal-wabbit-java" ["l"="50.994,30.694"]
"Stick-To/RefineDet-tensorflow" ["l"="50.353,30.396"]
"Stick-To/RetinaNet-tensorflow" ["l"="50.363,30.393"]
"Stick-To/PFPNet-tensorflow" ["l"="50.377,30.402"]
"Stick-To/SSD-tensorflow" ["l"="50.381,30.386"]
"Stick-To/light-head-rcnn-tensorflow" ["l"="50.37,30.388"]
"Stick-To/YOLO-tensorflow" ["l"="50.383,30.393"]
"Stick-To/Deep_Conv_Backone_tensorflow" ["l"="50.371,30.362"]
"Stick-To/Online_Image_Augmentor_tensorflow" ["l"="50.371,30.393"]
"Stick-To/DLA-tensorflow" ["l"="50.357,30.386"]
"foocker/mmdetection-code-analysis" ["l"="52.87,13.571"]
"zhengye1995/underwater-object-detection" ["l"="52.901,13.503"]
"csuhan/s2anet" ["l"="53.049,31.97"]
"SJTU-Thinklab-Det/r3det-on-mmdetection" ["l"="53.043,31.979"]
"CAPTAIN-WHU/DOTA_devkit" ["l"="53.033,31.961"]
"yangxue0827/RotationDetection" ["l"="53.077,31.973"]
"Eric3911/Related-works-ch" ["l"="50.462,31.013"]
"Eric3911/Mini-SSD" ["l"="50.496,30.935"]
"Eric3911/Paper-Sharing" ["l"="50.458,31.047"]
"Eric3911/yolov3-darknet" ["l"="50.438,31.037"]
"bfortuner/pytorch-cheatsheet" ["l"="50.446,30.679"]
"thomasbrandon/mish-cuda" ["l"="51.185,30.106"]
"digantamisra98/Echo" ["l"="51.208,30.12"]
"lessw2020/mish" ["l"="51.148,30.118"]
"aksht94/UdacityOpenSource" ["l"="49.022,27.707"]
"facebookresearch/OctConv" ["l"="53.498,31.219"]
"muellerzr/Practical-Deep-Learning-for-Coders-2.0" ["l"="49.406,28.589"]
"gmalivenko/awesome-computer-vision-models" ["l"="51.138,30.65"]
"gmalivenko/cat-gan" ["l"="51.148,30.679"]
"Angzz/awesome-panoptic-segmentation" ["l"="53.226,30.908"]
"kuzand/Computer-Vision-Video-Lectures" ["l"="51.167,30.735"]
"yuchenZhangTG/SSD_resnet_pytorch" ["l"="51.212,30.357"]
"abidrahmank/OpenCV-Python" ["l"="51.393,29.768"]
"simondlevy/OpenCV-Python-Hacks" ["l"="51.439,29.764"]
"mdai/ml-lessons" ["l"="50.384,30.591"]
"deeponcology/PyTorchMedicalAI" ["l"="50.285,30.668"]
"rachelcao277/LabelImage" ["l"="50.145,29.196"]
"codingdogs/imageLabel" ["l"="50.156,29.231"]
"zhengshoujian/darknet-yolo-segmentation" ["l"="50.031,29.356"]
"bonsai89/unet_darknet_YOLO_AI_image_segmentation" ["l"="50.05,29.355"]
"ArtyZe/yolov3_lite" ["l"="50.034,29.336"]
"spivet/labelImg" ["l"="50.125,29.216"]
"hhuangwx/cmaps" ["l"="40.782,25.735"]
"ajdawson/eofs" ["l"="40.797,25.485"]
"shenyulu/easyclimate" ["l"="40.75,25.889"]
"yukkyo/voc2coco" ["l"="50.186,30.054"]
"Tony607/voc2coco" ["l"="50.16,30.058"]
"shiyemin/voc2coco" ["l"="50.132,30.068"]
"roboflow/voc2coco" ["l"="50.108,30.086"]
"yikun2019/PENCIL" ["l"="51.586,30.432"]
"ferriswym/learn-with-noisy-labels" ["l"="51.627,30.458"]
"YU1ut/JointOptimization" ["l"="51.626,30.408"]
"PaulAlbert31/LabelNoiseCorrection" ["l"="51.573,30.409"]
"ljmiao/PENCIL" ["l"="51.641,30.457"]
"chenpf1025/noisy_label_understanding_utilizing" ["l"="51.599,30.43"]
"HanxunH/SCELoss-Reproduce" ["l"="51.617,30.425"]
"Newbeeer/L_DMI" ["l"="51.636,30.443"]
"PaddleEdu/paper-reproduction-tutorials" ["l"="49.945,29.537"]
"PaddlePaddle/PALM" ["l"="49.997,29.466"]
"FLyingLSJ/Computer_Vision_Project" ["l"="51.637,29.608"]
"fengzhenHIT/OpenCV_Projects" ["l"="51.511,29.643"]
"PacktPublishing/Deep-Learning-for-Computer-Vision" ["l"="52.075,29.308"]
"HRNet/HRNet-Object-Detection" ["l"="50.798,30.191"]
"HRNet/HRNet-Image-Classification" ["l"="53.478,30.99"]
"HRNet/HRNet-MaskRCNN-Benchmark" ["l"="61.404,37.744"]
"HRNet/HRNet-Facial-Landmark-Detection" ["l"="33.368,29.096"]
"csrhddlam/pytorch-checkpoint" ["l"="50.456,30.152"]
"MattKleinsmith/pbt" ["l"="51.188,30.358"]
"moskomule/dda" ["l"="51.263,30.193"]
"qinenergy/adanet" ["l"="51.413,30.295"]
"EricArazo/PseudoLabeling" ["l"="51.452,30.336"]
"sud0301/semisup-semseg" ["l"="51.425,37.251"]
"Britefury/self-ensemble-visual-domain-adapt" ["l"="51.373,37.536"]
"iSarmad/MeanTeacher-SNTG-HybridNet" ["l"="51.418,30.258"]
"siddsax/XML-CNN" ["l"="51.738,30.953"]
"siddsax/VisualizeMSDNet" ["l"="51.763,30.952"]
"siddsax/Graph-NN" ["l"="51.756,30.94"]
"siddsax/Normalizing_Flows" ["l"="51.772,30.942"]
"yourh/AttentionXML" ["l"="51.701,30.961"]
"danielefranceschi/wavelets-climatological-time-series" ["l"="52.339,29.877"]
"facebookresearch/semi-supervised-ImageNet1K-models" ["l"="50.985,30.401"]
"appian42/kaggle-rsna-intracranial-hemorrhage" ["l"="50.591,30.443"]
"facebookresearch/fair_self_supervision_benchmark" ["l"="53.12,29.568"]
"hessamb/label-refinery" ["l"="51.014,30.434"]
"XinyiYing/D3Dnet" ["l"="-35.196,21.6"]
"developer0hye/PyTorch-Deformable-Convolution-v2" ["l"="50.933,30.213"]
"kastnerkyle/deform-conv" ["l"="53.771,30.574"]
"bmsookim/fine-tuning.pytorch" ["l"="51.13,30.351"]
"adambielski/siamese-triplet" ["l"="57.624,19.606"]
"EvgenyKashin/SRMnet" ["l"="50.802,30.739"]
"taki0112/SRM-Tensorflow" ["l"="50.804,30.77"]
"hyunjaelee410/style-based-recalibration-module" ["l"="50.79,30.764"]
"TezRomacH/safitty" ["l"="50.788,30.784"]
"SIlvaMFPedro/pyimagesearch" ["l"="51.817,29.474"]
"meizhoubao/pyimagesearch" ["l"="51.821,29.457"]
"parekhakhil/pyImageSearch" ["l"="51.799,29.454"]
"YunchuZhang/PyImageSearch-Gurus-Course" ["l"="51.81,29.436"]
"vinayakShenoy/PyImageSearchGurus-Course" ["l"="51.792,29.44"]
"BIGBALLON/CIFAR-ZOO" ["l"="51.124,30.016"]
"BIGBALLON/cifar-10-cnn" ["l"="51.243,30.007"]
"lxtGH/OctaveConv_pytorch" ["l"="53.471,31.138"]
"implus/SKNet" ["l"="53.502,31.111"]
"MingSun-Tse/Efficient-Deep-Learning" ["l"="52.66,33.421"]
"liuyuemaicha/cnn_model" ["l"="51.254,30.041"]
"samlss/Bloom" ["l"="50.38,30.707"]
"Link-Li/Balanced-DataParallel" ["l"="50.567,30.136"]
"zhijian-liu/torchprofile" ["l"="52.822,34.061"]
"fdraxler/PyTorch-AutoNEB" ["l"="51.252,30.336"]
"apple/learning-subspaces" ["l"="23.859,14.83"]
"noahgolmant/pytorch-hessian-eigenthings" ["l"="52.905,33.538"]
"amirgholami/PyHessian" ["l"="52.782,33.51"]
"g-benton/loss-surface-simplexes" ["l"="23.785,14.838"]
"g-benton/hessian-eff-dim" ["l"="51.249,30.319"]
"rahimentezari/PermutationInvariance" ["l"="51.232,30.327"]
"semi-supervised-paper/semi-supervised-paper-implementation" ["l"="51.495,30.309"]
"tensorfreitas/Temporal-Ensembling-for-Semi-Supervised-Learning" ["l"="51.466,30.3"]
"lopuhin/ssd.pytorch" ["l"="51.033,30.341"]
"Microos/citypersons2voc" ["l"="50.962,30.454"]
"shadowwalker00/CaltechPestrain2VOC" ["l"="50.982,30.463"]
"rainofmine/Repulsion_Loss" ["l"="50.926,30.413"]
"rainofmine/Bi-box_Regression" ["l"="50.911,30.413"]
"VideoObjectSearch/ALFNet" ["l"="50.916,30.386"]
"JegernOUTT/repulsion_loss" ["l"="50.948,30.388"]
"xingkongliang/Pedestrian-Detection" ["l"="50.913,30.399"]
"lwpyr/CSP-pedestrian-detection-in-pytorch" ["l"="50.897,30.407"]
"liuwei16/ALFNet" ["l"="50.9,30.391"]
"garrickbrazil/SDS-RCNN" ["l"="50.903,30.428"]
"dlyldxwl/fssd.pytorch" ["l"="50.594,30.69"]
"dlyldxwl/Stronger-One-stage-detector-with-much-Tricks" ["l"="50.645,30.547"]
"fanbinqi/FSSD-reimplementation" ["l"="50.529,30.858"]
"Gabriel-Macias/robust_frcnn" ["l"="51.734,30.185"]
"bentrevett/pytorch-rl" ["l"="51.362,29.848"]
"fabric-lab/hyperledger-fabric-manager" ["l"="50.322,30.752"]
"cckuailong/ICS_SCAN" ["l"="50.283,30.798"]
"shipengqi/sactive-bot" ["l"="-53.068,-16.587"]
"facebookarchive/tutorials" ["l"="51.651,29.961"]
"breadbread1984/Caffe2-C-demo" ["l"="51.63,29.955"]
"uvipen/Very-deep-cnn-tensorflow" ["l"="50.814,30.505"]
"CHONSPQX/modulated-deform-conv" ["l"="-52.958,-15.217"]
"basiclab/DA-OD-MEAA-PyTorch" ["l"="51.717,30.185"]
"uitrbn/CST_DA_detection" ["l"="51.714,30.194"]
"He-Zhenwei/MAF" ["l"="51.7,30.185"]
"RobertCsordas/RFCN-tensorflow" ["l"="51.775,33.473"]
"shubhamjn1/Pseudo-Labelling---A-Semi-supervised-learning-technique" ["l"="51.483,30.326"]
"nayeemrizve/ups" ["l"="51.439,30.371"]
"kimiyoung/ssl_bad_gan" ["l"="51.503,30.292"]
"P1Analytics/Pseudo-Label-for-Deep-Neural-Networks" ["l"="51.467,30.32"]
"Kyubyong/nlp_made_easy" ["l"="51.583,29.818"]
"soutsios/pos-tagger-bert" ["l"="51.491,29.839"]
"NVIDIA/PyProf" ["l"="50.605,30.011"]
"getkeops/keops" ["l"="21.661,13.989"]
"jacobkimmel/pytorch_modelsize" ["l"="50.564,30.014"]
"xl0/lovely-tensors" ["l"="21.694,14.118"]
"pytorch/PiPPy" ["l"="38.928,-0.444"]
"daixiangzi/face_detection" ["l"="51.711,30.139"]
"daixiangzi/PRCV2019" ["l"="51.694,30.147"]
"daixiangzi/Caffe-PCN" ["l"="51.705,30.126"]
"athivvat/ai-engineer-guide" ["l"="51.467,29.445"]
"niladridutt/McCarthy-AI-Roadmap" ["l"="9.824,-29.363"]
"EngrSaad2/Artificial-Intelligence-Engineer-Roadmap" ["l"="51.43,29.472"]
"yizt/cv-papers" ["l"="50.842,30.003"]
"zeusees/HyperDL-Tutorial" ["l"="50.589,28.257"]
"jiangxiluning/FOTS.PyTorch" ["l"="46.43,7.206"]
"czla/daily-paper-visual-tracking" ["l"="54.597,33.688"]
"YCG09/chinese_ocr" ["l"="46.283,7.28"]
"zavolokas/Inpainting" ["l"="50.53,31.843"]
"zavolokas/SeamCarving" ["l"="50.498,31.839"]
"zavolokas/PatchMatch" ["l"="50.558,31.837"]
"Pranshu258/Image_Completion" ["l"="50.492,31.876"]
"sooham/inpainting" ["l"="50.558,31.71"]
"Mugichoko445/PixMix-Inpainting" ["l"="50.558,31.866"]
"lyndonzheng/Pluralistic-Inpainting" ["l"="44.682,29.324"]
"usuyama/pytorch-unet" ["l"="61.963,36.942"]
"dkumazaw/onecyclelr" ["l"="51.168,30.09"]
"ZFTurbo/Keras-RetinaNet-for-Open-Images-Challenge-2018" ["l"="50.585,30.531"]
"radekosmulski/yolo_open_images" ["l"="50.575,30.6"]
"ZFTurbo/Mean-Average-Precision-for-Boxes" ["l"="50.753,30.696"]
"minerva-ml/open-solution-googleai-object-detection" ["l"="50.512,30.557"]
"PYFTS/notebooks" ["l"="52.57,29.974"]
"PYFTS/pyFTS" ["l"="52.542,29.976"]
"GarrettLee/label_noise_correction" ["l"="51.705,30.409"]
"emalach/UpdateByDisagreement" ["l"="51.734,30.41"]
"markjay4k/Mask-RCNN-series" ["l"="51.956,30.881"]
"augmentedstartups/mask-rcnn" ["l"="51.976,30.912"]
"SUYEgit/Surgery-Robot-Detection-Segmentation" ["l"="52.004,30.897"]
"deeponcology/applied-dl-2018" ["l"="50.254,30.695"]
"Hwang64/PSIS" ["l"="50.913,30.331"]
"xgastaldi/shake-shake" ["l"="51.379,30.139"]
"HadXu/machine-learning" ["l"="51.66,29.658"]
"wenhan123/ML-Python-" ["l"="51.787,29.603"]
"mmazeika/glc" ["l"="51.615,30.437"]
"LiJunnan1992/MLNT" ["l"="51.585,30.419"]
"danieltan07/learning-to-reweight-examples" ["l"="51.572,30.448"]
"uber-research/learning-to-reweight-examples" ["l"="51.613,30.45"]
"xjtushujun/meta-weight-net" ["l"="51.596,30.462"]
"google/mentornet" ["l"="51.603,30.417"]
"mtoneva/example_forgetting" ["l"="51.615,30.475"]
"TinfoilHat0/Learning-to-Reweight-Examples-for-Robust-Deep-Learning-with-PyTorch-Higher" ["l"="51.592,30.485"]
"AlanChou/Truncated-Loss" ["l"="51.598,30.443"]
"Stomach-ache/awesome-long-tail-learning" ["l"="51.327,30.468"]
"wutong16/DistributionBalancedLoss" ["l"="51.317,30.552"]
"GZWQ/Awesome-Long-Tailed" ["l"="51.313,30.505"]
"shijxcs/LIFT" ["l"="51.345,30.531"]
"Gank0078/ACR" ["l"="51.369,30.544"]
"JosephKJ/Awesome-Novel-Class-Discovery" ["l"="52.698,14.254"]
"perrying/pytorch-consistency-regularization" ["l"="51.436,30.342"]
"positronn/DL4CV2" ["l"="52.047,29.32"]
"Leotju/MGAN" ["l"="50.882,30.403"]
"hasanirtiza/Pedestron" ["l"="50.846,30.386"]
"buffer51/lstm-rcnn-pedestrian-detection" ["l"="51.802,33.471"]
"zhangliliang/RPN_BF" ["l"="51.733,33.438"]
"mitmul/caltech-pedestrian-dataset-converter" ["l"="50.948,30.43"]
"KuKuXia/OpenCV_for_Beginners" ["l"="51.226,29.687"]
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["l"="33.41,29.211"]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" ["l"="33.41,29.161"]
"WangWenhao0716/Adapted-Center-and-Scale-Prediction" ["l"="50.885,30.426"]
"ZongweiZhou1/CenterNetPerson" ["l"="50.894,30.44"]
"Justinhzy/pedestrian-detector" ["l"="50.9,30.456"]
"zhangminwen/Center-and-Scale-Prediction-CSP-Pytorch" ["l"="50.931,30.467"]
"Sophia-11/Awesome-CV-Resources" ["l"="51.205,29.655"]
"loshchil/AdamW-and-SGDW" ["l"="51.554,30.118"]
"loshchil/SGDR" ["l"="51.616,30.106"]
"zhaoweicai/EdMIPS" ["l"="52.551,33.498"]
"bit-bots/bitbots_main" ["l"="50.322,29.219"]
"bit-bots/YOEO" ["l"="50.317,29.257"]
"wkoa/voc2coco" ["l"="50.085,30.082"]
"xuhuasheng/mmdetection_plot_pr_curve" ["l"="50.106,30.065"]
"dingyang9642/AILabel" ["l"="50.112,29.177"]
"fuyi501/ailabel-me" ["l"="50.092,29.156"]
"mansheej/data_diet" ["l"="34.5,31.87"]
"hongxin001/JoCoR" ["l"="51.555,30.403"]
"xingruiyu/coteaching_plus" ["l"="51.6,30.388"]
"bhanML/Masking" ["l"="51.65,30.436"]
"shengliu66/ELR" ["l"="51.532,30.44"]
"tmllab/2021_NeurIPS_PES" ["l"="51.653,30.375"]
"NUST-Machine-Intelligence-Laboratory/Jo-SRC" ["l"="51.637,30.366"]
"NaturalIntelligence/nimn-spec" ["l"="50.217,29.335"]
"NaturalIntelligence/Stubmatic" ["l"="50.191,29.319"]
"node-muneem/anumargak" ["l"="50.215,29.321"]
"killthekitten/kaggle-carvana-2017" ["l"="42.629,24.157"]
"EdwardTyantov/ultrasound-nerve-segmentation" ["l"="62.058,37.029"]
"GlastonburyC/Dilated-U-net" ["l"="50.489,30.599"]
"ebrevdo/synchrosqueezing" ["l"="52.449,29.845"]
"HaizhaoYang/SynLab" ["l"="52.56,29.829"]
"lain-m21/pytorch-to-tflite-example" ["l"="50.288,30.16"]
"AxisCommunications/onnx-to-keras" ["l"="50.309,30.156"]
"thunlp/HNRE" ["l"="55.76,26.651"]
"mint-lab/awesome-robotics-datasets" ["l"="50.238,29.245"]
"youngguncho/awesome-slam-datasets" ["l"="59.423,11.137"]
"wanghuayou1028/ICRA2021-SLAM-paper-list" ["l"="59.585,11.186"]
"gisbi-kim/PyICP-SLAM" ["l"="58.19,10.022"]
"mjyc/awesome-hri-datasets" ["l"="50.187,29.148"]
"aaxwaz/Humpback-whale-identification-challenge" ["l"="50.563,30.506"]
"YU1ut/imet-6th-soltuion" ["l"="50.561,30.524"]
"yelanlan/Pneumothorax-Segmentation-2nd-place-solution" ["l"="50.614,30.434"]
"ahrnbom/ensemble-objdet" ["l"="50.483,30.485"]
"ducha-aiki/whale-identification-2018" ["l"="50.495,30.524"]
"Sunarker/Safeguarded-Dynamic-Label-Regression-for-Noisy-Supervision" ["l"="51.673,30.43"]
"xingjunm/dimensionality-driven-learning" ["l"="51.64,30.428"]
"markjay4k/YOLO-series" ["l"="51.878,30.834"]
"hityzy1122/opencv_transforms_torchvision" ["l"="50.323,30.134"]
"PaddlePaddle/PLSC" ["l"="49.962,29.507"]
"elasticdeeplearning/edl" ["l"="8.166,-10.105"]
"PaddlePaddle/benchmark" ["l"="49.933,29.489"]
"PaddlePaddle/AutoDL" ["l"="49.966,29.474"]
"PaddlePaddle/PaddleRec" ["l"="51.117,2.699"]
"PaddlePaddle/PaddleCloud" ["l"="49.928,29.461"]
"PaddlePaddle/ElasticCTR" ["l"="49.976,29.429"]
"PaddlePaddle/community" ["l"="49.948,29.484"]
"NaturalIntelligence/nimnjs" ["l"="50.204,29.299"]
"funcards/match-it" ["l"="50.214,29.305"]
"node-muneem/muneem" ["l"="50.194,29.305"]
"socialat/team" ["l"="50.204,29.313"]
"shaohua0116/ICLR2020-OpenReviewData" ["l"="51.598,29.451"]
"Chillee/OpenReviewExplorer" ["l"="51.501,29.477"]
"xuanqing94/BayesianDefense" ["l"="51.512,29.497"]
"lancopku/AAPR" ["l"="58.56,29.083"]
"myme5261314/dbn_tf" ["l"="51.103,30.966"]
"2015xli/DBN" ["l"="51.111,30.981"]
"rodrigosetti/dbn-cuda" ["l"="51.13,30.992"]
"murari023/awesome-aerial-object-detection" ["l"="51.989,30.556"]
"tzxiang/awesome-semantic-understanding-for-aerial-scene" ["l"="52.033,30.569"]
"J911/J911" ["l"="51.907,30.539"]
"zhuwenxi/pytorch-profiling-tool" ["l"="50.583,30.03"]
"fuxuliu/Human_Protein" ["l"="50.449,30.492"]
"BloodAxe/Kaggle-2019-Blindness-Detection" ["l"="50.403,30.54"]
"pudae/kaggle-understanding-clouds" ["l"="50.513,30.473"]
"spytensor/kaggle_human_protein_baseline" ["l"="50.445,30.509"]
"maciej-sypetkowski/kaggle-rcic-1st" ["l"="50.422,30.518"]
"iezepov/combat-wombat-bias-in-toxicity" ["l"="50.359,30.586"]
"ildoonet/kaggle-human-protein-atlas-image-classification" ["l"="50.466,30.497"]
"lopuhin/kaggle-imet-2019" ["l"="50.512,30.535"]
"radekosmulski/whale" ["l"="49.42,28.546"]
"nickgeoca/cwt-tensorflow" ["l"="52.278,29.835"]
"jimdengdev/opencv_exercises" ["l"="51.454,29.808"]
"TonyStark1997/OpenCV-Python" ["l"="51.525,29.795"]
"gloomyfish1998/opencv4android" ["l"="33.114,29.725"]
"jsxyhelu/GOCvHelper" ["l"="51.341,29.714"]
"ShuaiLYU/Deep-Learning-Approach-for-Surface-Defect-Detection" ["l"="53.263,13.973"]
"DWCTOD/AI_study" ["l"="51.354,29.668"]
"salihkaragoz/pose-residual-network-pytorch" ["l"="31.635,28.241"]
"matteorr/coco-analyze" ["l"="31.659,28.237"]
"Jeff-sjtu/labelKeypoint" ["l"="50.323,29.331"]
"mkocabas/pose-residual-network" ["l"="31.652,28.219"]
"DaikiTanaka-UT/JointOptimization" ["l"="51.615,30.397"]
"inaturalist/SeekReactNative" ["l"="51.578,31.127"]
"inaturalist/INaturalistIOS" ["l"="51.559,31.122"]
"inaturalist/iNaturalistReactNative" ["l"="51.583,31.144"]
"inaturalist/inaturalistjs" ["l"="51.546,31.112"]
"inaturalist/iNaturalistAndroid" ["l"="51.566,31.107"]
"inaturalist/inatVisionAPI" ["l"="51.541,31.123"]
"kevin-ssy/FishNet" ["l"="53.431,31.152"]
"DenisVorotyntsev/CategoricalEncodingBenchmark" ["l"="50.906,30.8"]
"DenisVorotyntsev/AutoSeries" ["l"="50.897,30.875"]
"m-cakir/bubble-sheet-multiple-choice-scanner" ["l"="49.719,30.398"]
"pmcheng/rsna-pneumonia" ["l"="50.421,30.536"]
"tatigabru/kaggle-rsna" ["l"="61.308,36.783"]
"pprp/landmark_annotation" ["l"="50.322,29.289"]
"pablospe/MVCDemo" ["l"="50.629,31.434"]
"jelinson/MVC" ["l"="50.636,31.454"]
"xin-xinhanggao/efficient_quadtree" ["l"="50.619,31.454"]
"Sleepychord/ImprovedGAN-pytorch" ["l"="51.524,30.282"]
"cezannec/capsule_net_pytorch" ["l"="49.08,27.715"]
"jihunchoi/recurrent-batch-normalization-pytorch" ["l"="51.593,30.291"]
"eli5168/improved_gan_pytorch" ["l"="51.549,30.277"]
"LDOUBLEV/semi-supervised-GAN" ["l"="51.545,30.295"]
"udacity/sagemaker-deployment" ["l"="49.138,27.71"]
"udacity/dermatologist-ai" ["l"="49.138,27.78"]
"nejlag/Semi-Supervised-Learning-GAN" ["l"="51.566,30.299"]
"zhenxuan00/triple-gan" ["l"="46.121,29.064"]
"daixiangzi/ImprovedGan-pytorch" ["l"="51.613,30.21"]
"openai/improved-gan" ["l"="45.896,29.177"]
"yu4u/mixup-generator" ["l"="54.23,26.947"]
"unsky/mixup" ["l"="54.284,26.908"]
"alicranck/instance-seg" ["l"="50.411,30.898"]
"juglab/EmbedSeg" ["l"="41.663,26.516"]
"yinghdb/EmbedMask" ["l"="50.524,30.686"]
"czyczyyzc/MyDeepMetric" ["l"="50.414,30.882"]
"gangadhar-p/NucleiDetectron" ["l"="50.482,30.66"]
"kamalkraj/DATA-SCIENCE-BOWL-2018" ["l"="50.541,30.634"]
"jhwjhw0123/Imbalance-XGBoost" ["l"="51.478,30.589"]
"jrzaurin/LightGBM-with-Focal-Loss" ["l"="51.505,30.644"]
"limexp/xgbfir" ["l"="57.435,23.966"]
"udibr/noisy_labels" ["l"="51.656,30.418"]
"kuanghuei/clean-net" ["l"="51.681,30.418"]
"PaddlePaddle/continuous_evaluation" ["l"="49.908,29.476"]
"PaddlePaddle/paddle-ce-latest-kpis" ["l"="49.884,29.482"]
"PaddlePaddle/PaddleTest" ["l"="49.914,29.489"]
"PaddlePaddle/VisionTools" ["l"="49.922,29.482"]
"PaddlePaddle/tape" ["l"="49.914,29.455"]
"PaddlePaddle/Perf" ["l"="49.894,29.489"]
"nachiket273/One_Cycle_Policy" ["l"="51.218,30.097"]
"EMNLP2019LSAN/LSAN" ["l"="51.666,30.918"]
"EiraZhang/LACO" ["l"="51.592,30.846"]
"adrinta/MAGNET" ["l"="51.616,30.868"]
"iliaschalkidis/lmtc-eurlex57k" ["l"="51.697,30.932"]
"xiaolin1207/HTTN-master" ["l"="51.651,30.936"]
"lancopku/SGM" ["l"="-51.531,-14.771"]
"HX-idiot/Hybrid_Attention_XML" ["l"="51.67,30.942"]
"intel-iot-devkit/shopper-gaze-monitor-python" ["l"="51.106,30.745"]
"Tony607/mmdetection_instance_segmentation_demo" ["l"="50.06,30.021"]
"fcakyon/labelme2coco" ["l"="50.045,30.045"]
"raghav64/SemiSuper_GAN" ["l"="51.6,30.311"]
"odie2630463/Restricted-Boltzmann-Machines-in-pytorch" ["l"="51.048,31.027"]
"bacnguyencong/rbm-pytorch" ["l"="51.046,31.008"]
"david-cortes/costsensitive" ["l"="51.612,30.719"]
"nnikolaou/Cost-sensitive-Boosting-Tutorial" ["l"="51.596,30.713"]
"albahnsen/CostSensitiveClassification" ["l"="51.586,30.686"]
"iamyuanchung/csdnn" ["l"="51.593,30.669"]
"qjy981010/cocoapi" ["l"="50.662,30.573"]
"youtubevos/vis2vos" ["l"="50.686,30.546"]
"facebookresearch/GloRe" ["l"="51.332,30.728"]
"kiyohiro8/GraphBasedGlobalReasoning" ["l"="51.341,30.767"]
"HCPLab-SYSU/SSGRL" ["l"="51.318,30.619"]
"andreaazzini/retinanet.pytorch" ["l"="51.09,30.198"]
"unsky/RetinaNet" ["l"="51.654,33.511"]
"wangjiegit/WJMoviePlayer" ["l"="50.405,30.688"]
"lRomul/ranzcr-clip" ["l"="50.801,30.824"]
"lRomul/ball-action-spotting" ["l"="49.079,25.905"]
"lRomul/gramtion" ["l"="50.818,30.818"]
"UiO-CS/tf-wavelets" ["l"="52.272,29.812"]
"Hua-YS/AID-Multilabel-Dataset" ["l"="51.341,30.691"]
"Hua-YS/DFC15-Multilabel-Dataset" ["l"="51.352,30.714"]
"Hua-YS/Multi-Scene-Recognition" ["l"="51.359,30.75"]
"Extreme-classification/deepxml" ["l"="51.759,30.992"]
"Extreme-classification/DECAF" ["l"="51.776,31"]
"Extreme-classification/GalaXC" ["l"="51.762,31.004"]
"Extreme-classification/siamesexml" ["l"="51.749,30.989"]
"Extreme-classification/ECLARE" ["l"="51.77,30.985"]
"kunaldahiya/pyxclib" ["l"="51.744,31.002"]
"tanyuqian/learning-data-manipulation" ["l"="51.697,30.474"]
"Cysu/noisy_label" ["l"="51.639,30.398"]
"DiegoOrtego/LabelNoiseMOIT" ["l"="51.582,30.473"]
"giorgiop/loss-correction" ["l"="51.663,30.407"]
"garrickbrazil/AR-Ped" ["l"="50.899,30.474"]
"GothicAi/InstaBoost-pypi" ["l"="50.639,30.223"]
"DirtyHarryLYL/DJ-RN" ["l"="47.468,33.822"]
"DirtyHarryLYL/SymNet" ["l"="47.465,33.85"]
"plantnet/GeoLifeCLEF" ["l"="51.644,31.446"]
"cesar-leblanc/hdm-framework" ["l"="51.632,31.433"]
"plantnet/malpolon" ["l"="51.653,31.471"]
"christiancosgrove/good-semi-bad-gan" ["l"="51.532,30.309"]
"PacktPublishing/OpenCV-3-x-with-Python-By-Example" ["l"="51.361,29.747"]
"Po-Jen/awesome-human-robot-interaction" ["l"="50.164,29.106"]
"Healthcare-Robotics/assistive-gym" ["l"="59.595,16.37"]
"Po-Jen/awesome-grasping" ["l"="50.142,29.064"]
"bkj/pbt" ["l"="51.199,30.384"]
"angusfung/population-based-training" ["l"="51.177,30.417"]
"voiler/PopulationBasedTraining" ["l"="51.189,30.404"]
"owruby/shake-drop_pytorch" ["l"="51.236,30.191"]
"visipedia/imat_comp" ["l"="43.557,30.729"]
"lingyejun/dating-java8" ["l"="50.397,30.644"]
"pangwong/pytorch-multi-label-classifier" ["l"="51.429,30.724"]
"hellowangqian/multi-label-image-classification" ["l"="51.372,30.653"]
"suraj-deshmukh/Keras-Multi-Label-Image-Classification" ["l"="51.514,30.736"]
"aman5319/Multi-Label" ["l"="51.433,30.763"]
"BartyzalRadek/Multi-label-Inception-net" ["l"="51.437,30.702"]
"bbrattoli/PascalClassificationPytorch" ["l"="51.446,30.781"]
"RandolphVI/Multi-Label-Text-Classification" ["l"="53.68,27.247"]
"jiangqy/Customized-DataLoader-pytorch" ["l"="51.459,30.762"]
"yang-ruixin/PyTorch-Image-Models-Multi-Label-Classification" ["l"="51.374,30.696"]
"SlongLiu/query2labels" ["l"="51.289,30.613"]
"Epiphqny/Multiple-instance-learning" ["l"="41.737,27.088"]
"Stick-To/ResNet-tensorflow" ["l"="50.367,30.404"]
"Stick-To/WideResNet-tensorflow" ["l"="50.361,30.401"]
"Stick-To/watershed" ["l"="50.339,30.396"]
"Stick-To/vlad" ["l"="50.343,30.407"]
"Stick-To/DPN-tensorflow" ["l"="50.357,30.407"]
"Sophia-11/Awesome-NeurIPS2019-NIPS2019" ["l"="51.28,29.631"]
"pyinat/pyinaturalist" ["l"="51.488,30.972"]
"pyinat/pyinaturalist-convert" ["l"="51.494,30.995"]
"inaturalist/iNaturalistAPI" ["l"="51.539,31.085"]
"inaturalist/inaturalist-open-data" ["l"="51.518,31.064"]
"CaoWGG/torch-yolov3" ["l"="50.296,30.509"]
"CaoWGG/CenterNet-darknet" ["l"="50.317,30.496"]
"PaddlePaddle/PaddlePaddle.org" ["l"="49.911,29.465"]
"PaddlePaddle/hapi" ["l"="49.946,29.514"]
"PaddlePaddle/examples" ["l"="49.939,29.449"]
"PaddleCV-SIG/PaddleRS" ["l"="41.909,25.284"]
"PaddlePaddle/Mobile" ["l"="49.889,29.466"]
"PaddlePaddle/Paddle-bot" ["l"="49.933,29.472"]
"PaddlePaddle/recordio" ["l"="49.901,29.456"]
"bhanML/coteaching_plus" ["l"="51.622,30.386"]
"owruby/shake-shake_pytorch" ["l"="51.28,30.175"]
"tugstugi/pytorch-speech-commands" ["l"="50.61,30.777"]
"adiyoss/GCommandsPytorch" ["l"="50.592,30.822"]
"Jxinyee/dbn_pytorch" ["l"="51.111,31.078"]
"CasiaFan/Dataset_to_VOC_converter" ["l"="50.979,30.442"]
"qixuxiang/Pytorch_Lightweight_Network" ["l"="50.761,30.59"]
"mohhao/TF-Keras-ThunderNet" ["l"="50.761,30.608"]
"qrfaction/2nd-Freesound-Audio-Tagging-2019" ["l"="39.775,5.217"]
"YanWang2014/Mask_RCNN" ["l"="50.532,30.622"]
"yuanqing811/DSB2018_stage1_test" ["l"="50.512,30.618"]
"OO-guide-2019/oo-rules" ["l"="-4.451,19.538"]
"Mistariano/buaaoo-elevator-test-suit" ["l"="49.667,30.147"]
"svishnu88/TGS-SaltNet" ["l"="50.465,30.54"]
"svishnu88/TGS-SaltIdentification-Open-Solution-fastai" ["l"="50.411,30.577"]
"radekosmulski/tgs_salt_solution" ["l"="49.386,28.485"]
"FT-ZHOU-ZZZ/DSDL" ["l"="51.314,30.634"]
"srp753/Multi-label-Image-Classification-using-Tensorflow" ["l"="51.393,30.679"]
"Enjia/Spatial-Regularization-Network-in-Tensorflow" ["l"="51.355,30.638"]
"kuaifengle/flutter-wechat" ["l"="50.363,30.681"]
"kuaifengle/koa2-mysql-vue-vant" ["l"="50.315,30.705"]
"aD4wn/Happy_MinecraftClient" ["l"="50.346,30.728"]
"lingyejun/LeetCode" ["l"="50.335,30.713"]
"GuokaiLiu/Noisy-Labels-Problem-Collection" ["l"="51.637,30.415"]
"tomrunia/TF_FeatureExtraction" ["l"="51.819,30.836"]
"efidalgo/AutoBlur-CNN-Features" ["l"="51.779,30.807"]
"clvrai/SSGAN-Tensorflow" ["l"="46.029,29.158"]
"neptune-ai/open-solution-salt-identification" ["l"="50.485,30.54"]
"dlyldxwl/Similar-DUC-Caffe-implement" ["l"="50.515,30.897"]
"DocF/Soft-NMS" ["l"="50.937,30.368"]
"OneDirection9/soft-nms" ["l"="50.961,30.403"]
"miaoshuyu/object-detection-usages" ["l"="50.869,30.376"]
"pfnet-research/pfneumonia" ["l"="50.377,30.547"]
"digantamisra98/Mila" ["l"="51.257,30.122"]
"soeaver/AirNet-PyTorch" ["l"="43.306,31"]
"soeaver/mxnet-model" ["l"="43.315,30.989"]
"soeaver/py-RFCN-priv" ["l"="43.33,31.004"]
"soeaver/pytorch-priv" ["l"="43.315,31.009"]
"soeaver/Parsing-R-CNN" ["l"="43.357,30.968"]
"soeaver/CrossNet-PyTorch" ["l"="43.326,30.994"]
"skrish13/PyTorch-mask-x-rcnn" ["l"="53.379,29.455"]
"xuannianz/keras-fcos" ["l"="50.438,30.36"]
"DetectionTeamUCAS/RetinaNet_Tensorflow" ["l"="52.868,31.97"]
"DetectionTeamUCAS/R-FCN_Tensorflow" ["l"="52.852,31.975"]
"subho406/TF-Speech-Recognition-Challenge-Solution" ["l"="50.635,30.692"]
"bharatsingh430/snip" ["l"="50.968,30.264"]
"HiKapok/PSROIAlign" ["l"="51.032,30.402"]
"IlyaDobrynin/opti_models" ["l"="50.856,30.834"]
"TropComplique/light-head-rcnn" ["l"="51.039,30.418"]
"James-Yip/AttentionImageClass" ["l"="51.354,30.651"]
"zhufengx/SRN_multilabel" ["l"="51.335,30.651"]
"cvcode18/imbalanced_learning" ["l"="56.095,32.877"]
"hguosc/visual_attention_consistency" ["l"="51.344,30.622"]
"CCC-123/Hydraplus_Net" ["l"="56.095,32.896"]
"EricYangsw/Multi-Label-Classification" ["l"="51.365,30.664"]
"AmrMaghraby/CNN-RNN-A-Unified-Framework-for-Multi-label-Image-Classification" ["l"="51.403,30.692"]
"thuwyh/Jigsaw-Unintended-Bias-in-Toxicity-Classification" ["l"="50.333,30.602"]
"sakami0000/kaggle_jigsaw" ["l"="50.316,30.611"]
"ngxbac/Kaggle-Jigsaw" ["l"="50.335,30.618"]
"4uiiurz1/kaggle-aptos2019-blindness-detection" ["l"="50.343,30.568"]
"mikelkl/APTOS2019" ["l"="50.302,30.588"]
"minerva-ml/open-solution-ship-detection" ["l"="52.98,31.864"]
"chwahaha/statistic-of-similar-patch-offset" ["l"="50.459,31.912"]
"TreB1eN/Lighthead-RCNN-in-Pytorch0.4.1" ["l"="51.011,30.347"]
"nilesh2797/zestxml" ["l"="51.732,30.981"]
"Extreme-classification/ngame" ["l"="51.77,31.027"]
"tomtung/omikuji" ["l"="51.71,31.019"]
"OctoberChang/X-Transformer" ["l"="51.718,30.985"]
"Extreme-classification/MUFIN" ["l"="51.769,31.014"]
"mwydmuch/napkinXC" ["l"="51.752,31.032"]
"Mugichoko445/Fast-Digital-Image-Inpainting" ["l"="50.575,31.878"]
"czs0x55aa/pytorch-chatbot" ["l"="51.276,29.993"]
"CSchoel/learn-wavelets" ["l"="52.264,29.942"]
"amitguptagwl/fast-lorem-ipsum" ["l"="50.184,29.284"]
"leokarlin/LaSO" ["l"="51.32,30.657"]
"tankche1/IDeMe-Net" ["l"="57.65,19.312"]
"voyazici/orderless-rnn-classification" ["l"="51.335,30.638"]
"sunshengfei/vue-vmarker" ["l"="50.102,29.117"]
"sunshengfei/ui-picture-bd-marker" ["l"="50.116,29.141"]
"heyt0ny/KaggleBiatch" ["l"="50.95,30.699"]
"jrvmalik/time-frequency-analysis" ["l"="52.577,29.826"]
"phamduonghung/FSSTn" ["l"="52.59,29.817"]
"jfpuget/DSB_2018" ["l"="50.49,30.677"]
"dongdonghy/repulsion-loss-faster-rcnn-pytorch" ["l"="50.944,30.459"]
"miltonbd/ECCV_2018_pedestrian_detection_challenege" ["l"="50.933,30.446"]
"kalyo-zjl/APD" ["l"="50.917,30.429"]
"dongdonghy/repulsion_loss_pytorch" ["l"="50.947,30.446"]
"NobuoTsukamoto/tflite-cv-example" ["l"="49.748,29.977"]
"NobuoTsukamoto/benchmarks" ["l"="49.697,29.985"]
"guichristmann/edge-tpu-tiny-yolo" ["l"="49.715,29.991"]
"soutsios/pos-tagger-bert-tensorflow" ["l"="51.522,29.832"]
"cancam/LRP" ["l"="50.832,30.475"]
"kemaloksuz/LRP-Error" ["l"="50.835,30.528"]
"kongds/LightXML" ["l"="51.728,30.966"]
"premolab/SGIMC" ["l"="50.953,30.718"]
"phamduonghung/WSST2" ["l"="52.59,29.831"]
"tormii/SSET" ["l"="52.59,29.842"]
"frank-xwang/towards-universal-object-detection" ["l"="51.564,30.217"]
"minerva-ml/open-solution-toxic-comments" ["l"="57.472,23.997"]
"louis-she/dsb" ["l"="50.561,30.614"]
"PacktPublishing/Hands-On-OpenCV-4-with-Python" ["l"="51.443,29.563"]
"tomtung/craftml-rs" ["l"="51.717,31.047"]
"makalo/CornerNet" ["l"="50.316,30.442"]
"hellozgy/bnlstm-pytorch" ["l"="51.667,30.32"]
"h-jia/batch_normalized_LSTM" ["l"="51.636,30.308"]
"elsheikh21/population-based-training-of-NNs" ["l"="51.188,30.429"]
"Treers/MetaCost" ["l"="51.629,30.735"]
"alianoroozi/Cost-Sensitive-Learning-By-Genetic" ["l"="51.651,30.764"]
"NOVA-IMS-Innovation-and-Analytics-Lab/publications" ["l"="51.571,30.622"]
"lucasjinreal/CenterNet_Pro_Max" ["l"="50.641,30.319"]
"bit-bots/wolfgang_robot" ["l"="50.343,29.175"]
"RoboCup-Humanoid-TC/webots" ["l"="50.342,29.263"]
"SUSTAINA-OP/SUSTAINA-OP" ["l"="50.346,29.133"]
"lopuhin/kaggle-kuzushiji-2019" ["l"="50.383,30.511"]
"knjcode/kaggle-kuzushiji-recognition-2019" ["l"="50.339,30.535"]
"fanbinqi/CNN-Based-FPGA" ["l"="50.517,30.876"]
"fanbinqi/SSD-Tensorflow" ["l"="50.527,30.884"]
"gbif/gbif-api" ["l"="51.599,31.281"]
"gbif/checklistbank" ["l"="51.59,31.3"]
"gbif/rs.gbif.org" ["l"="51.578,31.277"]
"gbif/gbif-data-validator" ["l"="51.606,31.308"]
"wei-yuma/multitrident" ["l"="50.726,30.448"]
"vaesl/LFIP" ["l"="50.747,30.459"]
"zhanghacker/MVPHabit" ["l"="50.276,30.759"]
"binlian/binglian-blog" ["l"="50.313,30.725"]
"EOSDTIO/EosWallet" ["l"="50.288,30.744"]
"MinJieDev/Roadmap-Frontend" ["l"="49.654,30.168"]
"nagmakhan/multi-label-analysis" ["l"="51.371,30.631"]
"ushasi/Siamese-spatial-Graph-Convolution-Network" ["l"="51.391,30.645"]
"fredericobormann/MensaViewer" ["l"="50.289,29.257"]
"lilioid/pixeldike" ["l"="50.281,29.239"]
"irgendwr/go-stine" ["l"="50.272,29.232"]
"JialeCao001/HSD" ["l"="50.77,30.426"]
"zl1994/IoU-Uniform-R-CNN" ["l"="50.746,30.385"]
"fediazgon/pbt-keras" ["l"="51.165,30.452"]
"Wuriqilang/Industry4.0-CV" ["l"="50.422,30.147"]
"hua1024/industrial-vision-recognition" ["l"="50.41,30.169"]
"PaddlePaddle/XWorld" ["l"="49.887,29.449"]
"see--/natural-question-answering" ["l"="50.305,30.629"]
"zhanghanduo/yolo3_pytorch" ["l"="50.31,30.386"]
"harsh-99/PyTorch-Tutorials" ["l"="51.84,30.243"]
"siddhanthaldar/CUDA-CNN-Traffic-Sign-Recognition" ["l"="51.856,30.256"]
"apugoneappu/ask_me_anything" ["l"="51.877,30.259"]
"lyz04551/voc2007_classification_pytorch" ["l"="51.454,30.809"]
"ronghuaiyang/faster-rcnn-caltech-pedestrian-pytorch" ["l"="50.95,30.476"]
"YijinLiu/tf-cpu" ["l"="49.583,29.936"]
"ValYouW/crossplatform-tflite-object-detecion" ["l"="49.621,29.935"]
"AlexGidiotis/Advanced-ML-techniques" ["l"="51.667,30.785"]
"Stick-To/FCOS-tensorflow" ["l"="50.401,30.401"]
"hinanmu/BPMLL" ["l"="51.61,30.914"]
"hinanmu/C2AE_tensorflow" ["l"="51.596,30.897"]
"NaturalIntelligence/fastify-xml-body-parser" ["l"="50.166,29.261"]
"NaturalIntelligence/Grapes" ["l"="50.177,29.276"]
"bubbliiiing/Data-Structure-and-Algorithm" ["l"="50.184,30.313"]
"bubbliiiing/Optimization_Algorithm" ["l"="50.19,30.322"]
"bubbliiiing/Mnist-recognition-By-Slim" ["l"="50.193,30.309"]
"bubbliiiing/Reinforcement-Learning" ["l"="50.181,30.322"]
"bubbliiiing/ssd_keras" ["l"="50.183,30.316"]
"fanbinqi/FFBNet" ["l"="50.505,30.874"]
"HansBug/debug_logger" ["l"="49.64,30.161"]
"JaidedAI/EasyOCR" ["l"="46.216,7.49"]
"tesseract-ocr/tesseract" ["l"="48.304,29.216"]
"hiroi-sora/Umi-OCR" ["l"="-48.84,12.901"]
"chatchat-space/Langchain-Chatchat" ["l"="38.945,-1.875"]
"THUDM/ChatGLM-6B" ["l"="39.109,-1.855"]
"fighting41love/funNLP" ["l"="51.085,28.495"]
"opendatalab/MinerU" ["l"="40.716,-0.19"]
"langgenius/dify" ["l"="40.445,-0.14"]
"hiyouga/LLaMA-Factory" ["l"="40.278,0.218"]
"fatedier/frp" ["l"="-48.159,12.943"]
"mike0sv/pyjackson" ["l"="50.896,30.729"]
"fchollet/ARC-AGI" ["l"="50.957,29.372"]
"michaelhodel/arc-dsl" ["l"="53.717,29.682"]
"michaelhodel/re-arc" ["l"="53.701,29.685"]
"ellisk42/ec" ["l"="53.736,29.653"]
"google/trax" ["l"="53.153,25.852"]
"google/BIG-bench" ["l"="37.205,-0.127"]
"stanfordnlp/dspy" ["l"="40.726,0.466"]
"eastmountyxz/Book3-Python-ImageProcessing" ["l"="50.988,29.849"]
"eastmountyxz/HWCloudImageRecognition" ["l"="51.067,29.815"]
"waitingfordark/four_flower" ["l"="-2.609,-35.241"]
"Charmve/computer-vision-in-action" ["l"="51.048,29.735"]
"2209520576/Image-Processing-Algorithm" ["l"="-33.554,23.057"]
"wusaifei/garbage_classify" ["l"="-2.601,-35.167"]
"WZMIAOMIAO/deep-learning-for-image-processing" ["l"="50.591,29.6"]
"cruxopen/openISP" ["l"="-34.602,22.356"]
"bubbliiiing/yolo3-pytorch" ["l"="50.327,30.182"]
"bubbliiiing/faster-rcnn-pytorch" ["l"="50.35,30.195"]
"bubbliiiing/yolov4-tiny-pytorch" ["l"="50.271,30.228"]
"bubbliiiing/yolov5-pytorch" ["l"="50.295,30.2"]
"bubbliiiing/yolox-pytorch" ["l"="50.312,30.217"]
"bubbliiiing/mobilenet-yolov4-pytorch" ["l"="50.269,30.248"]
"bubbliiiing/efficientdet-pytorch" ["l"="50.255,30.261"]
"bubbliiiing/yolov7-pytorch" ["l"="50.295,30.222"]
"bubbliiiing/yolo3-keras" ["l"="50.184,30.26"]
"bubbliiiing/centernet-pytorch" ["l"="50.309,30.265"]
"bubbliiiing/faster-rcnn-keras" ["l"="50.213,30.273"]
"bubbliiiing/unet-pytorch" ["l"="50.224,30.184"]
"bubbliiiing/retinanet-pytorch" ["l"="50.265,30.28"]
"mikel-brostrom/boxmot" ["l"="54.558,32.535"]
"enazoe/yolo-tensorrt" ["l"="53.272,32.657"]
"jkjung-avt/tensorrt_demos" ["l"="53.223,32.581"]
"signatrix/efficientdet" ["l"="50.675,30.161"]
"mli/paper-reading" ["l"="50.604,29.465"]
"WongKinYiu/ScaledYOLOv4" ["l"="50.591,30.091"]
"DLLXW/data-science-competition" ["l"="57.366,23.016"]
"tslgithub/image_class" ["l"="-51.509,-14.944"]
"WenmuZhou/PytorchOCR" ["l"="46.402,7.334"]
"BangguWu/ECANet" ["l"="53.554,31.092"]
"spytensor/pytorch_img_classification_for_competition" ["l"="42.404,25.989"]
"NVlabs/SegFormer" ["l"="48.864,30.228"]
"facebookresearch/Mask2Former" ["l"="48.83,30.207"]
"Rudrabha/Wav2Lip" ["l"="32.12,30.272"]
"OpenTalker/SadTalker" ["l"="32.137,30.238"]
"OpenTalker/video-retalking" ["l"="32.155,30.32"]
"AliaksandrSiarohin/first-order-model" ["l"="45.006,30.941"]
"XPixelGroup/BasicSR" ["l"="-34.956,21.539"]
"PeterL1n/BackgroundMattingV2" ["l"="44.928,30.85"]
"Alibaba-MIIL/ASL" ["l"="51.246,30.546"]
"Alibaba-MIIL/ML_Decoder" ["l"="51.215,30.524"]
"QData/C-Tran" ["l"="51.274,30.603"]
"JiaweiZhao-git/Awesome-Multi-label-Image-Recognition" ["l"="51.269,30.623"]
"Kevinz-code/CSRA" ["l"="51.252,30.618"]
"Alibaba-MIIL/PartialLabelingCSL" ["l"="51.245,30.58"]
"Yejin0111/ADD-GCN" ["l"="51.3,30.605"]
"Alibaba-MIIL/ImageNet21K" ["l"="51.117,30.299"]
"chehao2628/MSRN" ["l"="51.259,30.601"]
"naver-ai/relabel_imagenet" ["l"="46.108,6.533"]
"MhLiao/DB" ["l"="46.396,7.29"]
"Yuliang-Liu/bezier_curve_text_spotting" ["l"="46.507,7.275"]
"google-research/tuning_playbook" ["l"="50.662,29.386"]
"binary-husky/gpt_academic" ["l"="44.23,1.435"]
"rasbt/LLMs-from-scratch" ["l"="40.329,0.377"]
"krahets/hello-algo" ["l"="-4.324,17.271"]
"yunjey/pytorch-tutorial" ["l"="50.738,28.451"]
"d2l-ai/d2l-zh" ["l"="51.084,28.383"]
"floodsung/Deep-Learning-Papers-Reading-Roadmap" ["l"="47.883,28.627"]
"clovaai/AdamP" ["l"="23.608,14.834"]
"davda54/sam" ["l"="51.055,29.935"]
"PaddlePaddle/PaddleVideo" ["l"="-54.543,-14.526"]
"WongKinYiu/PyTorch_YOLOv4" ["l"="50.513,30.065"]
"argusswift/YOLOv4-pytorch" ["l"="-54.417,-14.627"]
"bubbliiiing/yolov4-keras" ["l"="50.21,30.255"]
"object-detection-algorithm/R-CNN" ["l"="51.746,29.556"]
"zjZSTU/Fast-R-CNN" ["l"="51.773,29.545"]
"FLyingLSJ/PyTorch-YOLOv3-master" ["l"="51.688,29.584"]
"open-mmlab/mmrazor" ["l"="53.517,33.522"]
"facebookresearch/mae" ["l"="50.721,29.589"]
"facebookresearch/deit" ["l"="50.79,29.736"]
"facebookresearch/dino" ["l"="50.773,29.606"]
"voxel51/fiftyone" ["l"="50.554,29.627"]
"IDEA-Research/Grounded-Segment-Anything" ["l"="48.915,30.081"]
"facebookresearch/dinov2" ["l"="48.971,30.114"]
"facebookresearch/sam2" ["l"="48.908,29.989"]
"open-mmlab/mmfewshot" ["l"="49.426,29.431"]
"open-mmlab/mmocr" ["l"="46.396,7.37"]
"open-mmlab/mmrotate" ["l"="53.111,31.954"]
"dog-qiuqiu/Yolo-Fastest" ["l"="50.431,30.006"]
"dog-qiuqiu/MobileNet-Yolo" ["l"="-54.363,-14.375"]
"dog-qiuqiu/Yolo-FastestV2" ["l"="53.346,3.646"]
"cmdbug/YOLOv5_NCNN" ["l"="49.55,30.929"]
"dog-qiuqiu/FastestDet" ["l"="53.316,3.677"]
"ppogg/YOLOv5-Lite" ["l"="53.379,3.659"]
"Syencil/mobile-yolov5-pruning-distillation" ["l"="53.408,3.653"]
"ZHKKKe/MODNet" ["l"="44.839,30.857"]
"mindspore-ai/mindspore" ["l"="49.697,29.714"]
"mindspore-ai/docs" ["l"="49.61,29.674"]
"mindspore-ai/akg" ["l"="49.602,29.701"]
"mindspore-ai/mindinsight" ["l"="49.61,29.69"]
"mindspore-ai/graphengine" ["l"="49.62,29.684"]
"mindspore-ai/community" ["l"="49.617,29.71"]
"mindspore-ai/ms-operator" ["l"="49.63,29.695"]
"mindspore-ai/mail_templates" ["l"="49.647,29.688"]
"mindspore-ai/mindspore-21-days-tutorials" ["l"="49.619,29.699"]
"mindspore-ai/book" ["l"="49.634,29.687"]
"mindspore-ai/infrastructure" ["l"="49.627,29.672"]
"mindspore-ai/serving" ["l"="49.641,29.7"]
"mindspore-ai/hub" ["l"="49.641,29.677"]
"mindspore-ai/course" ["l"="49.631,29.707"]
"mindspore-ai/mindarmour" ["l"="49.599,29.684"]
"PaddlePaddle/awesome-DeepLearning" ["l"="50.147,29.673"]
"BR-IDL/PaddleViT" ["l"="50.207,29.637"]
"datawhalechina/competition-baseline" ["l"="50.779,27.961"]
"thunlp/GNNPapers" ["l"="52.95,16.001"]
"SeuTao/RSNA2019_Intracranial-Hemorrhage-Detection" ["l"="50.537,30.473"]
"darraghdog/rsna" ["l"="50.536,30.448"]
"okotaku/kaggle_rsna2019_3rd_solution" ["l"="50.517,30.451"]
"ngxbac/Kaggle-RSNA" ["l"="50.527,30.458"]
"perone/medicaltorch" ["l"="61.934,36.837"]
"fengzhenHIT/learnOpenCV4_Python" ["l"="51.443,29.658"]
"fengzhenHIT/Leran-OpenCV-4-data" ["l"="51.425,29.663"]
"inaturalist/inaturalist" ["l"="51.556,31.14"]
"jumear/stirfry" ["l"="51.554,31.17"]
"tdwg/dwc" ["l"="51.63,31.255"]
"Growstuff/growstuff" ["l"="43.004,25.864"]
"gbif/pygbif" ["l"="51.583,31.258"]
"globalbioticinteractions/globalbioticinteractions" ["l"="51.6,31.208"]
"murtazahassan/Learn-OpenCV-in-3-hours" ["l"="50.317,30.034"]
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" ["l"="50.285,30.06"]
"murtazahassan/Face-Recognition" ["l"="50.257,30.069"]
"Fafa-DL/Opencv-project" ["l"="50.319,29.982"]
"murtazahassan/Document-Scanner" ["l"="50.255,30.047"]
"murtazahassan/Learn-Python" ["l"="50.274,30.06"]
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" ["l"="50.279,30.069"]
"murtazahassan/Tello-Object-Tracking" ["l"="50.268,30.071"]
"murtazahassan/Real-Time-Object-Measurement" ["l"="50.269,30.043"]
"murtazahassan/Drone-Face-Tracking" ["l"="50.258,30.058"]
"murtazahassan/Learn-Raspberry-Pi" ["l"="50.265,30.061"]
"murtazahassan/Raspberry-Pi-Ultimate-Robot" ["l"="50.268,30.053"]
"rchavezj/OpenCV_Projects" ["l"="50.306,30.081"]
"murtazahassan/Angle-Finder" ["l"="50.276,30.053"]
"facebookresearch/ConvNeXt" ["l"="50.707,29.721"]
"iamhankai/ghostnet.pytorch" ["l"="50.743,30.081"]
"huawei-noah/Efficient-Computing" ["l"="52.618,33.35"]
"bubbliiiing/M2det-Keras" ["l"="50.194,30.297"]
"bubbliiiing/ssd-keras" ["l"="50.19,30.28"]
"bubbliiiing/RFB-keras" ["l"="50.206,30.294"]
"bubbliiiing/retinanet-keras" ["l"="50.201,30.299"]
"bubbliiiing/mobilenet-ssd-keras" ["l"="50.213,30.289"]
"bubbliiiing/mask-recognize" ["l"="50.187,30.332"]
"bubbliiiing/poems-generator" ["l"="50.186,30.305"]
"bubbliiiing/mtcnn-keras" ["l"="50.173,30.33"]
"bubbliiiing/seq2seq-keras" ["l"="50.191,30.316"]
"bubbliiiing/Transfer-Learning" ["l"="50.173,30.302"]
"bubbliiiing/classic-convolution-network" ["l"="50.179,30.309"]
"bubbliiiing/count-mAP-txt" ["l"="50.184,30.294"]
"bubbliiiing/Mobilenet-SSD-Essay" ["l"="50.22,30.3"]
"Jittor/jittor" ["l"="49.956,29.805"]
"Oneflow-Inc/oneflow" ["l"="51.362,2.685"]
"bytedance/byteps" ["l"="58.028,23.559"]
"microsoft/nnfusion" ["l"="37.073,0.947"]
"merrymercy/awesome-tensor-compilers" ["l"="37.035,0.94"]
"alibaba/BladeDISC" ["l"="37.066,0.962"]
"Jittor/JNeRF" ["l"="63.729,1.69"]
"halide/Halide" ["l"="37.107,0.89"]
"MenghaoGuo/PCT" ["l"="65.335,11.5"]
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["l"="36.947,0.829"]
"tqchen/tinyflow" ["l"="57.91,23.583"]
"WongKinYiu/yolor" ["l"="50.499,30.038"]
"sightmachine/SimpleCV" ["l"="51.477,29.731"]
"liuliu/ccv" ["l"="-31.562,-35.605"]
"scikit-image/scikit-image" ["l"="43.575,23.459"]
"sightmachine/simplecv-examples" ["l"="51.535,29.728"]
"vlfeat/vlfeat" ["l"="60.365,9.513"]
"luispedro/mahotas" ["l"="51.576,29.71"]
"ukoethe/vigra" ["l"="52.6,27.704"]
"peterbraden/node-opencv" ["l"="-31.578,-35.557"]
"zk00006/OpenTLD" ["l"="54.807,33.631"]
"waveform80/picamera" ["l"="42.654,7.848"]
"sightmachine/simplecv-js" ["l"="51.518,29.715"]
"lessthanoptimal/BoofCV" ["l"="-2.204,17.399"]
"utahta/pythonbrew" ["l"="47.335,17.535"]
"cmusatyalab/openface" ["l"="33.525,29.32"]
"terryky/tflite_gles_app" ["l"="49.807,29.972"]
"axinc-ai/ailia-models" ["l"="44.829,30.969"]
"iwatake2222/play_with_tflite" ["l"="49.762,29.944"]
"PINTO0309/openvino2tensorflow" ["l"="49.813,29.952"]
"PINTO0309/tflite2tensorflow" ["l"="49.775,29.96"]
"equationl/paddleocr4android" ["l"="59.86,-14.394"]
"FeiGeChuanShu/ncnn_paddleocr" ["l"="49.61,30.885"]
"PaddlePaddle/LiteKit" ["l"="49.938,29.502"]
"shanglianlm0525/PyTorch-Networks" ["l"="50.604,29.958"]
"shanglianlm0525/CvPytorch" ["l"="53.34,3.744"]
"murufeng/awesome_lightweight_networks" ["l"="50.54,29.899"]
"iscyy/ultralyticsPro" ["l"="53.492,3.653"]
"bubbliiiing/yolov7-tiny-pytorch" ["l"="50.281,30.265"]
"bubbliiiing/classification-pytorch" ["l"="50.244,30.237"]
"bubbliiiing/yolov4-tiny-tf2" ["l"="50.177,30.286"]
"bubbliiiing/yolov4-tiny-keras" ["l"="50.2,30.275"]
"SeldonIO/alibi" ["l"="45.223,26.11"]
"jphall663/awesome-machine-learning-interpretability" ["l"="45.195,26.141"]
"kundajelab/deeplift" ["l"="24.128,14.299"]
"cdpierse/transformers-interpret" ["l"="52.586,25.694"]
"albermax/innvestigate" ["l"="24.158,14.289"]
"Confusezius/Deep-Metric-Learning-Baselines" ["l"="32.809,29.466"]
"bnu-wangxun/Deep_Metric" ["l"="32.831,29.449"]
"facebookresearch/moco" ["l"="53.011,29.578"]
"google-research/simclr" ["l"="53.009,29.54"]
"jshilong/SEPC" ["l"="50.807,30.31"]
"zju3dv/snake" ["l"="50.69,30.234"]
"zhang-tao-whu/e2ec" ["l"="50.659,30.425"]
"youngwanLEE/centermask2" ["l"="50.651,30.243"]
"lkevinzc/dance" ["l"="50.662,30.376"]
"PeizeSun/OneNet" ["l"="50.741,30.275"]
"kkhoot/PAA" ["l"="50.768,30.308"]
"implus/GFocalV2" ["l"="50.768,30.262"]
"hyz-xmaster/swa_object_detection" ["l"="52.931,13.561"]
"Megvii-BaseDetection/AutoAssign" ["l"="50.764,30.338"]
"microsoft/RelationNet2" ["l"="50.758,30.319"]
"hkzhang95/DynamicRCNN" ["l"="50.734,30.346"]
"TheNerdful8/Lecture2Gether" ["l"="50.275,29.217"]
"DWCTOD/CVPR2024-Papers-with-Code-Demo" ["l"="50.86,29.732"]
"Kobaayyy/Awesome-CVPR2025-CVPR2024-CVPR2021-CVPR2020-Low-Level-Vision" ["l"="-34.944,21.461"]
"luxonis/depthai" ["l"="49.485,29.995"]
"luxonis/depthai-experiments" ["l"="49.48,30.012"]
"luxonis/depthai-python" ["l"="49.444,30.001"]
"luxonis/depthai-hardware" ["l"="49.434,30.017"]
"luxonis/depthai-core" ["l"="49.45,30.02"]
"luxonis/depthai-ml-training" ["l"="49.46,29.995"]
"luxonis/depthai-ros" ["l"="49.441,30.036"]
"geaxgx/depthai_blazepose" ["l"="49.47,29.969"]
"geaxgx/depthai_hand_tracker" ["l"="49.429,29.984"]
"luxonis/depthai-tutorials" ["l"="49.46,30.009"]
"SpectacularAI/sdk-examples" ["l"="49.413,30.032"]
"luxonis/depthai-gui" ["l"="49.468,30.037"]
"duncanrhamill/oakd_orbslam3" ["l"="49.417,29.998"]
"keijiro/DepthAITestbed" ["l"="49.396,30"]
"compphoto/BoostingMonocularDepth" ["l"="64.761,4.319"]
"mert-kurttutan/torchview" ["l"="24.48,14.326"]
"XuehaiPan/nvitop" ["l"="38.884,-0.793"]
"Epiphqny/SOLOv2" ["l"="50.595,30.283"]
"hustvl/SparseInst" ["l"="50.659,30.407"]
"conradry/copy-paste-aug" ["l"="50.78,30.341"]
"sxhxliang/detectron2_backbone" ["l"="50.666,30.315"]
"grimoire/mmdetection-to-tensorrt" ["l"="53.194,32.721"]
"ayoolaolafenwa/PixelLib" ["l"="50.561,30.107"]
"google-research-datasets/Objectron" ["l"="59.3,15.672"]
"krishnaik06/Image-Segmentation-Using-Pixellib" ["l"="48.298,24.755"]
"azavea/raster-vision" ["l"="41.74,24.192"]
"Tessellate-Imaging/Monk_Object_Detection" ["l"="48.471,26.212"]
"niconielsen32/ComputerVision" ["l"="49.841,29.856"]
"niconielsen32/NeuralNetworks" ["l"="49.777,29.845"]
"niconielsen32/ArtificialIntelligence" ["l"="49.799,29.858"]
"luigifreda/pyslam" ["l"="59.357,11.12"]
"LearnTechWithUs/Stereo-Vision" ["l"="65.354,5.054"]
"FoamoftheSea/KITTI_visual_odometry" ["l"="59.437,10.896"]
"polygon-software/python-visual-odometry" ["l"="59.412,11.031"]
"niconielsen32/PoseEstimation3DObjectDetection" ["l"="49.81,29.835"]
"niconielsen32/VisualSLAM" ["l"="49.792,29.819"]
"tryolabs/norfair" ["l"="54.552,32.486"]
"isl-org/MiDaS" ["l"="64.787,4.249"]
"niconielsen32/PointClouds" ["l"="49.804,29.848"]
"ruhyadi/YOLO3D" ["l"="64.774,11.062"]
"niconielsen32/ObjectTracking" ["l"="49.789,29.834"]
"RizwanMunawar/yolov7-object-tracking" ["l"="54.537,32.447"]
"changh95/visual-slam-roadmap" ["l"="59.382,11.178"]
"jiequancui/ResLT" ["l"="51.263,30.483"]
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" ["l"="50.784,29.534"]
"paulgavrikov/visualkeras" ["l"="50.883,29.371"]
"alexlenail/NN-SVG" ["l"="47.656,26.372"]
"garrettj403/SciencePlots" ["l"="47.968,27.985"]
"murtazahassan/Object-Following-Robot" ["l"="50.244,30.049"]
"murtazahassan/TeslaCyberTruck-Arduino" ["l"="50.247,30.064"]
"murtazahassan/Obstacle-Avoding-Robot" ["l"="50.249,30.055"]
"Lightning-Universe/lightning-transformers" ["l"="-5.166,-23.272"]
"libffcv/ffcv" ["l"="50.953,29.6"]
"vturrisi/solo-learn" ["l"="52.948,29.493"]
"facebookresearch/swav" ["l"="53.018,29.559"]
"Serafadam/depthai_ros_driver" ["l"="49.393,30.054"]
"ibaiGorordo/depthai-android-unity-example" ["l"="49.405,30.017"]
"luxonis/depthai-shared" ["l"="49.413,30.055"]
"luxonis/depthai-ros-examples" ["l"="49.413,30.071"]
"eduidl/rtui" ["l"="59.163,12.706"]
"NVIDIA-ISAAC-ROS/isaac_ros_visual_slam" ["l"="59.384,11.222"]
"naturerobots/mesh_tools" ["l"="60.534,13.652"]
"LeeDoYup/FixMatch-pytorch" ["l"="23.605,14.87"]
"kekmodel/MPL-pytorch" ["l"="51.453,30.363"]
"microsoft/Semi-supervised-learning" ["l"="51.399,30.373"]
"facebookresearch/SlowFast" ["l"="47.949,33.829"]
"facebookresearch/pytorchvideo" ["l"="47.977,33.813"]
"JDAI-CV/centerX" ["l"="50.679,30.255"]
"zzzxxxttt/pytorch_simple_CenterNet_45" ["l"="50.564,30.303"]
"lbin/CenterNet-better-plus" ["l"="50.628,30.289"]
"bleakie/CenterMulti" ["l"="33.361,29.227"]
"ZJULearning/ttfnet" ["l"="50.717,30.273"]
"ZeroE04/R-CenterNet" ["l"="53.059,31.963"]
"tensorboy/centerpose" ["l"="31.778,28.241"]
"OpnTec/2022.opentechsummit.de" ["l"="51.487,29.057"]
"OpnTec/pycon.world" ["l"="51.425,29.064"]
"fossasia/2019.codeheat.org" ["l"="51.426,29.151"]
"fossasia/fossasia-presentations" ["l"="51.352,29.18"]
"fossasia/delhi.jugaadfest.com" ["l"="51.342,29.128"]
"fossasia/hyderabad.jugaadfest.com" ["l"="51.361,29.137"]
"OpnTec/srilanka.pycon.world" ["l"="51.402,29.095"]
"OpnTec/singapore.pycon.world" ["l"="51.406,29.078"]
"OpnTec/vietnam.pycon.world" ["l"="51.359,29.095"]
"OpnTec/opentech.asia" ["l"="51.344,29.091"]
"OpnTec/china.pycon.world" ["l"="51.383,29.07"]
"OpnTec/indochina.pycon.world" ["l"="51.383,29.094"]
"OpnTec/germany.pycon.world" ["l"="51.402,29.06"]
"OpnTec/delhiday.opentechsummit.in" ["l"="51.355,29.081"]
"OpnTec/srilanka.opentech.asia" ["l"="51.375,29.083"]
"OpnTec/devopssg.opentech.asia" ["l"="51.386,29.047"]
"OpnTec/thai.opentech.asia" ["l"="51.365,29.07"]
"OpnTec/austria.opentechsummit.eu" ["l"="51.341,29.073"]
"OpnTec/south.opentechsummit.in" ["l"="51.332,29.063"]
"OpnTec/thaiday.opentech.asia" ["l"="51.355,29.06"]
"fossasia/orgmanager" ["l"="51.362,29.115"]
"OpnTec/myanmar.opentech.asia" ["l"="51.375,29.057"]
"OpnTec/vietnam.opentech.asia" ["l"="51.344,29.049"]
"OpnTec/indochina.opentech.asia" ["l"="51.364,29.047"]
"OpnTec/japan.opentech.asia" ["l"="51.375,29.034"]
"OpnTec/aisg.opentech.asia" ["l"="51.349,29.033"]
"OpnTec/cloudsg.opentech.asia" ["l"="51.328,29.039"]
"OpnTec/malaysia.opentech.asia" ["l"="51.364,29.019"]
"OpnTec/2019.opentechsummit.cn" ["l"="51.321,29.081"]
"fossasia/speech_recognition" ["l"="51.303,29.142"]
"fossasia/magic-epaper-case" ["l"="51.291,29.161"]
"OpnTec/pycon.cn" ["l"="51.327,29.106"]
"fossasia/libsigrokdecode" ["l"="51.304,29.173"]
"fossasia/led-name-badge-ls32" ["l"="51.291,29.12"]
"fossasia/libsigrok" ["l"="51.286,29.179"]
"OpnTec/opentechsummit.cn" ["l"="51.308,29.121"]
"OpnTec/kiku.ai" ["l"="51.323,29.128"]
"OpnTec/mbm.vn" ["l"="51.323,29.146"]
"OpnTec/loklak_tweetsearch_android" ["l"="51.328,29.166"]
"OpnTec/libregraphics.asia" ["l"="51.345,29.157"]
"murtazahassan/OpenCV-Sudoku-Solver" ["l"="50.278,30.081"]
"cortictechnology/cep" ["l"="49.453,30.068"]
"luxonis/depthai-unity" ["l"="49.375,30.005"]
"geaxgx/depthai_pipeline_graph" ["l"="49.45,29.978"]
"yjh0410/CenterNet-Lite" ["l"="50.544,30.332"]
"yjh0410/PyTorch_YOLO-Family" ["l"="50.585,30.364"]
"yjh0410/RT-ODLab" ["l"="50.574,30.379"]
"yjh0410/DetLAB" ["l"="50.588,30.379"]
"yjh0410/PyTorch_YOLOv2" ["l"="50.605,30.375"]
"hunglc007/tensorflow-yolov4-tflite" ["l"="50.408,32.858"]
"xuannianz/SAPD" ["l"="50.516,30.273"]
"bubbliiiing/efficientdet-tf2" ["l"="50.213,30.305"]
"bubbliiiing/efficientdet-keras" ["l"="50.196,30.288"]
"bubbliiiing/efficientnet-yolo3-keras" ["l"="50.203,30.286"]
"bubbliiiing/detr-pytorch" ["l"="50.262,30.292"]
"xl8-ai/WordSiMT" ["l"="50.746,30.359"]
"Megvii-BaseDetection/OTA" ["l"="50.746,30.325"]
"fcjian/TOOD" ["l"="50.777,30.322"]
"kemaloksuz/aLRPLoss" ["l"="50.821,30.373"]
"echen/dirichlet-process" ["l"="53.025,26.319"]
"srendle/libfm" ["l"="57.973,23.42"]
"Cospel/rbm-ae-tf" ["l"="51.028,30.869"]
"felipecruz/CFRBM" ["l"="51.012,30.988"]
"joanbruna/stat212b" ["l"="47.831,28.854"]
"benanne/morb" ["l"="51.009,30.91"]
"coreylynch/pyFM" ["l"="57.991,23.385"]
"MrChrisJohnson/implicit-mf" ["l"="59.647,23.892"]
"rentainhe/pytorch-distributed-training" ["l"="51.056,29.887"]
"jia-zhuang/pytorch-multi-gpu-training" ["l"="51.083,29.883"]
"pengzhiliang/MAE-pytorch" ["l"="50.764,29.581"]
"PaddlePaddle/Paddle.js" ["l"="50.04,29.494"]
"max-team/Mars" ["l"="-5.047,-33.02"]
"searchfe/ts2php" ["l"="-5.04,-32.988"]
"react-melon/melon" ["l"="-4.878,-33.099"]
"xr2117/bean-mapping" ["l"="-53.384,-14.547"]
"lihang212010/Elasticsearch-ais" ["l"="-53.399,-14.574"]
"PaddlePaddle/PaddleScience" ["l"="21.836,15.958"]
"mazouri/kvcache" ["l"="-53.372,-14.547"]
"wenhaoli-xmu/opencv_projects" ["l"="51.581,29.61"]
"fengzhenHIT/MachineVisionAlgorithm" ["l"="51.538,29.635"]
"omerferhatt/torch2tflite" ["l"="49.882,29.988"]
"google-ai-edge/ai-edge-torch" ["l"="49.817,29.931"]
"eliberis/tflite-tools" ["l"="-16.234,-42.607"]
"Fafa-DL/Image-Augmentation" ["l"="50.363,29.995"]
"Fafa-DL/LabelConvert" ["l"="50.398,29.993"]
"Fafa-DL/Awesome-Backbones" ["l"="50.49,29.904"]
"WangQvQ/YOLOMagic" ["l"="53.466,3.672"]
"Javacr/PyQt5-YOLOv5" ["l"="53.556,3.69"]
"bubbliiiing/object-detection-augmentation" ["l"="50.323,30.239"]
"TommyZihao/Train_Custom_Dataset" ["l"="50.394,29.87"]
"z1069614715/objectdetection_script" ["l"="50.441,29.706"]
"iscyy/yoloair2" ["l"="53.464,3.655"]
"midasklr/yolov5prune" ["l"="53.418,3.625"]
"Gumpest/YOLOv5-Multibackbone-Compression" ["l"="53.444,3.658"]
"facebookresearch/VMZ" ["l"="47.854,33.9"]
"facebookresearch/video-long-term-feature-banks" ["l"="47.78,33.94"]
"gsig/PyVideoResearch" ["l"="47.828,33.919"]
"mit-han-lab/temporal-shift-module" ["l"="47.901,33.854"]
"decisionforce/TPN" ["l"="47.83,33.884"]
"facebookresearch/video-nonlocal-net" ["l"="47.861,33.881"]
"fendouai/PyTorchDocs" ["l"="50.761,28.287"]
"HuangCongQing/pcl-learning" ["l"="58.087,9.801"]
"eastmountyxz/Python-zero2one" ["l"="51.138,29.762"]
"shinya7y/UniverseNet" ["l"="50.824,30.273"]
"yjh0410/CenterNet-plus" ["l"="50.566,30.288"]
"yjh0410/FCOS-RT_PyTorch" ["l"="50.492,30.371"]
"bubbliiiing/unet-keras" ["l"="50.132,30.304"]
"bubbliiiing/deeplabv3-plus-keras" ["l"="50.058,30.322"]
"bubbliiiing/pspnet-tf2" ["l"="50.099,30.319"]
"bubbliiiing/unet-tf2" ["l"="50.074,30.335"]
"bubbliiiing/retinaface-tf2" ["l"="50.171,30.34"]
"bubbliiiing/srgan-keras" ["l"="50.147,30.364"]
"bubbliiiing/pspnet-keras" ["l"="50.077,30.313"]
"BelgianBiodiversityPlatform/python-dwca-reader" ["l"="51.609,31.27"]
"plantnet/gbif-dl" ["l"="51.606,31.341"]
"huawei-noah/bolt" ["l"="37.114,0.758"]
"nihui/opencv-mobile" ["l"="50.203,29.912"]
"OpenPPL/ppl.nn" ["l"="37.036,0.833"]
"uploadcare/pillow-simd" ["l"="51.04,29.838"]
"discord/lilliput" ["l"="1.119,-7.655"]
"pytorch/torchdynamo" ["l"="37.098,0.959"]
"ermig1979/Simd" ["l"="-19.57,-26.205"]
"PyAV-Org/PyAV" ["l"="44.229,20.116"]
"pytorch/accimage" ["l"="51.203,29.837"]
"dmlc/decord" ["l"="47.928,33.807"]
"python-pillow/Pillow" ["l"="44.441,20.574"]
"ijl/orjson" ["l"="44.857,20.98"]
"izmailovpavel/understandingbdl" ["l"="23.633,14.897"]
"hendrycks/imagenet-r" ["l"="38.848,-7.545"]
"anguyen8/sam" ["l"="23.589,14.885"]
"MadryLab/cox" ["l"="23.578,14.882"]
"6004x/jade" ["l"="23.595,14.871"]
"oxwhirl/treeqn" ["l"="23.577,14.877"]
"bayesiains/nsf" ["l"="23.608,14.889"]
"jasmcaus/caer" ["l"="51.232,29.624"]
"jasmcaus/opencv-course" ["l"="51.104,29.704"]
"jasmcaus/hazel" ["l"="51.219,29.638"]
"jasmcaus/ai-math-roadmap" ["l"="51.297,29.573"]
"jasmcaus/dotfiles" ["l"="51.209,29.63"]
"jasmcaus/canaro" ["l"="51.179,29.658"]
"fastnlp/fitlog" ["l"="53.398,27.103"]
"Santosh-Gupta/SpeedTorch" ["l"="50.944,30.254"]
"WenFuLee/CS-766-Computer-Vision" ["l"="50.476,31.961"]
"yjh0410/yolov3-plus_PyTorch" ["l"="50.587,30.41"]
"lavendelion/YOLOv1-from-scratch" ["l"="50.547,30.364"]
"FishYuLi/BalancedGroupSoftmax" ["l"="51.114,30.403"]
"tztztztztz/eqlv2" ["l"="51.065,30.402"]
"CASIA-IVA-Lab/ACSL" ["l"="51.106,30.432"]
"GiantPandaCV/yolov3-point" ["l"="50.595,30.148"]
"gmayday1997/SmallObjectAugmentation" ["l"="53.894,31.944"]
"bubbliiiing/retinaface-keras" ["l"="50.204,30.315"]
"bubbliiiing/mobilenet-yolov4-tf2" ["l"="50.193,30.269"]
"WangWenhao0716/Attentive-WaveBlock" ["l"="57.866,8.93"]
"WangWenhao0716/V2L" ["l"="57.883,8.95"]
"HumanSignal/label-studio-ml-backend" ["l"="50.299,29.132"]
"HumanSignal/label-studio-converter" ["l"="50.281,29.089"]
"HumanSignal/label-studio-frontend" ["l"="50.291,29.065"]
"HumanSignal/label-studio-sdk" ["l"="50.258,29.094"]
"HumanSignal/label-studio-transformers" ["l"="50.262,29.068"]
"seblful/label-studio-yolo-backend" ["l"="50.315,29.094"]
"open-mmlab/playground" ["l"="48.845,30.051"]
"35grain/label-studio-yolov8-backend" ["l"="50.269,29.115"]
"slgero/testovoe" ["l"="-44.347,26.083"]
"maciejczyzewski/batchboost" ["l"="51.483,30.621"]
"microsoft/SoftTeacher" ["l"="51.008,30.242"]
"bentrevett/pytorch-nli" ["l"="51.4,29.854"]
"bentrevett/pytorch-text-classification" ["l"="51.314,29.866"]
"bentrevett/pytorch-language-modeling" ["l"="51.314,29.878"]
"bubbliiiing/pspnet-pytorch" ["l"="50.217,30.213"]
"bubbliiiing/hrnet-pytorch" ["l"="50.196,30.195"]
"bubbliiiing/deeplabv3-plus-pytorch" ["l"="50.237,30.162"]
"bubbliiiing/segformer-pytorch" ["l"="50.203,30.161"]
"bubbliiiing/Semantic-Segmentation" ["l"="50.169,30.267"]
"Lextal/pspnet-pytorch" ["l"="53.399,30.847"]
"ggyyzm/pytorch_segmentation" ["l"="50.174,30.189"]
"bubbliiiing/segmentation-format-fix" ["l"="50.189,30.178"]
"HiLab-git/SSL4MIS" ["l"="61.849,36.84"]
"charlesCXK/TorchSemiSeg" ["l"="51.366,37.24"]
"HobbitLong/PyContrast" ["l"="53.038,29.557"]
"murtazahassan/Robot-Arm-Gesture-Control" ["l"="50.238,30.059"]
"murtazahassan/Digits-Classification" ["l"="50.244,30.069"]
"murtazahassan/darknet" ["l"="50.258,30.079"]
"ShiYunyi/Meta-Weight-Net_Code-Optimization" ["l"="51.634,30.484"]
"microsoft/MLC" ["l"="51.551,30.452"]
"xjtushujun/Meta-weight-net_class-imbalance" ["l"="51.654,30.478"]
"xjtushujun/CMW-Net" ["l"="51.63,30.497"]
"AdrienLE/ANIML" ["l"="57.634,19.416"]
"WongKinYiu/PartialResidualNetworks" ["l"="51.783,33.265"]
"megvii-model/YOLOF" ["l"="50.723,30.244"]
"CaoWGG/CenterNet-CondInst" ["l"="50.52,30.357"]
"DeepSceneSeg/EfficientPS" ["l"="53.22,30.936"]
"HikariTJU/LD" ["l"="53.614,33.477"]
"cccorn/AP-loss" ["l"="50.841,30.316"]
"bubbliiiing/keras-face-recognition" ["l"="50.163,30.308"]
"bubbliiiing/facenet-keras" ["l"="50.167,30.353"]
"andrewekhalel/edafa" ["l"="45.87,31.19"]
"PaddlePaddle/CINN" ["l"="49.921,29.498"]
"PaddlePaddle/continuous_integration" ["l"="49.921,29.513"]
"fei-aiart/courses" ["l"="50.459,30.11"]
"PyImageSearch/imutils" ["l"="50.894,29.752"]
"davisking/dlib" ["l"="33.561,29.281"]
"jeffbass/imagezmq" ["l"="54.666,32.534"]
"nwojke/deep_sort" ["l"="54.589,32.604"]
"abewley/sort" ["l"="54.579,32.629"]
"opencv/opencv-python" ["l"="43.53,23.417"]
"flame/how-to-optimize-gemm" ["l"="37.053,0.853"]
"pprp/awesome-attention-mechanism-in-cv" ["l"="53.594,31.164"]
"houqb/CoordAttention" ["l"="53.554,31.111"]
"viscom-ulm/Net2Vis" ["l"="50.93,29.295"]
"willyfh/visualtorch" ["l"="50.913,29.314"]
"keplr-io/quiver" ["l"="50.406,33.282"]
"kennethleungty/Neural-Network-Architecture-Diagrams" ["l"="50.85,29.408"]
"bubbliiiing/mask-rcnn-keras" ["l"="50.231,30.287"]
"bubbliiiing/GAN-keras" ["l"="50.167,30.318"]
"bubbliiiing/yolov4-tf2" ["l"="50.159,30.281"]
"cvgroup-njust/CityPersons" ["l"="50.865,30.424"]
"JialeCao001/PedSurvey" ["l"="50.846,30.429"]
"hasanirtiza/PedesFormer-Transformer-Networks-For-Pedestrian-Detection" ["l"="50.855,30.451"]
"SamsungLabs/iterdet" ["l"="50.832,30.418"]
"AbdulHannanKhan/F2DNet" ["l"="50.839,30.446"]
"megvii-model/CrowdDetection" ["l"="50.809,30.413"]
"buhuixiezuowendelihua/TorchVision_Maskrcnn" ["l"="50.52,30.221"]
"feiyuhuahuo/Yolact_minimal" ["l"="50.553,30.28"]
"amzn/pecos" ["l"="51.725,31"]
"AndyJZhao/GLEM" ["l"="53.695,15.369"]
"jianhao2016/GPRGNN" ["l"="52.484,16.012"]
"XiaoxinHe/TAPE" ["l"="53.71,15.332"]
"szymonmaszke/torchdatasets" ["l"="51.096,30.542"]
"szymonmaszke/torchfunc" ["l"="51.084,30.522"]
"giddyyupp/coco-minitrain" ["l"="50.821,30.647"]
"nerminsamet/houghnet" ["l"="50.812,30.589"]
"blisgard/BucketedRankingBasedLosses" ["l"="50.816,30.681"]
"DeepVAC/deepvac" ["l"="50.635,30.054"]
"wpf535236337/real-time-network" ["l"="53.387,30.971"]
"Epiphqny/CondInst" ["l"="50.571,30.332"]
"CaoWGG/Mobilenetv2-CenterNet" ["l"="50.4,30.441"]
"huiyegit/APLC_XLNet" ["l"="51.704,30.977"]
"RandolphVI/Hierarchical-Multi-Label-Text-Classification" ["l"="53.885,27.164"]
"mwydmuch/extremeText" ["l"="51.688,31.009"]
"Roche/BalancedLossNLP" ["l"="51.51,30.766"]
"huawei-noah/AdderNet" ["l"="50.611,30.068"]
"guoyongcs/DRN" ["l"="-35.104,21.543"]
"mostafaelhoushi/DeepShift" ["l"="50.505,30.124"]
"huawei-noah/vega" ["l"="52.84,34.038"]
"pkuxmq/Invertible-Image-Rescaling" ["l"="-35.114,21.527"]
"GATECH-EIC/ShiftAddNet" ["l"="50.523,30.122"]
"XPixelGroup/ClassSR" ["l"="-35.162,21.497"]
"d-li14/involution" ["l"="50.792,30.006"]
"chenjoya/sampling-free" ["l"="-53.418,-16.247"]
"dbolya/tide" ["l"="50.765,30.234"]
"IDEA-Research/awesome-detection-transformer" ["l"="48.75,30.304"]
"yzd-v/FGD" ["l"="53.6,33.49"]
"MatthewHowe/DCNv2" ["l"="50.996,30.258"]
"rathaROG/DCNv2_Windows" ["l"="51.026,30.264"]
"CaptainEven/MCMOT" ["l"="54.405,32.595"]
"JialianW/TraDeS" ["l"="54.448,32.597"]
"PeizeSun/TransTrack" ["l"="54.428,32.552"]
"bubbliiiing/Siamese-tf2" ["l"="50.15,30.341"]
"bubbliiiing/Siamese-keras" ["l"="50.137,30.331"]
"PaddlePaddle/PaddleCraft" ["l"="49.953,29.446"]
"earhian/SIIM-ACR-Pneumothorax-Segmentation-5th" ["l"="50.566,30.432"]
"FrancescoSaverioZuppichini/mirror" ["l"="47.473,26.773"]
"FrancescoSaverioZuppichini/glasses" ["l"="51.114,29.509"]
"FrancescoSaverioZuppichini/A-journey-into-Convolutional-Neural-Network-visualization-" ["l"="47.512,26.756"]
"samiraabnar/attention_flow" ["l"="50.927,29.592"]
"jacobgil/vit-explain" ["l"="50.883,29.629"]
"hila-chefer/Transformer-Explainability" ["l"="50.877,29.662"]
"hila-chefer/Transformer-MM-Explainability" ["l"="50.91,29.608"]
"gorokoba560/norm-analysis-of-transformer" ["l"="50.999,29.503"]
"LiQiufu/WaveSNet" ["l"="52.21,29.956"]
"CVI-SZU/WaveCNet" ["l"="52.221,29.944"]
"Epiphqny/SOLO" ["l"="50.619,30.308"]
"iver56/audiomentations" ["l"="38.484,3.982"]
"uchidalab/time_series_augmentation" ["l"="43.588,26.741"]
"Zzh-tju/DIoU-darknet" ["l"="52.958,33.3"]
"lessw2020/Ranger21" ["l"="51.117,30.075"]
"lessw2020/Best-Deep-Learning-Optimizers" ["l"="51.15,30.077"]
"lessw2020/Ranger-Mish-ImageWoof-5" ["l"="51.171,30.122"]
"Yonghongwei/Gradient-Centralization" ["l"="51.062,30.166"]
"amirgholami/adahessian" ["l"="52.893,33.567"]
"davda54/ada-hessian" ["l"="52.908,33.593"]
"shivram1987/diffGrad" ["l"="51.236,30.09"]
"bbuing9/DARP" ["l"="51.406,30.584"]
"willwhitney/reprieve" ["l"="23.611,14.879"]
"YyzHarry/imbalanced-regression" ["l"="51.351,30.479"]
"fcakyon/balanced-loss" ["l"="51.233,30.355"]
"arc144/siim-pneumothorax" ["l"="50.522,30.431"]
"ZhiningLiu1998/mesa" ["l"="51.477,30.549"]
"JinJunRen/GB-SMOTE" ["l"="51.49,30.535"]
"xialeiliu/Awesome-LongTailed-Recognition" ["l"="51.246,30.491"]
"albumentations-team/autoalbument" ["l"="51.318,30.191"]
"mhariat/Fast-PBA_AutoAugment" ["l"="51.296,30.191"]
"bes-dev/mean_average_precision" ["l"="50.833,30.757"]
"slgero/receipt_parser" ["l"="50.838,30.809"]
"IlyaDobrynin/GridMixup" ["l"="50.832,30.845"]
"zzzxxxttt/simple_detectron2_EfficientDet" ["l"="50.635,30.358"]
"Epiphqny/Yolact_fcos" ["l"="50.6,30.34"]
"chensnathan/YOLOF" ["l"="50.743,30.308"]
"ivder/LabelMeYoloConverter" ["l"="49.989,30.063"]
"arashwan/matrixnet" ["l"="50.714,30.352"]
"ggjy/HitDet.pytorch" ["l"="52.864,34.147"]
"caiqi/sample-weighting-network" ["l"="53.887,32.142"]
"mathkey/mssnet" ["l"="51.308,30.583"]
"JialeCao001/D2Det" ["l"="53.001,31.948"]
"Caojunxu/AC-FPN" ["l"="50.836,30.358"]
"pgmmpk/tfrecord" ["l"="50.52,30.199"]
"jongwook/tfrecord_lite" ["l"="50.498,30.202"]
"webdataset/webdataset" ["l"="49.092,30.307"]
"podgorskiy/DareBlopy" ["l"="50.496,30.226"]
"salesforce/ALBEF" ["l"="48.761,31.992"]
"albumentations-team/albumentations_examples" ["l"="50.947,30.231"]
"bubbliiiing/retinaface-pytorch" ["l"="50.221,30.326"]
"bubbliiiing/facenet-retinaface-pytorch" ["l"="50.211,30.341"]
"bubbliiiing/facenet-pytorch" ["l"="50.242,30.313"]
"bubbliiiing/arcface-pytorch" ["l"="50.221,30.358"]
"bubbliiiing/pytorch-GAN" ["l"="50.23,30.341"]
"bubbliiiing/facenet-retinaface-keras" ["l"="50.19,30.354"]
"VDIGPKU/CBNet_pytorch" ["l"="53.105,13.775"]
"panjianning/cbnet" ["l"="53.151,13.811"]
"vvssttkk/dst" ["l"="50.93,30.856"]
"ivanpanshin/flask_gunicorn_nginx_docker" ["l"="50.822,30.901"]
"ahangchen/torch_base" ["l"="50.683,28.327"]
"Jermmy/pytorch-quantization-demo" ["l"="52.575,33.408"]
"ModelTC/MQBench" ["l"="52.551,33.403"]
"DeepVAC/libdeepvac" ["l"="53.322,32.875"]
"foolwood/pytorch-slimming" ["l"="52.776,33.396"]
"iwatake2222/InferenceHelper" ["l"="49.724,29.941"]
"karthickai/tflite" ["l"="49.663,29.951"]
"iwatake2222/play_with_tensorrt" ["l"="49.714,29.963"]
"ValYouW/tflite-dist" ["l"="49.673,29.936"]
"terryky/android_tflite" ["l"="49.745,29.961"]
"ValYouW/tflite-win-c" ["l"="49.704,29.928"]
"pntt3011/mediapipe_face_iris_cpp" ["l"="49.61,29.919"]
"iwatake2222/self-driving-ish_computer_vision_system" ["l"="49.697,29.952"]
"apennisi/deep_sort" ["l"="54.484,32.752"]
"google-coral/libedgetpu" ["l"="32.047,27.942"]
"He-Zhenwei/ATF" ["l"="51.708,30.179"]
"bubbliiiing/mask-rcnn-tf2" ["l"="50.327,30.284"]
"airanmehr/cssvm" ["l"="51.617,30.701"]
"FrancescoSaverioZuppichini/ViT" ["l"="51.016,29.579"]
"vietnh1009/SSD-pytorch" ["l"="51.186,29.449"]
"ivy-llc/vision" ["l"="51.164,29.454"]
"PaddlePaddle/InterpretDL" ["l"="49.796,29.437"]
"PaddlePaddle/TrustAI" ["l"="49.752,29.421"]
"rafat/wavelet1d" ["l"="52.438,29.928"]
"rafat/wdenoise" ["l"="52.428,29.915"]
"oschulz/blitzwave" ["l"="52.423,29.944"]
"pierrepaleo/PDWT" ["l"="52.469,29.933"]
"berndporr/iir1" ["l"="38.313,5.54"]
"sjneph/modwt" ["l"="52.401,29.937"]
"rafat/liftwave" ["l"="52.418,29.929"]
"Lichtso/CCWT" ["l"="52.427,29.896"]
"tdwg/dwc-qa" ["l"="51.641,31.282"]
"tdwg/bdq" ["l"="51.651,31.271"]
"gbif/ipt" ["l"="51.622,31.29"]
"specify/specify7" ["l"="51.687,31.284"]
"CatalogueOfLife/general" ["l"="51.66,31.298"]
"tdwg/interaction" ["l"="51.616,31.232"]
"tdwg/attribution" ["l"="51.64,31.237"]
"Symbiota/Symbiota" ["l"="51.673,31.269"]
"VertNet/bels" ["l"="51.654,31.243"]
"tdwg/cd" ["l"="51.661,31.254"]
"zgcr/AICITY2020_track2_reid_BeBetter" ["l"="50.841,30.337"]
"BIGBALLON/distribuuuu" ["l"="49.129,33.311"]
"MegEngine/Docs" ["l"="49.702,30.048"]
"MegEngine/MegRay" ["l"="49.691,30.06"]
"MegEngine/Documentation" ["l"="49.661,30.075"]
"MegEngine/mgeconvert" ["l"="49.648,30.084"]
"Yochengliu/MLIC-KD-WSD" ["l"="51.33,30.677"]
"gaobb/MCAR" ["l"="51.29,30.628"]
"HCPLab-SYSU/HCP-MLR-PL" ["l"="51.357,30.679"]
"ShengkaiWu/IoU-aware-single-stage-object-detector" ["l"="50.879,30.45"]
"jiang-du/BlazePose-tensorflow" ["l"="49.429,29.924"]
"vietanhdev/tf-blazepose" ["l"="49.439,29.94"]
"terryky/tfjs_webgl_app" ["l"="6.004,-19.522"]
"google-coral/project-bodypix" ["l"="32.027,28.029"]
"NVIDIA-AI-IOT/trt_pose" ["l"="53.223,32.495"]
"jiuqiant/mediapipe_python_aarch64" ["l"="49.8,30.009"]
"asus4/tf-lite-unity-sample" ["l"="-31.382,-28.649"]
"PINTO0309/mediapipe-bin" ["l"="49.817,30.023"]
"michalfaber/tensorflow_Realtime_Multi-Person_Pose_Estimation" ["l"="31.615,28.097"]
"patlevin/tfjs-to-tf" ["l"="31.908,28.052"]
"mgyong/awesome-mediapipe" ["l"="30.27,30.271"]
"Islanna/DynamicReLU" ["l"="53.791,31.082"]
"anonymous47823493/EagleEye" ["l"="52.688,33.347"]
"Mortyzhang/Mask2polygon_tool" ["l"="50.367,30.063"]
"hustvl/BMaskR-CNN" ["l"="63.344,12.155"]
"idilesenzulfikar/UNOVOST" ["l"="47.827,34.659"]
"z-x-yang/CFBI" ["l"="47.742,34.658"]
"mcahny/vps" ["l"="53.227,30.955"]
"szymonmaszke/torchlayers" ["l"="51.039,30.459"]
"bubbliiiing/fcos-pytorch" ["l"="50.274,30.309"]
"haformer/haformer" ["l"="50.492,30.184"]
"knowonething/Traffic-Simulation-Tool" ["l"="50.465,30.228"]
"Duankaiwen/PyCenterNet" ["l"="50.462,30.395"]
"zzzxxxttt/pytorch_simple_CenterNet_47" ["l"="50.512,30.326"]
"megvii-research/hpargparse" ["l"="49.661,30.123"]
"XiaohangZhan/deocclusion" ["l"="50.614,30.523"]
"lkeab/BCNet" ["l"="50.645,30.512"]
"cvlab-columbia/pix2gestalt" ["l"="50.563,30.696"]
"Hangz-nju-cuhk/Rotate-and-Render" ["l"="31.877,29.346"]
"XiaohangZhan/deocclusion-demo" ["l"="50.605,30.556"]
"XingangPan/deep-generative-prior" ["l"="44.795,30.501"]
"Yaoyi-Li/GCA-Matting" ["l"="42.449,25.236"]
"XiaohangZhan/conditional-motion-propagation" ["l"="-33.761,23.355"]
"facebookresearch/synsin" ["l"="63.793,1.531"]
"kam1107/RealnessGAN" ["l"="44.765,30.495"]
"naoto0804/pytorch-inpainting-with-partial-conv" ["l"="44.657,29.329"]
"grok-ai/nn-template" ["l"="-1.072,3.064"]
"Lightning-AI/tutorials" ["l"="51.111,29.541"]
"miracleyoo/pytorch-lightning-template" ["l"="-3.788,23.501"]
"huggingface/knockknock" ["l"="52.873,25.633"]
"d-li14/ghostnet.pytorch" ["l"="51.874,33.022"]
"TingsongYu/ghostnet_cifar10" ["l"="51.904,32.963"]
"Star-Clouds/CenterFace" ["l"="33.367,29.205"]
"MCG-NKU/SCNet" ["l"="53.57,31.072"]
"yitu-opensource/MobileNeXt" ["l"="53.778,31.15"]
"xxradon/PytorchToCaffe" ["l"="51.63,33.247"]
"sally20921/NoisyStudent" ["l"="51.26,30.294"]
"google-research/s4l" ["l"="53.142,29.634"]
"yzou2/CRST" ["l"="51.536,37.17"]
"YisenWang/symmetric_cross_entropy_for_noisy_labels" ["l"="51.666,30.45"]
"YisenWang/dynamic_adv_training" ["l"="39.044,-7.601"]
"HanxunH/Active-Passive-Losses" ["l"="51.698,30.445"]
"soo89/ISD-SSD" ["l"="51.47,30.193"]
"ShouyangDong/tse-t" ["l"="51.5,30.175"]
"soo89/CSD-SSD" ["l"="51.447,30.212"]
"pistonly/modwtpy" ["l"="52.305,29.815"]
"raphaelvallat/antropy" ["l"="62.13,34.494"]
"scikit-signal/tftb" ["l"="52.362,29.856"]
"yaysummeriscoming/DALI_pytorch_demo" ["l"="50.977,29.993"]
"chenxin061/pdarts" ["l"="52.878,34.059"]
"guan-yuan/awesome-AutoML-and-Lightweight-Models" ["l"="52.867,34.003"]
"gorkemalgan/MSLG_noisy_label" ["l"="51.537,30.459"]
"pxiangwu/PLC" ["l"="51.571,30.47"]
"bhanML/label-noise-papers" ["l"="51.518,30.454"]
"adityaiitb/pyprof2" ["l"="50.481,30.058"]
"pytorch/kineto" ["l"="39.097,-0.468"]
"hold-baby/label-img" ["l"="50.075,29.105"]
"Corezcy/EEMD-LSTM-DO-Prediction" ["l"="52.401,29.773"]
"pengchen233/EEMD-LSTM-Model" ["l"="52.411,29.743"]
"pprp/deep_sort_yolov3_pytorch" ["l"="54.659,32.57"]
"BBuf/cv_tools" ["l"="52.938,33.351"]
"ZJU-lishuang/yolov5_prune" ["l"="53.408,3.636"]
"commonsmachinery/blockhash-python" ["l"="51.232,29.549"]
"commonsmachinery/blockhash" ["l"="51.271,29.536"]
"Ma-Dan/keras-yolo4" ["l"="50.432,32.775"]
"SALT-NLP/MixText" ["l"="53.931,27.313"]
"zhoujx4/NLP-Series-text-cls" ["l"="51.362,30.392"]
"mrnabati/CenterFusion" ["l"="63.852,35.196"]
"ZrrSkywalker/MonoDETR" ["l"="64.727,11.216"]
"zhangyp15/MonoFlex" ["l"="64.753,11.134"]
"dlunion/tensorRTIntegrate" ["l"="53.203,32.687"]
"tteepe/DCNv2" ["l"="51.002,30.273"]
"HumanSignal/dm2" ["l"="50.278,29.026"]
"bubbliiiing/faster-rcnn-tf2" ["l"="50.15,30.309"]
"lizhe960118/CenterNet" ["l"="50.662,30.342"]
"xiaoboxia/CDR" ["l"="51.651,30.496"]
"HanxunH/RobustWRN" ["l"="51.755,30.453"]
"quincyliang/nlp-data-augmentation" ["l"="53.583,27.145"]
"ming71/RIDet" ["l"="53.05,31.919"]
"SweetyTian/efficientdet" ["l"="53.066,13.717"]
"kentaroy47/efficientdet.pytorch" ["l"="53.037,13.685"]
"coderhss/efficientdet-pytorch" ["l"="50.601,30.213"]
"hdjang/Feature-Selective-Anchor-Free-Module-for-Single-Shot-Object-Detection" ["l"="50.544,30.311"]
"mrlooi/rotated_maskrcnn" ["l"="52.998,32.004"]
"bubbliiiing/QRcode-location" ["l"="50.162,30.33"]
"youngwanLEE/VoV3D" ["l"="49.2,33.165"]
"youngwanLEE/VoVNet-RefineDet" ["l"="50.612,30.293"]
"HardLaugh/EfficientDet-bifpn" ["l"="53.071,13.747"]
"yue-zhongqi/ifsl" ["l"="57.736,19.23"]
"KaihuaTang/Generalized-Long-Tailed-Benchmarks.pytorch" ["l"="51.242,30.509"]
"OpenFirework/pytorch_solov2" ["l"="53.52,33.078"]
"chendaichao/Hilbert-Huang-transform" ["l"="52.401,29.85"]
"HHTpy/HHTpywrapper" ["l"="52.39,29.862"]
"DataXujing/yolact_pytorch" ["l"="50.488,30.299"]
"hpc203/yolact-opencv-dnn-cpp-python" ["l"="53.668,32.773"]
"bubbliiiing/yolact-pytorch" ["l"="50.38,30.271"]
"bubbliiiing/yolact-keras" ["l"="50.364,30.319"]
"bubbliiiing/dcgan-keras" ["l"="50.118,30.362"]
"SHI-Labs/Semi-Supervised-Transfer-Learning" ["l"="51.512,30.331"]
"YUE-FAN/CoSSL" ["l"="51.422,30.603"]
"google-research/crest" ["l"="51.435,30.614"]
"ytaek-oh/daso" ["l"="51.419,30.618"]
"LeeHyuck/ABC" ["l"="51.408,30.612"]
"nickkunz/smogn" ["l"="51.403,30.549"]
"paobranco/SMOGN-LIDTA17" ["l"="51.432,30.574"]
"paobranco/ImbalancedLearningRegression" ["l"="51.44,30.594"]
"nickkunz/nestedhyperboost" ["l"="51.418,30.57"]
"SteiMi/density-based-weighting-for-imbalanced-regression" ["l"="51.4,30.527"]
"SteiMi/denseweight" ["l"="51.422,30.544"]
"CDonnerer/xgboost-distribution" ["l"="45.287,26.438"]
"bonlime/pytorch-tools" ["l"="50.877,30.817"]
"VDIGPKU/CBNetV2" ["l"="50.831,30.295"]
"amirassov/kaggle-global-wheat-detection" ["l"="52.912,13.702"]
"shinya7y/WaymoCOCO" ["l"="50.86,30.333"]
"muzishen/VIPriors-Object-Detection-Challenge" ["l"="52.901,13.571"]
"lvjiaqi77/PRODEN" ["l"="51.683,30.616"]
"palm-ml/valen" ["l"="51.673,30.6"]
"hongwei-wen/LW-loss-for-partial-label" ["l"="51.664,30.608"]
"wwangwitsel/awesome-partial-label-learning" ["l"="51.708,30.639"]
"wu-dd/Advances-in-Partial-and-Complementary-Label-Learning" ["l"="51.688,30.602"]
"hbzju/SoLar" ["l"="51.67,30.588"]
"wang3702/EnAET" ["l"="51.409,30.443"]
"luxonis/esp32-spi-message-demo" ["l"="49.399,29.982"]
"luxonis/depthai-docs-website" ["l"="49.39,30.021"]
"PaddlePaddle/PASSL" ["l"="49.98,29.542"]
"Gus-Guo/AugFPN" ["l"="53.876,32.1"]
"StevenGrove/DynamicHead" ["l"="50.795,30.392"]
"jshilong/FisherPruning" ["l"="49.463,29.505"]
"hkzhang95/Awesome-CV-bibfiles" ["l"="50.729,30.43"]
"cuongvng/TF-Lite-Cpp-API-for-Android" ["l"="49.629,29.952"]
"bhimar/GrocerEye" ["l"="51.009,30.594"]
"sayakpaul/Grocery-Product-Detection" ["l"="50.972,30.55"]
"lucamarini22/Product-Recognition-on-Store-Shelves" ["l"="51.019,30.583"]
"lucacarniato/multi-class-lightgbm-with-focal-loss" ["l"="51.52,30.672"]
"czzbb/I3Net" ["l"="51.724,30.27"]
"ahmetius/LP-DeepSSL" ["l"="51.495,30.346"]
"NobuoTsukamoto/tensorrt-examples" ["l"="49.674,29.99"]
"UCSC-REAL/cifar-10-100n" ["l"="51.565,30.517"]
"ContrastToDivide/C2D" ["l"="51.548,30.475"]
"ibaiGorordo/ONNX-CREStereo-Depth-Estimation" ["l"="65.257,5.161"]
"strongwolf/DW" ["l"="53.145,32.051"]
"google-research/ssl_detection" ["l"="51.4,30.24"]
"facebookresearch/unbiased-teacher" ["l"="51.47,30.237"]
"Megvii-BaseDetection/DenseTeacher" ["l"="51.444,30.232"]
"chenbinghui1/DSL" ["l"="51.51,30.237"]
"ligang-cs/PseCo" ["l"="51.488,30.231"]
"wonheeML/mtl-ssl" ["l"="51.487,30.25"]
"NVlabs/wetectron" ["l"="54.211,31.616"]
"soo89/CSD-RFCN" ["l"="51.439,30.201"]
"amirbar/DETReg" ["l"="49.386,29.431"]
"mightyzau/Instant-Teaching" ["l"="51.481,30.215"]
"evanzd/ICLR2021-OpenReviewData" ["l"="51.7,29.403"]
"sdoria/SimpleSelfAttention" ["l"="49.479,28.69"]
"pabloppp/pytorch-tools" ["l"="51.235,30.148"]
"haochenglouis/cores" ["l"="51.527,30.478"]
"UCSC-REAL/cores" ["l"="51.598,30.528"]
"shengliu66/SOP" ["l"="51.586,30.514"]
"KentoNishi/Augmentation-for-LNL" ["l"="51.576,30.497"]
"Kangningthu/ADELE" ["l"="51.539,30.496"]
"MCG-NJU/TIA" ["l"="51.769,30.224"]
"fpv-iplab/DA-RetinaNet" ["l"="51.782,30.199"]
"GiovanniPasq/DA-Faster-RCNN" ["l"="51.807,30.195"]
"fpv-iplab/STMDA-RetinaNet" ["l"="51.807,30.18"]
"XuYunqiu/H2FA_R-CNN" ["l"="51.804,30.209"]
"ancasag/ensembleObjectDetection" ["l"="50.425,30.492"]
"heboyong/visual-for-mmdetection" ["l"="50.133,30"]
"Stephenfang51/mmdetection_visualize" ["l"="-52.167,-15.119"]
"TAO-Dataset/tao" ["l"="50.642,30.718"]
"feiaxyt/Winner_ECCV20_TAO" ["l"="50.635,30.767"]
"SysCV/qdtrack" ["l"="54.409,32.543"]
"Ali2500/BURST-benchmark" ["l"="50.666,30.696"]
"apchenstu/SLN-Amodal" ["l"="50.601,30.612"]
"cjf8899/SSD_ResNet_Pytorch" ["l"="51.742,30.495"]
"cjf8899/simple_tool_pytorch" ["l"="51.77,30.495"]
"bubbliiiing/ssd-tf2" ["l"="50.162,30.295"]
"LaoYang1994/PanopticSegmentation" ["l"="53.159,30.901"]
"Shaoli-Huang/SnapMix" ["l"="51.043,30.316"]
"wutong16/Adversarial_Long-Tail" ["l"="51.357,30.596"]
"pmeletis/panoptic_parts" ["l"="50.717,30.781"]
"lxtGH/Panoptic-PartFormer" ["l"="50.727,30.719"]
"ryul99/DevEnv-with-Docker" ["l"="51.202,29.576"]
"daixiangzi/Grad_Cam-pytorch-resnet50" ["l"="51.728,30.122"]
"MioChiu/TF_CenterNet" ["l"="50.288,30.419"]
"wave-club/wave_club_shop" ["l"="-52.259,-15.153"]
"JoyHuYY1412/LST_LVIS" ["l"="51.082,30.391"]
"PaddlePaddle/paddle_upgrade_tool" ["l"="49.898,29.476"]
"extreme-assistant/nips2019" ["l"="51.321,29.611"]
"PaddlePaddle/epep" ["l"="49.899,29.429"]
"DayBreak-u/Thundernet_Pytorch" ["l"="50.763,30.528"]
"DayBreak-u/thundernet_mmdetection" ["l"="50.771,30.573"]
"DayBreak-u/Snet" ["l"="50.756,30.561"]
"lyxok1/Tiny-DSOD" ["l"="51.682,33.376"]
"VisDrone/MultiDrone" ["l"="50.604,31.102"]
"VisDrone/Multi-Drone-Multi-Object-Detection-and-Tracking" ["l"="50.618,31.082"]
"hereszsz/thundernet-tensorflow2.0" ["l"="50.76,30.645"]
"xuannianz/FSAF" ["l"="50.485,30.321"]
"CalayZhou/MBNet" ["l"="54.406,34.221"]
"CalayZhou/Multispectral-Pedestrian-Detection-Resource" ["l"="54.39,34.236"]
"Hatmm/PED-DETR-for-Pedestrian-Detection" ["l"="50.856,30.481"]
"sejong-rcv/MLPD-Multi-Label-Pedestrian-Detection" ["l"="54.393,34.221"]
"wangsr126/RDSNet" ["l"="50.696,30.418"]
"nightsnack/YOLObile" ["l"="50.592,30.308"]
"idstcv/ZenNAS" ["l"="52.748,34.085"]
"D0352276/CSL-YOLO" ["l"="50.524,30.34"]
"bubbliiiing/centernet-tf2" ["l"="50.206,30.327"]
"bubbliiiing/mobilenet-yolov4-keras" ["l"="50.227,30.273"]
"lim3944/ReMixmatch-pytorch" ["l"="51.416,30.34"]
"t-hanya/kuzushiji-recognition" ["l"="50.286,30.566"]
"FangyunWei/PointSetAnchor" ["l"="50.778,30.461"]
"thuwyh/BAAI-2020-CrowdHuman-Baseline" ["l"="50.828,30.456"]
"SamsungLabs/saic_depth_completion" ["l"="64.71,4.128"]
"megvii-research/Iter-E2EDET" ["l"="50.85,30.512"]
"PaddlePaddle/Contrib" ["l"="49.867,29.467"]
"nestordemeure/fastai-extensions-repository" ["l"="49.442,28.587"]
"TymonXie/tymon" ["l"="50.31,30.406"]
"XUXUSSS/kaggle_rsna2019_4th_solution" ["l"="50.55,30.439"]
"tahsin314/40th_place_solution_aptos2019-blindness-detection" ["l"="50.271,30.605"]
"luca-ant/gaze_tracker" ["l"="49.755,29.881"]
"pperle/gaze-tracking" ["l"="49.772,29.878"]
"alldbi/SuperMix" ["l"="51.196,30.287"]
"xumingze0308/TRN.pytorch" ["l"="50.608,30.975"]
"wangxiang1230/OadTR" ["l"="50.605,30.948"]
"amazon-science/long-short-term-transformer" ["l"="50.622,30.951"]
"rajskar/CS763Project" ["l"="50.598,31.003"]
"murtazahassan/lineFollowerPID" ["l"="50.196,30.081"]
"DeepBlueAI/AutoSeries" ["l"="50.893,30.916"]
"zehuichen123/cityperson2coco" ["l"="50.869,30.462"]
"seominseok0429/label-smoothing-visualization-pytorch" ["l"="51.885,30.556"]
"sundw2014/DCM" ["l"="51.928,30.589"]
"xiaoboxia/Classification-with-noisy-labels-by-importance-reweighting" ["l"="51.684,30.509"]
"xiaoboxia/T-Revision" ["l"="51.681,30.492"]
"xiaoboxia/Part-dependent-label-noise" ["l"="51.667,30.509"]
"iCVTEAM/TDRG" ["l"="51.283,30.639"]
"ReML-AI/MGTN" ["l"="51.303,30.644"]
"senkin13/kaggle" ["l"="6.032,-41.081"]
"lime-robot/dsb2019" ["l"="6.086,-41.059"]
"phalanx-hk/kaggle_template" ["l"="5.983,-41.09"]
"naivelamb/kaggle-cloud-organization" ["l"="50.466,30.472"]
"cheind/inpaint" ["l"="50.59,31.556"]
"nerminsamet/ppdet" ["l"="50.798,30.656"]
"jiankang1991/GRN-SNDL" ["l"="51.406,30.661"]
"Li-Chengyang/MSDS-RCNN" ["l"="54.396,34.201"]
"xiao9616/yolo4_tensorflow2" ["l"="50.473,32.775"]
"see--/pneumothorax-segmentation" ["l"="50.37,30.487"]
"tormii/HST" ["l"="52.604,29.831"]
"yjh0410/YOLAF" ["l"="50.59,30.462"]
"guiker/flyCat" ["l"="50.6,30.478"]
"hua1995116/npm-stat" ["l"="50.602,30.456"]
"okotaku/kaggle_quora2019" ["l"="50.551,30.429"]
"fsgo/go_fmt" ["l"="49.797,29.293"]
"fsgo/smart-go-dl" ["l"="49.826,29.314"]
"fsgo/bin-auto-switcher" ["l"="49.814,29.298"]
"wwangwitsel/PARM" ["l"="51.724,30.655"]
"guoqunabc/X-BERT" ["l"="51.731,31.027"]
"fhopfmueller/bi-tempered-loss-pytorch" ["l"="50.581,30.429"]
"Awesome-AutoAug-Algorithms/AWS-OHL-AutoAug" ["l"="51.279,30.204"]
"eastmountyxz/CSDNBlog-AI-for-Python" ["l"="51.158,29.835"]
"eastmountyxz/CSDNBlog-ImageProcessing" ["l"="51.118,29.834"]
"katsura-jp/tour-of-albumentations" ["l"="6.217,-41.024"]
"anirudhshenoy/pseudo_labeling_small_datasets" ["l"="51.529,30.362"]
"peimengsui/semi_supervised_mnist" ["l"="51.566,30.355"]
"njulus/REFILLED" ["l"="51.958,30.611"]
"jetdillo/tenacity_rover" ["l"="49.322,30.077"]
"jetdillo/oakd_models" ["l"="49.344,30.071"]
"luxonis/DepthAI-PyFlow" ["l"="49.39,30.076"]
"sabarim/3DC-Seg" ["l"="47.667,34.729"]
"taixw2/rmini" ["l"="50.516,30.734"]
"felsenhower/stine_calendar_bot" ["l"="50.288,29.23"]
"FateScript/nnprof" ["l"="50.727,30.467"]
"frezaeix/VISGA_Public" ["l"="51.768,30.166"]
"CaoWGG/TensorMask" ["l"="50.272,30.525"]
"apxlwl/MNN-yolov3" ["l"="33.439,29.13"]
"bentrevett/pytorch-for-code" ["l"="51.432,29.846"]
"jdc08161063/spatio-temporal-embedding" ["l"="50.656,30.586"]
"niconielsen32/AlgortihmsAndDataStructures" ["l"="49.758,29.834"]
"niconielsen32/Robotics" ["l"="49.767,29.824"]
"windxrz/DCFR" ["l"="51.752,29.827"]
"h-yu16/Sparse_Variable_Independence" ["l"="51.83,29.8"]
"NaiyuGao/SSAP" ["l"="50.507,30.714"]
"naviocean/faster_rcnn_sku110" ["l"="50.92,30.519"]
"shjo-april/Tensorflow_FCOS" ["l"="50.38,30.426"]
"wang-xinyu/csp.pytorch" ["l"="50.955,30.496"]
"sunsiy10/ImageWorkShop" ["l"="50.638,31.473"]
"jaywhen/Pmer" ["l"="51.799,30.634"]
"1998v7/Self-Filtering" ["l"="51.77,30.624"]
"jasonseu/MultiLabelClassification" ["l"="51.276,30.755"]
"jasonseu/TSFormer" ["l"="51.277,30.727"]
"jasonseu/cnn_graph.pytorch" ["l"="51.277,30.781"]
"UCI-CARL/MotionEnergy" ["l"="51.439,29.786"]
"UCI-CARL/VisualStimulusToolbox" ["l"="51.453,29.783"]
"daixiangzi/Mask-Detection" ["l"="51.727,30.135"]
"DeepWisdom/AutoSeries2019" ["l"="50.89,30.937"]
"Charmve/Surface-Defect-Detection" ["l"="53.264,14.056"]
"datawhalechina/dive-into-cv-pytorch" ["l"="50.876,27.915"]
"52CV/CV-Surveys" ["l"="50.882,29.719"]
"HuangCongQing/UCAS_Course_2019" ["l"="-5.114,19.902"]
"enpeizhao/CVprojects" ["l"="53.398,32.703"]
"MingchaoZhu/DeepLearning" ["l"="50.873,28.121"]
"lyhue1991/eat_pytorch_in_20_days" ["l"="50.84,28.313"]
"ifzhang/ByteTrack" ["l"="54.517,32.538"]
"ivy-llc/ivy" ["l"="50.828,29.284"]
"tinygrad/tinygrad" ["l"="40.128,0.757"]
"eugeneyan/applied-ml" ["l"="47.958,26.221"]
"karpathy/nanoGPT" ["l"="40.159,0.576"]
"dair-ai/ML-YouTube-Courses" ["l"="47.884,26.264"]
"ml-tooling/best-of-ml-python" ["l"="47.893,26.195"]
"karpathy/minGPT" ["l"="40.09,0.707"]
"jeonsworld/ViT-pytorch" ["l"="50.865,29.678"]
"lucidrains/denoising-diffusion-pytorch" ["l"="45.812,31.565"]
"jiawei-ren/BalancedMetaSoftmax" ["l"="51.218,30.487"]
"Megvii-BaseDetection/DisAlign" ["l"="51.188,30.457"]
"hyperconnect/LADE" ["l"="51.23,30.472"]
"xialeiliu/Long-Tailed-CIL" ["l"="51.206,30.5"]
"haotian-liu/LLaVA" ["l"="47.375,29.865"]
"huggingface/diffusers" ["l"="45.89,31.459"]
"salesforce/LAVIS" ["l"="49.008,30.194"]
"CompVis/latent-diffusion" ["l"="45.862,31.511"]
"lllyasviel/ControlNet" ["l"="38.358,1.011"]
"BradyFU/Awesome-Multimodal-Large-Language-Models" ["l"="47.423,29.9"]
"linghu8812/tensorrt_inference" ["l"="53.252,32.666"]
"52CV/CVPR-2022-Papers" ["l"="50.941,29.703"]
"52CV/ICCV-2021-Papers" ["l"="50.968,29.709"]
"google-research/reassessed-imagenet" ["l"="46.074,6.547"]
"google-research/big_transfer" ["l"="52.918,29.562"]
"zihangJiang/TokenLabeling" ["l"="49.095,33.184"]
"mlfoundations/wise-ft" ["l"="48.956,30.334"]
"facebookresearch/moco-v3" ["l"="52.975,29.48"]
"UCSC-VLAA/CLIPA" ["l"="48.984,30.44"]
"modestyachts/ImageNetV2" ["l"="38.848,-7.521"]
"sail-sg/volo" ["l"="50.885,29.993"]
"MenghaoGuo/Awesome-Vision-Attentions" ["l"="50.7,29.749"]
"xmu-xiaoma666/FightingCV-Paper-Reading" ["l"="50.577,29.858"]
"hustvl/QueryInst" ["l"="50.692,30.459"]
"sukjunhwang/IFC" ["l"="50.672,30.641"]
"yoxu515/aot-benchmark" ["l"="47.732,34.615"]
"facebookresearch/MaskFormer" ["l"="48.831,30.267"]
"wjn922/ReferFormer" ["l"="48.95,31.87"]
"hkchengrex/STCN" ["l"="47.721,34.627"]
"sayakpaul/probing-vits" ["l"="-44.368,8.071"]
"luo3300612/Visualizer" ["l"="50.875,29.609"]
"lukemelas/PyTorch-Pretrained-ViT" ["l"="50.893,29.693"]
"damo-cv/TransReID" ["l"="55.88,32.837"]
"rentainhe/visualization" ["l"="50.93,29.55"]
"frgfm/torch-cam" ["l"="23.989,14.494"]
"KMnP/vpt" ["l"="50.273,38.24"]
"open-mmlab/mmgeneration" ["l"="50.309,29.913"]
"TommyZihao/MMGeneration_Tutorials" ["l"="50.258,29.94"]
"open-mmlab/mim" ["l"="49.476,29.484"]
"open-mmlab/mmflow" ["l"="65.127,4.101"]
"open-mmlab/mmtracking" ["l"="54.487,32.541"]
"open-mmlab/mmhuman3d" ["l"="30.26,28.709"]
"NVlabs/stylegan2-ada-pytorch" ["l"="44.972,30.644"]
"open-mmlab/MMGEN-FaceStylor" ["l"="49.491,29.478"]
"hardikvasa/google-images-download" ["l"="50.641,29.827"]
"s0md3v/Photon" ["l"="-46.739,-27.952"]
"shobrook/rebound" ["l"="45.971,4.973"]
"YoongiKim/AutoCrawler" ["l"="46.008,5.117"]
"fastai/fastai" ["l"="48.016,28.695"]
"Shopify/upgrow" ["l"="50.689,30.375"]
"Shopify/packwerk" ["l"="4.331,-37.681"]
"zilverline/sequent" ["l"="4.456,-37.69"]
"facebookresearch/d2go" ["l"="50.723,30.295"]
"hustvl/YOLOP" ["l"="64.317,10.419"]
"SwinTransformer/Swin-Transformer-Object-Detection" ["l"="50.687,30.088"]
"davidstutz/latex-resources" ["l"="-4.664,21.909"]
"mrdbourke/tensorflow-deep-learning" ["l"="47.764,26.17"]
"nicknochnack/TFODCourse" ["l"="30.586,30.035"]
"GokuMohandas/mlops-course" ["l"="48.006,26.378"]
"flatplanet/Intro-To-TKinter-Youtube-Course" ["l"="41.962,20.059"]
"BhanuPrakashNani/Image_Processing" ["l"="16.865,-9.009"]
"AntixK/PyTorch-VAE" ["l"="45.877,31.629"]
"Deci-AI/super-gradients" ["l"="48.722,29.975"]
"lyuwenyu/RT-DETR" ["l"="48.679,30.072"]
"CVHub520/X-AnyLabeling" ["l"="48.763,30.008"]
"WongKinYiu/yolov9" ["l"="48.681,29.992"]
"opencv/opencv_contrib" ["l"="59.276,10.852"]
"pnnx/pnnx" ["l"="49.587,30.862"]
"FeiGeChuanShu/ncnn-android-yolov8" ["l"="49.598,30.946"]
"zchrissirhcz/awesome-ncnn" ["l"="49.574,30.912"]
"nihui/ncnn-android-nanodet" ["l"="49.595,30.925"]
"nihui/ncnn-android-yolov5" ["l"="49.567,30.946"]
"airockchip/rknn_model_zoo" ["l"="54.821,31.904"]
"megvii-model/RepVGG" ["l"="48.959,32.851"]
"dvlab-research/LISA" ["l"="47.454,30.124"]
"chenzhik/VisualizerX" ["l"="50.902,29.551"]
"KaiyangZhou/CoOp" ["l"="50.344,38.24"]
"raoyongming/DynamicViT" ["l"="49.063,33.131"]
"czczup/ViT-Adapter" ["l"="48.832,30.241"]
"LeapLabTHU/DAT" ["l"="49.178,32.999"]
"IDEA-Research/detrex" ["l"="48.774,30.252"]
"Andy-zhujunwen/UNET-ZOO" ["l"="61.852,36.955"]
"HuCaoFighting/Swin-Unet" ["l"="61.818,36.933"]
"qiaofengsheng/pytorch-UNet" ["l"="50.147,30.193"]
"4uiiurz1/pytorch-nested-unet" ["l"="61.902,36.945"]
"linhandev/dataset" ["l"="61.784,36.871"]
"RapidAI/LabelConvert" ["l"="49.957,30.22"]
"MasteringOpenCV/code" ["l"="59.341,10.93"]
"snavely/bundler_sfm" ["l"="60.45,9.509"]
"mapillary/OpenSfM" ["l"="60.45,9.558"]
"lisa-lab/pylearn2" ["l"="44.842,27.772"]
"scikit-image/skimage-tutorials" ["l"="44.452,26.941"]
"DmitryRyumin/ICCV-2023-Papers" ["l"="38.218,2.355"]
"whai362/PVT" ["l"="50.757,29.87"]
"MzeroMiko/VMamba" ["l"="49.155,34.212"]
"52CV/CVPR-2023-Papers" ["l"="50.919,29.684"]
"52CV/CVPR-2024-Papers" ["l"="50.911,29.662"]
"inaturalist/inatVisionTraining" ["l"="51.503,31.082"]
"yitu-opensource/T2T-ViT" ["l"="50.843,29.831"]
"zetane/viewer" ["l"="50.422,29.802"]
"zetane/ZetaForge" ["l"="23.877,-25.869"]
"julrog/nn_vis" ["l"="50.652,27.922"]
"microsoft/onnxconverter-common" ["l"="-44.226,6.069"]
"apple/ml-cvnets" ["l"="48.959,33.006"]
"csuzhhj/OpenCVCourse_by_xjtu" ["l"="50.255,29.996"]
"Cuirongcheng/Image-matching-and-ranging-based-on-binocular-stereo-vision" ["l"="65.382,5.058"]
"PaddlePaddle/PaddleSports" ["l"="49.844,29.51"]
"PaddlePaddle/VIMER" ["l"="46.384,6.086"]
"PaddlePaddle/PaConvert" ["l"="49.909,29.535"]
"mbeyeler/opencv-python-blueprints" ["l"="51.409,29.786"]
"cvzone/cvzone" ["l"="50.149,29.964"]
"homuler/MediaPipeUnityPlugin" ["l"="-31.348,-28.717"]
"Kazuhito00/hand-gesture-recognition-using-mediapipe" ["l"="30.464,29.403"]
"Kazuhito00/mediapipe-python-sample" ["l"="49.848,30.039"]
"Asadullah-Dal17/Eyes-Position-Estimator-Mediapipe" ["l"="49.925,29.917"]
"TesseraktZero/UnityHandTrackingWithMediapipe" ["l"="-31.365,-28.694"]
"MengHao666/Minimal-Hand-pytorch" ["l"="31.02,29.4"]
"PINTO0309/TensorflowLite-bin" ["l"="50.092,32.808"]
"PINTO0309/simple-onnx-processing-tools" ["l"="49.767,29.99"]
"kaist-dmlab/RecencyBias" ["l"="48.638,30.537"]
"kaist-dmlab/STARE" ["l"="48.657,30.532"]
"kaist-dmlab/Hi-COVIDNet" ["l"="48.671,30.518"]
"kaist-dmlab/TensorSparkML" ["l"="48.66,30.557"]
"kaist-dmlab/Ada-Boundary" ["l"="48.642,30.526"]
"QianMo/free-programming-books-zh_CN" ["l"="-24.772,-27.431"]
"QianMo/Real-Time-Rendering-3rd-CN-Summary-Ebook" ["l"="-24.83,-27.644"]
"liuruoze/EasyPR" ["l"="34.21,30.116"]
"gaoxiang12/slambook" ["l"="59.274,11.002"]
"liulinbo/slam" ["l"="59.408,11.073"]
"QianMo/Direct3D-Win32-Book-Src-Code" ["l"="-24.758,-27.434"]
"DWCTOD/ICCV2021-Papers-with-Code-Demo" ["l"="50.943,29.687"]
"DWCTOD/ECCV2022-Papers-with-Code-Demo" ["l"="50.971,29.694"]
"DrMahdiRezaei/DeepSOCIAL" ["l"="34.023,29.374"]
"IDEA-Research/DINO" ["l"="48.79,30.224"]
"fundamentalvision/BEVFormer" ["l"="64.517,11.258"]
"IDEA-Research/DN-DETR" ["l"="48.73,30.349"]
"IDEA-Research/DAB-DETR" ["l"="48.719,30.337"]
"ShoufaChen/DiffusionDet" ["l"="48.83,30.299"]
"DirtyHarryLYL/Transformer-in-Vision" ["l"="50.85,29.7"]
"cmhungsteve/Awesome-Transformer-Attention" ["l"="50.774,29.648"]
"Yangzhangcst/Transformer-in-Computer-Vision" ["l"="50.858,29.642"]
"gradsflow/gradsflow-automl" ["l"="57.344,29.452"]
"baal-org/baal" ["l"="52.001,25.855"]
"pytorch/functorch" ["l"="21.677,14.079"]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" ["l"="53.203,31.048"]
"microsoft/DynamicHead" ["l"="50.811,30.232"]
"bubbliiiing/classification-keras" ["l"="50.262,30.32"]
"bubbliiiing/Siamese-pytorch" ["l"="48.113,21.989"]
"bubbliiiing/classification-tf2" ["l"="50.173,30.228"]
"damo-cv/FCOSPss" ["l"="50.79,30.355"]
"fossasia/eventyay.de" ["l"="51.308,29.199"]
"OpnTec/openxlab" ["l"="51.474,29.112"]
"OpnTec/labs.fossasia.org" ["l"="51.51,29.095"]
"fossasia/code.fossasia.org" ["l"="51.539,29.078"]
"fossasia/ember-l10n" ["l"="51.568,29.065"]
"fossasia/2020.codeheat.org" ["l"="51.556,29.053"]
"hnuzhy/SSDA-YOLO" ["l"="51.778,30.239"]
"encounter1997/SFA" ["l"="51.82,30.231"]
"yuhuayc/sa-da-faster" ["l"="51.744,30.275"]
"JonathonLuiten/TrackEval" ["l"="54.452,32.527"]
"cheind/py-motmetrics" ["l"="54.508,32.624"]
"laclouis5/globox" ["l"="50.252,30.134"]
"lxtGH/Awesome-Segmentation-With-Transformer" ["l"="48.757,30.228"]
"zhenyingfang/Awesome-Temporal-Action-Detection-Temporal-Action-Proposal-Generation" ["l"="47.969,34.009"]
"sangminwoo/awesome-vision-and-language" ["l"="48.789,31.976"]
"MarkMoHR/Awesome-Referring-Image-Segmentation" ["l"="48.925,31.903"]
"EdisonLeeeee/Awesome-Masked-Autoencoders" ["l"="52.811,29.38"]
"liliu-avril/Awesome-Segment-Anything" ["l"="48.774,30.116"]
"fahadshamshad/awesome-transformers-in-medical-imaging" ["l"="61.812,36.841"]
"yuewang-cuhk/awesome-vision-language-pretraining-papers" ["l"="48.733,31.999"]
"sail-sg/poolformer" ["l"="49.031,33.08"]
"leaderj1001/LambdaNetworks" ["l"="49.154,33.297"]
"lucidrains/performer-pytorch" ["l"="48.838,33.984"]
"clovaai/rexnet" ["l"="23.56,14.845"]
"heylight/canvas-select" ["l"="50.025,29.039"]
"wanglin2/markjs" ["l"="50,29.004"]
"TACJu/TransFG" ["l"="-52.956,-16.956"]
"asyml/vision-transformer-pytorch" ["l"="50.913,29.64"]
"gupta-abhay/pytorch-vit" ["l"="50.926,29.62"]
"google-research/sam" ["l"="51.289,30.036"]
"SamsungLabs/ASAM" ["l"="51.314,29.94"]
"moskomule/sam.pytorch" ["l"="51.211,29.976"]
"juntang-zhuang/GSAM" ["l"="51.345,29.929"]
"lucidrains/lion-pytorch" ["l"="48.881,32.963"]
"facebookresearch/DomainBed" ["l"="50.835,37.882"]
"tianweiy/CenterPoint" ["l"="64.551,11.105"]
"kentaroy47/vision-transformers-cifar10" ["l"="38.904,-7.623"]
"lucidrains/TimeSformer-pytorch" ["l"="47.974,33.84"]
"xiaogangjia/CenterNet-FPN" ["l"="50.516,30.306"]
"gbstack/CVPR-2022-papers" ["l"="50.999,29.694"]
"yeyupiaoling/Pytorch-MobileFaceNet" ["l"="33.239,29.445"]
"pytorch/android-demo-app" ["l"="49.533,30.968"]
"connor-create/wsbtrades" ["l"="50.707,30.393"]
"megvii-model/DetNAS" ["l"="52.883,34.106"]
"starmemda/MlTr" ["l"="51.266,30.642"]
"curt-tigges/query2label" ["l"="51.29,30.656"]
"magamig/duplicate-images-finder" ["l"="51.209,29.497"]
"prateekralhan/Streamlit-based-Duplicate-Images-Finder" ["l"="51.199,29.52"]
"adumrewal/SIFTImageSimilarity" ["l"="63.122,37.186"]
"elisemercury/AutoClean" ["l"="51.233,29.461"]
"google/spectral-density" ["l"="52.877,33.519"]
"microsoft/CvT" ["l"="49.123,33.166"]
"xmu-xiaoma666/FightingCV-Course" ["l"="50.522,29.917"]
"jizhishutong/YOLOU" ["l"="53.421,3.683"]
"open-mmlab/OpenMMLabCourse" ["l"="50.424,29.934"]
"ZhugeKongan/torch-template-for-deep-learning" ["l"="50.969,28.321"]
"ZjjConan/SimAM" ["l"="53.604,31.146"]
"alibaba/EasyCV" ["l"="50.391,29.908"]
"lucastheis/deepbelief" ["l"="51.123,30.966"]
"kaushiksk/RBM_DBN" ["l"="51.116,30.946"]
"matrachma/Deep-Belief-Network-for-Regression" ["l"="51.103,30.936"]
"arthurmeyer/Convolutional_Deep_Belief_Network" ["l"="51.094,30.952"]
"EMI-Group/FaPN" ["l"="52.778,34.24"]
"microsoft/CSWin-Transformer" ["l"="49.133,33.077"]
"kemaloksuz/RankSortLoss" ["l"="50.808,30.352"]
"haofanwang/natural-language-joint-query-search" ["l"="32.712,30.649"]
"rmokady/CLIP_prefix_caption" ["l"="49.115,30.367"]
"mertyg/vision-language-models-are-bows" ["l"="38.248,-0.115"]
"facebookresearch/SLIP" ["l"="48.929,30.344"]
"airsplay/lxmert" ["l"="48.7,32.024"]
"Sense-GVT/DeCLIP" ["l"="48.883,30.342"]
"lucidrains/flamingo-pytorch" ["l"="49.022,30.299"]
"suilin0432/SoS-WSOD" ["l"="51.281,30.713"]
"PeiranLi0930/Comprehensive_DL_Tutor" ["l"="50.832,2.815"]
"elleryqueenhomels/fast_neural_style_transfer" ["l"="50.698,2.899"]
"WAMAWAMA/WAMA_Modules" ["l"="50.686,2.887"]
"risesoft-y9/Data-Labeling" ["l"="50.881,2.931"]
"weijiaheng/Robust-f-divergence-measures" ["l"="51.501,30.496"]
"fudan-generative-vision/dynamicPDB" ["l"="50.899,2.863"]
"Text-to-Audio/Make-An-Audio" ["l"="50.744,2.954"]
"GreatV/labelme2yolo" ["l"="50.021,30.074"]
"Kazuhito00/Tokyo2020-Pictogram-using-MediaPipe" ["l"="49.817,30.074"]
"wmuron/motpy" ["l"="54.603,32.505"]
"dvlab-research/SA-AutoAug" ["l"="52.989,29.343"]
"deepcam-cn/yolov5-face" ["l"="33.517,29.214"]
"chinhsuanwu/mobilevit-pytorch" ["l"="48.961,33.041"]
"wilile26811249/MobileViT" ["l"="48.963,33.072"]
"hkzhang-git/ParC-Net" ["l"="48.998,33.009"]
"micronDLA/MobileViTv3" ["l"="48.934,33.036"]
"JierunChen/FasterNet" ["l"="49.02,32.975"]
"ChengpengChen/RepGhost" ["l"="48.93,32.913"]
"geaxgx/depthai_movenet" ["l"="49.402,29.955"]
"geaxgx/openvino_blazepose" ["l"="49.405,29.939"]
"creativeIKEP/BlazePoseBarracuda" ["l"="-31.406,-28.688"]
"geaxgx/depthai_handface" ["l"="49.43,29.96"]
"cortictechnology/cait" ["l"="49.432,30.093"]
"lucidrains/bottleneck-transformer-pytorch" ["l"="49.13,33.234"]
"facebookresearch/convit" ["l"="49.117,33.138"]
"Meituan-AutoML/Twins" ["l"="49.122,33.112"]
"Linaom1214/TensorRT-For-YOLO-Series" ["l"="53.376,32.653"]
"Megvii-BaseDetection/LLA" ["l"="50.727,30.379"]
"trqminh/aistron" ["l"="50.611,30.631"]
"amazon-science/c2f-seg" ["l"="50.592,30.657"]
"DengPingFan/Polyp-PVT" ["l"="61.648,37.011"]
"jiawei-ren/BalancedMSE" ["l"="51.332,30.501"]
"BorealisAI/ranksim-imbalanced-regression" ["l"="51.378,30.5"]
"YyzHarry/multi-domain-imbalance" ["l"="51.374,30.518"]
"kaiwenzha/Rank-N-Contrast" ["l"="51.408,30.494"]
"manujosephv/pytorch_tabular" ["l"="46.037,24.738"]
"xieenze/DetCo" ["l"="52.987,29.388"]
"megvii-research/SOLQ" ["l"="50.703,30.441"]
"Asadullah-Dal17/Eyes-Tracking-Opencv-and-Dlib" ["l"="49.884,29.907"]
"alireza787b/Python-Gaze-Face-Tracker" ["l"="49.896,29.896"]
"pperle/gaze-tracking-pipeline" ["l"="49.803,29.891"]
"LeeYN-43/Clover" ["l"="51.134,29.888"]
"Berry-Wu/Visualization" ["l"="51.011,29.471"]
"facebookresearch/grid-feats-vqa" ["l"="48.672,31.992"]
"MILVLG/mcan-vqa" ["l"="48.692,32.07"]
"sail-sg/Adan" ["l"="48.905,33.002"]
"facebookresearch/madgrad" ["l"="51.048,30.004"]
"microsoft/fastformers" ["l"="52.612,25.524"]
"mlpen/Nystromformer" ["l"="23.635,14.848"]
"ChristophReich1996/Involution" ["l"="50.955,29.987"]
"d-li14/efficientnetv2.pytorch" ["l"="51.81,33.035"]
"DingXiaoH/DiverseBranchBlock" ["l"="48.994,32.887"]
"facebookresearch/AugLy" ["l"="50.923,29.523"]
"QData/TextAttack" ["l"="52.748,25.575"]
"speechbrain/speechbrain" ["l"="35.41,2.293"]
"uvavision/Curriculum-Labeling" ["l"="51.476,30.377"]
"zhanggang001/RefineMask" ["l"="50.653,30.529"]
"chenhang98/BPR" ["l"="50.636,30.589"]
"bowenc0221/boundary-iou-api" ["l"="50.636,30.614"]
"aliyun/DCT-Mask" ["l"="50.636,30.569"]
"Adamdad/ConsistentTeacher" ["l"="60.569,17.655"]
"AlibabaResearch/efficientteacher" ["l"="50.654,2.935"]
"open-wa/wa-automate-deploy-heroku" ["l"="51.928,30.284"]
"karnakgp/Karna" ["l"="13.067,-11.035"]
"yjh0410/PyTorch_YOLOv3" ["l"="50.567,30.369"]
"yjh0410/FreeYOLO" ["l"="50.556,30.387"]
"SysCV/transfiner" ["l"="50.653,30.483"]
"dvlab-research/PanopticFCN" ["l"="53.209,30.951"]
"UARK-AICV/AISFormer" ["l"="50.617,30.613"]
"Championchess/A-Tri-Layer-Plugin-to-Improve-Occluded-Detection" ["l"="64.246,1.124"]
"SysCV/pcan" ["l"="54.385,32.533"]
"iCVTEAM/Awesome-Multi-label-Image-Recognition" ["l"="51.247,30.661"]
"putao537/Awesome-Multi-label-Image-Recognition" ["l"="51.307,30.677"]
"sunanhe/MKT" ["l"="51.267,30.661"]
"guozix/TaI-DPT" ["l"="51.256,30.706"]
"hustvl/YOLOS" ["l"="50.648,30.201"]
"hustvl/MIMDet" ["l"="52.886,29.378"]
"naver-ai/vidt" ["l"="48.668,30.488"]
"Atten4Vis/ConditionalDETR" ["l"="48.682,30.361"]
"Chumsy0725/logit-adj-pytorch" ["l"="51.304,30.52"]
"JosephKJ/OWOD" ["l"="48.467,30.367"]
"ChenhongyiYang/QueryDet-PyTorch" ["l"="53.89,31.966"]
"beeftornado/duplicate-image-finder" ["l"="51.242,29.493"]
"benhoyt/dhash" ["l"="51.263,29.473"]
"vuolter/deplicate" ["l"="51.289,29.52"]
"plantnet/PlantNet-300K" ["l"="51.63,31.409"]
"garcinc/noised-topk" ["l"="51.615,31.423"]
"plantnet/my.plantnet" ["l"="51.657,31.421"]
"extreme-assistant/survey-computer-vision-2020" ["l"="51.128,29.653"]
"extreme-assistant/survey-computer-vision-2021" ["l"="51.124,29.635"]
"extreme-assistant/Awesome-CV-Team" ["l"="51.186,29.615"]
"jeya-maria-jose/Medical-Transformer" ["l"="61.844,36.9"]
"hustvl/TeViT" ["l"="50.695,30.584"]
"hujiecpp/ISTR" ["l"="50.706,30.497"]
"hustvl/ViG" ["l"="63.418,12.003"]
"hustvl/DiG" ["l"="63.413,12.014"]
"yang-ruixin/pytorch-image-models-with-simclr" ["l"="51.386,30.72"]
"dvgodoy/dl-visuals" ["l"="50.892,29.433"]
"sscardapane/reprodl2021" ["l"="48.223,26.392"]
"dvgodoy/PyTorchStepByStep" ["l"="47.673,26.494"]
"jalammar/ecco" ["l"="52.653,25.662"]
"dair-ai/nlp_paper_summaries" ["l"="52.755,25.743"]
"huggingface/awesome-papers" ["l"="52.839,25.675"]
"probml/pyprobml" ["l"="50.66,27.864"]
"arXivTimes/arXivTimes" ["l"="5.831,-41.124"]
"pfnet/pysen" ["l"="5.94,-41.063"]
"louisfb01/Best_AI_paper_2020" ["l"="47.961,26.424"]
"TransylvanianInstituteOfNeuroscience/Superlets" ["l"="52.442,29.875"]
"irhum/superlets" ["l"="52.478,29.869"]
"encounter1997/DE-CondDETR" ["l"="51.87,30.238"]
"encounter1997/DE-DETRs" ["l"="51.857,30.229"]
"encounter1997/Arxiv-Daily" ["l"="51.882,30.234"]
"encounter1997/FP-DETR" ["l"="51.865,30.22"]
"zhukaii/SPPR" ["l"="34.15,31.938"]
"lhc1224/OSAD_Net" ["l"="33.541,32.19"]
"SparseL/SAE-FCM" ["l"="52.471,29.968"]
"julzerinos/python-fuzzy-cognitve-maps" ["l"="52.485,29.969"]
"bubbliiiing/facenet-tf2" ["l"="50.163,30.366"]
"jasonseu/SALGL" ["l"="51.277,30.688"]
"Lightning-AI/utilities" ["l"="38.661,-0.251"]
"pystiche/pystiche" ["l"="44.898,28.583"]
"cjf8899/OCR_kor_en" ["l"="51.945,30.547"]
"cjf8899/CDRL-SA" ["l"="51.953,30.562"]
"dipum/dipum-toolbox" ["l"="50.4,30.13"]
"bubbliiiing/deeplabv3-plus-tf2" ["l"="50.048,30.337"]
"DirtyHarryLYL/HOI-Learning-List" ["l"="47.396,33.834"]
"DirtyHarryLYL/LLM-in-Vision" ["l"="47.427,30.163"]
"ttengwang/Awesome_Prompting_Papers_in_Computer_Vision" ["l"="50.313,38.23"]
"facebookresearch/unbiased-teacher-v2" ["l"="51.503,30.224"]
"hikvision-research/SSOD" ["l"="51.548,30.24"]
"XunGuangxu/CorNet" ["l"="51.778,30.968"]
"chiennv2000/LR-GCN" ["l"="51.755,30.965"]
"pinterest/querybook" ["l"="-0.579,15.975"]
"WuYichen-97/Learning-to-Purify-Noisy-Labels-via-Meta-Soft-Label-Corrector" ["l"="51.561,30.485"]
"chenpf1025/IDN" ["l"="51.607,30.492"]
"bubbliiiing/yolo3-tf2" ["l"="50.135,30.376"]
"bubbliiiing/efficientnet-yolo3-tf2" ["l"="50.142,30.388"]
"bubbliiiing/yolox-tf2" ["l"="50.176,30.376"]
"bubbliiiing/yolov5-tf2" ["l"="50.136,30.355"]
"cmd23333/Faster-rcnn-tensorflow2.x" ["l"="50.707,32.936"]
"sukjunhwang/VITA" ["l"="50.68,30.674"]
"miranheo/GenVIS" ["l"="50.67,30.677"]
"KimHanjung/VISAGE" ["l"="50.655,30.78"]
"dydjw9/Efficient_SAM" ["l"="51.413,29.908"]
"Mi-Peng/Sparse-Sharpness-Aware-Minimization" ["l"="51.393,29.912"]
"xingyizhou/UniDet" ["l"="50.941,30.289"]
"facebookresearch/Detic" ["l"="48.797,30.285"]
"ZwwWayne/K-Net" ["l"="50.751,30.441"]
"amazon-science/bigdetection" ["l"="49.403,29.507"]
"houqb/VisionPermutator" ["l"="49.045,33.199"]
"zhoudaquan/Refiner_ViT" ["l"="49.071,33.201"]
"SwinTransformer/Transformer-SSL" ["l"="52.954,29.441"]
"ShoufaChen/CycleMLP" ["l"="49.075,33.142"]
"wofmanaf/ResT" ["l"="49.147,33.146"]
"Taeyoung96/Yolo-to-COCO-format-converter" ["l"="50.047,30.18"]
"Taeyoung96/Taeyoung96.github.io" ["l"="49.999,30.191"]
"pylabel-project/samples" ["l"="50.077,30.144"]
"gan-police/frequency-forensics" ["l"="52.193,29.856"]
"Fraunhofer-SCAI/wavelet_pooling" ["l"="52.199,29.871"]
"HazeDT/WaveletKernelNet" ["l"="51.468,38.07"]
"yyk-wew/F3Net" ["l"="31.114,30.138"]
"v0lta/Jax-Wavelet-Toolbox" ["l"="52.173,29.853"]
"xxgege/StableNet" ["l"="51.922,29.775"]
"KunKuang/Decorrelated-Weighted-Regression" ["l"="51.955,29.77"]
"x-zho14/MAPLE" ["l"="51.952,29.753"]
"Silver-Shen/Stable_Linear_Model_Learning" ["l"="51.949,29.784"]
"AICVHub/Copy-Paste-for-Semantic-Segmentation" ["l"="50.777,30.399"]
"lxc86739795/human_vehicle_parsing_platform" ["l"="56.119,32.827"]
"xbq1994/HAA" ["l"="56.108,32.835"]
"YuhaoCheng/PyAnomaly" ["l"="56.092,32.826"]
"Syencil/tensorRT" ["l"="53.218,32.707"]
"TalalAlrawajfeh/mathematics-roadmap" ["l"="26.384,-26.166"]
"tinyms-ai/tinyms" ["l"="49.527,29.658"]
"tinyms-ai/awesome-rusted-ai" ["l"="49.497,29.65"]
"Cy743652/CEEMDAN-LSTM" ["l"="52.491,29.767"]
"avilarenan/xlstmceemdan" ["l"="52.519,29.754"]
"LJSthu/HRM" ["l"="51.87,29.776"]
"LJSthu/Kernelized-HRM" ["l"="51.885,29.758"]
"AIflowerQ/InvPref_KDD_2022" ["l"="51.891,29.773"]
"fedebotu/ICLR2022-OpenReviewData" ["l"="51.783,29.361"]
"kashif/ICLR2022-OpenReviewData" ["l"="51.746,29.394"]
"ranpox/openreview-visualization" ["l"="51.735,29.37"]
"HaizhaoYang/SST_compare" ["l"="52.574,29.812"]
"ifsheldon/MPL_Lightning" ["l"="51.498,30.371"]
"salesforce/CoMatch" ["l"="51.722,30.507"]
"kekmodel/UDA-pytorch" ["l"="51.488,30.364"]
"cortictechnology/vision_ui" ["l"="49.369,29.967"]
"facebookresearch/ContactPose" ["l"="30.995,29.45"]
"SeanChenxy/HandMesh" ["l"="31.008,29.41"]
"geaxgx/openvino_hand_tracker" ["l"="49.388,29.969"]
"fcjian/LOCE" ["l"="51.086,30.445"]
"ModelTC/United-Perception" ["l"="50.987,30.371"]
"abidrahmank/OpenCV2-Python" ["l"="51.355,29.773"]
"geaxgx/openvino_movenet_multipose" ["l"="49.315,29.926"]
"geaxgx/openvino_movenet" ["l"="49.361,29.935"]
"RocketFlash/CAP_augmentation" ["l"="50.785,30.439"]
"debidatta/syndata-generation" ["l"="50.78,30.552"]
"MarkPotanin/copy_paste_aug_detectron2" ["l"="50.763,30.393"]
"n2cholas/shapecheck" ["l"="51.966,30.302"]
"wangxiang1230/Awesome-Online-Action-Detection" ["l"="50.627,30.936"]
"Echo0125/MAT-Memory-and-Anticipation-Transformer" ["l"="50.602,30.934"]
"zhaoyue-zephyrus/TeSTra" ["l"="50.615,30.93"]
"VividLe/Online-Action-Detection" ["l"="50.09,3.346"]
"jbistanbul/MiniROAD" ["l"="50.631,30.895"]
"FlamieZhu/Balanced-Contrastive-Learning" ["l"="51.281,30.529"]
"LTH14/targeted-supcon" ["l"="51.307,30.534"]
"Bazinga699/NCL" ["l"="51.279,30.508"]
"gaopengcuhk/BALLAD" ["l"="51.291,30.511"]
"daooshee/HLA-Face-Code" ["l"="52.131,30.254"]
"Ir1d/DARKFACE_eval_tools" ["l"="52.169,30.259"]
"specify/specify6" ["l"="51.712,31.289"]
"Symbiota/Symbiota-deprecated" ["l"="51.708,31.306"]
"chenpf1025/RobustnessAccuracy" ["l"="51.632,30.512"]
"agrechnev/first_steps_mediapipe" ["l"="49.546,29.907"]
"rajkundu/libmp-example" ["l"="49.5,29.901"]
"asprecic/mediapipe-qt-integration-example" ["l"="49.495,29.885"]
"rapyuta-robotics/depthai_ros" ["l"="49.368,29.987"]
"citbrains/GankenKun_webots" ["l"="50.349,29.081"]
"RajGhugare19/RL-algorithms" ["l"="51.191,29.425"]
"Haochen-Wang409/U2PL" ["l"="51.364,37.253"]
"hbzju/PiCO" ["l"="51.636,30.575"]
"Hua-YS/Semantic-Segmentation-with-Sparse-Labels" ["l"="51.372,30.791"]
"Shengcao-Cao/CMT" ["l"="51.778,30.271"]
"kulia/Hilbert-Huang-transform" ["l"="52.418,29.84"]
"hsuantien/mlc_lsdr" ["l"="51.579,30.936"]
"chihkuanyeh/C2AE" ["l"="51.578,30.915"]
"PINTO0309/scc4onnx" ["l"="49.785,29.979"]
"DiegoOrtego/LabelNoiseDRPL" ["l"="51.599,30.502"]
"PaulAlbert31/ReLaB" ["l"="51.612,30.507"]
"MengyuWang826/SegRefiner" ["l"="61.822,36.517"]
"lxtGH/BSSeg" ["l"="50.611,30.681"]
"gbif/portal16" ["l"="51.623,31.319"]
"gbif/data-mobilization" ["l"="51.636,31.311"]
"kymatio/phaseharmonics" ["l"="51.986,29.914"]
"GuanshuoXu/RSNA-STR-Pulmonary-Embolism-Detection" ["l"="50.387,30.561"]
"yingyichen-cyy/Nested-Co-teaching" ["l"="51.62,30.53"]
"zijian-hu/SimPLE" ["l"="51.769,30.516"]
"mingkai-zheng/SimMatch" ["l"="51.807,30.57"]
"salesforce/MoPro" ["l"="51.762,30.536"]
"salesforce/MUST" ["l"="51.799,30.54"]
"bupt-ai-cz/BALNMP" ["l"="51.8,30.669"]
"bupt-ai-cz/Hybrid-Model-Enabling-Highly-Efficient-Follicular-Segmentation" ["l"="51.783,30.651"]
"bupt-ai-cz/HSA-NRL" ["l"="51.769,30.655"]
"lxtGH/TemporalPyramidRouting" ["l"="50.6,30.725"]
"lxtGH/QueryPanSeg" ["l"="50.601,30.712"]
"megvii-research/basecls" ["l"="49.604,30.103"]
"June-Li/SSL_yolov3_seal_FixMatch" ["l"="51.629,30.216"]
"wangerxiao001/yolov5_SSL" ["l"="51.637,30.201"]
"Keke921/GCLLoss" ["l"="51.253,30.522"]
"naver-ai/cmo" ["l"="51.216,30.547"]
"ynu-yangpeng/GLMC" ["l"="51.266,30.514"]
"emasa/BalPoE-CalibratedLT" ["l"="51.267,30.525"]
"ChangyaoTian/VL-LTR" ["l"="51.324,30.525"]
"shuuchen/involution.pytorch" ["l"="50.988,29.979"]
"shikishima-TasakiLab/Involution-PyTorch" ["l"="50.999,29.976"]
"dvirsamuel/DRO-LT" ["l"="58.727,22.975"]
"MegEngine/YOLOX" ["l"="49.555,30.118"]
"islam-nassar/semco" ["l"="51.559,30.333"]
"52CV/ECCV-2022-Papers" ["l"="50.987,29.679"]
"cuongvng/Face-Detection-TFLite-JNI-Android" ["l"="49.602,29.953"]
"cuongvng/TF-Lite-Cpp-API-Android-Example" ["l"="49.6,29.966"]
"easton-cau/SOTR" ["l"="50.703,30.527"]
"hujiecpp/YOSO" ["l"="50.731,30.54"]
"elijahcole/single-positive-multi-label" ["l"="51.59,30.766"]
"Correr-Zhou/SPML-AckTheUnknown" ["l"="51.579,30.751"]
"Correr-Zhou/Awesome-Single-Positive-Multi-Label-Learning" ["l"="51.561,30.723"]
"snucml/LargeLossMatters" ["l"="51.599,30.783"]
"PINTO0309/mtomo" ["l"="49.636,29.994"]
"GuillaumeLeclerc/fastargs" ["l"="51.219,29.374"]
"lengstrom/tensorguard" ["l"="51.279,29.339"]
"bupt-ai-cz/Glomeruli-Instance-Segmentation" ["l"="51.77,30.642"]
"ros-sports/ipm" ["l"="50.303,29.22"]
"snu-mllab/Neural-Relation-Graph" ["l"="51.313,30.235"]
"UCSC-REAL/CAL" ["l"="51.603,30.546"]
"lijichang/LNL-NCE" ["l"="51.632,30.549"]
"UCSC-REAL/SimiFeat" ["l"="51.588,30.545"]
"UCSC-REAL/SelfSup_NoisyLabel" ["l"="51.612,30.562"]
"pranshu97/effunet" ["l"="51.935,30.529"]
"Annbless/ViTAE" ["l"="51.918,30.256"]
"Annbless/RegionCL" ["l"="51.945,30.266"]
"RogerZhangzz/CAG_UDA" ["l"="51.523,37.171"]
"CupidJay/Scaled-down-self-supervised-learning" ["l"="51.304,30.803"]
"heekhero/ACSR" ["l"="51.294,30.767"]
"Taeyoung96/2021-Capstone-Design" ["l"="49.967,30.195"]
"alibaba/EasyNLP" ["l"="53.391,27.129"]
"kubeflow/kubeflow" ["l"="45.39,25.764"]
"NVIDIA/k8s-device-plugin" ["l"="7.272,-11.403"]
"NVIDIA/nvidia-container-toolkit" ["l"="7.209,-11.422"]
"NVIDIA/DIGITS" ["l"="47.841,29.077"]
"kaixindelele/ChatPaper" ["l"="-4.127,23.596"]
"liguodongiot/llm-action" ["l"="38.757,-2.008"]
"scutan90/DeepLearning-500-questions" ["l"="50.915,28.314"]
"microsoft/SimMIM" ["l"="52.893,29.408"]
"FlyEgle/MAE-pytorch" ["l"="50.686,29.331"]
"facebookresearch/DiT" ["l"="45.849,31.545"]
"NVlabs/MinVIS" ["l"="50.685,30.655"]
"hustvl/BoxTeacher" ["l"="63.374,12.101"]
"OmkarThawakar/MSSTS-VIS" ["l"="50.7,30.638"]
"hustvl/RILS" ["l"="63.378,12.082"]
"hustvl/Featurized-QueryRCNN" ["l"="63.409,12.062"]
"JerryX1110/awesome-rvos" ["l"="48.961,31.848"]
"lucidrains/segformer-pytorch" ["l"="53.18,31.092"]
"Deeachain/Segmentation-Pytorch" ["l"="53.245,30.979"]
"Visual-Attention-Network/SegNeXt" ["l"="48.929,33.076"]
"WangLibo1995/GeoSeg" ["l"="41.845,25.197"]
"LiheYoung/UniMatch" ["l"="51.346,37.269"]
"thuml/Transfer-Learning-Library" ["l"="51.345,37.628"]
"KaiyangZhou/Dassl.pytorch" ["l"="50.818,37.918"]
"YGZWQZD/LAMDA-SSL" ["l"="45.178,27.779"]
"microsoft/robustlearn" ["l"="44.734,24.469"]
"SupeRuier/awesome-active-learning" ["l"="51.934,25.841"]
"Imbalance-VLM/Imbalance-VLM" ["l"="-54.767,-11.615"]
"IcarusWizard/MAE" ["l"="50.652,29.227"]
"BUPT-PRIV/MAE-priv" ["l"="50.672,29.283"]
"ariG23498/mae-scalable-vision-learners" ["l"="50.656,29.257"]
"FlyEgle/SDWNet" ["l"="50.651,29.276"]
"Kedreamix/MAE-for-CIFAR" ["l"="50.642,29.167"]
"liujiyuan13/MAE-code" ["l"="50.632,29.185"]
"IgorSusmelj/barlowtwins" ["l"="52.876,29.505"]
"SpectacularAI/sdk" ["l"="49.372,30.044"]
"SpectacularAI/HybVIO" ["l"="59.657,11.095"]
"diff-usion/Awesome-Diffusion-Models" ["l"="45.856,31.577"]
"CharlesShang/FastMaskRCNN" ["l"="50.473,33.114"]
"daijifeng001/R-FCN" ["l"="50.571,33.119"]
"hszhao/PSPNet" ["l"="53.457,30.803"]
"msracver/FCIS" ["l"="53.537,30.757"]
"MarvinTeichmann/tensorflow-fcn" ["l"="53.523,30.71"]
"forresti/SqueezeNet" ["l"="50.46,33.159"]
"VainF/DeepLabV3Plus-Pytorch" ["l"="53.305,30.893"]
"yassouali/pytorch-segmentation" ["l"="53.288,30.919"]
"bubbliiiing/yolov8-pytorch" ["l"="50.283,30.243"]
"bubbliiiing/clip-pytorch" ["l"="50.115,30.418"]
"sugarandgugu/Text2Image-Retrieval" ["l"="49.987,30.512"]
"yangjianxin1/CLIP-Chinese" ["l"="50.06,30.469"]
"schrodingercatss/tuning_playbook_zh_cn" ["l"="51.041,28.254"]
"mosaicml/composer" ["l"="38.741,-0.539"]
"libffcv/ffcv-imagenet" ["l"="51.135,29.437"]
"rom1504/img2dataset" ["l"="48.99,30.304"]
"bubbliiiing/yolov5-v6.1-pytorch" ["l"="50.293,30.281"]
"HuKai97/yolov5-5.x-annotations" ["l"="53.451,3.676"]
"open-mmlab/mmeval" ["l"="49.474,29.465"]
"open-mmlab/Multimodal-GPT" ["l"="47.499,30.148"]
"luispedro/milk" ["l"="44.802,27.793"]
"luispedro/imread" ["l"="51.623,29.7"]
"luispedro/jug" ["l"="51.67,29.701"]
"sqiangcao99/E2E-LOAD" ["l"="50.627,30.919"]
"VITA-Group/SDCLR" ["l"="51.337,30.577"]
"cmgreen210/TensorFlowDeepAutoencoder" ["l"="46.493,29.575"]
"tobegit3hub/tensorflow_template_application" ["l"="58.027,23.481"]
"ahangchen/GDLnotes" ["l"="50.333,28.084"]
"alrojo/tensorflow-tutorial" ["l"="47.79,28.718"]
"CreatCodeBuild/TensorFlow-and-DeepLearning-Tutorial" ["l"="50.375,28.143"]
"songgc/TF-recomm" ["l"="59.548,23.776"]
"KnHuq/Dynamic-Tensorflow-Tutorial" ["l"="46.16,27.86"]
"ikostrikov/TensorFlow-VAE-GAN-DRAW" ["l"="46.036,29.287"]
"rajarsheem/libsdae-autoencoder-tensorflow" ["l"="46.461,29.555"]
"handong1587/handong1587.github.io" ["l"="50.866,29.955"]
"Cysu/open-reid" ["l"="55.942,32.753"]
"KaiyangZhou/deep-person-reid" ["l"="55.84,32.787"]
"chongyangtao/Awesome-Scene-Text-Recognition" ["l"="46.322,7.176"]
"michuanhaohao/reid-strong-baseline" ["l"="55.925,32.783"]
"Visual-Attention-Network/VAN-Classification" ["l"="48.976,33.084"]
"facebookresearch/ConvNeXt-V2" ["l"="48.976,33.022"]
"1vpmaster/SimpleTrack" ["l"="50.634,31.011"]
"JackWoo0831/Swin-JDE" ["l"="50.632,31.032"]
"fossasia/2022.fossasia.org" ["l"="51.586,29.043"]
"fossasia/chatmosphere-app" ["l"="51.6,29.018"]
"fossasia/cmake-microchip" ["l"="51.612,29.029"]
"pperle/gaze-data-collection" ["l"="49.773,29.894"]
"PyQt5/PyQt" ["l"="-19.848,-28.955"]
"Ewenwan/MVision" ["l"="59.252,11.043"]
"junjiehe96/FastInst" ["l"="50.622,30.495"]
"hustvl/TopFormer" ["l"="53.166,31.055"]
"hustvl/Senna" ["l"="63.436,11.925"]
"hustvl/mmMamba" ["l"="63.409,11.996"]
"leandro-svg/SparseInst_TensorRT" ["l"="50.645,30.44"]
"MohsenZand/ObjectBox" ["l"="50.422,30.436"]
"52CV/WACV-2022-Papers" ["l"="51.006,29.677"]
"SYSU-SAIL/DASR" ["l"="-35.119,21.482"]
"nblt/RWP" ["l"="51.473,29.887"]
"mueller-mp/SAM-ON" ["l"="51.481,29.897"]
"frank-xwang/debiased-pseudo-labeling" ["l"="51.83,30.552"]
"yjh0410/PyTorch_YOLOF" ["l"="50.534,30.391"]
"bubbliiiing/yolox-keras" ["l"="50.283,30.338"]
"bubbliiiing/yolact-tf2" ["l"="50.296,30.347"]
"fh2019ustc/PolySnake" ["l"="50.631,30.457"]
"olivia-w12/PatchDCT" ["l"="50.629,30.474"]
"zorzi-s/PolyWorldPretrainedNetwork" ["l"="42.604,23.218"]
"Kazuhito00/MOT-Tracking-by-Detection-Pipeline" ["l"="49.651,30.012"]
"DongSky/LPT" ["l"="51.345,30.549"]
"facebookresearch/FFCV-SSL" ["l"="51.175,29.398"]
"alibaba/TinyNeuralNetwork" ["l"="49.836,29.971"]
"quic/aimet" ["l"="52.582,33.376"]
"THU-MIG/torch-model-compression" ["l"="49.782,30.028"]
"openvinotoolkit/nncf" ["l"="64.144,-2.528"]
"VainF/Torch-Pruning" ["l"="52.647,33.355"]
"nndeploy/nndeploy" ["l"="53.413,32.627"]
"mit-han-lab/tinyengine" ["l"="-16.12,-42.541"]
"mit-han-lab/tinyml" ["l"="-16.123,-42.505"]
"asiviero/fuzzy_time_series_predictor" ["l"="52.57,29.994"]
"carlomazzaferro/scikit-hts" ["l"="45.332,26.503"]
"TommyZihao/MMPose_Tutorials" ["l"="50.319,29.95"]
"open-mmlab/OpenMMLabCamp" ["l"="50.282,29.982"]
"TommyZihao/MMSegmentation_Tutorials" ["l"="50.313,30.001"]
"lxtGH/Video-K-Net" ["l"="50.72,30.612"]
"zhiqi-li/Panoptic-SegFormer" ["l"="50.747,30.505"]
"Tai-Wang/Depth-from-Motion" ["l"="64.673,11.226"]
"jshilong/GroupRCNN" ["l"="49.461,29.481"]
"tfzhou/ContrastiveSeg" ["l"="53.025,29.394"]
"jshilong/GPT4RoI" ["l"="47.44,30.215"]
"HunterJ-Lin/ActiveTeacher" ["l"="51.572,30.243"]
"ArcherCYM/CEEMDAN-LSTM" ["l"="52.462,29.774"]
"GivyBoy/CEEMDAN-and-LSTM-CNN-CBAM" ["l"="52.464,29.759"]
"irenekarijadi/RF-LSTM-CEEMDAN" ["l"="52.475,29.79"]
"BorealisAI/ConR" ["l"="51.405,30.508"]
"IDEA-Research/MaskDINO" ["l"="48.8,30.247"]
"HDETR/H-Deformable-DETR" ["l"="48.669,30.354"]
"HYUNJS/SGT" ["l"="50.649,30.908"]
"liuqk3/OUTrack" ["l"="50.663,30.926"]
"wenyyu/Image-Adaptive-YOLO" ["l"="51.933,30.237"]
"wenyyu/IA-Seg" ["l"="51.977,30.238"]
"Gatedip/GDIP-Yolo" ["l"="52,30.24"]
"Mazin-Hnewa/MS-DAYOLO" ["l"="51.814,30.244"]
"yz-wang/TogetherNet" ["l"="51.983,30.251"]
"zhilin007/FFA-Net" ["l"="-35.315,22.275"]
"sunshangquan/ReForDe" ["l"="51.985,30.224"]
"cuiziteng/ICCV_MAET" ["l"="52.057,30.258"]
"cuiziteng/Illumination-Adaptive-Transformer" ["l"="-33.603,23.231"]
"MayankSingal/PyTorch-Image-Dehazing" ["l"="-35.3,22.288"]
"IDKiro/DehazeFormer" ["l"="-35.335,22.25"]
"LiWentomng/OrientedRepPoints" ["l"="53.092,32.008"]
"BookerDeWitt/MSBDN-DFF" ["l"="-35.286,22.27"]
"NIvykk/DENet" ["l"="52.013,30.249"]
"zhechen/Deformable-DETR-REGO" ["l"="48.664,30.454"]
"openvinotoolkit/deep-object-reid" ["l"="51.195,30.566"]
"Alibaba-MIIL/Solving_ImageNet" ["l"="51.199,30.611"]
"bubbliiiing/dcgan-pytorch" ["l"="50.204,30.388"]
"bubbliiiing/srgan-pytorch" ["l"="50.183,30.396"]
"bubbliiiing/cyclegan-pytorch" ["l"="50.237,30.359"]
"henricavalcante/openomr" ["l"="49.675,30.37"]
"tsauvine/omr" ["l"="49.684,30.347"]
"artesaos/warehouse" ["l"="7.183,-21.361"]
"Vibashan/online-da" ["l"="51.816,30.27"]
"dliu5812/DDF" ["l"="51.816,30.217"]
"Feobi1999/TDD" ["l"="51.78,30.259"]
"Vibashan/irg-sfda" ["l"="51.797,30.271"]
"imisra/latent-noise-icnm" ["l"="51.685,30.387"]
"keijiro/MetavidoTimeline" ["l"="-25.589,-34.839"]
"gespona/depthai-unity-plugin" ["l"="49.322,30.009"]
"takerum/vat_chainer" ["l"="51.48,30.269"]
"zyayoung/Iter-Deformable-DETR" ["l"="50.859,30.54"]
"shouxieai/learning-cuda-trt" ["l"="53.363,32.605"]
"cfzd/Ultra-Fast-Lane-Detection-v2" ["l"="64.293,10.431"]
"tjqansthd/LapDepth-release" ["l"="64.805,4.36"]
"shouxieai/infer" ["l"="53.384,32.617"]
"MetaVisionLab/DDG" ["l"="51.8,30.358"]
"MetaVisionLab/PE" ["l"="51.824,30.362"]
"MetaVisionLab/MetaFBP" ["l"="51.819,30.374"]
"MetaVisionLab/SSDG" ["l"="51.836,30.373"]
"hikvision-research/DomainGeneralization" ["l"="51.749,30.336"]
"nickmckay/LiPD-utilities" ["l"="52.408,29.999"]
"nickmckay/GeoChronR" ["l"="52.431,30.02"]
"bubbliiiing/DeepLabV3Plus-Pytorch" ["l"="50.142,30.211"]
"yjh0410/AVA_Dataset" ["l"="47.594,33.922"]
"mingkai-zheng/SimMatchV2" ["l"="51.843,30.58"]
"TencentYoutuResearch/Classification-SemiCLS" ["l"="51.83,30.594"]
"1998v7/Advances-in-Partial-Label-Learning" ["l"="51.71,30.606"]
"thuml/Decoupled-Adaptation-for-Cross-Domain-Object-Detection" ["l"="51.782,30.22"]
"JeremyZhao1998/MRT-release" ["l"="51.792,30.295"]
"ModelTC/AAAI2023_EAMPD" ["l"="51.011,30.402"]
"ModelTC/Dipoorlet" ["l"="52.473,33.344"]
"extreme-assistant/Deep-learning-datasets" ["l"="51.243,29.573"]
"extreme-assistant/survey-computer-vision-2022" ["l"="51.151,29.624"]
"megvii-research/introduction-neural-3d-reconstruction" ["l"="49.569,30.173"]
"megvii-research/cv-master-ex" ["l"="49.531,30.195"]
"siriusdemon/Build-Your-Own-Face-Model" ["l"="33.348,29.283"]
"tw-yshuang/coco2yolo" ["l"="50.068,30.122"]
"qjy981010/CMaskTrack-RCNN" ["l"="50.661,30.621"]
"eddiexia98/PaPi" ["l"="51.647,30.602"]
"xiemk/awesome-weakly-supervised-multi-label-learning" ["l"="51.627,30.653"]
"zeroQiaoba/ALIM" ["l"="56.449,28.091"]
"zhongjingyu1/Partial-Multi-Label-Learning" ["l"="51.644,30.634"]
"ShikunLi/Sel-CL" ["l"="51.677,30.547"]
"vs-cv/sf-yolo" ["l"="51.833,30.217"]
"luogen1996/OneTeacher" ["l"="51.602,30.234"]
"tiankongzhang/MGADA" ["l"="51.799,30.227"]
"Hlings/AsyFOD" ["l"="49.274,29.378"]
"giuliomattolin/ConfMix" ["l"="51.802,30.249"]
"CityU-AIM-Group/SCAN" ["l"="51.787,30.229"]
"UCSC-REAL/negative-label-smoothing" ["l"="51.596,30.573"]
"fateshelled/OnnxGraphQt" ["l"="49.699,30.017"]
"PINTO0309/sit4onnx" ["l"="49.725,30.009"]
"asprecic/mediapipe" ["l"="49.474,29.875"]
"TommyZihao/MMTracking_Tutorials" ["l"="50.149,30.018"]
"TommyZihao/MMDetection_Tutorials" ["l"="50.221,29.994"]
"VIPSeg-Dataset/VIPSeg-Dataset" ["l"="50.695,30.669"]
"GuoleiSun/VSS-MRCFA" ["l"="53.22,31.158"]
"haochenheheda/LVVIS" ["l"="50.678,30.691"]
"KainingYing/CTVIS" ["l"="50.693,30.683"]
"lxtGH/Tube-Link" ["l"="50.704,30.664"]
"VSPW-dataset/VSPW-dataset-download" ["l"="53.206,31.17"]
"Kazuhito00/YOLOX-Colaboratory-Training-Sample" ["l"="49.743,30.012"]
"voyazici/visual-transformers-classification" ["l"="51.372,30.729"]
"jameslahm/SCPNet" ["l"="51.49,30.711"]
"Robbie-Xu/CPSD" ["l"="51.385,30.761"]
"YyzHarry/SubpopBench" ["l"="50.868,37.767"]
"hongfz16/HCMoCo" ["l"="50.119,38.391"]
"ZhangYuanhan-AI/OmniBenchmark" ["l"="50.154,38.346"]
"ZPDu/DAI-Net" ["l"="52.087,30.28"]
"khurramHashmi/FeatEnHancer" ["l"="52.087,30.248"]
"dvlab-research/SNR-Aware-Low-Light-Enhance" ["l"="-33.612,23.273"]
"cuiziteng/ECCV_AERIS" ["l"="52.106,30.267"]
"fedebotu/ICLR2023-OpenReviewData" ["l"="51.824,29.351"]
"EdisonLeeeee/ICLR2022-OpenReviewData" ["l"="51.809,29.334"]
"MegEngine/MegCat" ["l"="49.572,30.128"]
"megvii-research/PCB" ["l"="51.294,30.749"]
"Flashkong/Source-Free-Object-Detection-by-Learning-to-Overlook-Domain-Style" ["l"="51.814,30.282"]
"ChuQiaosong/AASFOD" ["l"="51.84,30.293"]
"EPFL-IMOS/simple-SFOD" ["l"="51.839,30.281"]
"simonzachau/caltech-pedestrian-dataset-to-yolo-format-converter" ["l"="50.981,30.483"]
"hizhangp/caltech-pedestrian-converter" ["l"="50.967,30.473"]
"blessu/BalancedLossNLP" ["l"="51.521,30.795"]
"aehrc/LAAT" ["l"="-33.355,16.203"]
"Alibaba-MIIL/PETA" ["l"="51.199,30.641"]
"PaddlePaddle/PaddleCustomDevice" ["l"="49.843,29.471"]
"JongMokKim/mix-unmix" ["l"="51.524,30.191"]
"ros-sports/rqt_image_overlay" ["l"="50.285,29.185"]
"HanxunH/MDAttack" ["l"="51.787,30.458"]
"LeeHyuck/CDMAD" ["l"="51.393,30.599"]
"jinyan-06/SHIKE" ["l"="51.274,30.552"]
"HunterJ-Lin/WSOVOD" ["l"="51.626,30.258"]
"Quyans/GOI-Hyperplane" ["l"="51.634,30.272"]
"paobranco/Pre-processingApproachesImbalanceRegression" ["l"="51.457,30.622"]
"naver-ai/hmix-gmix" ["l"="51.209,30.58"]
"cjf8899/FeatureMap_Visualize_Pytorch" ["l"="51.931,30.562"]
"AngusDujw/SAF" ["l"="51.374,29.904"]
"tml-epfl/understanding-sam" ["l"="51.382,29.923"]
"xxgege/GAM" ["l"="51.544,29.877"]
"Wang-pengfei/SAGM" ["l"="-35.399,21.151"]
"ibaiGorordo/Tensorflow-Mobile-Generic-Object-Localizer" ["l"="49.604,29.999"]
"Abhishek-Arora/Image-Classification-Using-SVM" ["l"="51.748,30.809"]
"Emmanu-Varghese/Image-Classification-using-SVM" ["l"="51.763,30.83"]
"Kazuhito00/Skin-Clothes-Hair-Segmentation-using-SMP" ["l"="49.651,29.984"]
"bupt-ai-cz/PGDF" ["l"="51.746,30.63"]
"Justherozen/ProMix" ["l"="51.658,30.562"]
"Serafadam/ros_docsets" ["l"="49.365,30.071"]
"xxgege/NICO-plus" ["l"="51.856,29.791"]
"cjf8899/CDRL" ["l"="51.985,30.583"]
"strongwolf/CDG" ["l"="51.796,30.15"]
"FeixiangLu/PaddleSports" ["l"="49.816,29.505"]
"huggingface/peft" ["l"="40.04,0.52"]
"hindupuravinash/the-gan-zoo" ["l"="45.729,29.122"]
"TommyZihao/Label2Everything" ["l"="50.295,29.957"]
"TommyZihao/zihao_course" ["l"="50.979,27.969"]
"miemie2013/miemiedetection" ["l"="53.519,3.693"]
"FeiYull/TensorRT-Alpha" ["l"="53.43,32.679"]
"THU-MIG/yolov10" ["l"="48.776,29.972"]
"ai-dawang/PlugNPlay-Modules" ["l"="50.541,29.574"]
"Auorui/Opencv-project-training" ["l"="51.617,29.584"]
"OFA-Sys/Chinese-CLIP" ["l"="49.065,30.217"]
"yangjianxin1/CPM" ["l"="53.292,27.119"]
"yangjianxin1/OFA-Chinese" ["l"="50.021,30.507"]
"yangjianxin1/ClipCap-Chinese" ["l"="49.163,30.419"]
"yangjianxin1/GPT2-chitchat" ["l"="53.296,27.144"]
"Kazuhito00/Image-Processing-Node-Editor" ["l"="49.657,30.039"]
"motojinc25/WeDX" ["l"="49.607,30.047"]
"devemin/Geospatial2ros" ["l"="49.621,30.034"]
"AISIN-TRC/E2Pose" ["l"="49.595,30.066"]
"xiong-jie-y/ml-examples" ["l"="49.63,30.049"]
"Kazuhito00/omnidirectional-viewer-sample-using-opencv" ["l"="49.627,30.063"]
"wookayin/gpustat" ["l"="50.961,29.669"]
"wookayin/gpustat-web" ["l"="48.184,31.836"]
"Syllo/nvtop" ["l"="50.872,29.532"]
"paperswithcode/ai-deadlines" ["l"="-3.842,23.573"]
"anderskm/gputil" ["l"="50.917,29.94"]
"wookayin/dotfiles" ["l"="48.217,31.87"]
"google-research/arxiv-latex-cleaner" ["l"="-3.827,23.607"]
"xiemk/SPML-LAC" ["l"="51.647,30.672"]
"AlexanderLutsenko/nobuco" ["l"="49.841,29.921"]
"quic/ai-hub-models" ["l"="49.702,29.89"]
"z1069614715/z1069614715" ["l"="50.319,29.581"]
"open-mmlab/mmpose" ["l"="31.794,28.089"]
"leeyegy/SimCC" ["l"="31.83,28.228"]
"Tau-J/rtmlib" ["l"="31.969,28.334"]
"ViTAE-Transformer/ViTPose" ["l"="42.367,25.151"]
"zczcwh/DL-HPE" ["l"="31.778,28.267"]
"JinluZhang1126/MixSTE" ["l"="31.845,28.358"]
"HamPerdredes/SOOD" ["l"="53.247,31.981"]
"laganiere/OpenCV2Cookbook2ndEd" ["l"="51.464,29.634"]
"52CV/ICCV-2023-Papers" ["l"="50.982,29.651"]
"52CV/WACV-2023-Papers" ["l"="51.001,29.626"]
"52CV/WACV-2024-Papers" ["l"="50.978,29.63"]
"yatengLG/ISAT_with_segment_anything" ["l"="48.84,30.024"]
"Junjue-Wang/LoveDA" ["l"="42.352,25.076"]
"zhuqinfeng1999/Samba" ["l"="41.855,25.149"]
"POZAlabs/ComMU-code" ["l"="50.642,30.856"]
"lonl/CDBN" ["l"="50.999,30.885"]
"KirigiriSuzumiya/Sports_Game_Tracker" ["l"="49.792,29.498"]
"LiuShuaiyr/UAVMOT" ["l"="50.624,31.114"]
"MasterBin-IIAU/Unicorn" ["l"="54.546,33.805"]
"hkchengrex/XMem" ["l"="47.736,34.586"]
"suhwan-cho/awesome-video-object-segmentation" ["l"="47.678,34.619"]
"zhang-tao-whu/DVIS" ["l"="50.69,30.696"]
"open-rdc/ROS2_Walking_Pattern_Generator" ["l"="50.347,29.043"]
"weii41392/AQT" ["l"="51.78,30.283"]
"hikvision-research/SlimDA" ["l"="51.688,30.306"]
"pierrepaleo/pypwt" ["l"="52.495,29.934"]
"Greenleaf88/CUDA2DWaveletTransform" ["l"="52.496,29.947"]
"modons/LMR" ["l"="52.415,29.98"]
"Yefee/xcesm" ["l"="52.4,29.972"]
"LinkedEarth/PyleoTutorials" ["l"="52.373,29.983"]
"sylvia-dee/PRYSM" ["l"="52.389,29.989"]
"JCZ404/Semi-DETR" ["l"="51.528,30.215"]
"sunxm2357/DualCoOp" ["l"="51.253,30.735"]
"HaohaoNJU/CenterPoint" ["l"="64.595,11.162"]
"PaddlePaddle/PaddleRS" ["l"="41.928,25.253"]
"OpenDriveLab/Birds-eye-view-Perception" ["l"="64.527,11.301"]
"HuangJunJie2017/BEVDet" ["l"="64.58,11.286"]
"qcraftai/pillarnext" ["l"="64.568,11.195"]
"ADLab-AutoDrive/BEVFusion" ["l"="64.565,11.245"]
"megvii-research/PETR" ["l"="64.561,11.287"]
"NVIDIA-AI-IOT/Lidar_AI_Solution" ["l"="64.585,11.237"]
"PointsCoder/Awesome-3D-Object-Detection-for-Autonomous-Driving" ["l"="64.604,11.213"]
"NVIDIA-AI-IOT/CUDA-PointPillars" ["l"="64.564,11.127"]
"TommyZihao/MMClassification_Tutorials" ["l"="50.19,30.007"]
"QingZhong1996/Awesome-Video-Instance-Segmentation-Papers" ["l"="50.712,30.7"]
"zhang-tao-whu/DVIS_Plus" ["l"="50.695,30.708"]
"chyaou/VMD-CNN-LSTM-AM-wind-power-forecast" ["l"="52.468,29.737"]
"jinlong17/DA-Detect" ["l"="51.853,30.198"]
"yhlleo/tensorflow.cifar10" ["l"="51.388,30.07"]
"persistforever/cifar10-tensorflow" ["l"="51.436,30.104"]
"Justherozen/TRAILER" ["l"="52.699,14.334"]
"ThanhChinhBK/RBM_CF" ["l"="50.999,31.01"]
"erwtokritos/collaborativefiltering-rbm" ["l"="51.005,31.023"]
"quic/qidk" ["l"="49.67,29.885"]
"quic/ai-hub-apps" ["l"="49.656,29.872"]
"gesanqiu/SNPE_Tutorial" ["l"="49.647,29.844"]
"gesanqiu/Chinese_MobileBert_on_SNPE" ["l"="49.623,29.827"]
"yxymessi/H2E-Framework" ["l"="50.455,38.205"]
"dnap512/SROD" ["l"="52.133,30.278"]
"rajkundu/mediapipe" ["l"="49.474,29.897"]
"Ali2500/TarViS" ["l"="50.666,30.73"]
"zzubqh/Mask2Former-Simplify" ["l"="50.567,30.663"]
"IDEA-Research/MP-Former" ["l"="50.581,30.627"]
"PaddlePaddle/PaDiff" ["l"="49.864,29.534"]
"zhouwei25/PaConvert-Origin" ["l"="49.826,29.531"]
"OpenGVLab/Official-ConvMAE-Det" ["l"="50.544,31.005"]
"OpenGVLab/MovieMind" ["l"="50.553,30.982"]
"jahongir7174/YOLOv8-pt" ["l"="50.23,30.387"]
"jahongir7174/YOLOv11-pt" ["l"="50.207,30.423"]
"MarlonBecker/MSAM" ["l"="51.494,29.878"]
"Richard-61/FineAction" ["l"="50.563,30.959"]
"TuanTNG/SimOn" ["l"="50.587,30.914"]
"RomainCroze/Statistical-Image-Completion" ["l"="50.473,31.869"]
"bachase/inpaint" ["l"="50.469,31.882"]
"siucaan/ML0120EN_Course" ["l"="51.138,30.98"]
"hikvision-research/SparseShiftLayer" ["l"="51.707,30.316"]
"Quyans/ARStudio" ["l"="51.649,30.288"]
"UHHRobotics22-23/MarimbaBot" ["l"="50.3,29.194"]
"megvii-research/basedet" ["l"="49.544,30.142"]
"musicalOffering/ActionSwitch-release" ["l"="50.621,30.863"]
"meta-llama/llama" ["l"="40.061,0.34"]
"CompVis/stable-diffusion" ["l"="38.212,0.954"]
"Vision-CAIR/MiniGPT-4" ["l"="39.832,0.405"]
"pytorch/tutorials" ["l"="50.679,28.562"]
"ApolloAuto/apollo" ["l"="61.724,12.33"]
"dmlc/xgboost" ["l"="48.109,28.951"]
"exacity/deeplearningbook-chinese" ["l"="50.749,28.189"]
"PaddlePaddle/book" ["l"="49.969,29.597"]
"fxsjy/jieba" ["l"="53.075,27.279"]
"tianyagk/PyEMD" ["l"="52.337,29.792"]
"wmayner/pyemd" ["l"="65.679,11.375"]
"nikdon/pyEntropy" ["l"="62.15,34.573"]
"MattWillFlood/EntropyHub" ["l"="62.132,34.569"]
"DataXujing/YOLOv8" ["l"="53.441,32.727"]
"Jai-wei/YOLOv8-PySide6-GUI" ["l"="53.594,3.673"]
"Sharpiless/Yolov5-Deepsort" ["l"="54.555,32.509"]
"hujiecpp/Mini-Segment-Anything" ["l"="50.734,30.574"]
"hujiecpp/PE3R" ["l"="64.093,3.103"]
"gaohuang/SnapshotEnsemble" ["l"="54.172,26.918"]
"gngdb/pytorch-cifar-sgdr" ["l"="51.66,30.091"]
"TomMao23/multiyolov5" ["l"="53.457,3.608"]
"mariobehling/Xoai-Artwork" ["l"="51.663,28.969"]
"OpnTec/2023.opentechsummit.de" ["l"="51.755,28.875"]
"samluxenberg1/Time-Series-Forecasting-with-Wavelets" ["l"="52.303,29.783"]
"SysCV/MaskFreeVIS" ["l"="50.717,30.68"]
"sjy0727/CLIP-Text-Image-Retrieval" ["l"="49.963,30.529"]
"sugarandgugu/Simple-Trl-Training" ["l"="49.949,30.518"]
"hpc203/Chinese-CLIP-opencv-onnxrun" ["l"="49.957,30.545"]
"Erlemar/Erlemar.github.io" ["l"="51.004,30.71"]
"sajal2692/data-science-portfolio" ["l"="47.285,24.789"]
"MrYxJ/calculate-flops.pytorch" ["l"="51.029,29.87"]
"zugexiaodui/torch_flops" ["l"="51.157,29.871"]
"daixiangzi/Awesome-Token-Compress" ["l"="47.547,30.207"]
"HuangOwen/Awesome-LLM-Compression" ["l"="38.841,-0.343"]
"facebookresearch/ToMe" ["l"="48.99,33.157"]
"fla-org/flash-linear-attention" ["l"="38.943,-0.326"]
"deepspeedai/Megatron-DeepSpeed" ["l"="38.765,-0.569"]
"mecarill/2pcnet" ["l"="51.769,30.294"]
"kevinlin311tw/caffe-augmentation" ["l"="51.524,33.415"]
"Seung-Hun-Lee/CAVIS" ["l"="50.686,30.725"]
"MinghanLi/UniVS" ["l"="50.697,30.739"]
"TusharSSurve/OpenCV" ["l"="50.232,30.109"]
"PaddlePaddle/ERNIE-SDK" ["l"="49.925,29.425"]
"baidubce/bce-qianfan-sdk" ["l"="49.87,29.374"]
"PaddlePaddle/PaddleMIX" ["l"="50.007,29.53"]
"baidubce/app-builder" ["l"="49.898,29.383"]
"AgentEra/Agently-Daily-News-Collector" ["l"="45.445,0.313"]
"PaddleCV-SIG/PaddleLabel" ["l"="53.192,30.457"]
"linhandev/medSeg" ["l"="35.569,1.802"]
"XiangchenYin/PE-YOLO" ["l"="52.036,30.237"]
"commaai/chffr-api" ["l"="50.096,29.292"]
"commaai/web" ["l"="50.111,29.283"]
"Championchess/Amodal-Completion-in-the-Wild" ["l"="50.541,30.746"]
"k8xu/amodal" ["l"="50.55,30.729"]
"saraao/amodal" ["l"="50.516,30.802"]
"360AILAB-NLP/360LayoutAnalysis" ["l"="46.432,5.916"]
"AlibabaResearch/AdvancedLiterateMachinery" ["l"="46.369,6.029"]
"yjh0410/YOLO-Tutorial-v2" ["l"="50.522,30.406"]
"yjh0410/ODLab" ["l"="50.547,30.403"]
"tml-epfl/sam-low-rank-features" ["l"="51.524,29.89"]
"dialogueeeeee/LTGC" ["l"="51.374,30.563"]
"Gank0078/FineSSL" ["l"="51.361,30.562"]
"sniklaus/pytorch-extension" ["l"="51.503,29.987"]
"facebookarchive/torch-rnnlib" ["l"="45.978,27.674"]
"justinkay/aldi" ["l"="51.841,30.326"]
"commaai/CVCalendar" ["l"="50.069,29.266"]
"h751410234/DATR" ["l"="51.814,30.297"]
"hitachi-rd-cv/MILA" ["l"="51.874,30.31"]
"soup-L/Multimodal_retrieval" ["l"="49.935,30.542"]
"h751410234/RemoteSensingTeacher" ["l"="51.839,30.308"]
"cilinyan/VISA" ["l"="33.364,31.739"]
"zwq456/CLIP-VIS" ["l"="47.602,34.467"]
"heshuting555/DsHmp" ["l"="47.633,34.539"]
"k8sp/sextant" ["l"="49.819,29.394"]
"baifendian/Sirius" ["l"="49.776,29.379"]
"k8sp/tutorials" ["l"="49.779,29.363"]
"facebookresearch/ego4d-goalstep" ["l"="50.652,30.943"]
"facebookresearch/htstep" ["l"="50.661,30.97"]
"embrace000/shapelet_transformer" ["l"="50.442,30.256"]
"WenqiZhang-HIT/MGDN-project" ["l"="50.446,30.244"]
"namkoong-lab/whyshift" ["l"="51.823,29.824"]
"namkoong-lab/dro" ["l"="51.858,29.826"]
"mecarill/classawareteacher" ["l"="51.813,30.316"]
"snu-mllab/Achievement-Distillation" ["l"="51.332,30.222"]
"snu-mllab/DPPO" ["l"="51.347,30.228"]
"snu-mllab/Efficient-CNN-Depth-Compression" ["l"="51.332,30.235"]
"hjaurum/DHash" ["l"="51.294,29.433"]
"fceschmidt/bullshit-arch" ["l"="50.255,29.205"]
"JianxGao/C2F-Seg" ["l"="50.585,30.677"]
"amitguptagwl/Java-Rule-Book" ["l"="50.163,29.278"]
"vllm-project/vllm" ["l"="40.265,0.397"]
"openai/gym" ["l"="57.598,17.87"]
"dask/dask" ["l"="43.655,23.686"]
"DLR-RM/stable-baselines3" ["l"="57.748,18.051"]
"modin-project/modin" ["l"="45.322,26.054"]
"uber/petastorm" ["l"="-2.71,17.193"]
"quic/aimet-model-zoo" ["l"="-35.329,21.499"]
"UbiquitousLearning/mllm" ["l"="38.941,-0.237"]
"XiaoMi/StableDiffusionOnDevice" ["l"="49.631,29.883"]
"argmaxinc/WhisperKitAndroid" ["l"="49.617,29.851"]
"Achazwl/mlc" ["l"="49.599,29.875"]
"pytorch/executorch" ["l"="39.047,-0.352"]
"microsoft/onnxruntime-genai" ["l"="-44.231,6.165"]
"microsoft/onnxruntime-extensions" ["l"="-44.244,6.096"]
"microsoft/onnxruntime-inference-examples" ["l"="-44.26,6.115"]
"52CV/ECCV-2024-Papers" ["l"="38.298,-0.097"]
"Yangzhangcst/Mamba-in-CV" ["l"="49.08,34.187"]
"yinizhilian/ICLR2025-Papers-with-Code" ["l"="38.17,2.382"]
"DmitryRyumin/CVPR-2023-24-Papers" ["l"="38.282,2.309"]
"NVlabs/MambaVision" ["l"="49.119,34.205"]
"BBuf/tvm_mlir_learn" ["l"="36.986,0.9"]
"iree-org/iree" ["l"="37.132,0.971"]
"pytorch/glow" ["l"="37.175,0.908"]
"zzh8829/yolov3-tf2" ["l"="50.379,32.878"]
"NaturalIntelligence/cytorus" ["l"="50.156,29.297"]
"NaturalIntelligence/StubbyDB" ["l"="50.171,29.299"]
"ryfeus/lambda-packs" ["l"="50.974,30.718"]
"Miserlou/lambda-packages" ["l"="10.822,-3.275"]
"mthenw/awesome-layers" ["l"="10.763,-3.072"]
"ryansb/sklearn-build-lambda" ["l"="10.829,-3.33"]
"smithclay/lambdium" ["l"="11.147,-3.149"]
"GregoryCMiller/omr" ["l"="49.67,30.321"]
"EuracBiomedicalResearch/RescueOMR" ["l"="49.665,30.34"]
"tc-mb/llama.cpp" ["l"="49.527,29.853"]
"OpenBMB/MiniCPM" ["l"="51.395,2.802"]
"TroyTzou/mlc-llm-android" ["l"="49.552,29.87"]
"ZTMIDGO/Android-Stable-diffusion-ONNX" ["l"="49.498,30.812"]
"ShiftHackZ/Stable-Diffusion-Android" ["l"="49.461,30.822"]
"zhangyin1996/ISP-Teacher" ["l"="52.112,30.295"]
"alibaba/x-deeplearning" ["l"="58.105,23.45"]
"Angel-ML/angel" ["l"="58.068,23.5"]
"baidu/Familia" ["l"="53.309,27.373"]
"yeyupiaoling/LearnPaddle" ["l"="35.598,1.887"]
"koth/kcws" ["l"="53.329,27.454"]
"ycjuan/libffm" ["l"="58.011,23.415"]
"wzhe06/Ad-papers" ["l"="58.15,23.422"]
"ycjuan/kaggle-2014-criteo" ["l"="58.018,23.396"]
"baidu/bigflow" ["l"="0.987,14.096"]
"kingsj0405/DIFE" ["l"="50.651,30.813"]
"hongsunjang/pipe-bd" ["l"="52.927,33.459"]
"baidubce/qianfan-models-cookbook" ["l"="49.875,29.353"]
"ninehills/langchain-wenxin" ["l"="49.83,29.346"]
"Refefer/fastxml" ["l"="51.666,30.997"]
"xiaohan2012/sleec_python" ["l"="51.62,30.941"]
"facebookarchive/torchnet" ["l"="46,27.679"]
"gram-ai/capsule-networks" ["l"="50.861,33.215"]
"szagoruyko/functional-zoo" ["l"="51.274,29.945"]
"TeamHG-Memex/tensorboard_logger" ["l"="51.276,29.901"]
"probtorch/probtorch" ["l"="23.001,14.332"]
"mbeyeler/opencv-machine-learning" ["l"="51.277,29.822"]
"HKUST-Aerial-Robotics/VINS-Mono" ["l"="59.372,11.013"]
"hpc203/image_captioning-opencv-onnxrun" ["l"="49.928,30.569"]
"dmlc/tensorboard" ["l"="51.772,33.637"]
"JianGoForIt/YellowFin_Pytorch" ["l"="51.371,29.942"]
"DeepMark/deepmark" ["l"="45.942,27.676"]
"chrisranderson/beholder" ["l"="51.408,29.883"]
"martinarjovsky/WassersteinGAN" ["l"="45.883,29.153"]
"twitter-archive/torch-autograd" ["l"="45.999,27.666"]
"buriburisuri/sugartensor" ["l"="46.07,29.257"]
"Kaixhin/nninit" ["l"="45.929,27.643"]
"rewonc/pastalog" ["l"="44.92,27.621"]
"Element-Research/rnn" ["l"="46.055,27.692"]
"szagoruyko/diracnets" ["l"="51.318,29.977"]
"fmassa/optimize-net" ["l"="45.951,27.65"]
"kimhc6028/relational-networks" ["l"="23.489,14.801"]
"tensorflow/fold" ["l"="46.192,27.87"]
"szagoruyko/attention-transfer" ["l"="53.549,33.612"]
"jacobgil/pytorch-explain-black-box" ["l"="23.991,14.306"]
"cemoody/topicsne" ["l"="44.918,26.193"]
"carpedm20/BEGAN-pytorch" ["l"="46.019,29.116"]
"isht7/pytorch-deeplab-resnet" ["l"="53.417,30.847"]
"vinhkhuc/PyTorch-Mini-Tutorials" ["l"="51.416,29.926"]
"yu-changqian/pytorch-segmentation" ["l"="53.438,30.862"]
"pokaxpoka/RoGNoisyLabel" ["l"="51.711,30.424"]
"rdcolema/tensorflow-image-classification" ["l"="51.67,30.71"]
"Fdevmsy/Image_Classification_with_5_methods" ["l"="51.721,30.767"]
"jibikbam/CNN-3D-images-Tensorflow" ["l"="-33.072,16.512"]
"wolfib/image-classification-CIFAR10-tf" ["l"="51.575,30.385"]
"legolas123/cv-tricks.com" ["l"="51.763,30.768"]
"mbaykenar/digital-logic-design" ["l"="51.793,29.208"]
"ecomfe/reskript" ["l"="-4.626,-32.96"]
"taspinar/sidl" ["l"="52.32,29.951"]
"mnf2014/article_fft_wavelet_ecg" ["l"="52.296,29.95"]
"dmbee/seglearn" ["l"="43.654,26.821"]
"taspinar/numerical-mooc" ["l"="52.302,29.935"]
"yakouyang/Multilevel_Wavelet_Decomposition_Network_Pytorch" ["l"="36.777,5.107"]
"kristpapadopoulos/seriesnet" ["l"="44.823,24.168"]
"strongwolf/OpenSD" ["l"="-35.392,21.183"]
"chenriwei/DeepFace" ["l"="33.126,29.227"]
"vanhuyz/CycleGAN-TensorFlow" ["l"="45.876,29.136"]
"devnag/pytorch-generative-adversarial-networks" ["l"="45.92,29.163"]
"yahoo/open_nsfw" ["l"="-10.045,-8.098"]
"shekkizh/FCN.tensorflow" ["l"="53.481,30.722"]
"TuSimple/TuSimple-DUC" ["l"="53.482,30.844"]
"jhkim89/PyramidNet-caffe" ["l"="51.442,30.148"]
"google-ai-edge/LiteRT" ["l"="45.658,25.494"]
"google-ai-edge/model-explorer" ["l"="39.148,-0.311"]
"google-ai-edge/ai-edge-quantizer" ["l"="45.662,25.457"]
"Samsung/ONE" ["l"="-18.416,-43.104"]
"apple/ml-mobileclip" ["l"="48.747,30.132"]
"tc-mb/ollama" ["l"="49.492,29.84"]
"bit-bots/bitbots_vision" ["l"="50.271,29.164"]
"A11en0/Multi-View-Multi-Label-Model-Collections" ["l"="51.664,30.652"]
"tensorflow/embedding-projector-standalone" ["l"="51.654,29.842"]
"tensorflow/tensorboard-plugin-example" ["l"="51.564,29.856"]
"Prinway/Distributionally-Robust-Optimization-Notes" ["l"="51.892,29.824"]
"nblt/F-SAM" ["l"="51.512,29.871"]
"machengcheng2016/CPE-LTSSL" ["l"="51.413,30.635"]
"taneishi/CRBM" ["l"="51.022,31.054"]
"cjackie/CRBM" ["l"="51.019,31.038"]
"MadryLab/modelcomponents" ["l"="51.374,29.294"]
"microsoft/unadversarial" ["l"="38.98,-7.587"]
"MadryLab/DsDm" ["l"="51.332,29.311"]
"dhruvramani/C2AE-Multilabel-Classification" ["l"="51.575,30.874"]
"may-/cnn-re-tf" ["l"="55.804,26.612"]
"isobar-us/multilabel-image-classification-tensorflow" ["l"="51.539,30.768"]
"argmaxinc/whisperkittools" ["l"="49.573,29.832"]
"smpanaro/more-ane-transformers" ["l"="41.24,-23.025"]
"argmaxinc/SDBench" ["l"="49.541,29.818"]
"fossasia/wp-rotatingtweets" ["l"="51.773,28.853"]
"fossasia/eventyay-ticket-video" ["l"="51.787,28.852"]
"hwalsuklee/tensorflow-mnist-cnn" ["l"="51.559,30.077"]
"zonghua94/mnist" ["l"="51.599,30.068"]
"J911/MISO-VFI" ["l"="51.929,30.542"]
"swagger-coder/ASDA" ["l"="51.65,30.262"]
"fossasia/eventyay-ticket-pages" ["l"="51.795,28.841"]
"fossasia/eventyay-talk-video" ["l"="51.78,28.836"]
"grz0zrg/ccwt.js" ["l"="52.459,29.893"]
"EvgenyKashin/CommentsAnalysis" ["l"="51.019,30.707"]
"fzhu2e/cfr" ["l"="52.44,29.993"]
"Justherozen/FreeAL" ["l"="51.715,30.581"]
"hpc203/gaze-estimation-opencv-dnn" ["l"="49.906,30.585"]
"ZheC/Realtime_Multi-Person_Pose_Estimation" ["l"="31.66,28.089"]
"ildoonet/tf-pose-estimation" ["l"="31.689,28.097"]
"Embedding/Chinese-Word-Vectors" ["l"="53.279,27.27"]
"brightmart/nlp_chinese_corpus" ["l"="53.296,27.242"]
"baidu/AnyQ" ["l"="53.337,27.313"]
"baidu/lac" ["l"="53.257,27.306"]
"brightmart/text_classification" ["l"="53.422,27.308"]
"AIFengheshu/Plug-play-modules" ["l"="6.379,-9.978"]
"northBeggar/Plug-and-Play" ["l"="6.414,-9.965"]
"KawaiiAsh/deepLearning-modules-toolbox" ["l"="6.474,-9.925"]
"hustvl/Vim" ["l"="49.146,34.193"]
"AccumulateMore/CV" ["l"="51.068,28.149"]
"Human9000/nd-Mamba2-torch" ["l"="49.076,34.226"]
"Shivanandroy/Study-Materials" ["l"="52.061,29.371"]
"gliese581gg/YOLO_tensorflow" ["l"="50.408,33.044"]
"rhsimplex/image-match" ["l"="58.244,9.129"]
"bunchesofdonald/photohash" ["l"="51.161,29.52"]
"aetilius/pHash" ["l"="58.338,8.618"]
"jenssegers/imagehash" ["l"="-16.098,25.711"]
"corona10/goimagehash" ["l"="1.292,-7.673"]
"spotify/annoy" ["l"="53.031,25.889"]
"kkroening/ffmpeg-python" ["l"="44.366,20.212"]
"spro/practical-pytorch" ["l"="53.121,25.666"]
"leonvanbokhorst/NoteBooks-Statistics-and-MachineLearning" ["l"="48.12,28.338"]
"datitran/object_detector_app" ["l"="50.35,33.018"]
"PacktPublishing/Computer-Vision-with-OpenCV-3-and-Qt5" ["l"="-20.469,-28.169"]
"macaodha/inat_comp_2018" ["l"="-53.04,-16.922"]
"visipedia/iwildcam_comp" ["l"="-52.471,10.797"]
"visipedia/newt" ["l"="51.296,30.547"]
"kuangliu/pytorch-yolov2" ["l"="51.049,30.24"]
"kalviny/MSDNet-PyTorch" ["l"="49.323,32.845"]
"yangle15/RANet-pytorch" ["l"="49.276,32.919"]
"ucbdrive/skipnet" ["l"="49.351,32.792"]
"felixgwu/img_classification_pk_pytorch" ["l"="51.172,30.021"]
"ikhlestov/vision_networks" ["l"="50.521,33.288"]
"felixlaumon/deform-conv" ["l"="53.651,30.666"]
"jiachen0212/pytorch-caffe-darknet-convert" ["l"="50.384,30.292"]
"debidatta/pixelobjectness-bilinear" ["l"="50.79,30.584"]
"dvornikita/context_aug" ["l"="50.791,30.618"]
"TannerGilbert/Computer-Vision-Synthetic-Data-Generation" ["l"="50.785,30.599"]
"rickiepark/awesome-pytorch" ["l"="51.505,29.915"]
"popol1991/seq2seq-pytorch-example" ["l"="51.568,29.907"]
"bamos/densenet.pytorch" ["l"="51.074,30.059"]
"andreasveit/densenet-pytorch" ["l"="51.16,30.041"]
"mattmacy/vnet.pytorch" ["l"="61.991,36.852"]
"szagoruyko/wide-residual-networks" ["l"="50.608,33.229"]
"fyu/dilation" ["l"="53.516,30.777"]
"bfortuner/pytorch_tiramisu" ["l"="53.642,30.794"]
"chainer/chainercv" ["l"="50.947,30.086"]
"chainer/chainer" ["l"="47.887,29.112"]
"chainer/chainerrl" ["l"="57.456,18.153"]
"chainer/chainermn" ["l"="-34.638,20.405"]
"chainer/chainerui" ["l"="-34.648,20.382"]
"mitmul/chainer-faster-rcnn" ["l"="-34.601,20.479"]
"pfnet-research/chainer-gan-lib" ["l"="-34.723,20.405"]
"leetenki/YOLOv2" ["l"="-34.583,20.507"]
"chainer/onnx-chainer" ["l"="-34.635,20.372"]
"sakishinoda/tf-ssl" ["l"="51.48,30.282"]
"jasjeetIM/Mask-RCNN" ["l"="51.709,33.412"]
"voidrank/FastMask" ["l"="53.628,30.753"]
"xiaohaoChen/rrc_detection" ["l"="51.678,33.477"]
"xbresson/spectral_graph_convnets" ["l"="52.855,15.84"]
"guosheng/refinenet" ["l"="53.532,30.809"]
"BAILOOL/ANMS-Codes" ["l"="51.018,30.69"]
"zju3dv/GIFT" ["l"="59.337,9.207"]
"rmsalinas/fbow" ["l"="59.542,10.981"]
"benhoyt/pybktree" ["l"="51.313,29.45"]
"OlavHN/bnlstm" ["l"="46.379,27.875"]
"rcompton/ml_cheat_sheet" ["l"="48.323,28.375"]
"bshillingford/python-torchfile" ["l"="45.887,27.632"]
"facebookresearch/ResNeXt" ["l"="50.571,33.22"]
"fanq15/caffe_to_torch_to_pytorch" ["l"="51.687,33.147"]
"facebookresearch/clevr-iep" ["l"="23.499,14.834"]
"miraclewkf/ResNeXt-PyTorch" ["l"="53.583,31.054"]
"D-X-Y/NAS-Bench-201" ["l"="52.802,34.05"]
"jaxony/ShuffleNet" ["l"="51.75,33.26"]
"xternalz/WideResNet-pytorch" ["l"="51.199,30.015"]
"jcjohnson/pytorch-vgg" ["l"="45.878,27.463"]
"geifmany/cifar-vgg" ["l"="51.216,29.948"]
"mjiansun/cifar10-vgg16" ["l"="51.212,29.929"]
"open-edge-platform/datumaro" ["l"="64.112,-2.655"]
"PacktPublishing/Mastering-OpenCV3-Second-Edition" ["l"="51.542,29.605"]
"PacktPublishing/OpenCV-4-Computer-Vision-Application-Programming-Cookbook-Fourth-Edition" ["l"="51.559,29.588"]
"Quyans/Drag-Your-Gaussian" ["l"="51.658,30.276"]
"nhw649/EOV-Seg" ["l"="64.5,11.98"]
"jiecaoyu/XNOR-Net-PyTorch" ["l"="52.551,33.591"]
"lizhengwei1992/ResidualDenseNetwork-Pytorch" ["l"="-35.081,21.743"]
"kevinzakka/densenet" ["l"="51.239,30.064"]
"taki0112/Densenet-Tensorflow" ["l"="50.513,33.254"]
"RoryDuncan/learning-roadmaps" ["l"="51.688,29.302"]
"edouardoyallon/scatwave" ["l"="51.724,29.948"]
"PaddlePaddle/PaddleFlow" ["l"="49.861,29.419"]
"edouardoyallon/ScatNetLight" ["l"="52.136,29.964"]
"oinegue/scatnetgpu" ["l"="52.15,29.955"]
"manharsharma007/OMR" ["l"="49.711,30.37"]
"ManivannanMurugavel/YOLO-Annotation-Tool" ["l"="50.238,30.02"]
"tdwg/developers" ["l"="51.674,31.322"]
"princewang1994/R-FCN.pytorch" ["l"="51.86,33.478"]
"daijifeng001/caffe-rfcn" ["l"="51.725,33.427"]
"abhi2610/ohem" ["l"="51.699,33.45"]
"feichtenhofer/Detect-Track" ["l"="54.869,33.744"]
"yousongzhu/CoupleNet" ["l"="51.589,33.487"]
"yolomax/rru-reid" ["l"="55.902,32.671"]
"cioc/ray-kubernetes" ["l"="49.755,29.347"]
"lbktrinh/DRU" ["l"="51.874,30.294"]
"zhyever/Amodal-Depth-Anything" ["l"="50.495,30.825"]
"fossasia/badgemagic-rs" ["l"="51.799,28.828"]
"fossasia/eventyay-talk-pages" ["l"="51.812,28.844"]
"fossasia/lang.eventyay.com" ["l"="51.797,28.8"]
"fossasia/2024.fossasia.org" ["l"="51.787,28.808"]
"fossasia/badgemagic-case" ["l"="51.816,28.816"]
"fossasia/eventyay-talk-schedule" ["l"="51.831,28.82"]
"fossasia/eventyay-tickets-exhibitors" ["l"="51.812,28.802"]
"fossasia/eventyay-tickets-paypal" ["l"="51.829,28.802"]
"fossasia/badgemagic-go" ["l"="51.823,28.831"]
"fossasia/eventyay-tickets-stripe" ["l"="51.846,28.786"]
"wiseodd/generative-models" ["l"="45.835,29.145"]
"aristocratos/btop" ["l"="-13.67,-7.21"]
"flightlessmango/MangoHud" ["l"="-14.452,-0.87"]
"ClementTsang/bottom" ["l"="-13.383,-6.988"]
"cupy/cupy" ["l"="43.714,23.501"]
"FeralInteractive/gamemode" ["l"="-14.459,-0.845"]
"NVIDIA/open-gpu-kernel-modules" ["l"="-14.222,-0.729"]
"htop-dev/htop" ["l"="6.018,-20.61"]
"wwmm/easyeffects" ["l"="-14.381,-0.938"]
"locuslab/pytorch_fft" ["l"="51.419,30.01"]
"jhjacobsen/pytorch-i-revnet" ["l"="22.992,14.491"]
"DeepInsight-PCALab/CompactBilinearPooling-Pytorch" ["l"="-52.907,-16.902"]
"leovandriel/caffe2_cpp_tutorial" ["l"="51.576,29.967"]
"leovandriel/caffe2_models" ["l"="51.617,29.976"]
"facebookarchive/models" ["l"="44.748,27.582"]
"warmspringwinds/pytorch-cpp" ["l"="51.535,29.978"]
"KleinYuan/Caffe2-iOS" ["l"="32.86,28.991"]
"peterneher/peters-stuff" ["l"="51.609,29.956"]
"wohlert/semi-supervised-pytorch" ["l"="23.035,14.311"]
"ZhouYanzhao/ORN" ["l"="22.192,13.465"]
"bayesgroup/variational-dropout-sparsifies-dnn" ["l"="52.754,33.681"]
"rwightman/pytorch-dpn-pretrained" ["l"="51.677,33.561"]
"haitongli/knowledge-distillation-pytorch" ["l"="53.527,33.594"]
"bioinf-jku/SNNs" ["l"="46.04,29.197"]
"floydwch/kaggle-cli" ["l"="57.498,24.015"]
"sh1ng/imba" ["l"="57.329,24.046"]
"jocicmarko/ultrasound-nerve-segmentation" ["l"="61.994,37.003"]
"facebookresearch/TensorComprehensions" ["l"="37.142,0.92"]
"ebetica/autogradpp" ["l"="51.51,29.963"]
"pytorch/gloo" ["l"="57.935,23.566"]
"Maratyszcza/NNPACK" ["l"="37.154,0.787"]
"torch/cunn" ["l"="46.04,27.61"]
"google/gemmlowp" ["l"="37.151,0.815"]
"wenxinxu/resnet-in-tensorflow" ["l"="50.463,33.206"]
"BIGBALLON/Deep-learning-and-practices" ["l"="51.31,30.009"]
"junyuseu/ResNet-on-Cifar10" ["l"="51.488,33.299"]
"carlini/nn_robust_attacks" ["l"="39.016,-7.434"]
"matteo-dunnhofer/imagenet" ["l"="50.374,33.26"]
"exelban/tensorflow-cifar-10" ["l"="51.328,30.025"]
"SpikeKing/keras-yolo3-detection" ["l"="50.394,32.91"]
"dmarcosg/DSAC" ["l"="53.202,30.816"]
"igorcmoura/inpaint-object-remover" ["l"="50.554,31.742"]
"cantarinigiorgio/Image-Inpainting" ["l"="50.543,31.763"]
"S12P/Inpainting" ["l"="50.57,31.764"]
"ikuwow/inpainting_criminisi2004" ["l"="50.529,31.745"]
"luigman/image-inpainting" ["l"="50.577,31.742"]
"gitanat/simple-ocr-opencv" ["l"="-49.459,18.717"]
"shekkizh/ImageProcessingProjects" ["l"="16.879,-8.972"]
"bsdnoobz/opencv-code" ["l"="33.008,28.873"]
"MicrocontrollersAndMore/OpenCV_3_License_Plate_Recognition_Python" ["l"="34.084,30.2"]
"algorithmdog/Representation-based-Multilabel-Learning" ["l"="51.568,30.898"]
"hgpvision/darknet" ["l"="50.587,29.99"]
"BBuf/Darknet" ["l"="52.897,33.349"]
"ebattenberg/crbm-drum-patterns" ["l"="51.022,31.083"]
"Ecohnoch/tensorflow-cifar100" ["l"="51.503,30.099"]
"Cloudox/Cifar10-Classify" ["l"="51.474,30.103"]
"fra31/auto-attack" ["l"="39.007,-7.525"]
"MadryLab/robustness" ["l"="38.976,-7.5"]
"yaodongyu/TRADES" ["l"="39.013,-7.511"]
"xiangrufan/keras-mtcnn" ["l"="50.072,30.39"]
"YIYIMZ/yiyi_mtcnn_keras" ["l"="50.033,30.413"]
"aim-uofa/SegAgent" ["l"="50.51,30.834"]
"lcy-seso/LearningNotes" ["l"="49.851,29.447"]
"lzx1413/CAFFE_SSD" ["l"="50.571,30.757"]
"JianGoForIt/YellowFin" ["l"="58.014,23.295"]
"vzhong/dashboard" ["l"="44.823,26.174"]
"meliketoy/image-preprocessing" ["l"="51.144,30.385"]
"dfourer/ASTRES_toolbox" ["l"="52.637,29.827"]
}