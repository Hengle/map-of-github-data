digraph G {
"SamvitJ/Accel" -> "jfzhuang/DAVSS"
"SamvitJ/Accel" -> "jfzhuang/IFR"
"HRNet/HRNet-Semantic-Segmentation" -> "openseg-group/openseg.pytorch"
"HRNet/HRNet-Semantic-Segmentation" -> "NVIDIA/semantic-segmentation"
"HRNet/HRNet-Semantic-Segmentation" -> "Tramac/awesome-semantic-segmentation-pytorch"
"HRNet/HRNet-Semantic-Segmentation" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"HRNet/HRNet-Semantic-Segmentation" -> "junfu1115/DANet"
"HRNet/HRNet-Semantic-Segmentation" -> "jfzhang95/pytorch-deeplab-xception"
"HRNet/HRNet-Semantic-Segmentation" -> "HRNet/HRNet-Image-Classification"
"HRNet/HRNet-Semantic-Segmentation" -> "open-mmlab/mmsegmentation" ["e"=1]
"HRNet/HRNet-Semantic-Segmentation" -> "yu-changqian/TorchSeg"
"HRNet/HRNet-Semantic-Segmentation" -> "CSAILVision/semantic-segmentation-pytorch"
"HRNet/HRNet-Semantic-Segmentation" -> "zhanghang1989/ResNeSt" ["e"=1]
"HRNet/HRNet-Semantic-Segmentation" -> "speedinghzl/CCNet"
"HRNet/HRNet-Semantic-Segmentation" -> "mrgloom/awesome-semantic-segmentation" ["e"=1]
"HRNet/HRNet-Semantic-Segmentation" -> "zhanghang1989/PyTorch-Encoding"
"HRNet/HRNet-Semantic-Segmentation" -> "openseg-group/OCNet.pytorch"
"luuuyi/CBAM.PyTorch" -> "Jongchan/attention-module"
"luuuyi/CBAM.PyTorch" -> "moskomule/senet.pytorch"
"luuuyi/CBAM.PyTorch" -> "junfu1115/DANet"
"luuuyi/CBAM.PyTorch" -> "BangguWu/ECANet"
"luuuyi/CBAM.PyTorch" -> "AlexHex7/Non-local_pytorch"
"luuuyi/CBAM.PyTorch" -> "houqb/CoordAttention"
"luuuyi/CBAM.PyTorch" -> "xvjiarui/GCNet"
"luuuyi/CBAM.PyTorch" -> "miraclewkf/SENet-PyTorch"
"luuuyi/CBAM.PyTorch" -> "Youngkl0726/Convolutional-Block-Attention-Module" ["e"=1]
"luuuyi/CBAM.PyTorch" -> "speedinghzl/CCNet"
"luuuyi/CBAM.PyTorch" -> "zhanghang1989/ResNeSt" ["e"=1]
"luuuyi/CBAM.PyTorch" -> "Res2Net/Res2Net-PretrainedModels"
"luuuyi/CBAM.PyTorch" -> "implus/SKNet"
"luuuyi/CBAM.PyTorch" -> "tengshaofeng/ResidualAttentionNetwork-pytorch"
"luuuyi/CBAM.PyTorch" -> "heykeetae/Self-Attention-GAN" ["e"=1]
"implus/PytorchInsight" -> "xvjiarui/GCNet"
"implus/PytorchInsight" -> "implus/SKNet"
"implus/PytorchInsight" -> "pppLang/SKNet"
"implus/PytorchInsight" -> "lxtGH/OctaveConv_pytorch"
"implus/PytorchInsight" -> "BangguWu/ECANet"
"implus/PytorchInsight" -> "megvii-model/ShuffleNet-Series" ["e"=1]
"implus/PytorchInsight" -> "junfu1115/DANet"
"implus/PytorchInsight" -> "speedinghzl/CCNet"
"implus/PytorchInsight" -> "zhanghang1989/PyTorch-Encoding"
"implus/PytorchInsight" -> "hszhao/semseg"
"implus/PytorchInsight" -> "Jongchan/attention-module"
"implus/PytorchInsight" -> "Res2Net/Res2Net-PretrainedModels"
"implus/PytorchInsight" -> "zhanghang1989/ResNeSt" ["e"=1]
"implus/PytorchInsight" -> "speedinghzl/pytorch-segmentation-toolbox"
"implus/PytorchInsight" -> "BIGBALLON/CIFAR-ZOO" ["e"=1]
"yassouali/pytorch-segmentation" -> "Tramac/awesome-semantic-segmentation-pytorch"
"yassouali/pytorch-segmentation" -> "zijundeng/pytorch-semantic-segmentation"
"yassouali/pytorch-segmentation" -> "mrgloom/awesome-semantic-segmentation" ["e"=1]
"yassouali/pytorch-segmentation" -> "jfzhang95/pytorch-deeplab-xception"
"yassouali/pytorch-segmentation" -> "VainF/DeepLabV3Plus-Pytorch"
"yassouali/pytorch-segmentation" -> "meetps/pytorch-semseg"
"yassouali/pytorch-segmentation" -> "HRNet/HRNet-Semantic-Segmentation"
"yassouali/pytorch-segmentation" -> "qubvel-org/segmentation_models.pytorch" ["e"=1]
"yassouali/pytorch-segmentation" -> "open-mmlab/mmsegmentation" ["e"=1]
"yassouali/pytorch-segmentation" -> "ShawnBIT/UNet-family" ["e"=1]
"yassouali/pytorch-segmentation" -> "hszhao/semseg"
"yassouali/pytorch-segmentation" -> "CSAILVision/semantic-segmentation-pytorch"
"yassouali/pytorch-segmentation" -> "LeeJunHyun/Image_Segmentation" ["e"=1]
"yassouali/pytorch-segmentation" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"yassouali/pytorch-segmentation" -> "JunMa11/SegLossOdyssey" ["e"=1]
"jfzhang95/pytorch-deeplab-xception" -> "meetps/pytorch-semseg"
"jfzhang95/pytorch-deeplab-xception" -> "HRNet/HRNet-Semantic-Segmentation"
"jfzhang95/pytorch-deeplab-xception" -> "YudeWang/deeplabv3plus-pytorch"
"jfzhang95/pytorch-deeplab-xception" -> "kazuto1011/deeplab-pytorch"
"jfzhang95/pytorch-deeplab-xception" -> "Tramac/awesome-semantic-segmentation-pytorch"
"jfzhang95/pytorch-deeplab-xception" -> "zhanghang1989/PyTorch-Encoding"
"jfzhang95/pytorch-deeplab-xception" -> "junfu1115/DANet"
"jfzhang95/pytorch-deeplab-xception" -> "CSAILVision/semantic-segmentation-pytorch"
"jfzhang95/pytorch-deeplab-xception" -> "VainF/DeepLabV3Plus-Pytorch"
"jfzhang95/pytorch-deeplab-xception" -> "yu-changqian/TorchSeg"
"jfzhang95/pytorch-deeplab-xception" -> "mrgloom/awesome-semantic-segmentation" ["e"=1]
"jfzhang95/pytorch-deeplab-xception" -> "speedinghzl/pytorch-segmentation-toolbox"
"jfzhang95/pytorch-deeplab-xception" -> "hszhao/semseg"
"jfzhang95/pytorch-deeplab-xception" -> "zijundeng/pytorch-semantic-segmentation"
"jfzhang95/pytorch-deeplab-xception" -> "openseg-group/openseg.pytorch"
"CoinCheung/BiSeNet" -> "MichaelFan01/STDC-Seg"
"CoinCheung/BiSeNet" -> "ooooverflow/BiSeNet"
"CoinCheung/BiSeNet" -> "yu-changqian/TorchSeg"
"CoinCheung/BiSeNet" -> "zllrunning/face-parsing.PyTorch" ["e"=1]
"CoinCheung/BiSeNet" -> "Tramac/awesome-semantic-segmentation-pytorch"
"CoinCheung/BiSeNet" -> "ydhongHIT/DDRNet"
"CoinCheung/BiSeNet" -> "HRNet/HRNet-Semantic-Segmentation"
"CoinCheung/BiSeNet" -> "MaybeShewill-CV/bisenetv2-tensorflow"
"CoinCheung/BiSeNet" -> "XuJiacong/PIDNet"
"CoinCheung/BiSeNet" -> "NVIDIA/semantic-segmentation"
"CoinCheung/BiSeNet" -> "hszhao/semseg"
"CoinCheung/BiSeNet" -> "VITA-Group/FasterSeg"
"CoinCheung/BiSeNet" -> "LikeLy-Journey/SegmenTron"
"CoinCheung/BiSeNet" -> "switchablenorms/CelebAMask-HQ" ["e"=1]
"CoinCheung/BiSeNet" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"yu-changqian/TorchSeg" -> "speedinghzl/pytorch-segmentation-toolbox"
"yu-changqian/TorchSeg" -> "openseg-group/OCNet.pytorch"
"yu-changqian/TorchSeg" -> "zhanghang1989/PyTorch-Encoding"
"yu-changqian/TorchSeg" -> "ooooverflow/BiSeNet"
"yu-changqian/TorchSeg" -> "CoinCheung/BiSeNet"
"yu-changqian/TorchSeg" -> "hszhao/semseg"
"yu-changqian/TorchSeg" -> "speedinghzl/CCNet"
"yu-changqian/TorchSeg" -> "openseg-group/openseg.pytorch"
"yu-changqian/TorchSeg" -> "zijundeng/pytorch-semantic-segmentation"
"yu-changqian/TorchSeg" -> "HRNet/HRNet-Semantic-Segmentation"
"yu-changqian/TorchSeg" -> "junfu1115/DANet"
"yu-changqian/TorchSeg" -> "Tramac/awesome-semantic-segmentation-pytorch"
"yu-changqian/TorchSeg" -> "XiaLiPKU/EMANet"
"yu-changqian/TorchSeg" -> "wuhuikai/FastFCN"
"yu-changqian/TorchSeg" -> "meetps/pytorch-semseg"
"VainF/DeepLabV3Plus-Pytorch" -> "bubbliiiing/deeplabv3-plus-pytorch" ["e"=1]
"VainF/DeepLabV3Plus-Pytorch" -> "jfzhang95/pytorch-deeplab-xception"
"VainF/DeepLabV3Plus-Pytorch" -> "Tramac/awesome-semantic-segmentation-pytorch"
"VainF/DeepLabV3Plus-Pytorch" -> "open-mmlab/mmsegmentation" ["e"=1]
"VainF/DeepLabV3Plus-Pytorch" -> "HRNet/HRNet-Semantic-Segmentation"
"VainF/DeepLabV3Plus-Pytorch" -> "yassouali/pytorch-segmentation"
"VainF/DeepLabV3Plus-Pytorch" -> "NVlabs/SegFormer" ["e"=1]
"VainF/DeepLabV3Plus-Pytorch" -> "fregu856/deeplabv3"
"VainF/DeepLabV3Plus-Pytorch" -> "YudeWang/deeplabv3plus-pytorch"
"VainF/DeepLabV3Plus-Pytorch" -> "mcordts/cityscapesScripts"
"VainF/DeepLabV3Plus-Pytorch" -> "hszhao/semseg"
"VainF/DeepLabV3Plus-Pytorch" -> "qubvel-org/segmentation_models.pytorch" ["e"=1]
"VainF/DeepLabV3Plus-Pytorch" -> "CoinCheung/BiSeNet"
"VainF/DeepLabV3Plus-Pytorch" -> "NVIDIA/semantic-segmentation"
"VainF/DeepLabV3Plus-Pytorch" -> "kazuto1011/deeplab-pytorch"
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "fwang91/residual-attention-network" ["e"=1]
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "liudaizong/Residual-Attention-Network" ["e"=1]
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "Jongchan/attention-module"
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "szagoruyko/attention-transfer" ["e"=1]
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "heykeetae/Self-Attention-GAN" ["e"=1]
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "KaiyangZhou/pytorch-center-loss" ["e"=1]
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "PistonY/ResidualAttentionNetwork" ["e"=1]
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "AlexHex7/Non-local_pytorch"
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "facebookresearch/mixup-cifar10" ["e"=1]
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "luuuyi/CBAM.PyTorch"
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "kevinzakka/recurrent-visual-attention"
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "ozan-oktay/Attention-Gated-Networks" ["e"=1]
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "leaderj1001/Attention-Augmented-Conv2d"
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "moskomule/senet.pytorch"
"tengshaofeng/ResidualAttentionNetwork-pytorch" -> "miraclewkf/SENet-PyTorch"
"epfml/attention-cnn" -> "leaderj1001/Stand-Alone-Self-Attention"
"epfml/attention-cnn" -> "leaderj1001/Attention-Augmented-Conv2d"
"epfml/attention-cnn" -> "hszhao/SAN"
"epfml/attention-cnn" -> "xvjiarui/GCNet"
"epfml/attention-cnn" -> "openai/sparse_attention" ["e"=1]
"epfml/attention-cnn" -> "zhanghang1989/ResNeSt" ["e"=1]
"epfml/attention-cnn" -> "lucidrains/lambda-networks" ["e"=1]
"epfml/attention-cnn" -> "adobe/antialiased-cnns" ["e"=1]
"epfml/attention-cnn" -> "whai362/PVT" ["e"=1]
"epfml/attention-cnn" -> "HobbitLong/CMC" ["e"=1]
"epfml/attention-cnn" -> "AlexHex7/Non-local_pytorch"
"epfml/attention-cnn" -> "HobbitLong/PyContrast" ["e"=1]
"epfml/attention-cnn" -> "Jongchan/attention-module"
"epfml/attention-cnn" -> "heykeetae/Self-Attention-GAN" ["e"=1]
"epfml/attention-cnn" -> "speedinghzl/pytorch-segmentation-toolbox"
"junfu1115/DANet" -> "speedinghzl/CCNet"
"junfu1115/DANet" -> "zhanghang1989/PyTorch-Encoding"
"junfu1115/DANet" -> "xvjiarui/GCNet"
"junfu1115/DANet" -> "openseg-group/OCNet.pytorch"
"junfu1115/DANet" -> "HRNet/HRNet-Semantic-Segmentation"
"junfu1115/DANet" -> "Jongchan/attention-module"
"junfu1115/DANet" -> "jfzhang95/pytorch-deeplab-xception"
"junfu1115/DANet" -> "yu-changqian/TorchSeg"
"junfu1115/DANet" -> "Tramac/awesome-semantic-segmentation-pytorch"
"junfu1115/DANet" -> "AlexHex7/Non-local_pytorch"
"junfu1115/DANet" -> "zhanghang1989/ResNeSt" ["e"=1]
"junfu1115/DANet" -> "XiaLiPKU/EMANet"
"junfu1115/DANet" -> "hszhao/semseg"
"junfu1115/DANet" -> "meetps/pytorch-semseg"
"junfu1115/DANet" -> "openseg-group/openseg.pytorch"
"kazuto1011/deeplab-pytorch" -> "jfzhang95/pytorch-deeplab-xception"
"kazuto1011/deeplab-pytorch" -> "YudeWang/deeplabv3plus-pytorch"
"kazuto1011/deeplab-pytorch" -> "jiwoon-ahn/irn" ["e"=1]
"kazuto1011/deeplab-pytorch" -> "nightrome/cocostuff" ["e"=1]
"kazuto1011/deeplab-pytorch" -> "isht7/pytorch-deeplab-resnet"
"kazuto1011/deeplab-pytorch" -> "speedinghzl/Pytorch-Deeplab"
"kazuto1011/deeplab-pytorch" -> "lucasb-eyer/pydensecrf"
"kazuto1011/deeplab-pytorch" -> "zhanghang1989/PyTorch-Encoding"
"kazuto1011/deeplab-pytorch" -> "speedinghzl/pytorch-segmentation-toolbox"
"kazuto1011/deeplab-pytorch" -> "openseg-group/OCNet.pytorch"
"kazuto1011/deeplab-pytorch" -> "meetps/pytorch-semseg"
"kazuto1011/deeplab-pytorch" -> "wkentaro/pytorch-fcn"
"kazuto1011/deeplab-pytorch" -> "hszhao/semseg"
"kazuto1011/deeplab-pytorch" -> "jiwoon-ahn/psa" ["e"=1]
"kazuto1011/deeplab-pytorch" -> "YudeWang/SEAM" ["e"=1]
"MisaOgura/flashtorch" -> "facebookresearch/TorchRay" ["e"=1]
"MisaOgura/flashtorch" -> "greentfrapp/lucent" ["e"=1]
"MisaOgura/flashtorch" -> "FrancescoSaverioZuppichini/A-journey-into-Convolutional-Neural-Network-visualization-" ["e"=1]
"MisaOgura/flashtorch" -> "XiaLiPKU/EMANet"
"MisaOgura/flashtorch" -> "haofanwang/Score-CAM" ["e"=1]
"MisaOgura/flashtorch" -> "kazuto1011/grad-cam-pytorch" ["e"=1]
"MisaOgura/flashtorch" -> "zasdfgbnm/TorchSnooper" ["e"=1]
"MisaOgura/flashtorch" -> "utkuozbulak/pytorch-cnn-visualizations" ["e"=1]
"MisaOgura/flashtorch" -> "speedinghzl/pytorch-segmentation-toolbox"
"MisaOgura/flashtorch" -> "implus/PytorchInsight"
"MiguelMonteiro/permutohedral_lattice" -> "MiguelMonteiro/CRFasRNNLayer"
"MiguelMonteiro/permutohedral_lattice" -> "idofr/pymutohedral_lattice"
"MiguelMonteiro/permutohedral_lattice" -> "MPI-IS/bilateralNN"
"zh217/torch-dct" -> "kaix90/DCTNet"
"zh217/torch-dct" -> "fbcotter/pytorch_wavelets" ["e"=1]
"zh217/torch-dct" -> "mlomnitz/DiffJPEG" ["e"=1]
"zh217/torch-dct" -> "raoyongming/GFNet" ["e"=1]
"zh217/torch-dct" -> "dcdcvgroup/FcaNet"
"zh217/torch-dct" -> "pkuxmq/Invertible-Image-Rescaling" ["e"=1]
"zh217/torch-dct" -> "cg563/simple-blackbox-attack" ["e"=1]
"zh217/torch-dct" -> "uber-research/jpeg2dct"
"zh217/torch-dct" -> "v0lta/PyTorch-Wavelet-Toolbox" ["e"=1]
"zh217/torch-dct" -> "cfzd/FcaNet"
"zh217/torch-dct" -> "locuslab/pytorch_fft" ["e"=1]
"zh217/torch-dct" -> "cszn/DPIR" ["e"=1]
"zh217/torch-dct" -> "BorealisAI/advertorch" ["e"=1]
"GeorgeSeif/Semantic-Segmentation-Suite" -> "mrgloom/awesome-semantic-segmentation" ["e"=1]
"GeorgeSeif/Semantic-Segmentation-Suite" -> "meetps/pytorch-semseg"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "yu-changqian/TorchSeg"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "CSAILVision/semantic-segmentation-pytorch"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "rishizek/tensorflow-deeplab-v3-plus"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "divamgupta/image-segmentation-keras" ["e"=1]
"GeorgeSeif/Semantic-Segmentation-Suite" -> "DrSleep/tensorflow-deeplab-resnet"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "junfu1115/DANet"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "zijundeng/pytorch-semantic-segmentation"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "Tramac/awesome-semantic-segmentation-pytorch"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "tangzhenyu/SemanticSegmentation_DL"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "qubvel/segmentation_models" ["e"=1]
"GeorgeSeif/Semantic-Segmentation-Suite" -> "sthalles/deeplab_v3"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "MSiam/TFSegmentation"
"GeorgeSeif/Semantic-Segmentation-Suite" -> "shekkizh/FCN.tensorflow"
"terrychenism/OctaveConv" -> "facebookresearch/OctConv"
"terrychenism/OctaveConv" -> "lxtGH/OctaveConv_pytorch"
"terrychenism/OctaveConv" -> "iacolippo/octconv-pytorch"
"terrychenism/OctaveConv" -> "implus/SKNet"
"terrychenism/OctaveConv" -> "gan3sh500/octaveconv-pytorch"
"terrychenism/OctaveConv" -> "koshian2/OctConv-TFKeras"
"terrychenism/OctaveConv" -> "d-li14/octconv.pytorch"
"terrychenism/OctaveConv" -> "cypw/DPNs" ["e"=1]
"fidler-lab/polyrnn-pp" -> "fidler-lab/polyrnn-pp-pytorch"
"fidler-lab/polyrnn-pp" -> "AlexMa011/pytorch-polygon-rnn"
"fidler-lab/polyrnn-pp" -> "fidler-lab/curve-gcn"
"fidler-lab/polyrnn-pp" -> "scaelles/DEXTR-PyTorch"
"fidler-lab/polyrnn-pp" -> "nv-tlabs/STEAL"
"fidler-lab/polyrnn-pp" -> "feichtenhofer/Detect-Track" ["e"=1]
"fidler-lab/polyrnn-pp" -> "hszhao/ICNet"
"fidler-lab/polyrnn-pp" -> "MSiam/TFSegmentation"
"fidler-lab/polyrnn-pp" -> "Angzz/awesome-panoptic-segmentation"
"fidler-lab/polyrnn-pp" -> "ShuLiu1993/PANet" ["e"=1]
"fidler-lab/polyrnn-pp" -> "zengarden/light_head_rcnn" ["e"=1]
"fidler-lab/polyrnn-pp" -> "nv-tlabs/GSCNN"
"fidler-lab/polyrnn-pp" -> "ronghanghu/seg_every_thing" ["e"=1]
"fidler-lab/polyrnn-pp" -> "zju3dv/snake" ["e"=1]
"NVIDIA/semantic-segmentation" -> "openseg-group/openseg.pytorch"
"NVIDIA/semantic-segmentation" -> "HRNet/HRNet-Semantic-Segmentation"
"NVIDIA/semantic-segmentation" -> "nv-tlabs/GSCNN"
"NVIDIA/semantic-segmentation" -> "yu-changqian/TorchSeg"
"NVIDIA/semantic-segmentation" -> "mcordts/cityscapesScripts"
"NVIDIA/semantic-segmentation" -> "junfu1115/DANet"
"NVIDIA/semantic-segmentation" -> "hszhao/semseg"
"NVIDIA/semantic-segmentation" -> "openseg-group/OCNet.pytorch"
"NVIDIA/semantic-segmentation" -> "zhanghang1989/PyTorch-Encoding"
"NVIDIA/semantic-segmentation" -> "speedinghzl/CCNet"
"NVIDIA/semantic-segmentation" -> "LikeLy-Journey/SegmenTron"
"NVIDIA/semantic-segmentation" -> "bowenc0221/panoptic-deeplab"
"NVIDIA/semantic-segmentation" -> "DeepSceneSeg/EfficientPS"
"NVIDIA/semantic-segmentation" -> "Tramac/awesome-semantic-segmentation-pytorch"
"NVIDIA/semantic-segmentation" -> "CSAILVision/semantic-segmentation-pytorch"
"CSAILVision/semantic-segmentation-pytorch" -> "meetps/pytorch-semseg"
"CSAILVision/semantic-segmentation-pytorch" -> "mrgloom/awesome-semantic-segmentation" ["e"=1]
"CSAILVision/semantic-segmentation-pytorch" -> "zijundeng/pytorch-semantic-segmentation"
"CSAILVision/semantic-segmentation-pytorch" -> "HRNet/HRNet-Semantic-Segmentation"
"CSAILVision/semantic-segmentation-pytorch" -> "Tramac/awesome-semantic-segmentation-pytorch"
"CSAILVision/semantic-segmentation-pytorch" -> "jfzhang95/pytorch-deeplab-xception"
"CSAILVision/semantic-segmentation-pytorch" -> "facebookresearch/maskrcnn-benchmark" ["e"=1]
"CSAILVision/semantic-segmentation-pytorch" -> "zhanghang1989/PyTorch-Encoding"
"CSAILVision/semantic-segmentation-pytorch" -> "Cadene/pretrained-models.pytorch" ["e"=1]
"CSAILVision/semantic-segmentation-pytorch" -> "roytseng-tw/Detectron.pytorch" ["e"=1]
"CSAILVision/semantic-segmentation-pytorch" -> "yu-changqian/TorchSeg"
"CSAILVision/semantic-segmentation-pytorch" -> "qubvel-org/segmentation_models.pytorch" ["e"=1]
"CSAILVision/semantic-segmentation-pytorch" -> "junfu1115/DANet"
"CSAILVision/semantic-segmentation-pytorch" -> "GeorgeSeif/Semantic-Segmentation-Suite"
"CSAILVision/semantic-segmentation-pytorch" -> "jwyang/faster-rcnn.pytorch" ["e"=1]
"hellochick/PSPNet-tensorflow" -> "Vladkryvoruchko/PSPNet-Keras-tensorflow"
"hellochick/PSPNet-tensorflow" -> "holyseven/PSPNet-TF-Reproduce"
"hellochick/PSPNet-tensorflow" -> "hellochick/ICNet-tensorflow"
"hellochick/PSPNet-tensorflow" -> "hszhao/PSPNet"
"hellochick/PSPNet-tensorflow" -> "rishizek/tensorflow-deeplab-v3"
"hellochick/PSPNet-tensorflow" -> "rishizek/tensorflow-deeplab-v3-plus"
"hellochick/PSPNet-tensorflow" -> "DrSleep/tensorflow-deeplab-resnet"
"hellochick/PSPNet-tensorflow" -> "hellochick/semantic-segmentation-tensorflow"
"hellochick/PSPNet-tensorflow" -> "hszhao/ICNet"
"hellochick/PSPNet-tensorflow" -> "fregu856/segmentation"
"hellochick/PSPNet-tensorflow" -> "tkuanlun350/Tensorflow-SegNet"
"hellochick/PSPNet-tensorflow" -> "eragonruan/refinenet-image-segmentation"
"hellochick/PSPNet-tensorflow" -> "MSiam/TFSegmentation"
"hellochick/PSPNet-tensorflow" -> "shekkizh/FCN.tensorflow"
"hellochick/PSPNet-tensorflow" -> "Lextal/pspnet-pytorch"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "xavysp/DexiNed"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "pkuCactus/BDCN"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "meteorshowers/RCF-pytorch"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "hellozhuo/pidinet"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "s9xie/hed"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "pdollar/edges"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "yun-liu/RCF"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "MengyangPu/EDTER"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "nv-tlabs/STEAL"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "Lavender105/DFF"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "sniklaus/pytorch-hed"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "GuHuangAI/DiffusionEdge"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "xwjabc/hed"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "Tramac/awesome-semantic-segmentation-pytorch"
"MarkMoHR/Awesome-Edge-Detection-Papers" -> "moabitcoin/holy-edge"
"AlexHex7/Non-local_pytorch" -> "facebookresearch/video-nonlocal-net" ["e"=1]
"AlexHex7/Non-local_pytorch" -> "xvjiarui/GCNet"
"AlexHex7/Non-local_pytorch" -> "speedinghzl/CCNet"
"AlexHex7/Non-local_pytorch" -> "junfu1115/DANet"
"AlexHex7/Non-local_pytorch" -> "moskomule/senet.pytorch"
"AlexHex7/Non-local_pytorch" -> "mit-han-lab/temporal-shift-module" ["e"=1]
"AlexHex7/Non-local_pytorch" -> "yjxiong/tsn-pytorch" ["e"=1]
"AlexHex7/Non-local_pytorch" -> "zhoubolei/TRN-pytorch" ["e"=1]
"AlexHex7/Non-local_pytorch" -> "zhanghang1989/PyTorch-Encoding"
"AlexHex7/Non-local_pytorch" -> "msracver/Deformable-ConvNets" ["e"=1]
"AlexHex7/Non-local_pytorch" -> "chengdazhi/Deformable-Convolution-V2-PyTorch" ["e"=1]
"AlexHex7/Non-local_pytorch" -> "openseg-group/OCNet.pytorch"
"AlexHex7/Non-local_pytorch" -> "Jongchan/attention-module"
"AlexHex7/Non-local_pytorch" -> "luuuyi/CBAM.PyTorch"
"AlexHex7/Non-local_pytorch" -> "tea1528/Non-Local-NN-Pytorch"
"YudeWang/deeplabv3plus-pytorch" -> "jfzhang95/pytorch-deeplab-xception"
"YudeWang/deeplabv3plus-pytorch" -> "speedinghzl/pytorch-segmentation-toolbox"
"YudeWang/deeplabv3plus-pytorch" -> "fregu856/deeplabv3"
"YudeWang/deeplabv3plus-pytorch" -> "kazuto1011/deeplab-pytorch"
"YudeWang/deeplabv3plus-pytorch" -> "yu-changqian/TorchSeg"
"YudeWang/deeplabv3plus-pytorch" -> "hualin95/Deeplab-v3plus"
"YudeWang/deeplabv3plus-pytorch" -> "zhanghang1989/PyTorch-Encoding"
"YudeWang/deeplabv3plus-pytorch" -> "nyoki-mtl/pytorch-segmentation"
"YudeWang/deeplabv3plus-pytorch" -> "rishizek/tensorflow-deeplab-v3-plus"
"YudeWang/deeplabv3plus-pytorch" -> "CoinCheung/DeepLab-v3-plus-cityscapes"
"YudeWang/deeplabv3plus-pytorch" -> "Tramac/awesome-semantic-segmentation-pytorch"
"YudeWang/deeplabv3plus-pytorch" -> "openseg-group/OCNet.pytorch"
"YudeWang/deeplabv3plus-pytorch" -> "VainF/DeepLabV3Plus-Pytorch"
"YudeWang/deeplabv3plus-pytorch" -> "HRNet/HRNet-Semantic-Segmentation"
"YudeWang/deeplabv3plus-pytorch" -> "junfu1115/DANet"
"Angzz/awesome-panoptic-segmentation" -> "uber-research/UPSNet"
"Angzz/awesome-panoptic-segmentation" -> "cocodataset/panopticapi"
"Angzz/awesome-panoptic-segmentation" -> "mapillary/seamseg"
"Angzz/awesome-panoptic-segmentation" -> "qizhuli/Weakly-Supervised-Panoptic-Segmentation"
"Angzz/awesome-panoptic-segmentation" -> "bowenc0221/panoptic-deeplab"
"Angzz/awesome-panoptic-segmentation" -> "wutianyiRosun/Segmentation.X"
"Angzz/awesome-panoptic-segmentation" -> "LaoYang1994/SOGNet"
"Angzz/awesome-panoptic-segmentation" -> "lingtengqiu/Deeperlab-pytorch" ["e"=1]
"Angzz/awesome-panoptic-segmentation" -> "SamsungLabs/adaptis"
"Angzz/awesome-panoptic-segmentation" -> "dvlab-research/PanopticFCN"
"Angzz/awesome-panoptic-segmentation" -> "DeepSceneSeg/EfficientPS"
"Angzz/awesome-panoptic-segmentation" -> "mcahny/vps"
"Angzz/awesome-panoptic-segmentation" -> "LaoYang1994/PanopticSegmentation"
"Angzz/awesome-panoptic-segmentation" -> "Angzz/panoptic-fpn-gluon"
"Angzz/awesome-panoptic-segmentation" -> "speedinghzl/pytorch-segmentation-toolbox"
"mapillary/seamseg" -> "uber-research/UPSNet"
"mapillary/seamseg" -> "Angzz/awesome-panoptic-segmentation"
"mapillary/seamseg" -> "DeepSceneSeg/EfficientPS"
"mapillary/seamseg" -> "SamsungLabs/adaptis"
"mapillary/seamseg" -> "LaoYang1994/SOGNet"
"mapillary/seamseg" -> "cocodataset/panopticapi"
"rishizek/tensorflow-deeplab-v3" -> "rishizek/tensorflow-deeplab-v3-plus"
"rishizek/tensorflow-deeplab-v3" -> "sthalles/deeplab_v3"
"rishizek/tensorflow-deeplab-v3" -> "eveningdong/DeepLabV3-Tensorflow"
"rishizek/tensorflow-deeplab-v3" -> "DrSleep/tensorflow-deeplab-resnet"
"rishizek/tensorflow-deeplab-v3" -> "hellochick/PSPNet-tensorflow"
"rishizek/tensorflow-deeplab-v3" -> "bonlime/keras-deeplab-v3-plus"
"rishizek/tensorflow-deeplab-v3" -> "isht7/pytorch-deeplab-resnet"
"endernewton/iter-reason" -> "coderSkyChen/Iterative-Visual-Reasoning.pytorch"
"endernewton/iter-reason" -> "davidmascharka/tbd-nets" ["e"=1]
"endernewton/iter-reason" -> "aimbrain/vqa-project" ["e"=1]
"endernewton/iter-reason" -> "shubhtuls/factored3d" ["e"=1]
"endernewton/iter-reason" -> "choasup/SIN"
"xvjiarui/GCNet" -> "AlexHex7/Non-local_pytorch"
"xvjiarui/GCNet" -> "junfu1115/DANet"
"xvjiarui/GCNet" -> "speedinghzl/CCNet"
"xvjiarui/GCNet" -> "implus/PytorchInsight"
"xvjiarui/GCNet" -> "facebookresearch/video-nonlocal-net" ["e"=1]
"xvjiarui/GCNet" -> "openseg-group/OCNet.pytorch"
"xvjiarui/GCNet" -> "BangguWu/ECANet"
"xvjiarui/GCNet" -> "XiaLiPKU/EMANet"
"xvjiarui/GCNet" -> "Jongchan/attention-module"
"xvjiarui/GCNet" -> "speedinghzl/pytorch-segmentation-toolbox"
"xvjiarui/GCNet" -> "chengdazhi/Deformable-Convolution-V2-PyTorch" ["e"=1]
"xvjiarui/GCNet" -> "zhanghang1989/PyTorch-Encoding"
"xvjiarui/GCNet" -> "openseg-group/openseg.pytorch"
"xvjiarui/GCNet" -> "leaderj1001/Attention-Augmented-Conv2d"
"xvjiarui/GCNet" -> "implus/SKNet"
"DrSleep/refinenet-pytorch" -> "DrSleep/light-weight-refinenet"
"DrSleep/refinenet-pytorch" -> "guosheng/refinenet"
"DrSleep/refinenet-pytorch" -> "thomasjpfan/pytorch_refinenet"
"DrSleep/refinenet-pytorch" -> "markshih91/refinenet_pytorch"
"NVlabs/ssn_superpixels" -> "fuy34/superpixel_fcn"
"NVlabs/ssn_superpixels" -> "wctu/SEAL"
"NVlabs/ssn_superpixels" -> "perrying/ssn-pytorch"
"NVlabs/ssn_superpixels" -> "davidstutz/superpixel-benchmark"
"NVlabs/ssn_superpixels" -> "CYang0515/pytorch_ssn"
"NVlabs/ssn_superpixels" -> "bermanmaxim/superpixPool"
"NVlabs/ssn_superpixels" -> "laixintao/slic-python-implementation"
"NVlabs/ssn_superpixels" -> "davidstutz/superpixels-revisited"
"NVlabs/ssn_superpixels" -> "zh460045050/LNSNet"
"NVlabs/ssn_superpixels" -> "carlren/gSLICr"
"NVlabs/ssn_superpixels" -> "yun-liu/DEL"
"NVlabs/ssn_superpixels" -> "raghudeep/bilateralinceptions"
"NVlabs/ssn_superpixels" -> "BGU-CS-VIL/BASS"
"NVlabs/ssn_superpixels" -> "Algy/fast-slic"
"NVlabs/ssn_superpixels" -> "MoritzWillig/pysnic"
"joe-siyuan-qiao/WeightStandardization" -> "enyac-group/single-path-nas" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "GothicAi/Instaboost" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "JaminFong/DenseNAS" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "mcahny/vps"
"joe-siyuan-qiao/WeightStandardization" -> "vacancy/Synchronized-BatchNorm-PyTorch"
"joe-siyuan-qiao/WeightStandardization" -> "megvii-model/MABN"
"joe-siyuan-qiao/WeightStandardization" -> "xvjiarui/GCNet"
"joe-siyuan-qiao/WeightStandardization" -> "lxtGH/OctaveConv_pytorch"
"joe-siyuan-qiao/WeightStandardization" -> "joe-siyuan-qiao/DetectoRS" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "JiahuiYu/slimmable_networks" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "LiYingwei/AutoNL" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "joe-siyuan-qiao/Batch-Channel-Normalization"
"joe-siyuan-qiao/WeightStandardization" -> "yuhuixu1993/PC-DARTS" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "switchablenorms/Switchable-Normalization"
"joe-siyuan-qiao/WeightStandardization" -> "kevin-ssy/FishNet"
"karolmajek/Mask_RCNN" -> "karolmajek/darknet-pjreddie"
"karolmajek/Mask_RCNN" -> "markjay4k/Mask-RCNN-series" ["e"=1]
"karolmajek/Mask_RCNN" -> "hszhao/ICNet"
"karolmajek/Mask_RCNN" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"karolmajek/Mask_RCNN" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"karolmajek/Mask_RCNN" -> "fidler-lab/polyrnn-pp"
"karolmajek/Mask_RCNN" -> "diegocavalca/machine-learning"
"karolmajek/Mask_RCNN" -> "hszhao/PSPNet"
"karolmajek/Mask_RCNN" -> "XingangPan/SCNN" ["e"=1]
"karolmajek/Mask_RCNN" -> "AndreiBarsan/DynSLAM" ["e"=1]
"karolmajek/Mask_RCNN" -> "Guanghan/ROLO" ["e"=1]
"karolmajek/Mask_RCNN" -> "aitorzip/Keras-ICNet"
"tea1528/Non-Local-NN-Pytorch" -> "AlexHex7/Non-local_pytorch"
"tea1528/Non-Local-NN-Pytorch" -> "facebookresearch/video-nonlocal-net" ["e"=1]
"tea1528/Non-Local-NN-Pytorch" -> "feiyunzhang/i3d-non-local-pytorch" ["e"=1]
"tea1528/Non-Local-NN-Pytorch" -> "dl19940602/GCnet-pytorch"
"e-lab/pytorch-linknet" -> "e-lab/LinkNet"
"Jongchan/attention-module" -> "luuuyi/CBAM.PyTorch"
"Jongchan/attention-module" -> "junfu1115/DANet"
"Jongchan/attention-module" -> "moskomule/senet.pytorch"
"Jongchan/attention-module" -> "BangguWu/ECANet"
"Jongchan/attention-module" -> "xvjiarui/GCNet"
"Jongchan/attention-module" -> "AlexHex7/Non-local_pytorch"
"Jongchan/attention-module" -> "houqb/CoordAttention"
"Jongchan/attention-module" -> "zhanghang1989/ResNeSt" ["e"=1]
"Jongchan/attention-module" -> "heykeetae/Self-Attention-GAN" ["e"=1]
"Jongchan/attention-module" -> "tengshaofeng/ResidualAttentionNetwork-pytorch"
"Jongchan/attention-module" -> "jacobgil/pytorch-grad-cam" ["e"=1]
"Jongchan/attention-module" -> "ozan-oktay/Attention-Gated-Networks" ["e"=1]
"Jongchan/attention-module" -> "speedinghzl/CCNet"
"Jongchan/attention-module" -> "hujie-frank/SENet" ["e"=1]
"Jongchan/attention-module" -> "leaderj1001/Attention-Augmented-Conv2d"
"Tramac/awesome-semantic-segmentation-pytorch" -> "mrgloom/awesome-semantic-segmentation" ["e"=1]
"Tramac/awesome-semantic-segmentation-pytorch" -> "HRNet/HRNet-Semantic-Segmentation"
"Tramac/awesome-semantic-segmentation-pytorch" -> "jfzhang95/pytorch-deeplab-xception"
"Tramac/awesome-semantic-segmentation-pytorch" -> "meetps/pytorch-semseg"
"Tramac/awesome-semantic-segmentation-pytorch" -> "zijundeng/pytorch-semantic-segmentation"
"Tramac/awesome-semantic-segmentation-pytorch" -> "junfu1115/DANet"
"Tramac/awesome-semantic-segmentation-pytorch" -> "CSAILVision/semantic-segmentation-pytorch"
"Tramac/awesome-semantic-segmentation-pytorch" -> "hszhao/semseg"
"Tramac/awesome-semantic-segmentation-pytorch" -> "yassouali/pytorch-segmentation"
"Tramac/awesome-semantic-segmentation-pytorch" -> "yu-changqian/TorchSeg"
"Tramac/awesome-semantic-segmentation-pytorch" -> "LikeLy-Journey/SegmenTron"
"Tramac/awesome-semantic-segmentation-pytorch" -> "CoinCheung/BiSeNet"
"Tramac/awesome-semantic-segmentation-pytorch" -> "open-mmlab/mmsegmentation" ["e"=1]
"Tramac/awesome-semantic-segmentation-pytorch" -> "VainF/DeepLabV3Plus-Pytorch"
"Tramac/awesome-semantic-segmentation-pytorch" -> "zhanghang1989/PyTorch-Encoding"
"fidler-lab/curve-gcn" -> "fidler-lab/polyrnn-pp-pytorch"
"fidler-lab/curve-gcn" -> "fidler-lab/polyrnn-pp"
"fidler-lab/curve-gcn" -> "zju3dv/snake" ["e"=1]
"fidler-lab/curve-gcn" -> "dmarcosg/DSAC"
"fidler-lab/curve-gcn" -> "megvii-research/ML-GCN" ["e"=1]
"fidler-lab/curve-gcn" -> "scaelles/DEXTR-PyTorch"
"fidler-lab/curve-gcn" -> "mng827/curve-gcn-cardiac-mr"
"fidler-lab/curve-gcn" -> "openseg-group/OCNet.pytorch"
"fidler-lab/curve-gcn" -> "xieenze/PolarMask" ["e"=1]
"fidler-lab/curve-gcn" -> "nv-tlabs/STEAL"
"fidler-lab/curve-gcn" -> "AlexMa011/pytorch-polygon-rnn"
"fidler-lab/curve-gcn" -> "openseg-group/openseg.pytorch"
"fidler-lab/curve-gcn" -> "fidler-lab/defgrid-release"
"fidler-lab/curve-gcn" -> "zhanghang1989/PyTorch-Encoding"
"fidler-lab/curve-gcn" -> "xiaolonw/TimeCycle" ["e"=1]
"pkuCactus/BDCN" -> "meteorshowers/RCF-pytorch"
"pkuCactus/BDCN" -> "xavysp/DexiNed"
"pkuCactus/BDCN" -> "yun-liu/RCF"
"pkuCactus/BDCN" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"pkuCactus/BDCN" -> "nv-tlabs/STEAL"
"pkuCactus/BDCN" -> "hellozhuo/pidinet"
"pkuCactus/BDCN" -> "MengyangPu/EDTER"
"pkuCactus/BDCN" -> "Lavender105/DFF"
"pkuCactus/BDCN" -> "anirudh-chakravarthy/CASENet"
"pkuCactus/BDCN" -> "sniklaus/pytorch-hed"
"pkuCactus/BDCN" -> "WHUHLX/CATS"
"pkuCactus/BDCN" -> "xwjabc/hed"
"pkuCactus/BDCN" -> "meteorshowers/hed"
"pkuCactus/BDCN" -> "xavysp/LDC"
"pkuCactus/BDCN" -> "mayorx/rcf-edge-detection"
"Tramac/Fast-SCNN-pytorch" -> "DeepVoltaire/Fast-SCNN"
"Tramac/Fast-SCNN-pytorch" -> "huaifeng1993/DFANet"
"Tramac/Fast-SCNN-pytorch" -> "orsic/swiftnet"
"Tramac/Fast-SCNN-pytorch" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"Tramac/Fast-SCNN-pytorch" -> "xiaoyufenfei/LEDNet"
"Tramac/Fast-SCNN-pytorch" -> "Eromera/erfnet_pytorch"
"Tramac/Fast-SCNN-pytorch" -> "VITA-Group/FasterSeg"
"Tramac/Fast-SCNN-pytorch" -> "ooooverflow/BiSeNet"
"Tramac/Fast-SCNN-pytorch" -> "wutianyiRosun/CGNet"
"Tramac/Fast-SCNN-pytorch" -> "CoinCheung/BiSeNet"
"Tramac/Fast-SCNN-pytorch" -> "PingoLH/FCHarDNet"
"Tramac/Fast-SCNN-pytorch" -> "juntang-zhuang/ShelfNet"
"Tramac/Fast-SCNN-pytorch" -> "uber-research/UPSNet"
"Tramac/Fast-SCNN-pytorch" -> "Reagan1311/DABNet"
"Tramac/Fast-SCNN-pytorch" -> "Tramac/mobilenetv3-segmentation"
"Res2Net/Res2Net-PretrainedModels" -> "zhanghang1989/ResNeSt" ["e"=1]
"Res2Net/Res2Net-PretrainedModels" -> "lessw2020/res2net-plus"
"Res2Net/Res2Net-PretrainedModels" -> "BangguWu/ECANet"
"Res2Net/Res2Net-PretrainedModels" -> "xvjiarui/GCNet"
"Res2Net/Res2Net-PretrainedModels" -> "DingXiaoH/ACNet"
"Res2Net/Res2Net-PretrainedModels" -> "4uiiurz1/pytorch-res2net"
"Res2Net/Res2Net-PretrainedModels" -> "junfu1115/DANet"
"Res2Net/Res2Net-PretrainedModels" -> "speedinghzl/CCNet"
"Res2Net/Res2Net-PretrainedModels" -> "houqb/CoordAttention"
"Res2Net/Res2Net-PretrainedModels" -> "megvii-model/ShuffleNet-Series" ["e"=1]
"Res2Net/Res2Net-PretrainedModels" -> "vacancy/Synchronized-BatchNorm-PyTorch"
"Res2Net/Res2Net-PretrainedModels" -> "implus/PytorchInsight"
"Res2Net/Res2Net-PretrainedModels" -> "HRNet/HRNet-Image-Classification"
"Res2Net/Res2Net-PretrainedModels" -> "AlexHex7/Non-local_pytorch"
"Res2Net/Res2Net-PretrainedModels" -> "implus/GFocal" ["e"=1]
"jfzhang95/LSTM-water-table-depth-prediction" -> "ZVsion/rgbd_image_segmentation"
"jfzhang95/LSTM-water-table-depth-prediction" -> "jfzhang95/Water-Table-Depth-Prediction-PyTorch"
"jfzhang95/LSTM-water-table-depth-prediction" -> "jfzhang95/project-demo"
"HRNet/HRNet-Image-Classification" -> "HRNet/HRNet-Object-Detection" ["e"=1]
"HRNet/HRNet-Image-Classification" -> "HRNet/HRNet-Semantic-Segmentation"
"HRNet/HRNet-Image-Classification" -> "HRNet/HRNet-Facial-Landmark-Detection" ["e"=1]
"HRNet/HRNet-Image-Classification" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"HRNet/HRNet-Image-Classification" -> "HRNet/HigherHRNet-Human-Pose-Estimation" ["e"=1]
"HRNet/HRNet-Image-Classification" -> "HRNet/Lite-HRNet" ["e"=1]
"HRNet/HRNet-Image-Classification" -> "zhanghang1989/ResNeSt" ["e"=1]
"HRNet/HRNet-Image-Classification" -> "openseg-group/openseg.pytorch"
"HRNet/HRNet-Image-Classification" -> "Res2Net/Res2Net-PretrainedModels"
"HRNet/HRNet-Image-Classification" -> "microsoft/human-pose-estimation.pytorch" ["e"=1]
"HRNet/HRNet-Image-Classification" -> "xvjiarui/GCNet"
"HRNet/HRNet-Image-Classification" -> "Duankaiwen/CenterNet" ["e"=1]
"HRNet/HRNet-Image-Classification" -> "junfu1115/DANet"
"HRNet/HRNet-Image-Classification" -> "stefanopini/simple-HRNet" ["e"=1]
"HRNet/HRNet-Image-Classification" -> "mapillary/inplace_abn"
"thomasjpfan/pytorch_refinenet" -> "markshih91/refinenet_pytorch"
"thomasjpfan/pytorch_refinenet" -> "DrSleep/refinenet-pytorch"
"thomasjpfan/pytorch_refinenet" -> "DrSleep/light-weight-refinenet"
"thomasjpfan/pytorch_refinenet" -> "eragonruan/refinenet-image-segmentation"
"thomasjpfan/pytorch_refinenet" -> "guosheng/refinenet"
"switchablenorms/Switchable-Normalization" -> "XingangPan/IBN-Net" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "oeway/pytorch-deform-conv" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "vacancy/Synchronized-BatchNorm-PyTorch"
"switchablenorms/Switchable-Normalization" -> "lxtGH/OctaveConv_pytorch"
"switchablenorms/Switchable-Normalization" -> "switchablenorms/SwitchNorm_Detection"
"switchablenorms/Switchable-Normalization" -> "kevin-ssy/FishNet"
"switchablenorms/Switchable-Normalization" -> "mapillary/inplace_abn"
"switchablenorms/Switchable-Normalization" -> "switchablenorms/SwitchNorm_Segmentation"
"switchablenorms/Switchable-Normalization" -> "openseg-group/OCNet.pytorch"
"switchablenorms/Switchable-Normalization" -> "libuyu/GHM_Detection" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "enyac-group/single-path-nas" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "JiaminRen/RandWireNN" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "joe-siyuan-qiao/WeightStandardization"
"switchablenorms/Switchable-Normalization" -> "roytseng-tw/Detectron.pytorch" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "switchablenorms/Sparse_SwitchNorm"
"bonlime/keras-deeplab-v3-plus" -> "rishizek/tensorflow-deeplab-v3-plus"
"bonlime/keras-deeplab-v3-plus" -> "Golbstein/Keras-segmentation-deeplab-v3.1"
"bonlime/keras-deeplab-v3-plus" -> "sthalles/deeplab_v3"
"bonlime/keras-deeplab-v3-plus" -> "divamgupta/image-segmentation-keras" ["e"=1]
"bonlime/keras-deeplab-v3-plus" -> "qubvel/segmentation_models" ["e"=1]
"bonlime/keras-deeplab-v3-plus" -> "aurora95/Keras-FCN"
"bonlime/keras-deeplab-v3-plus" -> "jfzhang95/pytorch-deeplab-xception"
"bonlime/keras-deeplab-v3-plus" -> "YudeWang/deeplabv3plus-pytorch"
"bonlime/keras-deeplab-v3-plus" -> "rishizek/tensorflow-deeplab-v3"
"bonlime/keras-deeplab-v3-plus" -> "GeorgeSeif/Semantic-Segmentation-Suite"
"bonlime/keras-deeplab-v3-plus" -> "Vladkryvoruchko/PSPNet-Keras-tensorflow"
"bonlime/keras-deeplab-v3-plus" -> "sadeepj/crfasrnn_keras"
"bonlime/keras-deeplab-v3-plus" -> "qubvel/classification_models" ["e"=1]
"bonlime/keras-deeplab-v3-plus" -> "zhixuhao/unet" ["e"=1]
"bonlime/keras-deeplab-v3-plus" -> "DrSleep/tensorflow-deeplab-resnet"
"zhuangyqin/DRN" -> "tonysy/DRN-MXNet"
"XiaLiPKU/EMANet" -> "speedinghzl/CCNet"
"XiaLiPKU/EMANet" -> "openseg-group/OCNet.pytorch"
"XiaLiPKU/EMANet" -> "MendelXu/ANN"
"XiaLiPKU/EMANet" -> "yu-changqian/TorchSeg"
"XiaLiPKU/EMANet" -> "junfu1115/DANet"
"XiaLiPKU/EMANet" -> "LinZhuoChen/DUpsampling"
"XiaLiPKU/EMANet" -> "xvjiarui/GCNet"
"XiaLiPKU/EMANet" -> "openseg-group/openseg.pytorch"
"XiaLiPKU/EMANet" -> "nv-tlabs/GSCNN"
"XiaLiPKU/EMANet" -> "zhanghang1989/PyTorch-Encoding"
"XiaLiPKU/EMANet" -> "speedinghzl/pytorch-segmentation-toolbox"
"XiaLiPKU/EMANet" -> "hszhao/semseg"
"XiaLiPKU/EMANet" -> "wuhuikai/FastFCN"
"XiaLiPKU/EMANet" -> "Megvii-BaseDetection/DynamicRouting"
"XiaLiPKU/EMANet" -> "lxtGH/GALD-DGCNet"
"facebookresearch/OctConv" -> "d-li14/octconv.pytorch"
"facebookresearch/OctConv" -> "terrychenism/OctaveConv"
"facebookresearch/OctConv" -> "lxtGH/OctaveConv_pytorch"
"facebookresearch/OctConv" -> "iacolippo/octconv-pytorch"
"facebookresearch/OctConv" -> "koshian2/OctConv-TFKeras"
"facebookresearch/OctConv" -> "cypw/DPNs" ["e"=1]
"facebookresearch/OctConv" -> "THUFutureLab/gluon-face" ["e"=1]
"hellochick/ICNet-tensorflow" -> "hszhao/ICNet"
"hellochick/ICNet-tensorflow" -> "oandrienko/fast-semantic-segmentation"
"hellochick/ICNet-tensorflow" -> "MSiam/TFSegmentation"
"hellochick/ICNet-tensorflow" -> "hellochick/PSPNet-tensorflow"
"hellochick/ICNet-tensorflow" -> "hellochick/semantic-segmentation-tensorflow"
"hellochick/ICNet-tensorflow" -> "fregu856/segmentation"
"hellochick/ICNet-tensorflow" -> "TimoSaemann/ENet"
"hellochick/ICNet-tensorflow" -> "aitorzip/Keras-ICNet"
"hellochick/ICNet-tensorflow" -> "kwotsin/TensorFlow-ENet"
"hellochick/ICNet-tensorflow" -> "linksense/LightNet"
"hellochick/ICNet-tensorflow" -> "Vladkryvoruchko/PSPNet-Keras-tensorflow"
"hellochick/ICNet-tensorflow" -> "DrSleep/tensorflow-deeplab-resnet"
"hellochick/ICNet-tensorflow" -> "yu-changqian/TorchSeg"
"hellochick/ICNet-tensorflow" -> "e-lab/ENet-training"
"hellochick/ICNet-tensorflow" -> "hszhao/PSPNet"
"lxtGH/OctaveConv_pytorch" -> "d-li14/octconv.pytorch"
"lxtGH/OctaveConv_pytorch" -> "terrychenism/OctaveConv"
"lxtGH/OctaveConv_pytorch" -> "facebookresearch/OctConv"
"lxtGH/OctaveConv_pytorch" -> "iacolippo/octconv-pytorch"
"lxtGH/OctaveConv_pytorch" -> "implus/PytorchInsight"
"lxtGH/OctaveConv_pytorch" -> "gan3sh500/octaveconv-pytorch"
"lxtGH/OctaveConv_pytorch" -> "switchablenorms/Switchable-Normalization"
"lxtGH/OctaveConv_pytorch" -> "xvjiarui/GCNet"
"lxtGH/OctaveConv_pytorch" -> "implus/SKNet"
"lxtGH/OctaveConv_pytorch" -> "JiahuiYu/slimmable_networks" ["e"=1]
"lxtGH/OctaveConv_pytorch" -> "StacyYang/gluoncv-torch"
"lxtGH/OctaveConv_pytorch" -> "joe-siyuan-qiao/WeightStandardization"
"lxtGH/OctaveConv_pytorch" -> "kevin-ssy/FishNet"
"Eromera/erfnet_pytorch" -> "Eromera/erfnet"
"Eromera/erfnet_pytorch" -> "sacmehta/ESPNet"
"Eromera/erfnet_pytorch" -> "hszhao/ICNet"
"Eromera/erfnet_pytorch" -> "linksense/LightNet"
"Eromera/erfnet_pytorch" -> "wutianyiRosun/CGNet"
"Eromera/erfnet_pytorch" -> "juntang-zhuang/ShelfNet"
"Eromera/erfnet_pytorch" -> "Tramac/Fast-SCNN-pytorch"
"Eromera/erfnet_pytorch" -> "TuSimple/TuSimple-DUC"
"Eromera/erfnet_pytorch" -> "cardwing/Codes-for-IntRA-KD" ["e"=1]
"Eromera/erfnet_pytorch" -> "itijyou/ademxapp"
"Eromera/erfnet_pytorch" -> "cardwing/Codes-for-Lane-Detection" ["e"=1]
"Eromera/erfnet_pytorch" -> "openseg-group/OCNet.pytorch"
"Eromera/erfnet_pytorch" -> "orsic/swiftnet"
"Eromera/erfnet_pytorch" -> "ucbdrive/bdd100k" ["e"=1]
"Eromera/erfnet_pytorch" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"bermanmaxim/LovaszSoftmax" -> "openseg-group/OCNet.pytorch"
"bermanmaxim/LovaszSoftmax" -> "yu-changqian/TorchSeg"
"bermanmaxim/LovaszSoftmax" -> "zhanghang1989/PyTorch-Encoding"
"bermanmaxim/LovaszSoftmax" -> "speedinghzl/CCNet"
"bermanmaxim/LovaszSoftmax" -> "mapillary/inplace_abn"
"bermanmaxim/LovaszSoftmax" -> "jfzhang95/pytorch-deeplab-xception"
"bermanmaxim/LovaszSoftmax" -> "speedinghzl/pytorch-segmentation-toolbox"
"bermanmaxim/LovaszSoftmax" -> "liaopeiyuan/kaggle-solutions" ["e"=1]
"bermanmaxim/LovaszSoftmax" -> "openseg-group/openseg.pytorch"
"bermanmaxim/LovaszSoftmax" -> "junfu1115/DANet"
"bermanmaxim/LovaszSoftmax" -> "HRNet/HRNet-Semantic-Segmentation"
"bermanmaxim/LovaszSoftmax" -> "JunMa11/SegLossOdyssey" ["e"=1]
"bermanmaxim/LovaszSoftmax" -> "meetps/pytorch-semseg"
"bermanmaxim/LovaszSoftmax" -> "lucasb-eyer/pydensecrf"
"bermanmaxim/LovaszSoftmax" -> "ShawnBIT/UNet-family" ["e"=1]
"linksense/LightNet" -> "linksense/LightNetPlusPlus"
"linksense/LightNet" -> "yu-changqian/TorchSeg"
"linksense/LightNet" -> "MSiam/TFSegmentation"
"linksense/LightNet" -> "speedinghzl/pytorch-segmentation-toolbox"
"linksense/LightNet" -> "openseg-group/OCNet.pytorch"
"linksense/LightNet" -> "zhanghang1989/PyTorch-Encoding"
"linksense/LightNet" -> "sacmehta/ESPNet"
"linksense/LightNet" -> "zijundeng/pytorch-semantic-segmentation"
"linksense/LightNet" -> "MarvinTeichmann/ConvCRF"
"linksense/LightNet" -> "mapillary/inplace_abn"
"linksense/LightNet" -> "Eromera/erfnet_pytorch"
"linksense/LightNet" -> "DrSleep/light-weight-refinenet"
"linksense/LightNet" -> "DeepMotionAIResearch/DenseASPP"
"linksense/LightNet" -> "hellochick/ICNet-tensorflow"
"linksense/LightNet" -> "zym1119/DeepLabv3_MobileNetv2_PyTorch"
"CSAILVision/unifiedparsing" -> "openseg-group/OCNet.pytorch"
"openseg-group/OCNet.pytorch" -> "openseg-group/openseg.pytorch"
"openseg-group/OCNet.pytorch" -> "speedinghzl/CCNet"
"openseg-group/OCNet.pytorch" -> "speedinghzl/pytorch-segmentation-toolbox"
"openseg-group/OCNet.pytorch" -> "yu-changqian/TorchSeg"
"openseg-group/OCNet.pytorch" -> "junfu1115/DANet"
"openseg-group/OCNet.pytorch" -> "mapillary/inplace_abn"
"openseg-group/OCNet.pytorch" -> "zhanghang1989/PyTorch-Encoding"
"openseg-group/OCNet.pytorch" -> "XiaLiPKU/EMANet"
"openseg-group/OCNet.pytorch" -> "DeepMotionAIResearch/DenseASPP"
"openseg-group/OCNet.pytorch" -> "xvjiarui/GCNet"
"openseg-group/OCNet.pytorch" -> "bermanmaxim/LovaszSoftmax"
"openseg-group/OCNet.pytorch" -> "wuhuikai/FastFCN"
"openseg-group/OCNet.pytorch" -> "HRNet/HRNet-Semantic-Segmentation"
"openseg-group/OCNet.pytorch" -> "hszhao/semseg"
"openseg-group/OCNet.pytorch" -> "hszhao/PSANet"
"hszhao/semseg" -> "hszhao/PSPNet"
"hszhao/semseg" -> "yu-changqian/TorchSeg"
"hszhao/semseg" -> "speedinghzl/pytorch-segmentation-toolbox"
"hszhao/semseg" -> "openseg-group/openseg.pytorch"
"hszhao/semseg" -> "Tramac/awesome-semantic-segmentation-pytorch"
"hszhao/semseg" -> "zhanghang1989/PyTorch-Encoding"
"hszhao/semseg" -> "junfu1115/DANet"
"hszhao/semseg" -> "meetps/pytorch-semseg"
"hszhao/semseg" -> "openseg-group/OCNet.pytorch"
"hszhao/semseg" -> "speedinghzl/CCNet"
"hszhao/semseg" -> "jfzhang95/pytorch-deeplab-xception"
"hszhao/semseg" -> "HRNet/HRNet-Semantic-Segmentation"
"hszhao/semseg" -> "NVIDIA/semantic-segmentation"
"hszhao/semseg" -> "zijundeng/pytorch-semantic-segmentation"
"hszhao/semseg" -> "XiaLiPKU/EMANet"
"openseg-group/openseg.pytorch" -> "openseg-group/OCNet.pytorch"
"openseg-group/openseg.pytorch" -> "HRNet/HRNet-Semantic-Segmentation"
"openseg-group/openseg.pytorch" -> "NVIDIA/semantic-segmentation"
"openseg-group/openseg.pytorch" -> "speedinghzl/pytorch-segmentation-toolbox"
"openseg-group/openseg.pytorch" -> "yu-changqian/TorchSeg"
"openseg-group/openseg.pytorch" -> "hszhao/semseg"
"openseg-group/openseg.pytorch" -> "speedinghzl/CCNet"
"openseg-group/openseg.pytorch" -> "nv-tlabs/GSCNN"
"openseg-group/openseg.pytorch" -> "mapillary/inplace_abn"
"openseg-group/openseg.pytorch" -> "lxtGH/DecoupleSegNets"
"openseg-group/openseg.pytorch" -> "junfu1115/DANet"
"openseg-group/openseg.pytorch" -> "XiaLiPKU/EMANet"
"openseg-group/openseg.pytorch" -> "LikeLy-Journey/SegmenTron"
"openseg-group/openseg.pytorch" -> "mcordts/cityscapesScripts"
"openseg-group/openseg.pytorch" -> "lxtGH/GALD-DGCNet"
"uber-research/UPSNet" -> "Angzz/awesome-panoptic-segmentation"
"uber-research/UPSNet" -> "cocodataset/panopticapi"
"uber-research/UPSNet" -> "bowenc0221/panoptic-deeplab"
"uber-research/UPSNet" -> "mapillary/seamseg"
"uber-research/UPSNet" -> "dvlab-research/PanopticFCN"
"uber-research/UPSNet" -> "qizhuli/Weakly-Supervised-Panoptic-Segmentation"
"uber-research/UPSNet" -> "DeepSceneSeg/EfficientPS"
"uber-research/UPSNet" -> "wutianyiRosun/Segmentation.X"
"uber-research/UPSNet" -> "speedinghzl/pytorch-segmentation-toolbox"
"uber-research/UPSNet" -> "xieenze/PolarMask" ["e"=1]
"uber-research/UPSNet" -> "SamsungLabs/adaptis"
"uber-research/UPSNet" -> "zjhuang22/maskscoring_rcnn" ["e"=1]
"uber-research/UPSNet" -> "ShuLiu1993/PANet" ["e"=1]
"uber-research/UPSNet" -> "openseg-group/openseg.pytorch"
"uber-research/UPSNet" -> "mcahny/vps"
"nv-tlabs/GSCNN" -> "lxtGH/DecoupleSegNets"
"nv-tlabs/GSCNN" -> "NVIDIA/semantic-segmentation"
"nv-tlabs/GSCNN" -> "openseg-group/openseg.pytorch"
"nv-tlabs/GSCNN" -> "wuhuikai/FastFCN"
"nv-tlabs/GSCNN" -> "XiaLiPKU/EMANet"
"nv-tlabs/GSCNN" -> "speedinghzl/pytorch-segmentation-toolbox"
"nv-tlabs/GSCNN" -> "speedinghzl/CCNet"
"nv-tlabs/GSCNN" -> "HRNet/HRNet-Semantic-Segmentation"
"nv-tlabs/GSCNN" -> "nv-tlabs/STEAL"
"nv-tlabs/GSCNN" -> "yu-changqian/TorchSeg"
"nv-tlabs/GSCNN" -> "openseg-group/OCNet.pytorch"
"nv-tlabs/GSCNN" -> "junfu1115/DANet"
"nv-tlabs/GSCNN" -> "hkchengrex/CascadePSP"
"nv-tlabs/GSCNN" -> "zhanghang1989/PyTorch-Encoding"
"nv-tlabs/GSCNN" -> "shachoi/HANet"
"sniklaus/pytorch-hed" -> "meteorshowers/hed"
"sniklaus/pytorch-hed" -> "s9xie/hed"
"sniklaus/pytorch-hed" -> "xwjabc/hed"
"sniklaus/pytorch-hed" -> "meteorshowers/RCF-pytorch"
"sniklaus/pytorch-hed" -> "moabitcoin/holy-edge"
"sniklaus/pytorch-hed" -> "xavysp/DexiNed"
"sniklaus/pytorch-hed" -> "pkuCactus/BDCN"
"sniklaus/pytorch-hed" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"sniklaus/pytorch-hed" -> "yun-liu/RCF"
"sniklaus/pytorch-hed" -> "lc82111/Keras_HED"
"sniklaus/pytorch-hed" -> "JXingZhao/EGNet" ["e"=1]
"sniklaus/pytorch-hed" -> "BinWang-shu/pytorch_hed"
"sniklaus/pytorch-hed" -> "chongruo/pytorch-HED"
"sniklaus/pytorch-hed" -> "DCurro/CannyEdgePytorch"
"sniklaus/pytorch-hed" -> "yun-liu/plot-edge-pr-curves"
"wuhuikai/FastFCN" -> "zhanghang1989/PyTorch-Encoding"
"wuhuikai/FastFCN" -> "yu-changqian/TorchSeg"
"wuhuikai/FastFCN" -> "openseg-group/OCNet.pytorch"
"wuhuikai/FastFCN" -> "nv-tlabs/GSCNN"
"wuhuikai/FastFCN" -> "speedinghzl/pytorch-segmentation-toolbox"
"wuhuikai/FastFCN" -> "LinZhuoChen/DUpsampling"
"wuhuikai/FastFCN" -> "openseg-group/openseg.pytorch"
"wuhuikai/FastFCN" -> "XiaLiPKU/EMANet"
"wuhuikai/FastFCN" -> "speedinghzl/CCNet"
"wuhuikai/FastFCN" -> "wutianyiRosun/Segmentation.X"
"wuhuikai/FastFCN" -> "junfu1115/DANet"
"wuhuikai/FastFCN" -> "xiaoyufenfei/LEDNet"
"wuhuikai/FastFCN" -> "hualin95/Deeplab-v3plus"
"wuhuikai/FastFCN" -> "YudeWang/deeplabv3plus-pytorch"
"wuhuikai/FastFCN" -> "xvjiarui/GCNet"
"moskomule/senet.pytorch" -> "hujie-frank/SENet" ["e"=1]
"moskomule/senet.pytorch" -> "Jongchan/attention-module"
"moskomule/senet.pytorch" -> "luuuyi/CBAM.PyTorch"
"moskomule/senet.pytorch" -> "junfu1115/DANet"
"moskomule/senet.pytorch" -> "AlexHex7/Non-local_pytorch"
"moskomule/senet.pytorch" -> "miraclewkf/SENet-PyTorch"
"moskomule/senet.pytorch" -> "Cadene/pretrained-models.pytorch" ["e"=1]
"moskomule/senet.pytorch" -> "zhanghang1989/ResNeSt" ["e"=1]
"moskomule/senet.pytorch" -> "BangguWu/ECANet"
"moskomule/senet.pytorch" -> "xvjiarui/GCNet"
"moskomule/senet.pytorch" -> "amdegroot/ssd.pytorch" ["e"=1]
"moskomule/senet.pytorch" -> "jfzhang95/pytorch-deeplab-xception"
"moskomule/senet.pytorch" -> "speedinghzl/CCNet"
"moskomule/senet.pytorch" -> "jwyang/faster-rcnn.pytorch" ["e"=1]
"moskomule/senet.pytorch" -> "Lyken17/pytorch-OpCounter" ["e"=1]
"sacmehta/ESPNetv2" -> "sacmehta/EdgeNets"
"sacmehta/ESPNetv2" -> "sacmehta/ESPNet"
"sacmehta/ESPNetv2" -> "wutianyiRosun/CGNet"
"sacmehta/ESPNetv2" -> "xiaoyufenfei/LEDNet"
"sacmehta/ESPNetv2" -> "Reagan1311/DABNet"
"sacmehta/ESPNetv2" -> "wpf535236337/real-time-network"
"sacmehta/ESPNetv2" -> "openseg-group/OCNet.pytorch"
"sacmehta/ESPNetv2" -> "DrSleep/light-weight-refinenet"
"sacmehta/ESPNetv2" -> "ericsun99/Shufflenet-v2-Pytorch" ["e"=1]
"sacmehta/ESPNetv2" -> "imedslab/pytorch_bn_fusion" ["e"=1]
"sacmehta/ESPNetv2" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"sacmehta/ESPNetv2" -> "lxtGH/GALD-DGCNet"
"sacmehta/ESPNetv2" -> "wuhuikai/FastFCN"
"sacmehta/EdgeNets" -> "sacmehta/ESPNetv2"
"sacmehta/EdgeNets" -> "sacmehta/ESPNet"
"sacmehta/EdgeNets" -> "sacmehta/ESPNetv2-COREML" ["e"=1]
"sacmehta/EdgeNets" -> "linksense/LightNet"
"sacmehta/EdgeNets" -> "LinZhuoChen/DUpsampling"
"xavysp/DexiNed" -> "pkuCactus/BDCN"
"xavysp/DexiNed" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"xavysp/DexiNed" -> "meteorshowers/RCF-pytorch"
"xavysp/DexiNed" -> "hellozhuo/pidinet"
"xavysp/DexiNed" -> "MengyangPu/EDTER"
"xavysp/DexiNed" -> "sniklaus/pytorch-hed"
"xavysp/DexiNed" -> "xavysp/LDC"
"xavysp/DexiNed" -> "s9xie/hed"
"xavysp/DexiNed" -> "yun-liu/RCF"
"xavysp/DexiNed" -> "xwjabc/hed"
"xavysp/DexiNed" -> "moabitcoin/holy-edge"
"xavysp/DexiNed" -> "WHUHLX/CATS"
"xavysp/DexiNed" -> "xavysp/TEED"
"xavysp/DexiNed" -> "Lavender105/DFF"
"xavysp/DexiNed" -> "pdollar/edges"
"tangzhenyu/SemanticSegmentation_DL" -> "zijundeng/pytorch-semantic-segmentation"
"tangzhenyu/SemanticSegmentation_DL" -> "DrSleep/tensorflow-deeplab-resnet"
"tangzhenyu/SemanticSegmentation_DL" -> "meetps/pytorch-semseg"
"tangzhenyu/SemanticSegmentation_DL" -> "lucasb-eyer/pydensecrf"
"tangzhenyu/SemanticSegmentation_DL" -> "GeorgeSeif/Semantic-Segmentation-Suite"
"tangzhenyu/SemanticSegmentation_DL" -> "handong1587/handong1587.github.io" ["e"=1]
"tangzhenyu/SemanticSegmentation_DL" -> "zhanghang1989/PyTorch-Encoding"
"tangzhenyu/SemanticSegmentation_DL" -> "JackieZhangdx/WeakSupervisedSegmentationList" ["e"=1]
"tangzhenyu/SemanticSegmentation_DL" -> "msracver/FCIS"
"tangzhenyu/SemanticSegmentation_DL" -> "mrgloom/awesome-semantic-segmentation" ["e"=1]
"tangzhenyu/SemanticSegmentation_DL" -> "CSAILVision/semantic-segmentation-pytorch"
"tangzhenyu/SemanticSegmentation_DL" -> "hszhao/PSPNet"
"tangzhenyu/SemanticSegmentation_DL" -> "openseg-group/OCNet.pytorch"
"tangzhenyu/SemanticSegmentation_DL" -> "mapillary/inplace_abn"
"tangzhenyu/SemanticSegmentation_DL" -> "TuSimple/TuSimple-DUC"
"fyu/drn" -> "fyu/dilation"
"fyu/drn" -> "zijundeng/pytorch-semantic-segmentation"
"fyu/drn" -> "mapillary/inplace_abn"
"fyu/drn" -> "meetps/pytorch-semseg"
"fyu/drn" -> "zhanghang1989/PyTorch-Encoding"
"fyu/drn" -> "kimhc6028/relational-networks" ["e"=1]
"fyu/drn" -> "linksense/LightNet"
"fyu/drn" -> "isht7/pytorch-deeplab-resnet"
"fyu/drn" -> "hszhao/PSPNet"
"fyu/drn" -> "junfu1115/DANet"
"fyu/drn" -> "google/sg2im" ["e"=1]
"fyu/drn" -> "oeway/pytorch-deform-conv" ["e"=1]
"fyu/drn" -> "yu-changqian/pytorch-segmentation"
"fyu/drn" -> "arunmallya/piggyback" ["e"=1]
"fyu/drn" -> "bayesiains/nsf" ["e"=1]
"DeepMotionAIResearch/DenseASPP" -> "openseg-group/OCNet.pytorch"
"DeepMotionAIResearch/DenseASPP" -> "YuhuiMa/DFN-tensorflow"
"DeepMotionAIResearch/DenseASPP" -> "yu-changqian/TorchSeg"
"DeepMotionAIResearch/DenseASPP" -> "sacmehta/ESPNet"
"DeepMotionAIResearch/DenseASPP" -> "speedinghzl/CCNet"
"DeepMotionAIResearch/DenseASPP" -> "linksense/LightNet"
"DeepMotionAIResearch/DenseASPP" -> "lxtGH/GALD-DGCNet"
"DeepMotionAIResearch/DenseASPP" -> "wutianyiRosun/CGNet"
"DeepMotionAIResearch/DenseASPP" -> "zhanghang1989/PyTorch-Encoding"
"DeepMotionAIResearch/DenseASPP" -> "zhuangyqin/DRN"
"DeepMotionAIResearch/DenseASPP" -> "donnyyou/torch-segmentation"
"DeepMotionAIResearch/DenseASPP" -> "XiaLiPKU/EMANet"
"DeepMotionAIResearch/DenseASPP" -> "junfu1115/DANet"
"DeepMotionAIResearch/DenseASPP" -> "speedinghzl/pytorch-segmentation-toolbox"
"DeepMotionAIResearch/DenseASPP" -> "YudeWang/deeplabv3plus-pytorch"
"hualin95/Deeplab-v3plus" -> "YudeWang/deeplabv3plus-pytorch"
"hualin95/Deeplab-v3plus" -> "speedinghzl/pytorch-segmentation-toolbox"
"hualin95/Deeplab-v3plus" -> "jfzhang95/pytorch-deeplab-xception"
"hualin95/Deeplab-v3plus" -> "speedinghzl/Pytorch-Deeplab"
"hualin95/Deeplab-v3plus" -> "isht7/pytorch-deeplab-resnet"
"hualin95/Deeplab-v3plus" -> "wuhuikai/FastFCN"
"hualin95/Deeplab-v3plus" -> "songdejia/DeepLab_v3_plus" ["e"=1]
"hualin95/Deeplab-v3plus" -> "openseg-group/OCNet.pytorch"
"hualin95/Deeplab-v3plus" -> "wutianyiRosun/CGNet"
"hualin95/Deeplab-v3plus" -> "juntang-zhuang/ShelfNet"
"hualin95/Deeplab-v3plus" -> "nyoki-mtl/pytorch-segmentation"
"hualin95/Deeplab-v3plus" -> "gengyanlei/segmentation_pytorch"
"LinZhuoChen/DUpsampling" -> "XiaLiPKU/EMANet"
"LinZhuoChen/DUpsampling" -> "speedinghzl/pytorch-segmentation-toolbox"
"LinZhuoChen/DUpsampling" -> "wuhuikai/FastFCN"
"LinZhuoChen/DUpsampling" -> "openseg-group/OCNet.pytorch"
"LinZhuoChen/DUpsampling" -> "wutianyiRosun/Segmentation.X"
"LinZhuoChen/DUpsampling" -> "VITA-Group/GLNet"
"LinZhuoChen/DUpsampling" -> "yu-changqian/TorchSeg"
"LinZhuoChen/DUpsampling" -> "shachoi/HANet"
"LinZhuoChen/DUpsampling" -> "YudeWang/deeplabv3plus-pytorch"
"LinZhuoChen/DUpsampling" -> "junfu1115/DANet"
"LinZhuoChen/DUpsampling" -> "JaveyWang/Pyramid-Attention-Networks-pytorch"
"LinZhuoChen/DUpsampling" -> "orsic/swiftnet"
"LinZhuoChen/DUpsampling" -> "xiaoyufenfei/LEDNet"
"LinZhuoChen/DUpsampling" -> "ShawnBIT/Loss-family" ["e"=1]
"LinZhuoChen/DUpsampling" -> "MenghaoGuo/AutoDeeplab" ["e"=1]
"eveningdong/DeepLabV3-Tensorflow" -> "DrSleep/tensorflow-deeplab-resnet"
"eveningdong/DeepLabV3-Tensorflow" -> "rishizek/tensorflow-deeplab-v3"
"eveningdong/DeepLabV3-Tensorflow" -> "zhengyang-wang/Deeplab-v2--ResNet-101--Tensorflow"
"eveningdong/DeepLabV3-Tensorflow" -> "sthalles/deeplab_v3"
"eveningdong/DeepLabV3-Tensorflow" -> "rishizek/tensorflow-deeplab-v3-plus"
"eveningdong/DeepLabV3-Tensorflow" -> "DrSleep/tensorflow-deeplab-lfov"
"eveningdong/DeepLabV3-Tensorflow" -> "TheLegendAli/DeepLab-Context"
"eveningdong/DeepLabV3-Tensorflow" -> "xmojiao/deeplab_v2"
"eveningdong/DeepLabV3-Tensorflow" -> "TuSimple/TuSimple-DUC"
"fregu856/deeplabv3" -> "YudeWang/deeplabv3plus-pytorch"
"fregu856/deeplabv3" -> "speedinghzl/pytorch-segmentation-toolbox"
"fregu856/deeplabv3" -> "jfzhang95/pytorch-deeplab-xception"
"fregu856/deeplabv3" -> "chenxi116/DeepLabv3.pytorch"
"fregu856/deeplabv3" -> "VainF/DeepLabV3Plus-Pytorch"
"fregu856/deeplabv3" -> "mcordts/cityscapesScripts"
"fregu856/deeplabv3" -> "speedinghzl/CCNet"
"fregu856/deeplabv3" -> "nyoki-mtl/pytorch-segmentation"
"fregu856/deeplabv3" -> "CoinCheung/DeepLab-v3-plus-cityscapes"
"fregu856/deeplabv3" -> "Tramac/awesome-semantic-segmentation-pytorch"
"fregu856/deeplabv3" -> "kazuto1011/deeplab-pytorch"
"fregu856/deeplabv3" -> "linksense/LightNet"
"fregu856/deeplabv3" -> "davidtvs/PyTorch-ENet"
"fregu856/deeplabv3" -> "wkentaro/pytorch-fcn"
"fregu856/deeplabv3" -> "openseg-group/OCNet.pytorch"
"senliuy/Keras_HED_with_model" -> "lc82111/Keras_HED"
"senliuy/Keras_HED_with_model" -> "iamyb/mobileunet"
"meteorshowers/RCF-pytorch" -> "yun-liu/RCF"
"meteorshowers/RCF-pytorch" -> "pkuCactus/BDCN"
"meteorshowers/RCF-pytorch" -> "xwjabc/hed"
"meteorshowers/RCF-pytorch" -> "mayorx/rcf-edge-detection"
"meteorshowers/RCF-pytorch" -> "sniklaus/pytorch-hed"
"meteorshowers/RCF-pytorch" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"meteorshowers/RCF-pytorch" -> "xavysp/DexiNed"
"meteorshowers/RCF-pytorch" -> "meteorshowers/hed"
"meteorshowers/RCF-pytorch" -> "moabitcoin/holy-edge"
"meteorshowers/RCF-pytorch" -> "s9xie/hed"
"meteorshowers/RCF-pytorch" -> "Lavender105/DFF"
"meteorshowers/RCF-pytorch" -> "pdollar/edges"
"meteorshowers/RCF-pytorch" -> "MCG-NKU/plot-edge-pr-curves"
"meteorshowers/RCF-pytorch" -> "yun-liu/plot-edge-pr-curves"
"meteorshowers/RCF-pytorch" -> "zhangchbin/ContourNet"
"Lavender105/DFF" -> "anirudh-chakravarthy/CASENet"
"Lavender105/DFF" -> "Chrisding/seal"
"Lavender105/DFF" -> "nv-tlabs/STEAL"
"Lavender105/DFF" -> "Chrisding/cityscapes-preprocess"
"Lavender105/DFF" -> "Chrisding/sbd-preprocess"
"Lavender105/DFF" -> "pkuCactus/BDCN"
"Lavender105/DFF" -> "yun-liu/DDS"
"Lavender105/DFF" -> "milongo/CASENet"
"Lavender105/DFF" -> "lijiaman/CASENet"
"Lavender105/DFF" -> "meteorshowers/RCF-pytorch"
"Lavender105/DFF" -> "MCG-NKU/plot-edge-pr-curves"
"twke18/Adaptive_Affinity_Fields" -> "Liusifei/caffe-spn"
"twke18/Adaptive_Affinity_Fields" -> "hszhao/PSANet"
"twke18/Adaptive_Affinity_Fields" -> "philferriere/tfvos" ["e"=1]
"twke18/Adaptive_Affinity_Fields" -> "ZJULearning/RMI"
"ElephantGit/SemanticSegmentationUsingFPN_PanopticFeaturePyramidNetworks" -> "Angzz/panoptic-fpn-gluon"
"fengjian0106/hed-tutorial-for-document-scanning" -> "RRanddom/tf_doc_localisation"
"fengjian0106/hed-tutorial-for-document-scanning" -> "moabitcoin/holy-edge"
"fengjian0106/hed-tutorial-for-document-scanning" -> "s9xie/hed"
"fengjian0106/hed-tutorial-for-document-scanning" -> "lc82111/Keras_HED"
"fengjian0106/hed-tutorial-for-document-scanning" -> "Duchen521/HED-document-detection"
"fengjian0106/hed-tutorial-for-document-scanning" -> "pqpo/SmartCropper" ["e"=1]
"fengjian0106/hed-tutorial-for-document-scanning" -> "liuheng92/tensorflow_PSENet" ["e"=1]
"fengjian0106/hed-tutorial-for-document-scanning" -> "senliuy/Keras_HED_with_model"
"fengjian0106/hed-tutorial-for-document-scanning" -> "xiaoyu258/DocProj" ["e"=1]
"fengjian0106/hed-tutorial-for-document-scanning" -> "yun-liu/RCF"
"fengjian0106/hed-tutorial-for-document-scanning" -> "whyguu/hed-tf"
"fengjian0106/hed-tutorial-for-document-scanning" -> "alessandrozamberletti/docdetect" ["e"=1]
"fengjian0106/hed-tutorial-for-document-scanning" -> "ZJULearning/pixel_link" ["e"=1]
"fengjian0106/hed-tutorial-for-document-scanning" -> "leonlulu/DeepLayout" ["e"=1]
"fengjian0106/hed-tutorial-for-document-scanning" -> "cvlab-stonybrook/DewarpNet" ["e"=1]
"RRanddom/tf_doc_localisation" -> "fengjian0106/hed-tutorial-for-document-scanning"
"RRanddom/tf_doc_localisation" -> "Duchen521/HED-document-detection"
"RRanddom/tf_doc_localisation" -> "djh123/doc_Detection"
"RRanddom/tf_doc_localisation" -> "Heisenberg0391/TextImageGenerator"
"Golbstein/Keras-segmentation-deeplab-v3.1" -> "bonlime/keras-deeplab-v3-plus"
"Golbstein/Keras-segmentation-deeplab-v3.1" -> "mjDelta/deeplabv3plus-keras"
"Golbstein/Keras-segmentation-deeplab-v3.1" -> "xiaochunWu/Semantic-Segmentation-CRF"
"Golbstein/Keras-segmentation-deeplab-v3.1" -> "srihari-humbarwadi/DeepLabV3_Plus-Tensorflow2.0"
"Golbstein/Keras-segmentation-deeplab-v3.1" -> "nolanliou/mobile-deeplab-v3-plus" ["e"=1]
"EsmeYi/UNet-CRF-RNN" -> "MiguelMonteiro/CRFasRNNLayer"
"EsmeYi/UNet-CRF-RNN" -> "laoj2/segnet_crfasrnn"
"JunshengFu/semantic_segmentation" -> "NikolasEnt/Road-Semantic-Segmentation"
"JunshengFu/semantic_segmentation" -> "penny4860/Kitti-road-semantic-segmentation"
"bermanmaxim/superpixPool" -> "idealwei/SuperPixelPool.pytorch"
"bermanmaxim/superpixPool" -> "yun-liu/DEL"
"bermanmaxim/superpixPool" -> "parag2489/keras_superpixel_pooling"
"bermanmaxim/superpixPool" -> "fuy34/superpixel_fcn"
"bermanmaxim/superpixPool" -> "perrying/ssn-pytorch"
"bermanmaxim/superpixPool" -> "js-fan/ICD" ["e"=1]
"bermanmaxim/superpixPool" -> "CYang0515/pytorch_ssn"
"bermanmaxim/superpixPool" -> "DensoITLab/ss-with-RIM"
"bermanmaxim/superpixPool" -> "wctu/SEAL"
"bermanmaxim/superpixPool" -> "BGU-CS-VIL/BASS"
"DrSleep/light-weight-refinenet" -> "DrSleep/refinenet-pytorch"
"DrSleep/light-weight-refinenet" -> "DrSleep/multi-task-refinenet" ["e"=1]
"DrSleep/light-weight-refinenet" -> "guosheng/refinenet"
"DrSleep/light-weight-refinenet" -> "yu-changqian/TorchSeg"
"DrSleep/light-weight-refinenet" -> "thomasjpfan/pytorch_refinenet"
"DrSleep/light-weight-refinenet" -> "juntang-zhuang/ShelfNet"
"DrSleep/light-weight-refinenet" -> "speedinghzl/pytorch-segmentation-toolbox"
"DrSleep/light-weight-refinenet" -> "xiaoyufenfei/LEDNet"
"DrSleep/light-weight-refinenet" -> "linksense/LightNetPlusPlus"
"DrSleep/light-weight-refinenet" -> "linksense/LightNet"
"DrSleep/light-weight-refinenet" -> "sacmehta/ESPNet"
"DrSleep/light-weight-refinenet" -> "openseg-group/OCNet.pytorch"
"DrSleep/light-weight-refinenet" -> "MSiam/TFSegmentation"
"DrSleep/light-weight-refinenet" -> "wuhuikai/FastFCN"
"DrSleep/light-weight-refinenet" -> "speedinghzl/CCNet"
"rishizek/tensorflow-deeplab-v3-plus" -> "rishizek/tensorflow-deeplab-v3"
"rishizek/tensorflow-deeplab-v3-plus" -> "bonlime/keras-deeplab-v3-plus"
"rishizek/tensorflow-deeplab-v3-plus" -> "sthalles/deeplab_v3"
"rishizek/tensorflow-deeplab-v3-plus" -> "DrSleep/tensorflow-deeplab-resnet"
"rishizek/tensorflow-deeplab-v3-plus" -> "YudeWang/deeplabv3plus-pytorch"
"rishizek/tensorflow-deeplab-v3-plus" -> "eveningdong/DeepLabV3-Tensorflow"
"rishizek/tensorflow-deeplab-v3-plus" -> "hellochick/PSPNet-tensorflow"
"rishizek/tensorflow-deeplab-v3-plus" -> "jfzhang95/pytorch-deeplab-xception"
"rishizek/tensorflow-deeplab-v3-plus" -> "GeorgeSeif/Semantic-Segmentation-Suite"
"rishizek/tensorflow-deeplab-v3-plus" -> "shekkizh/FCN.tensorflow"
"rishizek/tensorflow-deeplab-v3-plus" -> "LeslieZhoa/tensorflow-deeplab_v3_plus" ["e"=1]
"rishizek/tensorflow-deeplab-v3-plus" -> "srihari-humbarwadi/DeepLabV3_Plus-Tensorflow2.0"
"rishizek/tensorflow-deeplab-v3-plus" -> "Vladkryvoruchko/PSPNet-Keras-tensorflow"
"rishizek/tensorflow-deeplab-v3-plus" -> "TuSimple/TuSimple-DUC"
"rishizek/tensorflow-deeplab-v3-plus" -> "anxiangsir/urban_seg" ["e"=1]
"JaveyWang/Pyramid-Attention-Networks-pytorch" -> "LinZhuoChen/DUpsampling"
"JaveyWang/Pyramid-Attention-Networks-pytorch" -> "divelab/dilated"
"JaveyWang/Pyramid-Attention-Networks-pytorch" -> "lxtGH/dfn_seg"
"JaveyWang/Pyramid-Attention-Networks-pytorch" -> "openseg-group/OCNet.pytorch"
"JaveyWang/Pyramid-Attention-Networks-pytorch" -> "speedinghzl/pytorch-segmentation-toolbox"
"ykamikawa/tf-keras-SegNet" -> "imlab-uiip/keras-segnet"
"ykamikawa/tf-keras-SegNet" -> "lsh1994/keras-segmentation" ["e"=1]
"ykamikawa/tf-keras-SegNet" -> "0bserver07/Keras-SegNet-Basic"
"ykamikawa/tf-keras-SegNet" -> "ykamikawa/tf-keras-PSPNet"
"ykamikawa/tf-keras-SegNet" -> "aurora95/Keras-FCN"
"mapillary/inplace_abn" -> "speedinghzl/pytorch-segmentation-toolbox"
"mapillary/inplace_abn" -> "openseg-group/OCNet.pytorch"
"mapillary/inplace_abn" -> "vacancy/Synchronized-BatchNorm-PyTorch"
"mapillary/inplace_abn" -> "zhanghang1989/PyTorch-Encoding"
"mapillary/inplace_abn" -> "openseg-group/openseg.pytorch"
"mapillary/inplace_abn" -> "zijundeng/pytorch-semantic-segmentation"
"mapillary/inplace_abn" -> "speedinghzl/CCNet"
"mapillary/inplace_abn" -> "bermanmaxim/LovaszSoftmax"
"mapillary/inplace_abn" -> "yu-changqian/TorchSeg"
"mapillary/inplace_abn" -> "roytseng-tw/Detectron.pytorch" ["e"=1]
"mapillary/inplace_abn" -> "linksense/LightNet"
"mapillary/inplace_abn" -> "fyu/drn"
"mapillary/inplace_abn" -> "itijyou/ademxapp"
"mapillary/inplace_abn" -> "meetps/pytorch-semseg"
"mapillary/inplace_abn" -> "NVIDIA/semantic-segmentation"
"YuhuiMa/DFN-tensorflow" -> "lxtGH/dfn_seg"
"YuhuiMa/DFN-tensorflow" -> "whitesockcat/Discriminative-Feature-Network"
"YuhuiMa/DFN-tensorflow" -> "DeepMotionAIResearch/DenseASPP"
"chenxi116/DeepLabv3.pytorch" -> "fregu856/deeplabv3"
"chenxi116/DeepLabv3.pytorch" -> "YingdaXia/SynthCP"
"chenxi116/DeepLabv3.pytorch" -> "hualin95/Deeplab-v3plus"
"sthalles/deeplab_v3" -> "rishizek/tensorflow-deeplab-v3-plus"
"sthalles/deeplab_v3" -> "rishizek/tensorflow-deeplab-v3"
"sthalles/deeplab_v3" -> "bonlime/keras-deeplab-v3-plus"
"sthalles/deeplab_v3" -> "DrSleep/tensorflow-deeplab-resnet"
"sthalles/deeplab_v3" -> "eveningdong/DeepLabV3-Tensorflow"
"sthalles/deeplab_v3" -> "GeorgeSeif/Semantic-Segmentation-Suite"
"sthalles/deeplab_v3" -> "shekkizh/FCN.tensorflow"
"sthalles/deeplab_v3" -> "MSiam/TFSegmentation"
"sthalles/deeplab_v3" -> "hellochick/PSPNet-tensorflow"
"sthalles/deeplab_v3" -> "isht7/pytorch-deeplab-resnet"
"sthalles/deeplab_v3" -> "sadeepj/crfasrnn_keras"
"sthalles/deeplab_v3" -> "tangzhenyu/SemanticSegmentation_DL"
"sthalles/deeplab_v3" -> "anxiangsir/urban_seg" ["e"=1]
"sthalles/deeplab_v3" -> "warmspringwinds/tf-image-segmentation"
"sthalles/deeplab_v3" -> "Vladkryvoruchko/PSPNet-Keras-tensorflow"
"TuSimple/TuSimple-DUC" -> "TuSimple/mx-maskrcnn" ["e"=1]
"TuSimple/TuSimple-DUC" -> "yu-changqian/pytorch-segmentation"
"TuSimple/TuSimple-DUC" -> "hszhao/PSPNet"
"TuSimple/TuSimple-DUC" -> "hszhao/ICNet"
"TuSimple/TuSimple-DUC" -> "fyu/dilation"
"TuSimple/TuSimple-DUC" -> "itijyou/ademxapp"
"TuSimple/TuSimple-DUC" -> "linksense/LightNet"
"TuSimple/TuSimple-DUC" -> "guosheng/refinenet"
"TuSimple/TuSimple-DUC" -> "ijkguo/mx-rcnn" ["e"=1]
"TuSimple/TuSimple-DUC" -> "zijundeng/pytorch-semantic-segmentation"
"TuSimple/TuSimple-DUC" -> "sacmehta/ESPNet"
"TuSimple/TuSimple-DUC" -> "Eromera/erfnet_pytorch"
"TuSimple/TuSimple-DUC" -> "msracver/FCIS"
"TuSimple/TuSimple-DUC" -> "KeyKy/mobilenet-mxnet" ["e"=1]
"TuSimple/TuSimple-DUC" -> "openseg-group/OCNet.pytorch"
"scaelles/DEXTR-PyTorch" -> "scaelles/DEXTR-KerasTensorflow"
"scaelles/DEXTR-PyTorch" -> "xingyizhou/ExtremeNet" ["e"=1]
"scaelles/DEXTR-PyTorch" -> "fidler-lab/polyrnn-pp"
"scaelles/DEXTR-PyTorch" -> "fidler-lab/polyrnn-pp-pytorch"
"scaelles/DEXTR-PyTorch" -> "isl-org/Intseg"
"scaelles/DEXTR-PyTorch" -> "jfzhang95/DeepGrabCut-PyTorch"
"scaelles/DEXTR-PyTorch" -> "fidler-lab/curve-gcn"
"scaelles/DEXTR-PyTorch" -> "horvitzs/Interactive_Segmentation_Models"
"scaelles/DEXTR-PyTorch" -> "SamsungLabs/adaptis"
"scaelles/DEXTR-PyTorch" -> "mapillary/inplace_abn"
"scaelles/DEXTR-PyTorch" -> "SamsungLabs/fbrs_interactive_segmentation"
"scaelles/DEXTR-PyTorch" -> "isht7/pytorch-deeplab-resnet"
"scaelles/DEXTR-PyTorch" -> "ZhouYanzhao/PRM" ["e"=1]
"scaelles/DEXTR-PyTorch" -> "shiyinzhang/Inside-Outside-Guidance"
"scaelles/DEXTR-PyTorch" -> "linksense/LightNet"
"DCurro/CannyEdgePytorch" -> "chaddy1004/sobel-operator-pytorch"
"hehefan/Recurrent-Attention-Model" -> "conan7882/recurrent-attention-model"
"kevinzakka/recurrent-visual-attention" -> "jlindsey15/RAM"
"kevinzakka/recurrent-visual-attention" -> "fxia22/stn.pytorch" ["e"=1]
"kevinzakka/recurrent-visual-attention" -> "zhongwen/RAM"
"kevinzakka/recurrent-visual-attention" -> "tengshaofeng/ResidualAttentionNetwork-pytorch"
"kevinzakka/recurrent-visual-attention" -> "fwang91/residual-attention-network" ["e"=1]
"kevinzakka/recurrent-visual-attention" -> "szagoruyko/attention-transfer" ["e"=1]
"kevinzakka/recurrent-visual-attention" -> "hehefan/Recurrent-Attention-Model"
"kevinzakka/recurrent-visual-attention" -> "facebookarchive/MIXER" ["e"=1]
"Tramac/Lightweight-Segmentation" -> "Tramac/mobilenetv3-segmentation"
"Tramac/Lightweight-Segmentation" -> "wpf535236337/real-time-network"
"Tramac/Lightweight-Segmentation" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"Tramac/Lightweight-Segmentation" -> "linksense/LightNetPlusPlus"
"Tramac/Lightweight-Segmentation" -> "xiaoyufenfei/LEDNet"
"Tramac/Lightweight-Segmentation" -> "xiaoyufenfei/Real-Time-Semantic-Segmentation"
"Tramac/Lightweight-Segmentation" -> "ooooverflow/BiSeNet"
"Tramac/Lightweight-Segmentation" -> "openseg-group/OCNet.pytorch"
"Tramac/Lightweight-Segmentation" -> "DrSleep/light-weight-refinenet"
"Tramac/Lightweight-Segmentation" -> "speedinghzl/pytorch-segmentation-toolbox"
"Tramac/Lightweight-Segmentation" -> "Vipermdl/MobileNetV3-for-Segmentation"
"Tramac/Lightweight-Segmentation" -> "Tramac/torchscope"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "zhanghang1989/PyTorch-Encoding"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "mapillary/inplace_abn"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "openseg-group/OCNet.pytorch"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "tamakoji/pytorch-syncbn"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "oeway/pytorch-deform-conv" ["e"=1]
"vacancy/Synchronized-BatchNorm-PyTorch" -> "jfzhang95/pytorch-deeplab-xception"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "speedinghzl/CCNet"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "roytseng-tw/Detectron.pytorch" ["e"=1]
"vacancy/Synchronized-BatchNorm-PyTorch" -> "junfu1115/DANet"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "yu-changqian/TorchSeg"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "CSAILVision/semantic-segmentation-pytorch"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "YudeWang/deeplabv3plus-pytorch"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "switchablenorms/Switchable-Normalization"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "openseg-group/openseg.pytorch"
"vacancy/Synchronized-BatchNorm-PyTorch" -> "HRNet/HRNet-Semantic-Segmentation"
"speedinghzl/pytorch-segmentation-toolbox" -> "openseg-group/OCNet.pytorch"
"speedinghzl/pytorch-segmentation-toolbox" -> "speedinghzl/CCNet"
"speedinghzl/pytorch-segmentation-toolbox" -> "yu-changqian/TorchSeg"
"speedinghzl/pytorch-segmentation-toolbox" -> "openseg-group/openseg.pytorch"
"speedinghzl/pytorch-segmentation-toolbox" -> "mapillary/inplace_abn"
"speedinghzl/pytorch-segmentation-toolbox" -> "hszhao/semseg"
"speedinghzl/pytorch-segmentation-toolbox" -> "zhanghang1989/PyTorch-Encoding"
"speedinghzl/pytorch-segmentation-toolbox" -> "speedinghzl/Pytorch-Deeplab"
"speedinghzl/pytorch-segmentation-toolbox" -> "YudeWang/deeplabv3plus-pytorch"
"speedinghzl/pytorch-segmentation-toolbox" -> "fregu856/deeplabv3"
"speedinghzl/pytorch-segmentation-toolbox" -> "wuhuikai/FastFCN"
"speedinghzl/pytorch-segmentation-toolbox" -> "zijundeng/pytorch-semantic-segmentation"
"speedinghzl/pytorch-segmentation-toolbox" -> "jfzhang95/pytorch-deeplab-xception"
"speedinghzl/pytorch-segmentation-toolbox" -> "junfu1115/DANet"
"speedinghzl/pytorch-segmentation-toolbox" -> "LinZhuoChen/DUpsampling"
"wutianyiRosun/Segmentation.X" -> "xiaoketongxue/AI-News" ["e"=1]
"wutianyiRosun/Segmentation.X" -> "Angzz/awesome-panoptic-segmentation"
"wutianyiRosun/Segmentation.X" -> "yu-changqian/TorchSeg"
"wutianyiRosun/Segmentation.X" -> "openseg-group/OCNet.pytorch"
"wutianyiRosun/Segmentation.X" -> "uber-research/UPSNet"
"wutianyiRosun/Segmentation.X" -> "speedinghzl/pytorch-segmentation-toolbox"
"wutianyiRosun/Segmentation.X" -> "LinZhuoChen/DUpsampling"
"wutianyiRosun/Segmentation.X" -> "wuhuikai/FastFCN"
"wutianyiRosun/Segmentation.X" -> "JackieZhangdx/WeakSupervisedSegmentationList" ["e"=1]
"wutianyiRosun/Segmentation.X" -> "zhanghang1989/PyTorch-Encoding"
"wutianyiRosun/Segmentation.X" -> "linksense/LightNet"
"wutianyiRosun/Segmentation.X" -> "YudeWang/deeplabv3plus-pytorch"
"wutianyiRosun/Segmentation.X" -> "openseg-group/openseg.pytorch"
"wutianyiRosun/Segmentation.X" -> "kevinlee9/Semantic-Segmentation" ["e"=1]
"wutianyiRosun/Segmentation.X" -> "wutianyiRosun/CGNet"
"qizhuli/Weakly-Supervised-Panoptic-Segmentation" -> "uber-research/UPSNet"
"qizhuli/Weakly-Supervised-Panoptic-Segmentation" -> "johnnylu305/Simple-does-it-weakly-supervised-instance-and-semantic-segmentation" ["e"=1]
"qizhuli/Weakly-Supervised-Panoptic-Segmentation" -> "Angzz/awesome-panoptic-segmentation"
"qizhuli/Weakly-Supervised-Panoptic-Segmentation" -> "chengchunhsu/WSIS_BBTP" ["e"=1]
"qizhuli/Weakly-Supervised-Panoptic-Segmentation" -> "kevinlee9/Semantic-Segmentation" ["e"=1]
"qizhuli/Weakly-Supervised-Panoptic-Segmentation" -> "xtudbxk/DSRG-tensorflow" ["e"=1]
"donnyyou/torch-segmentation" -> "openseg-group/OCNet.pytorch"
"donnyyou/torch-segmentation" -> "openseg-group/openseg.pytorch"
"donnyyou/torch-segmentation" -> "donnyyou/pytorch-lffd"
"guanfuchen/semseg" -> "yu-changqian/TorchSeg"
"guanfuchen/semseg" -> "meetps/pytorch-semseg"
"guanfuchen/semseg" -> "Tramac/awesome-semantic-segmentation-pytorch"
"guanfuchen/semseg" -> "zijundeng/pytorch-semantic-segmentation"
"guanfuchen/semseg" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"guanfuchen/semseg" -> "wutianyiRosun/Segmentation.X"
"guanfuchen/semseg" -> "fuweifu-vtoo/Semantic-segmentation" ["e"=1]
"guanfuchen/semseg" -> "openseg-group/OCNet.pytorch"
"guanfuchen/semseg" -> "wuhuikai/FastFCN"
"guanfuchen/semseg" -> "zhanghang1989/PyTorch-Encoding"
"guanfuchen/semseg" -> "xiaoyufenfei/LEDNet"
"guanfuchen/semseg" -> "GeorgeSeif/Semantic-Segmentation-Suite"
"guanfuchen/semseg" -> "wpf535236337/real-time-network"
"guanfuchen/semseg" -> "speedinghzl/pytorch-segmentation-toolbox"
"guanfuchen/semseg" -> "ooooverflow/BiSeNet"
"hellochick/semantic-segmentation-tensorflow" -> "hellochick/ICNet-tensorflow"
"hellochick/semantic-segmentation-tensorflow" -> "fregu856/segmentation"
"yunlongdong/FCN-pytorch" -> "bat67/pytorch-FCN-easiest-demo"
"yunlongdong/FCN-pytorch" -> "pochih/FCN-pytorch"
"LaoYang1994/PanopticSegmentation" -> "LaoYang1994/SOGNet"
"sacmehta/ESPNet" -> "sacmehta/ESPNetv2"
"sacmehta/ESPNet" -> "wutianyiRosun/CGNet"
"sacmehta/ESPNet" -> "linksense/LightNet"
"sacmehta/ESPNet" -> "openseg-group/OCNet.pytorch"
"sacmehta/ESPNet" -> "Eromera/erfnet_pytorch"
"sacmehta/ESPNet" -> "speedinghzl/CCNet"
"sacmehta/ESPNet" -> "yu-changqian/TorchSeg"
"sacmehta/ESPNet" -> "sacmehta/EdgeNets"
"sacmehta/ESPNet" -> "zhanghang1989/PyTorch-Encoding"
"sacmehta/ESPNet" -> "DeepMotionAIResearch/DenseASPP"
"sacmehta/ESPNet" -> "DrSleep/light-weight-refinenet"
"sacmehta/ESPNet" -> "speedinghzl/pytorch-segmentation-toolbox"
"sacmehta/ESPNet" -> "MSiam/TFSegmentation"
"sacmehta/ESPNet" -> "hszhao/ICNet"
"sacmehta/ESPNet" -> "ooooverflow/BiSeNet"
"leaderj1001/Attention-Augmented-Conv2d" -> "leaderj1001/Stand-Alone-Self-Attention"
"leaderj1001/Attention-Augmented-Conv2d" -> "xvjiarui/GCNet"
"leaderj1001/Attention-Augmented-Conv2d" -> "epfml/attention-cnn"
"leaderj1001/Attention-Augmented-Conv2d" -> "Jongchan/attention-module"
"leaderj1001/Attention-Augmented-Conv2d" -> "gan3sh500/attention-augmented-conv"
"leaderj1001/Attention-Augmented-Conv2d" -> "implus/SKNet"
"leaderj1001/Attention-Augmented-Conv2d" -> "implus/PytorchInsight"
"leaderj1001/Attention-Augmented-Conv2d" -> "hszhao/SAN"
"leaderj1001/Attention-Augmented-Conv2d" -> "BangguWu/ECANet"
"leaderj1001/Attention-Augmented-Conv2d" -> "tengshaofeng/ResidualAttentionNetwork-pytorch"
"leaderj1001/Attention-Augmented-Conv2d" -> "junfu1115/DANet"
"leaderj1001/Attention-Augmented-Conv2d" -> "libuyu/GHM_Detection" ["e"=1]
"leaderj1001/Attention-Augmented-Conv2d" -> "dongzhang89/FPT"
"leaderj1001/Attention-Augmented-Conv2d" -> "lxtGH/OctaveConv_pytorch"
"leaderj1001/Attention-Augmented-Conv2d" -> "speedinghzl/CCNet"
"trypag/pytorch-unet-segnet" -> "say4n/pytorch-segnet"
"trypag/pytorch-unet-segnet" -> "alejandrodebus/SegNet"
"trypag/pytorch-unet-segnet" -> "delta-onera/segnet_pytorch"
"say4n/pytorch-segnet" -> "trypag/pytorch-unet-segnet"
"say4n/pytorch-segnet" -> "delta-onera/segnet_pytorch"
"Algy/fast-slic" -> "carlren/gSLICr"
"Algy/fast-slic" -> "PSMM/SLIC-Superpixels"
"Algy/fast-slic" -> "fuy34/superpixel_fcn"
"Algy/fast-slic" -> "fderue/SLIC_CUDA"
"Algy/fast-slic" -> "MoritzWillig/pysnic"
"Algy/fast-slic" -> "perrying/ssn-pytorch"
"Algy/fast-slic" -> "NVlabs/ssn_superpixels"
"Algy/fast-slic" -> "davidstutz/superpixel-benchmark"
"Algy/fast-slic" -> "laixintao/slic-python-implementation"
"aleksispi/drl-rpn-tf" -> "qq456cvb/multi-stage-detection"
"iacolippo/octconv-pytorch" -> "lxtGH/OctaveConv_pytorch"
"iacolippo/octconv-pytorch" -> "terrychenism/OctaveConv"
"iacolippo/octconv-pytorch" -> "facebookresearch/OctConv"
"iacolippo/octconv-pytorch" -> "ThoroughImages/OctConv"
"iacolippo/octconv-pytorch" -> "d-li14/octconv.pytorch"
"iacolippo/octconv-pytorch" -> "gan3sh500/octaveconv-pytorch"
"iacolippo/octconv-pytorch" -> "vivym/OctaveConv.pytorch"
"iacolippo/octconv-pytorch" -> "zrl4836/tensorflow_octConv"
"iacolippo/octconv-pytorch" -> "AnjieCheng/OctaveConv-Pytorch" ["e"=1]
"DHZS/tf-deformable-conv-layer" -> "kastnerkyle/deform-conv"
"DHZS/tf-deformable-conv-layer" -> "Zardinality/TF-deformable-conv"
"DHZS/tf-deformable-conv-layer" -> "smallsunsun1/deformable_conv_v2"
"bat67/pytorch-FCN-easiest-demo" -> "yunlongdong/FCN-pytorch"
"bat67/pytorch-FCN-easiest-demo" -> "pochih/FCN-pytorch"
"bat67/pytorch-FCN-easiest-demo" -> "L1aoXingyu/fcn.pytorch"
"bat67/pytorch-FCN-easiest-demo" -> "wkentaro/pytorch-fcn"
"bat67/pytorch-FCN-easiest-demo" -> "JavisPeng/u_net_liver" ["e"=1]
"bat67/pytorch-FCN-easiest-demo" -> "bodokaiser/piwise"
"CoinCheung/DeepLab-v3-plus-cityscapes" -> "YudeWang/deeplabv3plus-pytorch"
"CoinCheung/DeepLab-v3-plus-cityscapes" -> "nyoki-mtl/pytorch-segmentation"
"CoinCheung/DeepLab-v3-plus-cityscapes" -> "fregu856/deeplabv3"
"CoinCheung/DeepLab-v3-plus-cityscapes" -> "shachoi/HANet"
"nv-tlabs/STEAL" -> "Chrisding/seal"
"nv-tlabs/STEAL" -> "Lavender105/DFF"
"nv-tlabs/STEAL" -> "pkuCactus/BDCN"
"nv-tlabs/STEAL" -> "nv-tlabs/GSCNN"
"nv-tlabs/STEAL" -> "anirudh-chakravarthy/CASENet"
"nv-tlabs/STEAL" -> "Chrisding/cityscapes-preprocess"
"nv-tlabs/STEAL" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"nv-tlabs/STEAL" -> "fidler-lab/polyrnn-pp"
"nv-tlabs/STEAL" -> "fidler-lab/curve-gcn"
"nv-tlabs/STEAL" -> "meteorshowers/RCF-pytorch"
"nv-tlabs/STEAL" -> "lxtGH/DecoupleSegNets"
"nv-tlabs/STEAL" -> "MendelXu/ANN"
"nv-tlabs/STEAL" -> "openseg-group/openseg.pytorch"
"nv-tlabs/STEAL" -> "dmarcosg/DSAC"
"nv-tlabs/STEAL" -> "hkchengrex/CascadePSP"
"speedinghzl/CCNet" -> "junfu1115/DANet"
"speedinghzl/CCNet" -> "openseg-group/OCNet.pytorch"
"speedinghzl/CCNet" -> "speedinghzl/pytorch-segmentation-toolbox"
"speedinghzl/CCNet" -> "yu-changqian/TorchSeg"
"speedinghzl/CCNet" -> "xvjiarui/GCNet"
"speedinghzl/CCNet" -> "zhanghang1989/PyTorch-Encoding"
"speedinghzl/CCNet" -> "XiaLiPKU/EMANet"
"speedinghzl/CCNet" -> "AlexHex7/Non-local_pytorch"
"speedinghzl/CCNet" -> "openseg-group/openseg.pytorch"
"speedinghzl/CCNet" -> "HRNet/HRNet-Semantic-Segmentation"
"speedinghzl/CCNet" -> "MendelXu/ANN"
"speedinghzl/CCNet" -> "bermanmaxim/LovaszSoftmax"
"speedinghzl/CCNet" -> "hszhao/semseg"
"speedinghzl/CCNet" -> "Serge-weihao/CCNet-Pure-Pytorch"
"speedinghzl/CCNet" -> "mapillary/inplace_abn"
"kevin-ssy/FishNet" -> "OceanPang/Libra_R-CNN" ["e"=1]
"kevin-ssy/FishNet" -> "chengyangfu/retinamask"
"kevin-ssy/FishNet" -> "switchablenorms/Switchable-Normalization"
"kevin-ssy/FishNet" -> "hsddlz/faster-CTPN" ["e"=1]
"kevin-ssy/FishNet" -> "lxtGH/OctaveConv_pytorch"
"kevin-ssy/FishNet" -> "zhangxiaosong18/FreeAnchor" ["e"=1]
"kevin-ssy/FishNet" -> "vacancy/Synchronized-BatchNorm-PyTorch"
"kevin-ssy/FishNet" -> "shrubb/box-convolutions" ["e"=1]
"kevin-ssy/FishNet" -> "zhaoweicai/Detectron-Cascade-RCNN" ["e"=1]
"kevin-ssy/FishNet" -> "xingyizhou/ExtremeNet" ["e"=1]
"kevin-ssy/FishNet" -> "joe-siyuan-qiao/WeightStandardization"
"implus/SKNet" -> "pppLang/SKNet"
"implus/SKNet" -> "implus/PytorchInsight"
"implus/SKNet" -> "xvjiarui/GCNet"
"implus/SKNet" -> "hujie-frank/GENet"
"implus/SKNet" -> "speedinghzl/CCNet"
"implus/SKNet" -> "junfu1115/DANet"
"implus/SKNet" -> "moskomule/senet.pytorch"
"implus/SKNet" -> "ResearchingDexter/SKNet_pytorch"
"implus/SKNet" -> "BangguWu/ECANet"
"implus/SKNet" -> "lxtGH/OctaveConv_pytorch"
"implus/SKNet" -> "leaderj1001/Attention-Augmented-Conv2d"
"implus/SKNet" -> "terrychenism/OctaveConv"
"implus/SKNet" -> "Jongchan/attention-module"
"implus/SKNet" -> "libuyu/GHM_Detection" ["e"=1]
"implus/SKNet" -> "luuuyi/CBAM.PyTorch"
"ResearchingDexter/SKNet_pytorch" -> "bobo0810/SKNet_Pytorch"
"d-li14/octconv.pytorch" -> "facebookresearch/OctConv"
"d-li14/octconv.pytorch" -> "lxtGH/OctaveConv_pytorch"
"d-li14/octconv.pytorch" -> "iacolippo/octconv-pytorch"
"d-li14/octconv.pytorch" -> "koshian2/OctConv-TFKeras"
"d-li14/octconv.pytorch" -> "braincreators/octconv"
"tamakoji/pytorch-syncbn" -> "vacancy/Synchronized-BatchNorm-PyTorch"
"uber-research/jpeg2dct" -> "kaix90/DCTNet"
"uber-research/jpeg2dct" -> "PSCLab-ASU/Learning-in-the-Frequency-Domain"
"uber-research/jpeg2dct" -> "ghallak/jpeg-python" ["e"=1]
"uber-research/jpeg2dct" -> "matej-ulicny/harmonic-networks" ["e"=1]
"Liusifei/pytorch_spn" -> "Liusifei/caffe-spn"
"Liusifei/pytorch_spn" -> "Liusifei/pytorch_spn_full"
"Liusifei/caffe-spn" -> "Liusifei/pytorch_spn"
"MarvinTeichmann/ConvCRF" -> "lucasb-eyer/pydensecrf"
"MarvinTeichmann/ConvCRF" -> "sadeepj/crfasrnn_keras"
"MarvinTeichmann/ConvCRF" -> "linksense/LightNet"
"MarvinTeichmann/ConvCRF" -> "sadeepj/crfasrnn_pytorch"
"MarvinTeichmann/ConvCRF" -> "zijundeng/pytorch-semantic-segmentation"
"MarvinTeichmann/ConvCRF" -> "torrvision/crfasrnn"
"MarvinTeichmann/ConvCRF" -> "isht7/pytorch-deeplab-resnet"
"MarvinTeichmann/ConvCRF" -> "jiwoon-ahn/irn" ["e"=1]
"MarvinTeichmann/ConvCRF" -> "speedinghzl/Pytorch-Deeplab"
"MarvinTeichmann/ConvCRF" -> "JackieZhangdx/WeakSupervisedSegmentationList" ["e"=1]
"MarvinTeichmann/ConvCRF" -> "bermanmaxim/LovaszSoftmax"
"MarvinTeichmann/ConvCRF" -> "mapillary/inplace_abn"
"MarvinTeichmann/ConvCRF" -> "openseg-group/OCNet.pytorch"
"MarvinTeichmann/ConvCRF" -> "speedinghzl/pytorch-segmentation-toolbox"
"MarvinTeichmann/ConvCRF" -> "hfslyc/AdvSemiSeg" ["e"=1]
"hujie-frank/GENet" -> "BayesWatch/pytorch-GENet"
"hujie-frank/GENet" -> "cuihu1998/GENet-Res50"
"lc82111/Keras_HED" -> "moabitcoin/holy-edge"
"lc82111/Keras_HED" -> "senliuy/Keras_HED_with_model"
"lc82111/Keras_HED" -> "whyguu/hed-tf"
"lc82111/Keras_HED" -> "meteorshowers/hed"
"lc82111/Keras_HED" -> "zeakey/hed"
"whyguu/hed-tf" -> "lc82111/Keras_HED"
"whyguu/hed-tf" -> "gengyanlei/segmentation_tensorflow"
"iArunava/ENet-Real-Time-Semantic-Segmentation" -> "TimoSaemann/ENet"
"iArunava/ENet-Real-Time-Semantic-Segmentation" -> "davidtvs/PyTorch-ENet"
"iArunava/ENet-Real-Time-Semantic-Segmentation" -> "kwotsin/TensorFlow-ENet"
"iArunava/ENet-Real-Time-Semantic-Segmentation" -> "Dawson-huang/Pytorch-ENet-Nice"
"iArunava/ENet-Real-Time-Semantic-Segmentation" -> "lizhengwei1992/Fast_Portrait_Segmentation" ["e"=1]
"cocodataset/panopticapi" -> "uber-research/UPSNet"
"cocodataset/panopticapi" -> "Angzz/awesome-panoptic-segmentation"
"cocodataset/panopticapi" -> "bowenc0221/panoptic-deeplab"
"cocodataset/panopticapi" -> "dvlab-research/PanopticFCN"
"cocodataset/panopticapi" -> "qizhuli/Weakly-Supervised-Panoptic-Segmentation"
"cocodataset/panopticapi" -> "mapillary/seamseg"
"cocodataset/panopticapi" -> "DeepSceneSeg/EfficientPS"
"cocodataset/panopticapi" -> "mcahny/vps"
"cocodataset/panopticapi" -> "SamsungLabs/adaptis"
"cocodataset/panopticapi" -> "xieenze/PolarMask" ["e"=1]
"cocodataset/panopticapi" -> "nightrome/cocostuff" ["e"=1]
"cocodataset/panopticapi" -> "youngwanLEE/CenterMask" ["e"=1]
"hszhao/PSANet" -> "zhuangyqin/DRN"
"hszhao/PSANet" -> "cfzd/PSANet_PyTorch"
"hszhao/PSANet" -> "openseg-group/OCNet.pytorch"
"hszhao/PSANet" -> "twke18/Adaptive_Affinity_Fields"
"hszhao/PSANet" -> "Liusifei/pytorch_spn"
"leaderj1001/Stand-Alone-Self-Attention" -> "leaderj1001/Attention-Augmented-Conv2d"
"leaderj1001/Stand-Alone-Self-Attention" -> "epfml/attention-cnn"
"leaderj1001/Stand-Alone-Self-Attention" -> "MerHS/SASA-pytorch"
"leaderj1001/Stand-Alone-Self-Attention" -> "hszhao/SAN"
"leaderj1001/Stand-Alone-Self-Attention" -> "JoeRoussy/adaptive-attention-in-cv"
"leaderj1001/Stand-Alone-Self-Attention" -> "ShoufaChen/CycleMLP" ["e"=1]
"leaderj1001/Stand-Alone-Self-Attention" -> "lucidrains/halonet-pytorch"
"Reagan1311/DABNet" -> "wutianyiRosun/CGNet"
"dhkim0225/keras-image-segmentation" -> "mjDelta/deeplabv3plus-keras"
"dhkim0225/keras-image-segmentation" -> "JihongJu/keras-fcn"
"xiaoyufenfei/LEDNet" -> "huaifeng1993/DFANet"
"xiaoyufenfei/LEDNet" -> "wutianyiRosun/CGNet"
"xiaoyufenfei/LEDNet" -> "ooooverflow/BiSeNet"
"xiaoyufenfei/LEDNet" -> "openseg-group/OCNet.pytorch"
"xiaoyufenfei/LEDNet" -> "DrSleep/light-weight-refinenet"
"xiaoyufenfei/LEDNet" -> "orsic/swiftnet"
"xiaoyufenfei/LEDNet" -> "AceCoooool/LEDNet"
"xiaoyufenfei/LEDNet" -> "yu-changqian/TorchSeg"
"xiaoyufenfei/LEDNet" -> "xiaoyufenfei/Real-Time-Semantic-Segmentation"
"xiaoyufenfei/LEDNet" -> "wuhuikai/FastFCN"
"xiaoyufenfei/LEDNet" -> "yu-changqian/BiSeNet" ["e"=1]
"xiaoyufenfei/LEDNet" -> "MSiam/TFSegmentation"
"xiaoyufenfei/LEDNet" -> "sacmehta/ESPNetv2"
"xiaoyufenfei/LEDNet" -> "LinZhuoChen/DUpsampling"
"xiaoyufenfei/LEDNet" -> "xiaoyufenfei/ESNet"
"davidtvs/PyTorch-ENet" -> "iArunava/ENet-Real-Time-Semantic-Segmentation"
"davidtvs/PyTorch-ENet" -> "TimoSaemann/ENet"
"davidtvs/PyTorch-ENet" -> "kwotsin/TensorFlow-ENet"
"davidtvs/PyTorch-ENet" -> "klintan/pytorch-lanenet" ["e"=1]
"davidtvs/PyTorch-ENet" -> "ooooverflow/BiSeNet"
"davidtvs/PyTorch-ENet" -> "sacmehta/ESPNet"
"davidtvs/PyTorch-ENet" -> "huaifeng1993/DFANet"
"davidtvs/PyTorch-ENet" -> "gjy3035/enet.pytorch"
"davidtvs/PyTorch-ENet" -> "wutianyiRosun/CGNet"
"davidtvs/PyTorch-ENet" -> "CoinCheung/BiSeNet"
"davidtvs/PyTorch-ENet" -> "e-lab/ENet-training"
"davidtvs/PyTorch-ENet" -> "fregu856/deeplabv3"
"davidtvs/PyTorch-ENet" -> "alexgkendall/SegNet-Tutorial"
"davidtvs/PyTorch-ENet" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"davidtvs/PyTorch-ENet" -> "yu-changqian/TorchSeg"
"fidler-lab/polyrnn-pp-pytorch" -> "fidler-lab/polyrnn-pp"
"fidler-lab/polyrnn-pp-pytorch" -> "fidler-lab/curve-gcn"
"fidler-lab/polyrnn-pp-pytorch" -> "AlexMa011/pytorch-polygon-rnn"
"fidler-lab/polyrnn-pp-pytorch" -> "scaelles/DEXTR-PyTorch"
"fidler-lab/polyrnn-pp-pytorch" -> "dmarcosg/DSAC"
"fidler-lab/polyrnn-pp-pytorch" -> "jponttuset/mcg"
"fidler-lab/polyrnn-pp-pytorch" -> "horvitzs/Interactive_Segmentation_Models"
"fidler-lab/polyrnn-pp-pytorch" -> "nv-tlabs/STEAL"
"ooooverflow/BiSeNet" -> "CoinCheung/BiSeNet"
"ooooverflow/BiSeNet" -> "yu-changqian/TorchSeg"
"ooooverflow/BiSeNet" -> "huaifeng1993/DFANet"
"ooooverflow/BiSeNet" -> "wutianyiRosun/CGNet"
"ooooverflow/BiSeNet" -> "xiaoyufenfei/LEDNet"
"ooooverflow/BiSeNet" -> "orsic/swiftnet"
"ooooverflow/BiSeNet" -> "speedinghzl/CCNet"
"ooooverflow/BiSeNet" -> "lxtGH/Fast_Seg"
"ooooverflow/BiSeNet" -> "speedinghzl/pytorch-segmentation-toolbox"
"ooooverflow/BiSeNet" -> "sacmehta/ESPNet"
"ooooverflow/BiSeNet" -> "DrSleep/light-weight-refinenet"
"ooooverflow/BiSeNet" -> "davidtvs/PyTorch-ENet"
"ooooverflow/BiSeNet" -> "Tramac/Fast-SCNN-pytorch"
"ooooverflow/BiSeNet" -> "zym1119/DeepLabv3_MobileNetv2_PyTorch"
"ooooverflow/BiSeNet" -> "VITA-Group/FasterSeg"
"StacyYang/gluoncv-torch" -> "zhreshold/ICCV19-GluonCV" ["e"=1]
"StacyYang/gluoncv-torch" -> "speedinghzl/pytorch-segmentation-toolbox"
"StacyYang/gluoncv-torch" -> "zhanghang1989/PyTorch-Encoding"
"StacyYang/gluoncv-torch" -> "openseg-group/OCNet.pytorch"
"StacyYang/gluoncv-torch" -> "lxtGH/OctaveConv_pytorch"
"StacyYang/gluoncv-torch" -> "lzx1413/PytorchSSD" ["e"=1]
"StacyYang/gluoncv-torch" -> "dmlc/gluon-cv" ["e"=1]
"StacyYang/gluoncv-torch" -> "wutianyiRosun/Segmentation.X"
"StacyYang/gluoncv-torch" -> "XiaLiPKU/EMANet"
"StacyYang/gluoncv-torch" -> "zengarden/light_head_rcnn" ["e"=1]
"StacyYang/gluoncv-torch" -> "yu-changqian/TorchSeg"
"StacyYang/gluoncv-torch" -> "chinakook/Awesome-MXNet" ["e"=1]
"StacyYang/gluoncv-torch" -> "wuhuikai/FastFCN"
"StacyYang/gluoncv-torch" -> "msracver/Relation-Networks-for-Object-Detection" ["e"=1]
"miraclewkf/SENet-PyTorch" -> "moskomule/senet.pytorch"
"miraclewkf/SENet-PyTorch" -> "pppLang/SKNet"
"miraclewkf/SENet-PyTorch" -> "luuuyi/CBAM.PyTorch"
"miraclewkf/SENet-PyTorch" -> "miraclewkf/ResNeXt-PyTorch"
"miraclewkf/SENet-PyTorch" -> "BangguWu/ECANet"
"miraclewkf/SENet-PyTorch" -> "tengshaofeng/ResidualAttentionNetwork-pytorch"
"miraclewkf/SENet-PyTorch" -> "AlexHex7/Non-local_pytorch"
"miraclewkf/SENet-PyTorch" -> "wuhuikai/FastFCN"
"miraclewkf/SENet-PyTorch" -> "junfu1115/DANet"
"miraclewkf/SENet-PyTorch" -> "LinZhuoChen/DUpsampling"
"miraclewkf/SENet-PyTorch" -> "taki0112/SENet-Tensorflow" ["e"=1]
"miraclewkf/SENet-PyTorch" -> "Jongchan/attention-module"
"miraclewkf/SENet-PyTorch" -> "houqb/CoordAttention"
"dmarcosg/DSAC" -> "dcheng-utoronto/darnet" ["e"=1]
"dmarcosg/DSAC" -> "AlexMa011/pytorch-polygon-rnn"
"dmarcosg/DSAC" -> "shirgur/ACDRNet" ["e"=1]
"Chrisding/seal" -> "Lavender105/DFF"
"Chrisding/seal" -> "anirudh-chakravarthy/CASENet"
"Chrisding/seal" -> "Chrisding/cityscapes-preprocess"
"Chrisding/seal" -> "nv-tlabs/STEAL"
"Chrisding/seal" -> "Chrisding/sbd-preprocess"
"xwjabc/hed" -> "Walstruzz/edge_eval_python"
"xwjabc/hed" -> "mayorx/rcf-edge-detection"
"xwjabc/hed" -> "meteorshowers/RCF-pytorch"
"xwjabc/hed" -> "sniklaus/pytorch-hed"
"xwjabc/hed" -> "meteorshowers/hed"
"xwjabc/hed" -> "MCG-NKU/plot-edge-pr-curves"
"xwjabc/hed" -> "MengyangPu/EDTER"
"xwjabc/hed" -> "yun-liu/RCF-PyTorch"
"xwjabc/hed" -> "zeakey/edgeval"
"xwjabc/hed" -> "buntyke/pytorch-hed"
"xwjabc/hed" -> "WHUHLX/CATS"
"xwjabc/hed" -> "s9xie/hed"
"xwjabc/hed" -> "anirudh-chakravarthy/CASENet"
"xwjabc/hed" -> "pkuCactus/BDCN"
"xwjabc/hed" -> "yun-liu/RCF"
"koshian2/OctConv-TFKeras" -> "titu1994/keras-octconv" ["e"=1]
"koshian2/OctConv-TFKeras" -> "facebookresearch/OctConv"
"koshian2/OctConv-TFKeras" -> "zrl4836/tensorflow_octConv"
"miraclewkf/ResNeXt-PyTorch" -> "prlz77/ResNeXt.pytorch" ["e"=1]
"miraclewkf/ResNeXt-PyTorch" -> "miraclewkf/SENet-PyTorch"
"miraclewkf/ResNeXt-PyTorch" -> "pppLang/SKNet"
"Gurupradeep/FCN-for-Semantic-Segmentation" -> "JihongJu/keras-fcn"
"Gurupradeep/FCN-for-Semantic-Segmentation" -> "lsh1994/keras-segmentation" ["e"=1]
"Gurupradeep/FCN-for-Semantic-Segmentation" -> "EsmeYi/UNet-CRF-RNN"
"Gurupradeep/FCN-for-Semantic-Segmentation" -> "aurora95/Keras-FCN"
"MiguelMonteiro/CRFasRNNLayer" -> "MiguelMonteiro/permutohedral_lattice"
"MiguelMonteiro/CRFasRNNLayer" -> "sadeepj/crfasrnn_keras"
"MiguelMonteiro/CRFasRNNLayer" -> "laoj2/segnet_crfasrnn"
"MiguelMonteiro/CRFasRNNLayer" -> "EsmeYi/UNet-CRF-RNN"
"MiguelMonteiro/CRFasRNNLayer" -> "KleinYuan/train-crfasrnn"
"nyoki-mtl/pytorch-segmentation" -> "speedinghzl/pytorch-segmentation-toolbox"
"nyoki-mtl/pytorch-segmentation" -> "YudeWang/deeplabv3plus-pytorch"
"nyoki-mtl/pytorch-segmentation" -> "CoinCheung/DeepLab-v3-plus-cityscapes"
"nyoki-mtl/pytorch-segmentation" -> "jfzhang95/pytorch-deeplab-xception"
"nyoki-mtl/pytorch-segmentation" -> "openseg-group/OCNet.pytorch"
"nyoki-mtl/pytorch-segmentation" -> "hualin95/Deeplab-v3plus"
"nyoki-mtl/pytorch-segmentation" -> "fregu856/deeplabv3"
"nyoki-mtl/pytorch-segmentation" -> "openseg-group/openseg.pytorch"
"nyoki-mtl/pytorch-segmentation" -> "lxtGH/GALD-DGCNet"
"nyoki-mtl/pytorch-segmentation" -> "DrSleep/light-weight-refinenet"
"nyoki-mtl/pytorch-segmentation" -> "linksense/LightNet"
"nyoki-mtl/pytorch-segmentation" -> "meetps/pytorch-semseg"
"nyoki-mtl/pytorch-segmentation" -> "yu-changqian/TorchSeg"
"nyoki-mtl/pytorch-segmentation" -> "hszhao/semseg"
"nyoki-mtl/pytorch-segmentation" -> "wutianyiRosun/CGNet"
"wctu/SEAL" -> "NVlabs/ssn_superpixels"
"wctu/SEAL" -> "bermanmaxim/superpixPool"
"jayrambhia/superpixels-SLIC" -> "laixintao/slic-python-implementation"
"jayrambhia/superpixels-SLIC" -> "aleenaniklaus/SLIC_superpixels"
"jayrambhia/superpixels-SLIC" -> "amueller/segmentation"
"MoritzWillig/pysnic" -> "achanta/SNIC"
"pochih/FCN-pytorch" -> "wkentaro/pytorch-fcn"
"pochih/FCN-pytorch" -> "bat67/pytorch-FCN-easiest-demo"
"pochih/FCN-pytorch" -> "yunlongdong/FCN-pytorch"
"pochih/FCN-pytorch" -> "zijundeng/pytorch-semantic-segmentation"
"pochih/FCN-pytorch" -> "Kaixhin/FCN-semantic-segmentation"
"pochih/FCN-pytorch" -> "bodokaiser/piwise"
"pochih/FCN-pytorch" -> "meetps/pytorch-semseg"
"pochih/FCN-pytorch" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"pochih/FCN-pytorch" -> "usuyama/pytorch-unet" ["e"=1]
"pochih/FCN-pytorch" -> "wkentaro/fcn"
"pochih/FCN-pytorch" -> "Tramac/awesome-semantic-segmentation-pytorch"
"pochih/FCN-pytorch" -> "yu-changqian/TorchSeg"
"pochih/FCN-pytorch" -> "yassouali/pytorch-segmentation"
"pochih/FCN-pytorch" -> "L1aoXingyu/fcn.pytorch"
"pochih/FCN-pytorch" -> "Lextal/pspnet-pytorch"
"VITA-Group/GLNet" -> "LinZhuoChen/DUpsampling"
"VITA-Group/GLNet" -> "lxtGH/GALD-DGCNet"
"VITA-Group/GLNet" -> "liqiokkk/FCtL"
"VITA-Group/GLNet" -> "cedricgsh/ISDNet"
"VITA-Group/GLNet" -> "jankyee/URUR"
"VITA-Group/GLNet" -> "speedinghzl/pytorch-segmentation-toolbox"
"VITA-Group/GLNet" -> "XiaLiPKU/EMANet"
"VITA-Group/GLNet" -> "shachoi/HANet"
"VITA-Group/GLNet" -> "orsic/swiftnet"
"VITA-Group/GLNet" -> "speedinghzl/CCNet"
"VITA-Group/GLNet" -> "hkchengrex/CascadePSP"
"VITA-Group/GLNet" -> "openseg-group/OCNet.pytorch"
"linksense/LightNetPlusPlus" -> "linksense/LightNet"
"isl-org/Intseg" -> "wdjang/BRS-Interactive_segmentation"
"isl-org/Intseg" -> "horvitzs/Interactive_Segmentation_Models"
"isl-org/Intseg" -> "MarcoForte/DeepInteractiveSegmentation"
"isl-org/Intseg" -> "sabarim/itis"
"dvornikita/blitznet" -> "MSiam/TFSegmentation"
"dvornikita/blitznet" -> "hszhao/ICNet"
"dvornikita/blitznet" -> "msracver/FCIS"
"AlexMa011/pytorch-polygon-rnn" -> "dmarcosg/DSAC"
"AlexMa011/pytorch-polygon-rnn" -> "fidler-lab/polyrnn-pp"
"AlexMa011/pytorch-polygon-rnn" -> "fidler-lab/polyrnn-pp-pytorch"
"orsic/swiftnet" -> "lxtGH/Fast_Seg"
"orsic/swiftnet" -> "PingoLH/FCHarDNet"
"orsic/swiftnet" -> "PingoLH/Pytorch-HarDNet"
"orsic/swiftnet" -> "huaifeng1993/DFANet"
"orsic/swiftnet" -> "yu-changqian/TorchSeg"
"orsic/swiftnet" -> "juntang-zhuang/ShelfNet"
"orsic/swiftnet" -> "ooooverflow/BiSeNet"
"orsic/swiftnet" -> "VITA-Group/FasterSeg"
"orsic/swiftnet" -> "Reagan1311/DABNet"
"orsic/swiftnet" -> "xiaoyufenfei/LEDNet"
"orsic/swiftnet" -> "AHupuJR/RFNet"
"orsic/swiftnet" -> "feinanshan/TDNet"
"orsic/swiftnet" -> "feinanshan/FANet"
"orsic/swiftnet" -> "LinZhuoChen/DUpsampling"
"orsic/swiftnet" -> "wutianyiRosun/CGNet"
"cm-jsw/GraphCut" -> "NathanZabriskie/GraphCut"
"XiangLi-Shaun/deformableConvolution_3D" -> "momenator/deform_conv"
"XiangLi-Shaun/deformableConvolution_3D" -> "lshiwjx/deform_conv3d_pytorch_op"
"Lextal/pspnet-pytorch" -> "hszhao/PSPNet"
"Lextal/pspnet-pytorch" -> "mehtanihar/pspnet"
"Lextal/pspnet-pytorch" -> "hszhao/semseg"
"Lextal/pspnet-pytorch" -> "isht7/pytorch-deeplab-resnet"
"Lextal/pspnet-pytorch" -> "speedinghzl/pytorch-segmentation-toolbox"
"Lextal/pspnet-pytorch" -> "zijundeng/pytorch-semantic-segmentation"
"Lextal/pspnet-pytorch" -> "bubbliiiing/pspnet-pytorch" ["e"=1]
"Lextal/pspnet-pytorch" -> "jfzhang95/pytorch-deeplab-xception"
"Lextal/pspnet-pytorch" -> "meetps/pytorch-semseg"
"Lextal/pspnet-pytorch" -> "speedinghzl/Pytorch-Deeplab"
"Lextal/pspnet-pytorch" -> "wkentaro/pytorch-fcn"
"Lextal/pspnet-pytorch" -> "zhanghang1989/PyTorch-Encoding"
"Lextal/pspnet-pytorch" -> "bodokaiser/piwise"
"Lextal/pspnet-pytorch" -> "yu-changqian/pytorch-segmentation"
"Lextal/pspnet-pytorch" -> "hellochick/PSPNet-tensorflow"
"zeakey/hed" -> "ylf-li/RCF-tensorflow"
"vivym/OctaveConv.pytorch" -> "amohant4/OctConv"
"lxtGH/GALD-DGCNet" -> "lxtGH/Fast_Seg"
"lxtGH/GALD-DGCNet" -> "lxtGH/DecoupleSegNets"
"lxtGH/GALD-DGCNet" -> "MendelXu/ANN"
"lxtGH/GALD-DGCNet" -> "openseg-group/openseg.pytorch"
"lxtGH/GALD-DGCNet" -> "openseg-group/OCNet.pytorch"
"lxtGH/GALD-DGCNet" -> "yu-changqian/ContextPrior"
"lxtGH/GALD-DGCNet" -> "shachoi/HANet"
"lxtGH/GALD-DGCNet" -> "speedinghzl/CCNet"
"lxtGH/GALD-DGCNet" -> "VITA-Group/GLNet"
"lxtGH/GALD-DGCNet" -> "yu-changqian/TorchSeg"
"lxtGH/GALD-DGCNet" -> "XiaLiPKU/EMANet"
"lxtGH/GALD-DGCNet" -> "speedinghzl/pytorch-segmentation-toolbox"
"lxtGH/GALD-DGCNet" -> "ZJULearning/RMI"
"lxtGH/GALD-DGCNet" -> "DeepMotionAIResearch/DenseASPP"
"lxtGH/GALD-DGCNet" -> "haofengac/RGMP" ["e"=1]
"jfzhang95/project-demo" -> "ZVsion/rgbd_image_segmentation"
"jfzhang95/project-demo" -> "jfzhang95/Chinese_Poem_Writer"
"jfzhang95/project-demo" -> "jfzhang95/LSTM-water-table-depth-prediction"
"wutianyiRosun/CGNet" -> "ooooverflow/BiSeNet"
"wutianyiRosun/CGNet" -> "Reagan1311/DABNet"
"wutianyiRosun/CGNet" -> "xiaoyufenfei/LEDNet"
"wutianyiRosun/CGNet" -> "openseg-group/OCNet.pytorch"
"wutianyiRosun/CGNet" -> "sacmehta/ESPNet"
"wutianyiRosun/CGNet" -> "sacmehta/ESPNetv2"
"wutianyiRosun/CGNet" -> "wpf535236337/real-time-network"
"wutianyiRosun/CGNet" -> "juntang-zhuang/ShelfNet"
"wutianyiRosun/CGNet" -> "Eromera/erfnet_pytorch"
"wutianyiRosun/CGNet" -> "DeepMotionAIResearch/DenseASPP"
"wutianyiRosun/CGNet" -> "hualin95/Deeplab-v3plus"
"wutianyiRosun/CGNet" -> "yu-changqian/TorchSeg"
"wutianyiRosun/CGNet" -> "orsic/swiftnet"
"wutianyiRosun/CGNet" -> "wutianyiRosun/Segmentation.X"
"HiDiYANG/gPb-GSoC" -> "vrabaud/gPb"
"shaoyuanlo/EDANet" -> "wpf535236337/pytorch_EDANet"
"juntang-zhuang/ShelfNet" -> "juntang-zhuang/ShelfNet-lw-cityscapes"
"juntang-zhuang/ShelfNet" -> "shaoyuanlo/EDANet"
"juntang-zhuang/ShelfNet" -> "orsic/swiftnet"
"juntang-zhuang/ShelfNet" -> "DrSleep/light-weight-refinenet"
"juntang-zhuang/ShelfNet" -> "wutianyiRosun/CGNet"
"horvitzs/Interactive_Segmentation_Models" -> "isl-org/Intseg"
"horvitzs/Interactive_Segmentation_Models" -> "wdjang/BRS-Interactive_segmentation"
"DeepSceneSeg/AdapNet-pp" -> "DeepSceneSeg/SSMA"
"DeepSceneSeg/SSMA" -> "DeepSceneSeg/AdapNet-pp"
"DeepSceneSeg/SSMA" -> "metahexane/ssma_pytorch"
"NathanZabriskie/GraphCut" -> "cm-jsw/GraphCut"
"NathanZabriskie/GraphCut" -> "syedhope/Graph-Cut"
"NathanZabriskie/GraphCut" -> "mjirik/imcut"
"NathanZabriskie/GraphCut" -> "Orcuslc/GrabCut"
"wdjang/BRS-Interactive_segmentation" -> "isl-org/Intseg"
"wdjang/BRS-Interactive_segmentation" -> "sabarim/itis"
"wdjang/BRS-Interactive_segmentation" -> "horvitzs/Interactive_Segmentation_Models"
"switchablenorms/Sparse_SwitchNorm" -> "switchablenorms/SwitchNorm_Segmentation"
"roflmaostc/Fast-Approximate-Energy-Minimization-via-Graph-Cuts" -> "k920049/Fast-Approximate-Energy-Minimization-via-Graph-Cuts"
"NikolasEnt/Road-Semantic-Segmentation" -> "JunshengFu/semantic_segmentation"
"zym1119/DeepLabv3_MobileNetv2_PyTorch" -> "lizhengwei1992/mobilenetv2_deeplabv3_pytorch"
"zym1119/DeepLabv3_MobileNetv2_PyTorch" -> "linksense/LightNet"
"wpf535236337/real-time-network" -> "xiaoyufenfei/Real-Time-Semantic-Segmentation"
"wpf535236337/real-time-network" -> "wutianyiRosun/CGNet"
"wpf535236337/real-time-network" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"wpf535236337/real-time-network" -> "Tramac/Lightweight-Segmentation"
"wpf535236337/real-time-network" -> "sacmehta/ESPNetv2"
"wpf535236337/real-time-network" -> "xiaoyufenfei/LEDNet"
"wpf535236337/real-time-network" -> "wutianyiRosun/Segmentation.X"
"wpf535236337/real-time-network" -> "linksense/LightNet"
"wpf535236337/real-time-network" -> "xiaoketongxue/AI-News" ["e"=1]
"wpf535236337/real-time-network" -> "yu-changqian/TorchSeg"
"wpf535236337/real-time-network" -> "guanfuchen/semseg"
"wpf535236337/real-time-network" -> "linksense/LightNetPlusPlus"
"huaifeng1993/DFANet" -> "ooooverflow/BiSeNet"
"huaifeng1993/DFANet" -> "xiaoyufenfei/LEDNet"
"huaifeng1993/DFANet" -> "orsic/swiftnet"
"huaifeng1993/DFANet" -> "yu-changqian/TorchSeg"
"huaifeng1993/DFANet" -> "Tramac/Fast-SCNN-pytorch"
"huaifeng1993/DFANet" -> "jandylin/DFANet_PyTorch"
"huaifeng1993/DFANet" -> "CoinCheung/BiSeNet"
"huaifeng1993/DFANet" -> "Reagan1311/DABNet"
"huaifeng1993/DFANet" -> "wutianyiRosun/CGNet"
"huaifeng1993/DFANet" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"huaifeng1993/DFANet" -> "huaifeng1993/Segmentation_of_Cloud_Images"
"huaifeng1993/DFANet" -> "davidtvs/PyTorch-ENet"
"pppLang/SKNet" -> "implus/SKNet"
"pppLang/SKNet" -> "ResearchingDexter/SKNet_pytorch"
"pppLang/SKNet" -> "developer0hye/SKNet-PyTorch"
"pppLang/SKNet" -> "implus/PytorchInsight"
"pppLang/SKNet" -> "wofmanaf/SA-Net"
"pppLang/SKNet" -> "moskomule/senet.pytorch"
"pppLang/SKNet" -> "xvjiarui/GCNet"
"pppLang/SKNet" -> "iduta/pyconv"
"pppLang/SKNet" -> "miraclewkf/SENet-PyTorch"
"pppLang/SKNet" -> "junfu1115/DANet"
"pppLang/SKNet" -> "BangguWu/ECANet"
"pppLang/SKNet" -> "DingXiaoH/ACNet"
"xiaoyufenfei/Real-Time-Semantic-Segmentation" -> "wpf535236337/real-time-network"
"choasup/SIN" -> "msracver/Relation-Networks-for-Object-Detection" ["e"=1]
"choasup/SIN" -> "endernewton/iter-reason"
"choasup/SIN" -> "Zardinality/TF_Deformable_Net"
"amiralansary/rl-medical" -> "thanosvlo/MARL-for-Anatomical-Landmark-Detection"
"amiralansary/rl-medical" -> "gml16/rl-medical"
"amiralansary/rl-medical" -> "swerwath/deeprl_segmentation"
"holyseven/PSPNet-TF-Reproduce" -> "hellochick/PSPNet-tensorflow"
"jfzhang95/DeepGrabCut-PyTorch" -> "ZVsion/rgbd_image_segmentation"
"jfzhang95/DeepGrabCut-PyTorch" -> "jfzhang95/LSTM-water-table-depth-prediction"
"jfzhang95/DeepGrabCut-PyTorch" -> "isl-org/Intseg"
"jfzhang95/DeepGrabCut-PyTorch" -> "jfzhang95/project-demo"
"jfzhang95/DeepGrabCut-PyTorch" -> "meng-tang/rloss" ["e"=1]
"jfzhang95/DeepGrabCut-PyTorch" -> "scaelles/DEXTR-PyTorch"
"jfzhang95/DeepGrabCut-PyTorch" -> "Orcuslc/GrabCut"
"jfzhang95/DeepGrabCut-PyTorch" -> "visinf/1-stage-wseg" ["e"=1]
"jfzhang95/DeepGrabCut-PyTorch" -> "horvitzs/Interactive_Segmentation_Models"
"oandrienko/fast-semantic-segmentation" -> "hellochick/ICNet-tensorflow"
"oandrienko/fast-semantic-segmentation" -> "hszhao/ICNet"
"oandrienko/fast-semantic-segmentation" -> "MSiam/TFSegmentation"
"oandrienko/fast-semantic-segmentation" -> "aitorzip/Keras-ICNet"
"Raj-08/tensorflow-object-contour-detection" -> "jimeiyang/objectContourDetector"
"Raj-08/tensorflow-object-contour-detection" -> "dlam4h/OCD-PyTorch"
"Raj-08/tensorflow-object-contour-detection" -> "ylf-li/ContourGAN"
"xmojiao/deeplab_v2" -> "xmyqsh/deeplab-v2"
"xmojiao/deeplab_v2" -> "BassyKuo/PSPNET-cudnn5"
"xmojiao/deeplab_v2" -> "eveningdong/DeepLabV3-Tensorflow"
"xmojiao/deeplab_v2" -> "yilei0620/RGBD-Slam-Semantic-Seg-DeepLab" ["e"=1]
"xmojiao/deeplab_v2" -> "TheLegendAli/DeepLab-Context"
"xmojiao/deeplab_v2" -> "zhengyang-wang/Deeplab-v2--ResNet-101--Tensorflow"
"xmojiao/deeplab_v2" -> "TimoSaemann/caffe-segnet-cudnn5"
"anirudh-chakravarthy/CASENet" -> "Lavender105/DFF"
"anirudh-chakravarthy/CASENet" -> "Chrisding/cityscapes-preprocess"
"anirudh-chakravarthy/CASENet" -> "Chrisding/seal"
"anirudh-chakravarthy/CASENet" -> "Chrisding/sbd-preprocess"
"anirudh-chakravarthy/CASENet" -> "lijiaman/CASENet"
"anirudh-chakravarthy/CASENet" -> "yun-liu/DDS"
"Tramac/mobilenetv3-segmentation" -> "Vipermdl/MobileNetV3-for-Segmentation"
"thanosvlo/MARL-for-Anatomical-Landmark-Detection" -> "gml16/rl-medical"
"thanosvlo/MARL-for-Anatomical-Landmark-Detection" -> "amiralansary/rl-medical"
"thanosvlo/MARL-for-Anatomical-Landmark-Detection" -> "swerwath/deeprl_segmentation"
"lexfridman/boring-detector" -> "chrmi/DeepTraffic3D"
"ZVsion/rgbd_image_segmentation" -> "jfzhang95/project-demo"
"ZVsion/rgbd_image_segmentation" -> "jfzhang95/LSTM-water-table-depth-prediction"
"ZVsion/rgbd_image_segmentation" -> "jfzhang95/Chinese_Poem_Writer"
"scaelles/DEXTR-KerasTensorflow" -> "scaelles/DEXTR-PyTorch"
"scaelles/DEXTR-KerasTensorflow" -> "horvitzs/Interactive_Segmentation_Models"
"moetayuko/GrabCut" -> "Orcuslc/GrabCut"
"moetayuko/GrabCut" -> "guyuchao/Grabcut"
"coderSkyChen/Iterative-Visual-Reasoning.pytorch" -> "endernewton/iter-reason"
"MCG-NKU/plot-edge-pr-curves" -> "yun-liu/plot-edge-pr-curves"
"MCG-NKU/plot-edge-pr-curves" -> "zeakey/edgeval"
"MCG-NKU/plot-edge-pr-curves" -> "mayorx/rcf-edge-detection"
"MCG-NKU/plot-edge-pr-curves" -> "WHUHLX/CATS"
"divelab/dilated" -> "ThomasZiegler/Efficient-Smoothing-of-Dilated-Convolutions"
"Finspire13/RL-Surgical-Gesture-Segmentation" -> "swerwath/deeprl_segmentation"
"BIGKnight/deformable_conv2d_pytorch" -> "huangtinglin/PyTorch-extension-Convolution"
"BIGKnight/deformable_conv2d_pytorch" -> "BIGKnight/deformable_conv2d_v2_tensorflow"
"zhengyang-wang/Deeplab-v2--ResNet-101--Tensorflow" -> "DrSleep/tensorflow-deeplab-resnet"
"zhengyang-wang/Deeplab-v2--ResNet-101--Tensorflow" -> "eveningdong/DeepLabV3-Tensorflow"
"zhengyang-wang/Deeplab-v2--ResNet-101--Tensorflow" -> "DrSleep/tensorflow-deeplab-lfov"
"zhengyang-wang/Deeplab-v2--ResNet-101--Tensorflow" -> "zhengyang-wang/Unet_3D" ["e"=1]
"yun-liu/DEL" -> "bermanmaxim/superpixPool"
"yun-liu/DEL" -> "DensoITLab/ss-with-RIM"
"zeakey/edgeval" -> "Walstruzz/edge_eval_python"
"eragonruan/refinenet-image-segmentation" -> "thomasjpfan/pytorch_refinenet"
"eragonruan/refinenet-image-segmentation" -> "guosheng/refinenet"
"eragonruan/refinenet-image-segmentation" -> "alisure-ml/Semantic-Segmentation-RefineNet"
"eragonruan/refinenet-image-segmentation" -> "markshih91/refinenet_pytorch"
"HasnainRaz/FC-DenseNet-TensorFlow" -> "0bserver07/One-Hundred-Layers-Tiramisu"
"meteorshowers/hed" -> "sniklaus/pytorch-hed"
"meteorshowers/hed" -> "xwjabc/hed"
"meteorshowers/hed" -> "lc82111/Keras_HED"
"meteorshowers/hed" -> "BinWang-shu/pytorch_hed"
"meteorshowers/hed" -> "chongruo/pytorch-HED"
"meteorshowers/hed" -> "meteorshowers/RCF-pytorch"
"huaifeng1993/Segmentation_of_Cloud_Images" -> "vedantk-b/Cloud-Segmentation-from-Satellite-Imagery"
"Duchen521/HED-document-detection" -> "mingliangzhang2018/EAST-Pytorch"
"johannesu/meanfield-matlab" -> "ClaireXie/denseCRF_matlab"
"mayorx/rcf-edge-detection" -> "xwjabc/hed"
"srihari-humbarwadi/DeepLabV3_Plus-Tensorflow2.0" -> "lattice-ai/DeepLabV3-Plus"
"srihari-humbarwadi/DeepLabV3_Plus-Tensorflow2.0" -> "Golbstein/Keras-segmentation-deeplab-v3.1"
"srihari-humbarwadi/DeepLabV3_Plus-Tensorflow2.0" -> "advaitsave/Multiclass-Semantic-Segmentation-CamVid" ["e"=1]
"lexfridman/cocoapi" -> "lexfridman/github-changelog-generator"
"lexfridman/cocoapi" -> "lexfridman/keep-a-changelog"
"BGU-CS-VIL/DPMMSubClusters.jl" -> "BGU-CS-VIL/dpmmpython"
"BGU-CS-VIL/DPMMSubClusters.jl" -> "BGU-CS-VIL/JA-POLS"
"BGU-CS-VIL/DPMMSubClusters.jl" -> "BGU-CS-VIL/SpaceJAM"
"Angzz/panoptic-fpn-gluon" -> "ElephantGit/SemanticSegmentationUsingFPN_PanopticFeaturePyramidNetworks"
"Chrisding/sbd-preprocess" -> "Chrisding/cityscapes-preprocess"
"Chrisding/sbd-preprocess" -> "lijiaman/CASENet"
"milongo/CASENet" -> "Chrisding/cityscapes-preprocess"
"Chrisding/cityscapes-preprocess" -> "Chrisding/sbd-preprocess"
"Chrisding/cityscapes-preprocess" -> "lijiaman/CASENet"
"liyemei/densecrf" -> "zhaohengz/DenseCRF-545"
"liyemei/densecrf" -> "ClaireXie/denseCRF_matlab"
"junjungoal/Tiramisu-keras" -> "lukszamarcin/100-tiramisu-keras"
"yujiali/pygco" -> "amueller/gco_python"
"lxtGH/dfn_seg" -> "YuhuiMa/DFN-tensorflow"
"conan7882/recurrent-attention-model" -> "jtkim-kaist/ram_modified"
"switchablenorms/SwitchNorm_Detection" -> "switchablenorms/SwitchNorm_Segmentation"
"lijiaman/CASENet" -> "Chrisding/cityscapes-preprocess"
"lijiaman/CASENet" -> "Chrisding/sbd-preprocess"
"wpf535236337/pytorch_EDANet" -> "shaoyuanlo/EDANet"
"lexfridman/keras-retinanet" -> "lexfridman/vidstep"
"lexfridman/keras-retinanet" -> "lexfridman/keep-a-changelog"
"lexfridman/keras-retinanet" -> "lexfridman/github-changelog-generator"
"wlguan/DHSNet-PyTorch" -> "zengxianyu/RFCN"
"SamsungLabs/fbrs_interactive_segmentation" -> "SamsungLabs/ritm_interactive_segmentation"
"SamsungLabs/fbrs_interactive_segmentation" -> "shiyinzhang/Inside-Outside-Guidance"
"SamsungLabs/fbrs_interactive_segmentation" -> "XavierCHEN34/ClickSEG"
"SamsungLabs/fbrs_interactive_segmentation" -> "wdjang/BRS-Interactive_segmentation"
"SamsungLabs/fbrs_interactive_segmentation" -> "frazerlin/fcanet"
"SamsungLabs/fbrs_interactive_segmentation" -> "hkchengrex/MiVOS" ["e"=1]
"SamsungLabs/fbrs_interactive_segmentation" -> "MarcoForte/DeepInteractiveSegmentation"
"SamsungLabs/fbrs_interactive_segmentation" -> "hkchengrex/STCN" ["e"=1]
"SamsungLabs/fbrs_interactive_segmentation" -> "isl-org/Intseg"
"SamsungLabs/fbrs_interactive_segmentation" -> "scaelles/DEXTR-PyTorch"
"SamsungLabs/fbrs_interactive_segmentation" -> "z-x-yang/CFBI" ["e"=1]
"SamsungLabs/fbrs_interactive_segmentation" -> "liewjunhao/thin-object-selection"
"SamsungLabs/fbrs_interactive_segmentation" -> "uncbiag/SimpleClick"
"SamsungLabs/fbrs_interactive_segmentation" -> "MarcoForte/FBA_Matting" ["e"=1]
"SamsungLabs/fbrs_interactive_segmentation" -> "SamsungLabs/adaptis"
"YimianDai/open-aff" -> "BangguWu/ECANet"
"YimianDai/open-aff" -> "landskape-ai/triplet-attention"
"YimianDai/open-aff" -> "houqb/CoordAttention"
"YimianDai/open-aff" -> "dongzhang89/FPT"
"YimianDai/open-aff" -> "pprp/awesome-attention-mechanism-in-cv"
"YimianDai/open-aff" -> "cfzd/FcaNet"
"YimianDai/open-aff" -> "murufeng/EPSANet"
"YimianDai/open-aff" -> "d-li14/PSConv"
"YimianDai/open-aff" -> "iduta/pyconv"
"YimianDai/open-aff" -> "ma-xu/DCANet"
"YimianDai/open-aff" -> "Jongchan/attention-module"
"YimianDai/open-aff" -> "xvjiarui/GCNet"
"YimianDai/open-aff" -> "QY1994-0919/CFPNet" ["e"=1]
"YimianDai/open-aff" -> "MCG-NKU/SCNet"
"YimianDai/open-aff" -> "luuuyi/CBAM.PyTorch"
"Deeachain/Segmentation-Pytorch" -> "LikeLy-Journey/SegmenTron"
"Deeachain/Segmentation-Pytorch" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"Deeachain/Segmentation-Pytorch" -> "ydhongHIT/DDRNet"
"Deeachain/Segmentation-Pytorch" -> "Minerva-J/Pytorch-Segmentation-multi-models"
"Deeachain/Segmentation-Pytorch" -> "chenjun2hao/DDRNet.pytorch"
"Deeachain/Segmentation-Pytorch" -> "fuweifu-vtoo/Semantic-segmentation" ["e"=1]
"Deeachain/Segmentation-Pytorch" -> "bubbliiiing/segformer-pytorch" ["e"=1]
"Deeachain/Segmentation-Pytorch" -> "sithu31296/semantic-segmentation"
"Deeachain/Segmentation-Pytorch" -> "CoinCheung/BiSeNet"
"Deeachain/Segmentation-Pytorch" -> "SegmentationBLWX/sssegmentation"
"Deeachain/Segmentation-Pytorch" -> "MichaelFan01/STDC-Seg"
"Deeachain/Segmentation-Pytorch" -> "Tramac/awesome-semantic-segmentation-pytorch"
"Deeachain/Segmentation-Pytorch" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" ["e"=1]
"Deeachain/Segmentation-Pytorch" -> "yadongJiang/En_bisenetv2"
"Deeachain/Segmentation-Pytorch" -> "yassouali/pytorch-segmentation"
"shachoi/HANet" -> "yu-changqian/ContextPrior"
"shachoi/HANet" -> "lxtGH/Fast_Seg"
"shachoi/HANet" -> "feinanshan/TDNet"
"shachoi/HANet" -> "lxtGH/GALD-DGCNet"
"shachoi/HANet" -> "houqb/SPNet"
"shachoi/HANet" -> "Megvii-BaseDetection/DynamicRouting"
"shachoi/HANet" -> "LinZhuoChen/DUpsampling"
"pdollar/edges" -> "pdollar/toolbox" ["e"=1]
"pdollar/edges" -> "s9xie/hed"
"pdollar/edges" -> "yun-liu/RCF"
"pdollar/edges" -> "jponttuset/mcg"
"pdollar/edges" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"pdollar/edges" -> "torrvision/crfasrnn"
"pdollar/edges" -> "meteorshowers/RCF-pytorch"
"pdollar/edges" -> "daijifeng001/R-FCN" ["e"=1]
"pdollar/edges" -> "Cloud-CV/object-proposals"
"pdollar/edges" -> "ArtanisCV/StructuredForests"
"pdollar/edges" -> "xwjabc/hed"
"pdollar/edges" -> "rbgirshick/voc-dpm" ["e"=1]
"pdollar/edges" -> "samarth-robo/edges"
"pdollar/edges" -> "ShaoqingRen/SPP_net" ["e"=1]
"pdollar/edges" -> "shenwei1231/DeepContour" ["e"=1]
"lattice-ai/DeepLabV3-Plus" -> "srihari-humbarwadi/DeepLabV3_Plus-Tensorflow2.0"
"lattice-ai/DeepLabV3-Plus" -> "srihari-humbarwadi/person_segmentation_tf2.0"
"lxtGH/SFSegNets" -> "lxtGH/DecoupleSegNets"
"lxtGH/SFSegNets" -> "MichaelFan01/STDC-Seg"
"lxtGH/SFSegNets" -> "speedinghzl/AlignSeg" ["e"=1]
"lxtGH/SFSegNets" -> "ydhongHIT/DDRNet"
"lxtGH/SFSegNets" -> "Qualcomm-AI-research/InverseForm"
"lxtGH/SFSegNets" -> "lxtGH/Fast_Seg"
"lxtGH/SFSegNets" -> "openseg-group/openseg.pytorch"
"lxtGH/SFSegNets" -> "LikeLy-Journey/SegmenTron"
"lxtGH/SFSegNets" -> "lxtGH/PFSegNets" ["e"=1]
"lxtGH/SFSegNets" -> "XiaLiPKU/EMANet"
"lxtGH/SFSegNets" -> "W-zx-Y/DANNet" ["e"=1]
"lxtGH/SFSegNets" -> "donnyyou/torchcv" ["e"=1]
"lxtGH/SFSegNets" -> "XuJiacong/PIDNet"
"lxtGH/SFSegNets" -> "feinanshan/FANet"
"lxtGH/SFSegNets" -> "yu-changqian/ContextPrior"
"MaybeShewill-CV/bisenetv2-tensorflow" -> "kirilcvetkov92/Semantic-Segmentation-BiSeNet" ["e"=1]
"MaybeShewill-CV/bisenetv2-tensorflow" -> "CoinCheung/BiSeNet"
"MaybeShewill-CV/bisenetv2-tensorflow" -> "markus-k/bisenetv2-tf2"
"Cloud-CV/object-proposals" -> "hosang/detection-proposals"
"Cloud-CV/object-proposals" -> "samarth-robo/edges"
"Minerva-J/Pytorch-Segmentation-multi-models" -> "Deeachain/Segmentation-Pytorch"
"Minerva-J/Pytorch-Segmentation-multi-models" -> "charlesCXK/PyTorch_Semantic_Segmentation" ["e"=1]
"Megvii-BaseDetection/TreeFilter-Torch" -> "StevenGrove/LearnableTreeFilterV2"
"Megvii-BaseDetection/TreeFilter-Torch" -> "megvii-research/TreeEnergyLoss"
"landskape-ai/triplet-attention" -> "houqb/CoordAttention"
"landskape-ai/triplet-attention" -> "YimianDai/open-aff"
"landskape-ai/triplet-attention" -> "MCG-NKU/SCNet"
"landskape-ai/triplet-attention" -> "d-li14/PSConv"
"landskape-ai/triplet-attention" -> "wofmanaf/SA-Net"
"landskape-ai/triplet-attention" -> "murufeng/EPSANet"
"landskape-ai/triplet-attention" -> "BangguWu/ECANet"
"landskape-ai/triplet-attention" -> "megvii-model/WeightNet"
"landskape-ai/triplet-attention" -> "lucidrains/lambda-networks" ["e"=1]
"landskape-ai/triplet-attention" -> "xvjiarui/GCNet"
"landskape-ai/triplet-attention" -> "iduta/pyconv"
"landskape-ai/triplet-attention" -> "ma-xu/DCANet"
"landskape-ai/triplet-attention" -> "houqb/SPNet"
"landskape-ai/triplet-attention" -> "pppLang/SKNet"
"landskape-ai/triplet-attention" -> "dcdcvgroup/FcaNet"
"bowenc0221/panoptic-deeplab" -> "DeepSceneSeg/EfficientPS"
"bowenc0221/panoptic-deeplab" -> "dvlab-research/PanopticFCN"
"bowenc0221/panoptic-deeplab" -> "uber-research/UPSNet"
"bowenc0221/panoptic-deeplab" -> "Angzz/awesome-panoptic-segmentation"
"bowenc0221/panoptic-deeplab" -> "mcahny/vps"
"bowenc0221/panoptic-deeplab" -> "cocodataset/panopticapi"
"bowenc0221/panoptic-deeplab" -> "openseg-group/openseg.pytorch"
"bowenc0221/panoptic-deeplab" -> "csrhddlam/axial-deeplab"
"bowenc0221/panoptic-deeplab" -> "NVIDIA/semantic-segmentation"
"bowenc0221/panoptic-deeplab" -> "joe-siyuan-qiao/ViP-DeepLab"
"bowenc0221/panoptic-deeplab" -> "facebookresearch/MaskFormer" ["e"=1]
"bowenc0221/panoptic-deeplab" -> "YudeWang/deeplabv3plus-pytorch"
"bowenc0221/panoptic-deeplab" -> "LaoYang1994/SOGNet"
"bowenc0221/panoptic-deeplab" -> "mcordts/cityscapesScripts"
"bowenc0221/panoptic-deeplab" -> "facebookresearch/Mask2Former" ["e"=1]
"Serge-weihao/CCNet-Pure-Pytorch" -> "speedinghzl/CCNet"
"BangguWu/ECANet" -> "Jongchan/attention-module"
"BangguWu/ECANet" -> "houqb/CoordAttention"
"BangguWu/ECANet" -> "xvjiarui/GCNet"
"BangguWu/ECANet" -> "luuuyi/CBAM.PyTorch"
"BangguWu/ECANet" -> "junfu1115/DANet"
"BangguWu/ECANet" -> "moskomule/senet.pytorch"
"BangguWu/ECANet" -> "wofmanaf/SA-Net"
"BangguWu/ECANet" -> "YimianDai/open-aff"
"BangguWu/ECANet" -> "speedinghzl/CCNet"
"BangguWu/ECANet" -> "implus/PytorchInsight"
"BangguWu/ECANet" -> "cfzd/FcaNet"
"BangguWu/ECANet" -> "Res2Net/Res2Net-PretrainedModels"
"BangguWu/ECANet" -> "zhanghang1989/ResNeSt" ["e"=1]
"BangguWu/ECANet" -> "murufeng/EPSANet"
"BangguWu/ECANet" -> "implus/SKNet"
"yitu-opensource/MobileNeXt" -> "zhoudaquan/rethinking_bottleneck_design"
"qiulinzhang/SPConv.pytorch" -> "megvii-model/WeightNet"
"qiulinzhang/SPConv.pytorch" -> "d-li14/PSConv"
"PingoLH/Pytorch-HarDNet" -> "PingoLH/FCHarDNet"
"PingoLH/Pytorch-HarDNet" -> "PingoLH/CenterNet-HarDNet"
"PingoLH/Pytorch-HarDNet" -> "orsic/swiftnet"
"PingoLH/Pytorch-HarDNet" -> "VITA-Group/FasterSeg"
"PingoLH/Pytorch-HarDNet" -> "PingoLH/PytorchSSD-HarDNet"
"PingoLH/Pytorch-HarDNet" -> "james128333/HarDNet-MSEG" ["e"=1]
"PingoLH/Pytorch-HarDNet" -> "feinanshan/TDNet"
"PingoLH/Pytorch-HarDNet" -> "lxtGH/Fast_Seg"
"PingoLH/Pytorch-HarDNet" -> "DagnyT/hardnet" ["e"=1]
"PingoLH/FCHarDNet" -> "PingoLH/Pytorch-HarDNet"
"PingoLH/FCHarDNet" -> "PingoLH/CenterNet-HarDNet"
"PingoLH/FCHarDNet" -> "orsic/swiftnet"
"PingoLH/FCHarDNet" -> "lxtGH/Fast_Seg"
"PingoLH/FCHarDNet" -> "VITA-Group/FasterSeg"
"PingoLH/FCHarDNet" -> "feinanshan/TDNet"
"PingoLH/CenterNet-HarDNet" -> "PingoLH/Pytorch-HarDNet"
"PingoLH/CenterNet-HarDNet" -> "PingoLH/FCHarDNet"
"kaix90/DCTNet" -> "PSCLab-ASU/Learning-in-the-Frequency-Domain"
"kaix90/DCTNet" -> "cfzd/FcaNet"
"kaix90/DCTNet" -> "uber-research/jpeg2dct"
"kaix90/DCTNet" -> "dcdcvgroup/FcaNet"
"kaix90/DCTNet" -> "zh217/torch-dct"
"kaix90/DCTNet" -> "VisibleShadow/Implementation-of-Detecting-Camouflaged-Object-in-Frequency-Domain"
"kaix90/DCTNet" -> "raoyongming/GFNet" ["e"=1]
"kaix90/DCTNet" -> "cc-hpc-itwm/UpConv" ["e"=1]
"kaix90/DCTNet" -> "yyk-wew/F3Net" ["e"=1]
"kaix90/DCTNet" -> "LiQiufu/WaveCNet" ["e"=1]
"kaix90/DCTNet" -> "pkuxmq/Invertible-Image-Rescaling" ["e"=1]
"kaix90/DCTNet" -> "EndlessSora/focal-frequency-loss" ["e"=1]
"kaix90/DCTNet" -> "RUB-SysSec/GANDCTAnalysis" ["e"=1]
"kaix90/DCTNet" -> "HaohanWang/HFC" ["e"=1]
"kaix90/DCTNet" -> "fbcotter/pytorch_wavelets" ["e"=1]
"VITA-Group/FasterSeg" -> "lxtGH/Fast_Seg"
"VITA-Group/FasterSeg" -> "DrSleep/nas-segm-pytorch" ["e"=1]
"VITA-Group/FasterSeg" -> "PingoLH/FCHarDNet"
"VITA-Group/FasterSeg" -> "yu-changqian/TorchSeg"
"VITA-Group/FasterSeg" -> "PingoLH/Pytorch-HarDNet"
"VITA-Group/FasterSeg" -> "orsic/swiftnet"
"VITA-Group/FasterSeg" -> "JaminFong/DenseNAS" ["e"=1]
"VITA-Group/FasterSeg" -> "Megvii-BaseDetection/DynamicRouting"
"VITA-Group/FasterSeg" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"VITA-Group/FasterSeg" -> "LikeLy-Journey/SegmenTron"
"VITA-Group/FasterSeg" -> "CoinCheung/BiSeNet"
"VITA-Group/FasterSeg" -> "MichaelFan01/STDC-Seg"
"VITA-Group/FasterSeg" -> "openseg-group/openseg.pytorch"
"VITA-Group/FasterSeg" -> "NoamRosenberg/autodeeplab" ["e"=1]
"VITA-Group/FasterSeg" -> "megvii-model/DetNAS" ["e"=1]
"megvii-model/MABN" -> "megvii-model/LabelEnc"
"fuy34/superpixel_fcn" -> "NVlabs/ssn_superpixels"
"fuy34/superpixel_fcn" -> "perrying/ssn-pytorch"
"fuy34/superpixel_fcn" -> "bermanmaxim/superpixPool"
"fuy34/superpixel_fcn" -> "davidstutz/superpixel-benchmark"
"fuy34/superpixel_fcn" -> "CYang0515/pytorch_ssn"
"fuy34/superpixel_fcn" -> "wctu/SEAL"
"fuy34/superpixel_fcn" -> "zh460045050/LNSNet"
"fuy34/superpixel_fcn" -> "BGU-CS-VIL/BASS"
"fuy34/superpixel_fcn" -> "DensoITLab/ss-with-RIM"
"fuy34/superpixel_fcn" -> "HoinJung/SuperpixelGCN-Segmentation"
"fuy34/superpixel_fcn" -> "JianqiangWan/Super-BPD"
"fuy34/superpixel_fcn" -> "yu-changqian/ContextPrior"
"fuy34/superpixel_fcn" -> "lxtGH/GALD-DGCNet"
"fuy34/superpixel_fcn" -> "Algy/fast-slic"
"fuy34/superpixel_fcn" -> "fuy34/SPPSMStereo"
"sadeepj/crfasrnn_pytorch" -> "MiguelMonteiro/CRFasRNNLayer"
"sadeepj/crfasrnn_pytorch" -> "HapeMask/crfrnn_layer"
"sadeepj/crfasrnn_pytorch" -> "sadeepj/densecrf_np"
"sadeepj/crfasrnn_pytorch" -> "MarvinTeichmann/ConvCRF"
"sadeepj/crfasrnn_pytorch" -> "HiLab-git/SimpleCRF" ["e"=1]
"sadeepj/crfasrnn_pytorch" -> "MiguelMonteiro/permutohedral_lattice"
"sadeepj/crfasrnn_pytorch" -> "sadeepj/crfasrnn_keras"
"sadeepj/crfasrnn_pytorch" -> "lucasb-eyer/pydensecrf"
"mafeimf/Attention-Graph-Convolution-Network-for-Image-Segmentation-in-Big-SAR-Imagery-Data" -> "DingLei14/SARSeg"
"mafeimf/Attention-Graph-Convolution-Network-for-Image-Segmentation-in-Big-SAR-Imagery-Data" -> "HoinJung/SuperpixelGCN-Segmentation"
"lxtGH/DecoupleSegNets" -> "nv-tlabs/GSCNN"
"lxtGH/DecoupleSegNets" -> "hehao13/EBLNet"
"lxtGH/DecoupleSegNets" -> "lxtGH/SFSegNets"
"lxtGH/DecoupleSegNets" -> "lxtGH/GALD-DGCNet"
"lxtGH/DecoupleSegNets" -> "yu-changqian/ContextPrior"
"lxtGH/DecoupleSegNets" -> "openseg-group/openseg.pytorch"
"lxtGH/DecoupleSegNets" -> "hkchengrex/CascadePSP"
"lxtGH/DecoupleSegNets" -> "wanglixilinx/DSRL"
"lxtGH/DecoupleSegNets" -> "henghuiding/BFP" ["e"=1]
"lxtGH/DecoupleSegNets" -> "CWanli/RecoNet"
"lxtGH/DecoupleSegNets" -> "fudan-zvg/SETR"
"lxtGH/DecoupleSegNets" -> "shachoi/HANet"
"lxtGH/DecoupleSegNets" -> "zrl4836/ACFNet"
"lxtGH/DecoupleSegNets" -> "irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation"
"lxtGH/DecoupleSegNets" -> "speedinghzl/pytorch-segmentation-toolbox"
"lucidrains/axial-attention" -> "csrhddlam/axial-deeplab"
"zsef123/PointRend-PyTorch" -> "JamesQFreeman/PointRend"
"zsef123/PointRend-PyTorch" -> "LikeLy-Journey/SegmenTron"
"zsef123/PointRend-PyTorch" -> "nv-tlabs/GSCNN"
"zsef123/PointRend-PyTorch" -> "lxtGH/DecoupleSegNets"
"zsef123/PointRend-PyTorch" -> "YudeWang/deeplabv3plus-pytorch"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "LikeLy-Journey/SegmenTron"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "wpf535236337/real-time-network"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "Tramac/awesome-semantic-segmentation-pytorch"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "Deeachain/Segmentation-Pytorch"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "Tramac/Lightweight-Segmentation"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "VITA-Group/FasterSeg"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "yu-changqian/TorchSeg"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "CoinCheung/BiSeNet"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "guanfuchen/semseg"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "Tramac/Fast-SCNN-pytorch"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "yassouali/pytorch-segmentation"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "xiaoyufenfei/LEDNet"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "hszhao/semseg"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "xiaoyufenfei/Real-Time-Semantic-Segmentation"
"xiaoyufenfei/Efficient-Segmentation-Networks" -> "lxtGH/Fast_Seg"
"csrhddlam/axial-deeplab" -> "lucidrains/axial-attention"
"csrhddlam/axial-deeplab" -> "bowenc0221/panoptic-deeplab"
"csrhddlam/axial-deeplab" -> "conradry/max-deeplab"
"csrhddlam/axial-deeplab" -> "openseg-group/openseg.pytorch"
"csrhddlam/axial-deeplab" -> "lxtGH/DecoupleSegNets"
"csrhddlam/axial-deeplab" -> "fudan-zvg/SETR"
"csrhddlam/axial-deeplab" -> "jeya-maria-jose/Medical-Transformer" ["e"=1]
"csrhddlam/axial-deeplab" -> "speedinghzl/CCNet"
"csrhddlam/axial-deeplab" -> "lxtGH/GALD-DGCNet"
"csrhddlam/axial-deeplab" -> "dvlab-research/PanopticFCN"
"csrhddlam/axial-deeplab" -> "DeepSceneSeg/EfficientPS"
"csrhddlam/axial-deeplab" -> "joe-siyuan-qiao/ViP-DeepLab"
"csrhddlam/axial-deeplab" -> "google-research/deeplab2"
"csrhddlam/axial-deeplab" -> "visinf/1-stage-wseg" ["e"=1]
"LikeLy-Journey/SegmenTron" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"LikeLy-Journey/SegmenTron" -> "Tramac/awesome-semantic-segmentation-pytorch"
"LikeLy-Journey/SegmenTron" -> "openseg-group/openseg.pytorch"
"LikeLy-Journey/SegmenTron" -> "Deeachain/Segmentation-Pytorch"
"LikeLy-Journey/SegmenTron" -> "zsef123/PointRend-PyTorch"
"LikeLy-Journey/SegmenTron" -> "NVIDIA/semantic-segmentation"
"LikeLy-Journey/SegmenTron" -> "VITA-Group/FasterSeg"
"LikeLy-Journey/SegmenTron" -> "lxtGH/Fast_Seg"
"LikeLy-Journey/SegmenTron" -> "Media-Smart/vedaseg" ["e"=1]
"LikeLy-Journey/SegmenTron" -> "hszhao/semseg"
"LikeLy-Journey/SegmenTron" -> "CoinCheung/BiSeNet"
"LikeLy-Journey/SegmenTron" -> "lxtGH/SFSegNets"
"LikeLy-Journey/SegmenTron" -> "YudeWang/deeplabv3plus-pytorch"
"LikeLy-Journey/SegmenTron" -> "yu-changqian/TorchSeg"
"LikeLy-Journey/SegmenTron" -> "speedinghzl/CCNet"
"dongzhang89/FPT" -> "d-li14/PSConv"
"dongzhang89/FPT" -> "iduta/pyconv"
"dongzhang89/FPT" -> "implus/GFocal" ["e"=1]
"dongzhang89/FPT" -> "implus/GFocalV2" ["e"=1]
"dongzhang89/FPT" -> "megvii-model/WeightNet"
"dongzhang89/FPT" -> "ma-xu/DCANet"
"dongzhang89/FPT" -> "Meituan-AutoML/Twins" ["e"=1]
"dongzhang89/FPT" -> "yangyanli/DO-Conv"
"dongzhang89/FPT" -> "YimianDai/open-aff"
"dongzhang89/FPT" -> "jshilong/SEPC" ["e"=1]
"dongzhang89/FPT" -> "EMI-Group/FaPN" ["e"=1]
"dongzhang89/FPT" -> "MendelXu/ANN"
"ZJULearning/RMI" -> "MendelXu/ANN"
"ZJULearning/RMI" -> "twke18/Adaptive_Affinity_Fields"
"ZJULearning/RMI" -> "lxtGH/GALD-DGCNet"
"ZJULearning/RMI" -> "shachoi/HANet"
"yangyanli/DO-Conv" -> "iduta/pyconv"
"yangyanli/DO-Conv" -> "Nandan91/ULSAM"
"yangyanli/DO-Conv" -> "d-li14/PSConv"
"yangyanli/DO-Conv" -> "ma-xu/DCANet"
"yangyanli/DO-Conv" -> "megvii-model/WeightNet"
"yangyanli/DO-Conv" -> "zhoudaquan/rethinking_bottleneck_design"
"yangyanli/DO-Conv" -> "megvii-model/FunnelAct"
"SamsungLabs/adaptis" -> "LaoYang1994/SOGNet"
"SamsungLabs/adaptis" -> "mapillary/seamseg"
"SamsungLabs/adaptis" -> "Angzz/awesome-panoptic-segmentation"
"SamsungLabs/adaptis" -> "uber-research/UPSNet"
"SamsungLabs/adaptis" -> "yinghdb/EmbedMask" ["e"=1]
"DeepSceneSeg/EfficientPS" -> "bowenc0221/panoptic-deeplab"
"DeepSceneSeg/EfficientPS" -> "dvlab-research/PanopticFCN"
"DeepSceneSeg/EfficientPS" -> "uber-research/UPSNet"
"DeepSceneSeg/EfficientPS" -> "mapillary/seamseg"
"DeepSceneSeg/EfficientPS" -> "Angzz/awesome-panoptic-segmentation"
"DeepSceneSeg/EfficientPS" -> "NVIDIA/semantic-segmentation"
"DeepSceneSeg/EfficientPS" -> "openseg-group/openseg.pytorch"
"DeepSceneSeg/EfficientPS" -> "joe-siyuan-qiao/ViP-DeepLab"
"DeepSceneSeg/EfficientPS" -> "mcahny/vps"
"DeepSceneSeg/EfficientPS" -> "cocodataset/panopticapi"
"DeepSceneSeg/EfficientPS" -> "youngwanLEE/centermask2" ["e"=1]
"DeepSceneSeg/EfficientPS" -> "TRI-ML/realtime_panoptic"
"DeepSceneSeg/EfficientPS" -> "LaoYang1994/SOGNet"
"DeepSceneSeg/EfficientPS" -> "csrhddlam/axial-deeplab"
"DeepSceneSeg/EfficientPS" -> "VITA-Group/FasterSeg"
"ekzhang/fastseg" -> "ekzhang/semantic-segmentation"
"ekzhang/fastseg" -> "VITA-Group/FasterSeg"
"elbuco1/CBAM" -> "Ugenteraan/ResNet-50-CBAM-PyTorch"
"megvii-model/WeightNet" -> "ishimomo/CondConv-pytorch"
"megvii-model/WeightNet" -> "Nandan91/ULSAM"
"megvii-model/WeightNet" -> "iduta/pyconv"
"megvii-model/WeightNet" -> "ma-xu/DCANet"
"megvii-model/WeightNet" -> "d-li14/PSConv"
"megvii-model/WeightNet" -> "d-li14/condconv.pytorch"
"megvii-model/WeightNet" -> "DequanWang/weightnet.pytorch"
"hkchengrex/CascadePSP" -> "lxtGH/DecoupleSegNets"
"hkchengrex/CascadePSP" -> "nv-tlabs/GSCNN"
"hkchengrex/CascadePSP" -> "qqlu/Entity" ["e"=1]
"hkchengrex/CascadePSP" -> "openseg-group/openseg.pytorch"
"hkchengrex/CascadePSP" -> "Yaoyi-Li/GCA-Matting" ["e"=1]
"hkchengrex/CascadePSP" -> "yu-changqian/ContextPrior"
"hkchengrex/CascadePSP" -> "speedinghzl/CCNet"
"hkchengrex/CascadePSP" -> "poppinace/indexnet_matting" ["e"=1]
"hkchengrex/CascadePSP" -> "VITA-Group/GLNet"
"hkchengrex/CascadePSP" -> "wanglixilinx/DSRL"
"hkchengrex/CascadePSP" -> "JizhiziLi/GFM" ["e"=1]
"hkchengrex/CascadePSP" -> "HRNet/HRNet-Semantic-Segmentation"
"hkchengrex/CascadePSP" -> "xuebinqin/BASNet" ["e"=1]
"hkchengrex/CascadePSP" -> "xuebinqin/DIS" ["e"=1]
"hkchengrex/CascadePSP" -> "yuhaoliu7456/CVPR2020-HAttMatting" ["e"=1]
"pprp/SimpleCVPaperReading" -> "pprp/awesome-attention-mechanism-in-cv"
"yun-liu/plot-edge-pr-curves" -> "balajiselvaraj1601/RCF_Pytorch_Updated"
"yun-liu/plot-edge-pr-curves" -> "MCG-NKU/plot-edge-pr-curves"
"feinanshan/TDNet" -> "wanghao9610/TMANet"
"feinanshan/TDNet" -> "irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation"
"feinanshan/TDNet" -> "SamvitJ/Accel"
"feinanshan/TDNet" -> "GuoleiSun/VSS-CFFM"
"feinanshan/TDNet" -> "carrierlxk/MuG" ["e"=1]
"feinanshan/TDNet" -> "shachoi/HANet"
"feinanshan/TDNet" -> "feinanshan/FANet"
"feinanshan/TDNet" -> "Megvii-BaseDetection/DynamicRouting"
"feinanshan/TDNet" -> "sssdddwww2/vspw_dataset_download"
"feinanshan/TDNet" -> "orsic/swiftnet"
"feinanshan/TDNet" -> "jfzhuang/DAVSS"
"pmneila/PyMaxflow" -> "amueller/gco_python"
"pmneila/PyMaxflow" -> "Rhoana/pymaxflow"
"pmneila/PyMaxflow" -> "syedhope/Graph-Cut"
"pmneila/PyMaxflow" -> "yujiali/pygco"
"pmneila/PyMaxflow" -> "Borda/pyGCO"
"pmneila/PyMaxflow" -> "roflmaostc/Fast-Approximate-Energy-Minimization-via-Graph-Cuts"
"houqb/SPNet" -> "MCG-NKU/SCNet"
"houqb/SPNet" -> "shachoi/HANet"
"houqb/SPNet" -> "yu-changqian/ContextPrior"
"houqb/SPNet" -> "MendelXu/ANN"
"houqb/SPNet" -> "Megvii-BaseDetection/DynamicRouting"
"houqb/SPNet" -> "XiaLiPKU/EMANet"
"houqb/SPNet" -> "hszhao/semseg"
"houqb/SPNet" -> "nv-tlabs/GSCNN"
"houqb/SPNet" -> "speedinghzl/CCNet"
"houqb/SPNet" -> "lxtGH/GALD-DGCNet"
"houqb/SPNet" -> "feipanir/IntraDA" ["e"=1]
"houqb/SPNet" -> "houqb/CoordAttention"
"houqb/SPNet" -> "YudeWang/SEAM" ["e"=1]
"houqb/SPNet" -> "lxtGH/DecoupleSegNets"
"lxtGH/Fast_Seg" -> "lxtGH/GALD-DGCNet"
"lxtGH/Fast_Seg" -> "orsic/swiftnet"
"lxtGH/Fast_Seg" -> "VITA-Group/FasterSeg"
"lxtGH/Fast_Seg" -> "liminn/ICNet-pytorch"
"lxtGH/Fast_Seg" -> "PingoLH/FCHarDNet"
"lxtGH/Fast_Seg" -> "Megvii-BaseDetection/DynamicRouting"
"lxtGH/Fast_Seg" -> "shachoi/HANet"
"lxtGH/Fast_Seg" -> "lxtGH/SFSegNets"
"lxtGH/Fast_Seg" -> "DeepSceneSeg/SSMA"
"liminn/ICNet-pytorch" -> "lxtGH/Fast_Seg"
"hosang/detection-proposals" -> "Cloud-CV/object-proposals"
"developer0hye/SKNet-PyTorch" -> "pppLang/SKNet"
"jponttuset/mcg" -> "kmaninis/COB"
"jponttuset/mcg" -> "ZhouYanzhao/PRM" ["e"=1]
"jponttuset/mcg" -> "pdollar/edges"
"jponttuset/mcg" -> "qizhuli/Weakly-Supervised-Panoptic-Segmentation"
"jponttuset/mcg" -> "chengchunhsu/WSIS_BBTP" ["e"=1]
"jponttuset/mcg" -> "sergeyk/selective_search_ijcv_with_python" ["e"=1]
"jponttuset/mcg" -> "vrabaud/gPb"
"shiyinzhang/Inside-Outside-Guidance" -> "frazerlin/fcanet"
"shiyinzhang/Inside-Outside-Guidance" -> "SamsungLabs/fbrs_interactive_segmentation"
"shiyinzhang/Inside-Outside-Guidance" -> "XavierCHEN34/ClickSEG"
"shiyinzhang/Inside-Outside-Guidance" -> "shiyinzhang/Pixel-ImageNet"
"shiyinzhang/Inside-Outside-Guidance" -> "MarcoForte/DeepInteractiveSegmentation"
"shiyinzhang/Inside-Outside-Guidance" -> "SamsungLabs/ritm_interactive_segmentation"
"MCG-NKU/SCNet" -> "houqb/SPNet"
"MCG-NKU/SCNet" -> "hszhao/SAN"
"MCG-NKU/SCNet" -> "hellozhuo/dgc"
"MCG-NKU/SCNet" -> "shachoi/HANet"
"MCG-NKU/SCNet" -> "d-li14/PSConv"
"MCG-NKU/SCNet" -> "ma-xu/DCANet"
"MCG-NKU/SCNet" -> "landskape-ai/triplet-attention"
"MCG-NKU/SCNet" -> "iduta/pyconv"
"MCG-NKU/SCNet" -> "MendelXu/ANN"
"MCG-NKU/SCNet" -> "iamhankai/ghostnet.pytorch" ["e"=1]
"ArtanisCV/StructuredForests" -> "TArong/Fast-edge-detection-using-structured-forests"
"DingXiaoH/ACNet" -> "DingXiaoH/DiverseBranchBlock" ["e"=1]
"DingXiaoH/ACNet" -> "DingXiaoH/RepVGG" ["e"=1]
"DingXiaoH/ACNet" -> "Res2Net/Res2Net-PretrainedModels"
"DingXiaoH/ACNet" -> "junfu1115/DANet"
"DingXiaoH/ACNet" -> "XiaLiPKU/EMANet"
"DingXiaoH/ACNet" -> "JiahuiYu/slimmable_networks" ["e"=1]
"DingXiaoH/ACNet" -> "megvii-model/ShuffleNet-Series" ["e"=1]
"DingXiaoH/ACNet" -> "xvjiarui/GCNet"
"DingXiaoH/ACNet" -> "speedinghzl/CCNet"
"DingXiaoH/ACNet" -> "zhanghang1989/ResNeSt" ["e"=1]
"DingXiaoH/ACNet" -> "pppLang/SKNet"
"DingXiaoH/ACNet" -> "yu-changqian/TorchSeg"
"DingXiaoH/ACNet" -> "lxtGH/OctaveConv_pytorch"
"DingXiaoH/ACNet" -> "AlexHex7/Non-local_pytorch"
"DingXiaoH/ACNet" -> "GOATmessi8/RFBNet" ["e"=1]
"yu-changqian/ContextPrior" -> "wanglixilinx/DSRL"
"yu-changqian/ContextPrior" -> "shachoi/HANet"
"yu-changqian/ContextPrior" -> "lxtGH/DecoupleSegNets"
"yu-changqian/ContextPrior" -> "Megvii-BaseDetection/DynamicRouting"
"yu-changqian/ContextPrior" -> "lxtGH/GALD-DGCNet"
"yu-changqian/ContextPrior" -> "hszhao/PSANet"
"yu-changqian/ContextPrior" -> "houqb/SPNet"
"yu-changqian/ContextPrior" -> "Megvii-BaseDetection/TreeFilter-Torch"
"yu-changqian/ContextPrior" -> "MyeongJin-Kim/Learning-Texture-Invariant-Representation" ["e"=1]
"yu-changqian/ContextPrior" -> "bermanmaxim/superpixPool"
"BGU-CS-VIL/BASS" -> "BGU-CS-VIL/dpmmpython"
"BGU-CS-VIL/BASS" -> "BGU-CS-VIL/DPMMSubClusters.jl"
"BGU-CS-VIL/BASS" -> "BGU-CS-VIL/JA-POLS"
"BGU-CS-VIL/BASS" -> "BGU-CS-VIL/vmdls"
"hellozhuo/dgc" -> "Nandan91/ULSAM"
"iduta/pyconv" -> "d-li14/PSConv"
"iduta/pyconv" -> "yangyanli/DO-Conv"
"iduta/pyconv" -> "Nandan91/ULSAM"
"iduta/pyconv" -> "ma-xu/DCANet"
"iduta/pyconv" -> "megvii-model/WeightNet"
"iduta/pyconv" -> "iduta/pyconvsegnet"
"iduta/pyconv" -> "zhoudaquan/rethinking_bottleneck_design"
"iduta/pyconv" -> "dongzhang89/FPT"
"iduta/pyconv" -> "hellozhuo/dgc"
"iduta/pyconv" -> "MCG-NKU/SCNet"
"iduta/pyconv" -> "pppLang/SKNet"
"kondratevakate/3d-deformable-convolutions" -> "momenator/deform_conv"
"kondratevakate/3d-deformable-convolutions" -> "lshiwjx/deform_conv3d_pytorch_op"
"ishimomo/CondConv-pytorch" -> "d-li14/condconv.pytorch"
"ishimomo/CondConv-pytorch" -> "megvii-model/WeightNet"
"ishimomo/CondConv-pytorch" -> "yangle15/RANet-pytorch" ["e"=1]
"hszhao/SAN" -> "MCG-NKU/SCNet"
"hszhao/SAN" -> "leaderj1001/Stand-Alone-Self-Attention"
"hszhao/SAN" -> "epfml/attention-cnn"
"hszhao/SAN" -> "speedinghzl/CCNet"
"hszhao/SAN" -> "zhanghang1989/ResNeSt" ["e"=1]
"hszhao/SAN" -> "BangguWu/ECANet"
"hszhao/SAN" -> "MendelXu/ANN"
"hszhao/SAN" -> "leaderj1001/Attention-Augmented-Conv2d"
"hszhao/SAN" -> "yitu-opensource/T2T-ViT" ["e"=1]
"hszhao/SAN" -> "Megvii-BaseDetection/DynamicRouting"
"hszhao/SAN" -> "junfu1115/DANet"
"hszhao/SAN" -> "XiaLiPKU/EMANet"
"hszhao/SAN" -> "implus/GFocalV2" ["e"=1]
"hszhao/SAN" -> "lucidrains/lambda-networks" ["e"=1]
"hszhao/SAN" -> "pppLang/SKNet"
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "feinanshan/TDNet"
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "Barrnett/DeepCV" ["e"=1]
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "SamvitJ/Accel"
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "D-Nilsson/GRFP" ["e"=1]
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "irfanICMLL/structure_knowledge_distillation" ["e"=1]
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "wanghao9610/TMANet"
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "GuoleiSun/VSS-CFFM"
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "lihang212010/Elasticsearch-ais" ["e"=1]
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "demon-poohboy/MIS_studentGrade_node" ["e"=1]
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "jfzhuang/DAVSS"
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "jfzhuang/IFR"
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "hf-hf/mail-micro-service" ["e"=1]
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "sssdddwww2/vspw_dataset_download"
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" -> "lxtGH/DecoupleSegNets"
"ma-xu/DCANet" -> "Nandan91/ULSAM"
"ma-xu/DCANet" -> "d-li14/PSConv"
"ma-xu/DCANet" -> "iduta/pyconv"
"ma-xu/DCANet" -> "megvii-model/WeightNet"
"ma-xu/DCANet" -> "yangyanli/DO-Conv"
"mcahny/vps" -> "joe-siyuan-qiao/ViP-DeepLab"
"mcahny/vps" -> "bowenc0221/panoptic-deeplab"
"mcahny/vps" -> "VIPSeg-Dataset/VIPSeg-Dataset" ["e"=1]
"mcahny/vps" -> "uber-research/UPSNet"
"mcahny/vps" -> "Angzz/awesome-panoptic-segmentation"
"mcahny/vps" -> "TRI-ML/realtime_panoptic"
"mcahny/vps" -> "DeepSceneSeg/EfficientPS"
"mcahny/vps" -> "lxtGH/Video-K-Net" ["e"=1]
"MendelXu/ANN" -> "XiaLiPKU/EMANet"
"MendelXu/ANN" -> "speedinghzl/CCNet"
"MendelXu/ANN" -> "lxtGH/GALD-DGCNet"
"MendelXu/ANN" -> "openseg-group/OCNet.pytorch"
"MendelXu/ANN" -> "openseg-group/openseg.pytorch"
"MendelXu/ANN" -> "houqb/SPNet"
"MendelXu/ANN" -> "ZJULearning/RMI"
"MendelXu/ANN" -> "speedinghzl/pytorch-segmentation-toolbox"
"MendelXu/ANN" -> "xvjiarui/GCNet"
"MendelXu/ANN" -> "yu-changqian/ContextPrior"
"MendelXu/ANN" -> "DeepMotionAIResearch/DenseASPP"
"MendelXu/ANN" -> "Serge-weihao/CCNet-Pure-Pytorch"
"MendelXu/ANN" -> "nv-tlabs/GSCNN"
"wanglixilinx/DSRL" -> "Dootmaan/DSRL"
"wanglixilinx/DSRL" -> "yu-changqian/ContextPrior"
"d-li14/PSConv" -> "iduta/pyconv"
"d-li14/PSConv" -> "ma-xu/DCANet"
"d-li14/PSConv" -> "Nandan91/ULSAM"
"d-li14/PSConv" -> "yangyanli/DO-Conv"
"d-li14/PSConv" -> "megvii-model/WeightNet"
"d-li14/PSConv" -> "yifan123/IC-Conv" ["e"=1]
"d-li14/PSConv" -> "dongzhang89/FPT"
"d-li14/PSConv" -> "qiulinzhang/SPConv.pytorch"
"zhoudaquan/rethinking_bottleneck_design" -> "yitu-opensource/MobileNeXt"
"BGU-CS-VIL/dtan" -> "BGU-CS-VIL/JA-POLS"
"BGU-CS-VIL/dtan" -> "BGU-CS-VIL/DPMMSubClusters.jl"
"BGU-CS-VIL/dtan" -> "BGU-CS-VIL/dpmmpython"
"BGU-CS-VIL/dtan" -> "BGU-CS-VIL/RF-DTAN"
"BGU-CS-VIL/dtan" -> "BGU-CS-VIL/pdc-dp-means"
"frazerlin/fcanet" -> "frazerlin/focuscut"
"frazerlin/fcanet" -> "shiyinzhang/Inside-Outside-Guidance"
"perrying/ssn-pytorch" -> "CYang0515/pytorch_ssn"
"perrying/ssn-pytorch" -> "fuy34/superpixel_fcn"
"perrying/ssn-pytorch" -> "NVlabs/ssn_superpixels"
"perrying/ssn-pytorch" -> "bermanmaxim/superpixPool"
"perrying/ssn-pytorch" -> "zh460045050/LNSNet"
"perrying/ssn-pytorch" -> "perrying/diffSLIC"
"perrying/ssn-pytorch" -> "YanFangCS/AINET"
"perrying/ssn-pytorch" -> "DensoITLab/ss-with-RIM"
"perrying/ssn-pytorch" -> "wangyxxjtu/AINet-Superpixel"
"Megvii-BaseDetection/DynamicRouting" -> "yu-changqian/ContextPrior"
"Megvii-BaseDetection/DynamicRouting" -> "lxtGH/Fast_Seg"
"Megvii-BaseDetection/DynamicRouting" -> "NoamRosenberg/autodeeplab" ["e"=1]
"Megvii-BaseDetection/DynamicRouting" -> "XiaLiPKU/EMANet"
"Megvii-BaseDetection/DynamicRouting" -> "shachoi/HANet"
"Megvii-BaseDetection/DynamicRouting" -> "feinanshan/TDNet"
"Megvii-BaseDetection/DynamicRouting" -> "houqb/SPNet"
"Megvii-BaseDetection/DynamicRouting" -> "VITA-Group/FasterSeg"
"Megvii-BaseDetection/DynamicRouting" -> "dvlab-research/PanopticFCN"
"Megvii-BaseDetection/DynamicRouting" -> "Megvii-BaseDetection/TreeFilter-Torch"
"Megvii-BaseDetection/DynamicRouting" -> "openseg-group/OCNet.pytorch"
"Megvii-BaseDetection/DynamicRouting" -> "openseg-group/openseg.pytorch"
"Megvii-BaseDetection/DynamicRouting" -> "DrSleep/nas-segm-pytorch" ["e"=1]
"JamesQFreeman/simpleITK-Snap" -> "King-HAW/DC-MT"
"JamesQFreeman/simpleITK-Snap" -> "JamesQFreeman/MicEye"
"JamesQFreeman/simpleITK-Snap" -> "zixuzhuang/CSNet"
"JamesQFreeman/simpleITK-Snap" -> "oyxhust/HAM"
"Islanna/DynamicReLU" -> "megvii-model/WeightNet"
"Islanna/DynamicReLU" -> "megvii-model/FunnelAct"
"PSCLab-ASU/Learning-in-the-Frequency-Domain" -> "kaix90/DCTNet"
"Nandan91/ULSAM" -> "ma-xu/DCANet"
"Nandan91/ULSAM" -> "d-li14/PSConv"
"megvii-model/FunnelAct" -> "nekitmm/FunnelAct_Pytorch"
"JamesQFreeman/PointRend" -> "zsef123/PointRend-PyTorch"
"JamesQFreeman/PointRend" -> "JamesQFreeman/simpleITK-Snap"
"DensoITLab/ss-with-RIM" -> "DensoITLab/HCFormer"
"FroyoZzz/CV-Papers-Codes" -> "L1aoXingyu/fcn.pytorch"
"BGU-CS-VIL/dpmmpython" -> "BGU-CS-VIL/JA-POLS"
"BGU-CS-VIL/dpmmpython" -> "BGU-CS-VIL/vmdls"
"BGU-CS-VIL/dpmmpython" -> "BGU-CS-VIL/pdc-dp-means"
"xuhuaren/TDSNet" -> "King-HAW/DC-MT"
"MarcoForte/DeepInteractiveSegmentation" -> "sabarim/itis"
"MarcoForte/DeepInteractiveSegmentation" -> "isl-org/Intseg"
"LaoYang1994/SOGNet" -> "LaoYang1994/PanopticSegmentation"
"CYang0515/pytorch_ssn" -> "perrying/ssn-pytorch"
"nekitmm/FunnelAct_Pytorch" -> "DequanWang/weightnet.pytorch"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "SwinTransformer/Swin-Transformer-Object-Detection" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "fudan-zvg/SETR"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "HuCaoFighting/Swin-Unet" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "NVlabs/SegFormer" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "facebookresearch/MaskFormer" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "SwinTransformer/Transformer-SSL" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "rstrudel/segmenter"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "microsoft/Swin-Transformer" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "berniwal/swin-transformer-pytorch"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "open-mmlab/mmsegmentation" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "openseg-group/openseg.pytorch"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "Beckschen/TransUNet" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "HRNet/HRNet-Semantic-Segmentation"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "whai362/PVT" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "jeya-maria-jose/Medical-Transformer" ["e"=1]
"houqb/CoordAttention" -> "wofmanaf/SA-Net"
"houqb/CoordAttention" -> "BangguWu/ECANet"
"houqb/CoordAttention" -> "landskape-ai/triplet-attention"
"houqb/CoordAttention" -> "d-li14/involution" ["e"=1]
"houqb/CoordAttention" -> "Jongchan/attention-module"
"houqb/CoordAttention" -> "pprp/awesome-attention-mechanism-in-cv"
"houqb/CoordAttention" -> "cfzd/FcaNet"
"houqb/CoordAttention" -> "luuuyi/CBAM.PyTorch"
"houqb/CoordAttention" -> "speedinghzl/CCNet"
"houqb/CoordAttention" -> "murufeng/EPSANet"
"houqb/CoordAttention" -> "houqb/SPNet"
"houqb/CoordAttention" -> "junfu1115/DANet"
"houqb/CoordAttention" -> "xvjiarui/GCNet"
"houqb/CoordAttention" -> "ZjjConan/SimAM"
"houqb/CoordAttention" -> "whai362/PVT" ["e"=1]
"ydhongHIT/DDRNet" -> "chenjun2hao/DDRNet.pytorch"
"ydhongHIT/DDRNet" -> "XuJiacong/PIDNet"
"ydhongHIT/DDRNet" -> "MichaelFan01/STDC-Seg"
"ydhongHIT/DDRNet" -> "CoinCheung/BiSeNet"
"ydhongHIT/DDRNet" -> "lxtGH/SFSegNets"
"ydhongHIT/DDRNet" -> "Deeachain/Segmentation-Pytorch"
"ydhongHIT/DDRNet" -> "xzz777/SCTNet"
"ydhongHIT/DDRNet" -> "sithu31296/semantic-segmentation"
"ydhongHIT/DDRNet" -> "YuvalNirkin/hyperseg"
"ydhongHIT/DDRNet" -> "lxtGH/DecoupleSegNets"
"ydhongHIT/DDRNet" -> "xiaoyufenfei/Efficient-Segmentation-Networks"
"ydhongHIT/DDRNet" -> "hustvl/TopFormer"
"ydhongHIT/DDRNet" -> "lxtGH/Fast_Seg"
"pprp/awesome-attention-mechanism-in-cv" -> "pprp/SimpleCVReproduction" ["e"=1]
"pprp/awesome-attention-mechanism-in-cv" -> "MenghaoGuo/Awesome-Vision-Attentions" ["e"=1]
"pprp/awesome-attention-mechanism-in-cv" -> "houqb/CoordAttention"
"pprp/awesome-attention-mechanism-in-cv" -> "YimianDai/open-aff"
"pprp/awesome-attention-mechanism-in-cv" -> "BangguWu/ECANet"
"pprp/awesome-attention-mechanism-in-cv" -> "xmu-xiaoma666/External-Attention-pytorch" ["e"=1]
"pprp/awesome-attention-mechanism-in-cv" -> "KawaiiAsh/deepLearning-modules-toolbox" ["e"=1]
"pprp/awesome-attention-mechanism-in-cv" -> "ZhugeKongan/Attention-mechanism-implementation"
"pprp/awesome-attention-mechanism-in-cv" -> "iscyy/ultralyticsPro" ["e"=1]
"pprp/awesome-attention-mechanism-in-cv" -> "murufeng/EPSANet"
"pprp/awesome-attention-mechanism-in-cv" -> "Jongchan/attention-module"
"pprp/awesome-attention-mechanism-in-cv" -> "pprp/SimpleCVPaperReading"
"pprp/awesome-attention-mechanism-in-cv" -> "cfzd/FcaNet"
"pprp/awesome-attention-mechanism-in-cv" -> "wofmanaf/SA-Net"
"pprp/awesome-attention-mechanism-in-cv" -> "cmhungsteve/Awesome-Transformer-Attention" ["e"=1]
"ZjjConan/SimAM" -> "murufeng/EPSANet"
"ZjjConan/SimAM" -> "houqb/CoordAttention"
"ZjjConan/SimAM" -> "DeLightCMU/PSA" ["e"=1]
"ZjjConan/SimAM" -> "theFoxofSky/ddfnet" ["e"=1]
"ZjjConan/SimAM" -> "wofmanaf/SA-Net"
"ZjjConan/SimAM" -> "cfzd/FcaNet"
"ZjjConan/SimAM" -> "BangguWu/ECANet"
"ZjjConan/SimAM" -> "rayleizhu/BiFormer" ["e"=1]
"ZjjConan/SimAM" -> "kemaloksuz/RankSortLoss" ["e"=1]
"ZjjConan/SimAM" -> "YimianDai/open-aff"
"ZjjConan/SimAM" -> "Christian-lyc/NAM"
"MichaelFan01/STDC-Seg" -> "CoinCheung/BiSeNet"
"MichaelFan01/STDC-Seg" -> "ydhongHIT/DDRNet"
"MichaelFan01/STDC-Seg" -> "XuJiacong/PIDNet"
"MichaelFan01/STDC-Seg" -> "lxtGH/SFSegNets"
"MichaelFan01/STDC-Seg" -> "YuvalNirkin/hyperseg"
"MichaelFan01/STDC-Seg" -> "chenjun2hao/DDRNet.pytorch"
"MichaelFan01/STDC-Seg" -> "VITA-Group/FasterSeg"
"MichaelFan01/STDC-Seg" -> "Visual-Attention-Network/SegNeXt" ["e"=1]
"MichaelFan01/STDC-Seg" -> "lxtGH/DecoupleSegNets"
"MichaelFan01/STDC-Seg" -> "hustvl/TopFormer"
"MichaelFan01/STDC-Seg" -> "lxtGH/Fast_Seg"
"MichaelFan01/STDC-Seg" -> "yu-changqian/TorchSeg"
"MichaelFan01/STDC-Seg" -> "ooooverflow/BiSeNet"
"MichaelFan01/STDC-Seg" -> "Deeachain/Segmentation-Pytorch"
"MichaelFan01/STDC-Seg" -> "facebookresearch/MaskFormer" ["e"=1]
"sithu31296/semantic-segmentation" -> "NVlabs/SegFormer" ["e"=1]
"sithu31296/semantic-segmentation" -> "Deeachain/Segmentation-Pytorch"
"sithu31296/semantic-segmentation" -> "chenjun2hao/DDRNet.pytorch"
"sithu31296/semantic-segmentation" -> "ydhongHIT/DDRNet"
"sithu31296/semantic-segmentation" -> "XuJiacong/PIDNet"
"sithu31296/semantic-segmentation" -> "yassouali/pytorch-segmentation"
"sithu31296/semantic-segmentation" -> "SegmentationBLWX/sssegmentation"
"sithu31296/semantic-segmentation" -> "HRNet/HRNet-Semantic-Segmentation"
"sithu31296/semantic-segmentation" -> "Tramac/awesome-semantic-segmentation-pytorch"
"sithu31296/semantic-segmentation" -> "Visual-Attention-Network/SegNeXt" ["e"=1]
"sithu31296/semantic-segmentation" -> "bubbliiiing/segformer-pytorch" ["e"=1]
"sithu31296/semantic-segmentation" -> "openseg-group/openseg.pytorch"
"sithu31296/semantic-segmentation" -> "open-mmlab/mmsegmentation" ["e"=1]
"sithu31296/semantic-segmentation" -> "WangLibo1995/GeoSeg" ["e"=1]
"sithu31296/semantic-segmentation" -> "MichaelFan01/STDC-Seg"
"SamsungLabs/ritm_interactive_segmentation" -> "SamsungLabs/fbrs_interactive_segmentation"
"SamsungLabs/ritm_interactive_segmentation" -> "XavierCHEN34/ClickSEG"
"SamsungLabs/ritm_interactive_segmentation" -> "uncbiag/SimpleClick"
"SamsungLabs/ritm_interactive_segmentation" -> "hkchengrex/MiVOS" ["e"=1]
"SamsungLabs/ritm_interactive_segmentation" -> "shiyinzhang/Inside-Outside-Guidance"
"SamsungLabs/ritm_interactive_segmentation" -> "frazerlin/fcanet"
"SamsungLabs/ritm_interactive_segmentation" -> "MarcoForte/DeepInteractiveSegmentation"
"SamsungLabs/ritm_interactive_segmentation" -> "hkchengrex/STCN" ["e"=1]
"SamsungLabs/ritm_interactive_segmentation" -> "HiLab-git/MIDeepSeg" ["e"=1]
"SamsungLabs/ritm_interactive_segmentation" -> "hkchengrex/Scribble-to-Mask"
"SamsungLabs/ritm_interactive_segmentation" -> "alibaba/ClickSEG"
"SamsungLabs/ritm_interactive_segmentation" -> "MarcoForte/FBA_Matting" ["e"=1]
"SamsungLabs/ritm_interactive_segmentation" -> "PaddleCV-SIG/EISeg"
"SamsungLabs/ritm_interactive_segmentation" -> "liewjunhao/thin-object-selection"
"SamsungLabs/ritm_interactive_segmentation" -> "taigw/GeodisTK" ["e"=1]
"np-csu/SLIC-superpixel-with-OpenCV" -> "PSMM/SLIC-Superpixels"
"wofmanaf/SA-Net" -> "murufeng/EPSANet"
"wofmanaf/SA-Net" -> "houqb/CoordAttention"
"wofmanaf/SA-Net" -> "cfzd/FcaNet"
"wofmanaf/SA-Net" -> "BangguWu/ECANet"
"wofmanaf/SA-Net" -> "pppLang/SKNet"
"wofmanaf/SA-Net" -> "alexandrosstergiou/SoftPool" ["e"=1]
"wofmanaf/SA-Net" -> "Christian-lyc/NAM"
"wofmanaf/SA-Net" -> "landskape-ai/triplet-attention"
"HyeonwooNoh/DeconvNet" -> "HyeonwooNoh/caffe" ["e"=1]
"HyeonwooNoh/DeconvNet" -> "fabianbormann/Tensorflow-DeconvNet-Segmentation"
"HyeonwooNoh/DeconvNet" -> "fyu/dilation"
"HyeonwooNoh/DeconvNet" -> "alexgkendall/caffe-segnet"
"HyeonwooNoh/DeconvNet" -> "daijifeng001/MNC"
"HyeonwooNoh/DeconvNet" -> "torrvision/crfasrnn"
"HyeonwooNoh/DeconvNet" -> "HyeonwooNoh/DecoupledNet"
"HyeonwooNoh/DeconvNet" -> "alexgkendall/SegNet-Tutorial"
"HyeonwooNoh/DeconvNet" -> "cvjena/cn24" ["e"=1]
"HyeonwooNoh/DeconvNet" -> "e-lab/ENet-training"
"HyeonwooNoh/DeconvNet" -> "TheLegendAli/DeepLab-Context"
"HyeonwooNoh/DeconvNet" -> "MarvinTeichmann/tensorflow-fcn"
"920232796/SETR-pytorch" -> "gupta-abhay/setr-pytorch"
"920232796/SETR-pytorch" -> "fudan-zvg/SETR"
"920232796/SETR-pytorch" -> "lucidrains/segformer-pytorch"
"google-research/deeplab2" -> "facebookresearch/MaskFormer" ["e"=1]
"google-research/deeplab2" -> "facebookresearch/Mask2Former" ["e"=1]
"google-research/deeplab2" -> "bowenc0221/panoptic-deeplab"
"google-research/deeplab2" -> "csrhddlam/axial-deeplab"
"google-research/deeplab2" -> "joe-siyuan-qiao/ViP-DeepLab"
"google-research/deeplab2" -> "cocodataset/panopticapi"
"google-research/deeplab2" -> "IDEA-Research/MaskDINO" ["e"=1]
"google-research/deeplab2" -> "ZwwWayne/K-Net" ["e"=1]
"google-research/deeplab2" -> "bytedance/kmax-deeplab" ["e"=1]
"google-research/deeplab2" -> "DeepSceneSeg/EfficientPS"
"google-research/deeplab2" -> "SHI-Labs/OneFormer" ["e"=1]
"google-research/deeplab2" -> "NVlabs/SegFormer" ["e"=1]
"google-research/deeplab2" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"google-research/deeplab2" -> "ShoufaChen/DiffusionDet" ["e"=1]
"google-research/deeplab2" -> "dvlab-research/PanopticFCN"
"berniwal/swin-transformer-pytorch" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"berniwal/swin-transformer-pytorch" -> "SwinTransformer/Swin-Transformer-Object-Detection" ["e"=1]
"berniwal/swin-transformer-pytorch" -> "WangFeng18/Swin-Transformer"
"berniwal/swin-transformer-pytorch" -> "whai362/PVT" ["e"=1]
"berniwal/swin-transformer-pytorch" -> "microsoft/Swin-Transformer" ["e"=1]
"berniwal/swin-transformer-pytorch" -> "HuCaoFighting/Swin-Unet" ["e"=1]
"berniwal/swin-transformer-pytorch" -> "Meituan-AutoML/Twins" ["e"=1]
"berniwal/swin-transformer-pytorch" -> "SwinTransformer/Transformer-SSL" ["e"=1]
"berniwal/swin-transformer-pytorch" -> "fudan-zvg/SETR"
"berniwal/swin-transformer-pytorch" -> "SwinTransformer/Video-Swin-Transformer" ["e"=1]
"berniwal/swin-transformer-pytorch" -> "microsoft/CSWin-Transformer" ["e"=1]
"berniwal/swin-transformer-pytorch" -> "d-li14/involution" ["e"=1]
"berniwal/swin-transformer-pytorch" -> "ChristophReich1996/Swin-Transformer-V2"
"berniwal/swin-transformer-pytorch" -> "rstrudel/segmenter"
"berniwal/swin-transformer-pytorch" -> "dk-liang/Awesome-Visual-Transformer" ["e"=1]
"YuvalNirkin/hyperseg" -> "MichaelFan01/STDC-Seg"
"fudan-zvg/SETR" -> "gupta-abhay/setr-pytorch"
"fudan-zvg/SETR" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"fudan-zvg/SETR" -> "rstrudel/segmenter"
"fudan-zvg/SETR" -> "facebookresearch/MaskFormer" ["e"=1]
"fudan-zvg/SETR" -> "920232796/SETR-pytorch"
"fudan-zvg/SETR" -> "NVlabs/SegFormer" ["e"=1]
"fudan-zvg/SETR" -> "openseg-group/openseg.pytorch"
"fudan-zvg/SETR" -> "speedinghzl/CCNet"
"fudan-zvg/SETR" -> "Beckschen/TransUNet" ["e"=1]
"fudan-zvg/SETR" -> "whai362/PVT" ["e"=1]
"fudan-zvg/SETR" -> "tfzhou/ContrastiveSeg" ["e"=1]
"fudan-zvg/SETR" -> "lxtGH/DecoupleSegNets"
"fudan-zvg/SETR" -> "NVIDIA/semantic-segmentation"
"fudan-zvg/SETR" -> "YuqingWang1029/VisTR" ["e"=1]
"fudan-zvg/SETR" -> "junfu1115/DANet"
"rstrudel/segmenter" -> "fudan-zvg/SETR"
"rstrudel/segmenter" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"rstrudel/segmenter" -> "NVlabs/SegFormer" ["e"=1]
"rstrudel/segmenter" -> "facebookresearch/MaskFormer" ["e"=1]
"rstrudel/segmenter" -> "lucidrains/segformer-pytorch"
"rstrudel/segmenter" -> "HuCaoFighting/Swin-Unet" ["e"=1]
"rstrudel/segmenter" -> "jeya-maria-jose/Medical-Transformer" ["e"=1]
"rstrudel/segmenter" -> "open-mmlab/mmsegmentation" ["e"=1]
"rstrudel/segmenter" -> "YuqingWang1029/VisTR" ["e"=1]
"rstrudel/segmenter" -> "facebookresearch/Mask2Former" ["e"=1]
"rstrudel/segmenter" -> "Beckschen/TransUNet" ["e"=1]
"rstrudel/segmenter" -> "openseg-group/openseg.pytorch"
"rstrudel/segmenter" -> "speedinghzl/CCNet"
"rstrudel/segmenter" -> "HRNet/HRNet-Semantic-Segmentation"
"rstrudel/segmenter" -> "SegmentationBLWX/sssegmentation"
"chenjun2hao/DDRNet.pytorch" -> "ydhongHIT/DDRNet"
"chenjun2hao/DDRNet.pytorch" -> "midasklr/DDRNet.TensorRT"
"chenjun2hao/DDRNet.pytorch" -> "midasklr/DDRNet.Pytorch"
"chenjun2hao/DDRNet.pytorch" -> "RolandGao/RegSeg"
"chenjun2hao/DDRNet.pytorch" -> "XuJiacong/PIDNet"
"dvlab-research/PanopticFCN" -> "bowenc0221/panoptic-deeplab"
"dvlab-research/PanopticFCN" -> "uber-research/UPSNet"
"dvlab-research/PanopticFCN" -> "DeepSceneSeg/EfficientPS"
"dvlab-research/PanopticFCN" -> "joe-siyuan-qiao/ViP-DeepLab"
"dvlab-research/PanopticFCN" -> "facebookresearch/MaskFormer" ["e"=1]
"dvlab-research/PanopticFCN" -> "cocodataset/panopticapi"
"dvlab-research/PanopticFCN" -> "Angzz/awesome-panoptic-segmentation"
"dvlab-research/PanopticFCN" -> "ZwwWayne/K-Net" ["e"=1]
"dvlab-research/PanopticFCN" -> "hongfz16/DS-Net" ["e"=1]
"dvlab-research/PanopticFCN" -> "PeizeSun/SparseR-CNN" ["e"=1]
"dvlab-research/PanopticFCN" -> "Megvii-BaseDetection/DynamicRouting"
"dvlab-research/PanopticFCN" -> "lkeab/BCNet" ["e"=1]
"dvlab-research/PanopticFCN" -> "LaoYang1994/SOGNet"
"dvlab-research/PanopticFCN" -> "bowenc0221/boundary-iou-api" ["e"=1]
"dvlab-research/PanopticFCN" -> "elharroussomar/Awesome-Panoptic-Segmentation"
"qiulinzhang/TopPaper" -> "qiulinzhang/SPConv.pytorch"
"SegmentationBLWX/sssegmentation" -> "openseg-group/openseg.pytorch"
"SegmentationBLWX/sssegmentation" -> "Deeachain/Segmentation-Pytorch"
"SegmentationBLWX/sssegmentation" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"SegmentationBLWX/sssegmentation" -> "open-mmlab/mmsegmentation" ["e"=1]
"SegmentationBLWX/sssegmentation" -> "facebookresearch/MaskFormer" ["e"=1]
"SegmentationBLWX/sssegmentation" -> "HRNet/HRNet-Semantic-Segmentation"
"SegmentationBLWX/sssegmentation" -> "LikeLy-Journey/SegmenTron"
"SegmentationBLWX/sssegmentation" -> "fudan-zvg/SETR"
"SegmentationBLWX/sssegmentation" -> "Tramac/awesome-semantic-segmentation-pytorch"
"SegmentationBLWX/sssegmentation" -> "sithu31296/semantic-segmentation"
"SegmentationBLWX/sssegmentation" -> "yassouali/pytorch-segmentation"
"SegmentationBLWX/sssegmentation" -> "CharlesPikachu/mcibi"
"SegmentationBLWX/sssegmentation" -> "czczup/ViT-Adapter" ["e"=1]
"SegmentationBLWX/sssegmentation" -> "rstrudel/segmenter"
"SegmentationBLWX/sssegmentation" -> "NVlabs/SegFormer" ["e"=1]
"murufeng/EPSANet" -> "wofmanaf/SA-Net"
"murufeng/EPSANet" -> "cfzd/FcaNet"
"murufeng/EPSANet" -> "MenghaoGuo/EANet" ["e"=1]
"murufeng/EPSANet" -> "ZjjConan/SimAM"
"murufeng/EPSANet" -> "BangguWu/ECANet"
"murufeng/EPSANet" -> "dcdcvgroup/FcaNet"
"murufeng/EPSANet" -> "houqb/CoordAttention"
"murufeng/EPSANet" -> "landskape-ai/triplet-attention"
"murufeng/EPSANet" -> "EMI-Group/FaPN" ["e"=1]
"murufeng/EPSANet" -> "iduta/pyconv"
"murufeng/EPSANet" -> "yifan123/IC-Conv" ["e"=1]
"ZhugeKongan/Attention-mechanism-implementation" -> "ZhugeKongan/torch-template-for-deep-learning" ["e"=1]
"ZhugeKongan/Attention-mechanism-implementation" -> "pprp/awesome-attention-mechanism-in-cv"
"ZhugeKongan/Attention-mechanism-implementation" -> "murufeng/EPSANet"
"ZhugeKongan/Attention-mechanism-implementation" -> "ZjjConan/SimAM"
"ZhugeKongan/Attention-mechanism-implementation" -> "Ugenteraan/ResNet-50-CBAM-PyTorch"
"ZhugeKongan/Attention-mechanism-implementation" -> "Jongchan/attention-module"
"hellozhuo/pidinet" -> "MengyangPu/EDTER"
"hellozhuo/pidinet" -> "pkuCactus/BDCN"
"hellozhuo/pidinet" -> "xavysp/DexiNed"
"hellozhuo/pidinet" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"hellozhuo/pidinet" -> "GuHuangAI/DiffusionEdge"
"hellozhuo/pidinet" -> "xavysp/LDC"
"hellozhuo/pidinet" -> "ZhouCX117/UAED_MuGE"
"hellozhuo/pidinet" -> "MengyangPu/RINDNet"
"hellozhuo/pidinet" -> "WHUHLX/CATS"
"hellozhuo/pidinet" -> "Lavender105/DFF"
"hellozhuo/pidinet" -> "xwjabc/hed"
"hellozhuo/pidinet" -> "MCG-NKU/plot-edge-pr-curves"
"hellozhuo/pidinet" -> "ZitongYu/CDCN" ["e"=1]
"hellozhuo/pidinet" -> "yun-liu/RCF-PyTorch"
"hellozhuo/pidinet" -> "sniklaus/pytorch-hed"
"gml16/rl-medical" -> "thanosvlo/MARL-for-Anatomical-Landmark-Detection"
"gml16/rl-medical" -> "amiralansary/rl-medical"
"gml16/rl-medical" -> "christianpayer/MedicalDataAugmentationTool-HeatmapRegression" ["e"=1]
"Qualcomm-AI-research/InverseForm" -> "lxtGH/SFSegNets"
"dcdcvgroup/FcaNet" -> "cfzd/FcaNet"
"dcdcvgroup/FcaNet" -> "kaix90/DCTNet"
"dcdcvgroup/FcaNet" -> "VisibleShadow/Implementation-of-Detecting-Camouflaged-Object-in-Frequency-Domain"
"dcdcvgroup/FcaNet" -> "murufeng/EPSANet"
"dcdcvgroup/FcaNet" -> "BangguWu/ECANet"
"wanghao9610/TMANet" -> "feinanshan/TDNet"
"wanghao9610/TMANet" -> "GuoleiSun/VSS-CFFM"
"wanghao9610/TMANet" -> "sssdddwww2/CVPR2021_VSPW_Implement"
"davidstutz/superpixels-revisited" -> "davidstutz/superpixel-benchmark"
"davidstutz/superpixels-revisited" -> "davidstutz/seeds-revised"
"davidstutz/superpixels-revisited" -> "carlren/gSLICr"
"davidstutz/superpixels-revisited" -> "NVlabs/ssn_superpixels"
"davidstutz/superpixels-revisited" -> "PSMM/SLIC-Superpixels"
"davidstutz/superpixels-revisited" -> "wctu/SEAL"
"davidstutz/superpixels-revisited" -> "davidstutz/graph-based-image-segmentation"
"cfzd/FcaNet" -> "kaix90/DCTNet"
"cfzd/FcaNet" -> "dcdcvgroup/FcaNet"
"cfzd/FcaNet" -> "wofmanaf/SA-Net"
"cfzd/FcaNet" -> "houqb/CoordAttention"
"cfzd/FcaNet" -> "BangguWu/ECANet"
"cfzd/FcaNet" -> "murufeng/EPSANet"
"cfzd/FcaNet" -> "theFoxofSky/ddfnet" ["e"=1]
"cfzd/FcaNet" -> "VisibleShadow/Implementation-of-Detecting-Camouflaged-Object-in-Frequency-Domain"
"cfzd/FcaNet" -> "badripatro/SpectFormers" ["e"=1]
"cfzd/FcaNet" -> "YimianDai/open-aff"
"cfzd/FcaNet" -> "EndlessSora/focal-frequency-loss" ["e"=1]
"cfzd/FcaNet" -> "PSCLab-ASU/Learning-in-the-Frequency-Domain"
"cfzd/FcaNet" -> "raoyongming/GFNet" ["e"=1]
"cfzd/FcaNet" -> "ZjjConan/SimAM"
"cfzd/FcaNet" -> "DingXiaoH/DiverseBranchBlock" ["e"=1]
"zh460045050/LNSNet" -> "DensoITLab/ss-with-RIM"
"zh460045050/LNSNet" -> "fuy34/SPPSMStereo"
"Dootmaan/DSRL" -> "wanglixilinx/DSRL"
"Dootmaan/DSRL" -> "Xilinx/DSRL"
"Dootmaan/DSRL" -> "Dootmaan/PFSeg"
"lucidrains/segformer-pytorch" -> "bubbliiiing/segformer-pytorch" ["e"=1]
"lucidrains/segformer-pytorch" -> "camlaedtke/segmentation_pytorch"
"lucidrains/segformer-pytorch" -> "920232796/SETR-pytorch"
"lucidrains/segformer-pytorch" -> "NVlabs/SegFormer" ["e"=1]
"lucidrains/segformer-pytorch" -> "rstrudel/segmenter"
"lucidrains/segformer-pytorch" -> "fudan-zvg/SETR"
"lucidrains/segformer-pytorch" -> "gupta-abhay/setr-pytorch"
"gupta-abhay/setr-pytorch" -> "920232796/SETR-pytorch"
"gupta-abhay/setr-pytorch" -> "fudan-zvg/SETR"
"PaddleCV-SIG/EISeg" -> "PaddleCV-SIG/PaddleRS" ["e"=1]
"PaddleCV-SIG/EISeg" -> "PaddleCV-SIG/PaddleLabel"
"PaddleCV-SIG/EISeg" -> "SamsungLabs/ritm_interactive_segmentation"
"PaddleCV-SIG/EISeg" -> "QPT-Family/QPT" ["e"=1]
"carlren/gSLICr" -> "davidstutz/superpixel-benchmark"
"carlren/gSLICr" -> "fderue/SLIC_CUDA"
"carlren/gSLICr" -> "davidstutz/superpixels-revisited"
"carlren/gSLICr" -> "Algy/fast-slic"
"carlren/gSLICr" -> "PSMM/SLIC-Superpixels"
"carlren/gSLICr" -> "mikigom/gSLICrPy"
"carlren/gSLICr" -> "NVlabs/ssn_superpixels"
"carlren/gSLICr" -> "np-csu/SLIC-superpixel-with-OpenCV"
"carlren/gSLICr" -> "ankurhanda/SceneNetv1.0" ["e"=1]
"sssdddwww2/CVPR2021_VSPW_Implement" -> "VSPW-dataset/VSPW_baseline"
"sssdddwww2/CVPR2021_VSPW_Implement" -> "sssdddwww2/vspw_dataset_download"
"sssdddwww2/CVPR2021_VSPW_Implement" -> "VSPW-dataset/VSPW_code"
"sssdddwww2/CVPR2021_VSPW_Implement" -> "VSPW-dataset/VSPW-dataset-download"
"VSPW-dataset/VSPW-dataset-download" -> "VSPW-dataset/VSPW_baseline"
"VSPW-dataset/VSPW-dataset-download" -> "sssdddwww2/CVPR2021_VSPW_Implement"
"VSPW-dataset/VSPW-dataset-download" -> "sssdddwww2/vspw_dataset_download"
"sssdddwww2/vspw_dataset_download" -> "sssdddwww2/CVPR2021_VSPW_Implement"
"sssdddwww2/vspw_dataset_download" -> "VSPW-dataset/VSPW_code"
"sssdddwww2/vspw_dataset_download" -> "VSPW-dataset/VSPW-dataset-download"
"VSPW-dataset/VSPW_code" -> "sssdddwww2/CVPR2021_VSPW_Implement"
"VSPW-dataset/VSPW_code" -> "sssdddwww2/vspw_dataset_download"
"joe-siyuan-qiao/ViP-DeepLab" -> "mcahny/vps"
"joe-siyuan-qiao/ViP-DeepLab" -> "NaiyuGao/PanopticDepth"
"joe-siyuan-qiao/ViP-DeepLab" -> "dvlab-research/PanopticFCN"
"joe-siyuan-qiao/ViP-DeepLab" -> "bytedance/kmax-deeplab" ["e"=1]
"joe-siyuan-qiao/ViP-DeepLab" -> "bowenc0221/panoptic-deeplab"
"joe-siyuan-qiao/ViP-DeepLab" -> "Chenglin-Yang/PatchAttack" ["e"=1]
"liqiokkk/FCtL" -> "VinAIResearch/MagNet"
"liewjunhao/thin-object-selection" -> "KunyangHan/Intelligent-Pixel-Annotation-Tool"
"VinAIResearch/MagNet" -> "liqiokkk/FCtL"
"NaiyuGao/PanopticDepth" -> "HarborYuan/PolyphonicFormer"
"StevenGrove/LearnableTreeFilterV2" -> "Megvii-BaseDetection/TreeFilter-Torch"
"Walstruzz/edge_eval_python" -> "zeakey/edgeval"
"WHUHLX/CATS" -> "xavysp/LDC"
"midasklr/DDRNet.TensorRT" -> "midasklr/DDRNet.Pytorch"
"midasklr/DDRNet.TensorRT" -> "chenjun2hao/DDRNet.pytorch"
"VSPW-dataset/VSPW_baseline" -> "sssdddwww2/CVPR2021_VSPW_Implement"
"VSPW-dataset/VSPW_baseline" -> "VSPW-dataset/VSPW-dataset-download"
"VSPW-dataset/VSPW_baseline" -> "GuoleiSun/VSS-MRCFA"
"midasklr/DDRNet.Pytorch" -> "midasklr/DDRNet.TensorRT"
"amueller/gco_python" -> "yujiali/pygco"
"amueller/gco_python" -> "Borda/pyGCO"
"XuJiacong/PIDNet" -> "ydhongHIT/DDRNet"
"XuJiacong/PIDNet" -> "MichaelFan01/STDC-Seg"
"XuJiacong/PIDNet" -> "xzz777/SCTNet"
"XuJiacong/PIDNet" -> "chenjun2hao/DDRNet.pytorch"
"XuJiacong/PIDNet" -> "CoinCheung/BiSeNet"
"XuJiacong/PIDNet" -> "lxtGH/SFSegNets"
"XuJiacong/PIDNet" -> "RolandGao/RegSeg"
"XuJiacong/PIDNet" -> "Visual-Attention-Network/SegNeXt" ["e"=1]
"XuJiacong/PIDNet" -> "NVlabs/SegFormer" ["e"=1]
"XuJiacong/PIDNet" -> "hustvl/TopFormer"
"XuJiacong/PIDNet" -> "sithu31296/semantic-segmentation"
"XuJiacong/PIDNet" -> "bubbliiiing/segformer-pytorch" ["e"=1]
"XuJiacong/PIDNet" -> "zh320/realtime-semantic-segmentation-pytorch"
"XuJiacong/PIDNet" -> "takaniwa/DSNet"
"XuJiacong/PIDNet" -> "OpenGVLab/InternImage" ["e"=1]
"alexgkendall/SegNet-Tutorial" -> "alexgkendall/caffe-segnet"
"alexgkendall/SegNet-Tutorial" -> "TimoSaemann/caffe-segnet-cudnn5"
"alexgkendall/SegNet-Tutorial" -> "tkuanlun350/Tensorflow-SegNet"
"alexgkendall/SegNet-Tutorial" -> "TimoSaemann/ENet"
"alexgkendall/SegNet-Tutorial" -> "fyu/dilation"
"alexgkendall/SegNet-Tutorial" -> "hszhao/PSPNet"
"alexgkendall/SegNet-Tutorial" -> "e-lab/ENet-training"
"alexgkendall/SegNet-Tutorial" -> "HyeonwooNoh/DeconvNet"
"alexgkendall/SegNet-Tutorial" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"alexgkendall/SegNet-Tutorial" -> "hszhao/ICNet"
"alexgkendall/SegNet-Tutorial" -> "mcordts/cityscapesScripts"
"alexgkendall/SegNet-Tutorial" -> "torrvision/crfasrnn"
"alexgkendall/SegNet-Tutorial" -> "zijundeng/pytorch-semantic-segmentation"
"alexgkendall/SegNet-Tutorial" -> "davidtvs/PyTorch-ENet"
"alexgkendall/SegNet-Tutorial" -> "DrSleep/tensorflow-deeplab-resnet"
"lucasb-eyer/pydensecrf" -> "torrvision/crfasrnn"
"lucasb-eyer/pydensecrf" -> "MarvinTeichmann/ConvCRF"
"lucasb-eyer/pydensecrf" -> "sadeepj/crfasrnn_keras"
"lucasb-eyer/pydensecrf" -> "DrSleep/tensorflow-deeplab-resnet"
"lucasb-eyer/pydensecrf" -> "meetps/pytorch-semseg"
"lucasb-eyer/pydensecrf" -> "zijundeng/pytorch-semantic-segmentation"
"lucasb-eyer/pydensecrf" -> "zhanghang1989/PyTorch-Encoding"
"lucasb-eyer/pydensecrf" -> "kazuto1011/deeplab-pytorch"
"lucasb-eyer/pydensecrf" -> "jfzhang95/pytorch-deeplab-xception"
"lucasb-eyer/pydensecrf" -> "bermanmaxim/LovaszSoftmax"
"lucasb-eyer/pydensecrf" -> "HRNet/HRNet-Semantic-Segmentation"
"lucasb-eyer/pydensecrf" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"lucasb-eyer/pydensecrf" -> "CSAILVision/semantic-segmentation-pytorch"
"lucasb-eyer/pydensecrf" -> "tangzhenyu/SemanticSegmentation_DL"
"lucasb-eyer/pydensecrf" -> "JackieZhangdx/WeakSupervisedSegmentationList" ["e"=1]
"alexgkendall/caffe-segnet" -> "alexgkendall/SegNet-Tutorial"
"alexgkendall/caffe-segnet" -> "TimoSaemann/caffe-segnet-cudnn5"
"alexgkendall/caffe-segnet" -> "tkuanlun350/Tensorflow-SegNet"
"alexgkendall/caffe-segnet" -> "hszhao/PSPNet"
"alexgkendall/caffe-segnet" -> "fyu/dilation"
"alexgkendall/caffe-segnet" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"alexgkendall/caffe-segnet" -> "HyeonwooNoh/DeconvNet"
"alexgkendall/caffe-segnet" -> "TimoSaemann/ENet"
"alexgkendall/caffe-segnet" -> "torrvision/crfasrnn"
"alexgkendall/caffe-segnet" -> "hszhao/ICNet"
"alexgkendall/caffe-segnet" -> "e-lab/ENet-training"
"alexgkendall/caffe-segnet" -> "DrSleep/tensorflow-deeplab-resnet"
"alexgkendall/caffe-segnet" -> "guosheng/refinenet"
"alexgkendall/caffe-segnet" -> "msracver/FCIS"
"alexgkendall/caffe-segnet" -> "soeaver/caffe-model" ["e"=1]
"s9xie/hed" -> "moabitcoin/holy-edge"
"s9xie/hed" -> "yun-liu/RCF"
"s9xie/hed" -> "sniklaus/pytorch-hed"
"s9xie/hed" -> "pdollar/edges"
"s9xie/hed" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"s9xie/hed" -> "meteorshowers/RCF-pytorch"
"s9xie/hed" -> "xavysp/DexiNed"
"s9xie/hed" -> "fengjian0106/hed-tutorial-for-document-scanning"
"s9xie/hed" -> "xwjabc/hed"
"s9xie/hed" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"s9xie/hed" -> "affinelayer/pix2pix-tensorflow" ["e"=1]
"s9xie/hed" -> "pkuCactus/BDCN"
"s9xie/hed" -> "lc82111/Keras_HED"
"s9xie/hed" -> "torrvision/crfasrnn"
"s9xie/hed" -> "hszhao/PSPNet"
"torrvision/crfasrnn" -> "sadeepj/crfasrnn_keras"
"torrvision/crfasrnn" -> "martinkersner/train-CRF-RNN"
"torrvision/crfasrnn" -> "lucasb-eyer/pydensecrf"
"torrvision/crfasrnn" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"torrvision/crfasrnn" -> "msracver/FCIS"
"torrvision/crfasrnn" -> "daijifeng001/MNC"
"torrvision/crfasrnn" -> "fyu/dilation"
"torrvision/crfasrnn" -> "hszhao/PSPNet"
"torrvision/crfasrnn" -> "daijifeng001/R-FCN" ["e"=1]
"torrvision/crfasrnn" -> "MarvinTeichmann/tensorflow-fcn"
"torrvision/crfasrnn" -> "HyeonwooNoh/DeconvNet"
"torrvision/crfasrnn" -> "alexgkendall/caffe-segnet"
"torrvision/crfasrnn" -> "DrSleep/tensorflow-deeplab-resnet"
"torrvision/crfasrnn" -> "guosheng/refinenet"
"torrvision/crfasrnn" -> "facebookresearch/deepmask"
"PaddleCV-SIG/PaddleLabel" -> "PaddleCV-SIG/PaddleLabel-Frontend"
"PaddleCV-SIG/PaddleLabel" -> "PaddleCV-SIG/EISeg"
"hustvl/TopFormer" -> "fudan-zvg/SeaFormer" ["e"=1]
"hustvl/TopFormer" -> "hustvl/MIMDet" ["e"=1]
"hustvl/TopFormer" -> "hustvl/SparseInst" ["e"=1]
"hustvl/TopFormer" -> "dongbo811/AFFormer"
"hustvl/TopFormer" -> "hustvl/Featurized-QueryRCNN" ["e"=1]
"hustvl/TopFormer" -> "Visual-Attention-Network/SegNeXt" ["e"=1]
"hustvl/TopFormer" -> "lxtGH/SFSegNets"
"JamesQFreeman/MicEye" -> "JamesQFreeman/simpleITK-Snap"
"GuoleiSun/VSS-CFFM" -> "GuoleiSun/VSS-MRCFA"
"GuoleiSun/VSS-CFFM" -> "jfzhuang/IFR"
"GuoleiSun/VSS-CFFM" -> "sssdddwww2/vspw_dataset_download"
"MengyangPu/EDTER" -> "ZhouCX117/UAED_MuGE"
"MengyangPu/EDTER" -> "hellozhuo/pidinet"
"MengyangPu/EDTER" -> "pkuCactus/BDCN"
"MengyangPu/EDTER" -> "xwjabc/hed"
"MengyangPu/EDTER" -> "xavysp/DexiNed"
"MengyangPu/EDTER" -> "GuHuangAI/DiffusionEdge"
"MengyangPu/EDTER" -> "MengyangPu/RINDNet"
"MengyangPu/EDTER" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"MengyangPu/EDTER" -> "xavysp/LDC"
"MengyangPu/EDTER" -> "WHUHLX/CATS"
"MengyangPu/EDTER" -> "jhjie/EdgeNAT"
"MengyangPu/EDTER" -> "Walstruzz/edge_eval_python"
"MengyangPu/EDTER" -> "AndreKelm/RefineContourNet"
"MengyangPu/EDTER" -> "Bedrettin-Cetinkaya/RankED"
"MengyangPu/EDTER" -> "yun-liu/RCF-PyTorch"
"jfzhuang/IFR" -> "jfzhuang/DAVSS"
"fyu/dilation" -> "fyu/drn"
"fyu/dilation" -> "daijifeng001/MNC"
"fyu/dilation" -> "HyeonwooNoh/DeconvNet"
"fyu/dilation" -> "alexgkendall/caffe-segnet"
"fyu/dilation" -> "alexgkendall/SegNet-Tutorial"
"fyu/dilation" -> "guosheng/refinenet"
"fyu/dilation" -> "hszhao/PSPNet"
"fyu/dilation" -> "msracver/FCIS"
"fyu/dilation" -> "torrvision/crfasrnn"
"fyu/dilation" -> "itijyou/ademxapp"
"fyu/dilation" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"fyu/dilation" -> "TuSimple/TuSimple-DUC"
"fyu/dilation" -> "MarvinTeichmann/tensorflow-fcn"
"fyu/dilation" -> "YuwenXiong/py-R-FCN" ["e"=1]
"fyu/dilation" -> "liuzhuang13/DenseNetCaffe" ["e"=1]
"TheLegendAli/DeepLab-Context" -> "TheLegendAli/DeepLab-Context2"
"TheLegendAli/DeepLab-Context" -> "jay-mahadeokar/deeplab-public-ver2"
"TheLegendAli/DeepLab-Context" -> "DrSleep/tensorflow-deeplab-lfov"
"TheLegendAli/DeepLab-Context" -> "martinkersner/train-DeepLab"
"TheLegendAli/DeepLab-Context" -> "cdmh/deeplab-public"
"TheLegendAli/DeepLab-Context" -> "xmyqsh/deeplab-v2"
"TheLegendAli/DeepLab-Context" -> "guosheng/refinenet"
"TheLegendAli/DeepLab-Context" -> "martinkersner/train-CRF-RNN"
"TheLegendAli/DeepLab-Context" -> "DrSleep/tensorflow-deeplab-resnet"
"TheLegendAli/DeepLab-Context" -> "torrvision/crfasrnn"
"TheLegendAli/DeepLab-Context" -> "vlfeat/matconvnet-fcn" ["e"=1]
"martinkersner/py-img-seg-eval" -> "Visceral-Project/EvaluateSegmentation" ["e"=1]
"martinkersner/py-img-seg-eval" -> "xuebinqin/Binary-Segmentation-Evaluation-Tool" ["e"=1]
"martinkersner/py-img-seg-eval" -> "fregu856/segmentation"
"martinkersner/py-img-seg-eval" -> "bodokaiser/piwise"
"martinkersner/py-img-seg-eval" -> "martinkersner/train-CRF-RNN"
"martinkersner/py-img-seg-eval" -> "MarvinTeichmann/ConvCRF"
"martinkersner/train-CRF-RNN" -> "MasazI/crfasrnn-training"
"martinkersner/train-CRF-RNN" -> "torrvision/crfasrnn"
"martinkersner/train-CRF-RNN" -> "hyenal/crfasrnn"
"martinkersner/train-CRF-RNN" -> "sadeepj/crfasrnn_keras"
"martinkersner/train-CRF-RNN" -> "torrvision/caffe"
"martinkersner/train-CRF-RNN" -> "martinkersner/train-DeepLab"
"martinkersner/train-CRF-RNN" -> "johannesu/meanfield-matlab"
"martinkersner/train-CRF-RNN" -> "TheLegendAli/DeepLab-Context"
"martinkersner/train-CRF-RNN" -> "ClaireXie/denseCRF_matlab"
"martinkersner/train-CRF-RNN" -> "daijifeng001/MNC"
"yun-liu/RCF-PyTorch" -> "balajiselvaraj1601/RCF_Pytorch_Updated"
"yun-liu/RCF-PyTorch" -> "yun-liu/plot-edge-pr-curves"
"yun-liu/RCF-PyTorch" -> "WHUHLX/CATS"
"yun-liu/RCF-PyTorch" -> "Walstruzz/edge_eval_python"
"xavysp/LDC" -> "WHUHLX/CATS"
"xavysp/LDC" -> "xavysp/TEED"
"xavysp/LDC" -> "GuHuangAI/DiffusionEdge"
"xavysp/LDC" -> "xavysp/DexiNed"
"XavierCHEN34/ClickSEG" -> "uncbiag/SimpleClick"
"XavierCHEN34/ClickSEG" -> "SamsungLabs/ritm_interactive_segmentation"
"XavierCHEN34/ClickSEG" -> "YouHuang67/InterFormer"
"XavierCHEN34/ClickSEG" -> "HiLab-git/MIDeepSeg" ["e"=1]
"XavierCHEN34/ClickSEG" -> "shiyinzhang/Inside-Outside-Guidance"
"XavierCHEN34/ClickSEG" -> "SamsungLabs/fbrs_interactive_segmentation"
"XavierCHEN34/ClickSEG" -> "zmhhmz/GPCIS_CVPR2023"
"XavierCHEN34/ClickSEG" -> "hkchengrex/Scribble-to-Mask"
"XavierCHEN34/ClickSEG" -> "alibaba/ClickSEG"
"XavierCHEN34/ClickSEG" -> "frazerlin/focuscut"
"XavierCHEN34/ClickSEG" -> "MarcoForte/DeepInteractiveSegmentation"
"XavierCHEN34/ClickSEG" -> "frazerlin/fcanet"
"XavierCHEN34/ClickSEG" -> "sabarim/itis"
"vrabaud/gPb" -> "HiDiYANG/gPb-GSoC"
"oyxhust/HAM" -> "zixuzhuang/CSNet"
"HoinJung/SuperpixelGCN-Segmentation" -> "rsinghlab/GNN-Tumor-Seg"
"cedricgsh/ISDNet" -> "jankyee/URUR"
"King-HAW/DC-MT" -> "xuhuaren/TDSNet"
"YanFangCS/AINET" -> "wangyxxjtu/AINet-Superpixel"
"DensoITLab/HCFormer" -> "DensoITLab/ss-with-RIM"
"megvii-research/TreeEnergyLoss" -> "zbf1991/A2GNN" ["e"=1]
"megvii-research/TreeEnergyLoss" -> "Megvii-BaseDetection/TreeFilter-Torch"
"megvii-research/TreeEnergyLoss" -> "siyueyu/SCWSSOD" ["e"=1]
"megvii-research/TreeEnergyLoss" -> "Luffy03/AGMM-SASS" ["e"=1]
"MarvinTeichmann/tensorflow-fcn" -> "shekkizh/FCN.tensorflow"
"MarvinTeichmann/tensorflow-fcn" -> "MarvinTeichmann/KittiSeg"
"MarvinTeichmann/tensorflow-fcn" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"MarvinTeichmann/tensorflow-fcn" -> "warmspringwinds/tf-image-segmentation"
"MarvinTeichmann/tensorflow-fcn" -> "aurora95/Keras-FCN"
"MarvinTeichmann/tensorflow-fcn" -> "DrSleep/tensorflow-deeplab-resnet"
"MarvinTeichmann/tensorflow-fcn" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"MarvinTeichmann/tensorflow-fcn" -> "msracver/FCIS"
"MarvinTeichmann/tensorflow-fcn" -> "ethereon/caffe-tensorflow" ["e"=1]
"MarvinTeichmann/tensorflow-fcn" -> "tkuanlun350/Tensorflow-SegNet"
"MarvinTeichmann/tensorflow-fcn" -> "ry/tensorflow-resnet" ["e"=1]
"MarvinTeichmann/tensorflow-fcn" -> "jakeret/tf_unet" ["e"=1]
"MarvinTeichmann/tensorflow-fcn" -> "torrvision/crfasrnn"
"MarvinTeichmann/tensorflow-fcn" -> "CharlesShang/TFFRCNN" ["e"=1]
"MarvinTeichmann/tensorflow-fcn" -> "sadeepj/crfasrnn_keras"
"xavysp/TEED" -> "xavysp/LDC"
"xavysp/TEED" -> "WHUHLX/CATS"
"xavysp/TEED" -> "ZhouCX117/UAED_MuGE"
"MarvinTeichmann/KittiSeg" -> "MarvinTeichmann/tensorflow-fcn"
"MarvinTeichmann/KittiSeg" -> "MarvinTeichmann/MultiNet"
"MarvinTeichmann/KittiSeg" -> "shekkizh/FCN.tensorflow"
"MarvinTeichmann/KittiSeg" -> "MarvinTeichmann/KittiBox" ["e"=1]
"MarvinTeichmann/KittiSeg" -> "DrSleep/tensorflow-deeplab-resnet"
"MarvinTeichmann/KittiSeg" -> "warmspringwinds/tf-image-segmentation"
"MarvinTeichmann/KittiSeg" -> "aurora95/Keras-FCN"
"MarvinTeichmann/KittiSeg" -> "BichenWuUCB/squeezeDet" ["e"=1]
"MarvinTeichmann/KittiSeg" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"MarvinTeichmann/KittiSeg" -> "fyu/dilation"
"MarvinTeichmann/KittiSeg" -> "hszhao/ICNet"
"MarvinTeichmann/KittiSeg" -> "msracver/FCIS"
"MarvinTeichmann/KittiSeg" -> "JunshengFu/semantic_segmentation"
"MarvinTeichmann/KittiSeg" -> "torrvision/crfasrnn"
"MarvinTeichmann/KittiSeg" -> "TensorVision/TensorVision" ["e"=1]
"mcordts/cityscapesScripts" -> "HRNet/HRNet-Semantic-Segmentation"
"mcordts/cityscapesScripts" -> "openseg-group/openseg.pytorch"
"mcordts/cityscapesScripts" -> "yu-changqian/TorchSeg"
"mcordts/cityscapesScripts" -> "NVIDIA/semantic-segmentation"
"mcordts/cityscapesScripts" -> "jfzhang95/pytorch-deeplab-xception"
"mcordts/cityscapesScripts" -> "junfu1115/DANet"
"mcordts/cityscapesScripts" -> "hszhao/PSPNet"
"mcordts/cityscapesScripts" -> "meetps/pytorch-semseg"
"mcordts/cityscapesScripts" -> "hszhao/semseg"
"mcordts/cityscapesScripts" -> "zhanghang1989/PyTorch-Encoding"
"mcordts/cityscapesScripts" -> "speedinghzl/CCNet"
"mcordts/cityscapesScripts" -> "fregu856/deeplabv3"
"mcordts/cityscapesScripts" -> "CSAILVision/semantic-segmentation-pytorch"
"mcordts/cityscapesScripts" -> "open-mmlab/mmsegmentation" ["e"=1]
"mcordts/cityscapesScripts" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"GuoleiSun/VSS-MRCFA" -> "GuoleiSun/VSS-CFFM"
"preddy5/segnet" -> "imlab-uiip/keras-segnet"
"preddy5/segnet" -> "0bserver07/Keras-SegNet-Basic"
"preddy5/segnet" -> "nicolov/segmentation_keras"
"preddy5/segnet" -> "wuyang0329/unet" ["e"=1]
"martinkersner/train-DeepLab" -> "DrSleep/tensorflow-deeplab-lfov"
"martinkersner/train-DeepLab" -> "TheLegendAli/DeepLab-Context"
"martinkersner/train-DeepLab" -> "cdmh/deeplab-public"
"martinkersner/train-DeepLab" -> "martinkersner/train-CRF-RNN"
"martinkersner/train-DeepLab" -> "xmyqsh/deeplab-v2"
"wkentaro/fcn" -> "wkentaro/pytorch-fcn"
"uncbiag/SimpleClick" -> "XavierCHEN34/ClickSEG"
"uncbiag/SimpleClick" -> "SamsungLabs/ritm_interactive_segmentation"
"uncbiag/SimpleClick" -> "YouHuang67/InterFormer"
"uncbiag/SimpleClick" -> "cilinyan/PiClick"
"uncbiag/SimpleClick" -> "TitorX/CFR-ICL-Interactive-Segmentation"
"uncbiag/SimpleClick" -> "Zhao-Yian/GraCo"
"uncbiag/SimpleClick" -> "uncbiag/SegNext"
"uncbiag/SimpleClick" -> "MengyuWang826/SegRefiner" ["e"=1]
"uncbiag/SimpleClick" -> "frazerlin/focuscut"
"VisibleShadow/Implementation-of-Detecting-Camouflaged-Object-in-Frequency-Domain" -> "GewelsJI/DGNet" ["e"=1]
"VisibleShadow/Implementation-of-Detecting-Camouflaged-Object-in-Frequency-Domain" -> "HVision-NKU/CamoFormer" ["e"=1]
"fvisin/dataset_loaders" -> "SimJeg/FC-DenseNet"
"fvisin/dataset_loaders" -> "fvisin/main_loop_tf"
"BGU-CS-VIL/DeepMCBM" -> "BGU-CS-VIL/pdc-dp-means"
"BGU-CS-VIL/DeepMCBM" -> "BGU-CS-VIL/dpmmpython"
"BGU-CS-VIL/DeepMCBM" -> "BGU-CS-VIL/vmdls"
"BGU-CS-VIL/DeepMCBM" -> "BGU-CS-VIL/dpmmpythonStreaming"
"BGU-CS-VIL/DeepMCBM" -> "BGU-CS-VIL/JA-POLS"
"Orcuslc/GrabCut" -> "moetayuko/GrabCut"
"Orcuslc/GrabCut" -> "downingstreet/GrabCut"
"amasky/ram" -> "musyoku/self-normalizing-networks"
"e-lab/ENet-training" -> "PavlosMelissinos/enet-keras"
"e-lab/ENet-training" -> "TimoSaemann/ENet"
"e-lab/ENet-training" -> "kwotsin/TensorFlow-ENet"
"e-lab/ENet-training" -> "fregu856/segmentation"
"e-lab/ENet-training" -> "itijyou/ademxapp"
"e-lab/ENet-training" -> "e-lab/torch-toolbox" ["e"=1]
"e-lab/ENet-training" -> "shelhamer/clockwork-fcn"
"e-lab/ENet-training" -> "e-lab/LinkNet"
"e-lab/ENet-training" -> "alexgkendall/SegNet-Tutorial"
"e-lab/ENet-training" -> "alexgkendall/caffe-segnet"
"e-lab/ENet-training" -> "songhan/SqueezeNet-Deep-Compression" ["e"=1]
"e-lab/ENet-training" -> "daijifeng001/MNC"
"facebookresearch/deepmask" -> "facebookresearch/multipathnet"
"facebookresearch/deepmask" -> "msracver/FCIS"
"facebookresearch/deepmask" -> "torrvision/crfasrnn"
"facebookresearch/deepmask" -> "daijifeng001/MNC"
"facebookresearch/deepmask" -> "facebookarchive/fb.resnet.torch" ["e"=1]
"facebookresearch/deepmask" -> "jcjohnson/densecap" ["e"=1]
"facebookresearch/deepmask" -> "facebookarchive/torchnet" ["e"=1]
"facebookresearch/deepmask" -> "facebookresearch/ResNeXt" ["e"=1]
"facebookresearch/deepmask" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"facebookresearch/deepmask" -> "soumith/convnet-benchmarks" ["e"=1]
"facebookresearch/deepmask" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"facebookresearch/deepmask" -> "torch/torch7" ["e"=1]
"facebookresearch/deepmask" -> "DmitryUlyanov/texture_nets" ["e"=1]
"facebookresearch/deepmask" -> "NVIDIA/DIGITS" ["e"=1]
"facebookresearch/deepmask" -> "Newmu/dcgan_code" ["e"=1]
"daijifeng001/MNC" -> "msracver/FCIS"
"daijifeng001/MNC" -> "daijifeng001/R-FCN" ["e"=1]
"daijifeng001/MNC" -> "fyu/dilation"
"daijifeng001/MNC" -> "itijyou/ademxapp"
"daijifeng001/MNC" -> "voidrank/FastMask"
"daijifeng001/MNC" -> "YuwenXiong/py-R-FCN" ["e"=1]
"daijifeng001/MNC" -> "torrvision/crfasrnn"
"daijifeng001/MNC" -> "guosheng/refinenet"
"daijifeng001/MNC" -> "HyeonwooNoh/DeconvNet"
"daijifeng001/MNC" -> "martinkersner/train-CRF-RNN"
"daijifeng001/MNC" -> "hszhao/PSPNet"
"daijifeng001/MNC" -> "felixlaumon/deform-conv"
"daijifeng001/MNC" -> "zhangliliang/RPN_BF" ["e"=1]
"daijifeng001/MNC" -> "TobyPDE/FRRN"
"daijifeng001/MNC" -> "hszhao/ICNet"
"facebookresearch/multipathnet" -> "facebookresearch/deepmask"
"facebookresearch/multipathnet" -> "facebookarchive/torchnet" ["e"=1]
"facebookresearch/multipathnet" -> "msracver/FCIS"
"facebookresearch/multipathnet" -> "jcjohnson/densecap" ["e"=1]
"facebookresearch/multipathnet" -> "daijifeng001/R-FCN" ["e"=1]
"facebookresearch/multipathnet" -> "daijifeng001/MNC"
"facebookresearch/multipathnet" -> "DmitryUlyanov/texture_nets" ["e"=1]
"facebookresearch/multipathnet" -> "facebookarchive/fbcunn" ["e"=1]
"facebookresearch/multipathnet" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"facebookresearch/multipathnet" -> "facebookarchive/fb.resnet.torch" ["e"=1]
"facebookresearch/multipathnet" -> "facebookresearch/ResNeXt" ["e"=1]
"facebookresearch/multipathnet" -> "Element-Research/rnn" ["e"=1]
"facebookresearch/multipathnet" -> "soumith/dcgan.torch" ["e"=1]
"facebookresearch/multipathnet" -> "torrvision/crfasrnn"
"facebookresearch/multipathnet" -> "soumith/imagenet-multiGPU.torch" ["e"=1]
"CSAILVision/sceneparsing" -> "hszhao/PSPNet"
"CSAILVision/sceneparsing" -> "CSAILVision/placeschallenge"
"CSAILVision/sceneparsing" -> "CSAILVision/semantic-segmentation-pytorch"
"CSAILVision/sceneparsing" -> "hellochick/PSPNet-tensorflow"
"CSAILVision/sceneparsing" -> "itijyou/ademxapp"
"CSAILVision/sceneparsing" -> "guosheng/refinenet"
"CSAILVision/sceneparsing" -> "fyu/dilation"
"CSAILVision/sceneparsing" -> "Vladkryvoruchko/PSPNet-Keras-tensorflow"
"CSAILVision/sceneparsing" -> "daijifeng001/MNC"
"CSAILVision/sceneparsing" -> "zijundeng/pytorch-semantic-segmentation"
"CSAILVision/sceneparsing" -> "nightrome/cocostuff10k"
"CSAILVision/sceneparsing" -> "DrSleep/tensorflow-deeplab-resnet"
"CSAILVision/sceneparsing" -> "martinkersner/train-DeepLab"
"CSAILVision/sceneparsing" -> "shelhamer/clockwork-fcn"
"CSAILVision/sceneparsing" -> "msracver/FCIS"
"jimeiyang/objectContourDetector" -> "Raj-08/tensorflow-object-contour-detection"
"jimeiyang/objectContourDetector" -> "kmaninis/COB"
"jlindsey15/RAM" -> "zhongwen/RAM"
"jlindsey15/RAM" -> "jtkim-kaist/ram_modified"
"jlindsey15/RAM" -> "seann999/tensorflow_mnist_ram"
"jlindsey15/RAM" -> "conan7882/recurrent-attention-model"
"tkuanlun350/Tensorflow-SegNet" -> "alexgkendall/caffe-segnet"
"tkuanlun350/Tensorflow-SegNet" -> "alexgkendall/SegNet-Tutorial"
"tkuanlun350/Tensorflow-SegNet" -> "mathildor/TF-SegNet"
"tkuanlun350/Tensorflow-SegNet" -> "andreaazzini/segnet.tf"
"tkuanlun350/Tensorflow-SegNet" -> "MarvinTeichmann/tensorflow-fcn"
"tkuanlun350/Tensorflow-SegNet" -> "shekkizh/FCN.tensorflow"
"tkuanlun350/Tensorflow-SegNet" -> "DrSleep/tensorflow-deeplab-resnet"
"tkuanlun350/Tensorflow-SegNet" -> "TimoSaemann/caffe-segnet-cudnn5"
"tkuanlun350/Tensorflow-SegNet" -> "lexfridman/deeptesla"
"tkuanlun350/Tensorflow-SegNet" -> "hellochick/PSPNet-tensorflow"
"tkuanlun350/Tensorflow-SegNet" -> "MarvinTeichmann/KittiSeg"
"tkuanlun350/Tensorflow-SegNet" -> "toimcio/SegNet-tensorflow"
"tkuanlun350/Tensorflow-SegNet" -> "jakeret/tf_unet" ["e"=1]
"tkuanlun350/Tensorflow-SegNet" -> "arahusky/Tensorflow-Segmentation"
"tkuanlun350/Tensorflow-SegNet" -> "mshunshin/SegNetCMR" ["e"=1]
"shelhamer/clockwork-fcn" -> "raghudeep/netwarp_public" ["e"=1]
"shelhamer/clockwork-fcn" -> "JingchunCheng/Seg-with-SPN" ["e"=1]
"shelhamer/clockwork-fcn" -> "SamvitJ/Accel"
"imlab-uiip/keras-segnet" -> "0bserver07/Keras-SegNet-Basic"
"imlab-uiip/keras-segnet" -> "preddy5/segnet"
"imlab-uiip/keras-segnet" -> "ykamikawa/tf-keras-SegNet"
"imlab-uiip/keras-segnet" -> "aurora95/Keras-FCN"
"imlab-uiip/keras-segnet" -> "nicolov/segmentation_keras"
"imlab-uiip/keras-segnet" -> "namakemono/keras-segnet"
"imlab-uiip/keras-segnet" -> "rcmalli/keras-squeezenet" ["e"=1]
"imlab-uiip/keras-segnet" -> "titu1994/Keras-ResNeXt" ["e"=1]
"MarvinTeichmann/MultiNet" -> "MarvinTeichmann/KittiSeg"
"MarvinTeichmann/MultiNet" -> "MarvinTeichmann/KittiBox" ["e"=1]
"MarvinTeichmann/MultiNet" -> "ucbdrive/bdd100k" ["e"=1]
"MarvinTeichmann/MultiNet" -> "zhaoweicai/mscnn" ["e"=1]
"MarvinTeichmann/MultiNet" -> "XingangPan/SCNN" ["e"=1]
"MarvinTeichmann/MultiNet" -> "hszhao/ICNet"
"MarvinTeichmann/MultiNet" -> "hengck23/didi-udacity-2017" ["e"=1]
"MarvinTeichmann/MultiNet" -> "BichenWuUCB/squeezeDet" ["e"=1]
"MarvinTeichmann/MultiNet" -> "e-lab/ENet-training"
"MarvinTeichmann/MultiNet" -> "fregu856/segmentation"
"MarvinTeichmann/MultiNet" -> "SeokjuLee/VPGNet" ["e"=1]
"MarvinTeichmann/MultiNet" -> "mjshiggins/ros-examples" ["e"=1]
"MarvinTeichmann/MultiNet" -> "alexgkendall/caffe-segnet"
"MarvinTeichmann/MultiNet" -> "TimoSaemann/ENet"
"MarvinTeichmann/MultiNet" -> "hlwang1124/SNE-RoadSeg" ["e"=1]
"ZhouCX117/UAED_MuGE" -> "Bedrettin-Cetinkaya/RankED"
"ZhouCX117/UAED_MuGE" -> "elharroussomar/Refined-Edge-Detection-With-Cascaded-and-High-Resolution-Convolutional-Network"
"fabianbormann/Tensorflow-DeconvNet-Segmentation" -> "HyeonwooNoh/DeconvNet"
"fabianbormann/Tensorflow-DeconvNet-Segmentation" -> "MarvinTeichmann/tensorflow-fcn"
"fabianbormann/Tensorflow-DeconvNet-Segmentation" -> "warmspringwinds/tf-image-segmentation"
"fabianbormann/Tensorflow-DeconvNet-Segmentation" -> "DrSleep/tensorflow-deeplab-lfov"
"jankyee/URUR" -> "cedricgsh/ISDNet"
"YouHuang67/InterFormer" -> "veizgyauzgyauz/FCFI"
"YouHuang67/InterFormer" -> "lab206/AdaptiveClick"
"YouHuang67/InterFormer" -> "YouHuang67/focsam"
"kmaninis/COB" -> "jponttuset/mcg"
"kmaninis/COB" -> "lejeunel/cobnet"
"kmaninis/COB" -> "jimeiyang/objectContourDetector"
"kmaninis/COB" -> "trungtpham/SceneCut"
"zhongwen/RAM" -> "jlindsey15/RAM"
"zhongwen/RAM" -> "jtkim-kaist/ram_modified"
"zhongwen/RAM" -> "seann999/tensorflow_mnist_ram"
"zhongwen/RAM" -> "amasky/ram"
"TheLegendAli/DeepLab-Context2" -> "xmyqsh/deeplab-v2"
"BGU-CS-VIL/RF-DTAN" -> "BGU-CS-VIL/SpaceJAM"
"zmhhmz/GPCIS_CVPR2023" -> "cilinyan/PiClick"
"GuHuangAI/DiffusionEdge" -> "ZhouCX117/UAED_MuGE"
"GuHuangAI/DiffusionEdge" -> "xavysp/LDC"
"GuHuangAI/DiffusionEdge" -> "GuHuangAI/ADM-Public" ["e"=1]
"GuHuangAI/DiffusionEdge" -> "hellozhuo/pidinet"
"GuHuangAI/DiffusionEdge" -> "ymgw55/segment-anything-edge-detection"
"GuHuangAI/DiffusionEdge" -> "MengyangPu/EDTER"
"GuHuangAI/DiffusionEdge" -> "xavysp/TEED"
"GuHuangAI/DiffusionEdge" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"GuHuangAI/DiffusionEdge" -> "lin-tianyu/Stable-Diffusion-Seg" ["e"=1]
"msracver/FCIS" -> "daijifeng001/MNC"
"msracver/FCIS" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"msracver/FCIS" -> "TuSimple/mx-maskrcnn" ["e"=1]
"msracver/FCIS" -> "daijifeng001/R-FCN" ["e"=1]
"msracver/FCIS" -> "msracver/Deformable-ConvNets" ["e"=1]
"msracver/FCIS" -> "YuwenXiong/py-R-FCN" ["e"=1]
"msracver/FCIS" -> "msracver/Deep-Feature-Flow" ["e"=1]
"msracver/FCIS" -> "hszhao/PSPNet"
"msracver/FCIS" -> "felixgwu/mask_rcnn_pytorch" ["e"=1]
"msracver/FCIS" -> "MarvinTeichmann/tensorflow-fcn"
"msracver/FCIS" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"msracver/FCIS" -> "DrSleep/tensorflow-deeplab-resnet"
"msracver/FCIS" -> "fyu/dilation"
"msracver/FCIS" -> "torrvision/crfasrnn"
"msracver/FCIS" -> "itijyou/ademxapp"
"hszhao/PSPNet" -> "hszhao/semseg"
"hszhao/PSPNet" -> "hszhao/ICNet"
"hszhao/PSPNet" -> "Vladkryvoruchko/PSPNet-Keras-tensorflow"
"hszhao/PSPNet" -> "msracver/FCIS"
"hszhao/PSPNet" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"hszhao/PSPNet" -> "alexgkendall/caffe-segnet"
"hszhao/PSPNet" -> "itijyou/ademxapp"
"hszhao/PSPNet" -> "hellochick/PSPNet-tensorflow"
"hszhao/PSPNet" -> "fyu/dilation"
"hszhao/PSPNet" -> "guosheng/refinenet"
"hszhao/PSPNet" -> "zijundeng/pytorch-semantic-segmentation"
"hszhao/PSPNet" -> "DrSleep/tensorflow-deeplab-resnet"
"hszhao/PSPNet" -> "Lextal/pspnet-pytorch"
"hszhao/PSPNet" -> "msracver/Deformable-ConvNets" ["e"=1]
"hszhao/PSPNet" -> "mcordts/cityscapesScripts"
"nightrome/cocostuff10k" -> "itijyou/ademxapp"
"nightrome/cocostuff10k" -> "nightrome/cocostuff" ["e"=1]
"nightrome/cocostuff10k" -> "guosheng/refinenet"
"xzz777/SCTNet" -> "XuJiacong/PIDNet"
"xzz777/SCTNet" -> "NiccoloCavagnero/PEM" ["e"=1]
"xzz777/SCTNet" -> "Linwei-Chen/FreqFusion" ["e"=1]
"xzz777/SCTNet" -> "fudan-zvg/SeaFormer" ["e"=1]
"xzz777/SCTNet" -> "Linwei-Chen/FADC" ["e"=1]
"xzz777/SCTNet" -> "ydhongHIT/DDRNet"
"xzz777/SCTNet" -> "hyunwoo137/MetaSeg"
"xzz777/SCTNet" -> "chenjun2hao/DDRNet.pytorch"
"shekkizh/FCN.tensorflow" -> "MarvinTeichmann/tensorflow-fcn"
"shekkizh/FCN.tensorflow" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"shekkizh/FCN.tensorflow" -> "MarvinTeichmann/KittiSeg"
"shekkizh/FCN.tensorflow" -> "DrSleep/tensorflow-deeplab-resnet"
"shekkizh/FCN.tensorflow" -> "warmspringwinds/tf-image-segmentation"
"shekkizh/FCN.tensorflow" -> "jakeret/tf_unet" ["e"=1]
"shekkizh/FCN.tensorflow" -> "aurora95/Keras-FCN"
"shekkizh/FCN.tensorflow" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"shekkizh/FCN.tensorflow" -> "tkuanlun350/Tensorflow-SegNet"
"shekkizh/FCN.tensorflow" -> "msracver/FCIS"
"shekkizh/FCN.tensorflow" -> "smallcorgi/Faster-RCNN_TF" ["e"=1]
"shekkizh/FCN.tensorflow" -> "lucasb-eyer/pydensecrf"
"shekkizh/FCN.tensorflow" -> "torrvision/crfasrnn"
"shekkizh/FCN.tensorflow" -> "daijifeng001/R-FCN" ["e"=1]
"shekkizh/FCN.tensorflow" -> "rishizek/tensorflow-deeplab-v3-plus"
"DrSleep/tensorflow-deeplab-resnet" -> "DrSleep/tensorflow-deeplab-lfov"
"DrSleep/tensorflow-deeplab-resnet" -> "MarvinTeichmann/tensorflow-fcn"
"DrSleep/tensorflow-deeplab-resnet" -> "shekkizh/FCN.tensorflow"
"DrSleep/tensorflow-deeplab-resnet" -> "zhengyang-wang/Deeplab-v2--ResNet-101--Tensorflow"
"DrSleep/tensorflow-deeplab-resnet" -> "rishizek/tensorflow-deeplab-v3-plus"
"DrSleep/tensorflow-deeplab-resnet" -> "isht7/pytorch-deeplab-resnet"
"DrSleep/tensorflow-deeplab-resnet" -> "warmspringwinds/tf-image-segmentation"
"DrSleep/tensorflow-deeplab-resnet" -> "eveningdong/DeepLabV3-Tensorflow"
"DrSleep/tensorflow-deeplab-resnet" -> "lucasb-eyer/pydensecrf"
"DrSleep/tensorflow-deeplab-resnet" -> "sthalles/deeplab_v3"
"DrSleep/tensorflow-deeplab-resnet" -> "rishizek/tensorflow-deeplab-v3"
"DrSleep/tensorflow-deeplab-resnet" -> "CharlesShang/FastMaskRCNN" ["e"=1]
"DrSleep/tensorflow-deeplab-resnet" -> "msracver/FCIS"
"DrSleep/tensorflow-deeplab-resnet" -> "MarvinTeichmann/KittiSeg"
"DrSleep/tensorflow-deeplab-resnet" -> "hszhao/PSPNet"
"warmspringwinds/tensorflow_notes" -> "warmspringwinds/tf-image-segmentation"
"warmspringwinds/tensorflow_notes" -> "arahusky/Tensorflow-Segmentation"
"aurora95/Keras-FCN" -> "JihongJu/keras-fcn"
"aurora95/Keras-FCN" -> "MarvinTeichmann/tensorflow-fcn"
"aurora95/Keras-FCN" -> "nicolov/segmentation_keras"
"aurora95/Keras-FCN" -> "shekkizh/FCN.tensorflow"
"aurora95/Keras-FCN" -> "yhenon/keras-frcnn" ["e"=1]
"aurora95/Keras-FCN" -> "sadeepj/crfasrnn_keras"
"aurora95/Keras-FCN" -> "divamgupta/image-segmentation-keras" ["e"=1]
"aurora95/Keras-FCN" -> "jocicmarko/ultrasound-nerve-segmentation" ["e"=1]
"aurora95/Keras-FCN" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"aurora95/Keras-FCN" -> "MarvinTeichmann/KittiSeg"
"aurora95/Keras-FCN" -> "bonlime/keras-deeplab-v3-plus"
"aurora95/Keras-FCN" -> "ahundt/tf-image-segmentation"
"aurora95/Keras-FCN" -> "imlab-uiip/keras-segnet"
"aurora95/Keras-FCN" -> "Vladkryvoruchko/PSPNet-Keras-tensorflow"
"aurora95/Keras-FCN" -> "warmspringwinds/tf-image-segmentation"
"imatge-upc/detection-2016-nipsws" -> "XL2013/Pytorch_Deep_RL_1"
"imatge-upc/detection-2016-nipsws" -> "aleksispi/drl-rpn-tf"
"imatge-upc/detection-2016-nipsws" -> "amiralansary/rl-medical"
"imatge-upc/detection-2016-nipsws" -> "jlindsey15/RAM"
"imatge-upc/detection-2016-nipsws" -> "thanosvlo/MARL-for-Anatomical-Landmark-Detection"
"imatge-upc/detection-2016-nipsws" -> "DeepRNN/object_detection" ["e"=1]
"imatge-upc/detection-2016-nipsws" -> "xiaolonw/adversarial-frcnn" ["e"=1]
"imatge-upc/detection-2016-nipsws" -> "EdenMacdonald/h-DQN" ["e"=1]
"davidstutz/superpixel-benchmark" -> "davidstutz/superpixels-revisited"
"davidstutz/superpixel-benchmark" -> "fuy34/superpixel_fcn"
"davidstutz/superpixel-benchmark" -> "NVlabs/ssn_superpixels"
"davidstutz/superpixel-benchmark" -> "carlren/gSLICr"
"davidstutz/superpixel-benchmark" -> "wctu/SEAL"
"davidstutz/superpixel-benchmark" -> "perrying/ssn-pytorch"
"davidstutz/superpixel-benchmark" -> "BGU-CS-VIL/BASS"
"davidstutz/superpixel-benchmark" -> "laixintao/slic-python-implementation"
"davidstutz/superpixel-benchmark" -> "PSMM/SLIC-Superpixels"
"davidstutz/superpixel-benchmark" -> "davidstutz/extended-berkeley-segmentation-benchmark"
"davidstutz/superpixel-benchmark" -> "yun-liu/HFS"
"davidstutz/superpixel-benchmark" -> "Algy/fast-slic"
"davidstutz/superpixel-benchmark" -> "yun-liu/DEL"
"davidstutz/superpixel-benchmark" -> "TingmanYan/SDR" ["e"=1]
"davidstutz/superpixel-benchmark" -> "mingyuliutw/EntropyRateSuperpixel"
"lexfridman/deeptesla" -> "0bserver07/Nvidia-Autopilot-Keras" ["e"=1]
"lexfridman/deeptesla" -> "tkuanlun350/Tensorflow-SegNet"
"lexfridman/deeptesla" -> "lexfridman/boring-detector"
"lexfridman/deeptesla" -> "lexfridman/keras-retinanet"
"arahusky/Tensorflow-Segmentation" -> "warmspringwinds/tensorflow_notes"
"arahusky/Tensorflow-Segmentation" -> "warmspringwinds/tf-image-segmentation"
"arahusky/Tensorflow-Segmentation" -> "ljanyst/image-segmentation-fcn"
"arahusky/Tensorflow-Segmentation" -> "MarvinTeichmann/tensorflow-fcn"
"arahusky/Tensorflow-Segmentation" -> "shekkizh/FCN.tensorflow"
"arahusky/Tensorflow-Segmentation" -> "kimoktm/U-Net" ["e"=1]
"arahusky/Tensorflow-Segmentation" -> "tkuanlun350/Tensorflow-SegNet"
"arahusky/Tensorflow-Segmentation" -> "nicolov/segmentation_keras"
"kostas1515/AGLU" -> "BGU-CS-VIL/DiTAC"
"itijyou/ademxapp" -> "guosheng/refinenet"
"itijyou/ademxapp" -> "hszhao/PSPNet"
"itijyou/ademxapp" -> "daijifeng001/MNC"
"itijyou/ademxapp" -> "msracver/FCIS"
"itijyou/ademxapp" -> "TobyPDE/FRRN"
"itijyou/ademxapp" -> "fyu/dilation"
"itijyou/ademxapp" -> "hszhao/ICNet"
"itijyou/ademxapp" -> "e-lab/ENet-training"
"itijyou/ademxapp" -> "shelhamer/clockwork-fcn"
"itijyou/ademxapp" -> "jiwoon-ahn/psa" ["e"=1]
"itijyou/ademxapp" -> "mapillary/inplace_abn"
"itijyou/ademxapp" -> "aayushbansal/PixelNet" ["e"=1]
"itijyou/ademxapp" -> "cypw/DPNs" ["e"=1]
"itijyou/ademxapp" -> "nightrome/cocostuff10k"
"itijyou/ademxapp" -> "TuSimple/TuSimple-DUC"
"nicolov/segmentation_keras" -> "aurora95/Keras-FCN"
"nicolov/segmentation_keras" -> "jocicmarko/ultrasound-nerve-segmentation" ["e"=1]
"nicolov/segmentation_keras" -> "preddy5/segnet"
"nicolov/segmentation_keras" -> "warmspringwinds/tf-image-segmentation"
"nicolov/segmentation_keras" -> "0bserver07/One-Hundred-Layers-Tiramisu"
"nicolov/segmentation_keras" -> "imlab-uiip/keras-segnet"
"nicolov/segmentation_keras" -> "JihongJu/keras-fcn"
"nicolov/segmentation_keras" -> "fregu856/segmentation"
"nicolov/segmentation_keras" -> "fyu/dilation"
"nicolov/segmentation_keras" -> "MarvinTeichmann/tensorflow-fcn"
"SimJeg/FC-DenseNet" -> "0bserver07/One-Hundred-Layers-Tiramisu"
"SimJeg/FC-DenseNet" -> "bfortuner/pytorch_tiramisu"
"SimJeg/FC-DenseNet" -> "fvisin/dataset_loaders"
"SimJeg/FC-DenseNet" -> "faustomilletari/VNet" ["e"=1]
"SimJeg/FC-DenseNet" -> "itijyou/ademxapp"
"SimJeg/FC-DenseNet" -> "titu1994/DenseNet" ["e"=1]
"SimJeg/FC-DenseNet" -> "titu1994/Fully-Connected-DenseNets-Semantic-Segmentation"
"SimJeg/FC-DenseNet" -> "msracver/FCIS"
"SimJeg/FC-DenseNet" -> "guosheng/refinenet"
"SimJeg/FC-DenseNet" -> "HasnainRaz/FC-DenseNet-TensorFlow"
"SimJeg/FC-DenseNet" -> "TobyPDE/FRRN"
"SimJeg/FC-DenseNet" -> "torrvision/crfasrnn"
"SimJeg/FC-DenseNet" -> "martinkersner/train-DeepLab"
"SimJeg/FC-DenseNet" -> "hszhao/ICNet"
"SimJeg/FC-DenseNet" -> "hszhao/PSPNet"
"TimoSaemann/caffe-segnet-cudnn5" -> "alexgkendall/SegNet-Tutorial"
"TimoSaemann/caffe-segnet-cudnn5" -> "alexgkendall/caffe-segnet"
"TimoSaemann/caffe-segnet-cudnn5" -> "TimoSaemann/ENet"
"TimoSaemann/caffe-segnet-cudnn5" -> "SoonminHwang/caffe-segmentation"
"TimoSaemann/caffe-segnet-cudnn5" -> "TimoSaemann/caffe-enet"
"TobyPDE/FRRN" -> "hiwonjoon/tf-frrn"
"TobyPDE/FRRN" -> "itijyou/ademxapp"
"TobyPDE/FRRN" -> "yuxng/DA-RNN" ["e"=1]
"TobyPDE/FRRN" -> "daijifeng001/MNC"
"TobyPDE/FRRN" -> "guosheng/refinenet"
"warmspringwinds/tf-image-segmentation" -> "warmspringwinds/tensorflow_notes"
"warmspringwinds/tf-image-segmentation" -> "MarvinTeichmann/tensorflow-fcn"
"warmspringwinds/tf-image-segmentation" -> "DrSleep/tensorflow-deeplab-resnet"
"warmspringwinds/tf-image-segmentation" -> "shekkizh/FCN.tensorflow"
"warmspringwinds/tf-image-segmentation" -> "MarvinTeichmann/KittiSeg"
"warmspringwinds/tf-image-segmentation" -> "arahusky/Tensorflow-Segmentation"
"warmspringwinds/tf-image-segmentation" -> "warmspringwinds/pytorch-segmentation-detection"
"warmspringwinds/tf-image-segmentation" -> "nicolov/segmentation_keras"
"warmspringwinds/tf-image-segmentation" -> "aurora95/Keras-FCN"
"warmspringwinds/tf-image-segmentation" -> "DrSleep/tensorflow-deeplab-lfov"
"warmspringwinds/tf-image-segmentation" -> "itijyou/ademxapp"
"warmspringwinds/tf-image-segmentation" -> "fabianbormann/Tensorflow-DeconvNet-Segmentation"
"warmspringwinds/tf-image-segmentation" -> "torrvision/crfasrnn"
"warmspringwinds/tf-image-segmentation" -> "fyu/dilation"
"warmspringwinds/tf-image-segmentation" -> "ahundt/tf-image-segmentation"
"titu1994/Fully-Connected-DenseNets-Semantic-Segmentation" -> "0bserver07/One-Hundred-Layers-Tiramisu"
"0bserver07/One-Hundred-Layers-Tiramisu" -> "SimJeg/FC-DenseNet"
"0bserver07/One-Hundred-Layers-Tiramisu" -> "titu1994/Fully-Connected-DenseNets-Semantic-Segmentation"
"0bserver07/One-Hundred-Layers-Tiramisu" -> "junjungoal/Tiramisu-keras"
"0bserver07/One-Hundred-Layers-Tiramisu" -> "HasnainRaz/FC-DenseNet-TensorFlow"
"0bserver07/One-Hundred-Layers-Tiramisu" -> "bfortuner/pytorch_tiramisu"
"guosheng/refinenet" -> "DrSleep/refinenet-pytorch"
"guosheng/refinenet" -> "itijyou/ademxapp"
"guosheng/refinenet" -> "DrSleep/light-weight-refinenet"
"guosheng/refinenet" -> "fyu/dilation"
"guosheng/refinenet" -> "thomasjpfan/pytorch_refinenet"
"guosheng/refinenet" -> "hszhao/PSPNet"
"guosheng/refinenet" -> "msracver/FCIS"
"guosheng/refinenet" -> "daijifeng001/MNC"
"guosheng/refinenet" -> "yu-changqian/pytorch-segmentation"
"guosheng/refinenet" -> "eragonruan/refinenet-image-segmentation"
"guosheng/refinenet" -> "hszhao/ICNet"
"guosheng/refinenet" -> "TheLegendAli/DeepLab-Context"
"guosheng/refinenet" -> "torrvision/crfasrnn"
"guosheng/refinenet" -> "felixgwu/mask_rcnn_pytorch" ["e"=1]
"guosheng/refinenet" -> "markshih91/refinenet_pytorch"
"DrSleep/tensorflow-deeplab-lfov" -> "DrSleep/tensorflow-deeplab-resnet"
"DrSleep/tensorflow-deeplab-lfov" -> "martinkersner/train-DeepLab"
"DrSleep/tensorflow-deeplab-lfov" -> "TheLegendAli/DeepLab-Context"
"DrSleep/tensorflow-deeplab-lfov" -> "zhengyang-wang/Deeplab-v2--ResNet-101--Tensorflow"
"DrSleep/tensorflow-deeplab-lfov" -> "TheLegendAli/DeepLab-Context2"
"DrSleep/tensorflow-deeplab-lfov" -> "eveningdong/DeepLabV3-Tensorflow"
"voidrank/FastMask" -> "daijifeng001/MNC"
"0bserver07/Keras-SegNet-Basic" -> "imlab-uiip/keras-segnet"
"0bserver07/Keras-SegNet-Basic" -> "namakemono/keras-segnet"
"xmyqsh/deeplab-v2" -> "TheLegendAli/DeepLab-Context2"
"Borda/pyGCO" -> "amueller/gco_python"
"Borda/pyGCO" -> "yujiali/pygco"
"Zhao-Yian/GraCo" -> "uncbiag/SegNext"
"uncbiag/SegNext" -> "Zhao-Yian/GraCo"
"BGU-CS-VIL/Training-Free-VOS" -> "BGU-CS-VIL/JA-POLS"
"felixlaumon/deform-conv" -> "Zardinality/TF-deformable-conv"
"felixlaumon/deform-conv" -> "oeway/pytorch-deform-conv" ["e"=1]
"felixlaumon/deform-conv" -> "bharatsingh430/Deformable-ConvNets" ["e"=1]
"felixlaumon/deform-conv" -> "Zardinality/TF_Deformable_Net"
"felixlaumon/deform-conv" -> "msracver/Deformable-ConvNets" ["e"=1]
"felixlaumon/deform-conv" -> "daijifeng001/MNC"
"felixlaumon/deform-conv" -> "unsky/Deformable-ConvNets-caffe" ["e"=1]
"felixlaumon/deform-conv" -> "MarvinTeichmann/tensorflow-fcn"
"felixlaumon/deform-conv" -> "felixgwu/mask_rcnn_pytorch" ["e"=1]
"felixlaumon/deform-conv" -> "martinkersner/train-DeepLab"
"felixlaumon/deform-conv" -> "bharatsingh430/soft-nms" ["e"=1]
"felixlaumon/deform-conv" -> "msracver/FCIS"
"felixlaumon/deform-conv" -> "bharatsingh430/py-R-FCN-multiGPU" ["e"=1]
"felixlaumon/deform-conv" -> "xmyqsh/FPN" ["e"=1]
"felixlaumon/deform-conv" -> "kmaninis/OSVOS-caffe" ["e"=1]
"wkentaro/pytorch-fcn" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"wkentaro/pytorch-fcn" -> "zijundeng/pytorch-semantic-segmentation"
"wkentaro/pytorch-fcn" -> "pochih/FCN-pytorch"
"wkentaro/pytorch-fcn" -> "meetps/pytorch-semseg"
"wkentaro/pytorch-fcn" -> "jfzhang95/pytorch-deeplab-xception"
"wkentaro/pytorch-fcn" -> "Tramac/awesome-semantic-segmentation-pytorch"
"wkentaro/pytorch-fcn" -> "longcw/faster_rcnn_pytorch" ["e"=1]
"wkentaro/pytorch-fcn" -> "isht7/pytorch-deeplab-resnet"
"wkentaro/pytorch-fcn" -> "zhanghang1989/PyTorch-Encoding"
"wkentaro/pytorch-fcn" -> "CSAILVision/semantic-segmentation-pytorch"
"wkentaro/pytorch-fcn" -> "ruotianluo/pytorch-faster-rcnn" ["e"=1]
"wkentaro/pytorch-fcn" -> "kazuto1011/deeplab-pytorch"
"wkentaro/pytorch-fcn" -> "junfu1115/DANet"
"wkentaro/pytorch-fcn" -> "jwyang/faster-rcnn.pytorch" ["e"=1]
"wkentaro/pytorch-fcn" -> "bat67/pytorch-FCN-easiest-demo"
"yun-liu/RCF" -> "meteorshowers/RCF-pytorch"
"yun-liu/RCF" -> "s9xie/hed"
"yun-liu/RCF" -> "pkuCactus/BDCN"
"yun-liu/RCF" -> "moabitcoin/holy-edge"
"yun-liu/RCF" -> "pdollar/edges"
"yun-liu/RCF" -> "MCG-NKU/plot-edge-pr-curves"
"yun-liu/RCF" -> "yun-liu/plot-edge-pr-curves"
"yun-liu/RCF" -> "MarkMoHR/Awesome-Edge-Detection-Papers"
"yun-liu/RCF" -> "yun-liu/RCF-PyTorch"
"yun-liu/RCF" -> "xavysp/DexiNed"
"yun-liu/RCF" -> "xwjabc/hed"
"yun-liu/RCF" -> "mayorx/rcf-edge-detection"
"yun-liu/RCF" -> "lc82111/Keras_HED"
"yun-liu/RCF" -> "fengjian0106/hed-tutorial-for-document-scanning"
"yun-liu/RCF" -> "zeakey/hed"
"meetps/pytorch-semseg" -> "zijundeng/pytorch-semantic-segmentation"
"meetps/pytorch-semseg" -> "CSAILVision/semantic-segmentation-pytorch"
"meetps/pytorch-semseg" -> "mrgloom/awesome-semantic-segmentation" ["e"=1]
"meetps/pytorch-semseg" -> "jfzhang95/pytorch-deeplab-xception"
"meetps/pytorch-semseg" -> "wkentaro/pytorch-fcn"
"meetps/pytorch-semseg" -> "Tramac/awesome-semantic-segmentation-pytorch"
"meetps/pytorch-semseg" -> "zhanghang1989/PyTorch-Encoding"
"meetps/pytorch-semseg" -> "yu-changqian/TorchSeg"
"meetps/pytorch-semseg" -> "hszhao/semseg"
"meetps/pytorch-semseg" -> "Cadene/pretrained-models.pytorch" ["e"=1]
"meetps/pytorch-semseg" -> "junfu1115/DANet"
"meetps/pytorch-semseg" -> "facebookresearch/maskrcnn-benchmark" ["e"=1]
"meetps/pytorch-semseg" -> "roytseng-tw/Detectron.pytorch" ["e"=1]
"meetps/pytorch-semseg" -> "GeorgeSeif/Semantic-Segmentation-Suite"
"meetps/pytorch-semseg" -> "lucasb-eyer/pydensecrf"
"hyunwoo137/EDAFormer" -> "hyunwoo137/MetaSeg"
"isht7/pytorch-deeplab-resnet" -> "speedinghzl/Pytorch-Deeplab"
"isht7/pytorch-deeplab-resnet" -> "bodokaiser/piwise"
"isht7/pytorch-deeplab-resnet" -> "yu-changqian/pytorch-segmentation"
"isht7/pytorch-deeplab-resnet" -> "DrSleep/tensorflow-deeplab-resnet"
"isht7/pytorch-deeplab-resnet" -> "kazuto1011/deeplab-pytorch"
"isht7/pytorch-deeplab-resnet" -> "zijundeng/pytorch-semantic-segmentation"
"isht7/pytorch-deeplab-resnet" -> "oeway/pytorch-deform-conv" ["e"=1]
"isht7/pytorch-deeplab-resnet" -> "Lextal/pspnet-pytorch"
"isht7/pytorch-deeplab-resnet" -> "wkentaro/pytorch-fcn"
"isht7/pytorch-deeplab-resnet" -> "hualin95/Deeplab-v3plus"
"isht7/pytorch-deeplab-resnet" -> "1zb/deformable-convolution-pytorch" ["e"=1]
"isht7/pytorch-deeplab-resnet" -> "speedinghzl/pytorch-segmentation-toolbox"
"isht7/pytorch-deeplab-resnet" -> "fxia22/stn.pytorch" ["e"=1]
"isht7/pytorch-deeplab-resnet" -> "meetps/pytorch-semseg"
"isht7/pytorch-deeplab-resnet" -> "zhanghang1989/PyTorch-Encoding"
"kastnerkyle/deform-conv" -> "DHZS/tf-deformable-conv-layer"
"kastnerkyle/deform-conv" -> "Zardinality/TF_Deformable_Net"
"kastnerkyle/deform-conv" -> "Zardinality/TF-deformable-conv"
"kastnerkyle/deform-conv" -> "ChunhuanLin/deform_conv_pytorch" ["e"=1]
"kastnerkyle/deform-conv" -> "oeway/pytorch-deform-conv" ["e"=1]
"kastnerkyle/deform-conv" -> "XiangLi-Shaun/deformableConvolution_3D"
"hszhao/ICNet" -> "hellochick/ICNet-tensorflow"
"hszhao/ICNet" -> "TimoSaemann/ENet"
"hszhao/ICNet" -> "hszhao/PSPNet"
"hszhao/ICNet" -> "MSiam/TFSegmentation"
"hszhao/ICNet" -> "itijyou/ademxapp"
"hszhao/ICNet" -> "msracver/FCIS"
"hszhao/ICNet" -> "TuSimple/TuSimple-DUC"
"hszhao/ICNet" -> "guosheng/refinenet"
"hszhao/ICNet" -> "Eromera/erfnet_pytorch"
"hszhao/ICNet" -> "sacmehta/ESPNet"
"hszhao/ICNet" -> "oandrienko/fast-semantic-segmentation"
"hszhao/ICNet" -> "alexgkendall/caffe-segnet"
"hszhao/ICNet" -> "daijifeng001/MNC"
"hszhao/ICNet" -> "DrSleep/tensorflow-deeplab-resnet"
"hszhao/ICNet" -> "linksense/LightNet"
"bodokaiser/piwise" -> "yu-changqian/pytorch-segmentation"
"bodokaiser/piwise" -> "isht7/pytorch-deeplab-resnet"
"bodokaiser/piwise" -> "zijundeng/pytorch-semantic-segmentation"
"bodokaiser/piwise" -> "speedinghzl/Pytorch-Deeplab"
"bodokaiser/piwise" -> "meetps/pytorch-semseg"
"bodokaiser/piwise" -> "wkentaro/pytorch-fcn"
"bodokaiser/piwise" -> "zengxianyu/FCN"
"bodokaiser/piwise" -> "warmspringwinds/pytorch-segmentation-detection"
"bodokaiser/piwise" -> "delta-onera/segnet_pytorch"
"bodokaiser/piwise" -> "Lextal/pspnet-pytorch"
"bodokaiser/piwise" -> "mattmacy/vnet.pytorch" ["e"=1]
"bodokaiser/piwise" -> "speedinghzl/pytorch-segmentation-toolbox"
"bodokaiser/piwise" -> "ignacio-rocco/detectorch" ["e"=1]
"bodokaiser/piwise" -> "e-lab/LinkNet"
"PavlosMelissinos/enet-keras" -> "kwotsin/TensorFlow-ENet"
"PavlosMelissinos/enet-keras" -> "e-lab/ENet-training"
"bfortuner/pytorch_tiramisu" -> "SimJeg/FC-DenseNet"
"bfortuner/pytorch_tiramisu" -> "baldassarreFe/pytorch-densenet-tiramisu"
"bfortuner/pytorch_tiramisu" -> "0bserver07/One-Hundred-Layers-Tiramisu"
"bfortuner/pytorch_tiramisu" -> "HasnainRaz/FC-DenseNet-TensorFlow"
"laixintao/slic-python-implementation" -> "jayrambhia/superpixels-SLIC"
"laixintao/slic-python-implementation" -> "NVlabs/ssn_superpixels"
"laixintao/slic-python-implementation" -> "PSMM/SLIC-Superpixels"
"laixintao/slic-python-implementation" -> "davidstutz/superpixel-benchmark"
"laixintao/slic-python-implementation" -> "aleenaniklaus/SLIC_superpixels"
"laixintao/slic-python-implementation" -> "fderue/SLIC_CUDA"
"laixintao/slic-python-implementation" -> "fuy34/superpixel_fcn"
"karolmajek/darknet-pjreddie" -> "karolmajek/Mask_RCNN"
"karolmajek/darknet-pjreddie" -> "diegocavalca/machine-learning"
"nightrome/really-awesome-semantic-segmentation" -> "tangzhenyu/SemanticSegmentation_DL"
"nightrome/really-awesome-semantic-segmentation" -> "nightrome/really-awesome-gan" ["e"=1]
"nightrome/really-awesome-semantic-segmentation" -> "nightrome/cocostuff10k"
"nightrome/really-awesome-semantic-segmentation" -> "felixgwu/mask_rcnn_pytorch" ["e"=1]
"nightrome/really-awesome-semantic-segmentation" -> "hszhao/ICNet"
"nightrome/really-awesome-semantic-segmentation" -> "DrSleep/tensorflow-deeplab-lfov"
"JihongJu/keras-fcn" -> "aurora95/Keras-FCN"
"JihongJu/keras-fcn" -> "Gurupradeep/FCN-for-Semantic-Segmentation"
"JihongJu/keras-fcn" -> "mzaradzki/neuralnets"
"JihongJu/keras-fcn" -> "nicolov/segmentation_keras"
"JihongJu/keras-fcn" -> "dhkim0225/keras-image-segmentation"
"musyoku/wasserstein-gan" -> "musyoku/self-normalizing-networks"
"delta-onera/segnet_pytorch" -> "say4n/pytorch-segnet"
"delta-onera/segnet_pytorch" -> "trypag/pytorch-unet-segnet"
"delta-onera/segnet_pytorch" -> "kwakuTM/SegNet"
"delta-onera/segnet_pytorch" -> "delta-onera/delta_tb"
"yu-changqian/pytorch-segmentation" -> "bodokaiser/piwise"
"yu-changqian/pytorch-segmentation" -> "isht7/pytorch-deeplab-resnet"
"yu-changqian/pytorch-segmentation" -> "felixgwu/mask_rcnn_pytorch" ["e"=1]
"yu-changqian/pytorch-segmentation" -> "zijundeng/pytorch-semantic-segmentation"
"yu-changqian/pytorch-segmentation" -> "Kaixhin/FCN-semantic-segmentation"
"yu-changqian/pytorch-segmentation" -> "speedinghzl/Pytorch-Deeplab"
"yu-changqian/pytorch-segmentation" -> "1zb/deformable-convolution-pytorch" ["e"=1]
"yu-changqian/pytorch-segmentation" -> "yu-changqian/TorchSeg"
"yu-changqian/pytorch-segmentation" -> "TuSimple/TuSimple-DUC"
"yu-changqian/pytorch-segmentation" -> "guosheng/refinenet"
"yu-changqian/pytorch-segmentation" -> "speedinghzl/pytorch-segmentation-toolbox"
"yu-changqian/pytorch-segmentation" -> "itijyou/ademxapp"
"yu-changqian/pytorch-segmentation" -> "openseg-group/OCNet.pytorch"
"yu-changqian/pytorch-segmentation" -> "mapillary/inplace_abn"
"yu-changqian/pytorch-segmentation" -> "warmspringwinds/pytorch-segmentation-detection"
"BGU-CS-VIL/DiTAC" -> "BGU-CS-VIL/GFNCP"
"jtkim-kaist/ram_modified" -> "conan7882/recurrent-attention-model"
"jtkim-kaist/ram_modified" -> "jlindsey15/RAM"
"jtkim-kaist/ram_modified" -> "zhongwen/RAM"
"hyunwoo137/MetaSeg" -> "hyunwoo137/EDAFormer"
"mathildor/TF-SegNet" -> "tkuanlun350/Tensorflow-SegNet"
"mathildor/TF-SegNet" -> "adbedada/deep-learning-notebooks"
"mathildor/TF-SegNet" -> "developmentseed/satTS"
"mathildor/TF-SegNet" -> "andreaazzini/segnet.tf"
"YouHuang67/High-Resolution-Segment-Anything" -> "YouHuang67/mamba-code-explained"
"YouHuang67/High-Resolution-Segment-Anything" -> "YouHuang67/focsam"
"sadeepj/crfasrnn_keras" -> "torrvision/crfasrnn"
"sadeepj/crfasrnn_keras" -> "MiguelMonteiro/CRFasRNNLayer"
"sadeepj/crfasrnn_keras" -> "MarvinTeichmann/ConvCRF"
"sadeepj/crfasrnn_keras" -> "martinkersner/train-CRF-RNN"
"sadeepj/crfasrnn_keras" -> "lucasb-eyer/pydensecrf"
"sadeepj/crfasrnn_keras" -> "DrSleep/tensorflow-deeplab-resnet"
"sadeepj/crfasrnn_keras" -> "aurora95/Keras-FCN"
"sadeepj/crfasrnn_keras" -> "MarvinTeichmann/tensorflow-fcn"
"sadeepj/crfasrnn_keras" -> "sadeepj/crfasrnn_pytorch"
"sadeepj/crfasrnn_keras" -> "shekkizh/FCN.tensorflow"
"sadeepj/crfasrnn_keras" -> "EsmeYi/UNet-CRF-RNN"
"sadeepj/crfasrnn_keras" -> "guosheng/refinenet"
"sadeepj/crfasrnn_keras" -> "bonlime/keras-deeplab-v3-plus"
"sadeepj/crfasrnn_keras" -> "Vladkryvoruchko/PSPNet-Keras-tensorflow"
"sadeepj/crfasrnn_keras" -> "laoj2/segnet_crfasrnn"
"e-lab/LinkNet" -> "e-lab/pytorch-linknet"
"e-lab/LinkNet" -> "Eromera/erfnet"
"zhanghang1989/PyTorch-Encoding" -> "junfu1115/DANet"
"zhanghang1989/PyTorch-Encoding" -> "vacancy/Synchronized-BatchNorm-PyTorch"
"zhanghang1989/PyTorch-Encoding" -> "yu-changqian/TorchSeg"
"zhanghang1989/PyTorch-Encoding" -> "speedinghzl/CCNet"
"zhanghang1989/PyTorch-Encoding" -> "openseg-group/OCNet.pytorch"
"zhanghang1989/PyTorch-Encoding" -> "jfzhang95/pytorch-deeplab-xception"
"zhanghang1989/PyTorch-Encoding" -> "speedinghzl/pytorch-segmentation-toolbox"
"zhanghang1989/PyTorch-Encoding" -> "meetps/pytorch-semseg"
"zhanghang1989/PyTorch-Encoding" -> "zhanghang1989/ResNeSt" ["e"=1]
"zhanghang1989/PyTorch-Encoding" -> "wuhuikai/FastFCN"
"zhanghang1989/PyTorch-Encoding" -> "hszhao/semseg"
"zhanghang1989/PyTorch-Encoding" -> "HRNet/HRNet-Semantic-Segmentation"
"zhanghang1989/PyTorch-Encoding" -> "CSAILVision/semantic-segmentation-pytorch"
"zhanghang1989/PyTorch-Encoding" -> "mapillary/inplace_abn"
"zhanghang1989/PyTorch-Encoding" -> "bermanmaxim/LovaszSoftmax"
"MSiam/TFSegmentation" -> "hellochick/ICNet-tensorflow"
"MSiam/TFSegmentation" -> "linksense/LightNet"
"MSiam/TFSegmentation" -> "TimoSaemann/ENet"
"MSiam/TFSegmentation" -> "hszhao/ICNet"
"MSiam/TFSegmentation" -> "DrSleep/light-weight-refinenet"
"MSiam/TFSegmentation" -> "sacmehta/ESPNet"
"MSiam/TFSegmentation" -> "xiaoyufenfei/LEDNet"
"MSiam/TFSegmentation" -> "oandrienko/fast-semantic-segmentation"
"MSiam/TFSegmentation" -> "dvornikita/blitznet"
"MSiam/TFSegmentation" -> "kwotsin/TensorFlow-ENet"
"MSiam/TFSegmentation" -> "GeorgeSeif/Semantic-Segmentation-Suite"
"MSiam/TFSegmentation" -> "hellochick/PSPNet-tensorflow"
"MSiam/TFSegmentation" -> "speedinghzl/pytorch-segmentation-toolbox"
"MSiam/TFSegmentation" -> "huaifeng1993/DFANet"
"MSiam/TFSegmentation" -> "orsic/swiftnet"
"zijundeng/pytorch-semantic-segmentation" -> "meetps/pytorch-semseg"
"zijundeng/pytorch-semantic-segmentation" -> "wkentaro/pytorch-fcn"
"zijundeng/pytorch-semantic-segmentation" -> "yu-changqian/TorchSeg"
"zijundeng/pytorch-semantic-segmentation" -> "CSAILVision/semantic-segmentation-pytorch"
"zijundeng/pytorch-semantic-segmentation" -> "Tramac/awesome-semantic-segmentation-pytorch"
"zijundeng/pytorch-semantic-segmentation" -> "mrgloom/awesome-semantic-segmentation" ["e"=1]
"zijundeng/pytorch-semantic-segmentation" -> "yu-changqian/pytorch-segmentation"
"zijundeng/pytorch-semantic-segmentation" -> "yassouali/pytorch-segmentation"
"zijundeng/pytorch-semantic-segmentation" -> "zhanghang1989/PyTorch-Encoding"
"zijundeng/pytorch-semantic-segmentation" -> "speedinghzl/pytorch-segmentation-toolbox"
"zijundeng/pytorch-semantic-segmentation" -> "jfzhang95/pytorch-deeplab-xception"
"zijundeng/pytorch-semantic-segmentation" -> "mapillary/inplace_abn"
"zijundeng/pytorch-semantic-segmentation" -> "junfu1115/DANet"
"zijundeng/pytorch-semantic-segmentation" -> "hszhao/semseg"
"zijundeng/pytorch-semantic-segmentation" -> "tangzhenyu/SemanticSegmentation_DL"
"moabitcoin/holy-edge" -> "lc82111/Keras_HED"
"moabitcoin/holy-edge" -> "s9xie/hed"
"moabitcoin/holy-edge" -> "yun-liu/RCF"
"moabitcoin/holy-edge" -> "whyguu/hed-tf"
"moabitcoin/holy-edge" -> "sniklaus/pytorch-hed"
"moabitcoin/holy-edge" -> "meteorshowers/RCF-pytorch"
"moabitcoin/holy-edge" -> "fengjian0106/hed-tutorial-for-document-scanning"
"moabitcoin/holy-edge" -> "zeakey/hed"
"moabitcoin/holy-edge" -> "senliuy/Keras_HED_with_model"
"moabitcoin/holy-edge" -> "ylf-li/ContourGAN"
"moabitcoin/holy-edge" -> "xavysp/DexiNed"
"moabitcoin/holy-edge" -> "pdollar/edges"
"moabitcoin/holy-edge" -> "meteorshowers/hed"
"Kaixhin/FCN-semantic-segmentation" -> "yu-changqian/pytorch-segmentation"
"warmspringwinds/pytorch-segmentation-detection" -> "warmspringwinds/tf-image-segmentation"
"warmspringwinds/pytorch-segmentation-detection" -> "zijundeng/pytorch-semantic-segmentation"
"warmspringwinds/pytorch-segmentation-detection" -> "yu-changqian/pytorch-segmentation"
"warmspringwinds/pytorch-segmentation-detection" -> "bodokaiser/piwise"
"warmspringwinds/pytorch-segmentation-detection" -> "meetps/pytorch-semseg"
"warmspringwinds/pytorch-segmentation-detection" -> "fyu/drn"
"warmspringwinds/pytorch-segmentation-detection" -> "zhanghang1989/PyTorch-Encoding"
"warmspringwinds/pytorch-segmentation-detection" -> "ternaus/robot-surgery-segmentation" ["e"=1]
"warmspringwinds/pytorch-segmentation-detection" -> "roytseng-tw/Detectron.pytorch" ["e"=1]
"warmspringwinds/pytorch-segmentation-detection" -> "linksense/LightNet"
"warmspringwinds/pytorch-segmentation-detection" -> "speedinghzl/pytorch-segmentation-toolbox"
"warmspringwinds/pytorch-segmentation-detection" -> "openseg-group/openseg.pytorch"
"warmspringwinds/pytorch-segmentation-detection" -> "bfortuner/pytorch_tiramisu"
"warmspringwinds/pytorch-segmentation-detection" -> "isht7/pytorch-deeplab-resnet"
"warmspringwinds/pytorch-segmentation-detection" -> "tangzhenyu/SemanticSegmentation_DL"
"TimoSaemann/ENet" -> "hszhao/ICNet"
"TimoSaemann/ENet" -> "kwotsin/TensorFlow-ENet"
"TimoSaemann/ENet" -> "TimoSaemann/caffe-segnet-cudnn5"
"TimoSaemann/ENet" -> "e-lab/ENet-training"
"TimoSaemann/ENet" -> "iArunava/ENet-Real-Time-Semantic-Segmentation"
"TimoSaemann/ENet" -> "alexgkendall/SegNet-Tutorial"
"TimoSaemann/ENet" -> "MSiam/TFSegmentation"
"TimoSaemann/ENet" -> "davidtvs/PyTorch-ENet"
"TimoSaemann/ENet" -> "hellochick/ICNet-tensorflow"
"TimoSaemann/ENet" -> "alexgkendall/caffe-segnet"
"TimoSaemann/ENet" -> "hszhao/PSPNet"
"TimoSaemann/ENet" -> "PavlosMelissinos/enet-keras"
"TimoSaemann/ENet" -> "TimoSaemann/caffe-enet"
"TimoSaemann/ENet" -> "shicai/MobileNet-Caffe" ["e"=1]
"TimoSaemann/ENet" -> "ChenYingpeng/caffe-yolov3" ["e"=1]
"zengxianyu/FCN" -> "zengxianyu/RFCN"
"speedinghzl/Pytorch-Deeplab" -> "isht7/pytorch-deeplab-resnet"
"speedinghzl/Pytorch-Deeplab" -> "speedinghzl/pytorch-segmentation-toolbox"
"speedinghzl/Pytorch-Deeplab" -> "wasidennis/AdaptSegNet" ["e"=1]
"speedinghzl/Pytorch-Deeplab" -> "yu-changqian/pytorch-segmentation"
"speedinghzl/Pytorch-Deeplab" -> "hfslyc/AdvSemiSeg" ["e"=1]
"speedinghzl/Pytorch-Deeplab" -> "kazuto1011/deeplab-pytorch"
"speedinghzl/Pytorch-Deeplab" -> "bodokaiser/piwise"
"speedinghzl/Pytorch-Deeplab" -> "bermanmaxim/jaccardSegment"
"speedinghzl/Pytorch-Deeplab" -> "hualin95/Deeplab-v3plus"
"speedinghzl/Pytorch-Deeplab" -> "speedinghzl/DSRG" ["e"=1]
"speedinghzl/Pytorch-Deeplab" -> "speedinghzl/Scale-Adaptive-Network"
"speedinghzl/Pytorch-Deeplab" -> "openseg-group/OCNet.pytorch"
"kwotsin/TensorFlow-ENet" -> "PavlosMelissinos/enet-keras"
"kwotsin/TensorFlow-ENet" -> "fregu856/segmentation"
"kwotsin/TensorFlow-ENet" -> "TimoSaemann/ENet"
"kwotsin/TensorFlow-ENet" -> "e-lab/ENet-training"
"kwotsin/TensorFlow-ENet" -> "davidtvs/PyTorch-ENet"
"kwotsin/TensorFlow-ENet" -> "iArunava/ENet-Real-Time-Semantic-Segmentation"
"kwotsin/TensorFlow-ENet" -> "hellochick/ICNet-tensorflow"
"kwotsin/TensorFlow-ENet" -> "MSiam/TFSegmentation"
"kwotsin/TensorFlow-ENet" -> "hellochick/semantic-segmentation-tensorflow"
"fregu856/segmentation" -> "kwotsin/TensorFlow-ENet"
"fregu856/segmentation" -> "e-lab/ENet-training"
"fregu856/segmentation" -> "hellochick/semantic-segmentation-tensorflow"
"fregu856/segmentation" -> "hellochick/ICNet-tensorflow"
"fregu856/segmentation" -> "fregu856/2D_detection" ["e"=1]
"fregu856/segmentation" -> "TimoSaemann/ENet"
"fregu856/segmentation" -> "hszhao/ICNet"
"fregu856/segmentation" -> "hellochick/PSPNet-tensorflow"
"fregu856/segmentation" -> "MarvinTeichmann/MultiNet"
"fregu856/segmentation" -> "nicolov/segmentation_keras"
"ljanyst/image-segmentation-fcn" -> "Yuliang-Zou/tf_fcn"
"Eromera/erfnet" -> "Eromera/erfnet_pytorch"
"PSMM/SLIC-Superpixels" -> "np-csu/SLIC-superpixel-with-OpenCV"
"PSMM/SLIC-Superpixels" -> "carlren/gSLICr"
"PSMM/SLIC-Superpixels" -> "Algy/fast-slic"
"PSMM/SLIC-Superpixels" -> "laixintao/slic-python-implementation"
"PSMM/SLIC-Superpixels" -> "davidstutz/superpixel-benchmark"
"PSMM/SLIC-Superpixels" -> "jayrambhia/superpixels-SLIC"
"PSMM/SLIC-Superpixels" -> "davidstutz/superpixels-revisited"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "hellochick/PSPNet-tensorflow"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "hszhao/PSPNet"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "ykamikawa/tf-keras-PSPNet"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "DrSleep/tensorflow-deeplab-resnet"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "BassyKuo/PSPNET-cudnn5"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "aurora95/Keras-FCN"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "hellochick/ICNet-tensorflow"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "karolmajek/PSPNet-Keras-tensorflow"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "zhengyang-wang/Deeplab-v2--ResNet-101--Tensorflow"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "guosheng/refinenet"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "bonlime/keras-deeplab-v3-plus"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "itijyou/ademxapp"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "fregu856/segmentation"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "sadeepj/crfasrnn_keras"
"Vladkryvoruchko/PSPNet-Keras-tensorflow" -> "rishizek/tensorflow-deeplab-v3-plus"
"Zardinality/TF-deformable-conv" -> "Zardinality/TF_Deformable_Net"
"Zardinality/TF-deformable-conv" -> "DHZS/tf-deformable-conv-layer"
"Zardinality/TF-deformable-conv" -> "felixlaumon/deform-conv"
"Zardinality/TF-deformable-conv" -> "BIGKnight/deformable_conv2d_v2_tensorflow"
"Zardinality/TF-deformable-conv" -> "maestrojeong/deformable_convnet"
"Zardinality/TF-deformable-conv" -> "KejieLyu/Deformable_Convolution_Tensorflow" ["e"=1]
"Zardinality/TF_Deformable_Net" -> "Zardinality/TF-deformable-conv"
"Zardinality/TF_Deformable_Net" -> "unsky/Deformable-ConvNets-caffe" ["e"=1]
"Zardinality/TF_Deformable_Net" -> "kastnerkyle/deform-conv"
"Zardinality/TF_Deformable_Net" -> "felixlaumon/deform-conv"
"Zardinality/TF_Deformable_Net" -> "choasup/SIN"
"Borda/pyImSegm" -> "NVlabs/ssn_superpixels"
"Borda/pyImSegm" -> "fuy34/superpixel_fcn"
"BGU-CS-VIL/GFNCP" -> "BGU-CS-VIL/SpaceJAM"
"lexfridman/keep-a-changelog" -> "lexfridman/github-changelog-generator"
"lexfridman/github-changelog-generator" -> "lexfridman/keep-a-changelog"
"lexfridman/github-changelog-generator" -> "lexfridman/cocoapi"
"SamvitJ/Accel" ["l"="53.348,31.07"]
"jfzhuang/DAVSS" ["l"="53.312,31.106"]
"jfzhuang/IFR" ["l"="53.298,31.118"]
"HRNet/HRNet-Semantic-Segmentation" ["l"="53.339,30.954"]
"openseg-group/openseg.pytorch" ["l"="53.345,30.977"]
"NVIDIA/semantic-segmentation" ["l"="53.308,30.952"]
"Tramac/awesome-semantic-segmentation-pytorch" ["l"="53.321,30.92"]
"leoxiaobin/deep-high-resolution-net.pytorch" ["l"="31.728,28.114"]
"junfu1115/DANet" ["l"="53.435,30.991"]
"jfzhang95/pytorch-deeplab-xception" ["l"="53.373,30.907"]
"HRNet/HRNet-Image-Classification" ["l"="53.478,30.99"]
"open-mmlab/mmsegmentation" ["l"="50.519,29.799"]
"yu-changqian/TorchSeg" ["l"="53.383,30.952"]
"CSAILVision/semantic-segmentation-pytorch" ["l"="53.338,30.875"]
"zhanghang1989/ResNeSt" ["l"="50.804,30.048"]
"speedinghzl/CCNet" ["l"="53.423,31.008"]
"mrgloom/awesome-semantic-segmentation" ["l"="50.686,29.829"]
"zhanghang1989/PyTorch-Encoding" ["l"="53.4,30.931"]
"openseg-group/OCNet.pytorch" ["l"="53.407,30.968"]
"luuuyi/CBAM.PyTorch" ["l"="53.506,31.089"]
"Jongchan/attention-module" ["l"="53.525,31.101"]
"moskomule/senet.pytorch" ["l"="53.478,31.089"]
"BangguWu/ECANet" ["l"="53.554,31.092"]
"AlexHex7/Non-local_pytorch" ["l"="53.479,31.065"]
"houqb/CoordAttention" ["l"="53.554,31.111"]
"xvjiarui/GCNet" ["l"="53.475,31.045"]
"miraclewkf/SENet-PyTorch" ["l"="53.511,31.068"]
"Youngkl0726/Convolutional-Block-Attention-Module" ["l"="50.652,33.355"]
"Res2Net/Res2Net-PretrainedModels" ["l"="53.528,31.028"]
"implus/SKNet" ["l"="53.502,31.111"]
"tengshaofeng/ResidualAttentionNetwork-pytorch" ["l"="53.494,31.14"]
"heykeetae/Self-Attention-GAN" ["l"="45.876,29.048"]
"implus/PytorchInsight" ["l"="53.499,31.047"]
"pppLang/SKNet" ["l"="53.55,31.068"]
"lxtGH/OctaveConv_pytorch" ["l"="53.471,31.138"]
"megvii-model/ShuffleNet-Series" ["l"="50.831,30.026"]
"hszhao/semseg" ["l"="53.373,30.938"]
"speedinghzl/pytorch-segmentation-toolbox" ["l"="53.411,30.947"]
"BIGBALLON/CIFAR-ZOO" ["l"="51.124,30.016"]
"yassouali/pytorch-segmentation" ["l"="53.288,30.919"]
"zijundeng/pytorch-semantic-segmentation" ["l"="53.401,30.878"]
"VainF/DeepLabV3Plus-Pytorch" ["l"="53.305,30.893"]
"meetps/pytorch-semseg" ["l"="53.377,30.884"]
"qubvel-org/segmentation_models.pytorch" ["l"="50.68,29.784"]
"ShawnBIT/UNet-family" ["l"="61.899,36.925"]
"LeeJunHyun/Image_Segmentation" ["l"="61.909,36.964"]
"xiaoyufenfei/Efficient-Segmentation-Networks" ["l"="53.325,30.974"]
"JunMa11/SegLossOdyssey" ["l"="61.863,36.884"]
"YudeWang/deeplabv3plus-pytorch" ["l"="53.379,30.924"]
"kazuto1011/deeplab-pytorch" ["l"="53.38,30.864"]
"CoinCheung/BiSeNet" ["l"="53.285,30.972"]
"MichaelFan01/STDC-Seg" ["l"="53.25,31.015"]
"ooooverflow/BiSeNet" ["l"="53.372,30.969"]
"zllrunning/face-parsing.PyTorch" ["l"="44.898,30.711"]
"ydhongHIT/DDRNet" ["l"="53.223,31.016"]
"MaybeShewill-CV/bisenetv2-tensorflow" ["l"="53.189,30.974"]
"XuJiacong/PIDNet" ["l"="53.187,31.025"]
"VITA-Group/FasterSeg" ["l"="53.298,31.014"]
"LikeLy-Journey/SegmenTron" ["l"="53.302,30.991"]
"switchablenorms/CelebAMask-HQ" ["l"="44.863,30.665"]
"XiaLiPKU/EMANet" ["l"="53.4,31.008"]
"wuhuikai/FastFCN" ["l"="53.423,30.975"]
"bubbliiiing/deeplabv3-plus-pytorch" ["l"="50.237,30.162"]
"NVlabs/SegFormer" ["l"="48.864,30.228"]
"fregu856/deeplabv3" ["l"="53.4,30.91"]
"mcordts/cityscapesScripts" ["l"="53.346,30.906"]
"fwang91/residual-attention-network" ["l"="51.607,33.459"]
"liudaizong/Residual-Attention-Network" ["l"="51.565,33.483"]
"szagoruyko/attention-transfer" ["l"="53.549,33.612"]
"KaiyangZhou/pytorch-center-loss" ["l"="33.114,29.428"]
"PistonY/ResidualAttentionNetwork" ["l"="51.82,33.768"]
"facebookresearch/mixup-cifar10" ["l"="51.215,30.222"]
"kevinzakka/recurrent-visual-attention" ["l"="53.38,31.288"]
"ozan-oktay/Attention-Gated-Networks" ["l"="61.917,36.903"]
"leaderj1001/Attention-Augmented-Conv2d" ["l"="53.53,31.077"]
"epfml/attention-cnn" ["l"="53.56,31.039"]
"leaderj1001/Stand-Alone-Self-Attention" ["l"="53.604,31.071"]
"hszhao/SAN" ["l"="53.525,31.049"]
"openai/sparse_attention" ["l"="48.822,33.923"]
"lucidrains/lambda-networks" ["l"="50.866,30.012"]
"adobe/antialiased-cnns" ["l"="51.025,30.168"]
"whai362/PVT" ["l"="50.757,29.87"]
"HobbitLong/CMC" ["l"="53.08,29.57"]
"HobbitLong/PyContrast" ["l"="53.038,29.557"]
"jiwoon-ahn/irn" ["l"="54.094,31.599"]
"nightrome/cocostuff" ["l"="23.472,14.867"]
"isht7/pytorch-deeplab-resnet" ["l"="53.417,30.847"]
"speedinghzl/Pytorch-Deeplab" ["l"="53.418,30.868"]
"lucasb-eyer/pydensecrf" ["l"="53.413,30.809"]
"wkentaro/pytorch-fcn" ["l"="53.355,30.847"]
"jiwoon-ahn/psa" ["l"="54.079,31.607"]
"YudeWang/SEAM" ["l"="54.061,31.597"]
"MisaOgura/flashtorch" ["l"="53.523,30.992"]
"facebookresearch/TorchRay" ["l"="24.047,14.331"]
"greentfrapp/lucent" ["l"="44.751,31.509"]
"FrancescoSaverioZuppichini/A-journey-into-Convolutional-Neural-Network-visualization-" ["l"="47.512,26.756"]
"haofanwang/Score-CAM" ["l"="23.985,14.416"]
"kazuto1011/grad-cam-pytorch" ["l"="24.015,14.484"]
"zasdfgbnm/TorchSnooper" ["l"="50.855,30.028"]
"utkuozbulak/pytorch-cnn-visualizations" ["l"="50.822,29.762"]
"MiguelMonteiro/permutohedral_lattice" ["l"="53.403,30.634"]
"MiguelMonteiro/CRFasRNNLayer" ["l"="53.423,30.668"]
"idofr/pymutohedral_lattice" ["l"="53.387,30.599"]
"MPI-IS/bilateralNN" ["l"="53.391,30.577"]
"zh217/torch-dct" ["l"="53.717,31.187"]
"kaix90/DCTNet" ["l"="53.688,31.184"]
"fbcotter/pytorch_wavelets" ["l"="52.183,29.905"]
"mlomnitz/DiffJPEG" ["l"="39.43,-7.577"]
"raoyongming/GFNet" ["l"="49.1,33.046"]
"dcdcvgroup/FcaNet" ["l"="53.657,31.15"]
"pkuxmq/Invertible-Image-Rescaling" ["l"="-35.114,21.527"]
"cg563/simple-blackbox-attack" ["l"="39.166,-7.437"]
"uber-research/jpeg2dct" ["l"="53.72,31.216"]
"v0lta/PyTorch-Wavelet-Toolbox" ["l"="52.173,29.885"]
"cfzd/FcaNet" ["l"="53.631,31.146"]
"locuslab/pytorch_fft" ["l"="51.419,30.01"]
"cszn/DPIR" ["l"="-35.006,21.461"]
"BorealisAI/advertorch" ["l"="38.999,-7.484"]
"GeorgeSeif/Semantic-Segmentation-Suite" ["l"="53.387,30.825"]
"rishizek/tensorflow-deeplab-v3-plus" ["l"="53.418,30.778"]
"divamgupta/image-segmentation-keras" ["l"="61.967,37.015"]
"DrSleep/tensorflow-deeplab-resnet" ["l"="53.475,30.761"]
"tangzhenyu/SemanticSegmentation_DL" ["l"="53.423,30.83"]
"qubvel/segmentation_models" ["l"="50.661,29.928"]
"sthalles/deeplab_v3" ["l"="53.438,30.771"]
"MSiam/TFSegmentation" ["l"="53.454,30.869"]
"shekkizh/FCN.tensorflow" ["l"="53.481,30.722"]
"terrychenism/OctaveConv" ["l"="53.492,31.187"]
"facebookresearch/OctConv" ["l"="53.498,31.219"]
"iacolippo/octconv-pytorch" ["l"="53.478,31.218"]
"gan3sh500/octaveconv-pytorch" ["l"="53.468,31.193"]
"koshian2/OctConv-TFKeras" ["l"="53.511,31.24"]
"d-li14/octconv.pytorch" ["l"="53.509,31.204"]
"cypw/DPNs" ["l"="51.705,33.526"]
"fidler-lab/polyrnn-pp" ["l"="53.268,30.817"]
"fidler-lab/polyrnn-pp-pytorch" ["l"="53.203,30.789"]
"AlexMa011/pytorch-polygon-rnn" ["l"="53.227,30.802"]
"fidler-lab/curve-gcn" ["l"="53.244,30.835"]
"scaelles/DEXTR-PyTorch" ["l"="53.241,30.75"]
"nv-tlabs/STEAL" ["l"="53.193,30.857"]
"feichtenhofer/Detect-Track" ["l"="54.869,33.744"]
"hszhao/ICNet" ["l"="53.489,30.817"]
"Angzz/awesome-panoptic-segmentation" ["l"="53.226,30.908"]
"ShuLiu1993/PANet" ["l"="50.798,30.122"]
"zengarden/light_head_rcnn" ["l"="50.909,30.21"]
"nv-tlabs/GSCNN" ["l"="53.336,30.992"]
"ronghanghu/seg_every_thing" ["l"="53.344,29.466"]
"zju3dv/snake" ["l"="50.69,30.234"]
"bowenc0221/panoptic-deeplab" ["l"="53.241,30.94"]
"DeepSceneSeg/EfficientPS" ["l"="53.22,30.936"]
"facebookresearch/maskrcnn-benchmark" ["l"="50.751,29.917"]
"Cadene/pretrained-models.pytorch" ["l"="50.832,29.881"]
"roytseng-tw/Detectron.pytorch" ["l"="50.882,30.03"]
"jwyang/faster-rcnn.pytorch" ["l"="50.77,29.946"]
"hellochick/PSPNet-tensorflow" ["l"="53.465,30.783"]
"Vladkryvoruchko/PSPNet-Keras-tensorflow" ["l"="53.458,30.752"]
"holyseven/PSPNet-TF-Reproduce" ["l"="53.4,30.724"]
"hellochick/ICNet-tensorflow" ["l"="53.474,30.827"]
"hszhao/PSPNet" ["l"="53.457,30.803"]
"rishizek/tensorflow-deeplab-v3" ["l"="53.431,30.755"]
"hellochick/semantic-segmentation-tensorflow" ["l"="53.503,30.825"]
"fregu856/segmentation" ["l"="53.522,30.794"]
"tkuanlun350/Tensorflow-SegNet" ["l"="53.54,30.699"]
"eragonruan/refinenet-image-segmentation" ["l"="53.573,30.829"]
"Lextal/pspnet-pytorch" ["l"="53.399,30.847"]
"MarkMoHR/Awesome-Edge-Detection-Papers" ["l"="53.094,30.771"]
"xavysp/DexiNed" ["l"="53.071,30.74"]
"pkuCactus/BDCN" ["l"="53.078,30.758"]
"meteorshowers/RCF-pytorch" ["l"="53.061,30.772"]
"hellozhuo/pidinet" ["l"="53.068,30.723"]
"s9xie/hed" ["l"="53.108,30.749"]
"pdollar/edges" ["l"="53.075,30.792"]
"yun-liu/RCF" ["l"="53.041,30.763"]
"MengyangPu/EDTER" ["l"="53.048,30.711"]
"Lavender105/DFF" ["l"="53.105,30.794"]
"sniklaus/pytorch-hed" ["l"="53.034,30.746"]
"GuHuangAI/DiffusionEdge" ["l"="53.067,30.696"]
"xwjabc/hed" ["l"="53.053,30.743"]
"moabitcoin/holy-edge" ["l"="53.021,30.767"]
"facebookresearch/video-nonlocal-net" ["l"="47.861,33.881"]
"mit-han-lab/temporal-shift-module" ["l"="47.901,33.854"]
"yjxiong/tsn-pytorch" ["l"="47.872,33.911"]
"zhoubolei/TRN-pytorch" ["l"="47.834,33.906"]
"msracver/Deformable-ConvNets" ["l"="50.906,30.047"]
"chengdazhi/Deformable-Convolution-V2-PyTorch" ["l"="50.965,30.131"]
"tea1528/Non-Local-NN-Pytorch" ["l"="53.522,31.153"]
"hualin95/Deeplab-v3plus" ["l"="53.445,30.921"]
"nyoki-mtl/pytorch-segmentation" ["l"="53.424,30.94"]
"CoinCheung/DeepLab-v3-plus-cityscapes" ["l"="53.4,30.955"]
"uber-research/UPSNet" ["l"="53.247,30.919"]
"cocodataset/panopticapi" ["l"="53.199,30.919"]
"mapillary/seamseg" ["l"="53.204,30.892"]
"qizhuli/Weakly-Supervised-Panoptic-Segmentation" ["l"="53.175,30.891"]
"wutianyiRosun/Segmentation.X" ["l"="53.36,30.954"]
"LaoYang1994/SOGNet" ["l"="53.19,30.906"]
"lingtengqiu/Deeperlab-pytorch" ["l"="-53.587,-13.584"]
"SamsungLabs/adaptis" ["l"="53.213,30.852"]
"dvlab-research/PanopticFCN" ["l"="53.209,30.951"]
"mcahny/vps" ["l"="53.227,30.955"]
"LaoYang1994/PanopticSegmentation" ["l"="53.159,30.901"]
"Angzz/panoptic-fpn-gluon" ["l"="53.115,30.904"]
"eveningdong/DeepLabV3-Tensorflow" ["l"="53.468,30.738"]
"bonlime/keras-deeplab-v3-plus" ["l"="53.407,30.745"]
"endernewton/iter-reason" ["l"="53.852,30.572"]
"coderSkyChen/Iterative-Visual-Reasoning.pytorch" ["l"="53.879,30.562"]
"davidmascharka/tbd-nets" ["l"="48.774,32.227"]
"aimbrain/vqa-project" ["l"="48.704,32.131"]
"shubhtuls/factored3d" ["l"="63.801,1.095"]
"choasup/SIN" ["l"="53.808,30.588"]
"DrSleep/refinenet-pytorch" ["l"="53.554,30.879"]
"DrSleep/light-weight-refinenet" ["l"="53.478,30.925"]
"guosheng/refinenet" ["l"="53.532,30.809"]
"thomasjpfan/pytorch_refinenet" ["l"="53.554,30.862"]
"markshih91/refinenet_pytorch" ["l"="53.583,30.85"]
"NVlabs/ssn_superpixels" ["l"="53.417,31.43"]
"fuy34/superpixel_fcn" ["l"="53.4,31.379"]
"wctu/SEAL" ["l"="53.396,31.419"]
"perrying/ssn-pytorch" ["l"="53.418,31.405"]
"davidstutz/superpixel-benchmark" ["l"="53.407,31.449"]
"CYang0515/pytorch_ssn" ["l"="53.403,31.399"]
"bermanmaxim/superpixPool" ["l"="53.384,31.376"]
"laixintao/slic-python-implementation" ["l"="53.431,31.461"]
"davidstutz/superpixels-revisited" ["l"="53.416,31.473"]
"zh460045050/LNSNet" ["l"="53.43,31.395"]
"carlren/gSLICr" ["l"="53.45,31.46"]
"yun-liu/DEL" ["l"="53.391,31.405"]
"raghudeep/bilateralinceptions" ["l"="53.461,31.425"]
"BGU-CS-VIL/BASS" ["l"="53.373,31.461"]
"Algy/fast-slic" ["l"="53.438,31.437"]
"MoritzWillig/pysnic" ["l"="53.471,31.439"]
"joe-siyuan-qiao/WeightStandardization" ["l"="53.404,31.129"]
"enyac-group/single-path-nas" ["l"="52.883,34.051"]
"GothicAi/Instaboost" ["l"="50.695,30.191"]
"JaminFong/DenseNAS" ["l"="52.884,34.079"]
"vacancy/Synchronized-BatchNorm-PyTorch" ["l"="53.403,31.025"]
"megvii-model/MABN" ["l"="53.377,31.233"]
"joe-siyuan-qiao/DetectoRS" ["l"="50.74,30.186"]
"JiahuiYu/slimmable_networks" ["l"="52.823,34.024"]
"LiYingwei/AutoNL" ["l"="52.852,34.118"]
"joe-siyuan-qiao/Batch-Channel-Normalization" ["l"="53.396,31.18"]
"yuhuixu1993/PC-DARTS" ["l"="52.866,34.058"]
"switchablenorms/Switchable-Normalization" ["l"="53.428,31.11"]
"kevin-ssy/FishNet" ["l"="53.431,31.152"]
"karolmajek/Mask_RCNN" ["l"="53.349,30.732"]
"karolmajek/darknet-pjreddie" ["l"="53.319,30.689"]
"markjay4k/Mask-RCNN-series" ["l"="51.956,30.881"]
"CharlesShang/FastMaskRCNN" ["l"="50.473,33.114"]
"obendidi/Tracking-with-darkflow" ["l"="54.591,32.709"]
"diegocavalca/machine-learning" ["l"="53.309,30.666"]
"XingangPan/SCNN" ["l"="64.259,10.364"]
"AndreiBarsan/DynSLAM" ["l"="59.559,11.166"]
"Guanghan/ROLO" ["l"="54.822,33.703"]
"aitorzip/Keras-ICNet" ["l"="53.391,30.774"]
"feiyunzhang/i3d-non-local-pytorch" ["l"="54.296,31.511"]
"dl19940602/GCnet-pytorch" ["l"="53.552,31.206"]
"e-lab/pytorch-linknet" ["l"="53.638,30.891"]
"e-lab/LinkNet" ["l"="53.581,30.886"]
"jacobgil/pytorch-grad-cam" ["l"="50.726,29.696"]
"hujie-frank/SENet" ["l"="50.855,30.055"]
"dmarcosg/DSAC" ["l"="53.202,30.816"]
"megvii-research/ML-GCN" ["l"="52.824,15.918"]
"mng827/curve-gcn-cardiac-mr" ["l"="53.217,30.82"]
"xieenze/PolarMask" ["l"="50.704,30.206"]
"fidler-lab/defgrid-release" ["l"="53.173,30.807"]
"xiaolonw/TimeCycle" ["l"="47.9,34.57"]
"anirudh-chakravarthy/CASENet" ["l"="53.119,30.803"]
"WHUHLX/CATS" ["l"="53.063,30.712"]
"meteorshowers/hed" ["l"="53.016,30.749"]
"xavysp/LDC" ["l"="53.082,30.706"]
"mayorx/rcf-edge-detection" ["l"="53.056,30.755"]
"Tramac/Fast-SCNN-pytorch" ["l"="53.36,30.991"]
"DeepVoltaire/Fast-SCNN" ["l"="53.333,31.075"]
"huaifeng1993/DFANet" ["l"="53.379,30.981"]
"orsic/swiftnet" ["l"="53.365,31.01"]
"xiaoyufenfei/LEDNet" ["l"="53.403,30.981"]
"Eromera/erfnet_pytorch" ["l"="53.462,30.914"]
"wutianyiRosun/CGNet" ["l"="53.424,30.958"]
"PingoLH/FCHarDNet" ["l"="53.315,31.056"]
"juntang-zhuang/ShelfNet" ["l"="53.469,30.965"]
"Reagan1311/DABNet" ["l"="53.394,30.992"]
"Tramac/mobilenetv3-segmentation" ["l"="53.346,31.033"]
"lessw2020/res2net-plus" ["l"="53.634,31.011"]
"DingXiaoH/ACNet" ["l"="53.491,31.025"]
"4uiiurz1/pytorch-res2net" ["l"="53.608,31.007"]
"implus/GFocal" ["l"="50.744,30.256"]
"jfzhang95/LSTM-water-table-depth-prediction" ["l"="53.109,30.611"]
"ZVsion/rgbd_image_segmentation" ["l"="53.122,30.622"]
"jfzhang95/Water-Table-Depth-Prediction-PyTorch" ["l"="53.087,30.59"]
"jfzhang95/project-demo" ["l"="53.108,30.628"]
"HRNet/HRNet-Object-Detection" ["l"="50.798,30.191"]
"HRNet/HRNet-Facial-Landmark-Detection" ["l"="33.368,29.096"]
"HRNet/HigherHRNet-Human-Pose-Estimation" ["l"="31.758,28.182"]
"HRNet/Lite-HRNet" ["l"="31.808,28.204"]
"microsoft/human-pose-estimation.pytorch" ["l"="31.699,28.157"]
"Duankaiwen/CenterNet" ["l"="50.797,30.153"]
"stefanopini/simple-HRNet" ["l"="31.774,28.192"]
"mapillary/inplace_abn" ["l"="53.427,30.924"]
"XingangPan/IBN-Net" ["l"="55.986,32.807"]
"oeway/pytorch-deform-conv" ["l"="50.998,30.098"]
"switchablenorms/SwitchNorm_Detection" ["l"="53.423,31.189"]
"switchablenorms/SwitchNorm_Segmentation" ["l"="53.42,31.172"]
"libuyu/GHM_Detection" ["l"="50.882,30.217"]
"JiaminRen/RandWireNN" ["l"="52.827,34.081"]
"switchablenorms/Sparse_SwitchNorm" ["l"="53.441,31.174"]
"Golbstein/Keras-segmentation-deeplab-v3.1" ["l"="53.386,30.657"]
"aurora95/Keras-FCN" ["l"="53.479,30.682"]
"sadeepj/crfasrnn_keras" ["l"="53.455,30.725"]
"qubvel/classification_models" ["l"="50.648,30.139"]
"zhixuhao/unet" ["l"="61.936,36.986"]
"zhuangyqin/DRN" ["l"="53.427,31.085"]
"tonysy/DRN-MXNet" ["l"="53.438,31.13"]
"MendelXu/ANN" ["l"="53.423,31.033"]
"LinZhuoChen/DUpsampling" ["l"="53.411,30.997"]
"Megvii-BaseDetection/DynamicRouting" ["l"="53.343,31.05"]
"lxtGH/GALD-DGCNet" ["l"="53.374,31.038"]
"THUFutureLab/gluon-face" ["l"="51.79,33.714"]
"oandrienko/fast-semantic-segmentation" ["l"="53.455,30.822"]
"TimoSaemann/ENet" ["l"="53.52,30.831"]
"kwotsin/TensorFlow-ENet" ["l"="53.516,30.852"]
"linksense/LightNet" ["l"="53.44,30.897"]
"e-lab/ENet-training" ["l"="53.546,30.823"]
"StacyYang/gluoncv-torch" ["l"="53.444,31.022"]
"Eromera/erfnet" ["l"="53.545,30.91"]
"sacmehta/ESPNet" ["l"="53.457,30.931"]
"TuSimple/TuSimple-DUC" ["l"="53.482,30.844"]
"cardwing/Codes-for-IntRA-KD" ["l"="64.116,10.378"]
"itijyou/ademxapp" ["l"="53.515,30.816"]
"cardwing/Codes-for-Lane-Detection" ["l"="64.256,10.347"]
"ucbdrive/bdd100k" ["l"="64.326,10.373"]
"bermanmaxim/LovaszSoftmax" ["l"="53.42,30.909"]
"liaopeiyuan/kaggle-solutions" ["l"="50.437,30.575"]
"linksense/LightNetPlusPlus" ["l"="53.471,30.948"]
"MarvinTeichmann/ConvCRF" ["l"="53.444,30.834"]
"DeepMotionAIResearch/DenseASPP" ["l"="53.444,30.976"]
"zym1119/DeepLabv3_MobileNetv2_PyTorch" ["l"="53.36,30.868"]
"CSAILVision/unifiedparsing" ["l"="53.349,31.13"]
"hszhao/PSANet" ["l"="53.39,31.107"]
"lxtGH/DecoupleSegNets" ["l"="53.296,31.044"]
"zjhuang22/maskscoring_rcnn" ["l"="50.768,30.109"]
"hkchengrex/CascadePSP" ["l"="53.321,31.026"]
"shachoi/HANet" ["l"="53.372,31.059"]
"lc82111/Keras_HED" ["l"="52.999,30.76"]
"JXingZhao/EGNet" ["l"="47.702,35.342"]
"BinWang-shu/pytorch_hed" ["l"="52.975,30.736"]
"chongruo/pytorch-HED" ["l"="52.979,30.719"]
"DCurro/CannyEdgePytorch" ["l"="52.919,30.73"]
"yun-liu/plot-edge-pr-curves" ["l"="53.02,30.733"]
"amdegroot/ssd.pytorch" ["l"="50.808,30.028"]
"Lyken17/pytorch-OpCounter" ["l"="50.863,29.894"]
"sacmehta/ESPNetv2" ["l"="53.445,30.962"]
"sacmehta/EdgeNets" ["l"="53.498,30.951"]
"wpf535236337/real-time-network" ["l"="53.387,30.971"]
"ericsun99/Shufflenet-v2-Pytorch" ["l"="51.76,33.222"]
"imedslab/pytorch_bn_fusion" ["l"="51.065,30.692"]
"sacmehta/ESPNetv2-COREML" ["l"="46.792,-24.208"]
"xavysp/TEED" ["l"="53.074,30.68"]
"handong1587/handong1587.github.io" ["l"="50.866,29.955"]
"JackieZhangdx/WeakSupervisedSegmentationList" ["l"="54.109,31.627"]
"msracver/FCIS" ["l"="53.537,30.757"]
"fyu/drn" ["l"="53.475,30.876"]
"fyu/dilation" ["l"="53.516,30.777"]
"kimhc6028/relational-networks" ["l"="23.489,14.801"]
"google/sg2im" ["l"="47.505,32.052"]
"yu-changqian/pytorch-segmentation" ["l"="53.438,30.862"]
"arunmallya/piggyback" ["l"="23.557,14.866"]
"bayesiains/nsf" ["l"="23.608,14.889"]
"YuhuiMa/DFN-tensorflow" ["l"="53.533,30.971"]
"donnyyou/torch-segmentation" ["l"="53.38,31.024"]
"songdejia/DeepLab_v3_plus" ["l"="-52.928,-16.709"]
"gengyanlei/segmentation_pytorch" ["l"="53.557,30.932"]
"VITA-Group/GLNet" ["l"="53.386,31.049"]
"JaveyWang/Pyramid-Attention-Networks-pytorch" ["l"="53.467,31.008"]
"ShawnBIT/Loss-family" ["l"="50.373,30.628"]
"MenghaoGuo/AutoDeeplab" ["l"="-51.667,-14.952"]
"zhengyang-wang/Deeplab-v2--ResNet-101--Tensorflow" ["l"="53.468,30.705"]
"DrSleep/tensorflow-deeplab-lfov" ["l"="53.505,30.706"]
"TheLegendAli/DeepLab-Context" ["l"="53.549,30.719"]
"xmojiao/deeplab_v2" ["l"="53.499,30.693"]
"chenxi116/DeepLabv3.pytorch" ["l"="53.509,30.919"]
"davidtvs/PyTorch-ENet" ["l"="53.46,30.898"]
"senliuy/Keras_HED_with_model" ["l"="52.97,30.763"]
"iamyb/mobileunet" ["l"="52.935,30.763"]
"MCG-NKU/plot-edge-pr-curves" ["l"="53.043,30.733"]
"zhangchbin/ContourNet" ["l"="53.026,30.796"]
"Chrisding/seal" ["l"="53.138,30.822"]
"Chrisding/cityscapes-preprocess" ["l"="53.121,30.828"]
"Chrisding/sbd-preprocess" ["l"="53.114,30.817"]
"yun-liu/DDS" ["l"="53.129,30.788"]
"milongo/CASENet" ["l"="53.087,30.829"]
"lijiaman/CASENet" ["l"="53.101,30.82"]
"twke18/Adaptive_Affinity_Fields" ["l"="53.38,31.152"]
"Liusifei/caffe-spn" ["l"="53.377,31.208"]
"philferriere/tfvos" ["l"="47.71,34.756"]
"ZJULearning/RMI" ["l"="53.386,31.089"]
"ElephantGit/SemanticSegmentationUsingFPN_PanopticFeaturePyramidNetworks" ["l"="53.077,30.906"]
"fengjian0106/hed-tutorial-for-document-scanning" ["l"="52.995,30.738"]
"RRanddom/tf_doc_localisation" ["l"="52.938,30.71"]
"Duchen521/HED-document-detection" ["l"="52.936,30.691"]
"pqpo/SmartCropper" ["l"="59.913,-13.793"]
"liuheng92/tensorflow_PSENet" ["l"="46.439,7.193"]
"xiaoyu258/DocProj" ["l"="46.206,5.919"]
"whyguu/hed-tf" ["l"="52.969,30.751"]
"alessandrozamberletti/docdetect" ["l"="-52.544,8.202"]
"ZJULearning/pixel_link" ["l"="46.385,7.183"]
"leonlulu/DeepLayout" ["l"="47.408,6.49"]
"cvlab-stonybrook/DewarpNet" ["l"="46.217,5.938"]
"djh123/doc_Detection" ["l"="52.905,30.704"]
"Heisenberg0391/TextImageGenerator" ["l"="52.902,30.689"]
"mjDelta/deeplabv3plus-keras" ["l"="53.414,30.595"]
"xiaochunWu/Semantic-Segmentation-CRF" ["l"="53.37,30.619"]
"srihari-humbarwadi/DeepLabV3_Plus-Tensorflow2.0" ["l"="53.363,30.644"]
"nolanliou/mobile-deeplab-v3-plus" ["l"="42.336,25.321"]
"EsmeYi/UNet-CRF-RNN" ["l"="53.437,30.652"]
"laoj2/segnet_crfasrnn" ["l"="53.438,30.674"]
"JunshengFu/semantic_segmentation" ["l"="53.688,30.683"]
"NikolasEnt/Road-Semantic-Segmentation" ["l"="53.723,30.667"]
"penny4860/Kitti-road-semantic-segmentation" ["l"="53.733,30.682"]
"idealwei/SuperPixelPool.pytorch" ["l"="53.357,31.381"]
"parag2489/keras_superpixel_pooling" ["l"="53.363,31.367"]
"js-fan/ICD" ["l"="54.098,31.588"]
"DensoITLab/ss-with-RIM" ["l"="53.417,31.386"]
"DrSleep/multi-task-refinenet" ["l"="64.873,4.206"]
"LeslieZhoa/tensorflow-deeplab_v3_plus" ["l"="42.242,24.017"]
"anxiangsir/urban_seg" ["l"="42.114,24.042"]
"divelab/dilated" ["l"="53.45,31.089"]
"lxtGH/dfn_seg" ["l"="53.553,30.986"]
"ykamikawa/tf-keras-SegNet" ["l"="53.495,30.61"]
"imlab-uiip/keras-segnet" ["l"="53.511,30.627"]
"lsh1994/keras-segmentation" ["l"="42.264,24.093"]
"0bserver07/Keras-SegNet-Basic" ["l"="53.52,30.595"]
"ykamikawa/tf-keras-PSPNet" ["l"="53.467,30.652"]
"whitesockcat/Discriminative-Feature-Network" ["l"="53.576,30.974"]
"YingdaXia/SynthCP" ["l"="53.59,30.925"]
"warmspringwinds/tf-image-segmentation" ["l"="53.505,30.722"]
"TuSimple/mx-maskrcnn" ["l"="51.746,33.537"]
"ijkguo/mx-rcnn" ["l"="51.729,33.556"]
"KeyKy/mobilenet-mxnet" ["l"="51.792,33.562"]
"scaelles/DEXTR-KerasTensorflow" ["l"="53.217,30.714"]
"xingyizhou/ExtremeNet" ["l"="50.835,30.193"]
"isl-org/Intseg" ["l"="53.183,30.661"]
"jfzhang95/DeepGrabCut-PyTorch" ["l"="53.148,30.651"]
"horvitzs/Interactive_Segmentation_Models" ["l"="53.194,30.694"]
"SamsungLabs/fbrs_interactive_segmentation" ["l"="53.192,30.634"]
"ZhouYanzhao/PRM" ["l"="54.128,31.632"]
"shiyinzhang/Inside-Outside-Guidance" ["l"="53.194,30.606"]
"chaddy1004/sobel-operator-pytorch" ["l"="52.877,30.724"]
"hehefan/Recurrent-Attention-Model" ["l"="53.333,31.33"]
"conan7882/recurrent-attention-model" ["l"="53.295,31.359"]
"jlindsey15/RAM" ["l"="53.282,31.391"]
"fxia22/stn.pytorch" ["l"="45.816,27.718"]
"zhongwen/RAM" ["l"="53.294,31.372"]
"facebookarchive/MIXER" ["l"="46.026,27.713"]
"Tramac/Lightweight-Segmentation" ["l"="53.38,30.999"]
"xiaoyufenfei/Real-Time-Semantic-Segmentation" ["l"="53.349,31.007"]
"Vipermdl/MobileNetV3-for-Segmentation" ["l"="53.359,31.042"]
"Tramac/torchscope" ["l"="53.359,31.085"]
"tamakoji/pytorch-syncbn" ["l"="53.407,31.084"]
"xiaoketongxue/AI-News" ["l"="62.002,36.792"]
"kevinlee9/Semantic-Segmentation" ["l"="54.078,31.633"]
"johnnylu305/Simple-does-it-weakly-supervised-instance-and-semantic-segmentation" ["l"="54.047,31.669"]
"chengchunhsu/WSIS_BBTP" ["l"="54.045,31.648"]
"xtudbxk/DSRG-tensorflow" ["l"="54.092,31.639"]
"donnyyou/pytorch-lffd" ["l"="53.377,31.071"]
"guanfuchen/semseg" ["l"="53.353,30.932"]
"fuweifu-vtoo/Semantic-segmentation" ["l"="42.135,24.047"]
"yunlongdong/FCN-pytorch" ["l"="53.298,30.806"]
"bat67/pytorch-FCN-easiest-demo" ["l"="53.325,30.813"]
"pochih/FCN-pytorch" ["l"="53.326,30.84"]
"gan3sh500/attention-augmented-conv" ["l"="53.563,31.135"]
"dongzhang89/FPT" ["l"="53.63,31.083"]
"trypag/pytorch-unet-segnet" ["l"="53.279,31.18"]
"say4n/pytorch-segnet" ["l"="53.272,31.167"]
"alejandrodebus/SegNet" ["l"="53.261,31.212"]
"delta-onera/segnet_pytorch" ["l"="53.296,31.139"]
"PSMM/SLIC-Superpixels" ["l"="53.44,31.479"]
"fderue/SLIC_CUDA" ["l"="53.472,31.46"]
"aleksispi/drl-rpn-tf" ["l"="53.153,31.519"]
"qq456cvb/multi-stage-detection" ["l"="53.128,31.526"]
"ThoroughImages/OctConv" ["l"="53.472,31.259"]
"vivym/OctaveConv.pytorch" ["l"="53.484,31.272"]
"zrl4836/tensorflow_octConv" ["l"="53.508,31.266"]
"AnjieCheng/OctaveConv-Pytorch" ["l"="64.754,2.383"]
"DHZS/tf-deformable-conv-layer" ["l"="53.749,30.571"]
"kastnerkyle/deform-conv" ["l"="53.771,30.574"]
"Zardinality/TF-deformable-conv" ["l"="53.722,30.596"]
"smallsunsun1/deformable_conv_v2" ["l"="53.769,30.546"]
"L1aoXingyu/fcn.pytorch" ["l"="53.289,30.767"]
"JavisPeng/u_net_liver" ["l"="42.402,24.099"]
"bodokaiser/piwise" ["l"="53.421,30.885"]
"Serge-weihao/CCNet-Pure-Pytorch" ["l"="53.444,31.05"]
"OceanPang/Libra_R-CNN" ["l"="50.832,30.247"]
"chengyangfu/retinamask" ["l"="53.428,31.244"]
"hsddlz/faster-CTPN" ["l"="46.391,7.221"]
"zhangxiaosong18/FreeAnchor" ["l"="50.794,30.221"]
"shrubb/box-convolutions" ["l"="50.845,30.616"]
"zhaoweicai/Detectron-Cascade-RCNN" ["l"="50.815,30.213"]
"hujie-frank/GENet" ["l"="53.57,31.235"]
"ResearchingDexter/SKNet_pytorch" ["l"="53.547,31.143"]
"bobo0810/SKNet_Pytorch" ["l"="53.557,31.18"]
"braincreators/octconv" ["l"="53.533,31.238"]
"PSCLab-ASU/Learning-in-the-Frequency-Domain" ["l"="53.685,31.204"]
"ghallak/jpeg-python" ["l"="-43.73,11.47"]
"matej-ulicny/harmonic-networks" ["l"="22.184,13.527"]
"Liusifei/pytorch_spn" ["l"="53.369,31.192"]
"Liusifei/pytorch_spn_full" ["l"="53.353,31.224"]
"sadeepj/crfasrnn_pytorch" ["l"="53.416,30.717"]
"torrvision/crfasrnn" ["l"="53.499,30.75"]
"hfslyc/AdvSemiSeg" ["l"="51.463,37.241"]
"BayesWatch/pytorch-GENet" ["l"="53.596,31.271"]
"cuihu1998/GENet-Res50" ["l"="53.579,31.264"]
"zeakey/hed" ["l"="52.985,30.777"]
"gengyanlei/segmentation_tensorflow" ["l"="52.935,30.747"]
"iArunava/ENet-Real-Time-Semantic-Segmentation" ["l"="53.533,30.874"]
"Dawson-huang/Pytorch-ENet-Nice" ["l"="53.601,30.878"]
"lizhengwei1992/Fast_Portrait_Segmentation" ["l"="42.408,25.315"]
"youngwanLEE/CenterMask" ["l"="50.669,30.227"]
"cfzd/PSANet_PyTorch" ["l"="53.376,31.139"]
"MerHS/SASA-pytorch" ["l"="53.659,31.11"]
"JoeRoussy/adaptive-attention-in-cv" ["l"="53.642,31.106"]
"ShoufaChen/CycleMLP" ["l"="49.075,33.142"]
"lucidrains/halonet-pytorch" ["l"="53.695,31.124"]
"dhkim0225/keras-image-segmentation" ["l"="53.455,30.58"]
"JihongJu/keras-fcn" ["l"="53.479,30.622"]
"AceCoooool/LEDNet" ["l"="53.413,31.048"]
"yu-changqian/BiSeNet" ["l"="33.651,29.017"]
"xiaoyufenfei/ESNet" ["l"="53.404,31.064"]
"klintan/pytorch-lanenet" ["l"="64.216,10.359"]
"gjy3035/enet.pytorch" ["l"="53.516,30.902"]
"alexgkendall/SegNet-Tutorial" ["l"="53.505,30.8"]
"jponttuset/mcg" ["l"="53.051,30.842"]
"lxtGH/Fast_Seg" ["l"="53.313,31.043"]
"zhreshold/ICCV19-GluonCV" ["l"="51.806,33.744"]
"lzx1413/PytorchSSD" ["l"="50.876,30.172"]
"dmlc/gluon-cv" ["l"="50.751,29.974"]
"chinakook/Awesome-MXNet" ["l"="51.763,33.619"]
"msracver/Relation-Networks-for-Object-Detection" ["l"="50.892,30.15"]
"miraclewkf/ResNeXt-PyTorch" ["l"="53.583,31.054"]
"taki0112/SENet-Tensorflow" ["l"="50.54,33.259"]
"dcheng-utoronto/darnet" ["l"="62.026,36.712"]
"shirgur/ACDRNet" ["l"="62.029,36.723"]
"Walstruzz/edge_eval_python" ["l"="53.019,30.701"]
"yun-liu/RCF-PyTorch" ["l"="53.029,30.717"]
"zeakey/edgeval" ["l"="53.014,30.716"]
"buntyke/pytorch-hed" ["l"="52.99,30.694"]
"titu1994/keras-octconv" ["l"="50.538,33.439"]
"prlz77/ResNeXt.pytorch" ["l"="51.125,30.038"]
"Gurupradeep/FCN-for-Semantic-Segmentation" ["l"="53.454,30.618"]
"KleinYuan/train-crfasrnn" ["l"="53.42,30.636"]
"jayrambhia/superpixels-SLIC" ["l"="53.447,31.505"]
"aleenaniklaus/SLIC_superpixels" ["l"="53.467,31.503"]
"amueller/segmentation" ["l"="53.462,31.54"]
"achanta/SNIC" ["l"="53.499,31.447"]
"Kaixhin/FCN-semantic-segmentation" ["l"="53.36,30.809"]
"shelhamer/fcn.berkeleyvision.org" ["l"="50.562,33.144"]
"usuyama/pytorch-unet" ["l"="61.963,36.942"]
"wkentaro/fcn" ["l"="53.306,30.785"]
"liqiokkk/FCtL" ["l"="53.352,31.161"]
"cedricgsh/ISDNet" ["l"="53.373,31.118"]
"jankyee/URUR" ["l"="53.37,31.102"]
"wdjang/BRS-Interactive_segmentation" ["l"="53.197,30.658"]
"MarcoForte/DeepInteractiveSegmentation" ["l"="53.175,30.612"]
"sabarim/itis" ["l"="53.172,30.627"]
"dvornikita/blitznet" ["l"="53.481,30.801"]
"PingoLH/Pytorch-HarDNet" ["l"="53.295,31.068"]
"AHupuJR/RFNet" ["l"="53.288,31.031"]
"feinanshan/TDNet" ["l"="53.313,31.09"]
"feinanshan/FANet" ["l"="53.313,31.07"]
"cm-jsw/GraphCut" ["l"="52.948,30.397"]
"NathanZabriskie/GraphCut" ["l"="52.949,30.419"]
"XiangLi-Shaun/deformableConvolution_3D" ["l"="53.825,30.524"]
"momenator/deform_conv" ["l"="53.855,30.507"]
"lshiwjx/deform_conv3d_pytorch_op" ["l"="53.846,30.496"]
"mehtanihar/pspnet" ["l"="53.34,30.777"]
"bubbliiiing/pspnet-pytorch" ["l"="50.217,30.213"]
"ylf-li/RCF-tensorflow" ["l"="52.945,30.779"]
"amohant4/OctConv" ["l"="53.491,31.298"]
"yu-changqian/ContextPrior" ["l"="53.353,31.11"]
"haofengac/RGMP" ["l"="47.728,34.723"]
"jfzhang95/Chinese_Poem_Writer" ["l"="53.095,30.613"]
"HiDiYANG/gPb-GSoC" ["l"="52.969,30.886"]
"vrabaud/gPb" ["l"="52.992,30.873"]
"shaoyuanlo/EDANet" ["l"="53.571,30.959"]
"wpf535236337/pytorch_EDANet" ["l"="53.603,30.958"]
"juntang-zhuang/ShelfNet-lw-cityscapes" ["l"="53.529,30.954"]
"DeepSceneSeg/AdapNet-pp" ["l"="53.209,31.208"]
"DeepSceneSeg/SSMA" ["l"="53.238,31.172"]
"metahexane/ssma_pytorch" ["l"="53.227,31.203"]
"syedhope/Graph-Cut" ["l"="52.9,30.357"]
"mjirik/imcut" ["l"="52.917,30.402"]
"Orcuslc/GrabCut" ["l"="53.027,30.513"]
"roflmaostc/Fast-Approximate-Energy-Minimization-via-Graph-Cuts" ["l"="52.817,30.291"]
"k920049/Fast-Approximate-Energy-Minimization-via-Graph-Cuts" ["l"="52.798,30.282"]
"lizhengwei1992/mobilenetv2_deeplabv3_pytorch" ["l"="53.298,30.835"]
"jandylin/DFANet_PyTorch" ["l"="53.339,31.02"]
"huaifeng1993/Segmentation_of_Cloud_Images" ["l"="53.356,31.058"]
"developer0hye/SKNet-PyTorch" ["l"="53.604,31.045"]
"wofmanaf/SA-Net" ["l"="53.587,31.124"]
"iduta/pyconv" ["l"="53.649,31.09"]
"Zardinality/TF_Deformable_Net" ["l"="53.744,30.608"]
"amiralansary/rl-medical" ["l"="53.162,31.553"]
"thanosvlo/MARL-for-Anatomical-Landmark-Detection" ["l"="53.179,31.558"]
"gml16/rl-medical" ["l"="53.156,31.57"]
"swerwath/deeprl_segmentation" ["l"="53.166,31.583"]
"meng-tang/rloss" ["l"="54.108,31.611"]
"visinf/1-stage-wseg" ["l"="54.087,31.577"]
"Raj-08/tensorflow-object-contour-detection" ["l"="52.877,30.823"]
"jimeiyang/objectContourDetector" ["l"="52.901,30.845"]
"dlam4h/OCD-PyTorch" ["l"="52.844,30.822"]
"ylf-li/ContourGAN" ["l"="52.922,30.791"]
"xmyqsh/deeplab-v2" ["l"="53.564,30.682"]
"BassyKuo/PSPNET-cudnn5" ["l"="53.454,30.69"]
"yilei0620/RGBD-Slam-Semantic-Seg-DeepLab" ["l"="59.639,11.365"]
"TimoSaemann/caffe-segnet-cudnn5" ["l"="53.52,30.758"]
"lexfridman/boring-detector" ["l"="53.618,30.541"]
"chrmi/DeepTraffic3D" ["l"="53.624,30.508"]
"moetayuko/GrabCut" ["l"="53.014,30.489"]
"guyuchao/Grabcut" ["l"="52.999,30.468"]
"ThomasZiegler/Efficient-Smoothing-of-Dilated-Convolutions" ["l"="53.454,31.121"]
"Finspire13/RL-Surgical-Gesture-Segmentation" ["l"="53.153,31.608"]
"BIGKnight/deformable_conv2d_pytorch" ["l"="53.767,30.501"]
"huangtinglin/PyTorch-extension-Convolution" ["l"="53.781,30.475"]
"BIGKnight/deformable_conv2d_v2_tensorflow" ["l"="53.746,30.541"]
"zhengyang-wang/Unet_3D" ["l"="62.146,36.862"]
"alisure-ml/Semantic-Segmentation-RefineNet" ["l"="53.618,30.84"]
"HasnainRaz/FC-DenseNet-TensorFlow" ["l"="53.669,30.778"]
"0bserver07/One-Hundred-Layers-Tiramisu" ["l"="53.652,30.758"]
"vedantk-b/Cloud-Segmentation-from-Satellite-Imagery" ["l"="53.342,31.093"]
"mingliangzhang2018/EAST-Pytorch" ["l"="52.901,30.666"]
"johannesu/meanfield-matlab" ["l"="53.666,30.706"]
"ClaireXie/denseCRF_matlab" ["l"="53.658,30.689"]
"lattice-ai/DeepLabV3-Plus" ["l"="53.346,30.597"]
"advaitsave/Multiclass-Semantic-Segmentation-CamVid" ["l"="41.935,23.981"]
"lexfridman/cocoapi" ["l"="53.672,30.502"]
"lexfridman/github-changelog-generator" ["l"="53.659,30.513"]
"lexfridman/keep-a-changelog" ["l"="53.668,30.522"]
"BGU-CS-VIL/DPMMSubClusters.jl" ["l"="53.349,31.523"]
"BGU-CS-VIL/dpmmpython" ["l"="53.36,31.514"]
"BGU-CS-VIL/JA-POLS" ["l"="53.348,31.509"]
"BGU-CS-VIL/SpaceJAM" ["l"="53.342,31.571"]
"liyemei/densecrf" ["l"="53.702,30.654"]
"zhaohengz/DenseCRF-545" ["l"="53.727,30.64"]
"junjungoal/Tiramisu-keras" ["l"="53.712,30.744"]
"lukszamarcin/100-tiramisu-keras" ["l"="53.743,30.738"]
"yujiali/pygco" ["l"="52.84,30.278"]
"amueller/gco_python" ["l"="52.846,30.264"]
"jtkim-kaist/ram_modified" ["l"="53.277,31.373"]
"lexfridman/keras-retinanet" ["l"="53.645,30.542"]
"lexfridman/vidstep" ["l"="53.651,30.523"]
"wlguan/DHSNet-PyTorch" ["l"="53.322,31.146"]
"zengxianyu/RFCN" ["l"="53.332,31.101"]
"SamsungLabs/ritm_interactive_segmentation" ["l"="53.185,30.563"]
"XavierCHEN34/ClickSEG" ["l"="53.167,30.577"]
"frazerlin/fcanet" ["l"="53.192,30.585"]
"hkchengrex/MiVOS" ["l"="47.749,34.614"]
"hkchengrex/STCN" ["l"="47.721,34.627"]
"z-x-yang/CFBI" ["l"="47.742,34.658"]
"liewjunhao/thin-object-selection" ["l"="53.145,30.584"]
"uncbiag/SimpleClick" ["l"="53.152,30.541"]
"MarcoForte/FBA_Matting" ["l"="42.434,25.233"]
"YimianDai/open-aff" ["l"="53.603,31.111"]
"landskape-ai/triplet-attention" ["l"="53.597,31.094"]
"pprp/awesome-attention-mechanism-in-cv" ["l"="53.594,31.164"]
"murufeng/EPSANet" ["l"="53.613,31.129"]
"d-li14/PSConv" ["l"="53.672,31.095"]
"ma-xu/DCANet" ["l"="53.664,31.083"]
"QY1994-0919/CFPNet" ["l"="49.156,32.932"]
"MCG-NKU/SCNet" ["l"="53.57,31.072"]
"Deeachain/Segmentation-Pytorch" ["l"="53.245,30.979"]
"Minerva-J/Pytorch-Segmentation-multi-models" ["l"="53.163,30.99"]
"chenjun2hao/DDRNet.pytorch" ["l"="53.169,31.015"]
"bubbliiiing/segformer-pytorch" ["l"="50.203,30.161"]
"sithu31296/semantic-segmentation" ["l"="53.231,30.993"]
"SegmentationBLWX/sssegmentation" ["l"="53.26,30.996"]
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" ["l"="42.152,24.056"]
"yadongJiang/En_bisenetv2" ["l"="53.19,30.99"]
"houqb/SPNet" ["l"="53.428,31.062"]
"pdollar/toolbox" ["l"="54.841,33.652"]
"daijifeng001/R-FCN" ["l"="50.571,33.119"]
"Cloud-CV/object-proposals" ["l"="52.978,30.825"]
"ArtanisCV/StructuredForests" ["l"="52.983,30.803"]
"rbgirshick/voc-dpm" ["l"="54.872,33.561"]
"samarth-robo/edges" ["l"="53.013,30.819"]
"ShaoqingRen/SPP_net" ["l"="50.654,33.104"]
"shenwei1231/DeepContour" ["l"="-35.331,20.765"]
"srihari-humbarwadi/person_segmentation_tf2.0" ["l"="53.335,30.556"]
"lxtGH/SFSegNets" ["l"="53.267,31.037"]
"speedinghzl/AlignSeg" ["l"="52.781,34.27"]
"Qualcomm-AI-research/InverseForm" ["l"="53.221,31.078"]
"lxtGH/PFSegNets" ["l"="41.706,23.431"]
"W-zx-Y/DANNet" ["l"="51.468,37.112"]
"donnyyou/torchcv" ["l"="50.91,29.998"]
"kirilcvetkov92/Semantic-Segmentation-BiSeNet" ["l"="42.291,24.064"]
"markus-k/bisenetv2-tf2" ["l"="53.135,30.969"]
"hosang/detection-proposals" ["l"="52.936,30.83"]
"charlesCXK/PyTorch_Semantic_Segmentation" ["l"="47.85,35.681"]
"Megvii-BaseDetection/TreeFilter-Torch" ["l"="53.319,31.176"]
"StevenGrove/LearnableTreeFilterV2" ["l"="53.299,31.21"]
"megvii-research/TreeEnergyLoss" ["l"="53.315,31.219"]
"megvii-model/WeightNet" ["l"="53.705,31.084"]
"csrhddlam/axial-deeplab" ["l"="53.217,30.981"]
"joe-siyuan-qiao/ViP-DeepLab" ["l"="53.182,30.947"]
"facebookresearch/MaskFormer" ["l"="48.831,30.267"]
"facebookresearch/Mask2Former" ["l"="48.83,30.207"]
"yitu-opensource/MobileNeXt" ["l"="53.778,31.15"]
"zhoudaquan/rethinking_bottleneck_design" ["l"="53.74,31.13"]
"qiulinzhang/SPConv.pytorch" ["l"="53.74,31.105"]
"PingoLH/CenterNet-HarDNet" ["l"="53.274,31.088"]
"PingoLH/PytorchSSD-HarDNet" ["l"="53.26,31.111"]
"james128333/HarDNet-MSEG" ["l"="61.631,37.008"]
"DagnyT/hardnet" ["l"="59.282,9.228"]
"VisibleShadow/Implementation-of-Detecting-Camouflaged-Object-in-Frequency-Domain" ["l"="53.681,31.163"]
"cc-hpc-itwm/UpConv" ["l"="31.096,30.125"]
"yyk-wew/F3Net" ["l"="31.114,30.138"]
"LiQiufu/WaveCNet" ["l"="52.201,29.929"]
"EndlessSora/focal-frequency-loss" ["l"="50.563,2.676"]
"RUB-SysSec/GANDCTAnalysis" ["l"="31.12,30.098"]
"HaohanWang/HFC" ["l"="39.308,-7.273"]
"DrSleep/nas-segm-pytorch" ["l"="52.921,34.114"]
"NoamRosenberg/autodeeplab" ["l"="52.904,34.11"]
"megvii-model/DetNAS" ["l"="52.883,34.106"]
"megvii-model/LabelEnc" ["l"="53.352,31.27"]
"HoinJung/SuperpixelGCN-Segmentation" ["l"="53.335,31.434"]
"JianqiangWan/Super-BPD" ["l"="53.345,31.401"]
"fuy34/SPPSMStereo" ["l"="53.424,31.375"]
"HapeMask/crfrnn_layer" ["l"="53.376,30.679"]
"sadeepj/densecrf_np" ["l"="53.396,30.684"]
"HiLab-git/SimpleCRF" ["l"="61.981,36.744"]
"mafeimf/Attention-Graph-Convolution-Network-for-Image-Segmentation-in-Big-SAR-Imagery-Data" ["l"="53.301,31.472"]
"DingLei14/SARSeg" ["l"="53.281,31.494"]
"hehao13/EBLNet" ["l"="53.25,31.09"]
"wanglixilinx/DSRL" ["l"="53.311,31.127"]
"henghuiding/BFP" ["l"="-53.011,-12.042"]
"CWanli/RecoNet" ["l"="53.234,31.119"]
"fudan-zvg/SETR" ["l"="53.247,31.058"]
"zrl4836/ACFNet" ["l"="53.236,31.102"]
"irfanICMLL/ETC-Real-time-Per-frame-Semantic-video-segmentation" ["l"="53.282,31.111"]
"lucidrains/axial-attention" ["l"="53.126,30.991"]
"zsef123/PointRend-PyTorch" ["l"="53.271,31.054"]
"JamesQFreeman/PointRend" ["l"="53.183,31.13"]
"conradry/max-deeplab" ["l"="53.109,30.972"]
"jeya-maria-jose/Medical-Transformer" ["l"="61.844,36.9"]
"google-research/deeplab2" ["l"="53.16,30.962"]
"Media-Smart/vedaseg" ["l"="33.606,29.081"]
"implus/GFocalV2" ["l"="50.768,30.262"]
"Meituan-AutoML/Twins" ["l"="49.122,33.112"]
"yangyanli/DO-Conv" ["l"="53.698,31.1"]
"jshilong/SEPC" ["l"="50.807,30.31"]
"EMI-Group/FaPN" ["l"="52.778,34.24"]
"Nandan91/ULSAM" ["l"="53.686,31.078"]
"megvii-model/FunnelAct" ["l"="53.78,31.107"]
"yinghdb/EmbedMask" ["l"="50.524,30.686"]
"youngwanLEE/centermask2" ["l"="50.651,30.243"]
"TRI-ML/realtime_panoptic" ["l"="53.16,30.93"]
"ekzhang/fastseg" ["l"="53.128,31.077"]
"ekzhang/semantic-segmentation" ["l"="53.092,31.1"]
"elbuco1/CBAM" ["l"="53.702,31.294"]
"Ugenteraan/ResNet-50-CBAM-PyTorch" ["l"="53.669,31.258"]
"ishimomo/CondConv-pytorch" ["l"="53.75,31.076"]
"d-li14/condconv.pytorch" ["l"="53.742,31.061"]
"DequanWang/weightnet.pytorch" ["l"="53.76,31.093"]
"qqlu/Entity" ["l"="50.851,3.023"]
"Yaoyi-Li/GCA-Matting" ["l"="42.449,25.236"]
"poppinace/indexnet_matting" ["l"="42.448,25.25"]
"JizhiziLi/GFM" ["l"="42.41,25.179"]
"xuebinqin/BASNet" ["l"="47.713,35.313"]
"xuebinqin/DIS" ["l"="44.782,30.973"]
"yuhaoliu7456/CVPR2020-HAttMatting" ["l"="42.417,25.242"]
"pprp/SimpleCVPaperReading" ["l"="53.63,31.223"]
"balajiselvaraj1601/RCF_Pytorch_Updated" ["l"="52.995,30.707"]
"wanghao9610/TMANet" ["l"="53.271,31.136"]
"GuoleiSun/VSS-CFFM" ["l"="53.254,31.14"]
"carrierlxk/MuG" ["l"="47.803,34.672"]
"sssdddwww2/vspw_dataset_download" ["l"="53.238,31.155"]
"pmneila/PyMaxflow" ["l"="52.854,30.3"]
"Rhoana/pymaxflow" ["l"="52.834,30.311"]
"Borda/pyGCO" ["l"="52.861,30.275"]
"feipanir/IntraDA" ["l"="51.548,37.15"]
"liminn/ICNet-pytorch" ["l"="53.292,31.092"]
"kmaninis/COB" ["l"="52.952,30.857"]
"sergeyk/selective_search_ijcv_with_python" ["l"="50.707,33.029"]
"shiyinzhang/Pixel-ImageNet" ["l"="53.163,30.596"]
"hellozhuo/dgc" ["l"="53.661,31.06"]
"iamhankai/ghostnet.pytorch" ["l"="50.743,30.081"]
"TArong/Fast-edge-detection-using-structured-forests" ["l"="52.944,30.806"]
"DingXiaoH/DiverseBranchBlock" ["l"="48.994,32.887"]
"DingXiaoH/RepVGG" ["l"="50.617,29.93"]
"GOATmessi8/RFBNet" ["l"="50.841,30.155"]
"MyeongJin-Kim/Learning-Texture-Invariant-Representation" ["l"="51.571,37.147"]
"BGU-CS-VIL/vmdls" ["l"="53.366,31.501"]
"iduta/pyconvsegnet" ["l"="53.699,31.064"]
"kondratevakate/3d-deformable-convolutions" ["l"="53.871,30.486"]
"yangle15/RANet-pytorch" ["l"="49.276,32.919"]
"yitu-opensource/T2T-ViT" ["l"="50.843,29.831"]
"Barrnett/DeepCV" ["l"="-53.664,-16.272"]
"D-Nilsson/GRFP" ["l"="47.878,34.718"]
"irfanICMLL/structure_knowledge_distillation" ["l"="53.546,33.517"]
"lihang212010/Elasticsearch-ais" ["l"="-53.399,-14.574"]
"demon-poohboy/MIS_studentGrade_node" ["l"="-53.72,-16.272"]
"hf-hf/mail-micro-service" ["l"="-53.054,-16.28"]
"VIPSeg-Dataset/VIPSeg-Dataset" ["l"="50.695,30.669"]
"lxtGH/Video-K-Net" ["l"="50.72,30.612"]
"Dootmaan/DSRL" ["l"="53.279,31.197"]
"yifan123/IC-Conv" ["l"="-54.154,-12.312"]
"BGU-CS-VIL/dtan" ["l"="53.338,31.538"]
"BGU-CS-VIL/RF-DTAN" ["l"="53.326,31.563"]
"BGU-CS-VIL/pdc-dp-means" ["l"="53.356,31.541"]
"frazerlin/focuscut" ["l"="53.167,30.553"]
"perrying/diffSLIC" ["l"="53.45,31.397"]
"YanFangCS/AINET" ["l"="53.458,31.407"]
"wangyxxjtu/AINet-Superpixel" ["l"="53.444,31.411"]
"JamesQFreeman/simpleITK-Snap" ["l"="53.091,31.202"]
"King-HAW/DC-MT" ["l"="53.058,31.232"]
"JamesQFreeman/MicEye" ["l"="53.081,31.223"]
"zixuzhuang/CSNet" ["l"="53.067,31.206"]
"oyxhust/HAM" ["l"="53.056,31.215"]
"Islanna/DynamicReLU" ["l"="53.791,31.082"]
"nekitmm/FunnelAct_Pytorch" ["l"="53.798,31.101"]
"DensoITLab/HCFormer" ["l"="53.441,31.379"]
"FroyoZzz/CV-Papers-Codes" ["l"="53.264,30.712"]
"xuhuaren/TDSNet" ["l"="53.041,31.246"]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" ["l"="53.203,31.048"]
"SwinTransformer/Swin-Transformer-Object-Detection" ["l"="50.687,30.088"]
"HuCaoFighting/Swin-Unet" ["l"="61.818,36.933"]
"SwinTransformer/Transformer-SSL" ["l"="52.954,29.441"]
"rstrudel/segmenter" ["l"="53.236,31.041"]
"microsoft/Swin-Transformer" ["l"="50.669,29.705"]
"berniwal/swin-transformer-pytorch" ["l"="53.145,31.101"]
"Beckschen/TransUNet" ["l"="61.845,36.92"]
"d-li14/involution" ["l"="50.792,30.006"]
"ZjjConan/SimAM" ["l"="53.604,31.146"]
"xzz777/SCTNet" ["l"="53.148,31.034"]
"YuvalNirkin/hyperseg" ["l"="53.197,31.011"]
"hustvl/TopFormer" ["l"="53.166,31.055"]
"pprp/SimpleCVReproduction" ["l"="50.678,30.115"]
"MenghaoGuo/Awesome-Vision-Attentions" ["l"="50.7,29.749"]
"xmu-xiaoma666/External-Attention-pytorch" ["l"="50.615,29.71"]
"KawaiiAsh/deepLearning-modules-toolbox" ["l"="6.474,-9.925"]
"ZhugeKongan/Attention-mechanism-implementation" ["l"="53.614,31.19"]
"iscyy/ultralyticsPro" ["l"="53.492,3.653"]
"cmhungsteve/Awesome-Transformer-Attention" ["l"="50.774,29.648"]
"DeLightCMU/PSA" ["l"="31.907,28.199"]
"theFoxofSky/ddfnet" ["l"="49.051,32.859"]
"rayleizhu/BiFormer" ["l"="49.114,32.98"]
"kemaloksuz/RankSortLoss" ["l"="50.808,30.352"]
"Christian-lyc/NAM" ["l"="53.64,31.175"]
"Visual-Attention-Network/SegNeXt" ["l"="48.929,33.076"]
"WangLibo1995/GeoSeg" ["l"="41.845,25.197"]
"HiLab-git/MIDeepSeg" ["l"="61.983,36.704"]
"hkchengrex/Scribble-to-Mask" ["l"="53.145,30.558"]
"alibaba/ClickSEG" ["l"="53.185,30.541"]
"PaddleCV-SIG/EISeg" ["l"="53.19,30.497"]
"taigw/GeodisTK" ["l"="62.002,36.677"]
"np-csu/SLIC-superpixel-with-OpenCV" ["l"="53.469,31.488"]
"alexandrosstergiou/SoftPool" ["l"="47.672,34.207"]
"HyeonwooNoh/DeconvNet" ["l"="53.557,30.747"]
"HyeonwooNoh/caffe" ["l"="51.312,33.466"]
"fabianbormann/Tensorflow-DeconvNet-Segmentation" ["l"="53.56,30.702"]
"alexgkendall/caffe-segnet" ["l"="53.539,30.779"]
"daijifeng001/MNC" ["l"="53.567,30.764"]
"HyeonwooNoh/DecoupledNet" ["l"="53.657,30.732"]
"cvjena/cn24" ["l"="51.317,33.498"]
"MarvinTeichmann/tensorflow-fcn" ["l"="53.523,30.71"]
"920232796/SETR-pytorch" ["l"="53.202,31.088"]
"gupta-abhay/setr-pytorch" ["l"="53.203,31.105"]
"lucidrains/segformer-pytorch" ["l"="53.18,31.092"]
"IDEA-Research/MaskDINO" ["l"="48.8,30.247"]
"ZwwWayne/K-Net" ["l"="50.751,30.441"]
"bytedance/kmax-deeplab" ["l"="48.74,30.41"]
"SHI-Labs/OneFormer" ["l"="48.81,30.192"]
"ShoufaChen/DiffusionDet" ["l"="48.83,30.299"]
"WangFeng18/Swin-Transformer" ["l"="53.098,31.141"]
"SwinTransformer/Video-Swin-Transformer" ["l"="48.024,33.802"]
"microsoft/CSWin-Transformer" ["l"="49.133,33.077"]
"ChristophReich1996/Swin-Transformer-V2" ["l"="53.067,31.138"]
"dk-liang/Awesome-Visual-Transformer" ["l"="50.812,29.72"]
"tfzhou/ContrastiveSeg" ["l"="53.025,29.394"]
"YuqingWang1029/VisTR" ["l"="50.673,30.529"]
"midasklr/DDRNet.TensorRT" ["l"="53.132,31.017"]
"midasklr/DDRNet.Pytorch" ["l"="53.116,31.017"]
"RolandGao/RegSeg" ["l"="53.125,31.036"]
"hongfz16/DS-Net" ["l"="64.385,11.087"]
"PeizeSun/SparseR-CNN" ["l"="50.754,30.202"]
"lkeab/BCNet" ["l"="50.645,30.512"]
"bowenc0221/boundary-iou-api" ["l"="50.636,30.614"]
"elharroussomar/Awesome-Panoptic-Segmentation" ["l"="53.133,30.94"]
"qiulinzhang/TopPaper" ["l"="53.828,31.128"]
"CharlesPikachu/mcibi" ["l"="53.182,31"]
"czczup/ViT-Adapter" ["l"="48.832,30.241"]
"MenghaoGuo/EANet" ["l"="50.58,2.736"]
"ZhugeKongan/torch-template-for-deep-learning" ["l"="50.969,28.321"]
"ZhouCX117/UAED_MuGE" ["l"="53.05,30.675"]
"MengyangPu/RINDNet" ["l"="53.027,30.683"]
"ZitongYu/CDCN" ["l"="33.599,30.109"]
"christianpayer/MedicalDataAugmentationTool-HeatmapRegression" ["l"="-35.223,23.607"]
"sssdddwww2/CVPR2021_VSPW_Implement" ["l"="53.22,31.172"]
"davidstutz/seeds-revised" ["l"="53.406,31.518"]
"davidstutz/graph-based-image-segmentation" ["l"="53.425,31.517"]
"badripatro/SpectFormers" ["l"="49.149,33.013"]
"Xilinx/DSRL" ["l"="53.265,31.243"]
"Dootmaan/PFSeg" ["l"="53.251,31.231"]
"camlaedtke/segmentation_pytorch" ["l"="53.133,31.139"]
"PaddleCV-SIG/PaddleRS" ["l"="41.909,25.284"]
"PaddleCV-SIG/PaddleLabel" ["l"="53.192,30.457"]
"QPT-Family/QPT" ["l"="35.638,1.97"]
"mikigom/gSLICrPy" ["l"="53.489,31.479"]
"ankurhanda/SceneNetv1.0" ["l"="47.923,35.681"]
"VSPW-dataset/VSPW_baseline" ["l"="53.197,31.183"]
"VSPW-dataset/VSPW_code" ["l"="53.223,31.184"]
"VSPW-dataset/VSPW-dataset-download" ["l"="53.206,31.17"]
"NaiyuGao/PanopticDepth" ["l"="53.071,30.955"]
"Chenglin-Yang/PatchAttack" ["l"="39.22,-7.654"]
"VinAIResearch/MagNet" ["l"="53.34,31.2"]
"KunyangHan/Intelligent-Pixel-Annotation-Tool" ["l"="53.112,30.566"]
"HarborYuan/PolyphonicFormer" ["l"="53.023,30.963"]
"GuoleiSun/VSS-MRCFA" ["l"="53.22,31.158"]
"zh320/realtime-semantic-segmentation-pytorch" ["l"="53.082,31.032"]
"takaniwa/DSNet" ["l"="53.101,31.053"]
"OpenGVLab/InternImage" ["l"="48.854,30.198"]
"soeaver/caffe-model" ["l"="51.656,33.388"]
"affinelayer/pix2pix-tensorflow" ["l"="45.777,29.2"]
"martinkersner/train-CRF-RNN" ["l"="53.576,30.733"]
"facebookresearch/deepmask" ["l"="53.615,30.685"]
"PaddleCV-SIG/PaddleLabel-Frontend" ["l"="53.19,30.43"]
"fudan-zvg/SeaFormer" ["l"="49.072,32.969"]
"hustvl/MIMDet" ["l"="52.886,29.378"]
"hustvl/SparseInst" ["l"="50.659,30.407"]
"dongbo811/AFFormer" ["l"="53.082,31.083"]
"hustvl/Featurized-QueryRCNN" ["l"="63.409,12.062"]
"jhjie/EdgeNAT" ["l"="53.002,30.677"]
"AndreKelm/RefineContourNet" ["l"="53.014,30.668"]
"Bedrettin-Cetinkaya/RankED" ["l"="53.033,30.667"]
"YuwenXiong/py-R-FCN" ["l"="51.715,33.474"]
"liuzhuang13/DenseNetCaffe" ["l"="51.616,33.381"]
"TheLegendAli/DeepLab-Context2" ["l"="53.552,30.674"]
"jay-mahadeokar/deeplab-public-ver2" ["l"="53.573,30.666"]
"martinkersner/train-DeepLab" ["l"="53.577,30.711"]
"cdmh/deeplab-public" ["l"="53.589,30.672"]
"vlfeat/matconvnet-fcn" ["l"="47.814,29.446"]
"martinkersner/py-img-seg-eval" ["l"="53.542,30.839"]
"Visceral-Project/EvaluateSegmentation" ["l"="61.963,36.806"]
"xuebinqin/Binary-Segmentation-Evaluation-Tool" ["l"="47.733,35.366"]
"MasazI/crfasrnn-training" ["l"="53.61,30.735"]
"hyenal/crfasrnn" ["l"="53.637,30.733"]
"torrvision/caffe" ["l"="53.647,30.712"]
"YouHuang67/InterFormer" ["l"="53.149,30.505"]
"zmhhmz/GPCIS_CVPR2023" ["l"="53.129,30.545"]
"rsinghlab/GNN-Tumor-Seg" ["l"="53.312,31.45"]
"zbf1991/A2GNN" ["l"="54.108,31.49"]
"siyueyu/SCWSSOD" ["l"="47.675,35.454"]
"Luffy03/AGMM-SASS" ["l"="62.595,37.66"]
"MarvinTeichmann/KittiSeg" ["l"="53.533,30.73"]
"ethereon/caffe-tensorflow" ["l"="50.47,33.139"]
"ry/tensorflow-resnet" ["l"="50.473,33.187"]
"jakeret/tf_unet" ["l"="62.026,36.988"]
"CharlesShang/TFFRCNN" ["l"="50.466,33.063"]
"MarvinTeichmann/MultiNet" ["l"="53.573,30.788"]
"MarvinTeichmann/KittiBox" ["l"="54.922,32.919"]
"BichenWuUCB/squeezeDet" ["l"="50.388,33.095"]
"TensorVision/TensorVision" ["l"="54.952,32.946"]
"preddy5/segnet" ["l"="53.535,30.619"]
"nicolov/segmentation_keras" ["l"="53.522,30.682"]
"wuyang0329/unet" ["l"="42.335,24.104"]
"cilinyan/PiClick" ["l"="53.132,30.525"]
"TitorX/CFR-ICL-Interactive-Segmentation" ["l"="53.114,30.524"]
"Zhao-Yian/GraCo" ["l"="53.131,30.506"]
"uncbiag/SegNext" ["l"="53.114,30.501"]
"MengyuWang826/SegRefiner" ["l"="61.822,36.517"]
"GewelsJI/DGNet" ["l"="47.833,35.435"]
"HVision-NKU/CamoFormer" ["l"="47.811,35.458"]
"fvisin/dataset_loaders" ["l"="53.695,30.773"]
"SimJeg/FC-DenseNet" ["l"="53.607,30.775"]
"fvisin/main_loop_tf" ["l"="53.735,30.771"]
"BGU-CS-VIL/DeepMCBM" ["l"="53.366,31.53"]
"BGU-CS-VIL/dpmmpythonStreaming" ["l"="53.373,31.555"]
"downingstreet/GrabCut" ["l"="52.997,30.502"]
"amasky/ram" ["l"="53.243,31.409"]
"musyoku/self-normalizing-networks" ["l"="53.209,31.432"]
"PavlosMelissinos/enet-keras" ["l"="53.566,30.845"]
"e-lab/torch-toolbox" ["l"="45.945,27.625"]
"shelhamer/clockwork-fcn" ["l"="53.505,30.885"]
"songhan/SqueezeNet-Deep-Compression" ["l"="52.653,33.603"]
"facebookresearch/multipathnet" ["l"="53.621,30.716"]
"facebookarchive/fb.resnet.torch" ["l"="50.567,33.19"]
"jcjohnson/densecap" ["l"="48.563,31.866"]
"facebookarchive/torchnet" ["l"="46,27.679"]
"facebookresearch/ResNeXt" ["l"="50.571,33.22"]
"soumith/convnet-benchmarks" ["l"="47.812,29.023"]
"torch/torch7" ["l"="47.926,29.033"]
"DmitryUlyanov/texture_nets" ["l"="45.704,29.409"]
"NVIDIA/DIGITS" ["l"="47.841,29.077"]
"Newmu/dcgan_code" ["l"="45.835,29.256"]
"voidrank/FastMask" ["l"="53.628,30.753"]
"felixlaumon/deform-conv" ["l"="53.651,30.666"]
"zhangliliang/RPN_BF" ["l"="51.733,33.438"]
"TobyPDE/FRRN" ["l"="53.596,30.801"]
"facebookarchive/fbcunn" ["l"="46.092,27.681"]
"facebookarchive/fb-caffe-exts" ["l"="45.897,27.647"]
"Element-Research/rnn" ["l"="46.055,27.692"]
"soumith/dcgan.torch" ["l"="45.866,29.246"]
"soumith/imagenet-multiGPU.torch" ["l"="45.989,27.619"]
"CSAILVision/sceneparsing" ["l"="53.495,30.788"]
"CSAILVision/placeschallenge" ["l"="53.615,30.817"]
"nightrome/cocostuff10k" ["l"="53.552,30.796"]
"seann999/tensorflow_mnist_ram" ["l"="53.261,31.39"]
"mathildor/TF-SegNet" ["l"="53.563,30.638"]
"andreaazzini/segnet.tf" ["l"="53.581,30.632"]
"lexfridman/deeptesla" ["l"="53.603,30.601"]
"toimcio/SegNet-tensorflow" ["l"="53.593,30.646"]
"arahusky/Tensorflow-Segmentation" ["l"="53.533,30.665"]
"mshunshin/SegNetCMR" ["l"="61.708,36.473"]
"raghudeep/netwarp_public" ["l"="47.861,34.721"]
"JingchunCheng/Seg-with-SPN" ["l"="47.69,34.754"]
"namakemono/keras-segnet" ["l"="53.509,30.584"]
"rcmalli/keras-squeezenet" ["l"="50.426,33.318"]
"titu1994/Keras-ResNeXt" ["l"="50.508,33.311"]
"zhaoweicai/mscnn" ["l"="51.695,33.466"]
"hengck23/didi-udacity-2017" ["l"="54.959,32.981"]
"SeokjuLee/VPGNet" ["l"="64.258,10.316"]
"mjshiggins/ros-examples" ["l"="54.945,33.004"]
"hlwang1124/SNE-RoadSeg" ["l"="64.337,10.542"]
"elharroussomar/Refined-Edge-Detection-With-Cascaded-and-High-Resolution-Convolutional-Network" ["l"="53.027,30.649"]
"veizgyauzgyauz/FCFI" ["l"="53.135,30.483"]
"lab206/AdaptiveClick" ["l"="53.149,30.477"]
"YouHuang67/focsam" ["l"="53.129,30.458"]
"lejeunel/cobnet" ["l"="52.924,30.865"]
"trungtpham/SceneCut" ["l"="52.912,30.878"]
"GuHuangAI/ADM-Public" ["l"="54.307,32.392"]
"ymgw55/segment-anything-edge-detection" ["l"="53.048,30.646"]
"lin-tianyu/Stable-Diffusion-Seg" ["l"="61.854,36.521"]
"msracver/Deep-Feature-Flow" ["l"="54.949,33.765"]
"felixgwu/mask_rcnn_pytorch" ["l"="51.093,30.063"]
"NiccoloCavagnero/PEM" ["l"="33.891,32.458"]
"Linwei-Chen/FreqFusion" ["l"="49.099,32.873"]
"Linwei-Chen/FADC" ["l"="49.082,32.909"]
"hyunwoo137/MetaSeg" ["l"="53.064,31.053"]
"smallcorgi/Faster-RCNN_TF" ["l"="50.47,33.085"]
"warmspringwinds/tensorflow_notes" ["l"="53.52,30.65"]
"yhenon/keras-frcnn" ["l"="50.494,33.143"]
"jocicmarko/ultrasound-nerve-segmentation" ["l"="61.994,37.003"]
"ahundt/tf-image-segmentation" ["l"="53.489,30.661"]
"imatge-upc/detection-2016-nipsws" ["l"="53.194,31.508"]
"XL2013/Pytorch_Deep_RL_1" ["l"="53.197,31.531"]
"DeepRNN/object_detection" ["l"="-34.569,20.486"]
"xiaolonw/adversarial-frcnn" ["l"="51.654,33.466"]
"EdenMacdonald/h-DQN" ["l"="57.319,18.355"]
"davidstutz/extended-berkeley-segmentation-benchmark" ["l"="53.389,31.479"]
"yun-liu/HFS" ["l"="53.397,31.497"]
"TingmanYan/SDR" ["l"="65.392,4.986"]
"mingyuliutw/EntropyRateSuperpixel" ["l"="53.367,31.48"]
"0bserver07/Nvidia-Autopilot-Keras" ["l"="61.516,12.614"]
"ljanyst/image-segmentation-fcn" ["l"="53.556,30.578"]
"kimoktm/U-Net" ["l"="62.1,36.988"]
"kostas1515/AGLU" ["l"="53.335,31.662"]
"BGU-CS-VIL/DiTAC" ["l"="53.336,31.639"]
"aayushbansal/PixelNet" ["l"="63.729,0.939"]
"bfortuner/pytorch_tiramisu" ["l"="53.642,30.794"]
"faustomilletari/VNet" ["l"="62.055,36.86"]
"titu1994/DenseNet" ["l"="50.482,33.284"]
"titu1994/Fully-Connected-DenseNets-Semantic-Segmentation" ["l"="53.678,30.755"]
"SoonminHwang/caffe-segmentation" ["l"="53.508,30.668"]
"TimoSaemann/caffe-enet" ["l"="53.564,30.806"]
"hiwonjoon/tf-frrn" ["l"="53.659,30.816"]
"yuxng/DA-RNN" ["l"="59.627,11.315"]
"warmspringwinds/pytorch-segmentation-detection" ["l"="53.458,30.852"]
"BGU-CS-VIL/Training-Free-VOS" ["l"="53.325,31.519"]
"bharatsingh430/Deformable-ConvNets" ["l"="51.692,33.487"]
"unsky/Deformable-ConvNets-caffe" ["l"="51.661,33.413"]
"bharatsingh430/soft-nms" ["l"="51.675,33.457"]
"bharatsingh430/py-R-FCN-multiGPU" ["l"="51.685,33.44"]
"xmyqsh/FPN" ["l"="51.636,33.477"]
"kmaninis/OSVOS-caffe" ["l"="47.688,34.786"]
"longcw/faster_rcnn_pytorch" ["l"="50.955,30.041"]
"ruotianluo/pytorch-faster-rcnn" ["l"="50.887,30.059"]
"hyunwoo137/EDAFormer" ["l"="53.036,31.06"]
"1zb/deformable-convolution-pytorch" ["l"="51.052,30.099"]
"ChunhuanLin/deform_conv_pytorch" ["l"="51.014,30.148"]
"zengxianyu/FCN" ["l"="53.359,31.024"]
"mattmacy/vnet.pytorch" ["l"="61.991,36.852"]
"ignacio-rocco/detectorch" ["l"="51.033,30.107"]
"baldassarreFe/pytorch-densenet-tiramisu" ["l"="53.705,30.803"]
"nightrome/really-awesome-semantic-segmentation" ["l"="53.442,30.739"]
"nightrome/really-awesome-gan" ["l"="45.835,29.115"]
"mzaradzki/neuralnets" ["l"="53.484,30.547"]
"musyoku/wasserstein-gan" ["l"="53.18,31.45"]
"kwakuTM/SegNet" ["l"="53.294,31.168"]
"delta-onera/delta_tb" ["l"="53.26,31.186"]
"BGU-CS-VIL/GFNCP" ["l"="53.339,31.607"]
"adbedada/deep-learning-notebooks" ["l"="53.569,30.601"]
"developmentseed/satTS" ["l"="53.58,30.607"]
"YouHuang67/High-Resolution-Segment-Anything" ["l"="53.118,30.426"]
"YouHuang67/mamba-code-explained" ["l"="53.109,30.404"]
"ternaus/robot-surgery-segmentation" ["l"="61.893,37.05"]
"shicai/MobileNet-Caffe" ["l"="51.674,33.332"]
"ChenYingpeng/caffe-yolov3" ["l"="51.648,33.285"]
"wasidennis/AdaptSegNet" ["l"="51.522,37.19"]
"bermanmaxim/jaccardSegment" ["l"="53.359,30.786"]
"speedinghzl/DSRG" ["l"="54.091,31.625"]
"speedinghzl/Scale-Adaptive-Network" ["l"="53.377,30.797"]
"fregu856/2D_detection" ["l"="54.973,32.913"]
"Yuliang-Zou/tf_fcn" ["l"="53.564,30.54"]
"karolmajek/PSPNet-Keras-tensorflow" ["l"="53.431,30.7"]
"maestrojeong/deformable_convnet" ["l"="53.725,30.567"]
"KejieLyu/Deformable_Convolution_Tensorflow" ["l"="51.524,33.541"]
"Borda/pyImSegm" ["l"="53.367,31.43"]
}