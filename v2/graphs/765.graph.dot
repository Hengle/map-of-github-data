digraph G {
"input-output-hk/cardano-js-sdk" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/cardano-js-sdk" -> "CardanoSolutions/ogmios"
"input-output-hk/cardano-js-sdk" -> "spacebudz/lucid"
"input-output-hk/cardano-js-sdk" -> "MeshJS/mesh"
"input-output-hk/cardano-js-sdk" -> "IntersectMBO/cardano-db-sync"
"input-output-hk/cardano-js-sdk" -> "input-output-hk/nami"
"input-output-hk/cardano-js-sdk" -> "CardanoSolutions/kupo"
"input-output-hk/cardano-js-sdk" -> "input-output-hk/lace"
"input-output-hk/cardano-js-sdk" -> "tango-crypto/cardano-wallet-js"
"input-output-hk/cardano-js-sdk" -> "txpipe/oura"
"input-output-hk/cardano-js-sdk" -> "dcSpark/cardano-multiplatform-lib"
"input-output-hk/cardano-js-sdk" -> "cardano-foundation/cardano-connect-with-wallet"
"input-output-hk/cardano-js-sdk" -> "IntersectMBO/cardano-ledger"
"input-output-hk/cardano-js-sdk" -> "cardano-foundation/cardano-graphql"
"input-output-hk/cardano-js-sdk" -> "miguelaeh/cardanocli-js"
"cardano-foundation/cardano-wallet" -> "input-output-hk/daedalus"
"cardano-foundation/cardano-wallet" -> "IntersectMBO/cardano-node"
"cardano-foundation/cardano-wallet" -> "input-output-hk/adrestia"
"cardano-foundation/cardano-wallet" -> "IntersectMBO/cardano-db-sync"
"cardano-foundation/cardano-wallet" -> "IntersectMBO/plutus"
"cardano-foundation/cardano-wallet" -> "IntersectMBO/cardano-ledger"
"cardano-foundation/cardano-wallet" -> "cardano-foundation/cardano-graphql"
"cardano-foundation/cardano-wallet" -> "cardano-foundation/CIPs"
"cardano-foundation/cardano-wallet" -> "IntersectMBO/ouroboros-network"
"cardano-foundation/cardano-wallet" -> "CardanoSolutions/ogmios"
"cardano-foundation/cardano-wallet" -> "IntersectMBO/cardano-addresses"
"cardano-foundation/cardano-wallet" -> "Emurgo/cardano-serialization-lib"
"cardano-foundation/cardano-wallet" -> "input-output-hk/jormungandr"
"cardano-foundation/cardano-wallet" -> "IntersectMBO/plutus-apps"
"cardano-foundation/cardano-wallet" -> "IntersectMBO/cardano-base"
"IntersectMBO/cardano-node" -> "cardano-foundation/cardano-wallet"
"IntersectMBO/cardano-node" -> "input-output-hk/daedalus"
"IntersectMBO/cardano-node" -> "IntersectMBO/plutus"
"IntersectMBO/cardano-node" -> "input-output-hk/plutus-pioneer-program"
"IntersectMBO/cardano-node" -> "cardano-foundation/CIPs"
"IntersectMBO/cardano-node" -> "cardano-community/guild-operators"
"IntersectMBO/cardano-node" -> "input-output-hk/cardano-sl" ["e"=1]
"IntersectMBO/cardano-node" -> "IntersectMBO/cardano-db-sync"
"IntersectMBO/cardano-node" -> "aiken-lang/aiken"
"IntersectMBO/cardano-node" -> "gitmachtl/scripts"
"IntersectMBO/cardano-node" -> "IntersectMBO/ouroboros-network"
"IntersectMBO/cardano-node" -> "IntersectMBO/cardano-ledger"
"IntersectMBO/cardano-node" -> "IntersectMBO/essential-cardano"
"IntersectMBO/cardano-node" -> "CardanoSolutions/ogmios"
"IntersectMBO/cardano-node" -> "cardano-scaling/hydra"
"Emurgo/yoroi-frontend" -> "Emurgo/yoroi"
"Emurgo/yoroi-frontend" -> "Emurgo/cardano-serialization-lib"
"Emurgo/yoroi-frontend" -> "cardano-foundation/CIPs"
"Emurgo/yoroi-frontend" -> "input-output-hk/daedalus"
"Emurgo/yoroi-frontend" -> "IntersectMBO/cardano-db-sync"
"Emurgo/yoroi-frontend" -> "input-output-hk/nami"
"Emurgo/yoroi-frontend" -> "vacuumlabs/adalite" ["e"=1]
"Emurgo/yoroi-frontend" -> "cardano-scaling/hydra"
"Emurgo/yoroi-frontend" -> "cardano-community/guild-operators"
"Emurgo/yoroi-frontend" -> "cardano-foundation/cardano-graphql"
"Emurgo/yoroi-frontend" -> "cardano-foundation/cardano-wallet"
"Emurgo/yoroi-frontend" -> "input-output-hk/jormungandr"
"Emurgo/yoroi-frontend" -> "IntersectMBO/cardano-ledger"
"Emurgo/yoroi-frontend" -> "CardanoSolutions/ogmios"
"Emurgo/yoroi-frontend" -> "dcSpark/cardano-multiplatform-lib"
"IntersectMBO/cardano-ledger" -> "IntersectMBO/cardano-base"
"IntersectMBO/cardano-ledger" -> "IntersectMBO/ouroboros-network"
"IntersectMBO/cardano-ledger" -> "IntersectMBO/cardano-db-sync"
"IntersectMBO/cardano-ledger" -> "CardanoSolutions/ogmios"
"IntersectMBO/cardano-ledger" -> "Emurgo/cardano-serialization-lib"
"IntersectMBO/cardano-ledger" -> "cardano-foundation/cardano-wallet"
"IntersectMBO/cardano-ledger" -> "txpipe/pallas"
"IntersectMBO/cardano-ledger" -> "IntersectMBO/cardano-addresses"
"IntersectMBO/cardano-ledger" -> "input-output-hk/cardano-ops"
"IntersectMBO/cardano-ledger" -> "cardano-scaling/hydra"
"IntersectMBO/cardano-ledger" -> "cardano-foundation/CIPs"
"IntersectMBO/cardano-ledger" -> "txpipe/oura"
"IntersectMBO/cardano-ledger" -> "cardano-foundation/cardano-graphql"
"IntersectMBO/cardano-ledger" -> "input-output-hk/cardano-js-sdk"
"IntersectMBO/cardano-ledger" -> "input-output-hk/adrestia"
"marlowe-lang/marlowe" -> "IntersectMBO/ouroboros-network"
"marlowe-lang/marlowe" -> "input-output-hk/high-assurance-legacy"
"marlowe-lang/marlowe" -> "IntersectMBO/plutus"
"marlowe-lang/marlowe" -> "input-output-hk/plutus-starter"
"marlowe-lang/marlowe" -> "cardano-foundation/CIPs"
"marlowe-lang/marlowe" -> "input-output-hk/adrestia"
"marlowe-lang/marlowe" -> "marlowe-lang/marlowe-cardano"
"marlowe-lang/marlowe" -> "cardano-scaling/hydra"
"marlowe-lang/marlowe" -> "IntersectMBO/cardano-ledger"
"marlowe-lang/marlowe" -> "cardano-foundation/cardano-rosetta"
"IntersectMBO/ouroboros-network" -> "IntersectMBO/cardano-ledger"
"IntersectMBO/ouroboros-network" -> "IntersectMBO/cardano-base"
"IntersectMBO/ouroboros-network" -> "cardano-foundation/cardano-wallet"
"IntersectMBO/ouroboros-network" -> "cardano-scaling/hydra"
"IntersectMBO/ouroboros-network" -> "IntersectMBO/cardano-db-sync"
"IntersectMBO/ouroboros-network" -> "IntersectMBO/cardano-addresses"
"IntersectMBO/ouroboros-network" -> "cardano-foundation/cardano-graphql"
"IntersectMBO/ouroboros-network" -> "CardanoSolutions/ogmios"
"IntersectMBO/ouroboros-network" -> "cardano-foundation/cardano-rosetta"
"IntersectMBO/ouroboros-network" -> "input-output-hk/mithril"
"IntersectMBO/ouroboros-network" -> "IntersectMBO/plutus"
"IntersectMBO/ouroboros-network" -> "IntersectMBO/bech32"
"IntersectMBO/ouroboros-network" -> "cardano-foundation/CIPs"
"IntersectMBO/ouroboros-network" -> "input-output-hk/cardano-ops"
"IntersectMBO/ouroboros-network" -> "input-output-hk/jormungandr"
"cardano-foundation/cardano-graphql" -> "IntersectMBO/cardano-db-sync"
"cardano-foundation/cardano-graphql" -> "cardano-foundation/cardano-rosetta"
"cardano-foundation/cardano-graphql" -> "cardano-foundation/cardano-explorer-app"
"cardano-foundation/cardano-graphql" -> "Emurgo/cardano-serialization-lib"
"cardano-foundation/cardano-graphql" -> "IntersectMBO/cardano-addresses"
"cardano-foundation/cardano-graphql" -> "cardano-foundation/cardano-wallet"
"cardano-foundation/cardano-graphql" -> "input-output-hk/cardano-rest"
"cardano-foundation/cardano-graphql" -> "input-output-hk/cardano-ops"
"cardano-foundation/cardano-graphql" -> "cardano-scaling/hydra"
"cardano-foundation/cardano-graphql" -> "CardanoSolutions/ogmios"
"cardano-foundation/cardano-graphql" -> "spacebudz/lucid"
"cardano-foundation/cardano-graphql" -> "IntersectMBO/cardano-ledger"
"cardano-foundation/cardano-graphql" -> "input-output-hk/cardano-js-sdk"
"cardano-foundation/cardano-graphql" -> "IntersectMBO/ouroboros-network"
"cardano-foundation/cardano-graphql" -> "txpipe/oura"
"input-output-hk/jormungandr" -> "input-output-hk/shelley-testnet"
"input-output-hk/jormungandr" -> "Chris-Graffagnino/Jormungandr-for-Newbs"
"input-output-hk/jormungandr" -> "rdlrt/Alternate-Jormungandr-Testnet"
"input-output-hk/jormungandr" -> "gitmachtl/scripts"
"input-output-hk/jormungandr" -> "IntersectMBO/ouroboros-network"
"input-output-hk/jormungandr" -> "cardano-foundation/cardano-wallet"
"input-output-hk/jormungandr" -> "input-output-hk/daedalus"
"input-output-hk/jormungandr" -> "cardano-foundation/incentivized-testnet-stakepool-registry"
"input-output-hk/jormungandr" -> "input-output-hk/cardano-tutorials"
"input-output-hk/jormungandr" -> "IntersectMBO/cardano-ledger"
"input-output-hk/jormungandr" -> "papacarp/pooltool.io"
"input-output-hk/jormungandr" -> "Emurgo/yoroi-frontend"
"input-output-hk/jormungandr" -> "input-output-hk/jortestkit"
"input-output-hk/jormungandr" -> "cardano-community/guild-operators"
"input-output-hk/jormungandr" -> "CardanoSolutions/ogmios"
"input-output-hk/jortestkit" -> "Straightpool/scripts"
"Emurgo/yoroi" -> "Emurgo/yoroi-frontend"
"Emurgo/yoroi" -> "Emurgo/cardano-serialization-lib"
"Emurgo/yoroi" -> "IntersectMBO/cardano-db-sync"
"input-output-hk/shelley-testnet" -> "input-output-hk/jormungandr"
"input-output-hk/shelley-testnet" -> "input-output-hk/jortestkit"
"input-output-hk/shelley-testnet" -> "rdlrt/Alternate-Jormungandr-Testnet"
"input-output-hk/shelley-testnet" -> "lovelypool/cardano_stuff"
"input-output-hk/shelley-testnet" -> "KodexData/Casper"
"input-output-hk/shelley-testnet" -> "input-output-hk/stakepool-management-tools"
"input-output-hk/shelley-testnet" -> "bobdobs/cardano-scripts"
"input-output-hk/shelley-testnet" -> "cardano-foundation/incentivized-testnet-stakepool-registry"
"input-output-hk/shelley-testnet" -> "Chris-Graffagnino/Jormungandr-for-Newbs"
"input-output-hk/cardano-byron-cli" -> "input-output-hk/rust-byron-cardano"
"input-output-hk/cardano-byron-cli" -> "IntersectMBO/cardano-crypto"
"IntersectMBO/cardano-base" -> "IntersectMBO/cardano-ledger"
"IntersectMBO/cardano-base" -> "input-output-hk/cardano-ops"
"IntersectMBO/cardano-base" -> "IntersectMBO/ouroboros-network"
"IntersectMBO/cardano-base" -> "IntersectMBO/cardano-node-tests"
"IntersectMBO/cardano-base" -> "IntersectMBO/cardano-haskell-packages"
"IntersectMBO/cardano-base" -> "marlowe-lang/marlowe-cardano"
"IntersectMBO/cardano-base" -> "input-output-hk/offchain-metadata-tools"
"IntersectMBO/cardano-base" -> "IntersectMBO/cardano-api"
"IntersectMBO/cardano-base" -> "IntersectMBO/cardano-prelude"
"input-output-hk/rust-byron-cardano" -> "input-output-hk/cardano-byron-cli"
"input-output-hk/rust-byron-cardano" -> "input-output-hk/cardano-ledger-byron"
"input-output-hk/rust-byron-cardano" -> "input-output-hk/high-assurance-legacy"
"input-output-hk/rust-byron-cardano" -> "IntersectMBO/cardano-ledger"
"input-output-hk/rust-byron-cardano" -> "input-output-hk/js-cardano-wasm"
"input-output-hk/rust-byron-cardano" -> "input-output-hk/jormungandr"
"input-output-hk/rust-byron-cardano" -> "input-output-hk/project-icarus"
"input-output-hk/rust-byron-cardano" -> "input-output-hk/cardanodocs.com-archived"
"input-output-hk/rust-byron-cardano" -> "IntersectMBO/cardano-crypto"
"input-output-hk/project-icarus-chrome" -> "input-output-hk/project-icarus"
"input-output-hk/project-icarus-chrome" -> "input-output-hk/project-icarus-backend-service"
"runtimeverification/iele-semantics" -> "input-output-hk/high-assurance-legacy"
"input-output-hk/project-icarus" -> "input-output-hk/project-icarus-chrome"
"input-output-hk/project-icarus" -> "input-output-hk/project-icarus-importer"
"IntersectMBO/cardano-db-sync" -> "cardano-foundation/cardano-graphql"
"IntersectMBO/cardano-db-sync" -> "Emurgo/cardano-serialization-lib"
"IntersectMBO/cardano-db-sync" -> "IntersectMBO/cardano-addresses"
"IntersectMBO/cardano-db-sync" -> "cardano-foundation/CIPs"
"IntersectMBO/cardano-db-sync" -> "CardanoSolutions/ogmios"
"IntersectMBO/cardano-db-sync" -> "IntersectMBO/cardano-ledger"
"IntersectMBO/cardano-db-sync" -> "txpipe/pallas"
"IntersectMBO/cardano-db-sync" -> "txpipe/oura"
"IntersectMBO/cardano-db-sync" -> "cardano-foundation/cardano-wallet"
"IntersectMBO/cardano-db-sync" -> "cardano-community/guild-operators"
"IntersectMBO/cardano-db-sync" -> "dcSpark/cardano-multiplatform-lib"
"IntersectMBO/cardano-db-sync" -> "cardano-foundation/cardano-rosetta"
"IntersectMBO/cardano-db-sync" -> "input-output-hk/cardano-ops"
"IntersectMBO/cardano-db-sync" -> "input-output-hk/cardano-js-sdk"
"IntersectMBO/cardano-db-sync" -> "gitmachtl/scripts"
"alessandrokonrad/Pi-Pool" -> "armada-alliance/master"
"alessandrokonrad/Pi-Pool" -> "input-output-hk/nami"
"alessandrokonrad/Pi-Pool" -> "gitmachtl/scripts"
"alessandrokonrad/Pi-Pool" -> "AndrewWestberg/cncli"
"alessandrokonrad/Pi-Pool" -> "cardano-foundation/cardano-graphql"
"alessandrokonrad/Pi-Pool" -> "input-output-hk/plutus-starter"
"alessandrokonrad/Pi-Pool" -> "alessandrokonrad/spacebudz"
"alessandrokonrad/Pi-Pool" -> "tdiesler/nessus-cardano"
"IntersectMBO/cardano-addresses" -> "IntersectMBO/cardano-db-sync"
"IntersectMBO/cardano-addresses" -> "IntersectMBO/cardano-transactions"
"IntersectMBO/cardano-addresses" -> "input-output-hk/offchain-metadata-tools"
"IntersectMBO/cardano-addresses" -> "cardano-foundation/cardano-rosetta"
"IntersectMBO/cardano-addresses" -> "IntersectMBO/bech32"
"IntersectMBO/cardano-addresses" -> "CardanoSolutions/ogmios"
"IntersectMBO/cardano-addresses" -> "Emurgo/cardano-serialization-lib"
"IntersectMBO/cardano-addresses" -> "IntersectMBO/cardano-ledger"
"IntersectMBO/cardano-addresses" -> "IntersectMBO/cardano-base"
"IntersectMBO/cardano-addresses" -> "cardano-foundation/cardano-graphql"
"IntersectMBO/cardano-addresses" -> "cardano-foundation/cardano-connect-with-wallet"
"IntersectMBO/cardano-addresses" -> "Plutonomicon/cardano-transaction-lib"
"IntersectMBO/cardano-addresses" -> "input-output-hk/cardano-ops"
"IntersectMBO/cardano-addresses" -> "IntersectMBO/cardano-haskell-packages"
"coinbase/mesh-specifications" -> "coinbase/mesh-cli"
"coinbase/mesh-specifications" -> "coinbase/mesh-sdk-go"
"coinbase/mesh-specifications" -> "coinbase/mesh-bitcoin"
"coinbase/mesh-specifications" -> "coinbase/mesh-ethereum"
"coinbase/mesh-specifications" -> "coinbase/mesh-geth-sdk"
"coinbase/mesh-specifications" -> "cardano-foundation/cardano-rosetta"
"input-output-hk/adrestia" -> "cardano-foundation/cardano-wallet"
"input-output-hk/adrestia" -> "IntersectMBO/cardano-node-tests"
"input-output-hk/adrestia" -> "IntersectMBO/cardano-base"
"input-output-hk/adrestia" -> "IntersectMBO/cardano-ledger"
"input-output-hk/adrestia" -> "IntersectMBO/cardano-addresses"
"input-output-hk/adrestia" -> "input-output-hk/daedalus"
"input-output-hk/adrestia" -> "cardano-foundation/cardano-explorer-app"
"input-output-hk/adrestia" -> "input-output-hk/plutus-use-cases"
"input-output-hk/adrestia" -> "IntersectMBO/cardano-launcher"
"input-output-hk/adrestia" -> "IntersectMBO/cardano-db-sync"
"input-output-hk/adrestia" -> "input-output-hk/offchain-metadata-tools"
"input-output-hk/adrestia" -> "input-output-hk/cardano-ops"
"input-output-hk/adrestia" -> "CardanoSolutions/ogmios"
"input-output-hk/adrestia" -> "input-output-hk/cardano-js-sdk"
"input-output-hk/adrestia" -> "cardano-foundation/cardano-rosetta"
"cardano-community/guild-operators" -> "gitmachtl/scripts"
"cardano-community/guild-operators" -> "cardano-foundation/CIPs"
"cardano-community/guild-operators" -> "AndrewWestberg/cncli"
"cardano-community/guild-operators" -> "IntersectMBO/cardano-db-sync"
"cardano-community/guild-operators" -> "Emurgo/cardano-serialization-lib"
"cardano-community/guild-operators" -> "txpipe/oura"
"cardano-community/guild-operators" -> "papacarp/pooltool.io"
"cardano-community/guild-operators" -> "CardanoSolutions/ogmios"
"cardano-community/guild-operators" -> "cardano-community/cncli"
"cardano-community/guild-operators" -> "vacuumlabs/cardano-hw-cli"
"cardano-community/guild-operators" -> "IntersectMBO/cardano-node"
"cardano-community/guild-operators" -> "cardano-foundation/cardano-graphql"
"cardano-community/guild-operators" -> "txpipe/pallas"
"cardano-community/guild-operators" -> "txpipe/scrolls"
"cardano-community/guild-operators" -> "MeshJS/mesh"
"coinbase/mesh-bitcoin" -> "coinbase/mesh-ethereum"
"coinbase/mesh-bitcoin" -> "coinbase/mesh-cli"
"gitmachtl/scripts" -> "cardano-community/guild-operators"
"gitmachtl/scripts" -> "AndrewWestberg/cncli"
"gitmachtl/scripts" -> "IntersectMBO/cardano-db-sync"
"gitmachtl/scripts" -> "papacarp/pooltool.io"
"gitmachtl/scripts" -> "txpipe/oura"
"gitmachtl/scripts" -> "vacuumlabs/cardano-hw-cli"
"gitmachtl/scripts" -> "CardanoSolutions/ogmios"
"gitmachtl/scripts" -> "Emurgo/cardano-serialization-lib"
"gitmachtl/scripts" -> "cardano-foundation/CIPs"
"gitmachtl/scripts" -> "input-output-hk/cardano-tutorials"
"gitmachtl/scripts" -> "input-output-hk/jormungandr"
"gitmachtl/scripts" -> "cardano-community/cncli"
"gitmachtl/scripts" -> "miguelaeh/cardanocli-js"
"gitmachtl/scripts" -> "IntersectMBO/plutus-apps"
"gitmachtl/scripts" -> "abracadaniel/cardano-pool-docker"
"CardanoSolutions/ogmios" -> "CardanoSolutions/kupo"
"CardanoSolutions/ogmios" -> "txpipe/oura"
"CardanoSolutions/ogmios" -> "aiken-lang/aiken"
"CardanoSolutions/ogmios" -> "Emurgo/cardano-serialization-lib"
"CardanoSolutions/ogmios" -> "spacebudz/lucid"
"CardanoSolutions/ogmios" -> "cardano-scaling/hydra"
"CardanoSolutions/ogmios" -> "MeshJS/mesh"
"CardanoSolutions/ogmios" -> "IntersectMBO/cardano-db-sync"
"CardanoSolutions/ogmios" -> "dcSpark/cardano-multiplatform-lib"
"CardanoSolutions/ogmios" -> "IntersectMBO/cardano-ledger"
"CardanoSolutions/ogmios" -> "txpipe/pallas"
"CardanoSolutions/ogmios" -> "IntersectMBO/cardano-addresses"
"CardanoSolutions/ogmios" -> "Plutonomicon/plutonomicon"
"CardanoSolutions/ogmios" -> "HeliosLang/compiler"
"CardanoSolutions/ogmios" -> "input-output-hk/cardano-js-sdk"
"cardano-foundation/CIPs" -> "Emurgo/cardano-serialization-lib"
"cardano-foundation/CIPs" -> "IntersectMBO/cardano-db-sync"
"cardano-foundation/CIPs" -> "aiken-lang/aiken"
"cardano-foundation/CIPs" -> "spacebudz/lucid"
"cardano-foundation/CIPs" -> "cardano-scaling/hydra"
"cardano-foundation/CIPs" -> "cardano-community/guild-operators"
"cardano-foundation/CIPs" -> "input-output-hk/nami"
"cardano-foundation/CIPs" -> "CardanoSolutions/ogmios"
"cardano-foundation/CIPs" -> "IntersectMBO/cardano-ledger"
"cardano-foundation/CIPs" -> "txpipe/oura"
"cardano-foundation/CIPs" -> "cardano-foundation/developer-portal"
"cardano-foundation/CIPs" -> "cardano-foundation/cardano-wallet"
"cardano-foundation/CIPs" -> "txpipe/pallas"
"cardano-foundation/CIPs" -> "IntersectMBO/plutus-apps"
"cardano-foundation/CIPs" -> "MeshJS/mesh"
"input-output-hk/cardano-tutorials" -> "input-output-hk/cardano-ops"
"input-output-hk/cardano-tutorials" -> "gitmachtl/scripts"
"input-output-hk/cardano-tutorials" -> "Chris-Graffagnino/Jormungandr-for-Newbs"
"input-output-hk/cardano-tutorials" -> "papacarp/pooltool.io"
"input-output-hk/cardano-tutorials" -> "IntersectMBO/cardano-ledger"
"input-output-hk/cardano-tutorials" -> "AndrewWestberg/cncli"
"input-output-hk/cardano-tutorials" -> "input-output-hk/jormungandr"
"input-output-hk/cardano-tutorials" -> "IntersectMBO/cardano-db-sync"
"input-output-hk/cardano-tutorials" -> "cardano-community/guild-operators"
"IntersectMBO/cardano-transactions" -> "IntersectMBO/cardano-coin-selection"
"cardano-foundation/cardano-explorer-app" -> "cardano-foundation/cardano-graphql"
"cardano-foundation/cardano-explorer-app" -> "input-output-hk/cardano-ops"
"cardano-foundation/cardano-explorer-app" -> "Emurgo/yoroi-graphql-migration-backend"
"cardano-foundation/cardano-explorer-app" -> "IntersectMBO/cardano-addresses"
"coinbase/mesh-sdk-go" -> "coinbase/mesh-cli"
"coinbase/mesh-sdk-go" -> "coinbase/mesh-ethereum"
"coinbase/mesh-sdk-go" -> "coinbase/mesh-specifications"
"coinbase/mesh-sdk-go" -> "coinbase/mesh-bitcoin"
"coinbase/mesh-sdk-go" -> "coinbase/mesh-ecosystem"
"Emurgo/cardano-serialization-lib" -> "CardanoSolutions/ogmios"
"Emurgo/cardano-serialization-lib" -> "txpipe/pallas"
"Emurgo/cardano-serialization-lib" -> "txpipe/oura"
"Emurgo/cardano-serialization-lib" -> "aiken-lang/aiken"
"Emurgo/cardano-serialization-lib" -> "dcSpark/cardano-multiplatform-lib"
"Emurgo/cardano-serialization-lib" -> "IntersectMBO/cardano-db-sync"
"Emurgo/cardano-serialization-lib" -> "cardano-foundation/CIPs"
"Emurgo/cardano-serialization-lib" -> "input-output-hk/cardano-js-sdk"
"Emurgo/cardano-serialization-lib" -> "input-output-hk/nami"
"Emurgo/cardano-serialization-lib" -> "Plutonomicon/plutonomicon"
"Emurgo/cardano-serialization-lib" -> "spacebudz/lucid"
"Emurgo/cardano-serialization-lib" -> "CardanoSolutions/kupo"
"Emurgo/cardano-serialization-lib" -> "HarmonicLabs/plu-ts"
"Emurgo/cardano-serialization-lib" -> "HeliosLang/compiler"
"Emurgo/cardano-serialization-lib" -> "dynamicstrategies/cardano-wallet-connector"
"cardano-foundation/cardano-rosetta" -> "IntersectMBO/cardano-addresses"
"cardano-foundation/cardano-rosetta" -> "input-output-hk/smash"
"cardano-foundation/cardano-rosetta" -> "cardano-foundation/cardano-graphql"
"cardano-foundation/cardano-rosetta" -> "IntersectMBO/cardano-db-sync"
"cardano-foundation/cardano-rosetta" -> "IntersectMBO/bech32"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "lovelypool/cardano_stuff"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "rdlrt/Alternate-Jormungandr-Testnet"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "input-output-hk/jormungandr"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "Straightpool/scripts"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "input-output-hk/jortestkit"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "input-output-hk/stakepool-management-tools"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "input-output-hk/shelley-testnet"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "papacarp/pooltool.io"
"papacarp/pooltool.io" -> "SinglePoolAlliance/Registration"
"papacarp/pooltool.io" -> "AndrewWestberg/cncli"
"coinbase/mesh-cli" -> "coinbase/mesh-bitcoin"
"coinbase/mesh-cli" -> "coinbase/mesh-sdk-go"
"coinbase/mesh-cli" -> "coinbase/mesh-ethereum"
"coinbase/mesh-cli" -> "coinbase/mesh-specifications"
"coinbase/mesh-cli" -> "coinbase/mesh-geth-sdk"
"input-output-hk/cardano-ops" -> "input-output-hk/smash"
"input-output-hk/cardano-ops" -> "IntersectMBO/cardano-base"
"input-output-hk/cardano-ops" -> "IntersectMBO/bech32"
"input-output-hk/cardano-ops" -> "IntersectMBO/cardano-node-tests"
"cardano-foundation/incentivized-testnet-stakepool-registry" -> "rdlrt/Alternate-Jormungandr-Testnet"
"cardano-foundation/incentivized-testnet-stakepool-registry" -> "input-output-hk/stakepool-management-tools"
"cffls/py2hs" -> "blockfrost/blockfrost-python"
"abracadaniel/cardano-pool-docker" -> "tdiesler/nessus-cardano"
"abracadaniel/cardano-pool-docker" -> "gitmachtl/scripts"
"abracadaniel/cardano-pool-docker" -> "cardano-community/guild-operators"
"abracadaniel/cardano-pool-docker" -> "input-output-hk/cardano-rt-view"
"abracadaniel/cardano-pool-docker" -> "cardano-foundation/cardano-graphql"
"abracadaniel/cardano-pool-docker" -> "input-output-hk/plutus-starter"
"abracadaniel/cardano-pool-docker" -> "Emurgo/cardano-serialization-lib"
"abracadaniel/cardano-pool-docker" -> "txpipe/oura"
"abracadaniel/cardano-pool-docker" -> "IntersectMBO/cardano-db-sync"
"IntersectMBO/cardano-node-tests" -> "IntersectMBO/bech32"
"IntersectMBO/cardano-node-tests" -> "IntersectMBO/cardano-base"
"IntersectMBO/cardano-node-tests" -> "input-output-hk/cardano-ops"
"cardano-foundation/docs-cardano-org" -> "cardano-foundation/testnets-cardano-org"
"rdlrt/Alternate-Jormungandr-Testnet" -> "input-output-hk/jortestkit"
"rdlrt/Alternate-Jormungandr-Testnet" -> "KodexData/Casper"
"rdlrt/Alternate-Jormungandr-Testnet" -> "bobdobs/cardano-scripts"
"IntersectMBO/bech32" -> "input-output-hk/smash"
"IntersectMBO/bech32" -> "IntersectMBO/cardano-node-tests"
"SinglePoolAlliance/Registration" -> "papacarp/pooltool.io"
"cardano-foundation/testnets-cardano-org" -> "input-output-hk/smash"
"cardano-foundation/testnets-cardano-org" -> "input-output-hk/cardano-ops"
"bobdobs/cardano-scripts" -> "lovelypool/cardano_stuff"
"lovelypool/cardano_stuff" -> "Straightpool/scripts"
"lovelypool/cardano_stuff" -> "bobdobs/cardano-scripts"
"blockfrost/blockfrost-python" -> "cffls/py2hs"
"blockfrost/blockfrost-python" -> "cardano-community/koios-python"
"input-output-hk/plutus-starter" -> "IntersectMBO/plutus-apps"
"input-output-hk/plutus-starter" -> "Plutonomicon/plutonomicon"
"input-output-hk/plutus-starter" -> "input-output-hk/Alonzo-testnet"
"input-output-hk/plutus-starter" -> "CardanoSolutions/ogmios"
"input-output-hk/plutus-starter" -> "spacebudz/lucid"
"input-output-hk/plutus-starter" -> "iohkedu/haskell-2020"
"input-output-hk/plutus-starter" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/plutus-starter" -> "mlabs-haskell/awesome-plutus"
"input-output-hk/plutus-starter" -> "aiken-lang/aiken"
"input-output-hk/plutus-starter" -> "input-output-hk/plutus-pioneer-program"
"input-output-hk/plutus-starter" -> "mlabs-haskell/plutip"
"input-output-hk/plutus-starter" -> "txpipe/plutus-starter-kit"
"input-output-hk/plutus-starter" -> "IntersectMBO/plutus"
"input-output-hk/plutus-starter" -> "woofpool/cardano-private-testnet-setup"
"input-output-hk/plutus-starter" -> "Liqwid-Labs/agora"
"input-output-hk/plutus-use-cases" -> "input-output-hk/offchain-metadata-tools"
"cardano-foundation/developer-portal" -> "cardano-foundation/cardano-token-registry"
"cardano-foundation/developer-portal" -> "cardano-foundation/CIPs"
"cardano-foundation/developer-portal" -> "input-output-hk/cardano-documentation"
"cardano-foundation/developer-portal" -> "CardanoSolutions/ogmios"
"cardano-foundation/developer-portal" -> "cardano-community/guild-operators"
"cardano-foundation/developer-portal" -> "IntersectMBO/cardano-db-sync"
"cardano-foundation/developer-portal" -> "cardano-scaling/hydra"
"cardano-foundation/developer-portal" -> "aiken-lang/aiken"
"cardano-foundation/developer-portal" -> "cardano-foundation/cardano-wallet"
"cardano-foundation/developer-portal" -> "Emurgo/cardano-serialization-lib"
"cardano-foundation/developer-portal" -> "spacebudz/lucid"
"cardano-foundation/developer-portal" -> "input-output-hk/nami"
"cardano-foundation/developer-portal" -> "cardano-foundation/cardano-graphql"
"cardano-foundation/developer-portal" -> "cardano-foundation/cardano-explorer-app"
"cardano-foundation/developer-portal" -> "MeshJS/mesh"
"input-output-hk/plutus-pioneer-program" -> "IntersectMBO/plutus"
"input-output-hk/plutus-pioneer-program" -> "IntersectMBO/plutus-apps"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/plutus-starter"
"input-output-hk/plutus-pioneer-program" -> "aiken-lang/aiken"
"input-output-hk/plutus-pioneer-program" -> "IntersectMBO/cardano-node"
"input-output-hk/plutus-pioneer-program" -> "spacebudz/lucid"
"input-output-hk/plutus-pioneer-program" -> "cardano-foundation/CIPs"
"input-output-hk/plutus-pioneer-program" -> "Plutonomicon/plutonomicon"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/haskell-course"
"input-output-hk/plutus-pioneer-program" -> "CardanoSolutions/ogmios"
"input-output-hk/plutus-pioneer-program" -> "IntersectMBO/essential-cardano"
"input-output-hk/plutus-pioneer-program" -> "MeshJS/mesh"
"input-output-hk/plutus-pioneer-program" -> "cardano-foundation/cardano-wallet"
"input-output-hk/plutus-pioneer-program" -> "iohkedu/haskell-2020"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/nami"
"input-output-hk/nami" -> "spacebudz/lucid"
"input-output-hk/nami" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/nami" -> "cardano-foundation/CIPs"
"input-output-hk/nami" -> "dynamicstrategies/cardano-wallet-connector"
"input-output-hk/nami" -> "miguelaeh/cardanocli-js"
"input-output-hk/nami" -> "input-output-hk/cardano-js-sdk"
"input-output-hk/nami" -> "CardanoSolutions/ogmios"
"input-output-hk/nami" -> "aiken-lang/aiken"
"input-output-hk/nami" -> "IntersectMBO/cardano-db-sync"
"input-output-hk/nami" -> "MeshJS/mesh"
"input-output-hk/nami" -> "txpipe/oura"
"input-output-hk/nami" -> "HarmonicLabs/plu-ts"
"input-output-hk/nami" -> "HeliosLang/compiler"
"input-output-hk/nami" -> "Python-Cardano/pycardano"
"input-output-hk/nami" -> "Plutonomicon/plutonomicon"
"cardano-foundation/cardano-token-registry" -> "cardano-foundation/developer-portal"
"cardano-foundation/cardano-token-registry" -> "cardano-foundation/CIPs"
"cardano-foundation/cardano-token-registry" -> "IntersectMBO/cardano-db-sync"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/offchain-metadata-tools"
"cardano-foundation/cardano-token-registry" -> "IntersectMBO/cardano-addresses"
"cardano-foundation/cardano-token-registry" -> "CardanoSolutions/ogmios"
"cardano-foundation/cardano-token-registry" -> "Emurgo/cardano-serialization-lib"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/cardano-documentation"
"cardano-foundation/cardano-token-registry" -> "IntersectMBO/plutus-apps"
"cardano-foundation/cardano-token-registry" -> "dynamicstrategies/cardano-wallet-connector"
"cardano-foundation/cardano-token-registry" -> "spacebudz/lucid"
"cardano-foundation/cardano-token-registry" -> "cardano-foundation/cardano-wallet"
"cardano-foundation/cardano-token-registry" -> "bloxbean/cardano-client-lib"
"cardano-foundation/cardano-token-registry" -> "aiken-lang/aiken"
"cardano-foundation/cardano-token-registry" -> "cardano-foundation/cardano-connect-with-wallet"
"input-output-hk/Alonzo-testnet" -> "input-output-hk/plutus-starter"
"input-output-hk/Alonzo-testnet" -> "input-output-hk/offchain-metadata-tools"
"input-output-hk/Alonzo-testnet" -> "MartifyLabs/martify.contracts"
"input-output-hk/Alonzo-testnet" -> "ActaFi/cardano-staking-smart-contract"
"input-output-hk/Alonzo-testnet" -> "dynamicstrategies/cardano-wallet-connector"
"mlabs-haskell/awesome-plutus" -> "mlabs-haskell/plutip"
"mlabs-haskell/awesome-plutus" -> "dQuadrant/kuber"
"mlabs-haskell/awesome-plutus" -> "Plutonomicon/plutarch-plutus"
"mlabs-haskell/awesome-plutus" -> "Liqwid-Labs/plutus-extra"
"cardano-scaling/hydra" -> "CardanoSolutions/ogmios"
"cardano-scaling/hydra" -> "cardano-foundation/CIPs"
"cardano-scaling/hydra" -> "aiken-lang/aiken"
"cardano-scaling/hydra" -> "CardanoSolutions/kupo"
"cardano-scaling/hydra" -> "txpipe/oura"
"cardano-scaling/hydra" -> "input-output-hk/mithril"
"cardano-scaling/hydra" -> "Plutonomicon/plutonomicon"
"cardano-scaling/hydra" -> "IntersectMBO/cardano-ledger"
"cardano-scaling/hydra" -> "Emurgo/cardano-serialization-lib"
"cardano-scaling/hydra" -> "spacebudz/lucid"
"cardano-scaling/hydra" -> "txpipe/pallas"
"cardano-scaling/hydra" -> "cardano-foundation/cardano-graphql"
"cardano-scaling/hydra" -> "IntersectMBO/ouroboros-network"
"cardano-scaling/hydra" -> "HarmonicLabs/plu-ts"
"cardano-scaling/hydra" -> "HeliosLang/compiler"
"input-output-hk/cardano-documentation" -> "cardano-foundation/cardano-token-registry"
"input-output-hk/cardano-documentation" -> "cardano-scaling/hydra"
"input-output-hk/cardano-documentation" -> "cardano-foundation/developer-portal"
"input-output-hk/cardano-documentation" -> "cardano-foundation/cardano-graphql"
"input-output-hk/cardano-documentation" -> "cardano-foundation/CIPs"
"input-output-hk/cardano-documentation" -> "IntersectMBO/cardano-base"
"input-output-hk/cardano-documentation" -> "aiken-lang/aiken"
"input-output-hk/cardano-documentation" -> "IntersectMBO/ouroboros-network"
"input-output-hk/cardano-documentation" -> "input-output-hk/Alonzo-testnet"
"input-output-hk/cardano-documentation" -> "cardano-foundation/cardano-wallet"
"input-output-hk/cardano-documentation" -> "IntersectMBO/plutus-apps"
"input-output-hk/cardano-documentation" -> "IntersectMBO/cardano-ledger"
"input-output-hk/cardano-documentation" -> "gitmachtl/scripts"
"input-output-hk/cardano-documentation" -> "CardanoSolutions/ogmios"
"input-output-hk/cardano-documentation" -> "input-output-hk/plutus-starter"
"SundaeSwap-finance/toolkit-for-cardano" -> "SundaeSwap-finance/alonzo-testnet"
"SundaeSwap-finance/toolkit-for-cardano" -> "Python-Cardano/pycardano"
"armada-alliance/armada-alliance" -> "armada-alliance/cardano-node-binaries"
"armada-alliance/armada-alliance" -> "armada-alliance/master"
"armada-alliance/armada-alliance" -> "blinklabs-io/txtop"
"IntersectMBO/essential-cardano" -> "cardano-foundation/CIPs"
"IntersectMBO/essential-cardano" -> "CardanoSolutions/ogmios"
"IntersectMBO/essential-cardano" -> "input-output-hk/plutus-pioneer-program"
"IntersectMBO/essential-cardano" -> "IntersectMBO/plutus"
"IntersectMBO/essential-cardano" -> "gitmachtl/scripts"
"IntersectMBO/essential-cardano" -> "spacebudz/lucid"
"IntersectMBO/essential-cardano" -> "cardano-scaling/hydra"
"IntersectMBO/essential-cardano" -> "cardano-community/guild-operators"
"IntersectMBO/essential-cardano" -> "IntersectMBO/cardano-db-sync"
"IntersectMBO/essential-cardano" -> "IntersectMBO/cardano-node"
"IntersectMBO/essential-cardano" -> "cardano-foundation/cardano-graphql"
"IntersectMBO/essential-cardano" -> "cardano-foundation/cardano-wallet"
"IntersectMBO/essential-cardano" -> "input-output-hk/plutus-starter"
"IntersectMBO/essential-cardano" -> "MeshJS/mesh"
"IntersectMBO/essential-cardano" -> "cardano-foundation/developer-portal"
"mcvetyty/automint" -> "nejcr/cardano-nft-maker"
"blockfrost/blockfrost-js" -> "adosia/Heidrun"
"blockfrost/blockfrost-js" -> "miguelaeh/cardanocli-js"
"blockfrost/blockfrost-js" -> "input-output-hk/cardano-js-sdk"
"blockfrost/blockfrost-js" -> "armada-alliance/cardano-minter"
"blockfrost/blockfrost-js" -> "blockfrost/blockfrost-backend-ryo"
"blockfrost/blockfrost-js" -> "Emurgo/cardano-serialization-lib"
"emesik/cardano-python" -> "Python-Cardano/pycardano"
"emesik/cardano-python" -> "blockfrost/blockfrost-python"
"emesik/cardano-python" -> "nateshmbhat/cardano-nft-minter"
"emesik/cardano-python" -> "MartifyLabs/martify.contracts"
"emesik/cardano-python" -> "OpShin/opshin-pioneer-program"
"emesik/cardano-python" -> "OpShin/opshin"
"emesik/cardano-python" -> "creativequotient/automint"
"creativequotient/automint" -> "ftpmorph/Cardano-NFT-Auto-Mint"
"creativequotient/automint" -> "alandarev/cnft-framework"
"armada-alliance/cardano-minter" -> "miguelaeh/cardanocli-js"
"armada-alliance/cardano-minter" -> "xray-network/minterr-pwa"
"armada-alliance/cardano-minter" -> "dynamicstrategies/cardano-wallet-connector"
"armada-alliance/cardano-minter" -> "MartifyLabs/martify.contracts"
"armada-alliance/cardano-minter" -> "dcSpark/fracada"
"armada-alliance/cardano-minter" -> "Emurgo/cardano-serialization-lib"
"armada-alliance/cardano-minter" -> "creativequotient/automint"
"armada-alliance/cardano-minter" -> "blockfrost/blockfrost-js"
"armada-alliance/cardano-minter" -> "armada-alliance/armada-alliance"
"armada-alliance/cardano-minter" -> "dendorferpatrick/nami-wallet-examples"
"dcSpark/cardano-multiplatform-lib" -> "CardanoSolutions/kupo"
"dcSpark/cardano-multiplatform-lib" -> "txpipe/pallas"
"dcSpark/cardano-multiplatform-lib" -> "butaneprotocol/blaze-cardano"
"dcSpark/cardano-multiplatform-lib" -> "Emurgo/cardano-serialization-lib"
"dcSpark/cardano-multiplatform-lib" -> "aiken-lang/stdlib"
"dcSpark/cardano-multiplatform-lib" -> "IndigoProtocol/dexter"
"dcSpark/cardano-multiplatform-lib" -> "txpipe/oura"
"AndrewWestberg/cncli" -> "cardano-community/cncli"
"AndrewWestberg/cncli" -> "gitmachtl/scripts"
"AndrewWestberg/cncli" -> "papacarp/pooltool.io"
"AndrewWestberg/cncli" -> "cardano-community/guild-operators"
"AndrewWestberg/cncli" -> "vacuumlabs/cardano-hw-cli"
"AndrewWestberg/cncli" -> "txpipe/oura"
"AndrewWestberg/cncli" -> "rdlrt/Alternate-Jormungandr-Testnet"
"AndrewWestberg/cncli" -> "input-output-hk/cardano-rt-view"
"miguelaeh/cardanocli-js" -> "armada-alliance/cardano-minter"
"miguelaeh/cardanocli-js" -> "spacebudz/lucid"
"miguelaeh/cardanocli-js" -> "tango-crypto/cardano-wallet-js"
"miguelaeh/cardanocli-js" -> "Emurgo/cardano-serialization-lib"
"miguelaeh/cardanocli-js" -> "input-output-hk/nami"
"miguelaeh/cardanocli-js" -> "dynamicstrategies/cardano-wallet-connector"
"miguelaeh/cardanocli-js" -> "blockfrost/blockfrost-js"
"miguelaeh/cardanocli-js" -> "IntersectMBO/cardano-db-sync"
"miguelaeh/cardanocli-js" -> "input-output-hk/cardano-js-sdk"
"miguelaeh/cardanocli-js" -> "txpipe/oura"
"miguelaeh/cardanocli-js" -> "CardanoSolutions/ogmios"
"miguelaeh/cardanocli-js" -> "Python-Cardano/pycardano"
"miguelaeh/cardanocli-js" -> "aiken-lang/aiken"
"miguelaeh/cardanocli-js" -> "StricaHQ/typhonjs"
"miguelaeh/cardanocli-js" -> "dcSpark/cardano-multiplatform-lib"
"alandarev/cnft-framework" -> "ejane24/Cardano-NFT-Auto-Mint"
"alandarev/cnft-framework" -> "mcvetyty/automint"
"armada-alliance/master" -> "armada-alliance/cardano-node-binaries"
"armada-alliance/cardano-node-binaries" -> "blinklabs-io/txtop"
"armada-alliance/cardano-node-binaries" -> "asnakep/poolLeaderLogs"
"armada-alliance/cardano-node-binaries" -> "armada-alliance/master"
"armada-alliance/cardano-node-binaries" -> "blinklabs-io/nview"
"armada-alliance/cardano-node-binaries" -> "blinklabs-io/dingo"
"coinbase/mesh-ethereum" -> "coinbase/mesh-bitcoin"
"coinbase/mesh-ethereum" -> "coinbase/mesh-cli"
"coinbase/mesh-ethereum" -> "coinbase/mesh-sdk-go"
"coinbase/mesh-ethereum" -> "coinbase/mesh-ecosystem"
"bloxbean/cardano-client-lib" -> "Emurgo/cardano-serialization-lib"
"bloxbean/cardano-client-lib" -> "cardano-community/koios-java-client"
"bloxbean/cardano-client-lib" -> "bloxbean/yaci"
"bloxbean/cardano-client-lib" -> "bloxbean/yaci-store"
"bloxbean/cardano-client-lib" -> "bloxbean/cardano-client-examples"
"bloxbean/cardano-client-lib" -> "cardano-foundation/cf-java-rewards-calculation"
"bloxbean/cardano-client-lib" -> "CardanoSolutions/kupo"
"bloxbean/cardano-client-lib" -> "nau/scalus"
"bloxbean/cardano-client-lib" -> "cardano-foundation/cf-adahandle-resolver"
"bloxbean/cardano-client-lib" -> "cardano-foundation/cardano-connect-with-wallet"
"bloxbean/cardano-client-lib" -> "dcSpark/cardano-multiplatform-lib"
"bloxbean/cardano-client-lib" -> "CardanoSolutions/ogmios"
"bloxbean/cardano-client-lib" -> "txpipe/scrolls"
"echovl/cardano-go" -> "fivebinaries/go-cardano-serialization"
"echovl/cardano-go" -> "blinklabs-io/gouroboros"
"echovl/cardano-go" -> "blockfrost/blockfrost-go"
"spacebudz/app" -> "BlakeBrown/Vendere"
"spacebudz/app" -> "alessandrokonrad/spacebudz"
"spacebudz/app" -> "MartifyLabs/martify.contracts"
"Liqwid-Labs/plutus-extra" -> "mlabs-haskell/apropos"
"fivebinaries/go-cardano-serialization" -> "blinklabs-io/gouroboros"
"tango-crypto/cardano-wallet-js" -> "miguelaeh/cardanocli-js"
"tango-crypto/cardano-wallet-js" -> "StricaHQ/typhonjs"
"tango-crypto/cardano-wallet-js" -> "HarmonicLabs/plu-ts"
"ejane24/Cardano-NFT-Auto-Mint" -> "alandarev/cnft-framework"
"Python-Cardano/pycardano" -> "OpShin/opshin"
"Python-Cardano/pycardano" -> "HeliosLang/compiler"
"Python-Cardano/pycardano" -> "spacebudz/lucid"
"Python-Cardano/pycardano" -> "dynamicstrategies/cardano-wallet-connector"
"Python-Cardano/pycardano" -> "CardanoSolutions/kupo"
"Python-Cardano/pycardano" -> "OpShin/opshin-pioneer-program"
"Python-Cardano/pycardano" -> "aiken-lang/aiken"
"Python-Cardano/pycardano" -> "txpipe/oura"
"Python-Cardano/pycardano" -> "emesik/cardano-python"
"Python-Cardano/pycardano" -> "CardanoSolutions/ogmios"
"Python-Cardano/pycardano" -> "blockfrost/blockfrost-python"
"Python-Cardano/pycardano" -> "blockfrost/blockfrost-backend-ryo"
"Python-Cardano/pycardano" -> "txpipe/pallas"
"Python-Cardano/pycardano" -> "txpipe/scrolls"
"Python-Cardano/pycardano" -> "MeshJS/mesh"
"dynamicstrategies/cardano-wallet-connector" -> "spacebudz/lucid"
"dynamicstrategies/cardano-wallet-connector" -> "dendorferpatrick/nami-wallet-examples"
"dynamicstrategies/cardano-wallet-connector" -> "Python-Cardano/pycardano"
"dynamicstrategies/cardano-wallet-connector" -> "HarmonicLabs/plu-ts"
"dynamicstrategies/cardano-wallet-connector" -> "Emurgo/cardano-serialization-lib"
"dynamicstrategies/cardano-wallet-connector" -> "input-output-hk/nami"
"dynamicstrategies/cardano-wallet-connector" -> "MartifyLabs/martify.contracts"
"dynamicstrategies/cardano-wallet-connector" -> "miguelaeh/cardanocli-js"
"dynamicstrategies/cardano-wallet-connector" -> "StricaHQ/typhonjs"
"dcSpark/carp" -> "txpipe/scrolls"
"dcSpark/carp" -> "txpipe/oura"
"dcSpark/carp" -> "dcSpark/cardano-multiplatform-lib"
"dcSpark/carp" -> "Bitrue-exchange/libada-go"
"dcSpark/carp" -> "input-output-hk/mithril"
"spacebudz/lucid" -> "aiken-lang/aiken"
"spacebudz/lucid" -> "MeshJS/mesh"
"spacebudz/lucid" -> "HeliosLang/compiler"
"spacebudz/lucid" -> "CardanoSolutions/ogmios"
"spacebudz/lucid" -> "dynamicstrategies/cardano-wallet-connector"
"spacebudz/lucid" -> "Plutonomicon/plutonomicon"
"spacebudz/lucid" -> "HarmonicLabs/plu-ts"
"spacebudz/lucid" -> "input-output-hk/nami"
"spacebudz/lucid" -> "Anastasia-Labs/lucid-evolution"
"spacebudz/lucid" -> "spacebudz/nebula"
"spacebudz/lucid" -> "Python-Cardano/pycardano"
"spacebudz/lucid" -> "miguelaeh/cardanocli-js"
"spacebudz/lucid" -> "Emurgo/cardano-serialization-lib"
"spacebudz/lucid" -> "cardano-foundation/CIPs"
"spacebudz/lucid" -> "txpipe/oura"
"cardano-community/koios-python" -> "asnakep/poolLeaderLogs"
"HarmonicLabs/plu-ts" -> "HeliosLang/compiler"
"HarmonicLabs/plu-ts" -> "spacebudz/lucid"
"HarmonicLabs/plu-ts" -> "aiken-lang/aiken"
"HarmonicLabs/plu-ts" -> "StricaHQ/typhonjs"
"HarmonicLabs/plu-ts" -> "Plutonomicon/plutonomicon"
"HarmonicLabs/plu-ts" -> "free-honey/naumachia"
"HarmonicLabs/plu-ts" -> "dynamicstrategies/cardano-wallet-connector"
"HarmonicLabs/plu-ts" -> "CardanoSolutions/kupo"
"HarmonicLabs/plu-ts" -> "Emurgo/cardano-serialization-lib"
"HarmonicLabs/plu-ts" -> "txpipe/oura"
"HarmonicLabs/plu-ts" -> "butaneprotocol/blaze-cardano"
"HarmonicLabs/plu-ts" -> "CardanoSolutions/ogmios"
"HarmonicLabs/plu-ts" -> "dcSpark/carp"
"HarmonicLabs/plu-ts" -> "input-output-hk/mithril"
"HarmonicLabs/plu-ts" -> "tango-crypto/cardano-wallet-js"
"IntersectMBO/plutus-apps" -> "input-output-hk/plutus-starter"
"IntersectMBO/plutus-apps" -> "Emurgo/cardano-serialization-lib"
"IntersectMBO/plutus-apps" -> "input-output-hk/plutus-pioneer-program"
"IntersectMBO/plutus-apps" -> "Plutonomicon/plutonomicon"
"IntersectMBO/plutus-apps" -> "spacebudz/lucid"
"IntersectMBO/plutus-apps" -> "txpipe/oura"
"IntersectMBO/plutus-apps" -> "Plutonomicon/plutarch-plutus"
"IntersectMBO/plutus-apps" -> "CardanoSolutions/ogmios"
"IntersectMBO/plutus-apps" -> "cardano-foundation/CIPs"
"IntersectMBO/plutus-apps" -> "Plutonomicon/cardano-transaction-lib"
"IntersectMBO/plutus-apps" -> "cardano-scaling/hydra"
"IntersectMBO/plutus-apps" -> "IntersectMBO/cardano-db-sync"
"IntersectMBO/plutus-apps" -> "IntersectMBO/plutus"
"IntersectMBO/plutus-apps" -> "dynamicstrategies/cardano-wallet-connector"
"IntersectMBO/plutus-apps" -> "mlabs-haskell/awesome-plutus"
"txpipe/oura" -> "txpipe/pallas"
"txpipe/oura" -> "txpipe/scrolls"
"txpipe/oura" -> "CardanoSolutions/kupo"
"txpipe/oura" -> "CardanoSolutions/ogmios"
"txpipe/oura" -> "Plutonomicon/plutonomicon"
"txpipe/oura" -> "aiken-lang/aiken"
"txpipe/oura" -> "dcSpark/carp"
"txpipe/oura" -> "Emurgo/cardano-serialization-lib"
"txpipe/oura" -> "blinklabs-io/gouroboros"
"txpipe/oura" -> "dcSpark/cardano-multiplatform-lib"
"txpipe/oura" -> "spacebudz/lucid"
"txpipe/oura" -> "OpShin/opshin"
"txpipe/oura" -> "input-output-hk/mithril"
"txpipe/oura" -> "txpipe/dolos"
"txpipe/oura" -> "HeliosLang/compiler"
"mlabs-haskell/plutip" -> "Plutonomicon/cardano-transaction-lib"
"mlabs-haskell/plutip" -> "mlabs-haskell/plutus-simple-model"
"mlabs-haskell/plutip" -> "mlabs-haskell/apropos"
"iohkedu/haskell-2020" -> "Plutonomicon/plutonomicon"
"iohkedu/haskell-2020" -> "input-output-hk/plutus-starter"
"iohkedu/haskell-2020" -> "txpipe/oura"
"iohkedu/haskell-2020" -> "renzwo/cardano-plutus-apps-install-m1"
"iohkedu/haskell-2020" -> "input-output-hk/Alonzo-testnet"
"aiken-lang/aiken" -> "spacebudz/lucid"
"aiken-lang/aiken" -> "HeliosLang/compiler"
"aiken-lang/aiken" -> "CardanoSolutions/ogmios"
"aiken-lang/aiken" -> "txpipe/oura"
"aiken-lang/aiken" -> "Emurgo/cardano-serialization-lib"
"aiken-lang/aiken" -> "txpipe/pallas"
"aiken-lang/aiken" -> "HarmonicLabs/plu-ts"
"aiken-lang/aiken" -> "MeshJS/mesh"
"aiken-lang/aiken" -> "Plutonomicon/plutonomicon"
"aiken-lang/aiken" -> "OpShin/opshin"
"aiken-lang/aiken" -> "cardano-foundation/CIPs"
"aiken-lang/aiken" -> "Python-Cardano/pycardano"
"aiken-lang/aiken" -> "butaneprotocol/blaze-cardano"
"aiken-lang/aiken" -> "CardanoSolutions/kupo"
"aiken-lang/aiken" -> "cardano-scaling/hydra"
"dQuadrant/kuber" -> "dQuadrant/cardano-marketplace"
"marlowe-lang/marlowe-cardano" -> "IntersectMBO/cardano-base"
"input-output-hk/lobster-challenge" -> "input-output-hk/plutus-starter"
"input-output-hk/lobster-challenge" -> "input-output-hk/Alonzo-testnet"
"input-output-hk/lobster-challenge" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/lobster-challenge" -> "woofpool/cardano-private-testnet-setup"
"input-output-hk/lobster-challenge" -> "adacapo21/plutusPioneerProgram"
"input-output-hk/lobster-challenge" -> "MartifyLabs/martify.contracts"
"input-output-hk/lobster-challenge" -> "CardanoSolutions/ogmios"
"input-output-hk/lobster-challenge" -> "Emurgo/Emurgo-Research" ["e"=1]
"input-output-hk/lobster-challenge" -> "Plutonomicon/plutonomicon"
"input-output-hk/lobster-challenge" -> "minswap/contracts"
"input-output-hk/mithril" -> "txpipe/pallas"
"input-output-hk/mithril" -> "txpipe/oura"
"input-output-hk/mithril" -> "dcSpark/carp"
"input-output-hk/mithril" -> "cardano-scaling/hydra"
"input-output-hk/mithril" -> "HarmonicLabs/plu-ts"
"input-output-hk/mithril" -> "Emurgo/message-signing"
"woofpool/cardano-private-testnet-setup" -> "bloxbean/yaci-devkit"
"woofpool/cardano-private-testnet-setup" -> "Liqwid-Labs/agora"
"Plutonomicon/pluto" -> "ImperatorLang/imperator"
"Plutonomicon/cardano-transaction-lib" -> "Plutonomicon/plutarch-plutus"
"Plutonomicon/cardano-transaction-lib" -> "mlabs-haskell/plutip"
"MeshJS/mesh" -> "spacebudz/lucid"
"MeshJS/mesh" -> "aiken-lang/aiken"
"MeshJS/mesh" -> "CardanoSolutions/ogmios"
"MeshJS/mesh" -> "Anastasia-Labs/lucid-evolution"
"MeshJS/mesh" -> "cardano-foundation/cardano-connect-with-wallet"
"MeshJS/mesh" -> "HeliosLang/compiler"
"MeshJS/mesh" -> "Emurgo/cardano-serialization-lib"
"MeshJS/mesh" -> "blockfrost/blockfrost-backend-ryo"
"MeshJS/mesh" -> "butaneprotocol/blaze-cardano"
"MeshJS/mesh" -> "dcSpark/cardano-multiplatform-lib"
"MeshJS/mesh" -> "CardanoSolutions/kupo"
"MeshJS/mesh" -> "HarmonicLabs/plu-ts"
"MeshJS/mesh" -> "input-output-hk/cardano-js-sdk"
"MeshJS/mesh" -> "dynamicstrategies/cardano-wallet-connector"
"MeshJS/mesh" -> "StricaHQ/typhonjs"
"blinklabs-io/gouroboros" -> "blinklabs-io/adder"
"blinklabs-io/gouroboros" -> "fivebinaries/go-cardano-serialization"
"blinklabs-io/gouroboros" -> "blinklabs-io/dingo"
"blinklabs-io/gouroboros" -> "blinklabs-io/nview"
"CardanoSolutions/kupo" -> "txpipe/pallas"
"CardanoSolutions/kupo" -> "CardanoSolutions/ogmios"
"CardanoSolutions/kupo" -> "txpipe/oura"
"CardanoSolutions/kupo" -> "blockfrost/blockfrost-backend-ryo"
"CardanoSolutions/kupo" -> "dcSpark/cardano-multiplatform-lib"
"CardanoSolutions/kupo" -> "blinklabs-io/cardano-up"
"CardanoSolutions/kupo" -> "Plutonomicon/plutarch-plutus"
"CardanoSolutions/kupo" -> "aiken-lang/stdlib"
"CardanoSolutions/kupo" -> "txpipe/scrolls"
"CardanoSolutions/kupo" -> "butaneprotocol/blaze-cardano"
"CardanoSolutions/kupo" -> "well-typed/plutonomy"
"CardanoSolutions/kupo" -> "blinklabs-io/gouroboros"
"CardanoSolutions/kupo" -> "IndigoProtocol/dexter"
"cardano-community/cncli" -> "AndrewWestberg/cncli"
"MartifyLabs/martify.contracts" -> "MartifyLabs/martify.frontend"
"MartifyLabs/martify.contracts" -> "nateshmbhat/cardano-nft-minter"
"MartifyLabs/martify.contracts" -> "dcSpark/fracada"
"MartifyLabs/martify.contracts" -> "dcSpark/cardano-multiplatform-lib"
"MartifyLabs/martify.contracts" -> "jpg-store/contract-v2"
"MartifyLabs/martify.contracts" -> "dynamicstrategies/cardano-wallet-connector"
"asnakep/poolLeaderLogs" -> "armada-alliance/cardano-node-binaries"
"Plutonomicon/plutarch-plutus" -> "Plutonomicon/cardano-transaction-lib"
"Plutonomicon/plutarch-plutus" -> "Plutonomicon/plutonomicon"
"Plutonomicon/plutarch-plutus" -> "CardanoSolutions/kupo"
"Plutonomicon/plutarch-plutus" -> "mlabs-haskell/plutip"
"Plutonomicon/plutarch-plutus" -> "well-typed/plutonomy"
"Plutonomicon/plutarch-plutus" -> "mlabs-haskell/awesome-plutus"
"Plutonomicon/plutarch-plutus" -> "HeliosLang/compiler"
"Plutonomicon/plutarch-plutus" -> "Liqwid-Labs/agora"
"Plutonomicon/plutarch-plutus" -> "mlabs-haskell/apropos"
"Plutonomicon/plutarch-plutus" -> "dcSpark/cardano-multiplatform-lib"
"Plutonomicon/plutarch-plutus" -> "Liqwid-Labs/liqwid-libs"
"Plutonomicon/plutarch-plutus" -> "geniusyield/atlas"
"Plutonomicon/plutarch-plutus" -> "perturbing/vasil-tests"
"Plutonomicon/plutarch-plutus" -> "free-honey/naumachia"
"mlabs-haskell/apropos-tx" -> "mlabs-haskell/apropos"
"mlabs-haskell/apropos" -> "mlabs-haskell/apropos-tx"
"blinklabs-io/docker-cardano-node" -> "blinklabs-io/nview"
"dcSpark/fracada" -> "input-output-hk/offchain-metadata-tools"
"Plutonomicon/plutonomicon" -> "Plutonomicon/plutarch-plutus"
"Plutonomicon/plutonomicon" -> "txpipe/oura"
"Plutonomicon/plutonomicon" -> "spacebudz/lucid"
"Plutonomicon/plutonomicon" -> "input-output-hk/plutus-starter"
"Plutonomicon/plutonomicon" -> "aiken-lang/aiken"
"Plutonomicon/plutonomicon" -> "Emurgo/cardano-serialization-lib"
"Plutonomicon/plutonomicon" -> "CardanoSolutions/kupo"
"Plutonomicon/plutonomicon" -> "CardanoSolutions/ogmios"
"Plutonomicon/plutonomicon" -> "HarmonicLabs/plu-ts"
"Plutonomicon/plutonomicon" -> "Plutonomicon/cardano-transaction-lib"
"Plutonomicon/plutonomicon" -> "aiken-lang/stdlib"
"Plutonomicon/plutonomicon" -> "dcSpark/cardano-multiplatform-lib"
"Plutonomicon/plutonomicon" -> "Liqwid-Labs/agora"
"Plutonomicon/plutonomicon" -> "cardano-scaling/hydra"
"Plutonomicon/plutonomicon" -> "HeliosLang/compiler"
"txpipe/pallas" -> "txpipe/oura"
"txpipe/pallas" -> "txpipe/scrolls"
"txpipe/pallas" -> "pragma-org/amaru"
"txpipe/pallas" -> "CardanoSolutions/kupo"
"txpipe/pallas" -> "txpipe/dolos"
"txpipe/pallas" -> "dcSpark/cardano-multiplatform-lib"
"txpipe/pallas" -> "Emurgo/cardano-serialization-lib"
"txpipe/pallas" -> "input-output-hk/mithril"
"txpipe/pallas" -> "free-honey/naumachia"
"txpipe/pallas" -> "aiken-lang/aiken"
"txpipe/pallas" -> "blinklabs-io/txtop"
"txpipe/pallas" -> "aiken-lang/stdlib"
"txpipe/pallas" -> "CardanoSolutions/ogmios"
"txpipe/pallas" -> "IntersectMBO/cardano-db-sync"
"txpipe/pallas" -> "Quantumplation/cardano-slurp"
"txpipe/scrolls" -> "txpipe/oura"
"txpipe/scrolls" -> "txpipe/pallas"
"txpipe/scrolls" -> "dcSpark/carp"
"txpipe/scrolls" -> "txpipe/awesome-starter-kits"
"txpipe/scrolls" -> "aiken-lang/stdlib"
"minswap/sdk" -> "IndigoProtocol/dexter"
"minswap/sdk" -> "blinklabs-io/adder"
"dendorferpatrick/nami-wallet-examples" -> "Felippo001/nami-wallet-api"
"dendorferpatrick/nami-wallet-examples" -> "dynamicstrategies/cardano-wallet-connector"
"ImperatorLang/imperator" -> "Plutonomicon/pluto"
"ImperatorLang/imperator" -> "KINGH242/pyogmios"
"spacebudz/nebula" -> "txpipe/dolos"
"OpShin/opshin" -> "OpShin/opshin-pioneer-program"
"OpShin/opshin" -> "Python-Cardano/pycardano"
"OpShin/opshin" -> "aiken-lang/aiken"
"OpShin/opshin" -> "txpipe/oura"
"OpShin/opshin" -> "HeliosLang/compiler"
"OpShin/opshin" -> "CardanoSolutions/kupo"
"OpShin/opshin" -> "butaneprotocol/blaze-cardano"
"OpShin/opshin" -> "spacebudz/lucid"
"OpShin/opshin" -> "Plutonomicon/plutarch-plutus"
"OpShin/opshin" -> "OpShin/opshin-starter-kit"
"OpShin/opshin" -> "blinklabs-io/txtop"
"OpShin/opshin" -> "txpipe/pallas"
"OpShin/opshin" -> "spacebudz/nebula"
"OpShin/opshin" -> "Plutonomicon/plutonomicon"
"OpShin/opshin" -> "pragma-org/amaru"
"free-honey/naumachia" -> "txpipe/plutus-starter-kit"
"IntersectMBO/cardano-haskell-packages" -> "input-output-hk/cardano-engineering-handbook"
"txpipe/plutus-starter-kit" -> "aiken-lang/stdlib"
"txpipe/plutus-starter-kit" -> "free-honey/naumachia"
"input-output-hk/haskell-course" -> "spacebudz/lucid"
"input-output-hk/haskell-course" -> "aiken-lang/aiken"
"input-output-hk/haskell-course" -> "cardano-foundation/CIPs"
"input-output-hk/haskell-course" -> "input-output-hk/plutus-pioneer-program"
"input-output-hk/haskell-course" -> "HeliosLang/compiler"
"input-output-hk/haskell-course" -> "Plutonomicon/plutarch-plutus"
"input-output-hk/haskell-course" -> "IntersectMBO/plutus-apps"
"input-output-hk/haskell-course" -> "OpShin/opshin"
"input-output-hk/haskell-course" -> "Plutonomicon/plutonomicon"
"input-output-hk/haskell-course" -> "input-output-hk/plutus-starter"
"input-output-hk/haskell-course" -> "txpipe/plutus-starter-kit"
"input-output-hk/haskell-course" -> "IntersectMBO/cardano-addresses"
"input-output-hk/haskell-course" -> "MeshJS/mesh"
"input-output-hk/haskell-course" -> "input-output-hk/cardano-documentation"
"input-output-hk/haskell-course" -> "IntersectMBO/cardano-db-sync"
"aiken-lang/stdlib" -> "txpipe/plutus-starter-kit"
"aiken-lang/stdlib" -> "txpipe/awesome-starter-kits"
"txpipe/dolos" -> "blinklabs-io/docker-cardano-node"
"txpipe/dolos" -> "txpipe/pallas"
"txpipe/dolos" -> "pragma-org/amaru"
"cardano-foundation/cardano-connect-with-wallet" -> "bloxbean/yaci-devkit"
"cardano-foundation/cardano-connect-with-wallet" -> "MeshJS/mesh"
"blockfrost/blockfrost-backend-ryo" -> "CardanoSolutions/kupo"
"IntersectMBO/formal-ledger-specifications" -> "mlabs-haskell/apropos"
"HeliosLang/compiler" -> "spacebudz/lucid"
"HeliosLang/compiler" -> "HarmonicLabs/plu-ts"
"HeliosLang/compiler" -> "aiken-lang/aiken"
"HeliosLang/compiler" -> "txpipe/scrolls"
"HeliosLang/compiler" -> "ImperatorLang/imperator"
"HeliosLang/compiler" -> "butaneprotocol/blaze-cardano"
"HeliosLang/compiler" -> "spacebudz/nebula"
"HeliosLang/compiler" -> "CardanoSolutions/kupo"
"HeliosLang/compiler" -> "free-honey/naumachia"
"HeliosLang/compiler" -> "Plutonomicon/plutarch-plutus"
"HeliosLang/compiler" -> "blinklabs-io/gouroboros"
"HeliosLang/compiler" -> "Python-Cardano/pycardano"
"HeliosLang/compiler" -> "aiken-lang/stdlib"
"HeliosLang/compiler" -> "Plutonomicon/pluto"
"HeliosLang/compiler" -> "OpShin/opshin"
"fallen-icarus/cardano-swaps" -> "IndigoProtocol/dexter"
"fallen-icarus/cardano-swaps" -> "zhekson1/CSL-DeFi-Protocols"
"fallen-icarus/cardano-swaps" -> "butaneprotocol/blaze-cardano"
"cardano-foundation/cf-ledger-sync" -> "cardano-foundation/cf-adahandle-resolver"
"bloxbean/yaci" -> "bloxbean/yaci-store"
"bloxbean/yaci-store" -> "cardano-foundation/cf-adahandle-resolver"
"bloxbean/yaci-store" -> "bloxbean/yaci"
"Quantumplation/cardano-slurp" -> "blinklabs-io/tx-submit-api"
"bloxbean/yaci-devkit" -> "aiken-lang/merkle-patricia-forestry"
"bloxbean/yaci-devkit" -> "butaneprotocol/blaze-cardano"
"OpShin/opshin-pioneer-program" -> "OpShin/opshin"
"OpShin/opshin-pioneer-program" -> "OpShin/opshin-starter-kit"
"aiken-lang/awesome-aiken" -> "aiken-lang/stdlib"
"input-output-hk/lace" -> "aiken-lang/stdlib"
"input-output-hk/lace" -> "spacebudz/nebula"
"input-output-hk/lace" -> "CardanoSolutions/kupo"
"blinklabs-io/adder" -> "blinklabs-io/gouroboros"
"blinklabs-io/adder" -> "blinklabs-io/nview"
"blinklabs-io/adder" -> "blinklabs-io/txtop"
"cardano-miners/fortuna" -> "butaneprotocol/blaze-cardano"
"blinklabs-io/txtop" -> "blinklabs-io/nview"
"blinklabs-io/txtop" -> "blinklabs-io/cardano-up"
"IndigoProtocol/dexter" -> "minswap/sdk"
"IndigoProtocol/dexter" -> "fallen-icarus/cardano-swaps"
"IndigoProtocol/dexter" -> "TwilightDuck/lp-sniper"
"IndigoProtocol/dexter" -> "micahkendall/cardano-opensource-index"
"blinklabs-io/nview" -> "blinklabs-io/dingo"
"IntersectMBO/plutus" -> "input-output-hk/plutus-pioneer-program"
"IntersectMBO/plutus" -> "input-output-hk/daedalus"
"IntersectMBO/plutus" -> "cardano-foundation/cardano-wallet"
"IntersectMBO/plutus" -> "IntersectMBO/cardano-node"
"IntersectMBO/plutus" -> "cardano-foundation/CIPs"
"IntersectMBO/plutus" -> "IntersectMBO/plutus-apps"
"IntersectMBO/plutus" -> "IntersectMBO/ouroboros-network"
"IntersectMBO/plutus" -> "input-output-hk/plutus-starter"
"IntersectMBO/plutus" -> "aiken-lang/aiken"
"IntersectMBO/plutus" -> "CardanoSolutions/ogmios"
"IntersectMBO/plutus" -> "IntersectMBO/cardano-ledger"
"IntersectMBO/plutus" -> "IntersectMBO/essential-cardano"
"IntersectMBO/plutus" -> "cardano-scaling/hydra"
"IntersectMBO/plutus" -> "spacebudz/lucid"
"IntersectMBO/plutus" -> "IntersectMBO/cardano-db-sync"
"input-output-hk/daedalus" -> "cardano-foundation/cardano-wallet"
"input-output-hk/daedalus" -> "IntersectMBO/plutus"
"input-output-hk/daedalus" -> "IntersectMBO/cardano-node"
"input-output-hk/daedalus" -> "input-output-hk/cardano-sl" ["e"=1]
"input-output-hk/daedalus" -> "input-output-hk/adrestia"
"input-output-hk/daedalus" -> "Emurgo/yoroi-frontend"
"input-output-hk/daedalus" -> "input-output-hk/jormungandr"
"input-output-hk/daedalus" -> "cardano-foundation/CIPs"
"input-output-hk/daedalus" -> "IntersectMBO/ouroboros-network"
"input-output-hk/daedalus" -> "IntersectMBO/cardano-db-sync"
"input-output-hk/daedalus" -> "IntersectMBO/cardano-ledger"
"input-output-hk/daedalus" -> "cardano-foundation/cardano-graphql"
"input-output-hk/daedalus" -> "input-output-hk/plutus-pioneer-program"
"input-output-hk/daedalus" -> "CardanoSolutions/ogmios"
"input-output-hk/daedalus" -> "gitmachtl/scripts"
"butaneprotocol/blaze-cardano" -> "Anastasia-Labs/lucid-evolution"
"butaneprotocol/blaze-cardano" -> "cardano-miners/fortuna"
"Anastasia-Labs/design-patterns" -> "Anastasia-Labs/aiken-design-patterns"
"Anastasia-Labs/aiken-design-patterns" -> "Anastasia-Labs/design-patterns"
"Anastasia-Labs/aiken-design-patterns" -> "Anastasia-Labs/lucid-evolution"
"Anastasia-Labs/lucid-evolution" -> "Anastasia-Labs/aiken-design-patterns"
"Anastasia-Labs/lucid-evolution" -> "butaneprotocol/blaze-cardano"
"pragma-org/amaru" -> "blinklabs-io/dingo"
"pragma-org/amaru" -> "HarmonicLabs/gerolamo"
"pragma-org/amaru" -> "txpipe/pallas"
"pragma-org/amaru" -> "blinklabs-io/cardano-up"
"blinklabs-io/dingo" -> "blinklabs-io/nview"
"blinklabs-io/dingo" -> "HarmonicLabs/gerolamo"
"elRaulito/eUTxO-Fundamentals-Building-Cardano-Smart-Contracts" -> "Anastasia-Labs/lucid-evolution"
"IntersectMBO/cardano-crypto" -> "input-output-hk/cardanodocs.com-archived"
"IntersectMBO/cardano-crypto" -> "input-output-hk/cardano-sl-explorer"
"aiken-lang/merkle-patricia-forestry" -> "logical-mechanism/Assist"
"aiken-lang/merkle-patricia-forestry" -> "butaneprotocol/oracles"
"HarmonicLabs/gerolamo" -> "blinklabs-io/dingo"
"input-output-hk/high-assurance-legacy" -> "input-output-hk/cardano-sl-explorer"
"input-output-hk/cardanodocs.com-archived" -> "IntersectMBO/cardano-crypto"
"input-output-hk/cardanodocs.com-archived" -> "input-output-hk/cardano-docs.iohk.io"
"input-output-hk/cardanodocs.com-archived" -> "input-output-hk/cardano-sl-explorer"
"input-output-hk/cardano-js-sdk" ["l"="-19.622,7.431"]
"Emurgo/cardano-serialization-lib" ["l"="-19.638,7.438"]
"CardanoSolutions/ogmios" ["l"="-19.651,7.428"]
"spacebudz/lucid" ["l"="-19.651,7.462"]
"MeshJS/mesh" ["l"="-19.638,7.46"]
"IntersectMBO/cardano-db-sync" ["l"="-19.645,7.4"]
"input-output-hk/nami" ["l"="-19.617,7.442"]
"CardanoSolutions/kupo" ["l"="-19.634,7.487"]
"input-output-hk/lace" ["l"="-19.628,7.517"]
"tango-crypto/cardano-wallet-js" ["l"="-19.59,7.458"]
"txpipe/oura" ["l"="-19.632,7.45"]
"dcSpark/cardano-multiplatform-lib" ["l"="-19.645,7.476"]
"cardano-foundation/cardano-connect-with-wallet" ["l"="-19.664,7.446"]
"IntersectMBO/cardano-ledger" ["l"="-19.666,7.387"]
"cardano-foundation/cardano-graphql" ["l"="-19.641,7.387"]
"miguelaeh/cardanocli-js" ["l"="-19.605,7.455"]
"cardano-foundation/cardano-wallet" ["l"="-19.664,7.372"]
"input-output-hk/daedalus" ["l"="-19.664,7.349"]
"IntersectMBO/cardano-node" ["l"="-19.631,7.366"]
"input-output-hk/adrestia" ["l"="-19.69,7.361"]
"IntersectMBO/plutus" ["l"="-19.7,7.398"]
"cardano-foundation/CIPs" ["l"="-19.652,7.414"]
"IntersectMBO/ouroboros-network" ["l"="-19.679,7.373"]
"IntersectMBO/cardano-addresses" ["l"="-19.685,7.39"]
"input-output-hk/jormungandr" ["l"="-19.631,7.332"]
"IntersectMBO/plutus-apps" ["l"="-19.676,7.439"]
"IntersectMBO/cardano-base" ["l"="-19.71,7.358"]
"input-output-hk/plutus-pioneer-program" ["l"="-19.696,7.425"]
"cardano-community/guild-operators" ["l"="-19.61,7.398"]
"input-output-hk/cardano-sl" ["l"="-20.749,7.981"]
"aiken-lang/aiken" ["l"="-19.648,7.449"]
"gitmachtl/scripts" ["l"="-19.612,7.384"]
"IntersectMBO/essential-cardano" ["l"="-19.668,7.404"]
"cardano-scaling/hydra" ["l"="-19.664,7.428"]
"Emurgo/yoroi-frontend" ["l"="-19.651,7.383"]
"Emurgo/yoroi" ["l"="-19.698,7.376"]
"vacuumlabs/adalite" ["l"="8.502,-43.978"]
"txpipe/pallas" ["l"="-19.62,7.462"]
"input-output-hk/cardano-ops" ["l"="-19.685,7.344"]
"marlowe-lang/marlowe" ["l"="-19.719,7.373"]
"input-output-hk/high-assurance-legacy" ["l"="-19.776,7.296"]
"input-output-hk/plutus-starter" ["l"="-19.695,7.448"]
"marlowe-lang/marlowe-cardano" ["l"="-19.746,7.345"]
"cardano-foundation/cardano-rosetta" ["l"="-19.675,7.334"]
"input-output-hk/mithril" ["l"="-19.668,7.459"]
"IntersectMBO/bech32" ["l"="-19.698,7.33"]
"cardano-foundation/cardano-explorer-app" ["l"="-19.654,7.335"]
"input-output-hk/cardano-rest" ["l"="-19.6,7.328"]
"input-output-hk/shelley-testnet" ["l"="-19.597,7.287"]
"Chris-Graffagnino/Jormungandr-for-Newbs" ["l"="-19.604,7.303"]
"rdlrt/Alternate-Jormungandr-Testnet" ["l"="-19.586,7.307"]
"cardano-foundation/incentivized-testnet-stakepool-registry" ["l"="-19.58,7.29"]
"input-output-hk/cardano-tutorials" ["l"="-19.611,7.351"]
"papacarp/pooltool.io" ["l"="-19.584,7.344"]
"input-output-hk/jortestkit" ["l"="-19.615,7.292"]
"Straightpool/scripts" ["l"="-19.61,7.272"]
"lovelypool/cardano_stuff" ["l"="-19.594,7.269"]
"KodexData/Casper" ["l"="-19.566,7.282"]
"input-output-hk/stakepool-management-tools" ["l"="-19.581,7.266"]
"bobdobs/cardano-scripts" ["l"="-19.578,7.276"]
"input-output-hk/cardano-byron-cli" ["l"="-19.741,7.237"]
"input-output-hk/rust-byron-cardano" ["l"="-19.741,7.271"]
"IntersectMBO/cardano-crypto" ["l"="-19.761,7.242"]
"IntersectMBO/cardano-node-tests" ["l"="-19.713,7.332"]
"IntersectMBO/cardano-haskell-packages" ["l"="-19.744,7.363"]
"input-output-hk/offchain-metadata-tools" ["l"="-19.715,7.414"]
"IntersectMBO/cardano-api" ["l"="-19.761,7.331"]
"IntersectMBO/cardano-prelude" ["l"="-19.74,7.324"]
"input-output-hk/cardano-ledger-byron" ["l"="-19.788,7.249"]
"input-output-hk/js-cardano-wasm" ["l"="-19.767,7.264"]
"input-output-hk/project-icarus" ["l"="-19.794,7.217"]
"input-output-hk/cardanodocs.com-archived" ["l"="-19.773,7.233"]
"input-output-hk/project-icarus-chrome" ["l"="-19.808,7.193"]
"input-output-hk/project-icarus-backend-service" ["l"="-19.822,7.174"]
"runtimeverification/iele-semantics" ["l"="-19.825,7.282"]
"input-output-hk/project-icarus-importer" ["l"="-19.819,7.207"]
"alessandrokonrad/Pi-Pool" ["l"="-19.574,7.422"]
"armada-alliance/master" ["l"="-19.53,7.48"]
"AndrewWestberg/cncli" ["l"="-19.583,7.373"]
"alessandrokonrad/spacebudz" ["l"="-19.556,7.493"]
"tdiesler/nessus-cardano" ["l"="-19.539,7.398"]
"IntersectMBO/cardano-transactions" ["l"="-19.766,7.382"]
"Plutonomicon/cardano-transaction-lib" ["l"="-19.702,7.483"]
"coinbase/mesh-specifications" ["l"="-19.659,7.171"]
"coinbase/mesh-cli" ["l"="-19.661,7.144"]
"coinbase/mesh-sdk-go" ["l"="-19.649,7.123"]
"coinbase/mesh-bitcoin" ["l"="-19.669,7.126"]
"coinbase/mesh-ethereum" ["l"="-19.641,7.137"]
"coinbase/mesh-geth-sdk" ["l"="-19.683,7.152"]
"input-output-hk/plutus-use-cases" ["l"="-19.749,7.384"]
"IntersectMBO/cardano-launcher" ["l"="-19.72,7.311"]
"cardano-community/cncli" ["l"="-19.567,7.383"]
"vacuumlabs/cardano-hw-cli" ["l"="-19.567,7.362"]
"txpipe/scrolls" ["l"="-19.62,7.486"]
"abracadaniel/cardano-pool-docker" ["l"="-19.593,7.407"]
"Plutonomicon/plutonomicon" ["l"="-19.669,7.47"]
"HeliosLang/compiler" ["l"="-19.645,7.491"]
"cardano-foundation/developer-portal" ["l"="-19.628,7.408"]
"IntersectMBO/cardano-coin-selection" ["l"="-19.801,7.377"]
"Emurgo/yoroi-graphql-migration-backend" ["l"="-19.649,7.289"]
"coinbase/mesh-ecosystem" ["l"="-19.629,7.109"]
"HarmonicLabs/plu-ts" ["l"="-19.635,7.473"]
"dynamicstrategies/cardano-wallet-connector" ["l"="-19.621,7.476"]
"input-output-hk/smash" ["l"="-19.692,7.303"]
"SinglePoolAlliance/Registration" ["l"="-19.553,7.324"]
"cffls/py2hs" ["l"="-19.516,7.57"]
"blockfrost/blockfrost-python" ["l"="-19.542,7.55"]
"input-output-hk/cardano-rt-view" ["l"="-19.544,7.37"]
"cardano-foundation/docs-cardano-org" ["l"="-19.693,7.227"]
"cardano-foundation/testnets-cardano-org" ["l"="-19.692,7.273"]
"cardano-community/koios-python" ["l"="-19.503,7.554"]
"input-output-hk/Alonzo-testnet" ["l"="-19.707,7.465"]
"iohkedu/haskell-2020" ["l"="-19.724,7.449"]
"mlabs-haskell/awesome-plutus" ["l"="-19.73,7.498"]
"mlabs-haskell/plutip" ["l"="-19.722,7.512"]
"txpipe/plutus-starter-kit" ["l"="-19.682,7.494"]
"woofpool/cardano-private-testnet-setup" ["l"="-19.743,7.483"]
"Liqwid-Labs/agora" ["l"="-19.712,7.495"]
"cardano-foundation/cardano-token-registry" ["l"="-19.637,7.421"]
"input-output-hk/cardano-documentation" ["l"="-19.676,7.415"]
"input-output-hk/haskell-course" ["l"="-19.685,7.462"]
"Python-Cardano/pycardano" ["l"="-19.607,7.487"]
"bloxbean/cardano-client-lib" ["l"="-19.576,7.443"]
"MartifyLabs/martify.contracts" ["l"="-19.642,7.525"]
"ActaFi/cardano-staking-smart-contract" ["l"="-19.761,7.465"]
"dQuadrant/kuber" ["l"="-19.788,7.533"]
"Plutonomicon/plutarch-plutus" ["l"="-19.689,7.505"]
"Liqwid-Labs/plutus-extra" ["l"="-19.767,7.528"]
"SundaeSwap-finance/toolkit-for-cardano" ["l"="-19.499,7.505"]
"SundaeSwap-finance/alonzo-testnet" ["l"="-19.465,7.512"]
"armada-alliance/armada-alliance" ["l"="-19.536,7.5"]
"armada-alliance/cardano-node-binaries" ["l"="-19.522,7.514"]
"blinklabs-io/txtop" ["l"="-19.566,7.514"]
"mcvetyty/automint" ["l"="-19.472,7.646"]
"nejcr/cardano-nft-maker" ["l"="-19.457,7.663"]
"blockfrost/blockfrost-js" ["l"="-19.573,7.467"]
"adosia/Heidrun" ["l"="-19.505,7.473"]
"armada-alliance/cardano-minter" ["l"="-19.588,7.5"]
"blockfrost/blockfrost-backend-ryo" ["l"="-19.603,7.501"]
"emesik/cardano-python" ["l"="-19.594,7.542"]
"nateshmbhat/cardano-nft-minter" ["l"="-19.612,7.562"]
"OpShin/opshin-pioneer-program" ["l"="-19.612,7.531"]
"OpShin/opshin" ["l"="-19.629,7.501"]
"creativequotient/automint" ["l"="-19.542,7.573"]
"ftpmorph/Cardano-NFT-Auto-Mint" ["l"="-19.516,7.602"]
"alandarev/cnft-framework" ["l"="-19.498,7.621"]
"xray-network/minterr-pwa" ["l"="-19.56,7.532"]
"dcSpark/fracada" ["l"="-19.672,7.503"]
"dendorferpatrick/nami-wallet-examples" ["l"="-19.594,7.525"]
"butaneprotocol/blaze-cardano" ["l"="-19.665,7.518"]
"aiken-lang/stdlib" ["l"="-19.649,7.511"]
"IndigoProtocol/dexter" ["l"="-19.627,7.571"]
"StricaHQ/typhonjs" ["l"="-19.595,7.473"]
"ejane24/Cardano-NFT-Auto-Mint" ["l"="-19.485,7.636"]
"asnakep/poolLeaderLogs" ["l"="-19.499,7.533"]
"blinklabs-io/nview" ["l"="-19.543,7.536"]
"blinklabs-io/dingo" ["l"="-19.547,7.524"]
"cardano-community/koios-java-client" ["l"="-19.54,7.442"]
"bloxbean/yaci" ["l"="-19.532,7.422"]
"bloxbean/yaci-store" ["l"="-19.525,7.436"]
"bloxbean/cardano-client-examples" ["l"="-19.546,7.429"]
"cardano-foundation/cf-java-rewards-calculation" ["l"="-19.533,7.453"]
"nau/scalus" ["l"="-19.502,7.436"]
"cardano-foundation/cf-adahandle-resolver" ["l"="-19.516,7.422"]
"echovl/cardano-go" ["l"="-19.552,7.595"]
"fivebinaries/go-cardano-serialization" ["l"="-19.56,7.569"]
"blinklabs-io/gouroboros" ["l"="-19.578,7.535"]
"blockfrost/blockfrost-go" ["l"="-19.54,7.626"]
"spacebudz/app" ["l"="-19.587,7.56"]
"BlakeBrown/Vendere" ["l"="-19.578,7.598"]
"mlabs-haskell/apropos" ["l"="-19.747,7.539"]
"dcSpark/carp" ["l"="-19.661,7.49"]
"Bitrue-exchange/libada-go" ["l"="-19.699,7.529"]
"Anastasia-Labs/lucid-evolution" ["l"="-19.683,7.539"]
"spacebudz/nebula" ["l"="-19.612,7.512"]
"free-honey/naumachia" ["l"="-19.661,7.504"]
"txpipe/dolos" ["l"="-19.581,7.484"]
"mlabs-haskell/plutus-simple-model" ["l"="-19.75,7.554"]
"renzwo/cardano-plutus-apps-install-m1" ["l"="-19.778,7.445"]
"dQuadrant/cardano-marketplace" ["l"="-19.812,7.556"]
"input-output-hk/lobster-challenge" ["l"="-19.719,7.479"]
"adacapo21/plutusPioneerProgram" ["l"="-19.766,7.494"]
"Emurgo/Emurgo-Research" ["l"="-3.14,19.296"]
"minswap/contracts" ["l"="-19.788,7.486"]
"Emurgo/message-signing" ["l"="-19.739,7.462"]
"bloxbean/yaci-devkit" ["l"="-19.739,7.508"]
"Plutonomicon/pluto" ["l"="-19.656,7.547"]
"ImperatorLang/imperator" ["l"="-19.642,7.557"]
"blinklabs-io/adder" ["l"="-19.566,7.554"]
"blinklabs-io/cardano-up" ["l"="-19.584,7.515"]
"well-typed/plutonomy" ["l"="-19.669,7.533"]
"MartifyLabs/martify.frontend" ["l"="-19.655,7.567"]
"jpg-store/contract-v2" ["l"="-19.641,7.578"]
"Liqwid-Labs/liqwid-libs" ["l"="-19.723,7.533"]
"geniusyield/atlas" ["l"="-19.724,7.559"]
"perturbing/vasil-tests" ["l"="-19.712,7.54"]
"mlabs-haskell/apropos-tx" ["l"="-19.767,7.554"]
"blinklabs-io/docker-cardano-node" ["l"="-19.542,7.511"]
"pragma-org/amaru" ["l"="-19.573,7.5"]
"Quantumplation/cardano-slurp" ["l"="-19.552,7.463"]
"txpipe/awesome-starter-kits" ["l"="-19.629,7.533"]
"minswap/sdk" ["l"="-19.6,7.591"]
"Felippo001/nami-wallet-api" ["l"="-19.577,7.578"]
"KINGH242/pyogmios" ["l"="-19.635,7.594"]
"OpShin/opshin-starter-kit" ["l"="-19.621,7.545"]
"input-output-hk/cardano-engineering-handbook" ["l"="-19.783,7.352"]
"IntersectMBO/formal-ledger-specifications" ["l"="-19.777,7.574"]
"fallen-icarus/cardano-swaps" ["l"="-19.654,7.592"]
"zhekson1/CSL-DeFi-Protocols" ["l"="-19.659,7.628"]
"cardano-foundation/cf-ledger-sync" ["l"="-19.479,7.413"]
"blinklabs-io/tx-submit-api" ["l"="-19.518,7.462"]
"aiken-lang/merkle-patricia-forestry" ["l"="-19.81,7.526"]
"aiken-lang/awesome-aiken" ["l"="-19.675,7.577"]
"cardano-miners/fortuna" ["l"="-19.681,7.556"]
"TwilightDuck/lp-sniper" ["l"="-19.632,7.616"]
"micahkendall/cardano-opensource-index" ["l"="-19.615,7.616"]
"Anastasia-Labs/design-patterns" ["l"="-19.726,7.608"]
"Anastasia-Labs/aiken-design-patterns" ["l"="-19.71,7.581"]
"HarmonicLabs/gerolamo" ["l"="-19.533,7.524"]
"elRaulito/eUTxO-Fundamentals-Building-Cardano-Smart-Contracts" ["l"="-19.698,7.597"]
"input-output-hk/cardano-sl-explorer" ["l"="-19.781,7.261"]
"logical-mechanism/Assist" ["l"="-19.839,7.528"]
"butaneprotocol/oracles" ["l"="-19.836,7.543"]
"input-output-hk/cardano-docs.iohk.io" ["l"="-19.776,7.206"]
}