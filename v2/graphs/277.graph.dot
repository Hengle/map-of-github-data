digraph G {
"google-deepmind/pycolab" -> "google-deepmind/dnc" ["e"=1]
"facebookresearch/EGG" -> "benbogin/obverter"
"facebookresearch/EGG" -> "Near32/ReferentialGym"
"facebookresearch/EGG" -> "batra-mlp-lab/lang-emerge"
"facebookresearch/EGG" -> "jacobandreas/tre"
"facebookresearch/EGG" -> "bkgoksel/emergent-language"
"facebookresearch/EGG" -> "jayelm/emergent-generalization"
"facebookresearch/EGG" -> "brendenlake/SCAN"
"facebookresearch/EGG" -> "google-deepmind/emergent_communication_at_scale"
"facebookresearch/EGG" -> "AlexKuhnle/ShapeWorld"
"facebookresearch/EGG" -> "facebookresearch/measuring-emergent-comm"
"facebookresearch/EGG" -> "vermashresth/awesome-emergent-languages"
"facebookresearch/EGG" -> "MathieuRita/Lazimpa"
"facebookresearch/EGG" -> "nyu-dl/MultimodalGame"
"dav/word2vec" -> "yoonkim/CNN_sentence" ["e"=1]
"google/tangent" -> "tensorflow/fold" ["e"=1]
"asappresearch/sru" -> "facebookarchive/MemNN" ["e"=1]
"goodfeli/dlbook_notation" -> "google-deepmind/dnc" ["e"=1]
"kennyledet/Algorithm-Implementations" -> "facebookarchive/iTorch" ["e"=1]
"rfeinman/pyBPL" -> "rfeinman/GNS-Modeling"
"cybertronai/gradient-checkpointing" -> "google-deepmind/dnc" ["e"=1]
"cybertronai/gradient-checkpointing" -> "tensorflow/fold" ["e"=1]
"torch/torch7" -> "torch/nn" ["e"=1]
"torch/torch7" -> "facebookarchive/fbcunn" ["e"=1]
"torch/torch7" -> "facebookarchive/iTorch" ["e"=1]
"olgabot/prettyplotlib" -> "soumith/cvpr2015" ["e"=1]
"vicariousinc/science_rcn" -> "Mostafa-Samir/DNC-tensorflow" ["e"=1]
"torch/cutorch" -> "torch/cunn"
"torch/cutorch" -> "torch/nngraph"
"torch/cutorch" -> "soumith/cudnn.torch"
"torch/cutorch" -> "torch/optim"
"torch/cutorch" -> "Element-Research/dpnn"
"torch/cutorch" -> "torch/nn"
"torch/cutorch" -> "VisionLabs/torch-opencv"
"torch/cutorch" -> "soumith/imagenet-multiGPU.torch"
"torch/cutorch" -> "szagoruyko/loadcaffe"
"torch/cutorch" -> "jhjin/overfeat-torch"
"torch/cutorch" -> "torch/threads"
"torch/cutorch" -> "torch/TH"
"torch/cutorch" -> "torch/xlua"
"torch/cutorch" -> "torch/gnuplot"
"torch/cutorch" -> "soumith/inception.torch"
"dasmith/stanford-corenlp-python" -> "npow/MemNN" ["e"=1]
"goodfeli/theano_exercises" -> "YerevaNN/Dynamic-memory-networks-in-Theano" ["e"=1]
"goodfeli/theano_exercises" -> "facebookarchive/MemNN" ["e"=1]
"HazyResearch/deepdive" -> "ryankiros/skip-thoughts" ["e"=1]
"karpathy/ulogme" -> "karpathy/paper-notes" ["e"=1]
"colah/colah.github.io" -> "facebookarchive/bAbI-tasks" ["e"=1]
"danielfrg/word2vec" -> "yoonkim/CNN_sentence" ["e"=1]
"google-deepmind/torch-hdf5" -> "VisionLabs/torch-opencv"
"google-deepmind/torch-hdf5" -> "szagoruyko/loadcaffe"
"google-deepmind/torch-hdf5" -> "google-deepmind/plplot-ffi"
"google-deepmind/torch-hdf5" -> "soumith/cudnn.torch"
"google-deepmind/torch-hdf5" -> "e-lab/torch-toolbox"
"google-deepmind/torch-hdf5" -> "fmassa/optimize-net"
"google-deepmind/torch-hdf5" -> "szagoruyko/cifar.torch"
"google-deepmind/torch-hdf5" -> "torch/optim"
"google-deepmind/torch-hdf5" -> "Kaixhin/nninit"
"google-deepmind/torch-hdf5" -> "koraykv/unsup"
"google-deepmind/torch-hdf5" -> "staturecrane/dcgan_vae_torch"
"google-deepmind/torch-hdf5" -> "google-deepmind/torch-cephes"
"loudinthecloud/pytorch-ntm" -> "ixaxaar/pytorch-dnc"
"loudinthecloud/pytorch-ntm" -> "carpedm20/NTM-tensorflow"
"loudinthecloud/pytorch-ntm" -> "MarkPKCollier/NeuralTuringMachine"
"loudinthecloud/pytorch-ntm" -> "jingweiz/pytorch-dnc"
"loudinthecloud/pytorch-ntm" -> "snowkylin/ntm"
"loudinthecloud/pytorch-ntm" -> "vlgiitr/ntm-pytorch"
"loudinthecloud/pytorch-ntm" -> "google-deepmind/dnc"
"loudinthecloud/pytorch-ntm" -> "Mostafa-Samir/DNC-tensorflow"
"loudinthecloud/pytorch-ntm" -> "ikostrikov/pytorch-meta-optimizer" ["e"=1]
"loudinthecloud/pytorch-ntm" -> "kimhc6028/relational-networks" ["e"=1]
"loudinthecloud/pytorch-ntm" -> "timomernick/pytorch-capsule" ["e"=1]
"loudinthecloud/pytorch-ntm" -> "mila-iqia/welcome_tutorials" ["e"=1]
"loudinthecloud/pytorch-ntm" -> "kaishengtai/torch-ntm"
"loudinthecloud/pytorch-ntm" -> "jhjacobsen/pytorch-i-revnet" ["e"=1]
"loudinthecloud/pytorch-ntm" -> "eladhoffer/seq2seq.pytorch" ["e"=1]
"longcw/RoIAlign.pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"facebookresearch/House3D" -> "ankurhanda/gvnn" ["e"=1]
"mesnilgr/is13" -> "HadoopIt/rnn-nlu" ["e"=1]
"mesnilgr/is13" -> "gwtaylor/theano-rnn" ["e"=1]
"mesnilgr/is13" -> "yvchen/JointSLU" ["e"=1]
"mesnilgr/is13" -> "HadoopIt/joint-slu-lm" ["e"=1]
"mesnilgr/is13" -> "wojzaremba/lstm"
"mesnilgr/is13" -> "stanfordnlp/treelstm"
"mesnilgr/is13" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"mesnilgr/is13" -> "npow/MemN2N"
"mesnilgr/is13" -> "tsenghungchen/dialog-generation-paper" ["e"=1]
"mesnilgr/is13" -> "YerevaNN/Dynamic-memory-networks-in-Theano"
"mesnilgr/is13" -> "lisa-groundhog/GroundHog" ["e"=1]
"mesnilgr/is13" -> "facebookarchive/MemNN"
"mesnilgr/is13" -> "XuesongYang/end2end_dialog" ["e"=1]
"mesnilgr/is13" -> "yoonkim/lstm-char-cnn"
"mesnilgr/is13" -> "mesnilgr/iclr15" ["e"=1]
"mimno/Mallet" -> "ryankiros/skip-thoughts" ["e"=1]
"jeffdonahue/caffe" -> "skaae/recurrent-spatial-transformer-code" ["e"=1]
"dmlc/cxxnet" -> "facebookarchive/fbcunn" ["e"=1]
"aicaffeinelife/Pytorch-STN" -> "fxia22/stn.pytorch"
"aicaffeinelife/Pytorch-STN" -> "AlexHex7/Spatial-Transformer-Networks_pytorch"
"aicaffeinelife/Pytorch-STN" -> "WarBean/tps_stn_pytorch"
"aicaffeinelife/Pytorch-STN" -> "kamenbliznashki/spatial_transformer"
"gluon-api/gluon-api" -> "google-deepmind/dnc" ["e"=1]
"DongjunLee/text-cnn-tensorflow" -> "shagunsodhani/CNN-Sentence-Classifier" ["e"=1]
"keon/seq2seq" -> "harvardnlp/seq2seq-attn" ["e"=1]
"cmasch/cnn-text-classification" -> "msahamed/yelp_comments_classification_nlp"
"yu4u/convnet-drawer" -> "gwding/draw_convnet" ["e"=1]
"yu4u/convnet-drawer" -> "jettan/tikz_cnn"
"yu4u/convnet-drawer" -> "cbovar/ConvNetDraw"
"yu4u/convnet-drawer" -> "ethereon/netscope"
"yu4u/convnet-drawer" -> "leetenki/YOLOv2" ["e"=1]
"yu4u/convnet-drawer" -> "arXivTimes/arXivTimes" ["e"=1]
"brmson/yodaqa" -> "google-deepmind/rc-data" ["e"=1]
"brmson/yodaqa" -> "vinhkhuc/MemN2N-babi-python" ["e"=1]
"torch/nn" -> "Element-Research/rnn"
"torch/nn" -> "torch/optim"
"torch/nn" -> "torch/nngraph"
"torch/nn" -> "soumith/cudnn.torch"
"torch/nn" -> "twitter-archive/torch-autograd"
"torch/nn" -> "torch/cunn"
"torch/nn" -> "torch/torch7" ["e"=1]
"torch/nn" -> "torch/cutorch"
"torch/nn" -> "facebookarchive/iTorch"
"torch/nn" -> "torch/tutorials"
"torch/nn" -> "soumith/cvpr2015"
"torch/nn" -> "soumith/imagenet-multiGPU.torch"
"torch/nn" -> "facebookarchive/torchnet"
"torch/nn" -> "nicholas-leonard/dp"
"torch/nn" -> "facebookarchive/fb.resnet.torch" ["e"=1]
"google-deepmind/torch-distributions" -> "google-deepmind/torch-cephes"
"google-deepmind/torch-distributions" -> "google-deepmind/lua-pprint"
"google-deepmind/torch-distributions" -> "google-deepmind/plplot-ffi"
"google-deepmind/torch-distributions" -> "google-deepmind/torch-randomkit"
"sermanet/OverFeat" -> "ShaoqingRen/SPP_net" ["e"=1]
"sermanet/OverFeat" -> "jhjin/overfeat-torch"
"sermanet/OverFeat" -> "PrincetonVision/marvin"
"sermanet/OverFeat" -> "nagadomi/kaggle-cifar10-torch7"
"sermanet/OverFeat" -> "rbgirshick/rcnn" ["e"=1]
"sermanet/OverFeat" -> "e-lab/torch-toolbox"
"sermanet/OverFeat" -> "koraykv/unsup"
"sermanet/OverFeat" -> "gcr/torch-residual-networks"
"sermanet/OverFeat" -> "google/multibox" ["e"=1]
"sermanet/OverFeat" -> "uoguelph-mlrg/theano_alexnet" ["e"=1]
"sermanet/OverFeat" -> "sklearn-theano/sklearn-theano" ["e"=1]
"sermanet/OverFeat" -> "torch/cutorch"
"nicholas-leonard/dp" -> "Element-Research/dpnn"
"nicholas-leonard/dp" -> "Element-Research/rnn"
"nicholas-leonard/dp" -> "torch/tutorials"
"nicholas-leonard/dp" -> "torch/demos"
"nicholas-leonard/dp" -> "koraykv/unsup"
"nicholas-leonard/dp" -> "facebookarchive/fblualib"
"nicholas-leonard/dp" -> "twitter-archive/torch-autograd"
"nicholas-leonard/dp" -> "torch/optim"
"nicholas-leonard/dp" -> "kaishengtai/torch-ntm"
"nicholas-leonard/dp" -> "jhjin/overfeat-torch"
"nicholas-leonard/dp" -> "soumith/net2net.torch"
"nicholas-leonard/dp" -> "Moodstocks/gtsrb.torch"
"nicholas-leonard/dp" -> "wojciechz/learning_to_execute"
"nicholas-leonard/dp" -> "torch/nngraph"
"nicholas-leonard/dp" -> "torch/nn"
"tmulc18/Distributed-TensorFlow-Guide" -> "wookayin/tensorflow-talk-debugging" ["e"=1]
"davidadamojr/TextRank" -> "carpedm20/neural-summary-tensorflow" ["e"=1]
"kristjankorjus/Replicating-DeepMind" -> "shawntan/neural-turing-machines" ["e"=1]
"kristjankorjus/Replicating-DeepMind" -> "soumith/deepmind-atari" ["e"=1]
"prisma-ai/torch2coreml" -> "clementfarabet/torch-ios" ["e"=1]
"torch/qtlua" -> "lqt5/lqt"
"torch/qtlua" -> "torch/tds"
"torch/qtlua" -> "tdzl2003/luaqt"
"torch/qtlua" -> "torch/gnuplot"
"yaserkl/RLSeq2Seq" -> "rizar/actor-critic-public" ["e"=1]
"geniusai-research/Text-Classification" -> "bhaveshoswal/CNN-text-classification-keras"
"geniusai-research/Text-Classification" -> "cmasch/cnn-text-classification"
"geniusai-research/Text-Classification" -> "davidsbatista/ConvNets-for-Sentence-Classification"
"geniusai-research/Text-Classification" -> "vivianLL/textClassification_Keras"
"yell/boltzmann-machines" -> "ofirnachum/tree_rnn" ["e"=1]
"cheind/py-thin-plate-spline" -> "iwyoo/tf_ThinPlateSpline"
"cheind/py-thin-plate-spline" -> "WarBean/tps_stn_pytorch"
"cheind/py-thin-plate-spline" -> "iwyoo/TPS_STN-tensorflow"
"chaitjo/character-level-cnn" -> "mhjabreel/CharCnn_Keras"
"ignacio-rocco/cnngeometric_pytorch" -> "chenhsuanlin/inverse-compositional-STN" ["e"=1]
"ignacio-rocco/cnngeometric_pytorch" -> "WarBean/tps_stn_pytorch" ["e"=1]
"WarBean/tps_stn_pytorch" -> "fxia22/stn.pytorch"
"WarBean/tps_stn_pytorch" -> "kevinzakka/spatial-transformer-network"
"WarBean/tps_stn_pytorch" -> "chenhsuanlin/inverse-compositional-STN"
"WarBean/tps_stn_pytorch" -> "aicaffeinelife/Pytorch-STN"
"WarBean/tps_stn_pytorch" -> "ayumiymk/aster.pytorch" ["e"=1]
"WarBean/tps_stn_pytorch" -> "cheind/py-thin-plate-spline"
"WarBean/tps_stn_pytorch" -> "Canjie-Luo/MORAN_v2" ["e"=1]
"WarBean/tps_stn_pytorch" -> "bgshih/aster" ["e"=1]
"WarBean/tps_stn_pytorch" -> "ankush-me/SynthText" ["e"=1]
"WarBean/tps_stn_pytorch" -> "summerlvsong/Aggregation-Cross-Entropy" ["e"=1]
"WarBean/tps_stn_pytorch" -> "SeanNaren/warp-ctc" ["e"=1]
"WarBean/tps_stn_pytorch" -> "oeway/pytorch-deform-conv" ["e"=1]
"WarBean/tps_stn_pytorch" -> "chengdazhi/Deformable-Convolution-V2-PyTorch" ["e"=1]
"WarBean/tps_stn_pytorch" -> "daviddao/spatial-transformer-tensorflow"
"WarBean/tps_stn_pytorch" -> "ignacio-rocco/cnngeometric_pytorch" ["e"=1]
"salesforce/pytorch-qrnn" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"kevinzakka/recurrent-visual-attention" -> "fxia22/stn.pytorch" ["e"=1]
"kevinzakka/recurrent-visual-attention" -> "facebookarchive/MIXER" ["e"=1]
"vadimkantorov/caffemodel2pytorch" -> "ruotianluo/pytorch-resnet" ["e"=1]
"Yishun99/KB-QA" -> "geofftong/NJU_KBQA" ["e"=1]
"ixaxaar/pytorch-dnc" -> "jingweiz/pytorch-dnc"
"ixaxaar/pytorch-dnc" -> "loudinthecloud/pytorch-ntm"
"ixaxaar/pytorch-dnc" -> "google-deepmind/dnc"
"ixaxaar/pytorch-dnc" -> "JoergFranke/ADNC"
"ixaxaar/pytorch-dnc" -> "ypxie/pytorch-NeuCom"
"ixaxaar/pytorch-dnc" -> "Mostafa-Samir/DNC-tensorflow"
"torch/cunn" -> "torch/cutorch"
"torch/cunn" -> "torch/nngraph"
"torch/cunn" -> "torch/optim"
"torch/cunn" -> "soumith/cudnn.torch"
"torch/cunn" -> "torch/nn"
"torch/cunn" -> "Element-Research/dpnn"
"hindupuravinash/nips2017" -> "jimfleming/recurrent-entity-networks" ["e"=1]
"y0ast/VAE-Torch" -> "skaae/torch-gan"
"y0ast/VAE-Torch" -> "y0ast/Variational-Autoencoder" ["e"=1]
"y0ast/VAE-Torch" -> "vivanov879/draw"
"y0ast/VAE-Torch" -> "Kaixhin/Autoencoders"
"y0ast/VAE-Torch" -> "Element-Research/dpnn"
"y0ast/VAE-Torch" -> "twitter-archive/torch-autograd"
"y0ast/VAE-Torch" -> "iassael/torch-bnlstm"
"y0ast/VAE-Torch" -> "fmassa/optimize-net"
"y0ast/VAE-Torch" -> "RuiShu/cvae" ["e"=1]
"y0ast/VAE-Torch" -> "Kaixhin/nninit"
"y0ast/VAE-Torch" -> "Element-Research/rnn"
"y0ast/VAE-Torch" -> "y0ast/VAE-TensorFlow" ["e"=1]
"y0ast/VAE-Torch" -> "eladhoffer/ImageNet-Training"
"y0ast/VAE-Torch" -> "coreylynch/grid-lstm"
"y0ast/VAE-Torch" -> "willwhitney/dc-ign"
"soskek/bookcorpus" -> "ciprian-chelba/1-billion-word-language-modeling-benchmark" ["e"=1]
"for-ai/CipherGAN" -> "for-ai/cloud"
"MarkPKCollier/NeuralTuringMachine" -> "loudinthecloud/pytorch-ntm"
"MarkPKCollier/NeuralTuringMachine" -> "snowkylin/ntm"
"MarkPKCollier/NeuralTuringMachine" -> "google-deepmind/dnc"
"MarkPKCollier/NeuralTuringMachine" -> "carpedm20/NTM-tensorflow"
"MarkPKCollier/NeuralTuringMachine" -> "jingweiz/pytorch-dnc"
"MarkPKCollier/NeuralTuringMachine" -> "junhyukoh/self-imitation-learning" ["e"=1]
"MarkPKCollier/NeuralTuringMachine" -> "ixaxaar/pytorch-dnc"
"MarkPKCollier/NeuralTuringMachine" -> "JoergFranke/ADNC"
"MarkPKCollier/NeuralTuringMachine" -> "crazydonkey200/neural-symbolic-machines" ["e"=1]
"rdspring1/PyTorch_GBW_LM" -> "leimao/Sampled-Softmax-PyTorch"
"leimao/Sampled-Softmax-PyTorch" -> "rdspring1/PyTorch_GBW_LM"
"torch/gnuplot" -> "torch/cwrap"
"torch/gnuplot" -> "torch/rocks"
"for-ai/cloud" -> "for-ai/ACT"
"chenhsuanlin/spatial-transformer-GAN" -> "chenhsuanlin/inverse-compositional-STN" ["e"=1]
"mila-iqia/babyai" -> "LauraRuis/groundedSCAN" ["e"=1]
"vlgiitr/dmn-plus" -> "dandelin/Dynamic-memory-networks-plus-Pytorch"
"vlgiitr/dmn-plus" -> "hardik2396/Pyramidnet" ["e"=1]
"vlgiitr/dmn-plus" -> "vlgiitr/ntm-pytorch"
"torch/threads" -> "torch/trepl"
"torch/threads" -> "torch/optim"
"torch/threads" -> "Neopallium/lua-llthreads" ["e"=1]
"torch/threads" -> "torch/argcheck"
"torch/threads" -> "twitter-archive/torch-ipc"
"torch/threads" -> "bshillingford/fbdebugger-minimal"
"DongjunLee/transformer-tensorflow" -> "tobyyouup/conv_seq2seq" ["e"=1]
"y0ast/Variational-Autoencoder" -> "y0ast/VAE-Torch" ["e"=1]
"LinZichuan/emdqn" -> "EndingCredits/Neural-Episodic-Control"
"LinZichuan/emdqn" -> "astier/model-free-episodic-control"
"Nana0606/autoencoder" -> "Kaixhin/Autoencoders" ["e"=1]
"for-ai/rl" -> "for-ai/ACT"
"for-ai/rl" -> "for-ai/cloud"
"tensorflow/lattice" -> "tensorflow/fold"
"torch/image" -> "torch/optim"
"torch/image" -> "torch/nngraph"
"torch/image" -> "soumith/cudnn.torch"
"torch/image" -> "torch/paths"
"torch/image" -> "torch/gnuplot"
"torch/image" -> "torch/cutorch"
"brendenlake/SCAN" -> "jacobandreas/tre"
"brendenlake/SCAN" -> "najoungkim/COGS"
"brendenlake/SCAN" -> "LauraRuis/groundedSCAN"
"brendenlake/SCAN" -> "facebookresearch/EGG"
"brendenlake/SCAN" -> "jacobandreas/geca"
"brendenlake/SCAN" -> "mtensor/rulesynthesis"
"brendenlake/SCAN" -> "i-machine-think/am-i-compositional"
"brendenlake/SCAN" -> "facebookresearch/meta_seq2seq"
"brendenlake/SCAN" -> "LauraRuis/multimodal_seq2seq_gSCAN"
"raghakot/keras-text" -> "bhaveshoswal/CNN-text-classification-keras"
"raghakot/keras-text" -> "alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras"
"raghakot/keras-text" -> "Separius/BERT-keras" ["e"=1]
"raghakot/keras-text" -> "richliao/textClassifier" ["e"=1]
"raghakot/keras-text" -> "Hironsan/anago" ["e"=1]
"raghakot/keras-text" -> "ShawnyXiao/TextClassification-Keras" ["e"=1]
"geofftong/NJU_KBQA" -> "xesdiny/KBQA"
"quyingqi/kbqa-ar-smcnn" -> "dapurv5/neural_kbqa" ["e"=1]
"clementfarabet/async" -> "benglard/waffle"
"apeterswu/RL4NMT" -> "rizar/actor-critic-public" ["e"=1]
"facebookresearch/fruit-tools-game" -> "facebookresearch/brica"
"bkgoksel/emergent-language" -> "nyu-dl/MultimodalGame"
"bkgoksel/emergent-language" -> "facebookresearch/measuring-emergent-comm"
"torch/optim" -> "torch/nngraph"
"torch/optim" -> "torch/image"
"torch/optim" -> "torch/gnuplot"
"torch/optim" -> "torch/cutorch"
"torch/optim" -> "torch/nn"
"torch/optim" -> "Element-Research/dpnn"
"torch/optim" -> "soumith/cudnn.torch"
"torch/optim" -> "torch/cunn"
"torch/optim" -> "torch/xlua"
"torch/optim" -> "twitter-archive/torch-autograd"
"torch/optim" -> "facebookarchive/torch-rnnlib"
"torch/optim" -> "Element-Research/rnn"
"torch/optim" -> "torch/demos"
"torch/optim" -> "torch/trepl"
"torch/optim" -> "torch/graph"
"pengshuang/CNN-Seq2Seq" -> "soskek/convolutional_seq2seq"
"DaveDubUK/hifi-pfnn" -> "google-deepmind/torch-oocairo"
"for-ai/Targeted-Dropout" -> "for-ai/cloud"
"for-ai/Targeted-Dropout" -> "for-ai/rl"
"for-ai/Targeted-Dropout" -> "for-ai/CipherGAN"
"jiyfeng/DPLP" -> "jiweil/RST_Discourse_Parsing" ["e"=1]
"torch/trepl" -> "torch/graph"
"lc222/key-value-MemNN" -> "siyuanzhao/key-value-memory-networks"
"google-deepmind/torch-randomkit" -> "google-deepmind/torch-cephes"
"sixin-zh/mpiT" -> "shanlior/Async-EASGD"
"sixin-zh/mpiT" -> "jzrake/lua-mpi"
"clementfarabet/manifold" -> "Element-Research/dpnn"
"clementfarabet/manifold" -> "Aysegul/torch-visbox"
"clementfarabet/manifold" -> "andreaskoepf/faster-rcnn.torch"
"clementfarabet/manifold" -> "Kaixhin/nninit"
"clementfarabet/manifold" -> "clementfarabet/lua---nnx"
"clementfarabet/manifold" -> "eladhoffer/ImageNet-Training"
"AlexHex7/Spatial-Transformer-Networks_pytorch" -> "aicaffeinelife/Pytorch-STN"
"jacobandreas/tre" -> "benbogin/obverter"
"jacobandreas/tre" -> "facebookresearch/fruit-tools-game"
"jacobandreas/tre" -> "Joshua-Ren/Neural_Iterated_Learning"
"jacobandreas/tre" -> "jayelm/emergent-generalization"
"benbogin/obverter" -> "Joshua-Ren/Neural_Iterated_Learning"
"jojonki/MemoryNetworks" -> "nmhkahn/MemN2N-pytorch"
"jojonki/MemoryNetworks" -> "zshihang/MemN2N"
"zshihang/MemN2N" -> "sandrobarna/pytorch_memn2n"
"xesdiny/KBQA" -> "geofftong/NJU_KBQA"
"xesdiny/KBQA" -> "cjfcsjt/QA-matching"
"torch/xlua" -> "torch/rocks"
"torch/xlua" -> "torch/paths"
"google-deepmind/torch-dokx" -> "google-deepmind/torch-oocairo"
"yangperasd/gated_cnn" -> "coosh-ed/Gated-CNN-s-Using-Keras"
"google-deepmind/torch-totem" -> "google-deepmind/torch-oocairo"
"google-deepmind/torch-cephes" -> "google-deepmind/lua-pprint"
"google-deepmind/torch-cephes" -> "google-deepmind/torch-randomkit"
"google-deepmind/plplot-ffi" -> "google-deepmind/lua-pprint"
"commonsense/conceptnet5" -> "ryankiros/skip-thoughts" ["e"=1]
"karpathy/neuraltalk" -> "ryankiros/neural-storyteller" ["e"=1]
"karpathy/neuraltalk" -> "facebookarchive/MemNN" ["e"=1]
"karpathy/neuraltalk" -> "ryankiros/skip-thoughts" ["e"=1]
"karpathy/neuraltalk" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"NervanaSystems/neon" -> "facebookarchive/fbcunn" ["e"=1]
"soumith/convnet-benchmarks" -> "DeepMark/deepmark" ["e"=1]
"soumith/convnet-benchmarks" -> "facebookarchive/fbcunn" ["e"=1]
"facebookarchive/fbcunn" -> "facebookarchive/iTorch"
"facebookarchive/fbcunn" -> "facebookarchive/fbnn"
"facebookarchive/fbcunn" -> "facebookarchive/fblualib"
"facebookarchive/fbcunn" -> "facebookarchive/fbcuda"
"facebookarchive/fbcunn" -> "twitter-archive/torch-autograd"
"facebookarchive/fbcunn" -> "Element-Research/rnn"
"facebookarchive/fbcunn" -> "dmlc/cxxnet" ["e"=1]
"facebookarchive/fbcunn" -> "zhangxiangxiao/Crepe"
"facebookarchive/fbcunn" -> "wojzaremba/lstm"
"facebookarchive/fbcunn" -> "torch/nn"
"facebookarchive/fbcunn" -> "soumith/convnet-benchmarks" ["e"=1]
"facebookarchive/fbcunn" -> "dmlc/minerva" ["e"=1]
"facebookarchive/fbcunn" -> "soumith/cudnn.torch"
"facebookarchive/fbcunn" -> "NervanaSystems/neon" ["e"=1]
"facebookarchive/fbcunn" -> "torch/torch7" ["e"=1]
"probmods/webppl" -> "dritchie/adnn" ["e"=1]
"oxford-cs-ml-2015/practical1" -> "oxford-cs-ml-2015/practical5"
"oxford-cs-ml-2015/practical1" -> "oxford-cs-ml-2015/practical4"
"oxford-cs-ml-2015/practical1" -> "oxford-cs-ml-2015/practical2"
"oxford-cs-ml-2015/practical1" -> "oxford-cs-ml-2015/practical3"
"oxford-cs-ml-2015/practical1" -> "oxford-cs-ml-2015/practical6"
"szagoruyko/loadcaffe" -> "soumith/imagenet-multiGPU.torch"
"szagoruyko/loadcaffe" -> "soumith/cudnn.torch"
"szagoruyko/loadcaffe" -> "e-lab/torch-toolbox"
"szagoruyko/loadcaffe" -> "carpedm20/awesome-torch"
"szagoruyko/loadcaffe" -> "twitter-archive/torch-autograd"
"szagoruyko/loadcaffe" -> "Element-Research/dpnn"
"szagoruyko/loadcaffe" -> "szym/display"
"szagoruyko/loadcaffe" -> "Moodstocks/inception-v3.torch"
"szagoruyko/loadcaffe" -> "qassemoquab/stnbhwd"
"szagoruyko/loadcaffe" -> "fmassa/optimize-net"
"szagoruyko/loadcaffe" -> "szagoruyko/torch-caffe-binding"
"szagoruyko/loadcaffe" -> "google-deepmind/torch-hdf5"
"szagoruyko/loadcaffe" -> "torch/cutorch"
"szagoruyko/loadcaffe" -> "VisionLabs/torch-opencv"
"szagoruyko/loadcaffe" -> "Moodstocks/gtsrb.torch"
"szagoruyko/torch-caffe-binding" -> "nhynes/caffegraph"
"facebookarchive/fblualib" -> "facebookarchive/fbnn"
"facebookarchive/fblualib" -> "facebookarchive/fbcunn"
"facebookarchive/fblualib" -> "facebookarchive/fbcuda"
"facebookarchive/fblualib" -> "facebookarchive/iTorch"
"facebookarchive/fblualib" -> "twitter-archive/torch-autograd"
"facebookarchive/fblualib" -> "Element-Research/rnn"
"facebookarchive/fblualib" -> "nicholas-leonard/dp"
"facebookarchive/fblualib" -> "yueatsprograms/Stochastic_Depth"
"facebookarchive/fblualib" -> "Element-Research/dpnn"
"facebookarchive/fblualib" -> "kaishengtai/torch-ntm"
"facebookarchive/fblualib" -> "torch/tutorials"
"facebookarchive/fblualib" -> "wojzaremba/lstm"
"facebookarchive/fblualib" -> "torch/demos"
"facebookarchive/fblualib" -> "szagoruyko/loadcaffe"
"facebookarchive/fblualib" -> "twitter-archive/torch-twrl"
"maciejkula/glove-python" -> "ryankiros/skip-thoughts" ["e"=1]
"maciejkula/glove-python" -> "harvardnlp/seq2seq-attn" ["e"=1]
"maciejkula/glove-python" -> "yoonkim/CNN_sentence" ["e"=1]
"maciejkula/glove-python" -> "alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" ["e"=1]
"maciejkula/glove-python" -> "stanfordnlp/treelstm" ["e"=1]
"karpathy/recurrentjs" -> "kaishengtai/torch-ntm" ["e"=1]
"karpathy/recurrentjs" -> "wojciechz/learning_to_execute" ["e"=1]
"karpathy/recurrentjs" -> "Element-Research/rnn" ["e"=1]
"lisa-groundhog/GroundHog" -> "harvardnlp/seq2seq-attn" ["e"=1]
"lisa-groundhog/GroundHog" -> "stanfordnlp/treelstm" ["e"=1]
"lisa-groundhog/GroundHog" -> "wojzaremba/lstm" ["e"=1]
"lisa-groundhog/GroundHog" -> "yoonkim/lstm-char-cnn" ["e"=1]
"yoonkim/CNN_sentence" -> "dennybritz/cnn-text-classification-tf" ["e"=1]
"yoonkim/CNN_sentence" -> "harvardnlp/sent-conv-torch"
"yoonkim/CNN_sentence" -> "alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras"
"yoonkim/CNN_sentence" -> "Shawn1993/cnn-text-classification-pytorch" ["e"=1]
"yoonkim/CNN_sentence" -> "yoonkim/lstm-char-cnn"
"yoonkim/CNN_sentence" -> "brightmart/text_classification" ["e"=1]
"yoonkim/CNN_sentence" -> "ryankiros/skip-thoughts"
"yoonkim/CNN_sentence" -> "zhangxiangxiao/Crepe"
"yoonkim/CNN_sentence" -> "harvardnlp/seq2seq-attn"
"yoonkim/CNN_sentence" -> "farizrahman4u/seq2seq" ["e"=1]
"yoonkim/CNN_sentence" -> "richliao/textClassifier" ["e"=1]
"yoonkim/CNN_sentence" -> "facebookarchive/MemNN"
"yoonkim/CNN_sentence" -> "klb3713/sentence2vec" ["e"=1]
"yoonkim/CNN_sentence" -> "facebookresearch/InferSent" ["e"=1]
"yoonkim/CNN_sentence" -> "dennybritz/deeplearning-papernotes" ["e"=1]
"nagadomi/kaggle-cifar10-torch7" -> "szagoruyko/cifar.torch"
"nagadomi/kaggle-cifar10-torch7" -> "soumith/imagenet-multiGPU.torch"
"nagadomi/kaggle-cifar10-torch7" -> "Moodstocks/gtsrb.torch"
"nagadomi/kaggle-cifar10-torch7" -> "eladhoffer/ImageNet-Training"
"facebookarchive/fbcuda" -> "facebookarchive/fbnn"
"facebookarchive/fbcuda" -> "facebookarchive/fblualib"
"facebookarchive/fbcuda" -> "facebookarchive/fbcunn"
"facebookarchive/fbcuda" -> "facebookarchive/fbtorch"
"facebookarchive/fbcuda" -> "facebookarchive/iTorch"
"spragunr/deep_q_rl" -> "shawntan/neural-turing-machines" ["e"=1]
"dpkingma/nips14-ssl" -> "y0ast/VAE-Torch" ["e"=1]
"JonathanRaiman/theano_lstm" -> "shawntan/neural-turing-machines" ["e"=1]
"JonathanRaiman/theano_lstm" -> "wojciechz/learning_to_execute" ["e"=1]
"JonathanRaiman/theano_lstm" -> "wojzaremba/lstm" ["e"=1]
"JonathanRaiman/theano_lstm" -> "facebookarchive/Stack-RNN" ["e"=1]
"vlgiitr/papers_we_read" -> "vlgiitr/dmn-plus" ["e"=1]
"facebookarchive/iTorch" -> "facebookarchive/fbcunn"
"facebookarchive/iTorch" -> "facebookarchive/fblualib"
"facebookarchive/iTorch" -> "Element-Research/rnn"
"facebookarchive/iTorch" -> "facebookarchive/fbnn"
"facebookarchive/iTorch" -> "twitter-archive/torch-autograd"
"facebookarchive/iTorch" -> "soumith/cvpr2015"
"facebookarchive/iTorch" -> "torch/nn"
"facebookarchive/iTorch" -> "torch/nngraph"
"facebookarchive/iTorch" -> "wojzaremba/lstm"
"facebookarchive/iTorch" -> "facebookarchive/fbcuda"
"facebookarchive/iTorch" -> "torch/tutorials"
"facebookarchive/iTorch" -> "nicholas-leonard/dp"
"facebookarchive/iTorch" -> "carpedm20/awesome-torch"
"facebookarchive/iTorch" -> "torch/torch7" ["e"=1]
"facebookarchive/iTorch" -> "wojciechz/learning_to_execute"
"IDSIA/brainstorm" -> "twitter-archive/torch-autograd" ["e"=1]
"IDSIA/brainstorm" -> "google-deepmind/rc-data" ["e"=1]
"IDSIA/brainstorm" -> "Element-Research/rnn" ["e"=1]
"szym/display" -> "Kaixhin/nninit"
"szym/display" -> "szagoruyko/loadcaffe"
"szym/display" -> "e-lab/torch-toolbox"
"szym/display" -> "Moodstocks/inception-v3.torch"
"szym/display" -> "Atcold/torch-Developer-Guide"
"szym/display" -> "willwhitney/understanding-visual-concepts"
"szym/display" -> "benglard/waffle"
"szym/display" -> "gpleiss/nnlr"
"szym/display" -> "Element-Research/dpnn"
"szym/display" -> "fmassa/optimize-net"
"julrog/nn_vis" -> "cbovar/ConvNetDraw" ["e"=1]
"IndicoDataSolutions/Passage" -> "zhangxiangxiao/Crepe" ["e"=1]
"IndicoDataSolutions/Passage" -> "shawntan/neural-turing-machines" ["e"=1]
"IndicoDataSolutions/Passage" -> "npow/MemNN" ["e"=1]
"3Top/word2vec-api" -> "yoonkim/CNN_sentence" ["e"=1]
"3Top/word2vec-api" -> "ryankiros/skip-thoughts" ["e"=1]
"3Top/word2vec-api" -> "facebookarchive/MemNN" ["e"=1]
"torch/demos" -> "torch/tutorials"
"torch/demos" -> "nicholas-leonard/dp"
"torch/demos" -> "Element-Research/rnn"
"torch/demos" -> "torch/optim"
"torch/demos" -> "soumith/cvpr2015"
"torch/demos" -> "wojciechz/learning_to_execute"
"torch/demos" -> "kaishengtai/torch-ntm"
"torch/demos" -> "wojzaremba/lstm"
"torch/demos" -> "koraykv/unsup"
"torch/demos" -> "carpedm20/awesome-torch"
"torch/demos" -> "soumith/imagenet-multiGPU.torch"
"torch/demos" -> "facebookarchive/fblualib"
"torch/demos" -> "torch/nn"
"torch/demos" -> "torch/cunn"
"torch/demos" -> "clementfarabet/ipam-tutorials"
"e-lab/torch-toolbox" -> "Kaixhin/nninit"
"e-lab/torch-toolbox" -> "iassael/torch-bnlstm"
"e-lab/torch-toolbox" -> "Element-Research/dpnn"
"e-lab/torch-toolbox" -> "fmassa/optimize-net"
"e-lab/torch-toolbox" -> "andreaskoepf/faster-rcnn.torch"
"e-lab/torch-toolbox" -> "Moodstocks/gtsrb.torch"
"e-lab/torch-toolbox" -> "e-lab/Torch7-profiling"
"e-lab/torch-toolbox" -> "szagoruyko/loadcaffe"
"e-lab/torch-toolbox" -> "Atcold/torch-Developer-Guide"
"e-lab/torch-toolbox" -> "vivanov879/draw"
"e-lab/torch-toolbox" -> "soumith/imagenet-multiGPU.torch"
"e-lab/torch-toolbox" -> "cvondrick/torch-ffmpeg"
"e-lab/torch-toolbox" -> "twitter-archive/torch-autograd"
"e-lab/torch-toolbox" -> "DeepMark/deepmark"
"e-lab/torch-toolbox" -> "szym/display"
"Atcold/torch-Developer-Guide" -> "e-lab/Torch7-profiling"
"ShaoqingRen/SPP_net" -> "sermanet/OverFeat" ["e"=1]
"pannous/caffe-speech-recognition" -> "SeanNaren/deepspeech.torch" ["e"=1]
"soumith/cudnn.torch" -> "torch/cutorch"
"soumith/cudnn.torch" -> "Element-Research/dpnn"
"soumith/cudnn.torch" -> "torch/nngraph"
"soumith/cudnn.torch" -> "soumith/imagenet-multiGPU.torch"
"soumith/cudnn.torch" -> "torch/optim"
"soumith/cudnn.torch" -> "torch/nn"
"soumith/cudnn.torch" -> "torch/cunn"
"soumith/cudnn.torch" -> "twitter-archive/torch-autograd"
"soumith/cudnn.torch" -> "fmassa/optimize-net"
"soumith/cudnn.torch" -> "szagoruyko/loadcaffe"
"soumith/cudnn.torch" -> "Element-Research/rnn"
"soumith/cudnn.torch" -> "iassael/torch-bnlstm"
"soumith/cudnn.torch" -> "facebookarchive/UETorch"
"soumith/cudnn.torch" -> "facebookarchive/torch-rnnlib"
"soumith/cudnn.torch" -> "DeepMark/deepmark"
"wojciechz/learning_to_execute" -> "wojzaremba/lstm"
"wojciechz/learning_to_execute" -> "oxford-cs-ml-2015/practical6"
"wojciechz/learning_to_execute" -> "Element-Research/rnn"
"wojciechz/learning_to_execute" -> "torch/demos"
"wojciechz/learning_to_execute" -> "twitter-archive/torch-autograd"
"wojciechz/learning_to_execute" -> "JonathanRaiman/theano_lstm" ["e"=1]
"wojciechz/learning_to_execute" -> "carpedm20/awesome-torch"
"wojciechz/learning_to_execute" -> "nicholas-leonard/dp"
"wojciechz/learning_to_execute" -> "torch/nngraph"
"wojciechz/learning_to_execute" -> "e-lab/torch-toolbox"
"wojciechz/learning_to_execute" -> "shawntan/neural-turing-machines"
"wojciechz/learning_to_execute" -> "eladhoffer/ImageNet-Training"
"wojciechz/learning_to_execute" -> "facebookarchive/iTorch"
"wojciechz/learning_to_execute" -> "johnglover/sound-rnn"
"wojciechz/learning_to_execute" -> "qassemoquab/stnbhwd"
"oarriaga/paz" -> "oarriaga/STN.keras" ["e"=1]
"klb3713/sentence2vec" -> "ryankiros/skip-thoughts" ["e"=1]
"klb3713/sentence2vec" -> "yoonkim/CNN_sentence" ["e"=1]
"szagoruyko/imagine-nn" -> "fmassa/object-detection.torch"
"szagoruyko/imagine-nn" -> "nhynes/caffegraph"
"shawntan/neural-turing-machines" -> "kaishengtai/torch-ntm"
"shawntan/neural-turing-machines" -> "fumin/ntm"
"shawntan/neural-turing-machines" -> "npow/MemNN"
"shawntan/neural-turing-machines" -> "snipsco/ntm-lasagne"
"shawntan/neural-turing-machines" -> "carpedm20/NTM-tensorflow"
"shawntan/neural-turing-machines" -> "npow/MemN2N"
"shawntan/neural-turing-machines" -> "JonathanRaiman/theano_lstm" ["e"=1]
"shawntan/neural-turing-machines" -> "jbornschein/draw" ["e"=1]
"shawntan/neural-turing-machines" -> "spragunr/deep_q_rl" ["e"=1]
"shawntan/neural-turing-machines" -> "wojzaremba/algorithm-learning"
"shawntan/neural-turing-machines" -> "thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" ["e"=1]
"shawntan/neural-turing-machines" -> "mokemokechicken/keras_npi"
"shawntan/neural-turing-machines" -> "zomux/deepy" ["e"=1]
"shawntan/neural-turing-machines" -> "wojciechz/learning_to_execute"
"shawntan/neural-turing-machines" -> "mila-iqia/blocks" ["e"=1]
"google-deepmind/xitari" -> "google-deepmind/alewrap"
"google-deepmind/xitari" -> "google-deepmind/plplot-ffi"
"sh1r0/caffe-android-lib" -> "soumith/torch-android" ["e"=1]
"sh1r0/caffe-android-lib" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"IndigoResearch/textteaser" -> "carpedm20/neural-summary-tensorflow" ["e"=1]
"LauraRuis/groundedSCAN" -> "LauraRuis/multimodal_seq2seq_gSCAN"
"uoguelph-mlrg/theano_alexnet" -> "skaae/torch-gan" ["e"=1]
"dmlc/minerva" -> "facebookarchive/fbcunn" ["e"=1]
"dmlc/minerva" -> "DeepMark/deepmark" ["e"=1]
"dmlc/minerva" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"torch/distro" -> "torch/demos"
"torch/distro" -> "torch/nngraph"
"torch/distro" -> "twitter-archive/torch-autograd"
"torch/distro" -> "torch/tutorials"
"torch/distro" -> "soumith/inception.torch"
"torch/distro" -> "eladhoffer/ImageNet-Training"
"torch/distro" -> "Element-Research/rnn"
"torch/distro" -> "szagoruyko/loadcaffe"
"torch/distro" -> "nicholas-leonard/dp"
"torch/distro" -> "soumith/imagenet-multiGPU.torch"
"torch/distro" -> "szagoruyko/imagine-nn"
"torch/distro" -> "skaae/torch-gan"
"torch/distro" -> "torch/nn"
"torch/distro" -> "torch/optim"
"torch/distro" -> "Moodstocks/inception-v3.torch"
"wendykan/DeepLearningMovies" -> "yoonkim/CNN_sentence" ["e"=1]
"wendykan/DeepLearningMovies" -> "dennybritz/rnn-tutorial-rnnlm" ["e"=1]
"ckmarkoh/AcrosticPoem" -> "fumin/ntm" ["e"=1]
"facebookarchive/fbnn" -> "facebookarchive/fbcuda"
"facebookarchive/fbnn" -> "facebookarchive/fbtorch"
"facebookarchive/fbnn" -> "facebookarchive/fblualib"
"facebookarchive/fbnn" -> "facebookarchive/fbcunn"
"facebookarchive/fbnn" -> "facebookarchive/iTorch"
"facebookarchive/fbnn" -> "Atcold/torch-TripletEmbedding"
"facebookarchive/fbnn" -> "mdenil/acdc-torch"
"facebookarchive/fbnn" -> "Element-Research/dpnn"
"jcjohnson/simple-amt" -> "tkocisky/oxnn" ["e"=1]
"jcjohnson/simple-amt" -> "dritchie/adnn" ["e"=1]
"eladhoffer/ImageNet-Training" -> "andreaskoepf/faster-rcnn.torch"
"eladhoffer/ImageNet-Training" -> "fmassa/object-detection.torch"
"eladhoffer/ImageNet-Training" -> "eladhoffer/convNet.torch"
"eladhoffer/ImageNet-Training" -> "Moodstocks/inception-v3.torch"
"mtensor/rulesynthesis" -> "rfeinman/GNS-Modeling"
"rfeinman/GNS-Modeling" -> "facebookresearch/productive_concept_learning"
"facebookarchive/thpp" -> "torch/TH"
"google-deepmind/alewrap" -> "google-deepmind/plplot-ffi"
"google-deepmind/alewrap" -> "google-deepmind/torch-totem"
"clementfarabet/lua---nnx" -> "qassemoquab/precisionrecall.torch"
"clementfarabet/lua---nnx" -> "Kaixhin/nninit"
"clementfarabet/lua---parallel" -> "twitter-archive/torch-ipc"
"backpropper/s2p" -> "Joshua-Ren/Neural_Iterated_Learning"
"Joshua-Ren/Neural_Iterated_Learning" -> "benbogin/obverter"
"karpathy/char-rnn" -> "jcjohnson/torch-rnn" ["e"=1]
"karpathy/char-rnn" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"kuz/DeepMind-Atari-Deep-Q-Learner" -> "Element-Research/rnn" ["e"=1]
"NVIDIA-developer-blog/code-samples" -> "baidu-research/persistent-rnn" ["e"=1]
"mattm/simple-neural-network" -> "dennybritz/rnn-tutorial-rnnlm" ["e"=1]
"kjw0612/awesome-rnn" -> "ryankiros/skip-thoughts" ["e"=1]
"clab/dynet" -> "tensorflow/fold" ["e"=1]
"clab/dynet" -> "ryankiros/skip-thoughts" ["e"=1]
"clab/dynet" -> "harvardnlp/seq2seq-attn" ["e"=1]
"clab/dynet" -> "facebookarchive/MemNN" ["e"=1]
"Lab41/sunny-side-up" -> "zhangxiangxiao/Crepe" ["e"=1]
"NVIDIA/caffe" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"soumith/cvpr2015" -> "torch/tutorials"
"soumith/cvpr2015" -> "torch/demos"
"soumith/cvpr2015" -> "Atcold/torch-Video-Tutorials"
"soumith/cvpr2015" -> "Element-Research/rnn"
"soumith/cvpr2015" -> "facebookarchive/iTorch"
"soumith/cvpr2015" -> "torch/nn"
"soumith/cvpr2015" -> "carpedm20/awesome-torch"
"soumith/cvpr2015" -> "soumith/imagenet-multiGPU.torch"
"soumith/cvpr2015" -> "soumith/dcgan.torch" ["e"=1]
"soumith/cvpr2015" -> "torch/torch7" ["e"=1]
"soumith/cvpr2015" -> "wojzaremba/lstm"
"soumith/cvpr2015" -> "twitter-archive/torch-autograd"
"soumith/cvpr2015" -> "facebookarchive/eyescream" ["e"=1]
"soumith/cvpr2015" -> "e-lab/torch-toolbox"
"soumith/cvpr2015" -> "nicholas-leonard/dp"
"jcjohnson/cnn-vis" -> "wojciechz/learning_to_execute" ["e"=1]
"jcjohnson/cnn-vis" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"jcjohnson/cnn-vis" -> "skaae/recurrent-spatial-transformer-code" ["e"=1]
"commonsense/conceptnet-numberbatch" -> "ryankiros/skip-thoughts" ["e"=1]
"commonsense/conceptnet-numberbatch" -> "google-deepmind/rc-data" ["e"=1]
"wojzaremba/lstm" -> "wojciechz/learning_to_execute"
"wojzaremba/lstm" -> "Element-Research/rnn"
"wojzaremba/lstm" -> "oxford-cs-ml-2015/practical6"
"wojzaremba/lstm" -> "yoonkim/lstm-char-cnn"
"wojzaremba/lstm" -> "kaishengtai/torch-ntm"
"wojzaremba/lstm" -> "facebookarchive/SCRNNs"
"wojzaremba/lstm" -> "twitter-archive/torch-autograd"
"wojzaremba/lstm" -> "torch/demos"
"wojzaremba/lstm" -> "harvardnlp/seq2seq-attn"
"wojzaremba/lstm" -> "facebookarchive/iTorch"
"wojzaremba/lstm" -> "facebookarchive/fblualib"
"wojzaremba/lstm" -> "nicholas-leonard/dp"
"wojzaremba/lstm" -> "facebookarchive/fbcunn"
"wojzaremba/lstm" -> "torch/nngraph"
"wojzaremba/lstm" -> "facebookarchive/MemNN"
"nicodjimenez/lstm" -> "HendrikStrobelt/LSTMVis" ["e"=1]
"nicodjimenez/lstm" -> "carpedm20/lstm-char-cnn-tensorflow" ["e"=1]
"nicodjimenez/lstm" -> "wojzaremba/lstm" ["e"=1]
"nicodjimenez/lstm" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"Atcold/NYU-DLSP21" -> "Atcold/torch-Video-Tutorials" ["e"=1]
"oxford-cs-ml-2015/practical2" -> "oxford-cs-ml-2015/practical3"
"oxford-cs-ml-2015/practical2" -> "oxford-cs-ml-2015/practical5"
"oxford-cs-ml-2015/practical2" -> "oxford-cs-ml-2015/practical4"
"oxford-cs-ml-2015/practical3" -> "oxford-cs-ml-2015/practical5"
"oxford-cs-ml-2015/practical3" -> "oxford-cs-ml-2015/practical4"
"oxford-cs-ml-2015/practical3" -> "oxford-cs-ml-2015/practical2"
"oxford-cs-ml-2015/practical4" -> "oxford-cs-ml-2015/practical3"
"oxford-cs-ml-2015/practical4" -> "oxford-cs-ml-2015/practical5"
"oxford-cs-ml-2015/practical4" -> "oxford-cs-ml-2015/practical2"
"oxford-cs-ml-2015/practical5" -> "oxford-cs-ml-2015/practical3"
"oxford-cs-ml-2015/practical5" -> "oxford-cs-ml-2015/practical4"
"oxford-cs-ml-2015/practical5" -> "oxford-cs-ml-2015/practical2"
"oxford-cs-ml-2015/practical6" -> "oxford-cs-ml-2015/practical4"
"oxford-cs-ml-2015/practical6" -> "oxford-cs-ml-2015/practical1"
"oxford-cs-ml-2015/practical6" -> "wojciechz/learning_to_execute"
"oxford-cs-ml-2015/practical6" -> "oxford-cs-ml-2015/practical3"
"oxford-cs-ml-2015/practical6" -> "oxford-cs-ml-2015/practical5"
"oxford-cs-ml-2015/practical6" -> "oxford-cs-ml-2015/practical2"
"oxford-cs-ml-2015/practical6" -> "wojzaremba/lstm"
"oxford-cs-ml-2015/practical6" -> "Element-Research/rnn"
"oxford-cs-ml-2015/practical6" -> "skaae/torch-gan"
"oxford-cs-ml-2015/practical6" -> "viorik/ConvLSTM"
"oxford-cs-ml-2015/practical6" -> "Moodstocks/gtsrb.torch"
"oxford-cs-ml-2015/practical6" -> "torch/demos"
"oxford-cs-ml-2015/practical6" -> "soumith/torch-signal"
"intel/idlf" -> "twitter-archive/torch-distlearn" ["e"=1]
"MattVitelli/GRUV" -> "johnglover/sound-rnn" ["e"=1]
"kaishengtai/torch-ntm" -> "shawntan/neural-turing-machines"
"kaishengtai/torch-ntm" -> "tkocisky/oxnn"
"kaishengtai/torch-ntm" -> "twitter-archive/torch-autograd"
"kaishengtai/torch-ntm" -> "fumin/ntm"
"kaishengtai/torch-ntm" -> "bshillingford/autobw.torch"
"kaishengtai/torch-ntm" -> "soumith/net2net.torch"
"kaishengtai/torch-ntm" -> "Element-Research/rnn"
"kaishengtai/torch-ntm" -> "jbornschein/draw" ["e"=1]
"kaishengtai/torch-ntm" -> "Kaixhin/nninit"
"kaishengtai/torch-ntm" -> "skaae/torch-gan"
"kaishengtai/torch-ntm" -> "Element-Research/dpnn"
"kaishengtai/torch-ntm" -> "npow/MemNN"
"kaishengtai/torch-ntm" -> "vivanov879/draw"
"kaishengtai/torch-ntm" -> "torch/demos"
"kaishengtai/torch-ntm" -> "wojzaremba/lstm"
"lipiji/App-DL" -> "google-deepmind/rc-data" ["e"=1]
"lipiji/App-DL" -> "harvardnlp/seq2seq-attn" ["e"=1]
"lipiji/App-DL" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"Element-Research/rnn" -> "twitter-archive/torch-autograd"
"Element-Research/rnn" -> "nicholas-leonard/dp"
"Element-Research/rnn" -> "Element-Research/dpnn"
"Element-Research/rnn" -> "wojzaremba/lstm"
"Element-Research/rnn" -> "torch/nn"
"Element-Research/rnn" -> "carpedm20/awesome-torch"
"Element-Research/rnn" -> "wojciechz/learning_to_execute"
"Element-Research/rnn" -> "harvardnlp/seq2seq-attn"
"Element-Research/rnn" -> "torch/demos"
"Element-Research/rnn" -> "facebookarchive/fblualib"
"Element-Research/rnn" -> "facebookarchive/MemNN"
"Element-Research/rnn" -> "kaishengtai/torch-ntm"
"Element-Research/rnn" -> "torch/optim"
"Element-Research/rnn" -> "torch/nngraph"
"Element-Research/rnn" -> "facebookarchive/iTorch"
"ethereon/netscope" -> "cbovar/ConvNetDraw"
"ethereon/netscope" -> "daijifeng001/R-FCN" ["e"=1]
"ethereon/netscope" -> "ethereon/caffe-tensorflow" ["e"=1]
"ethereon/netscope" -> "jettan/tikz_cnn"
"ethereon/netscope" -> "gwding/draw_convnet" ["e"=1]
"ethereon/netscope" -> "dgschwend/netscope" ["e"=1]
"ethereon/netscope" -> "sanghoon/pva-faster-rcnn" ["e"=1]
"ethereon/netscope" -> "forresti/SqueezeNet" ["e"=1]
"ethereon/netscope" -> "soumith/convnet-benchmarks" ["e"=1]
"ethereon/netscope" -> "ducha-aiki/caffenet-benchmark" ["e"=1]
"ethereon/netscope" -> "msracver/FCIS" ["e"=1]
"ethereon/netscope" -> "facebookarchive/fb-caffe-exts"
"ethereon/netscope" -> "soeaver/caffe-model" ["e"=1]
"ethereon/netscope" -> "shicai/MobileNet-Caffe" ["e"=1]
"ethereon/netscope" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"lvdmaaten/bhtsne" -> "gcr/torch-residual-networks" ["e"=1]
"lvdmaaten/bhtsne" -> "ethereon/netscope" ["e"=1]
"zhangxiangxiao/Crepe" -> "yoonkim/lstm-char-cnn"
"zhangxiangxiao/Crepe" -> "facebookarchive/MemNN"
"zhangxiangxiao/Crepe" -> "ryankiros/skip-thoughts"
"zhangxiangxiao/Crepe" -> "Element-Research/rnn"
"zhangxiangxiao/Crepe" -> "harvardnlp/seq2seq-attn"
"zhangxiangxiao/Crepe" -> "facebookarchive/fbcunn"
"zhangxiangxiao/Crepe" -> "google-deepmind/rc-data"
"zhangxiangxiao/Crepe" -> "wojzaremba/lstm"
"zhangxiangxiao/Crepe" -> "IndicoDataSolutions/Passage" ["e"=1]
"zhangxiangxiao/Crepe" -> "yoonkim/CNN_sentence"
"zhangxiangxiao/Crepe" -> "mhjabreel/CharCNN"
"zhangxiangxiao/Crepe" -> "kaishengtai/torch-ntm"
"zhangxiangxiao/Crepe" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"zhangxiangxiao/Crepe" -> "soumith/net2net.torch"
"zhangxiangxiao/Crepe" -> "stanfordnlp/treelstm"
"kelvinxu/arctic-captions" -> "Element-Research/rnn" ["e"=1]
"ryankiros/skip-thoughts" -> "ryankiros/neural-storyteller"
"ryankiros/skip-thoughts" -> "facebookarchive/MemNN"
"ryankiros/skip-thoughts" -> "facebookresearch/InferSent" ["e"=1]
"ryankiros/skip-thoughts" -> "harvardnlp/seq2seq-attn"
"ryankiros/skip-thoughts" -> "google-deepmind/rc-data"
"ryankiros/skip-thoughts" -> "facebookresearch/SentEval" ["e"=1]
"ryankiros/skip-thoughts" -> "stanfordnlp/treelstm"
"ryankiros/skip-thoughts" -> "zhangxiangxiao/Crepe"
"ryankiros/skip-thoughts" -> "dennybritz/deeplearning-papernotes" ["e"=1]
"ryankiros/skip-thoughts" -> "farizrahman4u/seq2seq" ["e"=1]
"ryankiros/skip-thoughts" -> "paarthneekhara/text-to-image" ["e"=1]
"ryankiros/skip-thoughts" -> "mila-iqia/blocks" ["e"=1]
"ryankiros/skip-thoughts" -> "yoonkim/lstm-char-cnn"
"ryankiros/skip-thoughts" -> "klb3713/sentence2vec" ["e"=1]
"ryankiros/skip-thoughts" -> "kjw0612/awesome-rnn" ["e"=1]
"google/mr4c" -> "facebookarchive/fbcunn" ["e"=1]
"NervanaSystems/nervanagpu" -> "DeepMark/deepmark" ["e"=1]
"NervanaSystems/nervanagpu" -> "bshillingford/autobw.torch" ["e"=1]
"Lasagne/Recipes" -> "snipsco/ntm-lasagne" ["e"=1]
"mila-iqia/summerschool2015" -> "ryankiros/layer-norm" ["e"=1]
"akrizhevsky/cuda-convnet2" -> "gcr/torch-residual-networks" ["e"=1]
"facebookarchive/eyescream" -> "skaae/torch-gan" ["e"=1]
"facebookarchive/eyescream" -> "twitter-archive/torch-autograd" ["e"=1]
"facebookarchive/eyescream" -> "y0ast/VAE-Torch" ["e"=1]
"facebookarchive/eyescream" -> "siemanko/tf-adversarial" ["e"=1]
"facebookarchive/eyescream" -> "vivanov879/draw" ["e"=1]
"Atcold/torch-TripletEmbedding" -> "skaae/torch-gan"
"Atcold/torch-TripletEmbedding" -> "iassael/torch-bnlstm"
"Atcold/torch-TripletEmbedding" -> "Aysegul/torch-visbox"
"Samsung/veles" -> "zhangxiangxiao/Crepe" ["e"=1]
"Samsung/veles" -> "facebookarchive/SCRNNs" ["e"=1]
"yandex/faster-rnnlm" -> "IntelLabs/rnnlm"
"yandex/faster-rnnlm" -> "ciprian-chelba/1-billion-word-language-modeling-benchmark"
"yandex/faster-rnnlm" -> "isi-nlp/Zoph_RNN" ["e"=1]
"yandex/faster-rnnlm" -> "yoonkim/lstm-char-cnn"
"yandex/faster-rnnlm" -> "mspandit/rnnlm"
"yandex/faster-rnnlm" -> "facebookresearch/adaptive-softmax"
"yandex/faster-rnnlm" -> "srvk/eesen" ["e"=1]
"yandex/faster-rnnlm" -> "baidu-research/persistent-rnn"
"yandex/faster-rnnlm" -> "facebookarchive/MemNN"
"yandex/faster-rnnlm" -> "harvardnlp/seq2seq-attn"
"yandex/faster-rnnlm" -> "danpovey/pocolm"
"yandex/faster-rnnlm" -> "yajiemiao/eesen" ["e"=1]
"yandex/faster-rnnlm" -> "mesnilgr/is13"
"yandex/faster-rnnlm" -> "stanfordnlp/treelstm"
"yandex/faster-rnnlm" -> "facebookarchive/SCRNNs"
"Sohl-Dickstein/Diffusion-Probabilistic-Models" -> "y0ast/VAE-Torch" ["e"=1]
"skaae/lasagne-draw" -> "skaae/recurrent-spatial-transformer-code" ["e"=1]
"facebookarchive/Stack-RNN" -> "facebookarchive/SCRNNs"
"facebookarchive/Stack-RNN" -> "facebookarchive/Conditional-character-based-RNN"
"facebookarchive/Stack-RNN" -> "wojzaremba/algorithm-learning"
"facebookarchive/Stack-RNN" -> "kaishengtai/torch-ntm"
"facebookarchive/Stack-RNN" -> "jych/nips2015_vrnn" ["e"=1]
"facebookarchive/Stack-RNN" -> "wojzaremba/lstm"
"facebookarchive/Stack-RNN" -> "Element-Research/rnn"
"facebookarchive/Stack-RNN" -> "shawntan/neural-turing-machines"
"facebookarchive/Stack-RNN" -> "JonathanRaiman/theano_lstm" ["e"=1]
"facebookarchive/Stack-RNN" -> "facebookarchive/fbcunn"
"facebookarchive/Stack-RNN" -> "fumin/ntm"
"facebookarchive/Stack-RNN" -> "facebookarchive/MIXER"
"facebookarchive/Stack-RNN" -> "zhangxiangxiao/Crepe"
"facebookarchive/Stack-RNN" -> "ilyasu123/rlntm"
"facebookarchive/Stack-RNN" -> "facebookarchive/fbtorch"
"ajtulloch/dnngraph" -> "twitter-archive/torch-autograd" ["e"=1]
"benglard/waffle" -> "clementfarabet/async"
"benglard/waffle" -> "Kaixhin/nninit"
"benglard/waffle" -> "nicholas-leonard/rnn"
"benglard/waffle" -> "VisionLabs/torch-opencv"
"bshillingford/autobw.torch" -> "soumith/eyescream"
"vivanov879/draw" -> "iassael/torch-bnlstm"
"vivanov879/draw" -> "Element-Research/dpnn"
"vivanov879/draw" -> "y0ast/VAE-Torch"
"vivanov879/draw" -> "Kaixhin/nninit"
"vivanov879/draw" -> "melgor/DRAW"
"qassemoquab/stnbhwd" -> "Moodstocks/gtsrb.torch"
"qassemoquab/stnbhwd" -> "fxia22/stn.pytorch"
"qassemoquab/stnbhwd" -> "ankurhanda/gvnn"
"qassemoquab/stnbhwd" -> "skaae/transformer_network"
"qassemoquab/stnbhwd" -> "VisionLabs/torch-opencv"
"qassemoquab/stnbhwd" -> "fmassa/optimize-net"
"qassemoquab/stnbhwd" -> "twitter-archive/torch-autograd"
"qassemoquab/stnbhwd" -> "skaae/recurrent-spatial-transformer-code"
"qassemoquab/stnbhwd" -> "Kaixhin/nninit"
"qassemoquab/stnbhwd" -> "szagoruyko/loadcaffe"
"qassemoquab/stnbhwd" -> "Element-Research/dpnn"
"qassemoquab/stnbhwd" -> "daerduoCarey/SpatialTransformerLayer" ["e"=1]
"qassemoquab/stnbhwd" -> "skaae/torch-gan"
"qassemoquab/stnbhwd" -> "chenhsuanlin/inverse-compositional-STN"
"qassemoquab/stnbhwd" -> "y0ast/VAE-Torch"
"soumith/imagenet-multiGPU.torch" -> "soumith/cudnn.torch"
"soumith/imagenet-multiGPU.torch" -> "fmassa/object-detection.torch"
"soumith/imagenet-multiGPU.torch" -> "szagoruyko/loadcaffe"
"soumith/imagenet-multiGPU.torch" -> "szagoruyko/cifar.torch"
"soumith/imagenet-multiGPU.torch" -> "eladhoffer/ImageNet-Training"
"soumith/imagenet-multiGPU.torch" -> "fmassa/optimize-net"
"soumith/imagenet-multiGPU.torch" -> "carpedm20/awesome-torch"
"soumith/imagenet-multiGPU.torch" -> "e-lab/torch-toolbox"
"soumith/imagenet-multiGPU.torch" -> "yueatsprograms/Stochastic_Depth"
"soumith/imagenet-multiGPU.torch" -> "szagoruyko/imagine-nn"
"soumith/imagenet-multiGPU.torch" -> "torch/nngraph"
"soumith/imagenet-multiGPU.torch" -> "torch/tutorials"
"soumith/imagenet-multiGPU.torch" -> "gcr/torch-residual-networks"
"soumith/imagenet-multiGPU.torch" -> "torch/cutorch"
"soumith/imagenet-multiGPU.torch" -> "Moodstocks/inception-v3.torch"
"tkocisky/oxnn" -> "facebookarchive/SCRNNs"
"tkocisky/oxnn" -> "j-wilson/bot7"
"tkocisky/oxnn" -> "twitter-archive/torch-dataset"
"tkocisky/oxnn" -> "twitter-archive/torch-ipc"
"tkocisky/oxnn" -> "iassael/torch-decomposition"
"teradeep/demo-apps" -> "mvitez/thnets"
"teradeep/demo-apps" -> "intel/idlf" ["e"=1]
"teradeep/demo-apps" -> "tkocisky/oxnn"
"teradeep/demo-apps" -> "facebookarchive/eyescream" ["e"=1]
"teradeep/demo-apps" -> "zomux/deepy" ["e"=1]
"teradeep/demo-apps" -> "Russell91/apollo" ["e"=1]
"hughperkins/cltorch" -> "tkocisky/oxnn" ["e"=1]
"yoonkim/lstm-char-cnn" -> "carpedm20/lstm-char-cnn-tensorflow"
"yoonkim/lstm-char-cnn" -> "mkroutikov/tf-lstm-char-cnn"
"yoonkim/lstm-char-cnn" -> "harvardnlp/seq2seq-attn"
"yoonkim/lstm-char-cnn" -> "zhangxiangxiao/Crepe"
"yoonkim/lstm-char-cnn" -> "Element-Research/rnn"
"yoonkim/lstm-char-cnn" -> "wojzaremba/lstm"
"yoonkim/lstm-char-cnn" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"yoonkim/lstm-char-cnn" -> "stanfordnlp/treelstm"
"yoonkim/lstm-char-cnn" -> "yoonkim/CNN_sentence"
"yoonkim/lstm-char-cnn" -> "harvardnlp/sent-conv-torch"
"yoonkim/lstm-char-cnn" -> "ryankiros/skip-thoughts"
"yoonkim/lstm-char-cnn" -> "facebookarchive/MemNN"
"yoonkim/lstm-char-cnn" -> "EdinburghNLP/nematus" ["e"=1]
"yoonkim/lstm-char-cnn" -> "yandex/faster-rnnlm"
"yoonkim/lstm-char-cnn" -> "NickShahML/tensorflow_with_latest_papers"
"nyu-dl/dl4mt-tutorial" -> "harvardnlp/seq2seq-attn" ["e"=1]
"nyu-dl/dl4mt-tutorial" -> "yoonkim/lstm-char-cnn" ["e"=1]
"CuriousAI/ladder" -> "y0ast/VAE-Torch" ["e"=1]
"idio/wiki2vec" -> "ryankiros/skip-thoughts" ["e"=1]
"idio/wiki2vec" -> "npow/MemNN" ["e"=1]
"idio/wiki2vec" -> "stanfordnlp/treelstm" ["e"=1]
"fmassa/object-detection.torch" -> "szagoruyko/imagine-nn"
"fmassa/object-detection.torch" -> "mahyarnajibi/fast-rcnn-torch"
"fmassa/object-detection.torch" -> "andreaskoepf/faster-rcnn.torch"
"fmassa/object-detection.torch" -> "eladhoffer/ImageNet-Training"
"btgraham/SparseConvNet-archived" -> "nagadomi/kaggle-cifar10-torch7" ["e"=1]
"danielrh/losslessh264" -> "facebookarchive/fbcunn" ["e"=1]
"fumin/ntm" -> "shawntan/neural-turing-machines"
"fumin/ntm" -> "kaishengtai/torch-ntm"
"fumin/ntm" -> "ckmarkoh/AcrosticPoem" ["e"=1]
"fumin/ntm" -> "jbornschein/draw" ["e"=1]
"fumin/ntm" -> "DoctorTeeth/diffmem" ["e"=1]
"fumin/ntm" -> "XingxingZhang/rnnpg" ["e"=1]
"fumin/ntm" -> "snipsco/ntm-lasagne"
"fumin/ntm" -> "gcgibson/NTM"
"fumin/ntm" -> "JanTkacik/NTM"
"fumin/ntm" -> "mokemokechicken/keras_npi"
"fumin/ntm" -> "facebookarchive/SCRNNs"
"fumin/ntm" -> "carpedm20/NTM-tensorflow"
"fumin/ntm" -> "facebookarchive/Stack-RNN"
"fumin/ntm" -> "yos1up/DNC"
"fumin/ntm" -> "thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" ["e"=1]
"zomux/deepy" -> "shawntan/neural-turing-machines" ["e"=1]
"zomux/deepy" -> "siemanko/tf-adversarial" ["e"=1]
"soumith/deepmind-atari" -> "rahular/deepmind-dqn"
"soumith/deepmind-atari" -> "bshillingford/autobw.torch"
"hardmaru/neuralslimevolley" -> "tkocisky/oxnn" ["e"=1]
"jbornschein/draw" -> "kaishengtai/torch-ntm" ["e"=1]
"jbornschein/draw" -> "skaae/torch-gan" ["e"=1]
"jbornschein/draw" -> "shawntan/neural-turing-machines" ["e"=1]
"jbornschein/draw" -> "twitter-archive/torch-autograd" ["e"=1]
"stanfordnlp/treelstm" -> "dasguptar/treelstm.pytorch" ["e"=1]
"stanfordnlp/treelstm" -> "ryankiros/skip-thoughts"
"stanfordnlp/treelstm" -> "tensorflow/fold"
"stanfordnlp/treelstm" -> "yoonkim/lstm-char-cnn"
"stanfordnlp/treelstm" -> "harvardnlp/seq2seq-attn"
"stanfordnlp/treelstm" -> "sapruash/RecursiveNN" ["e"=1]
"stanfordnlp/treelstm" -> "facebookarchive/MemNN"
"stanfordnlp/treelstm" -> "ttpro1995/TreeLSTMSentiment" ["e"=1]
"stanfordnlp/treelstm" -> "facebookarchive/NAMAS" ["e"=1]
"stanfordnlp/treelstm" -> "lisa-groundhog/GroundHog" ["e"=1]
"stanfordnlp/treelstm" -> "Element-Research/rnn"
"stanfordnlp/treelstm" -> "stanfordnlp/spinn" ["e"=1]
"stanfordnlp/treelstm" -> "zhangxiangxiao/Crepe"
"stanfordnlp/treelstm" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"stanfordnlp/treelstm" -> "ofirnachum/tree_rnn"
"mkusner/wmd" -> "ryankiros/skip-thoughts" ["e"=1]
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "rafaljozefowicz/lm"
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "yandex/faster-rnnlm"
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "okuchaiev/f-lm"
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "yoonkim/lstm-char-cnn"
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "anantzoid/Language-Modeling-GatedCNN"
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "mila-iqia/blocks-examples" ["e"=1]
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "google-deepmind/rc-data"
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "mesnilgr/is13"
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "chrisjbryant/errant" ["e"=1]
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "wojzaremba/lstm"
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "lisa-groundhog/GroundHog" ["e"=1]
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "NickShahML/tensorflow_with_latest_papers"
"ciprian-chelba/1-billion-word-language-modeling-benchmark" -> "mhjabreel/CharCNN"
"eladhoffer/TripletNet" -> "eladhoffer/ImageNet-Training" ["e"=1]
"EderSantana/seya" -> "skaae/transformer_network" ["e"=1]
"EderSantana/seya" -> "shawntan/neural-turing-machines" ["e"=1]
"szagoruyko/cifar.torch" -> "nagadomi/kaggle-cifar10-torch7"
"szagoruyko/cifar.torch" -> "soumith/imagenet-multiGPU.torch"
"szagoruyko/cifar.torch" -> "skaae/torch-gan"
"szagoruyko/cifar.torch" -> "Moodstocks/inception-v3.torch"
"szagoruyko/cifar.torch" -> "soumith/cifar.torch"
"szagoruyko/cifar.torch" -> "Moodstocks/gtsrb.torch"
"szagoruyko/cifar.torch" -> "e-lab/torch-toolbox"
"szagoruyko/cifar.torch" -> "soumith/net2net.torch"
"szagoruyko/cifar.torch" -> "gpleiss/nnlr"
"phunterlau/wangfeng-rnn" -> "facebookarchive/MemNN" ["e"=1]
"jiweil/Hierarchical-Neural-Autoencoder" -> "lipiji/hierarchical-encoder-decoder"
"jiweil/Hierarchical-Neural-Autoencoder" -> "NFSCH4/Hierarchical-Neural-Autoencoder"
"jiweil/Hierarchical-Neural-Autoencoder" -> "jiweil/Sequence-Models-on-Stanford-Treebank"
"jiweil/Hierarchical-Neural-Autoencoder" -> "carpedm20/neural-summary-tensorflow"
"jiweil/Hierarchical-Neural-Autoencoder" -> "DoctorTeeth/diffmem" ["e"=1]
"jiweil/Hierarchical-Neural-Autoencoder" -> "jiweil/mutli-sense-embedding"
"willwhitney/dc-ign" -> "bshillingford/autobw.torch"
"willwhitney/dc-ign" -> "mrkulk/Unsupervised-Capsule-Network"
"willwhitney/dc-ign" -> "twitter-archive/torch-autograd"
"willwhitney/dc-ign" -> "skaae/torch-gan"
"facebookarchive/SCRNNs" -> "tkocisky/oxnn"
"facebookarchive/SCRNNs" -> "facebookarchive/Stack-RNN"
"facebookarchive/SCRNNs" -> "bshillingford/autobw.torch"
"taku910/crfpp" -> "yandex/faster-rnnlm" ["e"=1]
"pkulchenko/wxlua" -> "torch/qtlua" ["e"=1]
"Element-Research/dpnn" -> "Element-Research/dataload"
"Element-Research/dpnn" -> "soumith/cudnn.torch"
"Element-Research/dpnn" -> "nicholas-leonard/dp"
"Element-Research/dpnn" -> "vivanov879/draw"
"Element-Research/dpnn" -> "iassael/torch-bnlstm"
"Element-Research/dpnn" -> "e-lab/torch-toolbox"
"Element-Research/dpnn" -> "fmassa/optimize-net"
"Element-Research/dpnn" -> "Element-Research/hypero"
"Element-Research/dpnn" -> "Element-Research/rnn"
"Element-Research/dpnn" -> "clementfarabet/lua---nnx"
"Element-Research/dpnn" -> "twitter-archive/torch-autograd"
"Element-Research/dpnn" -> "torch/optim"
"Element-Research/dpnn" -> "szagoruyko/imagine-nn"
"Element-Research/dpnn" -> "torch/nngraph"
"Element-Research/dpnn" -> "y0ast/VAE-Torch"
"najoungkim/COGS" -> "aistairc/rnng-pytorch"
"npow/MemNN" -> "npow/MemN2N"
"npow/MemNN" -> "wuxiyu/MemNN"
"npow/MemNN" -> "pararthshah/qa-memnn"
"npow/MemNN" -> "shawntan/neural-turing-machines"
"npow/MemNN" -> "kaishengtai/torch-ntm"
"nicholas-leonard/rnn" -> "dirkweissenborn/qa_network"
"jiweil/Sequence-Models-on-Stanford-Treebank" -> "jiweil/RST_Discourse_Parsing"
"iassael/torch-decomposition" -> "iassael/torch-linearo"
"google-deepmind/emergent_communication_at_scale" -> "Joshua-Ren/Neural_Iterated_Learning"
"dennybritz/deeplearning-papernotes" -> "ryankiros/skip-thoughts" ["e"=1]
"dennybritz/deeplearning-papernotes" -> "facebookarchive/MemNN" ["e"=1]
"dennybritz/deeplearning-papernotes" -> "harvardnlp/seq2seq-attn" ["e"=1]
"dennybritz/deeplearning-papernotes" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"dennybritz/cnn-text-classification-tf" -> "yoonkim/CNN_sentence" ["e"=1]
"dennybritz/cnn-text-classification-tf" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"karpathy/neuraltalk2" -> "ryankiros/neural-storyteller" ["e"=1]
"karpathy/neuraltalk2" -> "jcjohnson/torch-rnn" ["e"=1]
"karpathy/neuraltalk2" -> "ryankiros/skip-thoughts" ["e"=1]
"abhshkdz/neural-vqa" -> "Element-Research/rnn" ["e"=1]
"abhshkdz/neural-vqa" -> "kaishengtai/torch-ntm" ["e"=1]
"abhshkdz/neural-vqa" -> "Element-Research/dpnn" ["e"=1]
"vinhkhuc/MemN2N-babi-python" -> "carpedm20/MemN2N-tensorflow"
"vinhkhuc/MemN2N-babi-python" -> "facebookarchive/MemNN"
"vinhkhuc/MemN2N-babi-python" -> "domluna/memn2n"
"vinhkhuc/MemN2N-babi-python" -> "facebookarchive/bAbI-tasks"
"vinhkhuc/MemN2N-babi-python" -> "npow/MemN2N"
"vinhkhuc/MemN2N-babi-python" -> "YerevaNN/Dynamic-memory-networks-in-Theano"
"vinhkhuc/MemN2N-babi-python" -> "ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus"
"vinhkhuc/MemN2N-babi-python" -> "siyuanzhao/key-value-memory-networks"
"vinhkhuc/MemN2N-babi-python" -> "allenai/deep_qa" ["e"=1]
"vinhkhuc/MemN2N-babi-python" -> "barronalex/Dynamic-Memory-Networks-in-TensorFlow"
"vinhkhuc/MemN2N-babi-python" -> "npow/MemNN"
"vinhkhuc/MemN2N-babi-python" -> "jimfleming/recurrent-entity-networks"
"vinhkhuc/MemN2N-babi-python" -> "google-deepmind/rc-data"
"vinhkhuc/MemN2N-babi-python" -> "macournoyer/neuralconvo" ["e"=1]
"vinhkhuc/MemN2N-babi-python" -> "dapurv5/awesome-question-answering" ["e"=1]
"farizrahman4u/seq2seq" -> "harvardnlp/seq2seq-attn" ["e"=1]
"farizrahman4u/seq2seq" -> "ryankiros/skip-thoughts" ["e"=1]
"jazzsaxmafia/show_attend_and_tell.tensorflow" -> "facebookarchive/MIXER" ["e"=1]
"soumith/dcgan.torch" -> "carpedm20/awesome-torch" ["e"=1]
"soumith/dcgan.torch" -> "torch/nn" ["e"=1]
"soumith/dcgan.torch" -> "Element-Research/rnn" ["e"=1]
"soumith/dcgan.torch" -> "y0ast/VAE-Torch" ["e"=1]
"soumith/dcgan.torch" -> "skaae/torch-gan" ["e"=1]
"soumith/dcgan.torch" -> "soumith/imagenet-multiGPU.torch" ["e"=1]
"cemoody/lda2vec" -> "ryankiros/skip-thoughts" ["e"=1]
"mansimov/text2image" -> "ryankiros/skip-thoughts" ["e"=1]
"JuanPotato/Legofy" -> "ryankiros/neural-storyteller" ["e"=1]
"brendenlake/BPL" -> "brendenlake/omniglot" ["e"=1]
"brendenlake/BPL" -> "MaxwellRebo/PyBPL" ["e"=1]
"brendenlake/BPL" -> "brendenlake/visual-turing-tests"
"brendenlake/BPL" -> "tristandeleu/ntm-one-shot" ["e"=1]
"brendenlake/BPL" -> "blei-lab/edward" ["e"=1]
"brendenlake/BPL" -> "facebookarchive/MemNN"
"brendenlake/BPL" -> "carpedm20/NTM-tensorflow"
"brendenlake/BPL" -> "shawntan/neural-turing-machines"
"brendenlake/BPL" -> "mokemokechicken/keras_npi"
"brendenlake/BPL" -> "karpathy/paper-notes"
"brendenlake/BPL" -> "facebookresearch/CommAI-env"
"brendenlake/BPL" -> "Mostafa-Samir/DNC-tensorflow"
"brendenlake/BPL" -> "torrvision/crfasrnn" ["e"=1]
"brendenlake/BPL" -> "IDSIA/brainstorm" ["e"=1]
"brendenlake/BPL" -> "Newmu/dcgan_code" ["e"=1]
"szcom/rnnlib" -> "Element-Research/rnn" ["e"=1]
"szcom/rnnlib" -> "wojzaremba/lstm" ["e"=1]
"google/inception" -> "facebookarchive/fbcunn" ["e"=1]
"google/inception" -> "gcr/torch-residual-networks" ["e"=1]
"google/inception" -> "Element-Research/rnn" ["e"=1]
"google/inception" -> "zhangxiangxiao/Crepe" ["e"=1]
"google/inception" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"google/inception" -> "facebookarchive/MemNN" ["e"=1]
"google/inception" -> "wojzaremba/lstm" ["e"=1]
"tensorflow/skflow" -> "ryankiros/skip-thoughts" ["e"=1]
"robertsdionne/neural-network-papers" -> "facebookarchive/MemNN" ["e"=1]
"robertsdionne/neural-network-papers" -> "Element-Research/rnn" ["e"=1]
"robertsdionne/neural-network-papers" -> "ryankiros/neural-storyteller" ["e"=1]
"robertsdionne/neural-network-papers" -> "ryankiros/skip-thoughts" ["e"=1]
"dennybritz/nn-from-scratch" -> "dennybritz/rnn-tutorial-rnnlm" ["e"=1]
"avisingh599/visual-qa" -> "siemanko/tf-adversarial" ["e"=1]
"avisingh599/visual-qa" -> "vinhkhuc/MemN2N-babi-python" ["e"=1]
"brendenlake/omniglot" -> "brendenlake/BPL" ["e"=1]
"woodrush/neural-art-tf" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"andersbll/neural_artistic_style" -> "ryankiros/neural-storyteller" ["e"=1]
"ryankiros/neural-storyteller" -> "ryankiros/skip-thoughts"
"ryankiros/neural-storyteller" -> "karpathy/neuraltalk2" ["e"=1]
"ryankiros/neural-storyteller" -> "karpathy/neuraltalk" ["e"=1]
"ryankiros/neural-storyteller" -> "facebookarchive/MemNN"
"ryankiros/neural-storyteller" -> "Newmu/dcgan_code" ["e"=1]
"ryankiros/neural-storyteller" -> "Lasagne/Lasagne" ["e"=1]
"ryankiros/neural-storyteller" -> "kjw0612/awesome-rnn" ["e"=1]
"ryankiros/neural-storyteller" -> "alexjc/neural-doodle" ["e"=1]
"ryankiros/neural-storyteller" -> "harvardnlp/seq2seq-attn"
"ryankiros/neural-storyteller" -> "karpathy/char-rnn" ["e"=1]
"ryankiros/neural-storyteller" -> "jcjohnson/torch-rnn"
"ryankiros/neural-storyteller" -> "paarthneekhara/text-to-image" ["e"=1]
"ryankiros/neural-storyteller" -> "sherjilozair/char-rnn-tensorflow"
"ryankiros/neural-storyteller" -> "awentzonline/image-analogies" ["e"=1]
"ryankiros/neural-storyteller" -> "dennybritz/deeplearning-papernotes" ["e"=1]
"sugyan/tensorflow-mnist" -> "niektemme/tensorflow-mnist-predict"
"sugyan/tensorflow-mnist" -> "martin-gorner/tensorflow-mnist-tutorial" ["e"=1]
"sugyan/tensorflow-mnist" -> "tobegit3hub/tensorflow_template_application" ["e"=1]
"sugyan/tensorflow-mnist" -> "llSourcell/How-to-Deploy-a-Tensorflow-Model-in-Production" ["e"=1]
"sugyan/tensorflow-mnist" -> "wm5920/mnist_web_tensorflow_demo" ["e"=1]
"sugyan/tensorflow-mnist" -> "tensorflow/serving" ["e"=1]
"sugyan/tensorflow-mnist" -> "backstopmedia/tensorflowbook" ["e"=1]
"sugyan/tensorflow-mnist" -> "Russell91/TensorBox" ["e"=1]
"sugyan/tensorflow-mnist" -> "llSourcell/tensorflow_chatbot" ["e"=1]
"sugyan/tensorflow-mnist" -> "hwalsuklee/tensorflow-mnist-cnn" ["e"=1]
"sugyan/tensorflow-mnist" -> "NickShahML/tensorflow_with_latest_papers"
"sugyan/tensorflow-mnist" -> "christopher5106/FastAnnotationTool" ["e"=1]
"sugyan/tensorflow-mnist" -> "transcranial/keras-js" ["e"=1]
"sugyan/tensorflow-mnist" -> "sherjilozair/char-rnn-tensorflow"
"sugyan/tensorflow-mnist" -> "hetaoaoao/tensorflow_web_deploy"
"joanbruna/stat212b" -> "twitter-archive/torch-autograd" ["e"=1]
"joanbruna/stat212b" -> "ryankiros/skip-thoughts" ["e"=1]
"joanbruna/stat212b" -> "harvardnlp/seq2seq-attn" ["e"=1]
"joanbruna/stat212b" -> "Element-Research/rnn" ["e"=1]
"dmlc/minpy" -> "DeepMark/deepmark" ["e"=1]
"dmlc/minpy" -> "wojzaremba/lstm" ["e"=1]
"dmlc/minpy" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"dmlc/minpy" -> "baidu-research/persistent-rnn" ["e"=1]
"dmlc/minpy" -> "tensorflow/fold" ["e"=1]
"dmlc/minpy" -> "zhangxiangxiao/Crepe" ["e"=1]
"SergeyMorugin/ostagram" -> "soumith/cvpr2015" ["e"=1]
"gabrieleangeletti/Deep-Learning-TensorFlow" -> "KnHuq/Dynamic-Tensorflow-Tutorial" ["e"=1]
"facebookarchive/fb.resnet.torch" -> "gcr/torch-residual-networks" ["e"=1]
"facebookarchive/fb.resnet.torch" -> "Element-Research/rnn" ["e"=1]
"facebookarchive/fb.resnet.torch" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"facebookarchive/fb.resnet.torch" -> "torch/nn" ["e"=1]
"facebookarchive/fb.resnet.torch" -> "facebookarchive/torchnet" ["e"=1]
"dennybritz/rnn-tutorial-rnnlm" -> "dennybritz/rnn-tutorial-gru-lstm"
"dennybritz/rnn-tutorial-rnnlm" -> "gwtaylor/theano-rnn" ["e"=1]
"dennybritz/rnn-tutorial-rnnlm" -> "dennybritz/nn-from-scratch" ["e"=1]
"dennybritz/rnn-tutorial-rnnlm" -> "ryankiros/skip-thoughts"
"dennybritz/rnn-tutorial-rnnlm" -> "mesnilgr/is13"
"dennybritz/rnn-tutorial-rnnlm" -> "yoonkim/CNN_sentence"
"dennybritz/rnn-tutorial-rnnlm" -> "gy910210/rnn-from-scratch" ["e"=1]
"dennybritz/rnn-tutorial-rnnlm" -> "dennybritz/tf-rnn"
"dennybritz/rnn-tutorial-rnnlm" -> "Newmu/Theano-Tutorials" ["e"=1]
"dennybritz/rnn-tutorial-rnnlm" -> "stanfordnlp/treelstm"
"dennybritz/rnn-tutorial-rnnlm" -> "facebookarchive/MemNN"
"dennybritz/rnn-tutorial-rnnlm" -> "kjw0612/awesome-rnn" ["e"=1]
"dennybritz/rnn-tutorial-rnnlm" -> "lisa-lab/DeepLearningTutorials" ["e"=1]
"dennybritz/rnn-tutorial-rnnlm" -> "harvardnlp/seq2seq-attn"
"dennybritz/rnn-tutorial-rnnlm" -> "yoonkim/lstm-char-cnn"
"larspars/word-rnn" -> "hunkim/word-rnn-tensorflow"
"larspars/word-rnn" -> "jcjohnson/torch-rnn"
"larspars/word-rnn" -> "sherjilozair/char-rnn-tensorflow"
"larspars/word-rnn" -> "carpedm20/neural-summary-tensorflow"
"larspars/word-rnn" -> "junwei-pan/fasttext_torch"
"larspars/word-rnn" -> "bdhingra/tweet2vec" ["e"=1]
"larspars/word-rnn" -> "crisbal/docker-torch-rnn"
"larspars/word-rnn" -> "vlraik/word-level-rnn-keras"
"facebookarchive/fb-caffe-exts" -> "fmassa/optimize-net"
"facebookarchive/fb-caffe-exts" -> "Maratyszcza/NNPACK" ["e"=1]
"facebookarchive/fb-caffe-exts" -> "DeepMark/deepmark"
"facebookarchive/fb-caffe-exts" -> "gcr/torch-residual-networks"
"facebookarchive/fb-caffe-exts" -> "szagoruyko/loadcaffe"
"facebookarchive/fb-caffe-exts" -> "AlfredXiangWu/face_verification_experiment" ["e"=1]
"facebookarchive/fb-caffe-exts" -> "yueatsprograms/Stochastic_Depth"
"facebookarchive/fb-caffe-exts" -> "pmgysel/caffe" ["e"=1]
"facebookarchive/fb-caffe-exts" -> "zhanghang1989/fb-caffe-exts"
"facebookarchive/fb-caffe-exts" -> "soumith/net2net.torch"
"facebookarchive/fb-caffe-exts" -> "daerduoCarey/SpatialTransformerLayer" ["e"=1]
"facebookarchive/fb-caffe-exts" -> "facebookarchive/eyescream" ["e"=1]
"facebookarchive/fb-caffe-exts" -> "purine/purine2" ["e"=1]
"facebookarchive/fb-caffe-exts" -> "ducha-aiki/caffenet-benchmark" ["e"=1]
"facebookarchive/fb-caffe-exts" -> "e-lab/torch-toolbox"
"gcr/torch-residual-networks" -> "facebookarchive/fb.resnet.torch" ["e"=1]
"gcr/torch-residual-networks" -> "yueatsprograms/Stochastic_Depth"
"gcr/torch-residual-networks" -> "twitter-archive/torch-autograd"
"gcr/torch-residual-networks" -> "fmassa/optimize-net"
"gcr/torch-residual-networks" -> "Element-Research/rnn"
"gcr/torch-residual-networks" -> "soumith/imagenet-multiGPU.torch"
"gcr/torch-residual-networks" -> "DeepMark/deepmark"
"gcr/torch-residual-networks" -> "KaimingHe/resnet-1k-layers" ["e"=1]
"gcr/torch-residual-networks" -> "soumith/net2net.torch"
"gcr/torch-residual-networks" -> "facebookarchive/fb-caffe-exts"
"gcr/torch-residual-networks" -> "Element-Research/dpnn"
"gcr/torch-residual-networks" -> "szagoruyko/cifar.torch"
"gcr/torch-residual-networks" -> "soumith/cudnn.torch"
"gcr/torch-residual-networks" -> "Moodstocks/inception-v3.torch"
"gcr/torch-residual-networks" -> "facebookarchive/torchnet"
"kaishengtai/neuralart" -> "ryankiros/neural-storyteller" ["e"=1]
"kaishengtai/neuralart" -> "Element-Research/rnn" ["e"=1]
"facebookarchive/bAbI-tasks" -> "facebookarchive/MemNN"
"facebookarchive/bAbI-tasks" -> "vinhkhuc/MemN2N-babi-python"
"facebookarchive/bAbI-tasks" -> "google-deepmind/rc-data"
"facebookarchive/bAbI-tasks" -> "carpedm20/MemN2N-tensorflow"
"facebookarchive/bAbI-tasks" -> "YerevaNN/Dynamic-memory-networks-in-Theano"
"facebookarchive/bAbI-tasks" -> "Mostafa-Samir/DNC-tensorflow"
"facebookarchive/bAbI-tasks" -> "karthikncode/nlp-datasets" ["e"=1]
"facebookarchive/bAbI-tasks" -> "facebookresearch/CommAI-env"
"facebookarchive/bAbI-tasks" -> "harvardnlp/seq2seq-attn"
"facebookarchive/bAbI-tasks" -> "npow/MemN2N"
"facebookarchive/bAbI-tasks" -> "ryankiros/skip-thoughts"
"facebookarchive/bAbI-tasks" -> "twitter-archive/torch-autograd"
"facebookarchive/bAbI-tasks" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"facebookarchive/bAbI-tasks" -> "thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" ["e"=1]
"facebookarchive/bAbI-tasks" -> "facebookarchive/Stack-RNN"
"facebookarchive/MemNN" -> "carpedm20/MemN2N-tensorflow"
"facebookarchive/MemNN" -> "vinhkhuc/MemN2N-babi-python"
"facebookarchive/MemNN" -> "facebookarchive/bAbI-tasks"
"facebookarchive/MemNN" -> "domluna/memn2n"
"facebookarchive/MemNN" -> "google-deepmind/rc-data"
"facebookarchive/MemNN" -> "ryankiros/skip-thoughts"
"facebookarchive/MemNN" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"facebookarchive/MemNN" -> "harvardnlp/seq2seq-attn"
"facebookarchive/MemNN" -> "Element-Research/rnn"
"facebookarchive/MemNN" -> "zhangxiangxiao/Crepe"
"facebookarchive/MemNN" -> "facebookarchive/NAMAS" ["e"=1]
"facebookarchive/MemNN" -> "YerevaNN/Dynamic-memory-networks-in-Theano"
"facebookarchive/MemNN" -> "LantaoYu/SeqGAN" ["e"=1]
"facebookarchive/MemNN" -> "dennybritz/deeplearning-papernotes" ["e"=1]
"facebookarchive/MemNN" -> "allenai/bi-att-flow" ["e"=1]
"google-deepmind/rc-data" -> "facebookarchive/MemNN"
"google-deepmind/rc-data" -> "thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" ["e"=1]
"google-deepmind/rc-data" -> "facebookarchive/NAMAS" ["e"=1]
"google-deepmind/rc-data" -> "ryankiros/skip-thoughts"
"google-deepmind/rc-data" -> "facebookarchive/bAbI-tasks"
"google-deepmind/rc-data" -> "danqi/rc-cnn-dailymail" ["e"=1]
"google-deepmind/rc-data" -> "harvardnlp/seq2seq-attn"
"google-deepmind/rc-data" -> "carpedm20/MemN2N-tensorflow"
"google-deepmind/rc-data" -> "zhangxiangxiao/Crepe"
"google-deepmind/rc-data" -> "allenai/bi-att-flow" ["e"=1]
"google-deepmind/rc-data" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"google-deepmind/rc-data" -> "Element-Research/rnn"
"google-deepmind/rc-data" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"google-deepmind/rc-data" -> "carpedm20/attentive-reader-tensorflow" ["e"=1]
"google-deepmind/rc-data" -> "wojzaremba/lstm"
"carpedm20/awesome-torch" -> "Element-Research/rnn"
"carpedm20/awesome-torch" -> "twitter-archive/torch-autograd"
"carpedm20/awesome-torch" -> "fmassa/optimize-net"
"carpedm20/awesome-torch" -> "soumith/imagenet-multiGPU.torch"
"carpedm20/awesome-torch" -> "szagoruyko/loadcaffe"
"carpedm20/awesome-torch" -> "torch/tutorials"
"carpedm20/awesome-torch" -> "andreaskoepf/faster-rcnn.torch"
"carpedm20/awesome-torch" -> "e-lab/torch-toolbox"
"carpedm20/awesome-torch" -> "Element-Research/dpnn"
"carpedm20/awesome-torch" -> "iassael/torch-bnlstm"
"carpedm20/awesome-torch" -> "wojciechz/learning_to_execute"
"carpedm20/awesome-torch" -> "y0ast/VAE-Torch"
"carpedm20/awesome-torch" -> "soumith/cvpr2015"
"carpedm20/awesome-torch" -> "torch/demos"
"carpedm20/awesome-torch" -> "twitter-archive/torch-twrl"
"jacobandreas/nmn2" -> "ilyasu123/rlntm" ["e"=1]
"jacobandreas/nmn2" -> "kaishengtai/torch-ntm" ["e"=1]
"domluna/memn2n" -> "carpedm20/MemN2N-tensorflow"
"domluna/memn2n" -> "vinhkhuc/MemN2N-babi-python"
"domluna/memn2n" -> "siyuanzhao/key-value-memory-networks"
"domluna/memn2n" -> "facebookarchive/MemNN"
"domluna/memn2n" -> "therne/dmn-tensorflow"
"domluna/memn2n" -> "barronalex/Dynamic-Memory-Networks-in-TensorFlow"
"domluna/memn2n" -> "nmhkahn/MemN2N-pytorch"
"domluna/memn2n" -> "npow/MemNN"
"domluna/memn2n" -> "vyraun/chatbot-MemN2N-tensorflow" ["e"=1]
"domluna/memn2n" -> "lc222/key-value-MemNN"
"domluna/memn2n" -> "priyank87/memn2n"
"domluna/memn2n" -> "dapurv5/neural_kbqa"
"domluna/memn2n" -> "carpedm20/attentive-reader-tensorflow" ["e"=1]
"domluna/memn2n" -> "ematvey/tensorflow-seq2seq-tutorials" ["e"=1]
"domluna/memn2n" -> "rajarshd/TextKBQA" ["e"=1]
"DeepLearningKit/DeepLearningKit" -> "clementfarabet/torch-ios" ["e"=1]
"ryankiros/visual-semantic-embedding" -> "ryankiros/skip-thoughts" ["e"=1]
"mansimov/unsupervised-videos" -> "viorik/ConvLSTM" ["e"=1]
"andersbll/autoencoding_beyond_pixels" -> "y0ast/VAE-Torch" ["e"=1]
"microsoft/DMTK" -> "facebookarchive/fbcunn" ["e"=1]
"PrincetonVision/marvin" -> "shurans/DeepSlidingShape" ["e"=1]
"PrincetonVision/marvin" -> "yueatsprograms/Stochastic_Depth"
"PrincetonVision/marvin" -> "siemanko/tf-adversarial"
"PrincetonVision/marvin" -> "tkocisky/oxnn"
"PrincetonVision/marvin" -> "Sohl-Dickstein/Sum-of-Functions-Optimizer" ["e"=1]
"PrincetonVision/marvin" -> "sermanet/OverFeat"
"PrincetonVision/marvin" -> "IoannisAntonoglou/optimBench" ["e"=1]
"MaxwellRebo/PyBPL" -> "brendenlake/BPL" ["e"=1]
"danieldjohnson/biaxial-rnn-music-composition" -> "ryankiros/neural-storyteller" ["e"=1]
"danieldjohnson/biaxial-rnn-music-composition" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"andrewt3000/DL4NLP" -> "yoonkim/CNN_sentence" ["e"=1]
"andrewt3000/DL4NLP" -> "ryankiros/skip-thoughts" ["e"=1]
"andrewt3000/DL4NLP" -> "facebookarchive/MemNN" ["e"=1]
"ry/tensorflow-vgg16" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"daerduoCarey/SpatialTransformerLayer" -> "qassemoquab/stnbhwd" ["e"=1]
"jcjohnson/densecap" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"jcjohnson/densecap" -> "facebookarchive/torchnet" ["e"=1]
"jcjohnson/densecap" -> "Element-Research/rnn" ["e"=1]
"jcjohnson/densecap" -> "jcjohnson/torch-rnn" ["e"=1]
"shagunsodhani/papers-I-read" -> "karpathy/paper-notes" ["e"=1]
"UKPLab/deeplearning4nlp-tutorial" -> "ryankiros/skip-thoughts" ["e"=1]
"UKPLab/deeplearning4nlp-tutorial" -> "harvardnlp/seq2seq-attn" ["e"=1]
"dennybritz/rnn-tutorial-gru-lstm" -> "dennybritz/rnn-tutorial-rnnlm"
"dennybritz/rnn-tutorial-gru-lstm" -> "gwtaylor/theano-rnn" ["e"=1]
"dennybritz/rnn-tutorial-gru-lstm" -> "JonathanRaiman/theano_lstm" ["e"=1]
"dennybritz/rnn-tutorial-gru-lstm" -> "dennybritz/tf-rnn"
"dennybritz/rnn-tutorial-gru-lstm" -> "mesnilgr/is13"
"dennybritz/rnn-tutorial-gru-lstm" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"dennybritz/rnn-tutorial-gru-lstm" -> "wangxggc/rnn-theano"
"dennybritz/rnn-tutorial-gru-lstm" -> "mila-iqia/summerschool2015" ["e"=1]
"dennybritz/rnn-tutorial-gru-lstm" -> "Element-Research/rnn"
"dennybritz/rnn-tutorial-gru-lstm" -> "nyu-dl/dl4mt-multi" ["e"=1]
"dennybritz/rnn-tutorial-gru-lstm" -> "mila-iqia/blocks" ["e"=1]
"dennybritz/rnn-tutorial-gru-lstm" -> "carpedm20/neural-summary-tensorflow"
"dennybritz/rnn-tutorial-gru-lstm" -> "chilynn/sequence-labeling" ["e"=1]
"dennybritz/rnn-tutorial-gru-lstm" -> "harvardnlp/seq2seq-attn"
"dennybritz/rnn-tutorial-gru-lstm" -> "wojciechz/learning_to_execute"
"carpedm20/MemN2N-tensorflow" -> "domluna/memn2n"
"carpedm20/MemN2N-tensorflow" -> "facebookarchive/MemNN"
"carpedm20/MemN2N-tensorflow" -> "vinhkhuc/MemN2N-babi-python"
"carpedm20/MemN2N-tensorflow" -> "carpedm20/NTM-tensorflow"
"carpedm20/MemN2N-tensorflow" -> "siyuanzhao/key-value-memory-networks"
"carpedm20/MemN2N-tensorflow" -> "therne/dmn-tensorflow"
"carpedm20/MemN2N-tensorflow" -> "carpedm20/lstm-char-cnn-tensorflow"
"carpedm20/MemN2N-tensorflow" -> "NickShahML/tensorflow_with_latest_papers"
"carpedm20/MemN2N-tensorflow" -> "facebookarchive/bAbI-tasks"
"carpedm20/MemN2N-tensorflow" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"carpedm20/MemN2N-tensorflow" -> "google-deepmind/rc-data"
"carpedm20/MemN2N-tensorflow" -> "ganeshjawahar/mem_absa" ["e"=1]
"carpedm20/MemN2N-tensorflow" -> "carpedm20/neural-summary-tensorflow"
"carpedm20/MemN2N-tensorflow" -> "LantaoYu/SeqGAN" ["e"=1]
"carpedm20/MemN2N-tensorflow" -> "Mostafa-Samir/DNC-tensorflow"
"Moodstocks/gtsrb.torch" -> "qassemoquab/stnbhwd"
"Moodstocks/gtsrb.torch" -> "fmassa/optimize-net"
"Moodstocks/gtsrb.torch" -> "Moodstocks/inception-v3.torch"
"Moodstocks/gtsrb.torch" -> "e-lab/torch-toolbox"
"Moodstocks/gtsrb.torch" -> "skaae/recurrent-spatial-transformer-code"
"Moodstocks/gtsrb.torch" -> "soumith/inception.torch"
"Moodstocks/gtsrb.torch" -> "iassael/torch-bnlstm"
"Moodstocks/gtsrb.torch" -> "eladhoffer/ImageNet-Training"
"Moodstocks/gtsrb.torch" -> "twitter-archive/torch-ipc"
"Aysegul/torch-visbox" -> "Aysegul/torch-kitti"
"twitter-archive/torch-autograd" -> "fmassa/optimize-net"
"twitter-archive/torch-autograd" -> "Element-Research/rnn"
"twitter-archive/torch-autograd" -> "bshillingford/autobw.torch"
"twitter-archive/torch-autograd" -> "Element-Research/dpnn"
"twitter-archive/torch-autograd" -> "Kaixhin/nninit"
"twitter-archive/torch-autograd" -> "twitter-archive/torch-distlearn"
"twitter-archive/torch-autograd" -> "twitter-archive/torch-twrl"
"twitter-archive/torch-autograd" -> "kaishengtai/torch-ntm"
"twitter-archive/torch-autograd" -> "torch/nngraph"
"twitter-archive/torch-autograd" -> "tkocisky/oxnn"
"twitter-archive/torch-autograd" -> "facebookarchive/fblualib"
"twitter-archive/torch-autograd" -> "y0ast/VAE-Torch"
"twitter-archive/torch-autograd" -> "torch/optim"
"twitter-archive/torch-autograd" -> "carpedm20/awesome-torch"
"twitter-archive/torch-autograd" -> "skaae/torch-gan"
"google-deepmind/classic" -> "google-deepmind/plplot-ffi"
"google-deepmind/classic" -> "google-deepmind/torch-distributions"
"mrkulk/Unsupervised-Capsule-Network" -> "willwhitney/dc-ign"
"soumith/net2net.torch" -> "soumith/inception.torch"
"soumith/net2net.torch" -> "Moodstocks/inception-v3.torch"
"soumith/net2net.torch" -> "twitter-archive/torch-distlearn"
"soumith/net2net.torch" -> "bshillingford/autobw.torch"
"soumith/net2net.torch" -> "szagoruyko/imagine-nn"
"Kaixhin/rlenvs" -> "iassael/torch-bnlstm"
"Kaixhin/rlenvs" -> "ludc/rltorch"
"Kaixhin/rlenvs" -> "Kaixhin/Atari" ["e"=1]
"Kaixhin/rlenvs" -> "iassael/torch-bootstrapped-dqn" ["e"=1]
"cheng6076/SNLI-attention" -> "iassael/torch-bnlstm" ["e"=1]
"cheng6076/SNLI-attention" -> "facebookarchive/torch-rnnlib" ["e"=1]
"twitter-archive/torch-distlearn" -> "twitter-archive/torch-dataset"
"twitter-archive/torch-distlearn" -> "twitter-archive/torch-ipc"
"twitter-archive/torch-distlearn" -> "twitter-archive/torch-thrift"
"twitter-archive/torch-distlearn" -> "bshillingford/autobw.torch"
"waylonflinn/weblas" -> "dritchie/adnn" ["e"=1]
"waylonflinn/weblas" -> "siemanko/tf-adversarial" ["e"=1]
"waylonflinn/weblas" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"chuanli11/CNNMRF" -> "skaae/torch-gan" ["e"=1]
"chuanli11/CNNMRF" -> "qassemoquab/stnbhwd" ["e"=1]
"hardmaru/sketch-rnn" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"erikbern/deep-fonts" -> "skaae/torch-gan" ["e"=1]
"wojzaremba/algorithm-learning" -> "kkurach/math_learning"
"wojzaremba/algorithm-learning" -> "ilyasu123/rlntm"
"harvardnlp/sent-conv-torch" -> "yoonkim/CNN_sentence"
"harvardnlp/sent-conv-torch" -> "harvardnlp/seq2seq-attn"
"harvardnlp/sent-conv-torch" -> "yoonkim/lstm-char-cnn"
"harvardnlp/sent-conv-torch" -> "Shawn1993/cnn-text-classification-pytorch" ["e"=1]
"harvardnlp/sent-conv-torch" -> "harvardnlp/NAMAS"
"harvardnlp/sent-conv-torch" -> "stanfordnlp/treelstm"
"harvardnlp/sent-conv-torch" -> "zhangxiangxiao/Crepe"
"harvardnlp/sent-conv-torch" -> "taolei87/rcnn" ["e"=1]
"harvardnlp/sent-conv-torch" -> "alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras"
"harvardnlp/sent-conv-torch" -> "Element-Research/rnn"
"harvardnlp/sent-conv-torch" -> "castorini/castor" ["e"=1]
"harvardnlp/sent-conv-torch" -> "galsang/CNN-sentence-classification-pytorch" ["e"=1]
"harvardnlp/sent-conv-torch" -> "macournoyer/neuralconvo" ["e"=1]
"harvardnlp/sent-conv-torch" -> "cheng6076/SNLI-attention" ["e"=1]
"facebookarchive/NAMAS" -> "carpedm20/neural-summary-tensorflow" ["e"=1]
"facebookarchive/NAMAS" -> "google-deepmind/rc-data" ["e"=1]
"facebookarchive/NAMAS" -> "harvardnlp/seq2seq-attn" ["e"=1]
"facebookarchive/NAMAS" -> "facebookarchive/MemNN" ["e"=1]
"facebookarchive/NAMAS" -> "ryankiros/skip-thoughts" ["e"=1]
"facebookarchive/NAMAS" -> "stanfordnlp/treelstm" ["e"=1]
"sherjilozair/char-rnn-tensorflow" -> "hunkim/word-rnn-tensorflow"
"sherjilozair/char-rnn-tensorflow" -> "karpathy/char-rnn" ["e"=1]
"sherjilozair/char-rnn-tensorflow" -> "jcjohnson/torch-rnn"
"sherjilozair/char-rnn-tensorflow" -> "carpedm20/lstm-char-cnn-tensorflow"
"sherjilozair/char-rnn-tensorflow" -> "kjw0612/awesome-rnn" ["e"=1]
"sherjilozair/char-rnn-tensorflow" -> "dennybritz/cnn-text-classification-tf" ["e"=1]
"sherjilozair/char-rnn-tensorflow" -> "google/seq2seq" ["e"=1]
"sherjilozair/char-rnn-tensorflow" -> "ryankiros/skip-thoughts"
"sherjilozair/char-rnn-tensorflow" -> "facebookarchive/MemNN"
"sherjilozair/char-rnn-tensorflow" -> "carpedm20/MemN2N-tensorflow"
"sherjilozair/char-rnn-tensorflow" -> "farizrahman4u/seq2seq" ["e"=1]
"sherjilozair/char-rnn-tensorflow" -> "nlintz/TensorFlow-Tutorials" ["e"=1]
"sherjilozair/char-rnn-tensorflow" -> "yoonkim/lstm-char-cnn"
"sherjilozair/char-rnn-tensorflow" -> "LantaoYu/SeqGAN" ["e"=1]
"sherjilozair/char-rnn-tensorflow" -> "carpedm20/NTM-tensorflow"
"skaae/recurrent-spatial-transformer-code" -> "skaae/transformer_network"
"skaae/recurrent-spatial-transformer-code" -> "Moodstocks/gtsrb.torch"
"skaae/recurrent-spatial-transformer-code" -> "qassemoquab/stnbhwd"
"skaae/recurrent-spatial-transformer-code" -> "daviddao/spatial-transformer-tensorflow"
"VisionLabs/torch-opencv" -> "Kaixhin/nninit"
"VisionLabs/torch-opencv" -> "szagoruyko/torch-opencv-demos"
"VisionLabs/torch-opencv" -> "fmassa/optimize-net"
"VisionLabs/torch-opencv" -> "imodpasteur/lutorpy"
"VisionLabs/torch-opencv" -> "benglard/waffle"
"VisionLabs/torch-opencv" -> "andreaskoepf/faster-rcnn.torch"
"VisionLabs/torch-opencv" -> "mvitez/thnets"
"VisionLabs/torch-opencv" -> "qassemoquab/stnbhwd"
"VisionLabs/torch-opencv" -> "Atcold/torch-Developer-Guide"
"VisionLabs/torch-opencv" -> "torch/cutorch"
"VisionLabs/torch-opencv" -> "google-deepmind/torch-hdf5"
"VisionLabs/torch-opencv" -> "facebookarchive/torch-rnnlib"
"VisionLabs/torch-opencv" -> "clementfarabet/torch-ios"
"VisionLabs/torch-opencv" -> "e-lab/torch-toolbox"
"VisionLabs/torch-opencv" -> "Element-Research/dpnn"
"viorik/ConvLSTM" -> "carlthome/tensorflow-convlstm-cell" ["e"=1]
"viorik/ConvLSTM" -> "loliverhennigh/Convolutional-LSTM-in-Tensorflow" ["e"=1]
"viorik/ConvLSTM" -> "y0ast/VAE-Torch"
"viorik/ConvLSTM" -> "iassael/torch-bnlstm"
"viorik/ConvLSTM" -> "fmassa/optimize-net"
"viorik/ConvLSTM" -> "Moodstocks/gtsrb.torch"
"viorik/ConvLSTM" -> "oxford-cs-ml-2015/practical6"
"viorik/ConvLSTM" -> "vivanov879/draw"
"viorik/ConvLSTM" -> "rogertrullo/pytorch_convlstm" ["e"=1]
"viorik/ConvLSTM" -> "skaae/torch-gan"
"viorik/ConvLSTM" -> "Element-Research/rnn"
"viorik/ConvLSTM" -> "mansimov/unsupervised-videos" ["e"=1]
"viorik/ConvLSTM" -> "twitter-archive/torch-autograd"
"viorik/ConvLSTM" -> "ludc/rltorch"
"viorik/ConvLSTM" -> "qassemoquab/stnbhwd"
"mvitez/thnets" -> "lantiga/pytorch2c"
"mvitez/thnets" -> "VisionLabs/torch-opencv"
"mvitez/thnets" -> "soumith/torch-android"
"mvitez/thnets" -> "e-lab/torch-toolbox"
"hughperkins/pytorch" -> "imodpasteur/lutorpy"
"hughperkins/pytorch" -> "fmassa/optimize-net"
"hughperkins/pytorch" -> "Element-Research/rnn"
"hughperkins/pytorch" -> "VisionLabs/torch-opencv"
"hughperkins/pytorch" -> "twitter-archive/torch-autograd"
"hughperkins/pytorch" -> "nicholas-leonard/dp"
"hughperkins/pytorch" -> "benglard/waffle"
"hughperkins/pytorch" -> "carpedm20/awesome-torch"
"hughperkins/pytorch" -> "twitter-archive/torch-twrl"
"hughperkins/pytorch" -> "y0ast/VAE-Torch"
"hughperkins/pytorch" -> "eladhoffer/ImageNet-Training"
"hughperkins/pytorch" -> "Element-Research/dpnn"
"hughperkins/pytorch" -> "soumith/inception.torch"
"hughperkins/pytorch" -> "ludc/rltorch"
"hughperkins/pytorch" -> "Atcold/torch-Developer-Guide"
"samjabrahams/tensorflow-white-paper-notes" -> "NickShahML/tensorflow_with_latest_papers"
"samjabrahams/tensorflow-white-paper-notes" -> "carpedm20/NTM-tensorflow"
"samjabrahams/tensorflow-white-paper-notes" -> "google/prettytensor" ["e"=1]
"samjabrahams/tensorflow-white-paper-notes" -> "mtomassoli/papers"
"allenai/deep_qa" -> "vinhkhuc/MemN2N-babi-python" ["e"=1]
"google/prettytensor" -> "tensorflow/fold" ["e"=1]
"google/prettytensor" -> "ryankiros/skip-thoughts" ["e"=1]
"google/prettytensor" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"google/prettytensor" -> "carpedm20/NTM-tensorflow" ["e"=1]
"carpedm20/lstm-char-cnn-tensorflow" -> "mkroutikov/tf-lstm-char-cnn"
"carpedm20/lstm-char-cnn-tensorflow" -> "yoonkim/lstm-char-cnn"
"carpedm20/lstm-char-cnn-tensorflow" -> "carpedm20/MemN2N-tensorflow"
"carpedm20/lstm-char-cnn-tensorflow" -> "sherjilozair/char-rnn-tensorflow"
"carpedm20/lstm-char-cnn-tensorflow" -> "carpedm20/neural-summary-tensorflow"
"carpedm20/lstm-char-cnn-tensorflow" -> "jiegzhan/multi-class-text-classification-cnn-rnn" ["e"=1]
"carpedm20/lstm-char-cnn-tensorflow" -> "NickShahML/tensorflow_with_latest_papers"
"carpedm20/lstm-char-cnn-tensorflow" -> "hunkim/word-rnn-tensorflow"
"carpedm20/lstm-char-cnn-tensorflow" -> "carpedm20/deep-rl-tensorflow" ["e"=1]
"carpedm20/lstm-char-cnn-tensorflow" -> "harvardnlp/seq2seq-attn"
"carpedm20/lstm-char-cnn-tensorflow" -> "ilivans/tf-rnn-attention" ["e"=1]
"carpedm20/lstm-char-cnn-tensorflow" -> "yoonkim/CNN_sentence"
"carpedm20/lstm-char-cnn-tensorflow" -> "licstar/compare" ["e"=1]
"carpedm20/lstm-char-cnn-tensorflow" -> "google-deepmind/rc-data"
"carpedm20/lstm-char-cnn-tensorflow" -> "lipiji/App-DL" ["e"=1]
"ducha-aiki/caffenet-benchmark" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"andreaskoepf/faster-rcnn.torch" -> "mahyarnajibi/fast-rcnn-torch"
"andreaskoepf/faster-rcnn.torch" -> "ruotianluo/Faster-RCNN-Densecap-torch"
"andreaskoepf/faster-rcnn.torch" -> "fmassa/object-detection.torch"
"andreaskoepf/faster-rcnn.torch" -> "eladhoffer/ImageNet-Training"
"andreaskoepf/faster-rcnn.torch" -> "Kaixhin/nninit"
"andreaskoepf/faster-rcnn.torch" -> "e-lab/torch-toolbox"
"andreaskoepf/faster-rcnn.torch" -> "Aysegul/torch-visbox"
"andreaskoepf/faster-rcnn.torch" -> "szagoruyko/imagine-nn"
"andreaskoepf/faster-rcnn.torch" -> "jhjin/overfeat-torch"
"andreaskoepf/faster-rcnn.torch" -> "fmassa/optimize-net"
"j-wilson/bot7" -> "j-wilson/gpTorch7"
"j-wilson/bot7" -> "bshillingford/fbdebugger-minimal"
"Kaixhin/Atari" -> "Kaixhin/rlenvs" ["e"=1]
"Kaixhin/Atari" -> "twitter-archive/torch-twrl" ["e"=1]
"Kaixhin/Atari" -> "ludc/rltorch" ["e"=1]
"Kaixhin/Atari" -> "google-deepmind/alewrap" ["e"=1]
"Kaixhin/Atari" -> "fmassa/optimize-net" ["e"=1]
"Kaixhin/Atari" -> "twitter-archive/torch-autograd" ["e"=1]
"Kaixhin/Atari" -> "vivanov879/draw" ["e"=1]
"joschu/cgt" -> "twitter-archive/torch-autograd" ["e"=1]
"joschu/cgt" -> "kaishengtai/torch-ntm" ["e"=1]
"joschu/cgt" -> "bshillingford/autobw.torch" ["e"=1]
"5vision/DARQN" -> "SeanNaren/QlearningExample.torch" ["e"=1]
"skaae/torch-gan" -> "y0ast/VAE-Torch"
"skaae/torch-gan" -> "Atcold/torch-TripletEmbedding"
"skaae/torch-gan" -> "tabacof/adversarial" ["e"=1]
"skaae/torch-gan" -> "xiaolonw/ss-gan" ["e"=1]
"skaae/torch-gan" -> "Element-Research/dpnn"
"skaae/torch-gan" -> "Kaixhin/nninit"
"skaae/torch-gan" -> "yueatsprograms/Stochastic_Depth"
"skaae/torch-gan" -> "twitter-archive/torch-autograd"
"skaae/torch-gan" -> "facebookarchive/eyescream" ["e"=1]
"skaae/torch-gan" -> "vivanov879/draw"
"skaae/torch-gan" -> "szagoruyko/cifar.torch"
"skaae/torch-gan" -> "soumith/net2net.torch"
"facebookarchive/MazeBase" -> "Kaixhin/rlenvs" ["e"=1]
"szagoruyko/torch-opencv-demos" -> "VisionLabs/torch-opencv"
"j-wilson/gpTorch7" -> "j-wilson/bot7"
"rizar/attention-lvcsr" -> "SeanNaren/deepspeech.torch" ["e"=1]
"coreylynch/grid-lstm" -> "phvu/grid-lstm-tensorflow"
"coreylynch/grid-lstm" -> "iassael/torch-bnlstm"
"coreylynch/grid-lstm" -> "Kaixhin/nninit"
"coreylynch/grid-lstm" -> "clementfarabet/lua---nnx"
"coreylynch/grid-lstm" -> "SeanNaren/QlearningExample.torch"
"coreylynch/grid-lstm" -> "tkocisky/oxnn"
"carpedm20/NTM-tensorflow" -> "carpedm20/MemN2N-tensorflow"
"carpedm20/NTM-tensorflow" -> "DeNeutoy/act-tensorflow"
"carpedm20/NTM-tensorflow" -> "Mostafa-Samir/DNC-tensorflow"
"carpedm20/NTM-tensorflow" -> "shawntan/neural-turing-machines"
"carpedm20/NTM-tensorflow" -> "google-deepmind/dnc"
"carpedm20/NTM-tensorflow" -> "mokemokechicken/keras_npi"
"carpedm20/NTM-tensorflow" -> "carpedm20/deep-rl-tensorflow" ["e"=1]
"carpedm20/NTM-tensorflow" -> "facebookarchive/MemNN"
"carpedm20/NTM-tensorflow" -> "loudinthecloud/pytorch-ntm"
"carpedm20/NTM-tensorflow" -> "snipsco/ntm-lasagne"
"carpedm20/NTM-tensorflow" -> "snowkylin/ntm"
"carpedm20/NTM-tensorflow" -> "KnHuq/Dynamic-Tensorflow-Tutorial"
"carpedm20/NTM-tensorflow" -> "kaishengtai/torch-ntm"
"carpedm20/NTM-tensorflow" -> "tristandeleu/ntm-one-shot" ["e"=1]
"carpedm20/NTM-tensorflow" -> "siemanko/tensorflow-deepq" ["e"=1]
"snipsco/ntm-lasagne" -> "casperkaae/parmesan" ["e"=1]
"snipsco/ntm-lasagne" -> "shawntan/neural-turing-machines"
"snipsco/ntm-lasagne" -> "ilyasu123/rlntm"
"snipsco/ntm-lasagne" -> "skaae/lasagne-draw" ["e"=1]
"snipsco/ntm-lasagne" -> "jbornschein/draw" ["e"=1]
"snipsco/ntm-lasagne" -> "carpedm20/NTM-tensorflow"
"snipsco/ntm-lasagne" -> "fumin/ntm"
"snipsco/ntm-lasagne" -> "Mostafa-Samir/DNC-tensorflow"
"snipsco/ntm-lasagne" -> "npow/MemN2N"
"aleju/cat-generator" -> "skaae/torch-gan" ["e"=1]
"leongatys/DeepTextures" -> "skaae/torch-gan" ["e"=1]
"skaae/transformer_network" -> "skaae/recurrent-spatial-transformer-code"
"skaae/transformer_network" -> "daviddao/spatial-transformer-tensorflow"
"skaae/transformer_network" -> "qassemoquab/stnbhwd"
"skaae/transformer_network" -> "EderSantana/seya" ["e"=1]
"ericjang/tdb" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"ericjang/tdb" -> "google-deepmind/rc-data" ["e"=1]
"ericjang/tdb" -> "twitter-archive/torch-autograd" ["e"=1]
"ericjang/tdb" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"ericjang/tdb" -> "Element-Research/rnn" ["e"=1]
"npow/MemN2N" -> "npow/MemNN"
"npow/MemN2N" -> "vinhkhuc/MemN2N-babi-python"
"npow/MemN2N" -> "DTU-deeplearning/day3-RNN"
"casperkaae/parmesan" -> "snipsco/ntm-lasagne" ["e"=1]
"macournoyer/neuralconvo" -> "harvardnlp/seq2seq-attn" ["e"=1]
"macournoyer/neuralconvo" -> "Element-Research/rnn" ["e"=1]
"macournoyer/neuralconvo" -> "facebookarchive/MemNN" ["e"=1]
"macournoyer/neuralconvo" -> "yoonkim/lstm-char-cnn" ["e"=1]
"macournoyer/neuralconvo" -> "zhangxiangxiao/Crepe" ["e"=1]
"macournoyer/neuralconvo" -> "vinhkhuc/MemN2N-babi-python" ["e"=1]
"macournoyer/neuralconvo" -> "carpedm20/awesome-torch" ["e"=1]
"twitter-archive/torch-dataset" -> "twitter-archive/torch-distlearn"
"twitter-archive/torch-dataset" -> "twitter-archive/torch-thrift"
"twitter-archive/torch-dataset" -> "twitter-archive/torch-ipc"
"twitter-archive/torch-dataset" -> "j-wilson/bot7"
"gwtaylor/theano-rnn" -> "mesnilgr/is13" ["e"=1]
"gwtaylor/theano-rnn" -> "dennybritz/rnn-tutorial-rnnlm" ["e"=1]
"gwtaylor/theano-rnn" -> "dennybritz/rnn-tutorial-gru-lstm" ["e"=1]
"gwtaylor/theano-rnn" -> "wojciechz/learning_to_execute" ["e"=1]
"hardmaru/write-rnn-tensorflow" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"hardmaru/write-rnn-tensorflow" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"hardmaru/write-rnn-tensorflow" -> "carpedm20/NTM-tensorflow" ["e"=1]
"shuzi/insuranceQA" -> "google-deepmind/rc-data" ["e"=1]
"Moodstocks/inception-v3.torch" -> "soumith/inception.torch"
"Moodstocks/inception-v3.torch" -> "soumith/net2net.torch"
"Moodstocks/inception-v3.torch" -> "fmassa/optimize-net"
"Moodstocks/inception-v3.torch" -> "eladhoffer/ImageNet-Training"
"siemanko/tf-adversarial" -> "Sohl-Dickstein/Sum-of-Functions-Optimizer" ["e"=1]
"siemanko/tf-adversarial" -> "yueatsprograms/Stochastic_Depth"
"siemanko/tf-adversarial" -> "dritchie/adnn"
"siemanko/tf-adversarial" -> "googleglass/mirror-quickstart-python" ["e"=1]
"ianozsvald/data_science_delivered" -> "jxieeducation/DIY-Data-Science" ["e"=1]
"ilyasu123/rlntm" -> "wojzaremba/algorithm-learning"
"ilyasu123/rlntm" -> "kkurach/math_learning"
"dritchie/adnn" -> "siemanko/tf-adversarial"
"hycis/TensorGraph" -> "cgarciae/tensorbuilder"
"soumith/inception.torch" -> "Moodstocks/inception-v3.torch"
"GradySimon/tensorflow-glove" -> "carpedm20/neural-summary-tensorflow" ["e"=1]
"XingxingZhang/rnnpg" -> "fumin/ntm" ["e"=1]
"clementfarabet/torch-ios" -> "soumith/torch-android"
"clementfarabet/torch-ios" -> "Element-Research/hypero"
"clementfarabet/torch-ios" -> "VisionLabs/torch-opencv"
"clementfarabet/ipam-tutorials" -> "torch/tutorials"
"nyu-dl/NLP_DL_Lecture_Note" -> "KnHuq/Dynamic-Tensorflow-Tutorial" ["e"=1]
"mila-iqia/platoon" -> "npow/MemN2N" ["e"=1]
"twitter-archive/torch-ipc" -> "twitter-archive/torch-distlearn"
"twitter-archive/torch-ipc" -> "twitter-archive/torch-dataset"
"twitter-archive/torch-ipc" -> "twitter-archive/torch-thrift"
"twitter-archive/torch-ipc" -> "shanlior/Async-EASGD"
"lipiji/hierarchical-encoder-decoder" -> "jiweil/Hierarchical-Neural-Autoencoder"
"deepcoord/seq2seq" -> "iassael/torch-linearo"
"deepcoord/seq2seq" -> "cheng6076/mlm"
"jiweil/mutli-sense-embedding" -> "jiweil/RST_Discourse_Parsing"
"Kaixhin/nninit" -> "e-lab/torch-toolbox"
"Kaixhin/nninit" -> "iassael/torch-bnlstm"
"Kaixhin/nninit" -> "gpleiss/nnlr"
"Kaixhin/nninit" -> "Kaixhin/torch-pastalog"
"Kaixhin/nninit" -> "clementfarabet/lua---nnx"
"twitter-archive/torch-thrift" -> "twitter-archive/torch-dataset"
"brmson/dataset-sts" -> "ryankiros/skip-thoughts" ["e"=1]
"brmson/dataset-sts" -> "facebookarchive/MemNN" ["e"=1]
"yukezhu/tensorflow-reinforce" -> "facebookarchive/MIXER" ["e"=1]
"explosion/sense2vec" -> "ryankiros/skip-thoughts" ["e"=1]
"carpedm20/variational-text-tensorflow" -> "facebookarchive/MIXER" ["e"=1]
"carpedm20/variational-text-tensorflow" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"carpedm20/variational-text-tensorflow" -> "carpedm20/neural-summary-tensorflow" ["e"=1]
"pavelgonchar/colornet" -> "ryankiros/neural-storyteller" ["e"=1]
"facebookresearch/pysparnn" -> "facebookresearch/CommAI-env" ["e"=1]
"facebookresearch/pysparnn" -> "facebookresearch/adaptive-softmax" ["e"=1]
"alexjc/neural-doodle" -> "ryankiros/neural-storyteller" ["e"=1]
"facebookresearch/darkforestGo" -> "facebookarchive/torchnet" ["e"=1]
"facebookresearch/darkforestGo" -> "facebookresearch/CommAI-env" ["e"=1]
"jisungk/deepjazz" -> "ryankiros/neural-storyteller" ["e"=1]
"megvii-research/neural-painter" -> "staturecrane/dcgan_vae_torch" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "gcr/torch-residual-networks" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "DeepMark/deepmark" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "soumith/imagenet-multiGPU.torch" ["e"=1]
"lmthang/thesis" -> "harvardnlp/seq2seq-attn" ["e"=1]
"lmthang/thesis" -> "yoonkim/lstm-char-cnn" ["e"=1]
"jcjohnson/torch-rnn" -> "karpathy/char-rnn" ["e"=1]
"jcjohnson/torch-rnn" -> "Element-Research/rnn"
"jcjohnson/torch-rnn" -> "sherjilozair/char-rnn-tensorflow"
"jcjohnson/torch-rnn" -> "crisbal/docker-torch-rnn"
"jcjohnson/torch-rnn" -> "torch/nn"
"jcjohnson/torch-rnn" -> "karpathy/neuraltalk2" ["e"=1]
"jcjohnson/torch-rnn" -> "harvardnlp/seq2seq-attn"
"jcjohnson/torch-rnn" -> "facebookarchive/fb.resnet.torch" ["e"=1]
"jcjohnson/torch-rnn" -> "soumith/dcgan.torch" ["e"=1]
"jcjohnson/torch-rnn" -> "jcjohnson/densecap" ["e"=1]
"jcjohnson/torch-rnn" -> "facebookarchive/torchnet"
"jcjohnson/torch-rnn" -> "yoonkim/lstm-char-cnn"
"jcjohnson/torch-rnn" -> "carpedm20/awesome-torch"
"jcjohnson/torch-rnn" -> "facebookarchive/MemNN"
"jcjohnson/torch-rnn" -> "ryankiros/neural-storyteller"
"crisbal/docker-torch-rnn" -> "jcjohnson/torch-rnn"
"Maratyszcza/NNPACK" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"Maratyszcza/NNPACK" -> "DeepMark/deepmark" ["e"=1]
"rkadlec/ubuntu-ranking-dataset-creator" -> "facebookarchive/bAbI-tasks" ["e"=1]
"rkadlec/ubuntu-ranking-dataset-creator" -> "facebookarchive/MemNN" ["e"=1]
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus"
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "therne/dmn-tensorflow"
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "vinhkhuc/MemN2N-babi-python"
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "barronalex/Dynamic-Memory-Networks-in-TensorFlow"
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "swstarlab/DynamicMemoryNetworks"
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "facebookarchive/MemNN"
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "npow/MemNN"
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" ["e"=1]
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "facebookarchive/bAbI-tasks"
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "ofirnachum/tree_rnn"
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"YerevaNN/Dynamic-memory-networks-in-Theano" -> "carpedm20/MemN2N-tensorflow"
"ericjang/draw" -> "vivanov879/draw" ["e"=1]
"ericjang/draw" -> "carpedm20/NTM-tensorflow" ["e"=1]
"imodpasteur/lutorpy" -> "Kaixhin/nninit"
"imodpasteur/lutorpy" -> "ludc/rltorch"
"imodpasteur/lutorpy" -> "VisionLabs/torch-opencv"
"imodpasteur/lutorpy" -> "nicholas-leonard/torch-in-action"
"imodpasteur/lutorpy" -> "Aysegul/torch-visbox"
"imodpasteur/lutorpy" -> "Atcold/torch-Developer-Guide"
"imodpasteur/lutorpy" -> "hughperkins/pytorch"
"imodpasteur/lutorpy" -> "fmassa/optimize-net"
"imodpasteur/lutorpy" -> "bshillingford/python-torchfile"
"imodpasteur/lutorpy" -> "Element-Research/dpnn"
"imodpasteur/lutorpy" -> "skaae/torch-gan"
"imodpasteur/lutorpy" -> "jonathantompson/torchzlib"
"imodpasteur/lutorpy" -> "DeepMark/deepmark"
"imodpasteur/lutorpy" -> "iassael/torch-bnlstm"
"imodpasteur/lutorpy" -> "e-lab/Torch7-profiling"
"harvardnlp/seq2seq-attn" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"harvardnlp/seq2seq-attn" -> "Element-Research/rnn"
"harvardnlp/seq2seq-attn" -> "yoonkim/lstm-char-cnn"
"harvardnlp/seq2seq-attn" -> "facebookarchive/MemNN"
"harvardnlp/seq2seq-attn" -> "macournoyer/neuralconvo" ["e"=1]
"harvardnlp/seq2seq-attn" -> "farizrahman4u/seq2seq" ["e"=1]
"harvardnlp/seq2seq-attn" -> "OpenNMT/OpenNMT" ["e"=1]
"harvardnlp/seq2seq-attn" -> "ryankiros/skip-thoughts"
"harvardnlp/seq2seq-attn" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"harvardnlp/seq2seq-attn" -> "NickShahML/tensorflow_with_latest_papers"
"harvardnlp/seq2seq-attn" -> "facebookarchive/NAMAS" ["e"=1]
"harvardnlp/seq2seq-attn" -> "lisa-groundhog/GroundHog" ["e"=1]
"harvardnlp/seq2seq-attn" -> "facebookarchive/MIXER"
"harvardnlp/seq2seq-attn" -> "harvardnlp/sent-conv-torch"
"harvardnlp/seq2seq-attn" -> "wojzaremba/lstm"
"karthikncode/nlp-datasets" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"karthikncode/nlp-datasets" -> "google-deepmind/rc-data" ["e"=1]
"karthikncode/nlp-datasets" -> "facebookarchive/bAbI-tasks" ["e"=1]
"karthikncode/nlp-datasets" -> "facebookarchive/MemNN" ["e"=1]
"y0ast/VAE-TensorFlow" -> "y0ast/VAE-Torch" ["e"=1]
"mokemokechicken/keras_npi" -> "DeNeutoy/act-tensorflow"
"mokemokechicken/keras_npi" -> "carpedm20/NTM-tensorflow"
"mokemokechicken/keras_npi" -> "siddk/npi"
"mokemokechicken/keras_npi" -> "EderSantana/gumbel"
"mokemokechicken/keras_npi" -> "shawntan/neural-turing-machines"
"ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus" -> "YerevaNN/Dynamic-memory-networks-in-Theano"
"ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus" -> "barronalex/Dynamic-Memory-Networks-in-TensorFlow"
"ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus" -> "swstarlab/DynamicMemoryNetworks"
"ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus" -> "therne/dmn-tensorflow"
"ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus" -> "llSourcell/How_to_make_a_chatbot" ["e"=1]
"ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus" -> "vinhkhuc/MemN2N-babi-python"
"awentzonline/image-analogies" -> "ryankiros/neural-storyteller" ["e"=1]
"piiswrong/deep3d" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"piiswrong/deep3d" -> "DeepMark/deepmark" ["e"=1]
"fmassa/optimize-net" -> "twitter-archive/torch-autograd"
"fmassa/optimize-net" -> "Kaixhin/nninit"
"fmassa/optimize-net" -> "Element-Research/dpnn"
"fmassa/optimize-net" -> "Moodstocks/inception-v3.torch"
"fmassa/optimize-net" -> "yueatsprograms/Stochastic_Depth"
"fmassa/optimize-net" -> "twitter-archive/torch-ipc"
"fmassa/optimize-net" -> "e-lab/torch-toolbox"
"fmassa/optimize-net" -> "Kaixhin/torch-pastalog"
"fmassa/optimize-net" -> "Moodstocks/gtsrb.torch"
"fmassa/optimize-net" -> "iassael/torch-bnlstm"
"fmassa/optimize-net" -> "twitter-archive/torch-twrl"
"fmassa/optimize-net" -> "facebookarchive/torchnet"
"fmassa/optimize-net" -> "fmassa/object-detection.torch"
"fmassa/optimize-net" -> "facebookarchive/torch-rnnlib"
"fmassa/optimize-net" -> "ludc/rltorch"
"codekansas/keras-language-modeling" -> "harvardnlp/seq2seq-attn" ["e"=1]
"codekansas/keras-language-modeling" -> "ryankiros/skip-thoughts" ["e"=1]
"codekansas/keras-language-modeling" -> "alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" ["e"=1]
"crazydonkey200/tensorflow-char-rnn" -> "crazydonkey200/minimal-nn"
"crazydonkey200/tensorflow-char-rnn" -> "sherjilozair/char-rnn-tensorflow"
"crazydonkey200/tensorflow-char-rnn" -> "hunkim/word-rnn-tensorflow"
"crazydonkey200/tensorflow-char-rnn" -> "carpedm20/lstm-char-cnn-tensorflow"
"crazydonkey200/tensorflow-char-rnn" -> "hit-computer/char-rnn-tf" ["e"=1]
"crazydonkey200/tensorflow-char-rnn" -> "hit-computer/char-rnn" ["e"=1]
"DeepMark/deepmark" -> "fmassa/optimize-net"
"DeepMark/deepmark" -> "glample/rnn-benchmarks"
"DeepMark/deepmark" -> "twitter-archive/torch-autograd"
"DeepMark/deepmark" -> "yueatsprograms/Stochastic_Depth"
"DeepMark/deepmark" -> "e-lab/torch-toolbox"
"DeepMark/deepmark" -> "baidu-research/persistent-rnn"
"DeepMark/deepmark" -> "Kaixhin/nninit"
"DeepMark/deepmark" -> "soumith/convnet-benchmarks" ["e"=1]
"DeepMark/deepmark" -> "NervanaSystems/nervanagpu" ["e"=1]
"DeepMark/deepmark" -> "twitter-archive/torch-dataset"
"DeepMark/deepmark" -> "soumith/cudnn.torch"
"DeepMark/deepmark" -> "iassael/torch-bnlstm"
"DeepMark/deepmark" -> "gcr/torch-residual-networks"
"DeepMark/deepmark" -> "imodpasteur/lutorpy"
"DeepMark/deepmark" -> "ludc/rltorch"
"sjchoi86/Deep-Learning-101" -> "KnHuq/Dynamic-Tensorflow-Tutorial" ["e"=1]
"DmitryUlyanov/texture_nets" -> "szagoruyko/loadcaffe" ["e"=1]
"DmitryUlyanov/texture_nets" -> "skaae/torch-gan" ["e"=1]
"DmitryUlyanov/texture_nets" -> "facebookarchive/torchnet" ["e"=1]
"somewacko/deconvfaces" -> "facebookresearch/CommAI-env" ["e"=1]
"jwyang/JULE.torch" -> "Atcold/torch-TripletEmbedding" ["e"=1]
"szagoruyko/wide-residual-networks" -> "facebookarchive/torchnet" ["e"=1]
"szagoruyko/wide-residual-networks" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"szagoruyko/wide-residual-networks" -> "szagoruyko/cifar.torch" ["e"=1]
"szagoruyko/wide-residual-networks" -> "gcr/torch-residual-networks" ["e"=1]
"szagoruyko/wide-residual-networks" -> "fmassa/optimize-net" ["e"=1]
"szagoruyko/wide-residual-networks" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"torch/tutorials" -> "torch/demos"
"torch/tutorials" -> "nicholas-leonard/dp"
"torch/tutorials" -> "soumith/cvpr2015"
"torch/tutorials" -> "clementfarabet/ipam-tutorials"
"torch/tutorials" -> "carpedm20/awesome-torch"
"torch/tutorials" -> "Element-Research/rnn"
"torch/tutorials" -> "soumith/imagenet-multiGPU.torch"
"torch/tutorials" -> "torch/nn"
"torch/tutorials" -> "torch/nngraph"
"torch/tutorials" -> "facebookarchive/fblualib"
"torch/tutorials" -> "facebookarchive/iTorch"
"torch/tutorials" -> "twitter-archive/torch-autograd"
"torch/tutorials" -> "torch/optim"
"torch/tutorials" -> "wojzaremba/lstm"
"torch/tutorials" -> "szagoruyko/loadcaffe"
"martin-gorner/tensorflow-mnist-tutorial" -> "sugyan/tensorflow-mnist" ["e"=1]
"baidu-research/persistent-rnn" -> "DeepMark/deepmark"
"baidu-research/persistent-rnn" -> "yueatsprograms/Stochastic_Depth"
"baidu-research/persistent-rnn" -> "facebookarchive/torchnet"
"baidu-research/persistent-rnn" -> "facebookarchive/MIXER"
"baidu-research/persistent-rnn" -> "twitter-archive/torch-twrl"
"baidu-research/persistent-rnn" -> "facebookarchive/fb-caffe-exts"
"baidu-research/persistent-rnn" -> "openai/openai-gemm" ["e"=1]
"baidu-research/persistent-rnn" -> "facebookresearch/adaptive-softmax"
"baidu-research/persistent-rnn" -> "yandex/faster-rnnlm"
"baidu-research/persistent-rnn" -> "ryankiros/layer-norm"
"baidu-research/persistent-rnn" -> "karpathy/paper-notes"
"baidu-research/persistent-rnn" -> "joschu/cgt" ["e"=1]
"baidu-research/persistent-rnn" -> "tqchen/mxnet-gan" ["e"=1]
"baidu-research/persistent-rnn" -> "dmlc/minpy" ["e"=1]
"baidu-research/persistent-rnn" -> "NickShahML/tensorflow_with_latest_papers"
"shurans/DeepSlidingShape" -> "PrincetonVision/marvin" ["e"=1]
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "yoonkim/CNN_sentence"
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "richliao/textClassifier" ["e"=1]
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "bhaveshoswal/CNN-text-classification-keras"
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "shagunsodhani/CNN-Sentence-Classifier"
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "dennybritz/cnn-text-classification-tf" ["e"=1]
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "codekansas/keras-language-modeling" ["e"=1]
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "harvardnlp/sent-conv-torch"
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "jiegzhan/multi-class-text-classification-cnn-rnn" ["e"=1]
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "cahya-wirawan/cnn-text-classification-tf" ["e"=1]
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "bradleypallen/keras-quora-question-pairs" ["e"=1]
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "salestock/fastText.py" ["e"=1]
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "raghakot/keras-text"
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "airalcorn2/Recurrent-Convolutional-Neural-Network-Text-Classifier" ["e"=1]
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "yoonkim/lstm-char-cnn"
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" -> "farizrahman4u/seq2seq" ["e"=1]
"gy910210/rnn-from-scratch" -> "dennybritz/rnn-tutorial-rnnlm" ["e"=1]
"floydhub/dl-setup" -> "ryankiros/skip-thoughts" ["e"=1]
"floydhub/dl-setup" -> "jxieeducation/DIY-Data-Science" ["e"=1]
"rewonc/pastalog" -> "Kaixhin/torch-pastalog" ["e"=1]
"rewonc/pastalog" -> "twitter-archive/torch-autograd" ["e"=1]
"rewonc/pastalog" -> "Kaixhin/nninit" ["e"=1]
"rewonc/pastalog" -> "DeepMark/deepmark" ["e"=1]
"rewonc/pastalog" -> "tkocisky/oxnn" ["e"=1]
"rewonc/pastalog" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"Kaixhin/torch-pastalog" -> "karandwivedi42/imagenet-multiGPU.torchnet"
"Kaixhin/torch-pastalog" -> "Element-Research/hypero"
"iassael/torch-bnlstm" -> "nicholas-leonard/torch-in-action"
"iassael/torch-bnlstm" -> "Kaixhin/rlenvs"
"iassael/torch-bnlstm" -> "vivanov879/draw"
"iassael/torch-bnlstm" -> "Kaixhin/nninit"
"iassael/torch-bnlstm" -> "eladhoffer/recurrent.torch"
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "brendenlake/BPL" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "google-deepmind/rc-data" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "shawntan/neural-turing-machines" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "YerevaNN/Dynamic-memory-networks-in-Theano" ["e"=1]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"hunkim/word-rnn-tensorflow" -> "sherjilozair/char-rnn-tensorflow"
"hunkim/word-rnn-tensorflow" -> "carpedm20/lstm-char-cnn-tensorflow"
"hunkim/word-rnn-tensorflow" -> "larspars/word-rnn"
"hunkim/word-rnn-tensorflow" -> "crazydonkey200/tensorflow-char-rnn"
"hunkim/word-rnn-tensorflow" -> "yoonkim/lstm-char-cnn"
"hunkim/word-rnn-tensorflow" -> "ilivans/tf-rnn-attention" ["e"=1]
"hunkim/word-rnn-tensorflow" -> "karpathy/char-rnn" ["e"=1]
"hunkim/word-rnn-tensorflow" -> "google/seq2seq" ["e"=1]
"hunkim/word-rnn-tensorflow" -> "TensorFlowKR/awesome_tensorflow_implementations" ["e"=1]
"hunkim/word-rnn-tensorflow" -> "ryankiros/skip-thoughts"
"hunkim/word-rnn-tensorflow" -> "dennybritz/cnn-text-classification-tf" ["e"=1]
"hunkim/word-rnn-tensorflow" -> "jcjohnson/torch-rnn"
"hunkim/word-rnn-tensorflow" -> "dennybritz/rnn-tutorial-rnnlm"
"hunkim/word-rnn-tensorflow" -> "NickShahML/tensorflow_with_latest_papers"
"hunkim/word-rnn-tensorflow" -> "dennybritz/tf-rnn"
"ofirnachum/sequence_gan" -> "facebookarchive/MIXER" ["e"=1]
"alexandres/lexvec" -> "ryankiros/skip-thoughts" ["e"=1]
"mtomassoli/papers" -> "Ivaylo-Popov/Theano-Lights" ["e"=1]
"mtomassoli/papers" -> "samjabrahams/tensorflow-white-paper-notes"
"mtomassoli/papers" -> "jxieeducation/DIY-Data-Science"
"mtomassoli/papers" -> "KnHuq/Dynamic-Tensorflow-Tutorial"
"IPGP/scientific_python_cheat_sheet" -> "mtomassoli/papers"
"SeanNaren/deepspeech.torch" -> "clementfarabet/lua---nnx"
"SeanNaren/deepspeech.torch" -> "iassael/torch-bnlstm"
"SeanNaren/deepspeech.torch" -> "rizar/attention-lvcsr" ["e"=1]
"SeanNaren/deepspeech.torch" -> "NervanaSystems/deepspeech" ["e"=1]
"SeanNaren/deepspeech.torch" -> "e-lab/torch-toolbox"
"SeanNaren/deepspeech.torch" -> "ludc/rltorch"
"SeanNaren/deepspeech.torch" -> "Kaixhin/nninit"
"SeanNaren/deepspeech.torch" -> "facebookarchive/SCRNNs"
"SeanNaren/deepspeech.torch" -> "baidu-research/ba-dls-deepspeech" ["e"=1]
"SeanNaren/deepspeech.torch" -> "soumith/cudnn.torch"
"SeanNaren/deepspeech.torch" -> "facebookarchive/torch-rnnlib"
"SeanNaren/deepspeech.torch" -> "imodpasteur/lutorpy"
"SeanNaren/deepspeech.torch" -> "lingochamp/kaldi-ctc" ["e"=1]
"SeanNaren/deepspeech.torch" -> "Element-Research/dpnn"
"SeanNaren/deepspeech.torch" -> "glample/rnn-benchmarks"
"TensorFlowKR/awesome_tensorflow_implementations" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"riga/tfdeploy" -> "jiamings/fast-weights" ["e"=1]
"chuanli11/MGANs" -> "staturecrane/dcgan_vae_torch" ["e"=1]
"bhaveshoswal/CNN-text-classification-keras" -> "raghakot/keras-text"
"bhaveshoswal/CNN-text-classification-keras" -> "mhjabreel/CharCnn_Keras"
"bhaveshoswal/CNN-text-classification-keras" -> "alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras"
"bhaveshoswal/CNN-text-classification-keras" -> "geniusai-research/Text-Classification"
"Element-Research/dataload" -> "aciditeam/torch-models"
"Element-Research/dataload" -> "Element-Research/hypero"
"Element-Research/dataload" -> "Element-Research/dpnn"
"Element-Research/dataload" -> "hsheil/rnn-examples"
"mahyarnajibi/fast-rcnn-torch" -> "andreaskoepf/faster-rcnn.torch"
"mahyarnajibi/fast-rcnn-torch" -> "fmassa/object-detection.torch"
"mahyarnajibi/fast-rcnn-torch" -> "szagoruyko/imagine-nn"
"mahyarnajibi/fast-rcnn-torch" -> "ruotianluo/Faster-RCNN-Densecap-torch"
"mahyarnajibi/fast-rcnn-torch" -> "eladhoffer/ImageNet-Training"
"bshillingford/python-torchfile" -> "Kaixhin/nninit"
"bshillingford/python-torchfile" -> "fmassa/optimize-net"
"bshillingford/python-torchfile" -> "clcarwin/convert_torch_to_pytorch" ["e"=1]
"bshillingford/python-torchfile" -> "imodpasteur/lutorpy"
"bshillingford/python-torchfile" -> "VisionLabs/torch-opencv"
"bshillingford/python-torchfile" -> "gpleiss/nnlr"
"bshillingford/python-torchfile" -> "bshillingford/autobw.torch"
"bshillingford/python-torchfile" -> "twitter-archive/torch-ipc"
"facebookarchive/MIXER" -> "rizar/actor-critic-public"
"facebookarchive/MIXER" -> "facebookresearch/adaptive-softmax"
"facebookarchive/MIXER" -> "facebookarchive/torch-rnnlib"
"facebookarchive/MIXER" -> "twitter-archive/torch-twrl"
"facebookarchive/MIXER" -> "iassael/torch-bnlstm"
"facebookarchive/MIXER" -> "ludc/rltorch"
"facebookarchive/MIXER" -> "ilyasu123/rlntm"
"facebookarchive/MIXER" -> "harvardnlp/seq2seq-attn"
"facebookarchive/MIXER" -> "harvardnlp/BSO"
"facebookarchive/MIXER" -> "michaelfarrell76/End-To-End-Generative-Dialogue" ["e"=1]
"facebookarchive/MIXER" -> "fmassa/optimize-net"
"facebookarchive/MIXER" -> "Element-Research/dpnn"
"facebookarchive/MIXER" -> "torch/nngraph"
"facebookarchive/MIXER" -> "Element-Research/rnn"
"facebookarchive/UETorch" -> "soumith/cudnn.torch"
"facebookarchive/UETorch" -> "twitter-archive/torch-autograd"
"facebookarchive/UETorch" -> "ludc/rltorch"
"facebookarchive/UETorch" -> "soumith/deepmind-atari"
"facebookarchive/UETorch" -> "fmassa/optimize-net"
"facebookarchive/UETorch" -> "Kaixhin/Atari" ["e"=1]
"facebookarchive/UETorch" -> "soumith/net2net.torch"
"facebookarchive/UETorch" -> "yueatsprograms/Stochastic_Depth"
"facebookarchive/UETorch" -> "Kaixhin/rlenvs"
"facebookarchive/UETorch" -> "torch/nngraph"
"facebookarchive/UETorch" -> "Kaixhin/nninit"
"facebookarchive/UETorch" -> "DeepMark/deepmark"
"facebookarchive/UETorch" -> "tkocisky/oxnn"
"facebookarchive/UETorch" -> "Moodstocks/inception-v3.torch"
"yueatsprograms/Stochastic_Depth" -> "fmassa/optimize-net"
"yueatsprograms/Stochastic_Depth" -> "skaae/torch-gan"
"yueatsprograms/Stochastic_Depth" -> "gcr/torch-residual-networks"
"yueatsprograms/Stochastic_Depth" -> "DeepMark/deepmark"
"yueatsprograms/Stochastic_Depth" -> "siemanko/tf-adversarial"
"yueatsprograms/Stochastic_Depth" -> "twitter-archive/torch-autograd"
"yueatsprograms/Stochastic_Depth" -> "soumith/imagenet-multiGPU.torch"
"yueatsprograms/Stochastic_Depth" -> "Moodstocks/gtsrb.torch"
"yueatsprograms/Stochastic_Depth" -> "facebookarchive/torchnet"
"yueatsprograms/Stochastic_Depth" -> "iassael/torch-bnlstm"
"yueatsprograms/Stochastic_Depth" -> "facebookarchive/fblualib"
"yueatsprograms/Stochastic_Depth" -> "KaimingHe/resnet-1k-layers" ["e"=1]
"yueatsprograms/Stochastic_Depth" -> "y0ast/VAE-Torch"
"yueatsprograms/Stochastic_Depth" -> "tkocisky/oxnn"
"yueatsprograms/Stochastic_Depth" -> "e-lab/torch-toolbox"
"alex-berard/seq2seq" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"IshmaelBelghazi/ALI" -> "skaae/torch-gan" ["e"=1]
"carpedm20/neural-summary-tensorflow" -> "facebookarchive/NAMAS" ["e"=1]
"carpedm20/neural-summary-tensorflow" -> "carpedm20/attentive-reader-tensorflow" ["e"=1]
"carpedm20/neural-summary-tensorflow" -> "deeplearningparis/dl-attention"
"carpedm20/neural-summary-tensorflow" -> "thunlp/TensorFlow-Summarization" ["e"=1]
"carpedm20/neural-summary-tensorflow" -> "jiweil/Hierarchical-Neural-Autoencoder"
"carpedm20/neural-summary-tensorflow" -> "carpedm20/MemN2N-tensorflow"
"carpedm20/neural-summary-tensorflow" -> "carpedm20/lstm-char-cnn-tensorflow"
"carpedm20/neural-summary-tensorflow" -> "harpribot/deep-summarization" ["e"=1]
"glample/rnn-benchmarks" -> "twitter-archive/torch-ipc"
"glample/rnn-benchmarks" -> "iassael/torch-bnlstm"
"glample/rnn-benchmarks" -> "DeepMark/deepmark"
"glample/rnn-benchmarks" -> "hsheil/rnn-examples"
"glample/rnn-benchmarks" -> "eladhoffer/recurrent.torch"
"bshillingford/fbdebugger-minimal" -> "j-wilson/bot7"
"niektemme/tensorflow-mnist-predict" -> "wlmnzf/tensorflow-train"
"udibr/headlines" -> "carpedm20/neural-summary-tensorflow" ["e"=1]
"daviddao/spatial-transformer-tensorflow" -> "kevinzakka/spatial-transformer-network"
"daviddao/spatial-transformer-tensorflow" -> "skaae/transformer_network"
"daviddao/spatial-transformer-tensorflow" -> "skaae/recurrent-spatial-transformer-code"
"daviddao/spatial-transformer-tensorflow" -> "chenhsuanlin/inverse-compositional-STN"
"daviddao/spatial-transformer-tensorflow" -> "iwyoo/DIRNet-tensorflow" ["e"=1]
"daviddao/spatial-transformer-tensorflow" -> "iwyoo/TPS_STN-tensorflow"
"daviddao/spatial-transformer-tensorflow" -> "oarriaga/STN.keras"
"daviddao/spatial-transformer-tensorflow" -> "AlexHex7/Spatial-Transformer-Networks_pytorch"
"daviddao/spatial-transformer-tensorflow" -> "WarBean/tps_stn_pytorch"
"daviddao/spatial-transformer-tensorflow" -> "qassemoquab/stnbhwd"
"daviddao/spatial-transformer-tensorflow" -> "zsdonghao/Spatial-Transformer-Nets"
"daviddao/spatial-transformer-tensorflow" -> "Moodstocks/gtsrb.torch"
"yaringal/BayesianRNN" -> "twitter-archive/torch-autograd" ["e"=1]
"yaringal/BayesianRNN" -> "iassael/torch-bnlstm" ["e"=1]
"yaringal/BayesianRNN" -> "wojzaremba/lstm" ["e"=1]
"yaringal/BayesianRNN" -> "facebookarchive/SCRNNs" ["e"=1]
"NVIDIA/gpu-rest-engine" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"sherjilozair/dqn" -> "siemanko/tf-adversarial" ["e"=1]
"sherjilozair/dqn" -> "mokemokechicken/keras_npi" ["e"=1]
"ofirnachum/tree_rnn" -> "4d55397500/RecursiveNeuralTensorNetwork"
"ofirnachum/tree_rnn" -> "sapruash/RecursiveNN" ["e"=1]
"ofirnachum/tree_rnn" -> "YerevaNN/Dynamic-memory-networks-in-Theano"
"cooijmanstim/recurrent-batch-normalization" -> "tristandeleu/neural-gpu"
"jxieeducation/DIY-Data-Science" -> "KnHuq/Dynamic-Tensorflow-Tutorial"
"jxieeducation/DIY-Data-Science" -> "NickShahML/tensorflow_with_latest_papers"
"jxieeducation/DIY-Data-Science" -> "mila-iqia/summerschool2015" ["e"=1]
"jxieeducation/DIY-Data-Science" -> "ryankiros/skip-thoughts"
"jxieeducation/DIY-Data-Science" -> "carpedm20/variational-text-tensorflow" ["e"=1]
"jxieeducation/DIY-Data-Science" -> "jiweil/Hierarchical-Neural-Autoencoder"
"jxieeducation/DIY-Data-Science" -> "harvardnlp/seq2seq-attn"
"IntelLabs/rnnlm" -> "yandex/faster-rnnlm"
"danpovey/pocolm" -> "danpovey/quantization"
"Guim3/IcGAN" -> "skaae/torch-gan" ["e"=1]
"RuiShu/cvae" -> "y0ast/VAE-Torch" ["e"=1]
"phvu/grid-lstm-tensorflow" -> "philipperemy/tensorflow-grid-lstm"
"phvu/grid-lstm-tensorflow" -> "coreylynch/grid-lstm"
"jiweil/RST_Discourse_Parsing" -> "jiweil/Sequence-Models-on-Stanford-Treebank"
"e-lab/ENet-training" -> "e-lab/torch-toolbox" ["e"=1]
"facebookresearch/deepmask" -> "facebookarchive/torchnet" ["e"=1]
"lukaemon/Coursera-ML-AndrewNg" -> "KnHuq/Dynamic-Tensorflow-Tutorial" ["e"=1]
"lferry007/LargeVis" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"allenai/bi-att-flow" -> "facebookarchive/MemNN" ["e"=1]
"allenai/bi-att-flow" -> "google-deepmind/rc-data" ["e"=1]
"NickShahML/tensorflow_with_latest_papers" -> "jzilly/RecurrentHighwayNetworks"
"NickShahML/tensorflow_with_latest_papers" -> "KnHuq/Dynamic-Tensorflow-Tutorial"
"NickShahML/tensorflow_with_latest_papers" -> "harvardnlp/seq2seq-attn"
"NickShahML/tensorflow_with_latest_papers" -> "carpedm20/MemN2N-tensorflow"
"NickShahML/tensorflow_with_latest_papers" -> "ryankiros/layer-norm"
"NickShahML/tensorflow_with_latest_papers" -> "Element-Research/rnn"
"NickShahML/tensorflow_with_latest_papers" -> "paarthneekhara/byteNet-tensorflow" ["e"=1]
"NickShahML/tensorflow_with_latest_papers" -> "ryankiros/skip-thoughts"
"NickShahML/tensorflow_with_latest_papers" -> "ericjang/tdb" ["e"=1]
"NickShahML/tensorflow_with_latest_papers" -> "dennybritz/deeplearning-papernotes" ["e"=1]
"NickShahML/tensorflow_with_latest_papers" -> "karpathy/paper-notes"
"NickShahML/tensorflow_with_latest_papers" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"NickShahML/tensorflow_with_latest_papers" -> "carpedm20/deep-rl-tensorflow" ["e"=1]
"NickShahML/tensorflow_with_latest_papers" -> "yoonkim/lstm-char-cnn"
"NickShahML/tensorflow_with_latest_papers" -> "wojzaremba/lstm"
"carpedm20/pixel-rnn-tensorflow" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"carpedm20/pixel-rnn-tensorflow" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"carpedm20/pixel-rnn-tensorflow" -> "ryankiros/layer-norm" ["e"=1]
"paarthneekhara/text-to-image" -> "ryankiros/skip-thoughts" ["e"=1]
"kvfrans/variational-autoencoder" -> "y0ast/VAE-Torch" ["e"=1]
"dapurv5/awesome-question-answering" -> "siyuanzhao/key-value-memory-networks" ["e"=1]
"dapurv5/awesome-question-answering" -> "dapurv5/neural_kbqa" ["e"=1]
"allenai/XNOR-Net" -> "soumith/imagenet-multiGPU.torch" ["e"=1]
"llSourcell/Chatbot-AI" -> "ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus" ["e"=1]
"farizrahman4u/recurrentshop" -> "jzilly/RecurrentHighwayNetworks" ["e"=1]
"neubig/nmt-tips" -> "harvardnlp/seq2seq-attn" ["e"=1]
"karpathy/paper-notes" -> "AntreasAntoniou/MatchingNetworks" ["e"=1]
"karpathy/paper-notes" -> "yueatsprograms/Stochastic_Depth"
"karpathy/paper-notes" -> "NickShahML/tensorflow_with_latest_papers"
"karpathy/paper-notes" -> "tristandeleu/ntm-one-shot" ["e"=1]
"karpathy/paper-notes" -> "reedscot/nips2016" ["e"=1]
"karpathy/paper-notes" -> "baidu-research/persistent-rnn"
"karpathy/paper-notes" -> "ludc/rltorch"
"karpathy/paper-notes" -> "carpedm20/deep-rl-tensorflow" ["e"=1]
"karpathy/paper-notes" -> "miyosuda/async_deep_reinforce" ["e"=1]
"karpathy/paper-notes" -> "dennybritz/deeplearning-papernotes" ["e"=1]
"karpathy/paper-notes" -> "hi-abhi/tensorflow-value-iteration-networks" ["e"=1]
"karpathy/paper-notes" -> "twitter-research/meta-learning-lstm" ["e"=1]
"karpathy/paper-notes" -> "facebookarchive/MemNN"
"karpathy/paper-notes" -> "karpathy/tf-agent" ["e"=1]
"karpathy/paper-notes" -> "google-research-datasets/wiki-reading" ["e"=1]
"stanfordnlp/cocoa" -> "MiuLab/KB-InfoBot" ["e"=1]
"stanfordnlp/cocoa" -> "batra-mlp-lab/lang-emerge"
"harvardnlp/im2markup" -> "harvardnlp/seq2seq-attn" ["e"=1]
"LantaoYu/SeqGAN" -> "facebookarchive/MemNN" ["e"=1]
"LantaoYu/SeqGAN" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"dennybritz/tf-rnn" -> "NickShahML/tensorflow_with_latest_papers"
"dennybritz/tf-rnn" -> "KnHuq/Dynamic-Tensorflow-Tutorial"
"dennybritz/tf-rnn" -> "carpedm20/attentive-reader-tensorflow" ["e"=1]
"dennybritz/tf-rnn" -> "dennybritz/rnn-tutorial-gru-lstm"
"dennybritz/tf-rnn" -> "ematvey/tensorflow-seq2seq-tutorials" ["e"=1]
"dennybritz/tf-rnn" -> "ikostrikov/TensorFlow-Pointer-Networks" ["e"=1]
"dennybritz/tf-rnn" -> "domluna/memn2n"
"dennybritz/tf-rnn" -> "tokestermw/tensorflow-shakespeare" ["e"=1]
"dennybritz/tf-rnn" -> "dennybritz/rnn-tutorial-rnnlm"
"dennybritz/tf-rnn" -> "dennybritz/chatbot-retrieval" ["e"=1]
"dennybritz/tf-rnn" -> "carpedm20/lstm-char-cnn-tensorflow"
"dennybritz/tf-rnn" -> "carpedm20/MemN2N-tensorflow"
"dennybritz/tf-rnn" -> "OlavHN/bnlstm"
"a16z/ai" -> "facebookresearch/CommAI-env" ["e"=1]
"HadoopIt/rnn-nlu" -> "mesnilgr/is13" ["e"=1]
"salestock/fastText.py" -> "yoonkim/CNN_sentence" ["e"=1]
"salestock/fastText.py" -> "alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" ["e"=1]
"scharmchi/char-level-cnn-tf" -> "lc222/char-cnn-text-classification-tensorflow"
"scharmchi/char-level-cnn-tf" -> "mhjabreel/CharCNN"
"rouseguy/DeepLearning-NLP" -> "KnHuq/Dynamic-Tensorflow-Tutorial" ["e"=1]
"Evolving-AI-Lab/synthesizing" -> "skaae/torch-gan" ["e"=1]
"Evolving-AI-Lab/synthesizing" -> "y0ast/VAE-Torch" ["e"=1]
"cdoersch/vae_tutorial" -> "y0ast/VAE-Torch" ["e"=1]
"alrojo/tensorflow-tutorial" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"alrojo/tensorflow-tutorial" -> "facebookresearch/CommAI-env" ["e"=1]
"facebookresearch/multipathnet" -> "facebookarchive/torchnet" ["e"=1]
"facebookresearch/multipathnet" -> "facebookarchive/fbcunn" ["e"=1]
"facebookresearch/multipathnet" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"facebookresearch/multipathnet" -> "Element-Research/rnn" ["e"=1]
"facebookresearch/multipathnet" -> "soumith/imagenet-multiGPU.torch" ["e"=1]
"Kaixhin/Autoencoders" -> "y0ast/VAE-Torch"
"Kaixhin/Autoencoders" -> "staturecrane/dcgan_vae_torch"
"Kaixhin/Autoencoders" -> "Kaixhin/nninit"
"Kaixhin/Autoencoders" -> "twitter-archive/torch-autograd"
"Kaixhin/Autoencoders" -> "Element-Research/rnn"
"Kaixhin/Autoencoders" -> "fmassa/optimize-net"
"Kaixhin/Autoencoders" -> "iassael/torch-bnlstm"
"Kaixhin/Autoencoders" -> "facebookarchive/MIXER"
"Kaixhin/Autoencoders" -> "skaae/torch-gan"
"Kaixhin/Autoencoders" -> "RuiShu/cvae" ["e"=1]
"Kaixhin/Autoencoders" -> "Element-Research/dpnn"
"Kaixhin/Autoencoders" -> "viorik/ConvLSTM"
"Kaixhin/Autoencoders" -> "twitter-archive/torch-twrl"
"Kaixhin/Autoencoders" -> "aciditeam/torch-models"
"Kaixhin/Autoencoders" -> "Kaixhin/Atari" ["e"=1]
"openai/requests-for-research" -> "tensorflow/fold" ["e"=1]
"openai/requests-for-research" -> "harvardnlp/seq2seq-attn" ["e"=1]
"facebookresearch/CommAI-env" -> "facebookarchive/bAbI-tasks"
"facebookresearch/CommAI-env" -> "facebookarchive/MemNN"
"facebookresearch/CommAI-env" -> "general-ai-challenge/Round1"
"facebookresearch/CommAI-env" -> "facebookresearch/end-to-end-negotiator"
"facebookresearch/CommAI-env" -> "harvardnlp/seq2seq-attn"
"facebookresearch/CommAI-env" -> "Mostafa-Samir/DNC-tensorflow"
"facebookresearch/CommAI-env" -> "ryankiros/skip-thoughts"
"facebookresearch/CommAI-env" -> "tensorflow/fold"
"facebookresearch/CommAI-env" -> "google-deepmind/dnc"
"facebookresearch/CommAI-env" -> "facebookresearch/darkforestGo" ["e"=1]
"facebookresearch/CommAI-env" -> "facebookresearch/fairseq-lua" ["e"=1]
"facebookresearch/CommAI-env" -> "facebookresearch/adaptive-softmax"
"facebookresearch/CommAI-env" -> "facebookresearch/InferSent" ["e"=1]
"facebookresearch/CommAI-env" -> "alrojo/tensorflow-tutorial" ["e"=1]
"facebookresearch/CommAI-env" -> "twitter-archive/torch-twrl"
"twitter-archive/torch-twrl" -> "ludc/rltorch"
"twitter-archive/torch-twrl" -> "facebookarchive/torch-rnnlib"
"twitter-archive/torch-twrl" -> "twitter-archive/torch-distlearn"
"twitter-archive/torch-twrl" -> "Kaixhin/Atari" ["e"=1]
"twitter-archive/torch-twrl" -> "fmassa/optimize-net"
"twitter-archive/torch-twrl" -> "twitter-archive/torch-autograd"
"twitter-archive/torch-twrl" -> "facebookarchive/MIXER"
"twitter-archive/torch-twrl" -> "Kaixhin/rlenvs"
"twitter-archive/torch-twrl" -> "SeanNaren/QlearningExample.torch"
"twitter-archive/torch-twrl" -> "torch/optim"
"twitter-archive/torch-twrl" -> "andreaskoepf/faster-rcnn.torch"
"twitter-archive/torch-twrl" -> "Element-Research/rnn"
"carpedm20/deep-rl-tensorflow" -> "carpedm20/NTM-tensorflow" ["e"=1]
"facebookarchive/torchnet" -> "fmassa/optimize-net"
"facebookarchive/torchnet" -> "Element-Research/rnn"
"facebookarchive/torchnet" -> "twitter-archive/torch-autograd"
"facebookarchive/torchnet" -> "yueatsprograms/Stochastic_Depth"
"facebookarchive/torchnet" -> "ludc/rltorch"
"facebookarchive/torchnet" -> "facebookarchive/torch-rnnlib"
"facebookarchive/torchnet" -> "twitter-archive/torch-twrl"
"facebookarchive/torchnet" -> "torch/nn"
"facebookarchive/torchnet" -> "DeepMark/deepmark"
"facebookarchive/torchnet" -> "facebookarchive/fb.resnet.torch" ["e"=1]
"facebookarchive/torchnet" -> "soumith/imagenet-multiGPU.torch"
"facebookarchive/torchnet" -> "soumith/cudnn.torch"
"facebookarchive/torchnet" -> "imodpasteur/lutorpy"
"facebookarchive/torchnet" -> "gcr/torch-residual-networks"
"facebookarchive/torchnet" -> "szagoruyko/wide-residual-networks" ["e"=1]
"nhynes/caffegraph" -> "deltheil/loadccv"
"nicholas-leonard/torch-in-action" -> "iassael/torch-bnlstm"
"facebookarchive/torch-rnnlib" -> "facebookresearch/adaptive-softmax"
"facebookarchive/torch-rnnlib" -> "twitter-archive/torch-twrl"
"facebookarchive/torch-rnnlib" -> "iassael/torch-bnlstm"
"facebookarchive/torch-rnnlib" -> "facebookarchive/MIXER"
"facebookarchive/torch-rnnlib" -> "fmassa/optimize-net"
"facebookarchive/torch-rnnlib" -> "ludc/rltorch"
"facebookarchive/torch-rnnlib" -> "twitter-archive/torch-distlearn"
"facebookarchive/torch-rnnlib" -> "torch/optim"
"facebookarchive/torch-rnnlib" -> "bshillingford/autobw.torch"
"facebookarchive/torch-rnnlib" -> "Kaixhin/nninit"
"facebookarchive/torch-rnnlib" -> "twitter-archive/torch-autograd"
"cvondrick/videogan" -> "y0ast/VAE-Torch" ["e"=1]
"gregdurrett/berkeley-doc-summarizer" -> "google-deepmind/rc-data" ["e"=1]
"paarthneekhara/neural-vqa-tensorflow" -> "DeepRNN/visual_question_answering" ["e"=1]
"Erkaman/Awesome-CUDA" -> "facebookarchive/fbcuda" ["e"=1]
"sjchoi86/dl_tutorials" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"sjchoi86/dl_tutorials" -> "KnHuq/Dynamic-Tensorflow-Tutorial" ["e"=1]
"sjchoi86/dl_tutorials" -> "jxieeducation/DIY-Data-Science" ["e"=1]
"mkroutikov/tf-lstm-char-cnn" -> "carpedm20/lstm-char-cnn-tensorflow"
"mkroutikov/tf-lstm-char-cnn" -> "yoonkim/lstm-char-cnn"
"OlavHN/bnlstm" -> "cooijmanstim/recurrent-batch-normalization"
"OlavHN/bnlstm" -> "tam17aki/recurrent-batchnorm-tensorflow"
"OlavHN/bnlstm" -> "pbhatia243/tf-layer-norm"
"baidu-research/ba-dls-deepspeech" -> "SeanNaren/deepspeech.torch" ["e"=1]
"ludc/rltorch" -> "twitter-archive/torch-twrl"
"ludc/rltorch" -> "Kaixhin/rlenvs"
"ludc/rltorch" -> "Kaixhin/nninit"
"ludc/rltorch" -> "iassael/torch-bnlstm"
"ludc/rltorch" -> "fmassa/optimize-net"
"ludc/rltorch" -> "facebookarchive/torch-rnnlib"
"ludc/rltorch" -> "imodpasteur/lutorpy"
"ludc/rltorch" -> "ludc/rl"
"Atcold/torch-Video-Tutorials" -> "soumith/cvpr2015"
"Atcold/torch-Video-Tutorials" -> "Atcold/torch-Developer-Guide"
"Atcold/torch-Video-Tutorials" -> "carpedm20/awesome-torch"
"Atcold/torch-Video-Tutorials" -> "imodpasteur/lutorpy"
"Atcold/torch-Video-Tutorials" -> "torch/tutorials"
"Atcold/torch-Video-Tutorials" -> "soumith/imagenet-multiGPU.torch"
"Atcold/torch-Video-Tutorials" -> "facebookarchive/torch-rnnlib"
"Atcold/torch-Video-Tutorials" -> "cvondrick/torch-starter"
"Atcold/torch-Video-Tutorials" -> "VisionLabs/torch-opencv"
"Atcold/torch-Video-Tutorials" -> "soumith/cudnn.torch"
"Atcold/torch-Video-Tutorials" -> "fmassa/optimize-net"
"Atcold/torch-Video-Tutorials" -> "Atcold/pytorch-Video-Tutorials"
"Atcold/torch-Video-Tutorials" -> "e-lab/torch-toolbox"
"Atcold/torch-Video-Tutorials" -> "twitter-archive/torch-autograd"
"Atcold/torch-Video-Tutorials" -> "Element-Research/rnn"
"HendrikStrobelt/LSTMVis" -> "harvardnlp/seq2seq-attn"
"HendrikStrobelt/LSTMVis" -> "HendrikStrobelt/Seq2Seq-Vis"
"HendrikStrobelt/LSTMVis" -> "wojzaremba/lstm"
"HendrikStrobelt/LSTMVis" -> "myaooo/RNNVis"
"HendrikStrobelt/LSTMVis" -> "Element-Research/rnn"
"HendrikStrobelt/LSTMVis" -> "yoonkim/lstm-char-cnn"
"HendrikStrobelt/LSTMVis" -> "facebookarchive/MemNN"
"HendrikStrobelt/LSTMVis" -> "jzilly/RecurrentHighwayNetworks"
"HendrikStrobelt/LSTMVis" -> "stanfordnlp/treelstm"
"HendrikStrobelt/LSTMVis" -> "ryankiros/skip-thoughts"
"HendrikStrobelt/LSTMVis" -> "carpedm20/MemN2N-tensorflow"
"HendrikStrobelt/LSTMVis" -> "facebookarchive/MIXER"
"HendrikStrobelt/LSTMVis" -> "zhangxiangxiao/Crepe"
"HendrikStrobelt/LSTMVis" -> "tensorflow/fold"
"HendrikStrobelt/LSTMVis" -> "salesforce/awd-lstm-lm" ["e"=1]
"danqi/rc-cnn-dailymail" -> "google-deepmind/rc-data" ["e"=1]
"mlajtos/moniel" -> "mlajtos/L1"
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "NickShahML/tensorflow_with_latest_papers"
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "jxieeducation/DIY-Data-Science"
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "carpedm20/NTM-tensorflow"
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "Mostafa-Samir/DNC-tensorflow"
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "jzilly/RecurrentHighwayNetworks"
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "carpedm20/MemN2N-tensorflow"
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "sjchoi86/Deep-Learning-101" ["e"=1]
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "carpedm20/deep-rl-tensorflow" ["e"=1]
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "shekkizh/WassersteinGAN.tensorflow" ["e"=1]
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "dennybritz/tf-rnn"
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "ikostrikov/TensorFlow-VAE-GAN-DRAW" ["e"=1]
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "nyu-dl/NLP_DL_Lecture_Note" ["e"=1]
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "carpedm20/pixel-rnn-tensorflow" ["e"=1]
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "sjchoi86/dl_tutorials" ["e"=1]
"KnHuq/Dynamic-Tensorflow-Tutorial" -> "wookayin/tensorflow-talk-debugging"
"mhjabreel/CharCNN" -> "scharmchi/char-level-cnn-tf"
"mhjabreel/CharCNN" -> "mhjabreel/CharCnn_Keras"
"mhjabreel/CharCNN" -> "lc222/char-cnn-text-classification-tensorflow"
"mhjabreel/CharCNN" -> "zhangxiangxiao/Crepe"
"mhjabreel/CharCNN" -> "flrngel/Self-Attentive-tensorflow" ["e"=1]
"mhjabreel/CharCNN" -> "airalcorn2/Recurrent-Convolutional-Neural-Network-Text-Classifier" ["e"=1]
"wookayin/tensorflow-talk-debugging" -> "wookayin/TensorFlowKR-2017-talk-bestpractice" ["e"=1]
"wookayin/tensorflow-talk-debugging" -> "carpedm20/simulated-unsupervised-tensorflow" ["e"=1]
"wookayin/tensorflow-talk-debugging" -> "wookayin/tensorflow-plot" ["e"=1]
"wookayin/tensorflow-talk-debugging" -> "KnHuq/Dynamic-Tensorflow-Tutorial"
"wookayin/tensorflow-talk-debugging" -> "aicodes/tf-bestpractice"
"wookayin/tensorflow-talk-debugging" -> "ericjang/tdb" ["e"=1]
"wookayin/tensorflow-talk-debugging" -> "BinbinBian/Awesome-Code" ["e"=1]
"wookayin/tensorflow-talk-debugging" -> "Mostafa-Samir/DNC-tensorflow"
"wookayin/tensorflow-talk-debugging" -> "NickShahML/tensorflow_with_latest_papers"
"wookayin/tensorflow-talk-debugging" -> "reedscot/nips2016" ["e"=1]
"wookayin/tensorflow-talk-debugging" -> "tensorflow/fold"
"wookayin/tensorflow-talk-debugging" -> "joanbruna/stat212b" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "allenai/bi-att-flow" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "HKUST-KnowComp/R-Net" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "allenai/document-qa" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "hotpotqa/hotpot" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "facebookarchive/MemNN"
"rajpurkar/SQuAD-explorer" -> "google-deepmind/rc-data"
"rajpurkar/SQuAD-explorer" -> "codalab/codalab-worksheets-old" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "xinyadu/nqg" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "facebookarchive/bAbI-tasks"
"rajpurkar/SQuAD-explorer" -> "localminimum/QANet" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "google-deepmind/narrativeqa" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "aswalin/SQuAD" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "danqi/rc-cnn-dailymail" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "YerevaNN/Dynamic-memory-networks-in-Theano"
"rajpurkar/SQuAD-explorer" -> "shuzi/insuranceQA" ["e"=1]
"keplr-io/hera" -> "npow/MemN2N" ["e"=1]
"jay-mahadeokar/pynetbuilder" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"pbhatia243/tf-layer-norm" -> "hycis/TensorGraph"
"xiaolonw/ss-gan" -> "cvondrick/torch-starter" ["e"=1]
"xiaolonw/ss-gan" -> "skaae/torch-gan" ["e"=1]
"tristandeleu/ntm-one-shot" -> "carpedm20/NTM-tensorflow" ["e"=1]
"tristandeleu/ntm-one-shot" -> "shawntan/neural-turing-machines" ["e"=1]
"tristandeleu/ntm-one-shot" -> "karpathy/paper-notes" ["e"=1]
"iassael/learning-to-communicate" -> "ludc/rltorch" ["e"=1]
"loliverhennigh/Convolutional-LSTM-in-Tensorflow" -> "viorik/ConvLSTM" ["e"=1]
"ankurhanda/gvnn" -> "qassemoquab/stnbhwd"
"ankurhanda/gvnn" -> "twitter-archive/torch-autograd"
"ankurhanda/gvnn" -> "Kaixhin/nninit"
"ankurhanda/gvnn" -> "fxia22/stn.pytorch"
"ankurhanda/gvnn" -> "mattloper/opendr" ["e"=1]
"ankurhanda/gvnn" -> "Element-Research/dpnn"
"ankurhanda/gvnn" -> "yueatsprograms/Stochastic_Depth"
"ankurhanda/gvnn" -> "facebookarchive/eyescream" ["e"=1]
"ankurhanda/gvnn" -> "jmccormac/pySceneNetRGBD" ["e"=1]
"ankurhanda/gvnn" -> "facebookarchive/torchnet"
"ankurhanda/gvnn" -> "iassael/torch-bnlstm"
"ankurhanda/gvnn" -> "andreaskoepf/faster-rcnn.torch"
"ankurhanda/gvnn" -> "DeepMark/deepmark"
"ankurhanda/gvnn" -> "tum-vision/fastfusion" ["e"=1]
"DeNeutoy/act-tensorflow" -> "mokemokechicken/keras_npi"
"DeNeutoy/act-tensorflow" -> "carpedm20/NTM-tensorflow"
"DeNeutoy/act-tensorflow" -> "imatge-upc/danifojo-2018-repeatrnn"
"DeNeutoy/act-tensorflow" -> "for-ai/ACT"
"BIDData/BIDMach" -> "baidu-research/persistent-rnn" ["e"=1]
"BIDData/BIDMach" -> "facebookarchive/fbcunn" ["e"=1]
"pytorch/extension-ffi" -> "facebookarchive/torch-rnnlib" ["e"=1]
"facebookresearch/adaptive-softmax" -> "facebookarchive/torch-rnnlib"
"facebookresearch/adaptive-softmax" -> "facebookarchive/MIXER"
"facebookresearch/adaptive-softmax" -> "fmassa/optimize-net"
"facebookresearch/adaptive-softmax" -> "iassael/torch-bnlstm"
"facebookresearch/adaptive-softmax" -> "twitter-archive/torch-twrl"
"facebookresearch/adaptive-softmax" -> "ludc/rltorch"
"facebookresearch/adaptive-softmax" -> "soumith/cudnn.torch"
"facebookresearch/adaptive-softmax" -> "torch/optim"
"facebookresearch/adaptive-softmax" -> "twitter-archive/torch-ipc"
"siyuanzhao/key-value-memory-networks" -> "lc222/key-value-MemNN"
"siyuanzhao/key-value-memory-networks" -> "domluna/memn2n"
"siyuanzhao/key-value-memory-networks" -> "dapurv5/neural_kbqa"
"siyuanzhao/key-value-memory-networks" -> "carpedm20/MemN2N-tensorflow"
"siyuanzhao/key-value-memory-networks" -> "jojonki/key-value-memory-networks"
"siyuanzhao/key-value-memory-networks" -> "barronalex/Dynamic-Memory-Networks-in-TensorFlow"
"siyuanzhao/key-value-memory-networks" -> "rajarshd/TextKBQA" ["e"=1]
"siyuanzhao/key-value-memory-networks" -> "vinhkhuc/MemN2N-babi-python"
"siyuanzhao/key-value-memory-networks" -> "dapurv5/awesome-question-answering" ["e"=1]
"siyuanzhao/key-value-memory-networks" -> "facebookarchive/MemNN"
"siyuanzhao/key-value-memory-networks" -> "nmhkahn/MemN2N-pytorch"
"mhjabreel/CharCnn_Keras" -> "chaitjo/character-level-cnn"
"mhjabreel/CharCnn_Keras" -> "mhjabreel/CharCNN"
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" -> "therne/dmn-tensorflow"
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" -> "ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus"
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" -> "YerevaNN/Dynamic-memory-networks-in-Theano"
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" -> "domluna/memn2n"
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" -> "DongjunLee/dmn-tensorflow"
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" -> "siyuanzhao/key-value-memory-networks"
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" -> "DeepRNN/visual_question_answering"
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" -> "dandelin/Dynamic-memory-networks-plus-Pytorch"
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" -> "kihyunwon/dynamic-coattention-network" ["e"=1]
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" -> "carpedm20/MemN2N-tensorflow"
"ruotianluo/Faster-RCNN-Densecap-torch" -> "andreaskoepf/faster-rcnn.torch"
"cgarciae/tensorbuilder" -> "hycis/TensorGraph"
"therne/dmn-tensorflow" -> "barronalex/Dynamic-Memory-Networks-in-TensorFlow"
"therne/dmn-tensorflow" -> "YerevaNN/Dynamic-memory-networks-in-Theano"
"therne/dmn-tensorflow" -> "domluna/memn2n"
"therne/dmn-tensorflow" -> "ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus"
"therne/dmn-tensorflow" -> "carpedm20/MemN2N-tensorflow"
"therne/dmn-tensorflow" -> "carpedm20/attentive-reader-tensorflow" ["e"=1]
"therne/dmn-tensorflow" -> "seominjoon/qrn"
"therne/dmn-tensorflow" -> "kihyunwon/dynamic-coattention-network" ["e"=1]
"ryankiros/layer-norm" -> "iassael/torch-bnlstm"
"ryankiros/layer-norm" -> "fmassa/optimize-net"
"ryankiros/layer-norm" -> "Kaixhin/nninit"
"torch/rocks" -> "torch/xlua"
"gpleiss/nnlr" -> "Kaixhin/nninit"
"gpleiss/nnlr" -> "cvondrick/torch-ffmpeg"
"richliao/textClassifier" -> "alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" ["e"=1]
"richliao/textClassifier" -> "yoonkim/CNN_sentence" ["e"=1]
"Hironsan/awesome-embedding-models" -> "ryankiros/skip-thoughts" ["e"=1]
"kevinhughes27/TensorKart" -> "google-deepmind/dnc" ["e"=1]
"kevinhughes27/TensorKart" -> "Mostafa-Samir/DNC-tensorflow" ["e"=1]
"jimfleming/recurrent-entity-networks" -> "siddk/entity-network"
"jimfleming/recurrent-entity-networks" -> "Mostafa-Samir/DNC-tensorflow"
"jimfleming/recurrent-entity-networks" -> "stanfordnlp/cocoa"
"szagoruyko/attention-transfer" -> "fxia22/stn.pytorch" ["e"=1]
"google-deepmind/lab" -> "google-deepmind/dnc" ["e"=1]
"MaximumEntropy/Seq2Seq-PyTorch" -> "harvardnlp/seq2seq-attn" ["e"=1]
"google-deepmind/learning-to-learn" -> "google-deepmind/dnc" ["e"=1]
"google-deepmind/learning-to-learn" -> "tensorflow/fold" ["e"=1]
"openai/openai-gemm" -> "baidu-research/persistent-rnn" ["e"=1]
"tensorflow/deepmath" -> "tensorflow/fold" ["e"=1]
"PrincetonML/SIF" -> "ryankiros/skip-thoughts" ["e"=1]
"Mostafa-Samir/DNC-tensorflow" -> "google-deepmind/dnc"
"Mostafa-Samir/DNC-tensorflow" -> "carpedm20/NTM-tensorflow"
"Mostafa-Samir/DNC-tensorflow" -> "bgavran/DNC"
"Mostafa-Samir/DNC-tensorflow" -> "yos1up/DNC"
"Mostafa-Samir/DNC-tensorflow" -> "jimfleming/recurrent-entity-networks"
"Mostafa-Samir/DNC-tensorflow" -> "hi-abhi/tensorflow-value-iteration-networks" ["e"=1]
"Mostafa-Samir/DNC-tensorflow" -> "carpedm20/MemN2N-tensorflow"
"Mostafa-Samir/DNC-tensorflow" -> "snipsco/ntm-lasagne"
"Mostafa-Samir/DNC-tensorflow" -> "jingweiz/pytorch-dnc"
"Mostafa-Samir/DNC-tensorflow" -> "anantzoid/Conditional-PixelCNN-decoder" ["e"=1]
"Mostafa-Samir/DNC-tensorflow" -> "facebookarchive/bAbI-tasks"
"Mostafa-Samir/DNC-tensorflow" -> "NickShahML/tensorflow_with_latest_papers"
"Mostafa-Samir/DNC-tensorflow" -> "zhongwen/predictron" ["e"=1]
"Mostafa-Samir/DNC-tensorflow" -> "jxwufan/AssociativeRetrieval"
"Mostafa-Samir/DNC-tensorflow" -> "KnHuq/Dynamic-Tensorflow-Tutorial"
"hi-abhi/tensorflow-value-iteration-networks" -> "Mostafa-Samir/DNC-tensorflow" ["e"=1]
"ematvey/tensorflow-seq2seq-tutorials" -> "domluna/memn2n" ["e"=1]
"ematvey/tensorflow-seq2seq-tutorials" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"kevinzakka/spatial-transformer-network" -> "daviddao/spatial-transformer-tensorflow"
"kevinzakka/spatial-transformer-network" -> "WarBean/tps_stn_pytorch"
"kevinzakka/spatial-transformer-network" -> "fxia22/stn.pytorch"
"kevinzakka/spatial-transformer-network" -> "oarriaga/STN.keras"
"kevinzakka/spatial-transformer-network" -> "qassemoquab/stnbhwd"
"kevinzakka/spatial-transformer-network" -> "skaae/transformer_network"
"kevinzakka/spatial-transformer-network" -> "chenhsuanlin/inverse-compositional-STN"
"kevinzakka/spatial-transformer-network" -> "msracver/Deformable-ConvNets" ["e"=1]
"kevinzakka/spatial-transformer-network" -> "bgshih/aster" ["e"=1]
"kevinzakka/spatial-transformer-network" -> "aicaffeinelife/Pytorch-STN"
"kevinzakka/spatial-transformer-network" -> "skaae/recurrent-spatial-transformer-code"
"kevinzakka/spatial-transformer-network" -> "sampepose/flownet2-tf" ["e"=1]
"kevinzakka/spatial-transformer-network" -> "ClementPinard/FlowNetPytorch" ["e"=1]
"kevinzakka/spatial-transformer-network" -> "microsoft/Recursive-Cascaded-Networks" ["e"=1]
"kevinzakka/spatial-transformer-network" -> "voxelmorph/voxelmorph" ["e"=1]
"jzilly/RecurrentHighwayNetworks" -> "NickShahML/tensorflow_with_latest_papers"
"jzilly/RecurrentHighwayNetworks" -> "jostmey/rwa" ["e"=1]
"jzilly/RecurrentHighwayNetworks" -> "jiamings/fast-weights"
"jzilly/RecurrentHighwayNetworks" -> "facebookarchive/MIXER"
"jzilly/RecurrentHighwayNetworks" -> "KnHuq/Dynamic-Tensorflow-Tutorial"
"jzilly/RecurrentHighwayNetworks" -> "facebookresearch/adaptive-softmax"
"tensorflow/fold" -> "stanfordnlp/treelstm"
"tensorflow/fold" -> "clab/dynet" ["e"=1]
"tensorflow/fold" -> "google-deepmind/learning-to-learn" ["e"=1]
"tensorflow/fold" -> "google-deepmind/dnc"
"tensorflow/fold" -> "google-deepmind/sonnet" ["e"=1]
"tensorflow/fold" -> "google/seq2seq" ["e"=1]
"tensorflow/fold" -> "tensorflow/transform" ["e"=1]
"tensorflow/fold" -> "LantaoYu/SeqGAN" ["e"=1]
"tensorflow/fold" -> "facebookresearch/fairseq-lua" ["e"=1]
"tensorflow/fold" -> "openai/pixel-cnn" ["e"=1]
"tensorflow/fold" -> "dmlc/minpy" ["e"=1]
"tensorflow/fold" -> "blei-lab/edward" ["e"=1]
"tensorflow/fold" -> "google/prettytensor" ["e"=1]
"tensorflow/fold" -> "tensorflow/skflow" ["e"=1]
"tensorflow/fold" -> "facebookresearch/ELF" ["e"=1]
"ericjang/gumbel-softmax" -> "EderSantana/gumbel" ["e"=1]
"Kyubyong/wordvectors" -> "yoonkim/CNN_sentence" ["e"=1]
"pytorch/tnt" -> "facebookarchive/torchnet" ["e"=1]
"rizar/actor-critic-public" -> "facebookarchive/MIXER"
"Evolving-AI-Lab/ppgn" -> "skaae/torch-gan" ["e"=1]
"OpenNMT/OpenNMT" -> "harvardnlp/seq2seq-attn" ["e"=1]
"dapurv5/neural_kbqa" -> "rajarshd/TextKBQA" ["e"=1]
"dapurv5/neural_kbqa" -> "siyuanzhao/key-value-memory-networks"
"dapurv5/neural_kbqa" -> "geofftong/NJU_KBQA"
"dapurv5/neural_kbqa" -> "quyingqi/kbqa-ar-smcnn" ["e"=1]
"dapurv5/neural_kbqa" -> "lc222/key-value-MemNN"
"dapurv5/neural_kbqa" -> "soloice/QA-System"
"TeamHG-Memex/tensorboard_logger" -> "DeepMark/deepmark" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "twitter-archive/torch-autograd" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "Kaixhin/nninit" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "Element-Research/rnn" ["e"=1]
"Kyubyong/tensorflow-exercises" -> "carpedm20/lstm-char-cnn-tensorflow" ["e"=1]
"torrvision/crayon" -> "fmassa/optimize-net" ["e"=1]
"torrvision/crayon" -> "Kaixhin/nninit" ["e"=1]
"torrvision/crayon" -> "tensorflow/fold" ["e"=1]
"szagoruyko/functional-zoo" -> "fxia22/stn.pytorch" ["e"=1]
"anantzoid/Language-Modeling-GatedCNN" -> "tobyyouup/conv_seq2seq"
"anantzoid/Language-Modeling-GatedCNN" -> "OlavHN/attention-over-attention" ["e"=1]
"anantzoid/Language-Modeling-GatedCNN" -> "rafaljozefowicz/lm"
"anantzoid/Language-Modeling-GatedCNN" -> "jojonki/Gated-Convolutional-Networks"
"anantzoid/Language-Modeling-GatedCNN" -> "okuchaiev/f-lm"
"anantzoid/Language-Modeling-GatedCNN" -> "yangperasd/gated_cnn"
"anantzoid/Language-Modeling-GatedCNN" -> "OlavHN/bnlstm"
"wookayin/TensorFlowKR-2017-talk-bestpractice" -> "wookayin/tensorflow-talk-debugging" ["e"=1]
"GokuMohandas/fast-weights" -> "jiamings/fast-weights"
"GokuMohandas/fast-weights" -> "jxwufan/AssociativeRetrieval"
"leegao/readme2tex" -> "twitter-archive/torch-autograd" ["e"=1]
"robbiebarrat/rapping-neural-network" -> "ryankiros/neural-storyteller" ["e"=1]
"deepsense-ai/roi-pooling" -> "daviddao/spatial-transformer-tensorflow" ["e"=1]
"NervanaSystems/deepspeech" -> "SeanNaren/deepspeech.torch" ["e"=1]
"hmishra2250/NTM-One-Shot-TF" -> "snowkylin/ntm" ["e"=1]
"openai/weightnorm" -> "jiamings/fast-weights" ["e"=1]
"openai/weightnorm" -> "ryankiros/layer-norm" ["e"=1]
"distillpub/template" -> "google-deepmind/dnc" ["e"=1]
"reedscot/nips2016" -> "iassael/torch-bnlstm" ["e"=1]
"reedscot/nips2016" -> "y0ast/VAE-Torch" ["e"=1]
"reedscot/nips2016" -> "skaae/torch-gan" ["e"=1]
"reedscot/nips2016" -> "ludc/rltorch" ["e"=1]
"anantzoid/Conditional-PixelCNN-decoder" -> "Mostafa-Samir/DNC-tensorflow" ["e"=1]
"anantzoid/Conditional-PixelCNN-decoder" -> "jxwufan/AssociativeRetrieval" ["e"=1]
"jiamings/fast-weights" -> "jxwufan/AssociativeRetrieval"
"jiamings/fast-weights" -> "GokuMohandas/fast-weights"
"tensorflow/benchmarks" -> "tensorflow/fold" ["e"=1]
"jcjohnson/pytorch-vgg" -> "Aysegul/torch-visbox"
"claymcleod/tf-differentiable-neural-computer" -> "FrownyFace/DNC"
"aicodes/tf-bestpractice" -> "wookayin/tensorflow-talk-debugging"
"carlthome/tensorflow-convlstm-cell" -> "viorik/ConvLSTM" ["e"=1]
"carpedm20/simulated-unsupervised-tensorflow" -> "wookayin/tensorflow-talk-debugging" ["e"=1]
"jiegzhan/multi-class-text-classification-cnn-rnn" -> "carpedm20/lstm-char-cnn-tensorflow" ["e"=1]
"jiegzhan/multi-class-text-classification-cnn-rnn" -> "alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" ["e"=1]
"jiegzhan/multi-class-text-classification-cnn-rnn" -> "yoonkim/CNN_sentence" ["e"=1]
"okuchaiev/f-lm" -> "rafaljozefowicz/lm"
"lingochamp/kaldi-ctc" -> "SeanNaren/deepspeech.torch" ["e"=1]
"paarthneekhara/byteNet-tensorflow" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"chenhsuanlin/inverse-compositional-STN" -> "fxia22/stn.pytorch"
"chenhsuanlin/inverse-compositional-STN" -> "kamenbliznashki/spatial_transformer"
"chenhsuanlin/inverse-compositional-STN" -> "WarBean/tps_stn_pytorch"
"chenhsuanlin/inverse-compositional-STN" -> "chenhsuanlin/spatial-transformer-GAN" ["e"=1]
"chenhsuanlin/inverse-compositional-STN" -> "daviddao/spatial-transformer-tensorflow"
"chenhsuanlin/inverse-compositional-STN" -> "qassemoquab/stnbhwd"
"chenhsuanlin/inverse-compositional-STN" -> "daerduoCarey/SpatialTransformerLayer" ["e"=1]
"chenhsuanlin/inverse-compositional-STN" -> "simonmeister/UnFlow" ["e"=1]
"chenhsuanlin/inverse-compositional-STN" -> "xiaolonw/adversarial-frcnn" ["e"=1]
"yos1up/DNC" -> "claymcleod/tf-differentiable-neural-computer"
"Nat-D/GMVAE" -> "y0ast/VAE-Torch" ["e"=1]
"rafaljozefowicz/lm" -> "okuchaiev/f-lm"
"rafaljozefowicz/lm" -> "ciprian-chelba/1-billion-word-language-modeling-benchmark"
"jxwufan/AssociativeRetrieval" -> "jiamings/fast-weights"
"jxwufan/AssociativeRetrieval" -> "GokuMohandas/fast-weights"
"iwyoo/TPS_STN-tensorflow" -> "iwyoo/tf_ThinPlateSpline"
"facebookresearch/fairseq-lua" -> "harvardnlp/seq2seq-attn" ["e"=1]
"facebookresearch/fairseq-lua" -> "facebookarchive/MemNN" ["e"=1]
"google-deepmind/dnc" -> "Mostafa-Samir/DNC-tensorflow"
"google-deepmind/dnc" -> "google-deepmind/sonnet" ["e"=1]
"google-deepmind/dnc" -> "google-deepmind/learning-to-learn" ["e"=1]
"google-deepmind/dnc" -> "carpedm20/NTM-tensorflow"
"google-deepmind/dnc" -> "facebookarchive/MemNN"
"google-deepmind/dnc" -> "ixaxaar/pytorch-dnc"
"google-deepmind/dnc" -> "google-deepmind/lab" ["e"=1]
"google-deepmind/dnc" -> "rll/rllab" ["e"=1]
"google-deepmind/dnc" -> "tensorflow/fold"
"google-deepmind/dnc" -> "openai/universe-starter-agent" ["e"=1]
"google-deepmind/dnc" -> "facebookresearch/ELF" ["e"=1]
"google-deepmind/dnc" -> "google-deepmind/rc-data"
"google-deepmind/dnc" -> "blei-lab/edward" ["e"=1]
"google-deepmind/dnc" -> "facebookresearch/fairseq-lua" ["e"=1]
"google-deepmind/dnc" -> "bioinf-jku/SNNs" ["e"=1]
"google-deepmind/sonnet" -> "google-deepmind/dnc" ["e"=1]
"lucasjinreal/tensorflow_poems" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"epfml/sent2vec" -> "ryankiros/skip-thoughts" ["e"=1]
"google-deepmind/dqn" -> "google-deepmind/dnc" ["e"=1]
"google/sling" -> "facebookarchive/MemNN" ["e"=1]
"google/sling" -> "tensorflow/fold" ["e"=1]
"Shawn1993/cnn-text-classification-pytorch" -> "yoonkim/CNN_sentence" ["e"=1]
"Shawn1993/cnn-text-classification-pytorch" -> "harvardnlp/sent-conv-torch" ["e"=1]
"Shawn1993/cnn-text-classification-pytorch" -> "srviest/char-cnn-text-classification-pytorch" ["e"=1]
"jiweil/Neural-Dialogue-Generation" -> "facebookarchive/MemNN" ["e"=1]
"jiweil/Neural-Dialogue-Generation" -> "harvardnlp/seq2seq-attn" ["e"=1]
"fxia22/stn.pytorch" -> "WarBean/tps_stn_pytorch"
"fxia22/stn.pytorch" -> "chenhsuanlin/inverse-compositional-STN"
"fxia22/stn.pytorch" -> "qassemoquab/stnbhwd"
"fxia22/stn.pytorch" -> "aicaffeinelife/Pytorch-STN"
"fxia22/stn.pytorch" -> "kevinzakka/spatial-transformer-network"
"fxia22/stn.pytorch" -> "1zb/deformable-convolution-pytorch" ["e"=1]
"fxia22/stn.pytorch" -> "oeway/pytorch-deform-conv" ["e"=1]
"fxia22/stn.pytorch" -> "ankurhanda/gvnn"
"fxia22/stn.pytorch" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"fxia22/stn.pytorch" -> "felixgwu/mask_rcnn_pytorch" ["e"=1]
"fxia22/stn.pytorch" -> "ClementPinard/FlowNetPytorch" ["e"=1]
"fxia22/stn.pytorch" -> "szagoruyko/attention-transfer" ["e"=1]
"fxia22/stn.pytorch" -> "AlexHex7/Spatial-Transformer-Networks_pytorch"
"fxia22/stn.pytorch" -> "longcw/RoIAlign.pytorch" ["e"=1]
"fxia22/stn.pytorch" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"oeway/pytorch-deform-conv" -> "fxia22/stn.pytorch" ["e"=1]
"isht7/pytorch-deeplab-resnet" -> "fxia22/stn.pytorch" ["e"=1]
"jettan/tikz_cnn" -> "ethereon/netscope"
"jettan/tikz_cnn" -> "yu4u/convnet-drawer"
"jettan/tikz_cnn" -> "cbovar/ConvNetDraw"
"jettan/tikz_cnn" -> "gwding/draw_convnet" ["e"=1]
"jettan/tikz_cnn" -> "szagoruyko/diracnets" ["e"=1]
"jettan/tikz_cnn" -> "Kaixhin/nninit"
"jettan/tikz_cnn" -> "torrvision/crayon" ["e"=1]
"jettan/tikz_cnn" -> "ankurhanda/gvnn"
"jettan/tikz_cnn" -> "mlajtos/moniel"
"jettan/tikz_cnn" -> "edouardoyallon/pyscatwave" ["e"=1]
"jettan/tikz_cnn" -> "WarBean/hyperboard" ["e"=1]
"jettan/tikz_cnn" -> "poolio/unrolled_gan" ["e"=1]
"jettan/tikz_cnn" -> "fmassa/optimize-net"
"bamos/densenet.pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"chrisjmccormick/word2vec_commented" -> "ryankiros/skip-thoughts" ["e"=1]
"jingweiz/pytorch-rl" -> "jingweiz/pytorch-dnc" ["e"=1]
"silicon-valley-data-science/RNN-Tutorial" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"kootenpv/neural_complete" -> "google-deepmind/dnc" ["e"=1]
"kootenpv/neural_complete" -> "facebookresearch/CommAI-env" ["e"=1]
"openai/generating-reviews-discovering-sentiment" -> "ryankiros/skip-thoughts" ["e"=1]
"openai/generating-reviews-discovering-sentiment" -> "yoonkim/CNN_sentence" ["e"=1]
"openai/generating-reviews-discovering-sentiment" -> "google-deepmind/rc-data" ["e"=1]
"xiaolonw/adversarial-frcnn" -> "chenhsuanlin/inverse-compositional-STN" ["e"=1]
"shekkizh/WassersteinGAN.tensorflow" -> "KnHuq/Dynamic-Tensorflow-Tutorial" ["e"=1]
"tensorflow/transform" -> "tensorflow/fold" ["e"=1]
"juliangaal/python-cheat-sheet" -> "IPGP/scientific_python_cheat_sheet" ["e"=1]
"baidu-research/baidu-allreduce" -> "baidu-research/persistent-rnn" ["e"=1]
"cudpp/cudpp" -> "facebookarchive/fbcuda" ["e"=1]
"jostmey/rwa" -> "jzilly/RecurrentHighwayNetworks" ["e"=1]
"jihunchoi/recurrent-batch-normalization-pytorch" -> "OlavHN/bnlstm" ["e"=1]
"ikostrikov/pytorch-ddpg-naf" -> "jingweiz/pytorch-dnc" ["e"=1]
"clcarwin/convert_torch_to_pytorch" -> "bshillingford/python-torchfile" ["e"=1]
"clcarwin/convert_torch_to_pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"xiamx/awesome-sentiment-analysis" -> "yoonkim/CNN_sentence" ["e"=1]
"adventuresinML/adventures-in-ml-code" -> "mhjabreel/CharCNN" ["e"=1]
"adventuresinML/adventures-in-ml-code" -> "dennybritz/rnn-tutorial-rnnlm" ["e"=1]
"chengyangfu/pytorch-vgg-cifar10" -> "jcjohnson/pytorch-vgg" ["e"=1]
"rajarshd/TextKBQA" -> "dapurv5/neural_kbqa" ["e"=1]
"ellisk42/TikZ" -> "rfeinman/GNS-Modeling"
"llSourcell/How_to_make_a_chatbot" -> "ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus" ["e"=1]
"MiuLab/KB-InfoBot" -> "stanfordnlp/cocoa" ["e"=1]
"crazydonkey200/minimal-nn" -> "crazydonkey200/tensorflow-char-rnn"
"albanie/SIGBOVIK17-GUNs" -> "yueatsprograms/Stochastic_Depth"
"albanie/SIGBOVIK17-GUNs" -> "siemanko/tf-adversarial"
"soumith/torch-android" -> "clementfarabet/torch-ios"
"soumith/torch-android" -> "mvitez/thnets"
"soumith/torch-android" -> "sh1r0/caffe-android-lib" ["e"=1]
"soumith/torch-android" -> "VisionLabs/torch-opencv"
"soumith/torch-android" -> "Leliana/WhatsThis" ["e"=1]
"soumith/torch-android" -> "torch/cutorch"
"soumith/torch-android" -> "alexkarargyris/Caffe_OpenCV_Android_App" ["e"=1]
"soumith/torch-android" -> "soumith/zbs-torch"
"bgavran/DNC" -> "greydanus/dnc"
"bgavran/DNC" -> "Mostafa-Samir/DNC-tensorflow"
"bgavran/DNC" -> "llSourcell/differentiable_neural_computer_LIVE"
"dasguptar/treelstm.pytorch" -> "stanfordnlp/treelstm" ["e"=1]
"thunlp/TensorFlow-Summarization" -> "carpedm20/neural-summary-tensorflow" ["e"=1]
"ikostrikov/pytorch-meta-optimizer" -> "GokuMohandas/fast-weights" ["e"=1]
"huangxiangzhou/NLPCC2016KBQA" -> "soloice/QA-System" ["e"=1]
"oarriaga/STN.keras" -> "kevinzakka/spatial-transformer-network"
"oarriaga/STN.keras" -> "daviddao/spatial-transformer-tensorflow"
"oarriaga/STN.keras" -> "skaae/transformer_network"
"oarriaga/STN.keras" -> "taoyizhi68/keras-Spatial-Transformer-Layer"
"oarriaga/STN.keras" -> "EderSantana/seya" ["e"=1]
"oarriaga/STN.keras" -> "skaae/recurrent-spatial-transformer-code"
"zuoxingdong/VIN_PyTorch_Visdom" -> "jingweiz/pytorch-dnc" ["e"=1]
"rogertrullo/pytorch_convlstm" -> "viorik/ConvLSTM" ["e"=1]
"iwyoo/tf_ThinPlateSpline" -> "iwyoo/TPS_STN-tensorflow"
"AlexKuhnle/ShapeWorld" -> "jayelm/emergent-generalization"
"ruotianluo/pytorch-resnet" -> "ruotianluo/Faster-RCNN-Densecap-torch"
"ruotianluo/pytorch-resnet" -> "jcjohnson/pytorch-vgg"
"batra-mlp-lab/lang-emerge" -> "facebookresearch/measuring-emergent-comm"
"batra-mlp-lab/lang-emerge" -> "benbogin/obverter"
"batra-mlp-lab/lang-emerge" -> "jacobandreas/tre"
"batra-mlp-lab/lang-emerge" -> "nyu-dl/MultimodalGame"
"batra-mlp-lab/lang-emerge" -> "Joshua-Ren/Neural_Iterated_Learning"
"batra-mlp-lab/lang-emerge" -> "NickLeoMartin/emergent_comm_rl"
"ypxie/pytorch-NeuCom" -> "jingweiz/pytorch-dnc"
"lc222/char-cnn-text-classification-tensorflow" -> "scharmchi/char-level-cnn-tf"
"Venka97/FaceSwapCV" -> "camigord/Self-Driving-Car-Nanodegree"
"lantiga/pytorch2c" -> "mvitez/thnets"
"camigord/Neural-Turing-Machine" -> "camigord/Self-Driving-Car-Nanodegree"
"google-deepmind/lua-pprint" -> "google-deepmind/plplot-ffi"
"hzy46/Char-RNN-TensorFlow" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"minimaxir/textgenrnn" -> "jcjohnson/torch-rnn" ["e"=1]
"minimaxir/textgenrnn" -> "ryankiros/neural-storyteller" ["e"=1]
"torch/nngraph" -> "torch/optim"
"torch/nngraph" -> "torch/cutorch"
"torch/nngraph" -> "torch/cunn"
"torch/nngraph" -> "soumith/cudnn.torch"
"torch/nngraph" -> "torch/nn"
"torch/nngraph" -> "Element-Research/dpnn"
"torch/nngraph" -> "twitter-archive/torch-autograd"
"torch/nngraph" -> "fmassa/optimize-net"
"torch/nngraph" -> "Kaixhin/nninit"
"torch/nngraph" -> "Element-Research/rnn"
"torch/nngraph" -> "soumith/imagenet-multiGPU.torch"
"torch/nngraph" -> "torch/rocks"
"torch/nngraph" -> "VisionLabs/torch-opencv"
"torch/nngraph" -> "torch/xlua"
"torch/nngraph" -> "facebookarchive/iTorch"
"facebookresearch/InferSent" -> "ryankiros/skip-thoughts" ["e"=1]
"dgriff777/rl_a3c_pytorch" -> "jingweiz/pytorch-dnc" ["e"=1]
"facebookresearch/StarSpace" -> "ryankiros/skip-thoughts" ["e"=1]
"stanfordnlp/python-stanford-corenlp" -> "stanfordnlp/treelstm" ["e"=1]
"sony/nnabla" -> "tensorflow/fold" ["e"=1]
"bioinf-jku/SNNs" -> "google-deepmind/dnc" ["e"=1]
"bioinf-jku/SNNs" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"facebookresearch/ELF" -> "google-deepmind/dnc" ["e"=1]
"harveyslash/Facial-Similarity-with-Siamese-Networks-in-Pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"automan000/Convolutional_LSTM_PyTorch" -> "viorik/ConvLSTM" ["e"=1]
"philipperemy/tensorflow-multi-dimensional-lstm" -> "philipperemy/tensorflow-grid-lstm" ["e"=1]
"Stonesjtu/Pytorch-NCE" -> "rdspring1/PyTorch_GBW_LM"
"Stonesjtu/Pytorch-NCE" -> "demelin/Noise-Contrastive-Estimation-NCE-for-pyTorch"
"Stonesjtu/Pytorch-NCE" -> "volagold/nce"
"Stonesjtu/Pytorch-NCE" -> "rafaljozefowicz/lm"
"facebookresearch/FaderNetworks" -> "facebookresearch/adaptive-softmax" ["e"=1]
"facebookresearch/SentEval" -> "ryankiros/skip-thoughts" ["e"=1]
"merantix/picasso" -> "jxieeducation/DIY-Data-Science" ["e"=1]
"zdevito/ATen" -> "torch/cunn" ["e"=1]
"zdevito/ATen" -> "facebookarchive/torch-rnnlib" ["e"=1]
"eladhoffer/seq2seq.pytorch" -> "harvardnlp/seq2seq-attn" ["e"=1]
"HendrikStrobelt/Seq2Seq-Vis" -> "HendrikStrobelt/LSTMVis"
"HendrikStrobelt/Seq2Seq-Vis" -> "lena-voita/good-translation-wrong-in-context" ["e"=1]
"jayparks/tf-seq2seq" -> "domluna/memn2n" ["e"=1]
"jayparks/tf-seq2seq" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"1zb/deformable-convolution-pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"cbovar/ConvNetDraw" -> "ethereon/netscope"
"cbovar/ConvNetDraw" -> "jettan/tikz_cnn"
"cbovar/ConvNetDraw" -> "gwding/draw_convnet" ["e"=1]
"cbovar/ConvNetDraw" -> "yu4u/convnet-drawer"
"facebookresearch/end-to-end-negotiator" -> "facebookresearch/CommAI-env"
"facebookresearch/end-to-end-negotiator" -> "stanfordnlp/cocoa"
"facebookresearch/end-to-end-negotiator" -> "facebookarchive/MemNN"
"facebookresearch/end-to-end-negotiator" -> "facebookresearch/fairseq-lua" ["e"=1]
"facebookresearch/end-to-end-negotiator" -> "MiuLab/TC-Bot" ["e"=1]
"facebookresearch/end-to-end-negotiator" -> "snakeztc/NeuralDialogPapers" ["e"=1]
"facebookresearch/end-to-end-negotiator" -> "facebookarchive/bAbI-tasks"
"facebookresearch/end-to-end-negotiator" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"facebookresearch/end-to-end-negotiator" -> "facebookresearch/DrQA" ["e"=1]
"facebookresearch/end-to-end-negotiator" -> "facebookresearch/clevr-iep" ["e"=1]
"facebookresearch/end-to-end-negotiator" -> "openai/generating-reviews-discovering-sentiment" ["e"=1]
"facebookresearch/end-to-end-negotiator" -> "google-deepmind/dnc"
"facebookresearch/end-to-end-negotiator" -> "facebookresearch/InferSent" ["e"=1]
"facebookresearch/end-to-end-negotiator" -> "kimhc6028/relational-networks" ["e"=1]
"facebookresearch/end-to-end-negotiator" -> "facebookresearch/ParlAI" ["e"=1]
"AntreasAntoniou/MatchingNetworks" -> "karpathy/paper-notes" ["e"=1]
"soskek/attention_is_all_you_need" -> "soskek/convolutional_seq2seq" ["e"=1]
"tobyyouup/conv_seq2seq" -> "soskek/convolutional_seq2seq"
"tobyyouup/conv_seq2seq" -> "anantzoid/Language-Modeling-GatedCNN"
"tobyyouup/conv_seq2seq" -> "taoshen58/DiSAN" ["e"=1]
"tobyyouup/conv_seq2seq" -> "facebookresearch/fairseq-lua" ["e"=1]
"tobyyouup/conv_seq2seq" -> "pengshuang/CNN-Seq2Seq"
"dandelin/Dynamic-memory-networks-plus-Pytorch" -> "vlgiitr/dmn-plus"
"dandelin/Dynamic-memory-networks-plus-Pytorch" -> "nmhkahn/MemN2N-pytorch"
"snowkylin/ntm" -> "hmishra2250/NTM-One-Shot-TF" ["e"=1]
"snowkylin/ntm" -> "vineetjain96/one-shot-mann" ["e"=1]
"snowkylin/ntm" -> "MarkPKCollier/NeuralTuringMachine"
"snowkylin/ntm" -> "carpedm20/NTM-tensorflow"
"snowkylin/ntm" -> "camigord/Neural-Turing-Machine"
"snowkylin/ntm" -> "Leputa/MANN-meta-learning"
"philipperemy/tensorflow-grid-lstm" -> "phvu/grid-lstm-tensorflow"
"shuaihuaiyi/QA" -> "dapurv5/neural_kbqa" ["e"=1]
"EndingCredits/Neural-Episodic-Control" -> "mjacar/pytorch-nec"
"EndingCredits/Neural-Episodic-Control" -> "hiwonjoon/NEC"
"EndingCredits/Neural-Episodic-Control" -> "LinZichuan/emdqn"
"mjacar/pytorch-nec" -> "EndingCredits/Neural-Episodic-Control"
"mjacar/pytorch-nec" -> "hiwonjoon/NEC"
"srviest/char-cnn-text-classification-pytorch" -> "lc222/char-cnn-text-classification-tensorflow"
"srviest/char-cnn-text-classification-pytorch" -> "scharmchi/char-level-cnn-tf"
"srviest/char-cnn-text-classification-pytorch" -> "vietnh1009/Character-level-cnn-pytorch" ["e"=1]
"nmhkahn/MemN2N-pytorch" -> "jojonki/MemoryNetworks"
"nmhkahn/MemN2N-pytorch" -> "dandelin/Dynamic-memory-networks-plus-Pytorch"
"nmhkahn/MemN2N-pytorch" -> "jasonwu0731/GLMP" ["e"=1]
"nmhkahn/MemN2N-pytorch" -> "berlino/MemNN"
"JianGoForIt/YellowFin_Pytorch" -> "fmassa/optimize-net" ["e"=1]
"twitter-archive/torch-decisiontree" -> "twitter-archive/torch-ipc"
"jingweiz/pytorch-dnc" -> "ypxie/pytorch-NeuCom"
"jingweiz/pytorch-dnc" -> "ixaxaar/pytorch-dnc"
"jingweiz/pytorch-dnc" -> "zuoxingdong/VIN_PyTorch_Visdom" ["e"=1]
"jingweiz/pytorch-dnc" -> "jingweiz/pytorch-rl" ["e"=1]
"jingweiz/pytorch-dnc" -> "EndingCredits/Neural-Episodic-Control"
"google-deepmind/pycolab" ["l"="57.517,18.305", "c"=45]
"google-deepmind/dnc" ["l"="46.152,27.91"]
"facebookresearch/EGG" ["l"="46.091,28.328"]
"benbogin/obverter" ["l"="46.078,28.298"]
"Near32/ReferentialGym" ["l"="46.097,28.351"]
"batra-mlp-lab/lang-emerge" ["l"="46.085,28.261"]
"jacobandreas/tre" ["l"="46.071,28.318"]
"bkgoksel/emergent-language" ["l"="46.115,28.31"]
"jayelm/emergent-generalization" ["l"="46.067,28.334"]
"brendenlake/SCAN" ["l"="46.082,28.38"]
"google-deepmind/emergent_communication_at_scale" ["l"="46.057,28.309"]
"AlexKuhnle/ShapeWorld" ["l"="46.068,28.349"]
"facebookresearch/measuring-emergent-comm" ["l"="46.094,28.298"]
"vermashresth/awesome-emergent-languages" ["l"="46.124,28.334"]
"MathieuRita/Lazimpa" ["l"="46.112,28.345"]
"nyu-dl/MultimodalGame" ["l"="46.107,28.291"]
"dav/word2vec" ["l"="53.228,25.493", "c"=172]
"yoonkim/CNN_sentence" ["l"="46.207,27.733"]
"google/tangent" ["l"="45.152,20.435", "c"=20]
"tensorflow/fold" ["l"="46.192,27.87"]
"asappresearch/sru" ["l"="53.14,25.597", "c"=172]
"facebookarchive/MemNN" ["l"="46.112,27.804"]
"goodfeli/dlbook_notation" ["l"="47.618,28.875", "c"=89]
"kennyledet/Algorithm-Implementations" ["l"="-21.62,-22.611", "c"=390]
"facebookarchive/iTorch" ["l"="46.074,27.662"]
"rfeinman/pyBPL" ["l"="46.063,28.506"]
"rfeinman/GNS-Modeling" ["l"="46.075,28.481"]
"cybertronai/gradient-checkpointing" ["l"="45.737,25.766", "c"=68]
"torch/torch7" ["l"="47.926,29.033", "c"=89]
"torch/nn" ["l"="46.061,27.628"]
"facebookarchive/fbcunn" ["l"="46.092,27.681"]
"olgabot/prettyplotlib" ["l"="48.065,28.029", "c"=89]
"soumith/cvpr2015" ["l"="46.053,27.648"]
"vicariousinc/science_rcn" ["l"="47.763,22.355", "c"=380]
"Mostafa-Samir/DNC-tensorflow" ["l"="46.109,27.904"]
"torch/cutorch" ["l"="46.003,27.585"]
"torch/cunn" ["l"="46.04,27.61"]
"torch/nngraph" ["l"="46.02,27.634"]
"soumith/cudnn.torch" ["l"="45.999,27.637"]
"torch/optim" ["l"="46.024,27.623"]
"Element-Research/dpnn" ["l"="45.978,27.644"]
"VisionLabs/torch-opencv" ["l"="45.926,27.595"]
"soumith/imagenet-multiGPU.torch" ["l"="45.989,27.619"]
"szagoruyko/loadcaffe" ["l"="45.968,27.614"]
"jhjin/overfeat-torch" ["l"="45.997,27.569"]
"torch/threads" ["l"="45.978,27.552"]
"torch/TH" ["l"="46.003,27.481"]
"torch/xlua" ["l"="46.061,27.581"]
"torch/gnuplot" ["l"="46.048,27.526"]
"soumith/inception.torch" ["l"="45.972,27.601"]
"dasmith/stanford-corenlp-python" ["l"="52.914,27.578", "c"=60]
"npow/MemNN" ["l"="46.02,27.832"]
"goodfeli/theano_exercises" ["l"="44.828,27.632", "c"=789]
"YerevaNN/Dynamic-memory-networks-in-Theano" ["l"="46.068,27.849"]
"HazyResearch/deepdive" ["l"="52.681,25.555", "c"=172]
"ryankiros/skip-thoughts" ["l"="46.18,27.768"]
"karpathy/ulogme" ["l"="23.345,14.401", "c"=505]
"karpathy/paper-notes" ["l"="46.054,27.765"]
"colah/colah.github.io" ["l"="23.375,14.482", "c"=505]
"facebookarchive/bAbI-tasks" ["l"="46.088,27.824"]
"danielfrg/word2vec" ["l"="53.192,25.585", "c"=172]
"google-deepmind/torch-hdf5" ["l"="45.983,27.571"]
"google-deepmind/plplot-ffi" ["l"="46.064,27.448"]
"e-lab/torch-toolbox" ["l"="45.945,27.625"]
"fmassa/optimize-net" ["l"="45.951,27.65"]
"szagoruyko/cifar.torch" ["l"="45.942,27.604"]
"Kaixhin/nninit" ["l"="45.929,27.643"]
"koraykv/unsup" ["l"="46.021,27.58"]
"staturecrane/dcgan_vae_torch" ["l"="46.013,27.554"]
"google-deepmind/torch-cephes" ["l"="46.027,27.471"]
"loudinthecloud/pytorch-ntm" ["l"="46.128,27.938"]
"ixaxaar/pytorch-dnc" ["l"="46.169,27.961"]
"carpedm20/NTM-tensorflow" ["l"="46.105,27.882"]
"MarkPKCollier/NeuralTuringMachine" ["l"="46.148,27.968"]
"jingweiz/pytorch-dnc" ["l"="46.166,27.995"]
"snowkylin/ntm" ["l"="46.124,27.963"]
"vlgiitr/ntm-pytorch" ["l"="46.091,28"]
"ikostrikov/pytorch-meta-optimizer" ["l"="57.613,19.387", "c"=433]
"kimhc6028/relational-networks" ["l"="23.489,14.801", "c"=728]
"timomernick/pytorch-capsule" ["l"="50.888,33.218", "c"=314]
"mila-iqia/welcome_tutorials" ["l"="23.519,14.799", "c"=728]
"kaishengtai/torch-ntm" ["l"="46.024,27.733"]
"jhjacobsen/pytorch-i-revnet" ["l"="22.992,14.491", "c"=505]
"eladhoffer/seq2seq.pytorch" ["l"="53.214,25.573", "c"=172]
"longcw/RoIAlign.pytorch" ["l"="50.958,30.11", "c"=83]
"fxia22/stn.pytorch" ["l"="45.816,27.718"]
"facebookresearch/House3D" ["l"="60.212,17.389", "c"=363]
"ankurhanda/gvnn" ["l"="45.901,27.673"]
"mesnilgr/is13" ["l"="46.138,27.812"]
"HadoopIt/rnn-nlu" ["l"="56.63,29.244", "c"=310]
"gwtaylor/theano-rnn" ["l"="44.872,27.623", "c"=789]
"yvchen/JointSLU" ["l"="56.654,29.283", "c"=310]
"HadoopIt/joint-slu-lm" ["l"="56.63,29.304", "c"=310]
"wojzaremba/lstm" ["l"="46.075,27.717"]
"stanfordnlp/treelstm" ["l"="46.148,27.771"]
"nyu-dl/dl4mt-tutorial" ["l"="53.728,24.756", "c"=492]
"npow/MemN2N" ["l"="46.044,27.84"]
"tsenghungchen/dialog-generation-paper" ["l"="56.573,29.097", "c"=310]
"lisa-groundhog/GroundHog" ["l"="53.704,24.765", "c"=492]
"XuesongYang/end2end_dialog" ["l"="56.623,29.275", "c"=310]
"yoonkim/lstm-char-cnn" ["l"="46.169,27.747"]
"mesnilgr/iclr15" ["l"="53.223,25.271", "c"=172]
"mimno/Mallet" ["l"="53.249,26.277", "c"=993]
"jeffdonahue/caffe" ["l"="47.735,34.076", "c"=168]
"skaae/recurrent-spatial-transformer-code" ["l"="45.832,27.683"]
"dmlc/cxxnet" ["l"="57.767,23.488", "c"=161]
"aicaffeinelife/Pytorch-STN" ["l"="45.772,27.745"]
"AlexHex7/Spatial-Transformer-Networks_pytorch" ["l"="45.792,27.748"]
"WarBean/tps_stn_pytorch" ["l"="45.749,27.733"]
"kamenbliznashki/spatial_transformer" ["l"="45.768,27.763"]
"gluon-api/gluon-api" ["l"="47.832,29.001", "c"=89]
"DongjunLee/text-cnn-tensorflow" ["l"="50.187,22.19", "c"=890]
"shagunsodhani/CNN-Sentence-Classifier" ["l"="46.359,27.681"]
"keon/seq2seq" ["l"="53.231,25.621", "c"=172]
"harvardnlp/seq2seq-attn" ["l"="46.138,27.753"]
"cmasch/cnn-text-classification" ["l"="46.481,27.586"]
"msahamed/yelp_comments_classification_nlp" ["l"="46.513,27.573"]
"yu4u/convnet-drawer" ["l"="45.721,27.569"]
"gwding/draw_convnet" ["l"="47.648,28.967", "c"=89]
"jettan/tikz_cnn" ["l"="45.776,27.603"]
"cbovar/ConvNetDraw" ["l"="45.708,27.593"]
"ethereon/netscope" ["l"="45.742,27.601"]
"leetenki/YOLOv2" ["l"="-34.583,20.507", "c"=1031]
"arXivTimes/arXivTimes" ["l"="5.831,-41.124", "c"=259]
"brmson/yodaqa" ["l"="55.634,26.17", "c"=1119]
"google-deepmind/rc-data" ["l"="46.128,27.787"]
"vinhkhuc/MemN2N-babi-python" ["l"="46.064,27.865"]
"Element-Research/rnn" ["l"="46.055,27.692"]
"twitter-archive/torch-autograd" ["l"="45.999,27.666"]
"torch/tutorials" ["l"="46.041,27.634"]
"facebookarchive/torchnet" ["l"="46,27.679"]
"nicholas-leonard/dp" ["l"="46.029,27.652"]
"facebookarchive/fb.resnet.torch" ["l"="50.567,33.19", "c"=314]
"google-deepmind/torch-distributions" ["l"="46.05,27.434"]
"google-deepmind/lua-pprint" ["l"="46.047,27.451"]
"google-deepmind/torch-randomkit" ["l"="46.029,27.444"]
"sermanet/OverFeat" ["l"="45.958,27.554"]
"ShaoqingRen/SPP_net" ["l"="50.654,33.104", "c"=314]
"PrincetonVision/marvin" ["l"="45.911,27.56"]
"nagadomi/kaggle-cifar10-torch7" ["l"="45.931,27.574"]
"rbgirshick/rcnn" ["l"="50.569,33.1", "c"=314]
"gcr/torch-residual-networks" ["l"="45.946,27.638"]
"google/multibox" ["l"="50.684,33.121", "c"=314]
"uoguelph-mlrg/theano_alexnet" ["l"="44.883,27.597", "c"=789]
"sklearn-theano/sklearn-theano" ["l"="44.858,27.656", "c"=789]
"torch/demos" ["l"="46.036,27.666"]
"facebookarchive/fblualib" ["l"="46.05,27.671"]
"soumith/net2net.torch" ["l"="45.976,27.659"]
"Moodstocks/gtsrb.torch" ["l"="45.918,27.65"]
"wojciechz/learning_to_execute" ["l"="46.029,27.692"]
"tmulc18/Distributed-TensorFlow-Guide" ["l"="57.879,23.406", "c"=161]
"wookayin/tensorflow-talk-debugging" ["l"="46.196,27.905"]
"davidadamojr/TextRank" ["l"="52.464,25.701", "c"=172]
"carpedm20/neural-summary-tensorflow" ["l"="46.245,27.824"]
"kristjankorjus/Replicating-DeepMind" ["l"="57.235,18.048", "c"=45]
"shawntan/neural-turing-machines" ["l"="46.03,27.814"]
"soumith/deepmind-atari" ["l"="45.887,27.724"]
"prisma-ai/torch2coreml" ["l"="46.625,-24.203", "c"=656]
"clementfarabet/torch-ios" ["l"="45.883,27.551"]
"torch/qtlua" ["l"="46.048,27.397"]
"lqt5/lqt" ["l"="46.065,27.356"]
"torch/tds" ["l"="46.036,27.352"]
"tdzl2003/luaqt" ["l"="46.047,27.371"]
"yaserkl/RLSeq2Seq" ["l"="58.455,29.062", "c"=665]
"rizar/actor-critic-public" ["l"="46.044,27.742"]
"geniusai-research/Text-Classification" ["l"="46.421,27.609"]
"bhaveshoswal/CNN-text-classification-keras" ["l"="46.36,27.639"]
"davidsbatista/ConvNets-for-Sentence-Classification" ["l"="46.445,27.585"]
"vivianLL/textClassification_Keras" ["l"="46.451,27.609"]
"yell/boltzmann-machines" ["l"="51.009,30.936", "c"=83]
"ofirnachum/tree_rnn" ["l"="46.054,27.805"]
"cheind/py-thin-plate-spline" ["l"="45.701,27.745"]
"iwyoo/tf_ThinPlateSpline" ["l"="45.678,27.732"]
"iwyoo/TPS_STN-tensorflow" ["l"="45.708,27.722"]
"chaitjo/character-level-cnn" ["l"="46.333,27.613"]
"mhjabreel/CharCnn_Keras" ["l"="46.311,27.635"]
"ignacio-rocco/cnngeometric_pytorch" ["l"="59.211,9.271", "c"=274]
"chenhsuanlin/inverse-compositional-STN" ["l"="45.795,27.724"]
"kevinzakka/spatial-transformer-network" ["l"="45.772,27.709"]
"ayumiymk/aster.pytorch" ["l"="46.456,7.254", "c"=148]
"Canjie-Luo/MORAN_v2" ["l"="46.457,7.216", "c"=148]
"bgshih/aster" ["l"="46.408,7.199", "c"=148]
"ankush-me/SynthText" ["l"="46.341,7.223", "c"=148]
"summerlvsong/Aggregation-Cross-Entropy" ["l"="46.484,7.217", "c"=148]
"SeanNaren/warp-ctc" ["l"="46.361,7.196", "c"=148]
"oeway/pytorch-deform-conv" ["l"="50.998,30.098", "c"=83]
"chengdazhi/Deformable-Convolution-V2-PyTorch" ["l"="50.965,30.131", "c"=83]
"daviddao/spatial-transformer-tensorflow" ["l"="45.79,27.698"]
"salesforce/pytorch-qrnn" ["l"="53.158,25.566", "c"=172]
"NickShahML/tensorflow_with_latest_papers" ["l"="46.15,27.801"]
"kevinzakka/recurrent-visual-attention" ["l"="53.38,31.288", "c"=155]
"facebookarchive/MIXER" ["l"="46.026,27.713"]
"vadimkantorov/caffemodel2pytorch" ["l"="51.68,33.124", "c"=354]
"ruotianluo/pytorch-resnet" ["l"="45.891,27.438"]
"Yishun99/KB-QA" ["l"="55.652,26.133", "c"=1119]
"geofftong/NJU_KBQA" ["l"="45.945,28.001"]
"JoergFranke/ADNC" ["l"="46.192,27.99"]
"ypxie/pytorch-NeuCom" ["l"="46.186,28.013"]
"hindupuravinash/nips2017" ["l"="50.242,28.248", "c"=104]
"jimfleming/recurrent-entity-networks" ["l"="46.087,27.973"]
"y0ast/VAE-Torch" ["l"="45.963,27.658"]
"skaae/torch-gan" ["l"="45.979,27.637"]
"y0ast/Variational-Autoencoder" ["l"="46.219,29.378", "c"=170]
"vivanov879/draw" ["l"="45.965,27.672"]
"Kaixhin/Autoencoders" ["l"="45.99,27.652"]
"iassael/torch-bnlstm" ["l"="45.949,27.667"]
"RuiShu/cvae" ["l"="46.195,29.386", "c"=170]
"y0ast/VAE-TensorFlow" ["l"="46.157,29.339", "c"=170]
"eladhoffer/ImageNet-Training" ["l"="45.959,27.598"]
"coreylynch/grid-lstm" ["l"="45.864,27.657"]
"willwhitney/dc-ign" ["l"="46.03,27.594"]
"soskek/bookcorpus" ["l"="53.272,25.671", "c"=172]
"ciprian-chelba/1-billion-word-language-modeling-benchmark" ["l"="46.216,27.81"]
"for-ai/CipherGAN" ["l"="45.942,28.143"]
"for-ai/cloud" ["l"="45.968,28.112"]
"junhyukoh/self-imitation-learning" ["l"="57.416,18.37", "c"=45]
"crazydonkey200/neural-symbolic-machines" ["l"="37.594,-1.694", "c"=999]
"rdspring1/PyTorch_GBW_LM" ["l"="46.509,27.953"]
"leimao/Sampled-Softmax-PyTorch" ["l"="46.53,27.964"]
"torch/cwrap" ["l"="46.071,27.493"]
"torch/rocks" ["l"="46.061,27.56"]
"for-ai/ACT" ["l"="46.002,28.058"]
"chenhsuanlin/spatial-transformer-GAN" ["l"="46.016,28.935", "c"=170]
"mila-iqia/babyai" ["l"="57.531,18.378", "c"=45]
"LauraRuis/groundedSCAN" ["l"="46.114,28.39"]
"vlgiitr/dmn-plus" ["l"="46.051,28.021"]
"dandelin/Dynamic-memory-networks-plus-Pytorch" ["l"="46.033,27.999"]
"hardik2396/Pyramidnet" ["l"="-45.85,-33.782", "c"=612]
"torch/trepl" ["l"="46.038,27.552"]
"Neopallium/lua-llthreads" ["l"="-21.515,-22.869", "c"=390]
"torch/argcheck" ["l"="45.982,27.492"]
"twitter-archive/torch-ipc" ["l"="45.883,27.659"]
"bshillingford/fbdebugger-minimal" ["l"="45.873,27.589"]
"DongjunLee/transformer-tensorflow" ["l"="53.369,25.625", "c"=172]
"tobyyouup/conv_seq2seq" ["l"="46.397,27.944"]
"LinZichuan/emdqn" ["l"="46.209,28.109"]
"EndingCredits/Neural-Episodic-Control" ["l"="46.209,28.08"]
"astier/model-free-episodic-control" ["l"="46.214,28.134"]
"Nana0606/autoencoder" ["l"="46.345,29.498", "c"=170]
"for-ai/rl" ["l"="45.987,28.107"]
"tensorflow/lattice" ["l"="46.279,27.948"]
"torch/image" ["l"="46.046,27.576"]
"torch/paths" ["l"="46.089,27.555"]
"najoungkim/COGS" ["l"="46.109,28.415"]
"jacobandreas/geca" ["l"="46.081,28.406"]
"mtensor/rulesynthesis" ["l"="46.078,28.439"]
"i-machine-think/am-i-compositional" ["l"="46.051,28.387"]
"facebookresearch/meta_seq2seq" ["l"="46.058,28.41"]
"LauraRuis/multimodal_seq2seq_gSCAN" ["l"="46.098,28.395"]
"raghakot/keras-text" ["l"="46.339,27.657"]
"alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras" ["l"="46.287,27.684"]
"Separius/BERT-keras" ["l"="53.747,27.266", "c"=60]
"richliao/textClassifier" ["l"="53.381,28.809", "c"=1200]
"Hironsan/anago" ["l"="53.547,27.491", "c"=60]
"ShawnyXiao/TextClassification-Keras" ["l"="-53.203,-16.439", "c"=459]
"xesdiny/KBQA" ["l"="45.919,28.024"]
"quyingqi/kbqa-ar-smcnn" ["l"="55.605,26.111", "c"=1119]
"dapurv5/neural_kbqa" ["l"="46.01,27.941"]
"clementfarabet/async" ["l"="45.839,27.545"]
"benglard/waffle" ["l"="45.881,27.576"]
"apeterswu/RL4NMT" ["l"="58.648,29.047", "c"=665]
"facebookresearch/fruit-tools-game" ["l"="46.04,28.33"]
"facebookresearch/brica" ["l"="46.02,28.339"]
"facebookarchive/torch-rnnlib" ["l"="45.978,27.674"]
"torch/graph" ["l"="46.072,27.569"]
"pengshuang/CNN-Seq2Seq" ["l"="46.428,27.964"]
"soskek/convolutional_seq2seq" ["l"="46.418,27.979"]
"DaveDubUK/hifi-pfnn" ["l"="46.128,27.293"]
"google-deepmind/torch-oocairo" ["l"="46.131,27.313"]
"for-ai/Targeted-Dropout" ["l"="45.969,28.14"]
"jiyfeng/DPLP" ["l"="58.083,29.066", "c"=665]
"jiweil/RST_Discourse_Parsing" ["l"="46.401,27.831"]
"lc222/key-value-MemNN" ["l"="46.027,27.92"]
"siyuanzhao/key-value-memory-networks" ["l"="46.046,27.904"]
"sixin-zh/mpiT" ["l"="45.707,27.652"]
"shanlior/Async-EASGD" ["l"="45.773,27.654"]
"jzrake/lua-mpi" ["l"="45.677,27.652"]
"clementfarabet/manifold" ["l"="45.912,27.588"]
"Aysegul/torch-visbox" ["l"="45.918,27.542"]
"andreaskoepf/faster-rcnn.torch" ["l"="45.942,27.589"]
"clementfarabet/lua---nnx" ["l"="45.9,27.629"]
"Joshua-Ren/Neural_Iterated_Learning" ["l"="46.065,28.29"]
"jojonki/MemoryNetworks" ["l"="45.993,28.01"]
"nmhkahn/MemN2N-pytorch" ["l"="46.02,27.979"]
"zshihang/MemN2N" ["l"="45.97,28.043"]
"sandrobarna/pytorch_memn2n" ["l"="45.955,28.062"]
"cjfcsjt/QA-matching" ["l"="45.898,28.043"]
"google-deepmind/torch-dokx" ["l"="46.146,27.295"]
"yangperasd/gated_cnn" ["l"="46.364,27.93"]
"coosh-ed/Gated-CNN-s-Using-Keras" ["l"="46.37,27.951"]
"google-deepmind/torch-totem" ["l"="46.118,27.346"]
"commonsense/conceptnet5" ["l"="52.907,25.52", "c"=172]
"karpathy/neuraltalk" ["l"="47.92,28.94", "c"=89]
"ryankiros/neural-storyteller" ["l"="46.237,27.713"]
"sherjilozair/char-rnn-tensorflow" ["l"="46.238,27.763"]
"NervanaSystems/neon" ["l"="47.851,29.03", "c"=89]
"soumith/convnet-benchmarks" ["l"="47.812,29.023", "c"=89]
"DeepMark/deepmark" ["l"="45.942,27.676"]
"facebookarchive/fbnn" ["l"="46.088,27.64"]
"facebookarchive/fbcuda" ["l"="46.107,27.655"]
"zhangxiangxiao/Crepe" ["l"="46.135,27.724"]
"dmlc/minerva" ["l"="57.773,23.509", "c"=161]
"probmods/webppl" ["l"="44.251,24.301", "c"=95]
"dritchie/adnn" ["l"="45.929,27.475"]
"oxford-cs-ml-2015/practical1" ["l"="45.928,27.771"]
"oxford-cs-ml-2015/practical5" ["l"="45.945,27.755"]
"oxford-cs-ml-2015/practical4" ["l"="45.925,27.757"]
"oxford-cs-ml-2015/practical2" ["l"="45.934,27.75"]
"oxford-cs-ml-2015/practical3" ["l"="45.942,27.765"]
"oxford-cs-ml-2015/practical6" ["l"="45.969,27.724"]
"carpedm20/awesome-torch" ["l"="46.013,27.652"]
"szym/display" ["l"="45.914,27.608"]
"Moodstocks/inception-v3.torch" ["l"="45.952,27.615"]
"qassemoquab/stnbhwd" ["l"="45.884,27.673"]
"szagoruyko/torch-caffe-binding" ["l"="45.99,27.529"]
"nhynes/caffegraph" ["l"="45.982,27.512"]
"yueatsprograms/Stochastic_Depth" ["l"="45.963,27.643"]
"twitter-archive/torch-twrl" ["l"="45.986,27.691"]
"maciejkula/glove-python" ["l"="53.19,25.536", "c"=172]
"karpathy/recurrentjs" ["l"="23.411,14.391", "c"=505]
"dennybritz/cnn-text-classification-tf" ["l"="53.153,25.633", "c"=172]
"harvardnlp/sent-conv-torch" ["l"="46.193,27.708"]
"Shawn1993/cnn-text-classification-pytorch" ["l"="53.379,28.704", "c"=1200]
"brightmart/text_classification" ["l"="53.422,27.308", "c"=60]
"farizrahman4u/seq2seq" ["l"="55.837,28.49", "c"=513]
"klb3713/sentence2vec" ["l"="53.121,25.353", "c"=172]
"facebookresearch/InferSent" ["l"="53.016,25.559", "c"=172]
"dennybritz/deeplearning-papernotes" ["l"="47.764,28.803", "c"=89]
"facebookarchive/fbtorch" ["l"="46.088,27.698"]
"spragunr/deep_q_rl" ["l"="57.3,18.109", "c"=45]
"dpkingma/nips14-ssl" ["l"="45.021,27.691", "c"=789]
"JonathanRaiman/theano_lstm" ["l"="44.858,27.636", "c"=789]
"facebookarchive/Stack-RNN" ["l"="46.027,27.763"]
"vlgiitr/papers_we_read" ["l"="47.802,27.177", "c"=323]
"IDSIA/brainstorm" ["l"="44.91,27.713", "c"=789]
"Atcold/torch-Developer-Guide" ["l"="45.929,27.609"]
"willwhitney/understanding-visual-concepts" ["l"="45.847,27.578"]
"gpleiss/nnlr" ["l"="45.894,27.615"]
"julrog/nn_vis" ["l"="50.652,27.922", "c"=104]
"IndicoDataSolutions/Passage" ["l"="44.876,27.672", "c"=789]
"3Top/word2vec-api" ["l"="53.092,25.529", "c"=172]
"clementfarabet/ipam-tutorials" ["l"="46.084,27.609"]
"e-lab/Torch7-profiling" ["l"="45.898,27.604"]
"cvondrick/torch-ffmpeg" ["l"="45.88,27.603"]
"pannous/caffe-speech-recognition" ["l"="35.647,2.193", "c"=308]
"SeanNaren/deepspeech.torch" ["l"="45.926,27.678"]
"facebookarchive/UETorch" ["l"="45.935,27.662"]
"johnglover/sound-rnn" ["l"="46.125,27.622"]
"oarriaga/paz" ["l"="56.042,27.254", "c"=486]
"oarriaga/STN.keras" ["l"="45.759,27.684"]
"szagoruyko/imagine-nn" ["l"="45.972,27.581"]
"fmassa/object-detection.torch" ["l"="45.953,27.573"]
"fumin/ntm" ["l"="46.004,27.821"]
"snipsco/ntm-lasagne" ["l"="46.038,27.856"]
"jbornschein/draw" ["l"="44.914,27.67", "c"=789]
"wojzaremba/algorithm-learning" ["l"="45.972,27.812"]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" ["l"="54.667,26.588", "c"=587]
"mokemokechicken/keras_npi" ["l"="46.027,27.893"]
"zomux/deepy" ["l"="44.899,27.68", "c"=789]
"mila-iqia/blocks" ["l"="44.867,27.695", "c"=789]
"google-deepmind/xitari" ["l"="46.108,27.408"]
"google-deepmind/alewrap" ["l"="46.098,27.389"]
"sh1r0/caffe-android-lib" ["l"="32.897,29.038", "c"=57]
"soumith/torch-android" ["l"="45.881,27.526"]
"facebookarchive/fb-caffe-exts" ["l"="45.897,27.647"]
"IndigoResearch/textteaser" ["l"="52.347,25.702", "c"=172]
"torch/distro" ["l"="46.017,27.609"]
"wendykan/DeepLearningMovies" ["l"="53.123,25.319", "c"=172]
"dennybritz/rnn-tutorial-rnnlm" ["l"="46.187,27.802"]
"ckmarkoh/AcrosticPoem" ["l"="53.627,28.025", "c"=60]
"Atcold/torch-TripletEmbedding" ["l"="45.986,27.591"]
"mdenil/acdc-torch" ["l"="46.135,27.595"]
"jcjohnson/simple-amt" ["l"="-19.196,13.442", "c"=173]
"tkocisky/oxnn" ["l"="45.908,27.659"]
"eladhoffer/convNet.torch" ["l"="45.965,27.536"]
"facebookresearch/productive_concept_learning" ["l"="46.055,28.486"]
"facebookarchive/thpp" ["l"="45.992,27.418"]
"qassemoquab/precisionrecall.torch" ["l"="45.851,27.614"]
"clementfarabet/lua---parallel" ["l"="45.82,27.658"]
"backpropper/s2p" ["l"="46.043,28.286"]
"karpathy/char-rnn" ["l"="47.953,28.898", "c"=89]
"jcjohnson/torch-rnn" ["l"="46.17,27.698"]
"kuz/DeepMind-Atari-Deep-Q-Learner" ["l"="57.319,18.074", "c"=45]
"NVIDIA-developer-blog/code-samples" ["l"="36.723,0.91", "c"=112]
"baidu-research/persistent-rnn" ["l"="46.007,27.733"]
"mattm/simple-neural-network" ["l"="48.074,28.782", "c"=89]
"kjw0612/awesome-rnn" ["l"="47.892,28.734", "c"=89]
"clab/dynet" ["l"="53.139,25.533", "c"=172]
"Lab41/sunny-side-up" ["l"="53.089,25.341", "c"=172]
"NVIDIA/caffe" ["l"="51.536,33.367", "c"=354]
"Atcold/torch-Video-Tutorials" ["l"="46,27.606"]
"soumith/dcgan.torch" ["l"="45.866,29.246", "c"=170]
"facebookarchive/eyescream" ["l"="45.858,29.323", "c"=170]
"jcjohnson/cnn-vis" ["l"="45.789,29.543", "c"=170]
"commonsense/conceptnet-numberbatch" ["l"="52.972,25.467", "c"=172]
"facebookarchive/SCRNNs" ["l"="45.982,27.742"]
"nicodjimenez/lstm" ["l"="-9.232,12.532", "c"=105]
"HendrikStrobelt/LSTMVis" ["l"="46.116,27.74"]
"carpedm20/lstm-char-cnn-tensorflow" ["l"="46.213,27.79"]
"Atcold/NYU-DLSP21" ["l"="47.9,26.467", "c"=323]
"viorik/ConvLSTM" ["l"="45.962,27.697"]
"soumith/torch-signal" ["l"="45.904,27.766"]
"intel/idlf" ["l"="57.709,23.492", "c"=161]
"twitter-archive/torch-distlearn" ["l"="45.918,27.691"]
"MattVitelli/GRUV" ["l"="38.613,3.952", "c"=201]
"bshillingford/autobw.torch" ["l"="45.948,27.696"]
"lipiji/App-DL" ["l"="58.414,29.172", "c"=665]
"carpedm20/MemN2N-tensorflow" ["l"="46.129,27.849"]
"daijifeng001/R-FCN" ["l"="50.571,33.119", "c"=314]
"ethereon/caffe-tensorflow" ["l"="50.47,33.139", "c"=314]
"dgschwend/netscope" ["l"="52.687,33.646", "c"=271]
"sanghoon/pva-faster-rcnn" ["l"="51.664,33.429", "c"=354]
"forresti/SqueezeNet" ["l"="50.46,33.159", "c"=314]
"ducha-aiki/caffenet-benchmark" ["l"="50.619,33.182", "c"=314]
"msracver/FCIS" ["l"="53.537,30.757", "c"=155]
"soeaver/caffe-model" ["l"="51.656,33.388", "c"=354]
"shicai/MobileNet-Caffe" ["l"="51.674,33.332", "c"=354]
"shelhamer/fcn.berkeleyvision.org" ["l"="50.562,33.144", "c"=314]
"lvdmaaten/bhtsne" ["l"="44.905,26.22", "c"=68]
"mhjabreel/CharCNN" ["l"="46.251,27.668"]
"kelvinxu/arctic-captions" ["l"="48.524,31.903", "c"=300]
"facebookresearch/SentEval" ["l"="52.976,25.541", "c"=172]
"paarthneekhara/text-to-image" ["l"="45.781,29.258", "c"=170]
"google/mr4c" ["l"="57.677,23.465", "c"=161]
"NervanaSystems/nervanagpu" ["l"="36.914,0.825", "c"=112]
"Lasagne/Recipes" ["l"="44.799,27.618", "c"=789]
"mila-iqia/summerschool2015" ["l"="44.875,27.654", "c"=789]
"ryankiros/layer-norm" ["l"="45.985,27.719"]
"akrizhevsky/cuda-convnet2" ["l"="36.876,0.741", "c"=112]
"siemanko/tf-adversarial" ["l"="45.938,27.531"]
"Samsung/veles" ["l"="57.72,23.554", "c"=161]
"yandex/faster-rnnlm" ["l"="46.105,27.776"]
"IntelLabs/rnnlm" ["l"="46.119,27.824"]
"isi-nlp/Zoph_RNN" ["l"="53.772,24.789", "c"=492]
"mspandit/rnnlm" ["l"="46.155,27.827"]
"facebookresearch/adaptive-softmax" ["l"="46.003,27.711"]
"srvk/eesen" ["l"="35.615,2.314", "c"=308]
"danpovey/pocolm" ["l"="46.159,27.88"]
"yajiemiao/eesen" ["l"="35.693,2.278", "c"=308]
"Sohl-Dickstein/Diffusion-Probabilistic-Models" ["l"="45.652,31.587", "c"=605]
"skaae/lasagne-draw" ["l"="44.9,27.647", "c"=789]
"facebookarchive/Conditional-character-based-RNN" ["l"="45.953,27.795"]
"jych/nips2015_vrnn" ["l"="45.001,27.623", "c"=789]
"ilyasu123/rlntm" ["l"="45.987,27.795"]
"ajtulloch/dnngraph" ["l"="-20.643,-20.065", "c"=118]
"nicholas-leonard/rnn" ["l"="45.822,27.534"]
"soumith/eyescream" ["l"="45.9,27.74"]
"melgor/DRAW" ["l"="45.982,27.608"]
"skaae/transformer_network" ["l"="45.809,27.684"]
"daerduoCarey/SpatialTransformerLayer" ["l"="51.484,33.45", "c"=354]
"j-wilson/bot7" ["l"="45.85,27.627"]
"twitter-archive/torch-dataset" ["l"="45.871,27.682"]
"iassael/torch-decomposition" ["l"="45.814,27.598"]
"teradeep/demo-apps" ["l"="45.813,27.569"]
"mvitez/thnets" ["l"="45.864,27.554"]
"Russell91/apollo" ["l"="45.818,29.589", "c"=170]
"hughperkins/cltorch" ["l"="64.385,-2.014", "c"=477]
"mkroutikov/tf-lstm-char-cnn" ["l"="46.214,27.76"]
"EdinburghNLP/nematus" ["l"="53.756,24.758", "c"=492]
"CuriousAI/ladder" ["l"="44.988,27.703", "c"=789]
"idio/wiki2vec" ["l"="-0.445,-42.003", "c"=934]
"mahyarnajibi/fast-rcnn-torch" ["l"="45.939,27.551"]
"btgraham/SparseConvNet-archived" ["l"="61.269,37.58", "c"=1043]
"danielrh/losslessh264" ["l"="-39.263,20.952", "c"=563]
"DoctorTeeth/diffmem" ["l"="44.94,27.664", "c"=789]
"XingxingZhang/rnnpg" ["l"="53.591,27.991", "c"=60]
"gcgibson/NTM" ["l"="45.963,27.839"]
"JanTkacik/NTM" ["l"="45.948,27.845"]
"yos1up/DNC" ["l"="45.995,27.903"]
"rahular/deepmind-dqn" ["l"="45.854,27.757"]
"hardmaru/neuralslimevolley" ["l"="23.439,14.274", "c"=505]
"dasguptar/treelstm.pytorch" ["l"="53,25.464", "c"=172]
"sapruash/RecursiveNN" ["l"="52.829,25.789", "c"=172]
"ttpro1995/TreeLSTMSentiment" ["l"="52.959,25.422", "c"=172]
"facebookarchive/NAMAS" ["l"="58.388,29.153", "c"=665]
"stanfordnlp/spinn" ["l"="52.965,25.31", "c"=172]
"mkusner/wmd" ["l"="53.106,25.391", "c"=172]
"rafaljozefowicz/lm" ["l"="46.322,27.867"]
"okuchaiev/f-lm" ["l"="46.301,27.87"]
"anantzoid/Language-Modeling-GatedCNN" ["l"="46.349,27.899"]
"mila-iqia/blocks-examples" ["l"="44.875,27.723", "c"=789]
"chrisjbryant/errant" ["l"="52.832,24.409", "c"=1203]
"eladhoffer/TripletNet" ["l"="32.906,29.399", "c"=57]
"EderSantana/seya" ["l"="44.839,27.696", "c"=789]
"soumith/cifar.torch" ["l"="45.901,27.575"]
"phunterlau/wangfeng-rnn" ["l"="44.954,27.733", "c"=789]
"jiweil/Hierarchical-Neural-Autoencoder" ["l"="46.321,27.836"]
"lipiji/hierarchical-encoder-decoder" ["l"="46.355,27.849"]
"NFSCH4/Hierarchical-Neural-Autoencoder" ["l"="46.356,27.827"]
"jiweil/Sequence-Models-on-Stanford-Treebank" ["l"="46.379,27.827"]
"jiweil/mutli-sense-embedding" ["l"="46.38,27.842"]
"mrkulk/Unsupervised-Capsule-Network" ["l"="46.074,27.539"]
"taku910/crfpp" ["l"="53.428,27.615", "c"=60]
"pkulchenko/wxlua" ["l"="-21.537,-22.708", "c"=390]
"Element-Research/dataload" ["l"="45.917,27.62"]
"Element-Research/hypero" ["l"="45.894,27.593"]
"aistairc/rnng-pytorch" ["l"="46.125,28.435"]
"wuxiyu/MemNN" ["l"="45.982,27.849"]
"pararthshah/qa-memnn" ["l"="45.968,27.861"]
"dirkweissenborn/qa_network" ["l"="45.797,27.512"]
"iassael/torch-linearo" ["l"="45.759,27.544"]
"karpathy/neuraltalk2" ["l"="47.958,28.94", "c"=89]
"abhshkdz/neural-vqa" ["l"="48.595,32.113", "c"=300]
"domluna/memn2n" ["l"="46.068,27.888"]
"ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus" ["l"="46.046,27.886"]
"allenai/deep_qa" ["l"="55.894,28.39", "c"=513]
"barronalex/Dynamic-Memory-Networks-in-TensorFlow" ["l"="46.057,27.914"]
"macournoyer/neuralconvo" ["l"="55.758,28.484", "c"=513]
"dapurv5/awesome-question-answering" ["l"="55.573,26.141", "c"=1119]
"jazzsaxmafia/show_attend_and_tell.tensorflow" ["l"="48.521,31.967", "c"=300]
"cemoody/lda2vec" ["l"="52.867,25.606", "c"=172]
"mansimov/text2image" ["l"="45.853,29.279", "c"=170]
"JuanPotato/Legofy" ["l"="22.876,-26.817", "c"=28]
"brendenlake/BPL" ["l"="46.082,27.87"]
"brendenlake/omniglot" ["l"="57.744,19.446", "c"=433]
"MaxwellRebo/PyBPL" ["l"="57.759,19.537", "c"=433]
"brendenlake/visual-turing-tests" ["l"="46.065,27.931"]
"tristandeleu/ntm-one-shot" ["l"="57.728,19.489", "c"=433]
"blei-lab/edward" ["l"="45.764,26.126", "c"=68]
"facebookresearch/CommAI-env" ["l"="46.099,27.844"]
"torrvision/crfasrnn" ["l"="53.499,30.75", "c"=155]
"Newmu/dcgan_code" ["l"="45.835,29.256", "c"=170]
"szcom/rnnlib" ["l"="46.494,7.642", "c"=148]
"google/inception" ["l"="50.686,33.174", "c"=314]
"tensorflow/skflow" ["l"="47.865,28.864", "c"=89]
"robertsdionne/neural-network-papers" ["l"="47.868,28.908", "c"=89]
"dennybritz/nn-from-scratch" ["l"="47.931,28.761", "c"=89]
"avisingh599/visual-qa" ["l"="48.571,32.1", "c"=300]
"woodrush/neural-art-tf" ["l"="45.689,29.454", "c"=170]
"andersbll/neural_artistic_style" ["l"="45.619,29.444", "c"=170]
"Lasagne/Lasagne" ["l"="47.886,29.002", "c"=89]
"alexjc/neural-doodle" ["l"="45.573,29.338", "c"=170]
"awentzonline/image-analogies" ["l"="45.679,29.376", "c"=170]
"sugyan/tensorflow-mnist" ["l"="46.345,27.767"]
"niektemme/tensorflow-mnist-predict" ["l"="46.437,27.755"]
"martin-gorner/tensorflow-mnist-tutorial" ["l"="47.689,28.781", "c"=89]
"tobegit3hub/tensorflow_template_application" ["l"="58.027,23.481", "c"=161]
"llSourcell/How-to-Deploy-a-Tensorflow-Model-in-Production" ["l"="49.801,26.914", "c"=791]
"wm5920/mnist_web_tensorflow_demo" ["l"="-2.381,-35.356", "c"=596]
"tensorflow/serving" ["l"="58.004,23.53", "c"=161]
"backstopmedia/tensorflowbook" ["l"="47.279,28.637", "c"=89]
"Russell91/TensorBox" ["l"="50.449,33.05", "c"=314]
"llSourcell/tensorflow_chatbot" ["l"="55.763,28.45", "c"=513]
"hwalsuklee/tensorflow-mnist-cnn" ["l"="51.559,30.077", "c"=83]
"christopher5106/FastAnnotationTool" ["l"="50.409,33.076", "c"=314]
"transcranial/keras-js" ["l"="-32.554,-35.862", "c"=1115]
"hetaoaoao/tensorflow_web_deploy" ["l"="46.393,27.765"]
"joanbruna/stat212b" ["l"="47.831,28.854", "c"=89]
"dmlc/minpy" ["l"="47.77,29.028", "c"=89]
"SergeyMorugin/ostagram" ["l"="45.643,29.404", "c"=170]
"gabrieleangeletti/Deep-Learning-TensorFlow" ["l"="51.057,30.901", "c"=83]
"KnHuq/Dynamic-Tensorflow-Tutorial" ["l"="46.16,27.86"]
"dennybritz/rnn-tutorial-gru-lstm" ["l"="46.169,27.786"]
"gy910210/rnn-from-scratch" ["l"="51.767,28.281", "c"=104]
"dennybritz/tf-rnn" ["l"="46.196,27.835"]
"Newmu/Theano-Tutorials" ["l"="44.821,27.657", "c"=789]
"lisa-lab/DeepLearningTutorials" ["l"="47.899,28.875", "c"=89]
"larspars/word-rnn" ["l"="46.282,27.742"]
"hunkim/word-rnn-tensorflow" ["l"="46.254,27.785"]
"junwei-pan/fasttext_torch" ["l"="46.347,27.728"]
"bdhingra/tweet2vec" ["l"="-0.343,-41.913", "c"=934]
"crisbal/docker-torch-rnn" ["l"="46.228,27.683"]
"vlraik/word-level-rnn-keras" ["l"="46.325,27.724"]
"Maratyszcza/NNPACK" ["l"="37.154,0.787", "c"=112]
"AlfredXiangWu/face_verification_experiment" ["l"="33.106,29.231", "c"=57]
"pmgysel/caffe" ["l"="52.666,33.591", "c"=271]
"zhanghang1989/fb-caffe-exts" ["l"="45.839,27.642"]
"purine/purine2" ["l"="57.737,23.498", "c"=161]
"KaimingHe/resnet-1k-layers" ["l"="50.599,33.202", "c"=314]
"kaishengtai/neuralart" ["l"="45.668,29.433", "c"=170]
"karthikncode/nlp-datasets" ["l"="55.82,28.406", "c"=513]
"jiweil/Neural-Dialogue-Generation" ["l"="56.592,29.076", "c"=310]
"LantaoYu/SeqGAN" ["l"="57.813,29.4", "c"=1082]
"allenai/bi-att-flow" ["l"="54.681,26.519", "c"=587]
"danqi/rc-cnn-dailymail" ["l"="54.707,26.565", "c"=587]
"carpedm20/attentive-reader-tensorflow" ["l"="54.668,26.635", "c"=587]
"jacobandreas/nmn2" ["l"="48.655,32.166", "c"=300]
"therne/dmn-tensorflow" ["l"="46.077,27.903"]
"vyraun/chatbot-MemN2N-tensorflow" ["l"="56.572,29.141", "c"=310]
"priyank87/memn2n" ["l"="46.038,27.931"]
"ematvey/tensorflow-seq2seq-tutorials" ["l"="55.803,28.528", "c"=513]
"rajarshd/TextKBQA" ["l"="55.594,26.125", "c"=1119]
"DeepLearningKit/DeepLearningKit" ["l"="46.574,-24.127", "c"=656]
"ryankiros/visual-semantic-embedding" ["l"="58.327,8.321", "c"=1240]
"mansimov/unsupervised-videos" ["l"="41.476,25.711", "c"=537]
"andersbll/autoencoding_beyond_pixels" ["l"="46.072,29.315", "c"=170]
"microsoft/DMTK" ["l"="57.796,23.535", "c"=161]
"shurans/DeepSlidingShape" ["l"="63.804,0.957", "c"=134]
"Sohl-Dickstein/Sum-of-Functions-Optimizer" ["l"="23.429,14.292", "c"=505]
"IoannisAntonoglou/optimBench" ["l"="23.481,14.281", "c"=505]
"danieldjohnson/biaxial-rnn-music-composition" ["l"="38.642,3.966", "c"=201]
"andrewt3000/DL4NLP" ["l"="52.942,25.617", "c"=172]
"ry/tensorflow-vgg16" ["l"="50.37,33.222", "c"=314]
"jcjohnson/densecap" ["l"="48.563,31.866", "c"=300]
"shagunsodhani/papers-I-read" ["l"="-45.831,-33.851", "c"=612]
"UKPLab/deeplearning4nlp-tutorial" ["l"="52.976,25.408", "c"=172]
"wangxggc/rnn-theano" ["l"="46.237,27.807"]
"nyu-dl/dl4mt-multi" ["l"="53.692,24.78", "c"=492]
"chilynn/sequence-labeling" ["l"="53.456,27.549", "c"=60]
"ganeshjawahar/mem_absa" ["l"="54.259,28.226", "c"=707]
"Aysegul/torch-kitti" ["l"="45.9,27.5"]
"google-deepmind/classic" ["l"="46.074,27.418"]
"Kaixhin/rlenvs" ["l"="45.936,27.703"]
"ludc/rltorch" ["l"="45.96,27.686"]
"Kaixhin/Atari" ["l"="57.313,18.173", "c"=45]
"iassael/torch-bootstrapped-dqn" ["l"="57.222,18.136", "c"=45]
"cheng6076/SNLI-attention" ["l"="52.756,27.489", "c"=60]
"twitter-archive/torch-thrift" ["l"="45.867,27.697"]
"waylonflinn/weblas" ["l"="-32.392,-35.827", "c"=1115]
"chuanli11/CNNMRF" ["l"="45.716,29.387", "c"=170]
"hardmaru/sketch-rnn" ["l"="46.484,7.699", "c"=148]
"erikbern/deep-fonts" ["l"="20.654,-0.583", "c"=557]
"kkurach/math_learning" ["l"="45.942,27.82"]
"harvardnlp/NAMAS" ["l"="46.23,27.647"]
"taolei87/rcnn" ["l"="54.619,26.747", "c"=587]
"castorini/castor" ["l"="52.909,27.447", "c"=60]
"galsang/CNN-sentence-classification-pytorch" ["l"="53.415,28.67", "c"=1200]
"google/seq2seq" ["l"="53.179,25.669", "c"=172]
"nlintz/TensorFlow-Tutorials" ["l"="47.787,28.822", "c"=89]
"szagoruyko/torch-opencv-demos" ["l"="45.902,27.53"]
"imodpasteur/lutorpy" ["l"="45.928,27.63"]
"carlthome/tensorflow-convlstm-cell" ["l"="41.487,25.752", "c"=537]
"loliverhennigh/Convolutional-LSTM-in-Tensorflow" ["l"="41.507,25.75", "c"=537]
"rogertrullo/pytorch_convlstm" ["l"="41.474,25.784", "c"=537]
"lantiga/pytorch2c" ["l"="45.834,27.517"]
"hughperkins/pytorch" ["l"="45.965,27.628"]
"samjabrahams/tensorflow-white-paper-notes" ["l"="46.226,27.89"]
"google/prettytensor" ["l"="47.797,28.994", "c"=89]
"mtomassoli/papers" ["l"="46.258,27.91"]
"jiegzhan/multi-class-text-classification-cnn-rnn" ["l"="53.364,28.863", "c"=1200]
"carpedm20/deep-rl-tensorflow" ["l"="57.382,18.103", "c"=45]
"ilivans/tf-rnn-attention" ["l"="53.357,28.838", "c"=1200]
"licstar/compare" ["l"="53.18,25.249", "c"=172]
"ruotianluo/Faster-RCNN-Densecap-torch" ["l"="45.921,27.515"]
"j-wilson/gpTorch7" ["l"="45.82,27.618"]
"joschu/cgt" ["l"="44.924,27.689", "c"=789]
"5vision/DARQN" ["l"="57.236,18.157", "c"=45]
"SeanNaren/QlearningExample.torch" ["l"="45.894,27.708"]
"tabacof/adversarial" ["l"="-43.539,-33.636", "c"=865]
"xiaolonw/ss-gan" ["l"="45.951,29.231", "c"=170]
"facebookarchive/MazeBase" ["l"="57.399,18.327", "c"=45]
"rizar/attention-lvcsr" ["l"="35.71,2.234", "c"=308]
"phvu/grid-lstm-tensorflow" ["l"="45.813,27.639"]
"DeNeutoy/act-tensorflow" ["l"="46.048,27.951"]
"siemanko/tensorflow-deepq" ["l"="57.297,18.086", "c"=45]
"casperkaae/parmesan" ["l"="44.965,27.651", "c"=789]
"aleju/cat-generator" ["l"="45.911,29.422", "c"=170]
"leongatys/DeepTextures" ["l"="45.541,29.577", "c"=170]
"ericjang/tdb" ["l"="47.77,28.998", "c"=89]
"DTU-deeplearning/day3-RNN" ["l"="45.999,27.857"]
"hardmaru/write-rnn-tensorflow" ["l"="46.453,7.65", "c"=148]
"shuzi/insuranceQA" ["l"="55.861,28.386", "c"=513]
"googleglass/mirror-quickstart-python" ["l"="23.425,14.318", "c"=505]
"ianozsvald/data_science_delivered" ["l"="45.329,26.286", "c"=68]
"jxieeducation/DIY-Data-Science" ["l"="46.224,27.842"]
"hycis/TensorGraph" ["l"="46.53,27.886"]
"cgarciae/tensorbuilder" ["l"="46.559,27.89"]
"GradySimon/tensorflow-glove" ["l"="53.299,25.487", "c"=172]
"nyu-dl/NLP_DL_Lecture_Note" ["l"="53.567,24.778", "c"=492]
"mila-iqia/platoon" ["l"="44.92,27.563", "c"=789]
"deepcoord/seq2seq" ["l"="45.718,27.506"]
"cheng6076/mlm" ["l"="45.694,27.485"]
"Kaixhin/torch-pastalog" ["l"="45.875,27.618"]
"brmson/dataset-sts" ["l"="53.027,25.458", "c"=172]
"yukezhu/tensorflow-reinforce" ["l"="57.354,18.169", "c"=45]
"explosion/sense2vec" ["l"="52.681,25.598", "c"=172]
"carpedm20/variational-text-tensorflow" ["l"="53.382,26.364", "c"=993]
"pavelgonchar/colornet" ["l"="45.547,29.409", "c"=170]
"facebookresearch/pysparnn" ["l"="53.078,25.671", "c"=172]
"facebookresearch/darkforestGo" ["l"="58.458,17.288", "c"=803]
"jisungk/deepjazz" ["l"="38.654,3.934", "c"=201]
"megvii-research/neural-painter" ["l"="44.972,28.867", "c"=771]
"lmthang/thesis" ["l"="53.704,24.74", "c"=492]
"rkadlec/ubuntu-ranking-dataset-creator" ["l"="56.657,29.073", "c"=310]
"swstarlab/DynamicMemoryNetworks" ["l"="46.01,27.881"]
"ericjang/draw" ["l"="45.937,29.323", "c"=170]
"nicholas-leonard/torch-in-action" ["l"="45.909,27.64"]
"bshillingford/python-torchfile" ["l"="45.887,27.632"]
"jonathantompson/torchzlib" ["l"="45.863,27.605"]
"OpenNMT/OpenNMT" ["l"="53.765,24.675", "c"=492]
"siddk/npi" ["l"="45.989,27.925"]
"EderSantana/gumbel" ["l"="45.962,27.948"]
"llSourcell/How_to_make_a_chatbot" ["l"="49.811,26.831", "c"=791]
"piiswrong/deep3d" ["l"="64.946,4.368", "c"=263]
"codekansas/keras-language-modeling" ["l"="55.861,28.465", "c"=513]
"crazydonkey200/tensorflow-char-rnn" ["l"="46.298,27.79"]
"crazydonkey200/minimal-nn" ["l"="46.333,27.797"]
"hit-computer/char-rnn-tf" ["l"="53.693,27.879", "c"=60]
"hit-computer/char-rnn" ["l"="53.68,27.865", "c"=60]
"glample/rnn-benchmarks" ["l"="45.895,27.693"]
"sjchoi86/Deep-Learning-101" ["l"="-4.752,-23.015", "c"=164]
"DmitryUlyanov/texture_nets" ["l"="45.704,29.409", "c"=170]
"somewacko/deconvfaces" ["l"="45.822,29.326", "c"=170]
"jwyang/JULE.torch" ["l"="53.072,29.822", "c"=547]
"szagoruyko/wide-residual-networks" ["l"="50.608,33.229", "c"=314]
"openai/openai-gemm" ["l"="37.046,0.815", "c"=112]
"tqchen/mxnet-gan" ["l"="51.821,33.669", "c"=354]
"cahya-wirawan/cnn-text-classification-tf" ["l"="53.32,28.886", "c"=1200]
"bradleypallen/keras-quora-question-pairs" ["l"="53.062,27.498", "c"=60]
"salestock/fastText.py" ["l"="53.036,25.593", "c"=172]
"airalcorn2/Recurrent-Convolutional-Neural-Network-Text-Classifier" ["l"="53.24,25.072", "c"=172]
"floydhub/dl-setup" ["l"="47.764,28.86", "c"=89]
"rewonc/pastalog" ["l"="44.92,27.621", "c"=789]
"karandwivedi42/imagenet-multiGPU.torchnet" ["l"="45.832,27.6"]
"eladhoffer/recurrent.torch" ["l"="45.911,27.709"]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" ["l"="32.995,29.018", "c"=57]
"TensorFlowKR/awesome_tensorflow_implementations" ["l"="-4.844,-23.008", "c"=164]
"ofirnachum/sequence_gan" ["l"="57.8,29.362", "c"=1082]
"alexandres/lexvec" ["l"="53.038,25.36", "c"=172]
"Ivaylo-Popov/Theano-Lights" ["l"="44.911,27.656", "c"=789]
"IPGP/scientific_python_cheat_sheet" ["l"="46.325,27.986"]
"NervanaSystems/deepspeech" ["l"="35.669,2.231", "c"=308]
"baidu-research/ba-dls-deepspeech" ["l"="35.632,2.278", "c"=308]
"lingochamp/kaldi-ctc" ["l"="35.682,2.305", "c"=308]
"riga/tfdeploy" ["l"="44.958,27.602", "c"=789]
"jiamings/fast-weights" ["l"="45.959,27.889"]
"chuanli11/MGANs" ["l"="45.72,29.436", "c"=170]
"aciditeam/torch-models" ["l"="45.955,27.585"]
"hsheil/rnn-examples" ["l"="45.873,27.645"]
"clcarwin/convert_torch_to_pytorch" ["l"="51.111,30.05", "c"=83]
"harvardnlp/BSO" ["l"="46.063,27.737"]
"michaelfarrell76/End-To-End-Generative-Dialogue" ["l"="56.594,28.934", "c"=310]
"alex-berard/seq2seq" ["l"="55.819,28.553", "c"=513]
"IshmaelBelghazi/ALI" ["l"="46.084,29.341", "c"=170]
"deeplearningparis/dl-attention" ["l"="46.284,27.84"]
"thunlp/TensorFlow-Summarization" ["l"="58.449,29.15", "c"=665]
"harpribot/deep-summarization" ["l"="58.489,29.177", "c"=665]
"wlmnzf/tensorflow-train" ["l"="46.482,27.75"]
"udibr/headlines" ["l"="58.451,29.184", "c"=665]
"iwyoo/DIRNet-tensorflow" ["l"="62.926,37.249", "c"=1030]
"zsdonghao/Spatial-Transformer-Nets" ["l"="45.732,27.698"]
"yaringal/BayesianRNN" ["l"="22.47,15.262", "c"=977]
"NVIDIA/gpu-rest-engine" ["l"="51.417,33.368", "c"=354]
"sherjilozair/dqn" ["l"="57.368,18.121", "c"=45]
"4d55397500/RecursiveNeuralTensorNetwork" ["l"="46.012,27.799"]
"cooijmanstim/recurrent-batch-normalization" ["l"="46.43,27.87"]
"tristandeleu/neural-gpu" ["l"="46.457,27.861"]
"danpovey/quantization" ["l"="46.2,27.93"]
"Guim3/IcGAN" ["l"="45.958,29.137", "c"=170]
"philipperemy/tensorflow-grid-lstm" ["l"="45.783,27.633"]
"e-lab/ENet-training" ["l"="53.546,30.823", "c"=155]
"facebookresearch/deepmask" ["l"="53.615,30.685", "c"=155]
"lukaemon/Coursera-ML-AndrewNg" ["l"="48.109,28.644", "c"=89]
"lferry007/LargeVis" ["l"="44.938,26.231", "c"=68]
"jzilly/RecurrentHighwayNetworks" ["l"="46.077,27.793"]
"paarthneekhara/byteNet-tensorflow" ["l"="53.651,24.801", "c"=492]
"carpedm20/pixel-rnn-tensorflow" ["l"="46.002,29.322", "c"=170]
"kvfrans/variational-autoencoder" ["l"="46.144,29.352", "c"=170]
"allenai/XNOR-Net" ["l"="52.594,33.599", "c"=271]
"llSourcell/Chatbot-AI" ["l"="55.803,28.48", "c"=513]
"farizrahman4u/recurrentshop" ["l"="55.877,28.51", "c"=513]
"neubig/nmt-tips" ["l"="53.739,24.772", "c"=492]
"AntreasAntoniou/MatchingNetworks" ["l"="57.704,19.438", "c"=433]
"reedscot/nips2016" ["l"="45.889,29.247", "c"=170]
"miyosuda/async_deep_reinforce" ["l"="57.348,18.157", "c"=45]
"hi-abhi/tensorflow-value-iteration-networks" ["l"="57.361,18.233", "c"=45]
"twitter-research/meta-learning-lstm" ["l"="57.715,19.412", "c"=433]
"karpathy/tf-agent" ["l"="23.361,14.318", "c"=505]
"google-research-datasets/wiki-reading" ["l"="54.659,26.509", "c"=587]
"stanfordnlp/cocoa" ["l"="46.088,28.075"]
"MiuLab/KB-InfoBot" ["l"="56.597,29.147", "c"=310]
"harvardnlp/im2markup" ["l"="46.632,5.686", "c"=571]
"ikostrikov/TensorFlow-Pointer-Networks" ["l"="50.899,26.766", "c"=490]
"tokestermw/tensorflow-shakespeare" ["l"="53.651,24.774", "c"=492]
"dennybritz/chatbot-retrieval" ["l"="55.736,28.441", "c"=513]
"OlavHN/bnlstm" ["l"="46.379,27.875"]
"a16z/ai" ["l"="-21.226,11.372", "c"=22]
"scharmchi/char-level-cnn-tf" ["l"="46.278,27.628"]
"lc222/char-cnn-text-classification-tensorflow" ["l"="46.285,27.612"]
"rouseguy/DeepLearning-NLP" ["l"="48.069,28.583", "c"=89]
"Evolving-AI-Lab/synthesizing" ["l"="45.9,29.312", "c"=170]
"cdoersch/vae_tutorial" ["l"="46.125,29.329", "c"=170]
"alrojo/tensorflow-tutorial" ["l"="47.79,28.718", "c"=89]
"facebookresearch/multipathnet" ["l"="53.621,30.716", "c"=155]
"openai/requests-for-research" ["l"="57.37,18.041", "c"=45]
"general-ai-challenge/Round1" ["l"="46.016,27.866"]
"facebookresearch/end-to-end-negotiator" ["l"="46.097,27.93"]
"facebookresearch/fairseq-lua" ["l"="53.204,25.644", "c"=172]
"deltheil/loadccv" ["l"="45.978,27.476"]
"cvondrick/videogan" ["l"="45.873,29.296", "c"=170]
"gregdurrett/berkeley-doc-summarizer" ["l"="58.221,29.102", "c"=665]
"paarthneekhara/neural-vqa-tensorflow" ["l"="48.571,32.119", "c"=300]
"DeepRNN/visual_question_answering" ["l"="46.004,27.965"]
"Erkaman/Awesome-CUDA" ["l"="36.656,0.933", "c"=112]
"sjchoi86/dl_tutorials" ["l"="-4.742,-22.994", "c"=164]
"tam17aki/recurrent-batchnorm-tensorflow" ["l"="46.407,27.882"]
"pbhatia243/tf-layer-norm" ["l"="46.472,27.882"]
"ludc/rl" ["l"="45.919,27.73"]
"cvondrick/torch-starter" ["l"="46.021,27.535"]
"Atcold/pytorch-Video-Tutorials" ["l"="46.027,27.513"]
"HendrikStrobelt/Seq2Seq-Vis" ["l"="46.155,27.667"]
"myaooo/RNNVis" ["l"="46.186,27.65"]
"salesforce/awd-lstm-lm" ["l"="53.085,25.565", "c"=172]
"mlajtos/moniel" ["l"="45.659,27.56"]
"mlajtos/L1" ["l"="45.608,27.542"]
"shekkizh/WassersteinGAN.tensorflow" ["l"="45.991,29.202", "c"=170]
"ikostrikov/TensorFlow-VAE-GAN-DRAW" ["l"="46.036,29.287", "c"=170]
"flrngel/Self-Attentive-tensorflow" ["l"="53.452,28.778", "c"=1200]
"wookayin/TensorFlowKR-2017-talk-bestpractice" ["l"="-4.817,-22.982", "c"=164]
"carpedm20/simulated-unsupervised-tensorflow" ["l"="45.974,29.225", "c"=170]
"wookayin/tensorflow-plot" ["l"="48.268,31.887", "c"=300]
"aicodes/tf-bestpractice" ["l"="46.231,27.954"]
"BinbinBian/Awesome-Code" ["l"="50.137,28.126", "c"=104]
"rajpurkar/SQuAD-explorer" ["l"="46.063,27.824"]
"HKUST-KnowComp/R-Net" ["l"="54.695,26.506", "c"=587]
"allenai/document-qa" ["l"="54.714,26.491", "c"=587]
"hotpotqa/hotpot" ["l"="54.773,26.424", "c"=587]
"codalab/codalab-worksheets-old" ["l"="48.275,32.425", "c"=300]
"xinyadu/nqg" ["l"="57.318,29.257", "c"=1082]
"localminimum/QANet" ["l"="54.708,26.522", "c"=587]
"google-deepmind/narrativeqa" ["l"="54.724,26.475", "c"=587]
"aswalin/SQuAD" ["l"="54.779,26.608", "c"=587]
"keplr-io/hera" ["l"="44.751,27.682", "c"=789]
"jay-mahadeokar/pynetbuilder" ["l"="51.61,33.401", "c"=354]
"iassael/learning-to-communicate" ["l"="57.723,18.37", "c"=45]
"mattloper/opendr" ["l"="30.076,28.636", "c"=94]
"jmccormac/pySceneNetRGBD" ["l"="47.933,35.666", "c"=695]
"tum-vision/fastfusion" ["l"="59.494,11.26", "c"=87]
"imatge-upc/danifojo-2018-repeatrnn" ["l"="46.051,27.996"]
"BIDData/BIDMach" ["l"="57.657,23.433", "c"=161]
"pytorch/extension-ffi" ["l"="51.449,30.003", "c"=83]
"jojonki/key-value-memory-networks" ["l"="45.993,27.945"]
"DongjunLee/dmn-tensorflow" ["l"="46.027,27.955"]
"kihyunwon/dynamic-coattention-network" ["l"="54.725,26.571", "c"=587]
"seominjoon/qrn" ["l"="46.058,27.976"]
"Hironsan/awesome-embedding-models" ["l"="53.029,25.513", "c"=172]
"kevinhughes27/TensorKart" ["l"="61.469,12.445", "c"=774]
"siddk/entity-network" ["l"="46.081,28.024"]
"szagoruyko/attention-transfer" ["l"="53.549,33.612", "c"=1263]
"google-deepmind/lab" ["l"="57.451,18.025", "c"=45]
"MaximumEntropy/Seq2Seq-PyTorch" ["l"="53.165,25.589", "c"=172]
"google-deepmind/learning-to-learn" ["l"="47.672,28.819", "c"=89]
"tensorflow/deepmath" ["l"="-22.254,-19.352", "c"=392]
"PrincetonML/SIF" ["l"="52.975,25.507", "c"=172]
"bgavran/DNC" ["l"="46.114,27.985"]
"anantzoid/Conditional-PixelCNN-decoder" ["l"="46.019,29.334", "c"=170]
"zhongwen/predictron" ["l"="57.323,18.312", "c"=45]
"jxwufan/AssociativeRetrieval" ["l"="45.969,27.914"]
"msracver/Deformable-ConvNets" ["l"="50.906,30.047", "c"=83]
"sampepose/flownet2-tf" ["l"="65.055,4.176", "c"=263]
"ClementPinard/FlowNetPytorch" ["l"="65.048,4.162", "c"=263]
"microsoft/Recursive-Cascaded-Networks" ["l"="62.952,37.185", "c"=1030]
"voxelmorph/voxelmorph" ["l"="63,37.182", "c"=1030]
"jostmey/rwa" ["l"="47.456,28.842", "c"=89]
"google-deepmind/sonnet" ["l"="57.431,17.873", "c"=45]
"tensorflow/transform" ["l"="45.596,25.695", "c"=68]
"openai/pixel-cnn" ["l"="45.952,29.278", "c"=170]
"facebookresearch/ELF" ["l"="57.451,18.125", "c"=45]
"ericjang/gumbel-softmax" ["l"="53.219,29.886", "c"=547]
"Kyubyong/wordvectors" ["l"="53.05,25.568", "c"=172]
"pytorch/tnt" ["l"="51.125,29.856", "c"=83]
"Evolving-AI-Lab/ppgn" ["l"="45.931,29.254", "c"=170]
"soloice/QA-System" ["l"="45.975,27.979"]
"TeamHG-Memex/tensorboard_logger" ["l"="51.276,29.901", "c"=83]
"Kyubyong/tensorflow-exercises" ["l"="48.012,28.485", "c"=89]
"torrvision/crayon" ["l"="51.239,29.958", "c"=83]
"szagoruyko/functional-zoo" ["l"="51.274,29.945", "c"=83]
"OlavHN/attention-over-attention" ["l"="54.677,26.604", "c"=587]
"jojonki/Gated-Convolutional-Networks" ["l"="46.391,27.913"]
"GokuMohandas/fast-weights" ["l"="45.929,27.915"]
"leegao/readme2tex" ["l"="57.134,18.122", "c"=45]
"robbiebarrat/rapping-neural-network" ["l"="45.921,29.646", "c"=170]
"deepsense-ai/roi-pooling" ["l"="50.501,33.072", "c"=314]
"hmishra2250/NTM-One-Shot-TF" ["l"="57.708,19.494", "c"=433]
"openai/weightnorm" ["l"="57.12,18.578", "c"=45]
"distillpub/template" ["l"="37.898,-7.007", "c"=766]
"tensorflow/benchmarks" ["l"="57.92,23.535", "c"=161]
"jcjohnson/pytorch-vgg" ["l"="45.878,27.463"]
"claymcleod/tf-differentiable-neural-computer" ["l"="45.932,27.944"]
"FrownyFace/DNC" ["l"="45.9,27.964"]
"simonmeister/UnFlow" ["l"="65.056,4.196", "c"=263]
"xiaolonw/adversarial-frcnn" ["l"="51.654,33.466", "c"=354]
"Nat-D/GMVAE" ["l"="53.161,29.843", "c"=547]
"rll/rllab" ["l"="57.483,18.133", "c"=45]
"openai/universe-starter-agent" ["l"="57.388,18.152", "c"=45]
"bioinf-jku/SNNs" ["l"="46.04,29.197", "c"=170]
"lucasjinreal/tensorflow_poems" ["l"="53.424,27.572", "c"=60]
"epfml/sent2vec" ["l"="52.915,25.554", "c"=172]
"google-deepmind/dqn" ["l"="57.418,18.169", "c"=45]
"google/sling" ["l"="53.06,25.542", "c"=172]
"srviest/char-cnn-text-classification-pytorch" ["l"="46.305,27.586"]
"1zb/deformable-convolution-pytorch" ["l"="51.052,30.099", "c"=83]
"isht7/pytorch-deeplab-resnet" ["l"="53.417,30.847", "c"=155]
"felixgwu/mask_rcnn_pytorch" ["l"="51.093,30.063", "c"=83]
"vacancy/Synchronized-BatchNorm-PyTorch" ["l"="53.403,31.025", "c"=155]
"szagoruyko/diracnets" ["l"="51.318,29.977", "c"=83]
"edouardoyallon/pyscatwave" ["l"="51.797,29.933", "c"=83]
"WarBean/hyperboard" ["l"="53.76,15.861", "c"=434]
"poolio/unrolled_gan" ["l"="45.962,29.336", "c"=170]
"bamos/densenet.pytorch" ["l"="51.074,30.059", "c"=83]
"chrisjmccormick/word2vec_commented" ["l"="53.223,25.446", "c"=172]
"jingweiz/pytorch-rl" ["l"="57.483,18.202", "c"=45]
"silicon-valley-data-science/RNN-Tutorial" ["l"="47.601,28.74", "c"=89]
"kootenpv/neural_complete" ["l"="47.542,28.829", "c"=89]
"openai/generating-reviews-discovering-sentiment" ["l"="53.094,25.499", "c"=172]
"juliangaal/python-cheat-sheet" ["l"="47.648,28.583", "c"=89]
"baidu-research/baidu-allreduce" ["l"="57.879,23.522", "c"=161]
"cudpp/cudpp" ["l"="36.677,0.945", "c"=112]
"jihunchoi/recurrent-batch-normalization-pytorch" ["l"="51.593,30.291", "c"=83]
"ikostrikov/pytorch-ddpg-naf" ["l"="57.429,18.249", "c"=45]
"xiamx/awesome-sentiment-analysis" ["l"="53.009,25.381", "c"=172]
"adventuresinML/adventures-in-ml-code" ["l"="47.517,28.601", "c"=89]
"chengyangfu/pytorch-vgg-cifar10" ["l"="51.155,29.937", "c"=83]
"ellisk42/TikZ" ["l"="46.094,28.505"]
"albanie/SIGBOVIK17-GUNs" ["l"="45.955,27.512"]
"Leliana/WhatsThis" ["l"="32.851,29.035", "c"=57]
"alexkarargyris/Caffe_OpenCV_Android_App" ["l"="32.877,29.028", "c"=57]
"soumith/zbs-torch" ["l"="45.843,27.482"]
"greydanus/dnc" ["l"="46.112,28.02"]
"llSourcell/differentiable_neural_computer_LIVE" ["l"="46.118,28.044"]
"huangxiangzhou/NLPCC2016KBQA" ["l"="55.576,26.088", "c"=1119]
"taoyizhi68/keras-Spatial-Transformer-Layer" ["l"="45.722,27.679"]
"zuoxingdong/VIN_PyTorch_Visdom" ["l"="57.377,18.29", "c"=45]
"NickLeoMartin/emergent_comm_rl" ["l"="46.105,28.255"]
"Venka97/FaceSwapCV" ["l"="46.153,28.085"]
"camigord/Self-Driving-Car-Nanodegree" ["l"="46.149,28.06"]
"camigord/Neural-Turing-Machine" ["l"="46.141,28.025"]
"hzy46/Char-RNN-TensorFlow" ["l"="53.462,27.478", "c"=60]
"minimaxir/textgenrnn" ["l"="53.411,25.809", "c"=172]
"dgriff777/rl_a3c_pytorch" ["l"="57.431,18.222", "c"=45]
"facebookresearch/StarSpace" ["l"="52.979,25.615", "c"=172]
"stanfordnlp/python-stanford-corenlp" ["l"="53.082,27.562", "c"=60]
"sony/nnabla" ["l"="5.776,-41.264", "c"=259]
"harveyslash/Facial-Similarity-with-Siamese-Networks-in-Pytorch" ["l"="57.674,19.582", "c"=433]
"automan000/Convolutional_LSTM_PyTorch" ["l"="41.495,25.78", "c"=537]
"philipperemy/tensorflow-multi-dimensional-lstm" ["l"="47.549,6.568", "c"=888]
"Stonesjtu/Pytorch-NCE" ["l"="46.451,27.925"]
"demelin/Noise-Contrastive-Estimation-NCE-for-pyTorch" ["l"="46.475,27.949"]
"volagold/nce" ["l"="46.484,27.926"]
"facebookresearch/FaderNetworks" ["l"="45.995,28.955", "c"=170]
"merantix/picasso" ["l"="50.411,33.234", "c"=314]
"zdevito/ATen" ["l"="51.447,29.977", "c"=83]
"lena-voita/good-translation-wrong-in-context" ["l"="53.709,24.904", "c"=492]
"jayparks/tf-seq2seq" ["l"="55.779,28.55", "c"=513]
"MiuLab/TC-Bot" ["l"="56.596,29.134", "c"=310]
"snakeztc/NeuralDialogPapers" ["l"="56.6,29.106", "c"=310]
"facebookresearch/DrQA" ["l"="54.617,26.505", "c"=587]
"facebookresearch/clevr-iep" ["l"="23.499,14.834", "c"=728]
"facebookresearch/ParlAI" ["l"="53.115,25.785", "c"=172]
"soskek/attention_is_all_you_need" ["l"="-34.57,20.369", "c"=1031]
"taoshen58/DiSAN" ["l"="53.479,28.768", "c"=1200]
"vineetjain96/one-shot-mann" ["l"="57.734,19.538", "c"=433]
"Leputa/MANN-meta-learning" ["l"="46.131,28.003"]
"shuaihuaiyi/QA" ["l"="55.789,28.386", "c"=513]
"mjacar/pytorch-nec" ["l"="46.23,28.092"]
"hiwonjoon/NEC" ["l"="46.23,28.108"]
"vietnh1009/Character-level-cnn-pytorch" ["l"="50.808,30.486", "c"=83]
"jasonwu0731/GLMP" ["l"="56.64,29.137", "c"=310]
"berlino/MemNN" ["l"="46.007,28.021"]
"JianGoForIt/YellowFin_Pytorch" ["l"="51.371,29.942", "c"=83]
"twitter-archive/torch-decisiontree" ["l"="45.796,27.652"]
}