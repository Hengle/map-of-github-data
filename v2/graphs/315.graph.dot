digraph G {
"tree-sitter/node-tree-sitter" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/node-tree-sitter" -> "tree-sitter/tree-sitter-typescript"
"tree-sitter/node-tree-sitter" -> "tree-sitter/haskell-tree-sitter"
"tree-sitter/node-tree-sitter" -> "tree-sitter/tree-sitter-cli"
"tree-sitter/node-tree-sitter" -> "tree-sitter/tree-sitter-go"
"tree-sitter/node-tree-sitter" -> "tree-sitter/tree-sitter-python"
"tree-sitter/node-tree-sitter" -> "tree-sitter/tree-sitter-json"
"tree-sitter/node-tree-sitter" -> "tree-sitter/go-tree-sitter"
"tree-sitter/py-tree-sitter" -> "tree-sitter/tree-sitter-python"
"tree-sitter/py-tree-sitter" -> "grantjenks/py-tree-sitter-languages"
"tree-sitter/py-tree-sitter" -> "microsoft/CodeXGLUE"
"tree-sitter/py-tree-sitter" -> "c2nes/javalang"
"tree-sitter/py-tree-sitter" -> "microsoft/CodeBERT"
"tree-sitter/py-tree-sitter" -> "tech-srl/code2seq"
"tree-sitter/py-tree-sitter" -> "tech-srl/code2vec"
"tree-sitter/py-tree-sitter" -> "github/CodeSearchNet"
"tree-sitter/py-tree-sitter" -> "wasiahmad/NeuralCodeSum"
"tree-sitter/py-tree-sitter" -> "tree-sitter/tree-sitter-java"
"tree-sitter/py-tree-sitter" -> "joernio/joern" ["e"=1]
"tree-sitter/py-tree-sitter" -> "JetBrains-Research/astminer"
"tree-sitter/py-tree-sitter" -> "rjust/defects4j" ["e"=1]
"tree-sitter/py-tree-sitter" -> "GumTreeDiff/gumtree" ["e"=1]
"tree-sitter/py-tree-sitter" -> "Goldziher/tree-sitter-language-pack"
"github/CodeSearchNet" -> "microsoft/CodeXGLUE"
"github/CodeSearchNet" -> "microsoft/CodeBERT"
"github/CodeSearchNet" -> "tech-srl/code2seq"
"github/CodeSearchNet" -> "tech-srl/code2vec"
"github/CodeSearchNet" -> "salesforce/CodeT5"
"github/CodeSearchNet" -> "guxd/deep-code-search"
"github/CodeSearchNet" -> "openai/human-eval"
"github/CodeSearchNet" -> "IBM/Project_CodeNet"
"github/CodeSearchNet" -> "wasiahmad/PLBART"
"github/CodeSearchNet" -> "CGCL-codes/naturalcc"
"github/CodeSearchNet" -> "EdinburghNLP/code-docstring-corpus"
"github/CodeSearchNet" -> "JetBrains-Research/astminer"
"github/CodeSearchNet" -> "facebookresearch/CodeGen"
"github/CodeSearchNet" -> "zhangj111/astnn" ["e"=1]
"github/CodeSearchNet" -> "wasiahmad/NeuralCodeSum"
"ml4code/ml4code.github.io" -> "google-research/python-graphs" ["e"=1]
"ml4code/ml4code.github.io" -> "CGCL-codes/naturalcc"
"ml4code/ml4code.github.io" -> "JetBrains-Research/code2seq"
"ml4code/ml4code.github.io" -> "tech-srl/code2seq"
"ml4code/ml4code.github.io" -> "saltudelft/ml4se"
"ml4code/ml4code.github.io" -> "JetBrains-Research/astminer"
"tree-sitter/tree-sitter-html" -> "tree-sitter/tree-sitter-css"
"tree-sitter/tree-sitter-html" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-html" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-html" -> "tree-sitter-grammars/tree-sitter-lua"
"tree-sitter/tree-sitter-html" -> "tree-sitter/tree-sitter-jsdoc"
"tree-sitter/tree-sitter-html" -> "tree-sitter/tree-sitter-regex"
"tree-sitter/tree-sitter-html" -> "camdencheek/tree-sitter-dockerfile"
"tree-sitter/tree-sitter-html" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-html" -> "tree-sitter/tree-sitter-typescript"
"tree-sitter/tree-sitter-html" -> "tree-sitter/tree-sitter-c"
"tree-sitter/tree-sitter-html" -> "shunsambongi/tree-sitter-gitignore"
"SySeVR/SySeVR" -> "CGCL-codes/VulDeePecker"
"SySeVR/SySeVR" -> "johnb110/VDPython"
"SySeVR/SySeVR" -> "epicosy/devign"
"SySeVR/SySeVR" -> "VulDetProject/ReVeal"
"SySeVR/SySeVR" -> "saikat107/Devign"
"SySeVR/SySeVR" -> "VulDeeLocator/VulDeeLocator"
"SySeVR/SySeVR" -> "HuantWang/FUNDED_NISL"
"SySeVR/SySeVR" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"SySeVR/SySeVR" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"SySeVR/SySeVR" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"SySeVR/SySeVR" -> "davidhin/linevd"
"SySeVR/SySeVR" -> "awsm-research/LineVul"
"SySeVR/SySeVR" -> "daiquocnguyen/GNN-ReGVD"
"SySeVR/SySeVR" -> "muVulDeePecker/muVulDeePecker"
"SySeVR/SySeVR" -> "CGCL-codes/VulCNN"
"johnb110/VDPython" -> "saikat107/Devign"
"johnb110/VDPython" -> "SySeVR/SySeVR"
"johnb110/VDPython" -> "VulDetProject/ReVeal"
"johnb110/VDPython" -> "epicosy/devign"
"johnb110/VDPython" -> "HuantWang/FUNDED_NISL"
"johnb110/VDPython" -> "CGCL-codes/VulDeePecker"
"johnb110/VDPython" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"johnb110/VDPython" -> "VulDeeLocator/VulDeeLocator"
"johnb110/VDPython" -> "ICL-ml4csec/VulBERTa"
"johnb110/VDPython" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"johnb110/VDPython" -> "daiquocnguyen/GNN-ReGVD"
"johnb110/VDPython" -> "davidhin/linevd"
"johnb110/VDPython" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"johnb110/VDPython" -> "muVulDeePecker/muVulDeePecker"
"johnb110/VDPython" -> "leontsui1987/VulDetector"
"IBM/Graph2Seq" -> "beckdaniel/acl2018_graph2seq" ["e"=1]
"IBM/Graph2Seq" -> "hugochan/RL-based-Graph2Seq-for-NQG" ["e"=1]
"IBM/Graph2Seq" -> "syxu828/Graph2Seq-0.1"
"IBM/Graph2Seq" -> "nwpuhq/Graph2Seq"
"IBM/Graph2Seq" -> "acleclair/ICPC2020_GNN"
"IBM/Graph2Seq" -> "diegma/graph-2-text" ["e"=1]
"IBM/Graph2Seq" -> "freesunshine0316/neural-graph-to-seq-mp" ["e"=1]
"IBM/Graph2Seq" -> "IBM/SQL-to-Text"
"IBM/Graph2Seq" -> "microsoft/graph-based-code-modelling"
"IBM/Graph2Seq" -> "lancopku/Graph-to-seq-comment-generation" ["e"=1]
"IBM/Graph2Seq" -> "xing-hu/TL-CodeSum"
"src-d/datasets" -> "src-d/ml"
"src-d/datasets" -> "JetBrains-Research/astminer"
"src-d/datasets" -> "bblfsh/bblfshd" ["e"=1]
"src-d/datasets" -> "mast-group/OpenVocabCodeNLM"
"src-d/datasets" -> "ASSERT-KTH/CodRep"
"src-d/datasets" -> "src-d/sourced-ce"
"src-d/datasets" -> "spcl/ncc"
"hamelsmu/code_search" -> "guxd/deep-code-search"
"hamelsmu/code_search" -> "facebookresearch/Neural-Code-Search-Evaluation-Dataset"
"hamelsmu/code_search" -> "hamelsmu/Seq2Seq_Tutorial"
"hamelsmu/code_search" -> "sriniiyer/codenn"
"hamelsmu/code_search" -> "github/CodeSearchNet"
"hamelsmu/code_search" -> "LittleYUYU/StackOverflow-Question-Code-Dataset"
"hamelsmu/code_search" -> "mast-group/OpenVocabCodeNLM"
"hamelsmu/code_search" -> "tech-srl/code2vec"
"hamelsmu/code_search" -> "chrisjmccormick/simsearch"
"hamelsmu/code_search" -> "novoselrok/codesnippetsearch"
"tree-sitter/tree-sitter-php" -> "claytonrcarter/tree-sitter-phpdoc"
"tree-sitter/tree-sitter-php" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-php" -> "tree-sitter/tree-sitter-css"
"tree-sitter/tree-sitter-php" -> "tree-sitter/tree-sitter-python"
"tree-sitter/tree-sitter-php" -> "tree-sitter/tree-sitter-regex"
"tree-sitter/tree-sitter-php" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-java" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-java" -> "tree-sitter/tree-sitter-python"
"tree-sitter/tree-sitter-java" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-java" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-java" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-java" -> "tree-sitter/tree-sitter-c"
"tree-sitter/tree-sitter-java" -> "tree-sitter/tree-sitter-ruby"
"tree-sitter/tree-sitter-java" -> "tree-sitter/tree-sitter-php"
"smacker/go-tree-sitter" -> "tree-sitter/tree-sitter-go"
"hamelsmu/Seq2Seq_Tutorial" -> "hamelsmu/ktext"
"guxd/deep-code-search" -> "sriniiyer/codenn"
"guxd/deep-code-search" -> "LittleYUYU/StackOverflow-Question-Code-Dataset"
"guxd/deep-code-search" -> "hamelsmu/code_search"
"guxd/deep-code-search" -> "facebookresearch/Neural-Code-Search-Evaluation-Dataset"
"guxd/deep-code-search" -> "wasiahmad/NeuralCodeSum"
"guxd/deep-code-search" -> "zhangj111/astnn" ["e"=1]
"guxd/deep-code-search" -> "tech-srl/code2seq"
"guxd/deep-code-search" -> "guxd/deepAPI"
"guxd/deep-code-search" -> "xing-hu/EMSE-DeepCom"
"guxd/deep-code-search" -> "Jun-jie-Huang/CoCLR" ["e"=1]
"guxd/deep-code-search" -> "FalconLK/facoy"
"guxd/deep-code-search" -> "tech-srl/code2vec"
"guxd/deep-code-search" -> "EdinburghNLP/code-docstring-corpus"
"guxd/deep-code-search" -> "wanyao1992/code_summarization_public"
"guxd/deep-code-search" -> "xing-hu/TL-CodeSum"
"tech-srl/code2vec" -> "tech-srl/code2seq"
"tech-srl/code2vec" -> "JetBrains-Research/astminer"
"tech-srl/code2vec" -> "microsoft/CodeBERT"
"tech-srl/code2vec" -> "microsoft/CodeXGLUE"
"tech-srl/code2vec" -> "github/CodeSearchNet"
"tech-srl/code2vec" -> "c2nes/javalang"
"tech-srl/code2vec" -> "zhangj111/astnn" ["e"=1]
"tech-srl/code2vec" -> "guxd/deep-code-search"
"tech-srl/code2vec" -> "sriniiyer/codenn"
"tech-srl/code2vec" -> "epicosy/devign"
"tech-srl/code2vec" -> "spcl/ncc"
"tech-srl/code2vec" -> "SySeVR/SySeVR"
"tech-srl/code2vec" -> "rjust/defects4j" ["e"=1]
"tech-srl/code2vec" -> "microsoft/graph-based-code-modelling"
"tech-srl/code2vec" -> "clonebench/BigCloneBench" ["e"=1]
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "EdinburghNLP/code-docstring-corpus"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "Jun-jie-Huang/CoCLR" ["e"=1]
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "LittleYUYU/CoaCor"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "rajarshihaldar/codetextmatch"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "guxd/deep-code-search"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "LittleYUYU/Interactive-Semantic-Parsing" ["e"=1]
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "facebookresearch/Neural-Code-Search-Evaluation-Dataset"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "jeniyat/StackOverflowNER"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "conala-corpus/conala-baseline"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "sriniiyer/concode"
"xing-hu/TL-CodeSum" -> "xing-hu/EMSE-DeepCom"
"xing-hu/TL-CodeSum" -> "wanyao1992/code_summarization_public"
"xing-hu/TL-CodeSum" -> "acleclair/ICPC2020_GNN"
"xing-hu/TL-CodeSum" -> "sriniiyer/codenn"
"xing-hu/TL-CodeSum" -> "EdinburghNLP/code-docstring-corpus"
"xing-hu/TL-CodeSum" -> "zhangj111/rencos"
"xing-hu/TL-CodeSum" -> "wasiahmad/NeuralCodeSum"
"xing-hu/TL-CodeSum" -> "Bolin0215/CSCGDual"
"VulDeeLocator/VulDeeLocator" -> "HuantWang/FUNDED_NISL"
"VulDeeLocator/VulDeeLocator" -> "VulDetProject/ReVeal"
"VulDeeLocator/VulDeeLocator" -> "johnb110/VDPython"
"VulDeeLocator/VulDeeLocator" -> "SySeVR/SySeVR"
"VulDeeLocator/VulDeeLocator" -> "jumormt/DeepWukong"
"VulDeeLocator/VulDeeLocator" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"VulDeeLocator/VulDeeLocator" -> "davidhin/linevd"
"VulDeeLocator/VulDeeLocator" -> "epicosy/devign"
"VulDeeLocator/VulDeeLocator" -> "saikat107/Devign"
"VulDeeLocator/VulDeeLocator" -> "CGCL-codes/VulCNN"
"VulDeeLocator/VulDeeLocator" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"VulDeeLocator/VulDeeLocator" -> "DanielLin1986/function_representation_learning"
"electricalwind/data7" -> "ARiSE-Lab/VELVET"
"electricalwind/data7" -> "Seahymn2019/Function-level-Vulnerability-Dataset"
"guxd/deepAPI" -> "tkdsheep/BIKER-ASE2018"
"SAP/project-kb" -> "eclipse-steady/steady"
"SAP/project-kb" -> "s3c2/vfcfinder"
"SAP/project-kb" -> "tuhh-softsec/vul4j" ["e"=1]
"SAP/project-kb" -> "TQRG/security-patches-dataset"
"SAP/project-kb" -> "secureIT-project/CVEfixes"
"michaelpradel/DeepBugs" -> "JetBrains-Research/DeepBugsPlugin"
"michaelpradel/DeepBugs" -> "microsoft/dpu-utils" ["e"=1]
"michaelpradel/DeepBugs" -> "sola-st/DynaPyt" ["e"=1]
"michaelpradel/DeepBugs" -> "JetBrains-Research/astminer"
"tech-srl/code2seq" -> "tech-srl/code2vec"
"tech-srl/code2seq" -> "sriniiyer/codenn"
"tech-srl/code2seq" -> "JetBrains-Research/astminer"
"tech-srl/code2seq" -> "wasiahmad/NeuralCodeSum"
"tech-srl/code2seq" -> "xing-hu/EMSE-DeepCom"
"tech-srl/code2seq" -> "EdinburghNLP/code-docstring-corpus"
"tech-srl/code2seq" -> "xing-hu/TL-CodeSum"
"tech-srl/code2seq" -> "CoderPat/structured-neural-summarization"
"tech-srl/code2seq" -> "m3yrin/code2seq"
"tech-srl/code2seq" -> "microsoft/graph-based-code-modelling"
"tech-srl/code2seq" -> "microsoft/CodeXGLUE"
"tech-srl/code2seq" -> "guxd/deep-code-search"
"tech-srl/code2seq" -> "zhangj111/astnn" ["e"=1]
"tech-srl/code2seq" -> "github/CodeSearchNet"
"tech-srl/code2seq" -> "tech-srl/slm-code-generation"
"acr31/features-javac" -> "dmitrykazhdan/Representing-Programs-with-Graphs"
"hamelsmu/ktext" -> "hamelsmu/Seq2Seq_Tutorial"
"JetBrains-Research/DeepBugsPlugin" -> "JetBrains-Research/buckwheat"
"JetBrains-Research/astminer" -> "JetBrains-Research/psiminer"
"JetBrains-Research/astminer" -> "tech-srl/code2vec"
"JetBrains-Research/astminer" -> "tech-srl/code2seq"
"JetBrains-Research/astminer" -> "JetBrains-Research/code2seq"
"JetBrains-Research/astminer" -> "m3yrin/code2seq"
"JetBrains-Research/astminer" -> "JetBrains-Research/reflekt" ["e"=1]
"JetBrains-Research/astminer" -> "sonoisa/code2vec"
"JetBrains-Research/astminer" -> "tech-srl/slm-code-generation"
"JetBrains-Research/astminer" -> "JetBrains-Research/embeddings-for-trees"
"JetBrains-Research/astminer" -> "Kolkir/cppminer"
"JetBrains-Research/astminer" -> "JetBrains-Research/RefactorInsight"
"JetBrains-Research/astminer" -> "acleclair/ICPC2020_GNN"
"JetBrains-Research/astminer" -> "michaelpradel/DeepBugs"
"JetBrains-Research/astminer" -> "wasiahmad/NeuralCodeSum"
"JetBrains-Research/astminer" -> "bdqnghi/infercode" ["e"=1]
"giganticode/codeprep" -> "mast-group/OpenVocabCodeNLM"
"xing-hu/EMSE-DeepCom" -> "xing-hu/TL-CodeSum"
"xing-hu/EMSE-DeepCom" -> "wanyao1992/code_summarization_public"
"xing-hu/EMSE-DeepCom" -> "xing-hu/DeepCom"
"xing-hu/EMSE-DeepCom" -> "wasiahmad/NeuralCodeSum"
"xing-hu/EMSE-DeepCom" -> "acleclair/ICPC2020_GNN"
"xing-hu/EMSE-DeepCom" -> "zhangj111/rencos"
"xing-hu/EMSE-DeepCom" -> "sh1doy/summarization_tf"
"xing-hu/EMSE-DeepCom" -> "gingasan/sit3"
"xing-hu/EMSE-DeepCom" -> "mcmillco/funcom"
"xing-hu/EMSE-DeepCom" -> "sriniiyer/codenn"
"xing-hu/EMSE-DeepCom" -> "CoderPat/structured-neural-summarization"
"xing-hu/EMSE-DeepCom" -> "LRNavin/AutoComments"
"xing-hu/EMSE-DeepCom" -> "XMUDM/BASTS"
"CoderPat/structured-neural-summarization" -> "CoderPat/OpenGNN"
"CoderPat/structured-neural-summarization" -> "emalgorithm/structured-neural-summarization-replication"
"CoderPat/structured-neural-summarization" -> "acleclair/ICPC2020_GNN"
"CoderPat/structured-neural-summarization" -> "wasiahmad/NeuralCodeSum"
"CGCL-codes/VulDeePecker" -> "SySeVR/SySeVR"
"CGCL-codes/VulDeePecker" -> "johnb110/VDPython"
"CGCL-codes/VulDeePecker" -> "VulDetProject/ReVeal"
"CGCL-codes/VulDeePecker" -> "epicosy/devign"
"CGCL-codes/VulDeePecker" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"CGCL-codes/VulDeePecker" -> "saikat107/Devign"
"CGCL-codes/VulDeePecker" -> "HuantWang/FUNDED_NISL"
"CGCL-codes/VulDeePecker" -> "ICL-ml4csec/VulBERTa"
"CGCL-codes/VulDeePecker" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"CGCL-codes/VulDeePecker" -> "LauraWartschinski/VulnerabilityDetection"
"CGCL-codes/VulDeePecker" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"CGCL-codes/VulDeePecker" -> "VulDeeLocator/VulDeeLocator"
"CGCL-codes/VulDeePecker" -> "muVulDeePecker/muVulDeePecker"
"CGCL-codes/VulDeePecker" -> "Seahymn2019/Function-level-Vulnerability-Dataset"
"CGCL-codes/VulDeePecker" -> "daiquocnguyen/GNN-ReGVD"
"muVulDeePecker/muVulDeePecker" -> "Seahymn2019/Function-level-Vulnerability-Dataset"
"Seahymn2019/Function-level-Vulnerability-Dataset" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"eclipse-steady/steady" -> "SAP/project-kb"
"eclipse-steady/steady" -> "SAP/fosstars-rating-core"
"eclipse-steady/steady" -> "google/vulncode-db" ["e"=1]
"eclipse-steady/steady" -> "SMAT-Lab/Scalpel" ["e"=1]
"src-d/sourced-ce" -> "src-d/engine-deprecated"
"casics/spiral" -> "giganticode/codeprep"
"sh1doy/summarization_tf" -> "mcmillco/funcom"
"spcl/ncc" -> "ChrisCummins/ProGraML"
"spcl/ncc" -> "ChrisCummins/paper-end2end-dl"
"spcl/ncc" -> "IITH-Compilers/IR2Vec"
"spcl/ncc" -> "ChrisCummins/phd"
"spcl/ncc" -> "xing-hu/EMSE-DeepCom"
"microsoft/graph-based-code-modelling" -> "VHellendoorn/ICLR20-Great"
"microsoft/graph-based-code-modelling" -> "dmitrykazhdan/Representing-Programs-with-Graphs"
"microsoft/graph-based-code-modelling" -> "microsoft/dpu-utils" ["e"=1]
"microsoft/graph-based-code-modelling" -> "EdinburghNLP/code-docstring-corpus"
"microsoft/graph-based-code-modelling" -> "CoderPat/structured-neural-summarization"
"microsoft/graph-based-code-modelling" -> "AI-nstein/hoppity"
"microsoft/graph-based-code-modelling" -> "tech-srl/slm-code-generation"
"microsoft/graph-based-code-modelling" -> "mast-group/OpenVocabCodeNLM"
"microsoft/graph-based-code-modelling" -> "tech-srl/code2seq"
"microsoft/graph-based-code-modelling" -> "sriniiyer/codenn"
"microsoft/graph-based-code-modelling" -> "bdqnghi/graph-ast" ["e"=1]
"xing-hu/DeepCom" -> "xing-hu/EMSE-DeepCom"
"mast-group/OpenVocabCodeNLM" -> "SLP-team/SLP-Core"
"mast-group/OpenVocabCodeNLM" -> "giganticode/codeprep"
"tree-sitter/tree-sitter-regex" -> "serenadeai/tree-sitter-scss"
"tree-sitter/tree-sitter-regex" -> "shunsambongi/tree-sitter-gitignore"
"tree-sitter/tree-sitter-regex" -> "alemuller/tree-sitter-make"
"tree-sitter/tree-sitter-regex" -> "tree-sitter/tree-sitter-jsdoc"
"src-d/gemini" -> "src-d/apollo"
"tree-sitter/tree-sitter-css" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-css" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-css" -> "shunsambongi/tree-sitter-gitignore"
"tree-sitter/tree-sitter-css" -> "tree-sitter-grammars/tree-sitter-lua"
"tree-sitter/tree-sitter-css" -> "serenadeai/tree-sitter-scss"
"tree-sitter/tree-sitter-css" -> "the-mikedavis/tree-sitter-diff"
"tree-sitter/tree-sitter-css" -> "tree-sitter/tree-sitter-jsdoc"
"wanyao1992/code_summarization_public" -> "xing-hu/EMSE-DeepCom"
"wanyao1992/code_summarization_public" -> "Bolin0215/CSCGDual"
"wanyao1992/code_summarization_public" -> "xing-hu/TL-CodeSum"
"wanyao1992/code_summarization_public" -> "XMUDM/BASTS"
"wanyao1992/code_summarization_public" -> "acleclair/ICPC2020_GNN"
"wanyao1992/code_summarization_public" -> "wasiahmad/NeuralCodeSum"
"wanyao1992/code_summarization_public" -> "sriniiyer/codenn"
"DanielLin1986/TransferRepresentationLearning" -> "DanielLin1986/function_representation_learning"
"bentrevett/code2vec" -> "sonoisa/code2vec"
"sonoisa/code2vec" -> "bentrevett/code2vec"
"mcmillco/funcom" -> "sh1doy/summarization_tf"
"mcmillco/funcom" -> "acleclair/ICPC2020_GNN"
"mcmillco/funcom" -> "Attn-to-FC/Attn-to-FC"
"tree-sitter/tree-sitter-jsdoc" -> "tree-sitter-grammars/tree-sitter-gitattributes"
"src-d/apollo" -> "src-d/modelforge"
"src-d/apollo" -> "src-d/gemini"
"dmitrykazhdan/Representing-Programs-with-Graphs" -> "acr31/features-javac"
"microsoft/CodeBERT" -> "microsoft/CodeXGLUE"
"microsoft/CodeBERT" -> "github/CodeSearchNet"
"microsoft/CodeBERT" -> "salesforce/CodeT5"
"microsoft/CodeBERT" -> "tech-srl/code2vec"
"microsoft/CodeBERT" -> "tech-srl/code2seq"
"microsoft/CodeBERT" -> "saltudelft/ml4se"
"microsoft/CodeBERT" -> "joernio/joern" ["e"=1]
"microsoft/CodeBERT" -> "rjust/defects4j" ["e"=1]
"microsoft/CodeBERT" -> "c2nes/javalang"
"microsoft/CodeBERT" -> "openai/human-eval"
"microsoft/CodeBERT" -> "wasiahmad/PLBART"
"microsoft/CodeBERT" -> "IBM/Project_CodeNet"
"microsoft/CodeBERT" -> "VulDetProject/ReVeal"
"microsoft/CodeBERT" -> "CGCL-codes/naturalcc"
"microsoft/CodeBERT" -> "zhangj111/astnn" ["e"=1]
"microsoft/CodeXGLUE" -> "microsoft/CodeBERT"
"microsoft/CodeXGLUE" -> "github/CodeSearchNet"
"microsoft/CodeXGLUE" -> "salesforce/CodeT5"
"microsoft/CodeXGLUE" -> "tech-srl/code2vec"
"microsoft/CodeXGLUE" -> "openai/human-eval"
"microsoft/CodeXGLUE" -> "tech-srl/code2seq"
"microsoft/CodeXGLUE" -> "IBM/Project_CodeNet"
"microsoft/CodeXGLUE" -> "saltudelft/ml4se"
"microsoft/CodeXGLUE" -> "wasiahmad/PLBART"
"microsoft/CodeXGLUE" -> "rjust/defects4j" ["e"=1]
"microsoft/CodeXGLUE" -> "VulDetProject/ReVeal"
"microsoft/CodeXGLUE" -> "CGCL-codes/naturalcc"
"microsoft/CodeXGLUE" -> "facebookresearch/CodeGen"
"microsoft/CodeXGLUE" -> "epicosy/devign"
"microsoft/CodeXGLUE" -> "evalplus/evalplus"
"facebookresearch/TransCoder" -> "facebookresearch/CodeGen"
"facebookresearch/TransCoder" -> "linkedin/detext" ["e"=1]
"facebookresearch/TransCoder" -> "github/CodeSearchNet"
"facebookresearch/TransCoder" -> "microsoft/CodeXGLUE"
"facebookresearch/TransCoder" -> "stayawayinesctec/stayaway-app" ["e"=1]
"facebookresearch/TransCoder" -> "microsoft/CodeBERT"
"facebookresearch/TransCoder" -> "bitdefender/hvmi" ["e"=1]
"facebookresearch/TransCoder" -> "VHellendoorn/Code-LMs"
"facebookresearch/TransCoder" -> "microsoft/graph-based-code-modelling"
"facebookresearch/TransCoder" -> "IBM/Project_CodeNet"
"facebookresearch/TransCoder" -> "wasiahmad/PLBART"
"facebookresearch/TransCoder" -> "tech-srl/code2seq"
"facebookresearch/TransCoder" -> "SamPom100/UnusualVolumeDetector" ["e"=1]
"facebookresearch/TransCoder" -> "1d8/Android-Analysis"
"facebookresearch/TransCoder" -> "cyberark/SkyArk" ["e"=1]
"epicosy/devign" -> "VulDetProject/ReVeal"
"epicosy/devign" -> "saikat107/Devign"
"epicosy/devign" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"epicosy/devign" -> "SySeVR/SySeVR"
"epicosy/devign" -> "johnb110/VDPython"
"epicosy/devign" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"epicosy/devign" -> "HuantWang/FUNDED_NISL"
"epicosy/devign" -> "daiquocnguyen/GNN-ReGVD"
"epicosy/devign" -> "awsm-research/LineVul"
"epicosy/devign" -> "CGCL-codes/VulCNN"
"epicosy/devign" -> "AMPLE001/AMPLE"
"epicosy/devign" -> "ICL-ml4csec/VulBERTa"
"epicosy/devign" -> "jumormt/DeepWukong"
"epicosy/devign" -> "VulDeeLocator/VulDeeLocator"
"epicosy/devign" -> "CGCL-codes/VulDeePecker"
"saltudelft/ml4se" -> "gai4se/LLM4SE"
"saltudelft/ml4se" -> "microsoft/CodeXGLUE"
"saltudelft/ml4se" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"saltudelft/ml4se" -> "microsoft/CodeBERT"
"saltudelft/ml4se" -> "SystemSecurityStorm/Awesome-Binary-Similarity" ["e"=1]
"saltudelft/ml4se" -> "CGCL-codes/naturalcc"
"saltudelft/ml4se" -> "epicosy/devign"
"saltudelft/ml4se" -> "iSEngLab/AwesomeLLM4APR"
"saltudelft/ml4se" -> "iSEngLab/AwesomeLLM4SE"
"saltudelft/ml4se" -> "VulDetProject/ReVeal"
"saltudelft/ml4se" -> "codefuse-ai/Awesome-Code-LLM"
"saltudelft/ml4se" -> "evalplus/evalplus"
"saltudelft/ml4se" -> "Fraunhofer-AISEC/cpg" ["e"=1]
"saltudelft/ml4se" -> "secureIT-project/CVEfixes"
"saltudelft/ml4se" -> "PurCL/CodeLLMPaper"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-typescript"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-css"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-python"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-go"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-rust"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/node-tree-sitter"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-c"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter-grammars/tree-sitter-lua"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-cpp"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-ruby"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-regex"
"tree-sitter/tree-sitter-javascript" -> "tree-sitter/tree-sitter-jsdoc"
"ChrisCummins/ProGraML" -> "spcl/ncc"
"ChrisCummins/ProGraML" -> "IITH-Compilers/IR2Vec"
"ChrisCummins/ProGraML" -> "tud-ccc/learning-compiler-graphs"
"ChrisCummins/ProGraML" -> "facebookresearch/CompilerGym" ["e"=1]
"ChrisCummins/ProGraML" -> "ChrisCummins/paper-end2end-dl"
"ChrisCummins/ProGraML" -> "wasiahmad/PLBART"
"ChrisCummins/ProGraML" -> "ChrisCummins/clgen"
"ChrisCummins/ProGraML" -> "danielzuegner/code-transformer"
"ChrisCummins/ProGraML" -> "ChrisCummins/phd"
"ChrisCummins/ProGraML" -> "microsoft/graph-based-code-modelling"
"ChrisCummins/ProGraML" -> "bdqnghi/infercode" ["e"=1]
"ChrisCummins/ProGraML" -> "VHellendoorn/ICLR20-Great"
"microsoft/methods2test" -> "dpfried/incoder"
"wala/graph4code" -> "vladbatushkov/strazh"
"microsoft/ptgnn" -> "VHellendoorn/ICLR20-Great"
"microsoft/ptgnn" -> "google-research/plur"
"microsoft/ptgnn" -> "ChrisCummins/ProGraML"
"microsoft/ptgnn" -> "microsoft/graph-based-code-modelling"
"microsoft/ptgnn" -> "microsoft/tf-gnn-samples" ["e"=1]
"microsoft/ptgnn" -> "AI-nstein/hoppity"
"microsoft/ptgnn" -> "microsoft/dpu-utils" ["e"=1]
"microsoft/ptgnn" -> "danielzuegner/code-transformer"
"microsoft/ptgnn" -> "microsoft/tf2-gnn" ["e"=1]
"saikat107/Devign" -> "VulDetProject/ReVeal"
"saikat107/Devign" -> "epicosy/devign"
"saikat107/Devign" -> "AMPLE001/AMPLE"
"saikat107/Devign" -> "johnb110/VDPython"
"saikat107/Devign" -> "daiquocnguyen/GNN-ReGVD"
"saikat107/Devign" -> "HuantWang/FUNDED_NISL"
"saikat107/Devign" -> "davidhin/linevd"
"saikat107/Devign" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"saikat107/Devign" -> "SySeVR/SySeVR"
"saikat107/Devign" -> "tdsc2022-artifact/artifact"
"saikat107/Devign" -> "jumormt/DeepWukong"
"saikat107/Devign" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"VulDetProject/ReVeal" -> "saikat107/Devign"
"VulDetProject/ReVeal" -> "epicosy/devign"
"VulDetProject/ReVeal" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"VulDetProject/ReVeal" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"VulDetProject/ReVeal" -> "johnb110/VDPython"
"VulDetProject/ReVeal" -> "HuantWang/FUNDED_NISL"
"VulDetProject/ReVeal" -> "daiquocnguyen/GNN-ReGVD"
"VulDetProject/ReVeal" -> "SySeVR/SySeVR"
"VulDetProject/ReVeal" -> "VulDeeLocator/VulDeeLocator"
"VulDetProject/ReVeal" -> "ICL-ml4csec/VulBERTa"
"VulDetProject/ReVeal" -> "davidhin/linevd"
"VulDetProject/ReVeal" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"VulDetProject/ReVeal" -> "ISU-PAAL/DeepDFA"
"VulDetProject/ReVeal" -> "awsm-research/LineVul"
"VulDetProject/ReVeal" -> "AMPLE001/AMPLE"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-cpp"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-css"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-ruby"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-python"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-typescript"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-rust"
"tree-sitter/tree-sitter-c" -> "tree-sitter-grammars/tree-sitter-lua"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-go"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-java"
"tree-sitter/tree-sitter-c" -> "tree-sitter/tree-sitter-c-sharp"
"LauraWartschinski/VulnerabilityDetection" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"LauraWartschinski/VulnerabilityDetection" -> "hazimhanif/svd_exp1"
"LauraWartschinski/VulnerabilityDetection" -> "CGCL-codes/VulDeePecker"
"LauraWartschinski/VulnerabilityDetection" -> "SySeVR/SySeVR"
"LauraWartschinski/VulnerabilityDetection" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"LauraWartschinski/VulnerabilityDetection" -> "VulDetProject/ReVeal"
"LauraWartschinski/VulnerabilityDetection" -> "CGCL-codes/VulCNN"
"LauraWartschinski/VulnerabilityDetection" -> "epicosy/devign"
"LauraWartschinski/VulnerabilityDetection" -> "HuantWang/FUNDED_NISL"
"LauraWartschinski/VulnerabilityDetection" -> "ICL-ml4csec/VulBERTa"
"LauraWartschinski/VulnerabilityDetection" -> "johnb110/VDPython"
"LauraWartschinski/VulnerabilityDetection" -> "Seahymn2019/Function-level-Vulnerability-Dataset"
"VHellendoorn/ICLR20-Great" -> "google-research-datasets/great"
"VHellendoorn/ICLR20-Great" -> "acleclair/ICPC2020_GNN"
"VHellendoorn/ICLR20-Great" -> "google-research/plur"
"JetBrains-Research/RefactorInsight" -> "JetBrains-Research/psiminer"
"JetBrains-Research/RefactorInsight" -> "JetBrains-Research/IntelliJDeodorant"
"JetBrains-Research/RefactorInsight" -> "JetBrains-Research/sosed"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "VulDetProject/ReVeal"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "awsm-research/LineVul"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "epicosy/devign"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "secureIT-project/CVEfixes"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "DLVulDet/PrimeVul"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "wagner-group/diversevul"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "davidhin/linevd"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "saikat107/Devign"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "SySeVR/SySeVR"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "CGCL-codes/VulCNN"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "johnb110/VDPython"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "CGCL-codes/VulDeePecker"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "eth-sri/sven"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "VulDeeLocator/VulDeeLocator"
"facebookresearch/Neural-Code-Search-Evaluation-Dataset" -> "BASE-LAB-SJTU/CosBench"
"facebookresearch/Neural-Code-Search-Evaluation-Dataset" -> "facebookresearch/aroma-paper-artifacts"
"facebookresearch/Neural-Code-Search-Evaluation-Dataset" -> "14dtj/CocoQa"
"jeniyat/StackOverflowNER" -> "lanwuwei/BERTOverflow"
"jeniyat/StackOverflowNER" -> "LittleYUYU/StackOverflow-Question-Code-Dataset"
"AI-nstein/hoppity" -> "ppashakhanloo/CodeTrek"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "Seahymn2019/Function-level-Vulnerability-Dataset"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "DanielLin1986/function_representation_learning"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "DanielLin1986/Data-Driven_Software_Vulnerability_Discovery"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "CGCL-codes/VulCNN"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "daiquocnguyen/GNN-ReGVD"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "johnb110/VDPython"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "DanielLin1986/TransferRepresentationLearning"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "VulDetProject/ReVeal"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "saikat107/Devign"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "davidhin/linevd"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "LauraWartschinski/VulnerabilityDetection"
"hazimhanif/svd_exp1" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"JetBrains-Research/kinference" -> "JetBrains-Research/psiminer"
"JetBrains-Research/kinference" -> "JetBrains-Research/buckwheat"
"JetBrains-Research/kinference" -> "JetBrains-Research/DeepBugsPlugin"
"JetBrains-Research/kinference" -> "JetBrains-Research/IntelliJDeodorant"
"JetBrains-Research/kinference" -> "JetBrains/reading-club"
"JetBrains-Research/kinference" -> "JetBrains-Research/RefactorInsight"
"zhangj111/rencos" -> "xing-hu/EMSE-DeepCom"
"zhangj111/rencos" -> "wasiahmad/NeuralCodeSum"
"zhangj111/rencos" -> "xing-hu/TL-CodeSum"
"Jacob-yen/LEMON" -> "library-testing/Muffin"
"Jacob-yen/LEMON" -> "ise-uiuc/FreeFuzz"
"Jacob-yen/LEMON" -> "dpankratz/TVMFuzz"
"Jacob-yen/LEMON" -> "ise-uiuc/tzer"
"Jacob-yen/LEMON" -> "ise-uiuc/NablaFuzz"
"brenocfg/AnghaBench" -> "jordiae/exebench"
"brenocfg/AnghaBench" -> "huzecong/ghcc" ["e"=1]
"mast-group/tassal" -> "mast-group/naturalize"
"acleclair/ICPC2020_GNN" -> "wasiahmad/NeuralCodeSum"
"acleclair/ICPC2020_GNN" -> "XMUDM/BASTS"
"acleclair/ICPC2020_GNN" -> "mcmillco/funcom"
"acleclair/ICPC2020_GNN" -> "CoderPat/structured-neural-summarization"
"acleclair/ICPC2020_GNN" -> "xing-hu/EMSE-DeepCom"
"acleclair/ICPC2020_GNN" -> "xing-hu/TL-CodeSum"
"acleclair/ICPC2020_GNN" -> "wanyao1992/code_summarization_public"
"acleclair/ICPC2020_GNN" -> "code-gen/cscg"
"acleclair/ICPC2020_GNN" -> "sh1doy/summarization_tf"
"acleclair/ICPC2020_GNN" -> "VHellendoorn/ICLR20-Great"
"JetBrains-Research/IntelliJDeodorant" -> "JetBrains-Research/sosed"
"JetBrains-Research/IntelliJDeodorant" -> "JetBrains-Research/psiminer"
"JetBrains-Research/IntelliJDeodorant" -> "JetBrains-Research/embeddings-for-trees"
"JetBrains-Research/IntelliJDeodorant" -> "JetBrains-Research/buckwheat"
"JetBrains-Research/IntelliJDeodorant" -> "JetBrains-Research/DeepBugsPlugin"
"JetBrains-Research/IntelliJDeodorant" -> "JetBrains-Research/RefactorInsight"
"parasj/contracode" -> "wasiahmad/PLBART"
"parasj/contracode" -> "danielzuegner/code-transformer"
"parasj/contracode" -> "google-research/plur"
"parasj/contracode" -> "Jun-jie-Huang/CoCLR" ["e"=1]
"JetBrains-Research/psiminer" -> "JetBrains-Research/Lupa"
"JetBrains-Research/psiminer" -> "JetBrains-Research/sosed"
"JetBrains-Research/psiminer" -> "JetBrains-Research/IntelliJDeodorant"
"JetBrains-Research/psiminer" -> "JetBrains-Research/astminer"
"JetBrains-Research/sosed" -> "JetBrains-Research/embeddings-for-trees"
"JetBrains-Research/sosed" -> "JetBrains-Research/buckwheat"
"JetBrains-Research/sosed" -> "JetBrains-Research/IntelliJDeodorant"
"JetBrains-Research/buckwheat" -> "JetBrains-Research/sosed"
"JetBrains-Research/code2seq" -> "JetBrains-Research/embeddings-for-trees"
"wasiahmad/NeuralCodeSum" -> "acleclair/ICPC2020_GNN"
"wasiahmad/NeuralCodeSum" -> "xing-hu/EMSE-DeepCom"
"wasiahmad/NeuralCodeSum" -> "code-gen/cscg"
"wasiahmad/NeuralCodeSum" -> "zhangj111/rencos"
"wasiahmad/NeuralCodeSum" -> "wanyao1992/code_summarization_public"
"wasiahmad/NeuralCodeSum" -> "sh1doy/summarization_tf"
"wasiahmad/NeuralCodeSum" -> "xing-hu/TL-CodeSum"
"wasiahmad/NeuralCodeSum" -> "mcmillco/funcom"
"wasiahmad/NeuralCodeSum" -> "EdinburghNLP/code-docstring-corpus"
"wasiahmad/NeuralCodeSum" -> "zetang94/ICSE2022_AST_Trans"
"wasiahmad/NeuralCodeSum" -> "tech-srl/code2seq"
"wasiahmad/NeuralCodeSum" -> "CoderPat/structured-neural-summarization"
"wasiahmad/NeuralCodeSum" -> "NougatCA/SPT-Code"
"wasiahmad/NeuralCodeSum" -> "VHellendoorn/ICLR20-Great"
"wasiahmad/NeuralCodeSum" -> "sriniiyer/codenn"
"JetBrains-Research/embeddings-for-trees" -> "JetBrains-Research/sosed"
"awsm-research/line-level-defect-prediction" -> "awsm-research/DeepLineDP"
"rajarshihaldar/codetextmatch" -> "cqu-isse/CARLCS-CNN"
"jianguda/mrncs" -> "wssun/TranCS"
"cqu-isse/CARLCS-CNN" -> "rajarshihaldar/codetextmatch"
"dpankratz/TVMFuzz" -> "ise-uiuc/tzer"
"CodedotAl/gpt-code-clippy" -> "CodedotAl/code-clippy-vscode"
"CodedotAl/gpt-code-clippy" -> "hieunc229/copilot-clone"
"CodedotAl/gpt-code-clippy" -> "fauxpilot/fauxpilot" ["e"=1]
"CodedotAl/gpt-code-clippy" -> "salesforce/CodeGen"
"CodedotAl/gpt-code-clippy" -> "THUDM/CodeGeeX" ["e"=1]
"CodedotAl/gpt-code-clippy" -> "samrawal/emacs-secondmate"
"CodedotAl/gpt-code-clippy" -> "salesforce/CodeT5"
"CodedotAl/gpt-code-clippy" -> "VHellendoorn/Code-LMs"
"CodedotAl/gpt-code-clippy" -> "ncoop57/code-clippy-vscode"
"CodedotAl/gpt-code-clippy" -> "microsoft/CodeXGLUE"
"CodedotAl/gpt-code-clippy" -> "badboysm890/clara-copilot"
"CodedotAl/gpt-code-clippy" -> "salesforce/CodeRL"
"CodedotAl/gpt-code-clippy" -> "EleutherAI/gpt-neox" ["e"=1]
"CodedotAl/gpt-code-clippy" -> "microsoft/CodeBERT"
"CodedotAl/gpt-code-clippy" -> "kingoflolz/mesh-transformer-jax" ["e"=1]
"facebookresearch/CodeGen" -> "facebookresearch/TransCoder"
"facebookresearch/CodeGen" -> "microsoft/CodeXGLUE"
"facebookresearch/CodeGen" -> "wasiahmad/PLBART"
"facebookresearch/CodeGen" -> "reddy-lab-code-research/XLCoST" ["e"=1]
"facebookresearch/CodeGen" -> "microsoft/CodeBERT"
"facebookresearch/CodeGen" -> "salesforce/CodeRL"
"facebookresearch/CodeGen" -> "agemagician/CodeTrans"
"facebookresearch/CodeGen" -> "parasj/contracode"
"facebookresearch/CodeGen" -> "CGCL-codes/naturalcc"
"facebookresearch/CodeGen" -> "salesforce/CodeT5"
"facebookresearch/CodeGen" -> "dpfried/incoder"
"facebookresearch/CodeGen" -> "github/CodeSearchNet"
"facebookresearch/CodeGen" -> "hendrycks/apps"
"facebookresearch/CodeGen" -> "tech-srl/code2seq"
"facebookresearch/CodeGen" -> "wasiahmad/AVATAR"
"IBM/Project_CodeNet" -> "microsoft/CodeXGLUE"
"IBM/Project_CodeNet" -> "microsoft/CodeBERT"
"IBM/Project_CodeNet" -> "github/CodeSearchNet"
"IBM/Project_CodeNet" -> "google-deepmind/code_contests"
"IBM/Project_CodeNet" -> "saltudelft/ml4se"
"IBM/Project_CodeNet" -> "openai/human-eval"
"IBM/Project_CodeNet" -> "salesforce/CodeT5"
"IBM/Project_CodeNet" -> "wasiahmad/PLBART"
"IBM/Project_CodeNet" -> "hendrycks/apps"
"IBM/Project_CodeNet" -> "tech-srl/code2vec"
"IBM/Project_CodeNet" -> "rjust/defects4j" ["e"=1]
"IBM/Project_CodeNet" -> "CGCL-codes/naturalcc"
"IBM/Project_CodeNet" -> "VHellendoorn/Code-LMs"
"IBM/Project_CodeNet" -> "salesforce/CodeGen"
"IBM/Project_CodeNet" -> "tree-sitter/py-tree-sitter"
"openai/human-eval" -> "evalplus/evalplus"
"openai/human-eval" -> "bigcode-project/bigcode-evaluation-harness"
"openai/human-eval" -> "microsoft/CodeXGLUE"
"openai/human-eval" -> "hendrycks/apps"
"openai/human-eval" -> "hendrycks/test" ["e"=1]
"openai/human-eval" -> "tatsu-lab/alpaca_eval" ["e"=1]
"openai/human-eval" -> "SWE-bench/SWE-bench"
"openai/human-eval" -> "salesforce/CodeGen"
"openai/human-eval" -> "codefuse-ai/Awesome-Code-LLM"
"openai/human-eval" -> "microsoft/CodeBERT"
"openai/human-eval" -> "sahil280114/codealpaca"
"openai/human-eval" -> "google/BIG-bench" ["e"=1]
"openai/human-eval" -> "google-deepmind/code_contests"
"openai/human-eval" -> "openai/grade-school-math" ["e"=1]
"openai/human-eval" -> "github/CodeSearchNet"
"salesforce/CodeT5" -> "microsoft/CodeBERT"
"salesforce/CodeT5" -> "microsoft/CodeXGLUE"
"salesforce/CodeT5" -> "VHellendoorn/Code-LMs"
"salesforce/CodeT5" -> "salesforce/CodeGen"
"salesforce/CodeT5" -> "github/CodeSearchNet"
"salesforce/CodeT5" -> "bigcode-project/starcoder" ["e"=1]
"salesforce/CodeT5" -> "salesforce/CodeRL"
"salesforce/CodeT5" -> "salesforce/CodeTF"
"salesforce/CodeT5" -> "saltudelft/ml4se"
"salesforce/CodeT5" -> "wasiahmad/PLBART"
"salesforce/CodeT5" -> "openai/human-eval"
"salesforce/CodeT5" -> "facebookresearch/CodeGen"
"salesforce/CodeT5" -> "sahil280114/codealpaca"
"salesforce/CodeT5" -> "codefuse-ai/Awesome-Code-LLM"
"salesforce/CodeT5" -> "dpfried/incoder"
"hieunc229/copilot-clone" -> "CodedotAl/gpt-code-clippy"
"hieunc229/copilot-clone" -> "CodedotAl/code-clippy-vscode"
"hieunc229/copilot-clone" -> "samrawal/emacs-secondmate"
"hieunc229/copilot-clone" -> "badboysm890/clara-copilot"
"hieunc229/copilot-clone" -> "ncoop57/code-clippy-vscode"
"hieunc229/copilot-clone" -> "Venthe/vscode-fauxpilot"
"hieunc229/copilot-clone" -> "fauxpilot/fauxpilot" ["e"=1]
"hieunc229/copilot-clone" -> "DeepGenX/CodeGenX" ["e"=1]
"hieunc229/copilot-clone" -> "salesforce/CodeGen"
"hieunc229/copilot-clone" -> "huggingface/llm-vscode" ["e"=1]
"hieunc229/copilot-clone" -> "CosmodiumCS/MK14-SuperVision"
"hieunc229/copilot-clone" -> "codota/tabnine-vscode" ["e"=1]
"hieunc229/copilot-clone" -> "ravenscroftj/turbopilot" ["e"=1]
"hieunc229/copilot-clone" -> "gencay/vscode-chatgpt" ["e"=1]
"hieunc229/copilot-clone" -> "THUDM/CodeGeeX" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "hendrycks/apps"
"microsoft/PythonProgrammingPuzzles" -> "google-research/python-graphs" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "microsoft/CodeT"
"microsoft/PythonProgrammingPuzzles" -> "girlscript/winter-of-contributing" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "GoTurkiye/training" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "salesforce/CodeRL"
"microsoft/PythonProgrammingPuzzles" -> "google-research-datasets/eth_py150_open"
"microsoft/PythonProgrammingPuzzles" -> "IntersectMBO/essential-cardano" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "dpfried/incoder"
"microsoft/PythonProgrammingPuzzles" -> "ellisk42/ec" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "google-deepmind/code_contests"
"microsoft/PythonProgrammingPuzzles" -> "benthecoder/yt-channels-DS-AI-ML-CS" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "openai/human-eval"
"microsoft/PythonProgrammingPuzzles" -> "bigcode-project/bigcode-evaluation-harness"
"microsoft/PythonProgrammingPuzzles" -> "shaohua0116/awesome-program"
"HuantWang/FUNDED_NISL" -> "jumormt/DeepWukong"
"HuantWang/FUNDED_NISL" -> "saikat107/Devign"
"HuantWang/FUNDED_NISL" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"HuantWang/FUNDED_NISL" -> "VulDeeLocator/VulDeeLocator"
"HuantWang/FUNDED_NISL" -> "VulDetProject/ReVeal"
"HuantWang/FUNDED_NISL" -> "johnb110/VDPython"
"HuantWang/FUNDED_NISL" -> "epicosy/devign"
"HuantWang/FUNDED_NISL" -> "davidhin/linevd"
"HuantWang/FUNDED_NISL" -> "daiquocnguyen/GNN-ReGVD"
"HuantWang/FUNDED_NISL" -> "SySeVR/SySeVR"
"HuantWang/FUNDED_NISL" -> "CGCL-codes/VulCNN"
"HuantWang/FUNDED_NISL" -> "ICL-ml4csec/VulBERTa"
"HuantWang/FUNDED_NISL" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"HuantWang/FUNDED_NISL" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"tree-sitter-grammars/tree-sitter-lua" -> "tree-sitter-grammars/tree-sitter-yaml"
"tree-sitter-grammars/tree-sitter-lua" -> "shunsambongi/tree-sitter-gitignore"
"tree-sitter-grammars/tree-sitter-lua" -> "tree-sitter/tree-sitter-css"
"davidhin/linevd" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"davidhin/linevd" -> "awsm-research/LineVul"
"davidhin/linevd" -> "ICL-ml4csec/VulBERTa"
"davidhin/linevd" -> "MVDetection/MVD"
"davidhin/linevd" -> "saikat107/Devign"
"davidhin/linevd" -> "ARiSE-Lab/VELVET"
"davidhin/linevd" -> "jumormt/DeepWukong"
"CodedotAl/code-clippy-vscode" -> "CodedotAl/gpt-code-clippy"
"CodedotAl/code-clippy-vscode" -> "hieunc229/copilot-clone"
"CodedotAl/code-clippy-vscode" -> "ncoop57/code-clippy-vscode"
"hendrycks/apps" -> "salesforce/CodeRL"
"hendrycks/apps" -> "openai/human-eval"
"hendrycks/apps" -> "evalplus/evalplus"
"hendrycks/apps" -> "microsoft/CodeT"
"hendrycks/apps" -> "dpfried/incoder"
"hendrycks/apps" -> "gagan3012/project-code-py"
"hendrycks/apps" -> "reddy-lab-code-research/PPOCoder" ["e"=1]
"hendrycks/apps" -> "CoderEval/CoderEval"
"hendrycks/apps" -> "bigcode-project/bigcode-evaluation-harness"
"hendrycks/apps" -> "abacaj/code-eval"
"hendrycks/apps" -> "wasiahmad/PLBART"
"hendrycks/apps" -> "microsoft/CodeXGLUE"
"hendrycks/apps" -> "FudanSELab/ClassEval"
"hendrycks/apps" -> "nuprl/MultiPL-E"
"hendrycks/apps" -> "LiveCodeBench/LiveCodeBench"
"ASSERT-KTH/VRepair" -> "awsm-research/VulRepair"
"ASSERT-KTH/VRepair" -> "ASSERT-KTH/sequencer" ["e"=1]
"ASSERT-KTH/VRepair" -> "awsm-research/VQM"
"agemagician/CodeTrans" -> "wasiahmad/PLBART"
"agemagician/CodeTrans" -> "parasj/contracode"
"agemagician/CodeTrans" -> "danielzuegner/code-transformer"
"agemagician/CodeTrans" -> "eth-sri/TFix" ["e"=1]
"badboysm890/clara-copilot" -> "samrawal/emacs-secondmate"
"badboysm890/clara-copilot" -> "hieunc229/copilot-clone"
"bayesgroup/code_transformers" -> "XMUDM/BASTS"
"gingasan/sit3" -> "gingasan/astruc"
"gingasan/sit3" -> "GoneZ5/SCRIPT"
"samrawal/emacs-secondmate" -> "badboysm890/clara-copilot"
"samrawal/emacs-secondmate" -> "semiosis/pen.el" ["e"=1]
"secureIT-project/CVEfixes" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"secureIT-project/CVEfixes" -> "wagner-group/diversevul"
"secureIT-project/CVEfixes" -> "Eshe0922/ReposVul"
"secureIT-project/CVEfixes" -> "awsm-research/LineVul"
"secureIT-project/CVEfixes" -> "VulDetProject/ReVeal"
"secureIT-project/CVEfixes" -> "Icyrockton/MegaVul"
"secureIT-project/CVEfixes" -> "TQRG/security-patches-dataset"
"secureIT-project/CVEfixes" -> "IBM/D2A"
"secureIT-project/CVEfixes" -> "awsm-research/VulRepair"
"secureIT-project/CVEfixes" -> "tuhh-softsec/vul4j" ["e"=1]
"secureIT-project/CVEfixes" -> "SAP/project-kb"
"secureIT-project/CVEfixes" -> "epicosy/devign"
"secureIT-project/CVEfixes" -> "ASSERT-KTH/VRepair"
"secureIT-project/CVEfixes" -> "eth-sri/sven"
"secureIT-project/CVEfixes" -> "SySeVR/SySeVR"
"CGCL-codes/naturalcc" -> "wasiahmad/NeuralCodeSum"
"CGCL-codes/naturalcc" -> "CGCL-codes/awesome-code-intelligence"
"CGCL-codes/naturalcc" -> "VulDetProject/ReVeal"
"CGCL-codes/naturalcc" -> "wanyao1992/code_summarization_public"
"CGCL-codes/naturalcc" -> "Zhaoyang-Chu/counterfactual-vulnerability-detection"
"CGCL-codes/naturalcc" -> "saltudelft/ml4se"
"CGCL-codes/naturalcc" -> "microsoft/CodeXGLUE"
"CGCL-codes/naturalcc" -> "davidhin/linevd"
"CGCL-codes/naturalcc" -> "epicosy/devign"
"CGCL-codes/naturalcc" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"CGCL-codes/naturalcc" -> "danielzuegner/code-transformer"
"CGCL-codes/naturalcc" -> "shangqing-liu/GraphSearchNet"
"CGCL-codes/naturalcc" -> "ml4code/ml4code.github.io"
"CGCL-codes/naturalcc" -> "parasj/contracode"
"CGCL-codes/naturalcc" -> "wasiahmad/PLBART"
"danielzuegner/code-transformer" -> "AwdHanPeng/TPTrans"
"danielzuegner/code-transformer" -> "parasj/contracode"
"danielzuegner/code-transformer" -> "VHellendoorn/ICLR20-Great"
"danielzuegner/code-transformer" -> "acleclair/ICPC2020_GNN"
"danielzuegner/code-transformer" -> "wasiahmad/NeuralCodeSum"
"danielzuegner/code-transformer" -> "bdqnghi/infercode" ["e"=1]
"danielzuegner/code-transformer" -> "pdlan/OSCAR" ["e"=1]
"danielzuegner/code-transformer" -> "XMUDM/BASTS"
"danielzuegner/code-transformer" -> "NougatCA/SPT-Code"
"danielzuegner/code-transformer" -> "jacobwwh/graphmatch_clone" ["e"=1]
"predoodl/predoo" -> "lin-tan/DocTer"
"alemuller/tree-sitter-make" -> "shunsambongi/tree-sitter-gitignore"
"camdencheek/tree-sitter-dockerfile" -> "camdencheek/tree-sitter-go-mod"
"camdencheek/tree-sitter-dockerfile" -> "tree-sitter/tree-sitter-jsdoc"
"CGCL-codes/VulCNN" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"CGCL-codes/VulCNN" -> "jumormt/DeepWukong"
"CGCL-codes/VulCNN" -> "AMPLE001/AMPLE"
"CGCL-codes/VulCNN" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"CGCL-codes/VulCNN" -> "MVDetection/MVD"
"CGCL-codes/VulCNN" -> "SKKU-SecLab/VulDeBERT"
"CGCL-codes/VulCNN" -> "daiquocnguyen/GNN-ReGVD"
"CGCL-codes/VulCNN" -> "ICL-ml4csec/VulBERTa"
"CGCL-codes/VulCNN" -> "epicosy/devign"
"CGCL-codes/VulCNN" -> "Vul-LMGNN/vul-LMGGNN"
"IBM/D2A" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"IBM/D2A" -> "davidhin/linevd"
"IBM/D2A" -> "tdsc2022-artifact/artifact"
"IBM/D2A" -> "ICL-ml4csec/VulBERTa"
"klainfo/ScottKnottESD" -> "awsm-research/Rnalytica"
"klainfo/ScottKnottESD" -> "awsm-research/DeepLineDP"
"nus-apr/cerberus" -> "DehengYang/TransplantFix" ["e"=1]
"nus-apr/cerberus" -> "yuntongzhang/vulnfix"
"soarsmu/attack-pretrain-models-of-code" -> "SEKE-Adversary/CARROT"
"TQRG/security-patches-dataset" -> "TQRG/secbench"
"IITH-Compilers/IR2Vec" -> "jordiae/exebench"
"IITH-Compilers/IR2Vec" -> "ChrisCummins/ProGraML"
"IITH-Compilers/IR2Vec" -> "spcl/ncc"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "davidhin/linevd"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "VulDetProject/ReVeal"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "ICL-ml4csec/VulBERTa"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "epicosy/devign"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "CGCL-codes/VulCNN"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "daiquocnguyen/GNN-ReGVD"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "HuantWang/FUNDED_NISL"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "MVDetection/MVD"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "jumormt/DeepWukong"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "awsm-research/LineVul"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "saikat107/Devign"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "IBM/D2A"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "ARiSE-Lab/VELVET"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "DanielLin1986/function_representation_learning"
"wasiahmad/PLBART" -> "parasj/contracode"
"wasiahmad/PLBART" -> "agemagician/CodeTrans"
"wasiahmad/PLBART" -> "dpfried/incoder"
"wasiahmad/PLBART" -> "wasiahmad/NeuralCodeSum"
"wasiahmad/PLBART" -> "facebookresearch/code-prediction-transformer" ["e"=1]
"wasiahmad/PLBART" -> "google-research/plur"
"wasiahmad/PLBART" -> "bayesgroup/code_transformers"
"wasiahmad/PLBART" -> "bdqnghi/infercode" ["e"=1]
"wasiahmad/PLBART" -> "wasiahmad/AVATAR"
"wasiahmad/PLBART" -> "acleclair/ICPC2020_GNN"
"wasiahmad/PLBART" -> "pdlan/OSCAR" ["e"=1]
"wasiahmad/PLBART" -> "yuewang-cuhk/awesome-programming-language-pretraining-papers" ["e"=1]
"wasiahmad/PLBART" -> "17385/TreeBERT"
"wasiahmad/PLBART" -> "microsoft/CodeXGLUE"
"gingasan/astruc" -> "gingasan/sit3"
"ganler/memcov" -> "llm4code/2024"
"salesforce/CodeGen" -> "salesforce/CodeT5"
"salesforce/CodeGen" -> "fauxpilot/fauxpilot" ["e"=1]
"salesforce/CodeGen" -> "bigcode-project/starcoder" ["e"=1]
"salesforce/CodeGen" -> "microsoft/CodeXGLUE"
"salesforce/CodeGen" -> "openai/human-eval"
"salesforce/CodeGen" -> "THUDM/CodeGeeX" ["e"=1]
"salesforce/CodeGen" -> "microsoft/CodeBERT"
"salesforce/CodeGen" -> "VHellendoorn/Code-LMs"
"salesforce/CodeGen" -> "salesforce/CodeRL"
"salesforce/CodeGen" -> "sahil280114/codealpaca"
"salesforce/CodeGen" -> "nlpxucan/WizardLM" ["e"=1]
"salesforce/CodeGen" -> "facebookresearch/metaseq" ["e"=1]
"salesforce/CodeGen" -> "CarperAI/trlx" ["e"=1]
"salesforce/CodeGen" -> "salesforce/jaxformer" ["e"=1]
"salesforce/CodeGen" -> "EleutherAI/gpt-neox" ["e"=1]
"google-deepmind/code_contests" -> "openai/human-eval"
"google-deepmind/code_contests" -> "hendrycks/apps"
"google-deepmind/code_contests" -> "microsoft/CodeXGLUE"
"google-deepmind/code_contests" -> "IBM/Project_CodeNet"
"google-deepmind/code_contests" -> "ethancaballero/description2code"
"google-deepmind/code_contests" -> "salesforce/CodeT5"
"google-deepmind/code_contests" -> "salesforce/CodeRL"
"google-deepmind/code_contests" -> "salesforce/CodeGen"
"google-deepmind/code_contests" -> "microsoft/CodeBERT"
"google-deepmind/code_contests" -> "evalplus/evalplus"
"google-deepmind/code_contests" -> "bigcode-project/octopack"
"google-deepmind/code_contests" -> "github/CodeSearchNet"
"google-deepmind/code_contests" -> "facebookresearch/CodeGen"
"google-deepmind/code_contests" -> "VHellendoorn/Code-LMs"
"google-deepmind/code_contests" -> "saltudelft/ml4se"
"library-testing/Muffin" -> "Jacob-yen/LEMON"
"library-testing/Muffin" -> "ise-uiuc/NablaFuzz"
"library-testing/Muffin" -> "ise-uiuc/FreeFuzz"
"library-testing/Muffin" -> "predoodl/predoo"
"ise-uiuc/nnsmith" -> "ise-uiuc/FreeFuzz"
"ise-uiuc/nnsmith" -> "ise-uiuc/tzer"
"ise-uiuc/nnsmith" -> "ise-uiuc/neuri-artifact"
"ise-uiuc/nnsmith" -> "ise-uiuc/TitanFuzz"
"ise-uiuc/nnsmith" -> "ise-uiuc/WhiteFox"
"ise-uiuc/nnsmith" -> "Jacob-yen/LEMON"
"ise-uiuc/nnsmith" -> "ise-uiuc/DeepREL"
"ise-uiuc/nnsmith" -> "library-testing/Muffin"
"ise-uiuc/nnsmith" -> "llylly/RANUM"
"VHellendoorn/Code-LMs" -> "salesforce/CodeT5"
"VHellendoorn/Code-LMs" -> "salesforce/CodeGen"
"VHellendoorn/Code-LMs" -> "microsoft/CodeXGLUE"
"VHellendoorn/Code-LMs" -> "dpfried/incoder"
"VHellendoorn/Code-LMs" -> "salesforce/CodeRL"
"VHellendoorn/Code-LMs" -> "microsoft/CodeBERT"
"VHellendoorn/Code-LMs" -> "openai/human-eval"
"VHellendoorn/Code-LMs" -> "facebookresearch/CodeGen"
"VHellendoorn/Code-LMs" -> "saltudelft/ml4se"
"VHellendoorn/Code-LMs" -> "wasiahmad/PLBART"
"VHellendoorn/Code-LMs" -> "hendrycks/apps"
"VHellendoorn/Code-LMs" -> "IBM/Project_CodeNet"
"VHellendoorn/Code-LMs" -> "evalplus/evalplus"
"VHellendoorn/Code-LMs" -> "bigcode-project/bigcode-evaluation-harness"
"VHellendoorn/Code-LMs" -> "EleutherAI/gpt-neox" ["e"=1]
"dpfried/incoder" -> "salesforce/CodeRL"
"dpfried/incoder" -> "wasiahmad/PLBART"
"dpfried/incoder" -> "amazon-science/mxeval"
"dpfried/incoder" -> "jkoppel/QuixBugs" ["e"=1]
"dpfried/incoder" -> "microsoft/methods2test"
"dpfried/incoder" -> "shuyanzhou/docprompting"
"dpfried/incoder" -> "hendrycks/apps"
"dpfried/incoder" -> "microsoft/ReACC"
"AMPLE001/AMPLE" -> "saikat107/Devign"
"AMPLE001/AMPLE" -> "CocaVul/Coca"
"AMPLE001/AMPLE" -> "tdsc2022-artifact/artifact"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-c"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-python"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-ruby"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-rust"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-css"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-go"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-typescript"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-c-sharp"
"tree-sitter/tree-sitter-cpp" -> "tree-sitter/tree-sitter-regex"
"tree-sitter/tree-sitter-cpp" -> "alemuller/tree-sitter-make"
"ChrisCummins/phd" -> "ChrisCummins/paper-end2end-dl"
"ChrisCummins/phd" -> "spcl/ncc"
"ChrisCummins/phd" -> "m-zakeri/iust_deep_fuzz" ["e"=1]
"ChrisCummins/phd" -> "RUB-SysSec/grimoire" ["e"=1]
"ise-uiuc/FreeFuzz" -> "ise-uiuc/DeepREL"
"ise-uiuc/FreeFuzz" -> "ise-uiuc/NablaFuzz"
"ise-uiuc/FreeFuzz" -> "lin-tan/DocTer"
"ise-uiuc/FreeFuzz" -> "ise-uiuc/TitanFuzz"
"ise-uiuc/FreeFuzz" -> "ise-uiuc/nnsmith"
"ise-uiuc/FreeFuzz" -> "library-testing/Muffin"
"ise-uiuc/FreeFuzz" -> "ise-uiuc/neuri-artifact"
"ise-uiuc/FreeFuzz" -> "ise-uiuc/tzer"
"ise-uiuc/FreeFuzz" -> "Jacob-yen/LEMON"
"ise-uiuc/FreeFuzz" -> "ganler/memcov"
"ise-uiuc/FreeFuzz" -> "tensorscopepro/Tensorscope"
"lin-tan/DocTer" -> "ise-uiuc/DeepREL"
"lin-tan/DocTer" -> "lin-tan/eagle"
"lin-tan/DocTer" -> "tensorscopepro/Tensorscope"
"lin-tan/DocTer" -> "ise-uiuc/FreeFuzz"
"lin-tan/DocTer" -> "predoodl/predoo"
"ICL-ml4csec/VulBERTa" -> "davidhin/linevd"
"ICL-ml4csec/VulBERTa" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"ICL-ml4csec/VulBERTa" -> "VulDetProject/ReVeal"
"ICL-ml4csec/VulBERTa" -> "johnb110/VDPython"
"ICL-ml4csec/VulBERTa" -> "CGCL-codes/VulCNN"
"ICL-ml4csec/VulBERTa" -> "MVDetection/MVD"
"ICL-ml4csec/VulBERTa" -> "daiquocnguyen/GNN-ReGVD"
"ICL-ml4csec/VulBERTa" -> "epicosy/devign"
"ICL-ml4csec/VulBERTa" -> "IBM/D2A"
"ICL-ml4csec/VulBERTa" -> "awsm-research/LineVul"
"ICL-ml4csec/VulBERTa" -> "saikat107/Devign"
"ICL-ml4csec/VulBERTa" -> "ISU-PAAL/DeepDFA"
"ICL-ml4csec/VulBERTa" -> "AMPLE001/AMPLE"
"ICL-ml4csec/VulBERTa" -> "HuantWang/FUNDED_NISL"
"ICL-ml4csec/VulBERTa" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"rizwan09/REDCODER" -> "microsoft/ReACC"
"ppashakhanloo/CodeTrek" -> "google-research-datasets/great"
"tree-sitter/tree-sitter-json" -> "tree-sitter/tree-sitter-css"
"tree-sitter/tree-sitter-json" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-json" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-json" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-json" -> "tree-sitter-grammars/tree-sitter-yaml"
"tree-sitter/tree-sitter-json" -> "tree-sitter/tree-sitter-regex"
"tree-sitter/tree-sitter-json" -> "tree-sitter-grammars/tree-sitter-lua"
"tree-sitter/tree-sitter-json" -> "alemuller/tree-sitter-make"
"tree-sitter/tree-sitter-json" -> "tree-sitter/tree-sitter-jsdoc"
"tree-sitter/tree-sitter-json" -> "camdencheek/tree-sitter-dockerfile"
"tree-sitter-grammars/tree-sitter-markdown" -> "vigoux/tree-sitter-viml"
"tree-sitter-grammars/tree-sitter-markdown" -> "ikatyang/tree-sitter-markdown"
"tree-sitter-grammars/tree-sitter-markdown" -> "tree-sitter/tree-sitter-html"
"tree-sitter-grammars/tree-sitter-markdown" -> "kdheepak/panvimdoc" ["e"=1]
"tree-sitter-grammars/tree-sitter-markdown" -> "tree-sitter/tree-sitter-json"
"tree-sitter-grammars/tree-sitter-markdown" -> "tree-sitter-grammars/tree-sitter-lua"
"tree-sitter-grammars/tree-sitter-markdown" -> "tree-sitter/tree-sitter-regex"
"ncoop57/code-clippy-vscode" -> "CodedotAl/code-clippy-vscode"
"shangqing-liu/GraphSearchNet" -> "jianguda/mrncs"
"shangqing-liu/GraphSearchNet" -> "degraphcs/DeGraphCS"
"GoneZ5/SCRIPT" -> "gingasan/sit3"
"microsoft/PyCodeGPT" -> "shuyanzhou/docprompting"
"microsoft/PyCodeGPT" -> "xlang-ai/EVOR"
"microsoft/PyCodeGPT" -> "salesforce/CodeRL"
"microsoft/PyCodeGPT" -> "microsoft/ReACC"
"microsoft/PyCodeGPT" -> "rizwan09/REDCODER"
"microsoft/PyCodeGPT" -> "shrivastavadisha/repo_level_prompt_generation"
"awsm-research/DeepLineDP" -> "awsm-research/line-level-defect-prediction"
"awsm-research/LineVul" -> "davidhin/linevd"
"awsm-research/LineVul" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"awsm-research/LineVul" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"awsm-research/LineVul" -> "epicosy/devign"
"awsm-research/LineVul" -> "VulDetProject/ReVeal"
"awsm-research/LineVul" -> "ICL-ml4csec/VulBERTa"
"awsm-research/LineVul" -> "DLVulDet/PrimeVul"
"awsm-research/LineVul" -> "CGCL-codes/VulCNN"
"awsm-research/LineVul" -> "awsm-research/AIBugHunter"
"awsm-research/LineVul" -> "ISU-PAAL/DeepDFA"
"awsm-research/LineVul" -> "awsm-research/VulRepair"
"awsm-research/LineVul" -> "awsm-research/DeepLineDP"
"awsm-research/LineVul" -> "awsm-research/line-level-defect-prediction"
"awsm-research/LineVul" -> "MVDetection/MVD"
"awsm-research/LineVul" -> "tdsc2022-artifact/artifact"
"daiquocnguyen/GNN-ReGVD" -> "saikat107/Devign"
"daiquocnguyen/GNN-ReGVD" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"daiquocnguyen/GNN-ReGVD" -> "AMPLE001/AMPLE"
"daiquocnguyen/GNN-ReGVD" -> "VulDetProject/ReVeal"
"daiquocnguyen/GNN-ReGVD" -> "epicosy/devign"
"daiquocnguyen/GNN-ReGVD" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"daiquocnguyen/GNN-ReGVD" -> "CGCL-codes/VulCNN"
"ise-uiuc/tzer" -> "dpankratz/TVMFuzz"
"ise-uiuc/tzer" -> "ise-uiuc/nnsmith"
"ise-uiuc/tzer" -> "ise-uiuc/neuri-artifact"
"ise-uiuc/tzer" -> "ise-uiuc/FreeFuzz"
"ise-uiuc/tzer" -> "ganler/memcov"
"grantjenks/py-tree-sitter-languages" -> "Goldziher/tree-sitter-language-pack"
"grantjenks/py-tree-sitter-languages" -> "tree-sitter/py-tree-sitter"
"mast-group/naturalize" -> "mast-group/tassal"
"jumormt/DeepWukong" -> "HuantWang/FUNDED_NISL"
"jumormt/DeepWukong" -> "CGCL-codes/VulCNN"
"jumormt/DeepWukong" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"jumormt/DeepWukong" -> "davidhin/linevd"
"jumormt/DeepWukong" -> "saikat107/Devign"
"jumormt/DeepWukong" -> "MVDetection/MVD"
"jumormt/DeepWukong" -> "VulDeeLocator/VulDeeLocator"
"jumormt/DeepWukong" -> "Vul-LMGNN/vul-LMGGNN"
"jumormt/DeepWukong" -> "epicosy/devign"
"jumormt/DeepWukong" -> "daiquocnguyen/GNN-ReGVD"
"jumormt/DeepWukong" -> "VulDetProject/ReVeal"
"google-research/plur" -> "google-research-datasets/great"
"google-research/plur" -> "VHellendoorn/ICLR20-Great"
"microsoft/ReACC" -> "rizwan09/REDCODER"
"microsoft/ReACC" -> "saltudelft/codefill"
"shunsambongi/tree-sitter-gitignore" -> "tree-sitter-grammars/tree-sitter-gitattributes"
"shunsambongi/tree-sitter-gitignore" -> "the-mikedavis/tree-sitter-git-rebase"
"wssun/TranCS" -> "jianguda/mrncs"
"the-mikedavis/tree-sitter-git-rebase" -> "tree-sitter-grammars/tree-sitter-gitattributes"
"the-mikedavis/tree-sitter-git-rebase" -> "shunsambongi/tree-sitter-gitignore"
"the-mikedavis/tree-sitter-diff" -> "the-mikedavis/tree-sitter-git-commit"
"the-mikedavis/tree-sitter-diff" -> "tree-sitter-grammars/tree-sitter-gitattributes"
"the-mikedavis/tree-sitter-diff" -> "serenadeai/tree-sitter-scss"
"the-mikedavis/tree-sitter-diff" -> "shunsambongi/tree-sitter-gitignore"
"mast-group/convolutional-attention" -> "mast-group/tassal"
"mast-group/convolutional-attention" -> "mast-group/naturalize"
"mast-group/convolutional-attention" -> "samialabed/method-name-prediction"
"shuyanzhou/docprompting" -> "rizwan09/REDCODER"
"CoderEval/CoderEval" -> "FudanSELab/ClassEval"
"CoderEval/CoderEval" -> "shrivastavadisha/repo_level_prompt_generation"
"CoderEval/CoderEval" -> "ntunlp/ExecEval"
"CoderEval/CoderEval" -> "Intelligent-CAT-Lab/PLTranslationEmpirical"
"CoderEval/CoderEval" -> "amazon-science/cceval"
"bigcode-project/Megatron-LM" -> "bigcode-project/octopack"
"bigcode-project/Megatron-LM" -> "bigcode-project/bigcode-dataset"
"bigcode-project/Megatron-LM" -> "salesforce/CodeRL"
"bigcode-project/Megatron-LM" -> "bigcode-project/bigcode-evaluation-harness"
"bigcode-project/Megatron-LM" -> "loubnabnl/santacoder-finetuning"
"xlang-ai/DS-1000" -> "xlang-ai/Binder" ["e"=1]
"xlang-ai/DS-1000" -> "bigcode-project/octopack"
"xlang-ai/DS-1000" -> "bigcode-project/bigcode-evaluation-harness"
"xlang-ai/DS-1000" -> "bigcode-project/bigcodebench"
"bigcode-project/bigcode-dataset" -> "bigcode-project/bigcode-analysis"
"bigcode-project/bigcode-dataset" -> "bigcode-project/the-stack-v2"
"bigcode-project/bigcode-dataset" -> "bigscience-workshop/data-preparation" ["e"=1]
"bigcode-project/bigcode-dataset" -> "bigcode-project/octopack"
"bigcode-project/bigcode-dataset" -> "bigcode-project/bigcode-evaluation-harness"
"bigcode-project/bigcode-dataset" -> "amazon-science/cceval"
"bigcode-project/bigcode-dataset" -> "openai/human-eval-infilling"
"bigcode-project/bigcode-dataset" -> "evalplus/evalplus"
"bigcode-project/bigcode-dataset" -> "ChenghaoMou/text-dedup" ["e"=1]
"bigcode-project/bigcode-dataset" -> "huggingface/cosmopedia" ["e"=1]
"bigcode-project/bigcode-dataset" -> "facebookresearch/cruxeval"
"bigcode-project/bigcode-dataset" -> "nuprl/MultiPL-E"
"bigcode-project/bigcode-dataset" -> "bigcode-project/Megatron-LM"
"bigcode-project/bigcode-dataset" -> "nickrosh/evol-teacher"
"bigcode-project/bigcode-dataset" -> "bigcode-project/selfcodealign"
"tree-sitter/tree-sitter-ruby" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-ruby" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-ruby" -> "tree-sitter/tree-sitter-rust"
"tree-sitter/tree-sitter-ruby" -> "tree-sitter/tree-sitter-go"
"tree-sitter/tree-sitter-ruby" -> "tree-sitter/tree-sitter-regex"
"ymirsky/VulChecker" -> "davidhin/linevd"
"ymirsky/VulChecker" -> "VulDeeLocator/VulDeeLocator"
"ymirsky/VulChecker" -> "ISU-PAAL/DeepDFA"
"ymirsky/VulChecker" -> "CGCL-codes/VulTrigger"
"ymirsky/VulChecker" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"salesforce/CodeRL" -> "hendrycks/apps"
"salesforce/CodeRL" -> "reddy-lab-code-research/PPOCoder" ["e"=1]
"salesforce/CodeRL" -> "dpfried/incoder"
"salesforce/CodeRL" -> "Zyq-scut/RLTF" ["e"=1]
"salesforce/CodeRL" -> "wasiahmad/PLBART"
"salesforce/CodeRL" -> "microsoft/CodeT"
"salesforce/CodeRL" -> "shunzh/Code-AI-Tree-Search"
"salesforce/CodeRL" -> "microsoft/PyCodeGPT"
"salesforce/CodeRL" -> "salesforce/CodeT5"
"salesforce/CodeRL" -> "amazon-science/recode"
"salesforce/CodeRL" -> "microsoft/CodeXGLUE"
"salesforce/CodeRL" -> "agemagician/CodeTrans"
"salesforce/CodeRL" -> "shuyanzhou/docprompting"
"salesforce/CodeRL" -> "facebookresearch/CodeGen"
"salesforce/CodeRL" -> "bigcode-project/bigcode-evaluation-harness"
"awsm-research/VulRepair" -> "ASSERT-KTH/VRepair"
"awsm-research/VulRepair" -> "davidhin/linevd"
"awsm-research/VulRepair" -> "iSEngLab/LLM4VulFix"
"awsm-research/VulRepair" -> "chijianlei/SeqTrans"
"awsm-research/VulRepair" -> "awsm-research/AIBugHunter"
"microsoft/CodeT" -> "FudanSELab/ClassEval"
"microsoft/CodeT" -> "salesforce/CodeRL"
"microsoft/CodeT" -> "amazon-science/cceval"
"microsoft/CodeT" -> "allanj/repo-level-codegen-papers"
"microsoft/CodeT" -> "hendrycks/apps"
"microsoft/CodeT" -> "microsoft/DiVeRSe"
"microsoft/CodeT" -> "shrivastavadisha/repo_level_prompt_generation"
"microsoft/CodeT" -> "Leolty/repobench"
"microsoft/CodeT" -> "evalplus/evalplus"
"microsoft/CodeT" -> "bigcode-project/bigcode-evaluation-harness"
"microsoft/CodeT" -> "TIGER-AI-Lab/Program-of-Thoughts" ["e"=1]
"microsoft/CodeT" -> "CoderEval/CoderEval"
"microsoft/CodeT" -> "dpfried/incoder"
"microsoft/CodeT" -> "shuyanzhou/docprompting"
"microsoft/CodeT" -> "saltudelft/ml4se"
"ise-uiuc/DeepREL" -> "ise-uiuc/NablaFuzz"
"ise-uiuc/DeepREL" -> "lin-tan/DocTer"
"ise-uiuc/DeepREL" -> "ise-uiuc/FreeFuzz"
"ise-uiuc/DeepREL" -> "ise-uiuc/WhiteFox"
"ise-uiuc/DeepREL" -> "ise-uiuc/TitanFuzz"
"ise-uiuc/DeepREL" -> "ise-uiuc/neuri-artifact"
"ise-uiuc/NablaFuzz" -> "ise-uiuc/DeepREL"
"ise-uiuc/NablaFuzz" -> "ise-uiuc/TitanFuzz"
"ise-uiuc/NablaFuzz" -> "llm4code/2024"
"ise-uiuc/NablaFuzz" -> "ise-uiuc/neuri-artifact"
"ise-uiuc/NablaFuzz" -> "ise-uiuc/uniapr"
"nuprl/MultiPL-E" -> "bigcode-project/bigcode-evaluation-harness"
"nuprl/MultiPL-E" -> "amazon-science/cceval"
"nuprl/MultiPL-E" -> "openai/human-eval-infilling"
"nuprl/MultiPL-E" -> "nickrosh/evol-teacher"
"nuprl/MultiPL-E" -> "ntunlp/ExecEval"
"nuprl/MultiPL-E" -> "nuprl/MultiPL-T"
"nuprl/MultiPL-E" -> "facebookresearch/cruxeval"
"nuprl/MultiPL-E" -> "CoderEval/CoderEval"
"nuprl/MultiPL-E" -> "bigcode-project/octopack"
"bigcode-project/bigcode-evaluation-harness" -> "evalplus/evalplus"
"bigcode-project/bigcode-evaluation-harness" -> "nuprl/MultiPL-E"
"bigcode-project/bigcode-evaluation-harness" -> "openai/human-eval"
"bigcode-project/bigcode-evaluation-harness" -> "sahil280114/codealpaca"
"bigcode-project/bigcode-evaluation-harness" -> "LiveCodeBench/LiveCodeBench"
"bigcode-project/bigcode-evaluation-harness" -> "bigcode-project/bigcode-dataset"
"bigcode-project/bigcode-evaluation-harness" -> "bigcode-project/octopack"
"bigcode-project/bigcode-evaluation-harness" -> "xlang-ai/DS-1000"
"bigcode-project/bigcode-evaluation-harness" -> "hendrycks/apps"
"bigcode-project/bigcode-evaluation-harness" -> "huybery/Awesome-Code-LLM"
"bigcode-project/bigcode-evaluation-harness" -> "abacaj/code-eval"
"bigcode-project/bigcode-evaluation-harness" -> "bigcode-project/bigcodebench"
"bigcode-project/bigcode-evaluation-harness" -> "EleutherAI/lm-evaluation-harness" ["e"=1]
"bigcode-project/bigcode-evaluation-harness" -> "microsoft/CodeT"
"bigcode-project/bigcode-evaluation-harness" -> "huggingface/lighteval" ["e"=1]
"Venthe/vscode-fauxpilot" -> "Frederisk/fauxpilot-windows"
"shrivastavadisha/repo_level_prompt_generation" -> "rizwan09/REDCODER"
"shrivastavadisha/repo_level_prompt_generation" -> "microsoft/ReACC"
"tuhh-softsec/LLMSecEval" -> "s2e-lab/SecurityEval"
"uclnlp/pycodesuggest" -> "EdinburghNLP/code-docstring-corpus"
"s2e-lab/SecurityEval" -> "tuhh-softsec/LLMSecEval"
"ise-uiuc/Repilot" -> "ise-uiuc/WhiteFox"
"ise-uiuc/Repilot" -> "ise-uiuc/uniapr"
"ise-uiuc/Repilot" -> "llm4code/2024"
"ise-uiuc/Repilot" -> "pkuzqh/Recoder" ["e"=1]
"ise-uiuc/Repilot" -> "iSEngLab/AwesomeLearningAPR"
"ise-uiuc/Repilot" -> "ise-uiuc/DeepREL"
"ise-uiuc/Repilot" -> "evo-eval/evoeval"
"ise-uiuc/Repilot" -> "nus-apr/cerberus"
"ise-uiuc/Repilot" -> "ise-uiuc/xft"
"iSEngLab/AwesomeLearningAPR" -> "iSEngLab/GAMMA"
"iSEngLab/AwesomeLearningAPR" -> "iSEngLab/LLM4VulFix"
"iSEngLab/AwesomeLearningAPR" -> "lin-tan/clm"
"iSEngLab/AwesomeLearningAPR" -> "lin-tan/CoCoNut-Artifact" ["e"=1]
"iSEngLab/AwesomeLearningAPR" -> "iSEngLab/AwesomeLLM4APR"
"iSEngLab/AwesomeLearningAPR" -> "TruX-DTF/TBar" ["e"=1]
"openai/human-eval-infilling" -> "gonglinyuan/safim"
"openai/human-eval-infilling" -> "nuprl/MultiPL-E"
"openai/human-eval-infilling" -> "amazon-science/cceval"
"lin-tan/clm" -> "lin-tan/knod"
"lin-tan/clm" -> "zjulgc/llmpeft4apr"
"lin-tan/clm" -> "iSEngLab/AwesomeLearningAPR"
"lin-tan/clm" -> "lin-tan/CURE" ["e"=1]
"shangqing-liu/ContraBERT" -> "SEKE-Adversary/CARROT"
"awsm-research/AIBugHunter" -> "optimatch/optimatch"
"lin-tan/knod" -> "lin-tan/clm"
"bigcode-project/bigcode-analysis" -> "bigcode-project/bigcode-dataset"
"amazon-science/recode" -> "amazon-science/mxeval"
"CGCL-codes/VulBG" -> "CGCL-codes/vdgraph"
"iSEngLab/LLM4VulFix" -> "iSEngLab/GAMMA"
"amazon-science/mxeval" -> "amazon-science/recode"
"Xin-Cheng-Wen/LIVABLE" -> "CocaVul/Coca"
"reddy-lab-code-research/CodeAttack" -> "SEKE-Adversary/CARROT"
"reddy-lab-code-research/CodeAttack" -> "tianzhaotju/CODA"
"gbprod/tree-sitter-gitcommit" -> "shunsambongi/tree-sitter-gitignore"
"gbprod/tree-sitter-gitcommit" -> "the-mikedavis/tree-sitter-git-rebase"
"gbprod/tree-sitter-gitcommit" -> "tree-sitter-grammars/tree-sitter-gitattributes"
"tree-sitter-grammars/tree-sitter-gitattributes" -> "the-mikedavis/tree-sitter-git-rebase"
"tree-sitter-grammars/tree-sitter-gitattributes" -> "shunsambongi/tree-sitter-gitignore"
"sahil280114/codealpaca" -> "bigcode-project/bigcode-evaluation-harness"
"sahil280114/codealpaca" -> "openai/human-eval"
"sahil280114/codealpaca" -> "bigcode-project/octopack"
"sahil280114/codealpaca" -> "gururise/AlpacaDataCleaned" ["e"=1]
"sahil280114/codealpaca" -> "teknium1/GPTeacher" ["e"=1]
"sahil280114/codealpaca" -> "salesforce/CodeTF"
"sahil280114/codealpaca" -> "salesforce/CodeGen"
"sahil280114/codealpaca" -> "microsoft/CodeXGLUE"
"sahil280114/codealpaca" -> "evalplus/evalplus"
"sahil280114/codealpaca" -> "salesforce/CodeT5"
"sahil280114/codealpaca" -> "GanjinZero/RRHF" ["e"=1]
"sahil280114/codealpaca" -> "tatsu-lab/alpaca_eval" ["e"=1]
"sahil280114/codealpaca" -> "dpfried/incoder"
"sahil280114/codealpaca" -> "AetherCortex/Llama-X" ["e"=1]
"sahil280114/codealpaca" -> "codefuse-ai/Awesome-Code-LLM"
"nickrosh/evol-teacher" -> "theblackcat102/evol-dataset"
"nickrosh/evol-teacher" -> "swtheing/WizardCoder_Instruct_Generator"
"nickrosh/evol-teacher" -> "nlpxucan/evol-instruct"
"nickrosh/evol-teacher" -> "lcw99/evolve-instruct"
"nickrosh/evol-teacher" -> "my-other-github-account/llm-humaneval-benchmarks"
"nickrosh/evol-teacher" -> "nuprl/MultiPL-E"
"huybery/Awesome-Code-LLM" -> "codefuse-ai/Awesome-Code-LLM"
"huybery/Awesome-Code-LLM" -> "bigcode-project/bigcode-evaluation-harness"
"huybery/Awesome-Code-LLM" -> "evalplus/evalplus"
"huybery/Awesome-Code-LLM" -> "openai/human-eval"
"huybery/Awesome-Code-LLM" -> "saltudelft/ml4se"
"huybery/Awesome-Code-LLM" -> "sahil280114/codealpaca"
"huybery/Awesome-Code-LLM" -> "bigcode-project/octopack"
"huybery/Awesome-Code-LLM" -> "amazon-science/cceval"
"huybery/Awesome-Code-LLM" -> "ise-uiuc/magicoder"
"huybery/Awesome-Code-LLM" -> "microsoft/CodeXGLUE"
"huybery/Awesome-Code-LLM" -> "allanj/repo-level-codegen-papers"
"huybery/Awesome-Code-LLM" -> "microsoft/CodeT"
"huybery/Awesome-Code-LLM" -> "atfortes/Awesome-LLM-Reasoning" ["e"=1]
"huybery/Awesome-Code-LLM" -> "facebookresearch/swe-rl"
"huybery/Awesome-Code-LLM" -> "opendilab/awesome-RLHF" ["e"=1]
"abacaj/code-eval" -> "my-other-github-account/llm-humaneval-benchmarks"
"abacaj/code-eval" -> "hendrycks/apps"
"abacaj/code-eval" -> "bigcode-project/bigcode-evaluation-harness"
"abacaj/code-eval" -> "nickrosh/evol-teacher"
"abacaj/code-eval" -> "CoderEval/CoderEval"
"abacaj/code-eval" -> "AblateIt/finetune-study" ["e"=1]
"abacaj/code-eval" -> "openai/human-eval"
"abacaj/code-eval" -> "nlpxucan/evol-instruct"
"abacaj/code-eval" -> "declare-lab/instruct-eval" ["e"=1]
"abacaj/code-eval" -> "bigcode-project/octopack"
"abacaj/code-eval" -> "evalplus/evalplus"
"evalplus/evalplus" -> "bigcode-project/bigcode-evaluation-harness"
"evalplus/evalplus" -> "openai/human-eval"
"evalplus/evalplus" -> "ise-uiuc/magicoder"
"evalplus/evalplus" -> "LiveCodeBench/LiveCodeBench"
"evalplus/evalplus" -> "microsoft/CodeXGLUE"
"evalplus/evalplus" -> "hendrycks/apps"
"evalplus/evalplus" -> "codefuse-ai/Awesome-Code-LLM"
"evalplus/evalplus" -> "saltudelft/ml4se"
"evalplus/evalplus" -> "bigcode-project/bigcodebench"
"evalplus/evalplus" -> "bigcode-project/octopack"
"evalplus/evalplus" -> "SWE-bench/SWE-bench"
"evalplus/evalplus" -> "microsoft/CodeT"
"evalplus/evalplus" -> "bigcode-project/bigcode-dataset"
"evalplus/evalplus" -> "microsoft/CodeBERT"
"evalplus/evalplus" -> "huybery/Awesome-Code-LLM"
"ise-uiuc/neuri-artifact" -> "ise-uiuc/WhiteFox"
"ise-uiuc/neuri-artifact" -> "ise-uiuc/NablaFuzz"
"wagner-group/diversevul" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"wagner-group/diversevul" -> "DLVulDet/PrimeVul"
"wagner-group/diversevul" -> "VulDetProject/ReVeal"
"wagner-group/diversevul" -> "ISU-PAAL/DeepDFA"
"wagner-group/diversevul" -> "Eshe0922/ReposVul"
"wagner-group/diversevul" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"wagner-group/diversevul" -> "epicosy/devign"
"wagner-group/diversevul" -> "daiquocnguyen/GNN-ReGVD"
"wagner-group/diversevul" -> "secureIT-project/CVEfixes"
"wagner-group/diversevul" -> "Icyrockton/MegaVul"
"wagner-group/diversevul" -> "saikat107/Devign"
"wagner-group/diversevul" -> "awsm-research/LineVul"
"wagner-group/diversevul" -> "eth-sri/sven"
"wagner-group/diversevul" -> "AMPLE001/AMPLE"
"wagner-group/diversevul" -> "CGCL-codes/VulLLM"
"eth-sri/sven" -> "DLVulDet/PrimeVul"
"eth-sri/sven" -> "s2e-lab/SecurityEval"
"eth-sri/sven" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"eth-sri/sven" -> "eth-sri/SafeCoder"
"eth-sri/sven" -> "soarsmu/attack-pretrain-models-of-code"
"eth-sri/sven" -> "Eshe0922/ReposVul"
"codefuse-ai/Awesome-Code-LLM" -> "huybery/Awesome-Code-LLM"
"codefuse-ai/Awesome-Code-LLM" -> "saltudelft/ml4se"
"codefuse-ai/Awesome-Code-LLM" -> "evalplus/evalplus"
"codefuse-ai/Awesome-Code-LLM" -> "openai/human-eval"
"codefuse-ai/Awesome-Code-LLM" -> "microsoft/CodeXGLUE"
"codefuse-ai/Awesome-Code-LLM" -> "SWE-bench/SWE-bench"
"codefuse-ai/Awesome-Code-LLM" -> "bigcode-project/bigcode-evaluation-harness"
"codefuse-ai/Awesome-Code-LLM" -> "FudanSELab/Agent4SE-Paper-List"
"codefuse-ai/Awesome-Code-LLM" -> "microsoft/CodeBERT"
"codefuse-ai/Awesome-Code-LLM" -> "iSEngLab/AwesomeLLM4SE"
"codefuse-ai/Awesome-Code-LLM" -> "allanj/repo-level-codegen-papers"
"codefuse-ai/Awesome-Code-LLM" -> "OpenAutoCoder/Agentless"
"codefuse-ai/Awesome-Code-LLM" -> "PurCL/CodeLLMPaper"
"codefuse-ai/Awesome-Code-LLM" -> "OpenRLHF/OpenRLHF" ["e"=1]
"codefuse-ai/Awesome-Code-LLM" -> "salesforce/CodeT5"
"codefuse-ai/FasterTransformer4CodeFuse" -> "codefuse-ai/MFTCoder"
"codefuse-ai/FasterTransformer4CodeFuse" -> "codefuse-ai/codefuse"
"codefuse-ai/FasterTransformer4CodeFuse" -> "codefuse-ai/.github"
"the-crypt-keeper/can-ai-code" -> "aigoopy/llm-jeopardy"
"the-crypt-keeper/can-ai-code" -> "my-other-github-account/llm-humaneval-benchmarks"
"the-crypt-keeper/can-ai-code" -> "Leolty/repobench"
"the-crypt-keeper/can-ai-code" -> "jondurbin/airoboros" ["e"=1]
"the-crypt-keeper/can-ai-code" -> "abacaj/code-eval"
"the-crypt-keeper/can-ai-code" -> "catid/supercharger" ["e"=1]
"the-crypt-keeper/can-ai-code" -> "QuangBK/generativeAgent_LLM" ["e"=1]
"the-crypt-keeper/can-ai-code" -> "ChuloAI/BrainChulo" ["e"=1]
"the-crypt-keeper/can-ai-code" -> "SLAM-group/newhope"
"the-crypt-keeper/can-ai-code" -> "mzbac/qlora-fine-tune" ["e"=1]
"the-crypt-keeper/can-ai-code" -> "loubnabnl/santacoder-finetuning"
"fynnfluegge/doc-comments-ai" -> "fynnfluegge/codeqai"
"replit/ReplitLM" -> "salesforce/CodeTF"
"replit/ReplitLM" -> "nickrosh/evol-teacher"
"replit/ReplitLM" -> "salesforce/CodeRL"
"replit/ReplitLM" -> "zphang/minimal-llama" ["e"=1]
"replit/ReplitLM" -> "dpfried/incoder"
"replit/ReplitLM" -> "openlm-research/open_llama" ["e"=1]
"replit/ReplitLM" -> "richardyc/Chrome-GPT" ["e"=1]
"replit/ReplitLM" -> "salesforce/xgen" ["e"=1]
"replit/ReplitLM" -> "teknium1/stanford_alpaca-replit"
"replit/ReplitLM" -> "danielgross/LlamaAcademy" ["e"=1]
"replit/ReplitLM" -> "sahil280114/codealpaca"
"replit/ReplitLM" -> "mosaicml/llm-foundry" ["e"=1]
"replit/ReplitLM" -> "openai/human-eval"
"codestoryai/sidecar" -> "codestoryai/aide" ["e"=1]
"codestoryai/sidecar" -> "ozyyshr/RepoGraph"
"codestoryai/sidecar" -> "aorwall/moatless-tools"
"h2oai/h2o-wizardlm" -> "lcw99/evolve-instruct"
"h2oai/h2o-wizardlm" -> "nickrosh/evol-teacher"
"h2oai/h2o-wizardlm" -> "h2oai/nitro"
"salesforce/CodeTF" -> "salesforce/CodeT5"
"salesforce/CodeTF" -> "bigcode-project/bigcode-evaluation-harness"
"salesforce/CodeTF" -> "sahil280114/codealpaca"
"salesforce/CodeTF" -> "salesforce/CodeRL"
"salesforce/CodeTF" -> "ctlllll/LLM-ToolMaker" ["e"=1]
"salesforce/CodeTF" -> "saltudelft/ml4se"
"salesforce/CodeTF" -> "bigcode-project/starcoder" ["e"=1]
"salesforce/CodeTF" -> "evalplus/evalplus"
"salesforce/CodeTF" -> "salesforce/CodeGen"
"salesforce/CodeTF" -> "salesforce/xgen" ["e"=1]
"salesforce/CodeTF" -> "Cormanz/smartgpt" ["e"=1]
"salesforce/CodeTF" -> "microsoft/CodeXGLUE"
"salesforce/CodeTF" -> "openai/human-eval"
"salesforce/CodeTF" -> "mosaicml/llm-foundry" ["e"=1]
"salesforce/CodeTF" -> "bigcode-project/octopack"
"fynnfluegge/codeqai" -> "fynnfluegge/doc-comments-ai"
"fynnfluegge/codeqai" -> "codecompanion-ai/code-companion"
"ise-uiuc/TitanFuzz" -> "ise-uiuc/NablaFuzz"
"ise-uiuc/TitanFuzz" -> "ise-uiuc/DeepREL"
"ise-uiuc/TitanFuzz" -> "ise-uiuc/WhiteFox"
"ise-uiuc/TitanFuzz" -> "ise-uiuc/FreeFuzz"
"ise-uiuc/TitanFuzz" -> "ise-uiuc/neuri-artifact"
"ise-uiuc/TitanFuzz" -> "lin-tan/DocTer"
"ntunlp/xCodeEval" -> "ntunlp/ExecEval"
"bigcode-project/octopack" -> "bigcode-project/bigcode-dataset"
"bigcode-project/octopack" -> "bigcode-project/bigcode-evaluation-harness"
"bigcode-project/octopack" -> "nuprl/MultiPL-E"
"bigcode-project/octopack" -> "xlang-ai/DS-1000"
"bigcode-project/octopack" -> "evalplus/evalplus"
"bigcode-project/octopack" -> "facebookresearch/cruxeval"
"bigcode-project/octopack" -> "bigcode-project/selfcodealign"
"bigcode-project/octopack" -> "sahil280114/codealpaca"
"bigcode-project/octopack" -> "bigcode-project/the-stack-v2"
"bigcode-project/octopack" -> "FlagOpen/TACO" ["e"=1]
"bigcode-project/octopack" -> "ganler/code-r1"
"bigcode-project/octopack" -> "salesforce/CodeRL"
"bigcode-project/octopack" -> "amazon-science/cceval"
"bigcode-project/octopack" -> "bigcode-project/Megatron-LM"
"bigcode-project/octopack" -> "nickrosh/evol-teacher"
"codefuse-ai/codefuse-evaluation" -> "codefuse-ai/codefuse"
"aorwall/moatless-tools" -> "aorwall/moatless-tree-search"
"aorwall/moatless-tools" -> "aorwall/SWE-bench-docker"
"aorwall/moatless-tools" -> "ozyyshr/RepoGraph"
"aorwall/moatless-tools" -> "OpenAutoCoder/Agentless"
"aorwall/moatless-tools" -> "SWE-Gym/SWE-Gym"
"aorwall/moatless-tools" -> "NL2Code/CodeR"
"aorwall/moatless-tools" -> "Aider-AI/aider-swe-bench"
"aorwall/moatless-tools" -> "SWE-bench/experiments"
"aorwall/moatless-tools" -> "SWE-agent/SWE-ReX"
"aorwall/moatless-tools" -> "facebookresearch/swe-rl"
"aorwall/moatless-tools" -> "RepoUnderstander/RepoUnderstander"
"aorwall/moatless-tools" -> "AutoCodeRoverSG/auto-code-rover" ["e"=1]
"aorwall/moatless-tools" -> "Leolty/repobench"
"aorwall/moatless-tools" -> "InternLM/SWE-Fixer"
"aorwall/moatless-tools" -> "SalesforceAIResearch/swecomm"
"Dianshu-Liao/AAA-Code-Generation-Framework-for-Code-Repository-Local-Aware-Global-Aware-Third-Party-Aware" -> "nju-websoft/DraCo"
"sriniiyer/codenn" -> "EdinburghNLP/code-docstring-corpus"
"sriniiyer/codenn" -> "xing-hu/TL-CodeSum"
"sriniiyer/codenn" -> "tech-srl/code2seq"
"sriniiyer/codenn" -> "wanyao1992/code_summarization_public"
"sriniiyer/codenn" -> "xing-hu/EMSE-DeepCom"
"sriniiyer/codenn" -> "wasiahmad/NeuralCodeSum"
"sriniiyer/codenn" -> "guxd/deep-code-search"
"sriniiyer/codenn" -> "acleclair/ICPC2020_GNN"
"sriniiyer/codenn" -> "mast-group/convolutional-attention"
"sriniiyer/codenn" -> "liang2024086/code_comment_generation"
"sriniiyer/codenn" -> "dmitrykazhdan/Representing-Programs-with-Graphs"
"sriniiyer/codenn" -> "xing-hu/DeepCom"
"sriniiyer/codenn" -> "CoderPat/structured-neural-summarization"
"sriniiyer/codenn" -> "microsoft/graph-based-code-modelling"
"sriniiyer/codenn" -> "facebookresearch/Neural-Code-Search-Evaluation-Dataset"
"codefuse-ai/MFTCoder" -> "codefuse-ai/FasterTransformer4CodeFuse"
"codefuse-ai/MFTCoder" -> "codefuse-ai/codefuse"
"codefuse-ai/MFTCoder" -> "codefuse-ai/codefuse-evaluation"
"codefuse-ai/MFTCoder" -> "codefuse-ai/Awesome-Code-LLM"
"codefuse-ai/MFTCoder" -> "codefuse-ai/codefuse-chatbot" ["e"=1]
"codefuse-ai/MFTCoder" -> "bigcode-project/octopack"
"codefuse-ai/MFTCoder" -> "codefuse-ai/Test-Agent" ["e"=1]
"codefuse-ai/MFTCoder" -> "nickrosh/evol-teacher"
"codefuse-ai/MFTCoder" -> "codefuse-ai/codefuse-devops-eval" ["e"=1]
"codefuse-ai/MFTCoder" -> "sahil280114/codealpaca"
"codefuse-ai/MFTCoder" -> "codefuse-ai/CodeFuse-Query"
"codefuse-ai/MFTCoder" -> "openai/human-eval"
"codefuse-ai/MFTCoder" -> "nlpxucan/evol-instruct"
"ISU-PAAL/DeepDFA" -> "AMPLE001/AMPLE"
"ISU-PAAL/DeepDFA" -> "CocaVul/Coca"
"ISU-PAAL/DeepDFA" -> "Vul-LMGNN/vul-LMGGNN"
"ISU-PAAL/DeepDFA" -> "ARiSE-Lab/TRACED_ICSE_24"
"c2nes/javalang" -> "tech-srl/code2seq"
"c2nes/javalang" -> "tech-srl/code2vec"
"c2nes/javalang" -> "zhangj111/astnn" ["e"=1]
"c2nes/javalang" -> "rjust/defects4j" ["e"=1]
"c2nes/javalang" -> "guxd/deep-code-search"
"c2nes/javalang" -> "microsoft/CodeBERT"
"c2nes/javalang" -> "microsoft/CodeXGLUE"
"c2nes/javalang" -> "sriniiyer/codenn"
"c2nes/javalang" -> "wasiahmad/NeuralCodeSum"
"c2nes/javalang" -> "tree-sitter/py-tree-sitter"
"c2nes/javalang" -> "saltudelft/ml4se"
"c2nes/javalang" -> "EdinburghNLP/code-docstring-corpus"
"c2nes/javalang" -> "GumTreeDiff/gumtree" ["e"=1]
"c2nes/javalang" -> "xing-hu/EMSE-DeepCom"
"c2nes/javalang" -> "ishepard/pydriller" ["e"=1]
"nlpxucan/evol-instruct" -> "nickrosh/evol-teacher"
"nlpxucan/evol-instruct" -> "theblackcat102/evol-dataset"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-go" -> "camdencheek/tree-sitter-go-mod"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-rust"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-ruby"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-python"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-typescript"
"tree-sitter/tree-sitter-go" -> "ikatyang/tree-sitter-yaml"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-c"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-cpp"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-css"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-go" -> "tree-sitter-grammars/tree-sitter-lua"
"tree-sitter/tree-sitter-go" -> "tree-sitter/tree-sitter-regex"
"ChrisCummins/clgen" -> "ChrisCummins/paper-end2end-dl"
"ChrisCummins/clgen" -> "ChrisCummins/cldrive"
"ChrisCummins/clgen" -> "ChrisCummins/paper-synthesizing-benchmarks"
"ChrisCummins/clgen" -> "fivosts/BenchPress"
"FudanSELab/ClassEval" -> "CoderEval/CoderEval"
"FudanSELab/ClassEval" -> "evo-eval/evoeval"
"FudanSELab/ClassEval" -> "amazon-science/cceval"
"FudanSELab/ClassEval" -> "Intelligent-CAT-Lab/PLTranslationEmpirical"
"FudanSELab/ClassEval" -> "seketeam/EvoCodeBench"
"FudanSELab/ClassEval" -> "Leolty/repobench"
"FudanSELab/ClassEval" -> "ise-uiuc/xft"
"Leolty/repobench" -> "amazon-science/cceval"
"Leolty/repobench" -> "nju-websoft/DraCo"
"Leolty/repobench" -> "ozyyshr/RepoGraph"
"Leolty/repobench" -> "FudanSELab/ClassEval"
"Leolty/repobench" -> "allanj/repo-level-codegen-papers"
"Leolty/repobench" -> "SWE-Gym/SWE-Gym"
"Leolty/repobench" -> "DeepSoftwareAnalytics/RLCoder"
"gai4se/LLM4SE" -> "iSEngLab/AwesomeLLM4APR"
"gai4se/LLM4SE" -> "saltudelft/ml4se"
"gai4se/LLM4SE" -> "iSEngLab/AwesomeLLM4SE"
"gai4se/LLM4SE" -> "soarsmu/attack-pretrain-models-of-code"
"gai4se/LLM4SE" -> "nus-apr/cerberus"
"codefuse-ai/codefuse" -> "codefuse-ai/FasterTransformer4CodeFuse"
"codefuse-ai/codefuse" -> "codefuse-ai/MFTCoder"
"codefuse-ai/codefuse" -> "codefuse-ai/codefuse-evaluation"
"yueliu1999/fastcodellama" -> "RepoUnderstander/RepoUnderstander"
"CGCL-codes/vdgraph" -> "CocaVul/Coca"
"awsm-research/VulExplainer" -> "CocaVul/Coca"
"iSEngLab/NJU_SE_ThesisWritingTips" -> "iSEngLab/LLM4VulFix"
"iSEngLab/NJU_SE_ThesisWritingTips" -> "iSEngLab/GAMMA"
"iSEngLab/NJU_SE_ThesisWritingTips" -> "courses-at-nju-by-hfwei/2022-compilers-coding"
"Intelligent-CAT-Lab/PLTranslationEmpirical" -> "codetlingua/codetlingua"
"Intelligent-CAT-Lab/PLTranslationEmpirical" -> "WeixiangYAN/CodeTransOcean"
"WeixiangYAN/CodeTransOcean" -> "Intelligent-CAT-Lab/PLTranslationEmpirical"
"ise-uiuc/uniapr" -> "llm4code/2024"
"theblackcat102/evol-dataset" -> "nickrosh/evol-teacher"
"llm4code/2024" -> "ise-uiuc/uniapr"
"llm4code/2024" -> "ganler/memcov"
"iSEngLab/GAMMA" -> "iSEngLab/LLM4VulFix"
"ntunlp/ExecEval" -> "ntunlp/xCodeEval"
"SWE-bench/SWE-bench" -> "OpenAutoCoder/Agentless"
"SWE-bench/SWE-bench" -> "AutoCodeRoverSG/auto-code-rover" ["e"=1]
"SWE-bench/SWE-bench" -> "SWE-agent/SWE-agent" ["e"=1]
"SWE-bench/SWE-bench" -> "openai/human-eval"
"SWE-bench/SWE-bench" -> "evalplus/evalplus"
"SWE-bench/SWE-bench" -> "codefuse-ai/Awesome-Code-LLM"
"SWE-bench/SWE-bench" -> "openai/SWELancer-Benchmark"
"SWE-bench/SWE-bench" -> "SWE-Gym/SWE-Gym"
"SWE-bench/SWE-bench" -> "openai/simple-evals" ["e"=1]
"SWE-bench/SWE-bench" -> "aorwall/moatless-tools"
"SWE-bench/SWE-bench" -> "bigcode-project/bigcode-evaluation-harness"
"SWE-bench/SWE-bench" -> "LiveCodeBench/LiveCodeBench"
"SWE-bench/SWE-bench" -> "THUDM/AgentBench" ["e"=1]
"SWE-bench/SWE-bench" -> "SWE-bench/experiments"
"SWE-bench/SWE-bench" -> "volcengine/verl" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "QwenLM/Qwen-Agent" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "QwenLM/Qwen3" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "deepseek-ai/DeepSeek-Coder-V2" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "QwenLM/Qwen2.5-VL" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "microsoft/TinyTroupe" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "QwenLM/Qwen" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "QwenLM/Qwen2.5-Math" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "deepseek-ai/DeepSeek-Coder" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "deepseek-ai/DeepSeek-V2" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "codefuse-ai/Awesome-Code-LLM"
"QwenLM/Qwen2.5-Coder" -> "sgl-project/sglang" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "openai/human-eval"
"QwenLM/Qwen2.5-Coder" -> "Zipstack/unstract" ["e"=1]
"QwenLM/Qwen2.5-Coder" -> "SWE-bench/SWE-bench"
"QwenLM/Qwen2.5-Coder" -> "unslothai/unsloth" ["e"=1]
"bigcode-project/starcoder2" -> "ise-uiuc/magicoder"
"bigcode-project/starcoder2" -> "bigcode-project/starcoder" ["e"=1]
"bigcode-project/starcoder2" -> "bigcode-project/bigcode-evaluation-harness"
"bigcode-project/starcoder2" -> "aixcoder-plugin/aiXcoder-7B" ["e"=1]
"bigcode-project/starcoder2" -> "evalplus/evalplus"
"bigcode-project/starcoder2" -> "bigcode-project/bigcode-dataset"
"bigcode-project/starcoder2" -> "bigcode-project/selfcodealign"
"bigcode-project/starcoder2" -> "codefuse-ai/Awesome-Code-LLM"
"bigcode-project/starcoder2" -> "bigcode-project/the-stack-v2"
"bigcode-project/starcoder2" -> "OpenCodeInterpreter/OpenCodeInterpreter" ["e"=1]
"bigcode-project/starcoder2" -> "microsoft/CodeBERT"
"bigcode-project/starcoder2" -> "bigcode-project/octopack"
"bigcode-project/starcoder2" -> "microsoft/CodeXGLUE"
"bigcode-project/starcoder2" -> "QwenLM/Qwen2.5-Coder"
"bigcode-project/starcoder2" -> "huybery/Awesome-Code-LLM"
"FloridSleeves/LLMDebugger" -> "huangd1999/AgentCoder"
"FloridSleeves/LLMDebugger" -> "Md-Ashraful-Pramanik/MapCoder"
"FloridSleeves/LLMDebugger" -> "lapisrocks/LanguageAgentTreeSearch" ["e"=1]
"FloridSleeves/LLMDebugger" -> "YerbaPage/MGDebugger"
"FloridSleeves/LLMDebugger" -> "thunlp/DebugBench" ["e"=1]
"FloridSleeves/LLMDebugger" -> "iSEngLab/AwesomeLLM4APR"
"FloridSleeves/LLMDebugger" -> "aorwall/moatless-tools"
"FloridSleeves/LLMDebugger" -> "FudanSELab/Agent4SE-Paper-List"
"FloridSleeves/LLMDebugger" -> "ozyyshr/RepoGraph"
"FloridSleeves/LLMDebugger" -> "bigcode-project/selfcodealign"
"FloridSleeves/LLMDebugger" -> "facebookresearch/swe-rl"
"FloridSleeves/LLMDebugger" -> "microsoft/CodeT"
"FloridSleeves/LLMDebugger" -> "noahshinn/reflexion" ["e"=1]
"FloridSleeves/LLMDebugger" -> "FloridSleeves/RobustAPI"
"FloridSleeves/LLMDebugger" -> "LiveCodeBench/LiveCodeBench"
"ise-uiuc/magicoder" -> "evalplus/evalplus"
"ise-uiuc/magicoder" -> "bigcode-project/selfcodealign"
"ise-uiuc/magicoder" -> "bigcode-project/starcoder2"
"ise-uiuc/magicoder" -> "codefuse-ai/Awesome-Code-LLM"
"ise-uiuc/magicoder" -> "bigcode-project/bigcode-evaluation-harness"
"ise-uiuc/magicoder" -> "openai/human-eval"
"ise-uiuc/magicoder" -> "bigcode-project/octopack"
"ise-uiuc/magicoder" -> "nlpxucan/WizardLM" ["e"=1]
"ise-uiuc/magicoder" -> "bigcode-project/bigcode-dataset"
"ise-uiuc/magicoder" -> "OpenAutoCoder/Agentless"
"ise-uiuc/magicoder" -> "huybery/Awesome-Code-LLM"
"ise-uiuc/magicoder" -> "FudanSELab/Agent4SE-Paper-List"
"ise-uiuc/magicoder" -> "Codium-ai/AlphaCodium" ["e"=1]
"ise-uiuc/magicoder" -> "sahil280114/codealpaca"
"ise-uiuc/magicoder" -> "arcee-ai/mergekit" ["e"=1]
"xingyaoww/code-act" -> "SWE-Gym/SWE-Gym"
"xingyaoww/code-act" -> "OpenAutoCoder/Agentless"
"xingyaoww/code-act" -> "aorwall/moatless-tools"
"xingyaoww/code-act" -> "PeterGriffinJin/Search-R1" ["e"=1]
"xingyaoww/code-act" -> "langchain-ai/langgraph-codeact" ["e"=1]
"xingyaoww/code-act" -> "huangd1999/AgentCoder"
"xingyaoww/code-act" -> "RAGEN-AI/RAGEN" ["e"=1]
"xingyaoww/code-act" -> "OpenManus/OpenManus-RL" ["e"=1]
"xingyaoww/code-act" -> "THUDM/AgentBench" ["e"=1]
"xingyaoww/code-act" -> "Agent-RL/ReCall" ["e"=1]
"xingyaoww/code-act" -> "web-arena-x/webarena" ["e"=1]
"xingyaoww/code-act" -> "SWE-bench/SWE-bench"
"xingyaoww/code-act" -> "Open-Reasoner-Zero/Open-Reasoner-Zero" ["e"=1]
"xingyaoww/code-act" -> "NL2Code/CodeR"
"xingyaoww/code-act" -> "sierra-research/tau-bench" ["e"=1]
"ise-uiuc/WhiteFox" -> "ise-uiuc/neuri-artifact"
"ise-uiuc/WhiteFox" -> "ise-uiuc/DeepREL"
"ise-uiuc/WhiteFox" -> "ise-uiuc/uniapr"
"ise-uiuc/WhiteFox" -> "ise-uiuc/TitanFuzz"
"iSEngLab/AwesomeLLM4SE" -> "iSEngLab/AwesomeLLM4APR"
"iSEngLab/AwesomeLLM4SE" -> "huofushuo/SID" ["e"=1]
"iSEngLab/AwesomeLLM4SE" -> "iSEngLab/AwesomeLearningAPR"
"iSEngLab/AwesomeLLM4SE" -> "wichue/nethello" ["e"=1]
"iSEngLab/AwesomeLLM4SE" -> "iSEngLab/LLM4VulFix"
"iSEngLab/AwesomeLLM4SE" -> "gai4se/LLM4SE"
"iSEngLab/AwesomeLLM4SE" -> "MedicineStick/mini_gpt" ["e"=1]
"iSEngLab/AwesomeLLM4SE" -> "codeisangel/aio-runtime" ["e"=1]
"iSEngLab/AwesomeLLM4SE" -> "saltudelft/ml4se"
"iSEngLab/AwesomeLLM4SE" -> "0voice/mysql_document" ["e"=1]
"iSEngLab/AwesomeLLM4SE" -> "0606zt/Before" ["e"=1]
"iSEngLab/AwesomeLLM4SE" -> "KGminer001/KGminerproxy"
"iSEngLab/AwesomeLLM4SE" -> "qiangyt/batchai" ["e"=1]
"iSEngLab/AwesomeLLM4SE" -> "SQY2021/PETL" ["e"=1]
"iSEngLab/AwesomeLLM4SE" -> "iSEngLab/GAMMA"
"LLM-Testing/LLM4SoftwareTesting" -> "iSEngLab/AwesomeLLM4SE"
"LLM-Testing/LLM4SoftwareTesting" -> "FudanSELab/Agent4SE-Paper-List"
"LLM-Testing/LLM4SoftwareTesting" -> "XYIheng/MobileAppTesting" ["e"=1]
"LLM-Testing/LLM4SoftwareTesting" -> "gai4se/LLM4SE"
"LLM-Testing/LLM4SoftwareTesting" -> "the-themis-benchmarks/home" ["e"=1]
"LLM-Testing/LLM4SoftwareTesting" -> "PurCL/CodeLLMPaper"
"LLM-Testing/LLM4SoftwareTesting" -> "saltudelft/ml4se"
"LLM-Testing/LLM4SoftwareTesting" -> "ZJU-ACES-ISE/ChatUniTest" ["e"=1]
"LLM-Testing/LLM4SoftwareTesting" -> "microsoft/methods2test"
"LLM-Testing/LLM4SoftwareTesting" -> "strongcourage/awesome-directed-fuzzing" ["e"=1]
"evalplus/repoqa" -> "ise-uiuc/xft"
"evalplus/repoqa" -> "ise-uiuc/blazedit"
"evalplus/repoqa" -> "llm4code/2024"
"evalplus/repoqa" -> "ise-uiuc/neuri-artifact"
"evalplus/repoqa" -> "ise-uiuc/uniapr"
"LiveCodeBench/LiveCodeBench" -> "bigcode-project/bigcodebench"
"LiveCodeBench/LiveCodeBench" -> "FlagOpen/TACO" ["e"=1]
"LiveCodeBench/LiveCodeBench" -> "facebookresearch/cruxeval"
"LiveCodeBench/LiveCodeBench" -> "evalplus/evalplus"
"LiveCodeBench/LiveCodeBench" -> "bigcode-project/bigcode-evaluation-harness"
"LiveCodeBench/LiveCodeBench" -> "bigcode-project/selfcodealign"
"LiveCodeBench/LiveCodeBench" -> "ganler/code-r1"
"LiveCodeBench/LiveCodeBench" -> "LiveBench/LiveBench" ["e"=1]
"LiveCodeBench/LiveCodeBench" -> "nuprl/MultiPL-E"
"LiveCodeBench/LiveCodeBench" -> "lmarena/arena-hard-auto" ["e"=1]
"LiveCodeBench/LiveCodeBench" -> "xlang-ai/DS-1000"
"LiveCodeBench/LiveCodeBench" -> "Leolty/repobench"
"LiveCodeBench/LiveCodeBench" -> "hendrycks/apps"
"LiveCodeBench/LiveCodeBench" -> "evo-eval/evoeval"
"LiveCodeBench/LiveCodeBench" -> "SWE-bench/SWE-bench"
"iSEngLab/AwesomeLLM4APR" -> "iSEngLab/AwesomeLLM4SE"
"iSEngLab/AwesomeLLM4APR" -> "iSEngLab/AwesomeLearningAPR"
"iSEngLab/AwesomeLLM4APR" -> "GhabiX/SRepair"
"iSEngLab/AwesomeLLM4APR" -> "iSEngLab/LLM4VulFix"
"iSEngLab/AwesomeLLM4APR" -> "gai4se/LLM4SE"
"iSEngLab/AwesomeLLM4APR" -> "iSEngLab/GAMMA"
"iSEngLab/AwesomeLLM4APR" -> "jkoppel/QuixBugs" ["e"=1]
"iSEngLab/AwesomeLLM4APR" -> "thunlp/DebugBench" ["e"=1]
"iSEngLab/AwesomeLLM4APR" -> "afortunado-aceptado/Rudra"
"iSEngLab/AwesomeLLM4APR" -> "vinci-grape/ThinkRepair"
"iSEngLab/AwesomeLLM4APR" -> "FudanSELab/Agent4SE-Paper-List"
"evo-eval/evoeval" -> "ise-uiuc/neuri-artifact"
"evo-eval/evoeval" -> "amazon-science/llm-code-preference"
"evo-eval/evoeval" -> "ise-uiuc/WhiteFox"
"evo-eval/evoeval" -> "ise-uiuc/xft"
"PurCL/CodeLLMPaper" -> "chengpeng-wang/LLMDFA"
"PurCL/CodeLLMPaper" -> "chengpeng-wang/LLMSAN"
"PurCL/CodeLLMPaper" -> "strongcourage/awesome-directed-fuzzing" ["e"=1]
"PurCL/CodeLLMPaper" -> "FudanSELab/Agent4SE-Paper-List"
"PurCL/CodeLLMPaper" -> "SVF-tools/SVF" ["e"=1]
"PurCL/CodeLLMPaper" -> "QilinPTA/Qilin" ["e"=1]
"PurCL/CodeLLMPaper" -> "seclab-ucr/LLift"
"PurCL/CodeLLMPaper" -> "hzysvilla/Academic_LLM_Sec_Papers"
"PurCL/CodeLLMPaper" -> "tmylla/Awesome-LLM4Cybersecurity" ["e"=1]
"PurCL/CodeLLMPaper" -> "PurCL/RepoAudit"
"PurCL/CodeLLMPaper" -> "codefuse-ai/CodeFuse-Query"
"PurCL/CodeLLMPaper" -> "DLVulDet/PrimeVul"
"PurCL/CodeLLMPaper" -> "iSEngLab/AwesomeLLM4APR"
"PurCL/CodeLLMPaper" -> "plast-lab/doop" ["e"=1]
"PurCL/CodeLLMPaper" -> "pascal-lab/Tai-e-assignments" ["e"=1]
"ise-uiuc/xft" -> "ise-uiuc/uniapr"
"ise-uiuc/xft" -> "ise-uiuc/blazedit"
"bigcode-project/selfcodealign" -> "ganler/code-r1"
"bigcode-project/selfcodealign" -> "evalplus/repoqa"
"bigcode-project/selfcodealign" -> "ise-uiuc/xft"
"bigcode-project/selfcodealign" -> "bigcode-project/bigcodebench"
"bigcode-project/selfcodealign" -> "evo-eval/evoeval"
"bigcode-project/selfcodealign" -> "LiveCodeBench/LiveCodeBench"
"bigcode-project/selfcodealign" -> "facebookresearch/swe-rl"
"bigcode-project/selfcodealign" -> "Leolty/repobench"
"bigcode-project/selfcodealign" -> "nuprl/MultiPL-E"
"bigcode-project/selfcodealign" -> "FudanSELab/ClassEval"
"bigcode-project/bigcodebench" -> "LiveCodeBench/LiveCodeBench"
"bigcode-project/bigcodebench" -> "ganler/code-r1"
"bigcode-project/bigcodebench" -> "bigcode-project/selfcodealign"
"bigcode-project/bigcodebench" -> "evalplus/evalplus"
"bigcode-project/bigcodebench" -> "FudanSELab/ClassEval"
"bigcode-project/bigcodebench" -> "Leolty/repobench"
"bigcode-project/bigcodebench" -> "xlang-ai/DS-1000"
"bigcode-project/bigcodebench" -> "bigcode-project/bigcodebench-annotation"
"bigcode-project/bigcodebench" -> "bigcode-project/the-stack-v2"
"bigcode-project/bigcodebench" -> "sail-sg/regmix" ["e"=1]
"bigcode-project/bigcodebench" -> "bigcode-project/bigcode-evaluation-harness"
"bigcode-project/bigcodebench" -> "facebookresearch/cruxeval"
"bigcode-project/bigcodebench" -> "facebookresearch/swe-rl"
"OpenBMB/RepoAgent" -> "RepoUnderstander/RepoUnderstander"
"OpenBMB/RepoAgent" -> "oceaneLIU/GraphCoder"
"OpenBMB/RepoAgent" -> "ozyyshr/RepoGraph"
"OpenBMB/RepoAgent" -> "Md-Ashraful-Pramanik/MapCoder"
"OpenBMB/RepoAgent" -> "Leolty/repobench"
"OpenBMB/RepoAgent" -> "shrivastavadisha/repo_level_prompt_generation"
"OpenBMB/RepoAgent" -> "allanj/repo-level-codegen-papers"
"OpenBMB/RepoAgent" -> "aorwall/moatless-tools"
"OpenBMB/RepoAgent" -> "codefuse-ai/Awesome-Code-LLM"
"OpenBMB/RepoAgent" -> "OpenAutoCoder/Agentless"
"OpenBMB/RepoAgent" -> "fynnfluegge/doc-comments-ai"
"OpenBMB/RepoAgent" -> "amazon-science/cceval"
"OpenBMB/RepoAgent" -> "tree-sitter/py-tree-sitter"
"OpenBMB/RepoAgent" -> "wala/graph4code"
"OpenBMB/RepoAgent" -> "huangd1999/AgentCoder"
"SWE-bench/experiments" -> "aorwall/SWE-bench-docker"
"SWE-bench/experiments" -> "multi-swe-bench/multi-swe-bench-env"
"SWE-bench/experiments" -> "Aider-AI/aider-swe-bench"
"Vul-LMGNN/vul-LMGGNN" -> "AMPLE001/AMPLE"
"Vul-LMGNN/vul-LMGGNN" -> "ISU-PAAL/DeepDFA"
"Vul-LMGNN/vul-LMGGNN" -> "Zhaoyang-Chu/counterfactual-vulnerability-detection"
"Vul-LMGNN/vul-LMGGNN" -> "CGCL-codes/VulCNN"
"Vul-LMGNN/vul-LMGGNN" -> "jumormt/DeepWukong"
"tree-sitter/tree-sitter-c-sharp" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-c-sharp" -> "tree-sitter/tree-sitter-typescript"
"tree-sitter/tree-sitter-c-sharp" -> "tree-sitter/tree-sitter-cpp"
"tree-sitter/tree-sitter-c-sharp" -> "tree-sitter/tree-sitter-ruby"
"tree-sitter/tree-sitter-c-sharp" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-c-sharp" -> "tree-sitter/tree-sitter-c"
"tree-sitter/tree-sitter-c-sharp" -> "tree-sitter/tree-sitter-rust"
"tree-sitter/tree-sitter-c-sharp" -> "razzmatazz/csharp-language-server" ["e"=1]
"tree-sitter/tree-sitter-c-sharp" -> "tree-sitter/tree-sitter-python"
"tree-sitter/tree-sitter-c-sharp" -> "tree-sitter/tree-sitter-java"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-cpp"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-rust"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-go"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-c"
"tree-sitter/tree-sitter-python" -> "tree-sitter/py-tree-sitter"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-typescript"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-java"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-ruby"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-php"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-regex"
"tree-sitter/tree-sitter-python" -> "tree-sitter/tree-sitter-css"
"Md-Ashraful-Pramanik/MapCoder" -> "huangd1999/AgentCoder"
"Md-Ashraful-Pramanik/MapCoder" -> "kagnlp/CodeGenerator"
"codefuse-ai/CodeFuse-Query" -> "AntChainOpenLabs/Smart-Intermediate-Representation"
"codefuse-ai/CodeFuse-Query" -> "codefuse-ai/RepoFuse"
"codefuse-ai/CodeFuse-Query" -> "PurCL/CodeLLMPaper"
"codefuse-ai/CodeFuse-Query" -> "alipay/ant-application-security-testing-benchmark" ["e"=1]
"codefuse-ai/CodeFuse-Query" -> "chengpeng-wang/LLMDFA"
"microsoft/monitors4codegen" -> "microsoft/multilspy"
"microsoft/monitors4codegen" -> "amazon-science/cceval"
"microsoft/monitors4codegen" -> "streamblocks/streamblocks-graalvm"
"microsoft/monitors4codegen" -> "nuprl/MultiPL-E"
"amazon-science/cceval" -> "Leolty/repobench"
"amazon-science/cceval" -> "oceaneLIU/GraphCoder"
"amazon-science/cceval" -> "nju-websoft/DraCo"
"amazon-science/cceval" -> "amazon-science/Repoformer"
"amazon-science/cceval" -> "FudanSELab/ClassEval"
"amazon-science/cceval" -> "evo-eval/evoeval"
"amazon-science/cceval" -> "amazon-science/cocomic"
"r2e-project/r2e" -> "R2E-Gym/R2E-Gym"
"facebookresearch/cruxeval" -> "ganler/code-r1"
"DLVulDet/PrimeVul" -> "eth-sri/sven"
"DLVulDet/PrimeVul" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"DLVulDet/PrimeVul" -> "wagner-group/diversevul"
"DLVulDet/PrimeVul" -> "VulDetProject/ReVeal"
"DLVulDet/PrimeVul" -> "Sweetaroo/VulDetectBench"
"DLVulDet/PrimeVul" -> "awsm-research/LineVul"
"DLVulDet/PrimeVul" -> "Eshe0922/ReposVul"
"DLVulDet/PrimeVul" -> "rmusab/vul-llm-finetune"
"DLVulDet/PrimeVul" -> "ISU-PAAL/DeepDFA"
"DLVulDet/PrimeVul" -> "ai4cloudops/SecLLMHolmes"
"DLVulDet/PrimeVul" -> "Icyrockton/MegaVul"
"DLVulDet/PrimeVul" -> "Vul-LMGNN/vul-LMGGNN"
"DLVulDet/PrimeVul" -> "epicosy/devign"
"DLVulDet/PrimeVul" -> "saikat107/Devign"
"allanj/repo-level-codegen-papers" -> "ozyyshr/RepoGraph"
"allanj/repo-level-codegen-papers" -> "oceaneLIU/GraphCoder"
"allanj/repo-level-codegen-papers" -> "Leolty/repobench"
"allanj/repo-level-codegen-papers" -> "nju-websoft/DraCo"
"allanj/repo-level-codegen-papers" -> "amazon-science/cceval"
"GhabiX/SRepair" -> "lin-tan/clm"
"AntChainOpenLabs/Smart-Intermediate-Representation" -> "codefuse-ai/RepoFuse"
"AntChainOpenLabs/Smart-Intermediate-Representation" -> "codefuse-ai/CodeFuse-Query"
"continuedev/what-llm-to-use" -> "continuedev/deploy-os-code-llm"
"continuedev/what-llm-to-use" -> "huybery/Awesome-Code-LLM"
"CognitionAI/devin-swebench-results" -> "aorwall/SWE-bench-docker"
"huangd1999/AgentCoder" -> "Md-Ashraful-Pramanik/MapCoder"
"huangd1999/AgentCoder" -> "FloridSleeves/LLMDebugger"
"huangd1999/AgentCoder" -> "ozyyshr/RepoGraph"
"huangd1999/AgentCoder" -> "aorwall/moatless-tools"
"oceaneLIU/GraphCoder" -> "nju-websoft/DraCo"
"eth-sri/SafeCoder" -> "SalesforceAIResearch/indict_code_gen"
"Icyrockton/MegaVul" -> "CGCL-codes/VulLLM"
"Eshe0922/ReposVul" -> "DLVulDet/PrimeVul"
"Eshe0922/ReposVul" -> "wagner-group/diversevul"
"aorwall/SWE-bench-docker" -> "SWE-bench/experiments"
"aorwall/SWE-bench-docker" -> "Aider-AI/aider-swe-bench"
"aorwall/SWE-bench-docker" -> "NL2Code/CodeR"
"aorwall/SWE-bench-docker" -> "aorwall/moatless-tools"
"bigcode-project/the-stack-v2" -> "bigcode-project/bigcode-dataset"
"Zhaoyang-Chu/counterfactual-vulnerability-detection" -> "Xin-Cheng-Wen/LIVABLE"
"ChrisCummins/paper-synthesizing-benchmarks" -> "ChrisCummins/cldrive"
"Trinity-data-store/Trinity" -> "MaoZiming/papers"
"OpenCoder-llm/OpenCoder-llm" -> "OpenCoder-llm/opc_data_filtering"
"OpenCoder-llm/OpenCoder-llm" -> "codefuse-ai/Awesome-Code-LLM"
"OpenCoder-llm/OpenCoder-llm" -> "bigcode-project/selfcodealign"
"OpenCoder-llm/OpenCoder-llm" -> "huybery/Awesome-Code-LLM"
"OpenCoder-llm/OpenCoder-llm" -> "allenai/open-instruct" ["e"=1]
"OpenCoder-llm/OpenCoder-llm" -> "OpenAutoCoder/Agentless"
"OpenCoder-llm/OpenCoder-llm" -> "evalplus/evalplus"
"OpenCoder-llm/OpenCoder-llm" -> "ise-uiuc/magicoder"
"OpenCoder-llm/OpenCoder-llm" -> "GAIR-NLP/O1-Journey" ["e"=1]
"OpenCoder-llm/OpenCoder-llm" -> "wasiahmad/Awesome-LLM-Synthetic-Data" ["e"=1]
"OpenCoder-llm/OpenCoder-llm" -> "agentica-project/rllm" ["e"=1]
"OpenCoder-llm/OpenCoder-llm" -> "multimodal-art-projection/MAP-NEO" ["e"=1]
"OpenCoder-llm/OpenCoder-llm" -> "huggingface/smollm" ["e"=1]
"OpenCoder-llm/OpenCoder-llm" -> "QwenLM/Qwen2.5-Coder"
"OpenCoder-llm/OpenCoder-llm" -> "volcengine/verl" ["e"=1]
"OpenAutoCoder/Agentless" -> "aorwall/moatless-tools"
"OpenAutoCoder/Agentless" -> "AutoCodeRoverSG/auto-code-rover" ["e"=1]
"OpenAutoCoder/Agentless" -> "SWE-bench/SWE-bench"
"OpenAutoCoder/Agentless" -> "facebookresearch/swe-rl"
"OpenAutoCoder/Agentless" -> "SWE-Gym/SWE-Gym"
"OpenAutoCoder/Agentless" -> "ozyyshr/RepoGraph"
"OpenAutoCoder/Agentless" -> "FudanSELab/Agent4SE-Paper-List"
"OpenAutoCoder/Agentless" -> "openai/SWELancer-Benchmark"
"OpenAutoCoder/Agentless" -> "evalplus/evalplus"
"OpenAutoCoder/Agentless" -> "WecoAI/aideml" ["e"=1]
"OpenAutoCoder/Agentless" -> "zou-group/textgrad" ["e"=1]
"OpenAutoCoder/Agentless" -> "codefuse-ai/Awesome-Code-LLM"
"OpenAutoCoder/Agentless" -> "xingyaoww/code-act"
"OpenAutoCoder/Agentless" -> "SWE-bench/experiments"
"OpenAutoCoder/Agentless" -> "trotsky1997/MathBlackBox" ["e"=1]
"FudanSELab/Agent4SE-Paper-List" -> "PurCL/CodeLLMPaper"
"FudanSELab/Agent4SE-Paper-List" -> "iSEngLab/AwesomeLLM4APR"
"FudanSELab/Agent4SE-Paper-List" -> "FudanSELab/ClassEval"
"FudanSELab/Agent4SE-Paper-List" -> "OpenAutoCoder/Agentless"
"FudanSELab/Agent4SE-Paper-List" -> "gai4se/LLM4SE"
"FudanSELab/Agent4SE-Paper-List" -> "ozyyshr/RepoGraph"
"FudanSELab/Agent4SE-Paper-List" -> "saltudelft/ml4se"
"FudanSELab/Agent4SE-Paper-List" -> "codefuse-ai/Awesome-Code-LLM"
"FudanSELab/Agent4SE-Paper-List" -> "xinyi-hou/LLM4SE_SLR"
"FudanSELab/Agent4SE-Paper-List" -> "facebookresearch/swe-rl"
"FudanSELab/Agent4SE-Paper-List" -> "ise-uiuc/Repilot"
"FudanSELab/Agent4SE-Paper-List" -> "iSEngLab/AwesomeLLM4SE"
"FudanSELab/Agent4SE-Paper-List" -> "amazon-science/cceval"
"FudanSELab/Agent4SE-Paper-List" -> "LLM-Testing/LLM4SoftwareTesting"
"FudanSELab/Agent4SE-Paper-List" -> "aorwall/moatless-tools"
"amazon-science/llm-code-preference" -> "llm4code/2024"
"LingmaTongyi/Lingma-SWE-GPT" -> "RepoUnderstander/RepoUnderstander"
"LingmaTongyi/Lingma-SWE-GPT" -> "yueliu1999/fastcodellama"
"LingmaTongyi/Lingma-SWE-GPT" -> "yingweima2022/SWE-Reasoner"
"LingmaTongyi/Lingma-SWE-GPT" -> "LingmaTongyi/Codev-Bench"
"metauto-ai/agent-as-a-judge" -> "metauto-ai/GPTSwarm" ["e"=1]
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-css"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-rust"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-ruby"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-c"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-python"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-go"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter-grammars/tree-sitter-lua"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-cpp"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/node-tree-sitter"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-c-sharp"
"tree-sitter/tree-sitter-typescript" -> "tree-sitter/tree-sitter-regex"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-bash"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-ruby"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-go"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-python"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-typescript"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-css"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-cpp"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-c"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-regex"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-c-sharp"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-php"
"tree-sitter/tree-sitter-rust" -> "tree-sitter/tree-sitter-java"
"danhper/bigcode-tools" -> "mast-group/naturalize"
"All-Hands-AI/openhands-resolver" -> "All-Hands-AI/trajectory-visualizer"
"All-Hands-AI/openhands-resolver" -> "All-Hands-AI/openhands-agent-monitor"
"chengpeng-wang/LLMSAN" -> "chengpeng-wang/LLMDFA"
"chengpeng-wang/LLMDFA" -> "chengpeng-wang/LLMSAN"
"chengpeng-wang/LLMDFA" -> "PurCL/LLMSCAN"
"SWE-agent/SWE-ReX" -> "SWE-Gym/SWE-Gym"
"Goldziher/tree-sitter-language-pack" -> "grantjenks/py-tree-sitter-languages"
"commit-0/commit0" -> "R2E-Gym/R2E-Gym"
"commit-0/commit0" -> "SWE-bench/SWE-smith"
"NL2Code/CodeR" -> "aorwall/SWE-bench-docker"
"NL2Code/CodeR" -> "aorwall/moatless-tools"
"NL2Code/CodeR" -> "Aider-AI/aider-swe-bench"
"NL2Code/CodeR" -> "multi-swe-bench/multi-swe-bench-env"
"microsoft/multilspy" -> "microsoft/monitors4codegen"
"nju-websoft/DraCo" -> "oceaneLIU/GraphCoder"
"nju-websoft/DraCo" -> "Dianshu-Liao/AAA-Code-Generation-Framework-for-Code-Repository-Local-Aware-Global-Aware-Third-Party-Aware"
"SWE-Gym/SWE-Gym" -> "facebookresearch/swe-rl"
"SWE-Gym/SWE-Gym" -> "aorwall/moatless-tools"
"SWE-Gym/SWE-Gym" -> "R2E-Gym/R2E-Gym"
"SWE-Gym/SWE-Gym" -> "r2e-project/r2e"
"SWE-Gym/SWE-Gym" -> "SWE-agent/SWE-ReX"
"SWE-Gym/SWE-Gym" -> "Leolty/repobench"
"SWE-Gym/SWE-Gym" -> "InternLM/SWE-Fixer"
"SWE-Gym/SWE-Gym" -> "Berkeley-NLP/Agent-Eval-Refine" ["e"=1]
"SWE-Gym/SWE-Gym" -> "OpenAutoCoder/Agentless"
"SWE-Gym/SWE-Gym" -> "ganler/code-r1"
"SWE-Gym/SWE-Gym" -> "sail-sg/oat" ["e"=1]
"SWE-Gym/SWE-Gym" -> "facebookresearch/MLGym"
"SWE-Gym/SWE-Gym" -> "NovaSky-AI/SkyRL" ["e"=1]
"SWE-Gym/SWE-Gym" -> "TheAgentCompany/TheAgentCompany" ["e"=1]
"SWE-Gym/SWE-Gym" -> "YifeiZhou02/ArCHer" ["e"=1]
"huhusmang/Awesome-LLMs-for-Vulnerability-Detection" -> "Sweetaroo/VulDetectBench"
"huhusmang/Awesome-LLMs-for-Vulnerability-Detection" -> "rmusab/vul-llm-finetune"
"EdinburghNLP/code-docstring-corpus" -> "sriniiyer/codenn"
"EdinburghNLP/code-docstring-corpus" -> "xing-hu/TL-CodeSum"
"EdinburghNLP/code-docstring-corpus" -> "uclnlp/pycodesuggest"
"EdinburghNLP/code-docstring-corpus" -> "wasiahmad/NeuralCodeSum"
"EdinburghNLP/code-docstring-corpus" -> "LittleYUYU/StackOverflow-Question-Code-Dataset"
"EdinburghNLP/code-docstring-corpus" -> "microsoft/graph-based-code-modelling"
"EdinburghNLP/code-docstring-corpus" -> "tech-srl/code2seq"
"EdinburghNLP/code-docstring-corpus" -> "wanyao1992/code_summarization_public"
"EdinburghNLP/code-docstring-corpus" -> "xing-hu/DeepCom"
"EdinburghNLP/code-docstring-corpus" -> "sriniiyer/concode"
"EdinburghNLP/code-docstring-corpus" -> "CoderPat/structured-neural-summarization"
"EdinburghNLP/code-docstring-corpus" -> "zysszy/GrammarCNN" ["e"=1]
"EdinburghNLP/code-docstring-corpus" -> "xing-hu/EMSE-DeepCom"
"EdinburghNLP/code-docstring-corpus" -> "google-deepmind/card2code" ["e"=1]
"EdinburghNLP/code-docstring-corpus" -> "pcyin/NL2code" ["e"=1]
"CGCL-codes/VulLLM" -> "SakiRinn/LLM4CVD"
"code-rag-bench/code-rag-bench" -> "ozyyshr/RepoGraph"
"ozyyshr/RepoGraph" -> "aorwall/moatless-tools"
"ozyyshr/RepoGraph" -> "allanj/repo-level-codegen-papers"
"ozyyshr/RepoGraph" -> "ScalingIntelligence/codemonkeys"
"ozyyshr/RepoGraph" -> "code-rag-bench/code-rag-bench"
"ozyyshr/RepoGraph" -> "RepoUnderstander/RepoUnderstander"
"ozyyshr/RepoGraph" -> "Leolty/repobench"
"ozyyshr/RepoGraph" -> "Aider-AI/aider-swe-bench"
"ozyyshr/RepoGraph" -> "oceaneLIU/GraphCoder"
"PurCL/LLMSCAN" -> "PurCL/RepoAudit"
"RepoUnderstander/RepoUnderstander" -> "yueliu1999/fastcodellama"
"RepoUnderstander/RepoUnderstander" -> "LingmaTongyi/Lingma-SWE-GPT"
"SakiRinn/LLM4CVD" -> "CGCL-codes/VulLLM"
"Aider-AI/aider-swe-bench" -> "mariushobbhahn/SWEBench-verified-mini"
"All-Hands-AI/openhands-aci" -> "All-Hands-AI/trajectory-visualizer"
"All-Hands-AI/openhands-aci" -> "All-Hands-AI/openhands-agent-monitor"
"ChrisCummins/cldrive" -> "ChrisCummins/paper-synthesizing-benchmarks"
"MaoZiming/papers" -> "Trinity-data-store/Trinity"
"openai/SWELancer-Benchmark" -> "OpenAutoCoder/Agentless"
"openai/SWELancer-Benchmark" -> "SWE-bench/SWE-bench"
"openai/SWELancer-Benchmark" -> "SWE-Gym/SWE-Gym"
"openai/SWELancer-Benchmark" -> "openai/mle-bench" ["e"=1]
"openai/SWELancer-Benchmark" -> "facebookresearch/swe-rl"
"openai/SWELancer-Benchmark" -> "openai/preparedness" ["e"=1]
"openai/SWELancer-Benchmark" -> "facebookresearch/MLGym"
"openai/SWELancer-Benchmark" -> "multi-swe-bench/multi-swe-bench"
"openai/SWELancer-Benchmark" -> "aorwall/moatless-tools"
"openai/SWELancer-Benchmark" -> "NovaSky-AI/SkyThought" ["e"=1]
"openai/SWELancer-Benchmark" -> "openai/simple-evals" ["e"=1]
"openai/SWELancer-Benchmark" -> "ValveSoftware/source-sdk-2013" ["e"=1]
"openai/SWELancer-Benchmark" -> "agentica-project/rllm" ["e"=1]
"openai/SWELancer-Benchmark" -> "metauto-ai/agent-as-a-judge"
"openai/SWELancer-Benchmark" -> "RAGEN-AI/RAGEN" ["e"=1]
"augmentcode/augment-swebench-agent" -> "facebookresearch/swe-rl"
"augmentcode/augment-swebench-agent" -> "SWE-agent/SWE-ReX"
"augmentcode/augment-swebench-agent" -> "gersteinlab/LocAgent"
"augmentcode/augment-swebench-agent" -> "raizamartin/gemini-code" ["e"=1]
"augmentcode/augment-swebench-agent" -> "SWE-Gym/SWE-Gym"
"ise-uiuc/blazedit" -> "ise-uiuc/xft"
"ganler/code-r1" -> "bigcode-project/selfcodealign"
"ganler/code-r1" -> "facebookresearch/swe-rl"
"ganler/code-r1" -> "evalplus/repoqa"
"ganler/code-r1" -> "KodCode-AI/kodcode"
"ganler/code-r1" -> "ise-uiuc/blazedit"
"ganler/code-r1" -> "HKUNLP/critic-rl" ["e"=1]
"ganler/code-r1" -> "facebookresearch/cruxeval"
"ganler/code-r1" -> "bigcode-project/bigcodebench"
"multi-swe-bench/multi-swe-bench" -> "multi-swe-bench/multi-swe-bench-env"
"multi-swe-bench/multi-swe-bench" -> "yingweima2022/SWE-Reasoner"
"KodCode-AI/kodcode" -> "ganler/code-r1"
"facebookresearch/swe-rl" -> "SWE-Gym/SWE-Gym"
"facebookresearch/swe-rl" -> "ganler/code-r1"
"facebookresearch/swe-rl" -> "R2E-Gym/R2E-Gym"
"facebookresearch/swe-rl" -> "OpenAutoCoder/Agentless"
"facebookresearch/swe-rl" -> "NovaSky-AI/SkyRL" ["e"=1]
"facebookresearch/swe-rl" -> "ozyyshr/RepoGraph"
"facebookresearch/swe-rl" -> "bigcode-project/selfcodealign"
"facebookresearch/swe-rl" -> "facebookresearch/MLGym"
"facebookresearch/swe-rl" -> "multi-swe-bench/multi-swe-bench"
"facebookresearch/swe-rl" -> "SWE-bench/SWE-smith"
"facebookresearch/swe-rl" -> "RUCAIBox/R1-Searcher" ["e"=1]
"facebookresearch/swe-rl" -> "kanishkg/cognitive-behaviors" ["e"=1]
"facebookresearch/swe-rl" -> "SWE-agent/SWE-ReX"
"facebookresearch/swe-rl" -> "facebookresearch/sweet_rl"
"facebookresearch/swe-rl" -> "aorwall/moatless-tools"
"facebookresearch/sweet_rl" -> "sanjibanc/agent_prm"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-json"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-c"
"tree-sitter/tree-sitter-bash" -> "tree-sitter-grammars/tree-sitter-lua"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-css"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-ruby"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-javascript"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-go"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-typescript"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-python"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-rust"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-html"
"tree-sitter/tree-sitter-bash" -> "tree-sitter/tree-sitter-cpp"
"All-Hands-AI/open-operator" -> "All-Hands-AI/openhands-aci"
"All-Hands-AI/open-operator" -> "SWE-agent/SWE-ReX"
"All-Hands-AI/open-operator" -> "All-Hands-AI/openhands-resolver"
"All-Hands-AI/open-operator" -> "All-Hands-AI/trajectory-visualizer"
"SWE-bench/SWE-smith" -> "R2E-Gym/R2E-Gym"
"SWE-bench/SWE-smith" -> "commit-0/commit0"
"src-d/ml" -> "src-d/vecino"
"src-d/ml" -> "src-d/gemini"
"src-d/ml" -> "src-d/ml-core"
"facebookresearch/MLGym" -> "facebookresearch/swe-rl"
"facebookresearch/MLGym" -> "SWE-Gym/SWE-Gym"
"facebookresearch/MLGym" -> "openai/mle-bench" ["e"=1]
"facebookresearch/MLGym" -> "WecoAI/aideml" ["e"=1]
"facebookresearch/MLGym" -> "DigiRL-agent/digirl" ["e"=1]
"facebookresearch/MLGym" -> "facebookresearch/sweet_rl"
"facebookresearch/MLGym" -> "TheAgentCompany/TheAgentCompany" ["e"=1]
"PurCL/RepoAudit" -> "PurCL/LLMSCAN"
"ChrisCummins/paper-end2end-dl" -> "ChrisCummins/clgen"
"ChrisCummins/paper-end2end-dl" -> "ChrisCummins/paper-synthesizing-benchmarks"
"ChrisCummins/paper-end2end-dl" -> "spcl/ncc"
"DanielLin1986/function_representation_learning" -> "DanielLin1986/RepresentationsLearningFromMulti_domain"
"SLP-team/SLP-Core" -> "mast-group/OpenVocabCodeNLM"
"src-d/vecino" -> "src-d/ml"
"R2E-Gym/R2E-Gym" -> "r2e-project/r2e"
"R2E-Gym/R2E-Gym" -> "MaoZiming/papers"
"All-Hands-AI/trajectory-visualizer" -> "All-Hands-AI/openhands-agent-monitor"
"tree-sitter/node-tree-sitter" ["l"="35.68,-0.081"]
"tree-sitter/tree-sitter-javascript" ["l"="35.69,-0.131"]
"tree-sitter/tree-sitter-typescript" ["l"="35.698,-0.115"]
"tree-sitter/haskell-tree-sitter" ["l"="35.663,-0.02"]
"tree-sitter/tree-sitter-cli" ["l"="35.683,-0.043"]
"tree-sitter/tree-sitter-go" ["l"="35.677,-0.118"]
"tree-sitter/tree-sitter-python" ["l"="35.735,-0.149"]
"tree-sitter/tree-sitter-json" ["l"="35.677,-0.139"]
"tree-sitter/go-tree-sitter" ["l"="35.643,-0.043"]
"tree-sitter/py-tree-sitter" ["l"="35.979,-0.229"]
"grantjenks/py-tree-sitter-languages" ["l"="35.935,-0.206"]
"microsoft/CodeXGLUE" ["l"="36.124,-0.236"]
"c2nes/javalang" ["l"="36.043,-0.291"]
"microsoft/CodeBERT" ["l"="36.11,-0.256"]
"tech-srl/code2seq" ["l"="36.016,-0.301"]
"tech-srl/code2vec" ["l"="36.043,-0.321"]
"github/CodeSearchNet" ["l"="36.068,-0.271"]
"wasiahmad/NeuralCodeSum" ["l"="35.998,-0.312"]
"tree-sitter/tree-sitter-java" ["l"="35.749,-0.158"]
"joernio/joern" ["l"="36.209,-0.773"]
"JetBrains-Research/astminer" ["l"="35.947,-0.335"]
"rjust/defects4j" ["l"="35.986,0.559"]
"GumTreeDiff/gumtree" ["l"="36.005,0.599"]
"Goldziher/tree-sitter-language-pack" ["l"="35.917,-0.195"]
"salesforce/CodeT5" ["l"="36.129,-0.206"]
"guxd/deep-code-search" ["l"="36.017,-0.361"]
"openai/human-eval" ["l"="36.178,-0.186"]
"IBM/Project_CodeNet" ["l"="36.091,-0.23"]
"wasiahmad/PLBART" ["l"="36.061,-0.232"]
"CGCL-codes/naturalcc" ["l"="36.102,-0.312"]
"EdinburghNLP/code-docstring-corpus" ["l"="36.006,-0.339"]
"facebookresearch/CodeGen" ["l"="36.077,-0.21"]
"zhangj111/astnn" ["l"="5.251,-7.752"]
"ml4code/ml4code.github.io" ["l"="36.064,-0.338"]
"google-research/python-graphs" ["l"="36.116,-0.989"]
"JetBrains-Research/code2seq" ["l"="35.964,-0.368"]
"saltudelft/ml4se" ["l"="36.182,-0.263"]
"tree-sitter/tree-sitter-html" ["l"="35.686,-0.154"]
"tree-sitter/tree-sitter-css" ["l"="35.68,-0.165"]
"tree-sitter-grammars/tree-sitter-lua" ["l"="35.662,-0.141"]
"tree-sitter/tree-sitter-jsdoc" ["l"="35.662,-0.166"]
"tree-sitter/tree-sitter-regex" ["l"="35.672,-0.152"]
"camdencheek/tree-sitter-dockerfile" ["l"="35.64,-0.142"]
"tree-sitter/tree-sitter-bash" ["l"="35.706,-0.131"]
"tree-sitter/tree-sitter-c" ["l"="35.715,-0.139"]
"shunsambongi/tree-sitter-gitignore" ["l"="35.654,-0.183"]
"SySeVR/SySeVR" ["l"="36.149,-0.406"]
"CGCL-codes/VulDeePecker" ["l"="36.141,-0.422"]
"johnb110/VDPython" ["l"="36.153,-0.423"]
"epicosy/devign" ["l"="36.162,-0.396"]
"VulDetProject/ReVeal" ["l"="36.175,-0.395"]
"saikat107/Devign" ["l"="36.183,-0.419"]
"VulDeeLocator/VulDeeLocator" ["l"="36.161,-0.433"]
"HuantWang/FUNDED_NISL" ["l"="36.163,-0.412"]
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" ["l"="36.19,-0.4"]
"DanielLin1986/Function-level-Vulnerability-Detection" ["l"="36.153,-0.444"]
"vulnerabilitydetection/VulnerabilityDetectionResearch" ["l"="36.172,-0.437"]
"davidhin/linevd" ["l"="36.176,-0.414"]
"awsm-research/LineVul" ["l"="36.2,-0.429"]
"daiquocnguyen/GNN-ReGVD" ["l"="36.168,-0.423"]
"muVulDeePecker/muVulDeePecker" ["l"="36.118,-0.436"]
"CGCL-codes/VulCNN" ["l"="36.169,-0.444"]
"ICL-ml4csec/VulBERTa" ["l"="36.176,-0.429"]
"leontsui1987/VulDetector" ["l"="36.131,-0.475"]
"IBM/Graph2Seq" ["l"="35.898,-0.305"]
"beckdaniel/acl2018_graph2seq" ["l"="57.654,29.085"]
"hugochan/RL-based-Graph2Seq-for-NQG" ["l"="57.413,29.228"]
"syxu828/Graph2Seq-0.1" ["l"="35.863,-0.3"]
"nwpuhq/Graph2Seq" ["l"="35.849,-0.276"]
"acleclair/ICPC2020_GNN" ["l"="35.979,-0.314"]
"diegma/graph-2-text" ["l"="57.658,29.122"]
"freesunshine0316/neural-graph-to-seq-mp" ["l"="57.687,29.057"]
"IBM/SQL-to-Text" ["l"="35.837,-0.297"]
"microsoft/graph-based-code-modelling" ["l"="35.961,-0.321"]
"lancopku/Graph-to-seq-comment-generation" ["l"="57.553,29.252"]
"xing-hu/TL-CodeSum" ["l"="35.992,-0.329"]
"src-d/datasets" ["l"="35.853,-0.461"]
"src-d/ml" ["l"="35.765,-0.518"]
"bblfsh/bblfshd" ["l"="4.232,-7.783"]
"mast-group/OpenVocabCodeNLM" ["l"="35.918,-0.443"]
"ASSERT-KTH/CodRep" ["l"="35.815,-0.485"]
"src-d/sourced-ce" ["l"="35.813,-0.538"]
"spcl/ncc" ["l"="35.927,-0.392"]
"hamelsmu/code_search" ["l"="35.992,-0.402"]
"facebookresearch/Neural-Code-Search-Evaluation-Dataset" ["l"="35.985,-0.426"]
"hamelsmu/Seq2Seq_Tutorial" ["l"="35.962,-0.514"]
"sriniiyer/codenn" ["l"="35.982,-0.346"]
"LittleYUYU/StackOverflow-Question-Code-Dataset" ["l"="36.016,-0.42"]
"chrisjmccormick/simsearch" ["l"="35.965,-0.43"]
"novoselrok/codesnippetsearch" ["l"="35.958,-0.45"]
"tree-sitter/tree-sitter-php" ["l"="35.707,-0.179"]
"claytonrcarter/tree-sitter-phpdoc" ["l"="35.696,-0.215"]
"tree-sitter/tree-sitter-ruby" ["l"="35.715,-0.118"]
"smacker/go-tree-sitter" ["l"="35.595,-0.074"]
"hamelsmu/ktext" ["l"="35.952,-0.553"]
"guxd/deepAPI" ["l"="36.005,-0.439"]
"xing-hu/EMSE-DeepCom" ["l"="35.981,-0.332"]
"Jun-jie-Huang/CoCLR" ["l"="63.554,-12.612"]
"FalconLK/facoy" ["l"="36.043,-0.39"]
"wanyao1992/code_summarization_public" ["l"="36.01,-0.328"]
"clonebench/BigCloneBench" ["l"="5.197,-7.813"]
"LittleYUYU/CoaCor" ["l"="36.02,-0.454"]
"rajarshihaldar/codetextmatch" ["l"="36.005,-0.47"]
"LittleYUYU/Interactive-Semantic-Parsing" ["l"="37.651,-1.746"]
"jeniyat/StackOverflowNER" ["l"="36.02,-0.482"]
"conala-corpus/conala-baseline" ["l"="36.039,-0.464"]
"sriniiyer/concode" ["l"="36.023,-0.395"]
"zhangj111/rencos" ["l"="35.996,-0.349"]
"Bolin0215/CSCGDual" ["l"="36.002,-0.363"]
"jumormt/DeepWukong" ["l"="36.186,-0.43"]
"DanielLin1986/function_representation_learning" ["l"="36.152,-0.478"]
"electricalwind/data7" ["l"="36.122,-0.494"]
"ARiSE-Lab/VELVET" ["l"="36.153,-0.465"]
"Seahymn2019/Function-level-Vulnerability-Dataset" ["l"="36.128,-0.457"]
"tkdsheep/BIKER-ASE2018" ["l"="35.99,-0.474"]
"SAP/project-kb" ["l"="36.241,-0.534"]
"eclipse-steady/steady" ["l"="36.26,-0.597"]
"s3c2/vfcfinder" ["l"="36.24,-0.566"]
"tuhh-softsec/vul4j" ["l"="35.877,0.597"]
"TQRG/security-patches-dataset" ["l"="36.254,-0.515"]
"secureIT-project/CVEfixes" ["l"="36.222,-0.434"]
"michaelpradel/DeepBugs" ["l"="35.887,-0.348"]
"JetBrains-Research/DeepBugsPlugin" ["l"="35.84,-0.37"]
"microsoft/dpu-utils" ["l"="36.078,-0.995"]
"sola-st/DynaPyt" ["l"="36.139,-0.976"]
"CoderPat/structured-neural-summarization" ["l"="35.968,-0.31"]
"m3yrin/code2seq" ["l"="35.956,-0.304"]
"tech-srl/slm-code-generation" ["l"="35.942,-0.31"]
"acr31/features-javac" ["l"="35.897,-0.329"]
"dmitrykazhdan/Representing-Programs-with-Graphs" ["l"="35.924,-0.334"]
"JetBrains-Research/buckwheat" ["l"="35.842,-0.393"]
"JetBrains-Research/psiminer" ["l"="35.877,-0.365"]
"JetBrains-Research/reflekt" ["l"="54.736,-13.903"]
"sonoisa/code2vec" ["l"="35.871,-0.325"]
"JetBrains-Research/embeddings-for-trees" ["l"="35.898,-0.372"]
"Kolkir/cppminer" ["l"="35.908,-0.346"]
"JetBrains-Research/RefactorInsight" ["l"="35.86,-0.362"]
"bdqnghi/infercode" ["l"="5.358,-7.636"]
"giganticode/codeprep" ["l"="35.907,-0.487"]
"xing-hu/DeepCom" ["l"="35.985,-0.365"]
"sh1doy/summarization_tf" ["l"="35.965,-0.335"]
"gingasan/sit3" ["l"="35.901,-0.287"]
"mcmillco/funcom" ["l"="35.959,-0.345"]
"LRNavin/AutoComments" ["l"="35.969,-0.383"]
"XMUDM/BASTS" ["l"="35.996,-0.295"]
"CoderPat/OpenGNN" ["l"="35.921,-0.3"]
"emalgorithm/structured-neural-summarization-replication" ["l"="35.924,-0.315"]
"LauraWartschinski/VulnerabilityDetection" ["l"="36.141,-0.44"]
"SAP/fosstars-rating-core" ["l"="36.273,-0.636"]
"google/vulncode-db" ["l"="-42.382,-29.335"]
"SMAT-Lab/Scalpel" ["l"="36.155,-0.932"]
"src-d/engine-deprecated" ["l"="35.791,-0.583"]
"casics/spiral" ["l"="35.894,-0.525"]
"ChrisCummins/ProGraML" ["l"="35.929,-0.355"]
"ChrisCummins/paper-end2end-dl" ["l"="35.891,-0.407"]
"IITH-Compilers/IR2Vec" ["l"="35.904,-0.397"]
"ChrisCummins/phd" ["l"="35.912,-0.417"]
"VHellendoorn/ICLR20-Great" ["l"="35.958,-0.29"]
"AI-nstein/hoppity" ["l"="35.91,-0.271"]
"bdqnghi/graph-ast" ["l"="5.403,-7.611"]
"SLP-team/SLP-Core" ["l"="35.903,-0.468"]
"serenadeai/tree-sitter-scss" ["l"="35.645,-0.176"]
"alemuller/tree-sitter-make" ["l"="35.65,-0.159"]
"src-d/gemini" ["l"="35.72,-0.551"]
"src-d/apollo" ["l"="35.698,-0.568"]
"the-mikedavis/tree-sitter-diff" ["l"="35.63,-0.189"]
"DanielLin1986/TransferRepresentationLearning" ["l"="36.141,-0.498"]
"bentrevett/code2vec" ["l"="35.843,-0.322"]
"Attn-to-FC/Attn-to-FC" ["l"="35.944,-0.376"]
"tree-sitter-grammars/tree-sitter-gitattributes" ["l"="35.643,-0.196"]
"src-d/modelforge" ["l"="35.677,-0.585"]
"evalplus/evalplus" ["l"="36.214,-0.162"]
"facebookresearch/TransCoder" ["l"="36.033,-0.233"]
"linkedin/detext" ["l"="52.65,25.609"]
"stayawayinesctec/stayaway-app" ["l"="-1.012,3.126"]
"bitdefender/hvmi" ["l"="-43.043,-35.257"]
"VHellendoorn/Code-LMs" ["l"="36.101,-0.188"]
"SamPom100/UnusualVolumeDetector" ["l"="-8.949,13.087"]
"1d8/Android-Analysis" ["l"="35.971,-0.182"]
"cyberark/SkyArk" ["l"="11.215,-4.615"]
"AMPLE001/AMPLE" ["l"="36.189,-0.443"]
"gai4se/LLM4SE" ["l"="36.254,-0.277"]
"SystemSecurityStorm/Awesome-Binary-Similarity" ["l"="-43.335,-36.905"]
"iSEngLab/AwesomeLLM4APR" ["l"="36.275,-0.27"]
"iSEngLab/AwesomeLLM4SE" ["l"="36.239,-0.273"]
"codefuse-ai/Awesome-Code-LLM" ["l"="36.246,-0.205"]
"Fraunhofer-AISEC/cpg" ["l"="36.159,-0.762"]
"PurCL/CodeLLMPaper" ["l"="36.304,-0.29"]
"tree-sitter/tree-sitter-rust" ["l"="35.711,-0.155"]
"tree-sitter/tree-sitter-cpp" ["l"="35.697,-0.147"]
"tud-ccc/learning-compiler-graphs" ["l"="35.91,-0.373"]
"facebookresearch/CompilerGym" ["l"="37.093,1.066"]
"ChrisCummins/clgen" ["l"="35.867,-0.413"]
"danielzuegner/code-transformer" ["l"="35.995,-0.277"]
"microsoft/methods2test" ["l"="36.176,-0.219"]
"dpfried/incoder" ["l"="36.125,-0.152"]
"wala/graph4code" ["l"="36.45,-0.21"]
"vladbatushkov/strazh" ["l"="36.492,-0.237"]
"microsoft/ptgnn" ["l"="35.932,-0.281"]
"google-research/plur" ["l"="35.976,-0.259"]
"microsoft/tf-gnn-samples" ["l"="52.881,15.969"]
"microsoft/tf2-gnn" ["l"="23.623,14.904"]
"tdsc2022-artifact/artifact" ["l"="36.213,-0.456"]
"ISU-PAAL/DeepDFA" ["l"="36.199,-0.461"]
"tree-sitter/tree-sitter-c-sharp" ["l"="35.731,-0.128"]
"hazimhanif/svd_exp1" ["l"="36.115,-0.468"]
"google-research-datasets/great" ["l"="35.935,-0.256"]
"JetBrains-Research/IntelliJDeodorant" ["l"="35.853,-0.379"]
"JetBrains-Research/sosed" ["l"="35.867,-0.386"]
"DLVulDet/PrimeVul" ["l"="36.23,-0.417"]
"wagner-group/diversevul" ["l"="36.212,-0.423"]
"eth-sri/sven" ["l"="36.256,-0.423"]
"BASE-LAB-SJTU/CosBench" ["l"="35.973,-0.458"]
"facebookresearch/aroma-paper-artifacts" ["l"="35.962,-0.478"]
"14dtj/CocoQa" ["l"="35.985,-0.453"]
"lanwuwei/BERTOverflow" ["l"="36.017,-0.525"]
"ppashakhanloo/CodeTrek" ["l"="35.9,-0.246"]
"DanielLin1986/Data-Driven_Software_Vulnerability_Discovery" ["l"="36.155,-0.492"]
"JetBrains-Research/kinference" ["l"="35.822,-0.386"]
"JetBrains/reading-club" ["l"="35.786,-0.405"]
"Jacob-yen/LEMON" ["l"="36.241,0.11"]
"library-testing/Muffin" ["l"="36.231,0.102"]
"ise-uiuc/FreeFuzz" ["l"="36.237,0.085"]
"dpankratz/TVMFuzz" ["l"="36.25,0.131"]
"ise-uiuc/tzer" ["l"="36.256,0.102"]
"ise-uiuc/NablaFuzz" ["l"="36.25,0.065"]
"brenocfg/AnghaBench" ["l"="35.854,-0.507"]
"jordiae/exebench" ["l"="35.877,-0.463"]
"huzecong/ghcc" ["l"="-43.427,-36.867"]
"mast-group/tassal" ["l"="35.779,-0.361"]
"mast-group/naturalize" ["l"="35.761,-0.366"]
"code-gen/cscg" ["l"="35.969,-0.352"]
"parasj/contracode" ["l"="36.032,-0.257"]
"JetBrains-Research/Lupa" ["l"="35.842,-0.351"]
"zetang94/ICSE2022_AST_Trans" ["l"="35.959,-0.274"]
"NougatCA/SPT-Code" ["l"="35.973,-0.277"]
"awsm-research/line-level-defect-prediction" ["l"="36.224,-0.48"]
"awsm-research/DeepLineDP" ["l"="36.239,-0.492"]
"cqu-isse/CARLCS-CNN" ["l"="35.999,-0.492"]
"jianguda/mrncs" ["l"="36.074,-0.433"]
"wssun/TranCS" ["l"="36.07,-0.454"]
"CodedotAl/gpt-code-clippy" ["l"="36.017,-0.118"]
"CodedotAl/code-clippy-vscode" ["l"="35.989,-0.074"]
"hieunc229/copilot-clone" ["l"="35.966,-0.052"]
"fauxpilot/fauxpilot" ["l"="41.286,-4.158"]
"salesforce/CodeGen" ["l"="36.085,-0.154"]
"THUDM/CodeGeeX" ["l"="39.186,-1.888"]
"samrawal/emacs-secondmate" ["l"="35.931,-0.07"]
"ncoop57/code-clippy-vscode" ["l"="35.999,-0.049"]
"badboysm890/clara-copilot" ["l"="35.951,-0.084"]
"salesforce/CodeRL" ["l"="36.118,-0.135"]
"EleutherAI/gpt-neox" ["l"="38.738,-0.832"]
"kingoflolz/mesh-transformer-jax" ["l"="38.72,-0.912"]
"reddy-lab-code-research/XLCoST" ["l"="5.284,-7.659"]
"agemagician/CodeTrans" ["l"="36.037,-0.205"]
"hendrycks/apps" ["l"="36.165,-0.135"]
"wasiahmad/AVATAR" ["l"="36.043,-0.188"]
"google-deepmind/code_contests" ["l"="36.129,-0.179"]
"bigcode-project/bigcode-evaluation-harness" ["l"="36.21,-0.134"]
"hendrycks/test" ["l"="37.304,-0.164"]
"tatsu-lab/alpaca_eval" ["l"="37.246,-0.242"]
"SWE-bench/SWE-bench" ["l"="36.305,-0.158"]
"sahil280114/codealpaca" ["l"="36.18,-0.154"]
"google/BIG-bench" ["l"="37.205,-0.127"]
"openai/grade-school-math" ["l"="37.351,-0.209"]
"bigcode-project/starcoder" ["l"="39.955,0.645"]
"salesforce/CodeTF" ["l"="36.153,-0.162"]
"Venthe/vscode-fauxpilot" ["l"="35.918,0.014"]
"DeepGenX/CodeGenX" ["l"="45.355,22.206"]
"huggingface/llm-vscode" ["l"="38.653,-0.885"]
"CosmodiumCS/MK14-SuperVision" ["l"="35.938,-0.016"]
"codota/tabnine-vscode" ["l"="-55.404,7.117"]
"ravenscroftj/turbopilot" ["l"="41.242,-3.952"]
"gencay/vscode-chatgpt" ["l"="43.737,1.1"]
"microsoft/PythonProgrammingPuzzles" ["l"="36.127,-0.107"]
"microsoft/CodeT" ["l"="36.196,-0.117"]
"girlscript/winter-of-contributing" ["l"="29.566,-26.727"]
"GoTurkiye/training" ["l"="29.577,-21.336"]
"google-research-datasets/eth_py150_open" ["l"="36.09,-0.071"]
"IntersectMBO/essential-cardano" ["l"="-19.668,7.404"]
"ellisk42/ec" ["l"="53.736,29.653"]
"benthecoder/yt-channels-DS-AI-ML-CS" ["l"="26.191,-25.984"]
"shaohua0116/awesome-program" ["l"="36.076,-0.03"]
"tree-sitter-grammars/tree-sitter-yaml" ["l"="35.643,-0.124"]
"MVDetection/MVD" ["l"="36.187,-0.453"]
"gagan3012/project-code-py" ["l"="36.146,-0.056"]
"reddy-lab-code-research/PPOCoder" ["l"="22.028,15.655"]
"CoderEval/CoderEval" ["l"="36.207,-0.059"]
"abacaj/code-eval" ["l"="36.209,-0.078"]
"FudanSELab/ClassEval" ["l"="36.248,-0.078"]
"nuprl/MultiPL-E" ["l"="36.234,-0.067"]
"LiveCodeBench/LiveCodeBench" ["l"="36.258,-0.124"]
"ASSERT-KTH/VRepair" ["l"="36.27,-0.416"]
"awsm-research/VulRepair" ["l"="36.244,-0.4"]
"ASSERT-KTH/sequencer" ["l"="35.889,0.579"]
"awsm-research/VQM" ["l"="36.302,-0.423"]
"eth-sri/TFix" ["l"="35.847,0.57"]
"bayesgroup/code_transformers" ["l"="36.007,-0.254"]
"gingasan/astruc" ["l"="35.878,-0.283"]
"GoneZ5/SCRIPT" ["l"="35.88,-0.268"]
"semiosis/pen.el" ["l"="-16.34,-11.535"]
"Eshe0922/ReposVul" ["l"="36.241,-0.434"]
"Icyrockton/MegaVul" ["l"="36.239,-0.456"]
"IBM/D2A" ["l"="36.202,-0.447"]
"CGCL-codes/awesome-code-intelligence" ["l"="36.117,-0.346"]
"Zhaoyang-Chu/counterfactual-vulnerability-detection" ["l"="36.125,-0.405"]
"shangqing-liu/GraphSearchNet" ["l"="36.084,-0.386"]
"AwdHanPeng/TPTrans" ["l"="35.955,-0.253"]
"pdlan/OSCAR" ["l"="35.764,0.58"]
"jacobwwh/graphmatch_clone" ["l"="5.226,-7.771"]
"predoodl/predoo" ["l"="36.214,0.116"]
"lin-tan/DocTer" ["l"="36.219,0.089"]
"camdencheek/tree-sitter-go-mod" ["l"="35.628,-0.113"]
"SKKU-SecLab/VulDeBERT" ["l"="36.19,-0.487"]
"Vul-LMGNN/vul-LMGGNN" ["l"="36.179,-0.458"]
"klainfo/ScottKnottESD" ["l"="36.281,-0.532"]
"awsm-research/Rnalytica" ["l"="36.301,-0.553"]
"nus-apr/cerberus" ["l"="36.275,-0.186"]
"DehengYang/TransplantFix" ["l"="35.917,0.545"]
"yuntongzhang/vulnfix" ["l"="36.278,-0.22"]
"soarsmu/attack-pretrain-models-of-code" ["l"="36.299,-0.379"]
"SEKE-Adversary/CARROT" ["l"="36.362,-0.423"]
"TQRG/secbench" ["l"="36.273,-0.553"]
"facebookresearch/code-prediction-transformer" ["l"="37.553,-1.835"]
"yuewang-cuhk/awesome-programming-language-pretraining-papers" ["l"="35.806,0.576"]
"17385/TreeBERT" ["l"="36.009,-0.195"]
"ganler/memcov" ["l"="36.26,0.062"]
"llm4code/2024" ["l"="36.267,0.019"]
"nlpxucan/WizardLM" ["l"="40.014,0.576"]
"facebookresearch/metaseq" ["l"="38.79,-0.808"]
"CarperAI/trlx" ["l"="37.133,-0.204"]
"salesforce/jaxformer" ["l"="21.98,13.854"]
"ethancaballero/description2code" ["l"="36.05,-0.148"]
"bigcode-project/octopack" ["l"="36.219,-0.113"]
"ise-uiuc/nnsmith" ["l"="36.254,0.085"]
"ise-uiuc/neuri-artifact" ["l"="36.257,0.048"]
"ise-uiuc/TitanFuzz" ["l"="36.234,0.068"]
"ise-uiuc/WhiteFox" ["l"="36.253,0.031"]
"ise-uiuc/DeepREL" ["l"="36.24,0.052"]
"llylly/RANUM" ["l"="36.263,0.121"]
"amazon-science/mxeval" ["l"="36.067,-0.103"]
"jkoppel/QuixBugs" ["l"="35.924,0.558"]
"shuyanzhou/docprompting" ["l"="36.118,-0.081"]
"microsoft/ReACC" ["l"="36.127,-0.061"]
"CocaVul/Coca" ["l"="36.179,-0.497"]
"m-zakeri/iust_deep_fuzz" ["l"="-41.696,-36.375"]
"RUB-SysSec/grimoire" ["l"="-41.448,-36.182"]
"tensorscopepro/Tensorscope" ["l"="36.212,0.104"]
"lin-tan/eagle" ["l"="36.196,0.117"]
"rizwan09/REDCODER" ["l"="36.128,-0.043"]
"tree-sitter-grammars/tree-sitter-markdown" ["l"="35.612,-0.152"]
"vigoux/tree-sitter-viml" ["l"="35.568,-0.137"]
"ikatyang/tree-sitter-markdown" ["l"="35.552,-0.165"]
"kdheepak/panvimdoc" ["l"="4.018,15.136"]
"degraphcs/DeGraphCS" ["l"="36.074,-0.414"]
"microsoft/PyCodeGPT" ["l"="36.107,-0.054"]
"xlang-ai/EVOR" ["l"="36.083,0.001"]
"shrivastavadisha/repo_level_prompt_generation" ["l"="36.175,-0.063"]
"awsm-research/AIBugHunter" ["l"="36.256,-0.446"]
"saltudelft/codefill" ["l"="36.111,-0.02"]
"the-mikedavis/tree-sitter-git-rebase" ["l"="35.646,-0.21"]
"the-mikedavis/tree-sitter-git-commit" ["l"="35.602,-0.202"]
"mast-group/convolutional-attention" ["l"="35.82,-0.352"]
"samialabed/method-name-prediction" ["l"="35.792,-0.344"]
"ntunlp/ExecEval" ["l"="36.19,-0.001"]
"Intelligent-CAT-Lab/PLTranslationEmpirical" ["l"="36.182,-0.015"]
"amazon-science/cceval" ["l"="36.28,-0.088"]
"bigcode-project/Megatron-LM" ["l"="36.187,-0.078"]
"bigcode-project/bigcode-dataset" ["l"="36.229,-0.094"]
"loubnabnl/santacoder-finetuning" ["l"="36.222,0.026"]
"xlang-ai/DS-1000" ["l"="36.241,-0.11"]
"xlang-ai/Binder" ["l"="37.876,-2.321"]
"bigcode-project/bigcodebench" ["l"="36.27,-0.11"]
"bigcode-project/bigcode-analysis" ["l"="36.223,-0.046"]
"bigcode-project/the-stack-v2" ["l"="36.239,-0.13"]
"bigscience-workshop/data-preparation" ["l"="38.512,-0.604"]
"openai/human-eval-infilling" ["l"="36.248,-0.042"]
"ChenghaoMou/text-dedup" ["l"="38.537,-0.59"]
"huggingface/cosmopedia" ["l"="38.573,-0.492"]
"facebookresearch/cruxeval" ["l"="36.258,-0.091"]
"nickrosh/evol-teacher" ["l"="36.23,-0.023"]
"bigcode-project/selfcodealign" ["l"="36.288,-0.104"]
"ymirsky/VulChecker" ["l"="36.176,-0.48"]
"CGCL-codes/VulTrigger" ["l"="36.169,-0.526"]
"Zyq-scut/RLTF" ["l"="22.055,15.629"]
"shunzh/Code-AI-Tree-Search" ["l"="36.063,-0.069"]
"amazon-science/recode" ["l"="36.083,-0.093"]
"iSEngLab/LLM4VulFix" ["l"="36.258,-0.312"]
"chijianlei/SeqTrans" ["l"="36.273,-0.397"]
"allanj/repo-level-codegen-papers" ["l"="36.302,-0.124"]
"microsoft/DiVeRSe" ["l"="36.172,-0.046"]
"Leolty/repobench" ["l"="36.312,-0.094"]
"TIGER-AI-Lab/Program-of-Thoughts" ["l"="36.892,-2.436"]
"ise-uiuc/uniapr" ["l"="36.267,0.002"]
"nuprl/MultiPL-T" ["l"="36.206,-0.037"]
"huybery/Awesome-Code-LLM" ["l"="36.246,-0.176"]
"EleutherAI/lm-evaluation-harness" ["l"="38.704,-0.669"]
"huggingface/lighteval" ["l"="38.622,-0.502"]
"Frederisk/fauxpilot-windows" ["l"="35.897,0.045"]
"tuhh-softsec/LLMSecEval" ["l"="36.341,-0.491"]
"s2e-lab/SecurityEval" ["l"="36.319,-0.473"]
"uclnlp/pycodesuggest" ["l"="35.981,-0.297"]
"ise-uiuc/Repilot" ["l"="36.27,-0.06"]
"pkuzqh/Recoder" ["l"="35.897,0.559"]
"iSEngLab/AwesomeLearningAPR" ["l"="36.273,-0.254"]
"evo-eval/evoeval" ["l"="36.268,-0.036"]
"ise-uiuc/xft" ["l"="36.28,-0.044"]
"iSEngLab/GAMMA" ["l"="36.264,-0.295"]
"lin-tan/clm" ["l"="36.294,-0.31"]
"lin-tan/CoCoNut-Artifact" ["l"="35.907,0.57"]
"TruX-DTF/TBar" ["l"="35.921,0.572"]
"gonglinyuan/safim" ["l"="36.254,0.004"]
"lin-tan/knod" ["l"="36.298,-0.336"]
"zjulgc/llmpeft4apr" ["l"="36.312,-0.338"]
"lin-tan/CURE" ["l"="35.881,0.563"]
"shangqing-liu/ContraBERT" ["l"="36.39,-0.436"]
"optimatch/optimatch" ["l"="36.274,-0.475"]
"CGCL-codes/VulBG" ["l"="36.175,-0.573"]
"CGCL-codes/vdgraph" ["l"="36.176,-0.545"]
"Xin-Cheng-Wen/LIVABLE" ["l"="36.141,-0.465"]
"reddy-lab-code-research/CodeAttack" ["l"="36.396,-0.456"]
"tianzhaotju/CODA" ["l"="36.416,-0.471"]
"gbprod/tree-sitter-gitcommit" ["l"="35.628,-0.216"]
"gururise/AlpacaDataCleaned" ["l"="42.472,-2.006"]
"teknium1/GPTeacher" ["l"="42.501,-2.047"]
"GanjinZero/RRHF" ["l"="37.215,-0.204"]
"AetherCortex/Llama-X" ["l"="39.103,-2.269"]
"theblackcat102/evol-dataset" ["l"="36.216,0.005"]
"swtheing/WizardCoder_Instruct_Generator" ["l"="36.202,0.018"]
"nlpxucan/evol-instruct" ["l"="36.212,-0.018"]
"lcw99/evolve-instruct" ["l"="36.275,0.065"]
"my-other-github-account/llm-humaneval-benchmarks" ["l"="36.239,0.001"]
"ise-uiuc/magicoder" ["l"="36.258,-0.156"]
"atfortes/Awesome-LLM-Reasoning" ["l"="37.156,-0.385"]
"facebookresearch/swe-rl" ["l"="36.363,-0.094"]
"opendilab/awesome-RLHF" ["l"="37.127,-0.285"]
"AblateIt/finetune-study" ["l"="47.46,30.541"]
"declare-lab/instruct-eval" ["l"="37.286,-0.182"]
"CGCL-codes/VulLLM" ["l"="36.253,-0.477"]
"eth-sri/SafeCoder" ["l"="36.309,-0.444"]
"FudanSELab/Agent4SE-Paper-List" ["l"="36.291,-0.198"]
"OpenAutoCoder/Agentless" ["l"="36.351,-0.147"]
"OpenRLHF/OpenRLHF" ["l"="37.161,-0.425"]
"codefuse-ai/FasterTransformer4CodeFuse" ["l"="36.305,-0.022"]
"codefuse-ai/MFTCoder" ["l"="36.27,-0.078"]
"codefuse-ai/codefuse" ["l"="36.308,-0.04"]
"codefuse-ai/.github" ["l"="36.341,0.007"]
"the-crypt-keeper/can-ai-code" ["l"="36.287,0.029"]
"aigoopy/llm-jeopardy" ["l"="36.319,0.079"]
"jondurbin/airoboros" ["l"="42.563,-2.031"]
"catid/supercharger" ["l"="42.48,-2.077"]
"QuangBK/generativeAgent_LLM" ["l"="40.999,-4.11"]
"ChuloAI/BrainChulo" ["l"="42.545,-2.057"]
"SLAM-group/newhope" ["l"="36.332,0.11"]
"mzbac/qlora-fine-tune" ["l"="38.168,-1.587"]
"fynnfluegge/doc-comments-ai" ["l"="36.509,-0.168"]
"fynnfluegge/codeqai" ["l"="36.57,-0.181"]
"replit/ReplitLM" ["l"="36.155,-0.093"]
"zphang/minimal-llama" ["l"="42.472,-1.908"]
"openlm-research/open_llama" ["l"="39.915,0.666"]
"richardyc/Chrome-GPT" ["l"="41.14,-3.742"]
"salesforce/xgen" ["l"="37.98,-1.554"]
"teknium1/stanford_alpaca-replit" ["l"="36.141,-0.03"]
"danielgross/LlamaAcademy" ["l"="41.347,-3.817"]
"mosaicml/llm-foundry" ["l"="39.881,0.753"]
"codestoryai/sidecar" ["l"="36.47,-0.125"]
"codestoryai/aide" ["l"="41.245,0.203"]
"ozyyshr/RepoGraph" ["l"="36.369,-0.124"]
"aorwall/moatless-tools" ["l"="36.393,-0.134"]
"h2oai/h2o-wizardlm" ["l"="36.285,0.104"]
"h2oai/nitro" ["l"="36.298,0.17"]
"ctlllll/LLM-ToolMaker" ["l"="38.024,-1.604"]
"Cormanz/smartgpt" ["l"="41.092,-3.785"]
"codecompanion-ai/code-companion" ["l"="36.613,-0.188"]
"ntunlp/xCodeEval" ["l"="36.175,0.039"]
"FlagOpen/TACO" ["l"="41.647,0.688"]
"ganler/code-r1" ["l"="36.307,-0.076"]
"codefuse-ai/codefuse-evaluation" ["l"="36.324,-0.025"]
"aorwall/moatless-tree-search" ["l"="36.468,-0.156"]
"aorwall/SWE-bench-docker" ["l"="36.44,-0.171"]
"SWE-Gym/SWE-Gym" ["l"="36.385,-0.088"]
"NL2Code/CodeR" ["l"="36.438,-0.149"]
"Aider-AI/aider-swe-bench" ["l"="36.426,-0.159"]
"SWE-bench/experiments" ["l"="36.409,-0.175"]
"SWE-agent/SWE-ReX" ["l"="36.44,-0.069"]
"RepoUnderstander/RepoUnderstander" ["l"="36.436,-0.101"]
"AutoCodeRoverSG/auto-code-rover" ["l"="41.007,0.455"]
"InternLM/SWE-Fixer" ["l"="36.424,-0.086"]
"SalesforceAIResearch/swecomm" ["l"="36.438,-0.127"]
"Dianshu-Liao/AAA-Code-Generation-Framework-for-Code-Repository-Local-Aware-Global-Aware-Third-Party-Aware" ["l"="36.346,-0.071"]
"nju-websoft/DraCo" ["l"="36.328,-0.088"]
"liang2024086/code_comment_generation" ["l"="35.958,-0.393"]
"codefuse-ai/codefuse-chatbot" ["l"="51.107,2.825"]
"codefuse-ai/Test-Agent" ["l"="-1.021,1.018"]
"codefuse-ai/codefuse-devops-eval" ["l"="51.007,2.848"]
"codefuse-ai/CodeFuse-Query" ["l"="36.353,-0.266"]
"ARiSE-Lab/TRACED_ICSE_24" ["l"="36.207,-0.499"]
"ishepard/pydriller" ["l"="36.057,0.627"]
"ikatyang/tree-sitter-yaml" ["l"="35.635,-0.081"]
"ChrisCummins/cldrive" ["l"="35.849,-0.431"]
"ChrisCummins/paper-synthesizing-benchmarks" ["l"="35.866,-0.431"]
"fivosts/BenchPress" ["l"="35.83,-0.43"]
"seketeam/EvoCodeBench" ["l"="36.256,-0.018"]
"DeepSoftwareAnalytics/RLCoder" ["l"="36.346,-0.059"]
"yueliu1999/fastcodellama" ["l"="36.47,-0.084"]
"awsm-research/VulExplainer" ["l"="36.189,-0.531"]
"iSEngLab/NJU_SE_ThesisWritingTips" ["l"="36.27,-0.335"]
"courses-at-nju-by-hfwei/2022-compilers-coding" ["l"="36.281,-0.356"]
"codetlingua/codetlingua" ["l"="36.151,0.018"]
"WeixiangYAN/CodeTransOcean" ["l"="36.166,0.015"]
"SWE-agent/SWE-agent" ["l"="40.796,0.286"]
"openai/SWELancer-Benchmark" ["l"="36.406,-0.113"]
"openai/simple-evals" ["l"="37.235,-0.367"]
"THUDM/AgentBench" ["l"="36.724,-2.315"]
"volcengine/verl" ["l"="37.143,-0.472"]
"QwenLM/Qwen2.5-Coder" ["l"="36.309,-0.244"]
"QwenLM/Qwen-Agent" ["l"="40.896,0.064"]
"QwenLM/Qwen3" ["l"="38.923,-1.766"]
"deepseek-ai/DeepSeek-Coder-V2" ["l"="39.05,-0.879"]
"QwenLM/Qwen2.5-VL" ["l"="47.318,29.932"]
"microsoft/TinyTroupe" ["l"="41.093,0.167"]
"QwenLM/Qwen" ["l"="38.989,-1.849"]
"QwenLM/Qwen2.5-Math" ["l"="37.296,-0.436"]
"deepseek-ai/DeepSeek-Coder" ["l"="40.431,-0.221"]
"deepseek-ai/DeepSeek-V2" ["l"="38.995,-0.795"]
"sgl-project/sglang" ["l"="38.933,-0.652"]
"Zipstack/unstract" ["l"="41.13,0.166"]
"unslothai/unsloth" ["l"="40.533,0.197"]
"bigcode-project/starcoder2" ["l"="36.219,-0.19"]
"aixcoder-plugin/aiXcoder-7B" ["l"="40.604,-0.313"]
"OpenCodeInterpreter/OpenCodeInterpreter" ["l"="40.947,0.376"]
"FloridSleeves/LLMDebugger" ["l"="36.338,-0.171"]
"huangd1999/AgentCoder" ["l"="36.376,-0.169"]
"Md-Ashraful-Pramanik/MapCoder" ["l"="36.382,-0.189"]
"lapisrocks/LanguageAgentTreeSearch" ["l"="36.77,-2.348"]
"YerbaPage/MGDebugger" ["l"="36.39,-0.215"]
"thunlp/DebugBench" ["l"="-2.12,-33.945"]
"noahshinn/reflexion" ["l"="36.75,-2.304"]
"FloridSleeves/RobustAPI" ["l"="36.362,-0.2"]
"Codium-ai/AlphaCodium" ["l"="40.837,0.465"]
"arcee-ai/mergekit" ["l"="38.666,-0.539"]
"xingyaoww/code-act" ["l"="36.4,-0.158"]
"PeterGriffinJin/Search-R1" ["l"="37.232,-0.537"]
"langchain-ai/langgraph-codeact" ["l"="41.545,0.359"]
"RAGEN-AI/RAGEN" ["l"="37.212,-0.531"]
"OpenManus/OpenManus-RL" ["l"="37.215,-0.572"]
"Agent-RL/ReCall" ["l"="37.258,-0.54"]
"web-arena-x/webarena" ["l"="36.821,-1.486"]
"Open-Reasoner-Zero/Open-Reasoner-Zero" ["l"="37.209,-0.473"]
"sierra-research/tau-bench" ["l"="36.896,-1.369"]
"huofushuo/SID" ["l"="38.218,-0.078"]
"wichue/nethello" ["l"="38.081,-0.022"]
"MedicineStick/mini_gpt" ["l"="38.101,-0.029"]
"codeisangel/aio-runtime" ["l"="38.108,-0.051"]
"0voice/mysql_document" ["l"="37.939,0.028"]
"0606zt/Before" ["l"="38.125,-0.051"]
"KGminer001/KGminerproxy" ["l"="36.234,-0.324"]
"qiangyt/batchai" ["l"="38.136,-0.04"]
"SQY2021/PETL" ["l"="38.108,-0.006"]
"LLM-Testing/LLM4SoftwareTesting" ["l"="36.246,-0.249"]
"XYIheng/MobileAppTesting" ["l"="36.483,-1.715"]
"the-themis-benchmarks/home" ["l"="36.473,-1.694"]
"ZJU-ACES-ISE/ChatUniTest" ["l"="45.84,21.322"]
"strongcourage/awesome-directed-fuzzing" ["l"="-41.558,-36.141"]
"evalplus/repoqa" ["l"="36.282,-0.016"]
"ise-uiuc/blazedit" ["l"="36.295,-0.036"]
"LiveBench/LiveBench" ["l"="37.326,-0.302"]
"lmarena/arena-hard-auto" ["l"="37.309,-0.27"]
"GhabiX/SRepair" ["l"="36.311,-0.317"]
"afortunado-aceptado/Rudra" ["l"="36.282,-0.297"]
"vinci-grape/ThinkRepair" ["l"="36.277,-0.312"]
"amazon-science/llm-code-preference" ["l"="36.284,0.005"]
"chengpeng-wang/LLMDFA" ["l"="36.359,-0.307"]
"chengpeng-wang/LLMSAN" ["l"="36.341,-0.315"]
"SVF-tools/SVF" ["l"="-22.087,-18.503"]
"QilinPTA/Qilin" ["l"="36.145,-0.788"]
"seclab-ucr/LLift" ["l"="36.332,-0.339"]
"hzysvilla/Academic_LLM_Sec_Papers" ["l"="36.356,-0.353"]
"tmylla/Awesome-LLM4Cybersecurity" ["l"="-43.96,-29.567"]
"PurCL/RepoAudit" ["l"="36.353,-0.327"]
"plast-lab/doop" ["l"="36.166,-0.802"]
"pascal-lab/Tai-e-assignments" ["l"="36.202,-0.874"]
"bigcode-project/bigcodebench-annotation" ["l"="36.292,-0.069"]
"sail-sg/regmix" ["l"="38.344,-0.648"]
"OpenBMB/RepoAgent" ["l"="36.328,-0.137"]
"oceaneLIU/GraphCoder" ["l"="36.331,-0.107"]
"multi-swe-bench/multi-swe-bench-env" ["l"="36.453,-0.142"]
"razzmatazz/csharp-language-server" ["l"="-35.233,-1.231"]
"kagnlp/CodeGenerator" ["l"="36.423,-0.22"]
"AntChainOpenLabs/Smart-Intermediate-Representation" ["l"="36.382,-0.288"]
"codefuse-ai/RepoFuse" ["l"="36.396,-0.302"]
"alipay/ant-application-security-testing-benchmark" ["l"="-44.249,-29.414"]
"microsoft/monitors4codegen" ["l"="36.319,0.011"]
"microsoft/multilspy" ["l"="36.356,0.055"]
"streamblocks/streamblocks-graalvm" ["l"="36.335,0.036"]
"amazon-science/Repoformer" ["l"="36.325,-0.056"]
"amazon-science/cocomic" ["l"="36.301,-0.057"]
"r2e-project/r2e" ["l"="36.434,-0.042"]
"R2E-Gym/R2E-Gym" ["l"="36.417,-0.033"]
"Sweetaroo/VulDetectBench" ["l"="36.271,-0.461"]
"rmusab/vul-llm-finetune" ["l"="36.285,-0.461"]
"ai4cloudops/SecLLMHolmes" ["l"="36.28,-0.437"]
"continuedev/what-llm-to-use" ["l"="36.41,-0.264"]
"continuedev/deploy-os-code-llm" ["l"="36.458,-0.295"]
"CognitionAI/devin-swebench-results" ["l"="36.499,-0.2"]
"SalesforceAIResearch/indict_code_gen" ["l"="36.336,-0.456"]
"Trinity-data-store/Trinity" ["l"="36.472,0.024"]
"MaoZiming/papers" ["l"="36.457,0.004"]
"OpenCoder-llm/OpenCoder-llm" ["l"="36.315,-0.198"]
"OpenCoder-llm/opc_data_filtering" ["l"="36.37,-0.232"]
"allenai/open-instruct" ["l"="37.202,-0.321"]
"GAIR-NLP/O1-Journey" ["l"="37.217,-0.435"]
"wasiahmad/Awesome-LLM-Synthetic-Data" ["l"="37.204,-0.365"]
"agentica-project/rllm" ["l"="37.18,-0.501"]
"multimodal-art-projection/MAP-NEO" ["l"="38.591,-0.555"]
"huggingface/smollm" ["l"="38.717,-0.386"]
"WecoAI/aideml" ["l"="37.378,-0.657"]
"zou-group/textgrad" ["l"="41.114,0.635"]
"trotsky1997/MathBlackBox" ["l"="37.3,-0.414"]
"xinyi-hou/LLM4SE_SLR" ["l"="36.351,-0.227"]
"LingmaTongyi/Lingma-SWE-GPT" ["l"="36.494,-0.076"]
"yingweima2022/SWE-Reasoner" ["l"="36.489,-0.095"]
"LingmaTongyi/Codev-Bench" ["l"="36.533,-0.061"]
"metauto-ai/agent-as-a-judge" ["l"="36.525,-0.105"]
"metauto-ai/GPTSwarm" ["l"="52.552,3.173"]
"danhper/bigcode-tools" ["l"="35.727,-0.376"]
"All-Hands-AI/openhands-resolver" ["l"="36.6,0.018"]
"All-Hands-AI/trajectory-visualizer" ["l"="36.594,-0.002"]
"All-Hands-AI/openhands-agent-monitor" ["l"="36.616,0.005"]
"PurCL/LLMSCAN" ["l"="36.375,-0.331"]
"commit-0/commit0" ["l"="36.438,0.012"]
"SWE-bench/SWE-smith" ["l"="36.423,-0.012"]
"Berkeley-NLP/Agent-Eval-Refine" ["l"="36.755,-1.382"]
"sail-sg/oat" ["l"="37.221,-0.416"]
"facebookresearch/MLGym" ["l"="36.394,-0.056"]
"NovaSky-AI/SkyRL" ["l"="37.333,-0.479"]
"TheAgentCompany/TheAgentCompany" ["l"="36.847,-1.46"]
"YifeiZhou02/ArCHer" ["l"="36.818,-1.364"]
"huhusmang/Awesome-LLMs-for-Vulnerability-Detection" ["l"="36.301,-0.49"]
"zysszy/GrammarCNN" ["l"="37.567,-1.779"]
"google-deepmind/card2code" ["l"="37.549,-1.764"]
"pcyin/NL2code" ["l"="37.557,-1.74"]
"SakiRinn/LLM4CVD" ["l"="36.271,-0.498"]
"code-rag-bench/code-rag-bench" ["l"="36.406,-0.084"]
"ScalingIntelligence/codemonkeys" ["l"="36.423,-0.13"]
"mariushobbhahn/SWEBench-verified-mini" ["l"="36.46,-0.176"]
"All-Hands-AI/openhands-aci" ["l"="36.607,-0.013"]
"openai/mle-bench" ["l"="36.965,-1.378"]
"openai/preparedness" ["l"="37.255,-0.422"]
"multi-swe-bench/multi-swe-bench" ["l"="36.451,-0.103"]
"NovaSky-AI/SkyThought" ["l"="37.141,-0.55"]
"ValveSoftware/source-sdk-2013" ["l"="-9.496,1.964"]
"augmentcode/augment-swebench-agent" ["l"="36.461,-0.035"]
"gersteinlab/LocAgent" ["l"="36.515,0.014"]
"raizamartin/gemini-code" ["l"="42.136,2.358"]
"KodCode-AI/kodcode" ["l"="36.348,-0.033"]
"HKUNLP/critic-rl" ["l"="37.385,-0.494"]
"RUCAIBox/R1-Searcher" ["l"="37.273,-0.55"]
"kanishkg/cognitive-behaviors" ["l"="37.317,-0.54"]
"facebookresearch/sweet_rl" ["l"="36.396,-0.016"]
"sanjibanc/agent_prm" ["l"="36.41,0.025"]
"All-Hands-AI/open-operator" ["l"="36.565,-0.016"]
"src-d/vecino" ["l"="35.749,-0.536"]
"src-d/ml-core" ["l"="35.738,-0.516"]
"DigiRL-agent/digirl" ["l"="36.735,-1.481"]
"DanielLin1986/RepresentationsLearningFromMulti_domain" ["l"="36.144,-0.519"]
}