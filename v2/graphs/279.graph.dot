digraph G {
"ZQPei/deep_sort_pytorch" -> "nwojke/deep_sort"
"ZQPei/deep_sort_pytorch" -> "Zhongdao/Towards-Realtime-MOT"
"ZQPei/deep_sort_pytorch" -> "mikel-brostrom/boxmot"
"ZQPei/deep_sort_pytorch" -> "ifzhang/FairMOT"
"ZQPei/deep_sort_pytorch" -> "abewley/sort"
"ZQPei/deep_sort_pytorch" -> "Qidian213/deep_sort_yolov3"
"ZQPei/deep_sort_pytorch" -> "xingyizhou/CenterTrack"
"ZQPei/deep_sort_pytorch" -> "JDAI-CV/fast-reid" ["e"=1]
"ZQPei/deep_sort_pytorch" -> "SpyderXu/multi-object-tracking-paper-list"
"ZQPei/deep_sort_pytorch" -> "KaiyangZhou/deep-person-reid" ["e"=1]
"ZQPei/deep_sort_pytorch" -> "ifzhang/ByteTrack"
"ZQPei/deep_sort_pytorch" -> "cheind/py-motmetrics"
"ZQPei/deep_sort_pytorch" -> "yehengchen/Object-Detection-and-Tracking"
"ZQPei/deep_sort_pytorch" -> "layumi/Person_reID_baseline_pytorch" ["e"=1]
"ZQPei/deep_sort_pytorch" -> "xingyizhou/CenterNet" ["e"=1]
"arunponnusamy/cvlib" -> "augmentedstartups/AS-One" ["e"=1]
"BIGBALLON/PyTorch-CPP" -> "weixu000/libtorch-yolov3-deepsort" ["e"=1]
"STVIR/pysot" -> "Zhongdao/Towards-Realtime-MOT" ["e"=1]
"STVIR/pysot" -> "SpyderXu/multi-object-tracking-paper-list" ["e"=1]
"STVIR/pysot" -> "ifzhang/FairMOT" ["e"=1]
"xinshuoweng/AB3DMOT" -> "xingyizhou/CenterTrack" ["e"=1]
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "shreyapamecha/Speed-Estimation-of-Vehicles-with-Plate-Detection"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "wsh122333/Multi-type_vehicles_flow_statistics"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "guptavasu1213/Yolo-Vehicle-Counter"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "BenBenee/Traffic-Counting-with-YOLOv3-and-SORT"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "HodenX/python-traffic-counter-with-yolo-and-sort"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "ronitsinha/speed-detector"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "kraten/vehicle-speed-check"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "ahmetozlu/vehicle_counting_tensorflow"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "tugot17/YOLO-Object-Counting-API"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "swhan0329/vehicle_speed_estimation"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "bamwani/vehicle-counting-using-python-yolo"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "NVIDIAAICITYCHALLENGE/2018AICITY_Maryland"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "nicholaskajoh/ivy"
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" -> "fenil29/vehicle-speed-detection"
"Smorodov/Multitarget-tracker" -> "abewley/sort"
"Smorodov/Multitarget-tracker" -> "SpyderXu/multi-object-tracking-paper-list"
"Smorodov/Multitarget-tracker" -> "Zhongdao/Towards-Realtime-MOT"
"Smorodov/Multitarget-tracker" -> "nwojke/deep_sort"
"Smorodov/Multitarget-tracker" -> "JunshengFu/tracking-with-Extended-Kalman-Filter" ["e"=1]
"Smorodov/Multitarget-tracker" -> "srianant/kalman_filter_multi_object_tracking"
"Smorodov/Multitarget-tracker" -> "mcximing/sort-cpp"
"Smorodov/Multitarget-tracker" -> "foolwood/benchmark_results" ["e"=1]
"Smorodov/Multitarget-tracker" -> "Qidian213/deep_sort_yolov3"
"Smorodov/Multitarget-tracker" -> "joaofaro/KCFcpp" ["e"=1]
"Smorodov/Multitarget-tracker" -> "xingyizhou/CenterTrack"
"Smorodov/Multitarget-tracker" -> "shaoshengsong/DeepSORT"
"Smorodov/Multitarget-tracker" -> "ifzhang/FairMOT"
"Smorodov/Multitarget-tracker" -> "STVIR/pysot" ["e"=1]
"Smorodov/Multitarget-tracker" -> "abhineet123/Deep-Learning-for-Tracking-and-Detection"
"opendatacam/opendatacam" -> "bochinski/iou-tracker" ["e"=1]
"opendatacam/opendatacam" -> "LeonLok/Multi-Camera-Live-Object-Tracking" ["e"=1]
"opendatacam/opendatacam" -> "jeffbass/imagezmq" ["e"=1]
"opendatacam/opendatacam" -> "theAIGuysCode/yolov4-deepsort" ["e"=1]
"opendatacam/opendatacam" -> "ahmetozlu/tensorflow_object_counting_api" ["e"=1]
"cw1204772/AIC2018_iamai" -> "AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification"
"cw1204772/AIC2018_iamai" -> "Jakel21/vehicle-ReID-baseline"
"cw1204772/AIC2018_iamai" -> "knwng/awesome-vehicle-re-identification"
"cw1204772/AIC2018_iamai" -> "Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View"
"cw1204772/AIC2018_iamai" -> "lxc86739795/vehiclereid_baseline"
"cw1204772/AIC2018_iamai" -> "saghiralfasly/VFL-Vehicle-Re-Id"
"cw1204772/AIC2018_iamai" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"cw1204772/AIC2018_iamai" -> "strawlab/flydra"
"YunYang1994/tensorflow-yolov3" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"hoanglehaithanh/Traffic-Sign-Detection" -> "ZhouJiaHuan/traffic-sign-detection" ["e"=1]
"hoanglehaithanh/Traffic-Sign-Detection" -> "anmspro/Traffic-Signal-Violation-Detection-System" ["e"=1]
"walktree/libtorch-yolov3" -> "weixu000/libtorch-yolov3-deepsort" ["e"=1]
"huihut/OpenCV-MinGW-Build" -> "shaoshengsong/DeepSORT" ["e"=1]
"layumi/Person_reID_baseline_pytorch" -> "Zhongdao/Towards-Realtime-MOT" ["e"=1]
"layumi/Person_reID_baseline_pytorch" -> "nwojke/deep_sort" ["e"=1]
"layumi/Person_reID_baseline_pytorch" -> "ZQPei/deep_sort_pytorch" ["e"=1]
"JDAI-CV/fast-reid" -> "ifzhang/FairMOT" ["e"=1]
"JDAI-CV/fast-reid" -> "Zhongdao/Towards-Realtime-MOT" ["e"=1]
"JDAI-CV/fast-reid" -> "ZQPei/deep_sort_pytorch" ["e"=1]
"JDAI-CV/fast-reid" -> "ifzhang/ByteTrack" ["e"=1]
"JDAI-CV/fast-reid" -> "nwojke/deep_sort" ["e"=1]
"EscVM/OIDv4_ToolKit" -> "theAIGuysCode/OIDv4_ToolKit" ["e"=1]
"EscVM/OIDv4_ToolKit" -> "theAIGuysCode/tensorflow-yolov4-tflite" ["e"=1]
"ultralytics/JSON2YOLO" -> "NirAharon/BoT-SORT" ["e"=1]
"fuyi501/web-video-live" -> "WebPrague/PedestrianDetectionSystem" ["e"=1]
"rodrigob/barinova_pedestrians_detection" -> "chhshen/pedestrian-detection"
"rodrigob/barinova_pedestrians_detection" -> "Farious/PedestrianDetector"
"rodrigob/barinova_pedestrians_detection" -> "LevinJ/Pedestrian-Detection-Project"
"SpikeKing/keras-yolo3-detection" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"openvinotoolkit/open_model_zoo" -> "nwojke/deep_sort" ["e"=1]
"CharlesShang/DCNv2" -> "xingyizhou/CenterTrack" ["e"=1]
"andrewssobral/bgslibrary" -> "murari023/awesome-background-subtraction"
"andrewssobral/bgslibrary" -> "andrewssobral/lrslibrary"
"andrewssobral/bgslibrary" -> "foolwood/benchmark_results" ["e"=1]
"andrewssobral/bgslibrary" -> "andrewssobral/simple_vehicle_counting"
"andrewssobral/bgslibrary" -> "Smorodov/Multitarget-tracker"
"andrewssobral/bgslibrary" -> "upcAutoLang/BackgroundSplit-OpenCV"
"andrewssobral/bgslibrary" -> "SaoYan/bgsCNN"
"andrewssobral/bgslibrary" -> "Escheee/TBCF" ["e"=1]
"andrewssobral/bgslibrary" -> "joaofaro/KCFcpp" ["e"=1]
"andrewssobral/bgslibrary" -> "nwojke/deep_sort"
"andrewssobral/bgslibrary" -> "abewley/sort"
"andrewssobral/bgslibrary" -> "lim-anggun/FgSegNet_v2"
"andrewssobral/bgslibrary" -> "weiliu89/caffe" ["e"=1]
"andrewssobral/bgslibrary" -> "davheld/GOTURN" ["e"=1]
"andrewssobral/bgslibrary" -> "lim-anggun/FgSegNet"
"foolwood/SiamMask" -> "Zhongdao/Towards-Realtime-MOT" ["e"=1]
"foolwood/SiamMask" -> "SpyderXu/multi-object-tracking-paper-list" ["e"=1]
"foolwood/SiamMask" -> "nwojke/deep_sort" ["e"=1]
"foolwood/SiamMask" -> "ifzhang/FairMOT" ["e"=1]
"xingyizhou/CenterNet" -> "xingyizhou/CenterTrack" ["e"=1]
"xingyizhou/CenterNet" -> "ifzhang/FairMOT" ["e"=1]
"apoorvavinod/Real_time_Object_detection_and_tracking" -> "uoip/KCFpy" ["e"=1]
"apoorvavinod/Real_time_Object_detection_and_tracking" -> "fengyang95/pyCFTrackers" ["e"=1]
"apoorvavinod/Real_time_Object_detection_and_tracking" -> "ZidanMusk/experimenting-with-sort"
"apoorvavinod/Real_time_Object_detection_and_tracking" -> "mattzheng/keras-yolov3-KF-objectTracking"
"apoorvavinod/Real_time_Object_detection_and_tracking" -> "SpyderXu/ssd_sort"
"apoorvavinod/Real_time_Object_detection_and_tracking" -> "Qidian213/deep_sort_yolov3"
"apoorvavinod/Real_time_Object_detection_and_tracking" -> "uoip/KCFnb" ["e"=1]
"apoorvavinod/Real_time_Object_detection_and_tracking" -> "ambakick/Person-Detection-and-Tracking"
"apoorvavinod/Real_time_Object_detection_and_tracking" -> "songwsx/RFSong-7993"
"apoorvavinod/Real_time_Object_detection_and_tracking" -> "bochinski/iou-tracker"
"Qidian213/deep_sort_yolov3" -> "nwojke/deep_sort"
"Qidian213/deep_sort_yolov3" -> "nwojke/cosine_metric_learning"
"Qidian213/deep_sort_yolov3" -> "ZQPei/deep_sort_pytorch"
"Qidian213/deep_sort_yolov3" -> "abewley/sort"
"Qidian213/deep_sort_yolov3" -> "Zhongdao/Towards-Realtime-MOT"
"Qidian213/deep_sort_yolov3" -> "SpyderXu/multi-object-tracking-paper-list"
"Qidian213/deep_sort_yolov3" -> "yehengchen/Object-Detection-and-Tracking"
"Qidian213/deep_sort_yolov3" -> "longcw/MOTDT"
"Qidian213/deep_sort_yolov3" -> "obendidi/Tracking-with-darkflow"
"Qidian213/deep_sort_yolov3" -> "kimyoon-young/centerNet-deep-sort"
"Qidian213/deep_sort_yolov3" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"Qidian213/deep_sort_yolov3" -> "qqwweee/keras-yolo3" ["e"=1]
"Qidian213/deep_sort_yolov3" -> "bochinski/iou-tracker"
"Qidian213/deep_sort_yolov3" -> "foolwood/SiamMask" ["e"=1]
"Qidian213/deep_sort_yolov3" -> "ifzhang/FairMOT"
"visionml/pytracking" -> "open-mmlab/mmtracking" ["e"=1]
"bbaibowen/computer-vision" -> "bbaibowen/DeepLearning-500-questions"
"xinychen/transdim" -> "xinychen/Tensor4ML" ["e"=1]
"phil-bergmann/tracking_wo_bnw" -> "yihongXU/deepMOT"
"phil-bergmann/tracking_wo_bnw" -> "longcw/MOTDT"
"phil-bergmann/tracking_wo_bnw" -> "Zhongdao/Towards-Realtime-MOT"
"phil-bergmann/tracking_wo_bnw" -> "shijieS/SST"
"phil-bergmann/tracking_wo_bnw" -> "VisualComputingInstitute/TrackR-CNN"
"phil-bergmann/tracking_wo_bnw" -> "cheind/py-motmetrics"
"phil-bergmann/tracking_wo_bnw" -> "dvl-tum/mot_neural_solver"
"phil-bergmann/tracking_wo_bnw" -> "xingyizhou/CenterTrack"
"phil-bergmann/tracking_wo_bnw" -> "SpyderXu/multi-object-tracking-paper-list"
"phil-bergmann/tracking_wo_bnw" -> "bochinski/iou-tracker"
"phil-bergmann/tracking_wo_bnw" -> "ifzhang/FairMOT"
"phil-bergmann/tracking_wo_bnw" -> "pjl1995/CTracker"
"phil-bergmann/tracking_wo_bnw" -> "huanglianghua/mot-papers"
"phil-bergmann/tracking_wo_bnw" -> "nightmaredimple/libmot"
"phil-bergmann/tracking_wo_bnw" -> "VisualComputingInstitute/mots_tools"
"shaoshengsong/DeepSORT" -> "mcximing/sort-cpp"
"shaoshengsong/DeepSORT" -> "RichardoMrMu/yolov5-deepsort-tensorrt" ["e"=1]
"shaoshengsong/DeepSORT" -> "weixu000/libtorch-yolov3-deepsort"
"shaoshengsong/DeepSORT" -> "ZQPei/deep_sort_pytorch"
"shaoshengsong/DeepSORT" -> "ifzhang/ByteTrack"
"shaoshengsong/DeepSORT" -> "Zhou-sx/yolov5_Deepsort_rknn" ["e"=1]
"shaoshengsong/DeepSORT" -> "hpc203/bytetrack-opencv-onnxruntime" ["e"=1]
"shaoshengsong/DeepSORT" -> "Sharpiless/Yolov5-Deepsort"
"shaoshengsong/DeepSORT" -> "oylz/DS"
"shaoshengsong/DeepSORT" -> "Smorodov/Multitarget-tracker"
"shaoshengsong/DeepSORT" -> "shouxieai/tensorRT_Pro" ["e"=1]
"shaoshengsong/DeepSORT" -> "Zhongdao/Towards-Realtime-MOT"
"shaoshengsong/DeepSORT" -> "Sharpiless/Yolov5-deepsort-inference"
"shaoshengsong/DeepSORT" -> "triple-Mu/YOLOv8-TensorRT" ["e"=1]
"shaoshengsong/DeepSORT" -> "nwojke/deep_sort"
"waitingfordark/four_flower" -> "CHNicelee/HOG_SVM" ["e"=1]
"xinlianghu/svm" -> "CHNicelee/HOG_SVM" ["e"=1]
"yehengchen/Object-Detection-and-Tracking" -> "Qidian213/deep_sort_yolov3"
"yehengchen/Object-Detection-and-Tracking" -> "Zhongdao/Towards-Realtime-MOT"
"yehengchen/Object-Detection-and-Tracking" -> "ZQPei/deep_sort_pytorch"
"yehengchen/Object-Detection-and-Tracking" -> "nwojke/deep_sort"
"yehengchen/Object-Detection-and-Tracking" -> "theAIGuysCode/yolov4-deepsort"
"yehengchen/Object-Detection-and-Tracking" -> "ifzhang/FairMOT"
"yehengchen/Object-Detection-and-Tracking" -> "SpyderXu/multi-object-tracking-paper-list"
"yehengchen/Object-Detection-and-Tracking" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"yehengchen/Object-Detection-and-Tracking" -> "xingyizhou/CenterTrack"
"yehengchen/Object-Detection-and-Tracking" -> "LeonLok/Deep-SORT-YOLOv4"
"yehengchen/Object-Detection-and-Tracking" -> "mikel-brostrom/boxmot"
"yehengchen/Object-Detection-and-Tracking" -> "abewley/sort"
"yehengchen/Object-Detection-and-Tracking" -> "nwojke/cosine_metric_learning"
"yehengchen/Object-Detection-and-Tracking" -> "theAIGuysCode/yolov3_deepsort"
"yehengchen/Object-Detection-and-Tracking" -> "abhineet123/Deep-Learning-for-Tracking-and-Detection"
"CHNicelee/HOG_SVM" -> "huangchuchuan/SVM-HOG-images-classifier"
"CHNicelee/HOG_SVM" -> "subicWang/HOG-SVM-classifer"
"CHNicelee/HOG_SVM" -> "BUPTLdy/human-detector"
"CHNicelee/HOG_SVM" -> "Abhishek-Arora/Image-Classification-Using-SVM" ["e"=1]
"CHNicelee/HOG_SVM" -> "hunting777/hog-svm"
"CHNicelee/HOG_SVM" -> "ZhouJiaHuan/traffic-sign-detection"
"cfotache/pytorch_objectdetecttrack" -> "cfotache/pytorch_custom_yolo_training"
"cfotache/pytorch_objectdetecttrack" -> "abewley/sort"
"cfotache/pytorch_objectdetecttrack" -> "yehengchen/Object-Detection-and-Tracking"
"cfotache/pytorch_objectdetecttrack" -> "Qidian213/deep_sort_yolov3"
"cfotache/pytorch_objectdetecttrack" -> "nwojke/cosine_metric_learning"
"cfotache/pytorch_objectdetecttrack" -> "IBM/powerai-counting-cars"
"cfotache/pytorch_objectdetecttrack" -> "abhyantrika/nanonets_object_tracking"
"cfotache/pytorch_objectdetecttrack" -> "ZQPei/deep_sort_pytorch"
"cfotache/pytorch_objectdetecttrack" -> "Zhongdao/Towards-Realtime-MOT"
"cfotache/pytorch_objectdetecttrack" -> "theAIGuysCode/yolov3_deepsort"
"cfotache/pytorch_objectdetecttrack" -> "emasterclassacademy/Single-Multiple-Custom-Object-Detection-and-Tracking"
"cfotache/pytorch_objectdetecttrack" -> "SpyderXu/multi-object-tracking-paper-list"
"cfotache/pytorch_objectdetecttrack" -> "wsh122333/Multi-type_vehicles_flow_statistics"
"cfotache/pytorch_objectdetecttrack" -> "ayooshkathuria/pytorch-yolo-v3" ["e"=1]
"cfotache/pytorch_objectdetecttrack" -> "Feynman27/pytorch-detect-to-track" ["e"=1]
"yasenh/sort-cpp" -> "mcximing/sort-cpp"
"yasenh/sort-cpp" -> "oliverxa/yolov3-sort-cpp"
"yasenh/sort-cpp" -> "anhducle98/mtcnn-light-with-tracking"
"srianant/kalman_filter_multi_object_tracking" -> "Smorodov/Multitarget-tracker"
"srianant/kalman_filter_multi_object_tracking" -> "mattzheng/keras-yolov3-KF-objectTracking"
"srianant/kalman_filter_multi_object_tracking" -> "ZidanMusk/experimenting-with-sort"
"srianant/kalman_filter_multi_object_tracking" -> "mabhisharma/Multi-Object-Tracking-with-Kalman-Filter"
"srianant/kalman_filter_multi_object_tracking" -> "SpyderXu/multi-object-tracking-paper-list"
"srianant/kalman_filter_multi_object_tracking" -> "bochinski/iou-tracker"
"srianant/kalman_filter_multi_object_tracking" -> "shijieS/SST"
"srianant/kalman_filter_multi_object_tracking" -> "JunshengFu/tracking-with-Extended-Kalman-Filter" ["e"=1]
"srianant/kalman_filter_multi_object_tracking" -> "abewley/sort"
"srianant/kalman_filter_multi_object_tracking" -> "cheind/py-motmetrics"
"srianant/kalman_filter_multi_object_tracking" -> "Qidian213/deep_sort_yolov3"
"srianant/kalman_filter_multi_object_tracking" -> "longcw/MOTDT"
"srianant/kalman_filter_multi_object_tracking" -> "kcg2015/Vehicle-Detection-and-Tracking"
"srianant/kalman_filter_multi_object_tracking" -> "phil-bergmann/tracking_wo_bnw"
"srianant/kalman_filter_multi_object_tracking" -> "samuelmurray/tracking-by-detection"
"rahatzamancse/Traffic-Rules-Violation-Detection" -> "rohit9934/Traffic-Rules-Violation-detection-system"
"rahatzamancse/Traffic-Rules-Violation-Detection" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System"
"rahatzamancse/Traffic-Rules-Violation-Detection" -> "anmspro/Traffic-Signal-Violation-Detection-System"
"rahatzamancse/Traffic-Rules-Violation-Detection" -> "sakibreza/Traffic-Rules-Violation-Detection-System"
"rahatzamancse/Traffic-Rules-Violation-Detection" -> "ilhamfzri/traffic-violation-detection"
"rahatzamancse/Traffic-Rules-Violation-Detection" -> "AhmadYahya97/Fully-Automated-red-light-Violation-Detection"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "ahmetozlu/tensorflow_object_counting_api" ["e"=1]
"ahmetozlu/tensorflow_object_counting_api" -> "ahmetozlu/vehicle_counting_tensorflow"
"ahmetozlu/tensorflow_object_counting_api" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"ahmetozlu/tensorflow_object_counting_api" -> "nicholaskajoh/ivy"
"ahmetozlu/tensorflow_object_counting_api" -> "kcg2015/Vehicle-Detection-and-Tracking"
"ahmetozlu/tensorflow_object_counting_api" -> "tugot17/YOLO-Object-Counting-API"
"ahmetozlu/tensorflow_object_counting_api" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System"
"ahmetozlu/tensorflow_object_counting_api" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"ahmetozlu/tensorflow_object_counting_api" -> "LeonLok/Deep-SORT-YOLOv4"
"ahmetozlu/tensorflow_object_counting_api" -> "theAIGuysCode/yolov4-deepsort"
"ahmetozlu/tensorflow_object_counting_api" -> "yehengchen/Object-Detection-and-Tracking"
"ahmetozlu/tensorflow_object_counting_api" -> "TannerGilbert/Tensorflow-2-Object-Counting"
"ahmetozlu/tensorflow_object_counting_api" -> "EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" ["e"=1]
"ahmetozlu/tensorflow_object_counting_api" -> "Qidian213/deep_sort_yolov3"
"ahmetozlu/tensorflow_object_counting_api" -> "theAIGuysCode/yolov4-custom-functions"
"ahmetozlu/tensorflow_object_counting_api" -> "opendatacam/opendatacam" ["e"=1]
"KaiyangZhou/deep-person-reid" -> "nwojke/deep_sort" ["e"=1]
"KaiyangZhou/deep-person-reid" -> "Zhongdao/Towards-Realtime-MOT" ["e"=1]
"KaiyangZhou/deep-person-reid" -> "ifzhang/FairMOT" ["e"=1]
"KaiyangZhou/deep-person-reid" -> "mikel-brostrom/boxmot" ["e"=1]
"KaiyangZhou/deep-person-reid" -> "ZQPei/deep_sort_pytorch" ["e"=1]
"madhawav/YOLO3-4-Py" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"mystic123/tensorflow-yolo-v3" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"VisualComputingInstitute/TrackR-CNN" -> "VisualComputingInstitute/mots_tools"
"VisualComputingInstitute/TrackR-CNN" -> "shijieS/SST"
"VisualComputingInstitute/TrackR-CNN" -> "yihongXU/deepMOT"
"VisualComputingInstitute/TrackR-CNN" -> "phil-bergmann/tracking_wo_bnw"
"VisualComputingInstitute/TrackR-CNN" -> "tobiasfshr/MOTSFusion"
"VisualComputingInstitute/TrackR-CNN" -> "longcw/MOTDT"
"VisualComputingInstitute/TrackR-CNN" -> "detectRecog/PointTrack"
"VisualComputingInstitute/TrackR-CNN" -> "SpyderXu/multi-object-tracking-paper-list"
"VisualComputingInstitute/TrackR-CNN" -> "jizhu1023/DMAN_MOT"
"VisualComputingInstitute/TrackR-CNN" -> "youtubevos/MaskTrackRCNN" ["e"=1]
"VisualComputingInstitute/TrackR-CNN" -> "Zhongdao/Towards-Realtime-MOT"
"VisualComputingInstitute/TrackR-CNN" -> "cheind/py-motmetrics"
"VisualComputingInstitute/TrackR-CNN" -> "huanglianghua/mot-papers"
"VisualComputingInstitute/TrackR-CNN" -> "kimyoon-young/centerNet-deep-sort"
"VisualComputingInstitute/TrackR-CNN" -> "JialianW/TraDeS"
"L1aoXingyu/Deep-Learning-Project-Template" -> "Zhongdao/Towards-Realtime-MOT" ["e"=1]
"Cartucho/OpenLabeling" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "ahmetozlu/tensorflow_object_counting_api" ["e"=1]
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "jeffbass/imagezmq" ["e"=1]
"karolmajek/Mask_RCNN" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"IntelligentRoboticsLabs/gb_visual_detection_3d" -> "IntelligentRoboticsLabs/yolact_ros_3d"
"yihongXU/deepMOT" -> "shijieS/SST"
"yihongXU/deepMOT" -> "phil-bergmann/tracking_wo_bnw"
"yihongXU/deepMOT" -> "longcw/MOTDT"
"yihongXU/deepMOT" -> "VisualComputingInstitute/TrackR-CNN"
"yihongXU/deepMOT" -> "VisualComputingInstitute/mots_tools"
"yihongXU/deepMOT" -> "cheind/py-motmetrics"
"yihongXU/deepMOT" -> "dvl-tum/mot_neural_solver"
"yihongXU/deepMOT" -> "SpyderXu/multi-object-tracking-paper-list"
"yihongXU/deepMOT" -> "selflein/GraphNN-Multi-Object-Tracking"
"yihongXU/deepMOT" -> "Zhongdao/Towards-Realtime-MOT"
"yihongXU/deepMOT" -> "jizhu1023/DMAN_MOT"
"yihongXU/deepMOT" -> "nightmaredimple/libmot"
"yihongXU/deepMOT" -> "pjl1995/CTracker"
"yihongXU/deepMOT" -> "ZwwWayne/mmMOT"
"yihongXU/deepMOT" -> "huanglianghua/mot-papers"
"creotiv/object_detection_projects" -> "andrewssobral/simple_vehicle_counting"
"creotiv/object_detection_projects" -> "xiaochus/Vehicle_Tracking"
"creotiv/object_detection_projects" -> "alex-drake/OpenCV-Traffic-Counter"
"creotiv/object_detection_projects" -> "ahmetozlu/vehicle_counting_tensorflow"
"creotiv/object_detection_projects" -> "IBM/powerai-counting-cars"
"creotiv/object_detection_projects" -> "nicholaskajoh/ivy"
"tatsuyah/vehicle-detection" -> "JunshengFu/vehicle-detection"
"tatsuyah/vehicle-detection" -> "xslittlegrass/CarND-Vehicle-Detection"
"tatsuyah/vehicle-detection" -> "astorfi/CNTK-World"
"tatsuyah/vehicle-detection" -> "udacity/CarND-Vehicle-Detection" ["e"=1]
"tatsuyah/vehicle-detection" -> "NikolasEnt/Vehicle-Detection-and-Tracking"
"tatsuyah/vehicle-detection" -> "balancap/SDC-Vehicle-Detection"
"tatsuyah/vehicle-detection" -> "andrewssobral/vehicle_detection_haarcascades"
"tatsuyah/vehicle-detection" -> "astorfi/TensorFlow-World-Resources" ["e"=1]
"tatsuyah/vehicle-detection" -> "CaptainEven/Vehicle-Car-detection-and-multilabel-classification" ["e"=1]
"tatsuyah/vehicle-detection" -> "kcg2015/Vehicle-Detection-and-Tracking"
"tatsuyah/vehicle-detection" -> "chenjoya/Vehicle_Detection_Recognition"
"tatsuyah/vehicle-detection" -> "ahmetozlu/vehicle_counting_tensorflow"
"tatsuyah/vehicle-detection" -> "galenballew/SDC-Lane-and-Vehicle-Detection-Tracking" ["e"=1]
"tatsuyah/vehicle-detection" -> "ufoym/deepo" ["e"=1]
"tatsuyah/vehicle-detection" -> "windowsub0406/Vehicle-Detection-YOLO-ver"
"oylz/DS" -> "bitzy/DeepSort"
"oylz/DS" -> "mcximing/sort-cpp"
"oylz/DS" -> "nwojke/cosine_metric_learning"
"oylz/DS" -> "nicewsyly/ECO" ["e"=1]
"oylz/DS" -> "shaoshengsong/DeepSORT"
"oylz/DS" -> "samuelmurray/tracking-by-detection"
"oylz/DS" -> "vojirt/kcf" ["e"=1]
"Yonv1943/Python" -> "LeonLok/Multi-Camera-Live-Object-Tracking" ["e"=1]
"gaochen315/panoramicRPCA" -> "xqpinitial/Robust-PCA-RPCA"
"Linzaer/Face-Track-Detect-Extract" -> "ZidanMusk/experimenting-with-sort" ["e"=1]
"antonilo/unsupervised_detection" -> "thomasthachil/moving-object-detection"
"antonilo/unsupervised_detection" -> "tfzhou/MATNet" ["e"=1]
"antonilo/unsupervised_detection" -> "lav-kush/MotionRec"
"antonilo/unsupervised_detection" -> "lim-anggun/FgSegNet_v2"
"antonilo/unsupervised_detection" -> "vcg-uvic/fastMCD" ["e"=1]
"antonilo/unsupervised_detection" -> "charigyang/motiongrouping" ["e"=1]
"antonilo/unsupervised_detection" -> "achalddave/segment-any-moving" ["e"=1]
"antonilo/unsupervised_detection" -> "visiontao/uovos"
"antonilo/unsupervised_detection" -> "murari023/awesome-background-subtraction"
"antonilo/unsupervised_detection" -> "rozumden/FMODetect" ["e"=1]
"antonilo/unsupervised_detection" -> "zhimingluo/MovingObjectSegmentation"
"antonilo/unsupervised_detection" -> "carrierlxk/COSNet" ["e"=1]
"antonilo/unsupervised_detection" -> "redbug312/study-of-block-based-uav-object-detection"
"nwojke/cosine_metric_learning" -> "Qidian213/deep_sort_yolov3"
"nwojke/cosine_metric_learning" -> "nwojke/deep_sort"
"nwojke/cosine_metric_learning" -> "longcw/MOTDT"
"nwojke/cosine_metric_learning" -> "bochinski/iou-tracker"
"nwojke/cosine_metric_learning" -> "ZQPei/deep_sort_pytorch"
"nwojke/cosine_metric_learning" -> "kimyoon-young/centerNet-deep-sort"
"nwojke/cosine_metric_learning" -> "obendidi/Tracking-with-darkflow"
"nwojke/cosine_metric_learning" -> "cheind/py-motmetrics"
"nwojke/cosine_metric_learning" -> "abewley/sort"
"nwojke/cosine_metric_learning" -> "Zhongdao/Towards-Realtime-MOT"
"nwojke/cosine_metric_learning" -> "SpyderXu/multi-object-tracking-paper-list"
"nwojke/cosine_metric_learning" -> "oylz/DS"
"nwojke/cosine_metric_learning" -> "phil-bergmann/tracking_wo_bnw"
"nwojke/cosine_metric_learning" -> "shijieS/SST"
"nwojke/cosine_metric_learning" -> "abhyantrika/nanonets_object_tracking"
"CaptainEven/Vehicle-Car-detection-and-multilabel-classification" -> "CaptainEven/RepNet-MDNet-VehicleReID" ["e"=1]
"CaptainEven/Vehicle-Car-detection-and-multilabel-classification" -> "JunshengFu/vehicle-detection" ["e"=1]
"CaptainEven/Vehicle-Car-detection-and-multilabel-classification" -> "knwng/awesome-vehicle-re-identification" ["e"=1]
"CaptainEven/Vehicle-Car-detection-and-multilabel-classification" -> "layumi/AICIty-reID-2020" ["e"=1]
"layumi/Vehicle_reID-Collection" -> "layumi/AICIty-reID-2020"
"layumi/Vehicle_reID-Collection" -> "JDAI-CV/VeRidataset"
"layumi/Vehicle_reID-Collection" -> "knwng/awesome-vehicle-re-identification"
"layumi/Vehicle_reID-Collection" -> "bismex/Awesome-vehicle-re-identification"
"layumi/Vehicle_reID-Collection" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"layumi/Vehicle_reID-Collection" -> "Jakel21/vehicle-ReID-baseline"
"layumi/Vehicle_reID-Collection" -> "PKU-IMRE/VERI-Wild"
"layumi/Vehicle_reID-Collection" -> "silverbulletmdc/PVEN"
"layumi/Vehicle_reID-Collection" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"layumi/Vehicle_reID-Collection" -> "cybercore-co-ltd/track2_aicity_2021"
"layumi/Vehicle_reID-Collection" -> "Zhongdao/VehicleReIDKeyPointData"
"layumi/Vehicle_reID-Collection" -> "damo-cv/TransReID" ["e"=1]
"layumi/Vehicle_reID-Collection" -> "yorkeyao/VehicleX"
"layumi/Vehicle_reID-Collection" -> "Xiangyu-CAS/AICity2020-VOC-ReID"
"layumi/Vehicle_reID-Collection" -> "lxc86739795/vehiclereid_baseline"
"wizyoung/YOLOv3_TensorFlow" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"liu-xb/RAM" -> "GeoTrouvetout/Vehicle_ReID"
"liu-xb/RAM" -> "yanbai1993/Embedding_GAN"
"PKU-IMRE/VERI-Wild" -> "JDAI-CV/VeRidataset"
"PKU-IMRE/VERI-Wild" -> "Jakel21/vehicle-ReID-baseline"
"PKU-IMRE/VERI-Wild" -> "knwng/awesome-vehicle-re-identification"
"PKU-IMRE/VERI-Wild" -> "Zhongdao/VehicleReIDKeyPointData"
"PKU-IMRE/VERI-Wild" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"PKU-IMRE/VERI-Wild" -> "layumi/Vehicle_reID-Collection"
"PKU-IMRE/VERI-Wild" -> "bismex/Awesome-vehicle-re-identification"
"PKU-IMRE/VERI-Wild" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation"
"PKU-IMRE/VERI-Wild" -> "yorkeyao/VehicleX"
"PKU-IMRE/VERI-Wild" -> "silverbulletmdc/PVEN"
"PKU-IMRE/VERI-Wild" -> "DTennant/reid_baseline_with_syncbn"
"PKU-IMRE/VERI-Wild" -> "michuanhaohao/AICITY2021_Track2_DMT"
"PKU-IMRE/VERI-Wild" -> "layumi/AICIty-reID-2020"
"PKU-IMRE/VERI-Wild" -> "lxc86739795/vehiclereid_baseline"
"PKU-IMRE/VERI-Wild" -> "NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams"
"ambakick/Person-Detection-and-Tracking" -> "apoorvavinod/Real_time_Object_detection_and_tracking"
"ambakick/Person-Detection-and-Tracking" -> "SpyderXu/ssd_sort"
"ambakick/Person-Detection-and-Tracking" -> "ITCoders/Human-detection-and-Tracking"
"ambakick/Person-Detection-and-Tracking" -> "ZidanMusk/experimenting-with-sort"
"SpyderXu/multi-object-tracking-paper-list" -> "Zhongdao/Towards-Realtime-MOT"
"SpyderXu/multi-object-tracking-paper-list" -> "foolwood/benchmark_results" ["e"=1]
"SpyderXu/multi-object-tracking-paper-list" -> "longcw/MOTDT"
"SpyderXu/multi-object-tracking-paper-list" -> "shijieS/SST"
"SpyderXu/multi-object-tracking-paper-list" -> "cheind/py-motmetrics"
"SpyderXu/multi-object-tracking-paper-list" -> "phil-bergmann/tracking_wo_bnw"
"SpyderXu/multi-object-tracking-paper-list" -> "nwojke/deep_sort"
"SpyderXu/multi-object-tracking-paper-list" -> "xingyizhou/CenterTrack"
"SpyderXu/multi-object-tracking-paper-list" -> "ifzhang/FairMOT"
"SpyderXu/multi-object-tracking-paper-list" -> "yihongXU/deepMOT"
"SpyderXu/multi-object-tracking-paper-list" -> "foolwood/SiamMask" ["e"=1]
"SpyderXu/multi-object-tracking-paper-list" -> "STVIR/pysot" ["e"=1]
"SpyderXu/multi-object-tracking-paper-list" -> "foolwood/DaSiamRPN" ["e"=1]
"SpyderXu/multi-object-tracking-paper-list" -> "Qidian213/deep_sort_yolov3"
"SpyderXu/multi-object-tracking-paper-list" -> "abhineet123/Deep-Learning-for-Tracking-and-Detection"
"AntonMu/TrainYourOwnYOLO" -> "theAIGuysCode/tensorflow-yolov4-tflite" ["e"=1]
"AntonMu/TrainYourOwnYOLO" -> "theAIGuysCode/YOLOv4-Cloud-Tutorial" ["e"=1]
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "rahatzamancse/Traffic-Rules-Violation-Detection"
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "anmspro/Traffic-Signal-Violation-Detection-System"
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "apoorva-dave/LicensePlateDetector" ["e"=1]
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "rohit9934/Traffic-Rules-Violation-detection-system"
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "ahmetozlu/vehicle_counting_tensorflow"
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "shreyapamecha/Speed-Estimation-of-Vehicles-with-Plate-Detection"
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "Dharun/Tensorflow-License-Plate-Detection" ["e"=1]
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "longphungtuan94/ALPR_System" ["e"=1]
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "guptavasu1213/Yolo-Vehicle-Counter"
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "kraten/vehicle-speed-check"
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "alitourani/yolo-license-plate-detection" ["e"=1]
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" -> "wsh122333/Multi-type_vehicles_flow_statistics"
"OPHoperHPO/image-background-remove-tool" -> "susheelsk/image-background-removal" ["e"=1]
"OPHoperHPO/image-background-remove-tool" -> "eti-p-doray/unet-gan-matting" ["e"=1]
"kimyoon-young/centerNet-deep-sort" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"kimyoon-young/centerNet-deep-sort" -> "xingyizhou/CenterTrack"
"kimyoon-young/centerNet-deep-sort" -> "Zhongdao/Towards-Realtime-MOT"
"kimyoon-young/centerNet-deep-sort" -> "FateScript/CenterNet-better" ["e"=1]
"kimyoon-young/centerNet-deep-sort" -> "Qidian213/deep_sort_yolov3"
"kimyoon-young/centerNet-deep-sort" -> "yihongXU/deepMOT"
"kimyoon-young/centerNet-deep-sort" -> "VisualComputingInstitute/TrackR-CNN"
"kimyoon-young/centerNet-deep-sort" -> "ZQPei/deep_sort_pytorch"
"kimyoon-young/centerNet-deep-sort" -> "phil-bergmann/tracking_wo_bnw"
"kimyoon-young/centerNet-deep-sort" -> "nwojke/cosine_metric_learning"
"kimyoon-young/centerNet-deep-sort" -> "Duankaiwen/CenterNet" ["e"=1]
"kimyoon-young/centerNet-deep-sort" -> "shijieS/SST"
"kimyoon-young/centerNet-deep-sort" -> "SpyderXu/multi-object-tracking-paper-list"
"kimyoon-young/centerNet-deep-sort" -> "xingyizhou/CenterNet2" ["e"=1]
"kimyoon-young/centerNet-deep-sort" -> "pjl1995/CTracker"
"JunweiLiang/Object_Detection_Tracking" -> "samihormi/Multi-Camera-Person-Tracking-and-Re-Identification"
"JunweiLiang/Object_Detection_Tracking" -> "SurajDonthi/Multi-Camera-Person-Re-Identification"
"JunweiLiang/Object_Detection_Tracking" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet"
"JunweiLiang/Object_Detection_Tracking" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"JunweiLiang/Object_Detection_Tracking" -> "Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View"
"JunweiLiang/Object_Detection_Tracking" -> "google/next-prediction" ["e"=1]
"JunweiLiang/Object_Detection_Tracking" -> "GehenHe/TRACTA"
"JunweiLiang/Object_Detection_Tracking" -> "chengche6230/ReST"
"JunweiLiang/Object_Detection_Tracking" -> "cw1204772/AIC2018_iamai"
"JunweiLiang/Object_Detection_Tracking" -> "SherryJYC/paper-MTMC"
"JunweiLiang/Object_Detection_Tracking" -> "hou-yz/MVDet" ["e"=1]
"JunweiLiang/Object_Detection_Tracking" -> "nolanzzz/mtmct"
"JunweiLiang/Object_Detection_Tracking" -> "JunweiLiang/social-distancing-prediction"
"JunweiLiang/Object_Detection_Tracking" -> "LeonLok/Deep-SORT-YOLOv4"
"JunweiLiang/Object_Detection_Tracking" -> "GeekAlexis/FastMOT"
"ahmetozlu/vehicle_counting_tensorflow" -> "ahmetozlu/tensorflow_object_counting_api"
"ahmetozlu/vehicle_counting_tensorflow" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System"
"ahmetozlu/vehicle_counting_tensorflow" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"ahmetozlu/vehicle_counting_tensorflow" -> "JunshengFu/vehicle-detection"
"ahmetozlu/vehicle_counting_tensorflow" -> "kcg2015/Vehicle-Detection-and-Tracking"
"ahmetozlu/vehicle_counting_tensorflow" -> "andrewssobral/simple_vehicle_counting"
"ahmetozlu/vehicle_counting_tensorflow" -> "zhengthomastang/2018AICity_TeamUW"
"ahmetozlu/vehicle_counting_tensorflow" -> "nicholaskajoh/ivy"
"ahmetozlu/vehicle_counting_tensorflow" -> "kraten/vehicle-speed-check"
"ahmetozlu/vehicle_counting_tensorflow" -> "guptavasu1213/Yolo-Vehicle-Counter"
"ahmetozlu/vehicle_counting_tensorflow" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"ahmetozlu/vehicle_counting_tensorflow" -> "ahmetozlu/vehicle_counting"
"ahmetozlu/vehicle_counting_tensorflow" -> "CaptainEven/Vehicle-Car-detection-and-multilabel-classification" ["e"=1]
"ahmetozlu/vehicle_counting_tensorflow" -> "ahmetozlu/color_recognition"
"ahmetozlu/vehicle_counting_tensorflow" -> "guillelopez/python-traffic-counter-with-yolo-and-sort"
"ucbdrive/dla" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"julvo/reloading" -> "adipandas/multi-object-tracker" ["e"=1]
"quasarstream/python-ffmpeg-video-streaming" -> "jeffbass/imagezmq" ["e"=1]
"abhiTronix/vidgear" -> "jeffbass/imagezmq" ["e"=1]
"abhiTronix/vidgear" -> "tryolabs/norfair" ["e"=1]
"foamliu/Car-Recognition" -> "Helias/Car-Model-Recognition"
"foamliu/Car-Recognition" -> "faezetta/VMMRdb"
"foamliu/Car-Recognition" -> "kamwoh/Car-Model-Classification"
"foamliu/Car-Recognition" -> "michalgdak/car-recognition"
"foamliu/Car-Recognition" -> "neokt/car-damage-detective"
"foamliu/Car-Recognition" -> "iPhaeton/car_identification"
"foamliu/Car-Recognition" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"foamliu/Car-Recognition" -> "Dharun/Tensorflow-License-Plate-Detection" ["e"=1]
"jkjung-avt/tensorrt_demos" -> "GeekAlexis/FastMOT" ["e"=1]
"mrnugget/opencv-haar-classifier-training" -> "andrewssobral/vehicle_detection_haarcascades"
"mrnugget/opencv-haar-classifier-training" -> "sonots/tutorial-haartraining"
"mrnugget/opencv-haar-classifier-training" -> "JoakimSoderberg/imageclipper"
"mrnugget/opencv-haar-classifier-training" -> "wulfebw/mergevec"
"mrnugget/opencv-haar-classifier-training" -> "abhi-kumar/CAR-DETECTION"
"mrnugget/opencv-haar-classifier-training" -> "sherrardTr4129/Haar-Cascade-Classifiers"
"mrnugget/opencv-haar-classifier-training" -> "bikz05/object-detector"
"mrnugget/opencv-haar-classifier-training" -> "AlexeyAB/OpenCV-detection-models"
"mrnugget/opencv-haar-classifier-training" -> "andrewssobral/simple_vehicle_counting"
"mrnugget/opencv-haar-classifier-training" -> "mtschirs/js-objectdetect" ["e"=1]
"mrnugget/opencv-haar-classifier-training" -> "AdityaPai2398/Vehicle-And-Pedestrian-Detection-Using-Haar-Cascades"
"mrnugget/opencv-haar-classifier-training" -> "DaHoC/trainHOG"
"mrnugget/opencv-haar-classifier-training" -> "shantnu/Webcam-Face-Detect" ["e"=1]
"mrnugget/opencv-haar-classifier-training" -> "christopher5106/FastAnnotationTool" ["e"=1]
"mrnugget/opencv-haar-classifier-training" -> "shantnu/FaceDetect" ["e"=1]
"apoorva-dave/LicensePlateDetector" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System" ["e"=1]
"apoorva-dave/LicensePlateDetector" -> "shreyapamecha/Speed-Estimation-of-Vehicles-with-Plate-Detection" ["e"=1]
"bismex/Awesome-cross-modality-person-re-identification" -> "bismex/Awesome-vehicle-re-identification" ["e"=1]
"pascal1129/kaggle_airbus_ship_detection" -> "pascal1129/cv_notes" ["e"=1]
"bytefish/opencv" -> "mrnugget/opencv-haar-classifier-training" ["e"=1]
"bobo0810/PytorchNetHub" -> "bbaibowen/computer-vision" ["e"=1]
"Nirvan101/Person-Re-identification" -> "digitalbrain79/person-reid" ["e"=1]
"Nirvan101/Person-Re-identification" -> "manideep2510/CUHK03_dataset"
"Nirvan101/Person-Re-identification" -> "nikunjmshah/Person-Tracking-and-Re-ID"
"Nirvan101/Person-Re-identification" -> "SurajDonthi/Multi-Camera-Person-Re-Identification"
"Nirvan101/Person-Re-identification" -> "samihormi/Multi-Camera-Person-Tracking-and-Re-Identification"
"jeffbass/yin-yang-ranch" -> "jeffbass/imagenode"
"jeffbass/yin-yang-ranch" -> "jeffbass/imagehub"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "cw1204772/AIC2018_iamai"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "AlexXiao95/2018AICity_TeamUW"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "Jakel21/vehicle-ReID-baseline"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "knwng/awesome-vehicle-re-identification"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "saghiralfasly/VFL-Vehicle-Re-Id"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "VisualComputingInstitute/towards-reid-tracking"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "lxc86739795/vehiclereid_baseline"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "JDAI-CV/VeRidataset"
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" -> "zhengthomastang/2018AICity_TeamUW"
"DTennant/reid_baseline_with_syncbn" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"DTennant/reid_baseline_with_syncbn" -> "Jakel21/vehicle-ReID-baseline"
"DTennant/reid_baseline_with_syncbn" -> "Qidian213/Ranked_Person_ReID" ["e"=1]
"DTennant/reid_baseline_with_syncbn" -> "PKU-IMRE/VERI-Wild"
"DTennant/reid_baseline_with_syncbn" -> "heshuting555/NAIC_Person_ReID_DMT" ["e"=1]
"DTennant/reid_baseline_with_syncbn" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation"
"DTennant/reid_baseline_with_syncbn" -> "JDAI-CV/VeRidataset"
"DTennant/reid_baseline_with_syncbn" -> "lxc86739795/vehiclereid_baseline"
"DTennant/reid_baseline_with_syncbn" -> "whut2962575697/naic_reid"
"adipandas/multi-object-tracker" -> "wmuron/motpy"
"adipandas/multi-object-tracker" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"adipandas/multi-object-tracker" -> "bochinski/iou-tracker"
"adipandas/multi-object-tracker" -> "yihongXU/deepMOT"
"adipandas/multi-object-tracker" -> "Zhongdao/Towards-Realtime-MOT"
"adipandas/multi-object-tracker" -> "GeekAlexis/FastMOT"
"adipandas/multi-object-tracker" -> "ZidanMusk/experimenting-with-sort"
"adipandas/multi-object-tracker" -> "Smorodov/Multitarget-tracker"
"adipandas/multi-object-tracker" -> "adipandas/python-tutorial-codes"
"adipandas/multi-object-tracker" -> "JunweiLiang/Object_Detection_Tracking"
"adipandas/multi-object-tracker" -> "phil-bergmann/tracking_wo_bnw"
"adipandas/multi-object-tracker" -> "SpyderXu/multi-object-tracking-paper-list"
"adipandas/multi-object-tracker" -> "xingyizhou/CenterTrack"
"adipandas/multi-object-tracker" -> "abhyantrika/nanonets_object_tracking"
"adipandas/multi-object-tracker" -> "adipandas/SmallWorldNetCA"
"IBM/powerai-counting-cars" -> "jorgem0/traffic_counter"
"IBM/powerai-counting-cars" -> "nicholaskajoh/ivy"
"IBM/powerai-counting-cars" -> "emasterclassacademy/Single-Multiple-Custom-Object-Detection-and-Tracking"
"IBM/powerai-counting-cars" -> "cfotache/pytorch_objectdetecttrack"
"IBM/powerai-counting-cars" -> "amartya-k/vision"
"IBM/powerai-counting-cars" -> "augmentedstartups/YOLOv4-Tutorials"
"IBM/powerai-counting-cars" -> "ahmetozlu/vehicle_counting"
"IBM/powerai-counting-cars" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"IBM/powerai-counting-cars" -> "AdityaPai2398/Vehicle-And-Pedestrian-Detection-Using-Haar-Cascades"
"IBM/powerai-counting-cars" -> "IBM/powerai-vision-object-detection"
"IBM/powerai-counting-cars" -> "zhengthomastang/2018AICity_TeamUW"
"IBM/powerai-counting-cars" -> "kraten/vehicle-speed-check"
"shijieS/SST" -> "longcw/MOTDT"
"shijieS/SST" -> "yihongXU/deepMOT"
"shijieS/SST" -> "VisualComputingInstitute/TrackR-CNN"
"shijieS/SST" -> "phil-bergmann/tracking_wo_bnw"
"shijieS/SST" -> "SpyderXu/multi-object-tracking-paper-list"
"shijieS/SST" -> "huanglianghua/mot-papers"
"shijieS/SST" -> "bochinski/iou-tracker"
"shijieS/SST" -> "pjl1995/CTracker"
"shijieS/SST" -> "jizhu1023/DMAN_MOT"
"shijieS/SST" -> "BoPang1996/TubeTK"
"shijieS/SST" -> "cheind/py-motmetrics"
"shijieS/SST" -> "VisualComputingInstitute/mots_tools"
"shijieS/SST" -> "nightmaredimple/libmot"
"shijieS/SST" -> "Zhongdao/Towards-Realtime-MOT"
"shijieS/SST" -> "xiaobai1217/MBMD" ["e"=1]
"NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams" -> "wzgwzg/AICity"
"NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams" -> "ShuaiBai623/AI-City-Anomaly-Detection"
"NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams" -> "NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams"
"NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams" -> "he010103/Traffic-Brain"
"NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams" -> "GaoangW/TNT"
"NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams" -> "didi/mtmc-vt"
"NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams" -> "AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification"
"youtubevos/MaskTrackRCNN" -> "VisualComputingInstitute/TrackR-CNN" ["e"=1]
"youtubevos/MaskTrackRCNN" -> "VisualComputingInstitute/mots_tools" ["e"=1]
"DoubangoTelecom/ultimateALPR-SDK" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System" ["e"=1]
"DoubangoTelecom/ultimateALPR-SDK" -> "theAIGuysCode/yolov4-custom-functions" ["e"=1]
"murari023/awesome-background-subtraction" -> "SaoYan/bgsCNN"
"murari023/awesome-background-subtraction" -> "lim-anggun/FgSegNet"
"murari023/awesome-background-subtraction" -> "lim-anggun/FgSegNet_v2"
"murari023/awesome-background-subtraction" -> "andrewssobral/bgslibrary"
"murari023/awesome-background-subtraction" -> "ozantezcan/BSUV-Net-inference"
"murari023/awesome-background-subtraction" -> "antonilo/unsupervised_detection"
"murari023/awesome-background-subtraction" -> "ethereon/subsense"
"murari023/awesome-background-subtraction" -> "andrewssobral/lrslibrary"
"murari023/awesome-background-subtraction" -> "zhimingluo/MovingObjectSegmentation"
"murari023/awesome-background-subtraction" -> "plstcharles/litiv"
"murari023/awesome-background-subtraction" -> "aimeng100/WeSamBE"
"murari023/awesome-background-subtraction" -> "Grabber/deep-background-subtraction"
"murari023/awesome-background-subtraction" -> "ozantezcan/BSUV-Net-2.0"
"murari023/awesome-background-subtraction" -> "sagi-z/BackgroundSubtractorCNT"
"murari023/awesome-background-subtraction" -> "upcAutoLang/BackgroundSplit-OpenCV"
"zhengthomastang/2018AICity_TeamUW" -> "AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification"
"zhengthomastang/2018AICity_TeamUW" -> "GaoangW/TNT"
"zhengthomastang/2018AICity_TeamUW" -> "zhengthomastang/Cal_PnP"
"zhengthomastang/2018AICity_TeamUW" -> "NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams"
"zhengthomastang/2018AICity_TeamUW" -> "cw1204772/AIC2018_iamai"
"zhengthomastang/2018AICity_TeamUW" -> "NVIDIAAICITYCHALLENGE/2018AICITY_Maryland"
"zhengthomastang/2018AICity_TeamUW" -> "shijieS/SST"
"zhengthomastang/2018AICity_TeamUW" -> "ahmetozlu/vehicle_counting_tensorflow"
"zhengthomastang/2018AICity_TeamUW" -> "dluvizon/vehicle-dsm"
"zhengthomastang/2018AICity_TeamUW" -> "knwng/awesome-vehicle-re-identification"
"zhengthomastang/2018AICity_TeamUW" -> "ZidanMusk/experimenting-with-sort"
"zhengthomastang/2018AICity_TeamUW" -> "Zhongdao/Towards-Realtime-MOT"
"zhengthomastang/2018AICity_TeamUW" -> "longcw/MOTDT"
"zhengthomastang/2018AICity_TeamUW" -> "CaptainEven/MCMOT"
"zhengthomastang/2018AICity_TeamUW" -> "GaoangW/TC_tracker"
"Dharun/Tensorflow-License-Plate-Detection" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System" ["e"=1]
"xinychen/awesome-latex-drawing" -> "xinychen/Tensor4ML" ["e"=1]
"marvis/pytorch-yolo3" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"gpeyre/matlab-toolboxes" -> "canyilu/LibADMM-toolbox" ["e"=1]
"xiaochus/Vehicle_Tracking" -> "Toemazz/VehicleDetectionAndTracking"
"xiaochus/Vehicle_Tracking" -> "ahmetozlu/vehicle_counting"
"thatbrguy/Pedestrian-Detection" -> "akphi/PedestrianCounter"
"thatbrguy/Pedestrian-Detection" -> "WebPrague/PedestrianDetectionSystem"
"thatbrguy/Pedestrian-Detection" -> "buffer51/lstm-rcnn-pedestrian-detection" ["e"=1]
"thatbrguy/Pedestrian-Detection" -> "xingkongliang/Pedestrian-Detection" ["e"=1]
"thatbrguy/Pedestrian-Detection" -> "liuwei16/CSP" ["e"=1]
"thatbrguy/Pedestrian-Detection" -> "hasanirtiza/Pedestron" ["e"=1]
"thatbrguy/Pedestrian-Detection" -> "icsfy/Pedestrian_Detection"
"thatbrguy/Pedestrian-Detection" -> "mitmul/caltech-pedestrian-dataset-converter" ["e"=1]
"thatbrguy/Pedestrian-Detection" -> "zhangliliang/RPN_BF" ["e"=1]
"cedricve/motion-detection" -> "jooray/motion-detection"
"PINTO0309/OpenVINO-YoloV3" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"leikunx/AI_projects" -> "bbaibowen/computer-vision"
"leikunx/AI_projects" -> "jiajunhua/StevenLei2017-AI_projects"
"leikunx/AI_projects" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"leikunx/AI_projects" -> "songwsx/RFSong-7993"
"leikunx/AI_projects" -> "kimyoon-young/centerNet-deep-sort"
"leikunx/AI_projects" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"leikunx/AI_projects" -> "songwsx/person_search_demo" ["e"=1]
"leikunx/AI_projects" -> "Tencent/ObjectDetection-OneStageDet" ["e"=1]
"leikunx/AI_projects" -> "Adamdad/keras-YOLOv3-mobilenet" ["e"=1]
"leikunx/AI_projects" -> "Zzh-tju/DIoU-darknet" ["e"=1]
"leikunx/AI_projects" -> "princeton-vl/CornerNet-Lite" ["e"=1]
"leikunx/AI_projects" -> "Qidian213/deep_sort_yolov3"
"leikunx/AI_projects" -> "spytensor/detect_steel_bar" ["e"=1]
"zeusees/HyperVID" -> "CaptainEven/RepNet-MDNet-VehicleReID" ["e"=1]
"zeusees/HyperVID" -> "JDAI-CV/VeRidataset" ["e"=1]
"zeusees/HyperVID" -> "knwng/awesome-vehicle-re-identification" ["e"=1]
"mattzheng/keras-yolov3-KF-objectTracking" -> "AndyoyoZ/usvImgPro"
"mattzheng/keras-yolov3-KF-objectTracking" -> "srianant/kalman_filter_multi_object_tracking"
"weixu000/libtorch-yolov3-deepsort" -> "walktree/libtorch-yolov3" ["e"=1]
"weixu000/libtorch-yolov3-deepsort" -> "bitzy/DeepSort"
"weixu000/libtorch-yolov3-deepsort" -> "shaoshengsong/DeepSORT"
"weixu000/libtorch-yolov3-deepsort" -> "mcximing/sort-cpp"
"weixu000/libtorch-yolov3-deepsort" -> "yasenh/libtorch-yolov5" ["e"=1]
"weixu000/libtorch-yolov3-deepsort" -> "chenjianqu/Tracking-Solov2-Deepsort" ["e"=1]
"weixu000/libtorch-yolov3-deepsort" -> "Rainweic/deepsort"
"weixu000/libtorch-yolov3-deepsort" -> "sephirothhua/DeepSort_yoloV3-HOG_feature"
"weixu000/libtorch-yolov3-deepsort" -> "kimyoon-young/centerNet-deep-sort"
"weixu000/libtorch-yolov3-deepsort" -> "xiangweizeng/mobile-lpr" ["e"=1]
"lyp-deeplearning/deep_sort_yolov3" -> "Qidian213/deep_sort_yolov3"
"lyp-deeplearning/deep_sort_yolov3" -> "SUMStudio/yolo-pedestrian-detection"
"lyp-deeplearning/deep_sort_yolov3" -> "Yingl-Liu/DetectAndTrack"
"VisualComputingInstitute/mots_tools" -> "VisualComputingInstitute/TrackR-CNN"
"VisualComputingInstitute/mots_tools" -> "tobiasfshr/MOTSFusion"
"VisualComputingInstitute/mots_tools" -> "yihongXU/deepMOT"
"VisualComputingInstitute/mots_tools" -> "detectRecog/PointTrack"
"VisualComputingInstitute/mots_tools" -> "shijieS/SST"
"VisualComputingInstitute/mots_tools" -> "jizhu1023/DMAN_MOT"
"VisualComputingInstitute/mots_tools" -> "BoPang1996/TubeTK"
"VisualComputingInstitute/mots_tools" -> "yihongXU/TransCenter"
"VisualComputingInstitute/mots_tools" -> "ZwwWayne/mmMOT"
"VisualComputingInstitute/mots_tools" -> "phil-bergmann/tracking_wo_bnw"
"VisualComputingInstitute/mots_tools" -> "selflein/GraphNN-Multi-Object-Tracking"
"VisualComputingInstitute/mots_tools" -> "huanglianghua/mot-papers"
"VisualComputingInstitute/mots_tools" -> "yinjunbo/UMA-MOT"
"VisualComputingInstitute/mots_tools" -> "jutanke/cabbage"
"abhi-kumar/CAR-DETECTION" -> "skandhurkat/CarDetect"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "samihormi/Multi-Camera-Person-Tracking-and-Re-Identification"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "SurajDonthi/Multi-Camera-Person-Re-Identification"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "nolanzzz/mtmct"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "cw1204772/AIC2018_iamai"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "GehenHe/TRACTA"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "arvganesh/Multi-Camera-Object-Tracking"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "ucuapps/top-view-multi-person-tracking"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "Jason-cs18/Awesome-Multi-Camera-Network"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "schuar-iosb/mta-dataset"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "KunalArora/multiple-camera_multiple-people_tracking"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "hafidh561/multi-camera-people-tracking"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "ipl-uw/AIC23_Track1_UWIPL_ETRI"
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" -> "koehlp/wda_tracker"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "Jakel21/vehicle-ReID-baseline"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "knwng/awesome-vehicle-re-identification"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "lxc86739795/vehiclereid_baseline"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "PKU-IMRE/VERI-Wild"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "CaptainEven/Vehicle-Car-detection-and-multilabel-classification" ["e"=1]
"CaptainEven/RepNet-MDNet-VehicleReID" -> "layumi/Vehicle_reID-Collection"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "saghiralfasly/VFL-Vehicle-Re-Id"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "layumi/AICIty-reID-2020"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "JDAI-CV/VeRidataset"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "BravoLu/OpenVehicleReID"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "silverbulletmdc/PVEN"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "bismex/Awesome-vehicle-re-identification"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "CaptainEven/FairMOTVehicle"
"CaptainEven/RepNet-MDNet-VehicleReID" -> "icarofua/vehicle-rear"
"zhengthomastang/Cal_PnP" -> "zhengthomastang/MOT_Annot"
"zhengthomastang/Cal_PnP" -> "GaoangW/TNT"
"zhengthomastang/Cal_PnP" -> "regob/vehicle_mtmc"
"zhengthomastang/Cal_PnP" -> "ipl-uw/AIC23_Track1_UWIPL_ETRI"
"parkpow/deep-license-plate-recognition" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System" ["e"=1]
"abhyantrika/nanonets_object_tracking" -> "omarabid59/TensorflowDeepSortTracking"
"abhyantrika/nanonets_object_tracking" -> "nwojke/cosine_metric_learning"
"abhyantrika/nanonets_object_tracking" -> "theAIGuysCode/yolov3_deepsort"
"abhyantrika/nanonets_object_tracking" -> "danielgordon10/re3-tensorflow"
"abhyantrika/nanonets_object_tracking" -> "LeonLok/Deep-SORT-YOLOv4"
"abhyantrika/nanonets_object_tracking" -> "Akhtar303/Vehicle-Detection-and-Tracking-Usig-YOLO-and-Deep-Sort-with-Keras-and-Tensorflow"
"pprp/deep_sort_yolov3_pytorch" -> "pprp/reid_for_deepsort"
"pprp/deep_sort_yolov3_pytorch" -> "pprp/voc2007_for_yolo_torch" ["e"=1]
"pprp/deep_sort_yolov3_pytorch" -> "kimyoon-young/centerNet-deep-sort"
"pprp/deep_sort_yolov3_pytorch" -> "mikel-brostrom/Yolov3_DeepSort_Pytorch"
"pprp/deep_sort_yolov3_pytorch" -> "ZQPei/deep_sort_pytorch"
"xinychen/academic-drawing" -> "xinychen/Tensor4ML" ["e"=1]
"ryotat/tensor" -> "Kaimaoge/Tensor-decomposition-completion-and-recovery-papers-and-codes"
"xinychen/Tensor4ML" -> "xinychen/geotensor"
"xinychen/Tensor4ML" -> "zhaoxile/reproducible-tensor-completion-state-of-the-art"
"xinychen/Tensor4ML" -> "xinychen/tensor-book"
"xinychen/Tensor4ML" -> "andrewssobral/mctc4bmi"
"xinychen/Tensor4ML" -> "xinychen/transdim" ["e"=1]
"xinychen/Tensor4ML" -> "datamllab/pyten"
"xinychen/Tensor4ML" -> "Kaimaoge/Tensor-decomposition-completion-and-recovery-papers-and-codes"
"xinychen/Tensor4ML" -> "mcgill-smart-transport/bgcp_imputation"
"xinychen/Tensor4ML" -> "yuanlonghao/TRLRF" ["e"=1]
"xinychen/Tensor4ML" -> "rballester/tntorch" ["e"=1]
"xinychen/Tensor4ML" -> "JeanKossaifi/tensorly-notebooks" ["e"=1]
"xinychen/Tensor4ML" -> "qiangsiwei/tensor_tools"
"Kaimaoge/Tensor-decomposition-completion-and-recovery-papers-and-codes" -> "canyilu/tensor-completion-tensor-recovery"
"Kaimaoge/Tensor-decomposition-completion-and-recovery-papers-and-codes" -> "ryotat/tensor"
"jeffbass/imagezmq" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"jeffbass/imagezmq" -> "jeffbass/yin-yang-ranch"
"jeffbass/imagezmq" -> "jeffbass/imagenode"
"jeffbass/imagezmq" -> "jeffbass/imagehub"
"jeffbass/imagezmq" -> "abhiTronix/vidgear" ["e"=1]
"jeffbass/imagezmq" -> "CT83/SmoothStream" ["e"=1]
"jeffbass/imagezmq" -> "PyImageSearch/imutils" ["e"=1]
"jeffbass/imagezmq" -> "adipandas/multi-object-tracker"
"jeffbass/imagezmq" -> "NVIDIA-AI-IOT/deepstream_python_apps" ["e"=1]
"jeffbass/imagezmq" -> "GeekAlexis/FastMOT"
"jeffbass/imagezmq" -> "jkjung-avt/tensorrt_demos" ["e"=1]
"jeffbass/imagezmq" -> "LeonLok/Deep-SORT-YOLOv4"
"jeffbass/imagezmq" -> "ceccocats/tkDNN" ["e"=1]
"jeffbass/imagezmq" -> "miguelgrinberg/flask-video-streaming" ["e"=1]
"jeffbass/imagezmq" -> "mdegans/nano_build_opencv" ["e"=1]
"Zhongdao/VehicleReIDKeyPointData" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation"
"Zhongdao/VehicleReIDKeyPointData" -> "JDAI-CV/VeRidataset"
"Zhongdao/VehicleReIDKeyPointData" -> "Jakel21/vehicle-ReID-baseline"
"Zhongdao/VehicleReIDKeyPointData" -> "silverbulletmdc/PVEN"
"Zhongdao/VehicleReIDKeyPointData" -> "PKU-IMRE/VERI-Wild"
"Zhongdao/VehicleReIDKeyPointData" -> "knwng/awesome-vehicle-re-identification"
"Zhongdao/VehicleReIDKeyPointData" -> "NVlabs/PAMTRI"
"Zhongdao/VehicleReIDKeyPointData" -> "lxc86739795/vehiclereid_baseline"
"Zhongdao/VehicleReIDKeyPointData" -> "layumi/Vehicle_reID-Collection"
"Zhongdao/VehicleReIDKeyPointData" -> "yorkeyao/VehicleX"
"Zhongdao/VehicleReIDKeyPointData" -> "DTennant/reid_baseline_with_syncbn"
"Zhongdao/VehicleReIDKeyPointData" -> "JakubSochor/BoxCars" ["e"=1]
"Zhongdao/VehicleReIDKeyPointData" -> "liu-xb/RAM"
"Zhongdao/VehicleReIDKeyPointData" -> "layumi/AICIty-reID-2020"
"Zhongdao/VehicleReIDKeyPointData" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"didi/mtmc-vt" -> "NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams"
"didi/mtmc-vt" -> "KevinQian97/ELECTRICITY-MTMC"
"guojunyao419/OPF-ADMM" -> "YuejiangLIU/Optimal_Power_Flow"
"guojunyao419/OPF-ADMM" -> "linfengYang/Dual-Consensus-ADMM-for-DC-OPF-CET"
"guojunyao419/OPF-ADMM" -> "gobelc/opf-admm"
"kcg2015/Vehicle-Detection-and-Tracking" -> "ucbdrive/3d-vehicle-tracking" ["e"=1]
"kcg2015/Vehicle-Detection-and-Tracking" -> "ahmetozlu/vehicle_counting_tensorflow"
"kcg2015/Vehicle-Detection-and-Tracking" -> "JunshengFu/vehicle-detection"
"kcg2015/Vehicle-Detection-and-Tracking" -> "tj27-vkr/RCNN-Vehicle-Tracking-Lane-Detection" ["e"=1]
"kcg2015/Vehicle-Detection-and-Tracking" -> "Qidian213/deep_sort_yolov3"
"kcg2015/Vehicle-Detection-and-Tracking" -> "apoorvavinod/Real_time_Object_detection_and_tracking"
"kcg2015/Vehicle-Detection-and-Tracking" -> "srianant/kalman_filter_multi_object_tracking"
"kcg2015/Vehicle-Detection-and-Tracking" -> "ambakick/Person-Detection-and-Tracking"
"kcg2015/Vehicle-Detection-and-Tracking" -> "ZidanMusk/experimenting-with-sort"
"kcg2015/Vehicle-Detection-and-Tracking" -> "andrewssobral/simple_vehicle_counting"
"kcg2015/Vehicle-Detection-and-Tracking" -> "SpyderXu/multi-object-tracking-paper-list"
"kcg2015/Vehicle-Detection-and-Tracking" -> "ahmetozlu/tensorflow_object_counting_api"
"kcg2015/Vehicle-Detection-and-Tracking" -> "xiaochus/Vehicle_Tracking"
"kcg2015/Vehicle-Detection-and-Tracking" -> "yehengchen/Object-Detection-and-Tracking"
"kcg2015/Vehicle-Detection-and-Tracking" -> "VisualComputingInstitute/TrackR-CNN"
"longcw/MOTDT" -> "shijieS/SST"
"longcw/MOTDT" -> "phil-bergmann/tracking_wo_bnw"
"longcw/MOTDT" -> "yihongXU/deepMOT"
"longcw/MOTDT" -> "SpyderXu/multi-object-tracking-paper-list"
"longcw/MOTDT" -> "huanglianghua/mot-papers"
"longcw/MOTDT" -> "cheind/py-motmetrics"
"longcw/MOTDT" -> "bochinski/iou-tracker"
"longcw/MOTDT" -> "Zhongdao/Towards-Realtime-MOT"
"longcw/MOTDT" -> "VisualComputingInstitute/TrackR-CNN"
"longcw/MOTDT" -> "feichtenhofer/Detect-Track" ["e"=1]
"longcw/MOTDT" -> "ergysr/DeepCC"
"longcw/MOTDT" -> "Qidian213/deep_sort_yolov3"
"longcw/MOTDT" -> "yuxng/MDP_Tracking" ["e"=1]
"longcw/MOTDT" -> "jutanke/cabbage"
"longcw/MOTDT" -> "nwojke/cosine_metric_learning"
"jeffskinnerbox/people-counter" -> "koba/overhead-camera-people-counter"
"JunaidCS032/MOTBeyondPixels" -> "aljosaosep/ciwt"
"JunaidCS032/MOTBeyondPixels" -> "tobiasfshr/MOTSFusion"
"JunaidCS032/MOTBeyondPixels" -> "ZwwWayne/mmMOT"
"JunaidCS032/MOTBeyondPixels" -> "VisualComputingInstitute/mots_tools"
"JunaidCS032/MOTBeyondPixels" -> "VisualComputingInstitute/TrackR-CNN"
"JunaidCS032/MOTBeyondPixels" -> "jizhu1023/DMAN_MOT"
"WebPrague/PedestrianDetectionSystem" -> "thatbrguy/Pedestrian-Detection"
"WebPrague/PedestrianDetectionSystem" -> "Kestrong/capture_reid" ["e"=1]
"WebPrague/PedestrianDetectionSystem" -> "liuwei16/CSP" ["e"=1]
"WebPrague/PedestrianDetectionSystem" -> "icsfy/Pedestrian_Detection"
"WebPrague/PedestrianDetectionSystem" -> "Kevinnan-teen/Intelligent-Traffic-Based-On-CV"
"WebPrague/PedestrianDetectionSystem" -> "xmfbit/PedestrianDetection"
"WebPrague/PedestrianDetectionSystem" -> "songwsx/person_search_demo" ["e"=1]
"WebPrague/PedestrianDetectionSystem" -> "songwsx/RFSong-7993"
"WebPrague/PedestrianDetectionSystem" -> "lyp-deeplearning/deep_sort_yolov3"
"WebPrague/PedestrianDetectionSystem" -> "fuyi501/web-video-live" ["e"=1]
"z80z80z80/autocrop" -> "smc8050/Dias_Autocrop"
"z80z80z80/autocrop" -> "Claytorpedo/scan-cropper"
"PJunhyuk/people-counting-pose" -> "Nikhil-Kasukurthi/Counting-people-video"
"PJunhyuk/people-counting-pose" -> "LukashenkoYevhenii/People-Counter"
"Jakel21/vehicle-ReID-baseline" -> "lxc86739795/vehiclereid_baseline"
"Jakel21/vehicle-ReID-baseline" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"Jakel21/vehicle-ReID-baseline" -> "saghiralfasly/VFL-Vehicle-Re-Id"
"Jakel21/vehicle-ReID-baseline" -> "knwng/awesome-vehicle-re-identification"
"Jakel21/vehicle-ReID-baseline" -> "bismex/Awesome-vehicle-re-identification"
"Jakel21/vehicle-ReID-baseline" -> "JDAI-CV/VeRidataset"
"Jakel21/vehicle-ReID-baseline" -> "PKU-IMRE/VERI-Wild"
"Jakel21/vehicle-ReID-baseline" -> "Zhongdao/VehicleReIDKeyPointData"
"Jakel21/vehicle-ReID-baseline" -> "BravoLu/OpenVehicleReID"
"Jakel21/vehicle-ReID-baseline" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation"
"Jakel21/vehicle-ReID-baseline" -> "layumi/Vehicle_reID-Collection"
"Jakel21/vehicle-ReID-baseline" -> "AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification"
"Jakel21/vehicle-ReID-baseline" -> "DTennant/reid_baseline_with_syncbn"
"Jakel21/vehicle-ReID-baseline" -> "silverbulletmdc/PVEN"
"Jakel21/vehicle-ReID-baseline" -> "Xiangyu-CAS/AICity2020-VOC-ReID"
"mabhisharma/Multi-Object-Tracking-with-Kalman-Filter" -> "srianant/kalman_filter_multi_object_tracking"
"mabhisharma/Multi-Object-Tracking-with-Kalman-Filter" -> "RahmadSadli/2-D-Kalman-Filter"
"kimjingu/nonnegfac-python" -> "canerturkmen/nmflib"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "leviome/human_counter" ["e"=1]
"AdityaPai2398/Vehicle-And-Pedestrian-Detection-Using-Haar-Cascades" -> "akphi/PedestrianCounter"
"AdityaPai2398/Vehicle-And-Pedestrian-Detection-Using-Haar-Cascades" -> "andrewssobral/vehicle_detection_haarcascades"
"AdityaPai2398/Vehicle-And-Pedestrian-Detection-Using-Haar-Cascades" -> "AdityaPai2398/UI-For-Vehicle-and-Pedestrian-Detection-"
"AdityaPai2398/Vehicle-And-Pedestrian-Detection-Using-Haar-Cascades" -> "felipecorrea/pedestrian-haar-based-detector"
"canyilu/Tensor-tensor-product-toolbox" -> "canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA"
"canyilu/Tensor-tensor-product-toolbox" -> "canyilu/tensor-completion-tensor-recovery"
"canyilu/Tensor-tensor-product-toolbox" -> "andrewssobral/mtt"
"ahmetozlu/color_recognition" -> "beerboaa/Color-Classification-CNN"
"ahmetozlu/color_recognition" -> "walton-wang929/Color_Recognition"
"ahmetozlu/color_recognition" -> "algolia/color-extractor" ["e"=1]
"ahmetozlu/color_recognition" -> "ahmetozlu/vehicle_counting_tensorflow"
"ahmetozlu/color_recognition" -> "ahmetozlu/face_recognition_crop"
"ahmetozlu/color_recognition" -> "Spectra456/Color-Recognition-CNN"
"eti-p-doray/unet-gan-matting" -> "susheelsk/image-background-removal"
"eti-p-doray/unet-gan-matting" -> "rorodata/background-removal"
"eti-p-doray/unet-gan-matting" -> "aadityavikram/Background-Removal"
"eti-p-doray/unet-gan-matting" -> "SaoYan/bgsCNN"
"eti-p-doray/unet-gan-matting" -> "takiyu/portrait_matting" ["e"=1]
"eti-p-doray/unet-gan-matting" -> "huochaitiantang/pytorch-deep-image-matting" ["e"=1]
"eti-p-doray/unet-gan-matting" -> "CDOTAD/AlphaGAN-Matting" ["e"=1]
"lim-anggun/FgSegNet_v2" -> "lim-anggun/FgSegNet"
"lim-anggun/FgSegNet_v2" -> "murari023/awesome-background-subtraction"
"lim-anggun/FgSegNet_v2" -> "ozantezcan/BSUV-Net-inference"
"lim-anggun/FgSegNet_v2" -> "zhimingluo/MovingObjectSegmentation"
"lim-anggun/FgSegNet_v2" -> "nalika/A-3D-CNN-LSTM-Based-Image-to-Image-Foreground-Segmentation"
"lim-anggun/FgSegNet_v2" -> "SaoYan/bgsCNN"
"lim-anggun/FgSegNet_v2" -> "ozantezcan/BSUV-Net-2.0"
"GuiltyNeuron/ANPR" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System" ["e"=1]
"akshun4/People-Counter" -> "Deeptun/MOG-people-counter"
"librahfacebook/Detection" -> "lyp-deeplearning/deep_sort_yolov3"
"librahfacebook/Detection" -> "FutureBetter/face_recognition"
"librahfacebook/Detection" -> "owo12321/Yolov5_DeepSort_Traffic-counter"
"librahfacebook/Detection" -> "leviome/human_counter"
"nicholaskajoh/ivy" -> "IBM/powerai-counting-cars"
"nicholaskajoh/ivy" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"nicholaskajoh/ivy" -> "ahmetozlu/vehicle_counting_tensorflow"
"nicholaskajoh/ivy" -> "nicholaskajoh/TNEX"
"nicholaskajoh/ivy" -> "ahmetozlu/tensorflow_object_counting_api"
"nicholaskajoh/ivy" -> "muhk01/YOLOv5-Object-Counter" ["e"=1]
"nicholaskajoh/ivy" -> "ankit1khare/Smart-Park-with-YOLO-V3" ["e"=1]
"nicholaskajoh/ivy" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"nicholaskajoh/ivy" -> "mykeels/nigerian-constitution" ["e"=1]
"nicholaskajoh/ivy" -> "guptavasu1213/Yolo-Vehicle-Counter"
"nicholaskajoh/ivy" -> "zhengthomastang/2018AICity_TeamUW"
"knwng/awesome-vehicle-re-identification" -> "JDAI-CV/VeRidataset"
"knwng/awesome-vehicle-re-identification" -> "layumi/Vehicle_reID-Collection"
"knwng/awesome-vehicle-re-identification" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"knwng/awesome-vehicle-re-identification" -> "Jakel21/vehicle-ReID-baseline"
"knwng/awesome-vehicle-re-identification" -> "PKU-IMRE/VERI-Wild"
"knwng/awesome-vehicle-re-identification" -> "Zhongdao/VehicleReIDKeyPointData"
"knwng/awesome-vehicle-re-identification" -> "bismex/Awesome-vehicle-re-identification"
"knwng/awesome-vehicle-re-identification" -> "AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification"
"knwng/awesome-vehicle-re-identification" -> "lxc86739795/vehiclereid_baseline"
"knwng/awesome-vehicle-re-identification" -> "cw1204772/AIC2018_iamai"
"knwng/awesome-vehicle-re-identification" -> "NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams"
"knwng/awesome-vehicle-re-identification" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation"
"knwng/awesome-vehicle-re-identification" -> "DTennant/reid_baseline_with_syncbn"
"knwng/awesome-vehicle-re-identification" -> "huanghoujing/person-reid-triplet-loss-baseline" ["e"=1]
"knwng/awesome-vehicle-re-identification" -> "JakubSochor/BoxCars" ["e"=1]
"nicolasmetallo/car-damage-detector" -> "neokt/car-damage-detective"
"nicolasmetallo/car-damage-detector" -> "louisyuzhe/car-damage-detector"
"nicolasmetallo/car-damage-detector" -> "hemilpatel971/Damage-car-detection"
"nicolasmetallo/car-damage-detector" -> "nitsourish/car-damage-detection-using-CNN"
"nicolasmetallo/car-damage-detector" -> "TilakD/Car-Damage-Analysis-App"
"nicolasmetallo/car-damage-detector" -> "raviranjan0309/Car-Damage-Detector"
"HodenX/python-traffic-counter-with-yolo-and-sort" -> "BenBenee/Traffic-Counting-with-YOLOv3-and-SORT"
"HodenX/python-traffic-counter-with-yolo-and-sort" -> "wsh122333/Multi-type_vehicles_flow_statistics"
"lulujianjie/person-reid-tiny-baseline" -> "heshuting555/AICITY2020_DMT_VehicleReID" ["e"=1]
"jutanke/cabbage" -> "huanglianghua/mot-papers"
"jutanke/cabbage" -> "maksay/ptrack_cpp"
"jutanke/cabbage" -> "jizhu1023/DMAN_MOT"
"bitzy/DeepSort" -> "apennisi/deep_sort"
"bitzy/DeepSort" -> "oylz/DS"
"bitzy/DeepSort" -> "weixu000/libtorch-yolov3-deepsort"
"bitzy/DeepSort" -> "sephirothhua/DeepSort_yoloV3-HOG_feature"
"huanglianghua/mot-papers" -> "jutanke/cabbage"
"huanglianghua/mot-papers" -> "longcw/MOTDT"
"huanglianghua/mot-papers" -> "shijieS/SST"
"huanglianghua/mot-papers" -> "jizhu1023/DMAN_MOT"
"huanglianghua/mot-papers" -> "SpyderXu/multi-object-tracking-paper-list"
"huanglianghua/mot-papers" -> "yuxng/MDP_Tracking" ["e"=1]
"huanglianghua/mot-papers" -> "yihongXU/deepMOT"
"huanglianghua/mot-papers" -> "phil-bergmann/tracking_wo_bnw"
"huanglianghua/mot-papers" -> "ergysr/DeepCC"
"huanglianghua/mot-papers" -> "yinjunbo/UMA-MOT"
"huanglianghua/mot-papers" -> "VisualComputingInstitute/TrackR-CNN"
"huanglianghua/mot-papers" -> "zhen-he/tracking-by-animation"
"huanglianghua/mot-papers" -> "xiaobai1217/MBMD" ["e"=1]
"huanglianghua/mot-papers" -> "pjl1995/CTracker"
"huanglianghua/mot-papers" -> "bochinski/iou-tracker"
"Claytorpedo/scan-cropper" -> "polm/ndl-crop"
"arvganesh/Multi-Camera-Object-Tracking" -> "KunalArora/multiple-camera_multiple-people_tracking"
"arvganesh/Multi-Camera-Object-Tracking" -> "Jason-cs18/Awesome-Multi-Camera-Network"
"faezetta/VMMRdb" -> "Helias/Car-Model-Recognition"
"ergysr/DeepCC" -> "longcw/MOTDT"
"ergysr/DeepCC" -> "layumi/DukeMTMC-reID_evaluation" ["e"=1]
"ergysr/DeepCC" -> "huanglianghua/mot-papers"
"ergysr/DeepCC" -> "jutanke/cabbage"
"ergysr/DeepCC" -> "zhunzhong07/person-re-ranking" ["e"=1]
"ergysr/DeepCC" -> "shijieS/SST"
"ergysr/DeepCC" -> "VisualComputingInstitute/triplet-reid" ["e"=1]
"ergysr/DeepCC" -> "Yu-Wu/DukeMTMC-VideoReID" ["e"=1]
"ergysr/DeepCC" -> "phil-bergmann/tracking_wo_bnw"
"ergysr/DeepCC" -> "SpyderXu/multi-object-tracking-paper-list"
"ergysr/DeepCC" -> "bochinski/iou-tracker"
"ergysr/DeepCC" -> "AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification"
"hou-yz/open-reid-tracking" -> "hou-yz/DeepCC-local"
"lim-anggun/FgSegNet" -> "lim-anggun/FgSegNet_v2"
"lim-anggun/FgSegNet" -> "murari023/awesome-background-subtraction"
"lim-anggun/FgSegNet" -> "SaoYan/bgsCNN"
"lim-anggun/FgSegNet" -> "zhimingluo/MovingObjectSegmentation"
"lim-anggun/FgSegNet" -> "lpcinelli/foreground-segmentation"
"lim-anggun/FgSegNet" -> "ethereon/subsense"
"pascal1129/yolo_person_detect" -> "lyp-deeplearning/deep_sort_yolov3"
"pascal1129/yolo_person_detect" -> "songwsx/person_search_demo" ["e"=1]
"pascal1129/yolo_person_detect" -> "pascal1129/cv_notes"
"VehicleReId/VeRi" -> "lxc86739795/vehiclereid_baseline"
"zhen-he/tracking-by-animation" -> "huanglianghua/mot-papers"
"kraten/vehicle-speed-check" -> "ronitsinha/speed-detector"
"kraten/vehicle-speed-check" -> "shreyapamecha/Speed-Estimation-of-Vehicles-with-Plate-Detection"
"kraten/vehicle-speed-check" -> "kmr0877/Vehicle-and-Speed-Identification"
"kraten/vehicle-speed-check" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"kraten/vehicle-speed-check" -> "shafu0x/vehicle-speed-estimation"
"kraten/vehicle-speed-check" -> "NVIDIAAICITYCHALLENGE/2018AICITY_Maryland"
"kraten/vehicle-speed-check" -> "bluesven869/detect-speed-vehicle"
"kraten/vehicle-speed-check" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System"
"kraten/vehicle-speed-check" -> "ahmetozlu/vehicle_counting_tensorflow"
"peizhaoli05/EDA_GNN" -> "selflein/GraphNN-Multi-Object-Tracking"
"lxc86739795/vehiclereid_baseline" -> "Jakel21/vehicle-ReID-baseline"
"lxc86739795/vehiclereid_baseline" -> "saghiralfasly/VFL-Vehicle-Re-Id"
"lxc86739795/vehiclereid_baseline" -> "lxc86739795/VehicleReIDKeyPointData"
"lxc86739795/vehiclereid_baseline" -> "JDAI-CV/VeRidataset"
"lxc86739795/vehiclereid_baseline" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation"
"lxc86739795/vehiclereid_baseline" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"lxc86739795/vehiclereid_baseline" -> "VehicleReId/VeRi"
"SteveMacenski/jetson_nano_detection_and_tracking" -> "JardinRyu/Jetson_Nano_People_Counting" ["e"=1]
"adipandas/SmallWorldNetCA" -> "adipandas/python-tutorial-codes"
"shreyapamecha/Speed-Estimation-of-Vehicles-with-Plate-Detection" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"shreyapamecha/Speed-Estimation-of-Vehicles-with-Plate-Detection" -> "kraten/vehicle-speed-check"
"shreyapamecha/Speed-Estimation-of-Vehicles-with-Plate-Detection" -> "lcosicnus/CMS"
"shreyapamecha/Speed-Estimation-of-Vehicles-with-Plate-Detection" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System"
"shreyapamecha/Speed-Estimation-of-Vehicles-with-Plate-Detection" -> "NVIDIAAICITYCHALLENGE/2018AICITY_Maryland"
"ronitsinha/speed-detector" -> "kraten/vehicle-speed-check"
"ronitsinha/speed-detector" -> "kmr0877/Vehicle-and-Speed-Identification"
"ronitsinha/speed-detector" -> "Mega-Barrel/Speed-Detection-Using-OpenCV"
"ronitsinha/speed-detector" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"rorodata/background-removal" -> "susheelsk/image-background-removal"
"rorodata/background-removal" -> "eti-p-doray/unet-gan-matting"
"Qidian213/Ranked_Person_ReID" -> "DTennant/reid_baseline_with_syncbn" ["e"=1]
"SamPlvs/Object-detection-via-HOG-SVM" -> "richaagrawa/Person-Detection-in-Various-Postures"
"SamPlvs/Object-detection-via-HOG-SVM" -> "jianlong-yuan/HOG-SVM-python"
"shijieS/DMMN" -> "shijieS/OmniMOTDataset"
"shijieS/DMMN" -> "yinjunbo/UMA-MOT"
"jeffbass/imagenode" -> "jeffbass/imagehub"
"jeffbass/imagehub" -> "jeffbass/imagenode"
"dganguli/robust-pca" -> "dfm/pcp"
"dganguli/robust-pca" -> "jkarnows/rpcaADMM"
"dganguli/robust-pca" -> "dlaptev/RobustPCA"
"dganguli/robust-pca" -> "wxiao0421/onlineRPCA"
"dganguli/robust-pca" -> "facebookarchive/fbpca"
"dganguli/robust-pca" -> "zc8340311/RobustAutoencoder" ["e"=1]
"wanggrun/SYSU-30k" -> "whut2962575697/naic_reid" ["e"=1]
"canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA" -> "canyilu/tensor-completion-tensor-recovery"
"canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA" -> "canyilu/Tensor-tensor-product-toolbox"
"canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA" -> "zhaoxile/reproducible-tensor-completion-state-of-the-art"
"canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA" -> "wanghailin97/Guaranteed-Tensor-Recovery-Fused-Low-rankness-and-Smoothness"
"canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA" -> "canyilu/LibADMM-toolbox"
"canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA" -> "zhaoxile/Low-rank-tensor-train-for-tensor-robust-principal-component-analysis"
"susheelsk/image-background-removal" -> "eti-p-doray/unet-gan-matting"
"susheelsk/image-background-removal" -> "rorodata/background-removal"
"susheelsk/image-background-removal" -> "aadityavikram/Background-Removal"
"susheelsk/image-background-removal" -> "SaoYan/bgsCNN"
"susheelsk/image-background-removal" -> "OPHoperHPO/image-background-remove-tool" ["e"=1]
"shubhi/car-damage-assessment" -> "louisyuzhe/car-damage-detector"
"beerboaa/Color-Classification-CNN" -> "ahmetozlu/color_recognition"
"tobiasfshr/MOTSFusion" -> "VisualComputingInstitute/mots_tools"
"tobiasfshr/MOTSFusion" -> "VisualComputingInstitute/TrackR-CNN"
"tobiasfshr/MOTSFusion" -> "ZwwWayne/mmMOT"
"tobiasfshr/MOTSFusion" -> "eddyhkchiu/mahalanobis_3d_multi_object_tracking" ["e"=1]
"tobiasfshr/MOTSFusion" -> "JunaidCS032/MOTBeyondPixels"
"Helias/Car-Model-Recognition" -> "faezetta/VMMRdb"
"SamvitJ/Duke-DeepCC" -> "hou-yz/DeepCC-local"
"SpyderXu/ssd_sort" -> "baileyqbb/SSD_deepSort_TF"
"wzgwzg/AICity" -> "NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams"
"yanbai1993/Embedding_GAN" -> "csyizhou/Vehicle-Re-ID"
"songwsx/RFB-Person" -> "songwsx/steel-detect"
"songwsx/RFB-Person" -> "songwsx/RFSong-779"
"ahmedfgad/HOGNumPy" -> "preethampaul/HOG"
"saghiralfasly/VFL-Vehicle-Re-Id" -> "TongJiL/Vehicle-Re-identification-on-VeRi-dataset"
"saghiralfasly/VFL-Vehicle-Re-Id" -> "lxc86739795/vehiclereid_baseline"
"adipandas/python-gui-demos" -> "adipandas/python-tutorial-codes"
"adipandas/python-gui-demos" -> "adipandas/SmallWorldNetCA"
"ShuaiBai623/AI-City-Anomaly-Detection" -> "ipl-uw/2019-CVPR-AIC-Track-3-UWIPL"
"ShuaiBai623/AI-City-Anomaly-Detection" -> "adampower48/AI-City-Anomaly-Detection"
"ShuaiBai623/AI-City-Anomaly-Detection" -> "kevaldoshi17/NVIDIA_AICITY"
"aimeng100/WeSamBE" -> "ethereon/subsense"
"jizhu1023/DMAN_MOT" -> "huanglianghua/mot-papers"
"jizhu1023/DMAN_MOT" -> "shijieS/SST"
"jizhu1023/DMAN_MOT" -> "nightmaredimple/libmot"
"jizhu1023/DMAN_MOT" -> "jutanke/cabbage"
"jizhu1023/DMAN_MOT" -> "yihongXU/deepMOT"
"hou-yz/DeepCC-local" -> "hou-yz/open-reid-tracking"
"hou-yz/DeepCC-local" -> "SamvitJ/Duke-DeepCC"
"hou-yz/DeepCC-local" -> "gkrudah/MTMC"
"csyizhou/Vehicle-Re-ID" -> "yanbai1993/Embedding_GAN"
"GaoangW/TNT" -> "yoyomimi/TNT_pytorch"
"YTW/car-damage-detector-1" -> "TilakD/Car-Damage-Analysis-App"
"TilakD/Car-Damage-Analysis-App" -> "YTW/car-damage-detector-1"
"ipl-uw/2019-CVPR-AIC-Track-3-UWIPL" -> "ShuaiBai623/AI-City-Anomaly-Detection"
"Deeptun/MOG-people-counter" -> "beyhangl/People-Counting-by-zones"
"PaddlePaddle/PaddleDetection" -> "mikel-brostrom/boxmot" ["e"=1]
"axinc-ai/ailia-models" -> "ifzhang/ByteTrack" ["e"=1]
"axinc-ai/ailia-models" -> "mikel-brostrom/boxmot" ["e"=1]
"hunglc007/tensorflow-yolov4-tflite" -> "theAIGuysCode/tensorflow-yolov4-tflite" ["e"=1]
"hunglc007/tensorflow-yolov4-tflite" -> "theAIGuysCode/yolov4-deepsort" ["e"=1]
"wang-xinyu/tensorrtx" -> "mikel-brostrom/boxmot" ["e"=1]
"AIZOOTech/flask-object-detection" -> "VictorRancesCode/FlaskObjectDetection"
"theAIGuysCode/yolov4-deepsort" -> "LeonLok/Deep-SORT-YOLOv4"
"theAIGuysCode/yolov4-deepsort" -> "nwojke/deep_sort"
"theAIGuysCode/yolov4-deepsort" -> "yehengchen/Object-Detection-and-Tracking"
"theAIGuysCode/yolov4-deepsort" -> "ZQPei/deep_sort_pytorch"
"theAIGuysCode/yolov4-deepsort" -> "hunglc007/tensorflow-yolov4-tflite" ["e"=1]
"theAIGuysCode/yolov4-deepsort" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"theAIGuysCode/yolov4-deepsort" -> "mikel-brostrom/boxmot"
"theAIGuysCode/yolov4-deepsort" -> "GeekAlexis/FastMOT"
"theAIGuysCode/yolov4-deepsort" -> "theAIGuysCode/yolov3_deepsort"
"theAIGuysCode/yolov4-deepsort" -> "Qidian213/deep_sort_yolov3"
"theAIGuysCode/yolov4-deepsort" -> "theAIGuysCode/yolov4-custom-functions"
"theAIGuysCode/yolov4-deepsort" -> "Sharpiless/Yolov5-deepsort-inference"
"theAIGuysCode/yolov4-deepsort" -> "Zhongdao/Towards-Realtime-MOT"
"theAIGuysCode/yolov4-deepsort" -> "ifzhang/FairMOT"
"theAIGuysCode/yolov4-deepsort" -> "abewley/sort"
"ifzhang/FairMOT" -> "Zhongdao/Towards-Realtime-MOT"
"ifzhang/FairMOT" -> "xingyizhou/CenterTrack"
"ifzhang/FairMOT" -> "nwojke/deep_sort"
"ifzhang/FairMOT" -> "ifzhang/ByteTrack"
"ifzhang/FairMOT" -> "ZQPei/deep_sort_pytorch"
"ifzhang/FairMOT" -> "JDAI-CV/fast-reid" ["e"=1]
"ifzhang/FairMOT" -> "xingyizhou/CenterNet" ["e"=1]
"ifzhang/FairMOT" -> "SpyderXu/multi-object-tracking-paper-list"
"ifzhang/FairMOT" -> "open-mmlab/mmtracking"
"ifzhang/FairMOT" -> "STVIR/pysot" ["e"=1]
"ifzhang/FairMOT" -> "cheind/py-motmetrics"
"ifzhang/FairMOT" -> "abewley/sort"
"ifzhang/FairMOT" -> "visionml/pytracking" ["e"=1]
"ifzhang/FairMOT" -> "phil-bergmann/tracking_wo_bnw"
"ifzhang/FairMOT" -> "mikel-brostrom/boxmot"
"bdd100k/bdd100k" -> "SysCV/pcan" ["e"=1]
"VisDrone/VisDrone-Dataset" -> "VisDrone/DroneVehicle" ["e"=1]
"VisDrone/VisDrone-Dataset" -> "cv516Buaa/tph-yolov5" ["e"=1]
"VisDrone/VisDrone-Dataset" -> "lyuwenyu/RT-DETR" ["e"=1]
"VisDrone/VisDrone-Dataset" -> "ifzhang/FairMOT"
"VisDrone/VisDrone-Dataset" -> "hukaixuan19970627/yolov5_obb" ["e"=1]
"VisDrone/VisDrone-Dataset" -> "open-mmlab/mmtracking"
"VisDrone/VisDrone-Dataset" -> "visionml/pytracking" ["e"=1]
"VisDrone/VisDrone-Dataset" -> "xingyizhou/CenterTrack"
"VisDrone/VisDrone-Dataset" -> "ZhaoJ9014/Anti-UAV" ["e"=1]
"VisDrone/VisDrone-Dataset" -> "obss/sahi" ["e"=1]
"VisDrone/VisDrone-Dataset" -> "ifzhang/ByteTrack"
"VisDrone/VisDrone-Dataset" -> "Zhongdao/Towards-Realtime-MOT"
"VisDrone/VisDrone-Dataset" -> "ucas-vg/PointTinyBenchmark" ["e"=1]
"VisDrone/VisDrone-Dataset" -> "mikel-brostrom/boxmot"
"VisDrone/VisDrone-Dataset" -> "HonglinChu/SiamTrackers" ["e"=1]
"mikel-brostrom/boxmot" -> "ZQPei/deep_sort_pytorch"
"mikel-brostrom/boxmot" -> "ifzhang/ByteTrack"
"mikel-brostrom/boxmot" -> "nwojke/deep_sort"
"mikel-brostrom/boxmot" -> "Megvii-BaseDetection/YOLOX" ["e"=1]
"mikel-brostrom/boxmot" -> "wang-xinyu/tensorrtx" ["e"=1]
"mikel-brostrom/boxmot" -> "ifzhang/FairMOT"
"mikel-brostrom/boxmot" -> "WongKinYiu/yolov7" ["e"=1]
"mikel-brostrom/boxmot" -> "JDAI-CV/fast-reid" ["e"=1]
"mikel-brostrom/boxmot" -> "KaiyangZhou/deep-person-reid" ["e"=1]
"mikel-brostrom/boxmot" -> "PaddlePaddle/PaddleDetection" ["e"=1]
"mikel-brostrom/boxmot" -> "NirAharon/BoT-SORT"
"mikel-brostrom/boxmot" -> "open-mmlab/mmtracking"
"mikel-brostrom/boxmot" -> "abewley/sort"
"mikel-brostrom/boxmot" -> "meituan/YOLOv6" ["e"=1]
"mikel-brostrom/boxmot" -> "Sharpiless/Yolov5-Deepsort"
"rlabbe/filterpy" -> "abewley/sort" ["e"=1]
"rlabbe/filterpy" -> "nwojke/deep_sort" ["e"=1]
"rlabbe/filterpy" -> "cheind/py-motmetrics" ["e"=1]
"PeterH0323/Smart_Construction" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"PeterH0323/Smart_Construction" -> "dyh/unbox_yolov5_deepsort_counting" ["e"=1]
"PeterH0323/Smart_Construction" -> "mikel-brostrom/boxmot" ["e"=1]
"open-mmlab/mmtracking" -> "visionml/pytracking" ["e"=1]
"open-mmlab/mmtracking" -> "ifzhang/FairMOT"
"open-mmlab/mmtracking" -> "ifzhang/ByteTrack"
"open-mmlab/mmtracking" -> "Zhongdao/Towards-Realtime-MOT"
"open-mmlab/mmtracking" -> "STVIR/pysot" ["e"=1]
"open-mmlab/mmtracking" -> "xingyizhou/CenterTrack"
"open-mmlab/mmtracking" -> "luanshiyinyang/awesome-multiple-object-tracking"
"open-mmlab/mmtracking" -> "mikel-brostrom/boxmot"
"open-mmlab/mmtracking" -> "noahcao/OC_SORT"
"open-mmlab/mmtracking" -> "HonglinChu/SiamTrackers" ["e"=1]
"open-mmlab/mmtracking" -> "nwojke/deep_sort"
"open-mmlab/mmtracking" -> "JonathonLuiten/TrackEval"
"open-mmlab/mmtracking" -> "JDAI-CV/fast-reid" ["e"=1]
"open-mmlab/mmtracking" -> "ZQPei/deep_sort_pytorch"
"open-mmlab/mmtracking" -> "Megvii-BaseDetection/YOLOX" ["e"=1]
"engcang/ros-yolo-sort" -> "indra4837/yolov4_trt_ros"
"engcang/ros-yolo-sort" -> "yasenh/sort-cpp"
"engcang/ros-yolo-sort" -> "IntelligentRoboticsLabs/gb_visual_detection_3d"
"miguelgrinberg/flask-video-streaming" -> "LeonLok/Multi-Camera-Live-Object-Tracking" ["e"=1]
"miguelgrinberg/flask-video-streaming" -> "jeffbass/imagezmq" ["e"=1]
"tryolabs/norfair" -> "obss/sahi" ["e"=1]
"tryolabs/norfair" -> "ifzhang/ByteTrack"
"tryolabs/norfair" -> "mikel-brostrom/boxmot"
"tryolabs/norfair" -> "GeekAlexis/FastMOT"
"tryolabs/norfair" -> "tryolabs/soccer-video-analytics" ["e"=1]
"tryolabs/norfair" -> "NirAharon/BoT-SORT"
"tryolabs/norfair" -> "abewley/sort"
"tryolabs/norfair" -> "Deci-AI/super-gradients" ["e"=1]
"tryolabs/norfair" -> "nwojke/deep_sort"
"tryolabs/norfair" -> "open-mmlab/mmtracking"
"tryolabs/norfair" -> "marcoslucianops/DeepStream-Yolo" ["e"=1]
"tryolabs/norfair" -> "visionml/pytracking" ["e"=1]
"tryolabs/norfair" -> "WongKinYiu/yolor" ["e"=1]
"tryolabs/norfair" -> "ifzhang/FairMOT"
"tryolabs/norfair" -> "wmuron/motpy"
"gengyanlei/reflective-clothes-detect-yolov5" -> "dyh/unbox_yolov5_deepsort_counting" ["e"=1]
"gengyanlei/reflective-clothes-detect-yolov5" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"CaoWGG/TensorRT-CenterNet" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"CaoWGG/TensorRT-CenterNet" -> "xingyizhou/CenterTrack" ["e"=1]
"gengyanlei/fire-smoke-detect-yolov4" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"niconielsen32/ComputerVision" -> "tryolabs/norfair" ["e"=1]
"niconielsen32/ComputerVision" -> "RizwanMunawar/yolov7-object-tracking" ["e"=1]
"saimj7/People-Counting-in-Real-Time" -> "epcm18/PeopleCounting-ComputerVision"
"saimj7/People-Counting-in-Real-Time" -> "Gupu25/PeopleCounter"
"saimj7/People-Counting-in-Real-Time" -> "JardinRyu/Jetson_Nano_People_Counting"
"saimj7/People-Counting-in-Real-Time" -> "akshun4/People-Counter"
"saimj7/People-Counting-in-Real-Time" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"saimj7/People-Counting-in-Real-Time" -> "IdoGalil/People-counting-system"
"saimj7/People-Counting-in-Real-Time" -> "darpan-jain/crowd-counting-using-tensorflow"
"saimj7/People-Counting-in-Real-Time" -> "GeekAlexis/FastMOT"
"saimj7/People-Counting-in-Real-Time" -> "koba/overhead-camera-people-counter"
"saimj7/People-Counting-in-Real-Time" -> "jeffskinnerbox/people-counter"
"saimj7/People-Counting-in-Real-Time" -> "akash-rajak/Real-Time-Human-Detection-Counting"
"saimj7/People-Counting-in-Real-Time" -> "SmitSheth/People-Counter"
"saimj7/People-Counting-in-Real-Time" -> "LukashenkoYevhenii/People-Counter"
"saimj7/People-Counting-in-Real-Time" -> "noumannahmad/Computer-Vision"
"saimj7/People-Counting-in-Real-Time" -> "poojavinod100/People-Counting-Crowd-Density-Detection"
"luanshiyinyang/awesome-multiple-object-tracking" -> "noahcao/OC_SORT"
"luanshiyinyang/awesome-multiple-object-tracking" -> "JonathonLuiten/TrackEval"
"luanshiyinyang/awesome-multiple-object-tracking" -> "NirAharon/BoT-SORT"
"luanshiyinyang/awesome-multiple-object-tracking" -> "megvii-research/MOTR"
"luanshiyinyang/awesome-multiple-object-tracking" -> "dyhBUPT/StrongSORT"
"luanshiyinyang/awesome-multiple-object-tracking" -> "JudasDie/SOTS" ["e"=1]
"luanshiyinyang/awesome-multiple-object-tracking" -> "Zhongdao/Towards-Realtime-MOT"
"luanshiyinyang/awesome-multiple-object-tracking" -> "PeizeSun/TransTrack"
"luanshiyinyang/awesome-multiple-object-tracking" -> "ifzhang/ByteTrack"
"luanshiyinyang/awesome-multiple-object-tracking" -> "open-mmlab/mmtracking"
"luanshiyinyang/awesome-multiple-object-tracking" -> "ifzhang/FairMOT"
"luanshiyinyang/awesome-multiple-object-tracking" -> "DanceTrack/DanceTrack"
"luanshiyinyang/awesome-multiple-object-tracking" -> "ymzis69/HybridSORT"
"luanshiyinyang/awesome-multiple-object-tracking" -> "xingyizhou/CenterTrack"
"luanshiyinyang/awesome-multiple-object-tracking" -> "megvii-research/MOTRv2"
"FateScript/CenterNet-better" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"Zhongdao/Towards-Realtime-MOT" -> "ifzhang/FairMOT"
"Zhongdao/Towards-Realtime-MOT" -> "xingyizhou/CenterTrack"
"Zhongdao/Towards-Realtime-MOT" -> "phil-bergmann/tracking_wo_bnw"
"Zhongdao/Towards-Realtime-MOT" -> "SpyderXu/multi-object-tracking-paper-list"
"Zhongdao/Towards-Realtime-MOT" -> "ZQPei/deep_sort_pytorch"
"Zhongdao/Towards-Realtime-MOT" -> "nwojke/deep_sort"
"Zhongdao/Towards-Realtime-MOT" -> "cheind/py-motmetrics"
"Zhongdao/Towards-Realtime-MOT" -> "longcw/MOTDT"
"Zhongdao/Towards-Realtime-MOT" -> "JDAI-CV/fast-reid" ["e"=1]
"Zhongdao/Towards-Realtime-MOT" -> "STVIR/pysot" ["e"=1]
"Zhongdao/Towards-Realtime-MOT" -> "foolwood/SiamMask" ["e"=1]
"Zhongdao/Towards-Realtime-MOT" -> "abewley/sort"
"Zhongdao/Towards-Realtime-MOT" -> "Qidian213/deep_sort_yolov3"
"Zhongdao/Towards-Realtime-MOT" -> "shijieS/SST"
"Zhongdao/Towards-Realtime-MOT" -> "visionml/pytracking" ["e"=1]
"xingyizhou/CenterTrack" -> "ifzhang/FairMOT"
"xingyizhou/CenterTrack" -> "Zhongdao/Towards-Realtime-MOT"
"xingyizhou/CenterTrack" -> "xingyizhou/CenterNet" ["e"=1]
"xingyizhou/CenterTrack" -> "phil-bergmann/tracking_wo_bnw"
"xingyizhou/CenterTrack" -> "tianweiy/CenterPoint" ["e"=1]
"xingyizhou/CenterTrack" -> "SpyderXu/multi-object-tracking-paper-list"
"xingyizhou/CenterTrack" -> "xinshuoweng/AB3DMOT" ["e"=1]
"xingyizhou/CenterTrack" -> "PeizeSun/TransTrack"
"xingyizhou/CenterTrack" -> "ZQPei/deep_sort_pytorch"
"xingyizhou/CenterTrack" -> "nwojke/deep_sort"
"xingyizhou/CenterTrack" -> "cheind/py-motmetrics"
"xingyizhou/CenterTrack" -> "xingyizhou/CenterNet2" ["e"=1]
"xingyizhou/CenterTrack" -> "JialianW/TraDeS"
"xingyizhou/CenterTrack" -> "ifzhang/ByteTrack"
"xingyizhou/CenterTrack" -> "kimyoon-young/centerNet-deep-sort"
"SysCV/qdtrack" -> "TAO-Dataset/tao" ["e"=1]
"SysCV/qdtrack" -> "PeizeSun/TransTrack"
"SysCV/qdtrack" -> "JudasDie/SOTS" ["e"=1]
"SysCV/qdtrack" -> "yihongXU/TransCenter"
"SysCV/qdtrack" -> "MedChaabane/DEFT"
"SysCV/qdtrack" -> "JialianW/TraDeS"
"SysCV/qdtrack" -> "megvii-research/MOTR"
"SysCV/qdtrack" -> "pjl1995/CTracker"
"SysCV/qdtrack" -> "xingyizhou/GTR"
"SysCV/qdtrack" -> "megvii-research/MOTRv2"
"SysCV/qdtrack" -> "SysCV/pcan"
"SysCV/qdtrack" -> "CaptainEven/MCMOT"
"SysCV/qdtrack" -> "timmeinhardt/trackformer"
"SysCV/qdtrack" -> "dvl-tum/mot_neural_solver"
"SysCV/qdtrack" -> "DanceTrack/DanceTrack"
"JudasDie/SOTS" -> "MedChaabane/DEFT" ["e"=1]
"JudasDie/SOTS" -> "JialianW/TraDeS" ["e"=1]
"JudasDie/SOTS" -> "CaptainEven/MCMOT" ["e"=1]
"JudasDie/SOTS" -> "PeizeSun/TransTrack" ["e"=1]
"pythonlessons/TensorFlow-2.x-YOLOv3" -> "theAIGuysCode/yolov3_deepsort" ["e"=1]
"pythonlessons/TensorFlow-2.x-YOLOv3" -> "LeonLok/Deep-SORT-YOLOv4" ["e"=1]
"pythonlessons/TensorFlow-2.x-YOLOv3" -> "theAIGuysCode/yolov4-deepsort" ["e"=1]
"pythonlessons/TensorFlow-2.x-YOLOv3" -> "emasterclassacademy/Single-Multiple-Custom-Object-Detection-and-Tracking" ["e"=1]
"pythonlessons/TensorFlow-2.x-YOLOv3" -> "theAIGuysCode/yolov4-custom-functions" ["e"=1]
"pythonlessons/TensorFlow-2.x-YOLOv3" -> "LeonLok/Multi-Camera-Live-Object-Tracking" ["e"=1]
"mims-harvard/nimfa" -> "cthurau/pymf"
"mims-harvard/nimfa" -> "hiroyuki-kasai/NMFLibrary"
"mims-harvard/nimfa" -> "kimjingu/nonnegfac-python"
"mims-harvard/nimfa" -> "trigeorgis/Deep-Semi-NMF"
"mims-harvard/nimfa" -> "mims-harvard/scikit-fusion"
"mims-harvard/nimfa" -> "yoyolicoris/pytorch-NMF" ["e"=1]
"mims-harvard/nimfa" -> "JuliaStats/NMF.jl"
"mims-harvard/nimfa" -> "benanne/wmf" ["e"=1]
"mims-harvard/nimfa" -> "benedekrozemberczki/DANMF" ["e"=1]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "ahmetozlu/tensorflow_object_counting_api" ["e"=1]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "theAIGuysCode/yolov4-custom-functions" ["e"=1]
"eddyhkchiu/mahalanobis_3d_multi_object_tracking" -> "ZwwWayne/mmMOT" ["e"=1]
"eddyhkchiu/mahalanobis_3d_multi_object_tracking" -> "tobiasfshr/MOTSFusion" ["e"=1]
"VisDrone/DroneVehicle" -> "VisDrone/VisDrone-Dataset" ["e"=1]
"gnebehay/OpenTLD" -> "DaHoC/trainHOG" ["e"=1]
"1044197988/Python-Image-feature-extraction" -> "CHNicelee/HOG_SVM" ["e"=1]
"PyRetri/PyRetri" -> "layumi/AICIty-reID-2020" ["e"=1]
"232525/ViBe.python" -> "232525/ViBe.Cython"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "augmentedstartups/YOLOv4-Tutorials" ["e"=1]
"andrewssobral/imtsl" -> "andrewssobral/mtt"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "Sharpiless/Yolov5-Deepsort"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "Sharpiless/Yolov5-deepsort-inference"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "duongcongnha/Vehicle-tracking"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "dyh/unbox_yolov5_deepsort_counting"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "bharath5673/StrongSORT-YOLO"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "deshwalmahesh/yolov7-deepsort-tracking"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "JackWoo0831/Yolov7-tracker"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "ZQPei/deep_sort_pytorch"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "mikel-brostrom/boxmot"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "mikel-brostrom/Yolov3_DeepSort_Pytorch"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "xuarehere/yolo_series_deepsort_pytorch"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "theAIGuysCode/yolov4-deepsort"
"HowieMa/DeepSORT_YOLOv5_Pytorch" -> "nicedaddy/Yolov5_DeepSort_Pytorch_lane_detection" ["e"=1]
"GeekAlexis/FastMOT" -> "Zhongdao/Towards-Realtime-MOT"
"GeekAlexis/FastMOT" -> "ifzhang/FairMOT"
"GeekAlexis/FastMOT" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"GeekAlexis/FastMOT" -> "jkjung-avt/tensorrt_demos" ["e"=1]
"GeekAlexis/FastMOT" -> "JDAI-CV/fast-reid" ["e"=1]
"GeekAlexis/FastMOT" -> "ZQPei/deep_sort_pytorch"
"GeekAlexis/FastMOT" -> "xingyizhou/CenterTrack"
"GeekAlexis/FastMOT" -> "LeonLok/Deep-SORT-YOLOv4"
"GeekAlexis/FastMOT" -> "theAIGuysCode/yolov4-deepsort"
"GeekAlexis/FastMOT" -> "CaptainEven/MCMOT"
"GeekAlexis/FastMOT" -> "ceccocats/tkDNN" ["e"=1]
"GeekAlexis/FastMOT" -> "Smorodov/Multitarget-tracker"
"GeekAlexis/FastMOT" -> "amazon-science/siam-mot"
"GeekAlexis/FastMOT" -> "WongKinYiu/ScaledYOLOv4" ["e"=1]
"GeekAlexis/FastMOT" -> "wmuron/motpy"
"cfotache/pytorch_custom_yolo_training" -> "michhar/pytorch-yolo-v3-custom"
"andrewssobral/lrslibrary" -> "stephenbeckr/fastRPCA"
"andrewssobral/lrslibrary" -> "canyilu/LibADMM-toolbox"
"andrewssobral/lrslibrary" -> "dlaptev/RobustPCA"
"andrewssobral/lrslibrary" -> "andrewssobral/mctc4bmi"
"andrewssobral/lrslibrary" -> "andrewssobral/bgslibrary"
"andrewssobral/lrslibrary" -> "canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA"
"andrewssobral/lrslibrary" -> "jkarnows/rpcaADMM"
"andrewssobral/lrslibrary" -> "murari023/awesome-background-subtraction"
"andrewssobral/lrslibrary" -> "andrewssobral/mtt"
"andrewssobral/lrslibrary" -> "gaochen315/panoramicRPCA"
"andrewssobral/lrslibrary" -> "zhaoxile/reproducible-tensor-completion-state-of-the-art"
"andrewssobral/lrslibrary" -> "hiroyuki-kasai/NMFLibrary"
"andrewssobral/lrslibrary" -> "andrewssobral/ostd"
"andrewssobral/lrslibrary" -> "lim-anggun/FgSegNet_v2"
"andrewssobral/lrslibrary" -> "lim-anggun/FgSegNet"
"zhaoxile/reproducible-tensor-completion-state-of-the-art" -> "Kaimaoge/Tensor-decomposition-completion-and-recovery-papers-and-codes"
"zhaoxile/reproducible-tensor-completion-state-of-the-art" -> "xinychen/Tensor4ML"
"zhaoxile/reproducible-tensor-completion-state-of-the-art" -> "canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA"
"zhaoxile/reproducible-tensor-completion-state-of-the-art" -> "xinychen/geotensor"
"zhaoxile/reproducible-tensor-completion-state-of-the-art" -> "jamiezeminzhang/Tensor_Completion_and_Tensor_RPCA"
"zhaoxile/reproducible-tensor-completion-state-of-the-art" -> "wanghailin97/Guaranteed-Tensor-Recovery-Fused-Low-rankness-and-Smoothness"
"zhaoxile/reproducible-tensor-completion-state-of-the-art" -> "canyilu/Tensor-tensor-product-toolbox"
"zhaoxile/reproducible-tensor-completion-state-of-the-art" -> "canyilu/tensor-completion-tensor-recovery"
"zhaoxile/reproducible-tensor-completion-state-of-the-art" -> "qbzhao/BCPF"
"zhaoxile/reproducible-tensor-completion-state-of-the-art" -> "YisiLuo/Continuous-Tensor-Toolbox"
"anmspro/Traffic-Signal-Violation-Detection-System" -> "rahatzamancse/Traffic-Rules-Violation-Detection"
"anmspro/Traffic-Signal-Violation-Detection-System" -> "ShreyAmbesh/Traffic-Rule-Violation-Detection-System"
"anmspro/Traffic-Signal-Violation-Detection-System" -> "rohit9934/Traffic-Rules-Violation-detection-system"
"anmspro/Traffic-Signal-Violation-Detection-System" -> "anmspro/Turbulent-Traveler-Full-Stack-Web-Development"
"anmspro/Traffic-Signal-Violation-Detection-System" -> "anmspro/DBMS-Traveling_Management_System"
"anmspro/Traffic-Signal-Violation-Detection-System" -> "anmspro/Intro-to-Tensorflow-for-Deep-Learning-Udacity"
"anmspro/Traffic-Signal-Violation-Detection-System" -> "hoanglehaithanh/Traffic-Sign-Detection" ["e"=1]
"anmspro/Traffic-Signal-Violation-Detection-System" -> "anmspro/Smart-Car-Parking-System"
"anmspro/Traffic-Signal-Violation-Detection-System" -> "sakibreza/Traffic-Rules-Violation-Detection-System"
"anmspro/Traffic-Signal-Violation-Detection-System" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"emasterclassacademy/Single-Multiple-Custom-Object-Detection-and-Tracking" -> "openremote/or-objectdetection"
"RizwanMunawar/Face-recognition-using-opencv-computer-vision-" -> "RizwanMunawar/Houses-price-prediction-web-app-machine-learning-"
"icarofua/vehicle-rear" -> "BravoLu/OpenVehicleReID"
"icarofua/vehicle-rear" -> "Jakel21/vehicle-ReID-baseline"
"theAIGuysCode/yolov4-custom-functions" -> "theAIGuysCode/tensorflow-yolov4-tflite"
"theAIGuysCode/yolov4-custom-functions" -> "theAIGuysCode/YOLOv4-Cloud-Tutorial"
"theAIGuysCode/yolov4-custom-functions" -> "theAIGuysCode/OIDv4_ToolKit"
"theAIGuysCode/yolov4-custom-functions" -> "theAIGuysCode/yolov4-deepsort"
"theAIGuysCode/yolov4-custom-functions" -> "LeonLok/Deep-SORT-YOLOv4"
"theAIGuysCode/yolov4-custom-functions" -> "hunglc007/tensorflow-yolov4-tflite" ["e"=1]
"theAIGuysCode/yolov4-custom-functions" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"theAIGuysCode/yolov4-custom-functions" -> "theAIGuysCode/Object-Detection-API"
"theAIGuysCode/yolov4-custom-functions" -> "pythonlessons/TensorFlow-2.x-YOLOv3" ["e"=1]
"theAIGuysCode/yolov4-custom-functions" -> "hritik7080/Car-License-Plate-Recognition"
"theAIGuysCode/yolov4-custom-functions" -> "DoubangoTelecom/ultimateALPR-SDK" ["e"=1]
"theAIGuysCode/yolov4-custom-functions" -> "augmentedstartups/YOLOv4-Tutorials"
"theAIGuysCode/yolov4-custom-functions" -> "theAIGuysCode/Download-Google-Images"
"theAIGuysCode/yolov4-custom-functions" -> "SoloSynth1/tensorflow-yolov4"
"theAIGuysCode/yolov4-custom-functions" -> "TNTWEN/OpenVINO-YOLOV4" ["e"=1]
"PyImageSearch/imutils" -> "jeffbass/imagezmq" ["e"=1]
"PyImageSearch/imutils" -> "nwojke/deep_sort" ["e"=1]
"PyImageSearch/imutils" -> "abewley/sort" ["e"=1]
"wmuron/motpy" -> "adipandas/multi-object-tracker"
"wmuron/motpy" -> "GeekAlexis/FastMOT"
"wmuron/motpy" -> "Kazuhito00/mediapipe-python-sample" ["e"=1]
"wmuron/motpy" -> "Kazuhito00/MOT-Tracking-by-Detection-Pipeline" ["e"=1]
"wmuron/motpy" -> "tryolabs/norfair"
"wmuron/motpy" -> "DeNA/nota"
"wmuron/motpy" -> "AIHunters/AcurusTrack" ["e"=1]
"Jason-cs18/Awesome-Multi-Camera-Network" -> "mosamircs/Multi-Camera-Tracking"
"Jason-cs18/Awesome-Multi-Camera-Network" -> "arvganesh/Multi-Camera-Object-Tracking"
"theAIGuysCode/OIDv4_ToolKit" -> "theAIGuysCode/YOLOv4-Cloud-Tutorial"
"theAIGuysCode/OIDv4_ToolKit" -> "theAIGuysCode/Download-Google-Images"
"theAIGuysCode/OIDv4_ToolKit" -> "theAIGuysCode/YoloGenerateTrainingFile"
"theAIGuysCode/OIDv4_ToolKit" -> "theAIGuysCode/tensorflow-yolov4-tflite"
"theAIGuysCode/OIDv4_ToolKit" -> "theAIGuysCode/YOLOv3-Cloud-Tutorial"
"theAIGuysCode/OIDv4_ToolKit" -> "theAIGuysCode/yolov4-custom-functions"
"theAIGuysCode/OIDv4_ToolKit" -> "EscVM/OIDv4_ToolKit" ["e"=1]
"theAIGuysCode/OIDv4_ToolKit" -> "theAIGuysCode/yolov3_deepsort"
"theAIGuysCode/OIDv4_ToolKit" -> "theAIGuysCode/Object-Detection-API"
"oseledets/TT-Toolbox" -> "andrewssobral/tensor_toolbox" ["e"=1]
"gobelc/opf-admm" -> "YuejiangLIU/Optimal_Power_Flow"
"songwsx/person_search_demo" -> "songwsx/RFSong-7993" ["e"=1]
"theAIGuysCode/Object-Detection-API" -> "theAIGuysCode/yolov3_deepsort"
"theAIGuysCode/Object-Detection-API" -> "theAIGuysCode/OIDv4_ToolKit"
"theAIGuysCode/Object-Detection-API" -> "AIZOOTech/flask-object-detection"
"theAIGuysCode/Object-Detection-API" -> "theAIGuysCode/yolo-v3"
"theAIGuysCode/Object-Detection-API" -> "theAIGuysCode/Download-Google-Images"
"theAIGuysCode/Object-Detection-API" -> "theAIGuysCode/tensorflow-yolov4-tflite"
"theAIGuysCode/Object-Detection-API" -> "theAIGuysCode/YOLOv4-Cloud-Tutorial"
"theAIGuysCode/Object-Detection-API" -> "VictorRancesCode/FlaskObjectDetection"
"theAIGuysCode/Object-Detection-API" -> "theAIGuysCode/YOLOv3-Cloud-Tutorial"
"theAIGuysCode/Object-Detection-API" -> "theAIGuysCode/yolov4-custom-functions"
"JonathonLuiten/TrackEval" -> "cheind/py-motmetrics"
"JonathonLuiten/TrackEval" -> "dendorferpatrick/MOTChallengeEvalKit"
"JonathonLuiten/TrackEval" -> "luanshiyinyang/awesome-multiple-object-tracking"
"JonathonLuiten/TrackEval" -> "noahcao/OC_SORT"
"JonathonLuiten/TrackEval" -> "dyhBUPT/StrongSORT"
"JonathonLuiten/TrackEval" -> "NirAharon/BoT-SORT"
"JonathonLuiten/TrackEval" -> "DanceTrack/DanceTrack"
"JonathonLuiten/TrackEval" -> "PeizeSun/TransTrack"
"JonathonLuiten/TrackEval" -> "ifzhang/ByteTrack"
"JonathonLuiten/TrackEval" -> "megvii-research/MOTR"
"JonathonLuiten/TrackEval" -> "ifzhang/FairMOT"
"JonathonLuiten/TrackEval" -> "xingyizhou/CenterTrack"
"JonathonLuiten/TrackEval" -> "megvii-research/MOTRv2"
"JonathonLuiten/TrackEval" -> "timmeinhardt/trackformer"
"JonathonLuiten/TrackEval" -> "JackWoo0831/Yolov7-tracker"
"cthurau/pymf" -> "ChrisSchinnerl/pymf3"
"cthurau/pymf" -> "mims-harvard/nimfa"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "LeonLok/Deep-SORT-YOLOv4"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "GeekAlexis/FastMOT"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "yehengchen/Object-Detection-and-Tracking"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "theAIGuysCode/yolov4-deepsort"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "JunweiLiang/Object_Detection_Tracking"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "jeffbass/imagezmq"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "Zhongdao/Towards-Realtime-MOT"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "adipandas/multi-object-tracker"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "ZQPei/deep_sort_pytorch"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "jkjung-avt/tensorrt_demos" ["e"=1]
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "bharath5673/StrongSORT-YOLO"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "mikel-brostrom/boxmot"
"LeonLok/Multi-Camera-Live-Object-Tracking" -> "GehenHe/TRACTA"
"guptavasu1213/Yolo-Vehicle-Counter" -> "CREESTL/CarCounterYOLOv3"
"guptavasu1213/Yolo-Vehicle-Counter" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"guptavasu1213/Yolo-Vehicle-Counter" -> "kaylode/vehicle-counting" ["e"=1]
"guptavasu1213/Yolo-Vehicle-Counter" -> "bamwani/vehicle-counting-using-python-yolo"
"guptavasu1213/Yolo-Vehicle-Counter" -> "wsh122333/Multi-type_vehicles_flow_statistics"
"lbin/DCNv2" -> "CaptainEven/MCMOT" ["e"=1]
"lbin/DCNv2" -> "xingyizhou/CenterTrack" ["e"=1]
"lbin/DCNv2" -> "JialianW/TraDeS" ["e"=1]
"lbin/DCNv2" -> "PeizeSun/TransTrack" ["e"=1]
"theAIGuysCode/YOLOv3-Cloud-Tutorial" -> "theAIGuysCode/YOLOv4-Cloud-Tutorial"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "theAIGuysCode/OIDv4_ToolKit"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "theAIGuysCode/tensorflow-yolov4-tflite"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "theAIGuysCode/YOLOv3-Cloud-Tutorial"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "theAIGuysCode/yolov4-custom-functions"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "theAIGuysCode/Download-Google-Images"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "theAIGuysCode/yolov3_deepsort"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "theAIGuysCode/Object-Detection-API"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "augmentedstartups/YOLOv4-Tutorials"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "theAIGuysCode/YoloGenerateTrainingFile"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "theAIGuysCode/yolov4-deepsort"
"theAIGuysCode/YOLOv4-Cloud-Tutorial" -> "hhk7734/tensorflow-yolov4" ["e"=1]
"wudashuo/yolov5" -> "Sharpiless/Yolov5-Deepsort" ["e"=1]
"wudashuo/yolov5" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"Kevinnan-teen/Intelligent-Traffic-Based-On-CV" -> "WebPrague/PedestrianDetectionSystem"
"Kevinnan-teen/Intelligent-Traffic-Based-On-CV" -> "1461521844lijin/trt_yolo_video_pipeline" ["e"=1]
"KeyForce/Cascade-RCNN-Tracking" -> "CaptainEven/MCMOT"
"KeyForce/Cascade-RCNN-Tracking" -> "CaptainEven/YOLOV4_MCMOT"
"KeyForce/Cascade-RCNN-Tracking" -> "pjl1995/CTracker"
"theAIGuysCode/tensorflow-yolov4-tflite" -> "theAIGuysCode/yolov4-custom-functions"
"theAIGuysCode/tensorflow-yolov4-tflite" -> "theAIGuysCode/YOLOv4-Cloud-Tutorial"
"theAIGuysCode/tensorflow-yolov4-tflite" -> "hunglc007/tensorflow-yolov4-tflite" ["e"=1]
"theAIGuysCode/tensorflow-yolov4-tflite" -> "theAIGuysCode/OIDv4_ToolKit"
"theAIGuysCode/tensorflow-yolov4-tflite" -> "theAIGuysCode/Download-Google-Images"
"theAIGuysCode/tensorflow-yolov4-tflite" -> "theAIGuysCode/yolov4-deepsort"
"theAIGuysCode/tensorflow-yolov4-tflite" -> "theAIGuysCode/Object-Detection-API"
"theAIGuysCode/tensorflow-yolov4-tflite" -> "haroonshakeel/tensorflow-yolov4-tflite"
"theAIGuysCode/tensorflow-yolov4-tflite" -> "LeonLok/Deep-SORT-YOLOv4"
"bismex/Awesome-vehicle-re-identification" -> "layumi/Vehicle_reID-Collection"
"bismex/Awesome-vehicle-re-identification" -> "Jakel21/vehicle-ReID-baseline"
"bismex/Awesome-vehicle-re-identification" -> "knwng/awesome-vehicle-re-identification"
"bismex/Awesome-vehicle-re-identification" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"bismex/Awesome-vehicle-re-identification" -> "PKU-IMRE/VERI-Wild"
"bismex/Awesome-vehicle-re-identification" -> "bismex/Awesome-cross-modality-person-re-identification" ["e"=1]
"bismex/Awesome-vehicle-re-identification" -> "silverbulletmdc/PVEN"
"bismex/Awesome-vehicle-re-identification" -> "Xiangyu-CAS/AICity2020-VOC-ReID"
"bismex/Awesome-vehicle-re-identification" -> "layumi/AICIty-reID-2020"
"bismex/Awesome-vehicle-re-identification" -> "yorkeyao/VehicleX"
"bismex/Awesome-vehicle-re-identification" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation"
"bismex/Awesome-vehicle-re-identification" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"bismex/Awesome-vehicle-re-identification" -> "zhangxinyu-xyz/PGAN-VehicleRe-ID"
"bismex/Awesome-vehicle-re-identification" -> "cybercore-co-ltd/track2_aicity_2021"
"chhshen/pedestrian-detection" -> "Farious/PedestrianDetector"
"chhshen/pedestrian-detection" -> "rodrigob/barinova_pedestrians_detection"
"chhshen/pedestrian-detection" -> "LevinJ/Pedestrian-Detection-Project"
"theAIGuysCode/Download-Google-Images" -> "theAIGuysCode/YoloGenerateTrainingFile"
"facebookarchive/fbpca" -> "dganguli/robust-pca"
"facebookarchive/fbpca" -> "joschu/cgt" ["e"=1]
"facebookarchive/fbpca" -> "xdata-skylark/libskylark"
"VDIGPKU/CBNet_caffe" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"dendorferpatrick/MOTChallengeEvalKit" -> "JonathonLuiten/TrackEval"
"dendorferpatrick/MOTChallengeEvalKit" -> "cheind/py-motmetrics"
"dendorferpatrick/MOTChallengeEvalKit" -> "pjl1995/CTracker"
"dendorferpatrick/MOTChallengeEvalKit" -> "dvl-tum/mot_neural_solver"
"dendorferpatrick/MOTChallengeEvalKit" -> "longcw/MOTDT"
"dendorferpatrick/MOTChallengeEvalKit" -> "CaptainEven/MCMOT"
"dendorferpatrick/MOTChallengeEvalKit" -> "PeizeSun/TransTrack"
"dendorferpatrick/MOTChallengeEvalKit" -> "phil-bergmann/tracking_wo_bnw"
"dendorferpatrick/MOTChallengeEvalKit" -> "yihongXU/TransCenter"
"dendorferpatrick/MOTChallengeEvalKit" -> "timmeinhardt/trackformer"
"dendorferpatrick/MOTChallengeEvalKit" -> "shenh10/mot_evaluation"
"dendorferpatrick/MOTChallengeEvalKit" -> "MedChaabane/DEFT"
"dendorferpatrick/MOTChallengeEvalKit" -> "VisualComputingInstitute/mots_tools"
"dendorferpatrick/MOTChallengeEvalKit" -> "JudasDie/SOTS" ["e"=1]
"dendorferpatrick/MOTChallengeEvalKit" -> "yongxinw/GSDT"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "nightmaredimple/libmot"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "BoPang1996/TubeTK"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "detectRecog/PointTrack"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "pjl1995/CTracker"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "dvl-tum/mot_neural_solver"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "AndreaHor/LifT_Solver"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "yihongXU/deepMOT"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "huanglianghua/mot-papers"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "jizhu1023/DMAN_MOT"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "yinjunbo/UMA-MOT"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "selflein/GraphNN-Multi-Object-Tracking"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "phil-bergmann/tracking_wo_bnw"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "SpyderXu/multi-object-tracking-paper-list"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "PeizeSun/TransTrack"
"nightmaredimple/Multi-object-Tracking-paper-code-list" -> "Zhongdao/UniTrack"
"iwatake2222/play_with_tflite" -> "apennisi/deep_sort" ["e"=1]
"LeonLok/Deep-SORT-YOLOv4" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"LeonLok/Deep-SORT-YOLOv4" -> "theAIGuysCode/yolov4-deepsort"
"LeonLok/Deep-SORT-YOLOv4" -> "theAIGuysCode/yolov3_deepsort"
"LeonLok/Deep-SORT-YOLOv4" -> "yehengchen/Object-Detection-and-Tracking"
"LeonLok/Deep-SORT-YOLOv4" -> "Ma-Dan/keras-yolo4" ["e"=1]
"LeonLok/Deep-SORT-YOLOv4" -> "GeekAlexis/FastMOT"
"LeonLok/Deep-SORT-YOLOv4" -> "emasterclassacademy/Single-Multiple-Custom-Object-Detection-and-Tracking"
"LeonLok/Deep-SORT-YOLOv4" -> "Qidian213/deep_sort_yolov3"
"LeonLok/Deep-SORT-YOLOv4" -> "abhyantrika/nanonets_object_tracking"
"LeonLok/Deep-SORT-YOLOv4" -> "theAIGuysCode/yolov4-custom-functions"
"LeonLok/Deep-SORT-YOLOv4" -> "Stephenfang51/tracklite"
"LeonLok/Deep-SORT-YOLOv4" -> "pythonlessons/TensorFlow-2.x-YOLOv3" ["e"=1]
"LeonLok/Deep-SORT-YOLOv4" -> "AnshulSood11/PPE-Detection-YOLO-Deep_SORT" ["e"=1]
"LeonLok/Deep-SORT-YOLOv4" -> "ZQPei/deep_sort_pytorch"
"LeonLok/Deep-SORT-YOLOv4" -> "nwojke/deep_sort"
"Eruvae/yolact_ros" -> "Geonhee-LEE/yolact_ros"
"Eruvae/yolact_ros" -> "IntelligentRoboticsLabs/yolact_ros_3d"
"layumi/AICIty-reID-2020" -> "layumi/Vehicle_reID-Collection"
"layumi/AICIty-reID-2020" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"layumi/AICIty-reID-2020" -> "Xiangyu-CAS/AICity2020-VOC-ReID"
"layumi/AICIty-reID-2020" -> "JDAI-CV/VeRidataset"
"layumi/AICIty-reID-2020" -> "NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams"
"layumi/AICIty-reID-2020" -> "PKU-IMRE/VERI-Wild"
"layumi/AICIty-reID-2020" -> "michuanhaohao/AICITY2021_Track2_DMT"
"layumi/AICIty-reID-2020" -> "yorkeyao/VehicleX"
"layumi/AICIty-reID-2020" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"layumi/AICIty-reID-2020" -> "mangye16/ReID-Survey" ["e"=1]
"layumi/AICIty-reID-2020" -> "silverbulletmdc/PVEN"
"layumi/AICIty-reID-2020" -> "bismex/Awesome-vehicle-re-identification"
"layumi/AICIty-reID-2020" -> "cybercore-co-ltd/track2_aicity_2021"
"layumi/AICIty-reID-2020" -> "Jakel21/vehicle-ReID-baseline"
"layumi/AICIty-reID-2020" -> "JDAI-CV/fast-reid" ["e"=1]
"CaptainEven/FairMOTVehicle" -> "CaptainEven/MCMOT"
"CaptainEven/FairMOTVehicle" -> "CaptainEven/YOLOV4_MCMOT"
"CaptainEven/FairMOTVehicle" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"CaptainEven/FairMOTVehicle" -> "NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams"
"CaptainEven/FairMOTVehicle" -> "KeyForce/Cascade-RCNN-Tracking"
"CaptainEven/FairMOTVehicle" -> "PKU-IMRE/VERI-Wild"
"CaptainEven/FairMOTVehicle" -> "KevinQian97/ELECTRICITY-MTMC"
"CaptainEven/FairMOTVehicle" -> "yihongXU/TransCenter"
"JialeCao001/SipMask" -> "VisualComputingInstitute/TrackR-CNN" ["e"=1]
"Gupu25/PeopleCounter" -> "sarful/People-counter-opencv-python3"
"xmfbit/PedestrianDetection" -> "icsfy/Pedestrian_Detection"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"silverbulletmdc/PVEN" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation"
"silverbulletmdc/PVEN" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"silverbulletmdc/PVEN" -> "Zhongdao/VehicleReIDKeyPointData"
"silverbulletmdc/PVEN" -> "emdata-ailab/VANET"
"silverbulletmdc/PVEN" -> "Jakel21/vehicle-ReID-baseline"
"silverbulletmdc/PVEN" -> "layumi/Vehicle_reID-Collection"
"silverbulletmdc/PVEN" -> "cybercore-co-ltd/track2_aicity_2021"
"silverbulletmdc/PVEN" -> "Xiangyu-CAS/AICity2020-VOC-ReID"
"silverbulletmdc/PVEN" -> "PKU-IMRE/VERI-Wild"
"silverbulletmdc/PVEN" -> "Xuanmeng-Zhang/AICITY2021-Track2"
"silverbulletmdc/PVEN" -> "bismex/Awesome-vehicle-re-identification"
"hritik7080/Car-License-Plate-Recognition" -> "angooj/Vehicle-Number-Plate-detection-Using-Tensorflow"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "layumi/AICIty-reID-2020"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "heshuting555/NAIC_Person_ReID_DMT" ["e"=1]
"heshuting555/AICITY2020_DMT_VehicleReID" -> "Xiangyu-CAS/AICity2020-VOC-ReID"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "silverbulletmdc/PVEN"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "michuanhaohao/AICITY2021_Track2_DMT"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "DTennant/reid_baseline_with_syncbn"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "layumi/Vehicle_reID-Collection"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "bismex/Awesome-vehicle-re-identification"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "lulujianjie/person-reid-tiny-baseline" ["e"=1]
"heshuting555/AICITY2020_DMT_VehicleReID" -> "JDAI-CV/VeRidataset"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "cybercore-co-ltd/track2_aicity_2021"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "yorkeyao/VehicleX"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "Jakel21/vehicle-ReID-baseline"
"heshuting555/AICITY2020_DMT_VehicleReID" -> "NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams"
"yinjunbo/UMA-MOT" -> "BoPang1996/TubeTK"
"yinjunbo/UMA-MOT" -> "selflein/GraphNN-Multi-Object-Tracking"
"yinjunbo/UMA-MOT" -> "AndreaHor/LifT_Solver"
"yinjunbo/UMA-MOT" -> "pjl1995/CTracker"
"yinjunbo/UMA-MOT" -> "shijieS/DMMN"
"dvl-tum/mot_neural_solver" -> "selflein/GraphNN-Multi-Object-Tracking"
"dvl-tum/mot_neural_solver" -> "phil-bergmann/tracking_wo_bnw"
"dvl-tum/mot_neural_solver" -> "yihongXU/deepMOT"
"dvl-tum/mot_neural_solver" -> "daip13/LPC_MOT"
"dvl-tum/mot_neural_solver" -> "PeizeSun/TransTrack"
"dvl-tum/mot_neural_solver" -> "nightmaredimple/libmot"
"dvl-tum/mot_neural_solver" -> "yongxinw/GSDT"
"dvl-tum/mot_neural_solver" -> "AndreaHor/LifT_Solver"
"dvl-tum/mot_neural_solver" -> "JialianW/TraDeS"
"dvl-tum/mot_neural_solver" -> "shijieS/SST"
"dvl-tum/mot_neural_solver" -> "nightmaredimple/Multi-object-Tracking-paper-code-list"
"dvl-tum/mot_neural_solver" -> "dendorferpatrick/MOTChallengeEvalKit"
"dvl-tum/mot_neural_solver" -> "JudasDie/SOTS" ["e"=1]
"dvl-tum/mot_neural_solver" -> "MedChaabane/DEFT"
"dvl-tum/mot_neural_solver" -> "yihongXU/TransCenter"
"pprp/voc2007_for_yolo_torch" -> "pprp/deep_sort_yolov3_pytorch" ["e"=1]
"shantnu/FaceDetect" -> "mrnugget/opencv-haar-classifier-training" ["e"=1]
"shantnu/FaceDetect" -> "ITCoders/Human-detection-and-Tracking" ["e"=1]
"lucasjinreal/DCNv2_latest" -> "xingyizhou/CenterTrack" ["e"=1]
"vipul-sharma20/gesture-opencv" -> "jbeale1/OpenCV" ["e"=1]
"haroonshakeel/tensorflow-yolov4-tflite" -> "pramod722445/Object_Detection_App"
"KevinQian97/ELECTRICITY-MTMC" -> "LCFractal/AIC21-MTMC"
"KevinQian97/ELECTRICITY-MTMC" -> "NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams"
"KevinQian97/ELECTRICITY-MTMC" -> "GehenHe/TRACTA"
"KevinQian97/ELECTRICITY-MTMC" -> "didi/mtmc-vt"
"KevinQian97/ELECTRICITY-MTMC" -> "uark-cviu/DyGLIP"
"KevinQian97/ELECTRICITY-MTMC" -> "NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams"
"HaozheQi/P2B" -> "ZwwWayne/mmMOT" ["e"=1]
"pjl1995/CTracker" -> "BoPang1996/TubeTK"
"pjl1995/CTracker" -> "detectRecog/PointTrack"
"pjl1995/CTracker" -> "yinjunbo/UMA-MOT"
"pjl1995/CTracker" -> "shijieS/SST"
"pjl1995/CTracker" -> "selflein/GraphNN-Multi-Object-Tracking"
"pjl1995/CTracker" -> "MedChaabane/DEFT"
"pjl1995/CTracker" -> "nightmaredimple/libmot"
"pjl1995/CTracker" -> "JudasDie/SOTS" ["e"=1]
"pjl1995/CTracker" -> "JialianW/TraDeS"
"pjl1995/CTracker" -> "yihongXU/deepMOT"
"pjl1995/CTracker" -> "PeizeSun/TransTrack"
"pjl1995/CTracker" -> "amazon-science/siam-mot"
"pjl1995/CTracker" -> "dendorferpatrick/MOTChallengeEvalKit"
"pjl1995/CTracker" -> "phil-bergmann/tracking_wo_bnw"
"pjl1995/CTracker" -> "CaptainEven/MCMOT"
"Stephenfang51/tracklite" -> "hungpowang/YOLOv4_MOT_TensorRT"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "samihormi/Multi-Camera-Person-Tracking-and-Re-Identification"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "koehlp/wda_tracker"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "nolanzzz/mtmct"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "ipl-uw/AIC23_Track1_UWIPL_ETRI"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "JunweiLiang/Object_Detection_Tracking"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "schuar-iosb/mta-dataset"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "hafidh561/multi-camera-people-tracking"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "hou-yz/open-reid-tracking"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "mikwieczorek/centroids-reid" ["e"=1]
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "arvganesh/Multi-Camera-Object-Tracking"
"SurajDonthi/Multi-Camera-Person-Re-Identification" -> "SherryJYC/paper-MTMC"
"ucuapps/top-view-multi-person-tracking" -> "Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View"
"ZwwWayne/mmMOT" -> "eddyhkchiu/mahalanobis_3d_multi_object_tracking" ["e"=1]
"ZwwWayne/mmMOT" -> "tobiasfshr/MOTSFusion"
"ZwwWayne/mmMOT" -> "yihongXU/deepMOT"
"ZwwWayne/mmMOT" -> "HaozheQi/P2B" ["e"=1]
"ZwwWayne/mmMOT" -> "JunaidCS032/MOTBeyondPixels"
"ZwwWayne/mmMOT" -> "BoPang1996/TubeTK"
"ZwwWayne/mmMOT" -> "detectRecog/PointTrack"
"ZwwWayne/mmMOT" -> "nightmaredimple/libmot"
"ZwwWayne/mmMOT" -> "selflein/GraphNN-Multi-Object-Tracking"
"ZwwWayne/mmMOT" -> "VisualComputingInstitute/mots_tools"
"ZwwWayne/mmMOT" -> "StanfordVL/JRMOT_ROS" ["e"=1]
"ZwwWayne/mmMOT" -> "shijieS/SST"
"ZwwWayne/mmMOT" -> "qcraftai/simtrack" ["e"=1]
"ZwwWayne/mmMOT" -> "cogsys-tuebingen/CBMOT" ["e"=1]
"ZwwWayne/mmMOT" -> "yinjunbo/UMA-MOT"
"Ma-Dan/keras-yolo4" -> "LeonLok/Deep-SORT-YOLOv4" ["e"=1]
"nightldj/admm_release" -> "gobelc/opf-admm"
"nightldj/admm_release" -> "fangvv/LassoADMM"
"yasenh/libtorch-yolov5" -> "weixu000/libtorch-yolov3-deepsort" ["e"=1]
"theAIGuysCode/yolov3_deepsort" -> "LeonLok/Deep-SORT-YOLOv4"
"theAIGuysCode/yolov3_deepsort" -> "emasterclassacademy/Single-Multiple-Custom-Object-Detection-and-Tracking"
"theAIGuysCode/yolov3_deepsort" -> "abhyantrika/nanonets_object_tracking"
"theAIGuysCode/yolov3_deepsort" -> "theAIGuysCode/yolov4-deepsort"
"theAIGuysCode/yolov3_deepsort" -> "theAIGuysCode/yolo-v3"
"theAIGuysCode/yolov3_deepsort" -> "omarabid59/TensorflowDeepSortTracking"
"theAIGuysCode/yolov3_deepsort" -> "theAIGuysCode/Object-Detection-API"
"theAIGuysCode/yolov3_deepsort" -> "yehengchen/Object-Detection-and-Tracking"
"theAIGuysCode/yolov3_deepsort" -> "mikel-brostrom/Yolov3_DeepSort_Pytorch"
"theAIGuysCode/yolov3_deepsort" -> "openremote/or-objectdetection"
"theAIGuysCode/yolov3_deepsort" -> "theAIGuysCode/OIDv4_ToolKit"
"theAIGuysCode/yolov3_deepsort" -> "pythonlessons/TensorFlow-2.x-YOLOv3" ["e"=1]
"theAIGuysCode/yolov3_deepsort" -> "pprp/deep_sort_yolov3_pytorch"
"theAIGuysCode/yolov3_deepsort" -> "nwojke/cosine_metric_learning"
"theAIGuysCode/yolov3_deepsort" -> "theAIGuysCode/YOLOv4-Cloud-Tutorial"
"dlaptev/RobustPCA" -> "stephenbeckr/fastRPCA"
"dlaptev/RobustPCA" -> "andrewssobral/lrslibrary"
"dlaptev/RobustPCA" -> "weilinear/PyRPCA"
"dlaptev/RobustPCA" -> "dganguli/robust-pca"
"dlaptev/RobustPCA" -> "jamiezeminzhang/Tensor_Completion_and_Tensor_RPCA"
"dlaptev/RobustPCA" -> "canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA"
"indra4837/yolov4_trt_ros" -> "wep21/tensorrt_yolov4_ros"
"JunweiLiang/Multiverse" -> "JunweiLiang/social-distancing-prediction" ["e"=1]
"Xiangyu-CAS/AICity2020-VOC-ReID" -> "layumi/AICIty-reID-2020"
"Xiangyu-CAS/AICity2020-VOC-ReID" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"Xiangyu-CAS/AICity2020-VOC-ReID" -> "whut2962575697/naic_reid"
"Xiangyu-CAS/AICity2020-VOC-ReID" -> "NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams"
"Xiangyu-CAS/AICity2020-VOC-ReID" -> "silverbulletmdc/PVEN"
"Xiangyu-CAS/AICity2020-VOC-ReID" -> "Xiangyu-CAS/Yet-Another-reid-baseline" ["e"=1]
"openremote/or-objectdetection" -> "emasterclassacademy/Single-Multiple-Custom-Object-Detection-and-Tracking"
"mikel-brostrom/Yolov3_DeepSort_Pytorch" -> "pprp/deep_sort_yolov3_pytorch"
"mikel-brostrom/Yolov3_DeepSort_Pytorch" -> "theAIGuysCode/yolov3_deepsort"
"daip13/LPC_MOT" -> "AndreaHor/LifT_Solver"
"daip13/LPC_MOT" -> "songguocode/TADAM"
"daip13/LPC_MOT" -> "jiaweihe1996/GMTracker"
"daip13/LPC_MOT" -> "fatemeh-slh/ArTIST"
"daip13/LPC_MOT" -> "IPapakis/GCNNMatch"
"daip13/LPC_MOT" -> "selflein/GraphNN-Multi-Object-Tracking"
"ozantezcan/BSUV-Net-inference" -> "ozantezcan/BSUV-Net-2.0"
"ozantezcan/BSUV-Net-inference" -> "lav-kush/MotionRec"
"TAO-Dataset/tao" -> "SysCV/qdtrack" ["e"=1]
"LcenArthas/CVWC2019-Amur-Tiger-Re-ID" -> "liuning-scu-cn/AmurTigerReID"
"LcenArthas/CVWC2019-Amur-Tiger-Re-ID" -> "LcenArthas/CVWC2019-Amur-Tiger-Detection"
"LcenArthas/CVWC2019-Amur-Tiger-Re-ID" -> "LcenArthas/JDATA-2019-Snow_leopard"
"LcenArthas/CVWC2019-Amur-Tiger-Re-ID" -> "whut2962575697/naic_reid"
"selflein/GraphNN-Multi-Object-Tracking" -> "dvl-tum/mot_neural_solver"
"selflein/GraphNN-Multi-Object-Tracking" -> "AndreaHor/LifT_Solver"
"selflein/GraphNN-Multi-Object-Tracking" -> "yinjunbo/UMA-MOT"
"selflein/GraphNN-Multi-Object-Tracking" -> "nightmaredimple/libmot"
"selflein/GraphNN-Multi-Object-Tracking" -> "yinizhizhu/GNMOT"
"selflein/GraphNN-Multi-Object-Tracking" -> "BoPang1996/TubeTK"
"selflein/GraphNN-Multi-Object-Tracking" -> "daip13/LPC_MOT"
"selflein/GraphNN-Multi-Object-Tracking" -> "peizhaoli05/EDA_GNN"
"selflein/GraphNN-Multi-Object-Tracking" -> "IPapakis/GCNNMatch"
"selflein/GraphNN-Multi-Object-Tracking" -> "pjl1995/CTracker"
"selflein/GraphNN-Multi-Object-Tracking" -> "yihongXU/TransCenter"
"selflein/GraphNN-Multi-Object-Tracking" -> "xinshuoweng/PTP"
"augmentedstartups/YOLOv4-Tutorials" -> "augmentedstartups/OpenCVAIKitApps"
"chenbinghui1/MHN" -> "whut2962575697/naic_reid" ["e"=1]
"apennisi/deep_sort" -> "bitzy/DeepSort"
"ethereon/subsense" -> "aimeng100/WeSamBE"
"ethereon/subsense" -> "plstcharles/litiv"
"BoPang1996/TubeTK" -> "yinjunbo/UMA-MOT"
"BoPang1996/TubeTK" -> "pjl1995/CTracker"
"BoPang1996/TubeTK" -> "Alpha-Video/AlphaVideo" ["e"=1]
"BoPang1996/TubeTK" -> "selflein/GraphNN-Multi-Object-Tracking"
"BoPang1996/TubeTK" -> "nightmaredimple/libmot"
"BoPang1996/TubeTK" -> "yinizhizhu/GNMOT"
"BoPang1996/TubeTK" -> "shijieS/SST"
"BoPang1996/TubeTK" -> "nightmaredimple/Multi-object-Tracking-paper-code-list"
"BoPang1996/TubeTK" -> "detectRecog/PointTrack"
"BoPang1996/TubeTK" -> "BoPang1996/PGT" ["e"=1]
"BoPang1996/TubeTK" -> "AndreaHor/LifT_Solver"
"xinshuoweng/GNN3DMOT" -> "xinshuoweng/PTP"
"yorkeyao/VehicleX" -> "PKU-IMRE/VERI-Wild"
"yorkeyao/VehicleX" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"yorkeyao/VehicleX" -> "Xiangyu-CAS/AICity2020-VOC-ReID"
"yorkeyao/VehicleX" -> "layumi/AICIty-reID-2020"
"yorkeyao/VehicleX" -> "Zhongdao/VehicleReIDKeyPointData"
"yorkeyao/VehicleX" -> "layumi/Vehicle_reID-Collection"
"yorkeyao/VehicleX" -> "silverbulletmdc/PVEN"
"yorkeyao/VehicleX" -> "bismex/Awesome-vehicle-re-identification"
"yorkeyao/VehicleX" -> "NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams"
"yorkeyao/VehicleX" -> "VehicleReId/VeRi"
"yorkeyao/VehicleX" -> "michuanhaohao/AICITY2021_Track2_DMT"
"yorkeyao/VehicleX" -> "backkon/AICITY2022_Track1_TAG"
"yorkeyao/VehicleX" -> "cybercore-co-ltd/track2_aicity_2021"
"yorkeyao/VehicleX" -> "sxzrt/Instructions-of-the-PersonX-dataset" ["e"=1]
"yorkeyao/VehicleX" -> "sxzrt/Dissecting-Person-Re-ID-from-the-Viewpoint-of-Viewpoint" ["e"=1]
"koehlp/wda_tracker" -> "schuar-iosb/mta-dataset"
"koehlp/wda_tracker" -> "nolanzzz/mtmct"
"koehlp/wda_tracker" -> "lockxuan/non-overlapping_multiple-camera_tracking"
"CaptainEven/MCMOT" -> "CaptainEven/YOLOV4_MCMOT"
"CaptainEven/MCMOT" -> "CaptainEven/FairMOTVehicle"
"CaptainEven/MCMOT" -> "CaptainEven/MCMOT-ByteTrack"
"CaptainEven/MCMOT" -> "JudasDie/SOTS" ["e"=1]
"CaptainEven/MCMOT" -> "JialianW/TraDeS"
"CaptainEven/MCMOT" -> "pjl1995/CTracker"
"CaptainEven/MCMOT" -> "ifzhang/FairMOT"
"CaptainEven/MCMOT" -> "KeyForce/Cascade-RCNN-Tracking"
"CaptainEven/MCMOT" -> "MedChaabane/DEFT"
"CaptainEven/MCMOT" -> "nightmaredimple/libmot"
"CaptainEven/MCMOT" -> "xingyizhou/CenterTrack"
"CaptainEven/MCMOT" -> "PeizeSun/TransTrack"
"CaptainEven/MCMOT" -> "Zhongdao/Towards-Realtime-MOT"
"CaptainEven/MCMOT" -> "dendorferpatrick/MOTChallengeEvalKit"
"CaptainEven/MCMOT" -> "yihongXU/TransCenter"
"heshuting555/NAIC_Person_ReID_DMT" -> "whut2962575697/naic_reid" ["e"=1]
"heshuting555/NAIC_Person_ReID_DMT" -> "heshuting555/AICITY2020_DMT_VehicleReID" ["e"=1]
"heshuting555/NAIC_Person_ReID_DMT" -> "DTennant/reid_baseline_with_syncbn" ["e"=1]
"stephenbeckr/fastRPCA" -> "dlaptev/RobustPCA"
"stephenbeckr/fastRPCA" -> "gaochen315/panoramicRPCA"
"stephenbeckr/fastRPCA" -> "andrewssobral/lrslibrary"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "Xiangyu-CAS/AICity2020-VOC-ReID"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "layumi/AICIty-reID-2020"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "KevinQian97/ELECTRICITY-MTMC"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "selab-hcmus/AI_City_2020"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "wzgwzg/AICity"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "yorkeyao/VehicleX"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "whut2962575697/naic_reid"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "layumi/Vehicle_reID-Collection"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "JDAI-CV/VeRidataset"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "PKU-IMRE/VERI-Wild"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "bismex/Awesome-vehicle-re-identification"
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" -> "knwng/awesome-vehicle-re-identification"
"GehenHe/TRACTA" -> "SherryJYC/paper-MTMC"
"GehenHe/TRACTA" -> "nolanzzz/mtmct"
"GehenHe/TRACTA" -> "uark-cviu/DyGLIP"
"GehenHe/TRACTA" -> "LCFractal/AIC21-MTMC"
"GehenHe/TRACTA" -> "lockxuan/non-overlapping_multiple-camera_tracking"
"GehenHe/TRACTA" -> "KevinQian97/ELECTRICITY-MTMC"
"GehenHe/TRACTA" -> "koehlp/wda_tracker"
"GehenHe/TRACTA" -> "SherryJYC/3D-Tracking-MVS"
"datamllab/pyten" -> "tamu-helios/pyten"
"AndreaHor/LifT_Solver" -> "selflein/GraphNN-Multi-Object-Tracking"
"AndreaHor/LifT_Solver" -> "fatemeh-slh/ArTIST"
"AndreaHor/LifT_Solver" -> "daip13/LPC_MOT"
"nightmaredimple/libmot" -> "nightmaredimple/Multi-object-Tracking-paper-code-list"
"nightmaredimple/libmot" -> "selflein/GraphNN-Multi-Object-Tracking"
"nightmaredimple/libmot" -> "yinjunbo/UMA-MOT"
"nightmaredimple/libmot" -> "BoPang1996/TubeTK"
"nightmaredimple/libmot" -> "dvl-tum/mot_neural_solver"
"nightmaredimple/libmot" -> "shijieS/SST"
"nightmaredimple/libmot" -> "pjl1995/CTracker"
"nightmaredimple/libmot" -> "jizhu1023/DMAN_MOT"
"nightmaredimple/libmot" -> "AndreaHor/LifT_Solver"
"nightmaredimple/libmot" -> "yihongXU/deepMOT"
"nightmaredimple/libmot" -> "phil-bergmann/tracking_wo_bnw"
"nightmaredimple/libmot" -> "CaptainEven/MCMOT"
"nightmaredimple/libmot" -> "ZwwWayne/mmMOT"
"nightmaredimple/libmot" -> "detectRecog/PointTrack"
"nightmaredimple/libmot" -> "GaoangW/TNT"
"wsh122333/Multi-type_vehicles_flow_statistics" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"wsh122333/Multi-type_vehicles_flow_statistics" -> "BenBenee/Traffic-Counting-with-YOLOv3-and-SORT"
"BravoLu/OpenVehicleReID" -> "Jakel21/vehicle-ReID-baseline"
"BravoLu/OpenVehicleReID" -> "icarofua/vehicle-rear"
"BravoLu/OpenVehicleReID" -> "GeoTrouvetout/Vehicle_ReID"
"andrewssobral/mtt" -> "andrewssobral/imtsl"
"andrewssobral/mtt" -> "andrewssobral/tensor_toolbox"
"andrewssobral/mtt" -> "ryotat/tensor"
"msight-tech/research-xbm" -> "whut2962575697/naic_reid" ["e"=1]
"schuar-iosb/mta-dataset" -> "koehlp/wda_tracker"
"schuar-iosb/mta-dataset" -> "nolanzzz/mtmct"
"Alpha-Video/AlphaVideo" -> "BoPang1996/TubeTK" ["e"=1]
"tugot17/YOLO-Object-Counting-API" -> "bharath5673/python-traffic-counter-with-yolo-and-sort"
"tugot17/YOLO-Object-Counting-API" -> "bamwani/car-counting-and-speed-estimation-yolo-sort-python"
"tugot17/YOLO-Object-Counting-API" -> "guptavasu1213/Yolo-Vehicle-Counter"
"songwsx/RFSong-7993" -> "songwsx/RFSong-779"
"songwsx/RFSong-7993" -> "songwsx/RFB-Person"
"songwsx/RFSong-7993" -> "xiaoxiaotao/person-detection"
"songwsx/RFSong-7993" -> "songwsx/person_search_demo" ["e"=1]
"songwsx/RFSong-7993" -> "songwsx/steel-detect"
"songwsx/RFSong-7993" -> "vaesl/LRF-Net" ["e"=1]
"songwsx/RFSong-779" -> "songwsx/RFB-Person"
"songwsx/RFSong-779" -> "songwsx/RFSong-7993"
"songwsx/RFSong-779" -> "songwsx/steel-detect"
"Pirazh/Vehicle_Key_Point_Orientation_Estimation" -> "Zhongdao/VehicleReIDKeyPointData"
"Pirazh/Vehicle_Key_Point_Orientation_Estimation" -> "silverbulletmdc/PVEN"
"Pirazh/Vehicle_Key_Point_Orientation_Estimation" -> "Jakel21/vehicle-ReID-baseline"
"Pirazh/Vehicle_Key_Point_Orientation_Estimation" -> "lxc86739795/vehiclereid_baseline"
"gggcy/AIC2020_ReID" -> "GeoTrouvetout/Vehicle_ReID"
"232525/ViBe.Cython" -> "232525/ViBe.python"
"xuxu116/person_detection_lite" -> "xiaoxiaotao/person-detection"
"KunalArora/multiple-camera_multiple-people_tracking" -> "hafidh561/multi-camera-people-tracking"
"danielgordon10/re3-tensorflow" -> "danielgordon10/re3-pytorch"
"yz93/anchor-diff-VOS" -> "visiontao/uovos" ["e"=1]
"CaptainEven/YOLOV4_MCMOT" -> "CaptainEven/MCMOT"
"CaptainEven/YOLOV4_MCMOT" -> "CaptainEven/FairMOTVehicle"
"anmspro/Intro-to-Tensorflow-for-Deep-Learning-Udacity" -> "anmspro/Turbulent-Traveler-Full-Stack-Web-Development"
"anmspro/Intro-to-Tensorflow-for-Deep-Learning-Udacity" -> "anmspro/DBMS-Traveling_Management_System"
"yinizhizhu/GNMOT" -> "IPapakis/GCNNMatch"
"whut2962575697/naic_reid" -> "heshuting555/NAIC_Person_ReID_DMT" ["e"=1]
"whut2962575697/naic_reid" -> "anxiangsir/NAIC_reid_challenge_rank14_rank25" ["e"=1]
"whut2962575697/naic_reid" -> "Xiangyu-CAS/AICity2020-VOC-ReID"
"detectRecog/PointTrack" -> "pjl1995/CTracker"
"detectRecog/PointTrack" -> "VisualComputingInstitute/mots_tools"
"detectRecog/PointTrack" -> "BoPang1996/TubeTK"
"detectRecog/PointTrack" -> "nightmaredimple/Multi-object-Tracking-paper-code-list"
"detectRecog/PointTrack" -> "VisualComputingInstitute/TrackR-CNN"
"detectRecog/PointTrack" -> "yinjunbo/UMA-MOT"
"detectRecog/PointTrack" -> "ZwwWayne/mmMOT"
"detectRecog/PointTrack" -> "nightmaredimple/libmot"
"detectRecog/PointTrack" -> "PeizeSun/TransTrack"
"detectRecog/PointTrack" -> "zlai0/MAST" ["e"=1]
"detectRecog/PointTrack" -> "yihongXU/deepMOT"
"detectRecog/PointTrack" -> "JialianW/TraDeS"
"songwsx/steel-detect" -> "songwsx/RFB-Person"
"songwsx/steel-detect" -> "songwsx/RFSong-779"
"xinshuoweng/PTP" -> "xinshuoweng/GNN3DMOT"
"IPapakis/GCNNMatch" -> "derkbreeze/LPT" ["e"=1]
"xiaoxiaotao/person-detection" -> "xuxu116/person_detection_lite"
"RizwanMunawar/Houses-price-prediction-web-app-machine-learning-" -> "RizwanMunawar/Face-recognition-using-opencv-computer-vision-"
"RizwanMunawar/Houses-price-prediction-web-app-machine-learning-" -> "RizwanMunawar/YOLO-RX57-FPS-Comparision"
"Megvii-BaseDetection/YOLOX" -> "ifzhang/ByteTrack" ["e"=1]
"Megvii-BaseDetection/YOLOX" -> "mikel-brostrom/boxmot" ["e"=1]
"cnyvfang/labelGo-Yolov5AutoLabelImg" -> "darkpgmr/DarkLabel" ["e"=1]
"Sharpiless/Yolov5-Deepsort" -> "Sharpiless/Yolov5-deepsort-inference"
"Sharpiless/Yolov5-Deepsort" -> "dyh/unbox_yolov5_deepsort_counting"
"Sharpiless/Yolov5-Deepsort" -> "HowieMa/DeepSORT_YOLOv5_Pytorch"
"Sharpiless/Yolov5-Deepsort" -> "mikel-brostrom/boxmot"
"Sharpiless/Yolov5-Deepsort" -> "ZQPei/deep_sort_pytorch"
"Sharpiless/Yolov5-Deepsort" -> "JackWoo0831/Yolov7-tracker"
"Sharpiless/Yolov5-Deepsort" -> "shaoshengsong/DeepSORT"
"Sharpiless/Yolov5-Deepsort" -> "Javacr/PyQt5-YOLOv5" ["e"=1]
"Sharpiless/Yolov5-Deepsort" -> "MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking"
"Sharpiless/Yolov5-Deepsort" -> "RichardoMrMu/yolov5-deepsort-tensorrt" ["e"=1]
"Sharpiless/Yolov5-Deepsort" -> "midasklr/yolov5prune" ["e"=1]
"Sharpiless/Yolov5-Deepsort" -> "ifzhang/ByteTrack"
"Sharpiless/Yolov5-Deepsort" -> "dyhBUPT/StrongSORT"
"Sharpiless/Yolov5-Deepsort" -> "NirAharon/BoT-SORT"
"Sharpiless/Yolov5-Deepsort" -> "cv516Buaa/tph-yolov5" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mmtracking" ["e"=1]
"TexasInstruments/edgeai-yolov5" -> "RizwanMunawar/yolov7-pose-estimation" ["e"=1]
"TexasInstruments/edgeai-yolov5" -> "jahongir7174/YOLOv8-pose" ["e"=1]
"obss/sahi" -> "mikel-brostrom/boxmot" ["e"=1]
"obss/sahi" -> "ifzhang/ByteTrack" ["e"=1]
"xinychen/latex-cookbook" -> "xinychen/tensor-book" ["e"=1]
"opencv/opencv_zoo" -> "NirAharon/BoT-SORT" ["e"=1]
"davidfrz/yolov5_distance_count" -> "dyh/unbox_yolov5_deepsort_counting" ["e"=1]
"rbgirshick/voc-dpm" -> "DaHoC/trainHOG" ["e"=1]
"rbgirshick/voc-dpm" -> "bikz05/object-detector" ["e"=1]
"tzutalin/ImageNet_Utils" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"cvzone/cvzone" -> "tryolabs/norfair" ["e"=1]
"damo-cv/TransReID" -> "layumi/Vehicle_reID-Collection" ["e"=1]
"damo-cv/TransReID" -> "heshuting555/AICITY2020_DMT_VehicleReID" ["e"=1]
"winter2897/Real-time-Auto-License-Plate-Recognition-with-Jetson-Nano" -> "JardinRyu/Jetson_Nano_People_Counting" ["e"=1]
"dyh/unbox_yolov5_deepsort_counting" -> "Sharpiless/Yolov5-deepsort-inference"
"dyh/unbox_yolov5_deepsort_counting" -> "Sharpiless/Yolov5-Deepsort"
"dyh/unbox_yolov5_deepsort_counting" -> "dyh/win10_yolov5_deepsort_counting"
"dyh/unbox_yolov5_deepsort_counting" -> "duongcongnha/Vehicle-tracking"
"dyh/unbox_yolov5_deepsort_counting" -> "HowieMa/DeepSORT_YOLOv5_Pytorch"
"dyh/unbox_yolov5_deepsort_counting" -> "mikel-brostrom/boxmot"
"dyh/unbox_yolov5_deepsort_counting" -> "Javacr/PyQt5-YOLOv5" ["e"=1]
"dyh/unbox_yolov5_deepsort_counting" -> "owo12321/Yolov5_DeepSort_Traffic-counter"
"dyh/unbox_yolov5_deepsort_counting" -> "ZQPei/deep_sort_pytorch"
"dyh/unbox_yolov5_deepsort_counting" -> "zengwb-lx/yolov5-deepsort-pedestrian-counting"
"dyh/unbox_yolov5_deepsort_counting" -> "PeterH0323/Smart_Construction" ["e"=1]
"dyh/unbox_yolov5_deepsort_counting" -> "zengwb-lx/Yolov5-Deepsort-Fastreid" ["e"=1]
"dyh/unbox_yolov5_deepsort_counting" -> "oaqoe-DWQ/Yolov5_DeepSort_Pytorch"
"dyh/unbox_yolov5_deepsort_counting" -> "theAIGuysCode/yolov4-deepsort"
"dyh/unbox_yolov5_deepsort_counting" -> "shaoshengsong/DeepSORT"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "Sharpiless/Yolov5-Deepsort" ["e"=1]
"songguocode/TADAM" -> "daip13/LPC_MOT"
"songguocode/TADAM" -> "yihongXU/TransCenter"
"rafaelpadilla/review_object_detection_metrics" -> "JonathonLuiten/TrackEval" ["e"=1]
"rafaelpadilla/review_object_detection_metrics" -> "cheind/py-motmetrics" ["e"=1]
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "SurajDonthi/Multi-Camera-Person-Re-Identification"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "nolanzzz/mtmct"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "JunweiLiang/Object_Detection_Tracking"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "hafidh561/multi-camera-people-tracking"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "SherryJYC/paper-MTMC"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "lyrgwlr/Human-tracking-multicam"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "ipl-uw/AIC23_Track1_UWIPL_ETRI"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "GehenHe/TRACTA"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "chengche6230/ReST"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "Nirvan101/Person-Re-identification"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "arvganesh/Multi-Camera-Object-Tracking"
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" -> "cw1204772/AIC2018_iamai"
"yuxng/MDP_Tracking" -> "huanglianghua/mot-papers" ["e"=1]
"yuxng/MDP_Tracking" -> "longcw/MOTDT" ["e"=1]
"yuxng/MDP_Tracking" -> "bochinski/iou-tracker" ["e"=1]
"yuxng/MDP_Tracking" -> "shijieS/SST" ["e"=1]
"yuxng/MDP_Tracking" -> "SpyderXu/multi-object-tracking-paper-list" ["e"=1]
"yuxng/MDP_Tracking" -> "samuelmurray/tracking-by-detection" ["e"=1]
"yuxng/MDP_Tracking" -> "JunaidCS032/MOTBeyondPixels" ["e"=1]
"louisyuzhe/car-damage-detector" -> "shubhi/car-damage-assessment"
"louisyuzhe/car-damage-detector" -> "basel-ay/Automated-Car-Damage-Detection"
"xingyizhou/CenterNet2" -> "xingyizhou/CenterTrack" ["e"=1]
"Sharpiless/Yolov5-deepsort-inference" -> "Sharpiless/Yolov5-Deepsort"
"Sharpiless/Yolov5-deepsort-inference" -> "dyh/unbox_yolov5_deepsort_counting"
"Sharpiless/Yolov5-deepsort-inference" -> "ZQPei/deep_sort_pytorch"
"Sharpiless/Yolov5-deepsort-inference" -> "HowieMa/DeepSORT_YOLOv5_Pytorch"
"Sharpiless/Yolov5-deepsort-inference" -> "mikel-brostrom/boxmot"
"Sharpiless/Yolov5-deepsort-inference" -> "shaoshengsong/DeepSORT"
"Sharpiless/Yolov5-deepsort-inference" -> "PeterH0323/Smart_Construction" ["e"=1]
"Sharpiless/Yolov5-deepsort-inference" -> "Javacr/PyQt5-YOLOv5" ["e"=1]
"Sharpiless/Yolov5-deepsort-inference" -> "MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking"
"Sharpiless/Yolov5-deepsort-inference" -> "theAIGuysCode/yolov4-deepsort"
"Sharpiless/Yolov5-deepsort-inference" -> "zengwb-lx/yolov5-deepsort-pedestrian-counting"
"Sharpiless/Yolov5-deepsort-inference" -> "duongcongnha/Vehicle-tracking"
"Sharpiless/Yolov5-deepsort-inference" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"Sharpiless/Yolov5-deepsort-inference" -> "nwojke/deep_sort"
"Sharpiless/Yolov5-deepsort-inference" -> "gengyanlei/fire-smoke-detect-yolov4" ["e"=1]
"bikz05/object-detector" -> "DaHoC/trainHOG"
"bikz05/object-detector" -> "BUPTLdy/human-detector"
"bikz05/object-detector" -> "HansRen1024/SVM-classification-localization"
"bikz05/object-detector" -> "SamPlvs/Object-detection-via-HOG-SVM"
"bikz05/object-detector" -> "jianlong-yuan/HOG-SVM-python"
"bikz05/object-detector" -> "rbgirshick/voc-dpm" ["e"=1]
"bikz05/object-detector" -> "icsfy/Pedestrian_Detection"
"bikz05/object-detector" -> "JunshengFu/vehicle-detection"
"bikz05/object-detector" -> "JeanKossaifi/python-hog"
"bikz05/object-detector" -> "bikz05/object-tracker"
"bikz05/object-detector" -> "andrewssobral/vehicle_detection_haarcascades"
"bikz05/object-detector" -> "bikz05/bag-of-words"
"bikz05/object-detector" -> "ZhouJiaHuan/traffic-sign-detection"
"bikz05/object-detector" -> "balancap/SDC-Vehicle-Detection"
"bikz05/object-detector" -> "josemarcosrf/HOG-Pedestrian-Detector"
"Kazuhito00/mediapipe-python-sample" -> "wmuron/motpy" ["e"=1]
"lucasjinreal/yolov7_d2" -> "mikel-brostrom/boxmot" ["e"=1]
"MCG-NJU/MultiSports" -> "MCG-NJU/SportsMOT" ["e"=1]
"timmeinhardt/trackformer" -> "PeizeSun/TransTrack"
"timmeinhardt/trackformer" -> "megvii-research/MOTR"
"timmeinhardt/trackformer" -> "megvii-research/MOTRv2"
"timmeinhardt/trackformer" -> "yihongXU/TransCenter"
"timmeinhardt/trackformer" -> "xingyizhou/GTR"
"timmeinhardt/trackformer" -> "noahcao/OC_SORT"
"timmeinhardt/trackformer" -> "JonathonLuiten/TrackEval"
"timmeinhardt/trackformer" -> "MCG-NJU/MeMOTR"
"timmeinhardt/trackformer" -> "TRI-ML/PF-Track" ["e"=1]
"timmeinhardt/trackformer" -> "JudasDie/SOTS" ["e"=1]
"timmeinhardt/trackformer" -> "luanshiyinyang/awesome-multiple-object-tracking"
"timmeinhardt/trackformer" -> "Zhongdao/UniTrack"
"timmeinhardt/trackformer" -> "SysCV/qdtrack"
"timmeinhardt/trackformer" -> "yongxinw/GSDT"
"timmeinhardt/trackformer" -> "dendorferpatrick/MOTChallengeEvalKit"
"JialianW/TraDeS" -> "MedChaabane/DEFT"
"JialianW/TraDeS" -> "amazon-science/siam-mot"
"JialianW/TraDeS" -> "JudasDie/SOTS" ["e"=1]
"JialianW/TraDeS" -> "PeizeSun/TransTrack"
"JialianW/TraDeS" -> "xingyizhou/CenterTrack"
"JialianW/TraDeS" -> "pjl1995/CTracker"
"JialianW/TraDeS" -> "CaptainEven/MCMOT"
"JialianW/TraDeS" -> "dvl-tum/mot_neural_solver"
"JialianW/TraDeS" -> "SysCV/qdtrack"
"JialianW/TraDeS" -> "shijieS/SST"
"JialianW/TraDeS" -> "yongxinw/GSDT"
"JialianW/TraDeS" -> "Zhongdao/Towards-Realtime-MOT"
"JialianW/TraDeS" -> "VisualComputingInstitute/TrackR-CNN"
"JialianW/TraDeS" -> "yihongXU/deepMOT"
"JialianW/TraDeS" -> "phil-bergmann/tracking_wo_bnw"
"aleksandrkim61/EagerMOT" -> "MedChaabane/DEFT" ["e"=1]
"andrewssobral/simple_vehicle_counting" -> "andrewssobral/vehicle_detection_haarcascades"
"andrewssobral/simple_vehicle_counting" -> "ahmetozlu/vehicle_counting"
"andrewssobral/simple_vehicle_counting" -> "tomazas/opencv-lane-vehicle-track" ["e"=1]
"andrewssobral/simple_vehicle_counting" -> "ahmetozlu/vehicle_counting_tensorflow"
"andrewssobral/simple_vehicle_counting" -> "xiaochus/Vehicle_Tracking"
"andrewssobral/simple_vehicle_counting" -> "andrewssobral/bgslibrary"
"andrewssobral/simple_vehicle_counting" -> "abhi-kumar/CAR-DETECTION"
"andrewssobral/simple_vehicle_counting" -> "JunshengFu/vehicle-detection"
"andrewssobral/simple_vehicle_counting" -> "creotiv/object_detection_projects"
"andrewssobral/simple_vehicle_counting" -> "kcg2015/Vehicle-Detection-and-Tracking"
"andrewssobral/simple_vehicle_counting" -> "MicrocontrollersAndMore/OpenCV_3_Car_Counting_Cpp" ["e"=1]
"andrewssobral/simple_vehicle_counting" -> "ahmetozlu/vehicle_counting_hog_svm"
"andrewssobral/simple_vehicle_counting" -> "OpenCVBlobsLib/opencvblobslib"
"andrewssobral/simple_vehicle_counting" -> "xfgryujk/VehicleDetection"
"andrewssobral/simple_vehicle_counting" -> "iandees/speedtrack"
"dataprofessor/streamlit_freecodecamp" -> "dataprofessor/population-dashboard" ["e"=1]
"trigeorgis/Deep-Semi-NMF" -> "colinvaz/nmf-toolbox"
"trigeorgis/Deep-Semi-NMF" -> "DUT-DIPLab/Graph-Multi-NMF-Feature-Clustering"
"Sharpiless/Yolov5-Flask-VUE" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"Sharpiless/Yolov5-Flask-VUE" -> "dyh/unbox_yolov5_deepsort_counting" ["e"=1]
"rohit9934/Traffic-Rules-Violation-detection-system" -> "rahatzamancse/Traffic-Rules-Violation-Detection"
"darkpgmr/DarkLabel" -> "JonathonLuiten/TrackEval"
"darkpgmr/DarkLabel" -> "dyhBUPT/StrongSORT"
"darkpgmr/DarkLabel" -> "NirAharon/BoT-SORT"
"darkpgmr/DarkLabel" -> "dendorferpatrick/MOTChallengeEvalKit"
"darkpgmr/DarkLabel" -> "DanceTrack/DanceTrack"
"darkpgmr/DarkLabel" -> "JackWoo0831/Yolov7-tracker"
"darkpgmr/DarkLabel" -> "noahcao/OC_SORT"
"darkpgmr/DarkLabel" -> "ymzis69/HybridSORT"
"darkpgmr/DarkLabel" -> "yihongXU/TransCenter"
"darkpgmr/DarkLabel" -> "tmandel/fish-detrac"
"darkpgmr/DarkLabel" -> "CaptainEven/MCMOT"
"darkpgmr/DarkLabel" -> "wudongming97/RMOT"
"darkpgmr/DarkLabel" -> "mengting2023/LG-Track"
"lkeab/BCNet" -> "SysCV/pcan" ["e"=1]
"akaifi/MultiObjectTrackingBasedOnColor" -> "eveningglow/multi-object-tracker"
"SherryJYC/paper-MTMC" -> "GehenHe/TRACTA"
"SherryJYC/paper-MTMC" -> "uark-cviu/DyGLIP"
"SherryJYC/paper-MTMC" -> "LCFractal/AIC21-MTMC"
"SherryJYC/paper-MTMC" -> "nolanzzz/mtmct"
"SherryJYC/paper-MTMC" -> "KevinQian97/ELECTRICITY-MTMC"
"SherryJYC/paper-MTMC" -> "Yejin0111/AICITY2022-Track1-MTMC"
"SherryJYC/paper-MTMC" -> "SamvitJ/Duke-DeepCC"
"SherryJYC/paper-MTMC" -> "SherryJYC/3D-Tracking-MVS"
"SherryJYC/paper-MTMC" -> "lockxuan/non-overlapping_multiple-camera_tracking"
"SherryJYC/paper-MTMC" -> "samihormi/Multi-Camera-Person-Tracking-and-Re-Identification"
"SherryJYC/paper-MTMC" -> "regob/vehicle_mtmc"
"SherryJYC/paper-MTMC" -> "shengyuhao/DIVOTrack"
"SherryJYC/paper-MTMC" -> "SurajDonthi/Multi-Camera-Person-Re-Identification"
"megvii-research/MOTR" -> "megvii-research/MOTRv2"
"megvii-research/MOTR" -> "timmeinhardt/trackformer"
"megvii-research/MOTR" -> "PeizeSun/TransTrack"
"megvii-research/MOTR" -> "DanceTrack/DanceTrack"
"megvii-research/MOTR" -> "noahcao/OC_SORT"
"megvii-research/MOTR" -> "xingyizhou/GTR"
"megvii-research/MOTR" -> "MCG-NJU/MOTIP"
"megvii-research/MOTR" -> "luanshiyinyang/awesome-multiple-object-tracking"
"megvii-research/MOTR" -> "JudasDie/SOTS" ["e"=1]
"megvii-research/MOTR" -> "MCG-NJU/MeMOTR"
"megvii-research/MOTR" -> "a1600012888/MUTR3D" ["e"=1]
"megvii-research/MOTR" -> "TRI-ML/PF-Track" ["e"=1]
"megvii-research/MOTR" -> "JonathonLuiten/TrackEval"
"megvii-research/MOTR" -> "SysCV/qdtrack"
"megvii-research/MOTR" -> "yihongXU/TransCenter"
"michuanhaohao/AICITY2021_Track2_DMT" -> "NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams"
"michuanhaohao/AICITY2021_Track2_DMT" -> "LCFractal/AIC21-MTMC"
"michuanhaohao/AICITY2021_Track2_DMT" -> "cybercore-co-ltd/track2_aicity_2021"
"michuanhaohao/AICITY2021_Track2_DMT" -> "Xuanmeng-Zhang/AICITY2021-Track2"
"michuanhaohao/AICITY2021_Track2_DMT" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"michuanhaohao/AICITY2021_Track2_DMT" -> "ShuaiBai623/AIC2021-T5-CLV"
"michuanhaohao/AICITY2021_Track2_DMT" -> "NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams"
"michuanhaohao/AICITY2021_Track2_DMT" -> "backkon/AICITY2022_Track1_TAG"
"michuanhaohao/AICITY2021_Track2_DMT" -> "PKU-IMRE/VERI-Wild"
"LCFractal/AIC21-MTMC" -> "michuanhaohao/AICITY2021_Track2_DMT"
"LCFractal/AIC21-MTMC" -> "Yejin0111/AICITY2022-Track1-MTMC"
"LCFractal/AIC21-MTMC" -> "coder-wangzhen/AIC22-MCVT"
"LCFractal/AIC21-MTMC" -> "NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams"
"LCFractal/AIC21-MTMC" -> "KevinQian97/ELECTRICITY-MTMC"
"LCFractal/AIC21-MTMC" -> "uark-cviu/DyGLIP"
"LCFractal/AIC21-MTMC" -> "NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams"
"LCFractal/AIC21-MTMC" -> "royukira/AIC22_Track1_MTMC_ID10"
"LCFractal/AIC21-MTMC" -> "backkon/AICITY2022_Track1_TAG"
"LCFractal/AIC21-MTMC" -> "GehenHe/TRACTA"
"LCFractal/AIC21-MTMC" -> "SherryJYC/paper-MTMC"
"LCFractal/AIC21-MTMC" -> "vpulab/Online-Clustering-based-MTMC-Tracking"
"LCFractal/AIC21-MTMC" -> "nolanzzz/mtmct"
"stypr/clubhouse-py" -> "yongxinw/GSDT" ["e"=1]
"bikz05/object-tracker" -> "obendidi/Tracking-with-darkflow"
"bikz05/object-tracker" -> "yuxng/MDP_Tracking" ["e"=1]
"bikz05/object-tracker" -> "Guanghan/ROLO" ["e"=1]
"bikz05/object-tracker" -> "eveningglow/multi-object-tracker"
"bikz05/object-tracker" -> "RobinDavid/Motion-detection-OpenCV"
"bikz05/object-tracker" -> "ZidanMusk/experimenting-with-sort"
"bikz05/object-tracker" -> "simondlevy/OpenCV-Python-Hacks" ["e"=1]
"bikz05/object-tracker" -> "uoip/KCFpy" ["e"=1]
"bikz05/object-tracker" -> "bikz05/object-detector"
"bikz05/object-tracker" -> "DaHoC/trainHOG"
"bikz05/object-tracker" -> "bochinski/iou-tracker"
"bikz05/object-tracker" -> "DrewNF/Tensorflow_Object_Tracking_Video" ["e"=1]
"bikz05/object-tracker" -> "uoip/KCFcpp-py-wrapper" ["e"=1]
"zengwb-lx/Yolov5-Deepsort-Fastreid" -> "zengwb-lx/yolov5-deepsort-pedestrian-counting" ["e"=1]
"zengwb-lx/Yolov5-Deepsort-Fastreid" -> "HanGuangXin/ByteTrack_ReID" ["e"=1]
"zengwb-lx/yolov5-deepsort-pedestrian-counting" -> "zengwb-lx/Yolov5-Deepsort-Fastreid" ["e"=1]
"zengwb-lx/yolov5-deepsort-pedestrian-counting" -> "MichistaLin/yolov5-deepsort-pedestraintracking"
"PeizeSun/TransTrack" -> "timmeinhardt/trackformer"
"PeizeSun/TransTrack" -> "megvii-research/MOTR"
"PeizeSun/TransTrack" -> "xingyizhou/CenterTrack"
"PeizeSun/TransTrack" -> "chenxin-dlut/TransT" ["e"=1]
"PeizeSun/TransTrack" -> "dvl-tum/mot_neural_solver"
"PeizeSun/TransTrack" -> "SysCV/qdtrack"
"PeizeSun/TransTrack" -> "yihongXU/TransCenter"
"PeizeSun/TransTrack" -> "JudasDie/SOTS" ["e"=1]
"PeizeSun/TransTrack" -> "JialianW/TraDeS"
"PeizeSun/TransTrack" -> "xingyizhou/GTR"
"PeizeSun/TransTrack" -> "Zhongdao/Towards-Realtime-MOT"
"PeizeSun/TransTrack" -> "JonathonLuiten/TrackEval"
"PeizeSun/TransTrack" -> "megvii-research/MOTRv2"
"PeizeSun/TransTrack" -> "pjl1995/CTracker"
"PeizeSun/TransTrack" -> "luanshiyinyang/awesome-multiple-object-tracking"
"WatershedArts/Footfall" -> "PEOPLE-INSIDE/people-inside"
"WatershedArts/Footfall" -> "koba/overhead-camera-people-counter"
"WatershedArts/Footfall" -> "jeffskinnerbox/people-counter"
"WatershedArts/Footfall" -> "brian-yu/pedestrian-cam"
"WatershedArts/Footfall" -> "Viktopia/sonar"
"WatershedArts/Footfall" -> "LukashenkoYevhenii/People-Counter"
"Zhongdao/UniTrack" -> "hustvl/CrossVIS" ["e"=1]
"Zhongdao/UniTrack" -> "JudasDie/SOTS" ["e"=1]
"Zhongdao/UniTrack" -> "Flowerfan/Trackron"
"Zhongdao/UniTrack" -> "timmeinhardt/trackformer"
"Zhongdao/UniTrack" -> "xingyizhou/GTR"
"Zhongdao/UniTrack" -> "yihongXU/TransCenter"
"Zhongdao/UniTrack" -> "PeizeSun/TransTrack"
"Zhongdao/UniTrack" -> "jiaweihe1996/GMTracker"
"oaqoe-DWQ/Yolov5_DeepSort_Pytorch" -> "MichistaLin/yolov5-deepsort-pedestraintracking"
"oaqoe-DWQ/Yolov5_DeepSort_Pytorch" -> "XXL513/-2"
"cybercore-co-ltd/track2_aicity_2021" -> "michuanhaohao/AICITY2021_Track2_DMT"
"cybercore-co-ltd/track2_aicity_2021" -> "Xuanmeng-Zhang/AICITY2021-Track2"
"cybercore-co-ltd/track2_aicity_2021" -> "silverbulletmdc/PVEN"
"cybercore-co-ltd/track2_aicity_2021" -> "layumi/Vehicle_reID-Collection"
"cybercore-co-ltd/track2_aicity_2021" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"cybercore-co-ltd/track2_aicity_2021" -> "adhirajghosh/RPTM_reid"
"cybercore-co-ltd/track2_aicity_2021" -> "Xiangyu-CAS/AICity2020-VOC-ReID"
"cybercore-co-ltd/track2_aicity_2021" -> "NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams"
"justinamiller/DotNet-Coding-Guidelines" -> "yongxinw/GSDT" ["e"=1]
"ai-eks/OpenClubhouse" -> "yongxinw/GSDT" ["e"=1]
"fcakyon/yolov5-pip" -> "keremberke/awesome-yolov5-models"
"fcakyon/yolov5-pip" -> "kadirnar/torchyolo"
"amazon-science/siam-mot" -> "JialianW/TraDeS"
"amazon-science/siam-mot" -> "JudasDie/SOTS" ["e"=1]
"amazon-science/siam-mot" -> "pjl1995/CTracker"
"amazon-science/siam-mot" -> "MedChaabane/DEFT"
"amazon-science/siam-mot" -> "PeizeSun/TransTrack"
"amazon-science/siam-mot" -> "yihongXU/TransCenter"
"amazon-science/siam-mot" -> "DanceTrack/DanceTrack"
"amazon-science/siam-mot" -> "yongxinw/GSDT"
"amazon-science/siam-mot" -> "chenxin-dlut/TransT" ["e"=1]
"amazon-science/siam-mot" -> "BoPang1996/TubeTK"
"amazon-science/siam-mot" -> "daip13/LPC_MOT"
"amazon-science/siam-mot" -> "hqucv/siamban" ["e"=1]
"amazon-science/siam-mot" -> "SysCV/qdtrack"
"amazon-science/siam-mot" -> "luanshiyinyang/awesome-multiple-object-tracking"
"amazon-science/siam-mot" -> "xingyizhou/CenterTrack"
"bikz05/bag-of-words" -> "shackenberg/Minimal-Bag-of-Visual-Words-Image-Classifier"
"bikz05/bag-of-words" -> "kushalvyas/Bag-of-Visual-Words-Python"
"zxcver/spatio-time-mtmc" -> "backkon/AICITY2022_Track1_TAG"
"nolanzzz/mtmct" -> "koehlp/wda_tracker"
"nolanzzz/mtmct" -> "lockxuan/non-overlapping_multiple-camera_tracking"
"nolanzzz/mtmct" -> "GehenHe/TRACTA"
"nolanzzz/mtmct" -> "schuar-iosb/mta-dataset"
"nolanzzz/mtmct" -> "hafidh561/multi-camera-people-tracking"
"nolanzzz/mtmct" -> "ChienHsuan/MCDPT"
"pramod722445/Custom_Object_Detection_App" -> "pramod722445/Object_Detection_App"
"SysCV/qd-3dt" -> "MedChaabane/DEFT" ["e"=1]
"SysCV/qd-3dt" -> "SysCV/qdtrack" ["e"=1]
"MedChaabane/DEFT" -> "JialianW/TraDeS"
"MedChaabane/DEFT" -> "TRI-ML/permatrack"
"MedChaabane/DEFT" -> "yihongXU/TransCenter"
"MedChaabane/DEFT" -> "JudasDie/SOTS" ["e"=1]
"MedChaabane/DEFT" -> "pjl1995/CTracker"
"MedChaabane/DEFT" -> "songguocode/TADAM"
"MedChaabane/DEFT" -> "aleksandrkim61/EagerMOT" ["e"=1]
"MedChaabane/DEFT" -> "PeizeSun/TransTrack"
"MedChaabane/DEFT" -> "amazon-science/siam-mot"
"MedChaabane/DEFT" -> "yongxinw/GSDT"
"MedChaabane/DEFT" -> "SysCV/qdtrack"
"MedChaabane/DEFT" -> "dvl-tum/mot_neural_solver"
"MedChaabane/DEFT" -> "yinjunbo/UMA-MOT"
"MedChaabane/DEFT" -> "shijieS/SST"
"MedChaabane/DEFT" -> "CaptainEven/MCMOT"
"TRI-ML/permatrack" -> "yihongXU/TransCenter"
"TRI-ML/permatrack" -> "MedChaabane/DEFT"
"TRI-ML/permatrack" -> "cogsys-tuebingen/CBMOT" ["e"=1]
"shafu0x/vehicle-speed-estimation" -> "shafu0x/opical-flow-estimation-with-RAFT"
"shafu0x/vehicle-speed-estimation" -> "laavanyebahl/speed-estimation-of-car-with-optical-flow"
"yongxinw/GSDT" -> "dvl-tum/mot_neural_solver"
"yongxinw/GSDT" -> "JudasDie/SOTS" ["e"=1]
"yongxinw/GSDT" -> "MedChaabane/DEFT"
"yongxinw/GSDT" -> "JialianW/TraDeS"
"yongxinw/GSDT" -> "xinshuoweng/GNN3DMOT"
"yongxinw/GSDT" -> "yihongXU/TransCenter"
"yongxinw/GSDT" -> "amazon-science/siam-mot"
"yongxinw/GSDT" -> "pjl1995/CTracker"
"yongxinw/GSDT" -> "PeizeSun/TransTrack"
"yongxinw/GSDT" -> "timmeinhardt/trackformer"
"yongxinw/GSDT" -> "jiaweihe1996/GMTracker"
"yongxinw/GSDT" -> "yihongXU/deepMOT"
"yongxinw/GSDT" -> "TRI-ML/permatrack"
"yongxinw/GSDT" -> "dendorferpatrick/MOTChallengeEvalKit"
"yongxinw/GSDT" -> "SysCV/qdtrack"
"yihongXU/TransCenter" -> "songguocode/TADAM"
"yihongXU/TransCenter" -> "TRI-ML/permatrack"
"yihongXU/TransCenter" -> "MedChaabane/DEFT"
"tomazas/opencv-lane-vehicle-track" -> "andrewssobral/simple_vehicle_counting" ["e"=1]
"SherryJYC/3D-Tracking-MVS" -> "GehenHe/TRACTA"
"uark-cviu/DyGLIP" -> "GehenHe/TRACTA"
"uark-cviu/DyGLIP" -> "LCFractal/AIC21-MTMC"
"uark-cviu/DyGLIP" -> "SherryJYC/paper-MTMC"
"jbeale1/OpenCV" -> "9andrea1/opencv"
"Sharpiless/yolox-deepsort" -> "pmj110119/YOLOX_deepsort_tracker" ["e"=1]
"Sharpiless/yolox-deepsort" -> "Leon-E-Zion/YoloX-Track-Plate_Recognition-MoreModules"
"Sharpiless/yolox-deepsort" -> "1079863482/ShuffleNet-deepsort"
"Sharpiless/yolox-deepsort" -> "xuarehere/yolo_series_deepsort_pytorch"
"jiaweihe1996/GMTracker" -> "daip13/LPC_MOT"
"jiaweihe1996/GMTracker" -> "yihongXU/TransCenter"
"jiaweihe1996/GMTracker" -> "songguocode/TADAM"
"jiaweihe1996/GMTracker" -> "fatemeh-slh/ArTIST"
"jiaweihe1996/GMTracker" -> "dendorferpatrick/QuoVadis"
"jiaweihe1996/GMTracker" -> "IPapakis/GCNNMatch"
"Farious/PedestrianDetector" -> "chhshen/pedestrian-detection"
"kadirnar/combat-drone" -> "kadirnar/yolov5-sahi"
"NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams" -> "michuanhaohao/AICITY2021_Track2_DMT"
"NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams" -> "LCFractal/AIC21-MTMC"
"NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams" -> "NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams"
"NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams" -> "NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams"
"NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams" -> "backkon/AICITY2022_Track1_TAG"
"NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams" -> "KevinQian97/ELECTRICITY-MTMC"
"NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams" -> "cybercore-co-ltd/track2_aicity_2021"
"realgump/MvMHAT" -> "shengyuhao/DIVOTrack"
"ShuaiBai623/AIC2021-T5-CLV" -> "Xuanmeng-Zhang/AICITY2021-Track2"
"ShuaiBai623/AIC2021-T5-CLV" -> "fredfung007/cityflow-nl"
"ShuaiBai623/AIC2021-T5-CLV" -> "michuanhaohao/AICITY2021_Track2_DMT"
"shafu0x/opical-flow-estimation-with-RAFT" -> "shafu0x/vehicle-speed-estimation"
"kadirnar/yolov5-sahi" -> "kadirnar/combat-drone"
"kadirnar/yolov5-sahi" -> "kadirnar/TrackerHub"
"mftnakrsu/Tf2-ObjectDetectionAPI" -> "mftnakrsu/DeepDream"
"mftnakrsu/Tf2-ObjectDetectionAPI" -> "mftnakrsu/ObjectDetection-w-opencv"
"mftnakrsu/Tf2-ObjectDetectionAPI" -> "mftnakrsu/Machine-Learning-Algorithm"
"mftnakrsu/Tf2-ObjectDetectionAPI" -> "mftnakrsu/cats-and-dogs-CNN-v2"
"mftnakrsu/Tf2-ObjectDetectionAPI" -> "mftnakrsu/ImageProcessing-with-openCV"
"ozantezcan/BSUV-Net-2.0" -> "ozantezcan/BSUV-Net-inference"
"mftnakrsu/ObjectDetection-w-opencv" -> "mftnakrsu/cats-and-dogs-CNN-v2"
"mftnakrsu/ObjectDetection-w-opencv" -> "mftnakrsu/ImageProcessing-with-openCV"
"mftnakrsu/ObjectDetection-w-opencv" -> "mftnakrsu/Machine-Learning-Algorithm"
"mftnakrsu/ObjectDetection-w-opencv" -> "mftnakrsu/DeepDream"
"mftnakrsu/DeepDream" -> "mftnakrsu/ObjectDetection-w-opencv"
"mftnakrsu/DeepDream" -> "mftnakrsu/ImageProcessing-with-openCV"
"mftnakrsu/DeepDream" -> "mftnakrsu/cats-and-dogs-CNN-v2"
"Javacr/PyQt5-YOLOv5" -> "Sharpiless/Yolov5-Deepsort" ["e"=1]
"Javacr/PyQt5-YOLOv5" -> "dyh/unbox_yolov5_deepsort_counting" ["e"=1]
"Javacr/PyQt5-YOLOv5" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"owo12321/Yolov5_DeepSort_Traffic-counter" -> "GeniusAng/MultiCarDetection"
"owo12321/Yolov5_DeepSort_Traffic-counter" -> "dyh/win10_yolov5_deepsort_counting"
"owo12321/Yolov5_DeepSort_Traffic-counter" -> "zengwb-lx/yolov5-deepsort-pedestrian-counting"
"owo12321/Yolov5_DeepSort_Traffic-counter" -> "dyh/unbox_yolov5_deepsort_counting"
"owo12321/Yolov5_DeepSort_Traffic-counter" -> "Ai-trainee/Traffic-Sign-Recognition-PyQt5-YOLOv5-GUI" ["e"=1]
"owo12321/Yolov5_DeepSort_Traffic-counter" -> "qunshansj/YOLO_Deepsort_Pedestrian_Counting"
"owo12321/Yolov5_DeepSort_Traffic-counter" -> "librahfacebook/Detection"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "prateekralhan/Streamlit-based-Automatic-Number-Plate-Recognition"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "mftnakrsu/Tf2-ObjectDetectionAPI"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "mftnakrsu/paper_summary_makale_ozetleri"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "mftnakrsu/ObjectDetection-w-opencv"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "mftnakrsu/DeepDream"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "mftnakrsu/Comparison-of-OCR"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "mftnakrsu/Machine-Learning-Algorithm"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "mftnakrsu/AutonomousRobots-Kalman-Filter"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "Asikpalysik/Automatic-License-Plate-Detection"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "mftnakrsu/cats-and-dogs-CNN-v2"
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" -> "mftnakrsu/ImageProcessing-with-openCV"
"ifzhang/ByteTrack" -> "NirAharon/BoT-SORT"
"ifzhang/ByteTrack" -> "mikel-brostrom/boxmot"
"ifzhang/ByteTrack" -> "ifzhang/FairMOT"
"ifzhang/ByteTrack" -> "Megvii-BaseDetection/YOLOX" ["e"=1]
"ifzhang/ByteTrack" -> "nwojke/deep_sort"
"ifzhang/ByteTrack" -> "noahcao/OC_SORT"
"ifzhang/ByteTrack" -> "open-mmlab/mmtracking"
"ifzhang/ByteTrack" -> "JDAI-CV/fast-reid" ["e"=1]
"ifzhang/ByteTrack" -> "xingyizhou/CenterTrack"
"ifzhang/ByteTrack" -> "dyhBUPT/StrongSORT"
"ifzhang/ByteTrack" -> "Zhongdao/Towards-Realtime-MOT"
"ifzhang/ByteTrack" -> "ZQPei/deep_sort_pytorch"
"ifzhang/ByteTrack" -> "luanshiyinyang/awesome-multiple-object-tracking"
"ifzhang/ByteTrack" -> "JonathonLuiten/TrackEval"
"ifzhang/ByteTrack" -> "abewley/sort"
"cv516Buaa/tph-yolov5" -> "VisDrone/VisDrone-Dataset" ["e"=1]
"hpc203/bytetrack-opencv-onnxruntime" -> "shaoshengsong/DeepSORT" ["e"=1]
"duongcongnha/Vehicle-tracking" -> "HowieMa/DeepSORT_YOLOv5_Pytorch"
"duongcongnha/Vehicle-tracking" -> "dyh/unbox_yolov5_deepsort_counting"
"duongcongnha/Vehicle-tracking" -> "DoganK01/YOLOV8-DeepSORT-Tracking-Vehicle-Counting"
"NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams" -> "royukira/AIC22_Track1_MTMC_ID10"
"NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams" -> "backkon/AICITY2022_Track1_TAG"
"NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams" -> "Yejin0111/AICITY2022-Track1-MTMC"
"NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams" -> "LCFractal/AIC21-MTMC"
"NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams" -> "NVIDIAAICITYCHALLENGE/2023AICITY_Code_From_Top_Teams"
"NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams" -> "vpulab/Online-Clustering-based-MTMC-Tracking"
"NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams" -> "NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams"
"NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams" -> "michuanhaohao/AICITY2021_Track2_DMT"
"NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams" -> "ShuaiBai623/AIC2021-T5-CLV"
"Deci-AI/super-gradients" -> "mikel-brostrom/boxmot" ["e"=1]
"Deci-AI/super-gradients" -> "ifzhang/ByteTrack" ["e"=1]
"RichardoMrMu/yolov5-deepsort-tensorrt" -> "shaoshengsong/DeepSORT" ["e"=1]
"RichardoMrMu/yolov5-deepsort-tensorrt" -> "mcximing/sort-cpp" ["e"=1]
"Zhou-sx/yolov5_Deepsort_rknn" -> "shaoshengsong/DeepSORT" ["e"=1]
"tungdop2/ByteTrack_yolov5" -> "gmt710/yolov5ByteTrack"
"tungdop2/ByteTrack_yolov5" -> "Naughty-Galileo/YoloV5_MCMOT"
"dyhBUPT/StrongSORT" -> "NirAharon/BoT-SORT"
"dyhBUPT/StrongSORT" -> "noahcao/OC_SORT"
"dyhBUPT/StrongSORT" -> "JonathonLuiten/TrackEval"
"dyhBUPT/StrongSORT" -> "GerardMaggiolino/Deep-OC-SORT"
"dyhBUPT/StrongSORT" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet"
"dyhBUPT/StrongSORT" -> "luanshiyinyang/awesome-multiple-object-tracking"
"dyhBUPT/StrongSORT" -> "ifzhang/ByteTrack"
"dyhBUPT/StrongSORT" -> "ymzis69/HybridSORT"
"dyhBUPT/StrongSORT" -> "bharath5673/StrongSORT-YOLO"
"dyhBUPT/StrongSORT" -> "WWangYuHsiang/SMILEtrack"
"dyhBUPT/StrongSORT" -> "JudasDie/SOTS" ["e"=1]
"dyhBUPT/StrongSORT" -> "JackWoo0831/Yolov7-tracker"
"dyhBUPT/StrongSORT" -> "megvii-research/MOTRv2"
"dyhBUPT/StrongSORT" -> "hustvl/SparseTrack"
"dyhBUPT/StrongSORT" -> "mikel-brostrom/boxmot"
"noahcao/OC_SORT" -> "GerardMaggiolino/Deep-OC-SORT"
"noahcao/OC_SORT" -> "NirAharon/BoT-SORT"
"noahcao/OC_SORT" -> "dyhBUPT/StrongSORT"
"noahcao/OC_SORT" -> "luanshiyinyang/awesome-multiple-object-tracking"
"noahcao/OC_SORT" -> "ymzis69/HybridSORT"
"noahcao/OC_SORT" -> "DanceTrack/DanceTrack"
"noahcao/OC_SORT" -> "JonathonLuiten/TrackEval"
"noahcao/OC_SORT" -> "megvii-research/MOTRv2"
"noahcao/OC_SORT" -> "megvii-research/MOTR"
"noahcao/OC_SORT" -> "ifzhang/ByteTrack"
"noahcao/OC_SORT" -> "JackWoo0831/Yolov7-tracker"
"noahcao/OC_SORT" -> "hustvl/SparseTrack"
"noahcao/OC_SORT" -> "PeizeSun/TransTrack"
"noahcao/OC_SORT" -> "xingyizhou/GTR"
"noahcao/OC_SORT" -> "timmeinhardt/trackformer"
"SysCV/pcan" -> "SysCV/qdtrack"
"SysCV/pcan" -> "xingyizhou/GTR"
"SysCV/pcan" -> "FoundationVision/VNext" ["e"=1]
"SysCV/pcan" -> "qjy981010/CMaskTrack-RCNN" ["e"=1]
"SysCV/pcan" -> "SysCV/transfiner" ["e"=1]
"SysCV/pcan" -> "JialianW/TraDeS"
"SysCV/pcan" -> "wjf5203/SeqFormer" ["e"=1]
"SysCV/pcan" -> "visinf/dense-ulearn-vos" ["e"=1]
"SysCV/pcan" -> "PeizeSun/TransTrack"
"SysCV/pcan" -> "sukjunhwang/VITA" ["e"=1]
"SysCV/pcan" -> "yihongXU/TransCenter"
"SysCV/pcan" -> "NVlabs/MinVIS" ["e"=1]
"saebyn/munkres-cpp" -> "mcximing/hungarian-algorithm-cpp"
"dyh/win10_yolov5_deepsort_counting" -> "oaqoe-DWQ/Yolov5_DeepSort_Pytorch"
"dyh/win10_yolov5_deepsort_counting" -> "MichistaLin/yolov5-deepsort-pedestraintracking"
"dyh/win10_yolov5_deepsort_counting" -> "dyh/unbox_yolov5_deepsort_counting"
"dyh/win10_yolov5_deepsort_counting" -> "zcharon/Smart-Transportation-System"
"DanceTrack/DanceTrack" -> "megvii-research/MOTRv2"
"DanceTrack/DanceTrack" -> "noahcao/OC_SORT"
"DanceTrack/DanceTrack" -> "xingyizhou/GTR"
"DanceTrack/DanceTrack" -> "megvii-research/MOTR"
"DanceTrack/DanceTrack" -> "ymzis69/HybridSORT"
"DanceTrack/DanceTrack" -> "MCG-NJU/MOTIP"
"DanceTrack/DanceTrack" -> "JonathonLuiten/TrackEval"
"DanceTrack/DanceTrack" -> "PeizeSun/TransTrack"
"DanceTrack/DanceTrack" -> "luanshiyinyang/awesome-multiple-object-tracking"
"DanceTrack/DanceTrack" -> "brjathu/T3DP" ["e"=1]
"DanceTrack/DanceTrack" -> "NirAharon/BoT-SORT"
"DanceTrack/DanceTrack" -> "hustvl/SparseTrack"
"DanceTrack/DanceTrack" -> "MasterBin-IIAU/Unicorn" ["e"=1]
"DanceTrack/DanceTrack" -> "JudasDie/SOTS" ["e"=1]
"DanceTrack/DanceTrack" -> "yihongXU/TransCenter"
"rizkydermawan1992/Face-Detection" -> "computervisioneng/automatic-number-plate-recognition-python-yolov8" ["e"=1]
"SysCV/transfiner" -> "SysCV/pcan" ["e"=1]
"pyannote/pyannote-video" -> "ITCoders/Human-detection-and-Tracking" ["e"=1]
"Yejin0111/AICITY2022-Track1-MTMC" -> "coder-wangzhen/AIC22-MCVT"
"Yejin0111/AICITY2022-Track1-MTMC" -> "backkon/AICITY2022_Track1_TAG"
"Yejin0111/AICITY2022-Track1-MTMC" -> "royukira/AIC22_Track1_MTMC_ID10"
"Yejin0111/AICITY2022-Track1-MTMC" -> "LCFractal/AIC21-MTMC"
"royukira/AIC22_Track1_MTMC_ID10" -> "coder-wangzhen/AIC22-MCVT"
"royukira/AIC22_Track1_MTMC_ID10" -> "backkon/AICITY2022_Track1_TAG"
"royukira/AIC22_Track1_MTMC_ID10" -> "Yejin0111/AICITY2022-Track1-MTMC"
"xingyizhou/GTR" -> "DanceTrack/DanceTrack"
"xingyizhou/GTR" -> "megvii-research/MOTRv2"
"xingyizhou/GTR" -> "megvii-research/MOTR"
"xingyizhou/GTR" -> "PeizeSun/TransTrack"
"xingyizhou/GTR" -> "timmeinhardt/trackformer"
"xingyizhou/GTR" -> "noahcao/OC_SORT"
"xingyizhou/GTR" -> "yihongXU/TransCenter"
"xingyizhou/GTR" -> "dvl-tum/GHOST"
"xingyizhou/GTR" -> "ymzis69/HybridSORT"
"xingyizhou/GTR" -> "SysCV/qdtrack"
"xingyizhou/GTR" -> "dvl-tum/SUSHI"
"xingyizhou/GTR" -> "MCG-NJU/MeMOTR"
"xingyizhou/GTR" -> "SysCV/pcan"
"xingyizhou/GTR" -> "Zhongdao/UniTrack"
"xingyizhou/GTR" -> "jozhang97/DETA" ["e"=1]
"HanGuangXin/ByteTrack_ReID" -> "CaptainEven/MCMOT-ByteTrack"
"HanGuangXin/ByteTrack_ReID" -> "JackWoo0831/Swin-JDE" ["e"=1]
"mikwieczorek/centroids-reid" -> "LCFractal/AIC21-MTMC" ["e"=1]
"mikwieczorek/centroids-reid" -> "SurajDonthi/Multi-Camera-Person-Re-Identification" ["e"=1]
"leblancfg/autocrop" -> "mantasu/face-crop-plus"
"leblancfg/autocrop" -> "lih627/autocrop"
"leblancfg/autocrop" -> "ahmetozlu/face_recognition_crop"
"leblancfg/autocrop" -> "z80z80z80/autocrop"
"backkon/AICITY2022_Track1_TAG" -> "royukira/AIC22_Track1_MTMC_ID10"
"backkon/AICITY2022_Track1_TAG" -> "Yejin0111/AICITY2022-Track1-MTMC"
"backkon/AICITY2022_Track1_TAG" -> "zxcver/spatio-time-mtmc"
"coder-wangzhen/AIC22-MCVT" -> "royukira/AIC22_Track1_MTMC_ID10"
"coder-wangzhen/AIC22-MCVT" -> "Yejin0111/AICITY2022-Track1-MTMC"
"coder-wangzhen/AIC22-MCVT" -> "kamkyu94/Fast_Online_MTMCT"
"coder-wangzhen/AIC22-MCVT" -> "backkon/AICITY2022_Track1_TAG"
"Leon-E-Zion/YoloX-Track-Plate_Recognition" -> "Leon-E-Zion/YoloX-Track-Plate_Recognition-MoreModules"
"qiangsiwei/tensor_tools" -> "mcgill-smart-transport/bgcp_imputation"
"CaptainEven/MCMOT-ByteTrack" -> "CaptainEven/MCMOT"
"CaptainEven/MCMOT-ByteTrack" -> "HanGuangXin/ByteTrack_ReID"
"CaptainEven/MCMOT-ByteTrack" -> "Double-zh/ByteTrack"
"CaptainEven/MCMOT-ByteTrack" -> "CaptainEven/YOLOV4_MCMOT"
"Double-zh/ByteTrack" -> "CaptainEven/MCMOT-ByteTrack"
"Double-zh/ByteTrack" -> "tungdop2/ByteTrack_yolov5"
"kadirnar/yolov5-strongsort" -> "kadirnar/sahi-learn"
"plstcharles/litiv" -> "ethereon/subsense"
"plstcharles/litiv" -> "aimeng100/WeSamBE"
"jkarnows/rpcaADMM" -> "nwbirnie/rpca"
"jkarnows/rpcaADMM" -> "weilinear/PyRPCA"
"jkarnows/rpcaADMM" -> "MehakArora/Robust-PCA-with-ADMM"
"MCG-NJU/SportsMOT" -> "MCG-NJU/MixSort"
"MCG-NJU/SportsMOT" -> "hsiangwei0903/Deep-EIoU"
"MCG-NJU/SportsMOT" -> "MCG-NJU/MeMOTR"
"MCG-NJU/SportsMOT" -> "MCG-NJU/MultiSports" ["e"=1]
"MCG-NJU/SportsMOT" -> "MCG-NJU/MixFormerV2" ["e"=1]
"MCG-NJU/SportsMOT" -> "MCG-NJU/MOTIP"
"MCG-NJU/SportsMOT" -> "SoccerNet/sn-tracking" ["e"=1]
"zcharon/Smart-Transportation-System" -> "cdmstrong/yolov5-deepSort-tracker"
"AaronCIH/SJDL-Foggy-Vehicle-Re-Identification--AAAI2022" -> "AaronCIH/RVSL-rvsl-robust-vehicle-similarity-learning--ECCV22"
"shackenberg/Minimal-Bag-of-Visual-Words-Image-Classifier" -> "bikz05/bag-of-words"
"shackenberg/Minimal-Bag-of-Visual-Words-Image-Classifier" -> "kushalvyas/Bag-of-Visual-Words-Python"
"shackenberg/Minimal-Bag-of-Visual-Words-Image-Classifier" -> "shackenberg/phow_caltech101.py"
"mftnakrsu/Comparison-of-OCR" -> "mftnakrsu/DeepDream"
"mftnakrsu/Comparison-of-OCR" -> "mftnakrsu/paper_summary_makale_ozetleri"
"mftnakrsu/Comparison-of-OCR" -> "mftnakrsu/ObjectDetection-w-opencv"
"mftnakrsu/Comparison-of-OCR" -> "mftnakrsu/Machine-Learning-Algorithm"
"mftnakrsu/Comparison-of-OCR" -> "mftnakrsu/AutonomousRobots-Kalman-Filter"
"francescosolera/LDCT" -> "maksay/ptrack_cpp"
"Leon-E-Zion/YoloX-Track-Plate_Recognition-MoreModules" -> "Leon-E-Zion/YoloX-Track-Plate_Recognition"
"mftnakrsu/AutonomousRobots-Kalman-Filter" -> "mftnakrsu/DeepDream"
"DenisTome/DeepPed" -> "chhshen/pedestrian-detection"
"kadirnar/torchyolo" -> "kadirnar/yolov5-strongsort"
"kadirnar/torchyolo" -> "bharath5673/StrongSORT-YOLO"
"kadirnar/torchyolo" -> "kadirnar/TrackerHub"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "Muhammad-Zeerak-Khan/Automatic-License-Plate-Recognition-using-YOLOv8"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "computervisioneng/automatic-number-plate-recognition-python-yolov8"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "MuhammadMoinFaisal/YOLOv8-object-tracking-blurring-counting"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "MuhammadMoinFaisal/FireDetectionYOLOv8" ["e"=1]
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "chequanghuy/Character-Time-series-Matching"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "MuhammadMoinFaisal/Computervisionprojects"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "Arijit1080/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "mendez-luisjose/License-Plate-Detection-with-YoloV8-and-EasyOCR"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "ibaiGorordo/ONNX-YOLOv8-Object-Detection" ["e"=1]
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "DoganK01/YOLOV8-DeepSORT-Tracking-Vehicle-Counting"
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" -> "we0091234/yolov8-plate" ["e"=1]
"meituan/YOLOv6" -> "mikel-brostrom/boxmot" ["e"=1]
"meituan/YOLOv6" -> "ifzhang/ByteTrack" ["e"=1]
"z1069614715/objectdetection_script" -> "mikel-brostrom/boxmot" ["e"=1]
"WongKinYiu/yolov7" -> "mikel-brostrom/boxmot" ["e"=1]
"augmentedstartups/AS-One" -> "bharath5673/Deepstream" ["e"=1]
"augmentedstartups/AS-One" -> "RizwanMunawar/yolov7-object-tracking"
"augmentedstartups/AS-One" -> "RizwanMunawar/yolov8-object-tracking"
"augmentedstartups/AS-One" -> "ibaiGorordo/ONNX-YOLOv7-Object-Detection"
"augmentedstartups/AS-One" -> "Deci-AI/super-gradients" ["e"=1]
"augmentedstartups/AS-One" -> "RizwanMunawar/yolov5-object-tracking"
"augmentedstartups/AS-One" -> "RizwanMunawar/yolov7-segmentation"
"augmentedstartups/AS-One" -> "bharath5673/StrongSORT-YOLO"
"augmentedstartups/AS-One" -> "NirAharon/BoT-SORT"
"augmentedstartups/AS-One" -> "coderonion/awesome-yolo-object-detection" ["e"=1]
"augmentedstartups/AS-One" -> "bharath5673/yolo_BEV" ["e"=1]
"stephansturges/WALDO" -> "tryolabs/norfair" ["e"=1]
"ibaiGorordo/ONNX-YOLOv8-Object-Detection" -> "RizwanMunawar/yolov8-object-tracking" ["e"=1]
"ibaiGorordo/ONNX-YOLOv8-Object-Detection" -> "MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" ["e"=1]
"ibaiGorordo/ONNX-YOLOv8-Object-Detection" -> "ibaiGorordo/ONNX-YOLOv7-Object-Detection" ["e"=1]
"abewley/sort" -> "nwojke/deep_sort"
"abewley/sort" -> "ZQPei/deep_sort_pytorch"
"abewley/sort" -> "Qidian213/deep_sort_yolov3"
"abewley/sort" -> "Zhongdao/Towards-Realtime-MOT"
"abewley/sort" -> "SpyderXu/multi-object-tracking-paper-list"
"abewley/sort" -> "ifzhang/FairMOT"
"abewley/sort" -> "xingyizhou/CenterTrack"
"abewley/sort" -> "cheind/py-motmetrics"
"abewley/sort" -> "foolwood/benchmark_results" ["e"=1]
"abewley/sort" -> "Smorodov/Multitarget-tracker"
"abewley/sort" -> "xingyizhou/CenterNet" ["e"=1]
"abewley/sort" -> "ifzhang/ByteTrack"
"abewley/sort" -> "mikel-brostrom/boxmot"
"abewley/sort" -> "abhineet123/Deep-Learning-for-Tracking-and-Detection"
"abewley/sort" -> "bochinski/iou-tracker"
"NirAharon/BoT-SORT" -> "noahcao/OC_SORT"
"NirAharon/BoT-SORT" -> "dyhBUPT/StrongSORT"
"NirAharon/BoT-SORT" -> "ifzhang/ByteTrack"
"NirAharon/BoT-SORT" -> "JonathonLuiten/TrackEval"
"NirAharon/BoT-SORT" -> "luanshiyinyang/awesome-multiple-object-tracking"
"NirAharon/BoT-SORT" -> "JackWoo0831/Yolov7-tracker"
"NirAharon/BoT-SORT" -> "GerardMaggiolino/Deep-OC-SORT"
"NirAharon/BoT-SORT" -> "ymzis69/HybridSORT"
"NirAharon/BoT-SORT" -> "megvii-research/MOTRv2"
"NirAharon/BoT-SORT" -> "WWangYuHsiang/SMILEtrack"
"NirAharon/BoT-SORT" -> "mikel-brostrom/boxmot"
"NirAharon/BoT-SORT" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet"
"NirAharon/BoT-SORT" -> "DanceTrack/DanceTrack"
"NirAharon/BoT-SORT" -> "JDAI-CV/fast-reid" ["e"=1]
"NirAharon/BoT-SORT" -> "megvii-research/MOTR"
"facebookresearch/pysparnn" -> "facebookarchive/fbpca" ["e"=1]
"z1069614715/yolo-pyqt" -> "JackWoo0831/Yolov7-tracker" ["e"=1]
"triple-Mu/YOLOv8-TensorRT" -> "shaoshengsong/DeepSORT" ["e"=1]
"triple-Mu/YOLOv8-TensorRT" -> "ifzhang/ByteTrack" ["e"=1]
"RobinDavid/Motion-detection-OpenCV" -> "cedricve/motion-detection"
"RobinDavid/Motion-detection-OpenCV" -> "dereks/motion_tracking"
"RobinDavid/Motion-detection-OpenCV" -> "jbeale1/OpenCV"
"ITCoders/Human-detection-and-Tracking" -> "ambakick/Person-Detection-and-Tracking"
"ITCoders/Human-detection-and-Tracking" -> "BUPTLdy/human-detector"
"ITCoders/Human-detection-and-Tracking" -> "DrewNF/Tensorflow_Object_Tracking_Video" ["e"=1]
"ITCoders/Human-detection-and-Tracking" -> "pyannote/pyannote-video" ["e"=1]
"ITCoders/Human-detection-and-Tracking" -> "Qidian213/deep_sort_yolov3"
"ITCoders/Human-detection-and-Tracking" -> "shanren7/real_time_face_recognition" ["e"=1]
"ITCoders/Human-detection-and-Tracking" -> "obendidi/Tracking-with-darkflow"
"ITCoders/Human-detection-and-Tracking" -> "facebookresearch/DetectAndTrack" ["e"=1]
"ITCoders/Human-detection-and-Tracking" -> "ZidanMusk/experimenting-with-sort"
"ITCoders/Human-detection-and-Tracking" -> "bikz05/object-tracker"
"ITCoders/Human-detection-and-Tracking" -> "mpatacchiola/deepgaze" ["e"=1]
"ITCoders/Human-detection-and-Tracking" -> "akphi/PedestrianCounter"
"ITCoders/Human-detection-and-Tracking" -> "sturkmen72/C4-Real-time-pedestrian-detection"
"ITCoders/Human-detection-and-Tracking" -> "spencer-project/spencer_people_tracking" ["e"=1]
"ITCoders/Human-detection-and-Tracking" -> "LukashenkoYevhenii/People-Counter"
"MasterBin-IIAU/Unicorn" -> "noahcao/OC_SORT" ["e"=1]
"MasterBin-IIAU/Unicorn" -> "DanceTrack/DanceTrack" ["e"=1]
"MasterBin-IIAU/Unicorn" -> "NirAharon/BoT-SORT" ["e"=1]
"dvlab-research/ECCV22-P3AFormer-Tracking-Objects-as-Pixel-wise-Distributions" -> "megvii-research/MOTRv2"
"dvlab-research/ECCV22-P3AFormer-Tracking-Objects-as-Pixel-wise-Distributions" -> "psaltaath/tadn-mot"
"dvlab-research/ECCV22-P3AFormer-Tracking-Objects-as-Pixel-wise-Distributions" -> "dvl-tum/GHOST"
"dvlab-research/ECCV22-P3AFormer-Tracking-Objects-as-Pixel-wise-Distributions" -> "BingfengYan/CO-MOT"
"dvlab-research/ECCV22-P3AFormer-Tracking-Objects-as-Pixel-wise-Distributions" -> "TRI-ML/permatrack"
"dvlab-research/ECCV22-P3AFormer-Tracking-Objects-as-Pixel-wise-Distributions" -> "CVMI-Lab/IST-Net" ["e"=1]
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "bharath5673/StrongSORT-YOLO"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "dyhBUPT/StrongSORT"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "NirAharon/BoT-SORT"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "JunweiLiang/Object_Detection_Tracking"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "JackWoo0831/Yolov7-tracker"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "SurajDonthi/Multi-Camera-Person-Re-Identification"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "RizwanMunawar/yolov7-object-tracking"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "deshwalmahesh/yolov7-deepsort-tracking"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "xuarehere/yolo_series_deepsort_pytorch"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "WWangYuHsiang/SMILEtrack"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "noahcao/OC_SORT"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "GehenHe/TRACTA"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "ipl-uw/AIC23_Track1_UWIPL_ETRI"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "nota-github/AIC2023_Track1_Nota"
"mikel-brostrom/Yolov7_StrongSORT_OSNet" -> "samihormi/Multi-Camera-Person-Tracking-and-Re-Identification"
"GerardMaggiolino/Deep-OC-SORT" -> "noahcao/OC_SORT"
"GerardMaggiolino/Deep-OC-SORT" -> "ymzis69/HybridSORT"
"GerardMaggiolino/Deep-OC-SORT" -> "dvl-tum/SUSHI"
"GerardMaggiolino/Deep-OC-SORT" -> "WWangYuHsiang/SMILEtrack"
"GerardMaggiolino/Deep-OC-SORT" -> "megvii-research/MOTRv2"
"GerardMaggiolino/Deep-OC-SORT" -> "hustvl/SparseTrack"
"GerardMaggiolino/Deep-OC-SORT" -> "dvl-tum/GHOST"
"GerardMaggiolino/Deep-OC-SORT" -> "dyhBUPT/StrongSORT"
"GerardMaggiolino/Deep-OC-SORT" -> "NirAharon/BoT-SORT"
"GerardMaggiolino/Deep-OC-SORT" -> "BingfengYan/CO-MOT"
"GerardMaggiolino/Deep-OC-SORT" -> "MCG-NJU/MixSort"
"GerardMaggiolino/Deep-OC-SORT" -> "corfyi/UCMCTrack"
"GerardMaggiolino/Deep-OC-SORT" -> "JackWoo0831/Easier_To_Use_TrackEval"
"GerardMaggiolino/Deep-OC-SORT" -> "MCG-NJU/MeMOTR"
"GerardMaggiolino/Deep-OC-SORT" -> "vukasin-stanojevic/BoostTrack"
"JackWoo0831/Yolov7-tracker" -> "NirAharon/BoT-SORT"
"JackWoo0831/Yolov7-tracker" -> "noahcao/OC_SORT"
"JackWoo0831/Yolov7-tracker" -> "JonathonLuiten/TrackEval"
"JackWoo0831/Yolov7-tracker" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet"
"JackWoo0831/Yolov7-tracker" -> "JackWoo0831/Easier_To_Use_TrackEval"
"JackWoo0831/Yolov7-tracker" -> "dyhBUPT/StrongSORT"
"JackWoo0831/Yolov7-tracker" -> "luanshiyinyang/awesome-multiple-object-tracking"
"JackWoo0831/Yolov7-tracker" -> "ifzhang/ByteTrack"
"JackWoo0831/Yolov7-tracker" -> "mikel-brostrom/boxmot"
"JackWoo0831/Yolov7-tracker" -> "RizwanMunawar/yolov7-object-tracking"
"JackWoo0831/Yolov7-tracker" -> "ymzis69/HybridSORT"
"JackWoo0831/Yolov7-tracker" -> "Sharpiless/Yolov5-Deepsort"
"JackWoo0831/Yolov7-tracker" -> "corfyi/UCMCTrack"
"JackWoo0831/Yolov7-tracker" -> "GerardMaggiolino/Deep-OC-SORT"
"JackWoo0831/Yolov7-tracker" -> "deshwalmahesh/yolov7-deepsort-tracking"
"RizwanMunawar/yolov7-segmentation" -> "RizwanMunawar/yolov7-object-tracking"
"RizwanMunawar/yolov7-segmentation" -> "RizwanMunawar/yolov7-pose-estimation"
"RizwanMunawar/yolov7-segmentation" -> "RizwanMunawar/yolov7-object-blurring"
"RizwanMunawar/yolov7-segmentation" -> "RizwanMunawar/yolov5-object-tracking"
"RizwanMunawar/yolov7-segmentation" -> "RizwanMunawar/YOLO-RX57-FPS-Comparision"
"RizwanMunawar/yolov7-segmentation" -> "RizwanMunawar/Houses-price-prediction-web-app-machine-learning-"
"RizwanMunawar/yolov7-segmentation" -> "RizwanMunawar/yolov7-object-cropping"
"RizwanMunawar/yolov7-segmentation" -> "RizwanMunawar/yolov8-object-tracking"
"RizwanMunawar/yolov7-segmentation" -> "midasklr/yolov5ds" ["e"=1]
"WWangYuHsiang/SMILEtrack" -> "pingyang1117/SMILEtrack_Official"
"WWangYuHsiang/SMILEtrack" -> "hustvl/SparseTrack"
"WWangYuHsiang/SMILEtrack" -> "GerardMaggiolino/Deep-OC-SORT"
"WWangYuHsiang/SMILEtrack" -> "megvii-research/MOTRv2"
"WWangYuHsiang/SMILEtrack" -> "vukasin-stanojevic/BoostTrack"
"WWangYuHsiang/SMILEtrack" -> "dvl-tum/GHOST"
"WWangYuHsiang/SMILEtrack" -> "corfyi/UCMCTrack"
"WWangYuHsiang/SMILEtrack" -> "ymzis69/HybridSORT"
"WWangYuHsiang/SMILEtrack" -> "dvl-tum/SUSHI"
"WWangYuHsiang/SMILEtrack" -> "NirAharon/BoT-SORT"
"WWangYuHsiang/SMILEtrack" -> "MCG-NJU/MOTIP"
"WWangYuHsiang/SMILEtrack" -> "amazon-science/tracking-dataset"
"WWangYuHsiang/SMILEtrack" -> "dyhBUPT/StrongSORT"
"WWangYuHsiang/SMILEtrack" -> "shengyuhao/DIVOTrack"
"WWangYuHsiang/SMILEtrack" -> "noahcao/OC_SORT"
"RizwanMunawar/yolov8-object-tracking" -> "MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking"
"RizwanMunawar/yolov8-object-tracking" -> "RizwanMunawar/yolov7-object-tracking"
"RizwanMunawar/yolov8-object-tracking" -> "RizwanMunawar/yolov5-object-tracking"
"RizwanMunawar/yolov8-object-tracking" -> "MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking"
"RizwanMunawar/yolov8-object-tracking" -> "ibaiGorordo/ONNX-YOLOv8-Object-Detection" ["e"=1]
"RizwanMunawar/yolov8-object-tracking" -> "RizwanMunawar/Houses-price-prediction-web-app-machine-learning-"
"RizwanMunawar/yolov8-object-tracking" -> "RizwanMunawar/yolov7-segmentation"
"RizwanMunawar/yolov8-object-tracking" -> "isLinXu/YOLOv8_Efficient" ["e"=1]
"RizwanMunawar/yolov8-object-tracking" -> "MuhammadMoinFaisal/FireDetectionYOLOv8" ["e"=1]
"andrewssobral/vehicle_detection_haarcascades" -> "andrewssobral/simple_vehicle_counting"
"andrewssobral/vehicle_detection_haarcascades" -> "abhi-kumar/CAR-DETECTION"
"andrewssobral/vehicle_detection_haarcascades" -> "mrnugget/opencv-haar-classifier-training"
"andrewssobral/vehicle_detection_haarcascades" -> "AdityaPai2398/Vehicle-And-Pedestrian-Detection-Using-Haar-Cascades"
"andrewssobral/vehicle_detection_haarcascades" -> "JunshengFu/vehicle-detection"
"andrewssobral/vehicle_detection_haarcascades" -> "tomazas/opencv-lane-vehicle-track" ["e"=1]
"andrewssobral/vehicle_detection_haarcascades" -> "ahmetozlu/vehicle_counting"
"andrewssobral/vehicle_detection_haarcascades" -> "xslittlegrass/CarND-Vehicle-Detection"
"andrewssobral/vehicle_detection_haarcascades" -> "bikz05/object-detector"
"andrewssobral/vehicle_detection_haarcascades" -> "udacity/CarND-Vehicle-Detection" ["e"=1]
"andrewssobral/vehicle_detection_haarcascades" -> "antevis/CarND-Project5-Vehicle_Detection_and_Tracking"
"andrewssobral/vehicle_detection_haarcascades" -> "tatsuyah/vehicle-detection"
"andrewssobral/vehicle_detection_haarcascades" -> "pddenhar/OpenCV-Dashcam-Car-Detection"
"andrewssobral/vehicle_detection_haarcascades" -> "MicrocontrollersAndMore/OpenCV_3_Car_Counting_Cpp" ["e"=1]
"andrewssobral/vehicle_detection_haarcascades" -> "balancap/SDC-Vehicle-Detection"
"mcximing/sort-cpp" -> "yasenh/sort-cpp"
"mcximing/sort-cpp" -> "shaoshengsong/DeepSORT"
"mcximing/sort-cpp" -> "oylz/DS"
"mcximing/sort-cpp" -> "weixu000/libtorch-yolov3-deepsort"
"mcximing/sort-cpp" -> "abewley/sort"
"mcximing/sort-cpp" -> "samuelmurray/tracking-by-detection"
"mcximing/sort-cpp" -> "Smorodov/Multitarget-tracker"
"mcximing/sort-cpp" -> "apennisi/deep_sort"
"mcximing/sort-cpp" -> "bitzy/DeepSort"
"mcximing/sort-cpp" -> "hpc203/bytetrack-opencv-onnxruntime" ["e"=1]
"mcximing/sort-cpp" -> "RichardoMrMu/yolov5-deepsort-tensorrt" ["e"=1]
"mcximing/sort-cpp" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"mcximing/sort-cpp" -> "nwojke/cosine_metric_learning"
"mcximing/sort-cpp" -> "rockkingjy/OpenTracker" ["e"=1]
"mcximing/sort-cpp" -> "engcang/ros-yolo-sort"
"computervisioneng/train-yolov8-custom-dataset-step-by-step-guide" -> "computervisioneng/automatic-number-plate-recognition-python-yolov8"
"computervisioneng/train-yolov8-custom-dataset-step-by-step-guide" -> "computervisioneng/image-classification-yolov8"
"computervisioneng/train-yolov8-custom-dataset-step-by-step-guide" -> "computervisioneng/image-segmentation-yolov8"
"computervisioneng/train-yolov8-custom-dataset-step-by-step-guide" -> "computervisioneng/opencv-python-course-computer-vision"
"computervisioneng/train-yolov8-custom-dataset-step-by-step-guide" -> "computervisioneng/yolov8-full-tutorial"
"computervisioneng/train-yolov8-custom-dataset-step-by-step-guide" -> "computervisioneng/object-tracking-yolov8-deep-sort"
"computervisioneng/train-yolov8-custom-dataset-step-by-step-guide" -> "computervisioneng/train-object-detector-detectron2"
"SkalskiP/sports" -> "RizwanMunawar/yolov7-pose-estimation" ["e"=1]
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "RizwanMunawar/yolov8-object-tracking"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "JackWoo0831/Yolov7-tracker"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "jingh-ai/ultralytics-YOLO-DeepSort-ByteTrack-PyQt-GUI" ["e"=1]
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "Sharpiless/Yolov5-Deepsort"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "mikel-brostrom/boxmot"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "RizwanMunawar/yolov7-object-tracking"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "dyhBUPT/StrongSORT"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "MuhammadMoinFaisal/YOLOv7-DeepSORT-Object-Tracking"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "Sharpiless/Yolov5-deepsort-inference"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "NirAharon/BoT-SORT"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "ZQPei/deep_sort_pytorch"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "HowieMa/DeepSORT_YOLOv5_Pytorch"
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" -> "KdaiP/yolov8-deepsort-tracking" ["e"=1]
"MarvinTeichmann/KittiSeg" -> "MarvinTeichmann/KittiBox" ["e"=1]
"MarvinTeichmann/KittiSeg" -> "TensorVision/TensorVision" ["e"=1]
"RizwanMunawar/yolov7-object-tracking" -> "RizwanMunawar/yolov7-pose-estimation"
"RizwanMunawar/yolov7-object-tracking" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet"
"RizwanMunawar/yolov7-object-tracking" -> "RizwanMunawar/yolov7-segmentation"
"RizwanMunawar/yolov7-object-tracking" -> "JackWoo0831/Yolov7-tracker"
"RizwanMunawar/yolov7-object-tracking" -> "RizwanMunawar/yolov8-object-tracking"
"RizwanMunawar/yolov7-object-tracking" -> "RizwanMunawar/yolov5-object-tracking"
"RizwanMunawar/yolov7-object-tracking" -> "MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking"
"RizwanMunawar/yolov7-object-tracking" -> "bharath5673/StrongSORT-YOLO"
"RizwanMunawar/yolov7-object-tracking" -> "deshwalmahesh/yolov7-deepsort-tracking"
"RizwanMunawar/yolov7-object-tracking" -> "augmentedstartups/AS-One"
"RizwanMunawar/yolov7-object-tracking" -> "haroonshakeel/yolov7-object-tracking"
"RizwanMunawar/yolov7-object-tracking" -> "muratali016/Yolov7-Object-Counter-Custom-Funcitons"
"RizwanMunawar/yolov7-object-tracking" -> "NirAharon/BoT-SORT"
"RizwanMunawar/yolov7-object-tracking" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"RizwanMunawar/yolov7-object-tracking" -> "dyhBUPT/StrongSORT"
"DataXujing/YOLOv8" -> "shaoshengsong/DeepSORT" ["e"=1]
"bharath5673/StrongSORT-YOLO" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet"
"bharath5673/StrongSORT-YOLO" -> "dyhBUPT/StrongSORT"
"bharath5673/StrongSORT-YOLO" -> "kadirnar/torchyolo"
"bharath5673/StrongSORT-YOLO" -> "xuarehere/yolo_series_deepsort_pytorch"
"bharath5673/StrongSORT-YOLO" -> "JackWoo0831/Yolov7-tracker"
"bharath5673/StrongSORT-YOLO" -> "HanGuangXin/ByteTrack_ReID"
"bharath5673/StrongSORT-YOLO" -> "HowieMa/DeepSORT_YOLOv5_Pytorch"
"bharath5673/StrongSORT-YOLO" -> "RizwanMunawar/yolov7-object-tracking"
"bharath5673/StrongSORT-YOLO" -> "deshwalmahesh/yolov7-deepsort-tracking"
"bharath5673/StrongSORT-YOLO" -> "NirAharon/BoT-SORT"
"bharath5673/StrongSORT-YOLO" -> "DoganK01/YOLOV8-DeepSORT-Tracking-Vehicle-Counting"
"bharath5673/StrongSORT-YOLO" -> "LeonLok/Multi-Camera-Live-Object-Tracking"
"xinychen/tensor-book" -> "xinychen/Tensor4ML"
"xinychen/tensor-book" -> "leicheng-tensor/Reproducible-Bayesian-Tensor-Matrix-Machine-Learning-SOTA"
"xinychen/tensor-book" -> "Chengyuan-Zhang/IDM_Bayesian_Calibration"
"AaronCIH/RVSL-rvsl-robust-vehicle-similarity-learning--ECCV22" -> "AaronCIH/SJDL-Foggy-Vehicle-Re-Identification--AAAI2022"
"we0091234/Car_recognition" -> "dyh/win10_yolov5_deepsort_counting" ["e"=1]
"xuarehere/yolo_series_deepsort_pytorch" -> "xuarehere/yolov7_deepsort_tensorrt" ["e"=1]
"xuarehere/yolo_series_deepsort_pytorch" -> "deshwalmahesh/yolov7-deepsort-tracking"
"DoganK01/YOLOV8-DeepSORT-Tracking-Vehicle-Counting" -> "krisnarengga/yolov7-vehicle-counting"
"computervisioneng/face-attendance-system" -> "computervisioneng/face-attendance-web-app-react-python"
"megvii-research/MOTRv2" -> "megvii-research/MOTR"
"megvii-research/MOTRv2" -> "MCG-NJU/MOTIP"
"megvii-research/MOTRv2" -> "DanceTrack/DanceTrack"
"megvii-research/MOTRv2" -> "MCG-NJU/MeMOTR"
"megvii-research/MOTRv2" -> "dvl-tum/SUSHI"
"megvii-research/MOTRv2" -> "ymzis69/HybridSORT"
"megvii-research/MOTRv2" -> "GerardMaggiolino/Deep-OC-SORT"
"megvii-research/MOTRv2" -> "timmeinhardt/trackformer"
"megvii-research/MOTRv2" -> "noahcao/OC_SORT"
"megvii-research/MOTRv2" -> "xingyizhou/GTR"
"megvii-research/MOTRv2" -> "WWangYuHsiang/SMILEtrack"
"megvii-research/MOTRv2" -> "dvl-tum/GHOST"
"megvii-research/MOTRv2" -> "dvlab-research/ECCV22-P3AFormer-Tracking-Objects-as-Pixel-wise-Distributions"
"megvii-research/MOTRv2" -> "BingfengYan/CO-MOT"
"megvii-research/MOTRv2" -> "wudongming97/RMOT"
"RizwanMunawar/yolov7-pose-estimation" -> "RizwanMunawar/yolov7-object-tracking"
"RizwanMunawar/yolov7-pose-estimation" -> "Bigtuo/YOLOv7-Pose-Bytetrack-STGCN" ["e"=1]
"RizwanMunawar/yolov7-pose-estimation" -> "TexasInstruments/edgeai-yolov5" ["e"=1]
"RizwanMunawar/yolov7-pose-estimation" -> "nanmi/yolov7-pose" ["e"=1]
"RizwanMunawar/yolov7-pose-estimation" -> "RizwanMunawar/yolov7-segmentation"
"RizwanMunawar/yolov7-pose-estimation" -> "qinggangwu/yolov7-pose_Npoint_Ncla" ["e"=1]
"RizwanMunawar/yolov7-pose-estimation" -> "wmcnally/kapao" ["e"=1]
"RizwanMunawar/yolov7-pose-estimation" -> "RizwanMunawar/yolov5-object-tracking"
"RizwanMunawar/yolov7-pose-estimation" -> "jahongir7174/YOLOv8-pose"
"RizwanMunawar/yolov7-pose-estimation" -> "dronefreak/human-action-classification" ["e"=1]
"RizwanMunawar/yolov7-pose-estimation" -> "muratali016/Yolov7-Object-Counter-Custom-Funcitons"
"RizwanMunawar/yolov7-pose-estimation" -> "RizwanMunawar/yolov7-object-blurring"
"muratali016/Yolov7-Object-Counter-Custom-Funcitons" -> "muratali016/Yolov7-License-Plate-Recognition-Program"
"muratali016/Yolov7-Object-Counter-Custom-Funcitons" -> "muratali016/Yolov7-Cigarette-Censor-and-Smoker-s-Faces-Recorder"
"RizwanMunawar/yolov7-object-blurring" -> "RizwanMunawar/Houses-price-prediction-web-app-machine-learning-"
"RizwanMunawar/yolov7-object-blurring" -> "RizwanMunawar/yolov7-object-cropping"
"RizwanMunawar/yolov7-object-blurring" -> "RizwanMunawar/YOLO-RX57-FPS-Comparision"
"MuhammadMoinFaisal/YOLOv8-object-tracking-blurring-counting" -> "MuhammadMoinFaisal/yolov7-segmentation-with-DeepSORT-Tracking"
"mcximing/hungarian-algorithm-cpp" -> "saebyn/munkres-cpp"
"mcximing/hungarian-algorithm-cpp" -> "mcximing/sort-cpp"
"mcximing/hungarian-algorithm-cpp" -> "yasenh/sort-cpp"
"deshwalmahesh/yolov7-deepsort-tracking" -> "xuarehere/yolo_series_deepsort_pytorch"
"deshwalmahesh/yolov7-deepsort-tracking" -> "deyiwang89/pytorch-yolov7-deepsort"
"deshwalmahesh/yolov7-deepsort-tracking" -> "MuhammadMoinFaisal/YOLOv7-DeepSORT-Object-Tracking"
"deshwalmahesh/yolov7-deepsort-tracking" -> "JackWoo0831/Yolov7-tracker"
"deshwalmahesh/yolov7-deepsort-tracking" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet"
"RizwanMunawar/yolov5-object-tracking" -> "RizwanMunawar/yolov7-object-blurring"
"RizwanMunawar/yolov5-object-tracking" -> "RizwanMunawar/YOLO-RX57-FPS-Comparision"
"RizwanMunawar/yolov5-object-tracking" -> "RizwanMunawar/Houses-price-prediction-web-app-machine-learning-"
"RizwanMunawar/yolov5-object-tracking" -> "RizwanMunawar/yolov7-object-cropping"
"canyilu/LibADMM-toolbox" -> "canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA"
"canyilu/LibADMM-toolbox" -> "yangyan92/Deep-ADMM-Net" ["e"=1]
"canyilu/LibADMM-toolbox" -> "andrewssobral/lrslibrary"
"canyilu/LibADMM-toolbox" -> "nmchaves/admm-for-lp"
"canyilu/LibADMM-toolbox" -> "canyilu/Tensor-tensor-product-toolbox"
"canyilu/LibADMM-toolbox" -> "zhaoxile/reproducible-tensor-completion-state-of-the-art"
"canyilu/LibADMM-toolbox" -> "andrewssobral/mctc4bmi"
"canyilu/LibADMM-toolbox" -> "fangvv/LassoADMM"
"canyilu/LibADMM-toolbox" -> "JHUVisionLab/SSC-using-ADMM" ["e"=1]
"canyilu/LibADMM-toolbox" -> "tarmiziAdam2005/Image-Signal-Processing"
"canyilu/LibADMM-toolbox" -> "liu6tot/matrix-completion"
"canyilu/LibADMM-toolbox" -> "indigits/sparse-plex" ["e"=1]
"canyilu/LibADMM-toolbox" -> "andrewssobral/mtt"
"canyilu/LibADMM-toolbox" -> "qiangsiwei/tensor_tools"
"canyilu/LibADMM-toolbox" -> "nightldj/admm_release"
"Naughty-Galileo/YoloV5_MCMOT" -> "tungdop2/ByteTrack_yolov5"
"MuhammadMoinFaisal/YOLOv7-DeepSORT-Object-Tracking" -> "MuhammadMoinFaisal/yolov7-segmentation-with-DeepSORT-Tracking"
"MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking" -> "MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking"
"MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking" -> "MuhammadMoinFaisal/YOLOv8-object-tracking-blurring-counting"
"MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking" -> "MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8"
"MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking" -> "MuhammadMoinFaisal/FireDetectionYOLOv8" ["e"=1]
"MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking" -> "RizwanMunawar/yolov8-object-tracking"
"MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking" -> "jingh-ai/ultralytics-YOLO-DeepSort-ByteTrack-PyQt-GUI" ["e"=1]
"MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking" -> "MuhammadMoinFaisal/YOLOv7-DeepSORT-Object-Tracking"
"MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking" -> "fish-kong/Yolov8-instance-seg-tensorrt" ["e"=1]
"damo-cv/UFDN-Reid" -> "AaronCIH/RVSL-rvsl-robust-vehicle-similarity-learning--ECCV22"
"muratali016/AI-Instagram-filter-with-Computer-Vision" -> "muratali016/Yolo-CV-Game"
"RizwanMunawar/yolov7-object-cropping" -> "RizwanMunawar/Extraction-of-frames-from-single-video-computer-vision-"
"RizwanMunawar/yolov7-object-cropping" -> "RizwanMunawar/Houses-price-prediction-web-app-machine-learning-"
"dendorferpatrick/QuoVadis" -> "weihong9/CountingMOT"
"dataprofessor/streamlit-for-datascience" -> "dataprofessor/streamlit-for-llm"
"DoganK01/YOLOV7-OBJECT-COUNTER-V1.2" -> "muratali016/Yolov7-License-Plate-Recognition-Program"
"shengyuhao/DIVOTrack" -> "Nathan-Li123/LaMOT"
"shengyuhao/DIVOTrack" -> "zyn213/TempRMOT"
"shengyuhao/DIVOTrack" -> "realgump/MvMHAT"
"shengyuhao/DIVOTrack" -> "dvl-tum/SUSHI"
"shengyuhao/DIVOTrack" -> "balabooooo/AED"
"shengyuhao/DIVOTrack" -> "WesLee88524/LG-MOT"
"shengyuhao/DIVOTrack" -> "lorenzovaquero/BUSCA"
"sturkmen72/C4-Real-time-pedestrian-detection" -> "chhshen/pedestrian-detection"
"sturkmen72/C4-Real-time-pedestrian-detection" -> "xmfbit/PedestrianDetection"
"MichistaLin/yolov5-deepsort-pedestraintracking" -> "oaqoe-DWQ/Yolov5_DeepSort_Pytorch"
"MichistaLin/yolov5-deepsort-pedestraintracking" -> "dyh/win10_yolov5_deepsort_counting"
"SysCV/tet" -> "SysCV/ovtrack"
"manutdzou/KITTI_SSD" -> "lucasjinreal/kitti-ssd"
"manutdzou/KITTI_SSD" -> "manutdzou/KITTI_FRC_detection"
"cdmstrong/yolov5-deepSort-tracker" -> "zcharon/Smart-Transportation-System"
"Chengyuan-Zhang/IDM_Bayesian_Calibration" -> "stepeos/pycarmodel_calibration"
"hafidh561/multi-camera-people-tracking" -> "KunalArora/multiple-camera_multiple-people_tracking"
"hafidh561/multi-camera-people-tracking" -> "nolanzzz/mtmct"
"muratali016/Yolov7-Cigarette-Censor-and-Smoker-s-Faces-Recorder" -> "muratali016/Yolo-CV-Game"
"JeanKossaifi/python-hog" -> "ahmedfgad/HOGNumPy"
"AIVIETNAMResearch/AI-City-2023-Track2" -> "AIVIETNAMResearch/Video-Text-Retrieval"
"kadirnar/TrackerHub" -> "kadirnar/Pyorch-LeNet5"
"wanghailin97/Guaranteed-Tensor-Recovery-Fused-Low-rankness-and-Smoothness" -> "mtntruong/AGTC"
"AIVIETNAMResearch/Video-Text-Retrieval" -> "AIVIETNAMResearch/AI-City-2023-Track2"
"RizwanMunawar/YOLO-RX57-FPS-Comparision" -> "RizwanMunawar/Houses-price-prediction-web-app-machine-learning-"
"mftnakrsu/paper_summary_makale_ozetleri" -> "mftnakrsu/DeepDream"
"mftnakrsu/paper_summary_makale_ozetleri" -> "mftnakrsu/ObjectDetection-w-opencv"
"mobarski/ask-my-pdf" -> "dKosarevsky/AI-Talks" ["e"=1]
"dKosarevsky/AI-Talks" -> "heiko-hotz/streamlit-chatgpt-ui"
"heiko-hotz/streamlit-chatgpt-ui" -> "joeychrys/streamlit-chatGPT"
"heiko-hotz/streamlit-chatgpt-ui" -> "dKosarevsky/AI-Talks"
"heiko-hotz/streamlit-chatgpt-ui" -> "dclin/gptlab-streamlit"
"dusty-nv/jetson-inference" -> "nwojke/deep_sort" ["e"=1]
"Guanghan/ROLO" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"Guanghan/ROLO" -> "abhineet123/Deep-Learning-for-Tracking-and-Detection" ["e"=1]
"Guanghan/ROLO" -> "bochinski/iou-tracker" ["e"=1]
"computervisioneng/automatic-number-plate-recognition-python-yolov8" -> "computervisioneng/train-yolov8-custom-dataset-step-by-step-guide"
"computervisioneng/automatic-number-plate-recognition-python-yolov8" -> "Muhammad-Zeerak-Khan/Automatic-License-Plate-Recognition-using-YOLOv8"
"computervisioneng/automatic-number-plate-recognition-python-yolov8" -> "MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8"
"computervisioneng/automatic-number-plate-recognition-python-yolov8" -> "AjinkyaDeshpande39/ObjectDetection"
"computervisioneng/automatic-number-plate-recognition-python-yolov8" -> "computervisioneng/face-attendance-system"
"computervisioneng/automatic-number-plate-recognition-python-yolov8" -> "mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR"
"computervisioneng/automatic-number-plate-recognition-python-yolov8" -> "AarohiSingla/Automatic-Number-Plate-Recognition--ANPR-"
"computervisioneng/automatic-number-plate-recognition-python-yolov8" -> "RizwanMunawar/yolov8-object-tracking"
"computervisioneng/automatic-number-plate-recognition-python-yolov8" -> "Asikpalysik/Automatic-License-Plate-Detection"
"CVHub520/X-AnyLabeling" -> "mikel-brostrom/boxmot" ["e"=1]
"lferry007/LargeVis" -> "facebookarchive/fbpca" ["e"=1]
"jingh-ai/ultralytics-YOLO-DeepSort-ByteTrack-PyQt-GUI" -> "MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" ["e"=1]
"jingh-ai/ultralytics-YOLO-DeepSort-ByteTrack-PyQt-GUI" -> "DoganK01/YOLOV8-DeepSORT-Tracking-Vehicle-Counting" ["e"=1]
"bubbliiiing/yolov8-pytorch" -> "Sharpiless/Yolov5-Deepsort" ["e"=1]
"a16z-infra/llama2-chatbot" -> "dataprofessor/llama2" ["e"=1]
"streamlit/llm-examples" -> "dataprofessor/llama2" ["e"=1]
"curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain" -> "MuhammadMoinFaisal/LargeLanguageModelsProjects" ["e"=1]
"uoip/KCFpy" -> "apoorvavinod/Real_time_Object_detection_and_tracking" ["e"=1]
"JackWoo0831/Easier_To_Use_TrackEval" -> "alibaba/u2mot"
"Dovyski/cvui" -> "Smorodov/Multitarget-tracker" ["e"=1]
"rampal-punia/yolov8-streamlit-detection-tracking" -> "MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" ["e"=1]
"rampal-punia/yolov8-streamlit-detection-tracking" -> "RizwanMunawar/yolov8-object-tracking" ["e"=1]
"pingyang1117/SMILEtrack_Official" -> "WWangYuHsiang/SMILEtrack"
"dvl-tum/GHOST" -> "dvl-tum/SUSHI"
"dvl-tum/GHOST" -> "hustvl/SparseTrack"
"dvl-tum/GHOST" -> "ymzis69/HybridSORT"
"dvl-tum/GHOST" -> "qwomeng/MotionTrack"
"dvl-tum/GHOST" -> "BingfengYan/CO-MOT"
"dvl-tum/GHOST" -> "GerardMaggiolino/Deep-OC-SORT"
"dvl-tum/GHOST" -> "psaltaath/tadn-mot"
"dvl-tum/GHOST" -> "mengting2023/LG-Track"
"dvl-tum/GHOST" -> "megvii-research/MOTRv2"
"dvl-tum/GHOST" -> "WWangYuHsiang/SMILEtrack"
"zhaoweicai/mscnn" -> "hengck23/didi-udacity-2017" ["e"=1]
"zhangliliang/RPN_BF" -> "chhshen/pedestrian-detection" ["e"=1]
"foolwood/benchmark_results" -> "SpyderXu/multi-object-tracking-paper-list" ["e"=1]
"foolwood/benchmark_results" -> "nwojke/deep_sort" ["e"=1]
"foolwood/benchmark_results" -> "abewley/sort" ["e"=1]
"dataprofessor/llama2" -> "MuhammadMoinFaisal/LargeLanguageModelsProjects"
"dataprofessor/llama2" -> "a16z-infra/llama2-chatbot" ["e"=1]
"dataprofessor/llama2" -> "dataprofessor/streamlit-for-datascience"
"dataprofessor/llama2" -> "dataprofessor/hugchat" ["e"=1]
"dataprofessor/llama2" -> "dataprofessor/streamlit-for-llm"
"dataprofessor/llama2" -> "dataprofessor/population-dashboard"
"dataprofessor/llama2" -> "dclin/gptlab-streamlit"
"viplix3/BoTSORT-cpp" -> "NirAharon/BoT-SORT"
"anminhhung/Pipeline_HCM_AI" -> "AIVIETNAMResearch/VN_Multi_User_Video_Search"
"computervisioneng/object-tracking-yolov8-deep-sort" -> "computervisioneng/deep_sort"
"videturfortuna/vehicle_reid_itsc2023" -> "adhirajghosh/RPTM_reid"
"videturfortuna/vehicle_reid_itsc2023" -> "damo-cv/UFDN-Reid"
"MCG-NJU/MeMOTR" -> "MCG-NJU/MOTIP"
"MCG-NJU/MeMOTR" -> "megvii-research/MOTRv2"
"MCG-NJU/MeMOTR" -> "BingfengYan/CO-MOT"
"MCG-NJU/MeMOTR" -> "MCG-NJU/SportsMOT"
"MCG-NJU/MeMOTR" -> "dvl-tum/SUSHI"
"MCG-NJU/MeMOTR" -> "MCG-NJU/MixSort"
"MCG-NJU/MeMOTR" -> "ymzis69/HybridSORT"
"MCG-NJU/MeMOTR" -> "vukasin-stanojevic/BoostTrack"
"MCG-NJU/MeMOTR" -> "wudongming97/RMOT"
"MCG-NJU/MeMOTR" -> "megvii-research/MOTR"
"Muhammad-Zeerak-Khan/Automatic-License-Plate-Recognition-using-YOLOv8" -> "MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8"
"Muhammad-Zeerak-Khan/Automatic-License-Plate-Recognition-using-YOLOv8" -> "computervisioneng/automatic-number-plate-recognition-python-yolov8"
"Muhammad-Zeerak-Khan/Automatic-License-Plate-Recognition-using-YOLOv8" -> "mendez-luisjose/License-Plate-Detection-with-YoloV8-and-EasyOCR"
"Muhammad-Zeerak-Khan/Automatic-License-Plate-Recognition-using-YOLOv8" -> "mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR"
"MuhammadMoinFaisal/LargeLanguageModelsProjects" -> "MuhammadMoinFaisal/Computervisionprojects"
"MuhammadMoinFaisal/LargeLanguageModelsProjects" -> "dataprofessor/llama2"
"MuhammadMoinFaisal/LargeLanguageModelsProjects" -> "AIAnytime/ChatCSV-Llama2-Chatbot" ["e"=1]
"MuhammadMoinFaisal/LargeLanguageModelsProjects" -> "alejandro-ao/langchain-chat-gui" ["e"=1]
"MuhammadMoinFaisal/LargeLanguageModelsProjects" -> "curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain" ["e"=1]
"MuhammadMoinFaisal/LargeLanguageModelsProjects" -> "VK-Ant/Pdf_Website__Csv_Based_ChatBot_With_Translator_Using_Streamlit"
"BrandonJoffe/home_surveillance" -> "ITCoders/Human-detection-and-Tracking" ["e"=1]
"BrandonJoffe/home_surveillance" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"BrandonJoffe/home_surveillance" -> "jeffbass/imagezmq" ["e"=1]
"clarkzinzow/Nonlinear-Optimization-Algorithms" -> "hiroyuki-kasai/SGDLibrary"
"databricks-academy/large-language-models" -> "MuhammadMoinFaisal/LargeLanguageModelsProjects" ["e"=1]
"MarvinTeichmann/KittiBox" -> "MarvinTeichmann/MultiNet" ["e"=1]
"MarvinTeichmann/KittiBox" -> "MarvinTeichmann/KittiSeg" ["e"=1]
"MarvinTeichmann/KittiBox" -> "balancap/SDC-Vehicle-Detection"
"MarvinTeichmann/KittiBox" -> "BichenWuUCB/squeezeDet" ["e"=1]
"MarvinTeichmann/KittiBox" -> "Zengyi-Qin/MonoGRNet" ["e"=1]
"MarvinTeichmann/KittiBox" -> "zhaoweicai/mscnn" ["e"=1]
"MarvinTeichmann/KittiBox" -> "hengck23/didi-udacity-2017"
"MarvinTeichmann/KittiBox" -> "fregu856/2D_detection"
"MarvinTeichmann/KittiBox" -> "TensorVision/TensorVision"
"MarvinTeichmann/KittiBox" -> "manutdzou/KITTI_FRC_detection"
"MarvinTeichmann/KittiBox" -> "xslittlegrass/CarND-Vehicle-Detection"
"MarvinTeichmann/KittiBox" -> "xiaohaoChen/rrc_detection" ["e"=1]
"MarvinTeichmann/KittiBox" -> "manutdzou/KITTI_SSD"
"MarvinTeichmann/KittiBox" -> "umautobots/vod-converter" ["e"=1]
"MarvinTeichmann/KittiBox" -> "smallcorgi/3D-Deepbox" ["e"=1]
"MCG-NJU/MixFormerV2" -> "MCG-NJU/SportsMOT" ["e"=1]
"SysCV/ovtrack" -> "Coo1Sea/OVT-B-Dataset"
"SysCV/ovtrack" -> "SysCV/tet"
"SysCV/ovtrack" -> "siyuanliii/SLAck"
"SysCV/ovtrack" -> "Nathan-Li123/LaMOT"
"hustvl/Matte-Anything" -> "hustvl/SparseTrack" ["e"=1]
"hustvl/SparseTrack" -> "ymzis69/HybridSORT"
"hustvl/SparseTrack" -> "WWangYuHsiang/SMILEtrack"
"hustvl/SparseTrack" -> "dvl-tum/GHOST"
"hustvl/SparseTrack" -> "GerardMaggiolino/Deep-OC-SORT"
"hustvl/SparseTrack" -> "dvl-tum/SUSHI"
"hustvl/SparseTrack" -> "mengting2023/LG-Track"
"hustvl/SparseTrack" -> "chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT"
"hustvl/SparseTrack" -> "DLR-MI/UTrack"
"hustvl/SparseTrack" -> "corfyi/UCMCTrack"
"hustvl/SparseTrack" -> "pingyang1117/SMILEtrack_Official"
"hustvl/SparseTrack" -> "kamkyu94/AdapTrack"
"hustvl/SparseTrack" -> "vukasin-stanojevic/BoostTrack"
"hustvl/SparseTrack" -> "MCG-NJU/MOTIP"
"akphi/PedestrianCounter" -> "AdityaPai2398/Vehicle-And-Pedestrian-Detection-Using-Haar-Cascades"
"akphi/PedestrianCounter" -> "buffer51/lstm-rcnn-pedestrian-detection" ["e"=1]
"akphi/PedestrianCounter" -> "thatbrguy/Pedestrian-Detection"
"akphi/PedestrianCounter" -> "xmfbit/PedestrianDetection"
"akphi/PedestrianCounter" -> "zlingkang/mobilenet_ssd_pedestrian_detection"
"BUPTLdy/human-detector" -> "bikz05/object-detector"
"BUPTLdy/human-detector" -> "windowsub0406/Vehicle-Detection-YOLO-ver"
"BUPTLdy/human-detector" -> "jianlong-yuan/HOG-SVM-python"
"BUPTLdy/human-detector" -> "icsfy/Pedestrian_Detection"
"JDAI-CV/VeRidataset" -> "layumi/Vehicle_reID-Collection"
"JDAI-CV/VeRidataset" -> "Zhongdao/VehicleReIDKeyPointData"
"JDAI-CV/VeRidataset" -> "PKU-IMRE/VERI-Wild"
"JDAI-CV/VeRidataset" -> "knwng/awesome-vehicle-re-identification"
"JDAI-CV/VeRidataset" -> "lxc86739795/vehiclereid_baseline"
"JDAI-CV/VeRidataset" -> "Jakel21/vehicle-ReID-baseline"
"JDAI-CV/VeRidataset" -> "layumi/AICIty-reID-2020"
"JDAI-CV/VeRidataset" -> "heshuting555/AICITY2020_DMT_VehicleReID"
"JDAI-CV/VeRidataset" -> "lxc86739795/human_vehicle_parsing_platform" ["e"=1]
"JDAI-CV/VeRidataset" -> "VehicleReId/VeRi"
"JDAI-CV/VeRidataset" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation"
"JDAI-CV/VeRidataset" -> "DTennant/reid_baseline_with_syncbn"
"JDAI-CV/VeRidataset" -> "CaptainEven/RepNet-MDNet-VehicleReID"
"JDAI-CV/VeRidataset" -> "AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification"
"JDAI-CV/VeRidataset" -> "silverbulletmdc/PVEN"
"zhimingluo/MovingObjectSegmentation" -> "aimeng100/WeSamBE"
"BingfengYan/VISAM" -> "BingfengYan/CO-MOT"
"BingfengYan/VISAM" -> "balabooooo/AED"
"we0091234/yolov8-plate" -> "MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"NVIDIAAICITYCHALLENGE/2023AICITY_Code_From_Top_Teams" -> "nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge"
"NVIDIAAICITYCHALLENGE/2023AICITY_Code_From_Top_Teams" -> "nota-github/AIC2023_Track1_Nota"
"NVIDIAAICITYCHALLENGE/2023AICITY_Code_From_Top_Teams" -> "NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams"
"NVIDIAAICITYCHALLENGE/2023AICITY_Code_From_Top_Teams" -> "ipl-uw/AIC23_Track1_UWIPL_ETRI"
"NVIDIAAICITYCHALLENGE/2023AICITY_Code_From_Top_Teams" -> "NVIDIAAICITYCHALLENGE/2024AICITY_Code_From_Top_Teams"
"NVIDIAAICITYCHALLENGE/2023AICITY_Code_From_Top_Teams" -> "yuntaeJ/SCIT-MCMT-Tracking"
"rflamary/nonconvex-optimization" -> "keskarnitish/minSQN" ["e"=1]
"nota-github/AIC2023_Track1_Nota" -> "ipl-uw/AIC23_Track1_UWIPL_ETRI"
"nota-github/AIC2023_Track1_Nota" -> "nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge"
"nota-github/AIC2023_Track1_Nota" -> "nota-github/AIC2024_Track1_Nota"
"MarvinTeichmann/MultiNet" -> "MarvinTeichmann/KittiBox" ["e"=1]
"MarvinTeichmann/MultiNet" -> "hengck23/didi-udacity-2017" ["e"=1]
"MarvinTeichmann/MultiNet" -> "mjshiggins/ros-examples" ["e"=1]
"ymzis69/HybridSORT" -> "hustvl/SparseTrack"
"ymzis69/HybridSORT" -> "GerardMaggiolino/Deep-OC-SORT"
"ymzis69/HybridSORT" -> "dvl-tum/SUSHI"
"ymzis69/HybridSORT" -> "MCG-NJU/MOTIP"
"ymzis69/HybridSORT" -> "dvl-tum/GHOST"
"ymzis69/HybridSORT" -> "corfyi/UCMCTrack"
"ymzis69/HybridSORT" -> "noahcao/OC_SORT"
"ymzis69/HybridSORT" -> "megvii-research/MOTRv2"
"ymzis69/HybridSORT" -> "vukasin-stanojevic/BoostTrack"
"ymzis69/HybridSORT" -> "mengting2023/LG-Track"
"ymzis69/HybridSORT" -> "MCG-NJU/MeMOTR"
"ymzis69/HybridSORT" -> "DanceTrack/DanceTrack"
"ymzis69/HybridSORT" -> "NirAharon/BoT-SORT"
"ymzis69/HybridSORT" -> "MCG-NJU/MixSort"
"ymzis69/HybridSORT" -> "WWangYuHsiang/SMILEtrack"
"hsiangwei0903/Deep-EIoU" -> "psaltaath/tadn-mot"
"hsiangwei0903/Deep-EIoU" -> "MCG-NJU/MixSort"
"hsiangwei0903/Deep-EIoU" -> "sjc042/gta-link"
"hsiangwei0903/Deep-EIoU" -> "balabooooo/AED"
"hsiangwei0903/Deep-EIoU" -> "MCG-NJU/SportsMOT"
"mengting2023/LG-Track" -> "WesLee88524/LG-MOT"
"joeychrys/streamlit-chatGPT" -> "prateekralhan/Streamlit-ChatGPT-DALLE-2"
"yangshiyu89/VIBE" -> "AddyLocks/ViBE"
"yangshiyu89/VIBE" -> "bes-dev/VIBE"
"yangshiyu89/VIBE" -> "232525/ViBe.python"
"qwomeng/MotionTrack" -> "weihong9/CountingMOT"
"wudongming97/RMOT" -> "zyn213/TempRMOT"
"wudongming97/RMOT" -> "WesLee88524/LG-MOT"
"wudongming97/RMOT" -> "dyhBUPT/iKUN"
"wudongming97/RMOT" -> "BingfengYan/CO-MOT"
"wudongming97/RMOT" -> "dvl-tum/SUSHI"
"wudongming97/RMOT" -> "JerryX1110/awesome-rvos" ["e"=1]
"kushalvyas/Bag-of-Visual-Words-Python" -> "shackenberg/Minimal-Bag-of-Visual-Words-Image-Classifier"
"kushalvyas/Bag-of-Visual-Words-Python" -> "gurkandemir/Bag-of-Visual-Words"
"BingfengYan/CO-MOT" -> "dvl-tum/SUSHI"
"BingfengYan/CO-MOT" -> "BingfengYan/VISAM"
"BingfengYan/CO-MOT" -> "chongweiliu/PuTR"
"BingfengYan/CO-MOT" -> "MCG-NJU/MeMOTR"
"dvl-tum/SUSHI" -> "dvl-tum/GHOST"
"dvl-tum/SUSHI" -> "BingfengYan/CO-MOT"
"dvl-tum/SUSHI" -> "ymzis69/HybridSORT"
"dvl-tum/SUSHI" -> "shengyuhao/DIVOTrack"
"dvl-tum/SUSHI" -> "GerardMaggiolino/Deep-OC-SORT"
"dvl-tum/SUSHI" -> "megvii-research/MOTRv2"
"dvl-tum/SUSHI" -> "chongweiliu/PuTR"
"dvl-tum/SUSHI" -> "MCG-NJU/MeMOTR"
"dvl-tum/SUSHI" -> "psaltaath/tadn-mot"
"dvl-tum/SUSHI" -> "MCG-NJU/MixSort"
"dvl-tum/SUSHI" -> "nv-dvl/SPAM"
"dvl-tum/SUSHI" -> "mengting2023/LG-Track"
"dvl-tum/SUSHI" -> "balabooooo/AED"
"dvl-tum/SUSHI" -> "hustvl/SparseTrack"
"dvl-tum/SUSHI" -> "hsiangwei0903/Deep-EIoU"
"mantasu/face-crop-plus" -> "malcolmamal/face-cropper"
"yuntaeJ/SCIT-MCMT-Tracking" -> "nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge"
"yuntaeJ/SCIT-MCMT-Tracking" -> "ipl-uw/AIC23_Track1_UWIPL_ETRI"
"yuntaeJ/SCIT-MCMT-Tracking" -> "nota-github/AIC2023_Track1_Nota"
"yuntaeJ/SCIT-MCMT-Tracking" -> "lockxuan/non-overlapping_multiple-camera_tracking"
"HKUST-DRIVE-AI-LAB/FollowNet" -> "CU-DitecT/TRC21-PINN-CFM"
"HKUST-DRIVE-AI-LAB/FollowNet" -> "Chengyuan-Zhang/IDM_Bayesian_Calibration"
"HKUST-DRIVE-AI-LAB/FollowNet" -> "MeixinZhu/TransFollower"
"HKUST-DRIVE-AI-LAB/FollowNet" -> "iyangli/Car-following-Model-Calibration"
"ipl-uw/AIC23_Track1_UWIPL_ETRI" -> "nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge"
"ipl-uw/AIC23_Track1_UWIPL_ETRI" -> "nota-github/AIC2023_Track1_Nota"
"ipl-uw/AIC23_Track1_UWIPL_ETRI" -> "yuntaeJ/SCIT-MCMT-Tracking"
"ipl-uw/AIC23_Track1_UWIPL_ETRI" -> "NVIDIAAICITYCHALLENGE/2023AICITY_Code_From_Top_Teams"
"ipl-uw/AIC23_Track1_UWIPL_ETRI" -> "nota-github/AIC2024_Track1_Nota"
"amazon-science/object-centric-multiple-object-tracking" -> "weihong9/CountingMOT"
"chengche6230/ReST" -> "shawnh2/GNN-CCA"
"chengche6230/ReST" -> "shengyuhao/DIVOTrack"
"chengche6230/ReST" -> "yuntaeJ/SCIT-MCMT-Tracking"
"chengche6230/ReST" -> "uark-cviu/DyGLIP"
"chengche6230/ReST" -> "nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge"
"MCG-NJU/MixSort" -> "MCG-NJU/SportsMOT"
"MCG-NJU/MixSort" -> "hsiangwei0903/Deep-EIoU"
"MCG-NJU/MixSort" -> "balabooooo/AED"
"MCG-NJU/MixSort" -> "chongweiliu/PuTR"
"malcolmamal/face-cropper" -> "PetrK39/SD-EXIF-Editor"
"nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge" -> "ipl-uw/AIC23_Track1_UWIPL_ETRI"
"nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge" -> "nota-github/AIC2023_Track1_Nota"
"nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge" -> "NVIDIAAICITYCHALLENGE/2023AICITY_Code_From_Top_Teams"
"nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge" -> "yuntaeJ/SCIT-MCMT-Tracking"
"nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge" -> "zef1611/AIC23_NLRetrieval_HCMIU_CVIP"
"VK-Ant/Pdf_Website__Csv_Based_ChatBot_With_Translator_Using_Streamlit" -> "VK-Ant/PDF_CSV_VISION_DRAGGING_BASED_CHATBOT_WITH_TRANSLATOR_AUDIO_USING_GEMINIAI"
"RomainLITUD/Car-Following-Dataset-HV-vs-AV" -> "CU-DitecT/TRC21-PINN-CFM"
"WongKinYiu/yolov9" -> "mikel-brostrom/boxmot" ["e"=1]
"GuHuangAI/DiffusionEdge" -> "GuHuangAI/ADM-Public" ["e"=1]
"Kroery/DiffMOT" -> "RainBowLuoCS/DiffusionTrack" ["e"=1]
"Kroery/DiffMOT" -> "dvl-tum/SUSHI"
"Kroery/DiffMOT" -> "hustvl/SparseTrack"
"Kroery/DiffMOT" -> "MCG-NJU/SportsMOT"
"Kroery/DiffMOT" -> "MCG-NJU/MOTIP"
"Kroery/DiffMOT" -> "shengyuhao/DIVOTrack"
"Kroery/DiffMOT" -> "GuHuangAI/ADM-Public"
"Kroery/DiffMOT" -> "wudongming97/RMOT"
"Kroery/DiffMOT" -> "dvl-tum/GHOST"
"Kroery/DiffMOT" -> "corfyi/UCMCTrack"
"Kroery/DiffMOT" -> "ymzis69/HybridSORT"
"Kroery/DiffMOT" -> "mengting2023/LG-Track"
"Kroery/DiffMOT" -> "chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT"
"Kroery/DiffMOT" -> "MCG-NJU/MeMOTR"
"Kroery/DiffMOT" -> "chengche6230/ReST"
"hiroyuki-kasai/SGDLibrary" -> "hiroyuki-kasai/GDLibrary"
"hiroyuki-kasai/SGDLibrary" -> "hiroyuki-kasai/SparseGDLibrary"
"hiroyuki-kasai/SGDLibrary" -> "clarkzinzow/Nonlinear-Optimization-Algorithms"
"hiroyuki-kasai/SGDLibrary" -> "keskarnitish/minSQN"
"hiroyuki-kasai/SGDLibrary" -> "hiroyuki-kasai/NMFLibrary"
"MasteringOpenCV/code" -> "andrewssobral/bgslibrary" ["e"=1]
"microsoft/VoTT" -> "abewley/sort" ["e"=1]
"chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT" -> "qinzheng2000/GeneralTrack"
"chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT" -> "chen-si-jia/CRMOT"
"chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT" -> "mengting2023/LG-Track"
"chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT" -> "hustvl/SparseTrack"
"chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT" -> "TRAILab/UncertaintyTrack"
"gitmehrdad/SFSORT" -> "vukasin-stanojevic/BoostTrack"
"gitmehrdad/SFSORT" -> "kamkyu94/AdapTrack"
"DaHoC/trainHOG" -> "bikz05/object-detector"
"DaHoC/trainHOG" -> "gnebehay/OpenTLD" ["e"=1]
"AIVIETNAMResearch/VN_Multi_User_Video_Search" -> "AIVIETNAMResearch/AI-City-2024-Track2"
"AIVIETNAMResearch/VN_Multi_User_Video_Search" -> "anminhhung/Pipeline_HCM_AI"
"AIVIETNAMResearch/VN_Multi_User_Video_Search" -> "AIVIETNAMResearch/Video-Text-Retrieval"
"AIVIETNAMResearch/VN_Multi_User_Video_Search" -> "BachNgoH/AIO_Data_Analyst"
"AIVIETNAMResearch/AI-City-2024-Track2" -> "alibaba/AICITY2024_Track2_AliOpenTrek_CityLLaVA"
"AIVIETNAMResearch/AI-City-2024-Track2" -> "AIVIETNAMResearch/VN_Multi_User_Video_Search"
"AIVIETNAMResearch/AI-City-2024-Track2" -> "anminhhung/RAG_tool"
"AIVIETNAMResearch/AI-City-2024-Track2" -> "woven-visionai/wts-dataset"
"AIVIETNAMResearch/AI-City-2024-Track2" -> "NVIDIAAICITYCHALLENGE/2024AICITY_Code_From_Top_Teams"
"AIVIETNAMResearch/AI-City-2024-Track2" -> "BachNgoH/AIO_Data_Analyst"
"SkalskiP/top-cvpr-2024-papers" -> "Kroery/DiffMOT" ["e"=1]
"BichenWuUCB/squeezeDet" -> "fregu856/2D_detection" ["e"=1]
"BichenWuUCB/squeezeDet" -> "MarvinTeichmann/KittiBox" ["e"=1]
"BichenWuUCB/squeezeDet" -> "hengck23/didi-udacity-2017" ["e"=1]
"vukasin-stanojevic/BoostTrack" -> "kamkyu94/AdapTrack"
"vukasin-stanojevic/BoostTrack" -> "gitmehrdad/SFSORT"
"vukasin-stanojevic/BoostTrack" -> "ymzis69/HybridSORT"
"vukasin-stanojevic/BoostTrack" -> "corfyi/UCMCTrack"
"vukasin-stanojevic/BoostTrack" -> "WWangYuHsiang/SMILEtrack"
"vukasin-stanojevic/BoostTrack" -> "hustvl/SparseTrack"
"vukasin-stanojevic/BoostTrack" -> "MCG-NJU/MeMOTR"
"vukasin-stanojevic/BoostTrack" -> "MCG-NJU/MOTIP"
"vukasin-stanojevic/BoostTrack" -> "dvl-tum/SUSHI"
"vukasin-stanojevic/BoostTrack" -> "GerardMaggiolino/Deep-OC-SORT"
"vukasin-stanojevic/BoostTrack" -> "DLR-MI/UTrack"
"vukasin-stanojevic/BoostTrack" -> "pingyang1117/SMILEtrack_Official"
"vukasin-stanojevic/BoostTrack" -> "Hyonchori/ConfTrack_WACV2024"
"ZJULearning/MatlabFunc" -> "hiroyuki-kasai/NMFLibrary" ["e"=1]
"George-Zhuang/NetTrack" -> "balabooooo/AED"
"pageauc/speed-camera" -> "kraten/vehicle-speed-check" ["e"=1]
"pageauc/speed-camera" -> "ronitsinha/speed-detector" ["e"=1]
"pageauc/speed-camera" -> "ahmetozlu/vehicle_counting_tensorflow" ["e"=1]
"pageauc/speed-camera" -> "WatershedArts/Footfall" ["e"=1]
"sjc042/gta-link" -> "hsiangwei0903/Deep-EIoU"
"sjc042/gta-link" -> "mguti97/No-Bells-Just-Whistles" ["e"=1]
"dmulholl/ivy" -> "astorfi/CNTK-World" ["e"=1]
"siyuanliii/masa" -> "MCG-NJU/MOTIP" ["e"=1]
"siyuanliii/masa" -> "luanshiyinyang/awesome-multiple-object-tracking" ["e"=1]
"andrewssobral/mctc4bmi" -> "jamiezeminzhang/Tensor_Completion_and_Tensor_RPCA"
"andrewssobral/mctc4bmi" -> "andrewssobral/mtt"
"andrewssobral/mctc4bmi" -> "ryotat/tensor"
"andrewssobral/mctc4bmi" -> "qiangsiwei/tensor_tools"
"andrewssobral/mctc4bmi" -> "canyilu/tensor-completion-tensor-recovery"
"andrewssobral/mctc4bmi" -> "andrewssobral/tensor_toolbox"
"andrewssobral/mctc4bmi" -> "qbzhao/BCPF"
"georgesung/ssd_tensorflow_traffic_sign_detection" -> "xslittlegrass/CarND-Vehicle-Detection" ["e"=1]
"icsfy/Pedestrian_Detection" -> "fanxinglanyu/Pedestrain_Detection"
"icsfy/Pedestrian_Detection" -> "xmfbit/PedestrianDetection"
"icsfy/Pedestrian_Detection" -> "ahmetozlu/vehicle_counting_hog_svm"
"icsfy/Pedestrian_Detection" -> "BUPTLdy/human-detector"
"icsfy/Pedestrian_Detection" -> "sturkmen72/C4-Real-time-pedestrian-detection"
"icsfy/Pedestrian_Detection" -> "bikz05/object-detector"
"icsfy/Pedestrian_Detection" -> "WebPrague/PedestrianDetectionSystem"
"icsfy/Pedestrian_Detection" -> "thatbrguy/Pedestrian-Detection"
"corfyi/UCMCTrack" -> "ymzis69/HybridSORT"
"corfyi/UCMCTrack" -> "hustvl/SparseTrack"
"corfyi/UCMCTrack" -> "vukasin-stanojevic/BoostTrack"
"corfyi/UCMCTrack" -> "dvl-tum/SUSHI"
"corfyi/UCMCTrack" -> "WWangYuHsiang/SMILEtrack"
"corfyi/UCMCTrack" -> "megvii-research/MOTRv2"
"corfyi/UCMCTrack" -> "GerardMaggiolino/Deep-OC-SORT"
"corfyi/UCMCTrack" -> "pingyang1117/SMILEtrack_Official"
"corfyi/UCMCTrack" -> "noahcao/OC_SORT"
"corfyi/UCMCTrack" -> "MCG-NJU/MeMOTR"
"corfyi/UCMCTrack" -> "MCG-NJU/MOTIP"
"corfyi/UCMCTrack" -> "NirAharon/BoT-SORT"
"corfyi/UCMCTrack" -> "dyhBUPT/StrongSORT"
"corfyi/UCMCTrack" -> "mengting2023/LG-Track"
"corfyi/UCMCTrack" -> "chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT"
"MCG-NJU/MOTIP" -> "MCG-NJU/MeMOTR"
"MCG-NJU/MOTIP" -> "megvii-research/MOTRv2"
"MCG-NJU/MOTIP" -> "ymzis69/HybridSORT"
"MCG-NJU/MOTIP" -> "BingfengYan/CO-MOT"
"MCG-NJU/MOTIP" -> "shengyuhao/DIVOTrack"
"MCG-NJU/MOTIP" -> "hsiangwei0903/Deep-EIoU"
"MCG-NJU/MOTIP" -> "megvii-research/MOTR"
"MCG-NJU/MOTIP" -> "dvl-tum/SUSHI"
"MCG-NJU/MOTIP" -> "hustvl/SparseTrack"
"MCG-NJU/MOTIP" -> "DanceTrack/DanceTrack"
"MCG-NJU/MOTIP" -> "chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT"
"MCG-NJU/MOTIP" -> "MCG-NJU/SportsMOT"
"MCG-NJU/MOTIP" -> "SysCV/ovtrack"
"MCG-NJU/MOTIP" -> "balabooooo/AED"
"MCG-NJU/MOTIP" -> "vukasin-stanojevic/BoostTrack"
"alibaba/AICITY2024_Track2_AliOpenTrek_CityLLaVA" -> "AIVIETNAMResearch/AI-City-2024-Track2"
"alibaba/AICITY2024_Track2_AliOpenTrek_CityLLaVA" -> "woven-visionai/wts-dataset"
"TrackingLaboratory/tracklab" -> "balabooooo/AED" ["e"=1]
"TrackingLaboratory/tracklab" -> "hsiangwei0903/Deep-EIoU" ["e"=1]
"nmchaves/admm-for-lp" -> "martinResearch/PySparseLP"
"AIVIETNAMResearch/AIO_Documents" -> "BachNgoH/AIO_Data_Analyst"
"AIVIETNAMResearch/AIO_Documents" -> "BachNgoH/AIO_Research_Agent"
"chenjoya/Vehicle_Detection_Recognition" -> "chenjoya/Caffe_MultiLabel_Classification"
"chenjoya/Vehicle_Detection_Recognition" -> "michalgdak/car-recognition"
"diyjac/SDC-P5" -> "balancap/SDC-Vehicle-Detection" ["e"=1]
"diyjac/SDC-P5" -> "antevis/CarND-Project5-Vehicle_Detection_and_Tracking" ["e"=1]
"hiroyuki-kasai/GDLibrary" -> "hiroyuki-kasai/SparseGDLibrary"
"NVIDIAAICITYCHALLENGE/2024AICITY_Code_From_Top_Teams" -> "nota-github/AIC2024_Track1_Nota"
"NVIDIAAICITYCHALLENGE/2024AICITY_Code_From_Top_Teams" -> "riips/AIC24_Track1_YACHIYO_RIIPS"
"NVIDIAAICITYCHALLENGE/2024AICITY_Code_From_Top_Teams" -> "AIVIETNAMResearch/AI-City-2024-Track2"
"gtarobotics/self-driving-car" -> "udacity/didi-competition" ["e"=1]
"lucasjinreal/kitti-ssd" -> "manutdzou/KITTI_SSD"
"ZhenyuX1E/PoseTrack" -> "nota-github/AIC2024_Track1_Nota"
"ZhenyuX1E/PoseTrack" -> "riips/AIC24_Track1_YACHIYO_RIIPS"
"riips/AIC24_Track1_YACHIYO_RIIPS" -> "nota-github/AIC2024_Track1_Nota"
"chenjoya/Caffe_MultiLabel_Classification" -> "HolidayXue/CodeSnap"
"Hyonchori/ConfTrack_WACV2024" -> "HELLORPG/HATReID-MOT"
"quangminhdinh/TrafficVLM" -> "woven-visionai/wts-dataset"
"dyhBUPT/iKUN" -> "zyn213/TempRMOT"
"dyhBUPT/iKUN" -> "wudongming97/RMOT"
"dyhBUPT/iKUN" -> "OpenSpaceAI/UVLTrack" ["e"=1]
"nota-github/AIC2024_Track1_Nota" -> "riips/AIC24_Track1_YACHIYO_RIIPS"
"nota-github/AIC2024_Track1_Nota" -> "ZhenyuX1E/PoseTrack"
"nota-github/AIC2024_Track1_Nota" -> "NVIDIAAICITYCHALLENGE/2024AICITY_Code_From_Top_Teams"
"woven-visionai/wts-dataset" -> "alibaba/AICITY2024_Track2_AliOpenTrek_CityLLaVA"
"woven-visionai/wts-dataset" -> "quangminhdinh/TrafficVLM"
"woven-visionai/wts-dataset" -> "AIVIETNAMResearch/AI-City-2024-Track2"
"maksay/ptrack_cpp" -> "francescosolera/LDCT"
"kamkyu94/AdapTrack" -> "Hyonchori/ConfTrack_WACV2024"
"nwojke/deep_sort" -> "abewley/sort"
"nwojke/deep_sort" -> "ZQPei/deep_sort_pytorch"
"nwojke/deep_sort" -> "Qidian213/deep_sort_yolov3"
"nwojke/deep_sort" -> "ifzhang/FairMOT"
"nwojke/deep_sort" -> "mikel-brostrom/boxmot"
"nwojke/deep_sort" -> "Zhongdao/Towards-Realtime-MOT"
"nwojke/deep_sort" -> "SpyderXu/multi-object-tracking-paper-list"
"nwojke/deep_sort" -> "ifzhang/ByteTrack"
"nwojke/deep_sort" -> "xingyizhou/CenterTrack"
"nwojke/deep_sort" -> "KaiyangZhou/deep-person-reid" ["e"=1]
"nwojke/deep_sort" -> "nwojke/cosine_metric_learning"
"nwojke/deep_sort" -> "foolwood/benchmark_results" ["e"=1]
"nwojke/deep_sort" -> "xingyizhou/CenterNet" ["e"=1]
"nwojke/deep_sort" -> "JDAI-CV/fast-reid" ["e"=1]
"nwojke/deep_sort" -> "cheind/py-motmetrics"
"JunshengFu/driving-lane-departure-warning" -> "JunshengFu/vehicle-detection" ["e"=1]
"xslittlegrass/CarND-Vehicle-Detection" -> "JunshengFu/vehicle-detection"
"xslittlegrass/CarND-Vehicle-Detection" -> "balancap/SDC-Vehicle-Detection"
"xslittlegrass/CarND-Vehicle-Detection" -> "tatsuyah/vehicle-detection"
"xslittlegrass/CarND-Vehicle-Detection" -> "udacity/CarND-Vehicle-Detection" ["e"=1]
"xslittlegrass/CarND-Vehicle-Detection" -> "windowsub0406/Vehicle-Detection-YOLO-ver"
"xslittlegrass/CarND-Vehicle-Detection" -> "subodh-malgonde/vehicle-detection"
"xslittlegrass/CarND-Vehicle-Detection" -> "experiencor/keras-yolo2" ["e"=1]
"xslittlegrass/CarND-Vehicle-Detection" -> "JamesLuoau/Self-Driving-Car-Vehicle-Detection"
"xslittlegrass/CarND-Vehicle-Detection" -> "MarvinTeichmann/KittiBox"
"xslittlegrass/CarND-Vehicle-Detection" -> "georgesung/ssd_tensorflow_traffic_sign_detection" ["e"=1]
"xslittlegrass/CarND-Vehicle-Detection" -> "yhenon/keras-frcnn" ["e"=1]
"xslittlegrass/CarND-Vehicle-Detection" -> "antevis/CarND-Project5-Vehicle_Detection_and_Tracking"
"xslittlegrass/CarND-Vehicle-Detection" -> "udacity/CarND-Term1-Starter-Kit" ["e"=1]
"xslittlegrass/CarND-Vehicle-Detection" -> "andrewssobral/vehicle_detection_haarcascades"
"xslittlegrass/CarND-Vehicle-Detection" -> "yhcc/yolo2" ["e"=1]
"neokt/car-damage-detective" -> "nicolasmetallo/car-damage-detector"
"neokt/car-damage-detective" -> "louisyuzhe/car-damage-detector"
"neokt/car-damage-detective" -> "IanLondon/general_img_classifier"
"neokt/car-damage-detective" -> "raviranjan0309/Car-Damage-Detector"
"neokt/car-damage-detective" -> "shubhi/car-damage-assessment"
"neokt/car-damage-detective" -> "nitsourish/car-damage-detection-using-CNN"
"neokt/car-damage-detective" -> "halloTheCoder/car-damage-evaluation-using-deep-learning"
"zyn213/TempRMOT" -> "wudongming97/RMOT"
"zyn213/TempRMOT" -> "WesLee88524/LG-MOT"
"zyn213/TempRMOT" -> "Nathan-Li123/LaMOT"
"windowsub0406/Vehicle-Detection-YOLO-ver" -> "windowsub0406/Advanced-lane-finding"
"windowsub0406/Vehicle-Detection-YOLO-ver" -> "JunshengFu/vehicle-detection"
"windowsub0406/Vehicle-Detection-YOLO-ver" -> "subodh-malgonde/vehicle-detection"
"windowsub0406/Vehicle-Detection-YOLO-ver" -> "BUPTLdy/human-detector"
"JakubSochor/BoxCars" -> "Zhongdao/VehicleReIDKeyPointData" ["e"=1]
"JakubSochor/BoxCars" -> "knwng/awesome-vehicle-re-identification" ["e"=1]
"JakubSochor/BoxCars" -> "Pirazh/Vehicle_Key_Point_Orientation_Estimation" ["e"=1]
"yangyan92/Deep-ADMM-Net" -> "canyilu/LibADMM-toolbox" ["e"=1]
"hiroyuki-kasai/NMFLibrary" -> "kimjingu/nonnegfac-matlab"
"hiroyuki-kasai/NMFLibrary" -> "colinvaz/nmf-toolbox"
"hiroyuki-kasai/NMFLibrary" -> "mims-harvard/nimfa"
"hiroyuki-kasai/NMFLibrary" -> "hiroyuki-kasai/SGDLibrary"
"hiroyuki-kasai/NMFLibrary" -> "trigeorgis/Deep-Semi-NMF"
"hiroyuki-kasai/NMFLibrary" -> "ZJULearning/MatlabFunc" ["e"=1]
"hiroyuki-kasai/NMFLibrary" -> "DUT-DIPLab/Graph-Multi-NMF-Feature-Clustering"
"hiroyuki-kasai/NMFLibrary" -> "felipeyanez/nmf"
"hiroyuki-kasai/NMFLibrary" -> "yoyolicoris/pytorch-NMF" ["e"=1]
"hiroyuki-kasai/NMFLibrary" -> "dakuang/symnmf"
"hiroyuki-kasai/NMFLibrary" -> "liangnaiyao/multiview_learning" ["e"=1]
"hiroyuki-kasai/NMFLibrary" -> "smartyfh/DANMF"
"hiroyuki-kasai/NMFLibrary" -> "d-kitamura/multichannelNMF" ["e"=1]
"hiroyuki-kasai/NMFLibrary" -> "andrewssobral/lrslibrary"
"hiroyuki-kasai/NMFLibrary" -> "canyilu/Tensor-tensor-product-toolbox"
"983632847/Awesome-Multimodal-Object-Tracking" -> "wudongming97/RMOT" ["e"=1]
"experiencor/keras-yolo2" -> "xslittlegrass/CarND-Vehicle-Detection" ["e"=1]
"LukashenkoYevhenii/People-Counter" -> "koba/overhead-camera-people-counter"
"LukashenkoYevhenii/People-Counter" -> "Nikhil-Kasukurthi/Counting-people-video"
"LukashenkoYevhenii/People-Counter" -> "akshun4/People-Counter"
"LukashenkoYevhenii/People-Counter" -> "biranchi2018/People-Counter-1"
"LukashenkoYevhenii/People-Counter" -> "PJunhyuk/people-counting-pose"
"cheind/py-motmetrics" -> "JonathonLuiten/TrackEval"
"cheind/py-motmetrics" -> "phil-bergmann/tracking_wo_bnw"
"cheind/py-motmetrics" -> "SpyderXu/multi-object-tracking-paper-list"
"cheind/py-motmetrics" -> "longcw/MOTDT"
"cheind/py-motmetrics" -> "Zhongdao/Towards-Realtime-MOT"
"cheind/py-motmetrics" -> "dendorferpatrick/MOTChallengeEvalKit"
"cheind/py-motmetrics" -> "yihongXU/deepMOT"
"cheind/py-motmetrics" -> "shijieS/SST"
"cheind/py-motmetrics" -> "xingyizhou/CenterTrack"
"cheind/py-motmetrics" -> "ifzhang/FairMOT"
"cheind/py-motmetrics" -> "bochinski/iou-tracker"
"cheind/py-motmetrics" -> "nwojke/deep_sort"
"cheind/py-motmetrics" -> "abewley/sort"
"cheind/py-motmetrics" -> "VisualComputingInstitute/TrackR-CNN"
"cheind/py-motmetrics" -> "ZQPei/deep_sort_pytorch"
"JunshengFu/tracking-with-Extended-Kalman-Filter" -> "Smorodov/Multitarget-tracker" ["e"=1]
"jokla/didi_challenge_ros" -> "hengck23/didi-udacity-2017"
"jokla/didi_challenge_ros" -> "omgteam/Didi-competition-solution"
"jokla/didi_challenge_ros" -> "liuxiAaoyu/didi-udacity_self-driving_car_challenge"
"jokla/didi_challenge_ros" -> "udacity/didi-competition"
"alexstaravoitau/KITTI-Dataset" -> "hengck23/didi-udacity-2017" ["e"=1]
"yformer/EfficientTAM" -> "MCG-NJU/MOTIP" ["e"=1]
"ahmetozlu/vehicle_counting" -> "ahmetozlu/vehicle_counting_hog_svm"
"ahmetozlu/vehicle_counting" -> "andrewssobral/simple_vehicle_counting"
"ahmetozlu/vehicle_counting" -> "xiaochus/Vehicle_Tracking"
"JunshengFu/vehicle-detection" -> "windowsub0406/Vehicle-Detection-YOLO-ver"
"JunshengFu/vehicle-detection" -> "tatsuyah/vehicle-detection"
"JunshengFu/vehicle-detection" -> "xslittlegrass/CarND-Vehicle-Detection"
"JunshengFu/vehicle-detection" -> "CaptainEven/Vehicle-Car-detection-and-multilabel-classification" ["e"=1]
"JunshengFu/vehicle-detection" -> "JunshengFu/driving-lane-departure-warning" ["e"=1]
"JunshengFu/vehicle-detection" -> "ahmetozlu/vehicle_counting_tensorflow"
"JunshengFu/vehicle-detection" -> "andrewssobral/vehicle_detection_haarcascades"
"JunshengFu/vehicle-detection" -> "kcg2015/Vehicle-Detection-and-Tracking"
"JunshengFu/vehicle-detection" -> "udacity/CarND-Vehicle-Detection" ["e"=1]
"JunshengFu/vehicle-detection" -> "balancap/SDC-Vehicle-Detection"
"JunshengFu/vehicle-detection" -> "andrewssobral/simple_vehicle_counting"
"JunshengFu/vehicle-detection" -> "antevis/CarND-Project5-Vehicle_Detection_and_Tracking"
"JunshengFu/vehicle-detection" -> "bikz05/object-detector"
"JunshengFu/vehicle-detection" -> "subodh-malgonde/vehicle-detection"
"JunshengFu/vehicle-detection" -> "chenjoya/Vehicle_Detection_Recognition"
"balancap/SDC-Vehicle-Detection" -> "balancap/SDC-Advanced-Lane-Finding" ["e"=1]
"balancap/SDC-Vehicle-Detection" -> "MarvinTeichmann/KittiBox"
"balancap/SDC-Vehicle-Detection" -> "diyjac/SDC-P5" ["e"=1]
"balancap/SDC-Vehicle-Detection" -> "xslittlegrass/CarND-Vehicle-Detection"
"balancap/SDC-Vehicle-Detection" -> "udacity/didi-competition"
"balancap/SDC-Vehicle-Detection" -> "penny4860/Vehicle-Detection"
"balancap/SDC-Vehicle-Detection" -> "BichenWuUCB/squeezeDet" ["e"=1]
"BachNgoH/AIO_Research_Agent" -> "AIVIETNAMResearch/AIO_Documents"
"tarmiziAdam2005/Image-Signal-Processing" -> "tarmiziAdam2005/ADMM-Total-Variation"
"tarmiziAdam2005/Image-Signal-Processing" -> "tarmiziAdam2005/HNHOTV_OGS"
"yukitsuji/3D_CNN_tensorflow" -> "hengck23/didi-udacity-2017" ["e"=1]
"udacity/didi-competition" -> "hengck23/didi-udacity-2017"
"udacity/didi-competition" -> "jokla/didi_challenge_ros"
"udacity/didi-competition" -> "mjshiggins/ros-examples"
"udacity/didi-competition" -> "liuxiAaoyu/didi-udacity_self-driving_car_challenge"
"udacity/didi-competition" -> "udacity/CarND-Mercedes-SF-Utilities" ["e"=1]
"udacity/didi-competition" -> "gtarobotics/self-driving-car" ["e"=1]
"udacity/didi-competition" -> "omgteam/Didi-competition-solution"
"mradovic38/football_analysis" -> "sjc042/gta-link" ["e"=1]
"BachNgoH/AIO_Data_Analyst" -> "AIVIETNAMResearch/AIO_Documents"
"BachNgoH/AIO_Data_Analyst" -> "anminhhung/RAG_tool"
"BachNgoH/AIO_Data_Analyst" -> "AIVIETNAMResearch/AI-City-2024-Track2"
"BachNgoH/AIO_Data_Analyst" -> "AIVIETNAMResearch/VN_Multi_User_Video_Search"
"BachNgoH/AIO_Data_Analyst" -> "BachNgoH/AIO_Research_Agent"
"bjoern-andres/graph" -> "jutanke/cabbage" ["e"=1]
"mattiasegu/sambamotr" -> "mattiasegu/darth"
"mattiasegu/sambamotr" -> "jinyanglii/OVTR"
"mjshiggins/ros-examples" -> "hengck23/didi-udacity-2017"
"mjshiggins/ros-examples" -> "udacity/didi-competition"
"mjshiggins/ros-examples" -> "jokla/didi_challenge_ros"
"ahmetozlu/vehicle_counting_hog_svm" -> "ahmetozlu/vehicle_counting"
"samuelmurray/tracking-by-detection" -> "bochinski/iou-tracker"
"samuelmurray/tracking-by-detection" -> "longcw/MOTDT"
"samuelmurray/tracking-by-detection" -> "mcximing/sort-cpp"
"samuelmurray/tracking-by-detection" -> "huanglianghua/mot-papers"
"samuelmurray/tracking-by-detection" -> "shijieS/SST"
"samuelmurray/tracking-by-detection" -> "eveningglow/multi-object-tracker"
"samuelmurray/tracking-by-detection" -> "yuxng/MDP_Tracking" ["e"=1]
"samuelmurray/tracking-by-detection" -> "bitzy/DeepSort"
"samuelmurray/tracking-by-detection" -> "SpyderXu/multi-object-tracking-paper-list"
"samuelmurray/tracking-by-detection" -> "yihongXU/deepMOT"
"samuelmurray/tracking-by-detection" -> "obendidi/Tracking-with-darkflow"
"samuelmurray/tracking-by-detection" -> "oylz/DS"
"samuelmurray/tracking-by-detection" -> "ZidanMusk/experimenting-with-sort"
"samuelmurray/tracking-by-detection" -> "Smorodov/Multitarget-tracker"
"samuelmurray/tracking-by-detection" -> "VisualComputingInstitute/TrackR-CNN"
"nwbirnie/rpca" -> "jkarnows/rpcaADMM"
"nwbirnie/rpca" -> "weilinear/PyRPCA"
"nwbirnie/rpca" -> "xqpinitial/Robust-PCA-RPCA"
"Jumabek/darknet_scripts" -> "obendidi/Tracking-with-darkflow" ["e"=1]
"umautobots/vod-converter" -> "manutdzou/KITTI_SSD" ["e"=1]
"anminhhung/RAG_tool" -> "anminhhung/Agents_CrewAI_Notebook"
"anminhhung/RAG_tool" -> "AIVIETNAMResearch/AI-City-2024-Track2"
"anminhhung/RAG_tool" -> "BachNgoH/AIO_Data_Analyst"
"anminhhung/RAG_tool" -> "BachNgoH/AIO_Research_Agent"
"bes-dev/VIBE" -> "yangshiyu89/VIBE"
"anminhhung/Agents_CrewAI_Notebook" -> "anminhhung/RAG_tool"
"hengck23/didi-udacity-2017" -> "jokla/didi_challenge_ros"
"hengck23/didi-udacity-2017" -> "liuxiAaoyu/didi-udacity_self-driving_car_challenge"
"hengck23/didi-udacity-2017" -> "udacity/didi-competition"
"hengck23/didi-udacity-2017" -> "mjshiggins/ros-examples"
"hengck23/didi-udacity-2017" -> "omgteam/Didi-competition-solution"
"Nathan-Li123/LaMOT" -> "Coo1Sea/OVT-B-Dataset"
"balabooooo/AED" -> "Coo1Sea/OVT-B-Dataset"
"DLR-MI/UTrack" -> "lorenzovaquero/BUSCA"
"DLR-MI/UTrack" -> "Hyonchori/ConfTrack_WACV2024"
"HengLan/SMOT" -> "Nathan-Li123/LaMOT"
"WesLee88524/LG-MOT" -> "zyn213/TempRMOT"
"WesLee88524/LG-MOT" -> "Fsoft-AIC/Z-GMOT"
"Coo1Sea/OVT-B-Dataset" -> "Nathan-Li123/LaMOT"
"power-grid-lib/pglib-opf" -> "guojunyao419/OPF-ADMM" ["e"=1]
"sunsmarterjie/yolov12" -> "ifzhang/ByteTrack" ["e"=1]
"google/ggrc-core" -> "ergysr/DeepCC" ["e"=1]
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "SpyderXu/multi-object-tracking-paper-list"
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "foolwood/benchmark_results" ["e"=1]
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "abewley/sort"
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "Guanghan/ROLO" ["e"=1]
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "nwojke/deep_sort"
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "Zhongdao/Towards-Realtime-MOT"
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "foolwood/SiamMask" ["e"=1]
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "Qidian213/deep_sort_yolov3"
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "bochinski/iou-tracker"
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "visionml/pytracking" ["e"=1]
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "cheind/py-motmetrics"
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "STVIR/pysot" ["e"=1]
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "Smorodov/Multitarget-tracker"
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "Escheee/TBCF" ["e"=1]
"abhineet123/Deep-Learning-for-Tracking-and-Detection" -> "phil-bergmann/tracking_wo_bnw"
"upcAutoLang/BackgroundSplit-OpenCV" -> "yangshiyu89/VIBE"
"upcAutoLang/BackgroundSplit-OpenCV" -> "bes-dev/VIBE"
"upcAutoLang/BackgroundSplit-OpenCV" -> "CV-AI-WORLD/opencv_vibe"
"upcAutoLang/BackgroundSplit-OpenCV" -> "andrewssobral/bgslibrary"
"HansRen1024/SVM-classification-localization" -> "bikz05/object-detector"
"bochinski/iou-tracker" -> "shijieS/SST"
"bochinski/iou-tracker" -> "longcw/MOTDT"
"bochinski/iou-tracker" -> "phil-bergmann/tracking_wo_bnw"
"bochinski/iou-tracker" -> "SpyderXu/multi-object-tracking-paper-list"
"bochinski/iou-tracker" -> "cheind/py-motmetrics"
"bochinski/iou-tracker" -> "samuelmurray/tracking-by-detection"
"bochinski/iou-tracker" -> "yuxng/MDP_Tracking" ["e"=1]
"bochinski/iou-tracker" -> "nwojke/cosine_metric_learning"
"bochinski/iou-tracker" -> "yihongXU/deepMOT"
"bochinski/iou-tracker" -> "Zhongdao/Towards-Realtime-MOT"
"bochinski/iou-tracker" -> "huanglianghua/mot-papers"
"bochinski/iou-tracker" -> "nwojke/deep_sort"
"bochinski/iou-tracker" -> "abewley/sort"
"bochinski/iou-tracker" -> "VisualComputingInstitute/TrackR-CNN"
"bochinski/iou-tracker" -> "Qidian213/deep_sort_yolov3"
"feichtenhofer/Detect-Track" -> "longcw/MOTDT" ["e"=1]
"feichtenhofer/Detect-Track" -> "shijieS/SST" ["e"=1]
"ZidanMusk/experimenting-with-sort" -> "obendidi/Tracking-with-darkflow"
"ZidanMusk/experimenting-with-sort" -> "abewley/sort"
"ZidanMusk/experimenting-with-sort" -> "Qidian213/deep_sort_yolov3"
"ZidanMusk/experimenting-with-sort" -> "bochinski/iou-tracker"
"ZidanMusk/experimenting-with-sort" -> "Linzaer/Face-Track-Detect-Extract" ["e"=1]
"ZidanMusk/experimenting-with-sort" -> "SpyderXu/multi-object-tracking-paper-list"
"ZidanMusk/experimenting-with-sort" -> "srianant/kalman_filter_multi_object_tracking"
"ZidanMusk/experimenting-with-sort" -> "shijieS/SST"
"ZidanMusk/experimenting-with-sort" -> "samuelmurray/tracking-by-detection"
"ZidanMusk/experimenting-with-sort" -> "eveningglow/multi-object-tracker"
"ZidanMusk/experimenting-with-sort" -> "apoorvavinod/Real_time_Object_detection_and_tracking"
"ZidanMusk/experimenting-with-sort" -> "Guanghan/ROLO" ["e"=1]
"ZidanMusk/experimenting-with-sort" -> "ktzsh/object-tracking"
"ZidanMusk/experimenting-with-sort" -> "longcw/MOTDT"
"ZidanMusk/experimenting-with-sort" -> "davheld/GOTURN" ["e"=1]
"ceccocats/tkDNN" -> "GeekAlexis/FastMOT" ["e"=1]
"SaoYan/bgsCNN" -> "murari023/awesome-background-subtraction"
"SaoYan/bgsCNN" -> "Grabber/deep-background-subtraction"
"SaoYan/bgsCNN" -> "lim-anggun/FgSegNet"
"SaoYan/bgsCNN" -> "zhimingluo/MovingObjectSegmentation"
"SaoYan/bgsCNN" -> "lim-anggun/FgSegNet_v2"
"SaoYan/bgsCNN" -> "cioppaanthony/rt-sbs"
"SaoYan/bgsCNN" -> "lpcinelli/foreground-segmentation"
"SaoYan/bgsCNN" -> "ethereon/subsense"
"obendidi/Tracking-with-darkflow" -> "ZidanMusk/experimenting-with-sort"
"obendidi/Tracking-with-darkflow" -> "Guanghan/ROLO" ["e"=1]
"obendidi/Tracking-with-darkflow" -> "Qidian213/deep_sort_yolov3"
"obendidi/Tracking-with-darkflow" -> "nwojke/cosine_metric_learning"
"obendidi/Tracking-with-darkflow" -> "bochinski/iou-tracker"
"obendidi/Tracking-with-darkflow" -> "torrvision/siamfc-tf" ["e"=1]
"obendidi/Tracking-with-darkflow" -> "samuelmurray/tracking-by-detection"
"obendidi/Tracking-with-darkflow" -> "marvis/pytorch-yolo3" ["e"=1]
"obendidi/Tracking-with-darkflow" -> "nwojke/deep_sort"
"obendidi/Tracking-with-darkflow" -> "Jumabek/darknet_scripts" ["e"=1]
"obendidi/Tracking-with-darkflow" -> "bikz05/object-tracker"
"obendidi/Tracking-with-darkflow" -> "yuxng/MDP_Tracking" ["e"=1]
"obendidi/Tracking-with-darkflow" -> "longcw/MOTDT"
"obendidi/Tracking-with-darkflow" -> "abhineet123/Deep-Learning-for-Tracking-and-Detection"
"obendidi/Tracking-with-darkflow" -> "DrewNF/Tensorflow_Object_Tracking_Video" ["e"=1]
"JeanKossaifi/tensorly-notebooks" -> "xinychen/Tensor4ML" ["e"=1]
"astorfi/CNTK-World" -> "tatsuyah/vehicle-detection"
"fregu856/segmentation" -> "fregu856/2D_detection" ["e"=1]
"chen-si-jia/CRMOT" -> "jinyanglii/OVTR"
"chen-si-jia/CRMOT" -> "chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT"
"digitalbrain79/person-reid" -> "Nirvan101/Person-Re-identification" ["e"=1]
"koba/overhead-camera-people-counter" -> "LukashenkoYevhenii/People-Counter"
"koba/overhead-camera-people-counter" -> "jeffskinnerbox/people-counter"
"adipandas/python-tutorial-codes" -> "adipandas/SmallWorldNetCA"
"eveningglow/multi-object-tracker" -> "akaifi/MultiObjectTrackingBasedOnColor"
"eveningglow/multi-object-tracker" -> "samuelmurray/tracking-by-detection"
"antevis/CarND-Project5-Vehicle_Detection_and_Tracking" -> "maxritter/SDC-Vehicle-Lane-Detection"
"antevis/CarND-Project5-Vehicle_Detection_and_Tracking" -> "ramitix/Car_lane_sign_detection" ["e"=1]
"jinyanglii/OVTR" -> "chen-si-jia/CRMOT"
"jinyanglii/OVTR" -> "Coo1Sea/OVT-B-Dataset"
"liuxiAaoyu/didi-udacity_self-driving_car_challenge" -> "antorsae/tea"
"liuxiAaoyu/didi-udacity_self-driving_car_challenge" -> "hengck23/didi-udacity-2017"
"VisualComputingInstitute/towards-reid-tracking" -> "hou-yz/DeepCC-local"
"VisualComputingInstitute/towards-reid-tracking" -> "gkrudah/MTMC"
"JackWoo0831/Mamba_Trackers" -> "HELLORPG/HATReID-MOT"
"ZQPei/deep_sort_pytorch" ["l"="54.572,32.581"]
"nwojke/deep_sort" ["l"="54.589,32.604"]
"Zhongdao/Towards-Realtime-MOT" ["l"="54.53,32.614"]
"mikel-brostrom/boxmot" ["l"="54.558,32.535"]
"ifzhang/FairMOT" ["l"="54.531,32.576"]
"abewley/sort" ["l"="54.579,32.629"]
"Qidian213/deep_sort_yolov3" ["l"="54.588,32.67"]
"xingyizhou/CenterTrack" ["l"="54.503,32.59"]
"JDAI-CV/fast-reid" ["l"="55.871,32.79", "c"=355]
"SpyderXu/multi-object-tracking-paper-list" ["l"="54.538,32.647"]
"KaiyangZhou/deep-person-reid" ["l"="55.84,32.787", "c"=355]
"ifzhang/ByteTrack" ["l"="54.517,32.538"]
"cheind/py-motmetrics" ["l"="54.508,32.624"]
"yehengchen/Object-Detection-and-Tracking" ["l"="54.62,32.619"]
"layumi/Person_reID_baseline_pytorch" ["l"="55.871,32.762", "c"=355]
"xingyizhou/CenterNet" ["l"="50.687,29.978", "c"=83]
"arunponnusamy/cvlib" ["l"="32.889,29.335", "c"=57]
"augmentedstartups/AS-One" ["l"="54.54,32.414"]
"BIGBALLON/PyTorch-CPP" ["l"="53.39,32.872", "c"=251]
"weixu000/libtorch-yolov3-deepsort" ["l"="54.499,32.698"]
"STVIR/pysot" ["l"="54.681,33.787", "c"=298]
"xinshuoweng/AB3DMOT" ["l"="64.591,11.056", "c"=61]
"bamwani/car-counting-and-speed-estimation-yolo-sort-python" ["l"="54.754,32.693"]
"shreyapamecha/Speed-Estimation-of-Vehicles-with-Plate-Detection" ["l"="54.769,32.706"]
"wsh122333/Multi-type_vehicles_flow_statistics" ["l"="54.745,32.676"]
"guptavasu1213/Yolo-Vehicle-Counter" ["l"="54.751,32.709"]
"BenBenee/Traffic-Counting-with-YOLOv3-and-SORT" ["l"="54.782,32.677"]
"ShreyAmbesh/Traffic-Rule-Violation-Detection-System" ["l"="54.791,32.699"]
"HodenX/python-traffic-counter-with-yolo-and-sort" ["l"="54.792,32.665"]
"ronitsinha/speed-detector" ["l"="54.805,32.719"]
"kraten/vehicle-speed-check" ["l"="54.772,32.726"]
"ahmetozlu/vehicle_counting_tensorflow" ["l"="54.714,32.742"]
"tugot17/YOLO-Object-Counting-API" ["l"="54.762,32.668"]
"swhan0329/vehicle_speed_estimation" ["l"="54.822,32.665"]
"bamwani/vehicle-counting-using-python-yolo" ["l"="54.785,32.713"]
"NVIDIAAICITYCHALLENGE/2018AICITY_Maryland" ["l"="54.68,32.709"]
"nicholaskajoh/ivy" ["l"="54.691,32.696"]
"fenil29/vehicle-speed-detection" ["l"="54.799,32.683"]
"Smorodov/Multitarget-tracker" ["l"="54.601,32.651"]
"JunshengFu/tracking-with-Extended-Kalman-Filter" ["l"="64.2,12.573", "c"=1121]
"srianant/kalman_filter_multi_object_tracking" ["l"="54.555,32.699"]
"mcximing/sort-cpp" ["l"="54.51,32.715"]
"foolwood/benchmark_results" ["l"="54.729,33.77", "c"=298]
"joaofaro/KCFcpp" ["l"="54.781,33.716", "c"=298]
"shaoshengsong/DeepSORT" ["l"="54.555,32.614"]
"abhineet123/Deep-Learning-for-Tracking-and-Detection" ["l"="54.561,32.675"]
"opendatacam/opendatacam" ["l"="53.187,32.593", "c"=251]
"bochinski/iou-tracker" ["l"="54.531,32.671"]
"LeonLok/Multi-Camera-Live-Object-Tracking" ["l"="54.601,32.572"]
"jeffbass/imagezmq" ["l"="54.666,32.534"]
"theAIGuysCode/yolov4-deepsort" ["l"="54.636,32.576"]
"ahmetozlu/tensorflow_object_counting_api" ["l"="54.694,32.666"]
"cw1204772/AIC2018_iamai" ["l"="54.272,32.647"]
"AlexXiao95/Multi-Camera-Vehicle-Tracking-and-Reidentification" ["l"="54.272,32.671"]
"Jakel21/vehicle-ReID-baseline" ["l"="54.192,32.686"]
"knwng/awesome-vehicle-re-identification" ["l"="54.224,32.672"]
"Robootx/Multi-Camera-Object-Tracking-via-Transferring-Representation-to-Top-View" ["l"="54.273,32.573"]
"lxc86739795/vehiclereid_baseline" ["l"="54.204,32.695"]
"saghiralfasly/VFL-Vehicle-Re-Id" ["l"="54.233,32.69"]
"CaptainEven/RepNet-MDNet-VehicleReID" ["l"="54.214,32.687"]
"strawlab/flydra" ["l"="54.266,32.69"]
"YunYang1994/tensorflow-yolov3" ["l"="50.385,32.96", "c"=314]
"hoanglehaithanh/Traffic-Sign-Detection" ["l"="50.113,33.048", "c"=314]
"ZhouJiaHuan/traffic-sign-detection" ["l"="54.757,32.968"]
"anmspro/Traffic-Signal-Violation-Detection-System" ["l"="54.853,32.702"]
"walktree/libtorch-yolov3" ["l"="53.418,32.865", "c"=251]
"huihut/OpenCV-MinGW-Build" ["l"="-20.463,-27.963", "c"=107]
"EscVM/OIDv4_ToolKit" ["l"="50.46,32.871", "c"=314]
"theAIGuysCode/OIDv4_ToolKit" ["l"="54.738,32.56"]
"theAIGuysCode/tensorflow-yolov4-tflite" ["l"="54.738,32.589"]
"ultralytics/JSON2YOLO" ["l"="50.292,30.012", "c"=83]
"NirAharon/BoT-SORT" ["l"="54.47,32.467"]
"fuyi501/web-video-live" ["l"="64.193,-13.002", "c"=375]
"WebPrague/PedestrianDetectionSystem" ["l"="54.664,32.901"]
"rodrigob/barinova_pedestrians_detection" ["l"="54.825,33.034"]
"chhshen/pedestrian-detection" ["l"="54.812,33.017"]
"Farious/PedestrianDetector" ["l"="54.836,33.023"]
"LevinJ/Pedestrian-Detection-Project" ["l"="54.825,33.049"]
"SpikeKing/keras-yolo3-detection" ["l"="50.394,32.91", "c"=314]
"openvinotoolkit/open_model_zoo" ["l"="64.208,-2.607", "c"=1153]
"CharlesShang/DCNv2" ["l"="50.934,30.158", "c"=83]
"andrewssobral/bgslibrary" ["l"="54.951,32.695"]
"murari023/awesome-background-subtraction" ["l"="55.084,32.696"]
"andrewssobral/lrslibrary" ["l"="55.2,32.701"]
"andrewssobral/simple_vehicle_counting" ["l"="54.791,32.791"]
"upcAutoLang/BackgroundSplit-OpenCV" ["l"="55.019,32.672"]
"SaoYan/bgsCNN" ["l"="55.081,32.73"]
"Escheee/TBCF" ["l"="54.749,33.725", "c"=298]
"lim-anggun/FgSegNet_v2" ["l"="55.101,32.7"]
"weiliu89/caffe" ["l"="50.506,33.094", "c"=314]
"davheld/GOTURN" ["l"="54.787,33.698", "c"=298]
"lim-anggun/FgSegNet" ["l"="55.088,32.715"]
"foolwood/SiamMask" ["l"="54.672,33.816", "c"=298]
"apoorvavinod/Real_time_Object_detection_and_tracking" ["l"="54.595,32.752"]
"uoip/KCFpy" ["l"="54.76,33.752", "c"=298]
"fengyang95/pyCFTrackers" ["l"="54.682,33.752", "c"=298]
"ZidanMusk/experimenting-with-sort" ["l"="54.568,32.717"]
"mattzheng/keras-yolov3-KF-objectTracking" ["l"="54.554,32.746"]
"SpyderXu/ssd_sort" ["l"="54.618,32.791"]
"uoip/KCFnb" ["l"="54.801,33.802", "c"=298]
"ambakick/Person-Detection-and-Tracking" ["l"="54.63,32.767"]
"songwsx/RFSong-7993" ["l"="54.574,32.875"]
"nwojke/cosine_metric_learning" ["l"="54.565,32.652"]
"longcw/MOTDT" ["l"="54.506,32.665"]
"obendidi/Tracking-with-darkflow" ["l"="54.591,32.709"]
"kimyoon-young/centerNet-deep-sort" ["l"="54.517,32.651"]
"Lam1360/YOLOv3-model-pruning" ["l"="52.792,33.375", "c"=271]
"qqwweee/keras-yolo3" ["l"="50.584,29.898", "c"=83]
"visionml/pytracking" ["l"="54.634,33.782", "c"=298]
"open-mmlab/mmtracking" ["l"="54.487,32.541"]
"bbaibowen/computer-vision" ["l"="54.457,32.854"]
"bbaibowen/DeepLearning-500-questions" ["l"="54.435,32.879"]
"xinychen/transdim" ["l"="52.443,17.459", "c"=815]
"xinychen/Tensor4ML" ["l"="55.351,32.763"]
"phil-bergmann/tracking_wo_bnw" ["l"="54.487,32.633"]
"yihongXU/deepMOT" ["l"="54.463,32.639"]
"shijieS/SST" ["l"="54.477,32.649"]
"VisualComputingInstitute/TrackR-CNN" ["l"="54.483,32.662"]
"dvl-tum/mot_neural_solver" ["l"="54.422,32.606"]
"pjl1995/CTracker" ["l"="54.436,32.613"]
"huanglianghua/mot-papers" ["l"="54.466,32.668"]
"nightmaredimple/libmot" ["l"="54.425,32.64"]
"VisualComputingInstitute/mots_tools" ["l"="54.439,32.651"]
"RichardoMrMu/yolov5-deepsort-tensorrt" ["l"="53.364,32.698", "c"=251]
"Zhou-sx/yolov5_Deepsort_rknn" ["l"="54.835,31.943", "c"=780]
"hpc203/bytetrack-opencv-onnxruntime" ["l"="53.573,32.723", "c"=251]
"Sharpiless/Yolov5-Deepsort" ["l"="54.555,32.509"]
"oylz/DS" ["l"="54.524,32.689"]
"shouxieai/tensorRT_Pro" ["l"="53.346,32.653", "c"=251]
"Sharpiless/Yolov5-deepsort-inference" ["l"="54.611,32.527"]
"triple-Mu/YOLOv8-TensorRT" ["l"="53.406,32.663", "c"=251]
"waitingfordark/four_flower" ["l"="-2.609,-35.241", "c"=596]
"CHNicelee/HOG_SVM" ["l"="54.755,32.994"]
"xinlianghu/svm" ["l"="50.161,27.02", "c"=791]
"LeonLok/Deep-SORT-YOLOv4" ["l"="54.647,32.596"]
"theAIGuysCode/yolov3_deepsort" ["l"="54.689,32.595"]
"huangchuchuan/SVM-HOG-images-classifier" ["l"="54.745,33.019"]
"subicWang/HOG-SVM-classifer" ["l"="54.758,33.032"]
"BUPTLdy/human-detector" ["l"="54.742,32.901"]
"Abhishek-Arora/Image-Classification-Using-SVM" ["l"="51.748,30.809", "c"=83]
"hunting777/hog-svm" ["l"="54.769,33.015"]
"cfotache/pytorch_objectdetecttrack" ["l"="54.636,32.65"]
"cfotache/pytorch_custom_yolo_training" ["l"="54.48,32.622"]
"IBM/powerai-counting-cars" ["l"="54.706,32.715"]
"abhyantrika/nanonets_object_tracking" ["l"="54.657,32.621"]
"emasterclassacademy/Single-Multiple-Custom-Object-Detection-and-Tracking" ["l"="54.693,32.64"]
"ayooshkathuria/pytorch-yolo-v3" ["l"="50.743,30.031", "c"=83]
"Feynman27/pytorch-detect-to-track" ["l"="55.017,33.787", "c"=298]
"yasenh/sort-cpp" ["l"="54.449,32.783"]
"oliverxa/yolov3-sort-cpp" ["l"="54.429,32.807"]
"anhducle98/mtcnn-light-with-tracking" ["l"="54.44,32.82"]
"mabhisharma/Multi-Object-Tracking-with-Kalman-Filter" ["l"="54.514,32.754"]
"kcg2015/Vehicle-Detection-and-Tracking" ["l"="54.663,32.734"]
"samuelmurray/tracking-by-detection" ["l"="54.53,32.703"]
"rahatzamancse/Traffic-Rules-Violation-Detection" ["l"="54.857,32.68"]
"rohit9934/Traffic-Rules-Violation-detection-system" ["l"="54.837,32.687"]
"sakibreza/Traffic-Rules-Violation-Detection-System" ["l"="54.888,32.686"]
"ilhamfzri/traffic-violation-detection" ["l"="54.881,32.661"]
"AhmadYahya97/Fully-Automated-red-light-Violation-Detection" ["l"="54.9,32.664"]
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" ["l"="50.273,32.954", "c"=314]
"TannerGilbert/Tensorflow-2-Object-Counting" ["l"="54.731,32.659"]
"theAIGuysCode/yolov4-custom-functions" ["l"="54.714,32.577"]
"madhawav/YOLO3-4-Py" ["l"="50.494,32.883", "c"=314]
"mystic123/tensorflow-yolo-v3" ["l"="50.405,32.966", "c"=314]
"tobiasfshr/MOTSFusion" ["l"="54.425,32.68"]
"detectRecog/PointTrack" ["l"="54.44,32.633"]
"jizhu1023/DMAN_MOT" ["l"="54.442,32.664"]
"youtubevos/MaskTrackRCNN" ["l"="50.675,30.49", "c"=83]
"JialianW/TraDeS" ["l"="54.448,32.597"]
"L1aoXingyu/Deep-Learning-Project-Template" ["l"="55.86,32.813", "c"=355]
"Cartucho/OpenLabeling" ["l"="50.255,29.476", "c"=83]
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" ["l"="50.185,32.874", "c"=314]
"karolmajek/Mask_RCNN" ["l"="53.349,30.732", "c"=155]
"IntelligentRoboticsLabs/gb_visual_detection_3d" ["l"="54.353,32.887"]
"IntelligentRoboticsLabs/yolact_ros_3d" ["l"="54.323,32.926"]
"selflein/GraphNN-Multi-Object-Tracking" ["l"="54.395,32.629"]
"ZwwWayne/mmMOT" ["l"="54.416,32.661"]
"creotiv/object_detection_projects" ["l"="54.759,32.76"]
"xiaochus/Vehicle_Tracking" ["l"="54.74,32.781"]
"alex-drake/OpenCV-Traffic-Counter" ["l"="54.82,32.768"]
"tatsuyah/vehicle-detection" ["l"="54.799,32.835"]
"JunshengFu/vehicle-detection" ["l"="54.769,32.838"]
"xslittlegrass/CarND-Vehicle-Detection" ["l"="54.844,32.87"]
"astorfi/CNTK-World" ["l"="54.866,32.835"]
"udacity/CarND-Vehicle-Detection" ["l"="61.601,12.654", "c"=774]
"NikolasEnt/Vehicle-Detection-and-Tracking" ["l"="54.842,32.825"]
"balancap/SDC-Vehicle-Detection" ["l"="54.86,32.895"]
"andrewssobral/vehicle_detection_haarcascades" ["l"="54.801,32.861"]
"astorfi/TensorFlow-World-Resources" ["l"="47.481,28.69", "c"=89]
"CaptainEven/Vehicle-Car-detection-and-multilabel-classification" ["l"="34.213,30.034", "c"=892]
"chenjoya/Vehicle_Detection_Recognition" ["l"="54.64,32.885"]
"galenballew/SDC-Lane-and-Vehicle-Detection-Tracking" ["l"="64.255,10.245", "c"=1092]
"ufoym/deepo" ["l"="50.824,29.691", "c"=83]
"windowsub0406/Vehicle-Detection-YOLO-ver" ["l"="54.783,32.879"]
"bitzy/DeepSort" ["l"="54.494,32.726"]
"nicewsyly/ECO" ["l"="54.78,33.731", "c"=298]
"vojirt/kcf" ["l"="54.804,33.688", "c"=298]
"Yonv1943/Python" ["l"="53.43,32.657", "c"=251]
"gaochen315/panoramicRPCA" ["l"="55.222,32.671"]
"xqpinitial/Robust-PCA-RPCA" ["l"="55.239,32.652"]
"Linzaer/Face-Track-Detect-Extract" ["l"="33.283,29.19", "c"=57]
"antonilo/unsupervised_detection" ["l"="55.131,32.678"]
"thomasthachil/moving-object-detection" ["l"="55.162,32.663"]
"tfzhou/MATNet" ["l"="47.745,34.697", "c"=1004]
"lav-kush/MotionRec" ["l"="55.128,32.659"]
"vcg-uvic/fastMCD" ["l"="64.697,10.433", "c"=1092]
"charigyang/motiongrouping" ["l"="47.722,34.665", "c"=1004]
"achalddave/segment-any-moving" ["l"="65.168,4.368", "c"=263]
"visiontao/uovos" ["l"="55.148,32.652"]
"rozumden/FMODetect" ["l"="-34.854,21.264", "c"=127]
"zhimingluo/MovingObjectSegmentation" ["l"="55.115,32.705"]
"carrierlxk/COSNet" ["l"="47.78,34.722", "c"=1004]
"redbug312/study-of-block-based-uav-object-detection" ["l"="55.156,32.678"]
"layumi/AICIty-reID-2020" ["l"="54.171,32.656"]
"layumi/Vehicle_reID-Collection" ["l"="54.17,32.674"]
"JDAI-CV/VeRidataset" ["l"="54.197,32.675"]
"bismex/Awesome-vehicle-re-identification" ["l"="54.178,32.666"]
"heshuting555/AICITY2020_DMT_VehicleReID" ["l"="54.156,32.659"]
"PKU-IMRE/VERI-Wild" ["l"="54.191,32.661"]
"silverbulletmdc/PVEN" ["l"="54.154,32.672"]
"cybercore-co-ltd/track2_aicity_2021" ["l"="54.144,32.643"]
"Zhongdao/VehicleReIDKeyPointData" ["l"="54.171,32.688"]
"damo-cv/TransReID" ["l"="55.88,32.837", "c"=355]
"yorkeyao/VehicleX" ["l"="54.161,32.646"]
"Xiangyu-CAS/AICity2020-VOC-ReID" ["l"="54.14,32.662"]
"wizyoung/YOLOv3_TensorFlow" ["l"="50.419,32.928", "c"=314]
"liu-xb/RAM" ["l"="54.116,32.729"]
"GeoTrouvetout/Vehicle_ReID" ["l"="54.12,32.746"]
"yanbai1993/Embedding_GAN" ["l"="54.078,32.743"]
"Pirazh/Vehicle_Key_Point_Orientation_Estimation" ["l"="54.18,32.693"]
"DTennant/reid_baseline_with_syncbn" ["l"="54.157,32.688"]
"michuanhaohao/AICITY2021_Track2_DMT" ["l"="54.164,32.619"]
"NVIDIAAICITYCHALLENGE/2021AICITY_Code_From_Top_Teams" ["l"="54.19,32.615"]
"ITCoders/Human-detection-and-Tracking" ["l"="54.674,32.779"]
"foolwood/DaSiamRPN" ["l"="54.698,33.732", "c"=298]
"AntonMu/TrainYourOwnYOLO" ["l"="50.362,32.843", "c"=314]
"theAIGuysCode/YOLOv4-Cloud-Tutorial" ["l"="54.74,32.575"]
"apoorva-dave/LicensePlateDetector" ["l"="34.122,30.22", "c"=892]
"Dharun/Tensorflow-License-Plate-Detection" ["l"="34.109,30.194", "c"=892]
"longphungtuan94/ALPR_System" ["l"="34.105,30.231", "c"=892]
"alitourani/yolo-license-plate-detection" ["l"="34.098,30.266", "c"=892]
"OPHoperHPO/image-background-remove-tool" ["l"="44.781,31.017", "c"=243]
"susheelsk/image-background-removal" ["l"="55.136,32.777"]
"eti-p-doray/unet-gan-matting" ["l"="55.118,32.791"]
"CaoWGG/TensorRT-CenterNet" ["l"="53.189,32.699", "c"=251]
"FateScript/CenterNet-better" ["l"="50.7,30.277", "c"=83]
"Duankaiwen/CenterNet" ["l"="50.797,30.153", "c"=83]
"xingyizhou/CenterNet2" ["l"="50.729,30.212", "c"=83]
"JunweiLiang/Object_Detection_Tracking" ["l"="54.388,32.552"]
"samihormi/Multi-Camera-Person-Tracking-and-Re-Identification" ["l"="54.307,32.554"]
"SurajDonthi/Multi-Camera-Person-Re-Identification" ["l"="54.306,32.539"]
"mikel-brostrom/Yolov7_StrongSORT_OSNet" ["l"="54.438,32.498"]
"google/next-prediction" ["l"="63.42,12.687", "c"=241]
"GehenHe/TRACTA" ["l"="54.293,32.558"]
"chengche6230/ReST" ["l"="54.293,32.493"]
"SherryJYC/paper-MTMC" ["l"="54.263,32.552"]
"hou-yz/MVDet" ["l"="47.207,34.166", "c"=168]
"nolanzzz/mtmct" ["l"="54.28,32.547"]
"JunweiLiang/social-distancing-prediction" ["l"="54.338,32.552"]
"GeekAlexis/FastMOT" ["l"="54.584,32.555"]
"zhengthomastang/2018AICity_TeamUW" ["l"="54.462,32.694"]
"ahmetozlu/vehicle_counting" ["l"="54.757,32.793"]
"ahmetozlu/color_recognition" ["l"="54.687,32.851"]
"guillelopez/python-traffic-counter-with-yolo-and-sort" ["l"="54.779,32.758"]
"ucbdrive/dla" ["l"="51.038,30.292", "c"=83]
"julvo/reloading" ["l"="45.443,20.94", "c"=20]
"adipandas/multi-object-tracker" ["l"="54.55,32.595"]
"quasarstream/python-ffmpeg-video-streaming" ["l"="64.362,-12.06", "c"=726]
"abhiTronix/vidgear" ["l"="44.191,19.984", "c"=20]
"tryolabs/norfair" ["l"="54.552,32.486"]
"foamliu/Car-Recognition" ["l"="54.218,32.872"]
"Helias/Car-Model-Recognition" ["l"="54.187,32.896"]
"faezetta/VMMRdb" ["l"="54.194,32.912"]
"kamwoh/Car-Model-Classification" ["l"="54.18,32.879"]
"michalgdak/car-recognition" ["l"="54.419,32.891"]
"neokt/car-damage-detective" ["l"="54.107,32.962"]
"iPhaeton/car_identification" ["l"="54.219,32.896"]
"jkjung-avt/tensorrt_demos" ["l"="53.223,32.581", "c"=251]
"mrnugget/opencv-haar-classifier-training" ["l"="54.81,32.9"]
"sonots/tutorial-haartraining" ["l"="54.83,32.943"]
"JoakimSoderberg/imageclipper" ["l"="54.844,32.961"]
"wulfebw/mergevec" ["l"="54.85,32.929"]
"abhi-kumar/CAR-DETECTION" ["l"="54.835,32.849"]
"sherrardTr4129/Haar-Cascade-Classifiers" ["l"="54.829,32.925"]
"bikz05/object-detector" ["l"="54.761,32.91"]
"AlexeyAB/OpenCV-detection-models" ["l"="54.869,32.945"]
"mtschirs/js-objectdetect" ["l"="-31.517,-35.596", "c"=272]
"AdityaPai2398/Vehicle-And-Pedestrian-Detection-Using-Haar-Cascades" ["l"="54.749,32.852"]
"DaHoC/trainHOG" ["l"="54.738,32.883"]
"shantnu/Webcam-Face-Detect" ["l"="33.033,29.455", "c"=57]
"christopher5106/FastAnnotationTool" ["l"="50.409,33.076", "c"=314]
"shantnu/FaceDetect" ["l"="33.076,29.363", "c"=57]
"bismex/Awesome-cross-modality-person-re-identification" ["l"="55.79,32.838", "c"=355]
"pascal1129/kaggle_airbus_ship_detection" ["l"="52.97,31.902", "c"=731]
"pascal1129/cv_notes" ["l"="54.71,32.833"]
"bytefish/opencv" ["l"="33.035,28.967", "c"=57]
"bobo0810/PytorchNetHub" ["l"="50.699,30.16", "c"=83]
"Nirvan101/Person-Re-identification" ["l"="54.286,32.581"]
"digitalbrain79/person-reid" ["l"="55.99,32.648", "c"=355]
"manideep2510/CUHK03_dataset" ["l"="54.259,32.602"]
"nikunjmshah/Person-Tracking-and-Re-ID" ["l"="54.259,32.591"]
"jeffbass/yin-yang-ranch" ["l"="54.72,32.498"]
"jeffbass/imagenode" ["l"="54.708,32.512"]
"jeffbass/imagehub" ["l"="54.697,32.504"]
"AlexXiao95/2018AICity_TeamUW" ["l"="54.265,32.708"]
"VisualComputingInstitute/towards-reid-tracking" ["l"="54.211,32.61"]
"NVIDIAAICITYCHALLENGE/2019AICITY_Code_From_Top_Teams" ["l"="54.256,32.675"]
"Qidian213/Ranked_Person_ReID" ["l"="56.021,32.832", "c"=355]
"heshuting555/NAIC_Person_ReID_DMT" ["l"="55.989,32.831", "c"=355]
"whut2962575697/naic_reid" ["l"="54.107,32.669"]
"wmuron/motpy" ["l"="54.603,32.505"]
"adipandas/python-tutorial-codes" ["l"="54.496,32.569"]
"adipandas/SmallWorldNetCA" ["l"="54.486,32.579"]
"jorgem0/traffic_counter" ["l"="54.732,32.756"]
"amartya-k/vision" ["l"="54.734,32.721"]
"augmentedstartups/YOLOv4-Tutorials" ["l"="54.764,32.629"]
"IBM/powerai-vision-object-detection" ["l"="54.748,32.737"]
"BoPang1996/TubeTK" ["l"="54.414,32.632"]
"xiaobai1217/MBMD" ["l"="54.657,33.68", "c"=298]
"wzgwzg/AICity" ["l"="54.232,32.656"]
"ShuaiBai623/AI-City-Anomaly-Detection" ["l"="54.215,32.748"]
"NVIDIAAICITYCHALLENGE/2020AICITY_Code_From_Top_Teams" ["l"="54.187,32.644"]
"he010103/Traffic-Brain" ["l"="54.248,32.706"]
"GaoangW/TNT" ["l"="54.351,32.676"]
"didi/mtmc-vt" ["l"="54.239,32.637"]
"DoubangoTelecom/ultimateALPR-SDK" ["l"="34.165,30.172", "c"=892]
"ozantezcan/BSUV-Net-inference" ["l"="55.108,32.674"]
"ethereon/subsense" ["l"="55.105,32.727"]
"plstcharles/litiv" ["l"="55.128,32.726"]
"aimeng100/WeSamBE" ["l"="55.112,32.717"]
"Grabber/deep-background-subtraction" ["l"="55.064,32.714"]
"ozantezcan/BSUV-Net-2.0" ["l"="55.093,32.676"]
"sagi-z/BackgroundSubtractorCNT" ["l"="55.097,32.652"]
"zhengthomastang/Cal_PnP" ["l"="54.323,32.632"]
"dluvizon/vehicle-dsm" ["l"="54.423,32.742"]
"CaptainEven/MCMOT" ["l"="54.405,32.595"]
"GaoangW/TC_tracker" ["l"="54.442,32.731"]
"xinychen/awesome-latex-drawing" ["l"="-4.69,21.913", "c"=276]
"marvis/pytorch-yolo3" ["l"="50.919,30.135", "c"=83]
"gpeyre/matlab-toolboxes" ["l"="-5.206,23.257", "c"=960]
"canyilu/LibADMM-toolbox" ["l"="55.28,32.757"]
"Toemazz/VehicleDetectionAndTracking" ["l"="54.74,32.805"]
"thatbrguy/Pedestrian-Detection" ["l"="54.686,32.913"]
"akphi/PedestrianCounter" ["l"="54.707,32.875"]
"buffer51/lstm-rcnn-pedestrian-detection" ["l"="51.802,33.471", "c"=354]
"xingkongliang/Pedestrian-Detection" ["l"="50.913,30.399", "c"=83]
"liuwei16/CSP" ["l"="50.88,30.311", "c"=83]
"hasanirtiza/Pedestron" ["l"="50.846,30.386", "c"=83]
"icsfy/Pedestrian_Detection" ["l"="54.717,32.91"]
"mitmul/caltech-pedestrian-dataset-converter" ["l"="50.948,30.43", "c"=83]
"zhangliliang/RPN_BF" ["l"="51.733,33.438", "c"=354]
"cedricve/motion-detection" ["l"="54.578,33.019"]
"jooray/motion-detection" ["l"="54.572,33.046"]
"PINTO0309/OpenVINO-YoloV3" ["l"="64.228,-2.661", "c"=1153]
"leikunx/AI_projects" ["l"="54.51,32.792"]
"jiajunhua/StevenLei2017-AI_projects" ["l"="54.484,32.832"]
"tanluren/yolov3-channel-and-layer-pruning" ["l"="52.798,33.345", "c"=271]
"songwsx/person_search_demo" ["l"="55.887,32.744", "c"=355]
"Tencent/ObjectDetection-OneStageDet" ["l"="50.764,30.065", "c"=83]
"Adamdad/keras-YOLOv3-mobilenet" ["l"="50.414,32.898", "c"=314]
"Zzh-tju/DIoU-darknet" ["l"="52.958,33.3", "c"=271]
"princeton-vl/CornerNet-Lite" ["l"="50.807,30.139", "c"=83]
"spytensor/detect_steel_bar" ["l"="52.859,31.803", "c"=731]
"zeusees/HyperVID" ["l"="34.189,30.054", "c"=892]
"AndyoyoZ/usvImgPro" ["l"="54.54,32.785"]
"yasenh/libtorch-yolov5" ["l"="53.428,32.818", "c"=251]
"chenjianqu/Tracking-Solov2-Deepsort" ["l"="53.484,32.95", "c"=251]
"Rainweic/deepsort" ["l"="54.462,32.732"]
"sephirothhua/DeepSort_yoloV3-HOG_feature" ["l"="54.476,32.734"]
"xiangweizeng/mobile-lpr" ["l"="34.182,30.04", "c"=892]
"lyp-deeplearning/deep_sort_yolov3" ["l"="54.684,32.743"]
"SUMStudio/yolo-pedestrian-detection" ["l"="54.696,32.763"]
"Yingl-Liu/DetectAndTrack" ["l"="54.706,32.775"]
"yihongXU/TransCenter" ["l"="54.392,32.564"]
"yinjunbo/UMA-MOT" ["l"="54.405,32.645"]
"jutanke/cabbage" ["l"="54.439,32.692"]
"skandhurkat/CarDetect" ["l"="54.88,32.856"]
"arvganesh/Multi-Camera-Object-Tracking" ["l"="54.248,32.549"]
"ucuapps/top-view-multi-person-tracking" ["l"="54.233,32.579"]
"Jason-cs18/Awesome-Multi-Camera-Network" ["l"="54.218,32.547"]
"schuar-iosb/mta-dataset" ["l"="54.263,32.536"]
"KunalArora/multiple-camera_multiple-people_tracking" ["l"="54.249,32.571"]
"hafidh561/multi-camera-people-tracking" ["l"="54.273,32.56"]
"ipl-uw/AIC23_Track1_UWIPL_ETRI" ["l"="54.272,32.52"]
"koehlp/wda_tracker" ["l"="54.279,32.534"]
"BravoLu/OpenVehicleReID" ["l"="54.163,32.718"]
"CaptainEven/FairMOTVehicle" ["l"="54.289,32.621"]
"icarofua/vehicle-rear" ["l"="54.178,32.727"]
"zhengthomastang/MOT_Annot" ["l"="54.299,32.651"]
"regob/vehicle_mtmc" ["l"="54.28,32.601"]
"parkpow/deep-license-plate-recognition" ["l"="34.125,30.175", "c"=892]
"omarabid59/TensorflowDeepSortTracking" ["l"="54.707,32.61"]
"danielgordon10/re3-tensorflow" ["l"="54.742,32.622"]
"Akhtar303/Vehicle-Detection-and-Tracking-Usig-YOLO-and-Deep-Sort-with-Keras-and-Tensorflow" ["l"="54.696,32.625"]
"pprp/deep_sort_yolov3_pytorch" ["l"="54.659,32.57"]
"pprp/reid_for_deepsort" ["l"="54.7,32.545"]
"pprp/voc2007_for_yolo_torch" ["l"="50.618,30.155", "c"=83]
"mikel-brostrom/Yolov3_DeepSort_Pytorch" ["l"="54.679,32.554"]
"xinychen/academic-drawing" ["l"="-4.759,21.893", "c"=276]
"ryotat/tensor" ["l"="55.302,32.752"]
"Kaimaoge/Tensor-decomposition-completion-and-recovery-papers-and-codes" ["l"="55.325,32.749"]
"xinychen/geotensor" ["l"="55.352,32.744"]
"zhaoxile/reproducible-tensor-completion-state-of-the-art" ["l"="55.309,32.734"]
"xinychen/tensor-book" ["l"="55.393,32.798"]
"andrewssobral/mctc4bmi" ["l"="55.288,32.739"]
"datamllab/pyten" ["l"="55.393,32.765"]
"mcgill-smart-transport/bgcp_imputation" ["l"="55.342,32.78"]
"yuanlonghao/TRLRF" ["l"="21.54,17.801", "c"=863]
"rballester/tntorch" ["l"="21.652,17.808", "c"=863]
"JeanKossaifi/tensorly-notebooks" ["l"="21.611,17.843", "c"=863]
"qiangsiwei/tensor_tools" ["l"="55.316,32.767"]
"canyilu/tensor-completion-tensor-recovery" ["l"="55.302,32.724"]
"CT83/SmoothStream" ["l"="32.808,29.985", "c"=57]
"PyImageSearch/imutils" ["l"="50.894,29.752", "c"=83]
"NVIDIA-AI-IOT/deepstream_python_apps" ["l"="53.226,32.552", "c"=251]
"ceccocats/tkDNN" ["l"="53.224,32.625", "c"=251]
"miguelgrinberg/flask-video-streaming" ["l"="42.488,7.923", "c"=818]
"mdegans/nano_build_opencv" ["l"="53.152,32.445", "c"=251]
"NVlabs/PAMTRI" ["l"="54.113,32.712"]
"JakubSochor/BoxCars" ["l"="64.789,10.956", "c"=61]
"KevinQian97/ELECTRICITY-MTMC" ["l"="54.232,32.601"]
"guojunyao419/OPF-ADMM" ["l"="55.464,32.808"]
"YuejiangLIU/Optimal_Power_Flow" ["l"="55.444,32.81"]
"linfengYang/Dual-Consensus-ADMM-for-DC-OPF-CET" ["l"="55.494,32.811"]
"gobelc/opf-admm" ["l"="55.42,32.805"]
"ucbdrive/3d-vehicle-tracking" ["l"="64.716,11.041", "c"=61]
"tj27-vkr/RCNN-Vehicle-Tracking-Lane-Detection" ["l"="64.226,10.237", "c"=1092]
"feichtenhofer/Detect-Track" ["l"="54.869,33.744", "c"=298]
"ergysr/DeepCC" ["l"="54.452,32.676"]
"yuxng/MDP_Tracking" ["l"="54.821,33.683", "c"=298]
"jeffskinnerbox/people-counter" ["l"="54.884,32.481"]
"koba/overhead-camera-people-counter" ["l"="54.878,32.503"]
"JunaidCS032/MOTBeyondPixels" ["l"="54.408,32.692"]
"aljosaosep/ciwt" ["l"="54.367,32.737"]
"Kestrong/capture_reid" ["l"="55.853,32.69", "c"=355]
"Kevinnan-teen/Intelligent-Traffic-Based-On-CV" ["l"="54.656,32.948"]
"xmfbit/PedestrianDetection" ["l"="54.701,32.927"]
"z80z80z80/autocrop" ["l"="54.662,33.186"]
"smc8050/Dias_Autocrop" ["l"="54.65,33.204"]
"Claytorpedo/scan-cropper" ["l"="54.663,33.221"]
"PJunhyuk/people-counting-pose" ["l"="54.903,32.543"]
"Nikhil-Kasukurthi/Counting-people-video" ["l"="54.912,32.527"]
"LukashenkoYevhenii/People-Counter" ["l"="54.861,32.542"]
"RahmadSadli/2-D-Kalman-Filter" ["l"="54.476,32.798"]
"kimjingu/nonnegfac-python" ["l"="55.472,32.612"]
"canerturkmen/nmflib" ["l"="55.501,32.61"]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" ["l"="33.41,29.161", "c"=57]
"leviome/human_counter" ["l"="54.776,32.489"]
"AdityaPai2398/UI-For-Vehicle-and-Pedestrian-Detection-" ["l"="54.759,32.872"]
"felipecorrea/pedestrian-haar-based-detector" ["l"="54.732,32.863"]
"canyilu/Tensor-tensor-product-toolbox" ["l"="55.298,32.707"]
"canyilu/Tensor-Robust-Principal-Component-Analysis-TRPCA" ["l"="55.278,32.723"]
"andrewssobral/mtt" ["l"="55.261,32.734"]
"beerboaa/Color-Classification-CNN" ["l"="54.663,32.863"]
"walton-wang929/Color_Recognition" ["l"="54.673,32.877"]
"algolia/color-extractor" ["l"="25.635,-27.763", "c"=32]
"ahmetozlu/face_recognition_crop" ["l"="54.676,33.008"]
"Spectra456/Color-Recognition-CNN" ["l"="54.686,32.873"]
"rorodata/background-removal" ["l"="55.149,32.796"]
"aadityavikram/Background-Removal" ["l"="55.135,32.813"]
"takiyu/portrait_matting" ["l"="42.454,25.311", "c"=1283]
"huochaitiantang/pytorch-deep-image-matting" ["l"="42.448,25.278", "c"=1283]
"CDOTAD/AlphaGAN-Matting" ["l"="42.464,25.268", "c"=1283]
"nalika/A-3D-CNN-LSTM-Based-Image-to-Image-Foreground-Segmentation" ["l"="55.139,32.703"]
"GuiltyNeuron/ANPR" ["l"="34.102,30.175", "c"=892]
"akshun4/People-Counter" ["l"="54.86,32.492"]
"Deeptun/MOG-people-counter" ["l"="54.893,32.467"]
"librahfacebook/Detection" ["l"="54.74,32.53"]
"FutureBetter/face_recognition" ["l"="54.764,32.508"]
"owo12321/Yolov5_DeepSort_Traffic-counter" ["l"="54.708,32.477"]
"nicholaskajoh/TNEX" ["l"="54.718,32.695"]
"muhk01/YOLOv5-Object-Counter" ["l"="42.588,21.605", "c"=280]
"ankit1khare/Smart-Park-with-YOLO-V3" ["l"="60.194,10.835", "c"=87]
"mykeels/nigerian-constitution" ["l"="29.162,-28.784", "c"=680]
"huanghoujing/person-reid-triplet-loss-baseline" ["l"="55.986,32.744", "c"=355]
"nicolasmetallo/car-damage-detector" ["l"="54.069,32.979"]
"louisyuzhe/car-damage-detector" ["l"="54.096,32.996"]
"hemilpatel971/Damage-car-detection" ["l"="54.038,32.981"]
"nitsourish/car-damage-detection-using-CNN" ["l"="54.073,32.96"]
"TilakD/Car-Damage-Analysis-App" ["l"="54.041,32.999"]
"raviranjan0309/Car-Damage-Detector" ["l"="54.087,32.973"]
"lulujianjie/person-reid-tiny-baseline" ["l"="-55.304,-14.297", "c"=842]
"maksay/ptrack_cpp" ["l"="54.397,32.738"]
"apennisi/deep_sort" ["l"="54.484,32.752"]
"zhen-he/tracking-by-animation" ["l"="54.431,32.713"]
"polm/ndl-crop" ["l"="54.663,33.245"]
"layumi/DukeMTMC-reID_evaluation" ["l"="55.997,32.727", "c"=355]
"zhunzhong07/person-re-ranking" ["l"="55.963,32.742", "c"=355]
"VisualComputingInstitute/triplet-reid" ["l"="55.966,32.71", "c"=355]
"Yu-Wu/DukeMTMC-VideoReID" ["l"="55.939,32.715", "c"=355]
"hou-yz/open-reid-tracking" ["l"="54.205,32.53"]
"hou-yz/DeepCC-local" ["l"="54.19,32.558"]
"lpcinelli/foreground-segmentation" ["l"="55.095,32.744"]
"pascal1129/yolo_person_detect" ["l"="54.7,32.808"]
"VehicleReId/VeRi" ["l"="54.174,32.705"]
"kmr0877/Vehicle-and-Speed-Identification" ["l"="54.823,32.736"]
"shafu0x/vehicle-speed-estimation" ["l"="54.877,32.752"]
"bluesven869/detect-speed-vehicle" ["l"="54.805,32.743"]
"peizhaoli05/EDA_GNN" ["l"="54.364,32.657"]
"lxc86739795/VehicleReIDKeyPointData" ["l"="54.201,32.727"]
"SteveMacenski/jetson_nano_detection_and_tracking" ["l"="53.089,32.446", "c"=251]
"JardinRyu/Jetson_Nano_People_Counting" ["l"="54.873,32.443"]
"lcosicnus/CMS" ["l"="54.815,32.701"]
"Mega-Barrel/Speed-Detection-Using-OpenCV" ["l"="54.842,32.73"]
"SamPlvs/Object-detection-via-HOG-SVM" ["l"="54.779,32.962"]
"richaagrawa/Person-Detection-in-Various-Postures" ["l"="54.796,32.988"]
"jianlong-yuan/HOG-SVM-python" ["l"="54.757,32.941"]
"shijieS/DMMN" ["l"="54.371,32.686"]
"shijieS/OmniMOTDataset" ["l"="54.347,32.719"]
"dganguli/robust-pca" ["l"="55.332,32.682"]
"dfm/pcp" ["l"="55.363,32.693"]
"jkarnows/rpcaADMM" ["l"="55.275,32.669"]
"dlaptev/RobustPCA" ["l"="55.264,32.693"]
"wxiao0421/onlineRPCA" ["l"="55.365,32.668"]
"facebookarchive/fbpca" ["l"="55.396,32.686"]
"zc8340311/RobustAutoencoder" ["l"="52.837,14.761", "c"=689]
"wanggrun/SYSU-30k" ["l"="55.949,32.86", "c"=355]
"wanghailin97/Guaranteed-Tensor-Recovery-Fused-Low-rankness-and-Smoothness" ["l"="55.319,32.715"]
"zhaoxile/Low-rank-tensor-train-for-tensor-robust-principal-component-analysis" ["l"="55.257,32.715"]
"shubhi/car-damage-assessment" ["l"="54.113,32.988"]
"eddyhkchiu/mahalanobis_3d_multi_object_tracking" ["l"="64.662,11.092", "c"=61]
"SamvitJ/Duke-DeepCC" ["l"="54.202,32.546"]
"baileyqbb/SSD_deepSort_TF" ["l"="54.619,32.82"]
"csyizhou/Vehicle-Re-ID" ["l"="54.059,32.751"]
"songwsx/RFB-Person" ["l"="54.564,32.898"]
"songwsx/steel-detect" ["l"="54.561,32.911"]
"songwsx/RFSong-779" ["l"="54.578,32.906"]
"ahmedfgad/HOGNumPy" ["l"="54.721,33.029"]
"preethampaul/HOG" ["l"="54.717,33.057"]
"TongJiL/Vehicle-Re-identification-on-VeRi-dataset" ["l"="54.228,32.72"]
"adipandas/python-gui-demos" ["l"="54.47,32.567"]
"ipl-uw/2019-CVPR-AIC-Track-3-UWIPL" ["l"="54.204,32.762"]
"adampower48/AI-City-Anomaly-Detection" ["l"="54.209,32.774"]
"kevaldoshi17/NVIDIA_AICITY" ["l"="54.191,32.771"]
"gkrudah/MTMC" ["l"="54.192,32.588"]
"yoyomimi/TNT_pytorch" ["l"="54.337,32.705"]
"YTW/car-damage-detector-1" ["l"="54.025,33.009"]
"beyhangl/People-Counting-by-zones" ["l"="54.912,32.449"]
"PaddlePaddle/PaddleDetection" ["l"="50.235,29.715", "c"=83]
"axinc-ai/ailia-models" ["l"="44.829,30.969", "c"=243]
"hunglc007/tensorflow-yolov4-tflite" ["l"="50.408,32.858", "c"=314]
"wang-xinyu/tensorrtx" ["l"="50.315,29.877", "c"=83]
"AIZOOTech/flask-object-detection" ["l"="54.829,32.558"]
"VictorRancesCode/FlaskObjectDetection" ["l"="54.81,32.565"]
"bdd100k/bdd100k" ["l"="64.331,10.442", "c"=1092]
"SysCV/pcan" ["l"="54.385,32.533"]
"VisDrone/VisDrone-Dataset" ["l"="54.52,32.511"]
"VisDrone/DroneVehicle" ["l"="54.41,34.235", "c"=887]
"cv516Buaa/tph-yolov5" ["l"="53.454,3.638", "c"=1032]
"lyuwenyu/RT-DETR" ["l"="48.679,30.072", "c"=191]
"hukaixuan19970627/yolov5_obb" ["l"="53.126,31.992", "c"=731]
"ZhaoJ9014/Anti-UAV" ["l"="54.086,32.045", "c"=2290]
"obss/sahi" ["l"="50.456,29.951", "c"=83]
"ucas-vg/PointTinyBenchmark" ["l"="53.883,31.989", "c"=2290]
"HonglinChu/SiamTrackers" ["l"="54.594,33.775", "c"=298]
"Megvii-BaseDetection/YOLOX" ["l"="50.432,29.878", "c"=83]
"WongKinYiu/yolov7" ["l"="50.383,29.816", "c"=83]
"meituan/YOLOv6" ["l"="50.363,29.926", "c"=83]
"rlabbe/filterpy" ["l"="64.088,12.696", "c"=1121]
"PeterH0323/Smart_Construction" ["l"="33.778,29.161", "c"=57]
"dyh/unbox_yolov5_deepsort_counting" ["l"="54.637,32.496"]
"luanshiyinyang/awesome-multiple-object-tracking" ["l"="54.46,32.51"]
"noahcao/OC_SORT" ["l"="54.439,32.48"]
"JonathonLuiten/TrackEval" ["l"="54.452,32.527"]
"engcang/ros-yolo-sort" ["l"="54.412,32.829"]
"indra4837/yolov4_trt_ros" ["l"="54.378,32.876"]
"tryolabs/soccer-video-analytics" ["l"="49.053,25.866", "c"=584]
"Deci-AI/super-gradients" ["l"="48.722,29.975", "c"=191]
"marcoslucianops/DeepStream-Yolo" ["l"="53.252,32.594", "c"=251]
"WongKinYiu/yolor" ["l"="50.499,30.038", "c"=83]
"gengyanlei/reflective-clothes-detect-yolov5" ["l"="33.763,29.126", "c"=57]
"gengyanlei/fire-smoke-detect-yolov4" ["l"="33.891,29.116", "c"=57]
"niconielsen32/ComputerVision" ["l"="49.841,29.856", "c"=83]
"RizwanMunawar/yolov7-object-tracking" ["l"="54.537,32.447"]
"saimj7/People-Counting-in-Real-Time" ["l"="54.813,32.477"]
"epcm18/PeopleCounting-ComputerVision" ["l"="54.809,32.444"]
"Gupu25/PeopleCounter" ["l"="54.861,32.417"]
"IdoGalil/People-counting-system" ["l"="54.835,32.462"]
"darpan-jain/crowd-counting-using-tensorflow" ["l"="54.818,32.423"]
"akash-rajak/Real-Time-Human-Detection-Counting" ["l"="54.84,32.429"]
"SmitSheth/People-Counter" ["l"="54.826,32.449"]
"noumannahmad/Computer-Vision" ["l"="54.852,32.468"]
"poojavinod100/People-Counting-Crowd-Density-Detection" ["l"="54.849,32.45"]
"megvii-research/MOTR" ["l"="54.404,32.493"]
"dyhBUPT/StrongSORT" ["l"="54.467,32.483"]
"JudasDie/SOTS" ["l"="54.543,33.782", "c"=298]
"PeizeSun/TransTrack" ["l"="54.428,32.552"]
"DanceTrack/DanceTrack" ["l"="54.419,32.485"]
"ymzis69/HybridSORT" ["l"="54.412,32.454"]
"megvii-research/MOTRv2" ["l"="54.402,32.469"]
"tianweiy/CenterPoint" ["l"="64.551,11.105", "c"=61]
"SysCV/qdtrack" ["l"="54.409,32.543"]
"TAO-Dataset/tao" ["l"="50.642,30.718", "c"=83]
"MedChaabane/DEFT" ["l"="54.415,32.583"]
"xingyizhou/GTR" ["l"="54.388,32.502"]
"timmeinhardt/trackformer" ["l"="54.408,32.522"]
"pythonlessons/TensorFlow-2.x-YOLOv3" ["l"="50.379,32.806", "c"=314]
"mims-harvard/nimfa" ["l"="55.413,32.61"]
"cthurau/pymf" ["l"="55.431,32.584"]
"hiroyuki-kasai/NMFLibrary" ["l"="55.328,32.633"]
"trigeorgis/Deep-Semi-NMF" ["l"="55.376,32.62"]
"mims-harvard/scikit-fusion" ["l"="55.461,32.588"]
"yoyolicoris/pytorch-NMF" ["l"="52.139,29.865", "c"=83]
"JuliaStats/NMF.jl" ["l"="55.447,32.624"]
"benanne/wmf" ["l"="59.593,23.85", "c"=235]
"benedekrozemberczki/DANMF" ["l"="52.813,15.821", "c"=100]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" ["l"="50.197,32.835", "c"=314]
"gnebehay/OpenTLD" ["l"="54.868,33.6", "c"=298]
"1044197988/Python-Image-feature-extraction" ["l"="50.331,27.103", "c"=791]
"PyRetri/PyRetri" ["l"="58.114,9.048", "c"=744]
"232525/ViBe.python" ["l"="55.078,32.608"]
"232525/ViBe.Cython" ["l"="55.091,32.596"]
"Ank-Cha/Social-Distancing-Analyser-COVID-19" ["l"="33.926,29.378", "c"=57]
"andrewssobral/imtsl" ["l"="55.243,32.746"]
"HowieMa/DeepSORT_YOLOv5_Pytorch" ["l"="54.578,32.494"]
"duongcongnha/Vehicle-tracking" ["l"="54.626,32.477"]
"bharath5673/StrongSORT-YOLO" ["l"="54.5,32.498"]
"deshwalmahesh/yolov7-deepsort-tracking" ["l"="54.513,32.46"]
"JackWoo0831/Yolov7-tracker" ["l"="54.491,32.477"]
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" ["l"="54.581,32.514"]
"xuarehere/yolo_series_deepsort_pytorch" ["l"="54.517,32.437"]
"nicedaddy/Yolov5_DeepSort_Pytorch_lane_detection" ["l"="65.301,10.913", "c"=61]
"amazon-science/siam-mot" ["l"="54.44,32.57"]
"WongKinYiu/ScaledYOLOv4" ["l"="50.591,30.091", "c"=83]
"michhar/pytorch-yolo-v3-custom" ["l"="54.398,32.665"]
"stephenbeckr/fastRPCA" ["l"="55.233,32.692"]
"andrewssobral/ostd" ["l"="55.206,32.726"]
"jamiezeminzhang/Tensor_Completion_and_Tensor_RPCA" ["l"="55.285,32.713"]
"qbzhao/BCPF" ["l"="55.328,32.733"]
"YisiLuo/Continuous-Tensor-Toolbox" ["l"="55.348,32.727"]
"anmspro/Turbulent-Traveler-Full-Stack-Web-Development" ["l"="54.874,32.72"]
"anmspro/DBMS-Traveling_Management_System" ["l"="54.881,32.7"]
"anmspro/Intro-to-Tensorflow-for-Deep-Learning-Udacity" ["l"="54.883,32.712"]
"anmspro/Smart-Car-Parking-System" ["l"="54.898,32.711"]
"openremote/or-objectdetection" ["l"="54.72,32.626"]
"RizwanMunawar/Face-recognition-using-opencv-computer-vision-" ["l"="54.622,32.394"]
"RizwanMunawar/Houses-price-prediction-web-app-machine-learning-" ["l"="54.602,32.408"]
"theAIGuysCode/Object-Detection-API" ["l"="54.762,32.576"]
"hritik7080/Car-License-Plate-Recognition" ["l"="54.795,32.535"]
"theAIGuysCode/Download-Google-Images" ["l"="54.757,32.56"]
"SoloSynth1/tensorflow-yolov4" ["l"="54.766,32.532"]
"TNTWEN/OpenVINO-YOLOV4" ["l"="64.184,-2.715", "c"=1153]
"Kazuhito00/mediapipe-python-sample" ["l"="49.848,30.039", "c"=83]
"Kazuhito00/MOT-Tracking-by-Detection-Pipeline" ["l"="49.651,30.012", "c"=83]
"DeNA/nota" ["l"="54.64,32.439"]
"AIHunters/AcurusTrack" ["l"="34.231,30.34", "c"=892]
"mosamircs/Multi-Camera-Tracking" ["l"="54.177,32.53"]
"theAIGuysCode/YoloGenerateTrainingFile" ["l"="54.765,32.548"]
"theAIGuysCode/YOLOv3-Cloud-Tutorial" ["l"="54.779,32.56"]
"oseledets/TT-Toolbox" ["l"="21.594,17.81", "c"=863]
"andrewssobral/tensor_toolbox" ["l"="55.258,32.755"]
"theAIGuysCode/yolo-v3" ["l"="54.779,32.59"]
"dendorferpatrick/MOTChallengeEvalKit" ["l"="54.435,32.584"]
"ChrisSchinnerl/pymf3" ["l"="55.447,32.564"]
"CREESTL/CarCounterYOLOv3" ["l"="54.789,32.733"]
"kaylode/vehicle-counting" ["l"="52.896,0.037", "c"=810]
"lbin/DCNv2" ["l"="50.992,30.212", "c"=83]
"hhk7734/tensorflow-yolov4" ["l"="50.452,32.691", "c"=314]
"wudashuo/yolov5" ["l"="53.406,3.7", "c"=1032]
"1461521844lijin/trt_yolo_video_pipeline" ["l"="53.425,32.612", "c"=251]
"KeyForce/Cascade-RCNN-Tracking" ["l"="54.354,32.608"]
"CaptainEven/YOLOV4_MCMOT" ["l"="54.331,32.594"]
"haroonshakeel/tensorflow-yolov4-tflite" ["l"="54.827,32.585"]
"zhangxinyu-xyz/PGAN-VehicleRe-ID" ["l"="54.129,32.69"]
"joschu/cgt" ["l"="44.924,27.689", "c"=789]
"xdata-skylark/libskylark" ["l"="55.438,32.689"]
"VDIGPKU/CBNet_caffe" ["l"="50.74,30.227", "c"=83]
"shenh10/mot_evaluation" ["l"="54.365,32.589"]
"yongxinw/GSDT" ["l"="54.399,32.578"]
"nightmaredimple/Multi-object-Tracking-paper-code-list" ["l"="54.428,32.624"]
"AndreaHor/LifT_Solver" ["l"="54.391,32.619"]
"Zhongdao/UniTrack" ["l"="54.365,32.534"]
"iwatake2222/play_with_tflite" ["l"="49.762,29.944", "c"=83]
"Ma-Dan/keras-yolo4" ["l"="50.432,32.775", "c"=314]
"Stephenfang51/tracklite" ["l"="54.766,32.606"]
"AnshulSood11/PPE-Detection-YOLO-Deep_SORT" ["l"="33.728,29.057", "c"=57]
"Eruvae/yolact_ros" ["l"="54.3,32.958"]
"Geonhee-LEE/yolact_ros" ["l"="54.287,32.977"]
"mangye16/ReID-Survey" ["l"="55.898,32.821", "c"=355]
"JialeCao001/SipMask" ["l"="50.631,30.381", "c"=83]
"sarful/People-counter-opencv-python3" ["l"="54.884,32.39"]
"zzzxxxttt/pytorch_simple_CenterNet_45" ["l"="50.564,30.303", "c"=83]
"emdata-ailab/VANET" ["l"="54.106,32.688"]
"Xuanmeng-Zhang/AICITY2021-Track2" ["l"="54.136,32.628"]
"angooj/Vehicle-Number-Plate-detection-Using-Tensorflow" ["l"="54.823,32.521"]
"daip13/LPC_MOT" ["l"="54.377,32.598"]
"lucasjinreal/DCNv2_latest" ["l"="50.954,30.209", "c"=83]
"vipul-sharma20/gesture-opencv" ["l"="30.324,29.193", "c"=1527]
"jbeale1/OpenCV" ["l"="54.561,32.993"]
"pramod722445/Object_Detection_App" ["l"="54.871,32.583"]
"LCFractal/AIC21-MTMC" ["l"="54.211,32.578"]
"uark-cviu/DyGLIP" ["l"="54.242,32.559"]
"HaozheQi/P2B" ["l"="64.809,11.122", "c"=61]
"hungpowang/YOLOv4_MOT_TensorRT" ["l"="54.81,32.603"]
"mikwieczorek/centroids-reid" ["l"="55.868,32.903", "c"=355]
"StanfordVL/JRMOT_ROS" ["l"="64.69,11.091", "c"=61]
"qcraftai/simtrack" ["l"="64.731,11.127", "c"=61]
"cogsys-tuebingen/CBMOT" ["l"="64.717,11.141", "c"=61]
"nightldj/admm_release" ["l"="55.352,32.794"]
"fangvv/LassoADMM" ["l"="55.321,32.789"]
"weilinear/PyRPCA" ["l"="55.258,32.666"]
"wep21/tensorrt_yolov4_ros" ["l"="54.365,32.905"]
"JunweiLiang/Multiverse" ["l"="63.402,12.672", "c"=241]
"Xiangyu-CAS/Yet-Another-reid-baseline" ["l"="55.982,32.934", "c"=355]
"songguocode/TADAM" ["l"="54.371,32.578"]
"jiaweihe1996/GMTracker" ["l"="54.35,32.572"]
"fatemeh-slh/ArTIST" ["l"="54.347,32.596"]
"IPapakis/GCNNMatch" ["l"="54.355,32.622"]
"LcenArthas/CVWC2019-Amur-Tiger-Re-ID" ["l"="54.024,32.687"]
"liuning-scu-cn/AmurTigerReID" ["l"="53.998,32.68"]
"LcenArthas/CVWC2019-Amur-Tiger-Detection" ["l"="53.991,32.693"]
"LcenArthas/JDATA-2019-Snow_leopard" ["l"="54.001,32.706"]
"yinizhizhu/GNMOT" ["l"="54.368,32.643"]
"xinshuoweng/PTP" ["l"="54.344,32.638"]
"augmentedstartups/OpenCVAIKitApps" ["l"="54.81,32.628"]
"chenbinghui1/MHN" ["l"="56.009,32.796", "c"=355]
"Alpha-Video/AlphaVideo" ["l"="47.56,33.893", "c"=168]
"BoPang1996/PGT" ["l"="47.475,33.914", "c"=168]
"xinshuoweng/GNN3DMOT" ["l"="54.336,32.618"]
"backkon/AICITY2022_Track1_TAG" ["l"="54.168,32.592"]
"sxzrt/Instructions-of-the-PersonX-dataset" ["l"="47.103,34.208", "c"=168]
"sxzrt/Dissecting-Person-Re-ID-from-the-Viewpoint-of-Viewpoint" ["l"="47.139,34.193", "c"=168]
"lockxuan/non-overlapping_multiple-camera_tracking" ["l"="54.26,32.528"]
"CaptainEven/MCMOT-ByteTrack" ["l"="54.334,32.533"]
"selab-hcmus/AI_City_2020" ["l"="54.122,32.635"]
"SherryJYC/3D-Tracking-MVS" ["l"="54.243,32.536"]
"tamu-helios/pyten" ["l"="55.42,32.765"]
"msight-tech/research-xbm" ["l"="32.836,29.487", "c"=57]
"bharath5673/python-traffic-counter-with-yolo-and-sort" ["l"="54.793,32.651"]
"xiaoxiaotao/person-detection" ["l"="54.55,32.929"]
"vaesl/LRF-Net" ["l"="50.747,30.412", "c"=83]
"gggcy/AIC2020_ReID" ["l"="54.09,32.769"]
"xuxu116/person_detection_lite" ["l"="54.538,32.951"]
"danielgordon10/re3-pytorch" ["l"="54.793,32.62"]
"yz93/anchor-diff-VOS" ["l"="47.754,34.741", "c"=1004]
"anxiangsir/NAIC_reid_challenge_rank14_rank25" ["l"="55.921,32.748", "c"=355]
"zlai0/MAST" ["l"="47.84,34.607", "c"=1004]
"derkbreeze/LPT" ["l"="47.874,34.321", "c"=168]
"RizwanMunawar/YOLO-RX57-FPS-Comparision" ["l"="54.599,32.395"]
"cnyvfang/labelGo-Yolov5AutoLabelImg" ["l"="53.503,3.618", "c"=1032]
"darkpgmr/DarkLabel" ["l"="54.416,32.503"]
"Javacr/PyQt5-YOLOv5" ["l"="53.556,3.69", "c"=1032]
"midasklr/yolov5prune" ["l"="53.418,3.625", "c"=1032]
"open-mmlab/mmgeneration" ["l"="50.309,29.913", "c"=83]
"TexasInstruments/edgeai-yolov5" ["l"="31.91,28.259", "c"=352]
"RizwanMunawar/yolov7-pose-estimation" ["l"="54.565,32.378"]
"jahongir7174/YOLOv8-pose" ["l"="54.571,32.317"]
"xinychen/latex-cookbook" ["l"="-4.011,23.469", "c"=827]
"opencv/opencv_zoo" ["l"="33.571,29.227", "c"=57]
"davidfrz/yolov5_distance_count" ["l"="65.403,5.123", "c"=415]
"rbgirshick/voc-dpm" ["l"="54.872,33.561", "c"=298]
"tzutalin/ImageNet_Utils" ["l"="50.47,33.025", "c"=314]
"cvzone/cvzone" ["l"="50.149,29.964", "c"=83]
"winter2897/Real-time-Auto-License-Plate-Recognition-with-Jetson-Nano" ["l"="53.115,32.531", "c"=251]
"dyh/win10_yolov5_deepsort_counting" ["l"="54.689,32.448"]
"zengwb-lx/yolov5-deepsort-pedestrian-counting" ["l"="54.673,32.467"]
"zengwb-lx/Yolov5-Deepsort-Fastreid" ["l"="55.836,32.756", "c"=355]
"oaqoe-DWQ/Yolov5_DeepSort_Pytorch" ["l"="54.677,32.431"]
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" ["l"="33.267,29.982", "c"=57]
"rafaelpadilla/review_object_detection_metrics" ["l"="50.625,30.104", "c"=83]
"lyrgwlr/Human-tracking-multicam" ["l"="54.304,32.576"]
"basel-ay/Automated-Car-Damage-Detection" ["l"="54.086,33.023"]
"Gumpest/YOLOv5-Multibackbone-Compression" ["l"="53.444,3.658", "c"=1032]
"HansRen1024/SVM-classification-localization" ["l"="54.779,32.939"]
"JeanKossaifi/python-hog" ["l"="54.732,32.982"]
"bikz05/object-tracker" ["l"="54.639,32.81"]
"bikz05/bag-of-words" ["l"="54.793,33.052"]
"josemarcosrf/HOG-Pedestrian-Detector" ["l"="54.798,32.949"]
"lucasjinreal/yolov7_d2" ["l"="50.381,29.973", "c"=83]
"MCG-NJU/MultiSports" ["l"="47.755,33.964", "c"=168]
"MCG-NJU/SportsMOT" ["l"="54.371,32.407"]
"MCG-NJU/MeMOTR" ["l"="54.391,32.445"]
"TRI-ML/PF-Track" ["l"="64.692,11.25", "c"=61]
"aleksandrkim61/EagerMOT" ["l"="64.672,11.111", "c"=61]
"tomazas/opencv-lane-vehicle-track" ["l"="64.299,10.181", "c"=1092]
"MicrocontrollersAndMore/OpenCV_3_Car_Counting_Cpp" ["l"="34.002,30.286", "c"=892]
"ahmetozlu/vehicle_counting_hog_svm" ["l"="54.748,32.825"]
"OpenCVBlobsLib/opencvblobslib" ["l"="54.857,32.795"]
"xfgryujk/VehicleDetection" ["l"="54.836,32.786"]
"iandees/speedtrack" ["l"="54.83,32.802"]
"dataprofessor/streamlit_freecodecamp" ["l"="42.613,-2.745", "c"=692]
"dataprofessor/population-dashboard" ["l"="54.399,33.147"]
"colinvaz/nmf-toolbox" ["l"="55.353,32.616"]
"DUT-DIPLab/Graph-Multi-NMF-Feature-Clustering" ["l"="55.358,32.631"]
"Sharpiless/Yolov5-Flask-VUE" ["l"="42.52,21.602", "c"=280]
"tmandel/fish-detrac" ["l"="54.368,32.485"]
"wudongming97/RMOT" ["l"="54.34,32.438"]
"mengting2023/LG-Track" ["l"="54.382,32.423"]
"lkeab/BCNet" ["l"="50.645,30.512", "c"=83]
"akaifi/MultiObjectTrackingBasedOnColor" ["l"="54.537,32.81"]
"eveningglow/multi-object-tracker" ["l"="54.554,32.77"]
"Yejin0111/AICITY2022-Track1-MTMC" ["l"="54.187,32.57"]
"shengyuhao/DIVOTrack" ["l"="54.324,32.436"]
"MCG-NJU/MOTIP" ["l"="54.387,32.432"]
"a1600012888/MUTR3D" ["l"="64.696,11.232", "c"=61]
"ShuaiBai623/AIC2021-T5-CLV" ["l"="54.129,32.602"]
"NVIDIAAICITYCHALLENGE/2022AICITY_Code_From_Top_Teams" ["l"="54.178,32.582"]
"coder-wangzhen/AIC22-MCVT" ["l"="54.161,32.564"]
"royukira/AIC22_Track1_MTMC_ID10" ["l"="54.17,32.573"]
"vpulab/Online-Clustering-based-MTMC-Tracking" ["l"="54.16,32.577"]
"stypr/clubhouse-py" ["l"="-9.105,14.032", "c"=105]
"Guanghan/ROLO" ["l"="54.822,33.703", "c"=298]
"RobinDavid/Motion-detection-OpenCV" ["l"="54.588,32.958"]
"simondlevy/OpenCV-Python-Hacks" ["l"="51.439,29.764", "c"=83]
"DrewNF/Tensorflow_Object_Tracking_Video" ["l"="54.885,33.729", "c"=298]
"uoip/KCFcpp-py-wrapper" ["l"="54.794,33.787", "c"=298]
"HanGuangXin/ByteTrack_ReID" ["l"="54.361,32.505"]
"MichistaLin/yolov5-deepsort-pedestraintracking" ["l"="54.697,32.43"]
"chenxin-dlut/TransT" ["l"="54.562,33.77", "c"=298]
"WatershedArts/Footfall" ["l"="54.931,32.485"]
"PEOPLE-INSIDE/people-inside" ["l"="54.965,32.481"]
"brian-yu/pedestrian-cam" ["l"="54.983,32.463"]
"Viktopia/sonar" ["l"="54.958,32.453"]
"hustvl/CrossVIS" ["l"="50.68,30.573", "c"=83]
"Flowerfan/Trackron" ["l"="54.326,32.5"]
"XXL513/-2" ["l"="54.691,32.4"]
"adhirajghosh/RPTM_reid" ["l"="54.055,32.639"]
"justinamiller/DotNet-Coding-Guidelines" ["l"="-9.088,14.086", "c"=105]
"ai-eks/OpenClubhouse" ["l"="-9.142,14.084", "c"=105]
"fcakyon/yolov5-pip" ["l"="54.303,32.703"]
"keremberke/awesome-yolov5-models" ["l"="54.273,32.74"]
"kadirnar/torchyolo" ["l"="54.374,32.615"]
"hqucv/siamban" ["l"="54.579,33.734", "c"=298]
"shackenberg/Minimal-Bag-of-Visual-Words-Image-Classifier" ["l"="54.812,33.088"]
"kushalvyas/Bag-of-Visual-Words-Python" ["l"="54.801,33.106"]
"zxcver/spatio-time-mtmc" ["l"="54.141,32.585"]
"ChienHsuan/MCDPT" ["l"="54.236,32.52"]
"pramod722445/Custom_Object_Detection_App" ["l"="54.901,32.582"]
"SysCV/qd-3dt" ["l"="64.714,11.087", "c"=61]
"TRI-ML/permatrack" ["l"="54.368,32.553"]
"shafu0x/opical-flow-estimation-with-RAFT" ["l"="54.901,32.758"]
"laavanyebahl/speed-estimation-of-car-with-optical-flow" ["l"="54.921,32.767"]
"9andrea1/opencv" ["l"="54.545,33.013"]
"Sharpiless/yolox-deepsort" ["l"="54.584,32.338"]
"pmj110119/YOLOX_deepsort_tracker" ["l"="50.628,2.673", "c"=85]
"Leon-E-Zion/YoloX-Track-Plate_Recognition-MoreModules" ["l"="54.602,32.296"]
"1079863482/ShuffleNet-deepsort" ["l"="54.605,32.313"]
"dendorferpatrick/QuoVadis" ["l"="54.304,32.511"]
"kadirnar/combat-drone" ["l"="54.287,32.767"]
"kadirnar/yolov5-sahi" ["l"="54.3,32.745"]
"realgump/MvMHAT" ["l"="54.287,32.43"]
"fredfung007/cityflow-nl" ["l"="54.086,32.594"]
"kadirnar/TrackerHub" ["l"="54.328,32.693"]
"mftnakrsu/Tf2-ObjectDetectionAPI" ["l"="54.592,32.829"]
"mftnakrsu/DeepDream" ["l"="54.589,32.842"]
"mftnakrsu/ObjectDetection-w-opencv" ["l"="54.582,32.836"]
"mftnakrsu/Machine-Learning-Algorithm" ["l"="54.599,32.841"]
"mftnakrsu/cats-and-dogs-CNN-v2" ["l"="54.605,32.832"]
"mftnakrsu/ImageProcessing-with-openCV" ["l"="54.575,32.827"]
"GeniusAng/MultiCarDetection" ["l"="54.732,32.445"]
"Ai-trainee/Traffic-Sign-Recognition-PyQt5-YOLOv5-GUI" ["l"="53.614,3.716", "c"=1032]
"qunshansj/YOLO_Deepsort_Pedestrian_Counting" ["l"="54.738,32.459"]
"mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR" ["l"="54.595,32.81"]
"prateekralhan/Streamlit-based-Automatic-Number-Plate-Recognition" ["l"="54.619,32.843"]
"mftnakrsu/paper_summary_makale_ozetleri" ["l"="54.571,32.841"]
"mftnakrsu/Comparison-of-OCR" ["l"="54.582,32.852"]
"mftnakrsu/AutonomousRobots-Kalman-Filter" ["l"="54.601,32.852"]
"Asikpalysik/Automatic-License-Plate-Detection" ["l"="54.571,32.808"]
"DoganK01/YOLOV8-DeepSORT-Tracking-Vehicle-Counting" ["l"="54.632,32.529"]
"NVIDIAAICITYCHALLENGE/2023AICITY_Code_From_Top_Teams" ["l"="54.214,32.514"]
"tungdop2/ByteTrack_yolov5" ["l"="54.199,32.429"]
"gmt710/yolov5ByteTrack" ["l"="54.164,32.416"]
"Naughty-Galileo/YoloV5_MCMOT" ["l"="54.181,32.407"]
"GerardMaggiolino/Deep-OC-SORT" ["l"="54.428,32.445"]
"WWangYuHsiang/SMILEtrack" ["l"="54.415,32.441"]
"hustvl/SparseTrack" ["l"="54.404,32.428"]
"FoundationVision/VNext" ["l"="50.689,30.608", "c"=83]
"qjy981010/CMaskTrack-RCNN" ["l"="50.661,30.621", "c"=83]
"SysCV/transfiner" ["l"="50.653,30.483", "c"=83]
"wjf5203/SeqFormer" ["l"="50.675,30.596", "c"=83]
"visinf/dense-ulearn-vos" ["l"="47.789,34.607", "c"=1004]
"sukjunhwang/VITA" ["l"="50.68,30.674", "c"=83]
"NVlabs/MinVIS" ["l"="50.685,30.655", "c"=83]
"saebyn/munkres-cpp" ["l"="54.374,32.817"]
"mcximing/hungarian-algorithm-cpp" ["l"="54.411,32.792"]
"zcharon/Smart-Transportation-System" ["l"="54.721,32.406"]
"brjathu/T3DP" ["l"="30.308,28.822", "c"=94]
"MasterBin-IIAU/Unicorn" ["l"="54.546,33.805", "c"=298]
"rizkydermawan1992/Face-Detection" ["l"="59.857,14.248", "c"=334]
"computervisioneng/automatic-number-plate-recognition-python-yolov8" ["l"="54.575,32.761"]
"pyannote/pyannote-video" ["l"="42.267,7.402", "c"=818]
"dvl-tum/GHOST" ["l"="54.379,32.45"]
"dvl-tum/SUSHI" ["l"="54.375,32.436"]
"jozhang97/DETA" ["l"="48.647,30.325", "c"=191]
"JackWoo0831/Swin-JDE" ["l"="50.632,31.032", "c"=83]
"leblancfg/autocrop" ["l"="54.673,33.131"]
"mantasu/face-crop-plus" ["l"="54.694,33.17"]
"lih627/autocrop" ["l"="54.659,33.154"]
"kamkyu94/Fast_Online_MTMCT" ["l"="54.129,32.552"]
"Leon-E-Zion/YoloX-Track-Plate_Recognition" ["l"="54.612,32.278"]
"Double-zh/ByteTrack" ["l"="54.272,32.481"]
"kadirnar/yolov5-strongsort" ["l"="54.326,32.656"]
"kadirnar/sahi-learn" ["l"="54.307,32.675"]
"nwbirnie/rpca" ["l"="55.264,32.649"]
"MehakArora/Robust-PCA-with-ADMM" ["l"="55.291,32.652"]
"MCG-NJU/MixSort" ["l"="54.384,32.411"]
"hsiangwei0903/Deep-EIoU" ["l"="54.361,32.395"]
"MCG-NJU/MixFormerV2" ["l"="54.45,33.767", "c"=298]
"SoccerNet/sn-tracking" ["l"="49.054,25.91", "c"=584]
"cdmstrong/yolov5-deepSort-tracker" ["l"="54.734,32.388"]
"AaronCIH/SJDL-Foggy-Vehicle-Re-Identification--AAAI2022" ["l"="53.888,32.638"]
"AaronCIH/RVSL-rvsl-robust-vehicle-similarity-learning--ECCV22" ["l"="53.91,32.638"]
"shackenberg/phow_caltech101.py" ["l"="54.835,33.113"]
"francescosolera/LDCT" ["l"="54.381,32.757"]
"DenisTome/DeepPed" ["l"="54.852,33.049"]
"MuhammadMoinFaisal/Automatic_Number_Plate_Detection_Recognition_YOLOv8" ["l"="54.618,32.675"]
"Muhammad-Zeerak-Khan/Automatic-License-Plate-Recognition-using-YOLOv8" ["l"="54.612,32.738"]
"MuhammadMoinFaisal/YOLOv8_Segmentation_DeepSORT_Object_Tracking" ["l"="54.623,32.548"]
"MuhammadMoinFaisal/YOLOv8-object-tracking-blurring-counting" ["l"="54.662,32.584"]
"MuhammadMoinFaisal/FireDetectionYOLOv8" ["l"="33.955,29.074", "c"=57]
"chequanghuy/Character-Time-series-Matching" ["l"="54.645,32.705"]
"MuhammadMoinFaisal/Computervisionprojects" ["l"="54.533,32.887"]
"Arijit1080/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR" ["l"="54.65,32.688"]
"mendez-luisjose/License-Plate-Detection-with-YoloV8-and-EasyOCR" ["l"="54.626,32.719"]
"ibaiGorordo/ONNX-YOLOv8-Object-Detection" ["l"="53.476,32.743", "c"=251]
"we0091234/yolov8-plate" ["l"="34.111,29.932", "c"=892]
"z1069614715/objectdetection_script" ["l"="50.441,29.706", "c"=83]
"bharath5673/Deepstream" ["l"="53.08,32.553", "c"=251]
"RizwanMunawar/yolov8-object-tracking" ["l"="54.585,32.473"]
"ibaiGorordo/ONNX-YOLOv7-Object-Detection" ["l"="54.523,32.341"]
"RizwanMunawar/yolov5-object-tracking" ["l"="54.578,32.401"]
"RizwanMunawar/yolov7-segmentation" ["l"="54.579,32.416"]
"coderonion/awesome-yolo-object-detection" ["l"="53.457,3.701", "c"=1032]
"bharath5673/yolo_BEV" ["l"="64.921,10.989", "c"=61]
"stephansturges/WALDO" ["l"="48.779,29.909", "c"=191]
"facebookresearch/pysparnn" ["l"="53.078,25.671", "c"=172]
"z1069614715/yolo-pyqt" ["l"="53.618,3.675", "c"=1032]
"dereks/motion_tracking" ["l"="54.588,32.994"]
"shanren7/real_time_face_recognition" ["l"="33.162,29.352", "c"=57]
"facebookresearch/DetectAndTrack" ["l"="31.621,28.187", "c"=352]
"mpatacchiola/deepgaze" ["l"="33.279,29.094", "c"=57]
"sturkmen72/C4-Real-time-pedestrian-detection" ["l"="54.731,32.929"]
"spencer-project/spencer_people_tracking" ["l"="61.663,13.769", "c"=313]
"dvlab-research/ECCV22-P3AFormer-Tracking-Objects-as-Pixel-wise-Distributions" ["l"="54.357,32.468"]
"psaltaath/tadn-mot" ["l"="54.355,32.439"]
"BingfengYan/CO-MOT" ["l"="54.368,32.426"]
"CVMI-Lab/IST-Net" ["l"="59.213,15.436", "c"=536]
"nota-github/AIC2023_Track1_Nota" ["l"="54.268,32.497"]
"corfyi/UCMCTrack" ["l"="54.423,32.429"]
"JackWoo0831/Easier_To_Use_TrackEval" ["l"="54.466,32.413"]
"vukasin-stanojevic/BoostTrack" ["l"="54.406,32.412"]
"RizwanMunawar/yolov7-object-blurring" ["l"="54.594,32.381"]
"RizwanMunawar/yolov7-object-cropping" ["l"="54.606,32.387"]
"midasklr/yolov5ds" ["l"="53.444,3.571", "c"=1032]
"pingyang1117/SMILEtrack_Official" ["l"="54.425,32.407"]
"amazon-science/tracking-dataset" ["l"="54.432,32.383"]
"isLinXu/YOLOv8_Efficient" ["l"="53.52,32.889", "c"=251]
"antevis/CarND-Project5-Vehicle_Detection_and_Tracking" ["l"="54.835,32.885"]
"pddenhar/OpenCV-Dashcam-Car-Detection" ["l"="54.837,32.902"]
"lewes6369/TensorRT-Yolov3" ["l"="51.677,33.235", "c"=354]
"rockkingjy/OpenTracker" ["l"="54.722,33.742", "c"=298]
"computervisioneng/train-yolov8-custom-dataset-step-by-step-guide" ["l"="54.503,32.872"]
"computervisioneng/image-classification-yolov8" ["l"="54.476,32.887"]
"computervisioneng/image-segmentation-yolov8" ["l"="54.491,32.921"]
"computervisioneng/opencv-python-course-computer-vision" ["l"="54.486,32.901"]
"computervisioneng/yolov8-full-tutorial" ["l"="54.466,32.902"]
"computervisioneng/object-tracking-yolov8-deep-sort" ["l"="54.463,32.931"]
"computervisioneng/train-object-detector-detectron2" ["l"="54.504,32.9"]
"SkalskiP/sports" ["l"="49.048,25.828", "c"=584]
"jingh-ai/ultralytics-YOLO-DeepSort-ByteTrack-PyQt-GUI" ["l"="53.627,3.69", "c"=1032]
"MuhammadMoinFaisal/YOLOv7-DeepSORT-Object-Tracking" ["l"="54.606,32.484"]
"KdaiP/yolov8-deepsort-tracking" ["l"="53.634,3.625", "c"=1032]
"MarvinTeichmann/KittiSeg" ["l"="53.533,30.73", "c"=155]
"MarvinTeichmann/KittiBox" ["l"="54.922,32.919"]
"TensorVision/TensorVision" ["l"="54.952,32.946"]
"haroonshakeel/yolov7-object-tracking" ["l"="54.531,32.387"]
"muratali016/Yolov7-Object-Counter-Custom-Funcitons" ["l"="54.552,32.339"]
"DataXujing/YOLOv8" ["l"="53.441,32.727", "c"=251]
"leicheng-tensor/Reproducible-Bayesian-Tensor-Matrix-Machine-Learning-SOTA" ["l"="55.404,32.82"]
"Chengyuan-Zhang/IDM_Bayesian_Calibration" ["l"="55.447,32.836"]
"we0091234/Car_recognition" ["l"="34.132,29.95", "c"=892]
"xuarehere/yolov7_deepsort_tensorrt" ["l"="53.359,32.768", "c"=251]
"krisnarengga/yolov7-vehicle-counting" ["l"="54.673,32.498"]
"computervisioneng/face-attendance-system" ["l"="54.537,32.837"]
"computervisioneng/face-attendance-web-app-react-python" ["l"="54.528,32.866"]
"Bigtuo/YOLOv7-Pose-Bytetrack-STGCN" ["l"="33.732,28.961", "c"=57]
"nanmi/yolov7-pose" ["l"="33.714,28.952", "c"=57]
"qinggangwu/yolov7-pose_Npoint_Ncla" ["l"="33.681,29.009", "c"=57]
"wmcnally/kapao" ["l"="31.818,28.253", "c"=352]
"dronefreak/human-action-classification" ["l"="47.071,34.678", "c"=932]
"muratali016/Yolov7-License-Plate-Recognition-Program" ["l"="54.547,32.28"]
"muratali016/Yolov7-Cigarette-Censor-and-Smoker-s-Faces-Recorder" ["l"="54.564,32.293"]
"MuhammadMoinFaisal/yolov7-segmentation-with-DeepSORT-Tracking" ["l"="54.654,32.517"]
"deyiwang89/pytorch-yolov7-deepsort" ["l"="54.506,32.412"]
"yangyan92/Deep-ADMM-Net" ["l"="-35.335,23.092", "c"=630]
"nmchaves/admm-for-lp" ["l"="55.299,32.796"]
"JHUVisionLab/SSC-using-ADMM" ["l"="53.276,29.848", "c"=547]
"tarmiziAdam2005/Image-Signal-Processing" ["l"="55.281,32.808"]
"liu6tot/matrix-completion" ["l"="55.273,32.783"]
"indigits/sparse-plex" ["l"="-35.139,22.976", "c"=630]
"fish-kong/Yolov8-instance-seg-tensorrt" ["l"="53.506,32.653", "c"=251]
"damo-cv/UFDN-Reid" ["l"="53.944,32.637"]
"muratali016/AI-Instagram-filter-with-Computer-Vision" ["l"="54.582,32.237"]
"muratali016/Yolo-CV-Game" ["l"="54.575,32.261"]
"RizwanMunawar/Extraction-of-frames-from-single-video-computer-vision-" ["l"="54.626,32.362"]
"weihong9/CountingMOT" ["l"="54.283,32.463"]
"dataprofessor/streamlit-for-datascience" ["l"="54.432,33.152"]
"dataprofessor/streamlit-for-llm" ["l"="54.449,33.144"]
"DoganK01/YOLOV7-OBJECT-COUNTER-V1.2" ["l"="54.544,32.242"]
"Nathan-Li123/LaMOT" ["l"="54.302,32.377"]
"zyn213/TempRMOT" ["l"="54.313,32.414"]
"balabooooo/AED" ["l"="54.341,32.398"]
"WesLee88524/LG-MOT" ["l"="54.327,32.416"]
"lorenzovaquero/BUSCA" ["l"="54.327,32.39"]
"SysCV/tet" ["l"="54.296,32.316"]
"SysCV/ovtrack" ["l"="54.309,32.346"]
"manutdzou/KITTI_SSD" ["l"="54.996,32.945"]
"lucasjinreal/kitti-ssd" ["l"="55.026,32.957"]
"manutdzou/KITTI_FRC_detection" ["l"="54.966,32.933"]
"stepeos/pycarmodel_calibration" ["l"="55.458,32.851"]
"AIVIETNAMResearch/AI-City-2023-Track2" ["l"="53.96,32.392"]
"AIVIETNAMResearch/Video-Text-Retrieval" ["l"="53.977,32.4"]
"kadirnar/Pyorch-LeNet5" ["l"="54.317,32.719"]
"mtntruong/AGTC" ["l"="55.343,32.711"]
"mobarski/ask-my-pdf" ["l"="41.344,-3.502", "c"=146]
"dKosarevsky/AI-Talks" ["l"="54.362,33.267"]
"heiko-hotz/streamlit-chatgpt-ui" ["l"="54.385,33.249"]
"joeychrys/streamlit-chatGPT" ["l"="54.392,33.284"]
"dclin/gptlab-streamlit" ["l"="54.406,33.195"]
"dusty-nv/jetson-inference" ["l"="53.247,32.512", "c"=251]
"AjinkyaDeshpande39/ObjectDetection" ["l"="54.562,32.793"]
"AarohiSingla/Automatic-Number-Plate-Recognition--ANPR-" ["l"="54.584,32.788"]
"CVHub520/X-AnyLabeling" ["l"="48.763,30.008", "c"=191]
"lferry007/LargeVis" ["l"="44.938,26.231", "c"=68]
"bubbliiiing/yolov8-pytorch" ["l"="50.283,30.243", "c"=83]
"a16z-infra/llama2-chatbot" ["l"="40.96,-3.919", "c"=146]
"dataprofessor/llama2" ["l"="54.433,33.122"]
"streamlit/llm-examples" ["l"="41.382,-3.481", "c"=146]
"curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain" ["l"="41.219,-3.513", "c"=146]
"MuhammadMoinFaisal/LargeLanguageModelsProjects" ["l"="54.46,33.052"]
"alibaba/u2mot" ["l"="54.466,32.368"]
"Dovyski/cvui" ["l"="59.515,10.821", "c"=87]
"rampal-punia/yolov8-streamlit-detection-tracking" ["l"="53.722,3.718", "c"=1032]
"qwomeng/MotionTrack" ["l"="54.319,32.455"]
"zhaoweicai/mscnn" ["l"="51.695,33.466", "c"=354]
"hengck23/didi-udacity-2017" ["l"="54.959,32.981"]
"dataprofessor/hugchat" ["l"="42.181,-2.829", "c"=692]
"viplix3/BoTSORT-cpp" ["l"="54.479,32.388"]
"anminhhung/Pipeline_HCM_AI" ["l"="53.991,32.413"]
"AIVIETNAMResearch/VN_Multi_User_Video_Search" ["l"="54.014,32.414"]
"computervisioneng/deep_sort" ["l"="54.448,32.956"]
"videturfortuna/vehicle_reid_itsc2023" ["l"="53.99,32.637"]
"AIAnytime/ChatCSV-Llama2-Chatbot" ["l"="42.04,0.458", "c"=7]
"alejandro-ao/langchain-chat-gui" ["l"="41.208,-3.462", "c"=146]
"VK-Ant/Pdf_Website__Csv_Based_ChatBot_With_Translator_Using_Streamlit" ["l"="54.442,33.075"]
"BrandonJoffe/home_surveillance" ["l"="42.302,7.447", "c"=818]
"clarkzinzow/Nonlinear-Optimization-Algorithms" ["l"="55.382,32.565"]
"hiroyuki-kasai/SGDLibrary" ["l"="55.352,32.579"]
"databricks-academy/large-language-models" ["l"="-1.452,17.565", "c"=1046]
"MarvinTeichmann/MultiNet" ["l"="53.573,30.788", "c"=155]
"BichenWuUCB/squeezeDet" ["l"="50.388,33.095", "c"=314]
"Zengyi-Qin/MonoGRNet" ["l"="64.731,11.04", "c"=61]
"fregu856/2D_detection" ["l"="54.973,32.913"]
"xiaohaoChen/rrc_detection" ["l"="51.678,33.477", "c"=354]
"umautobots/vod-converter" ["l"="51.626,33.531", "c"=354]
"smallcorgi/3D-Deepbox" ["l"="64.744,11.008", "c"=61]
"Coo1Sea/OVT-B-Dataset" ["l"="54.319,32.358"]
"siyuanliii/SLAck" ["l"="54.277,32.323"]
"hustvl/Matte-Anything" ["l"="42.441,25.162", "c"=1283]
"chen-si-jia/Trajectory-Long-tail-Distribution-for-MOT" ["l"="54.384,32.387"]
"DLR-MI/UTrack" ["l"="54.375,32.378"]
"kamkyu94/AdapTrack" ["l"="54.405,32.387"]
"zlingkang/mobilenet_ssd_pedestrian_detection" ["l"="54.698,32.894"]
"lxc86739795/human_vehicle_parsing_platform" ["l"="56.119,32.827", "c"=355]
"BingfengYan/VISAM" ["l"="54.344,32.381"]
"nguyenquivinhquang/Multi-camera-People-Tracking-With-Mixture-of-Realistic-and-Synthetic-Knowledge" ["l"="54.241,32.496"]
"NVIDIAAICITYCHALLENGE/2024AICITY_Code_From_Top_Teams" ["l"="54.133,32.463"]
"yuntaeJ/SCIT-MCMT-Tracking" ["l"="54.251,32.505"]
"rflamary/nonconvex-optimization" ["l"="-5.165,23.265", "c"=960]
"keskarnitish/minSQN" ["l"="55.336,32.558"]
"nota-github/AIC2024_Track1_Nota" ["l"="54.185,32.478"]
"mjshiggins/ros-examples" ["l"="54.945,33.004"]
"sjc042/gta-link" ["l"="54.35,32.362"]
"prateekralhan/Streamlit-ChatGPT-DALLE-2" ["l"="54.391,33.306"]
"yangshiyu89/VIBE" ["l"="55.051,32.631"]
"AddyLocks/ViBE" ["l"="55.06,32.612"]
"bes-dev/VIBE" ["l"="55.036,32.643"]
"dyhBUPT/iKUN" ["l"="54.296,32.416"]
"JerryX1110/awesome-rvos" ["l"="48.961,31.848", "c"=300]
"gurkandemir/Bag-of-Visual-Words" ["l"="54.808,33.137"]
"chongweiliu/PuTR" ["l"="54.355,32.407"]
"nv-dvl/SPAM" ["l"="54.34,32.412"]
"malcolmamal/face-cropper" ["l"="54.707,33.196"]
"HKUST-DRIVE-AI-LAB/FollowNet" ["l"="55.491,32.86"]
"CU-DitecT/TRC21-PINN-CFM" ["l"="55.519,32.873"]
"MeixinZhu/TransFollower" ["l"="55.512,32.858"]
"iyangli/Car-following-Model-Calibration" ["l"="55.501,32.877"]
"amazon-science/object-centric-multiple-object-tracking" ["l"="54.246,32.441"]
"shawnh2/GNN-CCA" ["l"="54.262,32.468"]
"PetrK39/SD-EXIF-Editor" ["l"="54.715,33.214"]
"zef1611/AIC23_NLRetrieval_HCMIU_CVIP" ["l"="54.211,32.475"]
"VK-Ant/PDF_CSV_VISION_DRAGGING_BASED_CHATBOT_WITH_TRANSLATOR_AUDIO_USING_GEMINIAI" ["l"="54.426,33.088"]
"RomainLITUD/Car-Following-Dataset-HV-vs-AV" ["l"="55.542,32.883"]
"WongKinYiu/yolov9" ["l"="48.681,29.992", "c"=191]
"GuHuangAI/DiffusionEdge" ["l"="53.067,30.696", "c"=155]
"GuHuangAI/ADM-Public" ["l"="54.307,32.392"]
"Kroery/DiffMOT" ["l"="54.353,32.424"]
"RainBowLuoCS/DiffusionTrack" ["l"="60.479,17.67", "c"=363]
"hiroyuki-kasai/GDLibrary" ["l"="55.353,32.543"]
"hiroyuki-kasai/SparseGDLibrary" ["l"="55.372,32.547"]
"MasteringOpenCV/code" ["l"="59.341,10.93", "c"=87]
"microsoft/VoTT" ["l"="50.42,29.582", "c"=83]
"qinzheng2000/GeneralTrack" ["l"="54.389,32.344"]
"chen-si-jia/CRMOT" ["l"="54.358,32.34"]
"TRAILab/UncertaintyTrack" ["l"="54.378,32.354"]
"gitmehrdad/SFSORT" ["l"="54.412,32.375"]
"AIVIETNAMResearch/AI-City-2024-Track2" ["l"="54.053,32.428"]
"BachNgoH/AIO_Data_Analyst" ["l"="54.028,32.406"]
"alibaba/AICITY2024_Track2_AliOpenTrek_CityLLaVA" ["l"="54.035,32.428"]
"anminhhung/RAG_tool" ["l"="54.045,32.402"]
"woven-visionai/wts-dataset" ["l"="54.024,32.437"]
"SkalskiP/top-cvpr-2024-papers" ["l"="48.593,29.913", "c"=191]
"Hyonchori/ConfTrack_WACV2024" ["l"="54.397,32.364"]
"ZJULearning/MatlabFunc" ["l"="-5.281,23.271", "c"=960]
"George-Zhuang/NetTrack" ["l"="54.289,32.363"]
"pageauc/speed-camera" ["l"="42.545,7.939", "c"=818]
"mguti97/No-Bells-Just-Whistles" ["l"="49.109,25.904", "c"=584]
"dmulholl/ivy" ["l"="45.419,20.14", "c"=20]
"siyuanliii/masa" ["l"="48.739,30.027", "c"=191]
"georgesung/ssd_tensorflow_traffic_sign_detection" ["l"="50.229,33.063", "c"=314]
"fanxinglanyu/Pedestrain_Detection" ["l"="54.71,32.951"]
"TrackingLaboratory/tracklab" ["l"="49.099,25.89", "c"=584]
"martinResearch/PySparseLP" ["l"="55.318,32.821"]
"AIVIETNAMResearch/AIO_Documents" ["l"="54.011,32.393"]
"BachNgoH/AIO_Research_Agent" ["l"="54.025,32.386"]
"chenjoya/Caffe_MultiLabel_Classification" ["l"="54.623,32.942"]
"diyjac/SDC-P5" ["l"="61.409,12.616", "c"=774]
"riips/AIC24_Track1_YACHIYO_RIIPS" ["l"="54.157,32.472"]
"gtarobotics/self-driving-car" ["l"="61.473,12.536", "c"=774]
"udacity/didi-competition" ["l"="54.938,32.981"]
"ZhenyuX1E/PoseTrack" ["l"="54.167,32.462"]
"HolidayXue/CodeSnap" ["l"="54.622,32.975"]
"HELLORPG/HATReID-MOT" ["l"="54.394,32.322"]
"quangminhdinh/TrafficVLM" ["l"="54.001,32.442"]
"OpenSpaceAI/UVLTrack" ["l"="54.393,33.817", "c"=298]
"JunshengFu/driving-lane-departure-warning" ["l"="64.415,10.255", "c"=1092]
"subodh-malgonde/vehicle-detection" ["l"="54.813,32.874"]
"experiencor/keras-yolo2" ["l"="50.411,33.025", "c"=314]
"JamesLuoau/Self-Driving-Car-Vehicle-Detection" ["l"="54.9,32.876"]
"yhenon/keras-frcnn" ["l"="50.494,33.143", "c"=314]
"udacity/CarND-Term1-Starter-Kit" ["l"="61.563,12.618", "c"=774]
"yhcc/yolo2" ["l"="50.499,32.918", "c"=314]
"IanLondon/general_img_classifier" ["l"="54.078,32.995"]
"halloTheCoder/car-damage-evaluation-using-deep-learning" ["l"="54.09,32.945"]
"windowsub0406/Advanced-lane-finding" ["l"="54.799,32.921"]
"kimjingu/nonnegfac-matlab" ["l"="55.333,32.604"]
"felipeyanez/nmf" ["l"="55.351,32.644"]
"dakuang/symnmf" ["l"="55.315,32.608"]
"liangnaiyao/multiview_learning" ["l"="52.846,29.882", "c"=547]
"smartyfh/DANMF" ["l"="55.307,32.621"]
"d-kitamura/multichannelNMF" ["l"="36.665,4.621", "c"=128]
"983632847/Awesome-Multimodal-Object-Tracking" ["l"="54.451,33.829", "c"=298]
"biranchi2018/People-Counter-1" ["l"="54.884,32.528"]
"jokla/didi_challenge_ros" ["l"="54.962,32.996"]
"omgteam/Didi-competition-solution" ["l"="54.961,33.007"]
"liuxiAaoyu/didi-udacity_self-driving_car_challenge" ["l"="54.979,32.994"]
"alexstaravoitau/KITTI-Dataset" ["l"="64.468,10.914", "c"=61]
"yformer/EfficientTAM" ["l"="48.752,29.94", "c"=191]
"balancap/SDC-Advanced-Lane-Finding" ["l"="61.374,12.65", "c"=774]
"penny4860/Vehicle-Detection" ["l"="54.894,32.901"]
"tarmiziAdam2005/ADMM-Total-Variation" ["l"="55.294,32.831"]
"tarmiziAdam2005/HNHOTV_OGS" ["l"="55.275,32.832"]
"yukitsuji/3D_CNN_tensorflow" ["l"="64.497,10.909", "c"=61]
"udacity/CarND-Mercedes-SF-Utilities" ["l"="61.577,12.648", "c"=774]
"mradovic38/football_analysis" ["l"="49.116,25.88", "c"=584]
"bjoern-andres/graph" ["l"="41.958,26.823", "c"=712]
"mattiasegu/sambamotr" ["l"="54.313,32.269"]
"mattiasegu/darth" ["l"="54.302,32.245"]
"jinyanglii/OVTR" ["l"="54.331,32.315"]
"Jumabek/darknet_scripts" ["l"="51.738,33.325", "c"=354]
"anminhhung/Agents_CrewAI_Notebook" ["l"="54.046,32.386"]
"HengLan/SMOT" ["l"="54.266,32.353"]
"Fsoft-AIC/Z-GMOT" ["l"="54.292,32.398"]
"power-grid-lib/pglib-opf" ["l"="-11.145,17.509", "c"=440]
"sunsmarterjie/yolov12" ["l"="48.65,30.037", "c"=191]
"google/ggrc-core" ["l"="9.115,-9.355", "c"=14]
"CV-AI-WORLD/opencv_vibe" ["l"="55.044,32.663"]
"ktzsh/object-tracking" ["l"="54.53,32.767"]
"cioppaanthony/rt-sbs" ["l"="55.076,32.756"]
"torrvision/siamfc-tf" ["l"="54.73,33.699", "c"=298]
"fregu856/segmentation" ["l"="53.522,30.794", "c"=155]
"maxritter/SDC-Vehicle-Lane-Detection" ["l"="54.878,32.913"]
"ramitix/Car_lane_sign_detection" ["l"="64.283,10.171", "c"=1092]
"antorsae/tea" ["l"="54.999,33.011"]
"JackWoo0831/Mamba_Trackers" ["l"="54.391,32.296"]
}