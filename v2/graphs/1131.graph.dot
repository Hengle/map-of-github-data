digraph G {
"onnx/keras-onnx" -> "onnx/onnxmltools"
"onnx/keras-onnx" -> "onnx/tensorflow-onnx" ["e"=1]
"onnx/keras-onnx" -> "ZFTurbo/Keras-inference-time-optimizer"
"onnx/keras-onnx" -> "onnx/onnx-docker"
"onnx/onnxmltools" -> "onnx/sklearn-onnx" ["e"=1]
"onnx/onnxmltools" -> "onnx/keras-onnx"
"onnx/onnxmltools" -> "onnx/tensorflow-onnx" ["e"=1]
"onnx/onnxmltools" -> "microsoft/onnxruntime-extensions"
"onnx/onnxmltools" -> "microsoft/onnxconverter-common"
"onnx/onnxmltools" -> "onnx/tutorials" ["e"=1]
"onnx/onnxmltools" -> "onnx/onnx-tensorflow" ["e"=1]
"onnx/onnxmltools" -> "onnx/optimizer"
"onnx/onnxmltools" -> "onnx/onnx-coreml" ["e"=1]
"onnx/onnxmltools" -> "microsoft/Olive"
"onnx/onnxmltools" -> "daquexian/onnx-simplifier" ["e"=1]
"onnx/onnxmltools" -> "microsoft/onnxruntime-inference-examples"
"onnx/onnxmltools" -> "microsoft/onnxruntime-training-examples"
"onnx/onnxmltools" -> "microsoft/onnxscript"
"onnx/onnxmltools" -> "dmlc/treelite" ["e"=1]
"microsoft/onnxconverter-common" -> "ThanatosShinji/onnx-tool"
"microsoft/onnxconverter-common" -> "microsoft/onnxscript"
"microsoft/onnxconverter-common" -> "microsoft/onnxruntime-extensions"
"ZFTurbo/Keras-inference-time-optimizer" -> "ZFTurbo/Keras-augmentation-layer"
"Senparc/DPB" -> "OpenSenparc/Senparc.Weixin.Plugins.WeixinTraceManager"
"OkGoDoIt/OpenAI-API-dotnet" -> "betalgo/openai"
"OkGoDoIt/OpenAI-API-dotnet" -> "RageAgainstThePixel/OpenAI-DotNet"
"OkGoDoIt/OpenAI-API-dotnet" -> "openai/openai-dotnet"
"OkGoDoIt/OpenAI-API-dotnet" -> "wieslawsoltes/ChatGPT" ["e"=1]
"OkGoDoIt/OpenAI-API-dotnet" -> "PawanOsman/ChatGPT.Net"
"OkGoDoIt/OpenAI-API-dotnet" -> "srcnalt/OpenAI-Unity" ["e"=1]
"OkGoDoIt/OpenAI-API-dotnet" -> "SciSharp/LLamaSharp"
"OkGoDoIt/OpenAI-API-dotnet" -> "hexthedev/OpenAi-Api-Unity" ["e"=1]
"OkGoDoIt/OpenAI-API-dotnet" -> "SciSharp/BotSharp" ["e"=1]
"OkGoDoIt/OpenAI-API-dotnet" -> "marcominerva/ChatGptNet"
"OkGoDoIt/OpenAI-API-dotnet" -> "modelcontextprotocol/csharp-sdk"
"OkGoDoIt/OpenAI-API-dotnet" -> "microsoft/kernel-memory"
"OkGoDoIt/OpenAI-API-dotnet" -> "stefanprodan/AspNetCoreRateLimit" ["e"=1]
"OkGoDoIt/OpenAI-API-dotnet" -> "MapsterMapper/Mapster" ["e"=1]
"OkGoDoIt/OpenAI-API-dotnet" -> "RageAgainstThePixel/com.openai.unity" ["e"=1]
"PrefectHQ/server" -> "PrefectHQ/legacy-ui"
"PrefectHQ/server" -> "PrefectHQ/prefect-kubernetes"
"PrefectHQ/server" -> "PrefectHQ/prefect-collection-template"
"PrefectHQ/server" -> "PrefectHQ/prefect-dask"
"PrefectHQ/server" -> "PrefectHQ/prefect-databricks"
"microsoft/Olive" -> "microsoft/onnxruntime-genai"
"microsoft/Olive" -> "huggingface/optimum" ["e"=1]
"microsoft/Olive" -> "microsoft/onnxruntime-inference-examples"
"microsoft/Olive" -> "microsoft/DirectML" ["e"=1]
"microsoft/Olive" -> "microsoft/onnxscript"
"microsoft/Olive" -> "onnx/optimizer"
"microsoft/Olive" -> "microsoft/onnxruntime" ["e"=1]
"microsoft/Olive" -> "intel/neural-compressor" ["e"=1]
"microsoft/Olive" -> "daquexian/onnx-simplifier" ["e"=1]
"microsoft/Olive" -> "microsoft/onnxruntime-extensions"
"microsoft/Olive" -> "onnx/onnxmltools"
"microsoft/Olive" -> "microsoft/onnxruntime-training-examples"
"microsoft/Olive" -> "intel/intel-extension-for-pytorch" ["e"=1]
"microsoft/Olive" -> "microsoft/onnxconverter-common"
"microsoft/Olive" -> "microsoft/PhiCookBook"
"Talmaj/onnx2pytorch" -> "fumihwh/onnx-pytorch"
"Talmaj/onnx2pytorch" -> "BBuf/onnx2X"
"Talmaj/onnx2pytorch" -> "ENOT-AutoDL/onnx2torch"
"onnx/optimizer" -> "daquexian/onnx-simplifier" ["e"=1]
"onnx/optimizer" -> "onnx/onnx-mlir" ["e"=1]
"onnx/optimizer" -> "Tencent/TPAT" ["e"=1]
"onnx/optimizer" -> "microsoft/onnxscript"
"onnx/optimizer" -> "ZhangGe6/onnx-modifier"
"onnx/optimizer" -> "microsoft/onnxconverter-common"
"onnx/optimizer" -> "OpenPPL/ppl.nn" ["e"=1]
"onnx/optimizer" -> "pnnx/pnnx" ["e"=1]
"onnx/optimizer" -> "alibaba/BladeDISC" ["e"=1]
"onnx/optimizer" -> "microsoft/nnfusion" ["e"=1]
"onnx/optimizer" -> "OpenPPL/ppq" ["e"=1]
"onnx/optimizer" -> "NVIDIA/TensorRT-Model-Optimizer" ["e"=1]
"onnx/optimizer" -> "grimoire/torch2trt_dynamic" ["e"=1]
"onnx/optimizer" -> "microsoft/onnxruntime-extensions"
"onnx/optimizer" -> "ThanatosShinji/onnx-tool"
"NeuCharFramework/NcfPackageSources" -> "NeuCharFramework/NCF" ["e"=1]
"NeuCharFramework/NcfPackageSources" -> "NeuCharFramework/Senparc.Xncf.WeixinManager"
"NeuCharFramework/NcfPackageSources" -> "SenparcCoreFramework/ScfPackageSources"
"PrefectHQ/legacy-ui" -> "PrefectHQ/server"
"PrefectHQ/legacy-ui" -> "PrefectHQ/prefect-collection-template"
"PrefectHQ/legacy-ui" -> "PrefectHQ/prefect-email"
"marcominerva/TinyHelpers" -> "marcominerva/MinimalHelpers"
"marcominerva/TinyHelpers" -> "marcominerva/SimpleAuthentication"
"marcominerva/TinyHelpers" -> "marcominerva/ChatGptNet"
"microsoft/onnxruntime-training-examples" -> "pytorch/ort"
"microsoft/onnxruntime-training-examples" -> "machine-learning-apps/ml-template-azure" ["e"=1]
"fugue-project/tutorials" -> "fugue-project/tune"
"fugue-project/tutorials" -> "fugue-project/prefect-fugue"
"fugue-project/tutorials" -> "fugue-project/triad"
"flavienbwk/prefect-docker-compose" -> "rpeden/prefect-docker-compose"
"flavienbwk/prefect-docker-compose" -> "anna-geller/dataflow-ops"
"flavienbwk/prefect-docker-compose" -> "fraibacas/prefect-orion"
"flavienbwk/prefect-docker-compose" -> "anna-geller/packaging-prefect-flows"
"flavienbwk/prefect-docker-compose" -> "PrefectHQ/prefect-recipes"
"flavienbwk/prefect-docker-compose" -> "PrefectHQ/server"
"flavienbwk/prefect-docker-compose" -> "PrefectHQ/prefect-helm"
"RageAgainstThePixel/OpenAI-DotNet" -> "OkGoDoIt/OpenAI-API-dotnet"
"RageAgainstThePixel/OpenAI-DotNet" -> "betalgo/openai"
"RageAgainstThePixel/OpenAI-DotNet" -> "openai/openai-dotnet"
"RageAgainstThePixel/OpenAI-DotNet" -> "RageAgainstThePixel/com.openai.unity" ["e"=1]
"RageAgainstThePixel/OpenAI-DotNet" -> "aiqinxuancai/TiktokenSharp" ["e"=1]
"RageAgainstThePixel/OpenAI-DotNet" -> "tryAGI/LangChain"
"RageAgainstThePixel/OpenAI-DotNet" -> "PawanOsman/ChatGPT.Net"
"RageAgainstThePixel/OpenAI-DotNet" -> "Cledev-Limited/Cledev.OpenAI"
"RageAgainstThePixel/OpenAI-DotNet" -> "wieslawsoltes/ChatGPT" ["e"=1]
"RageAgainstThePixel/OpenAI-DotNet" -> "jodendaal/OpenAI.Net"
"RageAgainstThePixel/OpenAI-DotNet" -> "SciSharp/LLamaSharp"
"RageAgainstThePixel/OpenAI-DotNet" -> "dmitry-brazhenko/SharpToken" ["e"=1]
"RageAgainstThePixel/OpenAI-DotNet" -> "awaescher/OllamaSharp"
"RageAgainstThePixel/OpenAI-DotNet" -> "geffzhang/awesome-semantickernel"
"RageAgainstThePixel/OpenAI-DotNet" -> "marcominerva/ChatGptNet"
"microsoft/onnxruntime-inference-examples" -> "microsoft/onnxruntime-extensions"
"microsoft/onnxruntime-inference-examples" -> "microsoft/onnxruntime" ["e"=1]
"microsoft/onnxruntime-inference-examples" -> "daquexian/onnx-simplifier" ["e"=1]
"microsoft/onnxruntime-inference-examples" -> "microsoft/Olive"
"microsoft/onnxruntime-inference-examples" -> "microsoft/onnxruntime-genai"
"microsoft/onnxruntime-inference-examples" -> "itsnine/yolov5-onnxruntime" ["e"=1]
"microsoft/onnxruntime-inference-examples" -> "microsoft/onnxruntime-training-examples"
"microsoft/onnxruntime-inference-examples" -> "ZhangGe6/onnx-modifier"
"microsoft/onnxruntime-inference-examples" -> "leimao/ONNX-Runtime-Inference" ["e"=1]
"microsoft/onnxruntime-inference-examples" -> "xlite-dev/lite.ai.toolkit" ["e"=1]
"microsoft/onnxruntime-inference-examples" -> "onnx/models" ["e"=1]
"microsoft/onnxruntime-inference-examples" -> "onnx/onnx-tensorrt" ["e"=1]
"microsoft/onnxruntime-inference-examples" -> "open-mmlab/mmdeploy" ["e"=1]
"microsoft/onnxruntime-inference-examples" -> "OpenPPL/ppq" ["e"=1]
"microsoft/onnxruntime-inference-examples" -> "huggingface/optimum" ["e"=1]
"mosecorg/mosec" -> "NaomiProject/Naomi"
"mosecorg/mosec" -> "StarmoonAI/Starmoon"
"mosecorg/mosec" -> "kitops-ml/kitops"
"mosecorg/mosec" -> "tensorlakeai/indexify"
"mosecorg/mosec" -> "awaescher/OllamaSharp"
"mosecorg/mosec" -> "dstackai/dstack"
"mosecorg/mosec" -> "PrefectHQ/ControlFlow"
"mosecorg/mosec" -> "JuliaDynamics/Agents.jl" ["e"=1]
"mosecorg/mosec" -> "yokingma/search_with_ai"
"mosecorg/mosec" -> "tensorchord/envd" ["e"=1]
"mosecorg/mosec" -> "michaelfeil/infinity" ["e"=1]
"mosecorg/mosec" -> "devflowinc/trieve"
"mosecorg/mosec" -> "KruxAI/ragbuilder" ["e"=1]
"mosecorg/mosec" -> "David-Kunz/gen.nvim" ["e"=1]
"mosecorg/mosec" -> "speaches-ai/speaches" ["e"=1]
"BBuf/onnx2X" -> "Talmaj/onnx2pytorch"
"microsoft/onnxruntime-extensions" -> "microsoft/onnxscript"
"microsoft/onnxruntime-extensions" -> "microsoft/onnxruntime-genai"
"microsoft/onnxruntime-extensions" -> "microsoft/onnxruntime-inference-examples"
"microsoft/onnxruntime-extensions" -> "microsoft/onnxconverter-common"
"microsoft/onnxruntime-extensions" -> "onnx/onnxmltools"
"microsoft/onnxruntime-extensions" -> "microsoft/onnxruntime-training-examples"
"microsoft/onnxruntime-extensions" -> "triton-inference-server/onnxruntime_backend" ["e"=1]
"microsoft/onnxruntime-extensions" -> "onnx/optimizer"
"fumihwh/onnx-pytorch" -> "Talmaj/onnx2pytorch"
"bcakmakoglu/revue-draggable" -> "carlosjorger/fluid-dnd"
"pytorch/ort" -> "microsoft/onnxruntime-training-examples"
"dstackai/dstack" -> "StarmoonAI/Starmoon"
"dstackai/dstack" -> "zenml-io/zenml" ["e"=1]
"dstackai/dstack" -> "mosecorg/mosec"
"dstackai/dstack" -> "michaelfeil/infinity" ["e"=1]
"dstackai/dstack" -> "tensorlakeai/indexify"
"dstackai/dstack" -> "KruxAI/ragbuilder" ["e"=1]
"dstackai/dstack" -> "NaomiProject/Naomi"
"dstackai/dstack" -> "PrefectHQ/ControlFlow"
"dstackai/dstack" -> "kitops-ml/kitops"
"dstackai/dstack" -> "evidentlyai/evidently" ["e"=1]
"dstackai/dstack" -> "deepchecks/deepchecks" ["e"=1]
"dstackai/dstack" -> "topoteretes/cognee" ["e"=1]
"dstackai/dstack" -> "fugue-project/fugue" ["e"=1]
"dstackai/dstack" -> "skypilot-org/skypilot" ["e"=1]
"dstackai/dstack" -> "devflowinc/trieve"
"PrefectHQ/prefect-recipes" -> "anna-geller/dataflow-ops"
"PrefectHQ/prefect-recipes" -> "PrefectHQ/prefect-aws"
"PrefectHQ/prefect-recipes" -> "PrefectHQ/prefect-collection-template"
"PrefectHQ/prefect-recipes" -> "Pocket/data-flows"
"PrefectHQ/prefect-recipes" -> "PrefectHQ/prefect-kubernetes"
"PrefectHQ/prefect-recipes" -> "anna-geller/prefect-deployment-patterns"
"PrefectHQ/prefect-recipes" -> "anna-geller/prefect-dataplatform"
"PrefectHQ/prefect-recipes" -> "PrefectHQ/prefect-helm"
"PrefectHQ/prefect-recipes" -> "fugue-project/prefect-fugue"
"PrefectHQ/prefect-recipes" -> "PrefectHQ/prefect-dbt"
"PrefectHQ/prefect-recipes" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-recipes" -> "anna-geller/prefect-docker-deployment"
"PrefectHQ/prefect-recipes" -> "radbrt/prefect_flows"
"PrefectHQ/prefect-recipes" -> "PrefectHQ/prefect-docker"
"PrefectHQ/prefect-recipes" -> "rpeden/prefect-docker-compose"
"ZhangGe6/onnx-modifier" -> "OpenPPL/ppq" ["e"=1]
"ZhangGe6/onnx-modifier" -> "daquexian/onnx-simplifier" ["e"=1]
"ZhangGe6/onnx-modifier" -> "ThanatosShinji/onnx-tool"
"ZhangGe6/onnx-modifier" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"ZhangGe6/onnx-modifier" -> "ModelTC/MQBench" ["e"=1]
"ZhangGe6/onnx-modifier" -> "open-mmlab/mmdeploy" ["e"=1]
"ZhangGe6/onnx-modifier" -> "nndeploy/nndeploy" ["e"=1]
"ZhangGe6/onnx-modifier" -> "shouxieai/tensorRT_Pro" ["e"=1]
"ZhangGe6/onnx-modifier" -> "OpenPPL/ppl.nn" ["e"=1]
"ZhangGe6/onnx-modifier" -> "zerollzeng/tiny-tensorrt" ["e"=1]
"ZhangGe6/onnx-modifier" -> "ENOT-AutoDL/onnx2torch"
"ZhangGe6/onnx-modifier" -> "onnx/onnx-tensorrt" ["e"=1]
"ZhangGe6/onnx-modifier" -> "quic/aimet" ["e"=1]
"ZhangGe6/onnx-modifier" -> "pnnx/pnnx" ["e"=1]
"ZhangGe6/onnx-modifier" -> "VainF/Torch-Pruning" ["e"=1]
"ENOT-AutoDL/onnx2torch" -> "Talmaj/onnx2pytorch"
"ENOT-AutoDL/onnx2torch" -> "ZhangGe6/onnx-modifier"
"ENOT-AutoDL/onnx2torch" -> "ThanatosShinji/onnx-tool"
"ENOT-AutoDL/onnx2torch" -> "ModelTC/MQBench" ["e"=1]
"ENOT-AutoDL/onnx2torch" -> "fumihwh/onnx-pytorch"
"ENOT-AutoDL/onnx2torch" -> "OML-Team/open-metric-learning" ["e"=1]
"ENOT-AutoDL/onnx2torch" -> "daquexian/onnx-simplifier" ["e"=1]
"ENOT-AutoDL/onnx2torch" -> "pnnx/pnnx" ["e"=1]
"ENOT-AutoDL/onnx2torch" -> "OpenPPL/ppq" ["e"=1]
"ENOT-AutoDL/onnx2torch" -> "microsoft/nn-Meter" ["e"=1]
"ENOT-AutoDL/onnx2torch" -> "senysenyseny16/prokki"
"ENOT-AutoDL/onnx2torch" -> "BBuf/onnx2X"
"ENOT-AutoDL/onnx2torch" -> "zchrissirhcz/cmake_examples" ["e"=1]
"ENOT-AutoDL/onnx2torch" -> "onnx/optimizer"
"ENOT-AutoDL/onnx2torch" -> "FeiGeChuanShu/segment-anything-ncnn" ["e"=1]
"betalgo/openai" -> "OkGoDoIt/OpenAI-API-dotnet"
"betalgo/openai" -> "RageAgainstThePixel/OpenAI-DotNet"
"betalgo/openai" -> "openai/openai-dotnet"
"betalgo/openai" -> "SciSharp/LLamaSharp"
"betalgo/openai" -> "wieslawsoltes/ChatGPT" ["e"=1]
"betalgo/openai" -> "elsa-workflows/elsa-core" ["e"=1]
"betalgo/openai" -> "SciSharp/BotSharp" ["e"=1]
"betalgo/openai" -> "fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat" ["e"=1]
"betalgo/openai" -> "radzenhq/radzen-blazor" ["e"=1]
"betalgo/openai" -> "dotnetcore/DotnetSpider" ["e"=1]
"betalgo/openai" -> "essensoft/paylinks" ["e"=1]
"betalgo/openai" -> "ldqk/Masuit.Tools" ["e"=1]
"betalgo/openai" -> "spectreconsole/spectre.console" ["e"=1]
"betalgo/openai" -> "abpframework/abp" ["e"=1]
"betalgo/openai" -> "microsoft/fluentui-blazor" ["e"=1]
"PrefectHQ/prefect-shell" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-shell" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-shell" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-shell" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-shell" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-shell" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-shell" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-shell" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-shell" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-shell" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-shell" -> "PrefectHQ/prefect-azure"
"microsoft/onnxscript" -> "microsoft/onnxruntime-extensions"
"microsoft/onnxscript" -> "onnx/optimizer"
"microsoft/onnxscript" -> "microsoft/onnxruntime-genai"
"microsoft/onnxscript" -> "microsoft/onnxconverter-common"
"marcominerva/SimpleAuthentication" -> "marcominerva/MinimalHelpers"
"marcominerva/SimpleAuthentication" -> "andreadottor/Umarell"
"marcominerva/SimpleAuthentication" -> "marcominerva/OperationResults"
"marcominerva/SimpleAuthentication" -> "marcominerva/ChatGptNet"
"marcominerva/SimpleAuthentication" -> "marcominerva/TinyHelpers"
"marcominerva/SimpleAuthentication" -> "ose-net/yesql.net" ["e"=1]
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-ray" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-azure"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-github"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-kubernetes"
"PrefectHQ/prefect-ray" -> "PrefectHQ/prefect-dask"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-azure"
"PrefectHQ/prefect-dask" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-github"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-ray"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/prefect-dask" -> "PrefectHQ/prefect-shell"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-collection-template"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-shell"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-azure"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-kubernetes"
"PrefectHQ/prefect-aws" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-aws" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-azure"
"PrefectHQ/prefect-collection-template" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-kubernetes"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-shell"
"PrefectHQ/prefect-collection-template" -> "PrefectHQ/prefect-github"
"PrefectHQ/prefect-azure" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-azure" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-azure" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-azure" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-azure" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-azure" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-azure" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-azure" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-azure" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-slack" -> "PrefectHQ/prefect-sqlalchemy"
"PrefectHQ/prefect-slack" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-slack" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-slack" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-email" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-email" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-email" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-email" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-email" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-email" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-email" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-email" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-email" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-gcp" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-azure"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-kubernetes"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-github"
"PrefectHQ/prefect-gcp" -> "PrefectHQ/prefect-shell"
"PrefectHQ/prefect-airbyte" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-airbyte" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-airbyte" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-airbyte" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-airbyte" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-airbyte" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-airbyte" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-airbyte" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-airbyte" -> "PrefectHQ/prefect-azure"
"PrefectHQ/prefect-airbyte" -> "PrefectHQ/prefect-shell"
"PrefectHQ/prefect-airbyte" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-great-expectations" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-great-expectations" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-great-expectations" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-great-expectations" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-great-expectations" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-github" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-github" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-github" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-github" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-github" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-github" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-snowflake" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-snowflake" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-snowflake" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-snowflake" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-snowflake" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-snowflake" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-snowflake" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-postgres" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-postgres" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-sqlalchemy" -> "PrefectHQ/prefect-slack"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-kubernetes" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-github"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-azure"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-collection-template"
"PrefectHQ/prefect-kubernetes" -> "PrefectHQ/prefect-shell"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-shell"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-azure"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-collection-template"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-kubernetes"
"PrefectHQ/prefect-dbt" -> "PrefectHQ/prefect-github"
"PrefectHQ/prefect-openmetadata" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-openmetadata" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-openmetadata" -> "PrefectHQ/prefect-great-expectations"
"Pocket/data-flows" -> "PrefectHQ/prefect-collection-template"
"blazordevita/BlazorDevIta.ERP" -> "andreadottor/Umarell"
"andreadottor/Umarell" -> "blazordevita/BlazorDevIta.ERP"
"marcominerva/MinimalHelpers" -> "marcominerva/OperationResults"
"marcominerva/MinimalHelpers" -> "marcominerva/SimpleAuthentication"
"marcominerva/MinimalHelpers" -> "marcominerva/TinyHelpers"
"marcominerva/MinimalHelpers" -> "andreadottor/Umarell"
"sandrohanea/whisper.net" -> "SciSharp/LLamaSharp"
"sandrohanea/whisper.net" -> "sandrohanea/echosharp"
"sandrohanea/whisper.net" -> "sdcb/OpenVINO.NET" ["e"=1]
"sandrohanea/whisper.net" -> "dotnet/TorchSharp" ["e"=1]
"sandrohanea/whisper.net" -> "tryAGI/LangChain"
"sandrohanea/whisper.net" -> "Ruslan-B/FFmpeg.AutoGen" ["e"=1]
"sandrohanea/whisper.net" -> "takuya-takeuchi/FaceRecognitionDotNet" ["e"=1]
"sandrohanea/whisper.net" -> "microsoft/ai-dev-gallery"
"sandrohanea/whisper.net" -> "rosenbjerg/FFMpegCore" ["e"=1]
"sandrohanea/whisper.net" -> "awaescher/OllamaSharp"
"sandrohanea/whisper.net" -> "chinware/AtomUI" ["e"=1]
"sandrohanea/whisper.net" -> "sdcb/PaddleSharp" ["e"=1]
"sandrohanea/whisper.net" -> "feiyun0112/Gradio.Net" ["e"=1]
"sandrohanea/whisper.net" -> "raoyutian/PaddleOCRSharp" ["e"=1]
"sandrohanea/whisper.net" -> "bezzad/Downloader" ["e"=1]
"rpeden/prefect-docker-compose" -> "flavienbwk/prefect-docker-compose"
"rpeden/prefect-docker-compose" -> "fraibacas/prefect-orion"
"rpeden/prefect-docker-compose" -> "PrefectHQ/prefect-recipes"
"rpeden/prefect-docker-compose" -> "anna-geller/prefect-deployment-patterns"
"rpeden/prefect-docker-compose" -> "anna-geller/prefect-dataplatform"
"rpeden/prefect-docker-compose" -> "anna-geller/prefect-docker-deployment"
"rpeden/prefect-docker-compose" -> "PrefectHQ/prefect-helm"
"PawanOsman/ChatGPT.Net" -> "PawanOsman/ChatGPT-Official" ["e"=1]
"PawanOsman/ChatGPT.Net" -> "marcominerva/ChatGptNet"
"PawanOsman/ChatGPT.Net" -> "OkGoDoIt/OpenAI-API-dotnet"
"PawanOsman/ChatGPT.Net" -> "PawanOsman/chatgpt-io" ["e"=1]
"PawanOsman/ChatGPT.Net" -> "BruceQiu1996/NChatGPTRev"
"PawanOsman/ChatGPT.Net" -> "wieslawsoltes/ChatGPT" ["e"=1]
"ThanatosShinji/onnx-tool" -> "ZhangGe6/onnx-modifier"
"ThanatosShinji/onnx-tool" -> "microsoft/onnxconverter-common"
"ThanatosShinji/onnx-tool" -> "PINTO0309/simple-onnx-processing-tools" ["e"=1]
"ThanatosShinji/onnx-tool" -> "MegEngine/MegCC" ["e"=1]
"ThanatosShinji/onnx-tool" -> "tsingmicro-toolchain/OnnxSlim" ["e"=1]
"ThanatosShinji/onnx-tool" -> "ENOT-AutoDL/onnx2torch"
"ThanatosShinji/onnx-tool" -> "scailable/sclblonnx"
"ThanatosShinji/onnx-tool" -> "OpenPPL/ppq" ["e"=1]
"ThanatosShinji/onnx-tool" -> "onnx/onnx-mlir" ["e"=1]
"ThanatosShinji/onnx-tool" -> "gmalivenko/onnx-opcounter"
"ThanatosShinji/onnx-tool" -> "saurabh-shandilya/onnx-utils"
"ThanatosShinji/onnx-tool" -> "DerryHub/BEVFormer_tensorrt" ["e"=1]
"ThanatosShinji/onnx-tool" -> "microsoft/onnxscript"
"ThanatosShinji/onnx-tool" -> "NVIDIA/Deep-Learning-Accelerator-SW" ["e"=1]
"ThanatosShinji/onnx-tool" -> "onnx/optimizer"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-airbyte"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-twitter"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-email"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-twilio"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/prefect-databricks" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-azure"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-github"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-shell"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-kubernetes"
"PrefectHQ/prefect-databricks" -> "PrefectHQ/prefect-collection-template"
"Cledev-Limited/Cledev.OpenAI" -> "Cledev-Limited/Cledev.OpenAI.Studio"
"fugue-project/prefect-fugue" -> "PrefectHQ/prefect-twitter"
"fugue-project/prefect-fugue" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/prefect-helm" -> "PrefectHQ/prefect-kubernetes"
"PrefectHQ/prefect-helm" -> "anna-geller/prefect-deployment-patterns"
"PrefectHQ/prefect-helm" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/prefect-helm" -> "PrefectHQ/prefect-dask"
"PrefectHQ/prefect-helm" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/prefect-helm" -> "PrefectHQ/prefect-dbt"
"anna-geller/prefect-dataplatform" -> "anna-geller/dataflow-ops"
"anna-geller/prefect-dataplatform" -> "anna-geller/prefect-docker-deployment"
"anna-geller/prefect-dataplatform" -> "anna-geller/prefect-aws-lambda"
"anna-geller/prefect-dataplatform" -> "anna-geller/prefect-deployment-patterns"
"anna-geller/prefect-dataplatform" -> "PrefectHQ/prefect-recipes"
"anna-geller/dataflow-ops" -> "PrefectHQ/prefect-recipes"
"anna-geller/dataflow-ops" -> "anna-geller/prefect-docker-deployment"
"anna-geller/dataflow-ops" -> "PrefectHQ/prefect-aws"
"anna-geller/dataflow-ops" -> "anna-geller/prefect-streaming"
"anna-geller/dataflow-ops" -> "anna-geller/prefect-deployment-patterns"
"anna-geller/dataflow-ops" -> "anna-geller/prefect-aws-lambda"
"anna-geller/dataflow-ops" -> "fugue-project/prefect-fugue"
"anna-geller/dataflow-ops" -> "anna-geller/prefect-dataplatform"
"anna-geller/dataflow-ops" -> "PrefectHQ/prefect-collection-template"
"marcominerva/TinyCMS" -> "marcominerva/SearchGPT"
"anna-geller/prefect-deployment-patterns" -> "anna-geller/dataflow-ops"
"anna-geller/prefect-deployment-patterns" -> "anna-geller/prefect-streaming"
"anna-geller/prefect-deployment-patterns" -> "PrefectHQ/prefect-helm"
"anna-geller/prefect-deployment-patterns" -> "PrefectHQ/prefect-kubernetes"
"anna-geller/prefect-deployment-patterns" -> "anna-geller/prefect-docker-deployment"
"anna-geller/prefect-deployment-patterns" -> "PrefectHQ/prefect-recipes"
"anna-geller/prefect-deployment-patterns" -> "anna-geller/prefect-dataplatform"
"PrefectHQ/prefect-docker" -> "PrefectHQ/prefect-sqlalchemy"
"marcominerva/OperationResults" -> "marcominerva/SearchGPT"
"SciSharp/LLamaSharp" -> "SciSharp/BotSharp" ["e"=1]
"SciSharp/LLamaSharp" -> "microsoft/kernel-memory"
"SciSharp/LLamaSharp" -> "awaescher/OllamaSharp"
"SciSharp/LLamaSharp" -> "dotnet/TorchSharp" ["e"=1]
"SciSharp/LLamaSharp" -> "modelcontextprotocol/csharp-sdk"
"SciSharp/LLamaSharp" -> "tryAGI/LangChain"
"SciSharp/LLamaSharp" -> "sandrohanea/whisper.net"
"SciSharp/LLamaSharp" -> "SciSharp/TensorFlow.NET" ["e"=1]
"SciSharp/LLamaSharp" -> "AIDotNet/AntSK" ["e"=1]
"SciSharp/LLamaSharp" -> "elsa-workflows/elsa-core" ["e"=1]
"SciSharp/LLamaSharp" -> "dotnet/aspire" ["e"=1]
"SciSharp/LLamaSharp" -> "openai/openai-dotnet"
"SciSharp/LLamaSharp" -> "microsoft/fluentui-blazor" ["e"=1]
"SciSharp/LLamaSharp" -> "spectreconsole/spectre.console" ["e"=1]
"SciSharp/LLamaSharp" -> "betalgo/openai"
"microsoft/kernel-memory" -> "microsoft/chat-copilot" ["e"=1]
"microsoft/kernel-memory" -> "Azure-Samples/miyagi" ["e"=1]
"microsoft/kernel-memory" -> "microsoft/semantic-kernel-starters"
"microsoft/kernel-memory" -> "SciSharp/LLamaSharp"
"microsoft/kernel-memory" -> "geffzhang/awesome-semantickernel"
"microsoft/kernel-memory" -> "modelcontextprotocol/csharp-sdk"
"microsoft/kernel-memory" -> "dotnet/ai-samples"
"microsoft/kernel-memory" -> "microsoft/semantic-kernel" ["e"=1]
"microsoft/kernel-memory" -> "MicrosoftDocs/semantic-kernel-docs"
"microsoft/kernel-memory" -> "SciSharp/BotSharp" ["e"=1]
"microsoft/kernel-memory" -> "tryAGI/LangChain"
"microsoft/kernel-memory" -> "Azure-Samples/azure-search-openai-demo-csharp" ["e"=1]
"microsoft/kernel-memory" -> "microsoft/SemanticKernelCookBook"
"microsoft/kernel-memory" -> "kbeaugrand/SemanticKernel.Assistants"
"microsoft/kernel-memory" -> "dotnet/aspire" ["e"=1]
"adamlui/chatgpt-infinity" -> "adamlui/ai-web-extensions"
"adamlui/chatgpt-infinity" -> "adamlui/chatgpt-widescreen"
"adamlui/chatgpt-infinity" -> "adamlui/chatgpt-auto-continue"
"adamlui/chatgpt-infinity" -> "adamlui/chatgpt-auto-refresh"
"adamlui/chatgpt-infinity" -> "adamlui/userscripts"
"adamlui/chatgpt-infinity" -> "KudoAI/bravegpt"
"adamlui/chatgpt-infinity" -> "KudoAI/googlegpt"
"adamlui/ai-web-extensions" -> "adamlui/chatgpt-infinity"
"adamlui/ai-web-extensions" -> "adamlui/userscripts"
"adamlui/ai-web-extensions" -> "adamlui/chatgpt-widescreen"
"adamlui/ai-web-extensions" -> "adamlui/chatgpt-auto-continue"
"adamlui/ai-web-extensions" -> "adamlui/chatgpt-auto-refresh"
"adamlui/ai-web-extensions" -> "KudoAI/bravegpt"
"adamlui/ai-web-extensions" -> "KudoAI/duckduckgpt"
"adamlui/ai-web-extensions" -> "adamlui/autoclear-chatgpt-history"
"adamlui/ai-web-extensions" -> "KudoAI/googlegpt"
"microsoft/CopilotHackathon" -> "microsoft/CopilotAdventures"
"KudoAI/chatgpt.js" -> "adamlui/chatgpt-infinity"
"KudoAI/chatgpt.js" -> "a16z-infra/ai-getting-started" ["e"=1]
"KudoAI/chatgpt.js" -> "junhoyeo/threads-api" ["e"=1]
"KudoAI/chatgpt.js" -> "adamlui/ai-web-extensions"
"KudoAI/chatgpt.js" -> "rasbt/scipy2023-deeplearning" ["e"=1]
"KudoAI/chatgpt.js" -> "StarmoonAI/Starmoon"
"KudoAI/chatgpt.js" -> "PrefectHQ/ControlFlow"
"KudoAI/chatgpt.js" -> "NaomiProject/Naomi"
"KudoAI/chatgpt.js" -> "KudoAI/chatgpt.js-greasemonkey-starter"
"KudoAI/chatgpt.js" -> "Etesam913/react-magic-motion" ["e"=1]
"KudoAI/chatgpt.js" -> "mosecorg/mosec"
"KudoAI/chatgpt.js" -> "SkalskiP/awesome-chatgpt-code-interpreter-experiments" ["e"=1]
"KudoAI/chatgpt.js" -> "tensorlakeai/indexify"
"KudoAI/chatgpt.js" -> "yokingma/search_with_ai"
"KudoAI/chatgpt.js" -> "madkarmaa/automatic-chatgpt-dan" ["e"=1]
"devflowinc/trieve" -> "OcularEngineering/ocular" ["e"=1]
"devflowinc/trieve" -> "tensorlakeai/indexify"
"devflowinc/trieve" -> "getcorefin/corefin" ["e"=1]
"devflowinc/trieve" -> "lumina-ai-inc/chunkr" ["e"=1]
"devflowinc/trieve" -> "topoteretes/cognee" ["e"=1]
"devflowinc/trieve" -> "relari-ai/continuous-eval" ["e"=1]
"devflowinc/trieve" -> "quarylabs/quary" ["e"=1]
"devflowinc/trieve" -> "getzep/zep" ["e"=1]
"devflowinc/trieve" -> "tolgee/tolgee-platform" ["e"=1]
"devflowinc/trieve" -> "Helicone/helicone" ["e"=1]
"devflowinc/trieve" -> "devflowinc/firecrawl-simple"
"devflowinc/trieve" -> "michaelfeil/infinity" ["e"=1]
"devflowinc/trieve" -> "kitops-ml/kitops"
"devflowinc/trieve" -> "pretzelai/pretzelai" ["e"=1]
"devflowinc/trieve" -> "NaomiProject/Naomi"
"microsoft/semantic-kernel-starters" -> "MicrosoftDocs/semantic-kernel-docs"
"microsoft/semantic-kernel-starters" -> "microsoft/SemanticKernelCookBook"
"microsoft/semantic-kernel-starters" -> "Azure-Samples/semantic-kernel-rag-chat"
"microsoft/semantic-kernel-starters" -> "geffzhang/awesome-semantickernel"
"microsoft/semantic-kernel-starters" -> "microsoft/kernel-memory"
"microsoft/semantic-kernel-starters" -> "Azure-Samples/miyagi" ["e"=1]
"microsoft/semantic-kernel-starters" -> "johnmaeda/SK-Recipes"
"microsoft/semantic-kernel-starters" -> "microsoft/chat-copilot" ["e"=1]
"microsoft/semantic-kernel-starters" -> "kbeaugrand/SemanticKernel.Assistants"
"microsoft/semantic-kernel-starters" -> "Azure/intelligent-app-workshop" ["e"=1]
"microsoft/semantic-kernel-starters" -> "adhurwit/SemanticQuestion10K"
"microsoft/semantic-kernel-starters" -> "matthewbolanos/sk-v1-proposal"
"microsoft/semantic-kernel-starters" -> "jimbobbennett/console-gpt"
"microsoft/semantic-kernel-starters" -> "microsoft/typechat.net"
"microsoft/semantic-kernel-starters" -> "rvinothrajendran/MicrosoftSemanticKernelSamples"
"MicrosoftDocs/semantic-kernel-docs" -> "microsoft/semantic-kernel-starters"
"MicrosoftDocs/semantic-kernel-docs" -> "kbeaugrand/SemanticKernel.Connectors.Memory.SqlServer"
"MicrosoftDocs/semantic-kernel-docs" -> "kbeaugrand/SemanticKernel.Assistants"
"MicrosoftDocs/semantic-kernel-docs" -> "geffzhang/awesome-semantickernel"
"MicrosoftDocs/semantic-kernel-docs" -> "matthewbolanos/sk-v1-proposal"
"MicrosoftDocs/semantic-kernel-docs" -> "Azure-Samples/semantic-kernel-rag-chat"
"MicrosoftDocs/semantic-kernel-docs" -> "microsoft/kernel-memory"
"NaomiProject/Naomi" -> "StarmoonAI/Starmoon"
"NaomiProject/Naomi" -> "mosecorg/mosec"
"NaomiProject/Naomi" -> "kitops-ml/kitops"
"NaomiProject/Naomi" -> "Zenohm/Friday" ["e"=1]
"NaomiProject/Naomi" -> "tensorlakeai/indexify"
"NaomiProject/Naomi" -> "yokingma/search_with_ai"
"NaomiProject/Naomi" -> "awaescher/OllamaSharp"
"tryAGI/LangChain" -> "awaescher/OllamaSharp"
"tryAGI/LangChain" -> "SciSharp/LLamaSharp"
"tryAGI/LangChain" -> "jeastham1993/langchain-dotnet"
"tryAGI/LangChain" -> "microsoft/kernel-memory"
"tryAGI/LangChain" -> "geffzhang/awesome-semantickernel"
"tryAGI/LangChain" -> "SciSharp/BotSharp" ["e"=1]
"tryAGI/LangChain" -> "afrise/MCPSharp"
"tryAGI/LangChain" -> "modelcontextprotocol/csharp-sdk"
"tryAGI/LangChain" -> "tryAGI/Ollama"
"tryAGI/LangChain" -> "openai/openai-dotnet"
"tryAGI/LangChain" -> "qdrant/qdrant-dotnet" ["e"=1]
"tryAGI/LangChain" -> "dotnet/ai-samples"
"tryAGI/LangChain" -> "sandrohanea/whisper.net"
"tryAGI/LangChain" -> "RageAgainstThePixel/OpenAI-DotNet"
"tryAGI/LangChain" -> "Jenscaasen/UniversalLLMFunctionCaller"
"tensorlakeai/indexify" -> "StarmoonAI/Starmoon"
"tensorlakeai/indexify" -> "mosecorg/mosec"
"tensorlakeai/indexify" -> "NaomiProject/Naomi"
"tensorlakeai/indexify" -> "KruxAI/ragbuilder" ["e"=1]
"tensorlakeai/indexify" -> "kitops-ml/kitops"
"tensorlakeai/indexify" -> "PrefectHQ/ControlFlow"
"tensorlakeai/indexify" -> "devflowinc/trieve"
"tensorlakeai/indexify" -> "yokingma/search_with_ai"
"tensorlakeai/indexify" -> "dstackai/dstack"
"tensorlakeai/indexify" -> "awaescher/OllamaSharp"
"tensorlakeai/indexify" -> "michaelfeil/infinity" ["e"=1]
"tensorlakeai/indexify" -> "JuliaDynamics/Agents.jl" ["e"=1]
"tensorlakeai/indexify" -> "topoteretes/cognee" ["e"=1]
"tensorlakeai/indexify" -> "jondot/awesome-rust-llm" ["e"=1]
"tensorlakeai/indexify" -> "edwinkys/oasysdb" ["e"=1]
"marcominerva/ChatGptNet" -> "marcominerva/SimpleAuthentication"
"marcominerva/ChatGptNet" -> "marcominerva/TinyHelpers"
"marcominerva/ChatGptNet" -> "PawanOsman/ChatGPT.Net"
"marcominerva/ChatGptNet" -> "marcominerva/DatabaseGPT"
"marcominerva/ChatGptNet" -> "marcominerva/SqlDatabaseVectorSearch"
"marcominerva/ChatGptNet" -> "marcominerva/OpenAIEmbeddingSample"
"marcominerva/ChatGptNet" -> "marcominerva/MinimalHelpers"
"uhub/awesome-chatgpt" -> "adamlui/ai-web-extensions"
"geffzhang/awesome-semantickernel" -> "microsoft/typechat.net"
"geffzhang/awesome-semantickernel" -> "microsoft/semantic-kernel-starters"
"geffzhang/awesome-semantickernel" -> "kbeaugrand/SemanticKernel.Assistants"
"geffzhang/awesome-semantickernel" -> "kinfey/SemanticKernelCookBook"
"geffzhang/awesome-semantickernel" -> "microsoft/kernel-memory"
"geffzhang/awesome-semantickernel" -> "microsoft/SemanticKernelCookBook"
"geffzhang/awesome-semantickernel" -> "MicrosoftDocs/semantic-kernel-docs"
"geffzhang/awesome-semantickernel" -> "Senparc/Senparc.AI"
"geffzhang/awesome-semantickernel" -> "qmatteoq/SemanticKernel-Demos"
"geffzhang/awesome-semantickernel" -> "johnmaeda/SK-Recipes"
"geffzhang/awesome-semantickernel" -> "PederHP/mcpdotnet"
"geffzhang/awesome-semantickernel" -> "BLaZeKiLL/Codeblaze.SemanticKernel"
"geffzhang/awesome-semantickernel" -> "HillPhelmuth/AdventuresInSemanticKernel"
"geffzhang/awesome-semantickernel" -> "tryAGI/LangChain"
"geffzhang/awesome-semantickernel" -> "elbruno/semantickernel-localLLMs"
"adamlui/chatgpt-auto-refresh" -> "adamlui/chatgpt-widescreen"
"adamlui/chatgpt-auto-refresh" -> "adamlui/chatgpt-auto-continue"
"adamlui/chatgpt-auto-refresh" -> "adamlui/chatgpt-infinity"
"adamlui/chatgpt-auto-refresh" -> "adamlui/userscripts"
"adamlui/chatgpt-auto-refresh" -> "adamlui/autoclear-chatgpt-history"
"adamlui/chatgpt-auto-refresh" -> "adamlui/ai-web-extensions"
"Senparc/Senparc.AI" -> "NeuCharFramework/NcfPackageSources"
"Senparc/Senparc.AI" -> "NeuCharFramework/Senparc.Xncf.OpenAI"
"Senparc/Senparc.AI" -> "Senparc/DPB"
"adamlui/chatgpt-widescreen" -> "adamlui/chatgpt-auto-continue"
"adamlui/chatgpt-widescreen" -> "adamlui/chatgpt-auto-refresh"
"adamlui/chatgpt-widescreen" -> "adamlui/chatgpt-infinity"
"adamlui/chatgpt-widescreen" -> "adamlui/ai-web-extensions"
"adamlui/chatgpt-widescreen" -> "adamlui/autoclear-chatgpt-history"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-great-expectations"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-github"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-sendgrid"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-postgres"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-collection-template"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-openmetadata"
"PrefectHQ/langchain-prefect" -> "fugue-project/prefect-fugue"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-azure"
"PrefectHQ/langchain-prefect" -> "zzstoatzz/prefect-memory-profiling"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-ray"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-kubernetes"
"PrefectHQ/langchain-prefect" -> "AlessandroLollo/prefect-cubejs"
"PrefectHQ/langchain-prefect" -> "PrefectHQ/prefect-twilio"
"adamlui/chatgpt-auto-continue" -> "adamlui/chatgpt-widescreen"
"adamlui/chatgpt-auto-continue" -> "adamlui/chatgpt-auto-refresh"
"adamlui/chatgpt-auto-continue" -> "adamlui/chatgpt-infinity"
"adamlui/chatgpt-auto-continue" -> "adamlui/ai-web-extensions"
"KudoAI/bravegpt" -> "KudoAI/duckduckgpt"
"KudoAI/bravegpt" -> "adamlui/chatgpt-infinity"
"KudoAI/duckduckgpt" -> "KudoAI/bravegpt"
"Azure-Samples/semantic-kernel-rag-chat" -> "microsoft/semantic-kernel-starters"
"Azure-Samples/semantic-kernel-rag-chat" -> "adhurwit/SemanticQuestion10K"
"Azure-Samples/semantic-kernel-rag-chat" -> "jimbobbennett/console-gpt"
"Azure-Samples/semantic-kernel-rag-chat" -> "microsoft/SemanticKernelCookBook"
"johnmaeda/SK-Recipes" -> "microsoft/semantic-kernel-starters"
"johnmaeda/SK-Recipes" -> "jimbobbennett/console-gpt"
"johnmaeda/SK-Recipes" -> "Azure-Samples/semantic-kernel-rag-chat"
"microsoft/typechat.net" -> "geffzhang/awesome-semantickernel"
"microsoft/typechat.net" -> "kbeaugrand/SemanticKernel.Assistants"
"damienbod/bff-aspnetcore-angular" -> "damienbod/bff-openiddict-aspnetcore-angular"
"damienbod/bff-aspnetcore-angular" -> "damienbod/SeparatingApisPerSecurityLevel"
"kbeaugrand/SemanticKernel.Connectors.Memory.SqlServer" -> "kbeaugrand/SemanticKernel.Assistants"
"kbeaugrand/SemanticKernel.Connectors.Memory.SqlServer" -> "BLaZeKiLL/Codeblaze.SemanticKernel"
"kbeaugrand/SemanticKernel.Connectors.Memory.SqlServer" -> "marcominerva/OpenAIEmbeddingSample"
"Cledev-Limited/Cledev.OpenAI.Studio" -> "Cledev-Limited/Cledev.OpenAI"
"kinfey/dotNETOAIBooks" -> "kinfey/MSFabricCopilotWorkshop"
"magols/BlazorGPT" -> "marcominerva/KernelMemoryService"
"rvinothrajendran/MicrosoftSemanticKernelSamples" -> "Azure-AI-Community/Microsoft-Semantic-Kernel-Community-dotnet"
"tryAGI/Ollama" -> "awaescher/OllamaSharp"
"dotnet/ai-samples" -> "dotnet/eShopSupport"
"dotnet/ai-samples" -> "modelcontextprotocol/csharp-sdk"
"dotnet/ai-samples" -> "microsoft/ai-dev-gallery"
"dotnet/ai-samples" -> "microsoft/kernel-memory"
"dotnet/ai-samples" -> "microsoft/Generative-AI-for-beginners-dotnet"
"dotnet/ai-samples" -> "openai/openai-dotnet"
"dotnet/ai-samples" -> "Azure-Samples/azure-search-openai-demo-csharp" ["e"=1]
"dotnet/ai-samples" -> "dotnet/aspire-samples"
"dotnet/ai-samples" -> "dotnet-smartcomponents/smartcomponents"
"dotnet/ai-samples" -> "geffzhang/awesome-semantickernel"
"dotnet/ai-samples" -> "SteveSandersonMS/dotnet-ai-workshop"
"dotnet/ai-samples" -> "SciSharp/LLamaSharp"
"dotnet/ai-samples" -> "davidfowl/aspire-ai-chat-demo"
"dotnet/ai-samples" -> "dotnet/smartcomponents"
"dotnet/ai-samples" -> "microsoft/SemanticKernelCookBook"
"eidolon-ai/eidolon" -> "kitops-ml/kitops"
"eidolon-ai/eidolon" -> "DataBassGit/AgentForge" ["e"=1]
"eidolon-ai/eidolon" -> "MarianoMolina/project_alice" ["e"=1]
"eidolon-ai/eidolon" -> "Eng-Elias/CrewAI-Visualizer" ["e"=1]
"eidolon-ai/eidolon" -> "rnadigital/agentcloud" ["e"=1]
"kitops-ml/kitops" -> "NaomiProject/Naomi"
"kitops-ml/kitops" -> "mosecorg/mosec"
"kitops-ml/kitops" -> "StarmoonAI/Starmoon"
"kitops-ml/kitops" -> "tensorlakeai/indexify"
"kitops-ml/kitops" -> "PrefectHQ/ControlFlow"
"kitops-ml/kitops" -> "eidolon-ai/eidolon"
"kitops-ml/kitops" -> "awaescher/OllamaSharp"
"kitops-ml/kitops" -> "tolgee/tolgee-platform" ["e"=1]
"kitops-ml/kitops" -> "yokingma/search_with_ai"
"kitops-ml/kitops" -> "devflowinc/trieve"
"kitops-ml/kitops" -> "KruxAI/ragbuilder" ["e"=1]
"kitops-ml/kitops" -> "JuliaDynamics/Agents.jl" ["e"=1]
"kitops-ml/kitops" -> "dstackai/dstack"
"kitops-ml/kitops" -> "topoteretes/cognee" ["e"=1]
"kitops-ml/kitops" -> "kitops-ml/pykitops"
"yokingma/search_with_ai" -> "ptonlix/LangChain-SearXNG"
"yokingma/search_with_ai" -> "memfreeme/memfree" ["e"=1]
"yokingma/search_with_ai" -> "fatwang2/search4all" ["e"=1]
"yokingma/search_with_ai" -> "LLM-Red-Team/metaso-free-api" ["e"=1]
"yokingma/search_with_ai" -> "rashadphz/farfalle" ["e"=1]
"yokingma/search_with_ai" -> "onenov/search_with_ai"
"yokingma/search_with_ai" -> "ai365vip/chat-api" ["e"=1]
"yokingma/search_with_ai" -> "fatwang2/search2ai" ["e"=1]
"yokingma/search_with_ai" -> "vastxie/99AI" ["e"=1]
"yokingma/search_with_ai" -> "StarmoonAI/Starmoon"
"yokingma/search_with_ai" -> "NaomiProject/Naomi"
"yokingma/search_with_ai" -> "MartialBE/one-hub" ["e"=1]
"yokingma/search_with_ai" -> "miurla/morphic" ["e"=1]
"yokingma/search_with_ai" -> "SmartSchoolAI/ai-to-pptx" ["e"=1]
"yokingma/search_with_ai" -> "VoAPI/VoAPI" ["e"=1]
"microsoft/vscode-ai-toolkit" -> "microsoft/ai-dev-gallery"
"microsoft/vscode-ai-toolkit" -> "microsoft/PhiCookBook"
"microsoft/vscode-ai-toolkit" -> "microsoft/onnxruntime-genai"
"microsoft/vscode-ai-toolkit" -> "microsoft/kernel-memory"
"microsoft/vscode-ai-toolkit" -> "microsoft/genaiscript" ["e"=1]
"microsoft/vscode-ai-toolkit" -> "microsoft/semantic-kernel-starters"
"microsoft/vscode-ai-toolkit" -> "modelcontextprotocol/csharp-sdk"
"microsoft/vscode-ai-toolkit" -> "microsoft/chat-copilot" ["e"=1]
"microsoft/vscode-ai-toolkit" -> "dotnet/ai-samples"
"microsoft/vscode-ai-toolkit" -> "microsoft/TinyTroupe" ["e"=1]
"microsoft/vscode-ai-toolkit" -> "aymenfurter/microagents" ["e"=1]
"microsoft/vscode-ai-toolkit" -> "microsoft/azure-genai-design-patterns" ["e"=1]
"microsoft/vscode-ai-toolkit" -> "microsoft/Olive"
"microsoft/vscode-ai-toolkit" -> "Azure-Samples/miyagi" ["e"=1]
"microsoft/vscode-ai-toolkit" -> "collabora/WhisperFusion" ["e"=1]
"awaescher/OllamaSharp" -> "tryAGI/Ollama"
"awaescher/OllamaSharp" -> "SciSharp/LLamaSharp"
"awaescher/OllamaSharp" -> "tryAGI/LangChain"
"awaescher/OllamaSharp" -> "modelcontextprotocol/csharp-sdk"
"awaescher/OllamaSharp" -> "openai/openai-dotnet"
"awaescher/OllamaSharp" -> "microsoft/kernel-memory"
"awaescher/OllamaSharp" -> "NaomiProject/Naomi"
"awaescher/OllamaSharp" -> "mosecorg/mosec"
"awaescher/OllamaSharp" -> "SciSharp/BotSharp" ["e"=1]
"awaescher/OllamaSharp" -> "dotnet/ai-samples"
"awaescher/OllamaSharp" -> "StarmoonAI/Starmoon"
"awaescher/OllamaSharp" -> "elbruno/semantickernel-localLLMs"
"awaescher/OllamaSharp" -> "NickSwardh/YoloDotNet" ["e"=1]
"awaescher/OllamaSharp" -> "dotnet/smartcomponents"
"awaescher/OllamaSharp" -> "afrise/MCPSharp"
"microsoft/PhiCookBook" -> "microsoft/onnxruntime-genai"
"microsoft/PhiCookBook" -> "Azure-Samples/graphrag-accelerator" ["e"=1]
"microsoft/PhiCookBook" -> "microsoft/chat-copilot" ["e"=1]
"microsoft/PhiCookBook" -> "NVlabs/VILA" ["e"=1]
"microsoft/PhiCookBook" -> "microsoft/kernel-memory"
"microsoft/PhiCookBook" -> "dotnet/ai-samples"
"microsoft/PhiCookBook" -> "microsoft/Olive"
"microsoft/PhiCookBook" -> "huggingface/smollm" ["e"=1]
"microsoft/PhiCookBook" -> "lm-sys/RouteLLM" ["e"=1]
"microsoft/PhiCookBook" -> "microsoft/vscode-ai-toolkit"
"microsoft/PhiCookBook" -> "microsoft/sample-app-aoai-chatGPT" ["e"=1]
"microsoft/PhiCookBook" -> "microsoft/ai-dev-gallery"
"microsoft/PhiCookBook" -> "microsoft/prompty" ["e"=1]
"microsoft/PhiCookBook" -> "pytorch/torchtune" ["e"=1]
"microsoft/PhiCookBook" -> "meta-llama/llama-cookbook" ["e"=1]
"kitbagjs/router" -> "PrefectHQ/prefect-email"
"kitbagjs/router" -> "PrefectHQ/prefect-dbt"
"kitbagjs/router" -> "PrefectHQ/prefect-great-expectations"
"kitbagjs/router" -> "PrefectHQ/prefect-github"
"kitbagjs/router" -> "PrefectHQ/prefect-openmetadata"
"kitbagjs/router" -> "PrefectHQ/prefect-airbyte"
"kitbagjs/router" -> "PrefectHQ/prefect-snowflake"
"kitbagjs/router" -> "PrefectHQ/prefect-databricks"
"kitbagjs/router" -> "PrefectHQ/prefect-shell"
"kitbagjs/router" -> "PrefectHQ/prefect-kubernetes"
"kitbagjs/router" -> "AlessandroLollo/prefect-cubejs"
"kitbagjs/router" -> "PrefectHQ/prefect-twilio"
"kitbagjs/router" -> "PrefectHQ/prefect-sendgrid"
"kitbagjs/router" -> "PrefectHQ/prefect-collection-template"
"kitbagjs/router" -> "PrefectHQ/prefect-twitter"
"carlosjorger/fluid-dnd" -> "bcakmakoglu/revue-draggable"
"carlosjorger/fluid-dnd" -> "kitbagjs/router"
"dotnet/aspire-samples" -> "dotnet/aspire" ["e"=1]
"dotnet/aspire-samples" -> "CommunityToolkit/Aspire"
"dotnet/aspire-samples" -> "prom3theu5/aspirational-manifests" ["e"=1]
"dotnet/aspire-samples" -> "dotnet/docs-aspire"
"dotnet/aspire-samples" -> "dotnet/eShopSupport"
"dotnet/aspire-samples" -> "dotnet/ai-samples"
"dotnet/aspire-samples" -> "thangchung/practical-dotnet-aspire"
"dotnet/aspire-samples" -> "dotnet-presentations/dotnet-aspire-workshop"
"dotnet/aspire-samples" -> "davidfowl/aspire-ai-chat-demo"
"dotnet/aspire-samples" -> "dotnet-presentations/eshop-app-workshop"
"dotnet/aspire-samples" -> "modelcontextprotocol/csharp-sdk"
"dotnet/aspire-samples" -> "JasperFx/wolverine" ["e"=1]
"dotnet/aspire-samples" -> "dotnet/blazor-samples" ["e"=1]
"dotnet/aspire-samples" -> "Azure-Samples/eShopOnAzure" ["e"=1]
"dotnet/aspire-samples" -> "davidfowl/TodoApp" ["e"=1]
"BLaZeKiLL/Codeblaze.SemanticKernel" -> "kbeaugrand/SemanticKernel.Connectors.Memory.SqlServer"
"dotnet-smartcomponents/smartcomponents" -> "dotnet/smartcomponents"
"dotnet-smartcomponents/smartcomponents" -> "dotnet/ai-samples"
"dotnet-smartcomponents/smartcomponents" -> "microsoft/fluentui-blazor" ["e"=1]
"dotnet-smartcomponents/smartcomponents" -> "modelcontextprotocol/csharp-sdk"
"dotnet-smartcomponents/smartcomponents" -> "dotnet/eShopSupport"
"dotnet-smartcomponents/smartcomponents" -> "dotnet/blazor-samples" ["e"=1]
"dotnet-smartcomponents/smartcomponents" -> "Blazor-Diagrams/Blazor.Diagrams" ["e"=1]
"dotnet-smartcomponents/smartcomponents" -> "Giorgi/EFCore.Visualizer" ["e"=1]
"dotnet-smartcomponents/smartcomponents" -> "SteveSandersonMS/RealtimeAIApp"
"dotnet-smartcomponents/smartcomponents" -> "spark-dotnet/framework" ["e"=1]
"dotnet-smartcomponents/smartcomponents" -> "CodeBeamOrg/CodeBeam.MudBlazor.Extensions" ["e"=1]
"dotnet-smartcomponents/smartcomponents" -> "apexcharts/Blazor-ApexCharts" ["e"=1]
"dotnet-smartcomponents/smartcomponents" -> "mrpmorris/Fluxor" ["e"=1]
"dotnet-smartcomponents/smartcomponents" -> "IEvangelist/blazorators" ["e"=1]
"dotnet-smartcomponents/smartcomponents" -> "openai/openai-dotnet"
"dotnet/eShopSupport" -> "dotnet/ai-samples"
"dotnet/eShopSupport" -> "dotnet/smartcomponents"
"dotnet/eShopSupport" -> "davidfowl/aspire-ai-chat-demo"
"dotnet/eShopSupport" -> "Azure-Samples/azure-search-openai-demo-csharp" ["e"=1]
"dotnet/eShopSupport" -> "dotnetConf/FocusOnAI_24"
"dotnet/eShopSupport" -> "dotnet/aspire-samples"
"dotnet/eShopSupport" -> "thangchung/practical-dotnet-aspire"
"dotnet/eShopSupport" -> "modelcontextprotocol/csharp-sdk"
"dotnet/eShopSupport" -> "SteveSandersonMS/dotnet-ai-workshop"
"dotnet/eShopSupport" -> "microsoft/ai-dev-gallery"
"dotnet/eShopSupport" -> "NikiforovAll/keycloak-authorization-services-dotnet" ["e"=1]
"dotnet/eShopSupport" -> "CommunityToolkit/Aspire"
"dotnet/eShopSupport" -> "dotnet-smartcomponents/smartcomponents"
"dotnet/eShopSupport" -> "dotnet/docs-aspire"
"dotnet/eShopSupport" -> "microsoft/kernel-memory"
"PrefectHQ/ControlFlow" -> "PrefectHQ/prefect-dbt"
"PrefectHQ/ControlFlow" -> "PrefectHQ/marvin" ["e"=1]
"PrefectHQ/ControlFlow" -> "StarmoonAI/Starmoon"
"PrefectHQ/ControlFlow" -> "topoteretes/cognee" ["e"=1]
"PrefectHQ/ControlFlow" -> "KruxAI/ragbuilder" ["e"=1]
"PrefectHQ/ControlFlow" -> "PrefectHQ/prefect-databricks"
"PrefectHQ/ControlFlow" -> "PrefectHQ/langchain-prefect"
"PrefectHQ/ControlFlow" -> "tensorlakeai/indexify"
"PrefectHQ/ControlFlow" -> "NaomiProject/Naomi"
"PrefectHQ/ControlFlow" -> "kitops-ml/kitops"
"PrefectHQ/ControlFlow" -> "PrefectHQ/prefect-aws"
"PrefectHQ/ControlFlow" -> "PrefectHQ/prefect-recipes"
"PrefectHQ/ControlFlow" -> "mosecorg/mosec"
"PrefectHQ/ControlFlow" -> "PrefectHQ/prefect-snowflake"
"PrefectHQ/ControlFlow" -> "PrefectHQ/prefect-collection-template"
"ptonlix/LangChain-SearXNG" -> "yokingma/search_with_ai"
"openai/openai-dotnet" -> "modelcontextprotocol/csharp-sdk"
"openai/openai-dotnet" -> "OkGoDoIt/OpenAI-API-dotnet"
"openai/openai-dotnet" -> "RageAgainstThePixel/OpenAI-DotNet"
"openai/openai-dotnet" -> "dotnet/ai-samples"
"openai/openai-dotnet" -> "betalgo/openai"
"openai/openai-dotnet" -> "dotnet/aspire" ["e"=1]
"openai/openai-dotnet" -> "SciSharp/LLamaSharp"
"openai/openai-dotnet" -> "awaescher/OllamaSharp"
"openai/openai-dotnet" -> "CommunityToolkit/dotnet" ["e"=1]
"openai/openai-dotnet" -> "microsoft/kernel-memory"
"openai/openai-dotnet" -> "microsoft/fluentui-blazor" ["e"=1]
"openai/openai-dotnet" -> "tryAGI/LangChain"
"openai/openai-dotnet" -> "microsoft/Generative-AI-for-beginners-dotnet"
"openai/openai-dotnet" -> "dotnet/eShop" ["e"=1]
"openai/openai-dotnet" -> "riok/mapperly" ["e"=1]
"jonowilliams26/StructuredMinimalApi" -> "marcominerva/MinimalHelpers"
"dotnet-presentations/eshop-app-workshop" -> "dotnet-presentations/dotnet-aspire-workshop"
"microsoft/onnxruntime-genai" -> "microsoft/onnxruntime-extensions"
"microsoft/onnxruntime-genai" -> "microsoft/onnxscript"
"microsoft/onnxruntime-genai" -> "microsoft/Olive"
"microsoft/onnxruntime-genai" -> "microsoft/PhiCookBook"
"microsoft/onnxruntime-genai" -> "microsoft/onnxruntime-inference-examples"
"microsoft/onnxruntime-genai" -> "openvinotoolkit/openvino.genai" ["e"=1]
"microsoft/onnxruntime-genai" -> "wejoncy/QLLM" ["e"=1]
"microsoft/onnxruntime-genai" -> "google-ai-edge/ai-edge-torch" ["e"=1]
"microsoft/onnxruntime-genai" -> "microsoft/onnxruntime-training-examples"
"microsoft/onnxruntime-genai" -> "microsoft/T-MAC" ["e"=1]
"microsoft/onnxruntime-genai" -> "huggingface/optimum-intel" ["e"=1]
"microsoft/onnxruntime-genai" -> "microsoft/ai-dev-gallery"
"microsoft/onnxruntime-genai" -> "microsoft/DirectML" ["e"=1]
"microsoft/onnxruntime-genai" -> "intel/intel-npu-acceleration-library" ["e"=1]
"microsoft/onnxruntime-genai" -> "microsoft/Llama-2-Onnx" ["e"=1]
"thangchung/practical-dotnet-aspire" -> "foxminchan/BookWorm"
"thangchung/practical-dotnet-aspire" -> "erwinkramer/bank-api"
"thangchung/practical-dotnet-aspire" -> "dotnet/eShopSupport"
"thangchung/practical-dotnet-aspire" -> "dotnet/aspire-samples"
"thangchung/practical-dotnet-aspire" -> "mehdihadeli/food-delivery-modular-monolith" ["e"=1]
"thangchung/practical-dotnet-aspire" -> "prom3theu5/aspirational-manifests" ["e"=1]
"thangchung/practical-dotnet-aspire" -> "marcominerva/MinimalHelpers"
"thangchung/practical-dotnet-aspire" -> "mikolaj-jankowski/Clean-Architecture-And-Domain-Driven-Design-Solution-Template"
"lofcz/LlmTornado" -> "kbeaugrand/SemanticKernel.Assistants"
"kbeaugrand/SemanticKernel.Assistants" -> "kbeaugrand/SemanticKernel.Connectors.Memory.SqlServer"
"kbeaugrand/SemanticKernel.Assistants" -> "rvinothrajendran/MicrosoftSemanticKernelSamples"
"kbeaugrand/SemanticKernel.Assistants" -> "bradygaster/AugmentR"
"kbeaugrand/SemanticKernel.Assistants" -> "BLaZeKiLL/Codeblaze.SemanticKernel"
"kbeaugrand/SemanticKernel.Assistants" -> "HillPhelmuth/AdventuresInSemanticKernel"
"kbeaugrand/SemanticKernel.Assistants" -> "marcominerva/OpenAIEmbeddingSample"
"microsoft/SemanticKernelCookBook" -> "microsoft/semantic-kernel-starters"
"microsoft/SemanticKernelCookBook" -> "qmatteoq/SemanticKernel-Demos"
"microsoft/SemanticKernelCookBook" -> "Azure-Samples/semantic-kernel-rag-chat"
"microsoft/SemanticKernelCookBook" -> "geffzhang/awesome-semantickernel"
"microsoft/SemanticKernelCookBook" -> "kinfey/SemanticKernelCookBook"
"microsoft/SemanticKernelCookBook" -> "Azure-Samples/semantic-kernel-advanced-usage" ["e"=1]
"microsoft/SemanticKernelCookBook" -> "MicrosoftDocs/semantic-kernel-docs"
"microsoft/SemanticKernelCookBook" -> "Azure/AI-in-a-Box" ["e"=1]
"microsoft/SemanticKernelCookBook" -> "microsoft/kernel-memory"
"microsoft/SemanticKernelCookBook" -> "Azure-Samples/semantic-kernel-workshop" ["e"=1]
"Jenscaasen/UniversalLLMFunctionCaller" -> "Ming-jiayou/SimpleRAG"
"microsoft/CopilotAdventures" -> "microsoft/CopilotHackathon"
"microsoft/CopilotAdventures" -> "microsoft/mastering-github-copilot-for-dotnet-csharp-developers"
"dotnet/smartcomponents" -> "dotnet-smartcomponents/smartcomponents"
"dotnet/smartcomponents" -> "dotnet/eShopSupport"
"dotnet/smartcomponents" -> "microsoft/ai-dev-gallery"
"dotnet/smartcomponents" -> "SteveSandersonMS/RealtimeAIApp"
"dotnet/smartcomponents" -> "davidfowl/CommandAndControl"
"StephenCleary/LocalTelemetry" -> "petabridge/dotnet-grafana-dashboards"
"qmatteoq/SemanticKernel-Demos" -> "marcominerva/OpenAIEmbeddingSample"
"qmatteoq/SemanticKernel-Demos" -> "rvinothrajendran/MicrosoftSemanticKernelSamples"
"kinfey/SemanticKernelCookBook" -> "kinfey/MSFabricCopilotWorkshop"
"kinfey/SemanticKernelCookBook" -> "geffzhang/awesome-semantickernel"
"dotnet/docs-aspire" -> "CommunityToolkit/Aspire"
"dotnet/docs-aspire" -> "dotnet/aspire-samples"
"Azure-Samples/langchainjs-quickstart-demo" -> "Azure-Samples/ollama-javascript-playground"
"elbruno/semantickernel-localLLMs" -> "BLaZeKiLL/Codeblaze.SemanticKernel"
"marcominerva/KernelMemoryService" -> "marcominerva/OpenAIEmbeddingSample"
"marcominerva/OpenAIEmbeddingSample" -> "marcominerva/KernelMemoryService"
"StarmoonAI/Starmoon" -> "NaomiProject/Naomi"
"StarmoonAI/Starmoon" -> "mosecorg/mosec"
"StarmoonAI/Starmoon" -> "tensorlakeai/indexify"
"StarmoonAI/Starmoon" -> "yokingma/search_with_ai"
"StarmoonAI/Starmoon" -> "PrefectHQ/ControlFlow"
"StarmoonAI/Starmoon" -> "kitops-ml/kitops"
"StarmoonAI/Starmoon" -> "espressif/esp-webrtc-solution"
"StarmoonAI/Starmoon" -> "dstackai/dstack"
"StarmoonAI/Starmoon" -> "JuliaDynamics/Agents.jl" ["e"=1]
"StarmoonAI/Starmoon" -> "awaescher/OllamaSharp"
"StarmoonAI/Starmoon" -> "KruxAI/ragbuilder" ["e"=1]
"tonybaloney/CSnakes" -> "modelcontextprotocol/csharp-sdk"
"tonybaloney/CSnakes" -> "xoofx/ultra" ["e"=1]
"tonybaloney/CSnakes" -> "henon/Python.Included" ["e"=1]
"tonybaloney/CSnakes" -> "prom3theu5/aspirational-manifests" ["e"=1]
"tonybaloney/CSnakes" -> "eiriktsarpalis/PolyType" ["e"=1]
"tonybaloney/CSnakes" -> "sveinungf/spreadcheetah" ["e"=1]
"tonybaloney/CSnakes" -> "nietras/Sep" ["e"=1]
"tonybaloney/CSnakes" -> "Dreamescaper/BlazorBindings.Maui" ["e"=1]
"tonybaloney/CSnakes" -> "dotnet/ai-samples"
"microsoft/generative-ai-with-javascript" -> "microsoft/mastering-github-copilot-for-dotnet-csharp-developers"
"microsoft/generative-ai-with-javascript" -> "microsoft/Generative-AI-for-beginners-dotnet"
"microsoft/generative-ai-with-javascript" -> "microsoft/CopilotAdventures"
"microsoft/generative-ai-with-javascript" -> "Azure-Samples/langchainjs-quickstart-demo"
"microsoft/generative-ai-with-javascript" -> "Azure-Samples/serverless-chat-langchainjs" ["e"=1]
"dotnet-presentations/dotnet-aspire-workshop" -> "dotnet-presentations/eshop-app-workshop"
"erwinkramer/bank-api" -> "mikolaj-jankowski/Clean-Architecture-And-Domain-Driven-Design-Solution-Template"
"erwinkramer/bank-api" -> "thangchung/practical-dotnet-aspire"
"erwinkramer/bank-api" -> "jhaygood86/PeachPDF" ["e"=1]
"erwinkramer/bank-api" -> "LumexUI/lumexui" ["e"=1]
"erwinkramer/bank-api" -> "SteveDunn/Vogen" ["e"=1]
"erwinkramer/bank-api" -> "damienbod/bff-aspnetcore-angular"
"erwinkramer/bank-api" -> "davidfowl/TodoApp" ["e"=1]
"erwinkramer/bank-api" -> "CharlieDigital/dn8-modular-monolith"
"erwinkramer/bank-api" -> "ZiggyCreatures/FusionCache" ["e"=1]
"erwinkramer/bank-api" -> "jonowilliams26/StructuredMinimalApi"
"erwinkramer/bank-api" -> "petabridge/dotnet-grafana-dashboards"
"erwinkramer/bank-api" -> "alirezanet/Gridify" ["e"=1]
"erwinkramer/bank-api" -> "JasperFx/wolverine" ["e"=1]
"erwinkramer/bank-api" -> "LSXPrime/Aegis" ["e"=1]
"erwinkramer/bank-api" -> "NimblePros/eShopOnWeb" ["e"=1]
"mikolaj-jankowski/Clean-Architecture-And-Domain-Driven-Design-Solution-Template" -> "erwinkramer/bank-api"
"mikolaj-jankowski/Clean-Architecture-And-Domain-Driven-Design-Solution-Template" -> "evgenirusev/.NET-Domain-Driven-Design-Template" ["e"=1]
"SteveSandersonMS/dotnet-ai-workshop" -> "SteveSandersonMS/RealtimeAIApp"
"Hexastack/Hexabot" -> "kitops-ml/kitops"
"Hexastack/Hexabot" -> "Hexastack/eazychart"
"Hexastack/Hexabot" -> "swirlai/swirl-search" ["e"=1]
"Hexastack/Hexabot" -> "LangbaseInc/BaseAI" ["e"=1]
"microsoft/ai-dev-gallery" -> "dotnet/ai-samples"
"microsoft/ai-dev-gallery" -> "CommunityToolkit/Windows" ["e"=1]
"microsoft/ai-dev-gallery" -> "CommunityToolkit/Labs-Windows" ["e"=1]
"microsoft/ai-dev-gallery" -> "dotMorten/WinUIEx" ["e"=1]
"microsoft/ai-dev-gallery" -> "modelcontextprotocol/csharp-sdk"
"microsoft/ai-dev-gallery" -> "dotnet/smartcomponents"
"microsoft/ai-dev-gallery" -> "dotnet/eShopSupport"
"microsoft/ai-dev-gallery" -> "w-ahmad/WinUI.TableView" ["e"=1]
"microsoft/ai-dev-gallery" -> "SciSharp/BotSharp" ["e"=1]
"microsoft/ai-dev-gallery" -> "SciSharp/LLamaSharp"
"microsoft/ai-dev-gallery" -> "feiyun0112/Gradio.Net" ["e"=1]
"microsoft/ai-dev-gallery" -> "microsoft/WindowsAppSDK-Samples" ["e"=1]
"microsoft/ai-dev-gallery" -> "AIDotNet/koala-ai" ["e"=1]
"microsoft/ai-dev-gallery" -> "HavenDV/H.NotifyIcon" ["e"=1]
"microsoft/ai-dev-gallery" -> "unvell/ReoGrid" ["e"=1]
"adamlui/userscripts" -> "adamlui/ai-web-extensions"
"adamlui/userscripts" -> "adamlui/chatgpt-auto-refresh"
"adamlui/userscripts" -> "adamlui/chatgpt-infinity"
"adamlui/userscripts" -> "adamlui/chatgpt-widescreen"
"adamlui/userscripts" -> "adamlui/chatgpt-auto-continue"
"adamlui/userscripts" -> "KudoAI/duckduckgpt"
"adamlui/userscripts" -> "KudoAI/bravegpt"
"CommunityToolkit/Aspire" -> "dotnet/aspire-samples"
"CommunityToolkit/Aspire" -> "dotnet/docs-aspire"
"CommunityToolkit/Aspire" -> "prom3theu5/aspirational-manifests" ["e"=1]
"CommunityToolkit/Aspire" -> "dotnet/aspire" ["e"=1]
"SteveSandersonMS/RealtimeAIApp" -> "SteveSandersonMS/dotnet-ai-workshop"
"marcominerva/SqlDatabaseVectorSearch" -> "marcominerva/OpenAIEmbeddingSample"
"Ming-jiayou/SimpleRAG" -> "Jenscaasen/UniversalLLMFunctionCaller"
"foxminchan/BookWorm" -> "thangchung/practical-dotnet-aspire"
"microsoft/Generative-AI-for-beginners-dotnet" -> "modelcontextprotocol/csharp-sdk"
"microsoft/Generative-AI-for-beginners-dotnet" -> "dotnet/ai-samples"
"microsoft/Generative-AI-for-beginners-dotnet" -> "microsoft/mastering-github-copilot-for-dotnet-csharp-developers"
"microsoft/Generative-AI-for-beginners-dotnet" -> "openai/openai-dotnet"
"microsoft/Generative-AI-for-beginners-dotnet" -> "dotnet/eShopSupport"
"microsoft/Generative-AI-for-beginners-dotnet" -> "davidfowl/aspire-ai-chat-demo"
"microsoft/Generative-AI-for-beginners-dotnet" -> "microsoft/generative-ai-with-javascript"
"microsoft/Generative-AI-for-beginners-dotnet" -> "dotnet/aspire-samples"
"microsoft/Generative-AI-for-beginners-dotnet" -> "Azure-Samples/azure-search-openai-demo-csharp" ["e"=1]
"microsoft/Generative-AI-for-beginners-dotnet" -> "SciSharp/LLamaSharp"
"microsoft/Generative-AI-for-beginners-dotnet" -> "dotnet/smartcomponents"
"microsoft/Generative-AI-for-beginners-dotnet" -> "microsoft/kernel-memory"
"microsoft/Generative-AI-for-beginners-dotnet" -> "awaescher/OllamaSharp"
"microsoft/Generative-AI-for-beginners-dotnet" -> "davidfowl/TodoApp" ["e"=1]
"microsoft/Generative-AI-for-beginners-dotnet" -> "CommunityToolkit/Aspire"
"modelcontextprotocol/csharp-sdk" -> "openai/openai-dotnet"
"modelcontextprotocol/csharp-sdk" -> "dotnet/ai-samples"
"modelcontextprotocol/csharp-sdk" -> "afrise/MCPSharp"
"modelcontextprotocol/csharp-sdk" -> "dotnet/aspire" ["e"=1]
"modelcontextprotocol/csharp-sdk" -> "PederHP/mcpdotnet"
"modelcontextprotocol/csharp-sdk" -> "microsoft/kernel-memory"
"modelcontextprotocol/csharp-sdk" -> "SciSharp/LLamaSharp"
"modelcontextprotocol/csharp-sdk" -> "microsoft/Generative-AI-for-beginners-dotnet"
"modelcontextprotocol/csharp-sdk" -> "dotnet/eShopSupport"
"modelcontextprotocol/csharp-sdk" -> "microsoft/fluentui-blazor" ["e"=1]
"modelcontextprotocol/csharp-sdk" -> "awaescher/OllamaSharp"
"modelcontextprotocol/csharp-sdk" -> "SciSharp/BotSharp" ["e"=1]
"modelcontextprotocol/csharp-sdk" -> "microsoft/ai-dev-gallery"
"modelcontextprotocol/csharp-sdk" -> "JasperFx/wolverine" ["e"=1]
"modelcontextprotocol/csharp-sdk" -> "tonybaloney/CSnakes"
"afrise/MCPSharp" -> "PederHP/mcpdotnet"
"afrise/MCPSharp" -> "salty-flower/ModelContextProtocol.NET"
"afrise/MCPSharp" -> "modelcontextprotocol/csharp-sdk"
"espressif/esp-webrtc-solution" -> "ciniml/openai-realtime-embedded-sdk"
"microsoft/mastering-github-copilot-for-dotnet-csharp-developers" -> "microsoft/CopilotAdventures"
"davidfowl/aspire-ai-chat-demo" -> "dotnet/eShopSupport"
"PederHP/mcpdotnet" -> "afrise/MCPSharp"
"PederHP/mcpdotnet" -> "salty-flower/ModelContextProtocol.NET"
"PederHP/mcpdotnet" -> "microsoft/micronaire"
"PederHP/mcpdotnet" -> "modelcontextprotocol/csharp-sdk"
"m5stack/openai-realtime-embedded-sdk" -> "ciniml/openai-realtime-embedded-sdk"
"ciniml/openai-realtime-embedded-sdk" -> "m5stack/openai-realtime-embedded-sdk"
"onnx/keras-onnx" ["l"="-44.328,6.033"]
"onnx/onnxmltools" ["l"="-44.274,6.076"]
"onnx/tensorflow-onnx" ["l"="50.108,29.867"]
"ZFTurbo/Keras-inference-time-optimizer" ["l"="-44.36,5.988"]
"onnx/onnx-docker" ["l"="-44.372,6.025"]
"onnx/sklearn-onnx" ["l"="45.766,26.501"]
"microsoft/onnxruntime-extensions" ["l"="-44.244,6.096"]
"microsoft/onnxconverter-common" ["l"="-44.226,6.069"]
"onnx/tutorials" ["l"="50.191,29.845"]
"onnx/onnx-tensorflow" ["l"="50.088,29.955"]
"onnx/optimizer" ["l"="-44.239,6.049"]
"onnx/onnx-coreml" ["l"="46.687,-24.182"]
"microsoft/Olive" ["l"="-44.227,6.132"]
"daquexian/onnx-simplifier" ["l"="50.2,29.876"]
"microsoft/onnxruntime-inference-examples" ["l"="-44.26,6.115"]
"microsoft/onnxruntime-training-examples" ["l"="-44.287,6.124"]
"microsoft/onnxscript" ["l"="-44.222,6.09"]
"dmlc/treelite" ["l"="57.807,23.578"]
"ThanatosShinji/onnx-tool" ["l"="-44.224,6.015"]
"ZFTurbo/Keras-augmentation-layer" ["l"="-44.379,5.963"]
"Senparc/DPB" ["l"="-44.318,6.355"]
"OpenSenparc/Senparc.Weixin.Plugins.WeixinTraceManager" ["l"="-44.341,6.335"]
"OkGoDoIt/OpenAI-API-dotnet" ["l"="-44.136,6.467"]
"betalgo/openai" ["l"="-44.195,6.484"]
"RageAgainstThePixel/OpenAI-DotNet" ["l"="-44.166,6.469"]
"openai/openai-dotnet" ["l"="-44.173,6.413"]
"wieslawsoltes/ChatGPT" ["l"="-36.116,2.48"]
"PawanOsman/ChatGPT.Net" ["l"="-44.095,6.504"]
"srcnalt/OpenAI-Unity" ["l"="-24.975,-32.544"]
"SciSharp/LLamaSharp" ["l"="-44.202,6.425"]
"hexthedev/OpenAi-Api-Unity" ["l"="-25.013,-32.518"]
"SciSharp/BotSharp" ["l"="-32.828,0.679"]
"marcominerva/ChatGptNet" ["l"="-44.044,6.49"]
"modelcontextprotocol/csharp-sdk" ["l"="-44.19,6.363"]
"microsoft/kernel-memory" ["l"="-44.155,6.38"]
"stefanprodan/AspNetCoreRateLimit" ["l"="-34.422,-1.118"]
"MapsterMapper/Mapster" ["l"="-34.466,-0.99"]
"RageAgainstThePixel/com.openai.unity" ["l"="-24.977,-32.521"]
"PrefectHQ/server" ["l"="-44.526,6.7"]
"PrefectHQ/legacy-ui" ["l"="-44.55,6.7"]
"PrefectHQ/prefect-kubernetes" ["l"="-44.504,6.669"]
"PrefectHQ/prefect-collection-template" ["l"="-44.492,6.667"]
"PrefectHQ/prefect-dask" ["l"="-44.522,6.667"]
"PrefectHQ/prefect-databricks" ["l"="-44.495,6.656"]
"microsoft/onnxruntime-genai" ["l"="-44.231,6.165"]
"huggingface/optimum" ["l"="38.709,-0.64"]
"microsoft/DirectML" ["l"="-23.409,-27.774"]
"microsoft/onnxruntime" ["l"="50.173,29.746"]
"intel/neural-compressor" ["l"="64.182,-2.465"]
"intel/intel-extension-for-pytorch" ["l"="64.147,-2.455"]
"microsoft/PhiCookBook" ["l"="-44.212,6.224"]
"Talmaj/onnx2pytorch" ["l"="-44.234,5.933"]
"fumihwh/onnx-pytorch" ["l"="-44.21,5.929"]
"BBuf/onnx2X" ["l"="-44.257,5.929"]
"ENOT-AutoDL/onnx2torch" ["l"="-44.231,5.974"]
"onnx/onnx-mlir" ["l"="37.108,0.982"]
"Tencent/TPAT" ["l"="53.265,32.712"]
"ZhangGe6/onnx-modifier" ["l"="-44.202,6.021"]
"OpenPPL/ppl.nn" ["l"="37.036,0.833"]
"pnnx/pnnx" ["l"="49.587,30.862"]
"alibaba/BladeDISC" ["l"="37.066,0.962"]
"microsoft/nnfusion" ["l"="37.073,0.947"]
"OpenPPL/ppq" ["l"="52.571,33.354"]
"NVIDIA/TensorRT-Model-Optimizer" ["l"="38.964,-0.464"]
"grimoire/torch2trt_dynamic" ["l"="53.166,32.734"]
"NeuCharFramework/NcfPackageSources" ["l"="-44.342,6.362"]
"NeuCharFramework/NCF" ["l"="-32.739,0.877"]
"NeuCharFramework/Senparc.Xncf.WeixinManager" ["l"="-44.368,6.345"]
"SenparcCoreFramework/ScfPackageSources" ["l"="-44.37,6.362"]
"PrefectHQ/prefect-email" ["l"="-44.521,6.658"]
"marcominerva/TinyHelpers" ["l"="-44.003,6.49"]
"marcominerva/MinimalHelpers" ["l"="-43.981,6.455"]
"marcominerva/SimpleAuthentication" ["l"="-43.983,6.487"]
"pytorch/ort" ["l"="-44.328,6.119"]
"machine-learning-apps/ml-template-azure" ["l"="-45.161,7.815"]
"fugue-project/tutorials" ["l"="-44.546,6.597"]
"fugue-project/tune" ["l"="-44.582,6.587"]
"fugue-project/prefect-fugue" ["l"="-44.477,6.644"]
"fugue-project/triad" ["l"="-44.563,6.577"]
"flavienbwk/prefect-docker-compose" ["l"="-44.506,6.731"]
"rpeden/prefect-docker-compose" ["l"="-44.484,6.732"]
"anna-geller/dataflow-ops" ["l"="-44.465,6.701"]
"fraibacas/prefect-orion" ["l"="-44.501,6.765"]
"anna-geller/packaging-prefect-flows" ["l"="-44.531,6.763"]
"PrefectHQ/prefect-recipes" ["l"="-44.475,6.689"]
"PrefectHQ/prefect-helm" ["l"="-44.497,6.691"]
"aiqinxuancai/TiktokenSharp" ["l"="5.326,-9.057"]
"tryAGI/LangChain" ["l"="-44.213,6.403"]
"Cledev-Limited/Cledev.OpenAI" ["l"="-44.146,6.549"]
"jodendaal/OpenAI.Net" ["l"="-44.169,6.529"]
"dmitry-brazhenko/SharpToken" ["l"="5.253,-9.014"]
"awaescher/OllamaSharp" ["l"="-44.246,6.448"]
"geffzhang/awesome-semantickernel" ["l"="-44.135,6.41"]
"itsnine/yolov5-onnxruntime" ["l"="53.516,32.825"]
"leimao/ONNX-Runtime-Inference" ["l"="60.046,11.343"]
"xlite-dev/lite.ai.toolkit" ["l"="50.235,29.859"]
"onnx/models" ["l"="50.143,29.815"]
"onnx/onnx-tensorrt" ["l"="53.248,32.637"]
"open-mmlab/mmdeploy" ["l"="50.347,29.856"]
"mosecorg/mosec" ["l"="-44.324,6.551"]
"NaomiProject/Naomi" ["l"="-44.329,6.528"]
"StarmoonAI/Starmoon" ["l"="-44.343,6.538"]
"kitops-ml/kitops" ["l"="-44.359,6.52"]
"tensorlakeai/indexify" ["l"="-44.353,6.559"]
"dstackai/dstack" ["l"="-44.343,6.582"]
"PrefectHQ/ControlFlow" ["l"="-44.404,6.6"]
"JuliaDynamics/Agents.jl" ["l"="21.983,16.71"]
"yokingma/search_with_ai" ["l"="-44.373,6.538"]
"tensorchord/envd" ["l"="8.103,-9.459"]
"michaelfeil/infinity" ["l"="41.178,0.853"]
"devflowinc/trieve" ["l"="-44.4,6.551"]
"KruxAI/ragbuilder" ["l"="41.314,0.488"]
"David-Kunz/gen.nvim" ["l"="-12.804,-9.807"]
"speaches-ai/speaches" ["l"="40.474,3.154"]
"triton-inference-server/onnxruntime_backend" ["l"="39.225,-0.769"]
"bcakmakoglu/revue-draggable" ["l"="-44.652,6.684"]
"carlosjorger/fluid-dnd" ["l"="-44.62,6.676"]
"zenml-io/zenml" ["l"="45.223,25.876"]
"evidentlyai/evidently" ["l"="45.243,25.941"]
"deepchecks/deepchecks" ["l"="45.231,26.033"]
"topoteretes/cognee" ["l"="41.224,0.456"]
"fugue-project/fugue" ["l"="-0.414,14.815"]
"skypilot-org/skypilot" ["l"="38.822,-0.668"]
"PrefectHQ/prefect-aws" ["l"="-44.48,6.659"]
"Pocket/data-flows" ["l"="-44.501,6.707"]
"anna-geller/prefect-deployment-patterns" ["l"="-44.481,6.711"]
"anna-geller/prefect-dataplatform" ["l"="-44.464,6.722"]
"PrefectHQ/prefect-dbt" ["l"="-44.485,6.652"]
"anna-geller/prefect-docker-deployment" ["l"="-44.454,6.714"]
"radbrt/prefect_flows" ["l"="-44.443,6.69"]
"PrefectHQ/prefect-docker" ["l"="-44.545,6.682"]
"NVIDIA/trt-samples-for-hackathon-cn" ["l"="53.301,32.657"]
"ModelTC/MQBench" ["l"="52.551,33.403"]
"nndeploy/nndeploy" ["l"="53.413,32.627"]
"shouxieai/tensorRT_Pro" ["l"="53.346,32.653"]
"zerollzeng/tiny-tensorrt" ["l"="53.231,32.666"]
"quic/aimet" ["l"="52.582,33.376"]
"VainF/Torch-Pruning" ["l"="52.647,33.355"]
"OML-Team/open-metric-learning" ["l"="-44.321,26.156"]
"microsoft/nn-Meter" ["l"="52.686,34.014"]
"senysenyseny16/prokki" ["l"="-44.258,5.963"]
"zchrissirhcz/cmake_examples" ["l"="49.607,30.796"]
"FeiGeChuanShu/segment-anything-ncnn" ["l"="49.62,30.823"]
"elsa-workflows/elsa-core" ["l"="-34.419,-1.096"]
"fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat" ["l"="-32.733,0.714"]
"radzenhq/radzen-blazor" ["l"="-36.64,-1.01"]
"dotnetcore/DotnetSpider" ["l"="-32.88,0.757"]
"essensoft/paylinks" ["l"="-32.79,0.801"]
"ldqk/Masuit.Tools" ["l"="-32.862,0.662"]
"spectreconsole/spectre.console" ["l"="-34.626,-1.043"]
"abpframework/abp" ["l"="-34.243,-1.244"]
"microsoft/fluentui-blazor" ["l"="-36.651,-0.985"]
"PrefectHQ/prefect-shell" ["l"="-44.511,6.667"]
"PrefectHQ/prefect-postgres" ["l"="-44.505,6.645"]
"PrefectHQ/prefect-airbyte" ["l"="-44.518,6.649"]
"PrefectHQ/prefect-openmetadata" ["l"="-44.504,6.636"]
"PrefectHQ/prefect-twilio" ["l"="-44.504,6.652"]
"PrefectHQ/prefect-sendgrid" ["l"="-44.509,6.649"]
"PrefectHQ/prefect-great-expectations" ["l"="-44.512,6.658"]
"PrefectHQ/prefect-twitter" ["l"="-44.505,6.66"]
"AlessandroLollo/prefect-cubejs" ["l"="-44.512,6.642"]
"PrefectHQ/prefect-azure" ["l"="-44.498,6.646"]
"andreadottor/Umarell" ["l"="-43.949,6.476"]
"marcominerva/OperationResults" ["l"="-43.954,6.494"]
"ose-net/yesql.net" ["l"="-33.204,-0.43"]
"PrefectHQ/prefect-ray" ["l"="-44.514,6.632"]
"PrefectHQ/prefect-snowflake" ["l"="-44.491,6.641"]
"PrefectHQ/prefect-github" ["l"="-44.523,6.648"]
"PrefectHQ/prefect-slack" ["l"="-44.549,6.646"]
"PrefectHQ/prefect-sqlalchemy" ["l"="-44.569,6.66"]
"PrefectHQ/prefect-gcp" ["l"="-44.523,6.636"]
"blazordevita/BlazorDevIta.ERP" ["l"="-43.925,6.483"]
"sandrohanea/whisper.net" ["l"="-44.247,6.4"]
"sandrohanea/echosharp" ["l"="-44.297,6.401"]
"sdcb/OpenVINO.NET" ["l"="-32.529,0.748"]
"dotnet/TorchSharp" ["l"="-34.999,-2.983"]
"Ruslan-B/FFmpeg.AutoGen" ["l"="-35.065,-1.541"]
"takuya-takeuchi/FaceRecognitionDotNet" ["l"="-32.588,0.801"]
"microsoft/ai-dev-gallery" ["l"="-44.195,6.308"]
"rosenbjerg/FFMpegCore" ["l"="-35.033,-1.485"]
"chinware/AtomUI" ["l"="-36.209,2.484"]
"sdcb/PaddleSharp" ["l"="-32.607,0.762"]
"feiyun0112/Gradio.Net" ["l"="-32.549,0.652"]
"raoyutian/PaddleOCRSharp" ["l"="-32.634,0.752"]
"bezzad/Downloader" ["l"="-36.416,1.007"]
"PawanOsman/ChatGPT-Official" ["l"="46.183,1.68"]
"PawanOsman/chatgpt-io" ["l"="46.194,1.649"]
"BruceQiu1996/NChatGPTRev" ["l"="-44.084,6.551"]
"PINTO0309/simple-onnx-processing-tools" ["l"="49.767,29.99"]
"MegEngine/MegCC" ["l"="37.045,0.917"]
"tsingmicro-toolchain/OnnxSlim" ["l"="37.049,0.456"]
"scailable/sclblonnx" ["l"="-44.18,5.974"]
"gmalivenko/onnx-opcounter" ["l"="-44.171,5.998"]
"saurabh-shandilya/onnx-utils" ["l"="-44.202,5.976"]
"DerryHub/BEVFormer_tensorrt" ["l"="64.608,11.319"]
"NVIDIA/Deep-Learning-Accelerator-SW" ["l"="53.329,32.568"]
"Cledev-Limited/Cledev.OpenAI.Studio" ["l"="-44.141,6.577"]
"anna-geller/prefect-aws-lambda" ["l"="-44.44,6.734"]
"anna-geller/prefect-streaming" ["l"="-44.463,6.742"]
"marcominerva/TinyCMS" ["l"="-43.903,6.529"]
"marcominerva/SearchGPT" ["l"="-43.924,6.515"]
"SciSharp/TensorFlow.NET" ["l"="-34.822,-1.488"]
"AIDotNet/AntSK" ["l"="52.562,3.156"]
"dotnet/aspire" ["l"="-34.309,-0.993"]
"microsoft/chat-copilot" ["l"="-44.336,7.215"]
"Azure-Samples/miyagi" ["l"="-44.39,7.2"]
"microsoft/semantic-kernel-starters" ["l"="-44.098,6.38"]
"dotnet/ai-samples" ["l"="-44.165,6.348"]
"microsoft/semantic-kernel" ["l"="40.359,0.332"]
"MicrosoftDocs/semantic-kernel-docs" ["l"="-44.108,6.411"]
"Azure-Samples/azure-search-openai-demo-csharp" ["l"="-44.371,7.259"]
"microsoft/SemanticKernelCookBook" ["l"="-44.114,6.393"]
"kbeaugrand/SemanticKernel.Assistants" ["l"="-44.084,6.428"]
"adamlui/chatgpt-infinity" ["l"="-44.304,6.745"]
"adamlui/ai-web-extensions" ["l"="-44.291,6.76"]
"adamlui/chatgpt-widescreen" ["l"="-44.298,6.779"]
"adamlui/chatgpt-auto-continue" ["l"="-44.315,6.769"]
"adamlui/chatgpt-auto-refresh" ["l"="-44.311,6.787"]
"adamlui/userscripts" ["l"="-44.278,6.779"]
"KudoAI/bravegpt" ["l"="-44.264,6.752"]
"KudoAI/googlegpt" ["l"="-44.336,6.756"]
"KudoAI/duckduckgpt" ["l"="-44.247,6.773"]
"adamlui/autoclear-chatgpt-history" ["l"="-44.294,6.801"]
"microsoft/CopilotHackathon" ["l"="-44.036,6.179"]
"microsoft/CopilotAdventures" ["l"="-44.061,6.205"]
"KudoAI/chatgpt.js" ["l"="-44.331,6.625"]
"a16z-infra/ai-getting-started" ["l"="41.049,-3.962"]
"junhoyeo/threads-api" ["l"="38.258,-1.569"]
"rasbt/scipy2023-deeplearning" ["l"="41.064,34.974"]
"KudoAI/chatgpt.js-greasemonkey-starter" ["l"="-44.315,6.659"]
"Etesam913/react-magic-motion" ["l"="-3.508,-30.067"]
"SkalskiP/awesome-chatgpt-code-interpreter-experiments" ["l"="40.984,-3.834"]
"madkarmaa/automatic-chatgpt-dan" ["l"="44.27,0.542"]
"OcularEngineering/ocular" ["l"="3.762,13.085"]
"getcorefin/corefin" ["l"="3.776,13.054"]
"lumina-ai-inc/chunkr" ["l"="41.334,0.315"]
"relari-ai/continuous-eval" ["l"="3.732,13.023"]
"quarylabs/quary" ["l"="3.779,12.993"]
"getzep/zep" ["l"="40.993,0.671"]
"tolgee/tolgee-platform" ["l"="16.012,-10.119"]
"Helicone/helicone" ["l"="40.994,0.57"]
"devflowinc/firecrawl-simple" ["l"="-44.47,6.531"]
"pretzelai/pretzelai" ["l"="3.735,12.998"]
"Azure-Samples/semantic-kernel-rag-chat" ["l"="-44.076,6.387"]
"johnmaeda/SK-Recipes" ["l"="-44.074,6.367"]
"Azure/intelligent-app-workshop" ["l"="-44.407,7.177"]
"adhurwit/SemanticQuestion10K" ["l"="-44.047,6.384"]
"matthewbolanos/sk-v1-proposal" ["l"="-44.067,6.404"]
"jimbobbennett/console-gpt" ["l"="-44.05,6.366"]
"microsoft/typechat.net" ["l"="-44.091,6.41"]
"rvinothrajendran/MicrosoftSemanticKernelSamples" ["l"="-44.05,6.41"]
"kbeaugrand/SemanticKernel.Connectors.Memory.SqlServer" ["l"="-44.081,6.446"]
"Zenohm/Friday" ["l"="35.772,3.272"]
"jeastham1993/langchain-dotnet" ["l"="-44.275,6.41"]
"afrise/MCPSharp" ["l"="-44.239,6.376"]
"tryAGI/Ollama" ["l"="-44.271,6.437"]
"qdrant/qdrant-dotnet" ["l"="40.76,1.467"]
"Jenscaasen/UniversalLLMFunctionCaller" ["l"="-44.284,6.355"]
"jondot/awesome-rust-llm" ["l"="-8.692,-4.393"]
"edwinkys/oasysdb" ["l"="-8.716,-4.477"]
"marcominerva/DatabaseGPT" ["l"="-44.017,6.527"]
"marcominerva/SqlDatabaseVectorSearch" ["l"="-44.023,6.473"]
"marcominerva/OpenAIEmbeddingSample" ["l"="-44.042,6.452"]
"uhub/awesome-chatgpt" ["l"="-44.267,6.838"]
"kinfey/SemanticKernelCookBook" ["l"="-44.1,6.452"]
"Senparc/Senparc.AI" ["l"="-44.278,6.375"]
"qmatteoq/SemanticKernel-Demos" ["l"="-44.07,6.424"]
"PederHP/mcpdotnet" ["l"="-44.226,6.356"]
"BLaZeKiLL/Codeblaze.SemanticKernel" ["l"="-44.114,6.444"]
"HillPhelmuth/AdventuresInSemanticKernel" ["l"="-44.108,6.434"]
"elbruno/semantickernel-localLLMs" ["l"="-44.166,6.444"]
"NeuCharFramework/Senparc.Xncf.OpenAI" ["l"="-44.305,6.373"]
"PrefectHQ/langchain-prefect" ["l"="-44.488,6.628"]
"zzstoatzz/prefect-memory-profiling" ["l"="-44.498,6.597"]
"damienbod/bff-aspnetcore-angular" ["l"="-43.873,6.311"]
"damienbod/bff-openiddict-aspnetcore-angular" ["l"="-43.853,6.287"]
"damienbod/SeparatingApisPerSecurityLevel" ["l"="-43.842,6.307"]
"kinfey/dotNETOAIBooks" ["l"="-44.037,6.569"]
"kinfey/MSFabricCopilotWorkshop" ["l"="-44.06,6.525"]
"magols/BlazorGPT" ["l"="-43.955,6.445"]
"marcominerva/KernelMemoryService" ["l"="-44.002,6.446"]
"Azure-AI-Community/Microsoft-Semantic-Kernel-Community-dotnet" ["l"="-44.015,6.406"]
"dotnet/eShopSupport" ["l"="-44.124,6.322"]
"microsoft/Generative-AI-for-beginners-dotnet" ["l"="-44.149,6.324"]
"dotnet/aspire-samples" ["l"="-44.09,6.311"]
"dotnet-smartcomponents/smartcomponents" ["l"="-44.139,6.352"]
"SteveSandersonMS/dotnet-ai-workshop" ["l"="-44.097,6.339"]
"davidfowl/aspire-ai-chat-demo" ["l"="-44.129,6.296"]
"dotnet/smartcomponents" ["l"="-44.173,6.325"]
"eidolon-ai/eidolon" ["l"="-44.375,6.473"]
"DataBassGit/AgentForge" ["l"="41.014,-3.73"]
"MarianoMolina/project_alice" ["l"="39.935,-2.171"]
"Eng-Elias/CrewAI-Visualizer" ["l"="40.086,-2.029"]
"rnadigital/agentcloud" ["l"="40.015,-2"]
"kitops-ml/pykitops" ["l"="-44.351,6.493"]
"ptonlix/LangChain-SearXNG" ["l"="-44.419,6.522"]
"memfreeme/memfree" ["l"="41.279,0.298"]
"fatwang2/search4all" ["l"="45.514,0.474"]
"LLM-Red-Team/metaso-free-api" ["l"="45.542,0.532"]
"rashadphz/farfalle" ["l"="41.063,0.364"]
"onenov/search_with_ai" ["l"="-44.394,6.51"]
"ai365vip/chat-api" ["l"="45.49,0.541"]
"fatwang2/search2ai" ["l"="45.535,0.463"]
"vastxie/99AI" ["l"="45.532,2.025"]
"MartialBE/one-hub" ["l"="45.558,0.569"]
"miurla/morphic" ["l"="40.998,0.269"]
"SmartSchoolAI/ai-to-pptx" ["l"="-2.956,-33.512"]
"VoAPI/VoAPI" ["l"="45.584,0.531"]
"microsoft/vscode-ai-toolkit" ["l"="-44.19,6.267"]
"microsoft/genaiscript" ["l"="41.126,0.143"]
"microsoft/TinyTroupe" ["l"="41.093,0.167"]
"aymenfurter/microagents" ["l"="41.282,0.858"]
"microsoft/azure-genai-design-patterns" ["l"="-44.377,7.211"]
"collabora/WhisperFusion" ["l"="40.598,3.119"]
"NickSwardh/YoloDotNet" ["l"="-32.464,0.75"]
"Azure-Samples/graphrag-accelerator" ["l"="-44.405,7.319"]
"NVlabs/VILA" ["l"="47.441,30.034"]
"huggingface/smollm" ["l"="38.717,-0.386"]
"lm-sys/RouteLLM" ["l"="41.042,0.536"]
"microsoft/sample-app-aoai-chatGPT" ["l"="-44.361,7.24"]
"microsoft/prompty" ["l"="-44.387,7.159"]
"pytorch/torchtune" ["l"="38.819,-0.505"]
"meta-llama/llama-cookbook" ["l"="40.401,0.438"]
"kitbagjs/router" ["l"="-44.536,6.658"]
"CommunityToolkit/Aspire" ["l"="-44.084,6.283"]
"prom3theu5/aspirational-manifests" ["l"="-34.411,-0.734"]
"dotnet/docs-aspire" ["l"="-44.102,6.284"]
"thangchung/practical-dotnet-aspire" ["l"="-44.016,6.338"]
"dotnet-presentations/dotnet-aspire-workshop" ["l"="-44.03,6.283"]
"dotnet-presentations/eshop-app-workshop" ["l"="-44.044,6.267"]
"JasperFx/wolverine" ["l"="-34.375,-0.829"]
"dotnet/blazor-samples" ["l"="-36.579,-1.036"]
"Azure-Samples/eShopOnAzure" ["l"="-34.552,-3.192"]
"davidfowl/TodoApp" ["l"="-34.177,-0.933"]
"Blazor-Diagrams/Blazor.Diagrams" ["l"="-36.536,-1.004"]
"Giorgi/EFCore.Visualizer" ["l"="-34.289,-0.751"]
"SteveSandersonMS/RealtimeAIApp" ["l"="-44.114,6.344"]
"spark-dotnet/framework" ["l"="-34.265,-0.745"]
"CodeBeamOrg/CodeBeam.MudBlazor.Extensions" ["l"="-36.553,-1.05"]
"apexcharts/Blazor-ApexCharts" ["l"="-36.559,-1.014"]
"mrpmorris/Fluxor" ["l"="-36.583,-0.968"]
"IEvangelist/blazorators" ["l"="-36.457,-1.027"]
"dotnetConf/FocusOnAI_24" ["l"="-44.06,6.311"]
"NikiforovAll/keycloak-authorization-services-dotnet" ["l"="-33.922,-1.115"]
"PrefectHQ/marvin" ["l"="41.256,-3.98"]
"CommunityToolkit/dotnet" ["l"="-36.682,0.959"]
"dotnet/eShop" ["l"="-34.111,-1.06"]
"riok/mapperly" ["l"="-34.445,-0.827"]
"jonowilliams26/StructuredMinimalApi" ["l"="-43.931,6.404"]
"openvinotoolkit/openvino.genai" ["l"="64.097,-2.484"]
"wejoncy/QLLM" ["l"="38.74,-0.204"]
"google-ai-edge/ai-edge-torch" ["l"="49.817,29.931"]
"microsoft/T-MAC" ["l"="38.909,-0.291"]
"huggingface/optimum-intel" ["l"="64.107,-2.454"]
"intel/intel-npu-acceleration-library" ["l"="64.076,-2.433"]
"microsoft/Llama-2-Onnx" ["l"="37.057,0.687"]
"foxminchan/BookWorm" ["l"="-43.988,6.318"]
"erwinkramer/bank-api" ["l"="-43.931,6.344"]
"mehdihadeli/food-delivery-modular-monolith" ["l"="-34.316,-3.248"]
"mikolaj-jankowski/Clean-Architecture-And-Domain-Driven-Design-Solution-Template" ["l"="-43.956,6.331"]
"lofcz/LlmTornado" ["l"="-44.027,6.431"]
"bradygaster/AugmentR" ["l"="-44.059,6.459"]
"Azure-Samples/semantic-kernel-advanced-usage" ["l"="-44.412,7.112"]
"Azure/AI-in-a-Box" ["l"="-44.418,7.204"]
"Azure-Samples/semantic-kernel-workshop" ["l"="-44.435,7.121"]
"Ming-jiayou/SimpleRAG" ["l"="-44.307,6.334"]
"microsoft/mastering-github-copilot-for-dotnet-csharp-developers" ["l"="-44.084,6.236"]
"davidfowl/CommandAndControl" ["l"="-44.152,6.259"]
"StephenCleary/LocalTelemetry" ["l"="-43.837,6.36"]
"petabridge/dotnet-grafana-dashboards" ["l"="-43.876,6.355"]
"Azure-Samples/langchainjs-quickstart-demo" ["l"="-44.098,6.191"]
"Azure-Samples/ollama-javascript-playground" ["l"="-44.091,6.163"]
"espressif/esp-webrtc-solution" ["l"="-44.413,6.493"]
"tonybaloney/CSnakes" ["l"="-44.226,6.32"]
"xoofx/ultra" ["l"="-34.562,-0.76"]
"henon/Python.Included" ["l"="-35.056,-2.919"]
"eiriktsarpalis/PolyType" ["l"="-32.012,-0.588"]
"sveinungf/spreadcheetah" ["l"="-34.609,-0.661"]
"nietras/Sep" ["l"="-34.527,-0.711"]
"Dreamescaper/BlazorBindings.Maui" ["l"="-37.224,-2.349"]
"microsoft/generative-ai-with-javascript" ["l"="-44.111,6.241"]
"Azure-Samples/serverless-chat-langchainjs" ["l"="-44.398,7.136"]
"jhaygood86/PeachPDF" ["l"="-36.643,2.304"]
"LumexUI/lumexui" ["l"="-36.579,2.337"]
"SteveDunn/Vogen" ["l"="-34.49,-0.734"]
"CharlieDigital/dn8-modular-monolith" ["l"="-43.898,6.327"]
"ZiggyCreatures/FusionCache" ["l"="-34.415,-0.851"]
"alirezanet/Gridify" ["l"="-34.348,-0.792"]
"LSXPrime/Aegis" ["l"="-36.483,2.367"]
"NimblePros/eShopOnWeb" ["l"="-34.508,-3.189"]
"evgenirusev/.NET-Domain-Driven-Design-Template" ["l"="-34.576,-3.17"]
"Hexastack/Hexabot" ["l"="-44.433,6.449"]
"Hexastack/eazychart" ["l"="-44.461,6.429"]
"swirlai/swirl-search" ["l"="40.967,0.282"]
"LangbaseInc/BaseAI" ["l"="41.357,0.333"]
"CommunityToolkit/Windows" ["l"="-37.56,0.907"]
"CommunityToolkit/Labs-Windows" ["l"="-37.521,0.909"]
"dotMorten/WinUIEx" ["l"="-37.541,0.922"]
"w-ahmad/WinUI.TableView" ["l"="-37.567,0.866"]
"microsoft/WindowsAppSDK-Samples" ["l"="-37.54,0.973"]
"AIDotNet/koala-ai" ["l"="-32.518,0.653"]
"HavenDV/H.NotifyIcon" ["l"="-37.53,0.878"]
"unvell/ReoGrid" ["l"="-36.41,1.071"]
"salty-flower/ModelContextProtocol.NET" ["l"="-44.261,6.349"]
"ciniml/openai-realtime-embedded-sdk" ["l"="-44.453,6.482"]
"microsoft/micronaire" ["l"="-44.263,6.322"]
"m5stack/openai-realtime-embedded-sdk" ["l"="-44.472,6.476"]
}