digraph G {
"uber-research/deep-neuroevolution" -> "openai/evolution-strategies-starter" ["e"=1]
"uber-research/deep-neuroevolution" -> "uber-research/PyTorch-NEAT"
"uber-research/deep-neuroevolution" -> "uber-research/safemutations"
"uber-research/deep-neuroevolution" -> "CodeReclaimers/neat-python"
"uber-research/deep-neuroevolution" -> "hardmaru/estool" ["e"=1]
"uber-research/deep-neuroevolution" -> "ShawK91/Evolutionary-Reinforcement-Learning" ["e"=1]
"uber-research/deep-neuroevolution" -> "uber-research/go-explore" ["e"=1]
"uber-research/deep-neuroevolution" -> "google-deepmind/bsuite" ["e"=1]
"uber-research/deep-neuroevolution" -> "google-deepmind/dm_control" ["e"=1]
"uber-research/deep-neuroevolution" -> "uber-research/differentiable-plasticity"
"uber-research/deep-neuroevolution" -> "pathak22/noreward-rl" ["e"=1]
"uber-research/deep-neuroevolution" -> "tensorforce/tensorforce" ["e"=1]
"uber-research/deep-neuroevolution" -> "rll/rllab" ["e"=1]
"uber-research/deep-neuroevolution" -> "CMA-ES/pycma" ["e"=1]
"uber-research/deep-neuroevolution" -> "williamFalcon/DeepRLHacks" ["e"=1]
"giacomelli/GeneticSharp" -> "colgreen/sharpneat" ["e"=1]
"giacomelli/GeneticSharp" -> "Sergio0694/NeuralNetwork.NET" ["e"=1]
"giacomelli/GeneticSharp" -> "mdabros/SharpLearning" ["e"=1]
"giacomelli/GeneticSharp" -> "cbovar/ConvNetSharp" ["e"=1]
"SciSharp/Gym.NET" -> "SciSharp/OpenAIGym.NET"
"SciSharp/Gym.NET" -> "SciSharp/Ludwig.NET"
"SciSharp/Gym.NET" -> "SciSharp/CherubNLP"
"SciSharp/Gym.NET" -> "SciSharp/Torch.NET"
"SciSharp/Gym.NET" -> "asieradzk/RL_Matrix"
"SciSharp/Gym.NET" -> "SciSharp/ICSharpCore"
"pytorch/hub" -> "weightagnostic/weightagnostic.github.io" ["e"=1]
"SciSharp/TensorFlow.NET" -> "SciSharp/NumSharp" ["e"=1]
"SciSharp/TensorFlow.NET" -> "SciSharp/Keras.NET" ["e"=1]
"SciSharp/TensorFlow.NET" -> "dotnet/TorchSharp" ["e"=1]
"SciSharp/TensorFlow.NET" -> "SciSharp/SciSharp-Stack-Examples" ["e"=1]
"SciSharp/TensorFlow.NET" -> "SciSharp/Numpy.NET" ["e"=1]
"SciSharp/TensorFlow.NET" -> "SciSharp/Pandas.NET" ["e"=1]
"dotnet/TorchSharp" -> "dotnet/TorchSharpExamples"
"dotnet/TorchSharp" -> "SciSharp/TensorFlow.NET" ["e"=1]
"dotnet/TorchSharp" -> "DiffSharp/DiffSharp" ["e"=1]
"dotnet/TorchSharp" -> "SciSharp/Torch.NET"
"dotnet/TorchSharp" -> "SciSharp/NumSharp"
"dotnet/TorchSharp" -> "SciSharp/LLamaSharp" ["e"=1]
"dotnet/TorchSharp" -> "SciSharp/Keras.NET"
"dotnet/TorchSharp" -> "SciSharp/Numpy.NET"
"dotnet/TorchSharp" -> "dotnet/machinelearning" ["e"=1]
"dotnet/TorchSharp" -> "migueldeicaza/TensorFlowSharp" ["e"=1]
"dotnet/TorchSharp" -> "SciSharp/SciSharp-Stack-Examples"
"dotnet/TorchSharp" -> "plotly/Plotly.NET" ["e"=1]
"dotnet/TorchSharp" -> "shimat/opencvsharp" ["e"=1]
"dotnet/TorchSharp" -> "dotnet/Silk.NET" ["e"=1]
"dotnet/TorchSharp" -> "dotnet/machinelearning-samples" ["e"=1]
"navneet-nmk/pytorch-rl" -> "higgsfield/Imagination-Augmented-Agents" ["e"=1]
"pythonnet/pythonnet" -> "SciSharp/NumSharp" ["e"=1]
"pythonnet/pythonnet" -> "SciSharp/Numpy.NET" ["e"=1]
"ddehueck/pytorch-neat" -> "uber-research/PyTorch-NEAT"
"ddehueck/pytorch-neat" -> "AdrienLE/neuroevo"
"ddehueck/pytorch-neat" -> "crisbodnar/TensorFlow-NEAT"
"microsoft/BlingFire" -> "curiosity-ai/catalyst" ["e"=1]
"jeffheaton/aifh" -> "jeffheaton/encog-dotnet-core" ["e"=1]
"hardmaru/estool" -> "uber-research/deep-neuroevolution" ["e"=1]
"SciSharp/NumSharp" -> "SciSharp/Numpy.NET"
"SciSharp/NumSharp" -> "SciSharp/Pandas.NET"
"SciSharp/NumSharp" -> "SciSharp/TensorFlow.NET" ["e"=1]
"SciSharp/NumSharp" -> "SciSharp/Keras.NET"
"SciSharp/NumSharp" -> "SciSharp/SharpCV"
"SciSharp/NumSharp" -> "dotnet/TorchSharp"
"SciSharp/NumSharp" -> "mathnet/mathnet-numerics" ["e"=1]
"SciSharp/NumSharp" -> "Sergio0694/NeuralNetwork.NET"
"SciSharp/NumSharp" -> "SciSharp/BotSharp" ["e"=1]
"SciSharp/NumSharp" -> "henon/Python.Included"
"SciSharp/NumSharp" -> "SciSharp/Torch.NET"
"SciSharp/NumSharp" -> "SciSharp/SciSharp-Stack-Examples"
"SciSharp/NumSharp" -> "migueldeicaza/TensorFlowSharp" ["e"=1]
"SciSharp/NumSharp" -> "pythonnet/pythonnet" ["e"=1]
"SciSharp/NumSharp" -> "dotnet/spark" ["e"=1]
"SciSharp/CherubNLP" -> "SciSharp/Ludwig.NET"
"SciSharp/CherubNLP" -> "Oceania2018/Quickflow"
"SciSharp/CherubNLP" -> "SciSharp/protobuf.Text"
"SciSharp/CherubNLP" -> "SciSharp/Bigtree.Algorithm"
"anagabandi/nn_dynamics" -> "higgsfield/Imagination-Augmented-Agents" ["e"=1]
"ctallec/world-models" -> "higgsfield/Imagination-Augmented-Agents" ["e"=1]
"flxsosa/DeepHyperNEAT" -> "ukuleleplayer/pureples"
"jeffheaton/encog-java-core" -> "jeffheaton/encog-dotnet-core" ["e"=1]
"amaggiulli/QLNet" -> "SciSharp/Pandas.NET" ["e"=1]
"henon/Python.Included" -> "SciSharp/Numpy.NET"
"henon/Python.Included" -> "SciSharp/Pandas.NET"
"henon/Python.Included" -> "SciSharp/NumSharp"
"henon/Python.Included" -> "henon/pythonnet_netstandard"
"henon/Python.Included" -> "yagweb/pythonnetLab"
"henon/Python.Included" -> "SciSharp/Keras.NET"
"henon/Python.Included" -> "SciSharp/SciSharp-Stack-Examples"
"henon/Python.Included" -> "SciSharp/SharpCV"
"henon/Python.Included" -> "SciSharp/Torch.NET"
"henon/Python.Included" -> "plotly/Plotly.NET" ["e"=1]
"henon/Python.Included" -> "tonybaloney/CSnakes" ["e"=1]
"henon/Python.Included" -> "mdabros/SharpLearning"
"SciSharp/Numpy.NET" -> "SciSharp/NumSharp"
"SciSharp/Numpy.NET" -> "SciSharp/Pandas.NET"
"SciSharp/Numpy.NET" -> "SciSharp/Keras.NET"
"SciSharp/Numpy.NET" -> "henon/Python.Included"
"SciSharp/Numpy.NET" -> "SciSharp/Torch.NET"
"SciSharp/Numpy.NET" -> "SciSharp/SharpCV"
"SciSharp/Numpy.NET" -> "SciSharp/TensorFlow.NET" ["e"=1]
"SciSharp/Numpy.NET" -> "Sergio0694/NeuralNetwork.NET"
"SciSharp/Numpy.NET" -> "SciSharp/SciSharp-Stack-Examples"
"SciSharp/Numpy.NET" -> "SciSharp/SciSharpCube"
"SciSharp/Numpy.NET" -> "SciSharp/Matplotlib.Net"
"SciSharp/Numpy.NET" -> "curiosity-ai/catalyst"
"SciSharp/Numpy.NET" -> "dotnet/TorchSharp"
"SciSharp/Numpy.NET" -> "Quansight-Labs/numpy.net"
"SciSharp/Numpy.NET" -> "mathnet/mathnet-numerics" ["e"=1]
"weightagnostic/weightagnostic.github.io" -> "google/brain-tokyo-workshop"
"weightagnostic/weightagnostic.github.io" -> "higgsfield/Imagination-Augmented-Agents"
"weightagnostic/weightagnostic.github.io" -> "AnjieCheng/OctaveConv-Pytorch" ["e"=1]
"Helpsypoo/primerpython" -> "CodeReclaimers/neat-python" ["e"=1]
"uber-research/differentiable-plasticity" -> "uber-research/backpropamine"
"uber-research/differentiable-plasticity" -> "ThomasMiconi/LearningToLearnBOHP"
"uber-research/differentiable-plasticity" -> "enajx/HebbianMetaLearning"
"uber-research/differentiable-plasticity" -> "raphaelholca/hebbianCNN"
"uber-research/differentiable-plasticity" -> "ShayanPersonal/hebbian-masks"
"techwithtim/NEAT-Flappy-Bird" -> "CodeReclaimers/neat-python" ["e"=1]
"google/brain-tokyo-workshop" -> "weightagnostic/weightagnostic.github.io"
"google/brain-tokyo-workshop" -> "uber-research/PyTorch-NEAT"
"google/brain-tokyo-workshop" -> "CodeReclaimers/neat-python"
"google/brain-tokyo-workshop" -> "google/evojax" ["e"=1]
"google/brain-tokyo-workshop" -> "hardmaru/slimevolleygym" ["e"=1]
"google/brain-tokyo-workshop" -> "hardmaru/estool" ["e"=1]
"google/brain-tokyo-workshop" -> "google-deepmind/bsuite" ["e"=1]
"google/brain-tokyo-workshop" -> "danijar/dreamerv2" ["e"=1]
"google/brain-tokyo-workshop" -> "Farama-Foundation/Minigrid" ["e"=1]
"google/brain-tokyo-workshop" -> "google-deepmind/scalable_agent" ["e"=1]
"google/brain-tokyo-workshop" -> "uber-research/deep-neuroevolution"
"google/brain-tokyo-workshop" -> "astooke/rlpyt" ["e"=1]
"google/brain-tokyo-workshop" -> "google-deepmind/rlax" ["e"=1]
"google/brain-tokyo-workshop" -> "google-deepmind/open_spiel" ["e"=1]
"google/brain-tokyo-workshop" -> "google-research/planet" ["e"=1]
"SciSharp/BotSharp" -> "SciSharp/NumSharp" ["e"=1]
"jeffheaton/encog-dotnet-core" -> "jeffheaton/encog-dotnet-more-examples"
"jeffheaton/encog-dotnet-core" -> "jeffheaton/encog-sample-csharp"
"jeffheaton/encog-dotnet-core" -> "sethjuarez/numl"
"jeffheaton/encog-dotnet-core" -> "jeffheaton/encog-java-workbench" ["e"=1]
"jeffheaton/encog-dotnet-core" -> "jeffheaton/encog-java-core" ["e"=1]
"jeffheaton/encog-dotnet-core" -> "Sergio0694/NeuralNetwork.NET"
"jeffheaton/encog-dotnet-core" -> "zhongkaifu/CRFSharp"
"jeffheaton/encog-dotnet-core" -> "sergey-tihon/Stanford.NLP.NET"
"jeffheaton/encog-dotnet-core" -> "cbovar/ConvNetSharp"
"jeffheaton/encog-dotnet-core" -> "jeffheaton/encog-java-examples" ["e"=1]
"jeffheaton/encog-dotnet-core" -> "anastasios-stamoulis/deep-learning-with-csharp-and-cntk"
"jeffheaton/encog-dotnet-core" -> "accord-net/framework" ["e"=1]
"jeffheaton/encog-dotnet-core" -> "zhongkaifu/RNNSharp"
"jeffheaton/encog-dotnet-core" -> "trentsartain/Neural-Network"
"uber-research/backpropamine" -> "uber-research/differentiable-plasticity"
"fslaborg/Deedle" -> "SciSharp/Pandas.NET" ["e"=1]
"Quansight-Labs/numpy.net" -> "sinshu/numflat"
"trulyspinach/Unity-Neural-Network-Tanks-AI" -> "Blueteak/Unity-Neural-Network"
"trulyspinach/Unity-Neural-Network-Tanks-AI" -> "trulyspinach/ml-agents"
"dotnet/infer" -> "dotnet/TorchSharp" ["e"=1]
"dotnet/infer" -> "SciSharp/NumSharp" ["e"=1]
"dotnet/infer" -> "SciSharp/Keras.NET" ["e"=1]
"SciSharp/SiaNet" -> "kimeshan/mf-proto" ["e"=1]
"SciSharp/SiaNet" -> "kimeshan/mixpanel-puller" ["e"=1]
"SciSharp/SiaNet" -> "tech-quantum/sia-cog" ["e"=1]
"SciSharp/SiaNet" -> "TalEliyahu/PickALicense.com" ["e"=1]
"SciSharp/SiaNet" -> "Singapore-Tech-Entrepreneurs/XComment.io" ["e"=1]
"SciSharp/SiaNet" -> "deepakkumar1984/XrmToolBoxPlugins"
"SciSharp/SiaNet" -> "kimeshan/coderbyte"
"SciSharp/SiaNet" -> "kimeshan/json-parser"
"SciSharp/SiaNet" -> "ssocoin/ssocoin" ["e"=1]
"SciSharp/SiaNet" -> "TalEliyahu/BossBot" ["e"=1]
"SciSharp/SiaNet" -> "ProofSuite/proof-api-deprecated" ["e"=1]
"SciSharp/SiaNet" -> "MOBILINK-COIN/SmartContract" ["e"=1]
"SciSharp/SiaNet" -> "ProofSuite/proof-base-contracts" ["e"=1]
"SciSharp/SiaNet" -> "ProofSuite/tokensale-contracts" ["e"=1]
"SciSharp/SiaNet" -> "ProofSuite/whitepaper" ["e"=1]
"chrisstroemel/Simple" -> "uber-research/deep-neuroevolution" ["e"=1]
"uber-research/safemutations" -> "uber-research/deep-neuroevolution"
"uber-research/PyTorch-NEAT" -> "CodeReclaimers/neat-python"
"uber-research/PyTorch-NEAT" -> "ddehueck/pytorch-neat"
"uber-research/PyTorch-NEAT" -> "ukuleleplayer/pureples"
"uber-research/PyTorch-NEAT" -> "crisbodnar/TensorFlow-NEAT"
"uber-research/PyTorch-NEAT" -> "uber-research/deep-neuroevolution"
"uber-research/PyTorch-NEAT" -> "peter-ch/MultiNEAT"
"uber-research/PyTorch-NEAT" -> "PaulPauls/Tensorflow-Neuroevolution" ["e"=1]
"uber-research/PyTorch-NEAT" -> "google/brain-tokyo-workshop"
"uber-research/PyTorch-NEAT" -> "uber-research/safemutations"
"uber-research/PyTorch-NEAT" -> "schrum2/MM-NEAT"
"uber-research/PyTorch-NEAT" -> "google/evojax" ["e"=1]
"uber-research/PyTorch-NEAT" -> "PacktPublishing/Hands-on-Neuroevolution-with-Python"
"uber-research/PyTorch-NEAT" -> "flxsosa/DeepHyperNEAT"
"uber-research/PyTorch-NEAT" -> "EMI-Group/tensorneat" ["e"=1]
"uber-research/PyTorch-NEAT" -> "simondlevy/neat-gym"
"SciSharp/SciSharpCube" -> "SciSharp/Keras.NET"
"SciSharp/SciSharpCube" -> "SciSharp/Ludwig.NET"
"SciSharp/SciSharpCube" -> "SciSharp/CodeMinion"
"SciSharp/Keras.NET" -> "SciSharp/Numpy.NET"
"SciSharp/Keras.NET" -> "SciSharp/NumSharp"
"SciSharp/Keras.NET" -> "SciSharp/TensorFlow.NET" ["e"=1]
"SciSharp/Keras.NET" -> "Sergio0694/NeuralNetwork.NET"
"SciSharp/Keras.NET" -> "SciSharp/SharpCV"
"SciSharp/Keras.NET" -> "SciSharp/Pandas.NET"
"SciSharp/Keras.NET" -> "SciSharp/SciSharp-Stack-Examples"
"SciSharp/Keras.NET" -> "SciSharp/Torch.NET"
"SciSharp/Keras.NET" -> "SciSharp/Gym.NET"
"SciSharp/Keras.NET" -> "SciSharp/SiaNet"
"SciSharp/Keras.NET" -> "SciSharp/SciSharpCube"
"SciSharp/Keras.NET" -> "dotnet/TorchSharp"
"SciSharp/Keras.NET" -> "SciSharp/SciSharp"
"SciSharp/Keras.NET" -> "curiosity-ai/catalyst"
"SciSharp/Keras.NET" -> "henon/Python.Included"
"dajuric/accord-net-extensions" -> "dajuric/dot-imaging"
"dajuric/accord-net-extensions" -> "cureos/accord-samples"
"dajuric/accord-net-extensions" -> "cesarsouza/keras-sharp"
"bhrnjica/anndotnet" -> "jdermody/brightwire"
"dotnet/machinelearning-modelbuilder" -> "SciSharp/SharpCV"
"dotnet/machinelearning-modelbuilder" -> "SciSharp/Keras.NET"
"takuya-takeuchi/DlibDotNet" -> "cesarsouza/keras-sharp" ["e"=1]
"takuya-takeuchi/DlibDotNet" -> "emgucv/emgutf" ["e"=1]
"SciSharp/Pandas.NET" -> "SciSharp/NumSharp"
"SciSharp/Pandas.NET" -> "SciSharp/Numpy.NET"
"SciSharp/Pandas.NET" -> "SciSharp/Keras.NET"
"SciSharp/Pandas.NET" -> "SciSharp/Torch.NET"
"SciSharp/Pandas.NET" -> "fslaborg/Deedle" ["e"=1]
"SciSharp/Pandas.NET" -> "SciSharp/Gym.NET"
"SciSharp/Pandas.NET" -> "SciSharp/SciSharp-Stack-Examples"
"SciSharp/Pandas.NET" -> "henon/Python.Included"
"SciSharp/Pandas.NET" -> "SciSharp/SharpCV"
"SciSharp/Pandas.NET" -> "SciSharp/Plot.NET"
"SciSharp/Pandas.NET" -> "SciSharp/TensorFlow.NET" ["e"=1]
"SciSharp/Pandas.NET" -> "SciSharp/CherubNLP"
"SciSharp/Pandas.NET" -> "SciSharp/Matplotlib.Net"
"SciSharp/Pandas.NET" -> "SciSharp/SiaNet"
"SciSharp/Pandas.NET" -> "SciSharp/scikit-learn.net"
"zhongkaifu/Seq2SeqSharp" -> "zhongkaifu/RNNSharp"
"zhongkaifu/Seq2SeqSharp" -> "zhongkaifu/CRFSharp"
"zhongkaifu/Seq2SeqSharp" -> "zhongkaifu/Txt2Vec"
"zhongkaifu/Seq2SeqSharp" -> "jdermody/brightwire"
"zhongkaifu/Seq2SeqSharp" -> "Sergio0694/NeuralNetwork.NET"
"crisbodnar/TensorFlow-NEAT" -> "PaulPauls/Tensorflow-Neuroevolution" ["e"=1]
"crisbodnar/TensorFlow-NEAT" -> "uber-research/PyTorch-NEAT"
"crisbodnar/TensorFlow-NEAT" -> "ddehueck/pytorch-neat"
"crisbodnar/TensorFlow-NEAT" -> "PacktPublishing/Hands-on-Neuroevolution-with-Python"
"feiyun0112/machinelearning-samples.zh-cn" -> "SciSharp/TensorFlow.NET-Tutorials" ["e"=1]
"ar1st0crat/NWaves" -> "cbovar/ConvNetSharp" ["e"=1]
"colgreen/sharpneat-refactor" -> "colgreen/sharpneat"
"AlturosDestinations/Alturos.Yolo" -> "emgucv/emgutf" ["e"=1]
"AlturosDestinations/Alturos.Yolo" -> "SciSharp/SharpCV" ["e"=1]
"AlturosDestinations/Alturos.Yolo" -> "SciSharp/Keras.NET" ["e"=1]
"AlturosDestinations/Alturos.Yolo" -> "SciSharp/Torch.NET" ["e"=1]
"higgsfield/Imagination-Augmented-Agents" -> "yilundu/imagination_augmented_agents"
"Oceania2018/Quickflow" -> "SciSharp/Keras.NET"
"anastasios-stamoulis/deep-learning-with-csharp-and-cntk" -> "SciSharp/SiaNet"
"zhongkaifu/CRFSharp" -> "zhongkaifu/Txt2Vec"
"zhongkaifu/CRFSharp" -> "zhongkaifu/RNNSharp"
"Oceania2018/EntityFrameworkCore.BootKit" -> "Oceania2018/Quickflow"
"Oceania2018/EntityFrameworkCore.BootKit" -> "SciSharp/Keras.NET"
"SciSharp/Torch.NET" -> "SciSharp/Gym.NET"
"SciSharp/Torch.NET" -> "SciSharp/Numpy.NET"
"SciSharp/Torch.NET" -> "SciSharp/Keras.NET"
"SciSharp/Torch.NET" -> "dotnet/TorchSharp"
"SciSharp/Torch.NET" -> "SciSharp/Plot.NET"
"SciSharp/Torch.NET" -> "SciSharp/Pandas.NET"
"SciSharp/Torch.NET" -> "SciSharp/Ludwig.NET"
"SciSharp/Torch.NET" -> "SciSharp/SharpCV"
"SciSharp/Torch.NET" -> "SciSharp/ICSharpCore"
"SciSharp/Torch.NET" -> "SciSharp/NumSharp"
"SciSharp/Torch.NET" -> "Sergio0694/NeuralNetwork.NET"
"SciSharp/Torch.NET" -> "SciSharp/SciSharpCube"
"SciSharp/Torch.NET" -> "SciSharp/Matplotlib.Net"
"SciSharp/Torch.NET" -> "SciSharp/SiaNet"
"SciSharp/Torch.NET" -> "SciSharp/SciSharp-Stack-Examples"
"SciSharp/Plot.NET" -> "SciSharp/protobuf.Text"
"SciSharp/Plot.NET" -> "SciSharp/Matplotlib.Net"
"SciSharp/Plot.NET" -> "SciSharp/Keras.NET"
"Kawaian/SharpFace" -> "Kawaian/KelpNet"
"SciSharp/ICSharpCore" -> "SciSharp/protobuf.Text"
"GabrieleLagani/HebbianLearningThesis" -> "GabrieleLagani/HebbianPCA"
"GabrieleLagani/HebbianLearningThesis" -> "GabrieleLagani/HebbianLearning"
"SciSharp/Matplotlib.Net" -> "SciSharp/Plot.NET"
"SciSharp/Matplotlib.Net" -> "SciSharp/OpenAIGym.NET"
"SciSharp/Matplotlib.Net" -> "SciSharp/scikit-learn.net"
"SciSharp/OpenAIGym.NET" -> "SciSharp/Microcharts.Matplotlib"
"SciSharp/CodeMinion" -> "SciSharp/protobuf.Text"
"SciSharp/CodeMinion" -> "SciSharp/Keras.NET"
"SciSharp/Keras.NET" -> "Oceania2018/Quickflow"
"mathnet/mathnet-numerics" -> "SciSharp/NumSharp" ["e"=1]
"mlech26l/ncps" -> "google/brain-tokyo-workshop" ["e"=1]
"karpathy/recurrentjs" -> "hardmaru/backprop-neat-js" ["e"=1]
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/SharpCV"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/Keras.NET"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/TensorFlow.NET-Tutorials"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/TensorFlow.NET" ["e"=1]
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/Plot.NET"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/Pandas.NET"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/Numpy.NET"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/NumSharp"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/Gym.NET"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/SciSharpCube"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/Torch.NET"
"SciSharp/SciSharp-Stack-Examples" -> "dotnet/TorchSharp"
"SciSharp/SciSharp-Stack-Examples" -> "henon/Python.Included"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/ICSharpCore"
"SciSharp/SciSharp-Stack-Examples" -> "SciSharp/SciSharp.Models"
"hardmaru/slimevolleygym" -> "google/brain-tokyo-workshop" ["e"=1]
"enajx/HebbianMetaLearning" -> "julestalloen/pytorch-hebbian"
"enajx/HebbianMetaLearning" -> "GabrieleLagani/HebbianLearningThesis"
"enajx/HebbianMetaLearning" -> "ThomasMiconi/HebbianCNNPyTorch"
"MisterTea/HyperNEAT" -> "mhauskn/HyperNEAT"
"SciSharp/SharpCV" -> "SciSharp/SciSharp-Stack-Examples"
"SciSharp/SharpCV" -> "SciSharp/Keras.NET"
"SciSharp/SharpCV" -> "SciSharp/Numpy.NET"
"SciSharp/SharpCV" -> "SciSharp/NumSharp"
"SciSharp/SharpCV" -> "SciSharp/Torch.NET"
"SciSharp/SharpCV" -> "SciSharp/Gym.NET"
"SciSharp/SharpCV" -> "emgucv/emgutf"
"SciSharp/SharpCV" -> "SciSharp/Pandas.NET"
"SciSharp/SharpCV" -> "SciSharp/TensorFlow.NET-Tutorials"
"SciSharp/SharpCV" -> "SciSharp/CherubNLP"
"SciSharp/SharpCV" -> "SciSharp/CodeMinion"
"curiosity-ai/catalyst" -> "AlexPoint/OpenNlp"
"curiosity-ai/catalyst" -> "SciSharp/CherubNLP"
"curiosity-ai/catalyst" -> "sergey-tihon/Stanford.NLP.NET"
"curiosity-ai/catalyst" -> "SciSharp/Keras.NET"
"curiosity-ai/catalyst" -> "SciSharp/Numpy.NET"
"curiosity-ai/catalyst" -> "Sergio0694/NeuralNetwork.NET"
"curiosity-ai/catalyst" -> "SciSharp/TensorFlow.NET" ["e"=1]
"curiosity-ai/catalyst" -> "SciSharp/NumSharp"
"curiosity-ai/catalyst" -> "bleroy/lunr-core" ["e"=1]
"curiosity-ai/catalyst" -> "dotnet/TorchSharp"
"curiosity-ai/catalyst" -> "curiosity-ai/hnsw-sharp"
"curiosity-ai/catalyst" -> "SciSharp/Torch.NET"
"curiosity-ai/catalyst" -> "microsoft/Recognizers-Text" ["e"=1]
"curiosity-ai/catalyst" -> "SciSharp/BotSharp" ["e"=1]
"curiosity-ai/catalyst" -> "SciSharp/SciSharp-Stack-Examples"
"DiffSharp/DiffSharp" -> "dotnet/TorchSharp" ["e"=1]
"AlexPoint/OpenNlp" -> "knuppe/SharpNL"
"AlexPoint/OpenNlp" -> "curiosity-ai/catalyst"
"AlexPoint/OpenNlp" -> "sergey-tihon/Stanford.NLP.NET"
"AlexPoint/OpenNlp" -> "sergey-tihon/OpenNLP.NET"
"AlexPoint/OpenNlp" -> "eabdullin/Word2Vec.Net"
"AlexPoint/OpenNlp" -> "zhongkaifu/CRFSharp"
"AlexPoint/OpenNlp" -> "zhongkaifu/RNNSharp"
"AlexPoint/OpenNlp" -> "SciSharp/CherubNLP"
"AlexPoint/OpenNlp" -> "kostyrin/OpenNLP.Standard"
"AlexPoint/OpenNlp" -> "dgerding/SharpNLP"
"AlexPoint/OpenNlp" -> "pburrows/SharperNLP"
"AlexPoint/OpenNlp" -> "AlexPoint/LemmaGenerator"
"jeffheaton/encog-sample-csharp" -> "jeffheaton/encog-dotnet-more-examples"
"sean-dougherty/accneat" -> "f3270/NEAT"
"lordjesus/UnityNEAT" -> "flo-wolf/UnitySharpNEAT"
"lordjesus/UnityNEAT" -> "colgreen/sharpneat"
"lordjesus/UnityNEAT" -> "IrmaVeoll/Neatron"
"GabrieleLagani/HebbianLearning" -> "GabrieleLagani/HebbianPCA"
"GabrieleLagani/HebbianLearning" -> "GabrieleLagani/HebbianLearningThesis"
"SciSharp/protobuf.Text" -> "SciSharp/Keras.NET"
"kimeshan/coderbyte" -> "kimeshan/json-parser"
"kimeshan/coderbyte" -> "deepakkumar1984/XrmToolBoxPlugins"
"kimeshan/coderbyte" -> "kimeshan/patiently"
"GabrieleLagani/HebbianPCA" -> "GabrieleLagani/HebbianLearningThesis"
"GabrieleLagani/HebbianPCA" -> "GabrieleLagani/HebbianLearning"
"julestalloen/pytorch-hebbian" -> "ThomasMiconi/HebbianCNNPyTorch"
"julestalloen/pytorch-hebbian" -> "fmi-basel/latent-predictive-learning"
"ThomasMiconi/HebbianCNNPyTorch" -> "julestalloen/pytorch-hebbian"
"dotnet/csharp-notebooks" -> "dotnet/TorchSharp" ["e"=1]
"sethjuarez/numl" -> "mdabros/SharpLearning"
"sethjuarez/numl" -> "jeffheaton/encog-dotnet-core"
"sethjuarez/numl" -> "zhongkaifu/RNNSharp"
"sethjuarez/numl" -> "andrewfry/SharpML-Recurrent"
"sethjuarez/numl" -> "jdermody/brightwire"
"cbovar/ConvNetSharp" -> "Sergio0694/NeuralNetwork.NET"
"cbovar/ConvNetSharp" -> "mdabros/SharpLearning"
"cbovar/ConvNetSharp" -> "jdermody/brightwire"
"cbovar/ConvNetSharp" -> "kunzmi/managedCuda"
"cbovar/ConvNetSharp" -> "cesarsouza/keras-sharp"
"cbovar/ConvNetSharp" -> "SciSharp/SiaNet"
"cbovar/ConvNetSharp" -> "trentsartain/Neural-Network"
"cbovar/ConvNetSharp" -> "colgreen/sharpneat"
"cbovar/ConvNetSharp" -> "harujoh/KelpNet"
"cbovar/ConvNetSharp" -> "zhongkaifu/RNNSharp"
"cbovar/ConvNetSharp" -> "zhongkaifu/Seq2SeqSharp"
"cbovar/ConvNetSharp" -> "migueldeicaza/TensorFlowSharp" ["e"=1]
"cbovar/ConvNetSharp" -> "anastasios-stamoulis/deep-learning-with-csharp-and-cntk"
"cbovar/ConvNetSharp" -> "SciSharp/Keras.NET"
"cbovar/ConvNetSharp" -> "emgucv/emgutf"
"neat-python/neat-python" -> "noio/peas"
"dajuric/dot-imaging" -> "dajuric/accord-net-extensions"
"dajuric/dot-imaging" -> "asynkron/Wire" ["e"=1]
"nnrg/opennero" -> "peter-ch/MultiNEAT"
"zhongkaifu/RNNSharp" -> "zhongkaifu/CRFSharp"
"zhongkaifu/RNNSharp" -> "zhongkaifu/Seq2SeqSharp"
"zhongkaifu/RNNSharp" -> "andrewfry/SharpML-Recurrent"
"zhongkaifu/RNNSharp" -> "zhongkaifu/Txt2Vec"
"zhongkaifu/RNNSharp" -> "jdermody/brightwire"
"zhongkaifu/RNNSharp" -> "cesarsouza/keras-sharp"
"zhongkaifu/RNNSharp" -> "sethjuarez/numl"
"zhongkaifu/RNNSharp" -> "Sergio0694/NeuralNetwork.NET"
"zhongkaifu/RNNSharp" -> "AlexPoint/OpenNlp"
"zhongkaifu/RNNSharp" -> "SciSharp/SiaNet"
"zhongkaifu/RNNSharp" -> "cbovar/ConvNetSharp"
"zhongkaifu/RNNSharp" -> "alex-weaver/TensorSharp"
"trentsartain/Neural-Network" -> "Sergio0694/NeuralNetwork.NET"
"trentsartain/Neural-Network" -> "Blueteak/Unity-Neural-Network"
"trentsartain/Neural-Network" -> "cbovar/ConvNetSharp"
"trentsartain/Neural-Network" -> "jeffheaton/encog-dotnet-core"
"zhongkaifu/Txt2Vec" -> "zhongkaifu/CRFSharp"
"zhongkaifu/Txt2Vec" -> "zhongkaifu/LMSharp"
"zhongkaifu/Txt2Vec" -> "zhongkaifu/RNNSharp"
"jeffheaton/encog-dotnet-more-examples" -> "jeffheaton/encog-sample-csharp"
"CodeReclaimers/neat-python" -> "uber-research/PyTorch-NEAT"
"CodeReclaimers/neat-python" -> "peter-ch/MultiNEAT"
"CodeReclaimers/neat-python" -> "uber-research/deep-neuroevolution"
"CodeReclaimers/neat-python" -> "noio/peas"
"CodeReclaimers/neat-python" -> "crisbodnar/TensorFlow-NEAT"
"CodeReclaimers/neat-python" -> "google/brain-tokyo-workshop"
"CodeReclaimers/neat-python" -> "ukuleleplayer/pureples"
"CodeReclaimers/neat-python" -> "google/evojax" ["e"=1]
"CodeReclaimers/neat-python" -> "colgreen/sharpneat"
"CodeReclaimers/neat-python" -> "ddehueck/pytorch-neat"
"CodeReclaimers/neat-python" -> "openai/evolution-strategies-starter" ["e"=1]
"CodeReclaimers/neat-python" -> "DEAP/deap" ["e"=1]
"CodeReclaimers/neat-python" -> "MorvanZhou/Evolutionary-Algorithm" ["e"=1]
"CodeReclaimers/neat-python" -> "techwithtim/NEAT-Flappy-Bird" ["e"=1]
"CodeReclaimers/neat-python" -> "hardmaru/estool" ["e"=1]
"kunzmi/managedCuda" -> "altimesh/hybridizer-basic-samples"
"kunzmi/managedCuda" -> "khyperia/CudaSharp"
"kunzmi/managedCuda" -> "cbovar/ConvNetSharp"
"kunzmi/managedCuda" -> "jdermody/brightwire"
"kunzmi/managedCuda" -> "m4rs-mt/ILGPU" ["e"=1]
"kunzmi/managedCuda" -> "Sergio0694/NeuralNetwork.NET"
"kunzmi/managedCuda" -> "SciSharp/SiaNet"
"kunzmi/managedCuda" -> "quantalea/AleaTK"
"kunzmi/managedCuda" -> "lepoco/CUDAfy.NET"
"kunzmi/managedCuda" -> "cesarsouza/keras-sharp"
"kunzmi/managedCuda" -> "kaby76/Campy"
"kunzmi/managedCuda" -> "alex-weaver/TensorSharp"
"kunzmi/managedCuda" -> "Sergio0694/ComputeSharp" ["e"=1]
"kunzmi/managedCuda" -> "zhongkaifu/RNNSharp"
"kunzmi/managedCuda" -> "arrayfire/arrayfire-dotnet"
"noio/peas" -> "neat-python/neat-python"
"noio/peas" -> "peter-ch/MultiNEAT"
"noio/peas" -> "MisterTea/HyperNEAT"
"noio/peas" -> "flxsosa/DeepHyperNEAT"
"rocketshipapps/adblockfast" -> "SciSharp/SiaNet" ["e"=1]
"dotnet/TorchSharpExamples" -> "dotnet/TorchSharp"
"eabdullin/Word2Vec.Net" -> "tmteam/Word2vec.Tools"
"eabdullin/Word2Vec.Net" -> "GuntaButya/Word2Vec.Net-CSharp"
"eabdullin/Word2Vec.Net" -> "Proxem/Word2Vec"
"andrewfry/SharpML-Recurrent" -> "zhongkaifu/RNNSharp"
"raphaelholca/hebbianCNN" -> "gatapia/unsupervised_bio_classifier"
"kimeshan/json-parser" -> "kimeshan/coderbyte"
"kimeshan/json-parser" -> "deepakkumar1984/XrmToolBoxPlugins"
"kimeshan/json-parser" -> "kimeshan/patiently"
"kimeshan/json-parser" -> "tech-quantum/sia-cog" ["e"=1]
"sandrohanea/whisper.net" -> "dotnet/TorchSharp" ["e"=1]
"colgreen/sharpneat" -> "colgreen/sharpneat-refactor"
"colgreen/sharpneat" -> "lordjesus/UnityNEAT"
"colgreen/sharpneat" -> "Sergio0694/NeuralNetwork.NET"
"colgreen/sharpneat" -> "peter-ch/MultiNEAT"
"colgreen/sharpneat" -> "cbovar/ConvNetSharp"
"colgreen/sharpneat" -> "flo-wolf/UnitySharpNEAT"
"colgreen/sharpneat" -> "mdabros/SharpLearning"
"colgreen/sharpneat" -> "zhongkaifu/RNNSharp"
"colgreen/sharpneat" -> "colgreen/Redzen"
"colgreen/sharpneat" -> "CodeReclaimers/neat-python"
"colgreen/sharpneat" -> "giacomelli/GeneticSharp" ["e"=1]
"colgreen/sharpneat" -> "f3270/NEAT"
"colgreen/sharpneat" -> "dubezOniner/Deep-QLearning-Demo-csharp"
"colgreen/sharpneat" -> "jdermody/brightwire"
"colgreen/sharpneat" -> "trentsartain/Neural-Network"
"peter-ch/MultiNEAT" -> "noio/peas"
"peter-ch/MultiNEAT" -> "MisterTea/HyperNEAT"
"peter-ch/MultiNEAT" -> "CodeReclaimers/neat-python"
"peter-ch/MultiNEAT" -> "f3270/NEAT"
"peter-ch/MultiNEAT" -> "ukuleleplayer/pureples"
"peter-ch/MultiNEAT" -> "uber-research/PyTorch-NEAT"
"peter-ch/MultiNEAT" -> "crisbodnar/TensorFlow-NEAT"
"peter-ch/MultiNEAT" -> "OliverColeman/ahni" ["e"=1]
"peter-ch/MultiNEAT" -> "colgreen/sharpneat"
"peter-ch/MultiNEAT" -> "nikste/tensorflow-neat"
"peter-ch/MultiNEAT" -> "flxsosa/DeepHyperNEAT"
"peter-ch/MultiNEAT" -> "neat-python/neat-python"
"peter-ch/MultiNEAT" -> "sean-dougherty/accneat"
"peter-ch/MultiNEAT" -> "nnrg/opennero"
"peter-ch/MultiNEAT" -> "hardmaru/backprop-neat-js"
"Blueteak/Unity-Neural-Network" -> "trentsartain/Neural-Network"
"Blueteak/Unity-Neural-Network" -> "CarsonRoscoe/MachineWars"
"jdermody/brightwire" -> "Sergio0694/NeuralNetwork.NET"
"jdermody/brightwire" -> "adamtiger/NNSharp"
"jdermody/brightwire" -> "bhrnjica/anndotnet"
"kimeshan/patiently" -> "kimeshan/coderbyte"
"kimeshan/patiently" -> "kimeshan/json-parser"
"SciSharp/LLamaSharp" -> "dotnet/TorchSharp" ["e"=1]
"abdonkov/DSA" -> "trentsartain/Neural-Network" ["e"=1]
"CMA-ES/pycma" -> "uber-research/deep-neuroevolution" ["e"=1]
"feature23/StringSimilarity.NET" -> "curiosity-ai/catalyst" ["e"=1]
"harujoh/KelpNet" -> "milchchan/Merkurius"
"harujoh/KelpNet" -> "MyCaffe/MyCaffe"
"harujoh/KelpNet" -> "Kawaian/KelpNet"
"harujoh/KelpNet" -> "pfnet-research/menoh-sharp" ["e"=1]
"harujoh/KelpNet" -> "Sergio0694/NeuralNetwork.NET"
"harujoh/KelpNet" -> "jdermody/brightwire"
"harujoh/KelpNet" -> "adamtiger/NNSharp"
"harujoh/KelpNet" -> "cbovar/ConvNetSharp"
"asieradzk/RL_Matrix" -> "SciSharp/Gym.NET"
"quantalea/AleaTK" -> "alex-weaver/TensorSharp"
"emgucv/emgucv" -> "emgucv/emgutf" ["e"=1]
"migueldeicaza/TensorFlowSharp" -> "cesarsouza/keras-sharp" ["e"=1]
"migueldeicaza/TensorFlowSharp" -> "SciSharp/NumSharp" ["e"=1]
"migueldeicaza/TensorFlowSharp" -> "dotnet/TorchSharp" ["e"=1]
"migueldeicaza/TensorFlowSharp" -> "SciSharp/Keras.NET" ["e"=1]
"m4rs-mt/ILGPU" -> "kunzmi/managedCuda" ["e"=1]
"m4rs-mt/ILGPU" -> "dotnet/TorchSharp" ["e"=1]
"m4rs-mt/ILGPU" -> "altimesh/hybridizer-basic-samples" ["e"=1]
"shimat/opencvsharp_samples" -> "emgucv/emgutf" ["e"=1]
"shimat/opencvsharp_samples" -> "SciSharp/SharpCV" ["e"=1]
"shimat/opencvsharp_samples" -> "SciSharp/SciSharp-Stack-Examples" ["e"=1]
"primaryobjects/AI-Programmer" -> "Sergio0694/NeuralNetwork.NET" ["e"=1]
"HackerShackOfficial/OpenAI-NEAT" -> "mhauskn/HyperNEAT"
"SciSharp/BotSharp-UI" -> "SciSharp/SciSharp.Models"
"Sergio0694/NeuralNetwork.NET" -> "SciSharp/Keras.NET"
"Sergio0694/NeuralNetwork.NET" -> "cbovar/ConvNetSharp"
"Sergio0694/NeuralNetwork.NET" -> "SciSharp/SiaNet"
"Sergio0694/NeuralNetwork.NET" -> "jdermody/brightwire"
"Sergio0694/NeuralNetwork.NET" -> "mdabros/SharpLearning"
"Sergio0694/NeuralNetwork.NET" -> "trentsartain/Neural-Network"
"Sergio0694/NeuralNetwork.NET" -> "SciSharp/NumSharp"
"Sergio0694/NeuralNetwork.NET" -> "cesarsouza/keras-sharp"
"Sergio0694/NeuralNetwork.NET" -> "SciSharp/Numpy.NET"
"Sergio0694/NeuralNetwork.NET" -> "colgreen/sharpneat"
"Sergio0694/NeuralNetwork.NET" -> "SciSharp/Torch.NET"
"Sergio0694/NeuralNetwork.NET" -> "harujoh/KelpNet"
"Sergio0694/NeuralNetwork.NET" -> "kunzmi/managedCuda"
"Sergio0694/NeuralNetwork.NET" -> "SciSharp/TensorFlow.NET" ["e"=1]
"Sergio0694/NeuralNetwork.NET" -> "SciSharp/SciSharpCube"
"sinshu/fftflat" -> "sinshu/numflat"
"deepakkumar1984/XrmToolBoxPlugins" -> "kimeshan/coderbyte"
"deepakkumar1984/XrmToolBoxPlugins" -> "kimeshan/json-parser"
"sinshu/numflat" -> "sinshu/fftflat"
"wagenaartje/neataptic" -> "hardmaru/backprop-neat-js" ["e"=1]
"wagenaartje/neataptic" -> "CodeReclaimers/neat-python" ["e"=1]
"tonybaloney/CSnakes" -> "henon/Python.Included" ["e"=1]
"microsoft/Recognizers-Text" -> "curiosity-ai/catalyst" ["e"=1]
"openai/evolution-strategies-starter" -> "uber-research/deep-neuroevolution" ["e"=1]
"joeddav/devol" -> "uber-research/deep-neuroevolution" ["e"=1]
"harvitronix/neural-network-genetic-algorithm" -> "uber-research/deep-neuroevolution" ["e"=1]
"ArztSamuel/Applying_EANNs" -> "Blueteak/Unity-Neural-Network" ["e"=1]
"sergey-tihon/Stanford.NLP.NET" -> "AlexPoint/OpenNlp"
"sergey-tihon/Stanford.NLP.NET" -> "curiosity-ai/catalyst"
"sergey-tihon/Stanford.NLP.NET" -> "sergey-tihon/OpenNLP.NET"
"sergey-tihon/Stanford.NLP.NET" -> "yakivyusin/SimpleNetNlp"
"sergey-tihon/Stanford.NLP.NET" -> "knuppe/SharpNL"
"sergey-tihon/Stanford.NLP.NET" -> "jeffheaton/encog-dotnet-core"
"sergey-tihon/Stanford.NLP.NET" -> "sergey-tihon/Stanford.NLP.Fsharp"
"sergey-tihon/Stanford.NLP.NET" -> "hypelib/Hype" ["e"=1]
"sergey-tihon/Stanford.NLP.NET" -> "zhongkaifu/RNNSharp"
"mdabros/SharpLearning" -> "cbovar/ConvNetSharp"
"mdabros/SharpLearning" -> "mdabros/SharpLearning.Examples"
"mdabros/SharpLearning" -> "Sergio0694/NeuralNetwork.NET"
"mdabros/SharpLearning" -> "sethjuarez/numl"
"mdabros/SharpLearning" -> "SciSharp/SiaNet"
"mdabros/SharpLearning" -> "jdermody/brightwire"
"mdabros/SharpLearning" -> "SciSharp/Keras.NET"
"mdabros/SharpLearning" -> "cesarsouza/keras-sharp"
"mdabros/SharpLearning" -> "anastasios-stamoulis/deep-learning-with-csharp-and-cntk"
"mdabros/SharpLearning" -> "SciSharp/SharpCV"
"mdabros/SharpLearning" -> "SciSharp/Numpy.NET"
"mdabros/SharpLearning" -> "colgreen/sharpneat"
"mdabros/SharpLearning" -> "zhongkaifu/RNNSharp"
"mdabros/SharpLearning" -> "MyCaffe/MyCaffe"
"mdabros/SharpLearning" -> "henon/Python.Included"
"altimesh/hybridizer-basic-samples" -> "kunzmi/managedCuda"
"altimesh/hybridizer-basic-samples" -> "kaby76/Campy"
"altimesh/hybridizer-basic-samples" -> "m4rs-mt/ILGPU.Samples" ["e"=1]
"MorvanZhou/Evolutionary-Algorithm" -> "CodeReclaimers/neat-python" ["e"=1]
"MorvanZhou/Evolutionary-Algorithm" -> "uber-research/deep-neuroevolution" ["e"=1]
"IronLanguages/ironpython2" -> "SciSharp/Numpy.NET" ["e"=1]
"IronLanguages/ironpython2" -> "SciSharp/NumSharp" ["e"=1]
"ukuleleplayer/pureples" -> "simondlevy/neat-gym"
"ukuleleplayer/pureples" -> "uber-research/PyTorch-NEAT"
"ukuleleplayer/pureples" -> "flxsosa/DeepHyperNEAT"
"ukuleleplayer/pureples" -> "yaricom/goESHyperNEAT"
"emgucv/emgutf" -> "SciSharp/SharpCV"
"emgucv/emgutf" -> "emgucv/emgucv" ["e"=1]
"emgucv/emgutf" -> "died/YOLO3-With-OpenCvSharp4" ["e"=1]
"emgucv/emgutf" -> "adamtiger/NNSharp"
"cesarsouza/keras-sharp" -> "SciSharp/SiaNet"
"cesarsouza/keras-sharp" -> "adamtiger/NNSharp"
"cesarsouza/keras-sharp" -> "Sergio0694/NeuralNetwork.NET"
"cesarsouza/keras-sharp" -> "cbovar/ConvNetSharp"
"cesarsouza/keras-sharp" -> "anastasios-stamoulis/deep-learning-with-csharp-and-cntk"
"cesarsouza/keras-sharp" -> "migueldeicaza/TensorFlowSharp" ["e"=1]
"cesarsouza/keras-sharp" -> "microsoft/NativeKeras"
"cesarsouza/keras-sharp" -> "bhrnjica/anndotnet"
"cesarsouza/keras-sharp" -> "zhongkaifu/RNNSharp"
"cesarsouza/keras-sharp" -> "kaby76/Campy"
"cesarsouza/keras-sharp" -> "SciSharp/Keras.NET"
"cesarsouza/keras-sharp" -> "mdabros/SharpLearning"
"cesarsouza/keras-sharp" -> "andrewfry/SharpML-Recurrent"
"cesarsouza/keras-sharp" -> "jdermody/brightwire"
"cesarsouza/keras-sharp" -> "emgucv/emgutf"
"f3270/NEAT" -> "sean-dougherty/accneat"
"gmlwns2000/TensorFlowSharp" -> "Kawaian/KelpNet"
"NeuralAction/Vision" -> "gmlwns2000/TensorFlowSharp"
"NeuralAction/Vision" -> "Kawaian/KelpNet"
"uber-research/deep-neuroevolution" ["l"="-35.386,-2.787"]
"openai/evolution-strategies-starter" ["l"="57.409,18.235", "c"=45]
"uber-research/PyTorch-NEAT" ["l"="-35.337,-2.781"]
"uber-research/safemutations" ["l"="-35.396,-2.76"]
"CodeReclaimers/neat-python" ["l"="-35.304,-2.801"]
"hardmaru/estool" ["l"="59.253,17.759", "c"=169]
"ShawK91/Evolutionary-Reinforcement-Learning" ["l"="49.721,26.304", "c"=759]
"uber-research/go-explore" ["l"="57.507,18.351", "c"=45]
"google-deepmind/bsuite" ["l"="57.591,18.253", "c"=45]
"google-deepmind/dm_control" ["l"="57.558,18.127", "c"=45]
"uber-research/differentiable-plasticity" ["l"="-35.494,-2.776"]
"pathak22/noreward-rl" ["l"="57.445,18.234", "c"=45]
"tensorforce/tensorforce" ["l"="57.5,18.059", "c"=45]
"rll/rllab" ["l"="57.483,18.133", "c"=45]
"CMA-ES/pycma" ["l"="45.926,26.292", "c"=68]
"williamFalcon/DeepRLHacks" ["l"="57.433,18.15", "c"=45]
"giacomelli/GeneticSharp" ["l"="-34.693,-1.383", "c"=8]
"colgreen/sharpneat" ["l"="-35.187,-2.879"]
"Sergio0694/NeuralNetwork.NET" ["l"="-35.1,-2.94"]
"mdabros/SharpLearning" ["l"="-35.111,-2.922"]
"cbovar/ConvNetSharp" ["l"="-35.133,-2.937"]
"SciSharp/Gym.NET" ["l"="-34.99,-2.923"]
"SciSharp/OpenAIGym.NET" ["l"="-34.973,-2.883"]
"SciSharp/Ludwig.NET" ["l"="-34.99,-2.947"]
"SciSharp/CherubNLP" ["l"="-35.001,-2.961"]
"SciSharp/Torch.NET" ["l"="-35.031,-2.946"]
"asieradzk/RL_Matrix" ["l"="-34.943,-2.905"]
"SciSharp/ICSharpCore" ["l"="-34.973,-2.939"]
"pytorch/hub" ["l"="50.937,30.005", "c"=83]
"weightagnostic/weightagnostic.github.io" ["l"="-35.381,-2.687"]
"SciSharp/TensorFlow.NET" ["l"="-34.822,-1.488", "c"=8]
"SciSharp/NumSharp" ["l"="-35.036,-2.966"]
"SciSharp/Keras.NET" ["l"="-35.046,-2.946"]
"dotnet/TorchSharp" ["l"="-34.999,-2.983"]
"SciSharp/SciSharp-Stack-Examples" ["l"="-35.012,-2.944"]
"SciSharp/Numpy.NET" ["l"="-35.058,-2.954"]
"SciSharp/Pandas.NET" ["l"="-35.032,-2.916"]
"dotnet/TorchSharpExamples" ["l"="-34.957,-3.005"]
"DiffSharp/DiffSharp" ["l"="-36.138,-3.152", "c"=364]
"SciSharp/LLamaSharp" ["l"="-44.202,6.425", "c"=1131]
"dotnet/machinelearning" ["l"="-34.68,-1.441", "c"=8]
"migueldeicaza/TensorFlowSharp" ["l"="-34.775,-1.445", "c"=8]
"plotly/Plotly.NET" ["l"="-36.096,-3.175", "c"=364]
"shimat/opencvsharp" ["l"="-34.868,-1.425", "c"=8]
"dotnet/Silk.NET" ["l"="-33.072,-3.449", "c"=293]
"dotnet/machinelearning-samples" ["l"="-34.705,-1.408", "c"=8]
"navneet-nmk/pytorch-rl" ["l"="57.524,18.261", "c"=45]
"higgsfield/Imagination-Augmented-Agents" ["l"="-35.403,-2.641"]
"pythonnet/pythonnet" ["l"="-34.897,-1.485", "c"=8]
"ddehueck/pytorch-neat" ["l"="-35.342,-2.82"]
"AdrienLE/neuroevo" ["l"="-35.36,-2.844"]
"crisbodnar/TensorFlow-NEAT" ["l"="-35.328,-2.808"]
"microsoft/BlingFire" ["l"="52.887,25.655", "c"=172]
"curiosity-ai/catalyst" ["l"="-35.039,-2.999"]
"jeffheaton/aifh" ["l"="47.542,28.249", "c"=89]
"jeffheaton/encog-dotnet-core" ["l"="-35.106,-2.981"]
"SciSharp/SharpCV" ["l"="-35.045,-2.932"]
"mathnet/mathnet-numerics" ["l"="-34.827,-1.448", "c"=8]
"SciSharp/BotSharp" ["l"="-32.828,0.679", "c"=106]
"henon/Python.Included" ["l"="-35.056,-2.919"]
"dotnet/spark" ["l"="-34.595,-1.354", "c"=8]
"Oceania2018/Quickflow" ["l"="-35.015,-2.923"]
"SciSharp/protobuf.Text" ["l"="-34.994,-2.937"]
"SciSharp/Bigtree.Algorithm" ["l"="-34.947,-2.971"]
"anagabandi/nn_dynamics" ["l"="59.27,17.687", "c"=169]
"ctallec/world-models" ["l"="59.307,17.693", "c"=169]
"flxsosa/DeepHyperNEAT" ["l"="-35.291,-2.769"]
"ukuleleplayer/pureples" ["l"="-35.31,-2.764"]
"jeffheaton/encog-java-core" ["l"="-2.264,17.473", "c"=455]
"amaggiulli/QLNet" ["l"="-10.537,13.6", "c"=1168]
"henon/pythonnet_netstandard" ["l"="-35.058,-2.873"]
"yagweb/pythonnetLab" ["l"="-35.039,-2.868"]
"tonybaloney/CSnakes" ["l"="-44.226,6.32", "c"=1131]
"SciSharp/SciSharpCube" ["l"="-35.026,-2.932"]
"SciSharp/Matplotlib.Net" ["l"="-35.012,-2.899"]
"Quansight-Labs/numpy.net" ["l"="-35.11,-3.055"]
"google/brain-tokyo-workshop" ["l"="-35.355,-2.738"]
"AnjieCheng/OctaveConv-Pytorch" ["l"="64.754,2.383", "c"=649]
"Helpsypoo/primerpython" ["l"="-24.693,-34.94", "c"=811]
"uber-research/backpropamine" ["l"="-35.491,-2.749"]
"ThomasMiconi/LearningToLearnBOHP" ["l"="-35.514,-2.75"]
"enajx/HebbianMetaLearning" ["l"="-35.565,-2.776"]
"raphaelholca/hebbianCNN" ["l"="-35.528,-2.769"]
"ShayanPersonal/hebbian-masks" ["l"="-35.508,-2.798"]
"techwithtim/NEAT-Flappy-Bird" ["l"="59.946,34.328", "c"=699]
"google/evojax" ["l"="59.232,17.426", "c"=169]
"hardmaru/slimevolleygym" ["l"="59.248,17.57", "c"=169]
"danijar/dreamerv2" ["l"="59.293,17.598", "c"=169]
"Farama-Foundation/Minigrid" ["l"="57.587,18.272", "c"=45]
"google-deepmind/scalable_agent" ["l"="57.528,18.282", "c"=45]
"astooke/rlpyt" ["l"="57.597,18.191", "c"=45]
"google-deepmind/rlax" ["l"="59.294,17.47", "c"=169]
"google-deepmind/open_spiel" ["l"="57.689,18.211", "c"=45]
"google-research/planet" ["l"="59.292,17.671", "c"=169]
"jeffheaton/encog-dotnet-more-examples" ["l"="-35.094,-3.009"]
"jeffheaton/encog-sample-csharp" ["l"="-35.103,-3.022"]
"sethjuarez/numl" ["l"="-35.133,-2.964"]
"jeffheaton/encog-java-workbench" ["l"="-2.218,17.476", "c"=455]
"zhongkaifu/CRFSharp" ["l"="-35.119,-3.016"]
"sergey-tihon/Stanford.NLP.NET" ["l"="-35.082,-3.039"]
"jeffheaton/encog-java-examples" ["l"="-2.231,17.465", "c"=455]
"anastasios-stamoulis/deep-learning-with-csharp-and-cntk" ["l"="-35.145,-2.951"]
"accord-net/framework" ["l"="-34.782,-1.41", "c"=8]
"zhongkaifu/RNNSharp" ["l"="-35.126,-2.983"]
"trentsartain/Neural-Network" ["l"="-35.114,-2.899"]
"fslaborg/Deedle" ["l"="-36.083,-3.157", "c"=364]
"sinshu/numflat" ["l"="-35.13,-3.1"]
"trulyspinach/Unity-Neural-Network-Tanks-AI" ["l"="-35.05,-2.781"]
"Blueteak/Unity-Neural-Network" ["l"="-35.084,-2.837"]
"trulyspinach/ml-agents" ["l"="-35.036,-2.759"]
"dotnet/infer" ["l"="-34.756,-1.541", "c"=8]
"SciSharp/SiaNet" ["l"="-35.114,-2.954"]
"kimeshan/mf-proto" ["l"="-17.517,-9.26", "c"=1323]
"kimeshan/mixpanel-puller" ["l"="-17.496,-9.261", "c"=1323]
"tech-quantum/sia-cog" ["l"="-17.528,-9.278", "c"=1323]
"TalEliyahu/PickALicense.com" ["l"="-17.534,-9.258", "c"=1323]
"Singapore-Tech-Entrepreneurs/XComment.io" ["l"="-17.518,-9.316", "c"=1323]
"deepakkumar1984/XrmToolBoxPlugins" ["l"="-35.167,-2.956"]
"kimeshan/coderbyte" ["l"="-35.182,-2.958"]
"kimeshan/json-parser" ["l"="-35.179,-2.944"]
"ssocoin/ssocoin" ["l"="-17.508,-9.277", "c"=1323]
"TalEliyahu/BossBot" ["l"="-17.527,-9.244", "c"=1323]
"ProofSuite/proof-api-deprecated" ["l"="-17.503,-9.202", "c"=1323]
"MOBILINK-COIN/SmartContract" ["l"="-17.518,-9.355", "c"=1323]
"ProofSuite/proof-base-contracts" ["l"="-17.511,-9.187", "c"=1323]
"ProofSuite/tokensale-contracts" ["l"="-17.497,-9.18", "c"=1323]
"ProofSuite/whitepaper" ["l"="-17.494,-9.193", "c"=1323]
"chrisstroemel/Simple" ["l"="38.655,3.754", "c"=201]
"peter-ch/MultiNEAT" ["l"="-35.266,-2.797"]
"PaulPauls/Tensorflow-Neuroevolution" ["l"="-1.086,3.074", "c"=258]
"schrum2/MM-NEAT" ["l"="-35.364,-2.767"]
"PacktPublishing/Hands-on-Neuroevolution-with-Python" ["l"="-35.361,-2.814"]
"EMI-Group/tensorneat" ["l"="51.297,3.054", "c"=85]
"simondlevy/neat-gym" ["l"="-35.323,-2.745"]
"SciSharp/CodeMinion" ["l"="-35.007,-2.929"]
"SciSharp/SciSharp" ["l"="-34.991,-3.014"]
"dajuric/accord-net-extensions" ["l"="-35.123,-2.803"]
"dajuric/dot-imaging" ["l"="-35.121,-2.76"]
"cureos/accord-samples" ["l"="-35.104,-2.781"]
"cesarsouza/keras-sharp" ["l"="-35.134,-2.922"]
"bhrnjica/anndotnet" ["l"="-35.182,-2.922"]
"jdermody/brightwire" ["l"="-35.154,-2.936"]
"dotnet/machinelearning-modelbuilder" ["l"="-35.067,-2.987"]
"takuya-takeuchi/DlibDotNet" ["l"="-32.468,0.805", "c"=106]
"emgucv/emgutf" ["l"="-35.087,-2.903"]
"SciSharp/Plot.NET" ["l"="-35.005,-2.915"]
"SciSharp/scikit-learn.net" ["l"="-35.007,-2.875"]
"zhongkaifu/Seq2SeqSharp" ["l"="-35.143,-2.992"]
"zhongkaifu/Txt2Vec" ["l"="-35.14,-3.021"]
"feiyun0112/machinelearning-samples.zh-cn" ["l"="-32.56,0.93", "c"=106]
"SciSharp/TensorFlow.NET-Tutorials" ["l"="-34.991,-2.902"]
"ar1st0crat/NWaves" ["l"="-35.156,-1.514", "c"=8]
"colgreen/sharpneat-refactor" ["l"="-35.178,-2.848"]
"AlturosDestinations/Alturos.Yolo" ["l"="-32.335,0.741", "c"=106]
"yilundu/imagination_augmented_agents" ["l"="-35.415,-2.619"]
"Oceania2018/EntityFrameworkCore.BootKit" ["l"="-35.029,-2.895"]
"Kawaian/SharpFace" ["l"="-35.276,-2.934"]
"Kawaian/KelpNet" ["l"="-35.239,-2.937"]
"GabrieleLagani/HebbianLearningThesis" ["l"="-35.599,-2.753"]
"GabrieleLagani/HebbianPCA" ["l"="-35.609,-2.738"]
"GabrieleLagani/HebbianLearning" ["l"="-35.619,-2.749"]
"SciSharp/Microcharts.Matplotlib" ["l"="-34.95,-2.859"]
"mlech26l/ncps" ["l"="22.794,14.65", "c"=505]
"karpathy/recurrentjs" ["l"="23.411,14.391", "c"=505]
"hardmaru/backprop-neat-js" ["l"="-35.27,-2.736"]
"SciSharp/SciSharp.Models" ["l"="-34.94,-2.943"]
"julestalloen/pytorch-hebbian" ["l"="-35.598,-2.798"]
"ThomasMiconi/HebbianCNNPyTorch" ["l"="-35.591,-2.781"]
"MisterTea/HyperNEAT" ["l"="-35.246,-2.738"]
"mhauskn/HyperNEAT" ["l"="-35.238,-2.689"]
"AlexPoint/OpenNlp" ["l"="-35.056,-3.039"]
"bleroy/lunr-core" ["l"="-32.105,-0.532", "c"=139]
"curiosity-ai/hnsw-sharp" ["l"="-35.001,-3.043"]
"microsoft/Recognizers-Text" ["l"="-45.664,8.655", "c"=309]
"knuppe/SharpNL" ["l"="-35.075,-3.072"]
"sergey-tihon/OpenNLP.NET" ["l"="-35.058,-3.077"]
"eabdullin/Word2Vec.Net" ["l"="-35.022,-3.12"]
"kostyrin/OpenNLP.Standard" ["l"="-35.042,-3.062"]
"dgerding/SharpNLP" ["l"="-35.028,-3.055"]
"pburrows/SharperNLP" ["l"="-35.026,-3.069"]
"AlexPoint/LemmaGenerator" ["l"="-35.038,-3.082"]
"sean-dougherty/accneat" ["l"="-35.236,-2.804"]
"f3270/NEAT" ["l"="-35.226,-2.825"]
"lordjesus/UnityNEAT" ["l"="-35.218,-2.862"]
"flo-wolf/UnitySharpNEAT" ["l"="-35.215,-2.881"]
"IrmaVeoll/Neatron" ["l"="-35.243,-2.861"]
"kimeshan/patiently" ["l"="-35.202,-2.947"]
"fmi-basel/latent-predictive-learning" ["l"="-35.62,-2.81"]
"dotnet/csharp-notebooks" ["l"="-34.144,-1.041", "c"=8]
"andrewfry/SharpML-Recurrent" ["l"="-35.153,-2.97"]
"kunzmi/managedCuda" ["l"="-35.17,-2.983"]
"harujoh/KelpNet" ["l"="-35.162,-2.915"]
"neat-python/neat-python" ["l"="-35.249,-2.767"]
"noio/peas" ["l"="-35.269,-2.769"]
"asynkron/Wire" ["l"="-32.127,-0.605", "c"=139]
"nnrg/opennero" ["l"="-35.272,-2.83"]
"alex-weaver/TensorSharp" ["l"="-35.165,-3.011"]
"zhongkaifu/LMSharp" ["l"="-35.151,-3.049"]
"DEAP/deap" ["l"="49.891,26.115", "c"=759]
"MorvanZhou/Evolutionary-Algorithm" ["l"="49.868,26.196", "c"=759]
"altimesh/hybridizer-basic-samples" ["l"="-35.215,-2.992"]
"khyperia/CudaSharp" ["l"="-35.225,-3.015"]
"m4rs-mt/ILGPU" ["l"="-33.077,-3.518", "c"=293]
"quantalea/AleaTK" ["l"="-35.187,-3.019"]
"lepoco/CUDAfy.NET" ["l"="-35.187,-3.042"]
"kaby76/Campy" ["l"="-35.199,-2.967"]
"Sergio0694/ComputeSharp" ["l"="-33.016,-3.46", "c"=293]
"arrayfire/arrayfire-dotnet" ["l"="-35.211,-3.033"]
"rocketshipapps/adblockfast" ["l"="-17.521,-9.218", "c"=1323]
"tmteam/Word2vec.Tools" ["l"="-35.011,-3.154"]
"GuntaButya/Word2Vec.Net-CSharp" ["l"="-35.029,-3.147"]
"Proxem/Word2Vec" ["l"="-34.997,-3.137"]
"gatapia/unsupervised_bio_classifier" ["l"="-35.545,-2.75"]
"sandrohanea/whisper.net" ["l"="-44.247,6.4", "c"=1131]
"colgreen/Redzen" ["l"="-35.236,-2.892"]
"dubezOniner/Deep-QLearning-Demo-csharp" ["l"="-35.196,-2.841"]
"OliverColeman/ahni" ["l"="-15.85,-8.38", "c"=1915]
"nikste/tensorflow-neat" ["l"="-35.228,-2.773"]
"CarsonRoscoe/MachineWars" ["l"="-35.073,-2.814"]
"adamtiger/NNSharp" ["l"="-35.14,-2.899"]
"abdonkov/DSA" ["l"="-34.252,-1.054", "c"=8]
"feature23/StringSimilarity.NET" ["l"="-34.727,-0.389", "c"=8]
"milchchan/Merkurius" ["l"="-35.209,-2.913"]
"MyCaffe/MyCaffe" ["l"="-35.148,-2.878"]
"pfnet-research/menoh-sharp" ["l"="-34.641,20.325", "c"=1031]
"emgucv/emgucv" ["l"="-34.917,-1.439", "c"=8]
"shimat/opencvsharp_samples" ["l"="-32.451,0.784", "c"=106]
"primaryobjects/AI-Programmer" ["l"="47.449,28.168", "c"=89]
"HackerShackOfficial/OpenAI-NEAT" ["l"="-35.232,-2.653"]
"SciSharp/BotSharp-UI" ["l"="-34.893,-2.941"]
"sinshu/fftflat" ["l"="-35.137,-3.121"]
"wagenaartje/neataptic" ["l"="-32.582,-35.95", "c"=1115]
"joeddav/devol" ["l"="49.854,26.25", "c"=759]
"harvitronix/neural-network-genetic-algorithm" ["l"="49.899,26.196", "c"=759]
"ArztSamuel/Applying_EANNs" ["l"="57.116,17.909", "c"=45]
"yakivyusin/SimpleNetNlp" ["l"="-35.086,-3.096"]
"sergey-tihon/Stanford.NLP.Fsharp" ["l"="-35.099,-3.08"]
"hypelib/Hype" ["l"="-36.222,-3.148", "c"=364]
"mdabros/SharpLearning.Examples" ["l"="-35.103,-2.875"]
"m4rs-mt/ILGPU.Samples" ["l"="-33.104,-3.588", "c"=293]
"IronLanguages/ironpython2" ["l"="-34.884,-1.529", "c"=8]
"yaricom/goESHyperNEAT" ["l"="-35.304,-2.732"]
"died/YOLO3-With-OpenCvSharp4" ["l"="-32.348,0.772", "c"=106]
"microsoft/NativeKeras" ["l"="-35.13,-2.876"]
"gmlwns2000/TensorFlowSharp" ["l"="-35.26,-2.95"]
"NeuralAction/Vision" ["l"="-35.274,-2.958"]
}