digraph G {
"cmusphinx/pocketsphinx" -> "cmusphinx/sphinxbase"
"cmusphinx/pocketsphinx" -> "cmusphinx/sphinx4"
"cmusphinx/pocketsphinx" -> "cmusphinx/pocketsphinx-android-demo"
"cmusphinx/pocketsphinx" -> "Kitt-AI/snowboy" ["e"=1]
"cmusphinx/pocketsphinx" -> "kaldi-asr/kaldi"
"cmusphinx/pocketsphinx" -> "cmusphinx/pocketsphinx-python"
"cmusphinx/pocketsphinx" -> "Uberi/speech_recognition"
"cmusphinx/pocketsphinx" -> "Picovoice/porcupine"
"cmusphinx/pocketsphinx" -> "alphacep/vosk-api"
"cmusphinx/pocketsphinx" -> "julius-speech/julius"
"cmusphinx/pocketsphinx" -> "jasperproject/jasper-client" ["e"=1]
"cmusphinx/pocketsphinx" -> "syl22-00/pocketsphinx.js"
"cmusphinx/pocketsphinx" -> "cmusphinx/pocketsphinx-android"
"cmusphinx/pocketsphinx" -> "cmusphinx/sphinxtrain"
"cmusphinx/pocketsphinx" -> "bambocher/pocketsphinx-python"
"zenorocha/voice-elements" -> "zzmp/juliusjs"
"zenorocha/voice-elements" -> "zenorocha/browser-diet" ["e"=1]
"zenorocha/voice-elements" -> "bendavis78/paper-date-picker" ["e"=1]
"zenorocha/voice-elements" -> "gorork/paper-audio-player" ["e"=1]
"AASHISHAG/deepspeech-german" -> "uhh-lt/kaldi-tuda-de"
"AASHISHAG/deepspeech-german" -> "DanBmh/deepspeech-german"
"AASHISHAG/deepspeech-german" -> "thorstenMueller/Thorsten-Voice" ["e"=1]
"AASHISHAG/deepspeech-german" -> "ynop/audiomate"
"AASHISHAG/deepspeech-german" -> "gooofy/zamia-speech"
"AASHISHAG/deepspeech-german" -> "AASHISHAG/DeepSpeech-API"
"AASHISHAG/deepspeech-german" -> "ynop/deepspeech-german"
"AASHISHAG/deepspeech-german" -> "mozilla/DeepSpeech-examples"
"Uberi/speech_recognition" -> "mozilla/DeepSpeech"
"Uberi/speech_recognition" -> "kaldi-asr/kaldi"
"Uberi/speech_recognition" -> "pannous/tensorflow-speech-recognition"
"Uberi/speech_recognition" -> "cmusphinx/pocketsphinx"
"Uberi/speech_recognition" -> "nl8590687/ASRT_SpeechRecognition"
"Uberi/speech_recognition" -> "zzw922cn/Automatic_Speech_Recognition"
"Uberi/speech_recognition" -> "tyiannak/pyAudioAnalysis" ["e"=1]
"Uberi/speech_recognition" -> "jiaaro/pydub"
"Uberi/speech_recognition" -> "alphacep/vosk-api"
"Uberi/speech_recognition" -> "buriburisuri/speech-to-text-wavenet" ["e"=1]
"Uberi/speech_recognition" -> "librosa/librosa" ["e"=1]
"Uberi/speech_recognition" -> "nateshmbhat/pyttsx3"
"Uberi/speech_recognition" -> "espnet/espnet"
"Uberi/speech_recognition" -> "speechbrain/speechbrain"
"Uberi/speech_recognition" -> "flashlight/wav2letter"
"TalAter/annyang" -> "TalAter/SpeechKITT"
"TalAter/annyang" -> "sdkcarlos/artyom.js"
"TalAter/annyang" -> "evancohen/smart-mirror"
"TalAter/annyang" -> "syl22-00/pocketsphinx.js"
"TalAter/annyang" -> "TalAter/UpUp" ["e"=1]
"TalAter/annyang" -> "zzmp/juliusjs"
"TalAter/annyang" -> "Uberi/speech_recognition"
"TalAter/annyang" -> "eduardolundgren/tracking.js" ["e"=1]
"TalAter/annyang" -> "jeromeetienne/AR.js" ["e"=1]
"TalAter/annyang" -> "spencermountain/compromise" ["e"=1]
"TalAter/annyang" -> "NaturalNode/natural" ["e"=1]
"TalAter/annyang" -> "mdn/web-speech-api"
"TalAter/annyang" -> "cazala/synaptic" ["e"=1]
"TalAter/annyang" -> "auduno/clmtrackr" ["e"=1]
"TalAter/annyang" -> "harthur/brain" ["e"=1]
"kaituoxu/Speech-Transformer" -> "gentaiscool/end2end-asr-pytorch"
"kaituoxu/Speech-Transformer" -> "ZhengkunTian/OpenTransformer"
"kaituoxu/Speech-Transformer" -> "kaituoxu/Listen-Attend-Spell"
"kaituoxu/Speech-Transformer" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"kaituoxu/Speech-Transformer" -> "hirofumi0810/neural_sp"
"kaituoxu/Speech-Transformer" -> "wenet-e2e/speech-recognition-papers"
"kaituoxu/Speech-Transformer" -> "cywang97/StreamingTransformer"
"kaituoxu/Speech-Transformer" -> "mravanelli/pytorch-kaldi"
"kaituoxu/Speech-Transformer" -> "audier/DeepSpeechRecognition"
"kaituoxu/Speech-Transformer" -> "HawkAaron/warp-transducer"
"kaituoxu/Speech-Transformer" -> "zcaceres/spec_augment"
"kaituoxu/Speech-Transformer" -> "ZhengkunTian/rnn-transducer"
"kaituoxu/Speech-Transformer" -> "zw76859420/ASR_Theory"
"kaituoxu/Speech-Transformer" -> "xingchensong/Speech-Transformer-tf2.0"
"kaituoxu/Speech-Transformer" -> "ZhengkunTian/Speech-Tranformer-Pytorch"
"gentaiscool/end2end-asr-pytorch" -> "kaituoxu/Speech-Transformer"
"gentaiscool/end2end-asr-pytorch" -> "HawkAaron/E2E-ASR"
"gentaiscool/end2end-asr-pytorch" -> "ZhengkunTian/OpenTransformer"
"gentaiscool/end2end-asr-pytorch" -> "ZhengkunTian/rnn-transducer"
"gentaiscool/end2end-asr-pytorch" -> "hirofumi0810/neural_sp"
"gentaiscool/end2end-asr-pytorch" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"gentaiscool/end2end-asr-pytorch" -> "kaituoxu/Listen-Attend-Spell"
"gentaiscool/end2end-asr-pytorch" -> "foamliu/Speech-Transformer"
"gentaiscool/end2end-asr-pytorch" -> "Diamondfan/CTC_pytorch"
"gentaiscool/end2end-asr-pytorch" -> "awni/speech"
"gentaiscool/end2end-asr-pytorch" -> "by2101/OpenASR"
"gentaiscool/end2end-asr-pytorch" -> "thu-spmi/CAT"
"gentaiscool/end2end-asr-pytorch" -> "audioku/meta-transfer-learning" ["e"=1]
"gentaiscool/end2end-asr-pytorch" -> "zcaceres/spec_augment"
"gentaiscool/end2end-asr-pytorch" -> "openspeech-team/openspeech"
"espnet/espnet" -> "speechbrain/speechbrain"
"espnet/espnet" -> "wenet-e2e/wenet"
"espnet/espnet" -> "kaldi-asr/kaldi"
"espnet/espnet" -> "s3prl/s3prl" ["e"=1]
"espnet/espnet" -> "mravanelli/pytorch-kaldi"
"espnet/espnet" -> "asteroid-team/asteroid" ["e"=1]
"espnet/espnet" -> "kan-bayashi/ParallelWaveGAN" ["e"=1]
"espnet/espnet" -> "NVIDIA/NeMo" ["e"=1]
"espnet/espnet" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"espnet/espnet" -> "pyannote/pyannote-audio" ["e"=1]
"espnet/espnet" -> "NVIDIA/tacotron2" ["e"=1]
"espnet/espnet" -> "jik876/hifi-gan" ["e"=1]
"espnet/espnet" -> "k2-fsa/k2"
"espnet/espnet" -> "ming024/FastSpeech2" ["e"=1]
"espnet/espnet" -> "flashlight/wav2letter"
"cmusphinx/sphinx4" -> "cmusphinx/sphinxbase"
"cmusphinx/sphinx4" -> "cmusphinx/pocketsphinx"
"cmusphinx/sphinx4" -> "cmusphinx/pocketsphinx-android-demo"
"cmusphinx/sphinx4" -> "cmusphinx/sphinxtrain"
"cmusphinx/sphinx4" -> "cmusphinx/pocketsphinx-python"
"cmusphinx/sphinx4" -> "cmusphinx/pocketsphinx-android"
"cmusphinx/sphinx4" -> "marytts/marytts" ["e"=1]
"cmusphinx/sphinx4" -> "lkuza2/java-speech-api"
"cmusphinx/sphinx4" -> "cmusphinx/cmudict" ["e"=1]
"cmusphinx/sphinx4" -> "pannous/tensorflow-speech-recognition"
"cmusphinx/sphinx4" -> "alumae/kaldi-gstreamer-server"
"cmusphinx/sphinx4" -> "cmusphinx/g2p-seq2seq"
"cmusphinx/sphinx4" -> "kaldi-asr/kaldi"
"cmusphinx/sphinx4" -> "syl22-00/pocketsphinx.js"
"cmusphinx/sphinx4" -> "julius-speech/julius"
"jiaaro/pydub" -> "librosa/librosa" ["e"=1]
"jiaaro/pydub" -> "tyiannak/pyAudioAnalysis" ["e"=1]
"jiaaro/pydub" -> "kkroening/ffmpeg-python" ["e"=1]
"jiaaro/pydub" -> "pyannote/pyannote-audio" ["e"=1]
"jiaaro/pydub" -> "Zulko/moviepy" ["e"=1]
"jiaaro/pydub" -> "speechbrain/speechbrain"
"jiaaro/pydub" -> "Uberi/speech_recognition"
"jiaaro/pydub" -> "wiseman/py-webrtcvad" ["e"=1]
"jiaaro/pydub" -> "espnet/espnet"
"jiaaro/pydub" -> "worldveil/dejavu" ["e"=1]
"jiaaro/pydub" -> "kaldi-asr/kaldi"
"jiaaro/pydub" -> "jameslyons/python_speech_features"
"jiaaro/pydub" -> "snakers4/silero-vad" ["e"=1]
"jiaaro/pydub" -> "NVIDIA/NeMo" ["e"=1]
"jiaaro/pydub" -> "aubio/aubio" ["e"=1]
"flashlight/wav2letter" -> "kaldi-asr/kaldi"
"flashlight/wav2letter" -> "mravanelli/pytorch-kaldi"
"flashlight/wav2letter" -> "syhw/wer_are_we"
"flashlight/wav2letter" -> "espnet/espnet"
"flashlight/wav2letter" -> "flashlight/flashlight" ["e"=1]
"flashlight/wav2letter" -> "SeanNaren/deepspeech.pytorch"
"flashlight/wav2letter" -> "mozilla/DeepSpeech"
"flashlight/wav2letter" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"flashlight/wav2letter" -> "buriburisuri/speech-to-text-wavenet" ["e"=1]
"flashlight/wav2letter" -> "wenet-e2e/wenet"
"flashlight/wav2letter" -> "zzw922cn/Automatic_Speech_Recognition"
"flashlight/wav2letter" -> "srvk/eesen"
"flashlight/wav2letter" -> "speechbrain/speechbrain"
"flashlight/wav2letter" -> "kpu/kenlm"
"flashlight/wav2letter" -> "k2-fsa/k2"
"audier/DeepSpeechRecognition" -> "nobody132/masr"
"audier/DeepSpeechRecognition" -> "nl8590687/ASRT_SpeechRecognition"
"audier/DeepSpeechRecognition" -> "xxbb1234021/speech_recognition"
"audier/DeepSpeechRecognition" -> "kaituoxu/Speech-Transformer"
"audier/DeepSpeechRecognition" -> "zw76859420/ASR_Theory"
"audier/DeepSpeechRecognition" -> "SeanNaren/deepspeech.pytorch"
"audier/DeepSpeechRecognition" -> "mravanelli/pytorch-kaldi"
"audier/DeepSpeechRecognition" -> "alibaba/Alibaba-MIT-Speech"
"audier/DeepSpeechRecognition" -> "sailist/ASRFrame"
"audier/DeepSpeechRecognition" -> "zw76859420/ASR_Syllable"
"audier/DeepSpeechRecognition" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"audier/DeepSpeechRecognition" -> "zzw922cn/Automatic_Speech_Recognition"
"audier/DeepSpeechRecognition" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"audier/DeepSpeechRecognition" -> "mindorii/kws"
"audier/DeepSpeechRecognition" -> "athena-team/athena" ["e"=1]
"NVIDIA/OpenSeq2Seq" -> "mravanelli/pytorch-kaldi"
"NVIDIA/OpenSeq2Seq" -> "syhw/wer_are_we"
"NVIDIA/OpenSeq2Seq" -> "NVIDIA/waveglow" ["e"=1]
"NVIDIA/OpenSeq2Seq" -> "HawkAaron/warp-transducer"
"NVIDIA/OpenSeq2Seq" -> "freewym/espresso"
"NVIDIA/OpenSeq2Seq" -> "SeanNaren/deepspeech.pytorch"
"NVIDIA/OpenSeq2Seq" -> "flashlight/wav2letter"
"NVIDIA/OpenSeq2Seq" -> "tensorflow/lingvo"
"NVIDIA/OpenSeq2Seq" -> "TensorSpeech/TensorFlowASR"
"NVIDIA/OpenSeq2Seq" -> "pykaldi/pykaldi"
"NVIDIA/OpenSeq2Seq" -> "Rayhane-mamah/Tacotron-2" ["e"=1]
"NVIDIA/OpenSeq2Seq" -> "athena-team/athena" ["e"=1]
"NVIDIA/OpenSeq2Seq" -> "srvk/eesen"
"NVIDIA/OpenSeq2Seq" -> "xiph/LPCNet" ["e"=1]
"NVIDIA/OpenSeq2Seq" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"nobody132/masr" -> "xxbb1234021/speech_recognition"
"nobody132/masr" -> "nl8590687/ASRT_SpeechRecognition"
"nobody132/masr" -> "audier/DeepSpeechRecognition"
"nobody132/masr" -> "yeyupiaoling/MASR"
"nobody132/masr" -> "SeanNaren/deepspeech.pytorch"
"nobody132/masr" -> "zw76859420/ASR_Theory"
"nobody132/masr" -> "sailist/ASRFrame"
"nobody132/masr" -> "kaituoxu/Speech-Transformer"
"nobody132/masr" -> "yeyupiaoling/PaddlePaddle-DeepSpeech"
"nobody132/masr" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"nobody132/masr" -> "binzhouchn/masr" ["e"=1]
"nobody132/masr" -> "mravanelli/pytorch-kaldi"
"nobody132/masr" -> "wenet-e2e/wenet"
"nobody132/masr" -> "xdcesc/my_ch_speech_recognition"
"nobody132/masr" -> "Z-yq/TensorflowASR"
"lucko515/speech-recognition-neural-network" -> "robmsmt/KerasDeepSpeech"
"lucko515/speech-recognition-neural-network" -> "manashmandal/DeadSimpleSpeechRecognizer"
"jameslyons/python_speech_features" -> "mravanelli/pytorch-kaldi"
"jameslyons/python_speech_features" -> "wiseman/py-webrtcvad" ["e"=1]
"jameslyons/python_speech_features" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"jameslyons/python_speech_features" -> "SeanNaren/deepspeech.pytorch"
"jameslyons/python_speech_features" -> "pykaldi/pykaldi"
"jameslyons/python_speech_features" -> "tyiannak/pyAudioAnalysis" ["e"=1]
"jameslyons/python_speech_features" -> "pannous/tensorflow-speech-recognition"
"jameslyons/python_speech_features" -> "srvk/eesen"
"jameslyons/python_speech_features" -> "librosa/librosa" ["e"=1]
"jameslyons/python_speech_features" -> "mravanelli/SincNet" ["e"=1]
"jameslyons/python_speech_features" -> "zzw922cn/Automatic_Speech_Recognition"
"jameslyons/python_speech_features" -> "espnet/espnet"
"jameslyons/python_speech_features" -> "jtkim-kaist/VAD" ["e"=1]
"jameslyons/python_speech_features" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"jameslyons/python_speech_features" -> "kaldi-asr/kaldi"
"mravanelli/pytorch-kaldi" -> "pykaldi/pykaldi"
"mravanelli/pytorch-kaldi" -> "mravanelli/SincNet" ["e"=1]
"mravanelli/pytorch-kaldi" -> "SeanNaren/deepspeech.pytorch"
"mravanelli/pytorch-kaldi" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"mravanelli/pytorch-kaldi" -> "k2-fsa/k2"
"mravanelli/pytorch-kaldi" -> "espnet/espnet"
"mravanelli/pytorch-kaldi" -> "kaldi-asr/kaldi"
"mravanelli/pytorch-kaldi" -> "kaituoxu/Speech-Transformer"
"mravanelli/pytorch-kaldi" -> "s3prl/s3prl" ["e"=1]
"mravanelli/pytorch-kaldi" -> "syhw/wer_are_we"
"mravanelli/pytorch-kaldi" -> "flashlight/wav2letter"
"mravanelli/pytorch-kaldi" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"mravanelli/pytorch-kaldi" -> "KarelVesely84/kaldi-io-for-python"
"mravanelli/pytorch-kaldi" -> "srvk/eesen"
"mravanelli/pytorch-kaldi" -> "wenet-e2e/wenet"
"Picovoice/porcupine" -> "Kitt-AI/snowboy" ["e"=1]
"Picovoice/porcupine" -> "Picovoice/rhino"
"Picovoice/porcupine" -> "MycroftAI/mycroft-precise"
"Picovoice/porcupine" -> "Picovoice/picovoice"
"Picovoice/porcupine" -> "dscripka/openWakeWord" ["e"=1]
"Picovoice/porcupine" -> "cmusphinx/pocketsphinx"
"Picovoice/porcupine" -> "Picovoice/cheetah"
"Picovoice/porcupine" -> "seasalt-ai/snowboy"
"Picovoice/porcupine" -> "ARM-software/ML-KWS-for-MCU"
"Picovoice/porcupine" -> "rhasspy/rhasspy" ["e"=1]
"Picovoice/porcupine" -> "alphacep/vosk-api"
"Picovoice/porcupine" -> "wenet-e2e/wekws"
"Picovoice/porcupine" -> "wiseman/py-webrtcvad" ["e"=1]
"Picovoice/porcupine" -> "snakers4/silero-vad" ["e"=1]
"Picovoice/porcupine" -> "kaldi-asr/kaldi"
"aishell-foundation/DaCiDian" -> "speechio/BigCiDian"
"aishell-foundation/DaCiDian" -> "speechio/chinese_text_normalization"
"aishell-foundation/DaCiDian" -> "tencent-ailab/pika"
"aishell-foundation/DaCiDian" -> "open-speech/speech-aligner" ["e"=1]
"aishell-foundation/DaCiDian" -> "ZhengkunTian/OpenTransformer"
"aishell-foundation/DaCiDian" -> "cywang97/StreamingTransformer"
"aishell-foundation/DaCiDian" -> "wenet-e2e/speech-recognition-papers"
"aishell-foundation/DaCiDian" -> "lingochamp/kaldi-ctc"
"aishell-foundation/DaCiDian" -> "hyperconnect/TC-ResNet"
"aishell-foundation/DaCiDian" -> "mindorii/kws"
"aishell-foundation/DaCiDian" -> "tzyll/kaldi"
"aishell-foundation/DaCiDian" -> "HawkAaron/warp-transducer"
"aishell-foundation/DaCiDian" -> "XiaoMi/kaldi-onnx"
"aishell-foundation/DaCiDian" -> "thu-spmi/CAT"
"aishell-foundation/DaCiDian" -> "colinsongf/keyword_spotting"
"alumae/kaldi-gstreamer-server" -> "jcsilva/docker-kaldi-gstreamer-server"
"alumae/kaldi-gstreamer-server" -> "alumae/gst-kaldi-nnet2-online"
"alumae/kaldi-gstreamer-server" -> "Kaljurand/dictate.js"
"alumae/kaldi-gstreamer-server" -> "YoavRamon/awesome-kaldi"
"alumae/kaldi-gstreamer-server" -> "dialogflow/asr-server"
"alumae/kaldi-gstreamer-server" -> "srvk/eesen"
"alumae/kaldi-gstreamer-server" -> "alumae/kaldi-offline-transcriber"
"alumae/kaldi-gstreamer-server" -> "pykaldi/pykaldi"
"alumae/kaldi-gstreamer-server" -> "gooofy/zamia-speech"
"alumae/kaldi-gstreamer-server" -> "Kaljurand/K6nele"
"alumae/kaldi-gstreamer-server" -> "uhh-lt/kaldi-tuda-de"
"alumae/kaldi-gstreamer-server" -> "mravanelli/pytorch-kaldi"
"alumae/kaldi-gstreamer-server" -> "cmusphinx/g2p-seq2seq"
"alumae/kaldi-gstreamer-server" -> "k2-fsa/k2"
"alumae/kaldi-gstreamer-server" -> "syhw/wer_are_we"
"xiangxyq/kaldi" -> "xiangxyq/minimize-chain-decoder"
"xiangxyq/kaldi" -> "robin1001/kaldi-aslp"
"ZhengkunTian/rnn-transducer" -> "HawkAaron/warp-transducer"
"ZhengkunTian/rnn-transducer" -> "1ytic/warp-rnnt"
"ZhengkunTian/rnn-transducer" -> "HawkAaron/RNN-Transducer"
"ZhengkunTian/rnn-transducer" -> "noahchalifour/rnnt-speech-recognition"
"ZhengkunTian/rnn-transducer" -> "awni/transducer"
"ZhengkunTian/rnn-transducer" -> "HawkAaron/E2E-ASR"
"ZhengkunTian/rnn-transducer" -> "ZhengkunTian/OpenTransformer"
"ZhengkunTian/rnn-transducer" -> "hirofumi0810/neural_sp"
"ZhengkunTian/rnn-transducer" -> "sooftware/RNN-Transducer" ["e"=1]
"ZhengkunTian/rnn-transducer" -> "wenet-e2e/speech-recognition-papers"
"ZhengkunTian/rnn-transducer" -> "cywang97/StreamingTransformer"
"ZhengkunTian/rnn-transducer" -> "foamliu/Speech-Transformer"
"ZhengkunTian/rnn-transducer" -> "upskyy/Transformer-Transducer"
"ZhengkunTian/rnn-transducer" -> "gentaiscool/end2end-asr-pytorch"
"ZhengkunTian/rnn-transducer" -> "oshindow/Transformer-Transducer"
"alumae/kaldi-offline-transcriber" -> "alumae/gst-kaldi-nnet2-online"
"alumae/kaldi-offline-transcriber" -> "jcsilva/docker-kaldi-gstreamer-server"
"alumae/kaldi-offline-transcriber" -> "alumae/kaldi-gstreamer-server"
"alumae/kaldi-offline-transcriber" -> "skit-ai/kaldi-serve"
"alumae/kaldi-offline-transcriber" -> "gooofy/py-kaldi-asr"
"alumae/kaldi-offline-transcriber" -> "dialogflow/asr-server"
"alumae/kaldi-offline-transcriber" -> "opendcd/opendcd"
"alumae/kaldi-offline-transcriber" -> "Kaljurand/dictate.js"
"xxbb1234021/speech_recognition" -> "nobody132/masr"
"xxbb1234021/speech_recognition" -> "audier/DeepSpeechRecognition"
"xxbb1234021/speech_recognition" -> "nl8590687/ASRT_SpeechRecognition"
"xxbb1234021/speech_recognition" -> "zw76859420/ASR_Theory"
"xxbb1234021/speech_recognition" -> "xdcesc/my_ch_speech_recognition"
"xxbb1234021/speech_recognition" -> "sailist/ASRFrame"
"xxbb1234021/speech_recognition" -> "Gateway11/tensorflow-examples"
"xxbb1234021/speech_recognition" -> "zw76859420/ASR_Syllable"
"xxbb1234021/speech_recognition" -> "Z-yq/TensorflowASR"
"xxbb1234021/speech_recognition" -> "yeyupiaoling/MASR"
"xxbb1234021/speech_recognition" -> "shibing624/parrots" ["e"=1]
"xxbb1234021/speech_recognition" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"xxbb1234021/speech_recognition" -> "Pelhans/ZASR_tensorflow"
"xxbb1234021/speech_recognition" -> "yeyupiaoling/PaddlePaddle-DeepSpeech"
"xxbb1234021/speech_recognition" -> "ssky87/iflytek_sdk_python" ["e"=1]
"zw76859420/ASR_Theory" -> "zw76859420/ASR_Syllable"
"zw76859420/ASR_Theory" -> "kaituoxu/Speech-Transformer"
"zw76859420/ASR_Theory" -> "audier/DeepSpeechRecognition"
"zw76859420/ASR_Theory" -> "xxbb1234021/speech_recognition"
"zw76859420/ASR_Theory" -> "nobody132/masr"
"zw76859420/ASR_Theory" -> "sailist/ASRFrame"
"zw76859420/ASR_Theory" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"zw76859420/ASR_Theory" -> "wenet-e2e/speech-recognition-papers"
"zw76859420/ASR_Theory" -> "srvk/eesen"
"zw76859420/ASR_Theory" -> "nl8590687/ASRT_SpeechRecognition"
"zw76859420/ASR_Theory" -> "zw76859420/ASR_WORD"
"zw76859420/ASR_Theory" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"zw76859420/ASR_Theory" -> "mindorii/kws"
"zw76859420/ASR_Theory" -> "YoavRamon/awesome-kaldi"
"zw76859420/ASR_Theory" -> "gentaiscool/end2end-asr-pytorch"
"savoirfairelinux/num2words" -> "AdolfVonKleist/Phonetisaurus" ["e"=1]
"savoirfairelinux/num2words" -> "bootphon/phonemizer" ["e"=1]
"savoirfairelinux/num2words" -> "Kyubyong/g2p" ["e"=1]
"savoirfairelinux/num2words" -> "jitsi/jiwer"
"savoirfairelinux/num2words" -> "kpu/kenlm"
"savoirfairelinux/num2words" -> "jonatasgrosman/huggingsound" ["e"=1]
"savoirfairelinux/num2words" -> "clab/fast_align" ["e"=1]
"savoirfairelinux/num2words" -> "1ytic/warp-rnnt"
"savoirfairelinux/num2words" -> "lhotse-speech/lhotse"
"savoirfairelinux/num2words" -> "MontrealCorpusTools/Montreal-Forced-Aligner" ["e"=1]
"savoirfairelinux/num2words" -> "k2-fsa/k2"
"savoirfairelinux/num2words" -> "kensho-technologies/pyctcdecode"
"savoirfairelinux/num2words" -> "lumaku/ctc-segmentation"
"savoirfairelinux/num2words" -> "allo-media/text2num"
"savoirfairelinux/num2words" -> "k2-fsa/libriheavy" ["e"=1]
"alphacep/vosk-server" -> "alphacep/vosk-api"
"alphacep/vosk-server" -> "alphacep/vosk"
"alphacep/vosk-server" -> "alphacep/vosk-android-demo"
"alphacep/vosk-server" -> "YoavRamon/awesome-kaldi"
"alphacep/vosk-server" -> "k2-fsa/k2"
"alphacep/vosk-server" -> "alphacep/vosk-asterisk"
"alphacep/vosk-server" -> "alumae/kaldi-gstreamer-server"
"alphacep/vosk-server" -> "daanzu/kaldi-active-grammar"
"alphacep/vosk-server" -> "pykaldi/pykaldi"
"alphacep/vosk-server" -> "jcsilva/docker-kaldi-gstreamer-server"
"alphacep/vosk-server" -> "dialogflow/asr-server"
"alphacep/vosk-server" -> "unispeech/unimrcp" ["e"=1]
"alphacep/vosk-server" -> "gooofy/zamia-speech"
"alphacep/vosk-server" -> "lhotse-speech/lhotse"
"alphacep/vosk-server" -> "XiaoMi/kaldi-onnx"
"tensorflow/lingvo" -> "kimiyoung/transformer-xl" ["e"=1]
"tensorflow/lingvo" -> "mravanelli/pytorch-kaldi"
"tensorflow/lingvo" -> "k2-fsa/k2"
"tensorflow/lingvo" -> "zihangdai/xlnet" ["e"=1]
"tensorflow/lingvo" -> "syhw/wer_are_we"
"tensorflow/lingvo" -> "NVIDIA/OpenSeq2Seq"
"tensorflow/lingvo" -> "XuyangBai/TransFusion" ["e"=1]
"tensorflow/lingvo" -> "rsennrich/subword-nmt" ["e"=1]
"tensorflow/lingvo" -> "HawkAaron/warp-transducer"
"tensorflow/lingvo" -> "facebookresearch/XLM" ["e"=1]
"tensorflow/lingvo" -> "flashlight/wav2letter"
"tensorflow/lingvo" -> "srvk/eesen"
"tensorflow/lingvo" -> "espnet/espnet"
"tensorflow/lingvo" -> "Luolc/AdaBound" ["e"=1]
"tensorflow/lingvo" -> "facebookresearch/pytext" ["e"=1]
"rain1024/slp2-pdf" -> "iamyuanchung/Autoregressive-Predictive-Coding"
"githubharald/CTCDecoder" -> "githubharald/CTCWordBeamSearch"
"githubharald/CTCDecoder" -> "parlance/ctcdecode"
"githubharald/CTCDecoder" -> "corticph/prefix-beam-search"
"githubharald/CTCDecoder" -> "srvk/eesen"
"githubharald/CTCDecoder" -> "summerlvsong/Aggregation-Cross-Entropy" ["e"=1]
"githubharald/CTCDecoder" -> "HawkAaron/warp-transducer"
"githubharald/CTCDecoder" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"githubharald/CTCDecoder" -> "thu-spmi/CAT"
"githubharald/CTCDecoder" -> "SeanNaren/warp-ctc" ["e"=1]
"githubharald/CTCDecoder" -> "1ytic/warp-rnnt"
"githubharald/CTCDecoder" -> "k2-fsa/k2"
"githubharald/CTCDecoder" -> "hirofumi0810/neural_sp"
"githubharald/CTCDecoder" -> "kensho-technologies/pyctcdecode"
"githubharald/CTCDecoder" -> "kaituoxu/Speech-Transformer"
"githubharald/CTCDecoder" -> "HawkAaron/E2E-ASR"
"tbright17/kaldi-dnn-ali-gop" -> "jimbozhang/kaldi-gop"
"tbright17/kaldi-dnn-ali-gop" -> "sweekarsud/Goodness-of-Pronunciation"
"tbright17/kaldi-dnn-ali-gop" -> "moisesveleta/GOP-LSTM"
"tbright17/kaldi-dnn-ali-gop" -> "tzyll/goparrot"
"tbright17/kaldi-dnn-ali-gop" -> "lingochamp/kaldi-ctc"
"tbright17/kaldi-dnn-ali-gop" -> "KarelVesely84/kaldi-io-for-python"
"tbright17/kaldi-dnn-ali-gop" -> "topel/goodness-of-pronunciation-HTK"
"tbright17/kaldi-dnn-ali-gop" -> "XiaoMi/kaldi-onnx"
"tbright17/kaldi-dnn-ali-gop" -> "JazminVidal/gop-dnn-epadb"
"tbright17/kaldi-dnn-ali-gop" -> "sequitur-g2p/sequitur-g2p" ["e"=1]
"tbright17/kaldi-dnn-ali-gop" -> "jimbozhang/speechocean762"
"awni/transducer" -> "HawkAaron/RNN-Transducer"
"awni/transducer" -> "1ytic/warp-rnnt"
"awni/transducer" -> "HawkAaron/warp-transducer"
"awni/transducer" -> "HawkAaron/E2E-ASR"
"awni/transducer" -> "ZhengkunTian/rnn-transducer"
"awni/transducer" -> "k2-fsa/fast_rnnt"
"awni/transducer" -> "YiwenShaoStephen/pychain"
"robin1001/xdecoder" -> "jpuigcerver/kaldi-decoders"
"robin1001/xdecoder" -> "robin1001/kaldi-aslp"
"WindQAQ/listen-attend-and-spell" -> "thomasschmied/Speech_Recognition_with_Tensorflow"
"WindQAQ/listen-attend-and-spell" -> "sciforce/phones-las"
"WindQAQ/listen-attend-and-spell" -> "kaituoxu/Listen-Attend-Spell"
"YiwenShaoStephen/pychain" -> "YiwenShaoStephen/pychain_example"
"YiwenShaoStephen/pychain" -> "jzlianglu/pykaldi2"
"YiwenShaoStephen/pychain" -> "thu-spmi/CAT"
"YiwenShaoStephen/pychain" -> "freewym/espresso"
"YiwenShaoStephen/pychain" -> "HawkAaron/warp-transducer"
"YiwenShaoStephen/pychain" -> "idiap/pkwrap"
"YiwenShaoStephen/pychain" -> "facebookresearch/gtn"
"YiwenShaoStephen/pychain" -> "nttcslab-sp/kaldiio"
"YiwenShaoStephen/pychain" -> "k2-fsa/k2"
"YiwenShaoStephen/pychain" -> "tencent-ailab/pika"
"YiwenShaoStephen/pychain" -> "cywang97/StreamingTransformer"
"YiwenShaoStephen/pychain" -> "XiaoMi/kaldi-onnx"
"YiwenShaoStephen/pychain" -> "k2-fsa/snowfall"
"YiwenShaoStephen/pychain" -> "1ytic/warp-rnnt"
"opendcd/opendcd" -> "jpuigcerver/kaldi-decoders"
"opendcd/opendcd" -> "dophist/DaCiDian-Develop" ["e"=1]
"1ytic/warp-rnnt" -> "HawkAaron/warp-transducer"
"1ytic/warp-rnnt" -> "awni/transducer"
"1ytic/warp-rnnt" -> "k2-fsa/fast_rnnt"
"1ytic/warp-rnnt" -> "ZhengkunTian/rnn-transducer"
"1ytic/warp-rnnt" -> "tencent-ailab/pika"
"1ytic/warp-rnnt" -> "csukuangfj/optimized_transducer"
"1ytic/warp-rnnt" -> "cywang97/StreamingTransformer"
"1ytic/warp-rnnt" -> "thu-spmi/CAT"
"1ytic/warp-rnnt" -> "HawkAaron/RNN-Transducer"
"1ytic/warp-rnnt" -> "1ytic/warp-rna"
"1ytic/warp-rnnt" -> "iamjanvijay/rnnt_decoder_cuda"
"1ytic/warp-rnnt" -> "HawkAaron/E2E-ASR"
"1ytic/warp-rnnt" -> "noahchalifour/rnnt-speech-recognition"
"1ytic/warp-rnnt" -> "theblackcat102/edgedict"
"1ytic/warp-rnnt" -> "jctian98/e2e_lfmmi"
"douglas125/SpeechCmdRecognition" -> "hyperconnect/TC-ResNet"
"douglas125/SpeechCmdRecognition" -> "castorini/honk"
"douglas125/SpeechCmdRecognition" -> "vineeths96/Spoken-Keyword-Spotting"
"douglas125/SpeechCmdRecognition" -> "dobby-seo/Wav2Keyword"
"douglas125/SpeechCmdRecognition" -> "JaesungBae/Speech-Command-Recognition-with-Capsule-Network"
"douglas125/SpeechCmdRecognition" -> "jarfo/gcommands"
"MycroftAI/mycroft-precise" -> "Picovoice/porcupine"
"MycroftAI/mycroft-precise" -> "Kitt-AI/snowboy" ["e"=1]
"MycroftAI/mycroft-precise" -> "wenet-e2e/wekws"
"MycroftAI/mycroft-precise" -> "ARM-software/ML-KWS-for-MCU"
"MycroftAI/mycroft-precise" -> "mindorii/kws"
"MycroftAI/mycroft-precise" -> "castorini/honk"
"MycroftAI/mycroft-precise" -> "seasalt-ai/snowboy"
"MycroftAI/mycroft-precise" -> "Tony607/Keras-Trigger-Word"
"MycroftAI/mycroft-precise" -> "castorini/howl"
"MycroftAI/mycroft-precise" -> "MycroftAI/padatious" ["e"=1]
"MycroftAI/mycroft-precise" -> "dscripka/openWakeWord" ["e"=1]
"MycroftAI/mycroft-precise" -> "colinsongf/keyword_spotting"
"MycroftAI/mycroft-precise" -> "MycroftAI/mycroft-skills" ["e"=1]
"MycroftAI/mycroft-precise" -> "sonos/keyword-spotting-research-datasets"
"MycroftAI/mycroft-precise" -> "hyperconnect/TC-ResNet"
"zcaceres/spec_augment" -> "DemisEom/SpecAugment"
"zcaceres/spec_augment" -> "kaituoxu/Listen-Attend-Spell"
"zcaceres/spec_augment" -> "facebookresearch/WavAugment" ["e"=1]
"zcaceres/spec_augment" -> "kaituoxu/Speech-Transformer"
"zcaceres/spec_augment" -> "hirofumi0810/neural_sp"
"zcaceres/spec_augment" -> "manojpamk/pytorch_xvectors" ["e"=1]
"zcaceres/spec_augment" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"zcaceres/spec_augment" -> "HawkAaron/E2E-ASR"
"zcaceres/spec_augment" -> "asteroid-team/torch-audiomentations" ["e"=1]
"zcaceres/spec_augment" -> "ZhengkunTian/OpenTransformer"
"zcaceres/spec_augment" -> "gentaiscool/end2end-asr-pytorch"
"zcaceres/spec_augment" -> "santi-pdp/pase"
"zcaceres/spec_augment" -> "Snowdar/asv-subtools" ["e"=1]
"zcaceres/spec_augment" -> "clovaai/voxceleb_trainer" ["e"=1]
"zcaceres/spec_augment" -> "cywang97/StreamingTransformer"
"DemisEom/SpecAugment" -> "zcaceres/spec_augment"
"DemisEom/SpecAugment" -> "facebookresearch/WavAugment" ["e"=1]
"DemisEom/SpecAugment" -> "HawkAaron/warp-transducer"
"DemisEom/SpecAugment" -> "iver56/audiomentations" ["e"=1]
"DemisEom/SpecAugment" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"DemisEom/SpecAugment" -> "mravanelli/pytorch-kaldi"
"DemisEom/SpecAugment" -> "hirofumi0810/neural_sp"
"DemisEom/SpecAugment" -> "kaituoxu/Listen-Attend-Spell"
"DemisEom/SpecAugment" -> "KimJeongSun/SpecAugment_numpy_scipy"
"DemisEom/SpecAugment" -> "asteroid-team/torch-audiomentations" ["e"=1]
"DemisEom/SpecAugment" -> "k2-fsa/k2"
"DemisEom/SpecAugment" -> "kaituoxu/Speech-Transformer"
"DemisEom/SpecAugment" -> "s3prl/s3prl" ["e"=1]
"DemisEom/SpecAugment" -> "mravanelli/SincNet" ["e"=1]
"DemisEom/SpecAugment" -> "KarelVesely84/kaldi-io-for-python"
"26hzhang/neural_sequence_labeling" -> "MenNianShi/PunctuationPrediction-BERT"
"26hzhang/neural_sequence_labeling" -> "ottokart/punctuator2"
"26hzhang/neural_sequence_labeling" -> "nkrnrnk/BertPunc"
"26hzhang/neural_sequence_labeling" -> "alpoktem/punkProse"
"26hzhang/neural_sequence_labeling" -> "vackosar/keras-punctuator"
"26hzhang/neural_sequence_labeling" -> "ottokart/punctuator"
"26hzhang/neural_sequence_labeling" -> "kaituoxu/X-Punctuator"
"26hzhang/neural_sequence_labeling" -> "LopezGG/NN_NER_tensorFlow" ["e"=1]
"26hzhang/neural_sequence_labeling" -> "ottokart/sequence-labeler"
"26hzhang/neural_sequence_labeling" -> "dbmdz/deep-eos"
"castorini/honk" -> "colinsongf/keyword_spotting"
"castorini/honk" -> "mindorii/kws"
"castorini/honk" -> "hyperconnect/TC-ResNet"
"castorini/honk" -> "ARM-software/ML-KWS-for-MCU"
"castorini/honk" -> "zycv/awesome-keyword-spotting"
"castorini/honk" -> "sonos/keyword-spotting-research-datasets"
"castorini/honk" -> "wenet-e2e/wekws"
"castorini/honk" -> "castorini/howl"
"castorini/honk" -> "douglas125/SpeechCmdRecognition"
"castorini/honk" -> "dobby-seo/Wav2Keyword"
"castorini/honk" -> "jtkim-kaist/VAD" ["e"=1]
"castorini/honk" -> "roman-vygon/triplet_loss_kws"
"castorini/honk" -> "srvk/eesen"
"castorini/honk" -> "jingyonghou/RPN_KWS"
"castorini/honk" -> "hirofumi0810/neural_sp"
"sreuter/node-speakable" -> "cmusphinx/node-pocketsphinx"
"syl22-00/pocketsphinx.js" -> "zzmp/juliusjs"
"syl22-00/pocketsphinx.js" -> "cmusphinx/node-pocketsphinx"
"syl22-00/pocketsphinx.js" -> "cmusphinx/pocketsphinx"
"syl22-00/pocketsphinx.js" -> "TalAter/annyang"
"syl22-00/pocketsphinx.js" -> "alumae/kaldi-gstreamer-server"
"syl22-00/pocketsphinx.js" -> "sdkcarlos/artyom.js"
"syl22-00/pocketsphinx.js" -> "cmusphinx/g2p-seq2seq"
"syl22-00/pocketsphinx.js" -> "cmusphinx/sphinx4"
"syl22-00/pocketsphinx.js" -> "watson-developer-cloud/speech-to-text-nodejs" ["e"=1]
"syl22-00/pocketsphinx.js" -> "bambocher/pocketsphinx-python"
"syl22-00/pocketsphinx.js" -> "cmusphinx/pocketsphinx-python"
"syl22-00/pocketsphinx.js" -> "mdn/web-speech-api"
"syl22-00/pocketsphinx.js" -> "mattdiamond/Recorderjs" ["e"=1]
"syl22-00/pocketsphinx.js" -> "kripken/speak.js"
"syl22-00/pocketsphinx.js" -> "evancohen/sonus"
"belambert/asr-evaluation" -> "jitsi/jiwer"
"belambert/asr-evaluation" -> "zszyellow/WER-in-python"
"belambert/asr-evaluation" -> "belambert/edit-distance"
"belambert/asr-evaluation" -> "dspavankumar/keras-kaldi"
"belambert/asr-evaluation" -> "gooofy/zamia-speech"
"fnl/syntok" -> "fnl/segtok"
"yeyupiaoling/LearnPaddle" -> "yeyupiaoling/LearnPaddle2"
"yeyupiaoling/LearnPaddle" -> "huxiaoman7/PaddlePaddle_code" ["e"=1]
"yeyupiaoling/LearnPaddle" -> "ninetailskim/DodgeFace"
"yeyupiaoling/LearnPaddle" -> "PaddlePaddle/book" ["e"=1]
"yeyupiaoling/LearnPaddle" -> "1084667371/ExtractLine"
"yeyupiaoling/LearnPaddle" -> "yeyupiaoling/PaddlePaddle-SSD"
"yeyupiaoling/LearnPaddle" -> "AgentMaker/PAPC"
"yeyupiaoling/LearnPaddle" -> "yeyupiaoling/PaddlePaddle-DeepSpeech"
"yeyupiaoling/LearnPaddle" -> "yeyupiaoling/BookSource"
"yeyupiaoling/LearnPaddle" -> "yeyupiaoling/VoiceprintRecognition-PaddlePaddle"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "yeyupiaoling/PaddlePaddle-MTCNN"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "wobushihuair/paddlepaddle_project"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "leigangblog/AI_Tools"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "ITerydh/PaddlePaddle-Python-Zero-Based"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "yeyupiaoling/PaddlePaddle-CRNN"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "jhcgt4869/Unpaired_Probability_Prediction_The_first_ten"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "ninetailskim/EXQ_IndonesiaVer"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "AgentMaker/PPQI.jl"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "GuoQuanhao/arcface-Paddle"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "yeyupiaoling/PaddlePaddle-CrowdNet"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "AgentMaker/Paddle-IMSP"
"yeyupiaoling/PaddlePaddle-MobileFaceNets" -> "jhcgt4869/LiHongyi_curriculum_experience"
"Bee-Mar/mmpm" -> "sdetweil/MagicMirror_scripts"
"Bee-Mar/mmpm" -> "guysoft/MagicMirrorOS"
"Bee-Mar/mmpm" -> "Jopyth/MMM-Remote-Control"
"Bee-Mar/mmpm" -> "sheyabernstein/MMM-pihole-stats"
"Bee-Mar/mmpm" -> "Klettner/MM-Remote"
"Bee-Mar/mmpm" -> "PoOwAa/MMM-network-signal"
"Bee-Mar/mmpm" -> "ianperrin/MMM-ModuleScheduler"
"Bee-Mar/mmpm" -> "slametps/MMM-NetworkConnection"
"Bee-Mar/mmpm" -> "shbatm/MMM-OnScreenMenu"
"Bee-Mar/mmpm" -> "htilburgs/MMM-MyGarbage"
"Bee-Mar/mmpm" -> "MMM-CalendarExt2/MMM-CalendarExt2"
"Bee-Mar/mmpm" -> "delightedCrow/WallberryTheme"
"Bee-Mar/mmpm" -> "darickc/MMM-BackgroundSlideshow"
"Bee-Mar/mmpm" -> "ItayXD/MMM-Admin-Interface"
"Bee-Mar/mmpm" -> "roramirez/MagicMirror-Module-Template"
"shaneosullivan/boltjs" -> "phacility/javelin"
"shaneosullivan/boltjs" -> "joehewitt/scrollability" ["e"=1]
"jitsi/jiwer" -> "belambert/asr-evaluation"
"jitsi/jiwer" -> "zszyellow/WER-in-python"
"jitsi/jiwer" -> "lhotse-speech/lhotse"
"jitsi/jiwer" -> "SpeechColab/GigaSpeech"
"jitsi/jiwer" -> "kensho-technologies/pyctcdecode"
"jitsi/jiwer" -> "lumaku/ctc-segmentation"
"jitsi/jiwer" -> "k2-fsa/icefall"
"jitsi/jiwer" -> "microsoft/UniSpeech" ["e"=1]
"jitsi/jiwer" -> "k2-fsa/k2"
"jitsi/jiwer" -> "gabrielmittag/NISQA" ["e"=1]
"jitsi/jiwer" -> "X-LANCE/SLAM-LLM" ["e"=1]
"jitsi/jiwer" -> "aliutkus/speechmetrics" ["e"=1]
"jitsi/jiwer" -> "coqui-ai/open-speech-corpora" ["e"=1]
"jitsi/jiwer" -> "usnistgov/SCTK"
"jitsi/jiwer" -> "pykaldi/pykaldi"
"hirofumi0810/neural_sp" -> "cywang97/StreamingTransformer"
"hirofumi0810/neural_sp" -> "ZhengkunTian/OpenTransformer"
"hirofumi0810/neural_sp" -> "tencent-ailab/pika"
"hirofumi0810/neural_sp" -> "k2-fsa/k2"
"hirofumi0810/neural_sp" -> "freewym/espresso"
"hirofumi0810/neural_sp" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"hirofumi0810/neural_sp" -> "wenet-e2e/speech-recognition-papers"
"hirofumi0810/neural_sp" -> "kaituoxu/Speech-Transformer"
"hirofumi0810/neural_sp" -> "ZhengkunTian/rnn-transducer"
"hirofumi0810/neural_sp" -> "HawkAaron/warp-transducer"
"hirofumi0810/neural_sp" -> "1ytic/warp-rnnt"
"hirofumi0810/neural_sp" -> "thu-spmi/CAT"
"hirofumi0810/neural_sp" -> "theblackcat102/edgedict"
"hirofumi0810/neural_sp" -> "noahchalifour/rnnt-speech-recognition"
"hirofumi0810/neural_sp" -> "lhotse-speech/lhotse"
"foamliu/Speech-Transformer" -> "ZhengkunTian/OpenTransformer"
"foamliu/Speech-Transformer" -> "sooftware/speech-transformer" ["e"=1]
"foamliu/Speech-Transformer" -> "ZhengkunTian/rnn-transducer"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "kaituoxu/Speech-Transformer"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "hirofumi0810/neural_sp"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "mravanelli/pytorch-kaldi"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "kaituoxu/Listen-Attend-Spell"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "awni/speech"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "SeanNaren/deepspeech.pytorch"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "s3prl/s3prl" ["e"=1]
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "gentaiscool/end2end-asr-pytorch"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "syhw/wer_are_we"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "k2-fsa/k2"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "freewym/espresso"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "DemisEom/SpecAugment"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "espnet/espnet"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "zcaceres/spec_augment"
"Alexander-H-Liu/End-to-end-ASR-Pytorch" -> "parlance/ctcdecode"
"Kaljurand/dictate.js" -> "jcsilva/docker-kaldi-gstreamer-server"
"Kaljurand/dictate.js" -> "alumae/gst-kaldi-nnet2-online"
"Kaljurand/dictate.js" -> "alumae/kaldi-gstreamer-server"
"Kaljurand/dictate.js" -> "dialogflow/asr-server"
"Kaljurand/dictate.js" -> "Kaljurand/K6nele"
"thomasschmied/Speech_Recognition_with_Tensorflow" -> "WindQAQ/listen-attend-and-spell"
"thomasschmied/Speech_Recognition_with_Tensorflow" -> "vrenkens/nabu"
"thomasschmied/Speech_Recognition_with_Tensorflow" -> "HawkAaron/RNN-Transducer"
"thomasschmied/Speech_Recognition_with_Tensorflow" -> "rwth-i6/returnn"
"thomasschmied/Speech_Recognition_with_Tensorflow" -> "rwth-i6/returnn-experiments"
"thomasschmied/Speech_Recognition_with_Tensorflow" -> "kaituoxu/Listen-Attend-Spell"
"thomasschmied/Speech_Recognition_with_Tensorflow" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"thomasschmied/Speech_Recognition_with_Tensorflow" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"thomasschmied/Speech_Recognition_with_Tensorflow" -> "igormq/asr-study"
"thomasschmied/Speech_Recognition_with_Tensorflow" -> "Kyubyong/css10" ["e"=1]
"Picovoice/rhino" -> "Picovoice/cheetah"
"Picovoice/rhino" -> "Picovoice/picovoice"
"Picovoice/rhino" -> "Picovoice/porcupine"
"Picovoice/rhino" -> "Picovoice/leopard"
"Picovoice/rhino" -> "Picovoice/cobra"
"Picovoice/rhino" -> "Picovoice/speech-to-text-benchmark"
"Picovoice/rhino" -> "Picovoice/koala"
"Picovoice/rhino" -> "Picovoice/web-voice-processor"
"Picovoice/rhino" -> "Picovoice/orca"
"Picovoice/rhino" -> "Picovoice/picollm"
"Picovoice/rhino" -> "Picovoice/speech-to-intent-benchmark"
"Picovoice/rhino" -> "Picovoice/wake-word-benchmark"
"Picovoice/rhino" -> "Picovoice/octopus"
"Picovoice/rhino" -> "Picovoice/eagle"
"ARM-software/ML-KWS-for-MCU" -> "mindorii/kws"
"ARM-software/ML-KWS-for-MCU" -> "castorini/honk"
"ARM-software/ML-KWS-for-MCU" -> "colinsongf/keyword_spotting"
"ARM-software/ML-KWS-for-MCU" -> "hyperconnect/TC-ResNet"
"ARM-software/ML-KWS-for-MCU" -> "wenet-e2e/wekws"
"ARM-software/ML-KWS-for-MCU" -> "ARM-software/ML-examples" ["e"=1]
"ARM-software/ML-KWS-for-MCU" -> "majianjia/nnom" ["e"=1]
"ARM-software/ML-KWS-for-MCU" -> "zycv/awesome-keyword-spotting"
"ARM-software/ML-KWS-for-MCU" -> "microsoft/DNS-Challenge" ["e"=1]
"ARM-software/ML-KWS-for-MCU" -> "ARM-software/CMSIS_5" ["e"=1]
"ARM-software/ML-KWS-for-MCU" -> "mravanelli/pytorch-kaldi"
"ARM-software/ML-KWS-for-MCU" -> "athena-team/athena-signal" ["e"=1]
"ARM-software/ML-KWS-for-MCU" -> "WenzheLiu-Speech/awesome-speech-enhancement" ["e"=1]
"ARM-software/ML-KWS-for-MCU" -> "LCAV/pyroomacoustics" ["e"=1]
"ARM-software/ML-KWS-for-MCU" -> "ARM-software/armnn" ["e"=1]
"soerenab/AudioMNIST" -> "Jakobovski/free-spoken-digit-dataset"
"soerenab/AudioMNIST" -> "microsoft/CLAP" ["e"=1]
"soerenab/AudioMNIST" -> "sebastian-lapuschkin/lrp_toolbox" ["e"=1]
"Picovoice/cheetah" -> "Picovoice/rhino"
"Picovoice/cheetah" -> "Picovoice/leopard"
"Picovoice/cheetah" -> "Picovoice/orca"
"Picovoice/cheetah" -> "Picovoice/web-voice-processor"
"Picovoice/cheetah" -> "Picovoice/speech-to-text-benchmark"
"Picovoice/cheetah" -> "Picovoice/porcupine"
"Picovoice/cheetah" -> "Picovoice/picovoice"
"Picovoice/cheetah" -> "Picovoice/picollm"
"Picovoice/cheetah" -> "Picovoice/speech-to-intent-benchmark"
"Picovoice/cheetah" -> "gooofy/zamia-speech"
"googleapis/nodejs-text-to-speech" -> "googleapis/nodejs-speech"
"googleapis/nodejs-text-to-speech" -> "googleapis/nodejs-language"
"googleapis/nodejs-text-to-speech" -> "googleapis/nodejs-translate"
"googleapis/nodejs-text-to-speech" -> "googleapis/nodejs-redis" ["e"=1]
"googleapis/nodejs-text-to-speech" -> "googleapis/nodejs-video-intelligence"
"robmsmt/KerasDeepSpeech" -> "ShankHarinath/DeepSpeech2-Keras"
"robmsmt/KerasDeepSpeech" -> "igormq/ctc_tensorflow_example"
"robmsmt/KerasDeepSpeech" -> "dspavankumar/keras-kaldi"
"robmsmt/KerasDeepSpeech" -> "holm-aune-bachelor2018/ctc"
"robmsmt/KerasDeepSpeech" -> "igormq/asr-study"
"robmsmt/KerasDeepSpeech" -> "juliuskunze/speechless"
"robmsmt/KerasDeepSpeech" -> "baidu-research/ba-dls-deepspeech"
"robmsmt/KerasDeepSpeech" -> "theblackcat102/edgedict"
"robmsmt/KerasDeepSpeech" -> "awni/speech"
"MainRo/deepspeech-server" -> "ashwan1/django-deepspeech-server"
"MainRo/deepspeech-server" -> "MainRo/docker-deepspeech-server"
"MainRo/deepspeech-server" -> "daanzu/deepspeech-websocket-server"
"HawkAaron/warp-transducer" -> "1ytic/warp-rnnt"
"HawkAaron/warp-transducer" -> "HawkAaron/RNN-Transducer"
"HawkAaron/warp-transducer" -> "awni/transducer"
"HawkAaron/warp-transducer" -> "ZhengkunTian/rnn-transducer"
"HawkAaron/warp-transducer" -> "HawkAaron/E2E-ASR"
"HawkAaron/warp-transducer" -> "noahchalifour/rnnt-speech-recognition"
"HawkAaron/warp-transducer" -> "k2-fsa/fast_rnnt"
"HawkAaron/warp-transducer" -> "cywang97/StreamingTransformer"
"HawkAaron/warp-transducer" -> "YiwenShaoStephen/pychain"
"HawkAaron/warp-transducer" -> "thu-spmi/CAT"
"HawkAaron/warp-transducer" -> "tencent-ailab/pika"
"HawkAaron/warp-transducer" -> "facebookresearch/gtn"
"HawkAaron/warp-transducer" -> "hirofumi0810/neural_sp"
"HawkAaron/warp-transducer" -> "lingochamp/kaldi-ctc"
"HawkAaron/warp-transducer" -> "1ytic/warp-rna"
"githubharald/CTCWordBeamSearch" -> "githubharald/CTCDecoder"
"githubharald/CTCWordBeamSearch" -> "parlance/ctcdecode"
"githubharald/CTCWordBeamSearch" -> "corticph/prefix-beam-search"
"githubharald/CTCWordBeamSearch" -> "githubharald/SimpleHTR" ["e"=1]
"githubharald/CTCWordBeamSearch" -> "lamhoangtung/LineHTR" ["e"=1]
"githubharald/CTCWordBeamSearch" -> "HawkAaron/warp-transducer"
"githubharald/CTCWordBeamSearch" -> "githubharald/WordDetector" ["e"=1]
"githubharald/CTCWordBeamSearch" -> "srvk/eesen"
"githubharald/CTCWordBeamSearch" -> "HawkAaron/RNN-Transducer"
"githubharald/CTCWordBeamSearch" -> "YiwenShaoStephen/pychain"
"githubharald/CTCWordBeamSearch" -> "awni/transducer"
"githubharald/CTCWordBeamSearch" -> "HawkAaron/E2E-ASR"
"githubharald/CTCWordBeamSearch" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"githubharald/CTCWordBeamSearch" -> "thu-spmi/CAT"
"githubharald/CTCWordBeamSearch" -> "Sundy1219/ctc_beam_search_lm"
"hyperconnect/TC-ResNet" -> "mindorii/kws"
"hyperconnect/TC-ResNet" -> "colinsongf/keyword_spotting"
"hyperconnect/TC-ResNet" -> "castorini/honk"
"hyperconnect/TC-ResNet" -> "ARM-software/keyword-transformer"
"hyperconnect/TC-ResNet" -> "zycv/awesome-keyword-spotting"
"hyperconnect/TC-ResNet" -> "jingyonghou/KWS_Max-pooling_RHE"
"hyperconnect/TC-ResNet" -> "Interlagos/TENet-kws"
"hyperconnect/TC-ResNet" -> "sonos/keyword-spotting-research-datasets"
"hyperconnect/TC-ResNet" -> "wenet-e2e/wekws"
"hyperconnect/TC-ResNet" -> "jingyonghou/RPN_KWS"
"hyperconnect/TC-ResNet" -> "aishell-foundation/DaCiDian"
"hyperconnect/TC-ResNet" -> "ARM-software/ML-KWS-for-MCU"
"hyperconnect/TC-ResNet" -> "fgnt/pb_chime5" ["e"=1]
"cmusphinx/pocketsphinx-android-demo" -> "cmusphinx/pocketsphinx-android"
"cmusphinx/pocketsphinx-android-demo" -> "cmusphinx/pocketsphinx"
"cmusphinx/pocketsphinx-android-demo" -> "cmusphinx/pocketsphinx-ios-demo"
"cmusphinx/pocketsphinx-android-demo" -> "cmusphinx/sphinx4"
"cmusphinx/pocketsphinx-android-demo" -> "galrom/ContinuesVoiceRecognition"
"cmusphinx/pocketsphinx-android-demo" -> "cmusphinx/sphinxbase"
"cmusphinx/pocketsphinx-android-demo" -> "cmusphinx/pocketsphinx-python"
"cmusphinx/pocketsphinx-android-demo" -> "alphacep/vosk-android-demo"
"cmusphinx/pocketsphinx-android-demo" -> "ihrupin/SpeechRecognitionService"
"cmusphinx/pocketsphinx-android-demo" -> "cmusphinx/cmudict-tools"
"cmusphinx/pocketsphinx-android-demo" -> "cmusphinx/sphinxtrain"
"delightedCrow/WallberryTheme" -> "ianperrin/MMM-ModuleScheduler"
"delightedCrow/WallberryTheme" -> "edward-shen/MMM-page-indicator"
"delightedCrow/WallberryTheme" -> "skuethe/MMM-Spotify"
"delightedCrow/WallberryTheme" -> "grenagit/MMM-APOD"
"robmsmt/ASR-Audio-Data-Links" -> "SpeechColab/GigaSpeech"
"mankadronit/Automated-Essay--Scoring" -> "nusnlp/nea"
"mankadronit/Automated-Essay--Scoring" -> "shubhpawar/Automated-Essay-Scoring"
"mankadronit/Automated-Essay--Scoring" -> "Turanga1/Automated-Essay-Scoring"
"mankadronit/Automated-Essay--Scoring" -> "Farahn/AES"
"mankadronit/Automated-Essay--Scoring" -> "sankalpjain99/Automatic-Essay-Scoring"
"moisesveleta/GOP-LSTM" -> "sweekarsud/Goodness-of-Pronunciation"
"moisesveleta/GOP-LSTM" -> "tzyll/goparrot"
"moisesveleta/GOP-LSTM" -> "JazminVidal/gop-dnn-epadb"
"notAI-tech/deepsegment" -> "bedapudi6788/deepcorrect"
"notAI-tech/deepsegment" -> "notAI-tech/fastPunct"
"notAI-tech/deepsegment" -> "ottokart/punctuator2"
"notAI-tech/deepsegment" -> "fnl/syntok"
"notAI-tech/deepsegment" -> "brandonrobertz/sentence-autosegmentation"
"notAI-tech/deepsegment" -> "segment-any-text/wtpsplit" ["e"=1]
"notAI-tech/deepsegment" -> "alpoktem/punkProse"
"sweekarsud/Goodness-of-Pronunciation" -> "moisesveleta/GOP-LSTM"
"sweekarsud/Goodness-of-Pronunciation" -> "tzyll/goparrot"
"sweekarsud/Goodness-of-Pronunciation" -> "JazminVidal/gop-dnn-epadb"
"sweekarsud/Goodness-of-Pronunciation" -> "MarceloSancinetti/epa-gop-pykaldi"
"sweekarsud/Goodness-of-Pronunciation" -> "jimbozhang/kaldi-gop"
"sweekarsud/Goodness-of-Pronunciation" -> "tbright17/kaldi-dnn-ali-gop"
"sweekarsud/Goodness-of-Pronunciation" -> "YuanGongND/gopt"
"sweekarsud/Goodness-of-Pronunciation" -> "aalto-speech/interspeech2019_karhila_et_al"
"sweekarsud/Goodness-of-Pronunciation" -> "vocaliodmiku/wav2vec2mdd"
"sweekarsud/Goodness-of-Pronunciation" -> "jimbozhang/speechocean762"
"XiaoMi/kaldi-onnx" -> "YiwenShaoStephen/pychain"
"XiaoMi/kaldi-onnx" -> "tencent-ailab/pika"
"XiaoMi/kaldi-onnx" -> "andyweiqiu/asr-ios-local"
"XiaoMi/kaldi-onnx" -> "KarelVesely84/kaldi-io-for-python"
"XiaoMi/kaldi-onnx" -> "thu-spmi/CAT"
"XiaoMi/kaldi-onnx" -> "xiangxyq/minimize-chain-decoder"
"XiaoMi/kaldi-onnx" -> "xiangxyq/kaldi"
"XiaoMi/kaldi-onnx" -> "jimbozhang/kaldi-gop"
"XiaoMi/kaldi-onnx" -> "k2-fsa/k2"
"XiaoMi/kaldi-onnx" -> "cywang97/StreamingTransformer"
"XiaoMi/kaldi-onnx" -> "wenet-e2e/speech-recognition-papers"
"XiaoMi/kaldi-onnx" -> "jpuigcerver/kaldi-decoders"
"ZhengkunTian/Speech-Tranformer-Pytorch" -> "HawkAaron/E2E-ASR"
"Picovoice/speech-to-text-benchmark" -> "Picovoice/wake-word-benchmark"
"Picovoice/speech-to-text-benchmark" -> "Picovoice/cheetah"
"Picovoice/speech-to-text-benchmark" -> "Picovoice/rhino"
"Picovoice/speech-to-text-benchmark" -> "airbnb/artificial-adversary" ["e"=1]
"Picovoice/speech-to-text-benchmark" -> "Picovoice/leopard"
"Picovoice/speech-to-text-benchmark" -> "gooofy/zamia-speech"
"Picovoice/speech-to-text-benchmark" -> "Franck-Dernoncourt/ASR_benchmark"
"Picovoice/speech-to-text-benchmark" -> "robmsmt/ASR-Audio-Data-Links"
"chaosparrot/parrot.py" -> "wolfmanstout/talon-gaze-ocr"
"chaosparrot/parrot.py" -> "chaosparrot/talon_hud"
"chaosparrot/parrot.py" -> "AndreasArvidsson/andreas-talon"
"chaosparrot/parrot.py" -> "splondike/talon_ui_helper"
"chaosparrot/parrot.py" -> "cursorless-dev/cursorless-talon"
"chaosparrot/parrot.py" -> "TalonCommunity/Wiki"
"chaosparrot/parrot.py" -> "talonhub/community"
"chaosparrot/parrot.py" -> "david-tejada/rango"
"chaosparrot/parrot.py" -> "C-Loftus/talon-ai-tools"
"chaosparrot/parrot.py" -> "mirober/vscode-TalonScript"
"chaosparrot/parrot.py" -> "mirober/Breathe"
"chaosparrot/parrot.py" -> "brollin/flex-mouse-grid"
"chaosparrot/parrot.py" -> "AndrewDant/screen-spots"
"eouia/MMM-Tools" -> "MMRIZE/MMM-TelegramBot"
"aserramonner/MMM-HASS" -> "zuo000/MMM-HomeAssistant"
"hermanho/MMM-GooglePhotos" -> "darickc/MMM-BackgroundSlideshow"
"hermanho/MMM-GooglePhotos" -> "edward-shen/MMM-pages"
"hermanho/MMM-GooglePhotos" -> "jclarke0000/MMM-DarkSkyForecast"
"hermanho/MMM-GooglePhotos" -> "Jopyth/MMM-Remote-Control"
"hermanho/MMM-GooglePhotos" -> "barnabycolby/MMM-Carousel"
"hermanho/MMM-GooglePhotos" -> "heskja/MMM-CalendarWeek"
"hermanho/MMM-GooglePhotos" -> "vicmora/MMM-GoogleMapsTraffic"
"hermanho/MMM-GooglePhotos" -> "eouia/MMM-CalendarExt"
"darickc/MMM-BackgroundSlideshow" -> "edward-shen/MMM-pages"
"darickc/MMM-BackgroundSlideshow" -> "AgP42/MMM-SmartWebDisplay"
"darickc/MMM-BackgroundSlideshow" -> "Jopyth/MMM-Remote-Control"
"darickc/MMM-BackgroundSlideshow" -> "hermanho/MMM-GooglePhotos"
"darickc/MMM-BackgroundSlideshow" -> "heskja/MMM-CalendarWeek"
"darickc/MMM-BackgroundSlideshow" -> "barnabycolby/MMM-Carousel"
"darickc/MMM-BackgroundSlideshow" -> "jclarke0000/MMM-DarkSkyForecast"
"darickc/MMM-BackgroundSlideshow" -> "shbatm/MMM-OnScreenMenu"
"darickc/MMM-BackgroundSlideshow" -> "BenRoe/MMM-SystemStats"
"darickc/MMM-BackgroundSlideshow" -> "kolbyjack/MMM-Wallpaper"
"darickc/MMM-BackgroundSlideshow" -> "justjim1220/MMM-NewsFeedTicker"
"darickc/MMM-BackgroundSlideshow" -> "ianperrin/MMM-ModuleScheduler"
"darickc/MMM-BackgroundSlideshow" -> "vicmora/MMM-GoogleMapsTraffic"
"darickc/MMM-BackgroundSlideshow" -> "eouia/MMM-Tools"
"dictation-toolbox/Caster" -> "dictation-toolbox/dragonfly"
"dictation-toolbox/Caster" -> "dictation-toolbox/aenea"
"dictation-toolbox/Caster" -> "t4ngo/dragonfly"
"dictation-toolbox/Caster" -> "simianhacker/code-by-voice"
"dictation-toolbox/Caster" -> "dictation-toolbox/dragonfly-scripts"
"dictation-toolbox/Caster" -> "wolfmanstout/dragonfly-commands"
"dictation-toolbox/Caster" -> "tgrosinger/aenea-grammars"
"dictation-toolbox/Caster" -> "t4ngo/dragonfly-modules"
"dictation-toolbox/Caster" -> "daanzu/kaldi-active-grammar"
"dictation-toolbox/Caster" -> "talonvoice/draconity"
"dictation-toolbox/Caster" -> "mirober/Breathe"
"dictation-toolbox/Caster" -> "wolfmanstout/gaze-ocr"
"dictation-toolbox/Caster" -> "dictation-toolbox/natlink"
"dictation-toolbox/Caster" -> "chajadan/DragonflyRules"
"dictation-toolbox/Caster" -> "dictation-toolbox/aenea-grammars"
"cmusphinx/sphinxbase" -> "cmusphinx/sphinxtrain"
"cmusphinx/sphinxbase" -> "cmusphinx/pocketsphinx"
"cmusphinx/sphinxbase" -> "cmusphinx/pocketsphinx-python"
"cmusphinx/sphinxbase" -> "cmusphinx/pocketsphinx-android"
"cmusphinx/sphinxbase" -> "cmusphinx/sphinx4"
"cmusphinx/sphinxbase" -> "cmusphinx/cmudict-tools"
"cmusphinx/sphinxbase" -> "cmusphinx/g2p-seq2seq"
"cmusphinx/sphinxbase" -> "cmusphinx/pocketsphinx-ios-demo"
"cmusphinx/sphinxbase" -> "cmusphinx/pocketsphinx-android-demo"
"cmusphinx/sphinxbase" -> "cmusphinx/cmudict" ["e"=1]
"cmusphinx/sphinxbase" -> "bambocher/pocketsphinx-python"
"cmusphinx/sphinxbase" -> "julius-speech/julius"
"kolbyjack/MMM-Wallpaper" -> "darickc/MMM-BackgroundSlideshow"
"kolbyjack/MMM-Wallpaper" -> "edward-shen/MMM-pages"
"kolbyjack/MMM-Wallpaper" -> "delightedCrow/WallberryTheme"
"kolbyjack/MMM-Wallpaper" -> "CFenner/MMM-AirQuality"
"kolbyjack/MMM-Wallpaper" -> "MMRIZE/MMM-CalendarExt3"
"kolbyjack/MMM-Wallpaper" -> "BenRoe/MMM-SystemStats"
"kolbyjack/MMM-Wallpaper" -> "sathyarajv/MMM-OpenmapWeather"
"Diamondfan/CTC_pytorch" -> "jinserk/pytorch-asr"
"Diamondfan/CTC_pytorch" -> "kaituoxu/Listen-Attend-Spell"
"Diamondfan/CTC_pytorch" -> "gentaiscool/end2end-asr-pytorch"
"Diamondfan/CTC_pytorch" -> "lingochamp/kaldi-ctc"
"Diamondfan/CTC_pytorch" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"Diamondfan/CTC_pytorch" -> "Sundy1219/eesen-for-thchs30"
"Diamondfan/CTC_pytorch" -> "HawkAaron/E2E-ASR"
"Diamondfan/CTC_pytorch" -> "hirofumi0810/neural_sp"
"jingyonghou/RPN_KWS" -> "jingyonghou/KWS_Max-pooling_RHE"
"jingyonghou/RPN_KWS" -> "yingtaoHuo/wakeUp"
"rolczynski/Automatic-Speech-Recognition" -> "30stomercury/Automatic-Speech-Recognition"
"rolczynski/Automatic-Speech-Recognition" -> "mdangschat/ctc-asr"
"rolczynski/Automatic-Speech-Recognition" -> "robmsmt/ASR-Audio-Data-Links"
"freewym/espresso" -> "YiwenShaoStephen/pychain"
"freewym/espresso" -> "hirofumi0810/neural_sp"
"freewym/espresso" -> "k2-fsa/k2"
"freewym/espresso" -> "lhotse-speech/lhotse"
"freewym/espresso" -> "jzlianglu/pykaldi2"
"freewym/espresso" -> "tencent-ailab/pika"
"freewym/espresso" -> "pykaldi/pykaldi"
"freewym/espresso" -> "thu-spmi/CAT"
"freewym/espresso" -> "cywang97/StreamingTransformer"
"freewym/espresso" -> "mravanelli/pytorch-kaldi"
"freewym/espresso" -> "YoavRamon/awesome-kaldi"
"freewym/espresso" -> "KarelVesely84/kaldi-io-for-python"
"freewym/espresso" -> "SpeechColab/GigaSpeech"
"freewym/espresso" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"freewym/espresso" -> "athena-team/athena" ["e"=1]
"jclarke0000/MMM-DarkSkyForecast" -> "vincep5/MMM-DarkSkyRadar"
"AgP42/MMM-SmartWebDisplay" -> "ulrichwisser/MMM-Widget"
"nischi/MMM-Face-Reco-DNN" -> "eric-h-st/MMM-AmbientBrightnessDetection"
"nischi/MMM-Face-Reco-DNN" -> "jimbydude/MMM-Face-Multi-User-Recognition-SMAI"
"nischi/MMM-Face-Reco-DNN" -> "njwilliams/MMM-Faces"
"nischi/MMM-Face-Reco-DNN" -> "tosti007/MMM-ProfileSwitcher"
"nischi/MMM-Face-Reco-DNN" -> "rejas/MMM-MotionDetector"
"nischi/MMM-Face-Reco-DNN" -> "normyx/MMM-Facial-Recognition-OCV3"
"kevinatown/MMM-Screencast" -> "Jopyth/MMM-Remote-Control"
"kevinatown/MMM-Screencast" -> "edward-shen/MMM-pages"
"kevinatown/MMM-Screencast" -> "raywo/MMM-NowPlayingOnSpotify"
"kevinatown/MMM-Screencast" -> "darickc/MMM-BackgroundSlideshow"
"kevinatown/MMM-Screencast" -> "BenRoe/MMM-SystemStats"
"kevinatown/MMM-Screencast" -> "skuethe/MMM-Spotify"
"kevinatown/MMM-Screencast" -> "AgP42/MMM-SmartWebDisplay"
"kevinatown/MMM-Screencast" -> "barnabycolby/MMM-Carousel"
"kevinatown/MMM-Screencast" -> "edward-shen/MMM-page-indicator"
"kevinatown/MMM-Screencast" -> "Klettner/MM-Remote"
"kevinatown/MMM-Screencast" -> "bugsounet/MMM-GoogleAssistant"
"kevinatown/MMM-Screencast" -> "MichMich/MMM-Snow"
"kevinatown/MMM-Screencast" -> "shbatm/MMM-OnScreenMenu"
"kevinatown/MMM-Screencast" -> "shbatm/MMM-KeyBindings"
"kevinatown/MMM-Screencast" -> "gauravsacc/MMM-GoogleAssistant"
"vicmora/MMM-GoogleMapsTraffic" -> "saml-dev/MMM-Traffic"
"vicmora/MMM-GoogleMapsTraffic" -> "kapsolas/MMM-Instagram"
"vicmora/MMM-GoogleMapsTraffic" -> "barnabycolby/MMM-Carousel"
"vicmora/MMM-GoogleMapsTraffic" -> "fewieden/MMM-Fuel" ["e"=1]
"vicmora/MMM-GoogleMapsTraffic" -> "normyx/MMM-Facial-Recognition-OCV3"
"vicmora/MMM-GoogleMapsTraffic" -> "Matzefication/MMM-Hello-Mirror"
"MMRIZE/MMM-TelegramBot" -> "eouia/MMM-Tools"
"pinsdorf/MMM-WeeklySchedule" -> "edward-shen/MMM-page-indicator"
"pinsdorf/MMM-WeeklySchedule" -> "edward-shen/MMM-pages"
"slametps/MMM-NetworkConnection" -> "PoOwAa/MMM-network-signal"
"Veldrovive/MMM-Page-Selector" -> "edward-shen/MMM-page-indicator"
"talonvoice/talon" -> "TalonCommunity/Wiki"
"talonvoice/talon" -> "dwiel/talon_community"
"talonvoice/talon" -> "wolfmanstout/talon-gaze-ocr"
"mindorii/kws" -> "colinsongf/keyword_spotting"
"mindorii/kws" -> "hyperconnect/TC-ResNet"
"mindorii/kws" -> "castorini/honk"
"mindorii/kws" -> "zycv/awesome-keyword-spotting"
"mindorii/kws" -> "ARM-software/ML-KWS-for-MCU"
"mindorii/kws" -> "wenet-e2e/wekws"
"mindorii/kws" -> "sonos/keyword-spotting-research-datasets"
"mindorii/kws" -> "yltw27/KeywordSpotting"
"mindorii/kws" -> "aishell-foundation/DaCiDian"
"mindorii/kws" -> "jingyonghou/RPN_KWS"
"mindorii/kws" -> "harvard-edge/multilingual_kws"
"mindorii/kws" -> "XiaoMi/kaldi-onnx"
"mindorii/kws" -> "xiangxyq/kaldi"
"mindorii/kws" -> "hcmlab/vadnet" ["e"=1]
"mindorii/kws" -> "ArchitParnami/Few-Shot-KWS"
"mdangschat/ctc-asr" -> "HawkAaron/E2E-ASR"
"mdangschat/ctc-asr" -> "noahchalifour/rnnt-speech-recognition"
"mdangschat/ctc-asr" -> "zw76859420/ASR_WORD"
"raywo/MMM-NowPlayingOnSpotify" -> "Jopyth/MMM-Remote-Control"
"raywo/MMM-NowPlayingOnSpotify" -> "skuethe/MMM-Spotify"
"raywo/MMM-NowPlayingOnSpotify" -> "paviro/MMM-PIR-Sensor"
"raywo/MMM-NowPlayingOnSpotify" -> "kevinatown/MMM-Screencast"
"raywo/MMM-NowPlayingOnSpotify" -> "barnabycolby/MMM-Carousel"
"raywo/MMM-NowPlayingOnSpotify" -> "BenRoe/MMM-SystemStats"
"raywo/MMM-NowPlayingOnSpotify" -> "ianperrin/MMM-Strava"
"raywo/MMM-NowPlayingOnSpotify" -> "saml-dev/MMM-Traffic"
"raywo/MMM-NowPlayingOnSpotify" -> "darickc/MMM-BackgroundSlideshow"
"raywo/MMM-NowPlayingOnSpotify" -> "gauravsacc/MMM-GoogleAssistant"
"raywo/MMM-NowPlayingOnSpotify" -> "kjb085/MMM-Reddit"
"raywo/MMM-NowPlayingOnSpotify" -> "edward-shen/MMM-pages"
"raywo/MMM-NowPlayingOnSpotify" -> "pinsdorf/MMM-WeeklySchedule"
"raywo/MMM-NowPlayingOnSpotify" -> "CatoAntonsen/MMM-SpotifyConnectUI"
"raywo/MMM-NowPlayingOnSpotify" -> "thobach/MMM-MicrosoftToDo"
"skuethe/MMM-Spotify" -> "fewieden/MMM-soccer"
"skuethe/MMM-Spotify" -> "Anonym-tsk/MMM-Volume"
"skuethe/MMM-Spotify" -> "Klettner/MM-Remote"
"skuethe/MMM-Spotify" -> "raywo/MMM-NowPlayingOnSpotify"
"skuethe/MMM-Spotify" -> "delightedCrow/WallberryTheme"
"skuethe/MMM-Spotify" -> "BenRoe/MMM-SystemStats"
"skuethe/MMM-Spotify" -> "slametps/MMM-NetworkConnection"
"YoavRamon/awesome-kaldi" -> "pykaldi/pykaldi"
"YoavRamon/awesome-kaldi" -> "KarelVesely84/kaldi-io-for-python"
"YoavRamon/awesome-kaldi" -> "wenet-e2e/speech-recognition-papers"
"YoavRamon/awesome-kaldi" -> "alumae/kaldi-gstreamer-server"
"YoavRamon/awesome-kaldi" -> "k2-fsa/k2"
"YoavRamon/awesome-kaldi" -> "gooofy/zamia-speech"
"YoavRamon/awesome-kaldi" -> "mravanelli/pytorch-kaldi"
"YoavRamon/awesome-kaldi" -> "freewym/espresso"
"YoavRamon/awesome-kaldi" -> "daanzu/kaldi-active-grammar"
"YoavRamon/awesome-kaldi" -> "cywang97/StreamingTransformer"
"YoavRamon/awesome-kaldi" -> "XiaoMi/kaldi-onnx"
"YoavRamon/awesome-kaldi" -> "lhotse-speech/lhotse"
"YoavRamon/awesome-kaldi" -> "tencent-ailab/pika"
"YoavRamon/awesome-kaldi" -> "jzlianglu/pykaldi2"
"YoavRamon/awesome-kaldi" -> "wq2012/awesome-diarization" ["e"=1]
"alibaba/Alibaba-MIT-Speech" -> "tramphero/kaldi"
"alibaba/Alibaba-MIT-Speech" -> "audier/DeepSpeechRecognition"
"alibaba/Alibaba-MIT-Speech" -> "lingochamp/kaldi-ctc"
"alibaba/Alibaba-MIT-Speech" -> "srvk/eesen"
"alibaba/Alibaba-MIT-Speech" -> "mravanelli/pytorch-kaldi"
"alibaba/Alibaba-MIT-Speech" -> "mindorii/kws"
"alibaba/Alibaba-MIT-Speech" -> "kaituoxu/Speech-Transformer"
"alibaba/Alibaba-MIT-Speech" -> "syhw/wer_are_we"
"alibaba/Alibaba-MIT-Speech" -> "tencent-ailab/pika"
"alibaba/Alibaba-MIT-Speech" -> "HawkAaron/warp-transducer"
"alibaba/Alibaba-MIT-Speech" -> "aishell-foundation/DaCiDian"
"alibaba/Alibaba-MIT-Speech" -> "SeanNaren/deepspeech.pytorch"
"alibaba/Alibaba-MIT-Speech" -> "k2-fsa/k2"
"alibaba/Alibaba-MIT-Speech" -> "open-speech/speech-aligner" ["e"=1]
"alibaba/Alibaba-MIT-Speech" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"common-voice/cv-sentence-extractor" -> "common-voice/sentence-collector"
"bedapudi6788/deepcorrect" -> "geyang/deep-auto-punctuation"
"bedapudi6788/deepcorrect" -> "bedapudi6788/txt2txt"
"bedapudi6788/deepcorrect" -> "notAI-tech/deepsegment"
"bedapudi6788/deepcorrect" -> "notAI-tech/fastPunct"
"UFAL-DSG/alex" -> "UFAL-DSG/pykaldi"
"UFAL-DSG/alex" -> "UFAL-DSG/alex-asr"
"UFAL-DSG/alex" -> "alumae/gst-kaldi-nnet2-online"
"UFAL-DSG/alex" -> "vyraun/chatbot-MemN2N-tensorflow" ["e"=1]
"alphacep/vosk" -> "alphacep/vosk-server"
"alphacep/vosk" -> "alphacep/vosk-android-demo"
"alphacep/vosk" -> "XiaoMi/kaldi-onnx"
"kaituoxu/Listen-Attend-Spell" -> "kaituoxu/Speech-Transformer"
"kaituoxu/Listen-Attend-Spell" -> "jackaduma/LAS_Mandarin_PyTorch"
"kaituoxu/Listen-Attend-Spell" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"kaituoxu/Listen-Attend-Spell" -> "AzizCode92/Listen-Attend-and-Spell-Pytorch"
"kaituoxu/Listen-Attend-Spell" -> "HawkAaron/RNN-Transducer"
"kaituoxu/Listen-Attend-Spell" -> "zcaceres/spec_augment"
"kaituoxu/Listen-Attend-Spell" -> "WindQAQ/listen-attend-and-spell"
"kaituoxu/Listen-Attend-Spell" -> "gentaiscool/end2end-asr-pytorch"
"kaituoxu/Listen-Attend-Spell" -> "ZhengkunTian/rnn-transducer"
"kaituoxu/Listen-Attend-Spell" -> "Diamondfan/CTC_pytorch"
"kaituoxu/Listen-Attend-Spell" -> "Xiaoxiaohuangg/LAS-Chinese-pytorch"
"kaituoxu/Listen-Attend-Spell" -> "jzlianglu/pykaldi2"
"kaituoxu/Listen-Attend-Spell" -> "DemisEom/SpecAugment"
"kaituoxu/Listen-Attend-Spell" -> "HawkAaron/E2E-ASR"
"kaituoxu/Listen-Attend-Spell" -> "ZhengkunTian/Speech-Tranformer-Pytorch"
"cmusphinx/pocketsphinx-android" -> "cmusphinx/pocketsphinx-android-demo"
"cmusphinx/pocketsphinx-android" -> "cmusphinx/pocketsphinx-ios-demo"
"cmusphinx/pocketsphinx-android" -> "cmusphinx/sphinxbase"
"cmusphinx/pocketsphinx-android" -> "cmusphinx/cmudict-tools"
"cmusphinx/pocketsphinx-android" -> "cmusphinx/sphinxtrain"
"Tony607/Keras-Trigger-Word" -> "Picovoice/wake-word-benchmark"
"Tony607/Keras-Trigger-Word" -> "manankshastri/Trigger-Word-Detection"
"mrdis/MMM-google-route" -> "Jacopo1891/MMM-GoogleTrafficTimes"
"Gateway11/tensorflow-examples" -> "EliasCai/speech_recognition_ctc"
"Gateway11/tensorflow-examples" -> "pythonml/captacha"
"Gateway11/tensorflow-examples" -> "Pelhans/ZASR_tensorflow"
"yeyupiaoling/LearnPaddle2" -> "yeyupiaoling/LearnPaddle"
"yeyupiaoling/LearnPaddle2" -> "KernelErr/realtime-object-detector"
"yeyupiaoling/LearnPaddle2" -> "linhandev/medSeg"
"yeyupiaoling/LearnPaddle2" -> "HighCWu/anime_biggan_toy"
"yeyupiaoling/LearnPaddle2" -> "yeyupiaoling/PP-YOLOE"
"yeyupiaoling/LearnPaddle2" -> "zbp-xxxp/reading_pictures_writing_poems"
"yeyupiaoling/LearnPaddle2" -> "1084667371/ExtractLine"
"HackerShackOfficial/Smart-Security-Camera" -> "HackerShackOfficial/AI-Smart-Mirror"
"HackerShackOfficial/Smart-Security-Camera" -> "HackerShackOfficial/Smart-Mirror"
"HackerShackOfficial/Smart-Security-Camera" -> "EbenKouao/SmartCCTV-Camera" ["e"=1]
"HackerShackOfficial/Smart-Security-Camera" -> "HackerShackOfficial/Tracking-Turret"
"HackerShackOfficial/Smart-Security-Camera" -> "PiSimo/PiCamNN" ["e"=1]
"HackerShackOfficial/Smart-Security-Camera" -> "HackerShackOfficial/Raspberry-Pi-VNC-Mac"
"dictation-toolbox/dragonfly-scripts" -> "simianhacker/code-by-voice"
"dictation-toolbox/dragonfly-scripts" -> "t4ngo/dragonfly-modules"
"dictation-toolbox/dragonfly-scripts" -> "dictation-toolbox/aenea-grammars"
"dictation-toolbox/dragonfly-scripts" -> "tgrosinger/aenea-grammars"
"dictation-toolbox/dragonfly-scripts" -> "chajadan/DragonflyRules"
"dictation-toolbox/dragonfly-scripts" -> "wolfmanstout/dragonfly-commands"
"dictation-toolbox/dragonfly-scripts" -> "t4ngo/dragonfly"
"dictation-toolbox/dragonfly-scripts" -> "dictation-toolbox/Caster"
"dictation-toolbox/dragonfly-scripts" -> "dictation-toolbox/aenea"
"tramphero/kaldi" -> "alibaba/Alibaba-MIT-Speech"
"tramphero/kaldi" -> "audier/DeepSpeechRecognition"
"tramphero/kaldi" -> "lingochamp/kaldi-ctc"
"tramphero/kaldi" -> "srvk/eesen"
"tramphero/kaldi" -> "HawkAaron/warp-transducer"
"tramphero/kaldi" -> "sailist/ASRFrame"
"tramphero/kaldi" -> "Pelhans/ZASR_tensorflow"
"tramphero/kaldi" -> "athena-team/athena" ["e"=1]
"tramphero/kaldi" -> "k2-fsa/k2"
"tramphero/kaldi" -> "alumae/kaldi-gstreamer-server"
"tramphero/kaldi" -> "xxbb1234021/speech_recognition"
"tramphero/kaldi" -> "flashlight/wav2letter"
"tramphero/kaldi" -> "kaituoxu/Speech-Transformer"
"tramphero/kaldi" -> "aishell-foundation/DaCiDian"
"tramphero/kaldi" -> "pykaldi/pykaldi"
"xdcesc/my_ch_speech_recognition" -> "bestpower/Speech_Recognition_Test"
"xdcesc/my_ch_speech_recognition" -> "ky1994/SpeechRecognition"
"xdcesc/my_ch_speech_recognition" -> "xxbb1234021/speech_recognition"
"xdcesc/my_ch_speech_recognition" -> "nobody132/masr"
"xdcesc/my_ch_speech_recognition" -> "binzhouchn/masr" ["e"=1]
"boblemarin/Sprite3D.js" -> "shaneosullivan/boltjs"
"HawkAaron/RNN-Transducer" -> "awni/transducer"
"HawkAaron/RNN-Transducer" -> "HawkAaron/warp-transducer"
"HawkAaron/RNN-Transducer" -> "HawkAaron/E2E-ASR"
"HawkAaron/RNN-Transducer" -> "ZhengkunTian/rnn-transducer"
"HawkAaron/RNN-Transducer" -> "1ytic/warp-rnnt"
"HawkAaron/RNN-Transducer" -> "sequence-labeling/rnn-transducer"
"HawkAaron/RNN-Transducer" -> "HawkAaron/mxnet-transducer"
"HawkAaron/RNN-Transducer" -> "PengdaLiu/LAS-SpeechRecognition"
"HawkAaron/RNN-Transducer" -> "noahchalifour/rnnt-speech-recognition"
"HawkAaron/RNN-Transducer" -> "kaituoxu/Listen-Attend-Spell"
"santi-pdp/pase" -> "mravanelli/SincNet" ["e"=1]
"santi-pdp/pase" -> "KarelVesely84/kaldi-io-for-python"
"santi-pdp/pase" -> "iamyuanchung/Autoregressive-Predictive-Coding"
"santi-pdp/pase" -> "nttcslab-sp/kaldiio"
"santi-pdp/pase" -> "facebookresearch/WavAugment" ["e"=1]
"santi-pdp/pase" -> "freewym/espresso"
"santi-pdp/pase" -> "liusongxiang/StarGAN-Voice-Conversion" ["e"=1]
"santi-pdp/pase" -> "facebookresearch/CPC_audio"
"santi-pdp/pase" -> "jefflai108/pytorch-kaldi-neural-speaker-embeddings" ["e"=1]
"santi-pdp/pase" -> "swasun/VQ-VAE-Speech" ["e"=1]
"santi-pdp/pase" -> "s3prl/s3prl" ["e"=1]
"santi-pdp/pase" -> "mravanelli/pytorch-kaldi"
"santi-pdp/pase" -> "zcaceres/spec_augment"
"santi-pdp/pase" -> "descriptinc/melgan-neurips" ["e"=1]
"santi-pdp/pase" -> "auspicious3000/autovc" ["e"=1]
"sailist/ASRFrame" -> "audier/DeepSpeechRecognition"
"sailist/ASRFrame" -> "nobody132/masr"
"sailist/ASRFrame" -> "zw76859420/ASR_Theory"
"sailist/ASRFrame" -> "Pelhans/ZASR_tensorflow"
"sailist/ASRFrame" -> "xxbb1234021/speech_recognition"
"sailist/ASRFrame" -> "kuangcaomvp/speech-recognize"
"sailist/ASRFrame" -> "binzhouchn/masr" ["e"=1]
"sailist/ASRFrame" -> "lizhaokun/Autosub-with-Baidu-DeepSpeech2"
"bugsounet/MMM-AssistantMk2" -> "bugsounet/MMM-Hotword"
"bugsounet/MMM-AssistantMk2" -> "gauravsacc/MMM-GoogleAssistant"
"bugsounet/MMM-AssistantMk2" -> "MMRIZE/MMM-TelegramBot"
"bugsounet/MMM-AssistantMk2" -> "jclarke0000/MMM-DarkSkyForecast"
"bugsounet/MMM-AssistantMk2" -> "fewieden/MMM-AlarmClock"
"bugsounet/MMM-AssistantMk2" -> "paviro/MMM-PIR-Sensor"
"bugsounet/MMM-AssistantMk2" -> "eouia/MMM-Tools"
"cmusphinx/sphinxtrain" -> "cmusphinx/sphinxbase"
"cmusphinx/sphinxtrain" -> "cmusphinx/cmudict-tools"
"nttcslab-sp/kaldiio" -> "KarelVesely84/kaldi-io-for-python"
"nttcslab-sp/kaldiio" -> "jzlianglu/pykaldi2"
"nttcslab-sp/kaldiio" -> "YiwenShaoStephen/pychain"
"nttcslab-sp/kaldiio" -> "csukuangfj/kaldifeat"
"nttcslab-sp/kaldiio" -> "k2-fsa/k2"
"nttcslab-sp/kaldiio" -> "lhotse-speech/lhotse"
"nttcslab-sp/kaldiio" -> "k2-fsa/snowfall"
"nttcslab-sp/kaldiio" -> "pykaldi/pykaldi"
"nttcslab-sp/kaldiio" -> "thu-spmi/CAT"
"nttcslab-sp/kaldiio" -> "HawkAaron/warp-transducer"
"nttcslab-sp/kaldiio" -> "hitachi-speech/EEND" ["e"=1]
"nttcslab-sp/kaldiio" -> "tencent-ailab/pika"
"nttcslab-sp/kaldiio" -> "nryant/dscore" ["e"=1]
"nttcslab-sp/kaldiio" -> "facebookresearch/gtn"
"dwiel/talon_community" -> "talonvoice/examples"
"dwiel/talon_community" -> "dwighthouse/unofficial-talonvoice-docs"
"dwiel/talon_community" -> "2shea/talon_configs"
"dwiel/talon_community" -> "lunixbochs/community"
"dwiel/talon_community" -> "talonvoice/talon"
"dwiel/talon_community" -> "anonfunc/talon-user"
"dwiel/talon_community" -> "TalonCommunity/Wiki"
"dwiel/talon_community" -> "pimentel/voicecode_directory"
"bugsounet/MMM-Hotword" -> "bugsounet/MMM-AssistantMk2"
"daanzu/kaldi-active-grammar" -> "dictation-toolbox/dragonfly"
"daanzu/kaldi-active-grammar" -> "gooofy/zamia-speech"
"daanzu/kaldi-active-grammar" -> "dialogflow/asr-server"
"daanzu/kaldi-active-grammar" -> "dictation-toolbox/Caster"
"daanzu/kaldi-active-grammar" -> "k2-fsa/snowfall"
"daanzu/kaldi-active-grammar" -> "skit-ai/kaldi-serve"
"daanzu/kaldi-active-grammar" -> "YoavRamon/awesome-kaldi"
"daanzu/kaldi-active-grammar" -> "opendcd/opendcd"
"daanzu/kaldi-active-grammar" -> "danijel3/KaldiWebrtcServer"
"daanzu/kaldi-active-grammar" -> "jpuigcerver/kaldi-decoders"
"daanzu/kaldi-active-grammar" -> "wolfmanstout/dragonfly-commands"
"daanzu/kaldi-active-grammar" -> "mirober/Breathe"
"daanzu/kaldi-active-grammar" -> "thu-spmi/CAT"
"daanzu/kaldi-active-grammar" -> "freewym/espresso"
"daanzu/kaldi-active-grammar" -> "dwks/silvius"
"iamyuanchung/Autoregressive-Predictive-Coding" -> "facebookresearch/CPC_audio"
"iamyuanchung/Autoregressive-Predictive-Coding" -> "facebookresearch/libri-light"
"HawkAaron/E2E-ASR" -> "HawkAaron/RNN-Transducer"
"HawkAaron/E2E-ASR" -> "HawkAaron/warp-transducer"
"HawkAaron/E2E-ASR" -> "mdangschat/ctc-asr"
"HawkAaron/E2E-ASR" -> "awni/transducer"
"HawkAaron/E2E-ASR" -> "ZhengkunTian/rnn-transducer"
"HawkAaron/E2E-ASR" -> "1ytic/warp-rnnt"
"HawkAaron/E2E-ASR" -> "gentaiscool/end2end-asr-pytorch"
"HawkAaron/E2E-ASR" -> "DemisEom/RNNT-pytorch"
"HawkAaron/E2E-ASR" -> "chenjiasheng/mwer"
"HawkAaron/E2E-ASR" -> "MarkWuNLP/SemanticMask"
"xingchensong/Speech-Transformer-tf2.0" -> "foamliu/Speech-Transformer"
"leinich/MMM-homeassistant-sensors" -> "Snille/MMM-homeassistant-sensors"
"leinich/MMM-homeassistant-sensors" -> "aserramonner/MMM-HASS"
"leinich/MMM-homeassistant-sensors" -> "john3300/MMM-HomeAutomationNotifications"
"leinich/MMM-homeassistant-sensors" -> "zuo000/MMM-HomeAssistant"
"leinich/MMM-homeassistant-sensors" -> "wonderslug/MMM-HomeAssistantDisplay"
"gooofy/kaldi-adapt-lm" -> "JRMeyer/kaldi-tf"
"gooofy/kaldi-adapt-lm" -> "srvk/lm_build"
"dictation-toolbox/aenea" -> "dictation-toolbox/Caster"
"dictation-toolbox/aenea" -> "tgrosinger/aenea-grammars"
"dictation-toolbox/aenea" -> "simianhacker/code-by-voice"
"dictation-toolbox/aenea" -> "wolfmanstout/dragonfly-commands"
"dictation-toolbox/aenea" -> "calmofthestorm/aenea"
"dictation-toolbox/aenea" -> "t4ngo/dragonfly"
"dictation-toolbox/aenea" -> "dictation-toolbox/dragonfly-scripts"
"dictation-toolbox/aenea" -> "dictation-toolbox/dragonfly"
"dictation-toolbox/aenea" -> "dictation-toolbox/aenea-grammars"
"dictation-toolbox/aenea" -> "dwks/silvius"
"dictation-toolbox/aenea" -> "t4ngo/dragonfly-modules"
"dictation-toolbox/aenea" -> "dwks/aenea-grammar-simple"
"dictation-toolbox/aenea" -> "dictation-toolbox/natlink"
"dictation-toolbox/aenea" -> "talonvoice/draconity"
"idiap/CNN_QbE_STD" -> "Yushi-Hu/Multilingual-AWE"
"idiap/CNN_QbE_STD" -> "LCF2764/autoKWS2021_1st_solution"
"sonos/keyword-spotting-research-datasets" -> "dobby-seo/Wav2Keyword"
"sonos/keyword-spotting-research-datasets" -> "colinsongf/keyword_spotting"
"sonos/keyword-spotting-research-datasets" -> "idiap/CNN_QbE_STD"
"sonos/keyword-spotting-research-datasets" -> "hyperconnect/TC-ResNet"
"sonos/keyword-spotting-research-datasets" -> "ArchitParnami/Few-Shot-KWS"
"sonos/keyword-spotting-research-datasets" -> "TomVeniat/SANAS" ["e"=1]
"sonos/keyword-spotting-research-datasets" -> "jingyonghou/RPN_KWS"
"sonos/keyword-spotting-research-datasets" -> "mindorii/kws"
"AzizCode92/Listen-Attend-and-Spell-Pytorch" -> "kaituoxu/Listen-Attend-Spell"
"gillesdemey/node-record-lpcm16" -> "RedKenrok/node-audiorecorder"
"zw76859420/ASR_Syllable" -> "zw76859420/ASR_WORD"
"zw76859420/ASR_Syllable" -> "zw76859420/ASR_Theory"
"zw76859420/ASR_Syllable" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"zw76859420/ASR_Syllable" -> "audier/DeepSpeechRecognition"
"zw76859420/ASR_Syllable" -> "mdangschat/ctc-asr"
"zw76859420/ASR_Syllable" -> "jx1100370217/DFCNN-master"
"zw76859420/ASR_Syllable" -> "ZhengkunTian/Speech-Tranformer-Pytorch"
"zw76859420/ASR_WORD" -> "zw76859420/ASR_Syllable"
"zw76859420/ASR_WORD" -> "EliasCai/speech_recognition_ctc"
"zw76859420/ASR_WORD" -> "zw76859420/ASRT_SpeechRecognition"
"JRMeyer/multi-task-kaldi" -> "JRMeyer/kaldi-tf"
"Pelhans/ZASR_tensorflow" -> "lezasantaizi/from_video_get_ASR_traindata"
"Pelhans/ZASR_tensorflow" -> "keithyin/simple_speech_recog"
"MMM-CalendarExt2/MMM-CalendarExt2" -> "eouia/MMM-CalendarExt"
"MMM-CalendarExt2/MMM-CalendarExt2" -> "edward-shen/MMM-pages"
"MMM-CalendarExt2/MMM-CalendarExt2" -> "MMRIZE/MMM-CalendarExt3"
"MMM-CalendarExt2/MMM-CalendarExt2" -> "Bee-Mar/mmpm"
"Turanga1/Automated-Essay-Scoring" -> "Gaurav-Pande/AES_DL"
"Turanga1/Automated-Essay-Scoring" -> "mayurmorin/Automated-Essay--Scoring"
"Turanga1/Automated-Essay-Scoring" -> "vasu5235/Kaggle-Automated-Essay-Checking-System"
"Turanga1/Automated-Essay-Scoring" -> "shubhpawar/Automated-Essay-Scoring"
"Turanga1/Automated-Essay-Scoring" -> "mankadronit/Automated-Essay--Scoring"
"Turanga1/Automated-Essay-Scoring" -> "Farahn/AES"
"datemoon/ASR-decoder" -> "chenzhehuai/kaldi-decoders"
"yc9701/pansori" -> "jzlianglu/pykaldi2"
"talonvoice/draconity" -> "wolfmanstout/gaze-ocr"
"simianhacker/code-by-voice" -> "dictation-toolbox/dragonfly-scripts"
"simianhacker/code-by-voice" -> "t4ngo/dragonfly"
"simianhacker/code-by-voice" -> "dictation-toolbox/aenea"
"simianhacker/code-by-voice" -> "tgrosinger/aenea-grammars"
"simianhacker/code-by-voice" -> "wolfmanstout/dragonfly-commands"
"simianhacker/code-by-voice" -> "dictation-toolbox/Caster"
"simianhacker/code-by-voice" -> "calmofthestorm/aenea"
"simianhacker/code-by-voice" -> "t4ngo/dragonfly-modules"
"simianhacker/code-by-voice" -> "dwks/aenea-grammar-simple"
"simianhacker/code-by-voice" -> "davitenio/dragonfly-macros"
"simianhacker/code-by-voice" -> "chajadan/DragonflyRules"
"anonfunc/talon-user" -> "lunixbochs/community"
"rwth-i6/sisyphus" -> "rwth-i6/rasr"
"rwth-i6/sisyphus" -> "rwth-i6/i6_core"
"rwth-i6/sisyphus" -> "rwth-i6/i6_experiments"
"ryanleary/patter" -> "athena-team/athena-decoder"
"mozilla-extensions/firefox-voice" -> "mozilla/voicefill"
"ynop/audiomate" -> "ynop/deepspeech-german"
"yeyupiaoling/PaddlePaddle-CrowdNet" -> "AgentMaker/Paddle-IMSP"
"yeyupiaoling/PaddlePaddle-CrowdNet" -> "yeyupiaoling/PaddlePaddle-CRNN"
"yeyupiaoling/PaddlePaddle-CrowdNet" -> "zbp-xxxp/meaningfulModuleOfAI"
"yeyupiaoling/PaddlePaddle-CrowdNet" -> "AgentMaker/Paddle-Custom-Operators"
"yeyupiaoling/PaddlePaddle-CrowdNet" -> "ninetailskim/PandaFaceGenerator"
"nkrnrnk/BertPunc" -> "yuboona/Chinese-Punctuation-Restoration-with-Bert-CNN-RNN"
"nkrnrnk/BertPunc" -> "xashru/punctuation-restoration"
"nkrnrnk/BertPunc" -> "ottokart/punctuator2"
"nkrnrnk/BertPunc" -> "AlvinIsonomia/LSTM-for-Chinese-Punctuation-Restoration"
"nkrnrnk/BertPunc" -> "kaituoxu/X-Punctuator"
"nkrnrnk/BertPunc" -> "MenNianShi/PunctuationPrediction-BERT"
"nkrnrnk/BertPunc" -> "ottokart/punctuator"
"fostermadeco/voice-search-example-app" -> "fostermadeco/audio-to-text-gcloud"
"fostermadeco/voice-search-example-app" -> "hayanmind/react-native-google-speech-api"
"common-voice/sentence-collector" -> "common-voice/cv-sentence-extractor"
"hayanmind/react-native-google-speech-api" -> "fostermadeco/audio-to-text-gcloud"
"hayanmind/react-native-google-speech-api" -> "fostermadeco/voice-search-example-app"
"corticph/prefix-beam-search" -> "githubharald/CTCWordBeamSearch"
"corticph/prefix-beam-search" -> "githubharald/CTCDecoder"
"corticph/prefix-beam-search" -> "k2-fsa/fast_rnnt"
"corticph/prefix-beam-search" -> "HawkAaron/warp-transducer"
"AlvinIsonomia/LSTM-for-Chinese-Punctuation-Restoration" -> "yuboona/Chinese-Punctuation-Restoration-with-Bert-CNN-RNN"
"jzlianglu/pykaldi2" -> "YiwenShaoStephen/pychain"
"jzlianglu/pykaldi2" -> "nttcslab-sp/kaldiio"
"jzlianglu/pykaldi2" -> "1ytic/warp-rnnt"
"biemster/asr" -> "AIFanatic/google-offline-speech-recognition"
"fostermadeco/audio-to-text-gcloud" -> "fostermadeco/voice-search-example-app"
"fostermadeco/audio-to-text-gcloud" -> "hayanmind/react-native-google-speech-api"
"aalto-speech/interspeech2019_karhila_et_al" -> "JazminVidal/gop-dnn-epadb"
"2shea/talon_configs" -> "dwiel/talon_community"
"2shea/talon_configs" -> "anonfunc/talon-user"
"2shea/talon_configs" -> "2shea/talon_starter_pack"
"JawadAr/Pronunciation-verification-using-anomaly-detection-Thesis" -> "LexicalStressDetection/lexical-stress-detection"
"LearnedVector/Wav2Letter" -> "juliuskunze/speechless"
"Rokeer/co-attention" -> "ustcljw/fupugec-score"
"UFAL-DSG/pykaldi" -> "UFAL-DSG/alex-asr"
"UFAL-DSG/pykaldi" -> "UFAL-DSG/pyfst"
"ucasir/TDNN" -> "ustcljw/fupugec-score"
"EliasCai/speech_recognition_ctc" -> "zw76859420/ASR_WORD"
"karanmakhija867/bert_punct" -> "attilanagy234/neural-punctuator"
"igormq/aes-lac-2018" -> "leandrobmarinho/yolo-marker"
"kaituoxu/X-Punctuator" -> "MenNianShi/PunctuationPrediction-BERT"
"kaituoxu/X-Punctuator" -> "vackosar/keras-punctuator"
"kaituoxu/X-Punctuator" -> "ottokart/punctuator"
"nai888/awkwords" -> "Susurrus-LLC/langua"
"ZMpursue/PaddleColorization" -> "ZMpursue/Anime_avatar_generation"
"ZMpursue/PaddleColorization" -> "ZMpursue/DCGANfakeface"
"andyweiqiu/asr-ios-local" -> "andyweiqiu/SpeechRecognition"
"andyweiqiu/SpeechRecognition" -> "andyweiqiu/asr-ios-local"
"talonvoice/examples" -> "dwiel/talon_community"
"talonvoice/examples" -> "dwighthouse/unofficial-talonvoice-docs"
"talonvoice/examples" -> "talonvoice/draconity"
"yeyupiaoling/PaddlePaddle-MTCNN" -> "wobushihuair/paddlepaddle_project"
"yeyupiaoling/PaddlePaddle-MTCNN" -> "yeyupiaoling/PaddlePaddle-MobileFaceNets"
"yeyupiaoling/PaddlePaddle-MTCNN" -> "ITerydh/PaddlePaddle-Python-Zero-Based"
"yeyupiaoling/PaddlePaddle-MTCNN" -> "HighCWu/denoising-diffusion-paddle"
"Picovoice/speech-to-intent-benchmark" -> "Picovoice/browser-extension"
"ronggong/mispronunciation-detection" -> "JazminVidal/gop-dnn-epadb"
"davitenio/dragonfly-macros" -> "dwks/aenea-grammar-simple"
"alphacep/vosk-api" -> "alphacep/vosk-server"
"alphacep/vosk-api" -> "kaldi-asr/kaldi"
"alphacep/vosk-api" -> "mozilla/DeepSpeech"
"alphacep/vosk-api" -> "alphacep/vosk-android-demo"
"alphacep/vosk-api" -> "snakers4/silero-models" ["e"=1]
"alphacep/vosk-api" -> "cmusphinx/pocketsphinx"
"alphacep/vosk-api" -> "speechbrain/speechbrain"
"alphacep/vosk-api" -> "SYSTRAN/faster-whisper" ["e"=1]
"alphacep/vosk-api" -> "espnet/espnet"
"alphacep/vosk-api" -> "Uberi/speech_recognition"
"alphacep/vosk-api" -> "snakers4/silero-vad" ["e"=1]
"alphacep/vosk-api" -> "rhasspy/piper" ["e"=1]
"alphacep/vosk-api" -> "coqui-ai/STT"
"alphacep/vosk-api" -> "k2-fsa/sherpa-onnx" ["e"=1]
"alphacep/vosk-api" -> "coqui-ai/TTS" ["e"=1]
"kripken/speak.js" -> "Marak/say.js"
"kripken/speak.js" -> "mtttmpl/speak-js"
"kripken/speak.js" -> "fasterthanlime/jsmad" ["e"=1]
"kripken/speak.js" -> "Hagsten/Talkify"
"kripken/speak.js" -> "brianchirls/Seriously.js" ["e"=1]
"kripken/speak.js" -> "victorporof/Tilt" ["e"=1]
"kripken/speak.js" -> "syl22-00/pocketsphinx.js"
"kripken/speak.js" -> "imakewebthings/deck.js" ["e"=1]
"kripken/speak.js" -> "cjcliffe/CubicVR.js" ["e"=1]
"kripken/speak.js" -> "webmademovies/popcorn-js" ["e"=1]
"kripken/speak.js" -> "ebidel/filer.js" ["e"=1]
"kripken/speak.js" -> "itinerarium/phoneme-synthesis"
"kripken/speak.js" -> "shaneosullivan/boltjs"
"kripken/speak.js" -> "doug/depthjs" ["e"=1]
"kripken/speak.js" -> "evanw/glfx.js" ["e"=1]
"espnet/espnet_model_zoo" -> "SpeechColab/GigaSpeech"
"speechbrain/speechbrain" -> "espnet/espnet"
"speechbrain/speechbrain" -> "pyannote/pyannote-audio" ["e"=1]
"speechbrain/speechbrain" -> "s3prl/s3prl" ["e"=1]
"speechbrain/speechbrain" -> "wenet-e2e/wenet"
"speechbrain/speechbrain" -> "asteroid-team/asteroid" ["e"=1]
"speechbrain/speechbrain" -> "kaldi-asr/kaldi"
"speechbrain/speechbrain" -> "NVIDIA/NeMo" ["e"=1]
"speechbrain/speechbrain" -> "snakers4/silero-vad" ["e"=1]
"speechbrain/speechbrain" -> "mravanelli/pytorch-kaldi"
"speechbrain/speechbrain" -> "jik876/hifi-gan" ["e"=1]
"speechbrain/speechbrain" -> "wq2012/awesome-diarization" ["e"=1]
"speechbrain/speechbrain" -> "k2-fsa/k2"
"speechbrain/speechbrain" -> "clovaai/voxceleb_trainer" ["e"=1]
"speechbrain/speechbrain" -> "iver56/audiomentations" ["e"=1]
"speechbrain/speechbrain" -> "modelscope/FunASR" ["e"=1]
"mozilla/DeepSpeech-examples" -> "mozilla/androidspeech"
"mozilla/DeepSpeech-examples" -> "rolczynski/Automatic-Speech-Recognition"
"mozilla/DeepSpeech-examples" -> "AASHISHAG/deepspeech-german"
"mozilla/DeepSpeech-examples" -> "mozilla/DeepSpeech"
"mozilla/DeepSpeech-examples" -> "kpu/kenlm"
"mozilla/DeepSpeech-examples" -> "SeanNaren/deepspeech.pytorch"
"mozilla/DeepSpeech-examples" -> "MainRo/deepspeech-server"
"mozilla/DeepSpeech-examples" -> "coqui-ai/STT"
"mozilla/DeepSpeech-examples" -> "tarekeldeeb/DeepSpeech-Quran" ["e"=1]
"mozilla/DeepSpeech-examples" -> "amsehili/auditok" ["e"=1]
"mozilla/DeepSpeech-examples" -> "alphacep/vosk-server"
"mozilla/DeepSpeech-examples" -> "common-voice/common-voice"
"mozilla/DeepSpeech-examples" -> "LearnedVector/A-Hackers-AI-Voice-Assistant" ["e"=1]
"mozilla/DeepSpeech-examples" -> "DanBmh/deepspeech-german"
"mozilla/DeepSpeech-examples" -> "mozilla/DSAlign" ["e"=1]
"FireDynamics/fdsreader" -> "firetools/blenderfds"
"FireDynamics/fdsreader" -> "FireDynamics/LectureFireSimulation"
"FireDynamics/fdsreader" -> "johodges/pyfdstools"
"FireDynamics/fdsreader" -> "FireDynamics/propti"
"FireDynamics/fdsreader" -> "FireDynamics/fdsgeogen"
"googleapis/python-speech" -> "googleapis/python-texttospeech"
"edobashira/speech-language-processing" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"edobashira/speech-language-processing" -> "theimpossibleastronaut/awesome-linguistics" ["e"=1]
"edobashira/speech-language-processing" -> "andrewt3000/DL4NLP" ["e"=1]
"edobashira/speech-language-processing" -> "syhw/wer_are_we"
"edobashira/speech-language-processing" -> "srvk/eesen"
"edobashira/speech-language-processing" -> "kjw0612/awesome-rnn" ["e"=1]
"edobashira/speech-language-processing" -> "zer0n/deepframeworks" ["e"=1]
"edobashira/speech-language-processing" -> "pkmital/tensorflow_tutorials" ["e"=1]
"edobashira/speech-language-processing" -> "keon/awesome-nlp" ["e"=1]
"edobashira/speech-language-processing" -> "Randommood/Strangeloop2015" ["e"=1]
"edobashira/speech-language-processing" -> "dive-into-machine-learning/dive-into-machine-learning" ["e"=1]
"edobashira/speech-language-processing" -> "rushter/data-science-blogs" ["e"=1]
"edobashira/speech-language-processing" -> "baidu-research/warp-ctc" ["e"=1]
"edobashira/speech-language-processing" -> "lucasviola/awesome-functional-programming" ["e"=1]
"edobashira/speech-language-processing" -> "pykaldi/pykaldi"
"alphacep/vosk-android-demo" -> "alphacep/vosk-server"
"alphacep/vosk-android-demo" -> "alphacep/vosk-api"
"alphacep/vosk-android-demo" -> "ccoreilly/LocalSTT"
"alphacep/vosk-android-demo" -> "vilassn/whisper_android" ["e"=1]
"alphacep/vosk-android-demo" -> "alphacep/vosk"
"alphacep/vosk-android-demo" -> "Kaljurand/K6nele"
"alphacep/vosk-android-demo" -> "XiaoMi/kaldi-onnx"
"alphacep/vosk-android-demo" -> "alphacep/vosk-android-service"
"alphacep/vosk-android-demo" -> "ElishaAz/Sayboard" ["e"=1]
"alphacep/vosk-android-demo" -> "mozilla/androidspeech"
"alphacep/vosk-android-demo" -> "k2-fsa/sherpa-ncnn"
"alphacep/vosk-android-demo" -> "gotev/android-speech"
"alphacep/vosk-android-demo" -> "cmusphinx/pocketsphinx-android-demo"
"alphacep/vosk-android-demo" -> "YoavRamon/awesome-kaldi"
"alphacep/vosk-android-demo" -> "gooofy/zamia-speech"
"eastonYi/wav2vec" -> "mailong25/self-supervised-speech-recognition"
"eastonYi/wav2vec" -> "kehanlu/Mandarin-Wav2Vec2" ["e"=1]
"eastonYi/wav2vec" -> "HarunoriKawano/Wav2vec2.0"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "HighCWu/denoising-diffusion-paddle"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "AgentMaker/Paddle-IMSP"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "unseenme/rl_parl_gym_CarRacing-v0"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "wobushihuair/paddlepaddle_project"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "zbp-xxxp/meaningfulModuleOfAI"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "AgentMaker/PPQI.jl"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "leigangblog/AI_Tools"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "ITerydh/PaddlePaddle-Python-Zero-Based"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "jhcgt4869/Unpaired_Probability_Prediction_The_first_ten"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "AgentMaker/Paddle-DALL-E"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "yeyupiaoling/PaddlePaddle-MTCNN"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "AgentMaker/Paddle-Custom-Operators"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "jhcgt4869/LiHongyi_curriculum_experience"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "GuoQuanhao/PaddlePaddle-basic-tutorial"
"yeyupiaoling/AudioClassification-PaddlePaddle" -> "HighCWu/ddim"
"yeyupiaoling/MASR" -> "yeyupiaoling/PPASR"
"yeyupiaoling/MASR" -> "yeyupiaoling/PaddlePaddle-DeepSpeech"
"yeyupiaoling/MASR" -> "binzhouchn/masr" ["e"=1]
"yeyupiaoling/MASR" -> "nobody132/masr"
"yeyupiaoling/MASR" -> "Z-yq/TensorflowASR"
"yeyupiaoling/MASR" -> "yeyupiaoling/VoiceprintRecognition-Pytorch" ["e"=1]
"yeyupiaoling/MASR" -> "yang123qwe/end2end_chinese_speech_recognition"
"yeyupiaoling/MASR" -> "sooftware/conformer"
"yeyupiaoling/MASR" -> "chenkui164/FastASR"
"yeyupiaoling/MASR" -> "xxbb1234021/speech_recognition"
"yeyupiaoling/MASR" -> "ZhengkunTian/OpenTransformer"
"yeyupiaoling/MASR" -> "gentaiscool/end2end-asr-pytorch"
"yeyupiaoling/MASR" -> "xdcesc/my_ch_speech_recognition"
"yeyupiaoling/MASR" -> "RapidAI/RapidASR"
"yeyupiaoling/MASR" -> "zw76859420/ASR_Theory"
"speechio/BigCiDian" -> "aishell-foundation/DaCiDian"
"speechio/BigCiDian" -> "speechio/chinese_text_normalization"
"speechio/BigCiDian" -> "wenet-e2e/speech-recognition-papers"
"speechio/BigCiDian" -> "jctian98/e2e_lfmmi"
"speechio/BigCiDian" -> "cywang97/StreamingTransformer"
"speechio/BigCiDian" -> "kakaobrain/g2pm" ["e"=1]
"speechio/BigCiDian" -> "tencent-ailab/pika"
"speechio/BigCiDian" -> "Kyubyong/g2pC" ["e"=1]
"speechio/BigCiDian" -> "KuangDD/phkit" ["e"=1]
"speechio/BigCiDian" -> "tencent-ailab/3m-asr"
"speechio/BigCiDian" -> "SpeechColab/Leaderboard"
"speechio/BigCiDian" -> "ZhengkunTian/OpenTransformer"
"speechio/chinese_text_normalization" -> "kakaobrain/g2pm" ["e"=1]
"speechio/chinese_text_normalization" -> "speechio/BigCiDian"
"speechio/chinese_text_normalization" -> "wenet-e2e/WeTextProcessing" ["e"=1]
"speechio/chinese_text_normalization" -> "aishell-foundation/DaCiDian"
"speechio/chinese_text_normalization" -> "SpeechColab/Leaderboard"
"speechio/chinese_text_normalization" -> "Kyubyong/g2pC" ["e"=1]
"speechio/chinese_text_normalization" -> "Jackiexiao/MTTS" ["e"=1]
"speechio/chinese_text_normalization" -> "xcmyz/FastSpeech" ["e"=1]
"speechio/chinese_text_normalization" -> "cywang97/StreamingTransformer"
"speechio/chinese_text_normalization" -> "SpeechColab/GigaSpeech"
"speechio/chinese_text_normalization" -> "thuhcsi/Crystal" ["e"=1]
"speechio/chinese_text_normalization" -> "k2-fsa/k2"
"speechio/chinese_text_normalization" -> "TencentGameMate/chinese_speech_pretrain" ["e"=1]
"speechio/chinese_text_normalization" -> "wenet-e2e/speech-synthesis-paper" ["e"=1]
"speechio/chinese_text_normalization" -> "wenet-e2e/speech-recognition-papers"
"jackaduma/LAS_Mandarin_PyTorch" -> "kaituoxu/Listen-Attend-Spell"
"bugsounet/MMM-GoogleAssistant" -> "bugsounet/MMM-Assistant2Display"
"bugsounet/MMM-GoogleAssistant" -> "skuethe/MMM-Spotify"
"bugsounet/MMM-GoogleAssistant" -> "Klettner/MM-Remote"
"bugsounet/MMM-GoogleAssistant" -> "Jopyth/MMM-Remote-Control"
"lhotse-speech/lhotse" -> "k2-fsa/k2"
"lhotse-speech/lhotse" -> "k2-fsa/icefall"
"lhotse-speech/lhotse" -> "k2-fsa/snowfall"
"lhotse-speech/lhotse" -> "SpeechColab/GigaSpeech"
"lhotse-speech/lhotse" -> "freewym/espresso"
"lhotse-speech/lhotse" -> "Snowdar/asv-subtools" ["e"=1]
"lhotse-speech/lhotse" -> "s3prl/s3prl" ["e"=1]
"lhotse-speech/lhotse" -> "csukuangfj/kaldifeat"
"lhotse-speech/lhotse" -> "tencent-ailab/pika"
"lhotse-speech/lhotse" -> "k2-fsa/sherpa"
"lhotse-speech/lhotse" -> "facebookresearch/WavAugment" ["e"=1]
"lhotse-speech/lhotse" -> "pykaldi/pykaldi"
"lhotse-speech/lhotse" -> "ga642381/speech-trident" ["e"=1]
"lhotse-speech/lhotse" -> "nttcslab-sp/kaldiio"
"lhotse-speech/lhotse" -> "thu-spmi/CAT"
"lumaku/ctc-segmentation" -> "cornerfarmer/ctc_segmentation"
"lumaku/ctc-segmentation" -> "cywang97/StreamingTransformer"
"lumaku/ctc-segmentation" -> "kensho-technologies/pyctcdecode"
"lumaku/ctc-segmentation" -> "mozilla/DSAlign" ["e"=1]
"lumaku/ctc-segmentation" -> "YiwenShaoStephen/pychain"
"lumaku/ctc-segmentation" -> "SpeechColab/GigaSpeech"
"lumaku/ctc-segmentation" -> "1ytic/warp-rnnt"
"lumaku/ctc-segmentation" -> "k2-fsa/fast_rnnt"
"lumaku/ctc-segmentation" -> "sarulab-speech/jtubespeech" ["e"=1]
"lumaku/ctc-segmentation" -> "thu-spmi/CAT"
"lumaku/ctc-segmentation" -> "hirofumi0810/neural_sp"
"cmusphinx/node-pocketsphinx" -> "moneppo/node-pocketsphinx"
"cmusphinx/node-pocketsphinx" -> "sreuter/node-speakable"
"cmusphinx/node-pocketsphinx" -> "syl22-00/pocketsphinx.js"
"thu-spmi/CAT" -> "wenet-e2e/speech-recognition-papers"
"thu-spmi/CAT" -> "tencent-ailab/pika"
"thu-spmi/CAT" -> "1ytic/warp-rnnt"
"thu-spmi/CAT" -> "k2-fsa/fast_rnnt"
"thu-spmi/CAT" -> "k2-fsa/k2"
"thu-spmi/CAT" -> "YiwenShaoStephen/pychain"
"thu-spmi/CAT" -> "jctian98/e2e_lfmmi"
"thu-spmi/CAT" -> "HawkAaron/warp-transducer"
"thu-spmi/CAT" -> "ZhengkunTian/OpenTransformer"
"thu-spmi/CAT" -> "SpeechColab/Leaderboard"
"thu-spmi/CAT" -> "cywang97/StreamingTransformer"
"thu-spmi/CAT" -> "k2-fsa/icefall"
"thu-spmi/CAT" -> "XiaoMi/kaldi-onnx"
"thu-spmi/CAT" -> "csukuangfj/kaldifeat"
"thu-spmi/CAT" -> "hirofumi0810/neural_sp"
"dophist/kaldi-lstm" -> "junhyukoh/caffe-lstm" ["e"=1]
"dophist/kaldi-lstm" -> "yajiemiao/kaldipdnn"
"dophist/kaldi-lstm" -> "rizar/attention-lvcsr"
"dophist/kaldi-lstm" -> "dansoutner/LSTM" ["e"=1]
"dophist/kaldi-lstm" -> "vrenkens/tfkaldi"
"facebookresearch/gtn" -> "YiwenShaoStephen/pychain"
"facebookresearch/gtn" -> "k2-fsa/k2"
"facebookresearch/gtn" -> "k2-fsa/snowfall"
"facebookresearch/gtn" -> "HawkAaron/warp-transducer"
"facebookresearch/gtn" -> "1ytic/warp-rnnt"
"facebookresearch/gtn" -> "facebookresearch/gtn_applications"
"facebookresearch/gtn" -> "nttcslab-sp/kaldiio"
"facebookresearch/gtn" -> "awni/transducer"
"facebookresearch/gtn" -> "tencent-ailab/pika"
"facebookresearch/gtn" -> "lhotse-speech/lhotse"
"facebookresearch/gtn" -> "SpeechColab/GigaSpeech"
"facebookresearch/gtn" -> "hirofumi0810/neural_sp"
"facebookresearch/gtn" -> "jzlianglu/pykaldi2"
"facebookresearch/gtn" -> "k2-fsa/fast_rnnt"
"facebookresearch/gtn" -> "rwth-i6/returnn"
"Picovoice/leopard" -> "Picovoice/cheetah"
"Picovoice/leopard" -> "Picovoice/rhino"
"Picovoice/leopard" -> "Picovoice/cobra"
"Picovoice/leopard" -> "Picovoice/koala"
"Picovoice/leopard" -> "Picovoice/picovoice"
"Picovoice/leopard" -> "Picovoice/speech-to-intent-benchmark"
"Picovoice/leopard" -> "Picovoice/web-voice-processor"
"Picovoice/leopard" -> "Picovoice/octopus"
"Picovoice/leopard" -> "Picovoice/orca"
"midas-research/audino" -> "k2-fsa/k2"
"midas-research/audino" -> "coqui-ai/open-speech-corpora" ["e"=1]
"midas-research/audino" -> "aliutkus/speechmetrics" ["e"=1]
"midas-research/audino" -> "lhotse-speech/lhotse"
"midas-research/audino" -> "DemisEom/SpecAugment"
"midas-research/audino" -> "CrowdCurio/audio-annotator" ["e"=1]
"midas-research/audino" -> "asteroid-team/torch-audiomentations" ["e"=1]
"midas-research/audino" -> "hirofumi0810/neural_sp"
"midas-research/audino" -> "lumaku/ctc-segmentation"
"midas-research/audino" -> "speechio/chinese_text_normalization"
"midas-research/audino" -> "novoic/surfboard"
"midas-research/audino" -> "TensorSpeech/TensorFlowASR"
"midas-research/audino" -> "wenet-e2e/wetts" ["e"=1]
"midas-research/audino" -> "Kyubyong/css10" ["e"=1]
"midas-research/audino" -> "freewym/espresso"
"Snille/MMM-homeassistant-sensors" -> "leinich/MMM-homeassistant-sensors"
"Snille/MMM-homeassistant-sensors" -> "wonderslug/MMM-HomeAssistantDisplay"
"Snille/MMM-homeassistant-sensors" -> "aserramonner/MMM-HASS"
"Snille/MMM-homeassistant-sensors" -> "john3300/MMM-HomeAutomationNotifications"
"Snille/MMM-homeassistant-sensors" -> "zuo000/MMM-HomeAssistant"
"mcreed/zoombot" -> "sdkcarlos/artyom.js"
"sdetweil/MagicMirror_scripts" -> "Bee-Mar/mmpm"
"sdetweil/MagicMirror_scripts" -> "guysoft/MagicMirrorOS"
"sdetweil/MagicMirror_scripts" -> "Jopyth/MMM-Remote-Control"
"sdetweil/MagicMirror_scripts" -> "MMRIZE/MMM-CalendarExt3"
"sdetweil/MagicMirror_scripts" -> "sdetweil/MMM-Config"
"sdetweil/MagicMirror_scripts" -> "darickc/MMM-BackgroundSlideshow"
"sdetweil/MagicMirror_scripts" -> "edward-shen/MMM-pages"
"sdetweil/MagicMirror_scripts" -> "wonderslug/MMM-HomeAssistantDisplay"
"sdetweil/MagicMirror_scripts" -> "shbatm/MMM-OnScreenMenu"
"sdetweil/MagicMirror_scripts" -> "slametps/MMM-NetworkConnection"
"sdetweil/MagicMirror_scripts" -> "jclarke0000/MMM-DarkSkyForecast"
"sdetweil/MagicMirror_scripts" -> "jclarke0000/MMM-MyCommute"
"sdetweil/MagicMirror_scripts" -> "roramirez/MagicMirror-Module-Template"
"sdetweil/MagicMirror_scripts" -> "hermanho/MMM-GooglePhotos"
"sdetweil/MagicMirror_scripts" -> "MMM-CalendarExt2/MMM-CalendarExt2"
"guysoft/MagicMirrorOS" -> "Bee-Mar/mmpm"
"guysoft/MagicMirrorOS" -> "sdetweil/MagicMirror_scripts"
"guysoft/MagicMirrorOS" -> "Jopyth/MMM-Remote-Control"
"guysoft/MagicMirrorOS" -> "sheyabernstein/MMM-pihole-stats"
"guysoft/MagicMirrorOS" -> "randomBrainstormer/MMM-GoogleCalendar"
"guysoft/MagicMirrorOS" -> "ItayXD/MMM-Admin-Interface"
"guysoft/MagicMirrorOS" -> "wonderslug/MMM-HomeAssistantDisplay"
"guysoft/MagicMirrorOS" -> "bugsounet/MMM-GoogleAssistant"
"guysoft/MagicMirrorOS" -> "Snille/MMM-homeassistant-sensors"
"guysoft/MagicMirrorOS" -> "edward-shen/MMM-pages"
"noahchalifour/rnnt-speech-recognition" -> "theblackcat102/edgedict"
"noahchalifour/rnnt-speech-recognition" -> "ZhengkunTian/rnn-transducer"
"noahchalifour/rnnt-speech-recognition" -> "HawkAaron/warp-transducer"
"noahchalifour/rnnt-speech-recognition" -> "cywang97/StreamingTransformer"
"noahchalifour/rnnt-speech-recognition" -> "1ytic/warp-rnnt"
"noahchalifour/rnnt-speech-recognition" -> "HawkAaron/RNN-Transducer"
"noahchalifour/rnnt-speech-recognition" -> "mdangschat/ctc-asr"
"noahchalifour/rnnt-speech-recognition" -> "HawkAaron/E2E-ASR"
"noahchalifour/rnnt-speech-recognition" -> "hirofumi0810/neural_sp"
"noahchalifour/rnnt-speech-recognition" -> "wenet-e2e/speech-recognition-papers"
"noahchalifour/rnnt-speech-recognition" -> "TensorSpeech/TensorFlowASR"
"noahchalifour/rnnt-speech-recognition" -> "tencent-ailab/pika"
"noahchalifour/rnnt-speech-recognition" -> "k2-fsa/snowfall"
"noahchalifour/rnnt-speech-recognition" -> "k2-fsa/fast_rnnt"
"noahchalifour/rnnt-speech-recognition" -> "1ytic/warp-rna"
"theblackcat102/edgedict" -> "noahchalifour/rnnt-speech-recognition"
"theblackcat102/edgedict" -> "cywang97/StreamingTransformer"
"theblackcat102/edgedict" -> "1ytic/warp-rnnt"
"theblackcat102/edgedict" -> "hirofumi0810/neural_sp"
"theblackcat102/edgedict" -> "wenet-e2e/speech-recognition-papers"
"theblackcat102/edgedict" -> "k2-fsa/snowfall"
"theblackcat102/edgedict" -> "tencent-ailab/pika"
"theblackcat102/edgedict" -> "HawkAaron/RNN-Transducer"
"theblackcat102/edgedict" -> "thu-spmi/CAT"
"theblackcat102/edgedict" -> "HawkAaron/warp-transducer"
"theblackcat102/edgedict" -> "ZhengkunTian/OpenTransformer"
"theblackcat102/edgedict" -> "k2-fsa/fast_rnnt"
"theblackcat102/edgedict" -> "ZhengkunTian/rnn-transducer"
"theblackcat102/edgedict" -> "nttcslab-sp/kaldiio"
"theblackcat102/edgedict" -> "athena-team/athena-decoder"
"zszyellow/WER-in-python" -> "belambert/asr-evaluation"
"zszyellow/WER-in-python" -> "jitsi/jiwer"
"pannous/caffe-speech-recognition" -> "pannous/tensorflow-speech-recognition"
"pannous/caffe-speech-recognition" -> "amaas/stanford-ctc"
"pannous/caffe-speech-recognition" -> "patyork/python-deep-speech"
"pannous/caffe-speech-recognition" -> "NervanaSystems/deepspeech"
"pannous/caffe-speech-recognition" -> "SeanNaren/deepspeech.torch" ["e"=1]
"pannous/caffe-speech-recognition" -> "rakeshvar/rnn_ctc"
"pannous/caffe-speech-recognition" -> "jonrein/tensorflow_CTC_example"
"pannous/caffe-speech-recognition" -> "yajiemiao/kaldipdnn"
"pannous/caffe-speech-recognition" -> "igormq/ctc_tensorflow_example"
"Picovoice/picovoice" -> "Picovoice/rhino"
"Picovoice/picovoice" -> "Picovoice/porcupine"
"Picovoice/picovoice" -> "Picovoice/leopard"
"Picovoice/picovoice" -> "Picovoice/cheetah"
"Picovoice/picovoice" -> "zycv/awesome-keyword-spotting"
"Picovoice/picovoice" -> "dscripka/openWakeWord" ["e"=1]
"Picovoice/picovoice" -> "seasalt-ai/snowboy"
"Picovoice/picovoice" -> "wenet-e2e/wekws"
"Picovoice/picovoice" -> "Picovoice/browser-extension"
"Picovoice/picovoice" -> "Picovoice/web-voice-processor"
"Picovoice/picovoice" -> "Picovoice/koala"
"Picovoice/picovoice" -> "Picovoice/pvrecorder"
"novoic/surfboard" -> "novoic/blabla"
"novoic/surfboard" -> "jcvasquezc/DisVoice" ["e"=1]
"novoic/surfboard" -> "audeering/opensmile-python" ["e"=1]
"novoic/surfboard" -> "r9y9/pysptk" ["e"=1]
"novoic/surfboard" -> "facebookresearch/WavAugment" ["e"=1]
"novoic/surfboard" -> "iamyuanchung/Autoregressive-Predictive-Coding"
"novoic/surfboard" -> "santi-pdp/pase"
"uhh-lt/kaldi-tuda-de" -> "uhh-lt/kaldi-model-server"
"uhh-lt/kaldi-tuda-de" -> "gooofy/zamia-speech"
"uhh-lt/kaldi-tuda-de" -> "AASHISHAG/deepspeech-german"
"uhh-lt/kaldi-tuda-de" -> "ynop/deepspeech-german"
"uhh-lt/kaldi-tuda-de" -> "alumae/kaldi-gstreamer-server"
"uhh-lt/kaldi-tuda-de" -> "jcsilva/docker-kaldi-gstreamer-server"
"TensorSpeech/TensorFlowASR" -> "Z-yq/TensorflowASR"
"TensorSpeech/TensorFlowASR" -> "TensorSpeech/TensorFlowTTS" ["e"=1]
"TensorSpeech/TensorFlowASR" -> "noahchalifour/rnnt-speech-recognition"
"TensorSpeech/TensorFlowASR" -> "wenet-e2e/speech-recognition-papers"
"TensorSpeech/TensorFlowASR" -> "hirofumi0810/neural_sp"
"TensorSpeech/TensorFlowASR" -> "k2-fsa/k2"
"TensorSpeech/TensorFlowASR" -> "tencent-ailab/pika"
"TensorSpeech/TensorFlowASR" -> "athena-team/athena" ["e"=1]
"TensorSpeech/TensorFlowASR" -> "lhotse-speech/lhotse"
"TensorSpeech/TensorFlowASR" -> "kaituoxu/Speech-Transformer"
"TensorSpeech/TensorFlowASR" -> "cywang97/StreamingTransformer"
"TensorSpeech/TensorFlowASR" -> "wenet-e2e/wenet"
"TensorSpeech/TensorFlowASR" -> "facebookresearch/WavAugment" ["e"=1]
"TensorSpeech/TensorFlowASR" -> "DemisEom/SpecAugment"
"TensorSpeech/TensorFlowASR" -> "openspeech-team/openspeech"
"facebookresearch/CPC_audio" -> "iamyuanchung/Autoregressive-Predictive-Coding"
"facebookresearch/CPC_audio" -> "zerospeech/zerospeech2021_baseline"
"facebookresearch/CPC_audio" -> "jefflai108/Contrastive-Predictive-Coding-PyTorch" ["e"=1]
"facebookresearch/CPC_audio" -> "felixkreuk/UnsupSeg"
"facebookresearch/CPC_audio" -> "ivanvovk/WaveGrad" ["e"=1]
"facebookresearch/CPC_audio" -> "facebookresearch/WavAugment" ["e"=1]
"facebookresearch/CPC_audio" -> "facebookresearch/libri-light"
"facebookresearch/CPC_audio" -> "bshall/VectorQuantizedCPC" ["e"=1]
"facebookresearch/CPC_audio" -> "k2-fsa/snowfall"
"facebookresearch/CPC_audio" -> "s3prl/s3prl" ["e"=1]
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "yeyupiaoling/PaddlePaddle-MobileFaceNets"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "AgentMaker/Paddle-IMSP"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "yeyupiaoling/PaddlePaddle-MTCNN"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "ITerydh/PaddlePaddle-Python-Zero-Based"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "AgentMaker/Paddle-DALL-E"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "yeyupiaoling/PaddlePaddle-CrowdNet"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "yeyupiaoling/PP-YOLOE"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "yeyupiaoling/AudioClassification-PaddlePaddle"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "AgentMaker/PPQI.jl"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "thomas-yanxin/Cigarette-Detection"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "AgentMaker/Paddle-Custom-Operators"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "hchhtc123/Sentiment-analysis"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "kevinfu1717/multimediaChatbot"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "HighCWu/denoising-diffusion-paddle"
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" -> "AgentMaker/Paddle-CLIP"
"facebookresearch/covost" -> "kahne/SpeechTransProgress" ["e"=1]
"facebookresearch/covost" -> "google-research-datasets/cvss"
"facebookresearch/covost" -> "facebookresearch/libri-light"
"facebookresearch/covost" -> "facebookresearch/SimulEval" ["e"=1]
"facebookresearch/covost" -> "facebookresearch/voxpopuli"
"facebookresearch/covost" -> "dqqcasia/awesome-speech-translation" ["e"=1]
"facebookresearch/covost" -> "rwth-i6/returnn"
"facebookresearch/covost" -> "thu-spmi/CAT"
"facebookresearch/covost" -> "bytedance/neurst" ["e"=1]
"facebookresearch/covost" -> "facebookresearch/WavAugment" ["e"=1]
"facebookresearch/covost" -> "facebookresearch/textlesslib" ["e"=1]
"facebookresearch/covost" -> "cywang97/StreamingTransformer"
"mailong25/self-supervised-speech-recognition" -> "eastonYi/wav2vec"
"mailong25/self-supervised-speech-recognition" -> "dangvansam/viet-asr" ["e"=1]
"mailong25/self-supervised-speech-recognition" -> "kensho-technologies/pyctcdecode"
"mailong25/self-supervised-speech-recognition" -> "hirofumi0810/neural_sp"
"mailong25/self-supervised-speech-recognition" -> "m3hrdadfi/soxan" ["e"=1]
"mailong25/self-supervised-speech-recognition" -> "openspeech-team/openspeech"
"mailong25/self-supervised-speech-recognition" -> "cywang97/StreamingTransformer"
"mailong25/self-supervised-speech-recognition" -> "khanld/ASR-Wav2vec-Finetune" ["e"=1]
"mailong25/self-supervised-speech-recognition" -> "facebookresearch/WavAugment" ["e"=1]
"mailong25/self-supervised-speech-recognition" -> "wenet-e2e/speech-recognition-papers"
"mailong25/self-supervised-speech-recognition" -> "lumaku/ctc-segmentation"
"mailong25/self-supervised-speech-recognition" -> "thu-spmi/CAT"
"mailong25/self-supervised-speech-recognition" -> "YoavRamon/awesome-kaldi"
"mailong25/self-supervised-speech-recognition" -> "undertheseanlp/NLP-Vietnamese-progress" ["e"=1]
"mailong25/self-supervised-speech-recognition" -> "tencent-ailab/pika"
"cmusphinx/pocketsphinx-python" -> "cmusphinx/sphinxbase"
"cmusphinx/pocketsphinx-python" -> "bambocher/pocketsphinx-python"
"cmusphinx/pocketsphinx-python" -> "cmusphinx/sphinxtrain"
"cmusphinx/pocketsphinx-python" -> "cmusphinx/pocketsphinx"
"cmusphinx/pocketsphinx-python" -> "cmusphinx/pocketsphinx-android"
"cmusphinx/pocketsphinx-python" -> "cmusphinx/pocketsphinx-android-demo"
"cmusphinx/pocketsphinx-python" -> "cmusphinx/sphinx4"
"cmusphinx/pocketsphinx-python" -> "cmusphinx/pocketsphinx-ios-demo"
"bambocher/pocketsphinx-python" -> "cmusphinx/pocketsphinx-python"
"bambocher/pocketsphinx-python" -> "cmusphinx/pocketsphinx"
"bambocher/pocketsphinx-python" -> "cmusphinx/sphinxbase"
"bambocher/pocketsphinx-python" -> "Uberi/speech_recognition"
"fnl/segtok" -> "fnl/syntok"
"google/live-transcribe-speech-engine" -> "biemster/asr"
"google/live-transcribe-speech-engine" -> "GoogleCloudPlatform/android-docs-samples" ["e"=1]
"google/live-transcribe-speech-engine" -> "MidCamp/live-captioning"
"google/live-transcribe-speech-engine" -> "alphacep/vosk-android-demo"
"google/live-transcribe-speech-engine" -> "googleapis/java-speech"
"google/live-transcribe-speech-engine" -> "gkonovalov/android-vad" ["e"=1]
"google/live-transcribe-speech-engine" -> "mozilla/androidspeech"
"google/live-transcribe-speech-engine" -> "Kaljurand/K6nele"
"google/live-transcribe-speech-engine" -> "ctripcorp/C-OCR" ["e"=1]
"google/live-transcribe-speech-engine" -> "AIFanatic/google-offline-speech-recognition"
"google/live-transcribe-speech-engine" -> "gotev/android-speech"
"google/live-transcribe-speech-engine" -> "vilassn/whisper_android" ["e"=1]
"google/live-transcribe-speech-engine" -> "TensorSpeech/TensorFlowASR"
"facebookresearch/libri-light" -> "facebookresearch/voxpopuli"
"facebookresearch/libri-light" -> "SpeechColab/GigaSpeech"
"facebookresearch/libri-light" -> "facebookresearch/WavAugment" ["e"=1]
"facebookresearch/libri-light" -> "iamyuanchung/Autoregressive-Predictive-Coding"
"facebookresearch/libri-light" -> "k2-fsa/libriheavy" ["e"=1]
"facebookresearch/libri-light" -> "facebookresearch/CPC_audio"
"facebookresearch/libri-light" -> "facebookresearch/covost"
"facebookresearch/libri-light" -> "ZhangXInFD/SpeechTokenizer" ["e"=1]
"facebookresearch/libri-light" -> "b04901014/MQTTS" ["e"=1]
"facebookresearch/libri-light" -> "cywang97/StreamingTransformer"
"facebookresearch/libri-light" -> "HLTSingapore/Emotional-Speech-Data" ["e"=1]
"facebookresearch/libri-light" -> "microsoft/UniSpeech" ["e"=1]
"facebookresearch/libri-light" -> "voidful/Codec-SUPERB" ["e"=1]
"facebookresearch/libri-light" -> "X-LANCE/SLAM-LLM" ["e"=1]
"facebookresearch/libri-light" -> "freewym/espresso"
"t4ngo/dragonfly" -> "simianhacker/code-by-voice"
"t4ngo/dragonfly" -> "dictation-toolbox/Caster"
"t4ngo/dragonfly" -> "dictation-toolbox/dragonfly-scripts"
"t4ngo/dragonfly" -> "dictation-toolbox/aenea"
"t4ngo/dragonfly" -> "tgrosinger/aenea-grammars"
"t4ngo/dragonfly" -> "t4ngo/dragonfly-modules"
"t4ngo/dragonfly" -> "wolfmanstout/dragonfly-commands"
"t4ngo/dragonfly" -> "dictation-toolbox/dragonfly"
"t4ngo/dragonfly" -> "calmofthestorm/aenea"
"t4ngo/dragonfly" -> "dwks/aenea-grammar-simple"
"t4ngo/dragonfly" -> "mdbridge/Vocola-2"
"t4ngo/dragonfly" -> "chajadan/DragonflyRules"
"t4ngo/dragonfly" -> "michaelgundlach/pyspeech"
"t4ngo/dragonfly" -> "daanzu/kaldi-active-grammar"
"t4ngo/dragonfly" -> "davitenio/dragonfly-macros"
"k2-fsa/k2" -> "lhotse-speech/lhotse"
"k2-fsa/k2" -> "k2-fsa/icefall"
"k2-fsa/k2" -> "k2-fsa/snowfall"
"k2-fsa/k2" -> "SpeechColab/GigaSpeech"
"k2-fsa/k2" -> "wenet-e2e/wenet"
"k2-fsa/k2" -> "k2-fsa/sherpa"
"k2-fsa/k2" -> "thu-spmi/CAT"
"k2-fsa/k2" -> "pykaldi/pykaldi"
"k2-fsa/k2" -> "tencent-ailab/pika"
"k2-fsa/k2" -> "hirofumi0810/neural_sp"
"k2-fsa/k2" -> "s3prl/s3prl" ["e"=1]
"k2-fsa/k2" -> "srvk/eesen"
"k2-fsa/k2" -> "SpeechColab/Leaderboard"
"k2-fsa/k2" -> "wenet-e2e/speech-recognition-papers"
"k2-fsa/k2" -> "YiwenShaoStephen/pychain"
"kpu/kenlm" -> "parlance/ctcdecode"
"kpu/kenlm" -> "shibing624/pycorrector" ["e"=1]
"kpu/kenlm" -> "rsennrich/subword-nmt" ["e"=1]
"kpu/kenlm" -> "moses-smt/mosesdecoder" ["e"=1]
"kpu/kenlm" -> "srvk/eesen"
"kpu/kenlm" -> "SeanNaren/deepspeech.pytorch"
"kpu/kenlm" -> "google/sentencepiece" ["e"=1]
"kpu/kenlm" -> "syhw/wer_are_we"
"kpu/kenlm" -> "k2-fsa/k2"
"kpu/kenlm" -> "pykaldi/pykaldi"
"kpu/kenlm" -> "OpenNMT/OpenNMT-py" ["e"=1]
"kpu/kenlm" -> "clab/fast_align" ["e"=1]
"kpu/kenlm" -> "wiseman/py-webrtcvad" ["e"=1]
"kpu/kenlm" -> "mravanelli/pytorch-kaldi"
"kpu/kenlm" -> "flashlight/wav2letter"
"iamjanvijay/rnnt_decoder_cuda" -> "iamjanvijay/rnnt"
"iamjanvijay/rnnt_decoder_cuda" -> "csukuangfj/optimized_transducer"
"ZhengkunTian/OpenTransformer" -> "kaituoxu/Speech-Transformer"
"ZhengkunTian/OpenTransformer" -> "cywang97/StreamingTransformer"
"ZhengkunTian/OpenTransformer" -> "hirofumi0810/neural_sp"
"ZhengkunTian/OpenTransformer" -> "tencent-ailab/pika"
"ZhengkunTian/OpenTransformer" -> "ZhengkunTian/rnn-transducer"
"ZhengkunTian/OpenTransformer" -> "foamliu/Speech-Transformer"
"ZhengkunTian/OpenTransformer" -> "by2101/OpenASR"
"ZhengkunTian/OpenTransformer" -> "wenet-e2e/speech-recognition-papers"
"ZhengkunTian/OpenTransformer" -> "thu-spmi/CAT"
"ZhengkunTian/OpenTransformer" -> "aishell-foundation/DaCiDian"
"ZhengkunTian/OpenTransformer" -> "gentaiscool/end2end-asr-pytorch"
"ZhengkunTian/OpenTransformer" -> "k2-fsa/k2"
"ZhengkunTian/OpenTransformer" -> "SpeechColab/GigaSpeech"
"ZhengkunTian/OpenTransformer" -> "1ytic/warp-rnnt"
"ZhengkunTian/OpenTransformer" -> "jctian98/e2e_lfmmi"
"talonhub/community" -> "cursorless-dev/cursorless"
"talonhub/community" -> "david-tejada/rango"
"talonhub/community" -> "chaosparrot/talon_hud"
"talonhub/community" -> "TalonCommunity/Wiki"
"talonhub/community" -> "chaosparrot/parrot.py"
"talonhub/community" -> "AndreasArvidsson/andreas-talon"
"talonhub/community" -> "wolfmanstout/talon-gaze-ocr"
"talonhub/community" -> "dwiel/talon_community"
"talonhub/community" -> "C-Loftus/talon-ai-tools"
"talonhub/community" -> "dictation-toolbox/dragonfly"
"talonhub/community" -> "cursorless-dev/cursorless-talon"
"talonhub/community" -> "talonvoice/talon"
"talonhub/community" -> "phillco/talon-axkit"
"talonhub/community" -> "splondike/talon_ui_helper"
"talonhub/community" -> "david-tejada/rango-talon"
"speechbrain/speechbrain.github.io" -> "HarryVolek/PyTorch_Speaker_Verification" ["e"=1]
"speechbrain/speechbrain.github.io" -> "YiwenShaoStephen/pychain"
"speechbrain/speechbrain.github.io" -> "KarelVesely84/kaldi-io-for-python"
"speechbrain/speechbrain.github.io" -> "VITA-Group/AutoSpeech" ["e"=1]
"speechbrain/speechbrain.github.io" -> "nttcslab-sp/kaldiio"
"speechbrain/speechbrain.github.io" -> "manojpamk/pytorch_xvectors" ["e"=1]
"speechbrain/speechbrain.github.io" -> "freewym/espresso"
"speechbrain/speechbrain.github.io" -> "facebookresearch/WavAugment" ["e"=1]
"speechbrain/speechbrain.github.io" -> "coqui-ai/open-speech-corpora" ["e"=1]
"speechbrain/speechbrain.github.io" -> "santi-pdp/pase"
"speechbrain/speechbrain.github.io" -> "fgnt/nara_wpe" ["e"=1]
"speechbrain/speechbrain.github.io" -> "speechLabBcCuny/onssen" ["e"=1]
"speechbrain/speechbrain.github.io" -> "jymsuper/SpeakerRecognition_tutorial" ["e"=1]
"speechbrain/speechbrain.github.io" -> "google/speaker-id" ["e"=1]
"notAI-tech/fastPunct" -> "xashru/punctuation-restoration"
"notAI-tech/fastPunct" -> "ottokart/punctuator2"
"notAI-tech/fastPunct" -> "Felflare/rpunct"
"notAI-tech/fastPunct" -> "notAI-tech/deepsegment"
"notAI-tech/fastPunct" -> "cadia-lvl/punctuation-prediction"
"notAI-tech/fastPunct" -> "bedapudi6788/deepcorrect"
"notAI-tech/fastPunct" -> "nkrnrnk/BertPunc"
"notAI-tech/fastPunct" -> "vackosar/keras-punctuator"
"jingyonghou/KWS_Max-pooling_RHE" -> "jingyonghou/RPN_KWS"
"jimbozhang/speechocean762" -> "YuanGongND/gopt"
"jimbozhang/speechocean762" -> "tzyll/goparrot"
"jimbozhang/speechocean762" -> "jimbozhang/kaldi-gop"
"jimbozhang/speechocean762" -> "JazminVidal/gop-dnn-epadb"
"jimbozhang/speechocean762" -> "sweekarsud/Goodness-of-Pronunciation"
"jimbozhang/speechocean762" -> "vocaliodmiku/wav2vec2mdd"
"jimbozhang/speechocean762" -> "MarceloSancinetti/epa-gop-pykaldi"
"jimbozhang/speechocean762" -> "cageyoko/CTC-Attention-Mispronunciation"
"shawntan/theano-ctc" -> "shawntan/theano_toolkit"
"EbenKouao/MMM-Face-Recognition-SMAI" -> "EbenKouao/MMM-SmartTouch"
"EbenKouao/MMM-Face-Recognition-SMAI" -> "jimbydude/MMM-Face-Multi-User-Recognition-SMAI"
"EbenKouao/MMM-SmartTouch" -> "EbenKouao/MMM-Face-Recognition-SMAI"
"EbenKouao/MMM-SmartTouch" -> "shbatm/MMM-OnScreenMenu"
"Z-yq/TensorflowASR" -> "TensorSpeech/TensorFlowASR"
"Z-yq/TensorflowASR" -> "ZhengkunTian/OpenTransformer"
"Z-yq/TensorflowASR" -> "tencent-ailab/pika"
"Z-yq/TensorflowASR" -> "noahchalifour/rnnt-speech-recognition"
"Z-yq/TensorflowASR" -> "hirofumi0810/neural_sp"
"Z-yq/TensorflowASR" -> "yeyupiaoling/MASR"
"Z-yq/TensorflowASR" -> "yeyupiaoling/PaddlePaddle-DeepSpeech"
"Z-yq/TensorflowASR" -> "Z-yq/TensorflowTTS" ["e"=1]
"Z-yq/TensorflowASR" -> "kaituoxu/Listen-Attend-Spell"
"Z-yq/TensorflowASR" -> "thu-spmi/CAT"
"Z-yq/TensorflowASR" -> "k2-fsa/fast_rnnt"
"Z-yq/TensorflowASR" -> "cywang97/StreamingTransformer"
"Z-yq/TensorflowASR" -> "wenet-e2e/WenetSpeech"
"Z-yq/TensorflowASR" -> "wenet-e2e/wenet"
"Z-yq/TensorflowASR" -> "chenkui164/FastASR"
"harvard-edge/multilingual_kws" -> "ArchitParnami/Few-Shot-KWS"
"harvard-edge/multilingual_kws" -> "dobby-seo/Wav2Keyword"
"harvard-edge/multilingual_kws" -> "zycv/awesome-keyword-spotting"
"harvard-edge/multilingual_kws" -> "vineeths96/Spoken-Keyword-Spotting"
"harvard-edge/multilingual_kws" -> "ARM-software/keyword-transformer"
"harvard-edge/multilingual_kws" -> "Ephrem-ETH/E2E-KWS"
"harvard-edge/multilingual_kws" -> "roman-vygon/triplet_loss_kws"
"harvard-edge/multilingual_kws" -> "HolgerBovbjerg/data2vec-KWS"
"harvard-edge/multilingual_kws" -> "wenet-e2e/wekws"
"harvard-edge/multilingual_kws" -> "mrusci/ondevice-learning-kws"
"harvard-edge/multilingual_kws" -> "gusrud1103/LibriPhrase"
"harvard-edge/multilingual_kws" -> "mindorii/kws"
"castorini/howl" -> "castorini/howl-deploy"
"castorini/howl" -> "dobby-seo/Wav2Keyword"
"castorini/howl" -> "castorini/honk"
"castorini/howl" -> "castorini/honkling"
"castorini/howl" -> "ARM-software/keyword-transformer"
"castorini/howl" -> "vineeths96/Spoken-Keyword-Spotting"
"castorini/howl" -> "harvard-edge/multilingual_kws"
"cywang97/StreamingTransformer" -> "tencent-ailab/pika"
"cywang97/StreamingTransformer" -> "wenet-e2e/speech-recognition-papers"
"cywang97/StreamingTransformer" -> "hirofumi0810/neural_sp"
"cywang97/StreamingTransformer" -> "1ytic/warp-rnnt"
"cywang97/StreamingTransformer" -> "SpeechColab/GigaSpeech"
"cywang97/StreamingTransformer" -> "ZhengkunTian/OpenTransformer"
"cywang97/StreamingTransformer" -> "theblackcat102/edgedict"
"cywang97/StreamingTransformer" -> "HawkAaron/warp-transducer"
"cywang97/StreamingTransformer" -> "jctian98/e2e_lfmmi"
"cywang97/StreamingTransformer" -> "oshindow/Transformer-Transducer"
"cywang97/StreamingTransformer" -> "noahchalifour/rnnt-speech-recognition"
"cywang97/StreamingTransformer" -> "YiwenShaoStephen/pychain"
"cywang97/StreamingTransformer" -> "MarkWuNLP/SemanticMask"
"cywang97/StreamingTransformer" -> "thu-spmi/CAT"
"cywang97/StreamingTransformer" -> "speechio/chinese_text_normalization"
"linhandev/medSeg" -> "zbp-xxxp/reading_pictures_writing_poems"
"linhandev/medSeg" -> "WhiteFireFox/paddleseg-tutorial"
"linhandev/medSeg" -> "jm12138/CPM-Generate-Paddle"
"linhandev/medSeg" -> "hang245141253/raspi4B_mask_detection_runtime"
"linhandev/medSeg" -> "KernelErr/realtime-object-detector"
"linhandev/medSeg" -> "JiehangXie/Landscape-Heath-Score" ["e"=1]
"linhandev/medSeg" -> "ZMpursue/PaddleColorization"
"linhandev/medSeg" -> "miemie2013/Paddle-SOLOv2"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "yeyupiaoling/PPASR"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "yeyupiaoling/MASR"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "AgentMaker/Paddle-Image-Models"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "AgentMaker/PaTTA"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "ninetailskim/DodgeFace"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "AgentMaker/Paddle-RLBooks"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "Z-yq/TensorflowASR"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "yeyupiaoling/VoiceprintRecognition-PaddlePaddle"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "AgentMaker/PAPC"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "AgentMaker/Paddle-DALL-E"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "nobody132/masr"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "sunyuqian1997/WanderBot_public"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "AgentMaker/Paddle-CLIP"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "AgentMaker/Paddle-Custom-Operators"
"yeyupiaoling/PaddlePaddle-DeepSpeech" -> "yeyupiaoling/PaddlePaddle-CrowdNet"
"Klettner/MM-Remote" -> "PalatinCoder/MMM-GoogleBirthdaysProvider"
"alumae/gst-kaldi-nnet2-online" -> "jcsilva/docker-kaldi-gstreamer-server"
"alumae/gst-kaldi-nnet2-online" -> "alumae/kaldi-gstreamer-server"
"alumae/gst-kaldi-nnet2-online" -> "Kaljurand/dictate.js"
"alumae/gst-kaldi-nnet2-online" -> "gooofy/py-kaldi-asr"
"alumae/gst-kaldi-nnet2-online" -> "dialogflow/asr-server"
"alumae/gst-kaldi-nnet2-online" -> "alumae/kaldi-offline-transcriber"
"alumae/gst-kaldi-nnet2-online" -> "yajiemiao/kaldipdnn"
"alumae/gst-kaldi-nnet2-online" -> "gooofy/zamia-speech"
"alumae/gst-kaldi-nnet2-online" -> "opendcd/opendcd"
"alumae/gst-kaldi-nnet2-online" -> "Kaljurand/K6nele"
"alumae/gst-kaldi-nnet2-online" -> "UFAL-DSG/pykaldi"
"alumae/gst-kaldi-nnet2-online" -> "UFAL-DSG/alex"
"Gaurav-Pande/AES_DL" -> "ustcljw/fupugec-score"
"Gaurav-Pande/AES_DL" -> "lingochamp/Multi-Scale-BERT-AES"
"DraqueT/PolyGlot" -> "conworkshop/conworkshop"
"DraqueT/PolyGlot" -> "ianmartinez/LangPad"
"DraqueT/PolyGlot" -> "Susurrus-LLC/langua"
"DraqueT/PolyGlot" -> "alexfink/random_language"
"DraqueT/PolyGlot" -> "def-gthill/lexurgy"
"DraqueT/PolyGlot" -> "conlang-software-dev/Logopoeist"
"DraqueT/PolyGlot" -> "yuhr/langue"
"DraqueT/PolyGlot" -> "itinerarium/phoneme-synthesis"
"DraqueT/PolyGlot" -> "wmannis/lexifer"
"by2101/OpenASR" -> "ZhengkunTian/OpenTransformer"
"xashru/punctuation-restoration" -> "oliverguhr/fullstop-deep-punctuation-prediction"
"xashru/punctuation-restoration" -> "attilanagy234/neural-punctuator"
"xashru/punctuation-restoration" -> "nkrnrnk/BertPunc"
"xashru/punctuation-restoration" -> "notAI-tech/fastPunct"
"xashru/punctuation-restoration" -> "Felflare/rpunct"
"xashru/punctuation-restoration" -> "ottokart/punctuator2"
"xashru/punctuation-restoration" -> "hqsiswiliam/punctuation-restoration-scl"
"xashru/punctuation-restoration" -> "cadia-lvl/punctuation-prediction"
"xashru/punctuation-restoration" -> "sviperm/neuro-comma"
"xashru/punctuation-restoration" -> "yeyupiaoling/PunctuationModel"
"xashru/punctuation-restoration" -> "AlvinIsonomia/LSTM-for-Chinese-Punctuation-Restoration"
"xashru/punctuation-restoration" -> "yuboona/Chinese-Punctuation-Restoration-with-Bert-CNN-RNN"
"xashru/punctuation-restoration" -> "MenNianShi/PunctuationPrediction-BERT"
"xashru/punctuation-restoration" -> "plkmo/NLP_Toolkit" ["e"=1]
"xashru/punctuation-restoration" -> "karanmakhija867/bert_punct"
"tgrosinger/aenea-grammars" -> "dictation-toolbox/dragonfly-scripts"
"tgrosinger/aenea-grammars" -> "dictation-toolbox/aenea"
"tgrosinger/aenea-grammars" -> "simianhacker/code-by-voice"
"tgrosinger/aenea-grammars" -> "dictation-toolbox/aenea-grammars"
"tgrosinger/aenea-grammars" -> "davitenio/dragonfly-macros"
"tgrosinger/aenea-grammars" -> "chajadan/dragonfluid"
"zzmp/juliusjs" -> "syl22-00/pocketsphinx.js"
"zzmp/juliusjs" -> "zenorocha/voice-elements"
"zzmp/juliusjs" -> "sdkcarlos/artyom.js"
"zzmp/juliusjs" -> "TalAter/annyang"
"zzmp/juliusjs" -> "dreamdom/JsSpeechRecognizer"
"zzmp/juliusjs" -> "jhauswald/lucida"
"felixkreuk/UnsupSeg" -> "felixkreuk/SegFeat"
"TeraTech/MMM-WiFiPassword" -> "edward-shen/MMM-pages"
"TeraTech/MMM-WiFiPassword" -> "NolanKingdon/MMM-MoonPhase"
"yeyupiaoling/PP-YOLOE" -> "AgentMaker/Paddle-Custom-Operators"
"yeyupiaoling/PP-YOLOE" -> "AgentMaker/Paddle-IMSP"
"yeyupiaoling/PP-YOLOE" -> "AgentMaker/Paddle-DALL-E"
"yeyupiaoling/PP-YOLOE" -> "ninetailskim/PandaFaceGenerator"
"yeyupiaoling/PP-YOLOE" -> "yeyupiaoling/PaddlePaddle-SSD"
"yeyupiaoling/PP-YOLOE" -> "jm12138/deep_sort_paddle"
"yeyupiaoling/PP-YOLOE" -> "yeyupiaoling/PaddlePaddle-CRNN"
"yeyupiaoling/PP-YOLOE" -> "yeyupiaoling/PaddlePaddle-CrowdNet"
"yeyupiaoling/PP-YOLOE" -> "AgentMaker/Paddle-PerceptualSimilarity"
"yeyupiaoling/PP-YOLOE" -> "AgentMaker/PPQI.jl"
"yeyupiaoling/PP-YOLOE" -> "ITerydh/PaddlePaddle-Python-Zero-Based"
"yeyupiaoling/PP-YOLOE" -> "jhcgt4869/LiHongyi_curriculum_experience"
"yeyupiaoling/PP-YOLOE" -> "ninetailskim/DodgeFace-EXQver"
"yeyupiaoling/PP-YOLOE" -> "jm12138/metric_learning_paddle"
"yeyupiaoling/PP-YOLOE" -> "wobushihuair/paddlepaddle_project"
"firetools/blenderfds" -> "FireDynamics/fdsreader"
"firetools/blenderfds" -> "firetools/qgis2fds"
"phacility/javelin" -> "shaneosullivan/boltjs"
"tzyll/goparrot" -> "JazminVidal/gop-dnn-epadb"
"tzyll/goparrot" -> "MarceloSancinetti/epa-gop-pykaldi"
"tzyll/goparrot" -> "sweekarsud/Goodness-of-Pronunciation"
"tzyll/goparrot" -> "moisesveleta/GOP-LSTM"
"tzyll/goparrot" -> "YuanGongND/gopt"
"tzyll/goparrot" -> "aalto-speech/interspeech2019_karhila_et_al"
"yeyupiaoling/PaddlePaddle-SSD" -> "yeyupiaoling/PaddlePaddle-CrowdNet"
"yeyupiaoling/PaddlePaddle-SSD" -> "AgentMaker/Paddle-IMSP"
"yeyupiaoling/PaddlePaddle-SSD" -> "AgentMaker/Paddle-Custom-Operators"
"yeyupiaoling/PaddlePaddle-SSD" -> "yeyupiaoling/PaddlePaddle-CRNN"
"yeyupiaoling/PaddlePaddle-SSD" -> "jhcgt4869/LiHongyi_curriculum_experience"
"yeyupiaoling/PaddlePaddle-SSD" -> "wobushihuair/paddlepaddle_project"
"yeyupiaoling/PaddlePaddle-SSD" -> "AgentMaker/Paddle-DALL-E"
"yeyupiaoling/PaddlePaddle-SSD" -> "ninetailskim/PandaFaceGenerator"
"rakeshvar/rnn_ctc" -> "amaas/stanford-ctc"
"rakeshvar/rnn_ctc" -> "shawntan/theano-ctc"
"rakeshvar/rnn_ctc" -> "mpezeshki/CTC-Connectionist-Temporal-Classification"
"rakeshvar/rnn_ctc" -> "sherjilozair/ctc"
"rakeshvar/rnn_ctc" -> "aaron-xichen/cnn-lstm-ctc"
"yajiemiao/kaldipdnn" -> "yajiemiao/pdnn" ["e"=1]
"yajiemiao/kaldipdnn" -> "alumae/gst-kaldi-nnet2-online"
"yajiemiao/kaldipdnn" -> "yajiemiao/eesen"
"vineeths96/Spoken-Keyword-Spotting" -> "harvard-edge/multilingual_kws"
"vineeths96/Spoken-Keyword-Spotting" -> "dobby-seo/Wav2Keyword"
"vineeths96/Spoken-Keyword-Spotting" -> "ArchitParnami/Few-Shot-KWS"
"vineeths96/Spoken-Keyword-Spotting" -> "isadrtdinov/kws-attention"
"vineeths96/Spoken-Keyword-Spotting" -> "zycv/awesome-keyword-spotting"
"shawntan/theano_toolkit" -> "shawntan/chicken-rice-nn"
"shawntan/theano_toolkit" -> "shawntan/theano-ctc"
"calmofthestorm/aenea" -> "TristenHayfield/damselfly"
"calmofthestorm/aenea" -> "simianhacker/code-by-voice"
"AIFanatic/google-offline-speech-recognition" -> "biemster/gtts"
"AIFanatic/google-offline-speech-recognition" -> "biemster/asr"
"vadimkantorov/ctc" -> "TeaPoly/CTC-OptimizedLoss"
"thobach/MMM-MicrosoftToDo" -> "BenRoe/MMM-SystemStats"
"thobach/MMM-MicrosoftToDo" -> "jayked/MMM-GoogleTasks"
"lucidrains/conformer" -> "sooftware/conformer"
"lucidrains/conformer" -> "burchim/EfficientConformer"
"lucidrains/conformer" -> "upskyy/Squeezeformer"
"lucidrains/conformer" -> "kssteven418/Squeezeformer"
"lucidrains/conformer" -> "thu-spmi/CAT"
"cmusphinx/cmudict-tools" -> "cmusphinx/pocketsphinx-ios-demo"
"ArchitParnami/Few-Shot-KWS" -> "mrusci/ondevice-learning-kws"
"ArchitParnami/Few-Shot-KWS" -> "harvard-edge/multilingual_kws"
"ArchitParnami/Few-Shot-KWS" -> "dobby-seo/Wav2Keyword"
"ArchitParnami/Few-Shot-KWS" -> "lilianemomeni/KWS-Net"
"TalonCommunity/Wiki" -> "talonvoice/talon"
"TalonCommunity/Wiki" -> "fidgetingbits/fidgetingbits-talon"
"TalonCommunity/Wiki" -> "AndrewDant/screen-spots"
"TalonCommunity/Wiki" -> "chaosparrot/talon_hud"
"TalonCommunity/Wiki" -> "wolfmanstout/talon-gaze-ocr"
"MenNianShi/PunctuationPrediction-BERT" -> "kaituoxu/X-Punctuator"
"KernelErr/realtime-object-detector" -> "miemie2013/Paddle-SOLOv2"
"KernelErr/realtime-object-detector" -> "zbp-xxxp/reading_pictures_writing_poems"
"KernelErr/realtime-object-detector" -> "hang245141253/raspi4B_mask_detection_runtime"
"KernelErr/realtime-object-detector" -> "hang245141253/raspi4B_num_demo"
"KernelErr/realtime-object-detector" -> "ZMpursue/PaddleColorization"
"KernelErr/realtime-object-detector" -> "ZMpursue/DCGANfakeface"
"KernelErr/realtime-object-detector" -> "WhiteFireFox/paddleseg-tutorial"
"KernelErr/realtime-object-detector" -> "jm12138/CPM-Generate-Paddle"
"KernelErr/realtime-object-detector" -> "linhandev/medSeg"
"KernelErr/realtime-object-detector" -> "ZMpursue/Anime_avatar_generation"
"wolfmanstout/dragonfly-commands" -> "t4ngo/dragonfly-modules"
"wolfmanstout/dragonfly-commands" -> "mirober/Breathe"
"wolfmanstout/dragonfly-commands" -> "dwks/aenea-grammar-simple"
"wolfmanstout/dragonfly-commands" -> "simianhacker/code-by-voice"
"zuo000/MMM-HomeAssistant" -> "aserramonner/MMM-HASS"
"vlomme/Bert-Russian-punctuation" -> "sviperm/neuro-comma"
"30stomercury/Automatic-Speech-Recognition" -> "hgstudent/las"
"hgstudent/las" -> "30stomercury/Automatic-Speech-Recognition"
"bugsounet/MMM-Assistant2Display" -> "bugsounet/MMM-GoogleAssistant"
"iamjanvijay/rnnt" -> "iamjanvijay/rnnt_decoder_cuda"
"rwth-i6/rasr" -> "rwth-i6/sisyphus"
"janchorowski/kaldi-python" -> "dmitriy-serdyuk/kaldi-python"
"ZMpursue/rocm_pytorch_whl" -> "ZMpursue/PaddleColorization"
"ZMpursue/rocm_pytorch_whl" -> "ZMpursue/Anime_avatar_generation"
"ZMpursue/rocm_pytorch_whl" -> "ZMpursue/DCGANfakeface"
"wolfmanstout/screen-ocr" -> "wolfmanstout/gaze-ocr"
"dictation-toolbox/natlink" -> "mirober/Breathe"
"wolfmanstout/gaze-ocr" -> "wolfmanstout/screen-ocr"
"miemie2013/Paddle-DIOU-YOLOv3" -> "miemie2013/PaddlePaddle_yolact"
"miemie2013/Paddle-DIOU-YOLOv3" -> "miemie2013/Paddle-PPYOLO"
"lilianemomeni/KWS-Net" -> "prajwalkr/transpotter"
"lilianemomeni/KWS-Net" -> "ArchitParnami/Few-Shot-KWS"
"LexicalStressDetection/lexical-stress-detection" -> "JawadAr/Pronunciation-verification-using-anomaly-detection-Thesis"
"hang245141253/raspi4B_mask_detection_runtime" -> "zbp-xxxp/reading_pictures_writing_poems"
"hang245141253/raspi4B_mask_detection_runtime" -> "hang245141253/raspi4B_num_demo"
"idiap/pkwrap" -> "YiwenShaoStephen/pychain_example"
"idiap/pkwrap" -> "idiap/apam"
"miemie2013/Paddle-YOLOv4" -> "miemie2013/Paddle-PPYOLO"
"miemie2013/Paddle-YOLOv4" -> "ITerydh/PaddlePaddle-Python-Zero-Based"
"chenjiasheng/mwer" -> "TeaPoly/CTC-OptimizedLoss"
"JazminVidal/gop-dnn-epadb" -> "tzyll/goparrot"
"JazminVidal/gop-dnn-epadb" -> "ronggong/mispronunciation-detection"
"JazminVidal/gop-dnn-epadb" -> "MarceloSancinetti/epa-gop-pykaldi"
"JazminVidal/gop-dnn-epadb" -> "JazminVidal/gop-pykaldi"
"JazminVidal/gop-dnn-epadb" -> "aalto-speech/interspeech2019_karhila_et_al"
"JazminVidal/gop-dnn-epadb" -> "moisesveleta/GOP-LSTM"
"Kaljurand/speechutils" -> "Kaljurand/net-speech-api"
"Kaljurand/speechutils" -> "Kaljurand/Arvutaja"
"shawntan/chicken-rice-nn" -> "shawntan/theano_toolkit"
"ninetailskim/FlappyPaddle" -> "ninetailskim/PaddleEGT"
"zbp-xxxp/reading_pictures_writing_poems" -> "ZMpursue/PaddleColorization"
"zbp-xxxp/reading_pictures_writing_poems" -> "ZMpursue/Anime_avatar_generation"
"zbp-xxxp/reading_pictures_writing_poems" -> "ninetailskim/PaddleEGT"
"zbp-xxxp/reading_pictures_writing_poems" -> "ZMpursue/DCGANfakeface"
"zbp-xxxp/reading_pictures_writing_poems" -> "ninetailskim/FlappyPaddle"
"MaCFP/matl-db" -> "MaCFP/macfp-db"
"ustcljw/fupugec-score" -> "ucasir/TDNN"
"danFromTelAviv/key_words_spotting" -> "Kirili4ik/kws-attention-pytorch"
"danFromTelAviv/key_words_spotting" -> "isadrtdinov/kws-attention"
"yuboona/Chinese-Punctuation-Restoration-with-Bert-CNN-RNN" -> "AlvinIsonomia/LSTM-for-Chinese-Punctuation-Restoration"
"yuboona/Chinese-Punctuation-Restoration-with-Bert-CNN-RNN" -> "yuboona/punctuation-restoration-pytorch"
"miemie2013/PaddlePaddle_yolact" -> "miemie2013/Paddle-PPYOLO"
"miemie2013/PaddlePaddle_yolact" -> "miemie2013/Paddle-DIOU-YOLOv3"
"felixkreuk/SegFeat" -> "felixkreuk/UnsupSeg"
"MarceloSancinetti/epa-gop-pykaldi" -> "tzyll/goparrot"
"xiangxyq/minimize-chain-decoder" -> "xiangxyq/kaldi"
"YiwenShaoStephen/pychain_example" -> "YiwenShaoStephen/pychain"
"t4ngo/dragonfly-modules" -> "wolfmanstout/dragonfly-commands"
"t4ngo/dragonfly-modules" -> "mirober/Breathe"
"ZMpursue/Anime_avatar_generation" -> "ZMpursue/PaddleColorization"
"ZMpursue/Anime_avatar_generation" -> "ZMpursue/DCGANfakeface"
"kaldi-asr/kaldi" -> "espnet/espnet"
"kaldi-asr/kaldi" -> "mozilla/DeepSpeech"
"kaldi-asr/kaldi" -> "speechbrain/speechbrain"
"kaldi-asr/kaldi" -> "mravanelli/pytorch-kaldi"
"kaldi-asr/kaldi" -> "flashlight/wav2letter"
"kaldi-asr/kaldi" -> "wenet-e2e/wenet"
"kaldi-asr/kaldi" -> "nl8590687/ASRT_SpeechRecognition"
"kaldi-asr/kaldi" -> "k2-fsa/k2"
"kaldi-asr/kaldi" -> "PaddlePaddle/PaddleSpeech" ["e"=1]
"kaldi-asr/kaldi" -> "alphacep/vosk-api"
"kaldi-asr/kaldi" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"kaldi-asr/kaldi" -> "pykaldi/pykaldi"
"kaldi-asr/kaldi" -> "pyannote/pyannote-audio" ["e"=1]
"kaldi-asr/kaldi" -> "cmusphinx/pocketsphinx"
"kaldi-asr/kaldi" -> "NVIDIA/NeMo" ["e"=1]
"dobby-seo/Wav2Keyword" -> "roman-vygon/triplet_loss_kws"
"dobby-seo/Wav2Keyword" -> "ArchitParnami/Few-Shot-KWS"
"dobby-seo/Wav2Keyword" -> "zycv/awesome-keyword-spotting"
"dobby-seo/Wav2Keyword" -> "harvard-edge/multilingual_kws"
"dobby-seo/Wav2Keyword" -> "HolgerBovbjerg/data2vec-KWS"
"dobby-seo/Wav2Keyword" -> "ARM-software/keyword-transformer"
"dobby-seo/Wav2Keyword" -> "vineeths96/Spoken-Keyword-Spotting"
"dobby-seo/Wav2Keyword" -> "sonos/keyword-spotting-research-datasets"
"firemodels/fds" -> "firemodels/cfast"
"firemodels/fds" -> "firemodels/smv"
"firemodels/fds" -> "FireDynamics/fdsreader"
"firemodels/fds" -> "firetools/blenderfds"
"firemodels/fds" -> "MaCFP/macfp-db"
"firemodels/fds" -> "synthetik-technologies/blastfoam" ["e"=1]
"firemodels/fds" -> "FireDynamics/LectureFireSimulation"
"firemodels/fds" -> "firetools/qgis2fds"
"firemodels/fds" -> "CaNS-World/CaNS" ["e"=1]
"firemodels/fds" -> "googleapis/nodejs-translate"
"firemodels/fds" -> "Cantera/cantera" ["e"=1]
"firemodels/fds" -> "rmcdermo/SublimeFDS"
"firemodels/fds" -> "tumaer/JAXFLUIDS" ["e"=1]
"firemodels/fds" -> "Nek5000/Nek5000" ["e"=1]
"facebookresearch/voxpopuli" -> "facebookresearch/libri-light"
"facebookresearch/voxpopuli" -> "SpeechColab/GigaSpeech"
"facebookresearch/voxpopuli" -> "cywang97/StreamingTransformer"
"facebookresearch/voxpopuli" -> "kahne/SpeechTransProgress" ["e"=1]
"facebookresearch/voxpopuli" -> "facebookresearch/WavAugment" ["e"=1]
"facebookresearch/voxpopuli" -> "ZhangXInFD/SpeechTokenizer" ["e"=1]
"facebookresearch/voxpopuli" -> "google-research-datasets/cvss"
"facebookresearch/voxpopuli" -> "facebookresearch/covost"
"facebookresearch/voxpopuli" -> "wenet-e2e/speech-recognition-papers"
"facebookresearch/voxpopuli" -> "tencent-ailab/pika"
"facebookresearch/voxpopuli" -> "1ytic/warp-rnnt"
"facebookresearch/voxpopuli" -> "thu-spmi/CAT"
"facebookresearch/voxpopuli" -> "k2-fsa/libriheavy" ["e"=1]
"facebookresearch/voxpopuli" -> "hirofumi0810/neural_sp"
"facebookresearch/voxpopuli" -> "coqui-ai/open-speech-corpora" ["e"=1]
"cursorless-dev/cursorless" -> "talonhub/community"
"cursorless-dev/cursorless" -> "david-tejada/rango"
"cursorless-dev/cursorless" -> "cursorless-dev/cursorless-talon"
"cursorless-dev/cursorless" -> "chaosparrot/parrot.py"
"cursorless-dev/cursorless" -> "chaosparrot/talon_hud"
"cursorless-dev/cursorless" -> "AndreasArvidsson/andreas-talon"
"cursorless-dev/cursorless" -> "wolfmanstout/talon-gaze-ocr"
"cursorless-dev/cursorless" -> "david-tejada/rango-talon"
"cursorless-dev/cursorless" -> "splondike/talon_ui_helper"
"cursorless-dev/cursorless" -> "C-Loftus/talon-ai-tools"
"cursorless-dev/cursorless" -> "serenadeai/serenade"
"cursorless-dev/cursorless" -> "TalonCommunity/Wiki"
"cursorless-dev/cursorless" -> "phillco/talon-axkit"
"cursorless-dev/cursorless" -> "talonvoice/talon"
"cursorless-dev/cursorless" -> "AndrewDant/screen-spots"
"yeyupiaoling/PPASR" -> "yeyupiaoling/MASR"
"yeyupiaoling/PPASR" -> "yeyupiaoling/PaddlePaddle-DeepSpeech"
"yeyupiaoling/PPASR" -> "yeyupiaoling/PunctuationModel"
"yeyupiaoling/PPASR" -> "yeyupiaoling/VoiceprintRecognition-PaddlePaddle"
"yeyupiaoling/PPASR" -> "chenkui164/FastASR"
"yeyupiaoling/PPASR" -> "RapidAI/RapidASR"
"yeyupiaoling/PPASR" -> "wenet-e2e/wenet"
"yeyupiaoling/PPASR" -> "TencentGameMate/chinese_speech_pretrain" ["e"=1]
"yeyupiaoling/PPASR" -> "nobody132/masr"
"yeyupiaoling/PPASR" -> "k2-fsa/icefall"
"yeyupiaoling/PPASR" -> "Z-yq/TensorflowASR"
"yeyupiaoling/PPASR" -> "wenet-e2e/WenetSpeech"
"yeyupiaoling/PPASR" -> "nl8590687/ASRT_SpeechRecognition"
"yeyupiaoling/PPASR" -> "yeyupiaoling/VoiceprintRecognition-Pytorch" ["e"=1]
"yeyupiaoling/PPASR" -> "ninetailskim/PandaFaceGenerator"
"rhasspy/snowboy-seasalt" -> "seasalt-ai/snowboy"
"QPT-Family/QPT" -> "AgentMaker/Paddle-Image-Models"
"QPT-Family/QPT" -> "PantsuDango/DangoOCR"
"QPT-Family/QPT" -> "thomas-yanxin/ColugoMum"
"QPT-Family/QPT" -> "AgentMaker/PaTTA"
"QPT-Family/QPT" -> "AgentMaker/Paddle-RLBooks"
"QPT-Family/QPT" -> "ninetailskim/DodgeFace"
"QPT-Family/QPT" -> "AgentMaker/Paddle-CLIP"
"QPT-Family/QPT" -> "PaddleCV-SIG/EISeg" ["e"=1]
"QPT-Family/QPT" -> "HighCWu/anime_biggan_toy"
"QPT-Family/QPT" -> "1084667371/ExtractLine"
"QPT-Family/QPT" -> "AgentMaker/PAPC"
"QPT-Family/QPT" -> "ninetailskim/PandaFaceGenerator"
"QPT-Family/QPT" -> "QPT-Family/QGUI"
"QPT-Family/QPT" -> "yeyupiaoling/PPASR"
"QPT-Family/QPT" -> "yeyupiaoling/PaddlePaddle-DeepSpeech"
"gtn-org/gtn" -> "facebookresearch/gtn_applications"
"csukuangfj/kaldifeat" -> "csukuangfj/transducer-loss-benchmarking"
"csukuangfj/kaldifeat" -> "csukuangfj/kaldi-native-fbank"
"csukuangfj/kaldifeat" -> "lhotse-speech/lhotse"
"csukuangfj/kaldifeat" -> "nttcslab-sp/kaldiio"
"csukuangfj/kaldifeat" -> "RicherMans/Dasheng" ["e"=1]
"coqui-ai/STT" -> "coqui-ai/open-speech-corpora" ["e"=1]
"coqui-ai/STT" -> "coqui-ai/STT-examples"
"coqui-ai/STT" -> "speechbrain/speechbrain"
"coqui-ai/STT" -> "alphacep/vosk-api"
"coqui-ai/STT" -> "mozilla/DeepSpeech"
"coqui-ai/STT" -> "coqui-ai/TTS" ["e"=1]
"coqui-ai/STT" -> "mozilla/TTS" ["e"=1]
"coqui-ai/STT" -> "lhotse-speech/lhotse"
"coqui-ai/STT" -> "snakers4/silero-models" ["e"=1]
"coqui-ai/STT" -> "TensorSpeech/TensorFlowASR"
"coqui-ai/STT" -> "syhw/wer_are_we"
"coqui-ai/STT" -> "thorstenMueller/Thorsten-Voice" ["e"=1]
"coqui-ai/STT" -> "k2-fsa/k2"
"coqui-ai/STT" -> "coqui-ai/TTS-papers" ["e"=1]
"coqui-ai/STT" -> "coqui-ai/STT-models"
"openspeech-team/openspeech" -> "sooftware/conformer"
"openspeech-team/openspeech" -> "sooftware/kospeech" ["e"=1]
"openspeech-team/openspeech" -> "sooftware/k-startups" ["e"=1]
"openspeech-team/openspeech" -> "burchim/EfficientConformer"
"openspeech-team/openspeech" -> "sooftware/ksponspeech" ["e"=1]
"openspeech-team/openspeech" -> "wenet-e2e/speech-recognition-papers"
"openspeech-team/openspeech" -> "upskyy/Squeezeformer"
"openspeech-team/openspeech" -> "gentaiscool/end2end-asr-pytorch"
"openspeech-team/openspeech" -> "hirofumi0810/neural_sp"
"openspeech-team/openspeech" -> "cywang97/StreamingTransformer"
"openspeech-team/openspeech" -> "mailong25/self-supervised-speech-recognition"
"openspeech-team/openspeech" -> "kssteven418/Squeezeformer"
"openspeech-team/openspeech" -> "1ytic/warp-rnnt"
"openspeech-team/openspeech" -> "lhotse-speech/lhotse"
"openspeech-team/openspeech" -> "upskyy/Transformer-Transducer"
"iceychris/LibreASR" -> "cywang97/StreamingTransformer"
"iceychris/LibreASR" -> "theblackcat102/edgedict"
"iceychris/LibreASR" -> "tencent-ailab/pika"
"iceychris/LibreASR" -> "wenet-e2e/speech-recognition-papers"
"iceychris/LibreASR" -> "TensorSpeech/TensorFlowASR"
"iceychris/LibreASR" -> "noahchalifour/rnnt-speech-recognition"
"iceychris/LibreASR" -> "mozilla/DSAlign" ["e"=1]
"iceychris/LibreASR" -> "freewym/espresso"
"wenet-e2e/wenet" -> "espnet/espnet"
"wenet-e2e/wenet" -> "k2-fsa/k2"
"wenet-e2e/wenet" -> "k2-fsa/icefall"
"wenet-e2e/wenet" -> "speechbrain/speechbrain"
"wenet-e2e/wenet" -> "s3prl/s3prl" ["e"=1]
"wenet-e2e/wenet" -> "modelscope/FunASR" ["e"=1]
"wenet-e2e/wenet" -> "TencentGameMate/chinese_speech_pretrain" ["e"=1]
"wenet-e2e/wenet" -> "kaldi-asr/kaldi"
"wenet-e2e/wenet" -> "mravanelli/pytorch-kaldi"
"wenet-e2e/wenet" -> "wenet-e2e/wespeaker" ["e"=1]
"wenet-e2e/wenet" -> "wenet-e2e/wekws"
"wenet-e2e/wenet" -> "microsoft/DNS-Challenge" ["e"=1]
"wenet-e2e/wenet" -> "snakers4/silero-vad" ["e"=1]
"wenet-e2e/wenet" -> "athena-team/athena" ["e"=1]
"wenet-e2e/wenet" -> "lhotse-speech/lhotse"
"matt-desmarais/SentryTurret" -> "decentropy/SentryTurret"
"upskyy/Transformer-Transducer" -> "zzpDapeng/Transformer-Transducer"
"thomas-yanxin/garbage_classification" -> "thomas-yanxin/Cigarette-Detection"
"wenet-e2e/speech-recognition-papers" -> "cywang97/StreamingTransformer"
"wenet-e2e/speech-recognition-papers" -> "thu-spmi/CAT"
"wenet-e2e/speech-recognition-papers" -> "tencent-ailab/pika"
"wenet-e2e/speech-recognition-papers" -> "SpeechColab/GigaSpeech"
"wenet-e2e/speech-recognition-papers" -> "ZhengkunTian/OpenTransformer"
"wenet-e2e/speech-recognition-papers" -> "k2-fsa/k2"
"wenet-e2e/speech-recognition-papers" -> "hirofumi0810/neural_sp"
"wenet-e2e/speech-recognition-papers" -> "speechio/BigCiDian"
"wenet-e2e/speech-recognition-papers" -> "kaituoxu/Speech-Transformer"
"wenet-e2e/speech-recognition-papers" -> "ZhengkunTian/rnn-transducer"
"wenet-e2e/speech-recognition-papers" -> "1ytic/warp-rnnt"
"wenet-e2e/speech-recognition-papers" -> "jctian98/e2e_lfmmi"
"wenet-e2e/speech-recognition-papers" -> "speechio/chinese_text_normalization"
"wenet-e2e/speech-recognition-papers" -> "theblackcat102/edgedict"
"wenet-e2e/speech-recognition-papers" -> "HawkAaron/warp-transducer"
"srvk/eesen" -> "lingochamp/kaldi-ctc"
"srvk/eesen" -> "yajiemiao/eesen"
"srvk/eesen" -> "k2-fsa/k2"
"srvk/eesen" -> "syhw/wer_are_we"
"srvk/eesen" -> "rizar/attention-lvcsr"
"srvk/eesen" -> "amaas/stanford-ctc"
"srvk/eesen" -> "thu-spmi/CAT"
"srvk/eesen" -> "mravanelli/pytorch-kaldi"
"srvk/eesen" -> "pykaldi/pykaldi"
"srvk/eesen" -> "vrenkens/tfkaldi"
"srvk/eesen" -> "alumae/kaldi-gstreamer-server"
"srvk/eesen" -> "k2-fsa/icefall"
"srvk/eesen" -> "wenet-e2e/speech-recognition-papers"
"srvk/eesen" -> "HawkAaron/warp-transducer"
"srvk/eesen" -> "YiwenShaoStephen/pychain"
"wenet-e2e/WenetSpeech" -> "wenet-e2e/wetts" ["e"=1]
"wenet-e2e/WenetSpeech" -> "SpeechColab/Leaderboard"
"wenet-e2e/WenetSpeech" -> "SpeechColab/GigaSpeech"
"wenet-e2e/WenetSpeech" -> "wenet-e2e/wekws"
"wenet-e2e/WenetSpeech" -> "double22a/speech_dataset"
"wenet-e2e/WenetSpeech" -> "wenet-e2e/WeTextProcessing" ["e"=1]
"wenet-e2e/WenetSpeech" -> "k2-fsa/icefall"
"wenet-e2e/WenetSpeech" -> "speechio/chinese_text_normalization"
"wenet-e2e/WenetSpeech" -> "k2-fsa/k2"
"wenet-e2e/WenetSpeech" -> "wenet-e2e/wenet"
"wenet-e2e/WenetSpeech" -> "thu-spmi/CAT"
"wenet-e2e/WenetSpeech" -> "wenet-e2e/speech-recognition-papers"
"wenet-e2e/WenetSpeech" -> "Z-yq/TensorflowASR"
"wenet-e2e/WenetSpeech" -> "ddlBoJack/Speech-Resources" ["e"=1]
"wenet-e2e/WenetSpeech" -> "modelscope/FunCodec" ["e"=1]
"sooftware/conformer" -> "openspeech-team/openspeech"
"sooftware/conformer" -> "lucidrains/conformer"
"sooftware/conformer" -> "burchim/EfficientConformer"
"sooftware/conformer" -> "sooftware/kospeech" ["e"=1]
"sooftware/conformer" -> "s3prl/s3prl" ["e"=1]
"sooftware/conformer" -> "jik876/hifi-gan" ["e"=1]
"sooftware/conformer" -> "wenet-e2e/wenet"
"sooftware/conformer" -> "k2-fsa/icefall"
"sooftware/conformer" -> "kaituoxu/Speech-Transformer"
"sooftware/conformer" -> "microsoft/DNS-Challenge" ["e"=1]
"sooftware/conformer" -> "upskyy/Squeezeformer"
"sooftware/conformer" -> "YuanGongND/ast" ["e"=1]
"sooftware/conformer" -> "WenzheLiu-Speech/awesome-speech-enhancement" ["e"=1]
"sooftware/conformer" -> "clovaai/voxceleb_trainer" ["e"=1]
"sooftware/conformer" -> "Snowdar/asv-subtools" ["e"=1]
"k2-fsa/icefall" -> "k2-fsa/k2"
"k2-fsa/icefall" -> "lhotse-speech/lhotse"
"k2-fsa/icefall" -> "k2-fsa/sherpa"
"k2-fsa/icefall" -> "SpeechColab/Leaderboard"
"k2-fsa/icefall" -> "wenet-e2e/wenet"
"k2-fsa/icefall" -> "k2-fsa/snowfall"
"k2-fsa/icefall" -> "SpeechColab/GigaSpeech"
"k2-fsa/icefall" -> "thu-spmi/CAT"
"k2-fsa/icefall" -> "X-LANCE/SLAM-LLM" ["e"=1]
"k2-fsa/icefall" -> "wenet-e2e/wekws"
"k2-fsa/icefall" -> "csukuangfj/kaldifeat"
"k2-fsa/icefall" -> "s3prl/s3prl" ["e"=1]
"k2-fsa/icefall" -> "wenet-e2e/wespeaker" ["e"=1]
"k2-fsa/icefall" -> "ga642381/speech-trident" ["e"=1]
"k2-fsa/icefall" -> "microsoft/NeuralSpeech" ["e"=1]
"thomas-yanxin/Garbage-test" -> "thomas-yanxin/garbage_classification"
"thomas-yanxin/Garbage-test" -> "thomas-yanxin/Cigarette-Detection"
"thomas-yanxin/the-eye-knows-the-garbage" -> "thomas-yanxin/garbage_classification"
"thomas-yanxin/the-eye-knows-the-garbage" -> "thomas-yanxin/Cigarette-Detection"
"thomas-yanxin/the-eye-knows-the-garbage" -> "ninetailskim/PandaFaceGenerator"
"thomas-yanxin/the-eye-knows-the-garbage" -> "thomas-yanxin/Garbage-test"
"thomas-yanxin/the-eye-knows-the-garbage" -> "yeyupiaoling/PaddlePaddle-CrowdNet"
"thomas-yanxin/the-eye-knows-the-garbage" -> "AgentMaker/Paddle-IMSP"
"thomas-yanxin/the-eye-knows-the-garbage" -> "AgentMaker/Paddle-Custom-Operators"
"thomas-yanxin/the-eye-knows-the-garbage" -> "AgentMaker/Paddle-DALL-E"
"thomas-yanxin/the-eye-knows-the-garbage" -> "jhcgt4869/LiHongyi_curriculum_experience"
"thomas-yanxin/the-eye-knows-the-garbage" -> "ninetailskim/DodgeFace-EXQver"
"thomas-yanxin/the-eye-knows-the-garbage" -> "ninetailskim/DodgeFace"
"thomas-yanxin/the-eye-knows-the-garbage" -> "AgentMaker/Paddle-PerceptualSimilarity"
"thomas-yanxin/the-eye-knows-the-garbage" -> "ninetailskim/GestureRecognitionWithDA"
"thomas-yanxin/the-eye-knows-the-garbage" -> "yeyupiaoling/PaddlePaddle-CRNN"
"thomas-yanxin/the-eye-knows-the-garbage" -> "AgentMaker/PaTTA"
"AgentMaker/PAPC" -> "AgentMaker/Paddle-DALL-E"
"AgentMaker/PAPC" -> "AgentMaker/Paddle-RLBooks"
"AgentMaker/PAPC" -> "AgentMaker/Paddle-IMSP"
"AgentMaker/PAPC" -> "AgentMaker/Paddle-Custom-Operators"
"AgentMaker/PAPC" -> "AgentMaker/Paddle-CLIP"
"AgentMaker/PAPC" -> "AgentMaker/PPQI.jl"
"AgentMaker/PAPC" -> "AgentMaker/PaTTA"
"AgentMaker/PAPC" -> "AgentMaker/Paddle-Image-Models"
"AgentMaker/PAPC" -> "AgentMaker/Paddle-PerceptualSimilarity"
"Felflare/rpunct" -> "notAI-tech/fastPunct"
"zycv/awesome-keyword-spotting" -> "wenet-e2e/wekws"
"zycv/awesome-keyword-spotting" -> "dobby-seo/Wav2Keyword"
"zycv/awesome-keyword-spotting" -> "harvard-edge/multilingual_kws"
"zycv/awesome-keyword-spotting" -> "roman-vygon/triplet_loss_kws"
"zycv/awesome-keyword-spotting" -> "mindorii/kws"
"zycv/awesome-keyword-spotting" -> "ArchitParnami/Few-Shot-KWS"
"zycv/awesome-keyword-spotting" -> "colinsongf/keyword_spotting"
"zycv/awesome-keyword-spotting" -> "hyperconnect/TC-ResNet"
"zycv/awesome-keyword-spotting" -> "vineeths96/Spoken-Keyword-Spotting"
"zycv/awesome-keyword-spotting" -> "modelscope/kws-training-suite"
"zycv/awesome-keyword-spotting" -> "ARM-software/keyword-transformer"
"zycv/awesome-keyword-spotting" -> "sonos/keyword-spotting-research-datasets"
"zycv/awesome-keyword-spotting" -> "castorini/honk"
"zycv/awesome-keyword-spotting" -> "HolgerBovbjerg/data2vec-KWS"
"Kaljurand/K6nele" -> "jcsilva/docker-kaldi-gstreamer-server"
"Kaljurand/K6nele" -> "Kaljurand/K6nele-service"
"Kaljurand/K6nele" -> "ccoreilly/LocalSTT"
"Kaljurand/K6nele" -> "truongdo/kaldi-gstreamer-android-client"
"Kaljurand/K6nele" -> "Kaljurand/dictate.js"
"Kaljurand/K6nele" -> "alumae/kaldi-gstreamer-server"
"Kaljurand/K6nele" -> "alumae/gst-kaldi-nnet2-online"
"Kaljurand/K6nele" -> "Kaljurand/speechutils"
"Kaljurand/K6nele" -> "alphacep/vosk-android-service"
"SpeechColab/GigaSpeech" -> "k2-fsa/k2"
"SpeechColab/GigaSpeech" -> "cywang97/StreamingTransformer"
"SpeechColab/GigaSpeech" -> "lhotse-speech/lhotse"
"SpeechColab/GigaSpeech" -> "wenet-e2e/speech-recognition-papers"
"SpeechColab/GigaSpeech" -> "SpeechColab/Leaderboard"
"SpeechColab/GigaSpeech" -> "tencent-ailab/pika"
"SpeechColab/GigaSpeech" -> "k2-fsa/icefall"
"SpeechColab/GigaSpeech" -> "speechio/chinese_text_normalization"
"SpeechColab/GigaSpeech" -> "ZhengkunTian/OpenTransformer"
"SpeechColab/GigaSpeech" -> "jctian98/e2e_lfmmi"
"SpeechColab/GigaSpeech" -> "facebookresearch/libri-light"
"SpeechColab/GigaSpeech" -> "HawkAaron/warp-transducer"
"SpeechColab/GigaSpeech" -> "YiwenShaoStephen/pychain"
"SpeechColab/GigaSpeech" -> "csukuangfj/kaldifeat"
"SpeechColab/GigaSpeech" -> "facebookresearch/voxpopuli"
"lkuza2/java-speech-api" -> "cmusphinx/sphinx4"
"lkuza2/java-speech-api" -> "zagum/SpeechRecognitionView"
"julius-speech/julius" -> "julius-speech/dictation-kit"
"julius-speech/julius" -> "cmusphinx/pocketsphinx"
"julius-speech/julius" -> "kaldi-asr/kaldi"
"julius-speech/julius" -> "flashlight/wav2letter"
"julius-speech/julius" -> "julius-speech/segmentation-kit"
"julius-speech/julius" -> "cmusphinx/sphinxbase"
"julius-speech/julius" -> "mmorise/World" ["e"=1]
"julius-speech/julius" -> "alumae/kaldi-gstreamer-server"
"julius-speech/julius" -> "athena-team/athena" ["e"=1]
"julius-speech/julius" -> "srvk/eesen"
"julius-speech/julius" -> "pannous/tensorflow-speech-recognition"
"julius-speech/julius" -> "mozilla/DeepSpeech"
"julius-speech/julius" -> "cmusphinx/sphinx4"
"julius-speech/julius" -> "kan-bayashi/ParallelWaveGAN" ["e"=1]
"julius-speech/julius" -> "zzmp/juliusjs"
"SpeechColab/Leaderboard" -> "speechio/chinese_text_normalization"
"SpeechColab/Leaderboard" -> "SpeechColab/GigaSpeech"
"SpeechColab/Leaderboard" -> "k2-fsa/icefall"
"SpeechColab/Leaderboard" -> "k2-fsa/k2"
"SpeechColab/Leaderboard" -> "thu-spmi/CAT"
"SpeechColab/Leaderboard" -> "csukuangfj/kaldifeat"
"SpeechColab/Leaderboard" -> "speechio/BigCiDian"
"SpeechColab/Leaderboard" -> "wenet-e2e/WenetSpeech"
"SpeechColab/Leaderboard" -> "wenet-e2e/speech-recognition-papers"
"SpeechColab/Leaderboard" -> "Snowdar/asv-subtools" ["e"=1]
"SpeechColab/Leaderboard" -> "ddlBoJack/Speech-Resources" ["e"=1]
"SpeechColab/Leaderboard" -> "double22a/speech_dataset"
"SpeechColab/Leaderboard" -> "jctian98/e2e_lfmmi"
"SpeechColab/Leaderboard" -> "wenet-e2e/wekws"
"SpeechColab/Leaderboard" -> "cywang97/StreamingTransformer"
"sdkcarlos/artyom.js" -> "TalAter/annyang"
"sdkcarlos/artyom.js" -> "TalAter/SpeechKITT"
"sdkcarlos/artyom.js" -> "zzmp/juliusjs"
"sdkcarlos/artyom.js" -> "mcreed/zoombot"
"sdkcarlos/artyom.js" -> "syl22-00/pocketsphinx.js"
"sdkcarlos/artyom.js" -> "Marak/say.js"
"sdkcarlos/artyom.js" -> "sdkcarlos/HoldOn.js"
"sdkcarlos/artyom.js" -> "jimmybyrum/voice-commands.js"
"sdkcarlos/artyom.js" -> "pazguille/voix"
"sdkcarlos/artyom.js" -> "zenorocha/voice-elements"
"sdkcarlos/artyom.js" -> "evancohen/sonus"
"sdkcarlos/artyom.js" -> "mdn/web-speech-api"
"sdkcarlos/artyom.js" -> "kripken/speak.js"
"sdkcarlos/artyom.js" -> "bambocher/pocketsphinx-python"
"sdkcarlos/artyom.js" -> "mattdiamond/Recorderjs" ["e"=1]
"tryolabs/TLSphinx" -> "keenresearch/keenasr-ios-poc"
"tryolabs/TLSphinx" -> "cmusphinx/pocketsphinx-ios-demo"
"tryolabs/TLSphinx" -> "tryolabs/TLFormView"
"hiddentao/google-tts" -> "zlargon/google-tts"
"wonderslug/MMM-HomeAssistantDisplay" -> "Snille/MMM-homeassistant-sensors"
"wonderslug/MMM-HomeAssistantDisplay" -> "aserramonner/MMM-HASS"
"wonderslug/MMM-HomeAssistantDisplay" -> "leinich/MMM-homeassistant-sensors"
"wonderslug/MMM-HomeAssistantDisplay" -> "john3300/MMM-HomeAutomationNotifications"
"wonderslug/MMM-HomeAssistantDisplay" -> "zuo000/MMM-HomeAssistant"
"PantsuDango/DangoOCR" -> "QPT-Family/QPT"
"sunyuqian1997/ghost-on-web" -> "sunyuqian1997/WanderBot_public"
"sunyuqian1997/WanderBot_public" -> "ninetailskim/DodgeFace"
"sunyuqian1997/WanderBot_public" -> "AgentMaker/PaTTA"
"sunyuqian1997/WanderBot_public" -> "AgentMaker/Paddle-Image-Models"
"sunyuqian1997/WanderBot_public" -> "AgentMaker/Paddle-RLBooks"
"sunyuqian1997/WanderBot_public" -> "ninetailskim/PandaFaceGenerator"
"sunyuqian1997/WanderBot_public" -> "AgentMaker/PAPC"
"sunyuqian1997/WanderBot_public" -> "AgentMaker/Paddle-DALL-E"
"sunyuqian1997/WanderBot_public" -> "AgentMaker/Paddle-Custom-Operators"
"sunyuqian1997/WanderBot_public" -> "ninetailskim/GestureRecognitionWithDA"
"sunyuqian1997/WanderBot_public" -> "jhcgt4869/LiHongyi_curriculum_experience"
"sunyuqian1997/WanderBot_public" -> "AgentMaker/Paddle-IMSP"
"sunyuqian1997/WanderBot_public" -> "yeyupiaoling/PaddlePaddle-CrowdNet"
"sunyuqian1997/WanderBot_public" -> "thomas-yanxin/the-eye-knows-the-garbage"
"sunyuqian1997/WanderBot_public" -> "dephrast/botbay"
"sunyuqian1997/WanderBot_public" -> "shadowcz007/AR-lab"
"thomas-yanxin/Cigarette-Detection" -> "thomas-yanxin/garbage_classification"
"jm12138/License_plate_recognition" -> "jm12138/metric_learning_paddle"
"cmusphinx/pocketsphinx-ios-demo" -> "cmusphinx/cmudict-tools"
"kensho-technologies/pyctcdecode" -> "parlance/ctcdecode"
"kensho-technologies/pyctcdecode" -> "lumaku/ctc-segmentation"
"kensho-technologies/pyctcdecode" -> "patrickvonplaten/Wav2Vec2_PyCTCDecode" ["e"=1]
"kensho-technologies/pyctcdecode" -> "k2-fsa/k2"
"kensho-technologies/pyctcdecode" -> "thu-spmi/CAT"
"kensho-technologies/pyctcdecode" -> "k2-fsa/fast_rnnt"
"kensho-technologies/pyctcdecode" -> "k2-fsa/icefall"
"kensho-technologies/pyctcdecode" -> "cywang97/StreamingTransformer"
"kensho-technologies/pyctcdecode" -> "SpeechColab/GigaSpeech"
"kensho-technologies/pyctcdecode" -> "mailong25/self-supervised-speech-recognition"
"kensho-technologies/pyctcdecode" -> "lhotse-speech/lhotse"
"kensho-technologies/pyctcdecode" -> "burchim/EfficientConformer"
"kensho-technologies/pyctcdecode" -> "hirofumi0810/neural_sp"
"kensho-technologies/pyctcdecode" -> "wenet-e2e/speech-recognition-papers"
"kensho-technologies/pyctcdecode" -> "theblackcat102/edgedict"
"AgentMaker/PaTTA" -> "AgentMaker/Paddle-DALL-E"
"AgentMaker/PaTTA" -> "AgentMaker/Paddle-RLBooks"
"AgentMaker/PaTTA" -> "AgentMaker/Paddle-Image-Models"
"AgentMaker/PaTTA" -> "AgentMaker/PAPC"
"AgentMaker/PaTTA" -> "AgentMaker/Paddle-CLIP"
"AgentMaker/PaTTA" -> "AgentMaker/Paddle-Custom-Operators"
"AgentMaker/PaTTA" -> "AgentMaker/PPQI.jl"
"AgentMaker/PaTTA" -> "AgentMaker/Paddle-IMSP"
"AgentMaker/PaTTA" -> "AgentMaker/Paddle-PerceptualSimilarity"
"ARM-software/keyword-transformer" -> "KrishnaDN/Keyword-Transformer"
"ARM-software/keyword-transformer" -> "mashrurmorshed/Torch-KWT"
"ARM-software/keyword-transformer" -> "dobby-seo/Wav2Keyword"
"ARM-software/keyword-transformer" -> "roman-vygon/triplet_loss_kws"
"ARM-software/keyword-transformer" -> "wdjose/keyword-transformer"
"ARM-software/keyword-transformer" -> "harvard-edge/multilingual_kws"
"ARM-software/keyword-transformer" -> "hyperconnect/TC-ResNet"
"ARM-software/keyword-transformer" -> "HolgerBovbjerg/data2vec-KWS"
"ARM-software/keyword-transformer" -> "mrusci/ondevice-learning-kws"
"ARM-software/keyword-transformer" -> "zycv/awesome-keyword-spotting"
"ARM-software/keyword-transformer" -> "Ephrem-ETH/E2E-KWS"
"ARM-software/keyword-transformer" -> "Qualcomm-AI-research/bcresnet"
"robert1ridley/cross-prompt-trait-scoring" -> "doheejin/ProTACT"
"robert1ridley/cross-prompt-trait-scoring" -> "CarryCKW/AES-NPCR"
"ccoreilly/LocalSTT" -> "alphacep/vosk-android-service"
"ccoreilly/LocalSTT" -> "Kaljurand/K6nele-service"
"ccoreilly/LocalSTT" -> "ewheelerinc/LocalSTT"
"ccoreilly/vosk-browser" -> "msqr1/Vosklet"
"ccoreilly/vosk-browser" -> "ccoreilly/LocalSTT"
"ccoreilly/vosk-browser" -> "dtreskunov/tiny-kaldi"
"ccoreilly/vosk-browser" -> "alphacep/vosk"
"firemodels/cfast" -> "firemodels/smv"
"firemodels/cfast" -> "firetools/blenderfds"
"amaas/stanford-ctc" -> "mpezeshki/CTC-Connectionist-Temporal-Classification"
"amaas/stanford-ctc" -> "rakeshvar/rnn_ctc"
"amaas/stanford-ctc" -> "jonrein/tensorflow_CTC_example"
"amaas/stanford-ctc" -> "srvk/eesen"
"amaas/stanford-ctc" -> "igormq/ctc_tensorflow_example"
"amaas/stanford-ctc" -> "zxie/nn"
"amaas/stanford-ctc" -> "rizar/attention-lvcsr"
"amaas/stanford-ctc" -> "yajiemiao/eesen"
"amaas/stanford-ctc" -> "skaae/Lasagne-CTC"
"amaas/stanford-ctc" -> "domerin0/rnn-speech"
"amaas/stanford-ctc" -> "philipperemy/tensorflow-ctc-speech-recognition"
"amaas/stanford-ctc" -> "sherjilozair/ctc"
"amaas/stanford-ctc" -> "shawntan/theano-ctc"
"amaas/stanford-ctc" -> "thomasmesnard/CTC-LSTM"
"seasalt-ai/snowboy" -> "rhasspy/snowboy-seasalt"
"seasalt-ai/snowboy" -> "Thalhammer/snowman"
"seasalt-ai/snowboy" -> "Kitt-AI/snowboy" ["e"=1]
"seasalt-ai/snowboy" -> "Picovoice/porcupine"
"seasalt-ai/snowboy" -> "wenet-e2e/wekws"
"seasalt-ai/snowboy" -> "MycroftAI/mycroft-precise"
"seasalt-ai/snowboy" -> "respeaker/seeed-voicecard" ["e"=1]
"k2-fsa/snowfall" -> "k2-fsa/k2"
"k2-fsa/snowfall" -> "lhotse-speech/lhotse"
"k2-fsa/snowfall" -> "csukuangfj/kaldilm"
"k2-fsa/snowfall" -> "jtrmal/kaldi2020"
"k2-fsa/snowfall" -> "csukuangfj/transducer-loss-benchmarking"
"k2-fsa/snowfall" -> "k2-fsa/icefall"
"csukuangfj/kaldilm" -> "csukuangfj/kaldi_native_io"
"tencent-ailab/pika" -> "cywang97/StreamingTransformer"
"tencent-ailab/pika" -> "1ytic/warp-rnnt"
"tencent-ailab/pika" -> "wenet-e2e/speech-recognition-papers"
"tencent-ailab/pika" -> "thu-spmi/CAT"
"tencent-ailab/pika" -> "ZhengkunTian/OpenTransformer"
"tencent-ailab/pika" -> "hirofumi0810/neural_sp"
"tencent-ailab/pika" -> "k2-fsa/k2"
"tencent-ailab/pika" -> "HawkAaron/warp-transducer"
"tencent-ailab/pika" -> "aishell-foundation/DaCiDian"
"tencent-ailab/pika" -> "YiwenShaoStephen/pychain"
"tencent-ailab/pika" -> "SpeechColab/GigaSpeech"
"tencent-ailab/pika" -> "XiaoMi/kaldi-onnx"
"tencent-ailab/pika" -> "athena-team/athena" ["e"=1]
"tencent-ailab/pika" -> "k2-fsa/fast_rnnt"
"tencent-ailab/pika" -> "k2-fsa/snowfall"
"thomas-yanxin/Mural-Gan" -> "thomas-yanxin/wechat-living-bot"
"thomas-yanxin/Mural-Gan" -> "thomas-yanxin/Intelligent-retail-product-identification"
"thomas-yanxin/Mural-Gan" -> "thomas-yanxin/AItrainer"
"cursorless-dev/cursorless-talon" -> "chaosparrot/talon_hud"
"cursorless-dev/cursorless-talon" -> "david-tejada/rango-talon"
"cursorless-dev/cursorless-talon" -> "david-tejada/rango"
"cursorless-dev/cursorless-talon" -> "splondike/talon_ui_helper"
"cursorless-dev/cursorless-talon" -> "wolfmanstout/talon-gaze-ocr"
"cursorless-dev/cursorless-talon" -> "chaosparrot/parrot.py"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/Paddle-DALL-E"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/Paddle-IMSP"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/PAPC"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/PPQI.jl"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/Paddle-Custom-Operators"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/Paddle-PerceptualSimilarity"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/Paddle-RLBooks"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/PaTTA"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/Paddle-Image-Models"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/PaddleQuickInference"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/Paddle-Adversarial-Toolbox"
"AgentMaker/Paddle-CLIP" -> "AgentMaker/Paddle-NEAT"
"ottokart/punctuator" -> "alpoktem/punkProse"
"ottokart/punctuator" -> "vackosar/keras-punctuator"
"ottokart/punctuator" -> "ottokart/sequence-labeler"
"ottokart/punctuator" -> "kaituoxu/X-Punctuator"
"ottokart/punctuator" -> "geyang/deep-auto-punctuation"
"ottokart/punctuator" -> "ottokart/punctuator2"
"ottokart/punctuator" -> "MenNianShi/PunctuationPrediction-BERT"
"chaosparrot/talon_hud" -> "wolfmanstout/talon-gaze-ocr"
"chaosparrot/talon_hud" -> "phillco/talon-axkit"
"chaosparrot/talon_hud" -> "splondike/talon_ui_helper"
"chaosparrot/talon_hud" -> "AndreasArvidsson/andreas-talon"
"chaosparrot/talon_hud" -> "C-Loftus/talon-ai-tools"
"chaosparrot/talon_hud" -> "cursorless-dev/cursorless-talon"
"chaosparrot/talon_hud" -> "david-tejada/rango-talon"
"chaosparrot/talon_hud" -> "david-tejada/rango"
"chaosparrot/talon_hud" -> "tararoys/dense-mouse-grid"
"HighCWu/anime_biggan_toy" -> "ITerydh/PaddlePaddle-Python-Zero-Based"
"HighCWu/anime_biggan_toy" -> "AgentMaker/Paddle-IMSP"
"HighCWu/anime_biggan_toy" -> "AgentMaker/Paddle-Custom-Operators"
"HighCWu/anime_biggan_toy" -> "ninetailskim/DodgeFace-EXQver"
"HighCWu/anime_biggan_toy" -> "wobushihuair/paddlepaddle_project"
"HighCWu/anime_biggan_toy" -> "AgentMaker/Paddle-PerceptualSimilarity"
"HighCWu/anime_biggan_toy" -> "jm12138/deep_sort_paddle"
"HighCWu/anime_biggan_toy" -> "ninetailskim/EXQ_IndonesiaVer"
"HighCWu/anime_biggan_toy" -> "ninetailskim/PandaFaceGenerator"
"HighCWu/anime_biggan_toy" -> "jm12138/CPM-Generate-Paddle"
"HighCWu/anime_biggan_toy" -> "ninetailskim/GestureRecognitionWithDA"
"HighCWu/anime_biggan_toy" -> "HighCWu/denoising-diffusion-paddle"
"HighCWu/anime_biggan_toy" -> "jm12138/metric_learning_paddle"
"HighCWu/anime_biggan_toy" -> "HighCWu/stylegan2-pytorch2paddle"
"HighCWu/anime_biggan_toy" -> "AgentMaker/PPQI.jl"
"double22a/speech_dataset" -> "ddlBoJack/Speech-Resources" ["e"=1]
"double22a/speech_dataset" -> "wenet-e2e/wekws"
"double22a/speech_dataset" -> "wenet-e2e/speech-recognition-papers"
"double22a/speech_dataset" -> "SpeechColab/Leaderboard"
"double22a/speech_dataset" -> "wenet-e2e/wespeaker" ["e"=1]
"double22a/speech_dataset" -> "thu-spmi/CAT"
"double22a/speech_dataset" -> "Snowdar/asv-subtools" ["e"=1]
"double22a/speech_dataset" -> "wenet-e2e/WenetSpeech"
"double22a/speech_dataset" -> "ddlBoJack/Awesome-Speech-Pretraining" ["e"=1]
"double22a/speech_dataset" -> "TencentGameMate/chinese_speech_pretrain" ["e"=1]
"double22a/speech_dataset" -> "speechio/chinese_text_normalization"
"double22a/speech_dataset" -> "wenet-e2e/WeTextProcessing" ["e"=1]
"double22a/speech_dataset" -> "csukuangfj/kaldifeat"
"double22a/speech_dataset" -> "SpeechColab/GigaSpeech"
"double22a/speech_dataset" -> "double22a/asr_nlp_paper_code"
"GuoQuanhao/arcface-Paddle" -> "GuoQuanhao/PaddlePaddle-basic-tutorial"
"GuoQuanhao/arcface-Paddle" -> "GuoQuanhao/PortraitNet-Paddle"
"GuoQuanhao/arcface-Paddle" -> "GuoQuanhao/fcanet-Paddle"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/PAPC"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/Paddle-DALL-E"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/PaTTA"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/Paddle-Image-Models"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/Paddle-Custom-Operators"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/Paddle-CLIP"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/Paddle-IMSP"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/PPQI.jl"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/Paddle-PerceptualSimilarity"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/Paddle-Adversarial-Toolbox"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/PaddleQuickInference"
"AgentMaker/Paddle-RLBooks" -> "AgentMaker/RIFLE_Module"
"AgentMaker/Paddle-RLBooks" -> "ninetailskim/DodgeFace"
"ninetailskim/PaddleEGT" -> "ninetailskim/FlappyPaddle"
"mashrurmorshed/Torch-KWT" -> "isadrtdinov/kws-attention"
"mashrurmorshed/Torch-KWT" -> "AI-Research-BD/Keyword-MLP"
"sviperm/neuro-comma" -> "vlomme/Bert-Russian-punctuation"
"shadowcz007/AR-lab" -> "sunyuqian1997/WanderBot_public"
"shadowcz007/AR-lab" -> "Siriuscy/MIXLAB_NASA_TICKET"
"shadowcz007/AR-lab" -> "sunyuqian1997/ghost-on-web"
"cageyoko/CTC-Attention-Mispronunciation" -> "vocaliodmiku/wav2vec2mdd"
"cageyoko/CTC-Attention-Mispronunciation" -> "vocaliodmiku/wav2vec2mdd-Text"
"cageyoko/CTC-Attention-Mispronunciation" -> "Mu-Y/mpl-mdd"
"vocaliodmiku/wav2vec2mdd" -> "cageyoko/CTC-Attention-Mispronunciation"
"vocaliodmiku/wav2vec2mdd" -> "MarceloSancinetti/epa-gop-pykaldi"
"vocaliodmiku/wav2vec2mdd" -> "Mu-Y/mpl-mdd"
"vocaliodmiku/wav2vec2mdd" -> "vocaliodmiku/wav2vec2mdd-Text"
"jm12138/CPM-Generate-Paddle" -> "jm12138/metric_learning_paddle"
"jm12138/CPM-Generate-Paddle" -> "jm12138/SkyAR_Paddle_GUI"
"jm12138/CPM-Generate-Paddle" -> "zbp-xxxp/meaningfulModuleOfAI"
"jm12138/CPM-Generate-Paddle" -> "AgentMaker/PPQI.jl"
"jm12138/CPM-Generate-Paddle" -> "wobushihuair/paddlepaddle_project"
"jm12138/CPM-Generate-Paddle" -> "AgentMaker/Paddle-IMSP"
"jm12138/CPM-Generate-Paddle" -> "AgentMaker/Paddle-Custom-Operators"
"jm12138/CPM-Generate-Paddle" -> "zbp-xxxp/reading_pictures_writing_poems"
"jm12138/CPM-Generate-Paddle" -> "ITerydh/PaddlePaddle-Python-Zero-Based"
"jm12138/CPM-Generate-Paddle" -> "jm12138/deep_sort_paddle"
"jm12138/CPM-Generate-Paddle" -> "AgentMaker/Paddle-DALL-E"
"jm12138/CPM-Generate-Paddle" -> "GuoQuanhao/PaddlePaddle-basic-tutorial"
"jm12138/CPM-Generate-Paddle" -> "ninetailskim/EXQ_IndonesiaVer"
"AndreasArvidsson/andreas-talon" -> "wolfmanstout/talon-gaze-ocr"
"AndreasArvidsson/andreas-talon" -> "david-tejada/rango"
"AndreasArvidsson/andreas-talon" -> "AndreasArvidsson/andreas-talon-vscode"
"AndreasArvidsson/andreas-talon" -> "chaosparrot/talon_hud"
"AndreasArvidsson/andreas-talon" -> "phillco/talon-axkit"
"AndreasArvidsson/andreas-talon" -> "splondike/talon_ui_helper"
"AndreasArvidsson/andreas-talon" -> "AndrewDant/screen-spots"
"AndreasArvidsson/andreas-talon" -> "pokey/pokey_talon"
"AndreasArvidsson/andreas-talon" -> "C-Loftus/talon-ai-tools"
"kevinfu1717/multimediaChatbot" -> "AgentMaker/PPQI.jl"
"attilanagy234/neural-punctuator" -> "karanmakhija867/bert_punct"
"jm12138/deep_sort_paddle" -> "jm12138/metric_learning_paddle"
"jm12138/deep_sort_paddle" -> "AgentMaker/PPQI.jl"
"jm12138/deep_sort_paddle" -> "jm12138/SkyAR_Paddle_GUI"
"jm12138/deep_sort_paddle" -> "zbp-xxxp/meaningfulModuleOfAI"
"jm12138/deep_sort_paddle" -> "ITerydh/PaddlePaddle-Python-Zero-Based"
"jm12138/deep_sort_paddle" -> "ninetailskim/DodgeFace-EXQver"
"jm12138/deep_sort_paddle" -> "AgentMaker/Paddle-IMSP"
"jm12138/deep_sort_paddle" -> "AgentMaker/Paddle-Custom-Operators"
"roman-vygon/triplet_loss_kws" -> "dobby-seo/Wav2Keyword"
"roman-vygon/triplet_loss_kws" -> "ArchitParnami/Few-Shot-KWS"
"roman-vygon/triplet_loss_kws" -> "zycv/awesome-keyword-spotting"
"roman-vygon/triplet_loss_kws" -> "ARM-software/keyword-transformer"
"roman-vygon/triplet_loss_kws" -> "re9ulus/BC-ResNet"
"roman-vygon/triplet_loss_kws" -> "harvard-edge/multilingual_kws"
"roman-vygon/triplet_loss_kws" -> "HolgerBovbjerg/data2vec-KWS"
"roman-vygon/triplet_loss_kws" -> "lilianemomeni/KWS-Net"
"roman-vygon/triplet_loss_kws" -> "qute012/Pytorch-MHAtt-RNN-KWS"
"roman-vygon/triplet_loss_kws" -> "jingyonghou/KWS_Max-pooling_RHE"
"FireDynamics/LectureFireSimulation" -> "FireDynamics/propti"
"srvk/lm_build" -> "gooofy/kaldi-adapt-lm"
"rwth-i6/i6_core" -> "rwth-i6/i6_experiments"
"rwth-i6/i6_experiments" -> "rwth-i6/i6_core"
"oliverguhr/fullstop-deep-punctuation-prediction" -> "xashru/punctuation-restoration"
"oliverguhr/fullstop-deep-punctuation-prediction" -> "oliverguhr/deepmultilingualpunctuation"
"mpezeshki/CTC-Connectionist-Temporal-Classification" -> "sherjilozair/ctc"
"mpezeshki/CTC-Connectionist-Temporal-Classification" -> "skaae/Lasagne-CTC"
"mpezeshki/CTC-Connectionist-Temporal-Classification" -> "shawntan/theano-ctc"
"mpezeshki/CTC-Connectionist-Temporal-Classification" -> "amaas/stanford-ctc"
"mpezeshki/CTC-Connectionist-Temporal-Classification" -> "rakeshvar/rnn_ctc"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/PaTTA"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/Paddle-RLBooks"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/Paddle-DALL-E"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/PAPC"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/Paddle-CLIP"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/Paddle-Custom-Operators"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/Paddle-IMSP"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/PPQI.jl"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/Paddle-PerceptualSimilarity"
"AgentMaker/Paddle-Image-Models" -> "ninetailskim/DodgeFace"
"AgentMaker/Paddle-Image-Models" -> "ninetailskim/PandaFaceGenerator"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/Paddle-Adversarial-Toolbox"
"AgentMaker/Paddle-Image-Models" -> "AgentMaker/PaddleQuickInference"
"alphacep/vosk-android-service" -> "ewheelerinc/LocalSTT"
"alphacep/vosk-android-service" -> "ccoreilly/LocalSTT"
"WhiteFireFox/paddleseg-tutorial" -> "WhiteFireFox/paddle-gesture-recognition"
"jhcgt4869/LiHongyi_curriculum_experience" -> "jhcgt4869/Unpaired_Probability_Prediction_The_first_ten"
"miemie2013/Paddle-SOLOv2" -> "miemie2013/Paddle-PPYOLO"
"miemie2013/Paddle-SOLOv2" -> "ZMpursue/PaddleColorization"
"ZMpursue/DCGANfakeface" -> "ZMpursue/PaddleColorization"
"ZMpursue/DCGANfakeface" -> "ZMpursue/Anime_avatar_generation"
"chajadan/DragonflyRules" -> "chajadan/dragonfluid"
"Picovoice/browser-extension" -> "Picovoice/speech-to-intent-benchmark"
"Kirili4ik/kws-attention-pytorch" -> "isadrtdinov/kws-attention"
"isadrtdinov/kws-attention" -> "Kirili4ik/kws-attention-pytorch"
"AgentMaker/Paddle-Adversarial-Toolbox" -> "AgentMaker/Paddle-NEAT"
"AgentMaker/Paddle-Adversarial-Toolbox" -> "AgentMaker/PPQI.jl"
"biemster/gasr" -> "biemster/gtts"
"biemster/gasr" -> "AIFanatic/google-offline-speech-recognition"
"biemster/gasr" -> "biemster/asr"
"AgentMaker/Paddle-PerceptualSimilarity" -> "AgentMaker/Paddle-IMSP"
"AgentMaker/Paddle-PerceptualSimilarity" -> "AgentMaker/Paddle-Custom-Operators"
"AgentMaker/Paddle-PerceptualSimilarity" -> "AgentMaker/PPQI.jl"
"ninetailskim/DodgeFace" -> "ninetailskim/PandaFaceGenerator"
"ninetailskim/DodgeFace" -> "ninetailskim/DodgeFace-EXQver"
"ninetailskim/DodgeFace" -> "ninetailskim/EXQ_IndonesiaVer"
"ninetailskim/DodgeFace" -> "AgentMaker/Paddle-Image-Models"
"ninetailskim/DodgeFace" -> "AgentMaker/PaTTA"
"ninetailskim/DodgeFace" -> "AgentMaker/Paddle-RLBooks"
"ninetailskim/DodgeFace" -> "AgentMaker/Paddle-Custom-Operators"
"ninetailskim/DodgeFace" -> "AgentMaker/Paddle-DALL-E"
"ninetailskim/DodgeFace" -> "ninetailskim/GestureRecognitionWithDA"
"ninetailskim/DodgeFace" -> "AgentMaker/Paddle-IMSP"
"ninetailskim/DodgeFace" -> "AgentMaker/Paddle-CLIP"
"ninetailskim/DodgeFace" -> "AgentMaker/PAPC"
"ninetailskim/DodgeFace" -> "yeyupiaoling/PaddlePaddle-CrowdNet"
"ninetailskim/DodgeFace" -> "1084667371/ExtractLine"
"ninetailskim/DodgeFace" -> "jhcgt4869/LiHongyi_curriculum_experience"
"biemster/gtts" -> "biemster/gasr"
"TeaPoly/CTC-OptimizedLoss" -> "chenjiasheng/mwer"
"TeaPoly/CTC-OptimizedLoss" -> "TeaPoly/CE-OptimizedLoss"
"thomas-yanxin/fatigue-detection" -> "thomas-yanxin/Intelligent-retail-product-identification"
"thomas-yanxin/fatigue-detection" -> "thomas-yanxin/mask_test"
"thomas-yanxin/fatigue-detection" -> "thomas-yanxin/wechat-living-bot"
"ITerydh/paddle" -> "ITerydh/PaddlePaddle-Python-Zero-Based"
"ninetailskim/PandaFaceGenerator" -> "ninetailskim/DodgeFace-EXQver"
"ninetailskim/PandaFaceGenerator" -> "ninetailskim/EXQ_IndonesiaVer"
"ninetailskim/PandaFaceGenerator" -> "ninetailskim/GestureRecognitionWithDA"
"1084667371/ExtractLine" -> "Bug-terminator/Nachos" ["e"=1]
"1084667371/ExtractLine" -> "Allen0828/GPUImage2-Swift" ["e"=1]
"1084667371/ExtractLine" -> "liyang-it/wyy" ["e"=1]
"AgentMaker/PaddleQuickInference" -> "AgentMaker/Paddle-Adversarial-Toolbox"
"AgentMaker/PaddleQuickInference" -> "AgentMaker/Paddle-NEAT"
"AgentMaker/PaddleQuickInference" -> "AgentMaker/PPQI.jl"
"AgentMaker/PaddleQuickInference" -> "AgentMaker/Paddle-IMSP"
"AgentMaker/PaddleQuickInference" -> "AgentMaker/Paddle-Custom-Operators"
"AgentMaker/PaddleQuickInference" -> "AgentMaker/RIFLE_Module"
"AgentMaker/PaddleQuickInference" -> "AgentMaker/Paddle-DALL-E"
"AgentMaker/PaddleQuickInference" -> "AgentMaker/Pavlov"
"AgentMaker/Paddle-SEQ" -> "AgentMaker/Paddle-NEAT"
"AgentMaker/Paddle-SEQ" -> "AgentMaker/Paddle-Adversarial-Toolbox"
"thomas-yanxin/wechat-living-bot" -> "thomas-yanxin/Intelligent-retail-product-identification"
"AgentMaker/Paddle-IMSP" -> "AgentMaker/Paddle-Custom-Operators"
"AgentMaker/Paddle-IMSP" -> "AgentMaker/PPQI.jl"
"AgentMaker/Paddle-IMSP" -> "AgentMaker/Paddle-PerceptualSimilarity"
"AgentMaker/Paddle-IMSP" -> "AgentMaker/Paddle-DALL-E"
"jm12138/SkyAR_Paddle_GUI" -> "jm12138/metric_learning_paddle"
"jm12138/SkyAR_Paddle_GUI" -> "GuoQuanhao/PaddlePaddle-basic-tutorial"
"AgentMaker/Pavlov" -> "AgentMaker/PaddleMeta"
"AgentMaker/Pavlov" -> "AgentMaker/Paddle-NEAT"
"AgentMaker/RIFLE_Module" -> "AgentMaker/Paddle-NEAT"
"AgentMaker/RIFLE_Module" -> "AgentMaker/Pavlov"
"AgentMaker/RIFLE_Module" -> "AgentMaker/Paddle-Custom-Operators"
"AgentMaker/RIFLE_Module" -> "AgentMaker/Paddle-Adversarial-Toolbox"
"AgentMaker/RIFLE_Module" -> "AgentMaker/PaddleQuickInference"
"AgentMaker/Paddle-NEAT" -> "AgentMaker/Paddle-Adversarial-Toolbox"
"AgentMaker/Paddle-Custom-Operators" -> "AgentMaker/Paddle-IMSP"
"AgentMaker/Paddle-Custom-Operators" -> "AgentMaker/PPQI.jl"
"AgentMaker/Paddle-Custom-Operators" -> "AgentMaker/Paddle-PerceptualSimilarity"
"AgentMaker/Paddle-Custom-Operators" -> "AgentMaker/Paddle-DALL-E"
"AgentMaker/Paddle-DALL-E" -> "AgentMaker/Paddle-IMSP"
"AgentMaker/Paddle-DALL-E" -> "AgentMaker/Paddle-Custom-Operators"
"AgentMaker/Paddle-DALL-E" -> "AgentMaker/PPQI.jl"
"AgentMaker/Paddle-DALL-E" -> "AgentMaker/PAPC"
"AgentMaker/Paddle-DALL-E" -> "AgentMaker/Paddle-PerceptualSimilarity"
"AgentMaker/Paddle-DALL-E" -> "AgentMaker/Paddle-CLIP"
"AgentMaker/PaddleMeta" -> "AgentMaker/Pavlov"
"AgentMaker/PPQI.jl" -> "AgentMaker/Paddle-IMSP"
"AgentMaker/PPQI.jl" -> "AgentMaker/Paddle-Custom-Operators"
"Interlagos/TENet-kws" -> "qute012/Pytorch-MHAtt-RNN-KWS"
"VoiceCode/docs-DEPRECATED" -> "pimentel/voicecode_directory"
"leigangblog/Paddlehub_wechaty" -> "leigangblog/AI_Tools"
"leigangblog/Paddlehub_wechaty" -> "wobushihuair/paddlepaddle_project"
"ninetailskim/EXQ_IndonesiaVer" -> "ninetailskim/GestureRecognitionWithDA"
"ninetailskim/EXQ_IndonesiaVer" -> "ninetailskim/DodgeFace-EXQver"
"ninetailskim/DodgeFace-EXQver" -> "ninetailskim/EXQ_IndonesiaVer"
"ninetailskim/DodgeFace-EXQver" -> "ninetailskim/GestureRecognitionWithDA"
"ninetailskim/DodgeFace-EXQver" -> "ninetailskim/PandaFaceGenerator"
"ninetailskim/GestureRecognitionWithDA" -> "ninetailskim/EXQ_IndonesiaVer"
"ninetailskim/GestureRecognitionWithDA" -> "ninetailskim/DodgeFace-EXQver"
"LCF2764/autoKWS2021_1st_solution" -> "janson9192/autokws2021"
"HighCWu/stylegan2-pytorch2paddle" -> "HighCWu/ddim"
"HighCWu/stylegan2-pytorch2paddle" -> "HighCWu/denoising-diffusion-paddle"
"HighCWu/stylegan2-pytorch2paddle" -> "GuoQuanhao/fcanet-Paddle"
"janson9192/autokws2021" -> "LCF2764/autoKWS2021_1st_solution"
"thomas-yanxin/Intelligent-retail-product-identification" -> "thomas-yanxin/wechat-living-bot"
"k2-fsa/sherpa" -> "k2-fsa/icefall"
"k2-fsa/sherpa" -> "k2-fsa/k2"
"k2-fsa/sherpa" -> "k2-fsa/sherpa-ncnn"
"k2-fsa/sherpa" -> "lhotse-speech/lhotse"
"k2-fsa/sherpa" -> "k2-fsa/snowfall"
"k2-fsa/sherpa" -> "csukuangfj/kaldifeat"
"k2-fsa/sherpa" -> "k2-fsa/sherpa-onnx" ["e"=1]
"k2-fsa/sherpa" -> "wenet-e2e/speech-recognition-papers"
"k2-fsa/sherpa" -> "SpeechColab/Leaderboard"
"k2-fsa/sherpa" -> "thu-spmi/CAT"
"k2-fsa/sherpa" -> "wenet-e2e/wekws"
"k2-fsa/sherpa" -> "kensho-technologies/pyctcdecode"
"k2-fsa/sherpa" -> "k2-fsa/fast_rnnt"
"k2-fsa/sherpa" -> "wenet-e2e/wespeaker" ["e"=1]
"k2-fsa/sherpa" -> "speechio/chinese_text_normalization"
"evancohen/smart-mirror" -> "HannahMitt/HomeMirror" ["e"=1]
"evancohen/smart-mirror" -> "MagicMirrorOrg/MagicMirror" ["e"=1]
"evancohen/smart-mirror" -> "MicrosoftEdge/magic-mirror-demo"
"evancohen/smart-mirror" -> "maxbbraun/mirror"
"evancohen/smart-mirror" -> "TalAter/annyang"
"evancohen/smart-mirror" -> "HackerShackOfficial/AI-Smart-Mirror"
"evancohen/smart-mirror" -> "HackerShackOfficial/Smart-Mirror"
"evancohen/smart-mirror" -> "Shinao/SmartMirror"
"evancohen/smart-mirror" -> "evancohen/sonus"
"evancohen/smart-mirror" -> "alexa/alexa-avs-sample-app" ["e"=1]
"evancohen/smart-mirror" -> "ctrlaltdylan/MirrorMirror"
"evancohen/smart-mirror" -> "Jopyth/MMM-Remote-Control"
"evancohen/smart-mirror" -> "thibmaek/awesome-raspberry-pi" ["e"=1]
"evancohen/smart-mirror" -> "s6joui/MirrorOS"
"evancohen/smart-mirror" -> "shivasiddharth/GassistPi" ["e"=1]
"NielsMasdorp/Speculum-Android" -> "ineptech/mirror"
"NielsMasdorp/Speculum-Android" -> "hitherejoe/AndroidTvBoilerplate" ["e"=1]
"NielsMasdorp/Speculum-Android" -> "maxbbraun/mirror"
"NielsMasdorp/Speculum-Android" -> "ziem/android-development-blogs" ["e"=1]
"mdn/web-speech-api" -> "googlearchive/webplatform-samples"
"mdn/web-speech-api" -> "TalAter/annyang"
"mdn/web-speech-api" -> "syl22-00/pocketsphinx.js"
"mdn/web-speech-api" -> "girliemac/web-speech-ai"
"mdn/web-speech-api" -> "sdkcarlos/artyom.js"
"mdn/web-speech-api" -> "mdn/webaudio-examples" ["e"=1]
"mdn/web-speech-api" -> "mdn/voice-change-o-matic" ["e"=1]
"mdn/web-speech-api" -> "kripken/speak.js"
"mdn/web-speech-api" -> "dialogflow/dialogflow-javascript-client" ["e"=1]
"mdn/web-speech-api" -> "googleapis/nodejs-speech"
"mdn/web-speech-api" -> "mattdiamond/Recorderjs" ["e"=1]
"mdn/web-speech-api" -> "chris-rudmin/opus-recorder" ["e"=1]
"mdn/web-speech-api" -> "mdn/dom-examples" ["e"=1]
"mdn/web-speech-api" -> "mdn/web-components-examples" ["e"=1]
"mdn/web-speech-api" -> "ml5js/ml5-library" ["e"=1]
"ctrlaltdylan/MirrorMirror" -> "evancohen/smart-mirror"
"TalAter/SpeechKITT" -> "TalAter/annyang"
"TalAter/SpeechKITT" -> "sdkcarlos/artyom.js"
"RapidAI/RapidASR" -> "chenkui164/FastASR"
"RapidAI/RapidASR" -> "yeyupiaoling/PPASR"
"RapidAI/RapidASR" -> "yeyupiaoling/PunctuationModel"
"RapidAI/RapidASR" -> "wenet-e2e/WeTextProcessing" ["e"=1]
"RapidAI/RapidASR" -> "wenet-e2e/WenetSpeech"
"RapidAI/RapidASR" -> "k2-fsa/sherpa-ncnn"
"RapidAI/RapidASR" -> "Tele-AI/TeleSpeech-ASR" ["e"=1]
"RapidAI/RapidASR" -> "double22a/speech_dataset"
"RapidAI/RapidASR" -> "RapidAI/RapidPunc"
"RapidAI/RapidASR" -> "thu-spmi/CAT"
"RapidAI/RapidASR" -> "Tzenthin/wenet_mnn"
"RapidAI/RapidASR" -> "XiaoMi/kaldi-onnx"
"RapidAI/RapidASR" -> "yeyupiaoling/MASR"
"RapidAI/RapidASR" -> "lovemefan/fsmn-vad" ["e"=1]
"RapidAI/RapidASR" -> "wenet-e2e/wenet"
"syhw/wer_are_we" -> "srvk/eesen"
"syhw/wer_are_we" -> "mravanelli/pytorch-kaldi"
"syhw/wer_are_we" -> "k2-fsa/k2"
"syhw/wer_are_we" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"syhw/wer_are_we" -> "SeanNaren/deepspeech.pytorch"
"syhw/wer_are_we" -> "lhotse-speech/lhotse"
"syhw/wer_are_we" -> "flashlight/wav2letter"
"syhw/wer_are_we" -> "pykaldi/pykaldi"
"syhw/wer_are_we" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"syhw/wer_are_we" -> "coqui-ai/open-speech-corpora" ["e"=1]
"syhw/wer_are_we" -> "SpeechColab/GigaSpeech"
"syhw/wer_are_we" -> "hirofumi0810/neural_sp"
"syhw/wer_are_we" -> "espnet/espnet"
"syhw/wer_are_we" -> "freewym/espresso"
"syhw/wer_are_we" -> "awni/speech"
"wenet-e2e/wekws" -> "zycv/awesome-keyword-spotting"
"wenet-e2e/wekws" -> "modelscope/kws-training-suite"
"wenet-e2e/wekws" -> "chenyangMl/keyword-spot"
"wenet-e2e/wekws" -> "k2-fsa/k2"
"wenet-e2e/wekws" -> "mindorii/kws"
"wenet-e2e/wekws" -> "wenet-e2e/wespeaker" ["e"=1]
"wenet-e2e/wekws" -> "hyperconnect/TC-ResNet"
"wenet-e2e/wekws" -> "k2-fsa/icefall"
"wenet-e2e/wekws" -> "dobby-seo/Wav2Keyword"
"wenet-e2e/wekws" -> "wenet-e2e/speech-recognition-papers"
"wenet-e2e/wekws" -> "colinsongf/keyword_spotting"
"wenet-e2e/wekws" -> "harvard-edge/multilingual_kws"
"wenet-e2e/wekws" -> "wenet-e2e/wenet"
"wenet-e2e/wekws" -> "Snowdar/asv-subtools" ["e"=1]
"wenet-e2e/wekws" -> "DavidDiazGuerra/gpuRIR" ["e"=1]
"thomas-yanxin/ColugoMum" -> "thomas-yanxin/the-eye-knows-the-garbage"
"thomas-yanxin/ColugoMum" -> "thomas-yanxin/AItrainer"
"thomas-yanxin/ColugoMum" -> "thomas-yanxin/Cigarette-Detection"
"thomas-yanxin/ColugoMum" -> "thomas-yanxin/garbage_classification"
"thomas-yanxin/ColugoMum" -> "thomas-yanxin/wechat-living-bot"
"thomas-yanxin/ColugoMum" -> "thomas-yanxin/Intelligent-retail-product-identification"
"thomas-yanxin/ColugoMum" -> "thomas-yanxin/Mural-Gan"
"thomas-yanxin/ColugoMum" -> "thomas-yanxin/Garbage-test"
"thomas-yanxin/ColugoMum" -> "ninetailskim/DodgeFace-EXQver"
"thomas-yanxin/ColugoMum" -> "ninetailskim/PandaFaceGenerator"
"thomas-yanxin/ColugoMum" -> "ColugoMum/Smart_container"
"thomas-yanxin/ColugoMum" -> "jhcgt4869/Unpaired_Probability_Prediction_The_first_ten"
"thomas-yanxin/ColugoMum" -> "ninetailskim/PaddleEGT"
"thomas-yanxin/ColugoMum" -> "AgentMaker/Paddle-Image-Models"
"thomas-yanxin/ColugoMum" -> "ninetailskim/DodgeFace"
"pannous/tensorflow-speech-recognition" -> "zzw922cn/Automatic_Speech_Recognition"
"pannous/tensorflow-speech-recognition" -> "buriburisuri/speech-to-text-wavenet" ["e"=1]
"pannous/tensorflow-speech-recognition" -> "pannous/caffe-speech-recognition"
"pannous/tensorflow-speech-recognition" -> "llSourcell/tensorflow_speech_recognition_demo"
"pannous/tensorflow-speech-recognition" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"pannous/tensorflow-speech-recognition" -> "jameslyons/python_speech_features"
"pannous/tensorflow-speech-recognition" -> "srvk/eesen"
"pannous/tensorflow-speech-recognition" -> "SeanNaren/deepspeech.pytorch"
"pannous/tensorflow-speech-recognition" -> "ibab/tensorflow-wavenet" ["e"=1]
"pannous/tensorflow-speech-recognition" -> "baidu-research/warp-ctc" ["e"=1]
"pannous/tensorflow-speech-recognition" -> "baidu-research/ba-dls-deepspeech"
"pannous/tensorflow-speech-recognition" -> "ppwwyyxx/speaker-recognition" ["e"=1]
"pannous/tensorflow-speech-recognition" -> "Uberi/speech_recognition"
"pannous/tensorflow-speech-recognition" -> "cmusphinx/g2p-seq2seq"
"pannous/tensorflow-speech-recognition" -> "syhw/wer_are_we"
"thomas-yanxin/Useful_Information" -> "thomas-yanxin/Intelligent-retail-product-identification"
"YuanGongND/gopt" -> "jimbozhang/speechocean762"
"YuanGongND/gopt" -> "tzyll/goparrot"
"YuanGongND/gopt" -> "doheejin/HiPAMA"
"YuanGongND/gopt" -> "MarceloSancinetti/epa-gop-pykaldi"
"YuanGongND/gopt" -> "sweekarsud/Goodness-of-Pronunciation"
"YuanGongND/gopt" -> "ai-zahran/E2E-R"
"YuanGongND/gopt" -> "doheejin/SB_loss_PA"
"YuanGongND/gopt" -> "jimbozhang/kaldi-gop"
"YuanGongND/gopt" -> "JazminVidal/gop-dnn-epadb"
"YuanGongND/gopt" -> "vocaliodmiku/wav2vec2mdd"
"YuanGongND/gopt" -> "cageyoko/CTC-Attention-Mispronunciation"
"YuanGongND/gopt" -> "rhss10/joint-apa-mdd-mtl"
"Thiagohgl/ai-pronunciation-trainer" -> "huytd/speech"
"Thiagohgl/ai-pronunciation-trainer" -> "jimbozhang/speechocean762"
"Thiagohgl/ai-pronunciation-trainer" -> "YuanGongND/gopt"
"Thiagohgl/ai-pronunciation-trainer" -> "rudder-analytics/Goodness-of-Pronounciation"
"Thiagohgl/ai-pronunciation-trainer" -> "yuwchen/MultiPA"
"Thiagohgl/ai-pronunciation-trainer" -> "ai-zahran/E2E-R"
"jctian98/e2e_lfmmi" -> "tencent-ailab/3m-asr"
"jctian98/e2e_lfmmi" -> "Slyne/ctc_decoder" ["e"=1]
"jctian98/e2e_lfmmi" -> "cywang97/StreamingTransformer"
"jctian98/e2e_lfmmi" -> "thu-spmi/CAT"
"jctian98/e2e_lfmmi" -> "snsun/kaldi-decoder-code-reading"
"jctian98/e2e_lfmmi" -> "1ytic/warp-rnnt"
"jctian98/e2e_lfmmi" -> "speechio/BigCiDian"
"jctian98/e2e_lfmmi" -> "wenet-e2e/speech-recognition-papers"
"Ant-Brain/EfficientWord-Net" -> "castorini/howl"
"Ant-Brain/EfficientWord-Net" -> "harvard-edge/multilingual_kws"
"Ant-Brain/EfficientWord-Net" -> "zycv/awesome-keyword-spotting"
"Ant-Brain/EfficientWord-Net" -> "Thalhammer/snowman"
"kssteven418/Squeezeformer" -> "upskyy/Squeezeformer"
"kssteven418/Squeezeformer" -> "burchim/EfficientConformer"
"kssteven418/Squeezeformer" -> "1ytic/warp-rnnt"
"kssteven418/Squeezeformer" -> "kssteven418/Q-ASR" ["e"=1]
"kssteven418/Squeezeformer" -> "jctian98/e2e_lfmmi"
"kssteven418/Squeezeformer" -> "ZhengkunTian/OpenTransformer"
"kssteven418/Squeezeformer" -> "cywang97/StreamingTransformer"
"david-tejada/rango" -> "AndreasArvidsson/andreas-talon"
"david-tejada/rango" -> "wolfmanstout/talon-gaze-ocr"
"david-tejada/rango" -> "david-tejada/rango-talon"
"david-tejada/rango" -> "chaosparrot/talon_hud"
"david-tejada/rango" -> "cursorless-dev/cursorless-talon"
"david-tejada/rango" -> "talonhub/community"
"david-tejada/rango" -> "C-Loftus/talon-ai-tools"
"david-tejada/rango" -> "phillco/talon-axkit"
"david-tejada/rango" -> "cursorless-dev/cursorless"
"david-tejada/rango" -> "splondike/talon_ui_helper"
"david-tejada/rango" -> "chaosparrot/parrot.py"
"david-tejada/rango" -> "Will-Sommers/cursorless-katas"
"david-tejada/rango" -> "talonvoice/talon"
"jcsilva/docker-kaldi-gstreamer-server" -> "alumae/kaldi-gstreamer-server"
"jcsilva/docker-kaldi-gstreamer-server" -> "alumae/gst-kaldi-nnet2-online"
"jcsilva/docker-kaldi-gstreamer-server" -> "Kaljurand/dictate.js"
"jcsilva/docker-kaldi-gstreamer-server" -> "Kaljurand/K6nele"
"jcsilva/docker-kaldi-gstreamer-server" -> "dialogflow/asr-server"
"jcsilva/docker-kaldi-gstreamer-server" -> "alumae/kaldi-offline-transcriber"
"jcsilva/docker-kaldi-gstreamer-server" -> "uhh-lt/kaldi-tuda-de"
"jcsilva/docker-kaldi-gstreamer-server" -> "XiaoMi/kaldi-onnx"
"jcsilva/docker-kaldi-gstreamer-server" -> "gooofy/py-kaldi-asr"
"jcsilva/docker-kaldi-gstreamer-server" -> "gooofy/zamia-speech"
"jcsilva/docker-kaldi-gstreamer-server" -> "tzyll/kaldi"
"jcsilva/docker-kaldi-gstreamer-server" -> "skit-ai/kaldi-serve"
"jcsilva/docker-kaldi-gstreamer-server" -> "jzlianglu/pykaldi2"
"jcsilva/docker-kaldi-gstreamer-server" -> "YoavRamon/awesome-kaldi"
"rizar/attention-lvcsr" -> "dmitriy-serdyuk/kaldi-python"
"rizar/attention-lvcsr" -> "srvk/eesen"
"rizar/attention-lvcsr" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"rizar/attention-lvcsr" -> "amaas/stanford-ctc"
"rizar/attention-lvcsr" -> "vrenkens/tfkaldi"
"rizar/attention-lvcsr" -> "mila-iqia/blocks-examples" ["e"=1]
"rizar/attention-lvcsr" -> "yajiemiao/eesen"
"rizar/attention-lvcsr" -> "SeanNaren/deepspeech.torch" ["e"=1]
"rizar/attention-lvcsr" -> "yajiemiao/kaldipdnn"
"rizar/attention-lvcsr" -> "lingochamp/kaldi-ctc"
"rizar/attention-lvcsr" -> "YiwenShaoStephen/pychain"
"rizar/attention-lvcsr" -> "NervanaSystems/deepspeech"
"rizar/attention-lvcsr" -> "mpezeshki/CTC-Connectionist-Temporal-Classification"
"rizar/attention-lvcsr" -> "rwth-i6/returnn"
"rizar/attention-lvcsr" -> "vrenkens/nabu"
"Ephrem-ETH/E2E-KWS" -> "hongfeixue/KWS_pytorch"
"yajiemiao/eesen" -> "srvk/eesen"
"yajiemiao/eesen" -> "lingochamp/kaldi-ctc"
"yajiemiao/eesen" -> "vrenkens/tfkaldi"
"yajiemiao/eesen" -> "yajiemiao/kaldipdnn"
"yajiemiao/eesen" -> "amaas/stanford-ctc"
"yajiemiao/eesen" -> "YiwenShaoStephen/pychain"
"yajiemiao/eesen" -> "rizar/attention-lvcsr"
"yajiemiao/eesen" -> "awni/transducer"
"yajiemiao/eesen" -> "KarelVesely84/kaldi-io-for-python"
"yajiemiao/eesen" -> "HawkAaron/warp-transducer"
"yajiemiao/eesen" -> "HawkAaron/RNN-Transducer"
"yajiemiao/eesen" -> "jzlianglu/pykaldi2"
"yajiemiao/eesen" -> "thu-spmi/CAT"
"yajiemiao/eesen" -> "wenet-e2e/speech-recognition-papers"
"yajiemiao/eesen" -> "NervanaSystems/deepspeech"
"k2-fsa/fast_rnnt" -> "csukuangfj/optimized_transducer"
"k2-fsa/fast_rnnt" -> "csukuangfj/transducer-loss-benchmarking"
"k2-fsa/fast_rnnt" -> "1ytic/warp-rnnt"
"k2-fsa/fast_rnnt" -> "thu-spmi/CAT"
"k2-fsa/fast_rnnt" -> "HawkAaron/warp-transducer"
"csukuangfj/transducer-loss-benchmarking" -> "k2-fsa/fast_rnnt"
"csukuangfj/transducer-loss-benchmarking" -> "csukuangfj/optimized_transducer"
"csukuangfj/transducer-loss-benchmarking" -> "csukuangfj/kaldifeat"
"tencent-ailab/3m-asr" -> "jctian98/e2e_lfmmi"
"dwks/silvius" -> "dwks/silvius-backend"
"dwks/silvius" -> "dictation-toolbox/aenea"
"dwks/silvius" -> "chajadan/dragonfluid"
"UFAL-DSG/alex-asr" -> "UFAL-DSG/pykaldi"
"julius-speech/dictation-kit" -> "julius-speech/segmentation-kit"
"julius-speech/dictation-kit" -> "julius-speech/julius"
"googlearchive/webplatform-samples" -> "mdn/web-speech-api"
"burchim/EfficientConformer" -> "upskyy/Squeezeformer"
"burchim/EfficientConformer" -> "kssteven418/Squeezeformer"
"burchim/EfficientConformer" -> "tencent-ailab/3m-asr"
"burchim/EfficientConformer" -> "k2-fsa/fast_rnnt"
"google-research-datasets/cvss" -> "kahne/SpeechTransProgress" ["e"=1]
"google-research-datasets/cvss" -> "facebookresearch/covost"
"google-research-datasets/cvss" -> "sam2125/translatotron"
"oliverguhr/deepmultilingualpunctuation" -> "oliverguhr/fullstop-deep-punctuation-prediction"
"phillco/talon-axkit" -> "chaosparrot/talon_hud"
"phillco/talon-axkit" -> "wolfmanstout/talon-gaze-ocr"
"atticoos/MagicMirror" -> "murugaratham/react-mirror"
"atticoos/MagicMirror" -> "plondon/BlackMirror"
"Mu-Y/mpl-mdd" -> "vocaliodmiku/wav2vec2mdd"
"Picovoice/cobra" -> "Picovoice/koala"
"Picovoice/cobra" -> "Picovoice/octopus"
"Picovoice/cobra" -> "Picovoice/eagle"
"benob/recasepunc" -> "sviperm/neuro-comma"
"wolfmanstout/talon-gaze-ocr" -> "chaosparrot/talon_hud"
"wolfmanstout/talon-gaze-ocr" -> "AndreasArvidsson/andreas-talon"
"wolfmanstout/talon-gaze-ocr" -> "splondike/talon_ui_helper"
"wolfmanstout/talon-gaze-ocr" -> "phillco/talon-axkit"
"wolfmanstout/talon-gaze-ocr" -> "C-Loftus/talon-ai-tools"
"wolfmanstout/talon-gaze-ocr" -> "david-tejada/rango"
"wolfmanstout/talon-gaze-ocr" -> "chaosparrot/parrot.py"
"hongfeixue/KWS_pytorch" -> "Ephrem-ETH/E2E-KWS"
"randomBrainstormer/MMM-GoogleCalendar" -> "spydersoft-consulting/MMM-GoogleTasks"
"randomBrainstormer/MMM-GoogleCalendar" -> "Jacopo1891/MMM-GoogleTrafficTimes"
"sdeva14/sustai21-counter-neural-essay-length" -> "CarryCKW/AES-NPCR"
"sdeva14/sustai21-counter-neural-essay-length" -> "ASAP-AEG/MTL-Essay-Traits-Scoring"
"lingochamp/Multi-Scale-BERT-AES" -> "sdeva14/sustai21-counter-neural-essay-length"
"lingochamp/Multi-Scale-BERT-AES" -> "Gaurav-Pande/AES_DL"
"lingochamp/Multi-Scale-BERT-AES" -> "ASAP-AEG/MTL-Essay-Traits-Scoring"
"lingochamp/Multi-Scale-BERT-AES" -> "robert1ridley/cross-prompt-trait-scoring"
"lingochamp/Multi-Scale-BERT-AES" -> "CarryCKW/AES-NPCR"
"MaCFP/macfp-db" -> "MaCFP/matl-db"
"MMRIZE/MMM-CalendarExt3" -> "No3x/MMM-GoogleDocs-Notes"
"MMRIZE/MMM-CalendarExt3" -> "MMRIZE/MMM-CalendarExt3Agenda"
"aaron-xichen/cnn-lstm-ctc" -> "jarmstrong2/handwritingnet"
"jangellx/MagicMirror" -> "81RD/SmartMirror"
"splondike/talon_ui_helper" -> "chaosparrot/talon_hud"
"splondike/talon_ui_helper" -> "wolfmanstout/talon-gaze-ocr"
"splondike/talon_ui_helper" -> "brollin/flex-mouse-grid"
"splondike/talon_ui_helper" -> "AndrewDant/screen-spots"
"ColugoMum/Smart_container" -> "thomas-yanxin/Intelligent-retail-product-identification"
"ColugoMum/Smart_container" -> "thomas-yanxin/wechat-living-bot"
"dianwen-ng/Keyword-Spotting-ConvMixer" -> "qute012/Pytorch-MHAtt-RNN-KWS"
"firetools/blenderfds" -> "FireDynamics/fdsgeogen"
"csukuangfj/optimized_transducer" -> "k2-fsa/fast_rnnt"
"csukuangfj/optimized_transducer" -> "csukuangfj/transducer-loss-benchmarking"
"gusrud1103/LibriPhrase" -> "aizhiqi-work/MM-KWS"
"gusrud1103/LibriPhrase" -> "kaistmm/Metric-UD-KWS"
"ninetailskim/Padoodle" -> "ninetailskim/FlappyPaddle"
"ninetailskim/Padoodle" -> "ninetailskim/GestureRecognitionWithDA"
"ninetailskim/Padoodle" -> "ninetailskim/PaddleEGT"
"ninetailskim/Padoodle" -> "ninetailskim/DodgeFace-EXQver"
"ninetailskim/Padoodle" -> "ninetailskim/EXQ_IndonesiaVer"
"thomas-yanxin/AItrainer" -> "thomas-yanxin/wechat-living-bot"
"thomas-yanxin/AItrainer" -> "thomas-yanxin/Intelligent-retail-product-identification"
"thomas-yanxin/AItrainer" -> "thomas-yanxin/Cigarette-Detection"
"thomas-yanxin/AItrainer" -> "thomas-yanxin/Mural-Gan"
"thomas-yanxin/AItrainer" -> "thomas-yanxin/garbage_classification"
"nohaze/Precise-CTC" -> "mcf06/theano_ctc"
"julius-speech/segmentation-kit" -> "julius-speech/grammar-kit"
"chajadan/dragonfluid" -> "chajadan/DragonflyRules"
"dwks/aenea-grammar-simple" -> "davitenio/dragonfly-macros"
"k2-fsa/sherpa-ncnn" -> "k2-fsa/sherpa"
"k2-fsa/sherpa-ncnn" -> "k2-fsa/sherpa-onnx" ["e"=1]
"k2-fsa/sherpa-ncnn" -> "k2-fsa/icefall"
"k2-fsa/sherpa-ncnn" -> "k2-fsa/k2"
"k2-fsa/sherpa-ncnn" -> "chenkui164/FastASR"
"k2-fsa/sherpa-ncnn" -> "weirdseed/Vits-Android-ncnn" ["e"=1]
"k2-fsa/sherpa-ncnn" -> "lhotse-speech/lhotse"
"k2-fsa/sherpa-ncnn" -> "wenet-e2e/wekws"
"k2-fsa/sherpa-ncnn" -> "RapidAI/RapidASR"
"k2-fsa/sherpa-ncnn" -> "nihui/opencv-mobile" ["e"=1]
"k2-fsa/sherpa-ncnn" -> "wenet-e2e/wenet"
"k2-fsa/sherpa-ncnn" -> "ssssssilver/sherpa-ncnn-unity" ["e"=1]
"k2-fsa/sherpa-ncnn" -> "pnnx/pnnx" ["e"=1]
"k2-fsa/sherpa-ncnn" -> "Xiaobin-Rong/gtcrn" ["e"=1]
"k2-fsa/sherpa-ncnn" -> "k2-fsa/snowfall"
"Shinao/SmartMirror" -> "evancohen/smart-mirror"
"Shinao/SmartMirror" -> "uber-archive/image-diff" ["e"=1]
"Shinao/SmartMirror" -> "81RD/SmartMirror"
"Shinao/SmartMirror" -> "atticoos/MagicMirror"
"Shinao/SmartMirror" -> "paviro/MMM-Facial-Recognition"
"KarelVesely84/kaldi-io-for-python" -> "nttcslab-sp/kaldiio"
"KarelVesely84/kaldi-io-for-python" -> "pykaldi/pykaldi"
"KarelVesely84/kaldi-io-for-python" -> "BUTSpeechFIT/x-vector-kaldi-tf" ["e"=1]
"KarelVesely84/kaldi-io-for-python" -> "k2-fsa/k2"
"KarelVesely84/kaldi-io-for-python" -> "XiaoMi/kaldi-onnx"
"KarelVesely84/kaldi-io-for-python" -> "jzlianglu/pykaldi2"
"KarelVesely84/kaldi-io-for-python" -> "Snowdar/asv-subtools" ["e"=1]
"KarelVesely84/kaldi-io-for-python" -> "lhotse-speech/lhotse"
"KarelVesely84/kaldi-io-for-python" -> "YoavRamon/awesome-kaldi"
"KarelVesely84/kaldi-io-for-python" -> "mravanelli/pytorch-kaldi"
"KarelVesely84/kaldi-io-for-python" -> "santi-pdp/pase"
"KarelVesely84/kaldi-io-for-python" -> "mycrazycracy/tf-kaldi-speaker" ["e"=1]
"KarelVesely84/kaldi-io-for-python" -> "YiwenShaoStephen/pychain"
"KarelVesely84/kaldi-io-for-python" -> "SpeechColab/GigaSpeech"
"KarelVesely84/kaldi-io-for-python" -> "yajiemiao/eesen"
"serenadeai/serenade" -> "serenadeai/custom-commands"
"serenadeai/serenade" -> "talonhub/community"
"serenadeai/serenade" -> "david-tejada/rango"
"serenadeai/serenade" -> "serenadeai/code"
"serenadeai/serenade" -> "dictation-toolbox/Caster"
"serenadeai/serenade" -> "dictation-toolbox/dragonfly"
"serenadeai/serenade" -> "cursorless-dev/cursorless"
"serenadeai/serenade" -> "chaosparrot/parrot.py"
"serenadeai/serenade" -> "anonfunc/intellij-voicecode"
"MicrosoftEdge/magic-mirror-demo" -> "evancohen/smart-mirror"
"MicrosoftEdge/magic-mirror-demo" -> "HackerShackOfficial/AI-Smart-Mirror"
"MicrosoftEdge/magic-mirror-demo" -> "HackerShackOfficial/Smart-Mirror"
"MicrosoftEdge/magic-mirror-demo" -> "alexa/alexa-avs-sample-app" ["e"=1]
"MicrosoftEdge/magic-mirror-demo" -> "phodal/awesome-iot" ["e"=1]
"MicrosoftEdge/magic-mirror-demo" -> "MagicMirrorOrg/MagicMirror" ["e"=1]
"MicrosoftEdge/magic-mirror-demo" -> "maxbbraun/mirror"
"MicrosoftEdge/magic-mirror-demo" -> "evancohen/sonus"
"MicrosoftEdge/magic-mirror-demo" -> "ms-iot/samples" ["e"=1]
"MicrosoftEdge/magic-mirror-demo" -> "novaspirit/AlexaPi" ["e"=1]
"MicrosoftEdge/magic-mirror-demo" -> "tobykurien/rpi_lcars" ["e"=1]
"MicrosoftEdge/magic-mirror-demo" -> "Jopyth/MMM-Remote-Control"
"MicrosoftEdge/magic-mirror-demo" -> "guysoft/FullPageOS" ["e"=1]
"MicrosoftEdge/magic-mirror-demo" -> "OpenLiveWriter/OpenLiveWriter" ["e"=1]
"MicrosoftEdge/magic-mirror-demo" -> "HannahMitt/HomeMirror" ["e"=1]
"zagum/SpeechRecognitionView" -> "gotev/android-speech"
"zagum/SpeechRecognitionView" -> "Meetic/Shuffle" ["e"=1]
"zagum/SpeechRecognitionView" -> "amirarcane/recent-images"
"zagum/SpeechRecognitionView" -> "vikramezhil/DroidSpeech"
"zagum/SpeechRecognitionView" -> "tata88k/zxing-barcode" ["e"=1]
"ottokart/punctuator2" -> "vackosar/keras-punctuator"
"ottokart/punctuator2" -> "ottokart/punctuator"
"ottokart/punctuator2" -> "nkrnrnk/BertPunc"
"ottokart/punctuator2" -> "notAI-tech/fastPunct"
"ottokart/punctuator2" -> "geyang/deep-auto-punctuation"
"ottokart/punctuator2" -> "alpoktem/punkProse"
"ottokart/punctuator2" -> "kaituoxu/X-Punctuator"
"ottokart/punctuator2" -> "xashru/punctuation-restoration"
"ottokart/punctuator2" -> "MenNianShi/PunctuationPrediction-BERT"
"ottokart/punctuator2" -> "26hzhang/neural_sequence_labeling"
"ottokart/punctuator2" -> "notAI-tech/deepsegment"
"ottokart/punctuator2" -> "speechio/chinese_text_normalization"
"ottokart/punctuator2" -> "k2-fsa/k2"
"ottokart/punctuator2" -> "bedapudi6788/deepcorrect"
"ottokart/punctuator2" -> "cywang97/StreamingTransformer"
"maxbbraun/mirror" -> "NielsMasdorp/Speculum-Android"
"maxbbraun/mirror" -> "evancohen/smart-mirror"
"maxbbraun/mirror" -> "ineptech/mirror"
"maxbbraun/mirror" -> "jakkra/SmartMirror"
"maxbbraun/mirror" -> "jreyes/mirror"
"maxbbraun/mirror" -> "HackerShackOfficial/AI-Smart-Mirror"
"maxbbraun/mirror" -> "maxbbraun/accent"
"maxbbraun/mirror" -> "dolanmiu/MMM-awesome-alexa"
"cmusphinx/g2p-seq2seq" -> "AdolfVonKleist/Phonetisaurus" ["e"=1]
"cmusphinx/g2p-seq2seq" -> "Kyubyong/g2p" ["e"=1]
"cmusphinx/g2p-seq2seq" -> "cmusphinx/cmudict" ["e"=1]
"cmusphinx/g2p-seq2seq" -> "sequitur-g2p/sequitur-g2p" ["e"=1]
"cmusphinx/g2p-seq2seq" -> "srvk/eesen"
"cmusphinx/g2p-seq2seq" -> "alumae/kaldi-gstreamer-server"
"cmusphinx/g2p-seq2seq" -> "kakaobrain/g2pm" ["e"=1]
"cmusphinx/g2p-seq2seq" -> "speechio/chinese_text_normalization"
"cmusphinx/g2p-seq2seq" -> "SpeechColab/GigaSpeech"
"cmusphinx/g2p-seq2seq" -> "syhw/wer_are_we"
"cmusphinx/g2p-seq2seq" -> "gooofy/zamia-speech"
"cmusphinx/g2p-seq2seq" -> "pykaldi/pykaldi"
"cmusphinx/g2p-seq2seq" -> "YoavRamon/awesome-kaldi"
"cmusphinx/g2p-seq2seq" -> "pettarin/forced-alignment-tools" ["e"=1]
"cmusphinx/g2p-seq2seq" -> "cywang97/StreamingTransformer"
"modelscope/kws-training-suite" -> "wenet-e2e/wekws"
"modelscope/kws-training-suite" -> "chenyangMl/keyword-spot"
"modelscope/kws-training-suite" -> "zycv/awesome-keyword-spotting"
"zlargon/google-tts" -> "hiddentao/google-tts"
"zlargon/google-tts" -> "florabtw/google-translate-tts"
"melling/ErgonomicNotes" -> "dictation-toolbox/Caster"
"paviro/MMM-Facial-Recognition" -> "paviro/MMM-Facial-Recognition-Tools"
"paviro/MMM-Facial-Recognition" -> "mochman/MMM-Swipe"
"paviro/MMM-Facial-Recognition" -> "alexyak/motiondetector"
"paviro/MMM-Facial-Recognition" -> "paviro/MMM-PIR-Sensor"
"paviro/MMM-Facial-Recognition" -> "alexyak/camera"
"paviro/MMM-Facial-Recognition" -> "CatoAntonsen/MMM-SpotifyConnectUI"
"paviro/MMM-Facial-Recognition" -> "normyx/MMM-Facial-Recognition-OCV3"
"paviro/MMM-Facial-Recognition" -> "PtrBld/MMM-Scrobbler"
"paviro/MMM-Facial-Recognition" -> "tosti007/MMM-ProfileSwitcher"
"paviro/MMM-Facial-Recognition" -> "saml-dev/MMM-Traffic"
"paviro/MMM-Facial-Recognition" -> "joanaz/MMM-MirrorMirrorOnTheWall"
"paviro/MMM-Facial-Recognition" -> "shbatm/MMM-OnScreenMenu"
"paviro/MMM-Facial-Recognition" -> "fewieden/MMM-TTS"
"paviro/MMM-Facial-Recognition" -> "paviro/MMM-syslog"
"paviro/MMM-Facial-Recognition" -> "Matzefication/MMM-Hello-Mirror"
"PtrBld/MMM-Scrobbler" -> "CatoAntonsen/MMM-SpotifyConnectUI"
"PtrBld/MMM-Scrobbler" -> "AlexDespain01/mm-hide-all"
"paviro/MMM-PIR-Sensor" -> "Jopyth/MMM-Remote-Control"
"paviro/MMM-PIR-Sensor" -> "paviro/MMM-Facial-Recognition"
"paviro/MMM-PIR-Sensor" -> "mochman/MMM-Swipe"
"paviro/MMM-PIR-Sensor" -> "ianperrin/MMM-ModuleScheduler"
"paviro/MMM-PIR-Sensor" -> "barnabycolby/MMM-Carousel"
"paviro/MMM-PIR-Sensor" -> "BenRoe/MMM-SystemStats"
"paviro/MMM-PIR-Sensor" -> "PtrBld/MMM-Scrobbler"
"paviro/MMM-PIR-Sensor" -> "alexyak/motiondetector"
"paviro/MMM-PIR-Sensor" -> "paviro/MMM-Wunderlist"
"paviro/MMM-PIR-Sensor" -> "MichMich/MMM-WatchDog"
"paviro/MMM-PIR-Sensor" -> "gauravsacc/MMM-GoogleAssistant"
"paviro/MMM-PIR-Sensor" -> "saml-dev/MMM-Traffic"
"paviro/MMM-PIR-Sensor" -> "ianperrin/MMM-NetworkScanner"
"paviro/MMM-PIR-Sensor" -> "raywo/MMM-NowPlayingOnSpotify"
"paviro/MMM-PIR-Sensor" -> "fewieden/MMM-voice"
"dialogflow/asr-server" -> "dialogflow/api-ai-english-asr-model"
"dialogflow/asr-server" -> "alumae/gst-kaldi-nnet2-online"
"dialogflow/asr-server" -> "jcsilva/docker-kaldi-gstreamer-server"
"dialogflow/asr-server" -> "jimbozhang/kaldi-gop"
"dialogflow/asr-server" -> "Kaljurand/dictate.js"
"dialogflow/asr-server" -> "skit-ai/kaldi-serve"
"dialogflow/asr-server" -> "alumae/kaldi-gstreamer-server"
"dialogflow/asr-server" -> "daanzu/kaldi-active-grammar"
"dialogflow/asr-server" -> "gooofy/py-kaldi-asr"
"dialogflow/asr-server" -> "jpuigcerver/kaldi-decoders"
"ineptech/mirror" -> "NielsMasdorp/Speculum-Android"
"ineptech/mirror" -> "jreyes/mirror"
"chenkui164/FastASR" -> "RapidAI/RapidASR"
"chenkui164/FastASR" -> "yeyupiaoling/PunctuationModel"
"chenkui164/FastASR" -> "huakunyang/SummerTTS" ["e"=1]
"chenkui164/FastASR" -> "jctian98/e2e_lfmmi"
"chenkui164/FastASR" -> "k2-fsa/sherpa-ncnn"
"chenkui164/FastASR" -> "speechio/chinese_text_normalization"
"chenkui164/FastASR" -> "yeyupiaoling/PPASR"
"chenkui164/FastASR" -> "Z-yq/TensorflowASR"
"chenkui164/FastASR" -> "wenet-e2e/speech-recognition-papers"
"chenkui164/FastASR" -> "cnlinxi/book-text-to-speech" ["e"=1]
"chenkui164/FastASR" -> "SpeechColab/Leaderboard"
"chenkui164/FastASR" -> "cywang97/StreamingTransformer"
"chenkui164/FastASR" -> "Tele-AI/TeleSpeech-ASR" ["e"=1]
"chenkui164/FastASR" -> "zycv/awesome-keyword-spotting"
"chenkui164/FastASR" -> "wenet-e2e/wenet"
"upskyy/Squeezeformer" -> "kssteven418/Squeezeformer"
"upskyy/Squeezeformer" -> "burchim/EfficientConformer"
"sherjilozair/ctc" -> "mpezeshki/CTC-Connectionist-Temporal-Classification"
"sherjilozair/ctc" -> "mcf06/theano_ctc"
"sherjilozair/ctc" -> "shawntan/theano-ctc"
"sherjilozair/ctc" -> "nohaze/Precise-CTC"
"vrenkens/tfkaldi" -> "vrenkens/nabu"
"vrenkens/tfkaldi" -> "dspavankumar/keras-kaldi"
"vrenkens/tfkaldi" -> "yajiemiao/eesen"
"vrenkens/tfkaldi" -> "v0lta/Listen-attend-and-spell"
"vrenkens/tfkaldi" -> "fernandodelacalle/ResNet-Kaldi-Tensorflow-ASR"
"vrenkens/tfkaldi" -> "srvk/eesen"
"vrenkens/tfkaldi" -> "rizar/attention-lvcsr"
"vrenkens/tfkaldi" -> "lingochamp/kaldi-ctc"
"vrenkens/tfkaldi" -> "UFAL-DSG/pykaldi"
"yeyupiaoling/PunctuationModel" -> "jiangnanboy/punctuation_prediction"
"yeyupiaoling/PunctuationModel" -> "chenkui164/FastASR"
"yeyupiaoling/PunctuationModel" -> "yeyupiaoling/PPASR"
"yeyupiaoling/PunctuationModel" -> "AlvinIsonomia/LSTM-for-Chinese-Punctuation-Restoration"
"yeyupiaoling/PunctuationModel" -> "frankyoujian/Edge-Punct-Casing"
"mcf06/theano_ctc" -> "nohaze/Precise-CTC"
"adobe-research/convmelspec" -> "Qualcomm-AI-research/bcresnet"
"saml-dev/MMM-Traffic" -> "BenRoe/MMM-SystemStats"
"saml-dev/MMM-Traffic" -> "MichMich/MMM-WatchDog"
"saml-dev/MMM-Traffic" -> "vicmora/MMM-GoogleMapsTraffic"
"saml-dev/MMM-Traffic" -> "Jopyth/MMM-Remote-Control"
"saml-dev/MMM-Traffic" -> "kapsolas/MMM-Instagram"
"saml-dev/MMM-Traffic" -> "CatoAntonsen/MMM-SpotifyConnectUI"
"saml-dev/MMM-Traffic" -> "ianperrin/MMM-ModuleScheduler"
"saml-dev/MMM-Traffic" -> "ianperrin/MMM-NetworkScanner"
"saml-dev/MMM-Traffic" -> "paviro/MMM-Facial-Recognition"
"saml-dev/MMM-Traffic" -> "paviro/MMM-PIR-Sensor"
"saml-dev/MMM-Traffic" -> "fewieden/MMM-voice"
"saml-dev/MMM-Traffic" -> "ronny3050/internet-monitor"
"Picovoice/koala" -> "Picovoice/eagle"
"ColugoMum/Goods_Recognition" -> "thomas-yanxin/Intelligent-retail-product-identification"
"csukuangfj/kaldi-native-fbank" -> "csukuangfj/kaldifeat"
"csukuangfj/kaldi-native-fbank" -> "RapidAI/RapidPunc"
"vchahun/pyfst" -> "UFAL-DSG/pyfst"
"CarryCKW/AES-NPCR" -> "robert1ridley/cross-prompt-trait-scoring"
"CarryCKW/AES-NPCR" -> "sdeva14/sustai21-counter-neural-essay-length"
"usnistgov/SCTK" -> "pyannote/pyannote-metrics" ["e"=1]
"usnistgov/SCTK" -> "tencent-ailab/3m-asr"
"ColugoMum/Dataset" -> "thomas-yanxin/Intelligent-retail-product-identification"
"ColugoMum/Dataset" -> "thomas-yanxin/wechat-living-bot"
"ColugoMum/Dataset" -> "ColugoMum/Smart_container"
"ColugoMum/Dataset" -> "thomas-yanxin/AItrainer"
"paviro/MMM-Facial-Recognition-Tools" -> "paviro/MMM-Facial-Recognition"
"pimentel/voicecode_directory" -> "VoiceCode/docs-DEPRECATED"
"jonrein/tensorflow_CTC_example" -> "igormq/ctc_tensorflow_example"
"jonrein/tensorflow_CTC_example" -> "amaas/stanford-ctc"
"jonrein/tensorflow_CTC_example" -> "aaron-xichen/cnn-lstm-ctc"
"mozilla/DeepSpeech" -> "kaldi-asr/kaldi"
"mozilla/DeepSpeech" -> "mozilla/TTS" ["e"=1]
"mozilla/DeepSpeech" -> "flashlight/wav2letter"
"mozilla/DeepSpeech" -> "espnet/espnet"
"mozilla/DeepSpeech" -> "PaddlePaddle/PaddleSpeech" ["e"=1]
"mozilla/DeepSpeech" -> "alphacep/vosk-api"
"mozilla/DeepSpeech" -> "Uberi/speech_recognition"
"mozilla/DeepSpeech" -> "coqui-ai/TTS" ["e"=1]
"mozilla/DeepSpeech" -> "explosion/spaCy" ["e"=1]
"mozilla/DeepSpeech" -> "openai/whisper" ["e"=1]
"mozilla/DeepSpeech" -> "buriburisuri/speech-to-text-wavenet" ["e"=1]
"mozilla/DeepSpeech" -> "CorentinJ/Real-Time-Voice-Cloning" ["e"=1]
"mozilla/DeepSpeech" -> "facebookresearch/fastText" ["e"=1]
"mozilla/DeepSpeech" -> "tensorflow/models" ["e"=1]
"mozilla/DeepSpeech" -> "speechbrain/speechbrain"
"ncsoft/PhonMatchNet" -> "kaistmm/Metric-UD-KWS"
"ncsoft/PhonMatchNet" -> "aizhiqi-work/MM-KWS"
"siyuanzhao/automated-essay-grading" -> "nusnlp/nea"
"siyuanzhao/automated-essay-grading" -> "openedx-unsupported/ease"
"siyuanzhao/automated-essay-grading" -> "karthikprasad/automated-essay-grader"
"siyuanzhao/automated-essay-grading" -> "SahilC/AutomaticEssayGrading"
"siyuanzhao/automated-essay-grading" -> "feidong1991/aes"
"siyuanzhao/automated-essay-grading" -> "Gaurav-Pande/AES_DL"
"siyuanzhao/automated-essay-grading" -> "zlliang/essaysense"
"HackerShackOfficial/Smart-Mirror" -> "HackerShackOfficial/AI-Smart-Mirror"
"HackerShackOfficial/Smart-Mirror" -> "evancohen/smart-mirror"
"HackerShackOfficial/Smart-Mirror" -> "HackerShackOfficial/Smart-Security-Camera"
"HackerShackOfficial/Smart-Mirror" -> "MicrosoftEdge/magic-mirror-demo"
"HackerShackOfficial/Smart-Mirror" -> "MagicMirrorOrg/MagicMirror" ["e"=1]
"HackerShackOfficial/Smart-Mirror" -> "aishmittal/Smart-Mirror"
"HackerShackOfficial/Smart-Mirror" -> "paviro/MMM-Facial-Recognition"
"HackerShackOfficial/Smart-Mirror" -> "maxbbraun/mirror"
"HackerShackOfficial/Smart-Mirror" -> "HackerShackOfficial/Smartphone-Doorlock"
"HackerShackOfficial/Smart-Mirror" -> "s6joui/MirrorOS"
"HackerShackOfficial/Smart-Mirror" -> "Jopyth/MMM-Remote-Control"
"HackerShackOfficial/Smart-Mirror" -> "evancohen/sonus"
"HackerShackOfficial/Smart-Mirror" -> "alexa-pi/AlexaPi" ["e"=1]
"HackerShackOfficial/Smart-Mirror" -> "Shinao/SmartMirror"
"HackerShackOfficial/Smart-Mirror" -> "anders94/raspberry-pi-home-automation" ["e"=1]
"Jopyth/MMM-Remote-Control" -> "paviro/MMM-PIR-Sensor"
"Jopyth/MMM-Remote-Control" -> "ianperrin/MMM-ModuleScheduler"
"Jopyth/MMM-Remote-Control" -> "BenRoe/MMM-SystemStats"
"Jopyth/MMM-Remote-Control" -> "raywo/MMM-NowPlayingOnSpotify"
"Jopyth/MMM-Remote-Control" -> "barnabycolby/MMM-Carousel"
"Jopyth/MMM-Remote-Control" -> "kevinatown/MMM-Screencast"
"Jopyth/MMM-Remote-Control" -> "saml-dev/MMM-Traffic"
"Jopyth/MMM-Remote-Control" -> "edward-shen/MMM-pages"
"Jopyth/MMM-Remote-Control" -> "darickc/MMM-BackgroundSlideshow"
"Jopyth/MMM-Remote-Control" -> "Bee-Mar/mmpm"
"Jopyth/MMM-Remote-Control" -> "gauravsacc/MMM-GoogleAssistant"
"Jopyth/MMM-Remote-Control" -> "MichMich/MMM-WatchDog"
"Jopyth/MMM-Remote-Control" -> "ianperrin/MMM-NetworkScanner"
"Jopyth/MMM-Remote-Control" -> "Klettner/MM-Remote"
"Jopyth/MMM-Remote-Control" -> "sdetweil/MagicMirror_scripts"
"evancohen/sonus" -> "cmusphinx/node-pocketsphinx"
"evancohen/sonus" -> "evancohen/sonus-electron-boilerplate"
"evancohen/sonus" -> "Marak/say.js"
"evancohen/sonus" -> "Kitt-AI/snowboy" ["e"=1]
"evancohen/sonus" -> "hackergrrl/electron-speech"
"evancohen/sonus" -> "gillesdemey/node-record-lpcm16"
"evancohen/sonus" -> "mylisabox/lisa-box"
"evancohen/sonus" -> "evancohen/smart-mirror"
"Jakobovski/free-spoken-digit-dataset" -> "soerenab/AudioMNIST"
"Jakobovski/free-spoken-digit-dataset" -> "YoavRamon/awesome-kaldi"
"Jakobovski/free-spoken-digit-dataset" -> "philipperemy/timit" ["e"=1]
"Jakobovski/free-spoken-digit-dataset" -> "pykaldi/pykaldi"
"Jakobovski/free-spoken-digit-dataset" -> "mravanelli/pytorch-kaldi"
"Jakobovski/free-spoken-digit-dataset" -> "facebookresearch/WavAugment" ["e"=1]
"Jakobovski/free-spoken-digit-dataset" -> "srvk/eesen"
"Jakobovski/free-spoken-digit-dataset" -> "keunwoochoi/kapre" ["e"=1]
"Jakobovski/free-spoken-digit-dataset" -> "douglas125/SpeechCmdRecognition"
"Jakobovski/free-spoken-digit-dataset" -> "drethage/speech-denoising-wavenet" ["e"=1]
"Jakobovski/free-spoken-digit-dataset" -> "castorini/honk"
"Jakobovski/free-spoken-digit-dataset" -> "karolpiczak/ESC-50" ["e"=1]
"Jakobovski/free-spoken-digit-dataset" -> "IGITUGraz/LSNN-official" ["e"=1]
"Jakobovski/free-spoken-digit-dataset" -> "DemisEom/SpecAugment"
"Jakobovski/free-spoken-digit-dataset" -> "jameslyons/python_speech_features"
"baidu-research/ba-dls-deepspeech" -> "NervanaSystems/deepspeech"
"baidu-research/ba-dls-deepspeech" -> "SeanNaren/deepspeech.torch" ["e"=1]
"baidu-research/ba-dls-deepspeech" -> "srvk/eesen"
"baidu-research/ba-dls-deepspeech" -> "amaas/stanford-ctc"
"baidu-research/ba-dls-deepspeech" -> "lingochamp/kaldi-ctc"
"baidu-research/ba-dls-deepspeech" -> "cmusphinx/g2p-seq2seq"
"baidu-research/ba-dls-deepspeech" -> "pannous/tensorflow-speech-recognition"
"baidu-research/ba-dls-deepspeech" -> "dspavankumar/keras-kaldi"
"baidu-research/ba-dls-deepspeech" -> "SeanNaren/deepspeech.pytorch"
"baidu-research/ba-dls-deepspeech" -> "igormq/ctc_tensorflow_example"
"baidu-research/ba-dls-deepspeech" -> "alumae/kaldi-gstreamer-server"
"baidu-research/ba-dls-deepspeech" -> "robmsmt/KerasDeepSpeech"
"baidu-research/ba-dls-deepspeech" -> "igormq/asr-study"
"baidu-research/ba-dls-deepspeech" -> "awni/speech"
"baidu-research/ba-dls-deepspeech" -> "syhw/wer_are_we"
"KirAsh4/calendar_monthly" -> "MichMich/MMM-WatchDog"
"paviro/MMM-syslog" -> "AlexDespain01/mm-hide-all"
"barnabycolby/MMM-Carousel" -> "BenRoe/MMM-SystemStats"
"barnabycolby/MMM-Carousel" -> "ianperrin/MMM-NetworkScanner"
"barnabycolby/MMM-Carousel" -> "Jopyth/MMM-Remote-Control"
"barnabycolby/MMM-Carousel" -> "eouia/MMM-CalendarExt"
"barnabycolby/MMM-Carousel" -> "paviro/MMM-PIR-Sensor"
"barnabycolby/MMM-Carousel" -> "edward-shen/MMM-pages"
"barnabycolby/MMM-Carousel" -> "MichMich/MMM-WatchDog"
"ianperrin/MMM-ModuleScheduler" -> "MMRIZE/MMM-Remote-Control-Repository"
"ianperrin/MMM-ModuleScheduler" -> "MichMich/MMM-WatchDog"
"ianperrin/MMM-ModuleScheduler" -> "paviro/MMM-syslog"
"ianperrin/MMM-ModuleScheduler" -> "Jopyth/MMM-Remote-Control"
"ianperrin/MMM-ModuleScheduler" -> "edward-shen/MMM-pages"
"ianperrin/MMM-NetworkScanner" -> "ronny3050/internet-monitor"
"ianperrin/MMM-NetworkScanner" -> "BenRoe/MMM-SystemStats"
"ianperrin/MMM-NetworkScanner" -> "MichMich/MMM-WatchDog"
"ianperrin/MMM-NetworkScanner" -> "barnabycolby/MMM-Carousel"
"ianperrin/MMM-NetworkScanner" -> "fewieden/MMM-AlarmClock"
"ianperrin/MMM-NetworkScanner" -> "AgP42/MMM-SmartWebDisplay"
"ianperrin/MMM-NetworkScanner" -> "Gismo150/MMM-GoogleShoppingList"
"ianperrin/MMM-NetworkScanner" -> "ianperrin/MMM-ModuleScheduler"
"Jopyth/MMM-Trello" -> "boazarad/MMM-CountDown"
"Jopyth/MMM-Trello" -> "paviro/MMM-syslog"
"fewieden/MMM-voice" -> "kapsolas/MMM-Instagram"
"fewieden/MMM-voice" -> "ItayXD/MMM-Admin-Interface"
"ronny3050/internet-monitor" -> "fewieden/MMM-ip"
"ronny3050/internet-monitor" -> "slametps/MMM-NetworkConnection"
"ronny3050/internet-monitor" -> "MichMich/MMM-WatchDog"
"fewieden/MMM-AlarmClock" -> "Veldrovive/MMM-Voice-Commands"
"mrusci/ondevice-learning-kws" -> "kaistmm/Metric-UD-KWS"
"mrusci/ondevice-learning-kws" -> "ArchitParnami/Few-Shot-KWS"
"CatoAntonsen/MMM-SpotifyConnectUI" -> "PtrBld/MMM-Scrobbler"
"CatoAntonsen/MMM-SpotifyConnectUI" -> "kapsolas/MMM-Instagram"
"thousandlemons/English-words-pronunciation-mp3-audio-download" -> "sweekarsud/Goodness-of-Pronunciation"
"thousandlemons/English-words-pronunciation-mp3-audio-download" -> "JawadAr/Pronunciation-verification-using-anomaly-detection-Thesis"
"rwth-i6/returnn" -> "rwth-i6/returnn-experiments"
"rwth-i6/returnn" -> "rwth-i6/sisyphus"
"rwth-i6/returnn" -> "rwth-i6/rasr"
"rwth-i6/returnn" -> "cywang97/StreamingTransformer"
"rwth-i6/returnn" -> "HawkAaron/warp-transducer"
"rwth-i6/returnn" -> "1ytic/warp-rnnt"
"rwth-i6/returnn" -> "tencent-ailab/pika"
"rwth-i6/returnn" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"rwth-i6/returnn" -> "hirofumi0810/neural_sp"
"rwth-i6/returnn" -> "YiwenShaoStephen/pychain"
"rwth-i6/returnn" -> "freewym/espresso"
"rwth-i6/returnn" -> "facebookresearch/gtn"
"rwth-i6/returnn" -> "rizar/attention-lvcsr"
"rwth-i6/returnn" -> "wenet-e2e/speech-recognition-papers"
"rwth-i6/returnn" -> "jzlianglu/pykaldi2"
"louiskirsch/speechT" -> "juliuskunze/speechless"
"louiskirsch/speechT" -> "LearnedVector/Wav2Letter"
"gotev/android-speech" -> "zagum/SpeechRecognitionView"
"gotev/android-speech" -> "hiteshsahu/Android-TTS-STT"
"gotev/android-speech" -> "Kaljurand/speechutils"
"gotev/android-speech" -> "vikramezhil/DroidSpeech"
"gotev/android-speech" -> "mozilla/androidspeech"
"gotev/android-speech" -> "AndroidMaryTTS/AndroidMaryTTS" ["e"=1]
"gotev/android-speech" -> "vikramezhil/DroidSpeech2.0"
"gotev/android-speech" -> "alphacep/vosk-android-demo"
"wassgha/MirrorOS" -> "wassgha/LeapMotionTouchScreen"
"wassgha/MirrorOS" -> "wassgha/FaceRecognitionAPI"
"wassgha/MirrorOS" -> "s6joui/MirrorOS"
"BenRoe/MMM-SystemStats" -> "edward-shen/MMM-page-indicator"
"BenRoe/MMM-SystemStats" -> "MichMich/MMM-WatchDog"
"alexyak/motiondetector" -> "alexyak/camera"
"igormq/ctc_tensorflow_example" -> "jonrein/tensorflow_CTC_example"
"igormq/ctc_tensorflow_example" -> "philipperemy/tensorflow-ctc-speech-recognition"
"igormq/ctc_tensorflow_example" -> "synckey/tensorflow_lstm_ctc_ocr" ["e"=1]
"igormq/ctc_tensorflow_example" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"igormq/ctc_tensorflow_example" -> "amaas/stanford-ctc"
"igormq/ctc_tensorflow_example" -> "igormq/asr-study"
"igormq/ctc_tensorflow_example" -> "mindorii/kws"
"igormq/ctc_tensorflow_example" -> "robmsmt/KerasDeepSpeech"
"igormq/ctc_tensorflow_example" -> "KarelVesely84/kaldi-io-for-python"
"igormq/ctc_tensorflow_example" -> "WindQAQ/listen-attend-and-spell"
"igormq/ctc_tensorflow_example" -> "lingochamp/kaldi-ctc"
"igormq/ctc_tensorflow_example" -> "yajiemiao/eesen"
"igormq/ctc_tensorflow_example" -> "domerin0/rnn-speech"
"igormq/ctc_tensorflow_example" -> "awni/speech"
"igormq/ctc_tensorflow_example" -> "srvk/eesen"
"firemodels/smv" -> "firemodels/cfast"
"dspavankumar/keras-kaldi" -> "vrenkens/tfkaldi"
"dspavankumar/keras-kaldi" -> "JRMeyer/multi-task-kaldi"
"dspavankumar/keras-kaldi" -> "gooofy/py-kaldi-asr"
"alexyak/voicecontrol" -> "alexyak/camera"
"openedx-unsupported/ease" -> "nusnlp/nea"
"openedx-unsupported/ease" -> "siyuanzhao/automated-essay-grading"
"openedx-unsupported/ease" -> "VikParuchuri/scan"
"openedx-unsupported/ease" -> "feidong1991/aes"
"openedx-unsupported/ease" -> "dimalik/ats"
"openedx-unsupported/ease" -> "karthikprasad/automated-essay-grader"
"nusnlp/nea" -> "openedx-unsupported/ease"
"nusnlp/nea" -> "feidong1991/aes"
"nusnlp/nea" -> "mankadronit/Automated-Essay--Scoring"
"nusnlp/nea" -> "siyuanzhao/automated-essay-grading"
"nusnlp/nea" -> "benhamner/ASAP-AES"
"nusnlp/nea" -> "Gaurav-Pande/AES_DL"
"nusnlp/nea" -> "Farahn/AES"
"nusnlp/nea" -> "dimalik/ats"
"nusnlp/nea" -> "nusnlp/mlconvgec2018" ["e"=1]
"nusnlp/nea" -> "zlliang/essaysense"
"nusnlp/nea" -> "robert1ridley/cross-prompt-trait-scoring"
"nusnlp/nea" -> "ucasir/TDNN"
"nusnlp/nea" -> "ustcljw/fupugec-score"
"nusnlp/nea" -> "nusnlp/smtgec2017" ["e"=1]
"nusnlp/nea" -> "lingochamp/Multi-Scale-BERT-AES"
"doheejin/HiPAMA" -> "doheejin/SB_loss_PA"
"doheejin/HiPAMA" -> "rhss10/joint-apa-mdd-mtl"
"rwth-i6/returnn-experiments" -> "rwth-i6/returnn"
"rwth-i6/returnn-experiments" -> "rwth-i6/sisyphus"
"rwth-i6/returnn-experiments" -> "1ytic/warp-rnnt"
"rwth-i6/returnn-experiments" -> "rwth-i6/rasr"
"rwth-i6/returnn-experiments" -> "cywang97/StreamingTransformer"
"ianperrin/MMM-Formula1" -> "fewieden/MMM-soccer"
"juice500ml/dysarthria-gop" -> "rhss10/joint-apa-mdd-mtl"
"doheejin/ProTACT" -> "gdufsnlp/PMAES"
"doheejin/ProTACT" -> "robert1ridley/cross-prompt-trait-scoring"
"doheejin/ProTACT" -> "doheejin/SB_loss_PA"
"Qualcomm-AI-research/bcresnet" -> "mrusci/ondevice-learning-kws"
"kaistmm/Metric-UD-KWS" -> "ncsoft/PhonMatchNet"
"kaistmm/Metric-UD-KWS" -> "aizhiqi-work/MM-KWS"
"rhss10/joint-apa-mdd-mtl" -> "doheejin/HiPAMA"
"rhss10/joint-apa-mdd-mtl" -> "doheejin/SB_loss_PA"
"doheejin/SB_loss_PA" -> "doheejin/HiPAMA"
"doheejin/SB_loss_PA" -> "rhss10/joint-apa-mdd-mtl"
"doheejin/SB_loss_PA" -> "doheejin/ProTACT"
"zzw922cn/Automatic_Speech_Recognition" -> "pannous/tensorflow-speech-recognition"
"zzw922cn/Automatic_Speech_Recognition" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"zzw922cn/Automatic_Speech_Recognition" -> "buriburisuri/speech-to-text-wavenet" ["e"=1]
"zzw922cn/Automatic_Speech_Recognition" -> "SeanNaren/deepspeech.pytorch"
"zzw922cn/Automatic_Speech_Recognition" -> "mravanelli/pytorch-kaldi"
"zzw922cn/Automatic_Speech_Recognition" -> "awni/speech"
"zzw922cn/Automatic_Speech_Recognition" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"zzw922cn/Automatic_Speech_Recognition" -> "syhw/wer_are_we"
"zzw922cn/Automatic_Speech_Recognition" -> "audier/DeepSpeechRecognition"
"zzw922cn/Automatic_Speech_Recognition" -> "srvk/eesen"
"zzw922cn/Automatic_Speech_Recognition" -> "flashlight/wav2letter"
"zzw922cn/Automatic_Speech_Recognition" -> "jameslyons/python_speech_features"
"zzw922cn/Automatic_Speech_Recognition" -> "pykaldi/pykaldi"
"zzw922cn/Automatic_Speech_Recognition" -> "silicon-valley-data-science/RNN-Tutorial" ["e"=1]
"zzw922cn/Automatic_Speech_Recognition" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"SeanNaren/deepspeech.pytorch" -> "mravanelli/pytorch-kaldi"
"SeanNaren/deepspeech.pytorch" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"SeanNaren/deepspeech.pytorch" -> "syhw/wer_are_we"
"SeanNaren/deepspeech.pytorch" -> "awni/speech"
"SeanNaren/deepspeech.pytorch" -> "parlance/ctcdecode"
"SeanNaren/deepspeech.pytorch" -> "audier/DeepSpeechRecognition"
"SeanNaren/deepspeech.pytorch" -> "zzw922cn/Automatic_Speech_Recognition"
"SeanNaren/deepspeech.pytorch" -> "kaituoxu/Speech-Transformer"
"SeanNaren/deepspeech.pytorch" -> "srvk/eesen"
"SeanNaren/deepspeech.pytorch" -> "flashlight/wav2letter"
"SeanNaren/deepspeech.pytorch" -> "SeanNaren/warp-ctc" ["e"=1]
"SeanNaren/deepspeech.pytorch" -> "nobody132/masr"
"SeanNaren/deepspeech.pytorch" -> "jameslyons/python_speech_features"
"SeanNaren/deepspeech.pytorch" -> "kpu/kenlm"
"SeanNaren/deepspeech.pytorch" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"Picovoice/picollm" -> "Picovoice/orca"
"Picovoice/picollm" -> "Picovoice/eagle"
"Picovoice/picollm" -> "Picovoice/pico-cookbook"
"Marak/say.js" -> "evancohen/sonus"
"Marak/say.js" -> "Marak/translate.js"
"Marak/say.js" -> "kripken/speak.js"
"Marak/say.js" -> "zlargon/google-tts"
"Marak/say.js" -> "sreuter/node-speakable"
"Marak/say.js" -> "sdkcarlos/artyom.js"
"Marak/say.js" -> "googleapis/nodejs-speech"
"Marak/say.js" -> "watson-developer-cloud/text-to-speech-nodejs" ["e"=1]
"Marak/say.js" -> "cmusphinx/node-pocketsphinx"
"Marak/say.js" -> "Marak/play.js"
"Marak/say.js" -> "hiddentao/google-tts"
"Marak/say.js" -> "Hagsten/Talkify"
"Marak/say.js" -> "googleapis/nodejs-text-to-speech"
"Marak/say.js" -> "Flotype/now" ["e"=1]
"Marak/say.js" -> "syl22-00/pocketsphinx.js"
"marekrei/sequence-labeler" -> "alpoktem/punkProse"
"marekrei/sequence-labeler" -> "vackosar/keras-punctuator"
"marekrei/sequence-labeler" -> "jxwuyi/AtNRE" ["e"=1]
"marekrei/sequence-labeler" -> "chrisjbryant/errant" ["e"=1]
"NervanaSystems/deepspeech" -> "baidu-research/ba-dls-deepspeech"
"NervanaSystems/deepspeech" -> "SeanNaren/deepspeech.torch" ["e"=1]
"NervanaSystems/deepspeech" -> "yajiemiao/eesen"
"NervanaSystems/deepspeech" -> "rizar/attention-lvcsr"
"NervanaSystems/deepspeech" -> "jonrein/tensorflow_CTC_example"
"NervanaSystems/deepspeech" -> "srvk/eesen"
"jimbozhang/kaldi-gop" -> "tbright17/kaldi-dnn-ali-gop"
"jimbozhang/kaldi-gop" -> "sweekarsud/Goodness-of-Pronunciation"
"jimbozhang/kaldi-gop" -> "jimbozhang/speechocean762"
"jimbozhang/kaldi-gop" -> "YuanGongND/gopt"
"jimbozhang/kaldi-gop" -> "moisesveleta/GOP-LSTM"
"jimbozhang/kaldi-gop" -> "tzyll/goparrot"
"jimbozhang/kaldi-gop" -> "JazminVidal/gop-dnn-epadb"
"jimbozhang/kaldi-gop" -> "dialogflow/asr-server"
"jimbozhang/kaldi-gop" -> "XiaoMi/kaldi-onnx"
"jimbozhang/kaldi-gop" -> "ai-zahran/E2E-R"
"jimbozhang/kaldi-gop" -> "danijel3/KaldiWebrtcServer"
"HackerShackOfficial/AI-Smart-Mirror" -> "HackerShackOfficial/Smart-Mirror"
"HackerShackOfficial/AI-Smart-Mirror" -> "paviro/MMM-Facial-Recognition"
"HackerShackOfficial/AI-Smart-Mirror" -> "evancohen/smart-mirror"
"HackerShackOfficial/AI-Smart-Mirror" -> "HackerShackOfficial/Smart-Security-Camera"
"HackerShackOfficial/AI-Smart-Mirror" -> "aishmittal/Smart-Mirror"
"HackerShackOfficial/AI-Smart-Mirror" -> "wassgha/MirrorOS"
"HackerShackOfficial/AI-Smart-Mirror" -> "paviro/MMM-PIR-Sensor"
"HackerShackOfficial/AI-Smart-Mirror" -> "HackerShackOfficial/Smartphone-Doorlock"
"HackerShackOfficial/AI-Smart-Mirror" -> "MicrosoftEdge/magic-mirror-demo"
"HackerShackOfficial/AI-Smart-Mirror" -> "maxbbraun/mirror"
"HackerShackOfficial/AI-Smart-Mirror" -> "jakkra/SmartMirror"
"HackerShackOfficial/AI-Smart-Mirror" -> "shivasiddharth/GassistPi" ["e"=1]
"LukeSkywalker92/MMM-Globe" -> "MichMich/MMM-WatchDog"
"tosti007/MMM-ProfileSwitcher" -> "shbatm/MMM-KeyBindings"
"joanaz/MirrorMirrorOnTheWallSkill" -> "joanaz/MMM-MirrorMirrorOnTheWall"
"joanaz/MMM-MirrorMirrorOnTheWall" -> "joanaz/MirrorMirrorOnTheWallSkill"
"joanaz/MMM-MirrorMirrorOnTheWall" -> "shbatm/MMM-OnScreenMenu"
"joanaz/MMM-MirrorMirrorOnTheWall" -> "alexyak/camera"
"joanaz/MMM-MirrorMirrorOnTheWall" -> "fewieden/MMM-AlarmClock"
"joanaz/MMM-MirrorMirrorOnTheWall" -> "tosti007/MMM-ProfileSwitcher"
"llSourcell/tensorflow_speech_recognition_demo" -> "pannous/tensorflow-speech-recognition"
"llSourcell/tensorflow_speech_recognition_demo" -> "mickvanhulst/tf_chatbot_lotr"
"llSourcell/tensorflow_speech_recognition_demo" -> "igormq/ctc_tensorflow_example"
"llSourcell/tensorflow_speech_recognition_demo" -> "lingochamp/kaldi-ctc"
"llSourcell/tensorflow_speech_recognition_demo" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"lingochamp/kaldi-ctc" -> "srvk/eesen"
"lingochamp/kaldi-ctc" -> "yajiemiao/eesen"
"lingochamp/kaldi-ctc" -> "HawkAaron/warp-transducer"
"lingochamp/kaldi-ctc" -> "aishell-foundation/DaCiDian"
"lingochamp/kaldi-ctc" -> "vrenkens/tfkaldi"
"lingochamp/kaldi-ctc" -> "tbright17/kaldi-dnn-ali-gop"
"lingochamp/kaldi-ctc" -> "thu-spmi/CAT"
"lingochamp/kaldi-ctc" -> "HawkAaron/RNN-Transducer"
"lingochamp/kaldi-ctc" -> "rizar/attention-lvcsr"
"lingochamp/kaldi-ctc" -> "SeanNaren/deepspeech.torch" ["e"=1]
"lingochamp/kaldi-ctc" -> "dspavankumar/keras-kaldi"
"lingochamp/kaldi-ctc" -> "XiaoMi/kaldi-onnx"
"lingochamp/kaldi-ctc" -> "cywang97/StreamingTransformer"
"lingochamp/kaldi-ctc" -> "nttcslab-sp/kaldiio"
"lingochamp/kaldi-ctc" -> "1ytic/warp-rnnt"
"chenyangMl/keyword-spot" -> "modelscope/kws-training-suite"
"chenyangMl/keyword-spot" -> "wenet-e2e/wekws"
"chenyangMl/keyword-spot" -> "Xiaobin-Rong/TRT-SE" ["e"=1]
"chenyangMl/keyword-spot" -> "duj12/kws_demo"
"chenyangMl/keyword-spot" -> "YoungJay0612/Single-Channel-Speech-Enhancement"
"gooofy/py-kaldi-asr" -> "gooofy/zamia-speech"
"gooofy/py-kaldi-asr" -> "alumae/gst-kaldi-nnet2-online"
"gooofy/py-kaldi-asr" -> "dspavankumar/keras-kaldi"
"gooofy/py-kaldi-asr" -> "jzlianglu/pykaldi2"
"gooofy/py-kaldi-asr" -> "dialogflow/asr-server"
"s6joui/MirrorOS" -> "wassgha/MirrorOS"
"HackerShackOfficial/Tracking-Turret" -> "matt-desmarais/SentryTurret"
"HackerShackOfficial/Tracking-Turret" -> "decentropy/SentryTurret"
"vrenkens/nabu" -> "v0lta/Listen-attend-and-spell"
"vrenkens/nabu" -> "vrenkens/tfkaldi"
"vrenkens/nabu" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"igormq/asr-study" -> "igormq/aes-lac-2018"
"juliuskunze/speechless" -> "louiskirsch/speechT"
"juliuskunze/speechless" -> "transfer-learning-asr/transfer-learning-asr"
"juliuskunze/speechless" -> "LearnedVector/Wav2Letter"
"sheyabernstein/MMM-pihole-stats" -> "XBCreepinJesus/MMM-ServerStatus"
"sheyabernstein/MMM-pihole-stats" -> "ianperrin/MMM-NetworkScanner"
"jpuigcerver/kaldi-decoders" -> "robin1001/xdecoder"
"jpuigcerver/kaldi-decoders" -> "opendcd/opendcd"
"jpuigcerver/kaldi-decoders" -> "chenzhehuai/kaldi-decoders"
"Picovoice/orca" -> "Picovoice/eagle"
"v0lta/Listen-attend-and-spell" -> "vrenkens/nabu"
"C-Loftus/talon-ai-tools" -> "wolfmanstout/talon-gaze-ocr"
"C-Loftus/talon-ai-tools" -> "chaosparrot/talon_hud"
"C-Loftus/talon-ai-tools" -> "phillco/talon-axkit"
"C-Loftus/talon-ai-tools" -> "paul-schaaf/talon-filetree"
"ottokart/sequence-labeler" -> "alpoktem/punkProse"
"nl8590687/ASRT_SpeechRecognition" -> "nobody132/masr"
"nl8590687/ASRT_SpeechRecognition" -> "audier/DeepSpeechRecognition"
"nl8590687/ASRT_SpeechRecognition" -> "kaldi-asr/kaldi"
"nl8590687/ASRT_SpeechRecognition" -> "PaddlePaddle/PaddleSpeech" ["e"=1]
"nl8590687/ASRT_SpeechRecognition" -> "wenet-e2e/wenet"
"nl8590687/ASRT_SpeechRecognition" -> "xxbb1234021/speech_recognition"
"nl8590687/ASRT_SpeechRecognition" -> "espnet/espnet"
"nl8590687/ASRT_SpeechRecognition" -> "modelscope/FunASR" ["e"=1]
"nl8590687/ASRT_SpeechRecognition" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"nl8590687/ASRT_SpeechRecognition" -> "flashlight/wav2letter"
"nl8590687/ASRT_SpeechRecognition" -> "shibing624/pycorrector" ["e"=1]
"nl8590687/ASRT_SpeechRecognition" -> "mravanelli/pytorch-kaldi"
"nl8590687/ASRT_SpeechRecognition" -> "ymcui/Chinese-BERT-wwm" ["e"=1]
"nl8590687/ASRT_SpeechRecognition" -> "speechbrain/speechbrain"
"nl8590687/ASRT_SpeechRecognition" -> "zw76859420/ASR_Theory"
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "zzw922cn/Automatic_Speech_Recognition"
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "wenet-e2e/speech-synthesis-paper" ["e"=1]
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "espnet/espnet"
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "mravanelli/pytorch-kaldi"
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "syhw/wer_are_we"
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "s3prl/s3prl" ["e"=1]
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "wenet-e2e/wenet"
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "jik876/hifi-gan" ["e"=1]
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "kan-bayashi/ParallelWaveGAN" ["e"=1]
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "wq2012/awesome-diarization" ["e"=1]
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "k2-fsa/k2"
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "jameslyons/python_speech_features"
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "srvk/eesen"
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "ming024/FastSpeech2" ["e"=1]
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" -> "MontrealCorpusTools/Montreal-Forced-Aligner" ["e"=1]
"yh1008/speech-to-text" -> "JRMeyer/multi-task-kaldi"
"gooofy/zamia-speech" -> "gooofy/py-kaldi-asr"
"gooofy/zamia-speech" -> "uhh-lt/kaldi-tuda-de"
"gooofy/zamia-speech" -> "daanzu/kaldi-active-grammar"
"gooofy/zamia-speech" -> "alumae/gst-kaldi-nnet2-online"
"gooofy/zamia-speech" -> "YoavRamon/awesome-kaldi"
"gooofy/zamia-speech" -> "alumae/kaldi-gstreamer-server"
"gooofy/zamia-speech" -> "jzlianglu/pykaldi2"
"gooofy/zamia-speech" -> "gooofy/kaldi-adapt-lm"
"gooofy/zamia-speech" -> "AdolfVonKleist/Phonetisaurus" ["e"=1]
"gooofy/zamia-speech" -> "pykaldi/pykaldi"
"gooofy/zamia-speech" -> "cmusphinx/g2p-seq2seq"
"gooofy/zamia-speech" -> "jimbozhang/kaldi-gop"
"gooofy/zamia-speech" -> "ynop/audiomate"
"gooofy/zamia-speech" -> "coqui-ai/open-speech-corpora" ["e"=1]
"gooofy/zamia-speech" -> "jcsilva/docker-kaldi-gstreamer-server"
"bastilimbach/docker-MagicMirror" -> "jclarke0000/MMM-DarkSkyForecast"
"bastilimbach/docker-MagicMirror" -> "cowboysdude/MMM-NOAA3"
"ling0322/CatEars" -> "chenzhehuai/kaldi-decoders"
"geyang/deep-auto-punctuation" -> "ottokart/punctuator"
"geyang/deep-auto-punctuation" -> "kaituoxu/X-Punctuator"
"geyang/deep-auto-punctuation" -> "bedapudi6788/deepcorrect"
"geyang/deep-auto-punctuation" -> "ottokart/punctuator2"
"geyang/deep-auto-punctuation" -> "vackosar/keras-punctuator"
"dolanmiu/MMM-awesome-alexa" -> "sakirtemel/MMM-alexa"
"dolanmiu/MMM-awesome-alexa" -> "joanaz/MMM-MirrorMirrorOnTheWall"
"dolanmiu/MMM-awesome-alexa" -> "saml-dev/MMM-Traffic"
"dolanmiu/MMM-awesome-alexa" -> "BenRoe/MMM-SystemStats"
"dolanmiu/MMM-awesome-alexa" -> "paviro/MMM-PIR-Sensor"
"dolanmiu/MMM-awesome-alexa" -> "fewieden/MMM-voice"
"dolanmiu/MMM-awesome-alexa" -> "gauravsacc/MMM-GoogleAssistant"
"dolanmiu/MMM-awesome-alexa" -> "Jopyth/MMM-Remote-Control"
"dolanmiu/MMM-awesome-alexa" -> "edward-shen/MMM-pages"
"dolanmiu/MMM-awesome-alexa" -> "fewieden/MMM-AlarmClock"
"dolanmiu/MMM-awesome-alexa" -> "barnabycolby/MMM-Carousel"
"dolanmiu/MMM-awesome-alexa" -> "JosefJantzen/MMM-AlexaControl"
"sentryGun53/Project-Sentry-Gun" -> "matt-desmarais/SentryTurret"
"vackosar/keras-punctuator" -> "alpoktem/punkProse"
"vackosar/keras-punctuator" -> "ottokart/punctuator"
"vackosar/keras-punctuator" -> "kaituoxu/X-Punctuator"
"vackosar/keras-punctuator" -> "ottokart/sequence-labeler"
"vackosar/keras-punctuator" -> "ottokart/punctuator2"
"aizhiqi-work/MM-KWS" -> "ncsoft/PhonMatchNet"
"aizhiqi-work/MM-KWS" -> "kaistmm/Metric-UD-KWS"
"nateshmbhat/pyttsx3" -> "pndurette/gTTS" ["e"=1]
"nateshmbhat/pyttsx3" -> "Uberi/speech_recognition"
"nateshmbhat/pyttsx3" -> "espeak-ng/espeak-ng" ["e"=1]
"nateshmbhat/pyttsx3" -> "mozilla/TTS" ["e"=1]
"nateshmbhat/pyttsx3" -> "Renovamen/Speech-and-Text" ["e"=1]
"nateshmbhat/pyttsx3" -> "jiaaro/pydub"
"nateshmbhat/pyttsx3" -> "TensorSpeech/TensorFlowTTS" ["e"=1]
"nateshmbhat/pyttsx3" -> "spatialaudio/python-sounddevice" ["e"=1]
"nateshmbhat/pyttsx3" -> "asweigart/pyautogui" ["e"=1]
"nateshmbhat/pyttsx3" -> "rany2/edge-tts" ["e"=1]
"nateshmbhat/pyttsx3" -> "coqui-ai/TTS" ["e"=1]
"nateshmbhat/pyttsx3" -> "alphacep/vosk-api"
"nateshmbhat/pyttsx3" -> "Zulko/moviepy" ["e"=1]
"nateshmbhat/pyttsx3" -> "Ankit404butfound/PyWhatKit" ["e"=1]
"nateshmbhat/pyttsx3" -> "KoljaB/RealtimeTTS" ["e"=1]
"common-voice/common-voice" -> "mozilla/DeepSpeech"
"common-voice/common-voice" -> "coqui-ai/STT"
"common-voice/common-voice" -> "mozilla/TTS" ["e"=1]
"common-voice/common-voice" -> "keithito/tacotron" ["e"=1]
"common-voice/common-voice" -> "flashlight/wav2letter"
"common-voice/common-voice" -> "mozilla/DeepSpeech-examples"
"common-voice/common-voice" -> "common-voice/sentence-collector"
"common-voice/common-voice" -> "MycroftAI/mycroft-core" ["e"=1]
"common-voice/common-voice" -> "syhw/wer_are_we"
"common-voice/common-voice" -> "mozilla-extensions/firefox-voice"
"common-voice/common-voice" -> "kaldi-asr/kaldi"
"common-voice/common-voice" -> "mravanelli/pytorch-kaldi"
"common-voice/common-voice" -> "coqui-ai/open-speech-corpora" ["e"=1]
"common-voice/common-voice" -> "zzw922cn/awesome-speech-recognition-speech-synthesis-papers"
"common-voice/common-voice" -> "espnet/espnet"
"parlance/ctcdecode" -> "githubharald/CTCDecoder"
"parlance/ctcdecode" -> "kensho-technologies/pyctcdecode"
"parlance/ctcdecode" -> "githubharald/CTCWordBeamSearch"
"parlance/ctcdecode" -> "kpu/kenlm"
"parlance/ctcdecode" -> "SeanNaren/deepspeech.pytorch"
"parlance/ctcdecode" -> "hirofumi0810/neural_sp"
"parlance/ctcdecode" -> "thu-spmi/CAT"
"parlance/ctcdecode" -> "SeanNaren/warp-ctc" ["e"=1]
"parlance/ctcdecode" -> "nanoporetech/fast-ctc-decode" ["e"=1]
"parlance/ctcdecode" -> "srvk/eesen"
"parlance/ctcdecode" -> "k2-fsa/k2"
"parlance/ctcdecode" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"parlance/ctcdecode" -> "HawkAaron/warp-transducer"
"parlance/ctcdecode" -> "awni/speech"
"parlance/ctcdecode" -> "1ytic/warp-rnnt"
"googleapis/nodejs-speech" -> "googleapis/nodejs-text-to-speech"
"googleapis/nodejs-speech" -> "vin-ni/Google-Cloud-Speech-Node-Socket-Playground"
"googleapis/nodejs-speech" -> "googleapis/nodejs-language"
"googleapis/nodejs-speech" -> "fostermadeco/audio-to-text-gcloud"
"googleapis/nodejs-speech" -> "gillesdemey/node-record-lpcm16"
"googleapis/nodejs-speech" -> "googleapis/python-speech"
"googleapis/nodejs-speech" -> "googleapis/nodejs-storage" ["e"=1]
"googleapis/nodejs-speech" -> "googleapis/nodejs-video-intelligence"
"googleapis/nodejs-speech" -> "Marak/say.js"
"conworkshop/conworkshop" -> "yuhr/langue"
"vikramezhil/DroidSpeech" -> "vikramezhil/DroidSpeech2.0"
"vikramezhil/DroidSpeech" -> "maxwellobi/Android-Speech-Recognition"
"awni/speech" -> "Alexander-H-Liu/End-to-end-ASR-Pytorch"
"awni/speech" -> "HawkAaron/E2E-ASR"
"awni/speech" -> "hirofumi0810/neural_sp"
"awni/speech" -> "SeanNaren/deepspeech.pytorch"
"awni/speech" -> "HawkAaron/warp-transducer"
"awni/speech" -> "HawkAaron/RNN-Transducer"
"awni/speech" -> "srvk/eesen"
"awni/speech" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"awni/speech" -> "mravanelli/pytorch-kaldi"
"awni/speech" -> "gentaiscool/end2end-asr-pytorch"
"awni/speech" -> "kaituoxu/Speech-Transformer"
"awni/speech" -> "pykaldi/pykaldi"
"awni/speech" -> "parlance/ctcdecode"
"awni/speech" -> "syhw/wer_are_we"
"awni/speech" -> "awni/transducer"
"pykaldi/pykaldi" -> "KarelVesely84/kaldi-io-for-python"
"pykaldi/pykaldi" -> "mravanelli/pytorch-kaldi"
"pykaldi/pykaldi" -> "k2-fsa/k2"
"pykaldi/pykaldi" -> "YoavRamon/awesome-kaldi"
"pykaldi/pykaldi" -> "lhotse-speech/lhotse"
"pykaldi/pykaldi" -> "jzlianglu/pykaldi2"
"pykaldi/pykaldi" -> "nttcslab-sp/kaldiio"
"pykaldi/pykaldi" -> "srvk/eesen"
"pykaldi/pykaldi" -> "freewym/espresso"
"pykaldi/pykaldi" -> "alumae/kaldi-gstreamer-server"
"pykaldi/pykaldi" -> "XiaoMi/kaldi-onnx"
"pykaldi/pykaldi" -> "syhw/wer_are_we"
"pykaldi/pykaldi" -> "kaituoxu/Speech-Transformer"
"pykaldi/pykaldi" -> "tencent-ailab/pika"
"pykaldi/pykaldi" -> "mravanelli/SincNet" ["e"=1]
"colinsongf/keyword_spotting" -> "mindorii/kws"
"colinsongf/keyword_spotting" -> "castorini/honk"
"colinsongf/keyword_spotting" -> "hyperconnect/TC-ResNet"
"colinsongf/keyword_spotting" -> "yltw27/KeywordSpotting"
"colinsongf/keyword_spotting" -> "zycv/awesome-keyword-spotting"
"colinsongf/keyword_spotting" -> "xiangxyq/kaldi"
"colinsongf/keyword_spotting" -> "sonos/keyword-spotting-research-datasets"
"colinsongf/keyword_spotting" -> "ARM-software/ML-KWS-for-MCU"
"colinsongf/keyword_spotting" -> "wenet-e2e/wekws"
"colinsongf/keyword_spotting" -> "jingyonghou/RPN_KWS"
"colinsongf/keyword_spotting" -> "dzhelonkin/kaldi_kws"
"colinsongf/keyword_spotting" -> "vineeths96/Spoken-Keyword-Spotting"
"colinsongf/keyword_spotting" -> "jingyonghou/KWS_Max-pooling_RHE"
"colinsongf/keyword_spotting" -> "harvard-edge/multilingual_kws"
"googleapis/nodejs-vision" -> "googleapis/nodejs-video-intelligence"
"googleapis/nodejs-vision" -> "FredKSchott/pika-pack-builders"
"googleapis/nodejs-vision" -> "googleapis/nodejs-translate"
"googleapis/nodejs-vision" -> "googleapis/nodejs-text-to-speech"
"googleapis/nodejs-vision" -> "googleapis/nodejs-storage" ["e"=1]
"googleapis/nodejs-vision" -> "googleapis/nodejs-tasks" ["e"=1]
"googleapis/nodejs-vision" -> "googleapis/nodejs-language"
"dictation-toolbox/dragonfly" -> "dictation-toolbox/Caster"
"dictation-toolbox/dragonfly" -> "daanzu/kaldi-active-grammar"
"dictation-toolbox/dragonfly" -> "dictation-toolbox/aenea"
"dictation-toolbox/dragonfly" -> "wolfmanstout/dragonfly-commands"
"dictation-toolbox/dragonfly" -> "dictation-toolbox/dragonfly-scripts"
"dictation-toolbox/dragonfly" -> "t4ngo/dragonfly"
"dictation-toolbox/dragonfly" -> "mirober/Breathe"
"dictation-toolbox/dragonfly" -> "dictation-toolbox/natlink"
"dictation-toolbox/dragonfly" -> "simianhacker/code-by-voice"
"dictation-toolbox/dragonfly" -> "talonhub/community"
"dictation-toolbox/dragonfly" -> "talonvoice/draconity"
"dictation-toolbox/dragonfly" -> "dwks/silvius"
"dictation-toolbox/dragonfly" -> "chaosparrot/parrot.py"
"dictation-toolbox/dragonfly" -> "t4ngo/dragonfly-modules"
"googleapis/nodejs-translate" -> "googleapis/nodejs-language"
"googleapis/nodejs-translate" -> "googleapis/nodejs-text-to-speech"
"googleapis/nodejs-translate" -> "googleapis/nodejs-vision"
"jclarke0000/MMM-MyCommute" -> "jclarke0000/MMM-MyCalendar"
"shbatm/MMM-OnScreenMenu" -> "tosti007/MMM-ProfileSwitcher"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "hirofumi0810/asr_preprocessing"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "vrenkens/nabu"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "igormq/ctc_tensorflow_example"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "rizar/attention-lvcsr"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "domerin0/rnn-speech"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "HawkAaron/RNN-Transducer"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "hirofumi0810/neural_sp"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "Kyubyong/tacotron_asr" ["e"=1]
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "mdangschat/ctc-asr"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "awni/speech"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "zw76859420/ASR_Syllable"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "philipperemy/tensorflow-ctc-speech-recognition"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "rwth-i6/returnn"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "weedwind/CTC-speech-recognition"
"hirofumi0810/tensorflow_end2end_speech_recognition" -> "zzw922cn/Automatic_Speech_Recognition"
"edward-shen/MMM-page-indicator" -> "edward-shen/MMM-pages"
"edward-shen/MMM-pages" -> "edward-shen/MMM-page-indicator"
"edward-shen/MMM-pages" -> "pinsdorf/MMM-WeeklySchedule"
"edward-shen/MMM-pages" -> "Veldrovive/MMM-Page-Selector"
"edward-shen/MMM-pages" -> "BenRoe/MMM-SystemStats"
"edward-shen/MMM-pages" -> "ianperrin/MMM-ModuleScheduler"
"edward-shen/MMM-pages" -> "TeraTech/MMM-WiFiPassword"
"edward-shen/MMM-pages" -> "shbatm/MMM-OnScreenMenu"
"tsroten/zhon" -> "tsroten/hanzidentifier"
"tsroten/zhon" -> "speechio/chinese_text_normalization"
"AshleyF/VimSpeak" -> "wolfmanstout/dragonfly-commands"
"AshleyF/VimSpeak" -> "simianhacker/code-by-voice"
"gauravsacc/MMM-GoogleAssistant" -> "Matzefication/MMM-Hello-Mirror"
"gauravsacc/MMM-GoogleAssistant" -> "fewieden/MMM-AlarmClock"
"gauravsacc/MMM-GoogleAssistant" -> "sathyarajv/MMM-OpenmapWeather"
"gauravsacc/MMM-GoogleAssistant" -> "ferferga/MMM-GoogleCast"
"gauravsacc/MMM-GoogleAssistant" -> "BenRoe/MMM-SystemStats"
"gauravsacc/MMM-GoogleAssistant" -> "paviro/MMM-PIR-Sensor"
"gauravsacc/MMM-GoogleAssistant" -> "edward-shen/MMM-pages"
"gauravsacc/MMM-GoogleAssistant" -> "Jopyth/MMM-Remote-Control"
"gauravsacc/MMM-GoogleAssistant" -> "bugsounet/MMM-AssistantMk2"
"philipperemy/tensorflow-ctc-speech-recognition" -> "igormq/ctc_tensorflow_example"
"googleapis/nodejs-language" -> "googleapis/nodejs-video-intelligence"
"Susurrus-LLC/langua" -> "nai888/awkwords"
"tsroten/hanzidentifier" -> "tsroten/dragonmapper"
"yuhr/langue" -> "conworkshop/conworkshop"
"alpoktem/punkProse" -> "ottokart/sequence-labeler"
"alpoktem/punkProse" -> "vackosar/keras-punctuator"
"alpoktem/punkProse" -> "ottokart/punctuator"
"hirofumi0810/asr_preprocessing" -> "hirofumi0810/tensorflow_end2end_speech_recognition"
"feidong1991/aes" -> "dimalik/ats"
"feidong1991/aes" -> "nusnlp/nea"
"cmusphinx/pocketsphinx" ["l"="35.332,2.489"]
"cmusphinx/sphinxbase" ["l"="35.347,2.516"]
"cmusphinx/sphinx4" ["l"="35.376,2.5"]
"cmusphinx/pocketsphinx-android-demo" ["l"="35.374,2.544"]
"Kitt-AI/snowboy" ["l"="35.568,1.422"]
"kaldi-asr/kaldi" ["l"="35.433,2.375"]
"cmusphinx/pocketsphinx-python" ["l"="35.308,2.528"]
"Uberi/speech_recognition" ["l"="35.342,2.39"]
"Picovoice/porcupine" ["l"="35.441,2.558"]
"alphacep/vosk-api" ["l"="35.425,2.443"]
"julius-speech/julius" ["l"="35.376,2.442"]
"jasperproject/jasper-client" ["l"="35.842,3.18"]
"syl22-00/pocketsphinx.js" ["l"="35.183,2.544"]
"cmusphinx/pocketsphinx-android" ["l"="35.342,2.547"]
"cmusphinx/sphinxtrain" ["l"="35.329,2.535"]
"bambocher/pocketsphinx-python" ["l"="35.267,2.511"]
"zenorocha/voice-elements" ["l"="35.109,2.55"]
"zzmp/juliusjs" ["l"="35.143,2.545"]
"zenorocha/browser-diet" ["l"="4.858,-22.084"]
"bendavis78/paper-date-picker" ["l"="-8.6,-24.652"]
"gorork/paper-audio-player" ["l"="-8.597,-24.614"]
"AASHISHAG/deepspeech-german" ["l"="35.627,2.516"]
"uhh-lt/kaldi-tuda-de" ["l"="35.661,2.504"]
"DanBmh/deepspeech-german" ["l"="35.598,2.49"]
"thorstenMueller/Thorsten-Voice" ["l"="37.292,2.332"]
"ynop/audiomate" ["l"="35.685,2.554"]
"gooofy/zamia-speech" ["l"="35.673,2.483"]
"AASHISHAG/DeepSpeech-API" ["l"="35.638,2.568"]
"ynop/deepspeech-german" ["l"="35.664,2.542"]
"mozilla/DeepSpeech-examples" ["l"="35.525,2.453"]
"mozilla/DeepSpeech" ["l"="35.353,2.34"]
"pannous/tensorflow-speech-recognition" ["l"="35.519,2.312"]
"nl8590687/ASRT_SpeechRecognition" ["l"="35.478,2.231"]
"zzw922cn/Automatic_Speech_Recognition" ["l"="35.539,2.262"]
"tyiannak/pyAudioAnalysis" ["l"="38.365,4.176"]
"jiaaro/pydub" ["l"="35.301,2.29"]
"buriburisuri/speech-to-text-wavenet" ["l"="37.042,2.54"]
"librosa/librosa" ["l"="38.441,4.098"]
"nateshmbhat/pyttsx3" ["l"="35.267,2.375"]
"espnet/espnet" ["l"="35.458,2.306"]
"speechbrain/speechbrain" ["l"="35.41,2.293"]
"flashlight/wav2letter" ["l"="35.493,2.336"]
"TalAter/annyang" ["l"="35.097,2.608"]
"TalAter/SpeechKITT" ["l"="35.08,2.642"]
"sdkcarlos/artyom.js" ["l"="35.071,2.578"]
"evancohen/smart-mirror" ["l"="34.846,2.79"]
"TalAter/UpUp" ["l"="22.69,-26.958"]
"eduardolundgren/tracking.js" ["l"="-31.549,-35.671"]
"jeromeetienne/AR.js" ["l"="-31.484,-35.797"]
"spencermountain/compromise" ["l"="-32.776,-35.941"]
"NaturalNode/natural" ["l"="-32.72,-35.927"]
"mdn/web-speech-api" ["l"="35.06,2.537"]
"cazala/synaptic" ["l"="-32.63,-35.896"]
"auduno/clmtrackr" ["l"="-31.512,-35.653"]
"harthur/brain" ["l"="-32.686,-35.946"]
"kaituoxu/Speech-Transformer" ["l"="35.651,2.268"]
"gentaiscool/end2end-asr-pytorch" ["l"="35.686,2.244"]
"ZhengkunTian/OpenTransformer" ["l"="35.708,2.299"]
"kaituoxu/Listen-Attend-Spell" ["l"="35.693,2.224"]
"Alexander-H-Liu/End-to-end-ASR-Pytorch" ["l"="35.615,2.271"]
"hirofumi0810/neural_sp" ["l"="35.693,2.309"]
"wenet-e2e/speech-recognition-papers" ["l"="35.69,2.333"]
"cywang97/StreamingTransformer" ["l"="35.726,2.329"]
"mravanelli/pytorch-kaldi" ["l"="35.563,2.316"]
"audier/DeepSpeechRecognition" ["l"="35.56,2.235"]
"HawkAaron/warp-transducer" ["l"="35.689,2.295"]
"zcaceres/spec_augment" ["l"="35.689,2.265"]
"ZhengkunTian/rnn-transducer" ["l"="35.723,2.268"]
"zw76859420/ASR_Theory" ["l"="35.587,2.239"]
"xingchensong/Speech-Transformer-tf2.0" ["l"="35.736,2.193"]
"ZhengkunTian/Speech-Tranformer-Pytorch" ["l"="35.666,2.196"]
"HawkAaron/E2E-ASR" ["l"="35.702,2.241"]
"foamliu/Speech-Transformer" ["l"="35.732,2.235"]
"Diamondfan/CTC_pytorch" ["l"="35.693,2.201"]
"awni/speech" ["l"="35.631,2.255"]
"by2101/OpenASR" ["l"="35.739,2.224"]
"thu-spmi/CAT" ["l"="35.708,2.337"]
"audioku/meta-transfer-learning" ["l"="56.864,29.26"]
"openspeech-team/openspeech" ["l"="35.761,2.278"]
"wenet-e2e/wenet" ["l"="35.55,2.34"]
"s3prl/s3prl" ["l"="37.227,2.374"]
"asteroid-team/asteroid" ["l"="36.723,4.312"]
"kan-bayashi/ParallelWaveGAN" ["l"="37.256,2.466"]
"NVIDIA/NeMo" ["l"="38.896,-0.862"]
"zzw922cn/awesome-speech-recognition-speech-synthesis-papers" ["l"="35.52,2.286"]
"pyannote/pyannote-audio" ["l"="40.503,3.253"]
"NVIDIA/tacotron2" ["l"="37.171,2.451"]
"jik876/hifi-gan" ["l"="37.255,2.425"]
"k2-fsa/k2" ["l"="35.642,2.36"]
"ming024/FastSpeech2" ["l"="37.269,2.404"]
"marytts/marytts" ["l"="37.062,2.41"]
"lkuza2/java-speech-api" ["l"="35.396,2.606"]
"cmusphinx/cmudict" ["l"="37.35,2.258"]
"alumae/kaldi-gstreamer-server" ["l"="35.622,2.441"]
"cmusphinx/g2p-seq2seq" ["l"="35.569,2.419"]
"kkroening/ffmpeg-python" ["l"="44.366,20.212"]
"Zulko/moviepy" ["l"="44.29,20.206"]
"wiseman/py-webrtcvad" ["l"="36.78,4.48"]
"worldveil/dejavu" ["l"="38.277,4.263"]
"jameslyons/python_speech_features" ["l"="35.493,2.279"]
"snakers4/silero-vad" ["l"="40.53,3.28"]
"aubio/aubio" ["l"="38.445,4.13"]
"syhw/wer_are_we" ["l"="35.584,2.32"]
"flashlight/flashlight" ["l"="47.672,29.267"]
"SeanNaren/deepspeech.pytorch" ["l"="35.566,2.283"]
"srvk/eesen" ["l"="35.615,2.314"]
"kpu/kenlm" ["l"="35.58,2.371"]
"nobody132/masr" ["l"="35.567,2.196"]
"xxbb1234021/speech_recognition" ["l"="35.566,2.17"]
"alibaba/Alibaba-MIT-Speech" ["l"="35.611,2.296"]
"sailist/ASRFrame" ["l"="35.54,2.184"]
"zw76859420/ASR_Syllable" ["l"="35.6,2.181"]
"mindorii/kws" ["l"="35.587,2.449"]
"athena-team/athena" ["l"="50.614,2.815"]
"NVIDIA/OpenSeq2Seq" ["l"="35.59,2.347"]
"NVIDIA/waveglow" ["l"="37.21,2.503"]
"freewym/espresso" ["l"="35.692,2.353"]
"tensorflow/lingvo" ["l"="35.536,2.371"]
"TensorSpeech/TensorFlowASR" ["l"="35.666,2.329"]
"pykaldi/pykaldi" ["l"="35.62,2.358"]
"Rayhane-mamah/Tacotron-2" ["l"="37.17,2.478"]
"xiph/LPCNet" ["l"="37.232,2.476"]
"yeyupiaoling/MASR" ["l"="35.622,2.188"]
"yeyupiaoling/PaddlePaddle-DeepSpeech" ["l"="35.607,2.047"]
"binzhouchn/masr" ["l"="-54.574,-14.53"]
"xdcesc/my_ch_speech_recognition" ["l"="35.556,2.136"]
"Z-yq/TensorflowASR" ["l"="35.651,2.249"]
"lucko515/speech-recognition-neural-network" ["l"="35.717,2.051"]
"robmsmt/KerasDeepSpeech" ["l"="35.665,2.179"]
"manashmandal/DeadSimpleSpeechRecognizer" ["l"="35.747,2.006"]
"mravanelli/SincNet" ["l"="37.062,3.234"]
"jtkim-kaist/VAD" ["l"="36.765,4.511"]
"KarelVesely84/kaldi-io-for-python" ["l"="35.679,2.347"]
"Picovoice/rhino" ["l"="35.441,2.66"]
"MycroftAI/mycroft-precise" ["l"="35.519,2.542"]
"Picovoice/picovoice" ["l"="35.452,2.62"]
"dscripka/openWakeWord" ["l"="-14.664,-39.084"]
"Picovoice/cheetah" ["l"="35.468,2.643"]
"seasalt-ai/snowboy" ["l"="35.488,2.575"]
"ARM-software/ML-KWS-for-MCU" ["l"="35.537,2.486"]
"rhasspy/rhasspy" ["l"="-14.502,-39.085"]
"wenet-e2e/wekws" ["l"="35.574,2.465"]
"aishell-foundation/DaCiDian" ["l"="35.668,2.381"]
"speechio/BigCiDian" ["l"="35.733,2.365"]
"speechio/chinese_text_normalization" ["l"="35.722,2.397"]
"tencent-ailab/pika" ["l"="35.702,2.326"]
"open-speech/speech-aligner" ["l"="37.336,2.384"]
"lingochamp/kaldi-ctc" ["l"="35.682,2.305"]
"hyperconnect/TC-ResNet" ["l"="35.583,2.501"]
"tzyll/kaldi" ["l"="35.706,2.453"]
"XiaoMi/kaldi-onnx" ["l"="35.702,2.408"]
"colinsongf/keyword_spotting" ["l"="35.569,2.496"]
"jcsilva/docker-kaldi-gstreamer-server" ["l"="35.693,2.476"]
"alumae/gst-kaldi-nnet2-online" ["l"="35.717,2.467"]
"Kaljurand/dictate.js" ["l"="35.695,2.5"]
"YoavRamon/awesome-kaldi" ["l"="35.666,2.412"]
"dialogflow/asr-server" ["l"="35.74,2.484"]
"alumae/kaldi-offline-transcriber" ["l"="35.713,2.492"]
"Kaljurand/K6nele" ["l"="35.679,2.534"]
"xiangxyq/kaldi" ["l"="35.654,2.48"]
"xiangxyq/minimize-chain-decoder" ["l"="35.672,2.462"]
"robin1001/kaldi-aslp" ["l"="35.727,2.538"]
"1ytic/warp-rnnt" ["l"="35.726,2.299"]
"HawkAaron/RNN-Transducer" ["l"="35.717,2.246"]
"noahchalifour/rnnt-speech-recognition" ["l"="35.706,2.283"]
"awni/transducer" ["l"="35.709,2.268"]
"sooftware/RNN-Transducer" ["l"="-5.38,-23.032"]
"upskyy/Transformer-Transducer" ["l"="35.814,2.224"]
"oshindow/Transformer-Transducer" ["l"="35.783,2.262"]
"skit-ai/kaldi-serve" ["l"="35.749,2.513"]
"gooofy/py-kaldi-asr" ["l"="35.73,2.449"]
"opendcd/opendcd" ["l"="35.767,2.511"]
"Gateway11/tensorflow-examples" ["l"="35.519,2.103"]
"shibing624/parrots" ["l"="37.543,2.353"]
"hirofumi0810/tensorflow_end2end_speech_recognition" ["l"="35.649,2.212"]
"Pelhans/ZASR_tensorflow" ["l"="35.522,2.147"]
"ssky87/iflytek_sdk_python" ["l"="5.347,-29.071"]
"zw76859420/ASR_WORD" ["l"="35.593,2.153"]
"savoirfairelinux/num2words" ["l"="35.733,2.418"]
"AdolfVonKleist/Phonetisaurus" ["l"="37.286,2.279"]
"bootphon/phonemizer" ["l"="37.266,2.33"]
"Kyubyong/g2p" ["l"="37.292,2.362"]
"jitsi/jiwer" ["l"="35.757,2.408"]
"jonatasgrosman/huggingsound" ["l"="57.1,27.975"]
"clab/fast_align" ["l"="53.8,24.78"]
"lhotse-speech/lhotse" ["l"="35.675,2.368"]
"MontrealCorpusTools/Montreal-Forced-Aligner" ["l"="37.253,2.37"]
"kensho-technologies/pyctcdecode" ["l"="35.725,2.346"]
"lumaku/ctc-segmentation" ["l"="35.757,2.357"]
"allo-media/text2num" ["l"="35.812,2.46"]
"k2-fsa/libriheavy" ["l"="38.278,2.153"]
"alphacep/vosk-server" ["l"="35.631,2.475"]
"alphacep/vosk" ["l"="35.645,2.538"]
"alphacep/vosk-android-demo" ["l"="35.6,2.538"]
"alphacep/vosk-asterisk" ["l"="35.666,2.565"]
"daanzu/kaldi-active-grammar" ["l"="35.821,2.509"]
"unispeech/unimrcp" ["l"="63.584,-14.748"]
"kimiyoung/transformer-xl" ["l"="53.149,25.692"]
"zihangdai/xlnet" ["l"="53.051,25.718"]
"XuyangBai/TransFusion" ["l"="64.594,11.201"]
"rsennrich/subword-nmt" ["l"="53.808,24.735"]
"facebookresearch/XLM" ["l"="53.036,25.657"]
"Luolc/AdaBound" ["l"="50.941,29.967"]
"facebookresearch/pytext" ["l"="52.976,25.701"]
"rain1024/slp2-pdf" ["l"="35.985,2.265"]
"iamyuanchung/Autoregressive-Predictive-Coding" ["l"="35.882,2.32"]
"githubharald/CTCDecoder" ["l"="35.672,2.28"]
"githubharald/CTCWordBeamSearch" ["l"="35.672,2.254"]
"parlance/ctcdecode" ["l"="35.644,2.302"]
"corticph/prefix-beam-search" ["l"="35.705,2.252"]
"summerlvsong/Aggregation-Cross-Entropy" ["l"="46.484,7.217"]
"SeanNaren/warp-ctc" ["l"="46.361,7.196"]
"tbright17/kaldi-dnn-ali-gop" ["l"="35.835,2.405"]
"jimbozhang/kaldi-gop" ["l"="35.855,2.445"]
"sweekarsud/Goodness-of-Pronunciation" ["l"="35.916,2.422"]
"moisesveleta/GOP-LSTM" ["l"="35.892,2.432"]
"tzyll/goparrot" ["l"="35.912,2.433"]
"topel/goodness-of-pronunciation-HTK" ["l"="35.883,2.409"]
"JazminVidal/gop-dnn-epadb" ["l"="35.909,2.446"]
"sequitur-g2p/sequitur-g2p" ["l"="37.343,2.237"]
"jimbozhang/speechocean762" ["l"="35.929,2.436"]
"k2-fsa/fast_rnnt" ["l"="35.732,2.31"]
"YiwenShaoStephen/pychain" ["l"="35.716,2.322"]
"robin1001/xdecoder" ["l"="35.784,2.55"]
"jpuigcerver/kaldi-decoders" ["l"="35.785,2.516"]
"WindQAQ/listen-attend-and-spell" ["l"="35.712,2.167"]
"thomasschmied/Speech_Recognition_with_Tensorflow" ["l"="35.713,2.196"]
"sciforce/phones-las" ["l"="35.73,2.105"]
"YiwenShaoStephen/pychain_example" ["l"="35.793,2.313"]
"jzlianglu/pykaldi2" ["l"="35.719,2.361"]
"idiap/pkwrap" ["l"="35.829,2.292"]
"facebookresearch/gtn" ["l"="35.742,2.32"]
"nttcslab-sp/kaldiio" ["l"="35.708,2.35"]
"k2-fsa/snowfall" ["l"="35.725,2.375"]
"dophist/DaCiDian-Develop" ["l"="37.402,2.236"]
"csukuangfj/optimized_transducer" ["l"="35.785,2.303"]
"1ytic/warp-rna" ["l"="35.736,2.255"]
"iamjanvijay/rnnt_decoder_cuda" ["l"="35.837,2.255"]
"theblackcat102/edgedict" ["l"="35.734,2.29"]
"jctian98/e2e_lfmmi" ["l"="35.742,2.337"]
"douglas125/SpeechCmdRecognition" ["l"="35.597,2.518"]
"castorini/honk" ["l"="35.584,2.484"]
"vineeths96/Spoken-Keyword-Spotting" ["l"="35.566,2.561"]
"dobby-seo/Wav2Keyword" ["l"="35.556,2.538"]
"JaesungBae/Speech-Command-Recognition-with-Capsule-Network" ["l"="35.614,2.571"]
"jarfo/gcommands" ["l"="35.621,2.558"]
"Tony607/Keras-Trigger-Word" ["l"="35.512,2.664"]
"castorini/howl" ["l"="35.573,2.575"]
"MycroftAI/padatious" ["l"="36.83,2.38"]
"MycroftAI/mycroft-skills" ["l"="36.866,2.438"]
"sonos/keyword-spotting-research-datasets" ["l"="35.55,2.511"]
"DemisEom/SpecAugment" ["l"="35.661,2.296"]
"facebookresearch/WavAugment" ["l"="38.519,3.981"]
"manojpamk/pytorch_xvectors" ["l"="37.046,3.295"]
"asteroid-team/torch-audiomentations" ["l"="38.52,4.013"]
"santi-pdp/pase" ["l"="35.76,2.334"]
"Snowdar/asv-subtools" ["l"="37.008,3.247"]
"clovaai/voxceleb_trainer" ["l"="37.018,3.264"]
"iver56/audiomentations" ["l"="38.484,3.982"]
"KimJeongSun/SpecAugment_numpy_scipy" ["l"="35.681,2.214"]
"26hzhang/neural_sequence_labeling" ["l"="35.851,2.649"]
"MenNianShi/PunctuationPrediction-BERT" ["l"="35.831,2.642"]
"ottokart/punctuator2" ["l"="35.827,2.601"]
"nkrnrnk/BertPunc" ["l"="35.817,2.632"]
"alpoktem/punkProse" ["l"="35.879,2.643"]
"vackosar/keras-punctuator" ["l"="35.863,2.636"]
"ottokart/punctuator" ["l"="35.855,2.623"]
"kaituoxu/X-Punctuator" ["l"="35.842,2.627"]
"LopezGG/NN_NER_tensorFlow" ["l"="53.512,27.608"]
"ottokart/sequence-labeler" ["l"="35.868,2.65"]
"dbmdz/deep-eos" ["l"="35.872,2.712"]
"zycv/awesome-keyword-spotting" ["l"="35.562,2.521"]
"roman-vygon/triplet_loss_kws" ["l"="35.579,2.559"]
"jingyonghou/RPN_KWS" ["l"="35.573,2.513"]
"sreuter/node-speakable" ["l"="35,2.629"]
"cmusphinx/node-pocketsphinx" ["l"="35.046,2.618"]
"watson-developer-cloud/speech-to-text-nodejs" ["l"="23.81,2.302"]
"mattdiamond/Recorderjs" ["l"="40.319,4.258"]
"kripken/speak.js" ["l"="35.013,2.516"]
"evancohen/sonus" ["l"="34.941,2.69"]
"belambert/asr-evaluation" ["l"="35.781,2.436"]
"zszyellow/WER-in-python" ["l"="35.807,2.431"]
"belambert/edit-distance" ["l"="35.849,2.472"]
"dspavankumar/keras-kaldi" ["l"="35.74,2.351"]
"fnl/syntok" ["l"="35.919,2.779"]
"fnl/segtok" ["l"="35.934,2.813"]
"yeyupiaoling/LearnPaddle" ["l"="35.598,1.887"]
"yeyupiaoling/LearnPaddle2" ["l"="35.593,1.843"]
"huxiaoman7/PaddlePaddle_code" ["l"="49.977,23.134"]
"ninetailskim/DodgeFace" ["l"="35.618,1.932"]
"PaddlePaddle/book" ["l"="49.969,29.597"]
"1084667371/ExtractLine" ["l"="35.63,1.881"]
"yeyupiaoling/PaddlePaddle-SSD" ["l"="35.6,1.911"]
"AgentMaker/PAPC" ["l"="35.6,1.949"]
"yeyupiaoling/BookSource" ["l"="35.576,1.843"]
"yeyupiaoling/VoiceprintRecognition-PaddlePaddle" ["l"="35.576,1.948"]
"yeyupiaoling/PaddlePaddle-MobileFaceNets" ["l"="35.571,1.894"]
"yeyupiaoling/PaddlePaddle-MTCNN" ["l"="35.549,1.897"]
"wobushihuair/paddlepaddle_project" ["l"="35.562,1.884"]
"leigangblog/AI_Tools" ["l"="35.542,1.877"]
"ITerydh/PaddlePaddle-Python-Zero-Based" ["l"="35.57,1.875"]
"yeyupiaoling/PaddlePaddle-CRNN" ["l"="35.614,1.89"]
"jhcgt4869/Unpaired_Probability_Prediction_The_first_ten" ["l"="35.608,1.877"]
"ninetailskim/EXQ_IndonesiaVer" ["l"="35.605,1.895"]
"AgentMaker/PPQI.jl" ["l"="35.579,1.925"]
"GuoQuanhao/arcface-Paddle" ["l"="35.523,1.858"]
"yeyupiaoling/PaddlePaddle-CrowdNet" ["l"="35.604,1.924"]
"AgentMaker/Paddle-IMSP" ["l"="35.593,1.921"]
"jhcgt4869/LiHongyi_curriculum_experience" ["l"="35.605,1.905"]
"Bee-Mar/mmpm" ["l"="34.589,3.003"]
"sdetweil/MagicMirror_scripts" ["l"="34.579,3.021"]
"guysoft/MagicMirrorOS" ["l"="34.558,3.003"]
"Jopyth/MMM-Remote-Control" ["l"="34.659,2.983"]
"sheyabernstein/MMM-pihole-stats" ["l"="34.566,2.977"]
"Klettner/MM-Remote" ["l"="34.617,3.038"]
"PoOwAa/MMM-network-signal" ["l"="34.555,3.022"]
"ianperrin/MMM-ModuleScheduler" ["l"="34.625,2.986"]
"slametps/MMM-NetworkConnection" ["l"="34.596,3.018"]
"shbatm/MMM-OnScreenMenu" ["l"="34.667,3.004"]
"htilburgs/MMM-MyGarbage" ["l"="34.541,2.981"]
"MMM-CalendarExt2/MMM-CalendarExt2" ["l"="34.569,3.035"]
"delightedCrow/WallberryTheme" ["l"="34.602,3.052"]
"darickc/MMM-BackgroundSlideshow" ["l"="34.633,3.03"]
"ItayXD/MMM-Admin-Interface" ["l"="34.582,2.967"]
"roramirez/MagicMirror-Module-Template" ["l"="34.537,3.014"]
"shaneosullivan/boltjs" ["l"="34.946,2.422"]
"phacility/javelin" ["l"="34.936,2.391"]
"joehewitt/scrollability" ["l"="3.539,-34.131"]
"SpeechColab/GigaSpeech" ["l"="35.705,2.368"]
"k2-fsa/icefall" ["l"="35.652,2.377"]
"microsoft/UniSpeech" ["l"="38.374,2.171"]
"gabrielmittag/NISQA" ["l"="36.816,4.284"]
"X-LANCE/SLAM-LLM" ["l"="38.459,2.018"]
"aliutkus/speechmetrics" ["l"="36.784,4.347"]
"coqui-ai/open-speech-corpora" ["l"="37.272,2.355"]
"usnistgov/SCTK" ["l"="35.855,2.391"]
"sooftware/speech-transformer" ["l"="-5.369,-23.071"]
"vrenkens/nabu" ["l"="35.72,2.214"]
"rwth-i6/returnn" ["l"="35.742,2.269"]
"rwth-i6/returnn-experiments" ["l"="35.776,2.235"]
"igormq/asr-study" ["l"="35.675,2.149"]
"Kyubyong/css10" ["l"="37.322,2.428"]
"Picovoice/leopard" ["l"="35.44,2.681"]
"Picovoice/cobra" ["l"="35.401,2.711"]
"Picovoice/speech-to-text-benchmark" ["l"="35.502,2.636"]
"Picovoice/koala" ["l"="35.414,2.683"]
"Picovoice/web-voice-processor" ["l"="35.413,2.663"]
"Picovoice/orca" ["l"="35.445,2.704"]
"Picovoice/picollm" ["l"="35.433,2.728"]
"Picovoice/speech-to-intent-benchmark" ["l"="35.459,2.677"]
"Picovoice/wake-word-benchmark" ["l"="35.479,2.687"]
"Picovoice/octopus" ["l"="35.414,2.697"]
"Picovoice/eagle" ["l"="35.424,2.708"]
"ARM-software/ML-examples" ["l"="-16.102,-42.554"]
"majianjia/nnom" ["l"="-16.12,-42.574"]
"microsoft/DNS-Challenge" ["l"="36.768,4.346"]
"ARM-software/CMSIS_5" ["l"="-17.771,-43.142"]
"athena-team/athena-signal" ["l"="36.848,4.445"]
"WenzheLiu-Speech/awesome-speech-enhancement" ["l"="36.75,4.357"]
"LCAV/pyroomacoustics" ["l"="36.815,4.416"]
"ARM-software/armnn" ["l"="37.21,0.775"]
"soerenab/AudioMNIST" ["l"="35.512,2.431"]
"Jakobovski/free-spoken-digit-dataset" ["l"="35.581,2.401"]
"microsoft/CLAP" ["l"="39.623,5.5"]
"sebastian-lapuschkin/lrp_toolbox" ["l"="24.181,14.271"]
"googleapis/nodejs-text-to-speech" ["l"="34.831,2.53"]
"googleapis/nodejs-speech" ["l"="34.875,2.565"]
"googleapis/nodejs-language" ["l"="34.805,2.523"]
"googleapis/nodejs-translate" ["l"="34.756,2.494"]
"googleapis/nodejs-redis" ["l"="43.958,16.416"]
"googleapis/nodejs-video-intelligence" ["l"="34.813,2.544"]
"ShankHarinath/DeepSpeech2-Keras" ["l"="35.658,2.113"]
"igormq/ctc_tensorflow_example" ["l"="35.665,2.217"]
"holm-aune-bachelor2018/ctc" ["l"="35.673,2.113"]
"juliuskunze/speechless" ["l"="35.556,2.047"]
"baidu-research/ba-dls-deepspeech" ["l"="35.632,2.278"]
"MainRo/deepspeech-server" ["l"="35.506,2.688"]
"ashwan1/django-deepspeech-server" ["l"="35.488,2.741"]
"MainRo/docker-deepspeech-server" ["l"="35.506,2.732"]
"daanzu/deepspeech-websocket-server" ["l"="35.496,2.765"]
"githubharald/SimpleHTR" ["l"="47.53,6.4"]
"lamhoangtung/LineHTR" ["l"="47.554,6.413"]
"githubharald/WordDetector" ["l"="47.517,6.428"]
"Sundy1219/ctc_beam_search_lm" ["l"="35.648,2.167"]
"ARM-software/keyword-transformer" ["l"="35.553,2.572"]
"jingyonghou/KWS_Max-pooling_RHE" ["l"="35.58,2.533"]
"Interlagos/TENet-kws" ["l"="35.598,2.574"]
"fgnt/pb_chime5" ["l"="36.764,4.466"]
"cmusphinx/pocketsphinx-ios-demo" ["l"="35.313,2.572"]
"galrom/ContinuesVoiceRecognition" ["l"="35.339,2.595"]
"ihrupin/SpeechRecognitionService" ["l"="35.36,2.578"]
"cmusphinx/cmudict-tools" ["l"="35.33,2.562"]
"edward-shen/MMM-page-indicator" ["l"="34.626,3.048"]
"skuethe/MMM-Spotify" ["l"="34.632,3.059"]
"grenagit/MMM-APOD" ["l"="34.576,3.09"]
"robmsmt/ASR-Audio-Data-Links" ["l"="35.56,2.482"]
"mankadronit/Automated-Essay--Scoring" ["l"="36.476,2.394"]
"nusnlp/nea" ["l"="36.445,2.425"]
"shubhpawar/Automated-Essay-Scoring" ["l"="36.487,2.37"]
"Turanga1/Automated-Essay-Scoring" ["l"="36.462,2.374"]
"Farahn/AES" ["l"="36.453,2.395"]
"sankalpjain99/Automatic-Essay-Scoring" ["l"="36.513,2.382"]
"notAI-tech/deepsegment" ["l"="35.872,2.684"]
"bedapudi6788/deepcorrect" ["l"="35.875,2.661"]
"notAI-tech/fastPunct" ["l"="35.839,2.666"]
"brandonrobertz/sentence-autosegmentation" ["l"="35.896,2.727"]
"segment-any-text/wtpsplit" ["l"="41.229,1.005"]
"MarceloSancinetti/epa-gop-pykaldi" ["l"="35.94,2.426"]
"YuanGongND/gopt" ["l"="35.958,2.439"]
"aalto-speech/interspeech2019_karhila_et_al" ["l"="35.927,2.452"]
"vocaliodmiku/wav2vec2mdd" ["l"="35.965,2.419"]
"andyweiqiu/asr-ios-local" ["l"="35.793,2.473"]
"airbnb/artificial-adversary" ["l"="30.659,28.308"]
"Franck-Dernoncourt/ASR_benchmark" ["l"="35.488,2.711"]
"chaosparrot/parrot.py" ["l"="36.093,2.683"]
"wolfmanstout/talon-gaze-ocr" ["l"="36.129,2.697"]
"chaosparrot/talon_hud" ["l"="36.127,2.708"]
"AndreasArvidsson/andreas-talon" ["l"="36.141,2.714"]
"splondike/talon_ui_helper" ["l"="36.113,2.707"]
"cursorless-dev/cursorless-talon" ["l"="36.1,2.707"]
"TalonCommunity/Wiki" ["l"="36.157,2.694"]
"talonhub/community" ["l"="36.112,2.669"]
"david-tejada/rango" ["l"="36.116,2.693"]
"C-Loftus/talon-ai-tools" ["l"="36.119,2.718"]
"mirober/vscode-TalonScript" ["l"="36.072,2.707"]
"mirober/Breathe" ["l"="35.971,2.589"]
"brollin/flex-mouse-grid" ["l"="36.09,2.722"]
"AndrewDant/screen-spots" ["l"="36.131,2.72"]
"eouia/MMM-Tools" ["l"="34.673,3.082"]
"MMRIZE/MMM-TelegramBot" ["l"="34.691,3.097"]
"aserramonner/MMM-HASS" ["l"="34.471,3.059"]
"zuo000/MMM-HomeAssistant" ["l"="34.487,3.059"]
"hermanho/MMM-GooglePhotos" ["l"="34.615,3.01"]
"edward-shen/MMM-pages" ["l"="34.623,3.022"]
"jclarke0000/MMM-DarkSkyForecast" ["l"="34.613,3.082"]
"barnabycolby/MMM-Carousel" ["l"="34.649,2.998"]
"heskja/MMM-CalendarWeek" ["l"="34.589,3.042"]
"vicmora/MMM-GoogleMapsTraffic" ["l"="34.644,2.974"]
"eouia/MMM-CalendarExt" ["l"="34.6,2.991"]
"AgP42/MMM-SmartWebDisplay" ["l"="34.649,3.066"]
"BenRoe/MMM-SystemStats" ["l"="34.65,3.014"]
"kolbyjack/MMM-Wallpaper" ["l"="34.619,3.066"]
"justjim1220/MMM-NewsFeedTicker" ["l"="34.639,3.085"]
"dictation-toolbox/Caster" ["l"="35.984,2.581"]
"dictation-toolbox/dragonfly" ["l"="36.008,2.605"]
"dictation-toolbox/aenea" ["l"="35.992,2.598"]
"t4ngo/dragonfly" ["l"="35.964,2.612"]
"simianhacker/code-by-voice" ["l"="35.985,2.622"]
"dictation-toolbox/dragonfly-scripts" ["l"="35.985,2.608"]
"wolfmanstout/dragonfly-commands" ["l"="35.957,2.598"]
"tgrosinger/aenea-grammars" ["l"="36.001,2.618"]
"t4ngo/dragonfly-modules" ["l"="35.975,2.602"]
"talonvoice/draconity" ["l"="36.046,2.602"]
"wolfmanstout/gaze-ocr" ["l"="36.041,2.571"]
"dictation-toolbox/natlink" ["l"="36.009,2.576"]
"chajadan/DragonflyRules" ["l"="35.981,2.595"]
"dictation-toolbox/aenea-grammars" ["l"="36.014,2.591"]
"CFenner/MMM-AirQuality" ["l"="34.609,3.113"]
"MMRIZE/MMM-CalendarExt3" ["l"="34.559,3.078"]
"sathyarajv/MMM-OpenmapWeather" ["l"="34.663,3.056"]
"jinserk/pytorch-asr" ["l"="35.71,2.091"]
"Sundy1219/eesen-for-thchs30" ["l"="35.696,2.112"]
"yingtaoHuo/wakeUp" ["l"="35.54,2.533"]
"rolczynski/Automatic-Speech-Recognition" ["l"="35.536,2.416"]
"30stomercury/Automatic-Speech-Recognition" ["l"="35.484,2.469"]
"mdangschat/ctc-asr" ["l"="35.638,2.234"]
"vincep5/MMM-DarkSkyRadar" ["l"="34.592,3.113"]
"ulrichwisser/MMM-Widget" ["l"="34.647,3.107"]
"nischi/MMM-Face-Reco-DNN" ["l"="34.766,3.031"]
"eric-h-st/MMM-AmbientBrightnessDetection" ["l"="34.792,3.032"]
"jimbydude/MMM-Face-Multi-User-Recognition-SMAI" ["l"="34.773,3.066"]
"njwilliams/MMM-Faces" ["l"="34.783,3.048"]
"tosti007/MMM-ProfileSwitcher" ["l"="34.722,3.003"]
"rejas/MMM-MotionDetector" ["l"="34.802,3.056"]
"normyx/MMM-Facial-Recognition-OCV3" ["l"="34.712,2.986"]
"kevinatown/MMM-Screencast" ["l"="34.654,3.034"]
"raywo/MMM-NowPlayingOnSpotify" ["l"="34.666,3.021"]
"bugsounet/MMM-GoogleAssistant" ["l"="34.603,3.034"]
"MichMich/MMM-Snow" ["l"="34.664,3.103"]
"shbatm/MMM-KeyBindings" ["l"="34.7,3.028"]
"gauravsacc/MMM-GoogleAssistant" ["l"="34.681,3.011"]
"saml-dev/MMM-Traffic" ["l"="34.657,2.962"]
"kapsolas/MMM-Instagram" ["l"="34.65,2.938"]
"fewieden/MMM-Fuel" ["l"="53.857,5.692"]
"Matzefication/MMM-Hello-Mirror" ["l"="34.695,2.969"]
"pinsdorf/MMM-WeeklySchedule" ["l"="34.644,3.047"]
"Veldrovive/MMM-Page-Selector" ["l"="34.599,3.068"]
"talonvoice/talon" ["l"="36.161,2.676"]
"dwiel/talon_community" ["l"="36.188,2.664"]
"yltw27/KeywordSpotting" ["l"="35.55,2.463"]
"harvard-edge/multilingual_kws" ["l"="35.567,2.544"]
"hcmlab/vadnet" ["l"="36.74,4.518"]
"ArchitParnami/Few-Shot-KWS" ["l"="35.553,2.554"]
"paviro/MMM-PIR-Sensor" ["l"="34.681,2.976"]
"ianperrin/MMM-Strava" ["l"="34.711,3.049"]
"kjb085/MMM-Reddit" ["l"="34.676,3.065"]
"CatoAntonsen/MMM-SpotifyConnectUI" ["l"="34.673,2.945"]
"thobach/MMM-MicrosoftToDo" ["l"="34.691,3.069"]
"fewieden/MMM-soccer" ["l"="34.632,3.129"]
"Anonym-tsk/MMM-Volume" ["l"="34.627,3.102"]
"wq2012/awesome-diarization" ["l"="37.021,3.203"]
"tramphero/kaldi" ["l"="35.593,2.276"]
"common-voice/cv-sentence-extractor" ["l"="35.339,2.207"]
"common-voice/sentence-collector" ["l"="35.359,2.238"]
"geyang/deep-auto-punctuation" ["l"="35.872,2.62"]
"bedapudi6788/txt2txt" ["l"="35.906,2.7"]
"UFAL-DSG/alex" ["l"="35.774,2.49"]
"UFAL-DSG/pykaldi" ["l"="35.791,2.452"]
"UFAL-DSG/alex-asr" ["l"="35.808,2.483"]
"vyraun/chatbot-MemN2N-tensorflow" ["l"="56.572,29.141"]
"jackaduma/LAS_Mandarin_PyTorch" ["l"="35.747,2.166"]
"AzizCode92/Listen-Attend-and-Spell-Pytorch" ["l"="35.727,2.176"]
"Xiaoxiaohuangg/LAS-Chinese-pytorch" ["l"="35.723,2.159"]
"manankshastri/Trigger-Word-Detection" ["l"="35.518,2.707"]
"mrdis/MMM-google-route" ["l"="34.402,2.977"]
"Jacopo1891/MMM-GoogleTrafficTimes" ["l"="34.433,2.979"]
"EliasCai/speech_recognition_ctc" ["l"="35.562,2.113"]
"pythonml/captacha" ["l"="35.482,2.061"]
"KernelErr/realtime-object-detector" ["l"="35.574,1.787"]
"linhandev/medSeg" ["l"="35.569,1.802"]
"HighCWu/anime_biggan_toy" ["l"="35.58,1.905"]
"yeyupiaoling/PP-YOLOE" ["l"="35.59,1.901"]
"zbp-xxxp/reading_pictures_writing_poems" ["l"="35.587,1.805"]
"HackerShackOfficial/Smart-Security-Camera" ["l"="34.717,2.844"]
"HackerShackOfficial/AI-Smart-Mirror" ["l"="34.769,2.861"]
"HackerShackOfficial/Smart-Mirror" ["l"="34.783,2.837"]
"EbenKouao/SmartCCTV-Camera" ["l"="-34.742,22.021"]
"HackerShackOfficial/Tracking-Turret" ["l"="34.617,2.797"]
"PiSimo/PiCamNN" ["l"="50.201,33.025"]
"HackerShackOfficial/Raspberry-Pi-VNC-Mac" ["l"="34.677,2.844"]
"bestpower/Speech_Recognition_Test" ["l"="35.526,2.081"]
"ky1994/SpeechRecognition" ["l"="35.546,2.088"]
"boblemarin/Sprite3D.js" ["l"="34.904,2.374"]
"sequence-labeling/rnn-transducer" ["l"="35.768,2.194"]
"HawkAaron/mxnet-transducer" ["l"="35.761,2.207"]
"PengdaLiu/LAS-SpeechRecognition" ["l"="35.78,2.181"]
"liusongxiang/StarGAN-Voice-Conversion" ["l"="37.285,2.615"]
"facebookresearch/CPC_audio" ["l"="35.862,2.333"]
"jefflai108/pytorch-kaldi-neural-speaker-embeddings" ["l"="37.091,3.336"]
"swasun/VQ-VAE-Speech" ["l"="37.356,2.663"]
"descriptinc/melgan-neurips" ["l"="37.251,2.513"]
"auspicious3000/autovc" ["l"="37.279,2.592"]
"kuangcaomvp/speech-recognize" ["l"="35.503,2.137"]
"lizhaokun/Autosub-with-Baidu-DeepSpeech2" ["l"="35.484,2.137"]
"bugsounet/MMM-AssistantMk2" ["l"="34.687,3.049"]
"bugsounet/MMM-Hotword" ["l"="34.711,3.078"]
"fewieden/MMM-AlarmClock" ["l"="34.698,3.003"]
"csukuangfj/kaldifeat" ["l"="35.708,2.39"]
"hitachi-speech/EEND" ["l"="36.985,3.21"]
"nryant/dscore" ["l"="36.968,3.219"]
"talonvoice/examples" ["l"="36.154,2.635"]
"dwighthouse/unofficial-talonvoice-docs" ["l"="36.189,2.637"]
"2shea/talon_configs" ["l"="36.232,2.666"]
"lunixbochs/community" ["l"="36.211,2.674"]
"anonfunc/talon-user" ["l"="36.215,2.657"]
"pimentel/voicecode_directory" ["l"="36.226,2.691"]
"danijel3/KaldiWebrtcServer" ["l"="35.869,2.497"]
"dwks/silvius" ["l"="35.957,2.565"]
"facebookresearch/libri-light" ["l"="35.817,2.343"]
"DemisEom/RNNT-pytorch" ["l"="35.753,2.184"]
"chenjiasheng/mwer" ["l"="35.815,2.137"]
"MarkWuNLP/SemanticMask" ["l"="35.764,2.259"]
"leinich/MMM-homeassistant-sensors" ["l"="34.476,3.045"]
"Snille/MMM-homeassistant-sensors" ["l"="34.491,3.034"]
"john3300/MMM-HomeAutomationNotifications" ["l"="34.476,3.03"]
"wonderslug/MMM-HomeAssistantDisplay" ["l"="34.507,3.039"]
"gooofy/kaldi-adapt-lm" ["l"="35.75,2.537"]
"JRMeyer/kaldi-tf" ["l"="35.8,2.501"]
"srvk/lm_build" ["l"="35.764,2.568"]
"calmofthestorm/aenea" ["l"="36.002,2.636"]
"dwks/aenea-grammar-simple" ["l"="35.97,2.627"]
"idiap/CNN_QbE_STD" ["l"="35.482,2.555"]
"Yushi-Hu/Multilingual-AWE" ["l"="35.464,2.581"]
"LCF2764/autoKWS2021_1st_solution" ["l"="35.442,2.589"]
"TomVeniat/SANAS" ["l"="53.043,34.164"]
"gillesdemey/node-record-lpcm16" ["l"="34.884,2.643"]
"RedKenrok/node-audiorecorder" ["l"="34.851,2.66"]
"jx1100370217/DFCNN-master" ["l"="35.586,2.099"]
"zw76859420/ASRT_SpeechRecognition" ["l"="35.59,2.119"]
"JRMeyer/multi-task-kaldi" ["l"="35.827,2.445"]
"lezasantaizi/from_video_get_ASR_traindata" ["l"="35.474,2.101"]
"keithyin/simple_speech_recog" ["l"="35.492,2.109"]
"Gaurav-Pande/AES_DL" ["l"="36.429,2.412"]
"mayurmorin/Automated-Essay--Scoring" ["l"="36.46,2.347"]
"vasu5235/Kaggle-Automated-Essay-Checking-System" ["l"="36.477,2.351"]
"datemoon/ASR-decoder" ["l"="35.886,2.558"]
"chenzhehuai/kaldi-decoders" ["l"="35.849,2.548"]
"yc9701/pansori" ["l"="35.822,2.384"]
"davitenio/dragonfly-macros" ["l"="35.983,2.637"]
"rwth-i6/sisyphus" ["l"="35.815,2.198"]
"rwth-i6/rasr" ["l"="35.801,2.21"]
"rwth-i6/i6_core" ["l"="35.855,2.17"]
"rwth-i6/i6_experiments" ["l"="35.841,2.169"]
"ryanleary/patter" ["l"="35.903,2.173"]
"athena-team/athena-decoder" ["l"="35.851,2.211"]
"mozilla-extensions/firefox-voice" ["l"="35.305,2.218"]
"mozilla/voicefill" ["l"="35.26,2.18"]
"zbp-xxxp/meaningfulModuleOfAI" ["l"="35.57,1.884"]
"AgentMaker/Paddle-Custom-Operators" ["l"="35.59,1.932"]
"ninetailskim/PandaFaceGenerator" ["l"="35.624,1.943"]
"yuboona/Chinese-Punctuation-Restoration-with-Bert-CNN-RNN" ["l"="35.784,2.63"]
"xashru/punctuation-restoration" ["l"="35.802,2.654"]
"AlvinIsonomia/LSTM-for-Chinese-Punctuation-Restoration" ["l"="35.773,2.592"]
"fostermadeco/voice-search-example-app" ["l"="34.814,2.572"]
"fostermadeco/audio-to-text-gcloud" ["l"="34.834,2.574"]
"hayanmind/react-native-google-speech-api" ["l"="34.819,2.586"]
"biemster/asr" ["l"="35.706,2.708"]
"AIFanatic/google-offline-speech-recognition" ["l"="35.705,2.727"]
"2shea/talon_starter_pack" ["l"="36.263,2.67"]
"JawadAr/Pronunciation-verification-using-anomaly-detection-Thesis" ["l"="36.082,2.384"]
"LexicalStressDetection/lexical-stress-detection" ["l"="36.106,2.38"]
"LearnedVector/Wav2Letter" ["l"="35.529,2.03"]
"Rokeer/co-attention" ["l"="36.416,2.465"]
"ustcljw/fupugec-score" ["l"="36.425,2.441"]
"UFAL-DSG/pyfst" ["l"="35.852,2.494"]
"ucasir/TDNN" ["l"="36.419,2.426"]
"karanmakhija867/bert_punct" ["l"="35.785,2.695"]
"attilanagy234/neural-punctuator" ["l"="35.797,2.708"]
"igormq/aes-lac-2018" ["l"="35.676,2.084"]
"leandrobmarinho/yolo-marker" ["l"="35.679,2.051"]
"nai888/awkwords" ["l"="34.734,2.29"]
"Susurrus-LLC/langua" ["l"="34.749,2.305"]
"ZMpursue/PaddleColorization" ["l"="35.581,1.773"]
"ZMpursue/Anime_avatar_generation" ["l"="35.573,1.765"]
"ZMpursue/DCGANfakeface" ["l"="35.587,1.761"]
"andyweiqiu/SpeechRecognition" ["l"="35.824,2.486"]
"HighCWu/denoising-diffusion-paddle" ["l"="35.549,1.912"]
"Picovoice/browser-extension" ["l"="35.462,2.663"]
"ronggong/mispronunciation-detection" ["l"="35.923,2.469"]
"snakers4/silero-models" ["l"="-44.141,25.887"]
"SYSTRAN/faster-whisper" ["l"="40.559,3.249"]
"rhasspy/piper" ["l"="38.599,1.589"]
"coqui-ai/STT" ["l"="35.491,2.384"]
"k2-fsa/sherpa-onnx" ["l"="38.557,1.585"]
"coqui-ai/TTS" ["l"="38.433,1.412"]
"Marak/say.js" ["l"="34.969,2.584"]
"mtttmpl/speak-js" ["l"="34.969,2.482"]
"fasterthanlime/jsmad" ["l"="2.048,-34.335"]
"Hagsten/Talkify" ["l"="34.966,2.534"]
"brianchirls/Seriously.js" ["l"="35.813,24.346"]
"victorporof/Tilt" ["l"="1.997,-34.324"]
"imakewebthings/deck.js" ["l"="3.587,-34.235"]
"cjcliffe/CubicVR.js" ["l"="1.875,-34.275"]
"webmademovies/popcorn-js" ["l"="2.107,-34.379"]
"ebidel/filer.js" ["l"="3.481,-34.231"]
"itinerarium/phoneme-synthesis" ["l"="34.884,2.422"]
"doug/depthjs" ["l"="59.644,11.658"]
"evanw/glfx.js" ["l"="35.874,24.347"]
"espnet/espnet_model_zoo" ["l"="35.767,2.459"]
"modelscope/FunASR" ["l"="38.511,1.579"]
"mozilla/androidspeech" ["l"="35.614,2.598"]
"tarekeldeeb/DeepSpeech-Quran" ["l"="-11.337,-29.154"]
"amsehili/auditok" ["l"="36.753,4.532"]
"common-voice/common-voice" ["l"="35.427,2.333"]
"LearnedVector/A-Hackers-AI-Voice-Assistant" ["l"="35.674,3.284"]
"mozilla/DSAlign" ["l"="37.153,2.305"]
"FireDynamics/fdsreader" ["l"="34.569,2.441"]
"firetools/blenderfds" ["l"="34.583,2.452"]
"FireDynamics/LectureFireSimulation" ["l"="34.579,2.425"]
"johodges/pyfdstools" ["l"="34.541,2.438"]
"FireDynamics/propti" ["l"="34.556,2.419"]
"FireDynamics/fdsgeogen" ["l"="34.559,2.458"]
"googleapis/python-speech" ["l"="34.785,2.586"]
"googleapis/python-texttospeech" ["l"="34.741,2.592"]
"edobashira/speech-language-processing" ["l"="35.515,2.207"]
"theimpossibleastronaut/awesome-linguistics" ["l"="25.953,-26.189"]
"andrewt3000/DL4NLP" ["l"="52.942,25.617"]
"kjw0612/awesome-rnn" ["l"="47.892,28.734"]
"zer0n/deepframeworks" ["l"="47.817,28.97"]
"pkmital/tensorflow_tutorials" ["l"="47.724,28.859"]
"keon/awesome-nlp" ["l"="52.863,25.815"]
"Randommood/Strangeloop2015" ["l"="22.954,-26.681"]
"dive-into-machine-learning/dive-into-machine-learning" ["l"="47.896,28.522"]
"rushter/data-science-blogs" ["l"="47.978,28.375"]
"baidu-research/warp-ctc" ["l"="46.252,7.088"]
"lucasviola/awesome-functional-programming" ["l"="26.083,-26.231"]
"ccoreilly/LocalSTT" ["l"="35.656,2.601"]
"vilassn/whisper_android" ["l"="-52.536,10.244"]
"alphacep/vosk-android-service" ["l"="35.648,2.584"]
"ElishaAz/Sayboard" ["l"="-52.452,9.628"]
"k2-fsa/sherpa-ncnn" ["l"="35.625,2.404"]
"gotev/android-speech" ["l"="35.61,2.68"]
"eastonYi/wav2vec" ["l"="35.854,2.282"]
"mailong25/self-supervised-speech-recognition" ["l"="35.768,2.319"]
"kehanlu/Mandarin-Wav2Vec2" ["l"="22.313,1.517"]
"HarunoriKawano/Wav2vec2.0" ["l"="35.909,2.256"]
"yeyupiaoling/AudioClassification-PaddlePaddle" ["l"="35.562,1.902"]
"unseenme/rl_parl_gym_CarRacing-v0" ["l"="35.522,1.885"]
"AgentMaker/Paddle-DALL-E" ["l"="35.594,1.938"]
"GuoQuanhao/PaddlePaddle-basic-tutorial" ["l"="35.55,1.864"]
"HighCWu/ddim" ["l"="35.525,1.899"]
"yeyupiaoling/PPASR" ["l"="35.615,2.21"]
"yeyupiaoling/VoiceprintRecognition-Pytorch" ["l"="36.907,3.28"]
"yang123qwe/end2end_chinese_speech_recognition" ["l"="35.618,2.103"]
"sooftware/conformer" ["l"="35.754,2.242"]
"chenkui164/FastASR" ["l"="35.641,2.337"]
"RapidAI/RapidASR" ["l"="35.634,2.322"]
"kakaobrain/g2pm" ["l"="37.36,2.376"]
"Kyubyong/g2pC" ["l"="37.392,2.363"]
"KuangDD/phkit" ["l"="37.377,2.389"]
"tencent-ailab/3m-asr" ["l"="35.801,2.357"]
"SpeechColab/Leaderboard" ["l"="35.689,2.382"]
"wenet-e2e/WeTextProcessing" ["l"="38.402,2.007"]
"Jackiexiao/MTTS" ["l"="37.337,2.437"]
"xcmyz/FastSpeech" ["l"="37.273,2.458"]
"thuhcsi/Crystal" ["l"="37.409,2.374"]
"TencentGameMate/chinese_speech_pretrain" ["l"="38.436,1.986"]
"wenet-e2e/speech-synthesis-paper" ["l"="37.286,2.43"]
"bugsounet/MMM-Assistant2Display" ["l"="34.582,3.062"]
"k2-fsa/sherpa" ["l"="35.679,2.398"]
"ga642381/speech-trident" ["l"="38.479,2.021"]
"cornerfarmer/ctc_segmentation" ["l"="35.842,2.364"]
"sarulab-speech/jtubespeech" ["l"="4.397,-40.463"]
"moneppo/node-pocketsphinx" ["l"="35.026,2.657"]
"dophist/kaldi-lstm" ["l"="35.78,2.214"]
"junhyukoh/caffe-lstm" ["l"="47.75,34.06"]
"yajiemiao/kaldipdnn" ["l"="35.742,2.3"]
"rizar/attention-lvcsr" ["l"="35.71,2.234"]
"dansoutner/LSTM" ["l"="-9.243,12.426"]
"vrenkens/tfkaldi" ["l"="35.723,2.278"]
"facebookresearch/gtn_applications" ["l"="35.875,2.252"]
"midas-research/audino" ["l"="35.771,2.373"]
"CrowdCurio/audio-annotator" ["l"="38.434,3.883"]
"novoic/surfboard" ["l"="35.883,2.354"]
"wenet-e2e/wetts" ["l"="38.395,2.028"]
"mcreed/zoombot" ["l"="35.023,2.599"]
"sdetweil/MMM-Config" ["l"="34.538,3.045"]
"jclarke0000/MMM-MyCommute" ["l"="34.504,3.007"]
"randomBrainstormer/MMM-GoogleCalendar" ["l"="34.479,2.98"]
"pannous/caffe-speech-recognition" ["l"="35.647,2.193"]
"amaas/stanford-ctc" ["l"="35.698,2.181"]
"patyork/python-deep-speech" ["l"="35.647,2.129"]
"NervanaSystems/deepspeech" ["l"="35.669,2.231"]
"SeanNaren/deepspeech.torch" ["l"="45.926,27.678"]
"rakeshvar/rnn_ctc" ["l"="35.72,2.123"]
"jonrein/tensorflow_CTC_example" ["l"="35.693,2.157"]
"Picovoice/pvrecorder" ["l"="35.381,2.66"]
"novoic/blabla" ["l"="35.936,2.344"]
"jcvasquezc/DisVoice" ["l"="37.218,2.219"]
"audeering/opensmile-python" ["l"="37.197,2.138"]
"r9y9/pysptk" ["l"="37.241,2.455"]
"uhh-lt/kaldi-model-server" ["l"="35.705,2.548"]
"TensorSpeech/TensorFlowTTS" ["l"="37.227,2.428"]
"zerospeech/zerospeech2021_baseline" ["l"="35.924,2.316"]
"jefflai108/Contrastive-Predictive-Coding-PyTorch" ["l"="53.198,29.623"]
"felixkreuk/UnsupSeg" ["l"="35.97,2.309"]
"ivanvovk/WaveGrad" ["l"="37.371,2.499"]
"bshall/VectorQuantizedCPC" ["l"="37.361,2.632"]
"thomas-yanxin/Cigarette-Detection" ["l"="35.647,1.891"]
"hchhtc123/Sentiment-analysis" ["l"="35.522,1.943"]
"kevinfu1717/multimediaChatbot" ["l"="35.543,1.925"]
"AgentMaker/Paddle-CLIP" ["l"="35.588,1.959"]
"facebookresearch/covost" ["l"="35.821,2.313"]
"kahne/SpeechTransProgress" ["l"="54.031,24.729"]
"google-research-datasets/cvss" ["l"="35.873,2.299"]
"facebookresearch/SimulEval" ["l"="53.969,24.781"]
"facebookresearch/voxpopuli" ["l"="35.783,2.334"]
"dqqcasia/awesome-speech-translation" ["l"="54.003,24.76"]
"bytedance/neurst" ["l"="54.011,24.738"]
"facebookresearch/textlesslib" ["l"="38.497,2.181"]
"dangvansam/viet-asr" ["l"="52.618,-0.257"]
"m3hrdadfi/soxan" ["l"="56.96,27.991"]
"khanld/ASR-Wav2vec-Finetune" ["l"="57.133,28.04"]
"undertheseanlp/NLP-Vietnamese-progress" ["l"="52.761,-0.177"]
"google/live-transcribe-speech-engine" ["l"="35.682,2.625"]
"GoogleCloudPlatform/android-docs-samples" ["l"="23.58,2.017"]
"MidCamp/live-captioning" ["l"="35.726,2.691"]
"googleapis/java-speech" ["l"="35.713,2.664"]
"gkonovalov/android-vad" ["l"="36.962,4.421"]
"ctripcorp/C-OCR" ["l"="-3.468,11.964"]
"ZhangXInFD/SpeechTokenizer" ["l"="38.459,2.072"]
"b04901014/MQTTS" ["l"="38.409,2.139"]
"HLTSingapore/Emotional-Speech-Data" ["l"="38.382,2.277"]
"voidful/Codec-SUPERB" ["l"="38.405,2.129"]
"mdbridge/Vocola-2" ["l"="35.958,2.647"]
"michaelgundlach/pyspeech" ["l"="35.971,2.657"]
"shibing624/pycorrector" ["l"="53.312,27.275"]
"moses-smt/mosesdecoder" ["l"="53.787,24.745"]
"google/sentencepiece" ["l"="53.057,25.762"]
"OpenNMT/OpenNMT-py" ["l"="53.097,25.731"]
"iamjanvijay/rnnt" ["l"="35.873,2.229"]
"cursorless-dev/cursorless" ["l"="36.136,2.68"]
"phillco/talon-axkit" ["l"="36.144,2.701"]
"david-tejada/rango-talon" ["l"="36.103,2.693"]
"speechbrain/speechbrain.github.io" ["l"="35.751,2.384"]
"HarryVolek/PyTorch_Speaker_Verification" ["l"="37.06,3.26"]
"VITA-Group/AutoSpeech" ["l"="37.025,3.3"]
"fgnt/nara_wpe" ["l"="36.79,4.435"]
"speechLabBcCuny/onssen" ["l"="36.659,4.421"]
"jymsuper/SpeakerRecognition_tutorial" ["l"="37.083,3.288"]
"google/speaker-id" ["l"="36.962,3.193"]
"Felflare/rpunct" ["l"="35.838,2.697"]
"cadia-lvl/punctuation-prediction" ["l"="35.818,2.688"]
"cageyoko/CTC-Attention-Mispronunciation" ["l"="35.981,2.429"]
"shawntan/theano-ctc" ["l"="35.761,2.112"]
"shawntan/theano_toolkit" ["l"="35.795,2.079"]
"EbenKouao/MMM-Face-Recognition-SMAI" ["l"="34.761,3.09"]
"EbenKouao/MMM-SmartTouch" ["l"="34.736,3.069"]
"Z-yq/TensorflowTTS" ["l"="37.514,2.364"]
"wenet-e2e/WenetSpeech" ["l"="35.655,2.347"]
"Ephrem-ETH/E2E-KWS" ["l"="35.57,2.615"]
"HolgerBovbjerg/data2vec-KWS" ["l"="35.543,2.559"]
"mrusci/ondevice-learning-kws" ["l"="35.533,2.589"]
"gusrud1103/LibriPhrase" ["l"="35.553,2.632"]
"castorini/howl-deploy" ["l"="35.584,2.605"]
"castorini/honkling" ["l"="35.598,2.637"]
"WhiteFireFox/paddleseg-tutorial" ["l"="35.557,1.758"]
"jm12138/CPM-Generate-Paddle" ["l"="35.58,1.867"]
"hang245141253/raspi4B_mask_detection_runtime" ["l"="35.554,1.78"]
"JiehangXie/Landscape-Heath-Score" ["l"="41.875,25.261"]
"miemie2013/Paddle-SOLOv2" ["l"="35.596,1.769"]
"AgentMaker/Paddle-Image-Models" ["l"="35.611,1.948"]
"AgentMaker/PaTTA" ["l"="35.614,1.96"]
"AgentMaker/Paddle-RLBooks" ["l"="35.598,1.962"]
"sunyuqian1997/WanderBot_public" ["l"="35.631,1.921"]
"PalatinCoder/MMM-GoogleBirthdaysProvider" ["l"="34.592,3.089"]
"lingochamp/Multi-Scale-BERT-AES" ["l"="36.392,2.419"]
"DraqueT/PolyGlot" ["l"="34.788,2.34"]
"conworkshop/conworkshop" ["l"="34.792,2.307"]
"ianmartinez/LangPad" ["l"="34.768,2.323"]
"alexfink/random_language" ["l"="34.752,2.351"]
"def-gthill/lexurgy" ["l"="34.749,2.33"]
"conlang-software-dev/Logopoeist" ["l"="34.807,2.323"]
"yuhr/langue" ["l"="34.776,2.303"]
"wmannis/lexifer" ["l"="34.773,2.361"]
"oliverguhr/fullstop-deep-punctuation-prediction" ["l"="35.821,2.715"]
"hqsiswiliam/punctuation-restoration-scl" ["l"="35.8,2.686"]
"sviperm/neuro-comma" ["l"="35.815,2.763"]
"yeyupiaoling/PunctuationModel" ["l"="35.683,2.419"]
"plkmo/NLP_Toolkit" ["l"="52.963,15.825"]
"chajadan/dragonfluid" ["l"="35.997,2.581"]
"dreamdom/JsSpeechRecognizer" ["l"="35.106,2.496"]
"jhauswald/lucida" ["l"="35.138,2.497"]
"felixkreuk/SegFeat" ["l"="36.007,2.3"]
"TeraTech/MMM-WiFiPassword" ["l"="34.565,3.058"]
"NolanKingdon/MMM-MoonPhase" ["l"="34.521,3.086"]
"jm12138/deep_sort_paddle" ["l"="35.581,1.885"]
"AgentMaker/Paddle-PerceptualSimilarity" ["l"="35.603,1.932"]
"ninetailskim/DodgeFace-EXQver" ["l"="35.615,1.907"]
"jm12138/metric_learning_paddle" ["l"="35.563,1.867"]
"firetools/qgis2fds" ["l"="34.599,2.465"]
"mpezeshki/CTC-Connectionist-Temporal-Classification" ["l"="35.733,2.143"]
"sherjilozair/ctc" ["l"="35.747,2.111"]
"aaron-xichen/cnn-lstm-ctc" ["l"="35.737,2.082"]
"yajiemiao/pdnn" ["l"="44.9,27.615"]
"yajiemiao/eesen" ["l"="35.693,2.278"]
"isadrtdinov/kws-attention" ["l"="35.574,2.664"]
"shawntan/chicken-rice-nn" ["l"="35.812,2.061"]
"TristenHayfield/damselfly" ["l"="36.024,2.657"]
"biemster/gtts" ["l"="35.705,2.77"]
"vadimkantorov/ctc" ["l"="35.906,2.055"]
"TeaPoly/CTC-OptimizedLoss" ["l"="35.863,2.095"]
"jayked/MMM-GoogleTasks" ["l"="34.711,3.114"]
"lucidrains/conformer" ["l"="35.808,2.246"]
"burchim/EfficientConformer" ["l"="35.804,2.288"]
"upskyy/Squeezeformer" ["l"="35.814,2.265"]
"kssteven418/Squeezeformer" ["l"="35.788,2.282"]
"lilianemomeni/KWS-Net" ["l"="35.567,2.596"]
"fidgetingbits/fidgetingbits-talon" ["l"="36.189,2.712"]
"hang245141253/raspi4B_num_demo" ["l"="35.544,1.766"]
"vlomme/Bert-Russian-punctuation" ["l"="35.817,2.789"]
"hgstudent/las" ["l"="35.465,2.487"]
"janchorowski/kaldi-python" ["l"="35.835,2.111"]
"dmitriy-serdyuk/kaldi-python" ["l"="35.791,2.154"]
"ZMpursue/rocm_pytorch_whl" ["l"="35.579,1.742"]
"wolfmanstout/screen-ocr" ["l"="36.062,2.554"]
"miemie2013/Paddle-DIOU-YOLOv3" ["l"="35.607,1.718"]
"miemie2013/PaddlePaddle_yolact" ["l"="35.621,1.721"]
"miemie2013/Paddle-PPYOLO" ["l"="35.608,1.748"]
"prajwalkr/transpotter" ["l"="35.571,2.633"]
"idiap/apam" ["l"="35.875,2.275"]
"miemie2013/Paddle-YOLOv4" ["l"="35.601,1.796"]
"JazminVidal/gop-pykaldi" ["l"="35.937,2.475"]
"Kaljurand/speechutils" ["l"="35.668,2.654"]
"Kaljurand/net-speech-api" ["l"="35.686,2.684"]
"Kaljurand/Arvutaja" ["l"="35.678,2.7"]
"ninetailskim/FlappyPaddle" ["l"="35.613,1.82"]
"ninetailskim/PaddleEGT" ["l"="35.625,1.836"]
"MaCFP/matl-db" ["l"="34.609,2.384"]
"MaCFP/macfp-db" ["l"="34.617,2.404"]
"danFromTelAviv/key_words_spotting" ["l"="35.58,2.711"]
"Kirili4ik/kws-attention-pytorch" ["l"="35.579,2.693"]
"yuboona/punctuation-restoration-pytorch" ["l"="35.776,2.663"]
"PaddlePaddle/PaddleSpeech" ["l"="38.259,1.518"]
"firemodels/fds" ["l"="34.622,2.445"]
"firemodels/cfast" ["l"="34.595,2.433"]
"firemodels/smv" ["l"="34.602,2.415"]
"synthetik-technologies/blastfoam" ["l"="63.432,-2.738"]
"CaNS-World/CaNS" ["l"="63.294,-1.576"]
"Cantera/cantera" ["l"="51.38,25.654"]
"rmcdermo/SublimeFDS" ["l"="34.62,2.472"]
"tumaer/JAXFLUIDS" ["l"="63.257,-1.606"]
"Nek5000/Nek5000" ["l"="63.204,-1.546"]
"serenadeai/serenade" ["l"="36.089,2.64"]
"rhasspy/snowboy-seasalt" ["l"="35.471,2.602"]
"QPT-Family/QPT" ["l"="35.638,1.97"]
"PantsuDango/DangoOCR" ["l"="35.681,1.956"]
"thomas-yanxin/ColugoMum" ["l"="35.662,1.895"]
"PaddleCV-SIG/EISeg" ["l"="53.19,30.497"]
"QPT-Family/QGUI" ["l"="35.695,1.933"]
"gtn-org/gtn" ["l"="35.937,2.214"]
"csukuangfj/transducer-loss-benchmarking" ["l"="35.766,2.347"]
"csukuangfj/kaldi-native-fbank" ["l"="35.702,2.435"]
"RicherMans/Dasheng" ["l"="39.779,5.591"]
"coqui-ai/STT-examples" ["l"="35.468,2.442"]
"mozilla/TTS" ["l"="37.109,2.441"]
"coqui-ai/TTS-papers" ["l"="37.329,2.408"]
"coqui-ai/STT-models" ["l"="35.417,2.256"]
"sooftware/kospeech" ["l"="-5.202,-23.093"]
"sooftware/k-startups" ["l"="-5.21,-23.186"]
"sooftware/ksponspeech" ["l"="-5.321,-23.075"]
"iceychris/LibreASR" ["l"="35.763,2.3"]
"wenet-e2e/wespeaker" ["l"="36.948,3.246"]
"matt-desmarais/SentryTurret" ["l"="34.562,2.775"]
"decentropy/SentryTurret" ["l"="34.585,2.782"]
"zzpDapeng/Transformer-Transducer" ["l"="35.844,2.194"]
"thomas-yanxin/garbage_classification" ["l"="35.672,1.882"]
"double22a/speech_dataset" ["l"="35.658,2.398"]
"ddlBoJack/Speech-Resources" ["l"="38.441,2.095"]
"modelscope/FunCodec" ["l"="38.45,2.08"]
"YuanGongND/ast" ["l"="39.639,5.452"]
"microsoft/NeuralSpeech" ["l"="38.531,1.994"]
"thomas-yanxin/Garbage-test" ["l"="35.659,1.874"]
"thomas-yanxin/the-eye-knows-the-garbage" ["l"="35.631,1.908"]
"ninetailskim/GestureRecognitionWithDA" ["l"="35.621,1.899"]
"modelscope/kws-training-suite" ["l"="35.533,2.507"]
"Kaljurand/K6nele-service" ["l"="35.686,2.586"]
"truongdo/kaldi-gstreamer-android-client" ["l"="35.708,2.572"]
"zagum/SpeechRecognitionView" ["l"="35.544,2.732"]
"julius-speech/dictation-kit" ["l"="35.315,2.446"]
"julius-speech/segmentation-kit" ["l"="35.285,2.45"]
"mmorise/World" ["l"="37.212,2.451"]
"sdkcarlos/HoldOn.js" ["l"="35.047,2.644"]
"jimmybyrum/voice-commands.js" ["l"="35.038,2.574"]
"pazguille/voix" ["l"="35.013,2.562"]
"tryolabs/TLSphinx" ["l"="35.262,2.65"]
"keenresearch/keenasr-ios-poc" ["l"="35.234,2.686"]
"tryolabs/TLFormView" ["l"="35.257,2.68"]
"hiddentao/google-tts" ["l"="34.924,2.569"]
"zlargon/google-tts" ["l"="34.918,2.544"]
"sunyuqian1997/ghost-on-web" ["l"="35.647,1.86"]
"dephrast/botbay" ["l"="35.658,1.817"]
"shadowcz007/AR-lab" ["l"="35.666,1.848"]
"jm12138/License_plate_recognition" ["l"="35.532,1.827"]
"patrickvonplaten/Wav2Vec2_PyCTCDecode" ["l"="57.121,28.01"]
"KrishnaDN/Keyword-Transformer" ["l"="35.546,2.619"]
"mashrurmorshed/Torch-KWT" ["l"="35.559,2.65"]
"wdjose/keyword-transformer" ["l"="35.535,2.612"]
"Qualcomm-AI-research/bcresnet" ["l"="35.495,2.609"]
"robert1ridley/cross-prompt-trait-scoring" ["l"="36.324,2.424"]
"doheejin/ProTACT" ["l"="36.212,2.428"]
"CarryCKW/AES-NPCR" ["l"="36.352,2.421"]
"ewheelerinc/LocalSTT" ["l"="35.648,2.619"]
"ccoreilly/vosk-browser" ["l"="35.658,2.676"]
"msqr1/Vosklet" ["l"="35.666,2.728"]
"dtreskunov/tiny-kaldi" ["l"="35.656,2.712"]
"zxie/nn" ["l"="35.702,2.132"]
"skaae/Lasagne-CTC" ["l"="35.742,2.132"]
"domerin0/rnn-speech" ["l"="35.658,2.152"]
"philipperemy/tensorflow-ctc-speech-recognition" ["l"="35.676,2.166"]
"thomasmesnard/CTC-LSTM" ["l"="35.759,2.135"]
"Thalhammer/snowman" ["l"="35.513,2.609"]
"respeaker/seeed-voicecard" ["l"="36.916,4.619"]
"csukuangfj/kaldilm" ["l"="35.811,2.407"]
"jtrmal/kaldi2020" ["l"="35.788,2.404"]
"csukuangfj/kaldi_native_io" ["l"="35.859,2.421"]
"thomas-yanxin/Mural-Gan" ["l"="35.7,1.878"]
"thomas-yanxin/wechat-living-bot" ["l"="35.706,1.865"]
"thomas-yanxin/Intelligent-retail-product-identification" ["l"="35.71,1.854"]
"thomas-yanxin/AItrainer" ["l"="35.688,1.868"]
"AgentMaker/PaddleQuickInference" ["l"="35.569,1.936"]
"AgentMaker/Paddle-Adversarial-Toolbox" ["l"="35.567,1.958"]
"AgentMaker/Paddle-NEAT" ["l"="35.549,1.953"]
"tararoys/dense-mouse-grid" ["l"="36.147,2.746"]
"HighCWu/stylegan2-pytorch2paddle" ["l"="35.533,1.888"]
"ddlBoJack/Awesome-Speech-Pretraining" ["l"="38.419,2.157"]
"double22a/asr_nlp_paper_code" ["l"="35.655,2.446"]
"GuoQuanhao/PortraitNet-Paddle" ["l"="35.501,1.837"]
"GuoQuanhao/fcanet-Paddle" ["l"="35.506,1.867"]
"AgentMaker/RIFLE_Module" ["l"="35.556,1.943"]
"AI-Research-BD/Keyword-MLP" ["l"="35.563,2.687"]
"Siriuscy/MIXLAB_NASA_TICKET" ["l"="35.689,1.806"]
"vocaliodmiku/wav2vec2mdd-Text" ["l"="36.001,2.422"]
"Mu-Y/mpl-mdd" ["l"="35.99,2.409"]
"jm12138/SkyAR_Paddle_GUI" ["l"="35.563,1.853"]
"AndreasArvidsson/andreas-talon-vscode" ["l"="36.171,2.734"]
"pokey/pokey_talon" ["l"="36.168,2.749"]
"re9ulus/BC-ResNet" ["l"="35.59,2.618"]
"qute012/Pytorch-MHAtt-RNN-KWS" ["l"="35.603,2.609"]
"oliverguhr/deepmultilingualpunctuation" ["l"="35.837,2.751"]
"WhiteFireFox/paddle-gesture-recognition" ["l"="35.546,1.731"]
"biemster/gasr" ["l"="35.719,2.758"]
"TeaPoly/CE-OptimizedLoss" ["l"="35.888,2.072"]
"thomas-yanxin/fatigue-detection" ["l"="35.733,1.847"]
"thomas-yanxin/mask_test" ["l"="35.756,1.829"]
"ITerydh/paddle" ["l"="35.55,1.839"]
"Bug-terminator/Nachos" ["l"="-54.745,-14.402"]
"Allen0828/GPUImage2-Swift" ["l"="-54.764,-14.415"]
"liyang-it/wyy" ["l"="-54.73,-14.424"]
"AgentMaker/Pavlov" ["l"="35.532,1.935"]
"AgentMaker/Paddle-SEQ" ["l"="35.535,1.96"]
"AgentMaker/PaddleMeta" ["l"="35.509,1.925"]
"VoiceCode/docs-DEPRECATED" ["l"="36.246,2.704"]
"leigangblog/Paddlehub_wechaty" ["l"="35.536,1.856"]
"janson9192/autokws2021" ["l"="35.423,2.602"]
"HannahMitt/HomeMirror" ["l"="22.929,-26.666"]
"MagicMirrorOrg/MagicMirror" ["l"="12.17,-9.609"]
"MicrosoftEdge/magic-mirror-demo" ["l"="34.814,2.841"]
"maxbbraun/mirror" ["l"="34.749,2.83"]
"Shinao/SmartMirror" ["l"="34.766,2.795"]
"alexa/alexa-avs-sample-app" ["l"="35.479,1.445"]
"ctrlaltdylan/MirrorMirror" ["l"="34.885,2.817"]
"thibmaek/awesome-raspberry-pi" ["l"="26.51,-26.425"]
"s6joui/MirrorOS" ["l"="34.809,2.802"]
"shivasiddharth/GassistPi" ["l"="35.585,1.378"]
"NielsMasdorp/Speculum-Android" ["l"="34.711,2.809"]
"ineptech/mirror" ["l"="34.705,2.785"]
"hitherejoe/AndroidTvBoilerplate" ["l"="60.704,-14.266"]
"ziem/android-development-blogs" ["l"="57.257,-14.232"]
"googlearchive/webplatform-samples" ["l"="35.051,2.494"]
"girliemac/web-speech-ai" ["l"="35.021,2.462"]
"mdn/webaudio-examples" ["l"="40.134,4.148"]
"mdn/voice-change-o-matic" ["l"="40.265,4.159"]
"dialogflow/dialogflow-javascript-client" ["l"="23.716,1.862"]
"chris-rudmin/opus-recorder" ["l"="40.38,4.339"]
"mdn/dom-examples" ["l"="9.835,-44.563"]
"mdn/web-components-examples" ["l"="-9.274,-24.443"]
"ml5js/ml5-library" ["l"="-32.735,-35.766"]
"Tele-AI/TeleSpeech-ASR" ["l"="38.452,1.969"]
"RapidAI/RapidPunc" ["l"="35.649,2.414"]
"Tzenthin/wenet_mnn" ["l"="35.61,2.239"]
"lovemefan/fsmn-vad" ["l"="38.544,1.842"]
"chenyangMl/keyword-spot" ["l"="35.51,2.5"]
"DavidDiazGuerra/gpuRIR" ["l"="36.758,4.378"]
"ColugoMum/Smart_container" ["l"="35.695,1.856"]
"llSourcell/tensorflow_speech_recognition_demo" ["l"="35.59,2.217"]
"ibab/tensorflow-wavenet" ["l"="37.086,2.543"]
"ppwwyyxx/speaker-recognition" ["l"="37.175,3.294"]
"thomas-yanxin/Useful_Information" ["l"="35.723,1.822"]
"doheejin/HiPAMA" ["l"="36.051,2.429"]
"ai-zahran/E2E-R" ["l"="35.944,2.458"]
"doheejin/SB_loss_PA" ["l"="36.094,2.432"]
"rhss10/joint-apa-mdd-mtl" ["l"="36.059,2.441"]
"Thiagohgl/ai-pronunciation-trainer" ["l"="36,2.459"]
"huytd/speech" ["l"="36.045,2.465"]
"rudder-analytics/Goodness-of-Pronounciation" ["l"="36.032,2.48"]
"yuwchen/MultiPA" ["l"="36.028,2.456"]
"Slyne/ctc_decoder" ["l"="40.81,2.94"]
"snsun/kaldi-decoder-code-reading" ["l"="35.807,2.327"]
"Ant-Brain/EfficientWord-Net" ["l"="35.546,2.596"]
"kssteven418/Q-ASR" ["l"="52.435,33.417"]
"Will-Sommers/cursorless-katas" ["l"="36.117,2.738"]
"mila-iqia/blocks-examples" ["l"="44.875,27.723"]
"hongfeixue/KWS_pytorch" ["l"="35.579,2.649"]
"dwks/silvius-backend" ["l"="35.983,2.547"]
"sam2125/translatotron" ["l"="35.924,2.282"]
"atticoos/MagicMirror" ["l"="34.704,2.738"]
"murugaratham/react-mirror" ["l"="34.69,2.712"]
"plondon/BlackMirror" ["l"="34.673,2.724"]
"benob/recasepunc" ["l"="35.828,2.819"]
"spydersoft-consulting/MMM-GoogleTasks" ["l"="34.454,2.969"]
"sdeva14/sustai21-counter-neural-essay-length" ["l"="36.371,2.421"]
"ASAP-AEG/MTL-Essay-Traits-Scoring" ["l"="36.381,2.435"]
"No3x/MMM-GoogleDocs-Notes" ["l"="34.534,3.103"]
"MMRIZE/MMM-CalendarExt3Agenda" ["l"="34.544,3.114"]
"jarmstrong2/handwritingnet" ["l"="35.764,2.04"]
"jangellx/MagicMirror" ["l"="34.742,2.727"]
"81RD/SmartMirror" ["l"="34.751,2.755"]
"dianwen-ng/Keyword-Spotting-ConvMixer" ["l"="35.621,2.647"]
"aizhiqi-work/MM-KWS" ["l"="35.55,2.673"]
"kaistmm/Metric-UD-KWS" ["l"="35.542,2.657"]
"ninetailskim/Padoodle" ["l"="35.618,1.86"]
"nohaze/Precise-CTC" ["l"="35.771,2.065"]
"mcf06/theano_ctc" ["l"="35.774,2.079"]
"julius-speech/grammar-kit" ["l"="35.245,2.453"]
"weirdseed/Vits-Android-ncnn" ["l"="49.607,30.863"]
"nihui/opencv-mobile" ["l"="50.203,29.912"]
"ssssssilver/sherpa-ncnn-unity" ["l"="32.404,30.413"]
"pnnx/pnnx" ["l"="49.587,30.862"]
"Xiaobin-Rong/gtcrn" ["l"="36.76,4.271"]
"uber-archive/image-diff" ["l"="-2.188,-0.205"]
"paviro/MMM-Facial-Recognition" ["l"="34.711,2.933"]
"BUTSpeechFIT/x-vector-kaldi-tf" ["l"="37.083,3.318"]
"mycrazycracy/tf-kaldi-speaker" ["l"="37.113,3.329"]
"serenadeai/custom-commands" ["l"="36.12,2.627"]
"serenadeai/code" ["l"="36.133,2.609"]
"anonfunc/intellij-voicecode" ["l"="36.103,2.616"]
"phodal/awesome-iot" ["l"="-17.375,-44.786"]
"ms-iot/samples" ["l"="-37.438,1.185"]
"novaspirit/AlexaPi" ["l"="35.534,1.487"]
"tobykurien/rpi_lcars" ["l"="42.737,8.29"]
"guysoft/FullPageOS" ["l"="42.763,7.96"]
"OpenLiveWriter/OpenLiveWriter" ["l"="-34.493,-1.411"]
"Meetic/Shuffle" ["l"="59.179,-15.864"]
"amirarcane/recent-images" ["l"="35.54,2.809"]
"vikramezhil/DroidSpeech" ["l"="35.588,2.761"]
"tata88k/zxing-barcode" ["l"="59.76,-15.752"]
"jakkra/SmartMirror" ["l"="34.744,2.877"]
"jreyes/mirror" ["l"="34.729,2.79"]
"maxbbraun/accent" ["l"="34.677,2.81"]
"dolanmiu/MMM-awesome-alexa" ["l"="34.68,2.957"]
"pettarin/forced-alignment-tools" ["l"="37.211,2.345"]
"florabtw/google-translate-tts" ["l"="34.897,2.518"]
"melling/ErgonomicNotes" ["l"="36.07,2.578"]
"paviro/MMM-Facial-Recognition-Tools" ["l"="34.724,2.912"]
"mochman/MMM-Swipe" ["l"="34.708,2.953"]
"alexyak/motiondetector" ["l"="34.727,2.953"]
"alexyak/camera" ["l"="34.751,2.955"]
"PtrBld/MMM-Scrobbler" ["l"="34.68,2.929"]
"joanaz/MMM-MirrorMirrorOnTheWall" ["l"="34.722,2.974"]
"fewieden/MMM-TTS" ["l"="34.741,2.928"]
"paviro/MMM-syslog" ["l"="34.637,2.919"]
"AlexDespain01/mm-hide-all" ["l"="34.653,2.901"]
"paviro/MMM-Wunderlist" ["l"="34.735,2.993"]
"MichMich/MMM-WatchDog" ["l"="34.629,2.966"]
"ianperrin/MMM-NetworkScanner" ["l"="34.637,2.997"]
"fewieden/MMM-voice" ["l"="34.636,2.947"]
"dialogflow/api-ai-english-asr-model" ["l"="35.768,2.535"]
"huakunyang/SummerTTS" ["l"="38.307,2.038"]
"cnlinxi/book-text-to-speech" ["l"="38.467,2.116"]
"v0lta/Listen-attend-and-spell" ["l"="35.749,2.208"]
"fernandodelacalle/ResNet-Kaldi-Tensorflow-ASR" ["l"="35.788,2.245"]
"jiangnanboy/punctuation_prediction" ["l"="35.69,2.456"]
"frankyoujian/Edge-Punct-Casing" ["l"="35.681,2.449"]
"adobe-research/convmelspec" ["l"="35.421,2.635"]
"ronny3050/internet-monitor" ["l"="34.606,2.969"]
"ColugoMum/Goods_Recognition" ["l"="35.737,1.83"]
"vchahun/pyfst" ["l"="35.899,2.52"]
"pyannote/pyannote-metrics" ["l"="36.924,3.237"]
"ColugoMum/Dataset" ["l"="35.71,1.84"]
"explosion/spaCy" ["l"="52.919,25.931"]
"openai/whisper" ["l"="39.934,0.111"]
"CorentinJ/Real-Time-Voice-Cloning" ["l"="38.241,1.242"]
"facebookresearch/fastText" ["l"="53.043,25.835"]
"tensorflow/models" ["l"="48.134,28.884"]
"ncsoft/PhonMatchNet" ["l"="35.543,2.688"]
"siyuanzhao/automated-essay-grading" ["l"="36.47,2.443"]
"openedx-unsupported/ease" ["l"="36.489,2.433"]
"karthikprasad/automated-essay-grader" ["l"="36.494,2.463"]
"SahilC/AutomaticEssayGrading" ["l"="36.504,2.452"]
"feidong1991/aes" ["l"="36.47,2.419"]
"zlliang/essaysense" ["l"="36.459,2.459"]
"aishmittal/Smart-Mirror" ["l"="34.751,2.858"]
"HackerShackOfficial/Smartphone-Doorlock" ["l"="34.795,2.878"]
"alexa-pi/AlexaPi" ["l"="35.533,1.424"]
"anders94/raspberry-pi-home-automation" ["l"="41.13,6.748"]
"evancohen/sonus-electron-boilerplate" ["l"="34.917,2.703"]
"hackergrrl/electron-speech" ["l"="34.934,2.735"]
"mylisabox/lisa-box" ["l"="34.956,2.714"]
"philipperemy/timit" ["l"="36.695,4.544"]
"keunwoochoi/kapre" ["l"="38.417,4.078"]
"drethage/speech-denoising-wavenet" ["l"="36.723,4.428"]
"karolpiczak/ESC-50" ["l"="39.675,5.378"]
"IGITUGraz/LSNN-official" ["l"="60.794,33.605"]
"KirAsh4/calendar_monthly" ["l"="34.603,2.922"]
"MMRIZE/MMM-Remote-Control-Repository" ["l"="34.599,2.95"]
"Gismo150/MMM-GoogleShoppingList" ["l"="34.677,3.031"]
"Jopyth/MMM-Trello" ["l"="34.592,2.884"]
"boazarad/MMM-CountDown" ["l"="34.564,2.867"]
"fewieden/MMM-ip" ["l"="34.566,2.947"]
"Veldrovive/MMM-Voice-Commands" ["l"="34.735,3.021"]
"thousandlemons/English-words-pronunciation-mp3-audio-download" ["l"="36.029,2.397"]
"louiskirsch/speechT" ["l"="35.539,2.011"]
"hiteshsahu/Android-TTS-STT" ["l"="35.63,2.751"]
"AndroidMaryTTS/AndroidMaryTTS" ["l"="36.91,2.288"]
"vikramezhil/DroidSpeech2.0" ["l"="35.605,2.736"]
"wassgha/MirrorOS" ["l"="34.793,2.787"]
"wassgha/LeapMotionTouchScreen" ["l"="34.78,2.756"]
"wassgha/FaceRecognitionAPI" ["l"="34.8,2.753"]
"synckey/tensorflow_lstm_ctc_ocr" ["l"="46.27,7.114"]
"alexyak/voicecontrol" ["l"="34.785,2.963"]
"VikParuchuri/scan" ["l"="36.524,2.433"]
"dimalik/ats" ["l"="36.464,2.431"]
"benhamner/ASAP-AES" ["l"="36.44,2.459"]
"nusnlp/mlconvgec2018" ["l"="52.854,24.433"]
"nusnlp/smtgec2017" ["l"="52.881,24.458"]
"ianperrin/MMM-Formula1" ["l"="34.633,3.167"]
"juice500ml/dysarthria-gop" ["l"="36.09,2.449"]
"gdufsnlp/PMAES" ["l"="36.233,2.425"]
"silicon-valley-data-science/RNN-Tutorial" ["l"="47.601,28.74"]
"Picovoice/pico-cookbook" ["l"="35.414,2.776"]
"Marak/translate.js" ["l"="34.922,2.609"]
"watson-developer-cloud/text-to-speech-nodejs" ["l"="23.808,2.346"]
"Marak/play.js" ["l"="34.951,2.626"]
"Flotype/now" ["l"="2.036,-34.425"]
"marekrei/sequence-labeler" ["l"="35.913,2.671"]
"jxwuyi/AtNRE" ["l"="55.79,26.628"]
"chrisjbryant/errant" ["l"="52.832,24.409"]
"LukeSkywalker92/MMM-Globe" ["l"="34.581,2.926"]
"joanaz/MirrorMirrorOnTheWallSkill" ["l"="34.755,2.981"]
"mickvanhulst/tf_chatbot_lotr" ["l"="35.58,2.137"]
"Xiaobin-Rong/TRT-SE" ["l"="36.811,4.202"]
"duj12/kws_demo" ["l"="35.486,2.517"]
"YoungJay0612/Single-Channel-Speech-Enhancement" ["l"="35.468,2.518"]
"transfer-learning-asr/transfer-learning-asr" ["l"="35.51,2.014"]
"XBCreepinJesus/MMM-ServerStatus" ["l"="34.535,2.957"]
"paul-schaaf/talon-filetree" ["l"="36.126,2.756"]
"ymcui/Chinese-BERT-wwm" ["l"="53.357,27.223"]
"yh1008/speech-to-text" ["l"="35.885,2.473"]
"bastilimbach/docker-MagicMirror" ["l"="34.579,3.156"]
"cowboysdude/MMM-NOAA3" ["l"="34.565,3.187"]
"ling0322/CatEars" ["l"="35.873,2.569"]
"sakirtemel/MMM-alexa" ["l"="34.664,2.913"]
"JosefJantzen/MMM-AlexaControl" ["l"="34.685,2.911"]
"sentryGun53/Project-Sentry-Gun" ["l"="34.521,2.759"]
"pndurette/gTTS" ["l"="37.02,2.468"]
"espeak-ng/espeak-ng" ["l"="38.548,1.545"]
"Renovamen/Speech-and-Text" ["l"="37.64,2.302"]
"spatialaudio/python-sounddevice" ["l"="38.349,3.975"]
"asweigart/pyautogui" ["l"="-1.377,2.156"]
"rany2/edge-tts" ["l"="38.519,1.512"]
"Ankit404butfound/PyWhatKit" ["l"="27.077,-30.201"]
"KoljaB/RealtimeTTS" ["l"="40.443,3.283"]
"keithito/tacotron" ["l"="37.153,2.502"]
"MycroftAI/mycroft-core" ["l"="35.805,3.154"]
"nanoporetech/fast-ctc-decode" ["l"="40.748,38.825"]
"vin-ni/Google-Cloud-Speech-Node-Socket-Playground" ["l"="34.846,2.599"]
"googleapis/nodejs-storage" ["l"="43.94,16.447"]
"maxwellobi/Android-Speech-Recognition" ["l"="35.594,2.814"]
"dzhelonkin/kaldi_kws" ["l"="35.518,2.52"]
"googleapis/nodejs-vision" ["l"="34.772,2.521"]
"FredKSchott/pika-pack-builders" ["l"="34.717,2.517"]
"googleapis/nodejs-tasks" ["l"="43.941,16.41"]
"jclarke0000/MMM-MyCalendar" ["l"="34.459,3.007"]
"hirofumi0810/asr_preprocessing" ["l"="35.632,2.156"]
"Kyubyong/tacotron_asr" ["l"="37.015,2.658"]
"weedwind/CTC-speech-recognition" ["l"="35.628,2.133"]
"tsroten/zhon" ["l"="35.919,2.375"]
"tsroten/hanzidentifier" ["l"="36.001,2.354"]
"AshleyF/VimSpeak" ["l"="35.995,2.66"]
"ferferga/MMM-GoogleCast" ["l"="34.717,3.028"]
"tsroten/dragonmapper" ["l"="36.045,2.341"]
}