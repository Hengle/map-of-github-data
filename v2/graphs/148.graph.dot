digraph G {
"eragonruan/text-detection-ctpn" -> "YCG09/chinese_ocr"
"eragonruan/text-detection-ctpn" -> "xiaofengShi/CHINESE-OCR"
"eragonruan/text-detection-ctpn" -> "tianzhi0549/CTPN"
"eragonruan/text-detection-ctpn" -> "argman/EAST"
"eragonruan/text-detection-ctpn" -> "bear63/sceneReco"
"eragonruan/text-detection-ctpn" -> "bgshih/crnn"
"eragonruan/text-detection-ctpn" -> "meijieru/crnn.pytorch"
"eragonruan/text-detection-ctpn" -> "chineseocr/chineseocr"
"eragonruan/text-detection-ctpn" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"eragonruan/text-detection-ctpn" -> "huoyijie/AdvancedEAST"
"eragonruan/text-detection-ctpn" -> "ankush-me/SynthText"
"eragonruan/text-detection-ctpn" -> "Belval/TextRecognitionDataGenerator"
"eragonruan/text-detection-ctpn" -> "MaybeShewill-CV/CRNN_Tensorflow"
"eragonruan/text-detection-ctpn" -> "JarveeLee/SynthText_Chinese_version"
"eragonruan/text-detection-ctpn" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"chineseocr/chinese-ocr" -> "bear63/sceneReco"
"chineseocr/chinese-ocr" -> "JinpengLI/deep_ocr"
"chineseocr/chinese-ocr" -> "tianzhi0549/CTPN"
"chineseocr/chinese-ocr" -> "JarveeLee/SynthText_Chinese_version"
"chineseocr/chinese-ocr" -> "senlinuc/caffe_ocr"
"chineseocr/chinese-ocr" -> "eragonruan/text-detection-ctpn"
"chineseocr/chinese-ocr" -> "chineseocr/new-text-detection-ctpn"
"chineseocr/chinese-ocr" -> "ilovin/lstm_ctc_ocr"
"chineseocr/chinese-ocr" -> "dengdan/seglink"
"chineseocr/chinese-ocr" -> "tongpi/basicOCR"
"chineseocr/chinese-ocr" -> "wushilian/CRNN_Attention_OCR_Chinese"
"chineseocr/chinese-ocr" -> "xiaomaxiao/keras_ocr"
"chineseocr/chinese-ocr" -> "wanghaisheng/awesome-ocr"
"chineseocr/chinese-ocr" -> "bgshih/crnn"
"chineseocr/chinese-ocr" -> "ankush-me/SynthText"
"breezedeus/CnOCR" -> "breezedeus/CnSTD"
"breezedeus/CnOCR" -> "chineseocr/chineseocr"
"breezedeus/CnOCR" -> "DayBreak-u/chineseocr_lite"
"breezedeus/CnOCR" -> "xiaofengShi/CHINESE-OCR"
"breezedeus/CnOCR" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"breezedeus/CnOCR" -> "YCG09/chinese_ocr"
"breezedeus/CnOCR" -> "Sanster/text_renderer"
"breezedeus/CnOCR" -> "RapidAI/RapidOCR" ["e"=1]
"breezedeus/CnOCR" -> "alisen39/TrWebOCR"
"breezedeus/CnOCR" -> "myhub/tr"
"breezedeus/CnOCR" -> "chineseocr/darknet-ocr"
"breezedeus/CnOCR" -> "diaomin/crnn-mxnet-chinese-text-recognition"
"breezedeus/CnOCR" -> "PaddlePaddle/PaddleOCR" ["e"=1]
"breezedeus/CnOCR" -> "MhLiao/DB"
"breezedeus/CnOCR" -> "eragonruan/text-detection-ctpn"
"Gsllchb/Handright" -> "HaujetZhao/QuickHand"
"Gsllchb/Handright" -> "why20021008/hand-write"
"Gsllchb/Handright" -> "kivvi3412/HandWrite"
"Gsllchb/Handright" -> "guofei9987/blind_watermark" ["e"=1]
"Gsllchb/Handright" -> "TransparentLC/WechatMomentScreenshot" ["e"=1]
"Gsllchb/Handright" -> "thunlp/WantWords" ["e"=1]
"Gsllchb/Handright" -> "dailenson/SDT"
"Gsllchb/Handright" -> "itorr/nbnhhsh" ["e"=1]
"Gsllchb/Handright" -> "ZERO-A-ONE/BullshitGenerator-handwrite"
"Gsllchb/Handright" -> "OpenWebGAL/WebGAL" ["e"=1]
"Gsllchb/Handright" -> "menzi11/BullshitGenerator" ["e"=1]
"Gsllchb/Handright" -> "kaonashi-tyc/zi2zi" ["e"=1]
"Gsllchb/Handright" -> "CodFrm/cxmooc-tools" ["e"=1]
"Gsllchb/Handright" -> "Icalingua-plus-plus/Icalingua-plus-plus" ["e"=1]
"Gsllchb/Handright" -> "Baiyuetribe/paper2gui" ["e"=1]
"sjvasquez/handwriting-synthesis" -> "Grzego/handwriting-generation"
"sjvasquez/handwriting-synthesis" -> "saurabhdaware/text-to-handwriting" ["e"=1]
"sjvasquez/handwriting-synthesis" -> "swechhasingh/Handwriting-synthesis"
"sjvasquez/handwriting-synthesis" -> "GirkovArpa/calligrapher-ai"
"sjvasquez/handwriting-synthesis" -> "otuva/handwriting-synthesis"
"sjvasquez/handwriting-synthesis" -> "greydanus/scribe"
"sjvasquez/handwriting-synthesis" -> "Belval/TextRecognitionDataGenerator"
"sjvasquez/handwriting-synthesis" -> "EvilPort2/Sign-Language" ["e"=1]
"sjvasquez/handwriting-synthesis" -> "amzn/convolutional-handwriting-gan"
"sjvasquez/handwriting-synthesis" -> "kaonashi-tyc/zi2zi" ["e"=1]
"sjvasquez/handwriting-synthesis" -> "hardmaru/write-rnn-tensorflow"
"sjvasquez/handwriting-synthesis" -> "NVIDIA/FastPhotoStyle" ["e"=1]
"sjvasquez/handwriting-synthesis" -> "carpedm20/ENAS-pytorch" ["e"=1]
"sjvasquez/handwriting-synthesis" -> "szcom/rnnlib"
"sjvasquez/handwriting-synthesis" -> "clovaai/donut" ["e"=1]
"ocrbook/ocrinaction" -> "lvpengyuan/corner"
"ocrbook/ocrinaction" -> "chineseocr/table-ocr" ["e"=1]
"ocrbook/ocrinaction" -> "limengyang1992/seq2seq-layout-analysis" ["e"=1]
"ocrbook/ocrinaction" -> "tommyMessi/crnn_ctc-centerloss" ["e"=1]
"ocrbook/ocrinaction" -> "Vincent131499/Chinese-OCR3"
"ocrbook/ocrinaction" -> "HCIILAB/Scene-Text-Recognition"
"ocrbook/ocrinaction" -> "chenjun2hao/Attention_ocr.pytorch"
"ocrbook/ocrinaction" -> "Canjie-Luo/Text-Image-Augmentation"
"ocrbook/ocrinaction" -> "WenmuZhou/OCR_DataSet"
"ocrbook/ocrinaction" -> "wenwenyu/MASTER-pytorch" ["e"=1]
"ocrbook/ocrinaction" -> "Wang-Tianwei/Decoupled-attention-network"
"ocrbook/ocrinaction" -> "Yuliang-Liu/bezier_curve_text_spotting"
"ocrbook/ocrinaction" -> "BADBADBADBOY/pytorchOCR"
"ocrbook/ocrinaction" -> "WenmuZhou/PAN.pytorch"
"ocrbook/ocrinaction" -> "Rid7/Table-OCR" ["e"=1]
"Calamari-OCR/calamari" -> "mittagessen/kraken" ["e"=1]
"Calamari-OCR/calamari" -> "ocropus-archive/DUP-ocropy"
"Calamari-OCR/calamari" -> "Calamari-OCR/calamari_models" ["e"=1]
"Calamari-OCR/calamari" -> "OCR4all/OCR4all" ["e"=1]
"Calamari-OCR/calamari" -> "dhlab-epfl/dhSegment" ["e"=1]
"Calamari-OCR/calamari" -> "OCR4all/LAREX" ["e"=1]
"Calamari-OCR/calamari" -> "kba/awesome-ocr"
"Calamari-OCR/calamari" -> "NVlabs/ocropus3" ["e"=1]
"Calamari-OCR/calamari" -> "emedvedev/attention-ocr"
"Calamari-OCR/calamari" -> "da03/Attention-OCR"
"Calamari-OCR/calamari" -> "qurator-spk/eynollah" ["e"=1]
"Calamari-OCR/calamari" -> "lquirosd/P2PaLA" ["e"=1]
"Calamari-OCR/calamari" -> "UB-Mannheim/ocr-fileformat" ["e"=1]
"Calamari-OCR/calamari" -> "Belval/TextRecognitionDataGenerator"
"Calamari-OCR/calamari" -> "MhLiao/TextBoxes_plusplus"
"ypwhs/dl-engineer-guidebook" -> "ypwhs/deeplearning-models"
"ypwhs/dl-engineer-guidebook" -> "ypwhs/dogs_vs_cats"
"ypwhs/dl-engineer-guidebook" -> "yhangf/ML-NOTE" ["e"=1]
"ypwhs/dl-engineer-guidebook" -> "ypwhs/baiduyun_deeplearning_competition"
"ypwhs/dl-engineer-guidebook" -> "lpty/nlp_base" ["e"=1]
"ypwhs/dl-engineer-guidebook" -> "ypwhs/captcha_break" ["e"=1]
"ypwhs/dl-engineer-guidebook" -> "jindongwang/transferlearning-tutorial" ["e"=1]
"ypwhs/dl-engineer-guidebook" -> "jianzhu/dl-notes" ["e"=1]
"clovaai/deep-text-recognition-benchmark" -> "clovaai/CRAFT-pytorch"
"clovaai/deep-text-recognition-benchmark" -> "Belval/TextRecognitionDataGenerator"
"clovaai/deep-text-recognition-benchmark" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"clovaai/deep-text-recognition-benchmark" -> "MhLiao/DB"
"clovaai/deep-text-recognition-benchmark" -> "ankush-me/SynthText"
"clovaai/deep-text-recognition-benchmark" -> "meijieru/crnn.pytorch"
"clovaai/deep-text-recognition-benchmark" -> "open-mmlab/mmocr"
"clovaai/deep-text-recognition-benchmark" -> "Sanster/text_renderer"
"clovaai/deep-text-recognition-benchmark" -> "whai362/PSENet"
"clovaai/deep-text-recognition-benchmark" -> "HCIILAB/Scene-Text-Recognition"
"clovaai/deep-text-recognition-benchmark" -> "ayumiymk/aster.pytorch"
"clovaai/deep-text-recognition-benchmark" -> "argman/EAST"
"clovaai/deep-text-recognition-benchmark" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"clovaai/deep-text-recognition-benchmark" -> "backtime92/CRAFT-Reimplementation"
"clovaai/deep-text-recognition-benchmark" -> "Jyouhou/SceneTextPapers"
"Roujack/mathAI" -> "LinXueyuanStdio/LaTeX_OCR_PRO" ["e"=1]
"Roujack/mathAI" -> "LinXueyuanStdio/LaTeX_OCR" ["e"=1]
"Roujack/mathAI" -> "whywhs/Pytorch-Handwritten-Mathematical-Expression-Recognition" ["e"=1]
"Roujack/mathAI" -> "xiaofengShi/CHINESE-OCR"
"Roujack/mathAI" -> "JarveeLee/SynthText_Chinese_version"
"Roujack/mathAI" -> "YCG09/chinese_ocr"
"Roujack/mathAI" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"Roujack/mathAI" -> "harvardnlp/im2markup" ["e"=1]
"Roujack/mathAI" -> "falvaro/seshat" ["e"=1]
"Roujack/mathAI" -> "chineseocr/chineseocr"
"Roujack/mathAI" -> "huoyijie/AdvancedEAST"
"Roujack/mathAI" -> "whai362/PSENet"
"Roujack/mathAI" -> "vipstone/faceai" ["e"=1]
"Roujack/mathAI" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"Roujack/mathAI" -> "jungomi/math-formula-recognition" ["e"=1]
"senlinuc/caffe_ocr" -> "JarveeLee/SynthText_Chinese_version"
"senlinuc/caffe_ocr" -> "YCG09/chinese_ocr"
"senlinuc/caffe_ocr" -> "Sanster/text_renderer"
"senlinuc/caffe_ocr" -> "bear63/sceneReco"
"senlinuc/caffe_ocr" -> "tianzhi0549/CTPN"
"senlinuc/caffe_ocr" -> "xiaomaxiao/keras_ocr"
"senlinuc/caffe_ocr" -> "bgshih/crnn"
"senlinuc/caffe_ocr" -> "xiaofengShi/CHINESE-OCR"
"senlinuc/caffe_ocr" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"senlinuc/caffe_ocr" -> "ankush-me/SynthText"
"senlinuc/caffe_ocr" -> "eragonruan/text-detection-ctpn"
"senlinuc/caffe_ocr" -> "huoyijie/AdvancedEAST"
"senlinuc/caffe_ocr" -> "wanghaisheng/awesome-ocr"
"senlinuc/caffe_ocr" -> "argman/EAST"
"senlinuc/caffe_ocr" -> "da03/Attention-OCR"
"Bartzi/see" -> "Bartzi/stn-ocr"
"Bartzi/see" -> "MichalBusta/DeepTextSpotter"
"Bartzi/see" -> "bgshih/aster"
"Bartzi/see" -> "MhLiao/TextBoxes_plusplus"
"Bartzi/see" -> "dengdan/seglink"
"Bartzi/see" -> "Canjie-Luo/MORAN_v2"
"Bartzi/see" -> "ZJULearning/pixel_link"
"Bartzi/see" -> "da03/Attention-OCR"
"Bartzi/see" -> "Yuliang-Liu/Curve-Text-Detector"
"Bartzi/see" -> "tonghe90/textspotter"
"Bartzi/see" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"Bartzi/see" -> "summerlvsong/Aggregation-Cross-Entropy"
"Bartzi/see" -> "JarveeLee/SynthText_Chinese_version"
"Bartzi/see" -> "bgshih/crnn"
"Bartzi/see" -> "lvpengyuan/masktextspotter.caffe2"
"xiaomaxiao/keras_ocr" -> "JarveeLee/SynthText_Chinese_version"
"xiaomaxiao/keras_ocr" -> "YCG09/chinese_ocr"
"xiaomaxiao/keras_ocr" -> "senlinuc/caffe_ocr"
"xiaomaxiao/keras_ocr" -> "bear63/sceneReco"
"xiaomaxiao/keras_ocr" -> "wushilian/CRNN_Attention_OCR_Chinese"
"xiaomaxiao/keras_ocr" -> "Sanster/text_renderer"
"xiaomaxiao/keras_ocr" -> "eragonruan/text-detection-ctpn"
"xiaomaxiao/keras_ocr" -> "xiaofengShi/CHINESE-OCR"
"xiaomaxiao/keras_ocr" -> "bai-shang/crnn_ctc_ocr_tf"
"xiaomaxiao/keras_ocr" -> "GlassyWing/text-detection-ocr"
"xiaomaxiao/keras_ocr" -> "tianzhi0549/CTPN"
"xiaomaxiao/keras_ocr" -> "jiangxiluning/chinese-ocr"
"xiaomaxiao/keras_ocr" -> "AstarLight/Lets_OCR"
"xiaomaxiao/keras_ocr" -> "huoyijie/AdvancedEAST"
"xiaomaxiao/keras_ocr" -> "opconty/pytorch_ctpn"
"YCG09/chinese_ocr" -> "xiaofengShi/CHINESE-OCR"
"YCG09/chinese_ocr" -> "eragonruan/text-detection-ctpn"
"YCG09/chinese_ocr" -> "chineseocr/chineseocr"
"YCG09/chinese_ocr" -> "Sanster/text_renderer"
"YCG09/chinese_ocr" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"YCG09/chinese_ocr" -> "senlinuc/caffe_ocr"
"YCG09/chinese_ocr" -> "JarveeLee/SynthText_Chinese_version"
"YCG09/chinese_ocr" -> "Belval/TextRecognitionDataGenerator"
"YCG09/chinese_ocr" -> "xiaomaxiao/keras_ocr"
"YCG09/chinese_ocr" -> "huoyijie/AdvancedEAST"
"YCG09/chinese_ocr" -> "meijieru/crnn.pytorch"
"YCG09/chinese_ocr" -> "AstarLight/CPS-OCR-Engine"
"YCG09/chinese_ocr" -> "argman/EAST"
"YCG09/chinese_ocr" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"YCG09/chinese_ocr" -> "bear63/sceneReco"
"HaozhengLi/EAST_ICPR" -> "zfxxfeng/cnn_lstm_ctc_ocr_for_ICPR"
"HaozhengLi/EAST_ICPR" -> "deepthinking-qichao/EAST_ICPR2018"
"HaozhengLi/EAST_ICPR" -> "xieyufei1993/InceptText-Tensorflow"
"Sanster/text_renderer" -> "oh-my-ocr/text_renderer"
"Sanster/text_renderer" -> "JarveeLee/SynthText_Chinese_version"
"Sanster/text_renderer" -> "Belval/TextRecognitionDataGenerator"
"Sanster/text_renderer" -> "ankush-me/SynthText"
"Sanster/text_renderer" -> "YCG09/chinese_ocr"
"Sanster/text_renderer" -> "MhLiao/DB"
"Sanster/text_renderer" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"Sanster/text_renderer" -> "whai362/PSENet"
"Sanster/text_renderer" -> "WenmuZhou/DBNet.pytorch"
"Sanster/text_renderer" -> "senlinuc/caffe_ocr"
"Sanster/text_renderer" -> "WenmuZhou/OCR_DataSet"
"Sanster/text_renderer" -> "xiaofengShi/CHINESE-OCR"
"Sanster/text_renderer" -> "huoyijie/AdvancedEAST"
"Sanster/text_renderer" -> "bgshih/aster"
"Sanster/text_renderer" -> "ayumiymk/aster.pytorch"
"Jyouhou/SceneTextPapers" -> "HCIILAB/Scene-Text-Recognition"
"Jyouhou/SceneTextPapers" -> "whitelok/image-text-localization-recognition"
"Jyouhou/SceneTextPapers" -> "Canjie-Luo/MORAN_v2"
"Jyouhou/SceneTextPapers" -> "Megvii-CSG/MegReader"
"Jyouhou/SceneTextPapers" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"Jyouhou/SceneTextPapers" -> "whai362/PSENet"
"Jyouhou/SceneTextPapers" -> "HCIILAB/Scene-Text-Detection"
"Jyouhou/SceneTextPapers" -> "ayumiymk/aster.pytorch"
"Jyouhou/SceneTextPapers" -> "princewang1994/TextSnake.pytorch"
"Jyouhou/SceneTextPapers" -> "jiangxiluning/FOTS.PyTorch"
"Jyouhou/SceneTextPapers" -> "lvpengyuan/corner"
"Jyouhou/SceneTextPapers" -> "summerlvsong/Aggregation-Cross-Entropy"
"Jyouhou/SceneTextPapers" -> "Yuliang-Liu/Curve-Text-Detector"
"Jyouhou/SceneTextPapers" -> "msight-tech/research-charnet"
"Jyouhou/SceneTextPapers" -> "ankush-me/SynthText"
"Walleclipse/ChineseAddress_OCR" -> "hsddlz/faster-CTPN"
"Walleclipse/ChineseAddress_OCR" -> "ooooverflow/chinese-ocr"
"Walleclipse/ChineseAddress_OCR" -> "yinchangchang/ocr_densenet"
"Walleclipse/ChineseAddress_OCR" -> "chizhanyuefeng/Chinese_OCR_CNN-RNN-CTC"
"Walleclipse/ChineseAddress_OCR" -> "YCG09/chinese_ocr"
"Walleclipse/ChineseAddress_OCR" -> "A-bone1/Attention-ocr-Chinese-Version"
"Walleclipse/ChineseAddress_OCR" -> "JarveeLee/SynthText_Chinese_version"
"Walleclipse/ChineseAddress_OCR" -> "Sanster/text_renderer"
"Walleclipse/ChineseAddress_OCR" -> "BADBADBADBOY/DBnet-lite.pytorch"
"Walleclipse/ChineseAddress_OCR" -> "lvpengyuan/corner"
"Walleclipse/ChineseAddress_OCR" -> "Vipermdl/OCR_detection_IC15"
"Walleclipse/ChineseAddress_OCR" -> "Canjie-Luo/MORAN_v2"
"Walleclipse/ChineseAddress_OCR" -> "wang-tf/Chinese_OCR_synthetic_data"
"Walleclipse/ChineseAddress_OCR" -> "Canjie-Luo/Text-Image-Augmentation"
"Walleclipse/ChineseAddress_OCR" -> "tongpi/basicOCR"
"Canjie-Luo/MORAN_v2" -> "bgshih/aster"
"Canjie-Luo/MORAN_v2" -> "ayumiymk/aster.pytorch"
"Canjie-Luo/MORAN_v2" -> "summerlvsong/Aggregation-Cross-Entropy"
"Canjie-Luo/MORAN_v2" -> "Wang-Tianwei/Decoupled-attention-network"
"Canjie-Luo/MORAN_v2" -> "princewang1994/TextSnake.pytorch"
"Canjie-Luo/MORAN_v2" -> "HCIILAB/Scene-Text-Recognition"
"Canjie-Luo/MORAN_v2" -> "whai362/PSENet"
"Canjie-Luo/MORAN_v2" -> "WenmuZhou/PAN.pytorch"
"Canjie-Luo/MORAN_v2" -> "Jyouhou/SceneTextPapers"
"Canjie-Luo/MORAN_v2" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"Canjie-Luo/MORAN_v2" -> "Canjie-Luo/Text-Image-Augmentation"
"Canjie-Luo/MORAN_v2" -> "Megvii-CSG/MegReader"
"Canjie-Luo/MORAN_v2" -> "msight-tech/research-charnet"
"Canjie-Luo/MORAN_v2" -> "Yuliang-Liu/Curve-Text-Detector"
"Canjie-Luo/MORAN_v2" -> "Yuliang-Liu/bezier_curve_text_spotting"
"JiageWang/hand-writing-recognition" -> "chenyr0021/Chinese_character_recognition"
"JiageWang/hand-writing-recognition" -> "peterWon/CASIA-HWDB-Recognition"
"JiageWang/hand-writing-recognition" -> "integeruser/CASIA-HWDB1.1-cnn"
"chineseocr/chineseocr" -> "xiaofengShi/CHINESE-OCR"
"chineseocr/chineseocr" -> "YCG09/chinese_ocr"
"chineseocr/chineseocr" -> "DayBreak-u/chineseocr_lite"
"chineseocr/chineseocr" -> "chineseocr/darknet-ocr"
"chineseocr/chineseocr" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"chineseocr/chineseocr" -> "eragonruan/text-detection-ctpn"
"chineseocr/chineseocr" -> "meijieru/crnn.pytorch"
"chineseocr/chineseocr" -> "Sanster/text_renderer"
"chineseocr/chineseocr" -> "Belval/TextRecognitionDataGenerator"
"chineseocr/chineseocr" -> "guanshuicheng/invoice"
"chineseocr/chineseocr" -> "MhLiao/DB"
"chineseocr/chineseocr" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"chineseocr/chineseocr" -> "huoyijie/AdvancedEAST"
"chineseocr/chineseocr" -> "argman/EAST"
"chineseocr/chineseocr" -> "senlinuc/caffe_ocr"
"liuhu-bigeye/enctc.crnn" -> "summerlvsong/Aggregation-Cross-Entropy"
"liuhu-bigeye/enctc.crnn" -> "tommyMessi/crnn_ctc-pos" ["e"=1]
"liuhu-bigeye/enctc.crnn" -> "Megvii-CSG/MegReader"
"liuhu-bigeye/enctc.crnn" -> "tommyMessi/crnn_ctc-centerloss" ["e"=1]
"hwalsuklee/awesome-deep-text-detection-recognition" -> "clovaai/deep-text-recognition-benchmark"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "clovaai/CRAFT-pytorch"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "MhLiao/DB"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "ankush-me/SynthText"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "Jyouhou/SceneTextPapers"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "Belval/TextRecognitionDataGenerator"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "whai362/PSENet"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "jiangxiluning/FOTS.PyTorch"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "argman/EAST"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "huoyijie/AdvancedEAST"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "xiaofengShi/CHINESE-OCR"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "Sanster/text_renderer"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "eragonruan/text-detection-ctpn"
"hwalsuklee/awesome-deep-text-detection-recognition" -> "HCIILAB/Scene-Text-Recognition"
"jiangxiluning/chinese-ocr" -> "xiaomaxiao/keras_ocr"
"jiangxiluning/chinese-ocr" -> "huoyijie/AdvancedEAST"
"jiangxiluning/chinese-ocr" -> "bear63/sceneReco"
"jiangxiluning/chinese-ocr" -> "eragonruan/text-detection-ctpn"
"jiangxiluning/chinese-ocr" -> "AstarLight/CPS-OCR-Engine"
"jiangxiluning/chinese-ocr" -> "Li-Ming-Fan/OCR-DETECTION-CTPN"
"jiangxiluning/chinese-ocr" -> "xiaofengShi/CHINESE-OCR"
"jiangxiluning/chinese-ocr" -> "YCG09/chinese_ocr"
"jiangxiluning/chinese-ocr" -> "YoungMiao/crnn"
"jiangxiluning/chinese-ocr" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"jiangxiluning/chinese-ocr" -> "JarveeLee/SynthText_Chinese_version"
"jiangxiluning/chinese-ocr" -> "AstarLight/Lets_OCR"
"jiangxiluning/chinese-ocr" -> "jimmyleaf/ocr_tensorflow_cnn"
"jiangxiluning/chinese-ocr" -> "senlinuc/caffe_ocr"
"jiangxiluning/chinese-ocr" -> "ZJULearning/pixel_link"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "meijieru/crnn.pytorch"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "xiaofengShi/CHINESE-OCR"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "YCG09/chinese_ocr"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "Sanster/text_renderer"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "bgshih/crnn"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "AstarLight/Lets_OCR"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "MhLiao/DB"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "chineseocr/chineseocr"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "eragonruan/text-detection-ctpn"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "whai362/PSENet"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "MaybeShewill-CV/CRNN_Tensorflow"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "Belval/TextRecognitionDataGenerator"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "JarveeLee/SynthText_Chinese_version"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "senlinuc/caffe_ocr"
"Sierkinhane/CRNN_Chinese_Characters_Rec" -> "huoyijie/AdvancedEAST"
"yooongchun/Invoice2Excel" -> "sanluan/einvoice"
"yooongchun/Invoice2Excel" -> "mvpboss1004/invoice_extraction"
"yooongchun/Invoice2Excel" -> "huanglu20124/invoice"
"yooongchun/Invoice2Excel" -> "xuwenxue000/PJ_PREDICT_IMG"
"shuoGG1239/Image2Text" -> "StevenQi7/ImageOcr"
"shuoGG1239/Image2Text" -> "yinchangchang/ocr_densenet"
"shuoGG1239/Image2Text" -> "chenguanyou/CharacterRecognition"
"simonflueckiger/tesserocr-windows_build" -> "sirfz/tesserocr"
"BIGPPWONG/idcardocr" -> "sam-ke/idCardOcr"
"BIGPPWONG/idcardocr" -> "isee15/Card-Ocr"
"BIGPPWONG/idcardocr" -> "yghstill/deepLearning_OCR"
"BIGPPWONG/idcardocr" -> "jimmyleaf/ocr_tensorflow_cnn"
"BIGPPWONG/idcardocr" -> "XieZhiFa/IdCardOCR" ["e"=1]
"BIGPPWONG/idcardocr" -> "Mingtzge/2019-CCF-BDCI-OCR-MCZJ-OCR-IdentificationIDElement" ["e"=1]
"BIGPPWONG/idcardocr" -> "hzli-ucas/CCF-OCR"
"BIGPPWONG/idcardocr" -> "JinpengLI/deep_ocr"
"BIGPPWONG/idcardocr" -> "portumo/chinese-bankCard-idcard-recognition"
"BIGPPWONG/idcardocr" -> "wzb96/idCardRecognition" ["e"=1]
"BIGPPWONG/idcardocr" -> "Walleclipse/ChineseAddress_OCR"
"BIGPPWONG/idcardocr" -> "evilgix/Evil" ["e"=1]
"chenguanyou/CharacterRecognition" -> "chenguanyou/BaiduTextApi"
"jjcheer/ocrcn_tf2" -> "jinxiwang/ocr_TDR"
"jjcheer/ocrcn_tf2" -> "taosir/cnn_handwritten_chinese_recognition"
"jjcheer/ocrcn_tf2" -> "Mignet/chinese-write-handling-char-recognition"
"jjcheer/ocrcn_tf2" -> "chenyr0021/Chinese_character_recognition"
"jjcheer/ocrcn_tf2" -> "xiaofengShi/CHINESE-OCR"
"jjcheer/ocrcn_tf2" -> "integeruser/CASIA-HWDB1.1-cnn"
"jjcheer/ocrcn_tf2" -> "GlassyWing/text-detection-ocr"
"jjcheer/ocrcn_tf2" -> "YCG09/chinese_ocr"
"jjcheer/ocrcn_tf2" -> "JiageWang/hand-writing-recognition"
"jjcheer/ocrcn_tf2" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"jjcheer/ocrcn_tf2" -> "yinchangchang/ocr_densenet"
"jjcheer/ocrcn_tf2" -> "AstarLight/CPS-OCR-Engine"
"jjcheer/ocrcn_tf2" -> "peterWon/CASIA-HWDB-Recognition"
"jjcheer/ocrcn_tf2" -> "MachineLP/OCR_Keras"
"jjcheer/ocrcn_tf2" -> "myhub/tr"
"whai362/PSENet" -> "liuheng92/tensorflow_PSENet"
"whai362/PSENet" -> "MhLiao/DB"
"whai362/PSENet" -> "WenmuZhou/PSENet.pytorch"
"whai362/PSENet" -> "ZJULearning/pixel_link"
"whai362/PSENet" -> "huoyijie/AdvancedEAST"
"whai362/PSENet" -> "jiangxiluning/FOTS.PyTorch"
"whai362/PSENet" -> "Yuliang-Liu/Curve-Text-Detector"
"whai362/PSENet" -> "WenmuZhou/PAN.pytorch"
"whai362/PSENet" -> "JarveeLee/SynthText_Chinese_version"
"whai362/PSENet" -> "WenmuZhou/DBNet.pytorch"
"whai362/PSENet" -> "bgshih/aster"
"whai362/PSENet" -> "msight-tech/research-charnet"
"whai362/PSENet" -> "whai362/pan_pp.pytorch"
"whai362/PSENet" -> "Canjie-Luo/MORAN_v2"
"whai362/PSENet" -> "princewang1994/TextSnake.pytorch"
"janzd/CRNN" -> "Tony607/keras-image-ocr"
"janzd/CRNN" -> "Liumihan/CRNN_kreas"
"AstarLight/CPS-OCR-Engine" -> "AstarLight/Lets_OCR"
"AstarLight/CPS-OCR-Engine" -> "YCG09/chinese_ocr"
"AstarLight/CPS-OCR-Engine" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"AstarLight/CPS-OCR-Engine" -> "xiaofengShi/CHINESE-OCR"
"AstarLight/CPS-OCR-Engine" -> "JarveeLee/SynthText_Chinese_version"
"AstarLight/CPS-OCR-Engine" -> "eragonruan/text-detection-ctpn"
"AstarLight/CPS-OCR-Engine" -> "senlinuc/caffe_ocr"
"AstarLight/CPS-OCR-Engine" -> "bear63/sceneReco"
"AstarLight/CPS-OCR-Engine" -> "xiaomaxiao/keras_ocr"
"AstarLight/CPS-OCR-Engine" -> "wanghaisheng/awesome-ocr"
"AstarLight/CPS-OCR-Engine" -> "JinpengLI/deep_ocr"
"AstarLight/CPS-OCR-Engine" -> "huoyijie/AdvancedEAST"
"AstarLight/CPS-OCR-Engine" -> "Sanster/text_renderer"
"AstarLight/CPS-OCR-Engine" -> "bgshih/crnn"
"AstarLight/CPS-OCR-Engine" -> "chineseocr/chineseocr"
"ZJULearning/pixel_link" -> "dengdan/seglink"
"ZJULearning/pixel_link" -> "huoyijie/AdvancedEAST"
"ZJULearning/pixel_link" -> "whai362/PSENet"
"ZJULearning/pixel_link" -> "MhLiao/TextBoxes_plusplus"
"ZJULearning/pixel_link" -> "argman/EAST"
"ZJULearning/pixel_link" -> "liuheng92/tensorflow_PSENet"
"ZJULearning/pixel_link" -> "jiangxiluning/FOTS.PyTorch"
"ZJULearning/pixel_link" -> "JarveeLee/SynthText_Chinese_version"
"ZJULearning/pixel_link" -> "Yuliang-Liu/Curve-Text-Detector"
"ZJULearning/pixel_link" -> "Canjie-Luo/MORAN_v2"
"ZJULearning/pixel_link" -> "tonghe90/textspotter"
"ZJULearning/pixel_link" -> "Jyouhou/SceneTextPapers"
"ZJULearning/pixel_link" -> "lvpengyuan/corner"
"ZJULearning/pixel_link" -> "princewang1994/TextSnake.pytorch"
"ZJULearning/pixel_link" -> "bgshih/aster"
"huoyijie/AdvancedEAST" -> "argman/EAST"
"huoyijie/AdvancedEAST" -> "ZJULearning/pixel_link"
"huoyijie/AdvancedEAST" -> "whai362/PSENet"
"huoyijie/AdvancedEAST" -> "songdejia/EAST"
"huoyijie/AdvancedEAST" -> "jiangxiluning/FOTS.PyTorch"
"huoyijie/AdvancedEAST" -> "JarveeLee/SynthText_Chinese_version"
"huoyijie/AdvancedEAST" -> "ankush-me/SynthText"
"huoyijie/AdvancedEAST" -> "liuheng92/tensorflow_PSENet"
"huoyijie/AdvancedEAST" -> "MhLiao/DB"
"huoyijie/AdvancedEAST" -> "eragonruan/text-detection-ctpn"
"huoyijie/AdvancedEAST" -> "MhLiao/TextBoxes_plusplus"
"huoyijie/AdvancedEAST" -> "YCG09/chinese_ocr"
"huoyijie/AdvancedEAST" -> "Sanster/text_renderer"
"huoyijie/AdvancedEAST" -> "Yuliang-Liu/Curve-Text-Detector"
"huoyijie/AdvancedEAST" -> "AstarLight/Lets_OCR"
"deepthinking-qichao/EAST_ICPR2018" -> "HaozhengLi/EAST_ICPR"
"deepthinking-qichao/EAST_ICPR2018" -> "TeamVanDeep/ICPR_MTWI_2018_section1"
"clovaai/CRAFT-pytorch" -> "clovaai/deep-text-recognition-benchmark"
"clovaai/CRAFT-pytorch" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"clovaai/CRAFT-pytorch" -> "MhLiao/DB"
"clovaai/CRAFT-pytorch" -> "Belval/TextRecognitionDataGenerator"
"clovaai/CRAFT-pytorch" -> "whai362/PSENet"
"clovaai/CRAFT-pytorch" -> "backtime92/CRAFT-Reimplementation"
"clovaai/CRAFT-pytorch" -> "ankush-me/SynthText"
"clovaai/CRAFT-pytorch" -> "argman/EAST"
"clovaai/CRAFT-pytorch" -> "meijieru/crnn.pytorch"
"clovaai/CRAFT-pytorch" -> "msight-tech/research-charnet"
"clovaai/CRAFT-pytorch" -> "jiangxiluning/FOTS.PyTorch"
"clovaai/CRAFT-pytorch" -> "open-mmlab/mmocr"
"clovaai/CRAFT-pytorch" -> "WenmuZhou/DBNet.pytorch"
"clovaai/CRAFT-pytorch" -> "Sanster/text_renderer"
"clovaai/CRAFT-pytorch" -> "huoyijie/AdvancedEAST"
"pengcao/chinese_ocr" -> "GlassyWing/text-detection-ocr"
"pengcao/chinese_ocr" -> "xiaofengShi/CHINESE-OCR"
"pengcao/chinese_ocr" -> "ooooverflow/chinese-ocr"
"pengcao/chinese_ocr" -> "MachineLP/OCR_Keras"
"opconty/pytorch_ctpn" -> "BADBADBADBOY/pytorch.ctpn"
"opconty/pytorch_ctpn" -> "courao/ocr.pytorch"
"opconty/pytorch_ctpn" -> "AstarLight/Lets_OCR"
"opconty/pytorch_ctpn" -> "jiangxiluning/FOTS.PyTorch"
"opconty/pytorch_ctpn" -> "chenjun2hao/Attention_ocr.pytorch"
"opconty/pytorch_ctpn" -> "hsddlz/faster-CTPN"
"opconty/pytorch_ctpn" -> "WenmuZhou/PSENet.pytorch"
"opconty/pytorch_ctpn" -> "songdejia/EAST"
"opconty/pytorch_ctpn" -> "xiaomaxiao/keras_ocr"
"opconty/pytorch_ctpn" -> "ayumiymk/aster.pytorch"
"opconty/pytorch_ctpn" -> "Sanster/text_renderer"
"opconty/pytorch_ctpn" -> "SakuraRiven/EAST"
"opconty/pytorch_ctpn" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"opconty/pytorch_ctpn" -> "Holmeyoung/crnn-pytorch"
"opconty/pytorch_ctpn" -> "meijieru/crnn.pytorch"
"tleyden/open-ocr" -> "aperrault/DetectText"
"tleyden/open-ocr" -> "ocropus-archive/DUP-ocropy"
"tleyden/open-ocr" -> "kba/awesome-ocr"
"tleyden/open-ocr" -> "otiai10/gosseract" ["e"=1]
"tleyden/open-ocr" -> "guitarmind/tesseract-web-service"
"tleyden/open-ocr" -> "tleyden/DetectText"
"tleyden/open-ocr" -> "tmbdev/clstm"
"tleyden/open-ocr" -> "creatale/node-dv" ["e"=1]
"tleyden/open-ocr" -> "otiai10/ocrserver" ["e"=1]
"tleyden/open-ocr" -> "ocropus/hocr-tools" ["e"=1]
"tleyden/open-ocr" -> "tleyden/elastic-thought"
"tleyden/open-ocr" -> "sirfz/tesserocr"
"tleyden/open-ocr" -> "openpaperwork/pyocr"
"tleyden/open-ocr" -> "ybur-yug/python_ocr_tutorial"
"tleyden/open-ocr" -> "wanghaisheng/awesome-ocr"
"yinchangchang/ocr_densenet" -> "Walleclipse/ChineseAddress_OCR"
"yinchangchang/ocr_densenet" -> "JarveeLee/SynthText_Chinese_version"
"yinchangchang/ocr_densenet" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"yinchangchang/ocr_densenet" -> "xiaomaxiao/keras_ocr"
"yinchangchang/ocr_densenet" -> "AstarLight/Lets_OCR"
"yinchangchang/ocr_densenet" -> "YCG09/chinese_ocr"
"yinchangchang/ocr_densenet" -> "xiaofengShi/CHINESE-OCR"
"yinchangchang/ocr_densenet" -> "AstarLight/CPS-OCR-Engine"
"yinchangchang/ocr_densenet" -> "A-bone1/Attention-ocr-Chinese-Version"
"yinchangchang/ocr_densenet" -> "ZJULearning/pixel_link"
"yinchangchang/ocr_densenet" -> "wushilian/CRNN_Attention_OCR_Chinese"
"yinchangchang/ocr_densenet" -> "ooooverflow/chinese-ocr"
"yinchangchang/ocr_densenet" -> "liuheng92/OCR_EVALUATION"
"yinchangchang/ocr_densenet" -> "bgshih/aster"
"yinchangchang/ocr_densenet" -> "GlassyWing/text-detection-ocr"
"mjq11302010044/RRPN" -> "mjq11302010044/RRPN_pytorch" ["e"=1]
"mjq11302010044/RRPN" -> "yangxue0827/R2CNN_FPN_Tensorflow" ["e"=1]
"mjq11302010044/RRPN" -> "MhLiao/TextBoxes_plusplus"
"mjq11302010044/RRPN" -> "Yuliang-Liu/Curve-Text-Detector"
"mjq11302010044/RRPN" -> "DetectionTeamUCAS/RRPN_Faster-RCNN_Tensorflow" ["e"=1]
"mjq11302010044/RRPN" -> "xhzdeng/crpn"
"mjq11302010044/RRPN" -> "tonghe90/textspotter"
"mjq11302010044/RRPN" -> "ZJULearning/pixel_link"
"mjq11302010044/RRPN" -> "dengdan/seglink"
"mjq11302010044/RRPN" -> "MhLiao/TextBoxes"
"mjq11302010044/RRPN" -> "chenxinpeng/SSD_scene_text_detection"
"mjq11302010044/RRPN" -> "liulei01/DRBox" ["e"=1]
"mjq11302010044/RRPN" -> "BestSonny/SSTD"
"mjq11302010044/RRPN" -> "yangxue0827/R-DFPN_FPN_Tensorflow" ["e"=1]
"mjq11302010044/RRPN" -> "tianzhi0549/CTPN"
"ypwhs/baiduyun_deeplearning_competition" -> "ypwhs/captcha_break" ["e"=1]
"ypwhs/baiduyun_deeplearning_competition" -> "xiaomaxiao/keras_ocr"
"ypwhs/baiduyun_deeplearning_competition" -> "JarveeLee/SynthText_Chinese_version"
"ypwhs/baiduyun_deeplearning_competition" -> "jimmyleaf/ocr_tensorflow_cnn"
"ypwhs/baiduyun_deeplearning_competition" -> "lvpengyuan/corner"
"ypwhs/baiduyun_deeplearning_competition" -> "ypwhs/dogs_vs_cats"
"ypwhs/baiduyun_deeplearning_competition" -> "Belval/CRNN"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "Li-Ming-Fan/OCR-CRNN-CTC"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "ilovin/lstm_ctc_ocr"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "hsddlz/faster-CTPN"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "wushilian/CRNN_Attention_OCR_Chinese"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "Sanster/DeepOcrService"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "oyxhust/CNN-LSTM-CTC-text-recognition"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "watsonyanghx/CNN_LSTM_CTC_Tensorflow"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "ZumingHuang/awesome-ocr-resources"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "A-bone1/Attention-ocr-Chinese-Version"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "jiaoml1996/ScenceRecognition"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "jiangxiluning/chinese-ocr"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "bear63/sceneReco"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "Belval/CRNN"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "dengdan/seglink"
"Li-Ming-Fan/OCR-DETECTION-CTPN" -> "xiaomaxiao/keras_ocr"
"ChanChiChoi/awesome-ocr" -> "ZumingHuang/awesome-ocr-resources"
"ChanChiChoi/awesome-ocr" -> "Jyouhou/SceneTextPapers"
"ChanChiChoi/awesome-ocr" -> "Canjie-Luo/MORAN_v2"
"ChanChiChoi/awesome-ocr" -> "HCIILAB/Scene-Text-Recognition"
"ChanChiChoi/awesome-ocr" -> "Wang-Tianwei/Decoupled-attention-network"
"ChanChiChoi/awesome-ocr" -> "whitelok/image-text-localization-recognition"
"ChanChiChoi/awesome-ocr" -> "whai362/PSENet"
"ChanChiChoi/awesome-ocr" -> "bgshih/aster"
"ChanChiChoi/awesome-ocr" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"ChanChiChoi/awesome-ocr" -> "msight-tech/research-charnet"
"ChanChiChoi/awesome-ocr" -> "WenmuZhou/PAN.pytorch"
"ChanChiChoi/awesome-ocr" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"ChanChiChoi/awesome-ocr" -> "yflv-yanxia/scene_text"
"ChanChiChoi/awesome-ocr" -> "lvpengyuan/corner"
"ChanChiChoi/awesome-ocr" -> "HCIILAB/Scene-Text-Detection"
"A-bone1/Attention-ocr-Chinese-Version" -> "wushilian/CRNN_Attention_OCR_Chinese"
"A-bone1/Attention-ocr-Chinese-Version" -> "A-bone1/FSNS-tfrecord-generate"
"A-bone1/Attention-ocr-Chinese-Version" -> "da03/Attention-OCR"
"A-bone1/Attention-ocr-Chinese-Version" -> "chenjun2hao/Attention_ocr.pytorch"
"A-bone1/Attention-ocr-Chinese-Version" -> "Canjie-Luo/MORAN_v2"
"A-bone1/Attention-ocr-Chinese-Version" -> "bgshih/aster"
"A-bone1/Attention-ocr-Chinese-Version" -> "JarveeLee/SynthText_Chinese_version"
"A-bone1/Attention-ocr-Chinese-Version" -> "weinman/cnn_lstm_ctc_ocr"
"A-bone1/Attention-ocr-Chinese-Version" -> "MaybeShewill-CV/CRNN_Tensorflow"
"A-bone1/Attention-ocr-Chinese-Version" -> "ilovin/lstm_ctc_ocr"
"A-bone1/Attention-ocr-Chinese-Version" -> "summerlvsong/Aggregation-Cross-Entropy"
"A-bone1/Attention-ocr-Chinese-Version" -> "whai362/PSENet"
"A-bone1/Attention-ocr-Chinese-Version" -> "Bartzi/stn-ocr"
"A-bone1/Attention-ocr-Chinese-Version" -> "lvpengyuan/corner"
"A-bone1/Attention-ocr-Chinese-Version" -> "Yuliang-Liu/Curve-Text-Detector"
"princewang1994/TextSnake.pytorch" -> "Canjie-Luo/MORAN_v2"
"princewang1994/TextSnake.pytorch" -> "whai362/PSENet"
"princewang1994/TextSnake.pytorch" -> "Yuliang-Liu/Curve-Text-Detector"
"princewang1994/TextSnake.pytorch" -> "summerlvsong/Aggregation-Cross-Entropy"
"princewang1994/TextSnake.pytorch" -> "lvpengyuan/masktextspotter.caffe2"
"princewang1994/TextSnake.pytorch" -> "liuheng92/tensorflow_PSENet"
"princewang1994/TextSnake.pytorch" -> "Jyouhou/SceneTextPapers"
"princewang1994/TextSnake.pytorch" -> "songdejia/EAST"
"princewang1994/TextSnake.pytorch" -> "lvpengyuan/corner"
"princewang1994/TextSnake.pytorch" -> "ayumiymk/aster.pytorch"
"princewang1994/TextSnake.pytorch" -> "jiangxiluning/FOTS.PyTorch"
"princewang1994/TextSnake.pytorch" -> "WenmuZhou/PSENet.pytorch"
"princewang1994/TextSnake.pytorch" -> "bgshih/aster"
"princewang1994/TextSnake.pytorch" -> "ZJULearning/pixel_link"
"princewang1994/TextSnake.pytorch" -> "MhLiao/MaskTextSpotter"
"MaybeShewill-CV/CRNN_Tensorflow" -> "bgshih/crnn"
"MaybeShewill-CV/CRNN_Tensorflow" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"MaybeShewill-CV/CRNN_Tensorflow" -> "Belval/CRNN"
"MaybeShewill-CV/CRNN_Tensorflow" -> "bear63/sceneReco"
"MaybeShewill-CV/CRNN_Tensorflow" -> "huoyijie/AdvancedEAST"
"MaybeShewill-CV/CRNN_Tensorflow" -> "eragonruan/text-detection-ctpn"
"MaybeShewill-CV/CRNN_Tensorflow" -> "JarveeLee/SynthText_Chinese_version"
"MaybeShewill-CV/CRNN_Tensorflow" -> "argman/EAST"
"MaybeShewill-CV/CRNN_Tensorflow" -> "bgshih/aster"
"MaybeShewill-CV/CRNN_Tensorflow" -> "meijieru/crnn.pytorch"
"MaybeShewill-CV/CRNN_Tensorflow" -> "ankush-me/SynthText"
"MaybeShewill-CV/CRNN_Tensorflow" -> "bai-shang/crnn_ctc_ocr_tf"
"MaybeShewill-CV/CRNN_Tensorflow" -> "A-bone1/Attention-ocr-Chinese-Version"
"MaybeShewill-CV/CRNN_Tensorflow" -> "Belval/TextRecognitionDataGenerator"
"MaybeShewill-CV/CRNN_Tensorflow" -> "Bartzi/see"
"isee15/Card-Ocr" -> "BIGPPWONG/idcardocr"
"isee15/Card-Ocr" -> "jimmyleaf/ocr_tensorflow_cnn"
"isee15/Card-Ocr" -> "JinpengLI/deep_ocr"
"isee15/Card-Ocr" -> "yghstill/deepLearning_OCR"
"isee15/Card-Ocr" -> "XieZhiFa/IdCardOCR" ["e"=1]
"isee15/Card-Ocr" -> "wzb96/idCardRecognition" ["e"=1]
"isee15/Card-Ocr" -> "sam-ke/idCardOcr"
"isee15/Card-Ocr" -> "465857721/IDCardOCR_China" ["e"=1]
"isee15/Card-Ocr" -> "evilgix/Evil" ["e"=1]
"isee15/Card-Ocr" -> "xiaomaxiao/keras_ocr"
"xiaofengShi/CHINESE-OCR" -> "YCG09/chinese_ocr"
"xiaofengShi/CHINESE-OCR" -> "chineseocr/chineseocr"
"xiaofengShi/CHINESE-OCR" -> "eragonruan/text-detection-ctpn"
"xiaofengShi/CHINESE-OCR" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"xiaofengShi/CHINESE-OCR" -> "meijieru/crnn.pytorch"
"xiaofengShi/CHINESE-OCR" -> "Sanster/text_renderer"
"xiaofengShi/CHINESE-OCR" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"xiaofengShi/CHINESE-OCR" -> "senlinuc/caffe_ocr"
"xiaofengShi/CHINESE-OCR" -> "Belval/TextRecognitionDataGenerator"
"xiaofengShi/CHINESE-OCR" -> "huoyijie/AdvancedEAST"
"xiaofengShi/CHINESE-OCR" -> "JarveeLee/SynthText_Chinese_version"
"xiaofengShi/CHINESE-OCR" -> "AstarLight/CPS-OCR-Engine"
"xiaofengShi/CHINESE-OCR" -> "MhLiao/DB"
"xiaofengShi/CHINESE-OCR" -> "argman/EAST"
"xiaofengShi/CHINESE-OCR" -> "AstarLight/Lets_OCR"
"HCIILAB/Scene-Text-Detection" -> "HCIILAB/Scene-Text-Recognition"
"HCIILAB/Scene-Text-Detection" -> "HCIILAB/Scene-Text-End2end"
"HCIILAB/Scene-Text-Detection" -> "msight-tech/research-charnet"
"HCIILAB/Scene-Text-Detection" -> "Jyouhou/SceneTextPapers"
"HCIILAB/Scene-Text-Detection" -> "Yuliang-Liu/Box_Discretization_Network"
"HCIILAB/Scene-Text-Detection" -> "WenmuZhou/PAN.pytorch"
"HCIILAB/Scene-Text-Detection" -> "MhLiao/DB"
"HCIILAB/Scene-Text-Detection" -> "Yuliang-Liu/Curve-Text-Detector"
"HCIILAB/Scene-Text-Detection" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"HCIILAB/Scene-Text-Detection" -> "Wang-Tianwei/Decoupled-attention-network"
"HCIILAB/Scene-Text-Detection" -> "Canjie-Luo/MORAN_v2"
"HCIILAB/Scene-Text-Detection" -> "Megvii-CSG/MegReader"
"HCIILAB/Scene-Text-Detection" -> "Canjie-Luo/Text-Image-Augmentation"
"HCIILAB/Scene-Text-Detection" -> "Yuliang-Liu/TIoU-metric"
"HCIILAB/Scene-Text-Detection" -> "whitelok/image-text-localization-recognition"
"WithSecureLabs/captcha22" -> "emedvedev/attention-ocr"
"WithSecureLabs/captcha22" -> "Greenwolf/ntlm_theft" ["e"=1]
"WithSecureLabs/captcha22" -> "wavestone-cdt/powerpxe" ["e"=1]
"GlassyWing/text-detection-ocr" -> "ooooverflow/chinese-ocr"
"GlassyWing/text-detection-ocr" -> "xiaomaxiao/keras_ocr"
"GlassyWing/text-detection-ocr" -> "Sanster/text_renderer"
"GlassyWing/text-detection-ocr" -> "YCG09/chinese_ocr"
"GlassyWing/text-detection-ocr" -> "zhang0jhon/AttentionOCR"
"GlassyWing/text-detection-ocr" -> "felixBrave/ocr_chinese"
"GlassyWing/text-detection-ocr" -> "yinchangchang/ocr_densenet"
"GlassyWing/text-detection-ocr" -> "MachineLP/OCR_Keras"
"GlassyWing/text-detection-ocr" -> "xiaofengShi/CHINESE-OCR"
"GlassyWing/text-detection-ocr" -> "bai-shang/crnn_ctc_ocr_tf"
"GlassyWing/text-detection-ocr" -> "Canjie-Luo/MORAN_v2"
"GlassyWing/text-detection-ocr" -> "Li-Ming-Fan/OCR-DETECTION-CTPN"
"GlassyWing/text-detection-ocr" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"GlassyWing/text-detection-ocr" -> "AstarLight/Lets_OCR"
"GlassyWing/text-detection-ocr" -> "eragonruan/text-detection-ctpn"
"chenguanyou/BaiduTextApi" -> "chenguanyou/CharacterRecognition"
"lvpengyuan/masktextspotter.caffe2" -> "jiangxiluning/FOTS.PyTorch"
"lvpengyuan/masktextspotter.caffe2" -> "xieyufei1993/InceptText-Tensorflow"
"lvpengyuan/masktextspotter.caffe2" -> "FakerYFX/FOTS"
"lvpengyuan/masktextspotter.caffe2" -> "MichalBusta/DeepTextSpotter"
"lvpengyuan/masktextspotter.caffe2" -> "MhLiao/MaskTextSpotter"
"lvpengyuan/masktextspotter.caffe2" -> "tonghe90/textspotter"
"lvpengyuan/masktextspotter.caffe2" -> "Yuliang-Liu/Curve-Text-Detector"
"lvpengyuan/masktextspotter.caffe2" -> "princewang1994/TextSnake.pytorch"
"lvpengyuan/masktextspotter.caffe2" -> "lvpengyuan/corner"
"lvpengyuan/masktextspotter.caffe2" -> "bgshih/aster"
"lvpengyuan/masktextspotter.caffe2" -> "Yuliang-Liu/Box_Discretization_Network"
"lvpengyuan/masktextspotter.caffe2" -> "liuheng92/tensorflow_PSENet"
"lvpengyuan/masktextspotter.caffe2" -> "whai362/PSENet"
"lvpengyuan/masktextspotter.caffe2" -> "AirBernard/Scene-Text-Detection-with-SPCNET"
"lvpengyuan/masktextspotter.caffe2" -> "summerlvsong/Aggregation-Cross-Entropy"
"courao/ocr.pytorch" -> "opconty/pytorch_ctpn"
"courao/ocr.pytorch" -> "WenmuZhou/PytorchOCR"
"courao/ocr.pytorch" -> "Holmeyoung/crnn-pytorch"
"courao/ocr.pytorch" -> "WenmuZhou/DBNet.pytorch"
"courao/ocr.pytorch" -> "BADBADBADBOY/pytorchOCR"
"courao/ocr.pytorch" -> "BADBADBADBOY/pytorch.ctpn"
"courao/ocr.pytorch" -> "AstarLight/Lets_OCR"
"courao/ocr.pytorch" -> "bes-dev/crnn-pytorch"
"courao/ocr.pytorch" -> "bai-shang/crnn_seq2seq_ocr_pytorch"
"courao/ocr.pytorch" -> "meijieru/crnn.pytorch"
"courao/ocr.pytorch" -> "ayumiymk/aster.pytorch"
"courao/ocr.pytorch" -> "backtime92/CRAFT-Reimplementation"
"courao/ocr.pytorch" -> "WenmuZhou/PSENet.pytorch"
"courao/ocr.pytorch" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"courao/ocr.pytorch" -> "yizt/crnn.pytorch"
"Yuliang-Liu/Box_Discretization_Network" -> "STVIR/PMTD"
"Yuliang-Liu/Box_Discretization_Network" -> "Wang-Tianwei/Decoupled-attention-network"
"Yuliang-Liu/Box_Discretization_Network" -> "Yuliang-Liu/bezier_curve_text_spotting"
"Yuliang-Liu/Box_Discretization_Network" -> "summerlvsong/Aggregation-Cross-Entropy"
"Yuliang-Liu/Box_Discretization_Network" -> "lvpengyuan/corner"
"Yuliang-Liu/Box_Discretization_Network" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"Yuliang-Liu/Box_Discretization_Network" -> "Megvii-CSG/MegReader"
"Yuliang-Liu/Box_Discretization_Network" -> "HCIILAB/Scene-Text-Recognition"
"Yuliang-Liu/Box_Discretization_Network" -> "HCIILAB/Scene-Text-Detection"
"Yuliang-Liu/Box_Discretization_Network" -> "Canjie-Luo/MORAN_v2"
"Yuliang-Liu/Box_Discretization_Network" -> "AirBernard/Scene-Text-Detection-with-SPCNET"
"Yuliang-Liu/Box_Discretization_Network" -> "backtime92/CRAFT-Reimplementation"
"Yuliang-Liu/Box_Discretization_Network" -> "MhLiao/MaskTextSpotter"
"Yuliang-Liu/Box_Discretization_Network" -> "HCIILAB/Scene-Text-End2end"
"Yuliang-Liu/Box_Discretization_Network" -> "GXYM/DRRG"
"HCIILAB/Scene-Text-Recognition" -> "HCIILAB/Scene-Text-Detection"
"HCIILAB/Scene-Text-Recognition" -> "HCIILAB/Scene-Text-End2end"
"HCIILAB/Scene-Text-Recognition" -> "ayumiymk/aster.pytorch"
"HCIILAB/Scene-Text-Recognition" -> "Canjie-Luo/Text-Image-Augmentation"
"HCIILAB/Scene-Text-Recognition" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"HCIILAB/Scene-Text-Recognition" -> "Wang-Tianwei/Decoupled-attention-network"
"HCIILAB/Scene-Text-Recognition" -> "Jyouhou/SceneTextPapers"
"HCIILAB/Scene-Text-Recognition" -> "Canjie-Luo/MORAN_v2"
"HCIILAB/Scene-Text-Recognition" -> "msight-tech/research-charnet"
"HCIILAB/Scene-Text-Recognition" -> "Megvii-CSG/MegReader"
"HCIILAB/Scene-Text-Recognition" -> "MhLiao/MaskTextSpotterV3"
"HCIILAB/Scene-Text-Recognition" -> "Yuliang-Liu/bezier_curve_text_spotting"
"HCIILAB/Scene-Text-Recognition" -> "MhLiao/DB"
"HCIILAB/Scene-Text-Recognition" -> "whitelok/image-text-localization-recognition"
"HCIILAB/Scene-Text-Recognition" -> "Yuliang-Liu/Box_Discretization_Network"
"ldeecke/gmm-torch" -> "stober/gmm"
"ldeecke/gmm-torch" -> "borchero/pycave"
"ldeecke/gmm-torch" -> "sagelywizard/pytorch-mdn"
"ldeecke/gmm-torch" -> "kylesayrs/GMMPytorch"
"ldeecke/gmm-torch" -> "kamenbliznashki/normalizing_flows" ["e"=1]
"ldeecke/gmm-torch" -> "wrayzheng/gmm-em-clustering"
"ldeecke/gmm-torch" -> "Nat-D/GMVAE" ["e"=1]
"ldeecke/gmm-torch" -> "somanshu25/GPU-Accelerated-Point-Cloud-Registration-Using-Hierarchical-GMM" ["e"=1]
"ldeecke/gmm-torch" -> "smiler96/GMM-KMeans-PyTorch"
"ldeecke/gmm-torch" -> "angusturner/generative_models"
"STVIR/PMTD" -> "Yuliang-Liu/Box_Discretization_Network"
"STVIR/PMTD" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"STVIR/PMTD" -> "Yuliang-Liu/TIoU-metric"
"STVIR/PMTD" -> "whai362/PSENet"
"STVIR/PMTD" -> "AirBernard/Scene-Text-Detection-with-SPCNET"
"STVIR/PMTD" -> "MichalBusta/E2E-MLT"
"STVIR/PMTD" -> "WenmuZhou/PAN.pytorch"
"STVIR/PMTD" -> "summerlvsong/Aggregation-Cross-Entropy"
"STVIR/PMTD" -> "Megvii-CSG/MegReader"
"STVIR/PMTD" -> "clovaai/TedEval"
"STVIR/PMTD" -> "princewang1994/TextSnake.pytorch"
"STVIR/PMTD" -> "Canjie-Luo/MORAN_v2"
"STVIR/PMTD" -> "lvpengyuan/masktextspotter.caffe2"
"STVIR/PMTD" -> "Yuliang-Liu/Curve-Text-Detector"
"STVIR/PMTD" -> "HCIILAB/DeRPN"
"swechhasingh/Handwriting-synthesis" -> "ritheshkumar95/pytorch_handwriting_synthesis"
"swechhasingh/Handwriting-synthesis" -> "otuva/handwriting-synthesis"
"swechhasingh/Handwriting-synthesis" -> "herobd/handwriting_line_generation"
"swechhasingh/Handwriting-synthesis" -> "Grzego/handwriting-generation"
"swechhasingh/Handwriting-synthesis" -> "amzn/convolutional-handwriting-gan"
"swechhasingh/Handwriting-synthesis" -> "X-rayLaser/pytorch-handwriting-synthesis-toolkit"
"cs-chan/Total-Text-Dataset" -> "Yuliang-Liu/Curve-Text-Detector"
"cs-chan/Total-Text-Dataset" -> "whai362/PSENet"
"cs-chan/Total-Text-Dataset" -> "ankush-me/SynthText"
"cs-chan/Total-Text-Dataset" -> "Jyouhou/SceneTextPapers"
"cs-chan/Total-Text-Dataset" -> "whitelok/image-text-localization-recognition"
"cs-chan/Total-Text-Dataset" -> "bgshih/aster"
"cs-chan/Total-Text-Dataset" -> "princewang1994/TextSnake.pytorch"
"cs-chan/Total-Text-Dataset" -> "MhLiao/DB"
"cs-chan/Total-Text-Dataset" -> "Canjie-Luo/MORAN_v2"
"cs-chan/Total-Text-Dataset" -> "HCIILAB/Scene-Text-Recognition"
"cs-chan/Total-Text-Dataset" -> "HCIILAB/Scene-Text-Detection"
"cs-chan/Total-Text-Dataset" -> "msight-tech/research-charnet"
"cs-chan/Total-Text-Dataset" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"cs-chan/Total-Text-Dataset" -> "ZJULearning/pixel_link"
"cs-chan/Total-Text-Dataset" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"ayumiymk/aster.pytorch" -> "bgshih/aster"
"ayumiymk/aster.pytorch" -> "Canjie-Luo/MORAN_v2"
"ayumiymk/aster.pytorch" -> "Wang-Tianwei/Decoupled-attention-network"
"ayumiymk/aster.pytorch" -> "HCIILAB/Scene-Text-Recognition"
"ayumiymk/aster.pytorch" -> "summerlvsong/Aggregation-Cross-Entropy"
"ayumiymk/aster.pytorch" -> "whai362/PSENet"
"ayumiymk/aster.pytorch" -> "Canjie-Luo/Text-Image-Augmentation"
"ayumiymk/aster.pytorch" -> "lvpengyuan/corner"
"ayumiymk/aster.pytorch" -> "MhLiao/MaskTextSpotter"
"ayumiymk/aster.pytorch" -> "jiangxiluning/FOTS.PyTorch"
"ayumiymk/aster.pytorch" -> "Yuliang-Liu/bezier_curve_text_spotting"
"ayumiymk/aster.pytorch" -> "MhLiao/DB"
"ayumiymk/aster.pytorch" -> "Jyouhou/SceneTextPapers"
"ayumiymk/aster.pytorch" -> "JarveeLee/SynthText_Chinese_version"
"ayumiymk/aster.pytorch" -> "Megvii-CSG/MegReader"
"tonyduan/mixture-density-network" -> "sagelywizard/pytorch-mdn"
"tonyduan/mixture-density-network" -> "axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation"
"jayknoxqu/id-number-util" -> "jxlwqq/id-validator.py"
"chongshengzhang/shopsign" -> "fnzhan/Verisimilar-Image-Synthesis-for-Accurate-Detection-and-Recognition-of-Texts-in-Scenes"
"chongshengzhang/shopsign" -> "FangShancheng/conv-ensemble-str"
"wang-tf/Chinese_OCR_synthetic_data" -> "TianzhongSong/awesome-SynthText"
"wang-tf/Chinese_OCR_synthetic_data" -> "JarveeLee/SynthText_Chinese_version"
"wang-tf/Chinese_OCR_synthetic_data" -> "lkj1114889770/Synth_Chinese_OCR_dataset"
"wang-tf/Chinese_OCR_synthetic_data" -> "Sanster/text_renderer"
"wang-tf/Chinese_OCR_synthetic_data" -> "Canjie-Luo/Text-Image-Augmentation"
"wang-tf/Chinese_OCR_synthetic_data" -> "Canjie-Luo/MORAN_v2"
"wang-tf/Chinese_OCR_synthetic_data" -> "summerlvsong/Aggregation-Cross-Entropy"
"wang-tf/Chinese_OCR_synthetic_data" -> "princewang1994/TextSnake.pytorch"
"wang-tf/Chinese_OCR_synthetic_data" -> "bgshih/aster"
"wang-tf/Chinese_OCR_synthetic_data" -> "ankush-me/SynthText"
"wang-tf/Chinese_OCR_synthetic_data" -> "Megvii-CSG/MegReader"
"wang-tf/Chinese_OCR_synthetic_data" -> "WenmuZhou/PSENet.pytorch"
"wang-tf/Chinese_OCR_synthetic_data" -> "A-bone1/Attention-ocr-Chinese-Version"
"wang-tf/Chinese_OCR_synthetic_data" -> "WenmuZhou/PAN.pytorch"
"wang-tf/Chinese_OCR_synthetic_data" -> "MhLiao/MaskTextSpotter"
"ZumingHuang/awesome-ocr-resources" -> "whitelok/image-text-localization-recognition"
"ZumingHuang/awesome-ocr-resources" -> "princewang1994/TextSnake.pytorch"
"ZumingHuang/awesome-ocr-resources" -> "ChanChiChoi/awesome-ocr"
"ZumingHuang/awesome-ocr-resources" -> "TianzhongSong/awesome-SynthText"
"ZumingHuang/awesome-ocr-resources" -> "lvpengyuan/masktextspotter.caffe2"
"ZumingHuang/awesome-ocr-resources" -> "summerlvsong/Aggregation-Cross-Entropy"
"ZumingHuang/awesome-ocr-resources" -> "JarveeLee/SynthText_Chinese_version"
"ZumingHuang/awesome-ocr-resources" -> "Canjie-Luo/MORAN_v2"
"ZumingHuang/awesome-ocr-resources" -> "tonghe90/textspotter"
"ZumingHuang/awesome-ocr-resources" -> "cs-chan/Total-Text-Dataset"
"ZumingHuang/awesome-ocr-resources" -> "Yuliang-Liu/Curve-Text-Detector"
"ZumingHuang/awesome-ocr-resources" -> "huoyijie/AdvancedEAST"
"ZumingHuang/awesome-ocr-resources" -> "Bartzi/stn-ocr"
"ZumingHuang/awesome-ocr-resources" -> "bgshih/aster"
"ZumingHuang/awesome-ocr-resources" -> "Megvii-CSG/MegReader"
"BestSonny/SSTD" -> "HotaekHan/SSTDNet"
"BestSonny/SSTD" -> "bgshih/seglink"
"BestSonny/SSTD" -> "xhzdeng/crpn"
"BestSonny/SSTD" -> "tonghe90/textspotter"
"BestSonny/SSTD" -> "MichalBusta/DeepTextSpotter"
"BestSonny/SSTD" -> "MhLiao/RRD"
"BestSonny/SSTD" -> "dengdan/seglink"
"BestSonny/SSTD" -> "lluisgomez/TextProposals"
"BestSonny/SSTD" -> "MhLiao/TextBoxes_plusplus"
"BestSonny/SSTD" -> "MhLiao/TextBoxes"
"BestSonny/SSTD" -> "lvpengyuan/masktextspotter.caffe2"
"BestSonny/SSTD" -> "Yuliang-Liu/Curve-Text-Detector"
"BestSonny/SSTD" -> "Bartzi/see"
"BestSonny/SSTD" -> "chenxinpeng/SSD_scene_text_detection"
"BestSonny/SSTD" -> "LianaWang/itn"
"emreaksan/deepwriting" -> "brownvc/decoupled-style-descriptors"
"xhzdeng/crpn" -> "BestSonny/SSTD"
"xhzdeng/crpn" -> "xhzdeng/stela"
"xhzdeng/crpn" -> "MhLiao/RRD"
"xhzdeng/crpn" -> "tonghe90/textspotter"
"xhzdeng/crpn" -> "MichalBusta/DeepTextSpotter"
"fantasyxxj/einvoice" -> "sanluan/einvoice"
"SakuraRiven/EAST" -> "songdejia/EAST"
"SakuraRiven/EAST" -> "jiangxiluning/FOTS.PyTorch"
"SakuraRiven/EAST" -> "huoyijie/AdvancedEAST"
"SakuraRiven/EAST" -> "whai362/PSENet"
"SakuraRiven/EAST" -> "WenmuZhou/DBNet.pytorch"
"SakuraRiven/EAST" -> "lvpengyuan/corner"
"SakuraRiven/EAST" -> "msight-tech/research-charnet"
"SakuraRiven/EAST" -> "MhLiao/DB"
"SakuraRiven/EAST" -> "whai362/pan_pp.pytorch"
"SakuraRiven/EAST" -> "opconty/pytorch_ctpn"
"SakuraRiven/EAST" -> "ayumiymk/aster.pytorch"
"SakuraRiven/EAST" -> "WenmuZhou/PAN.pytorch"
"SakuraRiven/EAST" -> "princewang1994/TextSnake.pytorch"
"SakuraRiven/EAST" -> "MhLiao/MaskTextSpotterV3"
"SakuraRiven/EAST" -> "argman/EAST"
"huanglu20124/invoice" -> "xuwenxue000/PJ_PREDICT_IMG"
"huanglu20124/invoice" -> "vwarship/ocrstyle"
"huanglu20124/invoice" -> "JiangKui007/jx_ocr"
"taosir/cnn_handwritten_chinese_recognition" -> "jinxiwang/ocr_TDR"
"taosir/cnn_handwritten_chinese_recognition" -> "jjcheer/ocrcn_tf2"
"taosir/cnn_handwritten_chinese_recognition" -> "soloice/Chinese-Character-Recognition"
"taosir/cnn_handwritten_chinese_recognition" -> "AstarLight/CPS-OCR-Engine"
"taosir/cnn_handwritten_chinese_recognition" -> "integeruser/CASIA-HWDB1.1-cnn"
"taosir/cnn_handwritten_chinese_recognition" -> "peterWon/CASIA-HWDB-Recognition"
"taosir/cnn_handwritten_chinese_recognition" -> "JiageWang/hand-writing-recognition"
"taosir/cnn_handwritten_chinese_recognition" -> "chongyangtao/DeepHCCR"
"taosir/cnn_handwritten_chinese_recognition" -> "chenyr0021/Chinese_character_recognition"
"taosir/cnn_handwritten_chinese_recognition" -> "YCG09/chinese_ocr"
"taosir/cnn_handwritten_chinese_recognition" -> "hsddlz/faster-CTPN"
"taosir/cnn_handwritten_chinese_recognition" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"taosir/cnn_handwritten_chinese_recognition" -> "xiaofengShi/CHINESE-OCR"
"taosir/cnn_handwritten_chinese_recognition" -> "angzhou/anchor"
"taosir/cnn_handwritten_chinese_recognition" -> "AmemiyaYuko/HandwrittenChineseCharacterRecognition"
"wrayzheng/gmm-em-clustering" -> "stober/gmm"
"jxlwqq/id-validator.py" -> "jxlwqq/id-validator" ["e"=1]
"jxlwqq/id-validator.py" -> "jayknoxqu/id-number-util"
"HCIILAB/DeRPN" -> "Yuliang-Liu/Box_Discretization_Network"
"cpmpercussion/keras-mdn-layer" -> "axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation"
"cpmpercussion/keras-mdn-layer" -> "yanji84/keras-mdn"
"cpmpercussion/keras-mdn-layer" -> "sksq96/pytorch-mdn"
"cpmpercussion/keras-mdn-layer" -> "cpmpercussion/creative-prediction"
"YIYIMZ/my_orc_keras_verification_code_identification" -> "dlunion/CaffeLSTM-OCR" ["e"=1]
"YIYIMZ/my_orc_keras_verification_code_identification" -> "GlassyWing/text-detection-ocr"
"YIYIMZ/my_orc_keras_verification_code_identification" -> "xiaomaxiao/keras_ocr"
"YIYIMZ/my_orc_keras_verification_code_identification" -> "LCorleone/A-Simple-Chinese-License-Plate-Generator-and-Recognition-Framework" ["e"=1]
"sam-ke/idCardOcr" -> "BIGPPWONG/idcardocr"
"sam-ke/idCardOcr" -> "hzli-ucas/CCF-OCR"
"qjadud1994/CRNN-Keras" -> "qjadud1994/Korean-license-plate-Generator"
"qjadud1994/CRNN-Keras" -> "janzd/CRNN"
"qjadud1994/CRNN-Keras" -> "MaybeShewill-CV/CRNN_Tensorflow"
"qjadud1994/CRNN-Keras" -> "mvoelk/ssd_detectors"
"qjadud1994/CRNN-Keras" -> "bgshih/crnn"
"qjadud1994/CRNN-Keras" -> "xiaomaxiao/keras_ocr"
"qjadud1994/CRNN-Keras" -> "sbillburg/CRNN-with-STN" ["e"=1]
"qjadud1994/CRNN-Keras" -> "meijieru/crnn.pytorch"
"qjadud1994/CRNN-Keras" -> "qjadud1994/Text_Detector"
"qjadud1994/CRNN-Keras" -> "bai-shang/crnn_ctc_ocr_tf"
"qjadud1994/CRNN-Keras" -> "Belval/CRNN"
"qjadud1994/CRNN-Keras" -> "Tony607/keras-image-ocr"
"qjadud1994/CRNN-Keras" -> "gasparian/CRNN-OCR-lite" ["e"=1]
"qjadud1994/CRNN-Keras" -> "weinman/cnn_lstm_ctc_ocr"
"qjadud1994/CRNN-Keras" -> "wushilian/CRNN_Attention_OCR_Chinese"
"ooooverflow/chinese-ocr" -> "GlassyWing/text-detection-ocr"
"ooooverflow/chinese-ocr" -> "Walleclipse/ChineseAddress_OCR"
"ooooverflow/chinese-ocr" -> "AstarLight/Lets_OCR"
"ooooverflow/chinese-ocr" -> "MachineLP/OCR_Keras"
"ooooverflow/chinese-ocr" -> "xiaofengShi/CHINESE-OCR"
"ooooverflow/chinese-ocr" -> "YCG09/chinese_ocr"
"ooooverflow/chinese-ocr" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"ooooverflow/chinese-ocr" -> "chenjun2hao/Attention_ocr.pytorch"
"ooooverflow/chinese-ocr" -> "xiaomaxiao/keras_ocr"
"ooooverflow/chinese-ocr" -> "AstarLight/CPS-OCR-Engine"
"ooooverflow/chinese-ocr" -> "yinchangchang/ocr_densenet"
"ooooverflow/chinese-ocr" -> "lvpengyuan/corner"
"ooooverflow/chinese-ocr" -> "bai-shang/crnn_seq2seq_ocr_pytorch"
"ooooverflow/chinese-ocr" -> "A-bone1/Attention-ocr-Chinese-Version"
"ooooverflow/chinese-ocr" -> "Li-Ming-Fan/OCR-CRNN-CTC"
"jinxiwang/ocr_TDR" -> "jjcheer/ocrcn_tf2"
"jinxiwang/ocr_TDR" -> "Mignet/chinese-write-handling-char-recognition"
"jinxiwang/ocr_TDR" -> "taosir/cnn_handwritten_chinese_recognition"
"jinxiwang/ocr_TDR" -> "chenyr0021/Chinese_character_recognition"
"jinxiwang/ocr_TDR" -> "JiageWang/hand-writing-recognition"
"jinxiwang/ocr_TDR" -> "intel/handwritten-chinese-ocr-samples"
"jinxiwang/ocr_TDR" -> "peterWon/CASIA-HWDB-Recognition"
"jinxiwang/ocr_TDR" -> "shannanyinxiang/PageNet"
"jinxiwang/ocr_TDR" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"jinxiwang/ocr_TDR" -> "Mingtzge/2019-CCF-BDCI-OCR-MCZJ-OCR-IdentificationIDElement" ["e"=1]
"jinxiwang/ocr_TDR" -> "MachineLP/OCR_Keras"
"jinxiwang/ocr_TDR" -> "yinchangchang/ocr_densenet"
"jinxiwang/ocr_TDR" -> "HCIILAB/SCUT-EPT_Dataset_Release"
"jinxiwang/ocr_TDR" -> "xiaofengShi/CHINESE-OCR"
"jinxiwang/ocr_TDR" -> "integeruser/CASIA-HWDB1.1-cnn"
"Mignet/chinese-write-handling-char-recognition" -> "jinxiwang/ocr_TDR"
"Mignet/chinese-write-handling-char-recognition" -> "feirenlg/chinese_character_recognition_for_pytorch"
"527515025/My-TensorFlow-tutorials" -> "xuetsing/cats-vs-dogs"
"527515025/My-TensorFlow-tutorials" -> "maples1993/Cats_vs_Dogs"
"ypwhs/DogBreed_gluon" -> "fierceX/Dog-Breed-Identification-Gluon"
"ypwhs/DogBreed_gluon" -> "yinglang/CIFAR10_mxnet"
"ypwhs/DogBreed_gluon" -> "L1aoXingyu/cifar10-gluon"
"ypwhs/DogBreed_gluon" -> "JiaaaoYu/mxnet"
"ypwhs/DogBreed_gluon" -> "sinyeratlantis/deep-learning-gluon"
"ypwhs/DogBreed_gluon" -> "airaria/DogBreedIdentification_RosettaStone"
"fierceX/Dog-Breed-Identification-Gluon" -> "ypwhs/DogBreed_gluon"
"Ice-Hazymoon/idcard_generator" -> "airob0t/idcardgenerator"
"Ice-Hazymoon/idcard_generator" -> "mritd/idgen"
"Ice-Hazymoon/idcard_generator" -> "Ice-Hazymoon/domains" ["e"=1]
"Ice-Hazymoon/idcard_generator" -> "bzsome/idcard_generator"
"Ice-Hazymoon/idcard_generator" -> "alicfeng/IdentityCard"
"Ice-Hazymoon/idcard_generator" -> "heiziSS/IDcardGenerate"
"Holmeyoung/crnn-pytorch" -> "meijieru/crnn.pytorch"
"Holmeyoung/crnn-pytorch" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"Holmeyoung/crnn-pytorch" -> "bai-shang/crnn_seq2seq_ocr_pytorch"
"Holmeyoung/crnn-pytorch" -> "bes-dev/crnn-pytorch"
"Holmeyoung/crnn-pytorch" -> "chenjun2hao/Attention_ocr.pytorch"
"Holmeyoung/crnn-pytorch" -> "opconty/pytorch_ctpn"
"Holmeyoung/crnn-pytorch" -> "WenmuZhou/DBNet.pytorch"
"Holmeyoung/crnn-pytorch" -> "GitYCC/crnn-pytorch"
"Holmeyoung/crnn-pytorch" -> "yizt/crnn.pytorch"
"Holmeyoung/crnn-pytorch" -> "BADBADBADBOY/pytorchOCR"
"Holmeyoung/crnn-pytorch" -> "Canjie-Luo/MORAN_v2"
"Holmeyoung/crnn-pytorch" -> "backtime92/CRAFT-Reimplementation"
"Holmeyoung/crnn-pytorch" -> "Canjie-Luo/Text-Image-Augmentation"
"Holmeyoung/crnn-pytorch" -> "courao/ocr.pytorch"
"Holmeyoung/crnn-pytorch" -> "lvpengyuan/corner"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "bai-shang/crnn_ctc_ocr_tf"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "chenjun2hao/Attention_ocr.pytorch"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "Holmeyoung/crnn-pytorch"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "BADBADBADBOY/pytorchOCR"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "WenmuZhou/PSENet.pytorch"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "ayumiymk/aster.pytorch"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "chenjun2hao/Bert_OCR.pytorch"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "backtime92/CRAFT-Reimplementation"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "lvpengyuan/corner"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "Wang-Tianwei/Decoupled-attention-network"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "A-bone1/Attention-ocr-Chinese-Version"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "summerlvsong/Aggregation-Cross-Entropy"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "fengxinjie/Transformer-OCR"
"bai-shang/crnn_seq2seq_ocr_pytorch" -> "RubanSeven/Text-Image-Augmentation-python"
"GuoYi0/text_detection" -> "QAlexBall/Faster_RCNN_for_TextDetection"
"QAlexBall/Faster_RCNN_for_TextDetection" -> "GuoYi0/text_detection"
"tonghe90/textspotter" -> "MichalBusta/DeepTextSpotter"
"tonghe90/textspotter" -> "BestSonny/SSTD"
"tonghe90/textspotter" -> "lvpengyuan/masktextspotter.caffe2"
"tonghe90/textspotter" -> "MhLiao/TextBoxes_plusplus"
"tonghe90/textspotter" -> "bgshih/seglink"
"tonghe90/textspotter" -> "xhzdeng/crpn"
"tonghe90/textspotter" -> "ZJULearning/pixel_link"
"tonghe90/textspotter" -> "jiangxiluning/FOTS.PyTorch"
"tonghe90/textspotter" -> "bgshih/aster"
"tonghe90/textspotter" -> "Canjie-Luo/MORAN_v2"
"tonghe90/textspotter" -> "Pay20Y/FOTS_TF"
"tonghe90/textspotter" -> "Bartzi/see"
"tonghe90/textspotter" -> "Yuliang-Liu/Curve-Text-Detector"
"tonghe90/textspotter" -> "Jyouhou/SceneTextPapers"
"tonghe90/textspotter" -> "summerlvsong/Aggregation-Cross-Entropy"
"MhLiao/TextBoxes_plusplus" -> "MhLiao/TextBoxes"
"MhLiao/TextBoxes_plusplus" -> "ZJULearning/pixel_link"
"MhLiao/TextBoxes_plusplus" -> "bgshih/crnn"
"MhLiao/TextBoxes_plusplus" -> "argman/EAST"
"MhLiao/TextBoxes_plusplus" -> "JarveeLee/SynthText_Chinese_version"
"MhLiao/TextBoxes_plusplus" -> "whai362/PSENet"
"MhLiao/TextBoxes_plusplus" -> "bgshih/aster"
"MhLiao/TextBoxes_plusplus" -> "jiangxiluning/FOTS.PyTorch"
"MhLiao/TextBoxes_plusplus" -> "tonghe90/textspotter"
"MhLiao/TextBoxes_plusplus" -> "ankush-me/SynthText"
"MhLiao/TextBoxes_plusplus" -> "huoyijie/AdvancedEAST"
"MhLiao/TextBoxes_plusplus" -> "tianzhi0549/CTPN"
"MhLiao/TextBoxes_plusplus" -> "Bartzi/see"
"MhLiao/TextBoxes_plusplus" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"MhLiao/TextBoxes_plusplus" -> "whitelok/image-text-localization-recognition"
"songdejia/EAST" -> "SakuraRiven/EAST"
"songdejia/EAST" -> "huoyijie/AdvancedEAST"
"songdejia/EAST" -> "songdejia/DFL-CNN" ["e"=1]
"songdejia/EAST" -> "jiangxiluning/FOTS.PyTorch"
"songdejia/EAST" -> "shipengqi/sactive-bot" ["e"=1]
"songdejia/EAST" -> "princewang1994/TextSnake.pytorch"
"songdejia/EAST" -> "songdejia/DeepLab_v3_plus" ["e"=1]
"songdejia/EAST" -> "Swenson1992/TCPServer" ["e"=1]
"songdejia/EAST" -> "whai362/PSENet"
"songdejia/EAST" -> "songdejia/Siamese-RPN-pytorch" ["e"=1]
"songdejia/EAST" -> "argman/EAST"
"songdejia/EAST" -> "qiurunze123/GeekQ-BASE" ["e"=1]
"songdejia/EAST" -> "Swenson1992/DailyReport" ["e"=1]
"songdejia/EAST" -> "shipengqi/sactive-web" ["e"=1]
"songdejia/EAST" -> "Happy-zyy/NLP-Model" ["e"=1]
"wottpal/cppn-keras" -> "janhuenermann/blog"
"janhuenermann/blog" -> "wottpal/cppn-keras"
"HCIILAB/Scene-Text-End2end" -> "HCIILAB/Scene-Text-Recognition"
"HCIILAB/Scene-Text-End2end" -> "HCIILAB/Scene-Text-Detection"
"HCIILAB/Scene-Text-End2end" -> "summerlvsong/Aggregation-Cross-Entropy"
"HCIILAB/Scene-Text-End2end" -> "Yuliang-Liu/Box_Discretization_Network"
"HCIILAB/Scene-Text-End2end" -> "Megvii-CSG/MegReader"
"HCIILAB/Scene-Text-End2end" -> "Wang-Tianwei/Decoupled-attention-network"
"HCIILAB/Scene-Text-End2end" -> "MhLiao/MaskTextSpotter"
"HCIILAB/Scene-Text-End2end" -> "Yuliang-Liu/bezier_curve_text_spotting"
"HCIILAB/Scene-Text-End2end" -> "Canjie-Luo/Text-Image-Augmentation"
"HCIILAB/Scene-Text-End2end" -> "ayumiymk/aster.pytorch"
"azadis/MC-GAN" -> "ueoo/AGIS-Net"
"azadis/MC-GAN" -> "williamyang1991/TET-GAN"
"azadis/MC-GAN" -> "kaonashi-tyc/Rewrite"
"azadis/MC-GAN" -> "changebo/HCCG-CycleGAN"
"azadis/MC-GAN" -> "ueoo/Attr2Font"
"azadis/MC-GAN" -> "VITA-Group/ShapeMatchingGAN"
"azadis/MC-GAN" -> "kaonashi-tyc/zi2zi" ["e"=1]
"azadis/MC-GAN" -> "koishi70/Style_Migration_For_Artistic_Font_With_CNN"
"azadis/MC-GAN" -> "williamyang1991/Text-Effects-Transfer"
"azadis/MC-GAN" -> "IShengFang/TypographyResearchCollection"
"azadis/MC-GAN" -> "joshpc/StyledFontGAN"
"azadis/MC-GAN" -> "liweileev/FET-GAN"
"azadis/MC-GAN" -> "LinkWoong/Zeroshot-GAN"
"azadis/MC-GAN" -> "ecnuycxie/DG-Font"
"azadis/MC-GAN" -> "erikbern/deep-fonts" ["e"=1]
"liuheng92/OCR_EVALUATION" -> "lvpengyuan/corner"
"liuheng92/OCR_EVALUATION" -> "liuheng92/tensorflow_PSENet"
"liuheng92/OCR_EVALUATION" -> "clovaai/TedEval"
"liuheng92/OCR_EVALUATION" -> "AirBernard/Scene-Text-Detection-with-SPCNET"
"liuheng92/OCR_EVALUATION" -> "bityigoss/mtl-text-recognition"
"liuheng92/OCR_EVALUATION" -> "Incentering/pixel-anchor-link-and-text-detector-experience"
"liuheng92/OCR_EVALUATION" -> "Megvii-CSG/MegReader"
"liuheng92/OCR_EVALUATION" -> "Vipermdl/OCR_detection_IC15"
"clovaai/TedEval" -> "clovaai/CLEval"
"clovaai/TedEval" -> "liuheng92/OCR_EVALUATION"
"clovaai/TedEval" -> "clovaai/SATRN"
"clovaai/TedEval" -> "STVIR/PMTD"
"clovaai/TedEval" -> "Yuliang-Liu/TIoU-metric"
"wushilian/STN_CNN_LSTM_CTC_TensorFlow" -> "wushilian/Real_time_text_detector_yolo2"
"wushilian/STN_CNN_LSTM_CTC_TensorFlow" -> "wushilian/CRNN_Attention_OCR_Chinese"
"bgshih/aster" -> "ayumiymk/aster.pytorch"
"bgshih/aster" -> "Canjie-Luo/MORAN_v2"
"bgshih/aster" -> "whai362/PSENet"
"bgshih/aster" -> "MhLiao/TextBoxes_plusplus"
"bgshih/aster" -> "jiangxiluning/FOTS.PyTorch"
"bgshih/aster" -> "JarveeLee/SynthText_Chinese_version"
"bgshih/aster" -> "lvpengyuan/corner"
"bgshih/aster" -> "Bartzi/see"
"bgshih/aster" -> "summerlvsong/Aggregation-Cross-Entropy"
"bgshih/aster" -> "msight-tech/research-charnet"
"bgshih/aster" -> "liuheng92/tensorflow_PSENet"
"bgshih/aster" -> "lvpengyuan/masktextspotter.caffe2"
"bgshih/aster" -> "Jyouhou/SceneTextPapers"
"bgshih/aster" -> "Sanster/text_renderer"
"bgshih/aster" -> "Wang-Tianwei/Decoupled-attention-network"
"wushilian/CRNN_Attention_OCR_Chinese" -> "A-bone1/Attention-ocr-Chinese-Version"
"wushilian/CRNN_Attention_OCR_Chinese" -> "xiaomaxiao/keras_ocr"
"wushilian/CRNN_Attention_OCR_Chinese" -> "ilovin/lstm_ctc_ocr"
"wushilian/CRNN_Attention_OCR_Chinese" -> "Belval/CRNN"
"wushilian/CRNN_Attention_OCR_Chinese" -> "bear63/sceneReco"
"wushilian/CRNN_Attention_OCR_Chinese" -> "wushilian/STN_CNN_LSTM_CTC_TensorFlow"
"wushilian/CRNN_Attention_OCR_Chinese" -> "weinman/cnn_lstm_ctc_ocr"
"wushilian/CRNN_Attention_OCR_Chinese" -> "JarveeLee/SynthText_Chinese_version"
"wushilian/CRNN_Attention_OCR_Chinese" -> "chenjun2hao/Attention_ocr.pytorch"
"wushilian/CRNN_Attention_OCR_Chinese" -> "da03/Attention-OCR"
"wushilian/CRNN_Attention_OCR_Chinese" -> "MaybeShewill-CV/CRNN_Tensorflow"
"wushilian/CRNN_Attention_OCR_Chinese" -> "lvpengyuan/corner"
"wushilian/CRNN_Attention_OCR_Chinese" -> "senlinuc/caffe_ocr"
"wushilian/CRNN_Attention_OCR_Chinese" -> "dengdan/seglink"
"wushilian/CRNN_Attention_OCR_Chinese" -> "bgshih/aster"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "Pay20Y/SAR_TF"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "Wang-Tianwei/Decoupled-attention-network"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "summerlvsong/Aggregation-Cross-Entropy"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "liuch37/sar-pytorch"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "Canjie-Luo/MORAN_v2"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "Pay20Y/SEED"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "jichilen/SAR_quick"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "HCIILAB/Scene-Text-Recognition"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "Megvii-CSG/MegReader"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "ayumiymk/aster.pytorch"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "Canjie-Luo/Text-Image-Augmentation"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "Bartzi/kiss"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "princewang1994/TextSnake.pytorch"
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" -> "Yuliang-Liu/Box_Discretization_Network"
"summerlvsong/Aggregation-Cross-Entropy" -> "Wang-Tianwei/Decoupled-attention-network"
"summerlvsong/Aggregation-Cross-Entropy" -> "Canjie-Luo/MORAN_v2"
"summerlvsong/Aggregation-Cross-Entropy" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"summerlvsong/Aggregation-Cross-Entropy" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"summerlvsong/Aggregation-Cross-Entropy" -> "Canjie-Luo/Text-Image-Augmentation"
"summerlvsong/Aggregation-Cross-Entropy" -> "Megvii-CSG/MegReader"
"summerlvsong/Aggregation-Cross-Entropy" -> "Yuliang-Liu/Box_Discretization_Network"
"summerlvsong/Aggregation-Cross-Entropy" -> "ayumiymk/aster.pytorch"
"summerlvsong/Aggregation-Cross-Entropy" -> "RubanSeven/Text-Image-Augmentation-python"
"summerlvsong/Aggregation-Cross-Entropy" -> "princewang1994/TextSnake.pytorch"
"summerlvsong/Aggregation-Cross-Entropy" -> "MhLiao/MaskTextSpotter"
"summerlvsong/Aggregation-Cross-Entropy" -> "bgshih/aster"
"summerlvsong/Aggregation-Cross-Entropy" -> "Yuliang-Liu/TIoU-metric"
"summerlvsong/Aggregation-Cross-Entropy" -> "Jyouhou/SceneTextPapers"
"summerlvsong/Aggregation-Cross-Entropy" -> "liuhu-bigeye/enctc.crnn"
"MhLiao/SynthText3D" -> "Jyouhou/UnrealText"
"MhLiao/SynthText3D" -> "fnzhan/Verisimilar-Image-Synthesis-for-Accurate-Detection-and-Recognition-of-Texts-in-Scenes"
"MhLiao/SynthText3D" -> "summerlvsong/Aggregation-Cross-Entropy"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "summerlvsong/Aggregation-Cross-Entropy"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "Megvii-CSG/MegReader"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "Wang-Tianwei/Decoupled-attention-network"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "Canjie-Luo/Text-Image-Augmentation"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "Yuliang-Liu/Box_Discretization_Network"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "Bartzi/kiss"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "STVIR/PMTD"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "chenjun2hao/Bert_OCR.pytorch"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "RubanSeven/CRAFT_keras"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "Yuliang-Liu/bezier_curve_text_spotting"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "RubanSeven/Text-Image-Augmentation-python"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "Jyouhou/CurvedSynthText"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "WenmuZhou/PAN.pytorch"
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" -> "msight-tech/research-charnet"
"Yuliang-Liu/Curve-Text-Detector" -> "cs-chan/Total-Text-Dataset"
"Yuliang-Liu/Curve-Text-Detector" -> "whai362/PSENet"
"Yuliang-Liu/Curve-Text-Detector" -> "princewang1994/TextSnake.pytorch"
"Yuliang-Liu/Curve-Text-Detector" -> "JarveeLee/SynthText_Chinese_version"
"Yuliang-Liu/Curve-Text-Detector" -> "lvpengyuan/masktextspotter.caffe2"
"Yuliang-Liu/Curve-Text-Detector" -> "Canjie-Luo/MORAN_v2"
"Yuliang-Liu/Curve-Text-Detector" -> "ankush-me/SynthText"
"Yuliang-Liu/Curve-Text-Detector" -> "Canjie-Luo/Text-Image-Augmentation"
"Yuliang-Liu/Curve-Text-Detector" -> "Jyouhou/SceneTextPapers"
"Yuliang-Liu/Curve-Text-Detector" -> "ZJULearning/pixel_link"
"Yuliang-Liu/Curve-Text-Detector" -> "summerlvsong/Aggregation-Cross-Entropy"
"Yuliang-Liu/Curve-Text-Detector" -> "Yuliang-Liu/bezier_curve_text_spotting"
"Yuliang-Liu/Curve-Text-Detector" -> "huoyijie/AdvancedEAST"
"Yuliang-Liu/Curve-Text-Detector" -> "HCIILAB/Scene-Text-Detection"
"Yuliang-Liu/Curve-Text-Detector" -> "whitelok/image-text-localization-recognition"
"bes-dev/crnn-pytorch" -> "Holmeyoung/crnn-pytorch"
"bes-dev/crnn-pytorch" -> "zhiqwang/sightseq"
"bes-dev/crnn-pytorch" -> "Li-Ming-Fan/OCR-CRNN-CTC"
"bes-dev/crnn-pytorch" -> "chenjun2hao/Attention_ocr.pytorch"
"bes-dev/crnn-pytorch" -> "jiaoml1996/ScenceRecognition"
"bes-dev/crnn-pytorch" -> "marvis/ocr_attention"
"bes-dev/crnn-pytorch" -> "Vipermdl/OCR_detection_IC15"
"LoveGalaxy/Character-Region-Awareness-for-Text-Detection-" -> "RubanSeven/CRAFT_keras"
"LoveGalaxy/Character-Region-Awareness-for-Text-Detection-" -> "autonise/CRAFT-Remade"
"LoveGalaxy/Character-Region-Awareness-for-Text-Detection-" -> "backtime92/CRAFT-Reimplementation"
"LoveGalaxy/Character-Region-Awareness-for-Text-Detection-" -> "Yuliang-Liu/Box_Discretization_Network"
"LoveGalaxy/Character-Region-Awareness-for-Text-Detection-" -> "brooklyn1900/CRAFT_pytorch"
"LoveGalaxy/Character-Region-Awareness-for-Text-Detection-" -> "namedysx/CRAFT-tensorflow"
"LoveGalaxy/Character-Region-Awareness-for-Text-Detection-" -> "AirBernard/Scene-Text-Detection-with-SPCNET"
"LoveGalaxy/Character-Region-Awareness-for-Text-Detection-" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"LoveGalaxy/Character-Region-Awareness-for-Text-Detection-" -> "YukangWang/TextField"
"tegaki/tegaki" -> "taku910/zinnia"
"tegaki/tegaki" -> "simonwsw/cnn-zh"
"AstarLight/Lets_OCR" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"AstarLight/Lets_OCR" -> "AstarLight/CPS-OCR-Engine"
"AstarLight/Lets_OCR" -> "huoyijie/AdvancedEAST"
"AstarLight/Lets_OCR" -> "jiangxiluning/FOTS.PyTorch"
"AstarLight/Lets_OCR" -> "Sanster/text_renderer"
"AstarLight/Lets_OCR" -> "opconty/pytorch_ctpn"
"AstarLight/Lets_OCR" -> "bai-shang/crnn_ctc_ocr_tf"
"AstarLight/Lets_OCR" -> "whai362/PSENet"
"AstarLight/Lets_OCR" -> "xiaofengShi/CHINESE-OCR"
"AstarLight/Lets_OCR" -> "chenjun2hao/Attention_ocr.pytorch"
"AstarLight/Lets_OCR" -> "WenmuZhou/PSENet.pytorch"
"AstarLight/Lets_OCR" -> "meijieru/crnn.pytorch"
"AstarLight/Lets_OCR" -> "xiaomaxiao/keras_ocr"
"AstarLight/Lets_OCR" -> "WenmuZhou/OCR_DataSet"
"AstarLight/Lets_OCR" -> "JarveeLee/SynthText_Chinese_version"
"HCIILAB/SCUT-EPT_Dataset_Release" -> "HCIILAB/SCUT-HCCDoc_Dataset_Release"
"HCIILAB/SCUT-EPT_Dataset_Release" -> "intel/handwritten-chinese-ocr-samples"
"HCIILAB/SCUT-EPT_Dataset_Release" -> "shannanyinxiang/PageNet"
"HCIILAB/SCUT-EPT_Dataset_Release" -> "HCIILAB/MTHv2_Datasets_Release" ["e"=1]
"tangzhenyu/Scene-Text-Understanding" -> "whitelok/image-text-localization-recognition"
"tangzhenyu/Scene-Text-Understanding" -> "bgshih/aster"
"tangzhenyu/Scene-Text-Understanding" -> "MhLiao/TextBoxes_plusplus"
"tangzhenyu/Scene-Text-Understanding" -> "Jyouhou/SceneTextPapers"
"tangzhenyu/Scene-Text-Understanding" -> "JarveeLee/SynthText_Chinese_version"
"tangzhenyu/Scene-Text-Understanding" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"tangzhenyu/Scene-Text-Understanding" -> "tonghe90/textspotter"
"tangzhenyu/Scene-Text-Understanding" -> "A-bone1/Attention-ocr-Chinese-Version"
"tangzhenyu/Scene-Text-Understanding" -> "Bartzi/see"
"tangzhenyu/Scene-Text-Understanding" -> "ZumingHuang/awesome-ocr-resources"
"tangzhenyu/Scene-Text-Understanding" -> "Canjie-Luo/MORAN_v2"
"tangzhenyu/Scene-Text-Understanding" -> "Yuliang-Liu/Curve-Text-Detector"
"tangzhenyu/Scene-Text-Understanding" -> "ankush-me/SynthText"
"tangzhenyu/Scene-Text-Understanding" -> "MhLiao/TextBoxes"
"tangzhenyu/Scene-Text-Understanding" -> "Canjie-Luo/Text-Image-Augmentation"
"sagelywizard/pytorch-mdn" -> "tonyduan/mixture-density-network"
"sagelywizard/pytorch-mdn" -> "axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation"
"sagelywizard/pytorch-mdn" -> "sksq96/pytorch-mdn"
"sagelywizard/pytorch-mdn" -> "hardmaru/pytorch_notebooks"
"sagelywizard/pytorch-mdn" -> "cpmpercussion/keras-mdn-layer"
"sagelywizard/pytorch-mdn" -> "dusenberrymw/mixture-density-networks"
"marvis/ocr_attention" -> "koibiki/crnn_self_attetion"
"bai-shang/crnn_ctc_ocr_tf" -> "bai-shang/crnn_seq2seq_ocr_pytorch"
"bai-shang/crnn_ctc_ocr_tf" -> "AstarLight/Lets_OCR"
"bai-shang/crnn_ctc_ocr_tf" -> "MaybeShewill-CV/CRNN_Tensorflow"
"bai-shang/crnn_ctc_ocr_tf" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"bai-shang/crnn_ctc_ocr_tf" -> "xiaomaxiao/keras_ocr"
"bai-shang/crnn_ctc_ocr_tf" -> "Sanster/text_renderer"
"bai-shang/crnn_ctc_ocr_tf" -> "xiaofengShi/CHINESE-OCR"
"bai-shang/crnn_ctc_ocr_tf" -> "huoyijie/AdvancedEAST"
"bai-shang/crnn_ctc_ocr_tf" -> "YCG09/chinese_ocr"
"bai-shang/crnn_ctc_ocr_tf" -> "JarveeLee/SynthText_Chinese_version"
"bai-shang/crnn_ctc_ocr_tf" -> "summerlvsong/Aggregation-Cross-Entropy"
"bai-shang/crnn_ctc_ocr_tf" -> "meijieru/crnn.pytorch"
"bai-shang/crnn_ctc_ocr_tf" -> "MhLiao/MaskTextSpotter"
"bai-shang/crnn_ctc_ocr_tf" -> "chenjun2hao/Attention_ocr.pytorch"
"bai-shang/crnn_ctc_ocr_tf" -> "liuheng92/tensorflow_PSENet"
"WenmuZhou/PSENet.pytorch" -> "WenmuZhou/PAN.pytorch"
"WenmuZhou/PSENet.pytorch" -> "whai362/PSENet"
"WenmuZhou/PSENet.pytorch" -> "liuheng92/tensorflow_PSENet"
"WenmuZhou/PSENet.pytorch" -> "lvpengyuan/corner"
"WenmuZhou/PSENet.pytorch" -> "jiangxiluning/FOTS.PyTorch"
"WenmuZhou/PSENet.pytorch" -> "WenmuZhou/DBNet.pytorch"
"WenmuZhou/PSENet.pytorch" -> "Canjie-Luo/MORAN_v2"
"WenmuZhou/PSENet.pytorch" -> "princewang1994/TextSnake.pytorch"
"WenmuZhou/PSENet.pytorch" -> "MhLiao/DB"
"WenmuZhou/PSENet.pytorch" -> "msight-tech/research-charnet"
"WenmuZhou/PSENet.pytorch" -> "Wang-Tianwei/Decoupled-attention-network"
"WenmuZhou/PSENet.pytorch" -> "whai362/pan_pp.pytorch"
"WenmuZhou/PSENet.pytorch" -> "summerlvsong/Aggregation-Cross-Entropy"
"WenmuZhou/PSENet.pytorch" -> "ayumiymk/aster.pytorch"
"WenmuZhou/PSENet.pytorch" -> "backtime92/CRAFT-Reimplementation"
"ankanbhunia/AdverseBiNet" -> "ankanbhunia/doodleformer"
"ankanbhunia/AdverseBiNet" -> "ankanbhunia/AttenScriptNetPR"
"ankanbhunia/AdverseBiNet" -> "ankanbhunia/arxivbox"
"liuheng92/tensorflow_PSENet" -> "whai362/PSENet"
"liuheng92/tensorflow_PSENet" -> "WenmuZhou/PSENet.pytorch"
"liuheng92/tensorflow_PSENet" -> "ZJULearning/pixel_link"
"liuheng92/tensorflow_PSENet" -> "huoyijie/AdvancedEAST"
"liuheng92/tensorflow_PSENet" -> "WenmuZhou/PAN.pytorch"
"liuheng92/tensorflow_PSENet" -> "princewang1994/TextSnake.pytorch"
"liuheng92/tensorflow_PSENet" -> "bgshih/aster"
"liuheng92/tensorflow_PSENet" -> "JarveeLee/SynthText_Chinese_version"
"liuheng92/tensorflow_PSENet" -> "Canjie-Luo/MORAN_v2"
"liuheng92/tensorflow_PSENet" -> "lvpengyuan/masktextspotter.caffe2"
"liuheng92/tensorflow_PSENet" -> "lvpengyuan/corner"
"liuheng92/tensorflow_PSENet" -> "msight-tech/research-charnet"
"liuheng92/tensorflow_PSENet" -> "liuheng92/OCR_EVALUATION"
"liuheng92/tensorflow_PSENet" -> "looput/PSENet-Tensorflow"
"liuheng92/tensorflow_PSENet" -> "MhLiao/DB"
"chenyr0021/Chinese_character_recognition" -> "JiageWang/hand-writing-recognition"
"chenyr0021/Chinese_character_recognition" -> "feirenlg/chinese_character_recognition_for_pytorch"
"chenyr0021/Chinese_character_recognition" -> "jinxiwang/ocr_TDR"
"jiangxiluning/FOTS.PyTorch" -> "whai362/PSENet"
"jiangxiluning/FOTS.PyTorch" -> "FakerYFX/FOTS"
"jiangxiluning/FOTS.PyTorch" -> "lvpengyuan/masktextspotter.caffe2"
"jiangxiluning/FOTS.PyTorch" -> "huoyijie/AdvancedEAST"
"jiangxiluning/FOTS.PyTorch" -> "SakuraRiven/EAST"
"jiangxiluning/FOTS.PyTorch" -> "msight-tech/research-charnet"
"jiangxiluning/FOTS.PyTorch" -> "Pay20Y/FOTS_TF"
"jiangxiluning/FOTS.PyTorch" -> "ayumiymk/aster.pytorch"
"jiangxiluning/FOTS.PyTorch" -> "ZJULearning/pixel_link"
"jiangxiluning/FOTS.PyTorch" -> "MhLiao/MaskTextSpotter"
"jiangxiluning/FOTS.PyTorch" -> "WenmuZhou/PSENet.pytorch"
"jiangxiluning/FOTS.PyTorch" -> "bgshih/aster"
"jiangxiluning/FOTS.PyTorch" -> "songdejia/EAST"
"jiangxiluning/FOTS.PyTorch" -> "MhLiao/TextBoxes_plusplus"
"jiangxiluning/FOTS.PyTorch" -> "zhang0jhon/AttentionOCR"
"Pay20Y/FOTS_TF" -> "jiangxiluning/FOTS.PyTorch"
"Pay20Y/FOTS_TF" -> "yu20103983/FOTS"
"Pay20Y/FOTS_TF" -> "FakerYFX/FOTS"
"Pay20Y/FOTS_TF" -> "tonghe90/textspotter"
"Pay20Y/FOTS_TF" -> "lvpengyuan/masktextspotter.caffe2"
"Pay20Y/FOTS_TF" -> "chenjun2hao/FOTS.pytorch"
"Pay20Y/FOTS_TF" -> "Shun14/TextBoxes_plusplus_Tensorflow"
"Pay20Y/FOTS_TF" -> "Vipermdl/OCR_detection_IC15"
"Pay20Y/FOTS_TF" -> "MichalBusta/DeepTextSpotter"
"Pay20Y/FOTS_TF" -> "Wang-Tianwei/Decoupled-attention-network"
"Pay20Y/FOTS_TF" -> "lvpengyuan/corner"
"Pay20Y/FOTS_TF" -> "novioleo/FOTS"
"s3nh/text-detector" -> "yxgong0/DTR"
"williamyang1991/TET-GAN" -> "ueoo/AGIS-Net"
"williamyang1991/TET-GAN" -> "daooshee/Typography-with-Decor"
"williamyang1991/TET-GAN" -> "williamyang1991/Text-Effects-Transfer"
"williamyang1991/TET-GAN" -> "VITA-Group/ShapeMatchingGAN"
"williamyang1991/TET-GAN" -> "daooshee/TE141K"
"williamyang1991/TET-GAN" -> "azadis/MC-GAN"
"koishi70/Style_Migration_For_Artistic_Font_With_CNN" -> "azadis/MC-GAN"
"lvpengyuan/corner" -> "Yuliang-Liu/Box_Discretization_Network"
"lvpengyuan/corner" -> "Megvii-CSG/MegReader"
"lvpengyuan/corner" -> "ayumiymk/aster.pytorch"
"lvpengyuan/corner" -> "WenmuZhou/PSENet.pytorch"
"lvpengyuan/corner" -> "whai362/PSENet"
"lvpengyuan/corner" -> "WenmuZhou/PAN.pytorch"
"lvpengyuan/corner" -> "MhLiao/MaskTextSpotter"
"lvpengyuan/corner" -> "bgshih/aster"
"lvpengyuan/corner" -> "Wang-Tianwei/Decoupled-attention-network"
"lvpengyuan/corner" -> "backtime92/CRAFT-Reimplementation"
"lvpengyuan/corner" -> "Canjie-Luo/Text-Image-Augmentation"
"lvpengyuan/corner" -> "lvpengyuan/masktextspotter.caffe2"
"lvpengyuan/corner" -> "Jyouhou/SceneTextPapers"
"lvpengyuan/corner" -> "jiangxiluning/FOTS.PyTorch"
"lvpengyuan/corner" -> "msight-tech/research-charnet"
"sksq96/pytorch-mdn" -> "dusenberrymw/mixture-density-networks"
"Canjie-Luo/Text-Image-Augmentation" -> "RubanSeven/Text-Image-Augmentation-python"
"Canjie-Luo/Text-Image-Augmentation" -> "Wang-Tianwei/Decoupled-attention-network"
"Canjie-Luo/Text-Image-Augmentation" -> "summerlvsong/Aggregation-Cross-Entropy"
"Canjie-Luo/Text-Image-Augmentation" -> "HCIILAB/Scene-Text-Recognition"
"Canjie-Luo/Text-Image-Augmentation" -> "Megvii-CSG/MegReader"
"Canjie-Luo/Text-Image-Augmentation" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"Canjie-Luo/Text-Image-Augmentation" -> "ayumiymk/aster.pytorch"
"Canjie-Luo/Text-Image-Augmentation" -> "chenjun2hao/SRN.pytorch"
"Canjie-Luo/Text-Image-Augmentation" -> "Canjie-Luo/MORAN_v2"
"Canjie-Luo/Text-Image-Augmentation" -> "Yuliang-Liu/bezier_curve_text_spotting"
"Canjie-Luo/Text-Image-Augmentation" -> "Pay20Y/SEED"
"Canjie-Luo/Text-Image-Augmentation" -> "Jyouhou/UnrealText"
"Canjie-Luo/Text-Image-Augmentation" -> "MhLiao/MaskTextSpotter"
"Canjie-Luo/Text-Image-Augmentation" -> "lvpengyuan/corner"
"Canjie-Luo/Text-Image-Augmentation" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"chenjun2hao/Attention_ocr.pytorch" -> "A-bone1/Attention-ocr-Chinese-Version"
"chenjun2hao/Attention_ocr.pytorch" -> "bai-shang/crnn_seq2seq_ocr_pytorch"
"chenjun2hao/Attention_ocr.pytorch" -> "zhang0jhon/AttentionOCR"
"chenjun2hao/Attention_ocr.pytorch" -> "chenjun2hao/Bert_OCR.pytorch"
"chenjun2hao/Attention_ocr.pytorch" -> "opconty/pytorch_ctpn"
"chenjun2hao/Attention_ocr.pytorch" -> "da03/Attention-OCR"
"chenjun2hao/Attention_ocr.pytorch" -> "lvpengyuan/corner"
"chenjun2hao/Attention_ocr.pytorch" -> "summerlvsong/Aggregation-Cross-Entropy"
"chenjun2hao/Attention_ocr.pytorch" -> "WenmuZhou/PSENet.pytorch"
"chenjun2hao/Attention_ocr.pytorch" -> "Wang-Tianwei/Decoupled-attention-network"
"chenjun2hao/Attention_ocr.pytorch" -> "AstarLight/Lets_OCR"
"chenjun2hao/Attention_ocr.pytorch" -> "wushilian/CRNN_Attention_OCR_Chinese"
"chenjun2hao/Attention_ocr.pytorch" -> "ayumiymk/aster.pytorch"
"chenjun2hao/Attention_ocr.pytorch" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"chenjun2hao/Attention_ocr.pytorch" -> "fengxinjie/Transformer-OCR"
"Yuliang-Liu/TIoU-metric" -> "HCIILAB/Scene-Text-Removal"
"Yuliang-Liu/TIoU-metric" -> "STVIR/PMTD"
"Yuliang-Liu/TIoU-metric" -> "summerlvsong/Aggregation-Cross-Entropy"
"Yuliang-Liu/TIoU-metric" -> "Yuliang-Liu/Box_Discretization_Network"
"Yuliang-Liu/TIoU-metric" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"Yuliang-Liu/TIoU-metric" -> "Yuliang-Liu/Curve-Text-Detector"
"Yuliang-Liu/TIoU-metric" -> "HCIILAB/Scene-Text-Detection"
"Yuliang-Liu/TIoU-metric" -> "AirBernard/Scene-Text-Detection-with-SPCNET"
"Yuliang-Liu/TIoU-metric" -> "PkuDavidGuan/TIoU-metric-python3"
"Yuliang-Liu/TIoU-metric" -> "Jyouhou/SceneTextPapers"
"Yuliang-Liu/TIoU-metric" -> "lvpengyuan/masktextspotter.caffe2"
"Yuliang-Liu/TIoU-metric" -> "jichilen/SAR_quick"
"Yuliang-Liu/TIoU-metric" -> "HCIILAB/Scene-Text-Recognition"
"Yuliang-Liu/TIoU-metric" -> "WenmuZhou/PAN.pytorch"
"Yuliang-Liu/TIoU-metric" -> "Megvii-CSG/MegReader"
"janzd/EAST" -> "huoyijie/AdvancedEAST"
"janzd/EAST" -> "opconty/pixellink_keras" ["e"=1]
"janzd/EAST" -> "songdejia/EAST"
"janzd/EAST" -> "Vipermdl/OCR_detection_IC15"
"janzd/EAST" -> "argman/EAST"
"janzd/EAST" -> "FakerYFX/FOTS"
"janzd/EAST" -> "tonghe90/textspotter"
"janzd/EAST" -> "jiangxiluning/FOTS.PyTorch"
"MachineLP/OCR_Keras" -> "ooooverflow/chinese-ocr"
"MachineLP/OCR_Keras" -> "felixBrave/ocr_chinese"
"MachineLP/OCR_Keras" -> "GlassyWing/text-detection-ocr"
"IShengFang/TypographyResearchCollection" -> "clovaai/mxfont"
"IShengFang/TypographyResearchCollection" -> "clovaai/fewshot-font-generation"
"IShengFang/TypographyResearchCollection" -> "clovaai/lffont"
"IShengFang/TypographyResearchCollection" -> "ecnuycxie/DG-Font"
"IShengFang/TypographyResearchCollection" -> "tlc121/FsFont"
"IShengFang/TypographyResearchCollection" -> "JeanWU/CalliGAN"
"IShengFang/TypographyResearchCollection" -> "liweileev/FET-GAN"
"IShengFang/TypographyResearchCollection" -> "joshpc/StyledFontGAN"
"IShengFang/TypographyResearchCollection" -> "ligoudaner377/font_translator_gan"
"diaomin/crnn-mxnet-chinese-text-recognition" -> "A-bone1/Attention-ocr-Chinese-Version"
"diaomin/crnn-mxnet-chinese-text-recognition" -> "YoungMiao/crnn"
"diaomin/crnn-mxnet-chinese-text-recognition" -> "senlinuc/caffe_ocr"
"yflv-yanxia/scene_text" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"yflv-yanxia/scene_text" -> "AirBernard/Scene-Text-Detection-with-SPCNET"
"yflv-yanxia/scene_text" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"yflv-yanxia/scene_text" -> "MhLiao/SynthText3D"
"yflv-yanxia/scene_text" -> "MhLiao/MaskTextSpotter"
"yflv-yanxia/scene_text" -> "Megvii-CSG/MegReader"
"HCIILAB/Scene-Text-Removal" -> "lcy0604/EraseNet"
"HCIILAB/Scene-Text-Removal" -> "HCIILAB/SCUT-EnsText"
"HCIILAB/Scene-Text-Removal" -> "neouyghur/One-stage-Mask-based-Scene-Text-Eraser"
"HCIILAB/Scene-Text-Removal" -> "youdao-ai/SRNet"
"HCIILAB/Scene-Text-Removal" -> "Yuliang-Liu/TIoU-metric"
"HCIILAB/Scene-Text-Removal" -> "Yuliang-Liu/Box_Discretization_Network"
"HCIILAB/Scene-Text-Removal" -> "lcy0604/CTRNet"
"HCIILAB/Scene-Text-Removal" -> "ku21fan/STR-Fewer-Labels"
"changebo/HCCG-CycleGAN" -> "ZC119/Handwritten-CycleGAN"
"changebo/HCCG-CycleGAN" -> "pcgreat/zi2zi"
"changebo/HCCG-CycleGAN" -> "JeanWU/CalliGAN"
"changebo/HCCG-CycleGAN" -> "MingtaoGuo/Chinese-Character-and-Calligraphic-Image-Processing" ["e"=1]
"changebo/HCCG-CycleGAN" -> "mhy12345/Chinese-Character-Style-Transfer"
"changebo/HCCG-CycleGAN" -> "liweileev/FET-GAN"
"changebo/HCCG-CycleGAN" -> "ueoo/AGIS-Net"
"changebo/HCCG-CycleGAN" -> "JinshanZeng/StrokeGAN"
"changebo/HCCG-CycleGAN" -> "zhongzhuoyao/HCCR-GoogLeNet"
"changebo/HCCG-CycleGAN" -> "azadis/MC-GAN"
"changebo/HCCG-CycleGAN" -> "clovaai/lffont"
"changebo/HCCG-CycleGAN" -> "changebo/Rewrite2"
"huizhang0110/AON" -> "AirBernard/Scene-Text-Detection-with-SPCNET"
"huizhang0110/AON" -> "fnzhan/ESIR"
"huizhang0110/AON" -> "LianaWang/itn"
"huizhang0110/AON" -> "fnzhan/Verisimilar-Image-Synthesis-for-Accurate-Detection-and-Recognition-of-Texts-in-Scenes"
"huizhang0110/AON" -> "JK-Rao/Corner_Segmentation_TextDetection"
"Vipermdl/OCR_detection_IC15" -> "FakerYFX/FOTS"
"Vipermdl/OCR_detection_IC15" -> "novioleo/FOTS"
"Vipermdl/OCR_detection_IC15" -> "Wovchena/text-detection-fots.pytorch"
"Vipermdl/OCR_detection_IC15" -> "jiangxiluning/FOTS.PyTorch"
"Vipermdl/OCR_detection_IC15" -> "yu20103983/FOTS"
"yuantailing/ctw-baseline" -> "JarveeLee/SynthText_Chinese_version"
"yuantailing/ctw-baseline" -> "lvpengyuan/masktextspotter.caffe2"
"yuantailing/ctw-baseline" -> "Jyouhou/SceneTextPapers"
"yuantailing/ctw-baseline" -> "Canjie-Luo/MORAN_v2"
"yuantailing/ctw-baseline" -> "whai362/PSENet"
"yuantailing/ctw-baseline" -> "tonghe90/textspotter"
"yuantailing/ctw-baseline" -> "bgshih/aster"
"yuantailing/ctw-baseline" -> "MichalBusta/E2E-MLT"
"yuantailing/ctw-baseline" -> "wang-tf/Chinese_OCR_synthetic_data"
"yuantailing/ctw-baseline" -> "dengdan/seglink"
"yuantailing/ctw-baseline" -> "xieyufei1993/InceptText-Tensorflow"
"yuantailing/ctw-baseline" -> "MhLiao/TextBoxes_plusplus"
"yuantailing/ctw-baseline" -> "Bartzi/stn-ocr"
"yuantailing/ctw-baseline" -> "Yuliang-Liu/Curve-Text-Detector"
"yuantailing/ctw-baseline" -> "jiangxiluning/FOTS.PyTorch"
"xieyufei1993/InceptText-Tensorflow" -> "lvpengyuan/masktextspotter.caffe2"
"xieyufei1993/InceptText-Tensorflow" -> "Shun14/TextBoxes_plusplus_Tensorflow"
"xieyufei1993/InceptText-Tensorflow" -> "UpCoder/ICPR_TextDection"
"xieyufei1993/InceptText-Tensorflow" -> "cheerss/PixelLink-with-pytorch"
"xieyufei1993/InceptText-Tensorflow" -> "FakerYFX/FOTS"
"xieyufei1993/InceptText-Tensorflow" -> "Vipermdl/OCR_detection_IC15"
"xieyufei1993/InceptText-Tensorflow" -> "ZJULearning/pixel_link"
"yinglang/CIFAR10_mxnet" -> "L1aoXingyu/cifar10-gluon"
"yinglang/CIFAR10_mxnet" -> "jamesliu/kaggle_cifar-10_mxnet"
"yinglang/CIFAR10_mxnet" -> "sinyeratlantis/deep-learning-gluon"
"yinglang/CIFAR10_mxnet" -> "ypwhs/DogBreed_gluon"
"Sanster/DeepOcrService" -> "Sanster/tf_ctpn"
"autonise/CRAFT-Remade" -> "backtime92/CRAFT-Reimplementation"
"autonise/CRAFT-Remade" -> "RubanSeven/CRAFT_keras"
"autonise/CRAFT-Remade" -> "brooklyn1900/CRAFT_pytorch"
"autonise/CRAFT-Remade" -> "LoveGalaxy/Character-Region-Awareness-for-Text-Detection-"
"autonise/CRAFT-Remade" -> "Yuliang-Liu/Box_Discretization_Network"
"autonise/CRAFT-Remade" -> "Megvii-CSG/MegReader"
"autonise/CRAFT-Remade" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"autonise/CRAFT-Remade" -> "mayank-git-hub/Text-Recognition"
"Incentering/pixel-anchor-link-and-text-detector-experience" -> "MrYANG23/Pixel-anchor"
"hsddlz/faster-CTPN" -> "Yuanhang8605/pixel-anchor-link-and-text-detector-experience"
"hsddlz/faster-CTPN" -> "opconty/pytorch_ctpn"
"hsddlz/faster-CTPN" -> "lvpengyuan/corner"
"hsddlz/faster-CTPN" -> "Walleclipse/ChineseAddress_OCR"
"hsddlz/faster-CTPN" -> "Li-Ming-Fan/OCR-DETECTION-CTPN"
"TianzhongSong/awesome-SynthText" -> "wang-tf/Chinese_OCR_synthetic_data"
"TianzhongSong/awesome-SynthText" -> "WenmuZhou/OCR_DataSet"
"TianzhongSong/awesome-SynthText" -> "JarveeLee/SynthText_Chinese_version"
"TianzhongSong/awesome-SynthText" -> "Canjie-Luo/MORAN_v2"
"TianzhongSong/awesome-SynthText" -> "Sanster/text_renderer"
"TianzhongSong/awesome-SynthText" -> "BboyHanat/TextGenerator"
"TianzhongSong/awesome-SynthText" -> "ayumiymk/aster.pytorch"
"TianzhongSong/awesome-SynthText" -> "summerlvsong/Aggregation-Cross-Entropy"
"TianzhongSong/awesome-SynthText" -> "Canjie-Luo/Text-Image-Augmentation"
"TianzhongSong/awesome-SynthText" -> "Wang-Tianwei/Decoupled-attention-network"
"TianzhongSong/awesome-SynthText" -> "WenmuZhou/PAN.pytorch"
"TianzhongSong/awesome-SynthText" -> "bgshih/aster"
"TianzhongSong/awesome-SynthText" -> "jiangxiluning/MASTER-TF"
"TianzhongSong/awesome-SynthText" -> "oh-my-ocr/text_renderer"
"TianzhongSong/awesome-SynthText" -> "Megvii-CSG/MegReader"
"qjadud1994/Text_Detector" -> "xhzdeng/stela"
"qjadud1994/Text_Detector" -> "lvpengyuan/corner"
"qjadud1994/Text_Detector" -> "Shun14/TextBoxes_plusplus_Tensorflow"
"qjadud1994/Text_Detector" -> "Wovchena/text-detection-fots.pytorch"
"qjadud1994/Text_Detector" -> "opconty/keras_std_plus_plus" ["e"=1]
"qjadud1994/Text_Detector" -> "SakuraRiven/EAST"
"qjadud1994/Text_Detector" -> "jiangxiluning/FOTS.PyTorch"
"qjadud1994/Text_Detector" -> "RubanSeven/CRAFT_keras"
"qjadud1994/Text_Detector" -> "mvoelk/ssd_detectors"
"chanind/makemeahanzi" -> "Lee-xeo/Chinese-Character-Stroke-Sequence-Dataset"
"MichalBusta/E2E-MLT" -> "MichalBusta/DeepTextSpotter"
"MichalBusta/E2E-MLT" -> "Megvii-CSG/MegReader"
"MichalBusta/E2E-MLT" -> "Canjie-Luo/MORAN_v2"
"MichalBusta/E2E-MLT" -> "MhLiao/MaskTextSpotter"
"MichalBusta/E2E-MLT" -> "summerlvsong/Aggregation-Cross-Entropy"
"MichalBusta/E2E-MLT" -> "STVIR/PMTD"
"MichalBusta/E2E-MLT" -> "backtime92/CRAFT-Reimplementation"
"MichalBusta/E2E-MLT" -> "princewang1994/TextSnake.pytorch"
"MichalBusta/E2E-MLT" -> "jiangxiluning/FOTS.PyTorch"
"MichalBusta/E2E-MLT" -> "msight-tech/research-charnet"
"MichalBusta/E2E-MLT" -> "lvpengyuan/masktextspotter.caffe2"
"MichalBusta/E2E-MLT" -> "bgshih/aster"
"MichalBusta/E2E-MLT" -> "JarveeLee/SynthText_Chinese_version"
"MichalBusta/E2E-MLT" -> "fnzhan/Verisimilar-Image-Synthesis-for-Accurate-Detection-and-Recognition-of-Texts-in-Scenes"
"MichalBusta/E2E-MLT" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"L1aoXingyu/cifar10-gluon" -> "yinglang/CIFAR10_mxnet"
"L1aoXingyu/cifar10-gluon" -> "jamesliu/kaggle_cifar-10_mxnet"
"L1aoXingyu/cifar10-gluon" -> "sinyeratlantis/deep-learning-gluon"
"HotaekHan/SSTDNet" -> "BestSonny/SSTD"
"FakerYFX/FOTS" -> "Vipermdl/OCR_detection_IC15"
"FakerYFX/FOTS" -> "jiangxiluning/FOTS.PyTorch"
"FakerYFX/FOTS" -> "lvpengyuan/masktextspotter.caffe2"
"FakerYFX/FOTS" -> "novioleo/FOTS"
"FakerYFX/FOTS" -> "chenjun2hao/FOTS.pytorch"
"FakerYFX/FOTS" -> "Pay20Y/FOTS_TF"
"FakerYFX/FOTS" -> "xieyufei1993/InceptText-Tensorflow"
"FakerYFX/FOTS" -> "yu20103983/FOTS"
"FakerYFX/FOTS" -> "huizhang0110/AON"
"FakerYFX/FOTS" -> "Wovchena/text-detection-fots.pytorch"
"FakerYFX/FOTS" -> "tonghe90/textspotter"
"Wovchena/text-detection-fots.pytorch" -> "chenjun2hao/FOTS.pytorch"
"Wovchena/text-detection-fots.pytorch" -> "Vipermdl/OCR_detection_IC15"
"Wovchena/text-detection-fots.pytorch" -> "MauritsBleeker/Bi-STET"
"Wovchena/text-detection-fots.pytorch" -> "bityigoss/mtl-text-recognition"
"Wovchena/text-detection-fots.pytorch" -> "yu20103983/FOTS"
"cheerss/PixelLink-with-pytorch" -> "xieyufei1993/InceptText-Tensorflow"
"azmiozgen/text-detection" -> "yestinsong/Text-Detection"
"azmiozgen/text-detection" -> "marrrcin/swt-python"
"azmiozgen/text-detection" -> "mypetyak/StrokeWidthTransform"
"azmiozgen/text-detection" -> "lquirosd/P2PaLA" ["e"=1]
"Sanster/tf_ctpn" -> "Sanster/DeepOcrService"
"GXYM/GloRe" -> "GXYM/Focal-loss"
"GXYM/GloRe" -> "GXYM/OHEM-loss"
"GXYM/GloRe" -> "GXYM/KPN"
"GXYM/GloRe" -> "GXYM/GHM_Loss"
"GXYM/GloRe" -> "GXYM/TextPMs"
"GXYM/GloRe" -> "GXYM/TextBPN"
"yflv-yanxia/handwritten_text" -> "grsgth/Offline-Chinese-Handwriting-Text-Page-Spotter-with-Text-Kernel"
"yflv-yanxia/handwritten_text" -> "YifeiY/hanzi_recognition"
"WenmuZhou/crnn.pytorch" -> "WenmuZhou/crnn.gluon"
"WenmuZhou/crnn.pytorch" -> "crossLi/Ultra_light_OCR_No.9"
"jamesliu/kaggle_cifar-10_mxnet" -> "L1aoXingyu/cifar10-gluon"
"jamesliu/kaggle_cifar-10_mxnet" -> "yinglang/CIFAR10_mxnet"
"YukangWang/TextField" -> "AirBernard/Scene-Text-Detection-with-SPCNET"
"orange90/HandWrittenChineseRecogntion" -> "wangjp0408/HCCR-HWDB-tensorflow"
"Shun14/TextBoxes_plusplus_Tensorflow" -> "xieyufei1993/InceptText-Tensorflow"
"Shun14/TextBoxes_plusplus_Tensorflow" -> "Sanster/keras_textboxes_plusplus"
"Shun14/TextBoxes_plusplus_Tensorflow" -> "Pay20Y/FOTS_TF"
"Yuanhang8605/pixel-anchor-link-and-text-detector-experience" -> "hsddlz/faster-CTPN"
"Yuanhang8605/pixel-anchor-link-and-text-detector-experience" -> "Vipermdl/OCR_detection_IC15"
"Yuanhang8605/pixel-anchor-link-and-text-detector-experience" -> "Incentering/pixel-anchor-link-and-text-detector-experience"
"pcgreat/zi2zi" -> "changebo/HCCG-CycleGAN"
"pcgreat/zi2zi" -> "zhyxun/Separating-Style-and-Content-for-Generalized-Style-Transfer"
"Li-Ming-Fan/OCR-CRNN-CTC" -> "Sanster/DeepOcrService"
"Li-Ming-Fan/OCR-CRNN-CTC" -> "Li-Ming-Fan/OCR-DETECTION-CTPN"
"novioleo/FOTS" -> "Vipermdl/OCR_detection_IC15"
"novioleo/FOTS" -> "FakerYFX/FOTS"
"GXYM/GHM_Loss" -> "GXYM/GloRe"
"GXYM/GHM_Loss" -> "GXYM/KPN"
"GXYM/GHM_Loss" -> "GXYM/OHEM-loss"
"GXYM/GHM_Loss" -> "GXYM/Focal-loss"
"GXYM/GHM_Loss" -> "GXYM/TextBPN"
"GXYM/GHM_Loss" -> "GXYM/TextPMs"
"GXYM/GHM_Loss" -> "GXYM/TextBPN-Plus-Plus"
"GXYM/GHM_Loss" -> "GXYM/DRRG"
"GXYM/OHEM-loss" -> "GXYM/Focal-loss"
"GXYM/OHEM-loss" -> "GXYM/GloRe"
"GXYM/OHEM-loss" -> "GXYM/KPN"
"junlulocky/bayesian-deep-learning-notes" -> "junlulocky/PyBGMM"
"Lina-AI/OHR" -> "chunkyjasper/IAMhwr"
"zfxxfeng/cnn_lstm_ctc_ocr_for_ICPR" -> "HaozhengLi/EAST_ICPR"
"fnzhan/Verisimilar-Image-Synthesis-for-Accurate-Detection-and-Recognition-of-Texts-in-Scenes" -> "MhLiao/SynthText3D"
"fnzhan/Verisimilar-Image-Synthesis-for-Accurate-Detection-and-Recognition-of-Texts-in-Scenes" -> "FangShancheng/conv-ensemble-str"
"fnzhan/Verisimilar-Image-Synthesis-for-Accurate-Detection-and-Recognition-of-Texts-in-Scenes" -> "cjnolet/text-renderer"
"Shun14/psenet_tf" -> "BADBADBADBOY/Psenet_v2"
"ankanbhunia/AttenScriptNetPR" -> "ankanbhunia/doodleformer"
"ankanbhunia/AttenScriptNetPR" -> "ankanbhunia/AdverseBiNet"
"ankanbhunia/AttenScriptNetPR" -> "ankanbhunia/arxivbox"
"Aurora11111/crnn-train-pytorch" -> "Aurora11111/TextRecognitionDataGenerator"
"Aurora11111/crnn-train-pytorch" -> "YoungMiao/synthdata-zh"
"Aurora11111/crnn-train-pytorch" -> "Aurora11111/text-detection-train-yolov3"
"Aurora11111/crnn-train-pytorch" -> "Heisenberg0391/TextImageGenerator" ["e"=1]
"AirBernard/Scene-Text-Detection-with-SPCNET" -> "huizhang0110/AON"
"AirBernard/Scene-Text-Detection-with-SPCNET" -> "fnzhan/ESIR"
"AirBernard/Scene-Text-Detection-with-SPCNET" -> "Yuliang-Liu/Box_Discretization_Network"
"AirBernard/Scene-Text-Detection-with-SPCNET" -> "YukangWang/TextField"
"AirBernard/Scene-Text-Detection-with-SPCNET" -> "STVIR/PMTD"
"AirBernard/Scene-Text-Detection-with-SPCNET" -> "lvpengyuan/masktextspotter.caffe2"
"simonwsw/cnn-zh" -> "atgambardella/handwriting"
"lkj1114889770/Synth_Chinese_OCR_dataset" -> "wang-tf/Chinese_OCR_synthetic_data"
"JiangKui007/jx_ocr" -> "lxj0276/OCRServer"
"fnzhan/ESIR" -> "BADBADBADBOY/Psenet_v2"
"yu20103983/FOTS" -> "Pay20Y/FOTS_TF"
"yu20103983/FOTS" -> "Wovchena/text-detection-fots.pytorch"
"yu20103983/FOTS" -> "Vipermdl/OCR_detection_IC15"
"yu20103983/FOTS" -> "WangXiaoCao/FOTS_two_stage"
"yu20103983/FOTS" -> "FakerYFX/FOTS"
"Aurora11111/TextRecognitionDataGenerator" -> "Aurora11111/crnn-train-pytorch"
"Aurora11111/TextRecognitionDataGenerator" -> "Aurora11111/text-detection-train-yolov3"
"Aurora11111/TextRecognitionDataGenerator" -> "Aurora11111/synthdata-zh"
"Aurora11111/TextRecognitionDataGenerator" -> "YoungMiao/synthdata-zh"
"chenjun2hao/FOTS.pytorch" -> "Wovchena/text-detection-fots.pytorch"
"falconjhc/W-Net" -> "Arctanxy/W-Net-PyTorch"
"FangShancheng/conv-ensemble-str" -> "fnzhan/Verisimilar-Image-Synthesis-for-Accurate-Detection-and-Recognition-of-Texts-in-Scenes"
"MhLiao/RRD" -> "xhzdeng/crpn"
"MhLiao/RRD" -> "BestSonny/SSTD"
"WenmuZhou/Segmentation-Free_OCR" -> "WenmuZhou/crnn.gluon"
"JK-Rao/Corner_Segmentation_TextDetection" -> "VeitL/OCR"
"WenmuZhou/crnn.gluon" -> "WenmuZhou/Segmentation-Free_OCR"
"WenmuZhou/crnn.gluon" -> "WenmuZhou/crnn.pytorch"
"migege/tf-CNN-CASIA-HWDB" -> "wangjp0408/HCCR-HWDB-tensorflow"
"peterWon/CASIA-HWDB-Recognition" -> "integeruser/CASIA-HWDB1.1-cnn"
"peterWon/CASIA-HWDB-Recognition" -> "wangjp0408/HCCR-HWDB-tensorflow"
"peterWon/CASIA-HWDB-Recognition" -> "HCIILAB/Forward-Implementation-of-Fast-and-Compact-CNN-for-Offline-HCCR"
"A-bone1/FSNS-tfrecord-generate" -> "A-bone1/Attention-ocr-Chinese-Version"
"A-bone1/FSNS-tfrecord-generate" -> "A-bone1/SSH-Facenet-FaceRecognition" ["e"=1]
"LinkWoong/Zeroshot-GAN" -> "LinkWoong/SURF2017"
"wangjp0408/HCCR-HWDB-tensorflow" -> "migege/tf-CNN-CASIA-HWDB"
"wangjp0408/HCCR-HWDB-tensorflow" -> "peterWon/CASIA-HWDB-Recognition"
"jichilen/SAR_quick" -> "Pay20Y/SAR_TF"
"liuyi91/RegEx-tools-for-excel-or-wps" -> "liuyi91/RegEx-tools-for-word-or-wps"
"breezedeus/CnSTD" -> "breezedeus/CnOCR"
"breezedeus/CnSTD" -> "breezedeus/Pix2Text" ["e"=1]
"breezedeus/CnSTD" -> "myhub/tr"
"breezedeus/CnSTD" -> "WenmuZhou/PytorchOCR"
"breezedeus/CnSTD" -> "RapidAI/RapidOrientation" ["e"=1]
"breezedeus/CnSTD" -> "WenmuZhou/OCR_DataSet"
"breezedeus/CnSTD" -> "BADBADBADBOY/pytorchOCR"
"breezedeus/CnSTD" -> "LinXueyuanStdio/LaTeX_OCR_PRO" ["e"=1]
"breezedeus/CnSTD" -> "oh-my-ocr/text_renderer"
"breezedeus/CnSTD" -> "breezedeus/CnMFD_Dataset" ["e"=1]
"breezedeus/CnSTD" -> "cv-small-snails/Awesome-Table-Recognition" ["e"=1]
"breezedeus/CnSTD" -> "MaliParag/TFD-ICDAR2019" ["e"=1]
"breezedeus/CnSTD" -> "fh2019ustc/DocTr-Plus" ["e"=1]
"breezedeus/CnSTD" -> "JiaquanYe/TableMASTER-mmocr" ["e"=1]
"breezedeus/CnSTD" -> "AlibabaResearch/AdvancedLiterateMachinery" ["e"=1]
"JaidedAI/EasyOCR" -> "PaddlePaddle/PaddleOCR" ["e"=1]
"JaidedAI/EasyOCR" -> "tesseract-ocr/tesseract" ["e"=1]
"JaidedAI/EasyOCR" -> "DayBreak-u/chineseocr_lite"
"JaidedAI/EasyOCR" -> "clovaai/deep-text-recognition-benchmark"
"JaidedAI/EasyOCR" -> "chineseocr/chineseocr"
"JaidedAI/EasyOCR" -> "clovaai/CRAFT-pytorch"
"JaidedAI/EasyOCR" -> "VikParuchuri/surya" ["e"=1]
"JaidedAI/EasyOCR" -> "facebookresearch/detectron2" ["e"=1]
"JaidedAI/EasyOCR" -> "HumanSignal/label-studio" ["e"=1]
"JaidedAI/EasyOCR" -> "open-mmlab/mmocr"
"JaidedAI/EasyOCR" -> "Belval/TextRecognitionDataGenerator"
"JaidedAI/EasyOCR" -> "ocrmypdf/OCRmyPDF" ["e"=1]
"JaidedAI/EasyOCR" -> "ultralytics/yolov5" ["e"=1]
"JaidedAI/EasyOCR" -> "gradio-app/gradio" ["e"=1]
"JaidedAI/EasyOCR" -> "microsoft/unilm" ["e"=1]
"openpaperwork/pyocr" -> "sirfz/tesserocr"
"openpaperwork/pyocr" -> "JinpengLI/deep_ocr"
"openpaperwork/pyocr" -> "ocropus-archive/DUP-ocropy"
"openpaperwork/pyocr" -> "openpaperwork/paperwork" ["e"=1]
"openpaperwork/pyocr" -> "gitanat/simple-ocr-opencv" ["e"=1]
"openpaperwork/pyocr" -> "tmbdev/clstm"
"openpaperwork/pyocr" -> "madmaze/pytesseract" ["e"=1]
"openpaperwork/pyocr" -> "jlsutherland/doc2text"
"openpaperwork/pyocr" -> "tleyden/open-ocr"
"openpaperwork/pyocr" -> "openpaperwork/libpillowfight"
"openpaperwork/pyocr" -> "openpaperwork/pyinsane"
"openpaperwork/pyocr" -> "douban/dpark" ["e"=1]
"openpaperwork/pyocr" -> "WZBSocialScienceCenter/pdf2xml-viewer"
"openpaperwork/pyocr" -> "oyxhust/CNN-LSTM-CTC-text-recognition"
"openpaperwork/pyocr" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"ocropus-archive/DUP-ocropy" -> "tmbdev/clstm"
"ocropus-archive/DUP-ocropy" -> "Calamari-OCR/calamari"
"ocropus-archive/DUP-ocropy" -> "kba/awesome-ocr"
"ocropus-archive/DUP-ocropy" -> "wanghaisheng/awesome-ocr"
"ocropus-archive/DUP-ocropy" -> "da03/Attention-OCR"
"ocropus-archive/DUP-ocropy" -> "bgshih/crnn"
"ocropus-archive/DUP-ocropy" -> "mittagessen/kraken" ["e"=1]
"ocropus-archive/DUP-ocropy" -> "ankush-me/SynthText"
"ocropus-archive/DUP-ocropy" -> "eragonruan/text-detection-ctpn"
"ocropus-archive/DUP-ocropy" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"ocropus-archive/DUP-ocropy" -> "JinpengLI/deep_ocr"
"ocropus-archive/DUP-ocropy" -> "pannous/tensorflow-ocr"
"ocropus-archive/DUP-ocropy" -> "tleyden/open-ocr"
"ocropus-archive/DUP-ocropy" -> "argman/EAST"
"ocropus-archive/DUP-ocropy" -> "tianzhi0549/CTPN"
"HaujetZhao/QuickHand" -> "SAI-24-me/neverWriteByHand"
"HaujetZhao/QuickHand" -> "Gsllchb/Handright"
"HaujetZhao/QuickHand" -> "liuke-wuhan/ZuAnBot" ["e"=1]
"myhub/tr" -> "alisen39/TrWebOCR"
"myhub/tr" -> "chineseocr/darknet-ocr"
"myhub/tr" -> "chineseocr/chineseocr"
"myhub/tr" -> "YCG09/chinese_ocr"
"myhub/tr" -> "xiaofengShi/CHINESE-OCR"
"myhub/tr" -> "DayBreak-u/chineseocr_lite"
"myhub/tr" -> "WenmuZhou/PytorchOCR"
"myhub/tr" -> "chineseocr/table-ocr" ["e"=1]
"myhub/tr" -> "WenmuZhou/OCR_DataSet"
"myhub/tr" -> "Mingtzge/2019-CCF-BDCI-OCR-MCZJ-OCR-IdentificationIDElement" ["e"=1]
"myhub/tr" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"myhub/tr" -> "AstarLight/Lets_OCR"
"myhub/tr" -> "BADBADBADBOY/pytorchOCR"
"myhub/tr" -> "tiantian91091317/OCR-Corrector" ["e"=1]
"myhub/tr" -> "breezedeus/CnOCR"
"MhLiao/MaskTextSpotterV3" -> "MhLiao/MaskTextSpotter"
"MhLiao/MaskTextSpotterV3" -> "Yuliang-Liu/bezier_curve_text_spotting"
"MhLiao/MaskTextSpotterV3" -> "MhLiao/DB"
"MhLiao/MaskTextSpotterV3" -> "whai362/pan_pp.pytorch"
"MhLiao/MaskTextSpotterV3" -> "HCIILAB/Scene-Text-Recognition"
"MhLiao/MaskTextSpotterV3" -> "Wang-Tianwei/Decoupled-attention-network"
"MhLiao/MaskTextSpotterV3" -> "msight-tech/research-charnet"
"MhLiao/MaskTextSpotterV3" -> "whai362/PSENet"
"MhLiao/MaskTextSpotterV3" -> "ayumiymk/aster.pytorch"
"MhLiao/MaskTextSpotterV3" -> "Megvii-CSG/MegReader"
"MhLiao/MaskTextSpotterV3" -> "jiangxiluning/FOTS.PyTorch"
"MhLiao/MaskTextSpotterV3" -> "WenmuZhou/DBNet.pytorch"
"MhLiao/MaskTextSpotterV3" -> "WenmuZhou/PAN.pytorch"
"MhLiao/MaskTextSpotterV3" -> "mxin262/SwinTextSpotter"
"MhLiao/MaskTextSpotterV3" -> "chenjun2hao/SRN.pytorch"
"DayBreak-u/chineseocr_lite" -> "chineseocr/chineseocr"
"DayBreak-u/chineseocr_lite" -> "alisen39/TrWebOCR"
"DayBreak-u/chineseocr_lite" -> "PaddlePaddle/PaddleOCR" ["e"=1]
"DayBreak-u/chineseocr_lite" -> "xiaofengShi/CHINESE-OCR"
"DayBreak-u/chineseocr_lite" -> "YCG09/chinese_ocr"
"DayBreak-u/chineseocr_lite" -> "Tencent/ncnn" ["e"=1]
"DayBreak-u/chineseocr_lite" -> "MhLiao/DB"
"DayBreak-u/chineseocr_lite" -> "JaidedAI/EasyOCR"
"DayBreak-u/chineseocr_lite" -> "breezedeus/CnOCR"
"DayBreak-u/chineseocr_lite" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"DayBreak-u/chineseocr_lite" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"DayBreak-u/chineseocr_lite" -> "RangiLyu/nanodet" ["e"=1]
"DayBreak-u/chineseocr_lite" -> "ShiqiYu/libfacedetection" ["e"=1]
"DayBreak-u/chineseocr_lite" -> "Tencent/TNN" ["e"=1]
"DayBreak-u/chineseocr_lite" -> "alibaba/MNN" ["e"=1]
"alisen39/TrWebOCR" -> "myhub/tr"
"alisen39/TrWebOCR" -> "DayBreak-u/chineseocr_lite"
"alisen39/TrWebOCR" -> "chineseocr/chineseocr"
"alisen39/TrWebOCR" -> "RapidAI/RapidOCR" ["e"=1]
"alisen39/TrWebOCR" -> "xiaofengShi/CHINESE-OCR"
"alisen39/TrWebOCR" -> "breezedeus/CnOCR"
"alisen39/TrWebOCR" -> "YCG09/chinese_ocr"
"alisen39/TrWebOCR" -> "WenmuZhou/PytorchOCR"
"alisen39/TrWebOCR" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"alisen39/TrWebOCR" -> "chineseocr/darknet-ocr"
"alisen39/TrWebOCR" -> "guanshuicheng/invoice"
"alisen39/TrWebOCR" -> "hiroi-sora/PaddleOCR-json" ["e"=1]
"alisen39/TrWebOCR" -> "miaomiaosoft/PandaOCR" ["e"=1]
"alisen39/TrWebOCR" -> "sml2h3/ddddocr" ["e"=1]
"alisen39/TrWebOCR" -> "kerlomz/captcha_trainer" ["e"=1]
"IntuitionMachines/OrigamiNet" -> "Wang-Tianwei/Implicit-feature-alignment"
"IntuitionMachines/OrigamiNet" -> "amzn/convolutional-handwriting-gan"
"IntuitionMachines/OrigamiNet" -> "FactoDeepLearning/VerticalAttentionOCR"
"IntuitionMachines/OrigamiNet" -> "FactoDeepLearning/SPAN"
"IntuitionMachines/OrigamiNet" -> "Chuhanxx/FontAdaptor"
"guanshuicheng/invoice" -> "chineseocr/chineseocr"
"guanshuicheng/invoice" -> "xuwenxue000/PJ_PREDICT_IMG"
"guanshuicheng/invoice" -> "sanluan/einvoice"
"guanshuicheng/invoice" -> "384863451/invoice_ocr"
"guanshuicheng/invoice" -> "chineseocr/table-ocr" ["e"=1]
"guanshuicheng/invoice" -> "huanglu20124/invoice"
"guanshuicheng/invoice" -> "chineseocr/darknet-ocr"
"guanshuicheng/invoice" -> "xiaofengShi/CHINESE-OCR"
"guanshuicheng/invoice" -> "Mingtzge/2019-CCF-BDCI-OCR-MCZJ-OCR-IdentificationIDElement" ["e"=1]
"guanshuicheng/invoice" -> "yooongchun/Invoice2Excel"
"guanshuicheng/invoice" -> "DayBreak-u/chineseocr_lite"
"guanshuicheng/invoice" -> "alisen39/TrWebOCR"
"guanshuicheng/invoice" -> "BB-fat/InvoiceSpider"
"guanshuicheng/invoice" -> "whai362/PSENet"
"guanshuicheng/invoice" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"chineseocr/darknet-ocr" -> "chineseocr/chineseocr"
"chineseocr/darknet-ocr" -> "chineseocr/table-ocr" ["e"=1]
"chineseocr/darknet-ocr" -> "xiaofengShi/CHINESE-OCR"
"chineseocr/darknet-ocr" -> "YCG09/chinese_ocr"
"chineseocr/darknet-ocr" -> "WenmuZhou/PSENet.pytorch"
"chineseocr/darknet-ocr" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"chineseocr/darknet-ocr" -> "WenmuZhou/OCR_DataSet"
"chineseocr/darknet-ocr" -> "Mingtzge/2019-CCF-BDCI-OCR-MCZJ-OCR-IdentificationIDElement" ["e"=1]
"chineseocr/darknet-ocr" -> "senlinuc/caffe_ocr"
"chineseocr/darknet-ocr" -> "myhub/tr"
"chineseocr/darknet-ocr" -> "Sanster/text_renderer"
"chineseocr/darknet-ocr" -> "eragonruan/text-detection-ctpn"
"chineseocr/darknet-ocr" -> "AstarLight/CPS-OCR-Engine"
"chineseocr/darknet-ocr" -> "zhang0jhon/AttentionOCR"
"chineseocr/darknet-ocr" -> "meijieru/crnn.pytorch"
"Media-Smart/vedastr" -> "chenjun2hao/SRN.pytorch"
"Media-Smart/vedastr" -> "whai362/pan_pp.pytorch"
"Media-Smart/vedastr" -> "Wang-Tianwei/Decoupled-attention-network"
"Media-Smart/vedastr" -> "Pay20Y/SEED"
"Media-Smart/vedastr" -> "clovaai/SATRN"
"Media-Smart/vedastr" -> "ayumiymk/aster.pytorch"
"Media-Smart/vedastr" -> "FangShancheng/ABINet"
"Media-Smart/vedastr" -> "wenwenyu/MASTER-pytorch" ["e"=1]
"Media-Smart/vedastr" -> "HCIILAB/Scene-Text-Recognition"
"Media-Smart/vedastr" -> "RubanSeven/Text-Image-Augmentation-python"
"Media-Smart/vedastr" -> "Media-Smart/volksdep" ["e"=1]
"Media-Smart/vedastr" -> "MhLiao/MaskTextSpotterV3"
"Media-Smart/vedastr" -> "opconty/Transformer_STR"
"Media-Smart/vedastr" -> "Yuliang-Liu/Box_Discretization_Network"
"Media-Smart/vedastr" -> "backtime92/CRAFT-Reimplementation"
"tmbdev/clstm" -> "ocropus-archive/DUP-ocropy"
"tmbdev/clstm" -> "junhyukoh/caffe-lstm" ["e"=1]
"tmbdev/clstm" -> "pannous/caffe-ocr"
"tmbdev/clstm" -> "rakeshvar/rnn_ctc" ["e"=1]
"tmbdev/clstm" -> "tianzhi0549/CTPN"
"tmbdev/clstm" -> "MichalBusta/FASText"
"tmbdev/clstm" -> "da03/Attention-OCR"
"tmbdev/clstm" -> "amaas/stanford-ctc" ["e"=1]
"tmbdev/clstm" -> "wanghaisheng/awesome-ocr"
"tmbdev/clstm" -> "dophist/kaldi-lstm" ["e"=1]
"tmbdev/clstm" -> "MhLiao/TextBoxes"
"tmbdev/clstm" -> "bgshih/crnn"
"tmbdev/clstm" -> "pannous/tensorflow-ocr"
"tmbdev/clstm" -> "aperrault/DetectText"
"tmbdev/clstm" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"EuphoriaYan/zi2zi-pytorch" -> "ecnuycxie/DG-Font"
"EuphoriaYan/zi2zi-pytorch" -> "yunchenlo/Font2Font" ["e"=1]
"EuphoriaYan/zi2zi-pytorch" -> "clovaai/fewshot-font-generation"
"EuphoriaYan/zi2zi-pytorch" -> "clovaai/mxfont"
"EuphoriaYan/zi2zi-pytorch" -> "JeanWU/CalliGAN"
"EuphoriaYan/zi2zi-pytorch" -> "Arctanxy/W-Net-PyTorch"
"EuphoriaYan/zi2zi-pytorch" -> "Hxyz-123/Font-diff"
"EuphoriaYan/zi2zi-pytorch" -> "wangchi95/CF-Font"
"EuphoriaYan/zi2zi-pytorch" -> "tlc121/FsFont"
"EuphoriaYan/zi2zi-pytorch" -> "kaonashi-tyc/zi2zi" ["e"=1]
"EuphoriaYan/zi2zi-pytorch" -> "changebo/HCCG-CycleGAN"
"EuphoriaYan/zi2zi-pytorch" -> "clovaai/lffont"
"EuphoriaYan/zi2zi-pytorch" -> "ZC119/Handwritten-CycleGAN"
"EuphoriaYan/zi2zi-pytorch" -> "yeungchenwa/FontDiffuser"
"EuphoriaYan/zi2zi-pytorch" -> "ChiuMing-Neko/ChiuKongGothic" ["e"=1]
"Arctanxy/W-Net-PyTorch" -> "falconjhc/W-Net"
"Arctanxy/W-Net-PyTorch" -> "clovaai/mxfont"
"Arctanxy/W-Net-PyTorch" -> "lsflyt-pku/FontRL"
"clovaai/lffont" -> "clovaai/dmfont"
"clovaai/lffont" -> "clovaai/mxfont"
"clovaai/lffont" -> "clovaai/fewshot-font-generation"
"clovaai/lffont" -> "tlc121/FsFont"
"clovaai/lffont" -> "ecnuycxie/DG-Font"
"clovaai/lffont" -> "Hxyz-123/Font-diff"
"clovaai/lffont" -> "kyxscut/CG-GAN"
"clovaai/lffont" -> "wangchi95/CF-Font"
"clovaai/lffont" -> "ammar-deep/SKFont"
"clovaai/lffont" -> "IShengFang/TypographyResearchCollection"
"clovaai/lffont" -> "yizhiwang96/deepvecfont"
"Nikolai10/scrabble-gan" -> "amzn/convolutional-handwriting-gan"
"WenmuZhou/DBNet.pytorch" -> "MhLiao/DB"
"WenmuZhou/DBNet.pytorch" -> "WenmuZhou/PAN.pytorch"
"WenmuZhou/DBNet.pytorch" -> "whai362/PSENet"
"WenmuZhou/DBNet.pytorch" -> "WenmuZhou/OCR_DataSet"
"WenmuZhou/DBNet.pytorch" -> "BADBADBADBOY/pytorchOCR"
"WenmuZhou/DBNet.pytorch" -> "Sanster/text_renderer"
"WenmuZhou/DBNet.pytorch" -> "WenmuZhou/PSENet.pytorch"
"WenmuZhou/DBNet.pytorch" -> "whai362/pan_pp.pytorch"
"WenmuZhou/DBNet.pytorch" -> "WenmuZhou/PytorchOCR"
"WenmuZhou/DBNet.pytorch" -> "ayumiymk/aster.pytorch"
"WenmuZhou/DBNet.pytorch" -> "MhLiao/MaskTextSpotterV3"
"WenmuZhou/DBNet.pytorch" -> "backtime92/CRAFT-Reimplementation"
"WenmuZhou/DBNet.pytorch" -> "oh-my-ocr/text_renderer"
"WenmuZhou/DBNet.pytorch" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"WenmuZhou/DBNet.pytorch" -> "HCIILAB/Scene-Text-Recognition"
"WenmuZhou/PytorchOCR" -> "WenmuZhou/OCR_DataSet"
"WenmuZhou/PytorchOCR" -> "frotms/PaddleOCR2Pytorch"
"WenmuZhou/PytorchOCR" -> "BADBADBADBOY/pytorchOCR"
"WenmuZhou/PytorchOCR" -> "WenmuZhou/DBNet.pytorch"
"WenmuZhou/PytorchOCR" -> "MhLiao/DB"
"WenmuZhou/PytorchOCR" -> "Sanster/text_renderer"
"WenmuZhou/PytorchOCR" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"WenmuZhou/PytorchOCR" -> "meijieru/crnn.pytorch"
"WenmuZhou/PytorchOCR" -> "oh-my-ocr/text_renderer"
"WenmuZhou/PytorchOCR" -> "tiantian91091317/OCR-Corrector" ["e"=1]
"WenmuZhou/PytorchOCR" -> "WenmuZhou/PAN.pytorch"
"WenmuZhou/PytorchOCR" -> "whai362/PSENet"
"WenmuZhou/PytorchOCR" -> "Media-Smart/vedastr"
"WenmuZhou/PytorchOCR" -> "clovaai/deep-text-recognition-benchmark"
"WenmuZhou/PytorchOCR" -> "Belval/TextRecognitionDataGenerator"
"MhLiao/DB" -> "WenmuZhou/DBNet.pytorch"
"MhLiao/DB" -> "whai362/PSENet"
"MhLiao/DB" -> "clovaai/deep-text-recognition-benchmark"
"MhLiao/DB" -> "clovaai/CRAFT-pytorch"
"MhLiao/DB" -> "Sanster/text_renderer"
"MhLiao/DB" -> "MhLiao/MaskTextSpotterV3"
"MhLiao/DB" -> "ankush-me/SynthText"
"MhLiao/DB" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"MhLiao/DB" -> "WenmuZhou/OCR_DataSet"
"MhLiao/DB" -> "zhang0jhon/AttentionOCR"
"MhLiao/DB" -> "msight-tech/research-charnet"
"MhLiao/DB" -> "meijieru/crnn.pytorch"
"MhLiao/DB" -> "Belval/TextRecognitionDataGenerator"
"MhLiao/DB" -> "HCIILAB/Scene-Text-Recognition"
"MhLiao/DB" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"Jyouhou/UnrealText" -> "MhLiao/SynthText3D"
"Jyouhou/UnrealText" -> "Canjie-Luo/Text-Image-Augmentation"
"Jyouhou/UnrealText" -> "Yuliang-Liu/Box_Discretization_Network"
"Jyouhou/UnrealText" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"Jyouhou/UnrealText" -> "RubanSeven/Text-Image-Augmentation-python"
"Jyouhou/UnrealText" -> "summerlvsong/Aggregation-Cross-Entropy"
"Jyouhou/UnrealText" -> "youdao-ai/SRNet-Datagen"
"Jyouhou/UnrealText" -> "Yuliang-Liu/bezier_curve_text_spotting"
"Jyouhou/UnrealText" -> "Wang-Tianwei/Decoupled-attention-network"
"Jyouhou/UnrealText" -> "Pay20Y/SEED"
"Jyouhou/UnrealText" -> "GXYM/DRRG"
"Jyouhou/UnrealText" -> "Megvii-CSG/MegReader"
"Jyouhou/UnrealText" -> "MhLiao/MaskTextSpotterV3"
"Jyouhou/UnrealText" -> "youdao-ai/SRNet"
"Jyouhou/UnrealText" -> "MhLiao/MaskTextSpotter"
"WenmuZhou/OCR_DataSet" -> "WenmuZhou/PytorchOCR"
"WenmuZhou/OCR_DataSet" -> "WenmuZhou/DBNet.pytorch"
"WenmuZhou/OCR_DataSet" -> "TianzhongSong/awesome-SynthText"
"WenmuZhou/OCR_DataSet" -> "MhLiao/DB"
"WenmuZhou/OCR_DataSet" -> "BADBADBADBOY/pytorchOCR"
"WenmuZhou/OCR_DataSet" -> "Sanster/text_renderer"
"WenmuZhou/OCR_DataSet" -> "oh-my-ocr/text_renderer"
"WenmuZhou/OCR_DataSet" -> "HCIILAB/Scene-Text-Recognition"
"WenmuZhou/OCR_DataSet" -> "zcswdt/OCR_ICDAR_label_revise"
"WenmuZhou/OCR_DataSet" -> "WenmuZhou/PAN.pytorch"
"WenmuZhou/OCR_DataSet" -> "MhLiao/MaskTextSpotterV3"
"WenmuZhou/OCR_DataSet" -> "tiantian91091317/OCR-Corrector" ["e"=1]
"WenmuZhou/OCR_DataSet" -> "Canjie-Luo/Text-Image-Augmentation"
"WenmuZhou/OCR_DataSet" -> "whai362/PSENet"
"WenmuZhou/OCR_DataSet" -> "tommyMessi/crnn_ctc-centerloss" ["e"=1]
"opconty/Transformer_STR" -> "fengxinjie/Transformer-OCR"
"opconty/Transformer_STR" -> "chenjun2hao/Bert_OCR.pytorch"
"opconty/Transformer_STR" -> "Pay20Y/SEED"
"opconty/Transformer_STR" -> "Wang-Tianwei/Decoupled-attention-network"
"opconty/Transformer_STR" -> "clovaai/SATRN"
"opconty/Transformer_STR" -> "Canjie-Luo/Text-Image-Augmentation"
"opconty/Transformer_STR" -> "Chuhanxx/FontAdaptor"
"opconty/Transformer_STR" -> "chenjun2hao/SRN.pytorch"
"opconty/Transformer_STR" -> "ku21fan/STR-Fewer-Labels"
"opconty/Transformer_STR" -> "RubanSeven/Text-Image-Augmentation-python"
"opconty/Transformer_STR" -> "roatienza/deep-text-recognition-benchmark"
"opconty/Transformer_STR" -> "LARS-research/AutoSTR"
"opconty/Transformer_STR" -> "summerlvsong/Aggregation-Cross-Entropy"
"opconty/Transformer_STR" -> "Media-Smart/vedastr"
"opconty/Transformer_STR" -> "Megvii-CSG/MegReader"
"stober/gmm" -> "wrayzheng/gmm-em-clustering"
"stober/gmm" -> "ldeecke/gmm-torch"
"stober/gmm" -> "junlulocky/PyBGMM"
"yizt/crnn.pytorch" -> "BADBADBADBOY/pytorchOCR"
"yizt/crnn.pytorch" -> "Rid7/Table-OCR" ["e"=1]
"yizt/crnn.pytorch" -> "Yuliang-Liu/bezier_curve_text_spotting"
"yizt/crnn.pytorch" -> "liuheng92/OCR_EVALUATION"
"yizt/crnn.pytorch" -> "tommyMessi/crnn_ctc-centerloss" ["e"=1]
"yizt/crnn.pytorch" -> "BADBADBADBOY/DBnet-lite.pytorch"
"yizt/crnn.pytorch" -> "BADBADBADBOY/pytorch.ctpn"
"yizt/crnn.pytorch" -> "WenmuZhou/OCR_DataSet"
"yizt/crnn.pytorch" -> "Pay20Y/SEED"
"yizt/crnn.pytorch" -> "Holmeyoung/crnn-pytorch"
"yizt/crnn.pytorch" -> "bai-shang/crnn_seq2seq_ocr_pytorch"
"yizt/crnn.pytorch" -> "Canjie-Luo/Text-Image-Augmentation"
"yizt/crnn.pytorch" -> "MhLiao/MaskTextSpotterV3"
"yizt/crnn.pytorch" -> "lvpengyuan/corner"
"yizt/crnn.pytorch" -> "Wang-Tianwei/Decoupled-attention-network"
"zhang0jhon/AttentionOCR" -> "Yuliang-Liu/bezier_curve_text_spotting"
"zhang0jhon/AttentionOCR" -> "MhLiao/DB"
"zhang0jhon/AttentionOCR" -> "msight-tech/research-charnet"
"zhang0jhon/AttentionOCR" -> "jiangxiluning/FOTS.PyTorch"
"zhang0jhon/AttentionOCR" -> "whai362/PSENet"
"zhang0jhon/AttentionOCR" -> "chenjun2hao/Attention_ocr.pytorch"
"zhang0jhon/AttentionOCR" -> "Wang-Tianwei/Decoupled-attention-network"
"zhang0jhon/AttentionOCR" -> "Canjie-Luo/MORAN_v2"
"zhang0jhon/AttentionOCR" -> "ayumiymk/aster.pytorch"
"zhang0jhon/AttentionOCR" -> "MhLiao/MaskTextSpotter"
"zhang0jhon/AttentionOCR" -> "huoyijie/AdvancedEAST"
"zhang0jhon/AttentionOCR" -> "MhLiao/MaskTextSpotterV3"
"zhang0jhon/AttentionOCR" -> "Sanster/text_renderer"
"zhang0jhon/AttentionOCR" -> "HCIILAB/Scene-Text-Recognition"
"zhang0jhon/AttentionOCR" -> "Jyouhou/SceneTextPapers"
"HCIILAB/SCUT-EnsText" -> "neouyghur/One-stage-Mask-based-Scene-Text-Eraser"
"HCIILAB/SCUT-EnsText" -> "lcy0604/EraseNet"
"HCIILAB/SCUT-EnsText" -> "HCIILAB/Scene-Text-Removal"
"HCIILAB/SCUT-EnsText" -> "wangyuxin87/PERT"
"HCIILAB/SCUT-EnsText" -> "wcq19941215/SceneTextRemoval"
"HCIILAB/SCUT-EnsText" -> "lcy0604/CTRNet"
"amzn/convolutional-handwriting-gan" -> "IntuitionMachines/OrigamiNet"
"amzn/convolutional-handwriting-gan" -> "Nikolai10/scrabble-gan"
"amzn/convolutional-handwriting-gan" -> "omni-us/research-GANwriting"
"amzn/convolutional-handwriting-gan" -> "herobd/handwriting_line_generation"
"amzn/convolutional-handwriting-gan" -> "RubanSeven/Text-Image-Augmentation-python"
"amzn/convolutional-handwriting-gan" -> "arshjot/ScrabbleGAN"
"amzn/convolutional-handwriting-gan" -> "Grzego/handwriting-generation"
"amzn/convolutional-handwriting-gan" -> "Canjie-Luo/Text-Image-Augmentation"
"amzn/convolutional-handwriting-gan" -> "jpuigcerver/PyLaia" ["e"=1]
"amzn/convolutional-handwriting-gan" -> "brownvc/decoupled-style-descriptors"
"amzn/convolutional-handwriting-gan" -> "FactoDeepLearning/VerticalAttentionOCR"
"amzn/convolutional-handwriting-gan" -> "ankanbhunia/Handwriting-Transformers"
"amzn/convolutional-handwriting-gan" -> "swechhasingh/Handwriting-synthesis"
"lcy0604/EraseNet" -> "neouyghur/One-stage-Mask-based-Scene-Text-Eraser"
"lcy0604/EraseNet" -> "HCIILAB/SCUT-EnsText"
"lcy0604/EraseNet" -> "lcy0604/CTRNet"
"lcy0604/EraseNet" -> "HCIILAB/Scene-Text-Removal"
"lcy0604/EraseNet" -> "tzm-tora/Stroke-Based-Scene-Text-Erasing"
"lcy0604/EraseNet" -> "wcq19941215/SceneTextRemoval"
"lcy0604/EraseNet" -> "naver/garnet"
"lcy0604/EraseNet" -> "wangyuxin87/PERT"
"lcy0604/EraseNet" -> "SHI-Labs/Rethinking-Text-Segmentation"
"Megvii-CSG/MegReader" -> "summerlvsong/Aggregation-Cross-Entropy"
"Megvii-CSG/MegReader" -> "Wang-Tianwei/Decoupled-attention-network"
"Megvii-CSG/MegReader" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"Megvii-CSG/MegReader" -> "Canjie-Luo/Text-Image-Augmentation"
"Megvii-CSG/MegReader" -> "msight-tech/research-charnet"
"Megvii-CSG/MegReader" -> "lvpengyuan/corner"
"Megvii-CSG/MegReader" -> "Jyouhou/SceneTextPapers"
"Megvii-CSG/MegReader" -> "HCIILAB/Scene-Text-Recognition"
"Megvii-CSG/MegReader" -> "Yuliang-Liu/Box_Discretization_Network"
"Megvii-CSG/MegReader" -> "Canjie-Luo/MORAN_v2"
"Megvii-CSG/MegReader" -> "MichalBusta/E2E-MLT"
"Megvii-CSG/MegReader" -> "RubanSeven/Text-Image-Augmentation-python"
"Megvii-CSG/MegReader" -> "ayumiymk/aster.pytorch"
"Megvii-CSG/MegReader" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"Megvii-CSG/MegReader" -> "MhLiao/MaskTextSpotterV3"
"ying09/TextFuseNet" -> "whai362/pan_pp.pytorch"
"ying09/TextFuseNet" -> "msight-tech/research-charnet"
"ying09/TextFuseNet" -> "MhLiao/MaskTextSpotterV3"
"ying09/TextFuseNet" -> "adeline-cs/GTR"
"ying09/TextFuseNet" -> "ymy-k/DPText-DETR"
"ying09/TextFuseNet" -> "HCIILAB/Scene-Text-Detection"
"ying09/TextFuseNet" -> "MhLiao/DB"
"ying09/TextFuseNet" -> "WenmuZhou/DBNet.pytorch"
"ying09/TextFuseNet" -> "wangyuxin87/ContourNet"
"ying09/TextFuseNet" -> "HCIILAB/Scene-Text-Recognition"
"ying09/TextFuseNet" -> "FangShancheng/ABINet"
"ying09/TextFuseNet" -> "backtime92/CRAFT-Reimplementation"
"ying09/TextFuseNet" -> "SakuraRiven/EAST"
"ying09/TextFuseNet" -> "Yuliang-Liu/Box_Discretization_Network"
"ying09/TextFuseNet" -> "jjprincess/PMTD"
"HCIILAB/SCUT-HCCDoc_Dataset_Release" -> "HCIILAB/SCUT-EPT_Dataset_Release"
"HCIILAB/SCUT-HCCDoc_Dataset_Release" -> "shannanyinxiang/PageNet"
"ybur-yug/python_ocr_tutorial" -> "guitarmind/tesseract-web-service"
"Yuliang-Liu/bezier_curve_text_spotting" -> "MhLiao/MaskTextSpotterV3"
"Yuliang-Liu/bezier_curve_text_spotting" -> "Wang-Tianwei/Decoupled-attention-network"
"Yuliang-Liu/bezier_curve_text_spotting" -> "MhLiao/MaskTextSpotter"
"Yuliang-Liu/bezier_curve_text_spotting" -> "Yuliang-Liu/Box_Discretization_Network"
"Yuliang-Liu/bezier_curve_text_spotting" -> "msight-tech/research-charnet"
"Yuliang-Liu/bezier_curve_text_spotting" -> "zhang0jhon/AttentionOCR"
"Yuliang-Liu/bezier_curve_text_spotting" -> "WenmuZhou/PAN.pytorch"
"Yuliang-Liu/bezier_curve_text_spotting" -> "chenjun2hao/SRN.pytorch"
"Yuliang-Liu/bezier_curve_text_spotting" -> "HCIILAB/Scene-Text-Recognition"
"Yuliang-Liu/bezier_curve_text_spotting" -> "whai362/pan_pp.pytorch"
"Yuliang-Liu/bezier_curve_text_spotting" -> "ayumiymk/aster.pytorch"
"Yuliang-Liu/bezier_curve_text_spotting" -> "wangyuxin87/ContourNet"
"Yuliang-Liu/bezier_curve_text_spotting" -> "GXYM/DRRG"
"Yuliang-Liu/bezier_curve_text_spotting" -> "Canjie-Luo/Text-Image-Augmentation"
"Yuliang-Liu/bezier_curve_text_spotting" -> "jiangxiluning/FOTS.PyTorch"
"msight-tech/research-charnet" -> "backtime92/CRAFT-Reimplementation"
"msight-tech/research-charnet" -> "MhLiao/MaskTextSpotter"
"msight-tech/research-charnet" -> "Megvii-CSG/MegReader"
"msight-tech/research-charnet" -> "Yuliang-Liu/bezier_curve_text_spotting"
"msight-tech/research-charnet" -> "whai362/PSENet"
"msight-tech/research-charnet" -> "HCIILAB/Scene-Text-Recognition"
"msight-tech/research-charnet" -> "MhLiao/DB"
"msight-tech/research-charnet" -> "jiangxiluning/FOTS.PyTorch"
"msight-tech/research-charnet" -> "HCIILAB/Scene-Text-Detection"
"msight-tech/research-charnet" -> "Canjie-Luo/MORAN_v2"
"msight-tech/research-charnet" -> "MhLiao/MaskTextSpotterV3"
"msight-tech/research-charnet" -> "zhang0jhon/AttentionOCR"
"msight-tech/research-charnet" -> "Wang-Tianwei/Decoupled-attention-network"
"msight-tech/research-charnet" -> "bgshih/aster"
"msight-tech/research-charnet" -> "WenmuZhou/PAN.pytorch"
"omni-us/research-GANwriting" -> "omni-us/research-WriterAdaptation-HTR"
"omni-us/research-GANwriting" -> "liviniuk/GANwriting"
"BboyHanat/TextGenerator" -> "bityigoss/mtl-text-recognition"
"BboyHanat/TextGenerator" -> "tommyMessi/crnn_ctc-centerloss" ["e"=1]
"BboyHanat/TextGenerator" -> "TianzhongSong/awesome-SynthText"
"BboyHanat/TextGenerator" -> "Wovchena/text-detection-fots.pytorch"
"robinreni96/Font_Recognition-DeepFont" -> "clovaai/lffont"
"hzli-ucas/CCF-OCR" -> "linglanfeng/CCF2019-OCR" ["e"=1]
"pluto0x0/BullshitGenerator" -> "pluto0x0/Bullshit-WebUI"
"faustomorales/keras-ocr" -> "clovaai/CRAFT-pytorch"
"faustomorales/keras-ocr" -> "janzd/CRNN"
"faustomorales/keras-ocr" -> "clovaai/deep-text-recognition-benchmark"
"faustomorales/keras-ocr" -> "Belval/TextRecognitionDataGenerator"
"faustomorales/keras-ocr" -> "RubanSeven/CRAFT_keras"
"faustomorales/keras-ocr" -> "backtime92/CRAFT-Reimplementation"
"faustomorales/keras-ocr" -> "MhLiao/DB"
"faustomorales/keras-ocr" -> "Sanster/text_renderer"
"faustomorales/keras-ocr" -> "zhang0jhon/AttentionOCR"
"faustomorales/keras-ocr" -> "argman/EAST"
"faustomorales/keras-ocr" -> "tulasiram58827/ocr_tflite"
"faustomorales/keras-ocr" -> "open-mmlab/mmocr"
"faustomorales/keras-ocr" -> "ankush-me/SynthText"
"faustomorales/keras-ocr" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"faustomorales/keras-ocr" -> "msight-tech/research-charnet"
"clovaai/dmfont" -> "clovaai/lffont"
"clovaai/dmfont" -> "clovaai/fewshot-font-generation"
"clovaai/dmfont" -> "clovaai/mxfont"
"clovaai/dmfont" -> "ammar-deep/SKFont"
"zcswdt/OCR_ICDAR_label_revise" -> "WenmuZhou/OCR_DataSet"
"zcswdt/OCR_ICDAR_label_revise" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"zcswdt/OCR_ICDAR_label_revise" -> "whai362/pan_pp.pytorch"
"zcswdt/OCR_ICDAR_label_revise" -> "FudanVI/benchmarking-chinese-text-recognition"
"zcswdt/OCR_ICDAR_label_revise" -> "TianzhongSong/awesome-SynthText"
"zcswdt/OCR_ICDAR_label_revise" -> "MhLiao/MaskTextSpotterV3"
"zcswdt/OCR_ICDAR_label_revise" -> "mxin262/SwinTextSpotter"
"zcswdt/OCR_ICDAR_label_revise" -> "shannanyinxiang/SPTS"
"zcswdt/OCR_ICDAR_label_revise" -> "WenmuZhou/DBNet.pytorch"
"zcswdt/OCR_ICDAR_label_revise" -> "wenwenyu/MASTER-pytorch" ["e"=1]
"zcswdt/OCR_ICDAR_label_revise" -> "wenwenyu/TCM"
"zcswdt/OCR_ICDAR_label_revise" -> "zcswdt/Color_OCR_image_generator" ["e"=1]
"zcswdt/OCR_ICDAR_label_revise" -> "BADBADBADBOY/pytorchOCR"
"zcswdt/OCR_ICDAR_label_revise" -> "HCIILAB/Scene-Text-Recognition"
"zcswdt/OCR_ICDAR_label_revise" -> "FangShancheng/ABINet"
"SAI-24-me/neverWriteByHand" -> "HaujetZhao/QuickHand"
"GXYM/TextPMs" -> "GXYM/KPN"
"GXYM/TextPMs" -> "GXYM/TextBPN"
"GXYM/TextPMs" -> "GXYM/TextBPN-Plus-Plus"
"GXYM/TextPMs" -> "GXYM/GloRe"
"GXYM/TextPMs" -> "GXYM/Focal-loss"
"GXYM/TextPMs" -> "GXYM/OHEM-loss"
"GXYM/TextPMs" -> "GXYM/GHM_Loss"
"GXYM/TextPMs" -> "GXYM/DRRG"
"felixBrave/ocr_chinese" -> "MachineLP/OCR_Keras"
"felixBrave/ocr_chinese" -> "GlassyWing/text-detection-ocr"
"felixBrave/ocr_chinese" -> "yizt/keras-ctpn"
"felixBrave/ocr_chinese" -> "huoyijie/AdvancedEAST"
"oh-my-ocr/text_renderer" -> "Sanster/text_renderer"
"oh-my-ocr/text_renderer" -> "WenmuZhou/OCR_DataSet"
"oh-my-ocr/text_renderer" -> "Belval/TextRecognitionDataGenerator"
"oh-my-ocr/text_renderer" -> "MhLiao/DB"
"oh-my-ocr/text_renderer" -> "WenmuZhou/DBNet.pytorch"
"oh-my-ocr/text_renderer" -> "ankush-me/SynthText"
"oh-my-ocr/text_renderer" -> "FangShancheng/ABINet"
"oh-my-ocr/text_renderer" -> "hikopensource/DAVAR-Lab-OCR" ["e"=1]
"oh-my-ocr/text_renderer" -> "ayumiymk/aster.pytorch"
"oh-my-ocr/text_renderer" -> "BADBADBADBOY/pytorchOCR"
"oh-my-ocr/text_renderer" -> "clovaai/synthtiger"
"oh-my-ocr/text_renderer" -> "TianzhongSong/awesome-SynthText"
"oh-my-ocr/text_renderer" -> "Jyouhou/UnrealText"
"oh-my-ocr/text_renderer" -> "WenmuZhou/PytorchOCR"
"oh-my-ocr/text_renderer" -> "tommyMessi/crnn_ctc-centerloss" ["e"=1]
"subokita/Robust-Text-Detection" -> "yestinsong/Text-Detection"
"subokita/Robust-Text-Detection" -> "roseperrone/character-detector"
"subokita/Robust-Text-Detection" -> "aperrault/DetectText"
"subokita/Robust-Text-Detection" -> "lluisgomez/text_extraction"
"subokita/Robust-Text-Detection" -> "lluisgomez/TextProposals"
"subokita/Robust-Text-Detection" -> "idiap/mser"
"subokita/Robust-Text-Detection" -> "shiaokai/plex"
"subokita/Robust-Text-Detection" -> "MichalBusta/FASText"
"BADBADBADBOY/pytorchOCR" -> "WenmuZhou/PytorchOCR"
"BADBADBADBOY/pytorchOCR" -> "WenmuZhou/DBNet.pytorch"
"BADBADBADBOY/pytorchOCR" -> "WenmuZhou/OCR_DataSet"
"BADBADBADBOY/pytorchOCR" -> "BADBADBADBOY/DBnet-lite.pytorch"
"BADBADBADBOY/pytorchOCR" -> "tommyMessi/crnn_ctc-centerloss" ["e"=1]
"BADBADBADBOY/pytorchOCR" -> "WenmuZhou/PAN.pytorch"
"BADBADBADBOY/pytorchOCR" -> "MhLiao/DB"
"BADBADBADBOY/pytorchOCR" -> "frotms/PaddleOCR2Pytorch"
"BADBADBADBOY/pytorchOCR" -> "Sanster/text_renderer"
"BADBADBADBOY/pytorchOCR" -> "whai362/pan_pp.pytorch"
"BADBADBADBOY/pytorchOCR" -> "MhLiao/MaskTextSpotterV3"
"BADBADBADBOY/pytorchOCR" -> "WenmuZhou/PSENet.pytorch"
"BADBADBADBOY/pytorchOCR" -> "Wang-Tianwei/Decoupled-attention-network"
"BADBADBADBOY/pytorchOCR" -> "HCIILAB/Scene-Text-Recognition"
"BADBADBADBOY/pytorchOCR" -> "whai362/PSENet"
"pannous/caffe-ocr" -> "pannous/tensorflow-ocr"
"pannous/caffe-ocr" -> "tmbdev/clstm"
"pannous/caffe-ocr" -> "edward-zhu/umaru"
"pannous/caffe-ocr" -> "dlunion/CaffeLSTM-OCR" ["e"=1]
"pannous/caffe-ocr" -> "lluisgomez/TextProposals"
"prasunroy/stefann" -> "youdao-ai/SRNet"
"prasunroy/stefann" -> "UCSB-NLP-Chang/DiffSTE"
"prasunroy/stefann" -> "lksshw/SRNet"
"prasunroy/stefann" -> "qqqyd/MOSTEL"
"prasunroy/stefann" -> "HCIILAB/Scene-Text-Removal"
"prasunroy/stefann" -> "Chuhanxx/FontAdaptor"
"prasunroy/stefann" -> "youdao-ai/SRNet-Datagen"
"prasunroy/stefann" -> "wangyuxin87/R-Net"
"prasunroy/stefann" -> "Jyouhou/UnrealText"
"backtime92/CRAFT-Reimplementation" -> "autonise/CRAFT-Remade"
"backtime92/CRAFT-Reimplementation" -> "RubanSeven/CRAFT_keras"
"backtime92/CRAFT-Reimplementation" -> "msight-tech/research-charnet"
"backtime92/CRAFT-Reimplementation" -> "brooklyn1900/CRAFT_pytorch"
"backtime92/CRAFT-Reimplementation" -> "clovaai/CRAFT-pytorch"
"backtime92/CRAFT-Reimplementation" -> "WenmuZhou/PAN.pytorch"
"backtime92/CRAFT-Reimplementation" -> "lvpengyuan/corner"
"backtime92/CRAFT-Reimplementation" -> "Yuliang-Liu/Box_Discretization_Network"
"backtime92/CRAFT-Reimplementation" -> "MhLiao/DB"
"backtime92/CRAFT-Reimplementation" -> "ayumiymk/aster.pytorch"
"backtime92/CRAFT-Reimplementation" -> "LoveGalaxy/Character-Region-Awareness-for-Text-Detection-"
"backtime92/CRAFT-Reimplementation" -> "WenmuZhou/DBNet.pytorch"
"backtime92/CRAFT-Reimplementation" -> "HCIILAB/Scene-Text-Recognition"
"backtime92/CRAFT-Reimplementation" -> "Wang-Tianwei/Decoupled-attention-network"
"backtime92/CRAFT-Reimplementation" -> "MhLiao/MaskTextSpotter"
"fengxinjie/Transformer-OCR" -> "opconty/Transformer_STR"
"fengxinjie/Transformer-OCR" -> "Wang-Tianwei/Decoupled-attention-network"
"fengxinjie/Transformer-OCR" -> "chenjun2hao/Bert_OCR.pytorch"
"fengxinjie/Transformer-OCR" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"fengxinjie/Transformer-OCR" -> "chenjun2hao/Attention_ocr.pytorch"
"fengxinjie/Transformer-OCR" -> "msight-tech/research-charnet"
"fengxinjie/Transformer-OCR" -> "chenjun2hao/SRN.pytorch"
"fengxinjie/Transformer-OCR" -> "Bartzi/kiss"
"fengxinjie/Transformer-OCR" -> "MauritsBleeker/Bi-STET"
"fengxinjie/Transformer-OCR" -> "HCIILAB/Scene-Text-Recognition"
"fengxinjie/Transformer-OCR" -> "backtime92/CRAFT-Reimplementation"
"fengxinjie/Transformer-OCR" -> "gasparian/CRNN-OCR-lite" ["e"=1]
"fengxinjie/Transformer-OCR" -> "zhang0jhon/AttentionOCR"
"fengxinjie/Transformer-OCR" -> "Canjie-Luo/MORAN_v2"
"fengxinjie/Transformer-OCR" -> "bai-shang/crnn_seq2seq_ocr_pytorch"
"chenjun2hao/SRN.pytorch" -> "Pay20Y/SEED"
"chenjun2hao/SRN.pytorch" -> "FangShancheng/ABINet"
"chenjun2hao/SRN.pytorch" -> "Wang-Tianwei/Decoupled-attention-network"
"chenjun2hao/SRN.pytorch" -> "Media-Smart/vedastr"
"chenjun2hao/SRN.pytorch" -> "Canjie-Luo/Text-Image-Augmentation"
"chenjun2hao/SRN.pytorch" -> "Yuliang-Liu/bezier_curve_text_spotting"
"chenjun2hao/SRN.pytorch" -> "chenjun2hao/Bert_OCR.pytorch"
"chenjun2hao/SRN.pytorch" -> "RubanSeven/Text-Image-Augmentation-python"
"chenjun2hao/SRN.pytorch" -> "RuijieJ/pren"
"chenjun2hao/SRN.pytorch" -> "LARS-research/AutoSTR"
"chenjun2hao/SRN.pytorch" -> "wangyuxin87/VisionLAN"
"chenjun2hao/SRN.pytorch" -> "ku21fan/STR-Fewer-Labels"
"chenjun2hao/SRN.pytorch" -> "opconty/Transformer_STR"
"chenjun2hao/SRN.pytorch" -> "huiyang865/plugnet" ["e"=1]
"chenjun2hao/SRN.pytorch" -> "clovaai/SATRN"
"ShusenTang/FontRNN" -> "ShusenTang/WriteLikeYou"
"ueoo/AGIS-Net" -> "ueoo/Attr2Font"
"ueoo/AGIS-Net" -> "williamyang1991/TET-GAN"
"ueoo/AGIS-Net" -> "ShusenTang/FontRNN"
"ueoo/AGIS-Net" -> "liweileev/FET-GAN"
"ueoo/AGIS-Net" -> "zhyxun/Separating-Style-and-Content-for-Generalized-Style-Transfer"
"ueoo/AGIS-Net" -> "clovaai/lffont"
"ueoo/AGIS-Net" -> "azadis/MC-GAN"
"ueoo/AGIS-Net" -> "mhy12345/Chinese-Character-Style-Transfer"
"youdao-ai/SRNet" -> "youdao-ai/SRNet-Datagen"
"youdao-ai/SRNet" -> "lksshw/SRNet"
"youdao-ai/SRNet" -> "HCIILAB/Scene-Text-Removal"
"youdao-ai/SRNet" -> "prasunroy/stefann"
"youdao-ai/SRNet" -> "qqqyd/MOSTEL"
"youdao-ai/SRNet" -> "UCSB-NLP-Chang/DiffSTE"
"youdao-ai/SRNet" -> "Wang-Tianwei/Decoupled-attention-network"
"youdao-ai/SRNet" -> "Jyouhou/UnrealText"
"youdao-ai/SRNet" -> "Canjie-Luo/Text-Image-Augmentation"
"youdao-ai/SRNet" -> "lcy0604/EraseNet"
"youdao-ai/SRNet" -> "summerlvsong/Aggregation-Cross-Entropy"
"Wang-Tianwei/Decoupled-attention-network" -> "Canjie-Luo/Text-Image-Augmentation"
"Wang-Tianwei/Decoupled-attention-network" -> "Pay20Y/SEED"
"Wang-Tianwei/Decoupled-attention-network" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"Wang-Tianwei/Decoupled-attention-network" -> "summerlvsong/Aggregation-Cross-Entropy"
"Wang-Tianwei/Decoupled-attention-network" -> "Canjie-Luo/MORAN_v2"
"Wang-Tianwei/Decoupled-attention-network" -> "RubanSeven/Text-Image-Augmentation-python"
"Wang-Tianwei/Decoupled-attention-network" -> "ayumiymk/aster.pytorch"
"Wang-Tianwei/Decoupled-attention-network" -> "Megvii-CSG/MegReader"
"Wang-Tianwei/Decoupled-attention-network" -> "Yuliang-Liu/bezier_curve_text_spotting"
"Wang-Tianwei/Decoupled-attention-network" -> "Yuliang-Liu/Box_Discretization_Network"
"Wang-Tianwei/Decoupled-attention-network" -> "chenjun2hao/SRN.pytorch"
"Wang-Tianwei/Decoupled-attention-network" -> "HCIILAB/Scene-Text-Recognition"
"Wang-Tianwei/Decoupled-attention-network" -> "MhLiao/MaskTextSpotter"
"Wang-Tianwei/Decoupled-attention-network" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"Wang-Tianwei/Decoupled-attention-network" -> "opconty/Transformer_STR"
"Bartzi/kiss" -> "yxgong0/DTR"
"Bartzi/kiss" -> "chenjun2hao/Bert_OCR.pytorch"
"Bartzi/kiss" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"Bartzi/kiss" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"Bartzi/kiss" -> "Jyouhou/CurvedSynthText"
"Bartzi/kiss" -> "Wang-Tianwei/Decoupled-attention-network"
"ueoo/Attr2Font" -> "ueoo/AGIS-Net"
"ueoo/Attr2Font" -> "yizhiwang96/deepvecfont"
"ueoo/Attr2Font" -> "ecnuycxie/DG-Font"
"ueoo/Attr2Font" -> "ShusenTang/FontRNN"
"ueoo/Attr2Font" -> "liweileev/FET-GAN"
"ueoo/Attr2Font" -> "ShusenTang/WriteLikeYou"
"ueoo/Attr2Font" -> "clovaai/lffont"
"ueoo/Attr2Font" -> "clovaai/mxfont"
"ueoo/Attr2Font" -> "clovaai/dmfont"
"ueoo/Attr2Font" -> "azadis/MC-GAN"
"ueoo/Attr2Font" -> "JeanWU/CalliGAN"
"clovaai/SATRN" -> "opconty/Transformer_STR"
"clovaai/SATRN" -> "Media-Smart/vedastr"
"clovaai/SATRN" -> "RuijieJ/pren"
"clovaai/SATRN" -> "chenjun2hao/SRN.pytorch"
"clovaai/SATRN" -> "Pay20Y/SEED"
"clovaai/SATRN" -> "Wang-Tianwei/Decoupled-attention-network"
"clovaai/SATRN" -> "Bartzi/kiss"
"clovaai/SATRN" -> "clovaai/TedEval"
"clovaai/SATRN" -> "byeonghu-na/MATRN"
"clovaai/SATRN" -> "ku21fan/STR-Fewer-Labels"
"GXYM/DRRG" -> "GXYM/TextBPN"
"GXYM/DRRG" -> "GXYM/TextPMs"
"GXYM/DRRG" -> "GXYM/KPN"
"GXYM/DRRG" -> "GXYM/TextBPN-Plus-Plus"
"GXYM/DRRG" -> "GXYM/GloRe"
"GXYM/DRRG" -> "GXYM/GHM_Loss"
"GXYM/DRRG" -> "wangyuxin87/ContourNet"
"GXYM/DRRG" -> "GXYM/OHEM-loss"
"GXYM/DRRG" -> "GXYM/Focal-loss"
"GXYM/DRRG" -> "Yuliang-Liu/bezier_curve_text_spotting"
"GXYM/DRRG" -> "Yuliang-Liu/Box_Discretization_Network"
"GXYM/DRRG" -> "Wang-Tianwei/Decoupled-attention-network"
"GXYM/DRRG" -> "princewang1994/TextSnake.pytorch"
"GXYM/DRRG" -> "MhLiao/MaskTextSpotterV3"
"GXYM/DRRG" -> "Pay20Y/SEED"
"SURFZJY/Real-time-Text-Detection-DBNet" -> "BADBADBADBOY/DBnet-lite.pytorch"
"Pay20Y/SEED" -> "chenjun2hao/SRN.pytorch"
"Pay20Y/SEED" -> "Wang-Tianwei/Decoupled-attention-network"
"Pay20Y/SEED" -> "LARS-research/AutoSTR"
"Pay20Y/SEED" -> "RubanSeven/Text-Image-Augmentation-python"
"Pay20Y/SEED" -> "opconty/Transformer_STR"
"Pay20Y/SEED" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"Pay20Y/SEED" -> "Canjie-Luo/Text-Image-Augmentation"
"Pay20Y/SEED" -> "Media-Smart/vedastr"
"Pay20Y/SEED" -> "Yuliang-Liu/bezier_curve_text_spotting"
"Pay20Y/SEED" -> "ayumiymk/aster.pytorch"
"Pay20Y/SEED" -> "ku21fan/STR-Fewer-Labels"
"Pay20Y/SEED" -> "Chuhanxx/FontAdaptor"
"Pay20Y/SEED" -> "liuch37/sar-pytorch"
"Pay20Y/SEED" -> "Yuliang-Liu/Box_Discretization_Network"
"Pay20Y/SEED" -> "phantrdat/cvpr20-scatter-text-recognizer"
"BADBADBADBOY/DBnet-lite.pytorch" -> "BADBADBADBOY/genete_ocr_data"
"BADBADBADBOY/DBnet-lite.pytorch" -> "BADBADBADBOY/pytorchOCR"
"BADBADBADBOY/DBnet-lite.pytorch" -> "saicoco/SA-Text"
"BADBADBADBOY/DBnet-lite.pytorch" -> "SURFZJY/Real-time-Text-Detection-DBNet"
"RubanSeven/CRAFT_keras" -> "backtime92/CRAFT-Reimplementation"
"RubanSeven/CRAFT_keras" -> "autonise/CRAFT-Remade"
"RubanSeven/CRAFT_keras" -> "brooklyn1900/CRAFT_pytorch"
"RubanSeven/CRAFT_keras" -> "LoveGalaxy/Character-Region-Awareness-for-Text-Detection-"
"RubanSeven/CRAFT_keras" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"RubanSeven/CRAFT_keras" -> "WenmuZhou/PAN.pytorch"
"RubanSeven/CRAFT_keras" -> "xuannianz/DifferentiableBinarization"
"RubanSeven/CRAFT_keras" -> "namedysx/CRAFT-tensorflow"
"RubanSeven/CRAFT_keras" -> "msight-tech/research-charnet"
"RubanSeven/CRAFT_keras" -> "Yuliang-Liu/Box_Discretization_Network"
"RubanSeven/CRAFT_keras" -> "AirBernard/Scene-Text-Detection-with-SPCNET"
"RubanSeven/CRAFT_keras" -> "Megvii-CSG/MegReader"
"RubanSeven/CRAFT_keras" -> "lvpengyuan/corner"
"wangyuxin87/ContourNet" -> "wangyuxin87/R-Net"
"wangyuxin87/ContourNet" -> "GXYM/DRRG"
"wangyuxin87/ContourNet" -> "Yuliang-Liu/bezier_curve_text_spotting"
"wangyuxin87/ContourNet" -> "whai362/pan_pp.pytorch"
"wangyuxin87/ContourNet" -> "Yuliang-Liu/Box_Discretization_Network"
"wangyuxin87/ContourNet" -> "Wang-Tianwei/Decoupled-attention-network"
"wangyuxin87/ContourNet" -> "MhLiao/MaskTextSpotterV3"
"wangyuxin87/ContourNet" -> "Pay20Y/SEED"
"wangyuxin87/ContourNet" -> "xhzdeng/stela"
"wangyuxin87/ContourNet" -> "lvpengyuan/corner"
"wangyuxin87/ContourNet" -> "chenjun2hao/SRN.pytorch"
"wangyuxin87/ContourNet" -> "chenjun2hao/Bert_OCR.pytorch"
"wangyuxin87/ContourNet" -> "Megvii-CSG/MegReader"
"wangyuxin87/ContourNet" -> "ku21fan/STR-Fewer-Labels"
"wangyuxin87/ContourNet" -> "RubanSeven/Text-Image-Augmentation-python"
"whai362/pan_pp.pytorch" -> "WenmuZhou/PAN.pytorch"
"whai362/pan_pp.pytorch" -> "MhLiao/MaskTextSpotterV3"
"whai362/pan_pp.pytorch" -> "whai362/PSENet"
"whai362/pan_pp.pytorch" -> "Yuliang-Liu/bezier_curve_text_spotting"
"whai362/pan_pp.pytorch" -> "WenmuZhou/DBNet.pytorch"
"whai362/pan_pp.pytorch" -> "Media-Smart/vedastr"
"whai362/pan_pp.pytorch" -> "FangShancheng/ABINet"
"whai362/pan_pp.pytorch" -> "hikopensource/DAVAR-Lab-OCR" ["e"=1]
"whai362/pan_pp.pytorch" -> "MhLiao/DB"
"whai362/pan_pp.pytorch" -> "ying09/TextFuseNet"
"whai362/pan_pp.pytorch" -> "wangyuxin87/ContourNet"
"whai362/pan_pp.pytorch" -> "WenmuZhou/PSENet.pytorch"
"whai362/pan_pp.pytorch" -> "mxin262/SwinTextSpotter"
"whai362/pan_pp.pytorch" -> "wenwenyu/MASTER-pytorch" ["e"=1]
"whai362/pan_pp.pytorch" -> "ayumiymk/aster.pytorch"
"clovaai/CLEval" -> "clovaai/TedEval"
"clovaai/CLEval" -> "clovaai/SATRN"
"clovaai/CLEval" -> "naver-ai/scob" ["e"=1]
"clovaai/CLEval" -> "clovaai/dmfont"
"clovaai/CLEval" -> "clovaai/bros" ["e"=1]
"clovaai/CLEval" -> "clovaai/synthtiger"
"liuch37/sar-pytorch" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"liuch37/sar-pytorch" -> "Pay20Y/SAR_TF"
"liuch37/sar-pytorch" -> "LARS-research/AutoSTR"
"abc1763613206/TGBullshitGeneratorBot" -> "pluto0x0/Bullshit-WebUI"
"abc1763613206/TGBullshitGeneratorBot" -> "ZERO-A-ONE/BullshitGenerator-handwrite"
"BADBADBADBOY/pse-lite.pytorch" -> "BADBADBADBOY/Psenet_v2"
"RubanSeven/Text-Image-Augmentation-python" -> "Canjie-Luo/Text-Image-Augmentation"
"RubanSeven/Text-Image-Augmentation-python" -> "Wang-Tianwei/Decoupled-attention-network"
"RubanSeven/Text-Image-Augmentation-python" -> "Pay20Y/SEED"
"RubanSeven/Text-Image-Augmentation-python" -> "summerlvsong/Aggregation-Cross-Entropy"
"RubanSeven/Text-Image-Augmentation-python" -> "chenjun2hao/SRN.pytorch"
"RubanSeven/Text-Image-Augmentation-python" -> "Megvii-CSG/MegReader"
"RubanSeven/Text-Image-Augmentation-python" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"RubanSeven/Text-Image-Augmentation-python" -> "HCIILAB/Scene-Text-Recognition"
"RubanSeven/Text-Image-Augmentation-python" -> "Yuliang-Liu/Box_Discretization_Network"
"RubanSeven/Text-Image-Augmentation-python" -> "tommyMessi/crnn_ctc-centerloss" ["e"=1]
"RubanSeven/Text-Image-Augmentation-python" -> "wenwenyu/MASTER-pytorch" ["e"=1]
"RubanSeven/Text-Image-Augmentation-python" -> "Jyouhou/UnrealText"
"RubanSeven/Text-Image-Augmentation-python" -> "opconty/Transformer_STR"
"RubanSeven/Text-Image-Augmentation-python" -> "Yuliang-Liu/bezier_curve_text_spotting"
"RubanSeven/Text-Image-Augmentation-python" -> "Media-Smart/vedastr"
"brownvc/decoupled-style-descriptors" -> "Lina-AI/OHR"
"BB-fat/InvoiceSpider" -> "Hanmengnan/Identify-the-Captcha"
"BB-fat/InvoiceSpider" -> "kerlomz/inv-veri"
"CrazySummerday/ctpn.pytorch" -> "BADBADBADBOY/pytorch.ctpn"
"BADBADBADBOY/pytorch.ctpn" -> "opconty/pytorch_ctpn"
"BADBADBADBOY/pytorch.ctpn" -> "CrazySummerday/ctpn.pytorch"
"BADBADBADBOY/pytorch.ctpn" -> "BADBADBADBOY/genete_ocr_data"
"BADBADBADBOY/pytorch.ctpn" -> "BADBADBADBOY/DBnet-lite.pytorch"
"youdao-ai/SRNet-Datagen" -> "youdao-ai/SRNet"
"youdao-ai/SRNet-Datagen" -> "lksshw/SRNet"
"youdao-ai/SRNet-Datagen" -> "qqqyd/MOSTEL"
"GitYCC/crnn-pytorch" -> "Holmeyoung/crnn-pytorch"
"GitYCC/crnn-pytorch" -> "dredwardhyde/crnn-ctc-loss-pytorch"
"GitYCC/crnn-pytorch" -> "meijieru/crnn.pytorch"
"WenmuZhou/PAN.pytorch" -> "WenmuZhou/PSENet.pytorch"
"WenmuZhou/PAN.pytorch" -> "whai362/pan_pp.pytorch"
"WenmuZhou/PAN.pytorch" -> "whai362/PSENet"
"WenmuZhou/PAN.pytorch" -> "WenmuZhou/DBNet.pytorch"
"WenmuZhou/PAN.pytorch" -> "Canjie-Luo/MORAN_v2"
"WenmuZhou/PAN.pytorch" -> "Yuliang-Liu/bezier_curve_text_spotting"
"WenmuZhou/PAN.pytorch" -> "lvpengyuan/corner"
"WenmuZhou/PAN.pytorch" -> "MhLiao/DB"
"WenmuZhou/PAN.pytorch" -> "liuheng92/tensorflow_PSENet"
"WenmuZhou/PAN.pytorch" -> "backtime92/CRAFT-Reimplementation"
"WenmuZhou/PAN.pytorch" -> "msight-tech/research-charnet"
"WenmuZhou/PAN.pytorch" -> "HCIILAB/Scene-Text-Recognition"
"WenmuZhou/PAN.pytorch" -> "HCIILAB/Scene-Text-Detection"
"WenmuZhou/PAN.pytorch" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"WenmuZhou/PAN.pytorch" -> "ayumiymk/aster.pytorch"
"ZC119/Handwritten-CycleGAN" -> "changebo/HCCG-CycleGAN"
"ZC119/Handwritten-CycleGAN" -> "JeanWU/CalliGAN"
"FLming/CRNN.tf2" -> "lvjianjin/crnn"
"FLming/CRNN.tf2" -> "alleveenstra/attentionocr"
"FLming/CRNN.tf2" -> "bai-shang/crnn_ctc_ocr_tf"
"MhLiao/MaskTextSpotter" -> "MhLiao/MaskTextSpotterV3"
"MhLiao/MaskTextSpotter" -> "Yuliang-Liu/bezier_curve_text_spotting"
"MhLiao/MaskTextSpotter" -> "msight-tech/research-charnet"
"MhLiao/MaskTextSpotter" -> "Wang-Tianwei/Decoupled-attention-network"
"MhLiao/MaskTextSpotter" -> "ayumiymk/aster.pytorch"
"MhLiao/MaskTextSpotter" -> "jiangxiluning/FOTS.PyTorch"
"MhLiao/MaskTextSpotter" -> "lvpengyuan/corner"
"MhLiao/MaskTextSpotter" -> "lvpengyuan/masktextspotter.caffe2"
"MhLiao/MaskTextSpotter" -> "HCIILAB/Scene-Text-Recognition"
"MhLiao/MaskTextSpotter" -> "Canjie-Luo/Text-Image-Augmentation"
"MhLiao/MaskTextSpotter" -> "summerlvsong/Aggregation-Cross-Entropy"
"MhLiao/MaskTextSpotter" -> "Yuliang-Liu/Box_Discretization_Network"
"MhLiao/MaskTextSpotter" -> "Jyouhou/SceneTextPapers"
"MhLiao/MaskTextSpotter" -> "whai362/PSENet"
"MhLiao/MaskTextSpotter" -> "princewang1994/TextSnake.pytorch"
"tleyden/elastic-thought" -> "tleyden/docker"
"tleyden/elastic-thought" -> "irony/caffe-docker-classifier"
"roseperrone/character-detector" -> "subokita/Robust-Text-Detection"
"borchero/pycave" -> "borchero/pyblaze"
"zonasw/DBNet" -> "xuannianz/DifferentiableBinarization"
"ligoudaner377/font_translator_gan" -> "clovaai/fewshot-font-generation"
"ligoudaner377/font_translator_gan" -> "iamyufan/MF-Net"
"ligoudaner377/font_translator_gan" -> "deepkyu/multilingual-font-style-transfer"
"ligoudaner377/font_translator_gan" -> "ecnuycxie/DG-Font"
"ligoudaner377/font_translator_gan" -> "kyxscut/CG-GAN"
"ligoudaner377/font_translator_gan" -> "tlc121/FsFont"
"jiangxiluning/MASTER-TF" -> "wenwenyu/MASTER-pytorch" ["e"=1]
"jiangxiluning/MASTER-TF" -> "Pay20Y/SAR_TF"
"jiangxiluning/MASTER-TF" -> "Chuhanxx/FontAdaptor"
"jiangxiluning/MASTER-TF" -> "MauritsBleeker/Bi-STET"
"AndSonder/space.keter.top" -> "AndSonder/Fooling-Object-Detection-Network"
"AndSonder/space.keter.top" -> "AndSonder/smart-hotel-database"
"AndSonder/space.keter.top" -> "AndSonder/FaceRecognition-System-Pytorch"
"AndSonder/space.keter.top" -> "AndSonder/HandWritingEraser-Pytorch"
"AndSonder/space.keter.top" -> "AndSonder/PaperPlots"
"AndSonder/space.keter.top" -> "AndSonder/fastcoll"
"AndSonder/space.keter.top" -> "AndSonder/report-typora-theme"
"Chuhanxx/FontAdaptor" -> "LARS-research/AutoSTR"
"Chuhanxx/FontAdaptor" -> "opconty/Transformer_STR"
"Chuhanxx/FontAdaptor" -> "Pay20Y/SEED"
"LARS-research/AutoSTR" -> "Chuhanxx/FontAdaptor"
"LARS-research/AutoSTR" -> "Pay20Y/SEED"
"chenjun2hao/Bert_OCR.pytorch" -> "opconty/Transformer_STR"
"chenjun2hao/Bert_OCR.pytorch" -> "chenjun2hao/SRN.pytorch"
"chenjun2hao/Bert_OCR.pytorch" -> "Bartzi/kiss"
"chenjun2hao/Bert_OCR.pytorch" -> "Wang-Tianwei/Decoupled-attention-network"
"chenjun2hao/Bert_OCR.pytorch" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"chenjun2hao/Bert_OCR.pytorch" -> "MauritsBleeker/Bi-STET"
"chenjun2hao/Bert_OCR.pytorch" -> "chenjun2hao/Attention_ocr.pytorch"
"nlintz/StrokeWidthTransform" -> "mypetyak/StrokeWidthTransform"
"nlintz/StrokeWidthTransform" -> "Sujay-M/TextDetection"
"JeanWU/CalliGAN" -> "JinshanZeng/StrokeGAN"
"JeanWU/CalliGAN" -> "ZC119/Handwritten-CycleGAN"
"liweileev/FET-GAN" -> "uchidalab/fontdesign_gan"
"liweileev/FET-GAN" -> "ueoo/AGIS-Net"
"phantrdat/cvpr20-scatter-text-recognizer" -> "amazon-science/textadain-robust-recognition"
"lksshw/SRNet" -> "youdao-ai/SRNet"
"lksshw/SRNet" -> "youdao-ai/SRNet-Datagen"
"lksshw/SRNet" -> "qqqyd/MOSTEL"
"lksshw/SRNet" -> "UCSB-NLP-Chang/DiffSTE"
"lksshw/SRNet" -> "HCIILAB/Scene-Text-Removal"
"lksshw/SRNet" -> "grenlayk/deep-text-edit"
"lksshw/SRNet" -> "prasunroy/stefann"
"lksshw/SRNet" -> "HCIILAB/SCUT-EnsText"
"lksshw/SRNet" -> "Jyouhou/UnrealText"
"lksshw/SRNet" -> "lcy0604/CTRNet"
"lksshw/SRNet" -> "ecnuljzhang/brush-your-text"
"lksshw/SRNet" -> "chenhaoxing/DiffUTE"
"chunkyjasper/IAMhwr" -> "Lina-AI/OHR"
"chunkyjasper/IAMhwr" -> "chychen/air_writing"
"xhzdeng/stela" -> "xhzdeng/crpn"
"xhzdeng/stela" -> "Jyouhou/CurvedSynthText"
"brooklyn1900/CRAFT_pytorch" -> "backtime92/CRAFT-Reimplementation"
"brooklyn1900/CRAFT_pytorch" -> "RubanSeven/CRAFT_keras"
"brooklyn1900/CRAFT_pytorch" -> "autonise/CRAFT-Remade"
"pluto0x0/Bullshit-WebUI" -> "pluto0x0/BullshitGenerator"
"xuannianz/DifferentiableBinarization" -> "zonasw/DBNet"
"xuannianz/DifferentiableBinarization" -> "RubanSeven/CRAFT_keras"
"xuannianz/DifferentiableBinarization" -> "iamrishab/DB-tf"
"xuannianz/DifferentiableBinarization" -> "liuheng92/tensorflow_PSENet"
"xuannianz/DifferentiableBinarization" -> "MhLiao/DB"
"VITA-Group/ShapeMatchingGAN" -> "williamyang1991/TET-GAN"
"VITA-Group/ShapeMatchingGAN" -> "azadis/MC-GAN"
"VITA-Group/ShapeMatchingGAN" -> "ueoo/AGIS-Net"
"VITA-Group/ShapeMatchingGAN" -> "assafshocher/InGAN" ["e"=1]
"VITA-Group/ShapeMatchingGAN" -> "daooshee/Typography-with-Decor"
"VITA-Group/ShapeMatchingGAN" -> "liweileev/FET-GAN"
"VITA-Group/ShapeMatchingGAN" -> "changebo/HCCG-CycleGAN"
"VITA-Group/ShapeMatchingGAN" -> "tengteng95/Pose-Transfer" ["e"=1]
"VITA-Group/ShapeMatchingGAN" -> "ueoo/Attr2Font"
"VITA-Group/ShapeMatchingGAN" -> "koishi70/Style_Migration_For_Artistic_Font_With_CNN"
"BADBADBADBOY/genete_ocr_data" -> "BADBADBADBOY/pse-lite.pytorch"
"bityigoss/mtl-text-recognition" -> "Wovchena/text-detection-fots.pytorch"
"bityigoss/mtl-text-recognition" -> "MauritsBleeker/Bi-STET"
"bityigoss/mtl-text-recognition" -> "BboyHanat/TextGenerator"
"AprilYapingZhang/Seq2SeqAdapt" -> "Caiyuan-Zheng/Consistency_Regularization_STR"
"Pay20Y/SAR_TF" -> "jichilen/SAR_quick"
"Pay20Y/SAR_TF" -> "wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition"
"Pay20Y/SAR_TF" -> "jiangxiluning/MASTER-TF"
"Pay20Y/SAR_TF" -> "liuch37/sar-pytorch"
"Pay20Y/SAR_TF" -> "andahan/FOTS_TF"
"saicoco/SA-Text" -> "crossLi/Ultra_light_OCR_No.9"
"BADBADBADBOY/Psenet_v2" -> "Shun14/psenet_tf"
"RiTUAL-UH/Font-prediction-dataset" -> "RiTUAL-UH/Font_LDL_2020"
"wangyuxin87/R-Net" -> "wangyuxin87/ContourNet"
"AndSonder/student_message" -> "AndSonder/PaperPlots"
"AndSonder/student_message" -> "AndSonder/fastcoll"
"AndSonder/student_message" -> "AndSonder/report-typora-theme"
"RiTUAL-UH/Font_LDL_2020" -> "RiTUAL-UH/Font-prediction-dataset"
"ankanbhunia/Handwriting-Transformers" -> "ankanbhunia/doodleformer"
"ankanbhunia/Handwriting-Transformers" -> "aimagelab/VATr"
"ankanbhunia/Handwriting-Transformers" -> "ankanbhunia/AdverseBiNet"
"ankanbhunia/Handwriting-Transformers" -> "ankanbhunia/AttenScriptNetPR"
"ankanbhunia/Handwriting-Transformers" -> "koninik/DiffusionPen"
"ankanbhunia/Handwriting-Transformers" -> "omni-us/research-GANwriting"
"ankanbhunia/Handwriting-Transformers" -> "ankanbhunia/arxivbox"
"ankanbhunia/Handwriting-Transformers" -> "MattAlexMiracle/SmartPatch"
"ankanbhunia/Handwriting-Transformers" -> "herobd/handwriting_line_generation"
"ankanbhunia/Handwriting-Transformers" -> "koninik/WordStylist"
"open-mmlab/mmocr" -> "MhLiao/DB"
"open-mmlab/mmocr" -> "clovaai/deep-text-recognition-benchmark"
"open-mmlab/mmocr" -> "clovaai/CRAFT-pytorch"
"open-mmlab/mmocr" -> "Belval/TextRecognitionDataGenerator"
"open-mmlab/mmocr" -> "hikopensource/DAVAR-Lab-OCR" ["e"=1]
"open-mmlab/mmocr" -> "WenmuZhou/DBNet.pytorch"
"open-mmlab/mmocr" -> "aim-uofa/AdelaiDet" ["e"=1]
"open-mmlab/mmocr" -> "ankush-me/SynthText"
"open-mmlab/mmocr" -> "open-mmlab/mmdeploy" ["e"=1]
"open-mmlab/mmocr" -> "mindee/doctr" ["e"=1]
"open-mmlab/mmocr" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"open-mmlab/mmocr" -> "open-mmlab/mmpretrain" ["e"=1]
"open-mmlab/mmocr" -> "WenmuZhou/OCR_DataSet"
"open-mmlab/mmocr" -> "whai362/pan_pp.pytorch"
"open-mmlab/mmocr" -> "FangShancheng/ABINet"
"frotms/PaddleOCR2Pytorch" -> "WenmuZhou/PytorchOCR"
"frotms/PaddleOCR2Pytorch" -> "BADBADBADBOY/pytorchOCR"
"frotms/PaddleOCR2Pytorch" -> "WenmuZhou/OCR_DataSet"
"frotms/PaddleOCR2Pytorch" -> "FeiGeChuanShu/ncnn_paddleocr" ["e"=1]
"frotms/PaddleOCR2Pytorch" -> "hikopensource/DAVAR-Lab-OCR" ["e"=1]
"frotms/PaddleOCR2Pytorch" -> "oh-my-ocr/text_renderer"
"frotms/PaddleOCR2Pytorch" -> "Sanster/text_renderer"
"frotms/PaddleOCR2Pytorch" -> "MhLiao/DB"
"frotms/PaddleOCR2Pytorch" -> "FudanVI/benchmarking-chinese-text-recognition"
"frotms/PaddleOCR2Pytorch" -> "WenmuZhou/DBNet.pytorch"
"frotms/PaddleOCR2Pytorch" -> "open-mmlab/mmocr"
"frotms/PaddleOCR2Pytorch" -> "1079863482/paddle2torch_PPOCRv3"
"frotms/PaddleOCR2Pytorch" -> "whai362/pan_pp.pytorch"
"frotms/PaddleOCR2Pytorch" -> "zcswdt/OCR_ICDAR_label_revise"
"frotms/PaddleOCR2Pytorch" -> "chineseocr/trocr-chinese"
"intel/handwritten-chinese-ocr-samples" -> "HCIILAB/SCUT-EPT_Dataset_Release"
"intel/handwritten-chinese-ocr-samples" -> "shannanyinxiang/PageNet"
"intel/handwritten-chinese-ocr-samples" -> "Mountchicken/Text-Recognition-on-Cross-Domain-Datasets"
"intel/handwritten-chinese-ocr-samples" -> "yflv-yanxia/handwritten_text"
"intel/handwritten-chinese-ocr-samples" -> "HCIILAB/SCUT-HCCDoc_Dataset_Release"
"sanluan/einvoice" -> "fantasyxxj/einvoice"
"sanluan/einvoice" -> "xj1988/invoice-pdf-parse"
"sanluan/einvoice" -> "yooongchun/Invoice2Excel"
"sanluan/einvoice" -> "384863451/invoice_ocr"
"sanluan/einvoice" -> "mvpboss1004/invoice_extraction"
"sanluan/einvoice" -> "huanglu20124/invoice"
"sanluan/einvoice" -> "NightTeam/invoice-manager"
"sanluan/einvoice" -> "guanshuicheng/invoice"
"ecnuycxie/DG-Font" -> "clovaai/mxfont"
"ecnuycxie/DG-Font" -> "clovaai/lffont"
"ecnuycxie/DG-Font" -> "Hxyz-123/Font-diff"
"ecnuycxie/DG-Font" -> "wangchi95/CF-Font"
"ecnuycxie/DG-Font" -> "clovaai/fewshot-font-generation"
"ecnuycxie/DG-Font" -> "tlc121/FsFont"
"ecnuycxie/DG-Font" -> "yeungchenwa/FontDiffuser"
"ecnuycxie/DG-Font" -> "kyxscut/CG-GAN"
"ecnuycxie/DG-Font" -> "ligoudaner377/font_translator_gan"
"ecnuycxie/DG-Font" -> "EuphoriaYan/zi2zi-pytorch"
"ecnuycxie/DG-Font" -> "IShengFang/TypographyResearchCollection"
"ecnuycxie/DG-Font" -> "ueoo/Attr2Font"
"ecnuycxie/DG-Font" -> "JeanWU/CalliGAN"
"ecnuycxie/DG-Font" -> "clovaai/dmfont"
"ecnuycxie/DG-Font" -> "yizhiwang96/deepvecfont"
"clovaai/mxfont" -> "clovaai/lffont"
"clovaai/mxfont" -> "clovaai/fewshot-font-generation"
"clovaai/mxfont" -> "ecnuycxie/DG-Font"
"clovaai/mxfont" -> "clovaai/dmfont"
"clovaai/mxfont" -> "tlc121/FsFont"
"clovaai/mxfont" -> "wangchi95/CF-Font"
"clovaai/mxfont" -> "yizhiwang96/deepvecfont"
"clovaai/mxfont" -> "IShengFang/TypographyResearchCollection"
"clovaai/mxfont" -> "yeungchenwa/FontDiffuser"
"clovaai/mxfont" -> "Hxyz-123/Font-diff"
"clovaai/mxfont" -> "JeanWU/CalliGAN"
"bzsome/idcard_generator" -> "airob0t/idcardgenerator"
"bzsome/idcard_generator" -> "flytkgl/PDFQFZ" ["e"=1]
"bzsome/idcard_generator" -> "Ice-Hazymoon/idcard_generator"
"bzsome/idcard_generator" -> "chxm1023/Rewrite" ["e"=1]
"bzsome/idcard_generator" -> "KaringX/ClashPro" ["e"=1]
"bzsome/idcard_generator" -> "quarkape/free-canvas" ["e"=1]
"bzsome/idcard_generator" -> "xiaoguyu/wechatDownload" ["e"=1]
"bzsome/idcard_generator" -> "yeahwu/v2ray-wss" ["e"=1]
"bzsome/idcard_generator" -> "m1-llie/TUMCC" ["e"=1]
"bzsome/idcard_generator" -> "tgnav/tgwiki" ["e"=1]
"bzsome/idcard_generator" -> "SUSTech-CRA/chinese-opensource-mirror-site" ["e"=1]
"bzsome/idcard_generator" -> "AdminTest0/SharpWxDump" ["e"=1]
"bzsome/idcard_generator" -> "e1roy/12306spy" ["e"=1]
"bzsome/idcard_generator" -> "runningcheese/MirrorSite" ["e"=1]
"bzsome/idcard_generator" -> "zas023/JdBuyer" ["e"=1]
"roatienza/straug" -> "roatienza/deep-text-recognition-benchmark"
"roatienza/straug" -> "Canjie-Luo/Text-Image-Augmentation"
"roatienza/straug" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"roatienza/straug" -> "FangShancheng/ABINet"
"roatienza/straug" -> "ku21fan/STR-Fewer-Labels"
"roatienza/straug" -> "wangyuxin87/VisionLAN"
"roatienza/straug" -> "ymy-k/DPText-DETR"
"roatienza/straug" -> "RubanSeven/Text-Image-Augmentation-python"
"roatienza/straug" -> "czczup/FAST"
"roatienza/straug" -> "shannanyinxiang/SPTS"
"lluisgomez/TextProposals" -> "MichalBusta/FASText"
"lluisgomez/TextProposals" -> "MhLiao/TextBoxes"
"lluisgomez/TextProposals" -> "stupidZZ/FCN_Text"
"lluisgomez/TextProposals" -> "lluisgomez/text_extraction"
"lluisgomez/TextProposals" -> "zchengquan/TextDetector"
"lluisgomez/TextProposals" -> "BestSonny/SSTD"
"lluisgomez/TextProposals" -> "subokita/Robust-Text-Detection"
"lluisgomez/TextProposals" -> "jugg1024/Text-Detection-with-FRCN"
"lluisgomez/TextProposals" -> "aperrault/DetectText"
"lluisgomez/TextProposals" -> "bgshih/seglink"
"lluisgomez/TextProposals" -> "stupidZZ/Symmetry_Text_Line_Detection"
"lluisgomez/TextProposals" -> "MichalBusta/DeepTextSpotter"
"lluisgomez/TextProposals" -> "cjnolet/textbox_proposals_fcrn"
"tulasiram58827/ocr_tflite" -> "tulasiram58827/craft_tflite"
"FangShancheng/ABINet" -> "ku21fan/STR-Fewer-Labels"
"FangShancheng/ABINet" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"FangShancheng/ABINet" -> "chenjun2hao/SRN.pytorch"
"FangShancheng/ABINet" -> "wangyuxin87/VisionLAN"
"FangShancheng/ABINet" -> "RuijieJ/pren"
"FangShancheng/ABINet" -> "FangShancheng/ABINet-PP"
"FangShancheng/ABINet" -> "mxin262/SwinTextSpotter"
"FangShancheng/ABINet" -> "Wang-Tianwei/Decoupled-attention-network"
"FangShancheng/ABINet" -> "whai362/pan_pp.pytorch"
"FangShancheng/ABINet" -> "baudm/parseq"
"FangShancheng/ABINet" -> "HCIILAB/Scene-Text-Recognition"
"FangShancheng/ABINet" -> "FudanVI/benchmarking-chinese-text-recognition"
"FangShancheng/ABINet" -> "roatienza/deep-text-recognition-benchmark"
"FangShancheng/ABINet" -> "Media-Smart/vedastr"
"FangShancheng/ABINet" -> "Pay20Y/SEED"
"roatienza/deep-text-recognition-benchmark" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"roatienza/deep-text-recognition-benchmark" -> "ku21fan/STR-Fewer-Labels"
"roatienza/deep-text-recognition-benchmark" -> "FangShancheng/ABINet"
"roatienza/deep-text-recognition-benchmark" -> "chenjun2hao/SRN.pytorch"
"roatienza/deep-text-recognition-benchmark" -> "Pay20Y/SEED"
"roatienza/deep-text-recognition-benchmark" -> "opconty/Transformer_STR"
"roatienza/deep-text-recognition-benchmark" -> "whai362/pan_pp.pytorch"
"roatienza/deep-text-recognition-benchmark" -> "roatienza/straug"
"roatienza/deep-text-recognition-benchmark" -> "wangyuxin87/VisionLAN"
"roatienza/deep-text-recognition-benchmark" -> "Media-Smart/vedastr"
"roatienza/deep-text-recognition-benchmark" -> "baudm/parseq"
"roatienza/deep-text-recognition-benchmark" -> "FudanVI/benchmarking-chinese-text-recognition"
"roatienza/deep-text-recognition-benchmark" -> "clovaai/SATRN"
"roatienza/deep-text-recognition-benchmark" -> "cv-small-snails/Text-Recognition-Material"
"roatienza/deep-text-recognition-benchmark" -> "RubanSeven/Text-Image-Augmentation-python"
"clovaai/synthtiger" -> "baudm/parseq"
"clovaai/synthtiger" -> "ku21fan/STR-Fewer-Labels"
"clovaai/synthtiger" -> "FangShancheng/ABINet"
"clovaai/synthtiger" -> "ymy-k/DPText-DETR"
"clovaai/synthtiger" -> "oh-my-ocr/text_renderer"
"clovaai/synthtiger" -> "Jyouhou/UnrealText"
"clovaai/synthtiger" -> "hikopensource/DAVAR-Lab-OCR" ["e"=1]
"clovaai/synthtiger" -> "clovaai/CLEval"
"clovaai/synthtiger" -> "RuijieJ/pren"
"clovaai/synthtiger" -> "youdao-ai/SRNet-Datagen"
"clovaai/synthtiger" -> "clovaai/webvicob" ["e"=1]
"clovaai/synthtiger" -> "SHI-Labs/Rethinking-Text-Segmentation"
"clovaai/synthtiger" -> "google-research-datasets/hiertext"
"clovaai/synthtiger" -> "ankush-me/SynthText"
"clovaai/synthtiger" -> "clovaai/bros" ["e"=1]
"CVI-SZU/STKM" -> "LinusWu/TENET_Training"
"wangyuxin87/PERT" -> "duxiangcheng/SAEN"
"wangyuxin87/PERT" -> "HCIILAB/SCUT-EnsText"
"GXYM/TextBPN" -> "GXYM/TextPMs"
"GXYM/TextBPN" -> "GXYM/KPN"
"GXYM/TextBPN" -> "GXYM/TextBPN-Plus-Plus"
"GXYM/TextBPN" -> "GXYM/GloRe"
"GXYM/TextBPN" -> "GXYM/DRRG"
"GXYM/TextBPN" -> "GXYM/OHEM-loss"
"GXYM/TextBPN" -> "GXYM/GHM_Loss"
"GXYM/TextBPN" -> "GXYM/Focal-loss"
"wcq19941215/SceneTextRemoval" -> "tzm-tora/Stroke-Based-Scene-Text-Erasing"
"wcq19941215/SceneTextRemoval" -> "neouyghur/One-stage-Mask-based-Scene-Text-Eraser"
"wcq19941215/SceneTextRemoval" -> "lcy0604/CTRNet"
"SHI-Labs/Rethinking-Text-Segmentation" -> "lcy0604/CTRNet"
"SHI-Labs/Rethinking-Text-Segmentation" -> "lcy0604/EraseNet"
"SHI-Labs/Rethinking-Text-Segmentation" -> "yizhiwang96/TextLogoLayout"
"SHI-Labs/Rethinking-Text-Segmentation" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"SHI-Labs/Rethinking-Text-Segmentation" -> "google-research-datasets/hiertext"
"SHI-Labs/Rethinking-Text-Segmentation" -> "xdxie/WordArt"
"SHI-Labs/Rethinking-Text-Segmentation" -> "youdao-ai/SRNet-Datagen"
"SHI-Labs/Rethinking-Text-Segmentation" -> "ZYM-PKU/UDiffText"
"SHI-Labs/Rethinking-Text-Segmentation" -> "HCIILAB/Scene-Text-Removal"
"SHI-Labs/Rethinking-Text-Segmentation" -> "lksshw/SRNet"
"SHI-Labs/Rethinking-Text-Segmentation" -> "Canjie-Luo/Real-300K"
"SHI-Labs/Rethinking-Text-Segmentation" -> "RubanSeven/Text-Image-Augmentation-python"
"SHI-Labs/Rethinking-Text-Segmentation" -> "shuyansy/Visual-Text-Processing-survey"
"SHI-Labs/Rethinking-Text-Segmentation" -> "GXYM/DRRG"
"SHI-Labs/Rethinking-Text-Segmentation" -> "chenhaoxing/DiffUTE"
"ShusenTang/WriteLikeYou" -> "singularityrms/OLHWG"
"Mountchicken/Text-Recognition-on-Cross-Domain-Datasets" -> "Mountchicken/CTPN_CRNN_ChineseOCR_PyQt5"
"Mountchicken/Text-Recognition-on-Cross-Domain-Datasets" -> "Yuliang-Liu/SPTS"
"Taylister/FontFits" -> "RiTUAL-UH/Font-prediction-dataset"
"theSage21/pytongue" -> "theSage21/openJudge"
"shannanyinxiang/PageNet" -> "HCIILAB/SCUT-HCCDoc_Dataset_Release"
"shannanyinxiang/PageNet" -> "shannanyinxiang/SPTS"
"shannanyinxiang/PageNet" -> "shannanyinxiang/UPOCR"
"ku21fan/STR-Fewer-Labels" -> "FangShancheng/ABINet"
"ku21fan/STR-Fewer-Labels" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"ku21fan/STR-Fewer-Labels" -> "byeonghu-na/MATRN"
"ku21fan/STR-Fewer-Labels" -> "wangyuxin87/VisionLAN"
"ku21fan/STR-Fewer-Labels" -> "RuijieJ/pren"
"ku21fan/STR-Fewer-Labels" -> "roatienza/deep-text-recognition-benchmark"
"ku21fan/STR-Fewer-Labels" -> "chenjun2hao/SRN.pytorch"
"ku21fan/STR-Fewer-Labels" -> "Pay20Y/SEED"
"ku21fan/STR-Fewer-Labels" -> "mxin262/SwinTextSpotter"
"ku21fan/STR-Fewer-Labels" -> "opconty/Transformer_STR"
"ku21fan/STR-Fewer-Labels" -> "HCIILAB/Scene-Text-Removal"
"ku21fan/STR-Fewer-Labels" -> "Caiyuan-Zheng/Consistency_Regularization_STR"
"ku21fan/STR-Fewer-Labels" -> "Wang-Tianwei/Decoupled-attention-network"
"ku21fan/STR-Fewer-Labels" -> "RubanSeven/Text-Image-Augmentation-python"
"ku21fan/STR-Fewer-Labels" -> "Jyouhou/ICDAR2019-ArT-Recognition-Alchemy"
"facebookresearch/IMGUR5K-Handwriting-Dataset" -> "grenlayk/deep-text-edit"
"facebookresearch/IMGUR5K-Handwriting-Dataset" -> "clovaai/synthtiger"
"NightTeam/invoice-manager" -> "MasterYip/python-InvoiceMgr"
"wangyuxin87/VisionLAN" -> "byeonghu-na/MATRN"
"wangyuxin87/VisionLAN" -> "Caiyuan-Zheng/Consistency_Regularization_STR"
"wangyuxin87/VisionLAN" -> "RuijieJ/pren"
"wangyuxin87/VisionLAN" -> "FangShancheng/ABINet"
"wangyuxin87/VisionLAN" -> "ku21fan/STR-Fewer-Labels"
"theSage21/openJudge" -> "theSage21/pytongue"
"neet-cv/ml.akasaki.space" -> "AndSonder/Fooling-Object-Detection-Network"
"neet-cv/ml.akasaki.space" -> "AndSonder/smart-hotel-database"
"neet-cv/ml.akasaki.space" -> "AndSonder/space.keter.top"
"neet-cv/ml.akasaki.space" -> "AndSonder/FaceRecognition-System-Pytorch"
"neet-cv/ml.akasaki.space" -> "AndSonder/HandWritingEraser-Pytorch"
"neet-cv/ml.akasaki.space" -> "visualDust/neetbox"
"neouyghur/One-stage-Mask-based-Scene-Text-Eraser" -> "HCIILAB/SCUT-EnsText"
"neouyghur/One-stage-Mask-based-Scene-Text-Eraser" -> "lcy0604/EraseNet"
"neouyghur/One-stage-Mask-based-Scene-Text-Eraser" -> "wcq19941215/SceneTextRemoval"
"neouyghur/One-stage-Mask-based-Scene-Text-Eraser" -> "ZeroAct/SceneTextRemover-pytorch"
"neouyghur/One-stage-Mask-based-Scene-Text-Eraser" -> "HCIILAB/Scene-Text-Removal"
"FactoDeepLearning/VerticalAttentionOCR" -> "FactoDeepLearning/SPAN"
"FactoDeepLearning/VerticalAttentionOCR" -> "FactoDeepLearning/DAN"
"FactoDeepLearning/VerticalAttentionOCR" -> "FactoDeepLearning/FasterDAN"
"taku910/zinnia" -> "FLCLjp/iPhone-Zinnia"
"Yuliang-Liu/ABCNet_Chinese" -> "Canjie-Luo/Real-300K"
"Yuliang-Liu/ABCNet_Chinese" -> "simplify23/Paddle-PANet"
"NikosEfth/im2rbte" -> "NikosEfth/crafting-shifts"
"NikosEfth/im2rbte" -> "koninik/HTG_evaluation"
"novioleo/Savior" -> "wushilian/CenterNet2CharDet"
"novioleo/Savior" -> "saicoco/SA-Text"
"ZeroAct/SceneTextRemover-pytorch" -> "neouyghur/One-stage-Mask-based-Scene-Text-Eraser"
"sanyuankexie/hello.kexie.space" -> "visualDust/neetbox"
"sanyuankexie/hello.kexie.space" -> "AndSonder/smart-hotel-database"
"yestinsong/Text-Detection" -> "subokita/Robust-Text-Detection"
"yestinsong/Text-Detection" -> "aperrault/DetectText"
"yestinsong/Text-Detection" -> "ploverpang/HeadlineDetectionBySWT"
"yestinsong/Text-Detection" -> "idiap/mser"
"Wang-Tianwei/Implicit-feature-alignment" -> "IntuitionMachines/OrigamiNet"
"RuijieJ/pren" -> "wangyuxin87/VisionLAN"
"RuijieJ/pren" -> "FangShancheng/ABINet"
"RuijieJ/pren" -> "ku21fan/STR-Fewer-Labels"
"RuijieJ/pren" -> "chenjun2hao/SRN.pytorch"
"RuijieJ/pren" -> "clovaai/SATRN"
"FactoDeepLearning/SPAN" -> "FactoDeepLearning/VerticalAttentionOCR"
"FactoDeepLearning/SPAN" -> "FactoDeepLearning/LinePytorchOCR"
"wushilian/CenterNet2CharDet" -> "crossLi/Ultra_light_OCR_No.9"
"wushilian/CenterNet2CharDet" -> "BADBADBADBOY/pse-lite.pytorch"
"crossLi/Ultra_light_OCR_No.9" -> "BADBADBADBOY/Psenet_v2"
"LinusWu/TENET_Training" -> "HaozheLiu-ST/MEE"
"lancercat/OSOCR" -> "Xiaomeng-Yang/STR_benchmark_cleansed"
"lancercat/OSOCR" -> "lancercat/VSDF"
"AndSonder/Fooling-Object-Detection-Network" -> "AndSonder/smart-hotel-database"
"AndSonder/Fooling-Object-Detection-Network" -> "AndSonder/space.keter.top"
"AndSonder/Fooling-Object-Detection-Network" -> "AndSonder/FaceRecognition-System-Pytorch"
"AndSonder/Fooling-Object-Detection-Network" -> "AndSonder/HandWritingEraser-Pytorch"
"AndSonder/Fooling-Object-Detection-Network" -> "AndSonder/PaperPlots"
"AndSonder/Fooling-Object-Detection-Network" -> "AndSonder/fastcoll"
"AndSonder/smart-hotel-database" -> "AndSonder/Fooling-Object-Detection-Network"
"AndSonder/smart-hotel-database" -> "AndSonder/FaceRecognition-System-Pytorch"
"AndSonder/smart-hotel-database" -> "AndSonder/space.keter.top"
"AndSonder/smart-hotel-database" -> "AndSonder/HandWritingEraser-Pytorch"
"AndSonder/smart-hotel-database" -> "AndSonder/PaperPlots"
"AndSonder/smart-hotel-database" -> "AndSonder/fastcoll"
"why20021008/hand-write" -> "SAI-24-me/neverWriteByHand"
"why20021008/hand-write" -> "bawangxx/XZVoice" ["e"=1]
"why20021008/hand-write" -> "Chaoses-Ib/IbEverythingExt" ["e"=1]
"why20021008/hand-write" -> "Gsllchb/Handright"
"why20021008/hand-write" -> "vooidzero/B23Downloader" ["e"=1]
"why20021008/hand-write" -> "liuyi91/RegEx-tools-for-excel-or-wps"
"why20021008/hand-write" -> "HaujetZhao/QuickHand"
"why20021008/hand-write" -> "cuiliang/ClickShow" ["e"=1]
"why20021008/hand-write" -> "chenhb23/lanzouyun-disk" ["e"=1]
"why20021008/hand-write" -> "aardio/Gif123" ["e"=1]
"why20021008/hand-write" -> "1357310795/QrCodeScanner" ["e"=1]
"why20021008/hand-write" -> "lookscanned/lookscanned.io" ["e"=1]
"why20021008/hand-write" -> "kenvix/USBCopyer" ["e"=1]
"why20021008/hand-write" -> "SuperNG6/docker-bilibili-helper" ["e"=1]
"why20021008/hand-write" -> "cgbsmy/TrayS" ["e"=1]
"yizhiwang96/deepvecfont" -> "yizhiwang96/deepvecfont-v2"
"yizhiwang96/deepvecfont" -> "clovaai/mxfont"
"yizhiwang96/deepvecfont" -> "clovaai/lffont"
"yizhiwang96/deepvecfont" -> "ueoo/Attr2Font"
"yizhiwang96/deepvecfont" -> "clovaai/fewshot-font-generation"
"yizhiwang96/deepvecfont" -> "joshpc/StyledFontGAN"
"yizhiwang96/deepvecfont" -> "Taylister/FontFits"
"shashankvkt/AlignMixup_CVPR22" -> "billpsomas/metrix"
"szcom/rnnlib" -> "hardmaru/write-rnn-tensorflow"
"szcom/rnnlib" -> "greydanus/scribe"
"szcom/rnnlib" -> "theSage21/handwritten"
"szcom/rnnlib" -> "hardmaru/sketch-rnn"
"szcom/rnnlib" -> "ericjang/draw" ["e"=1]
"szcom/rnnlib" -> "ikostrikov/TensorFlow-VAE-GAN-DRAW" ["e"=1]
"szcom/rnnlib" -> "skaae/lasagne-draw" ["e"=1]
"szcom/rnnlib" -> "snowkylin/rnn-handwriting-generation"
"szcom/rnnlib" -> "Element-Research/rnn" ["e"=1]
"szcom/rnnlib" -> "fumin/pencil"
"szcom/rnnlib" -> "rakeshvar/rnn_ctc" ["e"=1]
"szcom/rnnlib" -> "wojzaremba/lstm" ["e"=1]
"szcom/rnnlib" -> "kaonashi-tyc/Rewrite"
"szcom/rnnlib" -> "Grzego/handwriting-generation"
"szcom/rnnlib" -> "carpedm20/pixel-rnn-tensorflow" ["e"=1]
"bgshih/crnn" -> "meijieru/crnn.pytorch"
"bgshih/crnn" -> "tianzhi0549/CTPN"
"bgshih/crnn" -> "bear63/sceneReco"
"bgshih/crnn" -> "ankush-me/SynthText"
"bgshih/crnn" -> "argman/EAST"
"bgshih/crnn" -> "MaybeShewill-CV/CRNN_Tensorflow"
"bgshih/crnn" -> "MhLiao/TextBoxes_plusplus"
"bgshih/crnn" -> "eragonruan/text-detection-ctpn"
"bgshih/crnn" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"bgshih/crnn" -> "MhLiao/TextBoxes"
"bgshih/crnn" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"bgshih/crnn" -> "da03/Attention-OCR"
"bgshih/crnn" -> "JarveeLee/SynthText_Chinese_version"
"bgshih/crnn" -> "senlinuc/caffe_ocr"
"bgshih/crnn" -> "ZJULearning/pixel_link"
"baidu-research/warp-ctc" -> "bgshih/crnn"
"baidu-research/warp-ctc" -> "srvk/eesen" ["e"=1]
"baidu-research/warp-ctc" -> "SeanNaren/warp-ctc"
"baidu-research/warp-ctc" -> "SeanNaren/deepspeech.pytorch" ["e"=1]
"baidu-research/warp-ctc" -> "NervanaSystems/neon" ["e"=1]
"baidu-research/warp-ctc" -> "ankush-me/SynthText"
"baidu-research/warp-ctc" -> "meijieru/crnn.pytorch"
"baidu-research/warp-ctc" -> "pannous/tensorflow-speech-recognition" ["e"=1]
"baidu-research/warp-ctc" -> "tianzhi0549/CTPN"
"baidu-research/warp-ctc" -> "soumith/convnet-benchmarks" ["e"=1]
"baidu-research/warp-ctc" -> "amazon-archives/amazon-dsstne" ["e"=1]
"baidu-research/warp-ctc" -> "buriburisuri/speech-to-text-wavenet" ["e"=1]
"baidu-research/warp-ctc" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"baidu-research/warp-ctc" -> "syhw/wer_are_we" ["e"=1]
"baidu-research/warp-ctc" -> "kaldi-asr/kaldi" ["e"=1]
"WentianZhang-ML/FRT-PAD" -> "HaozheLiu-ST/MEE"
"FactoDeepLearning/DAN" -> "FactoDeepLearning/FasterDAN"
"FactoDeepLearning/DAN" -> "FactoDeepLearning/VerticalAttentionOCR"
"FudanVI/benchmarking-chinese-text-recognition" -> "FudanVI/FudanOCR" ["e"=1]
"FudanVI/benchmarking-chinese-text-recognition" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"FudanVI/benchmarking-chinese-text-recognition" -> "FangShancheng/ABINet"
"FudanVI/benchmarking-chinese-text-recognition" -> "HCIILAB/Scene-Text-Recognition"
"FudanVI/benchmarking-chinese-text-recognition" -> "wenwenyu/MASTER-pytorch" ["e"=1]
"FudanVI/benchmarking-chinese-text-recognition" -> "shannanyinxiang/PageNet"
"FudanVI/benchmarking-chinese-text-recognition" -> "hikopensource/DAVAR-Lab-OCR" ["e"=1]
"FudanVI/benchmarking-chinese-text-recognition" -> "zcswdt/OCR_ICDAR_label_revise"
"FudanVI/benchmarking-chinese-text-recognition" -> "chineseocr/trocr-chinese"
"FudanVI/benchmarking-chinese-text-recognition" -> "mxin262/SwinTextSpotter"
"FudanVI/benchmarking-chinese-text-recognition" -> "roatienza/deep-text-recognition-benchmark"
"FudanVI/benchmarking-chinese-text-recognition" -> "RubanSeven/Text-Image-Augmentation-python"
"FudanVI/benchmarking-chinese-text-recognition" -> "Mountchicken/Union14M"
"FudanVI/benchmarking-chinese-text-recognition" -> "baudm/parseq"
"FudanVI/benchmarking-chinese-text-recognition" -> "Canjie-Luo/Text-Image-Augmentation"
"mxin262/SwinTextSpotter" -> "shannanyinxiang/SPTS"
"mxin262/SwinTextSpotter" -> "mlpc-ucsd/TESTR"
"mxin262/SwinTextSpotter" -> "FangShancheng/ABINet"
"mxin262/SwinTextSpotter" -> "wangyuxin87/VisionLAN"
"mxin262/SwinTextSpotter" -> "amazon-science/glass-text-spotting"
"mxin262/SwinTextSpotter" -> "ku21fan/STR-Fewer-Labels"
"mxin262/SwinTextSpotter" -> "ViTAE-Transformer/DeepSolo"
"mxin262/SwinTextSpotter" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"mxin262/SwinTextSpotter" -> "MhLiao/MaskTextSpotterV3"
"mxin262/SwinTextSpotter" -> "whai362/pan_pp.pytorch"
"mxin262/SwinTextSpotter" -> "xdxie/WordArt"
"mxin262/SwinTextSpotter" -> "ymy-k/DPText-DETR"
"mxin262/SwinTextSpotter" -> "wenwenyu/TCM"
"mxin262/SwinTextSpotter" -> "GXYM/TextBPN-Plus-Plus"
"mxin262/SwinTextSpotter" -> "baudm/parseq"
"sirfz/tesserocr" -> "madmaze/pytesseract" ["e"=1]
"sirfz/tesserocr" -> "openpaperwork/pyocr"
"sirfz/tesserocr" -> "ocropus-archive/DUP-ocropy"
"sirfz/tesserocr" -> "simonflueckiger/tesserocr-windows_build"
"sirfz/tesserocr" -> "jlsutherland/doc2text"
"sirfz/tesserocr" -> "JinpengLI/deep_ocr"
"sirfz/tesserocr" -> "Belval/pdf2image" ["e"=1]
"sirfz/tesserocr" -> "Calamari-OCR/calamari"
"sirfz/tesserocr" -> "eragonruan/text-detection-ctpn"
"sirfz/tesserocr" -> "DanBloomberg/leptonica" ["e"=1]
"sirfz/tesserocr" -> "Belval/TextRecognitionDataGenerator"
"sirfz/tesserocr" -> "tesseract-ocr/tessdata" ["e"=1]
"sirfz/tesserocr" -> "pannous/tensorflow-ocr"
"sirfz/tesserocr" -> "kba/awesome-ocr"
"sirfz/tesserocr" -> "gitanat/simple-ocr-opencv" ["e"=1]
"AndSonder/FaceRecognition-System-Pytorch" -> "AndSonder/Fooling-Object-Detection-Network"
"AndSonder/FaceRecognition-System-Pytorch" -> "AndSonder/smart-hotel-database"
"AndSonder/FaceRecognition-System-Pytorch" -> "AndSonder/space.keter.top"
"AndSonder/FaceRecognition-System-Pytorch" -> "AndSonder/HandWritingEraser-Pytorch"
"AndSonder/FaceRecognition-System-Pytorch" -> "AndSonder/fastcoll"
"AndSonder/FaceRecognition-System-Pytorch" -> "AndSonder/PaperPlots"
"aperrault/DetectText" -> "subokita/Robust-Text-Detection"
"aperrault/DetectText" -> "yestinsong/Text-Detection"
"aperrault/DetectText" -> "mypetyak/StrokeWidthTransform"
"aperrault/DetectText" -> "lluisgomez/TextProposals"
"aperrault/DetectText" -> "roseperrone/character-detector"
"aperrault/DetectText" -> "lluisgomez/text_extraction"
"aperrault/DetectText" -> "MichalBusta/FASText"
"aperrault/DetectText" -> "MhLiao/TextBoxes"
"aperrault/DetectText" -> "HsiehYiChia/Scene-text-recognition"
"aperrault/DetectText" -> "idiap/mser"
"aperrault/DetectText" -> "ploverpang/HeadlineDetectionBySWT"
"aperrault/DetectText" -> "azmiozgen/text-detection"
"aperrault/DetectText" -> "pannous/caffe-ocr"
"adeline-cs/GTR" -> "simplify23/CDistNet"
"adeline-cs/GTR" -> "byeonghu-na/MATRN"
"adeline-cs/GTR" -> "DREAMXFAR/FCL-Net" ["e"=1]
"adeline-cs/GTR" -> "WHU-ZQH/FSAM4PLM" ["e"=1]
"adeline-cs/GTR" -> "ymy-k/DPText-DETR"
"adeline-cs/GTR" -> "wangbing1416/C3DA" ["e"=1]
"adeline-cs/GTR" -> "Caiyuan-Zheng/Consistency_Regularization_STR"
"adeline-cs/GTR" -> "RuijieJ/pren"
"hardmaru/sketch-rnn" -> "hardmaru/write-rnn-tensorflow"
"hardmaru/sketch-rnn" -> "hardmaru/sketch-rnn-datasets"
"hardmaru/sketch-rnn" -> "alexis-jacq/Pytorch-Sketch-RNN"
"hardmaru/sketch-rnn" -> "hardmaru/cppn-gan-vae-tensorflow" ["e"=1]
"hardmaru/sketch-rnn" -> "jbornschein/draw" ["e"=1]
"hardmaru/sketch-rnn" -> "hardmaru/rnn-tutorial"
"hardmaru/sketch-rnn" -> "Newmu/dcgan_code" ["e"=1]
"hardmaru/sketch-rnn" -> "abhshkdz/neural-vqa" ["e"=1]
"hardmaru/sketch-rnn" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"hardmaru/sketch-rnn" -> "kaonashi-tyc/Rewrite"
"hardmaru/sketch-rnn" -> "mila-iqia/summerschool2015" ["e"=1]
"hardmaru/sketch-rnn" -> "szcom/rnnlib"
"hardmaru/sketch-rnn" -> "MarkMoHR/Awesome-Sketch-Synthesis" ["e"=1]
"hardmaru/sketch-rnn" -> "hardmaru/cppn-tensorflow"
"hardmaru/sketch-rnn" -> "chuanli11/CNNMRF" ["e"=1]
"yizhiwang96/TextLogoLayout" -> "SHI-Labs/Rethinking-Text-Segmentation"
"yizhiwang96/TextLogoLayout" -> "yizhiwang96/PKU-CSCL-Surveys"
"yizhiwang96/TextLogoLayout" -> "ueoo/Attr2Font"
"yizhiwang96/TextLogoLayout" -> "ktrk115/const_layout" ["e"=1]
"yizhiwang96/TextLogoLayout" -> "yizhiwang96/deepvecfont"
"mlpc-ucsd/TESTR" -> "shannanyinxiang/SPTS"
"mlpc-ucsd/TESTR" -> "mxin262/SwinTextSpotter"
"mlpc-ucsd/TESTR" -> "ymy-k/DPText-DETR"
"mlpc-ucsd/TESTR" -> "amazon-science/glass-text-spotting"
"mlpc-ucsd/TESTR" -> "google-research-datasets/hiertext"
"mlpc-ucsd/TESTR" -> "ViTAE-Transformer/DeepSolo"
"mlpc-ucsd/TESTR" -> "mxin262/ESTextSpotter"
"mlpc-ucsd/TESTR" -> "bytedance/SPTSv2"
"mlpc-ucsd/TESTR" -> "mxin262/Bridging-Text-Spotting"
"mlpc-ucsd/TESTR" -> "FangShancheng/ABINet"
"mlpc-ucsd/TESTR" -> "CVI-SZU/STKM"
"mlpc-ucsd/TESTR" -> "wenwenyu/TCM"
"mlpc-ucsd/TESTR" -> "weijiawu/BOVText-Benchmark" ["e"=1]
"mlpc-ucsd/TESTR" -> "Yuliang-Liu/SPTSv2"
"GXYM/TextBPN-Plus-Plus" -> "GXYM/TextBPN"
"GXYM/TextBPN-Plus-Plus" -> "GXYM/TextPMs"
"GXYM/TextBPN-Plus-Plus" -> "GXYM/KPN"
"GXYM/TextBPN-Plus-Plus" -> "GXYM/GloRe"
"GXYM/TextBPN-Plus-Plus" -> "GXYM/DRRG"
"GXYM/TextBPN-Plus-Plus" -> "GXYM/GHM_Loss"
"GXYM/TextBPN-Plus-Plus" -> "GXYM/Focal-loss"
"GXYM/TextBPN-Plus-Plus" -> "GXYM/OHEM-loss"
"GXYM/TextBPN-Plus-Plus" -> "czczup/FAST"
"chineseocr/trocr-chinese" -> "Gmgge/TrOCR-Seal-Recognition" ["e"=1]
"chineseocr/trocr-chinese" -> "FudanVI/benchmarking-chinese-text-recognition"
"chineseocr/trocr-chinese" -> "WenmuZhou/OCR_DataSet"
"chineseocr/trocr-chinese" -> "tiantian91091317/OCR-Corrector" ["e"=1]
"chineseocr/trocr-chinese" -> "tommyMessi/crnn_ctc-centerloss" ["e"=1]
"chineseocr/trocr-chinese" -> "rsommerfeld/trocr" ["e"=1]
"chineseocr/trocr-chinese" -> "hikopensource/DAVAR-Lab-OCR" ["e"=1]
"chineseocr/trocr-chinese" -> "BADBADBADBOY/pytorchOCR"
"chineseocr/trocr-chinese" -> "tommyMessi/PST-table" ["e"=1]
"chineseocr/trocr-chinese" -> "oh-my-ocr/text_renderer"
"chineseocr/trocr-chinese" -> "JiaquanYe/TableMASTER-mmocr" ["e"=1]
"chineseocr/trocr-chinese" -> "WenmuZhou/DBNet.pytorch"
"chineseocr/trocr-chinese" -> "shannanyinxiang/PageNet"
"chineseocr/trocr-chinese" -> "tommyMessi/remove-stamp" ["e"=1]
"chineseocr/trocr-chinese" -> "RubanSeven/Text-Image-Augmentation-python"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "FangShancheng/ABINet"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "HCIILAB/Scene-Text-Recognition"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "ku21fan/STR-Fewer-Labels"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "Mountchicken/Union14M"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "FudanVI/benchmarking-chinese-text-recognition"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "roatienza/deep-text-recognition-benchmark"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "mxin262/SwinTextSpotter"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "HCIILAB/Scene-Text-Detection"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "TongkunGuan/CCD" ["e"=1]
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "RuijieJ/pren"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "byeonghu-na/MATRN"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "xdxie/WordArt"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "yflv-yanxia/scene_text"
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "hikopensource/DAVAR-Lab-OCR" ["e"=1]
"HCIILAB/Scene-Text-Recognition-Recommendations" -> "zcswdt/OCR_ICDAR_label_revise"
"baudm/parseq" -> "FangShancheng/ABINet"
"baudm/parseq" -> "clovaai/synthtiger"
"baudm/parseq" -> "Mountchicken/Union14M"
"baudm/parseq" -> "ViTAE-Transformer/DeepSolo"
"baudm/parseq" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"baudm/parseq" -> "mxin262/SwinTextSpotter"
"baudm/parseq" -> "roatienza/deep-text-recognition-benchmark"
"baudm/parseq" -> "ymy-k/DPText-DETR"
"baudm/parseq" -> "czczup/FAST"
"baudm/parseq" -> "FudanVI/benchmarking-chinese-text-recognition"
"baudm/parseq" -> "yeungchenwa/OCR-SAM"
"baudm/parseq" -> "byeonghu-na/MATRN"
"baudm/parseq" -> "xdxie/WordArt"
"baudm/parseq" -> "ku21fan/STR-Fewer-Labels"
"baudm/parseq" -> "adeline-cs/GTR"
"kyxscut/CG-GAN" -> "tlc121/FsFont"
"kyxscut/CG-GAN" -> "clovaai/fewshot-font-generation"
"kyxscut/CG-GAN" -> "clovaai/lffont"
"kyxscut/CG-GAN" -> "SCUT-DLVCLab/RFUND"
"kyxscut/CG-GAN" -> "iamyufan/MF-Net"
"cv-small-snails/Text-Recognition-Material" -> "Mountchicken/Union14M"
"cv-small-snails/Text-Recognition-Material" -> "wangwen-whu/WTW-Dataset" ["e"=1]
"cv-small-snails/Text-Recognition-Material" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"cv-small-snails/Text-Recognition-Material" -> "HCIILAB/SCUT-HCCDoc_Dataset_Release"
"cv-small-snails/Text-Recognition-Material" -> "roatienza/deep-text-recognition-benchmark"
"tzm-tora/Stroke-Based-Scene-Text-Erasing" -> "wcq19941215/SceneTextRemoval"
"tzm-tora/Stroke-Based-Scene-Text-Erasing" -> "lcy0604/CTRNet"
"tzm-tora/Stroke-Based-Scene-Text-Erasing" -> "HCIILAB/SCUT-EnsText"
"tzm-tora/Stroke-Based-Scene-Text-Erasing" -> "naver/garnet"
"MichalBusta/FASText" -> "lluisgomez/TextProposals"
"MichalBusta/FASText" -> "stupidZZ/FCN_Text"
"MichalBusta/FASText" -> "lluisgomez/text_extraction"
"MichalBusta/FASText" -> "zchengquan/TextDetector"
"MichalBusta/FASText" -> "MhLiao/TextBoxes"
"MichalBusta/FASText" -> "idiap/mser"
"MichalBusta/FASText" -> "jugg1024/Text-Detection-with-FRCN"
"MichalBusta/FASText" -> "stupidZZ/Symmetry_Text_Line_Detection"
"MichalBusta/FASText" -> "subokita/Robust-Text-Detection"
"MichalBusta/FASText" -> "BestSonny/SSTD"
"MichalBusta/FASText" -> "chenxinpeng/SSD_scene_text_detection"
"MichalBusta/FASText" -> "mop/LTPTextDetector"
"MichalBusta/FASText" -> "bgshih/seglink"
"MichalBusta/FASText" -> "tonghe90/textspotter"
"mypetyak/StrokeWidthTransform" -> "nlintz/StrokeWidthTransform"
"mypetyak/StrokeWidthTransform" -> "Sujay-M/TextDetection"
"mypetyak/StrokeWidthTransform" -> "aperrault/DetectText"
"candycat1992/PencilDrawing" -> "Ldpe2G/Pencil-Drawing-Scala"
"candycat1992/PencilDrawing" -> "lizhemingi/pencil-python"
"candycat1992/PencilDrawing" -> "fumin/pencil"
"FangShancheng/ABINet-PP" -> "FangShancheng/ABINet"
"FangShancheng/ABINet-PP" -> "Yuliang-Liu/SPTSv2"
"FangShancheng/ABINet-PP" -> "Caiyuan-Zheng/Consistency_Regularization_STR"
"google-research-datasets/hiertext" -> "mlpc-ucsd/TESTR"
"google-research-datasets/hiertext" -> "shannanyinxiang/SPTS"
"google-research-datasets/hiertext" -> "xdxie/WordArt"
"google-research-datasets/hiertext" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"google-research-datasets/hiertext" -> "ku21fan/STR-Fewer-Labels"
"google-research-datasets/hiertext" -> "SHI-Labs/Rethinking-Text-Segmentation"
"google-research-datasets/hiertext" -> "mxin262/SwinTextSpotter"
"google-research-datasets/hiertext" -> "ymy-k/Hi-SAM"
"google-research-datasets/hiertext" -> "byeonghu-na/MATRN"
"google-research-datasets/hiertext" -> "bytedance/SPTSv2"
"google-research-datasets/hiertext" -> "ViTAE-Transformer/DeepSolo"
"google-research-datasets/hiertext" -> "ymy-k/DPText-DETR"
"google-research-datasets/hiertext" -> "AIGText/GlyphControl-release"
"google-research-datasets/hiertext" -> "baudm/parseq"
"GXYM/KPN" -> "GXYM/GloRe"
"GXYM/KPN" -> "GXYM/Focal-loss"
"GXYM/KPN" -> "GXYM/TextPMs"
"GXYM/KPN" -> "GXYM/OHEM-loss"
"GXYM/KPN" -> "GXYM/TextBPN"
"hardmaru/write-rnn-tensorflow" -> "hardmaru/sketch-rnn"
"hardmaru/write-rnn-tensorflow" -> "snowkylin/rnn-handwriting-generation"
"hardmaru/write-rnn-tensorflow" -> "greydanus/scribe"
"hardmaru/write-rnn-tensorflow" -> "szcom/rnnlib"
"hardmaru/write-rnn-tensorflow" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"hardmaru/write-rnn-tensorflow" -> "Grzego/handwriting-generation"
"hardmaru/write-rnn-tensorflow" -> "axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation"
"hardmaru/write-rnn-tensorflow" -> "jazzsaxmafia/show_attend_and_tell.tensorflow" ["e"=1]
"hardmaru/write-rnn-tensorflow" -> "sherjilozair/char-rnn-tensorflow" ["e"=1]
"hardmaru/write-rnn-tensorflow" -> "hardmaru/pytorch_notebooks"
"hardmaru/write-rnn-tensorflow" -> "ericjang/draw" ["e"=1]
"hardmaru/write-rnn-tensorflow" -> "carpedm20/NTM-tensorflow" ["e"=1]
"hardmaru/write-rnn-tensorflow" -> "ikostrikov/TensorFlow-VAE-GAN-DRAW" ["e"=1]
"hardmaru/write-rnn-tensorflow" -> "carpedm20/pixel-rnn-tensorflow" ["e"=1]
"hardmaru/write-rnn-tensorflow" -> "tokestermw/tensorflow-shakespeare" ["e"=1]
"clovaai/fewshot-font-generation" -> "clovaai/mxfont"
"clovaai/fewshot-font-generation" -> "clovaai/lffont"
"clovaai/fewshot-font-generation" -> "tlc121/FsFont"
"clovaai/fewshot-font-generation" -> "clovaai/dmfont"
"clovaai/fewshot-font-generation" -> "ligoudaner377/font_translator_gan"
"clovaai/fewshot-font-generation" -> "ecnuycxie/DG-Font"
"clovaai/fewshot-font-generation" -> "Hxyz-123/Font-diff"
"clovaai/fewshot-font-generation" -> "wangchi95/CF-Font"
"clovaai/fewshot-font-generation" -> "kyxscut/CG-GAN"
"clovaai/fewshot-font-generation" -> "yeungchenwa/FontDiffuser"
"clovaai/fewshot-font-generation" -> "IShengFang/TypographyResearchCollection"
"clovaai/fewshot-font-generation" -> "yizhiwang96/deepvecfont"
"clovaai/fewshot-font-generation" -> "yizhiwang96/deepvecfont-v2"
"clovaai/fewshot-font-generation" -> "ammar-deep/SKFont"
"clovaai/fewshot-font-generation" -> "EuphoriaYan/zi2zi-pytorch"
"byeonghu-na/MATRN" -> "wangyuxin87/VisionLAN"
"byeonghu-na/MATRN" -> "adeline-cs/GTR"
"byeonghu-na/MATRN" -> "ku21fan/STR-Fewer-Labels"
"Mountchicken/Efficient-Deep-Learning" -> "SCUT-DLVCLab/RFUND"
"Mountchicken/Efficient-Deep-Learning" -> "mxin262/ESTextSpotter"
"384863451/invoice_ocr" -> "colorofnight86/eisms-ocr"
"384863451/invoice_ocr" -> "sanluan/einvoice"
"Canjie-Luo/Real-300K" -> "iiclab/DecompST"
"zhongzhuoyao/HCCR-GoogLeNet" -> "chongyangtao/DeepHCCR"
"zhongzhuoyao/HCCR-GoogLeNet" -> "HCIILAB/Forward-Implementation-of-Fast-and-Compact-CNN-for-Offline-HCCR"
"zhongzhuoyao/HCCR-GoogLeNet" -> "angzhou/anchor"
"zhongzhuoyao/HCCR-GoogLeNet" -> "devonchenc/HCCR-ResNet"
"zhongzhuoyao/HCCR-GoogLeNet" -> "pavlo-melnyk/offline-HCCR"
"zhongzhuoyao/HCCR-GoogLeNet" -> "changebo/HCCG-CycleGAN"
"AndSonder/HandWritingEraser-Pytorch" -> "AndSonder/Fooling-Object-Detection-Network"
"AndSonder/HandWritingEraser-Pytorch" -> "AndSonder/smart-hotel-database"
"AndSonder/HandWritingEraser-Pytorch" -> "AndSonder/FaceRecognition-System-Pytorch"
"AndSonder/HandWritingEraser-Pytorch" -> "AndSonder/space.keter.top"
"AndSonder/HandWritingEraser-Pytorch" -> "AndSonder/fastcoll"
"AndSonder/HandWritingEraser-Pytorch" -> "AndSonder/PaperPlots"
"AndSonder/HandWritingEraser-Pytorch" -> "AndSonder/report-typora-theme"
"AndSonder/HandWritingEraser-Pytorch" -> "neet-cv/ml.akasaki.space"
"simplify23/CDistNet" -> "adeline-cs/GTR"
"simplify23/CDistNet" -> "byeonghu-na/MATRN"
"billpsomas/metrix" -> "koninik/HTG_evaluation"
"billpsomas/metrix" -> "columbia/turbo"
"billpsomas/metrix" -> "NikosEfth/crafting-shifts"
"billpsomas/metrix" -> "billpsomas/rscir"
"zdyshine/Baidu-netdisk-AI-Image-processing-Challenge-handwriting" -> "lcy0604/EraseNet"
"zdyshine/Baidu-netdisk-AI-Image-processing-Challenge-handwriting" -> "lcy0604/CTRNet"
"zdyshine/Baidu-netdisk-AI-Image-processing-Challenge-handwriting" -> "zuixiaosanlang/-AI-6-"
"zdyshine/Baidu-netdisk-AI-Image-processing-Challenge-handwriting" -> "AndSonder/HandWritingEraser-Pytorch"
"AndSonder/PaperPlots" -> "AndSonder/report-typora-theme"
"AndSonder/PaperPlots" -> "AndSonder/student_message"
"AndSonder/PaperPlots" -> "AndSonder/fastcoll"
"AndSonder/PaperPlots" -> "AndSonder/Fooling-Object-Detection-Network"
"AndSonder/PaperPlots" -> "AndSonder/smart-hotel-database"
"lancercat/VSDF" -> "lancercat/OSOCR"
"grenlayk/deep-text-edit" -> "qqqyd/MOSTEL"
"grenlayk/deep-text-edit" -> "UCSB-NLP-Chang/DiffSTE"
"grenlayk/deep-text-edit" -> "lksshw/SRNet"
"grenlayk/deep-text-edit" -> "youdao-ai/SRNet-Datagen"
"grenlayk/deep-text-edit" -> "ecnuljzhang/brush-your-text"
"grenlayk/deep-text-edit" -> "facebookresearch/IMGUR5K-Handwriting-Dataset"
"grenlayk/deep-text-edit" -> "chenhaoxing/DiffUTE"
"AndSonder/report-typora-theme" -> "AndSonder/PaperPlots"
"AndSonder/report-typora-theme" -> "AndSonder/Fooling-Object-Detection-Network"
"AndSonder/report-typora-theme" -> "AndSonder/fastcoll"
"AndSonder/report-typora-theme" -> "AndSonder/student_message"
"AndSonder/report-typora-theme" -> "AndSonder/smart-hotel-database"
"AndSonder/report-typora-theme" -> "AndSonder/space.keter.top"
"integeruser/CASIA-HWDB1.1-cnn" -> "peterWon/CASIA-HWDB-Recognition"
"integeruser/CASIA-HWDB1.1-cnn" -> "wangjp0408/HCCR-HWDB-tensorflow"
"ankanbhunia/arxivbox" -> "ankanbhunia/doodleformer"
"AndSonder/fastcoll" -> "AndSonder/PaperPlots"
"AndSonder/fastcoll" -> "AndSonder/Fooling-Object-Detection-Network"
"AndSonder/fastcoll" -> "AndSonder/smart-hotel-database"
"AndSonder/fastcoll" -> "AndSonder/report-typora-theme"
"AndSonder/fastcoll" -> "AndSonder/student_message"
"AndSonder/fastcoll" -> "AndSonder/space.keter.top"
"GuangtaoLyu/FETNet" -> "shannanyinxiang/ViTEraser"
"GuangtaoLyu/FETNet" -> "lcy0604/CTRNet"
"Yuliang-Liu/SPTS" -> "Yuliang-Liu/SPTSv2"
"wanghaisheng/awesome-ocr" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"wanghaisheng/awesome-ocr" -> "tianzhi0549/CTPN"
"wanghaisheng/awesome-ocr" -> "da03/Attention-OCR"
"wanghaisheng/awesome-ocr" -> "whitelok/image-text-localization-recognition"
"wanghaisheng/awesome-ocr" -> "JarveeLee/SynthText_Chinese_version"
"wanghaisheng/awesome-ocr" -> "bgshih/crnn"
"wanghaisheng/awesome-ocr" -> "senlinuc/caffe_ocr"
"wanghaisheng/awesome-ocr" -> "Sanster/text_renderer"
"wanghaisheng/awesome-ocr" -> "ankush-me/SynthText"
"wanghaisheng/awesome-ocr" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"wanghaisheng/awesome-ocr" -> "huoyijie/AdvancedEAST"
"wanghaisheng/awesome-ocr" -> "YCG09/chinese_ocr"
"wanghaisheng/awesome-ocr" -> "whai362/PSENet"
"wanghaisheng/awesome-ocr" -> "eragonruan/text-detection-ctpn"
"wanghaisheng/awesome-ocr" -> "bear63/sceneReco"
"kba/awesome-ocr" -> "wanghaisheng/awesome-ocr"
"kba/awesome-ocr" -> "ocropus-archive/DUP-ocropy"
"kba/awesome-ocr" -> "zacharywhitley/awesome-ocr" ["e"=1]
"kba/awesome-ocr" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"kba/awesome-ocr" -> "Calamari-OCR/calamari"
"kba/awesome-ocr" -> "clovaai/CRAFT-pytorch"
"kba/awesome-ocr" -> "mittagessen/kraken" ["e"=1]
"kba/awesome-ocr" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"kba/awesome-ocr" -> "Belval/TextRecognitionDataGenerator"
"kba/awesome-ocr" -> "clovaai/deep-text-recognition-benchmark"
"kba/awesome-ocr" -> "mindee/doctr" ["e"=1]
"kba/awesome-ocr" -> "tleyden/open-ocr"
"kba/awesome-ocr" -> "ankush-me/SynthText"
"kba/awesome-ocr" -> "argman/EAST"
"kba/awesome-ocr" -> "whitelok/image-text-localization-recognition"
"ccccccmd/ReCapcha" -> "xuwenxue000/PJ_PREDICT_IMG"
"ccccccmd/ReCapcha" -> "microfisher/Captcha-Recognizer" ["e"=1]
"ccccccmd/ReCapcha" -> "vwarship/ocrstyle"
"tlc121/FsFont" -> "clovaai/lffont"
"tlc121/FsFont" -> "clovaai/fewshot-font-generation"
"tlc121/FsFont" -> "wangchi95/CF-Font"
"tlc121/FsFont" -> "yjunej/FSFont-pytorch"
"tlc121/FsFont" -> "kyxscut/CG-GAN"
"tlc121/FsFont" -> "Yaomingshuai/VQ-Font" ["e"=1]
"tlc121/FsFont" -> "clovaai/mxfont"
"tlc121/FsFont" -> "Hxyz-123/Font-diff"
"tlc121/FsFont" -> "ecnuycxie/DG-Font"
"tlc121/FsFont" -> "awei669/VQ-Font" ["e"=1]
"ymy-k/DPText-DETR" -> "ViTAE-Transformer/DeepSolo"
"ymy-k/DPText-DETR" -> "mlpc-ucsd/TESTR"
"ymy-k/DPText-DETR" -> "shannanyinxiang/SPTS"
"ymy-k/DPText-DETR" -> "Mountchicken/Union14M"
"ymy-k/DPText-DETR" -> "ymy-k/Hi-SAM"
"ymy-k/DPText-DETR" -> "wenwenyu/TCM"
"ymy-k/DPText-DETR" -> "adeline-cs/GTR"
"ymy-k/DPText-DETR" -> "GXYM/TextBPN-Plus-Plus"
"ymy-k/DPText-DETR" -> "GXYM/TextPMs"
"ymy-k/DPText-DETR" -> "D641593/MixNet"
"ymy-k/DPText-DETR" -> "ViTAE-Transformer/ViTAE-Transformer-Scene-Text-Detection"
"ymy-k/DPText-DETR" -> "retsuh-bqw/SRFormer-Text-Det"
"ymy-k/DPText-DETR" -> "wangyuxin87/VisionLAN"
"czczup/FAST" -> "GXYM/TextBPN-Plus-Plus"
"czczup/FAST" -> "D641593/MixNet"
"czczup/FAST" -> "amazon-science/glass-text-spotting"
"czczup/FAST" -> "whai362/pan_pp.pytorch"
"czczup/FAST" -> "baudm/parseq"
"czczup/FAST" -> "ViTAE-Transformer/DeepSolo"
"czczup/FAST" -> "wenwenyu/TCM"
"czczup/FAST" -> "ymy-k/DPText-DETR"
"czczup/FAST" -> "bytedance/SPTSv2"
"LMMMEng/LLD-MMRI2023" -> "LMMMEng/LLD-MMRI-Dataset"
"LMMMEng/LLD-MMRI2023" -> "ZHEGG/miccai2023"
"HaozheLiu-ST/MEE" -> "LinusWu/TENET_Training"
"amazon-science/semimtr-text-recognition" -> "amazon-science/textadain-robust-recognition"
"amazon-science/semimtr-text-recognition" -> "lancercat/VSDF"
"amazon-science/semimtr-text-recognition" -> "amazon-science/glass-text-spotting"
"shannanyinxiang/SPTS" -> "bytedance/SPTSv2"
"shannanyinxiang/SPTS" -> "amazon-science/glass-text-spotting"
"shannanyinxiang/SPTS" -> "Yuliang-Liu/SPTSv2"
"shannanyinxiang/SPTS" -> "mlpc-ucsd/TESTR"
"shannanyinxiang/SPTS" -> "mxin262/SwinTextSpotter"
"shannanyinxiang/SPTS" -> "wenwenyu/TCM"
"shannanyinxiang/SPTS" -> "shannanyinxiang/PageNet"
"shannanyinxiang/SPTS" -> "ymy-k/DPText-DETR"
"shannanyinxiang/SPTS" -> "Yuliang-Liu/SPTS"
"shannanyinxiang/SPTS" -> "shannanyinxiang/UPOCR"
"shannanyinxiang/SPTS" -> "ViTAE-Transformer/DeepSolo"
"shannanyinxiang/SPTS" -> "shannanyinxiang/ViTEraser"
"bytedance/oclip" -> "PriNing/ODM"
"Mountchicken/Union14M" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"Mountchicken/Union14M" -> "wenwenyu/TCM"
"Mountchicken/Union14M" -> "ymy-k/DPText-DETR"
"Mountchicken/Union14M" -> "bytedance/E2STR"
"Mountchicken/Union14M" -> "bytedance/SPTSv2"
"Mountchicken/Union14M" -> "mxin262/Bridging-Text-Spotting"
"Mountchicken/Union14M" -> "mxin262/ESTextSpotter"
"Mountchicken/Union14M" -> "byeonghu-na/MATRN"
"Mountchicken/Union14M" -> "SCUT-DLVCLab/RFUND"
"Mountchicken/Union14M" -> "TongkunGuan/CCD" ["e"=1]
"Mountchicken/Union14M" -> "Mountchicken/Text-Recognition-on-Cross-Domain-Datasets"
"Mountchicken/Union14M" -> "amazon-science/semimtr-text-recognition"
"Mountchicken/Union14M" -> "wzx99/CLIPOCR"
"Mountchicken/Union14M" -> "baudm/parseq"
"Mountchicken/Union14M" -> "VamosC/CLIP4STR"
"theSage21/handwritten" -> "theSage21/pytongue"
"theSage21/handwritten" -> "theSage21/openJudge"
"theSage21/handwritten" -> "Ankit404butfound/HomeworkMachine"
"amazon-science/glass-text-spotting" -> "shannanyinxiang/SPTS"
"amazon-science/glass-text-spotting" -> "mlpc-ucsd/TESTR"
"amazon-science/glass-text-spotting" -> "mxin262/ESTextSpotter"
"amazon-science/glass-text-spotting" -> "amazon-science/textadain-robust-recognition"
"amazon-science/glass-text-spotting" -> "mxin262/Bridging-Text-Spotting"
"amazon-science/glass-text-spotting" -> "amazon-science/semimtr-text-recognition"
"amazon-science/glass-text-spotting" -> "bytedance/SPTSv2"
"ViTAE-Transformer/DeepSolo" -> "ymy-k/DPText-DETR"
"ViTAE-Transformer/DeepSolo" -> "mlpc-ucsd/TESTR"
"ViTAE-Transformer/DeepSolo" -> "shannanyinxiang/SPTS"
"ViTAE-Transformer/DeepSolo" -> "mxin262/SwinTextSpotter"
"ViTAE-Transformer/DeepSolo" -> "mxin262/ESTextSpotter"
"ViTAE-Transformer/DeepSolo" -> "wenwenyu/TCM"
"ViTAE-Transformer/DeepSolo" -> "bytedance/SPTSv2"
"ViTAE-Transformer/DeepSolo" -> "clovaai/units" ["e"=1]
"ViTAE-Transformer/DeepSolo" -> "FangShancheng/ABINet-PP"
"ViTAE-Transformer/DeepSolo" -> "amazon-science/glass-text-spotting"
"ViTAE-Transformer/DeepSolo" -> "baudm/parseq"
"ViTAE-Transformer/DeepSolo" -> "Mountchicken/Union14M"
"ViTAE-Transformer/DeepSolo" -> "ymy-k/Hi-SAM"
"ViTAE-Transformer/DeepSolo" -> "czczup/FAST"
"ViTAE-Transformer/DeepSolo" -> "mxin262/Bridging-Text-Spotting"
"lizhaoliu-Lec/CCSE" -> "MengLi-l1/StrokeExtraction"
"lizhaoliu-Lec/CCSE" -> "Lee-xeo/Chinese-Character-Stroke-Sequence-Dataset"
"lizhaoliu-Lec/CCSE" -> "lsflyt-pku/FontRL"
"hardmaru/cppn-tensorflow" -> "hochthom/cppn-keras"
"hardmaru/cppn-tensorflow" -> "hardmaru/cppn-gan-vae-tensorflow" ["e"=1]
"hardmaru/cppn-tensorflow" -> "hardmaru/netart-js"
"hardmaru/cppn-tensorflow" -> "hardmaru/neurogram"
"hardmaru/cppn-tensorflow" -> "wottpal/cppn-keras"
"hardmaru/cppn-tensorflow" -> "hardmaru/rnn-tutorial"
"hardmaru/cppn-tensorflow" -> "wxs/cppn-to-glsl"
"hardmaru/cppn-tensorflow" -> "skaae/vaeblog"
"ankanbhunia/doodleformer" -> "ankanbhunia/arxivbox"
"ankanbhunia/doodleformer" -> "ankanbhunia/AttenScriptNetPR"
"ankanbhunia/doodleformer" -> "ankanbhunia/AdverseBiNet"
"Wei-ucas/TPSNet" -> "ychensu/LRANet"
"qqqyd/MOSTEL" -> "UCSB-NLP-Chang/DiffSTE"
"qqqyd/MOSTEL" -> "chenhaoxing/DiffUTE"
"qqqyd/MOSTEL" -> "lksshw/SRNet"
"xdxie/WordArt" -> "Mountchicken/Union14M"
"xdxie/WordArt" -> "mxin262/SwinTextSpotter"
"xdxie/WordArt" -> "ku21fan/STR-Fewer-Labels"
"xdxie/WordArt" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"xdxie/WordArt" -> "google-research-datasets/hiertext"
"xdxie/WordArt" -> "byeonghu-na/MATRN"
"atgambardella/handwriting" -> "simonwsw/cnn-zh"
"gkakogeorgiou/attmask" -> "billpsomas/metrix"
"gkakogeorgiou/attmask" -> "koninik/HTG_evaluation"
"Ldpe2G/Pencil-Drawing-Scala" -> "moonfighting/PencilDrawing--python-version"
"idiap/mser" -> "lluisgomez/text_extraction"
"lcy0604/CTRNet" -> "shannanyinxiang/ViTEraser"
"lcy0604/CTRNet" -> "lcy0604/EraseNet"
"lcy0604/CTRNet" -> "GuangtaoLyu/FETNet"
"lcy0604/CTRNet" -> "wcq19941215/SceneTextRemoval"
"lcy0604/CTRNet" -> "CandleLabAI/TPFNet"
"lcy0604/CTRNet" -> "naver/garnet"
"lcy0604/CTRNet" -> "tzm-tora/Stroke-Based-Scene-Text-Erasing"
"lcy0604/CTRNet" -> "HCIILAB/SCUT-EnsText"
"lcy0604/CTRNet" -> "wangyuxin87/PERT"
"XiiZhao/cbn.pytorch" -> "ychensu/LRANet"
"naver/garnet" -> "lcy0604/CTRNet"
"naver/garnet" -> "tzm-tora/Stroke-Based-Scene-Text-Erasing"
"naver/garnet" -> "wcq19941215/SceneTextRemoval"
"naver/garnet" -> "neouyghur/One-stage-Mask-based-Scene-Text-Eraser"
"FactoDeepLearning/FasterDAN" -> "FactoDeepLearning/DAN"
"duxiangcheng/SAEN" -> "Merenguelkl/DDT"
"nefelibetas/Code-work" -> "orzation/bobibo"
"MengLi-l1/StrokeExtraction" -> "lizhaoliu-Lec/CCSE"
"MengLi-l1/StrokeExtraction" -> "Lee-xeo/Chinese-Character-Stroke-Sequence-Dataset"
"singularityrms/OLHWG" -> "EDM-Research/VATr-pp"
"Yuliang-Liu/SPTSv2" -> "Yuliang-Liu/SPTS"
"kivvi3412/HandWrite" -> "14790897/handwriting-web" ["e"=1]
"kivvi3412/HandWrite" -> "dailenson/SDT"
"kivvi3412/HandWrite" -> "Gsllchb/Handright"
"kivvi3412/HandWrite" -> "SAI-24-me/neverWriteByHand"
"kivvi3412/HandWrite" -> "why20021008/hand-write"
"kivvi3412/HandWrite" -> "CofbroTeam/Doraemon" ["e"=1]
"AIGText/GlyphControl-release" -> "OPPO-Mente-Lab/GlyphDraw"
"AIGText/GlyphControl-release" -> "OPPO-Mente-Lab/GlyphDraw2"
"AIGText/GlyphControl-release" -> "ZYM-PKU/UDiffText"
"AIGText/GlyphControl-release" -> "chenhaoxing/DiffUTE"
"AIGText/GlyphControl-release" -> "AIGText/Glyph-ByT5"
"AIGText/GlyphControl-release" -> "jdh-algo/JoyType"
"AIGText/GlyphControl-release" -> "tyxsspa/AnyText2"
"AIGText/GlyphControl-release" -> "ecnuljzhang/brush-your-text"
"JinpengLI/deep_ocr" -> "bear63/sceneReco"
"JinpengLI/deep_ocr" -> "YCG09/chinese_ocr"
"JinpengLI/deep_ocr" -> "xiaofengShi/CHINESE-OCR"
"JinpengLI/deep_ocr" -> "tianzhi0549/CTPN"
"JinpengLI/deep_ocr" -> "chineseocr/chinese-ocr"
"JinpengLI/deep_ocr" -> "eragonruan/text-detection-ctpn"
"JinpengLI/deep_ocr" -> "senlinuc/caffe_ocr"
"JinpengLI/deep_ocr" -> "JarveeLee/SynthText_Chinese_version"
"JinpengLI/deep_ocr" -> "wanghaisheng/awesome-ocr"
"JinpengLI/deep_ocr" -> "AstarLight/CPS-OCR-Engine"
"JinpengLI/deep_ocr" -> "da03/Attention-OCR"
"JinpengLI/deep_ocr" -> "xiaomaxiao/keras_ocr"
"JinpengLI/deep_ocr" -> "bgshih/crnn"
"JinpengLI/deep_ocr" -> "pannous/tensorflow-ocr"
"JinpengLI/deep_ocr" -> "chineseocr/chineseocr"
"vkgo/OCRAutoScore" -> "zdyshine/Baidu-netdisk-AI-Image-processing-Challenge-handwriting"
"da03/Attention-OCR" -> "emedvedev/attention-ocr"
"da03/Attention-OCR" -> "bgshih/crnn"
"da03/Attention-OCR" -> "A-bone1/Attention-ocr-Chinese-Version"
"da03/Attention-OCR" -> "pannous/tensorflow-ocr"
"da03/Attention-OCR" -> "Bartzi/stn-ocr"
"da03/Attention-OCR" -> "bgshih/aster"
"da03/Attention-OCR" -> "wanghaisheng/awesome-ocr"
"da03/Attention-OCR" -> "ankush-me/SynthText"
"da03/Attention-OCR" -> "tianzhi0549/CTPN"
"da03/Attention-OCR" -> "Bartzi/see"
"da03/Attention-OCR" -> "chenjun2hao/Attention_ocr.pytorch"
"da03/Attention-OCR" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"da03/Attention-OCR" -> "weinman/cnn_lstm_ctc_ocr"
"da03/Attention-OCR" -> "dengdan/seglink"
"da03/Attention-OCR" -> "argman/EAST"
"dailenson/SDT" -> "dailenson/One-DM"
"dailenson/SDT" -> "yeungchenwa/FontDiffuser"
"dailenson/SDT" -> "kivvi3412/HandWrite"
"dailenson/SDT" -> "yeungchenwa/Recommendations-Diffusion-Text-Image"
"dailenson/SDT" -> "aimagelab/VATr"
"dailenson/SDT" -> "ankanbhunia/Handwriting-Transformers"
"dailenson/SDT" -> "kaonashi-tyc/zi2zi" ["e"=1]
"dailenson/SDT" -> "koninik/WordStylist"
"dailenson/SDT" -> "Topdu/OpenOCR" ["e"=1]
"dailenson/SDT" -> "ZHEGG/miccai2023"
"dailenson/SDT" -> "Hxyz-123/Font-diff"
"dailenson/SDT" -> "Gsllchb/Handright"
"dailenson/SDT" -> "clovaai/fewshot-font-generation"
"dailenson/SDT" -> "wenzhenl/wefont"
"dailenson/SDT" -> "caojiezhang/MWGAN" ["e"=1]
"chongyangtao/Awesome-Scene-Text-Recognition" -> "ankush-me/SynthText"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "whitelok/image-text-localization-recognition"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "tianzhi0549/CTPN"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "bgshih/crnn"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "argman/EAST"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "wanghaisheng/awesome-ocr"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "MhLiao/TextBoxes"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "JarveeLee/SynthText_Chinese_version"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "Jyouhou/SceneTextPapers"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "MhLiao/TextBoxes_plusplus"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "Bartzi/see"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "ZJULearning/pixel_link"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "eragonruan/text-detection-ctpn"
"chongyangtao/Awesome-Scene-Text-Recognition" -> "da03/Attention-OCR"
"Yuliang-Liu/MultimodalOCR" -> "wenwenyu/TCM"
"Yuliang-Liu/MultimodalOCR" -> "Yuliang-Liu/Monkey" ["e"=1]
"Yuliang-Liu/MultimodalOCR" -> "SALT-NLP/LLaVAR" ["e"=1]
"Yuliang-Liu/MultimodalOCR" -> "AlibabaResearch/AdvancedLiterateMachinery" ["e"=1]
"Yuliang-Liu/MultimodalOCR" -> "Ucas-HaoranWei/Vary" ["e"=1]
"Yuliang-Liu/MultimodalOCR" -> "X-PLUG/mPLUG-DocOwl" ["e"=1]
"Yuliang-Liu/MultimodalOCR" -> "LukeForeverYoung/UReader" ["e"=1]
"Yuliang-Liu/MultimodalOCR" -> "FangShancheng/ABINet"
"Yuliang-Liu/MultimodalOCR" -> "baudm/parseq"
"Yuliang-Liu/MultimodalOCR" -> "large-ocr-model/large-ocr-model.github.io"
"Yuliang-Liu/MultimodalOCR" -> "harrytea/Awesome-Document-Understanding" ["e"=1]
"Yuliang-Liu/MultimodalOCR" -> "nttmdlab-nlp/InstructDoc" ["e"=1]
"Yuliang-Liu/MultimodalOCR" -> "ViTAE-Transformer/DeepSolo"
"Yuliang-Liu/MultimodalOCR" -> "bytedance/SPTSv2"
"Yuliang-Liu/MultimodalOCR" -> "mxin262/ESTextSpotter"
"jlsutherland/doc2text" -> "PHPixie/Project" ["e"=1]
"jlsutherland/doc2text" -> "ocropus-archive/DUP-ocropy"
"jlsutherland/doc2text" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"jlsutherland/doc2text" -> "mzucker/page_dewarp" ["e"=1]
"jlsutherland/doc2text" -> "sirfz/tesserocr"
"jlsutherland/doc2text" -> "HiFaraz/node-playbook" ["e"=1]
"jlsutherland/doc2text" -> "Tencent/phxsql" ["e"=1]
"jlsutherland/doc2text" -> "openpaperwork/paperwork" ["e"=1]
"jlsutherland/doc2text" -> "nerevu/riko" ["e"=1]
"jlsutherland/doc2text" -> "gregdurrett/berkeley-doc-summarizer" ["e"=1]
"jlsutherland/doc2text" -> "openpaperwork/pyocr"
"jlsutherland/doc2text" -> "fgadaleta/deeplearning-ahem-detector" ["e"=1]
"jlsutherland/doc2text" -> "ajbrock/Neural-Photo-Editor" ["e"=1]
"jlsutherland/doc2text" -> "falvaro/seshat" ["e"=1]
"jlsutherland/doc2text" -> "mateogianolio/ocr" ["e"=1]
"airob0t/idcardgenerator" -> "Ice-Hazymoon/idcard_generator"
"airob0t/idcardgenerator" -> "bzsome/idcard_generator"
"airob0t/idcardgenerator" -> "Sanster/text_renderer"
"airob0t/idcardgenerator" -> "jayknoxqu/id-number-util"
"airob0t/idcardgenerator" -> "TianzhongSong/awesome-SynthText"
"airob0t/idcardgenerator" -> "WenmuZhou/OCR_DataSet"
"airob0t/idcardgenerator" -> "mritd/idgen"
"airob0t/idcardgenerator" -> "Mingtzge/2019-CCF-BDCI-OCR-MCZJ-OCR-IdentificationIDElement" ["e"=1]
"airob0t/idcardgenerator" -> "ankush-me/SynthText"
"airob0t/idcardgenerator" -> "whai362/PSENet"
"airob0t/idcardgenerator" -> "linglanfeng/CCF2019-OCR" ["e"=1]
"airob0t/idcardgenerator" -> "BboyHanat/TextGenerator"
"airob0t/idcardgenerator" -> "WenmuZhou/DBNet.pytorch"
"airob0t/idcardgenerator" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"airob0t/idcardgenerator" -> "oh-my-ocr/text_renderer"
"VamosC/CLIP4STR" -> "large-ocr-model/large-ocr-model.github.io"
"VamosC/CLIP4STR" -> "Mountchicken/Union14M"
"VamosC/CLIP4STR" -> "Swall0w/dtrocr"
"VamosC/CLIP4STR" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"VamosC/CLIP4STR" -> "wzx99/CLIPOCR"
"Hxyz-123/Font-diff" -> "wangchi95/CF-Font"
"Hxyz-123/Font-diff" -> "ecnuycxie/DG-Font"
"Hxyz-123/Font-diff" -> "yeungchenwa/FontDiffuser"
"Hxyz-123/Font-diff" -> "clovaai/fewshot-font-generation"
"Hxyz-123/Font-diff" -> "tlc121/FsFont"
"Hxyz-123/Font-diff" -> "clovaai/lffont"
"Hxyz-123/Font-diff" -> "fubinfb/NTF"
"Hxyz-123/Font-diff" -> "clovaai/mxfont"
"Hxyz-123/Font-diff" -> "kyxscut/CG-GAN"
"Hxyz-123/Font-diff" -> "fubinfb/MSD-Font"
"wangchi95/CF-Font" -> "tlc121/FsFont"
"wangchi95/CF-Font" -> "Hxyz-123/Font-diff"
"wangchi95/CF-Font" -> "ecnuycxie/DG-Font"
"wangchi95/CF-Font" -> "clovaai/fewshot-font-generation"
"wangchi95/CF-Font" -> "clovaai/mxfont"
"wangchi95/CF-Font" -> "clovaai/lffont"
"wangchi95/CF-Font" -> "yeungchenwa/FontDiffuser"
"wangchi95/CF-Font" -> "fubinfb/NTF"
"ankush-me/SynthText" -> "JarveeLee/SynthText_Chinese_version"
"ankush-me/SynthText" -> "Belval/TextRecognitionDataGenerator"
"ankush-me/SynthText" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"ankush-me/SynthText" -> "Sanster/text_renderer"
"ankush-me/SynthText" -> "bgshih/crnn"
"ankush-me/SynthText" -> "argman/EAST"
"ankush-me/SynthText" -> "MhLiao/DB"
"ankush-me/SynthText" -> "whai362/PSENet"
"ankush-me/SynthText" -> "clovaai/deep-text-recognition-benchmark"
"ankush-me/SynthText" -> "tianzhi0549/CTPN"
"ankush-me/SynthText" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"ankush-me/SynthText" -> "meijieru/crnn.pytorch"
"ankush-me/SynthText" -> "huoyijie/AdvancedEAST"
"ankush-me/SynthText" -> "Yuliang-Liu/Curve-Text-Detector"
"ankush-me/SynthText" -> "MhLiao/TextBoxes"
"MhLiao/TextBoxes" -> "MhLiao/TextBoxes_plusplus"
"MhLiao/TextBoxes" -> "tianzhi0549/CTPN"
"MhLiao/TextBoxes" -> "bgshih/crnn"
"MhLiao/TextBoxes" -> "ankush-me/SynthText"
"MhLiao/TextBoxes" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"MhLiao/TextBoxes" -> "JarveeLee/SynthText_Chinese_version"
"MhLiao/TextBoxes" -> "lluisgomez/TextProposals"
"MhLiao/TextBoxes" -> "bgshih/seglink"
"MhLiao/TextBoxes" -> "dengdan/seglink"
"MhLiao/TextBoxes" -> "MichalBusta/DeepTextSpotter"
"MhLiao/TextBoxes" -> "chenxinpeng/SSD_scene_text_detection"
"MhLiao/TextBoxes" -> "Bartzi/stn-ocr"
"MhLiao/TextBoxes" -> "BestSonny/SSTD"
"MhLiao/TextBoxes" -> "tonghe90/textspotter"
"MhLiao/TextBoxes" -> "argman/EAST"
"synckey/tensorflow_lstm_ctc_ocr" -> "ilovin/lstm_ctc_ocr"
"synckey/tensorflow_lstm_ctc_ocr" -> "jimmyleaf/ocr_tensorflow_cnn"
"synckey/tensorflow_lstm_ctc_ocr" -> "igormq/ctc_tensorflow_example" ["e"=1]
"synckey/tensorflow_lstm_ctc_ocr" -> "oyxhust/CNN-LSTM-CTC-text-recognition"
"synckey/tensorflow_lstm_ctc_ocr" -> "aaron-xichen/cnn-lstm-ctc" ["e"=1]
"synckey/tensorflow_lstm_ctc_ocr" -> "watsonyanghx/CNN_LSTM_CTC_Tensorflow"
"synckey/tensorflow_lstm_ctc_ocr" -> "weinman/cnn_lstm_ctc_ocr"
"synckey/tensorflow_lstm_ctc_ocr" -> "da03/Attention-OCR"
"synckey/tensorflow_lstm_ctc_ocr" -> "Li-Ming-Fan/OCR-CRNN-CTC"
"synckey/tensorflow_lstm_ctc_ocr" -> "jonrein/tensorflow_CTC_example" ["e"=1]
"yeungchenwa/OCR-SAM" -> "yeungchenwa/Recommendations-Diffusion-Text-Image"
"yeungchenwa/OCR-SAM" -> "ymy-k/Hi-SAM"
"yeungchenwa/OCR-SAM" -> "HCIILAB/Scene-Text-Recognition-Recommendations"
"yeungchenwa/OCR-SAM" -> "baudm/parseq"
"yeungchenwa/OCR-SAM" -> "google-research-datasets/hiertext"
"yeungchenwa/OCR-SAM" -> "Mountchicken/Union14M"
"yeungchenwa/OCR-SAM" -> "SHI-Labs/Rethinking-Text-Segmentation"
"yeungchenwa/OCR-SAM" -> "mlpc-ucsd/TESTR"
"yeungchenwa/OCR-SAM" -> "clovaai/synthtiger"
"yeungchenwa/OCR-SAM" -> "mxin262/SwinTextSpotter"
"yeungchenwa/OCR-SAM" -> "shannanyinxiang/UPOCR"
"yeungchenwa/OCR-SAM" -> "lcy0604/CTRNet"
"yeungchenwa/OCR-SAM" -> "ViTAE-Transformer/DeepSolo"
"yeungchenwa/OCR-SAM" -> "Wang-Tianwei/Decoupled-attention-network"
"yeungchenwa/OCR-SAM" -> "RubanSeven/Text-Image-Augmentation-python"
"mrgloom/kaggle-dogs-vs-cats-caffe" -> "RomanKornev/dogs-vs-cats-redux"
"OPPO-Mente-Lab/GlyphDraw" -> "AIGText/GlyphControl-release"
"OPPO-Mente-Lab/GlyphDraw" -> "OPPO-Mente-Lab/GlyphDraw2"
"OPPO-Mente-Lab/GlyphDraw" -> "chenhaoxing/DiffUTE"
"OPPO-Mente-Lab/GlyphDraw" -> "ecnuljzhang/brush-your-text"
"OPPO-Mente-Lab/GlyphDraw" -> "lcy0604/CTRNet"
"OPPO-Mente-Lab/GlyphDraw" -> "UCSB-NLP-Chang/DiffSTE"
"OPPO-Mente-Lab/GlyphDraw" -> "tyxsspa/AnyText2"
"OPPO-Mente-Lab/GlyphDraw" -> "1073521013/GlyphDraw"
"OPPO-Mente-Lab/GlyphDraw" -> "ZYM-PKU/UDiffText"
"wenwenyu/TCM" -> "shannanyinxiang/SPTS"
"wenwenyu/TCM" -> "Mountchicken/Union14M"
"wenwenyu/TCM" -> "ymy-k/DPText-DETR"
"wenwenyu/TCM" -> "mxin262/Bridging-Text-Spotting"
"wenwenyu/TCM" -> "ViTAE-Transformer/DeepSolo"
"wenwenyu/TCM" -> "ayumiymk/DiG"
"wenwenyu/TCM" -> "mxin262/ESTextSpotter"
"wenwenyu/TCM" -> "wzx99/CLIPOCR"
"wenwenyu/TCM" -> "D641593/MixNet"
"wenwenyu/TCM" -> "mxin262/SwinTextSpotter"
"wenwenyu/TCM" -> "Yuliang-Liu/MultimodalOCR"
"wenwenyu/TCM" -> "mlpc-ucsd/TESTR"
"wenwenyu/TCM" -> "bytedance/oclip"
"wenwenyu/TCM" -> "wangyuxin87/VisionLAN"
"aimagelab/VATr" -> "aimagelab/HWD"
"aimagelab/VATr" -> "koninik/WordStylist"
"aimagelab/VATr" -> "EDM-Research/VATr-pp"
"aimagelab/VATr" -> "ganji15/HiGANplus"
"aimagelab/VATr" -> "koninik/DiffusionPen"
"aimagelab/VATr" -> "georgeretsi/HTR-best-practices"
"bytedance/SPTSv2" -> "shannanyinxiang/SPTS"
"bytedance/SPTSv2" -> "mxin262/ESTextSpotter"
"bytedance/SPTSv2" -> "retsuh-bqw/SRFormer-Text-Det"
"bytedance/SPTSv2" -> "amazon-science/glass-text-spotting"
"bytedance/SPTSv2" -> "Mountchicken/Union14M"
"bytedance/SPTSv2" -> "Yuliang-Liu/SPTSv2"
"bytedance/SPTSv2" -> "mlpc-ucsd/TESTR"
"mxin262/ESTextSpotter" -> "SCUT-DLVCLab/RFUND"
"mxin262/ESTextSpotter" -> "bytedance/SPTSv2"
"retsuh-bqw/SRFormer-Text-Det" -> "D641593/MixNet"
"D641593/MixNet" -> "retsuh-bqw/SRFormer-Text-Det"
"D641593/MixNet" -> "czczup/FAST"
"D641593/MixNet" -> "ychensu/LRANet"
"D641593/MixNet" -> "ymy-k/DPText-DETR"
"koninik/WordStylist" -> "koninik/HTG_evaluation"
"koninik/WordStylist" -> "koninik/DiffusionPen"
"koninik/WordStylist" -> "aimagelab/VATr"
"koninik/WordStylist" -> "columbia/turbo"
"koninik/WordStylist" -> "billpsomas/metrix"
"koninik/WordStylist" -> "NikosEfth/crafting-shifts"
"tmaham/DS-Fusion" -> "ZYM-PKU/UDiffText"
"tmaham/DS-Fusion" -> "williamyang1991/Awesome-Artistic-Typography"
"hochthom/cppn-keras" -> "wottpal/cppn-keras"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "yeungchenwa/FontDiffuser"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "ZYM-PKU/UDiffText"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "yeungchenwa/OCR-SAM"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "weichaozeng/TextCtrl"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "yeungchenwa/HDR"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "shuyansy/Visual-Text-Processing-survey"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "shannanyinxiang/ViTEraser"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "Hxyz-123/Font-diff"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "lcy0604/CTRNet"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "Mountchicken/Union14M"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "clovaai/fewshot-font-generation"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "AIGText/GlyphControl-release"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "shannanyinxiang/UPOCR"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "chenhaoxing/DiffUTE"
"yeungchenwa/Recommendations-Diffusion-Text-Image" -> "UCSB-NLP-Chang/DiffSTE"
"InsaneOnion/Python-educoder" -> "orzation/bobibo"
"chongyangtao/DeepHCCR" -> "zhongzhuoyao/HCCR-GoogLeNet"
"chongyangtao/DeepHCCR" -> "soloice/Chinese-Character-Recognition"
"chongyangtao/DeepHCCR" -> "angzhou/anchor"
"chongyangtao/DeepHCCR" -> "AmemiyaYuko/HandwrittenChineseCharacterRecognition"
"chongyangtao/DeepHCCR" -> "HCIILAB/Forward-Implementation-of-Fast-and-Compact-CNN-for-Offline-HCCR"
"chongyangtao/DeepHCCR" -> "wangjp0408/HCCR-HWDB-tensorflow"
"chongyangtao/DeepHCCR" -> "simonwsw/cnn-zh"
"chongyangtao/DeepHCCR" -> "lluisgomez/TextProposals"
"chongyangtao/DeepHCCR" -> "changebo/HCCG-CycleGAN"
"chongyangtao/DeepHCCR" -> "peterWon/CASIA-HWDB-Recognition"
"chongyangtao/DeepHCCR" -> "devonchenc/HCCR-ResNet"
"chongyangtao/DeepHCCR" -> "stupidZZ/Symmetry_Text_Line_Detection"
"chongyangtao/DeepHCCR" -> "MhLiao/TextBoxes"
"chongyangtao/DeepHCCR" -> "HCIILAB/SCUT-EPT_Dataset_Release"
"chongyangtao/DeepHCCR" -> "Bartzi/stn-ocr"
"greydanus/scribe" -> "snowkylin/rnn-handwriting-generation"
"greydanus/scribe" -> "Grzego/handwriting-generation"
"greydanus/scribe" -> "hardmaru/write-rnn-tensorflow"
"greydanus/scribe" -> "szcom/rnnlib"
"greydanus/scribe" -> "swechhasingh/Handwriting-synthesis"
"hs105/Deep-Learning-for-OCR" -> "pannous/tensorflow-ocr"
"hs105/Deep-Learning-for-OCR" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"hs105/Deep-Learning-for-OCR" -> "mathDR/reading-text-in-the-wild"
"hs105/Deep-Learning-for-OCR" -> "da03/Attention-OCR"
"hs105/Deep-Learning-for-OCR" -> "emedvedev/attention-ocr"
"hs105/Deep-Learning-for-OCR" -> "MhLiao/TextBoxes"
"hs105/Deep-Learning-for-OCR" -> "Bartzi/stn-ocr"
"hs105/Deep-Learning-for-OCR" -> "BestSonny/SSTD"
"hs105/Deep-Learning-for-OCR" -> "weinman/cnn_lstm_ctc_ocr"
"hs105/Deep-Learning-for-OCR" -> "wanghaisheng/awesome-ocr"
"hs105/Deep-Learning-for-OCR" -> "lluisgomez/TextProposals"
"hs105/Deep-Learning-for-OCR" -> "oyxhust/CNN-LSTM-CTC-text-recognition"
"hs105/Deep-Learning-for-OCR" -> "tangzhenyu/Scene-Text-Understanding"
"chenhaoxing/DiffUTE" -> "qqqyd/MOSTEL"
"chenhaoxing/DiffUTE" -> "UCSB-NLP-Chang/DiffSTE"
"chenhaoxing/DiffUTE" -> "shuyansy/Visual-Text-Processing-survey"
"chenhaoxing/DiffUTE" -> "OPPO-Mente-Lab/GlyphDraw"
"chenhaoxing/DiffUTE" -> "CodeGoat24/DreamText"
"chenhaoxing/DiffUTE" -> "ecnuljzhang/brush-your-text"
"chenhaoxing/DiffUTE" -> "OPPO-Mente-Lab/GlyphDraw2"
"chenhaoxing/DiffUTE" -> "AIGText/GlyphControl-release"
"chenhaoxing/DiffUTE" -> "youdao-ai/SRNet-Datagen"
"chenhaoxing/DiffUTE" -> "ZYM-PKU/UDiffText"
"chenhaoxing/DiffUTE" -> "tyxsspa/AnyText2"
"RobRomijnders/RNN_basketball" -> "zhaoyu611/basketball_trajectory_prediction"
"UCSB-NLP-Chang/DiffSTE" -> "qqqyd/MOSTEL"
"UCSB-NLP-Chang/DiffSTE" -> "chenhaoxing/DiffUTE"
"UCSB-NLP-Chang/DiffSTE" -> "ecnuljzhang/brush-your-text"
"UCSB-NLP-Chang/DiffSTE" -> "weichaozeng/TextCtrl"
"UCSB-NLP-Chang/DiffSTE" -> "grenlayk/deep-text-edit"
"jugg1024/Text-Detection-with-FRCN" -> "chenxinpeng/SSD_scene_text_detection"
"jugg1024/Text-Detection-with-FRCN" -> "stupidZZ/FCN_Text"
"jugg1024/Text-Detection-with-FRCN" -> "oyxhust/ssd-text_detection"
"jugg1024/Text-Detection-with-FRCN" -> "lluisgomez/TextProposals"
"jugg1024/Text-Detection-with-FRCN" -> "MhLiao/TextBoxes"
"jugg1024/Text-Detection-with-FRCN" -> "MichalBusta/FASText"
"jugg1024/Text-Detection-with-FRCN" -> "xhzdeng/crpn"
"jugg1024/Text-Detection-with-FRCN" -> "stupidZZ/Symmetry_Text_Line_Detection"
"jugg1024/Text-Detection-with-FRCN" -> "hyh21521038/ssd-plate_detection"
"jugg1024/Text-Detection-with-FRCN" -> "QAlexBall/Faster_RCNN_for_TextDetection"
"Merenguelkl/DDT" -> "duxiangcheng/SAEN"
"shannanyinxiang/ViTEraser" -> "shannanyinxiang/UPOCR"
"shannanyinxiang/ViTEraser" -> "GuangtaoLyu/FETNet"
"shannanyinxiang/ViTEraser" -> "lcy0604/CTRNet"
"orzation/bobibo" -> "InsaneOnion/Python-educoder"
"orzation/bobibo" -> "nefelibetas/Code-work"
"orzation/bobibo" -> "visualDust/neetbox"
"orzation/bobibo" -> "sanyuankexie/hello.kexie.space"
"ZHEGG/miccai2023" -> "PWenJay/GCA-HNG"
"billpsomas/simpool" -> "NikosEfth/freedom"
"billpsomas/simpool" -> "billpsomas/rscir"
"billpsomas/simpool" -> "billpsomas/metrix"
"cjnolet/text-renderer" -> "cjnolet/textbox_proposals_fcrn"
"visualDust/neetbox" -> "AndSonder/smart-hotel-database"
"visualDust/neetbox" -> "sanyuankexie/hello.kexie.space"
"visualDust/neetbox" -> "AndSonder/PaperPlots"
"visualDust/neetbox" -> "AndSonder/Fooling-Object-Detection-Network"
"visualDust/neetbox" -> "orzation/bobibo"
"hyh21521038/ssd-plate_detection" -> "chenxinpeng/SSD_scene_text_detection"
"stupidZZ/Symmetry_Text_Line_Detection" -> "stupidZZ/FCN_Text"
"aimagelab/HWD" -> "EDM-Research/VATr-pp"
"aimagelab/HWD" -> "aimagelab/FourBi"
"yizhiwang96/deepvecfont-v2" -> "yizhiwang96/deepvecfont"
"yizhiwang96/deepvecfont-v2" -> "thuliu-yt16/dualvector"
"yizhiwang96/deepvecfont-v2" -> "fubinfb/NTF"
"thuliu-yt16/dualvector" -> "yizhiwang96/deepvecfont-v2"
"Xiaomeng-Yang/STR_benchmark_cleansed" -> "lancercat/OSOCR"
"chenxinpeng/SSD_scene_text_detection" -> "xiaodiu2010/TextBoxes-TensorFlow"
"chenxinpeng/SSD_scene_text_detection" -> "jugg1024/Text-Detection-with-FRCN"
"chenxinpeng/SSD_scene_text_detection" -> "hyh21521038/ssd-plate_detection"
"chenxinpeng/SSD_scene_text_detection" -> "oyxhust/ssd-text_detection"
"chenxinpeng/SSD_scene_text_detection" -> "MhLiao/TextBoxes"
"chenxinpeng/SSD_scene_text_detection" -> "bgshih/seglink"
"chenxinpeng/SSD_scene_text_detection" -> "Bartzi/stn-ocr"
"chenxinpeng/SSD_scene_text_detection" -> "BestSonny/SSTD"
"chenxinpeng/SSD_scene_text_detection" -> "MichalBusta/FASText"
"chenxinpeng/SSD_scene_text_detection" -> "tongpi/basicOCR"
"chenxinpeng/SSD_scene_text_detection" -> "stupidZZ/FCN_Text"
"chenxinpeng/SSD_scene_text_detection" -> "mjq11302010044/RRPN"
"Asthestarsfalll/img2art" -> "nxtkofi/LightningNvim"
"Asthestarsfalll/img2art" -> "orzation/bobibo"
"pannous/tensorflow-ocr" -> "da03/Attention-OCR"
"pannous/tensorflow-ocr" -> "emedvedev/attention-ocr"
"pannous/tensorflow-ocr" -> "ilovin/lstm_ctc_ocr"
"pannous/tensorflow-ocr" -> "dengdan/seglink"
"pannous/tensorflow-ocr" -> "pannous/caffe-ocr"
"pannous/tensorflow-ocr" -> "weinman/cnn_lstm_ctc_ocr"
"pannous/tensorflow-ocr" -> "hs105/Deep-Learning-for-OCR"
"pannous/tensorflow-ocr" -> "tianzhi0549/CTPN"
"pannous/tensorflow-ocr" -> "A-bone1/Attention-ocr-Chinese-Version"
"pannous/tensorflow-ocr" -> "JinpengLI/deep_ocr"
"pannous/tensorflow-ocr" -> "Bartzi/stn-ocr"
"pannous/tensorflow-ocr" -> "wushilian/CRNN_Attention_OCR_Chinese"
"pannous/tensorflow-ocr" -> "tongpi/basicOCR"
"pannous/tensorflow-ocr" -> "deeperic/SpikeFlow"
"pannous/tensorflow-ocr" -> "bgshih/crnn"
"AKSHAYUBHAT/DeepVideoAnalytics" -> "MrNothing/AI-Blocks" ["e"=1]
"AKSHAYUBHAT/DeepVideoAnalytics" -> "oarriaga/face_classification" ["e"=1]
"AKSHAYUBHAT/DeepVideoAnalytics" -> "junyanz/iGAN" ["e"=1]
"AKSHAYUBHAT/DeepVideoAnalytics" -> "OpenNMT/OpenNMT" ["e"=1]
"AKSHAYUBHAT/DeepVideoAnalytics" -> "buriburisuri/speech-to-text-wavenet" ["e"=1]
"AKSHAYUBHAT/DeepVideoAnalytics" -> "bgshih/crnn"
"AKSHAYUBHAT/DeepVideoAnalytics" -> "bear63/sceneReco"
"AKSHAYUBHAT/DeepVideoAnalytics" -> "andabi/deep-voice-conversion" ["e"=1]
"AKSHAYUBHAT/DeepVideoAnalytics" -> "ankush-me/SynthText"
"AKSHAYUBHAT/DeepVideoAnalytics" -> "tianzhi0549/CTPN"
"AKSHAYUBHAT/DeepVideoAnalytics" -> "facebookresearch/fairseq-lua" ["e"=1]
"AKSHAYUBHAT/DeepVideoAnalytics" -> "argman/EAST"
"AKSHAYUBHAT/DeepVideoAnalytics" -> "yunjey/stargan" ["e"=1]
"AKSHAYUBHAT/DeepVideoAnalytics" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"AKSHAYUBHAT/DeepVideoAnalytics" -> "AKSHAYUBHAT/VisualSearchServer" ["e"=1]
"burness/tensorflow-101" -> "soloice/Chinese-Character-Recognition"
"burness/tensorflow-101" -> "JinpengLI/deep_ocr"
"burness/tensorflow-101" -> "chineseocr/chinese-ocr"
"burness/tensorflow-101" -> "bear63/sceneReco"
"burness/tensorflow-101" -> "tianzhi0549/CTPN"
"burness/tensorflow-101" -> "ahangchen/GDLnotes" ["e"=1]
"burness/tensorflow-101" -> "ilovin/lstm_ctc_ocr"
"burness/tensorflow-101" -> "AmemiyaYuko/HandwrittenChineseCharacterRecognition"
"burness/tensorflow-101" -> "buriburisuri/ac-gan" ["e"=1]
"burness/tensorflow-101" -> "tobegit3hub/tensorflow_template_application" ["e"=1]
"burness/tensorflow-101" -> "szad670401/end-to-end-for-chinese-plate-recognition" ["e"=1]
"burness/tensorflow-101" -> "rockingdingo/deepnlp" ["e"=1]
"burness/tensorflow-101" -> "wanghaisheng/awesome-ocr"
"burness/tensorflow-101" -> "koth/kcws" ["e"=1]
"burness/tensorflow-101" -> "igul222/improved_wgan_training" ["e"=1]
"design-edit/DesignEdit" -> "AIGText/Glyph-ByT5"
"design-edit/DesignEdit" -> "ant-research/edicho" ["e"=1]
"kaonashi-tyc/Rewrite" -> "kaonashi-tyc/zi2zi" ["e"=1]
"kaonashi-tyc/Rewrite" -> "azadis/MC-GAN"
"kaonashi-tyc/Rewrite" -> "changebo/HCCG-CycleGAN"
"kaonashi-tyc/Rewrite" -> "MingtaoGuo/Chinese-Character-and-Calligraphic-Image-Processing" ["e"=1]
"kaonashi-tyc/Rewrite" -> "mhy12345/Chinese-Character-Style-Transfer"
"kaonashi-tyc/Rewrite" -> "erikbern/deep-fonts" ["e"=1]
"kaonashi-tyc/Rewrite" -> "IShengFang/TypographyResearchCollection"
"kaonashi-tyc/Rewrite" -> "clovaai/fewshot-font-generation"
"kaonashi-tyc/Rewrite" -> "hardmaru/sketch-rnn"
"kaonashi-tyc/Rewrite" -> "VITA-Group/ShapeMatchingGAN"
"kaonashi-tyc/Rewrite" -> "ueoo/AGIS-Net"
"kaonashi-tyc/Rewrite" -> "LinkWoong/Zeroshot-GAN"
"kaonashi-tyc/Rewrite" -> "chongyangtao/DeepHCCR"
"kaonashi-tyc/Rewrite" -> "zhongzhuoyao/HCCR-GoogLeNet"
"kaonashi-tyc/Rewrite" -> "DmitryUlyanov/texture_nets" ["e"=1]
"yeungchenwa/FontDiffuser" -> "yeungchenwa/Recommendations-Diffusion-Text-Image"
"yeungchenwa/FontDiffuser" -> "Hxyz-123/Font-diff"
"yeungchenwa/FontDiffuser" -> "ecnuycxie/DG-Font"
"yeungchenwa/FontDiffuser" -> "clovaai/fewshot-font-generation"
"yeungchenwa/FontDiffuser" -> "wangchi95/CF-Font"
"yeungchenwa/FontDiffuser" -> "tlc121/FsFont"
"yeungchenwa/FontDiffuser" -> "clovaai/mxfont"
"yeungchenwa/FontDiffuser" -> "yeungchenwa/HDR"
"yeungchenwa/FontDiffuser" -> "kyxscut/CG-GAN"
"yeungchenwa/FontDiffuser" -> "clovaai/lffont"
"yeungchenwa/FontDiffuser" -> "ZYM-PKU/UDiffText"
"yeungchenwa/FontDiffuser" -> "yizhiwang96/deepvecfont"
"yeungchenwa/FontDiffuser" -> "awei669/VQ-Font" ["e"=1]
"yeungchenwa/FontDiffuser" -> "AIGText/GlyphControl-release"
"yeungchenwa/FontDiffuser" -> "tmaham/DS-Fusion"
"tianzhi0549/CTPN" -> "bear63/sceneReco"
"tianzhi0549/CTPN" -> "bgshih/crnn"
"tianzhi0549/CTPN" -> "eragonruan/text-detection-ctpn"
"tianzhi0549/CTPN" -> "MhLiao/TextBoxes"
"tianzhi0549/CTPN" -> "ankush-me/SynthText"
"tianzhi0549/CTPN" -> "JarveeLee/SynthText_Chinese_version"
"tianzhi0549/CTPN" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"tianzhi0549/CTPN" -> "meijieru/crnn.pytorch"
"tianzhi0549/CTPN" -> "MhLiao/TextBoxes_plusplus"
"tianzhi0549/CTPN" -> "wanghaisheng/awesome-ocr"
"tianzhi0549/CTPN" -> "senlinuc/caffe_ocr"
"tianzhi0549/CTPN" -> "argman/EAST"
"tianzhi0549/CTPN" -> "dengdan/seglink"
"tianzhi0549/CTPN" -> "da03/Attention-OCR"
"tianzhi0549/CTPN" -> "huoyijie/AdvancedEAST"
"AIGText/Glyph-ByT5" -> "AIGText/GlyphControl-release"
"AIGText/Glyph-ByT5" -> "OPPO-Mente-Lab/GlyphDraw2"
"AIGText/Glyph-ByT5" -> "RockeyCoss/SPO" ["e"=1]
"AIGText/Glyph-ByT5" -> "TencentQQGYLab/ELLA" ["e"=1]
"AIGText/Glyph-ByT5" -> "yardenfren1996/B-LoRA" ["e"=1]
"AIGText/Glyph-ByT5" -> "instantX-research/Regional-Prompting-FLUX" ["e"=1]
"AIGText/Glyph-ByT5" -> "ZYM-PKU/UDiffText"
"AIGText/Glyph-ByT5" -> "megvii-research/HiDiffusion" ["e"=1]
"AIGText/Glyph-ByT5" -> "design-edit/DesignEdit"
"AIGText/Glyph-ByT5" -> "unity-research/IP-Adapter-Instruct"
"AIGText/Glyph-ByT5" -> "YangLing0818/RPG-DiffusionMaster" ["e"=1]
"AIGText/Glyph-ByT5" -> "huchenlei/ComfyUI_omost" ["e"=1]
"AIGText/Glyph-ByT5" -> "ali-vilab/In-Context-LoRA" ["e"=1]
"AIGText/Glyph-ByT5" -> "maszhongming/Multi-LoRA-Composition" ["e"=1]
"large-ocr-model/large-ocr-model.github.io" -> "VamosC/CLIP4STR"
"large-ocr-model/large-ocr-model.github.io" -> "Swall0w/dtrocr"
"large-ocr-model/large-ocr-model.github.io" -> "Mountchicken/Union14M"
"ZYM-PKU/UDiffText" -> "ecnuljzhang/brush-your-text"
"ZYM-PKU/UDiffText" -> "weichaozeng/TextCtrl"
"ZYM-PKU/UDiffText" -> "CodeGoat24/DreamText"
"ZYM-PKU/UDiffText" -> "AIGText/GlyphControl-release"
"ZYM-PKU/UDiffText" -> "yeungchenwa/Recommendations-Diffusion-Text-Image"
"ZYM-PKU/UDiffText" -> "shuyansy/Visual-Text-Processing-survey"
"ZYM-PKU/UDiffText" -> "UCSB-NLP-Chang/DiffSTE"
"ZYM-PKU/UDiffText" -> "chenhaoxing/DiffUTE"
"ZYM-PKU/UDiffText" -> "qqqyd/MOSTEL"
"ZYM-PKU/UDiffText" -> "OPPO-Mente-Lab/GlyphDraw"
"ZYM-PKU/UDiffText" -> "yeungchenwa/FontDiffuser"
"ZYM-PKU/UDiffText" -> "tmaham/DS-Fusion"
"ZYM-PKU/UDiffText" -> "OPPO-Mente-Lab/GlyphDraw2"
"billpsomas/rscir" -> "NikosEfth/freedom"
"billpsomas/rscir" -> "billpsomas/metrix"
"billpsomas/rscir" -> "koninik/HTG_evaluation"
"billpsomas/rscir" -> "billpsomas/simpool"
"billpsomas/rscir" -> "columbia/turbo"
"billpsomas/rscir" -> "Orion-AI-Lab/MindTheModalityGap" ["e"=1]
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "weinman/cnn_lstm_ctc_ocr"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "synckey/tensorflow_lstm_ctc_ocr"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "watsonyanghx/CNN_LSTM_CTC_Tensorflow"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "Bartzi/stn-ocr"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "Li-Ming-Fan/OCR-DETECTION-CTPN"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "aaron-xichen/cnn-lstm-ctc" ["e"=1]
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "Halfish/lstm-ctc-ocr"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "oyxhust/ssd-text_detection"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "da03/Attention-OCR"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "ilovin/lstm_ctc_ocr"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "jugg1024/Text-Detection-with-FRCN"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "Bartzi/see"
"oyxhust/CNN-LSTM-CTC-text-recognition" -> "xiaodiu2010/TextBoxes-TensorFlow"
"ymy-k/Hi-SAM" -> "ymy-k/DPText-DETR"
"ymy-k/Hi-SAM" -> "yeungchenwa/OCR-SAM"
"ymy-k/Hi-SAM" -> "bytedance/SPTSv2"
"ymy-k/Hi-SAM" -> "ViTAE-Transformer/ViTAE-Transformer-Scene-Text-Detection"
"ymy-k/Hi-SAM" -> "ViTAE-Transformer/DeepSolo"
"ymy-k/Hi-SAM" -> "google-research-datasets/hiertext"
"ymy-k/Hi-SAM" -> "shannanyinxiang/UPOCR"
"ymy-k/Hi-SAM" -> "PriNing/ODM"
"ymy-k/Hi-SAM" -> "shannanyinxiang/ViTEraser"
"linghuyuhangyuan/M2S" -> "Merenguelkl/DDT"
"linghuyuhangyuan/M2S" -> "duxiangcheng/SAEN"
"linghuyuhangyuan/M2S" -> "SijieLiu518/SGENet"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "sagelywizard/pytorch-mdn"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "cpmpercussion/keras-mdn-layer"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "tonyduan/mixture-density-network"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "hardmaru/pytorch_notebooks"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "yanji84/keras-mdn"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "RobRomijnders/RNN_basketball"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "sksq96/pytorch-mdn"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "vvanirudh/deep-ensembles-uncertainty" ["e"=1]
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "mbinkowski/nntimeseries"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "hardmaru/write-rnn-tensorflow"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "dusenberrymw/mixture-density-networks"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "oborchers/Medium_Repo"
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "jsn5/dancenet" ["e"=1]
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" -> "alshedivat/keras-gp" ["e"=1]
"mxin262/Bridging-Text-Spotting" -> "Yuliang-Liu/VimTS" ["e"=1]
"mxin262/Bridging-Text-Spotting" -> "mxin262/ESTextSpotter"
"mxin262/Bridging-Text-Spotting" -> "Yuliang-Liu/SPTSv2"
"SeanNaren/warp-ctc" -> "meijieru/crnn.pytorch"
"SeanNaren/warp-ctc" -> "JarveeLee/SynthText_Chinese_version"
"SeanNaren/warp-ctc" -> "bgshih/crnn"
"SeanNaren/warp-ctc" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"SeanNaren/warp-ctc" -> "ankush-me/SynthText"
"SeanNaren/warp-ctc" -> "jiangxiluning/FOTS.PyTorch"
"SeanNaren/warp-ctc" -> "parlance/ctcdecode" ["e"=1]
"SeanNaren/warp-ctc" -> "baidu-research/warp-ctc"
"SeanNaren/warp-ctc" -> "whai362/PSENet"
"SeanNaren/warp-ctc" -> "Canjie-Luo/Text-Image-Augmentation"
"SeanNaren/warp-ctc" -> "SeanNaren/deepspeech.pytorch" ["e"=1]
"SeanNaren/warp-ctc" -> "bear63/sceneReco"
"SeanNaren/warp-ctc" -> "ayumiymk/aster.pytorch"
"SeanNaren/warp-ctc" -> "Sanster/text_renderer"
"SeanNaren/warp-ctc" -> "summerlvsong/Aggregation-Cross-Entropy"
"fubinfb/MSD-Font" -> "Stareven233/IF-Font"
"fubinfb/MSD-Font" -> "lsflyt-pku/QT-Font"
"fubinfb/MSD-Font" -> "fubinfb/NTF"
"Lee-xeo/Chinese-Character-Stroke-Sequence-Dataset" -> "MengLi-l1/StrokeExtraction"
"Lee-xeo/Chinese-Character-Stroke-Sequence-Dataset" -> "lizhaoliu-Lec/CCSE"
"Lee-xeo/Chinese-Character-Stroke-Sequence-Dataset" -> "chanind/makemeahanzi"
"ychensu/LRANet" -> "XiiZhao/cbn.pytorch"
"ychensu/LRANet" -> "Wei-ucas/TPSNet"
"fumin/pencil" -> "candycat1992/PencilDrawing"
"fumin/pencil" -> "lizhemingi/pencil-python"
"fumin/pencil" -> "Ldpe2G/Pencil-Drawing-Scala"
"HsiehYiChia/Scene-text-recognition" -> "MichalBusta/DeepTextSpotter"
"HsiehYiChia/Scene-text-recognition" -> "subokita/Robust-Text-Detection"
"HsiehYiChia/Scene-text-recognition" -> "yestinsong/Text-Detection"
"HsiehYiChia/Scene-text-recognition" -> "aperrault/DetectText"
"snowkylin/rnn-handwriting-generation" -> "greydanus/scribe"
"snowkylin/rnn-handwriting-generation" -> "hardmaru/write-rnn-tensorflow"
"adlnlp/mmvqa" -> "SCUT-DLVCLab/RFUND"
"lizhemingi/pencil-python" -> "ychding11/PencilDrawing-Python"
"lizhemingi/pencil-python" -> "candycat1992/PencilDrawing"
"lizhemingi/pencil-python" -> "Ldpe2G/Pencil-Drawing-Scala"
"lizhemingi/pencil-python" -> "fumin/pencil"
"hardmaru/rnn-tutorial" -> "hardmaru/sketch-rnn-datasets"
"ZeningLin/PEneo" -> "SCUT-DLVCLab/RFUND"
"yeungchenwa/HDR" -> "SCUT-DLVCLab/RFUND"
"yeungchenwa/HDR" -> "shannanyinxiang/UPOCR"
"yeungchenwa/HDR" -> "HCIILAB/M5HisDoc" ["e"=1]
"oyxhust/ssd-text_detection" -> "chenxinpeng/SSD_scene_text_detection"
"oyxhust/ssd-text_detection" -> "stupidZZ/Symmetry_Text_Line_Detection"
"ecnuljzhang/brush-your-text" -> "ZYM-PKU/UDiffText"
"ecnuljzhang/brush-your-text" -> "shuyansy/Visual-Text-Processing-survey"
"ecnuljzhang/brush-your-text" -> "UCSB-NLP-Chang/DiffSTE"
"ecnuljzhang/brush-your-text" -> "OPPO-Mente-Lab/GlyphDraw"
"ecnuljzhang/brush-your-text" -> "OPPO-Mente-Lab/GlyphDraw2"
"shuyansy/Visual-Text-Processing-survey" -> "weichaozeng/TextCtrl"
"shuyansy/Visual-Text-Processing-survey" -> "chenhaoxing/DiffUTE"
"shuyansy/Visual-Text-Processing-survey" -> "ecnuljzhang/brush-your-text"
"aimagelab/FourBi" -> "aimagelab/Alfie"
"bonjour-npy/UndergraduateDissertation" -> "nefelibetas/Code-work"
"bonjour-npy/UndergraduateDissertation" -> "orzation/bobibo"
"bonjour-npy/UndergraduateDissertation" -> "Bamboo-fly/PhotoShare"
"lsflyt-pku/QT-Font" -> "Stareven233/IF-Font"
"OPPO-Mente-Lab/PEA-Diffusion" -> "OPPO-Mente-Lab/GlyphDraw2"
"SCUT-DLVCLab/RFUND" -> "adlnlp/mmvqa"
"SCUT-DLVCLab/RFUND" -> "lcy0604/CTRNet-plus" ["e"=1]
"EDM-Research/VATr-pp" -> "aimagelab/HWD"
"ilovin/lstm_ctc_ocr" -> "watsonyanghx/CNN_LSTM_CTC_Tensorflow"
"ilovin/lstm_ctc_ocr" -> "weinman/cnn_lstm_ctc_ocr"
"ilovin/lstm_ctc_ocr" -> "synckey/tensorflow_lstm_ctc_ocr"
"ilovin/lstm_ctc_ocr" -> "jimmyleaf/ocr_tensorflow_cnn"
"ilovin/lstm_ctc_ocr" -> "AimeeKing/crnn-tensorflow"
"ilovin/lstm_ctc_ocr" -> "JarveeLee/SynthText_Chinese_version"
"ilovin/lstm_ctc_ocr" -> "Belval/CRNN"
"ilovin/lstm_ctc_ocr" -> "wushilian/CRNN_Attention_OCR_Chinese"
"ilovin/lstm_ctc_ocr" -> "dengdan/seglink"
"ilovin/lstm_ctc_ocr" -> "A-bone1/Attention-ocr-Chinese-Version"
"ilovin/lstm_ctc_ocr" -> "da03/Attention-OCR"
"ilovin/lstm_ctc_ocr" -> "bear63/sceneReco"
"ilovin/lstm_ctc_ocr" -> "pannous/tensorflow-ocr"
"ilovin/lstm_ctc_ocr" -> "Li-Ming-Fan/OCR-DETECTION-CTPN"
"ilovin/lstm_ctc_ocr" -> "tianzhi0549/CTPN"
"angzhou/anchor" -> "AmemiyaYuko/HandwrittenChineseCharacterRecognition"
"angzhou/anchor" -> "chongyangtao/DeepHCCR"
"angzhou/anchor" -> "HCIILAB/Forward-Implementation-of-Fast-and-Compact-CNN-for-Offline-HCCR"
"ypwhs/dogs_vs_cats" -> "mtyylx/MLND"
"ypwhs/dogs_vs_cats" -> "xuetsing/cats-vs-dogs"
"ypwhs/dogs_vs_cats" -> "mrgloom/kaggle-dogs-vs-cats-caffe"
"ypwhs/dogs_vs_cats" -> "nd009/capstone" ["e"=1]
"ypwhs/dogs_vs_cats" -> "kevin369ml/My-TensorFlow-tutorials" ["e"=1]
"ypwhs/dogs_vs_cats" -> "ypwhs/baiduyun_deeplearning_competition"
"ypwhs/dogs_vs_cats" -> "ypwhs/DogBreed_gluon"
"ypwhs/dogs_vs_cats" -> "chenyuntc/pytorch-best-practice" ["e"=1]
"ypwhs/dogs_vs_cats" -> "maples1993/Cats_vs_Dogs"
"ypwhs/dogs_vs_cats" -> "miaopei/cat_vs_dog"
"ypwhs/dogs_vs_cats" -> "freelzy/Tencent_Social_Ads" ["e"=1]
"ypwhs/dogs_vs_cats" -> "xbliuhnu/DogsVsCats"
"ypwhs/dogs_vs_cats" -> "527515025/My-TensorFlow-tutorials"
"ypwhs/dogs_vs_cats" -> "MoyanZitto/keras-cn" ["e"=1]
"ypwhs/dogs_vs_cats" -> "wepe/O2O-Coupon-Usage-Forecast" ["e"=1]
"meijieru/crnn.pytorch" -> "bgshih/crnn"
"meijieru/crnn.pytorch" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"meijieru/crnn.pytorch" -> "MhLiao/DB"
"meijieru/crnn.pytorch" -> "ankush-me/SynthText"
"meijieru/crnn.pytorch" -> "SeanNaren/warp-ctc"
"meijieru/crnn.pytorch" -> "xiaofengShi/CHINESE-OCR"
"meijieru/crnn.pytorch" -> "eragonruan/text-detection-ctpn"
"meijieru/crnn.pytorch" -> "Belval/TextRecognitionDataGenerator"
"meijieru/crnn.pytorch" -> "tianzhi0549/CTPN"
"meijieru/crnn.pytorch" -> "clovaai/deep-text-recognition-benchmark"
"meijieru/crnn.pytorch" -> "bear63/sceneReco"
"meijieru/crnn.pytorch" -> "YCG09/chinese_ocr"
"meijieru/crnn.pytorch" -> "argman/EAST"
"meijieru/crnn.pytorch" -> "whai362/PSENet"
"meijieru/crnn.pytorch" -> "JarveeLee/SynthText_Chinese_version"
"whitelok/image-text-localization-recognition" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"whitelok/image-text-localization-recognition" -> "Jyouhou/SceneTextPapers"
"whitelok/image-text-localization-recognition" -> "HCIILAB/Scene-Text-Recognition"
"whitelok/image-text-localization-recognition" -> "ankush-me/SynthText"
"whitelok/image-text-localization-recognition" -> "MhLiao/TextBoxes_plusplus"
"whitelok/image-text-localization-recognition" -> "Yuliang-Liu/Curve-Text-Detector"
"whitelok/image-text-localization-recognition" -> "bgshih/aster"
"whitelok/image-text-localization-recognition" -> "ZumingHuang/awesome-ocr-resources"
"whitelok/image-text-localization-recognition" -> "cs-chan/Total-Text-Dataset"
"whitelok/image-text-localization-recognition" -> "wanghaisheng/awesome-ocr"
"whitelok/image-text-localization-recognition" -> "whai362/PSENet"
"whitelok/image-text-localization-recognition" -> "princewang1994/TextSnake.pytorch"
"whitelok/image-text-localization-recognition" -> "huoyijie/AdvancedEAST"
"whitelok/image-text-localization-recognition" -> "Canjie-Luo/MORAN_v2"
"whitelok/image-text-localization-recognition" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"bytedance/TextHarmony" -> "shuyansy/Visual-Text-Processing-survey"
"bytedance/TextHarmony" -> "OPPO-Mente-Lab/GlyphDraw2"
"bytedance/TextHarmony" -> "ecnuljzhang/brush-your-text"
"bytedance/TextHarmony" -> "CodeGoat24/DreamText"
"bytedance/TextHarmony" -> "ZYM-PKU/UDiffText"
"tyxsspa/AnyText2" -> "weichaozeng/TextCtrl"
"tyxsspa/AnyText2" -> "OPPO-Mente-Lab/GlyphDraw2"
"dailenson/One-DM" -> "dailenson/SDT"
"dailenson/One-DM" -> "aimagelab/VATr"
"dailenson/One-DM" -> "koninik/WordStylist"
"dailenson/One-DM" -> "koninik/DiffusionPen"
"dailenson/One-DM" -> "yeungchenwa/FontDiffuser"
"dailenson/One-DM" -> "ankanbhunia/Handwriting-Transformers"
"dailenson/One-DM" -> "PWenJay/GCA-HNG"
"dailenson/One-DM" -> "yeungchenwa/Recommendations-Diffusion-Text-Image"
"dailenson/One-DM" -> "ZHEGG/miccai2023"
"dailenson/One-DM" -> "lsflyt-pku/DeepCalliFont"
"dailenson/One-DM" -> "tcl9876/Diffusion-Handwriting-Generation"
"dailenson/One-DM" -> "ZYM-PKU/UDiffText"
"dailenson/One-DM" -> "weichaozeng/TextCtrl"
"soloice/Chinese-Character-Recognition" -> "chongyangtao/DeepHCCR"
"soloice/Chinese-Character-Recognition" -> "AmemiyaYuko/HandwrittenChineseCharacterRecognition"
"soloice/Chinese-Character-Recognition" -> "angzhou/anchor"
"soloice/Chinese-Character-Recognition" -> "burness/tensorflow-101"
"soloice/Chinese-Character-Recognition" -> "simonwsw/cnn-zh"
"soloice/Chinese-Character-Recognition" -> "zhongzhuoyao/HCCR-GoogLeNet"
"soloice/Chinese-Character-Recognition" -> "HCIILAB/SCUT-EPT_Dataset_Release"
"CodeGoat24/DreamText" -> "CodeGoat24/PrimeComposer" ["e"=1]
"CodeGoat24/DreamText" -> "OPPO-Mente-Lab/GlyphDraw2"
"CodeGoat24/DreamText" -> "CodeGoat24/Face-diffuser" ["e"=1]
"weichaozeng/TextCtrl" -> "shuyansy/Visual-Text-Processing-survey"
"weichaozeng/TextCtrl" -> "tyxsspa/AnyText2"
"weichaozeng/TextCtrl" -> "ZYM-PKU/UDiffText"
"weichaozeng/TextCtrl" -> "UCSB-NLP-Chang/DiffSTE"
"NikosEfth/crafting-shifts" -> "koninik/HTG_evaluation"
"NikosEfth/crafting-shifts" -> "NikosEfth/im2rbte"
"vwarship/ocrstyle" -> "xuwenxue000/PJ_PREDICT_IMG"
"vwarship/ocrstyle" -> "lxj0276/OCRServer"
"vwarship/ocrstyle" -> "huanglu20124/invoice"
"vwarship/ocrstyle" -> "bigdig/OCR"
"vwarship/ocrstyle" -> "JiangKui007/jx_ocr"
"vwarship/ocrstyle" -> "xuwenxue000/PJ_DARKNET"
"AmemiyaYuko/HandwrittenChineseCharacterRecognition" -> "soloice/Chinese-Character-Recognition"
"AmemiyaYuko/HandwrittenChineseCharacterRecognition" -> "angzhou/anchor"
"AmemiyaYuko/HandwrittenChineseCharacterRecognition" -> "chongyangtao/DeepHCCR"
"HCIILAB/Forward-Implementation-of-Fast-and-Compact-CNN-for-Offline-HCCR" -> "peterWon/CASIA-HWDB-Recognition"
"HCIILAB/Forward-Implementation-of-Fast-and-Compact-CNN-for-Offline-HCCR" -> "zhongzhuoyao/HCCR-GoogLeNet"
"HCIILAB/Forward-Implementation-of-Fast-and-Compact-CNN-for-Offline-HCCR" -> "devonchenc/HCCR-ResNet"
"koninik/DiffusionPen" -> "koninik/HTG_evaluation"
"koninik/DiffusionPen" -> "columbia/turbo"
"koninik/DiffusionPen" -> "koninik/WordStylist"
"shannanyinxiang/UPOCR" -> "shannanyinxiang/ViTEraser"
"shannanyinxiang/UPOCR" -> "ZZZHANG-jx/DocKylin" ["e"=1]
"shannanyinxiang/UPOCR" -> "lcy0604/CTRNet-plus" ["e"=1]
"lxj0276/OCRServer" -> "JiangKui007/jx_ocr"
"NikosEfth/freedom" -> "NikosEfth/crafting-shifts"
"NikosEfth/freedom" -> "billpsomas/rscir"
"NikosEfth/freedom" -> "koninik/HTG_evaluation"
"NikosEfth/freedom" -> "columbia/turbo"
"stupidZZ/FCN_Text" -> "stupidZZ/Symmetry_Text_Line_Detection"
"xiaodiu2010/TextBoxes-TensorFlow" -> "chenxinpeng/SSD_scene_text_detection"
"xiaodiu2010/TextBoxes-TensorFlow" -> "AimeeKing/crnn-tensorflow"
"gxd1994/TextBoxes-TensorFlow" -> "shinjayne/textboxes"
"aimagelab/Alfie" -> "aimagelab/FourBi"
"aimagelab/Alfie" -> "aimagelab/HWD"
"koninik/HTG_evaluation" -> "columbia/turbo"
"koninik/HTG_evaluation" -> "koninik/DiffusionPen"
"chychen/air_writing" -> "chunkyjasper/IAMhwr"
"chychen/air_writing" -> "tobiasfshr/online-handwritten-character-recognition-capacitive-sensors"
"johnsmithm/handwritten-tf-1.0" -> "johnsmithm/handwritten-sequence-tensorflow"
"OPPO-Mente-Lab/GlyphDraw2" -> "jdh-algo/JoyType"
"OPPO-Mente-Lab/GlyphDraw2" -> "OPPO-Mente-Lab/PEA-Diffusion"
"OPPO-Mente-Lab/GlyphDraw2" -> "tyxsspa/AnyText2"
"OPPO-Mente-Lab/GlyphDraw2" -> "CodeGoat24/DreamText"
"OPPO-Mente-Lab/GlyphDraw2" -> "OPPO-Mente-Lab/GlyphDraw"
"OPPO-Mente-Lab/GlyphDraw2" -> "posterllava/PosterLLaVA" ["e"=1]
"OPPO-Mente-Lab/GlyphDraw2" -> "AIGText/GlyphControl-release"
"jdh-algo/JoyType" -> "OPPO-Mente-Lab/GlyphDraw2"
"Stareven233/IF-Font" -> "fubinfb/MSD-Font"
"Stareven233/IF-Font" -> "lsflyt-pku/QT-Font"
"LinkWoong/SURF2017" -> "LinkWoong/Zeroshot-GAN"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "weinman/cnn_lstm_ctc_ocr"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "ilovin/lstm_ctc_ocr"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "oyxhust/CNN-LSTM-CTC-text-recognition"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "jimmyleaf/ocr_tensorflow_cnn"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "synckey/tensorflow_lstm_ctc_ocr"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "Li-Ming-Fan/OCR-DETECTION-CTPN"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "MaybeShewill-CV/CRNN_Tensorflow"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "wushilian/CRNN_Attention_OCR_Chinese"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "Li-Ming-Fan/OCR-CRNN-CTC"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "bear63/sceneReco"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "pannous/tensorflow-ocr"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "bai-shang/crnn_ctc_ocr_tf"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "Bartzi/stn-ocr"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "tongpi/basicOCR"
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" -> "JarveeLee/SynthText_Chinese_version"
"tongpi/basicOCR" -> "xiaodiu2010/TextBoxes-TensorFlow"
"tongpi/basicOCR" -> "ilovin/lstm_ctc_ocr"
"tongpi/basicOCR" -> "tongpi/synthtext100kCH"
"tongpi/basicOCR" -> "chenxinpeng/SSD_scene_text_detection"
"tongpi/basicOCR" -> "JarveeLee/SynthText_Chinese_version"
"tongpi/basicOCR" -> "da03/Attention-OCR"
"tongpi/basicOCR" -> "A-bone1/Attention-ocr-Chinese-Version"
"tongpi/basicOCR" -> "wang-tf/Chinese_OCR_synthetic_data"
"tongpi/basicOCR" -> "dengdan/seglink"
"tongpi/basicOCR" -> "wushilian/CRNN_Attention_OCR_Chinese"
"tongpi/basicOCR" -> "bear63/sceneReco"
"tongpi/basicOCR" -> "pannous/tensorflow-ocr"
"tongpi/basicOCR" -> "MhLiao/TextBoxes"
"tongpi/basicOCR" -> "jimmyleaf/ocr_tensorflow_cnn"
"tongpi/basicOCR" -> "tianzhi0549/CTPN"
"Belval/TextRecognitionDataGenerator" -> "Sanster/text_renderer"
"Belval/TextRecognitionDataGenerator" -> "clovaai/deep-text-recognition-benchmark"
"Belval/TextRecognitionDataGenerator" -> "ankush-me/SynthText"
"Belval/TextRecognitionDataGenerator" -> "JarveeLee/SynthText_Chinese_version"
"Belval/TextRecognitionDataGenerator" -> "clovaai/CRAFT-pytorch"
"Belval/TextRecognitionDataGenerator" -> "MhLiao/DB"
"Belval/TextRecognitionDataGenerator" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"Belval/TextRecognitionDataGenerator" -> "YCG09/chinese_ocr"
"Belval/TextRecognitionDataGenerator" -> "meijieru/crnn.pytorch"
"Belval/TextRecognitionDataGenerator" -> "eragonruan/text-detection-ctpn"
"Belval/TextRecognitionDataGenerator" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"Belval/TextRecognitionDataGenerator" -> "oh-my-ocr/text_renderer"
"Belval/TextRecognitionDataGenerator" -> "xiaofengShi/CHINESE-OCR"
"Belval/TextRecognitionDataGenerator" -> "argman/EAST"
"Belval/TextRecognitionDataGenerator" -> "bgshih/crnn"
"bgshih/seglink" -> "dengdan/seglink"
"bgshih/seglink" -> "BestSonny/SSTD"
"bgshih/seglink" -> "tonghe90/textspotter"
"bgshih/seglink" -> "MhLiao/TextBoxes"
"bgshih/seglink" -> "stupidZZ/FCN_Text"
"bgshih/seglink" -> "ZJULearning/pixel_link"
"bgshih/seglink" -> "JarveeLee/SynthText_Chinese_version"
"bgshih/seglink" -> "lluisgomez/TextProposals"
"bgshih/seglink" -> "MhLiao/TextBoxes_plusplus"
"bgshih/seglink" -> "xhzdeng/crpn"
"bgshih/seglink" -> "MichalBusta/DeepTextSpotter"
"bgshih/seglink" -> "Yuliang-Liu/Curve-Text-Detector"
"bgshih/seglink" -> "chenxinpeng/SSD_scene_text_detection"
"bgshih/seglink" -> "HotaekHan/SSTDNet"
"bgshih/seglink" -> "lvpengyuan/masktextspotter.caffe2"
"Bartzi/stn-ocr" -> "Bartzi/see"
"Bartzi/stn-ocr" -> "MichalBusta/DeepTextSpotter"
"Bartzi/stn-ocr" -> "da03/Attention-OCR"
"Bartzi/stn-ocr" -> "MhLiao/TextBoxes"
"Bartzi/stn-ocr" -> "JarveeLee/SynthText_Chinese_version"
"Bartzi/stn-ocr" -> "MhLiao/TextBoxes_plusplus"
"Bartzi/stn-ocr" -> "weinman/cnn_lstm_ctc_ocr"
"Bartzi/stn-ocr" -> "dengdan/seglink"
"Bartzi/stn-ocr" -> "Yuliang-Liu/Curve-Text-Detector"
"Bartzi/stn-ocr" -> "tonghe90/textspotter"
"Bartzi/stn-ocr" -> "Canjie-Luo/MORAN_v2"
"Bartzi/stn-ocr" -> "tianzhi0549/CTPN"
"Bartzi/stn-ocr" -> "summerlvsong/Aggregation-Cross-Entropy"
"Bartzi/stn-ocr" -> "bgshih/aster"
"Bartzi/stn-ocr" -> "oyxhust/CNN-LSTM-CTC-text-recognition"
"argman/EAST" -> "huoyijie/AdvancedEAST"
"argman/EAST" -> "eragonruan/text-detection-ctpn"
"argman/EAST" -> "ankush-me/SynthText"
"argman/EAST" -> "bgshih/crnn"
"argman/EAST" -> "ZJULearning/pixel_link"
"argman/EAST" -> "MhLiao/TextBoxes_plusplus"
"argman/EAST" -> "chongyangtao/Awesome-Scene-Text-Recognition"
"argman/EAST" -> "whai362/PSENet"
"argman/EAST" -> "hwalsuklee/awesome-deep-text-detection-recognition"
"argman/EAST" -> "tianzhi0549/CTPN"
"argman/EAST" -> "meijieru/crnn.pytorch"
"argman/EAST" -> "MhLiao/DB"
"argman/EAST" -> "dengdan/seglink"
"argman/EAST" -> "JarveeLee/SynthText_Chinese_version"
"argman/EAST" -> "jiangxiluning/FOTS.PyTorch"
"Grzego/handwriting-generation" -> "greydanus/scribe"
"Grzego/handwriting-generation" -> "Belval/TextRecognitionDataGenerator"
"Grzego/handwriting-generation" -> "amzn/convolutional-handwriting-gan"
"Grzego/handwriting-generation" -> "snowkylin/rnn-handwriting-generation"
"Grzego/handwriting-generation" -> "swechhasingh/Handwriting-synthesis"
"Grzego/handwriting-generation" -> "sjvasquez/handwriting-synthesis"
"Grzego/handwriting-generation" -> "hardmaru/write-rnn-tensorflow"
"Grzego/handwriting-generation" -> "JarveeLee/SynthText_Chinese_version"
"Grzego/handwriting-generation" -> "da03/Attention-OCR"
"Grzego/handwriting-generation" -> "Sanster/text_renderer"
"Grzego/handwriting-generation" -> "Canjie-Luo/Text-Image-Augmentation"
"Grzego/handwriting-generation" -> "ZJULearning/pixel_link"
"Grzego/handwriting-generation" -> "bgshih/aster"
"Grzego/handwriting-generation" -> "Jyouhou/SceneTextPapers"
"Grzego/handwriting-generation" -> "dengdan/seglink"
"JarveeLee/SynthText_Chinese_version" -> "ankush-me/SynthText"
"JarveeLee/SynthText_Chinese_version" -> "Sanster/text_renderer"
"JarveeLee/SynthText_Chinese_version" -> "senlinuc/caffe_ocr"
"JarveeLee/SynthText_Chinese_version" -> "whai362/PSENet"
"JarveeLee/SynthText_Chinese_version" -> "bear63/sceneReco"
"JarveeLee/SynthText_Chinese_version" -> "Belval/TextRecognitionDataGenerator"
"JarveeLee/SynthText_Chinese_version" -> "YCG09/chinese_ocr"
"JarveeLee/SynthText_Chinese_version" -> "wang-tf/Chinese_OCR_synthetic_data"
"JarveeLee/SynthText_Chinese_version" -> "tianzhi0549/CTPN"
"JarveeLee/SynthText_Chinese_version" -> "huoyijie/AdvancedEAST"
"JarveeLee/SynthText_Chinese_version" -> "MhLiao/TextBoxes_plusplus"
"JarveeLee/SynthText_Chinese_version" -> "ZJULearning/pixel_link"
"JarveeLee/SynthText_Chinese_version" -> "Yuliang-Liu/Curve-Text-Detector"
"JarveeLee/SynthText_Chinese_version" -> "xiaomaxiao/keras_ocr"
"JarveeLee/SynthText_Chinese_version" -> "bgshih/aster"
"Belval/CRNN" -> "MaybeShewill-CV/CRNN_Tensorflow"
"Belval/CRNN" -> "ilovin/lstm_ctc_ocr"
"Belval/CRNN" -> "wushilian/CRNN_Attention_OCR_Chinese"
"Belval/CRNN" -> "solivr/tf-crnn"
"Belval/CRNN" -> "AimeeKing/crnn-tensorflow"
"Belval/CRNN" -> "bear63/sceneReco"
"Belval/CRNN" -> "YoungMiao/crnn"
"Belval/CRNN" -> "bgshih/crnn"
"Belval/CRNN" -> "A-bone1/Attention-ocr-Chinese-Version"
"Belval/CRNN" -> "janzd/CRNN"
"Belval/CRNN" -> "ZJULearning/pixel_link"
"Belval/CRNN" -> "Li-Ming-Fan/OCR-DETECTION-CTPN"
"Belval/CRNN" -> "bgshih/seglink"
"Belval/CRNN" -> "JarveeLee/SynthText_Chinese_version"
"Belval/CRNN" -> "dengdan/seglink"
"bear63/sceneReco" -> "tianzhi0549/CTPN"
"bear63/sceneReco" -> "bgshih/crnn"
"bear63/sceneReco" -> "JarveeLee/SynthText_Chinese_version"
"bear63/sceneReco" -> "eragonruan/text-detection-ctpn"
"bear63/sceneReco" -> "senlinuc/caffe_ocr"
"bear63/sceneReco" -> "meijieru/crnn.pytorch"
"bear63/sceneReco" -> "xiaomaxiao/keras_ocr"
"bear63/sceneReco" -> "MaybeShewill-CV/CRNN_Tensorflow"
"bear63/sceneReco" -> "ankush-me/SynthText"
"bear63/sceneReco" -> "JinpengLI/deep_ocr"
"bear63/sceneReco" -> "chineseocr/chinese-ocr"
"bear63/sceneReco" -> "YCG09/chinese_ocr"
"bear63/sceneReco" -> "wushilian/CRNN_Attention_OCR_Chinese"
"bear63/sceneReco" -> "huoyijie/AdvancedEAST"
"bear63/sceneReco" -> "Sierkinhane/CRNN_Chinese_Characters_Rec"
"MichalBusta/DeepTextSpotter" -> "tonghe90/textspotter"
"MichalBusta/DeepTextSpotter" -> "Bartzi/see"
"MichalBusta/DeepTextSpotter" -> "lvpengyuan/masktextspotter.caffe2"
"MichalBusta/DeepTextSpotter" -> "Bartzi/stn-ocr"
"MichalBusta/DeepTextSpotter" -> "MichalBusta/E2E-MLT"
"MichalBusta/DeepTextSpotter" -> "BestSonny/SSTD"
"MichalBusta/DeepTextSpotter" -> "MhLiao/TextBoxes"
"MichalBusta/DeepTextSpotter" -> "xhzdeng/crpn"
"MichalBusta/DeepTextSpotter" -> "MhLiao/TextBoxes_plusplus"
"MichalBusta/DeepTextSpotter" -> "ZJULearning/pixel_link"
"MichalBusta/DeepTextSpotter" -> "bgshih/seglink"
"MichalBusta/DeepTextSpotter" -> "Yuliang-Liu/Curve-Text-Detector"
"MichalBusta/DeepTextSpotter" -> "lluisgomez/TextProposals"
"MichalBusta/DeepTextSpotter" -> "HsiehYiChia/Scene-text-recognition"
"MichalBusta/DeepTextSpotter" -> "bgshih/aster"
"xuwenxue000/PJ_PREDICT_IMG" -> "xuwenxue000/PJ_DARKNET"
"xuwenxue000/PJ_PREDICT_IMG" -> "huanglu20124/invoice"
"xuwenxue000/PJ_PREDICT_IMG" -> "vwarship/ocrstyle"
"xuwenxue000/PJ_PREDICT_IMG" -> "JiangKui007/jx_ocr"
"xuwenxue000/PJ_PREDICT_IMG" -> "lxj0276/OCRServer"
"xuwenxue000/PJ_PREDICT_IMG" -> "ccccccmd/ReCapcha"
"yghstill/deepLearning_OCR" -> "jimmyleaf/ocr_tensorflow_cnn"
"yghstill/deepLearning_OCR" -> "sam-ke/idCardOcr"
"yghstill/deepLearning_OCR" -> "BIGPPWONG/idcardocr"
"emedvedev/attention-ocr" -> "da03/Attention-OCR"
"emedvedev/attention-ocr" -> "pannous/tensorflow-ocr"
"emedvedev/attention-ocr" -> "weinman/cnn_lstm_ctc_ocr"
"emedvedev/attention-ocr" -> "Bartzi/see"
"emedvedev/attention-ocr" -> "WithSecureLabs/captcha22"
"emedvedev/attention-ocr" -> "A-bone1/Attention-ocr-Chinese-Version"
"emedvedev/attention-ocr" -> "Bartzi/stn-ocr"
"emedvedev/attention-ocr" -> "tianzhi0549/CTPN"
"emedvedev/attention-ocr" -> "bgshih/aster"
"emedvedev/attention-ocr" -> "wushilian/CRNN_Attention_OCR_Chinese"
"emedvedev/attention-ocr" -> "MaybeShewill-CV/CRNN_Tensorflow"
"emedvedev/attention-ocr" -> "dengdan/seglink"
"emedvedev/attention-ocr" -> "bgshih/crnn"
"emedvedev/attention-ocr" -> "MhLiao/TextBoxes_plusplus"
"emedvedev/attention-ocr" -> "argman/EAST"
"mtyylx/MLND" -> "ypwhs/dogs_vs_cats"
"jimmyleaf/ocr_tensorflow_cnn" -> "ilovin/lstm_ctc_ocr"
"jimmyleaf/ocr_tensorflow_cnn" -> "synckey/tensorflow_lstm_ctc_ocr"
"jimmyleaf/ocr_tensorflow_cnn" -> "watsonyanghx/CNN_LSTM_CTC_Tensorflow"
"jimmyleaf/ocr_tensorflow_cnn" -> "yghstill/deepLearning_OCR"
"jimmyleaf/ocr_tensorflow_cnn" -> "weinman/cnn_lstm_ctc_ocr"
"jimmyleaf/ocr_tensorflow_cnn" -> "bai-shang/crnn_ctc_ocr_tf"
"jimmyleaf/ocr_tensorflow_cnn" -> "bear63/sceneReco"
"jimmyleaf/ocr_tensorflow_cnn" -> "tongpi/basicOCR"
"jimmyleaf/ocr_tensorflow_cnn" -> "BIGPPWONG/idcardocr"
"jimmyleaf/ocr_tensorflow_cnn" -> "JarveeLee/SynthText_Chinese_version"
"jimmyleaf/ocr_tensorflow_cnn" -> "xiaomaxiao/keras_ocr"
"jimmyleaf/ocr_tensorflow_cnn" -> "senlinuc/caffe_ocr"
"jimmyleaf/ocr_tensorflow_cnn" -> "jiangxiluning/chinese-ocr"
"jimmyleaf/ocr_tensorflow_cnn" -> "AstarLight/CPS-OCR-Engine"
"jimmyleaf/ocr_tensorflow_cnn" -> "Belval/CRNN"
"dengdan/seglink" -> "bgshih/seglink"
"dengdan/seglink" -> "ZJULearning/pixel_link"
"dengdan/seglink" -> "tianzhi0549/CTPN"
"dengdan/seglink" -> "BestSonny/SSTD"
"dengdan/seglink" -> "Bartzi/see"
"dengdan/seglink" -> "MhLiao/TextBoxes"
"dengdan/seglink" -> "argman/EAST"
"dengdan/seglink" -> "MhLiao/TextBoxes_plusplus"
"dengdan/seglink" -> "JarveeLee/SynthText_Chinese_version"
"dengdan/seglink" -> "huoyijie/AdvancedEAST"
"dengdan/seglink" -> "ankush-me/SynthText"
"dengdan/seglink" -> "ilovin/lstm_ctc_ocr"
"dengdan/seglink" -> "da03/Attention-OCR"
"dengdan/seglink" -> "Bartzi/stn-ocr"
"dengdan/seglink" -> "bear63/sceneReco"
"xuwenxue000/PJ_DARKNET" -> "xuwenxue000/PJ_PREDICT_IMG"
"tongpi/synthtext100kCH" -> "AimeeKing/crnn-tensorflow"
"mvoelk/ssd_detectors" -> "qjadud1994/Text_Detector"
"mvoelk/ssd_detectors" -> "qjadud1994/CRNN-Keras"
"mvoelk/ssd_detectors" -> "MhLiao/TextBoxes_plusplus"
"mvoelk/ssd_detectors" -> "xuannianz/DifferentiableBinarization"
"mvoelk/ssd_detectors" -> "Shun14/TextBoxes_plusplus_Tensorflow"
"mvoelk/ssd_detectors" -> "autonise/CRAFT-Remade"
"mvoelk/ssd_detectors" -> "Bartzi/see"
"mvoelk/ssd_detectors" -> "Neerajj9/Text-Detection-using-Yolo-Algorithm-in-keras-tensorflow"
"YoungMiao/crnn" -> "YoungMiao/synthdata-zh"
"YoungMiao/crnn" -> "DataFountainCode/huawei_code_share" ["e"=1]
"YoungMiao/crnn" -> "Aurora11111/crnn-train-pytorch"
"YoungMiao/crnn" -> "Belval/CRNN"
"YoungMiao/crnn" -> "Aurora11111/TextRecognitionDataGenerator"
"YoungMiao/crnn" -> "wushilian/CRNN_Attention_OCR_Chinese"
"hardmaru/pytorch_notebooks" -> "hardmaru/estool" ["e"=1]
"hardmaru/pytorch_notebooks" -> "axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation"
"hardmaru/pytorch_notebooks" -> "sagelywizard/pytorch-mdn"
"hardmaru/pytorch_notebooks" -> "sksq96/pytorch-mdn"
"hardmaru/pytorch_notebooks" -> "tonyduan/mixture-density-network"
"hardmaru/pytorch_notebooks" -> "hardmaru/sketch-rnn-datasets"
"hardmaru/pytorch_notebooks" -> "hardmaru/WorldModelsExperiments" ["e"=1]
"hardmaru/pytorch_notebooks" -> "hardmaru/write-rnn-tensorflow"
"solivr/tf-crnn" -> "Belval/CRNN"
"solivr/tf-crnn" -> "MaybeShewill-CV/CRNN_Tensorflow"
"solivr/tf-crnn" -> "gasparian/CRNN-OCR-lite" ["e"=1]
"solivr/tf-crnn" -> "ilovin/lstm_ctc_ocr"
"solivr/tf-crnn" -> "AimeeKing/crnn-tensorflow"
"solivr/tf-crnn" -> "weinman/cnn_lstm_ctc_ocr"
"solivr/tf-crnn" -> "bai-shang/crnn_ctc_ocr_tf"
"solivr/tf-crnn" -> "bear63/sceneReco"
"solivr/tf-crnn" -> "frereit/TensorflowHandwritingRecognition" ["e"=1]
"solivr/tf-crnn" -> "wushilian/CRNN_Attention_OCR_Chinese"
"solivr/tf-crnn" -> "Bartzi/see"
"solivr/tf-crnn" -> "johnsmithm/handwritten-tf-1.0"
"solivr/tf-crnn" -> "bgshih/crnn"
"solivr/tf-crnn" -> "jiaoml1996/ScenceRecognition"
"solivr/tf-crnn" -> "Li-Ming-Fan/OCR-DETECTION-CTPN"
"periannath/neural-fonts" -> "yjjng11/Neural-fonts-webapp"
"periannath/neural-fonts" -> "clovaai/dmfont"
"periannath/neural-fonts" -> "hngskj/Font-VAE"
"periannath/neural-fonts" -> "MINED30/HAN2HAN"
"DeepSystems/supervisely-tutorials" -> "Bartzi/stn-ocr"
"DeepSystems/supervisely-tutorials" -> "johnsmithm/handwritten-tf-1.0"
"DeepSystems/supervisely-tutorials" -> "supervisely/supervisely" ["e"=1]
"DeepSystems/supervisely-tutorials" -> "hs105/Deep-Learning-for-OCR"
"DeepSystems/supervisely-tutorials" -> "Tony607/keras-image-ocr"
"weinman/cnn_lstm_ctc_ocr" -> "watsonyanghx/CNN_LSTM_CTC_Tensorflow"
"weinman/cnn_lstm_ctc_ocr" -> "ilovin/lstm_ctc_ocr"
"weinman/cnn_lstm_ctc_ocr" -> "oyxhust/CNN-LSTM-CTC-text-recognition"
"weinman/cnn_lstm_ctc_ocr" -> "A-bone1/Attention-ocr-Chinese-Version"
"weinman/cnn_lstm_ctc_ocr" -> "da03/Attention-OCR"
"weinman/cnn_lstm_ctc_ocr" -> "Bartzi/stn-ocr"
"weinman/cnn_lstm_ctc_ocr" -> "emedvedev/attention-ocr"
"weinman/cnn_lstm_ctc_ocr" -> "wushilian/CRNN_Attention_OCR_Chinese"
"weinman/cnn_lstm_ctc_ocr" -> "Li-Ming-Fan/OCR-CRNN-CTC"
"weinman/cnn_lstm_ctc_ocr" -> "Bartzi/see"
"weinman/cnn_lstm_ctc_ocr" -> "MaybeShewill-CV/CRNN_Tensorflow"
"weinman/cnn_lstm_ctc_ocr" -> "pannous/tensorflow-ocr"
"weinman/cnn_lstm_ctc_ocr" -> "bgshih/crnn"
"weinman/cnn_lstm_ctc_ocr" -> "bgshih/aster"
"weinman/cnn_lstm_ctc_ocr" -> "MhLiao/TextBoxes_plusplus"
"AimeeKing/crnn-tensorflow" -> "tongpi/synthtext100kCH"
"hardmaru/sketch-rnn-datasets" -> "hardmaru/sketch-rnn"
"hardmaru/sketch-rnn-datasets" -> "hardmaru/rnn-tutorial"
"hardmaru/sketch-rnn-datasets" -> "alexis-jacq/Pytorch-Sketch-RNN"
"hardmaru/sketch-rnn-datasets" -> "SketchyScene/SketchyScene" ["e"=1]
"yjjng11/Neural-fonts-webapp" -> "periannath/neural-fonts"
"alexis-jacq/Pytorch-Sketch-RNN" -> "hardmaru/sketch-rnn-datasets"
"alexis-jacq/Pytorch-Sketch-RNN" -> "OhataKenji/SketchRNN-Pytorch"
"junlulocky/PyBGMM" -> "junlulocky/bayesian-deep-learning-notes"
"shinjayne/shinTB" -> "gxd1994/TextBoxes-TensorFlow"
"shinjayne/shinTB" -> "shinjayne/textboxes"
"shinjayne/shinTB" -> "Shun14/TextBoxes_plusplus_Tensorflow"
"shinjayne/textboxes" -> "gxd1994/TextBoxes-TensorFlow"
"eragonruan/text-detection-ctpn" ["l"="46.262,7.249"]
"YCG09/chinese_ocr" ["l"="46.283,7.28"]
"xiaofengShi/CHINESE-OCR" ["l"="46.287,7.304"]
"tianzhi0549/CTPN" ["l"="46.294,7.178"]
"argman/EAST" ["l"="46.315,7.213"]
"bear63/sceneReco" ["l"="46.286,7.2"]
"bgshih/crnn" ["l"="46.277,7.176"]
"meijieru/crnn.pytorch" ["l"="46.318,7.247"]
"chineseocr/chineseocr" ["l"="46.24,7.323"]
"Sierkinhane/CRNN_Chinese_Characters_Rec" ["l"="46.314,7.282"]
"huoyijie/AdvancedEAST" ["l"="46.354,7.234"]
"ankush-me/SynthText" ["l"="46.341,7.223"]
"Belval/TextRecognitionDataGenerator" ["l"="46.32,7.308"]
"MaybeShewill-CV/CRNN_Tensorflow" ["l"="46.311,7.192"]
"JarveeLee/SynthText_Chinese_version" ["l"="46.34,7.204"]
"hwalsuklee/awesome-deep-text-detection-recognition" ["l"="46.335,7.271"]
"chineseocr/chinese-ocr" ["l"="46.25,7.19"]
"JinpengLI/deep_ocr" ["l"="46.232,7.216"]
"senlinuc/caffe_ocr" ["l"="46.28,7.234"]
"chineseocr/new-text-detection-ctpn" ["l"="46.159,7.161"]
"ilovin/lstm_ctc_ocr" ["l"="46.284,7.15"]
"dengdan/seglink" ["l"="46.34,7.159"]
"tongpi/basicOCR" ["l"="46.311,7.14"]
"wushilian/CRNN_Attention_OCR_Chinese" ["l"="46.32,7.161"]
"xiaomaxiao/keras_ocr" ["l"="46.301,7.231"]
"wanghaisheng/awesome-ocr" ["l"="46.266,7.206"]
"breezedeus/CnOCR" ["l"="46.259,7.366"]
"breezedeus/CnSTD" ["l"="46.361,7.379"]
"DayBreak-u/chineseocr_lite" ["l"="46.206,7.407"]
"Sanster/text_renderer" ["l"="46.366,7.28"]
"RapidAI/RapidOCR" ["l"="45.783,2.557"]
"alisen39/TrWebOCR" ["l"="46.22,7.365"]
"myhub/tr" ["l"="46.294,7.36"]
"chineseocr/darknet-ocr" ["l"="46.284,7.33"]
"diaomin/crnn-mxnet-chinese-text-recognition" ["l"="46.225,7.245"]
"PaddlePaddle/PaddleOCR" ["l"="50.03,29.7"]
"MhLiao/DB" ["l"="46.396,7.29"]
"Gsllchb/Handright" ["l"="47.044,7.602"]
"HaujetZhao/QuickHand" ["l"="47.074,7.649"]
"why20021008/hand-write" ["l"="47.088,7.622"]
"kivvi3412/HandWrite" ["l"="47.004,7.598"]
"guofei9987/blind_watermark" ["l"="-5.741,17.419"]
"TransparentLC/WechatMomentScreenshot" ["l"="-48.834,12.779"]
"thunlp/WantWords" ["l"="-48.77,12.605"]
"dailenson/SDT" ["l"="46.902,7.559"]
"itorr/nbnhhsh" ["l"="-53.461,-19.578"]
"ZERO-A-ONE/BullshitGenerator-handwrite" ["l"="47.146,7.615"]
"OpenWebGAL/WebGAL" ["l"="-36.282,19.776"]
"menzi11/BullshitGenerator" ["l"="-4.962,17.715"]
"kaonashi-tyc/zi2zi" ["l"="45.814,29.278"]
"CodFrm/cxmooc-tools" ["l"="-47.152,12.716"]
"Icalingua-plus-plus/Icalingua-plus-plus" ["l"="-53.627,-18.702"]
"Baiyuetribe/paper2gui" ["l"="-48.719,12.649"]
"sjvasquez/handwriting-synthesis" ["l"="46.45,7.547"]
"Grzego/handwriting-generation" ["l"="46.439,7.427"]
"saurabhdaware/text-to-handwriting" ["l"="29.482,-26.828"]
"swechhasingh/Handwriting-synthesis" ["l"="46.512,7.526"]
"GirkovArpa/calligrapher-ai" ["l"="46.422,7.618"]
"otuva/handwriting-synthesis" ["l"="46.494,7.564"]
"greydanus/scribe" ["l"="46.468,7.578"]
"EvilPort2/Sign-Language" ["l"="30.375,30.149"]
"amzn/convolutional-handwriting-gan" ["l"="46.562,7.494"]
"hardmaru/write-rnn-tensorflow" ["l"="46.453,7.65"]
"NVIDIA/FastPhotoStyle" ["l"="45.547,29.157"]
"carpedm20/ENAS-pytorch" ["l"="52.891,33.983"]
"szcom/rnnlib" ["l"="46.494,7.642"]
"clovaai/donut" ["l"="46.254,6.071"]
"ocrbook/ocrinaction" ["l"="46.505,7.29"]
"lvpengyuan/corner" ["l"="46.446,7.221"]
"chineseocr/table-ocr" ["l"="46.465,6.134"]
"limengyang1992/seq2seq-layout-analysis" ["l"="46.485,6.103"]
"tommyMessi/crnn_ctc-centerloss" ["l"="46.496,6.113"]
"Vincent131499/Chinese-OCR3" ["l"="46.62,7.242"]
"HCIILAB/Scene-Text-Recognition" ["l"="46.483,7.272"]
"chenjun2hao/Attention_ocr.pytorch" ["l"="46.413,7.231"]
"Canjie-Luo/Text-Image-Augmentation" ["l"="46.497,7.263"]
"WenmuZhou/OCR_DataSet" ["l"="46.427,7.313"]
"wenwenyu/MASTER-pytorch" ["l"="46.461,6.081"]
"Wang-Tianwei/Decoupled-attention-network" ["l"="46.517,7.261"]
"Yuliang-Liu/bezier_curve_text_spotting" ["l"="46.507,7.275"]
"BADBADBADBOY/pytorchOCR" ["l"="46.446,7.325"]
"WenmuZhou/PAN.pytorch" ["l"="46.467,7.263"]
"Rid7/Table-OCR" ["l"="46.489,6.14"]
"Calamari-OCR/calamari" ["l"="46.212,7.176"]
"mittagessen/kraken" ["l"="47.418,6.383"]
"ocropus-archive/DUP-ocropy" ["l"="46.191,7.159"]
"Calamari-OCR/calamari_models" ["l"="47.425,6.409"]
"OCR4all/OCR4all" ["l"="47.388,6.375"]
"dhlab-epfl/dhSegment" ["l"="47.395,6.442"]
"OCR4all/LAREX" ["l"="47.376,6.402"]
"kba/awesome-ocr" ["l"="46.208,7.214"]
"NVlabs/ocropus3" ["l"="47.371,6.5"]
"emedvedev/attention-ocr" ["l"="46.294,7.116"]
"da03/Attention-OCR" ["l"="46.304,7.159"]
"qurator-spk/eynollah" ["l"="47.405,6.41"]
"lquirosd/P2PaLA" ["l"="47.426,6.462"]
"UB-Mannheim/ocr-fileformat" ["l"="47.367,6.345"]
"MhLiao/TextBoxes_plusplus" ["l"="46.361,7.162"]
"ypwhs/dl-engineer-guidebook" ["l"="46.117,6.929"]
"ypwhs/deeplearning-models" ["l"="46.108,6.874"]
"ypwhs/dogs_vs_cats" ["l"="46.064,6.916"]
"yhangf/ML-NOTE" ["l"="50.484,28.109"]
"ypwhs/baiduyun_deeplearning_competition" ["l"="46.212,7.067"]
"lpty/nlp_base" ["l"="53.499,27.342"]
"ypwhs/captcha_break" ["l"="47.899,22.215"]
"jindongwang/transferlearning-tutorial" ["l"="51.269,37.629"]
"jianzhu/dl-notes" ["l"="53.522,27.141"]
"clovaai/deep-text-recognition-benchmark" ["l"="46.351,7.323"]
"clovaai/CRAFT-pytorch" ["l"="46.374,7.311"]
"open-mmlab/mmocr" ["l"="46.396,7.37"]
"whai362/PSENet" ["l"="46.4,7.241"]
"ayumiymk/aster.pytorch" ["l"="46.456,7.254"]
"backtime92/CRAFT-Reimplementation" ["l"="46.476,7.249"]
"Jyouhou/SceneTextPapers" ["l"="46.433,7.228"]
"Roujack/mathAI" ["l"="46.215,7.28"]
"LinXueyuanStdio/LaTeX_OCR_PRO" ["l"="46.671,5.755"]
"LinXueyuanStdio/LaTeX_OCR" ["l"="46.663,5.73"]
"whywhs/Pytorch-Handwritten-Mathematical-Expression-Recognition" ["l"="46.727,5.669"]
"harvardnlp/im2markup" ["l"="46.632,5.686"]
"falvaro/seshat" ["l"="46.692,5.653"]
"vipstone/faceai" ["l"="33.371,29.563"]
"jungomi/math-formula-recognition" ["l"="46.7,5.682"]
"Bartzi/see" ["l"="46.376,7.148"]
"Bartzi/stn-ocr" ["l"="46.359,7.143"]
"MichalBusta/DeepTextSpotter" ["l"="46.4,7.12"]
"bgshih/aster" ["l"="46.408,7.199"]
"Canjie-Luo/MORAN_v2" ["l"="46.457,7.216"]
"ZJULearning/pixel_link" ["l"="46.385,7.183"]
"Yuliang-Liu/Curve-Text-Detector" ["l"="46.422,7.188"]
"tonghe90/textspotter" ["l"="46.412,7.14"]
"chongyangtao/Awesome-Scene-Text-Recognition" ["l"="46.322,7.176"]
"summerlvsong/Aggregation-Cross-Entropy" ["l"="46.484,7.217"]
"lvpengyuan/masktextspotter.caffe2" ["l"="46.457,7.168"]
"bai-shang/crnn_ctc_ocr_tf" ["l"="46.362,7.214"]
"GlassyWing/text-detection-ocr" ["l"="46.335,7.294"]
"jiangxiluning/chinese-ocr" ["l"="46.29,7.218"]
"AstarLight/Lets_OCR" ["l"="46.358,7.258"]
"opconty/pytorch_ctpn" ["l"="46.403,7.261"]
"AstarLight/CPS-OCR-Engine" ["l"="46.287,7.261"]
"HaozhengLi/EAST_ICPR" ["l"="46.622,6.985"]
"zfxxfeng/cnn_lstm_ctc_ocr_for_ICPR" ["l"="46.639,6.954"]
"deepthinking-qichao/EAST_ICPR2018" ["l"="46.656,6.964"]
"xieyufei1993/InceptText-Tensorflow" ["l"="46.503,7.092"]
"oh-my-ocr/text_renderer" ["l"="46.459,7.308"]
"WenmuZhou/DBNet.pytorch" ["l"="46.443,7.296"]
"whitelok/image-text-localization-recognition" ["l"="46.386,7.204"]
"Megvii-CSG/MegReader" ["l"="46.5,7.23"]
"HCIILAB/Scene-Text-Detection" ["l"="46.494,7.245"]
"princewang1994/TextSnake.pytorch" ["l"="46.454,7.202"]
"jiangxiluning/FOTS.PyTorch" ["l"="46.43,7.206"]
"msight-tech/research-charnet" ["l"="46.46,7.24"]
"Walleclipse/ChineseAddress_OCR" ["l"="46.378,7.23"]
"hsddlz/faster-CTPN" ["l"="46.391,7.221"]
"ooooverflow/chinese-ocr" ["l"="46.351,7.275"]
"yinchangchang/ocr_densenet" ["l"="46.34,7.252"]
"chizhanyuefeng/Chinese_OCR_CNN-RNN-CTC" ["l"="46.427,7.072"]
"A-bone1/Attention-ocr-Chinese-Version" ["l"="46.354,7.179"]
"BADBADBADBOY/DBnet-lite.pytorch" ["l"="46.443,7.375"]
"Vipermdl/OCR_detection_IC15" ["l"="46.494,7.137"]
"wang-tf/Chinese_OCR_synthetic_data" ["l"="46.422,7.218"]
"wangpengnorman/SAR-Strong-Baseline-for-Text-Recognition" ["l"="46.538,7.233"]
"JiageWang/hand-writing-recognition" ["l"="46.335,7.438"]
"chenyr0021/Chinese_character_recognition" ["l"="46.318,7.435"]
"peterWon/CASIA-HWDB-Recognition" ["l"="46.371,7.443"]
"integeruser/CASIA-HWDB1.1-cnn" ["l"="46.349,7.449"]
"guanshuicheng/invoice" ["l"="46.148,7.375"]
"liuhu-bigeye/enctc.crnn" ["l"="46.554,7.188"]
"tommyMessi/crnn_ctc-pos" ["l"="46.573,6.148"]
"Li-Ming-Fan/OCR-DETECTION-CTPN" ["l"="46.328,7.148"]
"YoungMiao/crnn" ["l"="46.226,7.134"]
"jimmyleaf/ocr_tensorflow_cnn" ["l"="46.249,7.169"]
"yooongchun/Invoice2Excel" ["l"="46.042,7.42"]
"sanluan/einvoice" ["l"="46.062,7.435"]
"mvpboss1004/invoice_extraction" ["l"="46.029,7.446"]
"huanglu20124/invoice" ["l"="46.015,7.424"]
"xuwenxue000/PJ_PREDICT_IMG" ["l"="45.994,7.438"]
"shuoGG1239/Image2Text" ["l"="46.099,7.289"]
"StevenQi7/ImageOcr" ["l"="46.047,7.296"]
"chenguanyou/CharacterRecognition" ["l"="46.005,7.29"]
"simonflueckiger/tesserocr-windows_build" ["l"="46.064,7.188"]
"sirfz/tesserocr" ["l"="46.134,7.178"]
"BIGPPWONG/idcardocr" ["l"="46.164,7.211"]
"sam-ke/idCardOcr" ["l"="46.127,7.22"]
"isee15/Card-Ocr" ["l"="46.165,7.233"]
"yghstill/deepLearning_OCR" ["l"="46.168,7.19"]
"XieZhiFa/IdCardOCR" ["l"="60.311,-13.811"]
"Mingtzge/2019-CCF-BDCI-OCR-MCZJ-OCR-IdentificationIDElement" ["l"="46.546,6.155"]
"hzli-ucas/CCF-OCR" ["l"="46.097,7.224"]
"portumo/chinese-bankCard-idcard-recognition" ["l"="46.069,7.227"]
"wzb96/idCardRecognition" ["l"="60.447,-14.067"]
"evilgix/Evil" ["l"="44.67,-22.88"]
"chenguanyou/BaiduTextApi" ["l"="45.971,7.29"]
"jjcheer/ocrcn_tf2" ["l"="46.315,7.386"]
"jinxiwang/ocr_TDR" ["l"="46.355,7.411"]
"taosir/cnn_handwritten_chinese_recognition" ["l"="46.338,7.389"]
"Mignet/chinese-write-handling-char-recognition" ["l"="46.324,7.456"]
"MachineLP/OCR_Keras" ["l"="46.337,7.352"]
"liuheng92/tensorflow_PSENet" ["l"="46.439,7.193"]
"WenmuZhou/PSENet.pytorch" ["l"="46.434,7.255"]
"whai362/pan_pp.pytorch" ["l"="46.494,7.311"]
"janzd/CRNN" ["l"="46.348,7.09"]
"Tony607/keras-image-ocr" ["l"="46.372,7.034"]
"Liumihan/CRNN_kreas" ["l"="46.355,7.026"]
"songdejia/EAST" ["l"="46.405,7.181"]
"TeamVanDeep/ICPR_MTWI_2018_section1" ["l"="46.677,6.943"]
"pengcao/chinese_ocr" ["l"="46.314,7.342"]
"BADBADBADBOY/pytorch.ctpn" ["l"="46.439,7.351"]
"courao/ocr.pytorch" ["l"="46.417,7.287"]
"SakuraRiven/EAST" ["l"="46.44,7.242"]
"Jyouhou/ICDAR2019-ArT-Recognition-Alchemy" ["l"="46.514,7.24"]
"Holmeyoung/crnn-pytorch" ["l"="46.422,7.247"]
"tleyden/open-ocr" ["l"="46.14,7.107"]
"aperrault/DetectText" ["l"="46.279,7.009"]
"otiai10/gosseract" ["l"="3.458,-9.008"]
"guitarmind/tesseract-web-service" ["l"="46.082,7.055"]
"tleyden/DetectText" ["l"="46.094,7.076"]
"tmbdev/clstm" ["l"="46.233,7.11"]
"creatale/node-dv" ["l"="-31.902,-35.507"]
"otiai10/ocrserver" ["l"="3.325,-9.14"]
"ocropus/hocr-tools" ["l"="47.352,6.33"]
"tleyden/elastic-thought" ["l"="46.018,7.06"]
"openpaperwork/pyocr" ["l"="46.118,7.131"]
"ybur-yug/python_ocr_tutorial" ["l"="46.059,7.044"]
"liuheng92/OCR_EVALUATION" ["l"="46.501,7.183"]
"mjq11302010044/RRPN" ["l"="46.378,7.1"]
"mjq11302010044/RRPN_pytorch" ["l"="52.98,32"]
"yangxue0827/R2CNN_FPN_Tensorflow" ["l"="52.933,31.972"]
"DetectionTeamUCAS/RRPN_Faster-RCNN_Tensorflow" ["l"="52.953,31.966"]
"xhzdeng/crpn" ["l"="46.42,7.093"]
"MhLiao/TextBoxes" ["l"="46.342,7.131"]
"chenxinpeng/SSD_scene_text_detection" ["l"="46.359,7.072"]
"liulei01/DRBox" ["l"="52.974,31.946"]
"BestSonny/SSTD" ["l"="46.392,7.098"]
"yangxue0827/R-DFPN_FPN_Tensorflow" ["l"="52.941,31.985"]
"Belval/CRNN" ["l"="46.298,7.135"]
"Li-Ming-Fan/OCR-CRNN-CTC" ["l"="46.331,7.116"]
"Sanster/DeepOcrService" ["l"="46.303,7.054"]
"oyxhust/CNN-LSTM-CTC-text-recognition" ["l"="46.297,7.095"]
"watsonyanghx/CNN_LSTM_CTC_Tensorflow" ["l"="46.284,7.135"]
"ZumingHuang/awesome-ocr-resources" ["l"="46.432,7.175"]
"jiaoml1996/ScenceRecognition" ["l"="46.365,7.089"]
"ChanChiChoi/awesome-ocr" ["l"="46.481,7.206"]
"HCIILAB/Scene-Text-Recognition-Recommendations" ["l"="46.586,7.323"]
"yflv-yanxia/scene_text" ["l"="46.559,7.234"]
"A-bone1/FSNS-tfrecord-generate" ["l"="46.382,7.131"]
"weinman/cnn_lstm_ctc_ocr" ["l"="46.317,7.13"]
"MhLiao/MaskTextSpotter" ["l"="46.483,7.233"]
"465857721/IDCardOCR_China" ["l"="60.5,-14.076"]
"HCIILAB/Scene-Text-End2end" ["l"="46.511,7.249"]
"Yuliang-Liu/Box_Discretization_Network" ["l"="46.525,7.24"]
"Yuliang-Liu/TIoU-metric" ["l"="46.537,7.217"]
"WithSecureLabs/captcha22" ["l"="46.229,7.029"]
"Greenwolf/ntlm_theft" ["l"="-45.357,-31.973"]
"wavestone-cdt/powerpxe" ["l"="-45.693,-32.225"]
"zhang0jhon/AttentionOCR" ["l"="46.427,7.272"]
"felixBrave/ocr_chinese" ["l"="46.32,7.363"]
"FakerYFX/FOTS" ["l"="46.5,7.124"]
"AirBernard/Scene-Text-Detection-with-SPCNET" ["l"="46.541,7.176"]
"WenmuZhou/PytorchOCR" ["l"="46.402,7.334"]
"bes-dev/crnn-pytorch" ["l"="46.429,7.124"]
"bai-shang/crnn_seq2seq_ocr_pytorch" ["l"="46.446,7.265"]
"yizt/crnn.pytorch" ["l"="46.47,7.293"]
"STVIR/PMTD" ["l"="46.514,7.204"]
"GXYM/DRRG" ["l"="46.551,7.32"]
"MhLiao/MaskTextSpotterV3" ["l"="46.488,7.289"]
"ldeecke/gmm-torch" ["l"="46.391,8.018"]
"stober/gmm" ["l"="46.388,8.066"]
"borchero/pycave" ["l"="46.351,8.06"]
"sagelywizard/pytorch-mdn" ["l"="46.422,7.854"]
"kylesayrs/GMMPytorch" ["l"="46.416,8.031"]
"kamenbliznashki/normalizing_flows" ["l"="23.059,14.447"]
"wrayzheng/gmm-em-clustering" ["l"="46.412,8.066"]
"Nat-D/GMVAE" ["l"="53.161,29.843"]
"somanshu25/GPU-Accelerated-Point-Cloud-Registration-Using-Hierarchical-GMM" ["l"="58.233,10.29"]
"smiler96/GMM-KMeans-PyTorch" ["l"="46.372,8.039"]
"angusturner/generative_models" ["l"="46.359,8.021"]
"MichalBusta/E2E-MLT" ["l"="46.473,7.182"]
"clovaai/TedEval" ["l"="46.579,7.235"]
"HCIILAB/DeRPN" ["l"="46.6,7.173"]
"ritheshkumar95/pytorch_handwriting_synthesis" ["l"="46.52,7.587"]
"herobd/handwriting_line_generation" ["l"="46.633,7.542"]
"X-rayLaser/pytorch-handwriting-synthesis-toolkit" ["l"="46.531,7.57"]
"cs-chan/Total-Text-Dataset" ["l"="46.406,7.216"]
"tonyduan/mixture-density-network" ["l"="46.417,7.826"]
"axelbrando/Mixture-Density-Networks-for-distribution-and-uncertainty-estimation" ["l"="46.444,7.813"]
"jayknoxqu/id-number-util" ["l"="46.515,6.927"]
"jxlwqq/id-validator.py" ["l"="46.531,6.87"]
"chongshengzhang/shopsign" ["l"="46.653,7.085"]
"fnzhan/Verisimilar-Image-Synthesis-for-Accurate-Detection-and-Recognition-of-Texts-in-Scenes" ["l"="46.593,7.121"]
"FangShancheng/conv-ensemble-str" ["l"="46.629,7.099"]
"TianzhongSong/awesome-SynthText" ["l"="46.467,7.228"]
"lkj1114889770/Synth_Chinese_OCR_dataset" ["l"="46.453,7.278"]
"HotaekHan/SSTDNet" ["l"="46.399,7.057"]
"bgshih/seglink" ["l"="46.376,7.116"]
"MhLiao/RRD" ["l"="46.419,7.053"]
"lluisgomez/TextProposals" ["l"="46.345,7.074"]
"LianaWang/itn" ["l"="46.488,7.074"]
"emreaksan/deepwriting" ["l"="46.586,7.687"]
"brownvc/decoupled-style-descriptors" ["l"="46.583,7.637"]
"xhzdeng/stela" ["l"="46.501,7.151"]
"fantasyxxj/einvoice" ["l"="46.04,7.462"]
"vwarship/ocrstyle" ["l"="45.967,7.445"]
"JiangKui007/jx_ocr" ["l"="45.968,7.422"]
"soloice/Chinese-Character-Recognition" ["l"="46.374,7.424"]
"chongyangtao/DeepHCCR" ["l"="46.417,7.401"]
"angzhou/anchor" ["l"="46.402,7.436"]
"AmemiyaYuko/HandwrittenChineseCharacterRecognition" ["l"="46.374,7.405"]
"jxlwqq/id-validator" ["l"="-19.303,25.499"]
"cpmpercussion/keras-mdn-layer" ["l"="46.446,7.862"]
"yanji84/keras-mdn" ["l"="46.461,7.845"]
"sksq96/pytorch-mdn" ["l"="46.434,7.833"]
"cpmpercussion/creative-prediction" ["l"="46.447,7.899"]
"YIYIMZ/my_orc_keras_verification_code_identification" ["l"="46.281,7.387"]
"dlunion/CaffeLSTM-OCR" ["l"="32.826,29.21"]
"LCorleone/A-Simple-Chinese-License-Plate-Generator-and-Recognition-Framework" ["l"="34.078,30.07"]
"qjadud1994/CRNN-Keras" ["l"="46.358,7.116"]
"qjadud1994/Korean-license-plate-Generator" ["l"="46.396,7.027"]
"mvoelk/ssd_detectors" ["l"="46.443,7.093"]
"sbillburg/CRNN-with-STN" ["l"="47.647,6.485"]
"qjadud1994/Text_Detector" ["l"="46.464,7.138"]
"gasparian/CRNN-OCR-lite" ["l"="47.593,6.458"]
"intel/handwritten-chinese-ocr-samples" ["l"="46.477,7.472"]
"shannanyinxiang/PageNet" ["l"="46.534,7.414"]
"HCIILAB/SCUT-EPT_Dataset_Release" ["l"="46.456,7.445"]
"feirenlg/chinese_character_recognition_for_pytorch" ["l"="46.311,7.48"]
"527515025/My-TensorFlow-tutorials" ["l"="46.046,6.848"]
"xuetsing/cats-vs-dogs" ["l"="46.062,6.868"]
"maples1993/Cats_vs_Dogs" ["l"="46.03,6.867"]
"ypwhs/DogBreed_gluon" ["l"="45.97,6.816"]
"fierceX/Dog-Breed-Identification-Gluon" ["l"="45.974,6.789"]
"yinglang/CIFAR10_mxnet" ["l"="45.938,6.795"]
"L1aoXingyu/cifar10-gluon" ["l"="45.943,6.778"]
"JiaaaoYu/mxnet" ["l"="45.948,6.813"]
"sinyeratlantis/deep-learning-gluon" ["l"="45.955,6.791"]
"airaria/DogBreedIdentification_RosettaStone" ["l"="45.938,6.823"]
"Ice-Hazymoon/idcard_generator" ["l"="46.534,7.002"]
"airob0t/idcardgenerator" ["l"="46.464,7.114"]
"mritd/idgen" ["l"="46.515,7.023"]
"Ice-Hazymoon/domains" ["l"="-53.055,-11.893"]
"bzsome/idcard_generator" ["l"="46.508,6.985"]
"alicfeng/IdentityCard" ["l"="46.565,6.933"]
"heiziSS/IDcardGenerate" ["l"="46.555,6.962"]
"GitYCC/crnn-pytorch" ["l"="46.446,7.152"]
"chenjun2hao/Bert_OCR.pytorch" ["l"="46.531,7.252"]
"fengxinjie/Transformer-OCR" ["l"="46.514,7.227"]
"RubanSeven/Text-Image-Augmentation-python" ["l"="46.542,7.289"]
"GuoYi0/text_detection" ["l"="46.364,6.905"]
"QAlexBall/Faster_RCNN_for_TextDetection" ["l"="46.364,6.937"]
"Pay20Y/FOTS_TF" ["l"="46.48,7.138"]
"songdejia/DFL-CNN" ["l"="-52.997,-16.747"]
"shipengqi/sactive-bot" ["l"="-53.068,-16.587"]
"songdejia/DeepLab_v3_plus" ["l"="-52.928,-16.709"]
"Swenson1992/TCPServer" ["l"="-53.054,-16.617"]
"songdejia/Siamese-RPN-pytorch" ["l"="54.664,33.717"]
"qiurunze123/GeekQ-BASE" ["l"="-52.951,-16.624"]
"Swenson1992/DailyReport" ["l"="-53.067,-16.632"]
"shipengqi/sactive-web" ["l"="-53.053,-16.545"]
"Happy-zyy/NLP-Model" ["l"="-53.136,-16.48"]
"wottpal/cppn-keras" ["l"="46.331,7.844"]
"janhuenermann/blog" ["l"="46.314,7.863"]
"azadis/MC-GAN" ["l"="46.691,7.623"]
"ueoo/AGIS-Net" ["l"="46.681,7.609"]
"williamyang1991/TET-GAN" ["l"="46.688,7.657"]
"kaonashi-tyc/Rewrite" ["l"="46.605,7.606"]
"changebo/HCCG-CycleGAN" ["l"="46.641,7.573"]
"ueoo/Attr2Font" ["l"="46.725,7.585"]
"VITA-Group/ShapeMatchingGAN" ["l"="46.674,7.64"]
"koishi70/Style_Migration_For_Artistic_Font_With_CNN" ["l"="46.714,7.667"]
"williamyang1991/Text-Effects-Transfer" ["l"="46.697,7.68"]
"IShengFang/TypographyResearchCollection" ["l"="46.738,7.577"]
"joshpc/StyledFontGAN" ["l"="46.735,7.604"]
"liweileev/FET-GAN" ["l"="46.701,7.605"]
"LinkWoong/Zeroshot-GAN" ["l"="46.641,7.653"]
"ecnuycxie/DG-Font" ["l"="46.763,7.564"]
"erikbern/deep-fonts" ["l"="20.654,-0.583"]
"bityigoss/mtl-text-recognition" ["l"="46.555,7.138"]
"Incentering/pixel-anchor-link-and-text-detector-experience" ["l"="46.549,7.117"]
"clovaai/CLEval" ["l"="46.649,7.308"]
"clovaai/SATRN" ["l"="46.582,7.285"]
"wushilian/STN_CNN_LSTM_CTC_TensorFlow" ["l"="46.29,7.067"]
"wushilian/Real_time_text_detector_yolo2" ["l"="46.26,7.022"]
"Pay20Y/SAR_TF" ["l"="46.609,7.211"]
"liuch37/sar-pytorch" ["l"="46.597,7.234"]
"Pay20Y/SEED" ["l"="46.559,7.278"]
"jichilen/SAR_quick" ["l"="46.58,7.209"]
"Bartzi/kiss" ["l"="46.552,7.252"]
"MhLiao/SynthText3D" ["l"="46.586,7.19"]
"Jyouhou/UnrealText" ["l"="46.573,7.262"]
"RubanSeven/CRAFT_keras" ["l"="46.501,7.196"]
"Jyouhou/CurvedSynthText" ["l"="46.552,7.203"]
"zhiqwang/sightseq" ["l"="46.457,7.024"]
"marvis/ocr_attention" ["l"="46.444,6.982"]
"LoveGalaxy/Character-Region-Awareness-for-Text-Detection-" ["l"="46.539,7.196"]
"autonise/CRAFT-Remade" ["l"="46.522,7.179"]
"brooklyn1900/CRAFT_pytorch" ["l"="46.525,7.196"]
"namedysx/CRAFT-tensorflow" ["l"="46.565,7.158"]
"YukangWang/TextField" ["l"="46.586,7.154"]
"tegaki/tegaki" ["l"="46.284,7.616"]
"taku910/zinnia" ["l"="46.252,7.668"]
"simonwsw/cnn-zh" ["l"="46.344,7.511"]
"HCIILAB/SCUT-HCCDoc_Dataset_Release" ["l"="46.511,7.443"]
"HCIILAB/MTHv2_Datasets_Release" ["l"="46.36,5.797"]
"tangzhenyu/Scene-Text-Understanding" ["l"="46.392,7.164"]
"hardmaru/pytorch_notebooks" ["l"="46.436,7.781"]
"dusenberrymw/mixture-density-networks" ["l"="46.443,7.845"]
"koibiki/crnn_self_attetion" ["l"="46.454,6.932"]
"ankanbhunia/AdverseBiNet" ["l"="46.833,7.623"]
"ankanbhunia/doodleformer" ["l"="46.837,7.608"]
"ankanbhunia/AttenScriptNetPR" ["l"="46.82,7.615"]
"ankanbhunia/arxivbox" ["l"="46.824,7.602"]
"looput/PSENet-Tensorflow" ["l"="46.476,7.089"]
"yu20103983/FOTS" ["l"="46.524,7.107"]
"chenjun2hao/FOTS.pytorch" ["l"="46.538,7.096"]
"Shun14/TextBoxes_plusplus_Tensorflow" ["l"="46.512,7.071"]
"novioleo/FOTS" ["l"="46.51,7.105"]
"s3nh/text-detector" ["l"="46.549,7.462"]
"yxgong0/DTR" ["l"="46.539,7.384"]
"daooshee/Typography-with-Decor" ["l"="46.675,7.681"]
"daooshee/TE141K" ["l"="46.7,7.701"]
"chenjun2hao/SRN.pytorch" ["l"="46.556,7.29"]
"HCIILAB/Scene-Text-Removal" ["l"="46.674,7.269"]
"PkuDavidGuan/TIoU-metric-python3" ["l"="46.612,7.19"]
"janzd/EAST" ["l"="46.43,7.144"]
"opconty/pixellink_keras" ["l"="52.013,33.17"]
"clovaai/mxfont" ["l"="46.77,7.554"]
"clovaai/fewshot-font-generation" ["l"="46.769,7.542"]
"clovaai/lffont" ["l"="46.751,7.557"]
"tlc121/FsFont" ["l"="46.783,7.56"]
"JeanWU/CalliGAN" ["l"="46.714,7.573"]
"ligoudaner377/font_translator_gan" ["l"="46.782,7.576"]
"lcy0604/EraseNet" ["l"="46.746,7.286"]
"HCIILAB/SCUT-EnsText" ["l"="46.739,7.273"]
"neouyghur/One-stage-Mask-based-Scene-Text-Eraser" ["l"="46.739,7.258"]
"youdao-ai/SRNet" ["l"="46.651,7.282"]
"lcy0604/CTRNet" ["l"="46.759,7.31"]
"ku21fan/STR-Fewer-Labels" ["l"="46.59,7.303"]
"ZC119/Handwritten-CycleGAN" ["l"="46.691,7.578"]
"pcgreat/zi2zi" ["l"="46.65,7.604"]
"MingtaoGuo/Chinese-Character-and-Calligraphic-Image-Processing" ["l"="46.359,28.891"]
"mhy12345/Chinese-Character-Style-Transfer" ["l"="46.637,7.612"]
"JinshanZeng/StrokeGAN" ["l"="46.674,7.581"]
"zhongzhuoyao/HCCR-GoogLeNet" ["l"="46.486,7.494"]
"changebo/Rewrite2" ["l"="46.632,7.592"]
"huizhang0110/AON" ["l"="46.565,7.121"]
"fnzhan/ESIR" ["l"="46.562,7.22"]
"JK-Rao/Corner_Segmentation_TextDetection" ["l"="46.622,7.069"]
"Wovchena/text-detection-fots.pytorch" ["l"="46.532,7.124"]
"yuantailing/ctw-baseline" ["l"="46.419,7.161"]
"UpCoder/ICPR_TextDection" ["l"="46.562,7.044"]
"cheerss/PixelLink-with-pytorch" ["l"="46.532,7.05"]
"jamesliu/kaggle_cifar-10_mxnet" ["l"="45.924,6.778"]
"Sanster/tf_ctpn" ["l"="46.287,7.024"]
"mayank-git-hub/Text-Recognition" ["l"="46.583,7.135"]
"MrYANG23/Pixel-anchor" ["l"="46.588,7.085"]
"Yuanhang8605/pixel-anchor-link-and-text-detector-experience" ["l"="46.484,7.159"]
"BboyHanat/TextGenerator" ["l"="46.527,7.147"]
"jiangxiluning/MASTER-TF" ["l"="46.593,7.213"]
"opconty/keras_std_plus_plus" ["l"="52.047,33.151"]
"chanind/makemeahanzi" ["l"="46.899,7.824"]
"Lee-xeo/Chinese-Character-Stroke-Sequence-Dataset" ["l"="46.887,7.805"]
"MauritsBleeker/Bi-STET" ["l"="46.568,7.178"]
"azmiozgen/text-detection" ["l"="46.243,6.922"]
"yestinsong/Text-Detection" ["l"="46.277,6.969"]
"marrrcin/swt-python" ["l"="46.225,6.877"]
"mypetyak/StrokeWidthTransform" ["l"="46.264,6.933"]
"GXYM/GloRe" ["l"="46.565,7.376"]
"GXYM/Focal-loss" ["l"="46.562,7.36"]
"GXYM/OHEM-loss" ["l"="46.546,7.373"]
"GXYM/KPN" ["l"="46.554,7.382"]
"GXYM/GHM_Loss" ["l"="46.556,7.368"]
"GXYM/TextPMs" ["l"="46.572,7.365"]
"GXYM/TextBPN" ["l"="46.562,7.387"]
"yflv-yanxia/handwritten_text" ["l"="46.415,7.577"]
"grsgth/Offline-Chinese-Handwriting-Text-Page-Spotter-with-Text-Kernel" ["l"="46.391,7.623"]
"YifeiY/hanzi_recognition" ["l"="46.392,7.605"]
"WenmuZhou/crnn.pytorch" ["l"="46.388,7.564"]
"WenmuZhou/crnn.gluon" ["l"="46.366,7.592"]
"crossLi/Ultra_light_OCR_No.9" ["l"="46.44,7.488"]
"orange90/HandWrittenChineseRecogntion" ["l"="46.355,7.536"]
"wangjp0408/HCCR-HWDB-tensorflow" ["l"="46.372,7.476"]
"Sanster/keras_textboxes_plusplus" ["l"="46.552,7.029"]
"zhyxun/Separating-Style-and-Content-for-Generalized-Style-Transfer" ["l"="46.651,7.633"]
"GXYM/TextBPN-Plus-Plus" ["l"="46.582,7.376"]
"junlulocky/bayesian-deep-learning-notes" ["l"="46.381,8.136"]
"junlulocky/PyBGMM" ["l"="46.383,8.112"]
"Lina-AI/OHR" ["l"="46.61,7.712"]
"chunkyjasper/IAMhwr" ["l"="46.624,7.746"]
"cjnolet/text-renderer" ["l"="46.545,7.065"]
"Shun14/psenet_tf" ["l"="46.507,7.42"]
"BADBADBADBOY/Psenet_v2" ["l"="46.498,7.396"]
"Aurora11111/crnn-train-pytorch" ["l"="46.154,7.072"]
"Aurora11111/TextRecognitionDataGenerator" ["l"="46.152,7.055"]
"YoungMiao/synthdata-zh" ["l"="46.171,7.076"]
"Aurora11111/text-detection-train-yolov3" ["l"="46.13,7.044"]
"Heisenberg0391/TextImageGenerator" ["l"="52.902,30.689"]
"atgambardella/handwriting" ["l"="46.327,7.543"]
"lxj0276/OCRServer" ["l"="45.95,7.431"]
"WangXiaoCao/FOTS_two_stage" ["l"="46.571,7.068"]
"Aurora11111/synthdata-zh" ["l"="46.131,7.026"]
"falconjhc/W-Net" ["l"="46.813,7.67"]
"Arctanxy/W-Net-PyTorch" ["l"="46.802,7.643"]
"WenmuZhou/Segmentation-Free_OCR" ["l"="46.354,7.612"]
"VeitL/OCR" ["l"="46.653,7.043"]
"migege/tf-CNN-CASIA-HWDB" ["l"="46.368,7.504"]
"HCIILAB/Forward-Implementation-of-Fast-and-Compact-CNN-for-Offline-HCCR" ["l"="46.423,7.465"]
"A-bone1/SSH-Facenet-FaceRecognition" ["l"="51.193,37.569"]
"LinkWoong/SURF2017" ["l"="46.64,7.678"]
"liuyi91/RegEx-tools-for-excel-or-wps" ["l"="47.143,7.661"]
"liuyi91/RegEx-tools-for-word-or-wps" ["l"="47.17,7.682"]
"breezedeus/Pix2Text" ["l"="46.617,5.821"]
"RapidAI/RapidOrientation" ["l"="46.451,5.893"]
"breezedeus/CnMFD_Dataset" ["l"="46.571,5.782"]
"cv-small-snails/Awesome-Table-Recognition" ["l"="46.415,6.062"]
"MaliParag/TFD-ICDAR2019" ["l"="46.619,5.711"]
"fh2019ustc/DocTr-Plus" ["l"="46.23,5.89"]
"JiaquanYe/TableMASTER-mmocr" ["l"="46.437,6.084"]
"AlibabaResearch/AdvancedLiterateMachinery" ["l"="46.369,6.029"]
"JaidedAI/EasyOCR" ["l"="46.216,7.49"]
"tesseract-ocr/tesseract" ["l"="48.304,29.216"]
"VikParuchuri/surya" ["l"="40.796,0.027"]
"facebookresearch/detectron2" ["l"="50.571,29.698"]
"HumanSignal/label-studio" ["l"="50.437,29.502"]
"ocrmypdf/OCRmyPDF" ["l"="40.716,-0.322"]
"ultralytics/yolov5" ["l"="50.386,29.716"]
"gradio-app/gradio" ["l"="39.955,0.241"]
"microsoft/unilm" ["l"="38.785,-0.95"]
"openpaperwork/paperwork" ["l"="22.967,-26.582"]
"gitanat/simple-ocr-opencv" ["l"="-49.459,18.717"]
"madmaze/pytesseract" ["l"="46.216,4.939"]
"jlsutherland/doc2text" ["l"="46.074,7.147"]
"openpaperwork/libpillowfight" ["l"="46.053,7.112"]
"openpaperwork/pyinsane" ["l"="46.067,7.095"]
"douban/dpark" ["l"="44.388,20.87"]
"WZBSocialScienceCenter/pdf2xml-viewer" ["l"="46.032,7.117"]
"WZBSocialScienceCenter/pdftabextract" ["l"="45.077,20.516"]
"pannous/tensorflow-ocr" ["l"="46.262,7.131"]
"SAI-24-me/neverWriteByHand" ["l"="47.05,7.642"]
"liuke-wuhan/ZuAnBot" ["l"="-53.051,-13.72"]
"tiantian91091317/OCR-Corrector" ["l"="46.489,6.085"]
"mxin262/SwinTextSpotter" ["l"="46.599,7.348"]
"Tencent/ncnn" ["l"="50.241,29.805"]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["l"="33.454,29.248"]
"RangiLyu/nanodet" ["l"="50.401,29.946"]
"ShiqiYu/libfacedetection" ["l"="33.457,29.3"]
"Tencent/TNN" ["l"="50.14,29.861"]
"alibaba/MNN" ["l"="50.189,29.806"]
"hiroi-sora/PaddleOCR-json" ["l"="45.82,2.557"]
"miaomiaosoft/PandaOCR" ["l"="-48.807,12.755"]
"sml2h3/ddddocr" ["l"="47.972,22.082"]
"kerlomz/captcha_trainer" ["l"="47.989,22.159"]
"IntuitionMachines/OrigamiNet" ["l"="46.593,7.481"]
"Wang-Tianwei/Implicit-feature-alignment" ["l"="46.607,7.511"]
"FactoDeepLearning/VerticalAttentionOCR" ["l"="46.582,7.543"]
"FactoDeepLearning/SPAN" ["l"="46.597,7.532"]
"Chuhanxx/FontAdaptor" ["l"="46.606,7.287"]
"384863451/invoice_ocr" ["l"="46.087,7.427"]
"BB-fat/InvoiceSpider" ["l"="46.039,7.372"]
"Media-Smart/vedastr" ["l"="46.532,7.3"]
"FangShancheng/ABINet" ["l"="46.563,7.332"]
"Media-Smart/volksdep" ["l"="33.576,29.1"]
"opconty/Transformer_STR" ["l"="46.556,7.268"]
"junhyukoh/caffe-lstm" ["l"="47.75,34.06"]
"pannous/caffe-ocr" ["l"="46.246,7.053"]
"rakeshvar/rnn_ctc" ["l"="35.72,2.123"]
"MichalBusta/FASText" ["l"="46.332,7.051"]
"amaas/stanford-ctc" ["l"="35.698,2.181"]
"dophist/kaldi-lstm" ["l"="35.78,2.214"]
"EuphoriaYan/zi2zi-pytorch" ["l"="46.756,7.578"]
"yunchenlo/Font2Font" ["l"="46.389,28.888"]
"Hxyz-123/Font-diff" ["l"="46.796,7.536"]
"wangchi95/CF-Font" ["l"="46.787,7.546"]
"yeungchenwa/FontDiffuser" ["l"="46.793,7.505"]
"ChiuMing-Neko/ChiuKongGothic" ["l"="20.894,1.35"]
"lsflyt-pku/FontRL" ["l"="46.837,7.717"]
"clovaai/dmfont" ["l"="46.759,7.512"]
"kyxscut/CG-GAN" ["l"="46.778,7.529"]
"ammar-deep/SKFont" ["l"="46.748,7.528"]
"yizhiwang96/deepvecfont" ["l"="46.751,7.543"]
"Nikolai10/scrabble-gan" ["l"="46.568,7.524"]
"frotms/PaddleOCR2Pytorch" ["l"="46.463,7.358"]
"youdao-ai/SRNet-Datagen" ["l"="46.691,7.307"]
"zcswdt/OCR_ICDAR_label_revise" ["l"="46.521,7.335"]
"roatienza/deep-text-recognition-benchmark" ["l"="46.572,7.318"]
"LARS-research/AutoSTR" ["l"="46.597,7.265"]
"wangyuxin87/PERT" ["l"="46.782,7.261"]
"wcq19941215/SceneTextRemoval" ["l"="46.762,7.278"]
"omni-us/research-GANwriting" ["l"="46.683,7.543"]
"arshjot/ScrabbleGAN" ["l"="46.552,7.532"]
"jpuigcerver/PyLaia" ["l"="47.45,6.424"]
"ankanbhunia/Handwriting-Transformers" ["l"="46.804,7.578"]
"tzm-tora/Stroke-Based-Scene-Text-Erasing" ["l"="46.772,7.292"]
"naver/garnet" ["l"="46.778,7.279"]
"SHI-Labs/Rethinking-Text-Segmentation" ["l"="46.701,7.338"]
"ying09/TextFuseNet" ["l"="46.514,7.311"]
"adeline-cs/GTR" ["l"="46.605,7.363"]
"ymy-k/DPText-DETR" ["l"="46.63,7.368"]
"wangyuxin87/ContourNet" ["l"="46.538,7.272"]
"jjprincess/PMTD" ["l"="46.518,7.384"]
"omni-us/research-WriterAdaptation-HTR" ["l"="46.681,7.563"]
"liviniuk/GANwriting" ["l"="46.667,7.557"]
"robinreni96/Font_Recognition-DeepFont" ["l"="46.776,7.654"]
"linglanfeng/CCF2019-OCR" ["l"="46.539,6.126"]
"pluto0x0/BullshitGenerator" ["l"="47.289,7.653"]
"pluto0x0/Bullshit-WebUI" ["l"="47.262,7.646"]
"faustomorales/keras-ocr" ["l"="46.382,7.266"]
"tulasiram58827/ocr_tflite" ["l"="46.195,7.314"]
"FudanVI/benchmarking-chinese-text-recognition" ["l"="46.548,7.348"]
"shannanyinxiang/SPTS" ["l"="46.627,7.382"]
"wenwenyu/TCM" ["l"="46.637,7.393"]
"zcswdt/Color_OCR_image_generator" ["l"="46.522,6.143"]
"yizt/keras-ctpn" ["l"="46.284,7.452"]
"hikopensource/DAVAR-Lab-OCR" ["l"="46.413,6.081"]
"clovaai/synthtiger" ["l"="46.613,7.308"]
"subokita/Robust-Text-Detection" ["l"="46.308,6.996"]
"roseperrone/character-detector" ["l"="46.294,6.964"]
"lluisgomez/text_extraction" ["l"="46.307,7.015"]
"idiap/mser" ["l"="46.293,6.985"]
"shiaokai/plex" ["l"="46.303,6.932"]
"edward-zhu/umaru" ["l"="46.198,6.985"]
"prasunroy/stefann" ["l"="46.683,7.289"]
"UCSB-NLP-Chang/DiffSTE" ["l"="46.758,7.352"]
"lksshw/SRNet" ["l"="46.715,7.308"]
"qqqyd/MOSTEL" ["l"="46.734,7.332"]
"wangyuxin87/R-Net" ["l"="46.619,7.263"]
"RuijieJ/pren" ["l"="46.597,7.314"]
"wangyuxin87/VisionLAN" ["l"="46.603,7.334"]
"huiyang865/plugnet" ["l"="-35.178,21.066"]
"ShusenTang/FontRNN" ["l"="46.731,7.623"]
"ShusenTang/WriteLikeYou" ["l"="46.765,7.629"]
"byeonghu-na/MATRN" ["l"="46.62,7.335"]
"SURFZJY/Real-time-Text-Detection-DBNet" ["l"="46.467,7.42"]
"phantrdat/cvpr20-scatter-text-recognizer" ["l"="46.656,7.262"]
"BADBADBADBOY/genete_ocr_data" ["l"="46.454,7.407"]
"saicoco/SA-Text" ["l"="46.422,7.48"]
"xuannianz/DifferentiableBinarization" ["l"="46.486,7.121"]
"naver-ai/scob" ["l"="46.247,6.27"]
"clovaai/bros" ["l"="46.296,6.169"]
"abc1763613206/TGBullshitGeneratorBot" ["l"="47.216,7.632"]
"BADBADBADBOY/pse-lite.pytorch" ["l"="46.471,7.448"]
"Hanmengnan/Identify-the-Captcha" ["l"="46.008,7.372"]
"kerlomz/inv-veri" ["l"="45.987,7.37"]
"CrazySummerday/ctpn.pytorch" ["l"="46.46,7.391"]
"dredwardhyde/crnn-ctc-loss-pytorch" ["l"="46.47,7.062"]
"FLming/CRNN.tf2" ["l"="46.402,6.988"]
"lvjianjin/crnn" ["l"="46.42,6.922"]
"alleveenstra/attentionocr" ["l"="46.4,6.929"]
"tleyden/docker" ["l"="45.967,7.043"]
"irony/caffe-docker-classifier" ["l"="45.989,7.045"]
"borchero/pyblaze" ["l"="46.332,8.082"]
"zonasw/DBNet" ["l"="46.5,7.061"]
"iamyufan/MF-Net" ["l"="46.809,7.549"]
"deepkyu/multilingual-font-style-transfer" ["l"="46.792,7.611"]
"AndSonder/space.keter.top" ["l"="47.078,7.178"]
"AndSonder/Fooling-Object-Detection-Network" ["l"="47.085,7.171"]
"AndSonder/smart-hotel-database" ["l"="47.096,7.166"]
"AndSonder/FaceRecognition-System-Pytorch" ["l"="47.071,7.166"]
"AndSonder/HandWritingEraser-Pytorch" ["l"="47.058,7.181"]
"AndSonder/PaperPlots" ["l"="47.091,7.155"]
"AndSonder/fastcoll" ["l"="47.081,7.158"]
"AndSonder/report-typora-theme" ["l"="47.072,7.154"]
"nlintz/StrokeWidthTransform" ["l"="46.266,6.902"]
"Sujay-M/TextDetection" ["l"="46.253,6.895"]
"uchidalab/fontdesign_gan" ["l"="46.719,7.639"]
"amazon-science/textadain-robust-recognition" ["l"="46.687,7.33"]
"grenlayk/deep-text-edit" ["l"="46.746,7.321"]
"ecnuljzhang/brush-your-text" ["l"="46.787,7.358"]
"chenhaoxing/DiffUTE" ["l"="46.773,7.362"]
"chychen/air_writing" ["l"="46.637,7.774"]
"iamrishab/DB-tf" ["l"="46.529,7.078"]
"assafshocher/InGAN" ["l"="44.704,30.505"]
"tengteng95/Pose-Transfer" ["l"="43.516,30.938"]
"AprilYapingZhang/Seq2SeqAdapt" ["l"="46.599,7.435"]
"Caiyuan-Zheng/Consistency_Regularization_STR" ["l"="46.599,7.376"]
"andahan/FOTS_TF" ["l"="46.649,7.189"]
"RiTUAL-UH/Font-prediction-dataset" ["l"="46.709,7.549"]
"RiTUAL-UH/Font_LDL_2020" ["l"="46.702,7.563"]
"AndSonder/student_message" ["l"="47.085,7.141"]
"aimagelab/VATr" ["l"="46.874,7.605"]
"koninik/DiffusionPen" ["l"="46.884,7.592"]
"MattAlexMiracle/SmartPatch" ["l"="46.838,7.591"]
"koninik/WordStylist" ["l"="46.898,7.599"]
"aim-uofa/AdelaiDet" ["l"="50.719,30.104"]
"open-mmlab/mmdeploy" ["l"="50.347,29.856"]
"mindee/doctr" ["l"="46.249,6.107"]
"open-mmlab/mmpretrain" ["l"="50.465,29.896"]
"FeiGeChuanShu/ncnn_paddleocr" ["l"="49.61,30.885"]
"1079863482/paddle2torch_PPOCRv3" ["l"="46.488,7.428"]
"chineseocr/trocr-chinese" ["l"="46.497,7.358"]
"Mountchicken/Text-Recognition-on-Cross-Domain-Datasets" ["l"="46.588,7.456"]
"xj1988/invoice-pdf-parse" ["l"="46.053,7.469"]
"NightTeam/invoice-manager" ["l"="46.016,7.49"]
"flytkgl/PDFQFZ" ["l"="-49.083,12.695"]
"chxm1023/Rewrite" ["l"="-50.653,14.565"]
"KaringX/ClashPro" ["l"="-49.054,13.563"]
"quarkape/free-canvas" ["l"="-4.137,10.921"]
"xiaoguyu/wechatDownload" ["l"="45.588,-1.512"]
"yeahwu/v2ray-wss" ["l"="43.604,0.942"]
"m1-llie/TUMCC" ["l"="45.877,-0.734"]
"tgnav/tgwiki" ["l"="-49.136,12.782"]
"SUSTech-CRA/chinese-opensource-mirror-site" ["l"="-49.256,13.239"]
"AdminTest0/SharpWxDump" ["l"="-44.323,-29.843"]
"e1roy/12306spy" ["l"="45.462,0.378"]
"runningcheese/MirrorSite" ["l"="-49.1,12.761"]
"zas023/JdBuyer" ["l"="-50.967,15.803"]
"roatienza/straug" ["l"="46.583,7.341"]
"czczup/FAST" ["l"="46.615,7.382"]
"stupidZZ/FCN_Text" ["l"="46.374,7.061"]
"zchengquan/TextDetector" ["l"="46.34,7.022"]
"jugg1024/Text-Detection-with-FRCN" ["l"="46.359,7.045"]
"stupidZZ/Symmetry_Text_Line_Detection" ["l"="46.362,7.103"]
"cjnolet/textbox_proposals_fcrn" ["l"="46.45,7.051"]
"tulasiram58827/craft_tflite" ["l"="46.138,7.327"]
"FangShancheng/ABINet-PP" ["l"="46.597,7.391"]
"baudm/parseq" ["l"="46.622,7.351"]
"cv-small-snails/Text-Recognition-Material" ["l"="46.579,7.393"]
"clovaai/webvicob" ["l"="46.252,6.232"]
"google-research-datasets/hiertext" ["l"="46.657,7.345"]
"CVI-SZU/STKM" ["l"="46.752,7.268"]
"LinusWu/TENET_Training" ["l"="46.8,7.224"]
"duxiangcheng/SAEN" ["l"="46.848,7.217"]
"yizhiwang96/TextLogoLayout" ["l"="46.729,7.469"]
"xdxie/WordArt" ["l"="46.637,7.334"]
"ZYM-PKU/UDiffText" ["l"="46.797,7.401"]
"Canjie-Luo/Real-300K" ["l"="46.807,7.304"]
"shuyansy/Visual-Text-Processing-survey" ["l"="46.783,7.382"]
"singularityrms/OLHWG" ["l"="46.819,7.647"]
"Mountchicken/CTPN_CRNN_ChineseOCR_PyQt5" ["l"="46.615,7.486"]
"Yuliang-Liu/SPTS" ["l"="46.62,7.431"]
"Taylister/FontFits" ["l"="46.724,7.539"]
"theSage21/pytongue" ["l"="46.552,7.779"]
"theSage21/openJudge" ["l"="46.535,7.778"]
"shannanyinxiang/UPOCR" ["l"="46.695,7.396"]
"facebookresearch/IMGUR5K-Handwriting-Dataset" ["l"="46.721,7.287"]
"MasterYip/python-InvoiceMgr" ["l"="45.995,7.514"]
"neet-cv/ml.akasaki.space" ["l"="47.094,7.185"]
"visualDust/neetbox" ["l"="47.121,7.161"]
"ZeroAct/SceneTextRemover-pytorch" ["l"="46.765,7.233"]
"FactoDeepLearning/DAN" ["l"="46.573,7.573"]
"FactoDeepLearning/FasterDAN" ["l"="46.589,7.573"]
"FLCLjp/iPhone-Zinnia" ["l"="46.233,7.694"]
"Yuliang-Liu/ABCNet_Chinese" ["l"="46.861,7.287"]
"simplify23/Paddle-PANet" ["l"="46.888,7.282"]
"NikosEfth/im2rbte" ["l"="46.952,7.623"]
"NikosEfth/crafting-shifts" ["l"="46.935,7.625"]
"koninik/HTG_evaluation" ["l"="46.922,7.623"]
"novioleo/Savior" ["l"="46.408,7.526"]
"wushilian/CenterNet2CharDet" ["l"="46.439,7.502"]
"sanyuankexie/hello.kexie.space" ["l"="47.132,7.154"]
"ploverpang/HeadlineDetectionBySWT" ["l"="46.254,6.964"]
"FactoDeepLearning/LinePytorchOCR" ["l"="46.606,7.557"]
"HaozheLiu-ST/MEE" ["l"="46.821,7.203"]
"lancercat/OSOCR" ["l"="46.793,7.425"]
"Xiaomeng-Yang/STR_benchmark_cleansed" ["l"="46.812,7.438"]
"lancercat/VSDF" ["l"="46.765,7.407"]
"bawangxx/XZVoice" ["l"="45.514,-1.957"]
"Chaoses-Ib/IbEverythingExt" ["l"="-47.618,9.715"]
"vooidzero/B23Downloader" ["l"="-48.865,12.732"]
"cuiliang/ClickShow" ["l"="-47.636,9.675"]
"chenhb23/lanzouyun-disk" ["l"="-49.062,12.869"]
"aardio/Gif123" ["l"="-47.656,9.773"]
"1357310795/QrCodeScanner" ["l"="-47.486,9.735"]
"lookscanned/lookscanned.io" ["l"="-48.963,12.577"]
"kenvix/USBCopyer" ["l"="-45.788,12.691"]
"SuperNG6/docker-bilibili-helper" ["l"="-50.869,15.584"]
"cgbsmy/TrayS" ["l"="-49.051,12.825"]
"yizhiwang96/deepvecfont-v2" ["l"="46.803,7.559"]
"shashankvkt/AlignMixup_CVPR22" ["l"="46.97,7.681"]
"billpsomas/metrix" ["l"="46.933,7.644"]
"theSage21/handwritten" ["l"="46.541,7.744"]
"hardmaru/sketch-rnn" ["l"="46.484,7.699"]
"ericjang/draw" ["l"="45.937,29.323"]
"ikostrikov/TensorFlow-VAE-GAN-DRAW" ["l"="46.036,29.287"]
"skaae/lasagne-draw" ["l"="44.9,27.647"]
"snowkylin/rnn-handwriting-generation" ["l"="46.457,7.598"]
"Element-Research/rnn" ["l"="46.055,27.692"]
"fumin/pencil" ["l"="46.548,7.813"]
"wojzaremba/lstm" ["l"="46.075,27.717"]
"carpedm20/pixel-rnn-tensorflow" ["l"="46.002,29.322"]
"baidu-research/warp-ctc" ["l"="46.252,7.088"]
"srvk/eesen" ["l"="35.615,2.314"]
"SeanNaren/warp-ctc" ["l"="46.361,7.196"]
"SeanNaren/deepspeech.pytorch" ["l"="35.566,2.283"]
"NervanaSystems/neon" ["l"="47.851,29.03"]
"pannous/tensorflow-speech-recognition" ["l"="35.519,2.312"]
"soumith/convnet-benchmarks" ["l"="47.812,29.023"]
"amazon-archives/amazon-dsstne" ["l"="47.86,28.944"]
"buriburisuri/speech-to-text-wavenet" ["l"="37.042,2.54"]
"syhw/wer_are_we" ["l"="35.584,2.32"]
"kaldi-asr/kaldi" ["l"="35.433,2.375"]
"WentianZhang-ML/FRT-PAD" ["l"="46.846,7.175"]
"FudanVI/FudanOCR" ["l"="-35.189,21.146"]
"Mountchicken/Union14M" ["l"="46.651,7.393"]
"mlpc-ucsd/TESTR" ["l"="46.654,7.363"]
"amazon-science/glass-text-spotting" ["l"="46.67,7.375"]
"ViTAE-Transformer/DeepSolo" ["l"="46.649,7.376"]
"Belval/pdf2image" ["l"="46.103,4.813"]
"DanBloomberg/leptonica" ["l"="46.375,5.092"]
"tesseract-ocr/tessdata" ["l"="46.321,5.049"]
"HsiehYiChia/Scene-text-recognition" ["l"="46.324,7.017"]
"simplify23/CDistNet" ["l"="46.609,7.403"]
"DREAMXFAR/FCL-Net" ["l"="54.181,25.071"]
"WHU-ZQH/FSAM4PLM" ["l"="54.19,25.06"]
"wangbing1416/C3DA" ["l"="54.178,25.062"]
"hardmaru/sketch-rnn-datasets" ["l"="46.459,7.744"]
"alexis-jacq/Pytorch-Sketch-RNN" ["l"="46.483,7.755"]
"hardmaru/cppn-gan-vae-tensorflow" ["l"="46.053,29.336"]
"jbornschein/draw" ["l"="44.914,27.67"]
"hardmaru/rnn-tutorial" ["l"="46.427,7.751"]
"Newmu/dcgan_code" ["l"="45.835,29.256"]
"abhshkdz/neural-vqa" ["l"="48.595,32.113"]
"NickShahML/tensorflow_with_latest_papers" ["l"="46.15,27.801"]
"mila-iqia/summerschool2015" ["l"="44.875,27.654"]
"MarkMoHR/Awesome-Sketch-Synthesis" ["l"="-35.226,20.397"]
"hardmaru/cppn-tensorflow" ["l"="46.375,7.803"]
"chuanli11/CNNMRF" ["l"="45.716,29.387"]
"yizhiwang96/PKU-CSCL-Surveys" ["l"="46.752,7.486"]
"ktrk115/const_layout" ["l"="45.283,31.183"]
"mxin262/ESTextSpotter" ["l"="46.684,7.407"]
"bytedance/SPTSv2" ["l"="46.664,7.39"]
"mxin262/Bridging-Text-Spotting" ["l"="46.673,7.398"]
"weijiawu/BOVText-Benchmark" ["l"="61.713,36.276"]
"Yuliang-Liu/SPTSv2" ["l"="46.637,7.407"]
"Gmgge/TrOCR-Seal-Recognition" ["l"="46.397,5.847"]
"rsommerfeld/trocr" ["l"="47.643,6.365"]
"tommyMessi/PST-table" ["l"="46.5,6.074"]
"tommyMessi/remove-stamp" ["l"="46.523,6.086"]
"TongkunGuan/CCD" ["l"="60.491,17.655"]
"yeungchenwa/OCR-SAM" ["l"="46.673,7.346"]
"SCUT-DLVCLab/RFUND" ["l"="46.732,7.45"]
"wangwen-whu/WTW-Dataset" ["l"="46.437,6.067"]
"mop/LTPTextDetector" ["l"="46.331,6.996"]
"candycat1992/PencilDrawing" ["l"="46.549,7.847"]
"Ldpe2G/Pencil-Drawing-Scala" ["l"="46.559,7.865"]
"lizhemingi/pencil-python" ["l"="46.571,7.845"]
"ymy-k/Hi-SAM" ["l"="46.688,7.369"]
"AIGText/GlyphControl-release" ["l"="46.809,7.386"]
"jazzsaxmafia/show_attend_and_tell.tensorflow" ["l"="48.521,31.967"]
"sherjilozair/char-rnn-tensorflow" ["l"="46.238,27.763"]
"carpedm20/NTM-tensorflow" ["l"="46.105,27.882"]
"tokestermw/tensorflow-shakespeare" ["l"="53.651,24.774"]
"Mountchicken/Efficient-Deep-Learning" ["l"="46.739,7.432"]
"colorofnight86/eisms-ocr" ["l"="46.074,7.459"]
"iiclab/DecompST" ["l"="46.836,7.292"]
"devonchenc/HCCR-ResNet" ["l"="46.447,7.467"]
"pavlo-melnyk/offline-HCCR" ["l"="46.49,7.532"]
"columbia/turbo" ["l"="46.914,7.632"]
"billpsomas/rscir" ["l"="46.929,7.661"]
"zdyshine/Baidu-netdisk-AI-Image-processing-Challenge-handwriting" ["l"="46.89,7.245"]
"zuixiaosanlang/-AI-6-" ["l"="46.914,7.237"]
"GuangtaoLyu/FETNet" ["l"="46.758,7.337"]
"shannanyinxiang/ViTEraser" ["l"="46.731,7.363"]
"zacharywhitley/awesome-ocr" ["l"="46.21,6.036"]
"ccccccmd/ReCapcha" ["l"="45.95,7.467"]
"microfisher/Captcha-Recognizer" ["l"="-32.774,1.213"]
"yjunej/FSFont-pytorch" ["l"="46.8,7.598"]
"Yaomingshuai/VQ-Font" ["l"="-35.315,21.114"]
"awei669/VQ-Font" ["l"="60.48,17.659"]
"D641593/MixNet" ["l"="46.629,7.418"]
"ViTAE-Transformer/ViTAE-Transformer-Scene-Text-Detection" ["l"="46.709,7.363"]
"retsuh-bqw/SRFormer-Text-Det" ["l"="46.641,7.429"]
"LMMMEng/LLD-MMRI2023" ["l"="46.984,7.522"]
"LMMMEng/LLD-MMRI-Dataset" ["l"="47.014,7.517"]
"ZHEGG/miccai2023" ["l"="46.926,7.532"]
"amazon-science/semimtr-text-recognition" ["l"="46.709,7.382"]
"bytedance/oclip" ["l"="46.709,7.413"]
"PriNing/ODM" ["l"="46.729,7.397"]
"bytedance/E2STR" ["l"="46.701,7.429"]
"wzx99/CLIPOCR" ["l"="46.674,7.424"]
"VamosC/CLIP4STR" ["l"="46.657,7.435"]
"Ankit404butfound/HomeworkMachine" ["l"="46.576,7.775"]
"clovaai/units" ["l"="46.262,6.247"]
"lizhaoliu-Lec/CCSE" ["l"="46.87,7.781"]
"MengLi-l1/StrokeExtraction" ["l"="46.871,7.802"]
"hochthom/cppn-keras" ["l"="46.348,7.828"]
"hardmaru/netart-js" ["l"="46.344,7.8"]
"hardmaru/neurogram" ["l"="46.328,7.817"]
"wxs/cppn-to-glsl" ["l"="46.369,7.84"]
"skaae/vaeblog" ["l"="46.354,7.856"]
"Wei-ucas/TPSNet" ["l"="46.653,7.511"]
"ychensu/LRANet" ["l"="46.651,7.488"]
"gkakogeorgiou/attmask" ["l"="46.96,7.646"]
"moonfighting/PencilDrawing--python-version" ["l"="46.565,7.893"]
"CandleLabAI/TPFNet" ["l"="46.793,7.296"]
"XiiZhao/cbn.pytorch" ["l"="46.668,7.505"]
"Merenguelkl/DDT" ["l"="46.87,7.202"]
"nefelibetas/Code-work" ["l"="47.172,7.134"]
"orzation/bobibo" ["l"="47.159,7.147"]
"EDM-Research/VATr-pp" ["l"="46.86,7.644"]
"14790897/handwriting-web" ["l"="45.653,0.717"]
"CofbroTeam/Doraemon" ["l"="-47.262,12.775"]
"OPPO-Mente-Lab/GlyphDraw" ["l"="46.804,7.362"]
"OPPO-Mente-Lab/GlyphDraw2" ["l"="46.831,7.373"]
"AIGText/Glyph-ByT5" ["l"="46.885,7.379"]
"jdh-algo/JoyType" ["l"="46.85,7.384"]
"tyxsspa/AnyText2" ["l"="46.826,7.391"]
"vkgo/OCRAutoScore" ["l"="46.949,7.224"]
"dailenson/One-DM" ["l"="46.864,7.521"]
"yeungchenwa/Recommendations-Diffusion-Text-Image" ["l"="46.772,7.427"]
"Topdu/OpenOCR" ["l"="-55.124,-11.444"]
"wenzhenl/wefont" ["l"="46.955,7.566"]
"caojiezhang/MWGAN" ["l"="61.431,37.685"]
"Yuliang-Liu/MultimodalOCR" ["l"="46.656,7.414"]
"Yuliang-Liu/Monkey" ["l"="51.19,2.719"]
"SALT-NLP/LLaVAR" ["l"="47.35,30.24"]
"Ucas-HaoranWei/Vary" ["l"="47.281,30.013"]
"X-PLUG/mPLUG-DocOwl" ["l"="47.309,29.975"]
"LukeForeverYoung/UReader" ["l"="46.352,5.921"]
"large-ocr-model/large-ocr-model.github.io" ["l"="46.668,7.456"]
"harrytea/Awesome-Document-Understanding" ["l"="46.319,5.923"]
"nttmdlab-nlp/InstructDoc" ["l"="47.077,30.136"]
"PHPixie/Project" ["l"="-40.839,-34.461"]
"mzucker/page_dewarp" ["l"="46.112,5.936"]
"HiFaraz/node-playbook" ["l"="0.229,-29.377"]
"Tencent/phxsql" ["l"="0.975,14.174"]
"nerevu/riko" ["l"="45.27,20.491"]
"gregdurrett/berkeley-doc-summarizer" ["l"="58.221,29.102"]
"fgadaleta/deeplearning-ahem-detector" ["l"="23.445,-27.237"]
"ajbrock/Neural-Photo-Editor" ["l"="45.764,29.325"]
"mateogianolio/ocr" ["l"="22.516,-26.731"]
"Swall0w/dtrocr" ["l"="46.684,7.477"]
"fubinfb/NTF" ["l"="46.823,7.546"]
"fubinfb/MSD-Font" ["l"="46.844,7.553"]
"synckey/tensorflow_lstm_ctc_ocr" ["l"="46.27,7.114"]
"igormq/ctc_tensorflow_example" ["l"="35.665,2.217"]
"aaron-xichen/cnn-lstm-ctc" ["l"="35.737,2.082"]
"jonrein/tensorflow_CTC_example" ["l"="35.693,2.157"]
"mrgloom/kaggle-dogs-vs-cats-caffe" ["l"="45.996,6.886"]
"RomanKornev/dogs-vs-cats-redux" ["l"="45.971,6.875"]
"1073521013/GlyphDraw" ["l"="46.841,7.337"]
"ayumiymk/DiG" ["l"="46.688,7.445"]
"aimagelab/HWD" ["l"="46.878,7.658"]
"ganji15/HiGANplus" ["l"="46.887,7.642"]
"georgeretsi/HTR-best-practices" ["l"="46.895,7.626"]
"tmaham/DS-Fusion" ["l"="46.833,7.443"]
"williamyang1991/Awesome-Artistic-Typography" ["l"="46.875,7.441"]
"weichaozeng/TextCtrl" ["l"="46.807,7.411"]
"yeungchenwa/HDR" ["l"="46.761,7.452"]
"InsaneOnion/Python-educoder" ["l"="47.174,7.155"]
"hs105/Deep-Learning-for-OCR" ["l"="46.321,7.09"]
"mathDR/reading-text-in-the-wild" ["l"="46.32,6.965"]
"CodeGoat24/DreamText" ["l"="46.817,7.37"]
"RobRomijnders/RNN_basketball" ["l"="46.417,7.892"]
"zhaoyu611/basketball_trajectory_prediction" ["l"="46.409,7.924"]
"oyxhust/ssd-text_detection" ["l"="46.344,7.041"]
"hyh21521038/ssd-plate_detection" ["l"="46.379,7.012"]
"PWenJay/GCA-HNG" ["l"="46.902,7.525"]
"billpsomas/simpool" ["l"="46.945,7.677"]
"NikosEfth/freedom" ["l"="46.942,7.651"]
"aimagelab/FourBi" ["l"="46.892,7.68"]
"thuliu-yt16/dualvector" ["l"="46.831,7.57"]
"xiaodiu2010/TextBoxes-TensorFlow" ["l"="46.317,7.065"]
"Asthestarsfalll/img2art" ["l"="47.21,7.14"]
"nxtkofi/LightningNvim" ["l"="47.237,7.134"]
"deeperic/SpikeFlow" ["l"="46.185,7.038"]
"AKSHAYUBHAT/DeepVideoAnalytics" ["l"="46.202,7.121"]
"MrNothing/AI-Blocks" ["l"="45.615,29.223"]
"oarriaga/face_classification" ["l"="55.996,27.258"]
"junyanz/iGAN" ["l"="45.716,29.249"]
"OpenNMT/OpenNMT" ["l"="53.765,24.675"]
"andabi/deep-voice-conversion" ["l"="37.144,2.58"]
"facebookresearch/fairseq-lua" ["l"="53.204,25.644"]
"yunjey/stargan" ["l"="45.699,29.098"]
"AKSHAYUBHAT/VisualSearchServer" ["l"="58.201,9.24"]
"burness/tensorflow-101" ["l"="46.249,7.286"]
"ahangchen/GDLnotes" ["l"="50.333,28.084"]
"buriburisuri/ac-gan" ["l"="45.995,29.236"]
"tobegit3hub/tensorflow_template_application" ["l"="58.027,23.481"]
"szad670401/end-to-end-for-chinese-plate-recognition" ["l"="34.145,30.072"]
"rockingdingo/deepnlp" ["l"="53.39,27.446"]
"koth/kcws" ["l"="53.329,27.454"]
"igul222/improved_wgan_training" ["l"="45.897,29.126"]
"design-edit/DesignEdit" ["l"="46.931,7.363"]
"ant-research/edicho" ["l"="-35.263,20.12"]
"DmitryUlyanov/texture_nets" ["l"="45.704,29.409"]
"RockeyCoss/SPO" ["l"="33.476,31.499"]
"TencentQQGYLab/ELLA" ["l"="33.384,31.23"]
"yardenfren1996/B-LoRA" ["l"="33.296,31.212"]
"instantX-research/Regional-Prompting-FLUX" ["l"="33.214,31.173"]
"megvii-research/HiDiffusion" ["l"="33.333,31.203"]
"unity-research/IP-Adapter-Instruct" ["l"="46.96,7.38"]
"YangLing0818/RPG-DiffusionMaster" ["l"="33.405,31.259"]
"huchenlei/ComfyUI_omost" ["l"="32.738,32.835"]
"ali-vilab/In-Context-LoRA" ["l"="32.946,32.998"]
"maszhongming/Multi-LoRA-Composition" ["l"="33.294,31.246"]
"Orion-AI-Lab/MindTheModalityGap" ["l"="41.464,25.216"]
"Halfish/lstm-ctc-ocr" ["l"="46.247,7.005"]
"linghuyuhangyuan/M2S" ["l"="46.887,7.189"]
"SijieLiu518/SGENet" ["l"="46.911,7.171"]
"vvanirudh/deep-ensembles-uncertainty" ["l"="22.385,15.368"]
"mbinkowski/nntimeseries" ["l"="46.474,7.882"]
"oborchers/Medium_Repo" ["l"="46.477,7.835"]
"jsn5/dancenet" ["l"="30.599,28.372"]
"alshedivat/keras-gp" ["l"="46.154,26.107"]
"Yuliang-Liu/VimTS" ["l"="46.152,6.134"]
"parlance/ctcdecode" ["l"="35.644,2.302"]
"Stareven233/IF-Font" ["l"="46.858,7.569"]
"lsflyt-pku/QT-Font" ["l"="46.871,7.56"]
"adlnlp/mmvqa" ["l"="46.751,7.466"]
"ychding11/PencilDrawing-Python" ["l"="46.588,7.869"]
"ZeningLin/PEneo" ["l"="46.776,7.467"]
"HCIILAB/M5HisDoc" ["l"="46.33,5.913"]
"aimagelab/Alfie" ["l"="46.887,7.694"]
"bonjour-npy/UndergraduateDissertation" ["l"="47.18,7.119"]
"Bamboo-fly/PhotoShare" ["l"="47.196,7.1"]
"OPPO-Mente-Lab/PEA-Diffusion" ["l"="46.86,7.36"]
"lcy0604/CTRNet-plus" ["l"="46.303,5.933"]
"AimeeKing/crnn-tensorflow" ["l"="46.284,7.081"]
"mtyylx/MLND" ["l"="46.025,6.916"]
"nd009/capstone" ["l"="49.187,27.9"]
"kevin369ml/My-TensorFlow-tutorials" ["l"="50.398,33.146"]
"chenyuntc/pytorch-best-practice" ["l"="50.992,30.009"]
"miaopei/cat_vs_dog" ["l"="46.05,6.888"]
"freelzy/Tencent_Social_Ads" ["l"="57.775,22.722"]
"xbliuhnu/DogsVsCats" ["l"="46.026,6.891"]
"MoyanZitto/keras-cn" ["l"="50.45,28.111"]
"wepe/O2O-Coupon-Usage-Forecast" ["l"="57.843,22.723"]
"bytedance/TextHarmony" ["l"="46.824,7.356"]
"lsflyt-pku/DeepCalliFont" ["l"="46.891,7.514"]
"tcl9876/Diffusion-Handwriting-Generation" ["l"="46.924,7.511"]
"CodeGoat24/PrimeComposer" ["l"="33.603,31.584"]
"CodeGoat24/Face-diffuser" ["l"="33.618,31.58"]
"bigdig/OCR" ["l"="45.916,7.457"]
"xuwenxue000/PJ_DARKNET" ["l"="45.979,7.46"]
"ZZZHANG-jx/DocKylin" ["l"="46.295,5.947"]
"gxd1994/TextBoxes-TensorFlow" ["l"="46.612,6.923"]
"shinjayne/textboxes" ["l"="46.605,6.937"]
"tobiasfshr/online-handwritten-character-recognition-capacitive-sensors" ["l"="46.649,7.799"]
"johnsmithm/handwritten-tf-1.0" ["l"="46.337,6.981"]
"johnsmithm/handwritten-sequence-tensorflow" ["l"="46.335,6.932"]
"posterllava/PosterLLaVA" ["l"="45.336,31.224"]
"tongpi/synthtext100kCH" ["l"="46.276,7.058"]
"solivr/tf-crnn" ["l"="46.317,7.11"]
"Neerajj9/Text-Detection-using-Yolo-Algorithm-in-keras-tensorflow" ["l"="46.47,6.993"]
"DataFountainCode/huawei_code_share" ["l"="53.209,13.643"]
"hardmaru/estool" ["l"="59.253,17.759"]
"hardmaru/WorldModelsExperiments" ["l"="59.294,17.713"]
"frereit/TensorflowHandwritingRecognition" ["l"="47.576,6.466"]
"periannath/neural-fonts" ["l"="46.887,7.481"]
"yjjng11/Neural-fonts-webapp" ["l"="46.914,7.481"]
"hngskj/Font-VAE" ["l"="46.916,7.462"]
"MINED30/HAN2HAN" ["l"="46.936,7.474"]
"DeepSystems/supervisely-tutorials" ["l"="46.357,7.002"]
"supervisely/supervisely" ["l"="50.276,29.334"]
"SketchyScene/SketchyScene" ["l"="-35.228,20.465"]
"OhataKenji/SketchRNN-Pytorch" ["l"="46.49,7.781"]
"shinjayne/shinTB" ["l"="46.585,6.968"]
}