digraph G {
"HKUST-Aerial-Robotics/Fast-Planner" -> "karlkurzer/path_planner" ["e"=1]
"YannZyl/Apollo-Note" -> "daohu527/dig-into-apollo" ["e"=1]
"YannZyl/Apollo-Note" -> "yangmingustb/Papers"
"YannZyl/Apollo-Note" -> "HKUST-Aerial-Robotics/EPSILON"
"YannZyl/Apollo-Note" -> "cedricxie/apollo_perception_ros" ["e"=1]
"YannZyl/Apollo-Note" -> "teddyluo/hybrid-a-star-annotation"
"YannZyl/Apollo-Note" -> "karlkurzer/path_planner"
"YannZyl/Apollo-Note" -> "pparmesh/Constrained_ILQR"
"YannZyl/Apollo-Note" -> "wanghuohuo0716/hybrid_A_star"
"YannZyl/Apollo-Note" -> "intel/ad-rss-lib"
"YannZyl/Apollo-Note" -> "AdaCompNUS/despot"
"YannZyl/Apollo-Note" -> "daohu527/awesome-self-driving-car" ["e"=1]
"YannZyl/Apollo-Note" -> "LiJiangnanBit/path_optimizer"
"YannZyl/Apollo-Note" -> "DeepTecher/AutonomousVehiclePaper"
"YannZyl/Apollo-Note" -> "AutoLidarPerception/segmenters_lib" ["e"=1]
"YannZyl/Apollo-Note" -> "AtsushiSakai/HybridAStarTrailer"
"cedricxie/apollo_perception_ros" -> "YannZyl/Apollo-Note" ["e"=1]
"daohu527/dig-into-apollo" -> "YannZyl/Apollo-Note" ["e"=1]
"daohu527/dig-into-apollo" -> "karlkurzer/path_planner" ["e"=1]
"daohu527/dig-into-apollo" -> "HKUST-Aerial-Robotics/EPSILON" ["e"=1]
"daohu527/dig-into-apollo" -> "teddyluo/hybrid-a-star-annotation" ["e"=1]
"daohu527/dig-into-apollo" -> "zhm-real/MotionPlanning" ["e"=1]
"daohu527/dig-into-apollo" -> "onlytailei/CppRobotics" ["e"=1]
"daohu527/dig-into-apollo" -> "DeepTecher/awesome-autonomous-vehicle" ["e"=1]
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "bark-simulator/bark"
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "pparmesh/Constrained_ILQR"
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "HKUST-Aerial-Robotics/EPSILON"
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "jiachenli94/Awesome-Decision-Making-Reinforcement-Learning"
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "AdaCompNUS/despot"
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "MajidMoghadam2006/RL-frenet-trajectory-planning-in-CARLA" ["e"=1]
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "autonomousvision/tuplan_garage" ["e"=1]
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "MCZhi/GameFormer" ["e"=1]
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "Amin-Tgz/awesome-CARLA" ["e"=1]
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "eleurent/rl-agents" ["e"=1]
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "rohanchandra30/Spectral-Trajectory-and-Behavior-Prediction" ["e"=1]
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "sisl/ngsim_env" ["e"=1]
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "YukunXia/Carla_iLQR_MPC"
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "praveen-palanisamy/macad-gym" ["e"=1]
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" -> "HKUST-Aerial-Robotics/eudm_planner"
"SteveMacenski/spatio_temporal_voxel_layer" -> "locusrobotics/robot_navigation" ["e"=1]
"SteveMacenski/spatio_temporal_voxel_layer" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"katetolstaya/gym-flock" -> "katetolstaya/multiagent_gnn_policies"
"katetolstaya/gym-flock" -> "katetolstaya/graph_rl"
"microsoft/AutonomousDrivingCookbook" -> "emmjaykay/stanford_self_driving_car_code" ["e"=1]
"AtsushiSakai/MATLABRobotics" -> "petercorke/robotics-toolbox-matlab" ["e"=1]
"AtsushiSakai/MATLABRobotics" -> "AtsushiSakai/PyAdvancedControl" ["e"=1]
"AtsushiSakai/MATLABRobotics" -> "LazyFalcon/D_star_PathPlanning"
"AtsushiSakai/MATLABRobotics" -> "AtsushiSakai/HybridAStarTrailer"
"AtsushiSakai/MATLABRobotics" -> "mathworks-robotics/awesome-matlab-robotics" ["e"=1]
"AtsushiSakai/MATLABRobotics" -> "karlkurzer/path_planner"
"AtsushiSakai/MATLABRobotics" -> "YashBansod/Robotics-Planning-Dynamics-and-Control"
"AtsushiSakai/MATLABRobotics" -> "teddyluo/hybrid-a-star-annotation"
"AtsushiSakai/MATLABRobotics" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"AtsushiSakai/MATLABRobotics" -> "zhm-real/MotionPlanning"
"AtsushiSakai/MATLABRobotics" -> "yrlu/quadrotor" ["e"=1]
"AtsushiSakai/MATLABRobotics" -> "Mesywang/Motion-Planning-Algorithms"
"AtsushiSakai/MATLABRobotics" -> "pptacher/probabilistic_robotics" ["e"=1]
"AtsushiSakai/MATLABRobotics" -> "yangmingustb/Papers"
"AtsushiSakai/MATLABRobotics" -> "onlytailei/CppRobotics"
"ros-navigation/navigation2" -> "karlkurzer/path_planner" ["e"=1]
"Dheenu-kasinathan/Robotics-Arm-Manipulator" -> "RShawshank/Manipulator-obstacle-avoidance-algorithm-"
"Wleisure95/laser_slam" -> "sunmiaozju/shenlan-laser-slam-2d"
"Wleisure95/laser_slam" -> "smzztx/shenlanxueyuan_laser_slam_2d"
"DeepTecher/AutonomousVehiclePaper" -> "DeepTecher/awesome-autonomous-vehicle"
"DeepTecher/AutonomousVehiclePaper" -> "manfreddiaz/awesome-autonomous-vehicles" ["e"=1]
"DeepTecher/AutonomousVehiclePaper" -> "beedotkiran/Lidar_For_AD_references" ["e"=1]
"DeepTecher/AutonomousVehiclePaper" -> "YannZyl/Apollo-Note"
"DeepTecher/AutonomousVehiclePaper" -> "nutonomy/second.pytorch" ["e"=1]
"DeepTecher/AutonomousVehiclePaper" -> "autonomousdrivingkr/Awesome-Autonomous-Driving" ["e"=1]
"DeepTecher/AutonomousVehiclePaper" -> "kujason/avod" ["e"=1]
"DeepTecher/AutonomousVehiclePaper" -> "emmjaykay/stanford_self_driving_car_code"
"DeepTecher/AutonomousVehiclePaper" -> "XiaojingGeorgeZhang/H-OBCA"
"DeepTecher/AutonomousVehiclePaper" -> "daohu527/dig-into-apollo" ["e"=1]
"DeepTecher/AutonomousVehiclePaper" -> "yangmingustb/Papers"
"DeepTecher/AutonomousVehiclePaper" -> "traveller59/second.pytorch" ["e"=1]
"DeepTecher/AutonomousVehiclePaper" -> "bostondiditeam/MV3D" ["e"=1]
"DeepTecher/AutonomousVehiclePaper" -> "MarvinTeichmann/MultiNet" ["e"=1]
"DeepTecher/AutonomousVehiclePaper" -> "HKUST-Aerial-Robotics/Stereo-RCNN" ["e"=1]
"ros-planning/robot_pose_ekf" -> "ros-perception/laser_filters" ["e"=1]
"ros-planning/robot_pose_ekf" -> "orocos/orocos-bayesian-filtering" ["e"=1]
"ros-planning/robot_pose_ekf" -> "CCNYRoboticsLab/scan_tools" ["e"=1]
"Vinohith/Self_Driving_Car_specialization" -> "qiaoxu123/Self-Driving-Cars" ["e"=1]
"locuslab/mpc.pytorch" -> "anassinator/ilqr" ["e"=1]
"DeepTecher/awesome-autonomous-vehicle" -> "DeepTecher/AutonomousVehiclePaper"
"DeepTecher/awesome-autonomous-vehicle" -> "manfreddiaz/awesome-autonomous-vehicles" ["e"=1]
"DeepTecher/awesome-autonomous-vehicle" -> "daohu527/dig-into-apollo" ["e"=1]
"DeepTecher/awesome-autonomous-vehicle" -> "ProgramTraveler/Road-To-Autonomous-Driving"
"DeepTecher/awesome-autonomous-vehicle" -> "autonomousdrivingkr/Awesome-Autonomous-Driving" ["e"=1]
"DeepTecher/awesome-autonomous-vehicle" -> "YannZyl/Apollo-Note"
"DeepTecher/awesome-autonomous-vehicle" -> "HKUST-Aerial-Robotics/EPSILON"
"DeepTecher/awesome-autonomous-vehicle" -> "cedricxie/apollo_perception_ros" ["e"=1]
"DeepTecher/awesome-autonomous-vehicle" -> "karlkurzer/path_planner"
"DeepTecher/awesome-autonomous-vehicle" -> "jiachenli94/Awesome-Interaction-Aware-Trajectory-Prediction" ["e"=1]
"DeepTecher/awesome-autonomous-vehicle" -> "teddyluo/hybrid-a-star-annotation"
"DeepTecher/awesome-autonomous-vehicle" -> "beedotkiran/Lidar_For_AD_references" ["e"=1]
"DeepTecher/awesome-autonomous-vehicle" -> "yangmingustb/Papers"
"DeepTecher/awesome-autonomous-vehicle" -> "Hardy-Uint/awesome-Autopilot-algorithm" ["e"=1]
"DeepTecher/awesome-autonomous-vehicle" -> "lgsvl/simulator" ["e"=1]
"alexliniger/MPCC" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"alexliniger/MPCC" -> "zhm-real/MotionPlanning" ["e"=1]
"alexliniger/MPCC" -> "LiJiangnanBit/path_optimizer" ["e"=1]
"alexliniger/MPCC" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"alexliniger/MPCC" -> "XiaojingGeorgeZhang/OBCA" ["e"=1]
"alexliniger/MPCC" -> "karlkurzer/path_planner" ["e"=1]
"sawcordwell/pymdptoolbox" -> "coverdrive/MDP-DP-RL"
"sawcordwell/pymdptoolbox" -> "sachinbiradar9/Markov-Decision-Processes"
"sawcordwell/pymdptoolbox" -> "pemami4911/POMDPy"
"sawcordwell/pymdptoolbox" -> "Svalorzen/AI-Toolbox"
"sawcordwell/pymdptoolbox" -> "JuliaPOMDP/POMDPs.jl"
"sawcordwell/pymdptoolbox" -> "AdaCompNUS/despot"
"sawcordwell/pymdptoolbox" -> "joschu/modular_rl" ["e"=1]
"sawcordwell/pymdptoolbox" -> "AdaCompNUS/qmdp-net"
"sawcordwell/pymdptoolbox" -> "AdaCompNUS/sarsop"
"sawcordwell/pymdptoolbox" -> "rlpy/rlpy" ["e"=1]
"sawcordwell/pymdptoolbox" -> "infer-actively/pymdp" ["e"=1]
"sawcordwell/pymdptoolbox" -> "BlackHC/mdp"
"sawcordwell/pymdptoolbox" -> "pushkar/ABAGAIL" ["e"=1]
"sawcordwell/pymdptoolbox" -> "h2r/pomdp-py"
"sawcordwell/pymdptoolbox" -> "akifumi-wachi-4/safe_near_optimal_mdp" ["e"=1]
"zwq2018/AI_UAV" -> "Gongyihang/Motion-Planning" ["e"=1]
"whoenig/libMultiRobotPlanning" -> "atb033/multi_agent_path_planning"
"whoenig/libMultiRobotPlanning" -> "APRIL-ZJU/CL-CBS"
"whoenig/libMultiRobotPlanning" -> "GavinPHR/Multi-Agent-Path-Finding"
"whoenig/libMultiRobotPlanning" -> "speedzjy/mapf_ros"
"whoenig/libMultiRobotPlanning" -> "PathPlanning/Continuous-CBS"
"whoenig/libMultiRobotPlanning" -> "LIJUNCHENG001/multi_robot_traj_planner"
"whoenig/libMultiRobotPlanning" -> "gsartoretti/PRIMAL"
"whoenig/libMultiRobotPlanning" -> "Jiaoyang-Li/RHCR"
"whoenig/libMultiRobotPlanning" -> "mit-acl/mader" ["e"=1]
"whoenig/libMultiRobotPlanning" -> "tuw-robotics/tuw_multi_robot"
"whoenig/libMultiRobotPlanning" -> "Kei18/mapf-IR"
"whoenig/libMultiRobotPlanning" -> "Jiaoyang-Li/CBSH2-RTC"
"whoenig/libMultiRobotPlanning" -> "qwerty35/swarm_simulator"
"whoenig/libMultiRobotPlanning" -> "Jiaoyang-Li/EECBS"
"whoenig/libMultiRobotPlanning" -> "PathPlanning/AA-SIPP-m"
"tuw-robotics/tuw_multi_robot" -> "LIJUNCHENG001/multi_robot_traj_planner"
"tuw-robotics/tuw_multi_robot" -> "whoenig/libMultiRobotPlanning"
"tuw-robotics/tuw_multi_robot" -> "leggedrobotics/se2_navigation" ["e"=1]
"tuw-robotics/tuw_multi_robot" -> "speedzjy/mapf_ros"
"tuw-robotics/tuw_multi_robot" -> "APRIL-ZJU/CL-CBS"
"tuw-robotics/tuw_multi_robot" -> "daenny/collvoid" ["e"=1]
"tuw-robotics/tuw_multi_robot" -> "nobleo/full_coverage_path_planner"
"tuw-robotics/tuw_multi_robot" -> "atb033/multi_agent_path_planning"
"tuw-robotics/tuw_multi_robot" -> "ros-planning/navigation_experimental"
"tuw-robotics/tuw_multi_robot" -> "tanujthakkar/Voronoi-Based-Hybrid-Astar"
"tuw-robotics/tuw_multi_robot" -> "marinaKollmitz/lattice_planner"
"tuw-robotics/tuw_multi_robot" -> "FedericoPecora/coordination_oru" ["e"=1]
"tuw-robotics/tuw_multi_robot" -> "hrnr/m-explore" ["e"=1]
"tuw-robotics/tuw_multi_robot" -> "rst-tu-dortmund/mpc_local_planner"
"rlnav/motion_planning" -> "nobleo/full_coverage_path_planner"
"rlnav/motion_planning" -> "18alantom/CoveragePathPlanning"
"rlnav/motion_planning" -> "rlnav/adaptive_swarm"
"rlnav/motion_planning" -> "ethz-asl/polygon_coverage_planning"
"rlnav/motion_planning" -> "matssteinweg/Multi-Purpose-MPC" ["e"=1]
"rlnav/motion_planning" -> "Greenzie/boustrophedon_planner"
"rlnav/motion_planning" -> "ethz-asl/mav_active_3d_planning" ["e"=1]
"rlnav/motion_planning" -> "jazzalin/area-coverage-nav"
"rlnav/motion_planning" -> "rodriguesrenato/coverage-path-planning"
"rlnav/motion_planning" -> "zhm-real/MotionPlanning"
"rlnav/motion_planning" -> "dawnjeanh/motionplanning"
"rlnav/motion_planning" -> "athakapo/DARP"
"rlnav/motion_planning" -> "ntnu-arl/mbplanner_ros" ["e"=1]
"rlnav/motion_planning" -> "atb033/multi_agent_path_planning"
"rlnav/motion_planning" -> "irvingvasquez/ocpp"
"xuedidi/path_planning" -> "szc19990412/Path-Planning"
"xuedidi/path_planning" -> "HobbySingh/Path-Planning-Algorithms"
"xuedidi/path_planning" -> "zhaohaojie1998/Grey-Wolf-Optimizer-for-Path-Planning" ["e"=1]
"xuedidi/path_planning" -> "LazyFalcon/D_star_PathPlanning"
"xuedidi/path_planning" -> "Strange-AI/frenet_path_planning"
"xuedidi/path_planning" -> "herryCccc/Mobile-robot-path-planning"
"paulbovbel/frontier_exploration" -> "hrnr/m-explore" ["e"=1]
"paulbovbel/frontier_exploration" -> "hasauino/rrt_exploration"
"paulbovbel/frontier_exploration" -> "laurimi/ase_exploration"
"paulbovbel/frontier_exploration" -> "caochao39/tare_planner" ["e"=1]
"paulbovbel/frontier_exploration" -> "ethz-asl/nbvplanner" ["e"=1]
"paulbovbel/frontier_exploration" -> "HanwenCao/Frontier_Exploration"
"paulbovbel/frontier_exploration" -> "ros-perception/slam_karto" ["e"=1]
"paulbovbel/frontier_exploration" -> "tpepels/turtlebot_slam"
"paulbovbel/frontier_exploration" -> "RobustFieldAutonomyLab/turtlebot_exploration_3d"
"paulbovbel/frontier_exploration" -> "hasauino/rrt_exploration_tutorials"
"pptacher/probabilistic_robotics" -> "onlytailei/CppRobotics" ["e"=1]
"pptacher/probabilistic_robotics" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"sachinbiradar9/Markov-Decision-Processes" -> "coverdrive/MDP-DP-RL"
"medalotte/sampling-based-planners" -> "ahq1993/p-rrtstar"
"balcilar/Multi-Robot-Path-Planning-on-Graphs" -> "chendiqian/Bachelor_Thesis"
"balcilar/Multi-Robot-Path-Planning-on-Graphs" -> "anushrii/Multi-Robot-Path-Planning"
"balcilar/Multi-Robot-Path-Planning-on-Graphs" -> "WangHanfu/Multi-agent-Path-Finding-in-Warehouse"
"balcilar/Multi-Robot-Path-Planning-on-Graphs" -> "yusuf1478/multi_robot_path_planning_isca"
"balcilar/Multi-Robot-Path-Planning-on-Graphs" -> "huangxianqun/multi_robot_path_planning"
"onlytailei/CppRobotics" -> "karlkurzer/path_planner"
"onlytailei/CppRobotics" -> "zhm-real/MotionPlanning"
"onlytailei/CppRobotics" -> "ANYbotics/grid_map" ["e"=1]
"onlytailei/CppRobotics" -> "jslee02/awesome-robotics-libraries" ["e"=1]
"onlytailei/CppRobotics" -> "Geonhee-LEE/mpc_ros"
"onlytailei/CppRobotics" -> "pptacher/probabilistic_robotics" ["e"=1]
"onlytailei/CppRobotics" -> "ethz-adrl/control-toolbox" ["e"=1]
"onlytailei/CppRobotics" -> "LiJiangnanBit/path_optimizer"
"onlytailei/CppRobotics" -> "teddyluo/hybrid-a-star-annotation"
"onlytailei/CppRobotics" -> "rst-tu-dortmund/mpc_local_planner"
"onlytailei/CppRobotics" -> "giacomo-b/CppRobotics"
"onlytailei/CppRobotics" -> "kiloreux/awesome-robotics" ["e"=1]
"onlytailei/CppRobotics" -> "alexliniger/MPCC" ["e"=1]
"onlytailei/CppRobotics" -> "Ly0n/awesome-robotic-tooling" ["e"=1]
"onlytailei/CppRobotics" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"atb033/multi_agent_path_planning" -> "whoenig/libMultiRobotPlanning"
"atb033/multi_agent_path_planning" -> "GavinPHR/Multi-Agent-Path-Finding"
"atb033/multi_agent_path_planning" -> "APRIL-ZJU/CL-CBS"
"atb033/multi_agent_path_planning" -> "zhm-real/MotionPlanning"
"atb033/multi_agent_path_planning" -> "gsartoretti/PRIMAL"
"atb033/multi_agent_path_planning" -> "LIJUNCHENG001/multi_robot_traj_planner"
"atb033/multi_agent_path_planning" -> "PathPlanning/Continuous-CBS"
"atb033/multi_agent_path_planning" -> "speedzjy/mapf_ros"
"atb033/multi_agent_path_planning" -> "LyapunovJingci/Warehouse_Robot_Path_Planning"
"atb033/multi_agent_path_planning" -> "Kei18/mapf-IR"
"atb033/multi_agent_path_planning" -> "zhm-real/PathPlanning" ["e"=1]
"atb033/multi_agent_path_planning" -> "tuw-robotics/tuw_multi_robot"
"atb033/multi_agent_path_planning" -> "mit-acl/mader" ["e"=1]
"atb033/multi_agent_path_planning" -> "Acmece/rl-collision-avoidance" ["e"=1]
"atb033/multi_agent_path_planning" -> "GavinPHR/Space-Time-AStar"
"kostaskonkk/datmo" -> "VisualComputingInstitute/2D_lidar_person_detection" ["e"=1]
"kostaskonkk/datmo" -> "LucasWEIchen/lidar_tracking" ["e"=1]
"kostaskonkk/datmo" -> "tysik/obstacle_detector" ["e"=1]
"fjp/frenet" -> "mubowen/Optimal-Trajectory-generation-for-Lane-Changing-in-Frenet-Frame" ["e"=1]
"fjp/frenet" -> "erdos-project/frenet_optimal_trajectory_planner"
"fjp/frenet" -> "ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver"
"fjp/frenet" -> "libai1943/CartesianPlanner"
"fjp/frenet" -> "mubowen/Baidu-Apollo-control-algorithm" ["e"=1]
"fjp/frenet" -> "twxjyg/Hybrid-A-Star-U-Turn-Solution"
"fjp/frenet" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"fjp/frenet" -> "bark-simulator/bark"
"fjp/frenet" -> "SS47816/fiss_planner"
"fjp/frenet" -> "KumarRobotics/conformal_lattice_planner"
"fjp/frenet" -> "LiJiangnanBit/path_optimizer_2"
"qiaoxu123/Self-Driving-Cars" -> "Vinohith/Self_Driving_Car_specialization" ["e"=1]
"qiaoxu123/Self-Driving-Cars" -> "ndrplz/self-driving-car" ["e"=1]
"qiaoxu123/Self-Driving-Cars" -> "zhm-real/MotionPlanning"
"qiaoxu123/Self-Driving-Cars" -> "daohu527/awesome-self-driving-car" ["e"=1]
"qiaoxu123/Self-Driving-Cars" -> "daohu527/dig-into-apollo" ["e"=1]
"qiaoxu123/Self-Driving-Cars" -> "karlkurzer/path_planner"
"qiaoxu123/Self-Driving-Cars" -> "manfreddiaz/awesome-autonomous-vehicles" ["e"=1]
"qiaoxu123/Self-Driving-Cars" -> "Amin-Tgz/awesome-CARLA" ["e"=1]
"qiaoxu123/Self-Driving-Cars" -> "daniel-s-ingram/self_driving_cars_specialization" ["e"=1]
"qiaoxu123/Self-Driving-Cars" -> "teddyluo/hybrid-a-star-annotation"
"qiaoxu123/Self-Driving-Cars" -> "onlytailei/CppRobotics"
"qiaoxu123/Self-Driving-Cars" -> "yangmingustb/Papers"
"qiaoxu123/Self-Driving-Cars" -> "YannZyl/Apollo-Note"
"qiaoxu123/Self-Driving-Cars" -> "alexliniger/MPCC" ["e"=1]
"qiaoxu123/Self-Driving-Cars" -> "LiJiangnanBit/path_optimizer"
"koide3/monocular_person_following" -> "sijanz/robust_people_follower"
"koide3/monocular_person_following" -> "IvLabs/person_following_bot" ["e"=1]
"koide3/monocular_person_following" -> "MedlarTea/MPF_GRR_SLT"
"koide3/monocular_person_following" -> "malwaru/person_following_robot"
"koide3/monocular_person_following" -> "anhbantre/PersonFollowingRobot"
"koide3/monocular_person_following" -> "rauwuckl/ros_simple_follower"
"koide3/monocular_person_following" -> "angusleigh/leg_tracker"
"koide3/monocular_person_following" -> "koide3/hdl_people_tracking" ["e"=1]
"koide3/monocular_person_following" -> "koide3/monocular_people_tracking"
"arrtvv852/Qlearning_AGVpath" -> "wusean1997/HRL_AGV_Navigation_MTON"
"arrtvv852/Qlearning_AGVpath" -> "arrtvv852/ML-for-AGV-dispatching-module"
"arrtvv852/Qlearning_AGVpath" -> "MichielDD/Free-motion-planning-of-multiple-AGVs"
"adityajain07/Path-Planning-Algorithms" -> "greenbtong/Path_Planning_Algorithm"
"ompl/ompl" -> "karlkurzer/path_planner" ["e"=1]
"ompl/ompl" -> "ompl/omplapp" ["e"=1]
"ompl/ompl" -> "sbpl/sbpl" ["e"=1]
"LLNL/hiop" -> "Argonne-National-Laboratory/PIPS" ["e"=1]
"fzi-forschungszentrum-informatik/Lanelet2" -> "intel/ad-rss-lib" ["e"=1]
"fzi-forschungszentrum-informatik/Lanelet2" -> "bark-simulator/bark" ["e"=1]
"fzi-forschungszentrum-informatik/Lanelet2" -> "HKUST-Aerial-Robotics/EPSILON" ["e"=1]
"OpenPTrack/open_ptrack" -> "OpenPTrack/open_ptrack_v2"
"OpenPTrack/open_ptrack" -> "spencer-project/spencer_people_tracking"
"OpenPTrack/open_ptrack" -> "stimulant/ampm" ["e"=1]
"OpenPTrack/open_ptrack" -> "abryden/PCL_Kinect2Kinfu_LargeScale"
"qqfly/how-to-learn-robotics" -> "onlytailei/CppRobotics" ["e"=1]
"adnanmunawar/matlab-rrt-variants" -> "olzhas/rrt_toolbox"
"adnanmunawar/matlab-rrt-variants" -> "Mesywang/Motion-Planning-Algorithms"
"adnanmunawar/matlab-rrt-variants" -> "IngaVS/informed-RRT"
"adnanmunawar/matlab-rrt-variants" -> "emreozanalkan/RRT"
"adnanmunawar/matlab-rrt-variants" -> "Huang0035/RRT-and-RRT-star-plus-APF"
"adnanmunawar/matlab-rrt-variants" -> "RShawshank/Manipulator-obstacle-avoidance-algorithm-"
"adnanmunawar/matlab-rrt-variants" -> "howard789/RRT_star_smart"
"adnanmunawar/matlab-rrt-variants" -> "motion-planning/rrt-algorithms"
"adnanmunawar/matlab-rrt-variants" -> "wrld/ROS_RRT"
"adnanmunawar/matlab-rrt-variants" -> "sychen-sjtu/RRT"
"Farama-Foundation/HighwayEnv" -> "zhm-real/MotionPlanning" ["e"=1]
"Farama-Foundation/HighwayEnv" -> "chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" ["e"=1]
"anagabandi/nn_dynamics" -> "neka-nat/ddp-gym" ["e"=1]
"eleurent/phd-bibliography" -> "chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" ["e"=1]
"eleurent/phd-bibliography" -> "XiaojingGeorgeZhang/OBCA" ["e"=1]
"eleurent/phd-bibliography" -> "zhm-real/MotionPlanning" ["e"=1]
"DLu/navigation_layers" -> "wg-perception/people"
"DLu/navigation_layers" -> "rst-tu-dortmund/costmap_prohibition_layer"
"DLu/navigation_layers" -> "GMahmoud/virtual_costmap_layer"
"Shunichi09/PythonLinearNonlinearControl" -> "anassinator/ilqr" ["e"=1]
"Shunichi09/PythonLinearNonlinearControl" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"Shunichi09/PythonLinearNonlinearControl" -> "YukunXia/Carla_iLQR_MPC" ["e"=1]
"locuslab/differentiable-mpc" -> "tud-amr/mrca-mav" ["e"=1]
"star2dust/paper-simulation" -> "HAOLI-TUKL/Multi_Robots_DMPC" ["e"=1]
"gsartoretti/PRIMAL" -> "marmotlab/PRIMAL2"
"gsartoretti/PRIMAL" -> "GavinPHR/Multi-Agent-Path-Finding"
"gsartoretti/PRIMAL" -> "gavincangan/multiagent-pathfinding"
"gsartoretti/PRIMAL" -> "chenzhike110/MAPF-solver"
"gsartoretti/PRIMAL" -> "mail-ecnu/PICO"
"gsartoretti/PRIMAL" -> "Jiaoyang-Li/RHCR"
"gsartoretti/PRIMAL" -> "ZiyuanMa/DHC"
"gsartoretti/PRIMAL" -> "whoenig/libMultiRobotPlanning"
"gsartoretti/PRIMAL" -> "LyapunovJingci/Warehouse_Robot_Path_Planning"
"gsartoretti/PRIMAL" -> "atb033/multi_agent_path_planning"
"gsartoretti/PRIMAL" -> "thomyphan/rl4mapf"
"gsartoretti/PRIMAL" -> "Jiaoyang-Li/EECBS"
"gsartoretti/PRIMAL" -> "proroklab/magat_pathplanning"
"gsartoretti/PRIMAL" -> "Jiaoyang-Li/CBSH2-RTC"
"gsartoretti/PRIMAL" -> "APRIL-ZJU/CL-CBS"
"danielsnider/gps_goal" -> "bsb808/geonav_transform"
"locusrobotics/fuse" -> "locusrobotics/robot_navigation" ["e"=1]
"methylDragon/ros-sensor-fusion-tutorial" -> "nickcharron/waypoint_nav" ["e"=1]
"methylDragon/ros-sensor-fusion-tutorial" -> "ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" ["e"=1]
"methylDragon/ros-sensor-fusion-tutorial" -> "tysik/obstacle_detector" ["e"=1]
"methylDragon/ros-sensor-fusion-tutorial" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"methylDragon/ros-sensor-fusion-tutorial" -> "locusrobotics/robot_navigation" ["e"=1]
"kadupitiya/ROS-TurtleBot-PID" -> "lmiguelvargasf/trajectory_tracking"
"kadupitiya/ROS-TurtleBot-PID" -> "larics/pure_pursuit"
"MegviiRobot/OdomLaserCalibraTool" -> "MegviiRobot/CamOdomCalibraTool" ["e"=1]
"MegviiRobot/OdomLaserCalibraTool" -> "MegviiRobot/CamLaserCalibraTool" ["e"=1]
"MegviiRobot/OdomLaserCalibraTool" -> "AndreaCensi/calibration"
"MegviiRobot/OdomLaserCalibraTool" -> "kam3k/laser_line_extraction"
"MegviiRobot/OdomLaserCalibraTool" -> "MAPIRlab/rf2o_laser_odometry"
"MegviiRobot/OdomLaserCalibraTool" -> "TouchDeeper/VIW-Fusion" ["e"=1]
"MegviiRobot/OdomLaserCalibraTool" -> "xiangli0608/Creating-2D-laser-slam-from-scratch"
"MegviiRobot/OdomLaserCalibraTool" -> "ydsf16/aruco_ekf_slam" ["e"=1]
"MegviiRobot/OdomLaserCalibraTool" -> "hyye/lio-mapping" ["e"=1]
"MegviiRobot/OdomLaserCalibraTool" -> "ShihanWang/reflector_ekf_slam"
"tejus-gupta/hybrid-astar-planner" -> "karlkurzer/path_planner"
"tejus-gupta/hybrid-astar-planner" -> "teddyluo/hybrid-a-star-annotation"
"tejus-gupta/hybrid-astar-planner" -> "AtsushiSakai/HybridAStarTrailer"
"tejus-gupta/hybrid-astar-planner" -> "zm0612/Hybrid_A_Star"
"tejus-gupta/hybrid-astar-planner" -> "rst-tu-dortmund/mpc_local_planner"
"tejus-gupta/hybrid-astar-planner" -> "marinaKollmitz/lattice_planner"
"tejus-gupta/hybrid-astar-planner" -> "linyicheng1/hybrid_astar"
"tejus-gupta/hybrid-astar-planner" -> "LiJiangnanBit/path_optimizer"
"tejus-gupta/hybrid-astar-planner" -> "XiaojingGeorgeZhang/OBCA"
"tejus-gupta/hybrid-astar-planner" -> "wanghuohuo0716/hybrid_A_star"
"tejus-gupta/hybrid-astar-planner" -> "Geonhee-LEE/mpc_ros"
"tejus-gupta/hybrid-astar-planner" -> "tanujthakkar/Voronoi-Based-Hybrid-Astar"
"tejus-gupta/hybrid-astar-planner" -> "leggedrobotics/se2_navigation" ["e"=1]
"tejus-gupta/hybrid-astar-planner" -> "amslabtech/state_lattice_planner"
"tejus-gupta/hybrid-astar-planner" -> "ZJU-FAST-Lab/Dftpav"
"deepdrive/deepdrive" -> "intel/ad-rss-lib" ["e"=1]
"Hypha-ROS/hypharos_minicar" -> "Geonhee-LEE/mpc_ros"
"Hypha-ROS/hypharos_minicar" -> "Hypha-ROS/hypharos_racecar" ["e"=1]
"Hypha-ROS/hypharos_minicar" -> "rst-tu-dortmund/mpc_local_planner"
"Hypha-ROS/hypharos_minicar" -> "leggedrobotics/se2_navigation" ["e"=1]
"Hypha-ROS/hypharos_minicar" -> "yinzixuan126/mpc_path_follower_ros"
"Hypha-ROS/hypharos_minicar" -> "larics/pure_pursuit"
"Hypha-ROS/hypharos_minicar" -> "gkouros/rsband_local_planner"
"Hypha-ROS/hypharos_minicar" -> "ros-planning/navigation_experimental"
"Hypha-ROS/hypharos_minicar" -> "udacity/CarND-MPC-Project" ["e"=1]
"Hypha-ROS/hypharos_minicar" -> "gkouros/waypoint-global-planner"
"Hypha-ROS/hypharos_minicar" -> "cogsys-tuebingen/gerona"
"Hypha-ROS/hypharos_minicar" -> "amslabtech/state_lattice_planner"
"Hypha-ROS/hypharos_minicar" -> "sikang/mpl_ros" ["e"=1]
"Hypha-ROS/hypharos_minicar" -> "OrebroUniversity/navigation_oru-release" ["e"=1]
"Hypha-ROS/hypharos_minicar" -> "kadupitiya/ROS-TurtleBot-PID"
"Svalorzen/AI-Toolbox" -> "pemami4911/POMDPy"
"Svalorzen/AI-Toolbox" -> "AdaCompNUS/despot"
"Svalorzen/AI-Toolbox" -> "JuliaPOMDP/POMDPs.jl"
"Svalorzen/AI-Toolbox" -> "MADPToolbox/MADP"
"Svalorzen/AI-Toolbox" -> "sawcordwell/pymdptoolbox"
"Svalorzen/AI-Toolbox" -> "AdaCompNUS/sarsop"
"Svalorzen/AI-Toolbox" -> "h2r/pomdp-py"
"Svalorzen/AI-Toolbox" -> "namoshizun/PyPOMDP"
"Svalorzen/AI-Toolbox" -> "chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving"
"Svalorzen/AI-Toolbox" -> "trey0/zmdp"
"Svalorzen/AI-Toolbox" -> "Quuxplusone/from-scratch" ["e"=1]
"Svalorzen/AI-Toolbox" -> "Omegastick/pytorch-cpp-rl" ["e"=1]
"Svalorzen/AI-Toolbox" -> "jmacglashan/burlap" ["e"=1]
"Svalorzen/AI-Toolbox" -> "HKUST-Aerial-Robotics/eudm_planner"
"Svalorzen/AI-Toolbox" -> "coverdrive/MDP-DP-RL"
"icsl-Jeon/traj_gen" -> "qwerty35/swarm_simulator" ["e"=1]
"snape/RVO2" -> "PathPlanning/ORCA-algorithm" ["e"=1]
"snape/RVO2" -> "whoenig/libMultiRobotPlanning" ["e"=1]
"aurora-opensource/xviz" -> "intel/ad-rss-lib" ["e"=1]
"aurora-opensource/xviz" -> "emmjaykay/stanford_self_driving_car_code" ["e"=1]
"paulyehtw/Lane-Keeping-Assist-on-CARLA" -> "casper-auto/carla_trajectory_controller" ["e"=1]
"peterWon/CleaningRobot" -> "li-haojia/Clean-robot-turtlebot3"
"peterWon/CleaningRobot" -> "hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS"
"peterWon/CleaningRobot" -> "ipa320/ipa_coverage_planning"
"peterWon/CleaningRobot" -> "nobleo/full_coverage_path_planner"
"peterWon/CleaningRobot" -> "ethz-asl/polygon_coverage_planning"
"peterWon/CleaningRobot" -> "Greenzie/boustrophedon_planner"
"peterWon/CleaningRobot" -> "ipa-rmb/autopnp"
"peterWon/CleaningRobot" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"peterWon/CleaningRobot" -> "RicheyHuang/CoveragePlanner"
"peterWon/CleaningRobot" -> "nalin1096/path_planning"
"jeshoward/turtlebot_rrt" -> "nalin1096/path_planning"
"jeshoward/turtlebot_rrt" -> "Mayavan/RRT-star-path-planning-with-turtlebot"
"jeshoward/turtlebot_rrt" -> "hasauino/rrt_exploration"
"jeshoward/turtlebot_rrt" -> "hasauino/rrt_exploration_tutorials"
"jeshoward/turtlebot_rrt" -> "rafaelbarretorb/rrt_star_global_planner"
"jeshoward/turtlebot_rrt" -> "srl-freiburg/srl_global_planner"
"jeshoward/turtlebot_rrt" -> "ayushgaud/path_planning" ["e"=1]
"jeshoward/turtlebot_rrt" -> "longjianquan/add--planner"
"jeshoward/turtlebot_rrt" -> "Zhi29/RRTstar-planner-for-ROS-navigation"
"vss2sn/path_planning" -> "LiJiangnanBit/path_optimizer"
"vss2sn/path_planning" -> "medalotte/sampling-based-planners"
"vss2sn/path_planning" -> "nalin1096/path_planning"
"vss2sn/path_planning" -> "teddyluo/hybrid-a-star-annotation"
"vss2sn/path_planning" -> "hourenyu/--original--Trajectory-optimization-based-on-Bezier-polynomial-motion-planning-"
"vss2sn/path_planning" -> "LIJUNCHENG001/multi_robot_traj_planner"
"vss2sn/path_planning" -> "marinaKollmitz/lattice_planner"
"vss2sn/path_planning" -> "Mesywang/Astar-JPS-Algorithm" ["e"=1]
"vss2sn/path_planning" -> "rishabh1b/RealTimePathPlanning"
"vss2sn/path_planning" -> "mit-acl/faster" ["e"=1]
"vss2sn/path_planning" -> "palmieri/srl_dstar_lite"
"vss2sn/path_planning" -> "ayushgaud/path_planning" ["e"=1]
"vss2sn/path_planning" -> "LiJiangnanBit/path_optimizer_2"
"vss2sn/path_planning" -> "karlkurzer/path_planner"
"vss2sn/path_planning" -> "TixiaoShan/lexicographic_planning"
"HuangCongQing/ROS" -> "moribots/motion_planning" ["e"=1]
"HuangCongQing/ROS" -> "CHH3213/chhRobotics_CPP" ["e"=1]
"mohammadasghari/dqn-multi-agent-rl" -> "sumitrj/ConnectedQ-Multi-agent-Reinforcement-Learning-Algorithm" ["e"=1]
"ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver" -> "rookie7777/Path-planning" ["e"=1]
"ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver" -> "ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning"
"ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver" -> "tommy1900/Path-Planning-Frenet-Frame-Optimal-Trajectory-Generation-JMT"
"ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver" -> "fjp/frenet"
"ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver" -> "MajidMoghadam2006/RL-frenet-trajectory-planning-in-CARLA" ["e"=1]
"uoip/g2opy" -> "JeffLIrion/python-graphslam" ["e"=1]
"Geonhee-LEE/mpc_ros" -> "rst-tu-dortmund/mpc_local_planner"
"Geonhee-LEE/mpc_ros" -> "Hypha-ROS/hypharos_minicar"
"Geonhee-LEE/mpc_ros" -> "alexliniger/MPCC" ["e"=1]
"Geonhee-LEE/mpc_ros" -> "karlkurzer/path_planner"
"Geonhee-LEE/mpc_ros" -> "LiJiangnanBit/path_optimizer"
"Geonhee-LEE/mpc_ros" -> "leggedrobotics/se2_navigation" ["e"=1]
"Geonhee-LEE/mpc_ros" -> "teddyluo/hybrid-a-star-annotation"
"Geonhee-LEE/mpc_ros" -> "sikang/mpl_ros" ["e"=1]
"Geonhee-LEE/mpc_ros" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"Geonhee-LEE/mpc_ros" -> "jianzhuozhuTHU/MPC-D-CBF" ["e"=1]
"Geonhee-LEE/mpc_ros" -> "zhm-real/MotionPlanning"
"Geonhee-LEE/mpc_ros" -> "zm0612/Hybrid_A_Star"
"Geonhee-LEE/mpc_ros" -> "nobleo/full_coverage_path_planner"
"Geonhee-LEE/mpc_ros" -> "at-wat/neonavigation"
"Geonhee-LEE/mpc_ros" -> "onlytailei/CppRobotics"
"anassinator/ilqr" -> "Bharath2/iLQR"
"anassinator/ilqr" -> "pparmesh/Constrained_ILQR"
"anassinator/ilqr" -> "YukunXia/Carla_iLQR_MPC"
"anassinator/ilqr" -> "Shunichi09/PythonLinearNonlinearControl" ["e"=1]
"anassinator/ilqr" -> "kazuotani14/iLQR"
"anassinator/ilqr" -> "HJReachability/ilqgames"
"anassinator/ilqr" -> "RoboticExplorationLab/TrajectoryOptimization.jl" ["e"=1]
"anassinator/ilqr" -> "locuslab/mpc.pytorch" ["e"=1]
"anassinator/ilqr" -> "ZJU-FAST-Lab/Dftpav"
"anassinator/ilqr" -> "RoboticExplorationLab/Altro.jl" ["e"=1]
"anassinator/ilqr" -> "HKUST-Aerial-Robotics/EPSILON"
"anassinator/ilqr" -> "LiJiangnanBit/path_optimizer_ilqr"
"anassinator/ilqr" -> "navigator8972/pylqr"
"anassinator/ilqr" -> "optimusride/altro-cpp" ["e"=1]
"anassinator/ilqr" -> "ethz-adrl/control-toolbox" ["e"=1]
"aurora-opensource/streetscape.gl" -> "intel/ad-rss-lib" ["e"=1]
"intel/ad-rss-lib" -> "bark-simulator/bark"
"intel/ad-rss-lib" -> "HKUST-Aerial-Robotics/EPSILON"
"intel/ad-rss-lib" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"intel/ad-rss-lib" -> "fzi-forschungszentrum-informatik/Lanelet2" ["e"=1]
"intel/ad-rss-lib" -> "chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving"
"intel/ad-rss-lib" -> "pyoscx/scenariogeneration" ["e"=1]
"intel/ad-rss-lib" -> "HKUST-Aerial-Robotics/eudm_planner"
"intel/ad-rss-lib" -> "YannZyl/Apollo-Note"
"intel/ad-rss-lib" -> "AdaCompNUS/despot"
"intel/ad-rss-lib" -> "esmini/esmini" ["e"=1]
"intel/ad-rss-lib" -> "openMSL/sl-3-1-osc-alks-scenarios" ["e"=1]
"intel/ad-rss-lib" -> "Tsinghua-MARS-Lab/DenseTNT" ["e"=1]
"intel/ad-rss-lib" -> "AdaCompNUS/summit"
"intel/ad-rss-lib" -> "erdos-project/pylot" ["e"=1]
"intel/ad-rss-lib" -> "cjy1992/interp-e2e-driving" ["e"=1]
"tonyxxq/MPC-Control" -> "gxf1002/ShenLanAcademy-PlanningControl"
"MegviiRobot/CamLaserCalibraTool" -> "MegviiRobot/OdomLaserCalibraTool" ["e"=1]
"MegviiRobot/CamLaserCalibraTool" -> "kam3k/laser_line_extraction" ["e"=1]
"nathanlct/reeds-shepp-curves" -> "ghliu/pyReedsShepp"
"nathanlct/reeds-shepp-curves" -> "zwkcoding/car_geometric_planner"
"nathanlct/reeds-shepp-curves" -> "RajPShinde/Hybrid-A-Star"
"nathanlct/reeds-shepp-curves" -> "zhm-real/CurvesGenerator"
"merschformann/RAWSim-O" -> "WangHanfu/Multi-agent-Path-Finding-in-Warehouse"
"merschformann/RAWSim-O" -> "GavinPHR/Multi-Agent-Path-Finding"
"merschformann/RAWSim-O" -> "gsartoretti/PRIMAL"
"merschformann/RAWSim-O" -> "Kei18/mapf-IR"
"merschformann/RAWSim-O" -> "APRIL-ZJU/CL-CBS"
"merschformann/RAWSim-O" -> "gavincangan/multiagent-pathfinding"
"merschformann/RAWSim-O" -> "whoenig/libMultiRobotPlanning"
"merschformann/RAWSim-O" -> "ai4co/eph-mapf"
"merschformann/RAWSim-O" -> "marmotlab/SCRIMP"
"merschformann/RAWSim-O" -> "speedzjy/mapf_ros"
"Le0nX/ModernRoboticsCpp" -> "onlytailei/CppRobotics" ["e"=1]
"ydsf16/aruco_ekf_slam" -> "ShihanWang/reflector_ekf_slam" ["e"=1]
"ydsf16/aruco_ekf_slam" -> "MegviiRobot/OdomLaserCalibraTool" ["e"=1]
"wrld/ROS_RRT" -> "MKJia/ROS-navigation-RRT"
"wrld/ROS_RRT" -> "Zhi29/RRTstar-planner-for-ROS-navigation"
"wrld/ROS_RRT" -> "rafaelbarretorb/rrt_star_global_planner"
"coverdrive/MDP-DP-RL" -> "sachinbiradar9/Markov-Decision-Processes"
"coverdrive/MDP-DP-RL" -> "sawcordwell/pymdptoolbox"
"coverdrive/MDP-DP-RL" -> "coverdrive/technical-documents"
"coverdrive/MDP-DP-RL" -> "TikhonJelvis/RL-book" ["e"=1]
"coverdrive/MDP-DP-RL" -> "chronoxor/CppCommon" ["e"=1]
"coverdrive/MDP-DP-RL" -> "Quuxplusone/from-scratch" ["e"=1]
"nickcharron/waypoint_nav" -> "ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros"
"nickcharron/waypoint_nav" -> "danielsnider/follow_waypoints"
"nickcharron/waypoint_nav" -> "gkouros/waypoint-global-planner"
"nickcharron/waypoint_nav" -> "husky/husky" ["e"=1]
"nickcharron/waypoint_nav" -> "methylDragon/ros-sensor-fusion-tutorial" ["e"=1]
"nickcharron/waypoint_nav" -> "ros-drivers/nmea_navsat_driver" ["e"=1]
"nickcharron/waypoint_nav" -> "danielsnider/gps_goal"
"nickcharron/waypoint_nav" -> "naturerobots/mesh_navigation" ["e"=1]
"nickcharron/waypoint_nav" -> "cra-ros-pkg/robot_localization" ["e"=1]
"nickcharron/waypoint_nav" -> "nobleo/rviz_satellite" ["e"=1]
"nickcharron/waypoint_nav" -> "bsb808/geonav_transform"
"nickcharron/waypoint_nav" -> "larics/pure_pursuit"
"nickcharron/waypoint_nav" -> "nobleo/full_coverage_path_planner"
"nickcharron/waypoint_nav" -> "ros-planning/3d_navigation"
"nickcharron/waypoint_nav" -> "locusrobotics/robot_navigation"
"ros-drivers/nmea_navsat_driver" -> "nickcharron/waypoint_nav" ["e"=1]
"gkouros/waypoint-global-planner" -> "gkouros/rsband_local_planner"
"gkouros/waypoint-global-planner" -> "asr-ros/asr_ftc_local_planner"
"gkouros/waypoint-global-planner" -> "nobleo/tracking_pid"
"gkouros/waypoint-global-planner" -> "frontw/voronoi_planner"
"gkouros/waypoint-global-planner" -> "nobleo/full_coverage_path_planner"
"robosoft-ai/SMACC" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"Strange-AI/frenet_path_planning" -> "teddyluo/hybrid-a-star-annotation"
"Strange-AI/frenet_path_planning" -> "xuedidi/path_planning"
"Strange-AI/frenet_path_planning" -> "zhm-real/MotionPlanning"
"Strange-AI/frenet_path_planning" -> "LiJiangnanBit/path_optimizer"
"Strange-AI/frenet_path_planning" -> "nalin1096/path_planning"
"Strange-AI/frenet_path_planning" -> "ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning"
"Strange-AI/frenet_path_planning" -> "zhaohaojie1998/Path-Planning"
"Strange-AI/frenet_path_planning" -> "wanghuohuo0716/hybrid_A_star"
"Strange-AI/frenet_path_planning" -> "sikang/mpl_ros" ["e"=1]
"Strange-AI/frenet_path_planning" -> "NeXTzhao/planning"
"Strange-AI/frenet_path_planning" -> "karlkurzer/path_planner"
"Strange-AI/frenet_path_planning" -> "rishabh1b/RealTimePathPlanning"
"Strange-AI/frenet_path_planning" -> "atb033/multi_agent_path_planning"
"Strange-AI/frenet_path_planning" -> "ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver"
"Strange-AI/frenet_path_planning" -> "sichkar-valentyn/Reinforcement_Learning_in_Python" ["e"=1]
"naturerobots/mesh_navigation" -> "at-wat/neonavigation" ["e"=1]
"naturerobots/mesh_navigation" -> "nobleo/full_coverage_path_planner" ["e"=1]
"naturerobots/mesh_navigation" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"ethz-asl/polygon_coverage_planning" -> "RicheyHuang/CoveragePlanner"
"ethz-asl/polygon_coverage_planning" -> "nobleo/full_coverage_path_planner"
"ethz-asl/polygon_coverage_planning" -> "Greenzie/boustrophedon_planner"
"ethz-asl/polygon_coverage_planning" -> "ipa320/ipa_coverage_planning"
"ethz-asl/polygon_coverage_planning" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"ethz-asl/polygon_coverage_planning" -> "18alantom/CoveragePathPlanning"
"ethz-asl/polygon_coverage_planning" -> "Fields2Cover/Fields2Cover"
"ethz-asl/polygon_coverage_planning" -> "peterWon/CleaningRobot"
"ethz-asl/polygon_coverage_planning" -> "li-haojia/Clean-robot-turtlebot3"
"ethz-asl/polygon_coverage_planning" -> "RJJxp/CoveragePlanning"
"ethz-asl/polygon_coverage_planning" -> "athakapo/DARP"
"ethz-asl/polygon_coverage_planning" -> "rst-tu-dortmund/mpc_local_planner"
"ethz-asl/polygon_coverage_planning" -> "HongbiaoZ/autonomous_exploration_development_environment" ["e"=1]
"ethz-asl/polygon_coverage_planning" -> "jizhang-cmu/ground_based_autonomy_basic" ["e"=1]
"ethz-asl/polygon_coverage_planning" -> "hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS"
"Greenzie/boustrophedon_planner" -> "ethz-asl/polygon_coverage_planning"
"Greenzie/boustrophedon_planner" -> "nobleo/full_coverage_path_planner"
"Greenzie/boustrophedon_planner" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"Greenzie/boustrophedon_planner" -> "RicheyHuang/CoveragePlanner"
"Greenzie/boustrophedon_planner" -> "ipa320/ipa_coverage_planning"
"Greenzie/boustrophedon_planner" -> "ipa-rmb/autopnp"
"Greenzie/boustrophedon_planner" -> "RJJxp/CoveragePlanning"
"Greenzie/boustrophedon_planner" -> "hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS"
"Greenzie/boustrophedon_planner" -> "peterWon/CleaningRobot"
"Greenzie/boustrophedon_planner" -> "li-haojia/Clean-robot-turtlebot3"
"Greenzie/boustrophedon_planner" -> "jhlenes/complete_coverage" ["e"=1]
"Greenzie/boustrophedon_planner" -> "rst-tu-dortmund/mpc_local_planner"
"Greenzie/boustrophedon_planner" -> "Fields2Cover/Fields2Cover"
"Greenzie/boustrophedon_planner" -> "leggedrobotics/se2_navigation" ["e"=1]
"Greenzie/boustrophedon_planner" -> "ros-planning/navigation_experimental"
"AndreaCensi/calibration" -> "MegviiRobot/OdomLaserCalibraTool"
"AndreaCensi/calibration" -> "KOTOKORURU/odometry_calibration"
"XiaojingGeorgeZhang/OBCA" -> "XiaojingGeorgeZhang/H-OBCA"
"XiaojingGeorgeZhang/OBCA" -> "karlkurzer/path_planner"
"XiaojingGeorgeZhang/OBCA" -> "LiJiangnanBit/path_optimizer"
"XiaojingGeorgeZhang/OBCA" -> "AtsushiSakai/HybridAStarTrailer"
"XiaojingGeorgeZhang/OBCA" -> "rst-tu-dortmund/mpc_local_planner"
"XiaojingGeorgeZhang/OBCA" -> "pparmesh/Constrained_ILQR"
"XiaojingGeorgeZhang/OBCA" -> "sikang/mpl_ros" ["e"=1]
"XiaojingGeorgeZhang/OBCA" -> "alexliniger/MPCC" ["e"=1]
"XiaojingGeorgeZhang/OBCA" -> "teddyluo/hybrid-a-star-annotation"
"XiaojingGeorgeZhang/OBCA" -> "tejus-gupta/hybrid-astar-planner"
"XiaojingGeorgeZhang/OBCA" -> "urosolia/RacingLMPC" ["e"=1]
"XiaojingGeorgeZhang/OBCA" -> "HKUST-Aerial-Robotics/EPSILON"
"XiaojingGeorgeZhang/OBCA" -> "HKUST-Aerial-Robotics/eudm_planner"
"XiaojingGeorgeZhang/OBCA" -> "ZJU-FAST-Lab/Dftpav"
"XiaojingGeorgeZhang/OBCA" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"zhaoxrthu/DQN_of_DWA_matlab" -> "oz182/3D-Navigation---DWA-and-A-"
"zhaoxrthu/DQN_of_DWA_matlab" -> "DeepDuke/DWA-Simulation"
"zhaoxrthu/DQN_of_DWA_matlab" -> "LazyFalcon/D_star_PathPlanning"
"emreozanalkan/RRT" -> "olzhas/rrt_toolbox"
"JuliaReinforcementLearning/ReinforcementLearning.jl" -> "JuliaPOMDP/POMDPs.jl" ["e"=1]
"srl-freiburg/pedsim_ros" -> "spencer-project/spencer_people_tracking" ["e"=1]
"srl-freiburg/pedsim_ros" -> "marinaKollmitz/human_aware_navigation" ["e"=1]
"srl-freiburg/pedsim_ros" -> "VisualComputingInstitute/2D_lidar_person_detection" ["e"=1]
"yangmingustb/planning_books_1" -> "yangmingustb/Papers"
"yangmingustb/planning_books_1" -> "yangmingustb/planning_books_2"
"yangmingustb/planning_books_1" -> "rst-tu-dortmund/mpc_local_planner"
"yangmingustb/planning_books_1" -> "LiJiangnanBit/path_optimizer"
"yangmingustb/planning_books_1" -> "onlytailei/CppRobotics"
"yangmingustb/planning_books_1" -> "sikang/mpl_ros" ["e"=1]
"yangmingustb/planning_books_1" -> "karlkurzer/path_planner"
"yangmingustb/planning_books_1" -> "yangmingustb/Local-Planner"
"yangmingustb/planning_books_1" -> "Shunichi09/PythonLinearNonlinearControl" ["e"=1]
"yangmingustb/planning_books_1" -> "Geonhee-LEE/mpc_ros"
"yangmingustb/planning_books_1" -> "Boyang--Li/Motion-Planning-Course"
"yangmingustb/planning_books_1" -> "AtsushiSakai/HybridAStarTrailer"
"yangmingustb/planning_books_1" -> "Gongyihang/Motion-Planning"
"yangmingustb/planning_books_1" -> "ompl/ompl" ["e"=1]
"yangmingustb/planning_books_1" -> "ZJU-FAST-Lab/Dftpav"
"Habrador/Self-driving-vehicle" -> "hbanzhaf/steering_functions"
"Habrador/Self-driving-vehicle" -> "karlkurzer/path_planner"
"Habrador/Self-driving-vehicle" -> "tejus-gupta/hybrid-astar-planner"
"Habrador/Self-driving-vehicle" -> "jhan15/dubins_path_planning"
"Habrador/Self-driving-vehicle" -> "ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning"
"Habrador/Self-driving-vehicle" -> "Fields2Cover/Fields2Cover"
"Habrador/Self-driving-vehicle" -> "zhm-real/CurvesGenerator"
"Habrador/Self-driving-vehicle" -> "XiaojingGeorgeZhang/OBCA"
"Habrador/Self-driving-vehicle" -> "wanghuohuo0716/hybrid_A_star"
"Habrador/Self-driving-vehicle" -> "nathanlct/reeds-shepp-curves"
"Habrador/Self-driving-vehicle" -> "AtsushiSakai/HybridAStarTrailer"
"Habrador/Self-driving-vehicle" -> "libai1943/CartesianPlanner"
"Habrador/Self-driving-vehicle" -> "leggedrobotics/se2_navigation" ["e"=1]
"Habrador/Self-driving-vehicle" -> "RajPShinde/Hybrid-A-Star"
"Habrador/Self-driving-vehicle" -> "LiJiangnanBit/path_optimizer"
"jhlenes/complete_coverage" -> "18alantom/CoveragePathPlanning" ["e"=1]
"int8/monte-carlo-tree-search" -> "haroldsultan/MCTS"
"int8/monte-carlo-tree-search" -> "benedekrozemberczki/awesome-monte-carlo-tree-search-papers" ["e"=1]
"int8/monte-carlo-tree-search" -> "PetterS/monte-carlo-tree-search" ["e"=1]
"int8/monte-carlo-tree-search" -> "tobegit3hub/ml_implementation"
"int8/monte-carlo-tree-search" -> "pbsinclair42/MCTS"
"int8/monte-carlo-tree-search" -> "jbradberry/mcts"
"int8/monte-carlo-tree-search" -> "int8/gomcts"
"int8/monte-carlo-tree-search" -> "ImparaAI/monte-carlo-tree-search"
"int8/monte-carlo-tree-search" -> "namoshizun/PyPOMDP"
"int8/monte-carlo-tree-search" -> "hildensia/mcts"
"int8/monte-carlo-tree-search" -> "masouduut94/MCTS-agent-python"
"int8/monte-carlo-tree-search" -> "junxiaosong/AlphaZero_Gomoku" ["e"=1]
"int8/monte-carlo-tree-search" -> "pemami4911/POMDPy"
"int8/monte-carlo-tree-search" -> "hrpan/tetris_mcts" ["e"=1]
"int8/monte-carlo-tree-search" -> "cryer/monte-carlo-tree-search"
"sichkar-valentyn/Reinforcement_Learning_in_Python" -> "atb033/multi_agent_path_planning" ["e"=1]
"sichkar-valentyn/Reinforcement_Learning_in_Python" -> "LyapunovJingci/Warehouse_Robot_Path_Planning" ["e"=1]
"katetolstaya/multiagent_gnn_policies" -> "katetolstaya/gym-flock"
"katetolstaya/multiagent_gnn_policies" -> "katetolstaya/graph_rl"
"bark-simulator/bark" -> "bark-simulator/bark-ml"
"bark-simulator/bark" -> "mjxu96/carlaviz" ["e"=1]
"bark-simulator/bark" -> "chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving"
"bark-simulator/bark" -> "intel/ad-rss-lib"
"bark-simulator/bark" -> "HKUST-Aerial-Robotics/eudm_planner"
"bark-simulator/bark" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"bark-simulator/bark" -> "AdaCompNUS/summit"
"bark-simulator/bark" -> "HKUST-Aerial-Robotics/EPSILON"
"bark-simulator/bark" -> "AdaCompNUS/despot"
"bark-simulator/bark" -> "bark-simulator/planner-mcts" ["e"=1]
"bark-simulator/bark" -> "jchengai/gpir"
"bark-simulator/bark" -> "Iftimie/ChauffeurNet" ["e"=1]
"bark-simulator/bark" -> "pparmesh/Constrained_ILQR"
"bark-simulator/bark" -> "praveen-palanisamy/macad-gym" ["e"=1]
"bark-simulator/bark" -> "SS47816/fiss_planner"
"mit-acl/cadrl_ros" -> "spencer-project/spencer_people_tracking" ["e"=1]
"yangmingustb/Papers" -> "yangmingustb/Local-Planner"
"yangmingustb/Papers" -> "HKUST-Aerial-Robotics/EPSILON"
"yangmingustb/Papers" -> "yangmingustb/planning_books_1"
"yangmingustb/Papers" -> "YannZyl/Apollo-Note"
"yangmingustb/Papers" -> "teddyluo/hybrid-a-star-annotation"
"yangmingustb/Papers" -> "karlkurzer/path_planner"
"yangmingustb/Papers" -> "LiJiangnanBit/path_optimizer"
"yangmingustb/Papers" -> "Gongyihang/Motion-Planning"
"yangmingustb/Papers" -> "twxjyg/Hybrid-A-Star-U-Turn-Solution"
"yangmingustb/Papers" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"yangmingustb/Papers" -> "AtsushiSakai/HybridAStarTrailer"
"yangmingustb/Papers" -> "HKUST-Aerial-Robotics/Btraj" ["e"=1]
"yangmingustb/Papers" -> "pparmesh/Constrained_ILQR"
"yangmingustb/Papers" -> "HKUST-Aerial-Robotics/grad_traj_optimization" ["e"=1]
"yangmingustb/Papers" -> "AdaCompNUS/despot"
"XiaojingGeorgeZhang/H-OBCA" -> "XiaojingGeorgeZhang/OBCA"
"XiaojingGeorgeZhang/H-OBCA" -> "libai1943/CartesianPlanner"
"XiaojingGeorgeZhang/H-OBCA" -> "pparmesh/Constrained_ILQR"
"XiaojingGeorgeZhang/H-OBCA" -> "ZJU-FAST-Lab/Dftpav"
"XiaojingGeorgeZhang/H-OBCA" -> "AtsushiSakai/HybridAStarTrailer"
"XiaojingGeorgeZhang/H-OBCA" -> "HKUST-Aerial-Robotics/eudm_planner"
"XiaojingGeorgeZhang/H-OBCA" -> "HKUST-Aerial-Robotics/EPSILON"
"XiaojingGeorgeZhang/H-OBCA" -> "LiJiangnanBit/path_optimizer_2"
"XiaojingGeorgeZhang/H-OBCA" -> "zhaokun506/parking"
"XiaojingGeorgeZhang/H-OBCA" -> "hbanzhaf/steering_functions"
"NKU-MobFly-Robotics/laser-line-segment" -> "kam3k/laser_line_extraction"
"NKU-MobFly-Robotics/laser-line-segment" -> "MAPIRlab/srf_laser_odometry"
"NKU-MobFly-Robotics/laser-line-segment" -> "NKU-MobFly-Robotics/laser_scan_matcher"
"shannon112/awesome-ros-mobile-robot" -> "locusrobotics/robot_navigation" ["e"=1]
"shannon112/awesome-ros-mobile-robot" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"shannon112/awesome-ros-mobile-robot" -> "gkouros/waypoint-global-planner" ["e"=1]
"hatem-darweesh/assuremappingtools" -> "KumarRobotics/conformal_lattice_planner" ["e"=1]
"sisl/PedestrianAvoidancePOMDP.jl" -> "AdaCompNUS/context-pomdp" ["e"=1]
"DavidLining/3D_PathPlanner" -> "mds1/path-planning"
"DavidLining/3D_PathPlanner" -> "yahsiuhsieh/path-planning-algorithms"
"DavidLining/3D_PathPlanner" -> "danielesartori/3D-grid-path-planning"
"ejmahler/SplineLibrary" -> "bgrimstad/splinter"
"ejmahler/SplineLibrary" -> "msteinbeck/tinyspline" ["e"=1]
"ejmahler/SplineLibrary" -> "andrewwillmott/splines-lib" ["e"=1]
"ejmahler/SplineLibrary" -> "snsinfu/cxx-spline"
"ejmahler/SplineLibrary" -> "ttk592/spline"
"ejmahler/SplineLibrary" -> "ebertolazzi/Splines"
"HobbySingh/Path-Planning-Algorithms" -> "LazyFalcon/D_star_PathPlanning"
"HobbySingh/Path-Planning-Algorithms" -> "herryCccc/Mobile-robot-path-planning"
"HobbySingh/Path-Planning-Algorithms" -> "ayawaya2014/APF_Code"
"HobbySingh/Path-Planning-Algorithms" -> "szc19990412/Path-Planning"
"Yaaximus/genetic-algorithm-path-planning" -> "Yaaximus/robotics-python"
"Yaaximus/genetic-algorithm-path-planning" -> "Yaaximus/artificial-potential-field"
"Yaaximus/genetic-algorithm-path-planning" -> "Yaaximus/artificial-potential-field-matlab"
"d3sm0/gym_pomdp" -> "stweigand/gym-pomdp-wrappers"
"realkushagrakhare/3D_Path_Planning" -> "gstavrinos/GA_for_Multi-Goal_3D_Occupancy_Grid_Path_Planning"
"realkushagrakhare/3D_Path_Planning" -> "DavidLining/3D_PathPlanner"
"Acmece/rl-collision-avoidance" -> "gsartoretti/PRIMAL" ["e"=1]
"Acmece/rl-collision-avoidance" -> "atb033/multi_agent_path_planning" ["e"=1]
"sunmiaozju/smartcar" -> "Boyang--Li/Motion-Planning-Course" ["e"=1]
"AprilRobotics/apriltag_ros" -> "ros-perception/laser_filters" ["e"=1]
"Slamtec/rplidar_ros" -> "ros-perception/laser_filters" ["e"=1]
"tesseract-robotics/trajopt" -> "yzhao334/Efficient-Trajectory-Optimization-for-Robot-Motion-Planning--Examples" ["e"=1]
"ompl/omplapp" -> "ompl/ompl" ["e"=1]
"ompl/omplapp" -> "sbpl/sbpl"
"ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning" -> "twxjyg/Hybrid-A-Star-U-Turn-Solution"
"ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning" -> "RajPShinde/Hybrid-A-Star"
"ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning" -> "ChenBohan/Robotics-Path-Planning-03-Hybrid-A-Star"
"ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning" -> "ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver"
"eric-heiden/grips" -> "linxigjs/path_smoother"
"eric-heiden/grips" -> "gkouros/path-smoothing-ros"
"WJTung/GA-TSPCPP" -> "jazzalin/area-coverage-nav"
"WJTung/GA-TSPCPP" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"WJTung/GA-TSPCPP" -> "KunHanKH/Comple-Coverage-Path-PLanning-Based-on-Cell-Desomposition"
"WJTung/GA-TSPCPP" -> "sbochkar/coverage_path_planning"
"WJTung/GA-TSPCPP" -> "reso1/MSTC_Star"
"ShuiXinYun/Path_Plan" -> "vampcoder/Artificial-Potential-Field"
"ShuiXinYun/Path_Plan" -> "vampcoder/Hybrid-Artificial-Potential-Field-A-star-Planning"
"ShuiXinYun/Path_Plan" -> "MingyangLiu1995-s/A-hybrid-path-planning-algorithm-based-on-APF-and-Astar"
"ShuiXinYun/Path_Plan" -> "nccvector/aritificial-potential-field"
"ShuiXinYun/Path_Plan" -> "mn270/Robot_path_planning"
"ShuiXinYun/Path_Plan" -> "liuxuexun/Artificial-Potential-Field"
"ShuiXinYun/Path_Plan" -> "Huang0035/RRT-and-RRT-star-plus-APF"
"ShuiXinYun/Path_Plan" -> "naderAsadi/Optimal-Path-Planning-Deep-Reinforcement-Learning" ["e"=1]
"ShuiXinYun/Path_Plan" -> "Yaaximus/artificial-potential-field"
"ShuiXinYun/Path_Plan" -> "surya9teja/3D-Artificial-Potential-Field"
"zzuwz/Artificial-Potential-Field" -> "JianmingTONG/Artificial_Potential_Field_MultiTarget"
"yinzixuan126/mpc_path_follower_ros" -> "Forrest-Z/mpc_waypoint_tracking_controller"
"intel/ros_object_analytics" -> "wg-perception/people" ["e"=1]
"intel/ros_object_analytics" -> "strands-project/strands_perception_people" ["e"=1]
"gavincangan/multiagent-pathfinding" -> "GavinPHR/Multi-Agent-Path-Finding"
"gavincangan/multiagent-pathfinding" -> "enginbaglayici/ConflictBasedSearch"
"gavincangan/multiagent-pathfinding" -> "gsartoretti/PRIMAL"
"gavincangan/multiagent-pathfinding" -> "Jiaoyang-Li/CBSH2"
"gavincangan/multiagent-pathfinding" -> "WangHanfu/Multi-agent-Path-Finding-in-Warehouse"
"gavincangan/multiagent-pathfinding" -> "cristianbretti/warehouse_MAPF"
"gavincangan/multiagent-pathfinding" -> "bwwu/MAPF"
"gavincangan/multiagent-pathfinding" -> "chenzhike110/MAPF-solver"
"gavincangan/multiagent-pathfinding" -> "mchtalkn/MAPF_CBS"
"gavincangan/multiagent-pathfinding" -> "APLA-Toolbox/pymapf"
"AtsushiSakai/HybridAStarTrailer" -> "XiaojingGeorgeZhang/OBCA"
"AtsushiSakai/HybridAStarTrailer" -> "tejus-gupta/hybrid-astar-planner"
"AtsushiSakai/HybridAStarTrailer" -> "XiaojingGeorgeZhang/H-OBCA"
"AtsushiSakai/HybridAStarTrailer" -> "karlkurzer/path_planner"
"AtsushiSakai/HybridAStarTrailer" -> "teddyluo/hybrid-a-star-annotation"
"AtsushiSakai/HybridAStarTrailer" -> "yangmingustb/Papers"
"AtsushiSakai/HybridAStarTrailer" -> "udacity/CarND-MPC-Project" ["e"=1]
"AtsushiSakai/HybridAStarTrailer" -> "yangmingustb/Local-Planner"
"AtsushiSakai/HybridAStarTrailer" -> "gkouros/rsband_local_planner"
"AtsushiSakai/HybridAStarTrailer" -> "emmjaykay/stanford_self_driving_car_code"
"AtsushiSakai/HybridAStarTrailer" -> "linxigjs/path_smoother"
"AtsushiSakai/HybridAStarTrailer" -> "LiJiangnanBit/path_optimizer"
"AtsushiSakai/HybridAStarTrailer" -> "AtsushiSakai/PyAdvancedControl" ["e"=1]
"amslabtech/state_lattice_planner" -> "marinaKollmitz/lattice_planner"
"amslabtech/state_lattice_planner" -> "TixiaoShan/lexicographic_planning"
"amslabtech/state_lattice_planner" -> "nkuwenjian/voronoi_planner"
"amslabtech/state_lattice_planner" -> "linxigjs/path_smoother"
"amslabtech/state_lattice_planner" -> "LiJiangnanBit/path_optimizer"
"amslabtech/state_lattice_planner" -> "alirezaahmadi/AgriBot-Local-Planner"
"urosolia/RacingLMPC" -> "XiaojingGeorgeZhang/OBCA" ["e"=1]
"urosolia/RacingLMPC" -> "YukunXia/Carla_iLQR_MPC" ["e"=1]
"dawnjeanh/motionplanning" -> "jhan15/dubins_path_planning"
"wuhaoran996/openRobotics" -> "YashBansod/Robotics-Planning-Dynamics-and-Control"
"wuhaoran996/openRobotics" -> "mathworks-robotics/trajectory-planning-robot-manipulators"
"wuhaoran996/openRobotics" -> "olzhas/rrt_toolbox"
"wuhaoran996/openRobotics" -> "mws262/MATLABImpedanceControlExample" ["e"=1]
"wuhaoran996/openRobotics" -> "Ys-Jia/Q-Six_axis-Robotic_Arm"
"wuhaoran996/openRobotics" -> "huchunxu/ros_21_tutorials" ["e"=1]
"wuhaoran996/openRobotics" -> "yrlu/quadrotor" ["e"=1]
"nccvector/aritificial-potential-field" -> "nccvector/raytracer-python"
"nccvector/aritificial-potential-field" -> "Yaaximus/artificial-potential-field"
"nccvector/aritificial-potential-field" -> "nccvector/Genetic-Algorithm-For-Feature-Reduction"
"nccvector/aritificial-potential-field" -> "nccvector/raytracer-opengl"
"nccvector/aritificial-potential-field" -> "nccvector/Electro-Myography-EMG-Dataset"
"saifullah3396/Constrained-Minimum-Time-Cubic-Splines-for-Trajectory-Planning" -> "ubi-agni/STP"
"kosmastsk/thesis" -> "RJJxp/CoveragePlanning"
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" -> "HKUST-Aerial-Robotics/eudm_planner"
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" -> "HKUST-Aerial-Robotics/EPSILON"
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" -> "KumarRobotics/conformal_lattice_planner"
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" -> "libai1943/CartesianPlanner"
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" -> "pparmesh/Constrained_ILQR"
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" -> "jchengai/gpir"
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" -> "LiJiangnanBit/path_optimizer_ilqr"
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" -> "ZJU-FAST-Lab/Dftpav"
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" -> "KhMustafa/Risk-aware-contingency-planning-with-multi-modal-predictions" ["e"=1]
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" -> "SS47816/fiss_planner"
"pbsinclair42/MCTS" -> "haroldsultan/MCTS"
"pbsinclair42/MCTS" -> "hildensia/mcts"
"pbsinclair42/MCTS" -> "brilee/python_uct"
"pbsinclair42/MCTS" -> "jbradberry/mcts"
"lmb-freiburg/rgbd-pose3d" -> "marketto89/open_ptrack" ["e"=1]
"Omegastick/pytorch-cpp-rl" -> "Svalorzen/AI-Toolbox" ["e"=1]
"locusrobotics/robot_navigation" -> "ros-planning/navigation_experimental"
"locusrobotics/robot_navigation" -> "naturerobots/move_base_flex" ["e"=1]
"locusrobotics/robot_navigation" -> "rst-tu-dortmund/mpc_local_planner"
"locusrobotics/robot_navigation" -> "nobleo/full_coverage_path_planner"
"locusrobotics/robot_navigation" -> "gkouros/rsband_local_planner"
"locusrobotics/robot_navigation" -> "locusrobotics/fuse" ["e"=1]
"locusrobotics/robot_navigation" -> "naturerobots/mesh_navigation" ["e"=1]
"locusrobotics/robot_navigation" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"locusrobotics/robot_navigation" -> "yujinrobot/yujin_ocs"
"locusrobotics/robot_navigation" -> "iris-ua/iris_lama_ros" ["e"=1]
"locusrobotics/robot_navigation" -> "at-wat/neonavigation"
"locusrobotics/robot_navigation" -> "hrnr/m-explore" ["e"=1]
"locusrobotics/robot_navigation" -> "SteveMacenski/spatio_temporal_voxel_layer" ["e"=1]
"locusrobotics/robot_navigation" -> "ros-controls/ros_controllers" ["e"=1]
"locusrobotics/robot_navigation" -> "cogsys-tuebingen/gerona"
"Botao-Hu/Dstar-lite-on-ROS-Turtlebot" -> "palmieri/srl_dstar_lite"
"Botao-Hu/Dstar-lite-on-ROS-Turtlebot" -> "hassanmehmud/ROS-Turtlebot3"
"namoshizun/PyPOMDP" -> "pemami4911/POMDPy"
"namoshizun/PyPOMDP" -> "h2r/pomdp-py"
"namoshizun/PyPOMDP" -> "GeorgePik/POMCP"
"namoshizun/PyPOMDP" -> "AdaCompNUS/hyp-despot"
"namoshizun/PyPOMDP" -> "AdaCompNUS/despot"
"namoshizun/PyPOMDP" -> "yangyou95/POMDP_PBVI_solver"
"namoshizun/PyPOMDP" -> "rmoehn/piglet_pbvi"
"MegviiRobot/CamOdomCalibraTool" -> "MegviiRobot/OdomLaserCalibraTool" ["e"=1]
"qwerty35/swarm_simulator" -> "carlosluis/multiagent_planning"
"qwerty35/swarm_simulator" -> "qwerty35/lsc_dr_planner"
"qwerty35/swarm_simulator" -> "qwerty35/lsc_planner"
"qwerty35/swarm_simulator" -> "LIJUNCHENG001/multi_robot_traj_planner"
"qwerty35/swarm_simulator" -> "mit-acl/minvo" ["e"=1]
"qwerty35/swarm_simulator" -> "whoenig/multi-robot-trajectory-planning"
"qwerty35/swarm_simulator" -> "carlosluis/online_dmpc"
"qwerty35/swarm_simulator" -> "mit-acl/mader" ["e"=1]
"NKU-MobFly-Robotics/laser_scan_matcher" -> "AndreaCensi/csm"
"NKU-MobFly-Robotics/laser_scan_matcher" -> "CCNYRoboticsLab/scan_tools"
"NKU-MobFly-Robotics/laser_scan_matcher" -> "NKU-MobFly-Robotics/laser-line-segment"
"NKU-MobFly-Robotics/laser_scan_matcher" -> "dejanpan/snap_map_icp"
"zjw11525/MyRobot" -> "OwenLee666/7DoF_robot"
"zjw11525/MyRobot" -> "xuuyann/RobotLearningCode"
"varyshare/easy_slam_tutorial" -> "xiangli0608/Creating-2D-laser-slam-from-scratch" ["e"=1]
"hayoung-kim/udacity-path-planning" -> "jeremy-shannon/CarND-Path-Planning-Project"
"hayoung-kim/udacity-path-planning" -> "kirilcvetkov92/Path-planning"
"hayoung-kim/udacity-path-planning" -> "tommy1900/Path-Planning-Frenet-Frame-Optimal-Trajectory-Generation-JMT"
"athakapo/DARP" -> "alice-st/DARP"
"athakapo/DARP" -> "18alantom/CoveragePathPlanning"
"athakapo/DARP" -> "savvas-ap/mCPP-optimized-DARP"
"athakapo/DARP" -> "CourierLo/TMSTC-Star"
"athakapo/DARP" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"athakapo/DARP" -> "WJTung/GA-TSPCPP"
"athakapo/DARP" -> "ethz-asl/polygon_coverage_planning"
"athakapo/DARP" -> "RJJxp/CoveragePlanning"
"athakapo/DARP" -> "RicheyHuang/CoveragePlanner"
"athakapo/DARP" -> "reso1/MSTC_Star"
"athakapo/DARP" -> "Greenzie/boustrophedon_planner"
"athakapo/DARP" -> "Ipiano/coverage-planning"
"athakapo/DARP" -> "savvas-ap/cpp-simulated-evaluations"
"athakapo/DARP" -> "nobleo/full_coverage_path_planner"
"athakapo/DARP" -> "jazzalin/area-coverage-nav"
"aurone/smpl" -> "shohinm/parallel_search"
"RoboticExplorationLab/TrajectoryOptimization.jl" -> "RoboticExplorationLab/Algames.jl" ["e"=1]
"RoboticExplorationLab/TrajectoryOptimization.jl" -> "anassinator/ilqr" ["e"=1]
"HJReachability/ilqgames" -> "RoboticExplorationLab/Algames.jl"
"HJReachability/ilqgames" -> "chenyx09/belief-planning" ["e"=1]
"HJReachability/ilqgames" -> "pparmesh/Constrained_ILQR"
"HJReachability/ilqgames" -> "HKUST-Aerial-Robotics/eudm_planner"
"HJReachability/ilqgames" -> "JuliaGameTheoreticPlanning/iLQGames.jl"
"HJReachability/ilqgames" -> "ControlTrees/icra2021" ["e"=1]
"HJReachability/ilqgames" -> "labicon/dp-ilqr"
"HJReachability/ilqgames" -> "ZhaiMen-Hub/DecisionPlanning" ["e"=1]
"HJReachability/ilqgames" -> "YukunXia/Carla_iLQR_MPC"
"HJReachability/ilqgames" -> "HKUST-Aerial-Robotics/MIND" ["e"=1]
"HJReachability/ilqgames" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"HJReachability/ilqgames" -> "simon-lc/AlgamesDriving.jl"
"HJReachability/ilqgames" -> "Bharath2/iLQR"
"HJReachability/ilqgames" -> "HKUST-Aerial-Robotics/EPSILON"
"HJReachability/ilqgames" -> "KhMustafa/Risk-aware-contingency-planning-with-multi-modal-predictions" ["e"=1]
"AndrewWalker/pydubins" -> "FelicienC/RRT-Dubins"
"Yaaximus/artificial-potential-field" -> "Yaaximus/robotics-python"
"Yaaximus/artificial-potential-field" -> "nccvector/aritificial-potential-field"
"mattbradley/dash" -> "KumarRobotics/conformal_lattice_planner" ["e"=1]
"autonomousdrivingkr/Awesome-Autonomous-Driving" -> "DeepTecher/awesome-autonomous-vehicle" ["e"=1]
"autonomousdrivingkr/Awesome-Autonomous-Driving" -> "DeepTecher/AutonomousVehiclePaper" ["e"=1]
"autonomousdrivingkr/Awesome-Autonomous-Driving" -> "emmjaykay/stanford_self_driving_car_code" ["e"=1]
"autonomousdrivingkr/Awesome-Autonomous-Driving" -> "chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" ["e"=1]
"rgbdemo/rgbdemo" -> "rgbdemo/nestk"
"rgbdemo/rgbdemo" -> "abryden/PCL_Kinect2Kinfu_LargeScale"
"sanchithaseshadri/PathPlanningAstar" -> "hg522/PathPlanning-AStar-ROS"
"sanchithaseshadri/PathPlanningAstar" -> "hassanmehmud/ROS-Turtlebot3"
"sanchithaseshadri/PathPlanningAstar" -> "anindex/PathPlanning-ROS-Rviz"
"uenota/cpp_uav" -> "sbochkar/coverage_path_planning"
"uenota/cpp_uav" -> "chethanr98/CPP_UAV"
"uenota/cpp_uav" -> "RJJxp/CoveragePlanning"
"uenota/cpp_uav" -> "cvar-upm/multi_uav_test_area_coverage"
"irvingvasquez/ocpp" -> "wangweike123/Full-coverage-path-planning-based-on-spanningtree-and-A-star"
"irvingvasquez/ocpp" -> "JonasVervloet/RL-Coverage-Planner"
"irvingvasquez/ocpp" -> "Ankitvm/Coverage_Path_Planning-"
"AndrewWalker/Dubins-Curves" -> "ghliu/pyReedsShepp"
"AndrewWalker/Dubins-Curves" -> "karlkurzer/path_planner"
"AndrewWalker/Dubins-Curves" -> "AndrewWalker/pydubins"
"AndrewWalker/Dubins-Curves" -> "tanujthakkar/Voronoi-Based-Hybrid-Astar"
"AndrewWalker/Dubins-Curves" -> "gieseanw/Dubins"
"AndrewWalker/Dubins-Curves" -> "tejus-gupta/hybrid-astar-planner"
"AndrewWalker/Dubins-Curves" -> "hbanzhaf/steering_functions"
"AndrewWalker/Dubins-Curves" -> "EwingKang/Dubins-Curve-For-MATLAB"
"AndrewWalker/Dubins-Curves" -> "zwkcoding/car_geometric_planner"
"AndrewWalker/Dubins-Curves" -> "nathanlct/reeds-shepp-curves"
"AndrewWalker/Dubins-Curves" -> "XiaojingGeorgeZhang/OBCA"
"AndrewWalker/Dubins-Curves" -> "FelicienC/RRT-Dubins"
"AndrewWalker/Dubins-Curves" -> "dagoodma/dppl_code"
"AndrewWalker/Dubins-Curves" -> "teddyluo/hybrid-a-star-annotation"
"AndrewWalker/Dubins-Curves" -> "XiaojingGeorgeZhang/H-OBCA"
"OpenSLAM-org/openslam_gmapping" -> "MegviiRobot/OdomLaserCalibraTool" ["e"=1]
"iralabdisco/ira_laser_tools" -> "CCNYRoboticsLab/scan_tools"
"iralabdisco/ira_laser_tools" -> "ros-perception/laser_filters"
"iralabdisco/ira_laser_tools" -> "GMahmoud/virtual_costmap_layer"
"iralabdisco/ira_laser_tools" -> "ros-perception/depthimage_to_laserscan"
"iralabdisco/ira_laser_tools" -> "naturerobots/move_base_flex" ["e"=1]
"iralabdisco/ira_laser_tools" -> "ros-planning/3d_navigation"
"iralabdisco/ira_laser_tools" -> "rst-tu-dortmund/teb_local_planner_tutorials"
"larics/lattice_navigation_demos" -> "larics/pure_pursuit"
"larics/lattice_navigation_demos" -> "larics/lattice_planner"
"balcilar/RobotPathPlanning" -> "ShivamChourey/MDP_Path_Planning"
"rahul-sb/RRTx" -> "chahatdeep/rrt_dynamic"
"koide3/hdl_people_tracking" -> "wg-perception/people" ["e"=1]
"koide3/hdl_people_tracking" -> "koide3/monocular_person_following" ["e"=1]
"HaoQChen/map_server" -> "shamengjun/scan_map_icp"
"kirilcvetkov92/Path-planning" -> "MajidMoghadam2006/frenet-trajectory-planning-framework"
"rafaelbarretorb/rrt_star_global_planner" -> "mech0ctopus/rrt-global-planner"
"rafaelbarretorb/rrt_star_global_planner" -> "wrld/ROS_RRT"
"rafaelbarretorb/rrt_star_global_planner" -> "Zhi29/RRTstar-planner-for-ROS-navigation"
"rafaelbarretorb/rrt_star_global_planner" -> "jrabel/rrt_planner"
"rafaelbarretorb/rrt_star_global_planner" -> "KavitShah1998/Autonomous_Mobile_Robot_Navigation_In_ROS"
"rafaelbarretorb/rrt_star_global_planner" -> "srl-freiburg/srl_global_planner"
"rafaelbarretorb/rrt_star_global_planner" -> "hubery05/rrt_star_global_planner"
"robinvista/Mathematica" -> "wanghuohuo0716/hybrid_A_star"
"robinvista/Mathematica" -> "yangmingustb/Local-Planner"
"DFKI-NI/mir_robot" -> "ros-planning/navigation_experimental"
"DFKI-NI/mir_robot" -> "locusrobotics/robot_navigation"
"PathPlanning/ORCA-algorithm" -> "PathPlanning/ORCAStarROS"
"PathPlanning/ORCA-algorithm" -> "harish1696/d-orca" ["e"=1]
"PathPlanning/ORCA-algorithm" -> "omron-sinicx/ctrm"
"PathPlanning/ORCA-algorithm" -> "APRIL-ZJU/CL-CBS"
"PathPlanning/ORCA-algorithm" -> "Kei18/mapf-IR"
"strands-project/strands_perception_people" -> "VisualComputingInstitute/DROW"
"strands-project/strands_perception_people" -> "wg-perception/people"
"strands-project/strands_perception_people" -> "spencer-project/spencer_people_tracking"
"strands-project/strands_perception_people" -> "marcobecerrap/edge_leg_detector"
"strands-project/strands_perception_people" -> "VisualComputingInstitute/DR-SPAAM-Detector"
"strands-project/strands_perception_people" -> "apennisi/rgbd_person_tracking"
"twxjyg/Hybrid-A-Star-U-Turn-Solution" -> "ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning"
"twxjyg/Hybrid-A-Star-U-Turn-Solution" -> "YikangZhang1641/HybridAStarSearch"
"koide3/monocular_people_tracking" -> "koide3/ccf_person_identification"
"AlanShaw-GitHub/ROS-Navigation-GlobalPlanner" -> "Zhi29/RRTstar-planner-for-ROS-navigation"
"RoboJackets/rrt" -> "sourishg/rrt-simulator"
"RoboJackets/rrt" -> "nalin1096/path_planning"
"RoboJackets/rrt" -> "motion-planning/rrt-algorithms"
"RoboJackets/rrt" -> "mpdmanash/rrt-star-dubins-sim"
"RoboJackets/rrt" -> "ayushgaud/path_planning" ["e"=1]
"RoboJackets/rrt" -> "rishabh1b/RealTimePathPlanning"
"RoboJackets/rrt" -> "olzhas/rrt_toolbox"
"RoboJackets/rrt" -> "sbpl/sbpl"
"RoboJackets/rrt" -> "srl-freiburg/srl_global_planner"
"carlosluis/online_dmpc" -> "carlosluis/multiagent_planning"
"carlosluis/online_dmpc" -> "qwerty35/lsc_planner"
"carlosluis/online_dmpc" -> "HAOLI-TUKL/Multi_Robots_DMPC"
"carlosluis/online_dmpc" -> "chengji253/DMPC-for-multi-agent" ["e"=1]
"carlosluis/online_dmpc" -> "qwerty35/swarm_simulator"
"PathPlanning/Continuous-CBS" -> "APRIL-ZJU/CL-CBS"
"PathPlanning/Continuous-CBS" -> "Jiaoyang-Li/EECBS"
"PathPlanning/Continuous-CBS" -> "Jiaoyang-Li/CBSH2-RTC"
"PathPlanning/Continuous-CBS" -> "Kei18/mapf-IR"
"PathPlanning/Continuous-CBS" -> "Jiaoyang-Li/RHCR"
"PathPlanning/Continuous-CBS" -> "PathPlanning/AA-SIPP-m"
"PathPlanning/Continuous-CBS" -> "GavinPHR/Multi-Agent-Path-Finding"
"PathPlanning/Continuous-CBS" -> "enginbaglayici/ConflictBasedSearch"
"PathPlanning/Continuous-CBS" -> "whoenig/libMultiRobotPlanning"
"PathPlanning/Continuous-CBS" -> "speedzjy/mapf_ros"
"PathPlanning/Continuous-CBS" -> "Jiaoyang-Li/CBSH2"
"PathPlanning/Continuous-CBS" -> "LIJUNCHENG001/multi_robot_traj_planner"
"PathPlanning/Continuous-CBS" -> "gloriyo/MAPF-ICBS"
"PathPlanning/Continuous-CBS" -> "Jiaoyang-Li/MAPF-LNS"
"PathPlanning/Continuous-CBS" -> "GavinPHR/Space-Time-AStar"
"fgenesis/tinypile" -> "Eurecat/astar-gridmap-2d"
"hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS" -> "peterWon/CleaningRobot"
"hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS" -> "RJJxp/CoveragePlanning"
"hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS" -> "li-haojia/Clean-robot-turtlebot3"
"hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS" -> "ipa320/ipa_coverage_planning"
"hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS" -> "RicheyHuang/CoverageActiveSLAM"
"alelab-upenn/graph-neural-networks" -> "proroklab/magat_pathplanning"
"alelab-upenn/graph-neural-networks" -> "proroklab/gnn_pathplanning"
"HanwenCao/Frontier_Exploration" -> "HAOLI-TUKL/autonomous_exploration"
"Yaaximus/artificial-potential-field-matlab" -> "Yaaximus/artificial-potential-field"
"Yaaximus/artificial-potential-field-matlab" -> "Yaaximus/genetic-algorithm-path-planning"
"Yaaximus/artificial-potential-field-matlab" -> "Yaaximus/robotics-python"
"Yaaximus/artificial-potential-field-matlab" -> "zzuwz/Artificial-Potential-Field"
"Yaaximus/artificial-potential-field-matlab" -> "Meshaal-Mouawad/Improvement-Potential-Field-Algorithm"
"Yaaximus/artificial-potential-field-matlab" -> "JianmingTONG/Artificial_Potential_Field_MultiTarget"
"yangmingustb/Local-Planner" -> "yangmingustb/Papers"
"carlosluis/multiagent_planning" -> "qwerty35/swarm_simulator"
"carlosluis/multiagent_planning" -> "carlosluis/online_dmpc"
"carlosluis/multiagent_planning" -> "tud-amr/mrca-mav"
"tu-darmstadt-ros-pkg/hector_navigation" -> "RobustFieldAutonomyLab/turtlebot_exploration_3d"
"tu-darmstadt-ros-pkg/hector_navigation" -> "paulbovbel/frontier_exploration"
"tu-darmstadt-ros-pkg/hector_navigation" -> "ros-planning/navigation_experimental"
"tu-darmstadt-ros-pkg/hector_navigation" -> "frontw/voronoi_planner"
"JuliaPOMDP/DeepQLearning.jl" -> "JuliaPOMDP/RLInterface.jl"
"JuliaPOMDP/DeepQLearning.jl" -> "JuliaPOMDP/DiscreteValueIteration.jl"
"huangxianqun/multi_robot_path_planning" -> "anushrii/Multi-Robot-Path-Planning"
"sigmaai/self-driving-golf-cart" -> "ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" ["e"=1]
"daniel-s-ingram/ai_for_robotics" -> "amirhakimnejad/Histogram-filter-for-robot-localization"
"rmoehn/piglet_pbvi" -> "malayandi/Tiger-Problem-POMDP"
"neka-nat/ddp-gym" -> "navigator8972/pylqr"
"SimoneTinella/Path-Planning-Robot-over-Voronoi-Diagram" -> "Merkaster/Dynamic-Voronoi-Path-Planning"
"arrtvv852/ML-for-AGV-dispatching-module" -> "wusean1997/HRL_AGV_Navigation_MTON"
"arrtvv852/ML-for-AGV-dispatching-module" -> "arrtvv852/Qlearning_AGVpath"
"arrtvv852/ML-for-AGV-dispatching-module" -> "MichielDD/Free-motion-planning-of-multiple-AGVs"
"RDLLab/oppt" -> "rdl-algorithm/tapir"
"RDLLab/oppt" -> "AdaCompNUS/sarsop"
"RDLLab/oppt" -> "AdaCompNUS/despot"
"RDLLab/oppt" -> "trey0/zmdp"
"RDLLab/oppt" -> "RDLLab/tapir"
"larics/cartographer_frontier_detection" -> "SunZezhou/Active-SLAM-with-Cartographer"
"BijoSebastian/Kinodynamic-RRT-STAR" -> "AngeloEspinoza/kinodynamic-rrt-car-like-robot"
"larics/lattice_planner" -> "larics/lattice_navigation_demos"
"larics/lattice_planner" -> "marinaKollmitz/lattice_planner"
"utexas-bwi/eband_local_planner" -> "asr-ros/asr_ftc_local_planner"
"utexas-bwi/eband_local_planner" -> "gkouros/rsband_local_planner"
"azampagl/robotics-d-star-lite" -> "ArekSredzki/dstar-lite"
"kazuotani14/iLQR" -> "pparmesh/Constrained_ILQR"
"kazuotani14/iLQR" -> "navigator8972/pylqr"
"kazuotani14/iLQR" -> "anassinator/ilqr"
"kazuotani14/iLQR" -> "Bharath2/iLQR"
"kazuotani14/iLQR" -> "LiJiangnanBit/path_optimizer_ilqr"
"kazuotani14/iLQR" -> "RoboticExplorationLab/Altro.jl" ["e"=1]
"kazuotani14/iLQR" -> "YukunXia/Carla_iLQR_MPC"
"kazuotani14/iLQR" -> "optimusride/altro-cpp" ["e"=1]
"kazuotani14/iLQR" -> "TGlad/ILQR"
"kazuotani14/iLQR" -> "HJReachability/ilqgames"
"longjianquan/add--planner" -> "longjianquan/path-planning"
"GMahmoud/virtual_costmap_layer" -> "rst-tu-dortmund/costmap_prohibition_layer"
"Kei18/pibt" -> "Jiaoyang-Li/MAPF-LNS"
"Eurecat/astar-gridmap-2d" -> "fgenesis/tinypile"
"laurimi/npgi" -> "laurimi/multiagent-prediction-reward"
"JuliaPOMDP/QuickPOMDPs.jl" -> "JuliaPOMDP/RLInterface.jl"
"nccvector/raytracer-opengl" -> "nccvector/raytracer-python"
"nccvector/raytracer-opengl" -> "nccvector/Genetic-Algorithm-For-Feature-Reduction"
"GeorgePik/POMCP" -> "namoshizun/PyPOMDP"
"GeorgePik/POMCP" -> "JuliaPOMDP/POMCPOW.jl"
"shamengjun/scan_map_icp" -> "dejanpan/snap_map_icp"
"AdaCompNUS/hyp-despot" -> "AdaCompNUS/despot"
"AdaCompNUS/hyp-despot" -> "AdaCompNUS/context-pomdp"
"AdaCompNUS/hyp-despot" -> "FlorianPusse/OpenDS-CTS"
"eli-b/idcbs" -> "PathPlanning/CBS-SIPP"
"longjianquan/path-planning" -> "longjianquan/add--planner"
"nccvector/Electro-Myography-EMG-Dataset" -> "nccvector/Genetic-Algorithm-For-Feature-Reduction"
"nccvector/Electro-Myography-EMG-Dataset" -> "nccvector/raytracer-python"
"nccvector/Electro-Myography-EMG-Dataset" -> "nccvector/raytracer-opengl"
"nccvector/Genetic-Algorithm-For-Feature-Reduction" -> "nccvector/raytracer-python"
"nccvector/Genetic-Algorithm-For-Feature-Reduction" -> "nccvector/raytracer-opengl"
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "Boyang--Li/Motion-Planning-Course"
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "teddyluo/hybrid-a-star-annotation"
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "zm0612/Minimum-Snap" ["e"=1]
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "ZJU-FAST-Lab/sampling-based-path-finding" ["e"=1]
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "HKUST-Aerial-Robotics/Btraj" ["e"=1]
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "ZJU-FAST-Lab/GCOPTER" ["e"=1]
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "MichaelFYang/far_planner" ["e"=1]
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "ZJU-FAST-Lab/Dftpav"
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "teamo1996/Motion-plan"
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "sikang/DecompROS" ["e"=1]
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "HKUST-Aerial-Robotics/Teach-Repeat-Replan" ["e"=1]
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "zm0612/Hybrid_A_Star"
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "LIJUNCHENG001/multi_robot_traj_planner"
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "Mesywang/Motion-Planning-Algorithms"
"KailinTong/Motion-Planning-for-Mobile-Robots" -> "HKUST-Aerial-Robotics/FIESTA" ["e"=1]
"ANYbotics/grid_map" -> "karlkurzer/path_planner" ["e"=1]
"chengyangkj/Ros_Qt5_Gui_App" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"chengyangkj/Ros_Qt5_Gui_App" -> "xiangli0608/Creating-2D-laser-slam-from-scratch" ["e"=1]
"chengyangkj/Ros_Qt5_Gui_App" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"6-robot/wpr_simulation" -> "CHH3213/chhRobotics_CPP" ["e"=1]
"Ly0n/awesome-robotic-tooling" -> "onlytailei/CppRobotics" ["e"=1]
"zhm-real/PathPlanning" -> "zhm-real/MotionPlanning" ["e"=1]
"zhm-real/PathPlanning" -> "karlkurzer/path_planner" ["e"=1]
"zhm-real/PathPlanning" -> "atb033/multi_agent_path_planning" ["e"=1]
"zhm-real/PathPlanning" -> "onlytailei/CppRobotics" ["e"=1]
"zhm-real/PathPlanning" -> "teddyluo/hybrid-a-star-annotation" ["e"=1]
"chendiqian/Bachelor_Thesis" -> "yusuf1478/multi_robot_path_planning_isca"
"teddyluo/hybrid-a-star-annotation" -> "karlkurzer/path_planner"
"teddyluo/hybrid-a-star-annotation" -> "zm0612/Hybrid_A_Star"
"teddyluo/hybrid-a-star-annotation" -> "wanghuohuo0716/hybrid_A_star"
"teddyluo/hybrid-a-star-annotation" -> "tejus-gupta/hybrid-astar-planner"
"teddyluo/hybrid-a-star-annotation" -> "LiJiangnanBit/path_optimizer"
"teddyluo/hybrid-a-star-annotation" -> "zhm-real/MotionPlanning"
"teddyluo/hybrid-a-star-annotation" -> "HKUST-Aerial-Robotics/EPSILON"
"teddyluo/hybrid-a-star-annotation" -> "Geonhee-LEE/mpc_ros"
"teddyluo/hybrid-a-star-annotation" -> "ZJU-FAST-Lab/Dftpav"
"teddyluo/hybrid-a-star-annotation" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"teddyluo/hybrid-a-star-annotation" -> "KailinTong/Motion-Planning-for-Mobile-Robots"
"teddyluo/hybrid-a-star-annotation" -> "rst-tu-dortmund/mpc_local_planner"
"teddyluo/hybrid-a-star-annotation" -> "CHH3213/chhRobotics_CPP"
"teddyluo/hybrid-a-star-annotation" -> "libai1943/CartesianPlanner"
"teddyluo/hybrid-a-star-annotation" -> "XiaojingGeorgeZhang/OBCA"
"zhm-real/MotionPlanning" -> "zhm-real/PathPlanning" ["e"=1]
"zhm-real/MotionPlanning" -> "karlkurzer/path_planner"
"zhm-real/MotionPlanning" -> "ai-winter/ros_motion_planning" ["e"=1]
"zhm-real/MotionPlanning" -> "onlytailei/CppRobotics"
"zhm-real/MotionPlanning" -> "teddyluo/hybrid-a-star-annotation"
"zhm-real/MotionPlanning" -> "alexliniger/MPCC" ["e"=1]
"zhm-real/MotionPlanning" -> "atb033/multi_agent_path_planning"
"zhm-real/MotionPlanning" -> "Geonhee-LEE/mpc_ros"
"zhm-real/MotionPlanning" -> "LiJiangnanBit/path_optimizer"
"zhm-real/MotionPlanning" -> "ANYbotics/grid_map" ["e"=1]
"zhm-real/MotionPlanning" -> "zm0612/Hybrid_A_Star"
"zhm-real/MotionPlanning" -> "HKUST-Aerial-Robotics/Fast-Planner" ["e"=1]
"zhm-real/MotionPlanning" -> "CHH3213/chhRobotics_CPP"
"zhm-real/MotionPlanning" -> "rst-tu-dortmund/mpc_local_planner"
"zhm-real/MotionPlanning" -> "ai-winter/python_motion_planning"
"A-make/awesome-control-theory" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"benedekrozemberczki/awesome-monte-carlo-tree-search-papers" -> "int8/monte-carlo-tree-search" ["e"=1]
"Gongyihang/Motion-Planning" -> "yangmingustb/Papers"
"18alantom/CoveragePathPlanning" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"18alantom/CoveragePathPlanning" -> "RicheyHuang/CoveragePlanner"
"18alantom/CoveragePathPlanning" -> "JonasVervloet/RL-Coverage-Planner"
"18alantom/CoveragePathPlanning" -> "KunHanKH/Comple-Coverage-Path-PLanning-Based-on-Cell-Desomposition"
"18alantom/CoveragePathPlanning" -> "savvas-ap/mCPP-optimized-DARP"
"18alantom/CoveragePathPlanning" -> "rodriguesrenato/coverage-path-planning"
"18alantom/CoveragePathPlanning" -> "alice-st/DARP"
"18alantom/CoveragePathPlanning" -> "jazzalin/area-coverage-nav"
"18alantom/CoveragePathPlanning" -> "wangweike123/Full-coverage-path-planning-based-on-spanningtree-and-A-star"
"18alantom/CoveragePathPlanning" -> "athakapo/DARP"
"18alantom/CoveragePathPlanning" -> "reso1/MSTC_Star"
"18alantom/CoveragePathPlanning" -> "ethz-asl/polygon_coverage_planning"
"18alantom/CoveragePathPlanning" -> "irvingvasquez/ocpp"
"18alantom/CoveragePathPlanning" -> "jhlenes/complete_coverage" ["e"=1]
"Kei18/mapf-IR" -> "PathPlanning/Continuous-CBS"
"Kei18/mapf-IR" -> "Jiaoyang-Li/RHCR"
"Kei18/mapf-IR" -> "Jiaoyang-Li/EECBS"
"Kei18/mapf-IR" -> "Kei18/mapf-visualizer"
"Kei18/mapf-IR" -> "Kei18/pibt2"
"Kei18/mapf-IR" -> "Jiaoyang-Li/CBSH2"
"Kei18/mapf-IR" -> "Jiaoyang-Li/CBSH2-RTC"
"Kei18/mapf-IR" -> "APRIL-ZJU/CL-CBS"
"Kei18/mapf-IR" -> "Kei18/pibt"
"Kei18/mapf-IR" -> "Jiaoyang-Li/MAPF-LNS"
"Kei18/mapf-IR" -> "Jiaoyang-Li/MAPF-LNS2"
"Kei18/mapf-IR" -> "PathPlanning/Push-and-Rotate--CBS--PrioritizedPlanning"
"Kei18/mapf-IR" -> "GavinPHR/Multi-Agent-Path-Finding"
"Kei18/mapf-IR" -> "Kei18/pypibt"
"Kei18/mapf-IR" -> "enginbaglayici/ConflictBasedSearch"
"semitable/robotic-warehouse" -> "Jiaoyang-Li/RHCR" ["e"=1]
"semitable/robotic-warehouse" -> "LyapunovJingci/Warehouse_Robot_Path_Planning" ["e"=1]
"semitable/robotic-warehouse" -> "marmotlab/PRIMAL2" ["e"=1]
"semitable/robotic-warehouse" -> "gsartoretti/PRIMAL" ["e"=1]
"semitable/robotic-warehouse" -> "atb033/multi_agent_path_planning" ["e"=1]
"mathworks-robotics/trajectory-planning-robot-manipulators" -> "GasserElAzab/6-DOF-DLR-robot-simulation-in-Matlab-Simulink"
"mathworks-robotics/trajectory-planning-robot-manipulators" -> "mathworks-robotics/designing-robot-manipulator-algorithms"
"mathworks-robotics/trajectory-planning-robot-manipulators" -> "yzhao334/Efficient-Trajectory-Optimization-for-Robot-Motion-Planning--Examples"
"mathworks-robotics/trajectory-planning-robot-manipulators" -> "saifullah3396/Constrained-Minimum-Time-Cubic-Splines-for-Trajectory-Planning"
"mathworks-robotics/trajectory-planning-robot-manipulators" -> "YashBansod/Robotics-Planning-Dynamics-and-Control"
"amslabtech/dwa_planner" -> "rst-tu-dortmund/mpc_local_planner"
"amslabtech/dwa_planner" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"amslabtech/dwa_planner" -> "Geonhee-LEE/mpc_ros"
"amslabtech/dwa_planner" -> "teddyluo/hybrid-a-star-annotation"
"amslabtech/dwa_planner" -> "goktug97/DynamicWindowApproach"
"amslabtech/dwa_planner" -> "karlkurzer/path_planner"
"amslabtech/dwa_planner" -> "leggedrobotics/se2_navigation" ["e"=1]
"amslabtech/dwa_planner" -> "ai-winter/ros_motion_planning" ["e"=1]
"amslabtech/dwa_planner" -> "MichaelFYang/far_planner" ["e"=1]
"amslabtech/dwa_planner" -> "amslabtech/state_lattice_planner"
"amslabtech/dwa_planner" -> "gkouros/rsband_local_planner"
"amslabtech/dwa_planner" -> "alirezaahmadi/AgriBot-Local-Planner"
"amslabtech/dwa_planner" -> "linyicheng1/teb_local_planner"
"amslabtech/dwa_planner" -> "zm0612/Hybrid_A_Star"
"amslabtech/dwa_planner" -> "nobleo/full_coverage_path_planner"
"VD2410/Multi-Agent-Path-Finding" -> "mchtalkn/MAPF_CBS"
"RobotnikAutomation/agvs" -> "RobotnikAutomation/agvs_sim"
"RobotnikAutomation/agvs" -> "larics/pure_pursuit"
"RobotnikAutomation/agvs" -> "ros-planning/navigation_experimental"
"RobotnikAutomation/agvs" -> "robotics-upo/upo_robot_navigation"
"RiteshKH/Ant_Colony_Optimizer_move_base_planner" -> "Nipunnyka/GlobalPathPlannerPlugin"
"danielesartori/3D-grid-path-planning" -> "jotredi/3D_Motion_Planning"
"danielesartori/3D-grid-path-planning" -> "ybmasmiling/Astar_3D"
"danielesartori/3D-grid-path-planning" -> "DavidLining/3D_PathPlanner"
"woven-planet/l5kit" -> "HKUST-Aerial-Robotics/EPSILON" ["e"=1]
"KCL-Planning/ROSPlan" -> "locusrobotics/robot_navigation" ["e"=1]
"KCL-Planning/ROSPlan" -> "ros-planning/navigation_experimental" ["e"=1]
"czhherry/self-driving-vehicle-101" -> "NeXTzhao/planning"
"czhherry/self-driving-vehicle-101" -> "chanchanchan97/ROS"
"GavinPHR/Multi-Agent-Path-Finding" -> "GavinPHR/Space-Time-AStar"
"GavinPHR/Multi-Agent-Path-Finding" -> "APRIL-ZJU/CL-CBS"
"GavinPHR/Multi-Agent-Path-Finding" -> "atb033/multi_agent_path_planning"
"GavinPHR/Multi-Agent-Path-Finding" -> "PathPlanning/Continuous-CBS"
"GavinPHR/Multi-Agent-Path-Finding" -> "gsartoretti/PRIMAL"
"GavinPHR/Multi-Agent-Path-Finding" -> "gavincangan/multiagent-pathfinding"
"GavinPHR/Multi-Agent-Path-Finding" -> "whoenig/libMultiRobotPlanning"
"GavinPHR/Multi-Agent-Path-Finding" -> "Jiaoyang-Li/CBSH2-RTC"
"GavinPHR/Multi-Agent-Path-Finding" -> "Jiaoyang-Li/RHCR"
"GavinPHR/Multi-Agent-Path-Finding" -> "nicofretti/MAPF"
"GavinPHR/Multi-Agent-Path-Finding" -> "enginbaglayici/ConflictBasedSearch"
"GavinPHR/Multi-Agent-Path-Finding" -> "gloriyo/MAPF-ICBS"
"GavinPHR/Multi-Agent-Path-Finding" -> "speedzjy/mapf_ros"
"GavinPHR/Multi-Agent-Path-Finding" -> "chenzhike110/MAPF-solver"
"GavinPHR/Multi-Agent-Path-Finding" -> "Jiaoyang-Li/EECBS"
"linxigjs/path_smoother" -> "eric-heiden/grips"
"linxigjs/path_smoother" -> "linxigjs/dynamicvoronoi"
"linxigjs/path_smoother" -> "gkouros/path-smoothing-ros"
"linxigjs/path_smoother" -> "amslabtech/state_lattice_planner"
"marcobecerrap/edge_leg_detector" -> "srl-freiburg/srl_rhcf_planner"
"roboticslibrary/rl" -> "onlytailei/CppRobotics" ["e"=1]
"jrialland/python-astar" -> "LogicJake/A-star-search"
"jrialland/python-astar" -> "richardos/occupancy-grid-a-star"
"jrialland/python-astar" -> "pablogsal/a_star_algorithm"
"jrialland/python-astar" -> "elemel/python-astar"
"jrialland/python-astar" -> "hjweide/pyastar2d"
"jrialland/python-astar" -> "sanchithaseshadri/PathPlanningAstar"
"mjyc/awesome-robotics-projects" -> "onlytailei/CppRobotics" ["e"=1]
"nobleo/tracking_pid" -> "nobleo/path_tracking_pid"
"nobleo/tracking_pid" -> "nobleo/full_coverage_path_planner"
"nobleo/tracking_pid" -> "gkouros/waypoint-global-planner"
"nobleo/tracking_pid" -> "mrath/mobile_robot_simulator"
"nobleo/tracking_pid" -> "naturerobots/move_base_flex" ["e"=1]
"nobleo/tracking_pid" -> "at-wat/neonavigation"
"nobleo/tracking_pid" -> "ros-planning/navigation_experimental"
"nobleo/tracking_pid" -> "ros-perception/laser_filters"
"nobleo/tracking_pid" -> "leggedrobotics/se2_navigation" ["e"=1]
"simondlevy/BreezySLAM" -> "xiaofeng419/SLAM-2D-LIDAR-SCAN" ["e"=1]
"Mesywang/Motion-Planning-Algorithms" -> "olzhas/rrt_toolbox"
"Mesywang/Motion-Planning-Algorithms" -> "symao/minimum_snap_trajectory_generation" ["e"=1]
"Mesywang/Motion-Planning-Algorithms" -> "ai-winter/matlab_motion_planning"
"Mesywang/Motion-Planning-Algorithms" -> "adnanmunawar/matlab-rrt-variants"
"Mesywang/Motion-Planning-Algorithms" -> "IngaVS/informed-RRT"
"Mesywang/Motion-Planning-Algorithms" -> "Mesywang/Astar-JPS-Algorithm" ["e"=1]
"Mesywang/Motion-Planning-Algorithms" -> "Mesywang/MinimumSnap-Trajectory-Generation" ["e"=1]
"Mesywang/Motion-Planning-Algorithms" -> "KailinTong/Motion-Planning-for-Mobile-Robots"
"Mesywang/Motion-Planning-Algorithms" -> "HobbySingh/Path-Planning-Algorithms"
"Mesywang/Motion-Planning-Algorithms" -> "YashBansod/Robotics-Planning-Dynamics-and-Control"
"Mesywang/Motion-Planning-Algorithms" -> "adityajain07/Path-Planning-Algorithms"
"Mesywang/Motion-Planning-Algorithms" -> "yrlu/quadrotor" ["e"=1]
"hourenyu/--original--Trajectory-optimization-based-on-Bezier-polynomial-motion-planning-" -> "TixiaoShan/lexicographic_planning"
"algorithmsbooks/decisionmaking" -> "JuliaPOMDP/POMDPs.jl" ["e"=1]
"algorithmsbooks/decisionmaking" -> "JuliaAcademy/Decision-Making-Under-Uncertainty" ["e"=1]
"SunZezhou/Active-SLAM-with-Cartographer" -> "larics/cartographer_frontier_detection"
"SunZezhou/Active-SLAM-with-Cartographer" -> "SeanZsya/tdle"
"HKUST-Aerial-Robotics/EPSILON" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"HKUST-Aerial-Robotics/EPSILON" -> "HKUST-Aerial-Robotics/eudm_planner"
"HKUST-Aerial-Robotics/EPSILON" -> "ZJU-FAST-Lab/Dftpav"
"HKUST-Aerial-Robotics/EPSILON" -> "pparmesh/Constrained_ILQR"
"HKUST-Aerial-Robotics/EPSILON" -> "jchengai/pluto" ["e"=1]
"HKUST-Aerial-Robotics/EPSILON" -> "libai1943/CartesianPlanner"
"HKUST-Aerial-Robotics/EPSILON" -> "autonomousvision/tuplan_garage" ["e"=1]
"HKUST-Aerial-Robotics/EPSILON" -> "jchengai/gpir"
"HKUST-Aerial-Robotics/EPSILON" -> "MCZhi/DTPP" ["e"=1]
"HKUST-Aerial-Robotics/EPSILON" -> "yangmingustb/Papers"
"HKUST-Aerial-Robotics/EPSILON" -> "karlkurzer/path_planner"
"HKUST-Aerial-Robotics/EPSILON" -> "LiJiangnanBit/path_optimizer"
"HKUST-Aerial-Robotics/EPSILON" -> "Tsinghua-MARS-Lab/StateTransformer" ["e"=1]
"HKUST-Aerial-Robotics/EPSILON" -> "AdaCompNUS/despot"
"HKUST-Aerial-Robotics/EPSILON" -> "motional/nuplan-devkit" ["e"=1]
"daohu527/awesome-self-driving-car" -> "qiaoxu123/Self-Driving-Cars" ["e"=1]
"daohu527/awesome-self-driving-car" -> "YannZyl/Apollo-Note" ["e"=1]
"daohu527/awesome-self-driving-car" -> "HKUST-Aerial-Robotics/EPSILON" ["e"=1]
"daohu527/awesome-self-driving-car" -> "zhm-real/MotionPlanning" ["e"=1]
"daohu527/awesome-self-driving-car" -> "yangmingustb/Papers" ["e"=1]
"msteinbeck/tinyspline" -> "bgrimstad/splinter" ["e"=1]
"msteinbeck/tinyspline" -> "ttk592/spline" ["e"=1]
"msteinbeck/tinyspline" -> "ejmahler/SplineLibrary" ["e"=1]
"YukunXia/Carla_iLQR_MPC" -> "pparmesh/Constrained_ILQR"
"YukunXia/Carla_iLQR_MPC" -> "Bharath2/iLQR"
"YukunXia/Carla_iLQR_MPC" -> "anassinator/ilqr"
"YukunXia/Carla_iLQR_MPC" -> "LiJiangnanBit/path_optimizer_ilqr"
"YukunXia/Carla_iLQR_MPC" -> "HJReachability/ilqgames"
"YukunXia/Carla_iLQR_MPC" -> "abwerby/Model-Predictive-Control-Carla" ["e"=1]
"YukunXia/Carla_iLQR_MPC" -> "paulyehtw/Motion-Planning-on-CARLA" ["e"=1]
"YukunXia/Carla_iLQR_MPC" -> "HKUST-Aerial-Robotics/EPSILON"
"YukunXia/Carla_iLQR_MPC" -> "HKUST-Aerial-Robotics/eudm_planner"
"YukunXia/Carla_iLQR_MPC" -> "mlab-upenn/LearningMPC" ["e"=1]
"YukunXia/Carla_iLQR_MPC" -> "urosolia/RacingLMPC" ["e"=1]
"YukunXia/Carla_iLQR_MPC" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"YukunXia/Carla_iLQR_MPC" -> "chenyx09/belief-planning" ["e"=1]
"YukunXia/Carla_iLQR_MPC" -> "MajidMoghadam2006/RL-frenet-trajectory-planning-in-CARLA" ["e"=1]
"YukunXia/Carla_iLQR_MPC" -> "kazuotani14/iLQR"
"paulyehtw/Motion-Planning-on-CARLA" -> "stoneman404/motion-planning-with-carla" ["e"=1]
"paulyehtw/Motion-Planning-on-CARLA" -> "YukunXia/Carla_iLQR_MPC" ["e"=1]
"paulyehtw/Motion-Planning-on-CARLA" -> "6Lackiu/EMplanner_Carla" ["e"=1]
"ipa320/ipa_coverage_planning" -> "RicheyHuang/CoveragePlanner"
"ipa320/ipa_coverage_planning" -> "nobleo/full_coverage_path_planner"
"ipa320/ipa_coverage_planning" -> "ethz-asl/polygon_coverage_planning"
"ipa320/ipa_coverage_planning" -> "Greenzie/boustrophedon_planner"
"ipa320/ipa_coverage_planning" -> "ipa-rmb/autopnp"
"ipa320/ipa_coverage_planning" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"ipa320/ipa_coverage_planning" -> "hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS"
"ipa320/ipa_coverage_planning" -> "li-haojia/Clean-robot-turtlebot3"
"ipa320/ipa_coverage_planning" -> "peterWon/CleaningRobot"
"ipa320/ipa_coverage_planning" -> "RJJxp/CoveragePlanning"
"ipa320/ipa_coverage_planning" -> "Fields2Cover/Fields2Cover"
"ipa320/ipa_coverage_planning" -> "rst-tu-dortmund/mpc_local_planner"
"ipa320/ipa_coverage_planning" -> "Mr-Tony921/xju-robot"
"ipa320/ipa_coverage_planning" -> "18alantom/CoveragePathPlanning"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "RicheyHuang/CoveragePlanner"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "18alantom/CoveragePathPlanning"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "Greenzie/boustrophedon_planner"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "Ipiano/coverage-planning"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "ethz-asl/polygon_coverage_planning"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "RJJxp/CoveragePlanning"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "RicheyHuang/CompleteCoveragePathPlanning"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "ipa-rmb/autopnp"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "ipa320/ipa_coverage_planning"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "nobleo/full_coverage_path_planner"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "irvingvasquez/ocpp"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "RicheyHuang/CoverageActiveSLAM"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "jazzalin/area-coverage-nav"
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" -> "WJTung/GA-TSPCPP"
"introlab/find-object" -> "paulbovbel/frontier_exploration" ["e"=1]
"introlab/find-object" -> "wg-perception/people" ["e"=1]
"rst-tu-dortmund/mpc_local_planner" -> "Geonhee-LEE/mpc_ros"
"rst-tu-dortmund/mpc_local_planner" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"rst-tu-dortmund/mpc_local_planner" -> "LiJiangnanBit/path_optimizer"
"rst-tu-dortmund/mpc_local_planner" -> "Hypha-ROS/hypharos_minicar"
"rst-tu-dortmund/mpc_local_planner" -> "ros-planning/navigation_experimental"
"rst-tu-dortmund/mpc_local_planner" -> "gkouros/rsband_local_planner"
"rst-tu-dortmund/mpc_local_planner" -> "nobleo/full_coverage_path_planner"
"rst-tu-dortmund/mpc_local_planner" -> "locusrobotics/robot_navigation"
"rst-tu-dortmund/mpc_local_planner" -> "leggedrobotics/se2_navigation" ["e"=1]
"rst-tu-dortmund/mpc_local_planner" -> "mit-acl/faster" ["e"=1]
"rst-tu-dortmund/mpc_local_planner" -> "karlkurzer/path_planner"
"rst-tu-dortmund/mpc_local_planner" -> "sikang/mpl_ros" ["e"=1]
"rst-tu-dortmund/mpc_local_planner" -> "XiaojingGeorgeZhang/OBCA"
"rst-tu-dortmund/mpc_local_planner" -> "naturerobots/mesh_navigation" ["e"=1]
"rst-tu-dortmund/mpc_local_planner" -> "at-wat/neonavigation"
"nobleo/full_coverage_path_planner" -> "ethz-asl/polygon_coverage_planning"
"nobleo/full_coverage_path_planner" -> "RicheyHuang/CoveragePlanner"
"nobleo/full_coverage_path_planner" -> "Greenzie/boustrophedon_planner"
"nobleo/full_coverage_path_planner" -> "ipa320/ipa_coverage_planning"
"nobleo/full_coverage_path_planner" -> "li-haojia/Clean-robot-turtlebot3"
"nobleo/full_coverage_path_planner" -> "nobleo/tracking_pid"
"nobleo/full_coverage_path_planner" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"nobleo/full_coverage_path_planner" -> "peterWon/CleaningRobot"
"nobleo/full_coverage_path_planner" -> "Fields2Cover/Fields2Cover"
"nobleo/full_coverage_path_planner" -> "rst-tu-dortmund/mpc_local_planner"
"nobleo/full_coverage_path_planner" -> "naturerobots/move_base_flex" ["e"=1]
"nobleo/full_coverage_path_planner" -> "ros-planning/navigation_experimental"
"nobleo/full_coverage_path_planner" -> "locusrobotics/robot_navigation"
"nobleo/full_coverage_path_planner" -> "naturerobots/mesh_navigation" ["e"=1]
"nobleo/full_coverage_path_planner" -> "hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS"
"RicheyHuang/CoveragePlanner" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"RicheyHuang/CoveragePlanner" -> "ethz-asl/polygon_coverage_planning"
"RicheyHuang/CoveragePlanner" -> "ipa320/ipa_coverage_planning"
"RicheyHuang/CoveragePlanner" -> "nobleo/full_coverage_path_planner"
"RicheyHuang/CoveragePlanner" -> "18alantom/CoveragePathPlanning"
"RicheyHuang/CoveragePlanner" -> "Greenzie/boustrophedon_planner"
"RicheyHuang/CoveragePlanner" -> "li-haojia/Clean-robot-turtlebot3"
"RicheyHuang/CoveragePlanner" -> "ipa-rmb/autopnp"
"RicheyHuang/CoveragePlanner" -> "hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS"
"RicheyHuang/CoveragePlanner" -> "Fields2Cover/Fields2Cover"
"RicheyHuang/CoveragePlanner" -> "winwinashwin/Multi-Robot-Coverage-Planning"
"RicheyHuang/CoveragePlanner" -> "rodriguesrenato/coverage-path-planning"
"RicheyHuang/CoveragePlanner" -> "peterWon/CleaningRobot"
"RicheyHuang/CoveragePlanner" -> "WJTung/GA-TSPCPP"
"RicheyHuang/CoveragePlanner" -> "RJJxp/CoveragePlanning"
"xiaofeng419/SLAM-2D-LIDAR-SCAN" -> "meyiao/LaserSLAM"
"xiaofeng419/SLAM-2D-LIDAR-SCAN" -> "gisbi-kim/PyICP-SLAM" ["e"=1]
"xiaofeng419/SLAM-2D-LIDAR-SCAN" -> "libing64/slam2d"
"xiaofeng419/SLAM-2D-LIDAR-SCAN" -> "goktug97/PyGraphSLAM"
"masouduut94/MCTS-agent-python" -> "masouduut94/MCTS-agent-cythonized"
"LiYangSir/Smart-Algorithm" -> "szc19990412/Path-Planning" ["e"=1]
"ed-lam/bcp-mapf" -> "Jiaoyang-Li/MAPF-LNS"
"ed-lam/bcp-mapf" -> "Jiaoyang-Li/CBSH2-RTC"
"ed-lam/bcp-mapf" -> "Kei18/pibt2"
"ed-lam/bcp-mapf" -> "Kei18/lacam"
"ed-lam/bcp-mapf" -> "Jiaoyang-Li/CBSH2"
"Superone77/AGV_dijkstra" -> "WangHanfu/Multi-agent-Path-Finding-in-Warehouse" ["e"=1]
"matssteinweg/Multi-Purpose-MPC" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"matssteinweg/Multi-Purpose-MPC" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"matssteinweg/Multi-Purpose-MPC" -> "XiaojingGeorgeZhang/OBCA" ["e"=1]
"matssteinweg/Multi-Purpose-MPC" -> "tud-amr/amr-lmpcc" ["e"=1]
"LiJiangnanBit/path_optimizer" -> "LiJiangnanBit/path_optimizer_2"
"LiJiangnanBit/path_optimizer" -> "libai1943/CartesianPlanner"
"LiJiangnanBit/path_optimizer" -> "rst-tu-dortmund/mpc_local_planner"
"LiJiangnanBit/path_optimizer" -> "teddyluo/hybrid-a-star-annotation"
"LiJiangnanBit/path_optimizer" -> "karlkurzer/path_planner"
"LiJiangnanBit/path_optimizer" -> "LiJiangnanBit/path_optimizer_ilqr"
"LiJiangnanBit/path_optimizer" -> "pparmesh/Constrained_ILQR"
"LiJiangnanBit/path_optimizer" -> "HKUST-Aerial-Robotics/EPSILON"
"LiJiangnanBit/path_optimizer" -> "XiaojingGeorgeZhang/OBCA"
"LiJiangnanBit/path_optimizer" -> "Geonhee-LEE/mpc_ros"
"LiJiangnanBit/path_optimizer" -> "ZJU-FAST-Lab/Dftpav"
"LiJiangnanBit/path_optimizer" -> "SS47816/fiss_planner"
"LiJiangnanBit/path_optimizer" -> "amslabtech/state_lattice_planner"
"LiJiangnanBit/path_optimizer" -> "mit-acl/faster" ["e"=1]
"LiJiangnanBit/path_optimizer" -> "nobleo/full_coverage_path_planner"
"Sollimann/Dstar-lite-pathplanner" -> "mdeyo/d-star-lite"
"Sollimann/Dstar-lite-pathplanner" -> "Botao-Hu/Dstar-lite-on-ROS-Turtlebot"
"Sollimann/Dstar-lite-pathplanner" -> "PathPlanning/DstarLite"
"goktug97/DynamicWindowApproach" -> "estshorter/dwa"
"goktug97/DynamicWindowApproach" -> "DeepDuke/DWA-Simulation"
"GavinPHR/Space-Time-AStar" -> "GavinPHR/Multi-Agent-Path-Finding"
"GavinPHR/Space-Time-AStar" -> "PathPlanning/Continuous-CBS"
"GavinPHR/Space-Time-AStar" -> "Jiaoyang-Li/EECBS"
"GavinPHR/Space-Time-AStar" -> "Jiaoyang-Li/RHCR"
"GavinPHR/Space-Time-AStar" -> "APRIL-ZJU/CL-CBS"
"GavinPHR/Space-Time-AStar" -> "APLA-Toolbox/pymapf"
"GavinPHR/Space-Time-AStar" -> "speedzjy/mapf_ros"
"GavinPHR/Space-Time-AStar" -> "Jiaoyang-Li/CBSH2-RTC"
"GavinPHR/Space-Time-AStar" -> "nicofretti/MAPF"
"GavinPHR/Space-Time-AStar" -> "chenzhike110/MAPF-solver"
"GavinPHR/Space-Time-AStar" -> "jcontrerasleyton/MAPF"
"GavinPHR/Space-Time-AStar" -> "gloriyo/MAPF-ICBS"
"li-haojia/Clean-robot-turtlebot3" -> "peterWon/CleaningRobot"
"li-haojia/Clean-robot-turtlebot3" -> "nobleo/full_coverage_path_planner"
"li-haojia/Clean-robot-turtlebot3" -> "hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS"
"li-haojia/Clean-robot-turtlebot3" -> "RicheyHuang/CoveragePlanner"
"li-haojia/Clean-robot-turtlebot3" -> "ipa320/ipa_coverage_planning"
"li-haojia/Clean-robot-turtlebot3" -> "ethz-asl/polygon_coverage_planning"
"li-haojia/Clean-robot-turtlebot3" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"li-haojia/Clean-robot-turtlebot3" -> "Greenzie/boustrophedon_planner"
"li-haojia/Clean-robot-turtlebot3" -> "hrnr/m-explore" ["e"=1]
"li-haojia/Clean-robot-turtlebot3" -> "Forrest-Z/mpc_waypoint_tracking_controller"
"li-haojia/Clean-robot-turtlebot3" -> "jhlenes/complete_coverage" ["e"=1]
"li-haojia/Clean-robot-turtlebot3" -> "Mr-Tony921/xju-robot"
"AGV-IIT-KGP/awesome-motion-planning" -> "sbpl/sbpl"
"jbradberry/ultimate_tictactoe" -> "jbradberry/mcts"
"leggedrobotics/se2_navigation" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"leggedrobotics/se2_navigation" -> "ros-planning/navigation_experimental" ["e"=1]
"leggedrobotics/se2_navigation" -> "Hypha-ROS/hypharos_minicar" ["e"=1]
"leggedrobotics/se2_navigation" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"leggedrobotics/se2_navigation" -> "ZJU-FAST-Lab/Dftpav" ["e"=1]
"leggedrobotics/se2_navigation" -> "LiJiangnanBit/path_optimizer" ["e"=1]
"bark-simulator/bark-ml" -> "bark-simulator/bark"
"gisbi-kim/PyICP-SLAM" -> "xiaofeng419/SLAM-2D-LIDAR-SCAN" ["e"=1]
"Boyang--Li/Motion-Planning-Course" -> "KailinTong/Motion-Planning-for-Mobile-Robots"
"roadwide/AI-Homework" -> "zhaohaojie1998/Path-Planning" ["e"=1]
"WangHanfu/Multi-agent-Path-Finding-in-Warehouse" -> "WangHanfu/Multi-Robot-Path-Planning-with-Due-Times"
"WangHanfu/Multi-agent-Path-Finding-in-Warehouse" -> "balcilar/Multi-Robot-Path-Planning-on-Graphs"
"WangHanfu/Multi-agent-Path-Finding-in-Warehouse" -> "WangHanfu/multi-agent-path-finding"
"WangHanfu/Multi-agent-Path-Finding-in-Warehouse" -> "LyapunovJingci/Warehouse_Robot_Path_Planning"
"WangHanfu/Multi-agent-Path-Finding-in-Warehouse" -> "AKittenOfMrHu/Astar_AGV_Multi-car-path-planning"
"WangHanfu/Multi-agent-Path-Finding-in-Warehouse" -> "yusuf1478/multi_robot_path_planning_isca"
"LyapunovJingci/Warehouse_Robot_Path_Planning" -> "sumitrj/ConnectedQ-Multi-agent-Reinforcement-Learning-Algorithm"
"LyapunovJingci/Warehouse_Robot_Path_Planning" -> "DosepackAIR/MARL-DPP"
"LyapunovJingci/Warehouse_Robot_Path_Planning" -> "WangHanfu/Multi-agent-Path-Finding-in-Warehouse"
"LyapunovJingci/Warehouse_Robot_Path_Planning" -> "HusseinLezzaik/Deep-Learning-for-Multi-Robotics"
"LyapunovJingci/Warehouse_Robot_Path_Planning" -> "arrtvv852/Qlearning_AGVpath"
"LyapunovJingci/Warehouse_Robot_Path_Planning" -> "gsartoretti/PRIMAL"
"LyapunovJingci/Warehouse_Robot_Path_Planning" -> "chenzhike110/MAPF-solver"
"LyapunovJingci/Warehouse_Robot_Path_Planning" -> "liumingrui814/Multi-Agents-sorting" ["e"=1]
"stoneman404/motion-planning-with-carla" -> "casper-auto/carla_trajectory_controller"
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving"
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "carljohanhoel/BayesianRLForAutonomousDriving"
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "HJReachability/ilqgames"
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "jiachenli94/Awesome-Interaction-Aware-Trajectory-Prediction" ["e"=1]
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "AdaCompNUS/despot"
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "chauvinSimon/Reinforcement-Learning-for-Decision-Making-in-self-driving-cars" ["e"=1]
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "Haoran-SONG/PiP-Planning-informed-Prediction" ["e"=1]
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "HKUST-Aerial-Robotics/eudm_planner"
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "AdaCompNUS/context-pomdp"
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "HKUST-Aerial-Robotics/EPSILON"
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" -> "bark-simulator/bark"
"mathworks-robotics/awesome-matlab-robotics" -> "YashBansod/Robotics-Planning-Dynamics-and-Control" ["e"=1]
"mathworks-robotics/awesome-matlab-robotics" -> "mathworks-robotics/trajectory-planning-robot-manipulators" ["e"=1]
"mathworks-robotics/awesome-matlab-robotics" -> "AtsushiSakai/MATLABRobotics" ["e"=1]
"HAOLI-TUKL/Multi_Robots_DMPC" -> "carlosluis/online_dmpc"
"TikhonJelvis/RL-book" -> "coverdrive/technical-documents" ["e"=1]
"TikhonJelvis/RL-book" -> "coverdrive/MDP-DP-RL" ["e"=1]
"hubery05/Astar_Path_Planner" -> "dengpw/hybrid_astar_planner"
"hubery05/Astar_Path_Planner" -> "RiteshKH/Ant_Colony_Optimizer_move_base_planner"
"zhongjieGDUT/manipulation_planning_Matlab" -> "Shumin326/Manipulator"
"KumarRobotics/ublox" -> "ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" ["e"=1]
"xuhuairuogu/V-REP-Simulation-Projects" -> "4rtur1t0/ARTE" ["e"=1]
"mit-acl/faster" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"mjxu96/carlaviz" -> "bark-simulator/bark" ["e"=1]
"LazyFalcon/D_star_PathPlanning" -> "HobbySingh/Path-Planning-Algorithms"
"LazyFalcon/D_star_PathPlanning" -> "jmiseikis/RobotNavigation"
"LazyFalcon/D_star_PathPlanning" -> "balcilar/RobotPathPlanning"
"LazyFalcon/D_star_PathPlanning" -> "herryCccc/Mobile-robot-path-planning"
"LazyFalcon/D_star_PathPlanning" -> "zhaoxrthu/DQN_of_DWA_matlab"
"LazyFalcon/D_star_PathPlanning" -> "luhan2016/PathPlanning"
"pparmesh/Constrained_ILQR" -> "Bharath2/iLQR"
"pparmesh/Constrained_ILQR" -> "LiJiangnanBit/path_optimizer_ilqr"
"pparmesh/Constrained_ILQR" -> "YukunXia/Carla_iLQR_MPC"
"pparmesh/Constrained_ILQR" -> "anassinator/ilqr"
"pparmesh/Constrained_ILQR" -> "HKUST-Aerial-Robotics/EPSILON"
"pparmesh/Constrained_ILQR" -> "PuYuuu/vehicle-interaction-decision-making" ["e"=1]
"pparmesh/Constrained_ILQR" -> "libai1943/CartesianPlanner"
"pparmesh/Constrained_ILQR" -> "HJReachability/ilqgames"
"pparmesh/Constrained_ILQR" -> "HKUST-Aerial-Robotics/eudm_planner"
"pparmesh/Constrained_ILQR" -> "LiJiangnanBit/path_optimizer_2"
"pparmesh/Constrained_ILQR" -> "ZJU-FAST-Lab/Dftpav"
"pparmesh/Constrained_ILQR" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"pparmesh/Constrained_ILQR" -> "ZhaiMen-Hub/DecisionPlanning" ["e"=1]
"pparmesh/Constrained_ILQR" -> "LiJiangnanBit/path_optimizer"
"pparmesh/Constrained_ILQR" -> "RoboticExplorationLab/Altro.jl" ["e"=1]
"autowarefoundation/autoware_ai_planning" -> "KumarRobotics/conformal_lattice_planner" ["e"=1]
"bgrimstad/splinter" -> "msteinbeck/tinyspline" ["e"=1]
"bgrimstad/splinter" -> "ttk592/spline"
"bgrimstad/splinter" -> "QianZheng/BSplineFitting"
"bgrimstad/splinter" -> "ejmahler/SplineLibrary"
"bgrimstad/splinter" -> "NCAR/bspline"
"bgrimstad/splinter" -> "thibauts/b-spline"
"bgrimstad/splinter" -> "ddemidov/mba"
"bgrimstad/splinter" -> "APRIL-ZJU/Coco-LIC" ["e"=1]
"bgrimstad/splinter" -> "PatWie/CppNumericalSolvers" ["e"=1]
"bgrimstad/splinter" -> "yixuan/spectra" ["e"=1]
"bgrimstad/splinter" -> "ebertolazzi/Splines"
"bgrimstad/splinter" -> "chen0040/cpp-spline"
"PickNikRobotics/rviz_visual_tools" -> "at-wat/neonavigation" ["e"=1]
"PickNikRobotics/rviz_visual_tools" -> "karlkurzer/path_planner" ["e"=1]
"PickNikRobotics/rviz_visual_tools" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"ZJU-FAST-Lab/LBFGS-Lite" -> "ZJU-FAST-Lab/Dftpav" ["e"=1]
"PRBonn/agribot" -> "alirezaahmadi/AgriBot-Local-Planner" ["e"=1]
"proroklab/gnn_pathplanning" -> "proroklab/magat_pathplanning"
"proroklab/gnn_pathplanning" -> "katetolstaya/multiagent_gnn_policies"
"proroklab/gnn_pathplanning" -> "ZiyuanMa/DHC"
"proroklab/gnn_pathplanning" -> "marmotlab/PRIMAL2"
"proroklab/gnn_pathplanning" -> "GavinPHR/Multi-Agent-Path-Finding"
"proroklab/gnn_pathplanning" -> "gsartoretti/PRIMAL"
"erdos-project/frenet_optimal_trajectory_planner" -> "SS47816/frenet_optimal_planner"
"erdos-project/frenet_optimal_trajectory_planner" -> "anime-sh/Frenet_Planner_AGV"
"erdos-project/frenet_optimal_trajectory_planner" -> "SS47816/fiss_planner"
"erdos-project/frenet_optimal_trajectory_planner" -> "fjp/frenet"
"erdos-project/frenet_optimal_trajectory_planner" -> "zqw-hooper/apollo_and_-autoware_path_planner"
"moribots/motion_planning" -> "jianzhuozhuTHU/MPC-D-CBF" ["e"=1]
"moribots/motion_planning" -> "hourenyu/--original--Trajectory-optimization-based-on-Bezier-polynomial-motion-planning-"
"moribots/motion_planning" -> "NeXTzhao/planning"
"hubery05/A-start-with-B-spline" -> "gkouros/path-smoothing-ros"
"AdaCompNUS/context-pomdp" -> "AdaCompNUS/summit"
"AdaCompNUS/context-pomdp" -> "AdaCompNUS/hyp-despot"
"AdaCompNUS/summit" -> "AdaCompNUS/context-pomdp"
"AdaCompNUS/summit" -> "bark-simulator/bark"
"AdaCompNUS/summit" -> "carla-simulator/map" ["e"=1]
"AdaCompNUS/summit" -> "deepsense-ai/carla-birdeye-view" ["e"=1]
"peijin94/matlabPlotCheatsheet" -> "AtsushiSakai/MATLABRobotics" ["e"=1]
"ROS-Mobile/ROS-Mobile-Android" -> "iralabdisco/ira_laser_tools" ["e"=1]
"PathPlanning/Push-and-Rotate--CBS--PrioritizedPlanning" -> "PathPlanning/CBS-SIPP"
"Jiaoyang-Li/PBS" -> "Jiaoyang-Li/EECBS"
"Jiaoyang-Li/PBS" -> "Jiaoyang-Li/MAPF-LNS"
"wanghuohuo0716/hybrid_A_star" -> "teddyluo/hybrid-a-star-annotation"
"wanghuohuo0716/hybrid_A_star" -> "karlkurzer/path_planner"
"wanghuohuo0716/hybrid_A_star" -> "zm0612/Hybrid_A_Star"
"wanghuohuo0716/hybrid_A_star" -> "linyicheng1/hybrid_astar"
"wanghuohuo0716/hybrid_A_star" -> "robinvista/Mathematica"
"wanghuohuo0716/hybrid_A_star" -> "yangmingustb/Local-Planner"
"wanghuohuo0716/hybrid_A_star" -> "ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning"
"wanghuohuo0716/hybrid_A_star" -> "libai1943/CartesianPlanner"
"wanghuohuo0716/hybrid_A_star" -> "tanujthakkar/Voronoi-Based-Hybrid-Astar"
"wanghuohuo0716/hybrid_A_star" -> "tejus-gupta/hybrid-astar-planner"
"wanghuohuo0716/hybrid_A_star" -> "LiJiangnanBit/path_optimizer"
"wanghuohuo0716/hybrid_A_star" -> "twxjyg/Hybrid-A-Star-U-Turn-Solution"
"wanghuohuo0716/hybrid_A_star" -> "pparmesh/Constrained_ILQR"
"wanghuohuo0716/hybrid_A_star" -> "teamo1996/Motion-plan"
"wanghuohuo0716/hybrid_A_star" -> "HKUST-Aerial-Robotics/EPSILON"
"ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" -> "nickcharron/waypoint_nav"
"ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" -> "gkouros/waypoint-global-planner"
"ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" -> "danielsnider/gps_goal"
"ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" -> "danielsnider/follow_waypoints"
"ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" -> "ArghyaChatterjee/waypoint-based-3D-navigation-in-ros"
"ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" -> "naturerobots/mesh_navigation" ["e"=1]
"ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" -> "methylDragon/ros-sensor-fusion-tutorial" ["e"=1]
"ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" -> "nobleo/rviz_satellite" ["e"=1]
"iris-ua/iris_lama_ros" -> "at-wat/neonavigation" ["e"=1]
"sunmiaozju/shenlan-laser-slam-2d" -> "Wleisure95/laser_slam"
"sunmiaozju/shenlan-laser-slam-2d" -> "kadn/open_karto"
"QianZheng/BSplineFitting" -> "forty-twoo/B-Spline-curve-fitting"
"enginbaglayici/ConflictBasedSearch" -> "gloriyo/MAPF-ICBS"
"enginbaglayici/ConflictBasedSearch" -> "jcontrerasleyton/MAPF"
"enginbaglayici/ConflictBasedSearch" -> "PathPlanning/Continuous-CBS"
"enginbaglayici/ConflictBasedSearch" -> "Jiaoyang-Li/CBSH2"
"enginbaglayici/ConflictBasedSearch" -> "Jiaoyang-Li/CBSH2-RTC"
"eli-b/mapf" -> "MatteoAntoniazzi/MAPF"
"eli-b/mapf" -> "eli-b/idcbs"
"DeepDuke/DWA-Simulation" -> "estshorter/dwa"
"mathworks-robotics/designing-robot-manipulator-algorithms" -> "mathworks-robotics/trajectory-planning-robot-manipulators"
"IngaVS/informed-RRT" -> "SrinidhiSreenath/ENPM661-Informed-RRT-Star"
"IngaVS/informed-RRT" -> "bhtxy0525/2D-RRT-Connect-Algorithm"
"Argonne-National-Laboratory/DSP" -> "mlubin/JuliaBenders"
"Argonne-National-Laboratory/DSP" -> "Argonne-National-Laboratory/PIPS"
"JeffLIrion/python-graphslam" -> "UditSinghParihar/g2o_tutorial"
"JeffLIrion/python-graphslam" -> "gisbi-kim/modern-slam-tutorial-python"
"JeffLIrion/python-graphslam" -> "uoip/g2opy" ["e"=1]
"JeffLIrion/python-graphslam" -> "goktug97/PyGraphSLAM"
"RoboticExplorationLab/Altro.jl" -> "pparmesh/Constrained_ILQR" ["e"=1]
"RoboticExplorationLab/Altro.jl" -> "Bharath2/iLQR" ["e"=1]
"lh9171338/Astar" -> "kohonda/mpc_tracker_ros"
"lh9171338/Astar" -> "Mesywang/Astar-JPS-Algorithm" ["e"=1]
"lh9171338/Astar" -> "dengpw/hybrid_astar_planner"
"lh9171338/Astar" -> "hourenyu/--original--Trajectory-optimization-based-on-Bezier-polynomial-motion-planning-"
"alirezaahmadi/AgriBot-Local-Planner" -> "gkouros/rsband_local_planner"
"alirezaahmadi/AgriBot-Local-Planner" -> "adrianapadilla/simple_local_planner"
"alirezaahmadi/AgriBot-Local-Planner" -> "asr-ros/asr_ftc_local_planner"
"4rtur1t0/ARTE" -> "yzhao334/accOpt"
"4rtur1t0/ARTE" -> "yzhao334/Efficient-Trajectory-Optimization-for-Robot-Motion-Planning--Examples"
"elewu/2d_lidar_undistortion" -> "LiuLimingCode/lidar_undistortion_2d"
"LiuLimingCode/lidar_undistortion_2d" -> "elewu/2d_lidar_undistortion"
"VisualComputingInstitute/DR-SPAAM-Detector" -> "VisualComputingInstitute/2D_lidar_person_detection"
"VisualComputingInstitute/DR-SPAAM-Detector" -> "VisualComputingInstitute/DROW"
"KavitShah1998/Autonomous_Mobile_Robot_Navigation_In_ROS" -> "MKJia/ROS-navigation-RRT"
"anime-sh/Frenet_Planner_AGV" -> "SS47816/frenet_optimal_planner"
"zhm-real/CurvesGenerator" -> "RajPShinde/Hybrid-A-Star"
"zhm-real/CurvesGenerator" -> "zhm-real/MotionPlanning"
"zhm-real/CurvesGenerator" -> "nathanlct/reeds-shepp-curves"
"zhm-real/CurvesGenerator" -> "KumarRobotics/conformal_lattice_planner"
"dejanpan/snap_map_icp" -> "shamengjun/scan_map_icp"
"PathPlanning/SuboptimalSIPP" -> "PathPlanning/TO-AA-SIPP"
"PathPlanning/SuboptimalSIPP" -> "PathPlanning/AA-SIPP-m"
"Jiaoyang-Li/RHCR" -> "Jiaoyang-Li/EECBS"
"Jiaoyang-Li/RHCR" -> "Jiaoyang-Li/CBSH2-RTC"
"Jiaoyang-Li/RHCR" -> "PathPlanning/Continuous-CBS"
"Jiaoyang-Li/RHCR" -> "Kei18/pibt2"
"Jiaoyang-Li/RHCR" -> "Jiaoyang-Li/MAPF-LNS"
"Jiaoyang-Li/RHCR" -> "Jiaoyang-Li/MAPF-LNS2"
"Jiaoyang-Li/RHCR" -> "Kei18/mapf-IR"
"Jiaoyang-Li/RHCR" -> "PathPlanning/AA-SIPP-m"
"Jiaoyang-Li/RHCR" -> "GavinPHR/Multi-Agent-Path-Finding"
"Jiaoyang-Li/RHCR" -> "Jiaoyang-Li/CBSH2"
"Jiaoyang-Li/RHCR" -> "marmotlab/PRIMAL2"
"Jiaoyang-Li/RHCR" -> "Kei18/lacam"
"Jiaoyang-Li/RHCR" -> "Jiaoyang-Li/PBS"
"Jiaoyang-Li/RHCR" -> "nobodyczcz/MCA-RMCA"
"Jiaoyang-Li/RHCR" -> "APRIL-ZJU/CL-CBS"
"katetolstaya/graph_rl" -> "katetolstaya/gym-flock"
"utiasASRL/batch-informed-trees" -> "IngaVS/informed-RRT"
"rafaelbarretorb/trajectory_tracking_control" -> "lmiguelvargasf/trajectory_tracking"
"YashTrikannad/apf_reactive_planning" -> "JianmingTONG/Artificial_Potential_Field_MultiTarget"
"Jiaoyang-Li/MAPF-LNS" -> "Jiaoyang-Li/MAPF-LNS2"
"Jiaoyang-Li/MAPF-LNS" -> "Kei18/pibt2"
"Jiaoyang-Li/MAPF-LNS" -> "Kei18/pibt"
"Jiaoyang-Li/MAPF-LNS" -> "Jiaoyang-Li/EECBS"
"Jiaoyang-Li/MAPF-LNS" -> "Jiaoyang-Li/CBSH2-RTC"
"RoboticExplorationLab/Algames.jl" -> "simon-lc/AlgamesDriving.jl"
"RoboticExplorationLab/Algames.jl" -> "HJReachability/ilqgames"
"RoboticExplorationLab/Algames.jl" -> "RoboticExplorationLab/LUCIDGames.jl"
"parisrigakis/PathPlanningAPF" -> "YashTrikannad/apf_reactive_planning"
"h2r/pomdp-py" -> "pemami4911/POMDPy"
"h2r/pomdp-py" -> "namoshizun/PyPOMDP"
"h2r/pomdp-py" -> "GeorgePik/POMCP"
"h2r/pomdp-py" -> "AdaCompNUS/despot"
"h2r/pomdp-py" -> "JuliaPOMDP/POMDPs.jl"
"h2r/pomdp-py" -> "JuliaPOMDP/POMCPOW.jl"
"h2r/pomdp-py" -> "AdaCompNUS/sarsop"
"h2r/pomdp-py" -> "twni2016/pomdp-baselines" ["e"=1]
"h2r/pomdp-py" -> "zkytony/genmos_object_search"
"h2r/pomdp-py" -> "d3sm0/gym_pomdp"
"h2r/pomdp-py" -> "AdaCompNUS/qmdp-net"
"h2r/pomdp-py" -> "malayandi/Tiger-Problem-POMDP"
"h2r/pomdp-py" -> "Svalorzen/AI-Toolbox"
"UditSinghParihar/g2o_tutorial" -> "JeffLIrion/python-graphslam"
"jazzalin/area-coverage-nav" -> "KunHanKH/Comple-Coverage-Path-PLanning-Based-on-Cell-Desomposition"
"jazzalin/area-coverage-nav" -> "irvingvasquez/wind_cpp"
"TUMFTM/GraphBasedLocalTrajectoryPlanner" -> "tud-amr/amr-lmpcc" ["e"=1]
"yorsh87/nicp" -> "AndreaCensi/csm" ["e"=1]
"WLwind/a_better_star" -> "WLwind/segment_global_planner"
"WLwind/a_better_star" -> "Nipunnyka/GlobalPathPlannerPlugin"
"whoenig/multi-robot-trajectory-planning" -> "qwerty35/swarm_simulator"
"HKUST-Aerial-Robotics/eudm_planner" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"HKUST-Aerial-Robotics/eudm_planner" -> "HKUST-Aerial-Robotics/EPSILON"
"HKUST-Aerial-Robotics/eudm_planner" -> "pparmesh/Constrained_ILQR"
"HKUST-Aerial-Robotics/eudm_planner" -> "AdaCompNUS/despot"
"HKUST-Aerial-Robotics/eudm_planner" -> "HJReachability/ilqgames"
"HKUST-Aerial-Robotics/eudm_planner" -> "MCZhi/DTPP" ["e"=1]
"HKUST-Aerial-Robotics/eudm_planner" -> "jchengai/pluto" ["e"=1]
"HKUST-Aerial-Robotics/eudm_planner" -> "jchengai/gpir"
"bewimm/kinodynamic_rrt_star" -> "dongliangCH/Accelerating-Kinodynamic-RRTstar-Through-Dimensionality-Reduction"
"bewimm/kinodynamic_rrt_star" -> "BijoSebastian/Kinodynamic-RRT-STAR"
"bewimm/kinodynamic_rrt_star" -> "ZamesNg/kinodynamic_frontend"
"tud-amr/mrca-mav" -> "tud-amr/go-mpc"
"tud-amr/mrca-mav" -> "tud-amr/mrca_vc"
"tud-amr/mrca-mav" -> "carlosluis/multiagent_planning"
"tud-amr/mrca-mav" -> "hai-zhu/obstacle_estimator"
"MAPIRlab/srf_laser_odometry" -> "artivis/laser_odometry"
"goktug97/PyGraphSLAM" -> "HobbySingh/Graph-SLAM"
"goktug97/PyGraphSLAM" -> "koide3/open3d_graph_slam"
"goktug97/PyGraphSLAM" -> "hotsuyuki/Graph-Based-SLAM"
"LucasWEIchen/lidar_tracking" -> "surendersampath/Lidar-Project---Human-detection-and-counting"
"KumarRobotics/conformal_lattice_planner" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"jcontrerasleyton/MAPF" -> "JuiceFV/Cooperative_Pathfinding"
"windelbouwman/move-base-ompl" -> "Zhi29/RRTstar-planner-for-ROS-navigation"
"Pieter-Cawood/M-TA-Prioritized-MAPD" -> "nobodyczcz/MCA-RMCA"
"tud-amr/amr-lmpcc" -> "tud-amr/mrca-mav"
"urastogi885/a-star-turtlebot" -> "hassanmehmud/ROS-Turtlebot3"
"Ipiano/coverage-planning" -> "RJJxp/CoveragePlanning"
"Ipiano/coverage-planning" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"RJJxp/CoveragePlanning" -> "Ipiano/coverage-planning"
"RJJxp/CoveragePlanning" -> "hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS"
"RJJxp/CoveragePlanning" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"WLwind/segment_global_planner" -> "WLwind/a_better_star"
"WLwind/segment_global_planner" -> "eborghi10/jps_global_planner"
"WLwind/segment_global_planner" -> "yangfuyuan/dstar_global_planner"
"JuliaGameTheoreticPlanning/iLQGames.jl" -> "zhu-edward/DGSQP"
"JuliaGameTheoreticPlanning/iLQGames.jl" -> "lassepe/GameInference.jl"
"JuliaGameTheoreticPlanning/iLQGames.jl" -> "lassepe/DifferentiableTrajectoryOptimization.jl"
"Jiaoyang-Li/CBSH2" -> "Jiaoyang-Li/CBSH2-RTC"
"Jiaoyang-Li/CBSH2" -> "Jiaoyang-Li/MAPF-LNS"
"Jiaoyang-Li/CBSH2" -> "Jiaoyang-Li/EECBS"
"Jiaoyang-Li/CBSH2" -> "enginbaglayici/ConflictBasedSearch"
"Jiaoyang-Li/CBSH2" -> "Kei18/mapf-IR"
"Jiaoyang-Li/CBSH2" -> "Jiaoyang-Li/RHCR"
"Jiaoyang-Li/CBSH2" -> "Kei18/lacam"
"yzhao334/Efficient-Trajectory-Optimization-for-Robot-Motion-Planning--Examples" -> "yzhao334/accOpt"
"eborghi10/jps_global_planner" -> "WLwind/segment_global_planner"
"eborghi10/jps_global_planner" -> "WLwind/a_better_star"
"savvas-ap/cpp-simulated-evaluations" -> "savvas-ap/mCPP-optimized-DARP"
"Pandas-Team/Ad-Recommender-System" -> "NEFTeam/Traffic-Law-Enforcement"
"linxigjs/dynamicvoronoi" -> "NKU-MobFly-Robotics/g2vd_planner"
"ZJU-FAST-Lab/large_scale_traj_optimizer" -> "ZJU-FAST-Lab/Dftpav" ["e"=1]
"VincentWong3/automated-driving-control" -> "VincentWong3/automatic-driving-decision-and-planning-for-matlab"
"VincentWong3/automated-driving-control" -> "VincentWong3/notes"
"VincentWong3/automated-driving-control" -> "VincentWong3/apollo"
"VincentWong3/automated-driving-control" -> "daohu527/dig-into-apollo" ["e"=1]
"VincentWong3/automated-driving-control" -> "CHH3213/chhRobotics_CPP"
"VincentWong3/automated-driving-control" -> "gxf1002/ShenLanAcademy-PlanningControl"
"GasserElAzab/6-DOF-DLR-robot-simulation-in-Matlab-Simulink" -> "Walid-khaled/6DOF-Robot-Trajectory-Planning"
"GasserElAzab/6-DOF-DLR-robot-simulation-in-Matlab-Simulink" -> "mathworks-robotics/trajectory-planning-robot-manipulators"
"fazildgr8/ros_autonomous_slam" -> "hasauino/rrt_exploration"
"fazildgr8/ros_autonomous_slam" -> "hikashi/multi-robot-rrt-exploration-noetic"
"fazildgr8/ros_autonomous_slam" -> "hrnr/m-explore" ["e"=1]
"fazildgr8/ros_autonomous_slam" -> "bigmb/Autonomous-Navigation-and-Exploration"
"fazildgr8/ros_autonomous_slam" -> "fazildgr8/realsense_explorer_bot"
"fazildgr8/ros_autonomous_slam" -> "li-haojia/Clean-robot-turtlebot3"
"fazildgr8/ros_autonomous_slam" -> "hasauino/rrt_exploration_tutorials"
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "xiangli0608/cartographer_detailed_comments_ws" ["e"=1]
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "ShihanWang/reflector_ekf_slam"
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "MegviiRobot/OdomLaserCalibraTool"
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "Little-Potato-1990/localization_in_auto_driving" ["e"=1]
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "libing64/slam2d"
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "smilefacehh/LIO-SAM-DetailedNote" ["e"=1]
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "elewu/2d_lidar_undistortion"
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "sunmiaozju/shenlan-laser-slam-2d"
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "kam3k/laser_line_extraction"
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "softdream/Slam-Project-Of-MyOwn"
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "xiangli0608/Learning_localization_from_scratch_ws"
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "AndreaCensi/csm"
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "kahowang/sensor-fusion-for-localization-and-mapping" ["e"=1]
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "wykxwyc/LeGO-LOAM_NOTED" ["e"=1]
"xiangli0608/Creating-2D-laser-slam-from-scratch" -> "MegviiRobot/CamLaserCalibraTool" ["e"=1]
"COONEO/neor_mini" -> "Mr-Tony921/xju-robot" ["e"=1]
"COONEO/neor_mini" -> "NeXTzhao/planning" ["e"=1]
"linorobot/linorobot2" -> "open-navigation/opennav_coverage" ["e"=1]
"teamo1996/Motion-plan" -> "KailinTong/Motion-Planning-for-Mobile-Robots"
"teamo1996/Motion-plan" -> "AlexGeControl/Motion-Planning-for-Mobile-Robots"
"teamo1996/Motion-plan" -> "wanghuohuo0716/hybrid_A_star"
"hanlinniu/turtlebot3_ddpg_collision_avoidance" -> "Peace1997/Voronoi_Based_Multi_Robot_Collaborate_Exploration_Unknow_Enviroment" ["e"=1]
"efc-robot/SMMR-Explore" -> "efc-robot/TopoExplore"
"efc-robot/SMMR-Explore" -> "efc-robot/Explore-Bench"
"efc-robot/SMMR-Explore" -> "hikashi/multi-robot-rrt-exploration-melodic"
"efc-robot/SMMR-Explore" -> "gingineer95/Multi-Robot-Exploration-and-Map-Merging"
"efc-robot/SMMR-Explore" -> "ExistentialRobotics/SSMI"
"perseus784/Multi-Robot_Exploration" -> "Peace1997/Voronoi_Based_Multi_Robot_Collaborate_Exploration_Unknow_Enviroment"
"gingineer95/Multi-Robot-Exploration-and-Map-Merging" -> "hikashi/multi-robot-rrt-exploration-noetic"
"gingineer95/Multi-Robot-Exploration-and-Map-Merging" -> "Icheler/coExplore"
"gingineer95/Multi-Robot-Exploration-and-Map-Merging" -> "Peace1997/Voronoi_Based_Multi_Robot_Collaborate_Exploration_Unknow_Enviroment"
"gingineer95/Multi-Robot-Exploration-and-Map-Merging" -> "hikashi/multi-robot-rrt-exploration-melodic"
"gingineer95/Multi-Robot-Exploration-and-Map-Merging" -> "Lee-JaeWon/Frontier-Based-Multi-Robot-Exploration"
"caochao39/tare_planner" -> "hasauino/rrt_exploration" ["e"=1]
"hikashi/multi-robot-rrt-exploration-melodic" -> "hikashi/multi-robot-rrt-exploration-noetic"
"hikashi/multi-robot-rrt-exploration-melodic" -> "hikashi/TM-RRT_exploration_Simulation"
"hikashi/multi-robot-rrt-exploration-melodic" -> "hikashi/TM-RRT_exploration"
"hikashi/multi-robot-rrt-exploration-melodic" -> "herolab-uga/ROS-SEAL"
"hikashi/multi-robot-rrt-exploration-melodic" -> "GradyM2M/multi_rrt_exploration"
"hrnr/m-explore" -> "paulbovbel/frontier_exploration" ["e"=1]
"hrnr/m-explore" -> "hasauino/rrt_exploration" ["e"=1]
"hrnr/m-explore" -> "li-haojia/Clean-robot-turtlebot3" ["e"=1]
"hrnr/m-explore" -> "locusrobotics/robot_navigation" ["e"=1]
"hrnr/m-explore" -> "hasauino/rrt_exploration_tutorials" ["e"=1]
"hrnr/m-explore" -> "hikashi/multi-robot-rrt-exploration-melodic" ["e"=1]
"hrnr/m-explore" -> "ros-planning/navigation_experimental" ["e"=1]
"hrnr/m-explore" -> "efc-robot/SMMR-Explore" ["e"=1]
"hrnr/m-explore" -> "CCNYRoboticsLab/scan_tools" ["e"=1]
"zhangpanyi/a-star-algorithm" -> "daancode/a-star"
"zhangpanyi/a-star-algorithm" -> "sumimakito/A-star"
"alice-st/DARP" -> "savvas-ap/mCPP-optimized-DARP"
"alice-st/DARP" -> "athakapo/DARP"
"alice-st/DARP" -> "CourierLo/TMSTC-Star"
"alice-st/DARP" -> "reso1/MSTC_Star"
"alice-st/DARP" -> "18alantom/CoveragePathPlanning"
"alice-st/DARP" -> "AytacKahveci/multirobot_coverage"
"alice-st/DARP" -> "oelin/darpy"
"alice-st/DARP" -> "cpswarm/swarm_functions"
"alice-st/DARP" -> "wangweike123/Full-coverage-path-planning-based-on-spanningtree-and-A-star"
"alice-st/DARP" -> "rodriguesrenato/coverage-path-planning"
"petercorke/robotics-toolbox-matlab" -> "AtsushiSakai/MATLABRobotics" ["e"=1]
"petercorke/robotics-toolbox-matlab" -> "YashBansod/Robotics-Planning-Dynamics-and-Control" ["e"=1]
"mathworks/MATLAB-Simulink-Challenge-Project-Hub" -> "zhm-real/MotionPlanning" ["e"=1]
"winter2897/Real-time-Auto-License-Plate-Recognition-with-Jetson-Nano" -> "anhbantre/multi_robot_ros2" ["e"=1]
"APRIL-ZJU/CL-CBS" -> "PathPlanning/Continuous-CBS"
"APRIL-ZJU/CL-CBS" -> "LIJUNCHENG001/multi_robot_traj_planner"
"APRIL-ZJU/CL-CBS" -> "GavinPHR/Multi-Agent-Path-Finding"
"APRIL-ZJU/CL-CBS" -> "speedzjy/mapf_ros"
"APRIL-ZJU/CL-CBS" -> "whoenig/libMultiRobotPlanning"
"APRIL-ZJU/CL-CBS" -> "Jiaoyang-Li/CBSH2-RTC"
"APRIL-ZJU/CL-CBS" -> "Kei18/mapf-IR"
"APRIL-ZJU/CL-CBS" -> "atb033/multi_agent_path_planning"
"APRIL-ZJU/CL-CBS" -> "qwerty35/swarm_simulator"
"APRIL-ZJU/CL-CBS" -> "Jiaoyang-Li/RHCR"
"APRIL-ZJU/CL-CBS" -> "PathPlanning/AA-SIPP-m"
"APRIL-ZJU/CL-CBS" -> "Jiaoyang-Li/EECBS"
"APRIL-ZJU/CL-CBS" -> "mit-acl/mader" ["e"=1]
"APRIL-ZJU/CL-CBS" -> "Jiaoyang-Li/CBSH2"
"APRIL-ZJU/CL-CBS" -> "ZJU-FAST-Lab/Car-like-Robotic-swarm"
"proroklab/magat_pathplanning" -> "proroklab/gnn_pathplanning"
"proroklab/magat_pathplanning" -> "katetolstaya/graph_rl"
"proroklab/magat_pathplanning" -> "ZiyuanMa/DHC"
"DerrickXuNu/Learn-Carla" -> "L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" ["e"=1]
"mchtalkn/MAPF_CBS" -> "VD2410/Multi-Agent-Path-Finding"
"xiangli0608/cartographer_detailed_comments_ws" -> "xiangli0608/Creating-2D-laser-slam-from-scratch" ["e"=1]
"xiangli0608/cartographer_detailed_comments_ws" -> "MegviiRobot/OdomLaserCalibraTool" ["e"=1]
"yujinrobot/kobuki" -> "yujinrobot/yujin_ocs" ["e"=1]
"yujinrobot/kobuki" -> "paulbovbel/frontier_exploration" ["e"=1]
"herryCccc/Mobile-robot-path-planning" -> "HobbySingh/Path-Planning-Algorithms"
"herryCccc/Mobile-robot-path-planning" -> "onlyEugeneLi/ACO-RobotPathPlanning-MATLAB"
"herryCccc/Mobile-robot-path-planning" -> "PetrichorHlacyon/ACA2solvePathPlanning"
"Grizi-ju/ros_program" -> "Grizi-ju/better_astar_global_planner"
"Grizi-ju/ros_program" -> "Grizi-ju/Astar_JPS_Pathplanning_in_ROS"
"Grizi-ju/ros_program" -> "Mr-Tony921/xju-robot"
"Grizi-ju/ros_program" -> "dengpw/hybrid_astar_planner"
"thibauts/b-spline" -> "Tagussan/BSpline"
"thibauts/b-spline" -> "StandardCyborg/nurbs"
"spencer-project/spencer_people_tracking" -> "wg-perception/people"
"spencer-project/spencer_people_tracking" -> "srl-freiburg/pedsim_ros" ["e"=1]
"spencer-project/spencer_people_tracking" -> "angusleigh/leg_tracker"
"spencer-project/spencer_people_tracking" -> "marinaKollmitz/human_aware_navigation"
"spencer-project/spencer_people_tracking" -> "strands-project/strands_perception_people"
"spencer-project/spencer_people_tracking" -> "tysik/obstacle_detector"
"spencer-project/spencer_people_tracking" -> "mit-acl/cadrl_ros" ["e"=1]
"spencer-project/spencer_people_tracking" -> "VisualComputingInstitute/2D_lidar_person_detection"
"spencer-project/spencer_people_tracking" -> "DLu/navigation_layers"
"spencer-project/spencer_people_tracking" -> "OpenPTrack/open_ptrack"
"spencer-project/spencer_people_tracking" -> "paulbovbel/frontier_exploration"
"spencer-project/spencer_people_tracking" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"spencer-project/spencer_people_tracking" -> "onlytailei/gym_ped_sim" ["e"=1]
"spencer-project/spencer_people_tracking" -> "koide3/monocular_person_following"
"spencer-project/spencer_people_tracking" -> "vita-epfl/CrowdNav" ["e"=1]
"SteveRabin/JPSPlusWithGoalBounding" -> "fgenesis/tinypile" ["e"=1]
"Jiaoyang-Li/EECBS" -> "Jiaoyang-Li/RHCR"
"Jiaoyang-Li/EECBS" -> "Jiaoyang-Li/CBSH2-RTC"
"Jiaoyang-Li/EECBS" -> "Jiaoyang-Li/MAPF-LNS2"
"Jiaoyang-Li/EECBS" -> "Jiaoyang-Li/MAPF-LNS"
"Jiaoyang-Li/EECBS" -> "Jiaoyang-Li/PBS"
"Jiaoyang-Li/EECBS" -> "Kei18/pibt2"
"Jiaoyang-Li/EECBS" -> "PathPlanning/Continuous-CBS"
"Jiaoyang-Li/EECBS" -> "Kei18/mapf-visualizer"
"Jiaoyang-Li/EECBS" -> "Kei18/lacam"
"Jiaoyang-Li/EECBS" -> "StevenLyt/mapf-visualizer"
"Jiaoyang-Li/EECBS" -> "Jiaoyang-Li/CBSH2"
"Jiaoyang-Li/EECBS" -> "DiligentPanda/MAPF-LRR2023"
"Jiaoyang-Li/EECBS" -> "Kei18/mapf-IR"
"Jiaoyang-Li/EECBS" -> "Kei18/pibt"
"Jiaoyang-Li/EECBS" -> "Kei18/lacam3"
"MajidMoghadam2006/RL-frenet-trajectory-planning-in-CARLA" -> "MajidMoghadam2006/frenet-trajectory-planning-framework" ["e"=1]
"MajidMoghadam2006/RL-frenet-trajectory-planning-in-CARLA" -> "stoneman404/motion-planning-with-carla" ["e"=1]
"robo-friends/m-explore-ros2" -> "gingineer95/Multi-Robot-Exploration-and-Map-Merging" ["e"=1]
"AaronMR/Learning_ROS_for_Robotics_Programming_2nd_edition" -> "osrf/car_demo" ["e"=1]
"linyicheng1/hybrid_astar" -> "tanujthakkar/Voronoi-Based-Hybrid-Astar"
"linyicheng1/hybrid_astar" -> "zwkcoding/astar_planner"
"linyicheng1/hybrid_astar" -> "YoungPeter/HAStar_ParkingPlanner"
"linyicheng1/hybrid_astar" -> "YikangZhang1641/HybridAStarSearch"
"linyicheng1/hybrid_astar" -> "xpharry/hybrid-astar-planning"
"rst-tu-dortmund/teb_local_planner" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"rst-tu-dortmund/teb_local_planner" -> "karlkurzer/path_planner" ["e"=1]
"rst-tu-dortmund/teb_local_planner" -> "rst-tu-dortmund/teb_local_planner_tutorials" ["e"=1]
"rst-tu-dortmund/teb_local_planner" -> "teddyluo/hybrid-a-star-annotation" ["e"=1]
"rst-tu-dortmund/teb_local_planner" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"rst-tu-dortmund/teb_local_planner" -> "locusrobotics/robot_navigation" ["e"=1]
"rst-tu-dortmund/teb_local_planner" -> "amslabtech/dwa_planner" ["e"=1]
"rst-tu-dortmund/teb_local_planner" -> "nobleo/full_coverage_path_planner" ["e"=1]
"rst-tu-dortmund/teb_local_planner" -> "ros-planning/navigation_experimental" ["e"=1]
"marmotlab/PRIMAL2" -> "gsartoretti/PRIMAL"
"marmotlab/PRIMAL2" -> "marmotlab/SCRIMP"
"marmotlab/PRIMAL2" -> "Jiaoyang-Li/RHCR"
"marmotlab/PRIMAL2" -> "mail-ecnu/PICO"
"marmotlab/PRIMAL2" -> "ZiyuanMa/DHC"
"marmotlab/PRIMAL2" -> "Cognitive-AI-Systems/when-to-switch" ["e"=1]
"marmotlab/PRIMAL2" -> "proroklab/magat_pathplanning"
"marmotlab/PRIMAL2" -> "Tushar-ml/G2RL-Path-Planning"
"marmotlab/PRIMAL2" -> "Jiaoyang-Li/EECBS"
"marmotlab/PRIMAL2" -> "GavinPHR/Multi-Agent-Path-Finding"
"marmotlab/PRIMAL2" -> "proroklab/gnn_pathplanning"
"marmotlab/PRIMAL2" -> "Kei18/pibt2"
"marmotlab/PRIMAL2" -> "Cognitive-AI-Systems/pogema" ["e"=1]
"marmotlab/PRIMAL2" -> "Kei18/mapf-IR"
"surya9teja/3D-Artificial-Potential-Field" -> "Meshaal-Mouawad/Improvement-Potential-Field-Algorithm"
"surya9teja/3D-Artificial-Potential-Field" -> "parisrigakis/PathPlanningAPF"
"surya9teja/3D-Artificial-Potential-Field" -> "jdanielhoyos/ArtificialPotentialMatlab"
"xiihoo/Books_Robot_SLAM_Navigation" -> "xiangli0608/Creating-2D-laser-slam-from-scratch" ["e"=1]
"Pandas-Team/Automatic-Parking" -> "wenqing-2021/AutomatedValetParking"
"Pandas-Team/Automatic-Parking" -> "zhaokun506/parking"
"Pandas-Team/Automatic-Parking" -> "zhm-real/MotionPlanning"
"Pandas-Team/Automatic-Parking" -> "Pandas-Team/Autonomous-Vehicle-Environment-Perception"
"Pandas-Team/Automatic-Parking" -> "LiJiangnanBit/path_optimizer"
"Pandas-Team/Automatic-Parking" -> "Rohith-K/Autonomous-Parallel-Parking-Car-like-Robot-Gazebo-ROS" ["e"=1]
"Pandas-Team/Automatic-Parking" -> "RajPShinde/Hybrid-A-Star"
"Pandas-Team/Automatic-Parking" -> "XiaojingGeorgeZhang/H-OBCA"
"Pandas-Team/Automatic-Parking" -> "leoll2/Autoparking" ["e"=1]
"Pandas-Team/Automatic-Parking" -> "YoungPeter/HAStar_ParkingPlanner"
"Pandas-Team/Automatic-Parking" -> "kosuke55/geometric-parallel-parking"
"Pandas-Team/Automatic-Parking" -> "HybridRobotics/car-racing" ["e"=1]
"Pandas-Team/Automatic-Parking" -> "karlkurzer/path_planner"
"Pandas-Team/Automatic-Parking" -> "Geonhee-LEE/mpc_ros"
"Pandas-Team/Automatic-Parking" -> "ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver"
"nalin1096/path_planning" -> "ayushgaud/path_planning" ["e"=1]
"nalin1096/path_planning" -> "jeshoward/turtlebot_rrt"
"nalin1096/path_planning" -> "sourishg/rrt-simulator"
"nalin1096/path_planning" -> "hasauino/rrt_exploration"
"nalin1096/path_planning" -> "RoboJackets/rrt"
"nalin1096/path_planning" -> "rishabh1b/RealTimePathPlanning"
"nalin1096/path_planning" -> "hasauino/rrt_exploration_tutorials"
"nalin1096/path_planning" -> "srl-freiburg/srl_global_planner"
"nalin1096/path_planning" -> "wrld/ROS_RRT"
"nalin1096/path_planning" -> "marinaKollmitz/lattice_planner"
"nalin1096/path_planning" -> "Mooophy/Path-Planning"
"nalin1096/path_planning" -> "LazyFalcon/D_star_PathPlanning"
"nalin1096/path_planning" -> "jnez71/lqRRT"
"nalin1096/path_planning" -> "gkouros/rsband_local_planner"
"nalin1096/path_planning" -> "vss2sn/path_planning"
"ros-perception/pointcloud_to_laserscan" -> "ros-perception/depthimage_to_laserscan" ["e"=1]
"ros-perception/pointcloud_to_laserscan" -> "CCNYRoboticsLab/scan_tools" ["e"=1]
"ros-perception/pointcloud_to_laserscan" -> "ros-planning/navigation_experimental" ["e"=1]
"ros-perception/pointcloud_to_laserscan" -> "rst-tu-dortmund/teb_local_planner_tutorials" ["e"=1]
"ros-perception/pointcloud_to_laserscan" -> "kam3k/laser_line_extraction" ["e"=1]
"nobleo/path_tracking_pid" -> "nobleo/tracking_pid"
"nobleo/path_tracking_pid" -> "gkouros/rsband_local_planner"
"sybrenstuvel/Python-RVO2" -> "tud-amr/go-mpc" ["e"=1]
"guyuehome/guyueclass" -> "teamo1996/Motion-plan" ["e"=1]
"guyuehome/guyueclass" -> "KailinTong/Motion-Planning-for-Mobile-Robots" ["e"=1]
"guyuehome/guyueclass" -> "czhherry/self-driving-vehicle-101" ["e"=1]
"Geonhee-LEE/mpc_ros_description" -> "Forrest-Z/mpc_waypoint_tracking_controller"
"Sarrasor/RoboticManipulators" -> "YashBansod/Robotics-Planning-Dynamics-and-Control"
"cuntou0906/Route-Planning" -> "herryCccc/Mobile-robot-path-planning" ["e"=1]
"mikolalysenko/l1-path-finder" -> "mikolalysenko/box-intersect" ["e"=1]
"mikolalysenko/l1-path-finder" -> "Eurecat/astar-gridmap-2d"
"mikolalysenko/l1-path-finder" -> "quantumelixir/pathfinding"
"reiniscimurs/GDAE" -> "efc-robot/Explore-Bench" ["e"=1]
"ttk592/spline" -> "bgrimstad/splinter"
"ttk592/spline" -> "msteinbeck/tinyspline" ["e"=1]
"ttk592/spline" -> "karlkurzer/path_planner"
"ttk592/spline" -> "LiJiangnanBit/path_optimizer"
"ttk592/spline" -> "ejmahler/SplineLibrary"
"ttk592/spline" -> "HKUST-Aerial-Robotics/EPSILON"
"ttk592/spline" -> "NCAR/bspline"
"ttk592/spline" -> "flexible-collision-library/fcl" ["e"=1]
"ttk592/spline" -> "teddyluo/hybrid-a-star-annotation"
"ttk592/spline" -> "pantor/ruckig" ["e"=1]
"ttk592/spline" -> "LiJiangnanBit/path_optimizer_2"
"ttk592/spline" -> "ZJU-FAST-Lab/Dftpav"
"ttk592/spline" -> "PickNikRobotics/rviz_visual_tools" ["e"=1]
"ttk592/spline" -> "hbanzhaf/steering_functions"
"ttk592/spline" -> "naturerobots/move_base_flex" ["e"=1]
"JuliaPOMDP/POMDPs.jl" -> "pemami4911/POMDPy"
"JuliaPOMDP/POMDPs.jl" -> "AdaCompNUS/despot"
"JuliaPOMDP/POMDPs.jl" -> "JuliaReinforcementLearning/ReinforcementLearning.jl" ["e"=1]
"JuliaPOMDP/POMDPs.jl" -> "JuliaAcademy/Decision-Making-Under-Uncertainty"
"JuliaPOMDP/POMDPs.jl" -> "h2r/pomdp-py"
"JuliaPOMDP/POMDPs.jl" -> "Svalorzen/AI-Toolbox"
"JuliaPOMDP/POMDPs.jl" -> "LuxDL/Lux.jl" ["e"=1]
"JuliaPOMDP/POMDPs.jl" -> "JuliaPOMDP/DeepQLearning.jl"
"JuliaPOMDP/POMDPs.jl" -> "JuliaAI/MLJ.jl" ["e"=1]
"JuliaPOMDP/POMDPs.jl" -> "JuliaPOMDP/MCTS.jl"
"JuliaPOMDP/POMDPs.jl" -> "JuliaNLSolvers/Optim.jl" ["e"=1]
"JuliaPOMDP/POMDPs.jl" -> "TuringLang/Turing.jl" ["e"=1]
"JuliaPOMDP/POMDPs.jl" -> "cscherrer/Soss.jl" ["e"=1]
"JuliaPOMDP/POMDPs.jl" -> "AdaCompNUS/sarsop"
"JuliaPOMDP/POMDPs.jl" -> "JuliaCollections/DataStructures.jl" ["e"=1]
"MADPToolbox/MADP" -> "laurimi/npgi"
"dengpw/hybrid_astar_planner" -> "hubery05/Astar_Path_Planner"
"dengpw/hybrid_astar_planner" -> "nkuwenjian/voronoi_planner"
"dengpw/hybrid_astar_planner" -> "Grizi-ju/better_astar_global_planner"
"dengpw/hybrid_astar_planner" -> "ppap36/ROS-Nav-Platform"
"dengpw/hybrid_astar_planner" -> "tanujthakkar/Voronoi-Based-Hybrid-Astar"
"libing64/slam2d" -> "libing64/lidar_pose_estimator"
"libing64/slam2d" -> "abougouffa/ndtpso_slam"
"libing64/slam2d" -> "softdream/Slam-Project-Of-MyOwn"
"JonasVervloet/RL-Coverage-Planner" -> "reso1/MSTC_Star"
"JonasVervloet/RL-Coverage-Planner" -> "irvingvasquez/ocpp"
"JonasVervloet/RL-Coverage-Planner" -> "oelin/darpy"
"JonasVervloet/RL-Coverage-Planner" -> "rodriguesrenato/coverage-path-planning"
"JonasVervloet/RL-Coverage-Planner" -> "wangweike123/Full-coverage-path-planning-based-on-spanningtree-and-A-star"
"JonasVervloet/RL-Coverage-Planner" -> "18alantom/CoveragePathPlanning"
"JonasVervloet/RL-Coverage-Planner" -> "h-brenne/cppRL" ["e"=1]
"JonasVervloet/RL-Coverage-Planner" -> "arvijj/rl-cpp"
"jchengai/gpir" -> "SS47816/fiss_planner"
"jchengai/gpir" -> "ZJU-FAST-Lab/Dftpav"
"jchengai/gpir" -> "ChenYingbing/IPM-Planner"
"jchengai/gpir" -> "libai1943/CartesianPlanner"
"jchengai/gpir" -> "jchengai/planTF" ["e"=1]
"jchengai/gpir" -> "MCZhi/DIPP" ["e"=1]
"jchengai/gpir" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"jchengai/gpir" -> "HKUST-Aerial-Robotics/EPSILON"
"jchengai/gpir" -> "HKUST-Aerial-Robotics/eudm_planner"
"jchengai/gpir" -> "chenyx09/belief-planning" ["e"=1]
"jchengai/gpir" -> "MCZhi/DTPP" ["e"=1]
"jchengai/gpir" -> "HKUST-Aerial-Robotics/SIMPL" ["e"=1]
"husky/husky" -> "nickcharron/waypoint_nav" ["e"=1]
"husky/husky" -> "paulbovbel/frontier_exploration" ["e"=1]
"husky/husky" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"husky/husky" -> "locusrobotics/robot_navigation" ["e"=1]
"husky/husky" -> "at-wat/neonavigation" ["e"=1]
"Mooophy/Compression" -> "bysz71/DataStructureAndAlgorithmsInCSharp"
"Mooophy/Compression" -> "bysz71/Simple-ftp-server"
"jhan15/dubins_path_planning" -> "RajPShinde/Hybrid-A-Star"
"jhan15/dubins_path_planning" -> "FelicienC/RRT-Dubins"
"jhan15/dubins_path_planning" -> "dawnjeanh/motionplanning"
"szc19990412/Path-Planning" -> "HobbySingh/Path-Planning-Algorithms"
"szc19990412/Path-Planning" -> "xuedidi/path_planning"
"szc19990412/Path-Planning" -> "Say-Hello2y/Path-planning-for-robots"
"szc19990412/Path-Planning" -> "herryCccc/Mobile-robot-path-planning"
"ZJU-FAST-Lab/GCOPTER" -> "ZJU-FAST-Lab/Dftpav" ["e"=1]
"softdream/Slam-Project-Of-MyOwn" -> "smilefacehh/Karto-Note"
"softdream/Slam-Project-Of-MyOwn" -> "KOTOKORURU/odometry_calibration"
"mit-acl/mader" -> "qwerty35/swarm_simulator" ["e"=1]
"mit-acl/mader" -> "LIJUNCHENG001/multi_robot_traj_planner" ["e"=1]
"mit-acl/mader" -> "APRIL-ZJU/CL-CBS" ["e"=1]
"hildensia/mcts" -> "haroldsultan/MCTS"
"hildensia/mcts" -> "jbradberry/mcts"
"hildensia/mcts" -> "pbsinclair42/MCTS"
"ipa-rmb/autopnp" -> "ipa320/ipa_coverage_planning"
"ipa-rmb/autopnp" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"ipa-rmb/autopnp" -> "Greenzie/boustrophedon_planner"
"ipa-rmb/autopnp" -> "hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS"
"ipa-rmb/autopnp" -> "RicheyHuang/CoveragePlanner"
"ipa-rmb/autopnp" -> "RJJxp/CoveragePlanning"
"ipa-rmb/autopnp" -> "peterWon/CleaningRobot"
"ipa-rmb/autopnp" -> "nobleo/full_coverage_path_planner"
"AdaCompNUS/despot" -> "AdaCompNUS/hyp-despot"
"AdaCompNUS/despot" -> "AdaCompNUS/sarsop"
"AdaCompNUS/despot" -> "AdaCompNUS/despot_tutorials"
"AdaCompNUS/despot" -> "pemami4911/POMDPy"
"AdaCompNUS/despot" -> "RDLLab/oppt"
"AdaCompNUS/despot" -> "HKUST-Aerial-Robotics/eudm_planner"
"AdaCompNUS/despot" -> "rdl-algorithm/tapir"
"AdaCompNUS/despot" -> "HKUST-Aerial-Robotics/EPSILON"
"AdaCompNUS/despot" -> "JuliaPOMDP/POMDPs.jl"
"AdaCompNUS/despot" -> "AdaCompNUS/context-pomdp"
"AdaCompNUS/despot" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"AdaCompNUS/despot" -> "namoshizun/PyPOMDP"
"AdaCompNUS/despot" -> "h2r/pomdp-py"
"AdaCompNUS/despot" -> "Svalorzen/AI-Toolbox"
"AdaCompNUS/despot" -> "chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving"
"DarrenYing/MultiAgentPathFinding" -> "WangHanfu/Multi-agent-Path-Finding-in-Warehouse" ["e"=1]
"marinaKollmitz/lattice_planner" -> "marinaKollmitz/human_aware_navigation"
"marinaKollmitz/lattice_planner" -> "amslabtech/state_lattice_planner"
"marinaKollmitz/lattice_planner" -> "larics/lattice_planner"
"marinaKollmitz/lattice_planner" -> "gkouros/rsband_local_planner"
"marinaKollmitz/lattice_planner" -> "ros-planning/navigation_experimental"
"marinaKollmitz/lattice_planner" -> "srl-freiburg/srl_global_planner"
"marinaKollmitz/lattice_planner" -> "yangmingustb/Local-Planner"
"marinaKollmitz/lattice_planner" -> "cogsys-tuebingen/gerona"
"marinaKollmitz/lattice_planner" -> "tejus-gupta/hybrid-astar-planner"
"srl-freiburg/srl_global_planner" -> "srl-freiburg/srl_rhcf_planner"
"srl-freiburg/srl_global_planner" -> "frontw/voronoi_planner"
"srl-freiburg/srl_global_planner" -> "gkouros/rsband_local_planner"
"srl-freiburg/srl_global_planner" -> "rafaelbarretorb/rrt_star_global_planner"
"srl-freiburg/srl_global_planner" -> "asr-ros/asr_ftc_local_planner"
"srl-freiburg/srl_global_planner" -> "marinaKollmitz/human_aware_navigation"
"srl-freiburg/srl_global_planner" -> "longjianquan/add--planner"
"LIJUNCHENG001/multi_robot_traj_planner" -> "APRIL-ZJU/CL-CBS"
"LIJUNCHENG001/multi_robot_traj_planner" -> "qwerty35/swarm_simulator"
"LIJUNCHENG001/multi_robot_traj_planner" -> "qwerty35/lsc_planner"
"LIJUNCHENG001/multi_robot_traj_planner" -> "ZJU-FAST-Lab/Car-like-Robotic-swarm"
"LIJUNCHENG001/multi_robot_traj_planner" -> "whoenig/libMultiRobotPlanning"
"LIJUNCHENG001/multi_robot_traj_planner" -> "PathPlanning/Continuous-CBS"
"LIJUNCHENG001/multi_robot_traj_planner" -> "carlosluis/online_dmpc"
"LIJUNCHENG001/multi_robot_traj_planner" -> "speedzjy/mapf_ros"
"LIJUNCHENG001/multi_robot_traj_planner" -> "tuw-robotics/tuw_multi_robot"
"LIJUNCHENG001/multi_robot_traj_planner" -> "whoenig/multi-robot-trajectory-planning"
"LIJUNCHENG001/multi_robot_traj_planner" -> "mit-acl/mader" ["e"=1]
"LIJUNCHENG001/multi_robot_traj_planner" -> "ZJU-FAST-Lab/Dftpav"
"LIJUNCHENG001/multi_robot_traj_planner" -> "TixiaoShan/lexicographic_planning"
"LIJUNCHENG001/multi_robot_traj_planner" -> "tud-amr/amr-lmpcc"
"LIJUNCHENG001/multi_robot_traj_planner" -> "rst-tu-dortmund/mpc_local_planner"
"VisualComputingInstitute/2D_lidar_person_detection" -> "VisualComputingInstitute/DR-SPAAM-Detector"
"VisualComputingInstitute/2D_lidar_person_detection" -> "angusleigh/leg_tracker"
"VisualComputingInstitute/2D_lidar_person_detection" -> "TempleRAIL/pedsim_ros_with_gazebo" ["e"=1]
"VisualComputingInstitute/2D_lidar_person_detection" -> "robotics-upo/gazebo_sfm_plugin" ["e"=1]
"VisualComputingInstitute/2D_lidar_person_detection" -> "wg-perception/people"
"VisualComputingInstitute/2D_lidar_person_detection" -> "kostaskonkk/datmo" ["e"=1]
"VisualComputingInstitute/2D_lidar_person_detection" -> "LucasWEIchen/lidar_tracking"
"VisualComputingInstitute/2D_lidar_person_detection" -> "rezanatha/object-detector-fusion"
"VisualComputingInstitute/2D_lidar_person_detection" -> "Shuijing725/CrowdNav_Sim2Real_Turtlebot" ["e"=1]
"VisualComputingInstitute/2D_lidar_person_detection" -> "onlytailei/gym_ped_sim" ["e"=1]
"VisualComputingInstitute/2D_lidar_person_detection" -> "Shuijing725/awesome-robot-social-navigation" ["e"=1]
"VisualComputingInstitute/2D_lidar_person_detection" -> "marinaKollmitz/human_aware_navigation"
"VisualComputingInstitute/2D_lidar_person_detection" -> "srl-freiburg/pedsim_ros" ["e"=1]
"JuliaPOMDP/MCTS.jl" -> "JuliaPOMDP/BasicPOMCP.jl"
"JuliaPOMDP/MCTS.jl" -> "JuliaPOMDP/RLInterface.jl"
"JuliaPOMDP/MCTS.jl" -> "JuliaPOMDP/POMDPModels.jl"
"JuliaPOMDP/MCTS.jl" -> "JuliaPOMDP/ParticleFilters.jl"
"JuliaPOMDP/MCTS.jl" -> "JuliaPOMDP/DiscreteValueIteration.jl"
"jhu-asco/dsl_gridsearch" -> "mds1/path-planning"
"bysz71/Simple-ftp-server" -> "bysz71/DataStructureAndAlgorithmsInCSharp"
"bysz71/DataStructureAndAlgorithmsInCSharp" -> "bysz71/Simple-ftp-server"
"bysz71/DataStructureAndAlgorithmsInCSharp" -> "Mooophy/Compression"
"Jiaoyang-Li/CBSH2-RTC" -> "Jiaoyang-Li/CBSH2"
"Jiaoyang-Li/CBSH2-RTC" -> "Jiaoyang-Li/EECBS"
"Jiaoyang-Li/CBSH2-RTC" -> "Jiaoyang-Li/MAPF-LNS"
"Jiaoyang-Li/CBSH2-RTC" -> "Jiaoyang-Li/RHCR"
"Jiaoyang-Li/CBSH2-RTC" -> "PathPlanning/Continuous-CBS"
"Jiaoyang-Li/CBSH2-RTC" -> "Kei18/pibt2"
"Jiaoyang-Li/CBSH2-RTC" -> "Kei18/lacam"
"Jiaoyang-Li/CBSH2-RTC" -> "enginbaglayici/ConflictBasedSearch"
"Jiaoyang-Li/CBSH2-RTC" -> "StevenLyt/mapf-visualizer"
"Jiaoyang-Li/CBSH2-RTC" -> "Jiaoyang-Li/MAPF-LNS2"
"Jiaoyang-Li/CBSH2-RTC" -> "GavinPHR/Multi-Agent-Path-Finding"
"Jiaoyang-Li/CBSH2-RTC" -> "ed-lam/bcp-mapf"
"Jiaoyang-Li/CBSH2-RTC" -> "APRIL-ZJU/CL-CBS"
"Jiaoyang-Li/CBSH2-RTC" -> "polinko13/CBS"
"Jiaoyang-Li/CBSH2-RTC" -> "Jiaoyang-Li/PBS"
"ntnu-arl/DubinsAirplane" -> "dagoodma/dppl_code"
"marinaKollmitz/human_aware_navigation" -> "marinaKollmitz/lattice_planner"
"marinaKollmitz/human_aware_navigation" -> "dmr-goncalves/HumanAwareRobotNavigation"
"marinaKollmitz/human_aware_navigation" -> "onlytailei/gym_ped_sim" ["e"=1]
"chenzhike110/MAPF-solver" -> "chenzhike110/yolov4_siamfcpp_multitracking"
"chenzhike110/MAPF-solver" -> "chenzhike110/SSL-RL"
"chenzhike110/MAPF-solver" -> "chenzhike110/Arm-Robotics-RL"
"chenzhike110/MAPF-solver" -> "chenzhike110/Fast-tracking"
"chenzhike110/MAPF-solver" -> "nicofretti/MAPF"
"chenzhike110/MAPF-solver" -> "msaudulhassan/mapf"
"chenzhike110/MAPF-solver" -> "mchtalkn/MAPF_CBS"
"osrf/docker_images" -> "osrf/car_demo" ["e"=1]
"miccol/Behavior-Tree" -> "kirilcvetkov92/Path-planning" ["e"=1]
"Kei18/pibt2" -> "Jiaoyang-Li/MAPF-LNS"
"Kei18/pibt2" -> "Kei18/lacam"
"Kei18/pibt2" -> "Kei18/lacam3"
"Kei18/pibt2" -> "Jiaoyang-Li/EECBS"
"Kei18/pibt2" -> "Jiaoyang-Li/MAPF-LNS2"
"Kei18/pibt2" -> "Kei18/mapf-visualizer"
"Kei18/pibt2" -> "Jiaoyang-Li/RHCR"
"Kei18/pibt2" -> "Kei18/pypibt"
"tanujthakkar/Voronoi-Based-Hybrid-Astar" -> "linyicheng1/hybrid_astar"
"tanujthakkar/Voronoi-Based-Hybrid-Astar" -> "TixiaoShan/lexicographic_planning"
"pemami4911/POMDPy" -> "namoshizun/PyPOMDP"
"pemami4911/POMDPy" -> "h2r/pomdp-py"
"pemami4911/POMDPy" -> "AdaCompNUS/despot"
"pemami4911/POMDPy" -> "Svalorzen/AI-Toolbox"
"pemami4911/POMDPy" -> "JuliaPOMDP/POMDPs.jl"
"pemami4911/POMDPy" -> "AdaCompNUS/sarsop"
"pemami4911/POMDPy" -> "GeorgePik/POMCP"
"pemami4911/POMDPy" -> "catohaste/POMDP"
"pemami4911/POMDPy" -> "mbforbes/py-pomdp"
"pemami4911/POMDPy" -> "malayandi/Tiger-Problem-POMDP"
"pemami4911/POMDPy" -> "MADPToolbox/MADP"
"pemami4911/POMDPy" -> "AdaCompNUS/hyp-despot"
"pemami4911/POMDPy" -> "rmoehn/piglet_pbvi"
"pemami4911/POMDPy" -> "sawcordwell/pymdptoolbox"
"NCAR/bspline" -> "jbaayen/fitpackpp"
"NCAR/bspline" -> "glentner/CubicSplineLib"
"estshorter/dwa" -> "DeepDuke/DWA-Simulation"
"chenzhike110/Arm-Robotics-RL" -> "chenzhike110/SSL-RL"
"chenzhike110/Arm-Robotics-RL" -> "chenzhike110/Fast-tracking"
"chenzhike110/Arm-Robotics-RL" -> "chenzhike110/yolov4_siamfcpp_multitracking"
"tud-amr/go-mpc" -> "tud-amr/mrca-mav"
"mit-acl/panther" -> "tud-amr/mrca-mav" ["e"=1]
"Forrest-Z/mpc_waypoint_tracking_controller" -> "Geonhee-LEE/mpc_ros_description"
"Forrest-Z/mpc_waypoint_tracking_controller" -> "anoulis/mpc_local_planner_mb"
"RobotnikAutomation/agvs_sim" -> "RobotnikAutomation/agvs"
"AytacKahveci/multirobot_coverage" -> "reso1/MSTC_Star"
"JianmingTONG/Artificial_Potential_Field_MultiTarget" -> "YashTrikannad/apf_reactive_planning"
"ZiyuanMa/DHC" -> "ZiyuanMa/DCC"
"ZiyuanMa/DHC" -> "marmotlab/SCRIMP"
"ZiyuanMa/DHC" -> "Qiushi-Lin/SACHA"
"ZiyuanMa/DHC" -> "ai4co/eph-mapf"
"ZiyuanMa/DHC" -> "acforvs/multi-agent-pathfinding"
"ZiyuanMa/DHC" -> "acforvs/dhc-robust-mapf"
"reso1/MSTC_Star" -> "AytacKahveci/multirobot_coverage"
"reso1/MSTC_Star" -> "oelin/darpy"
"Pandas-Team/Autonomous-Vehicle-Environment-Perception" -> "Pandas-Team/Ad-Recommender-System"
"savvas-ap/mCPP-optimized-DARP" -> "savvas-ap/cpp-simulated-evaluations"
"savvas-ap/mCPP-optimized-DARP" -> "emmarapt/RealWorld2AirSim-DARP"
"savvas-ap/mCPP-optimized-DARP" -> "alice-st/DARP"
"Lodz97/Multi-Agent_Pickup_and_Delivery" -> "Pieter-Cawood/M-TA-Prioritized-MAPD"
"nobodyczcz/MCA-RMCA" -> "Pieter-Cawood/M-TA-Prioritized-MAPD"
"JuliaPOMDP/SARSOP.jl" -> "JuliaPOMDP/POMDPSolve.jl"
"chenzhike110/yolov4_siamfcpp_multitracking" -> "chenzhike110/Fast-tracking"
"chenzhike110/yolov4_siamfcpp_multitracking" -> "chenzhike110/SSL-RL"
"chenzhike110/yolov4_siamfcpp_multitracking" -> "chenzhike110/Arm-Robotics-RL"
"chenzhike110/SSL-RL" -> "chenzhike110/Arm-Robotics-RL"
"chenzhike110/SSL-RL" -> "chenzhike110/Fast-tracking"
"chenzhike110/SSL-RL" -> "chenzhike110/yolov4_siamfcpp_multitracking"
"chenzhike110/Fast-tracking" -> "chenzhike110/SSL-RL"
"chenzhike110/Fast-tracking" -> "chenzhike110/yolov4_siamfcpp_multitracking"
"chenzhike110/Fast-tracking" -> "chenzhike110/Arm-Robotics-RL"
"adamslab-ub/SCoPP" -> "YXZhai97/Area-Coverage-Path-Planning"
"JuliaPOMDP/POMDPModels.jl" -> "JuliaPOMDP/QMDP.jl"
"JuliaPOMDP/POMDPModels.jl" -> "JuliaPOMDP/RLInterface.jl"
"JuliaPOMDP/POMDPModels.jl" -> "JuliaPOMDP/DiscreteValueIteration.jl"
"laurimi/multiagent-prediction-reward" -> "laurimi/pydpomdp"
"JuliaPOMDP/QMDP.jl" -> "JuliaPOMDP/POMDPSolve.jl"
"NEFTeam/Traffic-Law-Enforcement" -> "Pandas-Team/Ad-Recommender-System"
"kiloreux/awesome-robotics" -> "onlytailei/CppRobotics" ["e"=1]
"zm0612/Minimum-Snap" -> "KailinTong/Motion-Planning-for-Mobile-Robots" ["e"=1]
"zm0612/Minimum-Snap" -> "zm0612/Hybrid_A_Star" ["e"=1]
"ZJU-FAST-Lab/EGO-Planner-v2" -> "ZJU-FAST-Lab/Dftpav" ["e"=1]
"hikashi/TM-RRT_exploration" -> "hikashi/TM-RRT_exploration_Simulation"
"hikashi/TM-RRT_exploration_Simulation" -> "hikashi/TM-RRT_exploration"
"uhub/awesome-matlab" -> "AtsushiSakai/MATLABRobotics" ["e"=1]
"idreesshaikh/Autonomous-Driving-in-Carla-using-Deep-Reinforcement-Learning" -> "L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" ["e"=1]
"ArekSredzki/dstar-lite" -> "azampagl/robotics-d-star-lite"
"ArekSredzki/dstar-lite" -> "palmieri/srl_dstar_lite"
"ArekSredzki/dstar-lite" -> "mdeyo/d-star-lite"
"ArekSredzki/dstar-lite" -> "mds1/path-planning"
"praveen-palanisamy/multiple-object-tracking-lidar" -> "tysik/obstacle_detector" ["e"=1]
"RajPShinde/Hybrid-A-Star" -> "ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning"
"RajPShinde/Hybrid-A-Star" -> "zhm-real/CurvesGenerator"
"RajPShinde/Hybrid-A-Star" -> "jhan15/dubins_path_planning"
"RajPShinde/Hybrid-A-Star" -> "jvirdi2/A_star_and_Hybrid_A_star"
"haroldsultan/MCTS" -> "hildensia/mcts"
"haroldsultan/MCTS" -> "jbradberry/mcts"
"haroldsultan/MCTS" -> "pbsinclair42/MCTS"
"haroldsultan/MCTS" -> "int8/monte-carlo-tree-search"
"haroldsultan/MCTS" -> "tobegit3hub/ml_implementation"
"haroldsultan/MCTS" -> "saschaschramm/MonteCarloTreeSearch"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "VincentWong3/automated-driving-control"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "VincentWong3/notes"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "HKUST-Aerial-Robotics/EPSILON"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "VincentWong3/apollo"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "czjaixuexi/carla_ros_bridge_pnc"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "wanghuohuo0716/hybrid_A_star"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "zm0612/Hybrid_A_Star"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "gxf1002/ShenLanAcademy-PlanningControl"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "pparmesh/Constrained_ILQR"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "teddyluo/hybrid-a-star-annotation"
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "leoking99-BIT/MPC-for-Self-driving-Vehicles" ["e"=1]
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" -> "CHH3213/chhRobotics_CPP"
"Peace1997/Voronoi_Based_Multi_Robot_Collaborate_Exploration_Unknow_Enviroment" -> "hanlinniu/turtlebot3_ddpg_collision_avoidance" ["e"=1]
"Peace1997/Voronoi_Based_Multi_Robot_Collaborate_Exploration_Unknow_Enviroment" -> "Lee-JaeWon/Frontier-Based-Multi-Robot-Exploration"
"Peace1997/Voronoi_Based_Multi_Robot_Collaborate_Exploration_Unknow_Enviroment" -> "efc-robot/TopoExplore"
"Peace1997/Voronoi_Based_Multi_Robot_Collaborate_Exploration_Unknow_Enviroment" -> "perseus784/Multi-Robot_Exploration"
"Peace1997/Voronoi_Based_Multi_Robot_Collaborate_Exploration_Unknow_Enviroment" -> "gingineer95/Multi-Robot-Exploration-and-Map-Merging"
"hikashi/multi-robot-rrt-exploration-noetic" -> "hikashi/multi-robot-rrt-exploration-melodic"
"hikashi/multi-robot-rrt-exploration-noetic" -> "gingineer95/Multi-Robot-Exploration-and-Map-Merging"
"hikashi/multi-robot-rrt-exploration-noetic" -> "herolab-uga/ROS-SEAL"
"hikashi/multi-robot-rrt-exploration-noetic" -> "Lee-JaeWon/Frontier-Based-Multi-Robot-Exploration"
"hikashi/multi-robot-rrt-exploration-noetic" -> "hikashi/TM-RRT_exploration"
"hikashi/multi-robot-rrt-exploration-noetic" -> "hikashi/TM-RRT_exploration_Simulation"
"hikashi/multi-robot-rrt-exploration-noetic" -> "Peace1997/Voronoi_Based_Multi_Robot_Collaborate_Exploration_Unknow_Enviroment"
"Grizi-ju/Astar_JPS_Pathplanning_in_ROS" -> "Grizi-ju/better_astar_global_planner"
"Grizi-ju/better_astar_global_planner" -> "dengpw/hybrid_astar_planner"
"Grizi-ju/better_astar_global_planner" -> "Grizi-ju/ros_program"
"Grizi-ju/better_astar_global_planner" -> "Grizi-ju/Astar_JPS_Pathplanning_in_ROS"
"Grizi-ju/better_astar_global_planner" -> "hubery05/A-start-with-B-spline"
"pablogsal/python-horror-show" -> "pablogsal/a_star_algorithm"
"CHH3213/chhRobotics" -> "CHH3213/chhRobotics_CPP"
"CHH3213/chhRobotics" -> "CHH3213/Books"
"CHH3213/chhRobotics" -> "zhm-real/MotionPlanning"
"CHH3213/chhRobotics" -> "teddyluo/hybrid-a-star-annotation"
"CHH3213/chhRobotics" -> "ai-winter/python_motion_planning"
"CHH3213/chhRobotics" -> "gxf1002/ShenLanAcademy-PlanningControl"
"CHH3213/chhRobotics" -> "zm0612/Hybrid_A_Star"
"CHH3213/chhRobotics" -> "ai-winter/ros_motion_planning" ["e"=1]
"CHH3213/chhRobotics" -> "ProgramTraveler/Road-To-Autonomous-Driving"
"CHH3213/chhRobotics" -> "karlkurzer/path_planner"
"CHH3213/chhRobotics" -> "LiJiangnanBit/path_optimizer_ilqr"
"CHH3213/chhRobotics" -> "matssteinweg/Multi-Purpose-MPC" ["e"=1]
"CHH3213/chhRobotics" -> "Geonhee-LEE/mpc_ros"
"CHH3213/chhRobotics" -> "GoGoGo13579/Planning-and-Control-based-on-Carla-and-ROS2"
"CHH3213/chhRobotics" -> "HKUST-Aerial-Robotics/EPSILON"
"MedlarTea/MPF_GRR_SLT" -> "MedlarTea/OCL-RPF"
"MedlarTea/MPF_GRR_SLT" -> "MedlarTea/Mono-RPF"
"Friedrich-M/Wheeled-robot-path-planning-algorithm" -> "estshorter/dwa"
"fabio-cabeccia/ros_aco_path_planner" -> "RiteshKH/Ant_Colony_Optimizer_move_base_planner"
"NaokiAkai/als_ros" -> "MigVega/Ogm2Pgbm" ["e"=1]
"NaokiAkai/als_ros" -> "at-wat/neonavigation" ["e"=1]
"CCNYRoboticsLab/imu_tools" -> "MegviiRobot/OdomLaserCalibraTool" ["e"=1]
"polinko13/CBS" -> "gloriyo/MAPF-ICBS"
"nicofretti/MAPF" -> "mchtalkn/MAPF_CBS"
"nicofretti/MAPF" -> "msaudulhassan/mapf"
"karlkurzer/path_planner" -> "teddyluo/hybrid-a-star-annotation"
"karlkurzer/path_planner" -> "zm0612/Hybrid_A_Star"
"karlkurzer/path_planner" -> "tejus-gupta/hybrid-astar-planner"
"karlkurzer/path_planner" -> "zhm-real/MotionPlanning"
"karlkurzer/path_planner" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"karlkurzer/path_planner" -> "LiJiangnanBit/path_optimizer"
"karlkurzer/path_planner" -> "ANYbotics/grid_map" ["e"=1]
"karlkurzer/path_planner" -> "onlytailei/CppRobotics"
"karlkurzer/path_planner" -> "XiaojingGeorgeZhang/OBCA"
"karlkurzer/path_planner" -> "HKUST-Aerial-Robotics/Fast-Planner" ["e"=1]
"karlkurzer/path_planner" -> "HKUST-Aerial-Robotics/EPSILON"
"karlkurzer/path_planner" -> "wanghuohuo0716/hybrid_A_star"
"karlkurzer/path_planner" -> "ZJU-FAST-Lab/Dftpav"
"karlkurzer/path_planner" -> "rst-tu-dortmund/mpc_local_planner"
"karlkurzer/path_planner" -> "Geonhee-LEE/mpc_ros"
"vista-simulator/vista" -> "AdaCompNUS/summit" ["e"=1]
"MPC-Berkeley/barc" -> "XiaojingGeorgeZhang/OBCA" ["e"=1]
"MPC-Berkeley/barc" -> "XiaojingGeorgeZhang/H-OBCA" ["e"=1]
"shohinm/parallel_search" -> "aurone/smpl"
"autowarefoundation/autoware_universe" -> "karlkurzer/path_planner" ["e"=1]
"autowarefoundation/autoware_universe" -> "LiJiangnanBit/path_optimizer" ["e"=1]
"Mooophy/Path-Planning" -> "bysz71/DataStructureAndAlgorithmsInCSharp"
"Mooophy/Path-Planning" -> "bysz71/Simple-ftp-server"
"Mooophy/Path-Planning" -> "Mooophy/Compression"
"efc-robot/Explore-Bench" -> "efc-robot/SMMR-Explore"
"efc-robot/Explore-Bench" -> "efc-robot/TopoExplore"
"efc-robot/Explore-Bench" -> "marmotlab/ARiADNE" ["e"=1]
"ethz-asl/nbvplanner" -> "hasauino/rrt_exploration" ["e"=1]
"sychen-sjtu/RRT" -> "Shumin326/Manipulator"
"sychen-sjtu/RRT" -> "carlsberg03/6-axis_robot_pathplanning"
"sychen-sjtu/RRT" -> "zhongjieGDUT/manipulation_planning_Matlab"
"zm0612/Hybrid_A_Star" -> "teddyluo/hybrid-a-star-annotation"
"zm0612/Hybrid_A_Star" -> "karlkurzer/path_planner"
"zm0612/Hybrid_A_Star" -> "CHH3213/chhRobotics_CPP"
"zm0612/Hybrid_A_Star" -> "wanghuohuo0716/hybrid_A_star"
"zm0612/Hybrid_A_Star" -> "tejus-gupta/hybrid-astar-planner"
"zm0612/Hybrid_A_Star" -> "Geonhee-LEE/mpc_ros"
"zm0612/Hybrid_A_Star" -> "libai1943/CartesianPlanner"
"zm0612/Hybrid_A_Star" -> "ZJU-FAST-Lab/Dftpav"
"zm0612/Hybrid_A_Star" -> "LiJiangnanBit/path_optimizer"
"zm0612/Hybrid_A_Star" -> "zhm-real/MotionPlanning"
"zm0612/Hybrid_A_Star" -> "linyicheng1/hybrid_astar"
"zm0612/Hybrid_A_Star" -> "zm0612/Minimum-Snap" ["e"=1]
"zm0612/Hybrid_A_Star" -> "zhaokun506/parking"
"zm0612/Hybrid_A_Star" -> "tanujthakkar/Voronoi-Based-Hybrid-Astar"
"zm0612/Hybrid_A_Star" -> "ai-winter/ros_motion_planning" ["e"=1]
"Bharath2/iLQR" -> "pparmesh/Constrained_ILQR"
"Bharath2/iLQR" -> "anassinator/ilqr"
"Bharath2/iLQR" -> "YukunXia/Carla_iLQR_MPC"
"Bharath2/iLQR" -> "LiJiangnanBit/path_optimizer_ilqr"
"Bharath2/iLQR" -> "libai1943/CartesianPlanner"
"Bharath2/iLQR" -> "ZhaiMen-Hub/DecisionPlanning" ["e"=1]
"Bharath2/iLQR" -> "chenyx09/belief-planning" ["e"=1]
"Bharath2/iLQR" -> "HJReachability/ilqgames"
"Bharath2/iLQR" -> "RoboticExplorationLab/Altro.jl" ["e"=1]
"Bharath2/iLQR" -> "ZJU-FAST-Lab/Dftpav"
"Bharath2/iLQR" -> "kazuotani14/iLQR"
"Bharath2/iLQR" -> "SafeRoboticsLab/iLQR_jax_racing"
"Bharath2/iLQR" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"Bharath2/iLQR" -> "HKUST-JM/Local_Learning_CiLQR"
"giacomo-b/CppRobotics" -> "onlytailei/CppRobotics"
"giacomo-b/CppRobotics" -> "rst-tu-dortmund/mpc_local_planner"
"giacomo-b/CppRobotics" -> "Forrest-Z/cpp_robotics"
"giacomo-b/CppRobotics" -> "LiJiangnanBit/path_optimizer"
"giacomo-b/CppRobotics" -> "ethz-adrl/control-toolbox" ["e"=1]
"giacomo-b/CppRobotics" -> "roboticslibrary/rl" ["e"=1]
"giacomo-b/CppRobotics" -> "Le0nX/ModernRoboticsCpp" ["e"=1]
"giacomo-b/CppRobotics" -> "daniel-s-ingram/ai_for_robotics"
"ClemensElflein/open_mower_ros" -> "Fields2Cover/Fields2Cover" ["e"=1]
"ClemensElflein/open_mower_ros" -> "ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" ["e"=1]
"ClemensElflein/open_mower_ros" -> "nobleo/full_coverage_path_planner" ["e"=1]
"ClemensElflein/open_mower_ros" -> "Greenzie/boustrophedon_planner" ["e"=1]
"rst-tu-dortmund/costmap_converter" -> "rst-tu-dortmund/teb_local_planner_tutorials"
"daancode/a-star" -> "zhangpanyi/a-star-algorithm"
"daancode/a-star" -> "justinhj/astar-algorithm-cpp"
"daancode/a-star" -> "zm0612/Hybrid_A_Star"
"daancode/a-star" -> "sumimakito/A-star"
"daancode/a-star" -> "teddyluo/hybrid-a-star-annotation"
"daancode/a-star" -> "tejus-gupta/hybrid-astar-planner"
"daancode/a-star" -> "lh9171338/Astar"
"daancode/a-star" -> "karlkurzer/path_planner"
"daancode/a-star" -> "RoboJackets/rrt"
"daancode/a-star" -> "Rikora/A-star"
"daancode/a-star" -> "motion-planning/rrt-algorithms"
"daancode/a-star" -> "Eurecat/astar-gridmap-2d"
"daancode/a-star" -> "hjweide/pyastar2d"
"daancode/a-star" -> "amslabtech/dwa_planner"
"daancode/a-star" -> "Geonhee-LEE/mpc_ros"
"gloriyo/MAPF-ICBS" -> "polinko13/CBS"
"gloriyo/MAPF-ICBS" -> "enginbaglayici/ConflictBasedSearch"
"gloriyo/MAPF-ICBS" -> "nicofretti/MAPF"
"olzhas/rrt_toolbox" -> "adnanmunawar/matlab-rrt-variants"
"olzhas/rrt_toolbox" -> "Mesywang/Motion-Planning-Algorithms"
"olzhas/rrt_toolbox" -> "IngaVS/informed-RRT"
"olzhas/rrt_toolbox" -> "emreozanalkan/RRT"
"olzhas/rrt_toolbox" -> "motion-planning/rrt-algorithms"
"olzhas/rrt_toolbox" -> "SrinidhiSreenath/ENPM661-Informed-RRT-Star"
"olzhas/rrt_toolbox" -> "EwingKang/Dubins-RRT-for-MATLAB"
"olzhas/rrt_toolbox" -> "Huang0035/RRT-and-RRT-star-plus-APF"
"olzhas/rrt_toolbox" -> "ayushgaud/path_planning" ["e"=1]
"olzhas/rrt_toolbox" -> "rishabh1b/RealTimePathPlanning"
"olzhas/rrt_toolbox" -> "rahul-sb/RRTx"
"twni2016/pomdp-baselines" -> "h2r/pomdp-py" ["e"=1]
"twni2016/pomdp-baselines" -> "namoshizun/PyPOMDP" ["e"=1]
"YXZhai97/Area-Coverage-Path-Planning" -> "adamslab-ub/SCoPP"
"NeXTzhao/planning" -> "czhherry/self-driving-vehicle-101"
"NeXTzhao/planning" -> "gxf1002/ShenLanAcademy-PlanningControl"
"NeXTzhao/planning" -> "moribots/motion_planning"
"NeXTzhao/planning" -> "zhaokun506/parking"
"libai1943/CartesianPlanner" -> "ZJU-FAST-Lab/Dftpav"
"libai1943/CartesianPlanner" -> "SS47816/fiss_planner"
"libai1943/CartesianPlanner" -> "LiJiangnanBit/path_optimizer_2"
"libai1943/CartesianPlanner" -> "LiJiangnanBit/path_optimizer"
"libai1943/CartesianPlanner" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"libai1943/CartesianPlanner" -> "pparmesh/Constrained_ILQR"
"libai1943/CartesianPlanner" -> "jchengai/gpir"
"libai1943/CartesianPlanner" -> "HKUST-Aerial-Robotics/EPSILON"
"libai1943/CartesianPlanner" -> "zhaokun506/parking"
"libai1943/CartesianPlanner" -> "LiJiangnanBit/path_optimizer_ilqr"
"libai1943/CartesianPlanner" -> "Bharath2/iLQR"
"libai1943/CartesianPlanner" -> "XiaojingGeorgeZhang/H-OBCA"
"libai1943/CartesianPlanner" -> "HKUST-Aerial-Robotics/eudm_planner"
"libai1943/CartesianPlanner" -> "hourenyu/--original--Trajectory-optimization-based-on-Bezier-polynomial-motion-planning-"
"libai1943/CartesianPlanner" -> "SS47816/frenet_optimal_planner"
"kam3k/laser_line_extraction" -> "NKU-MobFly-Robotics/laser-line-segment"
"kam3k/laser_line_extraction" -> "tysik/obstacle_detector"
"kam3k/laser_line_extraction" -> "MegviiRobot/OdomLaserCalibraTool"
"kam3k/laser_line_extraction" -> "AndreaCensi/csm"
"kam3k/laser_line_extraction" -> "MAPIRlab/rf2o_laser_odometry"
"kam3k/laser_line_extraction" -> "MegviiRobot/CamLaserCalibraTool" ["e"=1]
"kam3k/laser_line_extraction" -> "ros-planning/navigation_experimental"
"kam3k/laser_line_extraction" -> "ros-perception/laser_filters"
"kam3k/laser_line_extraction" -> "CCNYRoboticsLab/scan_tools"
"kam3k/laser_line_extraction" -> "NKU-MobFly-Robotics/laser_scan_matcher"
"kam3k/laser_line_extraction" -> "naturerobots/move_base_flex" ["e"=1]
"kam3k/laser_line_extraction" -> "xiangli0608/Creating-2D-laser-slam-from-scratch"
"kam3k/laser_line_extraction" -> "at-wat/neonavigation"
"kam3k/laser_line_extraction" -> "MigVega/Ogm2Pgbm"
"kam3k/laser_line_extraction" -> "wg-perception/people"
"studywolf/control" -> "navigator8972/pylqr" ["e"=1]
"sourishg/rrt-simulator" -> "RoboJackets/rrt"
"sourishg/rrt-simulator" -> "nalin1096/path_planning"
"liuxuexun/Artificial-Potential-Field" -> "Huang0035/RRT-and-RRT-star-plus-APF"
"liuxuexun/Artificial-Potential-Field" -> "Meshaal-Mouawad/Improvement-Potential-Field-Algorithm"
"liuxuexun/Artificial-Potential-Field" -> "zzuwz/Artificial-Potential-Field"
"liuxuexun/Artificial-Potential-Field" -> "Yaaximus/artificial-potential-field-matlab"
"liuxuexun/Artificial-Potential-Field" -> "surya9teja/3D-Artificial-Potential-Field"
"liuxuexun/Artificial-Potential-Field" -> "JianmingTONG/Artificial_Potential_Field_MultiTarget"
"liuxuexun/Artificial-Potential-Field" -> "Astik-2002/Dynamic-artificial-potential-field-algorithm-for-cooperative-obstacle-avoidance-for-fixed-wing-UAV"
"liuxuexun/Artificial-Potential-Field" -> "ShuiXinYun/Path_Plan"
"wangweike123/Full-coverage-path-planning-based-on-spanningtree-and-A-star" -> "KunHanKH/Comple-Coverage-Path-PLanning-Based-on-Cell-Desomposition"
"wangweike123/Full-coverage-path-planning-based-on-spanningtree-and-A-star" -> "rodriguesrenato/coverage-path-planning"
"rodriguesrenato/coverage-path-planning" -> "wangweike123/Full-coverage-path-planning-based-on-spanningtree-and-A-star"
"rodriguesrenato/coverage-path-planning" -> "JonasVervloet/RL-Coverage-Planner"
"rodriguesrenato/coverage-path-planning" -> "18alantom/CoveragePathPlanning"
"rodriguesrenato/coverage-path-planning" -> "YXZhai97/Area-Coverage-Path-Planning"
"rodriguesrenato/coverage-path-planning" -> "windycn/Multi-Agent-Coverage-Path-Planning-Algorithm"
"rodriguesrenato/coverage-path-planning" -> "AytacKahveci/multirobot_coverage"
"rodriguesrenato/coverage-path-planning" -> "alice-st/DARP"
"rodriguesrenato/coverage-path-planning" -> "irvingvasquez/ocpp"
"rodriguesrenato/coverage-path-planning" -> "adamslab-ub/SCoPP"
"rodriguesrenato/coverage-path-planning" -> "WJTung/GA-TSPCPP"
"qboticslabs/mastering_ros" -> "wg-perception/people" ["e"=1]
"WangHanfu/Multi-Robot-Path-Planning-with-Due-Times" -> "yusuf1478/multi_robot_path_planning_isca"
"winwinashwin/Multi-Robot-Coverage-Planning" -> "AytacKahveci/multirobot_coverage"
"winwinashwin/Multi-Robot-Coverage-Planning" -> "nkarapetyan/BCD"
"winwinashwin/Multi-Robot-Coverage-Planning" -> "MapaRobo/full_coverage_path_planner"
"nathansttt/hog2" -> "PathPlanning/Continuous-CBS"
"nathansttt/hog2" -> "Kei18/pibt"
"omron-sinicx/ctrm" -> "lakshayvirmani/learning-assisted-mstar"
"omron-sinicx/ctrm" -> "nobodyczcz/Guided-PIBT"
"TUMFTM/EthicalTrajectoryPlanning" -> "SS47816/fiss_planner" ["e"=1]
"CCNYRoboticsLab/scan_tools" -> "AndreaCensi/csm"
"CCNYRoboticsLab/scan_tools" -> "MAPIRlab/rf2o_laser_odometry"
"CCNYRoboticsLab/scan_tools" -> "NKU-MobFly-Robotics/laser_scan_matcher"
"CCNYRoboticsLab/scan_tools" -> "iralabdisco/ira_laser_tools"
"CCNYRoboticsLab/scan_tools" -> "MAPIRlab/srf_laser_odometry"
"CCNYRoboticsLab/scan_tools" -> "ros-perception/pointcloud_to_laserscan" ["e"=1]
"CCNYRoboticsLab/scan_tools" -> "ros-planning/navigation_experimental"
"CCNYRoboticsLab/scan_tools" -> "kam3k/laser_line_extraction"
"CCNYRoboticsLab/scan_tools" -> "yujinrobot/yujin_ocs"
"CCNYRoboticsLab/scan_tools" -> "MegviiRobot/OdomLaserCalibraTool"
"CCNYRoboticsLab/scan_tools" -> "naturerobots/move_base_flex" ["e"=1]
"CCNYRoboticsLab/scan_tools" -> "ros-perception/laser_filters"
"casper-auto/carla_trajectory_controller" -> "casper-auto/CasperAuto"
"anushrii/Multi-Robot-Path-Planning" -> "huangxianqun/multi_robot_path_planning"
"Meshaal-Mouawad/Improvement-Potential-Field-Algorithm" -> "JianmingTONG/Artificial_Potential_Field_MultiTarget"
"Meshaal-Mouawad/Improvement-Potential-Field-Algorithm" -> "YashTrikannad/apf_reactive_planning"
"Meshaal-Mouawad/Improvement-Potential-Field-Algorithm" -> "parisrigakis/PathPlanningAPF"
"Meshaal-Mouawad/Improvement-Potential-Field-Algorithm" -> "surya9teja/3D-Artificial-Potential-Field"
"ubi-agni/STP" -> "seehma/DoubleSTrajectory"
"casper-auto/CasperAuto" -> "casper-auto/carla_trajectory_controller"
"casper-auto/CasperAuto" -> "czjaixuexi/carla_ros_bridge_pnc"
"casper-auto/CasperAuto" -> "motianxiuhua/EMplanner"
"casper-auto/CasperAuto" -> "zhaokun506/driving-planning"
"jbradberry/mcts" -> "jbradberry/ultimate_tictactoe"
"jbradberry/mcts" -> "hildensia/mcts"
"jbradberry/mcts" -> "haroldsultan/MCTS"
"jbradberry/mcts" -> "jbradberry/boardgame-socketserver"
"qwerty35/lsc_planner" -> "qwerty35/lsc_dr_planner"
"qwerty35/lsc_planner" -> "carlosluis/online_dmpc"
"qwerty35/lsc_planner" -> "qwerty35/swarm_simulator"
"qwerty35/lsc_planner" -> "PKU-MACDLab/IMPC-DR"
"JuliaAcademy/Decision-Making-Under-Uncertainty" -> "JuliaPOMDP/POMDPs.jl"
"JuliaAcademy/Decision-Making-Under-Uncertainty" -> "JuliaPOMDP/DeepQLearning.jl"
"JuliaAcademy/Decision-Making-Under-Uncertainty" -> "sisl/aa228-notebook"
"osrf/rosbook" -> "tysik/obstacle_detector" ["e"=1]
"mech0ctopus/rrt-global-planner" -> "Zhi29/RRTstar-planner-for-ROS-navigation"
"mech0ctopus/rrt-global-planner" -> "jrabel/rrt_planner"
"SS47816/frenet_optimal_planner" -> "SS47816/fiss_planner"
"SS47816/frenet_optimal_planner" -> "anime-sh/Frenet_Planner_AGV"
"SS47816/frenet_optimal_planner" -> "zqw-hooper/apollo_and_-autoware_path_planner"
"SS47816/fiss_planner" -> "SS47816/fiss_plus_planner" ["e"=1]
"SS47816/fiss_planner" -> "SS47816/frenet_optimal_planner"
"SS47816/fiss_planner" -> "jchengai/gpir"
"SS47816/fiss_planner" -> "libai1943/CartesianPlanner"
"SS47816/fiss_planner" -> "LiJiangnanBit/path_optimizer_2"
"SS47816/fiss_planner" -> "LiJiangnanBit/path_optimizer_ilqr"
"SS47816/fiss_planner" -> "zqw-hooper/apollo_and_-autoware_path_planner"
"ExistentialRobotics/SSMI" -> "ExistentialRobotics/ROAM"
"ExistentialRobotics/SSMI" -> "efc-robot/SMMR-Explore"
"Jiaoyang-Li/MAPF-LNS2" -> "Jiaoyang-Li/MAPF-LNS"
"Jiaoyang-Li/MAPF-LNS2" -> "Jiaoyang-Li/EECBS"
"Jiaoyang-Li/MAPF-LNS2" -> "Kei18/pibt2"
"Jiaoyang-Li/MAPF-LNS2" -> "Jiaoyang-Li/RHCR"
"Jiaoyang-Li/MAPF-LNS2" -> "Kei18/mapf-visualizer"
"Cognitive-AI-Systems/pogema" -> "marmotlab/SCRIMP" ["e"=1]
"Cognitive-AI-Systems/pogema" -> "mail-ecnu/PICO" ["e"=1]
"Cognitive-AI-Systems/pogema" -> "marmotlab/PRIMAL2" ["e"=1]
"PickNikRobotics/roscpp_code_format" -> "ros-planning/navigation_experimental" ["e"=1]
"LiJiangnanBit/path_optimizer_2" -> "LiJiangnanBit/path_optimizer"
"LiJiangnanBit/path_optimizer_2" -> "LiJiangnanBit/path_optimizer_ilqr"
"LiJiangnanBit/path_optimizer_2" -> "libai1943/CartesianPlanner"
"LiJiangnanBit/path_optimizer_2" -> "SS47816/fiss_planner"
"LiJiangnanBit/path_optimizer_2" -> "pparmesh/Constrained_ILQR"
"LiJiangnanBit/path_optimizer_2" -> "jianzhuozhuTHU/MPC-D-CBF" ["e"=1]
"LiJiangnanBit/path_optimizer_2" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"LiJiangnanBit/path_optimizer_2" -> "Jinqi-J/Numerical-Optimization-in-Robotics-Homework"
"LiJiangnanBit/path_optimizer_2" -> "ZJU-FAST-Lab/Car-like-Robotic-swarm"
"LiJiangnanBit/path_optimizer_2" -> "ZJU-FAST-Lab/Dftpav"
"palmieri/srl_dstar_lite" -> "Botao-Hu/Dstar-lite-on-ROS-Turtlebot"
"HKUST-JM/Local_Learning_CiLQR" -> "portal-cornell/game-theoretic-forecasting-planning"
"RicheyHuang/CoverageActiveSLAM" -> "eldariko/Robot-path-planning-coverage"
"AlexGeControl/Motion-Planning-for-Mobile-Robots" -> "CK1201/Numerical-Optimization-in-Robotics-HW"
"ampl/mp" -> "ampl/amplpy"
"ampl/mp" -> "coin-or/Gravity"
"ampl/mp" -> "Argonne-National-Laboratory/DSP"
"mail-ecnu/PICO" -> "marmotlab/SCRIMP"
"dongliangCH/Accelerating-Kinodynamic-RRTstar-Through-Dimensionality-Reduction" -> "chahatdeep/rrt_dynamic"
"StevenLyt/mapf-visualizer" -> "Jiaoyang-Li/EECBS"
"StevenLyt/mapf-visualizer" -> "Jiaoyang-Li/CBSH2-RTC"
"StevenLyt/mapf-visualizer" -> "Jiaoyang-Li/MAPF-LNS"
"chenzhike110/Lattice-Planner" -> "chenzhike110/Arm-Robotics-RL"
"chenzhike110/Lattice-Planner" -> "chenzhike110/SSL-RL"
"chenzhike110/Lattice-Planner" -> "chenzhike110/Fast-tracking"
"chenzhike110/Lattice-Planner" -> "chenzhike110/yolov4_siamfcpp_multitracking"
"ZamesNg/kinodynamic_frontend" -> "dongliangCH/Accelerating-Kinodynamic-RRTstar-Through-Dimensionality-Reduction"
"reflector-li/EMplanner" -> "zhaokun506/driving-planning"
"nkuwenjian/voronoi_planner" -> "nkuwenjian/voronoi_layer"
"nkuwenjian/voronoi_planner" -> "NKU-MobFly-Robotics/g2vd_planner"
"frontw/voronoi_planner" -> "frontw/dynamicvoronoi"
"frontw/voronoi_planner" -> "nkuwenjian/voronoi_planner"
"frontw/voronoi_planner" -> "nkuwenjian/voronoi_layer"
"frontw/voronoi_planner" -> "srl-freiburg/srl_rhcf_planner"
"frontw/voronoi_planner" -> "Merkaster/Dynamic-Voronoi-Path-Planning"
"frontw/voronoi_planner" -> "srl-freiburg/srl_global_planner"
"zhu-edward/DGSQP" -> "lassepe/peters2024ral-code"
"sbochkar/coverage_path_planning" -> "irvingvasquez/wind_cpp"
"Lee-JaeWon/Frontier-Based-Multi-Robot-Exploration" -> "hikashi/TM-RRT_exploration_Simulation"
"Lee-JaeWon/Frontier-Based-Multi-Robot-Exploration" -> "GradyM2M/multi_turtlebot3_navigation"
"nkuwenjian/voronoi_layer" -> "nkuwenjian/voronoi_planner"
"PKU-MACDLab/IMPC-DR" -> "PKU-MACDLab/IMPC-OB"
"frontw/dynamicvoronoi" -> "frontw/voronoi_planner"
"AtsushiSakai/PythonRobotics" -> "onlytailei/CppRobotics" ["e"=1]
"AtsushiSakai/PythonRobotics" -> "zhm-real/MotionPlanning" ["e"=1]
"CHH3213/Books" -> "CHH3213/chhRobotics_CPP"
"CHH3213/Books" -> "CHH3213/chhRobotics"
"CHH3213/Books" -> "libai1943/CartesianPlanner"
"CHH3213/Books" -> "gxf1002/ShenLanAcademy-PlanningControl"
"CHH3213/Books" -> "VincentWong3/automatic-driving-decision-and-planning-for-matlab"
"CHH3213/Books" -> "teddyluo/hybrid-a-star-annotation"
"CHH3213/Books" -> "VincentWong3/automated-driving-control"
"CHH3213/Books" -> "zm0612/Hybrid_A_Star"
"CHH3213/Books" -> "L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla"
"CHH3213/Books" -> "karlkurzer/path_planner"
"CHH3213/Books" -> "zhm-real/MotionPlanning"
"CHH3213/Books" -> "zhaokun506/parking"
"CHH3213/Books" -> "pparmesh/Constrained_ILQR"
"CHH3213/Books" -> "HKUST-Aerial-Robotics/EPSILON"
"CHH3213/Books" -> "ZJU-FAST-Lab/Dftpav"
"ai-winter/python_motion_planning" -> "ai-winter/ros_motion_planning" ["e"=1]
"ai-winter/python_motion_planning" -> "ai-winter/matlab_motion_planning"
"ai-winter/python_motion_planning" -> "zhm-real/MotionPlanning"
"ai-winter/python_motion_planning" -> "motion-planning/rrt-algorithms"
"ai-winter/python_motion_planning" -> "TempleRAIL/drl_vo_nav" ["e"=1]
"ai-winter/python_motion_planning" -> "jhan15/dubins_path_planning"
"ai-winter/python_motion_planning" -> "reiniscimurs/DRL-robot-navigation" ["e"=1]
"ai-winter/python_motion_planning" -> "CHH3213/chhRobotics"
"ai-winter/python_motion_planning" -> "atb033/multi_agent_path_planning"
"ai-winter/python_motion_planning" -> "zhaohaojie1998/DRL-for-Path-Planning" ["e"=1]
"ai-winter/python_motion_planning" -> "zhaohaojie1998/Path-Planning"
"ai-winter/python_motion_planning" -> "karlkurzer/path_planner"
"ai-winter/python_motion_planning" -> "amslabtech/dwa_planner"
"ai-winter/python_motion_planning" -> "JORKER1755/PathPlanning" ["e"=1]
"ai-winter/python_motion_planning" -> "rlnav/motion_planning"
"linorobot/linorobot" -> "Hypha-ROS/hypharos_minicar" ["e"=1]
"linorobot/linorobot" -> "locusrobotics/robot_navigation" ["e"=1]
"linorobot/linorobot" -> "tysik/obstacle_detector" ["e"=1]
"meco-group/omg-tools" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"meco-group/omg-tools" -> "LiJiangnanBit/path_optimizer" ["e"=1]
"meco-group/omg-tools" -> "sbpl/sbpl" ["e"=1]
"ITCoders/Human-detection-and-Tracking" -> "spencer-project/spencer_people_tracking" ["e"=1]
"jslee02/awesome-robotics-libraries" -> "onlytailei/CppRobotics" ["e"=1]
"guardstrikelab/carla_apollo_bridge" -> "L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" ["e"=1]
"guardstrikelab/carla_apollo_bridge" -> "czjaixuexi/carla_ros_bridge_pnc" ["e"=1]
"Kei18/lacam" -> "Kei18/lacam2"
"Kei18/lacam" -> "Kei18/lacam3"
"Kei18/lacam" -> "Kei18/mapf-visualizer"
"Kei18/lacam" -> "Kei18/pibt2"
"zhaohaojie1998/Grey-Wolf-Optimizer-for-Path-Planning" -> "zhaohaojie1998/Path-Planning" ["e"=1]
"zhaohaojie1998/Grey-Wolf-Optimizer-for-Path-Planning" -> "xuedidi/path_planning" ["e"=1]
"zhaohaojie1998/Grey-Wolf-Optimizer-for-Path-Planning" -> "szc19990412/Path-Planning" ["e"=1]
"ai-winter/matlab_motion_planning" -> "ai-winter/python_motion_planning"
"ai-winter/matlab_motion_planning" -> "Mesywang/Motion-Planning-Algorithms"
"ai-winter/matlab_motion_planning" -> "ai-winter/ros_motion_planning" ["e"=1]
"ai-winter/matlab_motion_planning" -> "Huang0035/RRT-and-RRT-star-plus-APF"
"ai-winter/matlab_motion_planning" -> "olzhas/rrt_toolbox"
"ai-winter/matlab_motion_planning" -> "adnanmunawar/matlab-rrt-variants"
"ai-winter/matlab_motion_planning" -> "wanghuohuo0716/hybrid_A_star"
"ai-winter/matlab_motion_planning" -> "yrlu/quadrotor" ["e"=1]
"ai-winter/matlab_motion_planning" -> "teddyluo/hybrid-a-star-annotation"
"ai-winter/matlab_motion_planning" -> "oz182/3D-Navigation---DWA-and-A-"
"ai-winter/matlab_motion_planning" -> "zhaohaojie1998/Grey-Wolf-Optimizer-for-Path-Planning" ["e"=1]
"ai-winter/matlab_motion_planning" -> "YashBansod/Robotics-Planning-Dynamics-and-Control"
"ai-winter/matlab_motion_planning" -> "szc19990412/Path-Planning"
"gotonote/Autopilot-Notes" -> "ProgramTraveler/Road-To-Autonomous-Driving" ["e"=1]
"VincentWong3/notes" -> "VincentWong3/apollo"
"VincentWong3/notes" -> "VincentWong3/automatic-driving-decision-and-planning-for-matlab"
"VincentWong3/notes" -> "VincentWong3/automated-driving-control"
"VincentWong3/notes" -> "zhaokun506/driving-planning"
"VincentWong3/notes" -> "gxf1002/ShenLanAcademy-PlanningControl"
"VincentWong3/notes" -> "czjaixuexi/carla_ros_bridge_pnc"
"CHH3213/chhRobotics_CPP" -> "CHH3213/chhRobotics"
"CHH3213/chhRobotics_CPP" -> "zm0612/Hybrid_A_Star"
"CHH3213/chhRobotics_CPP" -> "CHH3213/Books"
"CHH3213/chhRobotics_CPP" -> "teddyluo/hybrid-a-star-annotation"
"CHH3213/chhRobotics_CPP" -> "ai-winter/ros_motion_planning" ["e"=1]
"CHH3213/chhRobotics_CPP" -> "zhm-real/MotionPlanning"
"CHH3213/chhRobotics_CPP" -> "karlkurzer/path_planner"
"CHH3213/chhRobotics_CPP" -> "ProgramTraveler/Road-To-Autonomous-Driving"
"CHH3213/chhRobotics_CPP" -> "gxf1002/ShenLanAcademy-PlanningControl"
"CHH3213/chhRobotics_CPP" -> "czjaixuexi/carla_ros_bridge_pnc"
"CHH3213/chhRobotics_CPP" -> "Geonhee-LEE/mpc_ros"
"CHH3213/chhRobotics_CPP" -> "onlytailei/CppRobotics"
"CHH3213/chhRobotics_CPP" -> "LiJiangnanBit/path_optimizer"
"CHH3213/chhRobotics_CPP" -> "HKUST-Aerial-Robotics/EPSILON"
"CHH3213/chhRobotics_CPP" -> "NeXTzhao/planning"
"ros/ros_comm" -> "yujinrobot/yujin_ocs" ["e"=1]
"angusleigh/leg_tracker" -> "wg-perception/people"
"angusleigh/leg_tracker" -> "marcobecerrap/edge_leg_detector"
"angusleigh/leg_tracker" -> "marinaKollmitz/human_aware_navigation"
"angusleigh/leg_tracker" -> "VisualComputingInstitute/2D_lidar_person_detection"
"angusleigh/leg_tracker" -> "spencer-project/spencer_people_tracking"
"angusleigh/leg_tracker" -> "onlytailei/gym_ped_sim" ["e"=1]
"angusleigh/leg_tracker" -> "strands-project/strands_perception_people"
"angusleigh/leg_tracker" -> "koide3/monocular_person_following"
"hanruihua/RDA-planner" -> "ZJU-FAST-Lab/Dftpav" ["e"=1]
"turtlebot/turtlebot" -> "yujinrobot/yujin_ocs" ["e"=1]
"Huang0035/RRT-and-RRT-star-plus-APF" -> "Meshaal-Mouawad/Improvement-Potential-Field-Algorithm"
"Huang0035/RRT-and-RRT-star-plus-APF" -> "liuxuexun/Artificial-Potential-Field"
"Huang0035/RRT-and-RRT-star-plus-APF" -> "surya9teja/3D-Artificial-Potential-Field"
"ampl/gsl" -> "BrianGladman/gsl"
"ampl/gsl" -> "libMesh/libmesh" ["e"=1]
"ampl/gsl" -> "ampl/mp"
"ampl/gsl" -> "boostorg/math" ["e"=1]
"ampl/gsl" -> "bgrimstad/splinter"
"ampl/gsl" -> "lava/matplotlib-cpp" ["e"=1]
"ampl/gsl" -> "tbs1980/NumericalIntegration"
"stoneMan349/reinfocement-learning-on-robotic-mobile-fulfilment-system" -> "wusean1997/HRL_AGV_Navigation_MTON"
"Fields2Cover/Fields2Cover" -> "nobleo/full_coverage_path_planner"
"Fields2Cover/Fields2Cover" -> "ethz-asl/polygon_coverage_planning"
"Fields2Cover/Fields2Cover" -> "open-navigation/opennav_coverage"
"Fields2Cover/Fields2Cover" -> "RicheyHuang/CoveragePlanner"
"Fields2Cover/Fields2Cover" -> "Greenzie/boustrophedon_planner"
"Fields2Cover/Fields2Cover" -> "ipa320/ipa_coverage_planning"
"Fields2Cover/Fields2Cover" -> "Fields2Cover/fields2cover_ros"
"Fields2Cover/Fields2Cover" -> "rodriguesrenato/coverage-path-planning"
"Fields2Cover/Fields2Cover" -> "locusrobotics/fuse" ["e"=1]
"Fields2Cover/Fields2Cover" -> "naturerobots/mesh_navigation" ["e"=1]
"Fields2Cover/Fields2Cover" -> "facontidavide/Bonxai" ["e"=1]
"Fields2Cover/Fields2Cover" -> "18alantom/CoveragePathPlanning"
"Fields2Cover/Fields2Cover" -> "RicheyHuang/BoustrophedonCellularDecompositionPathPlanning"
"Fields2Cover/Fields2Cover" -> "mikeferguson/ros2_cookbook" ["e"=1]
"Fields2Cover/Fields2Cover" -> "MRPT/mvsim" ["e"=1]
"Mr-Tony921/xju-robot" -> "jianzhuozhuTHU/MPC-D-CBF" ["e"=1]
"Mr-Tony921/xju-robot" -> "jianzhuozhuTHU/putn" ["e"=1]
"Mr-Tony921/xju-robot" -> "RicheyHuang/CoveragePlanner"
"Mr-Tony921/xju-robot" -> "ipa320/ipa_coverage_planning"
"Mr-Tony921/xju-robot" -> "li-haojia/Clean-robot-turtlebot3"
"Mr-Tony921/xju-robot" -> "nobleo/full_coverage_path_planner"
"Mr-Tony921/xju-robot" -> "naturerobots/move_base_flex" ["e"=1]
"Mr-Tony921/xju-robot" -> "ethz-asl/polygon_coverage_planning"
"Mr-Tony921/xju-robot" -> "duyongquan/OpenRobotics" ["e"=1]
"ros/ros_tutorials" -> "yujinrobot/yujin_ocs" ["e"=1]
"ros-perception/image_pipeline" -> "ros-perception/depthimage_to_laserscan" ["e"=1]
"rst-tu-dortmund/teb_local_planner_tutorials" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"rst-tu-dortmund/teb_local_planner_tutorials" -> "rst-tu-dortmund/costmap_converter"
"rst-tu-dortmund/teb_local_planner_tutorials" -> "ros-planning/navigation_experimental"
"rst-tu-dortmund/teb_local_planner_tutorials" -> "gkouros/rsband_local_planner"
"rst-tu-dortmund/teb_local_planner_tutorials" -> "rst-tu-dortmund/mpc_local_planner"
"gxf1002/ShenLanAcademy-PlanningControl" -> "czjaixuexi/carla_ros_bridge_pnc"
"gxf1002/ShenLanAcademy-PlanningControl" -> "L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla"
"gxf1002/ShenLanAcademy-PlanningControl" -> "casper-auto/CasperAuto"
"gxf1002/ShenLanAcademy-PlanningControl" -> "zhaokun506/driving-planning"
"gxf1002/ShenLanAcademy-PlanningControl" -> "NeXTzhao/planning"
"gxf1002/ShenLanAcademy-PlanningControl" -> "zhaokun506/parking"
"gxf1002/ShenLanAcademy-PlanningControl" -> "VincentWong3/notes"
"gxf1002/ShenLanAcademy-PlanningControl" -> "tonyxxq/MPC-Control"
"Kei18/mapf-visualizer" -> "Kei18/lacam2"
"Kei18/mapf-visualizer" -> "Kei18/lacam"
"Kei18/mapf-visualizer" -> "Kei18/pibt2"
"Kei18/mapf-visualizer" -> "Jiaoyang-Li/EECBS"
"Kei18/mapf-visualizer" -> "Kei18/lacam3"
"Kei18/mapf-visualizer" -> "Jiaoyang-Li/MAPF-LNS2"
"vampcoder/Artificial-Potential-Field" -> "vampcoder/Hybrid-Artificial-Potential-Field-A-star-Planning"
"vampcoder/Artificial-Potential-Field" -> "nccvector/aritificial-potential-field"
"vampcoder/Artificial-Potential-Field" -> "ShuiXinYun/Path_Plan"
"vampcoder/Artificial-Potential-Field" -> "kartik9k/ArtificialPotentialFieldPlanner"
"vampcoder/Hybrid-Artificial-Potential-Field-A-star-Planning" -> "vampcoder/Artificial-Potential-Field"
"turtlebot/turtlebot_apps" -> "yujinrobot/yujin_ocs" ["e"=1]
"Dangko/ego-planner-for-ground-robot" -> "ZJU-FAST-Lab/Car-like-Robotic-swarm" ["e"=1]
"Dangko/ego-planner-for-ground-robot" -> "ZJU-FAST-Lab/Dftpav" ["e"=1]
"MigVega/Ogm2Pgbm" -> "NaokiAkai/als_ros" ["e"=1]
"MigVega/Ogm2Pgbm" -> "LittleDang/2DLIW-SLAM"
"zhaokun506/parking" -> "zhaokun506/driving-planning"
"zhaokun506/parking" -> "wenqing-2021/AutomatedValetParking"
"OwenLee666/7DoF_robot" -> "sychen-sjtu/RRT"
"Kei18/lacam2" -> "Kei18/lacam"
"Kei18/lacam2" -> "Kei18/lacam3"
"Kei18/lacam2" -> "Kei18/mapf-visualizer"
"jianzhuozhuTHU/putn" -> "ZJU-FAST-Lab/Dftpav" ["e"=1]
"ZJU-FAST-Lab/Dftpav" -> "libai1943/CartesianPlanner"
"ZJU-FAST-Lab/Dftpav" -> "HKUST-Aerial-Robotics/EPSILON"
"ZJU-FAST-Lab/Dftpav" -> "ZJU-FAST-Lab/LBFGS-Lite" ["e"=1]
"ZJU-FAST-Lab/Dftpav" -> "ZJU-FAST-Lab/Car-like-Robotic-swarm"
"ZJU-FAST-Lab/Dftpav" -> "jchengai/gpir"
"ZJU-FAST-Lab/Dftpav" -> "ZJU-FAST-Lab/GCOPTER" ["e"=1]
"ZJU-FAST-Lab/Dftpav" -> "ZJU-FAST-Lab/Implicit-SDF-Planner" ["e"=1]
"ZJU-FAST-Lab/Dftpav" -> "pparmesh/Constrained_ILQR"
"ZJU-FAST-Lab/Dftpav" -> "ZJU-FAST-Lab/large_scale_traj_optimizer" ["e"=1]
"ZJU-FAST-Lab/Dftpav" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"ZJU-FAST-Lab/Dftpav" -> "ZJU-FAST-Lab/3D2M-planner" ["e"=1]
"ZJU-FAST-Lab/Dftpav" -> "sikang/DecompUtil" ["e"=1]
"ZJU-FAST-Lab/Dftpav" -> "ZJU-FAST-Lab/uneven_planner" ["e"=1]
"ZJU-FAST-Lab/Dftpav" -> "LiJiangnanBit/path_optimizer_ilqr"
"ZJU-FAST-Lab/Dftpav" -> "karlkurzer/path_planner"
"ZJU-FAST-Lab/Car-like-Robotic-swarm" -> "ZJU-FAST-Lab/Dftpav"
"ZJU-FAST-Lab/Car-like-Robotic-swarm" -> "LIJUNCHENG001/multi_robot_traj_planner"
"ZJU-FAST-Lab/Car-like-Robotic-swarm" -> "Dangko/ego-planner-for-ground-robot" ["e"=1]
"ZJU-FAST-Lab/Car-like-Robotic-swarm" -> "ZJU-FAST-Lab/uneven_planner" ["e"=1]
"zhaokun506/driving-planning" -> "reflector-li/EMplanner"
"zhaokun506/driving-planning" -> "czjaixuexi/carla_ros_bridge_pnc"
"zhaokun506/driving-planning" -> "zhaokun506/parking"
"wenqing-2021/AutomatedValetParking" -> "zhaokun506/parking"
"wenqing-2021/AutomatedValetParking" -> "libai1943/ParkingMotionPlanningTITS21"
"wenqing-2021/AutomatedValetParking" -> "Pandas-Team/Automatic-Parking"
"navigator8972/pylqr" -> "neka-nat/ddp-gym"
"jianzhuozhuTHU/MPC-D-CBF" -> "LiJiangnanBit/path_optimizer_2" ["e"=1]
"MAPF-Competition/Start-Kit" -> "MAPF-Competition/PlanViz"
"Ankitvm/Coverage_Path_Planning-" -> "irvingvasquez/ocpp"
"AutoRally/autorally" -> "XiaojingGeorgeZhang/OBCA" ["e"=1]
"AutoRally/autorally" -> "osrf/car_demo" ["e"=1]
"AutoRally/autorally" -> "Hypha-ROS/hypharos_minicar" ["e"=1]
"orbbec/ros_astra_camera" -> "ros-perception/depthimage_to_laserscan" ["e"=1]
"AngeloEspinoza/kinodynamic-rrt-car-like-robot" -> "BijoSebastian/Kinodynamic-RRT-STAR"
"qwerty35/lsc_dr_planner" -> "qwerty35/lsc_planner"
"qwerty35/lsc_dr_planner" -> "qwerty35/swarm_simulator"
"mit-acl/rmader" -> "qwerty35/lsc_dr_planner"
"mit-acl/rmader" -> "mit-acl/puma"
"mit-acl/rmader" -> "PKU-MACDLab/IMPC-DR"
"VincentWong3/apollo" -> "VincentWong3/notes"
"mds1/path-planning" -> "DavidLining/3D_PathPlanner"
"mds1/path-planning" -> "jhu-asco/dsl_gridsearch"
"CourierLo/TMSTC-Star" -> "oelin/darpy"
"CourierLo/TMSTC-Star" -> "reso1/MSTC_Star"
"CourierLo/TMSTC-Star" -> "jynxmagic/FCPP-Survey"
"CourierLo/TMSTC-Star" -> "alice-st/DARP"
"CourierLo/TMSTC-Star" -> "AytacKahveci/multirobot_coverage"
"Rao-Kai/Numerical-Optimization-in-Robotics" -> "CK1201/Numerical-Optimization-in-Robotics-HW"
"Rao-Kai/Numerical-Optimization-in-Robotics" -> "tk166/Shenlan_Numerical-Optimization_in_Robotics"
"CK1201/Numerical-Optimization-in-Robotics-HW" -> "tk166/Shenlan_Numerical-Optimization_in_Robotics"
"CK1201/Numerical-Optimization-in-Robotics-HW" -> "Rao-Kai/Numerical-Optimization-in-Robotics"
"Jinqi-J/Numerical-Optimization-in-Robotics-Homework" -> "tk166/Shenlan_Numerical-Optimization_in_Robotics"
"Jinqi-J/Numerical-Optimization-in-Robotics-Homework" -> "ZJU-FAST-Lab/SDQP" ["e"=1]
"Jinqi-J/Numerical-Optimization-in-Robotics-Homework" -> "Rao-Kai/Numerical-Optimization-in-Robotics"
"Jinqi-J/Numerical-Optimization-in-Robotics-Homework" -> "CK1201/Numerical-Optimization-in-Robotics-HW"
"MAPF-Competition/PlanViz" -> "MAPF-Competition/Start-Kit"
"MAPF-Competition/PlanViz" -> "DiligentPanda/MAPF-LRR2023"
"MedlarTea/Mono-RPF" -> "MedlarTea/MPF_GRR_SLT"
"MedlarTea/Mono-RPF" -> "MedlarTea/OCL-RPF"
"VisualComputingInstitute/DROW" -> "lucasb-eyer/laser-detection-annotator"
"VisualComputingInstitute/DROW" -> "VisualComputingInstitute/DR-SPAAM-Detector"
"SeanZsya/SSLE" -> "SeanZsya/tdle"
"laurimi/pydpomdp" -> "laurimi/multiagent-prediction-reward"
"TGlad/ILQR" -> "mrsd16teamd/iLQR_onboard"
"PKU-MACDLab/IMPC-OB" -> "PKU-MACDLab/IMPC-DR"
"acforvs/dhc-robust-mapf" -> "Qiushi-Lin/SACHA"
"tk166/Shenlan_Numerical-Optimization_in_Robotics" -> "CK1201/Numerical-Optimization-in-Robotics-HW"
"tk166/Shenlan_Numerical-Optimization_in_Robotics" -> "Rao-Kai/Numerical-Optimization-in-Robotics"
"tk166/Shenlan_Numerical-Optimization_in_Robotics" -> "xilinnancheng/numerical_optimization"
"hasauino/rrt_exploration" -> "hasauino/rrt_exploration_tutorials"
"hasauino/rrt_exploration" -> "paulbovbel/frontier_exploration"
"hasauino/rrt_exploration" -> "hrnr/m-explore" ["e"=1]
"hasauino/rrt_exploration" -> "caochao39/tare_planner" ["e"=1]
"hasauino/rrt_exploration" -> "ethz-asl/nbvplanner" ["e"=1]
"hasauino/rrt_exploration" -> "laurimi/ase_exploration"
"hasauino/rrt_exploration" -> "nalin1096/path_planning"
"hasauino/rrt_exploration" -> "jeshoward/turtlebot_rrt"
"hasauino/rrt_exploration" -> "hikashi/multi-robot-rrt-exploration-melodic"
"hasauino/rrt_exploration" -> "ntnu-arl/gbplanner_ros" ["e"=1]
"hasauino/rrt_exploration" -> "fazildgr8/ros_autonomous_slam"
"hasauino/rrt_exploration" -> "hikashi/multi-robot-rrt-exploration-noetic"
"hasauino/rrt_exploration" -> "efc-robot/SMMR-Explore"
"hasauino/rrt_exploration" -> "RobustFieldAutonomyLab/turtlebot_exploration_3d"
"hasauino/rrt_exploration" -> "SunZezhou/Active-SLAM-with-Cartographer"
"ros-planning/navigation" -> "karlkurzer/path_planner" ["e"=1]
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "czjaixuexi/carla_ros_bridge_pnc"
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "GoGoGo13579/Planning-and-Control-based-on-Carla-and-ROS2"
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "gxf1002/ShenLanAcademy-PlanningControl"
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "6Lackiu/EMplanner_Carla"
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "casper-auto/CasperAuto"
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "zhaokun506/driving-planning"
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "Amin-Tgz/awesome-CARLA" ["e"=1]
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "guardstrikelab/carla_apollo_bridge" ["e"=1]
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "stoneman404/motion-planning-with-carla"
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "VincentWong3/automatic-driving-decision-and-planning-for-matlab"
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "MajidMoghadam2006/RL-frenet-trajectory-planning-in-CARLA" ["e"=1]
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "DerrickXuNu/Learn-Carla" ["e"=1]
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "zhangfuyang/rl_CARLA" ["e"=1]
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "Sentdex/Carla-RL" ["e"=1]
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" -> "idreesshaikh/Autonomous-Driving-in-Carla-using-Deep-Reinforcement-Learning" ["e"=1]
"TinyMPC/TinyMPC" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"zhaohaojie1998/DRL-for-Path-Planning" -> "zhaohaojie1998/Path-Planning" ["e"=1]
"zhaohaojie1998/DRL-for-Path-Planning" -> "ai-winter/python_motion_planning" ["e"=1]
"ProgramTraveler/Road-To-Autonomous-Driving" -> "CHH3213/chhRobotics_CPP"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "gotonote/Autopilot-Notes" ["e"=1]
"ProgramTraveler/Road-To-Autonomous-Driving" -> "DeepTecher/awesome-autonomous-vehicle"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "Pranav-chib/End-to-End-Autonomous-Driving" ["e"=1]
"ProgramTraveler/Road-To-Autonomous-Driving" -> "autodriving-heart/Awesome-Autonomous-Driving" ["e"=1]
"ProgramTraveler/Road-To-Autonomous-Driving" -> "CHH3213/chhRobotics"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "pparmesh/Constrained_ILQR"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "GoGoGo13579/Planning-and-Control-based-on-Carla-and-ROS2"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "czjaixuexi/carla_ros_bridge_pnc"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "HKUST-Aerial-Robotics/EPSILON"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "libai1943/CartesianPlanner"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "jchengai/gpir"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "LiJiangnanBit/path_optimizer"
"ProgramTraveler/Road-To-Autonomous-Driving" -> "gxf1002/ShenLanAcademy-PlanningControl"
"anhbantre/PersonFollowingRobot" -> "anhbantre/multi_robot_ros2"
"anhbantre/PersonFollowingRobot" -> "malwaru/person_following_robot"
"MedlarTea/OCL-RPF" -> "MedlarTea/MPF_GRR_SLT"
"MedlarTea/OCL-RPF" -> "MedlarTea/Mono-RPF"
"sbpl/sbpl" -> "ros-planning/navigation_experimental"
"sbpl/sbpl" -> "HKUST-Aerial-Robotics/grad_traj_optimization" ["e"=1]
"sbpl/sbpl" -> "ompl/ompl" ["e"=1]
"sbpl/sbpl" -> "sikang/motion_primitive_library" ["e"=1]
"sbpl/sbpl" -> "ompl/omplapp"
"sbpl/sbpl" -> "marinaKollmitz/lattice_planner"
"sbpl/sbpl" -> "ghliu/pyReedsShepp"
"sbpl/sbpl" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"sbpl/sbpl" -> "AGV-IIT-KGP/awesome-motion-planning"
"sbpl/sbpl" -> "karlkurzer/path_planner"
"sbpl/sbpl" -> "cogsys-tuebingen/gerona"
"sbpl/sbpl" -> "sikang/mpl_ros" ["e"=1]
"sbpl/sbpl" -> "rst-tu-dortmund/mpc_local_planner"
"sbpl/sbpl" -> "aurone/smpl"
"movsim/traffic-simulation-de" -> "AdaCompNUS/summit" ["e"=1]
"movsim/traffic-simulation-de" -> "chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" ["e"=1]
"NxRLab/ModernRobotics" -> "onlytailei/CppRobotics" ["e"=1]
"jmiseikis/RobotNavigation" -> "LazyFalcon/D_star_PathPlanning"
"stoneMan349/Reinforcement-learning-for-multi-AGV-pathfinding" -> "stoneMan349/reinfocement-learning-on-robotic-mobile-fulfilment-system"
"stoneMan349/Reinforcement-learning-for-multi-AGV-pathfinding" -> "Qin1143/Multi_AGV_Planner"
"ghliu/pyReedsShepp" -> "nathanlct/reeds-shepp-curves"
"ghliu/pyReedsShepp" -> "AndrewWalker/pydubins"
"ghliu/pyReedsShepp" -> "AndrewWalker/Dubins-Curves"
"jnez71/lqRRT" -> "AngeloEspinoza/kinodynamic-rrt-car-like-robot"
"jnez71/lqRRT" -> "bewimm/kinodynamic_rrt_star"
"jnez71/lqRRT" -> "ZamesNg/kinodynamic_frontend"
"jnez71/lqRRT" -> "dongliangCH/Accelerating-Kinodynamic-RRTstar-Through-Dimensionality-Reduction"
"jnez71/lqRRT" -> "shawnhanna/RRT"
"jnez71/lqRRT" -> "BijoSebastian/Kinodynamic-RRT-STAR"
"zhaohaojie1998/Path-Planning" -> "zhaohaojie1998/DRL-for-Path-Planning" ["e"=1]
"zhaohaojie1998/Path-Planning" -> "zhaohaojie1998/Grey-Wolf-Optimizer-for-Path-Planning" ["e"=1]
"zhaohaojie1998/Path-Planning" -> "szc19990412/Path-Planning"
"zhaohaojie1998/Path-Planning" -> "xuedidi/path_planning"
"zhaohaojie1998/Path-Planning" -> "ai-winter/python_motion_planning"
"zhaohaojie1998/Path-Planning" -> "Friedrich-M/Wheeled-robot-path-planning-algorithm"
"zhaohaojie1998/Path-Planning" -> "Strange-AI/frenet_path_planning"
"zhaohaojie1998/Path-Planning" -> "JORKER1755/PathPlanning" ["e"=1]
"zhaohaojie1998/Path-Planning" -> "Xuerenbujianhua/3DPathplanning" ["e"=1]
"ros-controls/ros_controllers" -> "locusrobotics/robot_navigation" ["e"=1]
"ros-controls/ros_controllers" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"ros-controls/ros_controllers" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"ros-perception/perception_pcl" -> "ros-perception/laser_filters" ["e"=1]
"ros-planning/navigation_tutorials" -> "ros-planning/navigation_experimental" ["e"=1]
"ros-planning/navigation_tutorials" -> "ros-planning/3d_navigation" ["e"=1]
"ros-planning/navigation_tutorials" -> "danielsnider/follow_waypoints" ["e"=1]
"ros-planning/navigation_tutorials" -> "gkouros/waypoint-global-planner" ["e"=1]
"ros-planning/navigation_tutorials" -> "CCNYRoboticsLab/scan_tools" ["e"=1]
"ros-planning/navigation_tutorials" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"yujinrobot/yujin_ocs" -> "yujinrobot/kobuki" ["e"=1]
"yujinrobot/yujin_ocs" -> "locusrobotics/robot_navigation"
"yujinrobot/yujin_ocs" -> "CCNYRoboticsLab/scan_tools"
"yujinrobot/yujin_ocs" -> "DLu/navigation_layers"
"yujinrobot/yujin_ocs" -> "MAPIRlab/rf2o_laser_odometry"
"yujinrobot/yujin_ocs" -> "gkouros/rsband_local_planner"
"yujinrobot/yujin_ocs" -> "wg-perception/people"
"yujinrobot/yujin_ocs" -> "GMahmoud/virtual_costmap_layer"
"yujinrobot/yujin_ocs" -> "asr-ros/asr_ftc_local_planner"
"yujinrobot/yujin_ocs" -> "ipa320/ipa_coverage_planning"
"yujinrobot/yujin_ocs" -> "AndreaCensi/csm"
"yujinrobot/yujin_ocs" -> "ros-perception/depthimage_to_laserscan"
"AndreaCensi/csm" -> "CCNYRoboticsLab/scan_tools"
"AndreaCensi/csm" -> "dejanpan/snap_map_icp"
"AndreaCensi/csm" -> "AndreaCensi/calibration"
"AndreaCensi/csm" -> "kam3k/laser_line_extraction"
"AndreaCensi/csm" -> "NKU-MobFly-Robotics/laser_scan_matcher"
"AndreaCensi/csm" -> "MAPIRlab/rf2o_laser_odometry"
"AndreaCensi/csm" -> "MegviiRobot/OdomLaserCalibraTool"
"czjaixuexi/carla_ros_bridge_pnc" -> "L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla"
"czjaixuexi/carla_ros_bridge_pnc" -> "zhaokun506/driving-planning"
"czjaixuexi/carla_ros_bridge_pnc" -> "GoGoGo13579/Planning-and-Control-based-on-Carla-and-ROS2"
"czjaixuexi/carla_ros_bridge_pnc" -> "casper-auto/CasperAuto"
"czjaixuexi/carla_ros_bridge_pnc" -> "gxf1002/ShenLanAcademy-PlanningControl"
"czjaixuexi/carla_ros_bridge_pnc" -> "casper-auto/carla_trajectory_controller"
"czjaixuexi/carla_ros_bridge_pnc" -> "reflector-li/EMplanner"
"czjaixuexi/carla_ros_bridge_pnc" -> "Raiden49/auto_drive"
"USC-ACTLab/crazyswarm" -> "qwerty35/swarm_simulator" ["e"=1]
"Mondego/dafny-synthesis" -> "sun-wendy/DafnyBench"
"bethesirius/ChosunTruck" -> "osrf/car_demo" ["e"=1]
"at-wat/neonavigation" -> "at-wat/mcl_3dl" ["e"=1]
"at-wat/neonavigation" -> "gkouros/rsband_local_planner"
"at-wat/neonavigation" -> "naturerobots/mesh_navigation" ["e"=1]
"at-wat/neonavigation" -> "ros-planning/navigation_experimental"
"at-wat/neonavigation" -> "rsasaki0109/lidar_localizer" ["e"=1]
"at-wat/neonavigation" -> "rst-tu-dortmund/mpc_local_planner"
"at-wat/neonavigation" -> "ryuichiueda/emcl" ["e"=1]
"at-wat/neonavigation" -> "iris-ua/iris_lama_ros" ["e"=1]
"at-wat/neonavigation" -> "nobleo/tracking_pid"
"at-wat/neonavigation" -> "Geonhee-LEE/mpc_ros"
"at-wat/neonavigation" -> "locusrobotics/robot_navigation"
"at-wat/neonavigation" -> "leggedrobotics/se2_navigation" ["e"=1]
"at-wat/neonavigation" -> "NaokiAkai/als_ros" ["e"=1]
"at-wat/neonavigation" -> "NaokiAkai/mcl3d_ros" ["e"=1]
"at-wat/neonavigation" -> "cogsys-tuebingen/gerona"
"MengGuo/RVO_Py_MAS" -> "carlosluis/multiagent_planning" ["e"=1]
"MengGuo/RVO_Py_MAS" -> "qwerty35/swarm_simulator" ["e"=1]
"LiJiangnanBit/path_optimizer_ilqr" -> "pparmesh/Constrained_ILQR"
"LiJiangnanBit/path_optimizer_ilqr" -> "LiJiangnanBit/path_optimizer_2"
"LiJiangnanBit/path_optimizer_ilqr" -> "Bharath2/iLQR"
"LiJiangnanBit/path_optimizer_ilqr" -> "VincentWong3/ilqr"
"LiJiangnanBit/path_optimizer_ilqr" -> "SS47816/fiss_planner"
"LiJiangnanBit/path_optimizer_ilqr" -> "PuYuuu/vehicle-interaction-decision-making" ["e"=1]
"LiJiangnanBit/path_optimizer_ilqr" -> "Grandereohb/ALTRO-iLQR"
"LiJiangnanBit/path_optimizer_ilqr" -> "libai1943/CartesianPlanner"
"LiJiangnanBit/path_optimizer_ilqr" -> "LiJiangnanBit/path_optimizer"
"LiJiangnanBit/path_optimizer_ilqr" -> "HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor"
"speedzjy/mapf_ros" -> "speedzjy/ridgeback_mapf"
"speedzjy/mapf_ros" -> "APRIL-ZJU/CL-CBS"
"speedzjy/mapf_ros" -> "whoenig/libMultiRobotPlanning"
"speedzjy/mapf_ros" -> "GavinPHR/Multi-Agent-Path-Finding"
"speedzjy/mapf_ros" -> "PathPlanning/Continuous-CBS"
"speedzjy/mapf_ros" -> "rap-lab-org/public_cppmomapf"
"speedzjy/mapf_ros" -> "LIJUNCHENG001/multi_robot_traj_planner"
"speedzjy/mapf_ros" -> "Jiaoyang-Li/CBSH2-RTC"
"speedzjy/mapf_ros" -> "nicofretti/MAPF"
"speedzjy/mapf_ros" -> "qwerty35/swarm_simulator"
"speedzjy/mapf_ros" -> "gloriyo/MAPF-ICBS"
"speedzjy/mapf_ros" -> "zijinoier/Hetero-MAPF"
"speedzjy/mapf_ros" -> "Jiaoyang-Li/MAPF-LNS2"
"speedzjy/mapf_ros" -> "GavinPHR/Space-Time-AStar"
"speedzjy/mapf_ros" -> "Jiaoyang-Li/EECBS"
"laurimi/ase_exploration" -> "paulbovbel/frontier_exploration"
"laurimi/ase_exploration" -> "hasauino/rrt_exploration"
"wg-perception/people" -> "angusleigh/leg_tracker"
"wg-perception/people" -> "spencer-project/spencer_people_tracking"
"wg-perception/people" -> "marcobecerrap/edge_leg_detector"
"wg-perception/people" -> "DLu/navigation_layers"
"wg-perception/people" -> "strands-project/strands_perception_people"
"wg-perception/people" -> "VisualComputingInstitute/2D_lidar_person_detection"
"wg-perception/people" -> "marinaKollmitz/human_aware_navigation"
"wg-perception/people" -> "tysik/obstacle_detector"
"wg-perception/people" -> "ros-planning/navigation_experimental"
"wg-perception/people" -> "yujinrobot/yujin_ocs"
"wg-perception/people" -> "gkouros/rsband_local_planner"
"wg-perception/people" -> "kam3k/laser_line_extraction"
"wg-perception/people" -> "koide3/hdl_people_tracking" ["e"=1]
"gkouros/path-smoothing-ros" -> "gkouros/rsband_local_planner"
"gkouros/path-smoothing-ros" -> "hubery05/A-start-with-B-spline"
"gkouros/path-smoothing-ros" -> "eric-heiden/grips"
"windycn/Multi-Agent-Coverage-Path-Planning-Algorithm" -> "MengHsux/deep-reinforcement-learning-for-multi-agent-coverage-path-planning-"
"engnadeau/pybotics" -> "Sarrasor/RoboticManipulators" ["e"=1]
"gkouros/rsband_local_planner" -> "alirezaahmadi/AgriBot-Local-Planner"
"gkouros/rsband_local_planner" -> "gkouros/path-smoothing-ros"
"gkouros/rsband_local_planner" -> "gkouros/reeds-shepp-paths-ros"
"gkouros/rsband_local_planner" -> "marinaKollmitz/lattice_planner"
"gkouros/rsband_local_planner" -> "at-wat/neonavigation"
"gkouros/rsband_local_planner" -> "gkouros/waypoint-global-planner"
"gkouros/rsband_local_planner" -> "rst-tu-dortmund/mpc_local_planner"
"gkouros/rsband_local_planner" -> "ros-planning/navigation_experimental"
"gkouros/rsband_local_planner" -> "srl-freiburg/srl_global_planner"
"gkouros/rsband_local_planner" -> "KavitShah1998/Autonomous_Mobile_Robot_Navigation_In_ROS"
"apennisi/rgbd_person_tracking" -> "arpesenti/peopleTracker"
"SS47816/fiss_plus_planner" -> "SS47816/fiss_planner" ["e"=1]
"open-navigation/opennav_coverage" -> "open-navigation/opennav_docking" ["e"=1]
"open-navigation/opennav_coverage" -> "Fields2Cover/Fields2Cover"
"open-navigation/opennav_coverage" -> "Fields2Cover/fields2cover_ros"
"open-navigation/opennav_coverage" -> "DataBot-Labs/hoverboard_ros2_control" ["e"=1]
"anindex/PathPlanning-ROS-Rviz" -> "hg522/PathPlanning-AStar-ROS"
"ros-planning/navigation_experimental" -> "sbpl/sbpl"
"ros-planning/navigation_experimental" -> "locusrobotics/robot_navigation"
"ros-planning/navigation_experimental" -> "rst-tu-dortmund/mpc_local_planner"
"ros-planning/navigation_experimental" -> "ros-planning/navigation_tutorials" ["e"=1]
"ros-planning/navigation_experimental" -> "gkouros/rsband_local_planner"
"ros-planning/navigation_experimental" -> "leggedrobotics/se2_navigation" ["e"=1]
"ros-planning/navigation_experimental" -> "nobleo/full_coverage_path_planner"
"ros-planning/navigation_experimental" -> "marinaKollmitz/lattice_planner"
"ros-planning/navigation_experimental" -> "naturerobots/move_base_flex" ["e"=1]
"ros-planning/navigation_experimental" -> "cogsys-tuebingen/gerona"
"ros-planning/navigation_experimental" -> "at-wat/neonavigation"
"ros-planning/navigation_experimental" -> "marinaKollmitz/human_aware_navigation"
"ros-planning/navigation_experimental" -> "alirezaahmadi/AgriBot-Local-Planner"
"ros-planning/navigation_experimental" -> "asr-ros/asr_ftc_local_planner"
"ros-planning/navigation_experimental" -> "rst-tu-dortmund/teb_local_planner_tutorials"
"ZJU-FAST-Lab/Implicit-SDF-Planner" -> "ZJU-FAST-Lab/Dftpav" ["e"=1]
"SeanZsya/tdle" -> "SeanZsya/SSLE"
"CYDXYYJ/ASAP" -> "PKU-MACDLab/IMPC-DR"
"portal-cornell/game-theoretic-forecasting-planning" -> "HKUST-JM/Local_Learning_CiLQR"
"RobustFieldAutonomyLab/turtlebot_exploration_3d" -> "mseln/aeplanner" ["e"=1]
"RobustFieldAutonomyLab/turtlebot_exploration_3d" -> "RobustFieldAutonomyLab/em_exploration" ["e"=1]
"RobustFieldAutonomyLab/turtlebot_exploration_3d" -> "RaccoonlabDev/nbv_exploration_planner" ["e"=1]
"RobustFieldAutonomyLab/turtlebot_exploration_3d" -> "laurimi/ase_exploration"
"RobustFieldAutonomyLab/turtlebot_exploration_3d" -> "RobustFieldAutonomyLab/DRL_graph_exploration" ["e"=1]
"ros-perception/laser_filters" -> "iris-ua/iris_lama_ros" ["e"=1]
"ros-perception/laser_filters" -> "kam3k/laser_line_extraction"
"ros-perception/laser_filters" -> "nobleo/tracking_pid"
"herolab-uga/ROS-SEAL" -> "hikashi/TM-RRT_exploration_Simulation"
"herolab-uga/ROS-SEAL" -> "herolab-uga/cqlite"
"marmotlab/SCRIMP" -> "Qiushi-Lin/SACHA"
"marmotlab/SCRIMP" -> "Cognitive-AI-Systems/when-to-switch" ["e"=1]
"marmotlab/SCRIMP" -> "mail-ecnu/PICO"
"marmotlab/SCRIMP" -> "ZiyuanMa/DCC"
"JuliaPOMDP/RLInterface.jl" -> "JuliaPOMDP/QMDP.jl"
"JuliaPOMDP/RLInterface.jl" -> "JuliaPOMDP/DiscreteValueIteration.jl"
"JuliaPOMDP/RLInterface.jl" -> "JuliaPOMDP/QuickPOMDPs.jl"
"manfreddiaz/awesome-autonomous-vehicles" -> "DeepTecher/awesome-autonomous-vehicle" ["e"=1]
"manfreddiaz/awesome-autonomous-vehicles" -> "zhm-real/MotionPlanning" ["e"=1]
"manfreddiaz/awesome-autonomous-vehicles" -> "DeepTecher/AutonomousVehiclePaper" ["e"=1]
"hasauino/rrt_exploration_tutorials" -> "hasauino/rrt_exploration"
"hasauino/rrt_exploration_tutorials" -> "jeshoward/turtlebot_rrt"
"hasauino/rrt_exploration_tutorials" -> "nalin1096/path_planning"
"ndrplz/self-driving-car" -> "qiaoxu123/Self-Driving-Cars" ["e"=1]
"ndrplz/self-driving-car" -> "emmjaykay/stanford_self_driving_car_code" ["e"=1]
"ndrplz/self-driving-car" -> "onlytailei/CppRobotics" ["e"=1]
"meyiao/LaserSLAM" -> "weihaotobe94/LaserSLAM"
"meyiao/LaserSLAM" -> "xiaofeng419/SLAM-2D-LIDAR-SCAN"
"meyiao/LaserSLAM" -> "Wleisure95/laser_slam"
"meyiao/LaserSLAM" -> "ydsf16/aruco_ekf_slam" ["e"=1]
"meyiao/LaserSLAM" -> "libing64/slam2d"
"meyiao/LaserSLAM" -> "ethz-asl/laser_slam" ["e"=1]
"ryanbgriffiths/ICRA2024PaperList" -> "ryanbgriffiths/IROS2024PaperList" ["e"=1]
"lmiguelvargasf/trajectory_tracking" -> "rafaelbarretorb/trajectory_tracking_control"
"lmiguelvargasf/trajectory_tracking" -> "kadupitiya/ROS-TurtleBot-PID"
"justinhj/astar-algorithm-cpp" -> "daancode/a-star"
"justinhj/astar-algorithm-cpp" -> "leethomason/MicroPather"
"justinhj/astar-algorithm-cpp" -> "zhangpanyi/a-star-algorithm"
"justinhj/astar-algorithm-cpp" -> "hjweide/pyastar2d"
"justinhj/astar-algorithm-cpp" -> "vss2sn/path_planning"
"justinhj/astar-algorithm-cpp" -> "Eurecat/astar-gridmap-2d"
"justinhj/astar-algorithm-cpp" -> "Mooophy/Path-Planning"
"jessicayung/self-driving-car-nd" -> "emmjaykay/stanford_self_driving_car_code" ["e"=1]
"PolySync/oscc" -> "osrf/car_demo" ["e"=1]
"asr-ros/asr_ftc_local_planner" -> "adrianapadilla/simple_local_planner"
"coin-or/Gravity" -> "lanl-ansi/PowerModelsSecurityConstrained.jl"
"coin-or/Gravity" -> "lanl-ansi/tutorial-grid-science"
"coin-or/Gravity" -> "ANL-CEEESA/UnitCommitment.jl" ["e"=1]
"hjweide/pyastar2d" -> "Eurecat/astar-gridmap-2d"
"namin/llm-verified-with-monte-carlo-tree-search" -> "Mondego/dafny-synthesis"
"namin/llm-verified-with-monte-carlo-tree-search" -> "ImparaAI/monte-carlo-tree-search"
"mpatacchiola/dissecting-reinforcement-learning" -> "sawcordwell/pymdptoolbox" ["e"=1]
"Kei18/lacam3" -> "Kei18/lacam2"
"Kei18/lacam3" -> "Kei18/lacam"
"Kei18/lacam3" -> "Kei18/pibt2"
"Kei18/lacam3" -> "Kei18/mapf-visualizer"
"Kei18/lacam3" -> "Kei18/pypibt"
"ros-perception/depthimage_to_laserscan" -> "ros-perception/pointcloud_to_laserscan" ["e"=1]
"ros-perception/depthimage_to_laserscan" -> "iralabdisco/ira_laser_tools"
"ros-perception/depthimage_to_laserscan" -> "yujinrobot/yujin_ocs"
"ros-perception/depthimage_to_laserscan" -> "paulbovbel/frontier_exploration"
"ros-perception/depthimage_to_laserscan" -> "CCNYRoboticsLab/scan_tools"
"ros-perception/depthimage_to_laserscan" -> "GMahmoud/virtual_costmap_layer"
"AtsushiSakai/PyAdvancedControl" -> "AtsushiSakai/MATLABRobotics" ["e"=1]
"AtsushiSakai/PyAdvancedControl" -> "YukunXia/Carla_iLQR_MPC" ["e"=1]
"AtsushiSakai/PyAdvancedControl" -> "AtsushiSakai/HybridAStarTrailer" ["e"=1]
"AtsushiSakai/PyAdvancedControl" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"AtsushiSakai/PyAdvancedControl" -> "XiaojingGeorgeZhang/OBCA" ["e"=1]
"at-wat/mcl_3dl" -> "at-wat/neonavigation" ["e"=1]
"sikang/DecompUtil" -> "ZJU-FAST-Lab/Dftpav" ["e"=1]
"Raiden49/dubins_curve" -> "Raiden49/reeds-shepp_curve"
"ai4co/eph-mapf" -> "kaist-silab/HiMAP"
"leethomason/MicroPather" -> "justinhj/astar-algorithm-cpp"
"leethomason/MicroPather" -> "Sahnvour/PathFinder"
"rst-tu-dortmund/costmap_prohibition_layer" -> "GMahmoud/virtual_costmap_layer"
"CPFL/Autoware-Manuals" -> "osrf/car_demo" ["e"=1]
"quantumelixir/pathfinding" -> "Sahnvour/PathFinder"
"lassepe/peters2024ral-code" -> "zhu-edward/DGSQP"
"ros-planning/3d_navigation" -> "ros-planning/navigation_experimental"
"nobodyczcz/Guided-PIBT" -> "lunjohnzhang/ggo_public"
"nobodyczcz/Guided-PIBT" -> "DiligentPanda/MAPF-LRR2023"
"DiligentPanda/MAPF-LRR2023" -> "nobodyczcz/Guided-PIBT"
"lunjohnzhang/ggo_public" -> "nobodyczcz/Guided-PIBT"
"bit-lsj/HPHS" -> "SeanZsya/tdle"
"chenzhike110/Semantic-Motion-Retargeting" -> "chenzhike110/Arm-Robotics-RL"
"chenzhike110/Semantic-Motion-Retargeting" -> "chenzhike110/Fast-tracking"
"Raiden49/reeds-shepp_curve" -> "Raiden49/dubins_curve"
"motianxiuhua/EMplanner" -> "mpt0816/Cilqr"
"yangfuyuan/dstar_global_planner" -> "WLwind/a_better_star"
"yangfuyuan/dstar_global_planner" -> "WLwind/segment_global_planner"
"ahq1993/p-rrtstar" -> "ahq1993/ib-rrtstar"
"rishabh1b/RealTimePathPlanning" -> "nalin1096/path_planning"
"rishabh1b/RealTimePathPlanning" -> "ayushgaud/path_planning" ["e"=1]
"rishabh1b/RealTimePathPlanning" -> "Mooophy/Path-Planning"
"rishabh1b/RealTimePathPlanning" -> "medalotte/sampling-based-planners"
"rishabh1b/RealTimePathPlanning" -> "olzhas/rrt_toolbox"
"rishabh1b/RealTimePathPlanning" -> "RoboJackets/rrt"
"rishabh1b/RealTimePathPlanning" -> "jeshoward/turtlebot_rrt"
"rishabh1b/RealTimePathPlanning" -> "ethz-asl/mav_active_3d_planning" ["e"=1]
"rishabh1b/RealTimePathPlanning" -> "LiJiangnanBit/path_optimizer"
"rishabh1b/RealTimePathPlanning" -> "hasauino/rrt_exploration"
"rishabh1b/RealTimePathPlanning" -> "ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning"
"MAPIRlab/rf2o_laser_odometry" -> "CCNYRoboticsLab/scan_tools"
"MAPIRlab/rf2o_laser_odometry" -> "MAPIRlab/srf_laser_odometry"
"MAPIRlab/rf2o_laser_odometry" -> "MegviiRobot/OdomLaserCalibraTool"
"MAPIRlab/rf2o_laser_odometry" -> "kam3k/laser_line_extraction"
"MAPIRlab/rf2o_laser_odometry" -> "AndreaCensi/csm"
"MAPIRlab/rf2o_laser_odometry" -> "ros-planning/navigation_experimental"
"MAPIRlab/rf2o_laser_odometry" -> "MAPIRlab/mapir-ros-pkgs"
"MAPIRlab/rf2o_laser_odometry" -> "MigVega/Ogm2Pgbm"
"MAPIRlab/rf2o_laser_odometry" -> "locusrobotics/robot_navigation"
"MAPIRlab/rf2o_laser_odometry" -> "artivis/laser_odometry"
"MAPIRlab/rf2o_laser_odometry" -> "yujinrobot/yujin_ocs"
"MAPIRlab/rf2o_laser_odometry" -> "tysik/obstacle_detector"
"MAPIRlab/rf2o_laser_odometry" -> "naturerobots/move_base_flex" ["e"=1]
"MAPIRlab/rf2o_laser_odometry" -> "NKU-MobFly-Robotics/laser_scan_matcher"
"MAPIRlab/rf2o_laser_odometry" -> "carlosmccosta/dynamic_robot_localization" ["e"=1]
"GoGoGo13579/Planning-and-Control-based-on-Carla-and-ROS2" -> "czjaixuexi/carla_ros_bridge_pnc"
"GoGoGo13579/Planning-and-Control-based-on-Carla-and-ROS2" -> "Raiden49/auto_drive"
"GoGoGo13579/Planning-and-Control-based-on-Carla-and-ROS2" -> "L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla"
"NKU-MobFly-Robotics/LRAE" -> "bit-lsj/HPHS" ["e"=1]
"peiyu-cui/uav_motion_planning" -> "ZamesNg/kinodynamic_frontend"
"peiyu-cui/uav_motion_planning" -> "QingZhuanya/corridor_Bspline_optimization" ["e"=1]
"ryanbgriffiths/IROS2024PaperList" -> "bit-lsj/HPHS"
"sun-wendy/DafnyBench" -> "Mondego/dafny-synthesis"
"Cognitive-AI-Systems/MAPF-GPT" -> "ai4co/eph-mapf" ["e"=1]
"AdaCompNUS/sarsop" -> "AdaCompNUS/despot"
"AdaCompNUS/sarsop" -> "trey0/zmdp"
"AdaCompNUS/sarsop" -> "RDLLab/oppt"
"AdaCompNUS/sarsop" -> "pemami4911/POMDPy"
"AdaCompNUS/sarsop" -> "bhy/mcvi"
"AdaCompNUS/sarsop" -> "JuliaPOMDP/POMCPOW.jl"
"orocos/orocos-bayesian-filtering" -> "ros-gbp/bfl-release"
"orocos/orocos-bayesian-filtering" -> "AndreaCensi/calibration"
"JuliaPOMDP/ParticleFilters.jl" -> "JuliaPOMDP/RLInterface.jl"
"JuliaPOMDP/ParticleFilters.jl" -> "JuliaPOMDP/MCTS.jl"
"zegangYang/PSO_PathPlaningNew" -> "sumanismcse/Path-Planning"
"zegangYang/PSO_PathPlaningNew" -> "greenbtong/Path_Planning_Algorithm"
"ayushgaud/path_planning" -> "nalin1096/path_planning" ["e"=1]
"ayushgaud/path_planning" -> "rishabh1b/RealTimePathPlanning" ["e"=1]
"ayushgaud/path_planning" -> "jeshoward/turtlebot_rrt" ["e"=1]
"abcyzj/MeshRet" -> "chenzhike110/Semantic-Motion-Retargeting" ["e"=1]
"PathPlanning/AA-SIPP-m" -> "PathPlanning/SuboptimalSIPP"
"PathPlanning/AA-SIPP-m" -> "PathPlanning/Continuous-CBS"
"PathPlanning/AA-SIPP-m" -> "Jiaoyang-Li/MAPF-LNS"
"PathPlanning/AA-SIPP-m" -> "Jiaoyang-Li/RHCR"
"PathPlanning/AA-SIPP-m" -> "Kei18/pibt"
"PathPlanning/AA-SIPP-m" -> "Kei18/pibt2"
"PathPlanning/AA-SIPP-m" -> "Jiaoyang-Li/CBSH2-RTC"
"PathPlanning/AA-SIPP-m" -> "Jiaoyang-Li/PBS"
"PathPlanning/AA-SIPP-m" -> "Jiaoyang-Li/EECBS"
"JuliaPOMDP/POMCPOW.jl" -> "zsunberg/ContinuousPOMDPTreeSearchExperiments.jl"
"trey0/zmdp" -> "AdaCompNUS/sarsop"
"jbradberry/boardgame-socketserver" -> "jbradberry/boardgame-socketplayer"
"zsunberg/ContinuousPOMDPTreeSearchExperiments.jl" -> "JuliaPOMDP/POMCPOW.jl"
"Raiden49/auto_drive" -> "Raiden49/reeds-shepp_curve"
"jbradberry/boardgame-socketplayer" -> "jbradberry/boardgame-socketserver"
"Sahnvour/PathFinder" -> "quantumelixir/pathfinding"
"CognitiveAISystems/pogema" -> "Kei18/pypibt" ["e"=1]
"artivis/laser_odometry" -> "MAPIRlab/srf_laser_odometry"
"sumimakito/A-star" -> "Rikora/A-star"
"rdl-algorithm/tapir" -> "RDLLab/oppt"
"malayandi/Tiger-Problem-POMDP" -> "rmoehn/piglet_pbvi"
"mrsd16teamd/iLQR_onboard" -> "TGlad/ILQR"
"sychaichangkun/ROS-Academy-for-Beginners" -> "onlytailei/CppRobotics" ["e"=1]
"slam-code/SLAM" -> "MegviiRobot/OdomLaserCalibraTool" ["e"=1]
"slam-code/SLAM" -> "Wleisure95/laser_slam" ["e"=1]
"slam-code/SLAM" -> "xiangli0608/Creating-2D-laser-slam-from-scratch" ["e"=1]
"motion-planning/rrt-algorithms" -> "olzhas/rrt_toolbox"
"motion-planning/rrt-algorithms" -> "RoboJackets/rrt"
"motion-planning/rrt-algorithms" -> "adnanmunawar/matlab-rrt-variants"
"motion-planning/rrt-algorithms" -> "ai-winter/python_motion_planning"
"motion-planning/rrt-algorithms" -> "ompl/ompl" ["e"=1]
"motion-planning/rrt-algorithms" -> "Mesywang/Motion-Planning-Algorithms"
"motion-planning/rrt-algorithms" -> "hasauino/rrt_exploration"
"motion-planning/rrt-algorithms" -> "ayushgaud/path_planning" ["e"=1]
"motion-planning/rrt-algorithms" -> "caelan/motion-planners" ["e"=1]
"motion-planning/rrt-algorithms" -> "rlnav/motion_planning"
"motion-planning/rrt-algorithms" -> "caelan/pybullet-planning" ["e"=1]
"motion-planning/rrt-algorithms" -> "rishabh1b/RealTimePathPlanning"
"motion-planning/rrt-algorithms" -> "zhm-real/PathPlanning" ["e"=1]
"motion-planning/rrt-algorithms" -> "Huang0035/RRT-and-RRT-star-plus-APF"
"motion-planning/rrt-algorithms" -> "moveit/moveit" ["e"=1]
"osrf/car_demo" -> "emmjaykay/stanford_self_driving_car_code"
"osrf/car_demo" -> "marinaKollmitz/lattice_planner"
"osrf/car_demo" -> "hbanzhaf/steering_functions"
"osrf/car_demo" -> "karlkurzer/path_planner"
"osrf/car_demo" -> "XiaojingGeorgeZhang/OBCA"
"osrf/car_demo" -> "AutoRally/autorally" ["e"=1]
"osrf/car_demo" -> "PickNikRobotics/rviz_visual_tools" ["e"=1]
"osrf/car_demo" -> "osrf/docker_images" ["e"=1]
"osrf/car_demo" -> "osrf/citysim"
"osrf/car_demo" -> "CPFL/Autoware-Manuals" ["e"=1]
"osrf/car_demo" -> "AtsushiSakai/HybridAStarTrailer"
"osrf/car_demo" -> "teddyluo/hybrid-a-star-annotation"
"osrf/car_demo" -> "lgsvl/simulator" ["e"=1]
"osrf/car_demo" -> "yukkysaito/vehicle_sim" ["e"=1]
"osrf/car_demo" -> "onlytailei/gym_ped_sim" ["e"=1]
"tysik/obstacle_detector" -> "kam3k/laser_line_extraction"
"tysik/obstacle_detector" -> "spencer-project/spencer_people_tracking"
"tysik/obstacle_detector" -> "praveen-palanisamy/multiple-object-tracking-lidar" ["e"=1]
"tysik/obstacle_detector" -> "naturerobots/move_base_flex" ["e"=1]
"tysik/obstacle_detector" -> "kostaskonkk/datmo" ["e"=1]
"tysik/obstacle_detector" -> "at-wat/mcl_3dl" ["e"=1]
"tysik/obstacle_detector" -> "wg-perception/people"
"tysik/obstacle_detector" -> "at-wat/neonavigation"
"tysik/obstacle_detector" -> "gkouros/rsband_local_planner"
"tysik/obstacle_detector" -> "ros-planning/navigation_experimental"
"tysik/obstacle_detector" -> "MAPIRlab/rf2o_laser_odometry"
"tysik/obstacle_detector" -> "rst-tu-dortmund/teb_local_planner" ["e"=1]
"tysik/obstacle_detector" -> "Geonhee-LEE/mpc_ros"
"tysik/obstacle_detector" -> "VisualComputingInstitute/2D_lidar_person_detection"
"tysik/obstacle_detector" -> "nobleo/full_coverage_path_planner"
"ahundt/awesome-robotics" -> "onlytailei/CppRobotics" ["e"=1]
"mithi/robotics-coursework" -> "onlytailei/CppRobotics" ["e"=1]
"yrlu/quadrotor" -> "Mesywang/Motion-Planning-Algorithms" ["e"=1]
"sikang/mpl_ros" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"OpenPTrack/open_ptrack_v2" -> "OpenPTrack/open_ptrack"
"OpenPTrack/open_ptrack_v2" -> "OpenPTrack/OPT_TouchDesignerComponents"
"OpenPTrack/open_ptrack_v2" -> "marketto89/open_ptrack"
"aleju/self-driving-truck" -> "emmjaykay/stanford_self_driving_car_code" ["e"=1]
"aleju/self-driving-truck" -> "osrf/car_demo" ["e"=1]
"jeremy-shannon/CarND-Path-Planning-Project" -> "AndrewGls/CarND-Path-Planning-Project"
"jeremy-shannon/CarND-Path-Planning-Project" -> "hayoung-kim/udacity-path-planning"
"pirobot/rbx1" -> "CCNYRoboticsLab/scan_tools" ["e"=1]
"JunshengFu/Model-Predictive-Control" -> "tonyxxq/MPC-Control" ["e"=1]
"norlab-ulaval/libnabo" -> "AndreaCensi/csm" ["e"=1]
"MNewBie/PCL-Notes" -> "xiangli0608/Creating-2D-laser-slam-from-scratch" ["e"=1]
"tobegit3hub/ml_implementation" -> "haroldsultan/MCTS"
"tobegit3hub/ml_implementation" -> "int8/monte-carlo-tree-search"
"tobegit3hub/ml_implementation" -> "hrpan/tetris_mcts" ["e"=1]
"tobegit3hub/ml_implementation" -> "arrti/mcts"
"danielsnider/follow_waypoints" -> "nickcharron/waypoint_nav"
"danielsnider/follow_waypoints" -> "cristian-frincu/navigation_waypoints_scripts"
"danielsnider/follow_waypoints" -> "danielsnider/gps_goal"
"danielsnider/follow_waypoints" -> "ros-planning/navigation_experimental"
"danielsnider/follow_waypoints" -> "ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros"
"danielsnider/follow_waypoints" -> "ros-geographic-info/open_street_map" ["e"=1]
"danielsnider/follow_waypoints" -> "larics/pure_pursuit"
"danielsnider/follow_waypoints" -> "gkouros/waypoint-global-planner"
"slam-code/cartographer" -> "AndreaCensi/csm" ["e"=1]
"emmjaykay/stanford_self_driving_car_code" -> "osrf/car_demo"
"emmjaykay/stanford_self_driving_car_code" -> "AtsushiSakai/HybridAStarTrailer"
"emmjaykay/stanford_self_driving_car_code" -> "XiaojingGeorgeZhang/OBCA"
"emmjaykay/stanford_self_driving_car_code" -> "manfreddiaz/awesome-autonomous-vehicles" ["e"=1]
"emmjaykay/stanford_self_driving_car_code" -> "tejus-gupta/hybrid-astar-planner"
"emmjaykay/stanford_self_driving_car_code" -> "yangmingustb/Papers"
"emmjaykay/stanford_self_driving_car_code" -> "autonomousdrivingkr/Awesome-Autonomous-Driving" ["e"=1]
"emmjaykay/stanford_self_driving_car_code" -> "AutoLidarPerception/segmenters_lib" ["e"=1]
"emmjaykay/stanford_self_driving_car_code" -> "DeepTecher/AutonomousVehiclePaper"
"emmjaykay/stanford_self_driving_car_code" -> "marinaKollmitz/lattice_planner"
"emmjaykay/stanford_self_driving_car_code" -> "philbort/awesome-self-driving-cars" ["e"=1]
"emmjaykay/stanford_self_driving_car_code" -> "karlkurzer/path_planner"
"emmjaykay/stanford_self_driving_car_code" -> "Hypha-ROS/hypharos_minicar"
"emmjaykay/stanford_self_driving_car_code" -> "ndrplz/self-driving-car" ["e"=1]
"emmjaykay/stanford_self_driving_car_code" -> "jessicayung/self-driving-car-nd" ["e"=1]
"marsauto/europilot" -> "emmjaykay/stanford_self_driving_car_code" ["e"=1]
"marsauto/europilot" -> "osrf/car_demo" ["e"=1]
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "Sarrasor/RoboticManipulators"
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "mathworks-robotics/trajectory-planning-robot-manipulators"
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "HobbySingh/Path-Planning-Algorithms"
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "shamilmamedov/dynamic_calibration" ["e"=1]
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "GasserElAzab/6-DOF-DLR-robot-simulation-in-Matlab-Simulink"
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "Mesywang/Motion-Planning-Algorithms"
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "SergiosKar/Robotic-Arm"
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "LazyFalcon/D_star_PathPlanning"
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "yzhao334/Efficient-Trajectory-Optimization-for-Robot-Motion-Planning--Examples"
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "s7ev3n/MPC_Code" ["e"=1]
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "TUM-ICS/BIRDy" ["e"=1]
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "mathworks-robotics/awesome-matlab-robotics" ["e"=1]
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "olzhas/rrt_toolbox"
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "petercorke/robotics-toolbox-matlab" ["e"=1]
"YashBansod/Robotics-Planning-Dynamics-and-Control" -> "herryCccc/Mobile-robot-path-planning"
"chrismolony/books" -> "yangmingustb/planning_books_1" ["e"=1]
"Hypha-ROS/hypharos_racecar" -> "Hypha-ROS/hypharos_minicar" ["e"=1]
"Hypha-ROS/hypharos_racecar" -> "MAPIRlab/rf2o_laser_odometry" ["e"=1]
"SergiosKar/Robotic-Arm" -> "7dj7/Robot_Dynamics_Lagrangian_formulation"
"cogsys-tuebingen/gerona" -> "ros-planning/navigation_experimental"
"cogsys-tuebingen/gerona" -> "marinaKollmitz/lattice_planner"
"cogsys-tuebingen/gerona" -> "gkouros/rsband_local_planner"
"cogsys-tuebingen/gerona" -> "at-wat/neonavigation"
"cogsys-tuebingen/gerona" -> "leggedrobotics/se2_navigation" ["e"=1]
"cogsys-tuebingen/gerona" -> "OrebroUniversity/navigation_oru-release" ["e"=1]
"cogsys-tuebingen/gerona" -> "locusrobotics/robot_navigation"
"cogsys-tuebingen/gerona" -> "rst-tu-dortmund/mpc_local_planner"
"cogsys-tuebingen/gerona" -> "marinaKollmitz/human_aware_navigation"
"cogsys-tuebingen/gerona" -> "Hypha-ROS/hypharos_minicar"
"cogsys-tuebingen/gerona" -> "ipab-slmc/exotica" ["e"=1]
"cogsys-tuebingen/gerona" -> "nobleo/full_coverage_path_planner"
"cogsys-tuebingen/gerona" -> "naturerobots/mesh_navigation" ["e"=1]
"cogsys-tuebingen/gerona" -> "naturerobots/move_base_flex" ["e"=1]
"cogsys-tuebingen/gerona" -> "jizhang-cmu/ground_based_autonomy_basic" ["e"=1]
"eleurent/rl-agents" -> "chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" ["e"=1]
"eleurent/rl-agents" -> "bark-simulator/bark" ["e"=1]
"eleurent/rl-agents" -> "jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" ["e"=1]
"naturerobots/move_base_flex" -> "locusrobotics/robot_navigation" ["e"=1]
"naturerobots/move_base_flex" -> "nobleo/full_coverage_path_planner" ["e"=1]
"naturerobots/move_base_flex" -> "ros-planning/navigation_experimental" ["e"=1]
"naturerobots/move_base_flex" -> "rst-tu-dortmund/mpc_local_planner" ["e"=1]
"naturerobots/move_base_flex" -> "nobleo/tracking_pid" ["e"=1]
"naturerobots/move_base_flex" -> "tysik/obstacle_detector" ["e"=1]
"naturerobots/move_base_flex" -> "Geonhee-LEE/mpc_ros" ["e"=1]
"mdeyo/d-star-lite" -> "Sollimann/Dstar-lite-pathplanner"
"mdeyo/d-star-lite" -> "ArekSredzki/dstar-lite"
"mdeyo/d-star-lite" -> "Mooophy/Path-Planning"
"mdeyo/d-star-lite" -> "mds1/path-planning"
"mdeyo/d-star-lite" -> "avgaydashenko/d_star"
"symao/minimum_snap_trajectory_generation" -> "Mesywang/Motion-Planning-Algorithms" ["e"=1]
"larics/pure_pursuit" -> "larics/lattice_navigation_demos"
"larics/pure_pursuit" -> "larics/lattice_planner"
"larics/pure_pursuit" -> "jmaye/pure-pursuit-controller-ros"
"larics/pure_pursuit" -> "kadupitiya/ROS-TurtleBot-PID"
"larics/pure_pursuit" -> "Hypha-ROS/hypharos_minicar"
"larics/pure_pursuit" -> "RobotnikAutomation/agvs"
"larics/pure_pursuit" -> "gkouros/rsband_local_planner"
"larics/pure_pursuit" -> "leggedrobotics/se2_navigation" ["e"=1]
"hbanzhaf/steering_functions" -> "XiaojingGeorgeZhang/H-OBCA"
"hbanzhaf/steering_functions" -> "LiJiangnanBit/path_optimizer_2"
"hbanzhaf/steering_functions" -> "leggedrobotics/se2_navigation" ["e"=1]
"hbanzhaf/steering_functions" -> "LiJiangnanBit/path_optimizer"
"hbanzhaf/steering_functions" -> "marinaKollmitz/lattice_planner"
"hbanzhaf/steering_functions" -> "KumarRobotics/conformal_lattice_planner"
"hbanzhaf/steering_functions" -> "karlkurzer/path_planner"
"hbanzhaf/steering_functions" -> "gerdl/scc_paths"
"hbanzhaf/steering_functions" -> "gkouros/rsband_local_planner"
"hbanzhaf/steering_functions" -> "rst-tu-dortmund/mpc_local_planner"
"onlytailei/gym_ped_sim" -> "marinaKollmitz/human_aware_navigation" ["e"=1]
"onlytailei/gym_ped_sim" -> "angusleigh/leg_tracker" ["e"=1]
"JuliaPOMDP/POMDPGallery.jl" -> "JuliaPOMDP/BasicPOMCP.jl"
"JuliaPOMDP/POMDPGallery.jl" -> "sisl/JuliaPackageTemplate.jl"
"AndrewGls/CarND-Path-Planning-Project" -> "jeremy-shannon/CarND-Path-Planning-Project"
"JuliaPOMDP/BasicPOMCP.jl" -> "JuliaPOMDP/MCTS.jl"
"yge58/collaborative_a_star_pathfinding" -> "JuiceFV/Cooperative_Pathfinding"
"yge58/collaborative_a_star_pathfinding" -> "jcontrerasleyton/MAPF"
"adrianapadilla/simple_local_planner" -> "adrianapadilla/bubble_local_planner"
"adrianapadilla/simple_local_planner" -> "asr-ros/asr_ftc_local_planner"
"adrianapadilla/simple_local_planner" -> "alirezaahmadi/AgriBot-Local-Planner"
"HKUST-Aerial-Robotics/Fast-Planner" ["l"="60.357,13.829", "c"=334]
"karlkurzer/path_planner" ["l"="61.59,13.424"]
"YannZyl/Apollo-Note" ["l"="61.52,13.372"]
"daohu527/dig-into-apollo" ["l"="61.72,12.452", "c"=774]
"yangmingustb/Papers" ["l"="61.561,13.385"]
"HKUST-Aerial-Robotics/EPSILON" ["l"="61.529,13.343"]
"cedricxie/apollo_perception_ros" ["l"="64.332,12.546", "c"=1121]
"teddyluo/hybrid-a-star-annotation" ["l"="61.598,13.404"]
"pparmesh/Constrained_ILQR" ["l"="61.537,13.327"]
"wanghuohuo0716/hybrid_A_star" ["l"="61.607,13.38"]
"intel/ad-rss-lib" ["l"="61.456,13.324"]
"AdaCompNUS/despot" ["l"="61.388,13.277"]
"daohu527/awesome-self-driving-car" ["l"="61.703,12.495", "c"=774]
"LiJiangnanBit/path_optimizer" ["l"="61.574,13.409"]
"DeepTecher/AutonomousVehiclePaper" ["l"="61.508,13.4"]
"AutoLidarPerception/segmenters_lib" ["l"="64.345,12.527", "c"=1121]
"AtsushiSakai/HybridAStarTrailer" ["l"="61.581,13.444"]
"zhm-real/MotionPlanning" ["l"="61.651,13.429"]
"onlytailei/CppRobotics" ["l"="61.627,13.451"]
"DeepTecher/awesome-autonomous-vehicle" ["l"="61.566,13.349"]
"chauvinSimon/My_Bibliography_for_Research_on_Autonomous_Driving" ["l"="61.438,13.293"]
"bark-simulator/bark" ["l"="61.461,13.299"]
"jiachenli94/Awesome-Decision-Making-Reinforcement-Learning" ["l"="61.447,13.27"]
"MajidMoghadam2006/RL-frenet-trajectory-planning-in-CARLA" ["l"="62.494,12.377", "c"=461]
"autonomousvision/tuplan_garage" ["l"="63.261,12.49", "c"=241]
"MCZhi/GameFormer" ["l"="63.299,12.492", "c"=241]
"Amin-Tgz/awesome-CARLA" ["l"="62.533,12.313", "c"=461]
"eleurent/rl-agents" ["l"="62.419,12.31", "c"=461]
"rohanchandra30/Spectral-Trajectory-and-Behavior-Prediction" ["l"="63.428,12.612", "c"=241]
"sisl/ngsim_env" ["l"="63.489,12.507", "c"=241]
"YukunXia/Carla_iLQR_MPC" ["l"="61.51,13.288"]
"praveen-palanisamy/macad-gym" ["l"="62.455,12.309", "c"=461]
"HKUST-Aerial-Robotics/eudm_planner" ["l"="61.485,13.311"]
"SteveMacenski/spatio_temporal_voxel_layer" ["l"="60.385,12.553", "c"=286]
"locusrobotics/robot_navigation" ["l"="61.638,13.638"]
"rst-tu-dortmund/mpc_local_planner" ["l"="61.628,13.532"]
"katetolstaya/gym-flock" ["l"="62.124,13.376"]
"katetolstaya/multiagent_gnn_policies" ["l"="62.104,13.391"]
"katetolstaya/graph_rl" ["l"="62.101,13.376"]
"microsoft/AutonomousDrivingCookbook" ["l"="61.636,12.457", "c"=774]
"emmjaykay/stanford_self_driving_car_code" ["l"="61.55,13.471"]
"AtsushiSakai/MATLABRobotics" ["l"="61.68,13.39"]
"petercorke/robotics-toolbox-matlab" ["l"="58.782,12.668", "c"=299]
"AtsushiSakai/PyAdvancedControl" ["l"="61.43,14.987", "c"=480]
"LazyFalcon/D_star_PathPlanning" ["l"="61.768,13.393"]
"mathworks-robotics/awesome-matlab-robotics" ["l"="-5.545,23.229", "c"=960]
"YashBansod/Robotics-Planning-Dynamics-and-Control" ["l"="61.8,13.317"]
"rst-tu-dortmund/teb_local_planner" ["l"="60.315,12.563", "c"=286]
"yrlu/quadrotor" ["l"="60.257,13.946", "c"=334]
"Mesywang/Motion-Planning-Algorithms" ["l"="61.74,13.34"]
"pptacher/probabilistic_robotics" ["l"="59.432,10.951", "c"=87]
"ros-navigation/navigation2" ["l"="60.386,12.596", "c"=286]
"Dheenu-kasinathan/Robotics-Arm-Manipulator" ["l"="61.756,13.226"]
"RShawshank/Manipulator-obstacle-avoidance-algorithm-" ["l"="61.743,13.27"]
"Wleisure95/laser_slam" ["l"="61.533,14.048"]
"sunmiaozju/shenlan-laser-slam-2d" ["l"="61.543,14.006"]
"smzztx/shenlanxueyuan_laser_slam_2d" ["l"="61.509,14.069"]
"manfreddiaz/awesome-autonomous-vehicles" ["l"="61.632,12.49", "c"=774]
"beedotkiran/Lidar_For_AD_references" ["l"="64.381,12.497", "c"=1121]
"nutonomy/second.pytorch" ["l"="64.548,11.016", "c"=61]
"autonomousdrivingkr/Awesome-Autonomous-Driving" ["l"="61.674,12.515", "c"=774]
"kujason/avod" ["l"="64.571,10.966", "c"=61]
"XiaojingGeorgeZhang/H-OBCA" ["l"="61.54,13.386"]
"traveller59/second.pytorch" ["l"="64.523,11.013", "c"=61]
"bostondiditeam/MV3D" ["l"="64.529,10.941", "c"=61]
"MarvinTeichmann/MultiNet" ["l"="53.573,30.788", "c"=155]
"HKUST-Aerial-Robotics/Stereo-RCNN" ["l"="64.656,10.998", "c"=61]
"ros-planning/robot_pose_ekf" ["l"="58.513,11.112", "c"=506]
"ros-perception/laser_filters" ["l"="61.612,13.741"]
"orocos/orocos-bayesian-filtering" ["l"="61.519,13.933"]
"CCNYRoboticsLab/scan_tools" ["l"="61.578,13.773"]
"Vinohith/Self_Driving_Car_specialization" ["l"="62.382,12.5", "c"=461]
"qiaoxu123/Self-Driving-Cars" ["l"="61.543,13.427"]
"locuslab/mpc.pytorch" ["l"="61.372,14.968", "c"=480]
"anassinator/ilqr" ["l"="61.542,13.277"]
"ProgramTraveler/Road-To-Autonomous-Driving" ["l"="61.581,13.317"]
"jiachenli94/Awesome-Interaction-Aware-Trajectory-Prediction" ["l"="63.38,12.589", "c"=241]
"Hardy-Uint/awesome-Autopilot-algorithm" ["l"="65.406,4.733", "c"=415]
"lgsvl/simulator" ["l"="61.677,12.459", "c"=774]
"alexliniger/MPCC" ["l"="61.516,14.975", "c"=480]
"Geonhee-LEE/mpc_ros" ["l"="61.611,13.477"]
"XiaojingGeorgeZhang/OBCA" ["l"="61.56,13.419"]
"sawcordwell/pymdptoolbox" ["l"="61.284,13.23"]
"coverdrive/MDP-DP-RL" ["l"="61.252,13.211"]
"sachinbiradar9/Markov-Decision-Processes" ["l"="61.228,13.208"]
"pemami4911/POMDPy" ["l"="61.308,13.22"]
"Svalorzen/AI-Toolbox" ["l"="61.336,13.244"]
"JuliaPOMDP/POMDPs.jl" ["l"="61.279,13.262"]
"joschu/modular_rl" ["l"="57.394,18.195", "c"=45]
"AdaCompNUS/qmdp-net" ["l"="61.258,13.238"]
"AdaCompNUS/sarsop" ["l"="61.32,13.256"]
"rlpy/rlpy" ["l"="57.194,17.807", "c"=45]
"infer-actively/pymdp" ["l"="60.916,34.39", "c"=441]
"BlackHC/mdp" ["l"="61.247,13.187"]
"pushkar/ABAGAIL" ["l"="57.29,17.589", "c"=45]
"h2r/pomdp-py" ["l"="61.306,13.241"]
"akifumi-wachi-4/safe_near_optimal_mdp" ["l"="61.165,15.115", "c"=480]
"zwq2018/AI_UAV" ["l"="60.766,9.589", "c"=636]
"Gongyihang/Motion-Planning" ["l"="61.621,13.342"]
"whoenig/libMultiRobotPlanning" ["l"="61.895,13.456"]
"atb033/multi_agent_path_planning" ["l"="61.852,13.456"]
"APRIL-ZJU/CL-CBS" ["l"="61.9,13.437"]
"GavinPHR/Multi-Agent-Path-Finding" ["l"="61.948,13.455"]
"speedzjy/mapf_ros" ["l"="61.912,13.466"]
"PathPlanning/Continuous-CBS" ["l"="61.919,13.436"]
"LIJUNCHENG001/multi_robot_traj_planner" ["l"="61.809,13.459"]
"gsartoretti/PRIMAL" ["l"="61.978,13.451"]
"Jiaoyang-Li/RHCR" ["l"="61.955,13.426"]
"mit-acl/mader" ["l"="60.316,13.816", "c"=334]
"tuw-robotics/tuw_multi_robot" ["l"="61.78,13.496"]
"Kei18/mapf-IR" ["l"="61.944,13.434"]
"Jiaoyang-Li/CBSH2-RTC" ["l"="61.94,13.423"]
"qwerty35/swarm_simulator" ["l"="61.882,13.496"]
"Jiaoyang-Li/EECBS" ["l"="61.95,13.413"]
"PathPlanning/AA-SIPP-m" ["l"="61.926,13.409"]
"leggedrobotics/se2_navigation" ["l"="60.451,13.739", "c"=334]
"daenny/collvoid" ["l"="59.624,14.86", "c"=1017]
"nobleo/full_coverage_path_planner" ["l"="61.678,13.602"]
"ros-planning/navigation_experimental" ["l"="61.618,13.633"]
"tanujthakkar/Voronoi-Based-Hybrid-Astar" ["l"="61.656,13.451"]
"marinaKollmitz/lattice_planner" ["l"="61.607,13.547"]
"FedericoPecora/coordination_oru" ["l"="60.458,12.961", "c"=286]
"hrnr/m-explore" ["l"="60.54,13.734", "c"=334]
"rlnav/motion_planning" ["l"="61.743,13.561"]
"18alantom/CoveragePathPlanning" ["l"="61.763,13.649"]
"rlnav/adaptive_swarm" ["l"="61.811,13.564"]
"ethz-asl/polygon_coverage_planning" ["l"="61.723,13.623"]
"matssteinweg/Multi-Purpose-MPC" ["l"="61.461,15.046", "c"=480]
"Greenzie/boustrophedon_planner" ["l"="61.707,13.613"]
"ethz-asl/mav_active_3d_planning" ["l"="60.412,13.847", "c"=334]
"jazzalin/area-coverage-nav" ["l"="61.785,13.623"]
"rodriguesrenato/coverage-path-planning" ["l"="61.78,13.667"]
"dawnjeanh/motionplanning" ["l"="61.676,13.517"]
"athakapo/DARP" ["l"="61.767,13.634"]
"ntnu-arl/mbplanner_ros" ["l"="60.442,13.823", "c"=334]
"irvingvasquez/ocpp" ["l"="61.764,13.666"]
"xuedidi/path_planning" ["l"="61.747,13.385"]
"szc19990412/Path-Planning" ["l"="61.777,13.372"]
"HobbySingh/Path-Planning-Algorithms" ["l"="61.784,13.356"]
"zhaohaojie1998/Grey-Wolf-Optimizer-for-Path-Planning" ["l"="60.452,14.954", "c"=1885]
"Strange-AI/frenet_path_planning" ["l"="61.656,13.402"]
"herryCccc/Mobile-robot-path-planning" ["l"="61.802,13.356"]
"paulbovbel/frontier_exploration" ["l"="61.513,13.66"]
"hasauino/rrt_exploration" ["l"="61.515,13.565"]
"laurimi/ase_exploration" ["l"="61.5,13.624"]
"caochao39/tare_planner" ["l"="60.475,13.824", "c"=334]
"ethz-asl/nbvplanner" ["l"="60.499,13.834", "c"=334]
"HanwenCao/Frontier_Exploration" ["l"="61.449,13.711"]
"ros-perception/slam_karto" ["l"="60.256,12.446", "c"=286]
"tpepels/turtlebot_slam" ["l"="61.472,13.69"]
"RobustFieldAutonomyLab/turtlebot_exploration_3d" ["l"="61.483,13.638"]
"hasauino/rrt_exploration_tutorials" ["l"="61.539,13.575"]
"medalotte/sampling-based-planners" ["l"="61.491,13.456"]
"ahq1993/p-rrtstar" ["l"="61.418,13.471"]
"balcilar/Multi-Robot-Path-Planning-on-Graphs" ["l"="62.131,13.515"]
"chendiqian/Bachelor_Thesis" ["l"="62.15,13.502"]
"anushrii/Multi-Robot-Path-Planning" ["l"="62.16,13.526"]
"WangHanfu/Multi-agent-Path-Finding-in-Warehouse" ["l"="62.077,13.506"]
"yusuf1478/multi_robot_path_planning_isca" ["l"="62.12,13.504"]
"huangxianqun/multi_robot_path_planning" ["l"="62.165,13.514"]
"ANYbotics/grid_map" ["l"="60.339,12.615", "c"=286]
"jslee02/awesome-robotics-libraries" ["l"="58.915,12.682", "c"=299]
"ethz-adrl/control-toolbox" ["l"="61.461,14.923", "c"=480]
"giacomo-b/CppRobotics" ["l"="61.54,13.503"]
"kiloreux/awesome-robotics" ["l"="58.905,12.638", "c"=299]
"Ly0n/awesome-robotic-tooling" ["l"="58.996,12.657", "c"=299]
"LyapunovJingci/Warehouse_Robot_Path_Planning" ["l"="62.031,13.507"]
"zhm-real/PathPlanning" ["l"="61.842,12.405", "c"=774]
"Acmece/rl-collision-avoidance" ["l"="59.699,14.892", "c"=1017]
"GavinPHR/Space-Time-AStar" ["l"="61.936,13.449"]
"kostaskonkk/datmo" ["l"="64.299,12.56", "c"=1121]
"VisualComputingInstitute/2D_lidar_person_detection" ["l"="61.646,13.78"]
"LucasWEIchen/lidar_tracking" ["l"="61.639,13.839"]
"tysik/obstacle_detector" ["l"="61.632,13.704"]
"fjp/frenet" ["l"="61.492,13.332"]
"mubowen/Optimal-Trajectory-generation-for-Lane-Changing-in-Frenet-Frame" ["l"="61.588,15.173", "c"=480]
"erdos-project/frenet_optimal_trajectory_planner" ["l"="61.475,13.287"]
"ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver" ["l"="61.513,13.351"]
"libai1943/CartesianPlanner" ["l"="61.547,13.345"]
"mubowen/Baidu-Apollo-control-algorithm" ["l"="61.573,15.135", "c"=480]
"twxjyg/Hybrid-A-Star-U-Turn-Solution" ["l"="61.561,13.368"]
"HKUST-Aerial-Robotics/spatiotemporal_semantic_corridor" ["l"="61.515,13.329"]
"SS47816/fiss_planner" ["l"="61.51,13.316"]
"KumarRobotics/conformal_lattice_planner" ["l"="61.493,13.38"]
"LiJiangnanBit/path_optimizer_2" ["l"="61.547,13.361"]
"ndrplz/self-driving-car" ["l"="61.595,12.517", "c"=774]
"daniel-s-ingram/self_driving_cars_specialization" ["l"="62.365,12.529", "c"=461]
"koide3/monocular_person_following" ["l"="61.697,13.864"]
"sijanz/robust_people_follower" ["l"="61.693,13.891"]
"IvLabs/person_following_bot" ["l"="59.109,17.686", "c"=169]
"MedlarTea/MPF_GRR_SLT" ["l"="61.712,13.927"]
"malwaru/person_following_robot" ["l"="61.72,13.886"]
"anhbantre/PersonFollowingRobot" ["l"="61.73,13.902"]
"rauwuckl/ros_simple_follower" ["l"="61.709,13.905"]
"angusleigh/leg_tracker" ["l"="61.672,13.788"]
"koide3/hdl_people_tracking" ["l"="64.291,12.501", "c"=1121]
"koide3/monocular_people_tracking" ["l"="61.688,13.911"]
"arrtvv852/Qlearning_AGVpath" ["l"="62.137,13.554"]
"wusean1997/HRL_AGV_Navigation_MTON" ["l"="62.187,13.573"]
"arrtvv852/ML-for-AGV-dispatching-module" ["l"="62.161,13.571"]
"MichielDD/Free-motion-planning-of-multiple-AGVs" ["l"="62.168,13.555"]
"adityajain07/Path-Planning-Algorithms" ["l"="61.746,13.244"]
"greenbtong/Path_Planning_Algorithm" ["l"="61.751,13.173"]
"ompl/ompl" ["l"="61.406,16.435", "c"=184]
"ompl/omplapp" ["l"="61.543,13.6"]
"sbpl/sbpl" ["l"="61.566,13.562"]
"LLNL/hiop" ["l"="63.141,-1.373", "c"=175]
"Argonne-National-Laboratory/PIPS" ["l"="60.929,13.587"]
"fzi-forschungszentrum-informatik/Lanelet2" ["l"="62.774,12.163", "c"=461]
"OpenPTrack/open_ptrack" ["l"="61.737,13.852"]
"OpenPTrack/open_ptrack_v2" ["l"="61.778,13.886"]
"spencer-project/spencer_people_tracking" ["l"="61.663,13.769"]
"stimulant/ampm" ["l"="-22.58,-24.979", "c"=101]
"abryden/PCL_Kinect2Kinfu_LargeScale" ["l"="61.773,13.919"]
"qqfly/how-to-learn-robotics" ["l"="60.09,12.579", "c"=286]
"adnanmunawar/matlab-rrt-variants" ["l"="61.724,13.333"]
"olzhas/rrt_toolbox" ["l"="61.726,13.372"]
"IngaVS/informed-RRT" ["l"="61.75,13.311"]
"emreozanalkan/RRT" ["l"="61.756,13.353"]
"Huang0035/RRT-and-RRT-star-plus-APF" ["l"="61.768,13.251"]
"howard789/RRT_star_smart" ["l"="61.731,13.302"]
"motion-planning/rrt-algorithms" ["l"="61.685,13.419"]
"wrld/ROS_RRT" ["l"="61.574,13.511"]
"sychen-sjtu/RRT" ["l"="61.848,13.209"]
"Farama-Foundation/HighwayEnv" ["l"="62.369,12.278", "c"=461]
"anagabandi/nn_dynamics" ["l"="59.27,17.687", "c"=169]
"neka-nat/ddp-gym" ["l"="61.547,13.167"]
"eleurent/phd-bibliography" ["l"="61.457,14.963", "c"=480]
"DLu/navigation_layers" ["l"="61.618,13.766"]
"wg-perception/people" ["l"="61.638,13.743"]
"rst-tu-dortmund/costmap_prohibition_layer" ["l"="61.557,13.78"]
"GMahmoud/virtual_costmap_layer" ["l"="61.567,13.758"]
"Shunichi09/PythonLinearNonlinearControl" ["l"="61.435,14.965", "c"=480]
"locuslab/differentiable-mpc" ["l"="61.312,14.965", "c"=480]
"tud-amr/mrca-mav" ["l"="61.917,13.575"]
"star2dust/paper-simulation" ["l"="60.389,14.717", "c"=1885]
"HAOLI-TUKL/Multi_Robots_DMPC" ["l"="61.889,13.555"]
"marmotlab/PRIMAL2" ["l"="62.002,13.423"]
"gavincangan/multiagent-pathfinding" ["l"="62.001,13.47"]
"chenzhike110/MAPF-solver" ["l"="62.011,13.484"]
"mail-ecnu/PICO" ["l"="62.022,13.437"]
"ZiyuanMa/DHC" ["l"="62.052,13.433"]
"thomyphan/rl4mapf" ["l"="62.022,13.459"]
"proroklab/magat_pathplanning" ["l"="62.052,13.405"]
"danielsnider/gps_goal" ["l"="61.54,13.708"]
"bsb808/geonav_transform" ["l"="61.532,13.726"]
"locusrobotics/fuse" ["l"="59.075,12.657", "c"=299]
"methylDragon/ros-sensor-fusion-tutorial" ["l"="60.405,12.524", "c"=286]
"nickcharron/waypoint_nav" ["l"="61.583,13.681"]
"ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros" ["l"="61.557,13.707"]
"kadupitiya/ROS-TurtleBot-PID" ["l"="61.512,13.639"]
"lmiguelvargasf/trajectory_tracking" ["l"="61.464,13.668"]
"larics/pure_pursuit" ["l"="61.546,13.638"]
"MegviiRobot/OdomLaserCalibraTool" ["l"="61.584,13.846"]
"MegviiRobot/CamOdomCalibraTool" ["l"="59.639,10.948", "c"=87]
"MegviiRobot/CamLaserCalibraTool" ["l"="57.989,9.923", "c"=142]
"AndreaCensi/calibration" ["l"="61.566,13.88"]
"kam3k/laser_line_extraction" ["l"="61.601,13.787"]
"MAPIRlab/rf2o_laser_odometry" ["l"="61.593,13.765"]
"TouchDeeper/VIW-Fusion" ["l"="59.67,11.08", "c"=87]
"xiangli0608/Creating-2D-laser-slam-from-scratch" ["l"="61.581,13.907"]
"ydsf16/aruco_ekf_slam" ["l"="59.591,10.891", "c"=87]
"hyye/lio-mapping" ["l"="58.09,9.938", "c"=142]
"ShihanWang/reflector_ekf_slam" ["l"="61.557,13.898"]
"tejus-gupta/hybrid-astar-planner" ["l"="61.598,13.445"]
"zm0612/Hybrid_A_Star" ["l"="61.617,13.396"]
"linyicheng1/hybrid_astar" ["l"="61.641,13.39"]
"amslabtech/state_lattice_planner" ["l"="61.618,13.509"]
"ZJU-FAST-Lab/Dftpav" ["l"="61.581,13.365"]
"deepdrive/deepdrive" ["l"="61.653,12.482", "c"=774]
"Hypha-ROS/hypharos_minicar" ["l"="61.591,13.572"]
"Hypha-ROS/hypharos_racecar" ["l"="61.601,15.35", "c"=480]
"yinzixuan126/mpc_path_follower_ros" ["l"="61.56,13.624"]
"gkouros/rsband_local_planner" ["l"="61.61,13.594"]
"udacity/CarND-MPC-Project" ["l"="61.611,12.694", "c"=774]
"gkouros/waypoint-global-planner" ["l"="61.601,13.644"]
"cogsys-tuebingen/gerona" ["l"="61.627,13.594"]
"sikang/mpl_ros" ["l"="60.302,13.871", "c"=334]
"OrebroUniversity/navigation_oru-release" ["l"="60.447,12.937", "c"=286]
"MADPToolbox/MADP" ["l"="61.303,13.179"]
"namoshizun/PyPOMDP" ["l"="61.325,13.212"]
"trey0/zmdp" ["l"="61.322,13.274"]
"Quuxplusone/from-scratch" ["l"="21.966,16.204", "c"=516]
"Omegastick/pytorch-cpp-rl" ["l"="53.33,32.937", "c"=251]
"jmacglashan/burlap" ["l"="57.212,17.662", "c"=45]
"icsl-Jeon/traj_gen" ["l"="60.204,13.867", "c"=334]
"snape/RVO2" ["l"="59.68,14.83", "c"=1017]
"PathPlanning/ORCA-algorithm" ["l"="61.963,13.358"]
"aurora-opensource/xviz" ["l"="62.681,12.213", "c"=461]
"paulyehtw/Lane-Keeping-Assist-on-CARLA" ["l"="62.453,12.439", "c"=461]
"casper-auto/carla_trajectory_controller" ["l"="61.61,13.198"]
"peterWon/CleaningRobot" ["l"="61.703,13.598"]
"li-haojia/Clean-robot-turtlebot3" ["l"="61.683,13.626"]
"hjr553199215/SLAM-Clean-Robot-Path-Coverage-in-ROS" ["l"="61.723,13.609"]
"ipa320/ipa_coverage_planning" ["l"="61.703,13.627"]
"ipa-rmb/autopnp" ["l"="61.737,13.609"]
"RicheyHuang/BoustrophedonCellularDecompositionPathPlanning" ["l"="61.743,13.626"]
"RicheyHuang/CoveragePlanner" ["l"="61.733,13.638"]
"nalin1096/path_planning" ["l"="61.598,13.52"]
"jeshoward/turtlebot_rrt" ["l"="61.544,13.546"]
"Mayavan/RRT-star-path-planning-with-turtlebot" ["l"="61.486,13.543"]
"rafaelbarretorb/rrt_star_global_planner" ["l"="61.533,13.558"]
"srl-freiburg/srl_global_planner" ["l"="61.583,13.593"]
"ayushgaud/path_planning" ["l"="60.255,13.912", "c"=334]
"longjianquan/add--planner" ["l"="61.533,13.59"]
"Zhi29/RRTstar-planner-for-ROS-navigation" ["l"="61.498,13.549"]
"vss2sn/path_planning" ["l"="61.568,13.437"]
"hourenyu/--original--Trajectory-optimization-based-on-Bezier-polynomial-motion-planning-" ["l"="61.588,13.389"]
"Mesywang/Astar-JPS-Algorithm" ["l"="60.135,13.85", "c"=334]
"rishabh1b/RealTimePathPlanning" ["l"="61.598,13.46"]
"mit-acl/faster" ["l"="60.354,13.849", "c"=334]
"palmieri/srl_dstar_lite" ["l"="61.466,13.22"]
"TixiaoShan/lexicographic_planning" ["l"="61.672,13.46"]
"HuangCongQing/ROS" ["l"="60.096,12.612", "c"=286]
"moribots/motion_planning" ["l"="61.578,13.285"]
"CHH3213/chhRobotics_CPP" ["l"="61.607,13.356"]
"mohammadasghari/dqn-multi-agent-rl" ["l"="57.829,18.309", "c"=45]
"sumitrj/ConnectedQ-Multi-agent-Reinforcement-Learning-Algorithm" ["l"="62.07,13.55"]
"rookie7777/Path-planning" ["l"="63.609,12.465", "c"=241]
"ChenBohan/Robotics-Cooperative-Path-Planning-03-Hybrid-A-Star-Trajectory-Planning" ["l"="61.55,13.402"]
"tommy1900/Path-Planning-Frenet-Frame-Optimal-Trajectory-Generation-JMT" ["l"="61.458,13.197"]
"uoip/g2opy" ["l"="59.457,10.959", "c"=87]
"JeffLIrion/python-graphslam" ["l"="61.549,14.253"]
"jianzhuozhuTHU/MPC-D-CBF" ["l"="61.308,15.001", "c"=480]
"at-wat/neonavigation" ["l"="61.629,13.612"]
"Bharath2/iLQR" ["l"="61.532,13.291"]
"kazuotani14/iLQR" ["l"="61.527,13.259"]
"HJReachability/ilqgames" ["l"="61.506,13.266"]
"RoboticExplorationLab/TrajectoryOptimization.jl" ["l"="61.462,14.723", "c"=480]
"RoboticExplorationLab/Altro.jl" ["l"="61.489,14.673", "c"=480]
"LiJiangnanBit/path_optimizer_ilqr" ["l"="61.55,13.316"]
"navigator8972/pylqr" ["l"="61.543,13.205"]
"optimusride/altro-cpp" ["l"="61.509,14.665", "c"=480]
"aurora-opensource/streetscape.gl" ["l"="62.704,12.179", "c"=461]
"pyoscx/scenariogeneration" ["l"="62.627,12.176", "c"=461]
"esmini/esmini" ["l"="62.606,12.187", "c"=461]
"openMSL/sl-3-1-osc-alks-scenarios" ["l"="62.613,12.151", "c"=461]
"Tsinghua-MARS-Lab/DenseTNT" ["l"="63.34,12.56", "c"=241]
"AdaCompNUS/summit" ["l"="61.417,13.281"]
"erdos-project/pylot" ["l"="62.569,12.294", "c"=461]
"cjy1992/interp-e2e-driving" ["l"="62.505,12.303", "c"=461]
"tonyxxq/MPC-Control" ["l"="61.639,13.224"]
"gxf1002/ShenLanAcademy-PlanningControl" ["l"="61.615,13.278"]
"nathanlct/reeds-shepp-curves" ["l"="61.502,13.481"]
"ghliu/pyReedsShepp" ["l"="61.5,13.509"]
"zwkcoding/car_geometric_planner" ["l"="61.472,13.484"]
"RajPShinde/Hybrid-A-Star" ["l"="61.53,13.453"]
"zhm-real/CurvesGenerator" ["l"="61.513,13.448"]
"merschformann/RAWSim-O" ["l"="61.981,13.47"]
"ai4co/eph-mapf" ["l"="62.048,13.46"]
"marmotlab/SCRIMP" ["l"="62.038,13.444"]
"Le0nX/ModernRoboticsCpp" ["l"="61.307,16.411", "c"=184]
"MKJia/ROS-navigation-RRT" ["l"="61.563,13.543"]
"coverdrive/technical-documents" ["l"="61.214,13.184"]
"TikhonJelvis/RL-book" ["l"="-9.012,12.961", "c"=105]
"chronoxor/CppCommon" ["l"="-35.394,-1.981", "c"=8]
"danielsnider/follow_waypoints" ["l"="61.56,13.682"]
"husky/husky" ["l"="60.371,12.531", "c"=286]
"ros-drivers/nmea_navsat_driver" ["l"="59.292,12.484", "c"=299]
"naturerobots/mesh_navigation" ["l"="60.485,13.703", "c"=334]
"cra-ros-pkg/robot_localization" ["l"="60.352,12.563", "c"=286]
"nobleo/rviz_satellite" ["l"="59.232,12.502", "c"=299]
"ros-planning/3d_navigation" ["l"="61.603,13.699"]
"asr-ros/asr_ftc_local_planner" ["l"="61.597,13.628"]
"nobleo/tracking_pid" ["l"="61.644,13.662"]
"frontw/voronoi_planner" ["l"="61.574,13.641"]
"robosoft-ai/SMACC" ["l"="59.178,12.685", "c"=299]
"zhaohaojie1998/Path-Planning" ["l"="61.734,13.415"]
"NeXTzhao/planning" ["l"="61.598,13.284"]
"sichkar-valentyn/Reinforcement_Learning_in_Python" ["l"="60.274,14.205", "c"=334]
"Fields2Cover/Fields2Cover" ["l"="61.709,13.648"]
"RJJxp/CoveragePlanning" ["l"="61.757,13.62"]
"HongbiaoZ/autonomous_exploration_development_environment" ["l"="60.486,13.799", "c"=334]
"jizhang-cmu/ground_based_autonomy_basic" ["l"="60.471,13.777", "c"=334]
"jhlenes/complete_coverage" ["l"="60.649,13.425", "c"=1053]
"KOTOKORURU/odometry_calibration" ["l"="61.57,13.935"]
"urosolia/RacingLMPC" ["l"="61.484,15.038", "c"=480]
"zhaoxrthu/DQN_of_DWA_matlab" ["l"="61.784,13.408"]
"oz182/3D-Navigation---DWA-and-A-" ["l"="61.761,13.373"]
"DeepDuke/DWA-Simulation" ["l"="61.766,13.444"]
"JuliaReinforcementLearning/ReinforcementLearning.jl" ["l"="21.906,16.699", "c"=77]
"srl-freiburg/pedsim_ros" ["l"="59.734,14.854", "c"=1017]
"marinaKollmitz/human_aware_navigation" ["l"="61.634,13.678"]
"yangmingustb/planning_books_1" ["l"="61.625,13.413"]
"yangmingustb/planning_books_2" ["l"="61.661,13.38"]
"yangmingustb/Local-Planner" ["l"="61.611,13.426"]
"Boyang--Li/Motion-Planning-Course" ["l"="61.69,13.339"]
"Habrador/Self-driving-vehicle" ["l"="61.57,13.46"]
"hbanzhaf/steering_functions" ["l"="61.544,13.455"]
"jhan15/dubins_path_planning" ["l"="61.598,13.495"]
"int8/monte-carlo-tree-search" ["l"="61.164,13.093"]
"haroldsultan/MCTS" ["l"="61.146,13.056"]
"benedekrozemberczki/awesome-monte-carlo-tree-search-papers" ["l"="52.779,15.784", "c"=100]
"PetterS/monte-carlo-tree-search" ["l"="58.434,17.192", "c"=803]
"tobegit3hub/ml_implementation" ["l"="61.122,13.078"]
"pbsinclair42/MCTS" ["l"="61.147,13.028"]
"jbradberry/mcts" ["l"="61.121,13.027"]
"int8/gomcts" ["l"="61.157,13.12"]
"ImparaAI/monte-carlo-tree-search" ["l"="61.074,13.051"]
"hildensia/mcts" ["l"="61.129,13.045"]
"masouduut94/MCTS-agent-python" ["l"="61.112,13.11"]
"junxiaosong/AlphaZero_Gomoku" ["l"="58.528,17.177", "c"=803]
"hrpan/tetris_mcts" ["l"="23.511,14.904", "c"=728]
"cryer/monte-carlo-tree-search" ["l"="61.136,13.111"]
"bark-simulator/bark-ml" ["l"="61.431,13.258"]
"mjxu96/carlaviz" ["l"="62.609,12.244", "c"=461]
"bark-simulator/planner-mcts" ["l"="63.18,12.309", "c"=241]
"jchengai/gpir" ["l"="61.526,13.31"]
"Iftimie/ChauffeurNet" ["l"="62.437,12.119", "c"=461]
"mit-acl/cadrl_ros" ["l"="59.709,14.907", "c"=1017]
"HKUST-Aerial-Robotics/Btraj" ["l"="60.254,13.875", "c"=334]
"HKUST-Aerial-Robotics/grad_traj_optimization" ["l"="60.266,13.862", "c"=334]
"zhaokun506/parking" ["l"="61.566,13.322"]
"NKU-MobFly-Robotics/laser-line-segment" ["l"="61.567,13.827"]
"MAPIRlab/srf_laser_odometry" ["l"="61.549,13.802"]
"NKU-MobFly-Robotics/laser_scan_matcher" ["l"="61.571,13.809"]
"shannon112/awesome-ros-mobile-robot" ["l"="58.957,12.695", "c"=299]
"hatem-darweesh/assuremappingtools" ["l"="62.74,12.204", "c"=461]
"sisl/PedestrianAvoidancePOMDP.jl" ["l"="63.682,12.308", "c"=241]
"AdaCompNUS/context-pomdp" ["l"="61.397,13.255"]
"DavidLining/3D_PathPlanner" ["l"="61.462,12.981"]
"mds1/path-planning" ["l"="61.461,13.051"]
"yahsiuhsieh/path-planning-algorithms" ["l"="61.451,12.959"]
"danielesartori/3D-grid-path-planning" ["l"="61.475,12.944"]
"ejmahler/SplineLibrary" ["l"="61.34,13.467"]
"bgrimstad/splinter" ["l"="61.279,13.473"]
"msteinbeck/tinyspline" ["l"="61.364,-0.106", "c"=606]
"andrewwillmott/splines-lib" ["l"="-22.087,-25.412", "c"=101]
"snsinfu/cxx-spline" ["l"="61.318,13.487"]
"ttk592/spline" ["l"="61.442,13.43"]
"ebertolazzi/Splines" ["l"="61.293,13.499"]
"ayawaya2014/APF_Code" ["l"="61.818,13.336"]
"Yaaximus/genetic-algorithm-path-planning" ["l"="61.805,13.088"]
"Yaaximus/robotics-python" ["l"="61.815,13.097"]
"Yaaximus/artificial-potential-field" ["l"="61.829,13.091"]
"Yaaximus/artificial-potential-field-matlab" ["l"="61.805,13.118"]
"d3sm0/gym_pomdp" ["l"="61.235,13.237"]
"stweigand/gym-pomdp-wrappers" ["l"="61.207,13.229"]
"realkushagrakhare/3D_Path_Planning" ["l"="61.441,12.929"]
"gstavrinos/GA_for_Multi-Goal_3D_Occupancy_Grid_Path_Planning" ["l"="61.432,12.903"]
"sunmiaozju/smartcar" ["l"="57.955,9.851", "c"=142]
"AprilRobotics/apriltag_ros" ["l"="59.351,10.72", "c"=87]
"Slamtec/rplidar_ros" ["l"="60.346,12.489", "c"=286]
"tesseract-robotics/trajopt" ["l"="61.426,16.468", "c"=184]
"yzhao334/Efficient-Trajectory-Optimization-for-Robot-Motion-Planning--Examples" ["l"="61.879,13.258"]
"ChenBohan/Robotics-Path-Planning-03-Hybrid-A-Star" ["l"="61.489,13.412"]
"eric-heiden/grips" ["l"="61.685,13.546"]
"linxigjs/path_smoother" ["l"="61.655,13.526"]
"gkouros/path-smoothing-ros" ["l"="61.669,13.566"]
"WJTung/GA-TSPCPP" ["l"="61.783,13.644"]
"KunHanKH/Comple-Coverage-Path-PLanning-Based-on-Cell-Desomposition" ["l"="61.794,13.652"]
"sbochkar/coverage_path_planning" ["l"="61.828,13.646"]
"reso1/MSTC_Star" ["l"="61.8,13.673"]
"ShuiXinYun/Path_Plan" ["l"="61.836,13.131"]
"vampcoder/Artificial-Potential-Field" ["l"="61.852,13.092"]
"vampcoder/Hybrid-Artificial-Potential-Field-A-star-Planning" ["l"="61.87,13.095"]
"MingyangLiu1995-s/A-hybrid-path-planning-algorithm-based-on-APF-and-Astar" ["l"="61.879,13.117"]
"nccvector/aritificial-potential-field" ["l"="61.845,13.068"]
"mn270/Robot_path_planning" ["l"="61.858,13.114"]
"liuxuexun/Artificial-Potential-Field" ["l"="61.809,13.167"]
"naderAsadi/Optimal-Path-Planning-Deep-Reinforcement-Learning" ["l"="60.303,14.257", "c"=334]
"surya9teja/3D-Artificial-Potential-Field" ["l"="61.804,13.182"]
"zzuwz/Artificial-Potential-Field" ["l"="61.814,13.136"]
"JianmingTONG/Artificial_Potential_Field_MultiTarget" ["l"="61.798,13.143"]
"Forrest-Z/mpc_waypoint_tracking_controller" ["l"="61.573,13.662"]
"intel/ros_object_analytics" ["l"="64.372,-2.777", "c"=1153]
"strands-project/strands_perception_people" ["l"="61.655,13.799"]
"enginbaglayici/ConflictBasedSearch" ["l"="61.961,13.445"]
"Jiaoyang-Li/CBSH2" ["l"="61.965,13.43"]
"cristianbretti/warehouse_MAPF" ["l"="62.032,13.474"]
"bwwu/MAPF" ["l"="62.031,13.488"]
"mchtalkn/MAPF_CBS" ["l"="62.005,13.504"]
"APLA-Toolbox/pymapf" ["l"="62.002,13.451"]
"nkuwenjian/voronoi_planner" ["l"="61.637,13.575"]
"alirezaahmadi/AgriBot-Local-Planner" ["l"="61.615,13.575"]
"wuhaoran996/openRobotics" ["l"="61.809,13.281"]
"mathworks-robotics/trajectory-planning-robot-manipulators" ["l"="61.852,13.27"]
"mws262/MATLABImpedanceControlExample" ["l"="60.458,11.863", "c"=632]
"Ys-Jia/Q-Six_axis-Robotic_Arm" ["l"="61.819,13.241"]
"huchunxu/ros_21_tutorials" ["l"="60.135,12.576", "c"=286]
"nccvector/raytracer-python" ["l"="61.862,13.041"]
"nccvector/Genetic-Algorithm-For-Feature-Reduction" ["l"="61.842,13.045"]
"nccvector/raytracer-opengl" ["l"="61.855,13.051"]
"nccvector/Electro-Myography-EMG-Dataset" ["l"="61.849,13.034"]
"saifullah3396/Constrained-Minimum-Time-Cubic-Splines-for-Trajectory-Planning" ["l"="61.916,13.242"]
"ubi-agni/STP" ["l"="61.955,13.216"]
"kosmastsk/thesis" ["l"="61.818,13.613"]
"KhMustafa/Risk-aware-contingency-planning-with-multi-modal-predictions" ["l"="63.264,12.375", "c"=241]
"brilee/python_uct" ["l"="61.145,12.986"]
"lmb-freiburg/rgbd-pose3d" ["l"="31.185,29.505", "c"=723]
"marketto89/open_ptrack" ["l"="61.811,13.902"]
"naturerobots/move_base_flex" ["l"="60.509,13.712", "c"=334]
"yujinrobot/yujin_ocs" ["l"="61.607,13.719"]
"iris-ua/iris_lama_ros" ["l"="59.167,12.57", "c"=299]
"ros-controls/ros_controllers" ["l"="60.872,11.838", "c"=632]
"Botao-Hu/Dstar-lite-on-ROS-Turtlebot" ["l"="61.43,13.169"]
"hassanmehmud/ROS-Turtlebot3" ["l"="61.384,13.115"]
"GeorgePik/POMCP" ["l"="61.308,13.201"]
"AdaCompNUS/hyp-despot" ["l"="61.366,13.24"]
"yangyou95/POMDP_PBVI_solver" ["l"="61.333,13.179"]
"rmoehn/piglet_pbvi" ["l"="61.315,13.194"]
"carlosluis/multiagent_planning" ["l"="61.902,13.539"]
"qwerty35/lsc_dr_planner" ["l"="61.921,13.528"]
"qwerty35/lsc_planner" ["l"="61.897,13.517"]
"mit-acl/minvo" ["l"="60.308,13.752", "c"=334]
"whoenig/multi-robot-trajectory-planning" ["l"="61.852,13.492"]
"carlosluis/online_dmpc" ["l"="61.878,13.521"]
"AndreaCensi/csm" ["l"="61.588,13.817"]
"dejanpan/snap_map_icp" ["l"="61.543,13.854"]
"zjw11525/MyRobot" ["l"="61.967,13.096"]
"OwenLee666/7DoF_robot" ["l"="61.919,13.144"]
"xuuyann/RobotLearningCode" ["l"="61.994,13.067"]
"varyshare/easy_slam_tutorial" ["l"="59.705,11.183", "c"=87]
"hayoung-kim/udacity-path-planning" ["l"="61.42,13.071"]
"jeremy-shannon/CarND-Path-Planning-Project" ["l"="61.401,13.039"]
"kirilcvetkov92/Path-planning" ["l"="61.41,13.008"]
"alice-st/DARP" ["l"="61.804,13.662"]
"savvas-ap/mCPP-optimized-DARP" ["l"="61.811,13.646"]
"CourierLo/TMSTC-Star" ["l"="61.825,13.67"]
"Ipiano/coverage-planning" ["l"="61.773,13.616"]
"savvas-ap/cpp-simulated-evaluations" ["l"="61.804,13.633"]
"aurone/smpl" ["l"="61.472,13.589"]
"shohinm/parallel_search" ["l"="61.441,13.598"]
"RoboticExplorationLab/Algames.jl" ["l"="61.491,13.212"]
"chenyx09/belief-planning" ["l"="63.265,12.388", "c"=241]
"JuliaGameTheoreticPlanning/iLQGames.jl" ["l"="61.512,13.147"]
"ControlTrees/icra2021" ["l"="63.283,12.369", "c"=241]
"labicon/dp-ilqr" ["l"="61.483,13.233"]
"ZhaiMen-Hub/DecisionPlanning" ["l"="63.272,12.36", "c"=241]
"HKUST-Aerial-Robotics/MIND" ["l"="63.274,12.413", "c"=241]
"simon-lc/AlgamesDriving.jl" ["l"="61.499,13.226"]
"AndrewWalker/pydubins" ["l"="61.481,13.503"]
"FelicienC/RRT-Dubins" ["l"="61.519,13.503"]
"mattbradley/dash" ["l"="62.749,12.087", "c"=461]
"rgbdemo/rgbdemo" ["l"="61.804,13.971"]
"rgbdemo/nestk" ["l"="61.819,14.002"]
"sanchithaseshadri/PathPlanningAstar" ["l"="61.346,13.088"]
"hg522/PathPlanning-AStar-ROS" ["l"="61.332,13.066"]
"anindex/PathPlanning-ROS-Rviz" ["l"="61.34,13.052"]
"uenota/cpp_uav" ["l"="61.846,13.644"]
"chethanr98/CPP_UAV" ["l"="61.875,13.652"]
"cvar-upm/multi_uav_test_area_coverage" ["l"="61.879,13.666"]
"wangweike123/Full-coverage-path-planning-based-on-spanningtree-and-A-star" ["l"="61.79,13.678"]
"JonasVervloet/RL-Coverage-Planner" ["l"="61.78,13.686"]
"Ankitvm/Coverage_Path_Planning-" ["l"="61.777,13.707"]
"AndrewWalker/Dubins-Curves" ["l"="61.519,13.47"]
"gieseanw/Dubins" ["l"="61.458,13.495"]
"EwingKang/Dubins-Curve-For-MATLAB" ["l"="61.451,13.475"]
"dagoodma/dppl_code" ["l"="61.434,13.495"]
"OpenSLAM-org/openslam_gmapping" ["l"="60.232,12.473", "c"=286]
"iralabdisco/ira_laser_tools" ["l"="61.58,13.737"]
"ros-perception/depthimage_to_laserscan" ["l"="61.556,13.739"]
"rst-tu-dortmund/teb_local_planner_tutorials" ["l"="61.597,13.659"]
"larics/lattice_navigation_demos" ["l"="61.539,13.62"]
"larics/lattice_planner" ["l"="61.564,13.597"]
"balcilar/RobotPathPlanning" ["l"="61.829,13.383"]
"ShivamChourey/MDP_Path_Planning" ["l"="61.856,13.371"]
"rahul-sb/RRTx" ["l"="61.758,13.481"]
"chahatdeep/rrt_dynamic" ["l"="61.768,13.587"]
"HaoQChen/map_server" ["l"="61.481,13.907"]
"shamengjun/scan_map_icp" ["l"="61.515,13.88"]
"MajidMoghadam2006/frenet-trajectory-planning-framework" ["l"="61.397,12.975"]
"mech0ctopus/rrt-global-planner" ["l"="61.476,13.564"]
"jrabel/rrt_planner" ["l"="61.492,13.565"]
"KavitShah1998/Autonomous_Mobile_Robot_Navigation_In_ROS" ["l"="61.561,13.58"]
"hubery05/rrt_star_global_planner" ["l"="61.491,13.577"]
"robinvista/Mathematica" ["l"="61.645,13.371"]
"DFKI-NI/mir_robot" ["l"="61.668,13.677"]
"PathPlanning/ORCAStarROS" ["l"="61.978,13.329"]
"harish1696/d-orca" ["l"="59.641,14.78", "c"=1017]
"omron-sinicx/ctrm" ["l"="62.004,13.316"]
"VisualComputingInstitute/DROW" ["l"="61.668,13.839"]
"marcobecerrap/edge_leg_detector" ["l"="61.655,13.751"]
"VisualComputingInstitute/DR-SPAAM-Detector" ["l"="61.658,13.82"]
"apennisi/rgbd_person_tracking" ["l"="61.654,13.867"]
"YikangZhang1641/HybridAStarSearch" ["l"="61.637,13.349"]
"koide3/ccf_person_identification" ["l"="61.685,13.937"]
"AlanShaw-GitHub/ROS-Navigation-GlobalPlanner" ["l"="61.451,13.561"]
"RoboJackets/rrt" ["l"="61.627,13.491"]
"sourishg/rrt-simulator" ["l"="61.638,13.514"]
"mpdmanash/rrt-star-dubins-sim" ["l"="61.587,13.535"]
"chengji253/DMPC-for-multi-agent" ["l"="61.451,15.257", "c"=480]
"gloriyo/MAPF-ICBS" ["l"="61.943,13.473"]
"Jiaoyang-Li/MAPF-LNS" ["l"="61.946,13.405"]
"fgenesis/tinypile" ["l"="61.354,13.365"]
"Eurecat/astar-gridmap-2d" ["l"="61.388,13.375"]
"RicheyHuang/CoverageActiveSLAM" ["l"="61.77,13.602"]
"alelab-upenn/graph-neural-networks" ["l"="62.079,13.375"]
"proroklab/gnn_pathplanning" ["l"="62.035,13.415"]
"HAOLI-TUKL/autonomous_exploration" ["l"="61.421,13.739"]
"Meshaal-Mouawad/Improvement-Potential-Field-Algorithm" ["l"="61.788,13.169"]
"tu-darmstadt-ros-pkg/hector_navigation" ["l"="61.536,13.655"]
"JuliaPOMDP/DeepQLearning.jl" ["l"="61.19,13.262"]
"JuliaPOMDP/RLInterface.jl" ["l"="61.136,13.255"]
"JuliaPOMDP/DiscreteValueIteration.jl" ["l"="61.152,13.259"]
"sigmaai/self-driving-golf-cart" ["l"="64.299,12.723", "c"=1121]
"daniel-s-ingram/ai_for_robotics" ["l"="61.431,13.532"]
"amirhakimnejad/Histogram-filter-for-robot-localization" ["l"="61.394,13.544"]
"malayandi/Tiger-Problem-POMDP" ["l"="61.296,13.202"]
"SimoneTinella/Path-Planning-Robot-over-Voronoi-Diagram" ["l"="61.479,13.747"]
"Merkaster/Dynamic-Voronoi-Path-Planning" ["l"="61.51,13.706"]
"RDLLab/oppt" ["l"="61.345,13.277"]
"rdl-algorithm/tapir" ["l"="61.362,13.269"]
"RDLLab/tapir" ["l"="61.322,13.298"]
"larics/cartographer_frontier_detection" ["l"="61.676,13.302"]
"SunZezhou/Active-SLAM-with-Cartographer" ["l"="61.648,13.332"]
"BijoSebastian/Kinodynamic-RRT-STAR" ["l"="61.744,13.739"]
"AngeloEspinoza/kinodynamic-rrt-car-like-robot" ["l"="61.729,13.741"]
"utexas-bwi/eband_local_planner" ["l"="61.581,13.622"]
"azampagl/robotics-d-star-lite" ["l"="61.459,13.093"]
"ArekSredzki/dstar-lite" ["l"="61.461,13.122"]
"TGlad/ILQR" ["l"="61.525,13.194"]
"longjianquan/path-planning" ["l"="61.515,13.611"]
"Kei18/pibt" ["l"="61.927,13.394"]
"laurimi/npgi" ["l"="61.272,13.14"]
"laurimi/multiagent-prediction-reward" ["l"="61.251,13.114"]
"JuliaPOMDP/QuickPOMDPs.jl" ["l"="61.116,13.24"]
"JuliaPOMDP/POMCPOW.jl" ["l"="61.284,13.209"]
"FlorianPusse/OpenDS-CTS" ["l"="61.366,13.211"]
"eli-b/idcbs" ["l"="62.089,13.598"]
"PathPlanning/CBS-SIPP" ["l"="62.046,13.564"]
"KailinTong/Motion-Planning-for-Mobile-Robots" ["l"="61.685,13.364"]
"zm0612/Minimum-Snap" ["l"="60.22,13.839", "c"=334]
"ZJU-FAST-Lab/sampling-based-path-finding" ["l"="60.282,13.816", "c"=334]
"ZJU-FAST-Lab/GCOPTER" ["l"="60.343,13.871", "c"=334]
"MichaelFYang/far_planner" ["l"="60.459,13.809", "c"=334]
"teamo1996/Motion-plan" ["l"="61.669,13.322"]
"sikang/DecompROS" ["l"="60.284,13.829", "c"=334]
"HKUST-Aerial-Robotics/Teach-Repeat-Replan" ["l"="60.316,13.853", "c"=334]
"HKUST-Aerial-Robotics/FIESTA" ["l"="60.33,13.838", "c"=334]
"chengyangkj/Ros_Qt5_Gui_App" ["l"="60.202,12.553", "c"=286]
"6-robot/wpr_simulation" ["l"="60.118,12.659", "c"=286]
"ai-winter/ros_motion_planning" ["l"="-54.432,-12.7", "c"=252]
"ai-winter/python_motion_planning" ["l"="61.7,13.437"]
"A-make/awesome-control-theory" ["l"="61.471,15.005", "c"=480]
"Kei18/mapf-visualizer" ["l"="61.972,13.391"]
"Kei18/pibt2" ["l"="61.964,13.401"]
"Jiaoyang-Li/MAPF-LNS2" ["l"="61.964,13.415"]
"PathPlanning/Push-and-Rotate--CBS--PrioritizedPlanning" ["l"="61.998,13.517"]
"Kei18/pypibt" ["l"="61.963,13.38"]
"semitable/robotic-warehouse" ["l"="57.947,18.358", "c"=45]
"GasserElAzab/6-DOF-DLR-robot-simulation-in-Matlab-Simulink" ["l"="61.835,13.262"]
"mathworks-robotics/designing-robot-manipulator-algorithms" ["l"="61.868,13.245"]
"amslabtech/dwa_planner" ["l"="61.649,13.492"]
"goktug97/DynamicWindowApproach" ["l"="61.734,13.47"]
"linyicheng1/teb_local_planner" ["l"="61.705,13.498"]
"VD2410/Multi-Agent-Path-Finding" ["l"="62.019,13.528"]
"RobotnikAutomation/agvs" ["l"="61.515,13.685"]
"RobotnikAutomation/agvs_sim" ["l"="61.488,13.71"]
"robotics-upo/upo_robot_navigation" ["l"="61.472,13.725"]
"RiteshKH/Ant_Colony_Optimizer_move_base_planner" ["l"="61.886,13.637"]
"Nipunnyka/GlobalPathPlannerPlugin" ["l"="61.948,13.689"]
"jotredi/3D_Motion_Planning" ["l"="61.471,12.917"]
"ybmasmiling/Astar_3D" ["l"="61.492,12.915"]
"woven-planet/l5kit" ["l"="63.286,12.557", "c"=241]
"KCL-Planning/ROSPlan" ["l"="59.177,12.816", "c"=299]
"czhherry/self-driving-vehicle-101" ["l"="61.585,13.208"]
"chanchanchan97/ROS" ["l"="61.585,13.15"]
"nicofretti/MAPF" ["l"="61.967,13.488"]
"linxigjs/dynamicvoronoi" ["l"="61.666,13.55"]
"srl-freiburg/srl_rhcf_planner" ["l"="61.608,13.675"]
"roboticslibrary/rl" ["l"="61.343,16.434", "c"=184]
"jrialland/python-astar" ["l"="61.332,13.138"]
"LogicJake/A-star-search" ["l"="61.326,13.109"]
"richardos/occupancy-grid-a-star" ["l"="61.305,13.099"]
"pablogsal/a_star_algorithm" ["l"="61.298,13.07"]
"elemel/python-astar" ["l"="61.303,13.12"]
"hjweide/pyastar2d" ["l"="61.398,13.327"]
"mjyc/awesome-robotics-projects" ["l"="58.946,12.675", "c"=299]
"nobleo/path_tracking_pid" ["l"="61.624,13.659"]
"mrath/mobile_robot_simulator" ["l"="61.673,13.7"]
"simondlevy/BreezySLAM" ["l"="59.469,11.203", "c"=87]
"xiaofeng419/SLAM-2D-LIDAR-SCAN" ["l"="61.563,14.117"]
"symao/minimum_snap_trajectory_generation" ["l"="60.225,13.878", "c"=334]
"ai-winter/matlab_motion_planning" ["l"="61.72,13.357"]
"Mesywang/MinimumSnap-Trajectory-Generation" ["l"="60.153,13.842", "c"=334]
"algorithmsbooks/decisionmaking" ["l"="21.987,16.513", "c"=77]
"JuliaAcademy/Decision-Making-Under-Uncertainty" ["l"="61.218,13.262"]
"SeanZsya/tdle" ["l"="61.697,13.216"]
"jchengai/pluto" ["l"="63.275,12.477", "c"=241]
"MCZhi/DTPP" ["l"="63.286,12.456", "c"=241]
"Tsinghua-MARS-Lab/StateTransformer" ["l"="63.265,12.456", "c"=241]
"motional/nuplan-devkit" ["l"="63.271,12.517", "c"=241]
"abwerby/Model-Predictive-Control-Carla" ["l"="61.687,12.864", "c"=774]
"paulyehtw/Motion-Planning-on-CARLA" ["l"="62.529,12.381", "c"=461]
"mlab-upenn/LearningMPC" ["l"="61.58,15.091", "c"=480]
"stoneman404/motion-planning-with-carla" ["l"="61.624,13.182"]
"6Lackiu/EMplanner_Carla" ["l"="61.646,13.187"]
"Mr-Tony921/xju-robot" ["l"="61.723,13.593"]
"RicheyHuang/CompleteCoveragePathPlanning" ["l"="61.791,13.611"]
"introlab/find-object" ["l"="64.419,-2.784", "c"=1153]
"winwinashwin/Multi-Robot-Coverage-Planning" ["l"="61.826,13.704"]
"meyiao/LaserSLAM" ["l"="61.55,14.088"]
"gisbi-kim/PyICP-SLAM" ["l"="58.19,10.022", "c"=142]
"libing64/slam2d" ["l"="61.576,14.035"]
"goktug97/PyGraphSLAM" ["l"="61.554,14.194"]
"masouduut94/MCTS-agent-cythonized" ["l"="61.085,13.117"]
"LiYangSir/Smart-Algorithm" ["l"="50.112,26.197", "c"=759]
"ed-lam/bcp-mapf" ["l"="61.98,13.415"]
"Kei18/lacam" ["l"="61.981,13.4"]
"Superone77/AGV_dijkstra" ["l"="59.646,12.641", "c"=299]
"tud-amr/amr-lmpcc" ["l"="61.862,13.535"]
"Sollimann/Dstar-lite-pathplanner" ["l"="61.427,13.133"]
"mdeyo/d-star-lite" ["l"="61.454,13.157"]
"PathPlanning/DstarLite" ["l"="61.415,13.107"]
"estshorter/dwa" ["l"="61.77,13.459"]
"jcontrerasleyton/MAPF" ["l"="62.001,13.401"]
"AGV-IIT-KGP/awesome-motion-planning" ["l"="61.512,13.59"]
"jbradberry/ultimate_tictactoe" ["l"="61.096,13.009"]
"roadwide/AI-Homework" ["l"="50.149,26.228", "c"=759]
"WangHanfu/Multi-Robot-Path-Planning-with-Due-Times" ["l"="62.117,13.491"]
"WangHanfu/multi-agent-path-finding" ["l"="62.103,13.517"]
"AKittenOfMrHu/Astar_AGV_Multi-car-path-planning" ["l"="62.104,13.533"]
"DosepackAIR/MARL-DPP" ["l"="62.046,13.538"]
"HusseinLezzaik/Deep-Learning-for-Multi-Robotics" ["l"="62.065,13.529"]
"liumingrui814/Multi-Agents-sorting" ["l"="59.726,12.663", "c"=299]
"carljohanhoel/BayesianRLForAutonomousDriving" ["l"="61.42,13.224"]
"chauvinSimon/Reinforcement-Learning-for-Decision-Making-in-self-driving-cars" ["l"="63.753,12.237", "c"=241]
"Haoran-SONG/PiP-Planning-informed-Prediction" ["l"="63.373,12.525", "c"=241]
"hubery05/Astar_Path_Planner" ["l"="61.792,13.572"]
"dengpw/hybrid_astar_planner" ["l"="61.722,13.531"]
"zhongjieGDUT/manipulation_planning_Matlab" ["l"="61.863,13.179"]
"Shumin326/Manipulator" ["l"="61.879,13.184"]
"KumarRobotics/ublox" ["l"="58.401,11.256", "c"=506]
"xuhuairuogu/V-REP-Simulation-Projects" ["l"="60.576,11.851", "c"=632]
"4rtur1t0/ARTE" ["l"="61.919,13.219"]
"jmiseikis/RobotNavigation" ["l"="61.804,13.387"]
"luhan2016/PathPlanning" ["l"="61.805,13.405"]
"PuYuuu/vehicle-interaction-decision-making" ["l"="63.258,12.356", "c"=241]
"autowarefoundation/autoware_ai_planning" ["l"="64.468,12.532", "c"=1121]
"QianZheng/BSplineFitting" ["l"="61.21,13.467"]
"NCAR/bspline" ["l"="61.322,13.442"]
"thibauts/b-spline" ["l"="61.187,13.522"]
"ddemidov/mba" ["l"="61.24,13.473"]
"APRIL-ZJU/Coco-LIC" ["l"="58.361,10.033", "c"=142]
"PatWie/CppNumericalSolvers" ["l"="-19.413,-25.912", "c"=10]
"yixuan/spectra" ["l"="-19.434,-25.943", "c"=10]
"chen0040/cpp-spline" ["l"="61.237,13.504"]
"PickNikRobotics/rviz_visual_tools" ["l"="59.143,12.571", "c"=299]
"ZJU-FAST-Lab/LBFGS-Lite" ["l"="60.298,13.807", "c"=334]
"PRBonn/agribot" ["l"="42.768,25.75", "c"=1650]
"SS47816/frenet_optimal_planner" ["l"="61.493,13.287"]
"anime-sh/Frenet_Planner_AGV" ["l"="61.471,13.259"]
"zqw-hooper/apollo_and_-autoware_path_planner" ["l"="61.483,13.269"]
"hubery05/A-start-with-B-spline" ["l"="61.71,13.555"]
"carla-simulator/map" ["l"="62.647,12.198", "c"=461]
"deepsense-ai/carla-birdeye-view" ["l"="62.536,12.291", "c"=461]
"peijin94/matlabPlotCheatsheet" ["l"="-5.322,23.223", "c"=960]
"ROS-Mobile/ROS-Mobile-Android" ["l"="59.125,12.426", "c"=299]
"Jiaoyang-Li/PBS" ["l"="61.94,13.394"]
"ArghyaChatterjee/waypoint-based-3D-navigation-in-ros" ["l"="61.522,13.743"]
"kadn/open_karto" ["l"="61.519,14.021"]
"forty-twoo/B-Spline-curve-fitting" ["l"="61.181,13.464"]
"eli-b/mapf" ["l"="62.123,13.624"]
"MatteoAntoniazzi/MAPF" ["l"="62.147,13.641"]
"SrinidhiSreenath/ENPM661-Informed-RRT-Star" ["l"="61.756,13.327"]
"bhtxy0525/2D-RRT-Connect-Algorithm" ["l"="61.76,13.288"]
"Argonne-National-Laboratory/DSP" ["l"="60.949,13.561"]
"mlubin/JuliaBenders" ["l"="60.924,13.565"]
"UditSinghParihar/g2o_tutorial" ["l"="61.532,14.272"]
"gisbi-kim/modern-slam-tutorial-python" ["l"="61.56,14.286"]
"lh9171338/Astar" ["l"="61.588,13.482"]
"kohonda/mpc_tracker_ros" ["l"="61.556,13.524"]
"adrianapadilla/simple_local_planner" ["l"="61.597,13.605"]
"yzhao334/accOpt" ["l"="61.902,13.231"]
"elewu/2d_lidar_undistortion" ["l"="61.553,13.955"]
"LiuLimingCode/lidar_undistortion_2d" ["l"="61.539,13.974"]
"PathPlanning/SuboptimalSIPP" ["l"="61.93,13.369"]
"PathPlanning/TO-AA-SIPP" ["l"="61.938,13.34"]
"nobodyczcz/MCA-RMCA" ["l"="62.07,13.409"]
"utiasASRL/batch-informed-trees" ["l"="61.774,13.274"]
"rafaelbarretorb/trajectory_tracking_control" ["l"="61.439,13.685"]
"YashTrikannad/apf_reactive_planning" ["l"="61.783,13.144"]
"RoboticExplorationLab/LUCIDGames.jl" ["l"="61.481,13.175"]
"parisrigakis/PathPlanningAPF" ["l"="61.794,13.155"]
"twni2016/pomdp-baselines" ["l"="59.371,17.48", "c"=169]
"zkytony/genmos_object_search" ["l"="61.258,13.259"]
"irvingvasquez/wind_cpp" ["l"="61.824,13.63"]
"TUMFTM/GraphBasedLocalTrajectoryPlanner" ["l"="61.734,15.105", "c"=480]
"yorsh87/nicp" ["l"="58.169,10.121", "c"=142]
"WLwind/a_better_star" ["l"="62.001,13.733"]
"WLwind/segment_global_planner" ["l"="62.018,13.748"]
"bewimm/kinodynamic_rrt_star" ["l"="61.761,13.735"]
"dongliangCH/Accelerating-Kinodynamic-RRTstar-Through-Dimensionality-Reduction" ["l"="61.76,13.697"]
"ZamesNg/kinodynamic_frontend" ["l"="61.775,13.751"]
"tud-amr/go-mpc" ["l"="61.93,13.602"]
"tud-amr/mrca_vc" ["l"="61.95,13.608"]
"hai-zhu/obstacle_estimator" ["l"="61.941,13.586"]
"artivis/laser_odometry" ["l"="61.53,13.795"]
"HobbySingh/Graph-SLAM" ["l"="61.574,14.209"]
"koide3/open3d_graph_slam" ["l"="61.533,14.204"]
"hotsuyuki/Graph-Based-SLAM" ["l"="61.551,14.217"]
"surendersampath/Lidar-Project---Human-detection-and-counting" ["l"="61.632,13.872"]
"JuiceFV/Cooperative_Pathfinding" ["l"="62.022,13.375"]
"windelbouwman/move-base-ompl" ["l"="61.434,13.568"]
"Pieter-Cawood/M-TA-Prioritized-MAPD" ["l"="62.116,13.408"]
"urastogi885/a-star-turtlebot" ["l"="61.379,13.086"]
"eborghi10/jps_global_planner" ["l"="62.012,13.763"]
"yangfuyuan/dstar_global_planner" ["l"="62.033,13.743"]
"zhu-edward/DGSQP" ["l"="61.515,13.093"]
"lassepe/GameInference.jl" ["l"="61.506,13.121"]
"lassepe/DifferentiableTrajectoryOptimization.jl" ["l"="61.526,13.11"]
"Pandas-Team/Ad-Recommender-System" ["l"="61.381,13.424"]
"NEFTeam/Traffic-Law-Enforcement" ["l"="61.362,13.43"]
"NKU-MobFly-Robotics/g2vd_planner" ["l"="61.655,13.569"]
"ZJU-FAST-Lab/large_scale_traj_optimizer" ["l"="60.299,13.84", "c"=334]
"VincentWong3/automated-driving-control" ["l"="61.648,13.285"]
"VincentWong3/automatic-driving-decision-and-planning-for-matlab" ["l"="61.617,13.303"]
"VincentWong3/notes" ["l"="61.635,13.263"]
"VincentWong3/apollo" ["l"="61.656,13.263"]
"Walid-khaled/6DOF-Robot-Trajectory-Planning" ["l"="61.849,13.231"]
"fazildgr8/ros_autonomous_slam" ["l"="61.489,13.611"]
"hikashi/multi-robot-rrt-exploration-noetic" ["l"="61.408,13.639"]
"bigmb/Autonomous-Navigation-and-Exploration" ["l"="61.445,13.624"]
"fazildgr8/realsense_explorer_bot" ["l"="61.437,13.648"]
"xiangli0608/cartographer_detailed_comments_ws" ["l"="58.148,9.837", "c"=142]
"Little-Potato-1990/localization_in_auto_driving" ["l"="58.137,9.888", "c"=142]
"smilefacehh/LIO-SAM-DetailedNote" ["l"="58.178,9.913", "c"=142]
"softdream/Slam-Project-Of-MyOwn" ["l"="61.58,13.975"]
"xiangli0608/Learning_localization_from_scratch_ws" ["l"="61.6,13.949"]
"kahowang/sensor-fusion-for-localization-and-mapping" ["l"="58.241,9.899", "c"=142]
"wykxwyc/LeGO-LOAM_NOTED" ["l"="58.094,9.874", "c"=142]
"COONEO/neor_mini" ["l"="59.985,12.575", "c"=286]
"linorobot/linorobot2" ["l"="60.47,12.484", "c"=286]
"open-navigation/opennav_coverage" ["l"="61.714,13.689"]
"AlexGeControl/Motion-Planning-for-Mobile-Robots" ["l"="61.695,13.253"]
"hanlinniu/turtlebot3_ddpg_collision_avoidance" ["l"="59.673,14.973", "c"=1017]
"Peace1997/Voronoi_Based_Multi_Robot_Collaborate_Exploration_Unknow_Enviroment" ["l"="61.352,13.662"]
"efc-robot/SMMR-Explore" ["l"="61.37,13.615"]
"efc-robot/TopoExplore" ["l"="61.343,13.637"]
"efc-robot/Explore-Bench" ["l"="61.34,13.615"]
"hikashi/multi-robot-rrt-exploration-melodic" ["l"="61.401,13.626"]
"gingineer95/Multi-Robot-Exploration-and-Map-Merging" ["l"="61.37,13.646"]
"ExistentialRobotics/SSMI" ["l"="61.32,13.626"]
"perseus784/Multi-Robot_Exploration" ["l"="61.325,13.678"]
"Icheler/coExplore" ["l"="61.333,13.659"]
"Lee-JaeWon/Frontier-Based-Multi-Robot-Exploration" ["l"="61.37,13.667"]
"hikashi/TM-RRT_exploration_Simulation" ["l"="61.384,13.648"]
"hikashi/TM-RRT_exploration" ["l"="61.397,13.655"]
"herolab-uga/ROS-SEAL" ["l"="61.386,13.666"]
"GradyM2M/multi_rrt_exploration" ["l"="61.374,13.631"]
"zhangpanyi/a-star-algorithm" ["l"="61.462,13.412"]
"daancode/a-star" ["l"="61.52,13.426"]
"sumimakito/A-star" ["l"="61.468,13.436"]
"AytacKahveci/multirobot_coverage" ["l"="61.819,13.685"]
"oelin/darpy" ["l"="61.808,13.689"]
"cpswarm/swarm_functions" ["l"="61.849,13.686"]
"mathworks/MATLAB-Simulink-Challenge-Project-Hub" ["l"="-5.477,23.227", "c"=960]
"winter2897/Real-time-Auto-License-Plate-Recognition-with-Jetson-Nano" ["l"="53.115,32.531", "c"=251]
"anhbantre/multi_robot_ros2" ["l"="61.744,13.926"]
"ZJU-FAST-Lab/Car-like-Robotic-swarm" ["l"="61.714,13.404"]
"DerrickXuNu/Learn-Carla" ["l"="62.56,12.368", "c"=461]
"L5Player/AutoDriving-Planning-Control-Algorithm-Simulation-Carla" ["l"="61.622,13.242"]
"yujinrobot/kobuki" ["l"="60.179,12.428", "c"=286]
"onlyEugeneLi/ACO-RobotPathPlanning-MATLAB" ["l"="61.835,13.338"]
"PetrichorHlacyon/ACA2solvePathPlanning" ["l"="61.838,13.35"]
"Grizi-ju/ros_program" ["l"="61.773,13.554"]
"Grizi-ju/better_astar_global_planner" ["l"="61.758,13.536"]
"Grizi-ju/Astar_JPS_Pathplanning_in_ROS" ["l"="61.792,13.536"]
"Tagussan/BSpline" ["l"="61.153,13.524"]
"StandardCyborg/nurbs" ["l"="61.149,13.554"]
"onlytailei/gym_ped_sim" ["l"="59.717,14.84", "c"=1017]
"vita-epfl/CrowdNav" ["l"="59.727,14.899", "c"=1017]
"SteveRabin/JPSPlusWithGoalBounding" ["l"="-25.171,-33.345", "c"=82]
"StevenLyt/mapf-visualizer" ["l"="61.95,13.389"]
"DiligentPanda/MAPF-LRR2023" ["l"="62.016,13.343"]
"Kei18/lacam3" ["l"="61.981,13.379"]
"robo-friends/m-explore-ros2" ["l"="60.612,13.667", "c"=334]
"AaronMR/Learning_ROS_for_Robotics_Programming_2nd_edition" ["l"="60.23,12.574", "c"=286]
"osrf/car_demo" ["l"="61.564,13.488"]
"zwkcoding/astar_planner" ["l"="61.662,13.357"]
"YoungPeter/HAStar_ParkingPlanner" ["l"="61.58,13.38"]
"xpharry/hybrid-astar-planning" ["l"="61.668,13.346"]
"Cognitive-AI-Systems/when-to-switch" ["l"="-44.201,26.451", "c"=551]
"Tushar-ml/G2RL-Path-Planning" ["l"="62.041,13.385"]
"Cognitive-AI-Systems/pogema" ["l"="-44.194,26.421", "c"=551]
"jdanielhoyos/ArtificialPotentialMatlab" ["l"="61.828,13.178"]
"xiihoo/Books_Robot_SLAM_Navigation" ["l"="59.765,11.152", "c"=87]
"Pandas-Team/Automatic-Parking" ["l"="61.529,13.4"]
"wenqing-2021/AutomatedValetParking" ["l"="61.495,13.354"]
"Pandas-Team/Autonomous-Vehicle-Environment-Perception" ["l"="61.418,13.413"]
"Rohith-K/Autonomous-Parallel-Parking-Car-like-Robot-Gazebo-ROS" ["l"="64.664,10.266", "c"=1092]
"leoll2/Autoparking" ["l"="64.656,10.205", "c"=1092]
"kosuke55/geometric-parallel-parking" ["l"="61.475,13.394"]
"HybridRobotics/car-racing" ["l"="61.4,15.069", "c"=480]
"Mooophy/Path-Planning" ["l"="61.479,13.372"]
"jnez71/lqRRT" ["l"="61.727,13.708"]
"ros-perception/pointcloud_to_laserscan" ["l"="60.397,12.493", "c"=286]
"sybrenstuvel/Python-RVO2" ["l"="59.713,14.859", "c"=1017]
"guyuehome/guyueclass" ["l"="60.144,12.546", "c"=286]
"Geonhee-LEE/mpc_ros_description" ["l"="61.54,13.678"]
"Sarrasor/RoboticManipulators" ["l"="61.838,13.303"]
"cuntou0906/Route-Planning" ["l"="50.153,26.161", "c"=759]
"mikolalysenko/l1-path-finder" ["l"="61.291,13.367"]
"mikolalysenko/box-intersect" ["l"="-32.299,-35.693", "c"=1115]
"quantumelixir/pathfinding" ["l"="61.264,13.387"]
"reiniscimurs/GDAE" ["l"="59.729,15.003", "c"=1017]
"flexible-collision-library/fcl" ["l"="61.383,16.414", "c"=184]
"pantor/ruckig" ["l"="61.376,16.449", "c"=184]
"LuxDL/Lux.jl" ["l"="21.986,16.804", "c"=77]
"JuliaAI/MLJ.jl" ["l"="21.943,16.66", "c"=77]
"JuliaPOMDP/MCTS.jl" ["l"="61.157,13.276"]
"JuliaNLSolvers/Optim.jl" ["l"="22.014,16.724", "c"=77]
"TuringLang/Turing.jl" ["l"="22.018,16.697", "c"=77]
"cscherrer/Soss.jl" ["l"="22.027,16.93", "c"=77]
"JuliaCollections/DataStructures.jl" ["l"="21.896,16.743", "c"=77]
"ppap36/ROS-Nav-Platform" ["l"="61.749,13.515"]
"libing64/lidar_pose_estimator" ["l"="61.601,14.061"]
"abougouffa/ndtpso_slam" ["l"="61.577,14.066"]
"h-brenne/cppRL" ["l"="60.278,14.345", "c"=334]
"arvijj/rl-cpp" ["l"="61.798,13.729"]
"ChenYingbing/IPM-Planner" ["l"="61.506,13.245"]
"jchengai/planTF" ["l"="63.265,12.47", "c"=241]
"MCZhi/DIPP" ["l"="63.306,12.47", "c"=241]
"HKUST-Aerial-Robotics/SIMPL" ["l"="63.293,12.481", "c"=241]
"Mooophy/Compression" ["l"="61.437,13.365"]
"bysz71/DataStructureAndAlgorithmsInCSharp" ["l"="61.448,13.358"]
"bysz71/Simple-ftp-server" ["l"="61.451,13.372"]
"Say-Hello2y/Path-planning-for-robots" ["l"="61.822,13.364"]
"smilefacehh/Karto-Note" ["l"="61.593,14.003"]
"AdaCompNUS/despot_tutorials" ["l"="61.362,13.293"]
"DarrenYing/MultiAgentPathFinding" ["l"="59.689,12.656", "c"=299]
"TempleRAIL/pedsim_ros_with_gazebo" ["l"="59.777,14.859", "c"=1017]
"robotics-upo/gazebo_sfm_plugin" ["l"="59.792,14.634", "c"=1017]
"rezanatha/object-detector-fusion" ["l"="61.686,13.816"]
"Shuijing725/CrowdNav_Sim2Real_Turtlebot" ["l"="59.771,14.869", "c"=1017]
"Shuijing725/awesome-robot-social-navigation" ["l"="59.78,14.877", "c"=1017]
"JuliaPOMDP/BasicPOMCP.jl" ["l"="61.119,13.287"]
"JuliaPOMDP/POMDPModels.jl" ["l"="61.123,13.262"]
"JuliaPOMDP/ParticleFilters.jl" ["l"="61.136,13.278"]
"jhu-asco/dsl_gridsearch" ["l"="61.465,13.024"]
"polinko13/CBS" ["l"="61.96,13.471"]
"ntnu-arl/DubinsAirplane" ["l"="61.386,13.51"]
"dmr-goncalves/HumanAwareRobotNavigation" ["l"="61.659,13.712"]
"chenzhike110/yolov4_siamfcpp_multitracking" ["l"="62.05,13.495"]
"chenzhike110/SSL-RL" ["l"="62.049,13.482"]
"chenzhike110/Arm-Robotics-RL" ["l"="62.06,13.478"]
"chenzhike110/Fast-tracking" ["l"="62.062,13.491"]
"msaudulhassan/mapf" ["l"="61.989,13.504"]
"osrf/docker_images" ["l"="59.164,12.624", "c"=299]
"miccol/Behavior-Tree" ["l"="59.265,12.815", "c"=299]
"catohaste/POMDP" ["l"="61.275,13.168"]
"mbforbes/py-pomdp" ["l"="61.284,13.183"]
"jbaayen/fitpackpp" ["l"="61.293,13.445"]
"glentner/CubicSplineLib" ["l"="61.281,13.434"]
"mit-acl/panther" ["l"="60.326,13.783", "c"=334]
"anoulis/mpc_local_planner_mb" ["l"="61.539,13.692"]
"ZiyuanMa/DCC" ["l"="62.073,13.433"]
"Qiushi-Lin/SACHA" ["l"="62.07,13.445"]
"acforvs/multi-agent-pathfinding" ["l"="62.094,13.426"]
"acforvs/dhc-robust-mapf" ["l"="62.09,13.441"]
"emmarapt/RealWorld2AirSim-DARP" ["l"="61.846,13.663"]
"Lodz97/Multi-Agent_Pickup_and_Delivery" ["l"="62.158,13.401"]
"JuliaPOMDP/SARSOP.jl" ["l"="61.044,13.242"]
"JuliaPOMDP/POMDPSolve.jl" ["l"="61.068,13.247"]
"adamslab-ub/SCoPP" ["l"="61.798,13.704"]
"YXZhai97/Area-Coverage-Path-Planning" ["l"="61.808,13.714"]
"JuliaPOMDP/QMDP.jl" ["l"="61.099,13.253"]
"laurimi/pydpomdp" ["l"="61.24,13.099"]
"ZJU-FAST-Lab/EGO-Planner-v2" ["l"="60.366,13.865", "c"=334]
"uhub/awesome-matlab" ["l"="-5.315,23.251", "c"=960]
"idreesshaikh/Autonomous-Driving-in-Carla-using-Deep-Reinforcement-Learning" ["l"="62.482,12.355", "c"=461]
"praveen-palanisamy/multiple-object-tracking-lidar" ["l"="64.309,12.534", "c"=1121]
"jvirdi2/A_star_and_Hybrid_A_star" ["l"="61.471,13.46"]
"saschaschramm/MonteCarloTreeSearch" ["l"="61.169,13.039"]
"czjaixuexi/carla_ros_bridge_pnc" ["l"="61.605,13.251"]
"leoking99-BIT/MPC-for-Self-driving-Vehicles" ["l"="61.631,15.162", "c"=480]
"pablogsal/python-horror-show" ["l"="61.275,13.022"]
"CHH3213/chhRobotics" ["l"="61.625,13.362"]
"CHH3213/Books" ["l"="61.601,13.332"]
"GoGoGo13579/Planning-and-Control-based-on-Carla-and-ROS2" ["l"="61.618,13.263"]
"MedlarTea/OCL-RPF" ["l"="61.724,13.946"]
"MedlarTea/Mono-RPF" ["l"="61.71,13.948"]
"Friedrich-M/Wheeled-robot-path-planning-algorithm" ["l"="61.781,13.434"]
"fabio-cabeccia/ros_aco_path_planner" ["l"="61.914,13.655"]
"NaokiAkai/als_ros" ["l"="58.292,9.726", "c"=142]
"MigVega/Ogm2Pgbm" ["l"="61.539,13.825"]
"CCNYRoboticsLab/imu_tools" ["l"="60.321,12.498", "c"=286]
"vista-simulator/vista" ["l"="63.17,12.519", "c"=241]
"MPC-Berkeley/barc" ["l"="61.54,15.098", "c"=480]
"autowarefoundation/autoware_universe" ["l"="62.876,12.14", "c"=461]
"marmotlab/ARiADNE" ["l"="59.693,15.088", "c"=1017]
"carlsberg03/6-axis_robot_pathplanning" ["l"="61.873,13.198"]
"SafeRoboticsLab/iLQR_jax_racing" ["l"="61.532,13.236"]
"HKUST-JM/Local_Learning_CiLQR" ["l"="61.516,13.212"]
"Forrest-Z/cpp_robotics" ["l"="61.468,13.528"]
"ClemensElflein/open_mower_ros" ["l"="-21.042,-43.74", "c"=1197]
"rst-tu-dortmund/costmap_converter" ["l"="61.581,13.703"]
"justinhj/astar-algorithm-cpp" ["l"="61.432,13.393"]
"Rikora/A-star" ["l"="61.483,13.431"]
"EwingKang/Dubins-RRT-for-MATLAB" ["l"="61.773,13.332"]
"studywolf/control" ["l"="59.816,16.299", "c"=234]
"Astik-2002/Dynamic-artificial-potential-field-algorithm-for-cooperative-obstacle-avoidance-for-fixed-wing-UAV" ["l"="61.839,13.154"]
"windycn/Multi-Agent-Coverage-Path-Planning-Algorithm" ["l"="61.826,13.73"]
"qboticslabs/mastering_ros" ["l"="60.23,12.597", "c"=286]
"nkarapetyan/BCD" ["l"="61.853,13.732"]
"MapaRobo/full_coverage_path_planner" ["l"="61.853,13.718"]
"nathansttt/hog2" ["l"="61.907,13.38"]
"lakshayvirmani/learning-assisted-mstar" ["l"="62.019,13.291"]
"nobodyczcz/Guided-PIBT" ["l"="62.028,13.318"]
"TUMFTM/EthicalTrajectoryPlanning" ["l"="63.245,12.377", "c"=241]
"casper-auto/CasperAuto" ["l"="61.608,13.22"]
"seehma/DoubleSTrajectory" ["l"="61.977,13.201"]
"motianxiuhua/EMplanner" ["l"="61.612,13.161"]
"zhaokun506/driving-planning" ["l"="61.59,13.259"]
"jbradberry/boardgame-socketserver" ["l"="61.094,12.986"]
"PKU-MACDLab/IMPC-DR" ["l"="61.958,13.571"]
"sisl/aa228-notebook" ["l"="61.17,13.236"]
"osrf/rosbook" ["l"="60.208,12.575", "c"=286]
"SS47816/fiss_plus_planner" ["l"="63.166,12.392", "c"=241]
"ExistentialRobotics/ROAM" ["l"="61.289,13.638"]
"PickNikRobotics/roscpp_code_format" ["l"="59.306,12.693", "c"=299]
"Jinqi-J/Numerical-Optimization-in-Robotics-Homework" ["l"="61.651,13.241"]
"portal-cornell/game-theoretic-forecasting-planning" ["l"="61.508,13.183"]
"eldariko/Robot-path-planning-coverage" ["l"="61.804,13.597"]
"CK1201/Numerical-Optimization-in-Robotics-HW" ["l"="61.679,13.219"]
"ampl/mp" ["l"="60.987,13.526"]
"ampl/amplpy" ["l"="60.962,13.51"]
"coin-or/Gravity" ["l"="60.926,13.522"]
"chenzhike110/Lattice-Planner" ["l"="62.077,13.485"]
"reflector-li/EMplanner" ["l"="61.584,13.23"]
"nkuwenjian/voronoi_layer" ["l"="61.611,13.609"]
"frontw/dynamicvoronoi" ["l"="61.556,13.659"]
"lassepe/peters2024ral-code" ["l"="61.517,13.07"]
"GradyM2M/multi_turtlebot3_navigation" ["l"="61.346,13.69"]
"PKU-MACDLab/IMPC-OB" ["l"="61.972,13.587"]
"AtsushiSakai/PythonRobotics" ["l"="61.802,12.348", "c"=774]
"TempleRAIL/drl_vo_nav" ["l"="59.768,14.901", "c"=1017]
"reiniscimurs/DRL-robot-navigation" ["l"="59.743,14.948", "c"=1017]
"zhaohaojie1998/DRL-for-Path-Planning" ["l"="60.251,14.204", "c"=334]
"JORKER1755/PathPlanning" ["l"="60.237,14.22", "c"=334]
"linorobot/linorobot" ["l"="60.369,12.507", "c"=286]
"meco-group/omg-tools" ["l"="61.501,14.919", "c"=480]
"ITCoders/Human-detection-and-Tracking" ["l"="54.674,32.779", "c"=279]
"guardstrikelab/carla_apollo_bridge" ["l"="62.628,12.278", "c"=461]
"Kei18/lacam2" ["l"="61.997,13.378"]
"gotonote/Autopilot-Notes" ["l"="50.614,2.85", "c"=85]
"ros/ros_comm" ["l"="60.368,12.637", "c"=286]
"hanruihua/RDA-planner" ["l"="59.846,14.951", "c"=1017]
"turtlebot/turtlebot" ["l"="60.2,12.493", "c"=286]
"ampl/gsl" ["l"="61.096,13.504"]
"BrianGladman/gsl" ["l"="61.067,13.493"]
"libMesh/libmesh" ["l"="63.087,-1.522", "c"=175]
"boostorg/math" ["l"="-19.569,-26.506", "c"=10]
"lava/matplotlib-cpp" ["l"="-20.048,-25.84", "c"=10]
"tbs1980/NumericalIntegration" ["l"="61.06,13.522"]
"stoneMan349/reinfocement-learning-on-robotic-mobile-fulfilment-system" ["l"="62.23,13.586"]
"Fields2Cover/fields2cover_ros" ["l"="61.734,13.686"]
"facontidavide/Bonxai" ["l"="59.068,12.719", "c"=299]
"mikeferguson/ros2_cookbook" ["l"="59.037,12.714", "c"=299]
"MRPT/mvsim" ["l"="59.014,12.818", "c"=299]
"jianzhuozhuTHU/putn" ["l"="60.513,13.794", "c"=334]
"duyongquan/OpenRobotics" ["l"="61.29,15.989", "c"=184]
"ros/ros_tutorials" ["l"="60.318,12.597", "c"=286]
"ros-perception/image_pipeline" ["l"="60.339,12.514", "c"=286]
"kartik9k/ArtificialPotentialFieldPlanner" ["l"="61.875,13.068"]
"turtlebot/turtlebot_apps" ["l"="60.185,12.463", "c"=286]
"Dangko/ego-planner-for-ground-robot" ["l"="59.896,14.995", "c"=1017]
"LittleDang/2DLIW-SLAM" ["l"="61.499,13.854"]
"ZJU-FAST-Lab/Implicit-SDF-Planner" ["l"="60.342,13.851", "c"=334]
"ZJU-FAST-Lab/3D2M-planner" ["l"="60.544,13.767", "c"=334]
"sikang/DecompUtil" ["l"="60.291,13.849", "c"=334]
"ZJU-FAST-Lab/uneven_planner" ["l"="60.515,13.77", "c"=334]
"libai1943/ParkingMotionPlanningTITS21" ["l"="61.432,13.346"]
"MAPF-Competition/Start-Kit" ["l"="62.083,13.295"]
"MAPF-Competition/PlanViz" ["l"="62.063,13.31"]
"AutoRally/autorally" ["l"="61.561,15.116", "c"=480]
"orbbec/ros_astra_camera" ["l"="60.48,12.561", "c"=286]
"mit-acl/rmader" ["l"="61.978,13.565"]
"mit-acl/puma" ["l"="62.011,13.587"]
"jynxmagic/FCPP-Survey" ["l"="61.865,13.692"]
"Rao-Kai/Numerical-Optimization-in-Robotics" ["l"="61.666,13.208"]
"tk166/Shenlan_Numerical-Optimization_in_Robotics" ["l"="61.678,13.198"]
"ZJU-FAST-Lab/SDQP" ["l"="60.272,13.758", "c"=334]
"lucasb-eyer/laser-detection-annotator" ["l"="61.673,13.867"]
"SeanZsya/SSLE" ["l"="61.71,13.194"]
"mrsd16teamd/iLQR_onboard" ["l"="61.523,13.171"]
"xilinnancheng/numerical_optimization" ["l"="61.686,13.168"]
"ntnu-arl/gbplanner_ros" ["l"="60.449,13.788", "c"=334]
"ros-planning/navigation" ["l"="60.273,12.578", "c"=286]
"zhangfuyang/rl_CARLA" ["l"="62.508,12.328", "c"=461]
"Sentdex/Carla-RL" ["l"="62.491,12.339", "c"=461]
"TinyMPC/TinyMPC" ["l"="61.475,14.937", "c"=480]
"Pranav-chib/End-to-End-Autonomous-Driving" ["l"="62.532,12.204", "c"=461]
"autodriving-heart/Awesome-Autonomous-Driving" ["l"="64.487,11.312", "c"=61]
"sikang/motion_primitive_library" ["l"="60.278,13.875", "c"=334]
"movsim/traffic-simulation-de" ["l"="62.24,12.208", "c"=461]
"NxRLab/ModernRobotics" ["l"="58.845,12.66", "c"=299]
"stoneMan349/Reinforcement-learning-for-multi-AGV-pathfinding" ["l"="62.264,13.595"]
"Qin1143/Multi_AGV_Planner" ["l"="62.287,13.602"]
"shawnhanna/RRT" ["l"="61.741,13.754"]
"Xuerenbujianhua/3DPathplanning" ["l"="60.475,14.984", "c"=1885]
"ros-perception/perception_pcl" ["l"="60.362,12.464", "c"=286]
"ros-planning/navigation_tutorials" ["l"="60.239,12.545", "c"=286]
"Raiden49/auto_drive" ["l"="61.627,13.208"]
"USC-ACTLab/crazyswarm" ["l"="60.384,14.091", "c"=334]
"Mondego/dafny-synthesis" ["l"="60.982,13.002"]
"sun-wendy/DafnyBench" ["l"="60.963,12.991"]
"bethesirius/ChosunTruck" ["l"="61.54,12.327", "c"=774]
"at-wat/mcl_3dl" ["l"="58.243,9.85", "c"=142]
"rsasaki0109/lidar_localizer" ["l"="58.234,9.802", "c"=142]
"ryuichiueda/emcl" ["l"="58.307,9.657", "c"=142]
"NaokiAkai/mcl3d_ros" ["l"="58.274,9.766", "c"=142]
"MengGuo/RVO_Py_MAS" ["l"="59.676,14.852", "c"=1017]
"VincentWong3/ilqr" ["l"="61.55,13.249"]
"Grandereohb/ALTRO-iLQR" ["l"="61.56,13.26"]
"speedzjy/ridgeback_mapf" ["l"="61.916,13.496"]
"rap-lab-org/public_cppmomapf" ["l"="61.94,13.506"]
"zijinoier/Hetero-MAPF" ["l"="61.931,13.493"]
"MengHsux/deep-reinforcement-learning-for-multi-agent-coverage-path-planning-" ["l"="61.849,13.755"]
"engnadeau/pybotics" ["l"="58.808,12.639", "c"=299]
"gkouros/reeds-shepp-paths-ros" ["l"="61.648,13.605"]
"arpesenti/peopleTracker" ["l"="61.652,13.902"]
"open-navigation/opennav_docking" ["l"="59.29,10.583", "c"=87]
"DataBot-Labs/hoverboard_ros2_control" ["l"="-20.518,-43.748", "c"=624]
"CYDXYYJ/ASAP" ["l"="61.989,13.606"]
"mseln/aeplanner" ["l"="60.553,13.85", "c"=334]
"RobustFieldAutonomyLab/em_exploration" ["l"="59.661,15.099", "c"=1017]
"RaccoonlabDev/nbv_exploration_planner" ["l"="60.614,13.872", "c"=334]
"RobustFieldAutonomyLab/DRL_graph_exploration" ["l"="59.683,15.07", "c"=1017]
"herolab-uga/cqlite" ["l"="61.367,13.696"]
"weihaotobe94/LaserSLAM" ["l"="61.529,14.114"]
"ethz-asl/laser_slam" ["l"="57.931,9.839", "c"=142]
"ryanbgriffiths/ICRA2024PaperList" ["l"="58.444,9.904", "c"=142]
"ryanbgriffiths/IROS2024PaperList" ["l"="61.71,13.096"]
"leethomason/MicroPather" ["l"="61.359,13.397"]
"jessicayung/self-driving-car-nd" ["l"="61.507,12.569", "c"=774]
"PolySync/oscc" ["l"="61.523,12.456", "c"=774]
"lanl-ansi/PowerModelsSecurityConstrained.jl" ["l"="60.899,13.509"]
"lanl-ansi/tutorial-grid-science" ["l"="60.898,13.532"]
"ANL-CEEESA/UnitCommitment.jl" ["l"="-11.163,17.498", "c"=440]
"namin/llm-verified-with-monte-carlo-tree-search" ["l"="61.016,13.022"]
"mpatacchiola/dissecting-reinforcement-learning" ["l"="57.443,18.096", "c"=45]
"Raiden49/dubins_curve" ["l"="61.645,13.135"]
"Raiden49/reeds-shepp_curve" ["l"="61.639,13.157"]
"kaist-silab/HiMAP" ["l"="62.077,13.462"]
"Sahnvour/PathFinder" ["l"="61.291,13.397"]
"CPFL/Autoware-Manuals" ["l"="62.779,12.231", "c"=461]
"lunjohnzhang/ggo_public" ["l"="62.042,13.303"]
"bit-lsj/HPHS" ["l"="61.707,13.142"]
"chenzhike110/Semantic-Motion-Retargeting" ["l"="62.094,13.48"]
"mpt0816/Cilqr" ["l"="61.615,13.126"]
"ahq1993/ib-rrtstar" ["l"="61.388,13.477"]
"MAPIRlab/mapir-ros-pkgs" ["l"="61.568,13.794"]
"carlosmccosta/dynamic_robot_localization" ["l"="58.196,9.909", "c"=142]
"NKU-MobFly-Robotics/LRAE" ["l"="60.537,13.814", "c"=334]
"peiyu-cui/uav_motion_planning" ["l"="61.817,13.802"]
"QingZhuanya/corridor_Bspline_optimization" ["l"="59.938,15.034", "c"=1017]
"Cognitive-AI-Systems/MAPF-GPT" ["l"="-44.136,26.418", "c"=551]
"bhy/mcvi" ["l"="61.301,13.28"]
"ros-gbp/bfl-release" ["l"="61.496,13.956"]
"zegangYang/PSO_PathPlaningNew" ["l"="61.754,13.121"]
"sumanismcse/Path-Planning" ["l"="61.756,13.089"]
"abcyzj/MeshRet" ["l"="30.253,28.453", "c"=94]
"zsunberg/ContinuousPOMDPTreeSearchExperiments.jl" ["l"="61.268,13.191"]
"jbradberry/boardgame-socketplayer" ["l"="61.081,12.966"]
"CognitiveAISystems/pogema" ["l"="-44.079,26.423", "c"=551]
"sychaichangkun/ROS-Academy-for-Beginners" ["l"="60.159,12.596", "c"=286]
"slam-code/SLAM" ["l"="59.507,11.105", "c"=87]
"caelan/motion-planners" ["l"="59.591,16.239", "c"=234]
"caelan/pybullet-planning" ["l"="59.577,16.313", "c"=234]
"moveit/moveit" ["l"="60.839,11.823", "c"=632]
"osrf/citysim" ["l"="61.515,13.526"]
"yukkysaito/vehicle_sim" ["l"="62.824,12.253", "c"=461]
"ahundt/awesome-robotics" ["l"="58.932,12.657", "c"=299]
"mithi/robotics-coursework" ["l"="58.888,12.667", "c"=299]
"OpenPTrack/OPT_TouchDesignerComponents" ["l"="61.794,13.911"]
"aleju/self-driving-truck" ["l"="61.612,12.477", "c"=774]
"AndrewGls/CarND-Path-Planning-Project" ["l"="61.384,13.019"]
"pirobot/rbx1" ["l"="60.2,12.528", "c"=286]
"JunshengFu/Model-Predictive-Control" ["l"="61.659,12.817", "c"=774]
"norlab-ulaval/libnabo" ["l"="57.974,10.015", "c"=142]
"MNewBie/PCL-Notes" ["l"="58.097,9.833", "c"=142]
"arrti/mcts" ["l"="61.082,13.081"]
"cristian-frincu/navigation_waypoints_scripts" ["l"="61.525,13.711"]
"ros-geographic-info/open_street_map" ["l"="59.309,12.455", "c"=299]
"slam-code/cartographer" ["l"="58.117,9.801", "c"=142]
"philbort/awesome-self-driving-cars" ["l"="61.673,12.544", "c"=774]
"marsauto/europilot" ["l"="61.58,12.419", "c"=774]
"shamilmamedov/dynamic_calibration" ["l"="59.958,16.621", "c"=234]
"SergiosKar/Robotic-Arm" ["l"="61.872,13.293"]
"s7ev3n/MPC_Code" ["l"="61.498,15.113", "c"=480]
"TUM-ICS/BIRDy" ["l"="59.979,16.629", "c"=234]
"chrismolony/books" ["l"="60.172,12.618", "c"=286]
"7dj7/Robot_Dynamics_Lagrangian_formulation" ["l"="61.906,13.28"]
"ipab-slmc/exotica" ["l"="61.574,16.468", "c"=184]
"avgaydashenko/d_star" ["l"="61.448,13.135"]
"jmaye/pure-pursuit-controller-ros" ["l"="61.492,13.671"]
"gerdl/scc_paths" ["l"="61.486,13.473"]
"JuliaPOMDP/POMDPGallery.jl" ["l"="61.079,13.292"]
"sisl/JuliaPackageTemplate.jl" ["l"="61.054,13.295"]
"yge58/collaborative_a_star_pathfinding" ["l"="62.035,13.362"]
"adrianapadilla/bubble_local_planner" ["l"="61.57,13.612"]
}