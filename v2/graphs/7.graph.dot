digraph G {
"microsoft/presidio" -> "microsoft/presidio-research" ["e"=1]
"microsoft/presidio" -> "guardrails-ai/guardrails"
"microsoft/presidio" -> "NVIDIA/NeMo-Guardrails"
"microsoft/presidio" -> "urchade/GLiNER"
"microsoft/presidio" -> "Unstructured-IO/unstructured"
"microsoft/presidio" -> "explodinggradients/ragas"
"microsoft/presidio" -> "dottxt-ai/outlines"
"microsoft/presidio" -> "confident-ai/deepeval"
"microsoft/presidio" -> "microsoft/LLMLingua"
"microsoft/presidio" -> "protectai/llm-guard" ["e"=1]
"microsoft/presidio" -> "argilla-io/argilla" ["e"=1]
"microsoft/presidio" -> "567-labs/instructor"
"microsoft/presidio" -> "langfuse/langfuse"
"microsoft/presidio" -> "stanfordnlp/dspy"
"microsoft/presidio" -> "Arize-ai/phoenix"
"n8n-io/n8n" -> "langgenius/dify"
"n8n-io/n8n" -> "browser-use/browser-use"
"n8n-io/n8n" -> "open-webui/open-webui"
"n8n-io/n8n" -> "ollama/ollama"
"n8n-io/n8n" -> "nocodb/nocodb" ["e"=1]
"n8n-io/n8n" -> "mendableai/firecrawl"
"n8n-io/n8n" -> "supabase/supabase" ["e"=1]
"n8n-io/n8n" -> "FlowiseAI/Flowise"
"n8n-io/n8n" -> "punkpeye/awesome-mcp-servers"
"n8n-io/n8n" -> "unclecode/crawl4ai"
"n8n-io/n8n" -> "cline/cline"
"n8n-io/n8n" -> "Mintplex-Labs/anything-llm"
"n8n-io/n8n" -> "lobehub/lobe-chat"
"n8n-io/n8n" -> "modelcontextprotocol/servers"
"n8n-io/n8n" -> "toeverything/AFFiNE" ["e"=1]
"huggingface/transformers" -> "pytorch/pytorch" ["e"=1]
"huggingface/transformers" -> "google-research/bert" ["e"=1]
"huggingface/transformers" -> "langchain-ai/langchain"
"huggingface/transformers" -> "meta-llama/llama"
"huggingface/transformers" -> "tensorflow/tensorflow" ["e"=1]
"huggingface/transformers" -> "Significant-Gravitas/AutoGPT"
"huggingface/transformers" -> "facebookresearch/fairseq" ["e"=1]
"huggingface/transformers" -> "vllm-project/vllm"
"huggingface/transformers" -> "deepspeedai/DeepSpeed"
"huggingface/transformers" -> "tensorflow/models" ["e"=1]
"huggingface/transformers" -> "ggml-org/llama.cpp"
"huggingface/transformers" -> "hiyouga/LLaMA-Factory"
"huggingface/transformers" -> "ollama/ollama"
"huggingface/transformers" -> "keras-team/keras" ["e"=1]
"huggingface/transformers" -> "huggingface/pytorch-image-models" ["e"=1]
"ocrmypdf/OCRmyPDF" -> "opendatalab/MinerU"
"ocrmypdf/OCRmyPDF" -> "Stirling-Tools/Stirling-PDF" ["e"=1]
"ocrmypdf/OCRmyPDF" -> "mendableai/firecrawl"
"ocrmypdf/OCRmyPDF" -> "microsoft/markitdown"
"ocrmypdf/OCRmyPDF" -> "allenai/olmocr"
"ocrmypdf/OCRmyPDF" -> "VikParuchuri/marker"
"ocrmypdf/OCRmyPDF" -> "tesseract-ocr/tesseract" ["e"=1]
"ocrmypdf/OCRmyPDF" -> "hiroi-sora/Umi-OCR" ["e"=1]
"ocrmypdf/OCRmyPDF" -> "VikParuchuri/surya"
"ocrmypdf/OCRmyPDF" -> "Byaidu/PDFMathTranslate"
"ocrmypdf/OCRmyPDF" -> "browser-use/browser-use"
"ocrmypdf/OCRmyPDF" -> "PaddlePaddle/PaddleOCR" ["e"=1]
"ocrmypdf/OCRmyPDF" -> "unclecode/crawl4ai"
"ocrmypdf/OCRmyPDF" -> "docling-project/docling"
"ocrmypdf/OCRmyPDF" -> "infiniflow/ragflow"
"vietnh1009/ASCII-generator" -> "TheBlewish/Automated-AI-Web-Researcher-Ollama"
"vietnh1009/ASCII-generator" -> "XiaoMi/ha_xiaomi_home" ["e"=1]
"vietnh1009/ASCII-generator" -> "LiteLoaderQQNT/LiteLoaderQQNT" ["e"=1]
"vietnh1009/ASCII-generator" -> "BewlyBewly/BewlyBewly" ["e"=1]
"vietnh1009/ASCII-generator" -> "Zeyi-Lin/HivisionIDPhotos"
"vietnh1009/ASCII-generator" -> "ZCShou/GoGoGo" ["e"=1]
"vietnh1009/ASCII-generator" -> "Byaidu/PDFMathTranslate"
"vietnh1009/ASCII-generator" -> "hanydd/BilibiliSponsorBlock" ["e"=1]
"vietnh1009/ASCII-generator" -> "RSSNext/Folo"
"vietnh1009/ASCII-generator" -> "subframe7536/maple-font" ["e"=1]
"vietnh1009/ASCII-generator" -> "SocialSisterYi/bilibili-API-collect" ["e"=1]
"vietnh1009/ASCII-generator" -> "sz3/libcimbar"
"vietnh1009/ASCII-generator" -> "ShiArthur03/ShiArthur03" ["e"=1]
"vietnh1009/ASCII-generator" -> "guozhigq/pilipala" ["e"=1]
"vietnh1009/ASCII-generator" -> "CherryHQ/cherry-studio"
"gradio-app/gradio" -> "streamlit/streamlit" ["e"=1]
"gradio-app/gradio" -> "langchain-ai/langchain"
"gradio-app/gradio" -> "vllm-project/vllm"
"gradio-app/gradio" -> "run-llama/llama_index"
"gradio-app/gradio" -> "huggingface/diffusers" ["e"=1]
"gradio-app/gradio" -> "huggingface/transformers"
"gradio-app/gradio" -> "lm-sys/FastChat"
"gradio-app/gradio" -> "deepspeedai/DeepSpeed"
"gradio-app/gradio" -> "meta-llama/llama"
"gradio-app/gradio" -> "comfyanonymous/ComfyUI" ["e"=1]
"gradio-app/gradio" -> "Lightning-AI/pytorch-lightning" ["e"=1]
"gradio-app/gradio" -> "oobabooga/text-generation-webui"
"gradio-app/gradio" -> "microsoft/autogen"
"gradio-app/gradio" -> "facebookresearch/segment-anything" ["e"=1]
"gradio-app/gradio" -> "ggml-org/llama.cpp"
"seleniumbase/SeleniumBase" -> "mherrmann/helium" ["e"=1]
"seleniumbase/SeleniumBase" -> "ultrafunkamsterdam/undetected-chromedriver" ["e"=1]
"seleniumbase/SeleniumBase" -> "microsoft/playwright-python" ["e"=1]
"seleniumbase/SeleniumBase" -> "khoj-ai/khoj"
"seleniumbase/SeleniumBase" -> "SeleniumHQ/selenium" ["e"=1]
"seleniumbase/SeleniumBase" -> "DrewThomasson/ebook2audiobook"
"seleniumbase/SeleniumBase" -> "stanford-oval/storm"
"seleniumbase/SeleniumBase" -> "unclecode/crawl4ai"
"seleniumbase/SeleniumBase" -> "docling-project/docling"
"seleniumbase/SeleniumBase" -> "Skyvern-AI/skyvern"
"seleniumbase/SeleniumBase" -> "ScrapeGraphAI/Scrapegraph-ai"
"seleniumbase/SeleniumBase" -> "Zipstack/unstract"
"seleniumbase/SeleniumBase" -> "getmaxun/maxun"
"seleniumbase/SeleniumBase" -> "ultrafunkamsterdam/nodriver" ["e"=1]
"seleniumbase/SeleniumBase" -> "google-gemini/cookbook"
"mindsdb/mindsdb" -> "ToolJet/ToolJet" ["e"=1]
"mindsdb/mindsdb" -> "FlowiseAI/Flowise"
"mindsdb/mindsdb" -> "run-llama/llama_index"
"mindsdb/mindsdb" -> "agno-agi/agno"
"mindsdb/mindsdb" -> "crewAIInc/crewAI"
"mindsdb/mindsdb" -> "mem0ai/mem0"
"mindsdb/mindsdb" -> "deepset-ai/haystack"
"mindsdb/mindsdb" -> "novuhq/novu" ["e"=1]
"mindsdb/mindsdb" -> "CopilotKit/CopilotKit" ["e"=1]
"mindsdb/mindsdb" -> "QuivrHQ/quivr"
"mindsdb/mindsdb" -> "Avaiga/taipy" ["e"=1]
"mindsdb/mindsdb" -> "langchain-ai/langchain"
"mindsdb/mindsdb" -> "All-Hands-AI/OpenHands"
"mindsdb/mindsdb" -> "mendableai/firecrawl"
"mindsdb/mindsdb" -> "microsoft/autogen"
"pdf2htmlEX/pdf2htmlEX" -> "coolwanglu/pdf2htmlEX" ["e"=1]
"pdf2htmlEX/pdf2htmlEX" -> "CosmosShadow/gptpdf"
"pdf2htmlEX/pdf2htmlEX" -> "lxfater/inpaint-web" ["e"=1]
"pdf2htmlEX/pdf2htmlEX" -> "yihong0618/bilingual_book_maker" ["e"=1]
"pdf2htmlEX/pdf2htmlEX" -> "VikParuchuri/surya"
"pdf2htmlEX/pdf2htmlEX" -> "pymupdf/PyMuPDF" ["e"=1]
"pdf2htmlEX/pdf2htmlEX" -> "opendatalab/PDF-Extract-Kit"
"pdf2htmlEX/pdf2htmlEX" -> "VikParuchuri/marker"
"pdf2htmlEX/pdf2htmlEX" -> "chenxwh/insanely-fast-whisper" ["e"=1]
"pdf2htmlEX/pdf2htmlEX" -> "Huanshere/VideoLingo"
"pdf2htmlEX/pdf2htmlEX" -> "haoel/haoel.github.io" ["e"=1]
"pdf2htmlEX/pdf2htmlEX" -> "wechat-article/wechat-article-exporter" ["e"=1]
"pdf2htmlEX/pdf2htmlEX" -> "getomni-ai/zerox"
"pdf2htmlEX/pdf2htmlEX" -> "opendatalab/MinerU"
"pdf2htmlEX/pdf2htmlEX" -> "zhuima/awesome-cloudflare" ["e"=1]
"divan/txqr" -> "divan/txqr-reader"
"divan/txqr" -> "jabcode/jabcode"
"divan/txqr" -> "fionafibration/TXQR-Android"
"divan/txqr" -> "eranyanay/1m-go-websockets" ["e"=1]
"divan/txqr" -> "divan/gotrace" ["e"=1]
"divan/txqr" -> "divan/expvarmon" ["e"=1]
"divan/txqr" -> "qifi-dev/qrs"
"divan/txqr" -> "claudiodangelis/qrcp" ["e"=1]
"divan/txqr" -> "drk1wi/Modlishka" ["e"=1]
"divan/txqr" -> "gomods/athens" ["e"=1]
"divan/txqr" -> "HFO4/gameboy.live" ["e"=1]
"divan/txqr" -> "babyname/fate" ["e"=1]
"divan/txqr" -> "inlets/inlets-archived" ["e"=1]
"divan/txqr" -> "akavel/up" ["e"=1]
"divan/txqr" -> "esimov/pigo" ["e"=1]
"gaspa93/googlemaps-scraper" -> "omkarcloud/google-maps-scraper"
"gaspa93/googlemaps-scraper" -> "patxijuaristi/google_maps_scraper"
"gaspa93/googlemaps-scraper" -> "lyyka/google-maps-businesses-scraper"
"gaspa93/googlemaps-scraper" -> "omkarcloud/google-maps-reviews-scraper"
"gaspa93/googlemaps-scraper" -> "gosom/google-maps-scraper"
"gaspa93/googlemaps-scraper" -> "MajideND/scraping-reviews-from-googlemaps"
"gaspa93/googlemaps-scraper" -> "outscraper/outscraper-python"
"gaspa93/googlemaps-scraper" -> "apify-projects/store-crawler-google-places" ["e"=1]
"gaspa93/googlemaps-scraper" -> "philshem/gmaps_popular_times_scraper" ["e"=1]
"apache/openwhisk-runtime-python" -> "apache/openwhisk-runtime-docker"
"apache/openwhisk-runtime-python" -> "apache/openwhisk-client-python"
"Oztechan/CCC" -> "aurora-is-near/evm2near"
"Oztechan/CCC" -> "rog0978/powerwall_display"
"Oztechan/CCC" -> "alpersonalwebsite/learn-node.js"
"Oztechan/CCC" -> "alpersonalwebsite/learn-typescript"
"Oztechan/CCC" -> "wednesday-solutions/go-template"
"Oztechan/CCC" -> "CamilleMo/command_recall"
"Oztechan/CCC" -> "YunaBraska/git-info-action"
"Oztechan/CCC" -> "MobilCat/AndroCat"
"Oztechan/CCC" -> "deca-org/deca-ui"
"Oztechan/CCC" -> "YunaBraska/java-info-action"
"Oztechan/CCC" -> "mustafaozhan/CosmeticScan"
"Oztechan/CCC" -> "superinsight/superinsight-db"
"Oztechan/CCC" -> "nosana-ci/nosana-programs"
"Oztechan/CCC" -> "mustafaozhan/FirebaseMessagingApp"
"Oztechan/CCC" -> "wednesday-solutions/react-graphql-ts-template"
"cyphar/paperback" -> "paritytech/banana_split"
"cyphar/paperback" -> "intra2net/paperbackup"
"cyphar/paperback" -> "jesseduffield/horcrux" ["e"=1]
"cyphar/paperback" -> "matiaskorhonen/paper-age" ["e"=1]
"cyphar/paperback" -> "Twometer/hyperbacked" ["e"=1]
"cyphar/paperback" -> "str4d/rage" ["e"=1]
"cyphar/paperback" -> "alisinabh/paperify"
"cyphar/paperback" -> "timwaters/paperback"
"cyphar/paperback" -> "antirez/freakwan"
"cyphar/paperback" -> "za3k/qr-backup"
"cyphar/paperback" -> "rustic-rs/rustic" ["e"=1]
"cyphar/paperback" -> "qifi-dev/qrs"
"cyphar/paperback" -> "str4d/age-plugin-yubikey" ["e"=1]
"zach-snell/slack-export" -> "hfaran/slack-export-viewer"
"zach-snell/slack-export" -> "sebseager/slack-exporter"
"zach-snell/slack-export" -> "hfaran/slack2html"
"zach-snell/slack-export" -> "hisabimbola/slack-history-export"
"mrdbourke/Sentiment-Analysis-with-Keras" -> "mrdbourke/AIND-Machine-Translation"
"mrdbourke/Sentiment-Analysis-with-Keras" -> "mrdbourke/coursera_bioinformatics_and_genetic_algorithm_experiment"
"mrdbourke/AIND-Machine-Translation" -> "mrdbourke/fastai"
"mrdbourke/fastai" -> "mrdbourke/learnopencv"
"mrdbourke/fastai" -> "mrdbourke/deep-learning"
"ibm-functions/composer" -> "ibm-functions/shell"
"ibm-functions/composer" -> "apache/openwhisk-composer"
"ibm-functions/composer" -> "IBM/solsa"
"ibm-functions/composer" -> "apache/openwhisk-external-resources"
"ibm-functions/composer" -> "apache/openwhisk-client-js"
"kazhuravlev/options-gen" -> "kazhuravlev/git-tools"
"kazhuravlev/options-gen" -> "rog0978/powerwall_display"
"kazhuravlev/options-gen" -> "alpersonalwebsite/learn-node.js"
"kazhuravlev/options-gen" -> "aurora-is-near/evm2near"
"kazhuravlev/options-gen" -> "alpersonalwebsite/learn-typescript"
"kazhuravlev/options-gen" -> "wednesday-solutions/go-template"
"kazhuravlev/options-gen" -> "kazhuravlev/just"
"kazhuravlev/options-gen" -> "markwylde/just-tap"
"kazhuravlev/options-gen" -> "wednesday-solutions/react-graphql-ts-template"
"kazhuravlev/options-gen" -> "CamilleMo/command_recall"
"kazhuravlev/options-gen" -> "YunaBraska/java-info-action"
"kazhuravlev/options-gen" -> "YunaBraska/git-info-action"
"kazhuravlev/options-gen" -> "nosana-ci/nosana-programs"
"paritytech/banana_split" -> "cyphar/paperback"
"iam-mhaseeb/Python-Scrapy-Email-Phone-Number-Crawler" -> "4xx404/GlassFrog"
"iter8-tools/iter8" -> "iter8-tools/iter8-istio"
"iter8-tools/iter8" -> "iter8-tools/iter8-analytics"
"iter8-tools/iter8" -> "iter8-tools/iter8-kfserving"
"mustafaozhan/Breeze-Adapta-Cursor" -> "mustafaozhan/CosmeticScan"
"mustafaozhan/Breeze-Adapta-Cursor" -> "mustafaozhan/FirebaseMessagingApp"
"mustafaozhan/Breeze-Adapta-Cursor" -> "mustafaozhan/Arc-Maia-Grey-Theme"
"mustafaozhan/Breeze-Adapta-Cursor" -> "MobilCat/AndroCat"
"mustafaozhan/Breeze-Adapta-Cursor" -> "mustafaozhan/Numix-Cursor-Maia"
"mustafaozhan/Breeze-Adapta-Cursor" -> "Oztechan/iosCCC"
"Rupan/paperbak" -> "colorsafe/colorsafe"
"Rupan/paperbak" -> "timwaters/paperback"
"GluuFederation/oxAuth" -> "GluuFederation/oxTrust"
"GluuFederation/oxAuth" -> "GluuFederation/community-edition-setup"
"GluuFederation/oxAuth" -> "GluuFederation/oxd"
"GluuFederation/oxAuth" -> "JanssenProject/jans"
"GluuFederation/oxAuth" -> "JanssenProject/home"
"GluuFederation/oxAuth" -> "JanssenProject/jans-auth-server"
"GluuFederation/oxAuth" -> "GluuFederation/oxCore"
"GluuFederation/oxTrust" -> "GluuFederation/oxAuth"
"GluuFederation/oxTrust" -> "GluuFederation/oxd"
"GluuFederation/oxTrust" -> "GluuFederation/community-edition-setup"
"explosion/wasabi" -> "explosion/catalogue"
"explosion/wasabi" -> "explosion/srsly"
"explosion/wasabi" -> "ines/juniper" ["e"=1]
"explosion/wasabi" -> "explosion/confection"
"explosion/wasabi" -> "koaning/spacy-report"
"explosion/wasabi" -> "explosion/spacy-experimental" ["e"=1]
"alchemy-fr/Phraseanet" -> "alchemy-fr/phrasea"
"alchemy-fr/Phraseanet" -> "atrocore/atrodam"
"alchemy-fr/Phraseanet" -> "razuna/razuna"
"explosion/srsly" -> "explosion/catalogue"
"explosion/srsly" -> "explosion/spacy-transformers" ["e"=1]
"explosion/srsly" -> "explosion/cython-blis"
"explosion/srsly" -> "explosion/wasabi"
"explosion/srsly" -> "explosion/confection"
"explosion/srsly" -> "microsoft/spacy-ann-linker" ["e"=1]
"explosion/srsly" -> "explosion/radicli"
"equalframework/equal" -> "Stryusuf/tron-sunpump-sniper-bot"
"alexliubj/SwiftUI-Currency-Converter" -> "Oztechan/iosCCC"
"mrdbourke/your-first-kaggle-submission" -> "dformoso/sklearn-classification" ["e"=1]
"mrdbourke/your-first-kaggle-submission" -> "mrdbourke/python-list-comprehensions-tutorial"
"mrdbourke/your-first-kaggle-submission" -> "mrdbourke/fastai"
"mrdbourke/your-first-kaggle-submission" -> "mrdbourke/Udacity_DLND_Projects"
"mrdbourke/your-first-kaggle-submission" -> "mrdbourke/cnn-explainer"
"amosgyamfi/awesome-fasthtml" -> "curtis-allan/Shad4Fasthtml"
"amosgyamfi/awesome-fasthtml" -> "ninohdasilva/fasthtml-tailwind-template"
"amosgyamfi/awesome-fasthtml" -> "AnswerDotAI/fh-deploy"
"gbolmier/funk-svd" -> "AdilZouitine/paper_notes"
"gbolmier/funk-svd" -> "AdilZouitine/outfit"
"tom-doerr/dotfiles" -> "RayFernando1337/llm-cursor-rules"
"tom-doerr/dotfiles" -> "deedy/edgar"
"tom-doerr/dotfiles" -> "tom-doerr/perplexity_search"
"tom-doerr/dotfiles" -> "mendableai/llmstxt-generator"
"tom-doerr/dotfiles" -> "context-labs/autodelve"
"iter8-tools/iter8-istio" -> "iter8-tools/iter8-analytics"
"iter8-tools/iter8-istio" -> "iter8-tools/iter8-kfserving"
"iter8-tools/iter8-istio" -> "istio-ecosystem/iter8"
"istio-ecosystem/iter8" -> "iter8-tools/iter8-analytics"
"mustafaozhan/GoogleIntegratedSystemConky" -> "mustafaozhan/CosmeticScan"
"mustafaozhan/GoogleIntegratedSystemConky" -> "mustafaozhan/FirebaseMessagingApp"
"mustafaozhan/GoogleIntegratedSystemConky" -> "mustafaozhan/Arc-Maia-Grey-Theme"
"mustafaozhan/GoogleIntegratedSystemConky" -> "MobilCat/AndroCat"
"mustafaozhan/GoogleIntegratedSystemConky" -> "mustafaozhan/Breeze-Adapta-Cursor"
"mustafaozhan/GoogleIntegratedSystemConky" -> "Oztechan/iosCCC"
"mustafaozhan/GoogleIntegratedSystemConky" -> "Oztechan/CCC"
"treolabs/treopim" -> "treolabs/treocore"
"treolabs/treopim" -> "kennersoft/kennerpim"
"loopingz/webda.io" -> "loopingz/smtp-relay"
"fionafibration/TXQR-Android" -> "mundungus443/QRStreamer"
"dutchcoders/slackarchive" -> "docmarionum1/slack-archive-bot"
"MobilCat/AndroCat" -> "mustafaozhan/FirebaseMessagingApp"
"MobilCat/AndroCat" -> "mustafaozhan/CosmeticScan"
"MobilCat/AndroCat" -> "mustafaozhan/Arc-Maia-Grey-Theme"
"MobilCat/AndroCat" -> "Oztechan/iosCCC"
"MobilCat/AndroCat" -> "mustafaozhan/Breeze-Adapta-Cursor"
"coder/retry" -> "coder/cli"
"coder/retry" -> "ericpaulsen/coder-aks"
"coder/retry" -> "coder/hat"
"coder/retry" -> "matifali/update-coder-template"
"AdilZouitine/pyFeel" -> "AdilZouitine/outfit"
"apache/openwhisk-composer" -> "ibm-functions/composer"
"apache/openwhisk-composer" -> "IBM/solsa"
"IBM/solsa" -> "IBM/kar"
"IBM/solsa" -> "IBM/super"
"AdilZouitine/paper_notes" -> "AdilZouitine/outfit"
"AdilZouitine/outfit" -> "AdilZouitine/paper_notes"
"cognitive-catalyst/WA-Testing-Tool" -> "watson-developer-cloud/assistant-improve-recommendations-notebook"
"cognitive-catalyst/WA-Testing-Tool" -> "watson-developer-cloud/assistant-skill-analysis"
"cognitive-catalyst/WA-Testing-Tool" -> "watson-developer-cloud/assistant-dialog-flow-analysis"
"cognitive-catalyst/WA-Testing-Tool" -> "IBM/watson-stt-wer-python"
"cognitive-catalyst/WA-Testing-Tool" -> "IBM/watson-tts-python"
"cognitive-catalyst/WA-Testing-Tool" -> "preethm/watson-assistant-metrics-notebook"
"coder/hat" -> "coder/bigdur"
"coder/hat" -> "coder/cli"
"coder/hat" -> "cmoog/sshproxy"
"coder/flog" -> "coder/cli"
"mustafaozhan/Papirus-Icon-Theme-Vectorel-Folders" -> "mustafaozhan/FirebaseMessagingApp"
"coder/nbin" -> "coder/hat"
"coder/nbin" -> "coder/bigdur"
"coder/nbin" -> "coder/pretty"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "CASRAI-CRedIT/Dictionary"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "TheOneStudioLLC/Mac-Recorder"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "xames3/nanotorch"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "onraj/expo-draggable-textfield"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "Weitheskmt/WeiDMD"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "CodeFromAnywhere/ActionSchema"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "aidinrs/sql-puzzle"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "xames3/learn"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "FixedPointIO/Artemis"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "rynmon/malScraper"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "Romain-P/Guinness-Bot"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "tm88instrument/BX-Private"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "i38100/IIoT-Intelligent-Algorithm"
"TheAnig/NER-LSTM-CNN-Pytorch" -> "RevGev/AVAX-SNIPING-BOT-OPENSOURCE"
"mrdbourke/python-list-comprehensions-tutorial" -> "mrdbourke/cnn-explainer"
"watson-developer-cloud/assistant-improve-recommendations-notebook" -> "cognitive-catalyst/WA-Testing-Tool"
"watson-developer-cloud/assistant-improve-recommendations-notebook" -> "watson-developer-cloud/assistant-skill-analysis"
"watson-developer-cloud/assistant-improve-recommendations-notebook" -> "watson-developer-cloud/assistant-dialog-flow-analysis"
"watson-developer-cloud/assistant-improve-recommendations-notebook" -> "preethm/watson-assistant-metrics-notebook"
"mustafaozhan/Arc-Maia-Grey-Theme" -> "mustafaozhan/FirebaseMessagingApp"
"mustafaozhan/Arc-Maia-Grey-Theme" -> "mustafaozhan/CosmeticScan"
"mustafaozhan/Arc-Maia-Grey-Theme" -> "MobilCat/AndroCat"
"mustafaozhan/Arc-Maia-Grey-Theme" -> "mustafaozhan/Breeze-Adapta-Cursor"
"coder/cli" -> "cmoog/sshproxy"
"coder/cli" -> "coder/flog"
"coder/cli" -> "coder/hat"
"coder/cli" -> "coder/exectrace"
"coder/cli" -> "coder/pretty"
"treolabs/treocore" -> "treolabs/treopim"
"treolabs/treocore" -> "treolabs/treocrm"
"Haeven/msteam-log-transport" -> "manumerous/vpselector"
"coder/ts-logger" -> "coder/homebrew-coder"
"coder/ts-logger" -> "coder/envbuilder-starter-devcontainer"
"iter8-tools/iter8-analytics" -> "iter8-tools/iter8-kfserving"
"iter8-tools/iter8-analytics" -> "iter8-tools/iter8-istio"
"deepspeedai/DeepSpeed" -> "vllm-project/vllm"
"deepspeedai/DeepSpeed" -> "NVIDIA/Megatron-LM" ["e"=1]
"deepspeedai/DeepSpeed" -> "hpcaitech/ColossalAI"
"deepspeedai/DeepSpeed" -> "Dao-AILab/flash-attention" ["e"=1]
"deepspeedai/DeepSpeed" -> "lm-sys/FastChat"
"deepspeedai/DeepSpeed" -> "deepspeedai/DeepSpeedExamples" ["e"=1]
"deepspeedai/DeepSpeed" -> "huggingface/peft"
"deepspeedai/DeepSpeed" -> "meta-llama/llama"
"deepspeedai/DeepSpeed" -> "tatsu-lab/stanford_alpaca"
"deepspeedai/DeepSpeed" -> "hiyouga/LLaMA-Factory"
"deepspeedai/DeepSpeed" -> "THUDM/ChatGLM-6B" ["e"=1]
"deepspeedai/DeepSpeed" -> "ymcui/Chinese-LLaMA-Alpaca" ["e"=1]
"deepspeedai/DeepSpeed" -> "langchain-ai/langchain"
"deepspeedai/DeepSpeed" -> "Vision-CAIR/MiniGPT-4"
"deepspeedai/DeepSpeed" -> "huggingface/transformers"
"karpathy/minGPT" -> "karpathy/nanoGPT"
"karpathy/minGPT" -> "karpathy/nn-zero-to-hero"
"karpathy/minGPT" -> "karpathy/micrograd"
"karpathy/minGPT" -> "karpathy/llm.c"
"karpathy/minGPT" -> "karpathy/llama2.c"
"karpathy/minGPT" -> "Lightning-AI/pytorch-lightning" ["e"=1]
"karpathy/minGPT" -> "deepspeedai/DeepSpeed"
"karpathy/minGPT" -> "jax-ml/jax" ["e"=1]
"karpathy/minGPT" -> "openai/gpt-2" ["e"=1]
"karpathy/minGPT" -> "Dao-AILab/flash-attention" ["e"=1]
"karpathy/minGPT" -> "google-research/google-research" ["e"=1]
"karpathy/minGPT" -> "tatsu-lab/stanford_alpaca"
"karpathy/minGPT" -> "openai/CLIP" ["e"=1]
"karpathy/minGPT" -> "vllm-project/vllm"
"karpathy/minGPT" -> "google-research/tuning_playbook" ["e"=1]
"Shpota/github-activity-generator" -> "srbhr/Resume-Matcher"
"Shpota/github-activity-generator" -> "feder-cr/Jobs_Applier_AI_Agent_AIHawk"
"Shpota/github-activity-generator" -> "artiebits/fake-git-history"
"Shpota/github-activity-generator" -> "Evavic44/portfolio-ideas" ["e"=1]
"Shpota/github-activity-generator" -> "teableio/teable" ["e"=1]
"Shpota/github-activity-generator" -> "FujiwaraChoki/MoneyPrinterV2"
"Shpota/github-activity-generator" -> "nishant-Tiwari24/company-wise-dsa" ["e"=1]
"Shpota/github-activity-generator" -> "nishant-Tiwari24/company-wise-projects" ["e"=1]
"Shpota/github-activity-generator" -> "al1abb/invoify" ["e"=1]
"Shpota/github-activity-generator" -> "DevCaress/guia-entrevistas-de-programacion" ["e"=1]
"Shpota/github-activity-generator" -> "gelstudios/gitfiti" ["e"=1]
"Shpota/github-activity-generator" -> "blacklanternsecurity/bbot" ["e"=1]
"Shpota/github-activity-generator" -> "dockur/macos" ["e"=1]
"Shpota/github-activity-generator" -> "khoj-ai/khoj"
"Shpota/github-activity-generator" -> "docling-project/docling"
"milvus-io/milvus" -> "facebookresearch/faiss" ["e"=1]
"milvus-io/milvus" -> "qdrant/qdrant"
"milvus-io/milvus" -> "weaviate/weaviate"
"milvus-io/milvus" -> "chroma-core/chroma"
"milvus-io/milvus" -> "run-llama/llama_index"
"milvus-io/milvus" -> "vllm-project/vllm"
"milvus-io/milvus" -> "langchain-ai/langchain"
"milvus-io/milvus" -> "FoundationAgents/MetaGPT"
"milvus-io/milvus" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"milvus-io/milvus" -> "langgenius/dify"
"milvus-io/milvus" -> "deepspeedai/DeepSpeed"
"milvus-io/milvus" -> "microsoft/graphrag"
"milvus-io/milvus" -> "lm-sys/FastChat"
"milvus-io/milvus" -> "ClickHouse/ClickHouse" ["e"=1]
"milvus-io/milvus" -> "pingcap/tidb" ["e"=1]
"qdrant/qdrant" -> "weaviate/weaviate"
"qdrant/qdrant" -> "milvus-io/milvus"
"qdrant/qdrant" -> "chroma-core/chroma"
"qdrant/qdrant" -> "run-llama/llama_index"
"qdrant/qdrant" -> "huggingface/candle" ["e"=1]
"qdrant/qdrant" -> "pola-rs/polars" ["e"=1]
"qdrant/qdrant" -> "facebookresearch/faiss" ["e"=1]
"qdrant/qdrant" -> "deepset-ai/haystack"
"qdrant/qdrant" -> "pgvector/pgvector"
"qdrant/qdrant" -> "meilisearch/meilisearch" ["e"=1]
"qdrant/qdrant" -> "tracel-ai/burn" ["e"=1]
"qdrant/qdrant" -> "vllm-project/vllm"
"qdrant/qdrant" -> "surrealdb/surrealdb" ["e"=1]
"qdrant/qdrant" -> "stanfordnlp/dspy"
"qdrant/qdrant" -> "langchain-ai/langchain"
"srbhr/Resume-Matcher" -> "khoj-ai/khoj"
"srbhr/Resume-Matcher" -> "AmruthPillai/Reactive-Resume" ["e"=1]
"srbhr/Resume-Matcher" -> "xitanggg/open-resume" ["e"=1]
"srbhr/Resume-Matcher" -> "stanford-oval/storm"
"srbhr/Resume-Matcher" -> "FujiwaraChoki/MoneyPrinterV2"
"srbhr/Resume-Matcher" -> "zaidmukaddam/scira"
"srbhr/Resume-Matcher" -> "DrewThomasson/ebook2audiobook"
"srbhr/Resume-Matcher" -> "gitroomhq/postiz-app" ["e"=1]
"srbhr/Resume-Matcher" -> "Canner/WrenAI"
"srbhr/Resume-Matcher" -> "feder-cr/Jobs_Applier_AI_Agent_AIHawk"
"srbhr/Resume-Matcher" -> "swirlai/swirl-search"
"srbhr/Resume-Matcher" -> "assafelovic/gpt-researcher"
"srbhr/Resume-Matcher" -> "teableio/teable" ["e"=1]
"srbhr/Resume-Matcher" -> "unclecode/crawl4ai"
"srbhr/Resume-Matcher" -> "twentyhq/twenty" ["e"=1]
"sz3/libcimbar" -> "sz3/cfc"
"sz3/libcimbar" -> "qifi-dev/qrs"
"sz3/libcimbar" -> "RubyMetric/chsrc" ["e"=1]
"sz3/libcimbar" -> "niedev/RTranslator" ["e"=1]
"sz3/libcimbar" -> "Zeyi-Lin/HivisionIDPhotos"
"sz3/libcimbar" -> "ZCShou/GoGoGo" ["e"=1]
"sz3/libcimbar" -> "pangxiaobin/image-matting" ["e"=1]
"sz3/libcimbar" -> "ourongxing/newsnow"
"sz3/libcimbar" -> "Huanshere/VideoLingo"
"sz3/libcimbar" -> "sz3/cimbar"
"sz3/libcimbar" -> "vastsa/FileCodeBox" ["e"=1]
"sz3/libcimbar" -> "luckjiawei/frpc-desktop" ["e"=1]
"sz3/libcimbar" -> "zhuima/awesome-cloudflare" ["e"=1]
"sz3/libcimbar" -> "opendatalab/MinerU"
"sz3/libcimbar" -> "TeamWiseFlow/wiseflow"
"stitchfix/hamilton" -> "DAGWorks-Inc/hamilton"
"stitchfix/hamilton" -> "enrolla/enrolla"
"stitchfix/hamilton" -> "thebabylonai/babylog"
"stitchfix/hamilton" -> "map3xyz/supercharge"
"stitchfix/hamilton" -> "usecakework/cakework"
"stitchfix/hamilton" -> "Left-on-Read/leftonread"
"stitchfix/hamilton" -> "NangoHQ/nango-sync"
"stitchfix/hamilton" -> "FrigadeHQ/react-native-onboard"
"stitchfix/hamilton" -> "vaerohq/vaero"
"stitchfix/hamilton" -> "Helicone/valyr"
"stitchfix/hamilton" -> "matanolabs/matano"
"stitchfix/hamilton" -> "athina-ai/athina-sdk"
"stitchfix/hamilton" -> "traceloop/jest-opentelemetry"
"stitchfix/hamilton" -> "outerbase/ezql"
"stitchfix/hamilton" -> "fabiustech/openai"
"karpathy/micrograd" -> "tinygrad/tinygrad"
"karpathy/micrograd" -> "karpathy/makemore"
"karpathy/micrograd" -> "karpathy/nn-zero-to-hero"
"karpathy/micrograd" -> "karpathy/nanoGPT"
"karpathy/micrograd" -> "karpathy/minGPT"
"karpathy/micrograd" -> "karpathy/llm.c"
"karpathy/micrograd" -> "karpathy/llama2.c"
"karpathy/micrograd" -> "karpathy/minbpe"
"karpathy/micrograd" -> "karpathy/LLM101n"
"karpathy/micrograd" -> "jax-ml/jax" ["e"=1]
"karpathy/micrograd" -> "karpathy/ng-video-lecture"
"karpathy/micrograd" -> "naklecha/llama3-from-scratch"
"karpathy/micrograd" -> "triton-lang/triton" ["e"=1]
"karpathy/micrograd" -> "ggml-org/ggml"
"karpathy/micrograd" -> "karpathy/build-nanogpt"
"rzane/docker2exe" -> "Blaizzy/mlx-audio" ["e"=1]
"rzane/docker2exe" -> "MODSetter/SurfSense"
"rzane/docker2exe" -> "egoist/sitefetch"
"rzane/docker2exe" -> "NilsIrl/dockerc" ["e"=1]
"rzane/docker2exe" -> "hotheadhacker/awesome-selfhost-docker" ["e"=1]
"rzane/docker2exe" -> "simstudioai/sim"
"rzane/docker2exe" -> "supabase-community/supabase-mcp"
"rzane/docker2exe" -> "Zackriya-Solutions/meeting-minutes"
"rzane/docker2exe" -> "simular-ai/Agent-S"
"rzane/docker2exe" -> "Anemll/Anemll" ["e"=1]
"rzane/docker2exe" -> "liam-hq/liam" ["e"=1]
"rzane/docker2exe" -> "GoogleCloudPlatform/kubectl-ai"
"rzane/docker2exe" -> "Devolutions/IronRDP" ["e"=1]
"rzane/docker2exe" -> "aipotheosis-labs/aci"
"rzane/docker2exe" -> "gosom/google-maps-scraper"
"stas00/ml-engineering" -> "gpu-mode/lectures" ["e"=1]
"stas00/ml-engineering" -> "naklecha/llama3-from-scratch"
"stas00/ml-engineering" -> "mlabonne/llm-course"
"stas00/ml-engineering" -> "Lightning-AI/litgpt"
"stas00/ml-engineering" -> "srush/GPU-Puzzles"
"stas00/ml-engineering" -> "rasbt/LLMs-from-scratch"
"stas00/ml-engineering" -> "google-research/tuning_playbook" ["e"=1]
"stas00/ml-engineering" -> "sgl-project/sglang" ["e"=1]
"stas00/ml-engineering" -> "karpathy/llm.c"
"stas00/ml-engineering" -> "stanfordnlp/dspy"
"stas00/ml-engineering" -> "karpathy/LLM101n"
"stas00/ml-engineering" -> "vllm-project/vllm"
"stas00/ml-engineering" -> "karpathy/minbpe"
"stas00/ml-engineering" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"stas00/ml-engineering" -> "triton-lang/triton" ["e"=1]
"creativeJoe007/google-leads-scraper" -> "creativeJoe007/instagram-leads-scraper"
"deepset-ai/haystack" -> "run-llama/llama_index"
"deepset-ai/haystack" -> "stanfordnlp/dspy"
"deepset-ai/haystack" -> "mem0ai/mem0"
"deepset-ai/haystack" -> "neuml/txtai"
"deepset-ai/haystack" -> "BerriAI/litellm"
"deepset-ai/haystack" -> "microsoft/autogen"
"deepset-ai/haystack" -> "crewAIInc/crewAI"
"deepset-ai/haystack" -> "UKPLab/sentence-transformers" ["e"=1]
"deepset-ai/haystack" -> "guidance-ai/guidance"
"deepset-ai/haystack" -> "Unstructured-IO/unstructured"
"deepset-ai/haystack" -> "vllm-project/vllm"
"deepset-ai/haystack" -> "microsoft/graphrag"
"deepset-ai/haystack" -> "langchain-ai/langchain"
"deepset-ai/haystack" -> "qdrant/qdrant"
"deepset-ai/haystack" -> "explodinggradients/ragas"
"wednesday-solutions/react-template" -> "wednesday-solutions/serverless"
"wednesday-solutions/react-template" -> "mhttp-org/unity-sdk"
"wednesday-solutions/react-template" -> "wednesday-solutions/node-mongo-express"
"wednesday-solutions/react-template" -> "amadotejada/GAMpass"
"wednesday-solutions/react-template" -> "wednesday-solutions/react-graphql-ts-template"
"wednesday-solutions/react-template" -> "amadotejada/self-portal"
"sz3/cfc" -> "sz3/libcimbar"
"sz3/cfc" -> "sz3/cimbar"
"sz3/cfc" -> "qifi-dev/qrs"
"sz3/cfc" -> "ganlvtech/qrcode-file-transfer"
"invopop/gobl" -> "usecakework/cakework"
"invopop/gobl" -> "map3xyz/supercharge"
"invopop/gobl" -> "thebabylonai/babylog"
"invopop/gobl" -> "invopop/gobl.xinvoice"
"invopop/gobl" -> "enrolla/enrolla"
"invopop/gobl" -> "outerbase/ezql"
"invopop/gobl" -> "iota-uz/iota-sdk"
"invopop/gobl" -> "vaerohq/vaero"
"invopop/gobl" -> "Left-on-Read/leftonread"
"invopop/gobl" -> "CommonPaper/Mutual-NDA"
"invopop/gobl" -> "fabiustech/openai"
"neuml/txtai" -> "deepset-ai/haystack"
"neuml/txtai" -> "SciPhi-AI/R2R"
"neuml/txtai" -> "stanfordnlp/dspy"
"neuml/txtai" -> "dottxt-ai/outlines"
"neuml/txtai" -> "BerriAI/litellm"
"neuml/txtai" -> "Unstructured-IO/unstructured"
"neuml/txtai" -> "567-labs/instructor"
"neuml/txtai" -> "letta-ai/letta"
"neuml/txtai" -> "run-llama/llama_index"
"neuml/txtai" -> "guidance-ai/guidance"
"neuml/txtai" -> "weaviate/Verba"
"neuml/txtai" -> "Lightning-AI/litgpt"
"neuml/txtai" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"neuml/txtai" -> "qdrant/qdrant"
"neuml/txtai" -> "Cinnamon/kotaemon"
"wednesday-solutions/flutter_template" -> "alpersonalwebsite/learn-node.js"
"wednesday-solutions/flutter_template" -> "aurora-is-near/evm2near"
"wednesday-solutions/flutter_template" -> "alpersonalwebsite/learn-typescript"
"wednesday-solutions/flutter_template" -> "rog0978/powerwall_display"
"wednesday-solutions/flutter_template" -> "CamilleMo/command_recall"
"wednesday-solutions/flutter_template" -> "YunaBraska/git-info-action"
"wednesday-solutions/flutter_template" -> "wednesday-solutions/go-template"
"wednesday-solutions/flutter_template" -> "wednesday-solutions/react-graphql-ts-template"
"wednesday-solutions/flutter_template" -> "superinsight/superinsight-db"
"wednesday-solutions/flutter_template" -> "YunaBraska/java-info-action"
"wednesday-solutions/flutter_template" -> "deca-org/deca-ui"
"wednesday-solutions/flutter_template" -> "nosana-ci/nosana-programs"
"wednesday-solutions/flutter_template" -> "robot-bulls/automated_tiktok_video_creation"
"wednesday-solutions/flutter_template" -> "wednesday-solutions/node-mongo-express"
"wednesday-solutions/flutter_template" -> "aretecode/system-design-templates-excalidraw"
"segment-any-text/wtpsplit" -> "notAI-tech/deepsegment" ["e"=1]
"segment-any-text/wtpsplit" -> "nipunsadvilkar/pySBD" ["e"=1]
"segment-any-text/wtpsplit" -> "huggingface/setfit" ["e"=1]
"segment-any-text/wtpsplit" -> "mixedbread-ai/batched"
"segment-any-text/wtpsplit" -> "facebookresearch/SONAR" ["e"=1]
"segment-any-text/wtpsplit" -> "xhluca/bm25s"
"segment-any-text/wtpsplit" -> "urchade/GLiNER"
"segment-any-text/wtpsplit" -> "AnswerDotAI/rerankers"
"segment-any-text/wtpsplit" -> "bminixhofer/tractjs" ["e"=1]
"segment-any-text/wtpsplit" -> "tsproisl/SoMaJo" ["e"=1]
"segment-any-text/wtpsplit" -> "mediacloud/sentence-splitter" ["e"=1]
"segment-any-text/wtpsplit" -> "mirth/chonky"
"segment-any-text/wtpsplit" -> "SapienzaNLP/relik"
"segment-any-text/wtpsplit" -> "MinishLab/semhash"
"segment-any-text/wtpsplit" -> "fnl/syntok" ["e"=1]
"baek2sm/ml" -> "SBCC-World/SBCC-CONTRACT"
"baek2sm/ml" -> "GOLFROCHAIN/GOLFRO-CONTRACT"
"baek2sm/ml" -> "DRC-asia/DRC-mobility-contracts"
"sz3/cimbar" -> "sz3/cfc"
"sz3/cimbar" -> "sz3/cimbar-samples"
"sz3/cimbar" -> "sz3/libcimbar"
"superryeti/Email-Crawler-Lead-Generator" -> "Madi-S/Lead-Generation"
"superryeti/Email-Crawler-Lead-Generator" -> "sangaline/email-spy"
"superryeti/Email-Crawler-Lead-Generator" -> "iam-mhaseeb/Python-Scrapy-Email-Phone-Number-Crawler"
"superryeti/Email-Crawler-Lead-Generator" -> "JakeMaldonado/Linkedin-Lead-Generator"
"Arize-ai/client_python" -> "Arize-ai/phoenix-on-azure"
"Arize-ai/client_python" -> "Arize-ai/tutorials_python"
"IBM/watsonx-ai-samples" -> "watson-developer-cloud/assistant-toolkit"
"IBM/watsonx-ai-samples" -> "IBM/watsonx-ai-platform-demos"
"IBM/watsonx-ai-samples" -> "IBM/watsonx-developer-hub"
"IBM/watsonx-ai-samples" -> "IBM/ibm-generative-ai"
"IBM/watsonx-ai-samples" -> "watson-developer-cloud/assistant-improve-recommendations-notebook"
"IBM/watsonx-ai-samples" -> "ibm-self-serve-assets/SuperKnowa"
"artiebits/fake-git-history" -> "Shpota/github-activity-generator"
"artiebits/fake-git-history" -> "TheveloperX/Fake-Git-History"
"artiebits/fake-git-history" -> "SeniorStack720/healthcareservice"
"artiebits/fake-git-history" -> "SeniorStack720/Laravel"
"artiebits/fake-git-history" -> "SeniorStack720/car-rental-site"
"artiebits/fake-git-history" -> "Grussi48/drone-simulation"
"GluuFederation/community-edition-setup" -> "GluuFederation/oxTrust"
"GluuFederation/community-edition-setup" -> "GluuFederation/oxAuth"
"raphaelsty/mkb" -> "AdilZouitine/paper_notes"
"raphaelsty/mkb" -> "AdilZouitine/outfit"
"mrdbourke/learnopencv" -> "mrdbourke/fastai"
"mrdbourke/learnopencv" -> "mrdbourke/spaCy"
"mrdbourke/learnopencv" -> "mrdbourke/deep-learning"
"mrdbourke/learnopencv" -> "mrdbourke/cnn-explainer"
"n8n-io/n8n-nodes-starter" -> "n8n-io/n8n-docs"
"n8n-io/n8n-nodes-starter" -> "n8n-io/n8n-desktop-app"
"n8n-io/n8n-nodes-starter" -> "umanamente/n8n-nodes-globals"
"n8n-io/n8n-nodes-starter" -> "n8n-io/n8n-hosting"
"n8n-io/n8n-nodes-starter" -> "nerding-io/n8n-nodes-mcp"
"n8n-io/n8n-nodes-starter" -> "ivov/nodemaker"
"n8n-io/n8n-docs" -> "n8n-io/n8n-nodes-starter"
"n8n-io/n8n-docs" -> "n8n-io/n8n-desktop-app"
"n8n-io/n8n-docs" -> "n8n-io/n8n-hosting"
"n8n-io/n8n-docs" -> "ready4mars/n8n-render"
"n8n-io/n8n-docs" -> "nerding-io/n8n-nodes-mcp"
"beamworks/react-csv-importer" -> "UgnisSoftware/react-spreadsheet-import"
"UdaraJay/atm" -> "UdaraJay/_stats"
"asahi417/tner" -> "kabirkhan/recon" ["e"=1]
"asahi417/tner" -> "tomaarsen/SpanMarkerNER"
"asahi417/tner" -> "lajanugen/zeshel" ["e"=1]
"asahi417/tner" -> "izuna385/Entity-Linking-Recent-Trends" ["e"=1]
"asahi417/tner" -> "allanj/pytorch_neural_crf" ["e"=1]
"JoshCrozier/leetcode-javascript" -> "Chirag-Main1/ChatBot_perosnal"
"JoshCrozier/leetcode-javascript" -> "SupportTools/dr-syncer"
"JoshCrozier/leetcode-javascript" -> "MasterOfLogic1/UipathLibraries"
"JoshCrozier/leetcode-javascript" -> "Trylz/Restir_CPP"
"JoshCrozier/leetcode-javascript" -> "Webinix-dev/webinix"
"JoshCrozier/leetcode-javascript" -> "muraliavarma/vue-slot-table"
"JoshCrozier/leetcode-javascript" -> "spectrumwebco/kled.io"
"JoshCrozier/leetcode-javascript" -> "HMUNACHI/super-lazy-autograd"
"JoshCrozier/leetcode-javascript" -> "MacroSurfer/MacroSurferFunctions"
"JoshCrozier/leetcode-javascript" -> "furudo-erika/awesome-postman-alternatives"
"JoshCrozier/leetcode-javascript" -> "wyattm14/chatbot-template"
"JoshCrozier/leetcode-javascript" -> "RoyGeagea/inventory-management"
"JoshCrozier/leetcode-javascript" -> "gptBuster/gptBuster"
"JoshCrozier/leetcode-javascript" -> "RichartDedekind/NollarsVPN"
"JoshCrozier/leetcode-javascript" -> "updatedotdev/js"
"Oztechan/iosCCC" -> "mustafaozhan/CosmeticScan"
"Oztechan/iosCCC" -> "mustafaozhan/FirebaseMessagingApp"
"Oztechan/iosCCC" -> "MobilCat/AndroCat"
"Oztechan/iosCCC" -> "mustafaozhan/Arc-Maia-Grey-Theme"
"cyberus-technology/hedron" -> "phip1611/gitlab-timelogs"
"cyberus-technology/hedron" -> "cyberus-technology/cloud-hypervisor"
"coder/images" -> "coder/enterprise-helm"
"coder/images" -> "coder/coder-logstream-kube"
"coder/images" -> "coder/terraform-provider-coder"
"coder/images" -> "coder/modules"
"coder/images" -> "coder/coder-v1-cli"
"coder/images" -> "coder/docs"
"coder/images" -> "matifali/update-coder-template"
"chenming-wu/pymdp" -> "solstice-gao/chatglm-go"
"GluuFederation/oxd" -> "GluuFederation/casa"
"MartinoMensio/spacy-universal-sentence-encoder" -> "MartinoMensio/spacy-sentence-bert"
"MartinoMensio/spacy-sentence-bert" -> "MartinoMensio/spacy-universal-sentence-encoder"
"coder/coder-v1-cli" -> "coder/exectrace"
"coder/coder-v1-cli" -> "coder/docs"
"coder/coder-v1-cli" -> "coder/homebrew-coder"
"coder/coder-v1-cli" -> "coder/cli"
"explosion/catalogue" -> "explosion/confection"
"coder/slog" -> "coder/cli"
"coder/slog" -> "coder/hat"
"coder/slog" -> "coder/exectrace"
"coder/slog" -> "coder/redjet"
"coder/slog" -> "cmoog/sshproxy"
"coder/slog" -> "coder/retry"
"coder/slog" -> "ericpaulsen/coder-aks"
"coder/slog" -> "matifali/update-coder-template"
"coder/slog" -> "coder/aicommit"
"coder/slog" -> "coder/nbin"
"coder/slog" -> "coder/coder-v1-cli"
"lyyka/google-maps-businesses-scraper" -> "patxijuaristi/google_maps_scraper"
"lyyka/google-maps-businesses-scraper" -> "dhanraj6/Google-Maps-Scraper"
"atrocore/atropim" -> "atrocore/atrodam"
"atrocore/atropim" -> "atrocore/atrocore"
"atrocore/atropim" -> "treolabs/treopim"
"atrocore/atropim" -> "treolabs/treocore"
"project-codeflare/multi-cluster-app-dispatcher" -> "project-codeflare/codeflare-cli"
"watson-developer-cloud/assistant-toolkit" -> "IBM/watsonx-ai-samples"
"watson-developer-cloud/assistant-toolkit" -> "IBM/watsonx-developer-hub"
"watson-developer-cloud/assistant-toolkit" -> "IBM/ibm-generative-ai"
"coder/enterprise-helm" -> "coder/homebrew-coder"
"thayakawa-gh/SlackLogViewer" -> "kununu/slackdump2html"
"thayakawa-gh/SlackLogViewer" -> "rusq/slackdump"
"thayakawa-gh/SlackLogViewer" -> "hfaran/slack-export-viewer"
"mrdbourke/spaCy" -> "mrdbourke/deep-learning"
"thomasloupe/Slackord" -> "thomasloupe/Slackord1"
"thomasloupe/Slackord" -> "pR0Ps/slack-to-discord"
"outscraper/outscraper-python" -> "outscraper/outscraper-php"
"atrocore/atrodam" -> "atrocore/atropim"
"atrocore/atrodam" -> "atrocore/atrocore"
"yyeunggg/TelloPy" -> "henneberger/typekin"
"atrocore/atrocore" -> "turazashvili/SchemaCraftAI"
"atrocore/atrocore" -> "Artemis-labs-official/Artemis"
"atrocore/atrocore" -> "Webinix-dev/zig-webinix"
"atrocore/atrocore" -> "WubbzyDev/Pump-fun-multi-bot"
"atrocore/atrocore" -> "RockDard/cpp-health-check"
"andrewrfreed/ConversationalAI" -> "IBM/watson-tts-python"
"MehdiZouitine/gym_ma_toy" -> "AdilZouitine/outfit"
"Romain-P/Guinness-Bot" -> "i38100/IIoT-Intelligent-Algorithm"
"Romain-P/Guinness-Bot" -> "promptdesk/promptdesk"
"Romain-P/Guinness-Bot" -> "CASRAI-CRedIT/Dictionary"
"Romain-P/Guinness-Bot" -> "tm88instrument/BX-Private"
"Romain-P/Guinness-Bot" -> "TheOneStudioLLC/Mac-Recorder"
"Romain-P/Guinness-Bot" -> "Weitheskmt/WeiDMD"
"Romain-P/Guinness-Bot" -> "Haeven/msteam-log-transport"
"Romain-P/Guinness-Bot" -> "VANRao-Stack/elixir"
"Romain-P/Guinness-Bot" -> "RevGev/AVAX-SNIPING-BOT-OPENSOURCE"
"Romain-P/Guinness-Bot" -> "aidinrs/sql-puzzle"
"watson-developer-cloud/assistant-skill-analysis" -> "watson-developer-cloud/assistant-improve-recommendations-notebook"
"watson-developer-cloud/assistant-skill-analysis" -> "watson-developer-cloud/assistant-dialog-flow-analysis"
"watson-developer-cloud/assistant-skill-analysis" -> "cognitive-catalyst/WA-Testing-Tool"
"mrdbourke/cnn-explainer" -> "mrdbourke/fastai"
"mrdbourke/cnn-explainer" -> "mrdbourke/learnopencv"
"BlinkDL/RWKV-LM" -> "BlinkDL/ChatRWKV" ["e"=1]
"BlinkDL/RWKV-LM" -> "josStorer/RWKV-Runner" ["e"=1]
"BlinkDL/RWKV-LM" -> "Dao-AILab/flash-attention" ["e"=1]
"BlinkDL/RWKV-LM" -> "huggingface/peft"
"BlinkDL/RWKV-LM" -> "tloen/alpaca-lora"
"BlinkDL/RWKV-LM" -> "lm-sys/FastChat"
"BlinkDL/RWKV-LM" -> "state-spaces/mamba" ["e"=1]
"BlinkDL/RWKV-LM" -> "tatsu-lab/stanford_alpaca"
"BlinkDL/RWKV-LM" -> "FMInference/FlexLLMGen" ["e"=1]
"BlinkDL/RWKV-LM" -> "artidoro/qlora"
"BlinkDL/RWKV-LM" -> "deepspeedai/DeepSpeed"
"BlinkDL/RWKV-LM" -> "microsoft/unilm" ["e"=1]
"BlinkDL/RWKV-LM" -> "huggingface/trl" ["e"=1]
"BlinkDL/RWKV-LM" -> "vllm-project/vllm"
"BlinkDL/RWKV-LM" -> "LianjiaTech/BELLE" ["e"=1]
"tinygrad/tinygrad" -> "karpathy/micrograd"
"tinygrad/tinygrad" -> "commaai/openpilot" ["e"=1]
"tinygrad/tinygrad" -> "karpathy/llm.c"
"tinygrad/tinygrad" -> "karpathy/nanoGPT"
"tinygrad/tinygrad" -> "karpathy/llama2.c"
"tinygrad/tinygrad" -> "ggml-org/llama.cpp"
"tinygrad/tinygrad" -> "geohot/fromthetransistor" ["e"=1]
"tinygrad/tinygrad" -> "ml-explore/mlx"
"tinygrad/tinygrad" -> "jax-ml/jax" ["e"=1]
"tinygrad/tinygrad" -> "triton-lang/triton" ["e"=1]
"tinygrad/tinygrad" -> "ggml-org/ggml"
"tinygrad/tinygrad" -> "modular/modular" ["e"=1]
"tinygrad/tinygrad" -> "karpathy/minGPT"
"tinygrad/tinygrad" -> "karpathy/LLM101n"
"tinygrad/tinygrad" -> "vllm-project/vllm"
"pgvector/pgvector" -> "chroma-core/chroma"
"pgvector/pgvector" -> "qdrant/qdrant"
"pgvector/pgvector" -> "weaviate/weaviate"
"pgvector/pgvector" -> "pgvector/pgvector-python" ["e"=1]
"pgvector/pgvector" -> "run-llama/llama_index"
"pgvector/pgvector" -> "milvus-io/milvus"
"pgvector/pgvector" -> "facebookresearch/faiss" ["e"=1]
"pgvector/pgvector" -> "stanfordnlp/dspy"
"pgvector/pgvector" -> "BerriAI/litellm"
"pgvector/pgvector" -> "Unstructured-IO/unstructured"
"pgvector/pgvector" -> "lancedb/lancedb"
"pgvector/pgvector" -> "timescale/pgai"
"pgvector/pgvector" -> "langfuse/langfuse"
"pgvector/pgvector" -> "deepset-ai/haystack"
"pgvector/pgvector" -> "guidance-ai/guidance"
"ggerganov/ggwave" -> "PennyroyalTea/gibberlink"
"ggerganov/ggwave" -> "ggerganov/wave-share" ["e"=1]
"ggerganov/ggwave" -> "gradio-app/fastrtc"
"ggerganov/ggwave" -> "ggerganov/kbd-audio" ["e"=1]
"ggerganov/ggwave" -> "exo-explore/exo"
"ggerganov/ggwave" -> "block/goose"
"ggerganov/ggwave" -> "rhasspy/piper" ["e"=1]
"ggerganov/ggwave" -> "joanrod/star-vector"
"ggerganov/ggwave" -> "jart/cosmopolitan" ["e"=1]
"ggerganov/ggwave" -> "ggml-org/whisper.cpp"
"ggerganov/ggwave" -> "leaningtech/webvm" ["e"=1]
"ggerganov/ggwave" -> "allenai/olmocr"
"ggerganov/ggwave" -> "pipecat-ai/pipecat"
"ggerganov/ggwave" -> "fixie-ai/ultravox"
"ggerganov/ggwave" -> "roboflow/supervision"
"openai/openai-python" -> "openai/openai-cookbook"
"openai/openai-python" -> "langchain-ai/langchain"
"openai/openai-python" -> "run-llama/llama_index"
"openai/openai-python" -> "openai/tiktoken"
"openai/openai-python" -> "microsoft/autogen"
"openai/openai-python" -> "openai/evals"
"openai/openai-python" -> "meta-llama/llama"
"openai/openai-python" -> "openai/chatgpt-retrieval-plugin"
"openai/openai-python" -> "openai/whisper"
"openai/openai-python" -> "vllm-project/vllm"
"openai/openai-python" -> "lm-sys/FastChat"
"openai/openai-python" -> "gradio-app/gradio"
"openai/openai-python" -> "dair-ai/Prompt-Engineering-Guide"
"openai/openai-python" -> "OpenInterpreter/open-interpreter"
"openai/openai-python" -> "crewAIInc/crewAI"
"khoj-ai/khoj" -> "stanford-oval/storm"
"khoj-ai/khoj" -> "unclecode/crawl4ai"
"khoj-ai/khoj" -> "agno-agi/agno"
"khoj-ai/khoj" -> "All-Hands-AI/OpenHands"
"khoj-ai/khoj" -> "Shubhamsaboo/awesome-llm-apps"
"khoj-ai/khoj" -> "ItzCrazyKns/Perplexica"
"khoj-ai/khoj" -> "mendableai/firecrawl"
"khoj-ai/khoj" -> "assafelovic/gpt-researcher"
"khoj-ai/khoj" -> "docling-project/docling"
"khoj-ai/khoj" -> "Mintplex-Labs/anything-llm"
"khoj-ai/khoj" -> "Cinnamon/kotaemon"
"khoj-ai/khoj" -> "cline/cline"
"khoj-ai/khoj" -> "browser-use/browser-use"
"khoj-ai/khoj" -> "lobehub/lobe-chat"
"khoj-ai/khoj" -> "danielmiessler/fabric"
"microsoft/AI-For-Beginners" -> "microsoft/ML-For-Beginners" ["e"=1]
"microsoft/AI-For-Beginners" -> "microsoft/Data-Science-For-Beginners" ["e"=1]
"microsoft/AI-For-Beginners" -> "microsoft/generative-ai-for-beginners"
"microsoft/AI-For-Beginners" -> "microsoft/IoT-For-Beginners" ["e"=1]
"microsoft/AI-For-Beginners" -> "mlabonne/llm-course"
"microsoft/AI-For-Beginners" -> "microsoft/Web-Dev-For-Beginners" ["e"=1]
"microsoft/AI-For-Beginners" -> "openai/openai-cookbook"
"microsoft/AI-For-Beginners" -> "QuivrHQ/quivr"
"microsoft/AI-For-Beginners" -> "dair-ai/Prompt-Engineering-Guide"
"microsoft/AI-For-Beginners" -> "rasbt/LLMs-from-scratch"
"microsoft/AI-For-Beginners" -> "abi/screenshot-to-code"
"microsoft/AI-For-Beginners" -> "lobehub/lobe-chat"
"microsoft/AI-For-Beginners" -> "OpenInterpreter/open-interpreter"
"microsoft/AI-For-Beginners" -> "FoundationAgents/MetaGPT"
"microsoft/AI-For-Beginners" -> "ByteByteGoHq/system-design-101" ["e"=1]
"microsoft/LoRA" -> "huggingface/peft"
"microsoft/LoRA" -> "Dao-AILab/flash-attention" ["e"=1]
"microsoft/LoRA" -> "artidoro/qlora"
"microsoft/LoRA" -> "cloneofsimo/lora" ["e"=1]
"microsoft/LoRA" -> "tloen/alpaca-lora"
"microsoft/LoRA" -> "openai/CLIP" ["e"=1]
"microsoft/LoRA" -> "deepspeedai/DeepSpeed"
"microsoft/LoRA" -> "huggingface/trl" ["e"=1]
"microsoft/LoRA" -> "tatsu-lab/stanford_alpaca"
"microsoft/LoRA" -> "haotian-liu/LLaVA" ["e"=1]
"microsoft/LoRA" -> "NVIDIA/Megatron-LM" ["e"=1]
"microsoft/LoRA" -> "microsoft/unilm" ["e"=1]
"microsoft/LoRA" -> "bitsandbytes-foundation/bitsandbytes" ["e"=1]
"microsoft/LoRA" -> "vllm-project/vllm"
"microsoft/LoRA" -> "huggingface/diffusers" ["e"=1]
"jumperexchange/jumper-exchange" -> "lifinance/widget"
"jumperexchange/jumper-exchange" -> "lifinance/types"
"jumperexchange/jumper-exchange" -> "lifinance/sdk"
"jumperexchange/jumper-exchange" -> "lifinance/contracts"
"jumperexchange/jumper-exchange" -> "lifinance/sdk-node-sample"
"jumperexchange/jumper-exchange" -> "lifinance/lifi-contract-types"
"Madi-S/Lead-Generation" -> "superryeti/Email-Crawler-Lead-Generator"
"Madi-S/Lead-Generation" -> "LegalDreadPirateRobert/business-lead-generation"
"Madi-S/Lead-Generation" -> "ahmedmujtaba1/Linkedin-Leads-Generation"
"Madi-S/Lead-Generation" -> "tomiwaAdey/Nimrod"
"Madi-S/Lead-Generation" -> "sangaline/email-spy"
"Madi-S/Lead-Generation" -> "Ambitious-Concepts-Labs/LeadGenerationAPI"
"Madi-S/Lead-Generation" -> "creativeJoe007/google-leads-scraper"
"truera/trulens" -> "explodinggradients/ragas"
"truera/trulens" -> "confident-ai/deepeval"
"truera/trulens" -> "guardrails-ai/guardrails"
"truera/trulens" -> "Arize-ai/phoenix"
"truera/trulens" -> "stanford-futuredata/ARES"
"truera/trulens" -> "NVIDIA/NeMo-Guardrails"
"truera/trulens" -> "567-labs/instructor"
"truera/trulens" -> "pinecone-io/canopy"
"truera/trulens" -> "langfuse/langfuse"
"truera/trulens" -> "Unstructured-IO/unstructured"
"truera/trulens" -> "zilliztech/GPTCache" ["e"=1]
"truera/trulens" -> "promptfoo/promptfoo"
"truera/trulens" -> "Giskard-AI/giskard"
"truera/trulens" -> "AnswerDotAI/RAGatouille"
"truera/trulens" -> "aurelio-labs/semantic-router"
"ShawhinT/YouTube-Blog" -> "curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain" ["e"=1]
"ShawhinT/YouTube-Blog" -> "pixegami/rag-tutorial-v2"
"ShawhinT/YouTube-Blog" -> "krishnaik06/Finetuning-LLM" ["e"=1]
"ShawhinT/YouTube-Blog" -> "ShawhinT/data-pipeline-example"
"ShawhinT/YouTube-Blog" -> "callmesora/llmops-python-package"
"ShawhinT/YouTube-Blog" -> "samwit/langchain-tutorials" ["e"=1]
"diambra/arena" -> "diambra/agents"
"josdejong/jsonrepair" -> "mangiucugna/json_repair"
"aretecode/system-design-templates-excalidraw" -> "alpersonalwebsite/learn-node.js"
"aretecode/system-design-templates-excalidraw" -> "rog0978/powerwall_display"
"aretecode/system-design-templates-excalidraw" -> "alpersonalwebsite/learn-typescript"
"aretecode/system-design-templates-excalidraw" -> "aurora-is-near/evm2near"
"JanssenProject/jans" -> "alpersonalwebsite/learn-node.js"
"JanssenProject/jans" -> "aurora-is-near/evm2near"
"JanssenProject/jans" -> "rog0978/powerwall_display"
"JanssenProject/jans" -> "alpersonalwebsite/learn-typescript"
"JanssenProject/jans" -> "CamilleMo/command_recall"
"JanssenProject/jans" -> "YunaBraska/java-info-action"
"JanssenProject/jans" -> "YunaBraska/git-info-action"
"JanssenProject/jans" -> "superinsight/superinsight-db"
"JanssenProject/jans" -> "wednesday-solutions/react-graphql-ts-template"
"JanssenProject/jans" -> "deca-org/deca-ui"
"JanssenProject/jans" -> "wednesday-solutions/go-template"
"JanssenProject/jans" -> "robot-bulls/automated_tiktok_video_creation"
"JanssenProject/jans" -> "nosana-ci/nosana-programs"
"JanssenProject/jans" -> "lifinance/widget"
"JanssenProject/jans" -> "aretecode/system-design-templates-excalidraw"
"qdrant/qdrant-client" -> "qdrant/fastembed"
"qdrant/qdrant-client" -> "qdrant/qdrant-web-ui"
"qdrant/qdrant-client" -> "qdrant/examples"
"qdrant/qdrant-client" -> "qdrant/qdrant-js"
"qdrant/qdrant-client" -> "qdrant/qdrant"
"qdrant/qdrant-client" -> "qdrant/mcp-server-qdrant" ["e"=1]
"qdrant/qdrant-client" -> "qdrant/vector-db-benchmark" ["e"=1]
"qdrant/qdrant-client" -> "pgvector/pgvector-python" ["e"=1]
"qdrant/qdrant-client" -> "qdrant/quaterion" ["e"=1]
"qdrant/qdrant-client" -> "qdrant/qdrant-spark"
"qdrant/qdrant-client" -> "qdrant/qdrant_demo"
"qdrant/qdrant-client" -> "huggingface/text-embeddings-inference" ["e"=1]
"qdrant/qdrant-client" -> "qdrant/go-client"
"qdrant/qdrant-client" -> "qdrant/rust-client" ["e"=1]
"qdrant/qdrant-client" -> "qdrant/qdrant-helm"
"manumerous/vpselector" -> "Haeven/msteam-log-transport"
"manumerous/vpselector" -> "TheOneStudioLLC/Mac-Recorder"
"manumerous/vpselector" -> "promptdesk/promptdesk"
"manumerous/vpselector" -> "RevGev/AVAX-SNIPING-BOT-OPENSOURCE"
"manumerous/vpselector" -> "tm88instrument/BX-Private"
"manumerous/vpselector" -> "aidinrs/sql-puzzle"
"manumerous/vpselector" -> "Weitheskmt/WeiDMD"
"manumerous/vpselector" -> "i38100/IIoT-Intelligent-Algorithm"
"manumerous/vpselector" -> "Romain-P/Guinness-Bot"
"manumerous/vpselector" -> "suitedaces/sonophile"
"manumerous/vpselector" -> "louisho5/MotionScroll"
"manumerous/vpselector" -> "TheAnig/NER-LSTM-CNN-Pytorch"
"manumerous/vpselector" -> "BearAnBull/Pancakeswap-Prediction-Winningbot"
"manumerous/vpselector" -> "CASRAI-CRedIT/Dictionary"
"noya-app/noya" -> "map3xyz/supercharge"
"noya-app/noya" -> "usecakework/cakework"
"noya-app/noya" -> "enclaver-io/enclaver"
"noya-app/noya" -> "gotrade94/angel-sdk"
"noya-app/noya" -> "thebabylonai/babylog"
"noya-app/noya" -> "enrolla/enrolla"
"noya-app/noya" -> "matanolabs/matano"
"noya-app/noya" -> "Left-on-Read/leftonread"
"project-codeflare/codeflare" -> "project-codeflare/rayvens"
"project-codeflare/codeflare" -> "caikit/caikit"
"project-codeflare/codeflare" -> "IBM/prompt-declaration-language"
"brucewlee/lingfeat" -> "alpersonalwebsite/learn-node.js"
"brucewlee/lingfeat" -> "brucewlee/lftk" ["e"=1]
"brucewlee/lingfeat" -> "CamilleMo/command_recall"
"brucewlee/lingfeat" -> "YunaBraska/git-info-action"
"brucewlee/lingfeat" -> "aurora-is-near/evm2near"
"brucewlee/lingfeat" -> "YunaBraska/java-info-action"
"brucewlee/lingfeat" -> "alpersonalwebsite/learn-typescript"
"brucewlee/lingfeat" -> "deca-org/deca-ui"
"brucewlee/lingfeat" -> "chr0meice2/snortrules" ["e"=1]
"brucewlee/lingfeat" -> "rog0978/powerwall_display"
"brucewlee/lingfeat" -> "SuperCowPowers/workbench" ["e"=1]
"brucewlee/lingfeat" -> "SunStresser/IP-BOOTER" ["e"=1]
"brucewlee/lingfeat" -> "wednesday-solutions/react-graphql-ts-template"
"brucewlee/lingfeat" -> "gorodnitskiy/pytorch-infer-utils" ["e"=1]
"frontendnetwork/veganify" -> "alpersonalwebsite/learn-node.js"
"frontendnetwork/veganify" -> "alpersonalwebsite/learn-typescript"
"frontendnetwork/veganify" -> "rog0978/powerwall_display"
"frontendnetwork/veganify" -> "aurora-is-near/evm2near"
"frontendnetwork/veganify" -> "YunaBraska/java-info-action"
"frontendnetwork/veganify" -> "CamilleMo/command_recall"
"frontendnetwork/veganify" -> "YunaBraska/git-info-action"
"frontendnetwork/veganify" -> "wednesday-solutions/go-template"
"frontendnetwork/veganify" -> "brodo/json_env"
"frontendnetwork/veganify" -> "wednesday-solutions/react-graphql-ts-template"
"frontendnetwork/veganify" -> "markwylde/just-tap"
"frontendnetwork/veganify" -> "wednesday-solutions/node-mongo-express"
"skiff-org/skiff-ui" -> "skiff-org/skiff-apps"
"skiff-org/skiff-ui" -> "skiff-org/skiff-windows-app"
"skiff-org/skiff-ui" -> "skiff-org/skiff-org.github.io"
"project-codeflare/rayvens" -> "IBM/kar"
"project-codeflare/rayvens" -> "IBM/solsa"
"project-codeflare/rayvens" -> "project-codeflare/codeflare-cli"
"daronyondem/codesamples" -> "Developer-MultiGroup/GenerativeAI-Fundamentals-With-Gemini"
"Left-on-Read/leftonread" -> "thebabylonai/babylog"
"Left-on-Read/leftonread" -> "map3xyz/supercharge"
"Left-on-Read/leftonread" -> "usecakework/cakework"
"Left-on-Read/leftonread" -> "enrolla/enrolla"
"Left-on-Read/leftonread" -> "FrigadeHQ/react-native-onboard"
"Left-on-Read/leftonread" -> "vaerohq/vaero"
"Left-on-Read/leftonread" -> "fabiustech/openai"
"Left-on-Read/leftonread" -> "invopop/gobl"
"Left-on-Read/leftonread" -> "traceloop/jest-opentelemetry"
"Left-on-Read/leftonread" -> "stitchfix/hamilton"
"Left-on-Read/leftonread" -> "Helicone/valyr"
"Left-on-Read/leftonread" -> "magicpatterns/catalog"
"Left-on-Read/leftonread" -> "openintegrations/openint"
"Left-on-Read/leftonread" -> "outerbase/ezql"
"daveshap/PlainTextWikipedia" -> "daveshap/Raven_MVP"
"daveshap/PlainTextWikipedia" -> "daveshap/NaturalLanguageCognitiveArchitecture"
"daveshap/PlainTextWikipedia" -> "daveshap/GPT3_Finetunes"
"skiff-org/skiff-org.github.io" -> "skiff-org/typed-envelopes"
"skiff-org/skiff-org.github.io" -> "skiff-org/cipher"
"nuolade/disease-kb" -> "liuhuanyong/RAGOnMedicalKG"
"nuolade/disease-kb" -> "honeyandme/RAGQnASystem"
"henneberger/typekin" -> "yyeunggg/TelloPy"
"IBM/super" -> "IBM/solsa"
"iter8-tools/iter8-kfserving" -> "iter8-tools/iter8-analytics"
"IBM/watson-stt-wer-python" -> "IBM/watson-tts-python"
"IBM/watson-openscale-samples" -> "CloudPak-Outcomes/Outcomes-Projects"
"daveshap/Raven_MVP" -> "daveshap/RAVEN_MVP_Public"
"daveshap/Raven_MVP" -> "daveshap/RavenAGI"
"daveshap/Raven_MVP" -> "daveshap/Flask_Chat_Voice"
"daveshap/Raven_MVP" -> "daveshap/EmbeddingService"
"IBM/kar" -> "IBM/solsa"
"daveshap/CoreObjectiveFunctions" -> "daveshap/Flask_Chat_Voice"
"iZooGooD/torrscrapper" -> "VANRao-Stack/elixir"
"iZooGooD/torrscrapper" -> "Weitheskmt/WeiDMD"
"cmoog/sshproxy" -> "coder/cli"
"hpcaitech/ColossalAI" -> "deepspeedai/DeepSpeed"
"hpcaitech/ColossalAI" -> "lm-sys/FastChat"
"hpcaitech/ColossalAI" -> "THUDM/ChatGLM-6B" ["e"=1]
"hpcaitech/ColossalAI" -> "tatsu-lab/stanford_alpaca"
"hpcaitech/ColossalAI" -> "meta-llama/llama"
"hpcaitech/ColossalAI" -> "ymcui/Chinese-LLaMA-Alpaca" ["e"=1]
"hpcaitech/ColossalAI" -> "hiyouga/LLaMA-Factory"
"hpcaitech/ColossalAI" -> "vllm-project/vllm"
"hpcaitech/ColossalAI" -> "Vision-CAIR/MiniGPT-4"
"hpcaitech/ColossalAI" -> "tloen/alpaca-lora"
"hpcaitech/ColossalAI" -> "LAION-AI/Open-Assistant"
"hpcaitech/ColossalAI" -> "langchain-ai/langchain"
"hpcaitech/ColossalAI" -> "huggingface/peft"
"hpcaitech/ColossalAI" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"hpcaitech/ColossalAI" -> "ggml-org/llama.cpp"
"tensorchord/Awesome-LLMOps" -> "explodinggradients/ragas"
"tensorchord/Awesome-LLMOps" -> "Hannibal046/Awesome-LLM"
"tensorchord/Awesome-LLMOps" -> "Arize-ai/phoenix"
"tensorchord/Awesome-LLMOps" -> "kelvins/awesome-mlops" ["e"=1]
"tensorchord/Awesome-LLMOps" -> "visenger/awesome-mlops" ["e"=1]
"tensorchord/Awesome-LLMOps" -> "Agenta-AI/agenta"
"tensorchord/Awesome-LLMOps" -> "langfuse/langfuse"
"tensorchord/Awesome-LLMOps" -> "kyrolabs/awesome-langchain" ["e"=1]
"tensorchord/Awesome-LLMOps" -> "bentoml/OpenLLM"
"tensorchord/Awesome-LLMOps" -> "promptfoo/promptfoo"
"tensorchord/Awesome-LLMOps" -> "confident-ai/deepeval"
"tensorchord/Awesome-LLMOps" -> "BerriAI/litellm"
"tensorchord/Awesome-LLMOps" -> "pezzolabs/pezzo"
"tensorchord/Awesome-LLMOps" -> "stanfordnlp/dspy"
"tensorchord/Awesome-LLMOps" -> "skypilot-org/skypilot" ["e"=1]
"github/copilot-docs" -> "withfig/autocomplete" ["e"=1]
"github/copilot-docs" -> "vitejs/vite" ["e"=1]
"github/copilot-docs" -> "getcursor/cursor"
"github/copilot-docs" -> "geekan/HowToLiveLonger" ["e"=1]
"github/copilot-docs" -> "Eugeny/tabby" ["e"=1]
"github/copilot-docs" -> "twitter/the-algorithm"
"github/copilot-docs" -> "github/copilot.vim" ["e"=1]
"github/copilot-docs" -> "openai/openai-cookbook"
"github/copilot-docs" -> "CompVis/stable-diffusion" ["e"=1]
"github/copilot-docs" -> "tauri-apps/tauri" ["e"=1]
"github/copilot-docs" -> "Significant-Gravitas/AutoGPT"
"github/copilot-docs" -> "anuraghazra/github-readme-stats" ["e"=1]
"github/copilot-docs" -> "acheong08/ChatGPT" ["e"=1]
"github/copilot-docs" -> "microsoft/PowerToys" ["e"=1]
"github/copilot-docs" -> "remix-run/remix" ["e"=1]
"AutomaApp/automa" -> "getmaxun/maxun"
"AutomaApp/automa" -> "mendableai/firecrawl"
"AutomaApp/automa" -> "browser-use/browser-use"
"AutomaApp/automa" -> "NaiboWang/EasySpider" ["e"=1]
"AutomaApp/automa" -> "bytedance/UI-TARS-desktop"
"AutomaApp/automa" -> "n8n-io/n8n"
"AutomaApp/automa" -> "opendatalab/MinerU"
"AutomaApp/automa" -> "imputnet/cobalt"
"AutomaApp/automa" -> "web-infra-dev/midscene"
"AutomaApp/automa" -> "hiroi-sora/Umi-OCR" ["e"=1]
"AutomaApp/automa" -> "teableio/teable" ["e"=1]
"AutomaApp/automa" -> "tw93/Pake" ["e"=1]
"AutomaApp/automa" -> "FlowiseAI/Flowise"
"AutomaApp/automa" -> "labring/FastGPT"
"AutomaApp/automa" -> "alyssaxuu/screenity" ["e"=1]
"openai/openai-cookbook" -> "langchain-ai/langchain"
"openai/openai-cookbook" -> "dair-ai/Prompt-Engineering-Guide"
"openai/openai-cookbook" -> "openai/openai-python"
"openai/openai-cookbook" -> "run-llama/llama_index"
"openai/openai-cookbook" -> "Significant-Gravitas/AutoGPT"
"openai/openai-cookbook" -> "f/awesome-chatgpt-prompts" ["e"=1]
"openai/openai-cookbook" -> "openai/chatgpt-retrieval-plugin"
"openai/openai-cookbook" -> "meta-llama/llama"
"openai/openai-cookbook" -> "nomic-ai/gpt4all"
"openai/openai-cookbook" -> "microsoft/autogen"
"openai/openai-cookbook" -> "openai/whisper"
"openai/openai-cookbook" -> "AntonOsika/gpt-engineer"
"openai/openai-cookbook" -> "FoundationAgents/MetaGPT"
"openai/openai-cookbook" -> "lm-sys/FastChat"
"openai/openai-cookbook" -> "reworkd/AgentGPT"
"agno-agi/agno" -> "crewAIInc/crewAI"
"agno-agi/agno" -> "Shubhamsaboo/awesome-llm-apps"
"agno-agi/agno" -> "mendableai/firecrawl"
"agno-agi/agno" -> "mem0ai/mem0"
"agno-agi/agno" -> "unclecode/crawl4ai"
"agno-agi/agno" -> "assafelovic/gpt-researcher"
"agno-agi/agno" -> "microsoft/autogen"
"agno-agi/agno" -> "All-Hands-AI/OpenHands"
"agno-agi/agno" -> "docling-project/docling"
"agno-agi/agno" -> "ItzCrazyKns/Perplexica"
"agno-agi/agno" -> "browser-use/browser-use"
"agno-agi/agno" -> "stanford-oval/storm"
"agno-agi/agno" -> "khoj-ai/khoj"
"agno-agi/agno" -> "Cinnamon/kotaemon"
"agno-agi/agno" -> "ScrapeGraphAI/Scrapegraph-ai"
"Giskard-AI/giskard" -> "confident-ai/deepeval"
"Giskard-AI/giskard" -> "guardrails-ai/guardrails"
"Giskard-AI/giskard" -> "NVIDIA/garak" ["e"=1]
"Giskard-AI/giskard" -> "Arize-ai/phoenix"
"Giskard-AI/giskard" -> "explodinggradients/ragas"
"Giskard-AI/giskard" -> "deepchecks/deepchecks" ["e"=1]
"Giskard-AI/giskard" -> "NVIDIA/NeMo-Guardrails"
"Giskard-AI/giskard" -> "promptfoo/promptfoo"
"Giskard-AI/giskard" -> "Azure/PyRIT" ["e"=1]
"Giskard-AI/giskard" -> "stanfordnlp/dspy"
"Giskard-AI/giskard" -> "dottxt-ai/outlines"
"Giskard-AI/giskard" -> "evidentlyai/evidently" ["e"=1]
"Giskard-AI/giskard" -> "weaviate/Verba"
"Giskard-AI/giskard" -> "langfuse/langfuse"
"Giskard-AI/giskard" -> "argilla-io/argilla" ["e"=1]
"nebuly-ai/optimate" -> "tloen/alpaca-lora"
"nebuly-ai/optimate" -> "lucidrains/PaLM-rlhf-pytorch"
"nebuly-ai/optimate" -> "FMInference/FlexLLMGen" ["e"=1]
"nebuly-ai/optimate" -> "tatsu-lab/stanford_alpaca"
"nebuly-ai/optimate" -> "CarperAI/trlx" ["e"=1]
"nebuly-ai/optimate" -> "LianjiaTech/BELLE" ["e"=1]
"nebuly-ai/optimate" -> "togethercomputer/OpenChatKit"
"nebuly-ai/optimate" -> "databrickslabs/dolly"
"nebuly-ai/optimate" -> "huggingface/trl" ["e"=1]
"nebuly-ai/optimate" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"nebuly-ai/optimate" -> "OptimalScale/LMFlow" ["e"=1]
"nebuly-ai/optimate" -> "lm-sys/FastChat"
"nebuly-ai/optimate" -> "artidoro/qlora"
"nebuly-ai/optimate" -> "huggingface/peft"
"nebuly-ai/optimate" -> "hpcaitech/ColossalAI"
"Atri-Labs/atrilabs-engine" -> "fern-api/fern"
"Atri-Labs/atrilabs-engine" -> "uptrain-ai/uptrain"
"Atri-Labs/atrilabs-engine" -> "map3xyz/supercharge"
"Atri-Labs/atrilabs-engine" -> "usecakework/cakework"
"Atri-Labs/atrilabs-engine" -> "Infisical/infisical" ["e"=1]
"Atri-Labs/atrilabs-engine" -> "matanolabs/matano"
"Atri-Labs/atrilabs-engine" -> "highlight/highlight" ["e"=1]
"Atri-Labs/atrilabs-engine" -> "triggerdotdev/trigger.dev" ["e"=1]
"Atri-Labs/atrilabs-engine" -> "NangoHQ/nango" ["e"=1]
"Atri-Labs/atrilabs-engine" -> "noya-app/noya"
"Atri-Labs/atrilabs-engine" -> "enrolla/enrolla"
"Atri-Labs/atrilabs-engine" -> "reflex-dev/reflex" ["e"=1]
"Atri-Labs/atrilabs-engine" -> "thebabylonai/babylog"
"Atri-Labs/atrilabs-engine" -> "finic-ai/finic"
"Atri-Labs/atrilabs-engine" -> "odigos-io/odigos" ["e"=1]
"pepperize/cdk-organizations" -> "rog0978/powerwall_display"
"pepperize/cdk-organizations" -> "aurora-is-near/evm2near"
"pepperize/cdk-organizations" -> "alpersonalwebsite/learn-node.js"
"pepperize/cdk-organizations" -> "alpersonalwebsite/learn-typescript"
"pepperize/cdk-organizations" -> "boxfish-studio/sugar-rush"
"pepperize/cdk-organizations" -> "YunaBraska/git-info-action"
"pepperize/cdk-organizations" -> "wednesday-solutions/go-template"
"pepperize/cdk-organizations" -> "YunaBraska/java-info-action"
"pepperize/cdk-organizations" -> "wednesday-solutions/react-graphql-ts-template"
"pepperize/cdk-organizations" -> "CamilleMo/command_recall"
"pepperize/cdk-organizations" -> "nosana-ci/nosana-programs"
"pepperize/cdk-organizations" -> "deca-org/deca-ui"
"pepperize/cdk-organizations" -> "brodo/json_env"
"pepperize/cdk-organizations" -> "superinsight/superinsight-db"
"pepperize/cdk-organizations" -> "amadotejada/GAMpass"
"rusq/slackdump" -> "thayakawa-gh/SlackLogViewer"
"rusq/slackdump" -> "hfaran/slack-export-viewer"
"rusq/slackdump" -> "kununu/slackdump2html"
"rusq/slackdump" -> "sebseager/slack-exporter"
"rusq/slackdump" -> "thomasloupe/Slackord"
"rusq/slackdump" -> "felixrieseberg/slack-archive"
"rusq/slackdump" -> "ErikKalkoken/slackchannel2pdf"
"rusq/slackdump" -> "zach-snell/slack-export"
"rusq/slackdump" -> "Surfer-Org/Protocol"
"rusq/slackdump" -> "josephburnett/jd" ["e"=1]
"rusq/slackdump" -> "TomWright/dasel" ["e"=1]
"rusq/slackdump" -> "RamboRogers/rfhunter" ["e"=1]
"rusq/slackdump" -> "reworkd/tarsier"
"rusq/slackdump" -> "clemlesne/scrape-it-now"
"rusq/slackdump" -> "wasi-master/13ft" ["e"=1]
"twitter/the-algorithm" -> "twitter/the-algorithm"
"twitter/the-algorithm" -> "benawad/dogehouse" ["e"=1]
"twitter/the-algorithm" -> "pacocoursey/cmdk" ["e"=1]
"twitter/the-algorithm" -> "facebook/lexical" ["e"=1]
"twitter/the-algorithm" -> "vercel/satori" ["e"=1]
"twitter/the-algorithm" -> "NVIDIA/open-gpu-kernel-modules" ["e"=1]
"twitter/the-algorithm" -> "vercel/turborepo" ["e"=1]
"twitter/the-algorithm" -> "remix-run/remix" ["e"=1]
"twitter/the-algorithm" -> "remotion-dev/remotion" ["e"=1]
"twitter/the-algorithm" -> "shuding/nextra" ["e"=1]
"twitter/the-algorithm" -> "bluesky-social/atproto" ["e"=1]
"twitter/the-algorithm" -> "stitchesjs/stitches" ["e"=1]
"twitter/the-algorithm" -> "narze/THIS_REPO_HAS_3077_STARS" ["e"=1]
"twitter/the-algorithm" -> "borisdayma/dalle-mini" ["e"=1]
"twitter/the-algorithm" -> "rome/tools" ["e"=1]
"nosana-ci/nosana-programs" -> "rog0978/powerwall_display"
"nosana-ci/nosana-programs" -> "alpersonalwebsite/learn-node.js"
"nosana-ci/nosana-programs" -> "alpersonalwebsite/learn-typescript"
"nosana-ci/nosana-programs" -> "aurora-is-near/evm2near"
"nosana-ci/nosana-programs" -> "CamilleMo/command_recall"
"katanaml/sparrow" -> "weaviate/Verba"
"katanaml/sparrow" -> "ucbepic/docetl"
"katanaml/sparrow" -> "Unstructured-IO/unstructured"
"katanaml/sparrow" -> "VikParuchuri/surya"
"katanaml/sparrow" -> "run-llama/llama_cloud_services"
"katanaml/sparrow" -> "567-labs/instructor"
"katanaml/sparrow" -> "QuivrHQ/MegaParse"
"katanaml/sparrow" -> "truefoundry/cognita"
"katanaml/sparrow" -> "lavague-ai/LaVague"
"katanaml/sparrow" -> "Filimoa/open-parse"
"katanaml/sparrow" -> "mindee/doctr" ["e"=1]
"katanaml/sparrow" -> "steel-dev/steel-browser"
"katanaml/sparrow" -> "dottxt-ai/outlines"
"katanaml/sparrow" -> "AnswerDotAI/RAGatouille"
"katanaml/sparrow" -> "ragapp/ragapp"
"fern-api/fern" -> "tableflowhq/csv-import"
"fern-api/fern" -> "NangoHQ/nango" ["e"=1]
"fern-api/fern" -> "usecakework/cakework"
"fern-api/fern" -> "map3xyz/supercharge"
"fern-api/fern" -> "magicpatterns/catalog"
"fern-api/fern" -> "highlight/highlight" ["e"=1]
"fern-api/fern" -> "matanolabs/matano"
"fern-api/fern" -> "finic-ai/finic"
"fern-api/fern" -> "triggerdotdev/trigger.dev" ["e"=1]
"fern-api/fern" -> "enrolla/enrolla"
"fern-api/fern" -> "hydradatabase/columnar" ["e"=1]
"fern-api/fern" -> "uptrain-ai/uptrain"
"fern-api/fern" -> "noya-app/noya"
"fern-api/fern" -> "thebabylonai/babylog"
"fern-api/fern" -> "odigos-io/odigos" ["e"=1]
"openai/openai-openapi" -> "openai/openai-node"
"openai/openai-openapi" -> "openai/openai-assistants-quickstart"
"openai/openai-openapi" -> "openai/plugins-quickstart" ["e"=1]
"openai/openai-openapi" -> "openai/openai-realtime-console"
"openai/openai-openapi" -> "openai/openai-quickstart-python"
"openai/openai-openapi" -> "openai/openai-deno-build"
"openai/openai-openapi" -> "openai/web-crawl-q-and-a-example"
"openai/openai-openapi" -> "openai/openai-realtime-api-beta" ["e"=1]
"openai/openai-openapi" -> "openai/openai-dotnet" ["e"=1]
"openai/openai-openapi" -> "openai/openai-quickstart-node"
"openai/openai-openapi" -> "openai/openai-python"
"openai/openai-openapi" -> "openai/gpt-discord-bot"
"openai/openai-openapi" -> "openai/openai-structured-outputs-samples"
"openai/openai-openapi" -> "openai/openai-cua-sample-app"
"openai/openai-openapi" -> "openai/tiktoken"
"openai/openai-quickstart-python" -> "openai/openai-quickstart-node"
"openai/openai-quickstart-python" -> "openai/openai-python"
"openai/openai-quickstart-python" -> "openai/openai-openapi"
"openai/openai-quickstart-python" -> "openai/gpt-discord-bot"
"openai/openai-quickstart-python" -> "openai/openai-node"
"openai/openai-quickstart-python" -> "openai/plugins-quickstart" ["e"=1]
"openai/openai-quickstart-python" -> "betalgo/openai" ["e"=1]
"openai/openai-quickstart-python" -> "openai/openai-cookbook"
"openai/openai-quickstart-python" -> "OthersideAI/chronology" ["e"=1]
"openai/openai-quickstart-python" -> "mukulpatnaik/researchgpt" ["e"=1]
"openai/openai-quickstart-python" -> "anthropics/anthropic-sdk-python"
"openai/openai-quickstart-python" -> "ServiceWeaver/weaver" ["e"=1]
"openai/openai-quickstart-python" -> "Uniswap/wallet" ["e"=1]
"openai/openai-quickstart-python" -> "openai/evals"
"openai/openai-quickstart-python" -> "rawandahmad698/PyChatGPT" ["e"=1]
"chiselstrike/chiselstrike" -> "chiselstrike/chiselstore" ["e"=1]
"chiselstrike/chiselstrike" -> "tursodatabase/turso-cli"
"chiselstrike/chiselstrike" -> "chiselstrike/chiselstrike-examples"
"chiselstrike/chiselstrike" -> "MathisBullinger/froebel" ["e"=1]
"chiselstrike/chiselstrike" -> "dekimir/postgres-searchbox"
"daveshap/GPT3_Finetunes" -> "daveshap/FinetuningTutorial"
"daveshap/GPT3_Finetunes" -> "daveshap/PythonGPT3Tutorial"
"daveshap/GPT3_Finetunes" -> "daveshap/PerfectEmailGenerator"
"daveshap/GPT3_Finetunes" -> "daveshap/GPT3_ResearchAssistant"
"daveshap/GPT3_Finetunes" -> "daveshap/TutorChatbot"
"daveshap/GPT3_Finetunes" -> "daveshap/CreativeWritingCoach"
"daveshap/GPT3_Finetunes" -> "daveshap/CoverLetterGenerator"
"daveshap/GPT3_Finetunes" -> "daveshap/GPT3_CriticalArgument"
"daveshap/GPT3_Finetunes" -> "daveshap/ResumeBuilderGpt3"
"daveshap/GPT3_Finetunes" -> "daveshap/MovieScriptGenerator"
"daveshap/AutoMuse2" -> "daveshap/AutoMuse"
"DS4SD/DocLayNet" -> "HCIILAB/M6Doc" ["e"=1]
"DS4SD/DocLayNet" -> "doc-analysis/DocBank" ["e"=1]
"DS4SD/DocLayNet" -> "DS4SD/deepsearch-toolkit"
"DS4SD/DocLayNet" -> "buptlihang/CDLA" ["e"=1]
"DS4SD/DocLayNet" -> "docling-project/docling-ibm-models"
"DS4SD/DocLayNet" -> "BobLd/DocumentLayoutAnalysis" ["e"=1]
"DS4SD/DocLayNet" -> "ibm-aur-nlp/PubLayNet" ["e"=1]
"DS4SD/DocLayNet" -> "rossumai/docile" ["e"=1]
"DS4SD/DocLayNet" -> "allenai/vila" ["e"=1]
"DS4SD/DocLayNet" -> "DS4SD/deepsearch-glm"
"DS4SD/DocLayNet" -> "DS4SD/deepsearch-examples"
"DS4SD/DocLayNet" -> "doc-analysis/ReadingBank"
"DS4SD/DocLayNet" -> "jpWang/LiLT" ["e"=1]
"DS4SD/DocLayNet" -> "IBM/SynthTabNet" ["e"=1]
"openai/openai-node" -> "langchain-ai/langchainjs"
"openai/openai-node" -> "vercel/ai"
"openai/openai-node" -> "openai/openai-quickstart-node"
"openai/openai-node" -> "openai/openai-python"
"openai/openai-node" -> "transitive-bullshit/agentic" ["e"=1]
"openai/openai-node" -> "modelcontextprotocol/typescript-sdk"
"openai/openai-node" -> "vercel/turborepo" ["e"=1]
"openai/openai-node" -> "trpc/trpc" ["e"=1]
"openai/openai-node" -> "nextauthjs/next-auth" ["e"=1]
"openai/openai-node" -> "vercel/ai-chatbot"
"openai/openai-node" -> "openai/openai-cookbook"
"openai/openai-node" -> "colinhacks/zod" ["e"=1]
"openai/openai-node" -> "privatenumber/tsx" ["e"=1]
"openai/openai-node" -> "openai/openai-openapi"
"openai/openai-node" -> "honojs/hono" ["e"=1]
"patxijuaristi/google_maps_scraper" -> "lyyka/google-maps-businesses-scraper"
"patxijuaristi/google_maps_scraper" -> "dhanraj6/Google-Maps-Scraper"
"patxijuaristi/google_maps_scraper" -> "amineboutarfi/google_maps_scraper"
"lifinance/sdk" -> "lifinance/widget"
"lifinance/sdk" -> "alpersonalwebsite/learn-node.js"
"lifinance/sdk" -> "aurora-is-near/evm2near"
"lifinance/sdk" -> "rog0978/powerwall_display"
"lifinance/sdk" -> "CamilleMo/command_recall"
"lifinance/sdk" -> "alpersonalwebsite/learn-typescript"
"lifinance/sdk" -> "YunaBraska/java-info-action"
"lifinance/sdk" -> "YunaBraska/git-info-action"
"lifinance/sdk" -> "deca-org/deca-ui"
"lifinance/sdk" -> "wednesday-solutions/react-graphql-ts-template"
"lifinance/sdk" -> "superinsight/superinsight-db"
"lifinance/sdk" -> "nosana-ci/nosana-programs"
"lifinance/sdk" -> "wednesday-solutions/go-template"
"lifinance/sdk" -> "aretecode/system-design-templates-excalidraw"
"lifinance/sdk" -> "robot-bulls/automated_tiktok_video_creation"
"lifinance/widget" -> "alpersonalwebsite/learn-node.js"
"lifinance/widget" -> "aurora-is-near/evm2near"
"lifinance/widget" -> "rog0978/powerwall_display"
"lifinance/widget" -> "alpersonalwebsite/learn-typescript"
"lifinance/widget" -> "CamilleMo/command_recall"
"lifinance/widget" -> "YunaBraska/git-info-action"
"lifinance/widget" -> "YunaBraska/java-info-action"
"lifinance/widget" -> "lifinance/sdk"
"lifinance/widget" -> "nosana-ci/nosana-programs"
"lifinance/widget" -> "wednesday-solutions/react-graphql-ts-template"
"lifinance/widget" -> "deca-org/deca-ui"
"lifinance/widget" -> "wednesday-solutions/go-template"
"lifinance/widget" -> "superinsight/superinsight-db"
"lifinance/widget" -> "aretecode/system-design-templates-excalidraw"
"lifinance/widget" -> "wednesday-solutions/node-mongo-express"
"lifinance/contracts" -> "lifinance/sdk-node-sample"
"lifinance/contracts" -> "lifinance/types"
"lifinance/contracts" -> "lifinance/lifi-contract-types"
"lifinance/contracts" -> "jumperexchange/jumper-exchange"
"lifinance/contracts" -> "lifinance/widget"
"lifinance/contracts" -> "lifinance/create3-factory"
"lifinance/contracts" -> "lifinance/sdk"
"swirlai/swirl-search" -> "boxyhq/jackson" ["e"=1]
"swirlai/swirl-search" -> "srbhr/Resume-Matcher"
"swirlai/swirl-search" -> "formbricks/formbricks" ["e"=1]
"swirlai/swirl-search" -> "Flagsmith/flagsmith" ["e"=1]
"swirlai/swirl-search" -> "gitroomhq/postiz-app" ["e"=1]
"swirlai/swirl-search" -> "truefoundry/cognita"
"swirlai/swirl-search" -> "firecamp-dev/firecamp" ["e"=1]
"swirlai/swirl-search" -> "pezzolabs/pezzo"
"swirlai/swirl-search" -> "SciPhi-AI/R2R"
"swirlai/swirl-search" -> "comet-ml/opik"
"swirlai/swirl-search" -> "cyclops-ui/cyclops" ["e"=1]
"swirlai/swirl-search" -> "Zipstack/unstract"
"swirlai/swirl-search" -> "QuivrHQ/MegaParse"
"swirlai/swirl-search" -> "emcie-co/parlant"
"swirlai/swirl-search" -> "superduper-io/superduper"
"hisabimbola/slack-history-export" -> "humor4fun/slack-backup"
"hisabimbola/slack-history-export" -> "hfaran/slack-export-viewer"
"hisabimbola/slack-history-export" -> "zach-snell/slack-export"
"fynnfluegge/rocketnotes" -> "KruxAI/ragbuilder"
"fynnfluegge/rocketnotes" -> "menloresearch/ichigo"
"fynnfluegge/rocketnotes" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"fynnfluegge/rocketnotes" -> "kturung/langgraph_streamlit_codeassistant"
"fynnfluegge/rocketnotes" -> "gptme/gptme"
"fynnfluegge/rocketnotes" -> "chroxify/haptic" ["e"=1]
"fynnfluegge/rocketnotes" -> "hrithikkoduri/WebRover"
"fynnfluegge/rocketnotes" -> "chonkie-ai/chonkie"
"fynnfluegge/rocketnotes" -> "yoheinakajima/ditto"
"fynnfluegge/rocketnotes" -> "usefulsensors/moonshine" ["e"=1]
"fynnfluegge/rocketnotes" -> "cnunescoelho/kiroku"
"fynnfluegge/rocketnotes" -> "egoist/sitefetch"
"fynnfluegge/rocketnotes" -> "liseami/screenshot-to-code" ["e"=1]
"fynnfluegge/rocketnotes" -> "Storia-AI/sage"
"fynnfluegge/rocketnotes" -> "video-db/Director"
"Theneo-Inc/api-documentation" -> "defi-school/Babylon-check-and-delegate"
"Theneo-Inc/api-documentation" -> "mtabanja/mtabanja"
"Theneo-Inc/api-documentation" -> "nickokss/jumper"
"Theneo-Inc/api-documentation" -> "paulpanwang/Gen6DNeRF"
"Theneo-Inc/api-documentation" -> "cryptohub-agency/smart_contract_audits"
"Theneo-Inc/api-documentation" -> "AlexTeslenko/leetcode"
"Theneo-Inc/api-documentation" -> "Isalia20/quad-iou-torch"
"Theneo-Inc/api-documentation" -> "amityalwar/snoofus"
"Theneo-Inc/api-documentation" -> "greydoubt/m77"
"Theneo-Inc/api-documentation" -> "sivakumar-mahalingam/DSA"
"Theneo-Inc/api-documentation" -> "CerberusChaos/Starknet-Dapp-Template"
"raphaelsty/cherche" -> "raphaelsty/abayes"
"raphaelsty/cherche" -> "colonelwatch/abstracts-search"
"raphaelsty/cherche" -> "online-ml/watermill.rs"
"raphaelsty/cherche" -> "raphaelsty/kgsearch"
"raphaelsty/cherche" -> "raphaelsty/neural-cherche"
"iamnotstatic/multichain-crypto-wallet" -> "gptBuster/gptBuster"
"iamnotstatic/multichain-crypto-wallet" -> "andreyykavv/RynexLLM"
"iamnotstatic/multichain-crypto-wallet" -> "ultramodernism/manifesto-paper"
"iamnotstatic/multichain-crypto-wallet" -> "viziax/viziax-docs"
"iamnotstatic/multichain-crypto-wallet" -> "viziax/surveylogic-splat"
"iamnotstatic/multichain-crypto-wallet" -> "viziax/surveylogic-crm"
"iamnotstatic/multichain-crypto-wallet" -> "mmeerrkkaa/openrouter-kit"
"iamnotstatic/multichain-crypto-wallet" -> "Webinix-dev/webinix"
"iamnotstatic/multichain-crypto-wallet" -> "Dokan-E-Commerce/compliance-laravel-sdk"
"iamnotstatic/multichain-crypto-wallet" -> "SupportTools/dr-syncer"
"iamnotstatic/multichain-crypto-wallet" -> "jakebark/tag-nag"
"iamnotstatic/multichain-crypto-wallet" -> "spectrumwebco/kled.io"
"iamnotstatic/multichain-crypto-wallet" -> "Chirag-Main1/ChatBot_perosnal"
"iamnotstatic/multichain-crypto-wallet" -> "WubbzyDev/Pump-fun-multi-bot"
"iamnotstatic/multichain-crypto-wallet" -> "Trylz/Restir_CPP"
"openai/openai-quickstart-node" -> "openai/openai-quickstart-python"
"openai/openai-quickstart-node" -> "openai/openai-node"
"openai/openai-quickstart-node" -> "openai/plugins-quickstart" ["e"=1]
"openai/openai-quickstart-node" -> "openai/openai-openapi"
"openai/openai-quickstart-node" -> "transitive-bullshit/agentic" ["e"=1]
"openai/openai-quickstart-node" -> "openai/gpt-discord-bot"
"openai/openai-quickstart-node" -> "waylaidwanderer/node-chatgpt-api" ["e"=1]
"openai/openai-quickstart-node" -> "openai/openai-python"
"openai/openai-quickstart-node" -> "langchain-ai/langchainjs"
"openai/openai-quickstart-node" -> "openai/chatgpt-retrieval-plugin"
"openai/openai-quickstart-node" -> "openai/openai-cookbook"
"openai/openai-quickstart-node" -> "openai/evals"
"openai/openai-quickstart-node" -> "vercel/ai"
"openai/openai-quickstart-node" -> "mpociot/chatgpt-vscode" ["e"=1]
"openai/openai-quickstart-node" -> "mckaywrigley/chatbot-ui-lite" ["e"=1]
"mrdbourke/machine-learning-notes" -> "mrdbourke/learnopencv"
"mrdbourke/machine-learning-notes" -> "mrdbourke/spaCy"
"instill-ai/instill-core" -> "instill-ai/console"
"instill-ai/instill-core" -> "instill-ai/instill.tech"
"instill-ai/instill-core" -> "instill-ai/community"
"instill-ai/instill-core" -> "getzep/zep"
"instill-ai/instill-core" -> "tensorzero/tensorzero"
"instill-ai/instill-core" -> "bentoml/BentoML" ["e"=1]
"instill-ai/instill-core" -> "instill-ai/cli"
"instill-ai/instill-core" -> "activeloopai/deeplake" ["e"=1]
"instill-ai/instill-core" -> "InfuseAI/primehub" ["e"=1]
"instill-ai/instill-core" -> "MiuLab/Taiwan-LLM" ["e"=1]
"instill-ai/instill-core" -> "ray-project/kuberay" ["e"=1]
"instill-ai/instill-core" -> "langfuse/langfuse"
"instill-ai/instill-core" -> "SciPhi-AI/R2R"
"instill-ai/instill-core" -> "finic-ai/finic"
"instill-ai/instill-core" -> "bentoml/OpenLLM"
"Oliveriver/5d-diplomacy-with-multiverse-time-travel" -> "kestasjk/webDiplomacy" ["e"=1]
"Oliveriver/5d-diplomacy-with-multiverse-time-travel" -> "fnuecke/oc2" ["e"=1]
"Oliveriver/5d-diplomacy-with-multiverse-time-travel" -> "landing-ai/vision-agent"
"Oliveriver/5d-diplomacy-with-multiverse-time-travel" -> "torcado194/scritch-player"
"Oliveriver/5d-diplomacy-with-multiverse-time-travel" -> "potpie-ai/potpie"
"Oliveriver/5d-diplomacy-with-multiverse-time-travel" -> "JackHopkins/factorio-learning-environment" ["e"=1]
"daveshap/RecursiveSummarizer" -> "daveshap/MultiDocumentAnswering"
"daveshap/RecursiveSummarizer" -> "daveshap/Document_Scraping"
"daveshap/RecursiveSummarizer" -> "daveshap/LongtermChatExternalSources"
"daveshap/RecursiveSummarizer" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/RecursiveSummarizer" -> "daveshap/PerfectEmailGenerator"
"daveshap/RecursiveSummarizer" -> "daveshap/PineconeInfiniteMemoryChatbot"
"daveshap/RecursiveSummarizer" -> "daveshap/ChatGPT_QA_Regenerative_Medicine"
"daveshap/RecursiveSummarizer" -> "daveshap/Recreate_ChatGPT"
"daveshap/RecursiveSummarizer" -> "daveshap/FinetuningTutorial"
"daveshap/RecursiveSummarizer" -> "daveshap/ChatGPT_API_Salience"
"daveshap/RecursiveSummarizer" -> "daveshap/AutoMuse2"
"daveshap/RecursiveSummarizer" -> "daveshap/DiversePerspectives"
"daveshap/RecursiveSummarizer" -> "daveshap/PythonGPT3Tutorial"
"daveshap/RecursiveSummarizer" -> "daveshap/SCOTUS_GPT3_Opinions"
"daveshap/RecursiveSummarizer" -> "daveshap/YouTubeChapterGenerator"
"DS4SD/deepsearch-toolkit" -> "DS4SD/deepsearch-examples"
"DS4SD/deepsearch-toolkit" -> "DS4SD/deepsearch-glm"
"DS4SD/deepsearch-toolkit" -> "DS4SD/quackling"
"DS4SD/deepsearch-toolkit" -> "docling-project/docling-core"
"DS4SD/deepsearch-toolkit" -> "DS4SD/DocLayNet"
"DS4SD/deepsearch-toolkit" -> "docling-project/docling-ibm-models"
"fnzhan/MoNCE" -> "gbvanrenswoude/async-aws-cdk"
"fnzhan/MoNCE" -> "ExoMonk/cairo-nft"
"fnzhan/MoNCE" -> "EmperorMew/unstoppable_spam_bot"
"fnzhan/MoNCE" -> "zavr/nodectl"
"fnzhan/MoNCE" -> "mhttp-org/unity-sdk"
"fnzhan/MoNCE" -> "amadotejada/GAMpass"
"Jaseci-Labs/jaseci" -> "rog0978/powerwall_display"
"Jaseci-Labs/jaseci" -> "alpersonalwebsite/learn-typescript"
"Jaseci-Labs/jaseci" -> "alpersonalwebsite/learn-node.js"
"Jaseci-Labs/jaseci" -> "aurora-is-near/evm2near"
"Jaseci-Labs/jaseci" -> "CamilleMo/command_recall"
"Jaseci-Labs/jaseci" -> "YunaBraska/git-info-action"
"Jaseci-Labs/jaseci" -> "wednesday-solutions/react-graphql-ts-template"
"Jaseci-Labs/jaseci" -> "nosana-ci/nosana-programs"
"Jaseci-Labs/jaseci" -> "YunaBraska/java-info-action"
"Jaseci-Labs/jaseci" -> "deca-org/deca-ui"
"Jaseci-Labs/jaseci" -> "boxfish-studio/sugar-rush"
"Jaseci-Labs/jaseci" -> "superinsight/superinsight-db"
"Jaseci-Labs/jaseci" -> "wednesday-solutions/node-mongo-express"
"Jaseci-Labs/jaseci" -> "aretecode/system-design-templates-excalidraw"
"Jaseci-Labs/jaseci" -> "wednesday-solutions/go-template"
"dataplane-app/dataplane" -> "rog0978/powerwall_display"
"dataplane-app/dataplane" -> "alpersonalwebsite/learn-typescript"
"dataplane-app/dataplane" -> "boxfish-studio/sugar-rush"
"dataplane-app/dataplane" -> "alpersonalwebsite/learn-node.js"
"dataplane-app/dataplane" -> "aurora-is-near/evm2near"
"dataplane-app/dataplane" -> "CamilleMo/command_recall"
"dataplane-app/dataplane" -> "wednesday-solutions/react-graphql-ts-template"
"dataplane-app/dataplane" -> "YunaBraska/java-info-action"
"dataplane-app/dataplane" -> "deca-org/deca-ui"
"dataplane-app/dataplane" -> "YunaBraska/git-info-action"
"dataplane-app/dataplane" -> "amadotejada/GAMpass"
"dataplane-app/dataplane" -> "nosana-ci/nosana-programs"
"dataplane-app/dataplane" -> "wednesday-solutions/node-mongo-express"
"dataplane-app/dataplane" -> "wednesday-solutions/go-template"
"dataplane-app/dataplane" -> "mhttp-org/unity-sdk"
"endurox-dev/endurox" -> "alpersonalwebsite/learn-node.js"
"endurox-dev/endurox" -> "aurora-is-near/evm2near"
"endurox-dev/endurox" -> "rog0978/powerwall_display"
"endurox-dev/endurox" -> "alpersonalwebsite/learn-typescript"
"endurox-dev/endurox" -> "CamilleMo/command_recall"
"endurox-dev/endurox" -> "YunaBraska/git-info-action"
"endurox-dev/endurox" -> "YunaBraska/java-info-action"
"endurox-dev/endurox" -> "deca-org/deca-ui"
"endurox-dev/endurox" -> "wednesday-solutions/react-graphql-ts-template"
"endurox-dev/endurox" -> "nosana-ci/nosana-programs"
"endurox-dev/endurox" -> "superinsight/superinsight-db"
"endurox-dev/endurox" -> "wednesday-solutions/go-template"
"endurox-dev/endurox" -> "boxfish-studio/sugar-rush"
"endurox-dev/endurox" -> "aretecode/system-design-templates-excalidraw"
"endurox-dev/endurox" -> "wednesday-solutions/node-mongo-express"
"caomuqing/neptune" -> "alpersonalwebsite/learn-node.js"
"caomuqing/neptune" -> "alpersonalwebsite/learn-typescript"
"caomuqing/neptune" -> "rog0978/powerwall_display"
"caomuqing/neptune" -> "aurora-is-near/evm2near"
"caomuqing/neptune" -> "YunaBraska/java-info-action"
"caomuqing/neptune" -> "CamilleMo/command_recall"
"caomuqing/neptune" -> "YunaBraska/git-info-action"
"caomuqing/neptune" -> "wednesday-solutions/react-graphql-ts-template"
"caomuqing/neptune" -> "deca-org/deca-ui"
"caomuqing/neptune" -> "nosana-ci/nosana-programs"
"caomuqing/neptune" -> "wednesday-solutions/go-template"
"caomuqing/neptune" -> "brodo/json_env"
"caomuqing/neptune" -> "boxfish-studio/sugar-rush"
"caomuqing/neptune" -> "superinsight/superinsight-db"
"caomuqing/neptune" -> "wednesday-solutions/node-mongo-express"
"kazhuravlev/git-tools" -> "rog0978/powerwall_display"
"kazhuravlev/git-tools" -> "alpersonalwebsite/learn-node.js"
"kazhuravlev/git-tools" -> "aurora-is-near/evm2near"
"kazhuravlev/git-tools" -> "alpersonalwebsite/learn-typescript"
"nixonjoshua98/dexscreener" -> "liqtags/DexScreenerClient"
"nixonjoshua98/dexscreener" -> "dexscreener/google-sheets"
"nixonjoshua98/dexscreener" -> "1f1n/gmgnai-wrapper"
"skiff-org/skiff-apps" -> "skiff-org/skiff-ui"
"skiff-org/skiff-apps" -> "skiff-org/skiff-windows-app"
"skiff-org/skiff-apps" -> "skiff-org/skiff-org.github.io"
"skiff-org/skiff-apps" -> "WithSecureLabs/lolcerts"
"skiff-org/skiff-apps" -> "un/inbox" ["e"=1]
"skiff-org/skiff-apps" -> "Pandora-Labs-Org/erc404" ["e"=1]
"skiff-org/skiff-apps" -> "skiff-org/trawler"
"skiff-org/skiff-apps" -> "oxen-io/session-desktop" ["e"=1]
"skiff-org/skiff-apps" -> "unkeyed/unkey" ["e"=1]
"skiff-org/skiff-apps" -> "Codehagen/Badget" ["e"=1]
"skiff-org/skiff-apps" -> "cyberus-technology/virtualbox-kvm"
"skiff-org/skiff-apps" -> "awslabs/llrt" ["e"=1]
"skiff-org/skiff-apps" -> "privacytests/privacytests.org" ["e"=1]
"skiff-org/skiff-apps" -> "ProtonMail/WebClients" ["e"=1]
"skiff-org/skiff-apps" -> "oxen-io/session-android" ["e"=1]
"bpmct/coder-templates" -> "coder/modules"
"bpmct/coder-templates" -> "sharkymark/v2-templates"
"bpmct/coder-templates" -> "coder/coder-logstream-kube"
"blackle/blamscamp" -> "fluffy-critter/bandcrash"
"blackle/blamscamp" -> "torcado194/scritch-player"
"blyssprivacy/sdk" -> "fabiustech/openai"
"blyssprivacy/sdk" -> "brave-experiments/frodo-pir"
"UgnisSoftware/react-spreadsheet-import" -> "beamworks/react-csv-importer"
"lifinance/types" -> "lifinance/sdk-node-sample"
"lifinance/types" -> "lifinance/lifi-contract-types"
"lifinance/sdk-node-sample" -> "lifinance/types"
"lifinance/sdk-node-sample" -> "lifinance/lifi-contract-types"
"daveshap/MovieScriptGenerator" -> "daveshap/PlotGenerator"
"daveshap/MovieScriptGenerator" -> "daveshap/SceneSimulation"
"daveshap/MovieScriptGenerator" -> "daveshap/SynopsisGenerator"
"deadliner-app/Deadliner" -> "alpersonalwebsite/learn-node.js"
"deadliner-app/Deadliner" -> "YunaBraska/java-info-action"
"deadliner-app/Deadliner" -> "YunaBraska/git-info-action"
"deadliner-app/Deadliner" -> "deca-org/deca-ui"
"deadliner-app/Deadliner" -> "aurora-is-near/evm2near"
"deadliner-app/Deadliner" -> "wednesday-solutions/nextjs-template"
"deadliner-app/Deadliner" -> "rog0978/powerwall_display"
"deadliner-app/Deadliner" -> "alpersonalwebsite/learn-typescript"
"deadliner-app/Deadliner" -> "CamilleMo/command_recall"
"deadliner-app/Deadliner" -> "nosana-ci/nosana-programs"
"deadliner-app/Deadliner" -> "add2cal/add-to-calendar-button-react"
"deadliner-app/Deadliner" -> "boxfish-studio/sugar-rush"
"deadliner-app/Deadliner" -> "wednesday-solutions/node-mongo-express"
"deadliner-app/Deadliner" -> "wednesday-solutions/react-graphql-ts-template"
"deadliner-app/Deadliner" -> "caomuqing/neptune"
"daveshap/TutorChatbot" -> "daveshap/PerfectEmailGenerator"
"daveshap/TutorChatbot" -> "daveshap/GPT3_ResearchAssistant"
"torcado194/scritch-player" -> "blackle/blamscamp"
"torcado194/scritch-player" -> "fluffy-critter/bandcrash"
"instill-ai/console" -> "instill-ai/cli"
"instill-ai/console" -> "instill-ai/instill.tech"
"instill-ai/console" -> "instill-ai/community"
"instill-ai/console" -> "instill-ai/deprecated-core"
"instill-ai/console" -> "instill-ai/cortex"
"instill-ai/console" -> "instill-ai/deprecated-model"
"drudge/n8n-nodes-puppeteer" -> "minhlucvan/n8n-nodes-browserless"
"drudge/n8n-nodes-puppeteer" -> "edbrdi/n8n-nodes-puppeteer-extended"
"drudge/n8n-nodes-puppeteer" -> "Touxan/n8n-ultimate-scraper"
"drudge/n8n-nodes-puppeteer" -> "umanamente/n8n-nodes-imap"
"drudge/n8n-nodes-puppeteer" -> "umanamente/n8n-nodes-globals"
"drudge/n8n-nodes-puppeteer" -> "n8nhackers/n8n-nodes-document-generator"
"drudge/n8n-nodes-puppeteer" -> "oriondesign2015/n8n-nodes-evolution-api" ["e"=1]
"tianyic/only_train_once_personal_footprint" -> "microsoft/only_train_once"
"tianyic/only_train_once_personal_footprint" -> "WoosukKwon/retraining-free-pruning" ["e"=1]
"tianyic/only_train_once_personal_footprint" -> "huyphan168/EasyCuda"
"tianyic/only_train_once_personal_footprint" -> "tianyic/obproxsg"
"tianyic/only_train_once_personal_footprint" -> "HankYe/PAGCP"
"tianyic/only_train_once_personal_footprint" -> "ghimiredhikura/Awasome-Pruning" ["e"=1]
"tianyic/only_train_once_personal_footprint" -> "horseee/LLM-Pruner" ["e"=1]
"tianyic/only_train_once_personal_footprint" -> "defi-school/Babylon-check-and-delegate"
"tianyic/only_train_once_personal_footprint" -> "ternera/hacker101-ctf"
"tianyic/only_train_once_personal_footprint" -> "VainF/Torch-Pruning" ["e"=1]
"tianyic/only_train_once_personal_footprint" -> "cryptohub-agency/smart_contract_audits"
"tianyic/only_train_once_personal_footprint" -> "mtabanja/mtabanja"
"tianyic/only_train_once_personal_footprint" -> "AlexTeslenko/leetcode"
"lifinance/lifi-contract-types" -> "lifinance/types"
"lifinance/lifi-contract-types" -> "lifinance/sdk-node-sample"
"coder/exectrace" -> "ericpaulsen/coder-aks"
"coder/exectrace" -> "coder/cli"
"coder/exectrace" -> "coder/hat"
"coder/exectrace" -> "coder/envbox"
"daveshap/NaturalLanguageCognitiveArchitecture" -> "daveshap/SymphonyOfThought"
"daveshap/NaturalLanguageCognitiveArchitecture" -> "daveshap/BenevolentByDesign"
"daveshap/NaturalLanguageCognitiveArchitecture" -> "daveshap/ATOM_Framework"
"daveshap/NaturalLanguageCognitiveArchitecture" -> "daveshap/CoreObjectiveFunctions"
"daveshap/BenevolentByDesign" -> "daveshap/SymphonyOfThought"
"daveshap/BenevolentByDesign" -> "daveshap/NaturalLanguageCognitiveArchitecture"
"v0idum/solana_tracker_bot" -> "LagLord/Solana-Wallet-Tracker-Crypto-NFT-sales-Discord-Bot"
"v0idum/solana_tracker_bot" -> "kiryl-sol/solana-wallet-tracker"
"v0idum/solana_tracker_bot" -> "Lucifer1590/solana-transaction-analyzer"
"TeleportDAO/teleswap-contracts-evm" -> "TeleportDAO/bitcoin-ethereum-smart-contracts"
"TeleportDAO/teleswap-contracts-evm" -> "TeleportDAO/bls12-381"
"TeleportDAO/teleswap-contracts-evm" -> "TeleportDAO/liquality-swap-provider"
"TeleportDAO/teleswap-contracts-evm" -> "TeleportDAO/audits"
"TeleportDAO/teleswap-contracts-evm" -> "TeleportDAO/classic-bls12-382"
"retail-ai-inc/bean" -> "retail-ai-inc/beanq"
"instill-ai/pipeline-backend" -> "instill-ai/cli"
"instill-ai/pipeline-backend" -> "instill-ai/cortex"
"coder/terraform-provider-coder" -> "coder/homebrew-coder"
"lifinance/customized-token-list" -> "lifinance/lifi-contract-types"
"loopingz/smtp-relay" -> "loopingz/webda.io"
"coder/jetbrains-coder" -> "coder/coder-logstream-kube"
"daveshap/CreativeWritingCoach" -> "daveshap/GPT3_ResearchAssistant"
"daveshap/CreativeWritingCoach" -> "daveshap/GPT3_CriticalArgument"
"daveshap/CreativeWritingCoach" -> "daveshap/FinetuningTutorial"
"daveshap/CreativeWritingCoach" -> "daveshap/MovieScriptGenerator"
"daveshap/CreativeWritingCoach" -> "daveshap/DiversePerspectives"
"daveshap/CreativeWritingCoach" -> "daveshap/GPT3_Finetunes"
"opendatahub-io-contrib/workbench-images" -> "opendatahub-io/notebooks"
"ParisNeo/FaceAnalyzer" -> "ParisNeo/safe_store"
"instill-ai/instill.tech" -> "instill-ai/cli"
"instill-ai/instill.tech" -> "instill-ai/console"
"instill-ai/instill.tech" -> "instill-ai/deprecated-core"
"instill-ai/instill.tech" -> "instill-ai/cortex"
"instill-ai/instill.tech" -> "instill-ai/community"
"ricklamers/orchest-weaviate-tweakers-search" -> "weaviate/arXiv-demo-dataset"
"instill-ai/cli" -> "instill-ai/deprecated-core"
"instill-ai/cli" -> "instill-ai/deprecated-model"
"instill-ai/cli" -> "instill-ai/cortex"
"instill-ai/cli" -> "instill-ai/console"
"instill-ai/cortex" -> "instill-ai/cli"
"cedana/cedana" -> "cedana/cedana-cli"
"cedana/cedana" -> "Skyvern-AI/wyvern"
"instill-ai/model-backend" -> "instill-ai/cli"
"kapoorsaumitra/padhlebsdk" -> "kapoorsaumitra/studentbenefits"
"openai/whisper" -> "ggml-org/whisper.cpp"
"openai/whisper" -> "langchain-ai/langchain"
"openai/whisper" -> "coqui-ai/TTS" ["e"=1]
"openai/whisper" -> "ggml-org/llama.cpp"
"openai/whisper" -> "ollama/ollama"
"openai/whisper" -> "suno-ai/bark" ["e"=1]
"openai/whisper" -> "AUTOMATIC1111/stable-diffusion-webui" ["e"=1]
"openai/whisper" -> "meta-llama/llama"
"openai/whisper" -> "CompVis/stable-diffusion" ["e"=1]
"openai/whisper" -> "SYSTRAN/faster-whisper" ["e"=1]
"openai/whisper" -> "nomic-ai/gpt4all"
"openai/whisper" -> "Significant-Gravitas/AutoGPT"
"openai/whisper" -> "openai/openai-cookbook"
"openai/whisper" -> "open-webui/open-webui"
"openai/whisper" -> "comfyanonymous/ComfyUI" ["e"=1]
"run-llama/llama_index" -> "langchain-ai/langchain"
"run-llama/llama_index" -> "microsoft/autogen"
"run-llama/llama_index" -> "vllm-project/vllm"
"run-llama/llama_index" -> "lm-sys/FastChat"
"run-llama/llama_index" -> "stanfordnlp/dspy"
"run-llama/llama_index" -> "deepset-ai/haystack"
"run-llama/llama_index" -> "mem0ai/mem0"
"run-llama/llama_index" -> "ggml-org/llama.cpp"
"run-llama/llama_index" -> "microsoft/graphrag"
"run-llama/llama_index" -> "openai/openai-cookbook"
"run-llama/llama_index" -> "crewAIInc/crewAI"
"run-llama/llama_index" -> "FoundationAgents/MetaGPT"
"run-llama/llama_index" -> "FlowiseAI/Flowise"
"run-llama/llama_index" -> "tatsu-lab/stanford_alpaca"
"run-llama/llama_index" -> "meta-llama/llama"
"LAION-AI/Open-Assistant" -> "lm-sys/FastChat"
"LAION-AI/Open-Assistant" -> "nomic-ai/gpt4all"
"LAION-AI/Open-Assistant" -> "tatsu-lab/stanford_alpaca"
"LAION-AI/Open-Assistant" -> "oobabooga/text-generation-webui"
"LAION-AI/Open-Assistant" -> "hpcaitech/ColossalAI"
"LAION-AI/Open-Assistant" -> "run-llama/llama_index"
"LAION-AI/Open-Assistant" -> "langchain-ai/langchain"
"LAION-AI/Open-Assistant" -> "microsoft/JARVIS"
"LAION-AI/Open-Assistant" -> "Stability-AI/StableLM"
"LAION-AI/Open-Assistant" -> "ggml-org/llama.cpp"
"LAION-AI/Open-Assistant" -> "karpathy/nanoGPT"
"LAION-AI/Open-Assistant" -> "reworkd/AgentGPT"
"LAION-AI/Open-Assistant" -> "tloen/alpaca-lora"
"LAION-AI/Open-Assistant" -> "Vision-CAIR/MiniGPT-4"
"LAION-AI/Open-Assistant" -> "yoheinakajima/babyagi" ["e"=1]
"oobabooga/text-generation-webui" -> "ggml-org/llama.cpp"
"oobabooga/text-generation-webui" -> "lm-sys/FastChat"
"oobabooga/text-generation-webui" -> "nomic-ai/gpt4all"
"oobabooga/text-generation-webui" -> "AUTOMATIC1111/stable-diffusion-webui" ["e"=1]
"oobabooga/text-generation-webui" -> "comfyanonymous/ComfyUI" ["e"=1]
"oobabooga/text-generation-webui" -> "run-llama/llama_index"
"oobabooga/text-generation-webui" -> "vllm-project/vllm"
"oobabooga/text-generation-webui" -> "zylon-ai/private-gpt"
"oobabooga/text-generation-webui" -> "open-webui/open-webui"
"oobabooga/text-generation-webui" -> "langchain-ai/langchain"
"oobabooga/text-generation-webui" -> "meta-llama/llama"
"oobabooga/text-generation-webui" -> "LAION-AI/Open-Assistant"
"oobabooga/text-generation-webui" -> "ollama/ollama"
"oobabooga/text-generation-webui" -> "suno-ai/bark" ["e"=1]
"oobabooga/text-generation-webui" -> "microsoft/autogen"
"guardrails-ai/guardrails" -> "NVIDIA/NeMo-Guardrails"
"guardrails-ai/guardrails" -> "dottxt-ai/outlines"
"guardrails-ai/guardrails" -> "567-labs/instructor"
"guardrails-ai/guardrails" -> "explodinggradients/ragas"
"guardrails-ai/guardrails" -> "guidance-ai/guidance"
"guardrails-ai/guardrails" -> "eth-sri/lmql"
"guardrails-ai/guardrails" -> "confident-ai/deepeval"
"guardrails-ai/guardrails" -> "promptfoo/promptfoo"
"guardrails-ai/guardrails" -> "1rgs/jsonformer"
"guardrails-ai/guardrails" -> "zilliztech/GPTCache" ["e"=1]
"guardrails-ai/guardrails" -> "Arize-ai/phoenix"
"guardrails-ai/guardrails" -> "PrefectHQ/marvin" ["e"=1]
"guardrails-ai/guardrails" -> "stanfordnlp/dspy"
"guardrails-ai/guardrails" -> "protectai/llm-guard" ["e"=1]
"guardrails-ai/guardrails" -> "protectai/rebuff" ["e"=1]
"arc53/DocsGPT" -> "Pythagora-io/gpt-pilot"
"arc53/DocsGPT" -> "mayooear/ai-pdf-chatbot-langchain" ["e"=1]
"arc53/DocsGPT" -> "QuivrHQ/quivr"
"arc53/DocsGPT" -> "run-llama/llama_index"
"arc53/DocsGPT" -> "reworkd/AgentGPT"
"arc53/DocsGPT" -> "zylon-ai/private-gpt"
"arc53/DocsGPT" -> "eosphoros-ai/DB-GPT"
"arc53/DocsGPT" -> "bhaskatripathi/pdfGPT" ["e"=1]
"arc53/DocsGPT" -> "FlowiseAI/Flowise"
"arc53/DocsGPT" -> "PromtEngineer/localGPT"
"arc53/DocsGPT" -> "microsoft/promptflow"
"arc53/DocsGPT" -> "mem0ai/mem0"
"arc53/DocsGPT" -> "openai/chatgpt-retrieval-plugin"
"arc53/DocsGPT" -> "LAION-AI/Open-Assistant"
"arc53/DocsGPT" -> "assafelovic/gpt-researcher"
"chroma-core/chroma" -> "weaviate/weaviate"
"chroma-core/chroma" -> "qdrant/qdrant"
"chroma-core/chroma" -> "run-llama/llama_index"
"chroma-core/chroma" -> "milvus-io/milvus"
"chroma-core/chroma" -> "langchain-ai/langchain"
"chroma-core/chroma" -> "pgvector/pgvector"
"chroma-core/chroma" -> "facebookresearch/faiss" ["e"=1]
"chroma-core/chroma" -> "vllm-project/vllm"
"chroma-core/chroma" -> "stanfordnlp/dspy"
"chroma-core/chroma" -> "yoheinakajima/babyagi" ["e"=1]
"chroma-core/chroma" -> "BerriAI/litellm"
"chroma-core/chroma" -> "microsoft/autogen"
"chroma-core/chroma" -> "crewAIInc/crewAI"
"chroma-core/chroma" -> "mem0ai/mem0"
"chroma-core/chroma" -> "FlowiseAI/Flowise"
"dair-ai/Prompt-Engineering-Guide" -> "openai/openai-cookbook"
"dair-ai/Prompt-Engineering-Guide" -> "langchain-ai/langchain"
"dair-ai/Prompt-Engineering-Guide" -> "f/awesome-chatgpt-prompts" ["e"=1]
"dair-ai/Prompt-Engineering-Guide" -> "run-llama/llama_index"
"dair-ai/Prompt-Engineering-Guide" -> "Significant-Gravitas/AutoGPT"
"dair-ai/Prompt-Engineering-Guide" -> "lm-sys/FastChat"
"dair-ai/Prompt-Engineering-Guide" -> "microsoft/autogen"
"dair-ai/Prompt-Engineering-Guide" -> "FoundationAgents/MetaGPT"
"dair-ai/Prompt-Engineering-Guide" -> "meta-llama/llama"
"dair-ai/Prompt-Engineering-Guide" -> "nomic-ai/gpt4all"
"dair-ai/Prompt-Engineering-Guide" -> "vllm-project/vllm"
"dair-ai/Prompt-Engineering-Guide" -> "mlabonne/llm-course"
"dair-ai/Prompt-Engineering-Guide" -> "langgenius/dify"
"dair-ai/Prompt-Engineering-Guide" -> "reworkd/AgentGPT"
"dair-ai/Prompt-Engineering-Guide" -> "tatsu-lab/stanford_alpaca"
"Future-House/paper-qa" -> "assafelovic/gpt-researcher"
"Future-House/paper-qa" -> "stanfordnlp/dspy"
"Future-House/paper-qa" -> "SakanaAI/AI-Scientist"
"Future-House/paper-qa" -> "stanford-oval/storm"
"Future-House/paper-qa" -> "Cinnamon/kotaemon"
"Future-House/paper-qa" -> "weaviate/Verba"
"Future-House/paper-qa" -> "blackadad/paper-scraper" ["e"=1]
"Future-House/paper-qa" -> "BerriAI/litellm"
"Future-House/paper-qa" -> "Unstructured-IO/unstructured"
"Future-House/paper-qa" -> "run-llama/llama_index"
"Future-House/paper-qa" -> "567-labs/instructor"
"Future-House/paper-qa" -> "Lightning-AI/litgpt"
"Future-House/paper-qa" -> "VikParuchuri/marker"
"Future-House/paper-qa" -> "neuml/txtai"
"Future-House/paper-qa" -> "dottxt-ai/outlines"
"roboflow/supervision" -> "VikParuchuri/surya"
"roboflow/supervision" -> "mendableai/firecrawl"
"roboflow/supervision" -> "myshell-ai/OpenVoice" ["e"=1]
"roboflow/supervision" -> "OpenInterpreter/open-interpreter"
"roboflow/supervision" -> "agno-agi/agno"
"roboflow/supervision" -> "All-Hands-AI/OpenHands"
"roboflow/supervision" -> "unclecode/crawl4ai"
"roboflow/supervision" -> "Cinnamon/kotaemon"
"roboflow/supervision" -> "roboflow/notebooks" ["e"=1]
"roboflow/supervision" -> "ScrapeGraphAI/Scrapegraph-ai"
"roboflow/supervision" -> "stanford-oval/storm"
"roboflow/supervision" -> "Pythagora-io/gpt-pilot"
"roboflow/supervision" -> "mem0ai/mem0"
"roboflow/supervision" -> "ultralytics/ultralytics" ["e"=1]
"roboflow/supervision" -> "exo-explore/exo"
"langflow-ai/langflow" -> "FlowiseAI/Flowise"
"langflow-ai/langflow" -> "langchain-ai/langchain"
"langflow-ai/langflow" -> "langgenius/dify"
"langflow-ai/langflow" -> "microsoft/autogen"
"langflow-ai/langflow" -> "crewAIInc/crewAI"
"langflow-ai/langflow" -> "run-llama/llama_index"
"langflow-ai/langflow" -> "FoundationAgents/MetaGPT"
"langflow-ai/langflow" -> "All-Hands-AI/OpenHands"
"langflow-ai/langflow" -> "open-webui/open-webui"
"langflow-ai/langflow" -> "infiniflow/ragflow"
"langflow-ai/langflow" -> "browser-use/browser-use"
"langflow-ai/langflow" -> "Mintplex-Labs/anything-llm"
"langflow-ai/langflow" -> "n8n-io/n8n"
"langflow-ai/langflow" -> "mendableai/firecrawl"
"langflow-ai/langflow" -> "agno-agi/agno"
"imputnet/cobalt" -> "Stirling-Tools/Stirling-PDF" ["e"=1]
"imputnet/cobalt" -> "localsend/localsend" ["e"=1]
"imputnet/cobalt" -> "opendatalab/MinerU"
"imputnet/cobalt" -> "2noise/ChatTTS" ["e"=1]
"imputnet/cobalt" -> "RSSNext/Folo"
"imputnet/cobalt" -> "Huanshere/VideoLingo"
"imputnet/cobalt" -> "lobehub/lobe-chat"
"imputnet/cobalt" -> "harry0703/MoneyPrinterTurbo"
"imputnet/cobalt" -> "KRTirtho/spotube" ["e"=1]
"imputnet/cobalt" -> "tw93/Pake" ["e"=1]
"imputnet/cobalt" -> "yt-dlp/yt-dlp" ["e"=1]
"imputnet/cobalt" -> "mendableai/firecrawl"
"imputnet/cobalt" -> "upscayl/upscayl" ["e"=1]
"imputnet/cobalt" -> "NaiboWang/EasySpider" ["e"=1]
"imputnet/cobalt" -> "GopeedLab/gopeed" ["e"=1]
"openai/evals" -> "openai/chatgpt-retrieval-plugin"
"openai/evals" -> "tatsu-lab/stanford_alpaca"
"openai/evals" -> "EleutherAI/lm-evaluation-harness" ["e"=1]
"openai/evals" -> "run-llama/llama_index"
"openai/evals" -> "openai/openai-cookbook"
"openai/evals" -> "lm-sys/FastChat"
"openai/evals" -> "guidance-ai/guidance"
"openai/evals" -> "openai/tiktoken"
"openai/evals" -> "stanfordnlp/dspy"
"openai/evals" -> "yoheinakajima/babyagi" ["e"=1]
"openai/evals" -> "tloen/alpaca-lora"
"openai/evals" -> "microsoft/JARVIS"
"openai/evals" -> "huggingface/peft"
"openai/evals" -> "meta-llama/llama"
"openai/evals" -> "vllm-project/vllm"
"karpathy/nanoGPT" -> "karpathy/minGPT"
"karpathy/nanoGPT" -> "karpathy/llm.c"
"karpathy/nanoGPT" -> "karpathy/llama2.c"
"karpathy/nanoGPT" -> "ggml-org/llama.cpp"
"karpathy/nanoGPT" -> "vllm-project/vllm"
"karpathy/nanoGPT" -> "meta-llama/llama"
"karpathy/nanoGPT" -> "tatsu-lab/stanford_alpaca"
"karpathy/nanoGPT" -> "langchain-ai/langchain"
"karpathy/nanoGPT" -> "lm-sys/FastChat"
"karpathy/nanoGPT" -> "karpathy/LLM101n"
"karpathy/nanoGPT" -> "karpathy/micrograd"
"karpathy/nanoGPT" -> "run-llama/llama_index"
"karpathy/nanoGPT" -> "LAION-AI/Open-Assistant"
"karpathy/nanoGPT" -> "deepspeedai/DeepSpeed"
"karpathy/nanoGPT" -> "rasbt/LLMs-from-scratch"
"langchain-ai/langchain" -> "run-llama/llama_index"
"langchain-ai/langchain" -> "Significant-Gravitas/AutoGPT"
"langchain-ai/langchain" -> "ollama/ollama"
"langchain-ai/langchain" -> "langgenius/dify"
"langchain-ai/langchain" -> "openai/openai-cookbook"
"langchain-ai/langchain" -> "huggingface/transformers"
"langchain-ai/langchain" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"langchain-ai/langchain" -> "microsoft/autogen"
"langchain-ai/langchain" -> "ggml-org/llama.cpp"
"langchain-ai/langchain" -> "meta-llama/llama"
"langchain-ai/langchain" -> "vllm-project/vllm"
"langchain-ai/langchain" -> "FoundationAgents/MetaGPT"
"langchain-ai/langchain" -> "lm-sys/FastChat"
"langchain-ai/langchain" -> "nomic-ai/gpt4all"
"langchain-ai/langchain" -> "dair-ai/Prompt-Engineering-Guide"
"lucidrains/PaLM-rlhf-pytorch" -> "CarperAI/trlx" ["e"=1]
"lucidrains/PaLM-rlhf-pytorch" -> "nebuly-ai/optimate"
"lucidrains/PaLM-rlhf-pytorch" -> "huggingface/trl" ["e"=1]
"lucidrains/PaLM-rlhf-pytorch" -> "LAION-AI/Open-Assistant"
"lucidrains/PaLM-rlhf-pytorch" -> "tatsu-lab/stanford_alpaca"
"lucidrains/PaLM-rlhf-pytorch" -> "togethercomputer/OpenChatKit"
"lucidrains/PaLM-rlhf-pytorch" -> "tloen/alpaca-lora"
"lucidrains/PaLM-rlhf-pytorch" -> "allenai/RL4LMs" ["e"=1]
"lucidrains/PaLM-rlhf-pytorch" -> "FMInference/FlexLLMGen" ["e"=1]
"lucidrains/PaLM-rlhf-pytorch" -> "facebookresearch/metaseq" ["e"=1]
"lucidrains/PaLM-rlhf-pytorch" -> "opendilab/awesome-RLHF" ["e"=1]
"lucidrains/PaLM-rlhf-pytorch" -> "deepspeedai/DeepSpeedExamples" ["e"=1]
"lucidrains/PaLM-rlhf-pytorch" -> "LianjiaTech/BELLE" ["e"=1]
"lucidrains/PaLM-rlhf-pytorch" -> "huggingface/peft"
"lucidrains/PaLM-rlhf-pytorch" -> "BlinkDL/ChatRWKV" ["e"=1]
"oslabs-beta/Caribu" -> "RediseeLabs/redisee"
"oslabs-beta/Caribu" -> "oslabs-beta/Aionic"
"oslabs-beta/Caribu" -> "oslabs-beta/Splache"
"oslabs-beta/Caribu" -> "oslabs-beta/kubehawk"
"oslabs-beta/Caribu" -> "oslabs-beta/NetPulse"
"oslabs-beta/Caribu" -> "oslabs-beta/CloudShift"
"karpathy/ng-video-lecture" -> "karpathy/nanoGPT"
"karpathy/ng-video-lecture" -> "karpathy/makemore"
"karpathy/ng-video-lecture" -> "karpathy/micrograd"
"karpathy/ng-video-lecture" -> "karpathy/build-nanogpt"
"karpathy/ng-video-lecture" -> "karpathy/minbpe"
"karpathy/ng-video-lecture" -> "karpathy/nn-zero-to-hero"
"karpathy/ng-video-lecture" -> "AcademySoftwareFoundation/xstudio" ["e"=1]
"karpathy/ng-video-lecture" -> "openai/tiktoken"
"karpathy/ng-video-lecture" -> "karpathy/minGPT"
"karpathy/ng-video-lecture" -> "timothybrooks/instruct-pix2pix" ["e"=1]
"karpathy/ng-video-lecture" -> "karpathy/llama2.c"
"karpathy/ng-video-lecture" -> "google/sentencepiece" ["e"=1]
"karpathy/ng-video-lecture" -> "karpathy/llm.c"
"karpathy/ng-video-lecture" -> "Lightning-AI/litgpt"
"karpathy/ng-video-lecture" -> "naklecha/llama3-from-scratch"
"ggml-org/whisper.cpp" -> "ggml-org/llama.cpp"
"ggml-org/whisper.cpp" -> "openai/whisper"
"ggml-org/whisper.cpp" -> "SYSTRAN/faster-whisper" ["e"=1]
"ggml-org/whisper.cpp" -> "m-bain/whisperX" ["e"=1]
"ggml-org/whisper.cpp" -> "ggml-org/ggml"
"ggml-org/whisper.cpp" -> "suno-ai/bark" ["e"=1]
"ggml-org/whisper.cpp" -> "coqui-ai/TTS" ["e"=1]
"ggml-org/whisper.cpp" -> "nomic-ai/gpt4all"
"ggml-org/whisper.cpp" -> "oobabooga/text-generation-webui"
"ggml-org/whisper.cpp" -> "Const-me/Whisper" ["e"=1]
"ggml-org/whisper.cpp" -> "run-llama/llama_index"
"ggml-org/whisper.cpp" -> "LAION-AI/Open-Assistant"
"ggml-org/whisper.cpp" -> "langchain-ai/langchain"
"ggml-org/whisper.cpp" -> "lm-sys/FastChat"
"ggml-org/whisper.cpp" -> "ollama/ollama"
"openai/tiktoken" -> "google/sentencepiece" ["e"=1]
"openai/tiktoken" -> "openai/evals"
"openai/tiktoken" -> "Dao-AILab/flash-attention" ["e"=1]
"openai/tiktoken" -> "karpathy/nanoGPT"
"openai/tiktoken" -> "karpathy/minbpe"
"openai/tiktoken" -> "huggingface/peft"
"openai/tiktoken" -> "vllm-project/vllm"
"openai/tiktoken" -> "run-llama/llama_index"
"openai/tiktoken" -> "huggingface/trl" ["e"=1]
"openai/tiktoken" -> "openai/openai-python"
"openai/tiktoken" -> "NVIDIA/Megatron-LM" ["e"=1]
"openai/tiktoken" -> "openai/openai-cookbook"
"openai/tiktoken" -> "huggingface/text-generation-inference" ["e"=1]
"openai/tiktoken" -> "tatsu-lab/stanford_alpaca"
"openai/tiktoken" -> "facebookresearch/faiss" ["e"=1]
"lightpanda-io/browser" -> "browserbase/stagehand"
"lightpanda-io/browser" -> "web-infra-dev/midscene"
"lightpanda-io/browser" -> "onlook-dev/onlook" ["e"=1]
"lightpanda-io/browser" -> "steel-dev/steel-browser"
"lightpanda-io/browser" -> "block/goose"
"lightpanda-io/browser" -> "zaidmukaddam/scira"
"lightpanda-io/browser" -> "CapSoftware/Cap" ["e"=1]
"lightpanda-io/browser" -> "teableio/teable" ["e"=1]
"lightpanda-io/browser" -> "Skyvern-AI/skyvern"
"lightpanda-io/browser" -> "microsoft/data-formulator"
"lightpanda-io/browser" -> "Dokploy/dokploy" ["e"=1]
"lightpanda-io/browser" -> "yamadashy/repomix"
"lightpanda-io/browser" -> "trycua/cua"
"lightpanda-io/browser" -> "autoscrape-labs/pydoll"
"lightpanda-io/browser" -> "QuivrHQ/MegaParse"
"daveshap/LongtermChatExternalSources" -> "daveshap/raven"
"daveshap/LongtermChatExternalSources" -> "daveshap/PineconeInfiniteMemoryChatbot"
"daveshap/LongtermChatExternalSources" -> "daveshap/PythonGPT3Tutorial"
"daveshap/LongtermChatExternalSources" -> "daveshap/RecursiveSummarizer"
"daveshap/LongtermChatExternalSources" -> "daveshap/REMO_Framework"
"daveshap/LongtermChatExternalSources" -> "daveshap/FinetuningTutorial"
"daveshap/LongtermChatExternalSources" -> "daveshap/GPT3_Finetunes"
"daveshap/LongtermChatExternalSources" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/LongtermChatExternalSources" -> "daveshap/MultiDocumentAnswering"
"daveshap/LongtermChatExternalSources" -> "daveshap/Document_Scraping"
"daveshap/LongtermChatExternalSources" -> "daveshap/YouTubeChapterGenerator"
"daveshap/LongtermChatExternalSources" -> "daveshap/ChatGPT_API_Salience"
"daveshap/LongtermChatExternalSources" -> "daveshap/ChatGPT_QA_Regenerative_Medicine"
"daveshap/LongtermChatExternalSources" -> "daveshap/Recreate_ChatGPT"
"daveshap/LongtermChatExternalSources" -> "daveshap/SymphonyOfThought"
"daveshap/GPT3_CriticalArgument" -> "daveshap/CharacterSimulation"
"daveshap/GPT3_CriticalArgument" -> "daveshap/SceneSimulation"
"Unstructured-IO/unstructured" -> "explodinggradients/ragas"
"Unstructured-IO/unstructured" -> "stanfordnlp/dspy"
"Unstructured-IO/unstructured" -> "run-llama/llama_index"
"Unstructured-IO/unstructured" -> "567-labs/instructor"
"Unstructured-IO/unstructured" -> "microsoft/graphrag"
"Unstructured-IO/unstructured" -> "BerriAI/litellm"
"Unstructured-IO/unstructured" -> "deepset-ai/haystack"
"Unstructured-IO/unstructured" -> "VikParuchuri/marker"
"Unstructured-IO/unstructured" -> "langfuse/langfuse"
"Unstructured-IO/unstructured" -> "dottxt-ai/outlines"
"Unstructured-IO/unstructured" -> "guidance-ai/guidance"
"Unstructured-IO/unstructured" -> "chroma-core/chroma"
"Unstructured-IO/unstructured" -> "FlagOpen/FlagEmbedding" ["e"=1]
"Unstructured-IO/unstructured" -> "Chainlit/chainlit"
"Unstructured-IO/unstructured" -> "mem0ai/mem0"
"Arize-ai/phoenix" -> "langfuse/langfuse"
"Arize-ai/phoenix" -> "confident-ai/deepeval"
"Arize-ai/phoenix" -> "explodinggradients/ragas"
"Arize-ai/phoenix" -> "stanfordnlp/dspy"
"Arize-ai/phoenix" -> "guardrails-ai/guardrails"
"Arize-ai/phoenix" -> "567-labs/instructor"
"Arize-ai/phoenix" -> "promptfoo/promptfoo"
"Arize-ai/phoenix" -> "dottxt-ai/outlines"
"Arize-ai/phoenix" -> "NVIDIA/NeMo-Guardrails"
"Arize-ai/phoenix" -> "BerriAI/litellm"
"Arize-ai/phoenix" -> "truera/trulens"
"Arize-ai/phoenix" -> "Unstructured-IO/unstructured"
"Arize-ai/phoenix" -> "Chainlit/chainlit"
"Arize-ai/phoenix" -> "tensorchord/Awesome-LLMOps"
"Arize-ai/phoenix" -> "pydantic/pydantic-ai"
"eth-sri/lmql" -> "dottxt-ai/outlines"
"eth-sri/lmql" -> "guidance-ai/guidance"
"eth-sri/lmql" -> "guardrails-ai/guardrails"
"eth-sri/lmql" -> "1rgs/jsonformer"
"eth-sri/lmql" -> "noamgat/lm-format-enforcer"
"eth-sri/lmql" -> "567-labs/instructor"
"eth-sri/lmql" -> "PrefectHQ/marvin" ["e"=1]
"eth-sri/lmql" -> "ShishirPatil/gorilla" ["e"=1]
"eth-sri/lmql" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"eth-sri/lmql" -> "stanfordnlp/dspy"
"eth-sri/lmql" -> "microsoft/LLMLingua"
"eth-sri/lmql" -> "kyegomez/tree-of-thoughts" ["e"=1]
"eth-sri/lmql" -> "NVIDIA/NeMo-Guardrails"
"eth-sri/lmql" -> "AnswerDotAI/RAGatouille"
"eth-sri/lmql" -> "griptape-ai/griptape"
"stanfordnlp/dspy" -> "run-llama/llama_index"
"stanfordnlp/dspy" -> "guidance-ai/guidance"
"stanfordnlp/dspy" -> "microsoft/autogen"
"stanfordnlp/dspy" -> "vllm-project/vllm"
"stanfordnlp/dspy" -> "BerriAI/litellm"
"stanfordnlp/dspy" -> "dottxt-ai/outlines"
"stanfordnlp/dspy" -> "567-labs/instructor"
"stanfordnlp/dspy" -> "crewAIInc/crewAI"
"stanfordnlp/dspy" -> "microsoft/graphrag"
"stanfordnlp/dspy" -> "mem0ai/mem0"
"stanfordnlp/dspy" -> "unslothai/unsloth"
"stanfordnlp/dspy" -> "explodinggradients/ragas"
"stanfordnlp/dspy" -> "letta-ai/letta"
"stanfordnlp/dspy" -> "deepset-ai/haystack"
"stanfordnlp/dspy" -> "openai/swarm"
"vllm-project/vllm" -> "sgl-project/sglang" ["e"=1]
"vllm-project/vllm" -> "hiyouga/LLaMA-Factory"
"vllm-project/vllm" -> "Dao-AILab/flash-attention" ["e"=1]
"vllm-project/vllm" -> "ggml-org/llama.cpp"
"vllm-project/vllm" -> "deepspeedai/DeepSpeed"
"vllm-project/vllm" -> "unslothai/unsloth"
"vllm-project/vllm" -> "lm-sys/FastChat"
"vllm-project/vllm" -> "run-llama/llama_index"
"vllm-project/vllm" -> "langchain-ai/langchain"
"vllm-project/vllm" -> "huggingface/peft"
"vllm-project/vllm" -> "NVIDIA/TensorRT-LLM" ["e"=1]
"vllm-project/vllm" -> "meta-llama/llama"
"vllm-project/vllm" -> "stanfordnlp/dspy"
"vllm-project/vllm" -> "microsoft/autogen"
"vllm-project/vllm" -> "ollama/ollama"
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "Moonvy/OpenPromptStudio" ["e"=1]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "invoke-ai/InvokeAI" ["e"=1]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "camenduru/stable-diffusion-webui-colab" ["e"=1]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "Mikubill/sd-webui-controlnet" ["e"=1]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "openai/chatgpt-retrieval-plugin"
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "openai-translator/openai-translator" ["e"=1]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "hua1995116/awesome-ai-painting" ["e"=1]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "ChatAnyTeam/ChatAny" ["e"=1]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "JushBJJ/Mr.-Ranedeer-AI-Tutor"
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "dair-ai/Prompt-Engineering-Guide"
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "thinkingjimmy/Learning-Prompt" ["e"=1]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "reworkd/AgentGPT"
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "lllyasviel/ControlNet" ["e"=1]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "suno-ai/bark" ["e"=1]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" -> "novicezk/midjourney-proxy" ["e"=1]
"thakkarparth007/copilot-explorer" -> "saschaschramm/github-copilot"
"thakkarparth007/copilot-explorer" -> "mengjian-github/copilot-analysis"
"thakkarparth007/copilot-explorer" -> "unit-mesh/choco-builder"
"thakkarparth007/copilot-explorer" -> "CoderEval/CoderEval" ["e"=1]
"modal-labs/modal-examples" -> "modal-labs/modal-client"
"modal-labs/modal-examples" -> "modal-labs/awesome-modal"
"modal-labs/modal-examples" -> "modal-labs/llm-finetuning"
"modal-labs/modal-examples" -> "modal-labs/quillman"
"modal-labs/modal-examples" -> "parlance-labs/ftcourse"
"ggml-org/ggml" -> "ggml-org/llama.cpp"
"ggml-org/ggml" -> "karpathy/llama2.c"
"ggml-org/ggml" -> "ggml-org/whisper.cpp"
"ggml-org/ggml" -> "abetlen/llama-cpp-python"
"ggml-org/ggml" -> "leejet/stable-diffusion.cpp"
"ggml-org/ggml" -> "Dao-AILab/flash-attention" ["e"=1]
"ggml-org/ggml" -> "triton-lang/triton" ["e"=1]
"ggml-org/ggml" -> "bitsandbytes-foundation/bitsandbytes" ["e"=1]
"ggml-org/ggml" -> "mlc-ai/mlc-llm"
"ggml-org/ggml" -> "NVIDIA/TensorRT-LLM" ["e"=1]
"ggml-org/ggml" -> "vllm-project/vllm"
"ggml-org/ggml" -> "karpathy/llm.c"
"ggml-org/ggml" -> "sgl-project/sglang" ["e"=1]
"ggml-org/ggml" -> "huggingface/text-generation-inference" ["e"=1]
"ggml-org/ggml" -> "artidoro/qlora"
"huggingface/peft" -> "microsoft/LoRA"
"huggingface/peft" -> "huggingface/trl" ["e"=1]
"huggingface/peft" -> "tloen/alpaca-lora"
"huggingface/peft" -> "Dao-AILab/flash-attention" ["e"=1]
"huggingface/peft" -> "vllm-project/vllm"
"huggingface/peft" -> "hiyouga/LLaMA-Factory"
"huggingface/peft" -> "tatsu-lab/stanford_alpaca"
"huggingface/peft" -> "deepspeedai/DeepSpeed"
"huggingface/peft" -> "lm-sys/FastChat"
"huggingface/peft" -> "artidoro/qlora"
"huggingface/peft" -> "huggingface/accelerate" ["e"=1]
"huggingface/peft" -> "haotian-liu/LLaVA" ["e"=1]
"huggingface/peft" -> "NVIDIA/Megatron-LM" ["e"=1]
"huggingface/peft" -> "bitsandbytes-foundation/bitsandbytes" ["e"=1]
"huggingface/peft" -> "meta-llama/llama"
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "mRs-/Black-Friday-Deals" ["e"=1]
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "twf-nikhila/Awesome-Black-Friday-Cyber-Monday-deals" ["e"=1]
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "0x90n/InfoSec-Black-Friday" ["e"=1]
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "everywall/ladder" ["e"=1]
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "vvbbnn00/WARP-Clash-API" ["e"=1]
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "danmindru/rare-big-deal" ["e"=1]
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "BuilderIO/gpt-crawler"
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "MrKai77/Loop" ["e"=1]
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "LouisShark/chatgpt_system_prompt"
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "run-llama/rags"
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "sub-store-org/Sub-Store" ["e"=1]
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "VirgilClyne/iRingo" ["e"=1]
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "RSSNext/Folo"
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "linexjlin/GPTs"
"trungdq88/Awesome-Black-Friday-Cyber-Monday" -> "jason5ng32/MyIP" ["e"=1]
"rubberduck-ai/rubberduck-vscode" -> "ajikan/ScribeAI"
"rubberduck-ai/rubberduck-vscode" -> "vercel/modelfusion"
"karpathy/nn-zero-to-hero" -> "karpathy/micrograd"
"karpathy/nn-zero-to-hero" -> "karpathy/minGPT"
"karpathy/nn-zero-to-hero" -> "karpathy/nanoGPT"
"karpathy/nn-zero-to-hero" -> "karpathy/makemore"
"karpathy/nn-zero-to-hero" -> "karpathy/LLM101n"
"karpathy/nn-zero-to-hero" -> "karpathy/llm.c"
"karpathy/nn-zero-to-hero" -> "karpathy/minbpe"
"karpathy/nn-zero-to-hero" -> "karpathy/llama2.c"
"karpathy/nn-zero-to-hero" -> "greyhatguy007/Machine-Learning-Specialization-Coursera" ["e"=1]
"karpathy/nn-zero-to-hero" -> "karpathy/ng-video-lecture"
"karpathy/nn-zero-to-hero" -> "tinygrad/tinygrad"
"karpathy/nn-zero-to-hero" -> "naklecha/llama3-from-scratch"
"karpathy/nn-zero-to-hero" -> "google-research/tuning_playbook" ["e"=1]
"karpathy/nn-zero-to-hero" -> "mrdbourke/pytorch-deep-learning" ["e"=1]
"karpathy/nn-zero-to-hero" -> "mlabonne/llm-course"
"karpathy/makemore" -> "karpathy/micrograd"
"karpathy/makemore" -> "karpathy/nn-zero-to-hero"
"karpathy/makemore" -> "karpathy/ng-video-lecture"
"karpathy/makemore" -> "karpathy/minbpe"
"karpathy/makemore" -> "karpathy/build-nanogpt"
"karpathy/makemore" -> "karpathy/nanoGPT"
"karpathy/makemore" -> "karpathy/minGPT"
"karpathy/makemore" -> "karpathy/cryptos" ["e"=1]
"karpathy/makemore" -> "karpathy/nano-llama31" ["e"=1]
"karpathy/makemore" -> "AviSoori1x/makeMoE" ["e"=1]
"karpathy/makemore" -> "openai/tiktoken"
"karpathy/makemore" -> "karpathy/lecun1989-repro" ["e"=1]
"karpathy/makemore" -> "karpathy/llama2.c"
"karpathy/makemore" -> "karpathy/llm.c"
"karpathy/makemore" -> "karpathy/arxiv-sanity-lite" ["e"=1]
"marqo-ai/marqo" -> "neuml/txtai"
"marqo-ai/marqo" -> "weaviate/weaviate"
"marqo-ai/marqo" -> "deepset-ai/haystack"
"marqo-ai/marqo" -> "qdrant/qdrant"
"marqo-ai/marqo" -> "dottxt-ai/outlines"
"marqo-ai/marqo" -> "Unstructured-IO/unstructured"
"marqo-ai/marqo" -> "zilliztech/GPTCache" ["e"=1]
"marqo-ai/marqo" -> "griptape-ai/griptape"
"marqo-ai/marqo" -> "stanfordnlp/dspy"
"marqo-ai/marqo" -> "lancedb/lancedb"
"marqo-ai/marqo" -> "chroma-core/chroma"
"marqo-ai/marqo" -> "guardrails-ai/guardrails"
"marqo-ai/marqo" -> "eth-sri/lmql"
"marqo-ai/marqo" -> "567-labs/instructor"
"marqo-ai/marqo" -> "replicate/cog" ["e"=1]
"RIP-Comm/sossoldi" -> "italiaremote/awesome-italia-remote" ["e"=1]
"RIP-Comm/sossoldi" -> "cheshire-cat-ai/core" ["e"=1]
"RIP-Comm/sossoldi" -> "ai-christianson/RA.Aid"
"RIP-Comm/sossoldi" -> "pagopa/io-app" ["e"=1]
"RIP-Comm/sossoldi" -> "hotheadhacker/awesome-selfhost-docker" ["e"=1]
"RIP-Comm/sossoldi" -> "microsoft/RD-Agent"
"RIP-Comm/sossoldi" -> "RiccardoPP/dotfiles" ["e"=1]
"RIP-Comm/sossoldi" -> "GuidoPenta/galactic-CV-guide-for-developers" ["e"=1]
"RIP-Comm/sossoldi" -> "langchain-ai/local-deep-researcher"
"RIP-Comm/sossoldi" -> "mensae/hard-python"
"RIP-Comm/sossoldi" -> "antirez/ttt-rl" ["e"=1]
"RIP-Comm/sossoldi" -> "yuruotong1/autoMate"
"RIP-Comm/sossoldi" -> "ananthakumaran/paisa" ["e"=1]
"RIP-Comm/sossoldi" -> "tj-actions/changed-files" ["e"=1]
"RIP-Comm/sossoldi" -> "autoscrape-labs/pydoll"
"srush/GPU-Puzzles" -> "srush/Tensor-Puzzles" ["e"=1]
"srush/GPU-Puzzles" -> "gpu-mode/lectures" ["e"=1]
"srush/GPU-Puzzles" -> "stas00/ml-engineering"
"srush/GPU-Puzzles" -> "triton-lang/triton" ["e"=1]
"srush/GPU-Puzzles" -> "srush/Triton-Puzzles" ["e"=1]
"srush/GPU-Puzzles" -> "karpathy/llm.c"
"srush/GPU-Puzzles" -> "Dao-AILab/flash-attention" ["e"=1]
"srush/GPU-Puzzles" -> "srush/LLM-Training-Puzzles" ["e"=1]
"srush/GPU-Puzzles" -> "NVIDIA/cutlass" ["e"=1]
"srush/GPU-Puzzles" -> "arogozhnikov/einops" ["e"=1]
"srush/GPU-Puzzles" -> "adam-maj/tiny-gpu" ["e"=1]
"srush/GPU-Puzzles" -> "google-research/tuning_playbook" ["e"=1]
"srush/GPU-Puzzles" -> "tinygrad/tinygrad"
"srush/GPU-Puzzles" -> "naklecha/llama3-from-scratch"
"srush/GPU-Puzzles" -> "xlite-dev/LeetCUDA" ["e"=1]
"atherosai/ui" -> "Lissy93/web-check" ["e"=1]
"atherosai/ui" -> "gleam-lang/gleam" ["e"=1]
"atherosai/ui" -> "rolldown/rolldown" ["e"=1]
"atherosai/ui" -> "apernet/OpenGFW" ["e"=1]
"atherosai/ui" -> "wandb/openui"
"atherosai/ui" -> "abi/screenshot-to-code"
"atherosai/ui" -> "drawdb-io/drawdb" ["e"=1]
"atherosai/ui" -> "open-telemetry/opentelemetry-ebpf-profiler" ["e"=1]
"atherosai/ui" -> "HeyPuter/puter" ["e"=1]
"atherosai/ui" -> "plandex-ai/plandex"
"atherosai/ui" -> "FujiwaraChoki/MoneyPrinter"
"atherosai/ui" -> "PKU-YuanGroup/Open-Sora-Plan" ["e"=1]
"atherosai/ui" -> "nashsu/FreeAskInternet"
"atherosai/ui" -> "WongKinYiu/yolov9" ["e"=1]
"atherosai/ui" -> "twentyhq/twenty" ["e"=1]
"steven2358/awesome-generative-ai" -> "filipecalegario/awesome-generative-ai" ["e"=1]
"steven2358/awesome-generative-ai" -> "ai-collection/ai-collection" ["e"=1]
"steven2358/awesome-generative-ai" -> "aishwaryanr/awesome-generative-ai-guide"
"steven2358/awesome-generative-ai" -> "e2b-dev/awesome-ai-agents"
"steven2358/awesome-generative-ai" -> "sindresorhus/awesome-chatgpt" ["e"=1]
"steven2358/awesome-generative-ai" -> "kyrolabs/awesome-langchain" ["e"=1]
"steven2358/awesome-generative-ai" -> "mahseema/awesome-ai-tools" ["e"=1]
"steven2358/awesome-generative-ai" -> "assafelovic/gpt-researcher"
"steven2358/awesome-generative-ai" -> "Shubhamsaboo/awesome-llm-apps"
"steven2358/awesome-generative-ai" -> "Hannibal046/Awesome-LLM"
"steven2358/awesome-generative-ai" -> "owainlewis/awesome-artificial-intelligence" ["e"=1]
"steven2358/awesome-generative-ai" -> "GoogleCloudPlatform/generative-ai"
"steven2358/awesome-generative-ai" -> "crewAIInc/crewAI"
"steven2358/awesome-generative-ai" -> "khoj-ai/khoj"
"steven2358/awesome-generative-ai" -> "tensorchord/Awesome-LLMOps"
"anthropics/anthropic-sdk-typescript" -> "anthropics/anthropic-sdk-python"
"anthropics/anthropic-sdk-typescript" -> "anthropics/anthropic-tokenizer-typescript"
"anthropics/anthropic-sdk-typescript" -> "google-gemini/deprecated-generative-ai-js"
"anthropics/anthropic-sdk-typescript" -> "anthropics/anthropic-sdk-go" ["e"=1]
"anthropics/anthropic-sdk-typescript" -> "openai/openai-node"
"anthropics/anthropic-sdk-typescript" -> "anthropics/anthropic-retrieval-demo"
"anthropics/anthropic-sdk-typescript" -> "anthropics/anthropic-tools"
"anthropics/anthropic-sdk-typescript" -> "anthropics/anthropic-sdk-java" ["e"=1]
"anthropics/anthropic-sdk-typescript" -> "openai/openai-realtime-api-beta" ["e"=1]
"anthropics/anthropic-sdk-typescript" -> "dqbd/tiktoken" ["e"=1]
"anthropics/anthropic-sdk-typescript" -> "HumeAI/hume-api-examples"
"anthropics/anthropic-sdk-typescript" -> "langchain-ai/langgraphjs"
"anthropics/anthropic-sdk-typescript" -> "run-llama/LlamaIndexTS"
"anthropics/anthropic-sdk-typescript" -> "modelcontextprotocol/typescript-sdk"
"anthropics/anthropic-sdk-typescript" -> "groq/groq-typescript"
"guidance-ai/guidance" -> "dottxt-ai/outlines"
"guidance-ai/guidance" -> "stanfordnlp/dspy"
"guidance-ai/guidance" -> "run-llama/llama_index"
"guidance-ai/guidance" -> "567-labs/instructor"
"guidance-ai/guidance" -> "ShishirPatil/gorilla" ["e"=1]
"guidance-ai/guidance" -> "microsoft/semantic-kernel"
"guidance-ai/guidance" -> "lm-sys/FastChat"
"guidance-ai/guidance" -> "BerriAI/litellm"
"guidance-ai/guidance" -> "eth-sri/lmql"
"guidance-ai/guidance" -> "vllm-project/vllm"
"guidance-ai/guidance" -> "microsoft/autogen"
"guidance-ai/guidance" -> "yoheinakajima/babyagi" ["e"=1]
"guidance-ai/guidance" -> "smol-ai/developer" ["e"=1]
"guidance-ai/guidance" -> "letta-ai/letta"
"guidance-ai/guidance" -> "openai/chatgpt-retrieval-plugin"
"weaviate/weaviate" -> "qdrant/qdrant"
"weaviate/weaviate" -> "chroma-core/chroma"
"weaviate/weaviate" -> "milvus-io/milvus"
"weaviate/weaviate" -> "pgvector/pgvector"
"weaviate/weaviate" -> "deepset-ai/haystack"
"weaviate/weaviate" -> "run-llama/llama_index"
"weaviate/weaviate" -> "facebookresearch/faiss" ["e"=1]
"weaviate/weaviate" -> "weaviate/Verba"
"weaviate/weaviate" -> "Unstructured-IO/unstructured"
"weaviate/weaviate" -> "stanfordnlp/dspy"
"weaviate/weaviate" -> "lancedb/lancedb"
"weaviate/weaviate" -> "neuml/txtai"
"weaviate/weaviate" -> "BerriAI/litellm"
"weaviate/weaviate" -> "langfuse/langfuse"
"weaviate/weaviate" -> "vllm-project/vllm"
"IntelLabs/fastRAG" -> "AnswerDotAI/RAGatouille"
"IntelLabs/fastRAG" -> "AkariAsai/self-rag"
"IntelLabs/fastRAG" -> "RUC-NLPIR/FlashRAG"
"IntelLabs/fastRAG" -> "stanford-futuredata/ColBERT" ["e"=1]
"IntelLabs/fastRAG" -> "Raudaschl/rag-fusion"
"IntelLabs/fastRAG" -> "huggingface/setfit" ["e"=1]
"IntelLabs/fastRAG" -> "jzbjyb/FLARE" ["e"=1]
"IntelLabs/fastRAG" -> "castorini/pyserini" ["e"=1]
"IntelLabs/fastRAG" -> "Tongji-KGLLM/RAG-Survey"
"IntelLabs/fastRAG" -> "ray-project/llm-applications"
"IntelLabs/fastRAG" -> "facebookresearch/atlas" ["e"=1]
"IntelLabs/fastRAG" -> "explodinggradients/ragas"
"IntelLabs/fastRAG" -> "AnswerDotAI/rerankers"
"IntelLabs/fastRAG" -> "beir-cellar/beir" ["e"=1]
"IntelLabs/fastRAG" -> "ContextualAI/gritlm" ["e"=1]
"langchain-ai/langchainjs" -> "vercel/ai"
"langchain-ai/langchainjs" -> "openai/openai-node"
"langchain-ai/langchainjs" -> "langchain-ai/langchain"
"langchain-ai/langchainjs" -> "FlowiseAI/Flowise"
"langchain-ai/langchainjs" -> "mayooear/ai-pdf-chatbot-langchain" ["e"=1]
"langchain-ai/langchainjs" -> "modelcontextprotocol/typescript-sdk"
"langchain-ai/langchainjs" -> "huggingface/transformers.js"
"langchain-ai/langchainjs" -> "chroma-core/chroma"
"langchain-ai/langchainjs" -> "run-llama/llama_index"
"langchain-ai/langchainjs" -> "trpc/trpc" ["e"=1]
"langchain-ai/langchainjs" -> "langchain-ai/langgraphjs"
"langchain-ai/langchainjs" -> "langchain-ai/chat-langchain" ["e"=1]
"langchain-ai/langchainjs" -> "vercel/turborepo" ["e"=1]
"langchain-ai/langchainjs" -> "openai/chatgpt-retrieval-plugin"
"langchain-ai/langchainjs" -> "yoheinakajima/babyagi" ["e"=1]
"tantaraio/voy" -> "visheratin/web-ai"
"tantaraio/voy" -> "jacoblee93/fully-local-pdf-chatbot"
"tantaraio/voy" -> "not-pizza/victor"
"tantaraio/voy" -> "Stevenic/vectra"
"tantaraio/voy" -> "huggingface/ratchet" ["e"=1]
"tantaraio/voy" -> "nitaiaharoni1/vector-storage"
"tantaraio/voy" -> "yusufhilmi/client-vector-search"
"tantaraio/voy" -> "do-me/SemanticFinder"
"tantaraio/voy" -> "ngxson/wllama"
"tantaraio/voy" -> "asg017/sqlite-vss"
"tantaraio/voy" -> "webonnx/wonnx" ["e"=1]
"tantaraio/voy" -> "ShravanSunder/hnswlib-wasm"
"tantaraio/voy" -> "rhashimoto/wa-sqlite" ["e"=1]
"tantaraio/voy" -> "justjake/quickjs-emscripten" ["e"=1]
"jaymody/picoGPT" -> "karpathy/minGPT"
"jaymody/picoGPT" -> "karpathy/nanoGPT"
"jaymody/picoGPT" -> "FMInference/FlexLLMGen" ["e"=1]
"jaymody/picoGPT" -> "amazon-science/mm-cot" ["e"=1]
"jaymody/picoGPT" -> "pytorch-labs/gpt-fast" ["e"=1]
"jaymody/picoGPT" -> "srush/Tensor-Puzzles" ["e"=1]
"jaymody/picoGPT" -> "lucidrains/x-transformers" ["e"=1]
"jaymody/picoGPT" -> "karpathy/llama2.c"
"jaymody/picoGPT" -> "karpathy/micrograd"
"jaymody/picoGPT" -> "karpathy/minbpe"
"jaymody/picoGPT" -> "KellerJordan/modded-nanogpt" ["e"=1]
"jaymody/picoGPT" -> "Lightning-AI/lit-llama"
"jaymody/picoGPT" -> "lucidrains/PaLM-rlhf-pytorch"
"jaymody/picoGPT" -> "BlinkDL/RWKV-LM"
"jaymody/picoGPT" -> "openlm-research/open_llama"
"PradipNichite/Youtube-Tutorials" -> "Coding-Crashkurse/Langchain-Full-Course"
"PradipNichite/Youtube-Tutorials" -> "samwit/langchain-tutorials" ["e"=1]
"superduper-io/superduper" -> "microsoft/TaskWeaver"
"superduper-io/superduper" -> "superagent-ai/superagent" ["e"=1]
"superduper-io/superduper" -> "letta-ai/letta"
"superduper-io/superduper" -> "activepieces/activepieces" ["e"=1]
"superduper-io/superduper" -> "microsoft/promptbase"
"superduper-io/superduper" -> "langchain-ai/opengpts"
"superduper-io/superduper" -> "vanna-ai/vanna"
"superduper-io/superduper" -> "eosphoros-ai/DB-GPT"
"superduper-io/superduper" -> "Unstructured-IO/unstructured"
"superduper-io/superduper" -> "onyx-dot-app/onyx"
"superduper-io/superduper" -> "agno-agi/agno"
"superduper-io/superduper" -> "crewAIInc/crewAI"
"superduper-io/superduper" -> "ml-explore/mlx-examples" ["e"=1]
"superduper-io/superduper" -> "OthersideAI/self-operating-computer"
"superduper-io/superduper" -> "PRIS-CV/DemoFusion" ["e"=1]
"Unstructured-IO/community" -> "Unstructured-IO/unstructured-api-tools"
"poloclub/diffusion-explainer" -> "poloclub/LLM-Attributor"
"infiniflow/infinity" -> "facebookincubator/velox" ["e"=1]
"infiniflow/infinity" -> "FlagOpen/FlagEmbedding" ["e"=1]
"infiniflow/infinity" -> "xorbitsai/inference"
"infiniflow/infinity" -> "infiniflow/ragflow"
"infiniflow/infinity" -> "lancedb/lancedb"
"infiniflow/infinity" -> "netease-youdao/BCEmbedding" ["e"=1]
"infiniflow/infinity" -> "OpenSPG/KAG"
"infiniflow/infinity" -> "eosphoros-ai/DB-GPT"
"infiniflow/infinity" -> "databendlabs/databend" ["e"=1]
"infiniflow/infinity" -> "risinglightdb/risinglight" ["e"=1]
"infiniflow/infinity" -> "microsoft/graphrag"
"infiniflow/infinity" -> "GreptimeTeam/greptimedb" ["e"=1]
"infiniflow/infinity" -> "InternLM/lmdeploy" ["e"=1]
"infiniflow/infinity" -> "OpenSPG/openspg"
"infiniflow/infinity" -> "netease-youdao/QAnything"
"uptrain-ai/uptrain" -> "tableflowhq/csv-import"
"uptrain-ai/uptrain" -> "usecakework/cakework"
"uptrain-ai/uptrain" -> "fern-api/fern"
"uptrain-ai/uptrain" -> "map3xyz/supercharge"
"uptrain-ai/uptrain" -> "finic-ai/finic"
"uptrain-ai/uptrain" -> "magicpatterns/catalog"
"uptrain-ai/uptrain" -> "matanolabs/matano"
"uptrain-ai/uptrain" -> "confident-ai/deepeval"
"uptrain-ai/uptrain" -> "thebabylonai/babylog"
"uptrain-ai/uptrain" -> "athina-ai/athina-sdk"
"uptrain-ai/uptrain" -> "guardrails-ai/guardrails"
"uptrain-ai/uptrain" -> "enrolla/enrolla"
"uptrain-ai/uptrain" -> "Helicone/helicone"
"uptrain-ai/uptrain" -> "Arize-ai/phoenix"
"uptrain-ai/uptrain" -> "langfuse/langfuse"
"anthropics/anthropic-sdk-python" -> "anthropics/anthropic-sdk-typescript"
"anthropics/anthropic-sdk-python" -> "anthropics/anthropic-cookbook"
"anthropics/anthropic-sdk-python" -> "anthropics/anthropic-tools"
"anthropics/anthropic-sdk-python" -> "googleapis/python-genai"
"anthropics/anthropic-sdk-python" -> "google-gemini/deprecated-generative-ai-python"
"anthropics/anthropic-sdk-python" -> "anthropics/hh-rlhf" ["e"=1]
"anthropics/anthropic-sdk-python" -> "anthropics/anthropic-quickstarts"
"anthropics/anthropic-sdk-python" -> "anthropics/prompt-eng-interactive-tutorial"
"anthropics/anthropic-sdk-python" -> "anthropics/courses"
"anthropics/anthropic-sdk-python" -> "anthropics/anthropic-retrieval-demo"
"anthropics/anthropic-sdk-python" -> "Doriandarko/maestro"
"anthropics/anthropic-sdk-python" -> "567-labs/instructor"
"anthropics/anthropic-sdk-python" -> "anthropics/anthropic-bedrock-python"
"anthropics/anthropic-sdk-python" -> "modelcontextprotocol/python-sdk"
"anthropics/anthropic-sdk-python" -> "openai/tiktoken"
"bytedance/monolith" -> "deepseek-ai/DeepSeek-Coder"
"bytedance/monolith" -> "ericciarla/trendFinder"
"bytedance/monolith" -> "stanford-oval/storm"
"bytedance/monolith" -> "browserbase/stagehand"
"bytedance/monolith" -> "Cinnamon/kotaemon"
"bytedance/monolith" -> "exo-explore/exo"
"bytedance/monolith" -> "DrewThomasson/ebook2audiobook"
"bytedance/monolith" -> "zaidmukaddam/scira"
"bytedance/monolith" -> "microsoft/data-formulator"
"bytedance/monolith" -> "antiwork/shortest"
"bytedance/monolith" -> "FujiwaraChoki/MoneyPrinterV2"
"bytedance/monolith" -> "oumi-ai/oumi"
"bytedance/monolith" -> "khoj-ai/khoj"
"bytedance/monolith" -> "agno-agi/agno"
"bytedance/monolith" -> "anthropics/courses"
"oslabs-beta/nimbus" -> "oslabs-beta/QLache"
"oslabs-beta/nimbus" -> "oslabs-beta/KafkaCompass"
"oslabs-beta/nimbus" -> "oslabs-beta/solid-rewind"
"oslabs-beta/nimbus" -> "oslabs-beta/DataDoc"
"oslabs-beta/nimbus" -> "oslabs-beta/docker-watch-app"
"oslabs-beta/KafkaCompass" -> "oslabs-beta/QLache"
"oslabs-beta/KafkaCompass" -> "oslabs-beta/nimbus"
"oslabs-beta/KafkaCompass" -> "oslabs-beta/DataDoc"
"oslabs-beta/solid-rewind" -> "oslabs-beta/QLache"
"oslabs-beta/solid-rewind" -> "oslabs-beta/KafkaCompass"
"oslabs-beta/solid-rewind" -> "oslabs-beta/nimbus"
"oslabs-beta/solid-rewind" -> "oslabs-beta/DataDoc"
"oslabs-beta/solid-rewind" -> "oslabs-beta/docker-watch-app"
"oslabs-beta/solid-rewind" -> "oslabs-beta/Knight-Owl-Display"
"oslabs-beta/Knight-Owl-Display" -> "oslabs-beta/KnightOwl" ["e"=1]
"oslabs-beta/Knight-Owl-Display" -> "henneberger/typekin"
"RediseeLabs/redisee" -> "oslabs-beta/Caribu"
"RediseeLabs/redisee" -> "oslabs-beta/Aionic"
"RediseeLabs/redisee" -> "oslabs-beta/Splache"
"griptape-ai/griptape" -> "minimaxir/simpleaichat" ["e"=1]
"griptape-ai/griptape" -> "langroid/langroid"
"griptape-ai/griptape" -> "guardrails-ai/guardrails"
"griptape-ai/griptape" -> "eth-sri/lmql"
"griptape-ai/griptape" -> "PrefectHQ/marvin" ["e"=1]
"griptape-ai/griptape" -> "superagent-ai/superagent" ["e"=1]
"griptape-ai/griptape" -> "567-labs/instructor"
"griptape-ai/griptape" -> "DAGWorks-Inc/burr"
"griptape-ai/griptape" -> "getzep/zep"
"griptape-ai/griptape" -> "zilliztech/GPTCache" ["e"=1]
"griptape-ai/griptape" -> "jackmpcollins/magentic"
"griptape-ai/griptape" -> "dottxt-ai/outlines"
"griptape-ai/griptape" -> "Forethought-Technologies/AutoChain" ["e"=1]
"griptape-ai/griptape" -> "NVIDIA/NeMo-Guardrails"
"griptape-ai/griptape" -> "neuml/txtai"
"young-geng/EasyLM" -> "openlm-research/open_llama"
"young-geng/EasyLM" -> "project-baize/baize-chatbot" ["e"=1]
"young-geng/EasyLM" -> "AI-Hypercomputer/maxtext" ["e"=1]
"young-geng/EasyLM" -> "togethercomputer/RedPajama-Data"
"young-geng/EasyLM" -> "EleutherAI/pythia" ["e"=1]
"young-geng/EasyLM" -> "mosaicml/llm-foundry"
"young-geng/EasyLM" -> "Lightning-AI/lit-llama"
"young-geng/EasyLM" -> "Sea-Snell/JAXSeq" ["e"=1]
"young-geng/EasyLM" -> "OpenGVLab/LLaMA-Adapter"
"young-geng/EasyLM" -> "CarperAI/trlx" ["e"=1]
"young-geng/EasyLM" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"young-geng/EasyLM" -> "Sea-Snell/JAX_llama" ["e"=1]
"young-geng/EasyLM" -> "stanford-crfm/levanter" ["e"=1]
"young-geng/EasyLM" -> "erfanzar/EasyDeL" ["e"=1]
"young-geng/EasyLM" -> "google-research/t5x" ["e"=1]
"Helicone/helicone" -> "langfuse/langfuse"
"Helicone/helicone" -> "Agenta-AI/agenta"
"Helicone/helicone" -> "lunary-ai/lunary"
"Helicone/helicone" -> "promptfoo/promptfoo"
"Helicone/helicone" -> "langwatch/langwatch"
"Helicone/helicone" -> "comet-ml/opik"
"Helicone/helicone" -> "superagent-ai/superagent" ["e"=1]
"Helicone/helicone" -> "getzep/zep"
"Helicone/helicone" -> "browserbase/stagehand"
"Helicone/helicone" -> "BerriAI/litellm"
"Helicone/helicone" -> "Portkey-AI/gateway"
"Helicone/helicone" -> "AgentOps-AI/agentops"
"Helicone/helicone" -> "vocodedev/vocode-core"
"Helicone/helicone" -> "Arize-ai/phoenix"
"Helicone/helicone" -> "guardrails-ai/guardrails"
"TheR1D/shell_gpt" -> "sigoden/aichat"
"TheR1D/shell_gpt" -> "Aider-AI/aider"
"TheR1D/shell_gpt" -> "BuilderIO/ai-shell" ["e"=1]
"TheR1D/shell_gpt" -> "mudler/LocalAI"
"TheR1D/shell_gpt" -> "BerriAI/litellm"
"TheR1D/shell_gpt" -> "danny-avila/LibreChat"
"TheR1D/shell_gpt" -> "continuedev/continue"
"TheR1D/shell_gpt" -> "openai/chatgpt-retrieval-plugin"
"TheR1D/shell_gpt" -> "yoheinakajima/babyagi" ["e"=1]
"TheR1D/shell_gpt" -> "mayooear/ai-pdf-chatbot-langchain" ["e"=1]
"TheR1D/shell_gpt" -> "ItzCrazyKns/Perplexica"
"TheR1D/shell_gpt" -> "assafelovic/gpt-researcher"
"TheR1D/shell_gpt" -> "run-llama/llama_index"
"TheR1D/shell_gpt" -> "OpenInterpreter/open-interpreter"
"TheR1D/shell_gpt" -> "TabbyML/tabby"
"opendatahub-io-contrib/ai-on-openshift" -> "rh-aiservices-bu/llm-on-openshift"
"opendatahub-io-contrib/ai-on-openshift" -> "rh-aiservices-bu/parasol-insurance"
"opendatahub-io-contrib/ai-on-openshift" -> "opendatahub-io-contrib/workbench-images"
"jucasoliveira/terminalGPT" -> "adamyodinsky/TerminalGPT"
"jucasoliveira/terminalGPT" -> "0xacx/chatGPT-shell-cli"
"jucasoliveira/terminalGPT" -> "VaibhavAcharya/code-gpt"
"jucasoliveira/terminalGPT" -> "aandrew-me/tgpt"
"jucasoliveira/terminalGPT" -> "transitive-bullshit/chatgpt-twitter-bot" ["e"=1]
"jucasoliveira/terminalGPT" -> "liady/ChatGPT-pdf" ["e"=1]
"jucasoliveira/terminalGPT" -> "abhagsain/ai-cli" ["e"=1]
"Enkkfull/hard-python" -> "mensae/hard-python"
"mensae/hard-python" -> "Enkkfull/hard-python"
"mensae/hard-python" -> "mensae/Hard-Python-Redhead-Edition"
"gianlucajahn/react-ecommerce-store" -> "amadotejada/GAMpass"
"gianlucajahn/react-ecommerce-store" -> "boxfish-studio/sugar-rush"
"gianlucajahn/react-ecommerce-store" -> "alpersonalwebsite/learn-typescript"
"gianlucajahn/react-ecommerce-store" -> "oqyh/Game-Manager"
"gianlucajahn/react-ecommerce-store" -> "rog0978/powerwall_display"
"gianlucajahn/react-ecommerce-store" -> "CamilleMo/command_recall"
"gianlucajahn/react-ecommerce-store" -> "Muvon/yoda"
"gianlucajahn/react-ecommerce-store" -> "mhttp-org/unity-sdk"
"gianlucajahn/react-ecommerce-store" -> "aurora-is-near/evm2near"
"gianlucajahn/react-ecommerce-store" -> "wednesday-solutions/node-mongo-express"
"gianlucajahn/react-ecommerce-store" -> "amadotejada/unopass"
"gianlucajahn/react-ecommerce-store" -> "wednesday-solutions/react-graphql-ts-template"
"gianlucajahn/react-ecommerce-store" -> "YunaBraska/git-info-action"
"gianlucajahn/react-ecommerce-store" -> "amadotejada/self-portal"
"gianlucajahn/react-ecommerce-store" -> "alpersonalwebsite/learn-node.js"
"xeol-io/xeol" -> "cedana/cedana-cli"
"xeol-io/xeol" -> "Skyvern-AI/wyvern"
"xeol-io/xeol" -> "Trainy-ai/llm-atc"
"xeol-io/xeol" -> "briefercloud/ergomake"
"xeol-io/xeol" -> "poozlehq/poozle"
"xeol-io/xeol" -> "quack-ai/companion-vscode"
"xeol-io/xeol" -> "trytrench/trench"
"xeol-io/xeol" -> "artie-labs/transfer"
"xeol-io/xeol" -> "xeol-io/bumpgen"
"iusztinpaul/energy-forecasting" -> "iusztinpaul/hands-on-llms" ["e"=1]
"iusztinpaul/energy-forecasting" -> "Paulescu/hands-on-train-and-deploy-ml" ["e"=1]
"iusztinpaul/energy-forecasting" -> "fmind/mlops-python-package"
"iusztinpaul/energy-forecasting" -> "decodingml/personalized-recommender-course"
"iusztinpaul/energy-forecasting" -> "callmesora/llmops-python-package"
"iusztinpaul/energy-forecasting" -> "Paulescu/build-and-deploy-real-time-feature-pipeline" ["e"=1]
"iusztinpaul/energy-forecasting" -> "Paulescu/hands-on-rl" ["e"=1]
"iusztinpaul/energy-forecasting" -> "decodingml/llm-twin-course"
"iusztinpaul/energy-forecasting" -> "featurestoreorg/serverless-ml-course" ["e"=1]
"iusztinpaul/energy-forecasting" -> "logicalclocks/hopsworks-tutorials" ["e"=1]
"iusztinpaul/energy-forecasting" -> "Paulescu/real-time-data-pipelines-in-python" ["e"=1]
"iusztinpaul/energy-forecasting" -> "MLOps-Courses/mlops-coding-course"
"iusztinpaul/energy-forecasting" -> "GokuMohandas/mlops-course" ["e"=1]
"iusztinpaul/energy-forecasting" -> "decodingml/second-brain-ai-assistant-course"
"iusztinpaul/energy-forecasting" -> "graviraja/MLOps-Basics" ["e"=1]
"Unstructured-IO/unstructured-api" -> "Unstructured-IO/unstructured-python-client"
"Unstructured-IO/unstructured-api" -> "Unstructured-IO/unstructured-inference"
"Unstructured-IO/unstructured-api" -> "Unstructured-IO/unstructured"
"Unstructured-IO/unstructured-api" -> "Unstructured-IO/unstructured-js-client"
"Unstructured-IO/unstructured-api" -> "StreetLamb/tribe"
"Unstructured-IO/unstructured-api" -> "AnswerDotAI/byaldi"
"minhlucvan/n8n-nodes-browserless" -> "drudge/n8n-nodes-puppeteer"
"minhlucvan/n8n-nodes-browserless" -> "edbrdi/n8n-nodes-puppeteer-extended"
"minhlucvan/n8n-nodes-browserless" -> "hapheus/n8n-nodes-youtube-transcript"
"matanolabs/matano" -> "usecakework/cakework"
"matanolabs/matano" -> "map3xyz/supercharge"
"matanolabs/matano" -> "infosecB/awesome-detection-engineering" ["e"=1]
"matanolabs/matano" -> "enrolla/enrolla"
"matanolabs/matano" -> "thebabylonai/babylog"
"matanolabs/matano" -> "DataDog/stratus-red-team" ["e"=1]
"matanolabs/matano" -> "noya-app/noya"
"matanolabs/matano" -> "Left-on-Read/leftonread"
"matanolabs/matano" -> "Yamato-Security/hayabusa" ["e"=1]
"matanolabs/matano" -> "chainguard-dev/osquery-defense-kit" ["e"=1]
"matanolabs/matano" -> "Zeus-Labs/ZeusCloud" ["e"=1]
"matanolabs/matano" -> "brexhq/substation" ["e"=1]
"matanolabs/matano" -> "stitchfix/hamilton"
"matanolabs/matano" -> "enclaver-io/enclaver"
"matanolabs/matano" -> "panther-labs/panther-analysis" ["e"=1]
"veekaybee/viberary" -> "veekaybee/what_are_embeddings"
"openai/gpt-discord-bot" -> "Zero6992/chatGPT-discord-bot" ["e"=1]
"openai/gpt-discord-bot" -> "Kav-K/GPTDiscord" ["e"=1]
"openai/gpt-discord-bot" -> "openai/dallify-discord-bot" ["e"=1]
"openai/gpt-discord-bot" -> "openai/openai-quickstart-python"
"openai/gpt-discord-bot" -> "TuringAI-Team/chatgpt-discord-bot" ["e"=1]
"openai/gpt-discord-bot" -> "openai/openai-openapi"
"openai/gpt-discord-bot" -> "openai/openai-quickstart-node"
"openai/gpt-discord-bot" -> "openai/plugins-quickstart" ["e"=1]
"openai/gpt-discord-bot" -> "m1guelpf/chatgpt-discord"
"openai/gpt-discord-bot" -> "mishl-dev/Discord-AI-Chatbot" ["e"=1]
"openai/gpt-discord-bot" -> "onury5506/Discord-ChatGPT-Bot" ["e"=1]
"openai/gpt-discord-bot" -> "openai/Video-Pre-Training" ["e"=1]
"openai/gpt-discord-bot" -> "openai/point-e" ["e"=1]
"openai/gpt-discord-bot" -> "openai/openai-python"
"openai/gpt-discord-bot" -> "openai/chatgpt-retrieval-plugin"
"asg017/sqlite-vss" -> "asg017/sqlite-vec"
"asg017/sqlite-vss" -> "unum-cloud/usearch" ["e"=1]
"asg017/sqlite-vss" -> "tantaraio/voy"
"asg017/sqlite-vss" -> "vlcn-io/cr-sqlite" ["e"=1]
"asg017/sqlite-vss" -> "pgvector/pgvector"
"asg017/sqlite-vss" -> "Stevenic/vectra"
"asg017/sqlite-vss" -> "microsoft/DiskANN" ["e"=1]
"asg017/sqlite-vss" -> "cozodb/cozo" ["e"=1]
"asg017/sqlite-vss" -> "asg017/sqlite-lembed"
"asg017/sqlite-vss" -> "nalgeon/sqlean" ["e"=1]
"asg017/sqlite-vss" -> "tursodatabase/libsql-client-ts"
"asg017/sqlite-vss" -> "maxpert/marmot" ["e"=1]
"asg017/sqlite-vss" -> "rhashimoto/wa-sqlite" ["e"=1]
"asg017/sqlite-vss" -> "luojinlongjjj/android-faiss" ["e"=1]
"asg017/sqlite-vss" -> "lancedb/lancedb"
"ChrisBop/eth-nft-drainer" -> "henneberger/typekin"
"ChrisBop/eth-nft-drainer" -> "yyeunggg/TelloPy"
"ChrisBop/eth-nft-drainer" -> "Ox29DC/Crypto-Drainer"
"ChrisBop/eth-nft-drainer" -> "oslabs-beta/Knight-Owl-Display"
"wesbos/hot-tips" -> "stolinski/cool-treats"
"wesbos/hot-tips" -> "antirez/botlib"
"wesbos/hot-tips" -> "teslamotors/roadster" ["e"=1]
"wesbos/hot-tips" -> "eknkc/ssr-benchmark"
"wesbos/hot-tips" -> "yihong0618/tg_bot_collections" ["e"=1]
"wesbos/hot-tips" -> "google-gemini/deprecated-generative-ai-swift" ["e"=1]
"wesbos/hot-tips" -> "0xacme/ERC404" ["e"=1]
"wesbos/hot-tips" -> "run-llama/rags"
"wesbos/hot-tips" -> "aixcoder-plugin/aiXcoder-7B"
"wesbos/hot-tips" -> "emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC"
"wesbos/hot-tips" -> "regolith-labs/ore"
"wesbos/hot-tips" -> "kijai/ComfyUI-DiffusersStableCascade"
"wesbos/hot-tips" -> "tidwall/neco" ["e"=1]
"wesbos/hot-tips" -> "zanfranceschi/rinha-de-backend-2024-q1" ["e"=1]
"wesbos/hot-tips" -> "jw-12138/multi-window-collab-demo"
"praeclarum/transformers-js" -> "mithril-security/tokenizers-wasm"
"explosion/curated-transformers" -> "explosion/spacy-llm"
"explosion/curated-transformers" -> "koaning/bulk" ["e"=1]
"explosion/curated-transformers" -> "explosion/confection"
"explosion/curated-transformers" -> "explosion/prodigy-openai-recipes" ["e"=1]
"explosion/curated-transformers" -> "sabetAI/BLoRA" ["e"=1]
"explosion/curated-transformers" -> "mixedbread-ai/batched"
"explosion/curated-transformers" -> "srush/LLM-Training-Puzzles" ["e"=1]
"explosion/curated-transformers" -> "PiotrNawrot/nanoT5"
"explosion/curated-transformers" -> "VikParuchuri/textbook_quality" ["e"=1]
"explosion/curated-transformers" -> "stanford-crfm/levanter" ["e"=1]
"explosion/curated-transformers" -> "tomaarsen/SpanMarkerNER"
"explosion/curated-transformers" -> "explosion/srsly"
"explosion/curated-transformers" -> "webis-de/small-text" ["e"=1]
"explosion/curated-transformers" -> "explosion/weasel"
"explosion/curated-transformers" -> "fastai/course22p2" ["e"=1]
"oslabs-beta/Splache" -> "oslabs-beta/Aionic"
"oslabs-beta/Splache" -> "RediseeLabs/redisee"
"oslabs-beta/Splache" -> "oslabs-beta/Caribu"
"loxilb-io/loxilb" -> "TheOneStudioLLC/Mac-Recorder"
"loxilb-io/loxilb" -> "TheAnig/NER-LSTM-CNN-Pytorch"
"loxilb-io/loxilb" -> "CASRAI-CRedIT/Dictionary"
"loxilb-io/loxilb" -> "CodeFromAnywhere/ActionSchema"
"loxilb-io/loxilb" -> "onraj/expo-draggable-textfield"
"loxilb-io/loxilb" -> "Haeven/msteam-log-transport"
"loxilb-io/loxilb" -> "xames3/nanotorch"
"loxilb-io/loxilb" -> "manumerous/vpselector"
"loxilb-io/loxilb" -> "xames3/learn"
"loxilb-io/loxilb" -> "promptdesk/promptdesk"
"loxilb-io/loxilb" -> "mtabanja/mtabanja"
"loxilb-io/loxilb" -> "nickokss/jumper"
"loxilb-io/loxilb" -> "paulpanwang/Gen6DNeRF"
"loxilb-io/loxilb" -> "cryptohub-agency/smart_contract_audits"
"loxilb-io/loxilb" -> "AlexTeslenko/leetcode"
"JSv4/OpenContracts" -> "JSv4/Delphic" ["e"=1]
"JSv4/OpenContracts" -> "ucbepic/docetl"
"JSv4/OpenContracts" -> "run-llama/llama_deploy"
"JSv4/OpenContracts" -> "FutureClubNL/RAGMeUp"
"JSv4/OpenContracts" -> "run-llama/create-llama"
"JSv4/OpenContracts" -> "postgresml/korvus"
"JSv4/OpenContracts" -> "enoch3712/ExtractThinker"
"JSv4/OpenContracts" -> "allenai/pawls" ["e"=1]
"JSv4/OpenContracts" -> "KruxAI/ragbuilder"
"JSv4/OpenContracts" -> "run-llama/llamacloud-demo"
"JSv4/OpenContracts" -> "telekom/create-tsi"
"JSv4/OpenContracts" -> "apocas/restai"
"JSv4/OpenContracts" -> "yoheinakajima/mindgraph"
"JSv4/OpenContracts" -> "nlmatics/nlm-ingestor"
"JSv4/OpenContracts" -> "YassKhazzan/openperplex_backend_os"
"DS4SD/deepsearch-glm" -> "DS4SD/deepsearch-examples"
"enrolla/enrolla" -> "map3xyz/supercharge"
"enrolla/enrolla" -> "thebabylonai/babylog"
"enrolla/enrolla" -> "usecakework/cakework"
"enrolla/enrolla" -> "traceloop/jest-opentelemetry"
"enrolla/enrolla" -> "Left-on-Read/leftonread"
"enrolla/enrolla" -> "NangoHQ/nango-sync"
"enrolla/enrolla" -> "vaerohq/vaero"
"enrolla/enrolla" -> "FrigadeHQ/react-native-onboard"
"enrolla/enrolla" -> "Helicone/valyr"
"enrolla/enrolla" -> "stitchfix/hamilton"
"enrolla/enrolla" -> "outerbase/ezql"
"enrolla/enrolla" -> "athina-ai/athina-sdk"
"enrolla/enrolla" -> "invopop/gobl"
"enrolla/enrolla" -> "enclaver-io/enclaver"
"enrolla/enrolla" -> "matanolabs/matano"
"Mingyue-Cheng/FormerTime" -> "Mingyue-Cheng/InstructTime"
"TilmanGriesel/graphite" -> "YunaBraska/java-info-action"
"TilmanGriesel/graphite" -> "rog0978/powerwall_display"
"TilmanGriesel/graphite" -> "alpersonalwebsite/learn-node.js"
"TilmanGriesel/graphite" -> "aurora-is-near/evm2near"
"TilmanGriesel/graphite" -> "alpersonalwebsite/learn-typescript"
"TilmanGriesel/graphite" -> "YunaBraska/git-info-action"
"TilmanGriesel/graphite" -> "boxfish-studio/sugar-rush"
"TilmanGriesel/graphite" -> "wednesday-solutions/react-graphql-ts-template"
"TilmanGriesel/graphite" -> "CamilleMo/command_recall"
"TilmanGriesel/graphite" -> "nosana-ci/nosana-programs"
"TilmanGriesel/graphite" -> "deca-org/deca-ui"
"TilmanGriesel/graphite" -> "wednesday-solutions/go-template"
"TilmanGriesel/graphite" -> "trunk-io/plugins"
"TilmanGriesel/graphite" -> "mhttp-org/unity-sdk"
"TilmanGriesel/graphite" -> "wednesday-solutions/serverless"
"hfaran/slack-export-viewer" -> "zach-snell/slack-export"
"hfaran/slack-export-viewer" -> "rusq/slackdump"
"hfaran/slack-export-viewer" -> "thayakawa-gh/SlackLogViewer"
"hfaran/slack-export-viewer" -> "hfaran/slack2html"
"hfaran/slack-export-viewer" -> "hisabimbola/slack-history-export"
"hfaran/slack-export-viewer" -> "docmarionum1/slack-archive-bot"
"hfaran/slack-export-viewer" -> "kununu/slackdump2html"
"hfaran/slack-export-viewer" -> "grundleborg/slack-advanced-exporter"
"hfaran/slack-export-viewer" -> "4350pChris/slack-vuesualizer"
"hfaran/slack-export-viewer" -> "felixrieseberg/slack-archive"
"hfaran/slack-export-viewer" -> "tamhinsf/ChannelSurf"
"hfaran/slack-export-viewer" -> "sebseager/slack-exporter"
"hfaran/slack-export-viewer" -> "hfaran/slack-auto-export"
"hfaran/slack-export-viewer" -> "auino/slack-downloader"
"hfaran/slack-export-viewer" -> "andxyz/slack-history-export"
"next-hat/nanocl" -> "alpersonalwebsite/learn-node.js"
"next-hat/nanocl" -> "aurora-is-near/evm2near"
"next-hat/nanocl" -> "rog0978/powerwall_display"
"next-hat/nanocl" -> "nosana-ci/nosana-programs"
"next-hat/nanocl" -> "wednesday-solutions/react-graphql-ts-template"
"next-hat/nanocl" -> "alpersonalwebsite/learn-typescript"
"next-hat/nanocl" -> "wednesday-solutions/go-template"
"next-hat/nanocl" -> "CamilleMo/command_recall"
"next-hat/nanocl" -> "superinsight/superinsight-db"
"next-hat/nanocl" -> "aretecode/system-design-templates-excalidraw"
"next-hat/nanocl" -> "deca-org/deca-ui"
"next-hat/nanocl" -> "YunaBraska/java-info-action"
"next-hat/nanocl" -> "YunaBraska/git-info-action"
"next-hat/nanocl" -> "lifinance/widget"
"next-hat/nanocl" -> "robot-bulls/automated_tiktok_video_creation"
"deca-org/deca-ui" -> "alpersonalwebsite/learn-node.js"
"deca-org/deca-ui" -> "aurora-is-near/evm2near"
"deca-org/deca-ui" -> "alpersonalwebsite/learn-typescript"
"deca-org/deca-ui" -> "rog0978/powerwall_display"
"deca-org/deca-ui" -> "CamilleMo/command_recall"
"deca-org/deca-ui" -> "YunaBraska/git-info-action"
"deca-org/deca-ui" -> "YunaBraska/java-info-action"
"deca-org/deca-ui" -> "wednesday-solutions/react-graphql-ts-template"
"deca-org/deca-ui" -> "nosana-ci/nosana-programs"
"aurora-is-near/evm2near" -> "alpersonalwebsite/learn-node.js"
"aurora-is-near/evm2near" -> "rog0978/powerwall_display"
"aurora-is-near/evm2near" -> "alpersonalwebsite/learn-typescript"
"aurora-is-near/evm2near" -> "CamilleMo/command_recall"
"bisno/WDRO" -> "alpersonalwebsite/learn-node.js"
"bisno/WDRO" -> "aurora-is-near/evm2near"
"bisno/WDRO" -> "rog0978/powerwall_display"
"bisno/WDRO" -> "FixedPointIO/Artemis"
"bisno/WDRO" -> "rynmon/malScraper"
"bisno/WDRO" -> "alpersonalwebsite/learn-typescript"
"bisno/WDRO" -> "TheOneStudioLLC/Mac-Recorder"
"bisno/WDRO" -> "xames3/nanotorch"
"bisno/WDRO" -> "CamilleMo/command_recall"
"bisno/WDRO" -> "superinsight/superinsight-db"
"add2cal/add-to-calendar-button-react" -> "alpersonalwebsite/learn-node.js"
"add2cal/add-to-calendar-button-react" -> "YunaBraska/java-info-action"
"add2cal/add-to-calendar-button-react" -> "rog0978/powerwall_display"
"add2cal/add-to-calendar-button-react" -> "CamilleMo/command_recall"
"add2cal/add-to-calendar-button-react" -> "aurora-is-near/evm2near"
"add2cal/add-to-calendar-button-react" -> "YunaBraska/git-info-action"
"add2cal/add-to-calendar-button-react" -> "alpersonalwebsite/learn-typescript"
"robot-bulls/automated_tiktok_video_creation" -> "alpersonalwebsite/learn-node.js"
"robot-bulls/automated_tiktok_video_creation" -> "aurora-is-near/evm2near"
"robot-bulls/automated_tiktok_video_creation" -> "rog0978/powerwall_display"
"robot-bulls/automated_tiktok_video_creation" -> "alpersonalwebsite/learn-typescript"
"robot-bulls/automated_tiktok_video_creation" -> "CamilleMo/command_recall"
"robot-bulls/automated_tiktok_video_creation" -> "YunaBraska/git-info-action"
"robot-bulls/automated_tiktok_video_creation" -> "YunaBraska/java-info-action"
"robot-bulls/automated_tiktok_video_creation" -> "deca-org/deca-ui"
"robot-bulls/automated_tiktok_video_creation" -> "nosana-ci/nosana-programs"
"robot-bulls/automated_tiktok_video_creation" -> "wednesday-solutions/react-graphql-ts-template"
"robot-bulls/automated_tiktok_video_creation" -> "superinsight/superinsight-db"
"robot-bulls/automated_tiktok_video_creation" -> "wednesday-solutions/go-template"
"robot-bulls/automated_tiktok_video_creation" -> "aretecode/system-design-templates-excalidraw"
"robot-bulls/automated_tiktok_video_creation" -> "wednesday-solutions/node-mongo-express"
"robot-bulls/automated_tiktok_video_creation" -> "lifinance/widget"
"superinsight/superinsight-db" -> "alpersonalwebsite/learn-node.js"
"superinsight/superinsight-db" -> "aurora-is-near/evm2near"
"superinsight/superinsight-db" -> "rog0978/powerwall_display"
"superinsight/superinsight-db" -> "alpersonalwebsite/learn-typescript"
"gianlucajahn/macOS-react" -> "alpersonalwebsite/learn-node.js"
"gianlucajahn/macOS-react" -> "aurora-is-near/evm2near"
"gianlucajahn/macOS-react" -> "rog0978/powerwall_display"
"gianlucajahn/macOS-react" -> "CamilleMo/command_recall"
"gianlucajahn/macOS-react" -> "alpersonalwebsite/learn-typescript"
"gianlucajahn/macOS-react" -> "nosana-ci/nosana-programs"
"gianlucajahn/macOS-react" -> "wednesday-solutions/go-template"
"gianlucajahn/macOS-react" -> "YunaBraska/git-info-action"
"gianlucajahn/macOS-react" -> "wednesday-solutions/react-graphql-ts-template"
"gianlucajahn/macOS-react" -> "YunaBraska/java-info-action"
"gianlucajahn/macOS-react" -> "Muvon/yoda"
"gianlucajahn/macOS-react" -> "deca-org/deca-ui"
"gianlucajahn/macOS-react" -> "superinsight/superinsight-db"
"gianlucajahn/macOS-react" -> "shlomnissan/express-client"
"gianlucajahn/macOS-react" -> "aretecode/system-design-templates-excalidraw"
"Lissy93/my-website" -> "wednesday-solutions/react-graphql-ts-template"
"Lissy93/my-website" -> "rog0978/powerwall_display"
"Lissy93/my-website" -> "alpersonalwebsite/learn-node.js"
"Lissy93/my-website" -> "alpersonalwebsite/learn-typescript"
"Lissy93/my-website" -> "boxfish-studio/sugar-rush"
"Lissy93/my-website" -> "YunaBraska/git-info-action"
"Lissy93/my-website" -> "aurora-is-near/evm2near"
"Lissy93/my-website" -> "CamilleMo/command_recall"
"Lissy93/my-website" -> "deca-org/deca-ui"
"Lissy93/my-website" -> "wednesday-solutions/go-template"
"Lissy93/my-website" -> "YunaBraska/java-info-action"
"Lissy93/my-website" -> "nosana-ci/nosana-programs"
"Lissy93/my-website" -> "amadotejada/GAMpass"
"Lissy93/my-website" -> "oqyh/Game-Manager"
"Lissy93/my-website" -> "trunk-io/plugins"
"timestored/pulseui" -> "alpersonalwebsite/learn-typescript"
"timestored/pulseui" -> "CamilleMo/command_recall"
"timestored/pulseui" -> "YunaBraska/java-info-action"
"timestored/pulseui" -> "YunaBraska/git-info-action"
"timestored/pulseui" -> "aurora-is-near/evm2near"
"timestored/pulseui" -> "brodo/json_env"
"timestored/pulseui" -> "alpersonalwebsite/learn-node.js"
"timestored/pulseui" -> "deca-org/deca-ui"
"timestored/pulseui" -> "rog0978/powerwall_display"
"timestored/pulseui" -> "wednesday-solutions/react-graphql-ts-template"
"timestored/pulseui" -> "nosana-ci/nosana-programs"
"timestored/pulseui" -> "aretecode/awesome-advice"
"timestored/pulseui" -> "caomuqing/neptune"
"timestored/pulseui" -> "wednesday-solutions/go-template"
"timestored/pulseui" -> "wednesday-solutions/node-mongo-express"
"Pythagora-io/pythagora" -> "puffinsoft/jscanify" ["e"=1]
"Pythagora-io/pythagora" -> "chinchang/screenlog.js" ["e"=1]
"Pythagora-io/pythagora" -> "Hexagon/croner" ["e"=1]
"Pythagora-io/pythagora" -> "Pythagora-io/gpt-pilot"
"Pythagora-io/pythagora" -> "irgolic/AutoPR" ["e"=1]
"Pythagora-io/pythagora" -> "stack-auth/pgmock" ["e"=1]
"Pythagora-io/pythagora" -> "NangoHQ/nango" ["e"=1]
"Pythagora-io/pythagora" -> "hymhub/css-to-tailwind" ["e"=1]
"Pythagora-io/pythagora" -> "ntegrals/aura-voice"
"Pythagora-io/pythagora" -> "goldbergyoni/nodejs-testing-best-practices" ["e"=1]
"Pythagora-io/pythagora" -> "semanser/codel"
"Pythagora-io/pythagora" -> "Pythagora-io/codebase-chat"
"Pythagora-io/pythagora" -> "livekit/agents"
"Pythagora-io/pythagora" -> "betwixt-labs/tempo" ["e"=1]
"Pythagora-io/pythagora" -> "patched-codes/patchwork" ["e"=1]
"Boeing/config-file-validator" -> "cryptohub-agency/smart_contract_audits"
"Boeing/config-file-validator" -> "mtabanja/mtabanja"
"Boeing/config-file-validator" -> "nickokss/jumper"
"Boeing/config-file-validator" -> "paulpanwang/Gen6DNeRF"
"Boeing/config-file-validator" -> "AlexTeslenko/leetcode"
"Boeing/config-file-validator" -> "Isalia20/quad-iou-torch"
"Boeing/config-file-validator" -> "defi-school/Babylon-check-and-delegate"
"Boeing/config-file-validator" -> "CerberusChaos/Starknet-Dapp-Template"
"Boeing/config-file-validator" -> "amityalwar/snoofus"
"Boeing/config-file-validator" -> "sivakumar-mahalingam/DSA"
"Boeing/config-file-validator" -> "Theneo-Inc/api-documentation"
"Boeing/config-file-validator" -> "greydoubt/m77"
"Boeing/config-file-validator" -> "UPay-USDT/USDT-Payment-Gateway"
"Boeing/config-file-validator" -> "CodeFromAnywhere/ActionSchema"
"Boeing/config-file-validator" -> "augustovriyan/solana-token-snipers"
"catppuccin/home-assistant" -> "Kibibit/hass-kibibit-theme" ["e"=1]
"catppuccin/home-assistant" -> "TilmanGriesel/graphite"
"trunk-io/plugins" -> "rog0978/powerwall_display"
"trunk-io/plugins" -> "alpersonalwebsite/learn-typescript"
"trunk-io/plugins" -> "alpersonalwebsite/learn-node.js"
"trunk-io/plugins" -> "aurora-is-near/evm2near"
"trunk-io/plugins" -> "CamilleMo/command_recall"
"trunk-io/plugins" -> "YunaBraska/java-info-action"
"trunk-io/plugins" -> "wednesday-solutions/react-graphql-ts-template"
"trunk-io/plugins" -> "YunaBraska/git-info-action"
"trunk-io/plugins" -> "nosana-ci/nosana-programs"
"trunk-io/plugins" -> "deca-org/deca-ui"
"trunk-io/plugins" -> "wednesday-solutions/go-template"
"trunk-io/plugins" -> "boxfish-studio/sugar-rush"
"trunk-io/plugins" -> "superinsight/superinsight-db"
"trunk-io/plugins" -> "aretecode/system-design-templates-excalidraw"
"trunk-io/plugins" -> "wednesday-solutions/node-mongo-express"
"vaerohq/vaero" -> "alpersonalwebsite/learn-node.js"
"vaerohq/vaero" -> "aurora-is-near/evm2near"
"vaerohq/vaero" -> "YunaBraska/java-info-action"
"vaerohq/vaero" -> "CamilleMo/command_recall"
"vaerohq/vaero" -> "YunaBraska/git-info-action"
"vaerohq/vaero" -> "alpersonalwebsite/learn-typescript"
"vaerohq/vaero" -> "rog0978/powerwall_display"
"vaerohq/vaero" -> "deca-org/deca-ui"
"daveshap/raven" -> "daveshap/LongtermChatExternalSources"
"daveshap/raven" -> "daveshap/PineconeInfiniteMemoryChatbot"
"daveshap/raven" -> "daveshap/REMO_Framework"
"daveshap/raven" -> "daveshap/NaturalLanguageCognitiveArchitecture"
"daveshap/raven" -> "daveshap/ATOM_Framework"
"daveshap/raven" -> "daveshap/AI_Tools_and_Papers"
"daveshap/raven" -> "daveshap/PythonGPT3Tutorial"
"daveshap/raven" -> "daveshap/ACE_Framework"
"daveshap/raven" -> "DataBassGit/AgentForge" ["e"=1]
"daveshap/raven" -> "daveshap/RecursiveSummarizer"
"daveshap/raven" -> "daveshap/HeuristicImperatives"
"daveshap/raven" -> "daveshap/SparsePrimingRepresentations"
"daveshap/raven" -> "daveshap/ChatGPT_API_Salience"
"daveshap/raven" -> "daveshap/ChatGPT_Custom_Instructions"
"daveshap/raven" -> "daveshap/Document_Scraping"
"visheratin/web-ai" -> "tantaraio/voy"
"visheratin/web-ai" -> "visheratin/ai-photo-sorter"
"visheratin/web-ai" -> "praeclarum/transformers-js"
"visheratin/web-ai" -> "webonnx/wonnx" ["e"=1]
"visheratin/web-ai" -> "praeclarum/web-transformers"
"visheratin/web-ai" -> "FL33TW00D/laserbeak" ["e"=1]
"visheratin/web-ai" -> "rhashimoto/wa-sqlite" ["e"=1]
"CompendiumFi/PENDAX-SDK" -> "CamilleMo/command_recall"
"CompendiumFi/PENDAX-SDK" -> "alpersonalwebsite/learn-typescript"
"PiotrNawrot/dynamic-pooling" -> "PiotrNawrot/nano-sparse-attention"
"poozlehq/poozle" -> "trytrench/trench"
"poozlehq/poozle" -> "automorphic-ai/aegis"
"poozlehq/poozle" -> "redotvideo/haven"
"poozlehq/poozle" -> "Skyvern-AI/wyvern"
"poozlehq/poozle" -> "quack-ai/companion-vscode"
"poozlehq/poozle" -> "briefercloud/ergomake"
"poozlehq/poozle" -> "artie-labs/transfer"
"poozlehq/poozle" -> "Trainy-ai/llm-atc"
"poozlehq/poozle" -> "empower-ai/dsensei"
"poozlehq/poozle" -> "cedana/cedana-cli"
"poozlehq/poozle" -> "xeol-io/xeol"
"poozlehq/poozle" -> "OpenPipe/OpenPipe"
"poozlehq/poozle" -> "axflow/axflow"
"poozlehq/poozle" -> "tegonhq/tegon" ["e"=1]
"poozlehq/poozle" -> "cedana/cedana"
"artie-labs/transfer" -> "PeerDB-io/peerdb" ["e"=1]
"artie-labs/transfer" -> "poozlehq/poozle"
"artie-labs/transfer" -> "automorphic-ai/aegis"
"artie-labs/transfer" -> "quack-ai/companion-vscode"
"artie-labs/transfer" -> "empower-ai/dsensei"
"artie-labs/transfer" -> "trytrench/trench"
"artie-labs/transfer" -> "artie-labs/reader"
"artie-labs/transfer" -> "Skyvern-AI/wyvern"
"artie-labs/transfer" -> "Trainy-ai/llm-atc"
"artie-labs/transfer" -> "xeol-io/xeol"
"artie-labs/transfer" -> "CambioML/pykoi-rlhf-finetuned-transformers"
"artie-labs/transfer" -> "redotvideo/haven"
"artie-labs/transfer" -> "axflow/axflow"
"artie-labs/transfer" -> "apoxy-dev/proximal"
"artie-labs/transfer" -> "Serra-Technologies/serra"
"enclaver-io/enclaver" -> "usecakework/cakework"
"enclaver-io/enclaver" -> "map3xyz/supercharge"
"enclaver-io/enclaver" -> "gotrade94/angel-sdk"
"enclaver-io/enclaver" -> "noya-app/noya"
"fixie-ai/fixie-sdk-js" -> "fixie-ai/fixie-examples"
"groq/groqflow" -> "groq/mlagility"
"groq/groqflow" -> "groq/deployment"
"bitloops/bitloops-language" -> "rog0978/powerwall_display"
"bitloops/bitloops-language" -> "aurora-is-near/evm2near"
"bitloops/bitloops-language" -> "alpersonalwebsite/learn-typescript"
"bitloops/bitloops-language" -> "alpersonalwebsite/learn-node.js"
"bitloops/bitloops-language" -> "YunaBraska/java-info-action"
"bitloops/bitloops-language" -> "YunaBraska/git-info-action"
"bitloops/bitloops-language" -> "nosana-ci/nosana-programs"
"bitloops/bitloops-language" -> "aretecode/system-design-templates-excalidraw"
"bitloops/bitloops-language" -> "wednesday-solutions/react-graphql-ts-template"
"bitloops/bitloops-language" -> "CamilleMo/command_recall"
"bitloops/bitloops-language" -> "deca-org/deca-ui"
"bitloops/bitloops-language" -> "superinsight/superinsight-db"
"bitloops/bitloops-language" -> "wednesday-solutions/go-template"
"bitloops/bitloops-language" -> "robot-bulls/automated_tiktok_video_creation"
"bitloops/bitloops-language" -> "lifinance/widget"
"0xacx/chatGPT-shell-cli" -> "kharvd/gpt-cli"
"0xacx/chatGPT-shell-cli" -> "marcolardera/chatgpt-cli"
"0xacx/chatGPT-shell-cli" -> "TheR1D/shell_gpt"
"0xacx/chatGPT-shell-cli" -> "aandrew-me/tgpt"
"0xacx/chatGPT-shell-cli" -> "kardolus/chatgpt-cli"
"0xacx/chatGPT-shell-cli" -> "jucasoliveira/terminalGPT"
"0xacx/chatGPT-shell-cli" -> "sigoden/aichat"
"0xacx/chatGPT-shell-cli" -> "jackMort/ChatGPT.nvim" ["e"=1]
"0xacx/chatGPT-shell-cli" -> "dfinke/PowerShellAI" ["e"=1]
"0xacx/chatGPT-shell-cli" -> "npiv/chatblade" ["e"=1]
"0xacx/chatGPT-shell-cli" -> "tbckr/sgpt"
"0xacx/chatGPT-shell-cli" -> "j178/chatgpt" ["e"=1]
"0xacx/chatGPT-shell-cli" -> "CristiVlad25/gpt-cli"
"0xacx/chatGPT-shell-cli" -> "darrenburns/elia" ["e"=1]
"0xacx/chatGPT-shell-cli" -> "AineeJames/ChatGPTerminator"
"Azure-Samples/qdrant-azure" -> "qdrant/qdrant-spark"
"kubestellar/kubestellar" -> "kubestellar/ui"
"kubestellar/kubestellar" -> "kubestellar/kubeflex"
"kubestellar/kubestellar" -> "project-codeflare/codeflare"
"kubestellar/kubestellar" -> "iter8-tools/iter8"
"tableflowhq/csv-import" -> "enrolla/enrolla"
"tableflowhq/csv-import" -> "map3xyz/supercharge"
"tableflowhq/csv-import" -> "traceloop/jest-opentelemetry"
"tableflowhq/csv-import" -> "magicpatterns/catalog"
"tableflowhq/csv-import" -> "fern-api/fern"
"tableflowhq/csv-import" -> "usecakework/cakework"
"tableflowhq/csv-import" -> "finic-ai/finic"
"tableflowhq/csv-import" -> "swishjam/swishjam"
"tableflowhq/csv-import" -> "thebabylonai/babylog"
"tableflowhq/csv-import" -> "outerbase/ezql"
"tableflowhq/csv-import" -> "NangoHQ/nango" ["e"=1]
"tableflowhq/csv-import" -> "hydradatabase/columnar" ["e"=1]
"tableflowhq/csv-import" -> "vaerohq/vaero"
"tableflowhq/csv-import" -> "matanolabs/matano"
"tableflowhq/csv-import" -> "uptrain-ai/uptrain"
"usecakework/cakework" -> "map3xyz/supercharge"
"usecakework/cakework" -> "gotrade94/angel-sdk"
"usecakework/cakework" -> "enclaver-io/enclaver"
"usecakework/cakework" -> "thebabylonai/babylog"
"usecakework/cakework" -> "noya-app/noya"
"usecakework/cakework" -> "enrolla/enrolla"
"usecakework/cakework" -> "FrigadeHQ/react-native-onboard"
"usecakework/cakework" -> "Left-on-Read/leftonread"
"usecakework/cakework" -> "outerbase/ezql"
"usecakework/cakework" -> "vaerohq/vaero"
"usecakework/cakework" -> "swishjam/swishjam"
"daveshap/PythonGPT3Tutorial" -> "daveshap/ResumeBuilderGpt3"
"daveshap/PythonGPT3Tutorial" -> "daveshap/GPT3_Finetunes"
"daveshap/PythonGPT3Tutorial" -> "daveshap/Document_Scraping"
"daveshap/PythonGPT3Tutorial" -> "daveshap/FinetuningTutorial"
"daveshap/PythonGPT3Tutorial" -> "daveshap/Recreate_ChatGPT"
"daveshap/PythonGPT3Tutorial" -> "daveshap/GPT3_ResearchAssistant"
"daveshap/PythonGPT3Tutorial" -> "daveshap/PerfectEmailGenerator"
"daveshap/PythonGPT3Tutorial" -> "daveshap/TutorChatbot"
"daveshap/PythonGPT3Tutorial" -> "daveshap/CoverLetterGenerator"
"daveshap/PythonGPT3Tutorial" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/PythonGPT3Tutorial" -> "daveshap/GPT3_CriticalArgument"
"daveshap/PythonGPT3Tutorial" -> "daveshap/DiversePerspectives"
"daveshap/PythonGPT3Tutorial" -> "daveshap/MultiDocumentAnswering"
"daveshap/PythonGPT3Tutorial" -> "daveshap/PlotGenerator"
"oslabs-beta/DataDoc" -> "oslabs-beta/KafkaCompass"
"oslabs-beta/DataDoc" -> "oslabs-beta/QLache"
"happy-machine/FastQL" -> "oslabs-beta/Knight-Owl-Display"
"happy-machine/FastQL" -> "alpersonalwebsite/learn-node.js"
"happy-machine/FastQL" -> "henneberger/typekin"
"happy-machine/FastQL" -> "rog0978/powerwall_display"
"happy-machine/FastQL" -> "alpersonalwebsite/learn-typescript"
"happy-machine/FastQL" -> "CamilleMo/command_recall"
"happy-machine/FastQL" -> "wednesday-solutions/react-graphql-ts-template"
"happy-machine/FastQL" -> "aurora-is-near/evm2near"
"happy-machine/FastQL" -> "YunaBraska/java-info-action"
"happy-machine/FastQL" -> "oslabs-beta/KnightOwl" ["e"=1]
"happy-machine/FastQL" -> "YunaBraska/git-info-action"
"happy-machine/FastQL" -> "Raggaer/faceless-bytecode"
"happy-machine/FastQL" -> "wednesday-solutions/go-template"
"daveshap/RAVEN_MVP_Public" -> "daveshap/Raven_MVP"
"daveshap/RAVEN_MVP_Public" -> "daveshap/RavenAGI"
"daveshap/SymphonyOfThought" -> "daveshap/BenevolentByDesign"
"daveshap/SymphonyOfThought" -> "daveshap/NaturalLanguageCognitiveArchitecture"
"daveshap/SceneSimulation" -> "daveshap/CharacterSimulation"
"daveshap/SceneSimulation" -> "daveshap/PlotGenerator"
"daveshap/CharacterSimulation" -> "daveshap/SceneSimulation"
"daveshap/CharacterSimulation" -> "daveshap/PlotGenerator"
"daveshap/CharacterSimulation" -> "daveshap/GPT3_CriticalArgument"
"daveshap/SynopsisGenerator" -> "daveshap/PlotGenerator"
"daveshap/SynopsisGenerator" -> "daveshap/SceneSimulation"
"daveshap/SynopsisGenerator" -> "daveshap/CharacterSimulation"
"daveshap/PlotGenerator" -> "daveshap/CharacterSimulation"
"daveshap/PlotGenerator" -> "daveshap/SynopsisGenerator"
"daveshap/PlotGenerator" -> "daveshap/SceneSimulation"
"daveshap/DiversePerspectives" -> "daveshap/JobMatching"
"daveshap/DiversePerspectives" -> "daveshap/SceneSimulation"
"daveshap/DiversePerspectives" -> "daveshap/PlotGenerator"
"daveshap/Document_Scraping" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/Document_Scraping" -> "daveshap/DiversePerspectives"
"daveshap/Document_Scraping" -> "daveshap/ResumeBuilderGpt3"
"daveshap/Document_Scraping" -> "daveshap/SCOTUS_GPT3_Opinions"
"daveshap/Document_Scraping" -> "daveshap/Recreate_ChatGPT"
"daveshap/Document_Scraping" -> "daveshap/PythonGPT3Tutorial"
"daveshap/Document_Scraping" -> "daveshap/FinetuningTutorial"
"daveshap/Recreate_ChatGPT" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/Recreate_ChatGPT" -> "daveshap/TwentyQuestions"
"daveshap/PDF_OCR_ChatGPT_Investigation" -> "daveshap/Recreate_ChatGPT"
"daveshap/PDF_OCR_ChatGPT_Investigation" -> "daveshap/DiversePerspectives"
"daveshap/PDF_OCR_ChatGPT_Investigation" -> "daveshap/JobMatching"
"daveshap/PDF_OCR_ChatGPT_Investigation" -> "daveshap/Document_Scraping"
"daveshap/Postnihilism" -> "daveshap/Successor_Species"
"daveshap/Postnihilism" -> "daveshap/Grand_Struggle_Great_Mystery"
"daveshap/Postnihilism" -> "daveshap/PostLaborEconomics"
"daveshap/Postnihilism" -> "daveshap/Narratives_Emergence_Convergence"
"daveshap/Postnihilism" -> "daveshap/PlotGenerator"
"gianlucajahn/typescript-reddit-clone" -> "Muvon/yoda"
"gianlucajahn/typescript-reddit-clone" -> "alpersonalwebsite/learn-node.js"
"daveshap/ResumeBuilderGpt3" -> "daveshap/DiversePerspectives"
"daveshap/ResumeBuilderGpt3" -> "daveshap/Document_Scraping"
"daveshap/ResumeBuilderGpt3" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/ResumeBuilderGpt3" -> "daveshap/Recreate_ChatGPT"
"daveshap/ResumeBuilderGpt3" -> "daveshap/PythonGPT3Tutorial"
"daveshap/ResumeBuilderGpt3" -> "daveshap/PlotGenerator"
"oslabs-beta/Zukeeper" -> "oslabs-beta/Caribu"
"oslabs-beta/Zukeeper" -> "RediseeLabs/redisee"
"oslabs-beta/Zukeeper" -> "oslabs-beta/Aionic"
"oslabs-beta/Zukeeper" -> "oslabs-beta/Splache"
"oslabs-beta/Zukeeper" -> "oslabs-beta/kubehawk"
"oslabs-beta/Zukeeper" -> "oslabs-beta/NetPulse"
"oslabs-beta/Zukeeper" -> "oslabs-beta/RemixDJ"
"oslabs-beta/Zukeeper" -> "oslabs-beta/CloudShift"
"oslabs-beta/Zukeeper" -> "oslabs-beta/stitch"
"oslabs-beta/Zukeeper" -> "oslabs-beta/solid-query-devkit"
"oslabs-beta/Zukeeper" -> "oslabs-beta/DataDoc"
"oslabs-beta/Zukeeper" -> "oslabs-beta/KafkaCompass"
"oslabs-beta/Zukeeper" -> "oslabs-beta/solid-rewind"
"oslabs-beta/Zukeeper" -> "oslabs-beta/nimbus"
"oslabs-beta/Zukeeper" -> "oslabs-beta/QLache"
"CodeGeeX/codegeex-vscode-extension" -> "CodeGeeX/codegeex-fastertransformer"
"CodeGeeX/codegeex-vscode-extension" -> "mengjian-github/copilot-analysis-new"
"finic-ai/finic" -> "tableflowhq/csv-import"
"finic-ai/finic" -> "magicpatterns/catalog"
"finic-ai/finic" -> "map3xyz/supercharge"
"finic-ai/finic" -> "usecakework/cakework"
"finic-ai/finic" -> "finic-ai/rag-stack" ["e"=1]
"finic-ai/finic" -> "getzep/zep"
"finic-ai/finic" -> "getmetal/motorhead"
"finic-ai/finic" -> "fern-api/fern"
"finic-ai/finic" -> "hegelai/prompttools"
"finic-ai/finic" -> "vocodedev/vocode-core"
"finic-ai/finic" -> "athina-ai/athina-sdk"
"finic-ai/finic" -> "thebabylonai/babylog"
"finic-ai/finic" -> "homanp/langchain-ui" ["e"=1]
"finic-ai/finic" -> "matanolabs/matano"
"finic-ai/finic" -> "enrolla/enrolla"
"Ox29DC/Crypto-Drainer" -> "henneberger/typekin"
"Ox29DC/Crypto-Drainer" -> "yyeunggg/TelloPy"
"online-ml/watermill.rs" -> "MehdiZouitine/gym_ma_toy"
"online-ml/watermill.rs" -> "AdilZouitine/outfit"
"Unstructured-IO/unstructured-inference" -> "Unstructured-IO/community"
"Unstructured-IO/unstructured-inference" -> "Unstructured-IO/unstructured-api-tools"
"Unstructured-IO/unstructured-inference" -> "Unstructured-IO/pipeline-sec-filings"
"NangoHQ/nango-sync" -> "enrolla/enrolla"
"NangoHQ/nango-sync" -> "Helicone/valyr"
"NangoHQ/nango-sync" -> "triggerdotdev/apihero" ["e"=1]
"NangoHQ/nango-sync" -> "map3xyz/supercharge"
"NangoHQ/nango-sync" -> "outerbase/ezql"
"NangoHQ/nango-sync" -> "stitchfix/hamilton"
"NangoHQ/nango-sync" -> "thebabylonai/babylog"
"NangoHQ/nango-sync" -> "vaerohq/vaero"
"NangoHQ/nango-sync" -> "traceloop/jest-opentelemetry"
"NangoHQ/nango-sync" -> "Left-on-Read/leftonread"
"NangoHQ/nango-sync" -> "usecakework/cakework"
"NangoHQ/nango-sync" -> "FrigadeHQ/react-native-onboard"
"brilliantlabsAR/monocle-micropython" -> "brilliantlabsAR/monocle-fpga"
"brilliantlabsAR/monocle-micropython" -> "brilliantlabsAR/noa-for-ios"
"ariym/whisper-node" -> "ChetanXpro/nodejs-whisper"
"Unstructured-IO/pipeline-sec-filings" -> "Unstructured-IO/unstructured-api-tools"
"Unstructured-IO/pipeline-sec-filings" -> "Unstructured-IO/community"
"Unstructured-IO/pipeline-sec-filings" -> "Unstructured-IO/unstructured-inference"
"oslabs-beta/docker-watch-app" -> "oslabs-beta/KafkaCompass"
"oslabs-beta/docker-watch-app" -> "oslabs-beta/QLache"
"oslabs-beta/docker-watch-app" -> "oslabs-beta/nimbus"
"oslabs-beta/docker-watch-app" -> "oslabs-beta/solid-rewind"
"oslabs-beta/docker-watch-app" -> "oslabs-beta/DataDoc"
"oslabs-beta/docker-watch-app" -> "oslabs-beta/Knight-Owl-Display"
"modal-labs/modal-client" -> "modal-labs/synchronicity"
"modal-labs/modal-client" -> "modal-labs/modal-examples"
"daveshap/LiteratureReviewBot" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/LiteratureReviewBot" -> "daveshap/GPT3_ResearchAssistant"
"daveshap/LiteratureReviewBot" -> "daveshap/DiversePerspectives"
"daveshap/LiteratureReviewBot" -> "daveshap/JobMatching"
"oslabs-beta/QLache" -> "oslabs-beta/nimbus"
"oslabs-beta/QLache" -> "oslabs-beta/KafkaCompass"
"yobulkdev/yobulkdev" -> "tableflowhq/csv-import"
"yobulkdev/yobulkdev" -> "beamworks/react-csv-importer"
"yobulkdev/yobulkdev" -> "enrolla/enrolla"
"coder/code-marketplace" -> "coder/envbuilder"
"coder/code-marketplace" -> "coder/vscode-coder"
"coder/code-marketplace" -> "coder/backstage-plugins"
"coder/code-marketplace" -> "coder/aicommit"
"coder/code-marketplace" -> "coder/retry"
"coder/code-marketplace" -> "matifali/update-coder-template"
"coder/code-marketplace" -> "coder/envbox"
"coder/code-marketplace" -> "coder/modules"
"coder/code-marketplace" -> "coder/coder-logstream-kube"
"coder/code-marketplace" -> "coder/redjet"
"coder/code-marketplace" -> "coder/exectrace"
"coder/code-marketplace" -> "coder/awesome-coder"
"coder/code-marketplace" -> "coder/picopilot"
"coder/code-marketplace" -> "coder/terraform-provider-coderd"
"coder/code-marketplace" -> "ericpaulsen/coder-aks"
"daveshap/MultiDocumentAnswering" -> "daveshap/FinetuningTutorial"
"daveshap/MultiDocumentAnswering" -> "daveshap/PerfectEmailGenerator"
"daveshap/MultiDocumentAnswering" -> "daveshap/RecursiveSummarizer"
"daveshap/MultiDocumentAnswering" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/MultiDocumentAnswering" -> "daveshap/Document_Scraping"
"daveshap/MultiDocumentAnswering" -> "daveshap/GPT3_ResearchAssistant"
"daveshap/MultiDocumentAnswering" -> "daveshap/LiteratureReviewBot"
"daveshap/FinetuningTutorial" -> "daveshap/GPT3_Finetunes"
"daveshap/FinetuningTutorial" -> "daveshap/PerfectEmailGenerator"
"daveshap/FinetuningTutorial" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/FinetuningTutorial" -> "daveshap/MultiDocumentAnswering"
"daveshap/FinetuningTutorial" -> "daveshap/CreativeWritingCoach"
"daveshap/FinetuningTutorial" -> "daveshap/GPT3_ResearchAssistant"
"daveshap/FinetuningTutorial" -> "daveshap/SummarizeCustomerReviews"
"daveshap/FinetuningTutorial" -> "daveshap/TutorChatbot"
"daveshap/FinetuningTutorial" -> "daveshap/PythonGPT3Tutorial"
"daveshap/FinetuningTutorial" -> "daveshap/ResumeBuilderGpt3"
"daveshap/FinetuningTutorial" -> "daveshap/Document_Scraping"
"daveshap/FinetuningTutorial" -> "daveshap/Recreate_ChatGPT"
"daveshap/FinetuningTutorial" -> "daveshap/DalleHelperBot"
"daveshap/PerfectEmailGenerator" -> "daveshap/TutorChatbot"
"daveshap/PerfectEmailGenerator" -> "daveshap/GPT3_CriticalArgument"
"daveshap/PerfectEmailGenerator" -> "daveshap/FinetuningTutorial"
"daveshap/CoverLetterGenerator" -> "daveshap/CharacterSimulation"
"explosion/confection" -> "explosion/catalogue"
"NVIDIA/nim-anywhere" -> "NVIDIA/workbench-example-hybrid-rag"
"NVIDIA/nim-anywhere" -> "NVIDIA/nim-deploy"
"NVIDIA/nim-anywhere" -> "NVIDIA/workbench-example-agentic-rag"
"FrigadeHQ/react-native-onboard" -> "map3xyz/supercharge"
"FrigadeHQ/react-native-onboard" -> "usecakework/cakework"
"FrigadeHQ/react-native-onboard" -> "thebabylonai/babylog"
"FrigadeHQ/react-native-onboard" -> "Left-on-Read/leftonread"
"FrigadeHQ/react-native-onboard" -> "vaerohq/vaero"
"FrigadeHQ/react-native-onboard" -> "enrolla/enrolla"
"FrigadeHQ/react-native-onboard" -> "traceloop/jest-opentelemetry"
"FrigadeHQ/react-native-onboard" -> "fabiustech/openai"
"FrigadeHQ/react-native-onboard" -> "Helicone/valyr"
"FrigadeHQ/react-native-onboard" -> "outerbase/ezql"
"FrigadeHQ/react-native-onboard" -> "rubbrband/rubbrband"
"FrigadeHQ/react-native-onboard" -> "swishjam/swishjam"
"matifali/dockerdl" -> "matifali/coder-templates"
"launchflow/buildflow" -> "map3xyz/supercharge"
"LagLord/Solana-Wallet-Tracker-Crypto-NFT-sales-Discord-Bot" -> "v0idum/solana_tracker_bot"
"daveshap/YouTubeChapterGenerator" -> "daveshap/BSHR_Loop"
"daveshap/YouTubeChapterGenerator" -> "daveshap/Semantic_Embedding_Reverse_Dictionary"
"daveshap/YouTubeChapterGenerator" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/YouTubeChapterGenerator" -> "daveshap/YouTube_Slide_Decks"
"daveshap/YouTubeChapterGenerator" -> "daveshap/Hierarchical_Document_Representation"
"daveshap/YouTubeChapterGenerator" -> "daveshap/latent_space_activation"
"daveshap/YouTubeChapterGenerator" -> "daveshap/ChatGPT_QA_Regenerative_Medicine"
"daveshap/YouTubeChapterGenerator" -> "daveshap/Quickly_Extract_Science_Papers"
"daveshap/YouTubeChapterGenerator" -> "daveshap/PineconeInfiniteMemoryChatbot"
"BeastByteAI/falcon" -> "BeastByteAI/agent_dingo"
"BeastByteAI/falcon" -> "BeastByteAI/firefly"
"thebabylonai/babylog" -> "map3xyz/supercharge"
"thebabylonai/babylog" -> "usecakework/cakework"
"thebabylonai/babylog" -> "Left-on-Read/leftonread"
"thebabylonai/babylog" -> "enrolla/enrolla"
"thebabylonai/babylog" -> "vaerohq/vaero"
"thebabylonai/babylog" -> "FrigadeHQ/react-native-onboard"
"thebabylonai/babylog" -> "swishjam/swishjam"
"thebabylonai/babylog" -> "outerbase/ezql"
"thebabylonai/babylog" -> "traceloop/jest-opentelemetry"
"thebabylonai/babylog" -> "fabiustech/openai"
"thebabylonai/babylog" -> "athina-ai/athina-sdk"
"thebabylonai/babylog" -> "rubbrband/rubbrband"
"thebabylonai/babylog" -> "invopop/gobl"
"UdaraJay/_stats" -> "UdaraJay/atm"
"useVenice/venice" -> "outerbase/ezql"
"useVenice/venice" -> "usecakework/cakework"
"useVenice/venice" -> "traceloop/jest-opentelemetry"
"useVenice/venice" -> "swishjam/swishjam"
"useVenice/venice" -> "map3xyz/supercharge"
"map3xyz/supercharge" -> "usecakework/cakework"
"map3xyz/supercharge" -> "thebabylonai/babylog"
"map3xyz/supercharge" -> "gotrade94/angel-sdk"
"map3xyz/supercharge" -> "noya-app/noya"
"map3xyz/supercharge" -> "swishjam/swishjam"
"map3xyz/supercharge" -> "enrolla/enrolla"
"map3xyz/supercharge" -> "vaerohq/vaero"
"map3xyz/supercharge" -> "enclaver-io/enclaver"
"map3xyz/supercharge" -> "FrigadeHQ/react-native-onboard"
"map3xyz/supercharge" -> "Left-on-Read/leftonread"
"map3xyz/supercharge" -> "outerbase/ezql"
"map3xyz/supercharge" -> "traceloop/jest-opentelemetry"
"bokito-studio/poetry-camera-rpi" -> "sam1am/poetroid"
"tursodatabase/turso-cli" -> "tursodatabase/libsql-client-go"
"tursodatabase/turso-cli" -> "tursodatabase/awesome-turso"
"tursodatabase/turso-cli" -> "tursodatabase/go-libsql"
"tursodatabase/turso-cli" -> "tursodatabase/turso-docs"
"coder/awesome-coder" -> "sharkymark/v2-templates"
"coder/awesome-coder" -> "coder/modules"
"coder/awesome-coder" -> "matifali/update-coder-template"
"coder/awesome-coder" -> "coder/exectrace"
"coder/awesome-coder" -> "coder/webinars"
"coder/awesome-coder" -> "coder/packages"
"coder/awesome-coder" -> "coder/retry"
"coder/awesome-coder" -> "uwu/basic-env"
"daveshap/HeuristicImperatives" -> "daveshap/ATOM_Framework"
"daveshap/HeuristicImperatives" -> "daveshap/Functional_Sentience"
"daveshap/HeuristicImperatives" -> "daveshap/RLHI"
"daveshap/HeuristicImperatives" -> "daveshap/HierarchicalMemoryConsolidationSystem"
"daveshap/HeuristicImperatives" -> "daveshap/Epistemic-Pragmatic_Orthogonality"
"daveshap/HeuristicImperatives" -> "daveshap/REMO_Framework"
"daveshap/HeuristicImperatives" -> "daveshap/ACE_L1_Aspiration"
"daveshap/HeuristicImperatives" -> "daveshap/Reflective_Journaling_Tool"
"daveshap/HeuristicImperatives" -> "daveshap/Postnihilism"
"daveshap/HeuristicImperatives" -> "daveshap/ImpliedCognition"
"daveshap/HeuristicImperatives" -> "daveshap/Benevolent_AGI"
"ibm-ecosystem-engineering/Watson-NLP" -> "ibm-self-serve-assets/SuperKnowa"
"hfaran/slack2html" -> "hfaran/slack-auto-export"
"Unstructured-IO/unstructured-api-tools" -> "Unstructured-IO/community"
"DS4SD/deepsearch-examples" -> "DS4SD/deepsearch-toolkit"
"DS4SD/deepsearch-examples" -> "DS4SD/deepsearch-glm"
"DS4SD/deepsearch-examples" -> "docling-project/docling-core"
"saschaschramm/github-copilot" -> "thakkarparth007/copilot-explorer"
"daveshap/JobMatching" -> "daveshap/SummarizeCustomerReviews"
"ElliotG/coder-oss-tf" -> "coder/coder-logstream-kube"
"ElliotG/coder-oss-tf" -> "matifali/update-coder-template"
"daveshap/AutoMuseBlogger" -> "daveshap/DiversePerspectives"
"weaviate/weaviate-podcast-search" -> "weaviate/arXiv-demo-dataset"
"sharkymark/v2-templates" -> "coder/awesome-coder"
"sharkymark/v2-templates" -> "coder/modules"
"sharkymark/v2-templates" -> "bpmct/coder-templates"
"sharkymark/v2-templates" -> "coder/envbox"
"sharkymark/v2-templates" -> "matifali/coder-templates"
"sharkymark/v2-templates" -> "coder/coder-logstream-kube"
"sharkymark/v2-templates" -> "matifali/update-coder-template"
"sharkymark/v2-templates" -> "coder/envbuilder"
"FSoft-AI4Code/TheVault" -> "FSoft-AI4Code/RepoExec"
"FSoft-AI4Code/TheVault" -> "FSoft-AI4Code/SRank-CodeRanker"
"FSoft-AI4Code/TheVault" -> "FSoft-AI4Code/CodeCapybara"
"FSoft-AI4Code/TheVault" -> "FSoft-AI4Code/CodeText-parser"
"FSoft-AI4Code/TheVault" -> "FSoft-AI4Code/DocChecker"
"matifali/update-coder-template" -> "coder/coder-logstream-kube"
"matifali/update-coder-template" -> "ericpaulsen/coder-aks"
"matifali/update-coder-template" -> "coder/serpent"
"coder/vscode-coder" -> "coder/envbuilder"
"coder/vscode-coder" -> "coder/envbox"
"coder/vscode-coder" -> "coder/labeler"
"coder/vscode-coder" -> "coder/webinars"
"coder/vscode-coder" -> "coder/coder-logstream-kube"
"coder/vscode-coder" -> "coder/jetbrains-coder"
"coder/vscode-coder" -> "coder/backstage-plugins"
"HumeAI/hume-python-sdk" -> "HumeAI/hume-api-examples"
"HumeAI/hume-python-sdk" -> "HumeAI/competitions"
"retail-ai-inc/beanq" -> "retail-ai-inc/bean"
"FSoft-AI4Code/CodeText-parser" -> "FSoft-AI4Code/RepoExec"
"FSoft-AI4Code/CodeText-parser" -> "FSoft-AI4Code/DocChecker"
"Raggaer/faceless-bytecode" -> "DeFiMasterd/PancakeX-ASTRA-AVAX-Sniping-Bot"
"DeFiMasterd/PancakeX-ASTRA-AVAX-Sniping-Bot" -> "Raggaer/faceless-bytecode"
"lifinance/create3-factory" -> "lifinance/lifi-contract-types"
"lifinance/create3-factory" -> "lifinance/types"
"lifinance/create3-factory" -> "lifinance/sdk-node-sample"
"apache/openwhisk-client-js" -> "apache/openwhisk-client-go"
"apache/openwhisk-client-js" -> "ibm-functions/shell"
"apache/openwhisk-client-js" -> "apache/openwhisk-debugger"
"apache/openwhisk-client-js" -> "ibmets/node-red-node-openwhisk"
"TeleportDAO/audits" -> "TeleportDAO/liquality-swap-provider"
"TeleportDAO/audits" -> "TeleportDAO/classic-bls12-382"
"TeleportDAO/audits" -> "TeleportDAO/bls12-381"
"daveshap/SummarizeCustomerReviews" -> "daveshap/JobMatching"
"AntonOsika/gpt-engineer" -> "FoundationAgents/MetaGPT"
"AntonOsika/gpt-engineer" -> "Significant-Gravitas/AutoGPT"
"AntonOsika/gpt-engineer" -> "OpenInterpreter/open-interpreter"
"AntonOsika/gpt-engineer" -> "zylon-ai/private-gpt"
"AntonOsika/gpt-engineer" -> "Pythagora-io/gpt-pilot"
"AntonOsika/gpt-engineer" -> "langchain-ai/langchain"
"AntonOsika/gpt-engineer" -> "QuivrHQ/quivr"
"AntonOsika/gpt-engineer" -> "microsoft/autogen"
"AntonOsika/gpt-engineer" -> "reworkd/AgentGPT"
"AntonOsika/gpt-engineer" -> "nomic-ai/gpt4all"
"AntonOsika/gpt-engineer" -> "openai/openai-cookbook"
"AntonOsika/gpt-engineer" -> "FlowiseAI/Flowise"
"AntonOsika/gpt-engineer" -> "yoheinakajima/babyagi" ["e"=1]
"AntonOsika/gpt-engineer" -> "All-Hands-AI/OpenHands"
"AntonOsika/gpt-engineer" -> "Aider-AI/aider"
"ggml-org/llama.cpp" -> "vllm-project/vllm"
"ggml-org/llama.cpp" -> "ollama/ollama"
"ggml-org/llama.cpp" -> "meta-llama/llama"
"ggml-org/llama.cpp" -> "ggml-org/whisper.cpp"
"ggml-org/llama.cpp" -> "oobabooga/text-generation-webui"
"ggml-org/llama.cpp" -> "langchain-ai/langchain"
"ggml-org/llama.cpp" -> "nomic-ai/gpt4all"
"ggml-org/llama.cpp" -> "lm-sys/FastChat"
"ggml-org/llama.cpp" -> "run-llama/llama_index"
"ggml-org/llama.cpp" -> "open-webui/open-webui"
"ggml-org/llama.cpp" -> "hiyouga/LLaMA-Factory"
"ggml-org/llama.cpp" -> "unslothai/unsloth"
"ggml-org/llama.cpp" -> "tatsu-lab/stanford_alpaca"
"ggml-org/llama.cpp" -> "openai/whisper"
"ggml-org/llama.cpp" -> "Significant-Gravitas/AutoGPT"
"kharvd/gpt-cli" -> "marcolardera/chatgpt-cli"
"kharvd/gpt-cli" -> "0xacx/chatGPT-shell-cli"
"kharvd/gpt-cli" -> "kardolus/chatgpt-cli"
"kharvd/gpt-cli" -> "JohannLai/gptcli"
"kharvd/gpt-cli" -> "adamyodinsky/TerminalGPT"
"kharvd/gpt-cli" -> "tbckr/sgpt"
"kharvd/gpt-cli" -> "yagil/ChatIDE"
"twitter/the-algorithm" -> "twitter/the-algorithm-ml"
"twitter/the-algorithm" -> "Significant-Gravitas/AutoGPT"
"twitter/the-algorithm" -> "meta-llama/llama"
"twitter/the-algorithm" -> "langchain-ai/langchain"
"twitter/the-algorithm" -> "oven-sh/bun" ["e"=1]
"twitter/the-algorithm" -> "openai/openai-cookbook"
"twitter/the-algorithm" -> "ggml-org/llama.cpp"
"twitter/the-algorithm" -> "huggingface/transformers"
"twitter/the-algorithm" -> "nomic-ai/gpt4all"
"twitter/the-algorithm" -> "shadcn-ui/ui" ["e"=1]
"twitter/the-algorithm" -> "supabase/supabase" ["e"=1]
"twitter/the-algorithm" -> "xai-org/grok-1"
"twitter/the-algorithm" -> "openai/whisper"
"twitter/the-algorithm" -> "dair-ai/Prompt-Engineering-Guide"
"twitter/the-algorithm" -> "ollama/ollama"
"nomic-ai/gpt4all" -> "zylon-ai/private-gpt"
"nomic-ai/gpt4all" -> "ggml-org/llama.cpp"
"nomic-ai/gpt4all" -> "Significant-Gravitas/AutoGPT"
"nomic-ai/gpt4all" -> "langchain-ai/langchain"
"nomic-ai/gpt4all" -> "lm-sys/FastChat"
"nomic-ai/gpt4all" -> "oobabooga/text-generation-webui"
"nomic-ai/gpt4all" -> "ollama/ollama"
"nomic-ai/gpt4all" -> "LAION-AI/Open-Assistant"
"nomic-ai/gpt4all" -> "run-llama/llama_index"
"nomic-ai/gpt4all" -> "xtekky/gpt4free" ["e"=1]
"nomic-ai/gpt4all" -> "tatsu-lab/stanford_alpaca"
"nomic-ai/gpt4all" -> "meta-llama/llama"
"nomic-ai/gpt4all" -> "reworkd/AgentGPT"
"nomic-ai/gpt4all" -> "OpenInterpreter/open-interpreter"
"nomic-ai/gpt4all" -> "open-webui/open-webui"
"ollama/ollama" -> "open-webui/open-webui"
"ollama/ollama" -> "ggml-org/llama.cpp"
"ollama/ollama" -> "langchain-ai/langchain"
"ollama/ollama" -> "langgenius/dify"
"ollama/ollama" -> "comfyanonymous/ComfyUI" ["e"=1]
"ollama/ollama" -> "AUTOMATIC1111/stable-diffusion-webui" ["e"=1]
"ollama/ollama" -> "vllm-project/vllm"
"ollama/ollama" -> "Significant-Gravitas/AutoGPT"
"ollama/ollama" -> "Mintplex-Labs/anything-llm"
"ollama/ollama" -> "lobehub/lobe-chat"
"ollama/ollama" -> "nomic-ai/gpt4all"
"ollama/ollama" -> "deepseek-ai/DeepSeek-R1"
"ollama/ollama" -> "openai/whisper"
"ollama/ollama" -> "n8n-io/n8n"
"ollama/ollama" -> "hiyouga/LLaMA-Factory"
"microsoft/semantic-kernel" -> "microsoft/autogen"
"microsoft/semantic-kernel" -> "guidance-ai/guidance"
"microsoft/semantic-kernel" -> "run-llama/llama_index"
"microsoft/semantic-kernel" -> "langchain-ai/langchain"
"microsoft/semantic-kernel" -> "microsoft/graphrag"
"microsoft/semantic-kernel" -> "microsoft/JARVIS"
"microsoft/semantic-kernel" -> "stanfordnlp/dspy"
"microsoft/semantic-kernel" -> "microsoft/promptflow"
"microsoft/semantic-kernel" -> "openai/openai-cookbook"
"microsoft/semantic-kernel" -> "openai/chatgpt-retrieval-plugin"
"microsoft/semantic-kernel" -> "microsoft/kernel-memory" ["e"=1]
"microsoft/semantic-kernel" -> "FlowiseAI/Flowise"
"microsoft/semantic-kernel" -> "yoheinakajima/babyagi" ["e"=1]
"microsoft/semantic-kernel" -> "FoundationAgents/MetaGPT"
"microsoft/semantic-kernel" -> "microsoft/chat-copilot" ["e"=1]
"tloen/alpaca-lora" -> "tatsu-lab/stanford_alpaca"
"tloen/alpaca-lora" -> "lm-sys/FastChat"
"tloen/alpaca-lora" -> "huggingface/peft"
"tloen/alpaca-lora" -> "ymcui/Chinese-LLaMA-Alpaca" ["e"=1]
"tloen/alpaca-lora" -> "LianjiaTech/BELLE" ["e"=1]
"tloen/alpaca-lora" -> "antimatter15/alpaca.cpp"
"tloen/alpaca-lora" -> "meta-llama/llama"
"tloen/alpaca-lora" -> "artidoro/qlora"
"tloen/alpaca-lora" -> "huggingface/trl" ["e"=1]
"tloen/alpaca-lora" -> "OpenGVLab/LLaMA-Adapter"
"tloen/alpaca-lora" -> "hpcaitech/ColossalAI"
"tloen/alpaca-lora" -> "deepspeedai/DeepSpeed"
"tloen/alpaca-lora" -> "databrickslabs/dolly"
"tloen/alpaca-lora" -> "OptimalScale/LMFlow" ["e"=1]
"tloen/alpaca-lora" -> "Vision-CAIR/MiniGPT-4"
"Significant-Gravitas/AutoGPT" -> "langchain-ai/langchain"
"Significant-Gravitas/AutoGPT" -> "reworkd/AgentGPT"
"Significant-Gravitas/AutoGPT" -> "f/awesome-chatgpt-prompts" ["e"=1]
"Significant-Gravitas/AutoGPT" -> "nomic-ai/gpt4all"
"Significant-Gravitas/AutoGPT" -> "AUTOMATIC1111/stable-diffusion-webui" ["e"=1]
"Significant-Gravitas/AutoGPT" -> "ollama/ollama"
"Significant-Gravitas/AutoGPT" -> "FoundationAgents/MetaGPT"
"Significant-Gravitas/AutoGPT" -> "huggingface/transformers"
"Significant-Gravitas/AutoGPT" -> "openai/openai-cookbook"
"Significant-Gravitas/AutoGPT" -> "langgenius/dify"
"Significant-Gravitas/AutoGPT" -> "AntonOsika/gpt-engineer"
"Significant-Gravitas/AutoGPT" -> "ChatGPTNextWeb/NextChat" ["e"=1]
"Significant-Gravitas/AutoGPT" -> "ggml-org/llama.cpp"
"Significant-Gravitas/AutoGPT" -> "yoheinakajima/babyagi" ["e"=1]
"Significant-Gravitas/AutoGPT" -> "xtekky/gpt4free" ["e"=1]
"antimatter15/alpaca.cpp" -> "cocktailpeanut/dalai"
"antimatter15/alpaca.cpp" -> "tloen/alpaca-lora"
"antimatter15/alpaca.cpp" -> "tatsu-lab/stanford_alpaca"
"antimatter15/alpaca.cpp" -> "ggml-org/llama.cpp"
"antimatter15/alpaca.cpp" -> "lm-sys/FastChat"
"antimatter15/alpaca.cpp" -> "Stability-AI/StableLM"
"antimatter15/alpaca.cpp" -> "ggml-org/whisper.cpp"
"antimatter15/alpaca.cpp" -> "oobabooga/text-generation-webui"
"antimatter15/alpaca.cpp" -> "databrickslabs/dolly"
"antimatter15/alpaca.cpp" -> "LAION-AI/Open-Assistant"
"antimatter15/alpaca.cpp" -> "nomic-ai/gpt4all"
"antimatter15/alpaca.cpp" -> "serge-chat/serge"
"antimatter15/alpaca.cpp" -> "ggml-org/ggml"
"antimatter15/alpaca.cpp" -> "FMInference/FlexLLMGen" ["e"=1]
"antimatter15/alpaca.cpp" -> "abetlen/llama-cpp-python"
"serge-chat/serge" -> "antimatter15/alpaca.cpp"
"serge-chat/serge" -> "cocktailpeanut/dalai"
"serge-chat/serge" -> "ParisNeo/lollms-webui"
"serge-chat/serge" -> "mudler/LocalAI"
"serge-chat/serge" -> "azukaar/Cosmos-Server" ["e"=1]
"serge-chat/serge" -> "ravenscroftj/turbopilot" ["e"=1]
"serge-chat/serge" -> "fauxpilot/fauxpilot" ["e"=1]
"serge-chat/serge" -> "tubearchivist/tubearchivist" ["e"=1]
"serge-chat/serge" -> "oobabooga/text-generation-webui"
"serge-chat/serge" -> "tloen/alpaca-lora"
"serge-chat/serge" -> "Josh-XT/AGiXT" ["e"=1]
"serge-chat/serge" -> "deep-diver/LLM-As-Chatbot"
"serge-chat/serge" -> "nat/openplayground" ["e"=1]
"serge-chat/serge" -> "databrickslabs/dolly"
"serge-chat/serge" -> "LAION-AI/Open-Assistant"
"Chainlit/chainlit" -> "Chainlit/cookbook" ["e"=1]
"Chainlit/chainlit" -> "BerriAI/litellm"
"Chainlit/chainlit" -> "stanfordnlp/dspy"
"Chainlit/chainlit" -> "FlowiseAI/Flowise"
"Chainlit/chainlit" -> "run-llama/llama_index"
"Chainlit/chainlit" -> "crewAIInc/crewAI"
"Chainlit/chainlit" -> "mem0ai/mem0"
"Chainlit/chainlit" -> "Unstructured-IO/unstructured"
"Chainlit/chainlit" -> "deepset-ai/haystack"
"Chainlit/chainlit" -> "567-labs/instructor"
"Chainlit/chainlit" -> "kyrolabs/awesome-langchain" ["e"=1]
"Chainlit/chainlit" -> "superagent-ai/superagent" ["e"=1]
"Chainlit/chainlit" -> "langfuse/langfuse"
"Chainlit/chainlit" -> "agno-agi/agno"
"Chainlit/chainlit" -> "ShishirPatil/gorilla" ["e"=1]
"pezzolabs/pezzo" -> "Agenta-AI/agenta"
"pezzolabs/pezzo" -> "tensorchord/Awesome-LLMOps"
"pezzolabs/pezzo" -> "promptfoo/promptfoo"
"pezzolabs/pezzo" -> "langfuse/langfuse"
"pezzolabs/pezzo" -> "superagent-ai/superagent" ["e"=1]
"pezzolabs/pezzo" -> "Portkey-AI/gateway"
"pezzolabs/pezzo" -> "hegelai/prompttools"
"pezzolabs/pezzo" -> "lunary-ai/lunary"
"pezzolabs/pezzo" -> "swirlai/swirl-search"
"pezzolabs/pezzo" -> "ianarawjo/ChainForge"
"pezzolabs/pezzo" -> "Helicone/helicone"
"pezzolabs/pezzo" -> "openchatai/copilot" ["e"=1]
"pezzolabs/pezzo" -> "langgptai/LangGPT"
"pezzolabs/pezzo" -> "trypromptly/LLMStack"
"pezzolabs/pezzo" -> "Chainlit/chainlit"
"GoogleCloudPlatform/generative-ai" -> "google-gemini/cookbook"
"GoogleCloudPlatform/generative-ai" -> "GoogleCloudPlatform/vertex-ai-samples" ["e"=1]
"GoogleCloudPlatform/generative-ai" -> "GoogleCloudPlatform/asl-ml-immersion" ["e"=1]
"GoogleCloudPlatform/generative-ai" -> "google/generative-ai-docs"
"GoogleCloudPlatform/generative-ai" -> "GoogleCloudPlatform/training-data-analyst" ["e"=1]
"GoogleCloudPlatform/generative-ai" -> "aishwaryanr/awesome-generative-ai-guide"
"GoogleCloudPlatform/generative-ai" -> "NirDiamant/GenAI_Agents"
"GoogleCloudPlatform/generative-ai" -> "anthropics/anthropic-cookbook"
"GoogleCloudPlatform/generative-ai" -> "GoogleCloudPlatform/applied-ai-engineering-samples" ["e"=1]
"GoogleCloudPlatform/generative-ai" -> "meta-llama/llama-cookbook"
"GoogleCloudPlatform/generative-ai" -> "microsoft/autogen"
"GoogleCloudPlatform/generative-ai" -> "crewAIInc/crewAI"
"GoogleCloudPlatform/generative-ai" -> "GoogleCloudPlatform/python-docs-samples" ["e"=1]
"GoogleCloudPlatform/generative-ai" -> "assafelovic/gpt-researcher"
"GoogleCloudPlatform/generative-ai" -> "NirDiamant/RAG_Techniques"
"explodinggradients/ragas" -> "confident-ai/deepeval"
"explodinggradients/ragas" -> "stanfordnlp/dspy"
"explodinggradients/ragas" -> "Unstructured-IO/unstructured"
"explodinggradients/ragas" -> "FlagOpen/FlagEmbedding" ["e"=1]
"explodinggradients/ragas" -> "microsoft/graphrag"
"explodinggradients/ragas" -> "567-labs/instructor"
"explodinggradients/ragas" -> "langfuse/langfuse"
"explodinggradients/ragas" -> "run-llama/llama_index"
"explodinggradients/ragas" -> "truera/trulens"
"explodinggradients/ragas" -> "BerriAI/litellm"
"explodinggradients/ragas" -> "dottxt-ai/outlines"
"explodinggradients/ragas" -> "Arize-ai/phoenix"
"explodinggradients/ragas" -> "guardrails-ai/guardrails"
"explodinggradients/ragas" -> "langchain-ai/langgraph"
"explodinggradients/ragas" -> "deepset-ai/haystack"
"FoundationAgents/MetaGPT" -> "microsoft/autogen"
"FoundationAgents/MetaGPT" -> "dataelement/bisheng" ["e"=1]
"FoundationAgents/MetaGPT" -> "HKUDS/LightRAG" ["e"=1]
"FoundationAgents/MetaGPT" -> "microsoft/UFO" ["e"=1]
"FoundationAgents/MetaGPT" -> "OpenBMB/ChatDev"
"FoundationAgents/MetaGPT" -> "langgenius/dify"
"FoundationAgents/MetaGPT" -> "fudan-generative-vision/hallo" ["e"=1]
"FoundationAgents/MetaGPT" -> "EvilGenius-dot/RustMinerSystem" ["e"=1]
"FoundationAgents/MetaGPT" -> "TJU-DRL-LAB/AI-Optimizer" ["e"=1]
"FoundationAgents/MetaGPT" -> "WuKongOpenSource/WukongCRM-11.0-JAVA" ["e"=1]
"FoundationAgents/MetaGPT" -> "langchain-ai/langchain"
"FoundationAgents/MetaGPT" -> "TaskingAI/TaskingAI" ["e"=1]
"FoundationAgents/MetaGPT" -> "dgiot/dgiot" ["e"=1]
"FoundationAgents/MetaGPT" -> "All-Hands-AI/OpenHands"
"FoundationAgents/MetaGPT" -> "FoundationAgents/OpenManus"
"rasbt/LLMs-from-scratch" -> "mlabonne/llm-course"
"rasbt/LLMs-from-scratch" -> "karpathy/LLM101n"
"rasbt/LLMs-from-scratch" -> "hiyouga/LLaMA-Factory"
"rasbt/LLMs-from-scratch" -> "vllm-project/vllm"
"rasbt/LLMs-from-scratch" -> "unslothai/unsloth"
"rasbt/LLMs-from-scratch" -> "naklecha/llama3-from-scratch"
"rasbt/LLMs-from-scratch" -> "karpathy/nanoGPT"
"rasbt/LLMs-from-scratch" -> "karpathy/llm.c"
"rasbt/LLMs-from-scratch" -> "microsoft/generative-ai-for-beginners"
"rasbt/LLMs-from-scratch" -> "ollama/ollama"
"rasbt/LLMs-from-scratch" -> "langchain-ai/langchain"
"rasbt/LLMs-from-scratch" -> "All-Hands-AI/OpenHands"
"rasbt/LLMs-from-scratch" -> "ggml-org/llama.cpp"
"rasbt/LLMs-from-scratch" -> "dair-ai/Prompt-Engineering-Guide"
"rasbt/LLMs-from-scratch" -> "microsoft/autogen"
"anthropics/anthropic-cookbook" -> "anthropics/courses"
"anthropics/anthropic-cookbook" -> "anthropics/anthropic-quickstarts"
"anthropics/anthropic-cookbook" -> "google-gemini/cookbook"
"anthropics/anthropic-cookbook" -> "agno-agi/agno"
"anthropics/anthropic-cookbook" -> "openai/swarm"
"anthropics/anthropic-cookbook" -> "anthropics/prompt-eng-interactive-tutorial"
"anthropics/anthropic-cookbook" -> "stanford-oval/storm"
"anthropics/anthropic-cookbook" -> "mendableai/firecrawl"
"anthropics/anthropic-cookbook" -> "assafelovic/gpt-researcher"
"anthropics/anthropic-cookbook" -> "crewAIInc/crewAI"
"anthropics/anthropic-cookbook" -> "stanfordnlp/dspy"
"anthropics/anthropic-cookbook" -> "Shubhamsaboo/awesome-llm-apps"
"anthropics/anthropic-cookbook" -> "Doriandarko/claude-engineer"
"anthropics/anthropic-cookbook" -> "e2b-dev/awesome-ai-agents"
"anthropics/anthropic-cookbook" -> "cline/cline"
"microsoft/TaskWeaver" -> "xlang-ai/OpenAgents" ["e"=1]
"microsoft/TaskWeaver" -> "letta-ai/letta"
"microsoft/TaskWeaver" -> "OpenBMB/XAgent" ["e"=1]
"microsoft/TaskWeaver" -> "microsoft/autogen"
"microsoft/TaskWeaver" -> "Codium-ai/AlphaCodium"
"microsoft/TaskWeaver" -> "microsoft/promptflow"
"microsoft/TaskWeaver" -> "OthersideAI/self-operating-computer"
"microsoft/TaskWeaver" -> "aiwaves-cn/agents" ["e"=1]
"microsoft/TaskWeaver" -> "langchain-ai/opengpts"
"microsoft/TaskWeaver" -> "crewAIInc/crewAI"
"microsoft/TaskWeaver" -> "microsoft/LLMLingua"
"microsoft/TaskWeaver" -> "VRSEN/agency-swarm"
"microsoft/TaskWeaver" -> "OpenBMB/AgentVerse" ["e"=1]
"microsoft/TaskWeaver" -> "eosphoros-ai/DB-GPT"
"microsoft/TaskWeaver" -> "ShishirPatil/gorilla" ["e"=1]
"bigcode-project/starcoder" -> "nlpxucan/WizardLM"
"bigcode-project/starcoder" -> "salesforce/CodeGen" ["e"=1]
"bigcode-project/starcoder" -> "artidoro/qlora"
"bigcode-project/starcoder" -> "Stability-AI/StableLM"
"bigcode-project/starcoder" -> "salesforce/CodeT5" ["e"=1]
"bigcode-project/starcoder" -> "mosaicml/llm-foundry"
"bigcode-project/starcoder" -> "tloen/alpaca-lora"
"bigcode-project/starcoder" -> "databrickslabs/dolly"
"bigcode-project/starcoder" -> "lm-sys/FastChat"
"bigcode-project/starcoder" -> "openlm-research/open_llama"
"bigcode-project/starcoder" -> "eugeneyan/open-llms"
"bigcode-project/starcoder" -> "huggingface/text-generation-inference" ["e"=1]
"bigcode-project/starcoder" -> "togethercomputer/RedPajama-Data"
"bigcode-project/starcoder" -> "meta-llama/codellama"
"bigcode-project/starcoder" -> "tatsu-lab/stanford_alpaca"
"danny-avila/LibreChat" -> "lobehub/lobe-chat"
"danny-avila/LibreChat" -> "open-webui/open-webui"
"danny-avila/LibreChat" -> "Mintplex-Labs/anything-llm"
"danny-avila/LibreChat" -> "mckaywrigley/chatbot-ui"
"danny-avila/LibreChat" -> "ItzCrazyKns/Perplexica"
"danny-avila/LibreChat" -> "BerriAI/litellm"
"danny-avila/LibreChat" -> "menloresearch/jan"
"danny-avila/LibreChat" -> "cline/cline"
"danny-avila/LibreChat" -> "FlowiseAI/Flowise"
"danny-avila/LibreChat" -> "Aider-AI/aider"
"danny-avila/LibreChat" -> "mendableai/firecrawl"
"danny-avila/LibreChat" -> "assafelovic/gpt-researcher"
"danny-avila/LibreChat" -> "continuedev/continue"
"danny-avila/LibreChat" -> "crewAIInc/crewAI"
"danny-avila/LibreChat" -> "agno-agi/agno"
"FlowiseAI/Flowise" -> "microsoft/autogen"
"FlowiseAI/Flowise" -> "QuivrHQ/quivr"
"FlowiseAI/Flowise" -> "crewAIInc/crewAI"
"FlowiseAI/Flowise" -> "langgenius/dify"
"FlowiseAI/Flowise" -> "FoundationAgents/MetaGPT"
"FlowiseAI/Flowise" -> "langflow-ai/langflow"
"FlowiseAI/Flowise" -> "run-llama/llama_index"
"FlowiseAI/Flowise" -> "langchain-ai/langchain"
"FlowiseAI/Flowise" -> "mendableai/firecrawl"
"FlowiseAI/Flowise" -> "Mintplex-Labs/anything-llm"
"FlowiseAI/Flowise" -> "mem0ai/mem0"
"FlowiseAI/Flowise" -> "reworkd/AgentGPT"
"FlowiseAI/Flowise" -> "All-Hands-AI/OpenHands"
"FlowiseAI/Flowise" -> "n8n-io/n8n"
"FlowiseAI/Flowise" -> "agno-agi/agno"
"reworkd/AgentGPT" -> "yoheinakajima/babyagi" ["e"=1]
"reworkd/AgentGPT" -> "Significant-Gravitas/AutoGPT"
"reworkd/AgentGPT" -> "FoundationAgents/MetaGPT"
"reworkd/AgentGPT" -> "microsoft/JARVIS"
"reworkd/AgentGPT" -> "FlowiseAI/Flowise"
"reworkd/AgentGPT" -> "langchain-ai/langchain"
"reworkd/AgentGPT" -> "microsoft/autogen"
"reworkd/AgentGPT" -> "nomic-ai/gpt4all"
"reworkd/AgentGPT" -> "Vision-CAIR/MiniGPT-4"
"reworkd/AgentGPT" -> "run-llama/llama_index"
"reworkd/AgentGPT" -> "TransformerOptimus/SuperAGI" ["e"=1]
"reworkd/AgentGPT" -> "AntonOsika/gpt-engineer"
"reworkd/AgentGPT" -> "lm-sys/FastChat"
"reworkd/AgentGPT" -> "mayooear/ai-pdf-chatbot-langchain" ["e"=1]
"reworkd/AgentGPT" -> "LAION-AI/Open-Assistant"
"n4ze3m/page-assist" -> "Mintplex-Labs/anything-llm"
"n4ze3m/page-assist" -> "CherryHQ/cherry-studio"
"n4ze3m/page-assist" -> "zaidmukaddam/scira"
"n4ze3m/page-assist" -> "ItzCrazyKns/Perplexica"
"n4ze3m/page-assist" -> "langchain-ai/local-deep-researcher"
"n4ze3m/page-assist" -> "web-infra-dev/midscene"
"n4ze3m/page-assist" -> "chatboxai/chatbox" ["e"=1]
"n4ze3m/page-assist" -> "microsoft/data-formulator"
"n4ze3m/page-assist" -> "block/goose"
"n4ze3m/page-assist" -> "mendableai/firecrawl"
"n4ze3m/page-assist" -> "assafelovic/gpt-researcher"
"n4ze3m/page-assist" -> "open-webui/open-webui"
"n4ze3m/page-assist" -> "Canner/WrenAI"
"n4ze3m/page-assist" -> "Zipstack/unstract"
"n4ze3m/page-assist" -> "unslothai/unsloth"
"langgenius/dify" -> "infiniflow/ragflow"
"langgenius/dify" -> "lobehub/lobe-chat"
"langgenius/dify" -> "open-webui/open-webui"
"langgenius/dify" -> "ollama/ollama"
"langgenius/dify" -> "langchain-ai/langchain"
"langgenius/dify" -> "labring/FastGPT"
"langgenius/dify" -> "FoundationAgents/MetaGPT"
"langgenius/dify" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"langgenius/dify" -> "Mintplex-Labs/anything-llm"
"langgenius/dify" -> "hiyouga/LLaMA-Factory"
"langgenius/dify" -> "ChatGPTNextWeb/NextChat" ["e"=1]
"langgenius/dify" -> "FoundationAgents/OpenManus"
"langgenius/dify" -> "browser-use/browser-use"
"langgenius/dify" -> "n8n-io/n8n"
"langgenius/dify" -> "comfyanonymous/ComfyUI" ["e"=1]
"unit-mesh/auto-dev" -> "unit-mesh/autodev-vscode"
"unit-mesh/auto-dev" -> "AutoCodeRoverSG/auto-code-rover"
"unit-mesh/auto-dev" -> "mengjian-github/copilot-analysis"
"unit-mesh/auto-dev" -> "unit-mesh/build-your-ai-coding-assistant"
"unit-mesh/auto-dev" -> "stitionai/devika"
"unit-mesh/auto-dev" -> "SWE-agent/SWE-agent"
"unit-mesh/auto-dev" -> "semanser/codel"
"unit-mesh/auto-dev" -> "phodal/shire"
"unit-mesh/auto-dev" -> "MervinPraison/PraisonAI"
"unit-mesh/auto-dev" -> "developersdigest/llm-answer-engine"
"unit-mesh/auto-dev" -> "microsoft/TaskWeaver"
"unit-mesh/auto-dev" -> "lavague-ai/LaVague"
"unit-mesh/auto-dev" -> "Doriandarko/maestro"
"unit-mesh/auto-dev" -> "OpenInterpreter/01"
"unit-mesh/auto-dev" -> "Codium-ai/AlphaCodium"
"zylon-ai/private-gpt" -> "nomic-ai/gpt4all"
"zylon-ai/private-gpt" -> "PromtEngineer/localGPT"
"zylon-ai/private-gpt" -> "QuivrHQ/quivr"
"zylon-ai/private-gpt" -> "langchain-ai/langchain"
"zylon-ai/private-gpt" -> "AntonOsika/gpt-engineer"
"zylon-ai/private-gpt" -> "oobabooga/text-generation-webui"
"zylon-ai/private-gpt" -> "OpenInterpreter/open-interpreter"
"zylon-ai/private-gpt" -> "Significant-Gravitas/AutoGPT"
"zylon-ai/private-gpt" -> "run-llama/llama_index"
"zylon-ai/private-gpt" -> "FlowiseAI/Flowise"
"zylon-ai/private-gpt" -> "ggml-org/llama.cpp"
"zylon-ai/private-gpt" -> "ollama/ollama"
"zylon-ai/private-gpt" -> "mudler/LocalAI"
"zylon-ai/private-gpt" -> "FoundationAgents/MetaGPT"
"zylon-ai/private-gpt" -> "Pythagora-io/gpt-pilot"
"QuivrHQ/quivr" -> "FlowiseAI/Flowise"
"QuivrHQ/quivr" -> "zylon-ai/private-gpt"
"QuivrHQ/quivr" -> "FoundationAgents/MetaGPT"
"QuivrHQ/quivr" -> "OpenInterpreter/open-interpreter"
"QuivrHQ/quivr" -> "Mintplex-Labs/anything-llm"
"QuivrHQ/quivr" -> "AntonOsika/gpt-engineer"
"QuivrHQ/quivr" -> "run-llama/llama_index"
"QuivrHQ/quivr" -> "mem0ai/mem0"
"QuivrHQ/quivr" -> "lobehub/lobe-chat"
"QuivrHQ/quivr" -> "Pythagora-io/gpt-pilot"
"QuivrHQ/quivr" -> "assafelovic/gpt-researcher"
"QuivrHQ/quivr" -> "microsoft/autogen"
"QuivrHQ/quivr" -> "reworkd/AgentGPT"
"QuivrHQ/quivr" -> "langgenius/dify"
"QuivrHQ/quivr" -> "TransformerOptimus/SuperAGI" ["e"=1]
"jujumilk3/leaked-system-prompts" -> "simular-ai/Agent-S"
"jujumilk3/leaked-system-prompts" -> "getzep/graphiti"
"jujumilk3/leaked-system-prompts" -> "kortix-ai/suna"
"jujumilk3/leaked-system-prompts" -> "jlowin/fastmcp"
"jujumilk3/leaked-system-prompts" -> "Zackriya-Solutions/meeting-minutes"
"jujumilk3/leaked-system-prompts" -> "aipotheosis-labs/aci"
"jujumilk3/leaked-system-prompts" -> "rowboatlabs/rowboat"
"jujumilk3/leaked-system-prompts" -> "patchy631/ai-engineering-hub"
"jujumilk3/leaked-system-prompts" -> "elie222/inbox-zero" ["e"=1]
"jujumilk3/leaked-system-prompts" -> "MODSetter/SurfSense"
"jujumilk3/leaked-system-prompts" -> "bytedance/UI-TARS"
"jujumilk3/leaked-system-prompts" -> "PatrickJS/awesome-cursorrules"
"jujumilk3/leaked-system-prompts" -> "Shubhamsaboo/awesome-llm-apps"
"jujumilk3/leaked-system-prompts" -> "langchain-ai/local-deep-researcher"
"jujumilk3/leaked-system-prompts" -> "anthropics/courses"
"vercel/ai-chatbot" -> "vercel/ai"
"vercel/ai-chatbot" -> "nextjs/saas-starter" ["e"=1]
"vercel/ai-chatbot" -> "steven-tey/novel" ["e"=1]
"vercel/ai-chatbot" -> "zaidmukaddam/scira"
"vercel/ai-chatbot" -> "miurla/morphic"
"vercel/ai-chatbot" -> "mendableai/firecrawl"
"vercel/ai-chatbot" -> "mckaywrigley/chatbot-ui"
"vercel/ai-chatbot" -> "agno-agi/agno"
"vercel/ai-chatbot" -> "midday-ai/midday" ["e"=1]
"vercel/ai-chatbot" -> "shadcn-ui/taxonomy" ["e"=1]
"vercel/ai-chatbot" -> "haydenbleasel/next-forge" ["e"=1]
"vercel/ai-chatbot" -> "assafelovic/gpt-researcher"
"vercel/ai-chatbot" -> "mastra-ai/mastra"
"vercel/ai-chatbot" -> "shadcn-ui/ui" ["e"=1]
"vercel/ai-chatbot" -> "dubinc/dub" ["e"=1]
"lobehub/lobe-chat" -> "ChatGPTNextWeb/NextChat" ["e"=1]
"lobehub/lobe-chat" -> "langgenius/dify"
"lobehub/lobe-chat" -> "open-webui/open-webui"
"lobehub/lobe-chat" -> "Mintplex-Labs/anything-llm"
"lobehub/lobe-chat" -> "songquanpeng/one-api" ["e"=1]
"lobehub/lobe-chat" -> "ollama/ollama"
"lobehub/lobe-chat" -> "abi/screenshot-to-code"
"lobehub/lobe-chat" -> "labring/FastGPT"
"lobehub/lobe-chat" -> "danny-avila/LibreChat"
"lobehub/lobe-chat" -> "chatboxai/chatbox" ["e"=1]
"lobehub/lobe-chat" -> "mendableai/firecrawl"
"lobehub/lobe-chat" -> "OpenInterpreter/open-interpreter"
"lobehub/lobe-chat" -> "FoundationAgents/MetaGPT"
"lobehub/lobe-chat" -> "infiniflow/ragflow"
"lobehub/lobe-chat" -> "comfyanonymous/ComfyUI" ["e"=1]
"continuedev/continue" -> "cline/cline"
"continuedev/continue" -> "Aider-AI/aider"
"continuedev/continue" -> "TabbyML/tabby"
"continuedev/continue" -> "All-Hands-AI/OpenHands"
"continuedev/continue" -> "BerriAI/litellm"
"continuedev/continue" -> "Mintplex-Labs/anything-llm"
"continuedev/continue" -> "open-webui/open-webui"
"continuedev/continue" -> "mendableai/firecrawl"
"continuedev/continue" -> "ItzCrazyKns/Perplexica"
"continuedev/continue" -> "Pythagora-io/gpt-pilot"
"continuedev/continue" -> "crewAIInc/crewAI"
"continuedev/continue" -> "agno-agi/agno"
"continuedev/continue" -> "menloresearch/jan"
"continuedev/continue" -> "ollama/ollama"
"continuedev/continue" -> "FlowiseAI/Flowise"
"mlabonne/llm-course" -> "rasbt/LLMs-from-scratch"
"mlabonne/llm-course" -> "karpathy/LLM101n"
"mlabonne/llm-course" -> "hiyouga/LLaMA-Factory"
"mlabonne/llm-course" -> "unslothai/unsloth"
"mlabonne/llm-course" -> "Hannibal046/Awesome-LLM"
"mlabonne/llm-course" -> "microsoft/generative-ai-for-beginners"
"mlabonne/llm-course" -> "vllm-project/vllm"
"mlabonne/llm-course" -> "dair-ai/Prompt-Engineering-Guide"
"mlabonne/llm-course" -> "langchain-ai/langchain"
"mlabonne/llm-course" -> "All-Hands-AI/OpenHands"
"mlabonne/llm-course" -> "run-llama/llama_index"
"mlabonne/llm-course" -> "ollama/ollama"
"mlabonne/llm-course" -> "Shubhamsaboo/awesome-llm-apps"
"mlabonne/llm-course" -> "ggml-org/llama.cpp"
"mlabonne/llm-course" -> "stanfordnlp/dspy"
"e2b-dev/awesome-ai-agents" -> "crewAIInc/crewAI"
"e2b-dev/awesome-ai-agents" -> "microsoft/autogen"
"e2b-dev/awesome-ai-agents" -> "assafelovic/gpt-researcher"
"e2b-dev/awesome-ai-agents" -> "agno-agi/agno"
"e2b-dev/awesome-ai-agents" -> "FoundationAgents/MetaGPT"
"e2b-dev/awesome-ai-agents" -> "mem0ai/mem0"
"e2b-dev/awesome-ai-agents" -> "Shubhamsaboo/awesome-llm-apps"
"e2b-dev/awesome-ai-agents" -> "All-Hands-AI/OpenHands"
"e2b-dev/awesome-ai-agents" -> "mendableai/firecrawl"
"e2b-dev/awesome-ai-agents" -> "reworkd/AgentGPT"
"e2b-dev/awesome-ai-agents" -> "TransformerOptimus/SuperAGI" ["e"=1]
"e2b-dev/awesome-ai-agents" -> "letta-ai/letta"
"e2b-dev/awesome-ai-agents" -> "openai/swarm"
"e2b-dev/awesome-ai-agents" -> "camel-ai/camel"
"e2b-dev/awesome-ai-agents" -> "BerriAI/litellm"
"microsoft/generative-ai-for-beginners" -> "microsoft/AI-For-Beginners"
"microsoft/generative-ai-for-beginners" -> "microsoft/ML-For-Beginners" ["e"=1]
"microsoft/generative-ai-for-beginners" -> "mlabonne/llm-course"
"microsoft/generative-ai-for-beginners" -> "All-Hands-AI/OpenHands"
"microsoft/generative-ai-for-beginners" -> "ollama/ollama"
"microsoft/generative-ai-for-beginners" -> "rasbt/LLMs-from-scratch"
"microsoft/generative-ai-for-beginners" -> "langgenius/dify"
"microsoft/generative-ai-for-beginners" -> "lobehub/lobe-chat"
"microsoft/generative-ai-for-beginners" -> "Shubhamsaboo/awesome-llm-apps"
"microsoft/generative-ai-for-beginners" -> "abi/screenshot-to-code"
"microsoft/generative-ai-for-beginners" -> "microsoft/ai-agents-for-beginners"
"microsoft/generative-ai-for-beginners" -> "open-webui/open-webui"
"microsoft/generative-ai-for-beginners" -> "langchain-ai/langchain"
"microsoft/generative-ai-for-beginners" -> "dair-ai/Prompt-Engineering-Guide"
"microsoft/generative-ai-for-beginners" -> "OpenInterpreter/open-interpreter"
"mshumer/gpt-prompt-engineer" -> "assafelovic/gpt-researcher"
"mshumer/gpt-prompt-engineer" -> "mshumer/gpt-llm-trainer" ["e"=1]
"mshumer/gpt-prompt-engineer" -> "guidance-ai/guidance"
"mshumer/gpt-prompt-engineer" -> "Doriandarko/claude-engineer"
"mshumer/gpt-prompt-engineer" -> "a16z-infra/companion-app" ["e"=1]
"mshumer/gpt-prompt-engineer" -> "mshumer/gpt-investor"
"mshumer/gpt-prompt-engineer" -> "mshumer/gpt-author" ["e"=1]
"mshumer/gpt-prompt-engineer" -> "Doriandarko/maestro"
"mshumer/gpt-prompt-engineer" -> "567-labs/instructor"
"mshumer/gpt-prompt-engineer" -> "stanfordnlp/dspy"
"mshumer/gpt-prompt-engineer" -> "brexhq/prompt-engineering" ["e"=1]
"mshumer/gpt-prompt-engineer" -> "ShishirPatil/gorilla" ["e"=1]
"mshumer/gpt-prompt-engineer" -> "dottxt-ai/outlines"
"mshumer/gpt-prompt-engineer" -> "BerriAI/litellm"
"mshumer/gpt-prompt-engineer" -> "mem0ai/mem0"
"Serra-Technologies/serra" -> "OpenPipe/OpenPipe"
"Serra-Technologies/serra" -> "rubbrband/rubbrband"
"Serra-Technologies/serra" -> "quack-ai/companion-vscode"
"Serra-Technologies/serra" -> "empower-ai/dsensei"
"Serra-Technologies/serra" -> "artie-labs/transfer"
"Serra-Technologies/serra" -> "apoxy-dev/proximal"
"Serra-Technologies/serra" -> "poozlehq/poozle"
"Serra-Technologies/serra" -> "quack-ai/platform"
"Serra-Technologies/serra" -> "Skyvern-AI/wyvern"
"weaviate/Verba" -> "ragapp/ragapp"
"weaviate/Verba" -> "truefoundry/cognita"
"weaviate/Verba" -> "Cinnamon/kotaemon"
"weaviate/Verba" -> "agno-agi/agno"
"weaviate/Verba" -> "explodinggradients/ragas"
"weaviate/Verba" -> "BerriAI/litellm"
"weaviate/Verba" -> "letta-ai/letta"
"weaviate/Verba" -> "SciPhi-AI/R2R"
"weaviate/Verba" -> "Unstructured-IO/unstructured"
"weaviate/Verba" -> "lavague-ai/LaVague"
"weaviate/Verba" -> "ItzCrazyKns/Perplexica"
"weaviate/Verba" -> "weaviate/weaviate"
"weaviate/Verba" -> "assafelovic/gpt-researcher"
"weaviate/Verba" -> "stanfordnlp/dspy"
"weaviate/Verba" -> "ScrapeGraphAI/Scrapegraph-ai"
"Pythagora-io/gpt-pilot" -> "FoundationAgents/MetaGPT"
"Pythagora-io/gpt-pilot" -> "OpenInterpreter/open-interpreter"
"Pythagora-io/gpt-pilot" -> "All-Hands-AI/OpenHands"
"Pythagora-io/gpt-pilot" -> "OpenBMB/ChatDev"
"Pythagora-io/gpt-pilot" -> "crewAIInc/crewAI"
"Pythagora-io/gpt-pilot" -> "AntonOsika/gpt-engineer"
"Pythagora-io/gpt-pilot" -> "microsoft/autogen"
"Pythagora-io/gpt-pilot" -> "Aider-AI/aider"
"Pythagora-io/gpt-pilot" -> "stitionai/devika"
"Pythagora-io/gpt-pilot" -> "QuivrHQ/quivr"
"Pythagora-io/gpt-pilot" -> "assafelovic/gpt-researcher"
"Pythagora-io/gpt-pilot" -> "lobehub/lobe-chat"
"Pythagora-io/gpt-pilot" -> "FlowiseAI/Flowise"
"Pythagora-io/gpt-pilot" -> "abi/screenshot-to-code"
"Pythagora-io/gpt-pilot" -> "zylon-ai/private-gpt"
"menloresearch/jan" -> "Mintplex-Labs/anything-llm"
"menloresearch/jan" -> "lobehub/lobe-chat"
"menloresearch/jan" -> "mudler/LocalAI"
"menloresearch/jan" -> "danny-avila/LibreChat"
"menloresearch/jan" -> "myshell-ai/OpenVoice" ["e"=1]
"menloresearch/jan" -> "All-Hands-AI/OpenHands"
"menloresearch/jan" -> "open-webui/open-webui"
"menloresearch/jan" -> "OpenInterpreter/open-interpreter"
"menloresearch/jan" -> "khoj-ai/khoj"
"menloresearch/jan" -> "ItzCrazyKns/Perplexica"
"menloresearch/jan" -> "continuedev/continue"
"menloresearch/jan" -> "ollama/ollama"
"menloresearch/jan" -> "crewAIInc/crewAI"
"menloresearch/jan" -> "agno-agi/agno"
"menloresearch/jan" -> "mendableai/firecrawl"
"OpenBMB/ChatDev" -> "FoundationAgents/MetaGPT"
"OpenBMB/ChatDev" -> "microsoft/autogen"
"OpenBMB/ChatDev" -> "Pythagora-io/gpt-pilot"
"OpenBMB/ChatDev" -> "crewAIInc/crewAI"
"OpenBMB/ChatDev" -> "OpenInterpreter/open-interpreter"
"OpenBMB/ChatDev" -> "letta-ai/letta"
"OpenBMB/ChatDev" -> "All-Hands-AI/OpenHands"
"OpenBMB/ChatDev" -> "OpenBMB/XAgent" ["e"=1]
"OpenBMB/ChatDev" -> "FlowiseAI/Flowise"
"OpenBMB/ChatDev" -> "joonspk-research/generative_agents" ["e"=1]
"OpenBMB/ChatDev" -> "kuafuai/DevOpsGPT" ["e"=1]
"OpenBMB/ChatDev" -> "assafelovic/gpt-researcher"
"OpenBMB/ChatDev" -> "dataelement/bisheng" ["e"=1]
"OpenBMB/ChatDev" -> "microsoft/UFO" ["e"=1]
"OpenBMB/ChatDev" -> "AntonOsika/gpt-engineer"
"jacoblee93/fully-local-pdf-chatbot" -> "tantaraio/voy"
"jacoblee93/fully-local-pdf-chatbot" -> "n4ze3m/dialoqbase" ["e"=1]
"jacoblee93/fully-local-pdf-chatbot" -> "Nutlope/pdftochat"
"jacoblee93/fully-local-pdf-chatbot" -> "BruceMacD/chatd"
"jacoblee93/fully-local-pdf-chatbot" -> "developersdigest/llm-answer-engine"
"jacoblee93/fully-local-pdf-chatbot" -> "weaviate/Verba"
"jacoblee93/fully-local-pdf-chatbot" -> "Nutlope/notesGPT"
"jacoblee93/fully-local-pdf-chatbot" -> "run-llama/create-llama"
"jacoblee93/fully-local-pdf-chatbot" -> "langchain-ai/langchain-nextjs-template"
"jacoblee93/fully-local-pdf-chatbot" -> "run-llama/chat-llamaindex"
"jacoblee93/fully-local-pdf-chatbot" -> "cohere-ai/cohere-toolkit"
"jacoblee93/fully-local-pdf-chatbot" -> "e2b-dev/code-interpreter"
"jacoblee93/fully-local-pdf-chatbot" -> "run-llama/LlamaIndexTS"
"jacoblee93/fully-local-pdf-chatbot" -> "ivanfioravanti/chatbot-ollama"
"jacoblee93/fully-local-pdf-chatbot" -> "virattt/financial-agent-ui"
"hacksider/Deep-Live-Cam" -> "browser-use/browser-use"
"hacksider/Deep-Live-Cam" -> "unclecode/crawl4ai"
"hacksider/Deep-Live-Cam" -> "lobehub/lobe-chat"
"hacksider/Deep-Live-Cam" -> "comfyanonymous/ComfyUI" ["e"=1]
"hacksider/Deep-Live-Cam" -> "abi/screenshot-to-code"
"hacksider/Deep-Live-Cam" -> "mendableai/firecrawl"
"hacksider/Deep-Live-Cam" -> "All-Hands-AI/OpenHands"
"hacksider/Deep-Live-Cam" -> "open-webui/open-webui"
"hacksider/Deep-Live-Cam" -> "harry0703/MoneyPrinterTurbo"
"hacksider/Deep-Live-Cam" -> "langgenius/dify"
"hacksider/Deep-Live-Cam" -> "ollama/ollama"
"hacksider/Deep-Live-Cam" -> "myshell-ai/OpenVoice" ["e"=1]
"hacksider/Deep-Live-Cam" -> "Stirling-Tools/Stirling-PDF" ["e"=1]
"hacksider/Deep-Live-Cam" -> "iperov/DeepFaceLive" ["e"=1]
"hacksider/Deep-Live-Cam" -> "facefusion/facefusion" ["e"=1]
"e2b-dev/e2b-cookbook" -> "e2b-dev/code-interpreter"
"e2b-dev/e2b-cookbook" -> "FateMyName/dannjs"
"e2b-dev/e2b-cookbook" -> "FateMyName/Libreria1"
"e2b-dev/e2b-cookbook" -> "FateMyName/node"
"e2b-dev/e2b-cookbook" -> "FateMyName/laminas-diactoros"
"e2b-dev/e2b-cookbook" -> "FateMyName/fuel-core"
"e2b-dev/e2b-cookbook" -> "FateMyName/eigenlayer-contracts"
"e2b-dev/e2b-cookbook" -> "FateMyName/validator-dashboard"
"e2b-dev/e2b-cookbook" -> "FateMyName/eigenda-operator-setup"
"e2b-dev/e2b-cookbook" -> "FateMyName/eigensdk-go"
"e2b-dev/e2b-cookbook" -> "dgjklh/nvmrc"
"e2b-dev/e2b-cookbook" -> "FateMyName/encrypto"
"e2b-dev/e2b-cookbook" -> "FateMyName/sashay_pauxi"
"e2b-dev/e2b-cookbook" -> "FateMyName/monitor-client"
"e2b-dev/e2b-cookbook" -> "BielskiBartosz/Workspace"
"spdustin/ChatGPT-AutoExpert" -> "letta-ai/letta"
"spdustin/ChatGPT-AutoExpert" -> "PWhiddy/PokemonRedExperiments" ["e"=1]
"spdustin/ChatGPT-AutoExpert" -> "LouisShark/chatgpt_system_prompt"
"spdustin/ChatGPT-AutoExpert" -> "mshumer/gpt-prompt-engineer"
"spdustin/ChatGPT-AutoExpert" -> "langchain-ai/opengpts"
"spdustin/ChatGPT-AutoExpert" -> "Pythagora-io/gpt-pilot"
"spdustin/ChatGPT-AutoExpert" -> "microsoft/promptbase"
"spdustin/ChatGPT-AutoExpert" -> "assafelovic/gpt-researcher"
"spdustin/ChatGPT-AutoExpert" -> "BuilderIO/gpt-crawler"
"spdustin/ChatGPT-AutoExpert" -> "ProfSynapse/Professor-Synapse"
"spdustin/ChatGPT-AutoExpert" -> "microsoft/promptflow"
"spdustin/ChatGPT-AutoExpert" -> "guidance-ai/guidance"
"spdustin/ChatGPT-AutoExpert" -> "daveshap/ChatGPT_Custom_Instructions"
"spdustin/ChatGPT-AutoExpert" -> "Aider-AI/aider"
"spdustin/ChatGPT-AutoExpert" -> "brexhq/prompt-engineering" ["e"=1]
"RamiAwar/dataline" -> "kturung/langgraph_streamlit_codeassistant"
"RamiAwar/dataline" -> "bracesproul/gen-ui-python"
"RamiAwar/dataline" -> "Canner/WrenAI"
"RamiAwar/dataline" -> "virattt/financial-agent-ui"
"RamiAwar/dataline" -> "NirDiamant/Controllable-RAG-Agent"
"RamiAwar/dataline" -> "DhruvAtreja/datavisualization_langgraph"
"RamiAwar/dataline" -> "langchain-ai/langgraph-studio"
"RamiAwar/dataline" -> "KruxAI/ragbuilder"
"RamiAwar/dataline" -> "TAG-Research/TAG-Bench"
"RamiAwar/dataline" -> "tencentmusic/supersonic" ["e"=1]
"RamiAwar/dataline" -> "hwchase17/langgraph-engineer"
"RamiAwar/dataline" -> "StreetLamb/tribe"
"RamiAwar/dataline" -> "EmergenceAI/Agent-E"
"RamiAwar/dataline" -> "ragapp/ragapp"
"RamiAwar/dataline" -> "vanna-ai/vanna"
"bentoml/OpenLLM" -> "bentoml/BentoML" ["e"=1]
"bentoml/OpenLLM" -> "huggingface/text-generation-inference" ["e"=1]
"bentoml/OpenLLM" -> "BerriAI/litellm"
"bentoml/OpenLLM" -> "vllm-project/vllm"
"bentoml/OpenLLM" -> "run-llama/llama_index"
"bentoml/OpenLLM" -> "ShishirPatil/gorilla" ["e"=1]
"bentoml/OpenLLM" -> "guidance-ai/guidance"
"bentoml/OpenLLM" -> "mudler/LocalAI"
"bentoml/OpenLLM" -> "eugeneyan/open-llms"
"bentoml/OpenLLM" -> "lm-sys/FastChat"
"bentoml/OpenLLM" -> "stanfordnlp/dspy"
"bentoml/OpenLLM" -> "xorbitsai/inference"
"bentoml/OpenLLM" -> "deepset-ai/haystack"
"bentoml/OpenLLM" -> "TransformerOptimus/SuperAGI" ["e"=1]
"bentoml/OpenLLM" -> "FlowiseAI/Flowise"
"assafelovic/gpt-researcher" -> "stanford-oval/storm"
"assafelovic/gpt-researcher" -> "crewAIInc/crewAI"
"assafelovic/gpt-researcher" -> "agno-agi/agno"
"assafelovic/gpt-researcher" -> "mendableai/firecrawl"
"assafelovic/gpt-researcher" -> "ItzCrazyKns/Perplexica"
"assafelovic/gpt-researcher" -> "microsoft/autogen"
"assafelovic/gpt-researcher" -> "ScrapeGraphAI/Scrapegraph-ai"
"assafelovic/gpt-researcher" -> "mem0ai/mem0"
"assafelovic/gpt-researcher" -> "FoundationAgents/MetaGPT"
"assafelovic/gpt-researcher" -> "Mintplex-Labs/anything-llm"
"assafelovic/gpt-researcher" -> "letta-ai/letta"
"assafelovic/gpt-researcher" -> "e2b-dev/awesome-ai-agents"
"assafelovic/gpt-researcher" -> "All-Hands-AI/OpenHands"
"assafelovic/gpt-researcher" -> "FlowiseAI/Flowise"
"assafelovic/gpt-researcher" -> "unclecode/crawl4ai"
"OpenInterpreter/open-interpreter" -> "microsoft/autogen"
"OpenInterpreter/open-interpreter" -> "FoundationAgents/MetaGPT"
"OpenInterpreter/open-interpreter" -> "All-Hands-AI/OpenHands"
"OpenInterpreter/open-interpreter" -> "Pythagora-io/gpt-pilot"
"OpenInterpreter/open-interpreter" -> "langchain-ai/langchain"
"OpenInterpreter/open-interpreter" -> "AntonOsika/gpt-engineer"
"OpenInterpreter/open-interpreter" -> "crewAIInc/crewAI"
"OpenInterpreter/open-interpreter" -> "lobehub/lobe-chat"
"OpenInterpreter/open-interpreter" -> "ollama/ollama"
"OpenInterpreter/open-interpreter" -> "QuivrHQ/quivr"
"OpenInterpreter/open-interpreter" -> "zylon-ai/private-gpt"
"OpenInterpreter/open-interpreter" -> "Significant-Gravitas/AutoGPT"
"OpenInterpreter/open-interpreter" -> "abi/screenshot-to-code"
"OpenInterpreter/open-interpreter" -> "FlowiseAI/Flowise"
"OpenInterpreter/open-interpreter" -> "open-webui/open-webui"
"Lightning-AI/litgpt" -> "Lightning-AI/lit-llama"
"Lightning-AI/litgpt" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"Lightning-AI/litgpt" -> "jzhang38/TinyLlama" ["e"=1]
"Lightning-AI/litgpt" -> "stanfordnlp/dspy"
"Lightning-AI/litgpt" -> "unslothai/unsloth"
"Lightning-AI/litgpt" -> "meta-llama/llama-cookbook"
"Lightning-AI/litgpt" -> "vllm-project/vllm"
"Lightning-AI/litgpt" -> "huggingface/trl" ["e"=1]
"Lightning-AI/litgpt" -> "huggingface/peft"
"Lightning-AI/litgpt" -> "pytorch/torchtune" ["e"=1]
"Lightning-AI/litgpt" -> "karpathy/nanoGPT"
"Lightning-AI/litgpt" -> "BerriAI/litellm"
"Lightning-AI/litgpt" -> "dottxt-ai/outlines"
"Lightning-AI/litgpt" -> "huggingface/text-generation-inference" ["e"=1]
"Lightning-AI/litgpt" -> "stas00/ml-engineering"
"meta-llama/llama-cookbook" -> "meta-llama/llama"
"meta-llama/llama-cookbook" -> "meta-llama/llama3"
"meta-llama/llama-cookbook" -> "huggingface/peft"
"meta-llama/llama-cookbook" -> "vllm-project/vllm"
"meta-llama/llama-cookbook" -> "huggingface/trl" ["e"=1]
"meta-llama/llama-cookbook" -> "hiyouga/LLaMA-Factory"
"meta-llama/llama-cookbook" -> "unslothai/unsloth"
"meta-llama/llama-cookbook" -> "haotian-liu/LLaVA" ["e"=1]
"meta-llama/llama-cookbook" -> "EleutherAI/lm-evaluation-harness" ["e"=1]
"meta-llama/llama-cookbook" -> "meta-llama/codellama"
"meta-llama/llama-cookbook" -> "tatsu-lab/stanford_alpaca"
"meta-llama/llama-cookbook" -> "lm-sys/FastChat"
"meta-llama/llama-cookbook" -> "run-llama/llama_index"
"meta-llama/llama-cookbook" -> "meta-llama/llama-stack"
"meta-llama/llama-cookbook" -> "Lightning-AI/litgpt"
"microsoft/autogen" -> "crewAIInc/crewAI"
"microsoft/autogen" -> "FoundationAgents/MetaGPT"
"microsoft/autogen" -> "langchain-ai/langchain"
"microsoft/autogen" -> "run-llama/llama_index"
"microsoft/autogen" -> "OpenBMB/ChatDev"
"microsoft/autogen" -> "microsoft/graphrag"
"microsoft/autogen" -> "FlowiseAI/Flowise"
"microsoft/autogen" -> "All-Hands-AI/OpenHands"
"microsoft/autogen" -> "OpenInterpreter/open-interpreter"
"microsoft/autogen" -> "letta-ai/letta"
"microsoft/autogen" -> "openai/swarm"
"microsoft/autogen" -> "stanfordnlp/dspy"
"microsoft/autogen" -> "vllm-project/vllm"
"microsoft/autogen" -> "mem0ai/mem0"
"microsoft/autogen" -> "agno-agi/agno"
"meta-llama/codellama" -> "meta-llama/llama"
"meta-llama/codellama" -> "meta-llama/llama-cookbook"
"meta-llama/codellama" -> "nlpxucan/WizardLM"
"meta-llama/codellama" -> "meta-llama/llama3"
"meta-llama/codellama" -> "facebookresearch/seamless_communication" ["e"=1]
"meta-llama/codellama" -> "lm-sys/FastChat"
"meta-llama/codellama" -> "haotian-liu/LLaVA" ["e"=1]
"meta-llama/codellama" -> "vllm-project/vllm"
"meta-llama/codellama" -> "ggml-org/llama.cpp"
"meta-llama/codellama" -> "microsoft/autogen"
"meta-llama/codellama" -> "run-llama/llama_index"
"meta-llama/codellama" -> "tatsu-lab/stanford_alpaca"
"meta-llama/codellama" -> "FoundationAgents/MetaGPT"
"meta-llama/codellama" -> "karpathy/llama2.c"
"meta-llama/codellama" -> "artidoro/qlora"
"meta-llama/llama" -> "tatsu-lab/stanford_alpaca"
"meta-llama/llama" -> "ggml-org/llama.cpp"
"meta-llama/llama" -> "lm-sys/FastChat"
"meta-llama/llama" -> "langchain-ai/langchain"
"meta-llama/llama" -> "deepspeedai/DeepSpeed"
"meta-llama/llama" -> "THUDM/ChatGLM-6B" ["e"=1]
"meta-llama/llama" -> "vllm-project/vllm"
"meta-llama/llama" -> "meta-llama/llama3"
"meta-llama/llama" -> "huggingface/transformers"
"meta-llama/llama" -> "hiyouga/LLaMA-Factory"
"meta-llama/llama" -> "hpcaitech/ColossalAI"
"meta-llama/llama" -> "ymcui/Chinese-LLaMA-Alpaca" ["e"=1]
"meta-llama/llama" -> "meta-llama/llama-cookbook"
"meta-llama/llama" -> "facebookresearch/segment-anything" ["e"=1]
"meta-llama/llama" -> "run-llama/llama_index"
"chenfei-wu/TaskMatrix" -> "microsoft/JARVIS"
"chenfei-wu/TaskMatrix" -> "Vision-CAIR/MiniGPT-4"
"chenfei-wu/TaskMatrix" -> "facebookresearch/segment-anything" ["e"=1]
"chenfei-wu/TaskMatrix" -> "tatsu-lab/stanford_alpaca"
"chenfei-wu/TaskMatrix" -> "hpcaitech/ColossalAI"
"chenfei-wu/TaskMatrix" -> "lm-sys/FastChat"
"chenfei-wu/TaskMatrix" -> "lllyasviel/ControlNet" ["e"=1]
"chenfei-wu/TaskMatrix" -> "THUDM/ChatGLM-6B" ["e"=1]
"chenfei-wu/TaskMatrix" -> "meta-llama/llama"
"chenfei-wu/TaskMatrix" -> "deepspeedai/DeepSpeed"
"chenfei-wu/TaskMatrix" -> "openai/chatgpt-retrieval-plugin"
"chenfei-wu/TaskMatrix" -> "Significant-Gravitas/AutoGPT"
"chenfei-wu/TaskMatrix" -> "openai/openai-cookbook"
"chenfei-wu/TaskMatrix" -> "LAION-AI/Open-Assistant"
"chenfei-wu/TaskMatrix" -> "langchain-ai/langchain"
"shawwn/llama-dl" -> "tloen/llama-int8" ["e"=1]
"shawwn/llama-dl" -> "antimatter15/alpaca.cpp"
"shawwn/llama-dl" -> "cocktailpeanut/dalai"
"shawwn/llama-dl" -> "juncongmoo/pyllama"
"shawwn/llama-dl" -> "FMInference/FlexLLMGen" ["e"=1]
"shawwn/llama-dl" -> "tloen/alpaca-lora"
"shawwn/llama-dl" -> "nebuly-ai/optimate"
"shawwn/llama-dl" -> "OpenGVLab/LLaMA-Adapter"
"shawwn/llama-dl" -> "randaller/llama-chat" ["e"=1]
"shawwn/llama-dl" -> "qwopqwop200/GPTQ-for-LLaMa"
"shawwn/llama-dl" -> "tatsu-lab/stanford_alpaca"
"shawwn/llama-dl" -> "togethercomputer/OpenChatKit"
"shawwn/llama-dl" -> "Lightning-AI/lit-llama"
"shawwn/llama-dl" -> "markasoftware/llama-cpu" ["e"=1]
"shawwn/llama-dl" -> "openlm-research/open_llama"
"lm-sys/FastChat" -> "tatsu-lab/stanford_alpaca"
"lm-sys/FastChat" -> "vllm-project/vllm"
"lm-sys/FastChat" -> "tloen/alpaca-lora"
"lm-sys/FastChat" -> "hiyouga/LLaMA-Factory"
"lm-sys/FastChat" -> "ymcui/Chinese-LLaMA-Alpaca" ["e"=1]
"lm-sys/FastChat" -> "meta-llama/llama"
"lm-sys/FastChat" -> "deepspeedai/DeepSpeed"
"lm-sys/FastChat" -> "THUDM/ChatGLM-6B" ["e"=1]
"lm-sys/FastChat" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"lm-sys/FastChat" -> "Vision-CAIR/MiniGPT-4"
"lm-sys/FastChat" -> "hpcaitech/ColossalAI"
"lm-sys/FastChat" -> "run-llama/llama_index"
"lm-sys/FastChat" -> "oobabooga/text-generation-webui"
"lm-sys/FastChat" -> "huggingface/peft"
"lm-sys/FastChat" -> "langchain-ai/langchain"
"openai/chatgpt-retrieval-plugin" -> "run-llama/llama_index"
"openai/chatgpt-retrieval-plugin" -> "yoheinakajima/babyagi" ["e"=1]
"openai/chatgpt-retrieval-plugin" -> "openai/openai-cookbook"
"openai/chatgpt-retrieval-plugin" -> "mayooear/ai-pdf-chatbot-langchain" ["e"=1]
"openai/chatgpt-retrieval-plugin" -> "microsoft/JARVIS"
"openai/chatgpt-retrieval-plugin" -> "openai/evals"
"openai/chatgpt-retrieval-plugin" -> "tatsu-lab/stanford_alpaca"
"openai/chatgpt-retrieval-plugin" -> "mckaywrigley/chatbot-ui"
"openai/chatgpt-retrieval-plugin" -> "reworkd/AgentGPT"
"openai/chatgpt-retrieval-plugin" -> "langchain-ai/langchain"
"openai/chatgpt-retrieval-plugin" -> "lm-sys/FastChat"
"openai/chatgpt-retrieval-plugin" -> "chenfei-wu/TaskMatrix"
"openai/chatgpt-retrieval-plugin" -> "guidance-ai/guidance"
"openai/chatgpt-retrieval-plugin" -> "LAION-AI/Open-Assistant"
"openai/chatgpt-retrieval-plugin" -> "dair-ai/Prompt-Engineering-Guide"
"openlm-research/open_llama" -> "togethercomputer/RedPajama-Data"
"openlm-research/open_llama" -> "Lightning-AI/lit-llama"
"openlm-research/open_llama" -> "mosaicml/llm-foundry"
"openlm-research/open_llama" -> "tloen/alpaca-lora"
"openlm-research/open_llama" -> "nlpxucan/WizardLM"
"openlm-research/open_llama" -> "artidoro/qlora"
"openlm-research/open_llama" -> "young-geng/EasyLM"
"openlm-research/open_llama" -> "OpenGVLab/LLaMA-Adapter"
"openlm-research/open_llama" -> "Stability-AI/StableLM"
"openlm-research/open_llama" -> "tatsu-lab/stanford_alpaca"
"openlm-research/open_llama" -> "databrickslabs/dolly"
"openlm-research/open_llama" -> "lm-sys/FastChat"
"openlm-research/open_llama" -> "eugeneyan/open-llms"
"openlm-research/open_llama" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"openlm-research/open_llama" -> "BlinkDL/RWKV-LM"
"Zeyi-Lin/HivisionIDPhotos" -> "harry0703/MoneyPrinterTurbo"
"Zeyi-Lin/HivisionIDPhotos" -> "opendatalab/MinerU"
"Zeyi-Lin/HivisionIDPhotos" -> "Huanshere/VideoLingo"
"Zeyi-Lin/HivisionIDPhotos" -> "fishaudio/fish-speech" ["e"=1]
"Zeyi-Lin/HivisionIDPhotos" -> "hiroi-sora/Umi-OCR" ["e"=1]
"Zeyi-Lin/HivisionIDPhotos" -> "2noise/ChatTTS" ["e"=1]
"Zeyi-Lin/HivisionIDPhotos" -> "Byaidu/PDFMathTranslate"
"Zeyi-Lin/HivisionIDPhotos" -> "jianchang512/pyvideotrans" ["e"=1]
"Zeyi-Lin/HivisionIDPhotos" -> "LC044/WeChatMsg" ["e"=1]
"Zeyi-Lin/HivisionIDPhotos" -> "lobehub/lobe-chat"
"Zeyi-Lin/HivisionIDPhotos" -> "Guovin/iptv-api" ["e"=1]
"Zeyi-Lin/HivisionIDPhotos" -> "RSSNext/Folo"
"Zeyi-Lin/HivisionIDPhotos" -> "tw93/Pake" ["e"=1]
"Zeyi-Lin/HivisionIDPhotos" -> "Stirling-Tools/Stirling-PDF" ["e"=1]
"Zeyi-Lin/HivisionIDPhotos" -> "1Panel-dev/MaxKB"
"Vision-CAIR/MiniGPT-4" -> "lm-sys/FastChat"
"Vision-CAIR/MiniGPT-4" -> "haotian-liu/LLaVA" ["e"=1]
"Vision-CAIR/MiniGPT-4" -> "THUDM/ChatGLM-6B" ["e"=1]
"Vision-CAIR/MiniGPT-4" -> "tatsu-lab/stanford_alpaca"
"Vision-CAIR/MiniGPT-4" -> "salesforce/LAVIS" ["e"=1]
"Vision-CAIR/MiniGPT-4" -> "deepspeedai/DeepSpeed"
"Vision-CAIR/MiniGPT-4" -> "ymcui/Chinese-LLaMA-Alpaca" ["e"=1]
"Vision-CAIR/MiniGPT-4" -> "microsoft/JARVIS"
"Vision-CAIR/MiniGPT-4" -> "hpcaitech/ColossalAI"
"Vision-CAIR/MiniGPT-4" -> "OpenMOSS/MOSS" ["e"=1]
"Vision-CAIR/MiniGPT-4" -> "facebookresearch/segment-anything" ["e"=1]
"Vision-CAIR/MiniGPT-4" -> "BradyFU/Awesome-Multimodal-Large-Language-Models" ["e"=1]
"Vision-CAIR/MiniGPT-4" -> "Stability-AI/StableLM"
"Vision-CAIR/MiniGPT-4" -> "meta-llama/llama"
"Vision-CAIR/MiniGPT-4" -> "chenfei-wu/TaskMatrix"
"mckaywrigley/chatbot-ui" -> "danny-avila/LibreChat"
"mckaywrigley/chatbot-ui" -> "reworkd/AgentGPT"
"mckaywrigley/chatbot-ui" -> "ChatGPTNextWeb/NextChat" ["e"=1]
"mckaywrigley/chatbot-ui" -> "mayooear/ai-pdf-chatbot-langchain" ["e"=1]
"mckaywrigley/chatbot-ui" -> "run-llama/llama_index"
"mckaywrigley/chatbot-ui" -> "openai/chatgpt-retrieval-plugin"
"mckaywrigley/chatbot-ui" -> "lobehub/lobe-chat"
"mckaywrigley/chatbot-ui" -> "FlowiseAI/Flowise"
"mckaywrigley/chatbot-ui" -> "nomic-ai/gpt4all"
"mckaywrigley/chatbot-ui" -> "yoheinakajima/babyagi" ["e"=1]
"mckaywrigley/chatbot-ui" -> "langchain-ai/langchain"
"mckaywrigley/chatbot-ui" -> "chatboxai/chatbox" ["e"=1]
"mckaywrigley/chatbot-ui" -> "openai/openai-cookbook"
"mckaywrigley/chatbot-ui" -> "open-webui/open-webui"
"mckaywrigley/chatbot-ui" -> "QuivrHQ/quivr"
"deep-diver/LLM-As-Chatbot" -> "tloen/alpaca-lora"
"deep-diver/LLM-As-Chatbot" -> "Beomi/KoAlpaca" ["e"=1]
"deep-diver/LLM-As-Chatbot" -> "OpenGVLab/LLaMA-Adapter"
"deep-diver/LLM-As-Chatbot" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"deep-diver/LLM-As-Chatbot" -> "Lightning-AI/lit-llama"
"deep-diver/LLM-As-Chatbot" -> "project-baize/baize-chatbot" ["e"=1]
"deep-diver/LLM-As-Chatbot" -> "gururise/AlpacaDataCleaned" ["e"=1]
"deep-diver/LLM-As-Chatbot" -> "qwopqwop200/GPTQ-for-LLaMa"
"deep-diver/LLM-As-Chatbot" -> "teknium1/GPTeacher" ["e"=1]
"deep-diver/LLM-As-Chatbot" -> "openlm-research/open_llama"
"deep-diver/LLM-As-Chatbot" -> "mosaicml/llm-foundry"
"deep-diver/LLM-As-Chatbot" -> "antimatter15/alpaca.cpp"
"deep-diver/LLM-As-Chatbot" -> "nlpxucan/WizardLM"
"deep-diver/LLM-As-Chatbot" -> "turboderp/exllama" ["e"=1]
"deep-diver/LLM-As-Chatbot" -> "artidoro/qlora"
"tatsu-lab/stanford_alpaca" -> "tloen/alpaca-lora"
"tatsu-lab/stanford_alpaca" -> "lm-sys/FastChat"
"tatsu-lab/stanford_alpaca" -> "meta-llama/llama"
"tatsu-lab/stanford_alpaca" -> "ymcui/Chinese-LLaMA-Alpaca" ["e"=1]
"tatsu-lab/stanford_alpaca" -> "huggingface/peft"
"tatsu-lab/stanford_alpaca" -> "THUDM/ChatGLM-6B" ["e"=1]
"tatsu-lab/stanford_alpaca" -> "hpcaitech/ColossalAI"
"tatsu-lab/stanford_alpaca" -> "deepspeedai/DeepSpeed"
"tatsu-lab/stanford_alpaca" -> "LianjiaTech/BELLE" ["e"=1]
"tatsu-lab/stanford_alpaca" -> "run-llama/llama_index"
"tatsu-lab/stanford_alpaca" -> "ggml-org/llama.cpp"
"tatsu-lab/stanford_alpaca" -> "Vision-CAIR/MiniGPT-4"
"tatsu-lab/stanford_alpaca" -> "vllm-project/vllm"
"tatsu-lab/stanford_alpaca" -> "yizhongw/self-instruct" ["e"=1]
"tatsu-lab/stanford_alpaca" -> "hiyouga/LLaMA-Factory"
"cocktailpeanut/dalai" -> "antimatter15/alpaca.cpp"
"cocktailpeanut/dalai" -> "tloen/alpaca-lora"
"cocktailpeanut/dalai" -> "tatsu-lab/stanford_alpaca"
"cocktailpeanut/dalai" -> "oobabooga/text-generation-webui"
"cocktailpeanut/dalai" -> "nomic-ai/gpt4all"
"cocktailpeanut/dalai" -> "ggml-org/llama.cpp"
"cocktailpeanut/dalai" -> "lm-sys/FastChat"
"cocktailpeanut/dalai" -> "LAION-AI/Open-Assistant"
"cocktailpeanut/dalai" -> "Stability-AI/StableLM"
"cocktailpeanut/dalai" -> "yoheinakajima/babyagi" ["e"=1]
"cocktailpeanut/dalai" -> "databrickslabs/dolly"
"cocktailpeanut/dalai" -> "microsoft/JARVIS"
"cocktailpeanut/dalai" -> "serge-chat/serge"
"cocktailpeanut/dalai" -> "run-llama/llama_index"
"cocktailpeanut/dalai" -> "mayooear/ai-pdf-chatbot-langchain" ["e"=1]
"dottxt-ai/outlines" -> "567-labs/instructor"
"dottxt-ai/outlines" -> "guidance-ai/guidance"
"dottxt-ai/outlines" -> "stanfordnlp/dspy"
"dottxt-ai/outlines" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"dottxt-ai/outlines" -> "1rgs/jsonformer"
"dottxt-ai/outlines" -> "eth-sri/lmql"
"dottxt-ai/outlines" -> "sgl-project/sglang" ["e"=1]
"dottxt-ai/outlines" -> "BerriAI/litellm"
"dottxt-ai/outlines" -> "guardrails-ai/guardrails"
"dottxt-ai/outlines" -> "huggingface/text-generation-inference" ["e"=1]
"dottxt-ai/outlines" -> "explodinggradients/ragas"
"dottxt-ai/outlines" -> "vllm-project/vllm"
"dottxt-ai/outlines" -> "noamgat/lm-format-enforcer"
"dottxt-ai/outlines" -> "ShishirPatil/gorilla" ["e"=1]
"dottxt-ai/outlines" -> "Unstructured-IO/unstructured"
"mudler/LocalAI" -> "FlowiseAI/Flowise"
"mudler/LocalAI" -> "Mintplex-Labs/anything-llm"
"mudler/LocalAI" -> "oobabooga/text-generation-webui"
"mudler/LocalAI" -> "nomic-ai/gpt4all"
"mudler/LocalAI" -> "zylon-ai/private-gpt"
"mudler/LocalAI" -> "open-webui/open-webui"
"mudler/LocalAI" -> "QuivrHQ/quivr"
"mudler/LocalAI" -> "menloresearch/jan"
"mudler/LocalAI" -> "ollama/ollama"
"mudler/LocalAI" -> "khoj-ai/khoj"
"mudler/LocalAI" -> "ggml-org/llama.cpp"
"mudler/LocalAI" -> "TabbyML/tabby"
"mudler/LocalAI" -> "All-Hands-AI/OpenHands"
"mudler/LocalAI" -> "BerriAI/litellm"
"mudler/LocalAI" -> "ItzCrazyKns/Perplexica"
"567-labs/instructor" -> "dottxt-ai/outlines"
"567-labs/instructor" -> "stanfordnlp/dspy"
"567-labs/instructor" -> "BerriAI/litellm"
"567-labs/instructor" -> "PrefectHQ/marvin" ["e"=1]
"567-labs/instructor" -> "guidance-ai/guidance"
"567-labs/instructor" -> "explodinggradients/ragas"
"567-labs/instructor" -> "pydantic/pydantic-ai"
"567-labs/instructor" -> "Unstructured-IO/unstructured"
"567-labs/instructor" -> "letta-ai/letta"
"567-labs/instructor" -> "guardrails-ai/guardrails"
"567-labs/instructor" -> "crewAIInc/crewAI"
"567-labs/instructor" -> "AnswerDotAI/RAGatouille"
"567-labs/instructor" -> "run-llama/llama_index"
"567-labs/instructor" -> "langfuse/langfuse"
"567-labs/instructor" -> "VRSEN/agency-swarm"
"SynaLinks/HybridAGI" -> "SynaLinks/synalinks"
"SynaLinks/HybridAGI" -> "kuzudb/kuzu" ["e"=1]
"SynaLinks/HybridAGI" -> "tomasonjo/blogs" ["e"=1]
"SynaLinks/HybridAGI" -> "FalkorDB/FalkorDB" ["e"=1]
"SynaLinks/HybridAGI" -> "SylphAI-Inc/AdalFlow"
"SynaLinks/HybridAGI" -> "rahulnyk/graph_maker" ["e"=1]
"SynaLinks/HybridAGI" -> "seanchatmangpt/dspygen"
"SynaLinks/HybridAGI" -> "urchade/GLiNER"
"SynaLinks/HybridAGI" -> "SapienzaNLP/relik"
"SynaLinks/HybridAGI" -> "zou-group/textgrad"
"SynaLinks/HybridAGI" -> "neo4j-labs/text2cypher" ["e"=1]
"SynaLinks/HybridAGI" -> "yoheinakajima/mindgraph"
"SynaLinks/HybridAGI" -> "neo4j/NaLLM" ["e"=1]
"SynaLinks/HybridAGI" -> "neo4j-labs/llm-graph-builder"
"SynaLinks/HybridAGI" -> "topoteretes/cognee"
"bricks-cloud/BricksLLM" -> "getzep/zep"
"bricks-cloud/BricksLLM" -> "elfvingralf/macOSpilot-ai-assistant"
"bricks-cloud/BricksLLM" -> "axflow/axflow"
"bricks-cloud/BricksLLM" -> "BerriAI/liteLLM-proxy"
"bricks-cloud/BricksLLM" -> "Portkey-AI/gateway"
"bricks-cloud/BricksLLM" -> "NeumTry/NeumAI"
"mangiucugna/json_repair" -> "josdejong/jsonrepair"
"mangiucugna/json_repair" -> "dottxt-ai/outlines"
"mangiucugna/json_repair" -> "gusye1234/nano-graphrag"
"mangiucugna/json_repair" -> "noamgat/lm-format-enforcer"
"mangiucugna/json_repair" -> "argilla-io/distilabel" ["e"=1]
"mangiucugna/json_repair" -> "FlagOpen/FlagEmbedding" ["e"=1]
"mangiucugna/json_repair" -> "GAIR-NLP/O1-Journey" ["e"=1]
"mangiucugna/json_repair" -> "RealAlexandreAI/json-repair"
"mangiucugna/json_repair" -> "netease-youdao/BCEmbedding" ["e"=1]
"mangiucugna/json_repair" -> "chonkie-ai/chonkie"
"mangiucugna/json_repair" -> "567-labs/instructor"
"mangiucugna/json_repair" -> "qhjqhj00/MemoRAG"
"mangiucugna/json_repair" -> "InternLM/MindSearch"
"mangiucugna/json_repair" -> "MeetKai/functionary"
"mangiucugna/json_repair" -> "OpenRLHF/OpenRLHF" ["e"=1]
"google-gemini/deprecated-generative-ai-python" -> "google/generative-ai-docs"
"google-gemini/deprecated-generative-ai-python" -> "googleapis/python-genai"
"google-gemini/deprecated-generative-ai-python" -> "google-gemini/cookbook"
"google-gemini/deprecated-generative-ai-python" -> "google-gemini/deprecated-generative-ai-js"
"google-gemini/deprecated-generative-ai-python" -> "google-gemini/gemma-cookbook"
"google-gemini/deprecated-generative-ai-python" -> "anthropics/anthropic-sdk-python"
"google-gemini/deprecated-generative-ai-python" -> "GoogleCloudPlatform/generative-ai"
"google-gemini/deprecated-generative-ai-python" -> "GoogleCloudPlatform/vertex-ai-samples" ["e"=1]
"google-gemini/deprecated-generative-ai-python" -> "google-gemini/deprecated-generative-ai-android" ["e"=1]
"google-gemini/deprecated-generative-ai-python" -> "googleapis/python-aiplatform" ["e"=1]
"google-gemini/deprecated-generative-ai-python" -> "google-gemini/starter-applets"
"google-gemini/deprecated-generative-ai-python" -> "google-gemini/live-api-web-console"
"google-gemini/deprecated-generative-ai-python" -> "google-gemini/deprecated-generative-ai-swift" ["e"=1]
"google-gemini/deprecated-generative-ai-python" -> "anthropics/anthropic-cookbook"
"google-gemini/deprecated-generative-ai-python" -> "NVIDIA/GenerativeAIExamples"
"hiyouga/LLaMA-Factory" -> "vllm-project/vllm"
"hiyouga/LLaMA-Factory" -> "unslothai/unsloth"
"hiyouga/LLaMA-Factory" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"hiyouga/LLaMA-Factory" -> "lm-sys/FastChat"
"hiyouga/LLaMA-Factory" -> "huggingface/peft"
"hiyouga/LLaMA-Factory" -> "HqWu-HITCS/Awesome-Chinese-LLM" ["e"=1]
"hiyouga/LLaMA-Factory" -> "THUDM/ChatGLM-6B" ["e"=1]
"hiyouga/LLaMA-Factory" -> "liguodongiot/llm-action" ["e"=1]
"hiyouga/LLaMA-Factory" -> "langgenius/dify"
"hiyouga/LLaMA-Factory" -> "infiniflow/ragflow"
"hiyouga/LLaMA-Factory" -> "ymcui/Chinese-LLaMA-Alpaca" ["e"=1]
"hiyouga/LLaMA-Factory" -> "deepspeedai/DeepSpeed"
"hiyouga/LLaMA-Factory" -> "meta-llama/llama"
"hiyouga/LLaMA-Factory" -> "QwenLM/Qwen" ["e"=1]
"hiyouga/LLaMA-Factory" -> "langchain-ai/langchain"
"Aider-AI/aider" -> "cline/cline"
"Aider-AI/aider" -> "All-Hands-AI/OpenHands"
"Aider-AI/aider" -> "continuedev/continue"
"Aider-AI/aider" -> "crewAIInc/crewAI"
"Aider-AI/aider" -> "microsoft/autogen"
"Aider-AI/aider" -> "BerriAI/litellm"
"Aider-AI/aider" -> "OpenInterpreter/open-interpreter"
"Aider-AI/aider" -> "Pythagora-io/gpt-pilot"
"Aider-AI/aider" -> "SWE-agent/SWE-agent"
"Aider-AI/aider" -> "agno-agi/agno"
"Aider-AI/aider" -> "mendableai/firecrawl"
"Aider-AI/aider" -> "assafelovic/gpt-researcher"
"Aider-AI/aider" -> "FoundationAgents/MetaGPT"
"Aider-AI/aider" -> "mem0ai/mem0"
"Aider-AI/aider" -> "danielmiessler/fabric"
"microsoft/JARVIS" -> "yoheinakajima/babyagi" ["e"=1]
"microsoft/JARVIS" -> "lm-sys/FastChat"
"microsoft/JARVIS" -> "reworkd/AgentGPT"
"microsoft/JARVIS" -> "Vision-CAIR/MiniGPT-4"
"microsoft/JARVIS" -> "tatsu-lab/stanford_alpaca"
"microsoft/JARVIS" -> "chenfei-wu/TaskMatrix"
"microsoft/JARVIS" -> "deepspeedai/DeepSpeed"
"microsoft/JARVIS" -> "LAION-AI/Open-Assistant"
"microsoft/JARVIS" -> "openai/chatgpt-retrieval-plugin"
"microsoft/JARVIS" -> "Significant-Gravitas/AutoGPT"
"microsoft/JARVIS" -> "langchain-ai/langchain"
"microsoft/JARVIS" -> "run-llama/llama_index"
"microsoft/JARVIS" -> "hpcaitech/ColossalAI"
"microsoft/JARVIS" -> "facebookresearch/segment-anything" ["e"=1]
"microsoft/JARVIS" -> "nomic-ai/gpt4all"
"spotify/voyager" -> "unum-cloud/usearch" ["e"=1]
"spotify/voyager" -> "koaning/embetter" ["e"=1]
"spotify/voyager" -> "nmslib/hnswlib" ["e"=1]
"spotify/voyager" -> "huggingface/setfit" ["e"=1]
"spotify/voyager" -> "spotify/annoy" ["e"=1]
"spotify/voyager" -> "microsoft/DiskANN" ["e"=1]
"spotify/voyager" -> "AnswerDotAI/RAGatouille"
"spotify/voyager" -> "currentslab/awesome-vector-search" ["e"=1]
"spotify/voyager" -> "qdrant/fastembed"
"spotify/voyager" -> "lightonai/pylate"
"spotify/voyager" -> "spotify/sparkey" ["e"=1]
"spotify/voyager" -> "xhluca/bm25s"
"spotify/voyager" -> "criteo/autofaiss" ["e"=1]
"spotify/voyager" -> "explosion/floret" ["e"=1]
"spotify/voyager" -> "urchade/GLiNER"
"labring/FastGPT" -> "songquanpeng/one-api" ["e"=1]
"labring/FastGPT" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"labring/FastGPT" -> "langgenius/dify"
"labring/FastGPT" -> "1Panel-dev/MaxKB"
"labring/FastGPT" -> "infiniflow/ragflow"
"labring/FastGPT" -> "netease-youdao/QAnything"
"labring/FastGPT" -> "zhayujie/chatgpt-on-wechat" ["e"=1]
"labring/FastGPT" -> "lobehub/lobe-chat"
"labring/FastGPT" -> "eosphoros-ai/DB-GPT"
"labring/FastGPT" -> "ChatGPTNextWeb/NextChat" ["e"=1]
"labring/FastGPT" -> "xorbitsai/inference"
"labring/FastGPT" -> "CherryHQ/cherry-studio"
"labring/FastGPT" -> "microsoft/graphrag"
"labring/FastGPT" -> "THUDM/ChatGLM-6B" ["e"=1]
"labring/FastGPT" -> "THUDM/ChatGLM3" ["e"=1]
"TabbyML/tabby" -> "continuedev/continue"
"TabbyML/tabby" -> "khoj-ai/khoj"
"TabbyML/tabby" -> "mudler/LocalAI"
"TabbyML/tabby" -> "Aider-AI/aider"
"TabbyML/tabby" -> "All-Hands-AI/OpenHands"
"TabbyML/tabby" -> "cline/cline"
"TabbyML/tabby" -> "stanford-oval/storm"
"TabbyML/tabby" -> "Mintplex-Labs/anything-llm"
"TabbyML/tabby" -> "menloresearch/jan"
"TabbyML/tabby" -> "fauxpilot/fauxpilot" ["e"=1]
"TabbyML/tabby" -> "Pythagora-io/gpt-pilot"
"TabbyML/tabby" -> "toeverything/AFFiNE" ["e"=1]
"TabbyML/tabby" -> "makeplane/plane" ["e"=1]
"TabbyML/tabby" -> "QuivrHQ/quivr"
"TabbyML/tabby" -> "exo-explore/exo"
"sigoden/aichat" -> "sigoden/llm-functions" ["e"=1]
"sigoden/aichat" -> "TheR1D/shell_gpt"
"sigoden/aichat" -> "simonw/llm"
"sigoden/aichat" -> "Aider-AI/aider"
"sigoden/aichat" -> "yetone/avante.nvim" ["e"=1]
"sigoden/aichat" -> "charmbracelet/mods" ["e"=1]
"sigoden/aichat" -> "sxyazi/yazi" ["e"=1]
"sigoden/aichat" -> "aandrew-me/tgpt"
"sigoden/aichat" -> "olimorris/codecompanion.nvim" ["e"=1]
"sigoden/aichat" -> "ratatui/ratatui" ["e"=1]
"sigoden/aichat" -> "npiv/chatblade" ["e"=1]
"sigoden/aichat" -> "EricLBuehler/mistral.rs" ["e"=1]
"sigoden/aichat" -> "zellij-org/zellij" ["e"=1]
"sigoden/aichat" -> "gptme/gptme"
"sigoden/aichat" -> "atuinsh/atuin" ["e"=1]
"simonw/llm" -> "simonw/files-to-prompt"
"simonw/llm" -> "Aider-AI/aider"
"simonw/llm" -> "567-labs/instructor"
"simonw/llm" -> "Mozilla-Ocho/llamafile"
"simonw/llm" -> "BerriAI/litellm"
"simonw/llm" -> "sigoden/aichat"
"simonw/llm" -> "simonw/datasette" ["e"=1]
"simonw/llm" -> "promptfoo/promptfoo"
"simonw/llm" -> "dottxt-ai/outlines"
"simonw/llm" -> "stanfordnlp/dspy"
"simonw/llm" -> "pydantic/pydantic-ai"
"simonw/llm" -> "MadcowD/ell"
"simonw/llm" -> "marimo-team/marimo" ["e"=1]
"simonw/llm" -> "yamadashy/repomix"
"simonw/llm" -> "simonw/shot-scraper" ["e"=1]
"eosphoros-ai/DB-GPT" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"eosphoros-ai/DB-GPT" -> "labring/FastGPT"
"eosphoros-ai/DB-GPT" -> "vanna-ai/vanna"
"eosphoros-ai/DB-GPT" -> "netease-youdao/QAnything"
"eosphoros-ai/DB-GPT" -> "CodePhiliaX/Chat2DB"
"eosphoros-ai/DB-GPT" -> "lm-sys/FastChat"
"eosphoros-ai/DB-GPT" -> "microsoft/graphrag"
"eosphoros-ai/DB-GPT" -> "eosphoros-ai/DB-GPT-Hub" ["e"=1]
"eosphoros-ai/DB-GPT" -> "ymcui/Chinese-LLaMA-Alpaca" ["e"=1]
"eosphoros-ai/DB-GPT" -> "xorbitsai/inference"
"eosphoros-ai/DB-GPT" -> "hiyouga/LLaMA-Factory"
"eosphoros-ai/DB-GPT" -> "tencentmusic/supersonic" ["e"=1]
"eosphoros-ai/DB-GPT" -> "THUDM/ChatGLM2-6B" ["e"=1]
"eosphoros-ai/DB-GPT" -> "infiniflow/ragflow"
"eosphoros-ai/DB-GPT" -> "FoundationAgents/MetaGPT"
"onyx-dot-app/onyx" -> "QuivrHQ/quivr"
"onyx-dot-app/onyx" -> "assafelovic/gpt-researcher"
"onyx-dot-app/onyx" -> "mem0ai/mem0"
"onyx-dot-app/onyx" -> "BerriAI/litellm"
"onyx-dot-app/onyx" -> "agno-agi/agno"
"onyx-dot-app/onyx" -> "FlowiseAI/Flowise"
"onyx-dot-app/onyx" -> "letta-ai/letta"
"onyx-dot-app/onyx" -> "ItzCrazyKns/Perplexica"
"onyx-dot-app/onyx" -> "Cinnamon/kotaemon"
"onyx-dot-app/onyx" -> "Mintplex-Labs/anything-llm"
"onyx-dot-app/onyx" -> "stanfordnlp/dspy"
"onyx-dot-app/onyx" -> "crewAIInc/crewAI"
"onyx-dot-app/onyx" -> "Skyvern-AI/skyvern"
"onyx-dot-app/onyx" -> "Unstructured-IO/unstructured"
"onyx-dot-app/onyx" -> "run-llama/llama_index"
"langfuse/langfuse" -> "BerriAI/litellm"
"langfuse/langfuse" -> "Arize-ai/phoenix"
"langfuse/langfuse" -> "langchain-ai/langgraph"
"langfuse/langfuse" -> "explodinggradients/ragas"
"langfuse/langfuse" -> "stanfordnlp/dspy"
"langfuse/langfuse" -> "confident-ai/deepeval"
"langfuse/langfuse" -> "567-labs/instructor"
"langfuse/langfuse" -> "promptfoo/promptfoo"
"langfuse/langfuse" -> "Unstructured-IO/unstructured"
"langfuse/langfuse" -> "deepset-ai/haystack"
"langfuse/langfuse" -> "mem0ai/mem0"
"langfuse/langfuse" -> "crewAIInc/crewAI"
"langfuse/langfuse" -> "run-llama/llama_index"
"langfuse/langfuse" -> "Helicone/helicone"
"langfuse/langfuse" -> "pydantic/pydantic-ai"
"jackmpcollins/magentic" -> "PrefectHQ/marvin" ["e"=1]
"jackmpcollins/magentic" -> "567-labs/instructor"
"jackmpcollins/magentic" -> "eth-sri/lmql"
"jackmpcollins/magentic" -> "langroid/langroid"
"jackmpcollins/magentic" -> "dottxt-ai/outlines"
"jackmpcollins/magentic" -> "minimaxir/simpleaichat" ["e"=1]
"jackmpcollins/magentic" -> "1rgs/jsonformer"
"jackmpcollins/magentic" -> "griptape-ai/griptape"
"jackmpcollins/magentic" -> "Mirascope/mirascope"
"jackmpcollins/magentic" -> "hegelai/prompttools"
"jackmpcollins/magentic" -> "OpenPipe/OpenPipe"
"jackmpcollins/magentic" -> "simonw/llm"
"jackmpcollins/magentic" -> "Yifan-Song793/RestGPT"
"jackmpcollins/magentic" -> "approximatelabs/sketch" ["e"=1]
"jackmpcollins/magentic" -> "bananaml/fructose"
"microsoft/promptflow" -> "Pythagora-io/gpt-pilot"
"microsoft/promptflow" -> "microsoft/autogen"
"microsoft/promptflow" -> "microsoft/semantic-kernel"
"microsoft/promptflow" -> "BerriAI/litellm"
"microsoft/promptflow" -> "stanfordnlp/dspy"
"microsoft/promptflow" -> "letta-ai/letta"
"microsoft/promptflow" -> "guidance-ai/guidance"
"microsoft/promptflow" -> "mem0ai/mem0"
"microsoft/promptflow" -> "microsoft/TaskWeaver"
"microsoft/promptflow" -> "FlowiseAI/Flowise"
"microsoft/promptflow" -> "aiwaves-cn/agents" ["e"=1]
"microsoft/promptflow" -> "assafelovic/gpt-researcher"
"microsoft/promptflow" -> "run-llama/llama_index"
"microsoft/promptflow" -> "microsoft/graphrag"
"microsoft/promptflow" -> "explodinggradients/ragas"
"BerriAI/litellm" -> "stanfordnlp/dspy"
"BerriAI/litellm" -> "crewAIInc/crewAI"
"BerriAI/litellm" -> "vllm-project/vllm"
"BerriAI/litellm" -> "567-labs/instructor"
"BerriAI/litellm" -> "microsoft/autogen"
"BerriAI/litellm" -> "mem0ai/mem0"
"BerriAI/litellm" -> "run-llama/llama_index"
"BerriAI/litellm" -> "agno-agi/agno"
"BerriAI/litellm" -> "langfuse/langfuse"
"BerriAI/litellm" -> "letta-ai/letta"
"BerriAI/litellm" -> "Aider-AI/aider"
"BerriAI/litellm" -> "unslothai/unsloth"
"BerriAI/litellm" -> "mendableai/firecrawl"
"BerriAI/litellm" -> "deepset-ai/haystack"
"BerriAI/litellm" -> "FlowiseAI/Flowise"
"langgptai/LangGPT" -> "langgptai/wonderful-prompts" ["e"=1]
"langgptai/LangGPT" -> "EmbraceAGI/awesome-chatgpt-zh" ["e"=1]
"langgptai/LangGPT" -> "labring/FastGPT"
"langgptai/LangGPT" -> "songquanpeng/one-api" ["e"=1]
"langgptai/LangGPT" -> "JushBJJ/Mr.-Ranedeer-AI-Tutor"
"langgptai/LangGPT" -> "richards199999/Thinking-Claude"
"langgptai/LangGPT" -> "CherryHQ/cherry-studio"
"langgptai/LangGPT" -> "linexjlin/GPTs"
"langgptai/LangGPT" -> "CosmosShadow/gptpdf"
"langgptai/LangGPT" -> "QuantumNous/new-api" ["e"=1]
"langgptai/LangGPT" -> "Huanshere/VideoLingo"
"langgptai/LangGPT" -> "rockbenben/ChatGPT-Shortcut" ["e"=1]
"langgptai/LangGPT" -> "bleedline/aimoneyhunter" ["e"=1]
"langgptai/LangGPT" -> "eosphoros-ai/DB-GPT"
"langgptai/LangGPT" -> "netease-youdao/QAnything"
"CodePhiliaX/Chat2DB" -> "alibaba/ali-dbhub" ["e"=1]
"CodePhiliaX/Chat2DB" -> "eosphoros-ai/DB-GPT"
"CodePhiliaX/Chat2DB" -> "labring/FastGPT"
"CodePhiliaX/Chat2DB" -> "vanna-ai/vanna"
"CodePhiliaX/Chat2DB" -> "dataease/dataease" ["e"=1]
"CodePhiliaX/Chat2DB" -> "langgenius/dify"
"CodePhiliaX/Chat2DB" -> "songquanpeng/one-api" ["e"=1]
"CodePhiliaX/Chat2DB" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"CodePhiliaX/Chat2DB" -> "1Panel-dev/1Panel" ["e"=1]
"CodePhiliaX/Chat2DB" -> "1Panel-dev/MaxKB"
"CodePhiliaX/Chat2DB" -> "NaiboWang/EasySpider" ["e"=1]
"CodePhiliaX/Chat2DB" -> "drawdb-io/drawdb" ["e"=1]
"CodePhiliaX/Chat2DB" -> "lobehub/lobe-chat"
"CodePhiliaX/Chat2DB" -> "infiniflow/ragflow"
"CodePhiliaX/Chat2DB" -> "alibaba/easyexcel" ["e"=1]
"PromtEngineer/localGPT" -> "zylon-ai/private-gpt"
"PromtEngineer/localGPT" -> "QuivrHQ/quivr"
"PromtEngineer/localGPT" -> "TransformerOptimus/SuperAGI" ["e"=1]
"PromtEngineer/localGPT" -> "h2oai/h2ogpt"
"PromtEngineer/localGPT" -> "oobabooga/text-generation-webui"
"PromtEngineer/localGPT" -> "nomic-ai/gpt4all"
"PromtEngineer/localGPT" -> "mudler/LocalAI"
"PromtEngineer/localGPT" -> "AntonOsika/gpt-engineer"
"PromtEngineer/localGPT" -> "FlowiseAI/Flowise"
"PromtEngineer/localGPT" -> "FoundationAgents/MetaGPT"
"PromtEngineer/localGPT" -> "OpenInterpreter/open-interpreter"
"PromtEngineer/localGPT" -> "assafelovic/gpt-researcher"
"PromtEngineer/localGPT" -> "mlc-ai/mlc-llm"
"PromtEngineer/localGPT" -> "microsoft/autogen"
"PromtEngineer/localGPT" -> "arc53/DocsGPT"
"vocodedev/vocode-core" -> "pipecat-ai/pipecat"
"vocodedev/vocode-core" -> "livekit/agents"
"vocodedev/vocode-core" -> "fixie-ai/ultravox"
"vocodedev/vocode-core" -> "superagent-ai/superagent" ["e"=1]
"vocodedev/vocode-core" -> "e2b-dev/E2B" ["e"=1]
"vocodedev/vocode-core" -> "finic-ai/finic"
"vocodedev/vocode-core" -> "Helicone/helicone"
"vocodedev/vocode-core" -> "PrefectHQ/marvin" ["e"=1]
"vocodedev/vocode-core" -> "KoljaB/RealtimeTTS" ["e"=1]
"vocodedev/vocode-core" -> "yl4579/StyleTTS2" ["e"=1]
"vocodedev/vocode-core" -> "lavague-ai/LaVague"
"vocodedev/vocode-core" -> "567-labs/instructor"
"vocodedev/vocode-core" -> "voxos-ai/bolna" ["e"=1]
"vocodedev/vocode-core" -> "twilio-labs/call-gpt" ["e"=1]
"vocodedev/vocode-core" -> "TaxyAI/browser-extension" ["e"=1]
"juncongmoo/pyllama" -> "qwopqwop200/GPTQ-for-LLaMa"
"juncongmoo/pyllama" -> "juncongmoo/chatllama" ["e"=1]
"juncongmoo/pyllama" -> "Lightning-AI/lit-llama"
"juncongmoo/pyllama" -> "tloen/alpaca-lora"
"juncongmoo/pyllama" -> "yizhongw/self-instruct" ["e"=1]
"juncongmoo/pyllama" -> "OpenGVLab/LLaMA-Adapter"
"juncongmoo/pyllama" -> "howl-anderson/unlocking-the-power-of-llms" ["e"=1]
"juncongmoo/pyllama" -> "tatsu-lab/stanford_alpaca"
"juncongmoo/pyllama" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"juncongmoo/pyllama" -> "shawwn/llama-dl"
"juncongmoo/pyllama" -> "AetherCortex/Llama-X" ["e"=1]
"juncongmoo/pyllama" -> "CVI-SZU/Linly" ["e"=1]
"juncongmoo/pyllama" -> "nebuly-ai/optimate"
"juncongmoo/pyllama" -> "CarperAI/trlx" ["e"=1]
"juncongmoo/pyllama" -> "Facico/Chinese-Vicuna" ["e"=1]
"togethercomputer/OpenChatKit" -> "tatsu-lab/stanford_alpaca"
"togethercomputer/OpenChatKit" -> "LianjiaTech/BELLE" ["e"=1]
"togethercomputer/OpenChatKit" -> "tloen/alpaca-lora"
"togethercomputer/OpenChatKit" -> "databrickslabs/dolly"
"togethercomputer/OpenChatKit" -> "BlinkDL/ChatRWKV" ["e"=1]
"togethercomputer/OpenChatKit" -> "nebuly-ai/optimate"
"togethercomputer/OpenChatKit" -> "lm-sys/FastChat"
"togethercomputer/OpenChatKit" -> "LAION-AI/Open-Assistant"
"togethercomputer/OpenChatKit" -> "hpcaitech/ColossalAI"
"togethercomputer/OpenChatKit" -> "lucidrains/PaLM-rlhf-pytorch"
"togethercomputer/OpenChatKit" -> "OptimalScale/LMFlow" ["e"=1]
"togethercomputer/OpenChatKit" -> "THUDM/GLM-130B" ["e"=1]
"togethercomputer/OpenChatKit" -> "OpenMOSS/MOSS" ["e"=1]
"togethercomputer/OpenChatKit" -> "Facico/Chinese-Vicuna" ["e"=1]
"togethercomputer/OpenChatKit" -> "Stability-AI/StableLM"
"nlpxucan/WizardLM" -> "artidoro/qlora"
"nlpxucan/WizardLM" -> "lm-sys/FastChat"
"nlpxucan/WizardLM" -> "ShishirPatil/gorilla" ["e"=1]
"nlpxucan/WizardLM" -> "tloen/alpaca-lora"
"nlpxucan/WizardLM" -> "OpenBMB/ToolBench" ["e"=1]
"nlpxucan/WizardLM" -> "openlm-research/open_llama"
"nlpxucan/WizardLM" -> "yizhongw/self-instruct" ["e"=1]
"nlpxucan/WizardLM" -> "togethercomputer/RedPajama-Data"
"nlpxucan/WizardLM" -> "bigcode-project/starcoder"
"nlpxucan/WizardLM" -> "huggingface/trl" ["e"=1]
"nlpxucan/WizardLM" -> "tatsu-lab/stanford_alpaca"
"nlpxucan/WizardLM" -> "meta-llama/codellama"
"nlpxucan/WizardLM" -> "LianjiaTech/BELLE" ["e"=1]
"nlpxucan/WizardLM" -> "huggingface/text-generation-inference" ["e"=1]
"nlpxucan/WizardLM" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"karpathy/llama2.c" -> "karpathy/llm.c"
"karpathy/llama2.c" -> "karpathy/nanoGPT"
"karpathy/llama2.c" -> "ggml-org/llama.cpp"
"karpathy/llama2.c" -> "ggml-org/ggml"
"karpathy/llama2.c" -> "karpathy/minbpe"
"karpathy/llama2.c" -> "vllm-project/vllm"
"karpathy/llama2.c" -> "meta-llama/llama"
"karpathy/llama2.c" -> "Dao-AILab/flash-attention" ["e"=1]
"karpathy/llama2.c" -> "triton-lang/triton" ["e"=1]
"karpathy/llama2.c" -> "tinygrad/tinygrad"
"karpathy/llama2.c" -> "karpathy/micrograd"
"karpathy/llama2.c" -> "mlc-ai/mlc-llm"
"karpathy/llama2.c" -> "karpathy/minGPT"
"karpathy/llama2.c" -> "artidoro/qlora"
"karpathy/llama2.c" -> "naklecha/llama3-from-scratch"
"mem0ai/mem0" -> "agno-agi/agno"
"mem0ai/mem0" -> "microsoft/graphrag"
"mem0ai/mem0" -> "crewAIInc/crewAI"
"mem0ai/mem0" -> "run-llama/llama_index"
"mem0ai/mem0" -> "microsoft/autogen"
"mem0ai/mem0" -> "letta-ai/letta"
"mem0ai/mem0" -> "mendableai/firecrawl"
"mem0ai/mem0" -> "stanfordnlp/dspy"
"mem0ai/mem0" -> "FoundationAgents/MetaGPT"
"mem0ai/mem0" -> "FlowiseAI/Flowise"
"mem0ai/mem0" -> "BerriAI/litellm"
"mem0ai/mem0" -> "assafelovic/gpt-researcher"
"mem0ai/mem0" -> "unclecode/crawl4ai"
"mem0ai/mem0" -> "stanford-oval/storm"
"mem0ai/mem0" -> "All-Hands-AI/OpenHands"
"langchain-ai/langgraph" -> "crewAIInc/crewAI"
"langchain-ai/langgraph" -> "microsoft/autogen"
"langchain-ai/langgraph" -> "microsoft/graphrag"
"langchain-ai/langgraph" -> "openai/swarm"
"langchain-ai/langgraph" -> "langchain-ai/langgraph-studio"
"langchain-ai/langgraph" -> "langfuse/langfuse"
"langchain-ai/langgraph" -> "stanfordnlp/dspy"
"langchain-ai/langgraph" -> "run-llama/llama_index"
"langchain-ai/langgraph" -> "modelcontextprotocol/python-sdk"
"langchain-ai/langgraph" -> "agno-agi/agno"
"langchain-ai/langgraph" -> "assafelovic/gpt-researcher"
"langchain-ai/langgraph" -> "explodinggradients/ragas"
"langchain-ai/langgraph" -> "langchain-ai/langchain"
"langchain-ai/langgraph" -> "BerriAI/litellm"
"langchain-ai/langgraph" -> "pydantic/pydantic-ai"
"enricoros/big-AGI" -> "billmei/every-chatgpt-gui" ["e"=1]
"enricoros/big-AGI" -> "danny-avila/LibreChat"
"enricoros/big-AGI" -> "TransformerOptimus/SuperAGI" ["e"=1]
"enricoros/big-AGI" -> "superagent-ai/superagent" ["e"=1]
"enricoros/big-AGI" -> "mckaywrigley/chatbot-ui"
"enricoros/big-AGI" -> "letta-ai/letta"
"enricoros/big-AGI" -> "assafelovic/gpt-researcher"
"enricoros/big-AGI" -> "mudler/LocalAI"
"enricoros/big-AGI" -> "miurla/morphic"
"enricoros/big-AGI" -> "BerriAI/litellm"
"enricoros/big-AGI" -> "developersdigest/llm-answer-engine"
"enricoros/big-AGI" -> "ItzCrazyKns/Perplexica"
"enricoros/big-AGI" -> "MervinPraison/PraisonAI"
"enricoros/big-AGI" -> "ztjhz/BetterChatGPT" ["e"=1]
"enricoros/big-AGI" -> "Josh-XT/AGiXT" ["e"=1]
"1Panel-dev/MaxKB" -> "labring/FastGPT"
"1Panel-dev/MaxKB" -> "netease-youdao/QAnything"
"1Panel-dev/MaxKB" -> "songquanpeng/one-api" ["e"=1]
"1Panel-dev/MaxKB" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"1Panel-dev/MaxKB" -> "1Panel-dev/1Panel" ["e"=1]
"1Panel-dev/MaxKB" -> "infiniflow/ragflow"
"1Panel-dev/MaxKB" -> "dataease/dataease" ["e"=1]
"1Panel-dev/MaxKB" -> "opendatalab/MinerU"
"1Panel-dev/MaxKB" -> "langgenius/dify"
"1Panel-dev/MaxKB" -> "2noise/ChatTTS" ["e"=1]
"1Panel-dev/MaxKB" -> "harry0703/MoneyPrinterTurbo"
"1Panel-dev/MaxKB" -> "HqWu-HITCS/Awesome-Chinese-LLM" ["e"=1]
"1Panel-dev/MaxKB" -> "CherryHQ/cherry-studio"
"1Panel-dev/MaxKB" -> "zhayujie/chatgpt-on-wechat" ["e"=1]
"1Panel-dev/MaxKB" -> "lobehub/lobe-chat"
"meistrari/cursive" -> "meistrari/resguard"
"meistrari/cursive" -> "meistrari/cursive-py"
"meistrari/cursive-py" -> "meistrari/cursive"
"meistrari/cursive-py" -> "meistrari/resguard"
"Nutlope/pdftochat" -> "Nutlope/notesGPT"
"Nutlope/pdftochat" -> "Nutlope/explorecareers"
"Nutlope/pdftochat" -> "Nutlope/turboseek"
"Nutlope/pdftochat" -> "Nutlope/twitterbio" ["e"=1]
"Nutlope/pdftochat" -> "Nutlope/llamatutor"
"Nutlope/pdftochat" -> "Nutlope/blinkshot"
"Nutlope/pdftochat" -> "Nutlope/description-generator"
"Nutlope/pdftochat" -> "Codehagen/Badget" ["e"=1]
"Nutlope/pdftochat" -> "Nutlope/restorePhotos" ["e"=1]
"Nutlope/pdftochat" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"Nutlope/pdftochat" -> "Nutlope/napkins"
"Nutlope/pdftochat" -> "Nutlope/qrGPT" ["e"=1]
"Nutlope/pdftochat" -> "rajeshdavidbabu/pdf-chat-ai" ["e"=1]
"Nutlope/pdftochat" -> "jacoblee93/fully-local-pdf-chatbot"
"Nutlope/pdftochat" -> "steven-tey/chathn" ["e"=1]
"mosaicml/llm-foundry" -> "mosaicml/composer" ["e"=1]
"mosaicml/llm-foundry" -> "openlm-research/open_llama"
"mosaicml/llm-foundry" -> "togethercomputer/RedPajama-Data"
"mosaicml/llm-foundry" -> "mosaicml/streaming" ["e"=1]
"mosaicml/llm-foundry" -> "artidoro/qlora"
"mosaicml/llm-foundry" -> "Lightning-AI/lit-llama"
"mosaicml/llm-foundry" -> "nlpxucan/WizardLM"
"mosaicml/llm-foundry" -> "databricks/megablocks" ["e"=1]
"mosaicml/llm-foundry" -> "OpenGVLab/LLaMA-Adapter"
"mosaicml/llm-foundry" -> "huggingface/text-generation-inference" ["e"=1]
"mosaicml/llm-foundry" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"mosaicml/llm-foundry" -> "huggingface/nanotron" ["e"=1]
"mosaicml/llm-foundry" -> "EleutherAI/lm-evaluation-harness" ["e"=1]
"mosaicml/llm-foundry" -> "bitsandbytes-foundation/bitsandbytes" ["e"=1]
"mosaicml/llm-foundry" -> "deepspeedai/Megatron-DeepSpeed" ["e"=1]
"confident-ai/deepeval" -> "explodinggradients/ragas"
"confident-ai/deepeval" -> "Arize-ai/phoenix"
"confident-ai/deepeval" -> "langfuse/langfuse"
"confident-ai/deepeval" -> "promptfoo/promptfoo"
"confident-ai/deepeval" -> "stanfordnlp/dspy"
"confident-ai/deepeval" -> "truera/trulens"
"confident-ai/deepeval" -> "EleutherAI/lm-evaluation-harness" ["e"=1]
"confident-ai/deepeval" -> "guardrails-ai/guardrails"
"confident-ai/deepeval" -> "567-labs/instructor"
"confident-ai/deepeval" -> "dottxt-ai/outlines"
"confident-ai/deepeval" -> "BerriAI/litellm"
"confident-ai/deepeval" -> "Unstructured-IO/unstructured"
"confident-ai/deepeval" -> "pydantic/pydantic-ai"
"confident-ai/deepeval" -> "comet-ml/opik"
"confident-ai/deepeval" -> "openai/evals"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "PlexPt/awesome-chatgpt-prompts-zh" ["e"=1]
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "linexjlin/GPTs"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "dair-ai/Prompt-Engineering-Guide"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "langgptai/LangGPT"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "ChatGPTNextWeb/NextChat" ["e"=1]
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "BuilderIO/gpt-crawler"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "FoundationAgents/MetaGPT"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "f/awesome-chatgpt-prompts" ["e"=1]
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "reworkd/AgentGPT"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "openai-translator/openai-translator" ["e"=1]
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "langgenius/dify"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "Significant-Gravitas/AutoGPT"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "QuivrHQ/quivr"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "openai/openai-cookbook"
"JushBJJ/Mr.-Ranedeer-AI-Tutor" -> "chatboxai/chatbox" ["e"=1]
"getcursor/cursor" -> "cline/cline"
"getcursor/cursor" -> "reworkd/AgentGPT"
"getcursor/cursor" -> "chatboxai/chatbox" ["e"=1]
"getcursor/cursor" -> "langchain-ai/langchain"
"getcursor/cursor" -> "openai/chatgpt-retrieval-plugin"
"getcursor/cursor" -> "Significant-Gravitas/AutoGPT"
"getcursor/cursor" -> "chenfei-wu/TaskMatrix"
"getcursor/cursor" -> "ChatGPTNextWeb/NextChat" ["e"=1]
"getcursor/cursor" -> "FoundationAgents/MetaGPT"
"getcursor/cursor" -> "OpenInterpreter/open-interpreter"
"getcursor/cursor" -> "ollama/ollama"
"getcursor/cursor" -> "langgenius/dify"
"getcursor/cursor" -> "openai/openai-cookbook"
"getcursor/cursor" -> "continuedev/continue"
"getcursor/cursor" -> "run-llama/llama_index"
"getumbrel/llama-gpt" -> "QuivrHQ/quivr"
"getumbrel/llama-gpt" -> "PromtEngineer/localGPT"
"getumbrel/llama-gpt" -> "smol-ai/GodMode" ["e"=1]
"getumbrel/llama-gpt" -> "mudler/LocalAI"
"getumbrel/llama-gpt" -> "zylon-ai/private-gpt"
"getumbrel/llama-gpt" -> "kuafuai/DevOpsGPT" ["e"=1]
"getumbrel/llama-gpt" -> "meta-llama/codellama"
"getumbrel/llama-gpt" -> "h2oai/h2ogpt"
"getumbrel/llama-gpt" -> "arc53/DocsGPT"
"getumbrel/llama-gpt" -> "Pythagora-io/gpt-pilot"
"getumbrel/llama-gpt" -> "TabbyML/tabby"
"getumbrel/llama-gpt" -> "OpenInterpreter/open-interpreter"
"getumbrel/llama-gpt" -> "oobabooga/text-generation-webui"
"getumbrel/llama-gpt" -> "menloresearch/jan"
"getumbrel/llama-gpt" -> "FlowiseAI/Flowise"
"a16z-infra/llm-app-stack" -> "a16z-infra/JungleGym"
"a16z-infra/llm-app-stack" -> "a16z-infra/ai-getting-started" ["e"=1]
"a16z-infra/llm-app-stack" -> "tensorchord/Awesome-LLMOps"
"a16z-infra/llm-app-stack" -> "andrewnguonly/Lumos"
"a16z-infra/llm-app-stack" -> "truera/trulens"
"a16z-infra/llm-app-stack" -> "humanlayer/humanlayer"
"a16z-infra/llm-app-stack" -> "hegelai/prompttools"
"a16z-infra/llm-app-stack" -> "exa-labs/exa-mcp-server"
"a16z-infra/llm-app-stack" -> "D-Star-AI/dsRAG"
"a16z-infra/llm-app-stack" -> "NVIDIA/NeMo-Guardrails"
"a16z-infra/llm-app-stack" -> "protectai/rebuff" ["e"=1]
"a16z-infra/llm-app-stack" -> "Codium-ai/AlphaCodium"
"a16z-infra/llm-app-stack" -> "fleet-ai/context"
"a16z-infra/llm-app-stack" -> "confident-ai/deepeval"
"a16z-infra/llm-app-stack" -> "VILA-Lab/ATLAS"
"evanmiller/LLM-Reading-List" -> "Maknee/minigpt4.cpp"
"evanmiller/LLM-Reading-List" -> "abacaj/fine-tune-mistral" ["e"=1]
"evanmiller/LLM-Reading-List" -> "srush/LLM-Training-Puzzles" ["e"=1]
"evanmiller/LLM-Reading-List" -> "gpu-mode/awesomeMLSys" ["e"=1]
"evanmiller/LLM-Reading-List" -> "gpu-mode/resource-stream" ["e"=1]
"evanmiller/LLM-Reading-List" -> "akashmjn/tinydiarize"
"evanmiller/LLM-Reading-List" -> "VikParuchuri/textbook_quality" ["e"=1]
"evanmiller/LLM-Reading-List" -> "yacineMTB/talk" ["e"=1]
"evanmiller/LLM-Reading-List" -> "monatis/clip.cpp"
"evanmiller/LLM-Reading-List" -> "run-llama/finetune-embedding"
"evanmiller/LLM-Reading-List" -> "SumanthRH/tokenization"
"evanmiller/LLM-Reading-List" -> "srush/awesome-o1" ["e"=1]
"xorbitsai/inference" -> "labring/FastGPT"
"xorbitsai/inference" -> "netease-youdao/QAnything"
"xorbitsai/inference" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"xorbitsai/inference" -> "eosphoros-ai/DB-GPT"
"xorbitsai/inference" -> "InternLM/lmdeploy" ["e"=1]
"xorbitsai/inference" -> "modelscope/ms-swift" ["e"=1]
"xorbitsai/inference" -> "FlagOpen/FlagEmbedding" ["e"=1]
"xorbitsai/inference" -> "THUDM/GLM-4" ["e"=1]
"xorbitsai/inference" -> "songquanpeng/one-api" ["e"=1]
"xorbitsai/inference" -> "sgl-project/sglang" ["e"=1]
"xorbitsai/inference" -> "QwenLM/Qwen-Agent"
"xorbitsai/inference" -> "svcvit/Awesome-Dify-Workflow"
"xorbitsai/inference" -> "microsoft/graphrag"
"xorbitsai/inference" -> "THUDM/ChatGLM3" ["e"=1]
"xorbitsai/inference" -> "hiyouga/LLaMA-Factory"
"google/generative-ai-docs" -> "google-gemini/deprecated-generative-ai-python"
"google/generative-ai-docs" -> "GoogleCloudPlatform/generative-ai"
"google/generative-ai-docs" -> "google-gemini/cookbook"
"google/generative-ai-docs" -> "google-gemini/deprecated-generative-ai-swift" ["e"=1]
"google/generative-ai-docs" -> "google-gemini/deprecated-generative-ai-android" ["e"=1]
"google/generative-ai-docs" -> "google-gemini/deprecated-generative-ai-js"
"google/generative-ai-docs" -> "GoogleCloudPlatform/vertex-ai-samples" ["e"=1]
"google/generative-ai-docs" -> "NVIDIA/GenerativeAIExamples"
"google/generative-ai-docs" -> "google-gemini/gemma-cookbook"
"google/generative-ai-docs" -> "googleapis/python-genai"
"google/generative-ai-docs" -> "google-deepmind/gemma" ["e"=1]
"google/generative-ai-docs" -> "google-gemini/live-api-web-console"
"google/generative-ai-docs" -> "microsoft/promptbase"
"google/generative-ai-docs" -> "google/generative-ai-go" ["e"=1]
"google/generative-ai-docs" -> "google/gemma_pytorch" ["e"=1]
"Mintplex-Labs/anything-llm" -> "open-webui/open-webui"
"Mintplex-Labs/anything-llm" -> "lobehub/lobe-chat"
"Mintplex-Labs/anything-llm" -> "langgenius/dify"
"Mintplex-Labs/anything-llm" -> "infiniflow/ragflow"
"Mintplex-Labs/anything-llm" -> "ollama/ollama"
"Mintplex-Labs/anything-llm" -> "mendableai/firecrawl"
"Mintplex-Labs/anything-llm" -> "crewAIInc/crewAI"
"Mintplex-Labs/anything-llm" -> "FlowiseAI/Flowise"
"Mintplex-Labs/anything-llm" -> "All-Hands-AI/OpenHands"
"Mintplex-Labs/anything-llm" -> "agno-agi/agno"
"Mintplex-Labs/anything-llm" -> "cline/cline"
"Mintplex-Labs/anything-llm" -> "unslothai/unsloth"
"Mintplex-Labs/anything-llm" -> "microsoft/autogen"
"Mintplex-Labs/anything-llm" -> "browser-use/browser-use"
"Mintplex-Labs/anything-llm" -> "unclecode/crawl4ai"
"dnhkng/GLaDOS" -> "jasonppy/VoiceCraft" ["e"=1]
"dnhkng/GLaDOS" -> "TheOfficialFloW/PPPwn" ["e"=1]
"dnhkng/GLaDOS" -> "rhasspy/piper" ["e"=1]
"dnhkng/GLaDOS" -> "KoljaB/RealtimeSTT" ["e"=1]
"dnhkng/GLaDOS" -> "ILikeAI/AlwaysReddy" ["e"=1]
"dnhkng/GLaDOS" -> "letta-ai/letta"
"dnhkng/GLaDOS" -> "fixie-ai/ultravox"
"dnhkng/GLaDOS" -> "a-real-ai/pywinassistant"
"dnhkng/GLaDOS" -> "vikhyat/moondream"
"dnhkng/GLaDOS" -> "reorproject/reor"
"dnhkng/GLaDOS" -> "huggingface/parler-tts" ["e"=1]
"dnhkng/GLaDOS" -> "ItzCrazyKns/Perplexica"
"dnhkng/GLaDOS" -> "mediar-ai/screenpipe"
"dnhkng/GLaDOS" -> "FujiwaraChoki/MoneyPrinterV2"
"dnhkng/GLaDOS" -> "erew123/alltalk_tts" ["e"=1]
"gosom/google-maps-scraper" -> "omkarcloud/google-maps-scraper"
"gosom/google-maps-scraper" -> "gosom/scrapemate"
"gosom/google-maps-scraper" -> "gaspa93/googlemaps-scraper"
"gosom/google-maps-scraper" -> "D4Vinci/Scrapling"
"gosom/google-maps-scraper" -> "omkarcloud/botasaurus" ["e"=1]
"gosom/google-maps-scraper" -> "Zubdata/Google-Maps-Scraper"
"gosom/google-maps-scraper" -> "bjesus/pipet" ["e"=1]
"gosom/google-maps-scraper" -> "Nutlope/logocreator" ["e"=1]
"gosom/google-maps-scraper" -> "egoist/sitefetch"
"gosom/google-maps-scraper" -> "aaPanel/BillionMail" ["e"=1]
"gosom/google-maps-scraper" -> "steel-dev/steel-browser"
"gosom/google-maps-scraper" -> "patxijuaristi/google_maps_scraper"
"gosom/google-maps-scraper" -> "developersdigest/llm-api-engine"
"gosom/google-maps-scraper" -> "CatchTheTornado/text-extract-api"
"gosom/google-maps-scraper" -> "CapSoftware/Cap" ["e"=1]
"lancedb/lancedb" -> "lancedb/lance" ["e"=1]
"lancedb/lancedb" -> "chroma-core/chroma"
"lancedb/lancedb" -> "qdrant/qdrant"
"lancedb/lancedb" -> "apache/datafusion" ["e"=1]
"lancedb/lancedb" -> "weaviate/weaviate"
"lancedb/lancedb" -> "pgvector/pgvector"
"lancedb/lancedb" -> "facebookincubator/velox" ["e"=1]
"lancedb/lancedb" -> "paradedb/paradedb" ["e"=1]
"lancedb/lancedb" -> "neuml/txtai"
"lancedb/lancedb" -> "567-labs/instructor"
"lancedb/lancedb" -> "Unstructured-IO/unstructured"
"lancedb/lancedb" -> "EricLBuehler/mistral.rs" ["e"=1]
"lancedb/lancedb" -> "quickwit-oss/tantivy" ["e"=1]
"lancedb/lancedb" -> "Eventual-Inc/Daft" ["e"=1]
"lancedb/lancedb" -> "risingwavelabs/risingwave" ["e"=1]
"sinaptik-ai/pandas-ai" -> "vanna-ai/vanna"
"sinaptik-ai/pandas-ai" -> "mendableai/firecrawl"
"sinaptik-ai/pandas-ai" -> "agno-agi/agno"
"sinaptik-ai/pandas-ai" -> "mem0ai/mem0"
"sinaptik-ai/pandas-ai" -> "run-llama/llama_index"
"sinaptik-ai/pandas-ai" -> "crewAIInc/crewAI"
"sinaptik-ai/pandas-ai" -> "unclecode/crawl4ai"
"sinaptik-ai/pandas-ai" -> "assafelovic/gpt-researcher"
"sinaptik-ai/pandas-ai" -> "browser-use/browser-use"
"sinaptik-ai/pandas-ai" -> "docling-project/docling"
"sinaptik-ai/pandas-ai" -> "Kanaries/pygwalker" ["e"=1]
"sinaptik-ai/pandas-ai" -> "FlowiseAI/Flowise"
"sinaptik-ai/pandas-ai" -> "microsoft/autogen"
"sinaptik-ai/pandas-ai" -> "Shubhamsaboo/awesome-llm-apps"
"sinaptik-ai/pandas-ai" -> "microsoft/data-formulator"
"qodo-ai/pr-agent" -> "qodo-ai/qodo-cover"
"qodo-ai/pr-agent" -> "Codium-ai/AlphaCodium"
"qodo-ai/pr-agent" -> "coderabbitai/ai-pr-reviewer" ["e"=1]
"qodo-ai/pr-agent" -> "Aider-AI/aider"
"qodo-ai/pr-agent" -> "continuedev/continue"
"qodo-ai/pr-agent" -> "sweepai/sweep" ["e"=1]
"qodo-ai/pr-agent" -> "SWE-agent/SWE-agent"
"qodo-ai/pr-agent" -> "anc95/ChatGPT-CodeReview" ["e"=1]
"qodo-ai/pr-agent" -> "BerriAI/litellm"
"qodo-ai/pr-agent" -> "superagent-ai/superagent" ["e"=1]
"qodo-ai/pr-agent" -> "onyx-dot-app/onyx"
"qodo-ai/pr-agent" -> "cline/cline"
"qodo-ai/pr-agent" -> "langfuse/langfuse"
"qodo-ai/pr-agent" -> "assafelovic/gpt-researcher"
"qodo-ai/pr-agent" -> "mattzcarey/shippie" ["e"=1]
"akashmjn/tinydiarize" -> "PABannier/encodec.cpp"
"akashmjn/tinydiarize" -> "Audio-WestlakeU/FS-EEND" ["e"=1]
"akashmjn/tinydiarize" -> "huggingface/diarizers" ["e"=1]
"akashmjn/tinydiarize" -> "PABannier/bark.cpp"
"facebookresearch/nougat" -> "VikParuchuri/marker"
"facebookresearch/nougat" -> "clovaai/donut" ["e"=1]
"facebookresearch/nougat" -> "VikParuchuri/surya"
"facebookresearch/nougat" -> "lukas-blecher/LaTeX-OCR" ["e"=1]
"facebookresearch/nougat" -> "Ucas-HaoranWei/GOT-OCR2.0"
"facebookresearch/nougat" -> "stanfordnlp/dspy"
"facebookresearch/nougat" -> "Unstructured-IO/unstructured"
"facebookresearch/nougat" -> "microsoft/unilm" ["e"=1]
"facebookresearch/nougat" -> "haotian-liu/LLaVA" ["e"=1]
"facebookresearch/nougat" -> "nlpxucan/WizardLM"
"facebookresearch/nougat" -> "mit-han-lab/streaming-llm" ["e"=1]
"facebookresearch/nougat" -> "kermitt2/grobid" ["e"=1]
"facebookresearch/nougat" -> "opendatalab/PDF-Extract-Kit"
"facebookresearch/nougat" -> "guidance-ai/guidance"
"facebookresearch/nougat" -> "ShishirPatil/gorilla" ["e"=1]
"spencerc99/playhtml" -> "xinemata/leafy"
"Portkey-AI/gateway" -> "BerriAI/litellm"
"Portkey-AI/gateway" -> "langfuse/langfuse"
"Portkey-AI/gateway" -> "CopilotKit/CopilotKit" ["e"=1]
"Portkey-AI/gateway" -> "letta-ai/letta"
"Portkey-AI/gateway" -> "onyx-dot-app/onyx"
"Portkey-AI/gateway" -> "mem0ai/mem0"
"Portkey-AI/gateway" -> "crewAIInc/crewAI"
"Portkey-AI/gateway" -> "agno-agi/agno"
"Portkey-AI/gateway" -> "ItzCrazyKns/Perplexica"
"Portkey-AI/gateway" -> "Helicone/helicone"
"Portkey-AI/gateway" -> "danny-avila/LibreChat"
"Portkey-AI/gateway" -> "567-labs/instructor"
"Portkey-AI/gateway" -> "vanna-ai/vanna"
"Portkey-AI/gateway" -> "jina-ai/reader"
"Portkey-AI/gateway" -> "songquanpeng/one-api" ["e"=1]
"vanna-ai/vanna" -> "eosphoros-ai/DB-GPT"
"vanna-ai/vanna" -> "Canner/WrenAI"
"vanna-ai/vanna" -> "sinaptik-ai/pandas-ai"
"vanna-ai/vanna" -> "CodePhiliaX/Chat2DB"
"vanna-ai/vanna" -> "agno-agi/agno"
"vanna-ai/vanna" -> "microsoft/graphrag"
"vanna-ai/vanna" -> "mem0ai/mem0"
"vanna-ai/vanna" -> "infiniflow/ragflow"
"vanna-ai/vanna" -> "tencentmusic/supersonic" ["e"=1]
"vanna-ai/vanna" -> "mendableai/firecrawl"
"vanna-ai/vanna" -> "crewAIInc/crewAI"
"vanna-ai/vanna" -> "labring/FastGPT"
"vanna-ai/vanna" -> "netease-youdao/QAnything"
"vanna-ai/vanna" -> "FlowiseAI/Flowise"
"vanna-ai/vanna" -> "run-llama/llama_index"
"trypromptly/LLMStack" -> "superagent-ai/superagent" ["e"=1]
"trypromptly/LLMStack" -> "DataBassGit/AgentForge" ["e"=1]
"trypromptly/LLMStack" -> "jbexta/AgentPilot" ["e"=1]
"trypromptly/LLMStack" -> "langroid/langroid"
"trypromptly/LLMStack" -> "Mintplex-Labs/vector-admin"
"trypromptly/LLMStack" -> "Ironclad/rivet"
"trypromptly/LLMStack" -> "enricoros/big-AGI"
"trypromptly/LLMStack" -> "melih-unsal/DemoGPT" ["e"=1]
"trypromptly/LLMStack" -> "MervinPraison/PraisonAI"
"trypromptly/LLMStack" -> "SamurAIGPT/Best-AI-Agents" ["e"=1]
"trypromptly/LLMStack" -> "Agenta-AI/agenta"
"trypromptly/LLMStack" -> "xlang-ai/OpenAgents" ["e"=1]
"trypromptly/LLMStack" -> "h2oai/h2o-llmstudio" ["e"=1]
"trypromptly/LLMStack" -> "Link-AGI/AutoAgents" ["e"=1]
"trypromptly/LLMStack" -> "victordibia/autogen-ui" ["e"=1]
"apify/crawlee" -> "mendableai/firecrawl"
"apify/crawlee" -> "apify/crawlee-python"
"apify/crawlee" -> "BuilderIO/gpt-crawler"
"apify/crawlee" -> "ScrapeGraphAI/Scrapegraph-ai"
"apify/crawlee" -> "unclecode/crawl4ai"
"apify/crawlee" -> "triggerdotdev/trigger.dev" ["e"=1]
"apify/crawlee" -> "honojs/hono" ["e"=1]
"apify/crawlee" -> "berstend/puppeteer-extra" ["e"=1]
"apify/crawlee" -> "novuhq/novu" ["e"=1]
"apify/crawlee" -> "tremorlabs/tremor-npm" ["e"=1]
"apify/crawlee" -> "PlasmoHQ/plasmo" ["e"=1]
"apify/crawlee" -> "dubinc/dub" ["e"=1]
"apify/crawlee" -> "xyflow/xyflow" ["e"=1]
"apify/crawlee" -> "browserbase/stagehand"
"apify/crawlee" -> "microsoft/playwright" ["e"=1]
"omkarcloud/google-maps-scraper" -> "gosom/google-maps-scraper"
"omkarcloud/google-maps-scraper" -> "omkarcloud/botasaurus" ["e"=1]
"omkarcloud/google-maps-scraper" -> "gaspa93/googlemaps-scraper"
"omkarcloud/google-maps-scraper" -> "siriustools/sirius-crypter" ["e"=1]
"omkarcloud/google-maps-scraper" -> "patxijuaristi/google_maps_scraper"
"omkarcloud/google-maps-scraper" -> "streamviewerchatbot/Stream-Viewer-Bot" ["e"=1]
"omkarcloud/google-maps-scraper" -> "omkarcloud/google-maps-reviews-scraper"
"omkarcloud/google-maps-scraper" -> "amineboutarfi/google_maps_scraper"
"omkarcloud/google-maps-scraper" -> "DefiZoro/BSC-Sniping-Bot-Opensource"
"omkarcloud/google-maps-scraper" -> "Zubdata/Google-Maps-Scraper"
"omkarcloud/google-maps-scraper" -> "HarshaMurupudi/Kwaii-ui"
"omkarcloud/google-maps-scraper" -> "omkarcloud/tripadvisor-scraper" ["e"=1]
"omkarcloud/google-maps-scraper" -> "Madi-S/Lead-Generation"
"omkarcloud/google-maps-scraper" -> "kby-ai/FaceRecognition-Android" ["e"=1]
"omkarcloud/google-maps-scraper" -> "RayDefi/Ethereum-Sniping-Bot-Opensource"
"axflow/axflow" -> "quack-ai/companion-vscode"
"axflow/axflow" -> "axflow/original-demo-ui"
"axflow/axflow" -> "OpenPipe/OpenPipe"
"axflow/axflow" -> "empower-ai/dsensei"
"axflow/axflow" -> "poozlehq/poozle"
"axflow/axflow" -> "Trainy-ai/llm-atc"
"axflow/axflow" -> "CambioML/pykoi-rlhf-finetuned-transformers"
"axflow/axflow" -> "artie-labs/transfer"
"axflow/axflow" -> "quack-ai/platform"
"axflow/axflow" -> "PeerDB-io/peerdb" ["e"=1]
"axflow/axflow" -> "srcbookdev/srcbook"
"axflow/axflow" -> "hegelai/prompttools"
"axflow/axflow" -> "Skyvern-AI/wyvern"
"axflow/axflow" -> "briefercloud/layerform" ["e"=1]
"axflow/axflow" -> "trytrench/trench"
"h2oai/h2ogpt" -> "h2oai/h2o-llmstudio" ["e"=1]
"h2oai/h2ogpt" -> "PromtEngineer/localGPT"
"h2oai/h2ogpt" -> "zylon-ai/private-gpt"
"h2oai/h2ogpt" -> "QuivrHQ/quivr"
"h2oai/h2ogpt" -> "TransformerOptimus/SuperAGI" ["e"=1]
"h2oai/h2ogpt" -> "oobabooga/text-generation-webui"
"h2oai/h2ogpt" -> "ShishirPatil/gorilla" ["e"=1]
"h2oai/h2ogpt" -> "mudler/LocalAI"
"h2oai/h2ogpt" -> "FlowiseAI/Flowise"
"h2oai/h2ogpt" -> "assafelovic/gpt-researcher"
"h2oai/h2ogpt" -> "nlpxucan/WizardLM"
"h2oai/h2ogpt" -> "run-llama/llama_index"
"h2oai/h2ogpt" -> "letta-ai/letta"
"h2oai/h2ogpt" -> "nomic-ai/gpt4all"
"h2oai/h2ogpt" -> "onyx-dot-app/onyx"
"promptfoo/promptfoo" -> "confident-ai/deepeval"
"promptfoo/promptfoo" -> "explodinggradients/ragas"
"promptfoo/promptfoo" -> "langfuse/langfuse"
"promptfoo/promptfoo" -> "guardrails-ai/guardrails"
"promptfoo/promptfoo" -> "hegelai/prompttools"
"promptfoo/promptfoo" -> "567-labs/instructor"
"promptfoo/promptfoo" -> "BerriAI/litellm"
"promptfoo/promptfoo" -> "ianarawjo/ChainForge"
"promptfoo/promptfoo" -> "Arize-ai/phoenix"
"promptfoo/promptfoo" -> "dottxt-ai/outlines"
"promptfoo/promptfoo" -> "stanfordnlp/dspy"
"promptfoo/promptfoo" -> "guidance-ai/guidance"
"promptfoo/promptfoo" -> "mshumer/gpt-prompt-engineer"
"promptfoo/promptfoo" -> "NVIDIA/NeMo-Guardrails"
"promptfoo/promptfoo" -> "Helicone/helicone"
"ParisNeo/lollms-webui" -> "LostRuins/koboldcpp" ["e"=1]
"ParisNeo/lollms-webui" -> "oobabooga/text-generation-webui"
"ParisNeo/lollms-webui" -> "h2oai/h2ogpt"
"ParisNeo/lollms-webui" -> "Josh-XT/AGiXT" ["e"=1]
"ParisNeo/lollms-webui" -> "nomic-ai/pygpt4all" ["e"=1]
"ParisNeo/lollms-webui" -> "nomic-ai/gpt4all-chat" ["e"=1]
"ParisNeo/lollms-webui" -> "serge-chat/serge"
"ParisNeo/lollms-webui" -> "yoheinakajima/babyagi" ["e"=1]
"ParisNeo/lollms-webui" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"ParisNeo/lollms-webui" -> "ParisNeo/lollms"
"ParisNeo/lollms-webui" -> "abetlen/llama-cpp-python"
"ParisNeo/lollms-webui" -> "huggingface/chat-ui"
"ParisNeo/lollms-webui" -> "nomic-ai/gpt4all"
"ParisNeo/lollms-webui" -> "h2oai/h2o-llmstudio" ["e"=1]
"ParisNeo/lollms-webui" -> "nlpxucan/WizardLM"
"microsoft/genaiscript" -> "microsoft/TinyTroupe"
"microsoft/genaiscript" -> "getmaxun/maxun"
"microsoft/genaiscript" -> "microsoft/RD-Agent"
"microsoft/genaiscript" -> "awslabs/agent-squad"
"microsoft/genaiscript" -> "timescale/pgai"
"microsoft/genaiscript" -> "pingcap/autoflow"
"microsoft/genaiscript" -> "Zipstack/unstract"
"microsoft/genaiscript" -> "livekit/agents"
"microsoft/genaiscript" -> "Skyvern-AI/skyvern"
"microsoft/genaiscript" -> "kestra-io/kestra" ["e"=1]
"microsoft/genaiscript" -> "onejs/one" ["e"=1]
"microsoft/genaiscript" -> "MervinPraison/PraisonAI"
"microsoft/genaiscript" -> "QuivrHQ/MegaParse"
"microsoft/genaiscript" -> "anthropics/courses"
"microsoft/genaiscript" -> "Cinnamon/kotaemon"
"run-llama/chat-llamaindex" -> "run-llama/LlamaIndexTS"
"run-llama/chat-llamaindex" -> "run-llama/sec-insights"
"run-llama/chat-llamaindex" -> "run-llama/create-llama"
"run-llama/chat-llamaindex" -> "run-llama/llama-lab" ["e"=1]
"run-llama/chat-llamaindex" -> "run-llama/create_llama_projects" ["e"=1]
"run-llama/chat-llamaindex" -> "run-llama/llama-hub" ["e"=1]
"run-llama/chat-llamaindex" -> "lucastononro/llm-food-delivery"
"run-llama/chat-llamaindex" -> "rsrohan99/rag-stream-intermediate-events-tutorial"
"run-llama/chat-llamaindex" -> "run-llama/mongodb-demo"
"run-llama/chat-llamaindex" -> "timho102003/NewsGPT"
"run-llama/chat-llamaindex" -> "virattt/financial-agent-ui"
"run-llama/chat-llamaindex" -> "run-llama/rags"
"run-llama/chat-llamaindex" -> "e2b-dev/code-interpreter"
"run-llama/chat-llamaindex" -> "n4ze3m/dialoqbase" ["e"=1]
"run-llama/chat-llamaindex" -> "shroominic/fastui-chat"
"docker/genai-stack" -> "neo4j/NaLLM" ["e"=1]
"docker/genai-stack" -> "neo4j-labs/llm-graph-builder"
"docker/genai-stack" -> "tomasonjo/blogs" ["e"=1]
"docker/genai-stack" -> "weaviate/Verba"
"docker/genai-stack" -> "langchain-ai/chat-langchain" ["e"=1]
"docker/genai-stack" -> "microsoft/graphrag"
"docker/genai-stack" -> "langchain-ai/opengpts"
"docker/genai-stack" -> "ollama/ollama-python"
"docker/genai-stack" -> "Unstructured-IO/unstructured"
"docker/genai-stack" -> "letta-ai/letta"
"docker/genai-stack" -> "Chainlit/chainlit"
"docker/genai-stack" -> "crewAIInc/crewAI"
"docker/genai-stack" -> "langchain-ai/langgraph"
"docker/genai-stack" -> "kyrolabs/awesome-langchain" ["e"=1]
"docker/genai-stack" -> "BerriAI/litellm"
"mlc-ai/web-stable-diffusion" -> "mlc-ai/web-llm"
"mlc-ai/web-stable-diffusion" -> "mlc-ai/mlc-llm"
"mlc-ai/web-stable-diffusion" -> "huggingface/transformers.js"
"mlc-ai/web-stable-diffusion" -> "0hq/WebGPT" ["e"=1]
"mlc-ai/web-stable-diffusion" -> "antimatter15/alpaca.cpp"
"mlc-ai/web-stable-diffusion" -> "FMInference/FlexLLMGen" ["e"=1]
"mlc-ai/web-stable-diffusion" -> "facebookincubator/AITemplate" ["e"=1]
"mlc-ai/web-stable-diffusion" -> "nat/openplayground" ["e"=1]
"mlc-ai/web-stable-diffusion" -> "flashinfer-ai/flashinfer" ["e"=1]
"mlc-ai/web-stable-diffusion" -> "webonnx/wonnx" ["e"=1]
"mlc-ai/web-stable-diffusion" -> "dakenf/diffusers.js"
"mlc-ai/web-stable-diffusion" -> "mlc-ai/mlc-en" ["e"=1]
"mlc-ai/web-stable-diffusion" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"mlc-ai/web-stable-diffusion" -> "Stability-AI/StableLM"
"mlc-ai/web-stable-diffusion" -> "apache/tvm" ["e"=1]
"YavorGIvanov/sam.cpp" -> "PABannier/bark.cpp"
"YavorGIvanov/sam.cpp" -> "monatis/clip.cpp"
"YavorGIvanov/sam.cpp" -> "leejet/stable-diffusion.cpp"
"YavorGIvanov/sam.cpp" -> "dinglufe/segment-anything-cpp-wrapper" ["e"=1]
"YavorGIvanov/sam.cpp" -> "staghado/vit.cpp"
"YavorGIvanov/sam.cpp" -> "Maknee/minigpt4.cpp"
"YavorGIvanov/sam.cpp" -> "ashvardanian/SimSIMD" ["e"=1]
"YavorGIvanov/sam.cpp" -> "PABannier/encodec.cpp"
"YavorGIvanov/sam.cpp" -> "ggml-org/ggml"
"YavorGIvanov/sam.cpp" -> "eschluntz/compress" ["e"=1]
"YavorGIvanov/sam.cpp" -> "axodox/axodox-machinelearning"
"YavorGIvanov/sam.cpp" -> "likejazz/llama3.np" ["e"=1]
"YavorGIvanov/sam.cpp" -> "vitoplantamura/OnnxStream"
"YavorGIvanov/sam.cpp" -> "maxbbraun/llama4micro"
"YavorGIvanov/sam.cpp" -> "chongzhou96/EdgeSAM" ["e"=1]
"Mozilla-Ocho/llamafile" -> "ggml-org/llama.cpp"
"Mozilla-Ocho/llamafile" -> "jart/cosmopolitan" ["e"=1]
"Mozilla-Ocho/llamafile" -> "BerriAI/litellm"
"Mozilla-Ocho/llamafile" -> "vllm-project/vllm"
"Mozilla-Ocho/llamafile" -> "unslothai/unsloth"
"Mozilla-Ocho/llamafile" -> "karpathy/llm.c"
"Mozilla-Ocho/llamafile" -> "ggml-org/whisper.cpp"
"Mozilla-Ocho/llamafile" -> "menloresearch/jan"
"Mozilla-Ocho/llamafile" -> "Aider-AI/aider"
"Mozilla-Ocho/llamafile" -> "mudler/LocalAI"
"Mozilla-Ocho/llamafile" -> "stanfordnlp/dspy"
"Mozilla-Ocho/llamafile" -> "karpathy/llama2.c"
"Mozilla-Ocho/llamafile" -> "ItzCrazyKns/Perplexica"
"Mozilla-Ocho/llamafile" -> "ggml-org/ggml"
"Mozilla-Ocho/llamafile" -> "oobabooga/text-generation-webui"
"AgentOps-AI/agentops" -> "MervinPraison/PraisonAI"
"AgentOps-AI/agentops" -> "microsoft/RD-Agent"
"AgentOps-AI/agentops" -> "AgentOps-AI/AgentStack"
"AgentOps-AI/agentops" -> "VRSEN/agency-swarm"
"AgentOps-AI/agentops" -> "crewAIInc/crewAI-examples"
"AgentOps-AI/agentops" -> "crewAIInc/crewAI"
"AgentOps-AI/agentops" -> "agno-agi/agno"
"AgentOps-AI/agentops" -> "superagent-ai/superagent" ["e"=1]
"AgentOps-AI/agentops" -> "awslabs/agent-squad"
"AgentOps-AI/agentops" -> "e2b-dev/awesome-ai-agents"
"AgentOps-AI/agentops" -> "pydantic/pydantic-ai"
"AgentOps-AI/agentops" -> "camel-ai/camel"
"AgentOps-AI/agentops" -> "ag2ai/ag2"
"AgentOps-AI/agentops" -> "letta-ai/letta"
"AgentOps-AI/agentops" -> "browserbase/stagehand"
"BeastByteAI/scikit-llm" -> "BeastByteAI/falcon"
"BeastByteAI/scikit-llm" -> "shankarpandala/lazypredict" ["e"=1]
"BeastByteAI/scikit-llm" -> "sinaptik-ai/pandas-ai"
"BeastByteAI/scikit-llm" -> "huggingface/setfit" ["e"=1]
"BeastByteAI/scikit-llm" -> "pycaret/pycaret" ["e"=1]
"BeastByteAI/scikit-llm" -> "guardrails-ai/guardrails"
"BeastByteAI/scikit-llm" -> "SylphAI-Inc/AdalFlow"
"BeastByteAI/scikit-llm" -> "mshumer/gpt-llm-trainer" ["e"=1]
"BeastByteAI/scikit-llm" -> "deepchecks/deepchecks" ["e"=1]
"BeastByteAI/scikit-llm" -> "Giskard-AI/giskard"
"BeastByteAI/scikit-llm" -> "Lightning-AI/litgpt"
"BeastByteAI/scikit-llm" -> "cleanlab/cleanlab" ["e"=1]
"BeastByteAI/scikit-llm" -> "skorch-dev/skorch" ["e"=1]
"BeastByteAI/scikit-llm" -> "huggingface/autotrain-advanced" ["e"=1]
"BeastByteAI/scikit-llm" -> "feature-engine/feature_engine" ["e"=1]
"ollama-ui/ollama-ui" -> "ivanfioravanti/chatbot-ollama"
"ollama-ui/ollama-ui" -> "ollama-interface/Ollama-Gui"
"ollama-ui/ollama-ui" -> "richawo/minimal-llm-ui"
"ollama-ui/ollama-ui" -> "enoch1118/ollamaGUI"
"ollama-ui/ollama-ui" -> "HelgeSverre/ollama-gui"
"ollama-ui/ollama-ui" -> "mrdjohnson/llm-x"
"ollama-ui/ollama-ui" -> "kghandour/Ollama-SwiftUI"
"ollama-ui/ollama-ui" -> "bionic-gpt/bionic-gpt"
"ollama-ui/ollama-ui" -> "fmaclen/hollama"
"ollama-ui/ollama-ui" -> "drazdra/ollama-chats"
"ollama-ui/ollama-ui" -> "ggozad/oterm"
"ollama-ui/ollama-ui" -> "jikkuatwork/saddle"
"ollama-ui/ollama-ui" -> "jakobhoeg/nextjs-ollama-llm-ui"
"ollama-ui/ollama-ui" -> "ollama/ollama-js"
"ollama-ui/ollama-ui" -> "semperai/amica"
"mfmezger/conversational-agent-langchain" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"georgian-io/LLM-Finetuning-Toolkit" -> "ashishpatel26/LLM-Finetuning"
"georgian-io/LLM-Finetuning-Toolkit" -> "georgian-io/Multimodal-Toolkit" ["e"=1]
"georgian-io/LLM-Finetuning-Toolkit" -> "georgian-io/genai-bootcamp"
"georgian-io/LLM-Finetuning-Toolkit" -> "ray-project/llm-applications"
"georgian-io/LLM-Finetuning-Toolkit" -> "amaiya/onprem"
"georgian-io/LLM-Finetuning-Toolkit" -> "okuvshynov/slowllama"
"georgian-io/LLM-Finetuning-Toolkit" -> "jackmpcollins/magentic"
"georgian-io/LLM-Finetuning-Toolkit" -> "modal-labs/llm-finetuning"
"georgian-io/LLM-Finetuning-Toolkit" -> "predibase/llm_distillation_playbook" ["e"=1]
"georgian-io/LLM-Finetuning-Toolkit" -> "hegelai/prompttools"
"georgian-io/LLM-Finetuning-Toolkit" -> "CambioML/pykoi-rlhf-finetuned-transformers"
"truefoundry/cognita" -> "weaviate/Verba"
"truefoundry/cognita" -> "ragapp/ragapp"
"truefoundry/cognita" -> "SciPhi-AI/R2R"
"truefoundry/cognita" -> "RUC-NLPIR/FlashRAG"
"truefoundry/cognita" -> "Zipstack/unstract"
"truefoundry/cognita" -> "Marker-Inc-Korea/AutoRAG"
"truefoundry/cognita" -> "lavague-ai/LaVague"
"truefoundry/cognita" -> "neuml/txtai"
"truefoundry/cognita" -> "agno-agi/agno"
"truefoundry/cognita" -> "neo4j-labs/llm-graph-builder"
"truefoundry/cognita" -> "Doriandarko/maestro"
"truefoundry/cognita" -> "MervinPraison/PraisonAI"
"truefoundry/cognita" -> "mesop-dev/mesop"
"truefoundry/cognita" -> "developersdigest/llm-answer-engine"
"truefoundry/cognita" -> "ScrapeGraphAI/Scrapegraph-ai"
"databrickslabs/dolly" -> "tatsu-lab/stanford_alpaca"
"databrickslabs/dolly" -> "tloen/alpaca-lora"
"databrickslabs/dolly" -> "Stability-AI/StableLM"
"databrickslabs/dolly" -> "lm-sys/FastChat"
"databrickslabs/dolly" -> "togethercomputer/OpenChatKit"
"databrickslabs/dolly" -> "OptimalScale/LMFlow" ["e"=1]
"databrickslabs/dolly" -> "LAION-AI/Open-Assistant"
"databrickslabs/dolly" -> "LianjiaTech/BELLE" ["e"=1]
"databrickslabs/dolly" -> "microsoft/JARVIS"
"databrickslabs/dolly" -> "deepspeedai/DeepSpeed"
"databrickslabs/dolly" -> "togethercomputer/RedPajama-Data"
"databrickslabs/dolly" -> "openlm-research/open_llama"
"databrickslabs/dolly" -> "Vision-CAIR/MiniGPT-4"
"databrickslabs/dolly" -> "nlpxucan/WizardLM"
"databrickslabs/dolly" -> "artidoro/qlora"
"axodox/unpaint" -> "axodox/axodox-machinelearning"
"axodox/unpaint" -> "symisc/tiny-dream"
"igorbrigadir/awesome-twitter-algo" -> "veekaybee/viberary"
"NVIDIA/NeMo-Guardrails" -> "guardrails-ai/guardrails"
"NVIDIA/NeMo-Guardrails" -> "explodinggradients/ragas"
"NVIDIA/NeMo-Guardrails" -> "protectai/llm-guard" ["e"=1]
"NVIDIA/NeMo-Guardrails" -> "guidance-ai/guidance"
"NVIDIA/NeMo-Guardrails" -> "Arize-ai/phoenix"
"NVIDIA/NeMo-Guardrails" -> "NVIDIA/garak" ["e"=1]
"NVIDIA/NeMo-Guardrails" -> "567-labs/instructor"
"NVIDIA/NeMo-Guardrails" -> "zilliztech/GPTCache" ["e"=1]
"NVIDIA/NeMo-Guardrails" -> "confident-ai/deepeval"
"NVIDIA/NeMo-Guardrails" -> "microsoft/LLMLingua"
"NVIDIA/NeMo-Guardrails" -> "stanfordnlp/dspy"
"NVIDIA/NeMo-Guardrails" -> "protectai/rebuff" ["e"=1]
"NVIDIA/NeMo-Guardrails" -> "promptfoo/promptfoo"
"NVIDIA/NeMo-Guardrails" -> "dottxt-ai/outlines"
"NVIDIA/NeMo-Guardrails" -> "openai/evals"
"mlc-ai/mlc-llm" -> "mlc-ai/web-llm"
"mlc-ai/mlc-llm" -> "vllm-project/vllm"
"mlc-ai/mlc-llm" -> "lm-sys/FastChat"
"mlc-ai/mlc-llm" -> "ggml-org/llama.cpp"
"mlc-ai/mlc-llm" -> "sgl-project/sglang" ["e"=1]
"mlc-ai/mlc-llm" -> "deepspeedai/DeepSpeed"
"mlc-ai/mlc-llm" -> "ggml-org/ggml"
"mlc-ai/mlc-llm" -> "Dao-AILab/flash-attention" ["e"=1]
"mlc-ai/mlc-llm" -> "apache/tvm" ["e"=1]
"mlc-ai/mlc-llm" -> "NVIDIA/TensorRT-LLM" ["e"=1]
"mlc-ai/mlc-llm" -> "oobabooga/text-generation-webui"
"mlc-ai/mlc-llm" -> "hpcaitech/ColossalAI"
"mlc-ai/mlc-llm" -> "artidoro/qlora"
"mlc-ai/mlc-llm" -> "triton-lang/triton" ["e"=1]
"mlc-ai/mlc-llm" -> "karpathy/llama2.c"
"eugeneyan/open-llms" -> "Hannibal046/Awesome-LLM"
"eugeneyan/open-llms" -> "Mooler0410/LLMsPracticalGuide"
"eugeneyan/open-llms" -> "guidance-ai/guidance"
"eugeneyan/open-llms" -> "openlm-research/open_llama"
"eugeneyan/open-llms" -> "lm-sys/FastChat"
"eugeneyan/open-llms" -> "bentoml/OpenLLM"
"eugeneyan/open-llms" -> "mlc-ai/mlc-llm"
"eugeneyan/open-llms" -> "Stability-AI/StableLM"
"eugeneyan/open-llms" -> "artidoro/qlora"
"eugeneyan/open-llms" -> "tloen/alpaca-lora"
"eugeneyan/open-llms" -> "ShishirPatil/gorilla" ["e"=1]
"eugeneyan/open-llms" -> "kyrolabs/awesome-langchain" ["e"=1]
"eugeneyan/open-llms" -> "Lightning-AI/litgpt"
"eugeneyan/open-llms" -> "run-llama/llama_index"
"eugeneyan/open-llms" -> "qdrant/qdrant"
"axodox/axodox-machinelearning" -> "axodox/unpaint"
"axodox/axodox-machinelearning" -> "symisc/tiny-dream"
"axodox/axodox-machinelearning" -> "EdVince/Stable-Diffusion-NCNN" ["e"=1]
"axodox/axodox-machinelearning" -> "leejet/stable-diffusion.cpp"
"axodox/axodox-machinelearning" -> "Amblyopius/Stable-Diffusion-ONNX-FP16" ["e"=1]
"hamzafarooq/building-llm-applications-from-scratch" -> "KalyanKS-NLP/llm-engineer-toolkit"
"hamzafarooq/building-llm-applications-from-scratch" -> "KalyanKS-NLP/rag-zero-to-hero-guide"
"hamzafarooq/building-llm-applications-from-scratch" -> "break-into-data/ai-engineer-toolkit"
"hamzafarooq/building-llm-applications-from-scratch" -> "decodingml/second-brain-ai-assistant-course"
"hamzafarooq/building-llm-applications-from-scratch" -> "PacktPublishing/LLM-Engineers-Handbook"
"hamzafarooq/building-llm-applications-from-scratch" -> "llmgenai/LLMInterviewQuestions"
"hamzafarooq/building-llm-applications-from-scratch" -> "mongodb-developer/GenAI-Showcase"
"hamzafarooq/building-llm-applications-from-scratch" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"hamzafarooq/building-llm-applications-from-scratch" -> "decodingml/llm-twin-course"
"hamzafarooq/building-llm-applications-from-scratch" -> "neural-maze/ava-whatsapp-agent-course"
"hamzafarooq/building-llm-applications-from-scratch" -> "afshinea/stanford-cme-295-transformers-large-language-models"
"hamzafarooq/building-llm-applications-from-scratch" -> "hamzafarooq/advanced-llms-course"
"hamzafarooq/building-llm-applications-from-scratch" -> "aishwaryanr/awesome-generative-ai-guide"
"hamzafarooq/building-llm-applications-from-scratch" -> "graviraja/MLOps-Basics" ["e"=1]
"hamzafarooq/building-llm-applications-from-scratch" -> "youssefHosni/Data-Science-Interview-Preperation-Resources" ["e"=1]
"NeumTry/NeumAI" -> "poozlehq/poozle"
"NeumTry/NeumAI" -> "aymenfurter/microagents"
"NeumTry/NeumAI" -> "Marker-Inc-Korea/RAGchain" ["e"=1]
"NeumTry/NeumAI" -> "Skyvern-AI/wyvern"
"NeumTry/NeumAI" -> "OpenPipe/OpenPipe"
"NeumTry/NeumAI" -> "pchunduri6/rag-demystified"
"NeumTry/NeumAI" -> "hegelai/prompttools"
"NeumTry/NeumAI" -> "rentruewang/bocoel"
"RecipeUI/RecipeUI" -> "trytrench/trench"
"RecipeUI/RecipeUI" -> "poozlehq/poozle"
"RecipeUI/RecipeUI" -> "briefercloud/ergomake"
"RecipeUI/RecipeUI" -> "automorphic-ai/aegis"
"RecipeUI/RecipeUI" -> "redotvideo/haven"
"RecipeUI/RecipeUI" -> "stackwiseai/stackwise" ["e"=1]
"RecipeUI/RecipeUI" -> "OpenPipe/OpenPipe"
"RecipeUI/RecipeUI" -> "noya-app/noya"
"RecipeUI/RecipeUI" -> "magicpatterns/catalog"
"RecipeUI/RecipeUI" -> "axflow/axflow"
"RecipeUI/RecipeUI" -> "Trainy-ai/llm-atc"
"RecipeUI/RecipeUI" -> "medplum/medplum" ["e"=1]
"RecipeUI/RecipeUI" -> "artie-labs/transfer"
"RecipeUI/RecipeUI" -> "PeerDB-io/peerdb" ["e"=1]
"RecipeUI/RecipeUI" -> "xeol-io/xeol"
"kardolus/chatgpt-cli" -> "marcolardera/chatgpt-cli"
"kardolus/chatgpt-cli" -> "kharvd/gpt-cli"
"kardolus/chatgpt-cli" -> "0xacx/chatGPT-shell-cli"
"kardolus/chatgpt-cli" -> "kardolus/prompts"
"kardolus/chatgpt-cli" -> "umputun/spot" ["e"=1]
"Hannibal046/Awesome-LLM" -> "BradyFU/Awesome-Multimodal-Large-Language-Models" ["e"=1]
"Hannibal046/Awesome-LLM" -> "HqWu-HITCS/Awesome-Chinese-LLM" ["e"=1]
"Hannibal046/Awesome-LLM" -> "mlabonne/llm-course"
"Hannibal046/Awesome-LLM" -> "vllm-project/vllm"
"Hannibal046/Awesome-LLM" -> "Mooler0410/LLMsPracticalGuide"
"Hannibal046/Awesome-LLM" -> "RUCAIBox/LLMSurvey" ["e"=1]
"Hannibal046/Awesome-LLM" -> "hiyouga/LLaMA-Factory"
"Hannibal046/Awesome-LLM" -> "lm-sys/FastChat"
"Hannibal046/Awesome-LLM" -> "huggingface/peft"
"Hannibal046/Awesome-LLM" -> "eugeneyan/open-llms"
"Hannibal046/Awesome-LLM" -> "run-llama/llama_index"
"Hannibal046/Awesome-LLM" -> "liguodongiot/llm-action" ["e"=1]
"Hannibal046/Awesome-LLM" -> "meta-llama/llama"
"Hannibal046/Awesome-LLM" -> "rasbt/LLMs-from-scratch"
"Hannibal046/Awesome-LLM" -> "deepspeedai/DeepSpeed"
"Stability-AI/StableLM" -> "Vision-CAIR/MiniGPT-4"
"Stability-AI/StableLM" -> "lm-sys/FastChat"
"Stability-AI/StableLM" -> "LAION-AI/Open-Assistant"
"Stability-AI/StableLM" -> "tatsu-lab/stanford_alpaca"
"Stability-AI/StableLM" -> "tloen/alpaca-lora"
"Stability-AI/StableLM" -> "databrickslabs/dolly"
"Stability-AI/StableLM" -> "deep-floyd/IF" ["e"=1]
"Stability-AI/StableLM" -> "microsoft/JARVIS"
"Stability-AI/StableLM" -> "suno-ai/bark" ["e"=1]
"Stability-AI/StableLM" -> "yoheinakajima/babyagi" ["e"=1]
"Stability-AI/StableLM" -> "artidoro/qlora"
"Stability-AI/StableLM" -> "nlpxucan/WizardLM"
"Stability-AI/StableLM" -> "openlm-research/open_llama"
"Stability-AI/StableLM" -> "Stability-AI/stablediffusion" ["e"=1]
"Stability-AI/StableLM" -> "Stability-AI/StableStudio" ["e"=1]
"vercel/ai" -> "vercel/ai-chatbot"
"vercel/ai" -> "langchain-ai/langchainjs"
"vercel/ai" -> "steven-tey/novel" ["e"=1]
"vercel/ai" -> "vercel/turborepo" ["e"=1]
"vercel/ai" -> "openai/openai-node"
"vercel/ai" -> "radix-ui/primitives" ["e"=1]
"vercel/ai" -> "shadcn-ui/ui" ["e"=1]
"vercel/ai" -> "CopilotKit/CopilotKit" ["e"=1]
"vercel/ai" -> "mastra-ai/mastra"
"vercel/ai" -> "miurla/morphic"
"vercel/ai" -> "resend/react-email" ["e"=1]
"vercel/ai" -> "better-auth/better-auth" ["e"=1]
"vercel/ai" -> "nextauthjs/next-auth" ["e"=1]
"vercel/ai" -> "shadcn-ui/taxonomy" ["e"=1]
"vercel/ai" -> "shuding/nextra" ["e"=1]
"1rgs/jsonformer" -> "dottxt-ai/outlines"
"1rgs/jsonformer" -> "guidance-ai/guidance"
"1rgs/jsonformer" -> "eth-sri/lmql"
"1rgs/jsonformer" -> "guardrails-ai/guardrails"
"1rgs/jsonformer" -> "noamgat/lm-format-enforcer"
"1rgs/jsonformer" -> "567-labs/instructor"
"1rgs/jsonformer" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"1rgs/jsonformer" -> "PrefectHQ/marvin" ["e"=1]
"1rgs/jsonformer" -> "ShishirPatil/gorilla" ["e"=1]
"1rgs/jsonformer" -> "piercefreeman/gpt-json" ["e"=1]
"1rgs/jsonformer" -> "stanfordnlp/dspy"
"1rgs/jsonformer" -> "MeetKai/functionary"
"1rgs/jsonformer" -> "e2b-dev/E2B" ["e"=1]
"1rgs/jsonformer" -> "zilliztech/GPTCache" ["e"=1]
"1rgs/jsonformer" -> "promptfoo/promptfoo"
"noamgat/lm-format-enforcer" -> "dottxt-ai/outlines"
"noamgat/lm-format-enforcer" -> "eth-sri/lmql"
"noamgat/lm-format-enforcer" -> "1rgs/jsonformer"
"noamgat/lm-format-enforcer" -> "MeetKai/functionary"
"noamgat/lm-format-enforcer" -> "mlc-ai/xgrammar" ["e"=1]
"noamgat/lm-format-enforcer" -> "turboderp-org/exllamav2" ["e"=1]
"noamgat/lm-format-enforcer" -> "turboderp/exllama" ["e"=1]
"noamgat/lm-format-enforcer" -> "S-LoRA/S-LoRA" ["e"=1]
"noamgat/lm-format-enforcer" -> "sgl-project/sglang" ["e"=1]
"noamgat/lm-format-enforcer" -> "AnswerDotAI/RAGatouille"
"noamgat/lm-format-enforcer" -> "567-labs/instructor"
"noamgat/lm-format-enforcer" -> "FasterDecoding/Medusa" ["e"=1]
"noamgat/lm-format-enforcer" -> "guardrails-ai/guardrails"
"noamgat/lm-format-enforcer" -> "aphrodite-engine/aphrodite-engine" ["e"=1]
"noamgat/lm-format-enforcer" -> "michaelfeil/infinity"
"Mooler0410/LLMsPracticalGuide" -> "RUCAIBox/LLMSurvey" ["e"=1]
"Mooler0410/LLMsPracticalGuide" -> "Hannibal046/Awesome-LLM"
"Mooler0410/LLMsPracticalGuide" -> "huggingface/peft"
"Mooler0410/LLMsPracticalGuide" -> "eugeneyan/open-llms"
"Mooler0410/LLMsPracticalGuide" -> "BradyFU/Awesome-Multimodal-Large-Language-Models" ["e"=1]
"Mooler0410/LLMsPracticalGuide" -> "WooooDyy/LLM-Agent-Paper-List" ["e"=1]
"Mooler0410/LLMsPracticalGuide" -> "tloen/alpaca-lora"
"Mooler0410/LLMsPracticalGuide" -> "lm-sys/FastChat"
"Mooler0410/LLMsPracticalGuide" -> "tatsu-lab/stanford_alpaca"
"Mooler0410/LLMsPracticalGuide" -> "artidoro/qlora"
"Mooler0410/LLMsPracticalGuide" -> "huggingface/trl" ["e"=1]
"Mooler0410/LLMsPracticalGuide" -> "nlpxucan/WizardLM"
"Mooler0410/LLMsPracticalGuide" -> "EleutherAI/lm-evaluation-harness" ["e"=1]
"Mooler0410/LLMsPracticalGuide" -> "OptimalScale/LMFlow" ["e"=1]
"Mooler0410/LLMsPracticalGuide" -> "HqWu-HITCS/Awesome-Chinese-LLM" ["e"=1]
"LevanKvirkvelia/salute" -> "Yawanseh/guidescript"
"huggingface/transformers.js" -> "mlc-ai/web-llm"
"huggingface/transformers.js" -> "langchain-ai/langchainjs"
"huggingface/transformers.js" -> "xenova/whisper-web" ["e"=1]
"huggingface/transformers.js" -> "electric-sql/pglite" ["e"=1]
"huggingface/transformers.js" -> "vercel/ai"
"huggingface/transformers.js" -> "xyflow/xyflow" ["e"=1]
"huggingface/transformers.js" -> "honojs/hono" ["e"=1]
"huggingface/transformers.js" -> "Mozilla-Ocho/llamafile"
"huggingface/transformers.js" -> "oxc-project/oxc" ["e"=1]
"huggingface/transformers.js" -> "roboflow/supervision"
"huggingface/transformers.js" -> "mendableai/firecrawl"
"huggingface/transformers.js" -> "steven-tey/novel" ["e"=1]
"huggingface/transformers.js" -> "myshell-ai/OpenVoice" ["e"=1]
"huggingface/transformers.js" -> "tldraw/tldraw" ["e"=1]
"huggingface/transformers.js" -> "imgly/background-removal-js" ["e"=1]
"MorpheusAIs/Morpheus" -> "MorpheusAIs/Docs"
"MorpheusAIs/Morpheus" -> "MorpheusAIs/MySuperAgent"
"MorpheusAIs/Morpheus" -> "MorpheusAIs/SmartContracts"
"MorpheusAIs/Morpheus" -> "DecentralizeAI/MRC"
"MorpheusAIs/Morpheus" -> "MorpheusAIs/MRC"
"abetlen/llama-cpp-python" -> "ggml-org/llama.cpp"
"abetlen/llama-cpp-python" -> "ggml-org/ggml"
"abetlen/llama-cpp-python" -> "marella/ctransformers" ["e"=1]
"abetlen/llama-cpp-python" -> "oobabooga/text-generation-webui"
"abetlen/llama-cpp-python" -> "huggingface/text-generation-inference" ["e"=1]
"abetlen/llama-cpp-python" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"abetlen/llama-cpp-python" -> "vllm-project/vllm"
"abetlen/llama-cpp-python" -> "AutoGPTQ/AutoGPTQ" ["e"=1]
"abetlen/llama-cpp-python" -> "nlpxucan/WizardLM"
"abetlen/llama-cpp-python" -> "run-llama/llama_index"
"abetlen/llama-cpp-python" -> "artidoro/qlora"
"abetlen/llama-cpp-python" -> "turboderp-org/exllamav2" ["e"=1]
"abetlen/llama-cpp-python" -> "huggingface/peft"
"abetlen/llama-cpp-python" -> "unslothai/unsloth"
"abetlen/llama-cpp-python" -> "guidance-ai/guidance"
"peremartra/Large-Language-Model-Notebooks-Course" -> "ashishpatel26/LLM-Finetuning"
"peremartra/Large-Language-Model-Notebooks-Course" -> "iusztinpaul/hands-on-llms" ["e"=1]
"peremartra/Large-Language-Model-Notebooks-Course" -> "PacktPublishing/LLM-Engineers-Handbook"
"peremartra/Large-Language-Model-Notebooks-Course" -> "decodingml/llm-twin-course"
"peremartra/Large-Language-Model-Notebooks-Course" -> "SylphAI-Inc/LLM-engineer-handbook"
"peremartra/Large-Language-Model-Notebooks-Course" -> "ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing"
"peremartra/Large-Language-Model-Notebooks-Course" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"peremartra/Large-Language-Model-Notebooks-Course" -> "IbrahimSobh/llms" ["e"=1]
"peremartra/Large-Language-Model-Notebooks-Course" -> "mistralai/cookbook"
"peremartra/Large-Language-Model-Notebooks-Course" -> "hananedupouy/LLMs-in-Finance"
"peremartra/Large-Language-Model-Notebooks-Course" -> "louisfb01/start-llms"
"peremartra/Large-Language-Model-Notebooks-Course" -> "Lordog/dive-into-llms" ["e"=1]
"peremartra/Large-Language-Model-Notebooks-Course" -> "huggingface/smol-course"
"peremartra/Large-Language-Model-Notebooks-Course" -> "mlabonne/llm-datasets"
"peremartra/Large-Language-Model-Notebooks-Course" -> "aishwaryanr/awesome-generative-ai-guide"
"redotvideo/haven" -> "trytrench/trench"
"redotvideo/haven" -> "automorphic-ai/aegis"
"redotvideo/haven" -> "poozlehq/poozle"
"redotvideo/haven" -> "Skyvern-AI/wyvern"
"redotvideo/haven" -> "briefercloud/ergomake"
"redotvideo/haven" -> "reworkd/bananalyzer"
"redotvideo/haven" -> "quack-ai/companion-vscode"
"redotvideo/haven" -> "Trainy-ai/llm-atc"
"redotvideo/haven" -> "cedana/cedana"
"redotvideo/haven" -> "cedana/cedana-cli"
"run-llama/finetune-embedding" -> "run-llama/modal_finetune_sql"
"run-llama/finetune-embedding" -> "yixuantt/MultiHop-RAG" ["e"=1]
"run-llama/finetune-embedding" -> "Raudaschl/rag-fusion"
"topoteretes/cognee" -> "kingjulio8238/Memary"
"topoteretes/cognee" -> "getzep/graphiti"
"topoteretes/cognee" -> "morphik-org/morphik-core"
"topoteretes/cognee" -> "PrefectHQ/ControlFlow" ["e"=1]
"topoteretes/cognee" -> "yoheinakajima/mindgraph"
"topoteretes/cognee" -> "KruxAI/ragbuilder"
"topoteretes/cognee" -> "SciPhi-AI/R2R"
"topoteretes/cognee" -> "OSU-NLP-Group/HippoRAG"
"topoteretes/cognee" -> "devflowinc/trieve" ["e"=1]
"topoteretes/cognee" -> "getzep/zep"
"topoteretes/cognee" -> "memodb-io/memobase"
"topoteretes/cognee" -> "neo4j-labs/llm-graph-builder"
"topoteretes/cognee" -> "circlemind-ai/fast-graphrag"
"topoteretes/cognee" -> "NirDiamant/Controllable-RAG-Agent"
"topoteretes/cognee" -> "lastmile-ai/mcp-agent"
"bbycroft/llm-viz" -> "poloclub/transformer-explainer"
"bbycroft/llm-viz" -> "naklecha/llama3-from-scratch"
"bbycroft/llm-viz" -> "czhixin/llm-viz-cn"
"bbycroft/llm-viz" -> "karpathy/llm.c"
"bbycroft/llm-viz" -> "openai/transformer-debugger" ["e"=1]
"bbycroft/llm-viz" -> "microsoft/graphrag"
"bbycroft/llm-viz" -> "ImagineAILab/ai-by-hand-excel"
"bbycroft/llm-viz" -> "TeamWiseFlow/wiseflow"
"bbycroft/llm-viz" -> "datawhalechina/llm-universe" ["e"=1]
"bbycroft/llm-viz" -> "rasbt/LLMs-from-scratch"
"bbycroft/llm-viz" -> "TencentARC/PhotoMaker" ["e"=1]
"bbycroft/llm-viz" -> "FlagOpen/FlagEmbedding" ["e"=1]
"bbycroft/llm-viz" -> "InternLM/lmdeploy" ["e"=1]
"bbycroft/llm-viz" -> "InternLM/MindSearch"
"bbycroft/llm-viz" -> "chenzomi12/AISystem" ["e"=1]
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/ACE_Framework"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/SparsePrimingRepresentations"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/OpenAI_Agent_Swarm"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/BSHR_Loop"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/latent_space_activation"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/Claude_Sentience"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/AI_Tools_and_Papers"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/weekly_arxiv"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/raven"
"daveshap/ChatGPT_Custom_Instructions" -> "ProfSynapse/Professor-Synapse"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/Raspberry"
"daveshap/ChatGPT_Custom_Instructions" -> "VRSEN/agency-swarm"
"daveshap/ChatGPT_Custom_Instructions" -> "nasa-petal/bidara"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/YouTube_Slide_Decks"
"daveshap/ChatGPT_Custom_Instructions" -> "daveshap/YouTubeChapterGenerator"
"twitter/the-algorithm-ml" -> "twitter/the-algorithm"
"twitter/the-algorithm-ml" -> "microsoft/JARVIS"
"twitter/the-algorithm-ml" -> "recommenders-team/recommenders" ["e"=1]
"twitter/the-algorithm-ml" -> "meta-llama/llama"
"twitter/the-algorithm-ml" -> "databrickslabs/dolly"
"twitter/the-algorithm-ml" -> "deepspeedai/DeepSpeed"
"twitter/the-algorithm-ml" -> "tatsu-lab/stanford_alpaca"
"twitter/the-algorithm-ml" -> "karpathy/nanoGPT"
"twitter/the-algorithm-ml" -> "Stability-AI/StableLM"
"twitter/the-algorithm-ml" -> "openai/chatgpt-retrieval-plugin"
"twitter/the-algorithm-ml" -> "huggingface/peft"
"twitter/the-algorithm-ml" -> "dair-ai/ML-Papers-Explained" ["e"=1]
"twitter/the-algorithm-ml" -> "chenfei-wu/TaskMatrix"
"twitter/the-algorithm-ml" -> "lm-sys/FastChat"
"twitter/the-algorithm-ml" -> "karpathy/llm.c"
"artidoro/qlora" -> "bitsandbytes-foundation/bitsandbytes" ["e"=1]
"artidoro/qlora" -> "huggingface/peft"
"artidoro/qlora" -> "tloen/alpaca-lora"
"artidoro/qlora" -> "Dao-AILab/flash-attention" ["e"=1]
"artidoro/qlora" -> "microsoft/LoRA"
"artidoro/qlora" -> "nlpxucan/WizardLM"
"artidoro/qlora" -> "huggingface/trl" ["e"=1]
"artidoro/qlora" -> "lm-sys/FastChat"
"artidoro/qlora" -> "tatsu-lab/stanford_alpaca"
"artidoro/qlora" -> "AutoGPTQ/AutoGPTQ" ["e"=1]
"artidoro/qlora" -> "OpenGVLab/LLaMA-Adapter"
"artidoro/qlora" -> "huggingface/text-generation-inference" ["e"=1]
"artidoro/qlora" -> "vllm-project/vllm"
"artidoro/qlora" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"artidoro/qlora" -> "openlm-research/open_llama"
"LangbaseInc/langui" -> "raidendotai/openv0"
"LangbaseInc/langui" -> "horizon-ui/chatgpt-ai-template" ["e"=1]
"LangbaseInc/langui" -> "MarsX-dev/floatui" ["e"=1]
"LangbaseInc/langui" -> "miurla/morphic"
"LangbaseInc/langui" -> "lobehub/lobe-ui" ["e"=1]
"LangbaseInc/langui" -> "ant-design/x" ["e"=1]
"LangbaseInc/langui" -> "langchain-ai/langchain-nextjs-template"
"LangbaseInc/langui" -> "nolly-studio/cult-ui" ["e"=1]
"LangbaseInc/langui" -> "assistant-ui/assistant-ui"
"LangbaseInc/langui" -> "motifland/markprompt" ["e"=1]
"LangbaseInc/langui" -> "steven-tey/novel" ["e"=1]
"LangbaseInc/langui" -> "superagent-ai/superagent" ["e"=1]
"LangbaseInc/langui" -> "developersdigest/llm-answer-engine"
"LangbaseInc/langui" -> "vercel/ai"
"LangbaseInc/langui" -> "vantezzen/autoform" ["e"=1]
"hrishioa/wishful-search" -> "hrishioa/lumentis"
"hrishioa/wishful-search" -> "KarelDO/xmc.dspy"
"OpenGVLab/LLaMA-Adapter" -> "Alpha-VLLM/LLaMA2-Accessory" ["e"=1]
"OpenGVLab/LLaMA-Adapter" -> "Lightning-AI/lit-llama"
"OpenGVLab/LLaMA-Adapter" -> "tloen/alpaca-lora"
"OpenGVLab/LLaMA-Adapter" -> "mlfoundations/open_flamingo" ["e"=1]
"OpenGVLab/LLaMA-Adapter" -> "salesforce/LAVIS" ["e"=1]
"OpenGVLab/LLaMA-Adapter" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"OpenGVLab/LLaMA-Adapter" -> "artidoro/qlora"
"OpenGVLab/LLaMA-Adapter" -> "huggingface/peft"
"OpenGVLab/LLaMA-Adapter" -> "haotian-liu/LLaVA" ["e"=1]
"OpenGVLab/LLaMA-Adapter" -> "BradyFU/Awesome-Multimodal-Large-Language-Models" ["e"=1]
"OpenGVLab/LLaMA-Adapter" -> "facebookresearch/ImageBind" ["e"=1]
"OpenGVLab/LLaMA-Adapter" -> "yizhongw/self-instruct" ["e"=1]
"OpenGVLab/LLaMA-Adapter" -> "openlm-research/open_llama"
"OpenGVLab/LLaMA-Adapter" -> "huggingface/trl" ["e"=1]
"OpenGVLab/LLaMA-Adapter" -> "X-PLUG/mPLUG-Owl" ["e"=1]
"mlc-ai/web-llm" -> "mlc-ai/mlc-llm"
"mlc-ai/web-llm" -> "mlc-ai/web-stable-diffusion"
"mlc-ai/web-llm" -> "huggingface/transformers.js"
"mlc-ai/web-llm" -> "lm-sys/FastChat"
"mlc-ai/web-llm" -> "ShishirPatil/gorilla" ["e"=1]
"mlc-ai/web-llm" -> "letta-ai/letta"
"mlc-ai/web-llm" -> "guidance-ai/guidance"
"mlc-ai/web-llm" -> "Mozilla-Ocho/llamafile"
"mlc-ai/web-llm" -> "run-llama/llama_index"
"mlc-ai/web-llm" -> "LAION-AI/Open-Assistant"
"mlc-ai/web-llm" -> "BerriAI/litellm"
"mlc-ai/web-llm" -> "yoheinakajima/babyagi" ["e"=1]
"mlc-ai/web-llm" -> "Stability-AI/StableLM"
"mlc-ai/web-llm" -> "oobabooga/text-generation-webui"
"mlc-ai/web-llm" -> "reworkd/AgentGPT"
"238SAMIxD/discord-ai-bot" -> "mxyng/discollama"
"238SAMIxD/discord-ai-bot" -> "kevinthedang/discord-ollama"
"238SAMIxD/discord-ai-bot" -> "rapmd73/Companion"
"Dicklesworthstone/llm_aided_ocr" -> "Ucas-HaoranWei/GOT-OCR2.0"
"Dicklesworthstone/llm_aided_ocr" -> "getomni-ai/zerox"
"Dicklesworthstone/llm_aided_ocr" -> "adithya-s-k/omniparse"
"Dicklesworthstone/llm_aided_ocr" -> "CosmosShadow/gptpdf"
"Dicklesworthstone/llm_aided_ocr" -> "Filimoa/open-parse"
"Dicklesworthstone/llm_aided_ocr" -> "VikParuchuri/surya"
"Dicklesworthstone/llm_aided_ocr" -> "CatchTheTornado/text-extract-api"
"Dicklesworthstone/llm_aided_ocr" -> "Nutlope/llama-ocr"
"Dicklesworthstone/llm_aided_ocr" -> "opendatalab/PDF-Extract-Kit"
"Dicklesworthstone/llm_aided_ocr" -> "yigitkonur/swift-ocr-llm-powered-pdf-to-markdown"
"Dicklesworthstone/llm_aided_ocr" -> "VikParuchuri/marker"
"Dicklesworthstone/llm_aided_ocr" -> "lumina-ai-inc/chunkr"
"Dicklesworthstone/llm_aided_ocr" -> "allenai/olmocr"
"Dicklesworthstone/llm_aided_ocr" -> "katanaml/sparrow"
"Dicklesworthstone/llm_aided_ocr" -> "X-PLUG/mPLUG-DocOwl" ["e"=1]
"codestoryai/aide" -> "codestoryai/sidecar" ["e"=1]
"codestoryai/aide" -> "Doriandarko/deepseek-engineer"
"codestoryai/aide" -> "srcbookdev/srcbook"
"codestoryai/aide" -> "Nutlope/llamacoder"
"codestoryai/aide" -> "RooVetGit/Roo-Code"
"codestoryai/aide" -> "steel-dev/steel-browser"
"codestoryai/aide" -> "groq/groq-appgen"
"codestoryai/aide" -> "gptme/gptme"
"codestoryai/aide" -> "e2b-dev/fragments"
"codestoryai/aide" -> "e2b-dev/open-computer-use"
"codestoryai/aide" -> "langchain-ai/open-canvas"
"codestoryai/aide" -> "AK391/ai-gradio"
"codestoryai/aide" -> "browserbase/open-operator"
"codestoryai/aide" -> "stackblitz-labs/bolt.diy"
"codestoryai/aide" -> "sourcegraph/cody"
"weaviate/healthsearch-demo" -> "weaviate/weaviate-podcast-search"
"Ironclad/rivet" -> "superagent-ai/superagent" ["e"=1]
"Ironclad/rivet" -> "microsoft/promptflow"
"Ironclad/rivet" -> "letta-ai/letta"
"Ironclad/rivet" -> "openchatai/copilot" ["e"=1]
"Ironclad/rivet" -> "langchain-ai/opengpts"
"Ironclad/rivet" -> "MervinPraison/PraisonAI"
"Ironclad/rivet" -> "OpenBMB/AgentVerse" ["e"=1]
"Ironclad/rivet" -> "xlang-ai/OpenAgents" ["e"=1]
"Ironclad/rivet" -> "aiwaves-cn/agents" ["e"=1]
"Ironclad/rivet" -> "trypromptly/LLMStack"
"Ironclad/rivet" -> "Helicone/helicone"
"Ironclad/rivet" -> "microsoft/TaskWeaver"
"Ironclad/rivet" -> "Chainlit/chainlit"
"Ironclad/rivet" -> "FlowiseAI/Flowise"
"Ironclad/rivet" -> "Doriandarko/maestro"
"gptme/gptme" -> "livekit/agents"
"gptme/gptme" -> "Nutlope/llamacoder"
"gptme/gptme" -> "MervinPraison/PraisonAI"
"gptme/gptme" -> "awslabs/agent-squad"
"gptme/gptme" -> "frdel/agent-zero"
"gptme/gptme" -> "microsoft/TinyTroupe"
"gptme/gptme" -> "e2b-dev/fragments"
"gptme/gptme" -> "Doriandarko/claude-engineer"
"gptme/gptme" -> "langchain-ai/open-canvas"
"gptme/gptme" -> "menloresearch/ichigo"
"gptme/gptme" -> "HKUDS/AutoAgent"
"gptme/gptme" -> "pydantic/pydantic-ai"
"gptme/gptme" -> "agno-agi/agno"
"gptme/gptme" -> "steel-dev/steel-browser"
"gptme/gptme" -> "zaidmukaddam/scira"
"lastmile-ai/aiconfig" -> "lastmile-ai/semantic-retrieval" ["e"=1]
"lastmile-ai/aiconfig" -> "lastmile-ai/llama-retrieval-plugin" ["e"=1]
"lastmile-ai/aiconfig" -> "langroid/langroid"
"lastmile-ai/aiconfig" -> "NeumTry/NeumAI"
"lastmile-ai/aiconfig" -> "lastmile-ai/lastmileai-python" ["e"=1]
"lastmile-ai/aiconfig" -> "hegelai/prompttools"
"lastmile-ai/aiconfig" -> "Forethought-Technologies/AutoChain" ["e"=1]
"lastmile-ai/aiconfig" -> "Link-AGI/AutoAgents" ["e"=1]
"lastmile-ai/aiconfig" -> "Agenta-AI/agenta"
"lastmile-ai/aiconfig" -> "KhoomeiK/LlamaGym"
"lastmile-ai/aiconfig" -> "griptape-ai/griptape"
"lastmile-ai/aiconfig" -> "cohere-ai/cohere-toolkit"
"huggingface/chat-ui" -> "huggingface/text-generation-inference" ["e"=1]
"huggingface/chat-ui" -> "mckaywrigley/chatbot-ui"
"huggingface/chat-ui" -> "Chainlit/chainlit"
"huggingface/chat-ui" -> "BerriAI/litellm"
"huggingface/chat-ui" -> "oobabooga/text-generation-webui"
"huggingface/chat-ui" -> "h2oai/h2ogpt"
"huggingface/chat-ui" -> "ShishirPatil/gorilla" ["e"=1]
"huggingface/chat-ui" -> "danny-avila/LibreChat"
"huggingface/chat-ui" -> "run-llama/llama_index"
"huggingface/chat-ui" -> "FlowiseAI/Flowise"
"huggingface/chat-ui" -> "guidance-ai/guidance"
"huggingface/chat-ui" -> "letta-ai/letta"
"huggingface/chat-ui" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"huggingface/chat-ui" -> "nlpxucan/WizardLM"
"huggingface/chat-ui" -> "mlc-ai/mlc-llm"
"sourcegraph/cody" -> "continuedev/continue"
"sourcegraph/cody" -> "sourcegraph/sourcegraph-public-snapshot" ["e"=1]
"sourcegraph/cody" -> "codestoryai/aide"
"sourcegraph/cody" -> "AutoCodeRoverSG/auto-code-rover"
"sourcegraph/cody" -> "AbanteAI/archive-old-cli-mentat" ["e"=1]
"sourcegraph/cody" -> "RooVetGit/Roo-Code"
"sourcegraph/cody" -> "Aider-AI/aider"
"sourcegraph/cody" -> "qodo-ai/pr-agent"
"sourcegraph/cody" -> "BuilderIO/micro-agent"
"sourcegraph/cody" -> "mufeedvh/code2prompt"
"sourcegraph/cody" -> "Codium-ai/AlphaCodium"
"sourcegraph/cody" -> "superagent-ai/superagent" ["e"=1]
"sourcegraph/cody" -> "twinnydotdev/twinny"
"sourcegraph/cody" -> "sweepai/sweep" ["e"=1]
"sourcegraph/cody" -> "unit-mesh/auto-dev"
"menloresearch/awesome-local-ai" -> "vince-lam/awesome-local-llms"
"menloresearch/awesome-local-ai" -> "menloresearch/cortex.cpp"
"menloresearch/awesome-local-ai" -> "felladrin/awesome-ai-web-search"
"menloresearch/awesome-local-ai" -> "turboderp-org/exllamav2" ["e"=1]
"menloresearch/awesome-local-ai" -> "JShollaj/awesome-llm-web-ui"
"menloresearch/awesome-local-ai" -> "rashadphz/farfalle"
"menloresearch/awesome-local-ai" -> "mahseema/awesome-ai-tools" ["e"=1]
"menloresearch/awesome-local-ai" -> "menloresearch/jan"
"menloresearch/awesome-local-ai" -> "SecureAI-Tools/SecureAI-Tools" ["e"=1]
"menloresearch/awesome-local-ai" -> "underlines/awesome-ml" ["e"=1]
"menloresearch/awesome-local-ai" -> "mudler/LocalAGI" ["e"=1]
"menloresearch/awesome-local-ai" -> "langroid/langroid"
"menloresearch/awesome-local-ai" -> "louisgv/local.ai" ["e"=1]
"menloresearch/awesome-local-ai" -> "jaypyles/Scraperr" ["e"=1]
"menloresearch/awesome-local-ai" -> "intel/intel-extension-for-transformers" ["e"=1]
"menloresearch/cortex.cpp" -> "menloresearch/awesome-local-ai"
"menloresearch/cortex.cpp" -> "menloresearch/jan"
"menloresearch/cortex.cpp" -> "EricLBuehler/mistral.rs" ["e"=1]
"menloresearch/cortex.cpp" -> "menloresearch/ichigo"
"menloresearch/cortex.cpp" -> "turboderp-org/exllamav2" ["e"=1]
"menloresearch/cortex.cpp" -> "leejet/stable-diffusion.cpp"
"menloresearch/cortex.cpp" -> "SciPhi-AI/R2R"
"menloresearch/cortex.cpp" -> "SJTU-IPADS/PowerInfer" ["e"=1]
"menloresearch/cortex.cpp" -> "bionic-gpt/bionic-gpt"
"menloresearch/cortex.cpp" -> "pytorch/executorch" ["e"=1]
"menloresearch/cortex.cpp" -> "transformerlab/transformerlab-app"
"menloresearch/cortex.cpp" -> "BerriAI/litellm"
"menloresearch/cortex.cpp" -> "rashadphz/farfalle"
"menloresearch/cortex.cpp" -> "abetlen/llama-cpp-python"
"menloresearch/cortex.cpp" -> "asg017/sqlite-vec"
"comet-ml/opik" -> "patchy631/ai-engineering-hub"
"comet-ml/opik" -> "langfuse/langfuse"
"comet-ml/opik" -> "confident-ai/deepeval"
"comet-ml/opik" -> "meta-llama/llama-stack"
"comet-ml/opik" -> "pydantic/pydantic-ai"
"comet-ml/opik" -> "agno-agi/agno"
"comet-ml/opik" -> "awslabs/agent-squad"
"comet-ml/opik" -> "getzep/graphiti"
"comet-ml/opik" -> "Zipstack/unstract"
"comet-ml/opik" -> "docling-project/docling"
"comet-ml/opik" -> "BerriAI/litellm"
"comet-ml/opik" -> "NirDiamant/GenAI_Agents"
"comet-ml/opik" -> "Arize-ai/phoenix"
"comet-ml/opik" -> "Shubhamsaboo/awesome-llm-apps"
"comet-ml/opik" -> "QuivrHQ/MegaParse"
"kyegomez/swarms" -> "elizaOS/eliza"
"kyegomez/swarms" -> "awslabs/agent-squad"
"kyegomez/swarms" -> "zaidmukaddam/scira"
"kyegomez/swarms" -> "MervinPraison/PraisonAI"
"kyegomez/swarms" -> "openai/swarm"
"kyegomez/swarms" -> "0xPlaygrounds/rig" ["e"=1]
"kyegomez/swarms" -> "stanford-oval/storm"
"kyegomez/swarms" -> "microsoft/PromptWizard"
"kyegomez/swarms" -> "pydantic/pydantic-ai"
"kyegomez/swarms" -> "khoj-ai/khoj"
"kyegomez/swarms" -> "getzep/graphiti"
"kyegomez/swarms" -> "agno-agi/agno"
"kyegomez/swarms" -> "fixie-ai/ultravox"
"kyegomez/swarms" -> "livekit/agents"
"kyegomez/swarms" -> "Canner/WrenAI"
"camel-ai/camel" -> "camel-ai/owl"
"camel-ai/camel" -> "FoundationAgents/MetaGPT"
"camel-ai/camel" -> "yoheinakajima/babyagi" ["e"=1]
"camel-ai/camel" -> "microsoft/autogen"
"camel-ai/camel" -> "agno-agi/agno"
"camel-ai/camel" -> "crewAIInc/crewAI"
"camel-ai/camel" -> "OpenBMB/AgentVerse" ["e"=1]
"camel-ai/camel" -> "e2b-dev/awesome-ai-agents"
"camel-ai/camel" -> "mem0ai/mem0"
"camel-ai/camel" -> "letta-ai/letta"
"camel-ai/camel" -> "assafelovic/gpt-researcher"
"camel-ai/camel" -> "FoundationAgents/OpenManus"
"camel-ai/camel" -> "QwenLM/Qwen-Agent"
"camel-ai/camel" -> "stanfordnlp/dspy"
"camel-ai/camel" -> "run-llama/llama_index"
"Lightning-AI/lit-llama" -> "OpenGVLab/LLaMA-Adapter"
"Lightning-AI/lit-llama" -> "Lightning-AI/litgpt"
"Lightning-AI/lit-llama" -> "openlm-research/open_llama"
"Lightning-AI/lit-llama" -> "tloen/alpaca-lora"
"Lightning-AI/lit-llama" -> "artidoro/qlora"
"Lightning-AI/lit-llama" -> "mosaicml/llm-foundry"
"Lightning-AI/lit-llama" -> "jzhang38/TinyLlama" ["e"=1]
"Lightning-AI/lit-llama" -> "togethercomputer/RedPajama-Data"
"Lightning-AI/lit-llama" -> "huggingface/peft"
"Lightning-AI/lit-llama" -> "huggingface/trl" ["e"=1]
"Lightning-AI/lit-llama" -> "databrickslabs/dolly"
"Lightning-AI/lit-llama" -> "nlpxucan/WizardLM"
"Lightning-AI/lit-llama" -> "qwopqwop200/GPTQ-for-LLaMa"
"Lightning-AI/lit-llama" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"Lightning-AI/lit-llama" -> "facebookresearch/xformers" ["e"=1]
"aandrew-me/tgpt" -> "Simatwa/python-tgpt" ["e"=1]
"aandrew-me/tgpt" -> "sigoden/aichat"
"aandrew-me/tgpt" -> "0xacx/chatGPT-shell-cli"
"aandrew-me/tgpt" -> "TheR1D/shell_gpt"
"aandrew-me/tgpt" -> "aandrew-me/ytDownloader" ["e"=1]
"aandrew-me/tgpt" -> "charmbracelet/mods" ["e"=1]
"aandrew-me/tgpt" -> "ekkinox/yai"
"aandrew-me/tgpt" -> "jucasoliveira/terminalGPT"
"aandrew-me/tgpt" -> "pystardust/ytfzf" ["e"=1]
"aandrew-me/tgpt" -> "fairyglade/ly" ["e"=1]
"aandrew-me/tgpt" -> "MeanderingProgrammer/render-markdown.nvim" ["e"=1]
"aandrew-me/tgpt" -> "gokcehan/lf" ["e"=1]
"aandrew-me/tgpt" -> "Benexl/yt-x" ["e"=1]
"aandrew-me/tgpt" -> "jackMort/ChatGPT.nvim" ["e"=1]
"aandrew-me/tgpt" -> "rhasspy/piper" ["e"=1]
"Agenta-AI/agenta" -> "pezzolabs/pezzo"
"Agenta-AI/agenta" -> "langwatch/langwatch"
"Agenta-AI/agenta" -> "Helicone/helicone"
"Agenta-AI/agenta" -> "tensorchord/Awesome-LLMOps"
"Agenta-AI/agenta" -> "langfuse/langfuse"
"Agenta-AI/agenta" -> "promptfoo/promptfoo"
"Agenta-AI/agenta" -> "latitude-dev/latitude-llm"
"Agenta-AI/agenta" -> "Marker-Inc-Korea/AutoRAG"
"Agenta-AI/agenta" -> "simstudioai/sim"
"Agenta-AI/agenta" -> "hegelai/prompttools"
"Agenta-AI/agenta" -> "comet-ml/opik"
"Agenta-AI/agenta" -> "microsoft/PromptWizard"
"Agenta-AI/agenta" -> "steel-dev/steel-browser"
"Agenta-AI/agenta" -> "PySpur-Dev/pyspur"
"Agenta-AI/agenta" -> "Arize-ai/phoenix"
"ollama/ollama-js" -> "ollama/ollama-python"
"ollama/ollama-js" -> "langchain-ai/langchainjs"
"ollama/ollama-js" -> "withcatai/node-llama-cpp"
"ollama/ollama-js" -> "run-llama/LlamaIndexTS"
"ollama/ollama-js" -> "huggingface/transformers.js"
"ollama/ollama-js" -> "openai/openai-node"
"ollama/ollama-js" -> "ivanfioravanti/chatbot-ollama"
"ollama/ollama-js" -> "ollama-ui/ollama-ui"
"ollama/ollama-js" -> "vercel/ai"
"ollama/ollama-js" -> "modelcontextprotocol/typescript-sdk"
"ollama/ollama-js" -> "HelgeSverre/ollama-gui"
"ollama/ollama-js" -> "gluonfield/enchanted" ["e"=1]
"ollama/ollama-js" -> "jacoblee93/fully-local-pdf-chatbot"
"ollama/ollama-js" -> "sugarforever/chat-ollama"
"ollama/ollama-js" -> "jakobhoeg/nextjs-ollama-llm-ui"
"anysphere/priompt" -> "udecode/dotai"
"anysphere/priompt" -> "MadcowD/ell"
"anysphere/priompt" -> "NeoVertex1/SuperPrompt"
"anysphere/priompt" -> "hrishioa/lumentis"
"anysphere/priompt" -> "eastlondoner/cursor-tools"
"anysphere/priompt" -> "567-labs/instructor"
"anysphere/priompt" -> "entropy-research/Devon"
"anysphere/priompt" -> "dottxt-ai/outlines"
"anysphere/priompt" -> "virattt/financial-agent-ui"
"anysphere/priompt" -> "character-ai/prompt-poet"
"anysphere/priompt" -> "AnswerDotAI/RAGatouille"
"anysphere/priompt" -> "Doriandarko/claude-engineer"
"anysphere/priompt" -> "cohere-ai/cohere-toolkit"
"anysphere/priompt" -> "mshumer/gpt-prompt-engineer"
"anysphere/priompt" -> "Doriandarko/maestro"
"Mintplex-Labs/vector-admin" -> "Mintplex-Labs/openai-assistant-swarm" ["e"=1]
"Mintplex-Labs/vector-admin" -> "lancedb/lancedb"
"Mintplex-Labs/vector-admin" -> "trypromptly/LLMStack"
"Mintplex-Labs/vector-admin" -> "rnadigital/agentcloud" ["e"=1]
"Mintplex-Labs/vector-admin" -> "superagent-ai/superagent" ["e"=1]
"Mintplex-Labs/vector-admin" -> "flanker/chromadb-admin"
"Mintplex-Labs/vector-admin" -> "weaviate/Verba"
"Mintplex-Labs/vector-admin" -> "langroid/langroid"
"Mintplex-Labs/vector-admin" -> "MervinPraison/PraisonAI"
"Mintplex-Labs/vector-admin" -> "langchain-ai/langserve" ["e"=1]
"Mintplex-Labs/vector-admin" -> "Mintplex-Labs/anything-llm"
"Mintplex-Labs/vector-admin" -> "getzep/zep"
"Mintplex-Labs/vector-admin" -> "open-webui/pipelines" ["e"=1]
"Mintplex-Labs/vector-admin" -> "ragapp/ragapp"
"Mintplex-Labs/vector-admin" -> "SciPhi-AI/R2R"
"trholding/llama2.c" -> "vitoplantamura/OnnxStream"
"trholding/llama2.c" -> "karpathy/llama2.c"
"trholding/llama2.c" -> "turboderp-org/exllamav2" ["e"=1]
"trholding/llama2.c" -> "okuvshynov/slowllama"
"trholding/llama2.c" -> "b4rtaz/distributed-llama"
"trholding/llama2.c" -> "yacineMTB/talk" ["e"=1]
"trholding/llama2.c" -> "tairov/llama2.py" ["e"=1]
"trholding/llama2.c" -> "leejet/stable-diffusion.cpp"
"trholding/llama2.c" -> "facebookresearch/MobileLLM" ["e"=1]
"trholding/llama2.c" -> "postgresml/korvus"
"trholding/llama2.c" -> "YavorGIvanov/sam.cpp"
"trholding/llama2.c" -> "alessiodm/drl-zh" ["e"=1]
"trholding/llama2.c" -> "yl4579/StyleTTS2" ["e"=1]
"trholding/llama2.c" -> "RahulSChand/gpu_poor" ["e"=1]
"trholding/llama2.c" -> "apple/ml-ane-transformers" ["e"=1]
"pinecone-io/canopy" -> "pinecone-io/terraform-provider-pinecone" ["e"=1]
"pinecone-io/canopy" -> "pinecone-io/aws-reference-architecture-pulumi" ["e"=1]
"pinecone-io/canopy" -> "truera/trulens"
"pinecone-io/canopy" -> "pinecone-io/pinecone-python-client" ["e"=1]
"pinecone-io/canopy" -> "aurelio-labs/semantic-router"
"pinecone-io/canopy" -> "pinecone-io/pinecone-vercel-starter" ["e"=1]
"pinecone-io/canopy" -> "truefoundry/cognita"
"pinecone-io/canopy" -> "pinecone-io/pinecone-client" ["e"=1]
"pinecone-io/canopy" -> "pinecone-io/pinecone-ts-client" ["e"=1]
"pinecone-io/canopy" -> "fleet-ai/context"
"pinecone-io/canopy" -> "Raudaschl/rag-fusion"
"pinecone-io/canopy" -> "RUC-NLPIR/FlashRAG"
"pinecone-io/canopy" -> "pinecone-io/examples" ["e"=1]
"pinecone-io/canopy" -> "langroid/langroid"
"pinecone-io/canopy" -> "AnswerDotAI/RAGatouille"
"modal-labs/quillman" -> "modal-labs/modal-examples"
"modal-labs/quillman" -> "modal-labs/modal-client"
"modal-labs/quillman" -> "farizrahman4u/loopgpt" ["e"=1]
"modal-labs/quillman" -> "danielgross/LlamaAcademy" ["e"=1]
"modal-labs/quillman" -> "metavoiceio/tortoise-tts"
"modal-labs/quillman" -> "steven-tey/chathn" ["e"=1]
"modal-labs/quillman" -> "lxe/llavavision" ["e"=1]
"modal-labs/quillman" -> "yacineMTB/talk" ["e"=1]
"modal-labs/quillman" -> "modal-labs/devlooper" ["e"=1]
"modal-labs/quillman" -> "paulpierre/RasaGPT" ["e"=1]
"modal-labs/quillman" -> "gmpetrov/databerry" ["e"=1]
"modal-labs/quillman" -> "wgryc/phasellm" ["e"=1]
"amaiya/onprem" -> "FlorianDietz/comgra"
"amaiya/onprem" -> "georgian-io/LLM-Finetuning-Toolkit"
"amaiya/onprem" -> "aasimsani/meow-learning" ["e"=1]
"amaiya/onprem" -> "Yifan-Song793/RestGPT"
"rapidpages/rapidpages" -> "raidendotai/openv0"
"rapidpages/rapidpages" -> "Yuyz0112/dewhale"
"rapidpages/rapidpages" -> "SawyerHood/tlbrowse"
"rapidpages/rapidpages" -> "Doriandarko/gemini-ui-to-code"
"rapidpages/rapidpages" -> "eylonmiz/react-agent" ["e"=1]
"rapidpages/rapidpages" -> "e2b-dev/fragments"
"rapidpages/rapidpages" -> "WindChat-Link/windchat-extension"
"rapidpages/rapidpages" -> "fill3d/fill" ["e"=1]
"rapidpages/rapidpages" -> "RubricLab/create-rubric-app" ["e"=1]
"rapidpages/rapidpages" -> "jgravelle/AutoGroq"
"rapidpages/rapidpages" -> "entropy-research/Devon"
"nickdobos/agiDotZip" -> "nikvdp/agentgrunt"
"nickdobos/agiDotZip" -> "nickdobos/PromptGrimoire"
"nickdobos/agiDotZip" -> "adamcohenhillel/LLMitlessAPI" ["e"=1]
"qdrant/fastembed" -> "qdrant/qdrant-client"
"qdrant/fastembed" -> "michaelfeil/infinity"
"qdrant/fastembed" -> "AnswerDotAI/RAGatouille"
"qdrant/fastembed" -> "huggingface/text-embeddings-inference" ["e"=1]
"qdrant/fastembed" -> "AnswerDotAI/rerankers"
"qdrant/fastembed" -> "PrithivirajDamodaran/FlashRank"
"qdrant/fastembed" -> "xhluca/bm25s"
"qdrant/fastembed" -> "urchade/GLiNER"
"qdrant/fastembed" -> "huggingface/setfit" ["e"=1]
"qdrant/fastembed" -> "argilla-io/distilabel" ["e"=1]
"qdrant/fastembed" -> "aurelio-labs/semantic-router"
"qdrant/fastembed" -> "lancedb/lancedb"
"qdrant/fastembed" -> "MinishLab/semhash"
"qdrant/fastembed" -> "AnswerDotAI/byaldi"
"qdrant/fastembed" -> "huggingface/lighteval" ["e"=1]
"withcatai/catai" -> "withcatai/node-llama-cpp"
"rivet-gg/rivet" -> "rivet-gg/actor-core" ["e"=1]
"rivet-gg/rivet" -> "AmbientRun/Ambient" ["e"=1]
"rivet-gg/rivet" -> "usecakework/cakework"
"rivet-gg/rivet" -> "matanolabs/matano"
"rivet-gg/rivet" -> "bitbrain/beehave" ["e"=1]
"rivet-gg/rivet" -> "tableflowhq/csv-import"
"rivet-gg/rivet" -> "gaea-godot/gaea" ["e"=1]
"rivet-gg/rivet" -> "enrolla/enrolla"
"rivet-gg/rivet" -> "moonrepo/moon" ["e"=1]
"rivet-gg/rivet" -> "Ark2000/PankuConsole" ["e"=1]
"rivet-gg/rivet" -> "highlight/highlight" ["e"=1]
"rivet-gg/rivet" -> "magicpatterns/catalog"
"rivet-gg/rivet" -> "hyperdxio/hyperdx" ["e"=1]
"rivet-gg/rivet" -> "clockworklabs/SpacetimeDB" ["e"=1]
"rivet-gg/rivet" -> "ArroyoSystems/arroyo" ["e"=1]
"camenduru/text-generation-webui-colab" -> "camenduru/text-generation-webui"
"camenduru/text-generation-webui-colab" -> "liltom-eth/llama2-webui" ["e"=1]
"camenduru/text-generation-webui-colab" -> "Troyanovsky/Local-LLM-Comparison-Colab-UI" ["e"=1]
"camenduru/text-generation-webui-colab" -> "camenduru/text-to-video-synthesis-colab" ["e"=1]
"camenduru/text-generation-webui-colab" -> "huggingface/autotrain-advanced" ["e"=1]
"camenduru/text-generation-webui-colab" -> "deep-diver/LLM-As-Chatbot"
"camenduru/text-generation-webui-colab" -> "oobabooga/text-generation-webui"
"camenduru/text-generation-webui-colab" -> "llSourcell/Doctor-Dignity" ["e"=1]
"camenduru/text-generation-webui-colab" -> "nlpxucan/WizardLM"
"camenduru/text-generation-webui-colab" -> "camenduru/stable-diffusion-webui-colab" ["e"=1]
"camenduru/text-generation-webui-colab" -> "camenduru/seamless-m4t-colab"
"camenduru/text-generation-webui-colab" -> "sanchit-gandhi/whisper-jax" ["e"=1]
"camenduru/text-generation-webui-colab" -> "bentoml/OpenLLM"
"camenduru/text-generation-webui-colab" -> "dsdanielpark/Bard-API" ["e"=1]
"camenduru/text-generation-webui-colab" -> "mshumer/gpt-llm-trainer" ["e"=1]
"getzep/zep" -> "superagent-ai/superagent" ["e"=1]
"getzep/zep" -> "letta-ai/letta"
"getzep/zep" -> "kingjulio8238/Memary"
"getzep/zep" -> "getzep/graphiti"
"getzep/zep" -> "finic-ai/finic"
"getzep/zep" -> "SciPhi-AI/R2R"
"getzep/zep" -> "hegelai/prompttools"
"getzep/zep" -> "Helicone/helicone"
"getzep/zep" -> "relari-ai/continuous-eval" ["e"=1]
"getzep/zep" -> "lanterndata/lantern" ["e"=1]
"getzep/zep" -> "Chainlit/chainlit"
"getzep/zep" -> "getmetal/motorhead"
"getzep/zep" -> "AgentOps-AI/agentops"
"getzep/zep" -> "567-labs/instructor"
"getzep/zep" -> "langfuse/langfuse"
"ParisNeo/lollms" -> "ParisNeo/lollms_personalities_zoo"
"ParisNeo/lollms" -> "ParisNeo/petals_server_installer"
"ParisNeo/lollms" -> "ParisNeo/safe_store"
"meteroid-oss/meteroid" -> "openmeterio/openmeter"
"meteroid-oss/meteroid" -> "uselotus/lotus" ["e"=1]
"meteroid-oss/meteroid" -> "bytechefhq/bytechef" ["e"=1]
"meteroid-oss/meteroid" -> "getlago/lago" ["e"=1]
"apirrone/Memento" -> "TheSethRose/Time-Capsule"
"apirrone/Memento" -> "dhamaniasad/cytev2"
"apirrone/Memento" -> "MorpheusAIs/Morpheus"
"apirrone/Memento" -> "OwlAIProject/Owl"
"apirrone/Memento" -> "jasonjmcghee/rem"
"apirrone/Memento" -> "Vincent-liuwingsang/unlost"
"apirrone/Memento" -> "yuka-friends/Windrecorder"
"apirrone/Memento" -> "openrecall/openrecall"
"brilliantlabsAR/frame-codebase" -> "brilliantlabsAR/frame-utilities-for-python"
"brilliantlabsAR/frame-codebase" -> "brilliantlabsAR/noa-assistant"
"brilliantlabsAR/frame-codebase" -> "brilliantlabsAR/noa-flutter"
"brilliantlabsAR/frame-codebase" -> "brilliantlabsAR/ar-studio-for-vscode"
"brilliantlabsAR/frame-codebase" -> "brilliantlabsAR/docs"
"brilliantlabsAR/frame-codebase" -> "brilliantlabsAR/noa-for-ios"
"QwenLM/Qwen-Agent" -> "QwenLM/Qwen3" ["e"=1]
"QwenLM/Qwen-Agent" -> "QwenLM/Qwen" ["e"=1]
"QwenLM/Qwen-Agent" -> "FlagOpen/FlagEmbedding" ["e"=1]
"QwenLM/Qwen-Agent" -> "modelscope/modelscope-agent" ["e"=1]
"QwenLM/Qwen-Agent" -> "modelscope/ms-swift" ["e"=1]
"QwenLM/Qwen-Agent" -> "QwenLM/Qwen2.5-VL" ["e"=1]
"QwenLM/Qwen-Agent" -> "xorbitsai/inference"
"QwenLM/Qwen-Agent" -> "eosphoros-ai/DB-GPT"
"QwenLM/Qwen-Agent" -> "microsoft/graphrag"
"QwenLM/Qwen-Agent" -> "yangjianxin1/Firefly" ["e"=1]
"QwenLM/Qwen-Agent" -> "netease-youdao/QAnything"
"QwenLM/Qwen-Agent" -> "hiyouga/LLaMA-Factory"
"QwenLM/Qwen-Agent" -> "sgl-project/sglang" ["e"=1]
"QwenLM/Qwen-Agent" -> "QwenLM/Qwen-VL" ["e"=1]
"QwenLM/Qwen-Agent" -> "open-compass/opencompass" ["e"=1]
"ianarawjo/ChainForge" -> "promptfoo/promptfoo"
"ianarawjo/ChainForge" -> "hegelai/prompttools"
"ianarawjo/ChainForge" -> "guardrails-ai/guardrails"
"ianarawjo/ChainForge" -> "superagent-ai/superagent" ["e"=1]
"ianarawjo/ChainForge" -> "mshumer/gpt-prompt-engineer"
"ianarawjo/ChainForge" -> "Agenta-AI/agenta"
"ianarawjo/ChainForge" -> "getzep/zep"
"ianarawjo/ChainForge" -> "Ironclad/rivet"
"ianarawjo/ChainForge" -> "griptape-ai/griptape"
"ianarawjo/ChainForge" -> "dottxt-ai/outlines"
"ianarawjo/ChainForge" -> "567-labs/instructor"
"ianarawjo/ChainForge" -> "pezzolabs/pezzo"
"ianarawjo/ChainForge" -> "guidance-ai/guidance"
"ianarawjo/ChainForge" -> "Forethought-Technologies/AutoChain" ["e"=1]
"ianarawjo/ChainForge" -> "finic-ai/finic"
"withcatai/node-llama-cpp" -> "withcatai/catai"
"withcatai/node-llama-cpp" -> "Atome-FE/llama-node"
"withcatai/node-llama-cpp" -> "ollama/ollama-js"
"withcatai/node-llama-cpp" -> "tangledgroup/llama-cpp-wasm"
"withcatai/node-llama-cpp" -> "ngxson/wllama"
"withcatai/node-llama-cpp" -> "run-llama/LlamaIndexTS"
"withcatai/node-llama-cpp" -> "Stevenic/vectra"
"withcatai/node-llama-cpp" -> "mybigday/llama.rn" ["e"=1]
"withcatai/node-llama-cpp" -> "vercel/modelfusion"
"withcatai/node-llama-cpp" -> "mdrokz/rust-llama.cpp" ["e"=1]
"withcatai/node-llama-cpp" -> "huggingface/transformers.js"
"withcatai/node-llama-cpp" -> "llm-tools/embedJs"
"withcatai/node-llama-cpp" -> "dakenf/diffusers.js"
"withcatai/node-llama-cpp" -> "ChetanXpro/nodejs-whisper"
"withcatai/node-llama-cpp" -> "langchain-ai/langchainjs"
"ax-llm/ax" -> "Siddharth1India/Awesome-Deep-Learning"
"ax-llm/ax" -> "Scale3-Labs/langtrace"
"ax-llm/ax" -> "langwatch/langwatch"
"ax-llm/ax" -> "ganarajpr/awesome-dspy"
"ax-llm/ax" -> "griptape-ai/griptape"
"ax-llm/ax" -> "zenbase-ai/core" ["e"=1]
"ax-llm/ax" -> "MarianoMolina/project_alice" ["e"=1]
"ax-llm/ax" -> "KarelDO/xmc.dspy"
"ax-llm/ax" -> "zou-group/textgrad"
"ax-llm/ax" -> "cohere-ai/cohere-toolkit"
"ax-llm/ax" -> "langroid/langroid"
"ax-llm/ax" -> "AnswerDotAI/RAGatouille"
"ax-llm/ax" -> "Helicone/helicone"
"ax-llm/ax" -> "langchain-ai/langgraphjs"
"ax-llm/ax" -> "anysphere/priompt"
"WTFAcademy/WTF-Langchain" -> "sugarforever/wtf-langchain"
"WTFAcademy/WTF-Langchain" -> "sugarforever/LangChain-Advanced"
"WTFAcademy/WTF-Langchain" -> "sugarforever/LlamaIndex-Tutorials"
"WTFAcademy/WTF-Langchain" -> "sugarforever/LangChain-Tutorials"
"satellitecomponent/Neurite" -> "truefoundry/cognita"
"satellitecomponent/Neurite" -> "SciPhi-AI/R2R"
"satellitecomponent/Neurite" -> "langroid/langroid"
"satellitecomponent/Neurite" -> "Josh-XT/AGiXT" ["e"=1]
"satellitecomponent/Neurite" -> "RUC-NLPIR/FlashRAG"
"satellitecomponent/Neurite" -> "superagent-ai/superagent" ["e"=1]
"satellitecomponent/Neurite" -> "neuml/txtai"
"satellitecomponent/Neurite" -> "farizrahman4u/loopgpt" ["e"=1]
"satellitecomponent/Neurite" -> "trypromptly/LLMStack"
"satellitecomponent/Neurite" -> "pashpashpash/vault-ai" ["e"=1]
"satellitecomponent/Neurite" -> "topoteretes/cognee"
"satellitecomponent/Neurite" -> "Ironclad/rivet"
"satellitecomponent/Neurite" -> "e2b-dev/awesome-ai-sdks" ["e"=1]
"satellitecomponent/Neurite" -> "Mintplex-Labs/openai-assistant-swarm" ["e"=1]
"satellitecomponent/Neurite" -> "reorproject/reor"
"qwopqwop200/GPTQ-for-LLaMa" -> "IST-DASLab/gptq" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "AutoGPTQ/AutoGPTQ" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "turboderp/exllama" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "mit-han-lab/llm-awq" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "mit-han-lab/smoothquant" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "casper-hansen/AutoAWQ" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "bitsandbytes-foundation/bitsandbytes" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "johnsmith0031/alpaca_lora_4bit" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "artidoro/qlora"
"qwopqwop200/GPTQ-for-LLaMa" -> "juncongmoo/pyllama"
"qwopqwop200/GPTQ-for-LLaMa" -> "gururise/AlpacaDataCleaned" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "tloen/alpaca-lora"
"qwopqwop200/GPTQ-for-LLaMa" -> "NVIDIA/FasterTransformer" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "SqueezeAILab/SqueezeLLM" ["e"=1]
"qwopqwop200/GPTQ-for-LLaMa" -> "turboderp-org/exllamav2" ["e"=1]
"twinnydotdev/twinny" -> "ex3ndr/llama-coder"
"twinnydotdev/twinny" -> "continuedev/continue"
"twinnydotdev/twinny" -> "rjmacarthy/twinny-api"
"twinnydotdev/twinny" -> "srikanth235/privy"
"twinnydotdev/twinny" -> "RussellCanfield/wingman-ai"
"twinnydotdev/twinny" -> "Mozilla-Ocho/llamafile"
"twinnydotdev/twinny" -> "sourcegraph/cody"
"twinnydotdev/twinny" -> "TabbyML/tabby"
"twinnydotdev/twinny" -> "bernardo-bruning/ollama-copilot"
"twinnydotdev/twinny" -> "BerriAI/litellm"
"twinnydotdev/twinny" -> "semanser/codel"
"twinnydotdev/twinny" -> "andrewnguonly/Lumos"
"twinnydotdev/twinny" -> "Aider-AI/aider"
"twinnydotdev/twinny" -> "n4ze3m/page-assist"
"twinnydotdev/twinny" -> "rashadphz/farfalle"
"run-llama/LlamaIndexTS" -> "run-llama/chat-llamaindex"
"run-llama/LlamaIndexTS" -> "run-llama/create-llama"
"run-llama/LlamaIndexTS" -> "langchain-ai/langchainjs"
"run-llama/LlamaIndexTS" -> "langchain-ai/langgraphjs"
"run-llama/LlamaIndexTS" -> "run-llama/sec-insights"
"run-llama/LlamaIndexTS" -> "langchain-ai/langchain-nextjs-template"
"run-llama/LlamaIndexTS" -> "run-llama/llama-lab" ["e"=1]
"run-llama/LlamaIndexTS" -> "run-llama/llama_cloud_services"
"run-llama/LlamaIndexTS" -> "run-llama/llama_index"
"run-llama/LlamaIndexTS" -> "ollama/ollama-js"
"run-llama/LlamaIndexTS" -> "vercel/ai"
"run-llama/LlamaIndexTS" -> "withcatai/node-llama-cpp"
"run-llama/LlamaIndexTS" -> "modelcontextprotocol/typescript-sdk"
"run-llama/LlamaIndexTS" -> "huggingface/transformers.js"
"run-llama/LlamaIndexTS" -> "run-llama/llama-hub" ["e"=1]
"ProfSynapse/Professor-Synapse" -> "daveshap/ChatGPT_Custom_Instructions"
"ProfSynapse/Professor-Synapse" -> "ProfSynapse/Super_Synapse"
"ProfSynapse/Professor-Synapse" -> "spdustin/ChatGPT-AutoExpert"
"ProfSynapse/Professor-Synapse" -> "langgptai/LangGPT"
"ProfSynapse/Professor-Synapse" -> "daveshap/OpenAI_Agent_Swarm"
"ProfSynapse/Professor-Synapse" -> "daveshap/ACE_Framework"
"ProfSynapse/Professor-Synapse" -> "mshumer/gpt-prompt-engineer"
"ProfSynapse/Professor-Synapse" -> "ProfSynapse/dream-text-to-image"
"ProfSynapse/Professor-Synapse" -> "VRSEN/agency-swarm"
"ProfSynapse/Professor-Synapse" -> "daveshap/SparsePrimingRepresentations"
"ProfSynapse/Professor-Synapse" -> "letta-ai/letta"
"ProfSynapse/Professor-Synapse" -> "JushBJJ/Mr.-Ranedeer-AI-Tutor"
"ProfSynapse/Professor-Synapse" -> "ai-boost/Awesome-GPTs" ["e"=1]
"ProfSynapse/Professor-Synapse" -> "ai-boost/awesome-prompts" ["e"=1]
"ProfSynapse/Professor-Synapse" -> "LouisShark/chatgpt_system_prompt"
"sugarforever/LangChain-Tutorials" -> "sugarforever/LangChain-Advanced"
"sugarforever/LangChain-Tutorials" -> "sugarforever/LlamaIndex-Tutorials"
"sugarforever/LangChain-Tutorials" -> "sugarforever/wtf-langchain"
"sugarforever/LangChain-Tutorials" -> "WTFAcademy/WTF-Langchain"
"sugarforever/LangChain-Tutorials" -> "nftblackmagic/flask-langchain"
"sugarforever/LangChain-Tutorials" -> "sugarforever/Advanced-RAG"
"sugarforever/LangChain-Tutorials" -> "sugarforever/LangChain-SQL-Chain"
"sugarforever/LangChain-Tutorials" -> "sugarforever/chat-ollama"
"sugarforever/LangChain-Tutorials" -> "yanqiangmiffy/Chinese-LangChain" ["e"=1]
"sugarforever/LangChain-Tutorials" -> "samwit/langchain-tutorials" ["e"=1]
"sugarforever/LangChain-Tutorials" -> "X-D-Lab/LangChain-ChatGLM-Webui" ["e"=1]
"run-llama/sec-insights" -> "run-llama/chat-llamaindex"
"run-llama/sec-insights" -> "run-llama/llama-hub" ["e"=1]
"run-llama/sec-insights" -> "nlmatics/llmsherpa"
"run-llama/sec-insights" -> "superagent-ai/superagent" ["e"=1]
"run-llama/sec-insights" -> "run-llama/llama-lab" ["e"=1]
"run-llama/sec-insights" -> "run-llama/create-llama"
"run-llama/sec-insights" -> "AnswerDotAI/RAGatouille"
"run-llama/sec-insights" -> "567-labs/instructor"
"run-llama/sec-insights" -> "n4ze3m/dialoqbase" ["e"=1]
"run-llama/sec-insights" -> "shroominic/codeinterpreter-api" ["e"=1]
"run-llama/sec-insights" -> "run-llama/llama_cloud_services"
"run-llama/sec-insights" -> "explodinggradients/ragas"
"run-llama/sec-insights" -> "aiwaves-cn/agents" ["e"=1]
"run-llama/sec-insights" -> "Unstructured-IO/unstructured"
"run-llama/sec-insights" -> "run-llama/llama_deploy"
"raidendotai/openv0" -> "rapidpages/rapidpages"
"raidendotai/openv0" -> "nicoalbanese/kirimase" ["e"=1]
"raidendotai/openv0" -> "vantezzen/autoform" ["e"=1]
"raidendotai/openv0" -> "eylonmiz/react-agent" ["e"=1]
"raidendotai/openv0" -> "Yuyz0112/dewhale"
"raidendotai/openv0" -> "zernonia/vue0" ["e"=1]
"raidendotai/openv0" -> "raidendotai/cofounder"
"raidendotai/openv0" -> "steven-tey/novel" ["e"=1]
"raidendotai/openv0" -> "vercel/ai"
"raidendotai/openv0" -> "midday-ai/midday" ["e"=1]
"raidendotai/openv0" -> "miurla/morphic"
"raidendotai/openv0" -> "openchatai/copilot" ["e"=1]
"raidendotai/openv0" -> "udecode/plate" ["e"=1]
"raidendotai/openv0" -> "steven-tey/precedent" ["e"=1]
"raidendotai/openv0" -> "pondorasti/emojis" ["e"=1]
"MeetKai/functionary" -> "rizerphe/local-llm-function-calling" ["e"=1]
"MeetKai/functionary" -> "noamgat/lm-format-enforcer"
"MeetKai/functionary" -> "OpenBMB/ToolBench" ["e"=1]
"MeetKai/functionary" -> "rgbkrk/chatlab"
"MeetKai/functionary" -> "jondurbin/airoboros" ["e"=1]
"MeetKai/functionary" -> "eth-sri/lmql"
"MeetKai/functionary" -> "arcee-ai/mergekit" ["e"=1]
"MeetKai/functionary" -> "1rgs/jsonformer"
"MeetKai/functionary" -> "NousResearch/Hermes-Function-Calling" ["e"=1]
"MeetKai/functionary" -> "nexusflowai/NexusRaven" ["e"=1]
"MeetKai/functionary" -> "turboderp/exllama" ["e"=1]
"MeetKai/functionary" -> "dottxt-ai/outlines"
"MeetKai/functionary" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"MeetKai/functionary" -> "aurelio-labs/semantic-router"
"MeetKai/functionary" -> "ShishirPatil/gorilla" ["e"=1]
"emarco177/ice_breaker" -> "emarco177/documentation-helper"
"emarco177/ice_breaker" -> "emarco177/langgraph-course"
"timho102003/NewsGPT" -> "vishwasg217/fin-sight"
"unit-mesh/autodev-vscode" -> "unit-mesh/auto-dev"
"unit-mesh/autodev-vscode" -> "phodal/shire"
"wisherg/python_data_course" -> "BinNong/meet-libai"
"monatis/clip.cpp" -> "staghado/vit.cpp"
"monatis/clip.cpp" -> "PABannier/encodec.cpp"
"monatis/clip.cpp" -> "skeskinen/bert.cpp"
"monatis/clip.cpp" -> "PABannier/bark.cpp"
"monatis/clip.cpp" -> "Maknee/minigpt4.cpp"
"monatis/clip.cpp" -> "monatis/lmm.cpp"
"PABannier/encodec.cpp" -> "PABannier/bark.cpp"
"PABannier/bark.cpp" -> "PABannier/encodec.cpp"
"PABannier/bark.cpp" -> "balisujohn/tortoise.cpp"
"PABannier/bark.cpp" -> "leejet/stable-diffusion.cpp"
"PABannier/bark.cpp" -> "monatis/clip.cpp"
"PABannier/bark.cpp" -> "skeskinen/bert.cpp"
"PABannier/bark.cpp" -> "gitmylo/bark-voice-cloning-HuBERT-quantizer" ["e"=1]
"PABannier/bark.cpp" -> "akashmjn/tinydiarize"
"PABannier/bark.cpp" -> "Maknee/minigpt4.cpp"
"PABannier/bark.cpp" -> "YavorGIvanov/sam.cpp"
"PABannier/bark.cpp" -> "staghado/vit.cpp"
"PABannier/bark.cpp" -> "edwko/OuteTTS" ["e"=1]
"PABannier/bark.cpp" -> "ngxson/wllama"
"PABannier/bark.cpp" -> "Vaibhavs10/open-tts-tracker" ["e"=1]
"PABannier/bark.cpp" -> "mmwillet/TTS.cpp"
"PABannier/bark.cpp" -> "ggerganov/bark.cpp"
"NVIDIA/bionemo-examples" -> "NVIDIA-BioNeMo-blueprints/generative-virtual-screening"
"langroid/langroid" -> "567-labs/instructor"
"langroid/langroid" -> "BrainBlend-AI/atomic-agents"
"langroid/langroid" -> "SciPhi-AI/R2R"
"langroid/langroid" -> "neuml/txtai"
"langroid/langroid" -> "dottxt-ai/outlines"
"langroid/langroid" -> "MervinPraison/PraisonAI"
"langroid/langroid" -> "letta-ai/letta"
"langroid/langroid" -> "griptape-ai/griptape"
"langroid/langroid" -> "stanfordnlp/dspy"
"langroid/langroid" -> "Chainlit/chainlit"
"langroid/langroid" -> "xlang-ai/OpenAgents" ["e"=1]
"langroid/langroid" -> "confident-ai/deepeval"
"langroid/langroid" -> "BerriAI/litellm"
"langroid/langroid" -> "superagent-ai/superagent" ["e"=1]
"langroid/langroid" -> "DAGWorks-Inc/burr"
"OvidijusParsiunas/deep-chat" -> "assistant-ui/assistant-ui"
"OvidijusParsiunas/deep-chat" -> "ThinkInAIXYZ/deepchat"
"OvidijusParsiunas/deep-chat" -> "vercel-labs/gemini-chatbot"
"OvidijusParsiunas/deep-chat" -> "superagent-ai/superagent" ["e"=1]
"OvidijusParsiunas/deep-chat" -> "enricoros/big-AGI"
"OvidijusParsiunas/deep-chat" -> "openchatai/OpenChat" ["e"=1]
"OvidijusParsiunas/deep-chat" -> "OvidijusParsiunas/active-table" ["e"=1]
"OvidijusParsiunas/deep-chat" -> "weaviate/Verba"
"OvidijusParsiunas/deep-chat" -> "webwhiz-ai/webwhiz" ["e"=1]
"OvidijusParsiunas/deep-chat" -> "SamurAIGPT/Open-Custom-GPT" ["e"=1]
"OvidijusParsiunas/deep-chat" -> "vercel/ai-chatbot"
"OvidijusParsiunas/deep-chat" -> "openchatai/copilot" ["e"=1]
"OvidijusParsiunas/deep-chat" -> "refly-ai/refly"
"OvidijusParsiunas/deep-chat" -> "ConvoStack/convostack" ["e"=1]
"OvidijusParsiunas/deep-chat" -> "advanced-chat/vue-advanced-chat" ["e"=1]
"sugarforever/wtf-langchain" -> "WTFAcademy/WTF-Langchain"
"sugarforever/wtf-langchain" -> "sugarforever/LangChain-Tutorials"
"sugarforever/wtf-langchain" -> "sugarforever/LangChain-Advanced"
"sugarforever/wtf-langchain" -> "sugarforever/LlamaIndex-Tutorials"
"sugarforever/wtf-langchain" -> "sugarforever/OpenAI-Tutorials"
"sugarforever/wtf-langchain" -> "sugarforever/chat-ollama"
"sugarforever/wtf-langchain" -> "sugarforever/Advanced-RAG"
"vitoplantamura/OnnxStream" -> "leejet/stable-diffusion.cpp"
"vitoplantamura/OnnxStream" -> "rupeshs/fastsdcpu"
"vitoplantamura/OnnxStream" -> "trholding/llama2.c"
"vitoplantamura/OnnxStream" -> "ssube/onnx-web" ["e"=1]
"vitoplantamura/OnnxStream" -> "rvdveen/epaper-slow-generative-art"
"vitoplantamura/OnnxStream" -> "straczowski/raspberry-pi-stable-diffusion"
"vitoplantamura/OnnxStream" -> "varunshenoy/opendream" ["e"=1]
"vitoplantamura/OnnxStream" -> "EdVince/Stable-Diffusion-NCNN" ["e"=1]
"vitoplantamura/OnnxStream" -> "axodox/axodox-machinelearning"
"vitoplantamura/OnnxStream" -> "RWKV/rwkv.cpp" ["e"=1]
"vitoplantamura/OnnxStream" -> "mlc-ai/web-stable-diffusion"
"vitoplantamura/OnnxStream" -> "YavorGIvanov/sam.cpp"
"vitoplantamura/OnnxStream" -> "dome272/Wuerstchen" ["e"=1]
"vitoplantamura/OnnxStream" -> "lxe/simple-llm-finetuner" ["e"=1]
"vitoplantamura/OnnxStream" -> "symisc/tiny-dream"
"yuka-friends/Windrecorder" -> "openrecall/openrecall"
"yuka-friends/Windrecorder" -> "apirrone/Memento"
"yuka-friends/Windrecorder" -> "BingyanStudio/LapisCV" ["e"=1]
"yuka-friends/Windrecorder" -> "shion-app/shion" ["e"=1]
"yuka-friends/Windrecorder" -> "Planshit/Tai" ["e"=1]
"yuka-friends/Windrecorder" -> "blossom-editor/blossom" ["e"=1]
"yuka-friends/Windrecorder" -> "RubyMetric/chsrc" ["e"=1]
"yuka-friends/Windrecorder" -> "lqzhgood/Shmily" ["e"=1]
"yuka-friends/Windrecorder" -> "jasonjmcghee/rem"
"yuka-friends/Windrecorder" -> "cooderl/wewe-rss" ["e"=1]
"yuka-friends/Windrecorder" -> "Jeric-X/SyncClipboard" ["e"=1]
"yuka-friends/Windrecorder" -> "easychen/checkchan-dist" ["e"=1]
"yuka-friends/Windrecorder" -> "mulaRahul/keyviz" ["e"=1]
"yuka-friends/Windrecorder" -> "luckjiawei/frpc-desktop" ["e"=1]
"yuka-friends/Windrecorder" -> "mediar-ai/screenpipe"
"sanjeevanahilan/nanoChatGPT" -> "avidml/evaluating-LLMs"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/ChatGPT_API_Salience"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/LongtermChatExternalSources"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/ChatGPT_QA_Regenerative_Medicine"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/raven"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/AutoMuse_ChatGPT"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/MultiDocumentAnswering"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/PythonGPT3Tutorial"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/ATOM_Framework"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/YouTubeChapterGenerator"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/PDF_OCR_ChatGPT_Investigation"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/HierarchicalMemoryConsolidationSystem"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/DiversePerspectives"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/ResumeBuilderGpt3"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/Document_Scraping"
"daveshap/PineconeInfiniteMemoryChatbot" -> "daveshap/AutoMuse_Chapter_Planner"
"daveshap/AutoMuse_Chapter_Planner" -> "daveshap/AI_Future_of_Work"
"daveshap/AutoMuse_Chapter_Planner" -> "daveshap/AutoMuse_ChatGPT"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/Coding_ChatBot_Assistant"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/AI_Tools_and_Papers"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/KB_microservice"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/Automated_Consensus"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/Benevolent_AGI"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/ACE_WorldState"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/ACE_L1_Aspiration"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/Hierarchical_Document_Representation"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/YouTubeChapterGenerator"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/weekly_arxiv"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/ChromaDB_Chatbot_Public"
"daveshap/Quickly_Extract_Science_Papers" -> "daveshap/EU_AI_Act"
"daveshap/Benevolent_AGI" -> "daveshap/ACE_L1_Aspiration"
"daveshap/Benevolent_AGI" -> "daveshap/ACE_WorldState"
"daveshap/Benevolent_AGI" -> "daveshap/RLHI"
"daveshap/ACE_Framework" -> "daveshap/OpenAI_Agent_Swarm"
"daveshap/ACE_Framework" -> "daveshap/ChatGPT_Custom_Instructions"
"daveshap/ACE_Framework" -> "daveshap/SparsePrimingRepresentations"
"daveshap/ACE_Framework" -> "daveshap/BSHR_Loop"
"daveshap/ACE_Framework" -> "DataBassGit/AgentForge" ["e"=1]
"daveshap/ACE_Framework" -> "daveshap/latent_space_activation"
"daveshap/ACE_Framework" -> "daveshap/Medical_Intake"
"daveshap/ACE_Framework" -> "VRSEN/agency-swarm"
"daveshap/ACE_Framework" -> "daveshap/raven"
"daveshap/ACE_Framework" -> "aiwaves-cn/agents" ["e"=1]
"daveshap/ACE_Framework" -> "daveshap/REMO_Framework"
"daveshap/ACE_Framework" -> "daveshap/AI_Tools_and_Papers"
"daveshap/ACE_Framework" -> "daveshap/Open_MURPHIE"
"daveshap/ACE_Framework" -> "daveshap/weekly_arxiv"
"daveshap/ACE_Framework" -> "daveshap/Claude_Sentience"
"langwatch/langwatch" -> "Agenta-AI/agenta"
"langwatch/langwatch" -> "transformerlab/transformerlab-app"
"langwatch/langwatch" -> "Helicone/helicone"
"langwatch/langwatch" -> "AgentOps-AI/AgentStack"
"langwatch/langwatch" -> "MotiaDev/motia"
"langwatch/langwatch" -> "AgentOps-AI/agentops"
"langwatch/langwatch" -> "aipotheosis-labs/aci"
"langwatch/langwatch" -> "lmnr-ai/index"
"langwatch/langwatch" -> "MinishLab/model2vec"
"langwatch/langwatch" -> "egoist/sitefetch"
"langwatch/langwatch" -> "eyelevelai/groundx-on-prem"
"langwatch/langwatch" -> "comet-ml/opik"
"langwatch/langwatch" -> "video-db/Director"
"langwatch/langwatch" -> "QuivrHQ/MegaParse"
"langwatch/langwatch" -> "latitude-dev/latitude-llm"
"Atome-FE/llama-node" -> "withcatai/node-llama-cpp"
"Atome-FE/llama-node" -> "harrisonvanderbyl/rwkv-cpp-accelerated" ["e"=1]
"Atome-FE/llama-node" -> "ariym/whisper-node"
"Atome-FE/llama-node" -> "RWKV/rwkv.cpp" ["e"=1]
"Atome-FE/llama-node" -> "nomic-ai/gpt4all-ts" ["e"=1]
"togethercomputer/RedPajama-Data" -> "openlm-research/open_llama"
"togethercomputer/RedPajama-Data" -> "mosaicml/llm-foundry"
"togethercomputer/RedPajama-Data" -> "Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["e"=1]
"togethercomputer/RedPajama-Data" -> "nlpxucan/WizardLM"
"togethercomputer/RedPajama-Data" -> "yizhongw/self-instruct" ["e"=1]
"togethercomputer/RedPajama-Data" -> "databrickslabs/dolly"
"togethercomputer/RedPajama-Data" -> "OpenGVLab/LLaMA-Adapter"
"togethercomputer/RedPajama-Data" -> "Lightning-AI/lit-llama"
"togethercomputer/RedPajama-Data" -> "LianjiaTech/BELLE" ["e"=1]
"togethercomputer/RedPajama-Data" -> "EleutherAI/lm-evaluation-harness" ["e"=1]
"togethercomputer/RedPajama-Data" -> "EleutherAI/pythia" ["e"=1]
"togethercomputer/RedPajama-Data" -> "artidoro/qlora"
"togethercomputer/RedPajama-Data" -> "deepspeedai/DeepSpeedExamples" ["e"=1]
"togethercomputer/RedPajama-Data" -> "deepspeedai/Megatron-DeepSpeed" ["e"=1]
"togethercomputer/RedPajama-Data" -> "Stability-AI/StableLM"
"OpenPipe/OpenPipe" -> "axflow/axflow"
"OpenPipe/OpenPipe" -> "poozlehq/poozle"
"OpenPipe/OpenPipe" -> "hegelai/prompttools"
"OpenPipe/OpenPipe" -> "PeerDB-io/peerdb" ["e"=1]
"OpenPipe/OpenPipe" -> "Serra-Technologies/serra"
"OpenPipe/OpenPipe" -> "redotvideo/haven"
"OpenPipe/OpenPipe" -> "quack-ai/companion-vscode"
"OpenPipe/OpenPipe" -> "artie-labs/transfer"
"OpenPipe/OpenPipe" -> "empower-ai/dsensei"
"OpenPipe/OpenPipe" -> "FL33TW00D/whisper-turbo" ["e"=1]
"OpenPipe/OpenPipe" -> "Helicone/helicone"
"OpenPipe/OpenPipe" -> "trytrench/trench"
"OpenPipe/OpenPipe" -> "reworkd/tarsier"
"OpenPipe/OpenPipe" -> "StructuredLabs/preswald"
"OpenPipe/OpenPipe" -> "finic-ai/finic"
"briefercloud/ergomake" -> "trytrench/trench"
"briefercloud/ergomake" -> "Skyvern-AI/wyvern"
"briefercloud/ergomake" -> "Trainy-ai/llm-atc"
"briefercloud/ergomake" -> "redotvideo/haven"
"briefercloud/ergomake" -> "cedana/cedana"
"briefercloud/ergomake" -> "quack-ai/companion-vscode"
"briefercloud/ergomake" -> "poozlehq/poozle"
"briefercloud/ergomake" -> "reworkd/bananalyzer"
"briefercloud/ergomake" -> "automorphic-ai/aegis"
"hegelai/prompttools" -> "promptfoo/promptfoo"
"hegelai/prompttools" -> "OpenPipe/OpenPipe"
"hegelai/prompttools" -> "promptslab/Promptify" ["e"=1]
"hegelai/prompttools" -> "guardrails-ai/guardrails"
"hegelai/prompttools" -> "getzep/zep"
"hegelai/prompttools" -> "mshumer/gpt-prompt-engineer"
"hegelai/prompttools" -> "finic-ai/finic"
"hegelai/prompttools" -> "Agenta-AI/agenta"
"hegelai/prompttools" -> "axflow/axflow"
"hegelai/prompttools" -> "langfuse/langfuse"
"hegelai/prompttools" -> "confident-ai/deepeval"
"hegelai/prompttools" -> "567-labs/instructor"
"hegelai/prompttools" -> "Arize-ai/phoenix"
"hegelai/prompttools" -> "tensorchord/Awesome-LLMOps"
"hegelai/prompttools" -> "explodinggradients/ragas"
"ivanfioravanti/chatbot-ollama" -> "ollama-ui/ollama-ui"
"ivanfioravanti/chatbot-ollama" -> "bionic-gpt/bionic-gpt"
"ivanfioravanti/chatbot-ollama" -> "sugarforever/chat-ollama"
"ivanfioravanti/chatbot-ollama" -> "ollama-interface/Ollama-Gui"
"ivanfioravanti/chatbot-ollama" -> "HelgeSverre/ollama-gui"
"ivanfioravanti/chatbot-ollama" -> "jakobhoeg/nextjs-ollama-llm-ui"
"ivanfioravanti/chatbot-ollama" -> "richawo/minimal-llm-ui"
"ivanfioravanti/chatbot-ollama" -> "ggozad/oterm"
"ivanfioravanti/chatbot-ollama" -> "kevinhermawan/Ollamac"
"ivanfioravanti/chatbot-ollama" -> "gluonfield/enchanted" ["e"=1]
"ivanfioravanti/chatbot-ollama" -> "ollama-webui/ollama-webui-lite"
"ivanfioravanti/chatbot-ollama" -> "mrdjohnson/llm-x"
"ivanfioravanti/chatbot-ollama" -> "fmaclen/hollama"
"ivanfioravanti/chatbot-ollama" -> "BruceMacD/chatd"
"ivanfioravanti/chatbot-ollama" -> "ollama/ollama-js"
"microsoft/promptbench" -> "MLGroupJLU/LLM-eval-survey" ["e"=1]
"microsoft/promptbench" -> "open-compass/opencompass" ["e"=1]
"microsoft/promptbench" -> "QData/TextAttack" ["e"=1]
"microsoft/promptbench" -> "stanford-crfm/helm" ["e"=1]
"microsoft/promptbench" -> "tjunlp-lab/Awesome-LLMs-Evaluation-Papers" ["e"=1]
"microsoft/promptbench" -> "tatsu-lab/alpaca_eval" ["e"=1]
"microsoft/promptbench" -> "THUDM/AgentBench" ["e"=1]
"microsoft/promptbench" -> "llm-attacks/llm-attacks" ["e"=1]
"microsoft/promptbench" -> "microsoft/promptbase"
"microsoft/promptbench" -> "EleutherAI/lm-evaluation-harness" ["e"=1]
"microsoft/promptbench" -> "JShollaj/awesome-llm-interpretability" ["e"=1]
"microsoft/promptbench" -> "confident-ai/deepeval"
"microsoft/promptbench" -> "microsoft/LLMLingua"
"microsoft/promptbench" -> "explodinggradients/ragas"
"microsoft/promptbench" -> "promptfoo/promptfoo"
"kristianfreeman/aiwriter" -> "echohive42/AI-book-maker-with-perplexity-search-grounding"
"sugarforever/LlamaIndex-Tutorials" -> "sugarforever/Advanced-RAG"
"sugarforever/LlamaIndex-Tutorials" -> "sugarforever/LangChain-Tutorials"
"sugarforever/LlamaIndex-Tutorials" -> "sugarforever/LangChain-Advanced"
"sugarforever/LlamaIndex-Tutorials" -> "WTFAcademy/WTF-Langchain"
"microsoft/LLMLingua" -> "explodinggradients/ragas"
"microsoft/LLMLingua" -> "stanfordnlp/dspy"
"microsoft/LLMLingua" -> "dottxt-ai/outlines"
"microsoft/LLMLingua" -> "arcee-ai/mergekit" ["e"=1]
"microsoft/LLMLingua" -> "mit-han-lab/streaming-llm" ["e"=1]
"microsoft/LLMLingua" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"microsoft/LLMLingua" -> "guidance-ai/guidance"
"microsoft/LLMLingua" -> "567-labs/instructor"
"microsoft/LLMLingua" -> "Unstructured-IO/unstructured"
"microsoft/LLMLingua" -> "microsoft/TaskWeaver"
"microsoft/LLMLingua" -> "huggingface/text-generation-inference" ["e"=1]
"microsoft/LLMLingua" -> "BerriAI/litellm"
"microsoft/LLMLingua" -> "ShishirPatil/gorilla" ["e"=1]
"microsoft/LLMLingua" -> "microsoft/promptbase"
"microsoft/LLMLingua" -> "AnswerDotAI/RAGatouille"
"mengjian-github/copilot-analysis" -> "thakkarparth007/copilot-explorer"
"mengjian-github/copilot-analysis" -> "unit-mesh/auto-dev"
"mengjian-github/copilot-analysis" -> "mengjian-github/copilot-analysis-new"
"mengjian-github/copilot-analysis" -> "unit-mesh/build-your-ai-coding-assistant"
"mengjian-github/copilot-analysis" -> "linux-do/override" ["e"=1]
"mengjian-github/copilot-analysis" -> "saschaschramm/github-copilot"
"mengjian-github/copilot-analysis" -> "doggy8088/bilingual_book_maker" ["e"=1]
"mengjian-github/copilot-analysis" -> "phodal/aigc" ["e"=1]
"mengjian-github/copilot-analysis" -> "linux-do/new-api" ["e"=1]
"mengjian-github/copilot-analysis" -> "GanymedeNil/document.ai" ["e"=1]
"mengjian-github/copilot-analysis" -> "yihong0618/bilingual_book_maker" ["e"=1]
"mengjian-github/copilot-analysis" -> "aurora-develop/aurora" ["e"=1]
"mengjian-github/copilot-analysis" -> "phodal/prompt-patterns" ["e"=1]
"mengjian-github/copilot-analysis" -> "sourcegraph/cody"
"mengjian-github/copilot-analysis" -> "iAmCorey/awesome-indie-hacker-tools" ["e"=1]
"ashishpatel26/LLM-Finetuning" -> "iusztinpaul/hands-on-llms" ["e"=1]
"ashishpatel26/LLM-Finetuning" -> "ashishpatel26/Treasure-of-Transformers" ["e"=1]
"ashishpatel26/LLM-Finetuning" -> "peremartra/Large-Language-Model-Notebooks-Course"
"ashishpatel26/LLM-Finetuning" -> "aishwaryanr/awesome-generative-ai-guide"
"ashishpatel26/LLM-Finetuning" -> "decodingml/llm-twin-course"
"ashishpatel26/LLM-Finetuning" -> "mlabonne/llm-datasets"
"ashishpatel26/LLM-Finetuning" -> "rohan-paul/LLM-FineTuning-Large-Language-Models" ["e"=1]
"ashishpatel26/LLM-Finetuning" -> "roboflow/notebooks" ["e"=1]
"ashishpatel26/LLM-Finetuning" -> "ray-project/llm-applications"
"ashishpatel26/LLM-Finetuning" -> "graviraja/MLOps-Basics" ["e"=1]
"ashishpatel26/LLM-Finetuning" -> "ashishpatel26/500-AI-Agents-Projects"
"ashishpatel26/LLM-Finetuning" -> "youssefHosni/Data-Science-Interview-Preperation-Resources" ["e"=1]
"ashishpatel26/LLM-Finetuning" -> "Lightning-AI/litgpt"
"ashishpatel26/LLM-Finetuning" -> "NielsRogge/Transformers-Tutorials" ["e"=1]
"ashishpatel26/LLM-Finetuning" -> "PacktPublishing/LLM-Engineers-Handbook"
"explosion/spacy-llm" -> "explosion/curated-transformers"
"explosion/spacy-llm" -> "urchade/GLiNER"
"explosion/spacy-llm" -> "explosion/spacy-layout"
"explosion/spacy-llm" -> "explosion/prodigy-openai-recipes" ["e"=1]
"explosion/spacy-llm" -> "explosion/spacy-transformers" ["e"=1]
"explosion/spacy-llm" -> "explosion/projects" ["e"=1]
"explosion/spacy-llm" -> "davidberenstein1957/classy-classification" ["e"=1]
"explosion/spacy-llm" -> "tomaarsen/SpanMarkerNER"
"explosion/spacy-llm" -> "IBM/zshot" ["e"=1]
"explosion/spacy-llm" -> "argilla-io/argilla" ["e"=1]
"explosion/spacy-llm" -> "huggingface/setfit" ["e"=1]
"explosion/spacy-llm" -> "srush/MiniChain" ["e"=1]
"explosion/spacy-llm" -> "promptslab/Promptify" ["e"=1]
"explosion/spacy-llm" -> "explosion/floret" ["e"=1]
"explosion/spacy-llm" -> "NorskRegnesentral/skweak" ["e"=1]
"automorphic-ai/trex" -> "automorphic-ai/aegis"
"Renset/macai" -> "CrazyNeil/OllamaSpring"
"Renset/macai" -> "kghandour/Ollama-SwiftUI"
"Renset/macai" -> "kevinhermawan/Ollamac"
"Renset/macai" -> "psugihara/FreeChat" ["e"=1]
"Renset/macai" -> "andersrex/notesollama"
"lucidrains/MEGABYTE-pytorch" -> "lucidrains/simple-hierarchical-transformer"
"lucidrains/MEGABYTE-pytorch" -> "yangdongchao/AcademiCodec" ["e"=1]
"lucidrains/MEGABYTE-pytorch" -> "hubertsiuzdak/snac" ["e"=1]
"lucidrains/MEGABYTE-pytorch" -> "PiotrNawrot/nanoT5"
"lucidrains/MEGABYTE-pytorch" -> "HazyResearch/hyena-dna" ["e"=1]
"lucidrains/MEGABYTE-pytorch" -> "haoheliu/SemantiCodec-inference" ["e"=1]
"lucidrains/MEGABYTE-pytorch" -> "PiotrNawrot/dynamic-pooling"
"digitros/nextjs-fastapi" -> "wpcodevo/nextjs-fastapi-framework"
"digitros/nextjs-fastapi" -> "TCatshoek/fastapi-nextauth-jwt"
"digitros/nextjs-fastapi" -> "vintasoftware/nextjs-fastapi-template"
"digitros/nextjs-fastapi" -> "Nneji123/fastapi-nextjs"
"digitros/nextjs-fastapi" -> "Sheldenburg/ai-engineer-template"
"digitros/nextjs-fastapi" -> "vercel/ai-sdk-rag-starter"
"digitros/nextjs-fastapi" -> "mazzasaverio/nextjs-fastapi-your-chat"
"digitros/nextjs-fastapi" -> "supabase-community/nextjs-openai-doc-search" ["e"=1]
"siriusdeveloper/sirius-crypter" -> "DefiZoro/BSC-Sniping-Bot-Opensource"
"siriusdeveloper/sirius-crypter" -> "twitchviewer/twitch-viewer-bot"
"meistrari/prompts-royale" -> "meistrari/cursive"
"meistrari/prompts-royale" -> "BrightPool/udemy-prompt-engineering-course"
"meistrari/prompts-royale" -> "meistrari/cursive-py"
"meistrari/prompts-royale" -> "meistrari/resguard"
"meistrari/prompts-royale" -> "mshumer/anthropic_with_functions"
"meistrari/prompts-royale" -> "mshumer/gpt-prompt-engineer"
"meistrari/prompts-royale" -> "kreneskyp/ix" ["e"=1]
"microsoft/prompts-for-edu" -> "microsoft/promptbase"
"microsoft/prompts-for-edu" -> "mshumer/gpt-author" ["e"=1]
"microsoft/prompts-for-edu" -> "redis-developer/ArXivChatGuru" ["e"=1]
"microsoft/prompts-for-edu" -> "mshumer/gpt-prompt-engineer"
"microsoft/prompts-for-edu" -> "verazuo/jailbreak_llms" ["e"=1]
"microsoft/prompts-for-edu" -> "rotemweiss57/gpt-newspaper"
"microsoft/prompts-for-edu" -> "plastic-labs/tutor-gpt" ["e"=1]
"microsoft/prompts-for-edu" -> "premAI-io/state-of-open-source-ai" ["e"=1]
"microsoft/prompts-for-edu" -> "a16z-infra/companion-app" ["e"=1]
"microsoft/prompts-for-edu" -> "mshumer/ai-researcher"
"microsoft/prompts-for-edu" -> "anthropics/courses"
"microsoft/prompts-for-edu" -> "daveshap/ChatGPT_Custom_Instructions"
"microsoft/prompts-for-edu" -> "taranjeet/awesome-gpts" ["e"=1]
"microsoft/prompts-for-edu" -> "friuns2/BlackFriday-GPTs-Prompts" ["e"=1]
"microsoft/prompts-for-edu" -> "microsoft/promptflow"
"Siddharth1India/Awesome-Deep-Learning" -> "protosphinx/in"
"skeskinen/bert.cpp" -> "xyzhang626/embeddings.cpp"
"skeskinen/bert.cpp" -> "monatis/clip.cpp"
"skeskinen/bert.cpp" -> "staghado/vit.cpp"
"skeskinen/bert.cpp" -> "skeskinen/llama-lite" ["e"=1]
"skeskinen/bert.cpp" -> "PABannier/biogpt.cpp"
"skeskinen/bert.cpp" -> "PABannier/bark.cpp"
"skeskinen/bert.cpp" -> "balisujohn/tortoise.cpp"
"skeskinen/bert.cpp" -> "cmp-nct/ggllm.cpp"
"leejet/stable-diffusion.cpp" -> "ggml-org/ggml"
"leejet/stable-diffusion.cpp" -> "PABannier/bark.cpp"
"leejet/stable-diffusion.cpp" -> "rupeshs/fastsdcpu"
"leejet/stable-diffusion.cpp" -> "LostRuins/koboldcpp" ["e"=1]
"leejet/stable-diffusion.cpp" -> "vitoplantamura/OnnxStream"
"leejet/stable-diffusion.cpp" -> "EdVince/Stable-Diffusion-NCNN" ["e"=1]
"leejet/stable-diffusion.cpp" -> "RWKV/rwkv.cpp" ["e"=1]
"leejet/stable-diffusion.cpp" -> "abetlen/llama-cpp-python"
"leejet/stable-diffusion.cpp" -> "axodox/axodox-machinelearning"
"leejet/stable-diffusion.cpp" -> "city96/ComfyUI-GGUF" ["e"=1]
"leejet/stable-diffusion.cpp" -> "chengzeyi/stable-fast" ["e"=1]
"leejet/stable-diffusion.cpp" -> "karpathy/llama2.c"
"leejet/stable-diffusion.cpp" -> "vladmandic/sdnext" ["e"=1]
"leejet/stable-diffusion.cpp" -> "YavorGIvanov/sam.cpp"
"leejet/stable-diffusion.cpp" -> "SJTU-IPADS/PowerInfer" ["e"=1]
"fmind/mlops-python-package" -> "callmesora/llmops-python-package"
"fmind/mlops-python-package" -> "MLOps-Courses/mlops-coding-course"
"fmind/mlops-python-package" -> "fmind/cookiecutter-mlops-package"
"fmind/mlops-python-package" -> "iusztinpaul/energy-forecasting"
"fmind/mlops-python-package" -> "PacktPublishing/LLM-Engineers-Handbook"
"fmind/mlops-python-package" -> "decodingml/llm-twin-course"
"fmind/mlops-python-package" -> "NannyML/The-Little-Book-of-ML-Metrics"
"fmind/mlops-python-package" -> "decodingml/second-brain-ai-assistant-course"
"fmind/mlops-python-package" -> "SylphAI-Inc/AdalFlow"
"fmind/mlops-python-package" -> "iusztinpaul/hands-on-llms" ["e"=1]
"fmind/mlops-python-package" -> "decodingml/personalized-recommender-course"
"fmind/mlops-python-package" -> "SylphAI-Inc/LLM-engineer-handbook"
"fmind/mlops-python-package" -> "databricks/mlops-stacks" ["e"=1]
"fmind/mlops-python-package" -> "graviraja/MLOps-Basics" ["e"=1]
"fmind/mlops-python-package" -> "marvelousmlops/mlops-roadmap-2024"
"fixie-ai/ai-jsx" -> "fixie-ai/fixie-sdk-js"
"fixie-ai/ai-jsx" -> "vercel/modelfusion"
"fixie-ai/ai-jsx" -> "axflow/axflow"
"fixie-ai/ai-jsx" -> "AgentOps-AI/Jaiqu"
"fixie-ai/ai-jsx" -> "eylonmiz/react-agent" ["e"=1]
"fixie-ai/ai-jsx" -> "raidendotai/openv0"
"fixie-ai/ai-jsx" -> "ax-llm/ax"
"fixie-ai/ai-jsx" -> "dzhng/zod-gpt"
"getmetal/Metal" -> "getmetal/chatbot"
"getmetal/motorhead" -> "yeagerai/yeagerai-agent" ["e"=1]
"getmetal/motorhead" -> "BerriAI/reliableGPT" ["e"=1]
"getmetal/motorhead" -> "toolkit-ai/toolkit-ai" ["e"=1]
"getmetal/motorhead" -> "traceloop/jest-opentelemetry"
"getmetal/motorhead" -> "finic-ai/finic"
"getmetal/motorhead" -> "athina-ai/athina-sdk"
"getmetal/motorhead" -> "getzep/zep"
"getmetal/motorhead" -> "vaerohq/vaero"
"getmetal/motorhead" -> "getmetal/chatbot"
"getmetal/motorhead" -> "getmetal/Metal"
"getmetal/motorhead" -> "map3xyz/supercharge"
"getmetal/motorhead" -> "launchflow/buildflow"
"getmetal/motorhead" -> "thebabylonai/babylog"
"getmetal/motorhead" -> "enrolla/enrolla"
"getmetal/motorhead" -> "prem-research/app" ["e"=1]
"getmetal/chatbot" -> "getmetal/Metal"
"fastai/lm-hackers" -> "fastai/course22" ["e"=1]
"fastai/lm-hackers" -> "fastai/course22p2" ["e"=1]
"fastai/lm-hackers" -> "fastai/diffusion-nbs" ["e"=1]
"fastai/lm-hackers" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"fastai/lm-hackers" -> "aiwaves-cn/agents" ["e"=1]
"fastai/lm-hackers" -> "run-llama/sec-insights"
"fastai/lm-hackers" -> "mshumer/gpt-llm-trainer" ["e"=1]
"fastai/lm-hackers" -> "AnswerDotAI/RAGatouille"
"fastai/lm-hackers" -> "brevdev/launchables" ["e"=1]
"fastai/lm-hackers" -> "ray-project/llm-applications"
"fastai/lm-hackers" -> "AnswerDotAI/rerankers"
"fastai/lm-hackers" -> "mistralai/cookbook"
"fastai/lm-hackers" -> "mshumer/gpt-prompt-engineer"
"fastai/lm-hackers" -> "AnswerDotAI/claudette"
"fastai/lm-hackers" -> "simonw/llm"
"cckuailong/SuperAdapters" -> "okuvshynov/slowllama"
"BrightPool/udemy-prompt-engineering-course" -> "meistrari/prompts-royale"
"dgarnitz/vectorflow" -> "getmetal/motorhead"
"dgarnitz/vectorflow" -> "run-llama/llamaindex_aws_ingestion"
"dgarnitz/vectorflow" -> "pchunduri6/rag-demystified"
"dgarnitz/vectorflow" -> "hegelai/prompttools"
"dgarnitz/vectorflow" -> "qdrant/vector-db-benchmark" ["e"=1]
"dgarnitz/vectorflow" -> "abacusai/Long-Context" ["e"=1]
"snowfort-ai/awesome-llm-webapps" -> "JShollaj/awesome-llm-web-ui"
"DAGWorks-Inc/hamilton" -> "DAGWorks-Inc/burr"
"DAGWorks-Inc/hamilton" -> "stitchfix/hamilton"
"DAGWorks-Inc/hamilton" -> "unionai-oss/pandera" ["e"=1]
"DAGWorks-Inc/hamilton" -> "Eventual-Inc/Daft" ["e"=1]
"DAGWorks-Inc/hamilton" -> "TobikoData/sqlmesh" ["e"=1]
"DAGWorks-Inc/hamilton" -> "tableflowhq/csv-import"
"DAGWorks-Inc/hamilton" -> "magicpatterns/catalog"
"DAGWorks-Inc/hamilton" -> "ibis-project/ibis" ["e"=1]
"DAGWorks-Inc/hamilton" -> "thebabylonai/babylog"
"DAGWorks-Inc/hamilton" -> "dlt-hub/dlt" ["e"=1]
"DAGWorks-Inc/hamilton" -> "fugue-project/fugue" ["e"=1]
"DAGWorks-Inc/hamilton" -> "meltano/meltano" ["e"=1]
"DAGWorks-Inc/hamilton" -> "lancedb/lance" ["e"=1]
"DAGWorks-Inc/hamilton" -> "narwhals-dev/narwhals" ["e"=1]
"DAGWorks-Inc/hamilton" -> "enrolla/enrolla"
"empower-ai/dsensei" -> "aleechou/Anchor9"
"empower-ai/dsensei" -> "aa12gq/goxenith" ["e"=1]
"empower-ai/dsensei" -> "solstice-gao/chatglm-go"
"empower-ai/dsensei" -> "Utopia2008/SSR-V2ray-Clash" ["e"=1]
"empower-ai/dsensei" -> "red-velet/qrpc" ["e"=1]
"empower-ai/dsensei" -> "tduckboot/tduck-platform"
"empower-ai/dsensei" -> "rhzxg/MicroblogCrawler" ["e"=1]
"empower-ai/dsensei" -> "rawchen/FeishuBot" ["e"=1]
"empower-ai/dsensei" -> "RobertWeijie/IS-KnowledgeBase" ["e"=1]
"empower-ai/dsensei" -> "wwwwdkdk/Sparrow" ["e"=1]
"empower-ai/dsensei" -> "Yuanyuan-Yuan/CacheQL" ["e"=1]
"empower-ai/dsensei" -> "Touch-Sun/t-dispatch" ["e"=1]
"empower-ai/dsensei" -> "ChongQingNoSubway/PDL" ["e"=1]
"empower-ai/dsensei" -> "yangyuke001/SD-inference" ["e"=1]
"empower-ai/dsensei" -> "zhenruyan/WSL-libre-linux-kernel" ["e"=1]
"Trainy-ai/nodify" -> "Trainy-ai/konduktor"
"Trainy-ai/nodify" -> "Trainy-ai/llm-atc"
"Trainy-ai/nodify" -> "Trainy-ai/trainy"
"Trainy-ai/nodify" -> "apoxy-dev/proximal"
"Trainy-ai/llm-atc" -> "cedana/cedana-cli"
"Trainy-ai/llm-atc" -> "Trainy-ai/nodify"
"Trainy-ai/llm-atc" -> "Trainy-ai/konduktor"
"Trainy-ai/llm-atc" -> "Skyvern-AI/wyvern"
"Trainy-ai/llm-atc" -> "apoxy-dev/proximal"
"Trainy-ai/llm-atc" -> "empower-ai/dsensei"
"Trainy-ai/llm-atc" -> "quack-ai/companion-vscode"
"instill-ai/community" -> "instill-ai/deprecated-core"
"instill-ai/community" -> "instill-ai/cli"
"instill-ai/community" -> "instill-ai/console"
"instill-ai/community" -> "instill-ai/instill.tech"
"instill-ai/community" -> "instill-ai/deprecated-model"
"microsoft/aici" -> "eth-sri/lmql"
"microsoft/aici" -> "dottxt-ai/outlines"
"microsoft/aici" -> "langroid/langroid"
"microsoft/aici" -> "lavague-ai/LaVague"
"microsoft/aici" -> "guidance-ai/guidance"
"microsoft/aici" -> "e2b-dev/code-interpreter"
"microsoft/aici" -> "microsoft/LLMLingua"
"microsoft/aici" -> "1rgs/jsonformer"
"microsoft/aici" -> "AnswerDotAI/RAGatouille"
"microsoft/aici" -> "codelion/optillm"
"microsoft/aici" -> "apoorvumang/prompt-lookup-decoding" ["e"=1]
"microsoft/aici" -> "kingjulio8238/Memary"
"microsoft/aici" -> "SqueezeAILab/LLMCompiler" ["e"=1]
"microsoft/aici" -> "huggingface/datatrove" ["e"=1]
"microsoft/aici" -> "noamgat/lm-format-enforcer"
"ianand/spreadsheets-are-all-you-need" -> "Vahe1994/AQLM" ["e"=1]
"ianand/spreadsheets-are-all-you-need" -> "suyu-emu/suyu" ["e"=1]
"ianand/spreadsheets-are-all-you-need" -> "mttaggart/I-S00N"
"ianand/spreadsheets-are-all-you-need" -> "aixcoder-plugin/aiXcoder-7B"
"ianand/spreadsheets-are-all-you-need" -> "TheMMC/In-Place_Upgrade_Helper"
"ianand/spreadsheets-are-all-you-need" -> "AnswerDotAI/fsdp_qlora" ["e"=1]
"ianand/spreadsheets-are-all-you-need" -> "adrianhajdin/zoom-clone" ["e"=1]
"ianand/spreadsheets-are-all-you-need" -> "nf-core/modules" ["e"=1]
"ianand/spreadsheets-are-all-you-need" -> "gptscript-ai/gptscript"
"ianand/spreadsheets-are-all-you-need" -> "emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC"
"ianand/spreadsheets-are-all-you-need" -> "regolith-labs/ore-cli"
"ianand/spreadsheets-are-all-you-need" -> "SoraWebui/SoraWebui" ["e"=1]
"ianand/spreadsheets-are-all-you-need" -> "developersdigest/llm-answer-engine"
"ianand/spreadsheets-are-all-you-need" -> "adamcohenhillel/ADeus"
"ianand/spreadsheets-are-all-you-need" -> "Azure/PyRIT" ["e"=1]
"qdrant/qdrant-dotnet" -> "qdrant/qdrant-spark"
"rubbrband/rubbrband" -> "map3xyz/supercharge"
"rubbrband/rubbrband" -> "thebabylonai/babylog"
"rubbrband/rubbrband" -> "outerbase/ezql"
"rubbrband/rubbrband" -> "usecakework/cakework"
"rubbrband/rubbrband" -> "swishjam/swishjam"
"daveshap/SparsePrimingRepresentations" -> "daveshap/BSHR_Loop"
"daveshap/SparsePrimingRepresentations" -> "daveshap/ChatGPT_Custom_Instructions"
"daveshap/SparsePrimingRepresentations" -> "daveshap/latent_space_activation"
"daveshap/SparsePrimingRepresentations" -> "daveshap/ACE_Framework"
"daveshap/SparsePrimingRepresentations" -> "daveshap/OpenAI_Agent_Swarm"
"daveshap/SparsePrimingRepresentations" -> "daveshap/YouTubeChapterGenerator"
"daveshap/SparsePrimingRepresentations" -> "daveshap/Semantic_Embedding_Reverse_Dictionary"
"daveshap/SparsePrimingRepresentations" -> "daveshap/AI_Tools_and_Papers"
"daveshap/SparsePrimingRepresentations" -> "daveshap/REMO_Framework"
"daveshap/SparsePrimingRepresentations" -> "nasa-petal/bidara"
"daveshap/SparsePrimingRepresentations" -> "daveshap/raven"
"daveshap/SparsePrimingRepresentations" -> "daveshap/weekly_arxiv"
"daveshap/SparsePrimingRepresentations" -> "daveshap/ATOM_Framework"
"daveshap/SparsePrimingRepresentations" -> "daveshap/HeuristicImperatives"
"daveshap/SparsePrimingRepresentations" -> "daveshap/Hierarchical_Document_Representation"
"ray-project/llm-applications" -> "IntelLabs/fastRAG"
"ray-project/llm-applications" -> "pchunduri6/rag-demystified"
"ray-project/llm-applications" -> "ashishpatel26/LLM-Finetuning"
"ray-project/llm-applications" -> "viddexa/autollm"
"ray-project/llm-applications" -> "run-llama/sec-insights"
"ray-project/llm-applications" -> "ray-project/ray-llm" ["e"=1]
"ray-project/llm-applications" -> "nlmatics/llmsherpa"
"ray-project/llm-applications" -> "explodinggradients/ragas"
"ray-project/llm-applications" -> "AnswerDotAI/RAGatouille"
"ray-project/llm-applications" -> "Raudaschl/rag-fusion"
"ray-project/llm-applications" -> "OpenPipe/OpenPipe"
"ray-project/llm-applications" -> "ray-project/llmperf" ["e"=1]
"ray-project/llm-applications" -> "tensorchord/Awesome-LLMOps"
"ray-project/llm-applications" -> "ray-project/llm-numbers" ["e"=1]
"ray-project/llm-applications" -> "neo4j/NaLLM" ["e"=1]
"viddexa/autollm" -> "fleet-ai/context"
"viddexa/autollm" -> "ray-project/llm-applications"
"viddexa/autollm" -> "Link-AGI/AutoAgents" ["e"=1]
"viddexa/autollm" -> "AkariAsai/self-rag"
"viddexa/autollm" -> "tigerlab-ai/tiger"
"viddexa/autollm" -> "victordibia/autogen-ui" ["e"=1]
"viddexa/autollm" -> "langchain-ai/opengpts"
"viddexa/autollm" -> "rnadigital/agentcloud" ["e"=1]
"viddexa/autollm" -> "jaemil/agentsflow" ["e"=1]
"viddexa/autollm" -> "Raudaschl/rag-fusion"
"viddexa/autollm" -> "jgravelle/AutoGroq"
"viddexa/autollm" -> "imoneoi/openchat" ["e"=1]
"viddexa/autollm" -> "JayZeeDesign/Discord-AI-Chatbot" ["e"=1]
"viddexa/autollm" -> "xforceai/ide" ["e"=1]
"viddexa/autollm" -> "xlang-ai/OpenAgents" ["e"=1]
"stanford-futuredata/ARES" -> "chen700564/RGB" ["e"=1]
"stanford-futuredata/ARES" -> "amazon-science/RAGChecker"
"stanford-futuredata/ARES" -> "explodinggradients/ragas"
"stanford-futuredata/ARES" -> "truera/trulens"
"stanford-futuredata/ARES" -> "IAAR-Shanghai/CRUD_RAG" ["e"=1]
"stanford-futuredata/ARES" -> "YHPeter/Awesome-RAG-Evaluation"
"stanford-futuredata/ARES" -> "OpenBMB/RAGEval" ["e"=1]
"stanford-futuredata/ARES" -> "gomate-community/rageval"
"stanford-futuredata/ARES" -> "ganarajpr/awesome-dspy"
"stanford-futuredata/ARES" -> "AkariAsai/self-rag"
"stanford-futuredata/ARES" -> "AnswerDotAI/RAGatouille"
"stanford-futuredata/ARES" -> "TonicAI/tonic_validate" ["e"=1]
"stanford-futuredata/ARES" -> "HuskyInSalt/CRAG" ["e"=1]
"stanford-futuredata/ARES" -> "facebookresearch/CRAG"
"stanford-futuredata/ARES" -> "yixuantt/MultiHop-RAG" ["e"=1]
"openmeterio/openmeter" -> "getlago/lago" ["e"=1]
"openmeterio/openmeter" -> "uselotus/lotus" ["e"=1]
"openmeterio/openmeter" -> "usecakework/cakework"
"openmeterio/openmeter" -> "invopop/gobl"
"openmeterio/openmeter" -> "thebabylonai/babylog"
"openmeterio/openmeter" -> "traceloop/jest-opentelemetry"
"openmeterio/openmeter" -> "meteroid-oss/meteroid"
"openmeterio/openmeter" -> "fern-api/fern"
"openmeterio/openmeter" -> "tableflowhq/csv-import"
"openmeterio/openmeter" -> "vaerohq/vaero"
"openmeterio/openmeter" -> "enrolla/enrolla"
"openmeterio/openmeter" -> "artie-labs/transfer"
"openmeterio/openmeter" -> "Left-on-Read/leftonread"
"openmeterio/openmeter" -> "swishjam/swishjam"
"openmeterio/openmeter" -> "FrigadeHQ/trench" ["e"=1]
"magicpatterns/catalog" -> "swishjam/swishjam"
"magicpatterns/catalog" -> "Left-on-Read/leftonread"
"magicpatterns/catalog" -> "outerbase/ezql"
"magicpatterns/catalog" -> "traceloop/jest-opentelemetry"
"magicpatterns/catalog" -> "thebabylonai/babylog"
"magicpatterns/catalog" -> "map3xyz/supercharge"
"magicpatterns/catalog" -> "tableflowhq/csv-import"
"magicpatterns/catalog" -> "enrolla/enrolla"
"magicpatterns/catalog" -> "athina-ai/athina-sdk"
"magicpatterns/catalog" -> "usecakework/cakework"
"magicpatterns/catalog" -> "fern-api/fern"
"magicpatterns/catalog" -> "finic-ai/finic"
"magicpatterns/catalog" -> "vaerohq/vaero"
"magicpatterns/catalog" -> "DAGWorks-Inc/hamilton"
"magicpatterns/catalog" -> "FrigadeHQ/react-native-onboard"
"ollama-interface/Ollama-Gui" -> "richawo/minimal-llm-ui"
"ollama-interface/Ollama-Gui" -> "kghandour/Ollama-SwiftUI"
"ollama-interface/Ollama-Gui" -> "enoch1118/ollamaGUI"
"ollama-interface/Ollama-Gui" -> "drazdra/ollama-chats"
"ollama-interface/Ollama-Gui" -> "ollama-ui/ollama-ui"
"weaviate/recipes" -> "weaviate/weaviate-io" ["e"=1]
"weaviate/recipes" -> "KarelDO/xmc.dspy"
"weaviate/recipes" -> "weaviate/mcp-server-weaviate" ["e"=1]
"weaviate/recipes" -> "weaviate/weaviate-examples" ["e"=1]
"weaviate/recipes" -> "deepset-ai/haystack-cookbook" ["e"=1]
"weaviate/recipes" -> "weaviate/healthsearch-demo"
"weaviate/recipes" -> "weaviate/weaviate-python-client" ["e"=1]
"weaviate/recipes" -> "mistralai/cookbook"
"weaviate/recipes" -> "SamurAIGPT/LlamaIndex-course" ["e"=1]
"weaviate/recipes" -> "weaviate/typescript-client" ["e"=1]
"weaviate/recipes" -> "togethercomputer/together-cookbook"
"weaviate/recipes" -> "superlinear-ai/raglite"
"weaviate/recipes" -> "run-llama/multi-agent-concierge"
"veekaybee/what_are_embeddings" -> "veekaybee/viberary"
"veekaybee/what_are_embeddings" -> "igorbrigadir/awesome-twitter-algo"
"veekaybee/what_are_embeddings" -> "AnswerDotAI/shell_sage"
"veekaybee/what_are_embeddings" -> "weaviate/recipes"
"veekaybee/what_are_embeddings" -> "fastai/lm-hackers"
"vishwasg217/fin-sight" -> "timho102003/NewsGPT"
"bionic-gpt/bionic-gpt" -> "ivanfioravanti/chatbot-ollama"
"bionic-gpt/bionic-gpt" -> "BruceMacD/chatd"
"bionic-gpt/bionic-gpt" -> "floneum/floneum" ["e"=1]
"bionic-gpt/bionic-gpt" -> "semperai/amica"
"bionic-gpt/bionic-gpt" -> "enricoros/big-AGI"
"bionic-gpt/bionic-gpt" -> "ParisNeo/lollms-webui"
"bionic-gpt/bionic-gpt" -> "ollama-ui/ollama-ui"
"bionic-gpt/bionic-gpt" -> "trypromptly/LLMStack"
"bionic-gpt/bionic-gpt" -> "cheshire-cat-ai/core" ["e"=1]
"bionic-gpt/bionic-gpt" -> "richawo/minimal-llm-ui"
"bionic-gpt/bionic-gpt" -> "EricLBuehler/mistral.rs" ["e"=1]
"bionic-gpt/bionic-gpt" -> "gluonfield/enchanted" ["e"=1]
"bionic-gpt/bionic-gpt" -> "Mintplex-Labs/vector-admin"
"bionic-gpt/bionic-gpt" -> "Mobile-Artificial-Intelligence/maid"
"bionic-gpt/bionic-gpt" -> "huggingface/text-embeddings-inference" ["e"=1]
"PiotrNawrot/nanoT5" -> "JonasGeiping/cramming" ["e"=1]
"PiotrNawrot/nanoT5" -> "young-geng/EasyLM"
"PiotrNawrot/nanoT5" -> "srush/MiniChain" ["e"=1]
"PiotrNawrot/nanoT5" -> "declare-lab/flan-alpaca" ["e"=1]
"PiotrNawrot/nanoT5" -> "lucidrains/MEGABYTE-pytorch"
"PiotrNawrot/nanoT5" -> "EleutherAI/pythia" ["e"=1]
"PiotrNawrot/nanoT5" -> "explosion/curated-transformers"
"PiotrNawrot/nanoT5" -> "sanjeevanahilan/nanoChatGPT"
"PiotrNawrot/nanoT5" -> "allenai/RL4LMs" ["e"=1]
"PiotrNawrot/nanoT5" -> "PiotrNawrot/dynamic-pooling"
"PiotrNawrot/nanoT5" -> "mlfoundations/open_lm" ["e"=1]
"PiotrNawrot/nanoT5" -> "catie-aq/flashT5"
"PiotrNawrot/nanoT5" -> "RobertRiachi/nanoPALM"
"PiotrNawrot/nanoT5" -> "huggingface/nanotron" ["e"=1]
"PiotrNawrot/nanoT5" -> "allenai/natural-instructions" ["e"=1]
"Skyvern-AI/wyvern" -> "cedana/cedana-cli"
"Skyvern-AI/wyvern" -> "Trainy-ai/llm-atc"
"Skyvern-AI/wyvern" -> "trytrench/trench"
"Skyvern-AI/wyvern" -> "cedana/cedana"
"Skyvern-AI/wyvern" -> "quack-ai/companion-vscode"
"mattneary/attention" -> "hnmr293/llama-viz"
"Coding-Crashkurse/Langchain-Full-Course" -> "Coding-Crashkurse/LangChain-Udemy-Course"
"Coding-Crashkurse/Langchain-Full-Course" -> "JorisdeJong123/7-Days-of-LangChain"
"Coding-Crashkurse/Langchain-Full-Course" -> "Coding-Crashkurse/LangGraph-Tutorial"
"JeremiahPetersen/RepoToText" -> "flolbr/ChatGPT-File-Editor" ["e"=1]
"JeremiahPetersen/RepoToText" -> "chand1012/git2gpt"
"JeremiahPetersen/RepoToText" -> "jimmc414/onefilellm"
"JeremiahPetersen/RepoToText" -> "Doriandarko/RepoToTextForLLMs"
"JeremiahPetersen/RepoToText" -> "cognitivecomputations/github2file"
"JeremiahPetersen/RepoToText" -> "mpoon/gpt-repository-loader" ["e"=1]
"JeremiahPetersen/RepoToText" -> "BankkRoll/repo2pdf"
"JeremiahPetersen/RepoToText" -> "emcf/thepipe"
"JeremiahPetersen/RepoToText" -> "kirill-markin/repo-to-text"
"JeremiahPetersen/RepoToText" -> "donoceidon/repo2txt"
"automorphic-ai/aegis" -> "trytrench/trench"
"automorphic-ai/aegis" -> "redotvideo/haven"
"automorphic-ai/aegis" -> "automorphic-ai/trex"
"automorphic-ai/aegis" -> "poozlehq/poozle"
"automorphic-ai/aegis" -> "Skyvern-AI/wyvern"
"automorphic-ai/aegis" -> "briefercloud/ergomake"
"automorphic-ai/aegis" -> "artie-labs/transfer"
"automorphic-ai/aegis" -> "cedana/cedana"
"automorphic-ai/aegis" -> "quack-ai/platform"
"automorphic-ai/aegis" -> "quack-ai/companion-vscode"
"automorphic-ai/aegis" -> "Trainy-ai/llm-atc"
"jimmc414/onefilellm" -> "JeremiahPetersen/RepoToText"
"jimmc414/onefilellm" -> "yamadashy/repomix"
"jimmc414/onefilellm" -> "cyberagiinc/DevDocs" ["e"=1]
"jimmc414/onefilellm" -> "mufeedvh/code2prompt"
"jimmc414/onefilellm" -> "dontriskit/awesome-ai-system-prompts"
"jimmc414/onefilellm" -> "Doriandarko/RepoToTextForLLMs"
"jimmc414/onefilellm" -> "Dicklesworthstone/your-source-to-prompt.html"
"jimmc414/onefilellm" -> "simonw/files-to-prompt"
"jimmc414/onefilellm" -> "artkulak/repo2file"
"jimmc414/onefilellm" -> "cyclotruc/gitingest"
"jimmc414/onefilellm" -> "OpenBMB/RepoAgent" ["e"=1]
"jimmc414/onefilellm" -> "eastlondoner/cursor-tools"
"jimmc414/onefilellm" -> "The-Pocket/PocketFlow"
"jimmc414/onefilellm" -> "abinthomasonline/repo2txt"
"jimmc414/onefilellm" -> "cognitivecomputations/github2file"
"quack-ai/companion-vscode" -> "quack-ai/platform"
"quack-ai/companion-vscode" -> "Trainy-ai/llm-atc"
"quack-ai/companion-vscode" -> "Skyvern-AI/wyvern"
"quack-ai/companion-vscode" -> "cedana/cedana-cli"
"quack-ai/companion-vscode" -> "empower-ai/dsensei"
"quack-ai/companion-vscode" -> "CambioML/pykoi-rlhf-finetuned-transformers"
"quack-ai/companion-vscode" -> "apoxy-dev/proximal"
"quack-ai/companion-vscode" -> "trytrench/trench"
"quack-ai/companion-vscode" -> "briefercloud/ergomake"
"quack-ai/companion-vscode" -> "poozlehq/poozle"
"quack-ai/companion-vscode" -> "cedana/cedana"
"quack-ai/companion-vscode" -> "axflow/axflow"
"quack-ai/companion-vscode" -> "redotvideo/haven"
"quack-ai/companion-vscode" -> "artie-labs/transfer"
"umbertogriffo/rag-chatbot" -> "AlaGrine/RAG_chatabot_with_Langchain"
"umbertogriffo/rag-chatbot" -> "avrabyt/RAG-Chatbot"
"umbertogriffo/rag-chatbot" -> "michelderu/build-your-own-rag-chatbot"
"umbertogriffo/rag-chatbot" -> "leoneversberg/llm-chatbot-rag"
"umbertogriffo/rag-chatbot" -> "datvodinh/rag-chatbot"
"umbertogriffo/rag-chatbot" -> "lalanikarim/ai-chatbot-rag"
"oslabs-beta/RemixDJ" -> "oslabs-beta/NetPulse"
"oslabs-beta/RemixDJ" -> "oslabs-beta/kubehawk"
"oslabs-beta/RemixDJ" -> "oslabs-beta/CloudShift"
"oslabs-beta/RemixDJ" -> "oslabs-beta/solid-query-devkit"
"oslabs-beta/RemixDJ" -> "oslabs-beta/stitch"
"oslabs-beta/RemixDJ" -> "RediseeLabs/redisee"
"dzhng/zod-gpt" -> "dzhng/llm-api"
"dzhng/zod-gpt" -> "dzhng/llamaflow"
"dzhng/llm-api" -> "dzhng/zod-gpt"
"superlinked/VectorHub" -> "superlinked/superlinked"
"Unstructured-IO/unstructured-python-client" -> "Unstructured-IO/unstructured-js-client"
"raphaelsty/neural-cherche" -> "lightonai/pylate"
"raphaelsty/neural-cherche" -> "KarelDO/xmc.dspy"
"raphaelsty/neural-cherche" -> "thongnt99/learned-sparse-retrieval" ["e"=1]
"raphaelsty/neural-cherche" -> "raphaelsty/LeNLP"
"raphaelsty/neural-cherche" -> "lightonai/ducksearch"
"raphaelsty/neural-cherche" -> "raphaelsty/cherche"
"Mozilla-Ocho/Memory-Cache" -> "misslivirose/Memory-Cache"
"daveshap/REMO_Framework" -> "daveshap/ATOM_Framework"
"daveshap/REMO_Framework" -> "hunter-meloche/REMO-langflow" ["e"=1]
"daveshap/REMO_Framework" -> "daveshap/HeuristicImperatives"
"daveshap/REMO_Framework" -> "daveshap/AI_Tools_and_Papers"
"daveshap/REMO_Framework" -> "daveshap/raven"
"daveshap/REMO_Framework" -> "Mattie/cataclysm"
"daveshap/REMO_Framework" -> "daveshap/LongtermChatExternalSources"
"daveshap/REMO_Framework" -> "daveshap/PineconeInfiniteMemoryChatbot"
"daveshap/REMO_Framework" -> "daveshap/HierarchicalMemoryConsolidationSystem"
"daveshap/REMO_Framework" -> "daveshap/RLHI"
"daveshap/REMO_Framework" -> "kyb3r/emergent"
"daveshap/REMO_Framework" -> "daveshap/ChatGPT_API_Salience"
"daveshap/REMO_Framework" -> "daveshap/BSHR_Loop"
"daveshap/REMO_Framework" -> "daveshap/Benevolent_AGI"
"daveshap/REMO_Framework" -> "daveshap/Coding_ChatBot_Assistant"
"Raudaschl/rag-fusion" -> "IntelLabs/fastRAG"
"Raudaschl/rag-fusion" -> "AkariAsai/self-rag"
"Raudaschl/rag-fusion" -> "nlmatics/llmsherpa"
"Raudaschl/rag-fusion" -> "run-llama/finetune-embedding"
"Raudaschl/rag-fusion" -> "gabrielchua/RAGxplorer"
"Raudaschl/rag-fusion" -> "pchunduri6/rag-demystified"
"Raudaschl/rag-fusion" -> "run-llama/ai-engineer-workshop"
"Raudaschl/rag-fusion" -> "ray-project/llm-applications"
"Raudaschl/rag-fusion" -> "explodinggradients/ragas"
"Raudaschl/rag-fusion" -> "viddexa/autollm"
"Raudaschl/rag-fusion" -> "AnswerDotAI/RAGatouille"
"Raudaschl/rag-fusion" -> "Tongji-KGLLM/RAG-Survey"
"Raudaschl/rag-fusion" -> "truera/trulens"
"Raudaschl/rag-fusion" -> "chen700564/RGB" ["e"=1]
"Raudaschl/rag-fusion" -> "RUC-NLPIR/FlashRAG"
"flanker/chromadb-admin" -> "thakkaryash94/chroma-ui"
"apocas/restai" -> "apocas/restai-frontend"
"apocas/restai" -> "rsrohan99/rag-stream-intermediate-events-tutorial"
"vicuna-tools/vicuna-installation-guide" -> "vicuna-tools/Stablediffy"
"vicuna-tools/vicuna-installation-guide" -> "cmp-nct/ggllm.cpp"
"vicuna-tools/vicuna-installation-guide" -> "paolorechia/learn-langchain" ["e"=1]
"disler/diffbro" -> "disler/reusable-openai-fine-tune"
"disler/diffbro" -> "disler/indydevtools"
"snexus/llm-search" -> "pchunduri6/rag-demystified"
"snexus/llm-search" -> "FutureClubNL/RAGMeUp"
"AIAnytime/Chat-with-PDF-Chatbot" -> "AIAnytime/Search-Your-PDF-App"
"AIAnytime/Chat-with-PDF-Chatbot" -> "AIAnytime/Llama2-Medical-Chatbot"
"AIAnytime/Chat-with-PDF-Chatbot" -> "AIAnytime/Chat-with-Audio-using-LLM"
"AIAnytime/Chat-with-PDF-Chatbot" -> "AIAnytime/ChatCSV-Streamlit-App"
"AIAnytime/Chat-with-PDF-Chatbot" -> "AIAnytime/ChatCSV-Llama2-Chatbot"
"langchain-ai/langchain-nextjs-template" -> "vercel-labs/gemini-chatbot"
"langchain-ai/langchain-nextjs-template" -> "langchain-ai/langgraphjs"
"langchain-ai/langchain-nextjs-template" -> "pinecone-io/pinecone-vercel-starter" ["e"=1]
"langchain-ai/langchain-nextjs-template" -> "supabase-community/vercel-ai-chatbot" ["e"=1]
"langchain-ai/langchain-nextjs-template" -> "vercel/ai-chatbot"
"langchain-ai/langchain-nextjs-template" -> "steven-tey/chathn" ["e"=1]
"langchain-ai/langchain-nextjs-template" -> "miurla/morphic"
"langchain-ai/langchain-nextjs-template" -> "vercel/ai"
"langchain-ai/langchain-nextjs-template" -> "langchain-ai/langchainjs"
"langchain-ai/langchain-nextjs-template" -> "openai/openai-assistants-quickstart"
"langchain-ai/langchain-nextjs-template" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"langchain-ai/langchain-nextjs-template" -> "supabase-community/nextjs-openai-doc-search" ["e"=1]
"langchain-ai/langchain-nextjs-template" -> "langchain-ai/chat-langchain" ["e"=1]
"langchain-ai/langchain-nextjs-template" -> "langchain-ai/langserve" ["e"=1]
"langchain-ai/langchain-nextjs-template" -> "vercel/nextjs-subscription-payments" ["e"=1]
"openai/web-crawl-q-and-a-example" -> "openai/openai-deno-build"
"rh-aiservices-bu/llm-on-openshift" -> "redhat-ai-services/ai-accelerator"
"rh-aiservices-bu/llm-on-openshift" -> "opendatahub-io-contrib/ai-on-openshift"
"rh-aiservices-bu/llm-on-openshift" -> "rh-aiservices-bu/parasol-insurance"
"adamyodinsky/TerminalGPT" -> "Autodesk/shore"
"e2b-dev/infra" -> "e2b-dev/code-interpreter"
"ekkinox/yai" -> "micr0-dev/lexido"
"ekkinox/yai" -> "adammpkins/llama-terminal-completion"
"ekkinox/yai" -> "aandrew-me/tgpt"
"ekkinox/yai" -> "Piotr1215/aicmdtools"
"ekkinox/yai" -> "mmaorc/youtube-summary-cli"
"ekkinox/yai" -> "lasantosr/intelli-shell" ["e"=1]
"ekkinox/yai" -> "charmbracelet/mods" ["e"=1]
"Coding-Crashkurse/LangChain-Udemy-Course" -> "Coding-Crashkurse/Udemy-Advanced-LangChain"
"Coding-Crashkurse/LangChain-Udemy-Course" -> "Coding-Crashkurse/LangGraph-Udemy-Course"
"Coding-Crashkurse/LangChain-Udemy-Course" -> "Coding-Crashkurse/LangChain-on-Azure-Udemy"
"fixie-ai/fixie-examples" -> "fixie-ai/fixie-sdk-js"
"Maknee/minigpt4.cpp" -> "monatis/clip.cpp"
"Maknee/minigpt4.cpp" -> "balisujohn/tortoise.cpp"
"Maknee/minigpt4.cpp" -> "skeskinen/bert.cpp"
"Maknee/minigpt4.cpp" -> "PABannier/bark.cpp"
"Yifan-Song793/RestGPT" -> "quchangle1/LLM-Tool-Survey" ["e"=1]
"Yifan-Song793/RestGPT" -> "jackmpcollins/magentic"
"Yifan-Song793/RestGPT" -> "OpenBMB/ToolBench" ["e"=1]
"Yifan-Song793/RestGPT" -> "Ber666/ToolkenGPT" ["e"=1]
"Yifan-Song793/RestGPT" -> "fleet-ai/context"
"Yifan-Song793/RestGPT" -> "thunlp/ToolLearningPapers" ["e"=1]
"Yifan-Song793/RestGPT" -> "SqueezeAILab/LLMCompiler" ["e"=1]
"Yifan-Song793/RestGPT" -> "melih-unsal/DemoGPT" ["e"=1]
"Yifan-Song793/RestGPT" -> "eschluntz/compress" ["e"=1]
"Yifan-Song793/RestGPT" -> "OpenPipe/OpenPipe"
"Yifan-Song793/RestGPT" -> "dyabel/AnyTool" ["e"=1]
"Yifan-Song793/RestGPT" -> "AbanteAI/archive-old-cli-mentat" ["e"=1]
"Yifan-Song793/RestGPT" -> "Forethought-Technologies/AutoChain" ["e"=1]
"Yifan-Song793/RestGPT" -> "dwzhu-pku/PoSE" ["e"=1]
"Yifan-Song793/RestGPT" -> "AILab-CVC/GPT4Tools" ["e"=1]
"BankkRoll/repo2pdf" -> "josherich/repo-to-pdf"
"vercel/modelfusion" -> "axflow/axflow"
"vercel/modelfusion" -> "rubberduck-ai/rubberduck-vscode"
"vercel/modelfusion" -> "LevanKvirkvelia/salute"
"vercel/modelfusion" -> "fixie-ai/ai-jsx"
"vercel/modelfusion" -> "lgrammel/storyteller"
"vercel/modelfusion" -> "lgrammel/modelfusion-ollama-nextjs-starter"
"vercel/modelfusion" -> "sgomez/ollama-ai-provider"
"vercel/modelfusion" -> "dzhng/zod-gpt"
"vercel/modelfusion" -> "raidendotai/openv0"
"vercel/modelfusion" -> "n4ze3m/dialoqbase" ["e"=1]
"vercel/modelfusion" -> "TypeAI-dev/typeai"
"vercel/modelfusion" -> "withcatai/node-llama-cpp"
"vercel/modelfusion" -> "vercel/ai-sdk-rag-starter"
"vercel/modelfusion" -> "team-openpm/workgpt" ["e"=1]
"vercel/modelfusion" -> "dabit3/semantic-search-nextjs-pinecone-langchain-chatgpt" ["e"=1]
"lunary-ai/lunary" -> "Helicone/helicone"
"lunary-ai/lunary" -> "langfuse/langfuse"
"lunary-ai/lunary" -> "getzep/zep"
"lunary-ai/lunary" -> "Agenta-AI/agenta"
"lunary-ai/lunary" -> "openlit/openlit"
"lunary-ai/lunary" -> "Scale3-Labs/langtrace"
"lunary-ai/lunary" -> "promptfoo/promptfoo"
"lunary-ai/lunary" -> "pezzolabs/pezzo"
"lunary-ai/lunary" -> "Ironclad/rivet"
"lunary-ai/lunary" -> "whylabs/langkit" ["e"=1]
"lunary-ai/lunary" -> "Arize-ai/phoenix"
"lunary-ai/lunary" -> "Portkey-AI/gateway"
"lunary-ai/lunary" -> "trypromptly/LLMStack"
"lunary-ai/lunary" -> "hegelai/prompttools"
"lunary-ai/lunary" -> "aurelio-labs/semantic-router"
"skiff-org/skiff-windows-app" -> "skiff-org/skiff-org.github.io"
"skiff-org/skiff-windows-app" -> "skiff-org/cipher"
"athina-ai/athina-sdk" -> "map3xyz/supercharge"
"athina-ai/athina-sdk" -> "outerbase/ezql"
"athina-ai/athina-sdk" -> "usecakework/cakework"
"athina-ai/athina-sdk" -> "thebabylonai/babylog"
"athina-ai/athina-sdk" -> "CommonPaper/Mutual-NDA"
"athina-ai/athina-sdk" -> "enrolla/enrolla"
"athina-ai/athina-sdk" -> "swishjam/swishjam"
"athina-ai/athina-sdk" -> "openintegrations/openint"
"emarco177/documentation-helper" -> "emarco177/ice_breaker"
"emarco177/documentation-helper" -> "emarco177/llamaindex-documentation-helper"
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "peremartra/Large-Language-Model-Notebooks-Course"
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "ashishpatel26/LLM-Finetuning"
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "adithya-s-k/AI-Engineering.academy" ["e"=1]
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "iusztinpaul/energy-forecasting"
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "decodingml/llm-twin-course"
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "youssefHosni/Getting-Started-with-Generative-AI" ["e"=1]
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "Paulescu/hands-on-rl" ["e"=1]
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "iusztinpaul/hands-on-llms" ["e"=1]
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "fmind/mlops-python-package"
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "youssefHosni/Hands-On-LangChain-for-LLM-Applications-Development" ["e"=1]
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "louisfb01/start-llms"
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "decodingml/second-brain-ai-assistant-course"
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "NisaarAgharia/Advanced_RAG"
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "lancedb/vectordb-recipes"
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" -> "rohan-paul/LLM-FineTuning-Large-Language-Models" ["e"=1]
"TransformerOptimus/SuperAGI-Docs" -> "TransformerOptimus/SuperAGI-Tools"
"TransformerOptimus/SuperAGI-Docs" -> "TransformerOptimus/SuperAGI-Python-Client"
"TransformerOptimus/SuperAGI-Docs" -> "TransformerOptimus/superAGI-tools-common"
"Yawanseh/guidescript" -> "PepperBot-co/pepperbot"
"Yawanseh/guidescript" -> "LevanKvirkvelia/salute"
"marcolardera/chatgpt-cli" -> "kardolus/chatgpt-cli"
"marcolardera/chatgpt-cli" -> "kharvd/gpt-cli"
"marcolardera/chatgpt-cli" -> "0xacx/chatGPT-shell-cli"
"oslabs-beta/stitch" -> "oslabs-beta/NetPulse"
"oslabs-beta/stitch" -> "oslabs-beta/CloudShift"
"oslabs-beta/stitch" -> "oslabs-beta/kubehawk"
"oslabs-beta/stitch" -> "oslabs-beta/RemixDJ"
"oslabs-beta/stitch" -> "oslabs-beta/solid-query-devkit"
"oslabs-beta/stitch" -> "RediseeLabs/redisee"
"phasehq/console" -> "phasehq/cli"
"TheBlokeAI/dockerLLM" -> "hommayushi3/exllama-runpod-serverless"
"TheBlokeAI/dockerLLM" -> "ashleykleynhans/runpod-worker-oobabooga"
"TheBlokeAI/dockerLLM" -> "OpenAccess-AI-Collective/servereless-runpod-ggml"
"TheBlokeAI/dockerLLM" -> "cmp-nct/ggllm.cpp"
"CambioML/uniflow-llm-based-pdf-extraction-text-cleaning-data-clustering" -> "CambioML/any-parser"
"CambioML/uniflow-llm-based-pdf-extraction-text-cleaning-data-clustering" -> "CambioML/pykoi-rlhf-finetuned-transformers"
"qdrant/qdrant-web-ui" -> "qdrant/qdrant-js"
"qdrant/qdrant-web-ui" -> "qdrant/qdrant-spark"
"lancedb/vectordb-recipes" -> "lancedb/yoloexplorer"
"lancedb/vectordb-recipes" -> "lancedb/lancedb"
"lancedb/vectordb-recipes" -> "IbrahimSobh/llms" ["e"=1]
"lancedb/vectordb-recipes" -> "mlabonne/llm-autoeval" ["e"=1]
"lancedb/vectordb-recipes" -> "qdrant/examples"
"lancedb/vectordb-recipes" -> "lancedb/lance" ["e"=1]
"thiswillbeyourgithub/wdoc" -> "waetr/KET-RAG" ["e"=1]
"thiswillbeyourgithub/wdoc" -> "cxcscmu/Craw4LLM" ["e"=1]
"thiswillbeyourgithub/wdoc" -> "GitHamza0206/simba"
"thiswillbeyourgithub/wdoc" -> "NVIDIA-AI-Blueprints/pdf-to-podcast"
"thiswillbeyourgithub/wdoc" -> "HKUDS/VideoRAG" ["e"=1]
"thiswillbeyourgithub/wdoc" -> "Goldziher/kreuzberg"
"thiswillbeyourgithub/wdoc" -> "stair-lab/kg-gen"
"thiswillbeyourgithub/wdoc" -> "rag-web-ui/rag-web-ui" ["e"=1]
"thiswillbeyourgithub/wdoc" -> "nicekate/AI-ContentCraft" ["e"=1]
"okuvshynov/slowllama" -> "cckuailong/SuperAdapters"
"Mattie/cataclysm" -> "daveshap/REMO_Framework"
"Mattie/cataclysm" -> "daveshap/AI_Tools_and_Papers"
"Mattie/cataclysm" -> "DataBassGit/AgentForge" ["e"=1]
"Mattie/cataclysm" -> "daveshap/ATOM_Framework"
"Mattie/cataclysm" -> "daveshap/PineconeInfiniteMemoryChatbot"
"Mattie/cataclysm" -> "daveshap/raven"
"IBM/unitxt" -> "IBM/benchbench"
"jakobdylanc/llmcord" -> "chrisrude/oobabot" ["e"=1]
"jakobdylanc/llmcord" -> "238SAMIxD/discord-ai-bot"
"jakobdylanc/llmcord" -> "kevinthedang/discord-ollama"
"jakobdylanc/llmcord" -> "altoiddealer/ad_discordbot"
"jakobdylanc/llmcord" -> "mxyng/discollama"
"jakobdylanc/llmcord" -> "v2rockets/Loyal-Elephie" ["e"=1]
"jakobdylanc/llmcord" -> "matatonic/openedai-vision" ["e"=1]
"jakobdylanc/llmcord" -> "brucepro/Memoir" ["e"=1]
"jakobdylanc/llmcord" -> "jake83741/vnc-lm"
"daveshap/Coding_ChatBot_Assistant" -> "daveshap/ChromaDB_Chatbot_Public"
"daveshap/Coding_ChatBot_Assistant" -> "daveshap/Reflective_Journaling_Tool"
"daveshap/Coding_ChatBot_Assistant" -> "daveshap/Quickly_Extract_Science_Papers"
"daveshap/Coding_ChatBot_Assistant" -> "daveshap/KB_microservice"
"daveshap/Coding_ChatBot_Assistant" -> "daveshap/AI_Tools_and_Papers"
"daveshap/Coding_ChatBot_Assistant" -> "daveshap/Democratic_AI_Inputs"
"daveshap/Coding_ChatBot_Assistant" -> "daveshap/Automated_Consensus"
"daveshap/KB_microservice" -> "daveshap/Coding_ChatBot_Assistant"
"daveshap/KB_microservice" -> "daveshap/Automated_Consensus"
"daveshap/KB_microservice" -> "daveshap/Reflective_Journaling_Tool"
"daveshap/KB_microservice" -> "daveshap/Hierarchical_Document_Representation"
"daveshap/KB_microservice" -> "daveshap/Quickly_Extract_Science_Papers"
"daveshap/KB_microservice" -> "daveshap/ATOM_Framework"
"raphaelsty/knowledge" -> "raphaelsty/neural-cherche"
"TCatshoek/fastapi-nextauth-jwt" -> "Sheldenburg/ai-engineer-template"
"TCatshoek/fastapi-nextauth-jwt" -> "Nneji123/fastapi-nextjs"
"oslabs-beta/Aionic" -> "oslabs-beta/Caribu"
"oslabs-beta/Aionic" -> "oslabs-beta/Splache"
"oslabs-beta/Aionic" -> "RediseeLabs/redisee"
"oslabs-beta/solid-query-devkit" -> "oslabs-beta/NetPulse"
"oslabs-beta/solid-query-devkit" -> "oslabs-beta/CloudShift"
"oslabs-beta/solid-query-devkit" -> "oslabs-beta/kubehawk"
"oslabs-beta/solid-query-devkit" -> "oslabs-beta/RemixDJ"
"oslabs-beta/solid-query-devkit" -> "oslabs-beta/stitch"
"oslabs-beta/kubehawk" -> "oslabs-beta/CloudShift"
"oslabs-beta/kubehawk" -> "oslabs-beta/NetPulse"
"oslabs-beta/kubehawk" -> "oslabs-beta/RemixDJ"
"airvlab/cathsim" -> "andvg3/LSDM"
"kiryl-sol/solana-wallet-tracker" -> "v0idum/solana_tracker_bot"
"pgvector/pgvector-dotnet" -> "qdrant/qdrant-dotnet"
"tursodatabase/libsql-client-ts" -> "tursodatabase/libsql-js"
"tursodatabase/libsql-client-ts" -> "tursodatabase/turso-cli"
"KoljaB/AIVoiceChat" -> "KoljaB/Linguflex"
"KoljaB/AIVoiceChat" -> "KoljaB/LocalAIVoiceChat"
"KoljaB/AIVoiceChat" -> "KoljaB/stream2sentence"
"KoljaB/AIVoiceChat" -> "KoljaB/LocalEmotionalAIVoiceChat"
"FSoft-AI4Code/CodeCapybara" -> "FSoft-AI4Code/TheVault"
"FSoft-AI4Code/CodeCapybara" -> "FSoft-AI4Code/SRank-CodeRanker"
"FSoft-AI4Code/CodeCapybara" -> "FSoft-AI4Code/HyperAgent"
"FSoft-AI4Code/CodeCapybara" -> "FSoft-AI4Code/RepoExec"
"FSoft-AI4Code/CodeCapybara" -> "FSoft-AI4Code/CodeFlow"
"FSoft-AI4Code/CodeCapybara" -> "FSoft-AI4Code/XMainframe"
"FSoft-AI4Code/CodeCapybara" -> "FSoft-AI4Code/CodeText-parser"
"FSoft-AI4Code/CodeCapybara" -> "bdqnghi/awesome-ai4code"
"TransformerOptimus/Awesome-SuperAGI" -> "TransformerOptimus/AutoNode"
"TransformerOptimus/Awesome-SuperAGI" -> "TransformerOptimus/SuperAGI-Tools"
"TransformerOptimus/Awesome-SuperAGI" -> "TransformerOptimus/SuperAGI-Docs"
"TransformerOptimus/Awesome-SuperAGI" -> "TransformerOptimus/SuperAGI-Python-Client"
"TransformerOptimus/Awesome-SuperAGI" -> "TransformerOptimus/superAGI-tools-common"
"ashleykleynhans/runpod-worker-oobabooga" -> "hommayushi3/exllama-runpod-serverless"
"tomaarsen/SpanMarkerNER" -> "jackboyla/GLiREL"
"tomaarsen/SpanMarkerNER" -> "argilla-io/adept-augmentations" ["e"=1]
"tomaarsen/SpanMarkerNER" -> "universal-ner/universal-ner" ["e"=1]
"tomaarsen/SpanMarkerNER" -> "urchade/GLiNER"
"tomaarsen/SpanMarkerNER" -> "asahi417/tner"
"tomaarsen/SpanMarkerNER" -> "davidberenstein1957/spacy-setfit"
"tomaarsen/SpanMarkerNER" -> "huggingface/setfit" ["e"=1]
"tomaarsen/SpanMarkerNER" -> "SapienzaNLP/relik"
"tomaarsen/SpanMarkerNER" -> "cfahlgren1/observers" ["e"=1]
"tomaarsen/SpanMarkerNER" -> "MinishLab/semhash"
"tomaarsen/SpanMarkerNER" -> "webis-de/small-text" ["e"=1]
"coder/envbuilder" -> "coder/vscode-coder"
"coder/envbuilder" -> "coder/envbox"
"coder/envbuilder" -> "coder/backstage-plugins"
"coder/envbuilder" -> "coder/aicommit"
"coder/envbuilder" -> "coder/code-marketplace"
"coder/envbuilder" -> "coder/coder-logstream-kube"
"coder/envbuilder" -> "ericpaulsen/coder-aks"
"coder/envbuilder" -> "coder/labeler"
"coder/envbuilder" -> "coder/redjet"
"coder/envbuilder" -> "coder/modules"
"coder/envbuilder" -> "sharkymark/v2-templates"
"coder/envbuilder" -> "coder/awesome-coder"
"coder/envbuilder" -> "coder/exectrace"
"coder/envbuilder" -> "coder/retry"
"coder/envbuilder" -> "coder/terraform-provider-coderd"
"amineboutarfi/google_maps_scraper" -> "patxijuaristi/google_maps_scraper"
"dakenf/diffusers.js" -> "dakenf/stable-diffusion-nodejs"
"mxyng/discollama" -> "238SAMIxD/discord-ai-bot"
"KoljaB/Linguflex" -> "KoljaB/LocalAIVoiceChat"
"KoljaB/Linguflex" -> "KoljaB/RealtimeTTS" ["e"=1]
"KoljaB/Linguflex" -> "KoljaB/AIVoiceChat"
"KoljaB/Linguflex" -> "KoljaB/WhoSpeaks"
"KoljaB/Linguflex" -> "KoljaB/RealtimeSTT" ["e"=1]
"KoljaB/Linguflex" -> "KoljaB/LocalEmotionalAIVoiceChat"
"KoljaB/Linguflex" -> "matatonic/openedai-speech" ["e"=1]
"KoljaB/Linguflex" -> "KoljaB/stream2sentence"
"KoljaB/Linguflex" -> "libraryofcelsus/Aetherius_AI_Assistant" ["e"=1]
"KoljaB/Linguflex" -> "KoljaB/TurnVoice"
"KoljaB/Linguflex" -> "vndee/local-talking-llm"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "Trainy-ai/llm-atc"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "cedana/cedana-cli"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "empower-ai/dsensei"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "quack-ai/companion-vscode"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "CambioML/uniflow-llm-based-pdf-extraction-text-cleaning-data-clustering"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "Skyvern-AI/wyvern"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "CambioML/gpuv"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "apoxy-dev/proximal"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "CambioML/any-parser"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "trytrench/trench"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "Trainy-ai/konduktor"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "axflow/axflow"
"CambioML/pykoi-rlhf-finetuned-transformers" -> "artie-labs/transfer"
"AllAboutAI-YT/talk-to-chatgpt" -> "AllAboutAI-YT/chatgpt-promp1"
"AllAboutAI-YT/talk-to-chatgpt" -> "AllAboutAI-YT/rag"
"AllAboutAI-YT/talk-to-chatgpt" -> "AllAboutAI-YT/voice-to-image-tensorRT"
"AllAboutAI-YT/talk-to-chatgpt" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/talk-to-chatgpt" -> "AllAboutAI-YT/ai-engineer"
"AllAboutAI-YT/talk-to-chatgpt" -> "AllAboutAI-YT/ai-vision-scraping"
"daveshap/AI_Tools_and_Papers" -> "daveshap/Quickly_Extract_Science_Papers"
"daveshap/AI_Tools_and_Papers" -> "daveshap/ATOM_Framework"
"daveshap/AI_Tools_and_Papers" -> "daveshap/Coding_ChatBot_Assistant"
"daveshap/AI_Tools_and_Papers" -> "daveshap/Benevolent_AGI"
"daveshap/AI_Tools_and_Papers" -> "daveshap/REMO_Framework"
"daveshap/AI_Tools_and_Papers" -> "daveshap/RLHI"
"daveshap/AI_Tools_and_Papers" -> "hunter-meloche/REMO-langflow" ["e"=1]
"daveshap/AI_Tools_and_Papers" -> "daveshap/Automated_Consensus"
"daveshap/AI_Tools_and_Papers" -> "daveshap/KB_microservice"
"daveshap/AI_Tools_and_Papers" -> "daveshap/HeuristicImperatives"
"daveshap/AI_Tools_and_Papers" -> "daveshap/ACE_WorldState"
"daveshap/AI_Tools_and_Papers" -> "daveshap/SymphonyOfThought"
"daveshap/AI_Tools_and_Papers" -> "Mattie/cataclysm"
"daveshap/AI_Tools_and_Papers" -> "daveshap/AutoMuse_ChatGPT"
"daveshap/AI_Tools_and_Papers" -> "daveshap/EU_AI_Act"
"daveshap/RLHI" -> "daveshap/ACE_L1_Aspiration"
"daveshap/RLHI" -> "daveshap/Benevolent_AGI"
"Stevenic/vectra" -> "nitaiaharoni1/vector-storage"
"Stevenic/vectra" -> "BMS-geodev/vectra-py"
"Stevenic/vectra" -> "tantaraio/voy"
"Stevenic/vectra" -> "Anush008/fastembed-js" ["e"=1]
"Stevenic/vectra" -> "Stevenic/codepilot"
"xuwenhao/mactalk-ai-course" -> "ahmedbesbes/anonymizer"
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" -> "xerrors/Yuxi-Know" ["e"=1]
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" -> "honeyandme/RAGQnASystem"
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" -> "Xu1Aan/KGExplorer"
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" -> "maxin-nk/Chat_to_Medical_Machine"
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" -> "BBBQL2021/NLP_KBQA"
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" -> "BinNong/llm-graph-builder"
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" -> "BinNong/meet-libai"
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" -> "NanGePlus/GraphragTest"
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" -> "ligenxun/chatToMedicalAtlas"
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" -> "P1uviophile/simple_RAG_with_LLMs_API"
"nasa-petal/bidara" -> "daveshap/SparsePrimingRepresentations"
"nasa-petal/bidara" -> "daveshap/BSHR_Loop"
"nasa-petal/bidara" -> "daveshap/ChatGPT_Custom_Instructions"
"nasa-petal/bidara" -> "nasa-petal/bidara-deep-chat"
"nasa-petal/bidara" -> "daveshap/Quickly_Extract_Science_Papers"
"nasa-petal/bidara" -> "nickdobos/PromptGrimoire"
"ibm-self-serve-assets/SuperKnowa" -> "ibm-ecosystem-engineering/Watson-NLP"
"MoritzLaurer/summer-school-transformers-2023" -> "MoritzLaurer/zeroshot-classifier"
"ChetanXpro/nodejs-whisper" -> "ChetanXpro/chatgpt-telegram-bot"
"ChetanXpro/nodejs-whisper" -> "ChetanXpro/LaunchKit"
"ChetanXpro/nodejs-whisper" -> "ariym/whisper-node"
"mrdbourke/learn-transformers" -> "mrdbourke/rag-resources"
"mrdbourke/learn-transformers" -> "mrdbourke/learnopencv"
"tidwall/tg" -> "rochus-keller/CspChan"
"tidwall/tg" -> "flatgeobuf/flatgeobuf" ["e"=1]
"traceloop/jest-opentelemetry" -> "enrolla/enrolla"
"traceloop/jest-opentelemetry" -> "map3xyz/supercharge"
"traceloop/jest-opentelemetry" -> "vaerohq/vaero"
"traceloop/jest-opentelemetry" -> "thebabylonai/babylog"
"traceloop/jest-opentelemetry" -> "outerbase/ezql"
"traceloop/jest-opentelemetry" -> "swishjam/swishjam"
"traceloop/jest-opentelemetry" -> "usecakework/cakework"
"traceloop/jest-opentelemetry" -> "FrigadeHQ/react-native-onboard"
"traceloop/jest-opentelemetry" -> "fabiustech/openai"
"traceloop/jest-opentelemetry" -> "Left-on-Read/leftonread"
"traceloop/jest-opentelemetry" -> "athina-ai/athina-sdk"
"traceloop/jest-opentelemetry" -> "rubbrband/rubbrband"
"traceloop/jest-opentelemetry" -> "useVenice/venice"
"traceloop/jest-opentelemetry" -> "Helicone/valyr"
"traceloop/jest-opentelemetry" -> "magicpatterns/catalog"
"daveshap/ATOM_Framework" -> "daveshap/REMO_Framework"
"daveshap/ATOM_Framework" -> "daveshap/HeuristicImperatives"
"daveshap/ATOM_Framework" -> "daveshap/HierarchicalMemoryConsolidationSystem"
"daveshap/ATOM_Framework" -> "daveshap/AutoMuse_Chapter_Planner"
"daveshap/ATOM_Framework" -> "daveshap/KB_microservice"
"daveshap/ATOM_Framework" -> "daveshap/Benevolent_AGI"
"daveshap/ATOM_Framework" -> "daveshap/Epistemic-Pragmatic_Orthogonality"
"daveshap/ATOM_Framework" -> "daveshap/AI_Tools_and_Papers"
"daveshap/ATOM_Framework" -> "daveshap/AI_Future_of_Work"
"daveshap/ATOM_Framework" -> "daveshap/Functional_Sentience"
"daveshap/ATOM_Framework" -> "daveshap/PineconeInfiniteMemoryChatbot"
"daveshap/ATOM_Framework" -> "daveshap/SymphonyOfThought"
"daveshap/ATOM_Framework" -> "daveshap/Automated_Consensus"
"daveshap/ATOM_Framework" -> "daveshap/ENGAGE_Model"
"AIAnytime/Search-Your-PDF-App" -> "AIAnytime/Chat-With-Your-Data-Chatbot"
"AIAnytime/Search-Your-PDF-App" -> "AIAnytime/Text-Summarizer-Streamlit-App"
"pacman100/LLM-Workshop" -> "sayakpaul/hf-codegen"
"pacman100/LLM-Workshop" -> "modal-labs/llm-finetuning"
"oslabs-beta/CloudShift" -> "oslabs-beta/kubehawk"
"oslabs-beta/CloudShift" -> "oslabs-beta/NetPulse"
"oslabs-beta/CloudShift" -> "oslabs-beta/RemixDJ"
"oslabs-beta/CloudShift" -> "oslabs-beta/solid-query-devkit"
"oslabs-beta/CloudShift" -> "oslabs-beta/stitch"
"oslabs-beta/NetPulse" -> "oslabs-beta/kubehawk"
"oslabs-beta/NetPulse" -> "oslabs-beta/CloudShift"
"oslabs-beta/NetPulse" -> "oslabs-beta/RemixDJ"
"oslabs-beta/NetPulse" -> "oslabs-beta/solid-query-devkit"
"brilliantlabsAR/noa-for-ios" -> "brilliantlabsAR/docs"
"AIAnytime/Llama2-Medical-Chatbot" -> "AIAnytime/Chat-with-PDF-Chatbot"
"AIAnytime/Llama2-Medical-Chatbot" -> "AIAnytime/Medical-RAG-using-Bio-Mistral-7B"
"AIAnytime/Llama2-Medical-Chatbot" -> "ThisIs-Developer/Llama-2-GGML-Medical-Chatbot"
"AIAnytime/Llama2-Medical-Chatbot" -> "AIAnytime/Search-Your-PDF-App"
"AIAnytime/Llama2-Medical-Chatbot" -> "InsightEdge01/LLama2HealthCareChatBot"
"AIAnytime/Llama2-Medical-Chatbot" -> "AIAnytime/ChatCSV-Streamlit-App"
"AIAnytime/Llama2-Medical-Chatbot" -> "AIAnytime/Chat-With-Your-Data-Chatbot"
"AIAnytime/Llama2-Medical-Chatbot" -> "AIAnytime/Medical-Help-App-using-GPT-4V"
"daveshap/AutoMuse_ChatGPT" -> "daveshap/ChatGPT_API_Salience"
"daveshap/AutoMuse_ChatGPT" -> "daveshap/ChatGPT_QA_Regenerative_Medicine"
"daveshap/AutoMuse_ChatGPT" -> "daveshap/ImpliedCognition"
"daveshap/AutoMuse_ChatGPT" -> "daveshap/HierarchicalMemoryConsolidationSystem"
"yagil/ChatIDE" -> "yagil/tokmon"
"daveshap/ChromaDB_Chatbot_Public" -> "daveshap/Reflective_Journaling_Tool"
"daveshap/ChromaDB_Chatbot_Public" -> "daveshap/Coding_ChatBot_Assistant"
"daveshap/ChromaDB_Chatbot_Public" -> "daveshap/Mordin_Solus_Mode"
"daveshap/ChromaDB_Chatbot_Public" -> "daveshap/KB_microservice"
"daveshap/ChromaDB_Chatbot_Public" -> "daveshap/Quickly_Extract_Science_Papers"
"lucidrains/simple-hierarchical-transformer" -> "lucidrains/MEGABYTE-pytorch"
"twitchviewer/twitch-viewer-bot" -> "Jaredfromsubway-eth-mev/BOT"
"twitchviewer/twitch-viewer-bot" -> "bshang165/datastructures-and-algorithms-udacity"
"twitchviewer/twitch-viewer-bot" -> "mevbotsethandbsc/mev-bot"
"colindean/optar" -> "timwaters/paperback"
"Nutlope/aiangels" -> "Nutlope/pmsox-site" ["e"=1]
"Nutlope/aiangels" -> "Nutlope/devtool-angels" ["e"=1]
"Nutlope/aiangels" -> "Nutlope/ai-chatbot" ["e"=1]
"caikit/caikit" -> "project-codeflare/codeflare"
"caikit/caikit" -> "IBM/alchemy-logging"
"AIAnytime/ChatCSV-Streamlit-App" -> "AIAnytime/ChatCSV-Llama2-Chatbot"
"allwefantasy/byzer-llm" -> "allwefantasy/auto-coder"
"allwefantasy/byzer-llm" -> "allwefantasy/byzer-agent"
"allwefantasy/byzer-llm" -> "allwefantasy/BYZER-RETRIEVAL"
"outerbase/ezql" -> "swishjam/swishjam"
"outerbase/ezql" -> "map3xyz/supercharge"
"outerbase/ezql" -> "usecakework/cakework"
"outerbase/ezql" -> "thebabylonai/babylog"
"outerbase/ezql" -> "CommonPaper/Mutual-NDA"
"outerbase/ezql" -> "traceloop/jest-opentelemetry"
"outerbase/ezql" -> "athina-ai/athina-sdk"
"outerbase/ezql" -> "vaerohq/vaero"
"outerbase/ezql" -> "Helicone/valyr"
"outerbase/ezql" -> "swishjam/tagsafe"
"outerbase/ezql" -> "enrolla/enrolla"
"tursodatabase/libsql-client-go" -> "tursodatabase/go-libsql"
"tursodatabase/libsql-client-go" -> "tursodatabase/turso-cli"
"tursodatabase/go-libsql" -> "tursodatabase/libsql-client-go"
"arogozhnikov/eindex" -> "amadej2/consistent"
"arogozhnikov/eindex" -> "BielskiBartosz/Console"
"arogozhnikov/eindex" -> "dunikowski22/dunikovski"
"arogozhnikov/eindex" -> "FateMyName/dannjs"
"arogozhnikov/eindex" -> "FateMyName/encrypto"
"arogozhnikov/eindex" -> "JooooJark/Document"
"arogozhnikov/eindex" -> "FateMyName/Libreria1"
"arogozhnikov/eindex" -> "FateMyName/node"
"arogozhnikov/eindex" -> "FateMyName/laminas-diactoros"
"arogozhnikov/eindex" -> "FateMyName/fuel-core"
"arogozhnikov/eindex" -> "FateMyName/eigenlayer-contracts"
"arogozhnikov/eindex" -> "dimbadimass/htaccess"
"arogozhnikov/eindex" -> "FateMyName/validator-dashboard"
"arogozhnikov/eindex" -> "FateMyName/eigenda-operator-setup"
"arogozhnikov/eindex" -> "FateMyName/eigensdk-go"
"unit-mesh/choco-builder" -> "unit-mesh/unit-gen"
"modal-labs/llm-finetuning" -> "parlance-labs/ftcourse"
"modal-labs/llm-finetuning" -> "eugeneyan/visualizing-finetunes"
"modal-labs/llm-finetuning" -> "modal-labs/modal-examples"
"modal-labs/llm-finetuning" -> "modal-labs/awesome-modal"
"modal-labs/llm-finetuning" -> "pacman100/LLM-Workshop"
"modal-labs/llm-finetuning" -> "jjallaire/inspect-llm-workshop"
"modal-labs/llm-finetuning" -> "ragntune/code-llama-finetune"
"qdrant/qdrant-js" -> "qdrant/qdrant-web-ui"
"qdrant/qdrant-js" -> "maxdotio/node-qdrant"
"wpcodevo/nextjs-fastapi-framework" -> "mazzasaverio/nextjs-fastapi-your-chat"
"CerebriumAI/examples" -> "pipecat-ai/rtvi-web-demo"
"CerebriumAI/examples" -> "lhl/voicechat2"
"CerebriumAI/examples" -> "tincans-ai/gazelle"
"Writeopia/Writeopia" -> "viziax/surveylogic-splat"
"Writeopia/Writeopia" -> "viziax/surveylogic-crm"
"Writeopia/Writeopia" -> "viziax/viziax-docs"
"Writeopia/Writeopia" -> "balajikandavel/book-recommendation-engine"
"Writeopia/Writeopia" -> "gptBuster/gptBuster"
"Writeopia/Writeopia" -> "andreyykavv/RynexLLM"
"Writeopia/Writeopia" -> "ultramodernism/manifesto-paper"
"Writeopia/Writeopia" -> "jhd3197/Cacao"
"Writeopia/Writeopia" -> "TomaAytakin/RedPanda"
"Writeopia/Writeopia" -> "Chirag-Main1/ChatBot_perosnal"
"Writeopia/Writeopia" -> "Canuck-Gamblers/Best-Online-Casino-Canada-2025-Top-5-Real-Money-Sites"
"Writeopia/Writeopia" -> "Vorolski/pump-fun-ultimate"
"Writeopia/Writeopia" -> "Trylz/RestirFalcor"
"Writeopia/Writeopia" -> "Dokan-E-Commerce/compliance-laravel-sdk"
"Writeopia/Writeopia" -> "openqquantify/OpenQQuantify-Cesium-Digital-Twins-Simulations"
"trytrench/trench" -> "redotvideo/haven"
"trytrench/trench" -> "automorphic-ai/aegis"
"trytrench/trench" -> "poozlehq/poozle"
"trytrench/trench" -> "Skyvern-AI/wyvern"
"trytrench/trench" -> "briefercloud/ergomake"
"trytrench/trench" -> "Trainy-ai/llm-atc"
"trytrench/trench" -> "cedana/cedana-cli"
"trytrench/trench" -> "cedana/cedana"
"trytrench/trench" -> "quack-ai/companion-vscode"
"daveshap/Medical_Intake" -> "daveshap/latent_space_activation"
"daveshap/Medical_Intake" -> "daveshap/Benevolent_AGI"
"daveshap/Medical_Intake" -> "daveshap/weekly_arxiv"
"daveshap/Medical_Intake" -> "daveshap/ACE_L1_Aspiration"
"daveshap/Medical_Intake" -> "daveshap/Hierarchical_Document_Representation"
"do-me/SemanticFinder" -> "yusufhilmi/client-vector-search"
"phasehq/node-sdk" -> "phasehq/cli"
"HumeAI/hume-api-examples" -> "HumeAI/hume-python-sdk"
"HumeAI/hume-api-examples" -> "HumeAI/hume-typescript-sdk"
"HumeAI/hume-api-examples" -> "HumeAI/hume-research-publications"
"PepperBot-co/pepperbot" -> "Yawanseh/guidescript"
"runpod-workers/worker-vllm" -> "hommayushi3/exllama-runpod-serverless"
"runpod-workers/worker-vllm" -> "runpod-workers/worker-sglang"
"runpod-workers/worker-vllm" -> "runpod-workers/worker-faster_whisper"
"nitaiaharoni1/vector-storage" -> "PaulKinlan/idb-vector"
"nitaiaharoni1/vector-storage" -> "Stevenic/vectra"
"kapoorsaumitra/studentbenefits" -> "kapoorsaumitra/padhlebsdk"
"IngestAI/embedditor" -> "twitchviewer/twitch-viewer-bot"
"IngestAI/embedditor" -> "mevbotsethandbsc/mev-bot"
"IngestAI/embedditor" -> "siriusdeveloper/sirius-crypter"
"IngestAI/embedditor" -> "bshang165/dl-twitch"
"IngestAI/embedditor" -> "DefiZoro/BSC-Sniping-Bot-Opensource"
"IngestAI/embedditor" -> "bshang165/datastructures-and-algorithms-udacity"
"IngestAI/embedditor" -> "mevbotsEth-BSC/mev-bot"
"IngestAI/embedditor" -> "ScamHunter99/MEVBOT-SCAMS"
"IngestAI/embedditor" -> "TeleportDAO/bitcoin-ethereum-smart-contracts"
"daveshap/ChatGPT_QA_Regenerative_Medicine" -> "daveshap/AutoMuse_ChatGPT"
"daveshap/ChatGPT_QA_Regenerative_Medicine" -> "daveshap/ChatGPT_API_Salience"
"daveshap/ChatGPT_QA_Regenerative_Medicine" -> "daveshap/TwentyQuestions"
"daveshap/ChatGPT_QA_Regenerative_Medicine" -> "daveshap/Recreate_ChatGPT"
"Jaredfromsubway-eth-mev/BOT" -> "Josh-web3/MEV"
"mevbotsethandbsc/mev-bot" -> "bshang165/dl-twitch"
"mevbotsethandbsc/mev-bot" -> "mevbotsEth-BSC/mev-bot"
"AyushUnleashed/chat_gpt_api_for_everyone" -> "kapoorsaumitra/padhlebsdk"
"JorisdeJong123/7-Days-of-LangChain" -> "JorisdeJong123/LangChain-Cheatsheet"
"definitive-io/code-indexer-loop" -> "definitive-io/human-eval-sampling-benchmark"
"definitive-io/code-indexer-loop" -> "definitive-io/openassistants"
"definitive-io/code-indexer-loop" -> "groq/groq-typescript"
"MoritzLaurer/zeroshot-classifier" -> "MoritzLaurer/summer-school-transformers-2023"
"swishjam/swishjam" -> "outerbase/ezql"
"swishjam/swishjam" -> "map3xyz/supercharge"
"swishjam/swishjam" -> "thebabylonai/babylog"
"swishjam/swishjam" -> "usecakework/cakework"
"swishjam/swishjam" -> "vaerohq/vaero"
"swishjam/swishjam" -> "traceloop/jest-opentelemetry"
"swishjam/swishjam" -> "swishjam/tagsafe"
"swishjam/swishjam" -> "CommonPaper/Mutual-NDA"
"tursodatabase/libsql-js" -> "tursodatabase/libsql-client-ts"
"daveshap/YouTube_Slide_Decks" -> "daveshap/Hierarchical_Document_Representation"
"daveshap/YouTube_Slide_Decks" -> "daveshap/YouTubeChapterGenerator"
"andvg3/LSDM" -> "FSoft-AI4Code/DocChecker"
"charlesfrye/qart-codes" -> "modal-labs/libmodal"
"IBM/ibm-generative-ai" -> "IBM/ibm-generative-ai-node-sdk"
"IBM/ibm-generative-ai" -> "IBM/watsonx-ai-samples"
"IBM/ibm-generative-ai" -> "watson-developer-cloud/assistant-toolkit"
"IBM/ibm-generative-ai" -> "IBM/watson-openscale-samples"
"IBM/ibm-generative-ai" -> "ibm-self-serve-assets/SuperKnowa"
"IBM/ibm-generative-ai" -> "project-codeflare/codeflare"
"IBM/ibm-generative-ai" -> "IBM/dsce-sample-apps"
"daveshap/Automated_Consensus" -> "daveshap/GAIA_Initiative"
"daveshap/Automated_Consensus" -> "daveshap/ACE_L1_Aspiration"
"yusufhilmi/client-vector-search" -> "do-me/SemanticFinder"
"openshift-psap/llm-load-test" -> "opendatahub-io/ilab-on-ocp"
"protosphinx/in" -> "Siddharth1India/Awesome-Deep-Learning"
"protosphinx/in" -> "ERPdotAI/GNN"
"protosphinx/in" -> "kapoorsaumitra/studentbenefits"
"coder/modules" -> "coder/coder-logstream-kube"
"coder/modules" -> "coder/serpent"
"coder/envbox" -> "ericpaulsen/coder-aks"
"coder/envbox" -> "coder/exectrace"
"coder/envbox" -> "coder/labeler"
"coder/coder-logstream-kube" -> "matifali/update-coder-template"
"coder/coder-logstream-kube" -> "coder/envbuilder-starter-devcontainer"
"coder/coder-logstream-kube" -> "coder/modules"
"coder/coder-logstream-kube" -> "coder/serpent"
"coder/redjet" -> "ericpaulsen/coder-aks"
"coder/redjet" -> "coder/exectrace"
"coder/redjet" -> "coder/retry"
"coder/redjet" -> "coder/cli"
"coder/redjet" -> "coder/aicommit"
"coder/redjet" -> "coder/envbox"
"coder/redjet" -> "coder/coder-logstream-kube"
"coder/redjet" -> "coder/backstage-plugins"
"coder/redjet" -> "matifali/update-coder-template"
"coder/redjet" -> "coder/envbuilder"
"coder/redjet" -> "cmoog/sshproxy"
"coder/redjet" -> "coder/vscode-coder"
"coder/redjet" -> "coder/hat"
"coder/redjet" -> "coder/picopilot"
"daveshap/Mordin_Solus_Mode" -> "daveshap/Reflective_Journaling_Tool"
"suitedaces/sonophile" -> "louisho5/MotionScroll"
"lancedb/yoloexplorer" -> "AyushExel/trolo"
"ProfSynapse/dream-text-to-image" -> "ProfSynapse/ConstructorCora"
"ProfSynapse/dream-text-to-image" -> "ProfSynapse/Synapse_DB"
"ProfSynapse/dream-text-to-image" -> "ProfSynapse/CourseConstructor"
"ProfSynapse/dream-text-to-image" -> "ProfSynapse/MissNeura"
"ProfSynapse/dream-text-to-image" -> "ProfSynapse/open-interpreter"
"ProfSynapse/dream-text-to-image" -> "ProfSynapse/Super_Synapse"
"hommayushi3/exllama-runpod-serverless" -> "ashleykleynhans/runpod-worker-oobabooga"
"hommayushi3/exllama-runpod-serverless" -> "generativelabs/exllama-runpod-serverless"
"kyb3r/emergent" -> "daveshap/HierarchicalMemoryConsolidationSystem"
"bananaml/potassium" -> "bananaml/banana-cli"
"JorisdeJong123/LangChain-Cheatsheet" -> "JorisdeJong123/7-Days-of-LangChain"
"BeastByteAI/agent_dingo" -> "BeastByteAI/falcon"
"BeastByteAI/agent_dingo" -> "BeastByteAI/firefly"
"TransformerOptimus/SuperAGI-Node-Client" -> "TransformerOptimus/SuperAGI-Python-Client"
"TransformerOptimus/SuperAGI-Node-Client" -> "TransformerOptimus/superAGI-tools-common"
"daveshap/Epistemic-Pragmatic_Orthogonality" -> "daveshap/Functional_Sentience"
"quack-ai/platform" -> "quack-ai/companion-vscode"
"TransformerOptimus/SuperAGI-Python-Client" -> "TransformerOptimus/SuperAGI-Node-Client"
"TransformerOptimus/SuperAGI-Python-Client" -> "TransformerOptimus/SuperAGI-Tools"
"TransformerOptimus/SuperAGI-Python-Client" -> "TransformerOptimus/superAGI-tools-common"
"cedana/cedana-cli" -> "Trainy-ai/llm-atc"
"cedana/cedana-cli" -> "Skyvern-AI/wyvern"
"thedaviddias/publish-release-info-action" -> "thedaviddias/links-base"
"HumeAI/hume-typescript-sdk" -> "HumeAI/empathic-voice-api-js"
"daveshap/ImpliedCognition" -> "daveshap/HierarchicalMemoryConsolidationSystem"
"daveshap/ImpliedCognition" -> "daveshap/AI_Future_of_Work"
"ProfSynapse/open-interpreter" -> "ProfSynapse/Synapse_DB"
"ProfSynapse/open-interpreter" -> "ProfSynapse/MissNeura"
"promptdesk/promptdesk" -> "Romain-P/Guinness-Bot"
"promptdesk/promptdesk" -> "i38100/IIoT-Intelligent-Algorithm"
"promptdesk/promptdesk" -> "Haeven/msteam-log-transport"
"promptdesk/promptdesk" -> "CASRAI-CRedIT/Dictionary"
"promptdesk/promptdesk" -> "TheOneStudioLLC/Mac-Recorder"
"promptdesk/promptdesk" -> "manumerous/vpselector"
"promptdesk/promptdesk" -> "tm88instrument/BX-Private"
"promptdesk/promptdesk" -> "Weitheskmt/WeiDMD"
"ParisNeo/lollms_personalities_zoo" -> "ParisNeo/safe_store"
"huyphan168/LegalChat" -> "huyphan168/EasyCuda"
"TransformerOptimus/SuperAGI-Tools" -> "TransformerOptimus/superAGI-tools-common"
"TransformerOptimus/SuperAGI-Tools" -> "TransformerOptimus/SuperAGI-Python-Client"
"TransformerOptimus/SuperAGI-Tools" -> "TransformerOptimus/SuperAGI-Docs"
"TransformerOptimus/SuperAGI-Tools" -> "TransformerOptimus/SuperAGI-Node-Client"
"daveshap/Reflective_Journaling_Tool" -> "daveshap/Mordin_Solus_Mode"
"daveshap/Reflective_Journaling_Tool" -> "daveshap/ChromaDB_Chatbot_Public"
"daveshap/Reflective_Journaling_Tool" -> "daveshap/Democratic_AI_Inputs"
"daveshap/Reflective_Journaling_Tool" -> "daveshap/Coding_ChatBot_Assistant"
"dakenf/stable-diffusion-nodejs" -> "dakenf/onnxruntime-node-gpu"
"FSoft-AI4Code/DocChecker" -> "FSoft-AI4Code/RepoExec"
"daveshap/ACE_WorldState" -> "daveshap/ACE_L1_Aspiration"
"daveshap/ChatGPT_API_Salience" -> "daveshap/HierarchicalMemoryConsolidationSystem"
"daveshap/ChatGPT_API_Salience" -> "daveshap/AutoMuse_ChatGPT"
"daveshap/ACE_L1_Aspiration" -> "daveshap/ACE_WorldState"
"daveshap/ACE_L1_Aspiration" -> "daveshap/Benevolent_AGI"
"i38100/IIoT-Intelligent-Algorithm" -> "Romain-P/Guinness-Bot"
"i38100/IIoT-Intelligent-Algorithm" -> "promptdesk/promptdesk"
"daveshap/Functional_Sentience" -> "daveshap/Epistemic-Pragmatic_Orthogonality"
"daveshap/Functional_Sentience" -> "daveshap/ENGAGE_Model"
"AllAboutAI-YT/chatgpt-promp1" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/chatgpt-promp1" -> "AllAboutAI-YT/ai-engineer-project1"
"AllAboutAI-YT/chatgpt-promp1" -> "AllAboutAI-YT/voice-to-image-tensorRT"
"AllAboutAI-YT/chatgpt-promp1" -> "AllAboutAI-YT/ai-vision-scraping"
"AllAboutAI-YT/chatgpt-promp1" -> "AllAboutAI-YT/ai-engineer"
"AllAboutAI-YT/chatgpt-promp1" -> "AllAboutAI-YT/claude-chrome-ex"
"AllAboutAI-YT/chatgpt-promp1" -> "AllAboutAI-YT/SD-Python-Automation"
"AllAboutAI-YT/chatgpt-promp1" -> "AllAboutAI-YT/chatgpt-stream"
"yagil/tokmon" -> "yagil/tokmon-beam"
"simplerhacking/Evilginx3-Microsoft365-Phishlet" -> "akshaykalra92/aws-eks-openvpn-project"
"simplerhacking/Evilginx3-Microsoft365-Phishlet" -> "louisho5/MotionScroll"
"simplerhacking/Evilginx3-Microsoft365-Phishlet" -> "suitedaces/sonophile"
"daveshap/AI_Future_of_Work" -> "daveshap/ImpliedCognition"
"daveshap/GAIA_Initiative" -> "daveshap/Automated_Consensus"
"OpenAccess-AI-Collective/servereless-runpod-ggml" -> "OpenAccess-AI-Collective/ggml-webui"
"daveshap/HierarchicalMemoryConsolidationSystem" -> "daveshap/ImpliedCognition"
"daveshap/HierarchicalMemoryConsolidationSystem" -> "kyb3r/emergent"
"daveshap/HierarchicalMemoryConsolidationSystem" -> "daveshap/ChatGPT_API_Salience"
"AllAboutAI-YT/SD-Python-Automation" -> "AllAboutAI-YT/ai-engineer-project1"
"AllAboutAI-YT/SD-Python-Automation" -> "AllAboutAI-YT/voice-to-image-tensorRT"
"Babelscape/echoes-from-alexandria" -> "Babelscape/WSL"
"daveshap/ENGAGE_Model" -> "daveshap/Functional_Sentience"
"TransformerOptimus/superAGI-tools-common" -> "TransformerOptimus/SuperAGI-Node-Client"
"IBM/ibm-generative-ai-node-sdk" -> "IBM/ibm-generative-ai-cli"
"instill-ai/deprecated-model" -> "instill-ai/deprecated-core"
"instill-ai/deprecated-model" -> "instill-ai/cli"
"CambioML/gpuv" -> "jwilber/svelte2jupyter"
"jwilber/svelte2jupyter" -> "CambioML/gpuv"
"di37/chatbot-chatgpt-api" -> "di37/question-answering-api-llm"
"di37/chatbot-chatgpt-api" -> "di37/LLM-Load-Unload-Ollama"
"speechmatics/ctranslate2_triton_backend" -> "mixedbread-ai/ofen"
"di37/question-answering-api-llm" -> "di37/chatbot-chatgpt-api"
"instill-ai/deprecated-core" -> "instill-ai/cli"
"instill-ai/deprecated-core" -> "instill-ai/deprecated-model"
"coder/pretty" -> "coder/bigdur"
"VikParuchuri/marker" -> "VikParuchuri/surya"
"VikParuchuri/marker" -> "opendatalab/MinerU"
"VikParuchuri/marker" -> "docling-project/docling"
"VikParuchuri/marker" -> "microsoft/markitdown"
"VikParuchuri/marker" -> "microsoft/graphrag"
"VikParuchuri/marker" -> "mendableai/firecrawl"
"VikParuchuri/marker" -> "infiniflow/ragflow"
"VikParuchuri/marker" -> "ScrapeGraphAI/Scrapegraph-ai"
"VikParuchuri/marker" -> "stanford-oval/storm"
"VikParuchuri/marker" -> "mem0ai/mem0"
"VikParuchuri/marker" -> "Cinnamon/kotaemon"
"VikParuchuri/marker" -> "facebookresearch/nougat"
"VikParuchuri/marker" -> "unslothai/unsloth"
"VikParuchuri/marker" -> "agno-agi/agno"
"VikParuchuri/marker" -> "ItzCrazyKns/Perplexica"
"WithSecureLabs/lolcerts" -> "SafeBreach-Labs/MagicDot"
"WithSecureLabs/lolcerts" -> "kleiton0x00/Proxy-DLL-Loads" ["e"=1]
"WithSecureLabs/lolcerts" -> "dobin/avred" ["e"=1]
"tonyke-bot/ore-miner" -> "BenjaSOL/ore-cli-gpu"
"tonyke-bot/ore-miner" -> "Parms-Crypto/CUDA-ORE-DUMP"
"tonyke-bot/ore-miner" -> "regolith-labs/ore"
"tonyke-bot/ore-miner" -> "0xsongsu/dailytask" ["e"=1]
"tonyke-bot/ore-miner" -> "regolith-labs/ore-cli"
"tonyke-bot/ore-miner" -> "jito-labs/mev-bot" ["e"=1]
"tonyke-bot/ore-miner" -> "nubog-cmd/ore-cli-jito"
"tonyke-bot/ore-miner" -> "abcdsxg/ore-cli"
"tonyke-bot/ore-miner" -> "regolith-labs/drillx"
"tonyke-bot/ore-miner" -> "fuzzland/fourmeme-god" ["e"=1]
"tonyke-bot/ore-miner" -> "jito-labs/searcher-examples" ["e"=1]
"tonyke-bot/ore-miner" -> "nishuzumi/collider" ["e"=1]
"tonyke-bot/ore-miner" -> "blockworks-foundation/lite-rpc" ["e"=1]
"tonyke-bot/ore-miner" -> "Kriptikz/ore-cli-gpu"
"tonyke-bot/ore-miner" -> "Cissoko420/ore-cli-scripts"
"bgstaal/multipleWindow3dScene" -> "run-llama/rags"
"bgstaal/multipleWindow3dScene" -> "abi/screenshot-to-code"
"bgstaal/multipleWindow3dScene" -> "ShinoKana/multipleWindow3dScene"
"bgstaal/multipleWindow3dScene" -> "shadcn-ui/ui" ["e"=1]
"bgstaal/multipleWindow3dScene" -> "tldraw/tldraw" ["e"=1]
"bgstaal/multipleWindow3dScene" -> "movie-web/movie-web" ["e"=1]
"bgstaal/multipleWindow3dScene" -> "HeyPuter/puter" ["e"=1]
"bgstaal/multipleWindow3dScene" -> "zed-industries/zed" ["e"=1]
"bgstaal/multipleWindow3dScene" -> "SawyerHood/draw-a-ui"
"bgstaal/multipleWindow3dScene" -> "oven-sh/bun" ["e"=1]
"bgstaal/multipleWindow3dScene" -> "atherosai/ui"
"bgstaal/multipleWindow3dScene" -> "aidenybai/react-scan" ["e"=1]
"bgstaal/multipleWindow3dScene" -> "Lissy93/web-check" ["e"=1]
"bgstaal/multipleWindow3dScene" -> "BuilderIO/gpt-crawler"
"bgstaal/multipleWindow3dScene" -> "linexjlin/GPTs"
"mesop-dev/mesop" -> "AnswerDotAI/fasthtml" ["e"=1]
"mesop-dev/mesop" -> "pydantic/FastUI" ["e"=1]
"mesop-dev/mesop" -> "reflex-dev/reflex" ["e"=1]
"mesop-dev/mesop" -> "zauberzeug/nicegui" ["e"=1]
"mesop-dev/mesop" -> "pydantic/pydantic-ai"
"mesop-dev/mesop" -> "truefoundry/cognita"
"mesop-dev/mesop" -> "marimo-team/marimo" ["e"=1]
"mesop-dev/mesop" -> "ScrapeGraphAI/Scrapegraph-ai"
"mesop-dev/mesop" -> "agno-agi/agno"
"mesop-dev/mesop" -> "567-labs/instructor"
"mesop-dev/mesop" -> "weaviate/Verba"
"mesop-dev/mesop" -> "apify/crawlee-python"
"mesop-dev/mesop" -> "Avaiga/taipy" ["e"=1]
"mesop-dev/mesop" -> "stanfordnlp/dspy"
"mesop-dev/mesop" -> "Doriandarko/maestro"
"unslothai/unsloth" -> "hiyouga/LLaMA-Factory"
"unslothai/unsloth" -> "vllm-project/vllm"
"unslothai/unsloth" -> "ggml-org/llama.cpp"
"unslothai/unsloth" -> "open-webui/open-webui"
"unslothai/unsloth" -> "huggingface/open-r1" ["e"=1]
"unslothai/unsloth" -> "mendableai/firecrawl"
"unslothai/unsloth" -> "run-llama/llama_index"
"unslothai/unsloth" -> "infiniflow/ragflow"
"unslothai/unsloth" -> "microsoft/autogen"
"unslothai/unsloth" -> "stanfordnlp/dspy"
"unslothai/unsloth" -> "microsoft/graphrag"
"unslothai/unsloth" -> "ollama/ollama"
"unslothai/unsloth" -> "Mintplex-Labs/anything-llm"
"unslothai/unsloth" -> "agno-agi/agno"
"unslothai/unsloth" -> "sgl-project/sglang" ["e"=1]
"SWE-agent/SWE-agent" -> "All-Hands-AI/OpenHands"
"SWE-agent/SWE-agent" -> "stitionai/devika"
"SWE-agent/SWE-agent" -> "Aider-AI/aider"
"SWE-agent/SWE-agent" -> "crewAIInc/crewAI"
"SWE-agent/SWE-agent" -> "AutoCodeRoverSG/auto-code-rover"
"SWE-agent/SWE-agent" -> "plandex-ai/plandex"
"SWE-agent/SWE-agent" -> "stanfordnlp/dspy"
"SWE-agent/SWE-agent" -> "microsoft/autogen"
"SWE-agent/SWE-agent" -> "letta-ai/letta"
"SWE-agent/SWE-agent" -> "agno-agi/agno"
"SWE-agent/SWE-agent" -> "wandb/openui"
"SWE-agent/SWE-agent" -> "assafelovic/gpt-researcher"
"SWE-agent/SWE-agent" -> "BerriAI/litellm"
"SWE-agent/SWE-agent" -> "Pythagora-io/gpt-pilot"
"SWE-agent/SWE-agent" -> "ItzCrazyKns/Perplexica"
"karpathy/llm.c" -> "karpathy/llama2.c"
"karpathy/llm.c" -> "karpathy/nanoGPT"
"karpathy/llm.c" -> "karpathy/LLM101n"
"karpathy/llm.c" -> "ggml-org/llama.cpp"
"karpathy/llm.c" -> "vllm-project/vllm"
"karpathy/llm.c" -> "naklecha/llama3-from-scratch"
"karpathy/llm.c" -> "karpathy/minbpe"
"karpathy/llm.c" -> "triton-lang/triton" ["e"=1]
"karpathy/llm.c" -> "Dao-AILab/flash-attention" ["e"=1]
"karpathy/llm.c" -> "rasbt/LLMs-from-scratch"
"karpathy/llm.c" -> "tinygrad/tinygrad"
"karpathy/llm.c" -> "meta-llama/llama3"
"karpathy/llm.c" -> "karpathy/micrograd"
"karpathy/llm.c" -> "ml-explore/mlx"
"karpathy/llm.c" -> "karpathy/minGPT"
"asg017/sqlite-vec" -> "asg017/sqlite-vss"
"asg017/sqlite-vec" -> "pgvector/pgvector"
"asg017/sqlite-vec" -> "lancedb/lancedb"
"asg017/sqlite-vec" -> "electric-sql/pglite" ["e"=1]
"asg017/sqlite-vec" -> "EricLBuehler/mistral.rs" ["e"=1]
"asg017/sqlite-vec" -> "Mozilla-Ocho/llamafile"
"asg017/sqlite-vec" -> "vlcn-io/cr-sqlite" ["e"=1]
"asg017/sqlite-vec" -> "chonkie-ai/chonkie"
"asg017/sqlite-vec" -> "unum-cloud/usearch" ["e"=1]
"asg017/sqlite-vec" -> "neuml/txtai"
"asg017/sqlite-vec" -> "tursodatabase/libsql" ["e"=1]
"asg017/sqlite-vec" -> "tursodatabase/limbo" ["e"=1]
"asg017/sqlite-vec" -> "benbjohnson/litestream" ["e"=1]
"asg017/sqlite-vec" -> "AnswerDotAI/fasthtml" ["e"=1]
"asg017/sqlite-vec" -> "567-labs/instructor"
"plandex-ai/plandex" -> "SWE-agent/SWE-agent"
"plandex-ai/plandex" -> "Aider-AI/aider"
"plandex-ai/plandex" -> "stitionai/devika"
"plandex-ai/plandex" -> "wandb/openui"
"plandex-ai/plandex" -> "nashsu/FreeAskInternet"
"plandex-ai/plandex" -> "All-Hands-AI/OpenHands"
"plandex-ai/plandex" -> "regolith-labs/ore-cli"
"plandex-ai/plandex" -> "agno-agi/agno"
"plandex-ai/plandex" -> "Pythagora-io/gpt-pilot"
"plandex-ai/plandex" -> "crewAIInc/crewAI"
"plandex-ai/plandex" -> "Skyvern-AI/skyvern"
"plandex-ai/plandex" -> "nilsherzig/LLocalSearch"
"plandex-ai/plandex" -> "ItzCrazyKns/Perplexica"
"plandex-ai/plandex" -> "stanford-oval/storm"
"plandex-ai/plandex" -> "khoj-ai/khoj"
"SawyerHood/draw-a-ui" -> "netease-youdao/EmotiVoice" ["e"=1]
"SawyerHood/draw-a-ui" -> "BuilderIO/gpt-crawler"
"SawyerHood/draw-a-ui" -> "tldraw/make-real"
"SawyerHood/draw-a-ui" -> "abi/screenshot-to-code"
"SawyerHood/draw-a-ui" -> "daveshap/OpenAI_Agent_Swarm"
"SawyerHood/draw-a-ui" -> "tldraw/tldraw" ["e"=1]
"SawyerHood/draw-a-ui" -> "zylon-ai/private-gpt"
"SawyerHood/draw-a-ui" -> "wandb/openui"
"SawyerHood/draw-a-ui" -> "Pythagora-io/gpt-pilot"
"SawyerHood/draw-a-ui" -> "langchain-ai/opengpts"
"SawyerHood/draw-a-ui" -> "linexjlin/GPTs"
"SawyerHood/draw-a-ui" -> "OpenInterpreter/open-interpreter"
"SawyerHood/draw-a-ui" -> "QuivrHQ/quivr"
"SawyerHood/draw-a-ui" -> "myshell-ai/OpenVoice" ["e"=1]
"SawyerHood/draw-a-ui" -> "movie-web/movie-web" ["e"=1]
"Nutlope/notesGPT" -> "Nutlope/pdftochat"
"Nutlope/notesGPT" -> "adamcohenhillel/ADeus"
"Nutlope/notesGPT" -> "Nutlope/turboseek"
"Nutlope/notesGPT" -> "BCG-X-Official/agentkit"
"Nutlope/notesGPT" -> "Nutlope/explorecareers"
"Nutlope/notesGPT" -> "Nutlope/llamatutor"
"Nutlope/notesGPT" -> "Nutlope/twitterbio" ["e"=1]
"Nutlope/notesGPT" -> "reorproject/reor"
"Nutlope/notesGPT" -> "developersdigest/llm-answer-engine"
"Nutlope/notesGPT" -> "miurla/morphic"
"Nutlope/notesGPT" -> "Codehagen/Badget" ["e"=1]
"Nutlope/notesGPT" -> "Nutlope/blinkshot"
"Nutlope/notesGPT" -> "Nutlope/restorePhotos" ["e"=1]
"Nutlope/notesGPT" -> "andrewnguonly/Lumos"
"Nutlope/notesGPT" -> "Nutlope/qrGPT" ["e"=1]
"linexjlin/GPTs" -> "LouisShark/chatgpt_system_prompt"
"linexjlin/GPTs" -> "lobehub/lobe-chat"
"linexjlin/GPTs" -> "BuilderIO/gpt-crawler"
"linexjlin/GPTs" -> "bleedline/aimoneyhunter" ["e"=1]
"linexjlin/GPTs" -> "abi/screenshot-to-code"
"linexjlin/GPTs" -> "JushBJJ/Mr.-Ranedeer-AI-Tutor"
"linexjlin/GPTs" -> "songquanpeng/one-api" ["e"=1]
"linexjlin/GPTs" -> "FoundationAgents/MetaGPT"
"linexjlin/GPTs" -> "Pythagora-io/gpt-pilot"
"linexjlin/GPTs" -> "ChatGPTNextWeb/NextChat" ["e"=1]
"linexjlin/GPTs" -> "PlexPt/awesome-chatgpt-prompts-zh" ["e"=1]
"linexjlin/GPTs" -> "QuivrHQ/quivr"
"linexjlin/GPTs" -> "ZuodaoTech/everyone-can-use-english" ["e"=1]
"linexjlin/GPTs" -> "dair-ai/Prompt-Engineering-Guide"
"linexjlin/GPTs" -> "myshell-ai/OpenVoice" ["e"=1]
"BuilderIO/gpt-crawler" -> "abi/screenshot-to-code"
"BuilderIO/gpt-crawler" -> "linexjlin/GPTs"
"BuilderIO/gpt-crawler" -> "mendableai/firecrawl"
"BuilderIO/gpt-crawler" -> "Pythagora-io/gpt-pilot"
"BuilderIO/gpt-crawler" -> "LouisShark/chatgpt_system_prompt"
"BuilderIO/gpt-crawler" -> "lobehub/lobe-chat"
"BuilderIO/gpt-crawler" -> "unclecode/crawl4ai"
"BuilderIO/gpt-crawler" -> "ScrapeGraphAI/Scrapegraph-ai"
"BuilderIO/gpt-crawler" -> "QuivrHQ/quivr"
"BuilderIO/gpt-crawler" -> "JushBJJ/Mr.-Ranedeer-AI-Tutor"
"BuilderIO/gpt-crawler" -> "OpenInterpreter/open-interpreter"
"BuilderIO/gpt-crawler" -> "FlowiseAI/Flowise"
"BuilderIO/gpt-crawler" -> "assafelovic/gpt-researcher"
"BuilderIO/gpt-crawler" -> "FoundationAgents/MetaGPT"
"BuilderIO/gpt-crawler" -> "agno-agi/agno"
"abi/screenshot-to-code" -> "lobehub/lobe-chat"
"abi/screenshot-to-code" -> "BuilderIO/gpt-crawler"
"abi/screenshot-to-code" -> "langgenius/dify"
"abi/screenshot-to-code" -> "All-Hands-AI/OpenHands"
"abi/screenshot-to-code" -> "OpenInterpreter/open-interpreter"
"abi/screenshot-to-code" -> "ChatGPTNextWeb/NextChat" ["e"=1]
"abi/screenshot-to-code" -> "FoundationAgents/MetaGPT"
"abi/screenshot-to-code" -> "browser-use/browser-use"
"abi/screenshot-to-code" -> "mendableai/firecrawl"
"abi/screenshot-to-code" -> "ollama/ollama"
"abi/screenshot-to-code" -> "open-webui/open-webui"
"abi/screenshot-to-code" -> "Pythagora-io/gpt-pilot"
"abi/screenshot-to-code" -> "comfyanonymous/ComfyUI" ["e"=1]
"abi/screenshot-to-code" -> "Stirling-Tools/Stirling-PDF" ["e"=1]
"abi/screenshot-to-code" -> "unclecode/crawl4ai"
"cbh123/narrator" -> "Vaibhavs10/insanely-fast-whisper" ["e"=1]
"cbh123/narrator" -> "BuilderIO/gpt-crawler"
"cbh123/narrator" -> "google-deepmind/graphcast" ["e"=1]
"cbh123/narrator" -> "apache/incubator-xtable" ["e"=1]
"cbh123/narrator" -> "OthersideAI/self-operating-computer"
"cbh123/narrator" -> "langchain-ai/opengpts"
"cbh123/narrator" -> "LouisShark/chatgpt_system_prompt"
"cbh123/narrator" -> "tldraw/make-real"
"cbh123/narrator" -> "a16z-infra/companion-app" ["e"=1]
"cbh123/narrator" -> "jasonppy/VoiceCraft" ["e"=1]
"cbh123/narrator" -> "mshumer/gpt-llm-trainer" ["e"=1]
"cbh123/narrator" -> "disler/multi-agent-postgres-data-analytics"
"cbh123/narrator" -> "mshumer/gpt-prompt-engineer"
"cbh123/narrator" -> "smol-ai/developer" ["e"=1]
"cbh123/narrator" -> "letta-ai/letta"
"DropbaseHQ/dropbase" -> "Nike-Inc/koheesio" ["e"=1]
"DropbaseHQ/dropbase" -> "superglue-ai/superglue" ["e"=1]
"DropbaseHQ/dropbase" -> "aymenfurter/microagents"
"DropbaseHQ/dropbase" -> "leapingio/leaping"
"DropbaseHQ/dropbase" -> "arunsupe/semantic-grep" ["e"=1]
"DropbaseHQ/dropbase" -> "urin/vscode-web-visual-editor" ["e"=1]
"DropbaseHQ/dropbase" -> "alishobeiri/thread"
"DropbaseHQ/dropbase" -> "tegonhq/tegon" ["e"=1]
"DropbaseHQ/dropbase" -> "Tanuki/tanuki.py" ["e"=1]
"DropbaseHQ/dropbase" -> "visprex/visprex"
"DropbaseHQ/dropbase" -> "metaskills/experts"
"DropbaseHQ/dropbase" -> "ask-fini/paramount" ["e"=1]
"DropbaseHQ/dropbase" -> "stuzero/pg-mcp-server"
"DropbaseHQ/dropbase" -> "daminikhq/daminik"
"DropbaseHQ/dropbase" -> "postgresml/korvus"
"infiniflow/ragflow" -> "langgenius/dify"
"infiniflow/ragflow" -> "microsoft/graphrag"
"infiniflow/ragflow" -> "hiyouga/LLaMA-Factory"
"infiniflow/ragflow" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"infiniflow/ragflow" -> "labring/FastGPT"
"infiniflow/ragflow" -> "Mintplex-Labs/anything-llm"
"infiniflow/ragflow" -> "opendatalab/MinerU"
"infiniflow/ragflow" -> "open-webui/open-webui"
"infiniflow/ragflow" -> "mendableai/firecrawl"
"infiniflow/ragflow" -> "FoundationAgents/MetaGPT"
"infiniflow/ragflow" -> "vllm-project/vllm"
"infiniflow/ragflow" -> "unslothai/unsloth"
"infiniflow/ragflow" -> "FoundationAgents/OpenManus"
"infiniflow/ragflow" -> "ollama/ollama"
"infiniflow/ragflow" -> "lobehub/lobe-chat"
"TencentQQGYLab/AppAgent" -> "X-PLUG/MobileAgent" ["e"=1]
"TencentQQGYLab/AppAgent" -> "THUDM/CogVLM" ["e"=1]
"TencentQQGYLab/AppAgent" -> "OpenBMB/XAgent" ["e"=1]
"TencentQQGYLab/AppAgent" -> "xlang-ai/OpenAgents" ["e"=1]
"TencentQQGYLab/AppAgent" -> "bytedance/UI-TARS"
"TencentQQGYLab/AppAgent" -> "microsoft/TaskWeaver"
"TencentQQGYLab/AppAgent" -> "OthersideAI/self-operating-computer"
"TencentQQGYLab/AppAgent" -> "modelscope/modelscope-agent" ["e"=1]
"TencentQQGYLab/AppAgent" -> "aiwaves-cn/agents" ["e"=1]
"TencentQQGYLab/AppAgent" -> "OpenBMB/AgentVerse" ["e"=1]
"TencentQQGYLab/AppAgent" -> "BAAI-Agents/Cradle" ["e"=1]
"TencentQQGYLab/AppAgent" -> "cumulo-autumn/StreamDiffusion" ["e"=1]
"TencentQQGYLab/AppAgent" -> "Pythagora-io/gpt-pilot"
"TencentQQGYLab/AppAgent" -> "letta-ai/letta"
"TencentQQGYLab/AppAgent" -> "agiresearch/AIOS"
"pipecat-ai/pipecat" -> "livekit/agents"
"pipecat-ai/pipecat" -> "fixie-ai/ultravox"
"pipecat-ai/pipecat" -> "vocodedev/vocode-core"
"pipecat-ai/pipecat" -> "kyutai-labs/moshi" ["e"=1]
"pipecat-ai/pipecat" -> "TEN-framework/ten-framework"
"pipecat-ai/pipecat" -> "KoljaB/RealtimeTTS" ["e"=1]
"pipecat-ai/pipecat" -> "huggingface/speech-to-speech" ["e"=1]
"pipecat-ai/pipecat" -> "livekit/livekit" ["e"=1]
"pipecat-ai/pipecat" -> "pipecat-ai/rtvi-web-demo"
"pipecat-ai/pipecat" -> "snakers4/silero-vad" ["e"=1]
"pipecat-ai/pipecat" -> "openai/openai-realtime-console"
"pipecat-ai/pipecat" -> "lavague-ai/LaVague"
"pipecat-ai/pipecat" -> "SesameAILabs/csm" ["e"=1]
"pipecat-ai/pipecat" -> "canopyai/Orpheus-TTS" ["e"=1]
"pipecat-ai/pipecat" -> "menloresearch/ichigo"
"netease-youdao/QAnything" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"netease-youdao/QAnything" -> "labring/FastGPT"
"netease-youdao/QAnything" -> "1Panel-dev/MaxKB"
"netease-youdao/QAnything" -> "FlagOpen/FlagEmbedding" ["e"=1]
"netease-youdao/QAnything" -> "eosphoros-ai/DB-GPT"
"netease-youdao/QAnything" -> "infiniflow/ragflow"
"netease-youdao/QAnything" -> "netease-youdao/BCEmbedding" ["e"=1]
"netease-youdao/QAnything" -> "xorbitsai/inference"
"netease-youdao/QAnything" -> "microsoft/graphrag"
"netease-youdao/QAnything" -> "HqWu-HITCS/Awesome-Chinese-LLM" ["e"=1]
"netease-youdao/QAnything" -> "QwenLM/Qwen" ["e"=1]
"netease-youdao/QAnything" -> "THUDM/ChatGLM3" ["e"=1]
"netease-youdao/QAnything" -> "songquanpeng/one-api" ["e"=1]
"netease-youdao/QAnything" -> "hiyouga/LLaMA-Factory"
"netease-youdao/QAnything" -> "LlamaFamily/Llama-Chinese" ["e"=1]
"OwlAIProject/Owl" -> "BasedHardware/Whomane"
"OwlAIProject/Owl" -> "TheSethRose/Time-Capsule"
"OwlAIProject/Owl" -> "adamcohenhillel/ADeus"
"OwlAIProject/Owl" -> "apirrone/Memento"
"OwlAIProject/Owl" -> "modem-works/terra"
"OwlAIProject/Owl" -> "brilliantlabsAR/noa-assistant"
"OwlAIProject/Owl" -> "MikeBirdTech/open-interpreter-termux" ["e"=1]
"OwlAIProject/Owl" -> "sullyo/fingen"
"OwlAIProject/Owl" -> "BasedHardware/omi"
"OwlAIProject/Owl" -> "C0deMunk33/bespoke_automata"
"OwlAIProject/Owl" -> "jasonjmcghee/rem"
"OwlAIProject/Owl" -> "OpenInterpreter/aifs"
"OwlAIProject/Owl" -> "Vincent-liuwingsang/unlost"
"BCG-X-Official/agentkit" -> "Nutlope/notesGPT"
"BCG-X-Official/agentkit" -> "gitbutlerapp/gitbutler" ["e"=1]
"BCG-X-Official/agentkit" -> "adamcohenhillel/ADeus"
"BCG-X-Official/agentkit" -> "developersdigest/llm-answer-engine"
"BCG-X-Official/agentkit" -> "langchain-ai/langchain-extract" ["e"=1]
"BCG-X-Official/agentkit" -> "BCG-X-Official/facet" ["e"=1]
"BCG-X-Official/agentkit" -> "AgentOps-AI/agentops"
"BCG-X-Official/agentkit" -> "superagent-ai/superagent" ["e"=1]
"BCG-X-Official/agentkit" -> "Doriandarko/maestro"
"BCG-X-Official/agentkit" -> "gptscript-ai/gptscript"
"BCG-X-Official/agentkit" -> "OS-Copilot/OS-Copilot" ["e"=1]
"BCG-X-Official/agentkit" -> "mshumer/gpt-investor"
"BCG-X-Official/agentkit" -> "langchain-ai/opengpts"
"BCG-X-Official/agentkit" -> "BCG-X-Official/artkit" ["e"=1]
"BCG-X-Official/agentkit" -> "langchain-ai/langserve" ["e"=1]
"DAGWorks-Inc/burr" -> "DAGWorks-Inc/hamilton"
"DAGWorks-Inc/burr" -> "SylphAI-Inc/AdalFlow"
"DAGWorks-Inc/burr" -> "langroid/langroid"
"DAGWorks-Inc/burr" -> "BrainBlend-AI/atomic-agents"
"DAGWorks-Inc/burr" -> "stitchfix/hamilton"
"DAGWorks-Inc/burr" -> "griptape-ai/griptape"
"DAGWorks-Inc/burr" -> "567-labs/instructor"
"DAGWorks-Inc/burr" -> "PrefectHQ/ControlFlow" ["e"=1]
"DAGWorks-Inc/burr" -> "Mirascope/mirascope"
"DAGWorks-Inc/burr" -> "KruxAI/ragbuilder"
"DAGWorks-Inc/burr" -> "aurelio-labs/semantic-router"
"DAGWorks-Inc/burr" -> "AnswerDotAI/rerankers"
"DAGWorks-Inc/burr" -> "SciPhi-AI/R2R"
"DAGWorks-Inc/burr" -> "BoundaryML/baml"
"DAGWorks-Inc/burr" -> "lmnr-ai/index"
"FujiwaraChoki/MoneyPrinter" -> "FujiwaraChoki/MoneyPrinterV2"
"FujiwaraChoki/MoneyPrinter" -> "harry0703/MoneyPrinterTurbo"
"FujiwaraChoki/MoneyPrinter" -> "GoogleCloudPlatform/localllm"
"FujiwaraChoki/MoneyPrinter" -> "RayVentura/ShortGPT" ["e"=1]
"FujiwaraChoki/MoneyPrinter" -> "maybe-finance/maybe" ["e"=1]
"FujiwaraChoki/MoneyPrinter" -> "myshell-ai/OpenVoice" ["e"=1]
"FujiwaraChoki/MoneyPrinter" -> "agno-agi/agno"
"FujiwaraChoki/MoneyPrinter" -> "apple/ml-mgie" ["e"=1]
"FujiwaraChoki/MoneyPrinter" -> "Pythagora-io/gpt-pilot"
"FujiwaraChoki/MoneyPrinter" -> "stitionai/devika"
"FujiwaraChoki/MoneyPrinter" -> "Skyvern-AI/skyvern"
"FujiwaraChoki/MoneyPrinter" -> "Lissy93/web-check" ["e"=1]
"FujiwaraChoki/MoneyPrinter" -> "BuilderIO/gpt-crawler"
"FujiwaraChoki/MoneyPrinter" -> "ScrapeGraphAI/Scrapegraph-ai"
"FujiwaraChoki/MoneyPrinter" -> "facefusion/facefusion" ["e"=1]
"aishwaryanr/awesome-generative-ai-guide" -> "NirDiamant/GenAI_Agents"
"aishwaryanr/awesome-generative-ai-guide" -> "e2b-dev/awesome-ai-agents"
"aishwaryanr/awesome-generative-ai-guide" -> "NirDiamant/RAG_Techniques"
"aishwaryanr/awesome-generative-ai-guide" -> "mlabonne/llm-course"
"aishwaryanr/awesome-generative-ai-guide" -> "steven2358/awesome-generative-ai"
"aishwaryanr/awesome-generative-ai-guide" -> "decodingml/llm-twin-course"
"aishwaryanr/awesome-generative-ai-guide" -> "Shubhamsaboo/awesome-llm-apps"
"aishwaryanr/awesome-generative-ai-guide" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"aishwaryanr/awesome-generative-ai-guide" -> "patchy631/ai-engineering-hub"
"aishwaryanr/awesome-generative-ai-guide" -> "krishnaik06/Roadmap-To-Learn-Generative-AI-In-2024" ["e"=1]
"aishwaryanr/awesome-generative-ai-guide" -> "rasbt/LLMs-from-scratch"
"aishwaryanr/awesome-generative-ai-guide" -> "ashishpatel26/LLM-Finetuning"
"aishwaryanr/awesome-generative-ai-guide" -> "khangich/machine-learning-interview" ["e"=1]
"aishwaryanr/awesome-generative-ai-guide" -> "graviraja/MLOps-Basics" ["e"=1]
"aishwaryanr/awesome-generative-ai-guide" -> "karpathy/LLM101n"
"supermemoryai/supermemory" -> "Dhravya/cloudflare-saas-stack" ["e"=1]
"supermemoryai/supermemory" -> "miurla/morphic"
"supermemoryai/supermemory" -> "midday-ai/midday" ["e"=1]
"supermemoryai/supermemory" -> "zaidmukaddam/scira"
"supermemoryai/supermemory" -> "TeamWiseFlow/wiseflow"
"supermemoryai/supermemory" -> "mendableai/firecrawl"
"supermemoryai/supermemory" -> "agno-agi/agno"
"supermemoryai/supermemory" -> "CapSoftware/Cap" ["e"=1]
"supermemoryai/supermemory" -> "mem0ai/mem0"
"supermemoryai/supermemory" -> "dubinc/dub" ["e"=1]
"supermemoryai/supermemory" -> "Mail-0/Zero" ["e"=1]
"supermemoryai/supermemory" -> "supermemoryai/markdowner"
"supermemoryai/supermemory" -> "jina-ai/reader"
"supermemoryai/supermemory" -> "browserbase/stagehand"
"supermemoryai/supermemory" -> "ItzCrazyKns/Perplexica"
"Skyvern-AI/skyvern" -> "lavague-ai/LaVague"
"Skyvern-AI/skyvern" -> "ScrapeGraphAI/Scrapegraph-ai"
"Skyvern-AI/skyvern" -> "agno-agi/agno"
"Skyvern-AI/skyvern" -> "browserbase/stagehand"
"Skyvern-AI/skyvern" -> "mendableai/firecrawl"
"Skyvern-AI/skyvern" -> "ItzCrazyKns/Perplexica"
"Skyvern-AI/skyvern" -> "mediar-ai/screenpipe"
"Skyvern-AI/skyvern" -> "assafelovic/gpt-researcher"
"Skyvern-AI/skyvern" -> "stanford-oval/storm"
"Skyvern-AI/skyvern" -> "browser-use/browser-use"
"Skyvern-AI/skyvern" -> "unclecode/crawl4ai"
"Skyvern-AI/skyvern" -> "Cinnamon/kotaemon"
"Skyvern-AI/skyvern" -> "crewAIInc/crewAI"
"Skyvern-AI/skyvern" -> "All-Hands-AI/OpenHands"
"Skyvern-AI/skyvern" -> "BerriAI/litellm"
"harry0703/MoneyPrinterTurbo" -> "FujiwaraChoki/MoneyPrinterV2"
"harry0703/MoneyPrinterTurbo" -> "2noise/ChatTTS" ["e"=1]
"harry0703/MoneyPrinterTurbo" -> "RVC-Boss/GPT-SoVITS" ["e"=1]
"harry0703/MoneyPrinterTurbo" -> "bleedline/aimoneyhunter" ["e"=1]
"harry0703/MoneyPrinterTurbo" -> "lobehub/lobe-chat"
"harry0703/MoneyPrinterTurbo" -> "NanmiCoder/MediaCrawler" ["e"=1]
"harry0703/MoneyPrinterTurbo" -> "Huanshere/VideoLingo"
"harry0703/MoneyPrinterTurbo" -> "NaiboWang/EasySpider" ["e"=1]
"harry0703/MoneyPrinterTurbo" -> "hpcaitech/Open-Sora" ["e"=1]
"harry0703/MoneyPrinterTurbo" -> "FujiwaraChoki/MoneyPrinter"
"harry0703/MoneyPrinterTurbo" -> "songquanpeng/one-api" ["e"=1]
"harry0703/MoneyPrinterTurbo" -> "zhayujie/chatgpt-on-wechat" ["e"=1]
"harry0703/MoneyPrinterTurbo" -> "jianchang512/pyvideotrans" ["e"=1]
"harry0703/MoneyPrinterTurbo" -> "labring/FastGPT"
"harry0703/MoneyPrinterTurbo" -> "langgenius/dify"
"All-Hands-AI/OpenHands" -> "stitionai/devika"
"All-Hands-AI/OpenHands" -> "cline/cline"
"All-Hands-AI/OpenHands" -> "FoundationAgents/MetaGPT"
"All-Hands-AI/OpenHands" -> "crewAIInc/crewAI"
"All-Hands-AI/OpenHands" -> "browser-use/browser-use"
"All-Hands-AI/OpenHands" -> "microsoft/autogen"
"All-Hands-AI/OpenHands" -> "OpenInterpreter/open-interpreter"
"All-Hands-AI/OpenHands" -> "SWE-agent/SWE-agent"
"All-Hands-AI/OpenHands" -> "Aider-AI/aider"
"All-Hands-AI/OpenHands" -> "mendableai/firecrawl"
"All-Hands-AI/OpenHands" -> "unclecode/crawl4ai"
"All-Hands-AI/OpenHands" -> "agno-agi/agno"
"All-Hands-AI/OpenHands" -> "Pythagora-io/gpt-pilot"
"All-Hands-AI/OpenHands" -> "stanford-oval/storm"
"All-Hands-AI/OpenHands" -> "open-webui/open-webui"
"wandb/openui" -> "All-Hands-AI/OpenHands"
"wandb/openui" -> "ScrapeGraphAI/Scrapegraph-ai"
"wandb/openui" -> "agno-agi/agno"
"wandb/openui" -> "ItzCrazyKns/Perplexica"
"wandb/openui" -> "Pythagora-io/gpt-pilot"
"wandb/openui" -> "stitionai/devika"
"wandb/openui" -> "mendableai/firecrawl"
"wandb/openui" -> "crewAIInc/crewAI"
"wandb/openui" -> "myshell-ai/OpenVoice" ["e"=1]
"wandb/openui" -> "abi/screenshot-to-code"
"wandb/openui" -> "SWE-agent/SWE-agent"
"wandb/openui" -> "assafelovic/gpt-researcher"
"wandb/openui" -> "danielmiessler/fabric"
"wandb/openui" -> "FlowiseAI/Flowise"
"wandb/openui" -> "plandex-ai/plandex"
"stitionai/devika" -> "All-Hands-AI/OpenHands"
"stitionai/devika" -> "SWE-agent/SWE-agent"
"stitionai/devika" -> "Pythagora-io/gpt-pilot"
"stitionai/devika" -> "crewAIInc/crewAI"
"stitionai/devika" -> "OpenInterpreter/open-interpreter"
"stitionai/devika" -> "wandb/openui"
"stitionai/devika" -> "Aider-AI/aider"
"stitionai/devika" -> "ItzCrazyKns/Perplexica"
"stitionai/devika" -> "OpenInterpreter/01"
"stitionai/devika" -> "agno-agi/agno"
"stitionai/devika" -> "plandex-ai/plandex"
"stitionai/devika" -> "microsoft/autogen"
"stitionai/devika" -> "danielmiessler/fabric"
"stitionai/devika" -> "e2b-dev/awesome-ai-agents"
"stitionai/devika" -> "FoundationAgents/MetaGPT"
"mshumer/gpt-investor" -> "mshumer/gpt-prompt-engineer"
"mshumer/gpt-investor" -> "stitionai/devika"
"mshumer/gpt-investor" -> "mshumer/ai-journalist"
"mshumer/gpt-investor" -> "OpenInterpreter/01"
"mshumer/gpt-investor" -> "mshumer/gpt-author" ["e"=1]
"mshumer/gpt-investor" -> "mshumer/ai-researcher"
"mshumer/gpt-investor" -> "developersdigest/llm-answer-engine"
"mshumer/gpt-investor" -> "Doriandarko/maestro"
"mshumer/gpt-investor" -> "semanser/codel"
"mshumer/gpt-investor" -> "mshumer/gpt-llm-trainer" ["e"=1]
"mshumer/gpt-investor" -> "lavague-ai/LaVague"
"mshumer/gpt-investor" -> "SWE-agent/SWE-agent"
"mshumer/gpt-investor" -> "entropy-research/Devon"
"mshumer/gpt-investor" -> "jasonppy/VoiceCraft" ["e"=1]
"mshumer/gpt-investor" -> "BCG-X-Official/agentkit"
"stanford-oval/storm" -> "unclecode/crawl4ai"
"stanford-oval/storm" -> "assafelovic/gpt-researcher"
"stanford-oval/storm" -> "khoj-ai/khoj"
"stanford-oval/storm" -> "mendableai/firecrawl"
"stanford-oval/storm" -> "Cinnamon/kotaemon"
"stanford-oval/storm" -> "agno-agi/agno"
"stanford-oval/storm" -> "ItzCrazyKns/Perplexica"
"stanford-oval/storm" -> "All-Hands-AI/OpenHands"
"stanford-oval/storm" -> "mem0ai/mem0"
"stanford-oval/storm" -> "docling-project/docling"
"stanford-oval/storm" -> "crewAIInc/crewAI"
"stanford-oval/storm" -> "Shubhamsaboo/awesome-llm-apps"
"stanford-oval/storm" -> "cline/cline"
"stanford-oval/storm" -> "browser-use/browser-use"
"stanford-oval/storm" -> "Mintplex-Labs/anything-llm"
"vercel-labs/gemini-chatbot" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"vercel-labs/gemini-chatbot" -> "vercel-labs/ai-sdk-preview-rsc-genui"
"vercel-labs/gemini-chatbot" -> "miurla/morphic"
"vercel-labs/gemini-chatbot" -> "langchain-ai/langchain-nextjs-template"
"vercel-labs/gemini-chatbot" -> "vercel-labs/ai-sdk-preview-rag"
"vercel-labs/gemini-chatbot" -> "vercel/ai-sdk-rag-starter"
"vercel-labs/gemini-chatbot" -> "vercel-labs/ai-sdk-preview-roundtrips"
"vercel-labs/gemini-chatbot" -> "vercel-labs/ai-sdk-preview-multi-steps"
"vercel-labs/gemini-chatbot" -> "openai/openai-assistants-quickstart"
"vercel-labs/gemini-chatbot" -> "vercel-labs/ai-sdk-preview-attachments"
"vercel-labs/gemini-chatbot" -> "vercel-labs/natural-language-postgres"
"vercel-labs/gemini-chatbot" -> "d-ivashchuk/cascade" ["e"=1]
"vercel-labs/gemini-chatbot" -> "vercel-labs/ai-sdk-preview-pdf-support"
"vercel-labs/gemini-chatbot" -> "vercel-labs/semantic-image-search"
"vercel-labs/gemini-chatbot" -> "vercel-labs/ai-sdk-reasoning-starter"
"nashsu/FreeAskInternet" -> "missuo/FreeGPT35" ["e"=1]
"nashsu/FreeAskInternet" -> "miurla/morphic"
"nashsu/FreeAskInternet" -> "LLM-Red-Team/kimi-free-api" ["e"=1]
"nashsu/FreeAskInternet" -> "PKU-YuanGroup/Open-Sora-Plan" ["e"=1]
"nashsu/FreeAskInternet" -> "aurora-develop/aurora" ["e"=1]
"nashsu/FreeAskInternet" -> "vvbbnn00/WARP-Clash-API" ["e"=1]
"nashsu/FreeAskInternet" -> "PawanOsman/ChatGPT" ["e"=1]
"nashsu/FreeAskInternet" -> "developersdigest/llm-answer-engine"
"nashsu/FreeAskInternet" -> "zhuima/awesome-cloudflare" ["e"=1]
"nashsu/FreeAskInternet" -> "plandex-ai/plandex"
"nashsu/FreeAskInternet" -> "1Panel-dev/MaxKB"
"nashsu/FreeAskInternet" -> "deanxv/coze-discord-proxy" ["e"=1]
"nashsu/FreeAskInternet" -> "netease-youdao/QAnything"
"nashsu/FreeAskInternet" -> "jina-ai/reader"
"nashsu/FreeAskInternet" -> "songquanpeng/one-api" ["e"=1]
"miurla/morphic" -> "developersdigest/llm-answer-engine"
"miurla/morphic" -> "ItzCrazyKns/Perplexica"
"miurla/morphic" -> "rashadphz/farfalle"
"miurla/morphic" -> "nashsu/FreeAskInternet"
"miurla/morphic" -> "zaidmukaddam/scira"
"miurla/morphic" -> "midday-ai/midday" ["e"=1]
"miurla/morphic" -> "vercel/ai-chatbot"
"miurla/morphic" -> "jina-ai/reader"
"miurla/morphic" -> "e2b-dev/fragments"
"miurla/morphic" -> "nilsherzig/LLocalSearch"
"miurla/morphic" -> "supermemoryai/supermemory"
"miurla/morphic" -> "Doriandarko/maestro"
"miurla/morphic" -> "assafelovic/gpt-researcher"
"miurla/morphic" -> "InternLM/MindSearch"
"miurla/morphic" -> "leptonai/search_with_lepton"
"jina-ai/reader" -> "mendableai/firecrawl"
"jina-ai/reader" -> "ScrapeGraphAI/Scrapegraph-ai"
"jina-ai/reader" -> "miurla/morphic"
"jina-ai/reader" -> "developersdigest/llm-answer-engine"
"jina-ai/reader" -> "nashsu/FreeAskInternet"
"jina-ai/reader" -> "VikParuchuri/marker"
"jina-ai/reader" -> "BerriAI/litellm"
"jina-ai/reader" -> "adithya-s-k/omniparse"
"jina-ai/reader" -> "mem0ai/mem0"
"jina-ai/reader" -> "ItzCrazyKns/Perplexica"
"jina-ai/reader" -> "stanford-oval/storm"
"jina-ai/reader" -> "jina-ai/node-DeepResearch"
"jina-ai/reader" -> "VikParuchuri/surya"
"jina-ai/reader" -> "InternLM/MindSearch"
"jina-ai/reader" -> "Unstructured-IO/unstructured"
"Shubhamsaboo/awesome-llm-apps" -> "agno-agi/agno"
"Shubhamsaboo/awesome-llm-apps" -> "unclecode/crawl4ai"
"Shubhamsaboo/awesome-llm-apps" -> "browser-use/browser-use"
"Shubhamsaboo/awesome-llm-apps" -> "punkpeye/awesome-mcp-servers"
"Shubhamsaboo/awesome-llm-apps" -> "mendableai/firecrawl"
"Shubhamsaboo/awesome-llm-apps" -> "NirDiamant/GenAI_Agents"
"Shubhamsaboo/awesome-llm-apps" -> "patchy631/ai-engineering-hub"
"Shubhamsaboo/awesome-llm-apps" -> "virattt/ai-hedge-fund"
"Shubhamsaboo/awesome-llm-apps" -> "khoj-ai/khoj"
"Shubhamsaboo/awesome-llm-apps" -> "microsoft/ai-agents-for-beginners"
"Shubhamsaboo/awesome-llm-apps" -> "docling-project/docling"
"Shubhamsaboo/awesome-llm-apps" -> "All-Hands-AI/OpenHands"
"Shubhamsaboo/awesome-llm-apps" -> "stanford-oval/storm"
"Shubhamsaboo/awesome-llm-apps" -> "microsoft/markitdown"
"Shubhamsaboo/awesome-llm-apps" -> "PatrickJS/awesome-cursorrules"
"Nutlope/explorecareers" -> "Nutlope/pdftochat"
"Nutlope/explorecareers" -> "Nutlope/aiangels"
"Nutlope/explorecareers" -> "Nutlope/turboseek"
"Nutlope/explorecareers" -> "Nutlope/description-generator"
"Nutlope/explorecareers" -> "Nutlope/blinkshot"
"Nutlope/explorecareers" -> "Nutlope/llamatutor"
"disler/multi-agent-postgres-data-analytics" -> "MerlinKodo/clash-rev" ["e"=1]
"disler/multi-agent-postgres-data-analytics" -> "disler/poc-realtime-ai-assistant"
"disler/multi-agent-postgres-data-analytics" -> "apache/incubator-xtable" ["e"=1]
"disler/multi-agent-postgres-data-analytics" -> "taranjeet/awesome-gpts" ["e"=1]
"disler/multi-agent-postgres-data-analytics" -> "daveshap/OpenAI_Agent_Swarm"
"disler/multi-agent-postgres-data-analytics" -> "Anil-matcha/Awesome-GPT-Store" ["e"=1]
"disler/multi-agent-postgres-data-analytics" -> "disler/indydevtools"
"disler/multi-agent-postgres-data-analytics" -> "disler/marimo-prompt-library"
"disler/multi-agent-postgres-data-analytics" -> "luosiallen/latent-consistency-model" ["e"=1]
"disler/multi-agent-postgres-data-analytics" -> "disler/personal-ai-starter-pack"
"disler/multi-agent-postgres-data-analytics" -> "disler/benchy"
"disler/multi-agent-postgres-data-analytics" -> "atomicals/atomicals-js" ["e"=1]
"disler/multi-agent-postgres-data-analytics" -> "disler/single-file-agents"
"disler/multi-agent-postgres-data-analytics" -> "disler/llm-prompt-testing-quick-start"
"disler/multi-agent-postgres-data-analytics" -> "loro-dev/loro" ["e"=1]
"n8n-io/self-hosted-ai-starter-kit" -> "coleam00/ai-agents-masterclass"
"n8n-io/self-hosted-ai-starter-kit" -> "stackblitz-labs/bolt.diy"
"n8n-io/self-hosted-ai-starter-kit" -> "agno-agi/agno"
"n8n-io/self-hosted-ai-starter-kit" -> "Shubhamsaboo/awesome-llm-apps"
"n8n-io/self-hosted-ai-starter-kit" -> "unclecode/crawl4ai"
"n8n-io/self-hosted-ai-starter-kit" -> "Cinnamon/kotaemon"
"n8n-io/self-hosted-ai-starter-kit" -> "NirDiamant/GenAI_Agents"
"n8n-io/self-hosted-ai-starter-kit" -> "mendableai/firecrawl"
"n8n-io/self-hosted-ai-starter-kit" -> "activepieces/activepieces" ["e"=1]
"n8n-io/self-hosted-ai-starter-kit" -> "Zipstack/unstract"
"n8n-io/self-hosted-ai-starter-kit" -> "patchy631/ai-engineering-hub"
"n8n-io/self-hosted-ai-starter-kit" -> "stanford-oval/storm"
"n8n-io/self-hosted-ai-starter-kit" -> "block/goose"
"n8n-io/self-hosted-ai-starter-kit" -> "CopilotKit/CopilotKit" ["e"=1]
"n8n-io/self-hosted-ai-starter-kit" -> "exo-explore/exo"
"open-webui/open-webui" -> "ollama/ollama"
"open-webui/open-webui" -> "langgenius/dify"
"open-webui/open-webui" -> "Mintplex-Labs/anything-llm"
"open-webui/open-webui" -> "lobehub/lobe-chat"
"open-webui/open-webui" -> "comfyanonymous/ComfyUI" ["e"=1]
"open-webui/open-webui" -> "infiniflow/ragflow"
"open-webui/open-webui" -> "ggml-org/llama.cpp"
"open-webui/open-webui" -> "browser-use/browser-use"
"open-webui/open-webui" -> "langchain-ai/langchain"
"open-webui/open-webui" -> "n8n-io/n8n"
"open-webui/open-webui" -> "cline/cline"
"open-webui/open-webui" -> "unslothai/unsloth"
"open-webui/open-webui" -> "All-Hands-AI/OpenHands"
"open-webui/open-webui" -> "AUTOMATIC1111/stable-diffusion-webui" ["e"=1]
"open-webui/open-webui" -> "vllm-project/vllm"
"deepseek-ai/DeepSeek-Coder" -> "deepseek-ai/DeepSeek-LLM" ["e"=1]
"deepseek-ai/DeepSeek-Coder" -> "deepseek-ai/DeepSeek-Coder-V2" ["e"=1]
"deepseek-ai/DeepSeek-Coder" -> "deepseek-ai/awesome-deepseek-integration"
"deepseek-ai/DeepSeek-Coder" -> "deepseek-ai/DeepSeek-R1"
"deepseek-ai/DeepSeek-Coder" -> "deepseek-ai/DeepSeek-V3"
"deepseek-ai/DeepSeek-Coder" -> "stanford-oval/storm"
"deepseek-ai/DeepSeek-Coder" -> "cline/cline"
"deepseek-ai/DeepSeek-Coder" -> "deepseek-ai/Janus"
"deepseek-ai/DeepSeek-Coder" -> "unslothai/unsloth"
"deepseek-ai/DeepSeek-Coder" -> "All-Hands-AI/OpenHands"
"deepseek-ai/DeepSeek-Coder" -> "khoj-ai/khoj"
"deepseek-ai/DeepSeek-Coder" -> "deepseek-ai/DeepSeek-VL" ["e"=1]
"deepseek-ai/DeepSeek-Coder" -> "Mintplex-Labs/anything-llm"
"deepseek-ai/DeepSeek-Coder" -> "TabbyML/tabby"
"deepseek-ai/DeepSeek-Coder" -> "bytedance/monolith"
"micr0-dev/lexido" -> "micr0-dev/micr0fetch"
"unclecode/crawl4ai" -> "mendableai/firecrawl"
"unclecode/crawl4ai" -> "browser-use/browser-use"
"unclecode/crawl4ai" -> "agno-agi/agno"
"unclecode/crawl4ai" -> "stanford-oval/storm"
"unclecode/crawl4ai" -> "Shubhamsaboo/awesome-llm-apps"
"unclecode/crawl4ai" -> "ScrapeGraphAI/Scrapegraph-ai"
"unclecode/crawl4ai" -> "All-Hands-AI/OpenHands"
"unclecode/crawl4ai" -> "docling-project/docling"
"unclecode/crawl4ai" -> "cline/cline"
"unclecode/crawl4ai" -> "punkpeye/awesome-mcp-servers"
"unclecode/crawl4ai" -> "khoj-ai/khoj"
"unclecode/crawl4ai" -> "microsoft/markitdown"
"unclecode/crawl4ai" -> "crewAIInc/crewAI"
"unclecode/crawl4ai" -> "Cinnamon/kotaemon"
"unclecode/crawl4ai" -> "mem0ai/mem0"
"ml-explore/mlx" -> "ml-explore/mlx-examples" ["e"=1]
"ml-explore/mlx" -> "apple/ml-ferret" ["e"=1]
"ml-explore/mlx" -> "ggml-org/llama.cpp"
"ml-explore/mlx" -> "apple/ml-stable-diffusion" ["e"=1]
"ml-explore/mlx" -> "karpathy/llm.c"
"ml-explore/mlx" -> "vllm-project/vllm"
"ml-explore/mlx" -> "exo-explore/exo"
"ml-explore/mlx" -> "stanfordnlp/dspy"
"ml-explore/mlx" -> "unslothai/unsloth"
"ml-explore/mlx" -> "tinygrad/tinygrad"
"ml-explore/mlx" -> "triton-lang/triton" ["e"=1]
"ml-explore/mlx" -> "karpathy/llama2.c"
"ml-explore/mlx" -> "ggml-org/ggml"
"ml-explore/mlx" -> "jax-ml/jax" ["e"=1]
"ml-explore/mlx" -> "mlc-ai/mlc-llm"
"xai-org/grok-1" -> "hpcaitech/Open-Sora" ["e"=1]
"xai-org/grok-1" -> "meta-llama/llama"
"xai-org/grok-1" -> "meta-llama/llama3"
"xai-org/grok-1" -> "ollama/ollama"
"xai-org/grok-1" -> "langchain-ai/langchain"
"xai-org/grok-1" -> "ggml-org/llama.cpp"
"xai-org/grok-1" -> "vllm-project/vllm"
"xai-org/grok-1" -> "deepseek-ai/DeepSeek-R1"
"xai-org/grok-1" -> "All-Hands-AI/OpenHands"
"xai-org/grok-1" -> "langgenius/dify"
"xai-org/grok-1" -> "Significant-Gravitas/AutoGPT"
"xai-org/grok-1" -> "hiyouga/LLaMA-Factory"
"xai-org/grok-1" -> "karpathy/llm.c"
"xai-org/grok-1" -> "deepseek-ai/DeepSeek-V3"
"xai-org/grok-1" -> "FoundationAgents/MetaGPT"
"OthersideAI/self-operating-computer" -> "letta-ai/letta"
"OthersideAI/self-operating-computer" -> "crewAIInc/crewAI"
"OthersideAI/self-operating-computer" -> "microsoft/TaskWeaver"
"OthersideAI/self-operating-computer" -> "OpenInterpreter/open-interpreter"
"OthersideAI/self-operating-computer" -> "assafelovic/gpt-researcher"
"OthersideAI/self-operating-computer" -> "SWE-agent/SWE-agent"
"OthersideAI/self-operating-computer" -> "microsoft/autogen"
"OthersideAI/self-operating-computer" -> "Skyvern-AI/skyvern"
"OthersideAI/self-operating-computer" -> "Pythagora-io/gpt-pilot"
"OthersideAI/self-operating-computer" -> "OpenBMB/ChatDev"
"OthersideAI/self-operating-computer" -> "OpenInterpreter/01"
"OthersideAI/self-operating-computer" -> "TransformerOptimus/SuperAGI" ["e"=1]
"OthersideAI/self-operating-computer" -> "stitionai/devika"
"OthersideAI/self-operating-computer" -> "e2b-dev/awesome-ai-agents"
"OthersideAI/self-operating-computer" -> "agno-agi/agno"
"hrishioa/lumentis" -> "hrishioa/wishful-search"
"hrishioa/lumentis" -> "Doriandarko/maestro"
"hrishioa/lumentis" -> "anysphere/priompt"
"hrishioa/lumentis" -> "mshumer/ai-researcher"
"hrishioa/lumentis" -> "udecode/dotai"
"hrishioa/lumentis" -> "mshumer/ai-journalist"
"hrishioa/lumentis" -> "AbanteAI/rawdog"
"hrishioa/lumentis" -> "simonw/files-to-prompt"
"hrishioa/lumentis" -> "mshumer/gpt-prompt-engineer"
"hrishioa/lumentis" -> "databricks/lilac" ["e"=1]
"hrishioa/lumentis" -> "AnswerDotAI/RAGatouille"
"hrishioa/lumentis" -> "cohere-ai/cohere-toolkit"
"hrishioa/lumentis" -> "virattt/financial-agent-ui"
"hrishioa/lumentis" -> "entropy-research/Devon"
"hrishioa/lumentis" -> "AutoCodeRoverSG/auto-code-rover"
"opendatalab/MinerU" -> "VikParuchuri/marker"
"opendatalab/MinerU" -> "infiniflow/ragflow"
"opendatalab/MinerU" -> "opendatalab/PDF-Extract-Kit"
"opendatalab/MinerU" -> "Byaidu/PDFMathTranslate"
"opendatalab/MinerU" -> "langgenius/dify"
"opendatalab/MinerU" -> "microsoft/graphrag"
"opendatalab/MinerU" -> "microsoft/markitdown"
"opendatalab/MinerU" -> "mendableai/firecrawl"
"opendatalab/MinerU" -> "docling-project/docling"
"opendatalab/MinerU" -> "hiyouga/LLaMA-Factory"
"opendatalab/MinerU" -> "unclecode/crawl4ai"
"opendatalab/MinerU" -> "labring/FastGPT"
"opendatalab/MinerU" -> "Stirling-Tools/Stirling-PDF" ["e"=1]
"opendatalab/MinerU" -> "2noise/ChatTTS" ["e"=1]
"opendatalab/MinerU" -> "VikParuchuri/surya"
"letta-ai/letta" -> "microsoft/autogen"
"letta-ai/letta" -> "mem0ai/mem0"
"letta-ai/letta" -> "crewAIInc/crewAI"
"letta-ai/letta" -> "agno-agi/agno"
"letta-ai/letta" -> "stanfordnlp/dspy"
"letta-ai/letta" -> "BerriAI/litellm"
"letta-ai/letta" -> "assafelovic/gpt-researcher"
"letta-ai/letta" -> "run-llama/llama_index"
"letta-ai/letta" -> "ItzCrazyKns/Perplexica"
"letta-ai/letta" -> "Aider-AI/aider"
"letta-ai/letta" -> "OpenBMB/ChatDev"
"letta-ai/letta" -> "567-labs/instructor"
"letta-ai/letta" -> "ShishirPatil/gorilla" ["e"=1]
"letta-ai/letta" -> "FoundationAgents/MetaGPT"
"letta-ai/letta" -> "guidance-ai/guidance"
"urchade/GLiNER" -> "huggingface/setfit" ["e"=1]
"urchade/GLiNER" -> "AnswerDotAI/RAGatouille"
"urchade/GLiNER" -> "jackboyla/GLiREL"
"urchade/GLiNER" -> "theirstory/gliner-spacy"
"urchade/GLiNER" -> "AnswerDotAI/rerankers"
"urchade/GLiNER" -> "SapienzaNLP/relik"
"urchade/GLiNER" -> "tomaarsen/SpanMarkerNER"
"urchade/GLiNER" -> "argilla-io/distilabel" ["e"=1]
"urchade/GLiNER" -> "stanford-futuredata/ColBERT" ["e"=1]
"urchade/GLiNER" -> "MinishLab/model2vec"
"urchade/GLiNER" -> "explosion/spacy-llm"
"urchade/GLiNER" -> "stanfordnlp/pyreft" ["e"=1]
"urchade/GLiNER" -> "xhluca/bm25s"
"urchade/GLiNER" -> "MinishLab/semhash"
"urchade/GLiNER" -> "argilla-io/argilla" ["e"=1]
"microsoft/promptbase" -> "microsoft/LLMLingua"
"microsoft/promptbase" -> "guidance-ai/guidance"
"microsoft/promptbase" -> "mshumer/gpt-prompt-engineer"
"microsoft/promptbase" -> "microsoft/promptflow"
"microsoft/promptbase" -> "stanfordnlp/dspy"
"microsoft/promptbase" -> "dottxt-ai/outlines"
"microsoft/promptbase" -> "567-labs/instructor"
"microsoft/promptbase" -> "brexhq/prompt-engineering" ["e"=1]
"microsoft/promptbase" -> "microsoft/TaskWeaver"
"microsoft/promptbase" -> "microsoft/promptbench"
"microsoft/promptbase" -> "LouisShark/chatgpt_system_prompt"
"microsoft/promptbase" -> "spdustin/ChatGPT-AutoExpert"
"microsoft/promptbase" -> "langchain-ai/opengpts"
"microsoft/promptbase" -> "explodinggradients/ragas"
"microsoft/promptbase" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"FullStackRetrieval-com/RetrievalTutorials" -> "langchain-ai/rag-from-scratch"
"FullStackRetrieval-com/RetrievalTutorials" -> "parthsarthi03/raptor"
"FullStackRetrieval-com/RetrievalTutorials" -> "illuin-tech/colpali"
"FullStackRetrieval-com/RetrievalTutorials" -> "explodinggradients/ragas"
"FullStackRetrieval-com/RetrievalTutorials" -> "nlmatics/llmsherpa"
"FullStackRetrieval-com/RetrievalTutorials" -> "brandonstarxel/chunking_evaluation"
"FullStackRetrieval-com/RetrievalTutorials" -> "tomasonjo/blogs" ["e"=1]
"FullStackRetrieval-com/RetrievalTutorials" -> "NovaSearch-Team/RAG-Retrieval"
"FullStackRetrieval-com/RetrievalTutorials" -> "run-llama/llama_cloud_services"
"FullStackRetrieval-com/RetrievalTutorials" -> "AnswerDotAI/RAGatouille"
"FullStackRetrieval-com/RetrievalTutorials" -> "Tongji-KGLLM/RAG-Survey"
"FullStackRetrieval-com/RetrievalTutorials" -> "D-Star-AI/dsRAG"
"FullStackRetrieval-com/RetrievalTutorials" -> "gkamradt/ChunkViz" ["e"=1]
"FullStackRetrieval-com/RetrievalTutorials" -> "samwit/langchain-tutorials" ["e"=1]
"FullStackRetrieval-com/RetrievalTutorials" -> "NirDiamant/RAG_Techniques"
"danielmiessler/fabric" -> "crewAIInc/crewAI"
"danielmiessler/fabric" -> "agno-agi/agno"
"danielmiessler/fabric" -> "All-Hands-AI/OpenHands"
"danielmiessler/fabric" -> "Aider-AI/aider"
"danielmiessler/fabric" -> "mendableai/firecrawl"
"danielmiessler/fabric" -> "Mintplex-Labs/anything-llm"
"danielmiessler/fabric" -> "ItzCrazyKns/Perplexica"
"danielmiessler/fabric" -> "khoj-ai/khoj"
"danielmiessler/fabric" -> "stanford-oval/storm"
"danielmiessler/fabric" -> "Pythagora-io/gpt-pilot"
"danielmiessler/fabric" -> "OpenInterpreter/open-interpreter"
"danielmiessler/fabric" -> "assafelovic/gpt-researcher"
"danielmiessler/fabric" -> "unclecode/crawl4ai"
"danielmiessler/fabric" -> "microsoft/autogen"
"danielmiessler/fabric" -> "mem0ai/mem0"
"nlmatics/nlm-ingestor" -> "nlmatics/llmsherpa"
"nlmatics/nlm-ingestor" -> "Filimoa/open-parse"
"nlmatics/nlm-ingestor" -> "D-Star-AI/dsRAG"
"nlmatics/nlm-ingestor" -> "AnswerDotAI/RAGatouille"
"nlmatics/nlm-ingestor" -> "run-llama/llama_cloud_services"
"nlmatics/nlm-ingestor" -> "yobix-ai/extractous"
"nlmatics/nlm-ingestor" -> "JSv4/OpenContracts"
"nlmatics/nlm-ingestor" -> "deepdoctection/deepdoctection" ["e"=1]
"nlmatics/nlm-ingestor" -> "microsoft/table-transformer" ["e"=1]
"nlmatics/nlm-ingestor" -> "Unstructured-IO/unstructured"
"nlmatics/nlm-ingestor" -> "KhoomeiK/LlamaGym"
"nlmatics/nlm-ingestor" -> "yigitkonur/swift-ocr-llm-powered-pdf-to-markdown"
"nlmatics/nlm-ingestor" -> "1rgs/jsonformer"
"nlmatics/nlm-ingestor" -> "PrithivirajDamodaran/FlashRank"
"nlmatics/nlm-ingestor" -> "pymupdf/RAG"
"run-llama/llama_cloud_services" -> "Unstructured-IO/unstructured"
"run-llama/llama_cloud_services" -> "run-llama/llama_deploy"
"run-llama/llama_cloud_services" -> "run-llama/create-llama"
"run-llama/llama_cloud_services" -> "ragapp/ragapp"
"run-llama/llama_cloud_services" -> "nlmatics/llmsherpa"
"run-llama/llama_cloud_services" -> "explodinggradients/ragas"
"run-llama/llama_cloud_services" -> "567-labs/instructor"
"run-llama/llama_cloud_services" -> "weaviate/Verba"
"run-llama/llama_cloud_services" -> "lm-sys/RouteLLM"
"run-llama/llama_cloud_services" -> "langchain-ai/langgraph"
"run-llama/llama_cloud_services" -> "NirDiamant/RAG_Techniques"
"run-llama/llama_cloud_services" -> "Filimoa/open-parse"
"run-llama/llama_cloud_services" -> "QuivrHQ/MegaParse"
"run-llama/llama_cloud_services" -> "stanfordnlp/dspy"
"run-llama/llama_cloud_services" -> "katanaml/sparrow"
"microsoft/graphrag" -> "infiniflow/ragflow"
"microsoft/graphrag" -> "microsoft/autogen"
"microsoft/graphrag" -> "mem0ai/mem0"
"microsoft/graphrag" -> "HKUDS/LightRAG" ["e"=1]
"microsoft/graphrag" -> "run-llama/llama_index"
"microsoft/graphrag" -> "vllm-project/vllm"
"microsoft/graphrag" -> "hiyouga/LLaMA-Factory"
"microsoft/graphrag" -> "stanfordnlp/dspy"
"microsoft/graphrag" -> "Cinnamon/kotaemon"
"microsoft/graphrag" -> "unslothai/unsloth"
"microsoft/graphrag" -> "opendatalab/MinerU"
"microsoft/graphrag" -> "chatchat-space/Langchain-Chatchat" ["e"=1]
"microsoft/graphrag" -> "openai/swarm"
"microsoft/graphrag" -> "crewAIInc/crewAI"
"microsoft/graphrag" -> "langgenius/dify"
"jackboyla/GLiREL" -> "Knowledgator/GLiClass"
"jackboyla/GLiREL" -> "SapienzaNLP/relik"
"jackboyla/GLiREL" -> "theirstory/gliner-spacy"
"jackboyla/GLiREL" -> "tomaarsen/SpanMarkerNER"
"jackboyla/GLiREL" -> "PrithivirajDamodaran/Route0x"
"jackboyla/GLiREL" -> "urchade/GraphER"
"jackboyla/GLiREL" -> "henrikalbihn/gliner-as-a-service"
"RUC-NLPIR/FlashRAG" -> "AkariAsai/self-rag"
"RUC-NLPIR/FlashRAG" -> "hymie122/RAG-Survey"
"RUC-NLPIR/FlashRAG" -> "gusye1234/nano-graphrag"
"RUC-NLPIR/FlashRAG" -> "OSU-NLP-Group/HippoRAG"
"RUC-NLPIR/FlashRAG" -> "NovaSearch-Team/RAG-Retrieval"
"RUC-NLPIR/FlashRAG" -> "Tongji-KGLLM/RAG-Survey"
"RUC-NLPIR/FlashRAG" -> "sunnynexus/Search-o1" ["e"=1]
"RUC-NLPIR/FlashRAG" -> "Agent-RL/ReCall" ["e"=1]
"RUC-NLPIR/FlashRAG" -> "FlagOpen/FlagEmbedding" ["e"=1]
"RUC-NLPIR/FlashRAG" -> "gomate-community/TrustRAG" ["e"=1]
"RUC-NLPIR/FlashRAG" -> "qhjqhj00/MemoRAG"
"RUC-NLPIR/FlashRAG" -> "truefoundry/cognita"
"RUC-NLPIR/FlashRAG" -> "PeterGriffinJin/Search-R1" ["e"=1]
"RUC-NLPIR/FlashRAG" -> "RUC-NLPIR/LLM4IR-Survey" ["e"=1]
"RUC-NLPIR/FlashRAG" -> "explodinggradients/ragas"
"meta-llama/llama3" -> "meta-llama/llama"
"meta-llama/llama3" -> "meta-llama/llama-cookbook"
"meta-llama/llama3" -> "hiyouga/LLaMA-Factory"
"meta-llama/llama3" -> "vllm-project/vllm"
"meta-llama/llama3" -> "QwenLM/Qwen3" ["e"=1]
"meta-llama/llama3" -> "haotian-liu/LLaVA" ["e"=1]
"meta-llama/llama3" -> "xai-org/grok-1"
"meta-llama/llama3" -> "hpcaitech/Open-Sora" ["e"=1]
"meta-llama/llama3" -> "Dao-AILab/flash-attention" ["e"=1]
"meta-llama/llama3" -> "karpathy/llm.c"
"meta-llama/llama3" -> "unslothai/unsloth"
"meta-llama/llama3" -> "ggml-org/llama.cpp"
"meta-llama/llama3" -> "ollama/ollama"
"meta-llama/llama3" -> "huggingface/peft"
"meta-llama/llama3" -> "deepspeedai/DeepSpeed"
"elder-plinius/L1B3RT4S" -> "elder-plinius/CL4R1T4S"
"elder-plinius/L1B3RT4S" -> "NeoVertex1/SuperPrompt"
"elder-plinius/L1B3RT4S" -> "Doriandarko/claude-engineer"
"elder-plinius/L1B3RT4S" -> "0xeb/TheBigPromptLibrary" ["e"=1]
"elder-plinius/L1B3RT4S" -> "verazuo/jailbreak_llms" ["e"=1]
"elder-plinius/L1B3RT4S" -> "anthropics/courses"
"elder-plinius/L1B3RT4S" -> "yamadashy/repomix"
"elder-plinius/L1B3RT4S" -> "anthropics/anthropic-cookbook"
"elder-plinius/L1B3RT4S" -> "agno-agi/agno"
"elder-plinius/L1B3RT4S" -> "CyberAlbSecOP/Awesome_GPT_Super_Prompting" ["e"=1]
"elder-plinius/L1B3RT4S" -> "dzhng/deep-research"
"elder-plinius/L1B3RT4S" -> "mendableai/firecrawl"
"elder-plinius/L1B3RT4S" -> "x1xhlol/system-prompts-and-models-of-ai-tools"
"elder-plinius/L1B3RT4S" -> "mshumer/gpt-prompt-engineer"
"elder-plinius/L1B3RT4S" -> "eastlondoner/cursor-tools"
"deepseek-ai/awesome-deepseek-integration" -> "CherryHQ/cherry-studio"
"deepseek-ai/awesome-deepseek-integration" -> "deepseek-ai/DeepSeek-Coder"
"deepseek-ai/awesome-deepseek-integration" -> "deepseek-ai/DeepSeek-R1"
"deepseek-ai/awesome-deepseek-integration" -> "FoundationAgents/OpenManus"
"deepseek-ai/awesome-deepseek-integration" -> "langgenius/dify"
"deepseek-ai/awesome-deepseek-integration" -> "punkpeye/awesome-mcp-servers"
"deepseek-ai/awesome-deepseek-integration" -> "browser-use/browser-use"
"deepseek-ai/awesome-deepseek-integration" -> "deepseek-ai/DeepSeek-V3"
"deepseek-ai/awesome-deepseek-integration" -> "infiniflow/ragflow"
"deepseek-ai/awesome-deepseek-integration" -> "chatboxai/chatbox" ["e"=1]
"deepseek-ai/awesome-deepseek-integration" -> "opendatalab/MinerU"
"deepseek-ai/awesome-deepseek-integration" -> "mendableai/firecrawl"
"deepseek-ai/awesome-deepseek-integration" -> "Mintplex-Labs/anything-llm"
"deepseek-ai/awesome-deepseek-integration" -> "lobehub/lobe-chat"
"deepseek-ai/awesome-deepseek-integration" -> "microsoft/OmniParser"
"ScrapeGraphAI/Scrapegraph-ai" -> "mendableai/firecrawl"
"ScrapeGraphAI/Scrapegraph-ai" -> "unclecode/crawl4ai"
"ScrapeGraphAI/Scrapegraph-ai" -> "agno-agi/agno"
"ScrapeGraphAI/Scrapegraph-ai" -> "assafelovic/gpt-researcher"
"ScrapeGraphAI/Scrapegraph-ai" -> "ItzCrazyKns/Perplexica"
"ScrapeGraphAI/Scrapegraph-ai" -> "Skyvern-AI/skyvern"
"ScrapeGraphAI/Scrapegraph-ai" -> "crewAIInc/crewAI"
"ScrapeGraphAI/Scrapegraph-ai" -> "stanford-oval/storm"
"ScrapeGraphAI/Scrapegraph-ai" -> "mem0ai/mem0"
"ScrapeGraphAI/Scrapegraph-ai" -> "All-Hands-AI/OpenHands"
"ScrapeGraphAI/Scrapegraph-ai" -> "VikParuchuri/marker"
"ScrapeGraphAI/Scrapegraph-ai" -> "wandb/openui"
"ScrapeGraphAI/Scrapegraph-ai" -> "microsoft/graphrag"
"ScrapeGraphAI/Scrapegraph-ai" -> "Cinnamon/kotaemon"
"ScrapeGraphAI/Scrapegraph-ai" -> "FlowiseAI/Flowise"
"refly-ai/refly" -> "rag-web-ui/rag-web-ui" ["e"=1]
"refly-ai/refly" -> "tianyaxiang/neurapress" ["e"=1]
"refly-ai/refly" -> "OpenAISpace/ai-trend-publish" ["e"=1]
"refly-ai/refly" -> "nanbingxyz/5ire" ["e"=1]
"refly-ai/refly" -> "FellouAI/eko" ["e"=1]
"refly-ai/refly" -> "PySpur-Dev/pyspur"
"refly-ai/refly" -> "karminski/one-small-step" ["e"=1]
"refly-ai/refly" -> "langmanus/langmanus"
"refly-ai/refly" -> "cyfyifanchen/one-person-company" ["e"=1]
"refly-ai/refly" -> "leaperone/MultiPost-Extension" ["e"=1]
"refly-ai/refly" -> "bytedance/flowgram.ai"
"refly-ai/refly" -> "ErlichLiu/DeepClaude"
"refly-ai/refly" -> "bytedance/deer-flow"
"refly-ai/refly" -> "chatmcp/mcp-server-chatsum" ["e"=1]
"refly-ai/refly" -> "jamez-bondos/awesome-gpt4o-images"
"reorproject/reor" -> "ItzCrazyKns/Perplexica"
"reorproject/reor" -> "Skyvern-AI/skyvern"
"reorproject/reor" -> "nilsherzig/LLocalSearch"
"reorproject/reor" -> "ScrapeGraphAI/Scrapegraph-ai"
"reorproject/reor" -> "developersdigest/llm-answer-engine"
"reorproject/reor" -> "agno-agi/agno"
"reorproject/reor" -> "menloresearch/jan"
"reorproject/reor" -> "wandb/openui"
"reorproject/reor" -> "onyx-dot-app/onyx"
"reorproject/reor" -> "miurla/morphic"
"reorproject/reor" -> "letta-ai/letta"
"reorproject/reor" -> "assafelovic/gpt-researcher"
"reorproject/reor" -> "stanford-oval/storm"
"reorproject/reor" -> "khoj-ai/khoj"
"reorproject/reor" -> "nashsu/FreeAskInternet"
"ollama/ollama-python" -> "ollama/ollama-js"
"ollama/ollama-python" -> "abetlen/llama-cpp-python"
"ollama/ollama-python" -> "ollama/ollama"
"ollama/ollama-python" -> "modelcontextprotocol/python-sdk"
"ollama/ollama-python" -> "pydantic/pydantic-ai"
"ollama/ollama-python" -> "BerriAI/litellm"
"ollama/ollama-python" -> "unslothai/unsloth"
"ollama/ollama-python" -> "crewAIInc/crewAI"
"ollama/ollama-python" -> "open-webui/open-webui"
"ollama/ollama-python" -> "vllm-project/vllm"
"ollama/ollama-python" -> "langchain-ai/langgraph"
"ollama/ollama-python" -> "agno-agi/agno"
"ollama/ollama-python" -> "run-llama/llama_index"
"ollama/ollama-python" -> "meta-llama/llama-cookbook"
"ollama/ollama-python" -> "stanfordnlp/dspy"
"simonw/llm-cmd" -> "simonw/llm-jq"
"simonw/llm-cmd" -> "taketwo/llm-ollama"
"simonw/llm-cmd" -> "simonw/llm-claude-3"
"getmaxun/maxun" -> "mendableai/firecrawl"
"getmaxun/maxun" -> "unclecode/crawl4ai"
"getmaxun/maxun" -> "TeamWiseFlow/wiseflow"
"getmaxun/maxun" -> "teableio/teable" ["e"=1]
"getmaxun/maxun" -> "mediar-ai/screenpipe"
"getmaxun/maxun" -> "opendatalab/MinerU"
"getmaxun/maxun" -> "getomni-ai/zerox"
"getmaxun/maxun" -> "Skyvern-AI/skyvern"
"getmaxun/maxun" -> "browser-use/browser-use"
"getmaxun/maxun" -> "Huanshere/VideoLingo"
"getmaxun/maxun" -> "AutomaApp/automa"
"getmaxun/maxun" -> "krillinai/KrillinAI"
"getmaxun/maxun" -> "Cinnamon/kotaemon"
"getmaxun/maxun" -> "web-infra-dev/midscene"
"getmaxun/maxun" -> "agno-agi/agno"
"VikParuchuri/surya" -> "VikParuchuri/marker"
"VikParuchuri/surya" -> "Ucas-HaoranWei/GOT-OCR2.0"
"VikParuchuri/surya" -> "docling-project/docling"
"VikParuchuri/surya" -> "opendatalab/MinerU"
"VikParuchuri/surya" -> "getomni-ai/zerox"
"VikParuchuri/surya" -> "agno-agi/agno"
"VikParuchuri/surya" -> "Cinnamon/kotaemon"
"VikParuchuri/surya" -> "roboflow/supervision"
"VikParuchuri/surya" -> "allenai/olmocr"
"VikParuchuri/surya" -> "ScrapeGraphAI/Scrapegraph-ai"
"VikParuchuri/surya" -> "mendableai/firecrawl"
"VikParuchuri/surya" -> "fishaudio/fish-speech" ["e"=1]
"VikParuchuri/surya" -> "stanford-oval/storm"
"VikParuchuri/surya" -> "unclecode/crawl4ai"
"VikParuchuri/surya" -> "ItzCrazyKns/Perplexica"
"Zipstack/unstract" -> "zaidmukaddam/scira"
"Zipstack/unstract" -> "QuivrHQ/MegaParse"
"Zipstack/unstract" -> "getzep/graphiti"
"Zipstack/unstract" -> "Canner/WrenAI"
"Zipstack/unstract" -> "browserbase/stagehand"
"Zipstack/unstract" -> "MervinPraison/PraisonAI"
"Zipstack/unstract" -> "livekit/agents"
"Zipstack/unstract" -> "stanford-oval/storm"
"Zipstack/unstract" -> "agno-agi/agno"
"Zipstack/unstract" -> "fixie-ai/ultravox"
"Zipstack/unstract" -> "docling-project/docling"
"Zipstack/unstract" -> "Cinnamon/kotaemon"
"Zipstack/unstract" -> "pydantic/pydantic-ai"
"Zipstack/unstract" -> "OpenSPG/KAG"
"Zipstack/unstract" -> "assafelovic/gpt-researcher"
"mendableai/firecrawl" -> "unclecode/crawl4ai"
"mendableai/firecrawl" -> "browser-use/browser-use"
"mendableai/firecrawl" -> "ScrapeGraphAI/Scrapegraph-ai"
"mendableai/firecrawl" -> "agno-agi/agno"
"mendableai/firecrawl" -> "langgenius/dify"
"mendableai/firecrawl" -> "cline/cline"
"mendableai/firecrawl" -> "crewAIInc/crewAI"
"mendableai/firecrawl" -> "Mintplex-Labs/anything-llm"
"mendableai/firecrawl" -> "All-Hands-AI/OpenHands"
"mendableai/firecrawl" -> "mem0ai/mem0"
"mendableai/firecrawl" -> "assafelovic/gpt-researcher"
"mendableai/firecrawl" -> "stanford-oval/storm"
"mendableai/firecrawl" -> "infiniflow/ragflow"
"mendableai/firecrawl" -> "punkpeye/awesome-mcp-servers"
"mendableai/firecrawl" -> "ItzCrazyKns/Perplexica"
"TeamWiseFlow/wiseflow" -> "Huanshere/VideoLingo"
"TeamWiseFlow/wiseflow" -> "getmaxun/maxun"
"TeamWiseFlow/wiseflow" -> "InternLM/MindSearch"
"TeamWiseFlow/wiseflow" -> "adithya-s-k/omniparse"
"TeamWiseFlow/wiseflow" -> "opendatalab/MinerU"
"TeamWiseFlow/wiseflow" -> "PeterH0323/Streamer-Sales" ["e"=1]
"TeamWiseFlow/wiseflow" -> "modelscope/FunClip" ["e"=1]
"TeamWiseFlow/wiseflow" -> "cooderl/wewe-rss" ["e"=1]
"TeamWiseFlow/wiseflow" -> "labring/FastGPT"
"TeamWiseFlow/wiseflow" -> "mendableai/firecrawl"
"TeamWiseFlow/wiseflow" -> "1Panel-dev/MaxKB"
"TeamWiseFlow/wiseflow" -> "GuijiAI/HeyGem.ai" ["e"=1]
"TeamWiseFlow/wiseflow" -> "songquanpeng/one-api" ["e"=1]
"TeamWiseFlow/wiseflow" -> "supermemoryai/supermemory"
"TeamWiseFlow/wiseflow" -> "dreammis/social-auto-upload" ["e"=1]
"modelscope/agentscope" -> "modelscope/modelscope-agent" ["e"=1]
"modelscope/agentscope" -> "QwenLM/Qwen-Agent"
"modelscope/agentscope" -> "eosphoros-ai/DB-GPT"
"modelscope/agentscope" -> "netease-youdao/QAnything"
"modelscope/agentscope" -> "modelscope/ms-swift" ["e"=1]
"modelscope/agentscope" -> "OpenBMB/XAgent" ["e"=1]
"modelscope/agentscope" -> "microsoft/graphrag"
"modelscope/agentscope" -> "xorbitsai/inference"
"modelscope/agentscope" -> "langchain-ai/langgraph"
"modelscope/agentscope" -> "letta-ai/letta"
"modelscope/agentscope" -> "InternLM/MindSearch"
"modelscope/agentscope" -> "microsoft/autogen"
"modelscope/agentscope" -> "xlang-ai/OpenAgents" ["e"=1]
"modelscope/agentscope" -> "labring/FastGPT"
"modelscope/agentscope" -> "e2b-dev/awesome-ai-agents"
"run-llama/rags" -> "LouisShark/chatgpt_system_prompt"
"run-llama/rags" -> "explodinggradients/ragas"
"run-llama/rags" -> "langchain-ai/opengpts"
"run-llama/rags" -> "weaviate/Verba"
"run-llama/rags" -> "BuilderIO/gpt-crawler"
"run-llama/rags" -> "bgstaal/multipleWindow3dScene"
"run-llama/rags" -> "ragapp/ragapp"
"run-llama/rags" -> "onyx-dot-app/onyx"
"run-llama/rags" -> "run-llama/llama_index"
"run-llama/rags" -> "OthersideAI/self-operating-computer"
"run-llama/rags" -> "microsoft/TaskWeaver"
"run-llama/rags" -> "letta-ai/letta"
"run-llama/rags" -> "microsoft/promptbase"
"run-llama/rags" -> "linexjlin/GPTs"
"run-llama/rags" -> "mem0ai/mem0"
"Cinnamon/kotaemon" -> "docling-project/docling"
"Cinnamon/kotaemon" -> "stanford-oval/storm"
"Cinnamon/kotaemon" -> "mendableai/firecrawl"
"Cinnamon/kotaemon" -> "agno-agi/agno"
"Cinnamon/kotaemon" -> "unclecode/crawl4ai"
"Cinnamon/kotaemon" -> "microsoft/graphrag"
"Cinnamon/kotaemon" -> "mem0ai/mem0"
"Cinnamon/kotaemon" -> "NirDiamant/RAG_Techniques"
"Cinnamon/kotaemon" -> "ItzCrazyKns/Perplexica"
"Cinnamon/kotaemon" -> "infiniflow/ragflow"
"Cinnamon/kotaemon" -> "Mintplex-Labs/anything-llm"
"Cinnamon/kotaemon" -> "Shubhamsaboo/awesome-llm-apps"
"Cinnamon/kotaemon" -> "khoj-ai/khoj"
"Cinnamon/kotaemon" -> "All-Hands-AI/OpenHands"
"Cinnamon/kotaemon" -> "opendatalab/MinerU"
"LouisShark/chatgpt_system_prompt" -> "linexjlin/GPTs"
"LouisShark/chatgpt_system_prompt" -> "BuilderIO/gpt-crawler"
"LouisShark/chatgpt_system_prompt" -> "run-llama/rags"
"LouisShark/chatgpt_system_prompt" -> "EmbraceAGI/Awesome-AI-GPTs" ["e"=1]
"LouisShark/chatgpt_system_prompt" -> "JushBJJ/Mr.-Ranedeer-AI-Tutor"
"LouisShark/chatgpt_system_prompt" -> "spdustin/ChatGPT-AutoExpert"
"LouisShark/chatgpt_system_prompt" -> "ai-boost/awesome-prompts" ["e"=1]
"LouisShark/chatgpt_system_prompt" -> "langgptai/LangGPT"
"LouisShark/chatgpt_system_prompt" -> "OthersideAI/self-operating-computer"
"LouisShark/chatgpt_system_prompt" -> "0xeb/TheBigPromptLibrary" ["e"=1]
"LouisShark/chatgpt_system_prompt" -> "mshumer/gpt-prompt-engineer"
"LouisShark/chatgpt_system_prompt" -> "microsoft/promptbase"
"LouisShark/chatgpt_system_prompt" -> "Vaibhavs10/insanely-fast-whisper" ["e"=1]
"LouisShark/chatgpt_system_prompt" -> "langchain-ai/opengpts"
"LouisShark/chatgpt_system_prompt" -> "Pythagora-io/gpt-pilot"
"tldraw/make-real" -> "tldraw/make-real-starter" ["e"=1]
"tldraw/make-real" -> "SawyerHood/draw-a-ui"
"tldraw/make-real" -> "tldraw/tldraw" ["e"=1]
"tldraw/make-real" -> "langchain-ai/opengpts"
"tldraw/make-real" -> "tldraw/draw-fast" ["e"=1]
"tldraw/make-real" -> "mshumer/gpt-prompt-engineer"
"tldraw/make-real" -> "raidendotai/openv0"
"tldraw/make-real" -> "Vaibhavs10/insanely-fast-whisper" ["e"=1]
"tldraw/make-real" -> "smol-ai/developer" ["e"=1]
"tldraw/make-real" -> "cbh123/narrator"
"tldraw/make-real" -> "openchatai/copilot" ["e"=1]
"tldraw/make-real" -> "OthersideAI/self-operating-computer"
"tldraw/make-real" -> "BuilderIO/gpt-crawler"
"tldraw/make-real" -> "jina-ai/reader"
"tldraw/make-real" -> "steven-tey/novel" ["e"=1]
"browserbase/stagehand" -> "steel-dev/steel-browser"
"browserbase/stagehand" -> "browser-use/browser-use"
"browserbase/stagehand" -> "web-infra-dev/midscene"
"browserbase/stagehand" -> "Skyvern-AI/skyvern"
"browserbase/stagehand" -> "mendableai/firecrawl"
"browserbase/stagehand" -> "lightpanda-io/browser"
"browserbase/stagehand" -> "onlook-dev/onlook" ["e"=1]
"browserbase/stagehand" -> "zaidmukaddam/scira"
"browserbase/stagehand" -> "yamadashy/repomix"
"browserbase/stagehand" -> "agno-agi/agno"
"browserbase/stagehand" -> "mastra-ai/mastra"
"browserbase/stagehand" -> "browser-use/web-ui"
"browserbase/stagehand" -> "unclecode/crawl4ai"
"browserbase/stagehand" -> "block/goose"
"browserbase/stagehand" -> "jlowin/fastmcp"
"langchain-ai/rag-from-scratch" -> "NirDiamant/RAG_Techniques"
"langchain-ai/rag-from-scratch" -> "explodinggradients/ragas"
"langchain-ai/rag-from-scratch" -> "langchain-ai/langgraph"
"langchain-ai/rag-from-scratch" -> "microsoft/graphrag"
"langchain-ai/rag-from-scratch" -> "hymie122/RAG-Survey"
"langchain-ai/rag-from-scratch" -> "Tongji-KGLLM/RAG-Survey"
"langchain-ai/rag-from-scratch" -> "FlagOpen/FlagEmbedding" ["e"=1]
"langchain-ai/rag-from-scratch" -> "FullStackRetrieval-com/RetrievalTutorials"
"langchain-ai/rag-from-scratch" -> "decodingml/llm-twin-course"
"langchain-ai/rag-from-scratch" -> "run-llama/llama_cloud_services"
"langchain-ai/rag-from-scratch" -> "NirDiamant/GenAI_Agents"
"langchain-ai/rag-from-scratch" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"langchain-ai/rag-from-scratch" -> "BragAI/bRAG-langchain"
"langchain-ai/rag-from-scratch" -> "RUC-NLPIR/FlashRAG"
"langchain-ai/rag-from-scratch" -> "mrdbourke/simple-local-rag"
"Canner/WrenAI" -> "vanna-ai/vanna"
"Canner/WrenAI" -> "microsoft/data-formulator"
"Canner/WrenAI" -> "tencentmusic/supersonic" ["e"=1]
"Canner/WrenAI" -> "zaidmukaddam/scira"
"Canner/WrenAI" -> "teableio/teable" ["e"=1]
"Canner/WrenAI" -> "fixie-ai/ultravox"
"Canner/WrenAI" -> "Zipstack/unstract"
"Canner/WrenAI" -> "agno-agi/agno"
"Canner/WrenAI" -> "sinaptik-ai/pandas-ai"
"Canner/WrenAI" -> "web-infra-dev/midscene"
"Canner/WrenAI" -> "OpenSPG/KAG"
"Canner/WrenAI" -> "browserbase/stagehand"
"Canner/WrenAI" -> "onlook-dev/onlook" ["e"=1]
"Canner/WrenAI" -> "mendableai/firecrawl"
"Canner/WrenAI" -> "stanford-oval/storm"
"regolith-labs/ore-cli" -> "regolith-labs/ore"
"regolith-labs/ore-cli" -> "phoboslab/high_impact" ["e"=1]
"regolith-labs/ore-cli" -> "tonyke-bot/ore-miner"
"regolith-labs/ore-cli" -> "plandex-ai/plandex"
"regolith-labs/ore-cli" -> "BenjaSOL/ore-cli-gpu"
"regolith-labs/ore-cli" -> "regolith-labs/drillx"
"regolith-labs/ore-cli" -> "mttaggart/I-S00N"
"regolith-labs/ore-cli" -> "aixcoder-plugin/aiXcoder-7B"
"regolith-labs/ore-cli" -> "atomicals/atomicals-js" ["e"=1]
"regolith-labs/ore-cli" -> "eknkc/ssr-benchmark"
"regolith-labs/ore-cli" -> "0xsongsu/dailytask" ["e"=1]
"regolith-labs/ore-cli" -> "warp-id/solana-trading-bot" ["e"=1]
"regolith-labs/ore-cli" -> "Parms-Crypto/CUDA-ORE-DUMP"
"regolith-labs/ore-cli" -> "michaelhly/solana-py" ["e"=1]
"regolith-labs/ore-cli" -> "Vahe1994/AQLM" ["e"=1]
"FujiwaraChoki/MoneyPrinterV2" -> "FujiwaraChoki/MoneyPrinter"
"FujiwaraChoki/MoneyPrinterV2" -> "harry0703/MoneyPrinterTurbo"
"FujiwaraChoki/MoneyPrinterV2" -> "microsoft/OmniParser"
"FujiwaraChoki/MoneyPrinterV2" -> "mendableai/firecrawl"
"FujiwaraChoki/MoneyPrinterV2" -> "Shubhamsaboo/awesome-llm-apps"
"FujiwaraChoki/MoneyPrinterV2" -> "stanford-oval/storm"
"FujiwaraChoki/MoneyPrinterV2" -> "virattt/ai-hedge-fund"
"FujiwaraChoki/MoneyPrinterV2" -> "khoj-ai/khoj"
"FujiwaraChoki/MoneyPrinterV2" -> "unclecode/crawl4ai"
"FujiwaraChoki/MoneyPrinterV2" -> "DrewThomasson/ebook2audiobook"
"FujiwaraChoki/MoneyPrinterV2" -> "zaidmukaddam/scira"
"FujiwaraChoki/MoneyPrinterV2" -> "hummingbot/hummingbot" ["e"=1]
"FujiwaraChoki/MoneyPrinterV2" -> "microsoft/data-formulator"
"FujiwaraChoki/MoneyPrinterV2" -> "browser-use/browser-use"
"FujiwaraChoki/MoneyPrinterV2" -> "onlook-dev/onlook" ["e"=1]
"kghandour/Ollama-SwiftUI" -> "kevinhermawan/OllamaKit"
"kghandour/Ollama-SwiftUI" -> "enoch1118/ollamaGUI"
"kghandour/Ollama-SwiftUI" -> "ollama-interface/Ollama-Gui"
"kghandour/Ollama-SwiftUI" -> "CrazyNeil/OllamaSpring"
"kghandour/Ollama-SwiftUI" -> "kevinhermawan/Ollamac"
"crewAIInc/crewAI" -> "microsoft/autogen"
"crewAIInc/crewAI" -> "agno-agi/agno"
"crewAIInc/crewAI" -> "All-Hands-AI/OpenHands"
"crewAIInc/crewAI" -> "FoundationAgents/MetaGPT"
"crewAIInc/crewAI" -> "mem0ai/mem0"
"crewAIInc/crewAI" -> "crewAIInc/crewAI-examples"
"crewAIInc/crewAI" -> "FlowiseAI/Flowise"
"crewAIInc/crewAI" -> "langchain-ai/langgraph"
"crewAIInc/crewAI" -> "assafelovic/gpt-researcher"
"crewAIInc/crewAI" -> "mendableai/firecrawl"
"crewAIInc/crewAI" -> "run-llama/llama_index"
"crewAIInc/crewAI" -> "openai/swarm"
"crewAIInc/crewAI" -> "BerriAI/litellm"
"crewAIInc/crewAI" -> "stanfordnlp/dspy"
"crewAIInc/crewAI" -> "letta-ai/letta"
"Marker-Inc-Korea/AutoRAG" -> "teddylee777/langchain-kr" ["e"=1]
"Marker-Inc-Korea/AutoRAG" -> "SciPhi-AI/R2R"
"Marker-Inc-Korea/AutoRAG" -> "explodinggradients/ragas"
"Marker-Inc-Korea/AutoRAG" -> "Beomi/KoAlpaca" ["e"=1]
"Marker-Inc-Korea/AutoRAG" -> "AnswerDotAI/RAGatouille"
"Marker-Inc-Korea/AutoRAG" -> "truefoundry/cognita"
"Marker-Inc-Korea/AutoRAG" -> "NirDiamant/RAG_Techniques"
"Marker-Inc-Korea/AutoRAG" -> "OpenSPG/KAG"
"Marker-Inc-Korea/AutoRAG" -> "RUC-NLPIR/FlashRAG"
"Marker-Inc-Korea/AutoRAG" -> "chonkie-ai/chonkie"
"Marker-Inc-Korea/AutoRAG" -> "pydantic/pydantic-ai"
"Marker-Inc-Korea/AutoRAG" -> "weaviate/Verba"
"Marker-Inc-Korea/AutoRAG" -> "confident-ai/deepeval"
"Marker-Inc-Korea/AutoRAG" -> "ragapp/ragapp"
"Marker-Inc-Korea/AutoRAG" -> "QuivrHQ/MegaParse"
"NVIDIA/ChatRTX" -> "NVIDIA/TensorRT-LLM" ["e"=1]
"NVIDIA/ChatRTX" -> "NVIDIA/GenerativeAIExamples"
"NVIDIA/ChatRTX" -> "NVIDIA/Stable-Diffusion-WebUI-TensorRT" ["e"=1]
"NVIDIA/ChatRTX" -> "NVIDIA/trt-llm-as-openai-windows"
"NVIDIA/ChatRTX" -> "Stability-AI/StableCascade" ["e"=1]
"NVIDIA/ChatRTX" -> "developersdigest/llm-answer-engine"
"NVIDIA/ChatRTX" -> "Nutlope/notesGPT"
"NVIDIA/ChatRTX" -> "pinokiocomputer/pinokio" ["e"=1]
"NVIDIA/ChatRTX" -> "BCG-X-Official/agentkit"
"NVIDIA/ChatRTX" -> "triton-inference-server/tensorrtllm_backend" ["e"=1]
"NVIDIA/ChatRTX" -> "adamcohenhillel/ADeus"
"NVIDIA/ChatRTX" -> "NVIDIA/NeMo" ["e"=1]
"NVIDIA/ChatRTX" -> "NVIDIAGameWorks/rtx-remix" ["e"=1]
"NVIDIA/ChatRTX" -> "NVIDIA/workbench-example-hybrid-rag"
"NVIDIA/ChatRTX" -> "huggingface/text-generation-inference" ["e"=1]
"RSSNext/Folo" -> "DIYgod/RSSHub" ["e"=1]
"RSSNext/Folo" -> "cooderl/wewe-rss" ["e"=1]
"RSSNext/Folo" -> "CherryHQ/cherry-studio"
"RSSNext/Folo" -> "tw93/Pake" ["e"=1]
"RSSNext/Folo" -> "clash-verge-rev/clash-verge-rev" ["e"=1]
"RSSNext/Folo" -> "chen08209/FlClash" ["e"=1]
"RSSNext/Folo" -> "AlistGo/alist" ["e"=1]
"RSSNext/Folo" -> "mihomo-party-org/mihomo-party" ["e"=1]
"RSSNext/Folo" -> "lobehub/lobe-chat"
"RSSNext/Folo" -> "SagerNet/sing-box" ["e"=1]
"RSSNext/Folo" -> "usememos/memos" ["e"=1]
"RSSNext/Folo" -> "localsend/localsend" ["e"=1]
"RSSNext/Folo" -> "opendatalab/MinerU"
"RSSNext/Folo" -> "toeverything/AFFiNE" ["e"=1]
"RSSNext/Folo" -> "Byaidu/PDFMathTranslate"
"StreetLamb/tribe" -> "strnad/CrewAI-Studio" ["e"=1]
"StreetLamb/tribe" -> "KruxAI/ragbuilder"
"StreetLamb/tribe" -> "langchain-ai/langgraph-studio"
"StreetLamb/tribe" -> "jgravelle/AutoGroq"
"StreetLamb/tribe" -> "kturung/langgraph_streamlit_codeassistant"
"StreetLamb/tribe" -> "shaunthecomputerscientist/EDA-GPT"
"StreetLamb/tribe" -> "langchain-ai/agent-chat-ui"
"StreetLamb/tribe" -> "xforceai/ide" ["e"=1]
"StreetLamb/tribe" -> "joshpocock/Stride-AI-Agents"
"StreetLamb/tribe" -> "NirDiamant/Controllable-RAG-Agent"
"StreetLamb/tribe" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"StreetLamb/tribe" -> "run-llama/llama_deploy"
"StreetLamb/tribe" -> "truefoundry/cognita"
"StreetLamb/tribe" -> "virattt/financial-agent-ui"
"StreetLamb/tribe" -> "MervinPraison/PraisonAI"
"ishan0102/vimGPT" -> "ddupont808/GPT-4V-Act" ["e"=1]
"ishan0102/vimGPT" -> "reworkd/tarsier"
"ishan0102/vimGPT" -> "daveshap/OpenAI_Agent_Swarm"
"ishan0102/vimGPT" -> "lavague-ai/LaVague"
"ishan0102/vimGPT" -> "Jiayi-Pan/GPT-V-on-Web" ["e"=1]
"ishan0102/vimGPT" -> "AbanteAI/archive-old-cli-mentat" ["e"=1]
"ishan0102/vimGPT" -> "roboflow/awesome-openai-vision-api-experiments" ["e"=1]
"ishan0102/vimGPT" -> "langchain-ai/opengpts"
"ishan0102/vimGPT" -> "nat/natbot" ["e"=1]
"ishan0102/vimGPT" -> "OthersideAI/self-operating-computer"
"ishan0102/vimGPT" -> "Skyvern-AI/skyvern"
"ishan0102/vimGPT" -> "1rgs/jsonformer"
"ishan0102/vimGPT" -> "spdustin/ChatGPT-AutoExpert"
"ishan0102/vimGPT" -> "mshumer/gpt-prompt-engineer"
"ishan0102/vimGPT" -> "OpenPipe/OpenPipe"
"lavague-ai/LaVague" -> "Skyvern-AI/skyvern"
"lavague-ai/LaVague" -> "weaviate/Verba"
"lavague-ai/LaVague" -> "SWE-agent/SWE-agent"
"lavague-ai/LaVague" -> "ScrapeGraphAI/Scrapegraph-ai"
"lavague-ai/LaVague" -> "Doriandarko/maestro"
"lavague-ai/LaVague" -> "developersdigest/llm-answer-engine"
"lavague-ai/LaVague" -> "mshumer/gpt-prompt-engineer"
"lavague-ai/LaVague" -> "steel-dev/steel-browser"
"lavague-ai/LaVague" -> "MervinPraison/PraisonAI"
"lavague-ai/LaVague" -> "nilsherzig/LLocalSearch"
"lavague-ai/LaVague" -> "OpenInterpreter/01"
"lavague-ai/LaVague" -> "agno-agi/agno"
"lavague-ai/LaVague" -> "ragapp/ragapp"
"lavague-ai/LaVague" -> "pipecat-ai/pipecat"
"lavague-ai/LaVague" -> "letta-ai/letta"
"iyaja/llama-fs" -> "ragapp/ragapp"
"iyaja/llama-fs" -> "QiuYannnn/Local-File-Organizer"
"iyaja/llama-fs" -> "Doriandarko/maestro"
"iyaja/llama-fs" -> "THU-MIG/yolov10" ["e"=1]
"iyaja/llama-fs" -> "weaviate/Verba"
"iyaja/llama-fs" -> "ItzCrazyKns/Perplexica"
"iyaja/llama-fs" -> "ScrapeGraphAI/Scrapegraph-ai"
"iyaja/llama-fs" -> "lavague-ai/LaVague"
"iyaja/llama-fs" -> "truefoundry/cognita"
"iyaja/llama-fs" -> "reorproject/reor"
"iyaja/llama-fs" -> "ozgrozer/ai-renamer"
"iyaja/llama-fs" -> "agno-agi/agno"
"iyaja/llama-fs" -> "Skyvern-AI/skyvern"
"iyaja/llama-fs" -> "Doriandarko/claude-engineer"
"iyaja/llama-fs" -> "letta-ai/letta"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "microsoft/Security-101" ["e"=1]
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "microsoft/AI-For-Beginners"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "microsoft/promptbase"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "linexjlin/GPTs"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "LouisShark/chatgpt_system_prompt"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "bleedline/aimoneyhunter" ["e"=1]
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "microsoft/ai-agents-for-beginners"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "microsoft/generative-ai-for-beginners"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "microsoft/xr-development-for-beginners" ["e"=1]
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "BuilderIO/gpt-crawler"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "google-gemini/cookbook"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "microsoft/promptflow"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "chinesehuazhou/python-whydo" ["e"=1]
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "anthropics/anthropic-cookbook"
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" -> "yihong0618/bilingual_book_maker" ["e"=1]
"oumi-ai/oumi" -> "grapeot/devin.cursorrules"
"oumi-ai/oumi" -> "QwenLM/Qwen2.5-VL" ["e"=1]
"oumi-ai/oumi" -> "block/goose"
"oumi-ai/oumi" -> "microsoft/data-formulator"
"oumi-ai/oumi" -> "unslothai/unsloth"
"oumi-ai/oumi" -> "stanford-oval/storm"
"oumi-ai/oumi" -> "patchy631/ai-engineering-hub"
"oumi-ai/oumi" -> "yandex/perforator" ["e"=1]
"oumi-ai/oumi" -> "NirDiamant/GenAI_Agents"
"oumi-ai/oumi" -> "unclecode/crawl4ai"
"oumi-ai/oumi" -> "microsoft/OmniParser"
"oumi-ai/oumi" -> "getzep/graphiti"
"oumi-ai/oumi" -> "exo-explore/exo"
"oumi-ai/oumi" -> "Shubhamsaboo/awesome-llm-apps"
"oumi-ai/oumi" -> "n8n-io/self-hosted-ai-starter-kit"
"NVIDIA/workbench-example-hybrid-rag" -> "NVIDIA/nim-anywhere"
"NVIDIA/workbench-example-hybrid-rag" -> "NVIDIA/workbench-example-sdxl-customization"
"NVIDIA/workbench-example-hybrid-rag" -> "NVIDIA/workbench-example-agentic-rag"
"NVIDIA/workbench-example-hybrid-rag" -> "NVIDIA/workbench-example-mistral-finetune"
"NVIDIA/workbench-example-hybrid-rag" -> "NVIDIA/workbench-example-llama2-finetune"
"NVIDIA/workbench-example-hybrid-rag" -> "tahmidmir/HyrbridRAG"
"NVIDIA/workbench-example-hybrid-rag" -> "NVIDIA-AI-Blueprints/digital-human"
"mufeedvh/code2prompt" -> "yamadashy/repomix"
"mufeedvh/code2prompt" -> "raphaelmansuy/code2prompt"
"mufeedvh/code2prompt" -> "cyclotruc/gitingest"
"mufeedvh/code2prompt" -> "Doriandarko/claude-engineer"
"mufeedvh/code2prompt" -> "block/goose"
"mufeedvh/code2prompt" -> "browserbase/stagehand"
"mufeedvh/code2prompt" -> "eastlondoner/cursor-tools"
"mufeedvh/code2prompt" -> "Aider-AI/aider"
"mufeedvh/code2prompt" -> "potpie-ai/potpie"
"mufeedvh/code2prompt" -> "RooVetGit/Roo-Code"
"mufeedvh/code2prompt" -> "zaidmukaddam/scira"
"mufeedvh/code2prompt" -> "agno-agi/agno"
"mufeedvh/code2prompt" -> "mediar-ai/screenpipe"
"mufeedvh/code2prompt" -> "Canner/WrenAI"
"mufeedvh/code2prompt" -> "elizaOS/eliza"
"mishushakov/llm-scraper" -> "al1abb/invoify" ["e"=1]
"mishushakov/llm-scraper" -> "ScrapeGraphAI/Scrapegraph-ai"
"mishushakov/llm-scraper" -> "browserbase/stagehand"
"mishushakov/llm-scraper" -> "zaidmukaddam/scira"
"mishushakov/llm-scraper" -> "jina-ai/reader"
"mishushakov/llm-scraper" -> "mendableai/firecrawl"
"mishushakov/llm-scraper" -> "Skyvern-AI/skyvern"
"mishushakov/llm-scraper" -> "yamadashy/repomix"
"mishushakov/llm-scraper" -> "steel-dev/steel-browser"
"mishushakov/llm-scraper" -> "miurla/morphic"
"mishushakov/llm-scraper" -> "langchain-ai/local-deep-researcher"
"mishushakov/llm-scraper" -> "lavague-ai/LaVague"
"mishushakov/llm-scraper" -> "MervinPraison/PraisonAI"
"mishushakov/llm-scraper" -> "Nutlope/logocreator" ["e"=1]
"mishushakov/llm-scraper" -> "Zipstack/unstract"
"joanrod/star-vector" -> "OmniSVG/OmniSVG" ["e"=1]
"joanrod/star-vector" -> "jlowin/fastmcp"
"joanrod/star-vector" -> "ahmedkhaleel2004/gitdiagram"
"joanrod/star-vector" -> "Cryakl/Ultimate-RAT-Collection" ["e"=1]
"joanrod/star-vector" -> "ourongxing/newsnow"
"joanrod/star-vector" -> "microsoft/data-formulator"
"joanrod/star-vector" -> "wonderwhy-er/DesktopCommanderMCP"
"joanrod/star-vector" -> "langchain-ai/local-deep-researcher"
"joanrod/star-vector" -> "Zackriya-Solutions/meeting-minutes"
"joanrod/star-vector" -> "getzep/graphiti"
"joanrod/star-vector" -> "liam-hq/liam" ["e"=1]
"joanrod/star-vector" -> "yuruotong1/autoMate"
"joanrod/star-vector" -> "krillinai/KrillinAI"
"joanrod/star-vector" -> "getmaxun/maxun"
"joanrod/star-vector" -> "visioncortex/vtracer" ["e"=1]
"BasedHardware/omi" -> "BasedHardware/OpenGlass"
"BasedHardware/omi" -> "adamcohenhillel/ADeus"
"BasedHardware/omi" -> "OpenInterpreter/01"
"BasedHardware/omi" -> "BasedHardware/Whomane"
"BasedHardware/omi" -> "Zackriya-Solutions/meeting-minutes"
"BasedHardware/omi" -> "supermemoryai/supermemory"
"BasedHardware/omi" -> "mediar-ai/screenpipe"
"BasedHardware/omi" -> "MODSetter/SurfSense"
"BasedHardware/omi" -> "CapSoftware/Cap" ["e"=1]
"BasedHardware/omi" -> "kortix-ai/suna"
"BasedHardware/omi" -> "baron-chain/baron-wallet" ["e"=1]
"BasedHardware/omi" -> "zaidmukaddam/scira"
"BasedHardware/omi" -> "krillinai/KrillinAI"
"BasedHardware/omi" -> "simular-ai/Agent-S"
"BasedHardware/omi" -> "elie222/inbox-zero" ["e"=1]
"microsoft/RD-Agent" -> "langchain-ai/local-deep-researcher"
"microsoft/RD-Agent" -> "AgentOps-AI/agentops"
"microsoft/RD-Agent" -> "microsoft/data-formulator"
"microsoft/RD-Agent" -> "microsoft/qlib" ["e"=1]
"microsoft/RD-Agent" -> "patchy631/ai-engineering-hub"
"microsoft/RD-Agent" -> "camel-ai/camel"
"microsoft/RD-Agent" -> "yuruotong1/autoMate"
"microsoft/RD-Agent" -> "microsoft/PromptWizard"
"microsoft/RD-Agent" -> "getzep/graphiti"
"microsoft/RD-Agent" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"microsoft/RD-Agent" -> "microsoft/TinyTroupe"
"microsoft/RD-Agent" -> "langchain-ai/open_deep_research"
"microsoft/RD-Agent" -> "simular-ai/Agent-S"
"microsoft/RD-Agent" -> "jlowin/fastmcp"
"microsoft/RD-Agent" -> "lastmile-ai/mcp-agent"
"fmaclen/hollama" -> "ollama-ui/ollama-ui"
"fmaclen/hollama" -> "ivanfioravanti/chatbot-ollama"
"fmaclen/hollama" -> "BruceMacD/chatd"
"fmaclen/hollama" -> "sammcj/gollama"
"fmaclen/hollama" -> "richawo/minimal-llm-ui"
"fmaclen/hollama" -> "drazdra/ollama-chats"
"fmaclen/hollama" -> "bionic-gpt/bionic-gpt"
"fmaclen/hollama" -> "ggozad/oterm"
"fmaclen/hollama" -> "TilmanGriesel/chipper"
"fmaclen/hollama" -> "HelgeSverre/ollama-gui"
"fmaclen/hollama" -> "EndoTheDev/Awesome-Ollama"
"karpathy/minbpe" -> "naklecha/llama3-from-scratch"
"karpathy/minbpe" -> "karpathy/llm.c"
"karpathy/minbpe" -> "LargeWorldModel/LWM" ["e"=1]
"karpathy/minbpe" -> "karpathy/llama2.c"
"karpathy/minbpe" -> "karpathy/nanoGPT"
"karpathy/minbpe" -> "openai/tiktoken"
"karpathy/minbpe" -> "karpathy/LLM101n"
"karpathy/minbpe" -> "karpathy/micrograd"
"karpathy/minbpe" -> "karpathy/build-nanogpt"
"karpathy/minbpe" -> "google/gemma_pytorch" ["e"=1]
"karpathy/minbpe" -> "karpathy/minGPT"
"karpathy/minbpe" -> "Dao-AILab/flash-attention" ["e"=1]
"karpathy/minbpe" -> "huggingface/trl" ["e"=1]
"karpathy/minbpe" -> "Lightning-AI/litgpt"
"karpathy/minbpe" -> "stas00/ml-engineering"
"nilsherzig/LLocalSearch" -> "developersdigest/llm-answer-engine"
"nilsherzig/LLocalSearch" -> "miurla/morphic"
"nilsherzig/LLocalSearch" -> "ItzCrazyKns/Perplexica"
"nilsherzig/LLocalSearch" -> "rashadphz/farfalle"
"nilsherzig/LLocalSearch" -> "plandex-ai/plandex"
"nilsherzig/LLocalSearch" -> "reorproject/reor"
"nilsherzig/LLocalSearch" -> "lavague-ai/LaVague"
"nilsherzig/LLocalSearch" -> "nashsu/FreeAskInternet"
"nilsherzig/LLocalSearch" -> "SWE-agent/SWE-agent"
"nilsherzig/LLocalSearch" -> "cohere-ai/cohere-toolkit"
"nilsherzig/LLocalSearch" -> "semanser/codel"
"nilsherzig/LLocalSearch" -> "jina-ai/reader"
"nilsherzig/LLocalSearch" -> "mshumer/gpt-prompt-engineer"
"nilsherzig/LLocalSearch" -> "Skyvern-AI/skyvern"
"nilsherzig/LLocalSearch" -> "jasonppy/VoiceCraft" ["e"=1]
"373675032/verio-house" -> "373675032/academic-report"
"373675032/verio-house" -> "373675032/kaka-shop"
"373675032/verio-house" -> "373675032/smart-medicine"
"lizhe2004/Awesome-LLM-RAG-Application" -> "jxzhangjhu/Awesome-LLM-RAG"
"lizhe2004/Awesome-LLM-RAG-Application" -> "hymie122/RAG-Survey"
"lizhe2004/Awesome-LLM-RAG-Application" -> "Tongji-KGLLM/RAG-Survey"
"lizhe2004/Awesome-LLM-RAG-Application" -> "RUC-NLPIR/FlashRAG"
"lizhe2004/Awesome-LLM-RAG-Application" -> "WangRongsheng/awesome-LLM-resources" ["e"=1]
"lizhe2004/Awesome-LLM-RAG-Application" -> "DSXiangLi/DecryptPrompt" ["e"=1]
"lizhe2004/Awesome-LLM-RAG-Application" -> "netease-youdao/QAnything"
"lizhe2004/Awesome-LLM-RAG-Application" -> "NovaSearch-Team/RAG-Retrieval"
"lizhe2004/Awesome-LLM-RAG-Application" -> "FlagOpen/FlagEmbedding" ["e"=1]
"lizhe2004/Awesome-LLM-RAG-Application" -> "jackaduma/awesome_LLMs_interview_notes" ["e"=1]
"lizhe2004/Awesome-LLM-RAG-Application" -> "netease-youdao/BCEmbedding" ["e"=1]
"lizhe2004/Awesome-LLM-RAG-Application" -> "360AILAB-NLP/360LayoutAnalysis" ["e"=1]
"lizhe2004/Awesome-LLM-RAG-Application" -> "shibing624/MedicalGPT" ["e"=1]
"lizhe2004/Awesome-LLM-RAG-Application" -> "BaranziniLab/KG_RAG" ["e"=1]
"lizhe2004/Awesome-LLM-RAG-Application" -> "yuanzhoulvpi2017/zero_nlp" ["e"=1]
"AutoCodeRoverSG/auto-code-rover" -> "OpenAutoCoder/Agentless" ["e"=1]
"AutoCodeRoverSG/auto-code-rover" -> "SWE-agent/SWE-agent"
"AutoCodeRoverSG/auto-code-rover" -> "SWE-bench/SWE-bench" ["e"=1]
"AutoCodeRoverSG/auto-code-rover" -> "entropy-research/Devon"
"AutoCodeRoverSG/auto-code-rover" -> "aorwall/moatless-tools" ["e"=1]
"AutoCodeRoverSG/auto-code-rover" -> "semanser/codel"
"AutoCodeRoverSG/auto-code-rover" -> "Doriandarko/maestro"
"AutoCodeRoverSG/auto-code-rover" -> "Codium-ai/AlphaCodium"
"AutoCodeRoverSG/auto-code-rover" -> "AbanteAI/archive-old-cli-mentat" ["e"=1]
"AutoCodeRoverSG/auto-code-rover" -> "unit-mesh/auto-dev"
"AutoCodeRoverSG/auto-code-rover" -> "lavague-ai/LaVague"
"AutoCodeRoverSG/auto-code-rover" -> "cohere-ai/cohere-toolkit"
"AutoCodeRoverSG/auto-code-rover" -> "developersdigest/llm-answer-engine"
"AutoCodeRoverSG/auto-code-rover" -> "xlang-ai/OSWorld" ["e"=1]
"AutoCodeRoverSG/auto-code-rover" -> "mshumer/gpt-prompt-engineer"
"openai/openai-assistants-quickstart" -> "openai/openai-realtime-console"
"openai/openai-assistants-quickstart" -> "openai/openai-realtime-api-beta" ["e"=1]
"openai/openai-assistants-quickstart" -> "vercel-labs/gemini-chatbot"
"openai/openai-assistants-quickstart" -> "miurla/morphic"
"openai/openai-assistants-quickstart" -> "langchain-ai/langchain-nextjs-template"
"openai/openai-assistants-quickstart" -> "openai/openai-responses-starter-app" ["e"=1]
"openai/openai-assistants-quickstart" -> "openai/openai-openapi"
"openai/openai-assistants-quickstart" -> "openai/openai-structured-outputs-samples"
"openai/openai-assistants-quickstart" -> "vercel/ai-chatbot"
"openai/openai-assistants-quickstart" -> "anthropics/anthropic-quickstarts"
"openai/openai-assistants-quickstart" -> "e2b-dev/code-interpreter"
"openai/openai-assistants-quickstart" -> "assistant-ui/assistant-ui"
"openai/openai-assistants-quickstart" -> "openai/openai-realtime-agents"
"openai/openai-assistants-quickstart" -> "openai/openai-cua-sample-app"
"openai/openai-assistants-quickstart" -> "OpenAssistantGPT/OpenAssistantGPT" ["e"=1]
"pchunduri6/rag-demystified" -> "ray-project/llm-applications"
"pchunduri6/rag-demystified" -> "tigerlab-ai/tiger"
"pchunduri6/rag-demystified" -> "Raudaschl/rag-fusion"
"pchunduri6/rag-demystified" -> "AnswerDotAI/RAGatouille"
"pchunduri6/rag-demystified" -> "NeumTry/NeumAI"
"pchunduri6/rag-demystified" -> "okuvshynov/slowllama"
"pchunduri6/rag-demystified" -> "databricks/lilac" ["e"=1]
"pchunduri6/rag-demystified" -> "georgia-tech-db/evadb" ["e"=1]
"pchunduri6/rag-demystified" -> "run-llama/finetune-embedding"
"pchunduri6/rag-demystified" -> "run-llama/sec-insights"
"pchunduri6/rag-demystified" -> "dgarnitz/vectorflow"
"pchunduri6/rag-demystified" -> "snexus/llm-search"
"pchunduri6/rag-demystified" -> "IntelLabs/fastRAG"
"pchunduri6/rag-demystified" -> "viddexa/autollm"
"pchunduri6/rag-demystified" -> "nlmatics/llmsherpa"
"VRSEN/agency-swarm" -> "VRSEN/agency-swarm-lab" ["e"=1]
"VRSEN/agency-swarm" -> "567-labs/instructor"
"VRSEN/agency-swarm" -> "MervinPraison/PraisonAI"
"VRSEN/agency-swarm" -> "Doriandarko/maestro"
"VRSEN/agency-swarm" -> "daveshap/OpenAI_Agent_Swarm"
"VRSEN/agency-swarm" -> "frdel/agent-zero"
"VRSEN/agency-swarm" -> "crewAIInc/crewAI-examples"
"VRSEN/agency-swarm" -> "jgravelle/AutoGroq"
"VRSEN/agency-swarm" -> "crewAIInc/crewAI"
"VRSEN/agency-swarm" -> "AgentOps-AI/agentops"
"VRSEN/agency-swarm" -> "daveshap/ACE_Framework"
"VRSEN/agency-swarm" -> "microsoft/TaskWeaver"
"VRSEN/agency-swarm" -> "letta-ai/letta"
"VRSEN/agency-swarm" -> "Doriandarko/claude-engineer"
"VRSEN/agency-swarm" -> "kyegomez/swarms"
"AnswerDotAI/RAGatouille" -> "stanford-futuredata/ColBERT" ["e"=1]
"AnswerDotAI/RAGatouille" -> "AnswerDotAI/rerankers"
"AnswerDotAI/RAGatouille" -> "AnswerDotAI/byaldi"
"AnswerDotAI/RAGatouille" -> "illuin-tech/colpali"
"AnswerDotAI/RAGatouille" -> "567-labs/instructor"
"AnswerDotAI/RAGatouille" -> "stanfordnlp/dspy"
"AnswerDotAI/RAGatouille" -> "IntelLabs/fastRAG"
"AnswerDotAI/RAGatouille" -> "explodinggradients/ragas"
"AnswerDotAI/RAGatouille" -> "urchade/GLiNER"
"AnswerDotAI/RAGatouille" -> "dottxt-ai/outlines"
"AnswerDotAI/RAGatouille" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"AnswerDotAI/RAGatouille" -> "xhluca/bm25s"
"AnswerDotAI/RAGatouille" -> "michaelfeil/infinity"
"AnswerDotAI/RAGatouille" -> "qdrant/fastembed"
"AnswerDotAI/RAGatouille" -> "huggingface/setfit" ["e"=1]
"gabrielchua/RAGxplorer" -> "AnswerDotAI/RAGatouille"
"gabrielchua/RAGxplorer" -> "misbahsy/RAGTune"
"gabrielchua/RAGxplorer" -> "Raudaschl/rag-fusion"
"gabrielchua/RAGxplorer" -> "andrewnguonly/Lumos"
"gabrielchua/RAGxplorer" -> "IntelLabs/fastRAG"
"gabrielchua/RAGxplorer" -> "langchain-ai/langchain-extract" ["e"=1]
"gabrielchua/RAGxplorer" -> "truera/trulens"
"gabrielchua/RAGxplorer" -> "nlmatics/llmsherpa"
"gabrielchua/RAGxplorer" -> "KruxAI/ragbuilder"
"gabrielchua/RAGxplorer" -> "Azure/GPT-RAG" ["e"=1]
"gabrielchua/RAGxplorer" -> "aurelio-labs/semantic-router"
"gabrielchua/RAGxplorer" -> "msoedov/langcorn" ["e"=1]
"gabrielchua/RAGxplorer" -> "truefoundry/cognita"
"gabrielchua/RAGxplorer" -> "viddexa/autollm"
"gabrielchua/RAGxplorer" -> "pchunduri6/rag-demystified"
"SciPhi-AI/R2R" -> "neuml/txtai"
"SciPhi-AI/R2R" -> "truefoundry/cognita"
"SciPhi-AI/R2R" -> "BerriAI/litellm"
"SciPhi-AI/R2R" -> "Marker-Inc-Korea/AutoRAG"
"SciPhi-AI/R2R" -> "weaviate/Verba"
"SciPhi-AI/R2R" -> "NirDiamant/RAG_Techniques"
"SciPhi-AI/R2R" -> "getzep/graphiti"
"SciPhi-AI/R2R" -> "Cinnamon/kotaemon"
"SciPhi-AI/R2R" -> "stanfordnlp/dspy"
"SciPhi-AI/R2R" -> "Unstructured-IO/unstructured"
"SciPhi-AI/R2R" -> "explodinggradients/ragas"
"SciPhi-AI/R2R" -> "microsoft/graphrag"
"SciPhi-AI/R2R" -> "agno-agi/agno"
"SciPhi-AI/R2R" -> "567-labs/instructor"
"SciPhi-AI/R2R" -> "onyx-dot-app/onyx"
"merveenoyan/smol-vision" -> "AnswerDotAI/byaldi"
"merveenoyan/smol-vision" -> "illuin-tech/colpali"
"merveenoyan/smol-vision" -> "roboflow/maestro" ["e"=1]
"merveenoyan/smol-vision" -> "huggingface/smollm" ["e"=1]
"merveenoyan/smol-vision" -> "tonywu71/colpali-cookbooks"
"merveenoyan/smol-vision" -> "huggingface/huggingface-llama-recipes" ["e"=1]
"merveenoyan/smol-vision" -> "google-research/big_vision" ["e"=1]
"merveenoyan/smol-vision" -> "merveenoyan/awesome-osml-for-devs"
"merveenoyan/smol-vision" -> "adithya-s-k/VARAG"
"merveenoyan/smol-vision" -> "mistralai/cookbook"
"merveenoyan/smol-vision" -> "SkalskiP/vlms-zero-to-hero" ["e"=1]
"merveenoyan/smol-vision" -> "huggingface/smol-course"
"merveenoyan/smol-vision" -> "argilla-io/distilabel" ["e"=1]
"merveenoyan/smol-vision" -> "AnswerDotAI/RAGatouille"
"merveenoyan/smol-vision" -> "SylphAI-Inc/AdalFlow"
"assistant-ui/assistant-ui" -> "langchain-ai/open-canvas"
"assistant-ui/assistant-ui" -> "onlook-dev/onlook" ["e"=1]
"assistant-ui/assistant-ui" -> "vercel/ai-chatbot"
"assistant-ui/assistant-ui" -> "birobirobiro/awesome-shadcn-ui" ["e"=1]
"assistant-ui/assistant-ui" -> "mastra-ai/mastra"
"assistant-ui/assistant-ui" -> "browserbase/stagehand"
"assistant-ui/assistant-ui" -> "jakobhoeg/shadcn-chat" ["e"=1]
"assistant-ui/assistant-ui" -> "vercel/ai"
"assistant-ui/assistant-ui" -> "miurla/morphic"
"assistant-ui/assistant-ui" -> "CopilotKit/CopilotKit" ["e"=1]
"assistant-ui/assistant-ui" -> "zaidmukaddam/scira"
"assistant-ui/assistant-ui" -> "e2b-dev/fragments"
"assistant-ui/assistant-ui" -> "udecode/plate" ["e"=1]
"assistant-ui/assistant-ui" -> "vantezzen/autoform" ["e"=1]
"assistant-ui/assistant-ui" -> "sadmann7/shadcn-table" ["e"=1]
"upstash/degree-guru" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"upstash/degree-guru" -> "upstash/rag-chat"
"get-salt-AI/SaltAI" -> "get-salt-AI/SaltAI_Documentation_Tools"
"get-salt-AI/SaltAI" -> "ExponentialML/ComfyUI_ModelScopeT2V"
"crewAIInc/crewAI-examples" -> "crewAIInc/crewAI-tools" ["e"=1]
"crewAIInc/crewAI-examples" -> "crewAIInc/crewAI"
"crewAIInc/crewAI-examples" -> "MervinPraison/PraisonAI"
"crewAIInc/crewAI-examples" -> "strnad/CrewAI-Studio" ["e"=1]
"crewAIInc/crewAI-examples" -> "VRSEN/agency-swarm"
"crewAIInc/crewAI-examples" -> "langchain-ai/langgraph"
"crewAIInc/crewAI-examples" -> "AgentOps-AI/agentops"
"crewAIInc/crewAI-examples" -> "majacinka/crewai-experiments" ["e"=1]
"crewAIInc/crewAI-examples" -> "jgravelle/AutoGroq"
"crewAIInc/crewAI-examples" -> "assafelovic/gpt-researcher"
"crewAIInc/crewAI-examples" -> "agno-agi/agno"
"crewAIInc/crewAI-examples" -> "Doriandarko/maestro"
"crewAIInc/crewAI-examples" -> "e2b-dev/awesome-ai-agents"
"crewAIInc/crewAI-examples" -> "Eng-Elias/CrewAI-Visualizer" ["e"=1]
"crewAIInc/crewAI-examples" -> "pydantic/pydantic-ai"
"ItzCrazyKns/Perplexica" -> "assafelovic/gpt-researcher"
"ItzCrazyKns/Perplexica" -> "agno-agi/agno"
"ItzCrazyKns/Perplexica" -> "mendableai/firecrawl"
"ItzCrazyKns/Perplexica" -> "searxng/searxng" ["e"=1]
"ItzCrazyKns/Perplexica" -> "stanford-oval/storm"
"ItzCrazyKns/Perplexica" -> "miurla/morphic"
"ItzCrazyKns/Perplexica" -> "khoj-ai/khoj"
"ItzCrazyKns/Perplexica" -> "mem0ai/mem0"
"ItzCrazyKns/Perplexica" -> "ScrapeGraphAI/Scrapegraph-ai"
"ItzCrazyKns/Perplexica" -> "unclecode/crawl4ai"
"ItzCrazyKns/Perplexica" -> "All-Hands-AI/OpenHands"
"ItzCrazyKns/Perplexica" -> "Cinnamon/kotaemon"
"ItzCrazyKns/Perplexica" -> "crewAIInc/crewAI"
"ItzCrazyKns/Perplexica" -> "Mintplex-Labs/anything-llm"
"ItzCrazyKns/Perplexica" -> "zaidmukaddam/scira"
"Mobile-Artificial-Intelligence/maid" -> "SupportTools/dr-syncer"
"Mobile-Artificial-Intelligence/maid" -> "Trylz/Restir_CPP"
"Mobile-Artificial-Intelligence/maid" -> "spectrumwebco/kled.io"
"Mobile-Artificial-Intelligence/maid" -> "MasterOfLogic1/UipathLibraries"
"Mobile-Artificial-Intelligence/maid" -> "armorwallet/armor-crypto-mcp"
"Mobile-Artificial-Intelligence/maid" -> "Nayjest/ai-microcore"
"Mobile-Artificial-Intelligence/maid" -> "melihsoft/adamant"
"Mobile-Artificial-Intelligence/maid" -> "RichartDedekind/NollarsVPN"
"Mobile-Artificial-Intelligence/maid" -> "MeoMunDep/Mavryk-Wallet"
"Mobile-Artificial-Intelligence/maid" -> "furudo-erika/awesome-postman-alternatives"
"Mobile-Artificial-Intelligence/maid" -> "muraliavarma/vue-slot-table"
"Mobile-Artificial-Intelligence/maid" -> "The-Pocket-World/Pocket-Flow-Framework"
"Mobile-Artificial-Intelligence/maid" -> "HMUNACHI/super-lazy-autograd"
"Mobile-Artificial-Intelligence/maid" -> "Chirag-Main1/ChatBot_perosnal"
"Mobile-Artificial-Intelligence/maid" -> "Webinix-dev/webinix"
"google-gemini/deprecated-generative-ai-js" -> "googleapis/js-genai"
"google-gemini/deprecated-generative-ai-js" -> "google-gemini/deprecated-generative-ai-python"
"google-gemini/deprecated-generative-ai-js" -> "anthropics/anthropic-sdk-typescript"
"google-gemini/deprecated-generative-ai-js" -> "google/generative-ai-docs"
"google-gemini/deprecated-generative-ai-js" -> "google-gemini/live-api-web-console"
"google-gemini/deprecated-generative-ai-js" -> "google-gemini/cookbook"
"google-gemini/deprecated-generative-ai-js" -> "google-gemini/starter-applets"
"google-gemini/deprecated-generative-ai-js" -> "google-gemini/deprecated-generative-ai-android" ["e"=1]
"google-gemini/deprecated-generative-ai-js" -> "googleapis/python-genai"
"google-gemini/deprecated-generative-ai-js" -> "google-gemini/gemma-cookbook"
"google-gemini/deprecated-generative-ai-js" -> "google/generative-ai-go" ["e"=1]
"google-gemini/deprecated-generative-ai-js" -> "vercel-labs/gemini-chatbot"
"google-gemini/deprecated-generative-ai-js" -> "google-gemini/example-chat-app"
"google-gemini/deprecated-generative-ai-js" -> "googleapis/nodejs-vertexai"
"google-gemini/deprecated-generative-ai-js" -> "langchain-ai/langgraphjs"
"langchain-ai/langgraph-engineer" -> "hwchase17/langgraph-engineer"
"technovangelist/videoprojects" -> "sammcj/gollama"
"technovangelist/videoprojects" -> "samwit/langchain-tutorials" ["e"=1]
"technovangelist/videoprojects" -> "coleam00/ai-agents-masterclass"
"technovangelist/videoprojects" -> "disler/poc-realtime-ai-assistant"
"technovangelist/videoprojects" -> "brainqub3/jar3d_meta_expert"
"technovangelist/videoprojects" -> "coleam00/ottomator-agents"
"technovangelist/videoprojects" -> "maudoin/ollama-voice"
"technovangelist/videoprojects" -> "samwit/llm-tutorials" ["e"=1]
"technovangelist/videoprojects" -> "SawyerHood/tlbrowse"
"technovangelist/videoprojects" -> "TrelisResearch/one-click-llms"
"technovangelist/videoprojects" -> "technovangelist/ollamamodelupdater"
"technovangelist/videoprojects" -> "jgravelle/AutoGroq"
"technovangelist/videoprojects" -> "MervinPraison/PraisonAI"
"technovangelist/videoprojects" -> "jgravelle/pocketgroq"
"technovangelist/videoprojects" -> "AllAboutAI-YT/easy-local-rag"
"google-gemini/cookbook" -> "anthropics/anthropic-cookbook"
"google-gemini/cookbook" -> "GoogleCloudPlatform/generative-ai"
"google-gemini/cookbook" -> "Shubhamsaboo/awesome-llm-apps"
"google-gemini/cookbook" -> "anthropics/courses"
"google-gemini/cookbook" -> "stanford-oval/storm"
"google-gemini/cookbook" -> "agno-agi/agno"
"google-gemini/cookbook" -> "google-gemini/deprecated-generative-ai-python"
"google-gemini/cookbook" -> "mendableai/firecrawl"
"google-gemini/cookbook" -> "docling-project/docling"
"google-gemini/cookbook" -> "patchy631/ai-engineering-hub"
"google-gemini/cookbook" -> "microsoft/markitdown"
"google-gemini/cookbook" -> "unclecode/crawl4ai"
"google-gemini/cookbook" -> "khoj-ai/khoj"
"google-gemini/cookbook" -> "assafelovic/gpt-researcher"
"google-gemini/cookbook" -> "meta-llama/llama-cookbook"
"microsoft/TinyTroupe" -> "awslabs/agent-squad"
"microsoft/TinyTroupe" -> "agno-agi/agno"
"microsoft/TinyTroupe" -> "Cinnamon/kotaemon"
"microsoft/TinyTroupe" -> "pydantic/pydantic-ai"
"microsoft/TinyTroupe" -> "openai/swarm"
"microsoft/TinyTroupe" -> "QuivrHQ/MegaParse"
"microsoft/TinyTroupe" -> "microsoft/RD-Agent"
"microsoft/TinyTroupe" -> "microsoft/data-formulator"
"microsoft/TinyTroupe" -> "getzep/graphiti"
"microsoft/TinyTroupe" -> "docling-project/docling"
"microsoft/TinyTroupe" -> "livekit/agents"
"microsoft/TinyTroupe" -> "Skyvern-AI/skyvern"
"microsoft/TinyTroupe" -> "stanford-oval/storm"
"microsoft/TinyTroupe" -> "ItzCrazyKns/Perplexica"
"microsoft/TinyTroupe" -> "microsoft/PromptWizard"
"tonykipkemboi/ollama_pdf_rag" -> "ThomasJay/RAG"
"tonykipkemboi/ollama_pdf_rag" -> "pixegami/rag-tutorial-v2"
"tonykipkemboi/ollama_pdf_rag" -> "curiousily/ragbase"
"tonykipkemboi/ollama_pdf_rag" -> "AllAboutAI-YT/easy-local-rag"
"tonykipkemboi/ollama_pdf_rag" -> "curiousily/AI-Bootcamp"
"tonykipkemboi/ollama_pdf_rag" -> "pixegami/langchain-rag-tutorial"
"tonykipkemboi/ollama_pdf_rag" -> "SonicWarrior1/pdfchat"
"tonykipkemboi/ollama_pdf_rag" -> "amithkoujalgi/ollama-pdf-bot"
"AllAboutAI-YT/easy-local-rag" -> "AllAboutAI-YT/ai-terminal"
"AllAboutAI-YT/easy-local-rag" -> "tonykipkemboi/ollama_pdf_rag"
"AllAboutAI-YT/easy-local-rag" -> "AllAboutAI-YT/cursor_prompts"
"AllAboutAI-YT/easy-local-rag" -> "AllAboutAI-YT/chatTTS"
"AllAboutAI-YT/easy-local-rag" -> "AllAboutAI-YT/hackernews-llm-search"
"AllAboutAI-YT/easy-local-rag" -> "ThomasJay/RAG"
"AllAboutAI-YT/easy-local-rag" -> "jgravelle/AutoGroq"
"AllAboutAI-YT/easy-local-rag" -> "pixegami/rag-tutorial-v2"
"AllAboutAI-YT/easy-local-rag" -> "AllAboutAI-YT/rag"
"AllAboutAI-YT/easy-local-rag" -> "coleam00/ai-agents-masterclass"
"AllAboutAI-YT/easy-local-rag" -> "samwit/langchain-tutorials" ["e"=1]
"AllAboutAI-YT/easy-local-rag" -> "technovangelist/videoprojects"
"AllAboutAI-YT/easy-local-rag" -> "samwit/llm-tutorials" ["e"=1]
"AllAboutAI-YT/easy-local-rag" -> "svpino/livekit-assistant" ["e"=1]
"AllAboutAI-YT/easy-local-rag" -> "tylerprogramming/ai" ["e"=1]
"emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC" -> "Exitium-DEV/HD2-Cheat-Launcher"
"emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC" -> "aixcoder-plugin/aiXcoder-7B"
"emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC" -> "emoisback/Helldivers-2-Hack-PoC"
"emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC" -> "yihong0618/tg_bot_collections" ["e"=1]
"emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC" -> "rocketseat-education/nlw-expert-react"
"emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC" -> "eknkc/ssr-benchmark"
"a-real-ai/pywinassistant" -> "jgravelle/AutoGroq"
"a-real-ai/pywinassistant" -> "xlang-ai/OSWorld" ["e"=1]
"a-real-ai/pywinassistant" -> "Doriandarko/maestro"
"a-real-ai/pywinassistant" -> "SawyerHood/tlbrowse"
"a-real-ai/pywinassistant" -> "McGill-NLP/webllama"
"a-real-ai/pywinassistant" -> "developersdigest/llm-answer-engine"
"a-real-ai/pywinassistant" -> "OpenInterpreter/01"
"a-real-ai/pywinassistant" -> "semanser/codel"
"a-real-ai/pywinassistant" -> "disler/poc-realtime-ai-assistant"
"a-real-ai/pywinassistant" -> "lavague-ai/LaVague"
"a-real-ai/pywinassistant" -> "VRSEN/agency-swarm"
"a-real-ai/pywinassistant" -> "PromtEngineer/Verbi"
"a-real-ai/pywinassistant" -> "xforceai/ide" ["e"=1]
"a-real-ai/pywinassistant" -> "EpistasisLab/KRAGEN" ["e"=1]
"a-real-ai/pywinassistant" -> "ILikeAI/AlwaysReddy" ["e"=1]
"neo4j-labs/llm-graph-builder" -> "microsoft/graphrag"
"neo4j-labs/llm-graph-builder" -> "neo4j/NaLLM" ["e"=1]
"neo4j-labs/llm-graph-builder" -> "BinNong/llm-graph-builder"
"neo4j-labs/llm-graph-builder" -> "gusye1234/nano-graphrag"
"neo4j-labs/llm-graph-builder" -> "severian42/GraphRAG-Local-UI"
"neo4j-labs/llm-graph-builder" -> "Azure-Samples/graphrag-accelerator" ["e"=1]
"neo4j-labs/llm-graph-builder" -> "OpenSPG/KAG"
"neo4j-labs/llm-graph-builder" -> "tomasonjo/blogs" ["e"=1]
"neo4j-labs/llm-graph-builder" -> "neo4j/neo4j-graphrag-python"
"neo4j-labs/llm-graph-builder" -> "getzep/graphiti"
"neo4j-labs/llm-graph-builder" -> "rahulnyk/knowledge_graph" ["e"=1]
"neo4j-labs/llm-graph-builder" -> "circlemind-ai/fast-graphrag"
"neo4j-labs/llm-graph-builder" -> "OSU-NLP-Group/HippoRAG"
"neo4j-labs/llm-graph-builder" -> "AuvaLab/itext2kg" ["e"=1]
"neo4j-labs/llm-graph-builder" -> "TheAiSingularity/graphrag-local-ollama"
"srcbookdev/srcbook" -> "Nutlope/llamacoder"
"srcbookdev/srcbook" -> "axflow/axflow"
"srcbookdev/srcbook" -> "onlook-dev/onlook" ["e"=1]
"srcbookdev/srcbook" -> "e2b-dev/fragments"
"srcbookdev/srcbook" -> "codestoryai/aide"
"srcbookdev/srcbook" -> "stackblitz-labs/bolt.diy"
"srcbookdev/srcbook" -> "groq/groq-appgen"
"srcbookdev/srcbook" -> "instantdb/instant" ["e"=1]
"srcbookdev/srcbook" -> "outerbase/studio" ["e"=1]
"srcbookdev/srcbook" -> "stack-auth/stack-auth" ["e"=1]
"srcbookdev/srcbook" -> "FrigadeHQ/trench" ["e"=1]
"srcbookdev/srcbook" -> "onejs/one" ["e"=1]
"srcbookdev/srcbook" -> "stackblitz/bolt.new"
"srcbookdev/srcbook" -> "hatchet-dev/hatchet" ["e"=1]
"srcbookdev/srcbook" -> "raidendotai/cofounder"
"entropy-research/Devon" -> "Doriandarko/maestro"
"entropy-research/Devon" -> "AutoCodeRoverSG/auto-code-rover"
"entropy-research/Devon" -> "Doriandarko/claude-engineer"
"entropy-research/Devon" -> "SWE-agent/SWE-agent"
"entropy-research/Devon" -> "e2b-dev/fragments"
"entropy-research/Devon" -> "MervinPraison/PraisonAI"
"entropy-research/Devon" -> "semanser/codel"
"entropy-research/Devon" -> "jgravelle/AutoGroq"
"entropy-research/Devon" -> "OpenInterpreter/01"
"entropy-research/Devon" -> "frdel/agent-zero"
"entropy-research/Devon" -> "BuilderIO/micro-agent"
"entropy-research/Devon" -> "weaviate/Verba"
"entropy-research/Devon" -> "Doriandarko/omni-engineer"
"entropy-research/Devon" -> "stitionai/devika"
"entropy-research/Devon" -> "rashadphz/farfalle"
"tinyfish-io/agentql" -> "sentient-engineering/agent-q"
"tinyfish-io/agentql" -> "infrahouse/infrahouse-toolkit"
"tinyfish-io/agentql" -> "YassKhazzan/openperplex_backend_os"
"tinyfish-io/agentql" -> "StreetLamb/tribe"
"tinyfish-io/agentql" -> "techwithtim/AI-Web-Scraper" ["e"=1]
"tinyfish-io/agentql" -> "browserbase/open-operator"
"tinyfish-io/agentql" -> "Clevrr-AI/Clevrr-Computer"
"tinyfish-io/agentql" -> "e2b-dev/open-computer-use"
"tinyfish-io/agentql" -> "supercorp-ai/superinterface" ["e"=1]
"tinyfish-io/agentql" -> "langchain-ai/agent-inbox"
"Danielskry/Awesome-RAG" -> "zhengxuJosh/Awesome-RAG-Vision" ["e"=1]
"Danielskry/Awesome-RAG" -> "coree/awesome-rag"
"Danielskry/Awesome-RAG" -> "frutik/Awesome-RAG"
"Danielskry/Awesome-RAG" -> "jxzhangjhu/Awesome-LLM-RAG"
"Danielskry/Awesome-RAG" -> "dontriskit/awesome-ai-system-prompts"
"Danielskry/Awesome-RAG" -> "wangwei1237/LLM_in_Action" ["e"=1]
"nlmatics/llmsherpa" -> "nlmatics/nlm-ingestor"
"nlmatics/llmsherpa" -> "run-llama/llama_cloud_services"
"nlmatics/llmsherpa" -> "Filimoa/open-parse"
"nlmatics/llmsherpa" -> "Unstructured-IO/unstructured"
"nlmatics/llmsherpa" -> "run-llama/sec-insights"
"nlmatics/llmsherpa" -> "AnswerDotAI/RAGatouille"
"nlmatics/llmsherpa" -> "explodinggradients/ragas"
"nlmatics/llmsherpa" -> "aurelio-labs/semantic-router"
"nlmatics/llmsherpa" -> "Raudaschl/rag-fusion"
"nlmatics/llmsherpa" -> "langroid/langroid"
"nlmatics/llmsherpa" -> "guardrails-ai/guardrails"
"nlmatics/llmsherpa" -> "katanaml/sparrow"
"nlmatics/llmsherpa" -> "deepdoctection/deepdoctection" ["e"=1]
"nlmatics/llmsherpa" -> "stanford-futuredata/ColBERT" ["e"=1]
"nlmatics/llmsherpa" -> "ray-project/llm-applications"
"emcie-co/parlant" -> "plurai-ai/intellagent"
"emcie-co/parlant" -> "getzep/graphiti"
"emcie-co/parlant" -> "simular-ai/Agent-S"
"emcie-co/parlant" -> "awslabs/agent-squad"
"emcie-co/parlant" -> "Zipstack/unstract"
"emcie-co/parlant" -> "HKUDS/AutoAgent"
"emcie-co/parlant" -> "comet-ml/opik"
"emcie-co/parlant" -> "QuivrHQ/MegaParse"
"emcie-co/parlant" -> "potpie-ai/potpie"
"emcie-co/parlant" -> "SciPhi-AI/R2R"
"emcie-co/parlant" -> "livekit/agents"
"emcie-co/parlant" -> "octotools/octotools"
"emcie-co/parlant" -> "browserbase/stagehand"
"emcie-co/parlant" -> "MotiaDev/motia"
"emcie-co/parlant" -> "microsoft/RD-Agent"
"sugarforever/chat-ollama" -> "missuo/FreeGPT35" ["e"=1]
"sugarforever/chat-ollama" -> "ivanfioravanti/chatbot-ollama"
"sugarforever/chat-ollama" -> "1Panel-dev/MaxKB"
"sugarforever/chat-ollama" -> "nashsu/FreeAskInternet"
"sugarforever/chat-ollama" -> "netease-youdao/QAnything"
"sugarforever/chat-ollama" -> "labring/FastGPT"
"sugarforever/chat-ollama" -> "win4r/AISuperDomain" ["e"=1]
"sugarforever/chat-ollama" -> "CrazyBoyM/llama3-Chinese-chat" ["e"=1]
"sugarforever/chat-ollama" -> "LLM-Red-Team/kimi-free-api" ["e"=1]
"sugarforever/chat-ollama" -> "aurora-develop/aurora" ["e"=1]
"sugarforever/chat-ollama" -> "severian42/GraphRAG-Local-UI"
"sugarforever/chat-ollama" -> "xorbitsai/inference"
"sugarforever/chat-ollama" -> "jina-ai/reader"
"sugarforever/chat-ollama" -> "songquanpeng/one-api" ["e"=1]
"sugarforever/chat-ollama" -> "sugarforever/wtf-langchain"
"openai/swarm" -> "microsoft/autogen"
"openai/swarm" -> "crewAIInc/crewAI"
"openai/swarm" -> "agno-agi/agno"
"openai/swarm" -> "microsoft/graphrag"
"openai/swarm" -> "stanfordnlp/dspy"
"openai/swarm" -> "mem0ai/mem0"
"openai/swarm" -> "openai/openai-agents-python"
"openai/swarm" -> "langchain-ai/langgraph"
"openai/swarm" -> "mendableai/firecrawl"
"openai/swarm" -> "run-llama/llama_index"
"openai/swarm" -> "BerriAI/litellm"
"openai/swarm" -> "All-Hands-AI/OpenHands"
"openai/swarm" -> "huggingface/smolagents"
"openai/swarm" -> "unclecode/crawl4ai"
"openai/swarm" -> "Cinnamon/kotaemon"
"decodingml/llm-twin-course" -> "iusztinpaul/hands-on-llms" ["e"=1]
"decodingml/llm-twin-course" -> "PacktPublishing/LLM-Engineers-Handbook"
"decodingml/llm-twin-course" -> "SylphAI-Inc/LLM-engineer-handbook"
"decodingml/llm-twin-course" -> "decodingml/second-brain-ai-assistant-course"
"decodingml/llm-twin-course" -> "fmind/mlops-python-package"
"decodingml/llm-twin-course" -> "SylphAI-Inc/AdalFlow"
"decodingml/llm-twin-course" -> "aishwaryanr/awesome-generative-ai-guide"
"decodingml/llm-twin-course" -> "NirDiamant/GenAI_Agents"
"decodingml/llm-twin-course" -> "NirDiamant/RAG_Techniques"
"decodingml/llm-twin-course" -> "graviraja/MLOps-Basics" ["e"=1]
"decodingml/llm-twin-course" -> "huggingface/smol-course"
"decodingml/llm-twin-course" -> "mlabonne/llm-datasets"
"decodingml/llm-twin-course" -> "decodingml/personalized-recommender-course"
"decodingml/llm-twin-course" -> "callmesora/llmops-python-package"
"decodingml/llm-twin-course" -> "iusztinpaul/energy-forecasting"
"mrdbourke/simple-local-rag" -> "langchain-ai/rag-from-scratch"
"mrdbourke/simple-local-rag" -> "mrdbourke/rag-resources"
"mrdbourke/simple-local-rag" -> "jonfairbanks/local-rag" ["e"=1]
"mrdbourke/simple-local-rag" -> "svpino/youtube-rag"
"mrdbourke/simple-local-rag" -> "mrdbourke/learn-transformers"
"mrdbourke/simple-local-rag" -> "mrdbourke/learn-huggingface"
"mrdbourke/simple-local-rag" -> "pixegami/langchain-rag-tutorial"
"mrdbourke/simple-local-rag" -> "AIAnytime/Chat-with-PDF-Chatbot"
"mrdbourke/simple-local-rag" -> "curiousily/AI-Bootcamp"
"pixegami/rag-tutorial-v2" -> "pixegami/langchain-rag-tutorial"
"pixegami/rag-tutorial-v2" -> "tonykipkemboi/ollama_pdf_rag"
"pixegami/rag-tutorial-v2" -> "curiousily/AI-Bootcamp"
"pixegami/rag-tutorial-v2" -> "AllAboutAI-YT/easy-local-rag"
"pixegami/rag-tutorial-v2" -> "ThomasJay/RAG"
"pixegami/rag-tutorial-v2" -> "technovangelist/videoprojects"
"pixegami/rag-tutorial-v2" -> "ShawhinT/YouTube-Blog"
"pixegami/rag-tutorial-v2" -> "pixegami/deploy-rag-to-aws"
"pixegami/rag-tutorial-v2" -> "brainqub3/jar3d_meta_expert"
"pixegami/rag-tutorial-v2" -> "samwit/langchain-tutorials" ["e"=1]
"pixegami/rag-tutorial-v2" -> "langchain-ai/rag-from-scratch"
"pixegami/rag-tutorial-v2" -> "Farzad-R/Advanced-QA-and-RAG-Series"
"pixegami/rag-tutorial-v2" -> "amscotti/local-LLM-with-RAG"
"rashadphz/farfalle" -> "miurla/morphic"
"rashadphz/farfalle" -> "ItzCrazyKns/Perplexica"
"rashadphz/farfalle" -> "developersdigest/llm-answer-engine"
"rashadphz/farfalle" -> "yokingma/search_with_ai" ["e"=1]
"rashadphz/farfalle" -> "nilsherzig/LLocalSearch"
"rashadphz/farfalle" -> "Omniplex-ai/omniplex"
"rashadphz/farfalle" -> "weaviate/Verba"
"rashadphz/farfalle" -> "InternLM/MindSearch"
"rashadphz/farfalle" -> "zaidmukaddam/scira"
"rashadphz/farfalle" -> "memfreeme/memfree"
"rashadphz/farfalle" -> "ragapp/ragapp"
"rashadphz/farfalle" -> "jgravelle/AutoGroq"
"rashadphz/farfalle" -> "Nutlope/turboseek"
"rashadphz/farfalle" -> "entropy-research/Devon"
"rashadphz/farfalle" -> "Doriandarko/maestro"
"MLSysOps/MLE-agent" -> "mikekelly/AgentK"
"MLSysOps/MLE-agent" -> "openai/mle-bench" ["e"=1]
"MLSysOps/MLE-agent" -> "WecoAI/aideml" ["e"=1]
"MLSysOps/MLE-agent" -> "ShengranHu/ADAS"
"MLSysOps/MLE-agent" -> "open-thought/system-2-research" ["e"=1]
"MLSysOps/MLE-agent" -> "sentient-engineering/sentient"
"MLSysOps/MLE-agent" -> "gptme/gptme"
"MLSysOps/MLE-agent" -> "supermemoryai/opensearch-ai"
"MLSysOps/MLE-agent" -> "InternLM/lagent" ["e"=1]
"MLSysOps/MLE-agent" -> "Zipstack/unstract"
"MLSysOps/MLE-agent" -> "ShoggothAI/motleycrew"
"MLSysOps/MLE-agent" -> "starpig1129/DATAGEN"
"MLSysOps/MLE-agent" -> "strnad/CrewAI-Studio" ["e"=1]
"MLSysOps/MLE-agent" -> "NeoVertex1/SuperPrompt"
"MLSysOps/MLE-agent" -> "wasiahmad/Awesome-LLM-Synthetic-Data" ["e"=1]
"transformerlab/transformerlab-app" -> "langwatch/langwatch"
"transformerlab/transformerlab-app" -> "simular-ai/Agent-S"
"transformerlab/transformerlab-app" -> "mcp-use/mcp-use"
"transformerlab/transformerlab-app" -> "patchy631/ai-engineering-hub"
"transformerlab/transformerlab-app" -> "HKUDS/AutoAgent"
"transformerlab/transformerlab-app" -> "getzep/graphiti"
"transformerlab/transformerlab-app" -> "PySpur-Dev/pyspur"
"transformerlab/transformerlab-app" -> "huggingface/smol-course"
"transformerlab/transformerlab-app" -> "MODSetter/SurfSense"
"transformerlab/transformerlab-app" -> "morphik-org/morphik-core"
"transformerlab/transformerlab-app" -> "trycua/cua"
"transformerlab/transformerlab-app" -> "plexe-ai/plexe"
"transformerlab/transformerlab-app" -> "simstudioai/sim"
"transformerlab/transformerlab-app" -> "comet-ml/opik"
"transformerlab/transformerlab-app" -> "gptme/gptme"
"mshumer/ai-journalist" -> "mshumer/ai-researcher"
"mshumer/ai-journalist" -> "mshumer/gpt-investor"
"mshumer/ai-journalist" -> "mshumer/gpt-author" ["e"=1]
"mshumer/ai-journalist" -> "hrishioa/lumentis"
"mshumer/ai-journalist" -> "Bklieger/infinite-bookshelf"
"mshumer/ai-journalist" -> "fatwang2/search2ai" ["e"=1]
"mshumer/ai-journalist" -> "rotemweiss57/gpt-newspaper"
"mshumer/ai-journalist" -> "mshumer/gpt-prompt-engineer"
"mshumer/ai-journalist" -> "fatwang2/search4all" ["e"=1]
"mshumer/ai-journalist" -> "siddrrsh/ambientGPT" ["e"=1]
"mshumer/ai-journalist" -> "mshumer/gpt-llm-trainer" ["e"=1]
"mshumer/ai-journalist" -> "svpino/livekit-assistant" ["e"=1]
"mshumer/ai-journalist" -> "thinkany-ai/rag-search" ["e"=1]
"mshumer/ai-journalist" -> "developersdigest/llm-answer-engine"
"mshumer/ai-journalist" -> "e2b-dev/e2b-cookbook"
"towardsai/ragbook-notebooks" -> "towardsai/ai-tutor-rag-system"
"towardsai/ragbook-notebooks" -> "callmesora/llmops-python-package"
"towardsai/ragbook-notebooks" -> "multinear-demo/demo-bank-support-lc-py"
"towardsai/ragbook-notebooks" -> "bhav09/Generative-AI-Resources"
"towardsai/ragbook-notebooks" -> "neural-maze/ava-whatsapp-agent-course"
"towardsai/ragbook-notebooks" -> "SylphAI-Inc/LLM-engineer-handbook"
"towardsai/ragbook-notebooks" -> "ashishpatel26/500-AI-Agents-Projects"
"livekit/agents" -> "pipecat-ai/pipecat"
"livekit/agents" -> "livekit/livekit" ["e"=1]
"livekit/agents" -> "TEN-framework/ten-framework"
"livekit/agents" -> "fixie-ai/ultravox"
"livekit/agents" -> "gptme/gptme"
"livekit/agents" -> "agno-agi/agno"
"livekit/agents" -> "mediar-ai/screenpipe"
"livekit/agents" -> "openai/openai-realtime-console"
"livekit/agents" -> "Zipstack/unstract"
"livekit/agents" -> "MervinPraison/PraisonAI"
"livekit/agents" -> "Skyvern-AI/skyvern"
"livekit/agents" -> "awslabs/agent-squad"
"livekit/agents" -> "openai/swarm"
"livekit/agents" -> "browserbase/stagehand"
"livekit/agents" -> "meta-llama/llama-stack"
"Galaxies-dev/chatgpt-clone-react-native" -> "ansh/deeperseeker-app"
"Galaxies-dev/chatgpt-clone-react-native" -> "shahriarsajeeb/Artifonia"
"yuruotong1/autoMate" -> "nanobrowser/nanobrowser"
"yuruotong1/autoMate" -> "langmanus/langmanus"
"yuruotong1/autoMate" -> "microsoft/RD-Agent"
"yuruotong1/autoMate" -> "langchain-ai/local-deep-researcher"
"yuruotong1/autoMate" -> "autoscrape-labs/pydoll"
"yuruotong1/autoMate" -> "bytedance/UI-TARS-desktop"
"yuruotong1/autoMate" -> "web-infra-dev/midscene"
"yuruotong1/autoMate" -> "camel-ai/owl"
"yuruotong1/autoMate" -> "bytedance/UI-TARS"
"yuruotong1/autoMate" -> "simular-ai/Agent-S"
"yuruotong1/autoMate" -> "refly-ai/refly"
"yuruotong1/autoMate" -> "kortix-ai/suna"
"yuruotong1/autoMate" -> "HKUDS/AutoAgent"
"yuruotong1/autoMate" -> "krillinai/KrillinAI"
"yuruotong1/autoMate" -> "jlowin/fastmcp"
"UdaraJay/Pile" -> "UdaraJay/Stats"
"UdaraJay/Pile" -> "mikelikesdesign/SwiftUI-experiments" ["e"=1]
"UdaraJay/Pile" -> "CapSoftware/Cap" ["e"=1]
"UdaraJay/Pile" -> "farzaa/freewrite"
"UdaraJay/Pile" -> "campsite/campsite" ["e"=1]
"UdaraJay/Pile" -> "jasonjmcghee/rem"
"UdaraJay/Pile" -> "raunofreiberg/interfaces" ["e"=1]
"UdaraJay/Pile" -> "chroxify/haptic" ["e"=1]
"UdaraJay/Pile" -> "UdaraJay/_stats"
"UdaraJay/Pile" -> "mainframecomputer/fullmoon-ios" ["e"=1]
"UdaraJay/Pile" -> "midday-ai/midday" ["e"=1]
"UdaraJay/Pile" -> "supermemoryai/supermemory"
"UdaraJay/Pile" -> "UdaraJay/atm"
"UdaraJay/Pile" -> "raphaelsalaja/sylph" ["e"=1]
"UdaraJay/Pile" -> "midday-ai/v1" ["e"=1]
"OpenInterpreter/01" -> "stitionai/devika"
"OpenInterpreter/01" -> "developersdigest/llm-answer-engine"
"OpenInterpreter/01" -> "OpenInterpreter/open-interpreter"
"OpenInterpreter/01" -> "Doriandarko/maestro"
"OpenInterpreter/01" -> "lavague-ai/LaVague"
"OpenInterpreter/01" -> "adamcohenhillel/ADeus"
"OpenInterpreter/01" -> "OthersideAI/self-operating-computer"
"OpenInterpreter/01" -> "vikhyat/moondream"
"OpenInterpreter/01" -> "BasedHardware/omi"
"OpenInterpreter/01" -> "mshumer/gpt-investor"
"OpenInterpreter/01" -> "mshumer/gpt-prompt-engineer"
"OpenInterpreter/01" -> "entropy-research/Devon"
"OpenInterpreter/01" -> "SWE-agent/SWE-agent"
"OpenInterpreter/01" -> "letta-ai/letta"
"OpenInterpreter/01" -> "agiresearch/AIOS"
"mongodb-developer/GenAI-Showcase" -> "patchy631/ai-engineering-hub"
"mongodb-developer/GenAI-Showcase" -> "NirDiamant/GenAI_Agents"
"mongodb-developer/GenAI-Showcase" -> "PacktPublishing/LLM-Engineers-Handbook"
"mongodb-developer/GenAI-Showcase" -> "SylphAI-Inc/LLM-engineer-handbook"
"mongodb-developer/GenAI-Showcase" -> "neural-maze/ava-whatsapp-agent-course"
"mongodb-developer/GenAI-Showcase" -> "KalyanKS-NLP/llm-engineer-toolkit"
"mongodb-developer/GenAI-Showcase" -> "NirDiamant/RAG_Techniques"
"mongodb-developer/GenAI-Showcase" -> "Shubhamsaboo/awesome-llm-apps"
"mongodb-developer/GenAI-Showcase" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"mongodb-developer/GenAI-Showcase" -> "decodingml/llm-twin-course"
"mongodb-developer/GenAI-Showcase" -> "comet-ml/opik"
"mongodb-developer/GenAI-Showcase" -> "aishwaryanr/awesome-generative-ai-guide"
"mongodb-developer/GenAI-Showcase" -> "hamzafarooq/building-llm-applications-from-scratch"
"mongodb-developer/GenAI-Showcase" -> "microsoft/ai-agents-for-beginners"
"mongodb-developer/GenAI-Showcase" -> "graviraja/MLOps-Basics" ["e"=1]
"curiousily/AI-Bootcamp" -> "Farzad-R/Advanced-QA-and-RAG-Series"
"curiousily/AI-Bootcamp" -> "curiousily/ragbase"
"curiousily/AI-Bootcamp" -> "NarimanN2/ollama-playground"
"curiousily/AI-Bootcamp" -> "AIAnytime/ChatCSV-Llama2-Chatbot"
"curiousily/AI-Bootcamp" -> "tonykipkemboi/ollama_pdf_rag"
"curiousily/AI-Bootcamp" -> "pixegami/rag-tutorial-v2"
"curiousily/AI-Bootcamp" -> "curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain" ["e"=1]
"curiousily/AI-Bootcamp" -> "tylerprogramming/ai" ["e"=1]
"curiousily/AI-Bootcamp" -> "trancethehuman/ai-workshop-code"
"curiousily/AI-Bootcamp" -> "ronidas39/LLMtutorial"
"curiousily/AI-Bootcamp" -> "sunnysavita10/Generative-AI-Indepth-Basic-to-Advance" ["e"=1]
"curiousily/AI-Bootcamp" -> "DhruvAtreja/datavisualization_langgraph"
"curiousily/AI-Bootcamp" -> "ayush714/customer-satisfaction-mlops" ["e"=1]
"curiousily/AI-Bootcamp" -> "samwit/langchain-tutorials" ["e"=1]
"developersdigest/llm-answer-engine" -> "miurla/morphic"
"developersdigest/llm-answer-engine" -> "nilsherzig/LLocalSearch"
"developersdigest/llm-answer-engine" -> "ItzCrazyKns/Perplexica"
"developersdigest/llm-answer-engine" -> "Doriandarko/maestro"
"developersdigest/llm-answer-engine" -> "rashadphz/farfalle"
"developersdigest/llm-answer-engine" -> "nashsu/FreeAskInternet"
"developersdigest/llm-answer-engine" -> "jina-ai/reader"
"developersdigest/llm-answer-engine" -> "cohere-ai/cohere-toolkit"
"developersdigest/llm-answer-engine" -> "semanser/codel"
"developersdigest/llm-answer-engine" -> "jasonppy/VoiceCraft" ["e"=1]
"developersdigest/llm-answer-engine" -> "OpenInterpreter/01"
"developersdigest/llm-answer-engine" -> "agiresearch/AIOS"
"developersdigest/llm-answer-engine" -> "leptonai/search_with_lepton"
"developersdigest/llm-answer-engine" -> "SWE-agent/SWE-agent"
"developersdigest/llm-answer-engine" -> "lavague-ai/LaVague"
"raphaelmansuy/code2prompt" -> "farouqaldori/aiformat"
"raphaelmansuy/code2prompt" -> "mufeedvh/code2prompt"
"raphaelmansuy/code2prompt" -> "quantalogic/quantalogic"
"raphaelmansuy/code2prompt" -> "quantalogic/qllm"
"raphaelmansuy/code2prompt" -> "mckaywrigley/buildware-ai"
"raphaelmansuy/code2prompt" -> "guocaoyi/create-chrome-ext" ["e"=1]
"raphaelmansuy/code2prompt" -> "elizaOS/twitter-scraper-finetune" ["e"=1]
"raphaelmansuy/code2prompt" -> "OpenAutoCoder/Agentless" ["e"=1]
"raphaelmansuy/code2prompt" -> "VictorTaelin/AI-scripts" ["e"=1]
"raphaelmansuy/code2prompt" -> "udecode/dotai"
"raphaelmansuy/code2prompt" -> "elizaOS/agent-twitter-client"
"raphaelmansuy/code2prompt" -> "Doriandarko/claude-engineer"
"raphaelmansuy/code2prompt" -> "Dicklesworthstone/your-source-to-prompt.html"
"raphaelmansuy/code2prompt" -> "murrlincoln/Based-Agent" ["e"=1]
"raphaelmansuy/code2prompt" -> "patched-codes/patchwork" ["e"=1]
"PacktPublishing/LLM-Engineers-Handbook" -> "SylphAI-Inc/LLM-engineer-handbook"
"PacktPublishing/LLM-Engineers-Handbook" -> "decodingml/llm-twin-course"
"PacktPublishing/LLM-Engineers-Handbook" -> "SylphAI-Inc/AdalFlow"
"PacktPublishing/LLM-Engineers-Handbook" -> "decodingml/second-brain-ai-assistant-course"
"PacktPublishing/LLM-Engineers-Handbook" -> "fmind/mlops-python-package"
"PacktPublishing/LLM-Engineers-Handbook" -> "mlabonne/llm-datasets"
"PacktPublishing/LLM-Engineers-Handbook" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"PacktPublishing/LLM-Engineers-Handbook" -> "callmesora/llmops-python-package"
"PacktPublishing/LLM-Engineers-Handbook" -> "iusztinpaul/hands-on-llms" ["e"=1]
"PacktPublishing/LLM-Engineers-Handbook" -> "chiphuyen/aie-book"
"PacktPublishing/LLM-Engineers-Handbook" -> "huggingface/smol-course"
"PacktPublishing/LLM-Engineers-Handbook" -> "neural-maze/ava-whatsapp-agent-course"
"PacktPublishing/LLM-Engineers-Handbook" -> "neural-maze/agentic-patterns-course"
"PacktPublishing/LLM-Engineers-Handbook" -> "mongodb-developer/GenAI-Showcase"
"PacktPublishing/LLM-Engineers-Handbook" -> "NirDiamant/GenAI_Agents"
"SylphAI-Inc/AdalFlow" -> "SylphAI-Inc/LLM-engineer-handbook"
"SylphAI-Inc/AdalFlow" -> "zou-group/textgrad"
"SylphAI-Inc/AdalFlow" -> "PacktPublishing/LLM-Engineers-Handbook"
"SylphAI-Inc/AdalFlow" -> "decodingml/llm-twin-course"
"SylphAI-Inc/AdalFlow" -> "fmind/mlops-python-package"
"SylphAI-Inc/AdalFlow" -> "stanfordnlp/dspy"
"SylphAI-Inc/AdalFlow" -> "chonkie-ai/chonkie"
"SylphAI-Inc/AdalFlow" -> "Lightning-AI/LitServe"
"SylphAI-Inc/AdalFlow" -> "dottxt-ai/outlines"
"SylphAI-Inc/AdalFlow" -> "meta-llama/llama-stack"
"SylphAI-Inc/AdalFlow" -> "confident-ai/deepeval"
"SylphAI-Inc/AdalFlow" -> "callmesora/llmops-python-package"
"SylphAI-Inc/AdalFlow" -> "huggingface/smol-course"
"SylphAI-Inc/AdalFlow" -> "mlabonne/llm-datasets"
"SylphAI-Inc/AdalFlow" -> "guardrails-ai/guardrails"
"vikhyat/moondream" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"vikhyat/moondream" -> "OpenInterpreter/01"
"vikhyat/moondream" -> "OpenBMB/MiniCPM-o" ["e"=1]
"vikhyat/moondream" -> "jasonppy/VoiceCraft" ["e"=1]
"vikhyat/moondream" -> "haotian-liu/LLaVA" ["e"=1]
"vikhyat/moondream" -> "letta-ai/letta"
"vikhyat/moondream" -> "VikParuchuri/surya"
"vikhyat/moondream" -> "roboflow/supervision"
"vikhyat/moondream" -> "THUDM/CogVLM" ["e"=1]
"vikhyat/moondream" -> "metavoiceio/metavoice-src" ["e"=1]
"vikhyat/moondream" -> "jzhang38/TinyLlama" ["e"=1]
"vikhyat/moondream" -> "lavague-ai/LaVague"
"vikhyat/moondream" -> "unslothai/unsloth"
"vikhyat/moondream" -> "Lightning-AI/litgpt"
"vikhyat/moondream" -> "pipecat-ai/pipecat"
"yoheinakajima/mindgraph" -> "yoheinakajima/prettygraph" ["e"=1]
"yoheinakajima/mindgraph" -> "yoheinakajima/instagraph" ["e"=1]
"yoheinakajima/mindgraph" -> "topoteretes/cognee"
"yoheinakajima/mindgraph" -> "kingjulio8238/Memary"
"yoheinakajima/mindgraph" -> "mshumer/ai-researcher"
"yoheinakajima/mindgraph" -> "yoheinakajima/babyagi-2o"
"yoheinakajima/mindgraph" -> "e2b-dev/e2b-cookbook"
"yoheinakajima/mindgraph" -> "Doriandarko/maestro"
"yoheinakajima/mindgraph" -> "cognitivecomputations/github2file"
"yoheinakajima/mindgraph" -> "C0deMunk33/bespoke_automata"
"daveshap/OpenAI_Agent_Swarm" -> "daveshap/ACE_Framework"
"daveshap/OpenAI_Agent_Swarm" -> "daveshap/ChatGPT_Custom_Instructions"
"daveshap/OpenAI_Agent_Swarm" -> "VRSEN/agency-swarm"
"daveshap/OpenAI_Agent_Swarm" -> "daveshap/SparsePrimingRepresentations"
"daveshap/OpenAI_Agent_Swarm" -> "SawyerHood/draw-a-ui"
"daveshap/OpenAI_Agent_Swarm" -> "langchain-ai/opengpts"
"daveshap/OpenAI_Agent_Swarm" -> "microsoft/TaskWeaver"
"daveshap/OpenAI_Agent_Swarm" -> "letta-ai/letta"
"daveshap/OpenAI_Agent_Swarm" -> "disler/multi-agent-postgres-data-analytics"
"daveshap/OpenAI_Agent_Swarm" -> "daveshap/BSHR_Loop"
"daveshap/OpenAI_Agent_Swarm" -> "ishan0102/vimGPT"
"daveshap/OpenAI_Agent_Swarm" -> "OthersideAI/self-operating-computer"
"daveshap/OpenAI_Agent_Swarm" -> "aiwaves-cn/agents" ["e"=1]
"daveshap/OpenAI_Agent_Swarm" -> "xlang-ai/OpenAgents" ["e"=1]
"daveshap/OpenAI_Agent_Swarm" -> "OpenBMB/XAgent" ["e"=1]
"huggingface/cookbook" -> "mistralai/cookbook"
"huggingface/cookbook" -> "huggingface/datatrove" ["e"=1]
"huggingface/cookbook" -> "huggingface/alignment-handbook" ["e"=1]
"huggingface/cookbook" -> "huggingface/lighteval" ["e"=1]
"huggingface/cookbook" -> "huggingface/computer-vision-course" ["e"=1]
"huggingface/cookbook" -> "huggingface/huggingface-llama-recipes" ["e"=1]
"huggingface/cookbook" -> "huggingface/evaluation-guidebook"
"huggingface/cookbook" -> "argilla-io/distilabel" ["e"=1]
"huggingface/cookbook" -> "mlabonne/llm-datasets"
"huggingface/cookbook" -> "huggingface/nanotron" ["e"=1]
"huggingface/cookbook" -> "huggingface/smol-course"
"huggingface/cookbook" -> "SylphAI-Inc/AdalFlow"
"huggingface/cookbook" -> "stanfordnlp/pyreft" ["e"=1]
"huggingface/cookbook" -> "arcee-ai/mergekit" ["e"=1]
"huggingface/cookbook" -> "NVIDIA/GenerativeAIExamples"
"DrewThomasson/ebook2audiobook" -> "stanford-oval/storm"
"DrewThomasson/ebook2audiobook" -> "FujiwaraChoki/MoneyPrinterV2"
"DrewThomasson/ebook2audiobook" -> "santinic/audiblez"
"DrewThomasson/ebook2audiobook" -> "fishaudio/fish-speech" ["e"=1]
"DrewThomasson/ebook2audiobook" -> "khoj-ai/khoj"
"DrewThomasson/ebook2audiobook" -> "Huanshere/VideoLingo"
"DrewThomasson/ebook2audiobook" -> "getmaxun/maxun"
"DrewThomasson/ebook2audiobook" -> "Byaidu/PDFMathTranslate"
"DrewThomasson/ebook2audiobook" -> "ItzCrazyKns/Perplexica"
"DrewThomasson/ebook2audiobook" -> "zaidmukaddam/scira"
"DrewThomasson/ebook2audiobook" -> "unclecode/crawl4ai"
"DrewThomasson/ebook2audiobook" -> "elizaOS/eliza"
"DrewThomasson/ebook2audiobook" -> "Shubhamsaboo/awesome-llm-apps"
"DrewThomasson/ebook2audiobook" -> "karakeep-app/karakeep" ["e"=1]
"DrewThomasson/ebook2audiobook" -> "krillinai/KrillinAI"
"Filimoa/open-parse" -> "poloclub/unitable" ["e"=1]
"Filimoa/open-parse" -> "nlmatics/llmsherpa"
"Filimoa/open-parse" -> "chonkie-ai/chonkie"
"Filimoa/open-parse" -> "nlmatics/nlm-ingestor"
"Filimoa/open-parse" -> "deepdoctection/deepdoctection" ["e"=1]
"Filimoa/open-parse" -> "D-Star-AI/dsRAG"
"Filimoa/open-parse" -> "run-llama/llama_cloud_services"
"Filimoa/open-parse" -> "AlibabaResearch/AdvancedLiterateMachinery" ["e"=1]
"Filimoa/open-parse" -> "Unstructured-IO/unstructured"
"Filimoa/open-parse" -> "AnswerDotAI/RAGatouille"
"Filimoa/open-parse" -> "katanaml/sparrow"
"Filimoa/open-parse" -> "explodinggradients/ragas"
"Filimoa/open-parse" -> "SciPhi-AI/R2R"
"Filimoa/open-parse" -> "DocumindHQ/documind" ["e"=1]
"Filimoa/open-parse" -> "adithya-s-k/omniparse"
"louisfb01/start-llms" -> "louisfb01/start-machine-learning" ["e"=1]
"louisfb01/start-llms" -> "wikit-ai/awesome-llm-courses"
"louisfb01/start-llms" -> "peremartra/Large-Language-Model-Notebooks-Course"
"louisfb01/start-llms" -> "iusztinpaul/hands-on-llms" ["e"=1]
"louisfb01/start-llms" -> "ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing"
"louisfb01/start-llms" -> "towardsai/ragbook-notebooks"
"louisfb01/start-llms" -> "iusztinpaul/energy-forecasting"
"louisfb01/start-llms" -> "ashishpatel26/LLM-Finetuning"
"louisfb01/start-llms" -> "fmind/mlops-python-package"
"louisfb01/start-llms" -> "RamiKrispin/lang2sql" ["e"=1]
"louisfb01/start-llms" -> "youssefHosni/Getting-Started-with-Generative-AI" ["e"=1]
"louisfb01/start-llms" -> "dswh/ai-engineer-roadmap" ["e"=1]
"louisfb01/start-llms" -> "mistralai/cookbook"
"louisfb01/start-llms" -> "Paulescu/hands-on-rl" ["e"=1]
"louisfb01/start-llms" -> "neural-maze/ava-whatsapp-agent-course"
"BinNong/meet-libai" -> "BinNong/llm-graph-builder"
"BinNong/meet-libai" -> "littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27"
"BinNong/meet-libai" -> "honeyandme/RAGQnASystem"
"BinNong/meet-libai" -> "neo4j-labs/llm-graph-builder"
"BinNong/meet-libai" -> "PeterH0323/Streamer-Sales" ["e"=1]
"BinNong/meet-libai" -> "zjunlp/KnowLM" ["e"=1]
"BinNong/meet-libai" -> "yuntianhe2014/Easy-RAG"
"BinNong/meet-libai" -> "echonoshy/cgft-llm" ["e"=1]
"BinNong/meet-libai" -> "IDEA-FinAI/ToG" ["e"=1]
"BinNong/meet-libai" -> "zjunlp/DeepKE" ["e"=1]
"BinNong/meet-libai" -> "CosmosShadow/gptpdf"
"BinNong/meet-libai" -> "severian42/GraphRAG-Local-UI"
"BinNong/meet-libai" -> "liuhuanyong/RAGOnMedicalKG"
"BinNong/meet-libai" -> "wisherg/python_data_course"
"BinNong/meet-libai" -> "gusye1234/nano-graphrag"
"elfvingralf/macOSpilot-ai-assistant" -> "jasonjmcghee/rem"
"elfvingralf/macOSpilot-ai-assistant" -> "bricks-cloud/BricksLLM"
"elfvingralf/macOSpilot-ai-assistant" -> "varunshenoy/opendream" ["e"=1]
"elfvingralf/macOSpilot-ai-assistant" -> "gregsadetsky/sagittarius" ["e"=1]
"elfvingralf/macOSpilot-ai-assistant" -> "aymenfurter/microagents"
"elfvingralf/macOSpilot-ai-assistant" -> "ishan0102/vimGPT"
"elfvingralf/macOSpilot-ai-assistant" -> "kevinhermawan/Ollamac"
"elfvingralf/macOSpilot-ai-assistant" -> "SecureAI-Tools/SecureAI-Tools" ["e"=1]
"elfvingralf/macOSpilot-ai-assistant" -> "DropbaseHQ/dropbase"
"elfvingralf/macOSpilot-ai-assistant" -> "matiasmolinas/evolving-agents"
"elfvingralf/macOSpilot-ai-assistant" -> "Planetary-Computers/autotab-starter"
"elfvingralf/macOSpilot-ai-assistant" -> "mayt/BrowserGPT" ["e"=1]
"elfvingralf/macOSpilot-ai-assistant" -> "widgetti/wanderlust"
"elfvingralf/macOSpilot-ai-assistant" -> "Mozilla-Ocho/Memory-Cache"
"elfvingralf/macOSpilot-ai-assistant" -> "finic-ai/finic"
"MLOps-Courses/mlops-coding-course" -> "fmind/mlops-python-package"
"MLOps-Courses/mlops-coding-course" -> "fmind/cookiecutter-mlops-package"
"MLOps-Courses/mlops-coding-course" -> "callmesora/llmops-python-package"
"MLOps-Courses/mlops-coding-course" -> "marvelousmlops/mlops-roadmap-2024"
"MLOps-Courses/mlops-coding-course" -> "NannyML/The-Little-Book-of-ML-Metrics"
"MLOps-Courses/mlops-coding-course" -> "iusztinpaul/energy-forecasting"
"MLOps-Courses/mlops-coding-course" -> "databricks/mlops-stacks" ["e"=1]
"MLOps-Courses/mlops-coding-course" -> "decodingml/second-brain-ai-assistant-course"
"MLOps-Courses/mlops-coding-course" -> "decodingml/personalized-recommender-course"
"MLOps-Courses/mlops-coding-course" -> "decodingml/llm-twin-course"
"anthropics/prompt-eng-interactive-tutorial" -> "anthropics/anthropic-cookbook"
"anthropics/prompt-eng-interactive-tutorial" -> "anthropics/courses"
"anthropics/prompt-eng-interactive-tutorial" -> "langgptai/awesome-claude-prompts" ["e"=1]
"anthropics/prompt-eng-interactive-tutorial" -> "anthropics/anthropic-quickstarts"
"anthropics/prompt-eng-interactive-tutorial" -> "microsoft/PromptWizard"
"anthropics/prompt-eng-interactive-tutorial" -> "microsoft/TinyTroupe"
"anthropics/prompt-eng-interactive-tutorial" -> "QuivrHQ/MegaParse"
"anthropics/prompt-eng-interactive-tutorial" -> "souzatharsis/podcastfy"
"anthropics/prompt-eng-interactive-tutorial" -> "patchy631/ai-engineering-hub"
"anthropics/prompt-eng-interactive-tutorial" -> "awslabs/agent-squad"
"anthropics/prompt-eng-interactive-tutorial" -> "NirDiamant/GenAI_Agents"
"anthropics/prompt-eng-interactive-tutorial" -> "google-gemini/cookbook"
"anthropics/prompt-eng-interactive-tutorial" -> "NirDiamant/Prompt_Engineering"
"anthropics/prompt-eng-interactive-tutorial" -> "pydantic/pydantic-ai"
"anthropics/prompt-eng-interactive-tutorial" -> "mufeedvh/code2prompt"
"ageerle/ruoyi-ai" -> "ageerle/ruoyi-admin"
"ageerle/ruoyi-ai" -> "ageerle/ruoyi-web"
"ageerle/ruoyi-ai" -> "alibaba/spring-ai-alibaba" ["e"=1]
"ageerle/ruoyi-ai" -> "ageerle/ruoyi-uniapp"
"ageerle/ruoyi-ai" -> "linshenkx/prompt-optimizer"
"ageerle/ruoyi-ai" -> "GuijiAI/HeyGem.ai" ["e"=1]
"ageerle/ruoyi-ai" -> "Grt1228/chatgpt-java" ["e"=1]
"ageerle/ruoyi-ai" -> "svcvit/Awesome-Dify-Workflow"
"ageerle/ruoyi-ai" -> "krillinai/KrillinAI"
"ageerle/ruoyi-ai" -> "yangjian102621/geekai" ["e"=1]
"ageerle/ruoyi-ai" -> "ourongxing/newsnow"
"ageerle/ruoyi-ai" -> "bytedance/UI-TARS-desktop"
"ageerle/ruoyi-ai" -> "Dooy/chatgpt-web-midjourney-proxy" ["e"=1]
"ageerle/ruoyi-ai" -> "aingdesk/AingDesk" ["e"=1]
"ageerle/ruoyi-ai" -> "hncboy/ai-beehive" ["e"=1]
"Lightning-AI/LitServe" -> "Lightning-AI/lightning-thunder" ["e"=1]
"Lightning-AI/LitServe" -> "Lightning-AI/litgpt"
"Lightning-AI/LitServe" -> "SylphAI-Inc/AdalFlow"
"Lightning-AI/LitServe" -> "Lightning-AI/litData" ["e"=1]
"Lightning-AI/LitServe" -> "callmesora/llmops-python-package"
"Lightning-AI/LitServe" -> "pydantic/pydantic-ai"
"Lightning-AI/LitServe" -> "pytorch/torchtune" ["e"=1]
"Lightning-AI/LitServe" -> "pytorch/torchchat" ["e"=1]
"Lightning-AI/LitServe" -> "meta-llama/llama-stack"
"Lightning-AI/LitServe" -> "mlabonne/llm-datasets"
"Lightning-AI/LitServe" -> "chonkie-ai/chonkie"
"Lightning-AI/LitServe" -> "tadata-org/fastapi_mcp"
"Lightning-AI/LitServe" -> "mesop-dev/mesop"
"Lightning-AI/LitServe" -> "PacktPublishing/LLM-Engineers-Handbook"
"Lightning-AI/LitServe" -> "argilla-io/argilla" ["e"=1]
"enoch3712/ExtractThinker" -> "imanoop7/Ollama-OCR"
"enoch3712/ExtractThinker" -> "CatchTheTornado/text-extract-api"
"enoch3712/ExtractThinker" -> "echohive42/AI-reads-books-page-by-page"
"enoch3712/ExtractThinker" -> "GitHamza0206/simba"
"enoch3712/ExtractThinker" -> "pymupdf/RAG"
"enoch3712/ExtractThinker" -> "iamarunbrahma/vision-parse" ["e"=1]
"enoch3712/ExtractThinker" -> "X-PLUG/mPLUG-DocOwl" ["e"=1]
"enoch3712/ExtractThinker" -> "QuivrHQ/MegaParse"
"enoch3712/ExtractThinker" -> "tjmlabs/ColiVara"
"enoch3712/ExtractThinker" -> "NVIDIA/nv-ingest"
"enoch3712/ExtractThinker" -> "Zipstack/unstract"
"enoch3712/ExtractThinker" -> "katanaml/sparrow"
"enoch3712/ExtractThinker" -> "superlinear-ai/raglite"
"enoch3712/ExtractThinker" -> "KruxAI/ragbuilder"
"enoch3712/ExtractThinker" -> "JSv4/OpenContracts"
"bernardo-bruning/ollama-copilot" -> "ex3ndr/llama-coder"
"bernardo-bruning/ollama-copilot" -> "sammcj/gollama"
"bernardo-bruning/ollama-copilot" -> "mrdjohnson/llm-x"
"bernardo-bruning/ollama-copilot" -> "nomnivore/ollama.nvim" ["e"=1]
"bernardo-bruning/ollama-copilot" -> "twinnydotdev/twinny"
"bernardo-bruning/ollama-copilot" -> "tgraupmann/WinForm_Ollama_Copilot"
"bernardo-bruning/ollama-copilot" -> "HelgeSverre/ollama-gui"
"MervinPraison/PraisonAI" -> "Doriandarko/maestro"
"MervinPraison/PraisonAI" -> "jgravelle/AutoGroq"
"MervinPraison/PraisonAI" -> "crewAIInc/crewAI-examples"
"MervinPraison/PraisonAI" -> "VRSEN/agency-swarm"
"MervinPraison/PraisonAI" -> "AgentOps-AI/agentops"
"MervinPraison/PraisonAI" -> "frdel/agent-zero"
"MervinPraison/PraisonAI" -> "agno-agi/agno"
"MervinPraison/PraisonAI" -> "crewAIInc/crewAI"
"MervinPraison/PraisonAI" -> "e2b-dev/fragments"
"MervinPraison/PraisonAI" -> "Zipstack/unstract"
"MervinPraison/PraisonAI" -> "livekit/agents"
"MervinPraison/PraisonAI" -> "kyegomez/swarms"
"MervinPraison/PraisonAI" -> "letta-ai/letta"
"MervinPraison/PraisonAI" -> "microsoft/PromptWizard"
"MervinPraison/PraisonAI" -> "lavague-ai/LaVague"
"ragapp/ragapp" -> "weaviate/Verba"
"ragapp/ragapp" -> "run-llama/create-llama"
"ragapp/ragapp" -> "truefoundry/cognita"
"ragapp/ragapp" -> "run-llama/llama_cloud_services"
"ragapp/ragapp" -> "lavague-ai/LaVague"
"ragapp/ragapp" -> "cohere-ai/cohere-toolkit"
"ragapp/ragapp" -> "Doriandarko/maestro"
"ragapp/ragapp" -> "iyaja/llama-fs"
"ragapp/ragapp" -> "agno-agi/agno"
"ragapp/ragapp" -> "run-llama/llama_deploy"
"ragapp/ragapp" -> "MervinPraison/PraisonAI"
"ragapp/ragapp" -> "ItzCrazyKns/Perplexica"
"ragapp/ragapp" -> "rashadphz/farfalle"
"ragapp/ragapp" -> "developersdigest/llm-answer-engine"
"ragapp/ragapp" -> "Dataherald/dataherald" ["e"=1]
"allwefantasy/auto-coder" -> "allwefantasy/byzer-llm"
"allwefantasy/auto-coder" -> "w4n9H/autocoder-nano"
"allwefantasy/auto-coder" -> "byzer-org/byzer-lang" ["e"=1]
"allwefantasy/auto-coder" -> "unit-mesh/build-your-ai-coding-assistant"
"allwefantasy/auto-coder" -> "allwefantasy/william-toolbox"
"allwefantasy/auto-coder" -> "bin123apple/AutoCoder"
"allwefantasy/auto-coder" -> "unit-mesh/unit-minions" ["e"=1]
"allwefantasy/auto-coder" -> "allwefantasy/auto-coder.web"
"allwefantasy/auto-coder" -> "xuwenhao/mactalk-ai-course"
"allwefantasy/auto-coder" -> "unit-mesh/auto-dev"
"allwefantasy/auto-coder" -> "microsoft/PIKE-RAG"
"allwefantasy/auto-coder" -> "AgentEra/Agently-Daily-News-Collector" ["e"=1]
"allwefantasy/auto-coder" -> "phodal/shire"
"allwefantasy/auto-coder" -> "DataScienceUIBK/Rankify"
"leptonai/search_with_lepton" -> "leptonai/leptonai" ["e"=1]
"leptonai/search_with_lepton" -> "netease-youdao/QAnything"
"leptonai/search_with_lepton" -> "miurla/morphic"
"leptonai/search_with_lepton" -> "nashsu/FreeAskInternet"
"leptonai/search_with_lepton" -> "InternLM/MindSearch"
"leptonai/search_with_lepton" -> "developersdigest/llm-answer-engine"
"leptonai/search_with_lepton" -> "ItzCrazyKns/Perplexica"
"leptonai/search_with_lepton" -> "labring/FastGPT"
"leptonai/search_with_lepton" -> "FlagOpen/FlagEmbedding" ["e"=1]
"leptonai/search_with_lepton" -> "jina-ai/reader"
"leptonai/search_with_lepton" -> "eosphoros-ai/DB-GPT"
"leptonai/search_with_lepton" -> "thinkany-ai/rag-search" ["e"=1]
"leptonai/search_with_lepton" -> "songquanpeng/one-api" ["e"=1]
"leptonai/search_with_lepton" -> "mem0ai/mem0"
"leptonai/search_with_lepton" -> "QwenLM/Qwen-Agent"
"antirez/botlib" -> "wesbos/hot-tips"
"antirez/botlib" -> "teslamotors/roadster" ["e"=1]
"antirez/botlib" -> "yihong0618/tg_bot_collections" ["e"=1]
"antirez/botlib" -> "tidwall/neco" ["e"=1]
"antirez/botlib" -> "emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC"
"antirez/botlib" -> "antirez/smallchat" ["e"=1]
"antirez/botlib" -> "rochus-keller/CspChan"
"antirez/botlib" -> "smartnode/telebot" ["e"=1]
"antirez/botlib" -> "aixcoder-plugin/aiXcoder-7B"
"antirez/botlib" -> "mttaggart/I-S00N"
"aixcoder-plugin/aiXcoder-7B" -> "PabloMK7/citra" ["e"=1]
"aixcoder-plugin/aiXcoder-7B" -> "eknkc/ssr-benchmark"
"aixcoder-plugin/aiXcoder-7B" -> "emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC"
"aixcoder-plugin/aiXcoder-7B" -> "dvlab-research/MGM" ["e"=1]
"aixcoder-plugin/aiXcoder-7B" -> "nashsu/FreeAskInternet"
"aixcoder-plugin/aiXcoder-7B" -> "regolith-labs/ore-cli"
"aixcoder-plugin/aiXcoder-7B" -> "PKU-YuanGroup/Open-Sora-Plan" ["e"=1]
"aixcoder-plugin/aiXcoder-7B" -> "OpenCodeInterpreter/OpenCodeInterpreter"
"aixcoder-plugin/aiXcoder-7B" -> "huggingface/parler-tts" ["e"=1]
"aixcoder-plugin/aiXcoder-7B" -> "apple/corenet" ["e"=1]
"aixcoder-plugin/aiXcoder-7B" -> "suyu-emu/suyu" ["e"=1]
"aixcoder-plugin/aiXcoder-7B" -> "bigcode-project/starcoder2" ["e"=1]
"aixcoder-plugin/aiXcoder-7B" -> "mttaggart/I-S00N"
"aixcoder-plugin/aiXcoder-7B" -> "plandex-ai/plandex"
"aixcoder-plugin/aiXcoder-7B" -> "codefuse-ai/Awesome-Code-LLM" ["e"=1]
"SapienzaNLP/relik" -> "jackboyla/GLiREL"
"SapienzaNLP/relik" -> "SapienzaNLP/maverick-coref"
"SapienzaNLP/relik" -> "Babelscape/rebel" ["e"=1]
"SapienzaNLP/relik" -> "urchade/GLiNER"
"SapienzaNLP/relik" -> "SapienzaNLP/extend" ["e"=1]
"SapienzaNLP/relik" -> "tomaarsen/SpanMarkerNER"
"SapienzaNLP/relik" -> "Babelscape/WSL"
"SapienzaNLP/relik" -> "amazon-science/ReFinED" ["e"=1]
"SapienzaNLP/relik" -> "DerwenAI/strwythura"
"SapienzaNLP/relik" -> "DeepGraphLearning/ULTRA" ["e"=1]
"ntegrals/aura-voice" -> "ai-ng/swift"
"ntegrals/aura-voice" -> "deepgram-starters/nextjs-live-transcription" ["e"=1]
"ntegrals/aura-voice" -> "TransformerOptimus/SuperCoder"
"ntegrals/aura-voice" -> "roboflow/awesome-openai-vision-api-experiments" ["e"=1]
"ntegrals/aura-voice" -> "langchain-ai/langchainjs"
"ntegrals/aura-voice" -> "langchain-ai/opengpts"
"ntegrals/aura-voice" -> "MervinPraison/PraisonAI"
"ntegrals/aura-voice" -> "samwit/langchain-tutorials" ["e"=1]
"ntegrals/aura-voice" -> "roboflow/notebooks" ["e"=1]
"ntegrals/aura-voice" -> "tensorzero/tensorzero"
"ntegrals/aura-voice" -> "langchain-ai/langgraph"
"ntegrals/aura-voice" -> "Helicone/helicone"
"Tongji-KGLLM/RAG-Survey" -> "hymie122/RAG-Survey"
"Tongji-KGLLM/RAG-Survey" -> "AkariAsai/self-rag"
"Tongji-KGLLM/RAG-Survey" -> "RUC-NLPIR/FlashRAG"
"Tongji-KGLLM/RAG-Survey" -> "jxzhangjhu/Awesome-LLM-RAG"
"Tongji-KGLLM/RAG-Survey" -> "FlagOpen/FlagEmbedding" ["e"=1]
"Tongji-KGLLM/RAG-Survey" -> "zjukg/KG-LLM-Papers" ["e"=1]
"Tongji-KGLLM/RAG-Survey" -> "lizhe2004/Awesome-LLM-RAG-Application"
"Tongji-KGLLM/RAG-Survey" -> "explodinggradients/ragas"
"Tongji-KGLLM/RAG-Survey" -> "Paitesanshi/LLM-Agent-Survey" ["e"=1]
"Tongji-KGLLM/RAG-Survey" -> "WooooDyy/LLM-Agent-Paper-List" ["e"=1]
"Tongji-KGLLM/RAG-Survey" -> "DSXiangLi/DecryptPrompt" ["e"=1]
"Tongji-KGLLM/RAG-Survey" -> "HillZhang1999/llm-hallucination-survey" ["e"=1]
"Tongji-KGLLM/RAG-Survey" -> "RUCAIBox/LLMSurvey" ["e"=1]
"Tongji-KGLLM/RAG-Survey" -> "NovaSearch-Team/RAG-Retrieval"
"Tongji-KGLLM/RAG-Survey" -> "parthsarthi03/raptor"
"mistralai/cookbook" -> "mistralai/mistral-finetune" ["e"=1]
"mistralai/cookbook" -> "huggingface/cookbook"
"mistralai/cookbook" -> "run-llama/create-llama"
"mistralai/cookbook" -> "mistralai/client-python" ["e"=1]
"mistralai/cookbook" -> "run-llama/llama_cloud_services"
"mistralai/cookbook" -> "decodingml/llm-twin-course"
"mistralai/cookbook" -> "merveenoyan/smol-vision"
"mistralai/cookbook" -> "SylphAI-Inc/AdalFlow"
"mistralai/cookbook" -> "mistralai/mistral-common" ["e"=1]
"mistralai/cookbook" -> "starpig1129/DATAGEN"
"mistralai/cookbook" -> "huggingface/evaluation-guidebook"
"mistralai/cookbook" -> "weaviate/recipes"
"mistralai/cookbook" -> "mlabonne/llm-datasets"
"mistralai/cookbook" -> "PacktPublishing/LLM-Engineers-Handbook"
"mistralai/cookbook" -> "neural-maze/ava-whatsapp-agent-course"
"neo4j/neo4j-graphrag-python" -> "neo4j-labs/llm-graph-builder"
"neo4j/neo4j-graphrag-python" -> "DEEP-PolyU/Awesome-GraphRAG" ["e"=1]
"neo4j/neo4j-graphrag-python" -> "jbarrasa/goingmeta" ["e"=1]
"neo4j/neo4j-graphrag-python" -> "NanGePlus/GraphragTest"
"neo4j/neo4j-graphrag-python" -> "neo4j-labs/text2cypher" ["e"=1]
"neo4j/neo4j-graphrag-python" -> "Airmomo/graphrag-practice-chinese"
"neo4j/neo4j-graphrag-python" -> "a-s-g93/neo4j-runway" ["e"=1]
"neo4j/neo4j-graphrag-python" -> "neo4j-contrib/mcp-neo4j" ["e"=1]
"neo4j/neo4j-graphrag-python" -> "ksachdeva/langchain-graphrag"
"neo4j/neo4j-graphrag-python" -> "severian42/GraphRAG-Local-UI"
"neo4j/neo4j-graphrag-python" -> "gusye1234/nano-graphrag"
"neo4j/neo4j-graphrag-python" -> "whyhow-ai/knowledge-graph-studio"
"neo4j/neo4j-graphrag-python" -> "BinNong/llm-graph-builder"
"neo4j/neo4j-graphrag-python" -> "noworneverev/graphrag-visualizer"
"neo4j/neo4j-graphrag-python" -> "Coding-Crashkurse/GraphRAG-with-Llama-3.1"
"deep-diver/hf-daily-paper-newsletter" -> "deep-diver/auto-paper-analysis"
"mlabonne/llm-datasets" -> "Zjh-819/LLMDataHub" ["e"=1]
"mlabonne/llm-datasets" -> "argilla-io/distilabel" ["e"=1]
"mlabonne/llm-datasets" -> "arcee-ai/mergekit" ["e"=1]
"mlabonne/llm-datasets" -> "PacktPublishing/LLM-Engineers-Handbook"
"mlabonne/llm-datasets" -> "huggingface/alignment-handbook" ["e"=1]
"mlabonne/llm-datasets" -> "huggingface/smol-course"
"mlabonne/llm-datasets" -> "EleutherAI/lm-evaluation-harness" ["e"=1]
"mlabonne/llm-datasets" -> "lmmlzn/Awesome-LLMs-Datasets" ["e"=1]
"mlabonne/llm-datasets" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"mlabonne/llm-datasets" -> "decodingml/llm-twin-course"
"mlabonne/llm-datasets" -> "huggingface/datatrove" ["e"=1]
"mlabonne/llm-datasets" -> "huggingface/lighteval" ["e"=1]
"mlabonne/llm-datasets" -> "wasiahmad/Awesome-LLM-Synthetic-Data" ["e"=1]
"mlabonne/llm-datasets" -> "SylphAI-Inc/LLM-engineer-handbook"
"mlabonne/llm-datasets" -> "SylphAI-Inc/AdalFlow"
"abi/secret-llama" -> "mlc-ai/web-llm"
"abi/secret-llama" -> "alessiodm/drl-zh" ["e"=1]
"abi/secret-llama" -> "nilsherzig/LLocalSearch"
"abi/secret-llama" -> "reorproject/reor"
"abi/secret-llama" -> "Dataherald/dataherald" ["e"=1]
"abi/secret-llama" -> "xenova/whisper-web" ["e"=1]
"abi/secret-llama" -> "developersdigest/llm-answer-engine"
"abi/secret-llama" -> "kingjulio8238/Memary"
"abi/secret-llama" -> "McGill-NLP/webllama"
"abi/secret-llama" -> "Skyvern-AI/skyvern"
"abi/secret-llama" -> "metaskills/experts"
"abi/secret-llama" -> "pipecat-ai/pipecat"
"abi/secret-llama" -> "menloresearch/ichigo"
"abi/secret-llama" -> "alexpinel/Dot"
"abi/secret-llama" -> "ScrapeGraphAI/Scrapegraph-ai"
"tjmlabs/AgentRun" -> "substratusai/sandboxai"
"AnswerDotAI/claudette" -> "AnswerDotAI/cosette"
"AnswerDotAI/claudette" -> "AnswerDotAI/fastlite"
"AnswerDotAI/claudette" -> "AnswerDotAI/shell_sage"
"AnswerDotAI/claudette" -> "AnswerDotAI/toolslm"
"AnswerDotAI/claudette" -> "parlance-labs/ftcourse"
"AnswerDotAI/claudette" -> "AnswerDotAI/fastsql"
"AnswerDotAI/claudette" -> "AnswerDotAI/web2md"
"VILA-Lab/ATLAS" -> "lim-hyo-jeong/Prompt-Enhancer"
"VILA-Lab/ATLAS" -> "microsoft/LLMLingua"
"VILA-Lab/ATLAS" -> "TencentARC/LLaMA-Pro" ["e"=1]
"VILA-Lab/ATLAS" -> "daveshap/ChatGPT_Custom_Instructions"
"VILA-Lab/ATLAS" -> "lypsoty112/Prompt-builder"
"VILA-Lab/ATLAS" -> "AnswerDotAI/RAGatouille"
"VILA-Lab/ATLAS" -> "sarthakrastogi/quality-prompts"
"VILA-Lab/ATLAS" -> "mshumer/ai-researcher"
"VILA-Lab/ATLAS" -> "hkust-nlp/deita" ["e"=1]
"VILA-Lab/ATLAS" -> "ianarawjo/ChainForge"
"VILA-Lab/ATLAS" -> "huggingface/cosmopedia" ["e"=1]
"VILA-Lab/ATLAS" -> "GPT-Fathom/GPT-Fathom" ["e"=1]
"VILA-Lab/ATLAS" -> "openai/simple-evals" ["e"=1]
"VILA-Lab/ATLAS" -> "baaivision/JudgeLM" ["e"=1]
"VILA-Lab/ATLAS" -> "microsoft/promptbase"
"containers/podman-desktop-extension-ai-lab" -> "containers/ai-lab-recipes"
"cdump/evmole" -> "earos-ai/aw-client"
"cdump/evmole" -> "Slick-ux/Telegram-VPN-Bot-3X-UI"
"cdump/evmole" -> "lee-sihun/djmax-keyviewer"
"cdump/evmole" -> "Profichefsorn77/telegramdm-bot"
"cdump/evmole" -> "Grimmy01/Nodepay-Bot"
"cdump/evmole" -> "kingkej/ExtraLottie"
"cdump/evmole" -> "hmpl-language/hmpl"
"cdump/evmole" -> "melihsoft/adamant"
"cdump/evmole" -> "Vorolski/pump-fun-ultimate"
"cdump/evmole" -> "scoundrella76/comit"
"cdump/evmole" -> "globalonex/Matrix"
"cdump/evmole" -> "IreneBarnard/crypto-playground"
"cdump/evmole" -> "Burka111/Burka111"
"cdump/evmole" -> "Dze237/Gospecia-VPN-Website"
"cdump/evmole" -> "Trylz/RestirFalcor"
"FreeterApp/Freeter" -> "Vincent-liuwingsang/unlost"
"datvodinh/rag-chatbot" -> "Nagi-ovo/CRAG-Ollama-Chat"
"datvodinh/rag-chatbot" -> "umbertogriffo/rag-chatbot"
"datvodinh/rag-chatbot" -> "reid41/QA-Pilot"
"datvodinh/rag-chatbot" -> "AlaGrine/RAG_chatabot_with_Langchain"
"datvodinh/rag-chatbot" -> "tgraupmann/WinForm_Ollama_Copilot"
"datvodinh/rag-chatbot" -> "michelderu/build-your-own-rag-chatbot"
"datvodinh/rag-chatbot" -> "Abhi5h3k/PrivateDocBot" ["e"=1]
"datvodinh/rag-chatbot" -> "leoneversberg/llm-chatbot-rag"
"datvodinh/rag-chatbot" -> "kaifcoder/gemini_multipdf_chat"
"datvodinh/rag-chatbot" -> "avrabyt/RAG-Chatbot"
"apache/openwhisk-external-resources" -> "ibm-functions/composer"
"apache/openwhisk-external-resources" -> "apache/openwhisk-debugger"
"apache/openwhisk-external-resources" -> "ibm-functions/shell"
"apache/openwhisk-external-resources" -> "apache/openwhisk-client-js"
"apache/openwhisk-external-resources" -> "apache/openwhisk-wskdeploy"
"apache/openwhisk-external-resources" -> "IBM-Cloud/openwhisk-workshops"
"cyberus-technology/virtualbox-kvm" -> "Pandora-Labs-Org/erc404-legacy" ["e"=1]
"cyberus-technology/virtualbox-kvm" -> "0xacme/ERC404" ["e"=1]
"cyberus-technology/virtualbox-kvm" -> "magicbear/palworld-server-toolkit" ["e"=1]
"cyberus-technology/virtualbox-kvm" -> "GoogleCloudPlatform/localllm"
"cyberus-technology/virtualbox-kvm" -> "eknkc/ssr-benchmark"
"cyberus-technology/virtualbox-kvm" -> "cyberus-technology/cloud-hypervisor"
"cyberus-technology/virtualbox-kvm" -> "atopile/atopile" ["e"=1]
"cyberus-technology/virtualbox-kvm" -> "mttaggart/I-S00N"
"cyberus-technology/virtualbox-kvm" -> "JHRobotics/softgpu" ["e"=1]
"cyberus-technology/virtualbox-kvm" -> "cyberus-technology/hedron"
"cyberus-technology/virtualbox-kvm" -> "mapup/MapUp-Data-Assessment-F"
"cyberus-technology/virtualbox-kvm" -> "emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC"
"cyberus-technology/virtualbox-kvm" -> "ubuygold/go-noss" ["e"=1]
"cyberus-technology/virtualbox-kvm" -> "awslabs/llrt" ["e"=1]
"cyberus-technology/virtualbox-kvm" -> "skiff-org/skiff-apps"
"michaelfeil/infinity" -> "huggingface/text-embeddings-inference" ["e"=1]
"michaelfeil/infinity" -> "qdrant/fastembed"
"michaelfeil/infinity" -> "AnswerDotAI/RAGatouille"
"michaelfeil/infinity" -> "AnswerDotAI/rerankers"
"michaelfeil/infinity" -> "aphrodite-engine/aphrodite-engine" ["e"=1]
"michaelfeil/infinity" -> "illuin-tech/colpali"
"michaelfeil/infinity" -> "xhluca/bm25s"
"michaelfeil/infinity" -> "speaches-ai/speaches" ["e"=1]
"michaelfeil/infinity" -> "predibase/lorax" ["e"=1]
"michaelfeil/infinity" -> "PrithivirajDamodaran/FlashRank"
"michaelfeil/infinity" -> "urchade/GLiNER"
"michaelfeil/infinity" -> "mixedbread-ai/batched"
"michaelfeil/infinity" -> "dstackai/dstack" ["e"=1]
"michaelfeil/infinity" -> "sgl-project/sglang" ["e"=1]
"michaelfeil/infinity" -> "AnswerDotAI/byaldi"
"jasonjmcghee/rem" -> "jasonjmcghee/xrem"
"jasonjmcghee/rem" -> "apirrone/Memento"
"jasonjmcghee/rem" -> "elfvingralf/macOSpilot-ai-assistant"
"jasonjmcghee/rem" -> "yuka-friends/Windrecorder"
"jasonjmcghee/rem" -> "OwlAIProject/Owl"
"jasonjmcghee/rem" -> "DO-SAY-GO/dn" ["e"=1]
"jasonjmcghee/rem" -> "UdaraJay/Pile"
"jasonjmcghee/rem" -> "Vincent-liuwingsang/unlost"
"jasonjmcghee/rem" -> "wojciech-kulik/FlashSpace" ["e"=1]
"jasonjmcghee/rem" -> "AndrewWalsh/openapi-devtools" ["e"=1]
"jasonjmcghee/rem" -> "eschluntz/compress" ["e"=1]
"jasonjmcghee/rem" -> "heyman/heynote" ["e"=1]
"jasonjmcghee/rem" -> "jasonjmcghee/plock"
"jasonjmcghee/rem" -> "Surfer-Org/Protocol"
"jasonjmcghee/rem" -> "yl4579/StyleTTS2" ["e"=1]
"Gaurav-Gosain/gollama" -> "Gaurav-Gosain/ollamanager"
"Gaurav-Gosain/gollama" -> "CodersHQ-AI-ML-Community/ai-confluence"
"pymupdf/RAG" -> "pymupdf/PyMuPDF" ["e"=1]
"pymupdf/RAG" -> "enoch3712/ExtractThinker"
"pymupdf/RAG" -> "pymupdf/PyMuPDF-Utilities" ["e"=1]
"pymupdf/RAG" -> "opendatalab/OmniDocBench" ["e"=1]
"pymupdf/RAG" -> "VikParuchuri/pdftext" ["e"=1]
"pymupdf/RAG" -> "run-llama/llama_cloud_services"
"pymupdf/RAG" -> "nlmatics/nlm-ingestor"
"pymupdf/RAG" -> "OpenBMB/VisRAG"
"pymupdf/RAG" -> "Filimoa/open-parse"
"pymupdf/RAG" -> "nlmatics/llmsherpa"
"pymupdf/RAG" -> "FullStackRetrieval-com/RetrievalTutorials"
"pymupdf/RAG" -> "pypdfium2-team/pypdfium2" ["e"=1]
"pymupdf/RAG" -> "benitomartin/multimodal-llm-pymupdf4llm"
"pymupdf/RAG" -> "Softlandia-Ltd/vision-is-all-you-need"
"pymupdf/RAG" -> "huridocs/pdf-document-layout-analysis" ["e"=1]
"reid41/QA-Pilot" -> "reid41/shell-pilot"
"EndoTheDev/Awesome-Ollama" -> "mrdjohnson/llm-x"
"EndoTheDev/Awesome-Ollama" -> "drazdra/ollama-chats"
"EndoTheDev/Awesome-Ollama" -> "not-nullptr/ollama-functions"
"EndoTheDev/Awesome-Ollama" -> "jake83741/vnc-lm"
"apify/crawlee-python" -> "apify/crawlee"
"apify/crawlee-python" -> "ScrapeGraphAI/Scrapegraph-ai"
"apify/crawlee-python" -> "stanford-oval/storm"
"apify/crawlee-python" -> "mendableai/firecrawl"
"apify/crawlee-python" -> "unclecode/crawl4ai"
"apify/crawlee-python" -> "D4Vinci/Scrapling"
"apify/crawlee-python" -> "Skyvern-AI/skyvern"
"apify/crawlee-python" -> "QuivrHQ/MegaParse"
"apify/crawlee-python" -> "mem0ai/mem0"
"apify/crawlee-python" -> "agno-agi/agno"
"apify/crawlee-python" -> "Doriandarko/maestro"
"apify/crawlee-python" -> "mesop-dev/mesop"
"apify/crawlee-python" -> "MervinPraison/PraisonAI"
"apify/crawlee-python" -> "VikParuchuri/surya"
"apify/crawlee-python" -> "getmaxun/maxun"
"adamcohenhillel/ADeus" -> "Nutlope/notesGPT"
"adamcohenhillel/ADeus" -> "OwlAIProject/Owl"
"adamcohenhillel/ADeus" -> "BasedHardware/omi"
"adamcohenhillel/ADeus" -> "BasedHardware/Whomane"
"adamcohenhillel/ADeus" -> "OpenInterpreter/01"
"adamcohenhillel/ADeus" -> "reorproject/reor"
"adamcohenhillel/ADeus" -> "miurla/morphic"
"adamcohenhillel/ADeus" -> "BCG-X-Official/agentkit"
"adamcohenhillel/ADeus" -> "BasedHardware/OpenGlass"
"adamcohenhillel/ADeus" -> "developersdigest/llm-answer-engine"
"adamcohenhillel/ADeus" -> "metavoiceio/metavoice-src" ["e"=1]
"adamcohenhillel/ADeus" -> "Stability-AI/StableCascade" ["e"=1]
"adamcohenhillel/ADeus" -> "argmaxinc/WhisperKit" ["e"=1]
"adamcohenhillel/ADeus" -> "AbanteAI/rawdog"
"adamcohenhillel/ADeus" -> "LargeWorldModel/LWM" ["e"=1]
"e2b-dev/code-interpreter" -> "e2b-dev/e2b-cookbook"
"e2b-dev/code-interpreter" -> "e2b-dev/fragments"
"e2b-dev/code-interpreter" -> "e2b-dev/infra"
"e2b-dev/code-interpreter" -> "e2b-dev/E2B" ["e"=1]
"e2b-dev/code-interpreter" -> "run-llama/create-llama"
"e2b-dev/code-interpreter" -> "langchain-ai/open-canvas"
"e2b-dev/code-interpreter" -> "tjmlabs/AgentRun"
"e2b-dev/code-interpreter" -> "cohere-ai/cohere-toolkit"
"e2b-dev/code-interpreter" -> "transitive-bullshit/openai-realtime-api" ["e"=1]
"e2b-dev/code-interpreter" -> "e2b-dev/open-computer-use"
"e2b-dev/code-interpreter" -> "developersdigest/llm-answer-engine"
"e2b-dev/code-interpreter" -> "kturung/langgraph_streamlit_codeassistant"
"e2b-dev/code-interpreter" -> "Doriandarko/omni-engineer"
"e2b-dev/code-interpreter" -> "e2b-dev/desktop"
"e2b-dev/code-interpreter" -> "entropy-research/Devon"
"run-llama/create-llama" -> "ragapp/ragapp"
"run-llama/create-llama" -> "run-llama/llama_deploy"
"run-llama/create-llama" -> "run-llama/llama_cloud_services"
"run-llama/create-llama" -> "run-llama/LlamaIndexTS"
"run-llama/create-llama" -> "run-llama/llamacloud-demo"
"run-llama/create-llama" -> "run-llama/chat-llamaindex"
"run-llama/create-llama" -> "run-llama/multi-agent-concierge"
"run-llama/create-llama" -> "e2b-dev/code-interpreter"
"run-llama/create-llama" -> "kturung/langgraph_streamlit_codeassistant"
"run-llama/create-llama" -> "virattt/financial-agent-ui"
"run-llama/create-llama" -> "KruxAI/ragbuilder"
"run-llama/create-llama" -> "run-llama/sec-insights"
"run-llama/create-llama" -> "mistralai/cookbook"
"run-llama/create-llama" -> "run-llama/chat-ui"
"run-llama/create-llama" -> "AgentOps-AI/AgentStack"
"instructlab/taxonomy" -> "instructlab/community"
"instructlab/taxonomy" -> "instructlab/instructlab"
"instructlab/taxonomy" -> "instructlab/sdg"
"instructlab/taxonomy" -> "instructlab/training"
"instructlab/taxonomy" -> "containers/ai-lab-recipes"
"instructlab/taxonomy" -> "instructlab/instructlab-bot"
"instructlab/instructlab" -> "instructlab/taxonomy"
"instructlab/instructlab" -> "instructlab/community"
"instructlab/instructlab" -> "RedHatOfficial/rhelai-dev-preview"
"instructlab/instructlab" -> "i-am-bee/beeai-framework"
"instructlab/instructlab" -> "containers/ramalama"
"instructlab/instructlab" -> "ibm-granite/granite-code-models"
"instructlab/instructlab" -> "redhat-cop/agnosticd" ["e"=1]
"instructlab/instructlab" -> "crc-org/crc" ["e"=1]
"instructlab/instructlab" -> "bootc-dev/bootc" ["e"=1]
"instructlab/instructlab" -> "IBM/unitxt"
"instructlab/instructlab" -> "IBM/ibm-generative-ai"
"instructlab/instructlab" -> "data-prep-kit/data-prep-kit"
"instructlab/instructlab" -> "caikit/caikit"
"instructlab/instructlab" -> "containers/ai-lab-recipes"
"instructlab/instructlab" -> "instructlab/sdg"
"srikanth235/privy" -> "srikanth235/benchllama"
"srikanth235/privy" -> "twinnydotdev/twinny"
"srikanth235/privy" -> "ex3ndr/llama-coder"
"srikanth235/privy" -> "rubberduck-ai/rubberduck-vscode"
"semanser/codel" -> "developersdigest/llm-answer-engine"
"semanser/codel" -> "AutoCodeRoverSG/auto-code-rover"
"semanser/codel" -> "Doriandarko/maestro"
"semanser/codel" -> "agiresearch/AIOS"
"semanser/codel" -> "entropy-research/Devon"
"semanser/codel" -> "lavague-ai/LaVague"
"semanser/codel" -> "stitionai/devika"
"semanser/codel" -> "nilsherzig/LLocalSearch"
"semanser/codel" -> "MervinPraison/PraisonAI"
"semanser/codel" -> "plandex-ai/plandex"
"semanser/codel" -> "mshumer/gpt-investor"
"semanser/codel" -> "OpenInterpreter/01"
"semanser/codel" -> "superagent-ai/superagent" ["e"=1]
"semanser/codel" -> "McGill-NLP/webllama"
"semanser/codel" -> "SWE-agent/SWE-agent"
"ai-ng/magic-spell" -> "ai-ng/2txt"
"trypear/pearai-app-archive" -> "trypear/pearai-submodule"
"trypear/pearai-app-archive" -> "trypear/pearai-app"
"trypear/pearai-app-archive" -> "trypear/pearai-master"
"trypear/pearai-app-archive" -> "trypear/pear-landing-page"
"trypear/pearai-app-archive" -> "voideditor/void"
"trypear/pearai-app-archive" -> "meltylabs/melty"
"trypear/pearai-app-archive" -> "Doriandarko/omni-engineer"
"trypear/pearai-app-archive" -> "Nutlope/llamacoder"
"trypear/pearai-app-archive" -> "e2b-dev/fragments"
"trypear/pearai-app-archive" -> "miurla/morphic"
"trypear/pearai-app-archive" -> "continuedev/continue"
"trypear/pearai-app-archive" -> "stackblitz/bolt.new"
"trypear/pearai-app-archive" -> "zaidmukaddam/scira"
"trypear/pearai-app-archive" -> "supermemoryai/supermemory"
"supermemoryai/markdowner" -> "supermemoryai/supermemory"
"supermemoryai/markdowner" -> "Dhravya/cloudflare-saas-stack" ["e"=1]
"supermemoryai/markdowner" -> "supermemoryai/opensearch-ai"
"supermemoryai/markdowner" -> "Dhravya/backend-api-kit" ["e"=1]
"supermemoryai/markdowner" -> "udecode/dotai"
"supermemoryai/markdowner" -> "macsplit/urltomarkdown"
"supermemoryai/markdowner" -> "ixahmedxi/orbitkit" ["e"=1]
"supermemoryai/markdowner" -> "anysphere/priompt"
"supermemoryai/markdowner" -> "jina-ai/reader"
"supermemoryai/markdowner" -> "midday-ai/v1" ["e"=1]
"supermemoryai/markdowner" -> "ishaan1013/sandbox" ["e"=1]
"supermemoryai/markdowner" -> "routerso/router" ["e"=1]
"supermemoryai/markdowner" -> "miurla/morphic"
"supermemoryai/markdowner" -> "timb-103/saas-starter-stack" ["e"=1]
"supermemoryai/markdowner" -> "e2b-dev/code-interpreter"
"stanford-oval/WikiChat" -> "codelion/optillm"
"stanford-oval/WikiChat" -> "TheBlewish/Automated-AI-Web-Researcher-Ollama"
"stanford-oval/WikiChat" -> "KwaiKEG/KwaiAgents" ["e"=1]
"stanford-oval/WikiChat" -> "predibase/lorax" ["e"=1]
"stanford-oval/WikiChat" -> "snexus/llm-search"
"stanford-oval/WikiChat" -> "stanford-futuredata/ColBERT" ["e"=1]
"stanford-oval/WikiChat" -> "e-p-armstrong/augmentoolkit" ["e"=1]
"stanford-oval/WikiChat" -> "Marker-Inc-Korea/AutoRAG"
"stanford-oval/WikiChat" -> "arcee-ai/mergekit" ["e"=1]
"stanford-oval/WikiChat" -> "aphrodite-engine/aphrodite-engine" ["e"=1]
"stanford-oval/WikiChat" -> "lmg-anon/mikupad" ["e"=1]
"stanford-oval/WikiChat" -> "v2rockets/Loyal-Elephie" ["e"=1]
"stanford-oval/WikiChat" -> "huggingface/alignment-handbook" ["e"=1]
"stanford-oval/WikiChat" -> "chonkie-ai/chonkie"
"stanford-oval/WikiChat" -> "neuml/txtai"
"instructlab/community" -> "instructlab/taxonomy"
"instructlab/community" -> "instructlab/instructlab-bot"
"elicit/machine-learning-list" -> "eugeneyan/llm-paper-notes" ["e"=1]
"elicit/machine-learning-list" -> "careywyr/UnderstandingDeepLearning-ZH-CN" ["e"=1]
"elicit/machine-learning-list" -> "decodingml/llm-twin-course"
"elicit/machine-learning-list" -> "KalyanKS-NLP/rag-zero-to-hero-guide"
"elicit/machine-learning-list" -> "PandaBearLab/prompt-tutorial" ["e"=1]
"elicit/machine-learning-list" -> "ShixiangWang/pybook" ["e"=1]
"elicit/machine-learning-list" -> "swyxio/ai-notes" ["e"=1]
"elicit/machine-learning-list" -> "KalyanKS-NLP/llm-engineer-toolkit"
"elicit/machine-learning-list" -> "dezoito/ollama-grid-search" ["e"=1]
"elicit/machine-learning-list" -> "xiaochengcike/Ai-learn" ["e"=1]
"elicit/machine-learning-list" -> "tanishqkumar/beyond-nanogpt" ["e"=1]
"elicit/machine-learning-list" -> "BragAI/bRAG-langchain"
"elicit/machine-learning-list" -> "e2b-dev/code-interpreter"
"elicit/machine-learning-list" -> "cohere-ai/cohere-toolkit"
"elicit/machine-learning-list" -> "Nutlope/llamatutor"
"langchain-ai/opengpts" -> "letta-ai/letta"
"langchain-ai/opengpts" -> "microsoft/inshellisense" ["e"=1]
"langchain-ai/opengpts" -> "Chainlit/chainlit"
"langchain-ai/opengpts" -> "langchain-ai/chat-langchain" ["e"=1]
"langchain-ai/opengpts" -> "superagent-ai/superagent" ["e"=1]
"langchain-ai/opengpts" -> "xlang-ai/OpenAgents" ["e"=1]
"langchain-ai/opengpts" -> "microsoft/TaskWeaver"
"langchain-ai/opengpts" -> "langchain-ai/langserve" ["e"=1]
"langchain-ai/opengpts" -> "langchain-ai/langgraph"
"langchain-ai/opengpts" -> "assafelovic/gpt-researcher"
"langchain-ai/opengpts" -> "daveshap/OpenAI_Agent_Swarm"
"langchain-ai/opengpts" -> "mshumer/gpt-prompt-engineer"
"langchain-ai/opengpts" -> "BerriAI/litellm"
"langchain-ai/opengpts" -> "crewAIInc/crewAI"
"langchain-ai/opengpts" -> "567-labs/instructor"
"ai-ng/2txt" -> "ai-ng/magic-spell"
"ai-ng/2txt" -> "ai-ng/swift"
"Eladlev/AutoPrompt" -> "microsoft/PromptWizard"
"Eladlev/AutoPrompt" -> "microsoft/LLMLingua"
"Eladlev/AutoPrompt" -> "keirp/automatic_prompt_engineer" ["e"=1]
"Eladlev/AutoPrompt" -> "mshumer/gpt-prompt-engineer"
"Eladlev/AutoPrompt" -> "argilla-io/distilabel" ["e"=1]
"Eladlev/AutoPrompt" -> "developersdigest/llm-answer-engine"
"Eladlev/AutoPrompt" -> "confident-ai/deepeval"
"Eladlev/AutoPrompt" -> "explodinggradients/ragas"
"Eladlev/AutoPrompt" -> "stanfordnlp/dspy"
"Eladlev/AutoPrompt" -> "microsoft/promptbench"
"Eladlev/AutoPrompt" -> "microsoft/sammo" ["e"=1]
"Eladlev/AutoPrompt" -> "lavague-ai/LaVague"
"Eladlev/AutoPrompt" -> "agiresearch/AIOS"
"Eladlev/AutoPrompt" -> "Azure/PyRIT" ["e"=1]
"Eladlev/AutoPrompt" -> "argilla-io/argilla" ["e"=1]
"marvelousmlops/mlops-roadmap-2024" -> "MLOps-Courses/mlops-coding-course"
"marvelousmlops/mlops-roadmap-2024" -> "fmind/mlops-python-package"
"marvelousmlops/mlops-roadmap-2024" -> "trojrobert/MLOps_roadmap_and_curriculum"
"marvelousmlops/mlops-roadmap-2024" -> "iusztinpaul/energy-forecasting"
"marvelousmlops/mlops-roadmap-2024" -> "fmind/cookiecutter-mlops-package"
"loopwork-ai/ollama-swift" -> "NSHipster/Nominate"
"loopwork-ai/ollama-swift" -> "pointfreeco/swift-sharing" ["e"=1]
"loopwork-ai/ollama-swift" -> "loopwork-ai/iMCP"
"loopwork-ai/ollama-swift" -> "kevinhermawan/OllamaKit"
"loopwork-ai/ollama-swift" -> "modelcontextprotocol/swift-sdk" ["e"=1]
"loopwork-ai/ollama-swift" -> "finnvoor/SwiftUIFX"
"loopwork-ai/ollama-swift" -> "StreamUI/StreamUI.swift"
"loopwork-ai/ollama-swift" -> "drewmccormack/Forked" ["e"=1]
"andersrex/notesollama" -> "kevinhermawan/OllamaKit"
"andersrex/notesollama" -> "hinterdupfinger/obsidian-ollama" ["e"=1]
"andersrex/notesollama" -> "Renset/macai"
"andersrex/notesollama" -> "devrsi0n/awesome-apple-notes"
"andersrex/notesollama" -> "PicoMLX/PicoMLXServer" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "RUC-NLPIR/FlashRAG"
"NovaSearch-Team/RAG-Retrieval" -> "wangyuxinwhy/uniem" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "hymie122/RAG-Survey"
"NovaSearch-Team/RAG-Retrieval" -> "castorini/rank_llm" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "FlagOpen/FlagEmbedding" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "gomate-community/TrustRAG" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "texttron/tevatron" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "RUC-NLPIR/LLM4IR-Survey" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "xbmxb/RAG-query-rewriting" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "nomic-ai/contrastors" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "netease-youdao/BCEmbedding" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "Tongji-KGLLM/RAG-Survey"
"NovaSearch-Team/RAG-Retrieval" -> "BUAADreamer/EasyRAG" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "luyug/Reranker" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "amazon-science/RAGChecker"
"pixegami/langchain-rag-tutorial" -> "pixegami/rag-tutorial-v2"
"pixegami/langchain-rag-tutorial" -> "ThomasJay/RAG"
"pixegami/langchain-rag-tutorial" -> "tonykipkemboi/ollama_pdf_rag"
"pixegami/langchain-rag-tutorial" -> "avrabyt/RAG-Chatbot"
"pixegami/langchain-rag-tutorial" -> "blackinkkkxi/RAG_langchain" ["e"=1]
"pixegami/langchain-rag-tutorial" -> "AllAboutAI-YT/easy-local-rag"
"pixegami/langchain-rag-tutorial" -> "alejandro-ao/chat-with-websites" ["e"=1]
"pixegami/langchain-rag-tutorial" -> "langchain-ai/rag-from-scratch"
"pixegami/langchain-rag-tutorial" -> "mrdbourke/simple-local-rag"
"pixegami/langchain-rag-tutorial" -> "curiousily/AI-Bootcamp"
"pixegami/langchain-rag-tutorial" -> "samwit/langchain-tutorials" ["e"=1]
"andrewnguonly/Lumos" -> "jasonjmcghee/plock"
"andrewnguonly/Lumos" -> "shreyaskarnik/DistiLlama"
"andrewnguonly/Lumos" -> "AbanteAI/rawdog"
"andrewnguonly/Lumos" -> "McGill-NLP/webllama"
"andrewnguonly/Lumos" -> "Nutlope/notesGPT"
"andrewnguonly/Lumos" -> "gabrielchua/RAGxplorer"
"andrewnguonly/Lumos" -> "lavague-ai/LaVague"
"andrewnguonly/Lumos" -> "e2b-dev/code-interpreter"
"andrewnguonly/Lumos" -> "MDK8888/GPTFast" ["e"=1]
"andrewnguonly/Lumos" -> "zlwaterfield/scramble" ["e"=1]
"andrewnguonly/Lumos" -> "Planetary-Computers/autotab-starter"
"andrewnguonly/Lumos" -> "alexpinel/Dot"
"andrewnguonly/Lumos" -> "reorproject/reor"
"andrewnguonly/Lumos" -> "semanser/codel"
"andrewnguonly/Lumos" -> "metavoiceio/metavoice-src" ["e"=1]
"EmergenceAI/Agent-E" -> "MinorJerry/WebVoyager" ["e"=1]
"EmergenceAI/Agent-E" -> "sentient-engineering/agent-q"
"EmergenceAI/Agent-E" -> "sentient-engineering/sentient"
"EmergenceAI/Agent-E" -> "mikekelly/AgentK"
"EmergenceAI/Agent-E" -> "ag2ai/ag2"
"EmergenceAI/Agent-E" -> "OSU-NLP-Group/SeeAct" ["e"=1]
"EmergenceAI/Agent-E" -> "MervinPraison/PraisonAI"
"EmergenceAI/Agent-E" -> "lavague-ai/LaVague"
"EmergenceAI/Agent-E" -> "e2b-dev/code-interpreter"
"EmergenceAI/Agent-E" -> "StreetLamb/tribe"
"EmergenceAI/Agent-E" -> "OS-Copilot/OS-Copilot" ["e"=1]
"EmergenceAI/Agent-E" -> "jgravelle/AutoGroq"
"EmergenceAI/Agent-E" -> "Doriandarko/maestro"
"EmergenceAI/Agent-E" -> "Agent-Tools/awesome-autonomous-web"
"EmergenceAI/Agent-E" -> "OpenAutoCoder/Agentless" ["e"=1]
"openlit/openlit" -> "Scale3-Labs/langtrace"
"openlit/openlit" -> "katanemo/archgw"
"openlit/openlit" -> "lunary-ai/lunary"
"openlit/openlit" -> "traceloop/openllmetry" ["e"=1]
"openlit/openlit" -> "lmnr-ai/lmnr"
"openlit/openlit" -> "Arize-ai/phoenix"
"openlit/openlit" -> "langfuse/langfuse"
"openlit/openlit" -> "Mintplex-Labs/vector-admin"
"openlit/openlit" -> "Helicone/helicone"
"openlit/openlit" -> "SciPhi-AI/R2R"
"openlit/openlit" -> "Agenta-AI/agenta"
"openlit/openlit" -> "BrainBlend-AI/atomic-agents"
"openlit/openlit" -> "truefoundry/cognita"
"openlit/openlit" -> "Arize-ai/openinference"
"openlit/openlit" -> "Mirascope/mirascope"
"andrewyng/translation-agent" -> "CosmosShadow/gptpdf"
"andrewyng/translation-agent" -> "InternLM/MindSearch"
"andrewyng/translation-agent" -> "microsoft/graphrag"
"andrewyng/translation-agent" -> "yihong0618/bilingual_book_maker" ["e"=1]
"andrewyng/translation-agent" -> "Huanshere/VideoLingo"
"andrewyng/translation-agent" -> "TeamWiseFlow/wiseflow"
"andrewyng/translation-agent" -> "langgptai/LangGPT"
"andrewyng/translation-agent" -> "adithya-s-k/omniparse"
"andrewyng/translation-agent" -> "jina-ai/reader"
"andrewyng/translation-agent" -> "QwenLM/Qwen-Agent"
"andrewyng/translation-agent" -> "netease-youdao/QAnything"
"andrewyng/translation-agent" -> "landing-ai/vision-agent"
"andrewyng/translation-agent" -> "mem0ai/mem0"
"andrewyng/translation-agent" -> "2noise/ChatTTS" ["e"=1]
"andrewyng/translation-agent" -> "nashsu/FreeAskInternet"
"regolith-labs/ore" -> "regolith-labs/ore-cli"
"regolith-labs/ore" -> "tonyke-bot/ore-miner"
"regolith-labs/ore" -> "BenjaSOL/ore-cli-gpu"
"regolith-labs/ore" -> "regolith-labs/drillx"
"regolith-labs/ore" -> "regolith-labs/ore-app"
"regolith-labs/ore" -> "codama-idl/codama" ["e"=1]
"regolith-labs/ore" -> "firedancer-io/firedancer" ["e"=1]
"regolith-labs/ore" -> "jito-foundation/jito-solana" ["e"=1]
"regolith-labs/ore" -> "helius-labs/helius-sdk" ["e"=1]
"regolith-labs/ore" -> "jup-ag/jupiter-quote-api-node" ["e"=1]
"regolith-labs/ore" -> "solana-developers/create-solana-dapp" ["e"=1]
"regolith-labs/ore" -> "StockpileLabs/awesome-solana-oss" ["e"=1]
"regolith-labs/ore" -> "Parms-Crypto/CUDA-ORE-DUMP"
"regolith-labs/ore" -> "sevenlabs-hq/carbon" ["e"=1]
"regolith-labs/ore" -> "vectorisvector/Polaris" ["e"=1]
"trancethehuman/ai-workshop-code" -> "cnunescoelho/kiroku"
"trancethehuman/ai-workshop-code" -> "multinear-demo/demo-bank-support-lc-py"
"trancethehuman/ai-workshop-code" -> "agdev/Langgraph"
"trancethehuman/ai-workshop-code" -> "ahmad2b/postbot3000"
"trancethehuman/ai-workshop-code" -> "alonlavian/RAGent"
"trancethehuman/ai-workshop-code" -> "muratcankoylan/AI-Investigator"
"trancethehuman/ai-workshop-code" -> "Makesh-Srinivasan/LangChain-GPT-Researcher"
"ggozad/oterm" -> "patruff/ollama-mcp-bridge" ["e"=1]
"ggozad/oterm" -> "dustinblackman/oatmeal" ["e"=1]
"ggozad/oterm" -> "ivanfioravanti/chatbot-ollama"
"ggozad/oterm" -> "chrishayuk/mcp-cli" ["e"=1]
"ggozad/oterm" -> "sammcj/gollama"
"ggozad/oterm" -> "gluonfield/enchanted" ["e"=1]
"ggozad/oterm" -> "David-Kunz/gen.nvim" ["e"=1]
"ggozad/oterm" -> "nomnivore/ollama.nvim" ["e"=1]
"ggozad/oterm" -> "pythops/tenere" ["e"=1]
"ggozad/oterm" -> "s-kostyaev/ellama" ["e"=1]
"ggozad/oterm" -> "pgibler/cmdh"
"ggozad/oterm" -> "ollama-ui/ollama-ui"
"ggozad/oterm" -> "darrenburns/elia" ["e"=1]
"ggozad/oterm" -> "adhikasp/mcp-client-cli" ["e"=1]
"ggozad/oterm" -> "kevinhermawan/Ollamac"
"kevinhermawan/Ollamac" -> "gluonfield/enchanted" ["e"=1]
"kevinhermawan/Ollamac" -> "kevinhermawan/OllamaKit"
"kevinhermawan/Ollamac" -> "kghandour/Ollama-SwiftUI"
"kevinhermawan/Ollamac" -> "Renset/macai"
"kevinhermawan/Ollamac" -> "ivanfioravanti/chatbot-ollama"
"kevinhermawan/Ollamac" -> "andersrex/notesollama"
"kevinhermawan/Ollamac" -> "gonzalezreal/swift-markdown-ui" ["e"=1]
"kevinhermawan/Ollamac" -> "hinterdupfinger/obsidian-ollama" ["e"=1]
"kevinhermawan/Ollamac" -> "ml-explore/mlx-swift-examples" ["e"=1]
"kevinhermawan/Ollamac" -> "ggozad/oterm"
"kevinhermawan/Ollamac" -> "mainframecomputer/fullmoon-ios" ["e"=1]
"kevinhermawan/Ollamac" -> "argmaxinc/WhisperKit" ["e"=1]
"kevinhermawan/Ollamac" -> "huggingface/chat-macOS" ["e"=1]
"kevinhermawan/Ollamac" -> "huggingface/swift-transformers" ["e"=1]
"kevinhermawan/Ollamac" -> "BruceMacD/chatd"
"agiresearch/AIOS" -> "agiresearch/OpenAGI" ["e"=1]
"agiresearch/AIOS" -> "developersdigest/llm-answer-engine"
"agiresearch/AIOS" -> "semanser/codel"
"agiresearch/AIOS" -> "SWE-agent/SWE-agent"
"agiresearch/AIOS" -> "OS-Copilot/OS-Copilot" ["e"=1]
"agiresearch/AIOS" -> "letta-ai/letta"
"agiresearch/AIOS" -> "aiwaves-cn/agents" ["e"=1]
"agiresearch/AIOS" -> "lavague-ai/LaVague"
"agiresearch/AIOS" -> "e2b-dev/awesome-ai-agents"
"agiresearch/AIOS" -> "OpenInterpreter/01"
"agiresearch/AIOS" -> "Doriandarko/maestro"
"agiresearch/AIOS" -> "TencentQQGYLab/AppAgent"
"agiresearch/AIOS" -> "WooooDyy/LLM-Agent-Paper-List" ["e"=1]
"agiresearch/AIOS" -> "xlang-ai/OpenAgents" ["e"=1]
"agiresearch/AIOS" -> "crewAIInc/crewAI"
"amnesia49406/Amnesia-Tron-Brute-Force" -> "amnesia333/Amnesia"
"amnesia49406/Amnesia-Tron-Brute-Force" -> "prometheus-wq/Prometheus"
"BasedHardware/OpenGlass" -> "BasedHardware/omi"
"BasedHardware/OpenGlass" -> "adamcohenhillel/ADeus"
"BasedHardware/OpenGlass" -> "OpenInterpreter/01"
"BasedHardware/OpenGlass" -> "pipecat-ai/pipecat"
"BasedHardware/OpenGlass" -> "AlexanderKoch-Koch/low_cost_robot" ["e"=1]
"BasedHardware/OpenGlass" -> "AugmentOS-Community/OpenSourceSmartGlasses" ["e"=1]
"BasedHardware/OpenGlass" -> "niedev/RTranslator" ["e"=1]
"BasedHardware/OpenGlass" -> "MarkFzp/mobile-aloha" ["e"=1]
"BasedHardware/OpenGlass" -> "BasedHardware/Whomane"
"BasedHardware/OpenGlass" -> "TeamWiseFlow/wiseflow"
"BasedHardware/OpenGlass" -> "modelscope/FunClip" ["e"=1]
"BasedHardware/OpenGlass" -> "developersdigest/llm-answer-engine"
"BasedHardware/OpenGlass" -> "supermemoryai/supermemory"
"BasedHardware/OpenGlass" -> "TencentQQGYLab/AppAgent"
"BasedHardware/OpenGlass" -> "InternLM/MindSearch"
"Doriandarko/maestro" -> "Doriandarko/claude-engineer"
"Doriandarko/maestro" -> "MervinPraison/PraisonAI"
"Doriandarko/maestro" -> "entropy-research/Devon"
"Doriandarko/maestro" -> "developersdigest/llm-answer-engine"
"Doriandarko/maestro" -> "VRSEN/agency-swarm"
"Doriandarko/maestro" -> "jgravelle/AutoGroq"
"Doriandarko/maestro" -> "miurla/morphic"
"Doriandarko/maestro" -> "mshumer/gpt-prompt-engineer"
"Doriandarko/maestro" -> "frdel/agent-zero"
"Doriandarko/maestro" -> "Doriandarko/omni-engineer"
"Doriandarko/maestro" -> "e2b-dev/fragments"
"Doriandarko/maestro" -> "lavague-ai/LaVague"
"Doriandarko/maestro" -> "togethercomputer/MoA"
"Doriandarko/maestro" -> "agno-agi/agno"
"Doriandarko/maestro" -> "OpenInterpreter/01"
"HelgeSverre/ollama-gui" -> "ivanfioravanti/chatbot-ollama"
"HelgeSverre/ollama-gui" -> "ollama-ui/ollama-ui"
"HelgeSverre/ollama-gui" -> "jakobhoeg/nextjs-ollama-llm-ui"
"HelgeSverre/ollama-gui" -> "richawo/minimal-llm-ui"
"HelgeSverre/ollama-gui" -> "chyok/ollama-gui"
"HelgeSverre/ollama-gui" -> "ollama-webui/ollama-webui-lite"
"HelgeSverre/ollama-gui" -> "ollama/ollama-js"
"HelgeSverre/ollama-gui" -> "ollama-interface/Ollama-Gui"
"HelgeSverre/ollama-gui" -> "bernardo-bruning/ollama-copilot"
"HelgeSverre/ollama-gui" -> "fmaclen/hollama"
"HelgeSverre/ollama-gui" -> "mythrantic/ollama-docker"
"HelgeSverre/ollama-gui" -> "ruecat/ollama-telegram"
"HelgeSverre/ollama-gui" -> "kevinhermawan/Ollamac"
"HelgeSverre/ollama-gui" -> "mrdjohnson/llm-x"
"HelgeSverre/ollama-gui" -> "sheshbabu/Chital"
"landing-ai/vision-agent" -> "gradio-app/fastrtc"
"landing-ai/vision-agent" -> "allenai/olmocr"
"landing-ai/vision-agent" -> "microsoft/data-formulator"
"landing-ai/vision-agent" -> "langchain-ai/local-deep-researcher"
"landing-ai/vision-agent" -> "NirDiamant/GenAI_Agents"
"landing-ai/vision-agent" -> "andrewyng/aisuite"
"landing-ai/vision-agent" -> "simular-ai/Agent-S"
"landing-ai/vision-agent" -> "getzep/graphiti"
"landing-ai/vision-agent" -> "Zipstack/unstract"
"landing-ai/vision-agent" -> "patchy631/ai-engineering-hub"
"landing-ai/vision-agent" -> "fixie-ai/ultravox"
"landing-ai/vision-agent" -> "assafelovic/gpt-researcher"
"landing-ai/vision-agent" -> "jlowin/fastmcp"
"landing-ai/vision-agent" -> "potpie-ai/potpie"
"landing-ai/vision-agent" -> "camel-ai/camel"
"OpenSPG/openspg" -> "OpenSPG/KAG"
"OpenSPG/openspg" -> "microsoft/PIKE-RAG"
"OpenSPG/openspg" -> "zjunlp/DeepKE" ["e"=1]
"OpenSPG/openspg" -> "neo4j-labs/llm-graph-builder"
"OpenSPG/openspg" -> "zjunlp/KnowLM" ["e"=1]
"OpenSPG/openspg" -> "TuGraph-family/tugraph-db" ["e"=1]
"OpenSPG/openspg" -> "gusye1234/nano-graphrag"
"OpenSPG/openspg" -> "TuGraph-family/TuGraph-AntGraphLearning" ["e"=1]
"OpenSPG/openspg" -> "OSU-NLP-Group/HippoRAG"
"OpenSPG/openspg" -> "severian42/GraphRAG-Local-UI"
"OpenSPG/openspg" -> "IDEA-FinAI/ToG" ["e"=1]
"OpenSPG/openspg" -> "LHRLAB/ChatKBQA" ["e"=1]
"OpenSPG/openspg" -> "whyhow-ai/knowledge-graph-studio"
"OpenSPG/openspg" -> "cocacola-lab/ChatIE" ["e"=1]
"OpenSPG/openspg" -> "zjukg/KG-LLM-Papers" ["e"=1]
"parthsarthi03/raptor" -> "AkariAsai/self-rag"
"parthsarthi03/raptor" -> "OSU-NLP-Group/HippoRAG"
"parthsarthi03/raptor" -> "HuskyInSalt/CRAG" ["e"=1]
"parthsarthi03/raptor" -> "Tongji-KGLLM/RAG-Survey"
"parthsarthi03/raptor" -> "RUC-NLPIR/FlashRAG"
"parthsarthi03/raptor" -> "hymie122/RAG-Survey"
"parthsarthi03/raptor" -> "qhjqhj00/MemoRAG"
"parthsarthi03/raptor" -> "AnswerDotAI/RAGatouille"
"parthsarthi03/raptor" -> "D-Star-AI/dsRAG"
"parthsarthi03/raptor" -> "gusye1234/nano-graphrag"
"parthsarthi03/raptor" -> "XiaoxinHe/G-Retriever" ["e"=1]
"parthsarthi03/raptor" -> "stanford-futuredata/ColBERT" ["e"=1]
"parthsarthi03/raptor" -> "AnswerDotAI/rerankers"
"parthsarthi03/raptor" -> "explodinggradients/ragas"
"parthsarthi03/raptor" -> "castorini/pyserini" ["e"=1]
"AbanteAI/rawdog" -> "AbanteAI/archive-old-cli-mentat" ["e"=1]
"AbanteAI/rawdog" -> "andrewnguonly/Lumos"
"AbanteAI/rawdog" -> "Doriandarko/maestro"
"AbanteAI/rawdog" -> "hrishioa/lumentis"
"AbanteAI/rawdog" -> "adamcohenhillel/ADeus"
"AbanteAI/rawdog" -> "AutoCodeRoverSG/auto-code-rover"
"AbanteAI/rawdog" -> "OpenCodeInterpreter/OpenCodeInterpreter"
"AbanteAI/rawdog" -> "entropy-research/Devon"
"AbanteAI/rawdog" -> "developersdigest/llm-answer-engine"
"AbanteAI/rawdog" -> "metavoiceio/metavoice-src" ["e"=1]
"AbanteAI/rawdog" -> "OpenInterpreter/01"
"AbanteAI/rawdog" -> "cognitivecomputations/github2file"
"AbanteAI/rawdog" -> "atopile/atopile" ["e"=1]
"AbanteAI/rawdog" -> "vikhyat/moondream"
"AbanteAI/rawdog" -> "Doriandarko/RepoToTextForLLMs"
"Mirascope/mirascope" -> "Mirascope/lilypad"
"Mirascope/mirascope" -> "jackmpcollins/magentic"
"Mirascope/mirascope" -> "DAGWorks-Inc/burr"
"Mirascope/mirascope" -> "BoundaryML/baml"
"Mirascope/mirascope" -> "SylphAI-Inc/AdalFlow"
"Mirascope/mirascope" -> "langroid/langroid"
"Mirascope/mirascope" -> "griptape-ai/griptape"
"Mirascope/mirascope" -> "PrefectHQ/marvin" ["e"=1]
"Mirascope/mirascope" -> "Mirascope/eddie"
"Mirascope/mirascope" -> "stephenleo/llm-structured-output-benchmarks"
"Mirascope/mirascope" -> "Agenta-AI/agenta"
"Mirascope/mirascope" -> "567-labs/instructor"
"Mirascope/mirascope" -> "BrainBlend-AI/atomic-agents"
"Mirascope/mirascope" -> "character-ai/prompt-poet"
"Mirascope/mirascope" -> "Lightning-AI/LitServe"
"balisujohn/tortoise.cpp" -> "PABannier/bark.cpp"
"balisujohn/tortoise.cpp" -> "mmwillet/TTS.cpp"
"balisujohn/tortoise.cpp" -> "LAION-AI/Text-to-speech"
"Codium-ai/AlphaCodium" -> "microsoft/TaskWeaver"
"Codium-ai/AlphaCodium" -> "AutoCodeRoverSG/auto-code-rover"
"Codium-ai/AlphaCodium" -> "SWE-agent/SWE-agent"
"Codium-ai/AlphaCodium" -> "qodo-ai/pr-agent"
"Codium-ai/AlphaCodium" -> "microsoft/LLMLingua"
"Codium-ai/AlphaCodium" -> "google-deepmind/alphageometry" ["e"=1]
"Codium-ai/AlphaCodium" -> "aiwaves-cn/agents" ["e"=1]
"Codium-ai/AlphaCodium" -> "stanfordnlp/dspy"
"Codium-ai/AlphaCodium" -> "ShishirPatil/gorilla" ["e"=1]
"Codium-ai/AlphaCodium" -> "AnswerDotAI/RAGatouille"
"Codium-ai/AlphaCodium" -> "567-labs/instructor"
"Codium-ai/AlphaCodium" -> "qodo-ai/qodo-cover"
"Codium-ai/AlphaCodium" -> "mshumer/gpt-prompt-engineer"
"Codium-ai/AlphaCodium" -> "letta-ai/letta"
"Codium-ai/AlphaCodium" -> "OpenAutoCoder/Agentless" ["e"=1]
"KoljaB/LocalAIVoiceChat" -> "KoljaB/Linguflex"
"KoljaB/LocalAIVoiceChat" -> "KoljaB/AIVoiceChat"
"KoljaB/LocalAIVoiceChat" -> "KoljaB/LocalEmotionalAIVoiceChat"
"KoljaB/LocalAIVoiceChat" -> "KoljaB/RealtimeTTS" ["e"=1]
"KoljaB/LocalAIVoiceChat" -> "vndee/local-talking-llm"
"KoljaB/LocalAIVoiceChat" -> "lhl/voicechat2"
"KoljaB/LocalAIVoiceChat" -> "mezbaul-h/june"
"KoljaB/LocalAIVoiceChat" -> "ILikeAI/AlwaysReddy" ["e"=1]
"KoljaB/LocalAIVoiceChat" -> "daswer123/xtts-api-server" ["e"=1]
"KoljaB/LocalAIVoiceChat" -> "bigsk1/voice-chat-ai"
"KoljaB/LocalAIVoiceChat" -> "apeatling/ollama-voice-mac"
"KoljaB/LocalAIVoiceChat" -> "maudoin/ollama-voice"
"KoljaB/LocalAIVoiceChat" -> "matatonic/openedai-speech" ["e"=1]
"KoljaB/LocalAIVoiceChat" -> "KoljaB/WhoSpeaks"
"KoljaB/LocalAIVoiceChat" -> "KoljaB/TurnVoice"
"normal-computing/fuji-web" -> "reworkd/tarsier"
"normal-computing/fuji-web" -> "normal-computing/posteriors" ["e"=1]
"kevinhermawan/OllamaKit" -> "kghandour/Ollama-SwiftUI"
"kevinhermawan/OllamaKit" -> "loopwork-ai/ollama-swift"
"kevinhermawan/OllamaKit" -> "kevinhermawan/Ollamac"
"kevinhermawan/OllamaKit" -> "andersrex/notesollama"
"kevinhermawan/OllamaKit" -> "guinmoon/llmfarm_core.swift" ["e"=1]
"pingcap/autoflow" -> "circlemind-ai/fast-graphrag"
"pingcap/autoflow" -> "OpenSPG/KAG"
"pingcap/autoflow" -> "chonkie-ai/chonkie"
"pingcap/autoflow" -> "lmnr-ai/index"
"pingcap/autoflow" -> "microsoft/PIKE-RAG"
"pingcap/autoflow" -> "steel-dev/steel-browser"
"pingcap/autoflow" -> "qhjqhj00/MemoRAG"
"pingcap/autoflow" -> "athina-ai/rag-cookbooks"
"pingcap/autoflow" -> "rag-web-ui/rag-web-ui" ["e"=1]
"pingcap/autoflow" -> "Zipstack/unstract"
"pingcap/autoflow" -> "whyhow-ai/knowledge-graph-studio"
"pingcap/autoflow" -> "SciPhi-AI/R2R"
"pingcap/autoflow" -> "OSU-NLP-Group/HippoRAG"
"pingcap/autoflow" -> "severian42/GraphRAG-Local-UI"
"pingcap/autoflow" -> "superlinear-ai/raglite"
"widgetti/wanderlust" -> "ACHultman/wanderlust"
"widgetti/wanderlust" -> "serpapi/Wander"
"widgetti/wanderlust" -> "felipetodev/wanderlust"
"metaskills/experts" -> "TrafficGuard/typedai"
"metaskills/experts" -> "KhoomeiK/LlamaGym"
"metaskills/experts" -> "SawyerHood/tlbrowse"
"metaskills/experts" -> "labmlai/inspectus"
"metaskills/experts" -> "semanser/codel"
"metaskills/experts" -> "run-llama/llama_deploy"
"metaskills/experts" -> "aymenfurter/microagents"
"metaskills/experts" -> "kingjulio8238/Memary"
"metaskills/experts" -> "laudspeaker/laudspeaker" ["e"=1]
"metaskills/experts" -> "reworkd/tarsier"
"metaskills/experts" -> "cfahlgren1/natural-sql" ["e"=1]
"metaskills/experts" -> "alishobeiri/thread"
"metaskills/experts" -> "ChuckHend/pg_vectorize" ["e"=1]
"metaskills/experts" -> "teknium1/Prompt-Engineering-Toolkit"
"metaskills/experts" -> "postgresml/korvus"
"NisaarAgharia/Advanced_RAG" -> "aishwaryaprabhat/Advanced-RAG"
"NisaarAgharia/Advanced_RAG" -> "bhargobdeka/advanced-RAG-app"
"emcf/thepipe" -> "FutureClubNL/RAGMeUp"
"emcf/thepipe" -> "abgulati/LARS" ["e"=1]
"emcf/thepipe" -> "langroid/langroid"
"emcf/thepipe" -> "KruxAI/ragbuilder"
"emcf/thepipe" -> "a-real-ai/pywinassistant"
"emcf/thepipe" -> "BrainBlend-AI/atomic-agents"
"emcf/thepipe" -> "AndrewVeee/nucleo-ai" ["e"=1]
"emcf/thepipe" -> "v2rockets/Loyal-Elephie" ["e"=1]
"emcf/thepipe" -> "enoch3712/ExtractThinker"
"emcf/thepipe" -> "billmei/every-chatgpt-gui" ["e"=1]
"emcf/thepipe" -> "EpistasisLab/KRAGEN" ["e"=1]
"emcf/thepipe" -> "codelion/optillm"
"emcf/thepipe" -> "JeremiahPetersen/RepoToText"
"emcf/thepipe" -> "Filimoa/open-parse"
"emcf/thepipe" -> "D-Star-AI/dsRAG"
"daveshap/Open_MURPHIE" -> "daveshap/ACE_WorldState"
"daveshap/Open_MURPHIE" -> "daveshap/Hierarchical_Document_Representation"
"daveshap/Open_MURPHIE" -> "daveshap/ACE_L1_Aspiration"
"virattt/financial-agent-ui" -> "virattt/financial-datasets" ["e"=1]
"virattt/financial-agent-ui" -> "virattt/ai-financial-agent"
"virattt/financial-agent-ui" -> "assistant-ui/assistant-ui-stockbroker"
"virattt/financial-agent-ui" -> "virattt/financial-agent" ["e"=1]
"virattt/financial-agent-ui" -> "kturung/langgraph_streamlit_codeassistant"
"virattt/financial-agent-ui" -> "run-llama/create-llama"
"virattt/financial-agent-ui" -> "bracesproul/gen-ui-python"
"virattt/financial-agent-ui" -> "e2b-dev/e2b-cookbook"
"virattt/financial-agent-ui" -> "udecode/dotai"
"virattt/financial-agent-ui" -> "LERM0/LermoAI"
"virattt/financial-agent-ui" -> "KruxAI/ragbuilder"
"virattt/financial-agent-ui" -> "Makesh-Srinivasan/LangChain-GPT-Researcher"
"virattt/financial-agent-ui" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"virattt/financial-agent-ui" -> "jank/curiosity"
"virattt/financial-agent-ui" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"alexpinel/Dot" -> "nilsherzig/LLocalSearch"
"alexpinel/Dot" -> "kingjulio8238/Memary"
"alexpinel/Dot" -> "abgulati/LARS" ["e"=1]
"alexpinel/Dot" -> "e2b-dev/code-interpreter"
"alexpinel/Dot" -> "Libr-AI/OpenFactVerification" ["e"=1]
"alexpinel/Dot" -> "alishobeiri/thread"
"alexpinel/Dot" -> "andrewnguonly/Lumos"
"alexpinel/Dot" -> "mistralai/mistral-finetune" ["e"=1]
"alexpinel/Dot" -> "AndrewVeee/nucleo-ai" ["e"=1]
"alexpinel/Dot" -> "darrenburns/elia" ["e"=1]
"alexpinel/Dot" -> "Doriandarko/maestro"
"alexpinel/Dot" -> "KruxAI/ragbuilder"
"alexpinel/Dot" -> "Surfer-Org/Protocol"
"alexpinel/Dot" -> "reorproject/reor"
"alexpinel/Dot" -> "lamm-mit/PDF2Audio"
"prometeydev/Prometheus" -> "prometeytron/Prometheus-Tron-Brute-Force"
"prometeydev/Prometheus" -> "promethron/Prometheus-Tron-Brute-Force"
"prometeydev/Prometheus" -> "prometheusdevel/Prometheus"
"prometeydev/Prometheus" -> "darknet-onion-links/darknet-onion-links-catalog"
"prometeydev/Prometheus" -> "PrometheusStealer/Prometheus"
"prometeydev/Prometheus" -> "prometheusdevelop/Prometheus"
"prometeydev/Prometheus" -> "promethrahus/Prometheus-Tron-Brute-Force"
"prometeydev/Prometheus" -> "prometheus-wq/Prometheus"
"prometeydev/Prometheus" -> "amnesia49406/Amnesia-Tron-Brute-Force"
"cognitivecomputations/github2file" -> "Doriandarko/RepoToTextForLLMs"
"cognitivecomputations/github2file" -> "JeremiahPetersen/RepoToText"
"cognitivecomputations/github2file" -> "databricks/lilac" ["e"=1]
"cognitivecomputations/github2file" -> "yoheinakajima/mindgraph"
"cognitivecomputations/github2file" -> "teknium1/Prompt-Engineering-Toolkit"
"cognitivecomputations/github2file" -> "mshumer/ai-researcher"
"cognitivecomputations/github2file" -> "hrishioa/lumentis"
"cognitivecomputations/github2file" -> "phospho-app/phospho-legacy" ["e"=1]
"cognitivecomputations/github2file" -> "NousResearch/Hermes-Function-Calling" ["e"=1]
"cognitivecomputations/github2file" -> "AbanteAI/rawdog"
"cognitivecomputations/github2file" -> "simonw/files-to-prompt"
"cognitivecomputations/github2file" -> "hrishioa/wishful-search"
"cognitivecomputations/github2file" -> "SouthBridgeAI/offmute" ["e"=1]
"cognitivecomputations/github2file" -> "andrewnguonly/Lumos"
"cognitivecomputations/github2file" -> "mustafaaljadery/lightning-whisper-mlx" ["e"=1]
"groq/groq-api-cookbook" -> "groq/groq-python"
"groq/groq-api-cookbook" -> "groq/groq-appgen"
"groq/groq-api-cookbook" -> "skapadia3214/groq-moa"
"groq/groq-api-cookbook" -> "Bklieger/infinite-bookshelf"
"groq/groq-api-cookbook" -> "google-gemini/starter-applets"
"groq/groq-api-cookbook" -> "mistralai/cookbook"
"groq/groq-api-cookbook" -> "jgravelle/AutoGroq"
"groq/groq-api-cookbook" -> "groq/groq-typescript"
"groq/groq-api-cookbook" -> "e2b-dev/e2b-cookbook"
"groq/groq-api-cookbook" -> "MervinPraison/PraisonAI"
"groq/groq-api-cookbook" -> "serkandyck/realtime-voice-assistant-groq" ["e"=1]
"groq/groq-api-cookbook" -> "definitive-io/crewai-groq" ["e"=1]
"groq/groq-api-cookbook" -> "run-llama/llama_deploy"
"groq/groq-api-cookbook" -> "crewAIInc/crewAI-tools" ["e"=1]
"groq/groq-api-cookbook" -> "Bklieger/ScribeWizard"
"get-salt-AI/SaltAI_Language_Toolkit" -> "tom-doerr/dspy_nodes"
"get-salt-AI/SaltAI_Language_Toolkit" -> "get-salt-AI/SaltAI"
"rsrohan99/rag-stream-intermediate-events-tutorial" -> "lz-chen/research-agent"
"gptscript-ai/gptscript" -> "gptscript-ai/clio" ["e"=1]
"gptscript-ai/gptscript" -> "reorproject/reor"
"gptscript-ai/gptscript" -> "developersdigest/llm-answer-engine"
"gptscript-ai/gptscript" -> "acorn-io/runtime" ["e"=1]
"gptscript-ai/gptscript" -> "BCG-X-Official/agentkit"
"gptscript-ai/gptscript" -> "adamcohenhillel/ADeus"
"gptscript-ai/gptscript" -> "Doriandarko/maestro"
"gptscript-ai/gptscript" -> "k8sgpt-ai/k8sgpt" ["e"=1]
"gptscript-ai/gptscript" -> "Nutlope/notesGPT"
"gptscript-ai/gptscript" -> "LargeWorldModel/LWM" ["e"=1]
"gptscript-ai/gptscript" -> "semanser/codel"
"gptscript-ai/gptscript" -> "aixcoder-plugin/aiXcoder-7B"
"gptscript-ai/gptscript" -> "miurla/morphic"
"gptscript-ai/gptscript" -> "Vahe1994/AQLM" ["e"=1]
"gptscript-ai/gptscript" -> "Eladlev/AutoPrompt"
"AmberSahdev/Open-Interface" -> "showlab/computer_use_ootb" ["e"=1]
"AmberSahdev/Open-Interface" -> "e2b-dev/open-computer-use"
"AmberSahdev/Open-Interface" -> "simular-ai/Agent-S"
"AmberSahdev/Open-Interface" -> "steel-dev/steel-browser"
"AmberSahdev/Open-Interface" -> "trycua/acu"
"AmberSahdev/Open-Interface" -> "suitedaces/computer-agent" ["e"=1]
"AmberSahdev/Open-Interface" -> "browserbase/open-operator"
"AmberSahdev/Open-Interface" -> "OthersideAI/self-operating-computer"
"AmberSahdev/Open-Interface" -> "AK391/ai-gradio"
"AmberSahdev/Open-Interface" -> "transformerlab/transformerlab-app"
"AmberSahdev/Open-Interface" -> "Upsonic/Upsonic"
"AmberSahdev/Open-Interface" -> "browserbase/stagehand"
"AmberSahdev/Open-Interface" -> "harishsg993010/LLM-Reasoner"
"AmberSahdev/Open-Interface" -> "trycua/cua"
"AmberSahdev/Open-Interface" -> "bytedance/UI-TARS"
"NirDiamant/Controllable-RAG-Agent" -> "KruxAI/ragbuilder"
"NirDiamant/Controllable-RAG-Agent" -> "NirDiamant/GenAI_Agents"
"NirDiamant/Controllable-RAG-Agent" -> "starpig1129/DATAGEN"
"NirDiamant/Controllable-RAG-Agent" -> "NirDiamant/RAG_Techniques"
"NirDiamant/Controllable-RAG-Agent" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"NirDiamant/Controllable-RAG-Agent" -> "NirDiamant/Prompt_Engineering"
"NirDiamant/Controllable-RAG-Agent" -> "kturung/langgraph_streamlit_codeassistant"
"NirDiamant/Controllable-RAG-Agent" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"NirDiamant/Controllable-RAG-Agent" -> "athina-ai/rag-cookbooks"
"NirDiamant/Controllable-RAG-Agent" -> "cnunescoelho/kiroku"
"NirDiamant/Controllable-RAG-Agent" -> "D-Star-AI/dsRAG"
"NirDiamant/Controllable-RAG-Agent" -> "StreetLamb/tribe"
"NirDiamant/Controllable-RAG-Agent" -> "von-development/awesome-LangGraph"
"NirDiamant/Controllable-RAG-Agent" -> "BrainBlend-AI/atomic-agents"
"NirDiamant/Controllable-RAG-Agent" -> "langchain-ai/langgraph-supervisor-py"
"cohere-ai/cohere-toolkit" -> "developersdigest/llm-answer-engine"
"cohere-ai/cohere-toolkit" -> "AnswerDotAI/RAGatouille"
"cohere-ai/cohere-toolkit" -> "ragapp/ragapp"
"cohere-ai/cohere-toolkit" -> "Doriandarko/maestro"
"cohere-ai/cohere-toolkit" -> "lavague-ai/LaVague"
"cohere-ai/cohere-toolkit" -> "weaviate/Verba"
"cohere-ai/cohere-toolkit" -> "miurla/morphic"
"cohere-ai/cohere-toolkit" -> "McGill-NLP/webllama"
"cohere-ai/cohere-toolkit" -> "nilsherzig/LLocalSearch"
"cohere-ai/cohere-toolkit" -> "truefoundry/cognita"
"cohere-ai/cohere-toolkit" -> "AutoCodeRoverSG/auto-code-rover"
"cohere-ai/cohere-toolkit" -> "e2b-dev/code-interpreter"
"cohere-ai/cohere-toolkit" -> "apple/corenet" ["e"=1]
"cohere-ai/cohere-toolkit" -> "567-labs/instructor"
"cohere-ai/cohere-toolkit" -> "Portkey-AI/gateway"
"daveshap/Claude_Sentience" -> "daveshap/ChatGPT_Custom_Instructions"
"daveshap/Claude_Sentience" -> "daveshap/latent_space_activation"
"daveshap/Claude_Sentience" -> "daveshap/Benevolent_AGI"
"daveshap/Claude_Sentience" -> "daveshap/BSHR_Loop"
"daveshap/Claude_Sentience" -> "daveshap/weekly_arxiv"
"daveshap/Claude_Sentience" -> "daveshap/ACE_Framework"
"daveshap/Claude_Sentience" -> "daveshap/AI_Tools_and_Papers"
"daveshap/Claude_Sentience" -> "disler/benchy"
"daveshap/Claude_Sentience" -> "daveshap/David_Shapiro_Reading_List"
"daveshap/Claude_Sentience" -> "s-smits/agentic-cursorrules"
"daveshap/Claude_Sentience" -> "daveshap/Chronic_Health_AI"
"daveshap/Claude_Sentience" -> "daveshap/Raspberry"
"daveshap/Claude_Sentience" -> "daveshap/SparsePrimingRepresentations"
"daveshap/Claude_Sentience" -> "deedy/mac_computer_use" ["e"=1]
"daveshap/Claude_Sentience" -> "daveshap/Semantic_Embedding_Reverse_Dictionary"
"trypear/pear-landing-page" -> "trypear/pearai-documentation"
"trypear/pear-landing-page" -> "trypear/pearai-submodule"
"NVIDIA/GenerativeAIExamples" -> "NVIDIA/TensorRT-LLM" ["e"=1]
"NVIDIA/GenerativeAIExamples" -> "NVIDIA/ChatRTX"
"NVIDIA/GenerativeAIExamples" -> "NVIDIA/NeMo-Guardrails"
"NVIDIA/GenerativeAIExamples" -> "NVIDIA/NeMo" ["e"=1]
"NVIDIA/GenerativeAIExamples" -> "GoogleCloudPlatform/generative-ai"
"NVIDIA/GenerativeAIExamples" -> "NVIDIA/NeMo-Curator" ["e"=1]
"NVIDIA/GenerativeAIExamples" -> "NVIDIA/AIQToolkit"
"NVIDIA/GenerativeAIExamples" -> "huggingface/cookbook"
"NVIDIA/GenerativeAIExamples" -> "aishwaryanr/awesome-generative-ai-guide"
"NVIDIA/GenerativeAIExamples" -> "NVIDIA/DeepLearningExamples" ["e"=1]
"NVIDIA/GenerativeAIExamples" -> "google/generative-ai-docs"
"NVIDIA/GenerativeAIExamples" -> "NVIDIA/workbench-example-hybrid-rag"
"NVIDIA/GenerativeAIExamples" -> "NVIDIA/tensorflow" ["e"=1]
"NVIDIA/GenerativeAIExamples" -> "NVIDIA/nvidia-container-toolkit" ["e"=1]
"NVIDIA/GenerativeAIExamples" -> "meta-llama/llama-cookbook"
"BoundaryML/baml" -> "humanlayer/12-factor-agents"
"BoundaryML/baml" -> "567-labs/instructor"
"BoundaryML/baml" -> "dottxt-ai/outlines"
"BoundaryML/baml" -> "EricLBuehler/mistral.rs" ["e"=1]
"BoundaryML/baml" -> "Arize-ai/phoenix"
"BoundaryML/baml" -> "pydantic/pydantic-ai"
"BoundaryML/baml" -> "langroid/langroid"
"BoundaryML/baml" -> "katanemo/archgw"
"BoundaryML/baml" -> "getzep/graphiti"
"BoundaryML/baml" -> "BerriAI/litellm"
"BoundaryML/baml" -> "stanfordnlp/dspy"
"BoundaryML/baml" -> "topoteretes/cognee"
"BoundaryML/baml" -> "BrainBlend-AI/atomic-agents"
"BoundaryML/baml" -> "SciPhi-AI/R2R"
"BoundaryML/baml" -> "morphik-org/morphik-core"
"Planetary-Computers/autotab-starter" -> "reworkd/tarsier"
"Planetary-Computers/autotab-starter" -> "andrewnguonly/Lumos"
"Planetary-Computers/autotab-starter" -> "finic-ai/finic"
"Planetary-Computers/autotab-starter" -> "OpenPipe/OpenPipe"
"Planetary-Computers/autotab-starter" -> "ishan0102/vimGPT"
"Planetary-Computers/autotab-starter" -> "AndrewWalsh/openapi-devtools" ["e"=1]
"Planetary-Computers/autotab-starter" -> "victordibia/autogen-ui" ["e"=1]
"Planetary-Computers/autotab-starter" -> "kreneskyp/ix" ["e"=1]
"Planetary-Computers/autotab-starter" -> "spdustin/ChatGPT-AutoExpert"
"Planetary-Computers/autotab-starter" -> "agi-merge/waggle-dance"
"Planetary-Computers/autotab-starter" -> "richardyc/Chrome-GPT" ["e"=1]
"Planetary-Computers/autotab-starter" -> "semanser/codel"
"Planetary-Computers/autotab-starter" -> "WisdomShell/codeshell" ["e"=1]
"Planetary-Computers/autotab-starter" -> "vignshwarar/AI-Employe" ["e"=1]
"Planetary-Computers/autotab-starter" -> "mayt/BrowserGPT" ["e"=1]
"mttaggart/I-S00N" -> "soufianetahiri/Anxun-isoon"
"mttaggart/I-S00N" -> "WongKinYiu/yolov9" ["e"=1]
"mttaggart/I-S00N" -> "regolith-labs/ore-cli"
"mttaggart/I-S00N" -> "eknkc/ssr-benchmark"
"mttaggart/I-S00N" -> "I-S00N/I-S00N" ["e"=1]
"mttaggart/I-S00N" -> "aixcoder-plugin/aiXcoder-7B"
"mttaggart/I-S00N" -> "starknet-io/provisions-data" ["e"=1]
"mttaggart/I-S00N" -> "Vahe1994/AQLM" ["e"=1]
"mttaggart/I-S00N" -> "rocketseat-education/nlw-expert-react"
"mttaggart/I-S00N" -> "emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC"
"mttaggart/I-S00N" -> "ianand/spreadsheets-are-all-you-need"
"mttaggart/I-S00N" -> "moest-np/center-randomize" ["e"=1]
"mttaggart/I-S00N" -> "merill/awesome-entra" ["e"=1]
"mttaggart/I-S00N" -> "regolith-labs/ore"
"mttaggart/I-S00N" -> "0xacme/ERC404" ["e"=1]
"OpenGenerativeAI/llm-colosseum" -> "diambra/arena"
"OpenGenerativeAI/llm-colosseum" -> "phospho-app/phospho-legacy" ["e"=1]
"OpenGenerativeAI/llm-colosseum" -> "mistralai-sf24/hackathon" ["e"=1]
"OpenGenerativeAI/llm-colosseum" -> "AutoCodeRoverSG/auto-code-rover"
"OpenGenerativeAI/llm-colosseum" -> "togethercomputer/MoA"
"OpenGenerativeAI/llm-colosseum" -> "lmgame-org/GamingAgent" ["e"=1]
"OpenGenerativeAI/llm-colosseum" -> "lm-sys/RouteLLM"
"OpenGenerativeAI/llm-colosseum" -> "lavague-ai/LaVague"
"OpenGenerativeAI/llm-colosseum" -> "ContextualAI/HALOs" ["e"=1]
"OpenGenerativeAI/llm-colosseum" -> "developersdigest/llm-answer-engine"
"OpenGenerativeAI/llm-colosseum" -> "arcee-ai/mergekit" ["e"=1]
"OpenGenerativeAI/llm-colosseum" -> "BAAI-Agents/Cradle" ["e"=1]
"OpenGenerativeAI/llm-colosseum" -> "aws-banjo/llm-colosseum"
"OpenGenerativeAI/llm-colosseum" -> "eloialonso/diamond" ["e"=1]
"OpenGenerativeAI/llm-colosseum" -> "agiresearch/AIOS"
"richawo/minimal-llm-ui" -> "ollama-interface/Ollama-Gui"
"richawo/minimal-llm-ui" -> "enoch1118/ollamaGUI"
"richawo/minimal-llm-ui" -> "mmo80/alpaca-webui"
"richawo/minimal-llm-ui" -> "jikkuatwork/saddle"
"BruceMacD/chatd" -> "richawo/minimal-llm-ui"
"BruceMacD/chatd" -> "bionic-gpt/bionic-gpt"
"BruceMacD/chatd" -> "semperai/amica"
"BruceMacD/chatd" -> "jacoblee93/fully-local-pdf-chatbot"
"BruceMacD/chatd" -> "fmaclen/hollama"
"BruceMacD/chatd" -> "ollama-interface/Ollama-Gui"
"BruceMacD/chatd" -> "kghandour/Ollama-SwiftUI"
"BruceMacD/chatd" -> "ivanfioravanti/chatbot-ollama"
"BruceMacD/chatd" -> "hinterdupfinger/obsidian-ollama" ["e"=1]
"BruceMacD/chatd" -> "jikkuatwork/saddle"
"BruceMacD/chatd" -> "shreyaskarnik/DistiLlama"
"BruceMacD/chatd" -> "kevinhermawan/Ollamac"
"BruceMacD/chatd" -> "gluonfield/enchanted" ["e"=1]
"BruceMacD/chatd" -> "drazdra/ollama-chats"
"BruceMacD/chatd" -> "andersrex/notesollama"
"semperai/amica" -> "JShollaj/awesome-llm-web-ui"
"semperai/amica" -> "Mobile-Artificial-Intelligence/maid"
"semperai/amica" -> "bionic-gpt/bionic-gpt"
"semperai/amica" -> "BruceMacD/chatd"
"semperai/amica" -> "erew123/alltalk_tts" ["e"=1]
"semperai/amica" -> "withcatai/catai"
"semperai/amica" -> "pixiv/ChatVRM" ["e"=1]
"semperai/amica" -> "uezo/ChatdollKit" ["e"=1]
"semperai/amica" -> "tegnike/aituber-kit" ["e"=1]
"semperai/amica" -> "daswer123/xtts-api-server" ["e"=1]
"semperai/amica" -> "mudler/LocalAGI" ["e"=1]
"semperai/amica" -> "fagenorn/handcrafted-persona-engine" ["e"=1]
"semperai/amica" -> "brucepro/Memoir" ["e"=1]
"semperai/amica" -> "pixiv/three-vrm" ["e"=1]
"semperai/amica" -> "lmg-anon/mikupad" ["e"=1]
"darknet-onion-links/darknet-onion-links-catalog" -> "prometheusdevel/Prometheus"
"darknet-onion-links/darknet-onion-links-catalog" -> "PrometheusStealer/Prometheus"
"darknet-onion-links/darknet-onion-links-catalog" -> "prometeydev/Prometheus"
"darknet-onion-links/darknet-onion-links-catalog" -> "promethron/Prometheus-Tron-Brute-Force"
"darknet-onion-links/darknet-onion-links-catalog" -> "prometeytron/Prometheus-Tron-Brute-Force"
"darknet-onion-links/darknet-onion-links-catalog" -> "FixedPointIO/Artemis"
"darknet-onion-links/darknet-onion-links-catalog" -> "xames3/nanotorch"
"darknet-onion-links/darknet-onion-links-catalog" -> "TheOneStudioLLC/Mac-Recorder"
"darknet-onion-links/darknet-onion-links-catalog" -> "aidinrs/sql-puzzle"
"darknet-onion-links/darknet-onion-links-catalog" -> "CASRAI-CRedIT/Dictionary"
"darknet-onion-links/darknet-onion-links-catalog" -> "VANRao-Stack/elixir"
"darknet-onion-links/darknet-onion-links-catalog" -> "rynmon/malScraper"
"darknet-onion-links/darknet-onion-links-catalog" -> "iZooGooD/torrscrapper"
"darknet-onion-links/darknet-onion-links-catalog" -> "BearAnBull/Pancakeswap-Prediction-Winningbot"
"darknet-onion-links/darknet-onion-links-catalog" -> "Weitheskmt/WeiDMD"
"PKU-DAIR/RAG-Survey" -> "hymie122/RAG-Survey"
"GoogleCloudPlatform/localllm" -> "FujiwaraChoki/MoneyPrinter"
"GoogleCloudPlatform/localllm" -> "apple/ml-mgie" ["e"=1]
"GoogleCloudPlatform/localllm" -> "cyberus-technology/virtualbox-kvm"
"GoogleCloudPlatform/localllm" -> "metavoiceio/metavoice-src" ["e"=1]
"GoogleCloudPlatform/localllm" -> "0xacme/ERC404" ["e"=1]
"GoogleCloudPlatform/localllm" -> "Pandora-Labs-Org/erc404-legacy" ["e"=1]
"GoogleCloudPlatform/localllm" -> "awslabs/llrt" ["e"=1]
"GoogleCloudPlatform/localllm" -> "atopile/atopile" ["e"=1]
"GoogleCloudPlatform/localllm" -> "BCG-X-Official/agentkit"
"GoogleCloudPlatform/localllm" -> "rocketseat-education/nlw-expert-react"
"GoogleCloudPlatform/localllm" -> "eknkc/ssr-benchmark"
"GoogleCloudPlatform/localllm" -> "Stability-AI/StableCascade" ["e"=1]
"GoogleCloudPlatform/localllm" -> "aixcoder-plugin/aiXcoder-7B"
"GoogleCloudPlatform/localllm" -> "apple/corenet" ["e"=1]
"GoogleCloudPlatform/localllm" -> "rocketseat-education/nlw-expert-react-native"
"ollama-webui/ollama-webui-lite" -> "ivanfioravanti/chatbot-ollama"
"ollama-webui/ollama-webui-lite" -> "HelgeSverre/ollama-gui"
"ollama-webui/ollama-webui-lite" -> "jakobhoeg/nextjs-ollama-llm-ui"
"rochus-keller/CspChan" -> "rkaehn/cr_task.h"
"rochus-keller/CspChan" -> "mkirchner/hamt"
"BasedHardware/Whomane" -> "OwlAIProject/Owl"
"BasedHardware/Whomane" -> "adamcohenhillel/ADeus"
"BasedHardware/Whomane" -> "BasedHardware/omi"
"BasedHardware/Whomane" -> "BasedHardware/OpenGlass"
"BasedHardware/Whomane" -> "OpenInterpreter/01"
"BasedHardware/Whomane" -> "OpenInterpreter/aifs"
"KhoomeiK/LlamaGym" -> "flowersteam/lamorel" ["e"=1]
"KhoomeiK/LlamaGym" -> "metaskills/experts"
"KhoomeiK/LlamaGym" -> "kingjulio8238/Memary"
"KhoomeiK/LlamaGym" -> "WooooDyy/AgentGym" ["e"=1]
"KhoomeiK/LlamaGym" -> "allenai/reward-bench" ["e"=1]
"KhoomeiK/LlamaGym" -> "RAGEN-AI/RAGEN" ["e"=1]
"KhoomeiK/LlamaGym" -> "openai/transformer-debugger" ["e"=1]
"KhoomeiK/LlamaGym" -> "WeihaoTan/TWOSOME" ["e"=1]
"KhoomeiK/LlamaGym" -> "web-arena-x/webarena" ["e"=1]
"KhoomeiK/LlamaGym" -> "Tanuki/tanuki.py" ["e"=1]
"KhoomeiK/LlamaGym" -> "alishobeiri/thread"
"KhoomeiK/LlamaGym" -> "flowersteam/Grounding_LLMs_with_online_RL" ["e"=1]
"KhoomeiK/LlamaGym" -> "THUDM/AgentBench" ["e"=1]
"KhoomeiK/LlamaGym" -> "aymenfurter/microagents"
"KhoomeiK/LlamaGym" -> "labmlai/inspectus"
"vndee/local-talking-llm" -> "maudoin/ollama-voice"
"vndee/local-talking-llm" -> "KoljaB/LocalAIVoiceChat"
"vndee/local-talking-llm" -> "nickbild/local_llm_assistant" ["e"=1]
"vndee/local-talking-llm" -> "techwithtim/LiveKit-AI-Voice-Assitant" ["e"=1]
"vndee/local-talking-llm" -> "mezbaul-h/june"
"vndee/local-talking-llm" -> "KoljaB/Linguflex"
"vndee/local-talking-llm" -> "hkgood/Ollama_ChatTTS"
"vndee/local-talking-llm" -> "vndee/local-assistant-examples"
"aurelio-labs/semantic-router" -> "567-labs/instructor"
"aurelio-labs/semantic-router" -> "explodinggradients/ragas"
"aurelio-labs/semantic-router" -> "microsoft/LLMLingua"
"aurelio-labs/semantic-router" -> "AnswerDotAI/RAGatouille"
"aurelio-labs/semantic-router" -> "guardrails-ai/guardrails"
"aurelio-labs/semantic-router" -> "lm-sys/RouteLLM"
"aurelio-labs/semantic-router" -> "aurelio-labs/semantic-chunkers" ["e"=1]
"aurelio-labs/semantic-router" -> "confident-ai/deepeval"
"aurelio-labs/semantic-router" -> "NVIDIA/NeMo-Guardrails"
"aurelio-labs/semantic-router" -> "dottxt-ai/outlines"
"aurelio-labs/semantic-router" -> "langroid/langroid"
"aurelio-labs/semantic-router" -> "zou-group/textgrad"
"aurelio-labs/semantic-router" -> "qdrant/fastembed"
"aurelio-labs/semantic-router" -> "Unstructured-IO/unstructured"
"aurelio-labs/semantic-router" -> "stanfordnlp/dspy"
"rocketseat-education/nlw-expert-nodejs" -> "rocketseat-education/nlw-expert-react-native"
"rocketseat-education/nlw-expert-nodejs" -> "rocketseat-education/nlw-expert-react"
"rocketseat-education/nlw-expert-nodejs" -> "rocketseat-education/nlw-expert-html-css-js"
"rocketseat-education/nlw-expert-nodejs" -> "rocketseat-education/nlw-expert-python"
"rocketseat-education/nlw-expert-nodejs" -> "rocketseat-education/nlw-expert-c-sharp"
"rocketseat-education/nlw-expert-nodejs" -> "rocketseat-education/nlw-expert-java"
"rocketseat-education/nlw-expert-nodejs" -> "rocketseat-education/nlw-unite-nodejs"
"rocketseat-education/nlw-expert-nodejs" -> "rocketseat-education/nlw-journey-react"
"rocketseat-education/nlw-expert-nodejs" -> "rocketseat-education/nlw-unite-react"
"s-casci/tinyzero" -> "aymenfurter/microagents"
"s-casci/tinyzero" -> "natolambert/blogcaster"
"mrdjohnson/llm-x" -> "enoch1118/ollamaGUI"
"mrdjohnson/llm-x" -> "kartikm7/llocal"
"mrdjohnson/llm-x" -> "EndoTheDev/Awesome-Ollama"
"mrdjohnson/llm-x" -> "drazdra/ollama-chats"
"mrdjohnson/llm-x" -> "Nagi-ovo/CRAG-Ollama-Chat"
"mrdjohnson/llm-x" -> "jikkuatwork/saddle"
"anthropics/anthropic-tools" -> "anthropics/anthropic-retrieval-demo"
"taketwo/llm-ollama" -> "wearedevx/llm-together"
"simonw/llm-claude-3" -> "simonw/llm-gemini"
"simonw/files-to-prompt" -> "simonw/llm"
"simonw/files-to-prompt" -> "simonw/shot-scraper" ["e"=1]
"simonw/files-to-prompt" -> "simonw/llm-gemini"
"simonw/files-to-prompt" -> "Dicklesworthstone/your-source-to-prompt.html"
"simonw/files-to-prompt" -> "mufeedvh/code2prompt"
"simonw/files-to-prompt" -> "simonw/llm-cmd"
"simonw/files-to-prompt" -> "disler/poc-realtime-ai-assistant"
"simonw/files-to-prompt" -> "mckaywrigley/o1-xml-parser"
"simonw/files-to-prompt" -> "disler/marimo-prompt-library"
"simonw/files-to-prompt" -> "Doriandarko/RepoToTextForLLMs"
"simonw/files-to-prompt" -> "disler/single-file-agents"
"simonw/files-to-prompt" -> "hrishioa/lumentis"
"simonw/files-to-prompt" -> "simonw/sqlite-utils" ["e"=1]
"simonw/files-to-prompt" -> "disler/personal-ai-starter-pack"
"simonw/files-to-prompt" -> "simonw/llm-claude-3"
"liuhuanyong/RAGOnMedicalKG" -> "honeyandme/RAGQnASystem"
"liuhuanyong/RAGOnMedicalKG" -> "BaranziniLab/KG_RAG" ["e"=1]
"liuhuanyong/RAGOnMedicalKG" -> "nuolade/disease-kb"
"liuhuanyong/RAGOnMedicalKG" -> "SuperMedIntel/Medical-Graph-RAG" ["e"=1]
"liuhuanyong/RAGOnMedicalKG" -> "davidhandsome86/LLM_RAG"
"liuhuanyong/RAGOnMedicalKG" -> "rainstorm12/KG-RAG"
"staghado/vit.cpp" -> "monatis/clip.cpp"
"staghado/vit.cpp" -> "skeskinen/bert.cpp"
"staghado/vit.cpp" -> "kabazoka/ViT-Accelerator"
"superlinked/superlinked" -> "superlinked/VectorHub"
"superlinked/superlinked" -> "SylphAI-Inc/AdalFlow"
"superlinked/superlinked" -> "callmesora/llmops-python-package"
"superlinked/superlinked" -> "bytewax/bytewax" ["e"=1]
"superlinked/superlinked" -> "gouravnagar-infosec/netsleuth"
"superlinked/superlinked" -> "decodingml/llm-twin-course"
"superlinked/superlinked" -> "Lightning-AI/LitServe"
"superlinked/superlinked" -> "lotus-data/lotus"
"superlinked/superlinked" -> "zou-group/textgrad"
"superlinked/superlinked" -> "fmind/mlops-python-package"
"superlinked/superlinked" -> "PacktPublishing/LLM-Engineers-Handbook"
"superlinked/superlinked" -> "neural-maze/ava-whatsapp-agent-course"
"superlinked/superlinked" -> "SapienzaNLP/relik"
"superlinked/superlinked" -> "SylphAI-Inc/LLM-engineer-handbook"
"superlinked/superlinked" -> "guardrails-ai/guardrails"
"hymie122/RAG-Survey" -> "Tongji-KGLLM/RAG-Survey"
"hymie122/RAG-Survey" -> "jxzhangjhu/Awesome-LLM-RAG"
"hymie122/RAG-Survey" -> "RUC-NLPIR/FlashRAG"
"hymie122/RAG-Survey" -> "AkariAsai/self-rag"
"hymie122/RAG-Survey" -> "lizhe2004/Awesome-LLM-RAG-Application"
"hymie122/RAG-Survey" -> "coree/awesome-rag"
"hymie122/RAG-Survey" -> "NovaSearch-Team/RAG-Retrieval"
"hymie122/RAG-Survey" -> "zjukg/KG-LLM-Papers" ["e"=1]
"hymie122/RAG-Survey" -> "FlagOpen/FlagEmbedding" ["e"=1]
"hymie122/RAG-Survey" -> "RUC-NLPIR/LLM4IR-Survey" ["e"=1]
"hymie122/RAG-Survey" -> "awesome-rag/awesome-rag" ["e"=1]
"hymie122/RAG-Survey" -> "PKU-DAIR/RAG-Survey"
"hymie122/RAG-Survey" -> "zjunlp/LLMAgentPapers" ["e"=1]
"hymie122/RAG-Survey" -> "parthsarthi03/raptor"
"hymie122/RAG-Survey" -> "WooooDyy/LLM-Agent-Paper-List" ["e"=1]
"jabcode/jabcode" -> "divan/txqr"
"jabcode/jabcode" -> "canadaduane/elm-hccb"
"jabcode/jabcode" -> "myinnos/AndroidScratchCard" ["e"=1]
"jabcode/jabcode" -> "ouyangzhibo/HiQ-Robust-and-Fast-Decoding-of-High-Capacity-Color-QR-Codes"
"jabcode/jabcode" -> "felixhao28/JSCPP" ["e"=1]
"mythrantic/ollama-docker" -> "hinterdupfinger/obsidian-ollama" ["e"=1]
"mythrantic/ollama-docker" -> "HelgeSverre/ollama-gui"
"mythrantic/ollama-docker" -> "bernardo-bruning/ollama-copilot"
"mythrantic/ollama-docker" -> "open-webui/pipelines" ["e"=1]
"mythrantic/ollama-docker" -> "docker/genai-stack"
"mythrantic/ollama-docker" -> "kevinthedang/discord-ollama"
"BINANCECONTRACT/Create-Honeypot-Token" -> "SmartBNBGuy/BSC-honeypot"
"BINANCECONTRACT/Create-Honeypot-Token" -> "BINANCECONTRACT/Create-BEP20-Meme-Token"
"BINANCECONTRACT/Create-Honeypot-Token" -> "blxintothedark/BBB-Stealer"
"BINANCECONTRACT/Create-Honeypot-Token" -> "BINANCECONTRACT/BSC-Contract"
"BINANCECONTRACT/Create-Honeypot-Token" -> "darkneton/kerberos-market"
"SmartBNBGuy/BSC-honeypot" -> "SmartBNBGuy/create-honeypot-token"
"SmartBNBGuy/BSC-honeypot" -> "SmartBNBGuy/BEP20-Honeypot"
"SmartBNBGuy/BSC-honeypot" -> "BINANCECONTRACT/Create-BEP20-Meme-Token"
"SmartBNBGuy/BSC-honeypot" -> "BINANCECONTRACT/Create-Honeypot-Token"
"SmartBNBGuy/BSC-honeypot" -> "BINANCECONTRACT/BSC-Contract"
"ShinoKana/multipleWindow3dScene" -> "hosea-teknologiAi/multi-window-scene"
"ShinoKana/multipleWindow3dScene" -> "bgstaal/multipleWindow3dScene"
"ShinoKana/multipleWindow3dScene" -> "jw-12138/multi-window-collab-demo"
"ShinoKana/multipleWindow3dScene" -> "1281471119qqtt/bgstaals"
"jgravelle/GroqApiLibrary" -> "jgravelle/Py2md"
"jgravelle/GroqApiLibrary" -> "jgravelle/shugok-ai"
"jgravelle/GroqApiLibrary" -> "jgravelle/Grompt"
"jgravelle/GroqApiLibrary" -> "jgravelle/MiniGroqqle"
"daveshap/David_Shapiro_Reading_List" -> "daveshap/Postnihilism"
"daveshap/David_Shapiro_Reading_List" -> "daveshap/Successor_Species"
"daveshap/David_Shapiro_Reading_List" -> "daveshap/Grand_Struggle_Great_Mystery"
"kingjulio8238/Memary" -> "topoteretes/cognee"
"kingjulio8238/Memary" -> "run-llama/llama_deploy"
"kingjulio8238/Memary" -> "getzep/zep"
"kingjulio8238/Memary" -> "memodb-io/memobase"
"kingjulio8238/Memary" -> "qhjqhj00/MemoRAG"
"kingjulio8238/Memary" -> "OSU-NLP-Group/HippoRAG"
"kingjulio8238/Memary" -> "letta-ai/letta"
"kingjulio8238/Memary" -> "MervinPraison/PraisonAI"
"kingjulio8238/Memary" -> "getzep/graphiti"
"kingjulio8238/Memary" -> "OpenAutoCoder/Agentless" ["e"=1]
"kingjulio8238/Memary" -> "SciPhi-AI/R2R"
"kingjulio8238/Memary" -> "InternLM/MindSearch"
"kingjulio8238/Memary" -> "KhoomeiK/LlamaGym"
"kingjulio8238/Memary" -> "chonkie-ai/chonkie"
"kingjulio8238/Memary" -> "aiwaves-cn/agents" ["e"=1]
"b4rtaz/distributed-llama" -> "bigscience-workshop/petals" ["e"=1]
"b4rtaz/distributed-llama" -> "gptme/gptme"
"b4rtaz/distributed-llama" -> "evilsocket/cake"
"b4rtaz/distributed-llama" -> "distantmagic/paddler" ["e"=1]
"b4rtaz/distributed-llama" -> "foldl/chatllm.cpp"
"b4rtaz/distributed-llama" -> "aphrodite-engine/aphrodite-engine" ["e"=1]
"b4rtaz/distributed-llama" -> "ridgerchu/matmulfreellm" ["e"=1]
"b4rtaz/distributed-llama" -> "mostlygeek/llama-swap" ["e"=1]
"b4rtaz/distributed-llama" -> "intel/intel-extension-for-transformers" ["e"=1]
"b4rtaz/distributed-llama" -> "ILikeAI/AlwaysReddy" ["e"=1]
"b4rtaz/distributed-llama" -> "codelion/optillm"
"b4rtaz/distributed-llama" -> "trholding/llama2.c"
"b4rtaz/distributed-llama" -> "intel/neural-speed" ["e"=1]
"b4rtaz/distributed-llama" -> "leejet/stable-diffusion.cpp"
"b4rtaz/distributed-llama" -> "argilla-io/distilabel" ["e"=1]
"plaintextpackets/netprobe_lite" -> "emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC"
"plaintextpackets/netprobe_lite" -> "ubuygold/go-noss" ["e"=1]
"plaintextpackets/netprobe_lite" -> "rocketseat-education/nlw-expert-nodejs"
"plaintextpackets/netprobe_lite" -> "yihong0618/tg_bot_collections" ["e"=1]
"plaintextpackets/netprobe_lite" -> "TheMMC/In-Place_Upgrade_Helper"
"plaintextpackets/netprobe_lite" -> "rocketseat-education/nlw-expert-react"
"wikit-ai/awesome-llm-courses" -> "wikit-ai/kg-rag-egc2024"
"Trainy-ai/konduktor" -> "Trainy-ai/nodify"
"Trainy-ai/konduktor" -> "Trainy-ai/llm-atc"
"Trainy-ai/konduktor" -> "Trainy-ai/trainy"
"Trainy-ai/konduktor" -> "CambioML/gpuv"
"aymenfurter/microagents" -> "s-casci/tinyzero"
"aymenfurter/microagents" -> "llm-edge/hal-9100" ["e"=1]
"aymenfurter/microagents" -> "NeumTry/NeumAI"
"aymenfurter/microagents" -> "metaskills/experts"
"aymenfurter/microagents" -> "DataBassGit/AgentForge" ["e"=1]
"aymenfurter/microagents" -> "DropbaseHQ/dropbase"
"567-labs/instructor-js" -> "hack-dance/island-ai"
"567-labs/instructor-js" -> "cloudflare/partykit" ["e"=1]
"567-labs/instructor-js" -> "hrishioa/wishful-search"
"567-labs/instructor-js" -> "instructor-ai/evals"
"567-labs/instructor-js" -> "instructor-ai/cloud"
"567-labs/instructor-js" -> "567-labs/instructor"
"567-labs/instructor-js" -> "traceloop/openllmetry-js"
"brilliantlabsAR/noa-assistant" -> "brilliantlabsAR/frame-utilities-for-python"
"brilliantlabsAR/noa-assistant" -> "brilliantlabsAR/ar-studio-for-vscode"
"brilliantlabsAR/noa-assistant" -> "brilliantlabsAR/frame-codebase"
"brilliantlabsAR/noa-assistant" -> "brilliantlabsAR/noa-flutter"
"373675032/smart-medicine" -> "373675032/academic-report"
"373675032/smart-medicine" -> "373675032/verio-house"
"373675032/smart-medicine" -> "373675032/love-charity"
"373675032/smart-medicine" -> "honeyandme/RAGQnASystem"
"373675032/smart-medicine" -> "274056675/springboot-openai-chatgpt" ["e"=1]
"Yuyz0112/dewhale" -> "raidendotai/openv0"
"Yuyz0112/dewhale" -> "sparrow-js/an-codeAI" ["e"=1]
"Yuyz0112/dewhale" -> "rapidpages/rapidpages"
"Yuyz0112/dewhale" -> "zernonia/vue0" ["e"=1]
"Yuyz0112/dewhale" -> "dakouan18/vx.dev"
"Yuyz0112/dewhale" -> "weijunext/smart-excel-ai" ["e"=1]
"Yuyz0112/dewhale" -> "arianrhodsandlot/nostalgist" ["e"=1]
"Yuyz0112/dewhale" -> "weijunext/landing-page-boilerplate" ["e"=1]
"Yuyz0112/dewhale" -> "engigu/Message-Push-Nest" ["e"=1]
"Yuyz0112/dewhale" -> "WindChat-Link/windchat-extension"
"Yuyz0112/dewhale" -> "hardhackerlabs/book" ["e"=1]
"Yuyz0112/dewhale" -> "Olwiba/Kickass-markdown" ["e"=1]
"Yuyz0112/dewhale" -> "smartxworks/sunmao-ui" ["e"=1]
"Yuyz0112/dewhale" -> "weijunext/indie-hacker-tools" ["e"=1]
"Yuyz0112/dewhale" -> "stackblitz/bolt.new"
"rocketseat-education/nlw-unite-nodejs" -> "rocketseat-education/nlw-unite-react"
"rocketseat-education/nlw-unite-nodejs" -> "rocketseat-education/nlw-unite-devops"
"rocketseat-education/nlw-unite-nodejs" -> "rocketseat-education/nlw-unite-react-native"
"rocketseat-education/nlw-unite-nodejs" -> "rocketseat-education/nlw-unite-python"
"rocketseat-education/nlw-unite-nodejs" -> "rocketseat-education/nlw-journey-nodejs"
"rocketseat-education/nlw-unite-nodejs" -> "rocketseat-education/nlw-unite-html-css-js"
"rocketseat-education/nlw-unite-nodejs" -> "rocketseat-education/nlw-unite-java"
"ex3ndr/llama-coder" -> "twinnydotdev/twinny"
"ex3ndr/llama-coder" -> "bernardo-bruning/ollama-copilot"
"ex3ndr/llama-coder" -> "RussellCanfield/wingman-ai"
"ex3ndr/llama-coder" -> "Nutlope/llamacoder"
"ex3ndr/llama-coder" -> "hinterdupfinger/obsidian-ollama" ["e"=1]
"ex3ndr/llama-coder" -> "gluonfield/enchanted" ["e"=1]
"ex3ndr/llama-coder" -> "dezoito/ollama-grid-search" ["e"=1]
"ex3ndr/llama-coder" -> "ivanfioravanti/chatbot-ollama"
"ex3ndr/llama-coder" -> "srikanth235/privy"
"ex3ndr/llama-coder" -> "ollama-ui/ollama-ui"
"ex3ndr/llama-coder" -> "bionic-gpt/bionic-gpt"
"ex3ndr/llama-coder" -> "sourcegraph/cody"
"ex3ndr/llama-coder" -> "continuedev/continue"
"ex3ndr/llama-coder" -> "xNul/code-llama-for-vscode" ["e"=1]
"ex3ndr/llama-coder" -> "e2b-dev/fragments"
"AgentOps-AI/tokencost" -> "lm-sys/RouteLLM"
"AgentOps-AI/tokencost" -> "Filimoa/open-parse"
"AgentOps-AI/tokencost" -> "reworkd/tarsier"
"AgentOps-AI/tokencost" -> "zou-group/textgrad"
"AgentOps-AI/tokencost" -> "labmlai/inspectus"
"AgentOps-AI/tokencost" -> "AgentOps-AI/agentops"
"AgentOps-AI/tokencost" -> "promptfoo/promptfoo"
"AgentOps-AI/tokencost" -> "kingjulio8238/Memary"
"AgentOps-AI/tokencost" -> "alvin-r/databonsai" ["e"=1]
"AgentOps-AI/tokencost" -> "finic-ai/finic"
"AgentOps-AI/tokencost" -> "Cloud-Code-AI/kaizen"
"AgentOps-AI/tokencost" -> "SylphAI-Inc/AdalFlow"
"AgentOps-AI/tokencost" -> "THUDM/LongWriter"
"AgentOps-AI/tokencost" -> "567-labs/instructor"
"AgentOps-AI/tokencost" -> "BerriAI/litellm"
"Cloud-Code-AI/kaizen" -> "Cloud-Code-AI/AkiraDocs"
"Cloud-Code-AI/kaizen" -> "Cloud-Code-AI/cloudstate"
"Cloud-Code-AI/kaizen" -> "gptlint/gptlint"
"Cloud-Code-AI/kaizen" -> "sauravpanda/BrowserAI"
"jxzhangjhu/Awesome-LLM-RAG" -> "frutik/Awesome-RAG"
"jxzhangjhu/Awesome-LLM-RAG" -> "hymie122/RAG-Survey"
"jxzhangjhu/Awesome-LLM-RAG" -> "lizhe2004/Awesome-LLM-RAG-Application"
"jxzhangjhu/Awesome-LLM-RAG" -> "Tongji-KGLLM/RAG-Survey"
"jxzhangjhu/Awesome-LLM-RAG" -> "coree/awesome-rag"
"jxzhangjhu/Awesome-LLM-RAG" -> "gabriben/awesome-generative-information-retrieval" ["e"=1]
"jxzhangjhu/Awesome-LLM-RAG" -> "AkariAsai/self-rag"
"jxzhangjhu/Awesome-LLM-RAG" -> "Xnhyacinth/Awesome-LLM-Long-Context-Modeling" ["e"=1]
"jxzhangjhu/Awesome-LLM-RAG" -> "zjukg/KG-LLM-Papers" ["e"=1]
"jxzhangjhu/Awesome-LLM-RAG" -> "hyp1231/awesome-llm-powered-agent" ["e"=1]
"jxzhangjhu/Awesome-LLM-RAG" -> "RUC-NLPIR/FlashRAG"
"jxzhangjhu/Awesome-LLM-RAG" -> "Timothyxxx/Chain-of-ThoughtsPapers" ["e"=1]
"jxzhangjhu/Awesome-LLM-RAG" -> "atfortes/Awesome-LLM-Reasoning" ["e"=1]
"jxzhangjhu/Awesome-LLM-RAG" -> "jzbjyb/FLARE" ["e"=1]
"jxzhangjhu/Awesome-LLM-RAG" -> "WangRongsheng/Awesome-LLM-with-RAG"
"trypear/pearai-submodule" -> "trypear/pear-landing-page"
"trypear/pearai-submodule" -> "trypear/pearai-submodule"
"trypear/pearai-submodule" -> "trypear/pearai-documentation"
"trypear/pearai-submodule" -> "trypear/pearai-app-archive"
"Omniplex-ai/omniplex" -> "mckaywrigley/clarity-ai" ["e"=1]
"Omniplex-ai/omniplex" -> "rashadphz/farfalle"
"Omniplex-ai/omniplex" -> "jjleng/sensei"
"Omniplex-ai/omniplex" -> "supermemoryai/opensearch-ai"
"Omniplex-ai/omniplex" -> "YassKhazzan/openperplex_backend_os"
"Omniplex-ai/omniplex" -> "developersdigest/llm-answer-engine"
"Omniplex-ai/omniplex" -> "Nutlope/turboseek"
"Omniplex-ai/omniplex" -> "fatwang2/search4all" ["e"=1]
"Omniplex-ai/omniplex" -> "Yusuke710/nanoPerplexityAI" ["e"=1]
"Omniplex-ai/omniplex" -> "ItzCrazyKns/Perplexica"
"Omniplex-ai/omniplex" -> "miurla/morphic"
"Omniplex-ai/omniplex" -> "ILikeAI/AlwaysReddy" ["e"=1]
"Omniplex-ai/omniplex" -> "yokingma/search_with_ai" ["e"=1]
"Omniplex-ai/omniplex" -> "brunostjohn/perplexideez" ["e"=1]
"Omniplex-ai/omniplex" -> "EpistasisLab/KRAGEN" ["e"=1]
"vince-lam/awesome-local-llms" -> "menloresearch/awesome-local-ai"
"vince-lam/awesome-local-llms" -> "marco-jeffrey/awesome-llm-resources"
"langchain-ai/langgraphjs" -> "langchain-ai/langchainjs"
"langchain-ai/langgraphjs" -> "langchain-ai/langchain-nextjs-template"
"langchain-ai/langgraphjs" -> "modelcontextprotocol/typescript-sdk"
"langchain-ai/langgraphjs" -> "langchain-ai/langgraph-studio"
"langchain-ai/langgraphjs" -> "run-llama/LlamaIndexTS"
"langchain-ai/langgraphjs" -> "bracesproul/langgraphjs-examples"
"langchain-ai/langgraphjs" -> "langchain-ai/langgraph"
"langchain-ai/langgraphjs" -> "langchain-ai/langchainjs-mcp-adapters"
"langchain-ai/langgraphjs" -> "langchain-ai/open-canvas"
"langchain-ai/langgraphjs" -> "langchain-ai/social-media-agent"
"langchain-ai/langgraphjs" -> "langchain-ai/agent-inbox"
"langchain-ai/langgraphjs" -> "vercel/ai"
"langchain-ai/langgraphjs" -> "langchain-ai/agent-chat-ui"
"langchain-ai/langgraphjs" -> "assistant-ui/assistant-ui"
"langchain-ai/langgraphjs" -> "ax-llm/ax"
"rocketseat-education/nlw-expert-react-native" -> "rocketseat-education/nlw-expert-nodejs"
"rocketseat-education/nlw-expert-react-native" -> "rocketseat-education/nlw-expert-python"
"rocketseat-education/nlw-expert-react-native" -> "rocketseat-education/nlw-expert-react"
"rocketseat-education/nlw-expert-react-native" -> "rocketseat-education/nlw-expert-html-css-js"
"rocketseat-education/nlw-expert-react-native" -> "rocketseat-education/nlw-expert-java"
"rocketseat-education/nlw-expert-react-native" -> "rocketseat-education/nlw-expert-c-sharp"
"rupeshs/fastsdcpu" -> "leejet/stable-diffusion.cpp"
"rupeshs/fastsdcpu" -> "vitoplantamura/OnnxStream"
"rupeshs/fastsdcpu" -> "0xbitches/sd-webui-lcm" ["e"=1]
"rupeshs/fastsdcpu" -> "segmind/distill-sd" ["e"=1]
"rupeshs/fastsdcpu" -> "vladmandic/sdnext" ["e"=1]
"rupeshs/fastsdcpu" -> "chengzeyi/stable-fast" ["e"=1]
"rupeshs/fastsdcpu" -> "PixArt-alpha/PixArt-sigma" ["e"=1]
"rupeshs/fastsdcpu" -> "Nerogar/OneTrainer" ["e"=1]
"rupeshs/fastsdcpu" -> "G-U-N/Phased-Consistency-Model" ["e"=1]
"rupeshs/fastsdcpu" -> "luosiallen/latent-consistency-model" ["e"=1]
"rupeshs/fastsdcpu" -> "showlab/X-Adapter" ["e"=1]
"rupeshs/fastsdcpu" -> "tin2tin/Pallaidium" ["e"=1]
"rupeshs/fastsdcpu" -> "huggingface/optimum-intel" ["e"=1]
"rupeshs/fastsdcpu" -> "MoonRide303/Fooocus-MRE" ["e"=1]
"rupeshs/fastsdcpu" -> "Extraltodeus/ComfyUI-AutomaticCFG" ["e"=1]
"ibm-granite/granite-code-models" -> "instructlab/instructlab"
"ibm-granite/granite-code-models" -> "data-prep-kit/data-prep-kit"
"ibm-granite/granite-code-models" -> "instructlab/taxonomy"
"ibm-granite/granite-code-models" -> "ibm-granite/granite-3.0-language-models"
"ibm-granite/granite-code-models" -> "myshell-ai/JetMoE" ["e"=1]
"ibm-granite/granite-code-models" -> "prometheus-eval/prometheus-eval" ["e"=1]
"ibm-granite/granite-code-models" -> "AutoCodeRoverSG/auto-code-rover"
"ibm-granite/granite-code-models" -> "IBM/dolomite-engine"
"ibm-granite/granite-code-models" -> "OpenAutoCoder/Agentless" ["e"=1]
"ibm-granite/granite-code-models" -> "bin123apple/AutoCoder"
"ibm-granite/granite-code-models" -> "kingjulio8238/Memary"
"ibm-granite/granite-code-models" -> "ibm-granite/granite-tsfm" ["e"=1]
"ibm-granite/granite-code-models" -> "i-am-bee/beeai-framework"
"ibm-granite/granite-code-models" -> "evalplus/evalplus" ["e"=1]
"ibm-granite/granite-code-models" -> "bigcode-project/bigcode-evaluation-harness" ["e"=1]
"run-llama/mongodb-demo" -> "run-llama/llamaindex_aws_ingestion"
"Doriandarko/RepoToTextForLLMs" -> "cognitivecomputations/github2file"
"Doriandarko/RepoToTextForLLMs" -> "Doriandarko/maestro"
"Doriandarko/RepoToTextForLLMs" -> "Doriandarko/gemini-ui-to-code"
"Doriandarko/RepoToTextForLLMs" -> "Doriandarko/opus-interpreter"
"Doriandarko/RepoToTextForLLMs" -> "Doriandarko/DIY-Astra"
"Doriandarko/RepoToTextForLLMs" -> "Doriandarko/omni-engineer"
"Doriandarko/RepoToTextForLLMs" -> "JeremiahPetersen/RepoToText"
"Doriandarko/RepoToTextForLLMs" -> "mshumer/ai-researcher"
"Doriandarko/RepoToTextForLLMs" -> "e2b-dev/e2b-cookbook"
"Doriandarko/RepoToTextForLLMs" -> "simonw/files-to-prompt"
"Doriandarko/RepoToTextForLLMs" -> "e2b-dev/code-interpreter"
"Doriandarko/RepoToTextForLLMs" -> "Doriandarko/BabyAGIChatGPT" ["e"=1]
"Doriandarko/RepoToTextForLLMs" -> "mendableai/llmstxt-generator"
"Doriandarko/RepoToTextForLLMs" -> "s-smits/agentic-cursorrules"
"Doriandarko/RepoToTextForLLMs" -> "Doriandarko/Moondream2-streamlit"
"MorpheusAIs/Docs" -> "MorpheusAIs/MRC"
"MorpheusAIs/Docs" -> "MorpheusAIs/Morpheus"
"MorpheusAIs/Docs" -> "MorpheusAIs/SmartContracts"
"MorpheusAIs/Docs" -> "MorpheusAIs/MySuperAgent"
"AxisBotV2/solana-sniper-bot" -> "CryptoMemeSniper/sol-sniper-bot"
"AxisBotV2/solana-sniper-bot" -> "DewyCoder/crypto-trading-bot-eth-bnb"
"AxisBotV2/solana-sniper-bot" -> "hasan4adnan/Recta-AI"
"AxisBotV2/solana-sniper-bot" -> "blxsi/LBX-Grabber"
"AxisBotV2/solana-sniper-bot" -> "shegongku2024/TGshegongku"
"soufianetahiri/Anxun-isoon" -> "mttaggart/I-S00N"
"OpenCodeInterpreter/OpenCodeInterpreter" -> "bin123apple/AutoCoder"
"OpenCodeInterpreter/OpenCodeInterpreter" -> "MrGreyfun/Local-Code-Interpreter" ["e"=1]
"OpenCodeInterpreter/OpenCodeInterpreter" -> "aixcoder-plugin/aiXcoder-7B"
"OpenCodeInterpreter/OpenCodeInterpreter" -> "McGill-NLP/webllama"
"OpenCodeInterpreter/OpenCodeInterpreter" -> "Codium-ai/AlphaCodium"
"OpenCodeInterpreter/OpenCodeInterpreter" -> "Vahe1994/AQLM" ["e"=1]
"OpenCodeInterpreter/OpenCodeInterpreter" -> "Doriandarko/maestro"
"OpenCodeInterpreter/OpenCodeInterpreter" -> "uclaml/SPIN" ["e"=1]
"OpenCodeInterpreter/OpenCodeInterpreter" -> "shroominic/codeinterpreter-api" ["e"=1]
"OpenCodeInterpreter/OpenCodeInterpreter" -> "evalplus/evalplus" ["e"=1]
"OpenCodeInterpreter/OpenCodeInterpreter" -> "AutoCodeRoverSG/auto-code-rover"
"OpenCodeInterpreter/OpenCodeInterpreter" -> "developersdigest/llm-answer-engine"
"OpenCodeInterpreter/OpenCodeInterpreter" -> "OS-Copilot/OS-Copilot" ["e"=1]
"OpenCodeInterpreter/OpenCodeInterpreter" -> "ise-uiuc/magicoder" ["e"=1]
"OpenCodeInterpreter/OpenCodeInterpreter" -> "semanser/codel"
"McGill-NLP/webllama" -> "McGill-NLP/weblinx" ["e"=1]
"McGill-NLP/webllama" -> "cohere-ai/cohere-toolkit"
"McGill-NLP/webllama" -> "Profluent-AI/OpenCRISPR" ["e"=1]
"McGill-NLP/webllama" -> "ILikeAI/AlwaysReddy" ["e"=1]
"McGill-NLP/webllama" -> "a-real-ai/pywinassistant"
"McGill-NLP/webllama" -> "semanser/codel"
"McGill-NLP/webllama" -> "haizelabs/llama3-jailbreak" ["e"=1]
"McGill-NLP/webllama" -> "lavague-ai/LaVague"
"McGill-NLP/webllama" -> "OpenCodeInterpreter/OpenCodeInterpreter"
"McGill-NLP/webllama" -> "Doriandarko/maestro"
"McGill-NLP/webllama" -> "xlang-ai/OSWorld" ["e"=1]
"McGill-NLP/webllama" -> "developersdigest/llm-answer-engine"
"McGill-NLP/webllama" -> "andrewnguonly/Lumos"
"McGill-NLP/webllama" -> "OSU-NLP-Group/SeeAct" ["e"=1]
"McGill-NLP/webllama" -> "AutoCodeRoverSG/auto-code-rover"
"AnswerDotAI/rerankers" -> "AnswerDotAI/RAGatouille"
"AnswerDotAI/rerankers" -> "PrithivirajDamodaran/FlashRank"
"AnswerDotAI/rerankers" -> "AnswerDotAI/byaldi"
"AnswerDotAI/rerankers" -> "xhluca/bm25s"
"AnswerDotAI/rerankers" -> "lightonai/pylate"
"AnswerDotAI/rerankers" -> "castorini/rank_llm" ["e"=1]
"AnswerDotAI/rerankers" -> "urchade/GLiNER"
"AnswerDotAI/rerankers" -> "illuin-tech/colpali"
"AnswerDotAI/rerankers" -> "AnswerDotAI/ModernBERT"
"AnswerDotAI/rerankers" -> "stanford-futuredata/ColBERT" ["e"=1]
"AnswerDotAI/rerankers" -> "michaelfeil/infinity"
"AnswerDotAI/rerankers" -> "AmenRa/ranx" ["e"=1]
"AnswerDotAI/rerankers" -> "qdrant/fastembed"
"AnswerDotAI/rerankers" -> "argilla-io/distilabel" ["e"=1]
"AnswerDotAI/rerankers" -> "sunnweiwei/RankGPT" ["e"=1]
"jgravelle/AutoGroq" -> "jgravelle/pocketgroq"
"jgravelle/AutoGroq" -> "MervinPraison/PraisonAI"
"jgravelle/AutoGroq" -> "Doriandarko/maestro"
"jgravelle/AutoGroq" -> "a-real-ai/pywinassistant"
"jgravelle/AutoGroq" -> "strnad/CrewAI-Studio" ["e"=1]
"jgravelle/AutoGroq" -> "VRSEN/agency-swarm-lab" ["e"=1]
"jgravelle/AutoGroq" -> "tylerprogramming/ai" ["e"=1]
"jgravelle/AutoGroq" -> "VRSEN/agency-swarm"
"jgravelle/AutoGroq" -> "jgravelle/Py2md"
"jgravelle/AutoGroq" -> "madtank/autogenstudio-skills" ["e"=1]
"jgravelle/AutoGroq" -> "SawyerHood/tlbrowse"
"jgravelle/AutoGroq" -> "togethercomputer/MoA"
"jgravelle/AutoGroq" -> "StreetLamb/tribe"
"jgravelle/AutoGroq" -> "skapadia3214/groq-moa"
"jgravelle/AutoGroq" -> "Upsonic/Tiger" ["e"=1]
"gomate-community/rageval" -> "gomate-community/awesome-papers-for-rag"
"jwa91/LangGraph-Expense-Tracker" -> "dheerajrhegde/servicedesk_langgraph_tavily"
"jwa91/LangGraph-Expense-Tracker" -> "botextractai/ai-langgraph-multi-agent"
"ageerle/ruoyi-admin" -> "ageerle/ruoyi-web"
"ageerle/ruoyi-admin" -> "ageerle/ruoyi-uniapp"
"ggerganov/bark.cpp" -> "ggerganov/bert.cpp"
"jakobhoeg/nextjs-ollama-llm-ui" -> "jakobhoeg/shadcn-chat" ["e"=1]
"jakobhoeg/nextjs-ollama-llm-ui" -> "ivanfioravanti/chatbot-ollama"
"jakobhoeg/nextjs-ollama-llm-ui" -> "richawo/minimal-llm-ui"
"jakobhoeg/nextjs-ollama-llm-ui" -> "HelgeSverre/ollama-gui"
"jakobhoeg/nextjs-ollama-llm-ui" -> "mrdjohnson/llm-x"
"jakobhoeg/nextjs-ollama-llm-ui" -> "ollama-ui/ollama-ui"
"jakobhoeg/nextjs-ollama-llm-ui" -> "gluonfield/enchanted" ["e"=1]
"jakobhoeg/nextjs-ollama-llm-ui" -> "ollama-webui/ollama-webui-lite"
"jakobhoeg/nextjs-ollama-llm-ui" -> "bionic-gpt/bionic-gpt"
"jakobhoeg/nextjs-ollama-llm-ui" -> "langchain-ai/langchain-nextjs-template"
"jakobhoeg/nextjs-ollama-llm-ui" -> "ollama/ollama-js"
"jakobhoeg/nextjs-ollama-llm-ui" -> "ollama-interface/Ollama-Gui"
"jakobhoeg/nextjs-ollama-llm-ui" -> "drazdra/ollama-chats"
"jakobhoeg/nextjs-ollama-llm-ui" -> "vercel-labs/gemini-chatbot"
"jakobhoeg/nextjs-ollama-llm-ui" -> "sadmann7/file-uploader" ["e"=1]
"AkariAsai/self-rag" -> "HuskyInSalt/CRAG" ["e"=1]
"AkariAsai/self-rag" -> "jzbjyb/FLARE" ["e"=1]
"AkariAsai/self-rag" -> "Tongji-KGLLM/RAG-Survey"
"AkariAsai/self-rag" -> "RUC-NLPIR/FlashRAG"
"AkariAsai/self-rag" -> "hymie122/RAG-Survey"
"AkariAsai/self-rag" -> "princeton-nlp/ALCE" ["e"=1]
"AkariAsai/self-rag" -> "facebookresearch/contriever" ["e"=1]
"AkariAsai/self-rag" -> "castorini/pyserini" ["e"=1]
"AkariAsai/self-rag" -> "FlagOpen/FlagEmbedding" ["e"=1]
"AkariAsai/self-rag" -> "jxzhangjhu/Awesome-LLM-RAG"
"AkariAsai/self-rag" -> "explodinggradients/ragas"
"AkariAsai/self-rag" -> "parthsarthi03/raptor"
"AkariAsai/self-rag" -> "shmsw25/FActScore" ["e"=1]
"AkariAsai/self-rag" -> "yizhongw/self-instruct" ["e"=1]
"AkariAsai/self-rag" -> "starsuzi/Adaptive-RAG" ["e"=1]
"reworkd/tarsier" -> "reworkd/bananalyzer"
"reworkd/tarsier" -> "normal-computing/fuji-web"
"reworkd/tarsier" -> "lavague-ai/LaVague"
"reworkd/tarsier" -> "redotvideo/haven"
"reworkd/tarsier" -> "ishan0102/vimGPT"
"reworkd/tarsier" -> "OSU-NLP-Group/SeeAct" ["e"=1]
"reworkd/tarsier" -> "ddupont808/GPT-4V-Act" ["e"=1]
"reworkd/tarsier" -> "OpenAdaptAI/OpenAdapt" ["e"=1]
"reworkd/tarsier" -> "finic-ai/finic"
"reworkd/tarsier" -> "OpenPipe/OpenPipe"
"reworkd/tarsier" -> "trytrench/trench"
"reworkd/tarsier" -> "steel-dev/steel-browser"
"reworkd/tarsier" -> "redotvideo/revideo" ["e"=1]
"reworkd/tarsier" -> "quarylabs/quary" ["e"=1]
"reworkd/tarsier" -> "browserbase/stagehand"
"foldl/chatllm.cpp" -> "ikawrakow/ik_llama.cpp" ["e"=1]
"foldl/chatllm.cpp" -> "Maximilian-Winter/llama-cpp-agent" ["e"=1]
"vndee/local-assistant-examples" -> "amscotti/local-LLM-with-RAG"
"Farzad-R/LLM-Zero-to-Hundred" -> "Farzad-R/Advanced-QA-and-RAG-Series"
"Farzad-R/Advanced-QA-and-RAG-Series" -> "Farzad-R/LLM-Zero-to-Hundred"
"Farzad-R/Advanced-QA-and-RAG-Series" -> "curiousily/AI-Bootcamp"
"rocketseat-education/nlw-expert-react" -> "rocketseat-education/nlw-expert-nodejs"
"rocketseat-education/nlw-expert-react" -> "rocketseat-education/nlw-expert-react-native"
"rocketseat-education/nlw-expert-react" -> "rocketseat-education/nlw-expert-python"
"rocketseat-education/nlw-expert-react" -> "rocketseat-education/nlw-expert-html-css-js"
"rocketseat-education/nlw-expert-react" -> "rocketseat-education/nlw-expert-c-sharp"
"rocketseat-education/nlw-expert-react" -> "rocketseat-education/nlw-journey-react"
"rocketseat-education/nlw-expert-react" -> "rocketseat-education/nlw-expert-java"
"rocketseat-education/nlw-expert-react" -> "rocketseat-education/nlw-unite-react"
"rocketseat-education/nlw-expert-react" -> "rocketseat-education/nlw-unite-nodejs"
"rocketseat-education/nlw-expert-html-css-js" -> "rocketseat-education/nlw-expert-python"
"rocketseat-education/nlw-expert-html-css-js" -> "rocketseat-education/nlw-expert-java"
"groq/groq-python" -> "groq/groq-api-cookbook"
"groq/groq-python" -> "groq/groq-typescript"
"groq/groq-python" -> "definitive-io/code-indexer-loop"
"groq/groq-python" -> "definitive-io/openassistants"
"groq/groq-python" -> "groq/groqflow"
"groq/groq-python" -> "definitive-io/human-eval-sampling-benchmark"
"samwit/agent_tutorials" -> "cnunescoelho/kiroku"
"samwit/agent_tutorials" -> "lz-chen/research-agent"
"run-llama/llamacloud-demo" -> "run-llama/multi-agent-concierge"
"run-llama/llamacloud-demo" -> "run-llama/create-llama"
"run-llama/llamacloud-demo" -> "rsrohan99/Llama-Researcher"
"run-llama/llamacloud-demo" -> "togethercomputer/together-cookbook"
"run-llama/llamacloud-demo" -> "run-llama/mcp-server-llamacloud"
"regolith-labs/drillx" -> "Kriptikz/ore-hq-client"
"regolith-labs/drillx" -> "Kriptikz/ore-hq-server"
"regolith-labs/drillx" -> "regolith-labs/ore-app"
"bin123apple/AutoCoder" -> "OpenCodeInterpreter/OpenCodeInterpreter"
"bin123apple/AutoCoder" -> "bin123apple/MACM" ["e"=1]
"bin123apple/AutoCoder" -> "SawyerHood/tlbrowse"
"bin123apple/AutoCoder" -> "semanser/codel"
"bin123apple/AutoCoder" -> "evalplus/evalplus" ["e"=1]
"bin123apple/AutoCoder" -> "jgravelle/AutoGroq"
"bin123apple/AutoCoder" -> "AutoCodeRoverSG/auto-code-rover"
"bin123apple/AutoCoder" -> "ise-uiuc/magicoder" ["e"=1]
"bin123apple/AutoCoder" -> "allwefantasy/auto-coder"
"bin123apple/AutoCoder" -> "novitalabs/AnimateAnyone" ["e"=1]
"bin123apple/AutoCoder" -> "tspeterkim/insta-chat" ["e"=1]
"bin123apple/AutoCoder" -> "OpenAutoCoder/Agentless" ["e"=1]
"bin123apple/AutoCoder" -> "a-real-ai/pywinassistant"
"daveshap/latent_space_activation" -> "daveshap/BSHR_Loop"
"daveshap/latent_space_activation" -> "daveshap/Semantic_Embedding_Reverse_Dictionary"
"daveshap/latent_space_activation" -> "daveshap/Hierarchical_Document_Representation"
"daveshap/latent_space_activation" -> "daveshap/SparsePrimingRepresentations"
"daveshap/latent_space_activation" -> "daveshap/YouTubeChapterGenerator"
"daveshap/latent_space_activation" -> "daveshap/nonfiction_drafting"
"daveshap/latent_space_activation" -> "daveshap/Medical_Intake"
"daveshap/latent_space_activation" -> "daveshap/weekly_arxiv"
"daveshap/latent_space_activation" -> "daveshap/ChatGPT_Custom_Instructions"
"daveshap/latent_space_activation" -> "daveshap/Benevolent_AGI"
"TheMMC/In-Place_Upgrade_Helper" -> "mtniehaus/MediaTool"
"adithya-s-k/VARAG" -> "tonywu71/colpali-cookbooks"
"adithya-s-k/VARAG" -> "illuin-tech/colpali"
"adithya-s-k/VARAG" -> "AnswerDotAI/byaldi"
"adithya-s-k/VARAG" -> "illuin-tech/vidore-benchmark"
"adithya-s-k/VARAG" -> "PromtEngineer/localGPT-Vision"
"adithya-s-k/VARAG" -> "s-emanuilov/litepali"
"adithya-s-k/VARAG" -> "dame-cell/VisionRAG"
"adithya-s-k/VARAG" -> "Softlandia-Ltd/vision-is-all-you-need"
"adithya-s-k/VARAG" -> "merveenoyan/smol-vision"
"harana/search" -> "hcavarsan/kftray"
"hcavarsan/kftray" -> "harana/search"
"hcavarsan/kftray" -> "unagex/kondense" ["e"=1]
"hcavarsan/kftray" -> "gianlucam76/k8s-cleaner" ["e"=1]
"hcavarsan/kftray" -> "deggja/netfetch" ["e"=1]
"hcavarsan/kftray" -> "leopoldjoy/simple-smart-wallet"
"hcavarsan/kftray" -> "getseabird/seabird" ["e"=1]
"hcavarsan/kftray" -> "jakebark/tag-nag"
"hcavarsan/kftray" -> "KewbitXMR/haveno-app"
"hcavarsan/kftray" -> "andreyykavv/RynexLLM"
"hcavarsan/kftray" -> "adnxy/optic-react-native"
"hcavarsan/kftray" -> "cactus-compute/cactus"
"hcavarsan/kftray" -> "SupportTools/dr-syncer"
"hcavarsan/kftray" -> "emotion-block/project-elara"
"hcavarsan/kftray" -> "tosinonikute/Carteasy"
"hcavarsan/kftray" -> "tughw/ComfyUI-FramePack"
"ThomasJay/RAG" -> "tonykipkemboi/ollama_pdf_rag"
"drazdra/ollama-chats" -> "mmo80/alpaca-webui"
"drazdra/ollama-chats" -> "rapidarchitect/ollama_basic_chat"
"drazdra/ollama-chats" -> "jikkuatwork/saddle"
"n8n-io/n8n-hosting" -> "n8n-io/n8n-docs"
"n8n-io/n8n-hosting" -> "n8n-io/n8n-desktop-app"
"n8n-io/n8n-hosting" -> "n8n-io/n8n-nodes-starter"
"n8n-io/n8n-hosting" -> "n8n-io/n8n-docker-caddy"
"n8n-io/n8n-hosting" -> "Joffcom/n8n-ngrok"
"modem-works/terra" -> "OwlAIProject/Owl"
"modem-works/terra" -> "bokito-studio/poetry-camera-rpi"
"modem-works/terra" -> "BasedHardware/Whomane"
"modem-works/terra" -> "spencerc99/playhtml"
"mozilla-ai/lumigator" -> "mozilla-ai/any-agent"
"mozilla-ai/lumigator" -> "mozilla-ai/document-to-podcast"
"mozilla-ai/lumigator" -> "mozilla-ai/lm-buddy"
"373675032/love-charity" -> "373675032/su-share" ["e"=1]
"373675032/love-charity" -> "373675032/academic-report"
"linktimecloud/kubernetes-data-platform" -> "pengfeng/ask.py"
"linktimecloud/kubernetes-data-platform" -> "LinkTime-Corp/llm-in-containers"
"linktimecloud/kubernetes-data-platform" -> "leettools-dev/leettools"
"linktimecloud/kubernetes-data-platform" -> "dromara/CloudEon" ["e"=1]
"linktimecloud/kubernetes-data-platform" -> "linktimecloud/big-data-on-k8s"
"linktimecloud/kubernetes-data-platform" -> "apache/bigtop-manager" ["e"=1]
"upstash/semantic-cache" -> "upstash/rag-chat"
"upstash/semantic-cache" -> "run-rx/rx"
"apeatling/ollama-voice-mac" -> "maudoin/ollama-voice"
"apeatling/ollama-voice-mac" -> "KoljaB/LocalAIVoiceChat"
"apeatling/ollama-voice-mac" -> "mustafaaljadery/lightning-whisper-mlx" ["e"=1]
"apeatling/ollama-voice-mac" -> "armbues/SiLLM" ["e"=1]
"emarco177/langgraph-course" -> "emarco177/reflexion"
"emarco177/langgraph-course" -> "bracesproul/gen-ui-python"
"emarco177/langgraph-course" -> "emarco177/langgraph-customer-support"
"D-Star-AI/dsRAG" -> "chonkie-ai/chonkie"
"D-Star-AI/dsRAG" -> "circlemind-ai/fast-graphrag"
"D-Star-AI/dsRAG" -> "Filimoa/open-parse"
"D-Star-AI/dsRAG" -> "SciPhi-AI/R2R"
"D-Star-AI/dsRAG" -> "qhjqhj00/MemoRAG"
"D-Star-AI/dsRAG" -> "lumina-ai-inc/chunkr"
"D-Star-AI/dsRAG" -> "NirDiamant/Controllable-RAG-Agent"
"D-Star-AI/dsRAG" -> "gusye1234/nano-graphrag"
"D-Star-AI/dsRAG" -> "nlmatics/nlm-ingestor"
"D-Star-AI/dsRAG" -> "EpistasisLab/KRAGEN" ["e"=1]
"D-Star-AI/dsRAG" -> "KruxAI/ragbuilder"
"D-Star-AI/dsRAG" -> "parthsarthi03/raptor"
"D-Star-AI/dsRAG" -> "RUC-NLPIR/FlashRAG"
"D-Star-AI/dsRAG" -> "Andrew-Jang/RAGHub"
"D-Star-AI/dsRAG" -> "FutureClubNL/RAGMeUp"
"Sh4yy/personal-ai" -> "fatwang2/siri-ultra" ["e"=1]
"Sh4yy/personal-ai" -> "pipecat-ai/rtvi-web-demo"
"Sh4yy/personal-ai" -> "mshumer/ai-researcher"
"Sh4yy/personal-ai" -> "developersdigest/ai-devices"
"Sh4yy/personal-ai" -> "run-llama/create-llama"
"Sh4yy/personal-ai" -> "cloudflare/agents-starter" ["e"=1]
"rocketseat-education/nlw-unite-react" -> "rocketseat-education/nlw-unite-nodejs"
"rocketseat-education/nlw-unite-react" -> "rocketseat-education/nlw-unite-react-native"
"rocketseat-education/nlw-unite-react" -> "rocketseat-education/nlw-unite-html-css-js"
"rocketseat-education/nlw-unite-react" -> "rocketseat-education/nlw-unite-java"
"rocketseat-education/nlw-unite-react" -> "rocketseat-education/nlw-unite-python"
"TrafficGuard/typedai" -> "postgresml/korvus"
"TrafficGuard/typedai" -> "metaskills/experts"
"TrafficGuard/typedai" -> "coder/agentapi"
"TrafficGuard/typedai" -> "run-llama/llama_deploy"
"TrafficGuard/typedai" -> "adaline/gateway"
"TrafficGuard/typedai" -> "EmergenceAI/Agent-E"
"TrafficGuard/typedai" -> "hwchase17/langgraph-engineer"
"TrafficGuard/typedai" -> "DAGWorks-Inc/burr"
"TrafficGuard/typedai" -> "semanser/codel"
"lucastononro/llm-food-delivery" -> "run-llama/mongodb-demo"
"Vincent-liuwingsang/unlost" -> "Lukentui/smotrite-app"
"Vincent-liuwingsang/unlost" -> "dhamaniasad/cytev2"
"Vincent-liuwingsang/unlost" -> "nuance-dev/medio" ["e"=1]
"CryptoMemeSniper/sol-sniper-bot" -> "AxisBotV2/solana-sniper-bot"
"CryptoMemeSniper/sol-sniper-bot" -> "Styx-Crypter/Fud-Crypter-2024-Styx-Builder"
"CryptoMemeSniper/sol-sniper-bot" -> "AhmedRabby0601/solana-sniper-bot"
"tangledgroup/llama-cpp-wasm" -> "ngxson/wllama"
"towardsai/ai-tutor-rag-system" -> "towardsai/ragbook-notebooks"
"rocketseat-education/nlw-expert-c-sharp" -> "rocketseat-education/nlw-expert-python"
"rocketseat-education/nlw-expert-c-sharp" -> "rocketseat-education/nlw-expert-html-css-js"
"rocketseat-education/nlw-expert-c-sharp" -> "rocketseat-education/nlw-expert-java"
"rotemweiss57/gpt-newspaper" -> "plastic-labs/tutor-gpt" ["e"=1]
"rotemweiss57/gpt-newspaper" -> "n4ze3m/dialoqbase" ["e"=1]
"rotemweiss57/gpt-newspaper" -> "mshumer/ai-researcher"
"rotemweiss57/gpt-newspaper" -> "developersdigest/llm-answer-engine"
"rotemweiss57/gpt-newspaper" -> "langchain-ai/weblangchain" ["e"=1]
"rotemweiss57/gpt-newspaper" -> "mshumer/ai-journalist"
"rotemweiss57/gpt-newspaper" -> "AnswerDotAI/rerankers"
"rotemweiss57/gpt-newspaper" -> "langchain-ai/streamlit-agent" ["e"=1]
"rotemweiss57/gpt-newspaper" -> "langchain-ai/opengpts"
"rotemweiss57/gpt-newspaper" -> "StreetLamb/tribe"
"rotemweiss57/gpt-newspaper" -> "THUDM/LongWriter"
"rotemweiss57/gpt-newspaper" -> "assafelovic/gpt-researcher"
"rotemweiss57/gpt-newspaper" -> "langchain-ai/langgraph-studio"
"rotemweiss57/gpt-newspaper" -> "run-llama/llama_deploy"
"rotemweiss57/gpt-newspaper" -> "crewAIInc/crewAI-examples"
"Bklieger/Semantic" -> "Bklieger/ai4collab-bruno"
"AllAboutAI-YT/ai-terminal" -> "AllAboutAI-YT/text-to-JSON"
"AllAboutAI-YT/ai-terminal" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/ai-terminal" -> "AllAboutAI-YT/hackernews-llm-search"
"AllAboutAI-YT/ai-terminal" -> "AllAboutAI-YT/Command-R-GPT-4V2"
"FlagOpen/TACO" -> "FateMyName/dannjs"
"FlagOpen/TACO" -> "FateMyName/Libreria1"
"FlagOpen/TACO" -> "FateMyName/node"
"FlagOpen/TACO" -> "FateMyName/laminas-diactoros"
"FlagOpen/TACO" -> "FateMyName/fuel-core"
"FlagOpen/TACO" -> "FateMyName/eigenlayer-contracts"
"FlagOpen/TACO" -> "FateMyName/validator-dashboard"
"FlagOpen/TACO" -> "FateMyName/eigenda-operator-setup"
"FlagOpen/TACO" -> "FateMyName/eigensdk-go"
"FlagOpen/TACO" -> "FateMyName/sashay_pauxi"
"FlagOpen/TACO" -> "FateMyName/encrypto"
"FlagOpen/TACO" -> "FateMyName/monitor-client"
"FlagOpen/TACO" -> "BielskiBartosz/Console"
"FlagOpen/TACO" -> "PavloSap/Readme1"
"FlagOpen/TACO" -> "dgjklh/nvmrc"
"mitdbg/palimpzest" -> "orm011/pgserver"
"daveshap/PostLaborEconomics" -> "daveshap/Successor_Species"
"daveshap/PostLaborEconomics" -> "daveshap/Postnihilism"
"daveshap/PostLaborEconomics" -> "daveshap/Narratives_Emergence_Convergence"
"daveshap/PostLaborEconomics" -> "daveshap/Grand_Struggle_Great_Mystery"
"instructor-ai/evals" -> "instructor-ai/cloud"
"rkaehn/cr_task.h" -> "rochus-keller/CspChan"
"john-adeojo/custom_agent_tutorial" -> "john-adeojo/agency_swarm_tutorial"
"rocketseat-education/nlw-unite-html-css-js" -> "rocketseat-education/nlw-unite-python"
"jasonjmcghee/plock" -> "radames/LLM-automator"
"jasonjmcghee/plock" -> "andrewnguonly/Lumos"
"jasonjmcghee/plock" -> "natolambert/blogcaster"
"rocketseat-education/nlw-expert-python" -> "rocketseat-education/nlw-expert-html-css-js"
"rocketseat-education/nlw-expert-python" -> "rocketseat-education/nlw-expert-java"
"rocketseat-education/nlw-expert-python" -> "rocketseat-education/nlw-expert-react-native"
"rocketseat-education/nlw-expert-python" -> "rocketseat-education/nlw-expert-c-sharp"
"amnesia333/Amnesia" -> "amnesia49406/Amnesia-Tron-Brute-Force"
"eugeneyan/visualizing-finetunes" -> "parlance-labs/ftcourse"
"eugeneyan/visualizing-finetunes" -> "eugeneyan/align-app"
"eugeneyan/visualizing-finetunes" -> "jjallaire/inspect-llm-workshop"
"tgraupmann/WinForm_Ollama_Copilot" -> "jikkuatwork/saddle"
"definitive-io/openassistants" -> "definitive-io/code-indexer-loop"
"simonw/llm-gemini" -> "simonw/llm-claude-3"
"simonw/llm-gemini" -> "simonw/llm-anthropic"
"simonw/llm-gemini" -> "simonw/llm-mistral"
"mshumer/ai-researcher" -> "mshumer/ai-journalist"
"mshumer/ai-researcher" -> "mshumer/gpt-investor"
"mshumer/ai-researcher" -> "mshumer/gpt-llm-trainer" ["e"=1]
"mshumer/ai-researcher" -> "mshumer/gpt-author" ["e"=1]
"mshumer/ai-researcher" -> "e2b-dev/e2b-cookbook"
"mshumer/ai-researcher" -> "Doriandarko/maestro"
"mshumer/ai-researcher" -> "run-llama/create-llama"
"mshumer/ai-researcher" -> "mshumer/gpt-prompt-engineer"
"mshumer/ai-researcher" -> "hrishioa/lumentis"
"mshumer/ai-researcher" -> "yoheinakajima/mindgraph"
"mshumer/ai-researcher" -> "rotemweiss57/gpt-newspaper"
"mshumer/ai-researcher" -> "Doriandarko/RepoToTextForLLMs"
"mshumer/ai-researcher" -> "AutoCodeRoverSG/auto-code-rover"
"mshumer/ai-researcher" -> "entropy-research/Devon"
"mshumer/ai-researcher" -> "e2b-dev/code-interpreter"
"Nagi-ovo/CRAG-Ollama-Chat" -> "rapidarchitect/ollama_basic_chat"
"bananaml/fructose" -> "relari-ai/continuous-eval" ["e"=1]
"bananaml/fructose" -> "jackmpcollins/magentic"
"bananaml/fructose" -> "bananaml/potassium"
"bananaml/fructose" -> "DAGWorks-Inc/burr"
"bananaml/fructose" -> "AgentOps-AI/Jaiqu"
"unit-mesh/build-your-ai-coding-assistant" -> "unit-mesh/unit-gen"
"unit-mesh/build-your-ai-coding-assistant" -> "unit-mesh/auto-dev"
"unit-mesh/build-your-ai-coding-assistant" -> "mengjian-github/copilot-analysis"
"unit-mesh/build-your-ai-coding-assistant" -> "unit-mesh/autodev-vscode"
"unit-mesh/build-your-ai-coding-assistant" -> "CodeGeeX/codegeex-vscode-extension"
"unit-mesh/build-your-ai-coding-assistant" -> "phodal/shire"
"unit-mesh/build-your-ai-coding-assistant" -> "allwefantasy/auto-coder"
"unit-mesh/build-your-ai-coding-assistant" -> "unit-mesh/unit-minions" ["e"=1]
"unit-mesh/build-your-ai-coding-assistant" -> "unit-mesh/choco-builder"
"unit-mesh/build-your-ai-coding-assistant" -> "mimo-x/Code-Review-GPT-Gitlab" ["e"=1]
"unit-mesh/build-your-ai-coding-assistant" -> "WisdomShell/codeshell-intellij" ["e"=1]
"BenjaSOL/ore-cli-gpu" -> "tonyke-bot/ore-miner"
"BenjaSOL/ore-cli-gpu" -> "Parms-Crypto/CUDA-ORE-DUMP"
"BenjaSOL/ore-cli-gpu" -> "Kriptikz/ore-cli-gpu"
"BenjaSOL/ore-cli-gpu" -> "abcdsxg/ore-cli"
"BenjaSOL/ore-cli-gpu" -> "BenjaSOL/orz-cli-gpu"
"BenjaSOL/ore-cli-gpu" -> "regolith-labs/drillx"
"BenjaSOL/ore-cli-gpu" -> "OrzSupply/orz-cli"
"BenjaSOL/ore-cli-gpu" -> "regolith-labs/ore"
"BenjaSOL/ore-cli-gpu" -> "nubog-cmd/ore-cli-jito"
"BenjaSOL/ore-cli-gpu" -> "Kriptikz/ore-hq-server"
"BenjaSOL/ore-cli-gpu" -> "0xrsydn/ore-miner"
"BenjaSOL/ore-cli-gpu" -> "cryptoblairo/ore-cli-blairo"
"BenjaSOL/ore-cli-gpu" -> "Kriptikz/ore-hq-client"
"BenjaSOL/ore-cli-gpu" -> "okeyzero/ore-cli"
"data-prep-kit/data-prep-kit" -> "docling-project/docling-serve"
"data-prep-kit/data-prep-kit" -> "docling-project/docling-ibm-models"
"data-prep-kit/data-prep-kit" -> "instructlab/taxonomy"
"data-prep-kit/data-prep-kit" -> "ibm-granite-community/granite-snack-cookbook"
"data-prep-kit/data-prep-kit" -> "NVIDIA/NeMo-Curator" ["e"=1]
"data-prep-kit/data-prep-kit" -> "instructlab/instructlab"
"data-prep-kit/data-prep-kit" -> "ibm-granite/granite-code-models"
"data-prep-kit/data-prep-kit" -> "i-am-bee/beeai-framework"
"data-prep-kit/data-prep-kit" -> "DS4SD/deepsearch-toolkit"
"data-prep-kit/data-prep-kit" -> "codellm-devkit/python-sdk"
"data-prep-kit/data-prep-kit" -> "docling-project/docling-core"
"data-prep-kit/data-prep-kit" -> "i-am-bee/beeai-platform"
"data-prep-kit/data-prep-kit" -> "ucbepic/docetl"
"data-prep-kit/data-prep-kit" -> "sujee/data-prep-kit-examples"
"data-prep-kit/data-prep-kit" -> "ibm-granite/granite-3.0-language-models"
"rocketseat-education/nlw-expert-java" -> "rocketseat-education/nlw-expert-python"
"rocketseat-education/nlw-expert-java" -> "rocketseat-education/nlw-expert-html-css-js"
"LangbaseInc/langbase-examples" -> "LangbaseInc/langbase-sdk"
"Scale3-Labs/langtrace" -> "openlit/openlit"
"Scale3-Labs/langtrace" -> "Scale3-Labs/langtrace-python-sdk"
"Scale3-Labs/langtrace" -> "ax-llm/ax"
"Scale3-Labs/langtrace" -> "Helicone/helicone"
"Scale3-Labs/langtrace" -> "lunary-ai/lunary"
"Scale3-Labs/langtrace" -> "langwatch/langwatch"
"Scale3-Labs/langtrace" -> "lm-sys/RouteLLM"
"Scale3-Labs/langtrace" -> "Arize-ai/phoenix"
"Scale3-Labs/langtrace" -> "langroid/langroid"
"Scale3-Labs/langtrace" -> "langfuse/langfuse"
"Scale3-Labs/langtrace" -> "AgentOps-AI/agentops"
"Scale3-Labs/langtrace" -> "myscale/myscale-telemetry" ["e"=1]
"Scale3-Labs/langtrace" -> "truera/trulens"
"rocketseat-education/nlw-unite-java" -> "rocketseat-education/nlw-unite-react-native"
"rocketseat-education/nlw-unite-java" -> "rocketseat-education/nlw-unite-html-css-js"
"rocketseat-education/nlw-unite-java" -> "rocketseat-education/nlw-unite-python"
"sugarforever/LangChain-Advanced" -> "sugarforever/AutoGen-Tutorials"
"sugarforever/LangChain-Advanced" -> "sugarforever/LangChain-Tutorials"
"MorpheusAIs/MySuperAgent" -> "MorpheusAIs/Morpheus-Lumerin-Node"
"tincans-ai/gazelle" -> "thevoicecompany/gazelle-train"
"serverless/serverless-openwhisk" -> "apache/openwhisk-client-go"
"prometeytron/Prometheus-Tron-Brute-Force" -> "prometeydev/Prometheus"
"prometeytron/Prometheus-Tron-Brute-Force" -> "promethron/Prometheus-Tron-Brute-Force"
"rocketseat-education/nlw-unite-devops" -> "rocketseat-education/nlw-unite-python"
"rocketseat-education/nlw-unite-devops" -> "rocketseat-education/nlw-unite-html-css-js"
"christianrice/ai-demos" -> "christianrice/rag-coding-assistant"
"christianrice/ai-demos" -> "jgravelle/GroqCasters"
"PrithivirajDamodaran/FlashRank" -> "AnswerDotAI/rerankers"
"PrithivirajDamodaran/FlashRank" -> "qdrant/fastembed"
"PrithivirajDamodaran/FlashRank" -> "AnswerDotAI/RAGatouille"
"PrithivirajDamodaran/FlashRank" -> "michaelfeil/infinity"
"PrithivirajDamodaran/FlashRank" -> "urchade/GLiNER"
"PrithivirajDamodaran/FlashRank" -> "castorini/rank_llm" ["e"=1]
"PrithivirajDamodaran/FlashRank" -> "xhluca/bm25s"
"PrithivirajDamodaran/FlashRank" -> "aurelio-labs/semantic-chunkers" ["e"=1]
"PrithivirajDamodaran/FlashRank" -> "mixedbread-ai/batched"
"PrithivirajDamodaran/FlashRank" -> "PrithivirajDamodaran/SPLADERunner"
"PrithivirajDamodaran/FlashRank" -> "naver/splade" ["e"=1]
"PrithivirajDamodaran/FlashRank" -> "lightonai/pylate"
"PrithivirajDamodaran/FlashRank" -> "huggingface/setfit" ["e"=1]
"PrithivirajDamodaran/FlashRank" -> "jackboyla/GLiREL"
"PrithivirajDamodaran/FlashRank" -> "aurelio-labs/semantic-router"
"langchain-ai/langgraph-example" -> "hwchase17/langgraph-engineer"
"langchain-ai/langgraph-example" -> "langchain-ai/langgraph-studio"
"langchain-ai/langgraph-example" -> "langchain-ai/langgraph-engineer"
"langchain-ai/langgraph-example" -> "LangGraph-GUI/LangGraph-GUI"
"langchain-ai/langgraph-example" -> "langchain-ai/story-writing"
"langchain-ai/langgraph-example" -> "langchain-ai/react-agent"
"langchain-ai/langgraph-example" -> "langchain-ai/agent-inbox"
"langchain-ai/langgraph-example" -> "john-adeojo/graph_websearch_agent"
"langchain-ai/langgraph-example" -> "emarco177/langgraph-customer-support"
"langchain-ai/langgraph-example" -> "hinthornw/trustcall"
"coree/awesome-rag" -> "awesome-rag/awesome-rag" ["e"=1]
"coree/awesome-rag" -> "frutik/Awesome-RAG"
"coree/awesome-rag" -> "hymie122/RAG-Survey"
"coree/awesome-rag" -> "jxzhangjhu/Awesome-LLM-RAG"
"coree/awesome-rag" -> "WangRongsheng/Awesome-LLM-with-RAG"
"coree/awesome-rag" -> "Danielskry/Awesome-RAG"
"coree/awesome-rag" -> "pengr/LLM-Synthetic-Data" ["e"=1]
"daveshap/BSHR_Loop" -> "daveshap/latent_space_activation"
"daveshap/BSHR_Loop" -> "daveshap/Semantic_Embedding_Reverse_Dictionary"
"daveshap/BSHR_Loop" -> "daveshap/YouTubeChapterGenerator"
"daveshap/BSHR_Loop" -> "daveshap/SparsePrimingRepresentations"
"daveshap/BSHR_Loop" -> "daveshap/Hierarchical_Document_Representation"
"daveshap/BSHR_Loop" -> "daveshap/ChatGPT_Custom_Instructions"
"daveshap/BSHR_Loop" -> "daveshap/PTSD_prompts"
"daveshap/BSHR_Loop" -> "daveshap/weekly_arxiv"
"daveshap/BSHR_Loop" -> "daveshap/YouTube_Slide_Decks"
"daveshap/BSHR_Loop" -> "daveshap/ACE_Framework"
"daveshap/BSHR_Loop" -> "daveshap/nonfiction_drafting"
"daveshap/BSHR_Loop" -> "daveshap/Quickly_Extract_Science_Papers"
"xhluca/bm25s" -> "AnswerDotAI/rerankers"
"xhluca/bm25s" -> "lightonai/pylate"
"xhluca/bm25s" -> "AnswerDotAI/RAGatouille"
"xhluca/bm25s" -> "texttron/tevatron" ["e"=1]
"xhluca/bm25s" -> "dorianbrown/rank_bm25" ["e"=1]
"xhluca/bm25s" -> "beir-cellar/beir" ["e"=1]
"xhluca/bm25s" -> "castorini/pyserini" ["e"=1]
"xhluca/bm25s" -> "AnswerDotAI/ModernBERT"
"xhluca/bm25s" -> "naver/splade" ["e"=1]
"xhluca/bm25s" -> "AmenRa/ranx" ["e"=1]
"xhluca/bm25s" -> "MinishLab/semhash"
"xhluca/bm25s" -> "brandonstarxel/chunking_evaluation"
"xhluca/bm25s" -> "embeddings-benchmark/mteb" ["e"=1]
"xhluca/bm25s" -> "illuin-tech/colpali"
"xhluca/bm25s" -> "mixedbread-ai/baguetter"
"kaifcoder/gemini_multipdf_chat" -> "isurulkh/RAG-application-Gemini"
"kevinthedang/discord-ollama" -> "238SAMIxD/discord-ai-bot"
"kevinthedang/discord-ollama" -> "jake83741/vnc-lm"
"kevinthedang/discord-ollama" -> "rapmd73/Companion"
"fleet-ai/context" -> "emrgnt-cmplxty/automata" ["e"=1]
"fleet-ai/context" -> "shroominic/funcchain" ["e"=1]
"fleet-ai/context" -> "viddexa/autollm"
"fleet-ai/context" -> "genia-dev/GeniA" ["e"=1]
"fleet-ai/context" -> "xforceai/ide" ["e"=1]
"fleet-ai/context" -> "mckaywrigley/buildware-ai"
"fleet-ai/context" -> "AbanteAI/archive-old-cli-mentat" ["e"=1]
"FSoft-AI4Code/AgileCoder" -> "FSoft-AI4Code/HyperAgent"
"FSoft-AI4Code/AgileCoder" -> "FSoft-AI4Code/XMainframe"
"FSoft-AI4Code/AgileCoder" -> "FSoft-AI4Code/RepoHyper"
"FSoft-AI4Code/AgileCoder" -> "FSoft-AI4Code/SRank-CodeRanker"
"FSoft-AI4Code/AgileCoder" -> "FSoft-AI4Code/CodeCapybara"
"FSoft-AI4Code/AgileCoder" -> "FSoft-AI4Code/RepoExec"
"FSoft-AI4Code/AgileCoder" -> "FSoft-AI4Code/CodeFlow"
"FSoft-AI4Code/AgileCoder" -> "FSoft-AI4Code/CodeText-parser"
"FSoft-AI4Code/AgileCoder" -> "FSoft-AI4Code/TheVault"
"FSoft-AI4Code/AgileCoder" -> "FSoft-AI4Code/CodeMMLU"
"FSoft-AI4Code/AgileCoder" -> "andvg3/LSDM"
"FSoft-AI4Code/AgileCoder" -> "qnamng/ViSoBERT"
"FSoft-AI4Code/AgileCoder" -> "Fsoft-AIC/LibMoE"
"hosea-teknologiAi/multi-window-scene" -> "1281471119qqtt/bgstaals"
"hosea-teknologiAi/multi-window-scene" -> "ShinoKana/multipleWindow3dScene"
"hosea-teknologiAi/multi-window-scene" -> "jw-12138/multi-window-collab-demo"
"upstash/rag-chat" -> "upstash/semantic-cache"
"upstash/rag-chat" -> "upstash/degree-guru"
"tigerlab-ai/tiger" -> "tigerbytes-ai/tigers"
"tigerlab-ai/tiger" -> "CambioML/pykoi-rlhf-finetuned-transformers"
"tigerlab-ai/tiger" -> "pchunduri6/rag-demystified"
"DL3DV-10K/Dataset" -> "VANRao-Stack/elixir"
"DL3DV-10K/Dataset" -> "iZooGooD/torrscrapper"
"DL3DV-10K/Dataset" -> "Weitheskmt/WeiDMD"
"DL3DV-10K/Dataset" -> "CASRAI-CRedIT/Dictionary"
"DL3DV-10K/Dataset" -> "aidinrs/sql-puzzle"
"DL3DV-10K/Dataset" -> "tm88instrument/BX-Private"
"DL3DV-10K/Dataset" -> "TheOneStudioLLC/Mac-Recorder"
"DL3DV-10K/Dataset" -> "RevGev/AVAX-SNIPING-BOT-OPENSOURCE"
"DL3DV-10K/Dataset" -> "BearAnBull/Pancakeswap-Prediction-Winningbot"
"DL3DV-10K/Dataset" -> "xames3/nanotorch"
"DL3DV-10K/Dataset" -> "FixedPointIO/Artemis"
"DL3DV-10K/Dataset" -> "louisho5/MotionScroll"
"DL3DV-10K/Dataset" -> "rynmon/malScraper"
"DL3DV-10K/Dataset" -> "TheAnig/NER-LSTM-CNN-Pytorch"
"DL3DV-10K/Dataset" -> "Romain-P/Guinness-Bot"
"groq/groq-typescript" -> "definitive-io/code-indexer-loop"
"groq/groq-typescript" -> "groq/groq-python"
"groq/groq-typescript" -> "definitive-io/human-eval-sampling-benchmark"
"groq/groq-typescript" -> "definitive-io/openassistants"
"serpapi/Wander" -> "ACHultman/wanderlust"
"cyberus-technology/cloud-hypervisor" -> "cobaltcore-dev/openstack-nix"
"apache/openwhisk-wskdeploy" -> "apache/openwhisk-package-kafka"
"apache/openwhisk-wskdeploy" -> "apache/openwhisk-cli"
"AI-Commandos/LLaMa2lang" -> "FutureClubNL/RAGMeUp"
"camel-ai/crab" -> "camel-ai/agent-trust"
"Datayoo/HuggingFists" -> "BinNong/llm-graph-builder"
"Datayoo/HuggingFists" -> "KylinMountain/graphrag-server"
"umanamente/n8n-nodes-globals" -> "umanamente/n8n-nodes-imap"
"umanamente/n8n-nodes-globals" -> "n8nhackers/n8n-nodes-document-generator"
"xeol-io/bumpgen" -> "zlalvani/relgen"
"TrelisResearch/one-click-llms" -> "TrelisResearch/install-guides"
"prometheusdevelop/Prometheus" -> "promethrahus/Prometheus-Tron-Brute-Force"
"prometheusdevelop/Prometheus" -> "prometheus-wq/Prometheus"
"prometheusdevel/Prometheus" -> "PrometheusStealer/Prometheus"
"prometheusdevel/Prometheus" -> "darknet-onion-links/darknet-onion-links-catalog"
"prometheusdevel/Prometheus" -> "prometeydev/Prometheus"
"prometheusdevel/Prometheus" -> "prometeytron/Prometheus-Tron-Brute-Force"
"promethron/Prometheus-Tron-Brute-Force" -> "prometheusdevelop/Prometheus"
"promethron/Prometheus-Tron-Brute-Force" -> "prometeytron/Prometheus-Tron-Brute-Force"
"promethron/Prometheus-Tron-Brute-Force" -> "prometeydev/Prometheus"
"promethron/Prometheus-Tron-Brute-Force" -> "promethrahus/Prometheus-Tron-Brute-Force"
"junhoyeo/BetterOCR" -> "automorphic-ai/trex"
"junhoyeo/BetterOCR" -> "junhoyeo/ondiscord.io"
"ruecat/ollama-telegram" -> "tusharhero/aitelegrambot"
"ruecat/ollama-telegram" -> "mxyng/discollama"
"ruecat/ollama-telegram" -> "238SAMIxD/discord-ai-bot"
"aishwaryaprabhat/Advanced-RAG" -> "bhargobdeka/advanced-RAG-app"
"mazzasaverio/nextjs-fastapi-your-chat" -> "wpcodevo/nextjs-fastapi-framework"
"prometheus-wq/Prometheus" -> "promethrahus/Prometheus-Tron-Brute-Force"
"prometheus-wq/Prometheus" -> "amnesia49406/Amnesia-Tron-Brute-Force"
"amscotti/local-LLM-with-RAG" -> "puredatum/Local_Rag"
"amscotti/local-LLM-with-RAG" -> "vndee/local-assistant-examples"
"JShollaj/awesome-llm-web-ui" -> "snowfort-ai/awesome-llm-webapps"
"JShollaj/awesome-llm-web-ui" -> "semperai/amica"
"JShollaj/awesome-llm-web-ui" -> "turboderp-org/exui" ["e"=1]
"maudoin/ollama-voice" -> "apeatling/ollama-voice-mac"
"maudoin/ollama-voice" -> "vndee/local-talking-llm"
"reworkd/bananalyzer" -> "reworkd/tarsier"
"reworkd/bananalyzer" -> "redotvideo/haven"
"reworkd/bananalyzer" -> "trytrench/trench"
"reworkd/bananalyzer" -> "briefercloud/ergomake"
"ArcadeAI/arcade-ai" -> "ArcadeAI/arcade-py"
"ArcadeAI/arcade-ai" -> "ArcadeAI/arcade-js"
"ArcadeAI/arcade-ai" -> "ArcadeAI/SlackAgent"
"ArcadeAI/arcade-ai" -> "ArcadeAI/ArcadeGPT"
"ArcadeAI/arcade-ai" -> "langchain-ai/social-media-agent"
"ArcadeAI/arcade-ai" -> "langchain-ai/agent-chat-ui"
"Lukentui/smotrite-app" -> "burakssen/QuitMe"
"disler/llm-prompt-testing-quick-start" -> "disler/lllm"
"disler/llm-prompt-testing-quick-start" -> "disler/indydevtools"
"disler/llm-prompt-testing-quick-start" -> "disler/elm-itv-benchmark"
"disler/llm-prompt-testing-quick-start" -> "disler/reusable-openai-fine-tune"
"PrometheusStealer/Prometheus" -> "prometheusdevel/Prometheus"
"PrometheusStealer/Prometheus" -> "darknet-onion-links/darknet-onion-links-catalog"
"PrometheusStealer/Prometheus" -> "prometeytron/Prometheus-Tron-Brute-Force"
"PrometheusStealer/Prometheus" -> "prometeydev/Prometheus"
"PrometheusStealer/Prometheus" -> "promethron/Prometheus-Tron-Brute-Force"
"malbaugh/lightweight-wanderlust" -> "felipetodev/wanderlust"
"UPay-USDT/USDT-Payment-Gateway" -> "mtabanja/mtabanja"
"UPay-USDT/USDT-Payment-Gateway" -> "defi-school/Babylon-check-and-delegate"
"UPay-USDT/USDT-Payment-Gateway" -> "nickokss/jumper"
"UPay-USDT/USDT-Payment-Gateway" -> "paulpanwang/Gen6DNeRF"
"UPay-USDT/USDT-Payment-Gateway" -> "cryptohub-agency/smart_contract_audits"
"UPay-USDT/USDT-Payment-Gateway" -> "AlexTeslenko/leetcode"
"UPay-USDT/USDT-Payment-Gateway" -> "Isalia20/quad-iou-torch"
"UPay-USDT/USDT-Payment-Gateway" -> "amityalwar/snoofus"
"UPay-USDT/USDT-Payment-Gateway" -> "greydoubt/m77"
"UPay-USDT/USDT-Payment-Gateway" -> "CerberusChaos/Starknet-Dapp-Template"
"UPay-USDT/USDT-Payment-Gateway" -> "sivakumar-mahalingam/DSA"
"UPay-USDT/USDT-Payment-Gateway" -> "Theneo-Inc/api-documentation"
"UPay-USDT/USDT-Payment-Gateway" -> "augustovriyan/solana-token-snipers"
"UPay-USDT/USDT-Payment-Gateway" -> "CodeFromAnywhere/ActionSchema"
"UPay-USDT/USDT-Payment-Gateway" -> "onraj/expo-draggable-textfield"
"Coding-Crashkurse/LangGraph-Tutorial" -> "Coding-Crashkurse/LangGraph-Udemy-Course"
"Coding-Crashkurse/LangGraph-Tutorial" -> "Coding-Crashkurse/LangChain-Udemy-Course"
"Coding-Crashkurse/LangGraph-Tutorial" -> "Coding-Crashkurse/Udemy-Advanced-LangChain"
"daveshap/Semantic_Embedding_Reverse_Dictionary" -> "daveshap/Hierarchical_Document_Representation"
"daveshap/Semantic_Embedding_Reverse_Dictionary" -> "daveshap/nonfiction_drafting"
"Pythagora-io/codebase-chat" -> "Pythagora-io/pythagora-prompt-lab"
"rh-aiservices-bu/insurance-claim-processing" -> "red-hat-data-services/rhoai-disconnected-install-helper"
"instructlab/training" -> "instructlab/sdg"
"instructlab/training" -> "instructlab/instructlab-bot"
"ganarajpr/awesome-dspy" -> "KarelDO/xmc.dspy"
"ganarajpr/awesome-dspy" -> "seanchatmangpt/dspygen"
"ganarajpr/awesome-dspy" -> "diicellman/dspy-rag-fastapi"
"Arize-ai/openinference" -> "Arize-ai/phoenix-on-azure"
"Arize-ai/openinference" -> "Arize-ai/open-inference-spec"
"Arize-ai/openinference" -> "Arize-ai/client_python"
"Arize-ai/openinference" -> "loopingz/webda.io"
"Arize-ai/openinference" -> "loopingz/smtp-relay"
"Arize-ai/openinference" -> "Arize-ai/phoenix"
"rh-aiservices-bu/parasol-insurance" -> "rh-aiservices-bu/insurance-claim-processing"
"rh-aiservices-bu/parasol-insurance" -> "opendatahub-io-contrib/ai-on-openshift"
"RedHatOfficial/rhelai-dev-preview" -> "containers/ai-lab-recipes"
"RedHatOfficial/rhelai-dev-preview" -> "rh-aiservices-bu/llm-on-openshift"
"RedHatOfficial/rhelai-dev-preview" -> "redhat-ai-services/ai-accelerator"
"ngxson/wllama" -> "tangledgroup/llama-cpp-wasm"
"ngxson/wllama" -> "huggingface/ratchet" ["e"=1]
"ngxson/wllama" -> "felladrin/MiniSearch" ["e"=1]
"ngxson/wllama" -> "PABannier/bark.cpp"
"ngxson/wllama" -> "tantaraio/voy"
"iongpt/LLM-for-Whatsapp" -> "mtabanja/mtabanja"
"iongpt/LLM-for-Whatsapp" -> "nickokss/jumper"
"iongpt/LLM-for-Whatsapp" -> "paulpanwang/Gen6DNeRF"
"iongpt/LLM-for-Whatsapp" -> "cryptohub-agency/smart_contract_audits"
"iongpt/LLM-for-Whatsapp" -> "AlexTeslenko/leetcode"
"iongpt/LLM-for-Whatsapp" -> "defi-school/Babylon-check-and-delegate"
"iongpt/LLM-for-Whatsapp" -> "Isalia20/quad-iou-torch"
"iongpt/LLM-for-Whatsapp" -> "amityalwar/snoofus"
"iongpt/LLM-for-Whatsapp" -> "CerberusChaos/Starknet-Dapp-Template"
"iongpt/LLM-for-Whatsapp" -> "greydoubt/m77"
"iongpt/LLM-for-Whatsapp" -> "sivakumar-mahalingam/DSA"
"iongpt/LLM-for-Whatsapp" -> "Theneo-Inc/api-documentation"
"iongpt/LLM-for-Whatsapp" -> "UPay-USDT/USDT-Payment-Gateway"
"iongpt/LLM-for-Whatsapp" -> "CodeFromAnywhere/ActionSchema"
"iongpt/LLM-for-Whatsapp" -> "onraj/expo-draggable-textfield"
"disler/indydevtools" -> "disler/llm-prompt-testing-quick-start"
"disler/indydevtools" -> "disler/diffbro"
"disler/indydevtools" -> "disler/personal-ai-starter-pack"
"disler/indydevtools" -> "disler/omni-complete"
"disler/indydevtools" -> "disler/marimo-prompt-library"
"disler/indydevtools" -> "disler/reusable-openai-fine-tune"
"ACHultman/wanderlust" -> "serpapi/Wander"
"Coding-Crashkurse/Udemy-Advanced-LangChain" -> "Coding-Crashkurse/LangChain-Udemy-Course"
"rocketseat-education/nlw-unite-python" -> "rocketseat-education/nlw-unite-html-css-js"
"rocketseat-education/nlw-unite-python" -> "rocketseat-education/nlw-unite-devops"
"rocketseat-education/nlw-unite-react-native" -> "rocketseat-education/nlw-unite-react"
"rocketseat-education/nlw-unite-react-native" -> "rocketseat-education/nlw-unite-html-css-js"
"rocketseat-education/nlw-unite-react-native" -> "rocketseat-education/nlw-unite-java"
"rocketseat-education/nlw-unite-react-native" -> "rocketseat-education/nlw-unite-python"
"frutik/Awesome-RAG" -> "jxzhangjhu/Awesome-LLM-RAG"
"frutik/Awesome-RAG" -> "coree/awesome-rag"
"eknkc/ssr-benchmark" -> "aixcoder-plugin/aiXcoder-7B"
"eknkc/ssr-benchmark" -> "PabloMK7/citra" ["e"=1]
"eknkc/ssr-benchmark" -> "mttaggart/I-S00N"
"eknkc/ssr-benchmark" -> "emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC"
"eknkc/ssr-benchmark" -> "munris-vlad/airdrop-checker" ["e"=1]
"eknkc/ssr-benchmark" -> "wesbos/hot-tips"
"eknkc/ssr-benchmark" -> "regolith-labs/ore-cli"
"eknkc/ssr-benchmark" -> "cyberus-technology/virtualbox-kvm"
"eknkc/ssr-benchmark" -> "Vahe1994/AQLM" ["e"=1]
"eknkc/ssr-benchmark" -> "AI-Hypercomputer/maxtext" ["e"=1]
"eknkc/ssr-benchmark" -> "AnswerDotAI/fsdp_qlora" ["e"=1]
"eknkc/ssr-benchmark" -> "moest-np/center-randomize" ["e"=1]
"eknkc/ssr-benchmark" -> "teslamotors/roadster" ["e"=1]
"eknkc/ssr-benchmark" -> "code100x/chess" ["e"=1]
"eknkc/ssr-benchmark" -> "0xacme/ERC404" ["e"=1]
"facebookresearch/CRAG" -> "USTCAGI/CRAG-in-KDD-Cup2024"
"Cloud-Code-AI/cloudstate" -> "Cloud-Code-AI/AkiraDocs"
"lgrammel/modelfusion-ollama-nextjs-starter" -> "brunnolou/next-ollama-app"
"di37/coding-assistant-codellama-streamlit" -> "di37/multiclass-news-classification-using-llms"
"di37/coding-assistant-codellama-streamlit" -> "di37/langchain-rag-basic-to-advanced-tutorials"
"sgomez/ollama-ai-provider" -> "guillecg98/seekNseat" ["e"=1]
"brilliantlabsAR/frame-utilities-for-python" -> "AbeerVaishnav13/FrameDinoGame"
"brilliantlabsAR/frame-utilities-for-python" -> "OkGoDoIt/frame-sdk-python"
"di37/full-fine-tuning-nvidia-question-and-answering" -> "di37/LLM-Load-Unload-Ollama"
"373675032/academic-report" -> "373675032/smart-medicine"
"373675032/academic-report" -> "373675032/kaka-shop"
"373675032/academic-report" -> "373675032/love-charity"
"seanchatmangpt/dspygen" -> "seanchatmangpt/dslmodel"
"seanchatmangpt/dspygen" -> "seanchatmangpt/rdddy"
"seanchatmangpt/dspygen" -> "jmanhype/dspy-self-discover-framework"
"AIAnytime/Medical-RAG-using-Meditron-7B-LLM" -> "AIAnytime/Medical-RAG-using-Bio-Mistral-7B"
"ageerle/ruoyi-uniapp" -> "ageerle/ruoyi-web"
"ageerle/ruoyi-uniapp" -> "ageerle/ruoyi-admin"
"daveshap/weekly_arxiv" -> "daveshap/Hierarchical_Document_Representation"
"daveshap/weekly_arxiv" -> "daveshap/Semantic_Embedding_Reverse_Dictionary"
"daveshap/weekly_arxiv" -> "daveshap/Benevolent_AGI"
"daveshap/weekly_arxiv" -> "daveshap/nonfiction_drafting"
"daveshap/weekly_arxiv" -> "daveshap/YouTube_Slide_Decks"
"daveshap/weekly_arxiv" -> "daveshap/Quickly_Extract_Science_Papers"
"daveshap/weekly_arxiv" -> "daveshap/ACE_WorldState"
"daveshap/weekly_arxiv" -> "daveshap/BSHR_Loop"
"daveshap/weekly_arxiv" -> "daveshap/AutoMuse_ChatGPT"
"daveshap/weekly_arxiv" -> "daveshap/YouTubeChapterGenerator"
"FSoft-AI4Code/RepoHyper" -> "FSoft-AI4Code/SRank-CodeRanker"
"FSoft-AI4Code/RepoHyper" -> "FSoft-AI4Code/CodeFlow"
"FSoft-AI4Code/RepoHyper" -> "FSoft-AI4Code/XMainframe"
"FSoft-AI4Code/RepoHyper" -> "FSoft-AI4Code/RepoExec"
"ReproModel/repromodel" -> "SharpLogic/LightNap"
"ReproModel/repromodel" -> "gouravnagar-infosec/netsleuth"
"ReproModel/repromodel" -> "equalframework/equal"
"ReproModel/repromodel" -> "phasehq/cli"
"KarelDO/xmc.dspy" -> "ganarajpr/awesome-dspy"
"KarelDO/xmc.dspy" -> "raphaelsty/neural-cherche"
"KarelDO/xmc.dspy" -> "seanchatmangpt/dspygen"
"KarelDO/xmc.dspy" -> "AnswerDotAI/RAGatouille"
"KarelDO/xmc.dspy" -> "lightonai/pylate"
"promethrahus/Prometheus-Tron-Brute-Force" -> "prometheus-wq/Prometheus"
"ageerle/ruoyi-web" -> "ageerle/ruoyi-admin"
"ageerle/ruoyi-web" -> "ageerle/ruoyi-uniapp"
"iota-uz/iota-sdk" -> "invopop/gobl"
"juntoku9/edupal" -> "TeleportDAO/bitcoin-ethereum-smart-contracts"
"SumanthRH/tokenization" -> "amirzandieh/HyperAttention"
"ProfSynapse/ConstructorCora" -> "ProfSynapse/MissNeura"
"ProfSynapse/ConstructorCora" -> "ProfSynapse/CourseConstructor"
"ProfSynapse/ConstructorCora" -> "ProfSynapse/dream-text-to-image"
"ProfSynapse/ConstructorCora" -> "ProfSynapse/Super_Synapse"
"ProfSynapse/ConstructorCora" -> "ProfSynapse/Synapse_DB"
"ProfSynapse/CourseConstructor" -> "ProfSynapse/MissNeura"
"ProfSynapse/CourseConstructor" -> "ProfSynapse/Synapse_DB"
"ProfSynapse/CourseConstructor" -> "ProfSynapse/ConstructorCora"
"ProfSynapse/Super_Synapse" -> "ProfSynapse/CourseConstructor"
"ProfSynapse/Super_Synapse" -> "ProfSynapse/ConstructorCora"
"ProfSynapse/Super_Synapse" -> "ProfSynapse/MissNeura"
"ProfSynapse/Super_Synapse" -> "ProfSynapse/dream-text-to-image"
"ProfSynapse/Super_Synapse" -> "ProfSynapse/Synapse_DB"
"ProfSynapse/Super_Synapse" -> "ProfSynapse/open-interpreter"
"Logistic98/rag-omni" -> "liuyanqun0815/langgraph_fly_base"
"Knowledgator/TurboT5" -> "catie-aq/flashT5"
"Knowledgator/TurboT5" -> "Knowledgator/utca"
"docmarionum1/slack-archive-bot" -> "dutchcoders/slackarchive"
"lim-hyo-jeong/Prompt-Enhancer" -> "lypsoty112/Prompt-builder"
"urchade/ATG" -> "urchade/EnriCo"
"urchade/EnriCo" -> "urchade/GraphER"
"liqtags/DexScreenerClient" -> "nixonjoshua98/dexscreener"
"UdaraJay/Stats" -> "UdaraJay/atm"
"UdaraJay/Stats" -> "UdaraJay/Pile"
"NVIDIA/workbench-example-mistral-finetune" -> "NVIDIA/workbench-example-llama2-finetune"
"NVIDIA/workbench-example-mistral-finetune" -> "NVIDIA/workbench-example-sdxl-customization"
"jxnl/n-levels-of-rag" -> "eugeneyan/visualizing-finetunes"
"xyzhang626/embeddings.cpp" -> "iamlemec/bert.cpp"
"disler/elm-itv-benchmark" -> "disler/lllm"
"AllAboutAI-YT/chatgpt-stream" -> "AllAboutAI-YT/ai-engineer-project1"
"MorpheusAIs/Morpheus-Lumerin-Node" -> "MorpheusAIs/MRC"
"felipetodev/wanderlust" -> "malbaugh/lightweight-wanderlust"
"maxbbraun/llama4micro" -> "google-coral/coralmicro"
"AIAnytime/Medical-RAG-using-Bio-Mistral-7B" -> "AIAnytime/Medical-RAG-using-Meditron-7B-LLM"
"AIAnytime/Medical-RAG-using-Bio-Mistral-7B" -> "AIAnytime/Medical-Mixture-of-Experts-LLM"
"AIAnytime/Medical-RAG-using-Bio-Mistral-7B" -> "AIAnytime/Medical-Help-App-using-GPT-4V"
"daily-demos/llm-talk" -> "daily-co/daily-python"
"FSoft-AI4Code/HyperAgent" -> "mtabanja/mtabanja"
"FSoft-AI4Code/HyperAgent" -> "defi-school/Babylon-check-and-delegate"
"FSoft-AI4Code/HyperAgent" -> "paulpanwang/Gen6DNeRF"
"FSoft-AI4Code/HyperAgent" -> "cryptohub-agency/smart_contract_audits"
"FSoft-AI4Code/HyperAgent" -> "AlexTeslenko/leetcode"
"FSoft-AI4Code/HyperAgent" -> "nickokss/jumper"
"FSoft-AI4Code/HyperAgent" -> "Isalia20/quad-iou-torch"
"FSoft-AI4Code/HyperAgent" -> "amityalwar/snoofus"
"FSoft-AI4Code/HyperAgent" -> "ternera/hacker101-ctf"
"FSoft-AI4Code/HyperAgent" -> "greydoubt/m77"
"FSoft-AI4Code/HyperAgent" -> "CerberusChaos/Starknet-Dapp-Template"
"FSoft-AI4Code/HyperAgent" -> "sivakumar-mahalingam/DSA"
"FSoft-AI4Code/HyperAgent" -> "Theneo-Inc/api-documentation"
"FSoft-AI4Code/HyperAgent" -> "UPay-USDT/USDT-Payment-Gateway"
"FSoft-AI4Code/HyperAgent" -> "augustovriyan/solana-token-snipers"
"FSoft-AI4Code/SRank-CodeRanker" -> "FSoft-AI4Code/RepoExec"
"FSoft-AI4Code/SRank-CodeRanker" -> "FSoft-AI4Code/CodeFlow"
"FSoft-AI4Code/SRank-CodeRanker" -> "FSoft-AI4Code/XMainframe"
"OrzSupply/orz-cli" -> "BenjaSOL/orz-cli-gpu"
"kyaukyuai/gpt-all-star" -> "kyaukyuai/gpt-all-star-ui"
"openai/openai-deno-build" -> "NanmiCoder/MediaCrawlerGo"
"Sheldenburg/ai-engineer-template" -> "mazzasaverio/nextjs-fastapi-your-chat"
"Parms-Crypto/CUDA-ORE-DUMP" -> "BenjaSOL/orz-cli-gpu"
"Parms-Crypto/CUDA-ORE-DUMP" -> "cryptoblairo/ore-cli-blairo"
"Parms-Crypto/CUDA-ORE-DUMP" -> "Kriptikz/ore-cli"
"Parms-Crypto/CUDA-ORE-DUMP" -> "Kriptikz/ore-cli-gpu"
"Parms-Crypto/CUDA-ORE-DUMP" -> "OrzSupply/orz-cli"
"moondevonyt/Moon-Dev-Code" -> "moondevonyt/eliza"
"moondevonyt/Moon-Dev-Code" -> "moondevonyt/agent-zero"
"moondevonyt/Moon-Dev-Code" -> "moondevonyt/ZerePy"
"moondevonyt/Moon-Dev-Code" -> "moondevonyt/learn-typescript-from-python"
"moondevonyt/Moon-Dev-Code" -> "moondevonyt/Delete-OpenAI-Assistants-In-Bulk"
"moondevonyt/Moon-Dev-Code" -> "moondevonyt/goose"
"mrdbourke/rag-resources" -> "mrdbourke/learn-transformers"
"mrdbourke/rag-resources" -> "mrdbourke/learnopencv"
"ericpaulsen/coder-aks" -> "coder/exectrace"
"urchade/GraphER" -> "urchade/EnriCo"
"urchade/GraphER" -> "Knowledgator/utca"
"BenjaSOL/orz-cli-gpu" -> "OrzSupply/orz-cli"
"tevslin/meeting-reporter" -> "shiv248/Streamlit-x-LangGraph-Cookbooks"
"AllAboutAI-YT/text-to-JSON" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/text-to-JSON" -> "AllAboutAI-YT/Command-R-GPT-4V2"
"AllAboutAI-YT/text-to-JSON" -> "AllAboutAI-YT/hackernews-llm-search"
"apache/openwhisk-devtools" -> "apache/openwhisk-cli"
"apache/openwhisk-devtools" -> "IBM-Cloud/openwhisk-workshops"
"apache/openwhisk-devtools" -> "apache/openwhisk-runtime-java"
"apache/openwhisk-devtools" -> "apache/openwhisk-runtime-go"
"apache/openwhisk-devtools" -> "apache/openwhisk-wskdeploy"
"Gaurav-Gosain/ollamanager" -> "yazanrisheh/Synthetic-Data-Generation-with-LangChain"
"mixedbread-ai/python-sdk" -> "mixedbread-ai/binary-embeddings"
"mixedbread-ai/python-sdk" -> "mixedbread-ai/ofen"
"mixedbread-ai/python-sdk" -> "mixedbread-ai/wiki_demo_app"
"mixedbread-ai/binary-embeddings" -> "mixedbread-ai/wiki_demo_app"
"mixedbread-ai/binary-embeddings" -> "mixedbread-ai/python-sdk"
"mixedbread-ai/wiki_demo_app" -> "mixedbread-ai/binary-embeddings"
"mixedbread-ai/wiki_demo_app" -> "mixedbread-ai/ofen"
"disler/omni-complete" -> "disler/lllm"
"AllAboutAI-YT/voice-to-image-tensorRT" -> "AllAboutAI-YT/ai-engineer-project1"
"Pythagora-io/pythagora-prompt-lab" -> "Pythagora-io/codebase-chat"
"daveshap/Successor_Species" -> "daveshap/Grand_Struggle_Great_Mystery"
"daveshap/Successor_Species" -> "daveshap/Narratives_Emergence_Convergence"
"ProfSynapse/Synapse_DB" -> "ProfSynapse/open-interpreter"
"ProfSynapse/Synapse_DB" -> "ProfSynapse/MissNeura"
"ProfSynapse/Synapse_DB" -> "ProfSynapse/CourseConstructor"
"BINANCECONTRACT/BSC-Contract" -> "BINANCECONTRACT/Create-BEP20-Meme-Token"
"denser-org/denser-retriever" -> "denser-org/denser-chat"
"kijai/ComfyUI-DiffusersStableCascade" -> "C0nsumption/Consume-ComfyUI-Workflows" ["e"=1]
"abcdsxg/ore-cli" -> "cryptoblairo/ore-cli-blairo"
"containers/ai-lab-recipes" -> "redhat-ai-services/ai-accelerator"
"containers/ai-lab-recipes" -> "rh-aiservices-bu/llm-on-openshift"
"containers/ai-lab-recipes" -> "opendatahub-io/ilab-on-ocp"
"catie-aq/flashT5" -> "Knowledgator/TurboT5"
"ProfSynapse/MissNeura" -> "ProfSynapse/CourseConstructor"
"ProfSynapse/MissNeura" -> "ProfSynapse/Synapse_DB"
"ProfSynapse/MissNeura" -> "ProfSynapse/ConstructorCora"
"daveshap/Hierarchical_Document_Representation" -> "daveshap/Semantic_Embedding_Reverse_Dictionary"
"daveshap/Hierarchical_Document_Representation" -> "daveshap/nonfiction_drafting"
"AllAboutAI-YT/ai-vision-scraping" -> "AllAboutAI-YT/ai-engineer-project1"
"AllAboutAI-YT/ai-vision-scraping" -> "AllAboutAI-YT/chatgpt-stream"
"AllAboutAI-YT/ai-vision-scraping" -> "AllAboutAI-YT/voice-to-image-tensorRT"
"AllAboutAI-YT/ai-vision-scraping" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/ai-vision-scraping" -> "AllAboutAI-YT/text-to-JSON"
"AllAboutAI-YT/ai-vision-scraping" -> "AllAboutAI-YT/ai-engineer"
"instructor-ai/cloud" -> "instructor-ai/evals"
"BINANCECONTRACT/How-to-Create-Honeypot-Token" -> "BINANCECONTRACT/Create-BEP20-Meme-Token"
"BINANCECONTRACT/How-to-Create-Honeypot-Token" -> "BINANCECONTRACT/BSC-Contract"
"BINANCECONTRACT/How-to-Create-Honeypot-Token" -> "SmartBNBGuy/create-honeypot-token"
"brunnolou/next-ollama-app" -> "lgrammel/modelfusion-ollama-nextjs-starter"
"daveshap/Narratives_Emergence_Convergence" -> "daveshap/Grand_Struggle_Great_Mystery"
"daveshap/Narratives_Emergence_Convergence" -> "daveshap/Successor_Species"
"gomate-community/awesome-papers-for-rag" -> "gomate-community/rageval"
"coder/backstage-plugins" -> "coder/labeler"
"Arize-ai/phoenix-on-azure" -> "loopingz/webda.io"
"AllAboutAI-YT/think-before-you-speak" -> "AllAboutAI-YT/text-to-JSON"
"AllAboutAI-YT/think-before-you-speak" -> "AllAboutAI-YT/hackernews-llm-search"
"AllAboutAI-YT/think-before-you-speak" -> "AllAboutAI-YT/ai-engineer-project1"
"AllAboutAI-YT/think-before-you-speak" -> "AllAboutAI-YT/Command-R-GPT-4V2"
"AllAboutAI-YT/think-before-you-speak" -> "AllAboutAI-YT/ai-terminal"
"AllAboutAI-YT/ai-engineer" -> "AllAboutAI-YT/voice-to-image-tensorRT"
"AllAboutAI-YT/ai-engineer" -> "AllAboutAI-YT/ai-engineer-project1"
"NVIDIA/workbench-example-llama2-finetune" -> "NVIDIA/workbench-example-mistral-finetune"
"Coding-Crashkurse/LangChain-in-Production-with-Langfuse" -> "Coding-Crashkurse/LangChain-on-Azure-Udemy"
"AllAboutAI-YT/ai-engineer-project1" -> "AllAboutAI-YT/voice-to-image-tensorRT"
"AllAboutAI-YT/ai-engineer-project1" -> "AllAboutAI-YT/chatgpt-stream"
"AllAboutAI-YT/ai-engineer-project1" -> "AllAboutAI-YT/think-before-you-speak"
"NVIDIA/workbench-example-sdxl-customization" -> "NVIDIA/workbench-example-llama2-finetune"
"NVIDIA/workbench-example-sdxl-customization" -> "NVIDIA/workbench-example-mistral-finetune"
"CoolkHz/orz-cli-gpu" -> "OrzSupply/orz-cli"
"AllAboutAI-YT/hackernews-llm-search" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/hackernews-llm-search" -> "AllAboutAI-YT/text-to-JSON"
"AllAboutAI-YT/hackernews-llm-search" -> "AllAboutAI-YT/ai-terminal"
"AllAboutAI-YT/hackernews-llm-search" -> "AllAboutAI-YT/Command-R-GPT-4V2"
"AllAboutAI-YT/rag" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/rag" -> "AllAboutAI-YT/ai-terminal"
"AllAboutAI-YT/rag" -> "AllAboutAI-YT/ai-engineer-project1"
"AllAboutAI-YT/rag" -> "AllAboutAI-YT/chatgpt-stream"
"AllAboutAI-YT/rag" -> "AllAboutAI-YT/text-to-JSON"
"AllAboutAI-YT/Command-R-GPT-4V2" -> "AllAboutAI-YT/text-to-JSON"
"daveshap/Grand_Struggle_Great_Mystery" -> "daveshap/Narratives_Emergence_Convergence"
"daveshap/Grand_Struggle_Great_Mystery" -> "daveshap/Successor_Species"
"di37/langchain-rag-basic-to-advanced-tutorials" -> "di37/chatbot-chatgpt-api"
"DataScienceUIBK/TriviaHG" -> "DataScienceUIBK/HintQA"
"DataScienceUIBK/TriviaHG" -> "DataScienceUIBK/HintEval"
"mckaywrigley/typescript-starter" -> "mckaywrigley/level-1-agent-code"
"LangbaseInc/BaseAI" -> "LangbaseInc/langbase-sdk"
"LangbaseInc/BaseAI" -> "browserbase/open-operator"
"LangbaseInc/BaseAI" -> "lmnr-ai/lmnr"
"LangbaseInc/BaseAI" -> "LangbaseInc/langbase-examples"
"LangbaseInc/BaseAI" -> "LangbaseInc/langui"
"LangbaseInc/BaseAI" -> "kaiban-ai/KaibanJS"
"LangbaseInc/BaseAI" -> "srcbookdev/srcbook"
"LangbaseInc/BaseAI" -> "e2b-dev/fragments"
"LangbaseInc/BaseAI" -> "Nutlope/turboseek"
"LangbaseInc/BaseAI" -> "upstash/rag-chat"
"LangbaseInc/BaseAI" -> "i-am-bee/beeai-framework"
"LangbaseInc/BaseAI" -> "MervinPraison/PraisonAI"
"LangbaseInc/BaseAI" -> "latitude-dev/latitude-llm"
"poloclub/transformer-explainer" -> "bbycroft/llm-viz"
"poloclub/transformer-explainer" -> "poloclub/diffusion-explainer"
"poloclub/transformer-explainer" -> "microsoft/graphrag"
"poloclub/transformer-explainer" -> "naklecha/llama3-from-scratch"
"poloclub/transformer-explainer" -> "TeamWiseFlow/wiseflow"
"poloclub/transformer-explainer" -> "InternLM/MindSearch"
"poloclub/transformer-explainer" -> "Cinnamon/kotaemon"
"poloclub/transformer-explainer" -> "anthropics/courses"
"poloclub/transformer-explainer" -> "SakanaAI/AI-Scientist"
"poloclub/transformer-explainer" -> "Lightning-AI/litgpt"
"poloclub/transformer-explainer" -> "rasbt/LLMs-from-scratch"
"poloclub/transformer-explainer" -> "andrewyng/aisuite"
"poloclub/transformer-explainer" -> "stanford-oval/storm"
"poloclub/transformer-explainer" -> "VikParuchuri/surya"
"poloclub/transformer-explainer" -> "opendatalab/MinerU"
"naklecha/llama3-from-scratch" -> "karpathy/minbpe"
"naklecha/llama3-from-scratch" -> "karpathy/llm.c"
"naklecha/llama3-from-scratch" -> "karpathy/LLM101n"
"naklecha/llama3-from-scratch" -> "rasbt/LLMs-from-scratch"
"naklecha/llama3-from-scratch" -> "mlabonne/llm-course"
"naklecha/llama3-from-scratch" -> "stas00/ml-engineering"
"naklecha/llama3-from-scratch" -> "vllm-project/vllm"
"naklecha/llama3-from-scratch" -> "karpathy/llama2.c"
"naklecha/llama3-from-scratch" -> "karpathy/nanoGPT"
"naklecha/llama3-from-scratch" -> "hiyouga/LLaMA-Factory"
"naklecha/llama3-from-scratch" -> "unslothai/unsloth"
"naklecha/llama3-from-scratch" -> "Lightning-AI/litgpt"
"naklecha/llama3-from-scratch" -> "meta-llama/llama-cookbook"
"naklecha/llama3-from-scratch" -> "stanfordnlp/dspy"
"naklecha/llama3-from-scratch" -> "huggingface/open-r1" ["e"=1]
"karpathy/build-nanogpt" -> "karpathy/nano-llama31" ["e"=1]
"karpathy/build-nanogpt" -> "karpathy/minbpe"
"karpathy/build-nanogpt" -> "karpathy/llm.c"
"karpathy/build-nanogpt" -> "karpathy/nanoGPT"
"karpathy/build-nanogpt" -> "naklecha/llama3-from-scratch"
"karpathy/build-nanogpt" -> "karpathy/ng-video-lecture"
"karpathy/build-nanogpt" -> "karpathy/LLM101n"
"karpathy/build-nanogpt" -> "karpathy/micrograd"
"karpathy/build-nanogpt" -> "EurekaLabsAI/ngram" ["e"=1]
"karpathy/build-nanogpt" -> "KellerJordan/modded-nanogpt" ["e"=1]
"karpathy/build-nanogpt" -> "karpathy/makemore"
"karpathy/build-nanogpt" -> "Lightning-AI/litgpt"
"karpathy/build-nanogpt" -> "ridgerchu/matmulfreellm" ["e"=1]
"karpathy/build-nanogpt" -> "jzhang38/TinyLlama" ["e"=1]
"karpathy/build-nanogpt" -> "karpathy/nn-zero-to-hero"
"ai-ng/swift" -> "pipecat-ai/rtvi-web-demo"
"ai-ng/swift" -> "ricky0123/vad" ["e"=1]
"ai-ng/swift" -> "cartesia-ai/cartesia-js"
"ai-ng/swift" -> "serkandyck/realtime-voice-assistant-groq" ["e"=1]
"ai-ng/swift" -> "ai-ng/magic-spell"
"ai-ng/swift" -> "aryanvichare/stocks" ["e"=1]
"ai-ng/swift" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"ai-ng/swift" -> "dsa/fast-voice-assistant" ["e"=1]
"ai-ng/swift" -> "ai-ng/2txt"
"ai-ng/swift" -> "livekit/agents-playground" ["e"=1]
"anthropics/courses" -> "anthropics/anthropic-cookbook"
"anthropics/courses" -> "anthropics/anthropic-quickstarts"
"anthropics/courses" -> "Cinnamon/kotaemon"
"anthropics/courses" -> "Shubhamsaboo/awesome-llm-apps"
"anthropics/courses" -> "stanford-oval/storm"
"anthropics/courses" -> "agno-agi/agno"
"anthropics/courses" -> "mendableai/firecrawl"
"anthropics/courses" -> "anthropics/prompt-eng-interactive-tutorial"
"anthropics/courses" -> "openai/swarm"
"anthropics/courses" -> "google-gemini/cookbook"
"anthropics/courses" -> "NirDiamant/GenAI_Agents"
"anthropics/courses" -> "patchy631/ai-engineering-hub"
"anthropics/courses" -> "Doriandarko/claude-engineer"
"anthropics/courses" -> "Skyvern-AI/skyvern"
"anthropics/courses" -> "NirDiamant/RAG_Techniques"
"knowsuchagency/pdf-to-podcast" -> "gabrielchua/open-notebooklm"
"knowsuchagency/pdf-to-podcast" -> "lamm-mit/PDF2Audio"
"knowsuchagency/pdf-to-podcast" -> "knowsuchagency/promptic"
"knowsuchagency/pdf-to-podcast" -> "souzatharsis/podcastfy"
"knowsuchagency/pdf-to-podcast" -> "souzatharsis/podcastfy-demo"
"mediar-ai/screenpipe" -> "unclecode/crawl4ai"
"mediar-ai/screenpipe" -> "exo-explore/exo"
"mediar-ai/screenpipe" -> "Skyvern-AI/skyvern"
"mediar-ai/screenpipe" -> "mendableai/firecrawl"
"mediar-ai/screenpipe" -> "Cinnamon/kotaemon"
"mediar-ai/screenpipe" -> "stanford-oval/storm"
"mediar-ai/screenpipe" -> "agno-agi/agno"
"mediar-ai/screenpipe" -> "getmaxun/maxun"
"mediar-ai/screenpipe" -> "ItzCrazyKns/Perplexica"
"mediar-ai/screenpipe" -> "fishaudio/fish-speech" ["e"=1]
"mediar-ai/screenpipe" -> "khoj-ai/khoj"
"mediar-ai/screenpipe" -> "VikParuchuri/surya"
"mediar-ai/screenpipe" -> "cline/cline"
"mediar-ai/screenpipe" -> "mem0ai/mem0"
"mediar-ai/screenpipe" -> "browser-use/browser-use"
"sullyo/prompt2ui" -> "ozgrozer/chatgpt-artifacts"
"sullyo/prompt2ui" -> "13point5/open-artifacts"
"svcvit/Awesome-Dify-Workflow" -> "BannyLon/DifyAIA" ["e"=1]
"svcvit/Awesome-Dify-Workflow" -> "wwwzhouhui/dify-for-dsl" ["e"=1]
"svcvit/Awesome-Dify-Workflow" -> "YFGaia/dify-plus" ["e"=1]
"svcvit/Awesome-Dify-Workflow" -> "hanfangyuan4396/dify-on-wechat" ["e"=1]
"svcvit/Awesome-Dify-Workflow" -> "xorbitsai/inference"
"svcvit/Awesome-Dify-Workflow" -> "labring/FastGPT"
"svcvit/Awesome-Dify-Workflow" -> "langgenius/dify"
"svcvit/Awesome-Dify-Workflow" -> "1Panel-dev/MaxKB"
"svcvit/Awesome-Dify-Workflow" -> "songquanpeng/one-api" ["e"=1]
"svcvit/Awesome-Dify-Workflow" -> "opendatalab/MinerU"
"svcvit/Awesome-Dify-Workflow" -> "linshenkx/prompt-optimizer"
"svcvit/Awesome-Dify-Workflow" -> "QuantumNous/new-api" ["e"=1]
"svcvit/Awesome-Dify-Workflow" -> "infiniflow/ragflow"
"svcvit/Awesome-Dify-Workflow" -> "eosphoros-ai/DB-GPT"
"svcvit/Awesome-Dify-Workflow" -> "CherryHQ/cherry-studio"
"Nutlope/llamacoder" -> "e2b-dev/fragments"
"Nutlope/llamacoder" -> "zaidmukaddam/scira"
"Nutlope/llamacoder" -> "stackblitz-labs/bolt.diy"
"Nutlope/llamacoder" -> "Doriandarko/claude-engineer"
"Nutlope/llamacoder" -> "stackblitz/bolt.new"
"Nutlope/llamacoder" -> "osanseviero/InstantCoder"
"Nutlope/llamacoder" -> "Nutlope/llamatutor"
"Nutlope/llamacoder" -> "langchain-ai/open-canvas"
"Nutlope/llamacoder" -> "miurla/morphic"
"Nutlope/llamacoder" -> "frdel/agent-zero"
"Nutlope/llamacoder" -> "ItzCrazyKns/Perplexica"
"Nutlope/llamacoder" -> "Canner/WrenAI"
"Nutlope/llamacoder" -> "agno-agi/agno"
"Nutlope/llamacoder" -> "gptme/gptme"
"Nutlope/llamacoder" -> "cline/cline"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "unclecode/crawl4ai"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "Shubhamsaboo/awesome-llm-apps"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "browser-use/browser-use"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "Cinnamon/kotaemon"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "hacksider/Deep-Live-Cam"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "All-Hands-AI/OpenHands"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "mendableai/firecrawl"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "stanford-oval/storm"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "agno-agi/agno"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "virattt/ai-hedge-fund"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "khoj-ai/khoj"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "crewAIInc/crewAI"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "mlabonne/llm-course"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "docling-project/docling"
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" -> "srbhr/Resume-Matcher"
"zaidmukaddam/scira" -> "miurla/morphic"
"zaidmukaddam/scira" -> "ItzCrazyKns/Perplexica"
"zaidmukaddam/scira" -> "vercel/ai-chatbot"
"zaidmukaddam/scira" -> "browserbase/stagehand"
"zaidmukaddam/scira" -> "Zipstack/unstract"
"zaidmukaddam/scira" -> "e2b-dev/fragments"
"zaidmukaddam/scira" -> "onlook-dev/onlook" ["e"=1]
"zaidmukaddam/scira" -> "Nutlope/llamacoder"
"zaidmukaddam/scira" -> "Canner/WrenAI"
"zaidmukaddam/scira" -> "stanford-oval/storm"
"zaidmukaddam/scira" -> "agno-agi/agno"
"zaidmukaddam/scira" -> "Mail-0/Zero" ["e"=1]
"zaidmukaddam/scira" -> "mendableai/firecrawl"
"zaidmukaddam/scira" -> "langchain-ai/local-deep-researcher"
"zaidmukaddam/scira" -> "CapSoftware/Cap" ["e"=1]
"anthropics/anthropic-quickstarts" -> "anthropics/anthropic-cookbook"
"anthropics/anthropic-quickstarts" -> "meltylabs/melty"
"anthropics/anthropic-quickstarts" -> "anthropics/courses"
"anthropics/anthropic-quickstarts" -> "Doriandarko/claude-engineer"
"anthropics/anthropic-quickstarts" -> "openai/swarm"
"anthropics/anthropic-quickstarts" -> "Cinnamon/kotaemon"
"anthropics/anthropic-quickstarts" -> "stackblitz/bolt.new"
"anthropics/anthropic-quickstarts" -> "mendableai/firecrawl"
"anthropics/anthropic-quickstarts" -> "e2b-dev/fragments"
"anthropics/anthropic-quickstarts" -> "agno-agi/agno"
"anthropics/anthropic-quickstarts" -> "langchain-ai/open-canvas"
"anthropics/anthropic-quickstarts" -> "MadcowD/ell"
"anthropics/anthropic-quickstarts" -> "cline/cline"
"anthropics/anthropic-quickstarts" -> "corbt/agent.exe"
"anthropics/anthropic-quickstarts" -> "openai/openai-realtime-agents"
"virattt/ai-hedge-fund" -> "Shubhamsaboo/awesome-llm-apps"
"virattt/ai-hedge-fund" -> "browser-use/browser-use"
"virattt/ai-hedge-fund" -> "unclecode/crawl4ai"
"virattt/ai-hedge-fund" -> "mendableai/firecrawl"
"virattt/ai-hedge-fund" -> "punkpeye/awesome-mcp-servers"
"virattt/ai-hedge-fund" -> "OpenBB-finance/OpenBB" ["e"=1]
"virattt/ai-hedge-fund" -> "agno-agi/agno"
"virattt/ai-hedge-fund" -> "All-Hands-AI/OpenHands"
"virattt/ai-hedge-fund" -> "stanford-oval/storm"
"virattt/ai-hedge-fund" -> "x1xhlol/system-prompts-and-models-of-ai-tools"
"virattt/ai-hedge-fund" -> "PatrickJS/awesome-cursorrules"
"virattt/ai-hedge-fund" -> "FoundationAgents/MetaGPT"
"virattt/ai-hedge-fund" -> "FoundationAgents/OpenManus"
"virattt/ai-hedge-fund" -> "khoj-ai/khoj"
"virattt/ai-hedge-fund" -> "FujiwaraChoki/MoneyPrinterV2"
"awslabs/agent-squad" -> "pydantic/pydantic-ai"
"awslabs/agent-squad" -> "microsoft/TinyTroupe"
"awslabs/agent-squad" -> "simular-ai/Agent-S"
"awslabs/agent-squad" -> "kyegomez/swarms"
"awslabs/agent-squad" -> "agno-agi/agno"
"awslabs/agent-squad" -> "openai/swarm"
"awslabs/agent-squad" -> "getzep/graphiti"
"awslabs/agent-squad" -> "patchy631/ai-engineering-hub"
"awslabs/agent-squad" -> "anthropics/anthropic-cookbook"
"awslabs/agent-squad" -> "browserbase/stagehand"
"awslabs/agent-squad" -> "NirDiamant/GenAI_Agents"
"awslabs/agent-squad" -> "comet-ml/opik"
"awslabs/agent-squad" -> "livekit/agents"
"awslabs/agent-squad" -> "MervinPraison/PraisonAI"
"awslabs/agent-squad" -> "AgentOps-AI/agentops"
"mckaywrigley/mckays-app-template" -> "mckaywrigley/o1-xml-parser"
"mckaywrigley/mckays-app-template" -> "sullyo/webapp-starter"
"mckaywrigley/mckays-app-template" -> "eastlondoner/cursor-tools"
"mckaywrigley/mckays-app-template" -> "udecode/dotai"
"mckaywrigley/mckays-app-template" -> "mckaywrigley/buildware-ai"
"mckaywrigley/mckays-app-template" -> "mckaywrigley/o1-pro-template-system"
"mckaywrigley/mckays-app-template" -> "RayFernando1337/llm-cursor-rules"
"mckaywrigley/mckays-app-template" -> "ansh/template-2"
"mckaywrigley/mckays-app-template" -> "s-smits/agentic-cursorrules"
"mckaywrigley/mckays-app-template" -> "ShenSeanChen/launch-mvp-stripe-nextjs-supabase"
"mckaywrigley/mckays-app-template" -> "AgentOps-AI/AgentStack"
"mckaywrigley/mckays-app-template" -> "Doriandarko/claude-engineer"
"mckaywrigley/mckays-app-template" -> "midday-ai/v1" ["e"=1]
"mckaywrigley/mckays-app-template" -> "developersdigest/llm-api-engine"
"mckaywrigley/mckays-app-template" -> "eyaltoledano/claude-task-master"
"PatrickJS/awesome-cursorrules" -> "punkpeye/awesome-mcp-servers"
"PatrickJS/awesome-cursorrules" -> "modelcontextprotocol/servers"
"PatrickJS/awesome-cursorrules" -> "cline/cline"
"PatrickJS/awesome-cursorrules" -> "Shubhamsaboo/awesome-llm-apps"
"PatrickJS/awesome-cursorrules" -> "browser-use/browser-use"
"PatrickJS/awesome-cursorrules" -> "mendableai/firecrawl"
"PatrickJS/awesome-cursorrules" -> "unclecode/crawl4ai"
"PatrickJS/awesome-cursorrules" -> "x1xhlol/system-prompts-and-models-of-ai-tools"
"PatrickJS/awesome-cursorrules" -> "eyaltoledano/claude-task-master"
"PatrickJS/awesome-cursorrules" -> "yamadashy/repomix"
"PatrickJS/awesome-cursorrules" -> "agno-agi/agno"
"PatrickJS/awesome-cursorrules" -> "All-Hands-AI/OpenHands"
"PatrickJS/awesome-cursorrules" -> "yeongpin/cursor-free-vip"
"PatrickJS/awesome-cursorrules" -> "virattt/ai-hedge-fund"
"PatrickJS/awesome-cursorrules" -> "yuaotian/go-cursor-help" ["e"=1]
"microsoft/OmniParser" -> "browser-use/browser-use"
"microsoft/OmniParser" -> "mendableai/firecrawl"
"microsoft/OmniParser" -> "unclecode/crawl4ai"
"microsoft/OmniParser" -> "FoundationAgents/OpenManus"
"microsoft/OmniParser" -> "bytedance/UI-TARS-desktop"
"microsoft/OmniParser" -> "unslothai/unsloth"
"microsoft/OmniParser" -> "microsoft/autogen"
"microsoft/OmniParser" -> "microsoft/markitdown"
"microsoft/OmniParser" -> "punkpeye/awesome-mcp-servers"
"microsoft/OmniParser" -> "cline/cline"
"microsoft/OmniParser" -> "camel-ai/owl"
"microsoft/OmniParser" -> "microsoft/data-formulator"
"microsoft/OmniParser" -> "microsoft/graphrag"
"microsoft/OmniParser" -> "opendatalab/MinerU"
"microsoft/OmniParser" -> "allenai/olmocr"
"coleam00/ottomator-agents" -> "coleam00/ai-agents-masterclass"
"coleam00/ottomator-agents" -> "coleam00/local-ai-packaged"
"coleam00/ottomator-agents" -> "coleam00/Archon"
"coleam00/ottomator-agents" -> "nerding-io/n8n-nodes-mcp"
"coleam00/ottomator-agents" -> "coleam00/mcp-crawl4ai-rag"
"coleam00/ottomator-agents" -> "coleam00/mcp-mem0"
"coleam00/ottomator-agents" -> "MervinPraison/PraisonAI"
"coleam00/ottomator-agents" -> "upstash/context7"
"coleam00/ottomator-agents" -> "Zipstack/unstract"
"coleam00/ottomator-agents" -> "n8n-io/self-hosted-ai-starter-kit"
"coleam00/ottomator-agents" -> "pydantic/pydantic-ai"
"coleam00/ottomator-agents" -> "stackblitz-labs/bolt.diy"
"coleam00/ottomator-agents" -> "daveebbelaar/ai-cookbook" ["e"=1]
"coleam00/ottomator-agents" -> "disler/poc-realtime-ai-assistant"
"coleam00/ottomator-agents" -> "coleam00/ollama-swarm"
"cline/cline" -> "RooVetGit/Roo-Code"
"cline/cline" -> "Aider-AI/aider"
"cline/cline" -> "All-Hands-AI/OpenHands"
"cline/cline" -> "browser-use/browser-use"
"cline/cline" -> "modelcontextprotocol/servers"
"cline/cline" -> "continuedev/continue"
"cline/cline" -> "mendableai/firecrawl"
"cline/cline" -> "unclecode/crawl4ai"
"cline/cline" -> "open-webui/open-webui"
"cline/cline" -> "punkpeye/awesome-mcp-servers"
"cline/cline" -> "crewAIInc/crewAI"
"cline/cline" -> "langgenius/dify"
"cline/cline" -> "Mintplex-Labs/anything-llm"
"cline/cline" -> "microsoft/autogen"
"cline/cline" -> "agno-agi/agno"
"exo-explore/exo" -> "unclecode/crawl4ai"
"exo-explore/exo" -> "mendableai/firecrawl"
"exo-explore/exo" -> "unslothai/unsloth"
"exo-explore/exo" -> "khoj-ai/khoj"
"exo-explore/exo" -> "cline/cline"
"exo-explore/exo" -> "stanford-oval/storm"
"exo-explore/exo" -> "mediar-ai/screenpipe"
"exo-explore/exo" -> "All-Hands-AI/OpenHands"
"exo-explore/exo" -> "ItzCrazyKns/Perplexica"
"exo-explore/exo" -> "agno-agi/agno"
"exo-explore/exo" -> "browser-use/browser-use"
"exo-explore/exo" -> "Cinnamon/kotaemon"
"exo-explore/exo" -> "Mintplex-Labs/anything-llm"
"exo-explore/exo" -> "docling-project/docling"
"exo-explore/exo" -> "mudler/LocalAI"
"deepseek-ai/Janus" -> "QwenLM/Qwen2.5-VL" ["e"=1]
"deepseek-ai/Janus" -> "deepseek-ai/DeepSeek-V3"
"deepseek-ai/Janus" -> "deepseek-ai/DeepSeek-R1"
"deepseek-ai/Janus" -> "huggingface/open-r1" ["e"=1]
"deepseek-ai/Janus" -> "QwenLM/Qwen3" ["e"=1]
"deepseek-ai/Janus" -> "deepseek-ai/DeepSeek-VL2" ["e"=1]
"deepseek-ai/Janus" -> "black-forest-labs/flux" ["e"=1]
"deepseek-ai/Janus" -> "OpenBMB/MiniCPM-o" ["e"=1]
"deepseek-ai/Janus" -> "deepseek-ai/DeepSeek-Coder"
"deepseek-ai/Janus" -> "Wan-Video/Wan2.1" ["e"=1]
"deepseek-ai/Janus" -> "haotian-liu/LLaVA" ["e"=1]
"deepseek-ai/Janus" -> "unslothai/unsloth"
"deepseek-ai/Janus" -> "hpcaitech/Open-Sora" ["e"=1]
"deepseek-ai/Janus" -> "Tencent/HunyuanVideo" ["e"=1]
"deepseek-ai/Janus" -> "deepseek-ai/FlashMLA" ["e"=1]
"microsoft/markitdown" -> "docling-project/docling"
"microsoft/markitdown" -> "browser-use/browser-use"
"microsoft/markitdown" -> "unclecode/crawl4ai"
"microsoft/markitdown" -> "opendatalab/MinerU"
"microsoft/markitdown" -> "mendableai/firecrawl"
"microsoft/markitdown" -> "punkpeye/awesome-mcp-servers"
"microsoft/markitdown" -> "VikParuchuri/marker"
"microsoft/markitdown" -> "open-webui/open-webui"
"microsoft/markitdown" -> "langgenius/dify"
"microsoft/markitdown" -> "Shubhamsaboo/awesome-llm-apps"
"microsoft/markitdown" -> "ollama/ollama"
"microsoft/markitdown" -> "infiniflow/ragflow"
"microsoft/markitdown" -> "modelcontextprotocol/servers"
"microsoft/markitdown" -> "cline/cline"
"microsoft/markitdown" -> "astral-sh/uv" ["e"=1]
"karpathy/LLM101n" -> "mlabonne/llm-course"
"karpathy/LLM101n" -> "karpathy/llm.c"
"karpathy/LLM101n" -> "rasbt/LLMs-from-scratch"
"karpathy/LLM101n" -> "naklecha/llama3-from-scratch"
"karpathy/LLM101n" -> "karpathy/nanoGPT"
"karpathy/LLM101n" -> "vllm-project/vllm"
"karpathy/LLM101n" -> "unslothai/unsloth"
"karpathy/LLM101n" -> "stanfordnlp/dspy"
"karpathy/LLM101n" -> "karpathy/minbpe"
"karpathy/LLM101n" -> "karpathy/micrograd"
"karpathy/LLM101n" -> "ggml-org/llama.cpp"
"karpathy/LLM101n" -> "karpathy/nn-zero-to-hero"
"karpathy/LLM101n" -> "stas00/ml-engineering"
"karpathy/LLM101n" -> "microsoft/graphrag"
"karpathy/LLM101n" -> "All-Hands-AI/OpenHands"
"getzep/graphiti" -> "simular-ai/Agent-S"
"getzep/graphiti" -> "jlowin/fastmcp"
"getzep/graphiti" -> "opencode-ai/opencode"
"getzep/graphiti" -> "kortix-ai/suna"
"getzep/graphiti" -> "agno-agi/agno"
"getzep/graphiti" -> "rowboatlabs/rowboat"
"getzep/graphiti" -> "jujumilk3/leaked-system-prompts"
"getzep/graphiti" -> "aipotheosis-labs/aci"
"getzep/graphiti" -> "mem0ai/mem0"
"getzep/graphiti" -> "patchy631/ai-engineering-hub"
"getzep/graphiti" -> "OpenSPG/KAG"
"getzep/graphiti" -> "letta-ai/letta"
"getzep/graphiti" -> "BerriAI/litellm"
"getzep/graphiti" -> "pydantic/pydantic-ai"
"getzep/graphiti" -> "Zackriya-Solutions/meeting-minutes"
"kortix-ai/suna" -> "rowboatlabs/rowboat"
"kortix-ai/suna" -> "getzep/graphiti"
"kortix-ai/suna" -> "simular-ai/Agent-S"
"kortix-ai/suna" -> "camel-ai/owl"
"kortix-ai/suna" -> "jujumilk3/leaked-system-prompts"
"kortix-ai/suna" -> "nari-labs/dia" ["e"=1]
"kortix-ai/suna" -> "bytedance/UI-TARS-desktop"
"kortix-ai/suna" -> "jlowin/fastmcp"
"kortix-ai/suna" -> "bytedance/UI-TARS"
"kortix-ai/suna" -> "agno-agi/agno"
"kortix-ai/suna" -> "FoundationAgents/OpenManus"
"kortix-ai/suna" -> "Shubhamsaboo/awesome-llm-apps"
"kortix-ai/suna" -> "opencode-ai/opencode"
"kortix-ai/suna" -> "Zackriya-Solutions/meeting-minutes"
"kortix-ai/suna" -> "browser-use/browser-use"
"simular-ai/Agent-S" -> "getzep/graphiti"
"simular-ai/Agent-S" -> "bytedance/UI-TARS"
"simular-ai/Agent-S" -> "kortix-ai/suna"
"simular-ai/Agent-S" -> "aipotheosis-labs/aci"
"simular-ai/Agent-S" -> "rowboatlabs/rowboat"
"simular-ai/Agent-S" -> "jujumilk3/leaked-system-prompts"
"simular-ai/Agent-S" -> "trycua/cua"
"simular-ai/Agent-S" -> "jlowin/fastmcp"
"simular-ai/Agent-S" -> "Zackriya-Solutions/meeting-minutes"
"simular-ai/Agent-S" -> "MODSetter/SurfSense"
"simular-ai/Agent-S" -> "awslabs/agent-squad"
"simular-ai/Agent-S" -> "browserbase/stagehand"
"simular-ai/Agent-S" -> "lastmile-ai/mcp-agent"
"simular-ai/Agent-S" -> "QwenLM/Qwen-Agent"
"simular-ai/Agent-S" -> "patchy631/ai-engineering-hub"
"yamadashy/repomix" -> "cline/cline"
"yamadashy/repomix" -> "cyclotruc/gitingest"
"yamadashy/repomix" -> "mendableai/firecrawl"
"yamadashy/repomix" -> "Aider-AI/aider"
"yamadashy/repomix" -> "browserbase/stagehand"
"yamadashy/repomix" -> "PatrickJS/awesome-cursorrules"
"yamadashy/repomix" -> "agno-agi/agno"
"yamadashy/repomix" -> "docling-project/docling"
"yamadashy/repomix" -> "unclecode/crawl4ai"
"yamadashy/repomix" -> "RooVetGit/Roo-Code"
"yamadashy/repomix" -> "mufeedvh/code2prompt"
"yamadashy/repomix" -> "block/goose"
"yamadashy/repomix" -> "eyaltoledano/claude-task-master"
"yamadashy/repomix" -> "Shubhamsaboo/awesome-llm-apps"
"yamadashy/repomix" -> "All-Hands-AI/OpenHands"
"QuivrHQ/MegaParse" -> "pydantic/pydantic-ai"
"QuivrHQ/MegaParse" -> "docling-project/docling"
"QuivrHQ/MegaParse" -> "Zipstack/unstract"
"QuivrHQ/MegaParse" -> "Cinnamon/kotaemon"
"QuivrHQ/MegaParse" -> "getzep/graphiti"
"QuivrHQ/MegaParse" -> "agno-agi/agno"
"QuivrHQ/MegaParse" -> "VikParuchuri/surya"
"QuivrHQ/MegaParse" -> "getomni-ai/zerox"
"QuivrHQ/MegaParse" -> "microsoft/TinyTroupe"
"QuivrHQ/MegaParse" -> "CatchTheTornado/text-extract-api"
"QuivrHQ/MegaParse" -> "browserbase/stagehand"
"QuivrHQ/MegaParse" -> "steel-dev/steel-browser"
"QuivrHQ/MegaParse" -> "zaidmukaddam/scira"
"QuivrHQ/MegaParse" -> "allenai/olmocr"
"QuivrHQ/MegaParse" -> "BerriAI/litellm"
"lightonai/pylate" -> "mixedbread-ai/baguetter"
"lightonai/pylate" -> "raphaelsty/neural-cherche"
"lightonai/pylate" -> "Knowledgator/GLiClass"
"lightonai/pylate" -> "xhluca/bm25s"
"lightonai/pylate" -> "AnswerDotAI/rerankers"
"lightonai/pylate" -> "MinishLab/vicinity"
"lightonai/pylate" -> "jxmorris12/cde"
"lightonai/pylate" -> "TusKANNy/seismic" ["e"=1]
"lightonai/pylate" -> "lightonai/ducksearch"
"lightonai/pylate" -> "mixedbread-ai/mxbai-rerank"
"lightonai/pylate" -> "AnswerDotAI/ModernBERT"
"lightonai/pylate" -> "AmenRa/ranx" ["e"=1]
"lightonai/pylate" -> "AnswerDotAI/fastkmeans"
"lightonai/pylate" -> "raphaelsty/LeNLP"
"gusye1234/nano-graphrag" -> "circlemind-ai/fast-graphrag"
"gusye1234/nano-graphrag" -> "severian42/GraphRAG-Local-UI"
"gusye1234/nano-graphrag" -> "OSU-NLP-Group/HippoRAG"
"gusye1234/nano-graphrag" -> "HKUDS/LightRAG" ["e"=1]
"gusye1234/nano-graphrag" -> "microsoft/graphrag"
"gusye1234/nano-graphrag" -> "OpenSPG/KAG"
"gusye1234/nano-graphrag" -> "TheAiSingularity/graphrag-local-ollama"
"gusye1234/nano-graphrag" -> "microsoft/PIKE-RAG"
"gusye1234/nano-graphrag" -> "neo4j-labs/llm-graph-builder"
"gusye1234/nano-graphrag" -> "RUC-NLPIR/FlashRAG"
"gusye1234/nano-graphrag" -> "qhjqhj00/MemoRAG"
"gusye1234/nano-graphrag" -> "Azure-Samples/graphrag-accelerator" ["e"=1]
"gusye1234/nano-graphrag" -> "HKUDS/MiniRAG"
"gusye1234/nano-graphrag" -> "SuperMedIntel/Medical-Graph-RAG" ["e"=1]
"gusye1234/nano-graphrag" -> "DEEP-PolyU/Awesome-GraphRAG" ["e"=1]
"Byaidu/PDFMathTranslate" -> "opendatalab/MinerU"
"Byaidu/PDFMathTranslate" -> "CherryHQ/cherry-studio"
"Byaidu/PDFMathTranslate" -> "microsoft/markitdown"
"Byaidu/PDFMathTranslate" -> "Huanshere/VideoLingo"
"Byaidu/PDFMathTranslate" -> "RSSNext/Folo"
"Byaidu/PDFMathTranslate" -> "hiroi-sora/Umi-OCR" ["e"=1]
"Byaidu/PDFMathTranslate" -> "funstory-ai/BabelDOC"
"Byaidu/PDFMathTranslate" -> "Zeyi-Lin/HivisionIDPhotos"
"Byaidu/PDFMathTranslate" -> "jingyaogong/minimind" ["e"=1]
"Byaidu/PDFMathTranslate" -> "Stirling-Tools/Stirling-PDF" ["e"=1]
"Byaidu/PDFMathTranslate" -> "VikParuchuri/marker"
"Byaidu/PDFMathTranslate" -> "lobehub/lobe-chat"
"Byaidu/PDFMathTranslate" -> "harry0703/MoneyPrinterTurbo"
"Byaidu/PDFMathTranslate" -> "songquanpeng/one-api" ["e"=1]
"Byaidu/PDFMathTranslate" -> "allenai/olmocr"
"meta-llama/llama-models" -> "meta-llama/llama-stack-apps"
"meta-llama/llama-models" -> "meta-llama/llama-cookbook"
"meta-llama/llama-models" -> "meta-llama/llama3"
"meta-llama/llama-models" -> "meta-llama/llama-stack"
"meta-llama/llama-models" -> "QwenLM/Qwen3" ["e"=1]
"meta-llama/llama-models" -> "Dhravya/cloudflare-saas-stack" ["e"=1]
"meta-llama/llama-models" -> "QwenLM/Qwen2.5-VL" ["e"=1]
"meta-llama/llama-models" -> "meta-llama/llama"
"meta-llama/llama-models" -> "huggingface/trl" ["e"=1]
"meta-llama/llama-models" -> "Dao-AILab/flash-attention" ["e"=1]
"meta-llama/llama-models" -> "facebookresearch/sam2" ["e"=1]
"meta-llama/llama-models" -> "meta-llama/PurpleLlama" ["e"=1]
"meta-llama/llama-models" -> "vllm-project/vllm"
"meta-llama/llama-models" -> "simplescaling/s1" ["e"=1]
"meta-llama/llama-models" -> "unslothai/unsloth"
"NirDiamant/RAG_Techniques" -> "NirDiamant/GenAI_Agents"
"NirDiamant/RAG_Techniques" -> "NirDiamant/Prompt_Engineering"
"NirDiamant/RAG_Techniques" -> "Cinnamon/kotaemon"
"NirDiamant/RAG_Techniques" -> "microsoft/graphrag"
"NirDiamant/RAG_Techniques" -> "docling-project/docling"
"NirDiamant/RAG_Techniques" -> "Shubhamsaboo/awesome-llm-apps"
"NirDiamant/RAG_Techniques" -> "stanfordnlp/dspy"
"NirDiamant/RAG_Techniques" -> "agno-agi/agno"
"NirDiamant/RAG_Techniques" -> "mem0ai/mem0"
"NirDiamant/RAG_Techniques" -> "patchy631/ai-engineering-hub"
"NirDiamant/RAG_Techniques" -> "aishwaryanr/awesome-generative-ai-guide"
"NirDiamant/RAG_Techniques" -> "mlabonne/llm-course"
"NirDiamant/RAG_Techniques" -> "explodinggradients/ragas"
"NirDiamant/RAG_Techniques" -> "unslothai/unsloth"
"NirDiamant/RAG_Techniques" -> "unclecode/crawl4ai"
"browser-use/browser-use" -> "mendableai/firecrawl"
"browser-use/browser-use" -> "unclecode/crawl4ai"
"browser-use/browser-use" -> "FoundationAgents/OpenManus"
"browser-use/browser-use" -> "browser-use/web-ui"
"browser-use/browser-use" -> "punkpeye/awesome-mcp-servers"
"browser-use/browser-use" -> "cline/cline"
"browser-use/browser-use" -> "All-Hands-AI/OpenHands"
"browser-use/browser-use" -> "modelcontextprotocol/servers"
"browser-use/browser-use" -> "langgenius/dify"
"browser-use/browser-use" -> "Shubhamsaboo/awesome-llm-apps"
"browser-use/browser-use" -> "open-webui/open-webui"
"browser-use/browser-use" -> "n8n-io/n8n"
"browser-use/browser-use" -> "microsoft/OmniParser"
"browser-use/browser-use" -> "agno-agi/agno"
"browser-use/browser-use" -> "FoundationAgents/MetaGPT"
"fixie-ai/ultravox" -> "pipecat-ai/pipecat"
"fixie-ai/ultravox" -> "livekit/agents"
"fixie-ai/ultravox" -> "KoljaB/RealtimeSTT" ["e"=1]
"fixie-ai/ultravox" -> "Canner/WrenAI"
"fixie-ai/ultravox" -> "kyutai-labs/moshi" ["e"=1]
"fixie-ai/ultravox" -> "Zipstack/unstract"
"fixie-ai/ultravox" -> "TEN-framework/ten-framework"
"fixie-ai/ultravox" -> "zaidmukaddam/scira"
"fixie-ai/ultravox" -> "ictnlp/LLaMA-Omni" ["e"=1]
"fixie-ai/ultravox" -> "Standard-Intelligence/hertz-dev" ["e"=1]
"fixie-ai/ultravox" -> "gpt-omni/mini-omni" ["e"=1]
"fixie-ai/ultravox" -> "vocodedev/vocode-core"
"fixie-ai/ultravox" -> "huggingface/parler-tts" ["e"=1]
"fixie-ai/ultravox" -> "gradio-app/fastrtc"
"fixie-ai/ultravox" -> "menloresearch/ichigo"
"severian42/GraphRAG-Local-UI" -> "TheAiSingularity/graphrag-local-ollama"
"severian42/GraphRAG-Local-UI" -> "gusye1234/nano-graphrag"
"severian42/GraphRAG-Local-UI" -> "win4r/GraphRAG4OpenWebUI"
"severian42/GraphRAG-Local-UI" -> "karthik-codex/Autogen_GraphRAG_Ollama"
"severian42/GraphRAG-Local-UI" -> "neo4j-labs/llm-graph-builder"
"severian42/GraphRAG-Local-UI" -> "circlemind-ai/fast-graphrag"
"severian42/GraphRAG-Local-UI" -> "microsoft/graphrag"
"severian42/GraphRAG-Local-UI" -> "Azure-Samples/graphrag-accelerator" ["e"=1]
"severian42/GraphRAG-Local-UI" -> "noworneverev/graphrag-visualizer"
"severian42/GraphRAG-Local-UI" -> "KylinMountain/graphrag-server"
"severian42/GraphRAG-Local-UI" -> "OpenSPG/KAG"
"severian42/GraphRAG-Local-UI" -> "Ikaros-521/GraphRAG-Ollama-UI"
"severian42/GraphRAG-Local-UI" -> "OSU-NLP-Group/HippoRAG"
"severian42/GraphRAG-Local-UI" -> "CosmosShadow/gptpdf"
"severian42/GraphRAG-Local-UI" -> "NanGePlus/GraphragTest"
"MadcowD/ell" -> "NeoVertex1/SuperPrompt"
"MadcowD/ell" -> "openai/swarm"
"MadcowD/ell" -> "567-labs/instructor"
"MadcowD/ell" -> "stanfordnlp/dspy"
"MadcowD/ell" -> "BerriAI/litellm"
"MadcowD/ell" -> "dottxt-ai/outlines"
"MadcowD/ell" -> "Doriandarko/claude-engineer"
"MadcowD/ell" -> "e2b-dev/fragments"
"MadcowD/ell" -> "pydantic/pydantic-ai"
"MadcowD/ell" -> "agno-agi/agno"
"MadcowD/ell" -> "Cinnamon/kotaemon"
"MadcowD/ell" -> "letta-ai/letta"
"MadcowD/ell" -> "mem0ai/mem0"
"MadcowD/ell" -> "anthropics/anthropic-quickstarts"
"MadcowD/ell" -> "mshumer/gpt-prompt-engineer"
"allenai/olmocr" -> "opendatalab/MinerU"
"allenai/olmocr" -> "getomni-ai/zerox"
"allenai/olmocr" -> "docling-project/docling"
"allenai/olmocr" -> "VikParuchuri/marker"
"allenai/olmocr" -> "VikParuchuri/surya"
"allenai/olmocr" -> "microsoft/OmniParser"
"allenai/olmocr" -> "mendableai/firecrawl"
"allenai/olmocr" -> "gradio-app/fastrtc"
"allenai/olmocr" -> "microsoft/markitdown"
"allenai/olmocr" -> "Ucas-HaoranWei/GOT-OCR2.0"
"allenai/olmocr" -> "Byaidu/PDFMathTranslate"
"allenai/olmocr" -> "microsoft/data-formulator"
"allenai/olmocr" -> "unclecode/crawl4ai"
"allenai/olmocr" -> "unslothai/unsloth"
"allenai/olmocr" -> "ocrmypdf/OCRmyPDF"
"OpenSPG/KAG" -> "OpenSPG/openspg"
"OpenSPG/KAG" -> "microsoft/graphrag"
"OpenSPG/KAG" -> "HKUDS/LightRAG" ["e"=1]
"OpenSPG/KAG" -> "gusye1234/nano-graphrag"
"OpenSPG/KAG" -> "getzep/graphiti"
"OpenSPG/KAG" -> "zilliztech/deep-searcher"
"OpenSPG/KAG" -> "microsoft/PIKE-RAG"
"OpenSPG/KAG" -> "QwenLM/Qwen-Agent"
"OpenSPG/KAG" -> "microsoft/PromptWizard"
"OpenSPG/KAG" -> "Cinnamon/kotaemon"
"OpenSPG/KAG" -> "infiniflow/ragflow"
"OpenSPG/KAG" -> "neo4j-labs/llm-graph-builder"
"OpenSPG/KAG" -> "Canner/WrenAI"
"OpenSPG/KAG" -> "OSU-NLP-Group/HippoRAG"
"OpenSPG/KAG" -> "circlemind-ai/fast-graphrag"
"punkpeye/awesome-mcp-servers" -> "modelcontextprotocol/servers"
"punkpeye/awesome-mcp-servers" -> "browser-use/browser-use"
"punkpeye/awesome-mcp-servers" -> "FoundationAgents/OpenManus"
"punkpeye/awesome-mcp-servers" -> "Shubhamsaboo/awesome-llm-apps"
"punkpeye/awesome-mcp-servers" -> "unclecode/crawl4ai"
"punkpeye/awesome-mcp-servers" -> "PatrickJS/awesome-cursorrules"
"punkpeye/awesome-mcp-servers" -> "mendableai/firecrawl"
"punkpeye/awesome-mcp-servers" -> "langgenius/dify"
"punkpeye/awesome-mcp-servers" -> "cline/cline"
"punkpeye/awesome-mcp-servers" -> "x1xhlol/system-prompts-and-models-of-ai-tools"
"punkpeye/awesome-mcp-servers" -> "n8n-io/n8n"
"punkpeye/awesome-mcp-servers" -> "microsoft/markitdown"
"punkpeye/awesome-mcp-servers" -> "open-webui/open-webui"
"punkpeye/awesome-mcp-servers" -> "All-Hands-AI/OpenHands"
"punkpeye/awesome-mcp-servers" -> "jlowin/fastmcp"
"richards199999/Thinking-Claude" -> "langgptai/LangGPT"
"richards199999/Thinking-Claude" -> "CherryHQ/cherry-studio"
"richards199999/Thinking-Claude" -> "opendatalab/MinerU"
"richards199999/Thinking-Claude" -> "songquanpeng/one-api" ["e"=1]
"richards199999/Thinking-Claude" -> "FoundationAgents/OpenManus"
"richards199999/Thinking-Claude" -> "JushBJJ/Mr.-Ranedeer-AI-Tutor"
"richards199999/Thinking-Claude" -> "Huanshere/VideoLingo"
"richards199999/Thinking-Claude" -> "Byaidu/PDFMathTranslate"
"richards199999/Thinking-Claude" -> "labring/FastGPT"
"richards199999/Thinking-Claude" -> "2noise/ChatTTS" ["e"=1]
"richards199999/Thinking-Claude" -> "NeoVertex1/SuperPrompt"
"richards199999/Thinking-Claude" -> "cline/cline"
"richards199999/Thinking-Claude" -> "TeamWiseFlow/wiseflow"
"richards199999/Thinking-Claude" -> "yuaotian/go-cursor-help" ["e"=1]
"richards199999/Thinking-Claude" -> "chatboxai/chatbox" ["e"=1]
"pydantic/pydantic-ai" -> "567-labs/instructor"
"pydantic/pydantic-ai" -> "agno-agi/agno"
"pydantic/pydantic-ai" -> "pydantic/logfire" ["e"=1]
"pydantic/pydantic-ai" -> "modelcontextprotocol/python-sdk"
"pydantic/pydantic-ai" -> "BerriAI/litellm"
"pydantic/pydantic-ai" -> "jlowin/fastmcp"
"pydantic/pydantic-ai" -> "huggingface/smolagents"
"pydantic/pydantic-ai" -> "openai/swarm"
"pydantic/pydantic-ai" -> "stanfordnlp/dspy"
"pydantic/pydantic-ai" -> "langchain-ai/langgraph"
"pydantic/pydantic-ai" -> "docling-project/docling"
"pydantic/pydantic-ai" -> "crewAIInc/crewAI"
"pydantic/pydantic-ai" -> "openai/openai-agents-python"
"pydantic/pydantic-ai" -> "QuivrHQ/MegaParse"
"pydantic/pydantic-ai" -> "pydantic/pydantic" ["e"=1]
"docling-project/docling" -> "microsoft/markitdown"
"docling-project/docling" -> "unclecode/crawl4ai"
"docling-project/docling" -> "Cinnamon/kotaemon"
"docling-project/docling" -> "agno-agi/agno"
"docling-project/docling" -> "mendableai/firecrawl"
"docling-project/docling" -> "VikParuchuri/marker"
"docling-project/docling" -> "opendatalab/MinerU"
"docling-project/docling" -> "stanford-oval/storm"
"docling-project/docling" -> "Shubhamsaboo/awesome-llm-apps"
"docling-project/docling" -> "browser-use/browser-use"
"docling-project/docling" -> "VikParuchuri/surya"
"docling-project/docling" -> "crewAIInc/crewAI"
"docling-project/docling" -> "All-Hands-AI/OpenHands"
"docling-project/docling" -> "khoj-ai/khoj"
"docling-project/docling" -> "unslothai/unsloth"
"SakanaAI/AI-Scientist" -> "stanford-oval/storm"
"SakanaAI/AI-Scientist" -> "SamuelSchmidgall/AgentLaboratory"
"SakanaAI/AI-Scientist" -> "assafelovic/gpt-researcher"
"SakanaAI/AI-Scientist" -> "openai/swarm"
"SakanaAI/AI-Scientist" -> "stanfordnlp/dspy"
"SakanaAI/AI-Scientist" -> "SWE-agent/SWE-agent"
"SakanaAI/AI-Scientist" -> "langchain-ai/local-deep-researcher"
"SakanaAI/AI-Scientist" -> "ItzCrazyKns/Perplexica"
"SakanaAI/AI-Scientist" -> "microsoft/graphrag"
"SakanaAI/AI-Scientist" -> "unslothai/unsloth"
"SakanaAI/AI-Scientist" -> "All-Hands-AI/OpenHands"
"SakanaAI/AI-Scientist" -> "Aider-AI/aider"
"SakanaAI/AI-Scientist" -> "Cinnamon/kotaemon"
"SakanaAI/AI-Scientist" -> "Future-House/paper-qa"
"SakanaAI/AI-Scientist" -> "mem0ai/mem0"
"modelcontextprotocol/python-sdk" -> "jlowin/fastmcp"
"modelcontextprotocol/python-sdk" -> "modelcontextprotocol/servers"
"modelcontextprotocol/python-sdk" -> "google/A2A"
"modelcontextprotocol/python-sdk" -> "openai/openai-agents-python"
"modelcontextprotocol/python-sdk" -> "langchain-ai/langgraph"
"modelcontextprotocol/python-sdk" -> "pydantic/pydantic-ai"
"modelcontextprotocol/python-sdk" -> "punkpeye/awesome-mcp-servers"
"modelcontextprotocol/python-sdk" -> "openai/swarm"
"modelcontextprotocol/python-sdk" -> "tadata-org/fastapi_mcp"
"modelcontextprotocol/python-sdk" -> "microsoft/graphrag"
"modelcontextprotocol/python-sdk" -> "BerriAI/litellm"
"modelcontextprotocol/python-sdk" -> "modelcontextprotocol/typescript-sdk"
"modelcontextprotocol/python-sdk" -> "crewAIInc/crewAI"
"modelcontextprotocol/python-sdk" -> "google/adk-python"
"modelcontextprotocol/python-sdk" -> "lastmile-ai/mcp-agent"
"BragAI/bRAG-langchain" -> "athina-ai/rag-cookbooks"
"BragAI/bRAG-langchain" -> "neural-maze/ava-whatsapp-agent-course"
"BragAI/bRAG-langchain" -> "NirDiamant/GenAI_Agents"
"BragAI/bRAG-langchain" -> "NirDiamant/RAG_Techniques"
"BragAI/bRAG-langchain" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"BragAI/bRAG-langchain" -> "NirDiamant/Prompt_Engineering"
"BragAI/bRAG-langchain" -> "KruxAI/ragbuilder"
"BragAI/bRAG-langchain" -> "JoshuaC215/agent-service-toolkit"
"BragAI/bRAG-langchain" -> "FareedKhan-dev/all-rag-techniques"
"BragAI/bRAG-langchain" -> "hrithikkoduri/WebRover"
"BragAI/bRAG-langchain" -> "patchy631/ai-engineering-hub"
"BragAI/bRAG-langchain" -> "SaiAkhil066/DeepSeek-RAG-Chatbot"
"BragAI/bRAG-langchain" -> "von-development/awesome-LangGraph"
"BragAI/bRAG-langchain" -> "morphik-org/morphik-core"
"BragAI/bRAG-langchain" -> "KalyanKS-NLP/llm-engineer-toolkit"
"jlowin/fastmcp" -> "modelcontextprotocol/python-sdk"
"jlowin/fastmcp" -> "getzep/graphiti"
"jlowin/fastmcp" -> "lastmile-ai/mcp-agent"
"jlowin/fastmcp" -> "punkpeye/awesome-mcp-servers"
"jlowin/fastmcp" -> "tadata-org/fastapi_mcp"
"jlowin/fastmcp" -> "pydantic/pydantic-ai"
"jlowin/fastmcp" -> "google/A2A"
"jlowin/fastmcp" -> "agno-agi/agno"
"jlowin/fastmcp" -> "browserbase/stagehand"
"jlowin/fastmcp" -> "kortix-ai/suna"
"jlowin/fastmcp" -> "simular-ai/Agent-S"
"jlowin/fastmcp" -> "jujumilk3/leaked-system-prompts"
"jlowin/fastmcp" -> "Shubhamsaboo/awesome-llm-apps"
"jlowin/fastmcp" -> "Zackriya-Solutions/meeting-minutes"
"jlowin/fastmcp" -> "modelcontextprotocol/servers"
"langchain-ai/local-deep-researcher" -> "langchain-ai/open_deep_research"
"langchain-ai/local-deep-researcher" -> "microsoft/RD-Agent"
"langchain-ai/local-deep-researcher" -> "patchy631/ai-engineering-hub"
"langchain-ai/local-deep-researcher" -> "glanceapp/glance" ["e"=1]
"langchain-ai/local-deep-researcher" -> "assafelovic/gpt-researcher"
"langchain-ai/local-deep-researcher" -> "nickscamara/open-deep-research"
"langchain-ai/local-deep-researcher" -> "dzhng/deep-research"
"langchain-ai/local-deep-researcher" -> "microsoft/data-formulator"
"langchain-ai/local-deep-researcher" -> "zaidmukaddam/scira"
"langchain-ai/local-deep-researcher" -> "jina-ai/node-DeepResearch"
"langchain-ai/local-deep-researcher" -> "agno-agi/agno"
"langchain-ai/local-deep-researcher" -> "camel-ai/camel"
"langchain-ai/local-deep-researcher" -> "Shubhamsaboo/awesome-llm-apps"
"langchain-ai/local-deep-researcher" -> "getzep/graphiti"
"langchain-ai/local-deep-researcher" -> "NirDiamant/GenAI_Agents"
"adithya-s-k/omniparse" -> "microsoft/graphrag"
"adithya-s-k/omniparse" -> "CosmosShadow/gptpdf"
"adithya-s-k/omniparse" -> "opendatalab/PDF-Extract-Kit"
"adithya-s-k/omniparse" -> "VikParuchuri/marker"
"adithya-s-k/omniparse" -> "TeamWiseFlow/wiseflow"
"adithya-s-k/omniparse" -> "InternLM/MindSearch"
"adithya-s-k/omniparse" -> "opendatalab/MinerU"
"adithya-s-k/omniparse" -> "Ucas-HaoranWei/GOT-OCR2.0"
"adithya-s-k/omniparse" -> "netease-youdao/QAnything"
"adithya-s-k/omniparse" -> "xorbitsai/inference"
"adithya-s-k/omniparse" -> "jina-ai/reader"
"adithya-s-k/omniparse" -> "getomni-ai/zerox"
"adithya-s-k/omniparse" -> "VikParuchuri/surya"
"adithya-s-k/omniparse" -> "labring/FastGPT"
"adithya-s-k/omniparse" -> "mem0ai/mem0"
"getomni-ai/zerox" -> "VikParuchuri/surya"
"getomni-ai/zerox" -> "opendatalab/MinerU"
"getomni-ai/zerox" -> "allenai/olmocr"
"getomni-ai/zerox" -> "VikParuchuri/marker"
"getomni-ai/zerox" -> "docling-project/docling"
"getomni-ai/zerox" -> "Ucas-HaoranWei/GOT-OCR2.0"
"getomni-ai/zerox" -> "getmaxun/maxun"
"getomni-ai/zerox" -> "mendableai/firecrawl"
"getomni-ai/zerox" -> "Skyvern-AI/skyvern"
"getomni-ai/zerox" -> "mediar-ai/screenpipe"
"getomni-ai/zerox" -> "Cinnamon/kotaemon"
"getomni-ai/zerox" -> "stanford-oval/storm"
"getomni-ai/zerox" -> "QuivrHQ/MegaParse"
"getomni-ai/zerox" -> "Huanshere/VideoLingo"
"getomni-ai/zerox" -> "agno-agi/agno"
"web-infra-dev/midscene" -> "bytedance/UI-TARS"
"web-infra-dev/midscene" -> "bytedance/UI-TARS-desktop"
"web-infra-dev/midscene" -> "browserbase/stagehand"
"web-infra-dev/midscene" -> "lightpanda-io/browser"
"web-infra-dev/midscene" -> "Skyvern-AI/skyvern"
"web-infra-dev/midscene" -> "browser-use/web-ui"
"web-infra-dev/midscene" -> "Canner/WrenAI"
"web-infra-dev/midscene" -> "getmaxun/maxun"
"web-infra-dev/midscene" -> "browser-use/browser-use"
"web-infra-dev/midscene" -> "zaidmukaddam/scira"
"web-infra-dev/midscene" -> "microsoft/OmniParser"
"web-infra-dev/midscene" -> "mendableai/firecrawl"
"web-infra-dev/midscene" -> "yamadashy/repomix"
"web-infra-dev/midscene" -> "onlook-dev/onlook" ["e"=1]
"web-infra-dev/midscene" -> "antiwork/shortest"
"Ucas-HaoranWei/GOT-OCR2.0" -> "VikParuchuri/surya"
"Ucas-HaoranWei/GOT-OCR2.0" -> "getomni-ai/zerox"
"Ucas-HaoranWei/GOT-OCR2.0" -> "opendatalab/PDF-Extract-Kit"
"Ucas-HaoranWei/GOT-OCR2.0" -> "OpenGVLab/InternVL" ["e"=1]
"Ucas-HaoranWei/GOT-OCR2.0" -> "opendatalab/MinerU"
"Ucas-HaoranWei/GOT-OCR2.0" -> "allenai/olmocr"
"Ucas-HaoranWei/GOT-OCR2.0" -> "RapidAI/RapidOCR" ["e"=1]
"Ucas-HaoranWei/GOT-OCR2.0" -> "X-PLUG/mPLUG-DocOwl" ["e"=1]
"Ucas-HaoranWei/GOT-OCR2.0" -> "OpenBMB/MiniCPM-o" ["e"=1]
"Ucas-HaoranWei/GOT-OCR2.0" -> "VikParuchuri/marker"
"Ucas-HaoranWei/GOT-OCR2.0" -> "QwenLM/Qwen2.5-VL" ["e"=1]
"Ucas-HaoranWei/GOT-OCR2.0" -> "adithya-s-k/omniparse"
"Ucas-HaoranWei/GOT-OCR2.0" -> "modelscope/FunASR" ["e"=1]
"Ucas-HaoranWei/GOT-OCR2.0" -> "Ucas-HaoranWei/Vary" ["e"=1]
"Ucas-HaoranWei/GOT-OCR2.0" -> "AlibabaResearch/AdvancedLiterateMachinery" ["e"=1]
"stackblitz-labs/bolt.diy" -> "stackblitz/bolt.new"
"stackblitz-labs/bolt.diy" -> "cline/cline"
"stackblitz-labs/bolt.diy" -> "RooVetGit/Roo-Code"
"stackblitz-labs/bolt.diy" -> "browser-use/web-ui"
"stackblitz-labs/bolt.diy" -> "unclecode/crawl4ai"
"stackblitz-labs/bolt.diy" -> "All-Hands-AI/OpenHands"
"stackblitz-labs/bolt.diy" -> "Nutlope/llamacoder"
"stackblitz-labs/bolt.diy" -> "Aider-AI/aider"
"stackblitz-labs/bolt.diy" -> "mendableai/firecrawl"
"stackblitz-labs/bolt.diy" -> "raidendotai/cofounder"
"stackblitz-labs/bolt.diy" -> "e2b-dev/fragments"
"stackblitz-labs/bolt.diy" -> "browser-use/browser-use"
"stackblitz-labs/bolt.diy" -> "agno-agi/agno"
"stackblitz-labs/bolt.diy" -> "FlowiseAI/Flowise"
"stackblitz-labs/bolt.diy" -> "crewAIInc/crewAI"
"modelcontextprotocol/servers" -> "punkpeye/awesome-mcp-servers"
"modelcontextprotocol/servers" -> "cline/cline"
"modelcontextprotocol/servers" -> "browser-use/browser-use"
"modelcontextprotocol/servers" -> "modelcontextprotocol/python-sdk"
"modelcontextprotocol/servers" -> "FoundationAgents/OpenManus"
"modelcontextprotocol/servers" -> "mendableai/firecrawl"
"modelcontextprotocol/servers" -> "langgenius/dify"
"modelcontextprotocol/servers" -> "microsoft/autogen"
"modelcontextprotocol/servers" -> "unclecode/crawl4ai"
"modelcontextprotocol/servers" -> "open-webui/open-webui"
"modelcontextprotocol/servers" -> "PatrickJS/awesome-cursorrules"
"modelcontextprotocol/servers" -> "crewAIInc/crewAI"
"modelcontextprotocol/servers" -> "n8n-io/n8n"
"modelcontextprotocol/servers" -> "All-Hands-AI/OpenHands"
"modelcontextprotocol/servers" -> "google/A2A"
"OSU-NLP-Group/HippoRAG" -> "gusye1234/nano-graphrag"
"OSU-NLP-Group/HippoRAG" -> "microsoft/PIKE-RAG"
"OSU-NLP-Group/HippoRAG" -> "RUC-NLPIR/FlashRAG"
"OSU-NLP-Group/HippoRAG" -> "circlemind-ai/fast-graphrag"
"OSU-NLP-Group/HippoRAG" -> "OpenSPG/KAG"
"OSU-NLP-Group/HippoRAG" -> "qhjqhj00/MemoRAG"
"OSU-NLP-Group/HippoRAG" -> "parthsarthi03/raptor"
"OSU-NLP-Group/HippoRAG" -> "neo4j-labs/llm-graph-builder"
"OSU-NLP-Group/HippoRAG" -> "AkariAsai/self-rag"
"OSU-NLP-Group/HippoRAG" -> "severian42/GraphRAG-Local-UI"
"OSU-NLP-Group/HippoRAG" -> "microsoft/graphrag"
"OSU-NLP-Group/HippoRAG" -> "kingjulio8238/Memary"
"OSU-NLP-Group/HippoRAG" -> "BaranziniLab/KG_RAG" ["e"=1]
"OSU-NLP-Group/HippoRAG" -> "topoteretes/cognee"
"OSU-NLP-Group/HippoRAG" -> "HKUDS/MiniRAG"
"CosmosShadow/gptpdf" -> "CosmosShadow/GeneralAgent" ["e"=1]
"CosmosShadow/gptpdf" -> "adithya-s-k/omniparse"
"CosmosShadow/gptpdf" -> "opendatalab/PDF-Extract-Kit"
"CosmosShadow/gptpdf" -> "andrewyng/translation-agent"
"CosmosShadow/gptpdf" -> "InternLM/MindSearch"
"CosmosShadow/gptpdf" -> "langgptai/LangGPT"
"CosmosShadow/gptpdf" -> "TeamWiseFlow/wiseflow"
"CosmosShadow/gptpdf" -> "VikParuchuri/marker"
"CosmosShadow/gptpdf" -> "Ucas-HaoranWei/GOT-OCR2.0"
"CosmosShadow/gptpdf" -> "jbilcke-hf/clapper" ["e"=1]
"CosmosShadow/gptpdf" -> "severian42/GraphRAG-Local-UI"
"CosmosShadow/gptpdf" -> "thinkany-ai/rag-search" ["e"=1]
"CosmosShadow/gptpdf" -> "refly-ai/refly"
"CosmosShadow/gptpdf" -> "adithya-s-k/marker-api" ["e"=1]
"CosmosShadow/gptpdf" -> "opendatalab/MinerU"
"TheAiSingularity/graphrag-local-ollama" -> "severian42/GraphRAG-Local-UI"
"TheAiSingularity/graphrag-local-ollama" -> "karthik-codex/Autogen_GraphRAG_Ollama"
"TheAiSingularity/graphrag-local-ollama" -> "gusye1234/nano-graphrag"
"TheAiSingularity/graphrag-local-ollama" -> "win4r/GraphRAG4OpenWebUI"
"TheAiSingularity/graphrag-local-ollama" -> "neo4j-labs/llm-graph-builder"
"TheAiSingularity/graphrag-local-ollama" -> "yuntianhe2014/Easy-RAG"
"TheAiSingularity/graphrag-local-ollama" -> "BinNong/llm-graph-builder"
"TheAiSingularity/graphrag-local-ollama" -> "Azure-Samples/graphrag-accelerator" ["e"=1]
"TheAiSingularity/graphrag-local-ollama" -> "noworneverev/graphrag-visualizer"
"TheAiSingularity/graphrag-local-ollama" -> "Ikaros-521/GraphRAG-Ollama-UI"
"TheAiSingularity/graphrag-local-ollama" -> "KylinMountain/graphrag-server"
"TheAiSingularity/graphrag-local-ollama" -> "microsoft/graphrag"
"TheAiSingularity/graphrag-local-ollama" -> "Coding-Crashkurse/GraphRAG-with-Llama-3.1"
"TheAiSingularity/graphrag-local-ollama" -> "NanGePlus/GraphragTest"
"TheAiSingularity/graphrag-local-ollama" -> "circlemind-ai/fast-graphrag"
"johnbean393/Sidekick" -> "superglue-ai/superglue" ["e"=1]
"johnbean393/Sidekick" -> "trycua/cua"
"johnbean393/Sidekick" -> "wojciech-kulik/FlashSpace" ["e"=1]
"johnbean393/Sidekick" -> "LearningCircuit/local-deep-research"
"johnbean393/Sidekick" -> "langchain-ai/local-deep-researcher"
"johnbean393/Sidekick" -> "synth-inc/onit"
"johnbean393/Sidekick" -> "Renset/macai"
"johnbean393/Sidekick" -> "DocumindHQ/documind" ["e"=1]
"johnbean393/Sidekick" -> "magnitudedev/magnitude"
"johnbean393/Sidekick" -> "kevinhermawan/Ollamac"
"johnbean393/Sidekick" -> "steel-dev/steel-browser"
"johnbean393/Sidekick" -> "MODSetter/SurfSense"
"johnbean393/Sidekick" -> "mishushakov/llm-scraper"
"johnbean393/Sidekick" -> "bknd-io/bknd" ["e"=1]
"johnbean393/Sidekick" -> "vinceanalytics/vince" ["e"=1]
"elizaOS/eliza" -> "Shubhamsaboo/awesome-llm-apps"
"elizaOS/eliza" -> "kyegomez/swarms"
"elizaOS/eliza" -> "khoj-ai/khoj"
"elizaOS/eliza" -> "agno-agi/agno"
"elizaOS/eliza" -> "stanford-oval/storm"
"elizaOS/eliza" -> "mendableai/firecrawl"
"elizaOS/eliza" -> "cline/cline"
"elizaOS/eliza" -> "0xPlaygrounds/rig" ["e"=1]
"elizaOS/eliza" -> "unclecode/crawl4ai"
"elizaOS/eliza" -> "crewAIInc/crewAI"
"elizaOS/eliza" -> "browser-use/browser-use"
"elizaOS/eliza" -> "browserbase/stagehand"
"elizaOS/eliza" -> "zaidmukaddam/scira"
"elizaOS/eliza" -> "All-Hands-AI/OpenHands"
"elizaOS/eliza" -> "ItzCrazyKns/Perplexica"
"abinthomasonline/repo2txt" -> "mufeedvh/code2prompt"
"abinthomasonline/repo2txt" -> "udecode/dotai"
"abinthomasonline/repo2txt" -> "cyclotruc/gitingest"
"abinthomasonline/repo2txt" -> "run-llama/create-llama"
"abinthomasonline/repo2txt" -> "mckaywrigley/buildware-ai"
"abinthomasonline/repo2txt" -> "simonw/files-to-prompt"
"abinthomasonline/repo2txt" -> "lamm-mit/PDF2Audio"
"abinthomasonline/repo2txt" -> "CatchTheTornado/text-extract-api"
"abinthomasonline/repo2txt" -> "anysphere/priompt"
"abinthomasonline/repo2txt" -> "verazuo/jailbreak_llms" ["e"=1]
"abinthomasonline/repo2txt" -> "NirDiamant/Controllable-RAG-Agent"
"abinthomasonline/repo2txt" -> "QiuYannnn/Local-File-Organizer"
"abinthomasonline/repo2txt" -> "egoist/sitefetch"
"abinthomasonline/repo2txt" -> "merveenoyan/smol-vision"
"abinthomasonline/repo2txt" -> "KruxAI/ragbuilder"
"coleam00/ai-agents-masterclass" -> "coleam00/ottomator-agents"
"coleam00/ai-agents-masterclass" -> "n8n-io/self-hosted-ai-starter-kit"
"coleam00/ai-agents-masterclass" -> "coleam00/local-ai-packaged"
"coleam00/ai-agents-masterclass" -> "coleam00/Archon"
"coleam00/ai-agents-masterclass" -> "stackblitz-labs/bolt.diy"
"coleam00/ai-agents-masterclass" -> "joshpocock/Stride-AI-Agents"
"coleam00/ai-agents-masterclass" -> "nerding-io/n8n-nodes-mcp"
"coleam00/ai-agents-masterclass" -> "MervinPraison/PraisonAI"
"coleam00/ai-agents-masterclass" -> "VRSEN/agency-swarm"
"coleam00/ai-agents-masterclass" -> "coleam00/ollama-swarm"
"coleam00/ai-agents-masterclass" -> "frdel/agent-zero"
"coleam00/ai-agents-masterclass" -> "coleam00/mcp-mem0"
"coleam00/ai-agents-masterclass" -> "jgravelle/AutoGroq"
"coleam00/ai-agents-masterclass" -> "strnad/CrewAI-Studio" ["e"=1]
"coleam00/ai-agents-masterclass" -> "technovangelist/videoprojects"
"ibttf/interview-coder" -> "Shubhamsaboo/awesome-llm-apps"
"ibttf/interview-coder" -> "Ornithopter-pilot/interview-coder-withoupaywall-opensource" ["e"=1]
"ibttf/interview-coder" -> "feder-cr/Jobs_Applier_AI_Agent_AIHawk"
"ibttf/interview-coder" -> "cyclotruc/gitingest"
"ibttf/interview-coder" -> "dzhng/deep-research"
"ibttf/interview-coder" -> "patchy631/ai-engineering-hub"
"ibttf/interview-coder" -> "virattt/ai-hedge-fund"
"ibttf/interview-coder" -> "ahmedkhaleel2004/gitdiagram"
"ibttf/interview-coder" -> "browserbase/stagehand"
"ibttf/interview-coder" -> "openai/codex"
"ibttf/interview-coder" -> "agno-agi/agno"
"ibttf/interview-coder" -> "browser-use/browser-use"
"ibttf/interview-coder" -> "CapSoftware/Cap" ["e"=1]
"ibttf/interview-coder" -> "FujiwaraChoki/MoneyPrinterV2"
"ibttf/interview-coder" -> "mindverse/Second-Me"
"exa-labs/company-researcher" -> "FoloUp/FoloUp"
"exa-labs/company-researcher" -> "echohive42/AI-reads-books-page-by-page"
"exa-labs/company-researcher" -> "egoist/sitefetch"
"exa-labs/company-researcher" -> "exa-labs/exa-deepseek-chat"
"exa-labs/company-researcher" -> "exa-labs/exa-mcp-server"
"exa-labs/company-researcher" -> "openai/openai-structured-outputs-samples"
"exa-labs/company-researcher" -> "ammaarreshi/Gemini-Search" ["e"=1]
"exa-labs/company-researcher" -> "AK391/ai-gradio"
"exa-labs/company-researcher" -> "developersdigest/llm-api-engine"
"exa-labs/company-researcher" -> "SteveSuv/remix-words-funny" ["e"=1]
"exa-labs/company-researcher" -> "panda-sandeep/epigram"
"exa-labs/company-researcher" -> "video-db/Director"
"exa-labs/company-researcher" -> "wisupai/e2m"
"exa-labs/company-researcher" -> "cloudflare/agents" ["e"=1]
"exa-labs/company-researcher" -> "Nutlope/logocreator" ["e"=1]
"huggingface/evaluation-guidebook" -> "huggingface/lighteval" ["e"=1]
"huggingface/evaluation-guidebook" -> "argilla-io/distilabel" ["e"=1]
"huggingface/evaluation-guidebook" -> "huggingface/yourbench" ["e"=1]
"huggingface/evaluation-guidebook" -> "huggingface/search-and-learn" ["e"=1]
"huggingface/evaluation-guidebook" -> "mlabonne/llm-datasets"
"huggingface/evaluation-guidebook" -> "wasiahmad/Awesome-LLM-Synthetic-Data" ["e"=1]
"huggingface/evaluation-guidebook" -> "PacktPublishing/LLM-Engineers-Handbook"
"huggingface/evaluation-guidebook" -> "ucbepic/docetl"
"huggingface/evaluation-guidebook" -> "huggingface/smol-course"
"huggingface/evaluation-guidebook" -> "huggingface/smollm" ["e"=1]
"huggingface/evaluation-guidebook" -> "mistralai/cookbook"
"huggingface/evaluation-guidebook" -> "huggingface/nanotron" ["e"=1]
"huggingface/evaluation-guidebook" -> "huggingface/cookbook"
"huggingface/evaluation-guidebook" -> "huggingface/picotron" ["e"=1]
"huggingface/evaluation-guidebook" -> "confident-ai/deepeval"
"huggingface/smol-course" -> "huggingface/smollm" ["e"=1]
"huggingface/smol-course" -> "huggingface/smolagents"
"huggingface/smol-course" -> "NirDiamant/GenAI_Agents"
"huggingface/smol-course" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"huggingface/smol-course" -> "PacktPublishing/LLM-Engineers-Handbook"
"huggingface/smol-course" -> "NirDiamant/RAG_Techniques"
"huggingface/smol-course" -> "mlabonne/llm-datasets"
"huggingface/smol-course" -> "SylphAI-Inc/LLM-engineer-handbook"
"huggingface/smol-course" -> "decodingml/llm-twin-course"
"huggingface/smol-course" -> "patchy631/ai-engineering-hub"
"huggingface/smol-course" -> "Lightning-AI/litgpt"
"huggingface/smol-course" -> "pydantic/pydantic-ai"
"huggingface/smol-course" -> "SylphAI-Inc/AdalFlow"
"huggingface/smol-course" -> "huggingface/open-r1" ["e"=1]
"huggingface/smol-course" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"antiwork/shortest" -> "browserbase/stagehand"
"antiwork/shortest" -> "campsite/campsite" ["e"=1]
"antiwork/shortest" -> "web-infra-dev/midscene"
"antiwork/shortest" -> "ericciarla/trendFinder"
"antiwork/shortest" -> "steel-dev/steel-browser"
"antiwork/shortest" -> "zaidmukaddam/scira"
"antiwork/shortest" -> "Integuru-AI/Integuru"
"antiwork/shortest" -> "midday-ai/v1" ["e"=1]
"antiwork/shortest" -> "onlook-dev/onlook" ["e"=1]
"antiwork/shortest" -> "midday-ai/midday" ["e"=1]
"antiwork/shortest" -> "bytedance/monolith"
"antiwork/shortest" -> "nextjs/saas-starter" ["e"=1]
"antiwork/shortest" -> "eastlondoner/cursor-tools"
"antiwork/shortest" -> "mastra-ai/mastra"
"antiwork/shortest" -> "openai/openai-realtime-agents"
"CatchTheTornado/text-extract-api" -> "echohive42/AI-reads-books-page-by-page"
"CatchTheTornado/text-extract-api" -> "imanoop7/Ollama-OCR"
"CatchTheTornado/text-extract-api" -> "QuivrHQ/MegaParse"
"CatchTheTornado/text-extract-api" -> "Nutlope/llama-ocr"
"CatchTheTornado/text-extract-api" -> "enoch3712/ExtractThinker"
"CatchTheTornado/text-extract-api" -> "yigitkonur/swift-ocr-llm-powered-pdf-to-markdown"
"CatchTheTornado/text-extract-api" -> "lumina-ai-inc/chunkr"
"CatchTheTornado/text-extract-api" -> "tjmlabs/ColiVara"
"CatchTheTornado/text-extract-api" -> "getomni-ai/zerox"
"CatchTheTornado/text-extract-api" -> "GitHamza0206/simba"
"CatchTheTornado/text-extract-api" -> "opendatalab/PDF-Extract-Kit"
"CatchTheTornado/text-extract-api" -> "bjesus/pipet" ["e"=1]
"CatchTheTornado/text-extract-api" -> "steel-dev/steel-browser"
"CatchTheTornado/text-extract-api" -> "egoist/sitefetch"
"CatchTheTornado/text-extract-api" -> "Nutlope/logocreator" ["e"=1]
"microsoft/ai-agents-for-beginners" -> "Shubhamsaboo/awesome-llm-apps"
"microsoft/ai-agents-for-beginners" -> "punkpeye/awesome-mcp-servers"
"microsoft/ai-agents-for-beginners" -> "patchy631/ai-engineering-hub"
"microsoft/ai-agents-for-beginners" -> "microsoft/generative-ai-for-beginners"
"microsoft/ai-agents-for-beginners" -> "browser-use/browser-use"
"microsoft/ai-agents-for-beginners" -> "microsoft/markitdown"
"microsoft/ai-agents-for-beginners" -> "NirDiamant/GenAI_Agents"
"microsoft/ai-agents-for-beginners" -> "ahmedkhaleel2004/gitdiagram"
"microsoft/ai-agents-for-beginners" -> "unclecode/crawl4ai"
"microsoft/ai-agents-for-beginners" -> "microsoft/playwright-mcp"
"microsoft/ai-agents-for-beginners" -> "jlowin/fastmcp"
"microsoft/ai-agents-for-beginners" -> "virattt/ai-hedge-fund"
"microsoft/ai-agents-for-beginners" -> "mendableai/firecrawl"
"microsoft/ai-agents-for-beginners" -> "microsoft/data-formulator"
"microsoft/ai-agents-for-beginners" -> "x1xhlol/system-prompts-and-models-of-ai-tools"
"Developer-MultiGroup/DMG-Data-Science-Awesome" -> "Developer-MultiGroup/GenerativeAI-Fundamentals-With-Gemini"
"Developer-MultiGroup/DMG-Data-Science-Awesome" -> "daronyondem/codesamples"
"Developer-MultiGroup/DMG-Data-Science-Awesome" -> "atilsamancioglu/LanguageModel"
"Developer-MultiGroup/DMG-Data-Science-Awesome" -> "mstrYoda/ml-from-scratch"
"Developer-MultiGroup/DMG-Data-Science-Awesome" -> "KardelRuveyda/gemini-devmultigroup-example"
"Developer-MultiGroup/DMG-Data-Science-Awesome" -> "enesmanan/feedback-agent"
"Developer-MultiGroup/DMG-Data-Science-Awesome" -> "CopilotKit/open-research-ANA"
"NirDiamant/GenAI_Agents" -> "NirDiamant/RAG_Techniques"
"NirDiamant/GenAI_Agents" -> "NirDiamant/Prompt_Engineering"
"NirDiamant/GenAI_Agents" -> "Shubhamsaboo/awesome-llm-apps"
"NirDiamant/GenAI_Agents" -> "patchy631/ai-engineering-hub"
"NirDiamant/GenAI_Agents" -> "agno-agi/agno"
"NirDiamant/GenAI_Agents" -> "aishwaryanr/awesome-generative-ai-guide"
"NirDiamant/GenAI_Agents" -> "assafelovic/gpt-researcher"
"NirDiamant/GenAI_Agents" -> "e2b-dev/awesome-ai-agents"
"NirDiamant/GenAI_Agents" -> "docling-project/docling"
"NirDiamant/GenAI_Agents" -> "crewAIInc/crewAI"
"NirDiamant/GenAI_Agents" -> "mendableai/firecrawl"
"NirDiamant/GenAI_Agents" -> "unclecode/crawl4ai"
"NirDiamant/GenAI_Agents" -> "punkpeye/awesome-mcp-servers"
"NirDiamant/GenAI_Agents" -> "anthropics/courses"
"NirDiamant/GenAI_Agents" -> "NirDiamant/Controllable-RAG-Agent"
"frdel/agent-zero" -> "VRSEN/agency-swarm"
"frdel/agent-zero" -> "MervinPraison/PraisonAI"
"frdel/agent-zero" -> "huggingface/speech-to-speech" ["e"=1]
"frdel/agent-zero" -> "Doriandarko/claude-engineer"
"frdel/agent-zero" -> "agno-agi/agno"
"frdel/agent-zero" -> "e2b-dev/fragments"
"frdel/agent-zero" -> "Doriandarko/maestro"
"frdel/agent-zero" -> "crewAIInc/crewAI"
"frdel/agent-zero" -> "Aider-AI/aider"
"frdel/agent-zero" -> "ItzCrazyKns/Perplexica"
"frdel/agent-zero" -> "Zipstack/unstract"
"frdel/agent-zero" -> "stanford-oval/storm"
"frdel/agent-zero" -> "Skyvern-AI/skyvern"
"frdel/agent-zero" -> "Nutlope/llamacoder"
"frdel/agent-zero" -> "stackblitz-labs/bolt.diy"
"lumina-ai-inc/chunkr" -> "steel-dev/steel-browser"
"lumina-ai-inc/chunkr" -> "D-Star-AI/dsRAG"
"lumina-ai-inc/chunkr" -> "QuivrHQ/MegaParse"
"lumina-ai-inc/chunkr" -> "CatchTheTornado/text-extract-api"
"lumina-ai-inc/chunkr" -> "superagent-ai/reag"
"lumina-ai-inc/chunkr" -> "chonkie-ai/chonkie"
"lumina-ai-inc/chunkr" -> "devflowinc/trieve" ["e"=1]
"lumina-ai-inc/chunkr" -> "tjmlabs/ColiVara"
"lumina-ai-inc/chunkr" -> "NVIDIA/nv-ingest"
"lumina-ai-inc/chunkr" -> "echohive42/AI-reads-books-page-by-page"
"lumina-ai-inc/chunkr" -> "egoist/sitefetch"
"lumina-ai-inc/chunkr" -> "yigitkonur/swift-ocr-llm-powered-pdf-to-markdown"
"lumina-ai-inc/chunkr" -> "Filimoa/open-parse"
"lumina-ai-inc/chunkr" -> "circlemind-ai/fast-graphrag"
"lumina-ai-inc/chunkr" -> "zaidmukaddam/scira"
"souzatharsis/podcastfy" -> "lfnovo/open-notebook"
"souzatharsis/podcastfy" -> "gabrielchua/open-notebooklm"
"souzatharsis/podcastfy" -> "MODSetter/SurfSense"
"souzatharsis/podcastfy" -> "lamm-mit/PDF2Audio"
"souzatharsis/podcastfy" -> "zaidmukaddam/scira"
"souzatharsis/podcastfy" -> "Zipstack/unstract"
"souzatharsis/podcastfy" -> "QuivrHQ/MegaParse"
"souzatharsis/podcastfy" -> "microsoft/TinyTroupe"
"souzatharsis/podcastfy" -> "Azzedde/paper_to_podcast"
"souzatharsis/podcastfy" -> "awslabs/agent-squad"
"souzatharsis/podcastfy" -> "pipecat-ai/pipecat"
"souzatharsis/podcastfy" -> "MervinPraison/PraisonAI"
"souzatharsis/podcastfy" -> "langchain-ai/open-canvas"
"souzatharsis/podcastfy" -> "langchain-ai/open_deep_research"
"souzatharsis/podcastfy" -> "fixie-ai/ultravox"
"D4Vinci/Scrapling" -> "daijro/camoufox" ["e"=1]
"D4Vinci/Scrapling" -> "bjesus/pipet" ["e"=1]
"D4Vinci/Scrapling" -> "Nutlope/logocreator" ["e"=1]
"D4Vinci/Scrapling" -> "steel-dev/steel-browser"
"D4Vinci/Scrapling" -> "apify/crawlee-python"
"D4Vinci/Scrapling" -> "browserbase/stagehand"
"D4Vinci/Scrapling" -> "aaPanel/BillionMail" ["e"=1]
"D4Vinci/Scrapling" -> "ScrapeGraphAI/Scrapegraph-ai"
"D4Vinci/Scrapling" -> "lightpanda-io/browser"
"D4Vinci/Scrapling" -> "Mail-0/Zero" ["e"=1]
"D4Vinci/Scrapling" -> "simstudioai/sim"
"D4Vinci/Scrapling" -> "gosom/google-maps-scraper"
"D4Vinci/Scrapling" -> "microsoft/data-formulator"
"D4Vinci/Scrapling" -> "HKUDS/AutoAgent"
"D4Vinci/Scrapling" -> "elizaOS/agent-twitter-client"
"circlemind-ai/fast-graphrag" -> "gusye1234/nano-graphrag"
"circlemind-ai/fast-graphrag" -> "pingcap/autoflow"
"circlemind-ai/fast-graphrag" -> "severian42/GraphRAG-Local-UI"
"circlemind-ai/fast-graphrag" -> "OSU-NLP-Group/HippoRAG"
"circlemind-ai/fast-graphrag" -> "chonkie-ai/chonkie"
"circlemind-ai/fast-graphrag" -> "OpenSPG/KAG"
"circlemind-ai/fast-graphrag" -> "qhjqhj00/MemoRAG"
"circlemind-ai/fast-graphrag" -> "SciPhi-AI/R2R"
"circlemind-ai/fast-graphrag" -> "D-Star-AI/dsRAG"
"circlemind-ai/fast-graphrag" -> "neo4j-labs/llm-graph-builder"
"circlemind-ai/fast-graphrag" -> "microsoft/graphrag"
"circlemind-ai/fast-graphrag" -> "getzep/graphiti"
"circlemind-ai/fast-graphrag" -> "Marker-Inc-Korea/AutoRAG"
"circlemind-ai/fast-graphrag" -> "HKUDS/LightRAG" ["e"=1]
"circlemind-ai/fast-graphrag" -> "microsoft/PIKE-RAG"
"TEN-framework/ten-framework" -> "TEN-framework/ten_framework.bak"
"TEN-framework/ten-framework" -> "livekit/agents"
"TEN-framework/ten-framework" -> "pipecat-ai/pipecat"
"TEN-framework/ten-framework" -> "fixie-ai/ultravox"
"TEN-framework/ten-framework" -> "Canner/WrenAI"
"TEN-framework/ten-framework" -> "awslabs/agent-squad"
"TEN-framework/ten-framework" -> "Zipstack/unstract"
"TEN-framework/ten-framework" -> "agno-agi/agno"
"TEN-framework/ten-framework" -> "dataelement/bisheng" ["e"=1]
"TEN-framework/ten-framework" -> "web-infra-dev/midscene"
"TEN-framework/ten-framework" -> "fishaudio/fish-speech" ["e"=1]
"TEN-framework/ten-framework" -> "google-gemini/cookbook"
"TEN-framework/ten-framework" -> "zaidmukaddam/scira"
"TEN-framework/ten-framework" -> "microsoft/UFO" ["e"=1]
"TEN-framework/ten-framework" -> "mediar-ai/screenpipe"
"Storia-AI/sage" -> "lmnr-ai/lmnr"
"Storia-AI/sage" -> "KruxAI/ragbuilder"
"Storia-AI/sage" -> "patched-codes/patchwork" ["e"=1]
"Storia-AI/sage" -> "kturung/langgraph_streamlit_codeassistant"
"Storia-AI/sage" -> "starpig1129/DATAGEN"
"Storia-AI/sage" -> "run-llama/llama_deploy"
"Storia-AI/sage" -> "PragmaticMachineLearning/docai"
"Storia-AI/sage" -> "yoheinakajima/ditto"
"Storia-AI/sage" -> "NirDiamant/Controllable-RAG-Agent"
"Storia-AI/sage" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"Storia-AI/sage" -> "YassKhazzan/openperplex_backend_os"
"Storia-AI/sage" -> "Surfer-Org/Protocol"
"Storia-AI/sage" -> "cnunescoelho/kiroku"
"Storia-AI/sage" -> "circlemind-ai/fast-graphrag"
"Storia-AI/sage" -> "mezbaul-h/june"
"langchain-ai/memory-template" -> "langchain-ai/memory-agent"
"abus-aikorea/voice-pro" -> "Huanshere/VideoLingo"
"abus-aikorea/voice-pro" -> "Kedreamix/Linly-Dubbing" ["e"=1]
"abus-aikorea/voice-pro" -> "DrewThomasson/ebook2audiobook"
"abus-aikorea/voice-pro" -> "getmaxun/maxun"
"abus-aikorea/voice-pro" -> "SWivid/F5-TTS" ["e"=1]
"abus-aikorea/voice-pro" -> "santinic/audiblez"
"abus-aikorea/voice-pro" -> "mistweaverco/bananas" ["e"=1]
"abus-aikorea/voice-pro" -> "CatchTheTornado/text-extract-api"
"abus-aikorea/voice-pro" -> "hexgrad/kokoro" ["e"=1]
"abus-aikorea/voice-pro" -> "jianchang512/pyvideotrans" ["e"=1]
"abus-aikorea/voice-pro" -> "open-mmlab/Amphion" ["e"=1]
"abus-aikorea/voice-pro" -> "modstart-lib/aigcpanel" ["e"=1]
"abus-aikorea/voice-pro" -> "lightpanda-io/browser"
"abus-aikorea/voice-pro" -> "Zyphra/Zonos" ["e"=1]
"abus-aikorea/voice-pro" -> "bytedance/LatentSync" ["e"=1]
"Doriandarko/claude-engineer" -> "Doriandarko/maestro"
"Doriandarko/claude-engineer" -> "Aider-AI/aider"
"Doriandarko/claude-engineer" -> "cline/cline"
"Doriandarko/claude-engineer" -> "e2b-dev/fragments"
"Doriandarko/claude-engineer" -> "anthropics/anthropic-quickstarts"
"Doriandarko/claude-engineer" -> "mshumer/gpt-prompt-engineer"
"Doriandarko/claude-engineer" -> "agno-agi/agno"
"Doriandarko/claude-engineer" -> "Doriandarko/o1-engineer"
"Doriandarko/claude-engineer" -> "frdel/agent-zero"
"Doriandarko/claude-engineer" -> "anthropics/anthropic-cookbook"
"Doriandarko/claude-engineer" -> "openai/swarm"
"Doriandarko/claude-engineer" -> "anthropics/courses"
"Doriandarko/claude-engineer" -> "SWE-agent/SWE-agent"
"Doriandarko/claude-engineer" -> "Nutlope/llamacoder"
"Doriandarko/claude-engineer" -> "mendableai/firecrawl"
"autoscrape-labs/pydoll" -> "yuruotong1/autoMate"
"autoscrape-labs/pydoll" -> "lightpanda-io/browser"
"autoscrape-labs/pydoll" -> "gradio-app/fastrtc"
"autoscrape-labs/pydoll" -> "jlowin/fastmcp"
"autoscrape-labs/pydoll" -> "camel-ai/camel"
"autoscrape-labs/pydoll" -> "microsoft/RD-Agent"
"autoscrape-labs/pydoll" -> "ultrafunkamsterdam/nodriver" ["e"=1]
"autoscrape-labs/pydoll" -> "getzep/graphiti"
"autoscrape-labs/pydoll" -> "langchain-ai/local-deep-researcher"
"autoscrape-labs/pydoll" -> "apify/crawlee-python"
"autoscrape-labs/pydoll" -> "FujiwaraChoki/MoneyPrinterV2"
"autoscrape-labs/pydoll" -> "seleniumbase/SeleniumBase"
"autoscrape-labs/pydoll" -> "D4Vinci/Scrapling"
"autoscrape-labs/pydoll" -> "getmaxun/maxun"
"autoscrape-labs/pydoll" -> "microsoft/data-formulator"
"modelcontextprotocol/typescript-sdk" -> "modelcontextprotocol/inspector" ["e"=1]
"modelcontextprotocol/typescript-sdk" -> "modelcontextprotocol/python-sdk"
"modelcontextprotocol/typescript-sdk" -> "langchain-ai/langchainjs"
"modelcontextprotocol/typescript-sdk" -> "modelcontextprotocol/servers"
"modelcontextprotocol/typescript-sdk" -> "punkpeye/fastmcp" ["e"=1]
"modelcontextprotocol/typescript-sdk" -> "vercel/ai"
"modelcontextprotocol/typescript-sdk" -> "modelcontextprotocol/modelcontextprotocol"
"modelcontextprotocol/typescript-sdk" -> "mastra-ai/mastra"
"modelcontextprotocol/typescript-sdk" -> "openai/openai-node"
"modelcontextprotocol/typescript-sdk" -> "microsoft/playwright-mcp"
"modelcontextprotocol/typescript-sdk" -> "GLips/Figma-Context-MCP"
"modelcontextprotocol/typescript-sdk" -> "langchain-ai/langgraphjs"
"modelcontextprotocol/typescript-sdk" -> "github/github-mcp-server"
"modelcontextprotocol/typescript-sdk" -> "google/A2A"
"modelcontextprotocol/typescript-sdk" -> "AgentDeskAI/browser-tools-mcp"
"CherryHQ/cherry-studio" -> "chatboxai/chatbox" ["e"=1]
"CherryHQ/cherry-studio" -> "songquanpeng/one-api" ["e"=1]
"CherryHQ/cherry-studio" -> "lobehub/lobe-chat"
"CherryHQ/cherry-studio" -> "deepseek-ai/awesome-deepseek-integration"
"CherryHQ/cherry-studio" -> "labring/FastGPT"
"CherryHQ/cherry-studio" -> "langgenius/dify"
"CherryHQ/cherry-studio" -> "RSSNext/Folo"
"CherryHQ/cherry-studio" -> "QuantumNous/new-api" ["e"=1]
"CherryHQ/cherry-studio" -> "FoundationAgents/OpenManus"
"CherryHQ/cherry-studio" -> "clash-verge-rev/clash-verge-rev" ["e"=1]
"CherryHQ/cherry-studio" -> "opendatalab/MinerU"
"CherryHQ/cherry-studio" -> "ChatGPTNextWeb/NextChat" ["e"=1]
"CherryHQ/cherry-studio" -> "Byaidu/PDFMathTranslate"
"CherryHQ/cherry-studio" -> "punkpeye/awesome-mcp-servers"
"CherryHQ/cherry-studio" -> "mihomo-party-org/mihomo-party" ["e"=1]
"Huanshere/VideoLingo" -> "jianchang512/pyvideotrans" ["e"=1]
"Huanshere/VideoLingo" -> "WEIFENG2333/VideoCaptioner" ["e"=1]
"Huanshere/VideoLingo" -> "harry0703/MoneyPrinterTurbo"
"Huanshere/VideoLingo" -> "linyqh/NarratoAI" ["e"=1]
"Huanshere/VideoLingo" -> "TeamWiseFlow/wiseflow"
"Huanshere/VideoLingo" -> "opendatalab/MinerU"
"Huanshere/VideoLingo" -> "modelscope/FunClip" ["e"=1]
"Huanshere/VideoLingo" -> "fishaudio/fish-speech" ["e"=1]
"Huanshere/VideoLingo" -> "2noise/ChatTTS" ["e"=1]
"Huanshere/VideoLingo" -> "Kedreamix/Linly-Dubbing" ["e"=1]
"Huanshere/VideoLingo" -> "krillinai/KrillinAI"
"Huanshere/VideoLingo" -> "Byaidu/PDFMathTranslate"
"Huanshere/VideoLingo" -> "FunAudioLLM/CosyVoice" ["e"=1]
"Huanshere/VideoLingo" -> "dreammis/social-auto-upload" ["e"=1]
"Huanshere/VideoLingo" -> "Zeyi-Lin/HivisionIDPhotos"
"timescale/pgai" -> "timescale/pgvectorscale" ["e"=1]
"timescale/pgai" -> "pgvector/pgvector"
"timescale/pgai" -> "pydantic/pydantic-ai"
"timescale/pgai" -> "QuivrHQ/MegaParse"
"timescale/pgai" -> "browserbase/stagehand"
"timescale/pgai" -> "awslabs/agent-squad"
"timescale/pgai" -> "SciPhi-AI/R2R"
"timescale/pgai" -> "steel-dev/steel-browser"
"timescale/pgai" -> "567-labs/instructor"
"timescale/pgai" -> "weaviate/Verba"
"timescale/pgai" -> "agno-agi/agno"
"timescale/pgai" -> "Helicone/helicone"
"timescale/pgai" -> "chonkie-ai/chonkie"
"timescale/pgai" -> "langchain-ai/open-canvas"
"timescale/pgai" -> "langwatch/langwatch"
"corbt/agent.exe" -> "anthropics/anthropic-quickstarts"
"corbt/agent.exe" -> "showlab/computer_use_ootb" ["e"=1]
"corbt/agent.exe" -> "steel-dev/steel-browser"
"corbt/agent.exe" -> "lavague-ai/LaVague"
"corbt/agent.exe" -> "Skyvern-AI/skyvern"
"corbt/agent.exe" -> "e2b-dev/fragments"
"corbt/agent.exe" -> "Doriandarko/claude-engineer"
"corbt/agent.exe" -> "browserbase/stagehand"
"corbt/agent.exe" -> "gptme/gptme"
"corbt/agent.exe" -> "pipecat-ai/pipecat"
"corbt/agent.exe" -> "Integuru-AI/Integuru"
"corbt/agent.exe" -> "livekit/agents"
"corbt/agent.exe" -> "web-infra-dev/midscene"
"corbt/agent.exe" -> "langchain-ai/open-canvas"
"corbt/agent.exe" -> "Nutlope/llamacoder"
"MODSetter/SurfSense" -> "aipotheosis-labs/aci"
"MODSetter/SurfSense" -> "simular-ai/Agent-S"
"MODSetter/SurfSense" -> "souzatharsis/podcastfy"
"MODSetter/SurfSense" -> "Zackriya-Solutions/meeting-minutes"
"MODSetter/SurfSense" -> "fastrepl/hyprnote"
"MODSetter/SurfSense" -> "rowboatlabs/rowboat"
"MODSetter/SurfSense" -> "getzep/graphiti"
"MODSetter/SurfSense" -> "kortix-ai/suna"
"MODSetter/SurfSense" -> "lfnovo/open-notebook"
"MODSetter/SurfSense" -> "cloudflare/mcp-server-cloudflare"
"MODSetter/SurfSense" -> "elie222/inbox-zero" ["e"=1]
"MODSetter/SurfSense" -> "trycua/cua"
"MODSetter/SurfSense" -> "wonderwhy-er/DesktopCommanderMCP"
"MODSetter/SurfSense" -> "jujumilk3/leaked-system-prompts"
"MODSetter/SurfSense" -> "awslabs/agent-squad"
"microsoft/BitNet" -> "facebookresearch/lingua" ["e"=1]
"microsoft/BitNet" -> "unslothai/unsloth"
"microsoft/BitNet" -> "vllm-project/vllm"
"microsoft/BitNet" -> "exo-explore/exo"
"microsoft/BitNet" -> "openai/swarm"
"microsoft/BitNet" -> "microsoft/markitdown"
"microsoft/BitNet" -> "microsoft/OmniParser"
"microsoft/BitNet" -> "docling-project/docling"
"microsoft/BitNet" -> "ggml-org/llama.cpp"
"microsoft/BitNet" -> "Shubhamsaboo/awesome-llm-apps"
"microsoft/BitNet" -> "unclecode/crawl4ai"
"microsoft/BitNet" -> "microsoft/graphrag"
"microsoft/BitNet" -> "stanfordnlp/dspy"
"microsoft/BitNet" -> "mendableai/firecrawl"
"microsoft/BitNet" -> "Cinnamon/kotaemon"
"aipotheosis-labs/aci" -> "MODSetter/SurfSense"
"aipotheosis-labs/aci" -> "simular-ai/Agent-S"
"aipotheosis-labs/aci" -> "rowboatlabs/rowboat"
"aipotheosis-labs/aci" -> "getzep/graphiti"
"aipotheosis-labs/aci" -> "jlowin/fastmcp"
"aipotheosis-labs/aci" -> "kortix-ai/suna"
"aipotheosis-labs/aci" -> "jujumilk3/leaked-system-prompts"
"aipotheosis-labs/aci" -> "Zackriya-Solutions/meeting-minutes"
"aipotheosis-labs/aci" -> "cloudflare/mcp-server-cloudflare"
"aipotheosis-labs/aci" -> "wonderwhy-er/DesktopCommanderMCP"
"aipotheosis-labs/aci" -> "lastmile-ai/mcp-agent"
"aipotheosis-labs/aci" -> "patchy631/ai-engineering-hub"
"aipotheosis-labs/aci" -> "aipotheosis-labs/aci-mcp"
"aipotheosis-labs/aci" -> "awslabs/agent-squad"
"aipotheosis-labs/aci" -> "trycua/cua"
"ourongxing/newsnow" -> "krillinai/KrillinAI"
"ourongxing/newsnow" -> "RSSNext/Folo"
"ourongxing/newsnow" -> "jingyaogong/minimind" ["e"=1]
"ourongxing/newsnow" -> "ahmedkhaleel2004/gitdiagram"
"ourongxing/newsnow" -> "Huanshere/VideoLingo"
"ourongxing/newsnow" -> "CherryHQ/cherry-studio"
"ourongxing/newsnow" -> "cooderl/wewe-rss" ["e"=1]
"ourongxing/newsnow" -> "zhuima/awesome-cloudflare" ["e"=1]
"ourongxing/newsnow" -> "readest/readest" ["e"=1]
"ourongxing/newsnow" -> "getmaxun/maxun"
"ourongxing/newsnow" -> "Zeyi-Lin/HivisionIDPhotos"
"ourongxing/newsnow" -> "Byaidu/PDFMathTranslate"
"ourongxing/newsnow" -> "microsoft/ai-agents-for-beginners"
"ourongxing/newsnow" -> "wechat-article/wechat-article-exporter" ["e"=1]
"ourongxing/newsnow" -> "jason5ng32/MyIP" ["e"=1]
"funstory-ai/BabelDOC" -> "Byaidu/PDFMathTranslate"
"funstory-ai/BabelDOC" -> "krillinai/KrillinAI"
"funstory-ai/BabelDOC" -> "Zackriya-Solutions/meeting-minutes"
"funstory-ai/BabelDOC" -> "guaguastandup/zotero-pdf2zh" ["e"=1]
"funstory-ai/BabelDOC" -> "refly-ai/refly"
"funstory-ai/BabelDOC" -> "allenai/olmocr"
"funstory-ai/BabelDOC" -> "oomol-lab/pdf-craft" ["e"=1]
"funstory-ai/BabelDOC" -> "cyfyifanchen/one-person-company" ["e"=1]
"funstory-ai/BabelDOC" -> "Huanshere/VideoLingo"
"funstory-ai/BabelDOC" -> "jamez-bondos/awesome-gpt4o-images"
"funstory-ai/BabelDOC" -> "u14app/deep-research" ["e"=1]
"funstory-ai/BabelDOC" -> "ourongxing/newsnow"
"funstory-ai/BabelDOC" -> "CosmosShadow/gptpdf"
"funstory-ai/BabelDOC" -> "xxnuo/MTranServer" ["e"=1]
"funstory-ai/BabelDOC" -> "supabase-community/supabase-mcp"
"cheahjs/free-llm-api-resources" -> "zukixa/cool-ai-stuff" ["e"=1]
"cheahjs/free-llm-api-resources" -> "stackblitz-labs/bolt.diy"
"cheahjs/free-llm-api-resources" -> "RooVetGit/Roo-Code"
"cheahjs/free-llm-api-resources" -> "browser-use/web-ui"
"cheahjs/free-llm-api-resources" -> "cloudcommunity/Cloud-Free-Tier-Comparison" ["e"=1]
"cheahjs/free-llm-api-resources" -> "cyclotruc/gitingest"
"cheahjs/free-llm-api-resources" -> "NirDiamant/GenAI_Agents"
"cheahjs/free-llm-api-resources" -> "BerriAI/litellm"
"cheahjs/free-llm-api-resources" -> "patchy631/ai-engineering-hub"
"cheahjs/free-llm-api-resources" -> "KalyanKS-NLP/llm-engineer-toolkit"
"cheahjs/free-llm-api-resources" -> "Shubhamsaboo/awesome-llm-apps"
"cheahjs/free-llm-api-resources" -> "NirDiamant/Prompt_Engineering"
"cheahjs/free-llm-api-resources" -> "NirDiamant/RAG_Techniques"
"cheahjs/free-llm-api-resources" -> "pydantic/pydantic-ai"
"cheahjs/free-llm-api-resources" -> "ItzCrazyKns/Perplexica"
"patchy631/ai-engineering-hub" -> "Shubhamsaboo/awesome-llm-apps"
"patchy631/ai-engineering-hub" -> "NirDiamant/GenAI_Agents"
"patchy631/ai-engineering-hub" -> "langchain-ai/local-deep-researcher"
"patchy631/ai-engineering-hub" -> "microsoft/data-formulator"
"patchy631/ai-engineering-hub" -> "comet-ml/opik"
"patchy631/ai-engineering-hub" -> "microsoft/ai-agents-for-beginners"
"patchy631/ai-engineering-hub" -> "getzep/graphiti"
"patchy631/ai-engineering-hub" -> "agno-agi/agno"
"patchy631/ai-engineering-hub" -> "NirDiamant/RAG_Techniques"
"patchy631/ai-engineering-hub" -> "mongodb-developer/GenAI-Showcase"
"patchy631/ai-engineering-hub" -> "jlowin/fastmcp"
"patchy631/ai-engineering-hub" -> "browserbase/stagehand"
"patchy631/ai-engineering-hub" -> "mendableai/firecrawl"
"patchy631/ai-engineering-hub" -> "docling-project/docling"
"patchy631/ai-engineering-hub" -> "anthropics/courses"
"e2b-dev/desktop" -> "e2b-dev/open-computer-use"
"e2b-dev/desktop" -> "e2b-dev/surf"
"e2b-dev/desktop" -> "e2b-dev/e2b-cookbook"
"e2b-dev/desktop" -> "e2b-dev/infra"
"e2b-dev/desktop" -> "e2b-dev/ai-analyst"
"e2b-dev/desktop" -> "ranpox/awesome-computer-use" ["e"=1]
"e2b-dev/desktop" -> "e2b-dev/code-interpreter"
"lm-sys/RouteLLM" -> "togethercomputer/MoA"
"lm-sys/RouteLLM" -> "BerriAI/litellm"
"lm-sys/RouteLLM" -> "MervinPraison/PraisonAI"
"lm-sys/RouteLLM" -> "dottxt-ai/outlines"
"lm-sys/RouteLLM" -> "run-llama/llama_cloud_services"
"lm-sys/RouteLLM" -> "567-labs/instructor"
"lm-sys/RouteLLM" -> "aurelio-labs/semantic-router"
"lm-sys/RouteLLM" -> "SciPhi-AI/R2R"
"lm-sys/RouteLLM" -> "run-llama/llama_deploy"
"lm-sys/RouteLLM" -> "SylphAI-Inc/AdalFlow"
"lm-sys/RouteLLM" -> "Doriandarko/maestro"
"lm-sys/RouteLLM" -> "microsoft/LLMLingua"
"lm-sys/RouteLLM" -> "Doriandarko/claude-engineer"
"lm-sys/RouteLLM" -> "AgentOps-AI/agentops"
"lm-sys/RouteLLM" -> "langchain-ai/langgraph-studio"
"microsoft/data-formulator" -> "patchy631/ai-engineering-hub"
"microsoft/data-formulator" -> "Canner/WrenAI"
"microsoft/data-formulator" -> "microsoft/OmniParser"
"microsoft/data-formulator" -> "dzhng/deep-research"
"microsoft/data-formulator" -> "Shubhamsaboo/awesome-llm-apps"
"microsoft/data-formulator" -> "sinaptik-ai/pandas-ai"
"microsoft/data-formulator" -> "langchain-ai/local-deep-researcher"
"microsoft/data-formulator" -> "mendableai/firecrawl"
"microsoft/data-formulator" -> "docling-project/docling"
"microsoft/data-formulator" -> "stanford-oval/storm"
"microsoft/data-formulator" -> "agno-agi/agno"
"microsoft/data-formulator" -> "Cinnamon/kotaemon"
"microsoft/data-formulator" -> "microsoft/markitdown"
"microsoft/data-formulator" -> "unclecode/crawl4ai"
"microsoft/data-formulator" -> "microsoft/RD-Agent"
"meta-llama/llama-stack" -> "meta-llama/llama-stack-apps"
"meta-llama/llama-stack" -> "meta-llama/llama-cookbook"
"meta-llama/llama-stack" -> "openai/swarm"
"meta-llama/llama-stack" -> "meta-llama/llama-models"
"meta-llama/llama-stack" -> "pydantic/pydantic-ai"
"meta-llama/llama-stack" -> "anthropics/anthropic-cookbook"
"meta-llama/llama-stack" -> "docling-project/docling"
"meta-llama/llama-stack" -> "comet-ml/opik"
"meta-llama/llama-stack" -> "stanfordnlp/dspy"
"meta-llama/llama-stack" -> "agno-agi/agno"
"meta-llama/llama-stack" -> "NirDiamant/RAG_Techniques"
"meta-llama/llama-stack" -> "andrewyng/aisuite"
"meta-llama/llama-stack" -> "BerriAI/litellm"
"meta-llama/llama-stack" -> "NirDiamant/GenAI_Agents"
"meta-llama/llama-stack" -> "anthropics/courses"
"andrewyng/aisuite" -> "pydantic/pydantic-ai"
"andrewyng/aisuite" -> "BerriAI/litellm"
"andrewyng/aisuite" -> "docling-project/docling"
"andrewyng/aisuite" -> "openai/swarm"
"andrewyng/aisuite" -> "agno-agi/agno"
"andrewyng/aisuite" -> "NirDiamant/GenAI_Agents"
"andrewyng/aisuite" -> "NirDiamant/RAG_Techniques"
"andrewyng/aisuite" -> "stanfordnlp/dspy"
"andrewyng/aisuite" -> "Cinnamon/kotaemon"
"andrewyng/aisuite" -> "crewAIInc/crewAI"
"andrewyng/aisuite" -> "Shubhamsaboo/awesome-llm-apps"
"andrewyng/aisuite" -> "microsoft/graphrag"
"andrewyng/aisuite" -> "meta-llama/llama-stack"
"andrewyng/aisuite" -> "patchy631/ai-engineering-hub"
"andrewyng/aisuite" -> "stanford-oval/storm"
"RooVetGit/Roo-Code" -> "cline/cline"
"RooVetGit/Roo-Code" -> "Aider-AI/aider"
"RooVetGit/Roo-Code" -> "eyaltoledano/claude-task-master"
"RooVetGit/Roo-Code" -> "stackblitz-labs/bolt.diy"
"RooVetGit/Roo-Code" -> "modelcontextprotocol/servers"
"RooVetGit/Roo-Code" -> "continuedev/continue"
"RooVetGit/Roo-Code" -> "upstash/context7"
"RooVetGit/Roo-Code" -> "yamadashy/repomix"
"RooVetGit/Roo-Code" -> "browser-use/web-ui"
"RooVetGit/Roo-Code" -> "BerriAI/litellm"
"RooVetGit/Roo-Code" -> "browser-use/browser-use"
"RooVetGit/Roo-Code" -> "PatrickJS/awesome-cursorrules"
"RooVetGit/Roo-Code" -> "stackblitz/bolt.new"
"RooVetGit/Roo-Code" -> "punkpeye/awesome-mcp-servers"
"RooVetGit/Roo-Code" -> "All-Hands-AI/OpenHands"
"steel-dev/steel-browser" -> "browserbase/stagehand"
"steel-dev/steel-browser" -> "lmnr-ai/index"
"steel-dev/steel-browser" -> "lightpanda-io/browser"
"steel-dev/steel-browser" -> "Skyvern-AI/skyvern"
"steel-dev/steel-browser" -> "Integuru-AI/Integuru"
"steel-dev/steel-browser" -> "lavague-ai/LaVague"
"steel-dev/steel-browser" -> "QuivrHQ/MegaParse"
"steel-dev/steel-browser" -> "trycua/cua"
"steel-dev/steel-browser" -> "eastlondoner/cursor-tools"
"steel-dev/steel-browser" -> "web-infra-dev/midscene"
"steel-dev/steel-browser" -> "awslabs/agent-squad"
"steel-dev/steel-browser" -> "bjesus/pipet" ["e"=1]
"steel-dev/steel-browser" -> "antiwork/shortest"
"steel-dev/steel-browser" -> "zaidmukaddam/scira"
"steel-dev/steel-browser" -> "MervinPraison/PraisonAI"
"cyclotruc/gitingest" -> "yamadashy/repomix"
"cyclotruc/gitingest" -> "ahmedkhaleel2004/gitdiagram"
"cyclotruc/gitingest" -> "pydantic/pydantic-ai"
"cyclotruc/gitingest" -> "mendableai/firecrawl"
"cyclotruc/gitingest" -> "zaidmukaddam/scira"
"cyclotruc/gitingest" -> "browserbase/stagehand"
"cyclotruc/gitingest" -> "eyaltoledano/claude-task-master"
"cyclotruc/gitingest" -> "docling-project/docling"
"cyclotruc/gitingest" -> "mufeedvh/code2prompt"
"cyclotruc/gitingest" -> "BerriAI/litellm"
"cyclotruc/gitingest" -> "patchy631/ai-engineering-hub"
"cyclotruc/gitingest" -> "unclecode/crawl4ai"
"cyclotruc/gitingest" -> "Shubhamsaboo/awesome-llm-apps"
"cyclotruc/gitingest" -> "cline/cline"
"cyclotruc/gitingest" -> "RooVetGit/Roo-Code"
"Integuru-AI/Integuru" -> "steel-dev/steel-browser"
"Integuru-AI/Integuru" -> "Ryubing/Ryujinx" ["e"=1]
"Integuru-AI/Integuru" -> "browserbase/stagehand"
"Integuru-AI/Integuru" -> "Skyvern-AI/skyvern"
"Integuru-AI/Integuru" -> "antiwork/shortest"
"Integuru-AI/Integuru" -> "awslabs/agent-squad"
"Integuru-AI/Integuru" -> "David-patrick-chuks/Instagram-AI-Agent"
"Integuru-AI/Integuru" -> "langchain-ai/open-canvas"
"Integuru-AI/Integuru" -> "Doriandarko/claude-engineer"
"Integuru-AI/Integuru" -> "raidendotai/cofounder"
"Integuru-AI/Integuru" -> "pipecat-ai/pipecat"
"Integuru-AI/Integuru" -> "mediar-ai/screenpipe"
"Integuru-AI/Integuru" -> "MervinPraison/PraisonAI"
"Integuru-AI/Integuru" -> "QuivrHQ/MegaParse"
"Integuru-AI/Integuru" -> "lavague-ai/LaVague"
"e2b-dev/fragments" -> "Nutlope/llamacoder"
"e2b-dev/fragments" -> "e2b-dev/code-interpreter"
"e2b-dev/fragments" -> "zaidmukaddam/scira"
"e2b-dev/fragments" -> "Doriandarko/claude-engineer"
"e2b-dev/fragments" -> "miurla/morphic"
"e2b-dev/fragments" -> "langchain-ai/open-canvas"
"e2b-dev/fragments" -> "stackblitz/bolt.new"
"e2b-dev/fragments" -> "stackblitz-labs/bolt.diy"
"e2b-dev/fragments" -> "frdel/agent-zero"
"e2b-dev/fragments" -> "MervinPraison/PraisonAI"
"e2b-dev/fragments" -> "Doriandarko/maestro"
"e2b-dev/fragments" -> "e2b-dev/E2B" ["e"=1]
"e2b-dev/fragments" -> "ItzCrazyKns/Perplexica"
"e2b-dev/fragments" -> "agno-agi/agno"
"e2b-dev/fragments" -> "developersdigest/llm-answer-engine"
"langchain-ai/langgraph-studio" -> "langchain-ai/langgraph"
"langchain-ai/langgraph-studio" -> "langchain-ai/langgraph-example"
"langchain-ai/langgraph-studio" -> "langchain-ai/langchain-academy"
"langchain-ai/langgraph-studio" -> "JoshuaC215/agent-service-toolkit"
"langchain-ai/langgraph-studio" -> "langchain-ai/open-canvas"
"langchain-ai/langgraph-studio" -> "StreetLamb/tribe"
"langchain-ai/langgraph-studio" -> "MervinPraison/PraisonAI"
"langchain-ai/langgraph-studio" -> "langchain-ai/open_deep_research"
"langchain-ai/langgraph-studio" -> "langchain-ai/langserve" ["e"=1]
"langchain-ai/langgraph-studio" -> "langchain-ai/langchain-mcp-adapters"
"langchain-ai/langgraph-studio" -> "run-llama/llama_deploy"
"langchain-ai/langgraph-studio" -> "hinthornw/trustcall"
"langchain-ai/langgraph-studio" -> "lm-sys/RouteLLM"
"langchain-ai/langgraph-studio" -> "langchain-ai/langgraphjs"
"langchain-ai/langgraph-studio" -> "MadcowD/ell"
"googleapis/genai-toolbox" -> "googleapis/mcp-toolbox-sdk-python"
"googleapis/genai-toolbox" -> "langchain-ai/langgraph-swarm-py"
"googleapis/genai-toolbox" -> "langchain-ai/langgraph-supervisor-py"
"googleapis/genai-toolbox" -> "langchain-ai/agent-chat-ui"
"googleapis/genai-toolbox" -> "google/adk-samples"
"googleapis/genai-toolbox" -> "von-development/awesome-LangGraph"
"googleapis/genai-toolbox" -> "langchain-ai/mcpdoc"
"googleapis/genai-toolbox" -> "langchain-ai/langmem"
"googleapis/genai-toolbox" -> "neural-maze/ava-whatsapp-agent-course"
"googleapis/genai-toolbox" -> "hrithikkoduri/WebRover"
"googleapis/genai-toolbox" -> "googleapis/python-genai"
"googleapis/genai-toolbox" -> "NVIDIA/AIQToolkit"
"googleapis/genai-toolbox" -> "esxr/langgraph-mcp"
"googleapis/genai-toolbox" -> "langchain-ai/langgraph-reflection"
"googleapis/genai-toolbox" -> "langchain-ai/langchain-mcp-adapters"
"gradio-app/fastrtc" -> "landing-ai/vision-agent"
"gradio-app/fastrtc" -> "allenai/olmocr"
"gradio-app/fastrtc" -> "jlowin/fastmcp"
"gradio-app/fastrtc" -> "livekit/agents"
"gradio-app/fastrtc" -> "fixie-ai/ultravox"
"gradio-app/fastrtc" -> "patchy631/ai-engineering-hub"
"gradio-app/fastrtc" -> "pipecat-ai/pipecat"
"gradio-app/fastrtc" -> "getzep/graphiti"
"gradio-app/fastrtc" -> "autoscrape-labs/pydoll"
"gradio-app/fastrtc" -> "simular-ai/Agent-S"
"gradio-app/fastrtc" -> "NirDiamant/GenAI_Agents"
"gradio-app/fastrtc" -> "canopyai/Orpheus-TTS" ["e"=1]
"gradio-app/fastrtc" -> "oumi-ai/oumi"
"gradio-app/fastrtc" -> "Zipstack/unstract"
"gradio-app/fastrtc" -> "microsoft/RD-Agent"
"huggingface/smolagents" -> "huggingface/agents-course"
"huggingface/smolagents" -> "crewAIInc/crewAI"
"huggingface/smolagents" -> "openai/swarm"
"huggingface/smolagents" -> "stanfordnlp/dspy"
"huggingface/smolagents" -> "agno-agi/agno"
"huggingface/smolagents" -> "pydantic/pydantic-ai"
"huggingface/smolagents" -> "browser-use/browser-use"
"huggingface/smolagents" -> "BerriAI/litellm"
"huggingface/smolagents" -> "microsoft/autogen"
"huggingface/smolagents" -> "unslothai/unsloth"
"huggingface/smolagents" -> "nickscamara/open-deep-research"
"huggingface/smolagents" -> "huggingface/open-r1" ["e"=1]
"huggingface/smolagents" -> "docling-project/docling"
"huggingface/smolagents" -> "langchain-ai/langgraph"
"huggingface/smolagents" -> "unclecode/crawl4ai"
"openrecall/openrecall" -> "yuka-friends/Windrecorder"
"openrecall/openrecall" -> "SmartBNBGuy/BSC-honeypot"
"openrecall/openrecall" -> "apirrone/Memento"
"openrecall/openrecall" -> "BINANCECONTRACT/Create-Honeypot-Token"
"openrecall/openrecall" -> "SmartBNBGuy/How-to-Create-Honeypot-Token" ["e"=1]
"openrecall/openrecall" -> "Faceplugin-ltd/FaceRecognition-Android" ["e"=1]
"openrecall/openrecall" -> "jasonjmcghee/rem"
"openrecall/openrecall" -> "VedankPurohit/LiveRecall"
"openrecall/openrecall" -> "DonTizi/ReMind" ["e"=1]
"openrecall/openrecall" -> "thebookisclosed/AmperageKit" ["e"=1]
"openrecall/openrecall" -> "mediar-ai/screenpipe"
"openrecall/openrecall" -> "xaitax/TotalRecall" ["e"=1]
"openrecall/openrecall" -> "evomi/mobile-proxies-instructions"
"openrecall/openrecall" -> "evomi/residential-proxies-instructions"
"openrecall/openrecall" -> "CodingWonders/DISMTools" ["e"=1]
"superlinear-ai/raglite" -> "chonkie-ai/chonkie"
"superlinear-ai/raglite" -> "trustgraph-ai/trustgraph"
"superlinear-ai/raglite" -> "superlinear-ai/substrate" ["e"=1]
"superlinear-ai/raglite" -> "eyelevelai/groundx-on-prem"
"superlinear-ai/raglite" -> "BragAI/bRAG-langchain"
"superlinear-ai/raglite" -> "hananedupouy/LLMs-in-Finance"
"superlinear-ai/raglite" -> "langwatch/langwatch"
"superlinear-ai/raglite" -> "multinear-demo/demo-bank-support-lc-py"
"superlinear-ai/raglite" -> "pingcap/autoflow"
"superlinear-ai/raglite" -> "MinishLab/model2vec"
"superlinear-ai/raglite" -> "enoch3712/ExtractThinker"
"superlinear-ai/raglite" -> "Marker-Inc-Korea/AutoRAG"
"superlinear-ai/raglite" -> "Dicklesworthstone/your-source-to-prompt.html"
"superlinear-ai/raglite" -> "reflex-dev/reflex-llm-examples"
"superlinear-ai/raglite" -> "weaviate/recipes"
"memfreeme/memfree" -> "yokingma/search_with_ai" ["e"=1]
"memfreeme/memfree" -> "InternLM/MindSearch"
"memfreeme/memfree" -> "6677-ai/tap4-ai-webui" ["e"=1]
"memfreeme/memfree" -> "rashadphz/farfalle"
"memfreeme/memfree" -> "supermemoryai/opensearch-ai"
"memfreeme/memfree" -> "lihuithe/podlm-public" ["e"=1]
"memfreeme/memfree" -> "all-in-aigc/melodisco" ["e"=1]
"memfreeme/memfree" -> "itsOwen/CyberScraper-2077"
"memfreeme/memfree" -> "qiayue/GitBase" ["e"=1]
"memfreeme/memfree" -> "yaakua/ai-outpainting-com" ["e"=1]
"memfreeme/memfree" -> "thinkany-ai/rag-search" ["e"=1]
"memfreeme/memfree" -> "Nutlope/turboseek"
"memfreeme/memfree" -> "refly-ai/refly"
"memfreeme/memfree" -> "OpenAISpace/ai-trend-publish" ["e"=1]
"memfreeme/memfree" -> "ammaarreshi/Gemini-Search" ["e"=1]
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "CatchTheTornado/text-extract-api"
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "taylorai/aiq"
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "lumina-ai-inc/chunkr"
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "lamm-mit/PDF2Audio"
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "vlm-run/vlmrun-cookbook" ["e"=1]
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "qhjqhj00/MemoRAG"
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "DocumindHQ/documind" ["e"=1]
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "zlwaterfield/scramble" ["e"=1]
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "Dicklesworthstone/llm_aided_ocr"
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "enoch3712/ExtractThinker"
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "Nutlope/llama-ocr"
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "clemlesne/scrape-it-now"
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "desgeeko/pdfsyntax" ["e"=1]
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "aotakeda/learn-thing" ["e"=1]
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" -> "adaline/gateway"
"tensorzero/tensorzero" -> "AutoMQ/automq" ["e"=1]
"tensorzero/tensorzero" -> "SciPhi-AI/R2R"
"tensorzero/tensorzero" -> "0xPlaygrounds/rig" ["e"=1]
"tensorzero/tensorzero" -> "katanemo/archgw"
"tensorzero/tensorzero" -> "EricLBuehler/mistral.rs" ["e"=1]
"tensorzero/tensorzero" -> "tracel-ai/burn" ["e"=1]
"tensorzero/tensorzero" -> "block/goose"
"tensorzero/tensorzero" -> "lancedb/lancedb"
"tensorzero/tensorzero" -> "comet-ml/opik"
"tensorzero/tensorzero" -> "instill-ai/instill-core"
"tensorzero/tensorzero" -> "pydantic/pydantic-ai"
"tensorzero/tensorzero" -> "stanfordnlp/dspy"
"tensorzero/tensorzero" -> "BoundaryML/baml"
"tensorzero/tensorzero" -> "BerriAI/litellm"
"tensorzero/tensorzero" -> "browserbase/stagehand"
"amazon-science/RAGChecker" -> "amazon-science/RefChecker" ["e"=1]
"amazon-science/RAGChecker" -> "stanford-futuredata/ARES"
"amazon-science/RAGChecker" -> "OpenBMB/RAGEval" ["e"=1]
"amazon-science/RAGChecker" -> "AnswerDotAI/rerankers"
"amazon-science/RAGChecker" -> "NovaSearch-Team/RAG-Retrieval"
"amazon-science/RAGChecker" -> "RUC-NLPIR/FlashRAG"
"amazon-science/RAGChecker" -> "explodinggradients/ragas"
"amazon-science/RAGChecker" -> "qhjqhj00/MemoRAG"
"amazon-science/RAGChecker" -> "TIGER-AI-Lab/LongRAG"
"amazon-science/RAGChecker" -> "AkariAsai/self-rag"
"amazon-science/RAGChecker" -> "beir-cellar/beir" ["e"=1]
"amazon-science/RAGChecker" -> "D-Star-AI/dsRAG"
"amazon-science/RAGChecker" -> "gusye1234/nano-graphrag"
"amazon-science/RAGChecker" -> "IntelLabs/RAG-FiT"
"amazon-science/RAGChecker" -> "Marker-Inc-Korea/AutoRAG"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "PacktPublishing/LLM-Engineers-Handbook"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "rasbt/LLMs-from-scratch"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "patchy631/ai-engineering-hub"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "aishwaryanr/awesome-generative-ai-guide"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "huggingface/smol-course"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "KalyanKS-NLP/llm-engineer-toolkit"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "bbruceyuan/Hands-On-Large-Language-Models-CN" ["e"=1]
"HandsOnLLM/Hands-On-Large-Language-Models" -> "NirDiamant/GenAI_Agents"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "SylphAI-Inc/LLM-engineer-handbook"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "NirDiamant/RAG_Techniques"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "naklecha/llama3-from-scratch"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "mlabonne/llm-course"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "roboflow/notebooks" ["e"=1]
"HandsOnLLM/Hands-On-Large-Language-Models" -> "karpathy/LLM101n"
"HandsOnLLM/Hands-On-Large-Language-Models" -> "decodingml/llm-twin-course"
"stackblitz/bolt.new" -> "stackblitz-labs/bolt.diy"
"stackblitz/bolt.new" -> "cline/cline"
"stackblitz/bolt.new" -> "mendableai/firecrawl"
"stackblitz/bolt.new" -> "e2b-dev/fragments"
"stackblitz/bolt.new" -> "Nutlope/llamacoder"
"stackblitz/bolt.new" -> "raidendotai/cofounder"
"stackblitz/bolt.new" -> "openai/swarm"
"stackblitz/bolt.new" -> "unclecode/crawl4ai"
"stackblitz/bolt.new" -> "agno-agi/agno"
"stackblitz/bolt.new" -> "All-Hands-AI/OpenHands"
"stackblitz/bolt.new" -> "RooVetGit/Roo-Code"
"stackblitz/bolt.new" -> "browser-use/browser-use"
"stackblitz/bolt.new" -> "voideditor/void"
"stackblitz/bolt.new" -> "FlowiseAI/Flowise"
"stackblitz/bolt.new" -> "Aider-AI/aider"
"langchain-ai/open-canvas" -> "assistant-ui/assistant-ui"
"langchain-ai/open-canvas" -> "e2b-dev/fragments"
"langchain-ai/open-canvas" -> "HKUDS/LightRAG" ["e"=1]
"langchain-ai/open-canvas" -> "zaidmukaddam/scira"
"langchain-ai/open-canvas" -> "langchain-ai/open_deep_research"
"langchain-ai/open-canvas" -> "Nutlope/llamacoder"
"langchain-ai/open-canvas" -> "langchain-ai/langgraph-studio"
"langchain-ai/open-canvas" -> "langchain-ai/langgraph"
"langchain-ai/open-canvas" -> "nickscamara/open-deep-research"
"langchain-ai/open-canvas" -> "stackblitz/bolt.new"
"langchain-ai/open-canvas" -> "langchain-ai/executive-ai-assistant"
"langchain-ai/open-canvas" -> "getzep/graphiti"
"langchain-ai/open-canvas" -> "anthropics/anthropic-quickstarts"
"langchain-ai/open-canvas" -> "openai/swarm"
"langchain-ai/open-canvas" -> "raidendotai/cofounder"
"togethercomputer/together-cookbook" -> "togethercomputer/open_deep_research" ["e"=1]
"togethercomputer/together-cookbook" -> "KruxAI/ragbuilder"
"togethercomputer/together-cookbook" -> "AnswerDotAI/byaldi"
"togethercomputer/together-cookbook" -> "run-llama/llamacloud-demo"
"togethercomputer/together-cookbook" -> "tjmlabs/ColiVara"
"togethercomputer/together-cookbook" -> "e2b-dev/e2b-cookbook"
"togethercomputer/together-cookbook" -> "merveenoyan/smol-vision"
"togethercomputer/together-cookbook" -> "weaviate/recipes"
"togethercomputer/together-cookbook" -> "illuin-tech/colpali"
"togethercomputer/together-cookbook" -> "philschmid/gemini-samples"
"togethercomputer/together-cookbook" -> "mistralai/cookbook"
"togethercomputer/together-cookbook" -> "lamm-mit/PDF2Audio"
"togethercomputer/together-cookbook" -> "ucbepic/docetl"
"togethercomputer/together-cookbook" -> "superagent-ai/reag"
"togethercomputer/together-cookbook" -> "tonywu71/colpali-cookbooks"
"Nutlope/description-generator" -> "Nutlope/blinkshot"
"Nutlope/description-generator" -> "Nutlope/loras-dev"
"Nutlope/description-generator" -> "Nutlope/picMenu"
"Nutlope/description-generator" -> "Nutlope/explorecareers"
"Nutlope/description-generator" -> "Nutlope/napkins"
"lfnovo/open-notebook" -> "souzatharsis/podcastfy"
"lfnovo/open-notebook" -> "gabrielchua/open-notebooklm"
"lfnovo/open-notebook" -> "MODSetter/SurfSense"
"lfnovo/open-notebook" -> "rmusser01/tldw" ["e"=1]
"lfnovo/open-notebook" -> "lamm-mit/PDF2Audio"
"lfnovo/open-notebook" -> "echohive42/AI-reads-books-page-by-page"
"lfnovo/open-notebook" -> "ammaarreshi/Gemini-Search" ["e"=1]
"lfnovo/open-notebook" -> "thepersonalaicompany/amurex"
"lfnovo/open-notebook" -> "steel-dev/steel-browser"
"lfnovo/open-notebook" -> "Nutlope/llamatutor"
"lfnovo/open-notebook" -> "satvik314/opensource_notebooklm"
"lfnovo/open-notebook" -> "langchain-ai/open-canvas"
"lfnovo/open-notebook" -> "refly-ai/refly"
"lfnovo/open-notebook" -> "FoloUp/FoloUp"
"lfnovo/open-notebook" -> "souzatharsis/podcastfy-demo"
"NanGePlus/CrewAIFlowsFullStack" -> "NanGePlus/CrewAITest"
"NanGePlus/CrewAIFlowsFullStack" -> "NanGePlus/PromptLangChainTest"
"NanGePlus/CrewAIFlowsFullStack" -> "NanGePlus/CrewAIFullstackTest"
"felladrin/awesome-ai-web-search" -> "brunostjohn/perplexideez" ["e"=1]
"felladrin/awesome-ai-web-search" -> "Andrew-Jang/RAGHub"
"felladrin/awesome-ai-web-search" -> "TheBlewish/Automated-AI-Web-Researcher-Ollama"
"felladrin/awesome-ai-web-search" -> "av/harbor" ["e"=1]
"felladrin/awesome-ai-web-search" -> "albertocubeddu/extensionOS"
"felladrin/awesome-ai-web-search" -> "menloresearch/awesome-local-ai"
"Nutlope/llama-ocr" -> "getomni-ai/zerox"
"Nutlope/llama-ocr" -> "CatchTheTornado/text-extract-api"
"Nutlope/llama-ocr" -> "Nutlope/llamacoder"
"Nutlope/llama-ocr" -> "imanoop7/Ollama-OCR"
"Nutlope/llama-ocr" -> "Dicklesworthstone/llm_aided_ocr"
"Nutlope/llama-ocr" -> "yigitkonur/swift-ocr-llm-powered-pdf-to-markdown"
"Nutlope/llama-ocr" -> "chonkie-ai/chonkie"
"Nutlope/llama-ocr" -> "Nutlope/logocreator" ["e"=1]
"Nutlope/llama-ocr" -> "illuin-tech/colpali"
"Nutlope/llama-ocr" -> "Nutlope/turboseek"
"Nutlope/llama-ocr" -> "katanaml/sparrow"
"Nutlope/llama-ocr" -> "QuivrHQ/MegaParse"
"Nutlope/llama-ocr" -> "Nutlope/blinkshot"
"Nutlope/llama-ocr" -> "Nutlope/napkins"
"Nutlope/llama-ocr" -> "menloresearch/ichigo"
"whyhow-ai/knowledge-graph-studio" -> "whyhow-ai/knowledge-table" ["e"=1]
"whyhow-ai/knowledge-graph-studio" -> "AuvaLab/itext2kg" ["e"=1]
"whyhow-ai/knowledge-graph-studio" -> "neo4j-labs/llm-graph-builder"
"whyhow-ai/knowledge-graph-studio" -> "whyhow-ai/recursive-retrieval" ["e"=1]
"whyhow-ai/knowledge-graph-studio" -> "neo4j/neo4j-graphrag-python"
"whyhow-ai/knowledge-graph-studio" -> "severian42/GraphRAG-Local-UI"
"whyhow-ai/knowledge-graph-studio" -> "wisupai/e2m"
"whyhow-ai/knowledge-graph-studio" -> "whyhow-ai/schemas" ["e"=1]
"whyhow-ai/knowledge-graph-studio" -> "pingcap/autoflow"
"whyhow-ai/knowledge-graph-studio" -> "gusye1234/nano-graphrag"
"whyhow-ai/knowledge-graph-studio" -> "noworneverev/graphrag-visualizer"
"whyhow-ai/knowledge-graph-studio" -> "microsoft/PIKE-RAG"
"whyhow-ai/knowledge-graph-studio" -> "OpenSPG/openspg"
"whyhow-ai/knowledge-graph-studio" -> "punnerud/Local_Knowledge_Graph"
"whyhow-ai/knowledge-graph-studio" -> "tomasonjo/blogs" ["e"=1]
"imanoop7/Ollama-OCR" -> "CatchTheTornado/text-extract-api"
"imanoop7/Ollama-OCR" -> "enoch3712/ExtractThinker"
"imanoop7/Ollama-OCR" -> "GitHamza0206/simba"
"imanoop7/Ollama-OCR" -> "echohive42/AI-reads-books-page-by-page"
"imanoop7/Ollama-OCR" -> "wisupai/e2m"
"imanoop7/Ollama-OCR" -> "tjmlabs/ColiVara"
"imanoop7/Ollama-OCR" -> "Nutlope/llama-ocr"
"imanoop7/Ollama-OCR" -> "bytefer/ollama-ocr" ["e"=1]
"imanoop7/Ollama-OCR" -> "SaiAkhil066/DeepSeek-RAG-Chatbot"
"imanoop7/Ollama-OCR" -> "rag-web-ui/rag-web-ui" ["e"=1]
"imanoop7/Ollama-OCR" -> "reflex-dev/reflex-llm-examples"
"imanoop7/Ollama-OCR" -> "egoist/sitefetch"
"imanoop7/Ollama-OCR" -> "swark-io/swark"
"imanoop7/Ollama-OCR" -> "morphik-org/morphik-core"
"imanoop7/Ollama-OCR" -> "e2b-dev/open-computer-use"
"ag2ai/ag2" -> "AgentOps-AI/agentops"
"ag2ai/ag2" -> "ag2ai/build-with-ag2" ["e"=1]
"ag2ai/ag2" -> "ag2ai/fastagency" ["e"=1]
"ag2ai/ag2" -> "BrainBlend-AI/atomic-agents"
"ag2ai/ag2" -> "autogenhub/autogen" ["e"=1]
"ag2ai/ag2" -> "pydantic/pydantic-ai"
"ag2ai/ag2" -> "EmergenceAI/Agent-E"
"ag2ai/ag2" -> "MervinPraison/PraisonAI"
"ag2ai/ag2" -> "microsoft/autogen"
"ag2ai/ag2" -> "awslabs/agent-squad"
"ag2ai/ag2" -> "AgentOps-AI/AgentStack"
"ag2ai/ag2" -> "microsoft/TinyTroupe"
"ag2ai/ag2" -> "victordibia/autogen-ui" ["e"=1]
"ag2ai/ag2" -> "letta-ai/letta"
"ag2ai/ag2" -> "langchain-ai/langgraph"
"qodo-ai/qodo-cover" -> "qodo-ai/pr-agent"
"qodo-ai/qodo-cover" -> "Codium-ai/AlphaCodium"
"qodo-ai/qodo-cover" -> "entropy-research/Devon"
"qodo-ai/qodo-cover" -> "SWE-agent/SWE-agent"
"qodo-ai/qodo-cover" -> "khoj-ai/khoj"
"qodo-ai/qodo-cover" -> "ragapp/ragapp"
"qodo-ai/qodo-cover" -> "agno-agi/agno"
"qodo-ai/qodo-cover" -> "lavague-ai/LaVague"
"qodo-ai/qodo-cover" -> "ItzCrazyKns/Perplexica"
"qodo-ai/qodo-cover" -> "it-ebooks-0/geektime-books" ["e"=1]
"qodo-ai/qodo-cover" -> "ScrapeGraphAI/Scrapegraph-ai"
"qodo-ai/qodo-cover" -> "plandex-ai/plandex"
"qodo-ai/qodo-cover" -> "Doriandarko/claude-engineer"
"qodo-ai/qodo-cover" -> "rashadphz/farfalle"
"qodo-ai/qodo-cover" -> "stitionai/devika"
"PySpur-Dev/pyspur" -> "HKUDS/AutoAgent"
"PySpur-Dev/pyspur" -> "getzep/graphiti"
"PySpur-Dev/pyspur" -> "refly-ai/refly"
"PySpur-Dev/pyspur" -> "Canner/WrenAI"
"PySpur-Dev/pyspur" -> "simstudioai/sim"
"PySpur-Dev/pyspur" -> "Zackriya-Solutions/meeting-minutes"
"PySpur-Dev/pyspur" -> "simular-ai/Agent-S"
"PySpur-Dev/pyspur" -> "microsoft/data-formulator"
"PySpur-Dev/pyspur" -> "agno-agi/agno"
"PySpur-Dev/pyspur" -> "zaidmukaddam/scira"
"PySpur-Dev/pyspur" -> "lastmile-ai/mcp-agent"
"PySpur-Dev/pyspur" -> "jlowin/fastmcp"
"PySpur-Dev/pyspur" -> "patchy631/ai-engineering-hub"
"PySpur-Dev/pyspur" -> "browserbase/stagehand"
"PySpur-Dev/pyspur" -> "allenai/olmocr"
"latitude-dev/latitude-llm" -> "Agenta-AI/agenta"
"latitude-dev/latitude-llm" -> "langwatch/langwatch"
"latitude-dev/latitude-llm" -> "latitude-dev/latitude" ["e"=1]
"latitude-dev/latitude-llm" -> "Helicone/helicone"
"latitude-dev/latitude-llm" -> "topoteretes/cognee"
"latitude-dev/latitude-llm" -> "katanemo/archgw"
"latitude-dev/latitude-llm" -> "steel-dev/steel-browser"
"latitude-dev/latitude-llm" -> "morphik-org/morphik-core"
"latitude-dev/latitude-llm" -> "MervinPraison/PraisonAI"
"latitude-dev/latitude-llm" -> "swark-io/swark"
"latitude-dev/latitude-llm" -> "Openpanel-dev/openpanel" ["e"=1]
"latitude-dev/latitude-llm" -> "lmnr-ai/lmnr"
"latitude-dev/latitude-llm" -> "onlook-dev/onlook" ["e"=1]
"latitude-dev/latitude-llm" -> "NirDiamant/Prompt_Engineering"
"latitude-dev/latitude-llm" -> "microsoft/PromptWizard"
"lecca-digital/lecca-io" -> "tom-doerr/perplexity_search"
"opendatalab/PDF-Extract-Kit" -> "opendatalab/MinerU"
"opendatalab/PDF-Extract-Kit" -> "VikParuchuri/marker"
"opendatalab/PDF-Extract-Kit" -> "Ucas-HaoranWei/GOT-OCR2.0"
"opendatalab/PDF-Extract-Kit" -> "adithya-s-k/omniparse"
"opendatalab/PDF-Extract-Kit" -> "CosmosShadow/gptpdf"
"opendatalab/PDF-Extract-Kit" -> "VikParuchuri/surya"
"opendatalab/PDF-Extract-Kit" -> "InternLM/MindSearch"
"opendatalab/PDF-Extract-Kit" -> "microsoft/graphrag"
"opendatalab/PDF-Extract-Kit" -> "opendatalab/DocLayout-YOLO" ["e"=1]
"opendatalab/PDF-Extract-Kit" -> "allenai/olmocr"
"opendatalab/PDF-Extract-Kit" -> "Unstructured-IO/unstructured"
"opendatalab/PDF-Extract-Kit" -> "getomni-ai/zerox"
"opendatalab/PDF-Extract-Kit" -> "opendatalab/labelU" ["e"=1]
"opendatalab/PDF-Extract-Kit" -> "FlagOpen/FlagEmbedding" ["e"=1]
"opendatalab/PDF-Extract-Kit" -> "opendatalab/magic-doc" ["e"=1]
"voideditor/void" -> "cline/cline"
"voideditor/void" -> "continuedev/continue"
"voideditor/void" -> "stackblitz/bolt.new"
"voideditor/void" -> "RooVetGit/Roo-Code"
"voideditor/void" -> "Aider-AI/aider"
"voideditor/void" -> "kyutai-labs/moshi" ["e"=1]
"voideditor/void" -> "mendableai/firecrawl"
"voideditor/void" -> "All-Hands-AI/OpenHands"
"voideditor/void" -> "mediar-ai/screenpipe"
"voideditor/void" -> "ItzCrazyKns/Perplexica"
"voideditor/void" -> "onlook-dev/onlook" ["e"=1]
"voideditor/void" -> "browser-use/browser-use"
"voideditor/void" -> "stackblitz-labs/bolt.diy"
"voideditor/void" -> "browserbase/stagehand"
"voideditor/void" -> "agno-agi/agno"
"kodu-ai/claude-coder" -> "stackblitz-labs/bolt.diy"
"kodu-ai/claude-coder" -> "RooVetGit/Roo-Code"
"kodu-ai/claude-coder" -> "e2b-dev/fragments"
"kodu-ai/claude-coder" -> "codestoryai/aide"
"kodu-ai/claude-coder" -> "cline/cline"
"kodu-ai/claude-coder" -> "frdel/agent-zero"
"kodu-ai/claude-coder" -> "MervinPraison/PraisonAI"
"kodu-ai/claude-coder" -> "raidendotai/cofounder"
"kodu-ai/claude-coder" -> "stackblitz/bolt.new"
"kodu-ai/claude-coder" -> "coleam00/Archon"
"kodu-ai/claude-coder" -> "BuilderIO/micro-agent"
"kodu-ai/claude-coder" -> "Nutlope/llamacoder"
"kodu-ai/claude-coder" -> "ai-christianson/RA.Aid"
"kodu-ai/claude-coder" -> "Aider-AI/aider"
"kodu-ai/claude-coder" -> "Doriandarko/claude-engineer"
"HumeAI/hume-evi-next-js-starter" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"HumeAI/hume-evi-next-js-starter" -> "deepgram-starters/nextjs-live-transcription" ["e"=1]
"HumeAI/hume-evi-next-js-starter" -> "vercel-labs/ai-sdk-preview-rag"
"HumeAI/hume-evi-next-js-starter" -> "vercel-labs/semantic-image-search"
"HumeAI/hume-evi-next-js-starter" -> "vercel-labs/ai-sdk-reasoning-starter"
"HumeAI/hume-evi-next-js-starter" -> "vercel-labs/ai-sdk-preview-use-object"
"HumeAI/hume-evi-next-js-starter" -> "HumeAI/hume-api-examples"
"HumeAI/hume-evi-next-js-starter" -> "vercel-labs/ai-sdk-preview-roundtrips"
"HumeAI/hume-evi-next-js-starter" -> "vercel-labs/ai-sdk-preview-pdf-support"
"HumeAI/hume-evi-next-js-starter" -> "vercel-labs/ai-sdk-preview-multi-steps"
"HumeAI/hume-evi-next-js-starter" -> "vercel-labs/ai-sdk-preview-attachments"
"supermemoryai/opensearch-ai" -> "memfreeme/memfree"
"supermemoryai/opensearch-ai" -> "Doriandarko/omni-engineer"
"supermemoryai/opensearch-ai" -> "supermemoryai/supermemory"
"supermemoryai/opensearch-ai" -> "Dhravya/cloudflare-saas-stack" ["e"=1]
"supermemoryai/opensearch-ai" -> "supermemoryai/markdowner"
"supermemoryai/opensearch-ai" -> "YassKhazzan/openperplex_backend_os"
"supermemoryai/opensearch-ai" -> "Nutlope/turboseek"
"supermemoryai/opensearch-ai" -> "mikekelly/AgentK"
"supermemoryai/opensearch-ai" -> "InternLM/MindSearch"
"supermemoryai/opensearch-ai" -> "Omniplex-ai/omniplex"
"supermemoryai/opensearch-ai" -> "rashadphz/farfalle"
"supermemoryai/opensearch-ai" -> "mckaywrigley/clarity-ai" ["e"=1]
"supermemoryai/opensearch-ai" -> "e2b-dev/fragments"
"supermemoryai/opensearch-ai" -> "zaidmukaddam/scira"
"supermemoryai/opensearch-ai" -> "Surfer-Org/Protocol"
"NeoVertex1/SuperPrompt" -> "MadcowD/ell"
"NeoVertex1/SuperPrompt" -> "Doriandarko/claude-engineer"
"NeoVertex1/SuperPrompt" -> "elder-plinius/L1B3RT4S"
"NeoVertex1/SuperPrompt" -> "anthropics/courses"
"NeoVertex1/SuperPrompt" -> "richards199999/Thinking-Claude"
"NeoVertex1/SuperPrompt" -> "mshumer/gpt-prompt-engineer"
"NeoVertex1/SuperPrompt" -> "anthropics/anthropic-quickstarts"
"NeoVertex1/SuperPrompt" -> "xjdr-alt/entropix" ["e"=1]
"NeoVertex1/SuperPrompt" -> "verazuo/jailbreak_llms" ["e"=1]
"NeoVertex1/SuperPrompt" -> "langgptai/LangGPT"
"NeoVertex1/SuperPrompt" -> "Cinnamon/kotaemon"
"NeoVertex1/SuperPrompt" -> "mendableai/firecrawl"
"NeoVertex1/SuperPrompt" -> "openai/swarm"
"NeoVertex1/SuperPrompt" -> "supermemoryai/supermemory"
"NeoVertex1/SuperPrompt" -> "anysphere/priompt"
"ansh/template-2" -> "ansh/deeperseeker-app"
"ansh/template-2" -> "mckaywrigley/mckays-app-template"
"ansh/template-2" -> "CodeGuide-dev/codeguide-starter-lite"
"ansh/template-2" -> "kleneway/next-ai-starter" ["e"=1]
"ansh/template-2" -> "rbrown101010/landingpage"
"ansh/template-2" -> "kleneway/awesome-cursor-mpc-server" ["e"=1]
"ansh/template-2" -> "Galaxies-dev/chatgpt-clone-react-native"
"ansh/template-2" -> "sullyo/webapp-starter"
"ansh/template-2" -> "michaelshimeles/nextjs-starter-kit" ["e"=1]
"ansh/template-2" -> "RayFernando1337/llm-cursor-rules"
"Upsonic/Upsonic" -> "lllyasviel/Omost" ["e"=1]
"Upsonic/Upsonic" -> "ScrapeGraphAI/Scrapegraph-ai"
"Upsonic/Upsonic" -> "agno-agi/agno"
"Upsonic/Upsonic" -> "ItzCrazyKns/Perplexica"
"Upsonic/Upsonic" -> "Skyvern-AI/skyvern"
"Upsonic/Upsonic" -> "mem0ai/mem0"
"Upsonic/Upsonic" -> "assafelovic/gpt-researcher"
"Upsonic/Upsonic" -> "mediar-ai/screenpipe"
"Upsonic/Upsonic" -> "MervinPraison/PraisonAI"
"Upsonic/Upsonic" -> "browserbase/stagehand"
"Upsonic/Upsonic" -> "crewAIInc/crewAI"
"Upsonic/Upsonic" -> "stanford-oval/storm"
"Upsonic/Upsonic" -> "letta-ai/letta"
"Upsonic/Upsonic" -> "Doriandarko/claude-engineer"
"Upsonic/Upsonic" -> "jlowin/fastmcp"
"meta-llama/llama-stack-apps" -> "meta-llama/llama-models"
"meta-llama/llama-stack-apps" -> "meta-llama/llama-stack"
"meta-llama/llama-stack-apps" -> "meta-llama/llama-cookbook"
"meta-llama/llama-stack-apps" -> "openai/swarm"
"meta-llama/llama-stack-apps" -> "anthropics/anthropic-quickstarts"
"meta-llama/llama-stack-apps" -> "stanfordnlp/dspy"
"meta-llama/llama-stack-apps" -> "lm-sys/RouteLLM"
"meta-llama/llama-stack-apps" -> "pytorch/torchtune" ["e"=1]
"meta-llama/llama-stack-apps" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"meta-llama/llama-stack-apps" -> "567-labs/instructor"
"meta-llama/llama-stack-apps" -> "InternLM/MindSearch"
"meta-llama/llama-stack-apps" -> "togethercomputer/MoA"
"meta-llama/llama-stack-apps" -> "anthropics/anthropic-cookbook"
"meta-llama/llama-stack-apps" -> "dottxt-ai/outlines"
"meta-llama/llama-stack-apps" -> "pytorch/torchchat" ["e"=1]
"IntelLabs/RAG-FiT" -> "fate-ubw/RAGLAB"
"IntelLabs/RAG-FiT" -> "TAG-Research/TAG-Bench"
"IntelLabs/RAG-FiT" -> "FutureClubNL/RAGMeUp"
"IntelLabs/RAG-FiT" -> "sunnynexus/Search-o1" ["e"=1]
"IntelLabs/RAG-FiT" -> "IntelLabs/fastRAG"
"IntelLabs/RAG-FiT" -> "GAIR-NLP/OpenResearcher" ["e"=1]
"IntelLabs/RAG-FiT" -> "opea-project/GenAIComps" ["e"=1]
"IntelLabs/RAG-FiT" -> "amazon-science/RAGChecker"
"IntelLabs/RAG-FiT" -> "KruxAI/ragbuilder"
"IntelLabs/RAG-FiT" -> "plageon/HtmlRAG" ["e"=1]
"IntelLabs/RAG-FiT" -> "OpenBMB/IoA"
"IntelLabs/RAG-FiT" -> "run-llama/multi-agent-concierge"
"IntelLabs/RAG-FiT" -> "Andrew-Jang/RAGHub"
"IntelLabs/RAG-FiT" -> "yixuantt/MultiHop-RAG" ["e"=1]
"IntelLabs/RAG-FiT" -> "hhhuang/CAG"
"decodingml/personalized-recommender-course" -> "decodingml/tabular-semantic-search-tutorial"
"decodingml/personalized-recommender-course" -> "decodingml/second-brain-ai-assistant-course"
"decodingml/personalized-recommender-course" -> "neural-maze/philoagents-course"
"decodingml/personalized-recommender-course" -> "decodingml/articles-code" ["e"=1]
"decodingml/personalized-recommender-course" -> "iusztinpaul/energy-forecasting"
"decodingml/personalized-recommender-course" -> "ShawhinT/AI-Builders-Bootcamp-1"
"decodingml/personalized-recommender-course" -> "fmind/mlops-python-package"
"decodingml/personalized-recommender-course" -> "decodingml/llm-twin-course"
"decodingml/personalized-recommender-course" -> "HadeelAls618/electricity_demand_predictor" ["e"=1]
"decodingml/personalized-recommender-course" -> "Paulescu/kubernetes-for-ml-engineers" ["e"=1]
"decodingml/personalized-recommender-course" -> "callmesora/llmops-python-package"
"decodingml/personalized-recommender-course" -> "PacktPublishing/LLM-Engineers-Handbook"
"decodingml/personalized-recommender-course" -> "Paulescu/real-time-data-pipelines-in-python" ["e"=1]
"decodingml/personalized-recommender-course" -> "Paulescu/incremental-ml-training-and-serving"
"decodingml/personalized-recommender-course" -> "logicalclocks/hopsworks-tutorials" ["e"=1]
"camel-ai/oasis" -> "tsinghua-fib-lab/AgentSociety" ["e"=1]
"camel-ai/oasis" -> "camel-ai/camel"
"camel-ai/oasis" -> "FudanDISC/SocialAgent" ["e"=1]
"camel-ai/oasis" -> "camel-ai/crab"
"camel-ai/oasis" -> "MotiaDev/motia"
"camel-ai/oasis" -> "langwatch/langwatch"
"camel-ai/oasis" -> "video-db/Director"
"camel-ai/oasis" -> "tencent-ailab/persona-hub" ["e"=1]
"camel-ai/oasis" -> "camel-ai/loong" ["e"=1]
"camel-ai/oasis" -> "microsoft/TinyTroupe"
"camel-ai/oasis" -> "simular-ai/Agent-S"
"camel-ai/oasis" -> "elizaOS/agent-twitter-client"
"camel-ai/oasis" -> "trycua/acu"
"camel-ai/oasis" -> "exa-labs/exa-mcp-server"
"camel-ai/oasis" -> "HKUDS/AutoAgent"
"pontusab/directories" -> "eastlondoner/cursor-tools"
"pontusab/directories" -> "grapeot/devin.cursorrules"
"pontusab/directories" -> "midday-ai/v1" ["e"=1]
"pontusab/directories" -> "udecode/dotai"
"pontusab/directories" -> "PatrickJS/awesome-cursorrules"
"pontusab/directories" -> "languine-ai/languine" ["e"=1]
"pontusab/directories" -> "midday-ai/midday" ["e"=1]
"pontusab/directories" -> "serafimcloud/21st" ["e"=1]
"pontusab/directories" -> "zaidmukaddam/scira"
"pontusab/directories" -> "AgentDeskAI/browser-tools-mcp"
"pontusab/directories" -> "bmadcode/cursor-custom-agents-rules-generator"
"pontusab/directories" -> "eyaltoledano/claude-task-master"
"pontusab/directories" -> "piotrkulpinski/openalternative" ["e"=1]
"pontusab/directories" -> "haydenbleasel/next-forge" ["e"=1]
"pontusab/directories" -> "stackblitz/bolt.new"
"browserbase/mcp-server-browserbase" -> "mendableai/firecrawl-mcp-server"
"browserbase/mcp-server-browserbase" -> "zcaceres/markdownify-mcp"
"browserbase/mcp-server-browserbase" -> "executeautomation/mcp-playwright"
"browserbase/mcp-server-browserbase" -> "browserbase/stagehand"
"browserbase/mcp-server-browserbase" -> "exa-labs/exa-mcp-server"
"browserbase/mcp-server-browserbase" -> "AgentDeskAI/browser-tools-mcp"
"browserbase/mcp-server-browserbase" -> "browserbase/open-operator"
"browserbase/mcp-server-browserbase" -> "BrowserMCP/mcp"
"browserbase/mcp-server-browserbase" -> "21st-dev/magic-mcp"
"browserbase/mcp-server-browserbase" -> "Saik0s/mcp-browser-use" ["e"=1]
"browserbase/mcp-server-browserbase" -> "co-browser/browser-use-mcp-server" ["e"=1]
"browserbase/mcp-server-browserbase" -> "graphlit/graphlit-mcp-server" ["e"=1]
"browserbase/mcp-server-browserbase" -> "elevenlabs/elevenlabs-mcp"
"browserbase/mcp-server-browserbase" -> "qdrant/mcp-server-qdrant" ["e"=1]
"browserbase/mcp-server-browserbase" -> "daodao97/chatmcp" ["e"=1]
"NirDiamant/Prompt_Engineering" -> "NirDiamant/GenAI_Agents"
"NirDiamant/Prompt_Engineering" -> "NirDiamant/RAG_Techniques"
"NirDiamant/Prompt_Engineering" -> "NirDiamant/Controllable-RAG-Agent"
"NirDiamant/Prompt_Engineering" -> "BragAI/bRAG-langchain"
"NirDiamant/Prompt_Engineering" -> "patchy631/ai-engineering-hub"
"NirDiamant/Prompt_Engineering" -> "anthropics/courses"
"NirDiamant/Prompt_Engineering" -> "BrainBlend-AI/atomic-agents"
"NirDiamant/Prompt_Engineering" -> "Shubhamsaboo/awesome-llm-apps"
"NirDiamant/Prompt_Engineering" -> "SylphAI-Inc/LLM-engineer-handbook"
"NirDiamant/Prompt_Engineering" -> "anthropics/anthropic-cookbook"
"NirDiamant/Prompt_Engineering" -> "KruxAI/ragbuilder"
"NirDiamant/Prompt_Engineering" -> "MODSetter/SurfSense"
"NirDiamant/Prompt_Engineering" -> "langchain-ai/open-canvas"
"NirDiamant/Prompt_Engineering" -> "e2b-dev/awesome-ai-agents"
"NirDiamant/Prompt_Engineering" -> "PacktPublishing/LLM-Engineers-Handbook"
"yuntianhe2014/Easy-RAG" -> "Steven-Luo/MasteringRAG" ["e"=1]
"yuntianhe2014/Easy-RAG" -> "TheAiSingularity/graphrag-local-ollama"
"yuntianhe2014/Easy-RAG" -> "BinNong/meet-libai"
"yuntianhe2014/Easy-RAG" -> "severian42/GraphRAG-Local-UI"
"yuntianhe2014/Easy-RAG" -> "BUAADreamer/EasyRAG" ["e"=1]
"yuntianhe2014/Easy-RAG" -> "KylinMountain/graphrag-server"
"yuntianhe2014/Easy-RAG" -> "Logistic98/rag-omni"
"yuntianhe2014/Easy-RAG" -> "NovaSearch-Team/RAG-Retrieval"
"yuntianhe2014/Easy-RAG" -> "gomate-community/TrustRAG" ["e"=1]
"yuntianhe2014/Easy-RAG" -> "Ikaros-521/GraphRAG-Ollama-UI"
"starpig1129/DATAGEN" -> "cnunescoelho/kiroku"
"starpig1129/DATAGEN" -> "NirDiamant/Controllable-RAG-Agent"
"starpig1129/DATAGEN" -> "von-development/awesome-LangGraph"
"starpig1129/DATAGEN" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"starpig1129/DATAGEN" -> "KruxAI/ragbuilder"
"starpig1129/DATAGEN" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"starpig1129/DATAGEN" -> "ahmad2b/postbot3000"
"starpig1129/DATAGEN" -> "langchain-ai/langgraph-studio"
"starpig1129/DATAGEN" -> "langchain-ai/open_deep_research"
"starpig1129/DATAGEN" -> "JoshuaC215/agent-service-toolkit"
"starpig1129/DATAGEN" -> "DhruvAtreja/datavisualization_langgraph"
"starpig1129/DATAGEN" -> "hinthornw/trustcall"
"starpig1129/DATAGEN" -> "Azzedde/paper_to_podcast"
"starpig1129/DATAGEN" -> "BragAI/bRAG-langchain"
"starpig1129/DATAGEN" -> "lamm-mit/SciAgentsDiscovery" ["e"=1]
"mastra-ai/mastra" -> "browserbase/stagehand"
"mastra-ai/mastra" -> "onlook-dev/onlook" ["e"=1]
"mastra-ai/mastra" -> "vercel/ai-chatbot"
"mastra-ai/mastra" -> "yamadashy/repomix"
"mastra-ai/mastra" -> "vercel/ai"
"mastra-ai/mastra" -> "block/goose"
"mastra-ai/mastra" -> "zaidmukaddam/scira"
"mastra-ai/mastra" -> "mendableai/firecrawl"
"mastra-ai/mastra" -> "better-auth/better-auth" ["e"=1]
"mastra-ai/mastra" -> "agno-agi/agno"
"mastra-ai/mastra" -> "assistant-ui/assistant-ui"
"mastra-ai/mastra" -> "browser-use/browser-use"
"mastra-ai/mastra" -> "aidenybai/react-scan" ["e"=1]
"mastra-ai/mastra" -> "modelcontextprotocol/typescript-sdk"
"mastra-ai/mastra" -> "cline/cline"
"potpie-ai/potpie" -> "browserbase/stagehand"
"potpie-ai/potpie" -> "simular-ai/Agent-S"
"potpie-ai/potpie" -> "getzep/graphiti"
"potpie-ai/potpie" -> "block/goose"
"potpie-ai/potpie" -> "microsoft/data-formulator"
"potpie-ai/potpie" -> "Zipstack/unstract"
"potpie-ai/potpie" -> "jlowin/fastmcp"
"potpie-ai/potpie" -> "patchy631/ai-engineering-hub"
"potpie-ai/potpie" -> "awslabs/agent-squad"
"potpie-ai/potpie" -> "zaidmukaddam/scira"
"potpie-ai/potpie" -> "HKUDS/AutoAgent"
"potpie-ai/potpie" -> "agno-agi/agno"
"potpie-ai/potpie" -> "microsoft/PromptWizard"
"potpie-ai/potpie" -> "onlook-dev/onlook" ["e"=1]
"potpie-ai/potpie" -> "Zackriya-Solutions/meeting-minutes"
"mbarinov/repogpt" -> "saurabhlalsaxena/Perplexity-Clone-v0.1"
"mbarinov/repogpt" -> "jank/curiosity"
"mbarinov/repogpt" -> "ahmad2b/postbot3000"
"deep-diver/paper-reviewer" -> "deep-diver/hf-daily-paper-newsletter"
"deep-diver/paper-reviewer" -> "cnunescoelho/kiroku"
"deep-diver/paper-reviewer" -> "AK391/ai-gradio"
"deep-diver/paper-reviewer" -> "gabrielchua/daily-ai-papers"
"openai/openai-realtime-console" -> "openai/openai-realtime-api-beta" ["e"=1]
"openai/openai-realtime-console" -> "openai/openai-realtime-agents"
"openai/openai-realtime-console" -> "livekit/agents"
"openai/openai-realtime-console" -> "pipecat-ai/pipecat"
"openai/openai-realtime-console" -> "google-gemini/live-api-web-console"
"openai/openai-realtime-console" -> "openai/openai-assistants-quickstart"
"openai/openai-realtime-console" -> "langchain-ai/react-voice-agent" ["e"=1]
"openai/openai-realtime-console" -> "openai/swarm"
"openai/openai-realtime-console" -> "Azure-Samples/aoai-realtime-audio-sdk" ["e"=1]
"openai/openai-realtime-console" -> "openai/openai-realtime-twilio-demo" ["e"=1]
"openai/openai-realtime-console" -> "anthropics/anthropic-quickstarts"
"openai/openai-realtime-console" -> "livekit-examples/realtime-playground" ["e"=1]
"openai/openai-realtime-console" -> "openai/openai-agents-python"
"openai/openai-realtime-console" -> "twilio-samples/speech-assistant-openai-realtime-api-node" ["e"=1]
"openai/openai-realtime-console" -> "langchain-ai/open-canvas"
"dynamiq-ai/dynamiq" -> "wyattm14/chatbot-template"
"dynamiq-ai/dynamiq" -> "Chirag-Main1/ChatBot_perosnal"
"dynamiq-ai/dynamiq" -> "SupportTools/dr-syncer"
"dynamiq-ai/dynamiq" -> "MasterOfLogic1/UipathLibraries"
"dynamiq-ai/dynamiq" -> "furudo-erika/awesome-postman-alternatives"
"dynamiq-ai/dynamiq" -> "Trylz/Restir_CPP"
"dynamiq-ai/dynamiq" -> "Webinix-dev/webinix"
"dynamiq-ai/dynamiq" -> "muraliavarma/vue-slot-table"
"dynamiq-ai/dynamiq" -> "updatedotdev/js"
"dynamiq-ai/dynamiq" -> "HMUNACHI/super-lazy-autograd"
"dynamiq-ai/dynamiq" -> "spectrumwebco/kled.io"
"dynamiq-ai/dynamiq" -> "MacroSurfer/MacroSurferFunctions"
"dynamiq-ai/dynamiq" -> "RichartDedekind/NollarsVPN"
"dynamiq-ai/dynamiq" -> "RoyGeagea/inventory-management"
"dynamiq-ai/dynamiq" -> "gptBuster/gptBuster"
"iterative/datachain" -> "iterative/dvc" ["e"=1]
"iterative/datachain" -> "circlemind-ai/fast-graphrag"
"iterative/datachain" -> "chonkie-ai/chonkie"
"iterative/datachain" -> "DocumindHQ/documind" ["e"=1]
"iterative/datachain" -> "katanaml/sparrow"
"iterative/datachain" -> "pyper-dev/pyper" ["e"=1]
"iterative/datachain" -> "Lightning-AI/LitServe"
"iterative/datachain" -> "drasi-project/drasi-platform" ["e"=1]
"iterative/datachain" -> "iterative/terraform-provider-iterative" ["e"=1]
"iterative/datachain" -> "dleemiller/WordLlama"
"iterative/datachain" -> "SciPhi-AI/R2R"
"iterative/datachain" -> "ucbepic/docetl"
"iterative/datachain" -> "Filimoa/open-parse"
"iterative/datachain" -> "neuml/txtai"
"iterative/datachain" -> "pydantic/pydantic-ai"
"mark3labs/mcp-go" -> "metoro-io/mcp-golang" ["e"=1]
"mark3labs/mcp-go" -> "tmc/langchaingo" ["e"=1]
"mark3labs/mcp-go" -> "cloudwego/eino" ["e"=1]
"mark3labs/mcp-go" -> "mark3labs/mcphost" ["e"=1]
"mark3labs/mcp-go" -> "openai/openai-go" ["e"=1]
"mark3labs/mcp-go" -> "sashabaranov/go-openai" ["e"=1]
"mark3labs/mcp-go" -> "ThinkInAIXYZ/go-mcp"
"mark3labs/mcp-go" -> "jlowin/fastmcp"
"mark3labs/mcp-go" -> "lastmile-ai/mcp-agent"
"mark3labs/mcp-go" -> "hibiken/asynq" ["e"=1]
"mark3labs/mcp-go" -> "github/github-mcp-server"
"mark3labs/mcp-go" -> "sourcegraph/conc" ["e"=1]
"mark3labs/mcp-go" -> "samber/lo" ["e"=1]
"mark3labs/mcp-go" -> "bytedance/sonic" ["e"=1]
"mark3labs/mcp-go" -> "executeautomation/mcp-playwright"
"executeautomation/mcp-playwright" -> "microsoft/playwright-mcp"
"executeautomation/mcp-playwright" -> "lastmile-ai/mcp-agent"
"executeautomation/mcp-playwright" -> "mendableai/firecrawl-mcp-server"
"executeautomation/mcp-playwright" -> "wonderwhy-er/DesktopCommanderMCP"
"executeautomation/mcp-playwright" -> "jlowin/fastmcp"
"executeautomation/mcp-playwright" -> "AgentDeskAI/browser-tools-mcp"
"executeautomation/mcp-playwright" -> "browserbase/mcp-server-browserbase"
"executeautomation/mcp-playwright" -> "Zackriya-Solutions/meeting-minutes"
"executeautomation/mcp-playwright" -> "browserbase/stagehand"
"executeautomation/mcp-playwright" -> "web-infra-dev/midscene"
"executeautomation/mcp-playwright" -> "mark3labs/mcp-go"
"executeautomation/mcp-playwright" -> "yuruotong1/autoMate"
"executeautomation/mcp-playwright" -> "microsoft/RD-Agent"
"executeautomation/mcp-playwright" -> "simular-ai/Agent-S"
"executeautomation/mcp-playwright" -> "langchain-ai/local-deep-researcher"
"wonderwhy-er/DesktopCommanderMCP" -> "lastmile-ai/mcp-agent"
"wonderwhy-er/DesktopCommanderMCP" -> "executeautomation/mcp-playwright"
"wonderwhy-er/DesktopCommanderMCP" -> "cloudflare/mcp-server-cloudflare"
"wonderwhy-er/DesktopCommanderMCP" -> "ezyang/codemcp" ["e"=1]
"wonderwhy-er/DesktopCommanderMCP" -> "eyaltoledano/claude-task-master"
"wonderwhy-er/DesktopCommanderMCP" -> "jlowin/fastmcp"
"wonderwhy-er/DesktopCommanderMCP" -> "anaisbetts/mcp-installer" ["e"=1]
"wonderwhy-er/DesktopCommanderMCP" -> "aipotheosis-labs/aci"
"wonderwhy-er/DesktopCommanderMCP" -> "upstash/context7"
"wonderwhy-er/DesktopCommanderMCP" -> "oraios/serena" ["e"=1]
"wonderwhy-er/DesktopCommanderMCP" -> "MODSetter/SurfSense"
"wonderwhy-er/DesktopCommanderMCP" -> "supabase-community/supabase-mcp"
"wonderwhy-er/DesktopCommanderMCP" -> "simular-ai/Agent-S"
"wonderwhy-er/DesktopCommanderMCP" -> "21st-dev/magic-mcp"
"wonderwhy-er/DesktopCommanderMCP" -> "rowboatlabs/rowboat"
"drmingler/docling-api" -> "docling-project/docling-serve"
"drmingler/docling-api" -> "lumina-ai-inc/chunkr"
"drmingler/docling-api" -> "VikParuchuri/pdftext" ["e"=1]
"drmingler/docling-api" -> "Softlandia-Ltd/vision-is-all-you-need"
"morphik-org/morphik-core" -> "plexe-ai/plexe"
"morphik-org/morphik-core" -> "simstudioai/sim"
"morphik-org/morphik-core" -> "chonkie-inc/chonkie"
"morphik-org/morphik-core" -> "SaiAkhil066/DeepSeek-RAG-Chatbot"
"morphik-org/morphik-core" -> "trycua/cua"
"morphik-org/morphik-core" -> "HelixDB/helix-db"
"morphik-org/morphik-core" -> "airweave-ai/airweave"
"morphik-org/morphik-core" -> "topoteretes/cognee"
"morphik-org/morphik-core" -> "Operative-Sh/web-eval-agent"
"morphik-org/morphik-core" -> "SciPhi-AI/R2R"
"morphik-org/morphik-core" -> "authed-dev/authed"
"morphik-org/morphik-core" -> "Andrew-Jang/RAGHub"
"morphik-org/morphik-core" -> "katanemo/archgw"
"morphik-org/morphik-core" -> "Fosowl/agenticSeek"
"morphik-org/morphik-core" -> "cocoindex-io/cocoindex"
"langchain-ai/social-media-agent" -> "langchain-ai/agent-inbox"
"langchain-ai/social-media-agent" -> "langchain-ai/executive-ai-assistant"
"langchain-ai/social-media-agent" -> "langchain-ai/agent-chat-ui"
"langchain-ai/social-media-agent" -> "hrithikkoduri/WebRover"
"langchain-ai/social-media-agent" -> "langchain-ai/company-researcher"
"langchain-ai/social-media-agent" -> "von-development/awesome-LangGraph"
"langchain-ai/social-media-agent" -> "langchain-ai/open_deep_research"
"langchain-ai/social-media-agent" -> "langchain-ai/langgraph-swarm-py"
"langchain-ai/social-media-agent" -> "vinay-gatech/stocks-insights-ai-agent"
"langchain-ai/social-media-agent" -> "langchain-ai/open-canvas"
"langchain-ai/social-media-agent" -> "David-patrick-chuks/Instagram-AI-Agent"
"langchain-ai/social-media-agent" -> "CopilotKit/open-multi-agent-canvas"
"langchain-ai/social-media-agent" -> "neural-maze/ava-whatsapp-agent-course"
"langchain-ai/social-media-agent" -> "multinear-demo/demo-bank-support-lc-py"
"langchain-ai/social-media-agent" -> "hinthornw/trustcall"
"HelixDB/helix-db" -> "mlop-ai/mlop"
"HelixDB/helix-db" -> "authed-dev/authed"
"HelixDB/helix-db" -> "airweave-ai/airweave"
"HelixDB/helix-db" -> "getprobo/probo"
"HelixDB/helix-db" -> "Operative-Sh/web-eval-agent"
"HelixDB/helix-db" -> "chonkie-inc/chonkie"
"HelixDB/helix-db" -> "JasonGross/autoformalization-transpilation"
"HelixDB/helix-db" -> "The-LLM-Data-Company/doteval"
"HelixDB/helix-db" -> "blaxel-ai/sdk-python"
"HelixDB/helix-db" -> "morphik-org/morphik-core"
"HelixDB/helix-db" -> "simstudioai/sim"
"HelixDB/helix-db" -> "plexe-ai/plexe"
"HelixDB/helix-db" -> "attunehq/attune"
"HelixDB/helix-db" -> "starslingdev/starsling"
"Not-Diamond/awesome-ai-model-routing" -> "Not-Diamond/RoRF"
"Not-Diamond/awesome-ai-model-routing" -> "Not-Diamond/notdiamond-python"
"Not-Diamond/awesome-ai-model-routing" -> "mckaywrigley/ai-router-chat"
"daveshap/Raspberry" -> "daveshap/raspberry_experiments"
"daveshap/Raspberry" -> "antibitcoin/ReflectionAnyLLM" ["e"=1]
"daveshap/Raspberry" -> "daveshap/BSHR_Loop"
"daveshap/Raspberry" -> "daveshap/ChatGPT_Custom_Instructions"
"daveshap/Raspberry" -> "Doriandarko/omni-engineer"
"daveshap/Raspberry" -> "daveshap/BurnoutRecoveryIndex"
"daveshap/Raspberry" -> "daveshap/ACE_Framework"
"daveshap/Raspberry" -> "DataBassGit/o7"
"ImagineAILab/ai-by-hand-excel" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"ImagineAILab/ai-by-hand-excel" -> "easychen/ai-self-coding-book" ["e"=1]
"ImagineAILab/ai-by-hand-excel" -> "ZJU-LLMs/Foundations-of-LLMs" ["e"=1]
"ImagineAILab/ai-by-hand-excel" -> "Circuit-Digest/ESP-Drone" ["e"=1]
"ImagineAILab/ai-by-hand-excel" -> "udlbook/udlbook" ["e"=1]
"ImagineAILab/ai-by-hand-excel" -> "jingyaogong/minimind" ["e"=1]
"ImagineAILab/ai-by-hand-excel" -> "naklecha/llama3-from-scratch"
"ImagineAILab/ai-by-hand-excel" -> "zuruoke/watermark-removal" ["e"=1]
"ImagineAILab/ai-by-hand-excel" -> "jingyaogong/minimind-v" ["e"=1]
"ImagineAILab/ai-by-hand-excel" -> "LLMBook-zh/LLMBook-zh.github.io" ["e"=1]
"ImagineAILab/ai-by-hand-excel" -> "valeman/Awesome_Math_Books" ["e"=1]
"ImagineAILab/ai-by-hand-excel" -> "patchy631/ai-engineering-hub"
"ImagineAILab/ai-by-hand-excel" -> "PacktPublishing/LLM-Engineers-Handbook"
"ImagineAILab/ai-by-hand-excel" -> "microsoft/data-formulator"
"ImagineAILab/ai-by-hand-excel" -> "huggingface/smol-course"
"raidendotai/cofounder" -> "stackblitz-labs/bolt.diy"
"raidendotai/cofounder" -> "stackblitz/bolt.new"
"raidendotai/cofounder" -> "e2b-dev/fragments"
"raidendotai/cofounder" -> "langchain-ai/open-canvas"
"raidendotai/cofounder" -> "Cinnamon/kotaemon"
"raidendotai/cofounder" -> "frdel/agent-zero"
"raidendotai/cofounder" -> "chartdb/chartdb" ["e"=1]
"raidendotai/cofounder" -> "Nutlope/llamacoder"
"raidendotai/cofounder" -> "Doriandarko/claude-engineer"
"raidendotai/cofounder" -> "raidendotai/openv0"
"raidendotai/cofounder" -> "meltylabs/melty"
"raidendotai/cofounder" -> "mediar-ai/screenpipe"
"raidendotai/cofounder" -> "Integuru-AI/Integuru"
"raidendotai/cofounder" -> "Skyvern-AI/skyvern"
"raidendotai/cofounder" -> "docling-project/docling"
"hmpl-language/hmpl" -> "earos-ai/aw-client"
"hmpl-language/hmpl" -> "Profichefsorn77/telegramdm-bot"
"hmpl-language/hmpl" -> "Grimmy01/Nodepay-Bot"
"hmpl-language/hmpl" -> "Slick-ux/Telegram-VPN-Bot-3X-UI"
"hmpl-language/hmpl" -> "scoundrella76/comit"
"hmpl-language/hmpl" -> "melihsoft/adamant"
"hmpl-language/hmpl" -> "lee-sihun/djmax-keyviewer"
"hmpl-language/hmpl" -> "kingkej/ExtraLottie"
"hmpl-language/hmpl" -> "Vorolski/pump-fun-ultimate"
"hmpl-language/hmpl" -> "IreneBarnard/crypto-playground"
"hmpl-language/hmpl" -> "globalonex/Matrix"
"hmpl-language/hmpl" -> "Dze237/Gospecia-VPN-Website"
"hmpl-language/hmpl" -> "Burka111/Burka111"
"hmpl-language/hmpl" -> "RichartDedekind/NollarsVPN"
"hmpl-language/hmpl" -> "Trylz/RestirFalcor"
"hinthornw/trustcall" -> "langchain-ai/langgraph-supervisor-py"
"hinthornw/trustcall" -> "langchain-ai/langmem"
"hinthornw/trustcall" -> "langchain-ai/langgraph-swarm-py"
"hinthornw/trustcall" -> "langchain-ai/langgraph-bigtool"
"hinthornw/trustcall" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"hinthornw/trustcall" -> "langchain-ai/openevals"
"hinthornw/trustcall" -> "langchain-ai/langgraph-codeact"
"hinthornw/trustcall" -> "langchain-ai/memory-template"
"hinthornw/trustcall" -> "langchain-ai/langchain-mcp-adapters"
"hinthornw/trustcall" -> "langchain-ai/agent-inbox"
"hinthornw/trustcall" -> "JoshuaC215/agent-service-toolkit"
"hinthornw/trustcall" -> "langchain-ai/agentevals"
"hinthornw/trustcall" -> "langchain-ai/react-agent"
"hinthornw/trustcall" -> "langchain-ai/lang-memgpt"
"hinthornw/trustcall" -> "langchain-ai/langgraph-example"
"Coding-Crashkurse/GraphRAG-with-Llama-3.1" -> "whitew1994WW/GraphRAG"
"Coding-Crashkurse/GraphRAG-with-Llama-3.1" -> "Coding-Crashkurse/LangGraph-Udemy-Course"
"von-development/awesome-LangGraph" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"von-development/awesome-LangGraph" -> "zamalali/DeepGit"
"von-development/awesome-LangGraph" -> "neural-maze/ava-whatsapp-agent-course"
"von-development/awesome-LangGraph" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"von-development/awesome-LangGraph" -> "langchain-ai/agent-chat-ui"
"von-development/awesome-LangGraph" -> "langchain-ai/langgraph-supervisor-py"
"von-development/awesome-LangGraph" -> "langchain-ai/langgraph-codeact"
"von-development/awesome-LangGraph" -> "Deluxer/oliva"
"von-development/awesome-LangGraph" -> "souvikmajumder26/Multi-Agent-Medical-Assistant"
"von-development/awesome-LangGraph" -> "langchain-ai/langgraph-swarm-py"
"von-development/awesome-LangGraph" -> "mcp-use/mcp-use"
"von-development/awesome-LangGraph" -> "starpig1129/DATAGEN"
"von-development/awesome-LangGraph" -> "langchain-ai/agent-inbox"
"von-development/awesome-LangGraph" -> "langchain-ai/openevals"
"von-development/awesome-LangGraph" -> "CopilotKit/open-multi-agent-canvas"
"swarmzero/swarmzero" -> "dynamiq-ai/dynamiq"
"swarmzero/swarmzero" -> "swarmzero/examples"
"InternLM/MindSearch" -> "InternLM/lagent" ["e"=1]
"InternLM/MindSearch" -> "ItzCrazyKns/Perplexica"
"InternLM/MindSearch" -> "TeamWiseFlow/wiseflow"
"InternLM/MindSearch" -> "QwenLM/Qwen-Agent"
"InternLM/MindSearch" -> "adithya-s-k/omniparse"
"InternLM/MindSearch" -> "opendatalab/PDF-Extract-Kit"
"InternLM/MindSearch" -> "microsoft/graphrag"
"InternLM/MindSearch" -> "InternLM/lmdeploy" ["e"=1]
"InternLM/MindSearch" -> "CosmosShadow/gptpdf"
"InternLM/MindSearch" -> "mem0ai/mem0"
"InternLM/MindSearch" -> "miurla/morphic"
"InternLM/MindSearch" -> "InternLM/InternLM" ["e"=1]
"InternLM/MindSearch" -> "InternLM/xtuner" ["e"=1]
"InternLM/MindSearch" -> "netease-youdao/QAnything"
"InternLM/MindSearch" -> "leptonai/search_with_lepton"
"togethercomputer/MoA" -> "lm-sys/RouteLLM"
"togethercomputer/MoA" -> "skapadia3214/groq-moa"
"togethercomputer/MoA" -> "Doriandarko/maestro"
"togethercomputer/MoA" -> "jgravelle/AutoGroq"
"togethercomputer/MoA" -> "developersdigest/llm-answer-engine"
"togethercomputer/MoA" -> "MervinPraison/PraisonAI"
"togethercomputer/MoA" -> "zou-group/textgrad"
"togethercomputer/MoA" -> "run-llama/llama_deploy"
"togethercomputer/MoA" -> "win4r/MoA" ["e"=1]
"togethercomputer/MoA" -> "entropy-research/Devon"
"togethercomputer/MoA" -> "AgentOps-AI/agentops"
"togethercomputer/MoA" -> "arcee-ai/mergekit" ["e"=1]
"togethercomputer/MoA" -> "Doriandarko/claude-engineer"
"togethercomputer/MoA" -> "ShengranHu/ADAS"
"togethercomputer/MoA" -> "VRSEN/agency-swarm"
"human-substrate/Substrate" -> "danielmiessler/Telos"
"human-substrate/Substrate" -> "danielmiessler/Daemon"
"human-substrate/Substrate" -> "disler/personal-ai-starter-pack"
"human-substrate/Substrate" -> "danielmiessler/Frames"
"danielmiessler/Telos" -> "danielmiessler/Daemon"
"danielmiessler/Telos" -> "human-substrate/Substrate"
"danielmiessler/Daemon" -> "danielmiessler/Telos"
"BuilderIO/micro-agent" -> "Doriandarko/maestro"
"BuilderIO/micro-agent" -> "entropy-research/Devon"
"BuilderIO/micro-agent" -> "Doriandarko/claude-engineer"
"BuilderIO/micro-agent" -> "MervinPraison/PraisonAI"
"BuilderIO/micro-agent" -> "e2b-dev/fragments"
"BuilderIO/micro-agent" -> "lavague-ai/LaVague"
"BuilderIO/micro-agent" -> "mishushakov/llm-scraper"
"BuilderIO/micro-agent" -> "frdel/agent-zero"
"BuilderIO/micro-agent" -> "OpenAutoCoder/Agentless" ["e"=1]
"BuilderIO/micro-agent" -> "browserbase/stagehand"
"BuilderIO/micro-agent" -> "SWE-agent/SWE-agent"
"BuilderIO/micro-agent" -> "eastlondoner/cursor-tools"
"BuilderIO/micro-agent" -> "lm-sys/RouteLLM"
"BuilderIO/micro-agent" -> "steel-dev/steel-browser"
"BuilderIO/micro-agent" -> "AutoCodeRoverSG/auto-code-rover"
"iruletheworldmo/strawberry" -> "elder-plinius/L1B3RT4S"
"iruletheworldmo/strawberry" -> "mckaywrigley/buildware-ai"
"iruletheworldmo/strawberry" -> "xjdr-alt/entropix" ["e"=1]
"iruletheworldmo/strawberry" -> "daveshap/Raspberry"
"iruletheworldmo/strawberry" -> "Doriandarko/claude-engineer"
"iruletheworldmo/strawberry" -> "BASI-LABS/parseltongue" ["e"=1]
"iruletheworldmo/strawberry" -> "anysphere/priompt"
"iruletheworldmo/strawberry" -> "mckaywrigley/mckays-app-template"
"iruletheworldmo/strawberry" -> "NousResearch/DisTrO" ["e"=1]
"iruletheworldmo/strawberry" -> "turing-machines/mentals-ai" ["e"=1]
"iruletheworldmo/strawberry" -> "NeoVertex1/SuperPrompt"
"iruletheworldmo/strawberry" -> "daveshap/Claude_Sentience"
"iruletheworldmo/strawberry" -> "entropy-research/Devon"
"iruletheworldmo/strawberry" -> "open-thought/system-2-research" ["e"=1]
"iruletheworldmo/strawberry" -> "Doriandarko/maestro"
"QiuYannnn/Local-File-Organizer" -> "iyaja/llama-fs"
"QiuYannnn/Local-File-Organizer" -> "gptme/gptme"
"QiuYannnn/Local-File-Organizer" -> "ucbepic/docetl"
"QiuYannnn/Local-File-Organizer" -> "lamm-mit/PDF2Audio"
"QiuYannnn/Local-File-Organizer" -> "NexaAI/nexa-sdk" ["e"=1]
"QiuYannnn/Local-File-Organizer" -> "ozgrozer/ai-renamer"
"QiuYannnn/Local-File-Organizer" -> "souzatharsis/podcastfy"
"QiuYannnn/Local-File-Organizer" -> "codelion/optillm"
"QiuYannnn/Local-File-Organizer" -> "AIxHunter/FileWizardAI" ["e"=1]
"QiuYannnn/Local-File-Organizer" -> "MODSetter/SurfSense"
"QiuYannnn/Local-File-Organizer" -> "anysphere/priompt"
"QiuYannnn/Local-File-Organizer" -> "thepersonalaicompany/amurex"
"QiuYannnn/Local-File-Organizer" -> "different-ai/note-companion" ["e"=1]
"QiuYannnn/Local-File-Organizer" -> "Doriandarko/o1-engineer"
"QiuYannnn/Local-File-Organizer" -> "ragapp/ragapp"
"Kiln-AI/Kiln" -> "ConardLi/easy-dataset"
"Kiln-AI/Kiln" -> "zilliztech/deep-searcher"
"Kiln-AI/Kiln" -> "kvcache-ai/ktransformers" ["e"=1]
"Kiln-AI/Kiln" -> "OpenSPG/KAG"
"Kiln-AI/Kiln" -> "TheBlewish/Automated-AI-Web-Researcher-Ollama"
"Kiln-AI/Kiln" -> "codelion/optillm"
"Kiln-AI/Kiln" -> "av/harbor" ["e"=1]
"Kiln-AI/Kiln" -> "getAsterisk/deepclaude"
"Kiln-AI/Kiln" -> "bytedance/UI-TARS-desktop"
"Kiln-AI/Kiln" -> "TeamWiseFlow/wiseflow"
"Kiln-AI/Kiln" -> "microsoft/PIKE-RAG"
"Kiln-AI/Kiln" -> "unslothai/unsloth"
"Kiln-AI/Kiln" -> "PySpur-Dev/pyspur"
"Kiln-AI/Kiln" -> "svcvit/Awesome-Dify-Workflow"
"Kiln-AI/Kiln" -> "refly-ai/refly"
"katanemo/archgw" -> "BrainBlend-AI/atomic-agents"
"katanemo/archgw" -> "NPC-Worldwide/npcpy" ["e"=1]
"katanemo/archgw" -> "morphik-org/morphik-core"
"katanemo/archgw" -> "codelion/optillm"
"katanemo/archgw" -> "MODSetter/SurfSense"
"katanemo/archgw" -> "SciPhi-AI/R2R"
"katanemo/archgw" -> "snagasuri/deebo-prototype" ["e"=1]
"katanemo/archgw" -> "chonkie-ai/chonkie"
"katanemo/archgw" -> "steel-dev/steel-browser"
"katanemo/archgw" -> "oraios/serena" ["e"=1]
"katanemo/archgw" -> "BoundaryML/baml"
"katanemo/archgw" -> "SecretiveShell/MCP-Bridge" ["e"=1]
"katanemo/archgw" -> "openlit/openlit"
"katanemo/archgw" -> "TheBlewish/Automated-AI-Web-Researcher-Ollama"
"katanemo/archgw" -> "BragAI/bRAG-langchain"
"block/goose" -> "browserbase/stagehand"
"block/goose" -> "cline/cline"
"block/goose" -> "Aider-AI/aider"
"block/goose" -> "agno-agi/agno"
"block/goose" -> "yamadashy/repomix"
"block/goose" -> "multimodal-art-projection/YuE" ["e"=1]
"block/goose" -> "zaidmukaddam/scira"
"block/goose" -> "mendableai/firecrawl"
"block/goose" -> "browser-use/browser-use"
"block/goose" -> "pydantic/pydantic-ai"
"block/goose" -> "RooVetGit/Roo-Code"
"block/goose" -> "assafelovic/gpt-researcher"
"block/goose" -> "All-Hands-AI/OpenHands"
"block/goose" -> "onlook-dev/onlook" ["e"=1]
"block/goose" -> "microsoft/data-formulator"
"googleapis/python-genai" -> "google-gemini/deprecated-generative-ai-python"
"googleapis/python-genai" -> "google-gemini/starter-applets"
"googleapis/python-genai" -> "google-gemini/live-api-web-console"
"googleapis/python-genai" -> "google-gemini/cookbook"
"googleapis/python-genai" -> "anthropics/anthropic-sdk-python"
"googleapis/python-genai" -> "googleapis/python-aiplatform" ["e"=1]
"googleapis/python-genai" -> "google/adk-python"
"googleapis/python-genai" -> "google/adk-samples"
"googleapis/python-genai" -> "GoogleCloudPlatform/agent-starter-pack"
"googleapis/python-genai" -> "googleapis/genai-toolbox"
"googleapis/python-genai" -> "googleapis/js-genai"
"googleapis/python-genai" -> "AK391/ai-gradio"
"googleapis/python-genai" -> "pydantic/pydantic-ai"
"googleapis/python-genai" -> "google-gemini/deprecated-generative-ai-js"
"googleapis/python-genai" -> "google/generative-ai-docs"
"containers/ramalama" -> "bootc-dev/bootc" ["e"=1]
"containers/ramalama" -> "instructlab/instructlab"
"containers/ramalama" -> "containers/ai-lab-recipes"
"containers/ramalama" -> "openshift/microshift" ["e"=1]
"containers/ramalama" -> "instructlab/taxonomy"
"containers/ramalama" -> "containers/podman-desktop-extension-ai-lab"
"containers/ramalama" -> "ublue-os/bluefin" ["e"=1]
"containers/ramalama" -> "podman-desktop/podman-desktop" ["e"=1]
"containers/ramalama" -> "google/meridian" ["e"=1]
"containers/ramalama" -> "containers/toolbox" ["e"=1]
"containers/ramalama" -> "redhat-cop/agnosticd" ["e"=1]
"containers/ramalama" -> "RedHatDemos/SecurityDemos" ["e"=1]
"containers/ramalama" -> "osbuild/bootc-image-builder" ["e"=1]
"containers/ramalama" -> "karmab/kcli" ["e"=1]
"containers/ramalama" -> "rh-aiservices-bu/llm-on-openshift"
"langchain-ai/langchain-academy" -> "langchain-ai/langgraph-studio"
"langchain-ai/langchain-academy" -> "langchain-ai/langgraph-swarm-py"
"langchain-ai/langchain-academy" -> "langchain-ai/langgraph-supervisor-py"
"langchain-ai/langchain-academy" -> "langchain-ai/langgraph"
"langchain-ai/langchain-academy" -> "langchain-ai/langchain-mcp-adapters"
"langchain-ai/langchain-academy" -> "JoshuaC215/agent-service-toolkit"
"langchain-ai/langchain-academy" -> "hinthornw/trustcall"
"langchain-ai/langchain-academy" -> "von-development/awesome-LangGraph"
"langchain-ai/langchain-academy" -> "langchain-ai/open_deep_research"
"langchain-ai/langchain-academy" -> "langchain-ai/agent-chat-ui"
"langchain-ai/langchain-academy" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"langchain-ai/langchain-academy" -> "neural-maze/ava-whatsapp-agent-course"
"langchain-ai/langchain-academy" -> "langchain-ai/react-voice-agent" ["e"=1]
"langchain-ai/langchain-academy" -> "langchain-ai/langgraph-example"
"langchain-ai/langchain-academy" -> "langchain-ai/rag-from-scratch"
"Nutlope/picMenu" -> "Nutlope/description-generator"
"Nutlope/picMenu" -> "Nutlope/loras-dev"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/ai-sdk-preview-multi-steps"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/semantic-image-search"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/ai-sdk-preview-roundtrips"
"vercel-labs/ai-sdk-preview-rag" -> "vercel/ai-sdk-rag-starter"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/ai-sdk-preview-rsc-genui"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/ai-sdk-preview-use-object"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/ai-sdk-preview-attachments"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/natural-language-postgres"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/ai-sdk-preview-pdf-support"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/ai-sdk-reasoning-starter"
"vercel-labs/ai-sdk-preview-rag" -> "vercel-labs/ai-sdk-flags-edge-config"
"NVIDIA/nim-deploy" -> "NVIDIA/nim-anywhere"
"NVIDIA/nim-deploy" -> "deepset-ai/rag-with-nvidia-nims"
"JoshuaC215/agent-service-toolkit" -> "langchain-ai/open_deep_research"
"JoshuaC215/agent-service-toolkit" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"JoshuaC215/agent-service-toolkit" -> "langchain-ai/langgraph-studio"
"JoshuaC215/agent-service-toolkit" -> "langchain-ai/langgraph"
"JoshuaC215/agent-service-toolkit" -> "langchain-ai/langgraph-supervisor-py"
"JoshuaC215/agent-service-toolkit" -> "hinthornw/trustcall"
"JoshuaC215/agent-service-toolkit" -> "Canner/WrenAI"
"JoshuaC215/agent-service-toolkit" -> "langchain-ai/langchain-mcp-adapters"
"JoshuaC215/agent-service-toolkit" -> "von-development/awesome-LangGraph"
"JoshuaC215/agent-service-toolkit" -> "NirDiamant/GenAI_Agents"
"JoshuaC215/agent-service-toolkit" -> "fixie-ai/ultravox"
"JoshuaC215/agent-service-toolkit" -> "awslabs/agent-squad"
"JoshuaC215/agent-service-toolkit" -> "shiv248/Streamlit-x-LangGraph-Cookbooks"
"JoshuaC215/agent-service-toolkit" -> "pydantic/pydantic-ai"
"JoshuaC215/agent-service-toolkit" -> "BragAI/bRAG-langchain"
"google-gemini/gemma-cookbook" -> "google-deepmind/gemma" ["e"=1]
"google-gemini/gemma-cookbook" -> "google-gemini/cookbook"
"google-gemini/gemma-cookbook" -> "google-gemini/deprecated-generative-ai-python"
"google-gemini/gemma-cookbook" -> "google-gemini/starter-applets"
"google-gemini/gemma-cookbook" -> "google/generative-ai-docs"
"google-gemini/gemma-cookbook" -> "huggingface/local-gemma"
"google-gemini/gemma-cookbook" -> "google-gemini/example-chat-app"
"google-gemini/gemma-cookbook" -> "google-gemini/deprecated-generative-ai-js"
"google-gemini/gemma-cookbook" -> "googleapis/python-genai"
"google-gemini/gemma-cookbook" -> "GoogleCloudPlatform/generative-ai"
"google-gemini/gemma-cookbook" -> "keras-team/keras-hub" ["e"=1]
"google-gemini/gemma-cookbook" -> "GoogleCloudPlatform/vertex-ai-samples" ["e"=1]
"google-gemini/gemma-cookbook" -> "GoogleCloudPlatform/agent-starter-pack"
"google-gemini/gemma-cookbook" -> "GoogleCloudPlatform/genai-databases-retrieval-app" ["e"=1]
"google-gemini/gemma-cookbook" -> "GoogleCloudPlatform/applied-ai-engineering-samples" ["e"=1]
"bracesproul/gen-ui" -> "bracesproul/gen-ui-python"
"bracesproul/gen-ui" -> "bracesproul/langgraphjs-examples"
"TransformerOptimus/SuperCoder" -> "TransformerOptimus/AutoNode"
"TransformerOptimus/SuperCoder" -> "TransformerOptimus/Awesome-SuperAGI"
"TransformerOptimus/SuperCoder" -> "mikekelly/AgentK"
"TransformerOptimus/SuperCoder" -> "Doriandarko/omni-engineer"
"TransformerOptimus/SuperCoder" -> "semanser/codel"
"TransformerOptimus/SuperCoder" -> "StreetLamb/tribe"
"TransformerOptimus/SuperCoder" -> "AutoCodeRoverSG/auto-code-rover"
"TransformerOptimus/SuperCoder" -> "jgravelle/AutoGroq"
"TransformerOptimus/SuperCoder" -> "TransformerOptimus/SuperAGI" ["e"=1]
"TransformerOptimus/SuperCoder" -> "kyaukyuai/gpt-all-star"
"TransformerOptimus/SuperCoder" -> "entropy-research/Devon"
"TransformerOptimus/SuperCoder" -> "OpenAutoCoder/Agentless" ["e"=1]
"TransformerOptimus/SuperCoder" -> "Doriandarko/maestro"
"TransformerOptimus/SuperCoder" -> "TransformerOptimus/SuperAGI-Docs"
"TransformerOptimus/SuperCoder" -> "ntegrals/aura-voice"
"Nutlope/llamatutor" -> "Nutlope/turboseek"
"Nutlope/llamatutor" -> "Nutlope/llamacoder"
"Nutlope/llamatutor" -> "Nutlope/napkins"
"Nutlope/llamatutor" -> "Nutlope/pdftochat"
"Nutlope/llamatutor" -> "Nutlope/explorecareers"
"Nutlope/llamatutor" -> "Nutlope/notesGPT"
"Nutlope/llamatutor" -> "bklieger-groq/stockbot-on-groq"
"Nutlope/llamatutor" -> "harry0703/AudioNotes" ["e"=1]
"Nutlope/llamatutor" -> "InternLM/MindSearch"
"Nutlope/llamatutor" -> "memfreeme/memfree"
"Nutlope/llamatutor" -> "Nutlope/description-generator"
"Nutlope/llamatutor" -> "supermemoryai/opensearch-ai"
"Nutlope/llamatutor" -> "gabrielchua/open-notebooklm"
"Nutlope/llamatutor" -> "mikekelly/AgentK"
"Nutlope/llamatutor" -> "Nutlope/logocreator" ["e"=1]
"raznem/parsera" -> "itsOwen/CyberScraper-2077"
"raznem/parsera" -> "SomeOddCodeGuy/WilmerAI" ["e"=1]
"raznem/parsera" -> "jjleng/sensei"
"raznem/parsera" -> "YassKhazzan/openperplex_backend_os"
"raznem/parsera" -> "memfreeme/memfree"
"raznem/parsera" -> "steel-dev/steel-browser"
"raznem/parsera" -> "MODSetter/SurfSense"
"raznem/parsera" -> "clemlesne/scrape-it-now"
"raznem/parsera" -> "KruxAI/ragbuilder"
"raznem/parsera" -> "av/harbor" ["e"=1]
"raznem/parsera" -> "ucbepic/docetl"
"raznem/parsera" -> "rmusser01/tldw" ["e"=1]
"raznem/parsera" -> "qx-labs/agents-deep-research" ["e"=1]
"raznem/parsera" -> "postgresml/korvus"
"raznem/parsera" -> "weavel-ai/Ape" ["e"=1]
"itsOwen/CyberScraper-2077" -> "kkangert/kspider" ["e"=1]
"itsOwen/CyberScraper-2077" -> "memfreeme/memfree"
"itsOwen/CyberScraper-2077" -> "harry0703/AudioNotes" ["e"=1]
"itsOwen/CyberScraper-2077" -> "jbilcke-hf/clapper" ["e"=1]
"itsOwen/CyberScraper-2077" -> "wechat-article/wechat-article-exporter" ["e"=1]
"itsOwen/CyberScraper-2077" -> "zhulu111/ComfyUI_Bxb" ["e"=1]
"itsOwen/CyberScraper-2077" -> "supabase-community/babelfish.ai"
"itsOwen/CyberScraper-2077" -> "TeamWiseFlow/wiseflow"
"itsOwen/CyberScraper-2077" -> "ViggoZ/producthunt-daily-hot" ["e"=1]
"itsOwen/CyberScraper-2077" -> "wan-h/awesome-digital-human-live2d" ["e"=1]
"itsOwen/CyberScraper-2077" -> "apify/crawlee-python"
"itsOwen/CyberScraper-2077" -> "mishushakov/llm-scraper"
"itsOwen/CyberScraper-2077" -> "cs-lazy-tools/ChatGPT-On-CS" ["e"=1]
"itsOwen/CyberScraper-2077" -> "InternLM/MindSearch"
"itsOwen/CyberScraper-2077" -> "raznem/parsera"
"lmnr-ai/lmnr" -> "lmnr-ai/index"
"lmnr-ai/lmnr" -> "steel-dev/steel-browser"
"lmnr-ai/lmnr" -> "Helicone/helicone"
"lmnr-ai/lmnr" -> "panoratech/Panora" ["e"=1]
"lmnr-ai/lmnr" -> "freestyle-sh/cloudstate" ["e"=1]
"lmnr-ai/lmnr" -> "FrigadeHQ/trench" ["e"=1]
"lmnr-ai/lmnr" -> "Storia-AI/sage"
"lmnr-ai/lmnr" -> "devflowinc/trieve" ["e"=1]
"lmnr-ai/lmnr" -> "ssoready/ssoready" ["e"=1]
"lmnr-ai/lmnr" -> "stack-auth/stack-auth" ["e"=1]
"lmnr-ai/lmnr" -> "openlit/openlit"
"lmnr-ai/lmnr" -> "reworkd/tarsier"
"lmnr-ai/lmnr" -> "langwatch/langwatch"
"lmnr-ai/lmnr" -> "browserbase/stagehand"
"lmnr-ai/lmnr" -> "pretzelai/pretzelai" ["e"=1]
"meltylabs/melty" -> "feizc/FluxMusic" ["e"=1]
"meltylabs/melty" -> "anthropics/anthropic-quickstarts"
"meltylabs/melty" -> "voideditor/void"
"meltylabs/melty" -> "raidendotai/cofounder"
"meltylabs/melty" -> "stackblitz/bolt.new"
"meltylabs/melty" -> "langchain-ai/open-canvas"
"meltylabs/melty" -> "Doriandarko/claude-engineer"
"meltylabs/melty" -> "Cinnamon/kotaemon"
"meltylabs/melty" -> "Doriandarko/o1-engineer"
"meltylabs/melty" -> "mediar-ai/screenpipe"
"meltylabs/melty" -> "frdel/agent-zero"
"meltylabs/melty" -> "e2b-dev/fragments"
"meltylabs/melty" -> "InternLM/MindSearch"
"meltylabs/melty" -> "midday-ai/v1" ["e"=1]
"meltylabs/melty" -> "kyutai-labs/moshi" ["e"=1]
"udecode/dotai" -> "1mrat/cursor"
"udecode/dotai" -> "mckaywrigley/buildware-ai"
"udecode/dotai" -> "RayFernando1337/llm-cursor-rules"
"udecode/dotai" -> "s-smits/agentic-cursorrules"
"udecode/dotai" -> "mckaywrigley/mckays-app-template"
"udecode/dotai" -> "grp06/cursor-boost"
"udecode/dotai" -> "anysphere/priompt"
"udecode/dotai" -> "midday-ai/v1" ["e"=1]
"udecode/dotai" -> "eastlondoner/cursor-tools"
"udecode/dotai" -> "Codehagen/propdock" ["e"=1]
"udecode/dotai" -> "Doriandarko/omni-engineer"
"udecode/dotai" -> "RayFernando1337/MLX-Auto-Subtitled-Video-Generator" ["e"=1]
"udecode/dotai" -> "virattt/financial-agent-ui"
"udecode/dotai" -> "Doriandarko/RAT-retrieval-augmented-thinking"
"udecode/dotai" -> "pontusab/directories"
"Azzedde/brainstormers" -> "Azzedde/paper_to_podcast"
"Azzedde/brainstormers" -> "denser-org/denser-chat"
"Azzedde/brainstormers" -> "cnunescoelho/kiroku"
"chonkie-ai/chonkie" -> "circlemind-ai/fast-graphrag"
"chonkie-ai/chonkie" -> "D-Star-AI/dsRAG"
"chonkie-ai/chonkie" -> "MinishLab/model2vec"
"chonkie-ai/chonkie" -> "superlinear-ai/raglite"
"chonkie-ai/chonkie" -> "Filimoa/open-parse"
"chonkie-ai/chonkie" -> "SylphAI-Inc/AdalFlow"
"chonkie-ai/chonkie" -> "SciPhi-AI/R2R"
"chonkie-ai/chonkie" -> "gusye1234/nano-graphrag"
"chonkie-ai/chonkie" -> "MinishLab/semhash"
"chonkie-ai/chonkie" -> "Marker-Inc-Korea/AutoRAG"
"chonkie-ai/chonkie" -> "chonkie-inc/chonkie"
"chonkie-ai/chonkie" -> "KruxAI/ragbuilder"
"chonkie-ai/chonkie" -> "tjmlabs/ColiVara"
"chonkie-ai/chonkie" -> "AnswerDotAI/RAGatouille"
"chonkie-ai/chonkie" -> "pydantic/pydantic-ai"
"langchain-ai/open_deep_research" -> "langchain-ai/local-deep-researcher"
"langchain-ai/open_deep_research" -> "jina-ai/node-DeepResearch"
"langchain-ai/open_deep_research" -> "nickscamara/open-deep-research"
"langchain-ai/open_deep_research" -> "btahir/open-deep-research"
"langchain-ai/open_deep_research" -> "mshumer/OpenDeepResearcher"
"langchain-ai/open_deep_research" -> "zilliztech/deep-searcher"
"langchain-ai/open_deep_research" -> "langchain-ai/langchain-mcp-adapters"
"langchain-ai/open_deep_research" -> "dzhng/deep-research"
"langchain-ai/open_deep_research" -> "langchain-ai/open-canvas"
"langchain-ai/open_deep_research" -> "JoshuaC215/agent-service-toolkit"
"langchain-ai/open_deep_research" -> "assafelovic/gpt-researcher"
"langchain-ai/open_deep_research" -> "langchain-ai/langgraph-supervisor-py"
"langchain-ai/open_deep_research" -> "microsoft/RD-Agent"
"langchain-ai/open_deep_research" -> "microsoft/PIKE-RAG"
"langchain-ai/open_deep_research" -> "langmanus/langmanus"
"labmlai/inspectus" -> "harvard-lil/warc-gpt"
"labmlai/inspectus" -> "alishobeiri/thread"
"labmlai/inspectus" -> "PaulPauls/llama3_interpretability_sae" ["e"=1]
"labmlai/inspectus" -> "rentruewang/bocoel"
"labmlai/inspectus" -> "mattneary/attention"
"opendatahub-io/ilab-on-ocp" -> "opendatahub-io/llama-stack-demos"
"microsoft/PromptWizard" -> "OpenSPG/KAG"
"microsoft/PromptWizard" -> "MervinPraison/PraisonAI"
"microsoft/PromptWizard" -> "microsoft/RD-Agent"
"microsoft/PromptWizard" -> "kyegomez/swarms"
"microsoft/PromptWizard" -> "Zipstack/unstract"
"microsoft/PromptWizard" -> "pydantic/pydantic-ai"
"microsoft/PromptWizard" -> "QwenLM/Qwen-Agent"
"microsoft/PromptWizard" -> "microsoft/data-formulator"
"microsoft/PromptWizard" -> "awslabs/agent-squad"
"microsoft/PromptWizard" -> "web-infra-dev/midscene"
"microsoft/PromptWizard" -> "microsoft/PIKE-RAG"
"microsoft/PromptWizard" -> "Canner/WrenAI"
"microsoft/PromptWizard" -> "microsoft/TinyTroupe"
"microsoft/PromptWizard" -> "QuivrHQ/MegaParse"
"microsoft/PromptWizard" -> "HKUDS/AutoAgent"
"NVIDIA/nv-ingest" -> "NVIDIA-AI-Blueprints/multimodal-pdf-data-extraction"
"NVIDIA/nv-ingest" -> "microsoft/PromptWizard"
"NVIDIA/nv-ingest" -> "fixie-ai/ultravox"
"NVIDIA/nv-ingest" -> "QuivrHQ/MegaParse"
"NVIDIA/nv-ingest" -> "OpenSPG/KAG"
"NVIDIA/nv-ingest" -> "Zipstack/unstract"
"NVIDIA/nv-ingest" -> "Canner/WrenAI"
"NVIDIA/nv-ingest" -> "lumina-ai-inc/chunkr"
"NVIDIA/nv-ingest" -> "JoshuaC215/agent-service-toolkit"
"NVIDIA/nv-ingest" -> "pydantic/pydantic-ai"
"NVIDIA/nv-ingest" -> "zaidmukaddam/scira"
"NVIDIA/nv-ingest" -> "CatchTheTornado/text-extract-api"
"NVIDIA/nv-ingest" -> "enoch3712/ExtractThinker"
"NVIDIA/nv-ingest" -> "microsoft/TinyTroupe"
"NVIDIA/nv-ingest" -> "getomni-ai/zerox"
"run-llama/llama_deploy" -> "run-llama/create-llama"
"run-llama/llama_deploy" -> "run-llama/llama_cloud_services"
"run-llama/llama_deploy" -> "kingjulio8238/Memary"
"run-llama/llama_deploy" -> "ragapp/ragapp"
"run-llama/llama_deploy" -> "run-llama/multi-agent-concierge"
"run-llama/llama_deploy" -> "lm-sys/RouteLLM"
"run-llama/llama_deploy" -> "SylphAI-Inc/AdalFlow"
"run-llama/llama_deploy" -> "langchain-ai/langgraph-studio"
"run-llama/llama_deploy" -> "KruxAI/ragbuilder"
"run-llama/llama_deploy" -> "MervinPraison/PraisonAI"
"run-llama/llama_deploy" -> "togethercomputer/MoA"
"run-llama/llama_deploy" -> "langroid/langroid"
"run-llama/llama_deploy" -> "StreetLamb/tribe"
"run-llama/llama_deploy" -> "SciPhi-AI/R2R"
"run-llama/llama_deploy" -> "truefoundry/cognita"
"i-am-bee/beeai-framework" -> "i-am-bee/beeai-platform"
"i-am-bee/beeai-framework" -> "i-am-bee/acp"
"i-am-bee/beeai-framework" -> "i-am-bee/bee-stack"
"i-am-bee/beeai-framework" -> "i-am-bee/beeai-framework-ts-starter"
"i-am-bee/beeai-framework" -> "instructlab/instructlab"
"i-am-bee/beeai-framework" -> "awslabs/agent-squad"
"i-am-bee/beeai-framework" -> "i-am-bee/bee-ui"
"i-am-bee/beeai-framework" -> "pydantic/pydantic-ai"
"i-am-bee/beeai-framework" -> "meta-llama/llama-stack"
"i-am-bee/beeai-framework" -> "MervinPraison/PraisonAI"
"i-am-bee/beeai-framework" -> "QuivrHQ/MegaParse"
"i-am-bee/beeai-framework" -> "langchain-ai/open-canvas"
"i-am-bee/beeai-framework" -> "HKUDS/AutoAgent"
"i-am-bee/beeai-framework" -> "data-prep-kit/data-prep-kit"
"i-am-bee/beeai-framework" -> "SylphAI-Inc/AdalFlow"
"taishikato/chatsage" -> "supavec/supavec"
"yobix-ai/extractous" -> "sinaptik-ai/panda-etl"
"yobix-ai/extractous" -> "AnswerDotAI/byaldi"
"yobix-ai/extractous" -> "chonkie-ai/chonkie"
"yobix-ai/extractous" -> "D-Star-AI/dsRAG"
"yobix-ai/extractous" -> "nlmatics/nlm-ingestor"
"yobix-ai/extractous" -> "thmsmlr/instructor_ex" ["e"=1]
"yobix-ai/extractous" -> "harishdeivanayagam/rowfill"
"yobix-ai/extractous" -> "gcui-art/markdown-to-image" ["e"=1]
"yobix-ai/extractous" -> "echohive42/AI-reads-books-page-by-page"
"yobix-ai/extractous" -> "CatchTheTornado/text-extract-api"
"yobix-ai/extractous" -> "mathieuprog/polymorphic_embed" ["e"=1]
"yobix-ai/extractous" -> "pingcap/autoflow"
"yobix-ai/extractous" -> "adobe/elixir-styler" ["e"=1]
"yobix-ai/extractous" -> "brainlid/langchain" ["e"=1]
"yobix-ai/extractous" -> "nlmatics/llmsherpa"
"YassKhazzan/openperplex_backend_os" -> "YassKhazzan/openperplex_front"
"YassKhazzan/openperplex_backend_os" -> "Doriandarko/omni-engineer"
"YassKhazzan/openperplex_backend_os" -> "cnunescoelho/kiroku"
"YassKhazzan/openperplex_backend_os" -> "supermemoryai/opensearch-ai"
"YassKhazzan/openperplex_backend_os" -> "KruxAI/ragbuilder"
"YassKhazzan/openperplex_backend_os" -> "character-ai/prompt-poet"
"YassKhazzan/openperplex_backend_os" -> "FutureClubNL/RAGMeUp"
"YassKhazzan/openperplex_backend_os" -> "mikekelly/AgentK"
"YassKhazzan/openperplex_backend_os" -> "starpig1129/DATAGEN"
"YassKhazzan/openperplex_backend_os" -> "TheBlewish/Web-LLM-Assistant-Llamacpp-Ollama" ["e"=1]
"YassKhazzan/openperplex_backend_os" -> "jjleng/sensei"
"YassKhazzan/openperplex_backend_os" -> "Nutlope/turboseek"
"YassKhazzan/openperplex_backend_os" -> "Omniplex-ai/omniplex"
"YassKhazzan/openperplex_backend_os" -> "e2b-dev/code-interpreter"
"YassKhazzan/openperplex_backend_os" -> "e2b-dev/e2b-cookbook"
"langchain-ai/react-agent" -> "langchain-ai/rag-research-agent-template"
"langchain-ai/react-agent" -> "langchain-ai/retrieval-agent-template"
"langchain-ai/react-agent" -> "langchain-ai/new-langgraph-project"
"langchain-ai/react-agent" -> "langchain-ai/langgraph-fullstack-python"
"langchain-ai/react-agent" -> "langchain-ai/data-enrichment"
"langchain-ai/react-agent" -> "langchain-ai/memory-template"
"DhruvAtreja/datavisualization_langgraph" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"DhruvAtreja/datavisualization_langgraph" -> "shaheryaryousaf/rag-voicebot"
"DhruvAtreja/datavisualization_langgraph" -> "shaunthecomputerscientist/EDA-GPT"
"DhruvAtreja/datavisualization_langgraph" -> "agdev/Langgraph"
"DhruvAtreja/datavisualization_langgraph" -> "langchain-ai/task_mAIstro"
"ozgrozer/chatgpt-artifacts" -> "sullyo/prompt2ui"
"ozgrozer/chatgpt-artifacts" -> "Doriandarko/gemini-ui-to-code"
"ozgrozer/chatgpt-artifacts" -> "13point5/open-artifacts"
"ozgrozer/chatgpt-artifacts" -> "MichaelYuhe/Artifacts-for-ChatGPT"
"ozgrozer/chatgpt-artifacts" -> "ykyritsis/ChatGPT-code-preview"
"ozgrozer/chatgpt-artifacts" -> "kturung/langgraph_streamlit_codeassistant"
"ozgrozer/chatgpt-artifacts" -> "pipecat-ai/rtvi-web-demo"
"ozgrozer/chatgpt-artifacts" -> "e2b-dev/e2b-cookbook"
"ozgrozer/chatgpt-artifacts" -> "SawyerHood/tlbrowse"
"ozgrozer/chatgpt-artifacts" -> "alexfazio/viral-clips-crew" ["e"=1]
"ozgrozer/chatgpt-artifacts" -> "theyashwanthsai/Devyan" ["e"=1]
"elizaOS/agent-twitter-client" -> "elizaOS/twitter-scraper-finetune" ["e"=1]
"elizaOS/agent-twitter-client" -> "the-convocation/twitter-scraper" ["e"=1]
"elizaOS/agent-twitter-client" -> "elizaOS/characterfile" ["e"=1]
"elizaOS/agent-twitter-client" -> "egoist/sitefetch"
"elizaOS/agent-twitter-client" -> "elizaOS/agentmemory" ["e"=1]
"elizaOS/agent-twitter-client" -> "elizaOS/eliza"
"elizaOS/agent-twitter-client" -> "echohive42/AI-reads-books-page-by-page"
"elizaOS/agent-twitter-client" -> "video-db/Director"
"elizaOS/agent-twitter-client" -> "blorm-network/ZerePy" ["e"=1]
"elizaOS/agent-twitter-client" -> "David-patrick-chuks/Instagram-AI-Agent"
"elizaOS/agent-twitter-client" -> "kyegomez/swarms"
"elizaOS/agent-twitter-client" -> "Nutlope/logocreator" ["e"=1]
"elizaOS/agent-twitter-client" -> "eastlondoner/cursor-tools"
"elizaOS/agent-twitter-client" -> "steel-dev/steel-browser"
"elizaOS/agent-twitter-client" -> "elizaOS/eliza-starter" ["e"=1]
"eyelevelai/groundx-on-prem" -> "tjmlabs/ColiVara"
"eyelevelai/groundx-on-prem" -> "dynamiq-ai/dynamiq"
"eyelevelai/groundx-on-prem" -> "superlinear-ai/raglite"
"eyelevelai/groundx-on-prem" -> "langwatch/langwatch"
"eyelevelai/groundx-on-prem" -> "multinear-demo/demo-bank-support-lc-py"
"eyelevelai/groundx-on-prem" -> "superagent-ai/reag"
"eyelevelai/groundx-on-prem" -> "ucbepic/docetl"
"eyelevelai/groundx-on-prem" -> "AgentOps-AI/AgentStack"
"eyelevelai/groundx-on-prem" -> "Softlandia-Ltd/vision-is-all-you-need"
"eyelevelai/groundx-on-prem" -> "developersdigest/llm-api-engine"
"eyelevelai/groundx-on-prem" -> "tom-doerr/dotfiles"
"eyelevelai/groundx-on-prem" -> "reflex-dev/reflex-llm-examples"
"eyelevelai/groundx-on-prem" -> "MinishLab/model2vec"
"eyelevelai/groundx-on-prem" -> "inferablehq/inferable"
"eyelevelai/groundx-on-prem" -> "BragAI/bRAG-langchain"
"NVIDIA-AI-Blueprints/multimodal-pdf-data-extraction" -> "NVIDIA/nv-ingest"
"NVIDIA-AI-Blueprints/multimodal-pdf-data-extraction" -> "kturung/colpali-llama-vision-rag"
"NVIDIA-AI-Blueprints/multimodal-pdf-data-extraction" -> "NVIDIA-AI-Blueprints/digital-human"
"NVIDIA-AI-Blueprints/multimodal-pdf-data-extraction" -> "NVIDIA-AI-Blueprints/ai-virtual-assistant"
"NVIDIA-AI-Blueprints/multimodal-pdf-data-extraction" -> "NVIDIA-BioNeMo-blueprints/generative-virtual-screening"
"stair-lab/kg-gen" -> "microsoft/PIKE-RAG"
"stair-lab/kg-gen" -> "thiswillbeyourgithub/wdoc"
"stair-lab/kg-gen" -> "waetr/KET-RAG" ["e"=1]
"stair-lab/kg-gen" -> "Ji-Cather/GraphAgent" ["e"=1]
"stair-lab/kg-gen" -> "HKUDS/GraphAgent" ["e"=1]
"chiphuyen/aie-book" -> "chiphuyen/dmls-book" ["e"=1]
"chiphuyen/aie-book" -> "PacktPublishing/LLM-Engineers-Handbook"
"chiphuyen/aie-book" -> "patchy631/ai-engineering-hub"
"chiphuyen/aie-book" -> "SylphAI-Inc/LLM-engineer-handbook"
"chiphuyen/aie-book" -> "NirDiamant/GenAI_Agents"
"chiphuyen/aie-book" -> "chiphuyen/ml-interviews-book" ["e"=1]
"chiphuyen/aie-book" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"chiphuyen/aie-book" -> "huggingface/smol-course"
"chiphuyen/aie-book" -> "SylphAI-Inc/AdalFlow"
"chiphuyen/aie-book" -> "NirDiamant/RAG_Techniques"
"chiphuyen/aie-book" -> "aishwaryanr/awesome-generative-ai-guide"
"chiphuyen/aie-book" -> "decodingml/llm-twin-course"
"chiphuyen/aie-book" -> "meta-llama/llama-stack"
"chiphuyen/aie-book" -> "anthropics/courses"
"chiphuyen/aie-book" -> "andrewyng/aisuite"
"AnswerDotAI/MonsterUI" -> "curtis-allan/Shad4Fasthtml"
"AnswerDotAI/MonsterUI" -> "AnswerDotAI/fastlite"
"AnswerDotAI/MonsterUI" -> "banditburai/daisyft"
"AnswerDotAI/MonsterUI" -> "banditburai/ft-datastar"
"AnswerDotAI/MonsterUI" -> "amosgyamfi/awesome-fasthtml"
"AnswerDotAI/MonsterUI" -> "CarloLepelaars/fh-plotly"
"sentient-engineering/jobber" -> "sentient-engineering/sentient"
"sentient-engineering/jobber" -> "sentient-engineering/multi-agent-fsm"
"sentient-engineering/jobber" -> "Dicklesworthstone/your-source-to-prompt.html"
"sentient-engineering/jobber" -> "sentient-engineering/agent-q"
"sentient-engineering/jobber" -> "nischalj10/local-recall"
"sentient-engineering/jobber" -> "feder-cr/resume_render_from_job_description" ["e"=1]
"sentient-engineering/jobber" -> "specstoryai/getspecstory"
"sentient-engineering/jobber" -> "xynehq/xyne"
"arkohut/pensieve" -> "yuka-friends/Windrecorder"
"arkohut/pensieve" -> "mediar-ai/screenpipe"
"arkohut/pensieve" -> "cosin2077/easyVoice" ["e"=1]
"arkohut/pensieve" -> "wisupai/e2m"
"arkohut/pensieve" -> "chclt/oh-my-wechat" ["e"=1]
"arkohut/pensieve" -> "jasonjmcghee/rem"
"arkohut/pensieve" -> "gcui-art/markdown-to-image" ["e"=1]
"PromtEngineer/localGPT-Vision" -> "AnswerDotAI/byaldi"
"PromtEngineer/localGPT-Vision" -> "adithya-s-k/VARAG"
"PromtEngineer/localGPT-Vision" -> "illuin-tech/colpali"
"PromtEngineer/localGPT-Vision" -> "PromtEngineer/Verbi"
"PromtEngineer/localGPT-Vision" -> "disler/poc-realtime-ai-assistant"
"PromtEngineer/localGPT-Vision" -> "disler/personal-ai-starter-pack"
"PromtEngineer/localGPT-Vision" -> "Farzad-R/Advanced-QA-and-RAG-Series"
"BrainBlend-AI/atomic-agents" -> "pydantic/pydantic-ai"
"BrainBlend-AI/atomic-agents" -> "567-labs/instructor"
"BrainBlend-AI/atomic-agents" -> "katanemo/archgw"
"BrainBlend-AI/atomic-agents" -> "langroid/langroid"
"BrainBlend-AI/atomic-agents" -> "SciPhi-AI/R2R"
"BrainBlend-AI/atomic-agents" -> "NirDiamant/GenAI_Agents"
"BrainBlend-AI/atomic-agents" -> "NirDiamant/RAG_Techniques"
"BrainBlend-AI/atomic-agents" -> "getzep/graphiti"
"BrainBlend-AI/atomic-agents" -> "agno-agi/agno"
"BrainBlend-AI/atomic-agents" -> "The-Pocket/PocketFlow"
"BrainBlend-AI/atomic-agents" -> "MervinPraison/PraisonAI"
"BrainBlend-AI/atomic-agents" -> "DAGWorks-Inc/burr"
"BrainBlend-AI/atomic-agents" -> "lastmile-ai/mcp-agent"
"BrainBlend-AI/atomic-agents" -> "letta-ai/letta"
"BrainBlend-AI/atomic-agents" -> "awslabs/agent-squad"
"athina-ai/rag-cookbooks" -> "BragAI/bRAG-langchain"
"athina-ai/rag-cookbooks" -> "NirDiamant/Controllable-RAG-Agent"
"athina-ai/rag-cookbooks" -> "KruxAI/ragbuilder"
"athina-ai/rag-cookbooks" -> "neural-maze/ava-whatsapp-agent-course"
"athina-ai/rag-cookbooks" -> "hrithikkoduri/WebRover"
"athina-ai/rag-cookbooks" -> "NirDiamant/RAG_Techniques"
"athina-ai/rag-cookbooks" -> "tjmlabs/ColiVara"
"athina-ai/rag-cookbooks" -> "chonkie-ai/chonkie"
"athina-ai/rag-cookbooks" -> "multinear-demo/demo-bank-support-lc-py"
"athina-ai/rag-cookbooks" -> "Thytu/Agentarium"
"athina-ai/rag-cookbooks" -> "von-development/awesome-LangGraph"
"athina-ai/rag-cookbooks" -> "circlemind-ai/fast-graphrag"
"athina-ai/rag-cookbooks" -> "Andrew-Jang/RAGHub"
"athina-ai/rag-cookbooks" -> "pingcap/autoflow"
"athina-ai/rag-cookbooks" -> "langchain-ai/social-media-agent"
"mezbaul-h/june" -> "lhl/voicechat2"
"mezbaul-h/june" -> "KoljaB/LocalAIVoiceChat"
"mezbaul-h/june" -> "bigsk1/voice-chat-ai"
"mezbaul-h/june" -> "teknium1/Prompt-Engineering-Toolkit"
"mezbaul-h/june" -> "punnerud/Local_Knowledge_Graph"
"mezbaul-h/june" -> "vndee/local-talking-llm"
"lhl/voicechat2" -> "pipecat-ai/rtvi-web-demo"
"lhl/voicechat2" -> "KoljaB/LocalAIVoiceChat"
"lhl/voicechat2" -> "lalanikarim/webrtc-ai-voice-chat"
"lhl/voicechat2" -> "mezbaul-h/june"
"lhl/voicechat2" -> "CerebriumAI/examples"
"lhl/voicechat2" -> "daily-demos/daily-bots-web-demo"
"lhl/voicechat2" -> "Finity-Alpha/OpenVoiceChat"
"lhl/voicechat2" -> "bigsk1/voice-chat-ai"
"lhl/voicechat2" -> "eustlb/speech-to-speech"
"lhl/voicechat2" -> "lifeiteng/OmniSenseVoice" ["e"=1]
"lhl/voicechat2" -> "collabora/WhisperFusion" ["e"=1]
"lhl/voicechat2" -> "lenML/Speech-AI-Forge" ["e"=1]
"lhl/voicechat2" -> "gpt-omni/mini-omni" ["e"=1]
"mikekelly/AgentK" -> "Doriandarko/omni-engineer"
"mikekelly/AgentK" -> "sentient-engineering/agent-q"
"mikekelly/AgentK" -> "MLSysOps/MLE-agent"
"mikekelly/AgentK" -> "jgravelle/AutoGroq"
"mikekelly/AgentK" -> "frdel/agent-zero"
"mikekelly/AgentK" -> "supermemoryai/opensearch-ai"
"mikekelly/AgentK" -> "sentient-engineering/sentient"
"mikekelly/AgentK" -> "EmergenceAI/Agent-E"
"mikekelly/AgentK" -> "entropy-research/Devon"
"mikekelly/AgentK" -> "brainqub3/jar3d_meta_expert"
"mikekelly/AgentK" -> "InternLM/lagent" ["e"=1]
"mikekelly/AgentK" -> "Openmacro/openmacro"
"mikekelly/AgentK" -> "e2b-dev/fragments"
"mikekelly/AgentK" -> "OpenBMB/IoA"
"mikekelly/AgentK" -> "langchain-ai/langgraph-studio"
"qifi-dev/qrs" -> "sz3/libcimbar"
"qifi-dev/qrs" -> "sz3/cfc"
"qifi-dev/qrs" -> "unixzii/ibackupextractor" ["e"=1]
"qifi-dev/qrs" -> "kermanx/reactive-vscode" ["e"=1]
"qifi-dev/qrs" -> "antfu/qr-scanner-wechat" ["e"=1]
"qifi-dev/qrs" -> "USTC-Hackergame/hackergame2024-writeups" ["e"=1]
"qifi-dev/qrs" -> "ganlvtech/qrcode-file-transfer"
"qifi-dev/qrs" -> "vue-vine/vue-vine" ["e"=1]
"qifi-dev/qrs" -> "Lakr233/BBackupp" ["e"=1]
"qifi-dev/qrs" -> "vuejs/vue-vapor" ["e"=1]
"qifi-dev/qrs" -> "project-trans/RLE-wiki" ["e"=1]
"qifi-dev/qrs" -> "Lakr233/Asspp" ["e"=1]
"qifi-dev/qrs" -> "vue-terminal/vue-termui" ["e"=1]
"qifi-dev/qrs" -> "molvqingtai/WebChat" ["e"=1]
"qifi-dev/qrs" -> "nolebase/integrations" ["e"=1]
"qhjqhj00/MemoRAG" -> "gusye1234/nano-graphrag"
"qhjqhj00/MemoRAG" -> "RUC-NLPIR/FlashRAG"
"qhjqhj00/MemoRAG" -> "OSU-NLP-Group/HippoRAG"
"qhjqhj00/MemoRAG" -> "circlemind-ai/fast-graphrag"
"qhjqhj00/MemoRAG" -> "AkariAsai/self-rag"
"qhjqhj00/MemoRAG" -> "sunnynexus/Search-o1" ["e"=1]
"qhjqhj00/MemoRAG" -> "kingjulio8238/Memary"
"qhjqhj00/MemoRAG" -> "OpenBMB/VisRAG"
"qhjqhj00/MemoRAG" -> "D-Star-AI/dsRAG"
"qhjqhj00/MemoRAG" -> "FlagOpen/FlagEmbedding" ["e"=1]
"qhjqhj00/MemoRAG" -> "parthsarthi03/raptor"
"qhjqhj00/MemoRAG" -> "OpenSPG/KAG"
"qhjqhj00/MemoRAG" -> "amazon-science/RAGChecker"
"qhjqhj00/MemoRAG" -> "chonkie-ai/chonkie"
"qhjqhj00/MemoRAG" -> "pingcap/autoflow"
"Doriandarko/omni-engineer" -> "mikekelly/AgentK"
"Doriandarko/omni-engineer" -> "Doriandarko/o1-engineer"
"Doriandarko/omni-engineer" -> "Doriandarko/gemini-ui-to-code"
"Doriandarko/omni-engineer" -> "Doriandarko/maestro"
"Doriandarko/omni-engineer" -> "Doriandarko/claude-engineer"
"Doriandarko/omni-engineer" -> "Doriandarko/Insanely-Fast-Transcription"
"Doriandarko/omni-engineer" -> "Doriandarko/deepseek-engineer"
"Doriandarko/omni-engineer" -> "mckaywrigley/buildware-ai"
"Doriandarko/omni-engineer" -> "YassKhazzan/openperplex_backend_os"
"Doriandarko/omni-engineer" -> "supermemoryai/opensearch-ai"
"Doriandarko/omni-engineer" -> "jgravelle/AutoGroq"
"Doriandarko/omni-engineer" -> "udecode/dotai"
"Doriandarko/omni-engineer" -> "entropy-research/Devon"
"Doriandarko/omni-engineer" -> "e2b-dev/fragments"
"Doriandarko/omni-engineer" -> "sentient-engineering/agent-q"
"mendableai/firecrawl-mcp-server" -> "AgentDeskAI/browser-tools-mcp"
"mendableai/firecrawl-mcp-server" -> "executeautomation/mcp-playwright"
"mendableai/firecrawl-mcp-server" -> "21st-dev/magic-mcp"
"mendableai/firecrawl-mcp-server" -> "zcaceres/markdownify-mcp"
"mendableai/firecrawl-mcp-server" -> "browserbase/mcp-server-browserbase"
"mendableai/firecrawl-mcp-server" -> "appcypher/awesome-mcp-servers"
"mendableai/firecrawl-mcp-server" -> "supabase-community/supabase-mcp"
"mendableai/firecrawl-mcp-server" -> "nerding-io/n8n-nodes-mcp"
"mendableai/firecrawl-mcp-server" -> "lastmile-ai/mcp-agent"
"mendableai/firecrawl-mcp-server" -> "exa-labs/exa-mcp-server"
"mendableai/firecrawl-mcp-server" -> "mendableai/firecrawl"
"mendableai/firecrawl-mcp-server" -> "ppl-ai/modelcontextprotocol"
"mendableai/firecrawl-mcp-server" -> "jlowin/fastmcp"
"mendableai/firecrawl-mcp-server" -> "GLips/Figma-Context-MCP"
"mendableai/firecrawl-mcp-server" -> "modelcontextprotocol/inspector" ["e"=1]
"plurai-ai/intellagent" -> "emcie-co/parlant"
"plurai-ai/intellagent" -> "octotools/octotools"
"plurai-ai/intellagent" -> "Thytu/Agentarium"
"plurai-ai/intellagent" -> "NirDiamant/Controllable-RAG-Agent"
"plurai-ai/intellagent" -> "dynamiq-ai/dynamiq"
"plurai-ai/intellagent" -> "hrithikkoduri/WebRover"
"plurai-ai/intellagent" -> "KruxAI/ragbuilder"
"plurai-ai/intellagent" -> "tjmlabs/ColiVara"
"plurai-ai/intellagent" -> "DAGWorks-Inc/burr"
"plurai-ai/intellagent" -> "NVIDIA/AIQToolkit"
"plurai-ai/intellagent" -> "awslabs/agent-squad"
"plurai-ai/intellagent" -> "WujiangXu/AgenticMemory"
"plurai-ai/intellagent" -> "Eladlev/AutoPrompt"
"plurai-ai/intellagent" -> "character-ai/prompt-poet"
"plurai-ai/intellagent" -> "superagent-ai/reag"
"supabase-community/database-build" -> "electric-sql/pglite" ["e"=1]
"supabase-community/database-build" -> "midday-ai/v1" ["e"=1]
"supabase-community/database-build" -> "e2b-dev/fragments"
"supabase-community/database-build" -> "midday-ai/midday" ["e"=1]
"supabase-community/database-build" -> "miurla/morphic"
"supabase-community/database-build" -> "Nutlope/llamacoder"
"supabase-community/database-build" -> "stackblitz/bolt.new"
"supabase-community/database-build" -> "useplunk/plunk" ["e"=1]
"supabase-community/database-build" -> "langchain-ai/langgraph-studio"
"supabase-community/database-build" -> "Openpanel-dev/openpanel" ["e"=1]
"supabase-community/database-build" -> "electric-sql/electric" ["e"=1]
"supabase-community/database-build" -> "zaidmukaddam/scira"
"supabase-community/database-build" -> "MadcowD/ell"
"supabase-community/database-build" -> "haydenbleasel/next-forge" ["e"=1]
"supabase-community/database-build" -> "assistant-ui/assistant-ui"
"thepersonalaicompany/amurex" -> "thepersonalaicompany/amurex-backend"
"thepersonalaicompany/amurex" -> "rishikanthc/Scriberr" ["e"=1]
"thepersonalaicompany/amurex" -> "clusterzx/paperless-ai" ["e"=1]
"thepersonalaicompany/amurex" -> "jaypyles/Scraperr" ["e"=1]
"thepersonalaicompany/amurex" -> "Zackriya-Solutions/meeting-minutes"
"thepersonalaicompany/amurex" -> "MODSetter/SurfSense"
"thepersonalaicompany/amurex" -> "fastrepl/hyprnote"
"thepersonalaicompany/amurex" -> "TheBlewish/Automated-AI-Web-Researcher-Ollama"
"thepersonalaicompany/amurex" -> "signerlabs/Klee" ["e"=1]
"thepersonalaicompany/amurex" -> "steel-dev/steel-browser"
"thepersonalaicompany/amurex" -> "av/harbor" ["e"=1]
"thepersonalaicompany/amurex" -> "daya0576/beaverhabits" ["e"=1]
"thepersonalaicompany/amurex" -> "crocodilestick/Calibre-Web-Automated" ["e"=1]
"thepersonalaicompany/amurex" -> "lfnovo/open-notebook"
"thepersonalaicompany/amurex" -> "katanemo/archgw"
"SylphAI-Inc/LLM-engineer-handbook" -> "PacktPublishing/LLM-Engineers-Handbook"
"SylphAI-Inc/LLM-engineer-handbook" -> "SylphAI-Inc/AdalFlow"
"SylphAI-Inc/LLM-engineer-handbook" -> "decodingml/llm-twin-course"
"SylphAI-Inc/LLM-engineer-handbook" -> "callmesora/llmops-python-package"
"SylphAI-Inc/LLM-engineer-handbook" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"SylphAI-Inc/LLM-engineer-handbook" -> "huggingface/smol-course"
"SylphAI-Inc/LLM-engineer-handbook" -> "fmind/mlops-python-package"
"SylphAI-Inc/LLM-engineer-handbook" -> "DataExpert-io/llm-driven-data-engineering" ["e"=1]
"SylphAI-Inc/LLM-engineer-handbook" -> "mongodb-developer/GenAI-Showcase"
"SylphAI-Inc/LLM-engineer-handbook" -> "chiphuyen/aie-book"
"SylphAI-Inc/LLM-engineer-handbook" -> "NirDiamant/GenAI_Agents"
"SylphAI-Inc/LLM-engineer-handbook" -> "mlabonne/llm-datasets"
"SylphAI-Inc/LLM-engineer-handbook" -> "iusztinpaul/hands-on-llms" ["e"=1]
"SylphAI-Inc/LLM-engineer-handbook" -> "aishwaryanr/awesome-generative-ai-guide"
"SylphAI-Inc/LLM-engineer-handbook" -> "decodingml/second-brain-ai-assistant-course"
"ShengranHu/ADAS" -> "zou-group/textgrad"
"ShengranHu/ADAS" -> "SakanaAI/AI-Scientist-v2" ["e"=1]
"ShengranHu/ADAS" -> "OpenAutoCoder/Agentless" ["e"=1]
"ShengranHu/ADAS" -> "WecoAI/aideml" ["e"=1]
"ShengranHu/ADAS" -> "SakanaAI/AI-Scientist"
"ShengranHu/ADAS" -> "lamm-mit/SciAgentsDiscovery" ["e"=1]
"ShengranHu/ADAS" -> "togethercomputer/MoA"
"ShengranHu/ADAS" -> "taichengguo/LLM_MultiAgents_Survey_Papers" ["e"=1]
"ShengranHu/ADAS" -> "SalesforceAIResearch/AgentLite" ["e"=1]
"ShengranHu/ADAS" -> "metauto-ai/GPTSwarm" ["e"=1]
"ShengranHu/ADAS" -> "SalesforceAIResearch/xLAM" ["e"=1]
"ShengranHu/ADAS" -> "openai/mle-bench" ["e"=1]
"ShengranHu/ADAS" -> "StreetLamb/tribe"
"ShengranHu/ADAS" -> "MLSysOps/MLE-agent"
"ShengranHu/ADAS" -> "SylphAI-Inc/AdalFlow"
"2-fly-4-ai/V0-system-prompt" -> "sharkqwy/v0prompt"
"2-fly-4-ai/V0-system-prompt" -> "black-forest-labs/flux" ["e"=1]
"2-fly-4-ai/V0-system-prompt" -> "e2b-dev/fragments"
"2-fly-4-ai/V0-system-prompt" -> "Nutlope/llamacoder"
"2-fly-4-ai/V0-system-prompt" -> "langchain-ai/open-canvas"
"2-fly-4-ai/V0-system-prompt" -> "Dhravya/cloudflare-saas-stack" ["e"=1]
"2-fly-4-ai/V0-system-prompt" -> "midday-ai/v1" ["e"=1]
"2-fly-4-ai/V0-system-prompt" -> "haydenbleasel/next-forge" ["e"=1]
"2-fly-4-ai/V0-system-prompt" -> "stackblitz/bolt.new"
"2-fly-4-ai/V0-system-prompt" -> "raidendotai/openv0"
"2-fly-4-ai/V0-system-prompt" -> "TheBlewish/Automated-AI-Web-Researcher-Ollama"
"2-fly-4-ai/V0-system-prompt" -> "anysphere/priompt"
"2-fly-4-ai/V0-system-prompt" -> "elder-plinius/L1B3RT4S"
"2-fly-4-ai/V0-system-prompt" -> "codelion/optillm"
"2-fly-4-ai/V0-system-prompt" -> "google-gemini/live-api-web-console"
"dleemiller/WordLlama" -> "MinishLab/model2vec"
"dleemiller/WordLlama" -> "AnswerDotAI/rerankers"
"dleemiller/WordLlama" -> "facebookresearch/MobileLLM" ["e"=1]
"dleemiller/WordLlama" -> "Filimoa/open-parse"
"dleemiller/WordLlama" -> "urchade/GLiNER"
"dleemiller/WordLlama" -> "qhjqhj00/MemoRAG"
"dleemiller/WordLlama" -> "AnswerDotAI/RAGatouille"
"dleemiller/WordLlama" -> "merveenoyan/smol-vision"
"dleemiller/WordLlama" -> "alessiodm/drl-zh" ["e"=1]
"dleemiller/WordLlama" -> "chonkie-ai/chonkie"
"dleemiller/WordLlama" -> "ucbepic/docetl"
"dleemiller/WordLlama" -> "taylorai/aiq"
"dleemiller/WordLlama" -> "MinishLab/semhash"
"dleemiller/WordLlama" -> "qdrant/fastembed"
"dleemiller/WordLlama" -> "AnswerDotAI/byaldi"
"Bklieger/infinite-bookshelf" -> "Bklieger/ScribeWizard"
"Bklieger/infinite-bookshelf" -> "THUDM/LongWriter"
"Bklieger/infinite-bookshelf" -> "jgravelle/AutoGroq"
"Bklieger/infinite-bookshelf" -> "bklieger-groq/stockbot-on-groq"
"Bklieger/infinite-bookshelf" -> "lamm-mit/PDF2Audio"
"Bklieger/infinite-bookshelf" -> "mshumer/gpt-author" ["e"=1]
"Bklieger/infinite-bookshelf" -> "bklieger-groq/g1" ["e"=1]
"Bklieger/infinite-bookshelf" -> "skapadia3214/groq-moa"
"Bklieger/infinite-bookshelf" -> "Doriandarko/maestro"
"Bklieger/infinite-bookshelf" -> "mshumer/ai-journalist"
"Bklieger/infinite-bookshelf" -> "Bklieger/Semantic"
"Bklieger/infinite-bookshelf" -> "groq/groq-api-cookbook"
"Bklieger/infinite-bookshelf" -> "codelion/optillm"
"Bklieger/infinite-bookshelf" -> "udecode/dotai"
"Bklieger/infinite-bookshelf" -> "Nutlope/llamatutor"
"Surfer-Org/Protocol" -> "supermemoryai/opensearch-ai"
"Surfer-Org/Protocol" -> "Doriandarko/omni-engineer"
"Surfer-Org/Protocol" -> "privastead/privastead" ["e"=1]
"Surfer-Org/Protocol" -> "wasi-master/13ft" ["e"=1]
"Surfer-Org/Protocol" -> "beac0n/ruroco" ["e"=1]
"Surfer-Org/Protocol" -> "zlwaterfield/scramble" ["e"=1]
"Surfer-Org/Protocol" -> "brainqub3/jar3d_meta_expert"
"Surfer-Org/Protocol" -> "finic-ai/finic"
"Surfer-Org/Protocol" -> "KhoomeiK/LlamaGym"
"Surfer-Org/Protocol" -> "jasonjmcghee/rem"
"Surfer-Org/Protocol" -> "clemlesne/scrape-it-now"
"Surfer-Org/Protocol" -> "entropy-research/Devon"
"Surfer-Org/Protocol" -> "janwilmake/efficient-recorder"
"Surfer-Org/Protocol" -> "Storia-AI/sage"
"Surfer-Org/Protocol" -> "RamboRogers/rfhunter" ["e"=1]
"synth-inc/onit" -> "fal-ai-community/video-starter-kit"
"synth-inc/onit" -> "wojciech-kulik/FlashSpace" ["e"=1]
"synth-inc/onit" -> "janwilmake/efficient-recorder"
"synth-inc/onit" -> "rbbydotdev/someday" ["e"=1]
"synth-inc/onit" -> "FormBee/FormBee" ["e"=1]
"synth-inc/onit" -> "gsidhu/buzee-tauri" ["e"=1]
"synth-inc/onit" -> "KoljaB/RealtimeVoiceChat"
"synth-inc/onit" -> "wild-card-ai/agents-json"
"synth-inc/onit" -> "DevER-M/yami" ["e"=1]
"synth-inc/onit" -> "Z-Gort/Reservoirs-Lab"
"synth-inc/onit" -> "johnbean393/Sidekick"
"tjmlabs/ColiVara" -> "eyelevelai/groundx-on-prem"
"tjmlabs/ColiVara" -> "superagent-ai/reag"
"tjmlabs/ColiVara" -> "illuin-tech/colpali"
"tjmlabs/ColiVara" -> "GitHamza0206/simba"
"tjmlabs/ColiVara" -> "AnswerDotAI/byaldi"
"tjmlabs/ColiVara" -> "chonkie-ai/chonkie"
"tjmlabs/ColiVara" -> "morphik-org/morphik-core"
"tjmlabs/ColiVara" -> "CatchTheTornado/text-extract-api"
"tjmlabs/ColiVara" -> "TilmanGriesel/chipper"
"tjmlabs/ColiVara" -> "VectifyAI/PageIndex"
"tjmlabs/ColiVara" -> "athina-ai/rag-cookbooks"
"tjmlabs/ColiVara" -> "reflex-dev/reflex-llm-examples"
"tjmlabs/ColiVara" -> "lumina-ai-inc/chunkr"
"tjmlabs/ColiVara" -> "dmayboroda/minima"
"tjmlabs/ColiVara" -> "roboflow/maestro" ["e"=1]
"Doriandarko/o1-engineer" -> "Doriandarko/claude-engineer"
"Doriandarko/o1-engineer" -> "Doriandarko/omni-engineer"
"Doriandarko/o1-engineer" -> "XengShi/materialYouNewTab" ["e"=1]
"Doriandarko/o1-engineer" -> "mediar-ai/screenpipe"
"Doriandarko/o1-engineer" -> "Doriandarko/maestro"
"Doriandarko/o1-engineer" -> "anthropics/anthropic-quickstarts"
"Doriandarko/o1-engineer" -> "langchain-ai/open-canvas"
"Doriandarko/o1-engineer" -> "frdel/agent-zero"
"Doriandarko/o1-engineer" -> "e2b-dev/fragments"
"Doriandarko/o1-engineer" -> "Doriandarko/deepseek-engineer"
"Doriandarko/o1-engineer" -> "xjdr-alt/entropix" ["e"=1]
"Doriandarko/o1-engineer" -> "meltylabs/melty"
"Doriandarko/o1-engineer" -> "raidendotai/cofounder"
"Doriandarko/o1-engineer" -> "Integuru-AI/Integuru"
"Doriandarko/o1-engineer" -> "gptme/gptme"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "av/harbor" ["e"=1]
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "codelion/optillm"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "MODSetter/SurfSense"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "Kiln-AI/Kiln"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "felladrin/awesome-ai-web-search"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "katanemo/archgw"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "rmusser01/tldw" ["e"=1]
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "chonkie-ai/chonkie"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "thepersonalaicompany/amurex"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "SomeOddCodeGuy/WilmerAI" ["e"=1]
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "mediar-ai/screenpipe"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "vietnh1009/ASCII-generator"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "BrainBlend-AI/atomic-agents"
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "caspianmoon/memoripy" ["e"=1]
"TheBlewish/Automated-AI-Web-Researcher-Ollama" -> "LearningCircuit/local-deep-research"
"kturung/langgraph_streamlit_codeassistant" -> "LERM0/LermoAI"
"kturung/langgraph_streamlit_codeassistant" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"kturung/langgraph_streamlit_codeassistant" -> "jwa91/LangGraph-Expense-Tracker"
"kturung/langgraph_streamlit_codeassistant" -> "NirDiamant/Controllable-RAG-Agent"
"kturung/langgraph_streamlit_codeassistant" -> "virattt/financial-agent-ui"
"kturung/langgraph_streamlit_codeassistant" -> "langchain-ai/lang-memgpt"
"kturung/langgraph_streamlit_codeassistant" -> "run-llama/create-llama"
"kturung/langgraph_streamlit_codeassistant" -> "StreetLamb/tribe"
"kturung/langgraph_streamlit_codeassistant" -> "john-adeojo/graph_websearch_agent"
"kturung/langgraph_streamlit_codeassistant" -> "cnunescoelho/kiroku"
"kturung/langgraph_streamlit_codeassistant" -> "theyashwanthsai/Devyan" ["e"=1]
"kturung/langgraph_streamlit_codeassistant" -> "DhruvAtreja/datavisualization_langgraph"
"kturung/langgraph_streamlit_codeassistant" -> "sullyo/prompt2ui"
"kturung/langgraph_streamlit_codeassistant" -> "jank/curiosity"
"kturung/langgraph_streamlit_codeassistant" -> "brucechou1983/chainlit_langgraph"
"langchain-ai/lang-memgpt" -> "langchain-ai/story-writing"
"langchain-ai/lang-memgpt" -> "saurabhlalsaxena/Perplexity-Clone-v0.1"
"langchain-ai/data-enrichment" -> "langchain-ai/retrieval-agent-template"
"langchain-ai/data-enrichment" -> "langchain-ai/memory-agent"
"mendableai/llmstxt-generator" -> "mendableai/firecrawl-app-examples"
"langchain-ai/company-researcher" -> "langchain-ai/people-researcher" ["e"=1]
"langchain-ai/company-researcher" -> "langchain-ai/data-enrichment"
"ozgrozer/ai-renamer" -> "iyaja/llama-fs"
"ozgrozer/ai-renamer" -> "QiuYannnn/Local-File-Organizer"
"ozgrozer/ai-renamer" -> "e2b-dev/e2b-cookbook"
"ozgrozer/ai-renamer" -> "itsOwen/CyberScraper-2077"
"ozgrozer/ai-renamer" -> "ragapp/ragapp"
"ozgrozer/ai-renamer" -> "Surfer-Org/Protocol"
"ozgrozer/ai-renamer" -> "CH563/shot-easy-website" ["e"=1]
"ozgrozer/ai-renamer" -> "gluonfield/enchanted" ["e"=1]
"ozgrozer/ai-renamer" -> "cohere-ai/cohere-toolkit"
"ozgrozer/ai-renamer" -> "pinokiocomputer/pinokio" ["e"=1]
"ozgrozer/ai-renamer" -> "MervinPraison/PraisonAI"
"ozgrozer/ai-renamer" -> "togethercomputer/MoA"
"ozgrozer/ai-renamer" -> "Nutlope/turboseek"
"ozgrozer/ai-renamer" -> "matatonic/openedai-speech" ["e"=1]
"ozgrozer/ai-renamer" -> "mshumer/ai-researcher"
"NVIDIA-AI-Blueprints/digital-human" -> "NVIDIA-AI-Blueprints/ai-virtual-assistant"
"NVIDIA-AI-Blueprints/digital-human" -> "NVIDIA/ACE"
"NVIDIA-AI-Blueprints/digital-human" -> "NVIDIA-AI-Blueprints/llm-router"
"NVIDIA-AI-Blueprints/digital-human" -> "daily-co/nimble-pipecat"
"NVIDIA-AI-Blueprints/digital-human" -> "NVIDIA-AI-Blueprints/vulnerability-analysis" ["e"=1]
"NVIDIA-AI-Blueprints/digital-human" -> "NVIDIA-AI-Blueprints/multimodal-pdf-data-extraction"
"NVIDIA-AI-Blueprints/digital-human" -> "NVIDIA/workbench-example-hybrid-rag"
"NVIDIA-AI-Blueprints/digital-human" -> "NVIDIA-AI-Blueprints/video-search-and-summarization"
"microsoft/KBLaM" -> "microsoft/PIKE-RAG"
"microsoft/KBLaM" -> "OSU-NLP-Group/HippoRAG"
"microsoft/KBLaM" -> "langchain-ai/langgraph-swarm-py"
"microsoft/KBLaM" -> "dCaples/AutoDidact" ["e"=1]
"microsoft/KBLaM" -> "kingjulio8238/Memary"
"microsoft/KBLaM" -> "OpenSPG/KAG"
"microsoft/KBLaM" -> "HKUDS/MiniRAG"
"microsoft/KBLaM" -> "chonkie-ai/chonkie"
"microsoft/KBLaM" -> "whyhow-ai/knowledge-graph-studio"
"microsoft/KBLaM" -> "zilliztech/deep-searcher"
"microsoft/KBLaM" -> "SakanaAI/self-adaptive-llms" ["e"=1]
"microsoft/KBLaM" -> "sentient-agi/OpenDeepSearch"
"microsoft/KBLaM" -> "HKUDS/AutoAgent"
"microsoft/KBLaM" -> "microsoft/RD-Agent"
"microsoft/KBLaM" -> "stair-lab/kg-gen"
"menloresearch/ichigo" -> "Standard-Intelligence/hertz-dev" ["e"=1]
"menloresearch/ichigo" -> "ictnlp/LLaMA-Omni" ["e"=1]
"menloresearch/ichigo" -> "pipecat-ai/pipecat"
"menloresearch/ichigo" -> "kyutai-labs/moshi" ["e"=1]
"menloresearch/ichigo" -> "gpt-omni/mini-omni" ["e"=1]
"menloresearch/ichigo" -> "edwko/OuteTTS" ["e"=1]
"menloresearch/ichigo" -> "usefulsensors/moonshine" ["e"=1]
"menloresearch/ichigo" -> "fixie-ai/ultravox"
"menloresearch/ichigo" -> "facebookresearch/spiritlm" ["e"=1]
"menloresearch/ichigo" -> "WhisperSpeech/WhisperSpeech" ["e"=1]
"menloresearch/ichigo" -> "gptme/gptme"
"menloresearch/ichigo" -> "livekit/agents"
"menloresearch/ichigo" -> "huggingface/parler-tts" ["e"=1]
"menloresearch/ichigo" -> "menloresearch/ichigo-demo"
"menloresearch/ichigo" -> "huggingface/speech-to-speech" ["e"=1]
"BinNong/llm-graph-builder" -> "BinNong/meet-libai"
"BinNong/llm-graph-builder" -> "neo4j-labs/llm-graph-builder"
"BinNong/llm-graph-builder" -> "KylinMountain/graphrag-server"
"BinNong/llm-graph-builder" -> "adoresever/DataGraphX_Learn"
"BinNong/llm-graph-builder" -> "NanGePlus/GraphragTest"
"BinNong/llm-graph-builder" -> "Ikaros-521/GraphRAG-Ollama-UI"
"BinNong/llm-graph-builder" -> "IDEA-FinAI/ToG" ["e"=1]
"BinNong/llm-graph-builder" -> "TheAiSingularity/graphrag-local-ollama"
"BinNong/llm-graph-builder" -> "littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27"
"BinNong/llm-graph-builder" -> "liuhuanyong/RAGOnMedicalKG"
"BinNong/llm-graph-builder" -> "neo4j/neo4j-graphrag-python"
"BinNong/llm-graph-builder" -> "AI4WA/Docs2KG" ["e"=1]
"BinNong/llm-graph-builder" -> "BaranziniLab/KG_RAG" ["e"=1]
"BinNong/llm-graph-builder" -> "klay-liu/tutorial-in-bilibili"
"BinNong/llm-graph-builder" -> "Datayoo/HuggingFists"
"NanGePlus/GraphragTest" -> "NanGePlus/GraphRAGTestV040"
"NanGePlus/GraphragTest" -> "Airmomo/graphrag-practice-chinese"
"NanGePlus/GraphragTest" -> "NanGePlus/KagTest"
"NanGePlus/GraphragTest" -> "NanGePlus/RagLangChainTest"
"NanGePlus/GraphragTest" -> "BinNong/llm-graph-builder"
"NanGePlus/GraphragTest" -> "wade1010/graphrag-ui"
"NanGePlus/GraphragTest" -> "guoyao/graphrag-more"
"NanGePlus/GraphragTest" -> "neo4j/neo4j-graphrag-python"
"NanGePlus/GraphragTest" -> "NanGePlus/LightRAGTest"
"NanGePlus/GraphragTest" -> "severian42/GraphRAG-Local-UI"
"NanGePlus/GraphragTest" -> "littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27"
"NanGePlus/GraphragTest" -> "NanGePlus/PromptLangChainTest"
"NanGePlus/GraphragTest" -> "TheAiSingularity/graphrag-local-ollama"
"NanGePlus/GraphragTest" -> "honeyandme/RAGQnASystem"
"NanGePlus/GraphragTest" -> "adoresever/DataGraphX_Learn"
"NanGePlus/RagLangChainTest" -> "NanGePlus/LLMTest"
"NanGePlus/RagLangChainTest" -> "NanGePlus/PromptLangChainTest"
"NanGePlus/RagLangChainTest" -> "NanGePlus/LangFlowTest"
"NanGePlus/RagLangChainTest" -> "NanGePlus/HaystackTest"
"NanGePlus/LangFlowTest" -> "NanGePlus/LLMTest"
"NanGePlus/LLMTest" -> "NanGePlus/LangFlowTest"
"NanGePlus/LightRAGTest" -> "ZB052-A/LightRAG-Deepseek-Test"
"huggingface/transformers.js-examples" -> "FateMyName/dannjs"
"huggingface/transformers.js-examples" -> "FateMyName/Libreria1"
"huggingface/transformers.js-examples" -> "FateMyName/node"
"huggingface/transformers.js-examples" -> "FateMyName/laminas-diactoros"
"huggingface/transformers.js-examples" -> "FateMyName/fuel-core"
"huggingface/transformers.js-examples" -> "FateMyName/eigenlayer-contracts"
"huggingface/transformers.js-examples" -> "FateMyName/validator-dashboard"
"huggingface/transformers.js-examples" -> "FateMyName/eigenda-operator-setup"
"huggingface/transformers.js-examples" -> "FateMyName/eigensdk-go"
"huggingface/transformers.js-examples" -> "FateMyName/encrypto"
"huggingface/transformers.js-examples" -> "FateMyName/sashay_pauxi"
"huggingface/transformers.js-examples" -> "JooooJark/Document"
"huggingface/transformers.js-examples" -> "dgjklh/nvmrc"
"huggingface/transformers.js-examples" -> "FateMyName/monitor-client"
"huggingface/transformers.js-examples" -> "FPiasecki2/ShellScript"
"ucbepic/docetl" -> "AnswerDotAI/byaldi"
"ucbepic/docetl" -> "AnswerDotAI/RAGatouille"
"ucbepic/docetl" -> "lotus-data/lotus"
"ucbepic/docetl" -> "katanaml/sparrow"
"ucbepic/docetl" -> "AnswerDotAI/rerankers"
"ucbepic/docetl" -> "illuin-tech/colpali"
"ucbepic/docetl" -> "KruxAI/ragbuilder"
"ucbepic/docetl" -> "QuivrHQ/MegaParse"
"ucbepic/docetl" -> "JSv4/OpenContracts"
"ucbepic/docetl" -> "huggingface/evaluation-guidebook"
"ucbepic/docetl" -> "Zipstack/unstract"
"ucbepic/docetl" -> "MadcowD/ell"
"ucbepic/docetl" -> "microsoft/PromptWizard"
"ucbepic/docetl" -> "langwatch/langwatch"
"ucbepic/docetl" -> "run-llama/llama_cloud_services"
"AgentOps-AI/AgentStack" -> "AgentOps-AI/agentops"
"AgentOps-AI/AgentStack" -> "MervinPraison/PraisonAI"
"AgentOps-AI/AgentStack" -> "langwatch/langwatch"
"AgentOps-AI/AgentStack" -> "awslabs/agent-squad"
"AgentOps-AI/AgentStack" -> "e2b-dev/open-computer-use"
"AgentOps-AI/AgentStack" -> "MotiaDev/motia"
"AgentOps-AI/AgentStack" -> "langchain-ai/open-canvas"
"AgentOps-AI/AgentStack" -> "eastlondoner/cursor-tools"
"AgentOps-AI/AgentStack" -> "steel-dev/steel-browser"
"AgentOps-AI/AgentStack" -> "run-llama/create-llama"
"AgentOps-AI/AgentStack" -> "udecode/dotai"
"AgentOps-AI/AgentStack" -> "elizaOS/agent-twitter-client"
"AgentOps-AI/AgentStack" -> "AK391/ai-gradio"
"AgentOps-AI/AgentStack" -> "e2b-dev/fragments"
"AgentOps-AI/AgentStack" -> "simular-ai/Agent-S"
"inferablehq/inferable" -> "AgentScript-AI/agentscript"
"inferablehq/inferable" -> "differentialhq/differential"
"swark-io/swark" -> "Dicklesworthstone/your-source-to-prompt.html"
"swark-io/swark" -> "langwatch/langwatch"
"swark-io/swark" -> "composecraft/composecraft" ["e"=1]
"swark-io/swark" -> "imanoop7/Ollama-OCR"
"swark-io/swark" -> "farshed/sage" ["e"=1]
"swark-io/swark" -> "egoist/sitefetch"
"swark-io/swark" -> "latitude-dev/latitude-llm"
"swark-io/swark" -> "developersdigest/llm-api-engine"
"swark-io/swark" -> "AK391/ai-gradio"
"swark-io/swark" -> "cheeselemon/ophiuchi-desktop" ["e"=1]
"swark-io/swark" -> "inferablehq/inferable"
"swark-io/swark" -> "steel-dev/steel-browser"
"swark-io/swark" -> "FoloUp/FoloUp"
"swark-io/swark" -> "e2b-dev/open-computer-use"
"swark-io/swark" -> "piotrkulpinski/openalternative" ["e"=1]
"gotohuman/gotohuman-langgraph-lead-example" -> "dheerajrhegde/servicedesk_langgraph_tavily"
"gotohuman/gotohuman-langgraph-lead-example" -> "agdev/Langgraph"
"langchain-ai/agent-inbox" -> "langchain-ai/social-media-agent"
"langchain-ai/agent-inbox" -> "langchain-ai/agent-chat-ui"
"langchain-ai/agent-inbox" -> "langchain-ai/executive-ai-assistant"
"langchain-ai/agent-inbox" -> "langchain-ai/langgraph-supervisor-py"
"langchain-ai/agent-inbox" -> "langchain-ai/llmanager"
"langchain-ai/agent-inbox" -> "hrithikkoduri/WebRover"
"langchain-ai/agent-inbox" -> "von-development/awesome-LangGraph"
"langchain-ai/agent-inbox" -> "langchain-ai/langmem"
"langchain-ai/agent-inbox" -> "CopilotKit/open-multi-agent-canvas"
"langchain-ai/agent-inbox" -> "langchain-ai/company-researcher"
"langchain-ai/agent-inbox" -> "hinthornw/trustcall"
"langchain-ai/agent-inbox" -> "langchain-ai/langgraph-swarm-py"
"langchain-ai/agent-inbox" -> "langchain-ai/langgraph-example"
"langchain-ai/agent-inbox" -> "langchain-ai/openevals"
"langchain-ai/agent-inbox" -> "langchain-ai/mcpdoc"
"exa-labs/exa-mcp-server" -> "21st-dev/magic-mcp"
"exa-labs/exa-mcp-server" -> "zaidmukaddam/scira-mcp-chat"
"exa-labs/exa-mcp-server" -> "simular-ai/Agent-S"
"exa-labs/exa-mcp-server" -> "mendableai/firecrawl-mcp-server"
"exa-labs/exa-mcp-server" -> "browserbase/mcp-server-browserbase"
"exa-labs/exa-mcp-server" -> "supabase-community/supabase-mcp"
"exa-labs/exa-mcp-server" -> "cloudflare/mcp-server-cloudflare"
"exa-labs/exa-mcp-server" -> "rowboatlabs/rowboat"
"exa-labs/exa-mcp-server" -> "ymichael/open-codex"
"exa-labs/exa-mcp-server" -> "exa-labs/company-researcher"
"exa-labs/exa-mcp-server" -> "eyaltoledano/claude-task-master"
"exa-labs/exa-mcp-server" -> "AK391/ai-gradio"
"exa-labs/exa-mcp-server" -> "Doriandarko/RAT-retrieval-augmented-thinking"
"exa-labs/exa-mcp-server" -> "exa-labs/exa-hallucination-detector"
"exa-labs/exa-mcp-server" -> "Doriandarko/deepseek-engineer"
"appcypher/awesome-mcp-servers" -> "wong2/awesome-mcp-servers" ["e"=1]
"appcypher/awesome-mcp-servers" -> "mendableai/firecrawl-mcp-server"
"appcypher/awesome-mcp-servers" -> "zcaceres/markdownify-mcp"
"appcypher/awesome-mcp-servers" -> "anaisbetts/mcp-installer" ["e"=1]
"appcypher/awesome-mcp-servers" -> "punkpeye/awesome-mcp-clients" ["e"=1]
"appcypher/awesome-mcp-servers" -> "lastmile-ai/mcp-agent"
"appcypher/awesome-mcp-servers" -> "AgentDeskAI/browser-tools-mcp"
"appcypher/awesome-mcp-servers" -> "exa-labs/exa-mcp-server"
"appcypher/awesome-mcp-servers" -> "chatmcp/mcpso" ["e"=1]
"appcypher/awesome-mcp-servers" -> "jlowin/fastmcp"
"appcypher/awesome-mcp-servers" -> "executeautomation/mcp-playwright"
"appcypher/awesome-mcp-servers" -> "eastlondoner/cursor-tools"
"appcypher/awesome-mcp-servers" -> "punkpeye/awesome-mcp-servers"
"appcypher/awesome-mcp-servers" -> "eyaltoledano/claude-task-master"
"appcypher/awesome-mcp-servers" -> "modelcontextprotocol/inspector" ["e"=1]
"alonlavian/RAGent" -> "langchain-ai/langgraphjs-gen-ui-examples"
"alonlavian/RAGent" -> "langchain-ai/company-researcher"
"alonlavian/RAGent" -> "CopilotKit/open-research-ANA"
"alonlavian/RAGent" -> "lgesuellip/langgraph-whatsapp-agent"
"alonlavian/RAGent" -> "zamalali/InboxHero"
"alonlavian/RAGent" -> "multinear-demo/demo-bank-support-lc-py"
"alonlavian/RAGent" -> "labdmitriy/llm-rag"
"alonlavian/RAGent" -> "agdev/Langgraph"
"alonlavian/RAGent" -> "ahmad2b/postbot3000"
"alonlavian/RAGent" -> "denser-org/denser-chat"
"alonlavian/RAGent" -> "gotohuman/gotohuman-langgraph-lead-example"
"alonlavian/RAGent" -> "CopilotKit/open-multi-agent-canvas"
"alonlavian/RAGent" -> "ahmad2b/canvas-callback"
"ed-donner/llm_engineering" -> "joanby/llm_engineering"
"ed-donner/llm_engineering" -> "ed-donner/agents"
"ed-donner/llm_engineering" -> "PacktPublishing/LLM-Engineers-Handbook"
"ed-donner/llm_engineering" -> "decodingml/llm-twin-course"
"ed-donner/llm_engineering" -> "SylphAI-Inc/LLM-engineer-handbook"
"ed-donner/llm_engineering" -> "VoltAgent/voltagent"
"ed-donner/llm_engineering" -> "wangwei1237/LLM_in_Action" ["e"=1]
"ed-donner/llm_engineering" -> "ed-donner/agentic"
"ed-donner/llm_engineering" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"ed-donner/llm_engineering" -> "BragAI/bRAG-langchain"
"ed-donner/llm_engineering" -> "krishnaik06/Complete-Python-Bootcamp" ["e"=1]
"ed-donner/llm_engineering" -> "emarco177/ice_breaker"
"ed-donner/llm_engineering" -> "aceliuchanghong/FAQ_Of_LLM_Interview" ["e"=1]
"ed-donner/llm_engineering" -> "KaihuaTang/Building-a-Small-LLM-from-Scratch" ["e"=1]
"ed-donner/llm_engineering" -> "DataTalksClub/llm-zoomcamp" ["e"=1]
"jerhadf/linear-mcp-server" -> "tacticlaunch/mcp-linear"
"jerhadf/linear-mcp-server" -> "cline/linear-mcp"
"8090-inc/xrx-core" -> "8090-inc/xrx-sample-apps"
"8090-inc/xrx-core" -> "bklieger-groq/mathtutor-on-groq"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "TheAiSingularity/graphrag-local-ollama"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "severian42/GraphRAG-Local-UI"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "win4r/GraphRAG4OpenWebUI"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "gusye1234/nano-graphrag"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "Coding-Crashkurse/GraphRAG-with-Llama-3.1"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "NirDiamant/Controllable-RAG-Agent"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "neo4j/neo4j-graphrag-python"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "noworneverev/graphrag-visualizer"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "NanGePlus/GraphragTest"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "wade1010/graphrag-ui"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "whyhow-ai/knowledge-graph-studio"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "Ikaros-521/GraphRAG-Ollama-UI"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "karthik-codex/autogen_FEA"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "OSU-NLP-Group/HippoRAG"
"karthik-codex/Autogen_GraphRAG_Ollama" -> "starpig1129/DATAGEN"
"Airmomo/graphrag-practice-chinese" -> "jasonkylelol/graphrag-chinese"
"Airmomo/graphrag-practice-chinese" -> "NanGePlus/GraphragTest"
"Airmomo/graphrag-practice-chinese" -> "guoyao/graphrag-more"
"googleapis/js-genai" -> "google-gemini/deprecated-generative-ai-js"
"modelcontextprotocol/modelcontextprotocol" -> "modelcontextprotocol/inspector" ["e"=1]
"modelcontextprotocol/modelcontextprotocol" -> "modelcontextprotocol/typescript-sdk"
"modelcontextprotocol/modelcontextprotocol" -> "modelcontextprotocol/docs" ["e"=1]
"modelcontextprotocol/modelcontextprotocol" -> "modelcontextprotocol/python-sdk"
"modelcontextprotocol/modelcontextprotocol" -> "modelcontextprotocol/java-sdk" ["e"=1]
"modelcontextprotocol/modelcontextprotocol" -> "google/A2A"
"modelcontextprotocol/modelcontextprotocol" -> "lastmile-ai/mcp-agent"
"modelcontextprotocol/modelcontextprotocol" -> "modelcontextprotocol/servers"
"modelcontextprotocol/modelcontextprotocol" -> "jlowin/fastmcp"
"modelcontextprotocol/modelcontextprotocol" -> "mark3labs/mcp-go"
"modelcontextprotocol/modelcontextprotocol" -> "github/github-mcp-server"
"modelcontextprotocol/modelcontextprotocol" -> "open-webui/mcpo" ["e"=1]
"modelcontextprotocol/modelcontextprotocol" -> "punkpeye/awesome-mcp-clients" ["e"=1]
"modelcontextprotocol/modelcontextprotocol" -> "punkpeye/fastmcp" ["e"=1]
"modelcontextprotocol/modelcontextprotocol" -> "ppl-ai/modelcontextprotocol"
"video-db/Director" -> "fal-ai-community/video-starter-kit"
"video-db/Director" -> "egoist/sitefetch"
"video-db/Director" -> "echohive42/AI-reads-books-page-by-page"
"video-db/Director" -> "elizaOS/agent-twitter-client"
"video-db/Director" -> "developersdigest/llm-api-engine"
"video-db/Director" -> "kristianfreeman/aiwriter"
"video-db/Director" -> "langwatch/langwatch"
"video-db/Director" -> "trycua/acu"
"video-db/Director" -> "AK391/ai-gradio"
"video-db/Director" -> "DannyMac180/meta-agent"
"video-db/Director" -> "exa-labs/company-researcher"
"video-db/Director" -> "langchain-ai/agent-inbox"
"video-db/Director" -> "Dicklesworthstone/your-source-to-prompt.html"
"video-db/Director" -> "superagent-ai/reag"
"video-db/Director" -> "e2b-dev/open-computer-use"
"evilsocket/cake" -> "EricLBuehler/mistral.rs" ["e"=1]
"evilsocket/cake" -> "Doriandarko/claude-engineer"
"evilsocket/cake" -> "evilsocket/nerve" ["e"=1]
"evilsocket/cake" -> "exo-explore/exo"
"evilsocket/cake" -> "b4rtaz/distributed-llama"
"evilsocket/cake" -> "huggingface/candle" ["e"=1]
"evilsocket/cake" -> "togethercomputer/MoA"
"evilsocket/cake" -> "tracel-ai/burn" ["e"=1]
"evilsocket/cake" -> "mediar-ai/screenpipe"
"evilsocket/cake" -> "InternLM/MindSearch"
"evilsocket/cake" -> "svpino/alloy-voice-assistant"
"evilsocket/cake" -> "BasedHardware/OpenGlass"
"evilsocket/cake" -> "adithya-s-k/omniparse"
"evilsocket/cake" -> "LlamaEdge/LlamaEdge" ["e"=1]
"evilsocket/cake" -> "TeamWiseFlow/wiseflow"
"yoheinakajima/babyagi-2o" -> "yoheinakajima/ditto"
"win4r/GraphRAG4OpenWebUI" -> "severian42/GraphRAG-Local-UI"
"win4r/GraphRAG4OpenWebUI" -> "KylinMountain/graphrag-server"
"win4r/GraphRAG4OpenWebUI" -> "TheAiSingularity/graphrag-local-ollama"
"win4r/GraphRAG4OpenWebUI" -> "win4r/AISuperDomain" ["e"=1]
"win4r/GraphRAG4OpenWebUI" -> "karthik-codex/Autogen_GraphRAG_Ollama"
"win4r/GraphRAG4OpenWebUI" -> "Ikaros-521/GraphRAG-Ollama-UI"
"win4r/GraphRAG4OpenWebUI" -> "wade1010/graphrag-ui"
"win4r/GraphRAG4OpenWebUI" -> "noworneverev/graphrag-visualizer"
"win4r/GraphRAG4OpenWebUI" -> "open-webui/pipelines" ["e"=1]
"win4r/GraphRAG4OpenWebUI" -> "win4r/o1" ["e"=1]
"win4r/GraphRAG4OpenWebUI" -> "NanGePlus/GraphragTest"
"win4r/GraphRAG4OpenWebUI" -> "EtiennePerot/safe-code-execution" ["e"=1]
"win4r/GraphRAG4OpenWebUI" -> "noworneverev/graphrag-api"
"win4r/GraphRAG4OpenWebUI" -> "MartianInGreen/OpenWebUI-Tools" ["e"=1]
"ed-donner/agentic" -> "ed-donner/choose_llm"
"memodb-io/memobase" -> "kingjulio8238/Memary"
"memodb-io/memobase" -> "gusye1234/nano-graphrag"
"memodb-io/memobase" -> "microsoft/PIKE-RAG"
"memodb-io/memobase" -> "refly-ai/refly"
"memodb-io/memobase" -> "topoteretes/cognee"
"memodb-io/memobase" -> "OSU-NLP-Group/HippoRAG"
"memodb-io/memobase" -> "memfreeme/memfree"
"memodb-io/memobase" -> "modelscope/MemoryScope" ["e"=1]
"memodb-io/memobase" -> "qhjqhj00/MemoRAG"
"memodb-io/memobase" -> "Thytu/Agentarium"
"memodb-io/memobase" -> "zjunlp/OmniThink" ["e"=1]
"memodb-io/memobase" -> "microsoft/PromptWizard"
"memodb-io/memobase" -> "HKUDS/MiniRAG"
"memodb-io/memobase" -> "jina-ai/node-DeepResearch"
"memodb-io/memobase" -> "MoonshotAI/MoBA" ["e"=1]
"Warma10032/cyber-doctor" -> "Ji-yutong/Intelligent-Q-A-System-for-Automotive-Knowledge"
"NannyML/The-Little-Book-of-ML-Metrics" -> "fmind/mlops-python-package"
"NannyML/The-Little-Book-of-ML-Metrics" -> "fmind/cookiecutter-mlops-package"
"NannyML/The-Little-Book-of-ML-Metrics" -> "NannyML/nannyml" ["e"=1]
"NannyML/The-Little-Book-of-ML-Metrics" -> "callmesora/llmops-python-package"
"NannyML/The-Little-Book-of-ML-Metrics" -> "MLOps-Courses/mlops-coding-course"
"NannyML/The-Little-Book-of-ML-Metrics" -> "PacktPublishing/LLM-Engineers-Handbook"
"NannyML/The-Little-Book-of-ML-Metrics" -> "koaning/scikit-lego" ["e"=1]
"NannyML/The-Little-Book-of-ML-Metrics" -> "SylphAI-Inc/AdalFlow"
"NannyML/The-Little-Book-of-ML-Metrics" -> "iusztinpaul/energy-forecasting"
"NannyML/The-Little-Book-of-ML-Metrics" -> "SylphAI-Inc/LLM-engineer-handbook"
"NannyML/The-Little-Book-of-ML-Metrics" -> "decodingml/llm-twin-course"
"NannyML/The-Little-Book-of-ML-Metrics" -> "Lightning-AI/LitServe"
"NannyML/The-Little-Book-of-ML-Metrics" -> "databricks/mlops-stacks" ["e"=1]
"NannyML/The-Little-Book-of-ML-Metrics" -> "neural-maze/agentic-patterns-course"
"NannyML/The-Little-Book-of-ML-Metrics" -> "mmschlk/shapiq" ["e"=1]
"lamm-mit/PDF2Audio" -> "knowsuchagency/pdf-to-podcast"
"lamm-mit/PDF2Audio" -> "gabrielchua/open-notebooklm"
"lamm-mit/PDF2Audio" -> "souzatharsis/podcastfy"
"lamm-mit/PDF2Audio" -> "lamm-mit/SciAgentsDiscovery" ["e"=1]
"lamm-mit/PDF2Audio" -> "lamm-mit/GraphReasoning" ["e"=1]
"lamm-mit/PDF2Audio" -> "echohive42/AI-reads-books-page-by-page"
"lamm-mit/PDF2Audio" -> "lfnovo/open-notebook"
"lamm-mit/PDF2Audio" -> "Bklieger/infinite-bookshelf"
"lamm-mit/PDF2Audio" -> "johnmai-dev/NotebookMLX" ["e"=1]
"lamm-mit/PDF2Audio" -> "souzatharsis/podcastfy-demo"
"lamm-mit/PDF2Audio" -> "ragapp/ragapp"
"lamm-mit/PDF2Audio" -> "yigitkonur/swift-ocr-llm-powered-pdf-to-markdown"
"lamm-mit/PDF2Audio" -> "marlaman/show-me"
"lamm-mit/PDF2Audio" -> "THUDM/LongWriter"
"lamm-mit/PDF2Audio" -> "lihuithe/podlm-public" ["e"=1]
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/fasthtml" ["e"=1]
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/MonsterUI"
"AnswerDotAI/fasthtml-example" -> "curtis-allan/Shad4Fasthtml"
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/claudette"
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/FastHTML-Gallery"
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/fastlite"
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/shell_sage"
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/fh-deploy"
"AnswerDotAI/fasthtml-example" -> "amosgyamfi/awesome-fasthtml"
"AnswerDotAI/fasthtml-example" -> "maces/fastapi-htmx" ["e"=1]
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/fh-about"
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/llms-txt"
"AnswerDotAI/fasthtml-example" -> "ninohdasilva/fasthtml-tailwind-template"
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/fastcore" ["e"=1]
"AnswerDotAI/fasthtml-example" -> "AnswerDotAI/fh-bootstrap"
"pengfeng/ask.py" -> "leettools-dev/leettools"
"pengfeng/ask.py" -> "linktimecloud/kubernetes-data-platform"
"Nutlope/turboseek" -> "Nutlope/pdftochat"
"Nutlope/turboseek" -> "Nutlope/napkins"
"Nutlope/turboseek" -> "Nutlope/llamatutor"
"Nutlope/turboseek" -> "Nutlope/notesGPT"
"Nutlope/turboseek" -> "Nutlope/explorecareers"
"Nutlope/turboseek" -> "Nutlope/blinkshot"
"Nutlope/turboseek" -> "miurla/morphic"
"Nutlope/turboseek" -> "Nutlope/llamacoder"
"Nutlope/turboseek" -> "rashadphz/farfalle"
"Nutlope/turboseek" -> "supermemoryai/opensearch-ai"
"Nutlope/turboseek" -> "memfreeme/memfree"
"Nutlope/turboseek" -> "yokingma/search_with_ai" ["e"=1]
"Nutlope/turboseek" -> "Nutlope/ai-search-engine"
"Nutlope/turboseek" -> "Nutlope/description-generator"
"Nutlope/turboseek" -> "virattt/financial-agent-ui"
"trypear/pearai-app" -> "trypear/pearai-submodule"
"trypear/pearai-app" -> "trypear/pearai-master"
"trypear/pearai-app" -> "trypear/pear-landing-page"
"trypear/pearai-app" -> "trypear/pearai-app-archive"
"trypear/pearai-app" -> "trypear/pearai-documentation"
"mendableai/firecrawl-app-examples" -> "mendableai/llmstxt-generator"
"mendableai/firecrawl-app-examples" -> "yapishu/icewalk"
"brandonstarxel/chunking_evaluation" -> "suvansh/ChromaAdaptEmbed"
"brandonstarxel/chunking_evaluation" -> "xhluca/bm25s"
"brandonstarxel/chunking_evaluation" -> "ALucek/QuicKB"
"brandonstarxel/chunking_evaluation" -> "ALucek/ppt2desc"
"brandonstarxel/chunking_evaluation" -> "ALucek/chunking-strategies"
"gabrielchua/open-notebooklm" -> "knowsuchagency/pdf-to-podcast"
"gabrielchua/open-notebooklm" -> "lamm-mit/PDF2Audio"
"gabrielchua/open-notebooklm" -> "souzatharsis/podcastfy"
"gabrielchua/open-notebooklm" -> "lfnovo/open-notebook"
"gabrielchua/open-notebooklm" -> "lihuithe/podlm-public" ["e"=1]
"gabrielchua/open-notebooklm" -> "Nutlope/llamacoder"
"gabrielchua/open-notebooklm" -> "langchain-ai/open-canvas"
"gabrielchua/open-notebooklm" -> "echohive42/AI-reads-books-page-by-page"
"gabrielchua/open-notebooklm" -> "SamurAIGPT/AI-Youtube-Shorts-Generator" ["e"=1]
"gabrielchua/open-notebooklm" -> "mshumer/OpenDeepResearcher"
"gabrielchua/open-notebooklm" -> "gptme/gptme"
"gabrielchua/open-notebooklm" -> "MadcowD/ell"
"gabrielchua/open-notebooklm" -> "souzatharsis/podcastfy-demo"
"gabrielchua/open-notebooklm" -> "Nutlope/llamatutor"
"gabrielchua/open-notebooklm" -> "InternLM/MindSearch"
"honeyandme/RAGQnASystem" -> "liuhuanyong/RAGOnMedicalKG"
"honeyandme/RAGQnASystem" -> "littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27"
"honeyandme/RAGQnASystem" -> "nuolade/disease-kb"
"honeyandme/RAGQnASystem" -> "maxin-nk/Chat_to_Medical_Machine"
"honeyandme/RAGQnASystem" -> "Xu1Aan/KGExplorer"
"honeyandme/RAGQnASystem" -> "Ji-yutong/Intelligent-Q-A-System-for-Automotive-Knowledge"
"honeyandme/RAGQnASystem" -> "Warma10032/cyber-doctor"
"honeyandme/RAGQnASystem" -> "BinNong/meet-libai"
"honeyandme/RAGQnASystem" -> "pen-ho/medical_knowledge_graph_app-master" ["e"=1]
"honeyandme/RAGQnASystem" -> "michael-wzhu/ChatMed" ["e"=1]
"honeyandme/RAGQnASystem" -> "xerrors/Yuxi-Know" ["e"=1]
"honeyandme/RAGQnASystem" -> "zhengguanyu/KGB-RAG"
"honeyandme/RAGQnASystem" -> "NanGePlus/GraphragTest"
"honeyandme/RAGQnASystem" -> "SuperMedIntel/Medical-Graph-RAG" ["e"=1]
"honeyandme/RAGQnASystem" -> "answerlink/IntelliQ" ["e"=1]
"MinishLab/semhash" -> "MinishLab/vicinity"
"MinishLab/semhash" -> "MinishLab/model2vec"
"MinishLab/semhash" -> "MinishLab/tokenlearn"
"MinishLab/semhash" -> "lightonai/pylate"
"MinishLab/semhash" -> "xhluca/bm25s"
"MinishLab/semhash" -> "tomaarsen/SpanMarkerNER"
"MinishLab/semhash" -> "urchade/GLiNER"
"MinishLab/semhash" -> "chonkie-ai/chonkie"
"MinishLab/semhash" -> "jackboyla/GLiREL"
"MinishLab/semhash" -> "huggingface/text-clustering" ["e"=1]
"MinishLab/semhash" -> "argilla-io/distilabel" ["e"=1]
"MinishLab/semhash" -> "huggingface/setfit" ["e"=1]
"MinishLab/semhash" -> "MoritzLaurer/zeroshot-classifier"
"MinishLab/semhash" -> "AnswerDotAI/ModernBERT"
"MinishLab/semhash" -> "arcee-ai/DistillKit" ["e"=1]
"ibm-granite/granite-3.0-language-models" -> "ibm-granite/granite-guardian"
"docling-project/docling-core" -> "docling-project/docling-ibm-models"
"docling-project/docling-core" -> "DS4SD/deepsearch-examples"
"docling-project/docling-core" -> "docling-project/docling-serve"
"docling-project/docling-core" -> "docling-project/docling-parse"
"docling-project/docling-core" -> "DS4SD/deepsearch-glm"
"docling-project/docling-core" -> "DS4SD/deepsearch-toolkit"
"docling-project/docling-ibm-models" -> "docling-project/docling-core"
"docling-project/docling-ibm-models" -> "docling-project/docling-parse"
"docling-project/docling-ibm-models" -> "DS4SD/quackling"
"docling-project/docling-ibm-models" -> "DS4SD/deepsearch-glm"
"docling-project/docling-parse" -> "docling-project/docling-ibm-models"
"docling-project/docling-parse" -> "DS4SD/deepsearch-glm"
"docling-project/docling-parse" -> "docling-project/docling-core"
"rasbt/LLM-workshop-2024" -> "rasbt/MachineLearning-QandAI-book" ["e"=1]
"rasbt/LLM-workshop-2024" -> "rasbt/pycon2024"
"rasbt/LLM-workshop-2024" -> "Lightning-AI/litgpt"
"rasbt/LLM-workshop-2024" -> "rasbt/machine-learning-book" ["e"=1]
"rasbt/LLM-workshop-2024" -> "mlabonne/llm-autoeval" ["e"=1]
"rasbt/LLM-workshop-2024" -> "decodingml/llm-twin-course"
"rasbt/LLM-workshop-2024" -> "Lightning-AI/dl-fundamentals" ["e"=1]
"rasbt/LLM-workshop-2024" -> "samwit/llm-tutorials" ["e"=1]
"rasbt/LLM-workshop-2024" -> "SkalskiP/vlms-zero-to-hero" ["e"=1]
"rasbt/LLM-workshop-2024" -> "iusztinpaul/hands-on-llms" ["e"=1]
"rasbt/LLM-workshop-2024" -> "PacktPublishing/LLM-Engineers-Handbook"
"rasbt/LLM-workshop-2024" -> "SylphAI-Inc/LLM-engineer-handbook"
"rasbt/LLM-workshop-2024" -> "huggingface/evaluation-guidebook"
"rasbt/LLM-workshop-2024" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"rasbt/LLM-workshop-2024" -> "EurekaLabsAI/ngram" ["e"=1]
"lmnr-ai/index" -> "lmnr-ai/lmnr"
"lmnr-ai/index" -> "steel-dev/steel-browser"
"lmnr-ai/index" -> "simular-ai/Agent-S"
"lmnr-ai/index" -> "trycua/cua"
"lmnr-ai/index" -> "langwatch/langwatch"
"lmnr-ai/index" -> "pingcap/autoflow"
"lmnr-ai/index" -> "morphik-org/morphik-core"
"lmnr-ai/index" -> "Fosowl/agenticSeek"
"lmnr-ai/index" -> "browserbase/stagehand"
"lmnr-ai/index" -> "superglue-ai/superglue" ["e"=1]
"lmnr-ai/index" -> "rowboatlabs/rowboat"
"lmnr-ai/index" -> "droidrun/droidrun" ["e"=1]
"lmnr-ai/index" -> "trycua/acu"
"lmnr-ai/index" -> "browserable/browserable"
"lmnr-ai/index" -> "simstudioai/sim"
"Doriandarko/gemini-ui-to-code" -> "Doriandarko/omni-engineer"
"Doriandarko/gemini-ui-to-code" -> "ozgrozer/chatgpt-artifacts"
"Doriandarko/gemini-ui-to-code" -> "Doriandarko/RepoToTextForLLMs"
"Doriandarko/gemini-ui-to-code" -> "SawyerHood/tlbrowse"
"Doriandarko/gemini-ui-to-code" -> "Doriandarko/maestro"
"Doriandarko/gemini-ui-to-code" -> "sullyo/prompt2ui"
"Doriandarko/gemini-ui-to-code" -> "Doriandarko/DIY-Astra"
"Doriandarko/gemini-ui-to-code" -> "jgravelle/pocketgroq"
"Doriandarko/gemini-ui-to-code" -> "groq/groq-appgen"
"Doriandarko/gemini-ui-to-code" -> "svpino/livekit-assistant" ["e"=1]
"Doriandarko/gemini-ui-to-code" -> "jgravelle/AutoGroq"
"Doriandarko/gemini-ui-to-code" -> "kturung/langgraph_streamlit_codeassistant"
"Doriandarko/gemini-ui-to-code" -> "entropy-research/Devon"
"Doriandarko/gemini-ui-to-code" -> "mckaywrigley/buildware-ai"
"s-smits/agentic-cursorrules" -> "grp06/cursor-boost"
"s-smits/agentic-cursorrules" -> "RayFernando1337/llm-cursor-rules"
"s-smits/agentic-cursorrules" -> "mckaywrigley/o1-xml-parser"
"s-smits/agentic-cursorrules" -> "udecode/dotai"
"s-smits/agentic-cursorrules" -> "eastlondoner/cursor-tools"
"s-smits/agentic-cursorrules" -> "DannyMac180/meta-agent"
"s-smits/agentic-cursorrules" -> "SouthBridgeAI/offmute" ["e"=1]
"s-smits/agentic-cursorrules" -> "Scrapybara/scrapybara-cookbook"
"s-smits/agentic-cursorrules" -> "echohive42/AI-Data-Scientist-scores-top-1-percent-on-Kaggle"
"s-smits/agentic-cursorrules" -> "regenrek/codefetch"
"s-smits/agentic-cursorrules" -> "sshtunnelvision/MCP-LOGO-GEN"
"s-smits/agentic-cursorrules" -> "echohive42/AI-book-maker-with-perplexity-search-grounding"
"intra2net/paperbackup" -> "matheusd/pypaperbak"
"Nutlope/blinkshot" -> "Nutlope/description-generator"
"Nutlope/blinkshot" -> "Nutlope/loras-dev"
"Nutlope/blinkshot" -> "Nutlope/explorecareers"
"Nutlope/blinkshot" -> "Nutlope/turboseek"
"Nutlope/blinkshot" -> "Nutlope/napkins"
"Nutlope/blinkshot" -> "Nutlope/pdftochat"
"Nutlope/blinkshot" -> "RexanWONG/text-behind-image" ["e"=1]
"Nutlope/blinkshot" -> "Nutlope/picMenu"
"Nutlope/blinkshot" -> "Nutlope/notesGPT"
"Nutlope/blinkshot" -> "run-llama/voice-chat-pdf" ["e"=1]
"Nutlope/blinkshot" -> "Nutlope/llamatutor"
"Nutlope/blinkshot" -> "Nutlope/llamacoder"
"Nutlope/blinkshot" -> "virgoone/next-money" ["e"=1]
"Nutlope/blinkshot" -> "vercel-labs/ai-sdk-preview-rag"
"Nutlope/blinkshot" -> "misbahsy/meetingmind" ["e"=1]
"shiv248/Streamlit-x-LangGraph-Cookbooks" -> "tevslin/meeting-reporter"
"jgravelle/Groqqle" -> "jgravelle/Py2md"
"jgravelle/Groqqle" -> "jgravelle/pocketgroq"
"jgravelle/Groqqle" -> "jgravelle/MiniGroqqle"
"jgravelle/Groqqle" -> "jgravelle/Grompt"
"jgravelle/Groqqle" -> "jgravelle/groqcrawl"
"jgravelle/Groqqle" -> "jgravelle/AutogroqAgent"
"jgravelle/Groqqle" -> "jgravelle/shugok-ai"
"jgravelle/Groqqle" -> "jgravelle/StrawberryGroq"
"jgravelle/Groqqle" -> "tonyoconnell/Groqqle"
"jgravelle/Groqqle" -> "jgravelle/jPaste"
"jgravelle/Groqqle" -> "jgravelle/OpenAI-AgentsSDK-GUI"
"jgravelle/Groqqle" -> "jgravelle/AutoGrok"
"jgravelle/Groqqle" -> "jgravelle/Grompt_plugin"
"punnerud/Local_Knowledge_Graph" -> "chrschy/fact-finder"
"THUDM/LongWriter" -> "GAIR-NLP/OpenResearcher" ["e"=1]
"THUDM/LongWriter" -> "microsoft/MInference" ["e"=1]
"THUDM/LongWriter" -> "THUDM/LongBench" ["e"=1]
"THUDM/LongWriter" -> "Bklieger/infinite-bookshelf"
"THUDM/LongWriter" -> "THUDM/LongAlign" ["e"=1]
"THUDM/LongWriter" -> "Xnhyacinth/Awesome-LLM-Long-Context-Modeling" ["e"=1]
"THUDM/LongWriter" -> "InternLM/MindSearch"
"THUDM/LongWriter" -> "dvlab-research/LongLoRA" ["e"=1]
"THUDM/LongWriter" -> "lamm-mit/PDF2Audio"
"THUDM/LongWriter" -> "THUDM/LongCite" ["e"=1]
"THUDM/LongWriter" -> "mit-han-lab/duo-attention" ["e"=1]
"THUDM/LongWriter" -> "bklieger-groq/g1" ["e"=1]
"THUDM/LongWriter" -> "qhjqhj00/MemoRAG"
"THUDM/LongWriter" -> "jquesnelle/yarn" ["e"=1]
"THUDM/LongWriter" -> "lm-sys/RouteLLM"
"AllAboutAI-YT/chatTTS" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/chatTTS" -> "AllAboutAI-YT/hackernews-llm-search"
"AllAboutAI-YT/chatTTS" -> "AllAboutAI-YT/text-to-JSON"
"AllAboutAI-YT/chatTTS" -> "AllAboutAI-YT/Command-R-GPT-4V2"
"AllAboutAI-YT/chatTTS" -> "AllAboutAI-YT/ai-terminal"
"AllAboutAI-YT/chatTTS" -> "AllAboutAI-YT/real_time_website_b"
"stephengpope/no-code-architects-toolkit" -> "nerding-io/n8n-nodes-mcp"
"stephengpope/no-code-architects-toolkit" -> "Marvomatic/n8n-templates"
"stephengpope/no-code-architects-toolkit" -> "joshpocock/Stride-AI-Agents"
"stephengpope/no-code-architects-toolkit" -> "coleam00/mcp-crawl4ai-rag"
"stephengpope/no-code-architects-toolkit" -> "coleam00/local-ai-packaged"
"stephengpope/no-code-architects-toolkit" -> "coleam00/ottomator-agents"
"stephengpope/no-code-architects-toolkit" -> "coleam00/ai-agents-masterclass"
"stephengpope/no-code-architects-toolkit" -> "restyler/awesome-n8n"
"stephengpope/no-code-architects-toolkit" -> "gyoridavid/short-video-maker"
"stephengpope/no-code-architects-toolkit" -> "gyoridavid/ai_agents_az"
"stephengpope/no-code-architects-toolkit" -> "jgravelle/pocketgroq"
"stephengpope/no-code-architects-toolkit" -> "jgravelle/AutoGroq"
"stephengpope/no-code-architects-toolkit" -> "VRSEN/agency-swarm"
"stephengpope/no-code-architects-toolkit" -> "ai-christianson/RA.Aid"
"stephengpope/no-code-architects-toolkit" -> "upstash/context7"
"business-science/awesome-generative-ai-data-scientist" -> "business-science/ai-data-science-team"
"business-science/awesome-generative-ai-data-scientist" -> "business-science/free-ai-tips"
"business-science/awesome-generative-ai-data-scientist" -> "business-science/pytimetk" ["e"=1]
"business-science/awesome-generative-ai-data-scientist" -> "quant-science/sunday-quant-scientist" ["e"=1]
"business-science/awesome-generative-ai-data-scientist" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" ["e"=1]
"business-science/awesome-generative-ai-data-scientist" -> "philschmid/gemini-samples"
"business-science/awesome-generative-ai-data-scientist" -> "ucbepic/docetl"
"business-science/awesome-generative-ai-data-scientist" -> "tjmlabs/ColiVara"
"business-science/awesome-generative-ai-data-scientist" -> "MotiaDev/motia"
"business-science/awesome-generative-ai-data-scientist" -> "business-science/free_r_tips" ["e"=1]
"business-science/awesome-generative-ai-data-scientist" -> "neural-maze/ava-whatsapp-agent-course"
"shcherbak-ai/contextgem" -> "chonkie-inc/chonkie"
"shcherbak-ai/contextgem" -> "airweave-ai/airweave"
"shcherbak-ai/contextgem" -> "langwatch/scenario" ["e"=1]
"shcherbak-ai/contextgem" -> "attentionmech/mav" ["e"=1]
"shcherbak-ai/contextgem" -> "VoltAgent/voltagent"
"humanlayer/humanlayer" -> "PrefectHQ/ControlFlow" ["e"=1]
"humanlayer/humanlayer" -> "humanlayer/12-factor-agents"
"humanlayer/humanlayer" -> "wild-card-ai/agents-json"
"humanlayer/humanlayer" -> "humanlayer/agentcontrolplane"
"humanlayer/humanlayer" -> "DAGWorks-Inc/burr"
"humanlayer/humanlayer" -> "BoundaryML/baml"
"humanlayer/humanlayer" -> "KruxAI/ragbuilder"
"humanlayer/humanlayer" -> "panoratech/Panora" ["e"=1]
"codelion/optillm" -> "xjdr-alt/entropix" ["e"=1]
"codelion/optillm" -> "zhentingqi/rStar" ["e"=1]
"codelion/optillm" -> "trotsky1997/MathBlackBox" ["e"=1]
"codelion/optillm" -> "av/harbor" ["e"=1]
"codelion/optillm" -> "huggingface/search-and-learn" ["e"=1]
"codelion/optillm" -> "maitrix-org/llm-reasoners" ["e"=1]
"codelion/optillm" -> "KruxAI/ragbuilder"
"codelion/optillm" -> "bklieger-groq/g1" ["e"=1]
"codelion/optillm" -> "GAIR-NLP/O1-Journey" ["e"=1]
"codelion/optillm" -> "MadcowD/ell"
"codelion/optillm" -> "turboderp-org/exllamav2" ["e"=1]
"codelion/optillm" -> "e-p-armstrong/augmentoolkit" ["e"=1]
"codelion/optillm" -> "arcee-ai/mergekit" ["e"=1]
"codelion/optillm" -> "katanemo/archgw"
"codelion/optillm" -> "TheBlewish/Automated-AI-Web-Researcher-Ollama"
"RayFernando1337/llm-cursor-rules" -> "s-smits/agentic-cursorrules"
"RayFernando1337/llm-cursor-rules" -> "tom-doerr/dotfiles"
"RayFernando1337/llm-cursor-rules" -> "udecode/dotai"
"RayFernando1337/llm-cursor-rules" -> "RayFernando1337/MLX-Auto-Subtitled-Video-Generator" ["e"=1]
"RayFernando1337/llm-cursor-rules" -> "grp06/cursor-boost"
"RayFernando1337/llm-cursor-rules" -> "mckaywrigley/o1-xml-parser"
"RayFernando1337/llm-cursor-rules" -> "mendableai/llmstxt-generator"
"RayFernando1337/llm-cursor-rules" -> "mckaywrigley/mckays-app-template"
"RayFernando1337/llm-cursor-rules" -> "nolly-studio/ai-chatbot-supabase"
"RayFernando1337/llm-cursor-rules" -> "specstoryai/getspecstory"
"RayFernando1337/llm-cursor-rules" -> "sullyo/webapp-starter"
"RayFernando1337/llm-cursor-rules" -> "sullyo/prompt2ui"
"RayFernando1337/llm-cursor-rules" -> "snarktank/ai-dev-tasks"
"RayFernando1337/llm-cursor-rules" -> "mckaywrigley/o1-ai-playground"
"OpenBMB/IoA" -> "mikekelly/AgentK"
"OpenBMB/IoA" -> "WooooDyy/AgentGym" ["e"=1]
"OpenBMB/IoA" -> "zorazrw/agent-workflow-memory" ["e"=1]
"OpenBMB/IoA" -> "zjunlp/OmniThink" ["e"=1]
"OpenBMB/IoA" -> "IntelLabs/RAG-FiT"
"OpenBMB/IoA" -> "plageon/HtmlRAG" ["e"=1]
"OpenBMB/IoA" -> "thunlp/LEGENT" ["e"=1]
"OpenBMB/IoA" -> "OpenBMB/ProAgent" ["e"=1]
"OpenBMB/IoA" -> "THUDM/LongWriter"
"OpenBMB/IoA" -> "thunlp/Optima"
"OpenBMB/IoA" -> "StreetLamb/tribe"
"OpenBMB/IoA" -> "ShengranHu/ADAS"
"OpenBMB/IoA" -> "thinkwee/iAgents"
"OpenBMB/IoA" -> "chrschy/fact-finder"
"Azzedde/paper_to_podcast" -> "Azzedde/brainstormers"
"Azzedde/paper_to_podcast" -> "multinear-demo/demo-bank-support-lc-py"
"Azzedde/paper_to_podcast" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"Azzedde/paper_to_podcast" -> "alonlavian/RAGent"
"Azzedde/paper_to_podcast" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"Azzedde/paper_to_podcast" -> "souzatharsis/podcastfy"
"Azzedde/paper_to_podcast" -> "langchain-ai/company-researcher"
"Azzedde/paper_to_podcast" -> "starpig1129/DATAGEN"
"Azzedde/paper_to_podcast" -> "hrithikkoduri/WebRover"
"Azzedde/paper_to_podcast" -> "langchain-ai/social-media-agent"
"Azzedde/paper_to_podcast" -> "KruxAI/ragbuilder"
"Azzedde/paper_to_podcast" -> "LERM0/LermoAI"
"Azzedde/paper_to_podcast" -> "cnunescoelho/kiroku"
"Azzedde/paper_to_podcast" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"Azzedde/paper_to_podcast" -> "artnoage/Podcast"
"gensx-inc/gensx" -> "orra-dev/orra"
"TEN-framework/ten_framework.bak" -> "TEN-framework/ten-framework"
"TEN-framework/ten_framework.bak" -> "AgoraIO/openai-realtime-python" ["e"=1]
"TEN-framework/ten_framework.bak" -> "AgoraIO/API-Examples" ["e"=1]
"pipecat-ai/pipecat-flows" -> "pipecat-ai/smart-turn"
"pipecat-ai/pipecat-flows" -> "daily-demos/daily-bots-web-demo"
"pipecat-ai/pipecat-flows" -> "pipecat-ai/pipecat-client-web"
"pipecat-ai/pipecat-flows" -> "pipecat-ai/docs"
"pipecat-ai/pipecat-flows" -> "pipecat-ai/open-sesame"
"pipecat-ai/pipecat-flows" -> "pipecat-ai/gemini-multimodal-live-demo"
"character-ai/prompt-poet" -> "YassKhazzan/openperplex_backend_os"
"character-ai/prompt-poet" -> "neo4j-labs/llm-graph-builder"
"character-ai/prompt-poet" -> "InternLM/lagent" ["e"=1]
"character-ai/prompt-poet" -> "anysphere/priompt"
"character-ai/prompt-poet" -> "ucbepic/docetl"
"character-ai/prompt-poet" -> "arcee-ai/DistillKit" ["e"=1]
"character-ai/prompt-poet" -> "octotools/octotools"
"character-ai/prompt-poet" -> "cohere-ai/cohere-toolkit"
"character-ai/prompt-poet" -> "FSoft-AI4Code/AgileCoder"
"character-ai/prompt-poet" -> "IntelLabs/RAG-FiT"
"character-ai/prompt-poet" -> "microsoft/PromptWizard"
"character-ai/prompt-poet" -> "starpig1129/DATAGEN"
"character-ai/prompt-poet" -> "sarthakrastogi/quality-prompts"
"character-ai/prompt-poet" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"character-ai/prompt-poet" -> "ShengranHu/ADAS"
"MinishLab/model2vec" -> "MinishLab/semhash"
"MinishLab/model2vec" -> "chonkie-ai/chonkie"
"MinishLab/model2vec" -> "MinishLab/vicinity"
"MinishLab/model2vec" -> "urchade/GLiNER"
"MinishLab/model2vec" -> "huggingface/setfit" ["e"=1]
"MinishLab/model2vec" -> "koaning/embetter" ["e"=1]
"MinishLab/model2vec" -> "xhluca/bm25s"
"MinishLab/model2vec" -> "dleemiller/WordLlama"
"MinishLab/model2vec" -> "AnswerDotAI/ModernBERT"
"MinishLab/model2vec" -> "AnswerDotAI/rerankers"
"MinishLab/model2vec" -> "langwatch/langwatch"
"MinishLab/model2vec" -> "chonkie-inc/chonkie"
"MinishLab/model2vec" -> "McGill-NLP/llm2vec" ["e"=1]
"MinishLab/model2vec" -> "MinishLab/tokenlearn"
"MinishLab/model2vec" -> "AnswerDotAI/RAGatouille"
"Nutlope/napkins" -> "Nutlope/turboseek"
"Nutlope/napkins" -> "Nutlope/description-generator"
"Nutlope/napkins" -> "Nutlope/llamatutor"
"Nutlope/napkins" -> "Nutlope/llamacoder"
"Nutlope/napkins" -> "Nutlope/blinkshot"
"Nutlope/napkins" -> "Nutlope/explorecareers"
"Nutlope/napkins" -> "e2b-dev/fragments"
"Nutlope/napkins" -> "Nutlope/pdftochat"
"Nutlope/napkins" -> "marlaman/show-me"
"Nutlope/napkins" -> "Nutlope/self.so" ["e"=1]
"Nutlope/napkins" -> "Doriandarko/omni-engineer"
"Nutlope/napkins" -> "YassKhazzan/openperplex_backend_os"
"Nutlope/napkins" -> "kturung/langgraph_streamlit_codeassistant"
"Nutlope/napkins" -> "udecode/dotai"
"Nutlope/napkins" -> "Nutlope/loras-dev"
"explosion/spacy-layout" -> "theirstory/gliner-spacy"
"explosion/spacy-layout" -> "tomaarsen/SpanMarkerNER"
"explosion/spacy-layout" -> "explosion/spacy-llm"
"explosion/spacy-layout" -> "urchade/GLiNER"
"explosion/spacy-layout" -> "jackboyla/GLiREL"
"explosion/spacy-layout" -> "MartinoMensio/spacy-universal-sentence-encoder"
"explosion/spacy-layout" -> "explosion/weasel"
"explosion/spacy-layout" -> "argilla-io/spacy-wordnet" ["e"=1]
"Softlandia-Ltd/vision-is-all-you-need" -> "denser-org/denser-chat"
"Softlandia-Ltd/vision-is-all-you-need" -> "multinear-demo/demo-bank-support-lc-py"
"neural-maze/agentic-patterns-course" -> "neural-maze/ava-whatsapp-agent-course"
"neural-maze/agentic-patterns-course" -> "neural-maze/philoagents-course"
"neural-maze/agentic-patterns-course" -> "neural-maze/rick-llm"
"neural-maze/agentic-patterns-course" -> "callmesora/llmops-python-package"
"neural-maze/agentic-patterns-course" -> "PacktPublishing/LLM-Engineers-Handbook"
"neural-maze/agentic-patterns-course" -> "decodingml/second-brain-ai-assistant-course"
"neural-maze/agentic-patterns-course" -> "SylphAI-Inc/AdalFlow"
"neural-maze/agentic-patterns-course" -> "SylphAI-Inc/LLM-engineer-handbook"
"neural-maze/agentic-patterns-course" -> "decodingml/llm-twin-course"
"neural-maze/agentic-patterns-course" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"neural-maze/agentic-patterns-course" -> "fmind/mlops-python-package"
"neural-maze/agentic-patterns-course" -> "llmgenai/LLMInterviewQuestions"
"neural-maze/agentic-patterns-course" -> "decodingml/personalized-recommender-course"
"neural-maze/agentic-patterns-course" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"neural-maze/agentic-patterns-course" -> "dynamiq-ai/dynamiq"
"microsoft/PIKE-RAG" -> "OSU-NLP-Group/HippoRAG"
"microsoft/PIKE-RAG" -> "OpenSPG/KAG"
"microsoft/PIKE-RAG" -> "gusye1234/nano-graphrag"
"microsoft/PIKE-RAG" -> "HKUDS/MiniRAG"
"microsoft/PIKE-RAG" -> "zilliztech/deep-searcher"
"microsoft/PIKE-RAG" -> "microsoft/KBLaM"
"microsoft/PIKE-RAG" -> "OpenSPG/openspg"
"microsoft/PIKE-RAG" -> "langchain-ai/open_deep_research"
"microsoft/PIKE-RAG" -> "microsoft/PromptWizard"
"microsoft/PIKE-RAG" -> "Alibaba-NLP/ViDoRAG" ["e"=1]
"microsoft/PIKE-RAG" -> "RUC-NLPIR/FlashRAG"
"microsoft/PIKE-RAG" -> "memodb-io/memobase"
"microsoft/PIKE-RAG" -> "severian42/GraphRAG-Local-UI"
"microsoft/PIKE-RAG" -> "theworldofagents/Agentic-Reasoning" ["e"=1]
"microsoft/PIKE-RAG" -> "getzep/graphiti"
"zou-group/textgrad" -> "SylphAI-Inc/AdalFlow"
"zou-group/textgrad" -> "stanfordnlp/dspy"
"zou-group/textgrad" -> "OpenAutoCoder/Agentless" ["e"=1]
"zou-group/textgrad" -> "ShengranHu/ADAS"
"zou-group/textgrad" -> "stanfordnlp/pyreft" ["e"=1]
"zou-group/textgrad" -> "maitrix-org/llm-reasoners" ["e"=1]
"zou-group/textgrad" -> "AnswerDotAI/RAGatouille"
"zou-group/textgrad" -> "noahshinn/reflexion" ["e"=1]
"zou-group/textgrad" -> "567-labs/instructor"
"zou-group/textgrad" -> "togethercomputer/MoA"
"zou-group/textgrad" -> "openai/simple-evals" ["e"=1]
"zou-group/textgrad" -> "huggingface/lighteval" ["e"=1]
"zou-group/textgrad" -> "dottxt-ai/outlines"
"zou-group/textgrad" -> "trotsky1997/MathBlackBox" ["e"=1]
"zou-group/textgrad" -> "confident-ai/deepeval"
"e2b-dev/open-computer-use" -> "e2b-dev/desktop"
"e2b-dev/open-computer-use" -> "trycua/acu"
"e2b-dev/open-computer-use" -> "showlab/computer_use_ootb" ["e"=1]
"e2b-dev/open-computer-use" -> "AmberSahdev/Open-Interface"
"e2b-dev/open-computer-use" -> "e2b-dev/surf"
"e2b-dev/open-computer-use" -> "AK391/ai-gradio"
"e2b-dev/open-computer-use" -> "browserbase/open-operator"
"e2b-dev/open-computer-use" -> "13point5/gemini-cursor"
"e2b-dev/open-computer-use" -> "ranpox/awesome-computer-use" ["e"=1]
"e2b-dev/open-computer-use" -> "AgentOps-AI/AgentStack"
"e2b-dev/open-computer-use" -> "showlab/ShowUI" ["e"=1]
"e2b-dev/open-computer-use" -> "steel-dev/steel-browser"
"e2b-dev/open-computer-use" -> "e2b-dev/code-interpreter"
"e2b-dev/open-computer-use" -> "e2b-dev/e2b-cookbook"
"e2b-dev/open-computer-use" -> "Doriandarko/deepseek-engineer"
"sammcj/gollama" -> "sammcj/llamalink"
"sammcj/gollama" -> "Les-El/Ollm-Bridge"
"sammcj/gollama" -> "technovangelist/videoprojects"
"sammcj/gollama" -> "Gaurav-Gosain/gollama"
"sammcj/gollama" -> "sammcj/ingest"
"sammcj/gollama" -> "ggozad/oterm"
"sammcj/gollama" -> "bernardo-bruning/ollama-copilot"
"sammcj/gollama" -> "av/harbor" ["e"=1]
"sammcj/gollama" -> "technovangelist/ollamamodelupdater"
"sammcj/gollama" -> "TilmanGriesel/chipper"
"sammcj/gollama" -> "eelbaz/ollama-lmstudio-bridge"
"sammcj/gollama" -> "dezoito/ollama-grid-search" ["e"=1]
"sammcj/gollama" -> "fmaclen/hollama"
"sammcj/gollama" -> "paulrobello/parllama"
"sammcj/gollama" -> "gluonfield/enchanted" ["e"=1]
"mckaywrigley/buildware-ai" -> "udecode/dotai"
"mckaywrigley/buildware-ai" -> "mckaywrigley/ai-router-chat"
"mckaywrigley/buildware-ai" -> "mckaywrigley/r1-automated-pr-example"
"mckaywrigley/buildware-ai" -> "mckaywrigley/repo-chat" ["e"=1]
"mckaywrigley/buildware-ai" -> "mckaywrigley/mckays-app-template"
"mckaywrigley/buildware-ai" -> "sullyo/prompt2ui"
"mckaywrigley/buildware-ai" -> "Doriandarko/omni-engineer"
"mckaywrigley/buildware-ai" -> "mckaywrigley/ai-brainstore" ["e"=1]
"mckaywrigley/buildware-ai" -> "transitive-bullshit/openai-realtime-api" ["e"=1]
"mckaywrigley/buildware-ai" -> "mckaywrigley/prompts" ["e"=1]
"mckaywrigley/buildware-ai" -> "vercel-labs/ai-sdk-slackbot"
"mckaywrigley/buildware-ai" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"mckaywrigley/buildware-ai" -> "1mrat/cursor"
"mckaywrigley/buildware-ai" -> "andrewgcodes/repo2prompt"
"mckaywrigley/buildware-ai" -> "mckaywrigley/o1-ai-playground"
"daily-demos/daily-bots-web-demo" -> "pipecat-ai/pipecat-client-web"
"daily-demos/daily-bots-web-demo" -> "pipecat-ai/open-sesame"
"daily-demos/daily-bots-web-demo" -> "pipecat-ai/gemini-multimodal-live-demo"
"daily-demos/daily-bots-web-demo" -> "daily-demos/rtvi-client-android-demo"
"daily-demos/daily-bots-web-demo" -> "ai-bot-pro/achatbot"
"daily-demos/daily-bots-web-demo" -> "pipecat-ai/pipecat-flows"
"daily-demos/daily-bots-web-demo" -> "pipecat-ai/rtvi-web-demo"
"marlaman/show-me" -> "ShoggothAI/motleycrew"
"marlaman/show-me" -> "yoheinakajima/babyagi-2o"
"marlaman/show-me" -> "Nutlope/napkins"
"marlaman/show-me" -> "lamm-mit/PDF2Audio"
"marlaman/show-me" -> "get-salt-AI/SaltAI_Language_Toolkit"
"marlaman/show-me" -> "opensouls/philip-the-filereader"
"marlaman/show-me" -> "virattt/financial-agent-ui"
"marlaman/show-me" -> "e2b-dev/e2b-cookbook"
"skapadia3214/groq-moa" -> "AnswerDotAI/gpu.cpp" ["e"=1]
"skapadia3214/groq-moa" -> "togethercomputer/MoA"
"skapadia3214/groq-moa" -> "jgravelle/AutoGroq"
"skapadia3214/groq-moa" -> "jgravelle/pocketgroq"
"skapadia3214/groq-moa" -> "Bklieger/infinite-bookshelf"
"skapadia3214/groq-moa" -> "groq/groq-api-cookbook"
"skapadia3214/groq-moa" -> "lm-sys/RouteLLM"
"skapadia3214/groq-moa" -> "frdel/agent-zero"
"skapadia3214/groq-moa" -> "Doriandarko/omni-engineer"
"skapadia3214/groq-moa" -> "Doriandarko/maestro"
"skapadia3214/groq-moa" -> "SawyerHood/tlbrowse"
"skapadia3214/groq-moa" -> "a-real-ai/pywinassistant"
"skapadia3214/groq-moa" -> "jgravelle/Groqqle"
"skapadia3214/groq-moa" -> "run-llama/llama_deploy"
"skapadia3214/groq-moa" -> "YassKhazzan/openperplex_backend_os"
"AllAboutAI-YT/real_time_website_b" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/real_time_website_b" -> "AllAboutAI-YT/claude-artifact-prompts"
"AllAboutAI-YT/real_time_website_b" -> "AllAboutAI-YT/claude-chrome-ex"
"AllAboutAI-YT/real_time_website_b" -> "AllAboutAI-YT/hackernews-llm-search"
"AllAboutAI-YT/real_time_website_b" -> "AllAboutAI-YT/ai-engineer-project1"
"postgresml/korvus" -> "TrafficGuard/typedai"
"postgresml/korvus" -> "palico-ai/palico-ai" ["e"=1]
"postgresml/korvus" -> "rectanglehq/Shapeshift" ["e"=1]
"postgresml/korvus" -> "ChuckHend/pg_vectorize" ["e"=1]
"postgresml/korvus" -> "truefoundry/cognita"
"postgresml/korvus" -> "postgresml/postgresml" ["e"=1]
"postgresml/korvus" -> "JSv4/OpenContracts"
"postgresml/korvus" -> "tegonhq/tegon" ["e"=1]
"postgresml/korvus" -> "taubyte/tau" ["e"=1]
"postgresml/korvus" -> "Dataherald/dataherald" ["e"=1]
"postgresml/korvus" -> "KruxAI/ragbuilder"
"postgresml/korvus" -> "SciPhi-AI/R2R"
"postgresml/korvus" -> "D-Star-AI/dsRAG"
"postgresml/korvus" -> "chonkie-ai/chonkie"
"postgresml/korvus" -> "dorklyorg/dorkly"
"trypear/pearai-master" -> "trypear/pearai-app"
"trypear/pearai-master" -> "trypear/pearai-submodule"
"trypear/pearai-master" -> "trypear/pear-landing-page"
"trypear/pearai-master" -> "trypear/pearai-app-archive"
"trypear/pearai-master" -> "trypear/pearai-documentation"
"bracesproul/gen-ui-python" -> "bracesproul/gen-ui"
"bracesproul/gen-ui-python" -> "langchain-ai/langgraphjs-gen-ui-examples"
"bracesproul/gen-ui-python" -> "tevslin/meeting-reporter"
"bracesproul/gen-ui-python" -> "emarco177/langgraph-course"
"bracesproul/gen-ui-python" -> "langchain-ai/react-voice-agent" ["e"=1]
"bracesproul/gen-ui-python" -> "assistant-ui/assistant-ui-stockbroker"
"bracesproul/gen-ui-python" -> "virattt/financial-agent-ui"
"shegongku2024/TG_shegongku" -> "shegongku2024/TGshegongku"
"shegongku2024/TG_shegongku" -> "blxsi/LBX-Grabber"
"shegongku2024/TG_shegongku" -> "DevHuxley/How-to-create-honeypot-token"
"shegongku2024/TGshegongku" -> "blxsi/LBX-Grabber"
"shegongku2024/TGshegongku" -> "shegongku2024/TG_shegongku"
"blxsi/LBX-Grabber" -> "shegongku2024/TGshegongku"
"blxsi/LBX-Grabber" -> "shegongku2024/TG_shegongku"
"PiotrNawrot/nano-sparse-attention" -> "PiotrNawrot/dynamic-pooling"
"1mrat/cursor" -> "udecode/dotai"
"ksachdeva/langchain-graphrag" -> "noworneverev/graphrag-api"
"vercel/ai-sdk-rag-starter" -> "vercel-labs/ai-sdk-preview-rag"
"vercel/ai-sdk-rag-starter" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"vercel/ai-sdk-rag-starter" -> "vercel-labs/ai-sdk-preview-use-object"
"vercel/ai-sdk-rag-starter" -> "vercel-labs/ai-sdk-preview-roundtrips"
"PromtEngineer/Verbi" -> "3choff/FastWhisperAPI"
"PromtEngineer/Verbi" -> "jgravelle/AutoGroq"
"PromtEngineer/Verbi" -> "PromtEngineer/localGPT-Vision"
"PromtEngineer/Verbi" -> "a-real-ai/pywinassistant"
"PromtEngineer/Verbi" -> "bigsk1/voice-chat-ai"
"PromtEngineer/Verbi" -> "MervinPraison/PraisonAI"
"PromtEngineer/Verbi" -> "gkamradt/QuickAgent" ["e"=1]
"PromtEngineer/Verbi" -> "brainqub3/jar3d_meta_expert"
"PromtEngineer/Verbi" -> "Doriandarko/omni-engineer"
"PromtEngineer/Verbi" -> "VRSEN/agency-swarm"
"PromtEngineer/Verbi" -> "mikekelly/AgentK"
"PromtEngineer/Verbi" -> "disler/poc-realtime-ai-assistant"
"PromtEngineer/Verbi" -> "lamm-mit/PDF2Audio"
"PromtEngineer/Verbi" -> "SawyerHood/tlbrowse"
"PromtEngineer/Verbi" -> "Doriandarko/maestro"
"vercel-labs/semantic-image-search" -> "vercel-labs/ai-sdk-preview-rag"
"vercel-labs/semantic-image-search" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"vercel-labs/semantic-image-search" -> "vercel-labs/ai-sdk-preview-roundtrips"
"vercel-labs/semantic-image-search" -> "vercel-labs/vercel-nav-demo"
"illuin-tech/colpali" -> "AnswerDotAI/byaldi"
"illuin-tech/colpali" -> "tonywu71/colpali-cookbooks"
"illuin-tech/colpali" -> "illuin-tech/vidore-benchmark"
"illuin-tech/colpali" -> "AnswerDotAI/RAGatouille"
"illuin-tech/colpali" -> "OpenBMB/VisRAG"
"illuin-tech/colpali" -> "adithya-s-k/VARAG"
"illuin-tech/colpali" -> "merveenoyan/smol-vision"
"illuin-tech/colpali" -> "AnswerDotAI/rerankers"
"illuin-tech/colpali" -> "xhluca/bm25s"
"illuin-tech/colpali" -> "tjmlabs/ColiVara"
"illuin-tech/colpali" -> "michaelfeil/infinity"
"illuin-tech/colpali" -> "stanford-futuredata/ColBERT" ["e"=1]
"illuin-tech/colpali" -> "PromtEngineer/localGPT-Vision"
"illuin-tech/colpali" -> "ucbepic/docetl"
"illuin-tech/colpali" -> "X-PLUG/mPLUG-DocOwl" ["e"=1]
"AnswerDotAI/ModernBERT" -> "lightonai/pylate"
"AnswerDotAI/ModernBERT" -> "AnswerDotAI/rerankers"
"AnswerDotAI/ModernBERT" -> "xhluca/bm25s"
"AnswerDotAI/ModernBERT" -> "huggingface/setfit" ["e"=1]
"AnswerDotAI/ModernBERT" -> "nomic-ai/contrastors" ["e"=1]
"AnswerDotAI/ModernBERT" -> "McGill-NLP/llm2vec" ["e"=1]
"AnswerDotAI/ModernBERT" -> "AnswerDotAI/RAGatouille"
"AnswerDotAI/ModernBERT" -> "facebookresearch/blt" ["e"=1]
"AnswerDotAI/ModernBERT" -> "MinishLab/model2vec"
"AnswerDotAI/ModernBERT" -> "stanford-futuredata/ColBERT" ["e"=1]
"AnswerDotAI/ModernBERT" -> "MinishLab/semhash"
"AnswerDotAI/ModernBERT" -> "urchade/GLiNER"
"AnswerDotAI/ModernBERT" -> "illuin-tech/colpali"
"AnswerDotAI/ModernBERT" -> "argilla-io/distilabel" ["e"=1]
"AnswerDotAI/ModernBERT" -> "huggingface/lighteval" ["e"=1]
"sentient-engineering/agent-q" -> "sentient-engineering/sentient"
"sentient-engineering/agent-q" -> "joshpocock/Stride-AI-Agents"
"sentient-engineering/agent-q" -> "mikekelly/AgentK"
"sentient-engineering/agent-q" -> "Openmacro/openmacro"
"sentient-engineering/agent-q" -> "EmergenceAI/Agent-E"
"sentient-engineering/agent-q" -> "Doriandarko/omni-engineer"
"sentient-engineering/agent-q" -> "brainqub3/jar3d_meta_expert"
"sentient-engineering/agent-q" -> "tinyfish-io/agentql"
"sentient-engineering/agent-q" -> "zorazrw/agent-workflow-memory" ["e"=1]
"sentient-engineering/agent-q" -> "jgravelle/AutoGroq"
"ahmad2b/postbot3000" -> "agdev/Langgraph"
"ahmad2b/postbot3000" -> "cnunescoelho/kiroku"
"ahmad2b/postbot3000" -> "PaymanAI/langman-examples"
"ahmad2b/postbot3000" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"ahmad2b/postbot3000" -> "langchain-ai/company-researcher"
"ahmad2b/postbot3000" -> "nirbar1985/ai-travel-agent"
"wonderwhy-er/bolt.myaibuilt.app_hosted-Bolt.New-oTToDev" -> "jgravelle/StrawberryGroq"
"wonderwhy-er/bolt.myaibuilt.app_hosted-Bolt.New-oTToDev" -> "jgravelle/pocketgroq"
"wonderwhy-er/bolt.myaibuilt.app_hosted-Bolt.New-oTToDev" -> "jesuscopado/samantha-os1"
"sarthakrastogi/graph-rag" -> "denser-org/denser-retriever"
"sarthakrastogi/quality-prompts" -> "teknium1/Prompt-Engineering-Toolkit"
"sarthakrastogi/quality-prompts" -> "PragmaticMachineLearning/docai"
"sarthakrastogi/quality-prompts" -> "SylphAI-Inc/AdalFlow"
"sarthakrastogi/quality-prompts" -> "FlowTestAI/FlowTest"
"sarthakrastogi/quality-prompts" -> "run-llama/llama_deploy"
"sarthakrastogi/quality-prompts" -> "kturung/langgraph_streamlit_codeassistant"
"sarthakrastogi/quality-prompts" -> "prometheus-eval/prometheus-eval" ["e"=1]
"sarthakrastogi/quality-prompts" -> "zou-group/textgrad"
"sarthakrastogi/quality-prompts" -> "sarthakrastogi/graph-rag"
"sarthakrastogi/quality-prompts" -> "character-ai/prompt-poet"
"sarthakrastogi/quality-prompts" -> "chonkie-ai/chonkie"
"sarthakrastogi/quality-prompts" -> "PrithivirajDamodaran/FlashRank"
"sarthakrastogi/quality-prompts" -> "decodingml/llm-twin-course"
"sarthakrastogi/quality-prompts" -> "ruvnet/sparc" ["e"=1]
"sarthakrastogi/quality-prompts" -> "SapienzaNLP/relik"
"vintasoftware/nextjs-fastapi-template" -> "vintasoftware/medplum-chat-app"
"vintasoftware/nextjs-fastapi-template" -> "Sheldenburg/ai-engineer-template"
"vintasoftware/nextjs-fastapi-template" -> "vintasoftware/django-ai-assistant" ["e"=1]
"vintasoftware/nextjs-fastapi-template" -> "Nneji123/fastapi-nextjs"
"vintasoftware/nextjs-fastapi-template" -> "fixmydjango/fixmydjango" ["e"=1]
"xynehq/xyne" -> "GitHamza0206/simba"
"xynehq/xyne" -> "13point5/gemini-cursor"
"xynehq/xyne" -> "FoloUp/FoloUp"
"xynehq/xyne" -> "CognosysAI/browser"
"xynehq/xyne" -> "clchinkc/stockchat"
"xynehq/xyne" -> "DannyMac180/meta-agent"
"bklieger-groq/stockbot-on-groq" -> "Bklieger/infinite-bookshelf"
"bklieger-groq/stockbot-on-groq" -> "Nutlope/llamatutor"
"bklieger-groq/stockbot-on-groq" -> "Bklieger/ScribeWizard"
"bklieger-groq/stockbot-on-groq" -> "microsoft/MarS" ["e"=1]
"bklieger-groq/stockbot-on-groq" -> "vinay-gatech/stocks-insights-ai-agent"
"bklieger-groq/stockbot-on-groq" -> "virattt/ai-financial-agent"
"bklieger-groq/stockbot-on-groq" -> "vercel-labs/gemini-chatbot"
"bklieger-groq/stockbot-on-groq" -> "harry0703/AudioNotes" ["e"=1]
"bklieger-groq/stockbot-on-groq" -> "upstash/wikipedia-semantic-search"
"bklieger-groq/stockbot-on-groq" -> "kkangert/kspider" ["e"=1]
"bklieger-groq/stockbot-on-groq" -> "bklieger-groq/g1" ["e"=1]
"bklieger-groq/stockbot-on-groq" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"bklieger-groq/stockbot-on-groq" -> "memfreeme/memfree"
"bklieger-groq/stockbot-on-groq" -> "Yusuke710/nanoPerplexityAI" ["e"=1]
"bklieger-groq/stockbot-on-groq" -> "refly-ai/refly"
"stripe/agent-toolkit" -> "cloudflare/mcp-server-cloudflare"
"stripe/agent-toolkit" -> "ZubeidHendricks/youtube-mcp-server" ["e"=1]
"stripe/agent-toolkit" -> "mendableai/firecrawl-mcp-server"
"stripe/agent-toolkit" -> "ppl-ai/modelcontextprotocol"
"stripe/agent-toolkit" -> "browserbase/open-operator"
"thepersonalaicompany/amurex-backend" -> "thepersonalaicompany/amurex-web"
"thedaviddias/indie-dev-toolkit" -> "thedaviddias/links-base"
"thedaviddias/indie-dev-toolkit" -> "thedaviddias/llms-txt-hub"
"DracoR22/handi-cat_wallet-tracker" -> "vvizardev/telegram-wallet-tracking-bot-v1.0"
"DracoR22/handi-cat_wallet-tracker" -> "kiryl-sol/solana-wallet-tracker"
"DracoR22/handi-cat_wallet-tracker" -> "Glooring/SolanaTrackerBot"
"DracoR22/handi-cat_wallet-tracker" -> "1f1n/Dragon"
"DracoR22/handi-cat_wallet-tracker" -> "digbenjamins/SolanaWalletTracker"
"DracoR22/handi-cat_wallet-tracker" -> "v0idum/solana_tracker_bot"
"DracoR22/handi-cat_wallet-tracker" -> "YZYLAB/solana-trade-bot" ["e"=1]
"AnswerDotAI/FastHTML-Gallery" -> "AnswerDotAI/fh-deploy"
"AnswerDotAI/FastHTML-Gallery" -> "CarloLepelaars/fh-plotly"
"LERM0/LermoAI" -> "PaymanAI/langman-examples"
"LERM0/LermoAI" -> "gotohuman/gotohuman-langgraph-lead-example"
"PragmaticMachineLearning/docai" -> "AnswerDotAI/byaldi"
"PragmaticMachineLearning/docai" -> "AuvaLab/itext2kg" ["e"=1]
"PragmaticMachineLearning/docai" -> "saurabhlalsaxena/Perplexity-Clone-v0.1"
"PragmaticMachineLearning/docai" -> "velocitybolt/open-extract"
"PragmaticMachineLearning/docai" -> "jank/curiosity"
"simonmysun/ell" -> "coder/agentapi"
"oluwatunmiisheii/react-smart-conditional" -> "Webinix-dev/webinix"
"Andrew-Jang/RAGHub" -> "trustgraph-ai/trustgraph"
"Andrew-Jang/RAGHub" -> "FutureClubNL/RAGMeUp"
"Andrew-Jang/RAGHub" -> "Emissary-Tech/legit-rag"
"Andrew-Jang/RAGHub" -> "morphik-org/morphik-core"
"Andrew-Jang/RAGHub" -> "rmusser01/tldw" ["e"=1]
"Andrew-Jang/RAGHub" -> "KruxAI/ragbuilder"
"Andrew-Jang/RAGHub" -> "D-Star-AI/dsRAG"
"Andrew-Jang/RAGHub" -> "lesteroliver911/contextual-doc-retrieval-opneai-reranker"
"Andrew-Jang/RAGHub" -> "athina-ai/rag-cookbooks"
"Andrew-Jang/RAGHub" -> "Marker-Inc-Korea/AutoRAG"
"Andrew-Jang/RAGHub" -> "felladrin/awesome-ai-web-search"
"Andrew-Jang/RAGHub" -> "pengfeng/ask.py"
"Andrew-Jang/RAGHub" -> "FareedKhan-dev/all-rag-techniques"
"Andrew-Jang/RAGHub" -> "av/harbor" ["e"=1]
"Andrew-Jang/RAGHub" -> "BragAI/bRAG-langchain"
"lee88688/aider-composer" -> "disler/single-file-agents"
"coder/picopilot" -> "ericpaulsen/coder-aks"
"coder/picopilot" -> "coder/redjet"
"coder/picopilot" -> "coder/aicommit"
"coder/picopilot" -> "coder/exectrace"
"coder/picopilot" -> "coder/envbox"
"coder/picopilot" -> "coder/envbuilder"
"coder/picopilot" -> "coder/retry"
"coder/picopilot" -> "coder/backstage-plugins"
"coder/picopilot" -> "matifali/update-coder-template"
"coder/picopilot" -> "coder/coder-logstream-kube"
"coder/picopilot" -> "coder/labeler"
"coder/picopilot" -> "coder/vscode-coder"
"coder/picopilot" -> "coder/code-marketplace"
"coder/picopilot" -> "coder/modules"
"coder/picopilot" -> "coder/serpent"
"cartesia-ai/cartesia-js" -> "cartesia-ai/cartesia-python"
"FutureClubNL/RAGMeUp" -> "KruxAI/ragbuilder"
"FutureClubNL/RAGMeUp" -> "trustgraph-ai/trustgraph"
"FutureClubNL/RAGMeUp" -> "Andrew-Jang/RAGHub"
"FutureClubNL/RAGMeUp" -> "AI-Commandos/LLaMa2lang"
"FutureClubNL/RAGMeUp" -> "morphik-org/morphik-core"
"FutureClubNL/RAGMeUp" -> "D-Star-AI/dsRAG"
"FutureClubNL/RAGMeUp" -> "Emissary-Tech/legit-rag"
"FutureClubNL/RAGMeUp" -> "IntelLabs/RAG-FiT"
"FutureClubNL/RAGMeUp" -> "NirDiamant/Controllable-RAG-Agent"
"FutureClubNL/RAGMeUp" -> "YassKhazzan/openperplex_backend_os"
"FutureClubNL/RAGMeUp" -> "neuml/rag" ["e"=1]
"FutureClubNL/RAGMeUp" -> "emcf/thepipe"
"FutureClubNL/RAGMeUp" -> "rmusser01/tldw" ["e"=1]
"FutureClubNL/RAGMeUp" -> "ajac-zero/example-rag-app"
"FutureClubNL/RAGMeUp" -> "open-webui/openapi-servers" ["e"=1]
"lotus-data/lotus" -> "TAG-Research/TAG-Bench"
"lotus-data/lotus" -> "ucbepic/docetl"
"lotus-data/lotus" -> "mitdbg/palimpzest"
"lotus-data/lotus" -> "AnswerDotAI/byaldi"
"lotus-data/lotus" -> "SylphAI-Inc/AdalFlow"
"lotus-data/lotus" -> "BrainBlend-AI/atomic-agents"
"lotus-data/lotus" -> "zou-group/textgrad"
"lotus-data/lotus" -> "illuin-tech/colpali"
"lotus-data/lotus" -> "langwatch/langwatch"
"lotus-data/lotus" -> "MinishLab/model2vec"
"lotus-data/lotus" -> "predibase/lorax" ["e"=1]
"lotus-data/lotus" -> "PrefectHQ/ControlFlow" ["e"=1]
"lotus-data/lotus" -> "weAIDB/awsome-data-llm" ["e"=1]
"lotus-data/lotus" -> "tjmlabs/ColiVara"
"lotus-data/lotus" -> "enoch3712/ExtractThinker"
"john-adeojo/graph_websearch_agent" -> "brainqub3/jar3d_meta_expert"
"john-adeojo/graph_websearch_agent" -> "langchain-ai/langgraph-example"
"john-adeojo/graph_websearch_agent" -> "kturung/langgraph_streamlit_codeassistant"
"john-adeojo/graph_websearch_agent" -> "john-adeojo/custom_websearch_agent"
"john-adeojo/graph_websearch_agent" -> "liuyanqun0815/langgraph_fly_base"
"john-adeojo/graph_websearch_agent" -> "john-adeojo/custom_agent_tutorial"
"john-adeojo/graph_websearch_agent" -> "LangGraph-GUI/LangGraph-GUI-backend"
"john-adeojo/graph_websearch_agent" -> "emarco177/langgraph-course"
"john-adeojo/graph_websearch_agent" -> "emarco177/langgraph-customer-support"
"john-adeojo/graph_websearch_agent" -> "brucechou1983/chainlit_langgraph"
"john-adeojo/graph_websearch_agent" -> "jwa91/LangGraph-Expense-Tracker"
"john-adeojo/graph_websearch_agent" -> "kaymen99/langgraph-email-automation"
"jjleng/sensei" -> "p-e-w/arrows" ["e"=1]
"jjleng/sensei" -> "Omniplex-ai/omniplex"
"jjleng/sensei" -> "upstash/wikipedia-semantic-search"
"jjleng/sensei" -> "DiscovAI/DiscovAI-search"
"wisupai/e2m" -> "Jing-yilin/E2M"
"wisupai/e2m" -> "echohive42/AI-reads-books-page-by-page"
"wisupai/e2m" -> "whyhow-ai/knowledge-graph-studio"
"wisupai/e2m" -> "imanoop7/Ollama-OCR"
"wisupai/e2m" -> "CatchTheTornado/text-extract-api"
"wisupai/e2m" -> "gcui-art/markdown-to-image" ["e"=1]
"wisupai/e2m" -> "zcaceres/markdownify-mcp"
"wisupai/e2m" -> "exa-labs/company-researcher"
"wisupai/e2m" -> "refly-ai/refly"
"wisupai/e2m" -> "FoloUp/FoloUp"
"wisupai/e2m" -> "rag-web-ui/rag-web-ui" ["e"=1]
"wisupai/e2m" -> "harishsg993010/LLM-Reasoner"
"wisupai/e2m" -> "CosmosShadow/gptpdf"
"wisupai/e2m" -> "memfreeme/memfree"
"wisupai/e2m" -> "federicotorrielli/BetterWhisperX" ["e"=1]
"mlc-ai/web-llm-chat" -> "cfahlgren1/webllm-playground"
"mlc-ai/web-llm-chat" -> "mlc-ai/web-llm-assistant"
"mlc-ai/web-llm-chat" -> "ngxson/wllama"
"mlc-ai/web-llm-chat" -> "mlc-ai/web-llm"
"mlc-ai/web-llm-chat" -> "hrishioa/wasm-ai"
"hananedupouy/LLMs-in-Finance" -> "superlinear-ai/raglite"
"hananedupouy/LLMs-in-Finance" -> "trancethehuman/ai-workshop-code"
"hananedupouy/LLMs-in-Finance" -> "danielleyahalom/company-researcher"
"rocketseat-education/nlw-journey-nodejs" -> "rocketseat-education/nlw-journey-react"
"rocketseat-education/nlw-journey-nodejs" -> "rocketseat-education/nlw-journey-react-native"
"rocketseat-education/nlw-journey-nodejs" -> "rocketseat-education/nlw-journey-devops"
"rocketseat-education/nlw-journey-nodejs" -> "rocketseat-education/nlw-journey-go"
"KruxAI/ragbuilder" -> "NirDiamant/Controllable-RAG-Agent"
"KruxAI/ragbuilder" -> "FutureClubNL/RAGMeUp"
"KruxAI/ragbuilder" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"KruxAI/ragbuilder" -> "StreetLamb/tribe"
"KruxAI/ragbuilder" -> "tensorlakeai/indexify" ["e"=1]
"KruxAI/ragbuilder" -> "PrefectHQ/ControlFlow" ["e"=1]
"KruxAI/ragbuilder" -> "starpig1129/DATAGEN"
"KruxAI/ragbuilder" -> "athina-ai/rag-cookbooks"
"KruxAI/ragbuilder" -> "chonkie-ai/chonkie"
"KruxAI/ragbuilder" -> "Marker-Inc-Korea/AutoRAG"
"KruxAI/ragbuilder" -> "codelion/optillm"
"KruxAI/ragbuilder" -> "BragAI/bRAG-langchain"
"KruxAI/ragbuilder" -> "run-llama/create-llama"
"KruxAI/ragbuilder" -> "SciPhi-AI/R2R"
"KruxAI/ragbuilder" -> "Andrew-Jang/RAGHub"
"supabase-community/babelfish.ai" -> "x011/SecretPixel" ["e"=1]
"supabase-community/babelfish.ai" -> "upstash/wikipedia-semantic-search"
"supabase-community/babelfish.ai" -> "vxfemboy/ghostport" ["e"=1]
"supabase-community/babelfish.ai" -> "itsOwen/CyberScraper-2077"
"daytonaio/ai-enablement-stack" -> "daytonaio/sdk" ["e"=1]
"daytonaio/ai-enablement-stack" -> "coleam00/local-ai-packaged"
"alebeck/boring" -> "andrearaponi/dito"
"alebeck/boring" -> "byawitz/ggh" ["e"=1]
"alebeck/boring" -> "laktak/zfind" ["e"=1]
"alebeck/boring" -> "destel/rill" ["e"=1]
"alebeck/boring" -> "coder/wush"
"alebeck/boring" -> "Lifailon/lazyjournal" ["e"=1]
"muratcankoylan/AI-Investigator" -> "tom-doerr/perplexity_search"
"muratcankoylan/AI-Investigator" -> "hrithikkoduri/WebRover"
"muratcankoylan/AI-Investigator" -> "langchain-ai/social-media-agent"
"muratcankoylan/AI-Investigator" -> "trancethehuman/ai-workshop-code"
"muratcankoylan/AI-Investigator" -> "adithya-s-k/VARAG"
"muratcankoylan/AI-Investigator" -> "samwit/agent_tutorials"
"muratcankoylan/AI-Investigator" -> "bracesproul/site-rag"
"muratcankoylan/AI-Investigator" -> "argilla-io/synthetic-data-generator" ["e"=1]
"muratcankoylan/AI-Investigator" -> "CognosysAI/browser"
"AnswerDotAI/byaldi" -> "illuin-tech/colpali"
"AnswerDotAI/byaldi" -> "tonywu71/colpali-cookbooks"
"AnswerDotAI/byaldi" -> "AnswerDotAI/RAGatouille"
"AnswerDotAI/byaldi" -> "AnswerDotAI/rerankers"
"AnswerDotAI/byaldi" -> "merveenoyan/smol-vision"
"AnswerDotAI/byaldi" -> "PragmaticMachineLearning/docai"
"AnswerDotAI/byaldi" -> "PromtEngineer/localGPT-Vision"
"AnswerDotAI/byaldi" -> "adithya-s-k/VARAG"
"AnswerDotAI/byaldi" -> "illuin-tech/vidore-benchmark"
"AnswerDotAI/byaldi" -> "ucbepic/docetl"
"AnswerDotAI/byaldi" -> "lightonai/pylate"
"AnswerDotAI/byaldi" -> "tjmlabs/ColiVara"
"AnswerDotAI/byaldi" -> "AnswerDotAI/claudette"
"AnswerDotAI/byaldi" -> "OpenBMB/VisRAG"
"AnswerDotAI/byaldi" -> "AnswerDotAI/shell_sage"
"svpino/alloy-voice-assistant" -> "svpino/livekit-assistant" ["e"=1]
"svpino/alloy-voice-assistant" -> "pipecat-ai/rtvi-web-demo"
"svpino/alloy-voice-assistant" -> "gan/glm4v-assistant"
"svpino/alloy-voice-assistant" -> "togethercomputer/MoA"
"svpino/alloy-voice-assistant" -> "dsa/fast-voice-assistant" ["e"=1]
"svpino/alloy-voice-assistant" -> "PromtEngineer/Verbi"
"svpino/alloy-voice-assistant" -> "langchain-ai/langgraph-studio"
"svpino/alloy-voice-assistant" -> "a-real-ai/pywinassistant"
"svpino/alloy-voice-assistant" -> "kturung/langgraph_streamlit_codeassistant"
"svpino/alloy-voice-assistant" -> "pipecat-ai/pipecat"
"svpino/alloy-voice-assistant" -> "BasedHardware/OpenGlass"
"svpino/alloy-voice-assistant" -> "evilsocket/cake"
"svpino/alloy-voice-assistant" -> "Doriandarko/maestro"
"svpino/alloy-voice-assistant" -> "CosmosShadow/gptpdf"
"svpino/alloy-voice-assistant" -> "CerebriumAI/examples"
"microsoft/Trace" -> "zou-group/textgrad"
"microsoft/Trace" -> "zorazrw/agent-workflow-memory" ["e"=1]
"gradio-app/openai-gradio" -> "run-llama/mongodb-demo"
"gradio-app/openai-gradio" -> "gradio-app/anthropic-gradio"
"jgravelle/pocketgroq" -> "jgravelle/groqcrawl"
"jgravelle/pocketgroq" -> "jgravelle/Groqqle"
"jgravelle/pocketgroq" -> "jgravelle/GroqCasters"
"jgravelle/pocketgroq" -> "jgravelle/Py2md"
"jgravelle/pocketgroq" -> "jgravelle/StrawberryGroq"
"jgravelle/pocketgroq" -> "jgravelle/MiniGroqqle"
"jgravelle/pocketgroq" -> "jgravelle/Grompt"
"jgravelle/pocketgroq" -> "jgravelle/Grompt_plugin"
"jgravelle/pocketgroq" -> "jgravelle/PocketgroqPKE"
"jgravelle/pocketgroq" -> "jgravelle/AutogroqAgent"
"Lesterpaintstheworld/terminal-velocity" -> "Lesterpaintstheworld/kinos"
"Lesterpaintstheworld/terminal-velocity" -> "DigitalKin-ai/kinos"
"Lesterpaintstheworld/terminal-velocity" -> "virattt/financial-agent-ui"
"Lesterpaintstheworld/terminal-velocity" -> "s-smits/agentic-cursorrules"
"Lesterpaintstheworld/terminal-velocity" -> "ahmad2b/postbot3000"
"Lesterpaintstheworld/terminal-velocity" -> "gabrielchua/open-notebooklm"
"Lesterpaintstheworld/terminal-velocity" -> "awslabs/agent-squad"
"Lesterpaintstheworld/terminal-velocity" -> "mikekelly/AgentK"
"Lesterpaintstheworld/terminal-velocity" -> "YassKhazzan/openperplex_backend_os"
"Lesterpaintstheworld/terminal-velocity" -> "yoheinakajima/ditto"
"Lesterpaintstheworld/terminal-velocity" -> "anysphere/priompt"
"Lesterpaintstheworld/terminal-velocity" -> "KruxAI/ragbuilder"
"Lesterpaintstheworld/terminal-velocity" -> "mckaywrigley/mckays-app-template"
"Lesterpaintstheworld/terminal-velocity" -> "echohive42/AI-reads-books-page-by-page"
"Lesterpaintstheworld/terminal-velocity" -> "adamwlarson/ai-book-writer"
"teknium1/Prompt-Engineering-Toolkit" -> "hrishioa/mandark"
"teknium1/Prompt-Engineering-Toolkit" -> "suzgunmirac/meta-prompting" ["e"=1]
"teknium1/Prompt-Engineering-Toolkit" -> "charliermarsh/whisper.cpp-cli" ["e"=1]
"teknium1/Prompt-Engineering-Toolkit" -> "sarthakrastogi/quality-prompts"
"ibm-granite-community/granite-snack-cookbook" -> "ibm-granite-community/granite-retrieval-agent"
"ibm-granite-community/granite-snack-cookbook" -> "IBM/watson-openscale-samples"
"ibm-granite-community/granite-snack-cookbook" -> "ibm-granite/granite-3.1-language-models"
"ibm-granite-community/granite-snack-cookbook" -> "IBM/watsonx-developer-hub"
"ibm-granite-community/granite-snack-cookbook" -> "IBM/watsonx-ai-platform-demos"
"Bklieger/ScribeWizard" -> "Bklieger/infinite-bookshelf"
"Bklieger/ScribeWizard" -> "bklieger-groq/NotebookLlama-Groq" ["e"=1]
"Bklieger/ScribeWizard" -> "alexfazio/OpenPlexity-Pages" ["e"=1]
"Bklieger/ScribeWizard" -> "pipecat-ai/rtvi-web-demo"
"Bklieger/ScribeWizard" -> "Bklieger/ai4collab-bruno"
"Bklieger/ScribeWizard" -> "Bklieger/Semantic"
"Bklieger/ScribeWizard" -> "bklieger-groq/stockbot-on-groq"
"Bklieger/ScribeWizard" -> "CerebriumAI/examples"
"kaiban-ai/KaibanJS" -> "steel-dev/steel-browser"
"kaiban-ai/KaibanJS" -> "mnfst/manifest" ["e"=1]
"kaiban-ai/KaibanJS" -> "front10/landing-page-book" ["e"=1]
"kaiban-ai/KaibanJS" -> "LangbaseInc/BaseAI"
"kaiban-ai/KaibanJS" -> "video-db/Director"
"kaiban-ai/KaibanJS" -> "TrafficGuard/typedai"
"kaiban-ai/KaibanJS" -> "StreetLamb/tribe"
"kaiban-ai/KaibanJS" -> "pingcap/autoflow"
"kaiban-ai/KaibanJS" -> "harsxv/tinystatus" ["e"=1]
"kaiban-ai/KaibanJS" -> "inngest/inngest-js" ["e"=1]
"kaiban-ai/KaibanJS" -> "gensx-inc/gensx"
"kaiban-ai/KaibanJS" -> "MotiaDev/motia"
"kaiban-ai/KaibanJS" -> "L-Blondy/up-fetch" ["e"=1]
"kaiban-ai/KaibanJS" -> "inngest/inngest" ["e"=1]
"kaiban-ai/KaibanJS" -> "davideast/dataprompt"
"cartesia-ai/edge" -> "cartesia-ai/cartesia-python"
"cartesia-ai/edge" -> "cartesia-ai/cartesia-js"
"vercel-labs/ai-sdk-preview-array-output-mode" -> "vercel-labs/ai-sdk-preview-provider-registry"
"upstash/wikipedia-semantic-search" -> "upstash/semantic-cache"
"upstash/wikipedia-semantic-search" -> "upstash/rag-chat"
"outspeed-ai/outspeed" -> "adithya-s-k/VARAG"
"fate-ubw/RAGLAB" -> "OpenBMB/VisRAG"
"fate-ubw/RAGLAB" -> "AutoSurveys/AutoSurvey" ["e"=1]
"fate-ubw/RAGLAB" -> "IntelLabs/RAG-FiT"
"cloudflare/mcp-server-cloudflare" -> "cloudflare/agents" ["e"=1]
"cloudflare/mcp-server-cloudflare" -> "cloudflare/workers-mcp" ["e"=1]
"cloudflare/mcp-server-cloudflare" -> "supabase-community/supabase-mcp"
"cloudflare/mcp-server-cloudflare" -> "aipotheosis-labs/aci"
"cloudflare/mcp-server-cloudflare" -> "cloudflare/agents-starter" ["e"=1]
"cloudflare/mcp-server-cloudflare" -> "wonderwhy-er/DesktopCommanderMCP"
"cloudflare/mcp-server-cloudflare" -> "MODSetter/SurfSense"
"cloudflare/mcp-server-cloudflare" -> "exa-labs/exa-mcp-server"
"cloudflare/mcp-server-cloudflare" -> "modelcontextprotocol/inspector" ["e"=1]
"cloudflare/mcp-server-cloudflare" -> "stripe/agent-toolkit"
"cloudflare/mcp-server-cloudflare" -> "punkpeye/fastmcp" ["e"=1]
"cloudflare/mcp-server-cloudflare" -> "idosal/git-mcp"
"cloudflare/mcp-server-cloudflare" -> "mendableai/firecrawl-mcp-server"
"cloudflare/mcp-server-cloudflare" -> "simular-ai/Agent-S"
"cloudflare/mcp-server-cloudflare" -> "executeautomation/mcp-playwright"
"modal-labs/awesome-modal" -> "yasyf/anthropic-computer-use-modal"
"modal-labs/awesome-modal" -> "charlesfrye/qart-codes"
"AnswerDotAI/shell_sage" -> "AnswerDotAI/claudette"
"AnswerDotAI/shell_sage" -> "AnswerDotAI/ContextKit"
"AnswerDotAI/shell_sage" -> "AnswerDotAI/fastdata"
"AnswerDotAI/shell_sage" -> "curtis-allan/Shad4Fasthtml"
"brainqub3/jar3d_meta_expert" -> "john-adeojo/graph_websearch_agent"
"brainqub3/jar3d_meta_expert" -> "john-adeojo/custom_agent_tutorial"
"brainqub3/jar3d_meta_expert" -> "john-adeojo/custom_websearch_agent"
"brainqub3/jar3d_meta_expert" -> "jgravelle/AutoGroq"
"brainqub3/jar3d_meta_expert" -> "john-adeojo/agency_swarm_tutorial"
"brainqub3/jar3d_meta_expert" -> "sentient-engineering/agent-q"
"brainqub3/jar3d_meta_expert" -> "john-adeojo/use-tools"
"brainqub3/jar3d_meta_expert" -> "disler/poc-realtime-ai-assistant"
"brainqub3/jar3d_meta_expert" -> "8090-inc/xrx-core"
"disler/benchy" -> "disler/marimo-prompt-library"
"disler/benchy" -> "disler/single-file-agents"
"disler/benchy" -> "disler/personal-ai-starter-pack"
"disler/benchy" -> "disler/claude-3-7-sonnet-starter-pack"
"disler/benchy" -> "disler/poc-realtime-ai-assistant"
"disler/benchy" -> "disler/indydevtools"
"disler/benchy" -> "disler/always-on-ai-assistant"
"disler/benchy" -> "disler/anthropic-computer-use-bash-and-files"
"disler/benchy" -> "disler/claude-code-is-programmable"
"disler/benchy" -> "disler/mermaid-js-ai-agent"
"disler/benchy" -> "disler/just-prompt"
"disler/benchy" -> "disler/elm-itv-benchmark"
"disler/benchy" -> "disler/pocket-pick"
"disler/benchy" -> "jgravelle/Py2md"
"disler/benchy" -> "disler/reusable-openai-fine-tune"
"run-llama/chat-ui" -> "rsrohan99/rag-stream-intermediate-events-tutorial"
"bhargobdeka/advanced-RAG-app" -> "aishwaryaprabhat/Advanced-RAG"
"13point5/open-artifacts" -> "13point5/open-artifacts-renderer"
"13point5/open-artifacts" -> "sullyo/prompt2ui"
"rocketseat-education/nlw-journey-html-css-js" -> "rocketseat-education/nlw-journey-python"
"rocketseat-education/nlw-journey-html-css-js" -> "rocketseat-education/nlw-journey-react-native"
"rocketseat-education/nlw-journey-html-css-js" -> "rocketseat-education/nlw-journey-react"
"disler/poc-realtime-ai-assistant" -> "disler/personal-ai-starter-pack"
"disler/poc-realtime-ai-assistant" -> "disler/marimo-prompt-library"
"disler/poc-realtime-ai-assistant" -> "disler/anthropic-computer-use-bash-and-files"
"disler/poc-realtime-ai-assistant" -> "disler/benchy"
"disler/poc-realtime-ai-assistant" -> "disler/single-file-agents"
"disler/poc-realtime-ai-assistant" -> "disler/always-on-ai-assistant"
"disler/poc-realtime-ai-assistant" -> "disler/indydevtools"
"disler/poc-realtime-ai-assistant" -> "disler/mermaid-js-ai-agent"
"disler/poc-realtime-ai-assistant" -> "disler/multi-agent-postgres-data-analytics"
"disler/poc-realtime-ai-assistant" -> "disler/just-prompt"
"disler/poc-realtime-ai-assistant" -> "VRSEN/agency-swarm-lab" ["e"=1]
"disler/poc-realtime-ai-assistant" -> "VRSEN/agency-voice-interface" ["e"=1]
"disler/poc-realtime-ai-assistant" -> "VRSEN/agency-swarm"
"disler/poc-realtime-ai-assistant" -> "brainqub3/jar3d_meta_expert"
"disler/poc-realtime-ai-assistant" -> "jgravelle/pocketgroq"
"Cloud-Code-AI/AkiraDocs" -> "Cloud-Code-AI/kaizen"
"Cloud-Code-AI/AkiraDocs" -> "Cloud-Code-AI/cloudstate"
"business-science/free-ai-tips" -> "business-science/awesome-generative-ai-data-scientist"
"business-science/free-ai-tips" -> "business-science/ai-data-science-team"
"business-science/free-ai-tips" -> "business-science/pytimetk" ["e"=1]
"business-science/free-ai-tips" -> "quant-science/sunday-quant-scientist" ["e"=1]
"alishobeiri/thread" -> "labmlai/inspectus"
"alishobeiri/thread" -> "semanser/codel"
"alishobeiri/thread" -> "pretzelai/pretzelai" ["e"=1]
"alishobeiri/thread" -> "KhoomeiK/LlamaGym"
"alishobeiri/thread" -> "kingjulio8238/Memary"
"alishobeiri/thread" -> "andresvourakis/data-scientist-handbook" ["e"=1]
"alishobeiri/thread" -> "metaskills/experts"
"alishobeiri/thread" -> "reworkd/tarsier"
"alishobeiri/thread" -> "alexpinel/Dot"
"alishobeiri/thread" -> "DropbaseHQ/dropbase"
"alishobeiri/thread" -> "teknium1/Prompt-Engineering-Toolkit"
"alishobeiri/thread" -> "Bklieger/ScribeWizard"
"alishobeiri/thread" -> "McGill-NLP/webllama"
"alishobeiri/thread" -> "potahtml/mpa-archive" ["e"=1]
"alishobeiri/thread" -> "ThousandBirdsInc/chidori" ["e"=1]
"run-llama/multi-agent-concierge" -> "run-llama/llamacloud-demo"
"run-llama/multi-agent-concierge" -> "run-llama/llama_deploy"
"run-llama/multi-agent-concierge" -> "run-llama/create-llama"
"run-llama/multi-agent-concierge" -> "rsrohan99/Llama-Researcher"
"run-llama/multi-agent-concierge" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"run-llama/multi-agent-concierge" -> "run-llama/llamaindex_aws_ingestion"
"run-llama/multi-agent-concierge" -> "run-llama/llamabot"
"run-llama/multi-agent-concierge" -> "run-llama/llama-slides"
"pipecat-ai/pipecat-client-web" -> "pipecat-ai/rtvi-web-demo"
"pipecat-ai/pipecat-client-web" -> "daily-demos/awesome-daily"
"pipecat-ai/pipecat-client-web" -> "daily-demos/daily-bots-web-demo"
"pipecat-ai/pipecat-client-web" -> "pipecat-ai/open-sesame"
"pipecat-ai/pipecat-client-web" -> "daily-co/daily-python"
"AnswerDotAI/llms-txt" -> "krish-adi/llmstxt-site"
"AnswerDotAI/llms-txt" -> "mendableai/llmstxt-generator"
"AnswerDotAI/llms-txt" -> "AnswerDotAI/claudette"
"AnswerDotAI/llms-txt" -> "langchain-ai/mcpdoc"
"AnswerDotAI/llms-txt" -> "thedaviddias/llms-txt-hub"
"AnswerDotAI/llms-txt" -> "AnswerDotAI/fasthtml-example"
"AnswerDotAI/llms-txt" -> "AnswerDotAI/shell_sage"
"AnswerDotAI/llms-txt" -> "AnswerDotAI/fastlite"
"AnswerDotAI/llms-txt" -> "idosal/git-mcp"
"AnswerDotAI/llms-txt" -> "saschaseniuk/vite-plugin-llms"
"AnswerDotAI/llms-txt" -> "dotenvx/llmstxt"
"AnswerDotAI/llms-txt" -> "AnswerDotAI/MonsterUI"
"yoheinakajima/ditto" -> "yoheinakajima/babyagi-2o"
"yoheinakajima/ditto" -> "Doriandarko/omni-engineer"
"yoheinakajima/ditto" -> "groq/groq-appgen"
"yoheinakajima/ditto" -> "gptme/gptme"
"yoheinakajima/ditto" -> "mikekelly/AgentK"
"yoheinakajima/ditto" -> "sentient-engineering/agent-q"
"yoheinakajima/ditto" -> "menloresearch/ichigo"
"yoheinakajima/ditto" -> "Nutlope/napkins"
"yoheinakajima/ditto" -> "Storia-AI/sage"
"yoheinakajima/ditto" -> "PragmaticMachineLearning/docai"
"yoheinakajima/ditto" -> "cognitivecomputations/agi_memory" ["e"=1]
"yoheinakajima/ditto" -> "browserbase/open-operator"
"yoheinakajima/ditto" -> "e2b-dev/fragments"
"yoheinakajima/ditto" -> "Doriandarko/RepoToTextForLLMs"
"yoheinakajima/ditto" -> "codestoryai/aide"
"ALucek/tool-calling-guide" -> "ALucek/multimodal-rag"
"AllAboutAI-YT/cursor_prompts" -> "AllAboutAI-YT/claude-artifact-prompts"
"AllAboutAI-YT/cursor_prompts" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/cursor_prompts" -> "AllAboutAI-YT/ai-terminal"
"AllAboutAI-YT/cursor_prompts" -> "AllAboutAI-YT/real_time_website_b"
"AllAboutAI-YT/cursor_prompts" -> "AllAboutAI-YT/ai-vision-scraping"
"assistant-ui/assistant-ui-stockbroker" -> "virattt/financial-agent-ui"
"assistant-ui/assistant-ui-stockbroker" -> "bracesproul/langgraphjs-examples"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "Makesh-Srinivasan/LangChain-GPT-Researcher"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "cnunescoelho/kiroku"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "ahmad2b/postbot3000"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "dheerajrhegde/servicedesk_langgraph_tavily"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "PaymanAI/langman-examples"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "nirbar1985/ai-travel-agent"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "LERM0/LermoAI"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "KruxAI/ragbuilder"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "aws-samples/langgraph-agents-with-amazon-bedrock"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "agdev/Langgraph"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "NirDiamant/Controllable-RAG-Agent"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"amanv1906/GENAI-CareerAssistant-Multiagent" -> "Azzedde/brainstormers"
"TransformerOptimus/AutoNode" -> "TransformerOptimus/Awesome-SuperAGI"
"TransformerOptimus/AutoNode" -> "TransformerOptimus/SuperCoder"
"TransformerOptimus/AutoNode" -> "superagi/Veagle"
"TransformerOptimus/AutoNode" -> "TransformerOptimus/SuperAGI-Docs"
"dmayboroda/minima" -> "Filiphasan/dotnet-minify-url"
"dmayboroda/minima" -> "SupportTools/dr-syncer"
"dmayboroda/minima" -> "gptBuster/gptBuster"
"dmayboroda/minima" -> "Trylz/Restir_CPP"
"dmayboroda/minima" -> "TomaAytakin/RedPanda"
"dmayboroda/minima" -> "SolSndy/SolSandwich-Solana-Sandwich-bot"
"dmayboroda/minima" -> "balajikandavel/book-recommendation-engine"
"dmayboroda/minima" -> "Trylz/RestirFalcor"
"dmayboroda/minima" -> "Dokan-E-Commerce/compliance-laravel-sdk"
"dmayboroda/minima" -> "andreyykavv/RynexLLM"
"dmayboroda/minima" -> "dex-checker/dex-checker-solana-evm-wallets"
"dmayboroda/minima" -> "Vorolski/pump-fun-ultimate"
"dmayboroda/minima" -> "viziax/surveylogic-splat"
"dmayboroda/minima" -> "cyberharish/solana-pumpfun-bundler-volume-bot"
"dmayboroda/minima" -> "furudo-erika/awesome-postman-alternatives"
"fmind/cookiecutter-mlops-package" -> "MLOps-Courses/mlops-coding-course"
"fmind/cookiecutter-mlops-package" -> "fmind/mlops-python-package"
"fmind/cookiecutter-mlops-package" -> "callmesora/llmops-python-package"
"fmind/cookiecutter-mlops-package" -> "databricks/mlops-stacks" ["e"=1]
"fmind/cookiecutter-mlops-package" -> "NannyML/The-Little-Book-of-ML-Metrics"
"fmind/cookiecutter-mlops-package" -> "HadeelAls618/electricity_demand_predictor" ["e"=1]
"fmind/cookiecutter-mlops-package" -> "iusztinpaul/energy-forecasting"
"fmind/cookiecutter-mlops-package" -> "neural-maze/ava-whatsapp-agent-course"
"jgravelle/Grompt" -> "jgravelle/MiniGroqqle"
"jgravelle/Grompt" -> "jgravelle/Py2md"
"jgravelle/Grompt" -> "jgravelle/jPaste"
"jgravelle/Grompt" -> "jgravelle/StrawberryGroq"
"jgravelle/Grompt" -> "jgravelle/AutogroqAgent"
"trypear/pearai-submodule" -> "trypear/pearai-app"
"trypear/pearai-submodule" -> "trypear/pearai-master"
"OpenBMB/VisRAG" -> "illuin-tech/colpali"
"OpenBMB/VisRAG" -> "Alibaba-NLP/ViDoRAG" ["e"=1]
"OpenBMB/VisRAG" -> "thunlp/Adaptive-Note" ["e"=1]
"OpenBMB/VisRAG" -> "fate-ubw/RAGLAB"
"OpenBMB/VisRAG" -> "IDEA-FinAI/RagVL"
"OpenBMB/VisRAG" -> "OpenBMB/UltraRAG" ["e"=1]
"OpenBMB/VisRAG" -> "qhjqhj00/MemoRAG"
"OpenBMB/VisRAG" -> "AnswerDotAI/byaldi"
"OpenBMB/VisRAG" -> "sunnynexus/Search-o1" ["e"=1]
"OpenBMB/VisRAG" -> "cnzzx/VSA"
"OpenBMB/VisRAG" -> "llm-lab-org/Multimodal-RAG-Survey" ["e"=1]
"OpenBMB/VisRAG" -> "RUC-NLPIR/FlashRAG"
"OpenBMB/VisRAG" -> "OpenBMB/RAGEval" ["e"=1]
"OpenBMB/VisRAG" -> "gusye1234/nano-graphrag"
"OpenBMB/VisRAG" -> "adithya-s-k/VARAG"
"knowsuchagency/promptic" -> "knowsuchagency/pdf-to-podcast"
"thomas-pedersen/cursor-chat-browser" -> "somogyijanos/cursor-chat-export"
"thomas-pedersen/cursor-chat-browser" -> "WooodHead/cursor-export"
"thomas-pedersen/cursor-chat-browser" -> "specstoryai/getspecstory"
"instructlab/sdg" -> "Red-Hat-AI-Innovation-Team/sdg_hub"
"instructlab/sdg" -> "instructlab/training"
"instructlab/sdg" -> "instructlab/eval" ["e"=1]
"vercel-labs/ai-sdk-preview-use-object" -> "vercel-labs/ai-sdk-flags-edge-config"
"vercel-labs/ai-sdk-preview-use-object" -> "vercel-labs/ai-sdk-preview-attachments"
"vercel-labs/ai-sdk-preview-use-object" -> "vercel-labs/ai-sdk-preview-multi-steps"
"Jing-yilin/E2M" -> "wisupai/e2m"
"asg017/sqlite-lembed" -> "asg017/sqlite-rembed"
"john-adeojo/custom_websearch_agent" -> "john-adeojo/agency_swarm_tutorial"
"NVIDIA-AI-Blueprints/ai-virtual-assistant" -> "NVIDIA-AI-Blueprints/rag"
"NVIDIA-AI-Blueprints/ai-virtual-assistant" -> "NVIDIA-AI-Blueprints/digital-human"
"sentient-engineering/sentient" -> "sentient-engineering/agent-q"
"sentient-engineering/sentient" -> "sentient-engineering/jobber"
"sentient-engineering/sentient" -> "EmergenceAI/Agent-E"
"sentient-engineering/sentient" -> "sentient-engineering/multi-agent-fsm"
"sentient-engineering/sentient" -> "mikekelly/AgentK"
"sentient-engineering/sentient" -> "Doriandarko/omni-engineer"
"sentient-engineering/sentient" -> "BhabhaAI/dataformer"
"KardelRuveyda/dotnet-mystic" -> "KardelRuveyda/langchain-mystic"
"SawyerHood/tlbrowse" -> "jgravelle/AutoGroq"
"SawyerHood/tlbrowse" -> "Doriandarko/gemini-ui-to-code"
"SawyerHood/tlbrowse" -> "a-real-ai/pywinassistant"
"SawyerHood/tlbrowse" -> "jgravelle/pocketgroq"
"SawyerHood/tlbrowse" -> "theyashwanthsai/Devyan" ["e"=1]
"SawyerHood/tlbrowse" -> "bin123apple/AutoCoder"
"SawyerHood/tlbrowse" -> "john-adeojo/custom_agent_tutorial"
"SawyerHood/tlbrowse" -> "metaskills/experts"
"SawyerHood/tlbrowse" -> "disler/poc-realtime-ai-assistant"
"SawyerHood/tlbrowse" -> "togethercomputer/MoA"
"SawyerHood/tlbrowse" -> "xforceai/ide" ["e"=1]
"SawyerHood/tlbrowse" -> "ozgrozer/chatgpt-artifacts"
"SawyerHood/tlbrowse" -> "john-adeojo/agency_swarm_tutorial"
"SawyerHood/tlbrowse" -> "Openmacro/openmacro"
"SawyerHood/tlbrowse" -> "rapidpages/rapidpages"
"CopilotKit/open-research-ANA" -> "CopilotKit/open-multi-agent-canvas"
"CopilotKit/open-research-ANA" -> "langchain-ai/company-researcher"
"CopilotKit/open-research-ANA" -> "alonlavian/RAGent"
"vercel-labs/natural-language-postgres" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"vercel-labs/natural-language-postgres" -> "vercel-labs/ai-sdk-preview-roundtrips"
"vercel-labs/natural-language-postgres" -> "vercel-labs/ai-sdk-preview-attachments"
"vercel-labs/natural-language-postgres" -> "vercel-labs/ai-sdk-preview-multi-steps"
"vercel-labs/natural-language-postgres" -> "vercel-labs/ai-sdk-preview-pdf-support"
"vercel-labs/natural-language-postgres" -> "browserbase/BrowseGPT"
"vercel-labs/natural-language-postgres" -> "vercel-labs/ai-sdk-preview-provider-registry"
"vercel-labs/natural-language-postgres" -> "vercel-labs/ai-sdk-reasoning-starter"
"vercel-labs/natural-language-postgres" -> "vercel-labs/ai-sdk-preview-rag"
"hwchase17/langgraph-engineer" -> "langchain-ai/langgraph-engineer"
"hwchase17/langgraph-engineer" -> "langchain-ai/langgraph-example"
"hwchase17/langgraph-engineer" -> "langchain-ai/langgraph-fullstack-python"
"hwchase17/langgraph-engineer" -> "langchain-ai/lang-memgpt"
"coder/quartz" -> "coder/retry"
"coder/quartz" -> "coder/cli"
"coder/quartz" -> "coder/redjet"
"coder/quartz" -> "cmoog/sshproxy"
"coder/quartz" -> "coder/aicommit"
"coder/quartz" -> "coder/exectrace"
"coder/quartz" -> "coder/envbox"
"coder/quartz" -> "coder/webinars"
"openintegrations/openint" -> "usecakework/cakework"
"openintegrations/openint" -> "map3xyz/supercharge"
"openintegrations/openint" -> "athina-ai/athina-sdk"
"openintegrations/openint" -> "thebabylonai/babylog"
"openintegrations/openint" -> "FrigadeHQ/react-native-onboard"
"openintegrations/openint" -> "Left-on-Read/leftonread"
"AnimaVR/NeuroSync_Local_API" -> "AnimaVR/NeuroSync_Player"
"AnimaVR/NeuroSync_Local_API" -> "AnimaVR/NeuroSync_Trainer_Lite"
"AnimaVR/NeuroSync_Local_API" -> "AnimaVR/NeuroSync_Real-Time_API"
"MinishLab/vicinity" -> "MinishLab/tokenlearn"
"MinishLab/vicinity" -> "MinishLab/semhash"
"MinishLab/vicinity" -> "MinishLab/evaluation"
"TAG-Research/TAG-Bench" -> "lotus-data/lotus"
"TAG-Research/TAG-Bench" -> "xlang-ai/Spider2" ["e"=1]
"TAG-Research/TAG-Bench" -> "IntelLabs/RAG-FiT"
"TAG-Research/TAG-Bench" -> "XGenerationLab/XiYan-SQL" ["e"=1]
"TAG-Research/TAG-Bench" -> "weAIDB/awsome-data-llm" ["e"=1]
"TAG-Research/TAG-Bench" -> "ShengranHu/ADAS"
"TAG-Research/TAG-Bench" -> "eosphoros-ai/Awesome-Text2SQL" ["e"=1]
"TAG-Research/TAG-Bench" -> "neo4j/neo4j-graphrag-python"
"TAG-Research/TAG-Bench" -> "ucbepic/docetl"
"TAG-Research/TAG-Bench" -> "MohammadrezaPourreza/Few-shot-NL2SQL-with-prompting" ["e"=1]
"TAG-Research/TAG-Bench" -> "SylphAI-Inc/AdalFlow"
"TAG-Research/TAG-Bench" -> "eosphoros-ai/DB-GPT-Hub" ["e"=1]
"TAG-Research/TAG-Bench" -> "defog-ai/sql-eval" ["e"=1]
"AnswerDotAI/fastlite" -> "AnswerDotAI/fastsql"
"AnswerDotAI/fastlite" -> "AnswerDotAI/pythonrunscript"
"AnswerDotAI/fastlite" -> "AnswerDotAI/claudette"
"AnswerDotAI/fastlite" -> "AnswerDotAI/fasthtml-tut"
"AnswerDotAI/fastlite" -> "AnswerDotAI/toolslm"
"emarco177/dandi" -> "shaheryaryousaf/rag-voicebot"
"1f1n/Dragon" -> "1f1n/gmgnai-wrapper"
"1f1n/Dragon" -> "yllvar/Smart_Money_Follower"
"1f1n/Dragon" -> "henrytirla/Solana-PNL-Bot"
"1f1n/Dragon" -> "dotnaonweh/solanaWallet-checker"
"1f1n/Dragon" -> "DracoR22/handi-cat_wallet-tracker"
"disler/marimo-prompt-library" -> "disler/personal-ai-starter-pack"
"disler/marimo-prompt-library" -> "disler/reusable-openai-fine-tune"
"disler/marimo-prompt-library" -> "disler/mermaid-js-ai-agent"
"disler/marimo-prompt-library" -> "disler/single-file-agents"
"disler/marimo-prompt-library" -> "disler/benchy"
"disler/marimo-prompt-library" -> "disler/llm-prompt-testing-quick-start"
"disler/marimo-prompt-library" -> "disler/indydevtools"
"disler/marimo-prompt-library" -> "disler/diffbro"
"disler/marimo-prompt-library" -> "disler/pocket-pick"
"disler/marimo-prompt-library" -> "disler/poc-realtime-ai-assistant"
"disler/marimo-prompt-library" -> "disler/anthropic-computer-use-bash-and-files"
"disler/marimo-prompt-library" -> "disler/claude-3-7-sonnet-starter-pack"
"coder/wush" -> "coder/envbuilder"
"coder/wush" -> "coder/aicommit"
"coder/wush" -> "coder/vscode-coder"
"coder/wush" -> "coder/code-marketplace"
"coder/wush" -> "coder/redjet"
"coder/wush" -> "d3witt/viking" ["e"=1]
"coder/wush" -> "ericpaulsen/coder-aks"
"coder/wush" -> "coder/backstage-plugins"
"coder/wush" -> "coder/picopilot"
"coder/wush" -> "coder/modules"
"coder/wush" -> "alebeck/boring"
"coder/wush" -> "coder/awesome-coder"
"coder/wush" -> "GTekSD/SUASS" ["e"=1]
"coder/wush" -> "harsxv/tinystatus" ["e"=1]
"coder/wush" -> "yunginnanet/HellPot" ["e"=1]
"somogyijanos/cursor-chat-export" -> "thomas-pedersen/cursor-chat-browser"
"Makesh-Srinivasan/LangChain-GPT-Researcher" -> "dheerajrhegde/servicedesk_langgraph_tavily"
"KylinMountain/graphrag-server" -> "win4r/GraphRAG4OpenWebUI"
"KylinMountain/graphrag-server" -> "Ikaros-521/GraphRAG-Ollama-UI"
"KylinMountain/graphrag-server" -> "BinNong/llm-graph-builder"
"KylinMountain/graphrag-server" -> "noworneverev/graphrag-api"
"KylinMountain/graphrag-server" -> "KylinMountain/markify"
"KylinMountain/graphrag-server" -> "noworneverev/graphrag-visualizer"
"KylinMountain/graphrag-server" -> "severian42/GraphRAG-Local-UI"
"KylinMountain/graphrag-server" -> "wade1010/graphrag-ui"
"cnunescoelho/kiroku" -> "ahmad2b/postbot3000"
"cnunescoelho/kiroku" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"cnunescoelho/kiroku" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"cnunescoelho/kiroku" -> "starpig1129/DATAGEN"
"cnunescoelho/kiroku" -> "Makesh-Srinivasan/LangChain-GPT-Researcher"
"cnunescoelho/kiroku" -> "samwit/agent_tutorials"
"cnunescoelho/kiroku" -> "nirbar1985/ai-travel-agent"
"cnunescoelho/kiroku" -> "PaymanAI/langman-examples"
"cnunescoelho/kiroku" -> "hwchase17/langgraph-engineer"
"cnunescoelho/kiroku" -> "saurabhlalsaxena/Perplexity-Clone-v0.1"
"cnunescoelho/kiroku" -> "PragmaticMachineLearning/docai"
"cnunescoelho/kiroku" -> "aws-samples/langgraph-agents-with-amazon-bedrock"
"cnunescoelho/kiroku" -> "agdev/Langgraph"
"cnunescoelho/kiroku" -> "Debapriya-source/nyaya-gpt"
"cnunescoelho/kiroku" -> "Azzedde/brainstormers"
"kirill-markin/repo-to-text" -> "kirill-markin/chrome-auto-image-blocker"
"pipecat-ai/rtvi-web-demo" -> "pipecat-ai/pipecat-client-web"
"pipecat-ai/rtvi-web-demo" -> "lhl/voicechat2"
"pipecat-ai/rtvi-web-demo" -> "daily-demos/daily-bots-web-demo"
"pipecat-ai/rtvi-web-demo" -> "CerebriumAI/examples"
"pipecat-ai/rtvi-web-demo" -> "pipecat-ai/pipecat"
"pipecat-ai/rtvi-web-demo" -> "ai-ng/swift"
"pipecat-ai/rtvi-web-demo" -> "Bklieger/ScribeWizard"
"pipecat-ai/rtvi-web-demo" -> "pipecat-ai/rtvi-infra-examples"
"pipecat-ai/rtvi-web-demo" -> "pipecat-ai/gemini-multimodal-live-demo"
"pipecat-ai/rtvi-web-demo" -> "lalanikarim/webrtc-ai-voice-chat"
"pipecat-ai/rtvi-web-demo" -> "8090-inc/xrx-core"
"pipecat-ai/rtvi-web-demo" -> "ozgrozer/chatgpt-artifacts"
"pipecat-ai/rtvi-web-demo" -> "mckaywrigley/ai-router-chat"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/ai-sdk-preview-roundtrips"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/ai-sdk-preview-multi-steps"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/ai-sdk-preview-rag"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/natural-language-postgres"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/ai-sdk-preview-attachments"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/ai-sdk-preview-rsc-genui"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/ai-sdk-preview-use-object"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/semantic-image-search"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/ai-sdk-flags-edge-config"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel/ai-sdk-rag-starter"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/ai-sdk-preview-pdf-support"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "upstash/degree-guru"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/ai-sdk-reasoning-starter"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/gemini-chatbot"
"vercel-labs/ai-sdk-preview-internal-knowledge-base" -> "vercel-labs/ai-sdk-slackbot"
"FSoft-AI4Code/CodeFlow" -> "FSoft-AI4Code/XMainframe"
"FSoft-AI4Code/CodeFlow" -> "FSoft-AI4Code/RepoExec"
"FSoft-AI4Code/CodeFlow" -> "FSoft-AI4Code/SRank-CodeRanker"
"yllvar/Smart_Money_Follower" -> "1f1n/gmgnai-wrapper"
"yllvar/Smart_Money_Follower" -> "zhaoqie/gmgn_smart"
"yllvar/Smart_Money_Follower" -> "gevffy/gmgn-scraper"
"yllvar/Smart_Money_Follower" -> "ganarkf/solana-wallet-checker"
"yllvar/Smart_Money_Follower" -> "1f1n/Dragon"
"rsrohan99/Llama-Researcher" -> "run-llama/human_in_the_loop_workflow_demo"
"kartikm7/llocal" -> "Otacon/olpaka"
"kartikm7/llocal" -> "mmo80/alpaca-webui"
"kartikm7/llocal" -> "mrdjohnson/llm-x"
"codellm-devkit/python-sdk" -> "IBM/TDD-Bench-Verified"
"codellm-devkit/python-sdk" -> "codellm-devkit/codeanalyzer-java"
"nirbar1985/ai-travel-agent" -> "ahmad2b/postbot3000"
"nirbar1985/ai-travel-agent" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"nirbar1985/ai-travel-agent" -> "cnunescoelho/kiroku"
"nirbar1985/ai-travel-agent" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"nirbar1985/ai-travel-agent" -> "agdev/Langgraph"
"nirbar1985/ai-travel-agent" -> "PaymanAI/langman-examples"
"nirbar1985/ai-travel-agent" -> "langchain-ai/retrieval-agent-template"
"nirbar1985/ai-travel-agent" -> "mbarinov/repogpt"
"nirbar1985/ai-travel-agent" -> "virattt/financial-agent-ui"
"nirbar1985/ai-travel-agent" -> "LERM0/LermoAI"
"nirbar1985/ai-travel-agent" -> "Azzedde/brainstormers"
"nirbar1985/ai-travel-agent" -> "langchain-ai/react-voice-agent" ["e"=1]
"nirbar1985/ai-travel-agent" -> "Makesh-Srinivasan/LangChain-GPT-Researcher"
"nirbar1985/ai-travel-agent" -> "zamalali/InboxHero"
"nirbar1985/ai-travel-agent" -> "starpig1129/DATAGEN"
"multinear-demo/demo-bank-support-lc-py" -> "gotohuman/gotohuman-langgraph-lead-example"
"multinear-demo/demo-bank-support-lc-py" -> "vinay-gatech/stocks-insights-ai-agent"
"multinear-demo/demo-bank-support-lc-py" -> "hrithikkoduri/WebRover"
"multinear-demo/demo-bank-support-lc-py" -> "CopilotKit/open-research-ANA"
"multinear-demo/demo-bank-support-lc-py" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"multinear-demo/demo-bank-support-lc-py" -> "alonlavian/RAGent"
"multinear-demo/demo-bank-support-lc-py" -> "lgesuellip/langgraph-whatsapp-agent"
"multinear-demo/demo-bank-support-lc-py" -> "Azzedde/paper_to_podcast"
"multinear-demo/demo-bank-support-lc-py" -> "neural-maze/ava-whatsapp-agent-course"
"multinear-demo/demo-bank-support-lc-py" -> "agdev/Langgraph"
"multinear-demo/demo-bank-support-lc-py" -> "ahmad2b/postbot3000"
"multinear-demo/demo-bank-support-lc-py" -> "Deluxer/oliva"
"multinear-demo/demo-bank-support-lc-py" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"multinear-demo/demo-bank-support-lc-py" -> "actualize-ae/voice-chat-pdf"
"multinear-demo/demo-bank-support-lc-py" -> "AbhinavTheDev/coding-agent"
"joanby/llm_engineering" -> "joanby/matematicas-ml"
"disler/personal-ai-starter-pack" -> "disler/marimo-prompt-library"
"disler/personal-ai-starter-pack" -> "disler/reusable-openai-fine-tune"
"disler/personal-ai-starter-pack" -> "disler/anthropic-computer-use-bash-and-files"
"disler/personal-ai-starter-pack" -> "disler/indydevtools"
"disler/personal-ai-starter-pack" -> "disler/llm-prompt-testing-quick-start"
"disler/personal-ai-starter-pack" -> "disler/elm-itv-benchmark"
"disler/personal-ai-starter-pack" -> "disler/mermaid-js-ai-agent"
"disler/personal-ai-starter-pack" -> "disler/poc-realtime-ai-assistant"
"disler/personal-ai-starter-pack" -> "disler/benchy"
"disler/personal-ai-starter-pack" -> "disler/single-file-agents"
"Coding-Crashkurse/LangGraph-Udemy-Course" -> "Coding-Crashkurse/Llama3.2---LangGraph-Email-Agent"
"illuin-tech/vidore-benchmark" -> "tonywu71/colpali-cookbooks"
"illuin-tech/vidore-benchmark" -> "illuin-tech/colpali"
"joshpocock/Stride-AI-Agents" -> "sentient-engineering/agent-q"
"joshpocock/Stride-AI-Agents" -> "rubickecho/n8n-deepseek"
"joshpocock/Stride-AI-Agents" -> "wonderwhy-er/bolt.myaibuilt.app_hosted-Bolt.New-oTToDev"
"joshpocock/Stride-AI-Agents" -> "joshpocock/kestra"
"joshpocock/Stride-AI-Agents" -> "AllAboutAI-YT/cursor_prompts"
"joshpocock/Stride-AI-Agents" -> "coleam00/ai-agents-masterclass"
"USTCAGI/CRAG-in-KDD-Cup2024" -> "USTCAGI/Awesome-LLM-Table-Mining"
"USTCAGI/CRAG-in-KDD-Cup2024" -> "USTCAGI/Awesome-Papers-Time-Series-Forecasting"
"USTCAGI/CRAG-in-KDD-Cup2024" -> "Mingyue-Cheng/InstructTime"
"USTCAGI/CRAG-in-KDD-Cup2024" -> "USTCAGI/Awesome-Papers-Retrieval-Augmented-Generation"
"actualize-ae/voice-chat-pdf" -> "Mohit21GoJs/agent-orchestration-examples"
"actualize-ae/voice-chat-pdf" -> "multinear-demo/demo-bank-support-lc-py"
"vercel-labs/ai-sdk-preview-rsc-genui" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"vercel-labs/ai-sdk-preview-rsc-genui" -> "vercel-labs/ai-sdk-preview-rag"
"vercel-labs/ai-sdk-preview-rsc-genui" -> "vercel-labs/ai-sdk-preview-multi-steps"
"vercel-labs/ai-sdk-preview-rsc-genui" -> "vercel-labs/ai-sdk-preview-roundtrips"
"vercel-labs/ai-sdk-preview-rsc-genui" -> "vercel-labs/semantic-image-search"
"vercel-labs/ai-sdk-preview-rsc-genui" -> "vercel-labs/ai-sdk-preview-attachments"
"vercel-labs/ai-sdk-preview-rsc-genui" -> "vercel-labs/ai-sdk-preview-pdf-support"
"vercel-labs/ai-sdk-preview-rsc-genui" -> "vercel/ai-sdk-rag-starter"
"vercel-labs/ai-sdk-preview-rsc-genui" -> "vercel-labs/ai-sdk-preview-array-output-mode"
"vercel-labs/ai-sdk-preview-rsc-genui" -> "vercel-labs/gemini-chatbot"
"trustgraph-ai/trustgraph" -> "FutureClubNL/RAGMeUp"
"trustgraph-ai/trustgraph" -> "Andrew-Jang/RAGHub"
"trustgraph-ai/trustgraph" -> "graphgeeks-lab/awesome-graph-universe"
"trustgraph-ai/trustgraph" -> "FalkorDB/GraphRAG-SDK" ["e"=1]
"trustgraph-ai/trustgraph" -> "superlinear-ai/raglite"
"KardelRuveyda/openai-dotnet-turkish-book" -> "KardelRuveyda/openai-dotnet-exercises"
"KardelRuveyda/openai-dotnet-turkish-book" -> "KardelRuveyda/uretken-yapayzeka-chatbot-gelistirme-temelleri"
"KardelRuveyda/openai-dotnet-turkish-book" -> "KardelRuveyda/prompt-engineering-turkish-book"
"KardelRuveyda/openai-dotnet-turkish-book" -> "KardelRuveyda/dotnet-mystic"
"KardelRuveyda/openai-dotnet-turkish-book" -> "KardelRuveyda/langchain-mystic"
"NVIDIA/ACE" -> "NVIDIA-AI-Blueprints/digital-human"
"NVIDIA/ACE" -> "AnimaVR/NeuroSync_Player"
"meetingbot/meetingbot" -> "noah-duncan/attendee"
"meetingbot/meetingbot" -> "owengretzinger/gitreadme"
"jina-ai/late-chunking" -> "mixedbread-ai/baguetter"
"jina-ai/late-chunking" -> "IAAR-Shanghai/Meta-Chunking" ["e"=1]
"noworneverev/graphrag-visualizer" -> "noworneverev/graphrag-api"
"noworneverev/graphrag-visualizer" -> "KylinMountain/graphrag-server"
"noworneverev/graphrag-visualizer" -> "severian42/GraphRAG-Local-UI"
"noworneverev/graphrag-visualizer" -> "ksachdeva/langchain-graphrag"
"andrearaponi/dito" -> "alebeck/boring"
"andrearaponi/dito" -> "naughtygopher/pocache"
"langchain-ai/memory-agent" -> "langchain-ai/memory-template"
"langchain-ai/memory-agent" -> "langchain-ai/data-enrichment"
"langchain-ai/memory-agent" -> "langchain-ai/retrieval-agent-template"
"langchain-ai/memory-agent" -> "langchain-ai/rag-research-agent-template"
"langchain-ai/memory-agent" -> "langchain-ai/lang-memgpt"
"thinkwee/iAgents" -> "thunlp/iAgents"
"thunlp/iAgents" -> "thinkwee/iAgents"
"rubickecho/n8n-deepseek" -> "umanamente/n8n-nodes-globals"
"8090-inc/xrx-sample-apps" -> "8090-inc/xrx-core"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "MeoMunDep/Mavryk-Wallet"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "BullaTalina/ip-stresser"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "Chirag-Main1/ChatBot_perosnal"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "wyattm14/chatbot-template"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "Webinix-dev/webinix"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "muraliavarma/vue-slot-table"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "MacroSurfer/MacroSurferFunctions"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "magicuidesign/mcp"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "kimd155/QuickResponseC2"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "RoyGeagea/inventory-management"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "topsecretagent007/pumpfun-bundler-bot"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "emotion-block/project-elara"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "furudo-erika/awesome-postman-alternatives"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "SupportTools/dr-syncer"
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" -> "updatedotdev/js"
"aws-samples/langgraph-agents-with-amazon-bedrock" -> "Makesh-Srinivasan/LangChain-GPT-Researcher"
"aws-samples/langgraph-agents-with-amazon-bedrock" -> "dheerajrhegde/servicedesk_langgraph_tavily"
"paulrobello/parllama" -> "Textualize/transcendent-textual" ["e"=1]
"NanGePlus/CrewAITest" -> "NanGePlus/CrewAIFlowsFullStack"
"NanGePlus/CrewAITest" -> "NanGePlus/CrewAIFullstackTest"
"NanGePlus/CrewAITest" -> "NanGePlus/LLMTest"
"google-gemini/gemini-api-quickstart" -> "google-gemini/example-chat-app"
"google-gemini/gemini-api-quickstart" -> "google-gemini/angular-language-learning-sample"
"docling-project/docling-serve" -> "drmingler/docling-api"
"docling-project/docling-serve" -> "docling-project/docling-core"
"docling-project/docling-serve" -> "docling-project/docling-parse"
"docling-project/docling-serve" -> "docling-project/docling-ibm-models"
"docling-project/docling-serve" -> "DS4SD/deepsearch-glm"
"docling-project/docling-serve" -> "DS4SD/deepsearch-toolkit"
"docling-project/docling-serve" -> "DS4SD/deepsearch-examples"
"docling-project/docling-serve" -> "docling-project/docling-mcp"
"docling-project/docling-serve" -> "data-prep-kit/data-prep-kit"
"rocketseat-education/nlw-journey-react-native" -> "rocketseat-education/nlw-journey-c-sharp"
"rocketseat-education/nlw-journey-react-native" -> "rocketseat-education/nlw-journey-ia"
"rocketseat-education/nlw-journey-react-native" -> "rocketseat-education/nlw-journey-html-css-js"
"YassKhazzan/openperplex_front" -> "YassKhazzan/openperplex_backend_os"
"daveshap/raspberry_experiments" -> "daveshap/Raspberry"
"Nachoeigu/agentic-customer-service-medical-clinic" -> "dheerajrhegde/servicedesk_langgraph_tavily"
"Nachoeigu/agentic-customer-service-medical-clinic" -> "emarco177/langgraph-customer-support"
"Nachoeigu/agentic-customer-service-medical-clinic" -> "langchain-ai/lang-memgpt"
"Nachoeigu/agentic-customer-service-medical-clinic" -> "mfmezger/conversational-agent-langchain"
"Nachoeigu/agentic-customer-service-medical-clinic" -> "cnunescoelho/kiroku"
"Nachoeigu/agentic-customer-service-medical-clinic" -> "saurabhlalsaxena/Perplexity-Clone-v0.1"
"Nachoeigu/agentic-customer-service-medical-clinic" -> "langchain-ai/langgraph-engineer"
"Nachoeigu/agentic-customer-service-medical-clinic" -> "agdev/Langgraph"
"coder/aicommit" -> "coder/backstage-plugins"
"coder/aicommit" -> "coder/envbuilder"
"coder/aicommit" -> "coder/coder-logstream-kube"
"coder/aicommit" -> "ericpaulsen/coder-aks"
"coder/aicommit" -> "coder/redjet"
"coder/aicommit" -> "matifali/update-coder-template"
"coder/aicommit" -> "coder/exectrace"
"coder/aicommit" -> "coder/envbox"
"coder/aicommit" -> "coder/modules"
"coder/aicommit" -> "coder/retry"
"coder/aicommit" -> "coder/labeler"
"coder/aicommit" -> "coder/serpent"
"coder/aicommit" -> "coder/picopilot"
"coder/aicommit" -> "coder/hat"
"coder/aicommit" -> "coder/code-marketplace"
"LangGraph-GUI/LangGraph-learn" -> "LangGraph-GUI/LangGraph-GUI-backend"
"LangGraph-GUI/LangGraph-learn" -> "LangGraph-GUI/LangGraph-GUI"
"LangGraph-GUI/LangGraph-GUI" -> "LangGraph-GUI/LangGraph-GUI-reactflow"
"LangGraph-GUI/LangGraph-GUI" -> "LangGraph-GUI/LangGraph-learn"
"LangGraph-GUI/LangGraph-GUI" -> "LangGraph-GUI/LangGraph-GUI-backend"
"andrestorres123/breeze-agent" -> "xyin-anl/Nodeology"
"rocketseat-education/nlw-journey-devops" -> "rocketseat-education/nlw-journey-go"
"kaymen99/langgraph-email-automation" -> "liuyanqun0815/langgraph_fly_base"
"kaymen99/langgraph-email-automation" -> "kaymen99/sales-outreach-automation-langgraph"
"kaymen99/sales-outreach-automation-langgraph" -> "kaymen99/AI-Sales-agent"
"kaymen99/sales-outreach-automation-langgraph" -> "kaymen99/langgraph-email-automation"
"1f1n/gmgnai-wrapper" -> "yllvar/Smart_Money_Follower"
"1f1n/gmgnai-wrapper" -> "1f1n/Dragon"
"1f1n/gmgnai-wrapper" -> "gevffy/gmgn-scraper"
"1f1n/gmgnai-wrapper" -> "CryptoAscetic/crypto-tool"
"1f1n/gmgnai-wrapper" -> "henrytirla/Solana-PNL-Bot"
"noah-duncan/attendee" -> "noah-duncan/py-zoom-meeting-sdk"
"noah-duncan/attendee" -> "meetingbot/meetingbot"
"jgravelle/GroqCasters" -> "jgravelle/pocketgroq"
"jgravelle/GroqCasters" -> "jgravelle/Grompt_plugin"
"jgravelle/GroqCasters" -> "jgravelle/StrawberryGroq"
"jgravelle/GroqCasters" -> "jgravelle/groqcrawl"
"jgravelle/GroqCasters" -> "jgravelle/Groqqle"
"browserbase/BrowseGPT" -> "browserbase/browserbase-computer-use"
"di37/multiclass-news-classification-using-llms" -> "di37/speech-to-text-fine-tuning-on-unseen-language"
"0x4f53/secretsnitch" -> "phasehq/cli"
"curtis-allan/Shad4Fasthtml" -> "amosgyamfi/awesome-fasthtml"
"curtis-allan/Shad4Fasthtml" -> "AnswerDotAI/MonsterUI"
"curtis-allan/Shad4Fasthtml" -> "curtis-allan/lucide-fasthtml"
"curtis-allan/Shad4Fasthtml" -> "AnswerDotAI/FastHTML-Gallery"
"curtis-allan/Shad4Fasthtml" -> "phihung/fasthtml_examples"
"Lesterpaintstheworld/kinos" -> "Lesterpaintstheworld/AutonomousAIs"
"coleam00/chatgpt-chrome-extension" -> "coleam00/ollama-swarm"
"coleam00/ollama-swarm" -> "coleam00/chatgpt-chrome-extension"
"coleam00/ollama-swarm" -> "coleam00/midnight-converse"
"AnimaVR/NeuroSync_Player" -> "AnimaVR/NeuroSync_Local_API"
"AnimaVR/NeuroSync_Player" -> "AnimaVR/NeuroSync_Trainer_Lite"
"AnimaVR/NeuroSync_Player" -> "AnimaVR/NeuroSync_Real-Time_API"
"vercel-labs/ai-sdk-preview-pdf-support" -> "vercel-labs/ai-sdk-preview-roundtrips"
"vercel-labs/ai-sdk-preview-pdf-support" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"vercel-labs/ai-sdk-preview-pdf-support" -> "vercel-labs/ai-sdk-preview-multi-steps"
"vercel-labs/ai-sdk-preview-pdf-support" -> "vercel-labs/ai-sdk-preview-attachments"
"vercel-labs/ai-sdk-preview-pdf-support" -> "vercel-labs/natural-language-postgres"
"vercel-labs/ai-sdk-preview-pdf-support" -> "vercel-labs/ai-sdk-preview-provider-registry"
"vercel-labs/ai-sdk-preview-pdf-support" -> "vercel-labs/ai-sdk-reasoning-starter"
"vercel-labs/ai-sdk-preview-pdf-support" -> "vercel-labs/ai-sdk-preview-rsc-genui"
"vercel-labs/ai-sdk-preview-pdf-support" -> "vercel-labs/ai-sdk-preview-rag"
"mixedbread-ai/baguetter" -> "mixedbread-ai/wiki_demo_app"
"mixedbread-ai/baguetter" -> "mixedbread-ai/binary-embeddings"
"mixedbread-ai/baguetter" -> "mixedbread-ai/ofen"
"mixedbread-ai/baguetter" -> "mixedbread-ai/python-sdk"
"mixedbread-ai/baguetter" -> "mixedbread-ai/batched"
"mixedbread-ai/baguetter" -> "lightonai/pylate"
"mixedbread-ai/batched" -> "mixedbread-ai/ofen"
"mixedbread-ai/batched" -> "mixedbread-ai/baguetter"
"mixedbread-ai/batched" -> "mixedbread-ai/mxbai-rerank"
"Red-Hat-AI-Innovation-Team/sdg_hub" -> "Red-Hat-AI-Innovation-Team/async-grpo"
"Doriandarko/DIY-Astra" -> "Doriandarko/opus-interpreter"
"rocketseat-education/nlw-journey-react" -> "rocketseat-education/nlw-journey-nodejs"
"rocketseat-education/nlw-journey-react" -> "rocketseat-education/nlw-journey-react-native"
"rocketseat-education/nlw-journey-react" -> "rocketseat-education/nlw-journey-html-css-js"
"rocketseat-education/nlw-journey-react" -> "rocketseat-education/nlw-journey-python"
"rocketseat-education/nlw-journey-react" -> "rocketseat-education/nlw-journey-devops"
"rocketseat-education/nlw-journey-react" -> "rocketseat-education/nlw-journey-ia"
"lesteroliver911/contextual-doc-retrieval-opneai-reranker" -> "lesteroliver911/contextual-chunking-graphpowered-rag"
"disler/mermaid-js-ai-agent" -> "disler/marimo-prompt-library"
"disler/mermaid-js-ai-agent" -> "disler/llm-prompt-testing-quick-start"
"disler/mermaid-js-ai-agent" -> "disler/reusable-openai-fine-tune"
"disler/mermaid-js-ai-agent" -> "disler/elm-itv-benchmark"
"disler/mermaid-js-ai-agent" -> "disler/diffbro"
"disler/mermaid-js-ai-agent" -> "disler/personal-ai-starter-pack"
"disler/mermaid-js-ai-agent" -> "disler/anthropic-computer-use-bash-and-files"
"disler/mermaid-js-ai-agent" -> "disler/single-file-agents"
"disler/mermaid-js-ai-agent" -> "disler/omni-complete"
"Nutlope/ai-search-engine" -> "Nutlope/finetune"
"Touxan/n8n-ultimate-scraper" -> "minhlucvan/n8n-nodes-browserless"
"DS4SD/quackling" -> "docling-project/docling-haystack"
"vercel-labs/ai-sdk-flags-edge-config" -> "vercel-labs/ai-sdk-preview-provider-registry"
"vercel-labs/ai-sdk-flags-edge-config" -> "vercel-labs/ai-sdk-preview-use-object"
"vercel-labs/ai-sdk-preview-multi-steps" -> "vercel-labs/ai-sdk-preview-roundtrips"
"vercel-labs/ai-sdk-preview-multi-steps" -> "vercel-labs/ai-sdk-flags-edge-config"
"vercel-labs/ai-sdk-preview-multi-steps" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"vercel-labs/ai-sdk-preview-multi-steps" -> "vercel-labs/ai-sdk-preview-use-object"
"vercel-labs/ai-sdk-preview-multi-steps" -> "vercel-labs/ai-sdk-preview-attachments"
"vercel-labs/ai-sdk-preview-multi-steps" -> "vercel-labs/ai-sdk-preview-array-output-mode"
"yazanrisheh/Synthetic-Data-Generation-with-LangChain" -> "di37/LLM-Load-Unload-Ollama"
"retail-ai-inc/sync" -> "retail-ai-inc/bean"
"retail-ai-inc/sync" -> "anonymousvano/uncensored-hidden-wiki"
"retail-ai-inc/sync" -> "jimmyraj18/jimmyraj18"
"retail-ai-inc/sync" -> "retail-ai-inc/beanq"
"noworneverev/graphrag-api" -> "noworneverev/graphrag-visualizer"
"tonyoconnell/Groqqle" -> "jgravelle/jPaste"
"tonyoconnell/Groqqle" -> "jgravelle/Grompt_plugin"
"IBM/prompt-declaration-language" -> "i-am-bee/beeai-code-interpreter"
"IBM/prompt-declaration-language" -> "codellm-devkit/python-sdk"
"IBM/prompt-declaration-language" -> "ibm-granite/granite-io"
"IBM/prompt-declaration-language" -> "IBM/kar"
"IBM/TDD-Bench-Verified" -> "codellm-devkit/codeanalyzer-java"
"rocketseat-education/nlw-journey-java" -> "rocketseat-education/nlw-journey-python"
"rocketseat-education/nlw-journey-java" -> "rocketseat-education/nlw-journey-react"
"rocketseat-education/nlw-journey-java" -> "rocketseat-education/nlw-journey-html-css-js"
"rocketseat-education/nlw-journey-java" -> "rocketseat-education/nlw-journey-react-native"
"velocitybolt/open-extract" -> "PragmaticMachineLearning/docai"
"NVIDIA/metropolis-nim-workflows" -> "NVIDIA/nim-anywhere"
"AgentScript-AI/agentscript" -> "inferablehq/inferable"
"Knowledgator/GLiNER.cpp" -> "fbilhaut/gline-rs"
"raphaelsty/LeNLP" -> "lightonai/ducksearch"
"disler/anthropic-computer-use-bash-and-files" -> "disler/personal-ai-starter-pack"
"disler/anthropic-computer-use-bash-and-files" -> "disler/reusable-openai-fine-tune"
"disler/anthropic-computer-use-bash-and-files" -> "disler/llm-prompt-testing-quick-start"
"disler/anthropic-computer-use-bash-and-files" -> "disler/mermaid-js-ai-agent"
"disler/anthropic-computer-use-bash-and-files" -> "disler/elm-itv-benchmark"
"disler/anthropic-computer-use-bash-and-files" -> "disler/poc-realtime-ai-assistant"
"disler/anthropic-computer-use-bash-and-files" -> "disler/marimo-prompt-library"
"grp06/cursor-boost" -> "s-smits/agentic-cursorrules"
"LangGraph-GUI/LangGraph-GUI-reactflow" -> "LangGraph-GUI/LangGraph-GUI-backend"
"ArcadeAI/SlackAgent" -> "ArcadeAI/ArcadeGPT"
"ArcadeAI/SlackAgent" -> "ArcadeAI/arcade-py"
"ArcadeAI/ArcadeGPT" -> "ArcadeAI/arcade-js"
"ArcadeAI/ArcadeGPT" -> "ArcadeAI/arcade-py"
"parlance-labs/ftcourse" -> "eugeneyan/visualizing-finetunes"
"parlance-labs/ftcourse" -> "davanstrien/data-for-fine-tuning-llms"
"parlance-labs/ftcourse" -> "modal-labs/llm-finetuning"
"parlance-labs/ftcourse" -> "jjallaire/inspect-llm-workshop"
"parlance-labs/ftcourse" -> "AnswerDotAI/claudette"
"parlance-labs/ftcourse" -> "marco-jeffrey/awesome-llm-resources"
"lifinance/bigmi" -> "lifinance/sdk-node-sample"
"lifinance/bigmi" -> "lifinance/types"
"Scrapybara/scrapybara-python" -> "Scrapybara/scrapybara-cookbook"
"Scrapybara/scrapybara-python" -> "Scrapybara/scrapybara-ts"
"Scrapybara/scrapybara-python" -> "Scrapybara/scrapybara-mcp"
"thepersonalaicompany/amurex-web" -> "thepersonalaicompany/amurex-backend"
"google-gemini/example-chat-app" -> "google-gemini/api-examples"
"FSoft-AI4Code/RepoExec" -> "FSoft-AI4Code/SRank-CodeRanker"
"FSoft-AI4Code/RepoExec" -> "FSoft-AI4Code/XMainframe"
"FSoft-AI4Code/RepoExec" -> "FSoft-AI4Code/DocChecker"
"FSoft-AI4Code/RepoExec" -> "FSoft-AI4Code/CodeFlow"
"FSoft-AI4Code/XMainframe" -> "FSoft-AI4Code/CodeFlow"
"FSoft-AI4Code/XMainframe" -> "FSoft-AI4Code/RepoExec"
"FSoft-AI4Code/XMainframe" -> "FSoft-AI4Code/SRank-CodeRanker"
"FSoft-AI4Code/XMainframe" -> "FSoft-AI4Code/RepoHyper"
"cartesia-ai/cartesia-python" -> "cartesia-ai/cartesia-js"
"Ikaros-521/GraphRAG-Ollama-UI" -> "KylinMountain/graphrag-server"
"xintai6660707/ore-mine-pool" -> "Kriptikz/ore-hq-server"
"neural-maze/vector-twin" -> "neural-maze/rick-llm"
"ShawhinT/AI-Builders-Bootcamp-1" -> "ShawhinT/AI-Builders-Bootcamp-2"
"Not-Diamond/notdiamond-python" -> "Not-Diamond/RoRF"
"Not-Diamond/notdiamond-python" -> "Not-Diamond/awesome-ai-model-routing"
"langchain-ai/rag-research-agent-template" -> "langchain-ai/retrieval-agent-template"
"langchain-ai/rag-research-agent-template" -> "langchain-ai/react-agent"
"langchain-ai/rag-research-agent-template" -> "langchain-ai/memory-agent"
"langchain-ai/rag-research-agent-template" -> "langchain-ai/data-enrichment"
"langchain-ai/rag-research-agent-template" -> "langchain-ai/langgraph-fullstack-python"
"langchain-ai/rag-research-agent-template" -> "langchain-ai/memory-template"
"langchain-ai/rag-research-agent-template" -> "langchain-ai/new-langgraph-project"
"IBM/watsonx-ai-platform-demos" -> "IBM/watsonx-developer-hub"
"Kriptikz/ore-hq-server" -> "Kriptikz/ore-hq-client"
"Kriptikz/ore-hq-server" -> "xintai6660707/ore-mine-pool"
"Kriptikz/ore-hq-client" -> "Kriptikz/ore-hq-server"
"Kriptikz/ore-hq-client" -> "Bifrost-Technologies/ore-pool-miner"
"Nutlope/finetune" -> "Nutlope/ai-search-engine"
"rocketseat-education/nlw-journey-ia" -> "rocketseat-education/nlw-journey-react-native"
"vercel-labs/ai-sdk-preview-roundtrips" -> "vercel-labs/ai-sdk-preview-multi-steps"
"vercel-labs/ai-sdk-preview-roundtrips" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"vercel-labs/ai-sdk-preview-roundtrips" -> "vercel-labs/ai-sdk-preview-attachments"
"vercel-labs/ai-sdk-preview-roundtrips" -> "vercel-labs/ai-sdk-preview-use-object"
"vercel-labs/ai-sdk-preview-roundtrips" -> "vercel-labs/ai-sdk-flags-edge-config"
"vercel-labs/ai-sdk-preview-roundtrips" -> "vercel-labs/ai-sdk-preview-pdf-support"
"vercel-labs/ai-sdk-preview-roundtrips" -> "vercel-labs/ai-sdk-preview-provider-registry"
"vercel-labs/ai-sdk-preview-attachments" -> "vercel-labs/ai-sdk-preview-use-object"
"vercel-labs/ai-sdk-preview-attachments" -> "vercel-labs/ai-sdk-preview-roundtrips"
"vercel-labs/ai-sdk-preview-attachments" -> "vercel-labs/ai-sdk-flags-edge-config"
"vercel-labs/ai-sdk-preview-attachments" -> "vercel-labs/ai-sdk-preview-provider-registry"
"vercel-labs/ai-sdk-preview-attachments" -> "vercel-labs/ai-sdk-preview-multi-steps"
"vercel-labs/ai-sdk-preview-attachments" -> "vercel-labs/ai-sdk-reasoning-starter"
"vercel-labs/ai-sdk-preview-attachments" -> "vercel-labs/ai-sdk-preview-array-output-mode"
"vercel-labs/ai-sdk-preview-attachments" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"mckaywrigley/ai-router-chat" -> "Not-Diamond/awesome-ai-model-routing"
"mckaywrigley/ai-router-chat" -> "mckaywrigley/realtime-ai-livekit-playground"
"tonywu71/colpali-cookbooks" -> "AnswerDotAI/byaldi"
"tonywu71/colpali-cookbooks" -> "illuin-tech/vidore-benchmark"
"tonywu71/colpali-cookbooks" -> "illuin-tech/colpali"
"tonywu71/colpali-cookbooks" -> "kturung/colpali-llama-vision-rag"
"tonywu71/colpali-cookbooks" -> "adithya-s-k/VARAG"
"tonywu71/colpali-cookbooks" -> "s-emanuilov/litepali"
"moondevonyt/agent-zero" -> "moondevonyt/ZerePy"
"moondevonyt/agent-zero" -> "moondevonyt/eliza"
"moondevonyt/agent-zero" -> "moondevonyt/learn-typescript-from-python"
"moondevonyt/agent-zero" -> "moondevonyt/goose"
"moondevonyt/agent-zero" -> "moondevonyt/Delete-OpenAI-Assistants-In-Bulk"
"saurabhlalsaxena/Perplexity-Clone-v0.1" -> "dheerajrhegde/servicedesk_langgraph_tavily"
"CodersHQ-AI-ML-Community/ai-confluence" -> "Gaurav-Gosain/ollamanager"
"CodersHQ-AI-ML-Community/ai-confluence" -> "yazanrisheh/Synthetic-Data-Generation-with-LangChain"
"SharpLogic/LightNap" -> "anonymousvano/uncensored-hidden-wiki"
"SharpLogic/LightNap" -> "jimmyraj18/jimmyraj18"
"SapienzaNLP/maverick-coref" -> "Babelscape/FENICE"
"SapienzaNLP/maverick-coref" -> "Babelscape/WSL"
"SapienzaNLP/maverick-coref" -> "SapienzaNLP/zebra"
"SapienzaNLP/maverick-coref" -> "Babelscape/echoes-from-alexandria"
"phodal/shire" -> "phodal/aise"
"phodal/shire" -> "zjh7890/gpt-tools"
"phodal/shire" -> "shire-lang/shire-demo"
"phodal/shire" -> "tw-haiven/haiven"
"finnvoor/SwiftUIFX" -> "finnvoor/LocalVideoStreaming"
"langchain-ai/retrieval-agent-template" -> "langchain-ai/data-enrichment"
"langchain-ai/retrieval-agent-template" -> "langchain-ai/rag-research-agent-template"
"i-am-bee/bee-api" -> "i-am-bee/bee-python-sdk"
"modal-labs/ci-on-modal" -> "modal-labs/libmodal"
"tom-doerr/perplexity_search" -> "tom-doerr/simpledspy"
"jgravelle/Py2md" -> "jgravelle/PocketgroqPKE"
"jgravelle/Py2md" -> "jgravelle/Grompt_plugin"
"jgravelle/Py2md" -> "jgravelle/MiniGroqqle"
"jgravelle/Py2md" -> "jgravelle/Groqqle"
"jgravelle/Py2md" -> "jgravelle/AutogroqAgent"
"jgravelle/Py2md" -> "jgravelle/Grompt"
"jgravelle/Py2md" -> "tonyoconnell/Groqqle"
"jgravelle/Py2md" -> "jgravelle/StrawberryGroq"
"jgravelle/Py2md" -> "jgravelle/jPaste"
"disler/reusable-openai-fine-tune" -> "disler/llm-prompt-testing-quick-start"
"disler/reusable-openai-fine-tune" -> "disler/personal-ai-starter-pack"
"disler/reusable-openai-fine-tune" -> "disler/marimo-prompt-library"
"disler/reusable-openai-fine-tune" -> "disler/diffbro"
"jgravelle/MiniGroqqle" -> "jgravelle/AutogroqAgent"
"jgravelle/MiniGroqqle" -> "jgravelle/shugok-ai"
"phodal/aise" -> "phodal/shire"
"Bifrost-Technologies/ore-pool-miner" -> "Kriptikz/ore-hq-client"
"ed-donner/choose_llm" -> "ed-donner/agentic"
"KardelRuveyda/langchain-mystic" -> "KardelRuveyda/dotnet-mystic"
"KardelRuveyda/langchain-mystic" -> "KardelRuveyda/prompt-engineering-turkish-book"
"DevHuxley/How-to-create-honeypot-token" -> "blxsi/LBX-Grabber"
"DevHuxley/How-to-create-honeypot-token" -> "shegongku2024/TGshegongku"
"i-am-bee/beeai-framework-ts-starter" -> "i-am-bee/bee-stack"
"i-am-bee/beeai-framework-ts-starter" -> "i-am-bee/beeai-code-interpreter"
"i-am-bee/beeai-framework-ts-starter" -> "i-am-bee/bee-python-sdk"
"i-am-bee/beeai-framework-ts-starter" -> "i-am-bee/bee-api"
"i-am-bee/beeai-framework-ts-starter" -> "i-am-bee/bee-ui"
"i-am-bee/beeai-framework-ts-starter" -> "i-am-bee/bee-community-tools"
"i-am-bee/beeai-framework-ts-starter" -> "i-am-bee/bee-proto"
"i-am-bee/bee-stack" -> "i-am-bee/beeai-framework-ts-starter"
"i-am-bee/bee-stack" -> "i-am-bee/bee-ui"
"i-am-bee/bee-stack" -> "i-am-bee/bee-api"
"i-am-bee/bee-stack" -> "i-am-bee/beeai-code-interpreter"
"i-am-bee/bee-stack" -> "i-am-bee/bee-python-sdk"
"i-am-bee/bee-stack" -> "i-am-bee/bee-community-tools"
"i-am-bee/bee-stack" -> "i-am-bee/bee-proto"
"i-am-bee/bee-stack" -> "i-am-bee/beekeeper"
"i-am-bee/bee-stack" -> "i-am-bee/acp"
"DataScienceUIBK/HintQA" -> "DataScienceUIBK/TriviaHG"
"DataScienceUIBK/HintQA" -> "DataScienceUIBK/HintEval"
"mixedbread-ai/ofen" -> "mixedbread-ai/wiki_demo_app"
"mixedbread-ai/ofen" -> "mixedbread-ai/binary-embeddings"
"mixedbread-ai/ofen" -> "mixedbread-ai/python-sdk"
"Not-Diamond/RoRF" -> "Not-Diamond/awesome-ai-model-routing"
"Not-Diamond/RoRF" -> "Not-Diamond/notdiamond-python"
"jgravelle/groqcrawl" -> "jgravelle/pocketgroq"
"jgravelle/groqcrawl" -> "jgravelle/MiniGroqqle"
"jgravelle/groqcrawl" -> "jgravelle/Groqqle"
"ninohdasilva/fasthtml-tailwind-template" -> "dgwyer/fasthtml-demos"
"AllAboutAI-YT/e-labs_agent" -> "AllAboutAI-YT/ai-engineer-project1"
"Styx-Crypter/Fud-Crypter-2024-Styx-Builder" -> "ulychen0119/Sol-Raydium-Sniper-Bot"
"trypear/pearai-documentation" -> "trypear/pearai-submodule"
"ExoniaCoder/flash-usdt-erc20" -> "DewyCoder/crypto-trading-bot-eth-bnb"
"DewyCoder/crypto-trading-bot-eth-bnb" -> "hasan4adnan/Recta-AI"
"rocketseat-education/nlw-journey-go" -> "rocketseat-education/nlw-journey-devops"
"jgravelle/jPaste" -> "jgravelle/AutoGrok"
"jgravelle/jPaste" -> "tonyoconnell/Groqqle"
"browserbase/browserbase-computer-use" -> "browserbase/BrowseGPT"
"SuveenE/photos2movie" -> "SuveenE/codenames-ai"
"asg017/sqlite-rembed" -> "asg017/sqlite-lembed"
"i-am-bee/bee-python-sdk" -> "i-am-bee/bee-community-tools"
"i-am-bee/bee-ui" -> "i-am-bee/bee-api"
"i-am-bee/bee-ui" -> "i-am-bee/bee-python-sdk"
"i-am-bee/bee-ui" -> "i-am-bee/bee-stack"
"i-am-bee/bee-ui" -> "i-am-bee/beeai-code-interpreter"
"i-am-bee/bee-ui" -> "i-am-bee/bee-community-tools"
"i-am-bee/bee-ui" -> "i-am-bee/bee-proto"
"i-am-bee/bee-ui" -> "i-am-bee/beekeeper"
"i-am-bee/bee-ui" -> "i-am-bee/beeai-framework-ts-starter"
"ArcadeAI/arcade-py" -> "ArcadeAI/arcade-js"
"ArcadeAI/arcade-py" -> "ArcadeAI/ArcadeGPT"
"ArcadeAI/arcade-js" -> "ArcadeAI/arcade-py"
"guoyao/graphrag-more" -> "aihes/graphrag"
"NSHipster/Nominate" -> "loopwork-ai/ollama-swift"
"nischalj10/headless-ollama" -> "nischalj10/local-recall"
"coder/coder-desktop-windows" -> "coder/bigdur"
"AllAboutAI-YT/claude-artifact-prompts" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/claude-artifact-prompts" -> "AllAboutAI-YT/ai-engineer-project1"
"AllAboutAI-YT/claude-artifact-prompts" -> "AllAboutAI-YT/text-to-JSON"
"AllAboutAI-YT/claude-artifact-prompts" -> "AllAboutAI-YT/claude-chrome-ex"
"AllAboutAI-YT/claude-artifact-prompts" -> "AllAboutAI-YT/Command-R-GPT-4V2"
"jgravelle/StrawberryGroq" -> "jgravelle/AutogroqAgent"
"jgravelle/StrawberryGroq" -> "jgravelle/MiniGroqqle"
"jgravelle/StrawberryGroq" -> "jgravelle/Grompt"
"jgravelle/StrawberryGroq" -> "jgravelle/Grompt_plugin"
"jgravelle/StrawberryGroq" -> "jgravelle/Py2md"
"Knowledgator/GLiClass" -> "Knowledgator/GLiClass.c"
"Knowledgator/GLiClass" -> "jackboyla/GLiREL"
"Knowledgator/GLiClass" -> "Knowledgator/GLiNER.cpp"
"mozilla-ai/document-to-podcast" -> "mozilla-ai/speech-to-text-finetune"
"AllAboutAI-YT/claude-chrome-ex" -> "AllAboutAI-YT/think-before-you-speak"
"AllAboutAI-YT/claude-chrome-ex" -> "AllAboutAI-YT/ai-engineer-project1"
"AllAboutAI-YT/claude-chrome-ex" -> "AllAboutAI-YT/text-to-JSON"
"AllAboutAI-YT/claude-chrome-ex" -> "AllAboutAI-YT/claude-artifact-prompts"
"AllAboutAI-YT/claude-chrome-ex" -> "AllAboutAI-YT/voice-to-image-tensorRT"
"apache/openwhisk-cli" -> "apache/openwhisk-client-go"
"apache/openwhisk-cli" -> "apache/openwhisk-devtools"
"apache/openwhisk-cli" -> "apache/openwhisk-wskdeploy"
"apache/openwhisk-cli" -> "apache/openwhisk-client-python"
"callmephilip/html2ft" -> "phihung/fh_utils"
"jgravelle/AutoGrok" -> "jgravelle/jPaste"
"jgravelle/AutoGrok" -> "jgravelle/aiAPIkeys"
"langchain-ai/story-writing" -> "langchain-ai/lang-memgpt"
"i-am-bee/beeai-code-interpreter" -> "i-am-bee/bee-proto"
"i-am-bee/beeai-code-interpreter" -> "i-am-bee/bee-python-sdk"
"i-am-bee/beeai-code-interpreter" -> "i-am-bee/bee-community-tools"
"i-am-bee/beeai-code-interpreter" -> "i-am-bee/bee-api"
"LangGraph-GUI/LangGraph-GUI-backend" -> "LangGraph-GUI/LangGraph-GUI-reactflow"
"LangGraph-GUI/LangGraph-GUI-backend" -> "Erickrus/langgraph-editor"
"jgravelle/shugok-ai" -> "jgravelle/MiniGroqqle"
"pipecat-ai/open-sesame" -> "daily-co/pipecat-cloud-starter"
"di37/youtube-notes-generator" -> "di37/multiclass-news-classification-using-llms"
"di37/youtube-notes-generator" -> "CodersHQ-AI-ML-Community/ai-confluence"
"jasonkylelol/graphrag-chinese" -> "Airmomo/graphrag-practice-chinese"
"phihung/fasthtml_examples" -> "phihung/fh_utils"
"jgravelle/Grompt_plugin" -> "jgravelle/Groquments"
"jgravelle/Grompt_plugin" -> "jgravelle/Py2md"
"MinishLab/tokenlearn" -> "MinishLab/evaluation"
"Babelscape/LLM-Oasis" -> "mwatkins1970/SAE_Feature_Interpretability_Tool"
"Babelscape/LLM-Oasis" -> "Babelscape/echoes-from-alexandria"
"Babelscape/LLM-Oasis" -> "Babelscape/WSL"
"DataScienceUIBK/HintEval" -> "DataScienceUIBK/HintQA"
"DataScienceUIBK/HintEval" -> "DataScienceUIBK/TriviaHG"
"yasyf/anthropic-computer-use-modal" -> "arihanv/fasthtml-modal"
"phihung/fh_utils" -> "callmephilip/html2ft"
"phihung/fh_utils" -> "phihung/fasthtml_examples"
"coder/guts" -> "ericpaulsen/coder-aks"
"Scrapybara/scrapybara-ts" -> "Scrapybara/scrapybara-ts-template"
"Scrapybara/scrapybara-ts" -> "Scrapybara/scrapybara-mcp"
"jgravelle/Groquments" -> "jgravelle/aiAPIkeys"
"Babelscape/FENICE" -> "Babelscape/WSL"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "punkpeye/awesome-mcp-servers"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "browser-use/browser-use"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "Shubhamsaboo/awesome-llm-apps"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "modelcontextprotocol/servers"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "FoundationAgents/OpenManus"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "PatrickJS/awesome-cursorrules"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "unclecode/crawl4ai"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "cline/cline"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "mendableai/firecrawl"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "microsoft/markitdown"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "openai/codex"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "virattt/ai-hedge-fund"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "agno-agi/agno"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "All-Hands-AI/OpenHands"
"x1xhlol/system-prompts-and-models-of-ai-tools" -> "camel-ai/owl"
"LearningCircuit/local-deep-research" -> "zilliztech/deep-searcher"
"LearningCircuit/local-deep-research" -> "langchain-ai/local-deep-researcher"
"LearningCircuit/local-deep-research" -> "Fosowl/agenticSeek"
"LearningCircuit/local-deep-research" -> "sentient-agi/OpenDeepSearch"
"LearningCircuit/local-deep-research" -> "btahir/open-deep-research"
"LearningCircuit/local-deep-research" -> "jina-ai/node-DeepResearch"
"LearningCircuit/local-deep-research" -> "u14app/deep-research" ["e"=1]
"LearningCircuit/local-deep-research" -> "langchain-ai/open_deep_research"
"LearningCircuit/local-deep-research" -> "HKUDS/AutoAgent"
"LearningCircuit/local-deep-research" -> "signerlabs/Klee" ["e"=1]
"LearningCircuit/local-deep-research" -> "langmanus/langmanus"
"LearningCircuit/local-deep-research" -> "OpenAgentPlatform/Dive" ["e"=1]
"LearningCircuit/local-deep-research" -> "morphik-org/morphik-core"
"LearningCircuit/local-deep-research" -> "bytedance/deer-flow"
"LearningCircuit/local-deep-research" -> "nickscamara/open-deep-research"
"krillinai/KrillinAI" -> "Zackriya-Solutions/meeting-minutes"
"krillinai/KrillinAI" -> "Huanshere/VideoLingo"
"krillinai/KrillinAI" -> "ourongxing/newsnow"
"krillinai/KrillinAI" -> "jiji262/douyin-downloader" ["e"=1]
"krillinai/KrillinAI" -> "funstory-ai/BabelDOC"
"krillinai/KrillinAI" -> "getmaxun/maxun"
"krillinai/KrillinAI" -> "yeongpin/cursor-free-vip"
"krillinai/KrillinAI" -> "harry0703/MoneyPrinterTurbo"
"krillinai/KrillinAI" -> "GuijiAI/HeyGem.ai" ["e"=1]
"krillinai/KrillinAI" -> "kortix-ai/suna"
"krillinai/KrillinAI" -> "jianchang512/pyvideotrans" ["e"=1]
"krillinai/KrillinAI" -> "Bistutu/FluentRead" ["e"=1]
"krillinai/KrillinAI" -> "Byaidu/PDFMathTranslate"
"krillinai/KrillinAI" -> "jlowin/fastmcp"
"krillinai/KrillinAI" -> "microsoft/ai-agents-for-beginners"
"henrythe9th/AI-Crash-Course" -> "patchy631/ai-engineering-hub"
"henrythe9th/AI-Crash-Course" -> "huggingface/smol-course"
"henrythe9th/AI-Crash-Course" -> "anthropics/courses"
"henrythe9th/AI-Crash-Course" -> "armankhondker/awesome-ai-ml-resources" ["e"=1]
"henrythe9th/AI-Crash-Course" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"henrythe9th/AI-Crash-Course" -> "chiphuyen/aie-book"
"henrythe9th/AI-Crash-Course" -> "NirDiamant/GenAI_Agents"
"henrythe9th/AI-Crash-Course" -> "browserbase/stagehand"
"henrythe9th/AI-Crash-Course" -> "Shubhamsaboo/awesome-llm-apps"
"henrythe9th/AI-Crash-Course" -> "supermemoryai/supermemory"
"henrythe9th/AI-Crash-Course" -> "eastlondoner/cursor-tools"
"henrythe9th/AI-Crash-Course" -> "hesamsheikh/ml-retreat" ["e"=1]
"henrythe9th/AI-Crash-Course" -> "aishwaryanr/awesome-generative-ai-guide"
"henrythe9th/AI-Crash-Course" -> "adam-maj/deep-learning" ["e"=1]
"henrythe9th/AI-Crash-Course" -> "mshumer/OpenDeepResearcher"
"David-patrick-chuks/Instagram-AI-Agent" -> "ericciarla/trendFinder"
"David-patrick-chuks/Instagram-AI-Agent" -> "openai/openai-realtime-agents"
"David-patrick-chuks/Instagram-AI-Agent" -> "langchain-ai/social-media-agent"
"David-patrick-chuks/Instagram-AI-Agent" -> "Integuru-AI/Integuru"
"David-patrick-chuks/Instagram-AI-Agent" -> "elizaOS/agent-twitter-client"
"David-patrick-chuks/Instagram-AI-Agent" -> "zaidmukaddam/scira"
"David-patrick-chuks/Instagram-AI-Agent" -> "steel-dev/steel-browser"
"David-patrick-chuks/Instagram-AI-Agent" -> "langchain-ai/open-canvas"
"David-patrick-chuks/Instagram-AI-Agent" -> "eastlondoner/cursor-tools"
"David-patrick-chuks/Instagram-AI-Agent" -> "refly-ai/refly"
"David-patrick-chuks/Instagram-AI-Agent" -> "SamuelSchmidgall/AgentLaboratory"
"David-patrick-chuks/Instagram-AI-Agent" -> "mshumer/OpenDeepResearcher"
"David-patrick-chuks/Instagram-AI-Agent" -> "antiwork/shortest"
"David-patrick-chuks/Instagram-AI-Agent" -> "browserbase/stagehand"
"David-patrick-chuks/Instagram-AI-Agent" -> "rag-web-ui/rag-web-ui" ["e"=1]
"yeongpin/cursor-free-vip" -> "yuaotian/go-cursor-help" ["e"=1]
"yeongpin/cursor-free-vip" -> "chengazhen/cursor-auto-free" ["e"=1]
"yeongpin/cursor-free-vip" -> "punkpeye/awesome-mcp-servers"
"yeongpin/cursor-free-vip" -> "PatrickJS/awesome-cursorrules"
"yeongpin/cursor-free-vip" -> "krillinai/KrillinAI"
"yeongpin/cursor-free-vip" -> "harry0703/MoneyPrinterTurbo"
"yeongpin/cursor-free-vip" -> "x1xhlol/system-prompts-and-models-of-ai-tools"
"yeongpin/cursor-free-vip" -> "CherryHQ/cherry-studio"
"yeongpin/cursor-free-vip" -> "browser-use/browser-use"
"yeongpin/cursor-free-vip" -> "FoundationAgents/OpenManus"
"yeongpin/cursor-free-vip" -> "kingparks/cursor-vip" ["e"=1]
"yeongpin/cursor-free-vip" -> "unclecode/crawl4ai"
"yeongpin/cursor-free-vip" -> "Shubhamsaboo/awesome-llm-apps"
"yeongpin/cursor-free-vip" -> "lobehub/lobe-chat"
"yeongpin/cursor-free-vip" -> "microsoft/ai-agents-for-beginners"
"OpenHealthForAll/open-health" -> "fastenhealth/fasten-onprem" ["e"=1]
"OpenHealthForAll/open-health" -> "manualdousuario/marreta" ["e"=1]
"OpenHealthForAll/open-health" -> "Kiln-AI/Kiln"
"OpenHealthForAll/open-health" -> "signerlabs/Klee" ["e"=1]
"OpenHealthForAll/open-health" -> "clusterzx/paperless-ai" ["e"=1]
"OpenHealthForAll/open-health" -> "karakeep-app/karakeep" ["e"=1]
"OpenHealthForAll/open-health" -> "GitHamza0206/simba"
"OpenHealthForAll/open-health" -> "DrewThomasson/ebook2audiobook"
"OpenHealthForAll/open-health" -> "11notes/docker-kms" ["e"=1]
"OpenHealthForAll/open-health" -> "thepersonalaicompany/amurex"
"OpenHealthForAll/open-health" -> "LearningCircuit/local-deep-research"
"OpenHealthForAll/open-health" -> "rag-web-ui/rag-web-ui" ["e"=1]
"OpenHealthForAll/open-health" -> "kyutai-labs/hibiki" ["e"=1]
"OpenHealthForAll/open-health" -> "Freika/dawarich" ["e"=1]
"OpenHealthForAll/open-health" -> "mshumer/OpenDeepResearcher"
"FoloUp/FoloUp" -> "panda-sandeep/epigram"
"FoloUp/FoloUp" -> "exa-labs/company-researcher"
"FoloUp/FoloUp" -> "echohive42/AI-reads-books-page-by-page"
"FoloUp/FoloUp" -> "SuveenE/codenames-ai"
"FoloUp/FoloUp" -> "Doriandarko/deepseek-engineer"
"FoloUp/FoloUp" -> "NVIDIA-AI-Blueprints/pdf-to-podcast"
"FoloUp/FoloUp" -> "xynehq/xyne"
"FoloUp/FoloUp" -> "GitHamza0206/simba"
"FoloUp/FoloUp" -> "harishdeivanayagam/rowfill"
"FoloUp/FoloUp" -> "specstoryai/getspecstory"
"FoloUp/FoloUp" -> "supavec/supavec"
"FoloUp/FoloUp" -> "13point5/gemini-cursor"
"FoloUp/FoloUp" -> "Zackriya-Solutions/meeting-minutes"
"FoloUp/FoloUp" -> "gcui-art/markdown-to-image" ["e"=1]
"FoloUp/FoloUp" -> "egoist/sitefetch"
"IsaacGemal/wikitok" -> "exa-labs/exa-deepseek-chat"
"IsaacGemal/wikitok" -> "rbrown101010/yapsearch"
"IsaacGemal/wikitok" -> "ishaan1013/sandbox" ["e"=1]
"IsaacGemal/wikitok" -> "xajik/thedeck" ["e"=1]
"IsaacGemal/wikitok" -> "t3dotgg/unduck" ["e"=1]
"IsaacGemal/wikitok" -> "Nutlope/blinkshot"
"IsaacGemal/wikitok" -> "KoljaB/RealtimeVoiceChat"
"IsaacGemal/wikitok" -> "t3dotgg/quickpic" ["e"=1]
"IsaacGemal/wikitok" -> "Mail-0/Zero" ["e"=1]
"IsaacGemal/wikitok" -> "google-gemini/gemini-image-editing-nextjs-quickstart"
"IsaacGemal/wikitok" -> "soGeneri/awesome-launch"
"camel-ai/owl" -> "FoundationAgents/OpenManus"
"camel-ai/owl" -> "camel-ai/camel"
"camel-ai/owl" -> "bytedance/UI-TARS-desktop"
"camel-ai/owl" -> "browser-use/browser-use"
"camel-ai/owl" -> "langmanus/langmanus"
"camel-ai/owl" -> "punkpeye/awesome-mcp-servers"
"camel-ai/owl" -> "openai/openai-agents-python"
"camel-ai/owl" -> "kortix-ai/suna"
"camel-ai/owl" -> "nanobrowser/nanobrowser"
"camel-ai/owl" -> "agno-agi/agno"
"camel-ai/owl" -> "browser-use/web-ui"
"camel-ai/owl" -> "microsoft/OmniParser"
"camel-ai/owl" -> "Shubhamsaboo/awesome-llm-apps"
"camel-ai/owl" -> "modelcontextprotocol/servers"
"camel-ai/owl" -> "mendableai/firecrawl"
"egoist/sitefetch" -> "elizaOS/agent-twitter-client"
"egoist/sitefetch" -> "video-db/Director"
"egoist/sitefetch" -> "exa-labs/company-researcher"
"egoist/sitefetch" -> "eastlondoner/cursor-tools"
"egoist/sitefetch" -> "echohive42/AI-reads-books-page-by-page"
"egoist/sitefetch" -> "Dicklesworthstone/your-source-to-prompt.html"
"egoist/sitefetch" -> "langwatch/langwatch"
"egoist/sitefetch" -> "supavec/supavec"
"egoist/sitefetch" -> "superagent-ai/reag"
"egoist/sitefetch" -> "steel-dev/steel-browser"
"egoist/sitefetch" -> "lumina-ai-inc/chunkr"
"egoist/sitefetch" -> "harishsg993010/LLM-Reasoner"
"egoist/sitefetch" -> "CatchTheTornado/text-extract-api"
"egoist/sitefetch" -> "s-smits/agentic-cursorrules"
"egoist/sitefetch" -> "MotiaDev/motia"
"The-Pocket/PocketFlow" -> "The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge"
"The-Pocket/PocketFlow" -> "eyaltoledano/claude-task-master"
"The-Pocket/PocketFlow" -> "upstash/context7"
"The-Pocket/PocketFlow" -> "getzep/graphiti"
"The-Pocket/PocketFlow" -> "pydantic/pydantic-ai"
"The-Pocket/PocketFlow" -> "BrainBlend-AI/atomic-agents"
"The-Pocket/PocketFlow" -> "lastmile-ai/mcp-agent"
"The-Pocket/PocketFlow" -> "langmanus/langmanus"
"The-Pocket/PocketFlow" -> "jlowin/fastmcp"
"The-Pocket/PocketFlow" -> "camel-ai/owl"
"The-Pocket/PocketFlow" -> "openai/openai-agents-python"
"The-Pocket/PocketFlow" -> "RooVetGit/Roo-Code"
"The-Pocket/PocketFlow" -> "PySpur-Dev/pyspur"
"The-Pocket/PocketFlow" -> "The-Pocket/PocketFlow-Template-Python"
"The-Pocket/PocketFlow" -> "refly-ai/refly"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "The-Pocket/PocketFlow"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "upstash/context7"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "x1xhlol/system-prompts-and-models-of-ai-tools"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "eyaltoledano/claude-task-master"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "nari-labs/dia" ["e"=1]
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "kortix-ai/suna"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "yamadashy/repomix"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "ahmedkhaleel2004/gitdiagram"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "voideditor/void"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "openai/codex"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "AsyncFuncAI/deepwiki-open"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "Shubhamsaboo/awesome-llm-apps"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "browserbase/stagehand"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "jlowin/fastmcp"
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" -> "trycua/cua"
"stanford-mast/blast" -> "SureScaleAI/cleverbee"
"stanford-mast/blast" -> "coder/agentapi"
"stanford-mast/blast" -> "OpenPipe/ART" ["e"=1]
"deepseek-ai/DeepSeek-R1" -> "deepseek-ai/DeepSeek-V3"
"deepseek-ai/DeepSeek-R1" -> "ollama/ollama"
"deepseek-ai/DeepSeek-R1" -> "huggingface/open-r1" ["e"=1]
"deepseek-ai/DeepSeek-R1" -> "deepseek-ai/awesome-deepseek-integration"
"deepseek-ai/DeepSeek-R1" -> "deepseek-ai/DeepSeek-Coder"
"deepseek-ai/DeepSeek-R1" -> "open-webui/open-webui"
"deepseek-ai/DeepSeek-R1" -> "langgenius/dify"
"deepseek-ai/DeepSeek-R1" -> "vllm-project/vllm"
"deepseek-ai/DeepSeek-R1" -> "langchain-ai/langchain"
"deepseek-ai/DeepSeek-R1" -> "FoundationAgents/OpenManus"
"deepseek-ai/DeepSeek-R1" -> "deepseek-ai/Janus"
"deepseek-ai/DeepSeek-R1" -> "meta-llama/llama"
"deepseek-ai/DeepSeek-R1" -> "QwenLM/Qwen3" ["e"=1]
"deepseek-ai/DeepSeek-R1" -> "huggingface/transformers"
"deepseek-ai/DeepSeek-R1" -> "hiyouga/LLaMA-Factory"
"VxASI/blender-mcp-vxai" -> "instructa/viber3d"
"martin226/vibe-draw" -> "lakshaybhushan/vecto3d" ["e"=1]
"martin226/vibe-draw" -> "ibelick/prompt-kit" ["e"=1]
"martin226/vibe-draw" -> "martin226/slideitin"
"martin226/vibe-draw" -> "cyfyifanchen/one-person-company" ["e"=1]
"martin226/vibe-draw" -> "refly-ai/refly"
"martin226/vibe-draw" -> "ahujasid/blender-mcp"
"martin226/vibe-draw" -> "VAST-AI-Research/TripoSG" ["e"=1]
"martin226/vibe-draw" -> "supermemoryai/opensearch-ai"
"martin226/vibe-draw" -> "umlx5h/LLPlayer" ["e"=1]
"martin226/vibe-draw" -> "alecm20/story-flicks" ["e"=1]
"martin226/vibe-draw" -> "CopilotKit/open-mcp-client" ["e"=1]
"martin226/vibe-draw" -> "lmnr-ai/index"
"martin226/vibe-draw" -> "jamez-bondos/awesome-gpt4o-images"
"martin226/vibe-draw" -> "chongdashu/unreal-mcp" ["e"=1]
"martin226/vibe-draw" -> "MotiaDev/motia"
"google-gemini/starter-applets" -> "google-gemini/live-api-web-console"
"google-gemini/starter-applets" -> "googleapis/python-genai"
"google-gemini/starter-applets" -> "google-gemini/example-chat-app"
"google-gemini/starter-applets" -> "google-gemini/gemma-cookbook"
"google-gemini/starter-applets" -> "groq/groq-api-cookbook"
"google-gemini/starter-applets" -> "google-gemini/gemini-api-quickstart"
"google-gemini/starter-applets" -> "google-gemini/deprecated-generative-ai-js"
"google-gemini/starter-applets" -> "google-gemini/cookbook"
"google-gemini/starter-applets" -> "google-gemini/deprecated-generative-ai-python"
"google-gemini/starter-applets" -> "browserbase/open-operator"
"google-gemini/starter-applets" -> "osanseviero/InstantCoder"
"google-gemini/starter-applets" -> "googleapis/js-genai"
"google-gemini/starter-applets" -> "google/adk-samples"
"google-gemini/starter-applets" -> "yeyu2/Youtube_demos" ["e"=1]
"google-gemini/starter-applets" -> "AK391/ai-gradio"
"deepseek-ai/DeepSeek-V3" -> "deepseek-ai/DeepSeek-R1"
"deepseek-ai/DeepSeek-V3" -> "ollama/ollama"
"deepseek-ai/DeepSeek-V3" -> "huggingface/open-r1" ["e"=1]
"deepseek-ai/DeepSeek-V3" -> "deepseek-ai/DeepSeek-Coder"
"deepseek-ai/DeepSeek-V3" -> "deepseek-ai/Janus"
"deepseek-ai/DeepSeek-V3" -> "langgenius/dify"
"deepseek-ai/DeepSeek-V3" -> "deepseek-ai/awesome-deepseek-integration"
"deepseek-ai/DeepSeek-V3" -> "langchain-ai/langchain"
"deepseek-ai/DeepSeek-V3" -> "open-webui/open-webui"
"deepseek-ai/DeepSeek-V3" -> "vllm-project/vllm"
"deepseek-ai/DeepSeek-V3" -> "meta-llama/llama"
"deepseek-ai/DeepSeek-V3" -> "huggingface/transformers"
"deepseek-ai/DeepSeek-V3" -> "FoundationAgents/OpenManus"
"deepseek-ai/DeepSeek-V3" -> "Significant-Gravitas/AutoGPT"
"deepseek-ai/DeepSeek-V3" -> "QwenLM/Qwen3" ["e"=1]
"openai/codex" -> "modelcontextprotocol/servers"
"openai/codex" -> "google/A2A"
"openai/codex" -> "cline/cline"
"openai/codex" -> "openai/openai-agents-python"
"openai/codex" -> "anthropics/claude-code"
"openai/codex" -> "Aider-AI/aider"
"openai/codex" -> "browser-use/browser-use"
"openai/codex" -> "x1xhlol/system-prompts-and-models-of-ai-tools"
"openai/codex" -> "openai/swarm"
"openai/codex" -> "punkpeye/awesome-mcp-servers"
"openai/codex" -> "mendableai/firecrawl"
"openai/codex" -> "All-Hands-AI/OpenHands"
"openai/codex" -> "github/github-mcp-server"
"openai/codex" -> "RooVetGit/Roo-Code"
"openai/codex" -> "microsoft/markitdown"
"apache/openwhisk-deploy-kube" -> "apache/openwhisk-cli"
"apache/openwhisk-deploy-kube" -> "apache/openwhisk-devtools"
"apache/openwhisk-deploy-kube" -> "apache/openwhisk-wskdeploy"
"apache/openwhisk-deploy-kube" -> "ibm-functions/shell"
"apache/openwhisk-deploy-kube" -> "ibm-functions/composer"
"apache/openwhisk-deploy-kube" -> "apache/openwhisk-composer"
"apache/openwhisk-deploy-kube" -> "IBM/OpenWhisk-on-Kubernetes"
"apache/openwhisk-deploy-kube" -> "pacslab/SLApp-PerfCost-MdlOpt" ["e"=1]
"apache/openwhisk-deploy-kube" -> "lzjzx1122/FaaSFlow" ["e"=1]
"agiresearch/A-mem" -> "WujiangXu/AgenticMemory"
"microsoft/playwright-mcp" -> "executeautomation/mcp-playwright"
"microsoft/playwright-mcp" -> "github/github-mcp-server"
"microsoft/playwright-mcp" -> "modelcontextprotocol/servers"
"microsoft/playwright-mcp" -> "microsoft/ai-agents-for-beginners"
"microsoft/playwright-mcp" -> "punkpeye/awesome-mcp-servers"
"microsoft/playwright-mcp" -> "bytedance/UI-TARS-desktop"
"microsoft/playwright-mcp" -> "google/A2A"
"microsoft/playwright-mcp" -> "browserbase/stagehand"
"microsoft/playwright-mcp" -> "GLips/Figma-Context-MCP"
"microsoft/playwright-mcp" -> "browser-use/browser-use"
"microsoft/playwright-mcp" -> "jlowin/fastmcp"
"microsoft/playwright-mcp" -> "openai/codex"
"microsoft/playwright-mcp" -> "modelcontextprotocol/python-sdk"
"microsoft/playwright-mcp" -> "openai/openai-agents-python"
"microsoft/playwright-mcp" -> "AgentDeskAI/browser-tools-mcp"
"FoundationAgents/OpenManus" -> "camel-ai/owl"
"FoundationAgents/OpenManus" -> "browser-use/browser-use"
"FoundationAgents/OpenManus" -> "langgenius/dify"
"FoundationAgents/OpenManus" -> "FoundationAgents/MetaGPT"
"FoundationAgents/OpenManus" -> "punkpeye/awesome-mcp-servers"
"FoundationAgents/OpenManus" -> "modelcontextprotocol/servers"
"FoundationAgents/OpenManus" -> "infiniflow/ragflow"
"FoundationAgents/OpenManus" -> "cline/cline"
"FoundationAgents/OpenManus" -> "mendableai/firecrawl"
"FoundationAgents/OpenManus" -> "bytedance/UI-TARS-desktop"
"FoundationAgents/OpenManus" -> "microsoft/autogen"
"FoundationAgents/OpenManus" -> "open-webui/open-webui"
"FoundationAgents/OpenManus" -> "hiyouga/LLaMA-Factory"
"FoundationAgents/OpenManus" -> "All-Hands-AI/OpenHands"
"FoundationAgents/OpenManus" -> "CherryHQ/cherry-studio"
"bytedance/UI-TARS" -> "bytedance/UI-TARS-desktop"
"bytedance/UI-TARS" -> "web-infra-dev/midscene"
"bytedance/UI-TARS" -> "simular-ai/Agent-S"
"bytedance/UI-TARS" -> "kortix-ai/suna"
"bytedance/UI-TARS" -> "microsoft/OmniParser"
"bytedance/UI-TARS" -> "camel-ai/owl"
"bytedance/UI-TARS" -> "QwenLM/Qwen-Agent"
"bytedance/UI-TARS" -> "X-PLUG/MobileAgent" ["e"=1]
"bytedance/UI-TARS" -> "browser-use/web-ui"
"bytedance/UI-TARS" -> "getzep/graphiti"
"bytedance/UI-TARS" -> "browserbase/stagehand"
"bytedance/UI-TARS" -> "showlab/ShowUI" ["e"=1]
"bytedance/UI-TARS" -> "jlowin/fastmcp"
"bytedance/UI-TARS" -> "volcengine/verl" ["e"=1]
"bytedance/UI-TARS" -> "xlang-ai/OSWorld" ["e"=1]
"dzhng/deep-research" -> "nickscamara/open-deep-research"
"dzhng/deep-research" -> "jina-ai/node-DeepResearch"
"dzhng/deep-research" -> "mendableai/firecrawl"
"dzhng/deep-research" -> "assafelovic/gpt-researcher"
"dzhng/deep-research" -> "browser-use/browser-use"
"dzhng/deep-research" -> "microsoft/data-formulator"
"dzhng/deep-research" -> "camel-ai/owl"
"dzhng/deep-research" -> "langchain-ai/local-deep-researcher"
"dzhng/deep-research" -> "unclecode/crawl4ai"
"dzhng/deep-research" -> "huggingface/smolagents"
"dzhng/deep-research" -> "Shubhamsaboo/awesome-llm-apps"
"dzhng/deep-research" -> "browser-use/web-ui"
"dzhng/deep-research" -> "unslothai/unsloth"
"dzhng/deep-research" -> "FoundationAgents/OpenManus"
"dzhng/deep-research" -> "stanford-oval/storm"
"tadata-org/fastapi_mcp" -> "mcp-use/mcp-use"
"tadata-org/fastapi_mcp" -> "jlowin/fastmcp"
"tadata-org/fastapi_mcp" -> "modelcontextprotocol/python-sdk"
"tadata-org/fastapi_mcp" -> "pydantic/pydantic-ai"
"tadata-org/fastapi_mcp" -> "google/A2A"
"tadata-org/fastapi_mcp" -> "google/adk-python"
"tadata-org/fastapi_mcp" -> "lastmile-ai/mcp-agent"
"tadata-org/fastapi_mcp" -> "HKUDS/AutoAgent"
"tadata-org/fastapi_mcp" -> "openai/openai-agents-python"
"tadata-org/fastapi_mcp" -> "github/github-mcp-server"
"tadata-org/fastapi_mcp" -> "idosal/git-mcp"
"tadata-org/fastapi_mcp" -> "langchain-ai/langchain-mcp-adapters"
"tadata-org/fastapi_mcp" -> "getzep/graphiti"
"tadata-org/fastapi_mcp" -> "patchy631/ai-engineering-hub"
"tadata-org/fastapi_mcp" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"openai/openai-agents-python" -> "openai/swarm"
"openai/openai-agents-python" -> "modelcontextprotocol/python-sdk"
"openai/openai-agents-python" -> "google/A2A"
"openai/openai-agents-python" -> "camel-ai/owl"
"openai/openai-agents-python" -> "google/adk-python"
"openai/openai-agents-python" -> "pydantic/pydantic-ai"
"openai/openai-agents-python" -> "openai/codex"
"openai/openai-agents-python" -> "langchain-ai/langgraph"
"openai/openai-agents-python" -> "FoundationAgents/OpenManus"
"openai/openai-agents-python" -> "huggingface/smolagents"
"openai/openai-agents-python" -> "jlowin/fastmcp"
"openai/openai-agents-python" -> "modelcontextprotocol/servers"
"openai/openai-agents-python" -> "camel-ai/camel"
"openai/openai-agents-python" -> "crewAIInc/crewAI"
"openai/openai-agents-python" -> "agno-agi/agno"
"going-doer/Paper2Code" -> "SakanaAI/AI-Scientist-v2" ["e"=1]
"going-doer/Paper2Code" -> "transformerlab/transformerlab-app"
"going-doer/Paper2Code" -> "HKUDS/AI-Researcher" ["e"=1]
"going-doer/Paper2Code" -> "tadata-org/fastapi_mcp"
"going-doer/Paper2Code" -> "VectifyAI/PageIndex"
"going-doer/Paper2Code" -> "shcherbak-ai/contextgem"
"going-doer/Paper2Code" -> "mcp-use/mcp-use"
"going-doer/Paper2Code" -> "afshinea/stanford-cme-295-transformers-large-language-models"
"going-doer/Paper2Code" -> "MinishLab/model2vec"
"going-doer/Paper2Code" -> "allenai/codescientist" ["e"=1]
"going-doer/Paper2Code" -> "patchy631/ai-engineering-hub"
"going-doer/Paper2Code" -> "blazickjp/arxiv-mcp-server" ["e"=1]
"going-doer/Paper2Code" -> "SamuelSchmidgall/AgentLaboratory"
"going-doer/Paper2Code" -> "HKUDS/AutoAgent"
"going-doer/Paper2Code" -> "zamalali/DeepGit"
"plexe-ai/plexe" -> "morphik-org/morphik-core"
"plexe-ai/plexe" -> "simstudioai/sim"
"plexe-ai/plexe" -> "HelixDB/helix-db"
"plexe-ai/plexe" -> "airweave-ai/airweave"
"plexe-ai/plexe" -> "Operative-Sh/web-eval-agent"
"plexe-ai/plexe" -> "trycua/cua"
"plexe-ai/plexe" -> "transformerlab/transformerlab-app"
"plexe-ai/plexe" -> "authed-dev/authed"
"plexe-ai/plexe" -> "Vexa-ai/vexa" ["e"=1]
"plexe-ai/plexe" -> "getprobo/probo"
"plexe-ai/plexe" -> "chonkie-inc/chonkie"
"plexe-ai/plexe" -> "mlop-ai/mlop"
"plexe-ai/plexe" -> "tadata-org/fastapi_mcp"
"plexe-ai/plexe" -> "rowboatlabs/rowboat"
"plexe-ai/plexe" -> "Agenta-AI/agenta"
"echohive42/AI-reads-books-page-by-page" -> "CatchTheTornado/text-extract-api"
"echohive42/AI-reads-books-page-by-page" -> "GitHamza0206/simba"
"echohive42/AI-reads-books-page-by-page" -> "Doriandarko/deepseek-engineer"
"echohive42/AI-reads-books-page-by-page" -> "NVIDIA-AI-Blueprints/pdf-to-podcast"
"echohive42/AI-reads-books-page-by-page" -> "ammaarreshi/Gemini-Search" ["e"=1]
"echohive42/AI-reads-books-page-by-page" -> "FoloUp/FoloUp"
"echohive42/AI-reads-books-page-by-page" -> "exa-labs/company-researcher"
"echohive42/AI-reads-books-page-by-page" -> "ccbikai/hacker-news" ["e"=1]
"echohive42/AI-reads-books-page-by-page" -> "reflex-dev/reflex-llm-examples"
"echohive42/AI-reads-books-page-by-page" -> "microsoft/PromptWizard"
"echohive42/AI-reads-books-page-by-page" -> "santinic/audiblez"
"echohive42/AI-reads-books-page-by-page" -> "elizaOS/agent-twitter-client"
"echohive42/AI-reads-books-page-by-page" -> "AK391/ai-gradio"
"echohive42/AI-reads-books-page-by-page" -> "rag-web-ui/rag-web-ui" ["e"=1]
"echohive42/AI-reads-books-page-by-page" -> "enoch3712/ExtractThinker"
"google/A2A" -> "google/adk-python"
"google/A2A" -> "modelcontextprotocol/python-sdk"
"google/A2A" -> "modelcontextprotocol/servers"
"google/A2A" -> "openai/openai-agents-python"
"google/A2A" -> "jlowin/fastmcp"
"google/A2A" -> "punkpeye/awesome-mcp-servers"
"google/A2A" -> "openai/codex"
"google/A2A" -> "github/github-mcp-server"
"google/A2A" -> "FoundationAgents/OpenManus"
"google/A2A" -> "langchain-ai/langgraph"
"google/A2A" -> "camel-ai/owl"
"google/A2A" -> "openai/swarm"
"google/A2A" -> "browser-use/browser-use"
"google/A2A" -> "microsoft/autogen"
"google/A2A" -> "crewAIInc/crewAI"
"humanlayer/12-factor-agents" -> "BoundaryML/baml"
"humanlayer/12-factor-agents" -> "567-labs/instructor"
"humanlayer/12-factor-agents" -> "browserbase/stagehand"
"humanlayer/12-factor-agents" -> "simstudioai/sim"
"humanlayer/12-factor-agents" -> "harishsg993010/damn-vulnerable-MCP-server" ["e"=1]
"humanlayer/12-factor-agents" -> "humanlayer/humanlayer"
"humanlayer/12-factor-agents" -> "mcp-use/mcp-use"
"humanlayer/12-factor-agents" -> "magnitudedev/magnitude"
"humanlayer/12-factor-agents" -> "tadata-org/fastapi_mcp"
"humanlayer/12-factor-agents" -> "steel-dev/steel-browser"
"humanlayer/12-factor-agents" -> "confident-ai/deepeval"
"humanlayer/12-factor-agents" -> "openai/codex"
"humanlayer/12-factor-agents" -> "pydantic/pydantic-ai"
"humanlayer/12-factor-agents" -> "lmnr-ai/index"
"humanlayer/12-factor-agents" -> "trycua/cua"
"SamuelSchmidgall/AgentLaboratory" -> "NovaSky-AI/SkyThought" ["e"=1]
"SamuelSchmidgall/AgentLaboratory" -> "SakanaAI/AI-Scientist"
"SamuelSchmidgall/AgentLaboratory" -> "NJU-PCALab/STAR" ["e"=1]
"SamuelSchmidgall/AgentLaboratory" -> "NVIDIA/Cosmos" ["e"=1]
"SamuelSchmidgall/AgentLaboratory" -> "openai/openai-realtime-agents"
"SamuelSchmidgall/AgentLaboratory" -> "simplescaling/s1" ["e"=1]
"SamuelSchmidgall/AgentLaboratory" -> "stanford-oval/storm"
"SamuelSchmidgall/AgentLaboratory" -> "dzhng/deep-research"
"SamuelSchmidgall/AgentLaboratory" -> "nickscamara/open-deep-research"
"SamuelSchmidgall/AgentLaboratory" -> "David-patrick-chuks/Instagram-AI-Agent"
"SamuelSchmidgall/AgentLaboratory" -> "Jiayi-Pan/TinyZero" ["e"=1]
"SamuelSchmidgall/AgentLaboratory" -> "huggingface/smolagents"
"SamuelSchmidgall/AgentLaboratory" -> "microsoft/RD-Agent"
"SamuelSchmidgall/AgentLaboratory" -> "langchain-ai/local-deep-researcher"
"SamuelSchmidgall/AgentLaboratory" -> "HKUDS/AutoAgent"
"langchain-ai/langchain-mcp-adapters" -> "esxr/langgraph-mcp"
"langchain-ai/langchain-mcp-adapters" -> "langchain-ai/langgraph-supervisor-py"
"langchain-ai/langchain-mcp-adapters" -> "langchain-ai/open_deep_research"
"langchain-ai/langchain-mcp-adapters" -> "langchain-ai/langgraph-swarm-py"
"langchain-ai/langchain-mcp-adapters" -> "langchain-ai/agent-chat-ui"
"langchain-ai/langchain-mcp-adapters" -> "langchain-ai/langgraph"
"langchain-ai/langchain-mcp-adapters" -> "teddynote-lab/langgraph-mcp-agents" ["e"=1]
"langchain-ai/langchain-mcp-adapters" -> "modelcontextprotocol/python-sdk"
"langchain-ai/langchain-mcp-adapters" -> "hinthornw/trustcall"
"langchain-ai/langchain-mcp-adapters" -> "mcp-use/mcp-use"
"langchain-ai/langchain-mcp-adapters" -> "lastmile-ai/mcp-agent"
"langchain-ai/langchain-mcp-adapters" -> "modelcontextprotocol/inspector" ["e"=1]
"langchain-ai/langchain-mcp-adapters" -> "JoshuaC215/agent-service-toolkit"
"langchain-ai/langchain-mcp-adapters" -> "von-development/awesome-LangGraph"
"langchain-ai/langchain-mcp-adapters" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"Dhravya/apple-mcp" -> "mainframecomputer/fullmoon-ios" ["e"=1]
"Dhravya/apple-mcp" -> "eastlondoner/cursor-tools"
"Dhravya/apple-mcp" -> "browser-use/macOS-use"
"Dhravya/apple-mcp" -> "recursechat/mcp-server-apple-shortcuts" ["e"=1]
"Dhravya/apple-mcp" -> "exa-labs/exa-mcp-server"
"Dhravya/apple-mcp" -> "loopwork-ai/iMCP"
"Dhravya/apple-mcp" -> "egoist/sitefetch"
"Dhravya/apple-mcp" -> "mendableai/firecrawl-mcp-server"
"Dhravya/apple-mcp" -> "anaisbetts/mcp-installer" ["e"=1]
"Dhravya/apple-mcp" -> "mcp-use/mcp-use"
"Dhravya/apple-mcp" -> "Blaizzy/mlx-audio" ["e"=1]
"Dhravya/apple-mcp" -> "ppl-ai/modelcontextprotocol"
"Dhravya/apple-mcp" -> "DannyMac180/meta-agent"
"Dhravya/apple-mcp" -> "ibelick/prompt-kit" ["e"=1]
"Dhravya/apple-mcp" -> "cameroncooke/XcodeBuildMCP" ["e"=1]
"ahujasid/blender-mcp" -> "justinpbarnett/unity-mcp" ["e"=1]
"ahujasid/blender-mcp" -> "Tencent/Hunyuan3D-2" ["e"=1]
"ahujasid/blender-mcp" -> "microsoft/TRELLIS" ["e"=1]
"ahujasid/blender-mcp" -> "punkpeye/awesome-mcp-servers"
"ahujasid/blender-mcp" -> "modelcontextprotocol/servers"
"ahujasid/blender-mcp" -> "camel-ai/owl"
"ahujasid/blender-mcp" -> "FoundationAgents/OpenManus"
"ahujasid/blender-mcp" -> "SesameAILabs/csm" ["e"=1]
"ahujasid/blender-mcp" -> "GLips/Figma-Context-MCP"
"ahujasid/blender-mcp" -> "Genesis-Embodied-AI/Genesis" ["e"=1]
"ahujasid/blender-mcp" -> "browser-use/browser-use"
"ahujasid/blender-mcp" -> "bytedance/UI-TARS-desktop"
"ahujasid/blender-mcp" -> "cline/cline"
"ahujasid/blender-mcp" -> "lllyasviel/FramePack" ["e"=1]
"ahujasid/blender-mcp" -> "microsoft/playwright-mcp"
"moondevonyt/moon-dev-ai-agents" -> "moondevonyt/Moon-Dev-Code"
"moondevonyt/moon-dev-ai-agents" -> "moondevonyt/eliza"
"moondevonyt/moon-dev-ai-agents" -> "daydy-dev/moon-dev-ai-agents-for-trading"
"moondevonyt/moon-dev-ai-agents" -> "moondevonyt/agent-zero"
"moondevonyt/moon-dev-ai-agents" -> "elizaOS/eliza"
"moondevonyt/moon-dev-ai-agents" -> "blorm-network/ZerePy" ["e"=1]
"moondevonyt/moon-dev-ai-agents" -> "chainstacklabs/pump-fun-bot" ["e"=1]
"moondevonyt/moon-dev-ai-agents" -> "virattt/ai-financial-agent"
"moondevonyt/moon-dev-ai-agents" -> "coleam00/ottomator-agents"
"moondevonyt/moon-dev-ai-agents" -> "sendaifun/solana-agent-kit" ["e"=1]
"moondevonyt/moon-dev-ai-agents" -> "elizaOS/agent-twitter-client"
"moondevonyt/moon-dev-ai-agents" -> "digbenjamins/SolanaTokenSniper"
"moondevonyt/moon-dev-ai-agents" -> "business-science/ai-data-science-team"
"moondevonyt/moon-dev-ai-agents" -> "e2b-dev/open-computer-use"
"moondevonyt/moon-dev-ai-agents" -> "moondevonyt/ZerePy"
"eyaltoledano/claude-task-master" -> "upstash/context7"
"eyaltoledano/claude-task-master" -> "PatrickJS/awesome-cursorrules"
"eyaltoledano/claude-task-master" -> "RooVetGit/Roo-Code"
"eyaltoledano/claude-task-master" -> "eastlondoner/cursor-tools"
"eyaltoledano/claude-task-master" -> "AgentDeskAI/browser-tools-mcp"
"eyaltoledano/claude-task-master" -> "elie222/inbox-zero" ["e"=1]
"eyaltoledano/claude-task-master" -> "yamadashy/repomix"
"eyaltoledano/claude-task-master" -> "vanzan01/cursor-memory-bank"
"eyaltoledano/claude-task-master" -> "kortix-ai/suna"
"eyaltoledano/claude-task-master" -> "x1xhlol/system-prompts-and-models-of-ai-tools"
"eyaltoledano/claude-task-master" -> "browserbase/stagehand"
"eyaltoledano/claude-task-master" -> "modelcontextprotocol/servers"
"eyaltoledano/claude-task-master" -> "stackblitz-labs/bolt.diy"
"eyaltoledano/claude-task-master" -> "agno-agi/agno"
"eyaltoledano/claude-task-master" -> "openai/codex"
"sullyo/webapp-starter" -> "mckaywrigley/mckays-app-template"
"sullyo/webapp-starter" -> "eastlondoner/cursor-tools"
"sullyo/webapp-starter" -> "CodeGuide-dev/codeguide-starter-lite"
"sullyo/webapp-starter" -> "ShenSeanChen/launch-mvp-stripe-nextjs-supabase"
"sullyo/webapp-starter" -> "RayFernando1337/llm-cursor-rules"
"sullyo/webapp-starter" -> "context-labs/autodelve"
"sullyo/webapp-starter" -> "s-smits/agentic-cursorrules"
"sullyo/webapp-starter" -> "sshtunnelvision/MCP-LOGO-GEN"
"sullyo/webapp-starter" -> "egoist/sitefetch"
"sullyo/webapp-starter" -> "transitive-bullshit/openai-realtime-api" ["e"=1]
"sullyo/webapp-starter" -> "jackfriks/expo-app-boilerplate"
"sullyo/webapp-starter" -> "superagent-ai/reag"
"sullyo/webapp-starter" -> "fdarkaou/open-deep-research"
"sullyo/webapp-starter" -> "Dhravya/apple-mcp"
"sullyo/webapp-starter" -> "ibelick/prompt-kit" ["e"=1]
"iliane5/meridian" -> "exa-labs/exa-mcp-server"
"iliane5/meridian" -> "mckaywrigley/mckays-app-template"
"iliane5/meridian" -> "jina-ai/node-DeepResearch"
"iliane5/meridian" -> "AgentOps-AI/AgentStack"
"iliane5/meridian" -> "eyaltoledano/claude-task-master"
"iliane5/meridian" -> "zaidmukaddam/scira"
"iliane5/meridian" -> "eastlondoner/cursor-tools"
"iliane5/meridian" -> "mendableai/firecrawl-mcp-server"
"iliane5/meridian" -> "MotiaDev/motia"
"iliane5/meridian" -> "cyberagiinc/DevDocs" ["e"=1]
"iliane5/meridian" -> "simular-ai/Agent-S"
"iliane5/meridian" -> "simstudioai/sim"
"iliane5/meridian" -> "exa-labs/exa-deepseek-chat"
"iliane5/meridian" -> "sentient-agi/OpenDeepSearch"
"iliane5/meridian" -> "langchain-ai/open_deep_research"
"HKUDS/AutoAgent" -> "HKUDS/Auto-Deep-Research" ["e"=1]
"HKUDS/AutoAgent" -> "EvilGenius-dot/RustMinerSystem" ["e"=1]
"HKUDS/AutoAgent" -> "TJU-DRL-LAB/AI-Optimizer" ["e"=1]
"HKUDS/AutoAgent" -> "risesoft-y9/Digital-Infrastructure" ["e"=1]
"HKUDS/AutoAgent" -> "FellouAI/eko" ["e"=1]
"HKUDS/AutoAgent" -> "Everlyn-Labs/Everlyn-1" ["e"=1]
"HKUDS/AutoAgent" -> "NexaAI/nexa-sdk" ["e"=1]
"HKUDS/AutoAgent" -> "FxPool/FXMinerProxy" ["e"=1]
"HKUDS/AutoAgent" -> "microsoft/UFO" ["e"=1]
"HKUDS/AutoAgent" -> "PKU-Alignment/align-anything" ["e"=1]
"HKUDS/AutoAgent" -> "MotiaDev/motia"
"HKUDS/AutoAgent" -> "camel-ai/owl"
"HKUDS/AutoAgent" -> "WuKongOpenSource/WukongCRM-11.0-JAVA" ["e"=1]
"HKUDS/AutoAgent" -> "om-ai-lab/OmAgent" ["e"=1]
"HKUDS/AutoAgent" -> "TaskingAI/TaskingAI" ["e"=1]
"lharries/whatsapp-mcp" -> "tulir/whatsmeow" ["e"=1]
"lharries/whatsapp-mcp" -> "bytedance/MegaTTS3" ["e"=1]
"lharries/whatsapp-mcp" -> "mcp-use/mcp-use"
"lharries/whatsapp-mcp" -> "tadata-org/fastapi_mcp"
"lharries/whatsapp-mcp" -> "neural-maze/ava-whatsapp-agent-course"
"lharries/whatsapp-mcp" -> "github/github-mcp-server"
"lharries/whatsapp-mcp" -> "elevenlabs/elevenlabs-mcp"
"lharries/whatsapp-mcp" -> "simstudioai/sim"
"lharries/whatsapp-mcp" -> "MervinPraison/PraisonAI"
"lharries/whatsapp-mcp" -> "microsoft/playwright-mcp"
"lharries/whatsapp-mcp" -> "browserbase/stagehand"
"lharries/whatsapp-mcp" -> "mendableai/firecrawl-mcp-server"
"lharries/whatsapp-mcp" -> "jlowin/fastmcp"
"lharries/whatsapp-mcp" -> "lastmile-ai/mcp-agent"
"lharries/whatsapp-mcp" -> "openai/openai-agents-python"
"lastmile-ai/mcp-agent" -> "jlowin/fastmcp"
"lastmile-ai/mcp-agent" -> "evalstate/fast-agent" ["e"=1]
"lastmile-ai/mcp-agent" -> "executeautomation/mcp-playwright"
"lastmile-ai/mcp-agent" -> "getzep/graphiti"
"lastmile-ai/mcp-agent" -> "modelcontextprotocol/python-sdk"
"lastmile-ai/mcp-agent" -> "simular-ai/Agent-S"
"lastmile-ai/mcp-agent" -> "wonderwhy-er/DesktopCommanderMCP"
"lastmile-ai/mcp-agent" -> "nanbingxyz/5ire" ["e"=1]
"lastmile-ai/mcp-agent" -> "punkpeye/awesome-mcp-clients" ["e"=1]
"lastmile-ai/mcp-agent" -> "openai/openai-agents-python"
"lastmile-ai/mcp-agent" -> "modelcontextprotocol/inspector" ["e"=1]
"lastmile-ai/mcp-agent" -> "tadata-org/fastapi_mcp"
"lastmile-ai/mcp-agent" -> "mcp-use/mcp-use"
"lastmile-ai/mcp-agent" -> "pydantic/pydantic-ai"
"lastmile-ai/mcp-agent" -> "langchain-ai/local-deep-researcher"
"Zackriya-Solutions/meeting-minutes" -> "krillinai/KrillinAI"
"Zackriya-Solutions/meeting-minutes" -> "elie222/inbox-zero" ["e"=1]
"Zackriya-Solutions/meeting-minutes" -> "simular-ai/Agent-S"
"Zackriya-Solutions/meeting-minutes" -> "jlowin/fastmcp"
"Zackriya-Solutions/meeting-minutes" -> "getzep/graphiti"
"Zackriya-Solutions/meeting-minutes" -> "kortix-ai/suna"
"Zackriya-Solutions/meeting-minutes" -> "fastrepl/hyprnote"
"Zackriya-Solutions/meeting-minutes" -> "jujumilk3/leaked-system-prompts"
"Zackriya-Solutions/meeting-minutes" -> "CapSoftware/Cap" ["e"=1]
"Zackriya-Solutions/meeting-minutes" -> "funstory-ai/BabelDOC"
"Zackriya-Solutions/meeting-minutes" -> "MODSetter/SurfSense"
"Zackriya-Solutions/meeting-minutes" -> "getmaxun/maxun"
"Zackriya-Solutions/meeting-minutes" -> "patchy631/ai-engineering-hub"
"Zackriya-Solutions/meeting-minutes" -> "aipotheosis-labs/aci"
"Zackriya-Solutions/meeting-minutes" -> "microsoft/data-formulator"
"quantalogic/quantalogic" -> "quantalogic/qllm"
"quantalogic/quantalogic" -> "langchain-ai/agentevals"
"rowboatlabs/rowboat" -> "kortix-ai/suna"
"rowboatlabs/rowboat" -> "aipotheosis-labs/aci"
"rowboatlabs/rowboat" -> "simular-ai/Agent-S"
"rowboatlabs/rowboat" -> "getzep/graphiti"
"rowboatlabs/rowboat" -> "fastrepl/hyprnote"
"rowboatlabs/rowboat" -> "MODSetter/SurfSense"
"rowboatlabs/rowboat" -> "jujumilk3/leaked-system-prompts"
"rowboatlabs/rowboat" -> "jlowin/fastmcp"
"rowboatlabs/rowboat" -> "Zackriya-Solutions/meeting-minutes"
"rowboatlabs/rowboat" -> "lastmile-ai/mcp-agent"
"rowboatlabs/rowboat" -> "browserbase/stagehand"
"rowboatlabs/rowboat" -> "Zipstack/unstract"
"rowboatlabs/rowboat" -> "bytedance/UI-TARS"
"rowboatlabs/rowboat" -> "simstudioai/sim"
"rowboatlabs/rowboat" -> "exa-labs/exa-mcp-server"
"huggingface/agents-course" -> "huggingface/smolagents"
"huggingface/agents-course" -> "microsoft/ai-agents-for-beginners"
"huggingface/agents-course" -> "Shubhamsaboo/awesome-llm-apps"
"huggingface/agents-course" -> "NirDiamant/GenAI_Agents"
"huggingface/agents-course" -> "huggingface/smol-course"
"huggingface/agents-course" -> "mlabonne/llm-course"
"huggingface/agents-course" -> "unslothai/unsloth"
"huggingface/agents-course" -> "NirDiamant/RAG_Techniques"
"huggingface/agents-course" -> "kvcache-ai/ktransformers" ["e"=1]
"huggingface/agents-course" -> "patchy631/ai-engineering-hub"
"huggingface/agents-course" -> "browser-use/browser-use"
"huggingface/agents-course" -> "karpathy/LLM101n"
"huggingface/agents-course" -> "punkpeye/awesome-mcp-servers"
"huggingface/agents-course" -> "huggingface/open-r1" ["e"=1]
"huggingface/agents-course" -> "docling-project/docling"
"GoogleCloudPlatform/kubectl-ai" -> "aipotheosis-labs/aci"
"GoogleCloudPlatform/kubectl-ai" -> "k8sgpt-ai/k8sgpt" ["e"=1]
"GoogleCloudPlatform/kubectl-ai" -> "awslabs/agent-squad"
"GoogleCloudPlatform/kubectl-ai" -> "mark3labs/mcp-go"
"GoogleCloudPlatform/kubectl-ai" -> "MODSetter/SurfSense"
"GoogleCloudPlatform/kubectl-ai" -> "Zackriya-Solutions/meeting-minutes"
"GoogleCloudPlatform/kubectl-ai" -> "jlowin/fastmcp"
"GoogleCloudPlatform/kubectl-ai" -> "robusta-dev/krr" ["e"=1]
"GoogleCloudPlatform/kubectl-ai" -> "getzep/graphiti"
"GoogleCloudPlatform/kubectl-ai" -> "github/github-mcp-server"
"GoogleCloudPlatform/kubectl-ai" -> "simular-ai/Agent-S"
"GoogleCloudPlatform/kubectl-ai" -> "jujumilk3/leaked-system-prompts"
"GoogleCloudPlatform/kubectl-ai" -> "kubernetes-sigs/headlamp" ["e"=1]
"GoogleCloudPlatform/kubectl-ai" -> "LadybirdBrowser/ladybird" ["e"=1]
"GoogleCloudPlatform/kubectl-ai" -> "kortix-ai/suna"
"jamez-bondos/awesome-gpt4o-images" -> "cyfyifanchen/one-person-company" ["e"=1]
"jamez-bondos/awesome-gpt4o-images" -> "Huanshere/VideoLingo"
"jamez-bondos/awesome-gpt4o-images" -> "langgptai/LangGPT"
"jamez-bondos/awesome-gpt4o-images" -> "refly-ai/refly"
"jamez-bondos/awesome-gpt4o-images" -> "linshenkx/prompt-optimizer"
"jamez-bondos/awesome-gpt4o-images" -> "sjzar/chatlog" ["e"=1]
"jamez-bondos/awesome-gpt4o-images" -> "dreammis/social-auto-upload" ["e"=1]
"jamez-bondos/awesome-gpt4o-images" -> "princehuang/overseas-website-note" ["e"=1]
"jamez-bondos/awesome-gpt4o-images" -> "richards199999/Thinking-Claude"
"jamez-bondos/awesome-gpt4o-images" -> "doocs/md" ["e"=1]
"jamez-bondos/awesome-gpt4o-images" -> "wechat-article/wechat-article-exporter" ["e"=1]
"jamez-bondos/awesome-gpt4o-images" -> "zhuima/awesome-cloudflare" ["e"=1]
"jamez-bondos/awesome-gpt4o-images" -> "CherryHQ/cherry-studio"
"jamez-bondos/awesome-gpt4o-images" -> "hylarucoder/ai-flavor-remover" ["e"=1]
"jamez-bondos/awesome-gpt4o-images" -> "tianyaxiang/neurapress" ["e"=1]
"bytedance/UI-TARS-desktop" -> "bytedance/UI-TARS"
"bytedance/UI-TARS-desktop" -> "camel-ai/owl"
"bytedance/UI-TARS-desktop" -> "FoundationAgents/OpenManus"
"bytedance/UI-TARS-desktop" -> "web-infra-dev/midscene"
"bytedance/UI-TARS-desktop" -> "microsoft/OmniParser"
"bytedance/UI-TARS-desktop" -> "browser-use/browser-use"
"bytedance/UI-TARS-desktop" -> "langmanus/langmanus"
"bytedance/UI-TARS-desktop" -> "kortix-ai/suna"
"bytedance/UI-TARS-desktop" -> "punkpeye/awesome-mcp-servers"
"bytedance/UI-TARS-desktop" -> "mindverse/Second-Me"
"bytedance/UI-TARS-desktop" -> "CherryHQ/cherry-studio"
"bytedance/UI-TARS-desktop" -> "mendableai/firecrawl"
"bytedance/UI-TARS-desktop" -> "browser-use/web-ui"
"bytedance/UI-TARS-desktop" -> "GuijiAI/HeyGem.ai" ["e"=1]
"bytedance/UI-TARS-desktop" -> "modelcontextprotocol/servers"
"1517005260/graph-rag-agent" -> "1517005260/nowcoder"
"1517005260/graph-rag-agent" -> "sndraw/sndraw-work"
"1517005260/graph-rag-agent" -> "adoresever/DataGraphX_Learn"
"PennyroyalTea/gibberlink" -> "ggerganov/ggwave"
"PennyroyalTea/gibberlink" -> "anthropics/claude-code"
"PennyroyalTea/gibberlink" -> "SesameAILabs/csm" ["e"=1]
"PennyroyalTea/gibberlink" -> "openai/openai-realtime-agents"
"PennyroyalTea/gibberlink" -> "block/goose"
"PennyroyalTea/gibberlink" -> "browserbase/stagehand"
"PennyroyalTea/gibberlink" -> "AK391/ai-gradio"
"PennyroyalTea/gibberlink" -> "nikmcfly/ANUS"
"PennyroyalTea/gibberlink" -> "nari-labs/dia" ["e"=1]
"PennyroyalTea/gibberlink" -> "Zyphra/Zonos" ["e"=1]
"PennyroyalTea/gibberlink" -> "browserbase/open-operator"
"PennyroyalTea/gibberlink" -> "lharries/whatsapp-mcp"
"PennyroyalTea/gibberlink" -> "openai/codex"
"PennyroyalTea/gibberlink" -> "browser-use/web-ui"
"PennyroyalTea/gibberlink" -> "dzhng/deep-research"
"neural-maze/philoagents-course" -> "neural-maze/agentic-patterns-course"
"neural-maze/philoagents-course" -> "decodingml/second-brain-ai-assistant-course"
"neural-maze/philoagents-course" -> "decodingml/personalized-recommender-course"
"neural-maze/philoagents-course" -> "neural-maze/rick-llm"
"neural-maze/philoagents-course" -> "neural-maze/ava-whatsapp-agent-course"
"neural-maze/philoagents-course" -> "decodingml/tabular-semantic-search-tutorial"
"neural-maze/philoagents-course" -> "callmesora/llmops-python-package"
"neural-maze/philoagents-course" -> "Paulescu/kubernetes-for-ml-engineers" ["e"=1]
"Doriandarko/RAT-retrieval-augmented-thinking" -> "Doriandarko/deepseek-engineer"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "superagent-ai/reag"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "exa-labs/exa-mcp-server"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "udecode/dotai"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "cognitivecomputations/dolphin-mcp" ["e"=1]
"Doriandarko/RAT-retrieval-augmented-thinking" -> "developersdigest/llm-api-engine"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "echohive42/AI-reads-books-page-by-page"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "togethercomputer/open_deep_research" ["e"=1]
"Doriandarko/RAT-retrieval-augmented-thinking" -> "rbrown101010/yapsearch"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "harishsg993010/LLM-Reasoner"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "MinishLab/model2vec"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "panda-sandeep/epigram"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "AK391/ai-gradio"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "ymichael/open-codex"
"Doriandarko/RAT-retrieval-augmented-thinking" -> "eastlondoner/cursor-tools"
"zilliztech/deep-searcher" -> "jina-ai/node-DeepResearch"
"zilliztech/deep-searcher" -> "OpenSPG/KAG"
"zilliztech/deep-searcher" -> "langmanus/langmanus"
"zilliztech/deep-searcher" -> "nickscamara/open-deep-research"
"zilliztech/deep-searcher" -> "langchain-ai/open_deep_research"
"zilliztech/deep-searcher" -> "microsoft/PIKE-RAG"
"zilliztech/deep-searcher" -> "camel-ai/owl"
"zilliztech/deep-searcher" -> "dzhng/deep-research"
"zilliztech/deep-searcher" -> "LearningCircuit/local-deep-research"
"zilliztech/deep-searcher" -> "QwenLM/Qwen-Agent"
"zilliztech/deep-searcher" -> "allenai/olmocr"
"zilliztech/deep-searcher" -> "InternLM/MindSearch"
"zilliztech/deep-searcher" -> "btahir/open-deep-research"
"zilliztech/deep-searcher" -> "FlagOpen/FlagEmbedding" ["e"=1]
"zilliztech/deep-searcher" -> "langchain-ai/local-deep-researcher"
"mindverse/Second-Me" -> "bytedance/UI-TARS-desktop"
"mindverse/Second-Me" -> "camel-ai/owl"
"mindverse/Second-Me" -> "github/github-mcp-server"
"mindverse/Second-Me" -> "kortix-ai/suna"
"mindverse/Second-Me" -> "canopyai/Orpheus-TTS" ["e"=1]
"mindverse/Second-Me" -> "google/A2A"
"mindverse/Second-Me" -> "FoundationAgents/OpenManus"
"mindverse/Second-Me" -> "mem0ai/mem0"
"mindverse/Second-Me" -> "Shubhamsaboo/awesome-llm-apps"
"mindverse/Second-Me" -> "browser-use/browser-use"
"mindverse/Second-Me" -> "dzhng/deep-research"
"mindverse/Second-Me" -> "agno-agi/agno"
"mindverse/Second-Me" -> "mediar-ai/screenpipe"
"mindverse/Second-Me" -> "unclecode/crawl4ai"
"mindverse/Second-Me" -> "microsoft/OmniParser"
"mcp-use/mcp-use" -> "tadata-org/fastapi_mcp"
"mcp-use/mcp-use" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"mcp-use/mcp-use" -> "von-development/awesome-LangGraph"
"mcp-use/mcp-use" -> "HKUDS/AutoAgent"
"mcp-use/mcp-use" -> "jlowin/fastmcp"
"mcp-use/mcp-use" -> "lastmile-ai/mcp-agent"
"mcp-use/mcp-use" -> "neural-maze/ava-whatsapp-agent-course"
"mcp-use/mcp-use" -> "langchain-ai/langchain-mcp-adapters"
"mcp-use/mcp-use" -> "MotiaDev/motia"
"mcp-use/mcp-use" -> "KalyanKS-NLP/llm-engineer-toolkit"
"mcp-use/mcp-use" -> "upstash/context7"
"mcp-use/mcp-use" -> "transformerlab/transformerlab-app"
"mcp-use/mcp-use" -> "simstudioai/sim"
"mcp-use/mcp-use" -> "modelcontextprotocol/python-sdk"
"mcp-use/mcp-use" -> "simular-ai/Agent-S"
"google/adk-samples" -> "google/adk-python"
"google/adk-samples" -> "google/adk-docs"
"google/adk-samples" -> "google/A2A"
"google/adk-samples" -> "mcp-use/mcp-use"
"google/adk-samples" -> "googleapis/genai-toolbox"
"google/adk-samples" -> "philschmid/gemini-samples"
"google/adk-samples" -> "openai/openai-agents-python"
"google/adk-samples" -> "tadata-org/fastapi_mcp"
"google/adk-samples" -> "googleapis/python-genai"
"google/adk-samples" -> "google-gemini/live-api-web-console"
"google/adk-samples" -> "MervinPraison/PraisonAI"
"google/adk-samples" -> "lastmile-ai/mcp-agent"
"google/adk-samples" -> "pydantic/pydantic-ai"
"google/adk-samples" -> "GoogleCloudPlatform/agent-starter-pack"
"google/adk-samples" -> "HKUDS/AutoAgent"
"KoljaB/RealtimeVoiceChat" -> "canopyai/Orpheus-TTS" ["e"=1]
"KoljaB/RealtimeVoiceChat" -> "morphik-org/morphik-core"
"KoljaB/RealtimeVoiceChat" -> "fagenorn/handcrafted-persona-engine" ["e"=1]
"KoljaB/RealtimeVoiceChat" -> "collabora/WhisperFusion" ["e"=1]
"KoljaB/RealtimeVoiceChat" -> "PhialsBasement/Chain-of-Recursive-Thoughts"
"KoljaB/RealtimeVoiceChat" -> "menloresearch/ichigo"
"KoljaB/RealtimeVoiceChat" -> "stanford-mast/blast"
"KoljaB/RealtimeVoiceChat" -> "lifeiteng/OmniSenseVoice" ["e"=1]
"KoljaB/RealtimeVoiceChat" -> "synth-inc/onit"
"KoljaB/RealtimeVoiceChat" -> "Standard-Intelligence/hertz-dev" ["e"=1]
"KoljaB/RealtimeVoiceChat" -> "ictnlp/LLaMA-Omni" ["e"=1]
"KoljaB/RealtimeVoiceChat" -> "The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge"
"KoljaB/RealtimeVoiceChat" -> "nari-labs/dia" ["e"=1]
"KoljaB/RealtimeVoiceChat" -> "asgeirtj/system_prompts_leaks"
"KoljaB/RealtimeVoiceChat" -> "yl4579/StyleTTS2" ["e"=1]
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/langgraph-supervisor-py"
"langchain-ai/langgraph-swarm-py" -> "hinthornw/trustcall"
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/langmem"
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/openevals"
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/langgraph-bigtool"
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/agent-chat-ui"
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/langchain-mcp-adapters"
"langchain-ai/langgraph-swarm-py" -> "von-development/awesome-LangGraph"
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/langgraph-codeact"
"langchain-ai/langgraph-swarm-py" -> "CopilotKit/open-multi-agent-canvas"
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/open_deep_research"
"langchain-ai/langgraph-swarm-py" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/agent-inbox"
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/langchain-academy"
"langchain-ai/langgraph-swarm-py" -> "langchain-ai/agentevals"
"langchain-ai/langgraph-bigtool" -> "langchain-ai/langmem"
"langchain-ai/langgraph-bigtool" -> "langchain-ai/universal-tool-server"
"langchain-ai/langgraph-bigtool" -> "langchain-ai/langgraph-supervisor-py"
"langchain-ai/langgraph-bigtool" -> "langchain-ai/langgraph-reflection"
"langchain-ai/langgraph-bigtool" -> "langchain-ai/langgraph-codeact"
"langchain-ai/langgraph-bigtool" -> "hinthornw/trustcall"
"langchain-ai/langgraph-bigtool" -> "langchain-ai/langgraph-swarm-py"
"langchain-ai/langgraph-bigtool" -> "andrestorres123/breeze-agent"
"langchain-ai/langgraph-bigtool" -> "langchain-ai/langgraph-fullstack-python"
"langchain-ai/langgraph-bigtool" -> "langchain-ai/memory-template"
"langmanus/langmanus" -> "langmanus/langmanus-web"
"langmanus/langmanus" -> "camel-ai/owl"
"langmanus/langmanus" -> "bytedance/UI-TARS-desktop"
"langmanus/langmanus" -> "bytedance/deer-flow"
"langmanus/langmanus" -> "zilliztech/deep-searcher"
"langmanus/langmanus" -> "FoundationAgents/OpenManus"
"langmanus/langmanus" -> "kortix-ai/suna"
"langmanus/langmanus" -> "OpenManus/OpenManus-RL" ["e"=1]
"langmanus/langmanus" -> "yuruotong1/autoMate"
"langmanus/langmanus" -> "HKUDS/AutoAgent"
"langmanus/langmanus" -> "openai/openai-agents-python"
"langmanus/langmanus" -> "jina-ai/node-DeepResearch"
"langmanus/langmanus" -> "refly-ai/refly"
"langmanus/langmanus" -> "langchain-ai/langgraph"
"langmanus/langmanus" -> "Darwin-lfl/langmanus"
"opencode-ai/opencode" -> "getzep/graphiti"
"opencode-ai/opencode" -> "kortix-ai/suna"
"opencode-ai/opencode" -> "sst/opencontrol" ["e"=1]
"opencode-ai/opencode" -> "sst/ion" ["e"=1]
"opencode-ai/opencode" -> "dnakov/anon-kode" ["e"=1]
"opencode-ai/opencode" -> "toolbeam/openauth" ["e"=1]
"opencode-ai/opencode" -> "rowboatlabs/rowboat"
"opencode-ai/opencode" -> "terminaldotshop/terminal" ["e"=1]
"opencode-ai/opencode" -> "ymichael/open-codex"
"opencode-ai/opencode" -> "openai/codex"
"opencode-ai/opencode" -> "rocicorp/mono" ["e"=1]
"opencode-ai/opencode" -> "yetone/avante.nvim" ["e"=1]
"opencode-ai/opencode" -> "benvinegar/counterscale" ["e"=1]
"opencode-ai/opencode" -> "Mail-0/Zero" ["e"=1]
"opencode-ai/opencode" -> "t3dotgg/stripe-recommendations" ["e"=1]
"airweave-ai/airweave" -> "HelixDB/helix-db"
"airweave-ai/airweave" -> "mlop-ai/mlop"
"airweave-ai/airweave" -> "authed-dev/authed"
"airweave-ai/airweave" -> "Operative-Sh/web-eval-agent"
"airweave-ai/airweave" -> "getprobo/probo"
"airweave-ai/airweave" -> "simstudioai/sim"
"airweave-ai/airweave" -> "chonkie-inc/chonkie"
"airweave-ai/airweave" -> "morphik-org/morphik-core"
"airweave-ai/airweave" -> "JasonGross/autoformalization-transpilation"
"airweave-ai/airweave" -> "plexe-ai/plexe"
"airweave-ai/airweave" -> "The-LLM-Data-Company/doteval"
"airweave-ai/airweave" -> "shcherbak-ai/contextgem"
"airweave-ai/airweave" -> "VoltAgent/voltagent"
"airweave-ai/airweave" -> "yesfedor/nuxt-core-template"
"airweave-ai/airweave" -> "Rootly-AI-Labs/Rootly-MCP-server"
"google/adk-python" -> "google/A2A"
"google/adk-python" -> "google/adk-samples"
"google/adk-python" -> "openai/openai-agents-python"
"google/adk-python" -> "pydantic/pydantic-ai"
"google/adk-python" -> "modelcontextprotocol/python-sdk"
"google/adk-python" -> "langchain-ai/langgraph"
"google/adk-python" -> "jlowin/fastmcp"
"google/adk-python" -> "agno-agi/agno"
"google/adk-python" -> "openai/codex"
"google/adk-python" -> "tadata-org/fastapi_mcp"
"google/adk-python" -> "huggingface/smolagents"
"google/adk-python" -> "crewAIInc/crewAI"
"google/adk-python" -> "BerriAI/litellm"
"google/adk-python" -> "github/github-mcp-server"
"google/adk-python" -> "modelcontextprotocol/servers"
"linshenkx/prompt-optimizer" -> "aingdesk/AingDesk" ["e"=1]
"linshenkx/prompt-optimizer" -> "TeamWiseFlow/wiseflow"
"linshenkx/prompt-optimizer" -> "svcvit/Awesome-Dify-Workflow"
"linshenkx/prompt-optimizer" -> "sjzar/chatlog" ["e"=1]
"linshenkx/prompt-optimizer" -> "langgptai/LangGPT"
"linshenkx/prompt-optimizer" -> "ourongxing/newsnow"
"linshenkx/prompt-optimizer" -> "refly-ai/refly"
"linshenkx/prompt-optimizer" -> "jamez-bondos/awesome-gpt4o-images"
"linshenkx/prompt-optimizer" -> "modstart-lib/aigcpanel" ["e"=1]
"linshenkx/prompt-optimizer" -> "ErlichLiu/DeepClaude"
"linshenkx/prompt-optimizer" -> "CherryHQ/cherry-studio"
"linshenkx/prompt-optimizer" -> "bytedance/UI-TARS-desktop"
"linshenkx/prompt-optimizer" -> "ageerle/ruoyi-ai"
"linshenkx/prompt-optimizer" -> "Huanshere/VideoLingo"
"linshenkx/prompt-optimizer" -> "doocs/md" ["e"=1]
"ryokun6/ryos" -> "ekmigasari/wfcOS"
"StructuredLabs/preswald" -> "OpenPipe/OpenPipe"
"StructuredLabs/preswald" -> "quarylabs/quary" ["e"=1]
"StructuredLabs/preswald" -> "PeerDB-io/peerdb" ["e"=1]
"StructuredLabs/preswald" -> "Helicone/helicone"
"StructuredLabs/preswald" -> "BoundaryML/baml"
"StructuredLabs/preswald" -> "fern-api/fern"
"StructuredLabs/preswald" -> "poozlehq/poozle"
"StructuredLabs/preswald" -> "medplum/medplum" ["e"=1]
"StructuredLabs/preswald" -> "ubicloud/ubicloud" ["e"=1]
"StructuredLabs/preswald" -> "hegelai/prompttools"
"StructuredLabs/preswald" -> "gauge-sh/tach" ["e"=1]
"StructuredLabs/preswald" -> "langfuse/langfuse"
"StructuredLabs/preswald" -> "axflow/axflow"
"StructuredLabs/preswald" -> "DAGWorks-Inc/hamilton"
"StructuredLabs/preswald" -> "pretzelai/pretzelai" ["e"=1]
"ashishpatel26/500-AI-Agents-Projects" -> "ashishpatel26/AIAgentWorkshop"
"ashishpatel26/500-AI-Agents-Projects" -> "callmesora/llmops-python-package"
"ashishpatel26/500-AI-Agents-Projects" -> "ashishpatel26/LLM-Finetuning"
"ashishpatel26/500-AI-Agents-Projects" -> "KalyanKS-NLP/rag-zero-to-hero-guide"
"ashishpatel26/500-AI-Agents-Projects" -> "GURPREETKAURJETHRA/END-TO-END-GENERATIVE-AI-PROJECTS" ["e"=1]
"ashishpatel26/500-AI-Agents-Projects" -> "bhav09/Generative-AI-Resources"
"ashishpatel26/500-AI-Agents-Projects" -> "towardsai/ragbook-notebooks"
"ashishpatel26/500-AI-Agents-Projects" -> "hananedupouy/LLMs-in-Finance"
"ashishpatel26/500-AI-Agents-Projects" -> "break-into-data/ai-engineer-toolkit"
"ashishpatel26/500-AI-Agents-Projects" -> "llmgenai/LLMInterviewQuestions"
"ashishpatel26/500-AI-Agents-Projects" -> "neural-maze/ava-whatsapp-agent-course"
"ashishpatel26/500-AI-Agents-Projects" -> "youssefHosni/Awesome-AI-Data-Guided-Projects" ["e"=1]
"ashishpatel26/500-AI-Agents-Projects" -> "neural-maze/philoagents-course"
"ashishpatel26/500-AI-Agents-Projects" -> "alonlavian/RAGent"
"ashishpatel26/500-AI-Agents-Projects" -> "ashishpatel26/Treasure-of-Transformers" ["e"=1]
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "KoljaB/RealtimeVoiceChat"
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "humanlayer/12-factor-agents"
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "Operative-Sh/web-eval-agent"
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge"
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "skyzh/tiny-llm" ["e"=1]
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "rowboatlabs/rowboat"
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "alessiodm/drl-zh" ["e"=1]
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "OpenPipe/ART" ["e"=1]
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "simstudioai/sim"
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "wild-card-ai/agents-json"
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "Fosowl/agenticSeek"
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "lmnr-ai/index"
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "simular-ai/Agent-S"
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "astral-sh/ty" ["e"=1]
"PhialsBasement/Chain-of-Recursive-Thoughts" -> "getzep/graphiti"
"ericciarla/trendFinder" -> "bytedance/monolith"
"ericciarla/trendFinder" -> "David-patrick-chuks/Instagram-AI-Agent"
"ericciarla/trendFinder" -> "stanford-oval/storm"
"ericciarla/trendFinder" -> "antiwork/shortest"
"ericciarla/trendFinder" -> "openai/openai-realtime-agents"
"ericciarla/trendFinder" -> "langchain-ai/open-canvas"
"ericciarla/trendFinder" -> "zaidmukaddam/scira"
"ericciarla/trendFinder" -> "nickscamara/open-deep-research"
"ericciarla/trendFinder" -> "langchain-ai/social-media-agent"
"ericciarla/trendFinder" -> "raidendotai/cofounder"
"ericciarla/trendFinder" -> "midday-ai/v1" ["e"=1]
"ericciarla/trendFinder" -> "Integuru-AI/Integuru"
"ericciarla/trendFinder" -> "SamuelSchmidgall/AgentLaboratory"
"ericciarla/trendFinder" -> "Doriandarko/o1-engineer"
"ericciarla/trendFinder" -> "campsite/campsite" ["e"=1]
"convergence-ai/proxy-lite" -> "convergence-ai/webgames"
"convergence-ai/proxy-lite" -> "HazyResearch/minions"
"convergence-ai/proxy-lite" -> "AK391/ai-gradio"
"convergence-ai/proxy-lite" -> "browser-use/macOS-use"
"convergence-ai/proxy-lite" -> "egoist/sitefetch"
"convergence-ai/proxy-lite" -> "e2b-dev/open-computer-use"
"convergence-ai/proxy-lite" -> "MotiaDev/motia"
"convergence-ai/proxy-lite" -> "nanobrowser/nanobrowser"
"convergence-ai/proxy-lite" -> "philschmid/gemini-samples"
"convergence-ai/proxy-lite" -> "shcherbak-ai/contextgem"
"convergence-ai/proxy-lite" -> "yuruotong1/autoMate"
"convergence-ai/proxy-lite" -> "Doriandarko/deepseek-engineer"
"convergence-ai/proxy-lite" -> "Saik0s/mcp-browser-use" ["e"=1]
"convergence-ai/proxy-lite" -> "e2b-dev/desktop"
"convergence-ai/proxy-lite" -> "trycua/acu"
"AsyncFuncAI/deepwiki-open" -> "ThinkInAIXYZ/deepchat"
"AsyncFuncAI/deepwiki-open" -> "AIDotNet/OpenDeepWiki" ["e"=1]
"AsyncFuncAI/deepwiki-open" -> "kortix-ai/suna"
"AsyncFuncAI/deepwiki-open" -> "bytedance/deer-flow"
"AsyncFuncAI/deepwiki-open" -> "upstash/context7"
"AsyncFuncAI/deepwiki-open" -> "The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge"
"AsyncFuncAI/deepwiki-open" -> "getzep/graphiti"
"AsyncFuncAI/deepwiki-open" -> "aipotheosis-labs/aci"
"AsyncFuncAI/deepwiki-open" -> "google/A2A"
"AsyncFuncAI/deepwiki-open" -> "eyaltoledano/claude-task-master"
"AsyncFuncAI/deepwiki-open" -> "tadata-org/fastapi_mcp"
"AsyncFuncAI/deepwiki-open" -> "jina-ai/node-DeepResearch"
"AsyncFuncAI/deepwiki-open" -> "ahmedkhaleel2004/gitdiagram"
"AsyncFuncAI/deepwiki-open" -> "microsoft/playwright-mcp"
"AsyncFuncAI/deepwiki-open" -> "MODSetter/SurfSense"
"browser-use/web-ui" -> "browser-use/browser-use"
"browser-use/web-ui" -> "stackblitz-labs/bolt.diy"
"browser-use/web-ui" -> "unclecode/crawl4ai"
"browser-use/web-ui" -> "camel-ai/owl"
"browser-use/web-ui" -> "browserbase/stagehand"
"browser-use/web-ui" -> "cline/cline"
"browser-use/web-ui" -> "mendableai/firecrawl"
"browser-use/web-ui" -> "microsoft/OmniParser"
"browser-use/web-ui" -> "FoundationAgents/OpenManus"
"browser-use/web-ui" -> "modelcontextprotocol/servers"
"browser-use/web-ui" -> "dzhng/deep-research"
"browser-use/web-ui" -> "bytedance/UI-TARS-desktop"
"browser-use/web-ui" -> "RooVetGit/Roo-Code"
"browser-use/web-ui" -> "agno-agi/agno"
"browser-use/web-ui" -> "web-infra-dev/midscene"
"break-into-data/ai-engineer-toolkit" -> "krishnaik06/Roadmap-To-Learn-Generative-AI-In-2024" ["e"=1]
"break-into-data/ai-engineer-toolkit" -> "swyxio/ai-notes" ["e"=1]
"break-into-data/ai-engineer-toolkit" -> "NirDiamant/GenAI_Agents"
"break-into-data/ai-engineer-toolkit" -> "hamzafarooq/building-llm-applications-from-scratch"
"break-into-data/ai-engineer-toolkit" -> "aishwaryanr/awesome-generative-ai-guide"
"break-into-data/ai-engineer-toolkit" -> "decodingml/second-brain-ai-assistant-course"
"break-into-data/ai-engineer-toolkit" -> "neural-maze/ava-whatsapp-agent-course"
"break-into-data/ai-engineer-toolkit" -> "KalyanKS-NLP/llm-engineer-toolkit"
"break-into-data/ai-engineer-toolkit" -> "KalyanKS-NLP/rag-zero-to-hero-guide"
"break-into-data/ai-engineer-toolkit" -> "mongodb-developer/GenAI-Showcase"
"break-into-data/ai-engineer-toolkit" -> "ashishpatel26/500-AI-Agents-Projects"
"break-into-data/ai-engineer-toolkit" -> "llmgenai/LLMInterviewQuestions"
"break-into-data/ai-engineer-toolkit" -> "fmind/mlops-python-package"
"break-into-data/ai-engineer-toolkit" -> "BragAI/bRAG-langchain"
"break-into-data/ai-engineer-toolkit" -> "patchy631/ai-engineering-hub"
"github/github-mcp-server" -> "microsoft/playwright-mcp"
"github/github-mcp-server" -> "google/A2A"
"github/github-mcp-server" -> "modelcontextprotocol/servers"
"github/github-mcp-server" -> "punkpeye/awesome-mcp-servers"
"github/github-mcp-server" -> "microsoft/markitdown"
"github/github-mcp-server" -> "openai/codex"
"github/github-mcp-server" -> "mindverse/Second-Me"
"github/github-mcp-server" -> "modelcontextprotocol/python-sdk"
"github/github-mcp-server" -> "google/adk-python"
"github/github-mcp-server" -> "awslabs/mcp" ["e"=1]
"github/github-mcp-server" -> "jlowin/fastmcp"
"github/github-mcp-server" -> "mark3labs/mcp-go"
"github/github-mcp-server" -> "tadata-org/fastapi_mcp"
"github/github-mcp-server" -> "microsoft/typescript-go" ["e"=1]
"github/github-mcp-server" -> "cline/cline"
"hanson-cheng/n8n-workflows" -> "Marvomatic/n8n-templates"
"hanson-cheng/n8n-workflows" -> "gabriel-g2n/workflows" ["e"=1]
"hanson-cheng/n8n-workflows" -> "makafeli/n8n-workflow-builder"
"hanson-cheng/n8n-workflows" -> "datawranglerai/self-host-n8n-on-gcr"
"hanson-cheng/n8n-workflows" -> "joshpocock/Stride-AI-Agents"
"exa-labs/exa-deepseek-chat" -> "CognosysAI/browser"
"exa-labs/exa-deepseek-chat" -> "exa-labs/exa-hallucination-detector"
"exa-labs/exa-deepseek-chat" -> "rbrown101010/yapsearch"
"exa-labs/exa-deepseek-chat" -> "exa-labs/company-researcher"
"exa-labs/exa-deepseek-chat" -> "fdarkaou/open-deep-research"
"exa-labs/exa-deepseek-chat" -> "13point5/gemini-cursor"
"exa-labs/exa-deepseek-chat" -> "developersdigest/llm-api-engine"
"exa-labs/exa-deepseek-chat" -> "AK391/ai-gradio"
"exa-labs/exa-deepseek-chat" -> "virattt/ai-financial-agent"
"exa-labs/exa-deepseek-chat" -> "exa-labs/exa-mcp-server"
"exa-labs/exa-deepseek-chat" -> "browserbase/open-operator"
"exa-labs/exa-deepseek-chat" -> "Nutlope/loras-dev"
"exa-labs/exa-deepseek-chat" -> "Doriandarko/deepseek-engineer"
"exa-labs/exa-deepseek-chat" -> "zaidmukaddam/scira-mcp-chat"
"exa-labs/exa-deepseek-chat" -> "superagent-ai/reag"
"GLips/Figma-Context-MCP" -> "sonnylazuardi/cursor-talk-to-figma-mcp"
"GLips/Figma-Context-MCP" -> "AgentDeskAI/browser-tools-mcp"
"GLips/Figma-Context-MCP" -> "microsoft/playwright-mcp"
"GLips/Figma-Context-MCP" -> "PatrickJS/awesome-cursorrules"
"GLips/Figma-Context-MCP" -> "modelcontextprotocol/servers"
"GLips/Figma-Context-MCP" -> "eyaltoledano/claude-task-master"
"GLips/Figma-Context-MCP" -> "ahujasid/blender-mcp"
"GLips/Figma-Context-MCP" -> "modelcontextprotocol/typescript-sdk"
"GLips/Figma-Context-MCP" -> "upstash/context7"
"GLips/Figma-Context-MCP" -> "21st-dev/magic-mcp"
"GLips/Figma-Context-MCP" -> "mendableai/firecrawl-mcp-server"
"GLips/Figma-Context-MCP" -> "punkpeye/awesome-mcp-servers"
"GLips/Figma-Context-MCP" -> "eastlondoner/cursor-tools"
"GLips/Figma-Context-MCP" -> "executeautomation/mcp-playwright"
"GLips/Figma-Context-MCP" -> "github/github-mcp-server"
"ahmedkhaleel2004/gitdiagram" -> "cyclotruc/gitingest"
"ahmedkhaleel2004/gitdiagram" -> "jlowin/fastmcp"
"ahmedkhaleel2004/gitdiagram" -> "ourongxing/newsnow"
"ahmedkhaleel2004/gitdiagram" -> "punkpeye/awesome-mcp-servers"
"ahmedkhaleel2004/gitdiagram" -> "microsoft/ai-agents-for-beginners"
"ahmedkhaleel2004/gitdiagram" -> "Shubhamsaboo/awesome-llm-apps"
"ahmedkhaleel2004/gitdiagram" -> "browserbase/stagehand"
"ahmedkhaleel2004/gitdiagram" -> "PatrickJS/awesome-cursorrules"
"ahmedkhaleel2004/gitdiagram" -> "microsoft/data-formulator"
"ahmedkhaleel2004/gitdiagram" -> "mendableai/firecrawl"
"ahmedkhaleel2004/gitdiagram" -> "patchy631/ai-engineering-hub"
"ahmedkhaleel2004/gitdiagram" -> "yamadashy/repomix"
"ahmedkhaleel2004/gitdiagram" -> "getmaxun/maxun"
"ahmedkhaleel2004/gitdiagram" -> "agno-agi/agno"
"ahmedkhaleel2004/gitdiagram" -> "getzep/graphiti"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "GLips/Figma-Context-MCP"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "ahujasid/blender-mcp"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "eyaltoledano/claude-task-master"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "AgentDeskAI/browser-tools-mcp"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "mendableai/firecrawl-mcp-server"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "21st-dev/magic-mcp"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "justinpbarnett/unity-mcp" ["e"=1]
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "PatrickJS/awesome-cursorrules"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "refly-ai/refly"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "microsoft/playwright-mcp"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "upstash/context7"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "eastlondoner/cursor-tools"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "tadata-org/fastapi_mcp"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "jamez-bondos/awesome-gpt4o-images"
"sonnylazuardi/cursor-talk-to-figma-mcp" -> "executeautomation/mcp-playwright"
"Fosowl/agenticSeek" -> "LearningCircuit/local-deep-research"
"Fosowl/agenticSeek" -> "morphik-org/morphik-core"
"Fosowl/agenticSeek" -> "simstudioai/sim"
"Fosowl/agenticSeek" -> "lmnr-ai/index"
"Fosowl/agenticSeek" -> "HKUDS/AutoAgent"
"Fosowl/agenticSeek" -> "trycua/cua"
"Fosowl/agenticSeek" -> "kortix-ai/suna"
"Fosowl/agenticSeek" -> "simular-ai/Agent-S"
"Fosowl/agenticSeek" -> "langmanus/langmanus"
"Fosowl/agenticSeek" -> "MODSetter/SurfSense"
"Fosowl/agenticSeek" -> "sentient-agi/OpenDeepSearch"
"Fosowl/agenticSeek" -> "signerlabs/Klee" ["e"=1]
"Fosowl/agenticSeek" -> "camel-ai/owl"
"Fosowl/agenticSeek" -> "OpenAgentPlatform/Dive" ["e"=1]
"Fosowl/agenticSeek" -> "ai-christianson/RA.Aid"
"reflex-dev/reflex-llm-examples" -> "AK391/ai-gradio"
"reflex-dev/reflex-llm-examples" -> "echohive42/AI-reads-books-page-by-page"
"reflex-dev/reflex-llm-examples" -> "openai/openai-structured-outputs-samples"
"reflex-dev/reflex-llm-examples" -> "tjmlabs/ColiVara"
"reflex-dev/reflex-llm-examples" -> "harishsg993010/LLM-Reasoner"
"reflex-dev/reflex-llm-examples" -> "Doriandarko/deepseek-engineer"
"reflex-dev/reflex-llm-examples" -> "developersdigest/llm-api-engine"
"reflex-dev/reflex-llm-examples" -> "alonlavian/RAGent"
"reflex-dev/reflex-llm-examples" -> "egoist/sitefetch"
"reflex-dev/reflex-llm-examples" -> "s-smits/agentic-cursorrules"
"reflex-dev/reflex-llm-examples" -> "e2b-dev/open-computer-use"
"reflex-dev/reflex-llm-examples" -> "eyelevelai/groundx-on-prem"
"reflex-dev/reflex-llm-examples" -> "DannyMac180/meta-agent"
"reflex-dev/reflex-llm-examples" -> "ammaarreshi/Gemini-Search" ["e"=1]
"reflex-dev/reflex-llm-examples" -> "GitHamza0206/simba"
"trycua/cua" -> "simular-ai/Agent-S"
"trycua/cua" -> "simstudioai/sim"
"trycua/cua" -> "morphik-org/morphik-core"
"trycua/cua" -> "browserbase/stagehand"
"trycua/cua" -> "steel-dev/steel-browser"
"trycua/cua" -> "jlowin/fastmcp"
"trycua/cua" -> "MODSetter/SurfSense"
"trycua/cua" -> "HKUDS/AutoAgent"
"trycua/cua" -> "kortix-ai/suna"
"trycua/cua" -> "lmnr-ai/index"
"trycua/cua" -> "Zackriya-Solutions/meeting-minutes"
"trycua/cua" -> "lightpanda-io/browser"
"trycua/cua" -> "aipotheosis-labs/aci"
"trycua/cua" -> "getzep/graphiti"
"trycua/cua" -> "Operative-Sh/web-eval-agent"
"fdarkaou/open-deep-research" -> "btahir/open-deep-research"
"fdarkaou/open-deep-research" -> "nickscamara/open-deep-research"
"fdarkaou/open-deep-research" -> "exa-labs/exa-deepseek-chat"
"fdarkaou/open-deep-research" -> "jina-ai/node-DeepResearch"
"fdarkaou/open-deep-research" -> "mshumer/OpenDeepResearcher"
"fdarkaou/open-deep-research" -> "epuerta9/deep-research-py"
"fdarkaou/open-deep-research" -> "GitHamza0206/simba"
"fdarkaou/open-deep-research" -> "HarshJ23/Deeper-Seeker" ["e"=1]
"fdarkaou/open-deep-research" -> "dzhng/deep-research"
"fdarkaou/open-deep-research" -> "sullyo/webapp-starter"
"fdarkaou/open-deep-research" -> "rbrown101010/yapsearch"
"fdarkaou/open-deep-research" -> "mckaywrigley/mckays-app-template"
"fdarkaou/open-deep-research" -> "browserbase/open-operator"
"fdarkaou/open-deep-research" -> "AnotiaWang/deep-research-web-ui" ["e"=1]
"fdarkaou/open-deep-research" -> "langchain-ai/open_deep_research"
"santinic/audiblez" -> "DrewThomasson/ebook2audiobook"
"santinic/audiblez" -> "readest/readest" ["e"=1]
"santinic/audiblez" -> "echohive42/AI-reads-books-page-by-page"
"santinic/audiblez" -> "piotrkulpinski/openalternative" ["e"=1]
"santinic/audiblez" -> "princehuang/overseas-website-note" ["e"=1]
"santinic/audiblez" -> "Nutlope/logocreator" ["e"=1]
"santinic/audiblez" -> "oomol-lab/pdf-craft" ["e"=1]
"santinic/audiblez" -> "p0n1/epub_to_audiobook" ["e"=1]
"santinic/audiblez" -> "bjesus/pipet" ["e"=1]
"santinic/audiblez" -> "Zackriya-Solutions/meeting-minutes"
"santinic/audiblez" -> "krillinai/KrillinAI"
"santinic/audiblez" -> "wechat-article/wechat-article-exporter" ["e"=1]
"santinic/audiblez" -> "hexgrad/kokoro" ["e"=1]
"santinic/audiblez" -> "umlx5h/LLPlayer" ["e"=1]
"santinic/audiblez" -> "xykt/NetQuality" ["e"=1]
"decodingml/second-brain-ai-assistant-course" -> "decodingml/personalized-recommender-course"
"decodingml/second-brain-ai-assistant-course" -> "neural-maze/philoagents-course"
"decodingml/second-brain-ai-assistant-course" -> "decodingml/llm-twin-course"
"decodingml/second-brain-ai-assistant-course" -> "PacktPublishing/LLM-Engineers-Handbook"
"decodingml/second-brain-ai-assistant-course" -> "neural-maze/ava-whatsapp-agent-course"
"decodingml/second-brain-ai-assistant-course" -> "callmesora/llmops-python-package"
"decodingml/second-brain-ai-assistant-course" -> "fmind/mlops-python-package"
"decodingml/second-brain-ai-assistant-course" -> "neural-maze/agentic-patterns-course"
"decodingml/second-brain-ai-assistant-course" -> "hamzafarooq/building-llm-applications-from-scratch"
"decodingml/second-brain-ai-assistant-course" -> "SylphAI-Inc/LLM-engineer-handbook"
"decodingml/second-brain-ai-assistant-course" -> "break-into-data/ai-engineer-toolkit"
"decodingml/second-brain-ai-assistant-course" -> "iusztinpaul/hands-on-llms" ["e"=1]
"decodingml/second-brain-ai-assistant-course" -> "MLOps-Courses/mlops-coding-course"
"decodingml/second-brain-ai-assistant-course" -> "iusztinpaul/energy-forecasting"
"decodingml/second-brain-ai-assistant-course" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"VoltAgent/voltagent" -> "simstudioai/sim"
"VoltAgent/voltagent" -> "zaidmukaddam/scira-mcp-chat"
"VoltAgent/voltagent" -> "MotiaDev/motia"
"VoltAgent/voltagent" -> "airweave-ai/airweave"
"VoltAgent/voltagent" -> "Operative-Sh/web-eval-agent"
"VoltAgent/voltagent" -> "shcherbak-ai/contextgem"
"VoltAgent/voltagent" -> "cocoindex-io/cocoindex"
"VoltAgent/voltagent" -> "mcp-use/mcp-use"
"VoltAgent/voltagent" -> "langwatch/langwatch"
"VoltAgent/voltagent" -> "aaPanel/BillionMail" ["e"=1]
"VoltAgent/voltagent" -> "trycua/cua"
"VoltAgent/voltagent" -> "chonkie-inc/chonkie"
"VoltAgent/voltagent" -> "rowboatlabs/rowboat"
"VoltAgent/voltagent" -> "transformerlab/transformerlab-app"
"VoltAgent/voltagent" -> "HKUDS/AutoAgent"
"jina-ai/node-DeepResearch" -> "nickscamara/open-deep-research"
"jina-ai/node-DeepResearch" -> "mshumer/OpenDeepResearcher"
"jina-ai/node-DeepResearch" -> "btahir/open-deep-research"
"jina-ai/node-DeepResearch" -> "dzhng/deep-research"
"jina-ai/node-DeepResearch" -> "langchain-ai/open_deep_research"
"jina-ai/node-DeepResearch" -> "zilliztech/deep-searcher"
"jina-ai/node-DeepResearch" -> "langchain-ai/local-deep-researcher"
"jina-ai/node-DeepResearch" -> "sentient-agi/OpenDeepSearch"
"jina-ai/node-DeepResearch" -> "zaidmukaddam/scira"
"jina-ai/node-DeepResearch" -> "camel-ai/owl"
"jina-ai/node-DeepResearch" -> "jina-ai/reader"
"jina-ai/node-DeepResearch" -> "InternLM/MindSearch"
"jina-ai/node-DeepResearch" -> "langmanus/langmanus"
"jina-ai/node-DeepResearch" -> "QwenLM/Qwen-Agent"
"jina-ai/node-DeepResearch" -> "getAsterisk/deepclaude"
"nerding-io/n8n-nodes-mcp" -> "restyler/awesome-n8n"
"nerding-io/n8n-nodes-mcp" -> "coleam00/ottomator-agents"
"nerding-io/n8n-nodes-mcp" -> "coleam00/local-ai-packaged"
"nerding-io/n8n-nodes-mcp" -> "mendableai/firecrawl-mcp-server"
"nerding-io/n8n-nodes-mcp" -> "Marvomatic/n8n-templates"
"nerding-io/n8n-nodes-mcp" -> "leonardsellem/n8n-mcp-server"
"nerding-io/n8n-nodes-mcp" -> "coleam00/ai-agents-masterclass"
"nerding-io/n8n-nodes-mcp" -> "n8n-io/self-hosted-ai-starter-kit"
"nerding-io/n8n-nodes-mcp" -> "wonderwhy-er/DesktopCommanderMCP"
"nerding-io/n8n-nodes-mcp" -> "makafeli/n8n-workflow-builder"
"nerding-io/n8n-nodes-mcp" -> "21st-dev/magic-mcp"
"nerding-io/n8n-nodes-mcp" -> "n8n-io/n8n-nodes-starter"
"nerding-io/n8n-nodes-mcp" -> "stephengpope/no-code-architects-toolkit"
"nerding-io/n8n-nodes-mcp" -> "CopilotKit/open-mcp-client" ["e"=1]
"nerding-io/n8n-nodes-mcp" -> "coleam00/Archon"
"nanobrowser/nanobrowser" -> "camel-ai/owl"
"nanobrowser/nanobrowser" -> "nikmcfly/ANUS"
"nanobrowser/nanobrowser" -> "yuruotong1/autoMate"
"nanobrowser/nanobrowser" -> "web-infra-dev/midscene"
"nanobrowser/nanobrowser" -> "browser-use/web-ui"
"nanobrowser/nanobrowser" -> "bytedance/UI-TARS-desktop"
"nanobrowser/nanobrowser" -> "kortix-ai/suna"
"nanobrowser/nanobrowser" -> "simular-ai/Agent-S"
"nanobrowser/nanobrowser" -> "langmanus/langmanus"
"nanobrowser/nanobrowser" -> "HKUDS/AutoAgent"
"nanobrowser/nanobrowser" -> "refly-ai/refly"
"nanobrowser/nanobrowser" -> "zaidmukaddam/scira"
"nanobrowser/nanobrowser" -> "browserbase/stagehand"
"nanobrowser/nanobrowser" -> "browser-use/browser-use"
"nanobrowser/nanobrowser" -> "steel-dev/steel-browser"
"bmadcode/cursor-custom-agents-rules-generator" -> "bmadcode/BMAD-METHOD"
"bmadcode/cursor-custom-agents-rules-generator" -> "sanjeed5/awesome-cursor-rules-mdc"
"bmadcode/cursor-custom-agents-rules-generator" -> "eastlondoner/cursor-tools"
"bmadcode/cursor-custom-agents-rules-generator" -> "eyaltoledano/claude-task-master"
"bmadcode/cursor-custom-agents-rules-generator" -> "vanzan01/cursor-memory-bank"
"bmadcode/cursor-custom-agents-rules-generator" -> "Bhartendu-Kumar/rules_template" ["e"=1]
"bmadcode/cursor-custom-agents-rules-generator" -> "oslook/cursor-ai-downloads" ["e"=1]
"bmadcode/cursor-custom-agents-rules-generator" -> "grapeot/devin.cursorrules"
"bmadcode/cursor-custom-agents-rules-generator" -> "AgentDeskAI/browser-tools-mcp"
"bmadcode/cursor-custom-agents-rules-generator" -> "pontusab/directories"
"bmadcode/cursor-custom-agents-rules-generator" -> "T1nker-1220/UltraContextAI"
"bmadcode/cursor-custom-agents-rules-generator" -> "Mawla/cursor_rules"
"bmadcode/cursor-custom-agents-rules-generator" -> "kleneway/pastemax" ["e"=1]
"bmadcode/cursor-custom-agents-rules-generator" -> "PatrickJS/awesome-cursorrules"
"bmadcode/cursor-custom-agents-rules-generator" -> "upstash/context7"
"neural-maze/ava-whatsapp-agent-course" -> "von-development/awesome-LangGraph"
"neural-maze/ava-whatsapp-agent-course" -> "neural-maze/agentic-patterns-course"
"neural-maze/ava-whatsapp-agent-course" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"neural-maze/ava-whatsapp-agent-course" -> "callmesora/llmops-python-package"
"neural-maze/ava-whatsapp-agent-course" -> "Deluxer/oliva"
"neural-maze/ava-whatsapp-agent-course" -> "decodingml/second-brain-ai-assistant-course"
"neural-maze/ava-whatsapp-agent-course" -> "neural-maze/rick-llm"
"neural-maze/ava-whatsapp-agent-course" -> "neural-maze/philoagents-course"
"neural-maze/ava-whatsapp-agent-course" -> "zamalali/DeepGit"
"neural-maze/ava-whatsapp-agent-course" -> "BragAI/bRAG-langchain"
"neural-maze/ava-whatsapp-agent-course" -> "hrithikkoduri/WebRover"
"neural-maze/ava-whatsapp-agent-course" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"neural-maze/ava-whatsapp-agent-course" -> "souvikmajumder26/Multi-Agent-Medical-Assistant"
"neural-maze/ava-whatsapp-agent-course" -> "PacktPublishing/LLM-Engineers-Handbook"
"neural-maze/ava-whatsapp-agent-course" -> "langchain-ai/agent-chat-ui"
"bytedance/flowgram.ai" -> "bytedance/deer-flow"
"bytedance/flowgram.ai" -> "refly-ai/refly"
"bytedance/flowgram.ai" -> "cloudwego/eino" ["e"=1]
"bytedance/flowgram.ai" -> "d2forum/19th"
"bytedance/flowgram.ai" -> "cyfyifanchen/one-person-company" ["e"=1]
"bytedance/flowgram.ai" -> "OpenAISpace/ai-trend-publish" ["e"=1]
"bytedance/flowgram.ai" -> "ant-design/x" ["e"=1]
"bytedance/flowgram.ai" -> "web-infra-dev/midscene"
"bytedance/flowgram.ai" -> "bytedance/UI-TARS-desktop"
"bytedance/flowgram.ai" -> "droidrun/droidrun" ["e"=1]
"bytedance/flowgram.ai" -> "alibaba/designable" ["e"=1]
"bytedance/flowgram.ai" -> "langmanus/langmanus"
"bytedance/flowgram.ai" -> "web-infra-dev/modern.js" ["e"=1]
"bytedance/flowgram.ai" -> "bytedance/InfiniteYou" ["e"=1]
"bytedance/flowgram.ai" -> "web-infra-dev/garfish" ["e"=1]
"fastrepl/hyprnote" -> "rowboatlabs/rowboat"
"fastrepl/hyprnote" -> "Zackriya-Solutions/meeting-minutes"
"fastrepl/hyprnote" -> "MODSetter/SurfSense"
"fastrepl/hyprnote" -> "aipotheosis-labs/aci"
"fastrepl/hyprnote" -> "jujumilk3/leaked-system-prompts"
"fastrepl/hyprnote" -> "kortix-ai/suna"
"fastrepl/hyprnote" -> "badboysm890/ClaraVerse" ["e"=1]
"fastrepl/hyprnote" -> "getzep/graphiti"
"fastrepl/hyprnote" -> "elie222/inbox-zero" ["e"=1]
"fastrepl/hyprnote" -> "supabase-community/supabase-mcp"
"fastrepl/hyprnote" -> "simular-ai/Agent-S"
"fastrepl/hyprnote" -> "thepersonalaicompany/amurex"
"fastrepl/hyprnote" -> "dyad-sh/dyad" ["e"=1]
"fastrepl/hyprnote" -> "CapSoftware/Cap" ["e"=1]
"fastrepl/hyprnote" -> "trycua/cua"
"BandarLabs/gitpodcast" -> "BandarLabs/clickclickclick"
"BandarLabs/gitpodcast" -> "lecca-digital/lecca-io"
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "morphik-org/morphik-core"
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "signerlabs/Klee" ["e"=1]
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "zilliztech/deep-searcher"
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "CodeUpdaterBot/ClickUi" ["e"=1]
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "BragAI/bRAG-langchain"
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "FareedKhan-dev/all-rag-techniques"
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "Emissary-Tech/legit-rag"
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "GitHamza0206/simba"
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "LearningCircuit/local-deep-research"
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "badboysm890/ClaraVerse" ["e"=1]
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "imanoop7/Ollama-OCR"
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "getAsterisk/deepclaude"
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "austin-starks/FinAnGPT-Pro" ["e"=1]
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "qx-labs/agents-deep-research" ["e"=1]
"SaiAkhil066/DeepSeek-RAG-Chatbot" -> "leettools-dev/leettools"
"idosal/git-mcp" -> "tadata-org/fastapi_mcp"
"idosal/git-mcp" -> "mcp-use/mcp-use"
"idosal/git-mcp" -> "cloudflare/mcp-server-cloudflare"
"idosal/git-mcp" -> "metorial/mcp-containers" ["e"=1]
"idosal/git-mcp" -> "CopilotKit/open-mcp-client" ["e"=1]
"idosal/git-mcp" -> "eyaltoledano/claude-task-master"
"idosal/git-mcp" -> "exa-labs/exa-mcp-server"
"idosal/git-mcp" -> "zcaceres/markdownify-mcp"
"idosal/git-mcp" -> "ymichael/open-codex"
"idosal/git-mcp" -> "mendableai/firecrawl-mcp-server"
"idosal/git-mcp" -> "upstash/context7"
"idosal/git-mcp" -> "JefferyHcool/BiliNote" ["e"=1]
"idosal/git-mcp" -> "f/mcptools" ["e"=1]
"idosal/git-mcp" -> "magnitudedev/magnitude"
"idosal/git-mcp" -> "wonderwhy-er/DesktopCommanderMCP"
"nickscamara/open-deep-research" -> "jina-ai/node-DeepResearch"
"nickscamara/open-deep-research" -> "mshumer/OpenDeepResearcher"
"nickscamara/open-deep-research" -> "dzhng/deep-research"
"nickscamara/open-deep-research" -> "btahir/open-deep-research"
"nickscamara/open-deep-research" -> "langchain-ai/open_deep_research"
"nickscamara/open-deep-research" -> "huggingface/smolagents"
"nickscamara/open-deep-research" -> "langchain-ai/local-deep-researcher"
"nickscamara/open-deep-research" -> "zilliztech/deep-searcher"
"nickscamara/open-deep-research" -> "grapeot/devin.cursorrules"
"nickscamara/open-deep-research" -> "zaidmukaddam/scira"
"nickscamara/open-deep-research" -> "assafelovic/gpt-researcher"
"nickscamara/open-deep-research" -> "camel-ai/owl"
"nickscamara/open-deep-research" -> "browser-use/web-ui"
"nickscamara/open-deep-research" -> "langchain-ai/open-canvas"
"nickscamara/open-deep-research" -> "mendableai/firecrawl"
"grapeot/devin.cursorrules" -> "eastlondoner/cursor-tools"
"grapeot/devin.cursorrules" -> "nickscamara/open-deep-research"
"grapeot/devin.cursorrules" -> "oumi-ai/oumi"
"grapeot/devin.cursorrules" -> "PatrickJS/awesome-cursorrules"
"grapeot/devin.cursorrules" -> "eyaltoledano/claude-task-master"
"grapeot/devin.cursorrules" -> "AgentDeskAI/browser-tools-mcp"
"grapeot/devin.cursorrules" -> "pontusab/directories"
"grapeot/devin.cursorrules" -> "upstash/context7"
"grapeot/devin.cursorrules" -> "dzhng/deep-research"
"grapeot/devin.cursorrules" -> "getAsterisk/deepclaude"
"grapeot/devin.cursorrules" -> "block/goose"
"grapeot/devin.cursorrules" -> "onlook-dev/onlook" ["e"=1]
"grapeot/devin.cursorrules" -> "browserbase/stagehand"
"grapeot/devin.cursorrules" -> "yamadashy/repomix"
"grapeot/devin.cursorrules" -> "RooVetGit/Roo-Code"
"supabase-community/supabase-mcp" -> "alexander-zuev/supabase-mcp-server"
"supabase-community/supabase-mcp" -> "cloudflare/mcp-server-cloudflare"
"supabase-community/supabase-mcp" -> "mendableai/firecrawl-mcp-server"
"supabase-community/supabase-mcp" -> "wonderwhy-er/DesktopCommanderMCP"
"supabase-community/supabase-mcp" -> "21st-dev/magic-mcp"
"supabase-community/supabase-mcp" -> "exa-labs/exa-mcp-server"
"supabase-community/supabase-mcp" -> "liam-hq/liam" ["e"=1]
"supabase-community/supabase-mcp" -> "ppl-ai/modelcontextprotocol"
"supabase-community/supabase-mcp" -> "simular-ai/Agent-S"
"supabase-community/supabase-mcp" -> "fastrepl/hyprnote"
"supabase-community/supabase-mcp" -> "lastmile-ai/mcp-agent"
"supabase-community/supabase-mcp" -> "aipotheosis-labs/aci"
"supabase-community/supabase-mcp" -> "elevenlabs/elevenlabs-mcp"
"supabase-community/supabase-mcp" -> "executeautomation/mcp-playwright"
"supabase-community/supabase-mcp" -> "funstory-ai/BabelDOC"
"browser-use/macOS-use" -> "Blaizzy/mlx-vlm" ["e"=1]
"browser-use/macOS-use" -> "Dhravya/apple-mcp"
"browser-use/macOS-use" -> "Saik0s/mcp-browser-use" ["e"=1]
"browser-use/macOS-use" -> "egoist/sitefetch"
"browser-use/macOS-use" -> "specstoryai/getspecstory"
"browser-use/macOS-use" -> "tjmlabs/ColiVara"
"browser-use/macOS-use" -> "e2b-dev/open-computer-use"
"browser-use/macOS-use" -> "mainframecomputer/fullmoon-ios" ["e"=1]
"browser-use/macOS-use" -> "browser-use/awesome-prompts"
"browser-use/macOS-use" -> "Blaizzy/mlx-audio" ["e"=1]
"browser-use/macOS-use" -> "Dicklesworthstone/your-source-to-prompt.html"
"browser-use/macOS-use" -> "browser-use/web-ui"
"browser-use/macOS-use" -> "openai/openai-cua-sample-app"
"browser-use/macOS-use" -> "DannyMac180/meta-agent"
"browser-use/macOS-use" -> "eastlondoner/cursor-tools"
"NVIDIA-AI-Blueprints/pdf-to-podcast" -> "echohive42/AI-reads-books-page-by-page"
"NVIDIA-AI-Blueprints/pdf-to-podcast" -> "GitHamza0206/simba"
"NVIDIA-AI-Blueprints/pdf-to-podcast" -> "FoloUp/FoloUp"
"NVIDIA-AI-Blueprints/pdf-to-podcast" -> "thiswillbeyourgithub/wdoc"
"NVIDIA-AI-Blueprints/pdf-to-podcast" -> "NVIDIA-AI-Blueprints/ai-virtual-assistant"
"NVIDIA-AI-Blueprints/pdf-to-podcast" -> "ccbikai/hacker-news" ["e"=1]
"NVIDIA-AI-Blueprints/pdf-to-podcast" -> "tianyaxiang/neurapress" ["e"=1]
"cocoindex-io/cocoindex" -> "morphik-org/morphik-core"
"cocoindex-io/cocoindex" -> "simstudioai/sim"
"cocoindex-io/cocoindex" -> "VoltAgent/voltagent"
"cocoindex-io/cocoindex" -> "magnitudedev/magnitude"
"cocoindex-io/cocoindex" -> "chonkie-inc/chonkie"
"cocoindex-io/cocoindex" -> "HKUDS/AutoAgent"
"cocoindex-io/cocoindex" -> "shcherbak-ai/contextgem"
"cocoindex-io/cocoindex" -> "plexe-ai/plexe"
"cocoindex-io/cocoindex" -> "mcp-use/mcp-use"
"cocoindex-io/cocoindex" -> "Vexa-ai/vexa" ["e"=1]
"cocoindex-io/cocoindex" -> "trustgraph-ai/trustgraph"
"cocoindex-io/cocoindex" -> "formsmd/formsmd" ["e"=1]
"cocoindex-io/cocoindex" -> "langwatch/scenario" ["e"=1]
"cocoindex-io/cocoindex" -> "PySpur-Dev/pyspur"
"cocoindex-io/cocoindex" -> "liam-hq/liam" ["e"=1]
"nikmcfly/ANUS" -> "camel-ai/owl"
"nikmcfly/ANUS" -> "nanobrowser/nanobrowser"
"nikmcfly/ANUS" -> "simular-ai/Agent-S"
"nikmcfly/ANUS" -> "HKUDS/AutoAgent"
"nikmcfly/ANUS" -> "browser-use/web-ui"
"nikmcfly/ANUS" -> "browserbase/stagehand"
"nikmcfly/ANUS" -> "dzhng/deep-research"
"nikmcfly/ANUS" -> "Shubhamsaboo/awesome-llm-apps"
"nikmcfly/ANUS" -> "FoundationAgents/OpenManus"
"nikmcfly/ANUS" -> "langchain-ai/local-deep-researcher"
"nikmcfly/ANUS" -> "agno-agi/agno"
"nikmcfly/ANUS" -> "zaidmukaddam/scira"
"nikmcfly/ANUS" -> "nickscamara/open-deep-research"
"nikmcfly/ANUS" -> "elder-plinius/L1B3RT4S"
"nikmcfly/ANUS" -> "mshumer/OpenDeepResearcher"
"GitHamza0206/simba" -> "echohive42/AI-reads-books-page-by-page"
"GitHamza0206/simba" -> "rag-web-ui/rag-web-ui" ["e"=1]
"GitHamza0206/simba" -> "xynehq/xyne"
"GitHamza0206/simba" -> "tianyaxiang/neurapress" ["e"=1]
"GitHamza0206/simba" -> "tjmlabs/ColiVara"
"GitHamza0206/simba" -> "NVIDIA-AI-Blueprints/pdf-to-podcast"
"GitHamza0206/simba" -> "enoch3712/ExtractThinker"
"GitHamza0206/simba" -> "imanoop7/Ollama-OCR"
"GitHamza0206/simba" -> "zcaceres/markdownify-mcp"
"GitHamza0206/simba" -> "thiswillbeyourgithub/wdoc"
"GitHamza0206/simba" -> "CatchTheTornado/text-extract-api"
"GitHamza0206/simba" -> "ccbikai/hacker-news" ["e"=1]
"GitHamza0206/simba" -> "FoloUp/FoloUp"
"GitHamza0206/simba" -> "Goldziher/kreuzberg"
"GitHamza0206/simba" -> "refly-ai/refly"
"Thytu/Agentarium" -> "alonlavian/RAGent"
"Thytu/Agentarium" -> "dynamiq-ai/dynamiq"
"Thytu/Agentarium" -> "athina-ai/rag-cookbooks"
"Thytu/Agentarium" -> "plurai-ai/intellagent"
"Thytu/Agentarium" -> "HKUDS/AutoAgent"
"Thytu/Agentarium" -> "memodb-io/memobase"
"Thytu/Agentarium" -> "Softlandia-Ltd/vision-is-all-you-need"
"Thytu/Agentarium" -> "tjmlabs/ColiVara"
"Thytu/Agentarium" -> "PrefectHQ/ControlFlow" ["e"=1]
"Thytu/Agentarium" -> "langwatch/langwatch"
"Thytu/Agentarium" -> "emcie-co/parlant"
"Thytu/Agentarium" -> "trycua/acu"
"Thytu/Agentarium" -> "awslabs/agent-squad"
"Thytu/Agentarium" -> "microsoft/PromptWizard"
"Thytu/Agentarium" -> "run-llama/create-llama"
"simstudioai/sim" -> "Operative-Sh/web-eval-agent"
"simstudioai/sim" -> "morphik-org/morphik-core"
"simstudioai/sim" -> "trycua/cua"
"simstudioai/sim" -> "chonkie-inc/chonkie"
"simstudioai/sim" -> "airweave-ai/airweave"
"simstudioai/sim" -> "HKUDS/AutoAgent"
"simstudioai/sim" -> "MotiaDev/motia"
"simstudioai/sim" -> "HelixDB/helix-db"
"simstudioai/sim" -> "simular-ai/Agent-S"
"simstudioai/sim" -> "magnitudedev/magnitude"
"simstudioai/sim" -> "plexe-ai/plexe"
"simstudioai/sim" -> "aaPanel/BillionMail" ["e"=1]
"simstudioai/sim" -> "PySpur-Dev/pyspur"
"simstudioai/sim" -> "VoltAgent/voltagent"
"simstudioai/sim" -> "mcp-use/mcp-use"
"soGeneri/awesome-launch" -> "C-Loftus/QuickPiperAudiobook" ["e"=1]
"soGeneri/awesome-launch" -> "SagiPolaczek/NeuralSVG" ["e"=1]
"soGeneri/awesome-launch" -> "exa-labs/company-researcher"
"soGeneri/awesome-launch" -> "potpie-ai/AI-COSS"
"soGeneri/awesome-launch" -> "egoist/sitefetch"
"soGeneri/awesome-launch" -> "harishdeivanayagam/rowfill"
"soGeneri/awesome-launch" -> "baturyilmaz/wordpecker-app" ["e"=1]
"soGeneri/awesome-launch" -> "goodreasonai/ScrapeServ" ["e"=1]
"soGeneri/awesome-launch" -> "FoloUp/FoloUp"
"soGeneri/awesome-launch" -> "FormBee/FormBee" ["e"=1]
"soGeneri/awesome-launch" -> "Aident-AI/open-cuak"
"soGeneri/awesome-launch" -> "vinceanalytics/vince" ["e"=1]
"soGeneri/awesome-launch" -> "SeekStorm/SeekStorm" ["e"=1]
"soGeneri/awesome-launch" -> "fal-ai-community/video-starter-kit"
"soGeneri/awesome-launch" -> "ses4255/Versatile-OCR-Program"
"ErlichLiu/DeepClaude" -> "getAsterisk/deepclaude"
"ErlichLiu/DeepClaude" -> "sligter/DeepGemini" ["e"=1]
"ErlichLiu/DeepClaude" -> "refly-ai/refly"
"ErlichLiu/DeepClaude" -> "QuantumNous/new-api" ["e"=1]
"ErlichLiu/DeepClaude" -> "u14app/deep-research" ["e"=1]
"ErlichLiu/DeepClaude" -> "snailyp/gemini-balance" ["e"=1]
"ErlichLiu/DeepClaude" -> "linshenkx/prompt-optimizer"
"ErlichLiu/DeepClaude" -> "deanxv/genspark2api" ["e"=1]
"ErlichLiu/DeepClaude" -> "richards199999/Thinking-Claude"
"ErlichLiu/DeepClaude" -> "TeamWiseFlow/wiseflow"
"ErlichLiu/DeepClaude" -> "CherryHQ/cherry-studio"
"ErlichLiu/DeepClaude" -> "chengazhen/cursor-auto-free" ["e"=1]
"ErlichLiu/DeepClaude" -> "HiveNexus/HiveChat" ["e"=1]
"ErlichLiu/DeepClaude" -> "MartialBE/one-hub" ["e"=1]
"ErlichLiu/DeepClaude" -> "zilliztech/deep-searcher"
"superagent-ai/reag" -> "tjmlabs/ColiVara"
"superagent-ai/reag" -> "Doriandarko/RAT-retrieval-augmented-thinking"
"superagent-ai/reag" -> "lumina-ai-inc/chunkr"
"superagent-ai/reag" -> "egoist/sitefetch"
"superagent-ai/reag" -> "mshumer/OpenDeepResearcher"
"superagent-ai/reag" -> "harishsg993010/LLM-Reasoner"
"superagent-ai/reag" -> "eyelevelai/groundx-on-prem"
"superagent-ai/reag" -> "video-db/Director"
"superagent-ai/reag" -> "eastlondoner/cursor-tools"
"superagent-ai/reag" -> "exa-labs/exa-mcp-server"
"superagent-ai/reag" -> "smtg-ai/claude-squad" ["e"=1]
"superagent-ai/reag" -> "reflex-dev/reflex-llm-examples"
"superagent-ai/reag" -> "exa-labs/exa-deepseek-chat"
"superagent-ai/reag" -> "defog-ai/introspect"
"superagent-ai/reag" -> "sullyo/webapp-starter"
"mshumer/OpenDeepResearcher" -> "jina-ai/node-DeepResearch"
"mshumer/OpenDeepResearcher" -> "nickscamara/open-deep-research"
"mshumer/OpenDeepResearcher" -> "btahir/open-deep-research"
"mshumer/OpenDeepResearcher" -> "langchain-ai/open_deep_research"
"mshumer/OpenDeepResearcher" -> "dzhng/deep-research"
"mshumer/OpenDeepResearcher" -> "langchain-ai/local-deep-researcher"
"mshumer/OpenDeepResearcher" -> "HKUDS/AutoAgent"
"mshumer/OpenDeepResearcher" -> "zilliztech/deep-searcher"
"mshumer/OpenDeepResearcher" -> "echohive42/AI-reads-books-page-by-page"
"mshumer/OpenDeepResearcher" -> "getAsterisk/deepclaude"
"mshumer/OpenDeepResearcher" -> "zaidmukaddam/scira"
"mshumer/OpenDeepResearcher" -> "AK391/ai-gradio"
"mshumer/OpenDeepResearcher" -> "refly-ai/refly"
"mshumer/OpenDeepResearcher" -> "fdarkaou/open-deep-research"
"mshumer/OpenDeepResearcher" -> "sentient-agi/OpenDeepSearch"
"upstash/context7" -> "eyaltoledano/claude-task-master"
"upstash/context7" -> "The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge"
"upstash/context7" -> "RooVetGit/Roo-Code"
"upstash/context7" -> "PatrickJS/awesome-cursorrules"
"upstash/context7" -> "AgentDeskAI/browser-tools-mcp"
"upstash/context7" -> "modelcontextprotocol/servers"
"upstash/context7" -> "coleam00/Archon"
"upstash/context7" -> "kortix-ai/suna"
"upstash/context7" -> "jlowin/fastmcp"
"upstash/context7" -> "getzep/graphiti"
"upstash/context7" -> "stackblitz-labs/bolt.diy"
"upstash/context7" -> "wonderwhy-er/DesktopCommanderMCP"
"upstash/context7" -> "openai/codex"
"upstash/context7" -> "mcp-use/mcp-use"
"upstash/context7" -> "cline/cline"
"chonkie-inc/chonkie" -> "HelixDB/helix-db"
"chonkie-inc/chonkie" -> "simstudioai/sim"
"chonkie-inc/chonkie" -> "morphik-org/morphik-core"
"chonkie-inc/chonkie" -> "Operative-Sh/web-eval-agent"
"chonkie-inc/chonkie" -> "airweave-ai/airweave"
"chonkie-inc/chonkie" -> "authed-dev/authed"
"chonkie-inc/chonkie" -> "getprobo/probo"
"chonkie-inc/chonkie" -> "chonkie-ai/chonkie"
"chonkie-inc/chonkie" -> "mlop-ai/mlop"
"chonkie-inc/chonkie" -> "shcherbak-ai/contextgem"
"chonkie-inc/chonkie" -> "starslingdev/starsling"
"chonkie-inc/chonkie" -> "MinishLab/model2vec"
"chonkie-inc/chonkie" -> "aaPanel/BillionMail" ["e"=1]
"chonkie-inc/chonkie" -> "langwatch/scenario" ["e"=1]
"chonkie-inc/chonkie" -> "cocoindex-io/cocoindex"
"mozilla-ai/any-agent" -> "mozilla-ai/lumigator"
"mozilla-ai/any-agent" -> "mozilla-ai/byota"
"mozilla-ai/any-agent" -> "mozilla-ai/document-to-podcast"
"mozilla-ai/any-agent" -> "mozilla-ai/aissert"
"mozilla-ai/any-agent" -> "VectifyAI/PageIndex"
"ConardLi/easy-dataset" -> "hiyouga/LLaMA-Factory"
"ConardLi/easy-dataset" -> "opendatalab/MinerU"
"ConardLi/easy-dataset" -> "zilliztech/deep-searcher"
"ConardLi/easy-dataset" -> "svcvit/Awesome-Dify-Workflow"
"ConardLi/easy-dataset" -> "jingyaogong/minimind" ["e"=1]
"ConardLi/easy-dataset" -> "xorbitsai/inference"
"ConardLi/easy-dataset" -> "kvcache-ai/ktransformers" ["e"=1]
"ConardLi/easy-dataset" -> "modelscope/ms-swift" ["e"=1]
"ConardLi/easy-dataset" -> "HqWu-HITCS/Awesome-Chinese-LLM" ["e"=1]
"ConardLi/easy-dataset" -> "Kiln-AI/Kiln"
"ConardLi/easy-dataset" -> "unslothai/unsloth"
"ConardLi/easy-dataset" -> "netease-youdao/QAnything"
"ConardLi/easy-dataset" -> "infiniflow/ragflow"
"ConardLi/easy-dataset" -> "labring/FastGPT"
"ConardLi/easy-dataset" -> "datawhalechina/self-llm" ["e"=1]
"makenotion/notion-mcp-server" -> "suekou/mcp-notion-server" ["e"=1]
"makenotion/notion-mcp-server" -> "ppl-ai/modelcontextprotocol"
"makenotion/notion-mcp-server" -> "github/github-mcp-server"
"makenotion/notion-mcp-server" -> "awslabs/mcp" ["e"=1]
"makenotion/notion-mcp-server" -> "microsoft/playwright-mcp"
"makenotion/notion-mcp-server" -> "mendableai/firecrawl-mcp-server"
"makenotion/notion-mcp-server" -> "ryoppippi/sitemcp" ["e"=1]
"makenotion/notion-mcp-server" -> "GLips/Figma-Context-MCP"
"makenotion/notion-mcp-server" -> "line/line-bot-mcp-server" ["e"=1]
"makenotion/notion-mcp-server" -> "kinopeee/cursorrules" ["e"=1]
"makenotion/notion-mcp-server" -> "mcp-use/mcp-use"
"makenotion/notion-mcp-server" -> "mizchi/ailab" ["e"=1]
"makenotion/notion-mcp-server" -> "tadata-org/fastapi_mcp"
"makenotion/notion-mcp-server" -> "idosal/git-mcp"
"makenotion/notion-mcp-server" -> "supabase-community/supabase-mcp"
"KalyanKS-NLP/llm-engineer-toolkit" -> "KalyanKS-NLP/rag-zero-to-hero-guide"
"KalyanKS-NLP/llm-engineer-toolkit" -> "hamzafarooq/building-llm-applications-from-scratch"
"KalyanKS-NLP/llm-engineer-toolkit" -> "patchy631/ai-engineering-hub"
"KalyanKS-NLP/llm-engineer-toolkit" -> "HKUDS/AutoAgent"
"KalyanKS-NLP/llm-engineer-toolkit" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"KalyanKS-NLP/llm-engineer-toolkit" -> "mcp-use/mcp-use"
"KalyanKS-NLP/llm-engineer-toolkit" -> "NirDiamant/GenAI_Agents"
"KalyanKS-NLP/llm-engineer-toolkit" -> "neural-maze/ava-whatsapp-agent-course"
"KalyanKS-NLP/llm-engineer-toolkit" -> "mongodb-developer/GenAI-Showcase"
"KalyanKS-NLP/llm-engineer-toolkit" -> "afshinea/stanford-cme-295-transformers-large-language-models"
"KalyanKS-NLP/llm-engineer-toolkit" -> "aishwaryanr/awesome-generative-ai-guide"
"KalyanKS-NLP/llm-engineer-toolkit" -> "PacktPublishing/LLM-Engineers-Handbook"
"KalyanKS-NLP/llm-engineer-toolkit" -> "llmgenai/LLMInterviewQuestions"
"KalyanKS-NLP/llm-engineer-toolkit" -> "SylphAI-Inc/LLM-engineer-handbook"
"KalyanKS-NLP/llm-engineer-toolkit" -> "Shubhamsaboo/awesome-llm-apps"
"dontriskit/awesome-ai-system-prompts" -> "refly-ai/refly"
"dontriskit/awesome-ai-system-prompts" -> "MobinX/awesome-mcp-list" ["e"=1]
"dontriskit/awesome-ai-system-prompts" -> "cyfyifanchen/one-person-company" ["e"=1]
"dontriskit/awesome-ai-system-prompts" -> "asgeirtj/system_prompts_leaks"
"dontriskit/awesome-ai-system-prompts" -> "robertpiosik/CodeWebChat" ["e"=1]
"dontriskit/awesome-ai-system-prompts" -> "karminski/one-small-step" ["e"=1]
"dontriskit/awesome-ai-system-prompts" -> "Danielskry/Awesome-RAG"
"dontriskit/awesome-ai-system-prompts" -> "hylarucoder/ai-flavor-remover" ["e"=1]
"dontriskit/awesome-ai-system-prompts" -> "jamez-bondos/awesome-gpt4o-images"
"dontriskit/awesome-ai-system-prompts" -> "yzfly/Awesome-MCP-ZH"
"dontriskit/awesome-ai-system-prompts" -> "cyberagiinc/DevDocs" ["e"=1]
"dontriskit/awesome-ai-system-prompts" -> "wenyuanw/quick-prompt" ["e"=1]
"dontriskit/awesome-ai-system-prompts" -> "FareedKhan-dev/all-rag-techniques"
"dontriskit/awesome-ai-system-prompts" -> "linshenkx/prompt-optimizer"
"dontriskit/awesome-ai-system-prompts" -> "pogjester/company-research-agent" ["e"=1]
"anthropics/claude-code" -> "openai/codex"
"anthropics/claude-code" -> "PennyroyalTea/gibberlink"
"anthropics/claude-code" -> "openai/openai-agents-python"
"anthropics/claude-code" -> "block/goose"
"anthropics/claude-code" -> "cline/cline"
"anthropics/claude-code" -> "RooVetGit/Roo-Code"
"anthropics/claude-code" -> "anthropics/anthropic-cookbook"
"anthropics/claude-code" -> "Aider-AI/aider"
"anthropics/claude-code" -> "modelcontextprotocol/servers"
"anthropics/claude-code" -> "yamadashy/repomix"
"anthropics/claude-code" -> "anthropics/anthropic-quickstarts"
"anthropics/claude-code" -> "github/github-mcp-server"
"anthropics/claude-code" -> "Doriandarko/claude-engineer"
"anthropics/claude-code" -> "google/A2A"
"anthropics/claude-code" -> "openai/swarm"
"business-science/ai-data-science-team" -> "business-science/awesome-generative-ai-data-scientist"
"business-science/ai-data-science-team" -> "business-science/free-ai-tips"
"business-science/ai-data-science-team" -> "business-science/pytimetk" ["e"=1]
"business-science/ai-data-science-team" -> "quant-science/sunday-quant-scientist" ["e"=1]
"business-science/ai-data-science-team" -> "business-science/free_r_tips" ["e"=1]
"business-science/ai-data-science-team" -> "patchy631/ai-engineering-hub"
"business-science/ai-data-science-team" -> "starpig1129/DATAGEN"
"business-science/ai-data-science-team" -> "microsoft/data-formulator"
"business-science/ai-data-science-team" -> "HKUDS/AutoAgent"
"business-science/ai-data-science-team" -> "ucbepic/docetl"
"business-science/ai-data-science-team" -> "langchain-ai/langgraph-supervisor-py"
"business-science/ai-data-science-team" -> "Canner/WrenAI"
"business-science/ai-data-science-team" -> "virattt/ai-financial-agent"
"business-science/ai-data-science-team" -> "neural-maze/ava-whatsapp-agent-course"
"business-science/ai-data-science-team" -> "PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" ["e"=1]
"getAsterisk/deepclaude" -> "ErlichLiu/DeepClaude"
"getAsterisk/deepclaude" -> "jina-ai/node-DeepResearch"
"getAsterisk/deepclaude" -> "zilliztech/deep-searcher"
"getAsterisk/deepclaude" -> "refly-ai/refly"
"getAsterisk/deepclaude" -> "zaidmukaddam/scira"
"getAsterisk/deepclaude" -> "CherryHQ/cherry-studio"
"getAsterisk/deepclaude" -> "camel-ai/owl"
"getAsterisk/deepclaude" -> "eastlondoner/cursor-tools"
"getAsterisk/deepclaude" -> "richards199999/Thinking-Claude"
"getAsterisk/deepclaude" -> "browser-use/web-ui"
"getAsterisk/deepclaude" -> "RooVetGit/Roo-Code"
"getAsterisk/deepclaude" -> "mshumer/OpenDeepResearcher"
"getAsterisk/deepclaude" -> "grapeot/devin.cursorrules"
"getAsterisk/deepclaude" -> "QuantumNous/new-api" ["e"=1]
"getAsterisk/deepclaude" -> "dzhng/deep-research"
"ppl-ai/modelcontextprotocol" -> "qdrant/mcp-server-qdrant" ["e"=1]
"ppl-ai/modelcontextprotocol" -> "syedazharmbnr1/claude-chatgpt-mcp"
"ppl-ai/modelcontextprotocol" -> "mendableai/firecrawl-mcp-server"
"ppl-ai/modelcontextprotocol" -> "makenotion/notion-mcp-server"
"ppl-ai/modelcontextprotocol" -> "supabase-community/supabase-mcp"
"ppl-ai/modelcontextprotocol" -> "tavily-ai/tavily-mcp" ["e"=1]
"ppl-ai/modelcontextprotocol" -> "mcp-use/mcp-use"
"ppl-ai/modelcontextprotocol" -> "exa-labs/exa-mcp-server"
"ppl-ai/modelcontextprotocol" -> "ppl-ai/api-cookbook"
"ppl-ai/modelcontextprotocol" -> "zcaceres/markdownify-mcp"
"ppl-ai/modelcontextprotocol" -> "browserbase/mcp-server-browserbase"
"ppl-ai/modelcontextprotocol" -> "smithery-ai/mcp-obsidian" ["e"=1]
"ppl-ai/modelcontextprotocol" -> "Saik0s/mcp-browser-use" ["e"=1]
"ppl-ai/modelcontextprotocol" -> "ckreiling/mcp-server-docker" ["e"=1]
"ppl-ai/modelcontextprotocol" -> "Dhravya/apple-mcp"
"vanzan01/cursor-memory-bank" -> "Bhartendu-Kumar/rules_template" ["e"=1]
"vanzan01/cursor-memory-bank" -> "eyaltoledano/claude-task-master"
"vanzan01/cursor-memory-bank" -> "alioshr/memory-bank-mcp" ["e"=1]
"vanzan01/cursor-memory-bank" -> "bmadcode/cursor-custom-agents-rules-generator"
"vanzan01/cursor-memory-bank" -> "upstash/context7"
"vanzan01/cursor-memory-bank" -> "GreatScottyMac/roo-code-memory-bank" ["e"=1]
"vanzan01/cursor-memory-bank" -> "eastlondoner/cursor-tools"
"vanzan01/cursor-memory-bank" -> "bmadcode/BMAD-METHOD"
"vanzan01/cursor-memory-bank" -> "oslook/cursor-ai-downloads" ["e"=1]
"vanzan01/cursor-memory-bank" -> "21st-dev/magic-mcp"
"vanzan01/cursor-memory-bank" -> "ipenywis/aimemory"
"vanzan01/cursor-memory-bank" -> "grapeot/devin.cursorrules"
"vanzan01/cursor-memory-bank" -> "tacticlaunch/cursor-bank"
"vanzan01/cursor-memory-bank" -> "GreatScottyMac/RooFlow" ["e"=1]
"vanzan01/cursor-memory-bank" -> "johnpeterman72/CursorRIPER"
"21st-dev/magic-mcp" -> "exa-labs/exa-mcp-server"
"21st-dev/magic-mcp" -> "mendableai/firecrawl-mcp-server"
"21st-dev/magic-mcp" -> "zcaceres/markdownify-mcp"
"21st-dev/magic-mcp" -> "eyaltoledano/claude-task-master"
"21st-dev/magic-mcp" -> "AgentDeskAI/browser-tools-mcp"
"21st-dev/magic-mcp" -> "upstash/context7"
"21st-dev/magic-mcp" -> "alexander-zuev/supabase-mcp-server"
"21st-dev/magic-mcp" -> "GLips/Figma-Context-MCP"
"21st-dev/magic-mcp" -> "supabase-community/supabase-mcp"
"21st-dev/magic-mcp" -> "wonderwhy-er/DesktopCommanderMCP"
"21st-dev/magic-mcp" -> "CopilotKit/open-mcp-client" ["e"=1]
"21st-dev/magic-mcp" -> "browserbase/mcp-server-browserbase"
"21st-dev/magic-mcp" -> "nerding-io/n8n-nodes-mcp"
"21st-dev/magic-mcp" -> "anaisbetts/mcp-installer" ["e"=1]
"21st-dev/magic-mcp" -> "serafimcloud/21st" ["e"=1]
"primecai/diffusion-self-distillation" -> "dex-checker/dex-checker-solana-evm-wallets"
"primecai/diffusion-self-distillation" -> "Trylz/RestirFalcor"
"primecai/diffusion-self-distillation" -> "SupportTools/dr-syncer"
"primecai/diffusion-self-distillation" -> "Vorolski/pump-fun-ultimate"
"primecai/diffusion-self-distillation" -> "TomaAytakin/RedPanda"
"primecai/diffusion-self-distillation" -> "Trylz/Restir_CPP"
"primecai/diffusion-self-distillation" -> "gptBuster/gptBuster"
"primecai/diffusion-self-distillation" -> "balajikandavel/book-recommendation-engine"
"primecai/diffusion-self-distillation" -> "andreyykavv/RynexLLM"
"primecai/diffusion-self-distillation" -> "arttttt/SimpleMVI"
"primecai/diffusion-self-distillation" -> "Filiphasan/dotnet-minify-url"
"primecai/diffusion-self-distillation" -> "SolSndy/SolSandwich-Solana-Sandwich-bot"
"primecai/diffusion-self-distillation" -> "furudo-erika/awesome-postman-alternatives"
"primecai/diffusion-self-distillation" -> "MasterOfLogic1/UipathLibraries"
"primecai/diffusion-self-distillation" -> "Profichefsorn77/telegramdm-bot"
"coleam00/Archon" -> "coleam00/ottomator-agents"
"coleam00/Archon" -> "coleam00/local-ai-packaged"
"coleam00/Archon" -> "coleam00/ai-agents-masterclass"
"coleam00/Archon" -> "GoogleCloudPlatform/agent-starter-pack"
"coleam00/Archon" -> "upstash/context7"
"coleam00/Archon" -> "stackblitz-labs/bolt.diy"
"coleam00/Archon" -> "pydantic/pydantic-ai"
"coleam00/Archon" -> "openai/preparedness" ["e"=1]
"coleam00/Archon" -> "MervinPraison/PraisonAI"
"coleam00/Archon" -> "VRSEN/agency-swarm"
"coleam00/Archon" -> "getzep/graphiti"
"coleam00/Archon" -> "frdel/agent-zero"
"coleam00/Archon" -> "browser-use/web-ui"
"coleam00/Archon" -> "eyaltoledano/claude-task-master"
"coleam00/Archon" -> "RooVetGit/Roo-Code"
"gyoridavid/short-video-maker" -> "gyoridavid/ai_agents_az"
"vinay-gatech/stocks-insights-ai-agent" -> "multinear-demo/demo-bank-support-lc-py"
"vinay-gatech/stocks-insights-ai-agent" -> "langchain-ai/social-media-agent"
"vinay-gatech/stocks-insights-ai-agent" -> "virattt/ai-financial-agent"
"vinay-gatech/stocks-insights-ai-agent" -> "hello-nerdo/CodebaseToPrompt"
"vinay-gatech/stocks-insights-ai-agent" -> "hrithikkoduri/WebRover"
"vinay-gatech/stocks-insights-ai-agent" -> "zamalali/DeepGit"
"vinay-gatech/stocks-insights-ai-agent" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"vinay-gatech/stocks-insights-ai-agent" -> "CopilotKit/open-research-ANA"
"vinay-gatech/stocks-insights-ai-agent" -> "alonlavian/RAGent"
"vinay-gatech/stocks-insights-ai-agent" -> "bklieger-groq/stockbot-on-groq"
"vinay-gatech/stocks-insights-ai-agent" -> "CopilotKit/open-multi-agent-canvas"
"vinay-gatech/stocks-insights-ai-agent" -> "lgesuellip/langgraph-whatsapp-agent"
"vinay-gatech/stocks-insights-ai-agent" -> "lanzhihong6/stock-scanner" ["e"=1]
"AK391/ai-gradio" -> "reflex-dev/reflex-llm-examples"
"AK391/ai-gradio" -> "e2b-dev/open-computer-use"
"AK391/ai-gradio" -> "echohive42/AI-reads-books-page-by-page"
"AK391/ai-gradio" -> "trycua/acu"
"AK391/ai-gradio" -> "Doriandarko/deepseek-engineer"
"AK391/ai-gradio" -> "exa-labs/exa-mcp-server"
"AK391/ai-gradio" -> "jina-ai/node-DeepResearch"
"AK391/ai-gradio" -> "eastlondoner/cursor-tools"
"AK391/ai-gradio" -> "mshumer/OpenDeepResearcher"
"AK391/ai-gradio" -> "fal-ai-community/video-starter-kit"
"AK391/ai-gradio" -> "steel-dev/steel-browser"
"AK391/ai-gradio" -> "hrithikkoduri/WebRover"
"AK391/ai-gradio" -> "exa-labs/exa-deepseek-chat"
"AK391/ai-gradio" -> "video-db/Director"
"AK391/ai-gradio" -> "AgentOps-AI/AgentStack"
"Doriandarko/deepseek-engineer" -> "echohive42/AI-reads-books-page-by-page"
"Doriandarko/deepseek-engineer" -> "Doriandarko/RAT-retrieval-augmented-thinking"
"Doriandarko/deepseek-engineer" -> "Doriandarko/omni-engineer"
"Doriandarko/deepseek-engineer" -> "FoloUp/FoloUp"
"Doriandarko/deepseek-engineer" -> "AK391/ai-gradio"
"Doriandarko/deepseek-engineer" -> "osanseviero/InstantCoder"
"Doriandarko/deepseek-engineer" -> "codestoryai/aide"
"Doriandarko/deepseek-engineer" -> "exa-labs/exa-mcp-server"
"Doriandarko/deepseek-engineer" -> "browserbase/open-operator"
"Doriandarko/deepseek-engineer" -> "groq/groq-appgen"
"Doriandarko/deepseek-engineer" -> "e2b-dev/open-computer-use"
"Doriandarko/deepseek-engineer" -> "getAsterisk/deepclaude"
"Doriandarko/deepseek-engineer" -> "reflex-dev/reflex-llm-examples"
"Doriandarko/deepseek-engineer" -> "Doriandarko/o1-engineer"
"Doriandarko/deepseek-engineer" -> "steel-dev/steel-browser"
"eastlondoner/cursor-tools" -> "grapeot/devin.cursorrules"
"eastlondoner/cursor-tools" -> "eyaltoledano/claude-task-master"
"eastlondoner/cursor-tools" -> "AgentDeskAI/browser-tools-mcp"
"eastlondoner/cursor-tools" -> "mckaywrigley/mckays-app-template"
"eastlondoner/cursor-tools" -> "PatrickJS/awesome-cursorrules"
"eastlondoner/cursor-tools" -> "browserbase/stagehand"
"eastlondoner/cursor-tools" -> "sullyo/webapp-starter"
"eastlondoner/cursor-tools" -> "bmadcode/cursor-custom-agents-rules-generator"
"eastlondoner/cursor-tools" -> "yamadashy/repomix"
"eastlondoner/cursor-tools" -> "s-smits/agentic-cursorrules"
"eastlondoner/cursor-tools" -> "steel-dev/steel-browser"
"eastlondoner/cursor-tools" -> "pontusab/directories"
"eastlondoner/cursor-tools" -> "udecode/dotai"
"eastlondoner/cursor-tools" -> "getAsterisk/deepclaude"
"eastlondoner/cursor-tools" -> "serafimcloud/21st" ["e"=1]
"bytedance/deer-flow" -> "langmanus/langmanus"
"bytedance/deer-flow" -> "bytedance/flowgram.ai"
"bytedance/deer-flow" -> "refly-ai/refly"
"bytedance/deer-flow" -> "langmanus/langmanus-web"
"bytedance/deer-flow" -> "jina-ai/node-DeepResearch"
"bytedance/deer-flow" -> "kortix-ai/suna"
"bytedance/deer-flow" -> "zilliztech/deep-searcher"
"bytedance/deer-flow" -> "Darwin-lfl/langmanus"
"bytedance/deer-flow" -> "bytedance/UI-TARS-desktop"
"bytedance/deer-flow" -> "QwenLM/Qwen-Agent"
"bytedance/deer-flow" -> "bytedance/UI-TARS"
"bytedance/deer-flow" -> "LearningCircuit/local-deep-research"
"bytedance/deer-flow" -> "nickscamara/open-deep-research"
"bytedance/deer-flow" -> "langchain-ai/open_deep_research"
"bytedance/deer-flow" -> "u14app/deep-research" ["e"=1]
"coleam00/mcp-crawl4ai-rag" -> "coleam00/mcp-mem0"
"coleam00/mcp-crawl4ai-rag" -> "coleam00/local-ai-packaged"
"coleam00/mcp-crawl4ai-rag" -> "coleam00/ottomator-agents"
"magnitudedev/magnitude" -> "simstudioai/sim"
"magnitudedev/magnitude" -> "Operative-Sh/web-eval-agent"
"magnitudedev/magnitude" -> "trycua/cua"
"magnitudedev/magnitude" -> "BrowserMCP/mcp"
"magnitudedev/magnitude" -> "antiwork/shortest"
"magnitudedev/magnitude" -> "aaPanel/BillionMail" ["e"=1]
"magnitudedev/magnitude" -> "sauravpanda/BrowserAI"
"magnitudedev/magnitude" -> "cocoindex-io/cocoindex"
"magnitudedev/magnitude" -> "metorial/mcp-containers" ["e"=1]
"magnitudedev/magnitude" -> "colanode/colanode" ["e"=1]
"magnitudedev/magnitude" -> "humanlayer/12-factor-agents"
"magnitudedev/magnitude" -> "idosal/git-mcp"
"magnitudedev/magnitude" -> "vinceanalytics/vince" ["e"=1]
"magnitudedev/magnitude" -> "morphik-org/morphik-core"
"magnitudedev/magnitude" -> "bjesus/pipet" ["e"=1]
"Darwin-lfl/langmanus" -> "Dawanfe/langmanus-web"
"Darwin-lfl/langmanus" -> "langmanus/langmanus"
"Darwin-lfl/langmanus" -> "bytedance/deer-flow"
"Darwin-lfl/langmanus" -> "skyming/awesome-ai-agent"
"Darwin-lfl/langmanus" -> "langmanus/langmanus-web"
"Darwin-lfl/langmanus" -> "langchain-ai/open_deep_research"
"Darwin-lfl/langmanus" -> "langchain-ai/langgraph-supervisor-py"
"Darwin-lfl/langmanus" -> "Shybert-AI/OpenManus-WebUI"
"Darwin-lfl/langmanus" -> "langchain-ai/langchain-mcp-adapters"
"Darwin-lfl/langmanus" -> "OpenManus/OpenManus-RL" ["e"=1]
"Darwin-lfl/langmanus" -> "LeapLabTHU/cooragent" ["e"=1]
"Darwin-lfl/langmanus" -> "jokyun/langmanus"
"sentient-agi/OpenDeepSearch" -> "awslabs/mcp" ["e"=1]
"sentient-agi/OpenDeepSearch" -> "jina-ai/node-DeepResearch"
"sentient-agi/OpenDeepSearch" -> "LearningCircuit/local-deep-research"
"sentient-agi/OpenDeepSearch" -> "langchain-ai/open_deep_research"
"sentient-agi/OpenDeepSearch" -> "PeterGriffinJin/Search-R1" ["e"=1]
"sentient-agi/OpenDeepSearch" -> "simular-ai/Agent-S"
"sentient-agi/OpenDeepSearch" -> "zilliztech/deep-searcher"
"sentient-agi/OpenDeepSearch" -> "langchain-ai/local-deep-researcher"
"sentient-agi/OpenDeepSearch" -> "HKUDS/AutoAgent"
"sentient-agi/OpenDeepSearch" -> "nickscamara/open-deep-research"
"sentient-agi/OpenDeepSearch" -> "langmanus/langmanus"
"sentient-agi/OpenDeepSearch" -> "mshumer/OpenDeepResearcher"
"sentient-agi/OpenDeepSearch" -> "dzhng/deep-research"
"sentient-agi/OpenDeepSearch" -> "bytedance/deer-flow"
"sentient-agi/OpenDeepSearch" -> "getzep/graphiti"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "von-development/awesome-LangGraph"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "langchain-ai/agent-chat-ui"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "neural-maze/ava-whatsapp-agent-course"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "labdmitriy/llm-rag"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "CopilotKit/open-multi-agent-canvas"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "zamalali/DeepGit"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "mcp-use/mcp-use"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "rango-ramesh/advanced-chunker"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "multinear-demo/demo-bank-support-lc-py"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "lgesuellip/langgraph-whatsapp-agent"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "JoshuaC215/agent-service-toolkit"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "Deluxer/oliva"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "BragAI/bRAG-langchain"
"wassim249/fastapi-langgraph-agent-production-ready-template" -> "langchain-ai/langgraph-swarm-py"
"lanesky/thinking-gemini" -> "richards199999/Thinking-Claude"
"yzfly/Awesome-MCP-ZH" -> "ihmily/StreamCap" ["e"=1]
"yzfly/Awesome-MCP-ZH" -> "index-tts/index-tts" ["e"=1]
"yzfly/Awesome-MCP-ZH" -> "jingyaogong/minimind-v" ["e"=1]
"yzfly/Awesome-MCP-ZH" -> "liaokongVFX/MCP-Chinese-Getting-Started-Guide" ["e"=1]
"yzfly/Awesome-MCP-ZH" -> "xming521/WeClone" ["e"=1]
"yzfly/Awesome-MCP-ZH" -> "sjzar/chatlog" ["e"=1]
"yzfly/Awesome-MCP-ZH" -> "cyfyifanchen/one-person-company" ["e"=1]
"yzfly/Awesome-MCP-ZH" -> "xuanli199/weekly" ["e"=1]
"yzfly/Awesome-MCP-ZH" -> "ThinkInAIXYZ/deepchat"
"yzfly/Awesome-MCP-ZH" -> "krillinai/KrillinAI"
"yzfly/Awesome-MCP-ZH" -> "jamez-bondos/awesome-gpt4o-images"
"yzfly/Awesome-MCP-ZH" -> "bytedance/MegaTTS3" ["e"=1]
"yzfly/Awesome-MCP-ZH" -> "modstart-lib/aigcpanel" ["e"=1]
"yzfly/Awesome-MCP-ZH" -> "linshenkx/prompt-optimizer"
"yzfly/Awesome-MCP-ZH" -> "dontriskit/awesome-ai-system-prompts"
"browserable/browserable" -> "lmnr-ai/index"
"browserable/browserable" -> "btw-so/btw" ["e"=1]
"browserable/browserable" -> "mozilla-ai/any-agent"
"disler/always-on-ai-assistant" -> "disler/benchy"
"disler/always-on-ai-assistant" -> "disler/poc-realtime-ai-assistant"
"disler/always-on-ai-assistant" -> "disler/single-file-agents"
"disler/always-on-ai-assistant" -> "disler/marimo-prompt-library"
"disler/always-on-ai-assistant" -> "disler/anthropic-computer-use-bash-and-files"
"disler/always-on-ai-assistant" -> "KoljaB/RealtimeSTT" ["e"=1]
"disler/always-on-ai-assistant" -> "disler/personal-ai-starter-pack"
"disler/always-on-ai-assistant" -> "disler/just-prompt"
"disler/always-on-ai-assistant" -> "jgravelle/AutoGroq"
"disler/always-on-ai-assistant" -> "coleam00/ai-agents-masterclass"
"disler/always-on-ai-assistant" -> "disler/indydevtools"
"disler/always-on-ai-assistant" -> "disler/mermaid-js-ai-agent"
"disler/always-on-ai-assistant" -> "brainqub3/jar3d_meta_expert"
"disler/always-on-ai-assistant" -> "disler/multi-agent-postgres-data-analytics"
"disler/always-on-ai-assistant" -> "MervinPraison/PraisonAI"
"openai/openai-realtime-agents" -> "openai/openai-realtime-console"
"openai/openai-realtime-agents" -> "openai/openai-agents-python"
"openai/openai-realtime-agents" -> "openai/swarm"
"openai/openai-realtime-agents" -> "anthropics/anthropic-quickstarts"
"openai/openai-realtime-agents" -> "David-patrick-chuks/Instagram-AI-Agent"
"openai/openai-realtime-agents" -> "Dokploy/dokploy" ["e"=1]
"openai/openai-realtime-agents" -> "ericciarla/trendFinder"
"openai/openai-realtime-agents" -> "OpenBMB/MiniCPM-o" ["e"=1]
"openai/openai-realtime-agents" -> "langchain-ai/open-canvas"
"openai/openai-realtime-agents" -> "SamuelSchmidgall/AgentLaboratory"
"openai/openai-realtime-agents" -> "PathOfBuildingCommunity/PathOfBuilding-PoE2" ["e"=1]
"openai/openai-realtime-agents" -> "dzhng/deep-research"
"openai/openai-realtime-agents" -> "nickscamara/open-deep-research"
"openai/openai-realtime-agents" -> "awslabs/agent-squad"
"openai/openai-realtime-agents" -> "zaidmukaddam/scira"
"farzaa/freewrite" -> "UdaraJay/Pile"
"farzaa/freewrite" -> "raphaelsalaja/sylph" ["e"=1]
"farzaa/freewrite" -> "zaidmukaddam/scira-mcp-chat"
"farzaa/freewrite" -> "mainframecomputer/fullmoon-ios" ["e"=1]
"farzaa/freewrite" -> "jackfriks/expo-app-boilerplate"
"farzaa/freewrite" -> "Dhravya/apple-mcp"
"farzaa/freewrite" -> "ygwyg/diverce" ["e"=1]
"farzaa/freewrite" -> "mikelikesdesign/SwiftUI-experiments" ["e"=1]
"farzaa/freewrite" -> "ishaan1013/sandbox" ["e"=1]
"DataScienceUIBK/Rankify" -> "DataScienceUIBK/ArabicaQA"
"DataScienceUIBK/Rankify" -> "DataScienceUIBK/HintEval"
"volcengine/ai-app-lab" -> "langmanus/langmanus"
"volcengine/ai-app-lab" -> "volcengine/rtc-aigc-demo" ["e"=1]
"volcengine/ai-app-lab" -> "refly-ai/refly"
"volcengine/ai-app-lab" -> "cloudwego/eino" ["e"=1]
"volcengine/ai-app-lab" -> "bytedance/deer-flow"
"volcengine/ai-app-lab" -> "HumanAIGC-Engineering/OpenAvatarChat" ["e"=1]
"volcengine/ai-app-lab" -> "agentuniverse-ai/agentUniverse" ["e"=1]
"volcengine/ai-app-lab" -> "wwbin2017/bailing" ["e"=1]
"volcengine/ai-app-lab" -> "bytedance/flowgram.ai"
"volcengine/ai-app-lab" -> "stepfun-ai/Step-Audio" ["e"=1]
"volcengine/ai-app-lab" -> "LLM-Red-Team/jimeng-free-api" ["e"=1]
"volcengine/ai-app-lab" -> "CosmosShadow/gptpdf"
"volcengine/ai-app-lab" -> "modstart-lib/aigcpanel" ["e"=1]
"volcengine/ai-app-lab" -> "chatmcp/mcp-server-chatsum" ["e"=1]
"volcengine/ai-app-lab" -> "getAsterisk/deepclaude"
"langchain-ai/agent-chat-ui" -> "langchain-ai/langgraphjs-gen-ui-examples"
"langchain-ai/agent-chat-ui" -> "langchain-ai/agent-inbox"
"langchain-ai/agent-chat-ui" -> "von-development/awesome-LangGraph"
"langchain-ai/agent-chat-ui" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"langchain-ai/agent-chat-ui" -> "langchain-ai/langgraph-supervisor-py"
"langchain-ai/agent-chat-ui" -> "CopilotKit/open-multi-agent-canvas"
"langchain-ai/agent-chat-ui" -> "langchain-ai/langmem"
"langchain-ai/agent-chat-ui" -> "langchain-ai/social-media-agent"
"langchain-ai/agent-chat-ui" -> "langchain-ai/langgraph-swarm-py"
"langchain-ai/agent-chat-ui" -> "langchain-ai/langchain-mcp-adapters"
"langchain-ai/agent-chat-ui" -> "langchain-ai/langgraph-reflection"
"langchain-ai/agent-chat-ui" -> "bracesproul/gen-ui-computer-use"
"langchain-ai/agent-chat-ui" -> "esxr/langgraph-mcp"
"langchain-ai/agent-chat-ui" -> "langchain-ai/langgraph-codeact"
"langchain-ai/agent-chat-ui" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"langmanus/langmanus-web" -> "langmanus/langmanus"
"langmanus/langmanus-web" -> "bytedance/deer-flow"
"langmanus/langmanus-web" -> "YunQiAI/OpenManusWeb"
"langmanus/langmanus-web" -> "Darwin-lfl/langmanus"
"langmanus/langmanus-web" -> "Shybert-AI/OpenManus-WebUI"
"langmanus/langmanus-web" -> "TheAgenticAI/CortexON"
"langmanus/langmanus-web" -> "ZongqianLi/ReasonGraph" ["e"=1]
"langmanus/langmanus-web" -> "CopilotKit/open-mcp-client" ["e"=1]
"langmanus/langmanus-web" -> "agent-network-protocol/AgentNetworkProtocol" ["e"=1]
"specstoryai/getspecstory" -> "harishsg993010/LLM-Reasoner"
"specstoryai/getspecstory" -> "sshtunnelvision/MCP-LOGO-GEN"
"specstoryai/getspecstory" -> "Dicklesworthstone/your-source-to-prompt.html"
"specstoryai/getspecstory" -> "chrisboden/knowledgesync"
"specstoryai/getspecstory" -> "panda-sandeep/epigram"
"specstoryai/getspecstory" -> "RayFernando1337/llm-cursor-rules"
"specstoryai/getspecstory" -> "inferablehq/inferable"
"specstoryai/getspecstory" -> "context-labs/autodelve"
"specstoryai/getspecstory" -> "thomas-pedersen/cursor-chat-browser"
"Emissary-Tech/legit-rag" -> "ajac-zero/example-rag-app"
"Emissary-Tech/legit-rag" -> "MaxHastings/Kolo" ["e"=1]
"Emissary-Tech/legit-rag" -> "Andrew-Jang/RAGHub"
"zcaceres/markdownify-mcp" -> "tianyaxiang/neurapress" ["e"=1]
"zcaceres/markdownify-mcp" -> "mendableai/firecrawl-mcp-server"
"zcaceres/markdownify-mcp" -> "reading-plus-ai/mcp-server-data-exploration" ["e"=1]
"zcaceres/markdownify-mcp" -> "appcypher/awesome-mcp-servers"
"zcaceres/markdownify-mcp" -> "browserbase/mcp-server-browserbase"
"zcaceres/markdownify-mcp" -> "basicmachines-co/basic-memory" ["e"=1]
"zcaceres/markdownify-mcp" -> "21st-dev/magic-mcp"
"zcaceres/markdownify-mcp" -> "blazickjp/arxiv-mcp-server" ["e"=1]
"zcaceres/markdownify-mcp" -> "haris-musa/excel-mcp-server" ["e"=1]
"zcaceres/markdownify-mcp" -> "vivekVells/mcp-pandoc" ["e"=1]
"zcaceres/markdownify-mcp" -> "dmayboroda/minima"
"zcaceres/markdownify-mcp" -> "zcaceres/fetch-mcp" ["e"=1]
"zcaceres/markdownify-mcp" -> "pskill9/website-downloader" ["e"=1]
"zcaceres/markdownify-mcp" -> "GitHamza0206/simba"
"zcaceres/markdownify-mcp" -> "smithery-ai/mcp-obsidian" ["e"=1]
"ekmigasari/wfcOS" -> "Krish120003/gitfaster"
"ekmigasari/wfcOS" -> "crafter-station/text0"
"google-gemini/live-api-web-console" -> "google-gemini/starter-applets"
"google-gemini/live-api-web-console" -> "openai/openai-realtime-console"
"google-gemini/live-api-web-console" -> "googleapis/python-genai"
"google-gemini/live-api-web-console" -> "google-gemini/cookbook"
"google-gemini/live-api-web-console" -> "pipecat-ai/gemini-multimodal-live-demo"
"google-gemini/live-api-web-console" -> "pipecat-ai/pipecat"
"google-gemini/live-api-web-console" -> "langchain-ai/open-canvas"
"google-gemini/live-api-web-console" -> "openai/openai-realtime-agents"
"google-gemini/live-api-web-console" -> "MervinPraison/PraisonAI"
"google-gemini/live-api-web-console" -> "browserbase/open-operator"
"google-gemini/live-api-web-console" -> "AK391/ai-gradio"
"google-gemini/live-api-web-console" -> "ViaAnthroposBenevolentia/gemini-2-live-api-demo" ["e"=1]
"google-gemini/live-api-web-console" -> "heiko-hotz/gemini-multimodal-live-dev-guide" ["e"=1]
"google-gemini/live-api-web-console" -> "google-gemini/deprecated-generative-ai-js"
"google-gemini/live-api-web-console" -> "saharmor/gemini-multimodal-playground"
"alexander-zuev/supabase-mcp-server" -> "supabase-community/supabase-mcp"
"alexander-zuev/supabase-mcp-server" -> "21st-dev/magic-mcp"
"alexander-zuev/supabase-mcp-server" -> "ckreiling/mcp-server-docker" ["e"=1]
"alexander-zuev/supabase-mcp-server" -> "DaInfernalCoder/perplexity-mcp" ["e"=1]
"alexander-zuev/supabase-mcp-server" -> "exa-labs/exa-mcp-server"
"alexander-zuev/supabase-mcp-server" -> "QuantGeekDev/docker-mcp" ["e"=1]
"alexander-zuev/supabase-mcp-server" -> "mendableai/firecrawl-mcp-server"
"alexander-zuev/supabase-mcp-server" -> "browserbase/mcp-server-browserbase"
"alexander-zuev/supabase-mcp-server" -> "supercurses/powerpoint"
"alexander-zuev/supabase-mcp-server" -> "graphlit/graphlit-mcp-server" ["e"=1]
"alexander-zuev/supabase-mcp-server" -> "zcaceres/markdownify-mcp"
"alexander-zuev/supabase-mcp-server" -> "Dhravya/apple-mcp"
"alexander-zuev/supabase-mcp-server" -> "GreatScottyMac/RooFlow" ["e"=1]
"alexander-zuev/supabase-mcp-server" -> "AgentDeskAI/browser-tools-mcp"
"alexander-zuev/supabase-mcp-server" -> "ppl-ai/modelcontextprotocol"
"MotiaDev/motia" -> "HKUDS/AutoAgent"
"MotiaDev/motia" -> "simstudioai/sim"
"MotiaDev/motia" -> "mcp-use/mcp-use"
"MotiaDev/motia" -> "MotiaDev/motia-examples"
"MotiaDev/motia" -> "langwatch/langwatch"
"MotiaDev/motia" -> "simular-ai/Agent-S"
"MotiaDev/motia" -> "AgentOps-AI/AgentStack"
"MotiaDev/motia" -> "tadata-org/fastapi_mcp"
"MotiaDev/motia" -> "ymichael/open-codex"
"MotiaDev/motia" -> "VoltAgent/voltagent"
"MotiaDev/motia" -> "PySpur-Dev/pyspur"
"MotiaDev/motia" -> "awslabs/agent-squad"
"MotiaDev/motia" -> "nanobrowser/nanobrowser"
"MotiaDev/motia" -> "egoist/sitefetch"
"MotiaDev/motia" -> "DannyMac180/meta-agent"
"elevenlabs/elevenlabs-mcp" -> "supabase-community/supabase-mcp"
"elevenlabs/elevenlabs-mcp" -> "browserbase/mcp-server-browserbase"
"elevenlabs/elevenlabs-mcp" -> "mendableai/firecrawl-mcp-server"
"elevenlabs/elevenlabs-mcp" -> "exa-labs/exa-mcp-server"
"elevenlabs/elevenlabs-mcp" -> "lharries/whatsapp-mcp"
"elevenlabs/elevenlabs-mcp" -> "ckreiling/mcp-server-docker" ["e"=1]
"elevenlabs/elevenlabs-mcp" -> "BrowserMCP/mcp"
"elevenlabs/elevenlabs-mcp" -> "MiniMax-AI/MiniMax-MCP" ["e"=1]
"elevenlabs/elevenlabs-mcp" -> "basicmachines-co/basic-memory" ["e"=1]
"elder-plinius/CL4R1T4S" -> "elder-plinius/L1B3RT4S"
"elder-plinius/CL4R1T4S" -> "asgeirtj/system_prompts_leaks"
"elder-plinius/CL4R1T4S" -> "eyaltoledano/claude-task-master"
"elder-plinius/CL4R1T4S" -> "upstash/context7"
"elder-plinius/CL4R1T4S" -> "jujumilk3/leaked-system-prompts"
"elder-plinius/CL4R1T4S" -> "x1xhlol/system-prompts-and-models-of-ai-tools"
"elder-plinius/CL4R1T4S" -> "ymichael/open-codex"
"elder-plinius/CL4R1T4S" -> "wonderwhy-er/DesktopCommanderMCP"
"elder-plinius/CL4R1T4S" -> "simular-ai/Agent-S"
"elder-plinius/CL4R1T4S" -> "exa-labs/exa-mcp-server"
"elder-plinius/CL4R1T4S" -> "kortix-ai/suna"
"elder-plinius/CL4R1T4S" -> "browserbase/stagehand"
"elder-plinius/CL4R1T4S" -> "bmadcode/cursor-custom-agents-rules-generator"
"elder-plinius/CL4R1T4S" -> "mckaywrigley/mckays-app-template"
"elder-plinius/CL4R1T4S" -> "verazuo/jailbreak_llms" ["e"=1]
"asgeirtj/system_prompts_leaks" -> "huggingface/nanoVLM" ["e"=1]
"asgeirtj/system_prompts_leaks" -> "dontriskit/awesome-ai-system-prompts"
"asgeirtj/system_prompts_leaks" -> "elder-plinius/CL4R1T4S"
"asgeirtj/system_prompts_leaks" -> "jujumilk3/leaked-system-prompts"
"asgeirtj/system_prompts_leaks" -> "KoljaB/RealtimeVoiceChat"
"asgeirtj/system_prompts_leaks" -> "refly-ai/refly"
"asgeirtj/system_prompts_leaks" -> "sentient-agi/OpenDeepSearch"
"asgeirtj/system_prompts_leaks" -> "humanlayer/12-factor-agents"
"asgeirtj/system_prompts_leaks" -> "LearningCircuit/local-deep-research"
"asgeirtj/system_prompts_leaks" -> "axtrur/awesome-ai-system-prompts"
"asgeirtj/system_prompts_leaks" -> "trycua/cua"
"asgeirtj/system_prompts_leaks" -> "kortix-ai/suna"
"asgeirtj/system_prompts_leaks" -> "rybbit-io/rybbit" ["e"=1]
"asgeirtj/system_prompts_leaks" -> "OpenHealthForAll/open-health"
"asgeirtj/system_prompts_leaks" -> "MODSetter/SurfSense"
"virattt/ai-financial-agent" -> "virattt/financial-agent-ui"
"virattt/ai-financial-agent" -> "vinay-gatech/stocks-insights-ai-agent"
"virattt/ai-financial-agent" -> "langchain-ai/social-media-agent"
"virattt/ai-financial-agent" -> "exa-labs/exa-deepseek-chat"
"virattt/ai-financial-agent" -> "e2b-dev/open-computer-use"
"virattt/ai-financial-agent" -> "virattt/financial-datasets" ["e"=1]
"virattt/ai-financial-agent" -> "virattt/financial-agent" ["e"=1]
"virattt/ai-financial-agent" -> "bklieger-groq/stockbot-on-groq"
"virattt/ai-financial-agent" -> "echohive42/AI-reads-books-page-by-page"
"virattt/ai-financial-agent" -> "openai/openai-structured-outputs-samples"
"virattt/ai-financial-agent" -> "virattt/ai-hedge-fund"
"virattt/ai-financial-agent" -> "business-science/ai-data-science-team"
"virattt/ai-financial-agent" -> "assistant-ui/assistant-ui-stockbroker"
"virattt/ai-financial-agent" -> "kristianfreeman/aiwriter"
"virattt/ai-financial-agent" -> "hackingthemarkets/interactive-brokers-web-api" ["e"=1]
"btahir/open-deep-research" -> "jina-ai/node-DeepResearch"
"btahir/open-deep-research" -> "nickscamara/open-deep-research"
"btahir/open-deep-research" -> "mshumer/OpenDeepResearcher"
"btahir/open-deep-research" -> "langchain-ai/open_deep_research"
"btahir/open-deep-research" -> "zilliztech/deep-searcher"
"btahir/open-deep-research" -> "LearningCircuit/local-deep-research"
"btahir/open-deep-research" -> "fdarkaou/open-deep-research"
"btahir/open-deep-research" -> "dzhng/deep-research"
"btahir/open-deep-research" -> "langchain-ai/local-deep-researcher"
"btahir/open-deep-research" -> "AnotiaWang/deep-research-web-ui" ["e"=1]
"btahir/open-deep-research" -> "HarshJ23/Deeper-Seeker" ["e"=1]
"btahir/open-deep-research" -> "HKUDS/Auto-Deep-Research" ["e"=1]
"btahir/open-deep-research" -> "browserbase/open-operator"
"btahir/open-deep-research" -> "zaidmukaddam/scira"
"btahir/open-deep-research" -> "ammaarreshi/Gemini-Search" ["e"=1]
"sahibzada-allahyar/YC-Killer" -> "melihsoft/adamant"
"sahibzada-allahyar/YC-Killer" -> "SupportTools/dr-syncer"
"sahibzada-allahyar/YC-Killer" -> "Trylz/Restir_CPP"
"coleam00/local-ai-packaged" -> "coleam00/ottomator-agents"
"coleam00/local-ai-packaged" -> "coleam00/ai-agents-masterclass"
"coleam00/local-ai-packaged" -> "coleam00/Archon"
"coleam00/local-ai-packaged" -> "coleam00/mcp-mem0"
"coleam00/local-ai-packaged" -> "coleam00/mcp-crawl4ai-rag"
"coleam00/local-ai-packaged" -> "nerding-io/n8n-nodes-mcp"
"coleam00/local-ai-packaged" -> "coleam00/supabase-mcp"
"coleam00/local-ai-packaged" -> "restyler/awesome-n8n"
"coleam00/local-ai-packaged" -> "coleam00/ollama-swarm"
"coleam00/local-ai-packaged" -> "n8n-io/self-hosted-ai-starter-kit"
"coleam00/local-ai-packaged" -> "daytonaio/ai-enablement-stack"
"coleam00/local-ai-packaged" -> "wonderwhy-er/DesktopCommanderMCP"
"coleam00/local-ai-packaged" -> "upstash/context7"
"coleam00/local-ai-packaged" -> "coleam00/pydantic-ai-github-agent"
"coleam00/local-ai-packaged" -> "stephengpope/no-code-architects-toolkit"
"context-labs/autodelve" -> "sshtunnelvision/MCP-LOGO-GEN"
"labdmitriy/llm-rag" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"labdmitriy/llm-rag" -> "alonlavian/RAGent"
"labdmitriy/llm-rag" -> "neural-maze/ava-whatsapp-agent-course"
"labdmitriy/llm-rag" -> "von-development/awesome-LangGraph"
"labdmitriy/llm-rag" -> "lgesuellip/langgraph-whatsapp-agent"
"fal-ai-community/video-starter-kit" -> "video-db/Director"
"fal-ai-community/video-starter-kit" -> "AK391/ai-gradio"
"fal-ai-community/video-starter-kit" -> "simstudioai/sim"
"fal-ai-community/video-starter-kit" -> "HITsz-TMG/FilmAgent" ["e"=1]
"fal-ai-community/video-starter-kit" -> "Nutlope/loras-dev"
"fal-ai-community/video-starter-kit" -> "langchain-ai/social-media-agent"
"fal-ai-community/video-starter-kit" -> "synth-inc/onit"
"fal-ai-community/video-starter-kit" -> "redotvideo/revideo" ["e"=1]
"fal-ai-community/video-starter-kit" -> "Nutlope/logocreator" ["e"=1]
"fal-ai-community/video-starter-kit" -> "steel-dev/steel-browser"
"fal-ai-community/video-starter-kit" -> "exa-labs/exa-deepseek-chat"
"fal-ai-community/video-starter-kit" -> "browserbase/open-operator"
"fal-ai-community/video-starter-kit" -> "David-patrick-chuks/Instagram-AI-Agent"
"fal-ai-community/video-starter-kit" -> "refly-ai/refly"
"fal-ai-community/video-starter-kit" -> "trycua/acu"
"The-Pocket-World/Pocket-Flow-Framework" -> "SupportTools/dr-syncer"
"The-Pocket-World/Pocket-Flow-Framework" -> "spectrumwebco/kled.io"
"The-Pocket-World/Pocket-Flow-Framework" -> "Trylz/Restir_CPP"
"The-Pocket-World/Pocket-Flow-Framework" -> "MasterOfLogic1/UipathLibraries"
"The-Pocket-World/Pocket-Flow-Framework" -> "RichartDedekind/NollarsVPN"
"The-Pocket-World/Pocket-Flow-Framework" -> "muraliavarma/vue-slot-table"
"The-Pocket-World/Pocket-Flow-Framework" -> "HMUNACHI/super-lazy-autograd"
"The-Pocket-World/Pocket-Flow-Framework" -> "Chirag-Main1/ChatBot_perosnal"
"The-Pocket-World/Pocket-Flow-Framework" -> "furudo-erika/awesome-postman-alternatives"
"The-Pocket-World/Pocket-Flow-Framework" -> "andreyykavv/RynexLLM"
"The-Pocket-World/Pocket-Flow-Framework" -> "armorwallet/armor-crypto-mcp"
"The-Pocket-World/Pocket-Flow-Framework" -> "Webinix-dev/webinix"
"The-Pocket-World/Pocket-Flow-Framework" -> "gptBuster/gptBuster"
"The-Pocket-World/Pocket-Flow-Framework" -> "MacroSurfer/MacroSurferFunctions"
"The-Pocket-World/Pocket-Flow-Framework" -> "wyattm14/chatbot-template"
"stuzero/pg-mcp-server" -> "stuzero/pg-mcp"
"groq/groq-appgen" -> "osanseviero/InstantCoder"
"groq/groq-appgen" -> "jgravelle/pocketgroq"
"groq/groq-appgen" -> "Doriandarko/deepseek-engineer"
"groq/groq-appgen" -> "sentient-engineering/agent-q"
"groq/groq-appgen" -> "codestoryai/aide"
"groq/groq-appgen" -> "zainulabedeen123/best-saas-kit"
"groq/groq-appgen" -> "browserbase/open-operator"
"groq/groq-appgen" -> "groq/groq-api-cookbook"
"groq/groq-appgen" -> "yoheinakajima/ditto"
"groq/groq-appgen" -> "bklieger-groq/mathtutor-on-groq"
"groq/groq-appgen" -> "e2b-dev/fragments"
"groq/groq-appgen" -> "srcbookdev/srcbook"
"groq/groq-appgen" -> "Doriandarko/gemini-ui-to-code"
"groq/groq-appgen" -> "mendableai/llmstxt-generator"
"groq/groq-appgen" -> "joshpocock/Stride-AI-Agents"
"langchain-ai/executive-ai-assistant" -> "langchain-ai/social-media-agent"
"langchain-ai/executive-ai-assistant" -> "campsite/campsite" ["e"=1]
"langchain-ai/executive-ai-assistant" -> "langchain-ai/agent-inbox"
"langchain-ai/executive-ai-assistant" -> "langchain-ai/open-canvas"
"langchain-ai/executive-ai-assistant" -> "langchain-ai/open_deep_research"
"langchain-ai/executive-ai-assistant" -> "neural-maze/ava-whatsapp-agent-course"
"langchain-ai/executive-ai-assistant" -> "hrithikkoduri/WebRover"
"langchain-ai/executive-ai-assistant" -> "openai/openai-realtime-agents"
"langchain-ai/executive-ai-assistant" -> "langchain-ai/company-researcher"
"langchain-ai/executive-ai-assistant" -> "langchain-ai/agent-chat-ui"
"langchain-ai/executive-ai-assistant" -> "JoshuaC215/agent-service-toolkit"
"langchain-ai/executive-ai-assistant" -> "muratcankoylan/AI-Investigator"
"langchain-ai/executive-ai-assistant" -> "langchain-ai/local-deep-researcher"
"langchain-ai/executive-ai-assistant" -> "eastlondoner/cursor-tools"
"langchain-ai/executive-ai-assistant" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"clchinkc/streamlit-editor" -> "mbakgun/dspy-examples"
"ThinkInAIXYZ/deepchat" -> "AsyncFuncAI/deepwiki-open"
"ThinkInAIXYZ/deepchat" -> "nanbingxyz/5ire" ["e"=1]
"ThinkInAIXYZ/deepchat" -> "refly-ai/refly"
"ThinkInAIXYZ/deepchat" -> "CherryHQ/cherry-studio"
"ThinkInAIXYZ/deepchat" -> "u14app/deep-research" ["e"=1]
"ThinkInAIXYZ/deepchat" -> "tianyaxiang/neurapress" ["e"=1]
"ThinkInAIXYZ/deepchat" -> "HiveNexus/HiveChat" ["e"=1]
"ThinkInAIXYZ/deepchat" -> "bytedance/deer-flow"
"ThinkInAIXYZ/deepchat" -> "ThinkInAIXYZ/go-mcp"
"ThinkInAIXYZ/deepchat" -> "daodao97/chatmcp" ["e"=1]
"ThinkInAIXYZ/deepchat" -> "yzfly/Awesome-MCP-ZH"
"ThinkInAIXYZ/deepchat" -> "linshenkx/prompt-optimizer"
"ThinkInAIXYZ/deepchat" -> "AnotiaWang/deep-research-web-ui" ["e"=1]
"ThinkInAIXYZ/deepchat" -> "MartialBE/one-hub" ["e"=1]
"ThinkInAIXYZ/deepchat" -> "rag-web-ui/rag-web-ui" ["e"=1]
"sauravpanda/BrowserAI" -> "Cloud-Code-AI/AkiraDocs"
"sauravpanda/BrowserAI" -> "Cloud-Code-AI/kaizen"
"sauravpanda/BrowserAI" -> "lugenx/lab" ["e"=1]
"sauravpanda/BrowserAI" -> "steel-dev/steel-browser"
"sauravpanda/BrowserAI" -> "magnitudedev/magnitude"
"sauravpanda/BrowserAI" -> "trycua/acu"
"sauravpanda/BrowserAI" -> "developersdigest/llm-api-engine"
"sauravpanda/BrowserAI" -> "harishsg993010/LLM-Reasoner"
"sauravpanda/BrowserAI" -> "browserable/browserable"
"sauravpanda/BrowserAI" -> "Cloud-Code-AI/cloudstate"
"sauravpanda/BrowserAI" -> "superglue-ai/superglue" ["e"=1]
"sauravpanda/BrowserAI" -> "andrewromanenco/cocommit" ["e"=1]
"sauravpanda/BrowserAI" -> "ssoready/ssoready" ["e"=1]
"sauravpanda/BrowserAI" -> "AmberSahdev/Open-Interface"
"sauravpanda/BrowserAI" -> "supavec/supavec"
"NVIDIA/AIQToolkit" -> "octotools/octotools"
"NVIDIA/AIQToolkit" -> "NVIDIA/AIQToolkit-UI"
"NVIDIA/AIQToolkit" -> "NVIDIA/nv-ingest"
"NVIDIA/AIQToolkit" -> "NVIDIA/GenerativeAIExamples"
"NVIDIA/AIQToolkit" -> "rango-ramesh/advanced-chunker"
"NVIDIA/AIQToolkit" -> "von-development/awesome-LangGraph"
"NVIDIA/AIQToolkit" -> "plurai-ai/intellagent"
"NVIDIA/AIQToolkit" -> "HKUDS/AutoAgent"
"NVIDIA/AIQToolkit" -> "mcp-use/mcp-use"
"NVIDIA/AIQToolkit" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"NVIDIA/AIQToolkit" -> "googleapis/genai-toolbox"
"NVIDIA/AIQToolkit" -> "neural-maze/ava-whatsapp-agent-course"
"NVIDIA/AIQToolkit" -> "philschmid/gemini-samples"
"NVIDIA/AIQToolkit" -> "tadata-org/fastapi_mcp"
"NVIDIA/AIQToolkit" -> "microsoft/Trace"
"hhhuang/CAG" -> "OSU-NLP-Group/HippoRAG"
"hhhuang/CAG" -> "sunnynexus/Search-o1" ["e"=1]
"hhhuang/CAG" -> "IntelLabs/RAG-FiT"
"hhhuang/CAG" -> "OpenSPG/KAG"
"hhhuang/CAG" -> "NirDiamant/Controllable-RAG-Agent"
"hhhuang/CAG" -> "Thytu/Agentarium"
"hhhuang/CAG" -> "tjmlabs/ColiVara"
"hhhuang/CAG" -> "run-llama/llama_deploy"
"hhhuang/CAG" -> "AIDC-AI/Marco-o1" ["e"=1]
"hhhuang/CAG" -> "KruxAI/ragbuilder"
"hhhuang/CAG" -> "facebookresearch/large_concept_model" ["e"=1]
"hhhuang/CAG" -> "athina-ai/rag-cookbooks"
"hhhuang/CAG" -> "asinghcsu/AgenticRAG-Survey"
"hhhuang/CAG" -> "Marker-Inc-Korea/AutoRAG"
"hhhuang/CAG" -> "MotiaDev/motia"
"Dicklesworthstone/your-source-to-prompt.html" -> "harishsg993010/LLM-Reasoner"
"Dicklesworthstone/your-source-to-prompt.html" -> "regenrek/codefetch"
"Dicklesworthstone/your-source-to-prompt.html" -> "specstoryai/getspecstory"
"Dicklesworthstone/your-source-to-prompt.html" -> "panda-sandeep/epigram"
"Dicklesworthstone/your-source-to-prompt.html" -> "egoist/sitefetch"
"Dicklesworthstone/your-source-to-prompt.html" -> "sentient-engineering/jobber"
"Dicklesworthstone/your-source-to-prompt.html" -> "DannyMac180/meta-agent"
"Dicklesworthstone/your-source-to-prompt.html" -> "simonw/files-to-prompt"
"Dicklesworthstone/your-source-to-prompt.html" -> "swark-io/swark"
"Dicklesworthstone/your-source-to-prompt.html" -> "farshed/sage" ["e"=1]
"Dicklesworthstone/your-source-to-prompt.html" -> "psbarrales/context-code"
"Dicklesworthstone/your-source-to-prompt.html" -> "video-db/Director"
"zamalali/DeepGit" -> "von-development/awesome-LangGraph"
"zamalali/DeepGit" -> "Deluxer/oliva"
"zamalali/DeepGit" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"zamalali/DeepGit" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"zamalali/DeepGit" -> "jolovicdev/shandu"
"zamalali/DeepGit" -> "neural-maze/ava-whatsapp-agent-course"
"zamalali/DeepGit" -> "zamalali/InboxHero"
"zamalali/DeepGit" -> "wassim249/YT-Navigator"
"zamalali/DeepGit" -> "rango-ramesh/advanced-chunker"
"zamalali/DeepGit" -> "langchain-ai/llmanager"
"zamalali/DeepGit" -> "alonlavian/RAGent"
"zamalali/DeepGit" -> "Clevrr-AI/Clevrr-Computer"
"zamalali/DeepGit" -> "NarimanN2/ollama-playground"
"zamalali/DeepGit" -> "CopilotKit/open-multi-agent-canvas"
"zamalali/DeepGit" -> "CopilotKit/open-research-ANA"
"bklieger-groq/mathtutor-on-groq" -> "8090-inc/xrx-core"
"TilmanGriesel/chipper" -> "leettools-dev/leettools"
"TilmanGriesel/chipper" -> "suncloudsmoon/TextCraft"
"TilmanGriesel/chipper" -> "tjmlabs/ColiVara"
"TilmanGriesel/chipper" -> "itsPreto/tangent" ["e"=1]
"TilmanGriesel/chipper" -> "CNTRLAI/Notate"
"TilmanGriesel/chipper" -> "hrithikkoduri/WebRover"
"supavec/supavec" -> "taishikato/chatsage"
"supavec/supavec" -> "trycompai/comp" ["e"=1]
"supavec/supavec" -> "harishsg993010/LLM-Reasoner"
"supavec/supavec" -> "egoist/sitefetch"
"supavec/supavec" -> "supavec/supa-deep-research"
"supavec/supavec" -> "xynehq/xyne"
"supavec/supavec" -> "instructa/viber3d"
"supavec/supavec" -> "specstoryai/getspecstory"
"trycua/acu" -> "e2b-dev/open-computer-use"
"trycua/acu" -> "harishsg993010/LLM-Reasoner"
"trycua/acu" -> "AK391/ai-gradio"
"trycua/acu" -> "showlab/computer_use_ootb" ["e"=1]
"trycua/acu" -> "video-db/Director"
"trycua/acu" -> "steel-dev/steel-browser"
"trycua/acu" -> "ranpox/awesome-computer-use" ["e"=1]
"trycua/acu" -> "lmnr-ai/index"
"trycua/acu" -> "simular-ai/Agent-S"
"trycua/acu" -> "AgentOps-AI/AgentStack"
"trycua/acu" -> "AmberSahdev/Open-Interface"
"trycua/acu" -> "langchain-ai/agent-inbox"
"trycua/acu" -> "hrithikkoduri/WebRover"
"trycua/acu" -> "CatchTheTornado/text-extract-api"
"trycua/acu" -> "sauravpanda/BrowserAI"
"langchain-ai/langgraph-supervisor-py" -> "langchain-ai/langgraph-swarm-py"
"langchain-ai/langgraph-supervisor-py" -> "hinthornw/trustcall"
"langchain-ai/langgraph-supervisor-py" -> "langchain-ai/langmem"
"langchain-ai/langgraph-supervisor-py" -> "langchain-ai/langchain-mcp-adapters"
"langchain-ai/langgraph-supervisor-py" -> "langchain-ai/agent-chat-ui"
"langchain-ai/langgraph-supervisor-py" -> "langchain-ai/langgraph-bigtool"
"langchain-ai/langgraph-supervisor-py" -> "von-development/awesome-LangGraph"
"langchain-ai/langgraph-supervisor-py" -> "langchain-ai/langgraph-codeact"
"langchain-ai/langgraph-supervisor-py" -> "hrithikkoduri/WebRover"
"langchain-ai/langgraph-supervisor-py" -> "langchain-ai/agent-inbox"
"langchain-ai/langgraph-supervisor-py" -> "langchain-ai/langgraph-reflection"
"langchain-ai/langgraph-supervisor-py" -> "langchain-ai/openevals"
"langchain-ai/langgraph-supervisor-py" -> "langchain-ai/open_deep_research"
"langchain-ai/langgraph-supervisor-py" -> "esxr/langgraph-mcp"
"langchain-ai/langgraph-supervisor-py" -> "JoshuaC215/agent-service-toolkit"
"wassim249/YT-Navigator" -> "CopilotKit/open-multi-agent-canvas"
"wassim249/YT-Navigator" -> "Deluxer/oliva"
"wassim249/YT-Navigator" -> "langchain-ai/langgraphjs-gen-ui-examples"
"wassim249/YT-Navigator" -> "von-development/awesome-LangGraph"
"wassim249/YT-Navigator" -> "zamalali/DeepGit"
"wassim249/YT-Navigator" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"wassim249/YT-Navigator" -> "hrithikkoduri/WebRover"
"wassim249/YT-Navigator" -> "sofi444/realtime-transcription-fastrtc"
"wassim249/YT-Navigator" -> "rango-ramesh/advanced-chunker"
"wassim249/YT-Navigator" -> "neural-maze/ava-whatsapp-agent-course"
"wassim249/YT-Navigator" -> "neural-maze/rick-llm"
"wassim249/YT-Navigator" -> "jolovicdev/shandu"
"wassim249/YT-Navigator" -> "zamalali/InboxHero"
"digbenjamins/SolanaTokenSniper" -> "digbenjamins/TwitterTracker"
"digbenjamins/SolanaTokenSniper" -> "digbenjamins/DexBoostHunter"
"digbenjamins/SolanaTokenSniper" -> "digbenjamins/SolanaWalletTracker"
"enescingoz/awesome-n8n-templates" -> "conor-is-my-name/n8n-autoscaling"
"enescingoz/awesome-n8n-templates" -> "Xavi1995/n8n_execution_report"
"enescingoz/awesome-n8n-templates" -> "jackvandervall/Agentic-Archive"
"enescingoz/awesome-n8n-templates" -> "Marvomatic/n8n-templates"
"tacticlaunch/cursor-bank" -> "tacticlaunch/mcp-linear"
"harishsg993010/HawkinsDB" -> "harishsg993010/HawkinsAgent"
"harishsg993010/HawkinsDB" -> "harishsg993010/HawkinsRAG"
"harishsg993010/HawkinsDB" -> "langchain-ai/llmanager"
"pipecat-ai/smart-turn" -> "pipecat-ai/pipecat-flows"
"pipecat-ai/smart-turn" -> "pipecat-ai/pipecat-client-web"
"pipecat-ai/smart-turn" -> "pipecat-ai/docs"
"pipecat-ai/smart-turn" -> "pipecat-ai/open-sesame"
"pipecat-ai/smart-turn" -> "pipecat-ai/pipecat"
"pipecat-ai/smart-turn" -> "daily-co/daily-python"
"pipecat-ai/smart-turn" -> "davidbrowne17/csm-streaming" ["e"=1]
"AgentDeskAI/browser-tools-mcp" -> "GLips/Figma-Context-MCP"
"AgentDeskAI/browser-tools-mcp" -> "eastlondoner/cursor-tools"
"AgentDeskAI/browser-tools-mcp" -> "eyaltoledano/claude-task-master"
"AgentDeskAI/browser-tools-mcp" -> "mendableai/firecrawl-mcp-server"
"AgentDeskAI/browser-tools-mcp" -> "executeautomation/mcp-playwright"
"AgentDeskAI/browser-tools-mcp" -> "upstash/context7"
"AgentDeskAI/browser-tools-mcp" -> "21st-dev/magic-mcp"
"AgentDeskAI/browser-tools-mcp" -> "grapeot/devin.cursorrules"
"AgentDeskAI/browser-tools-mcp" -> "microsoft/playwright-mcp"
"AgentDeskAI/browser-tools-mcp" -> "modelcontextprotocol/servers"
"AgentDeskAI/browser-tools-mcp" -> "browserbase/mcp-server-browserbase"
"AgentDeskAI/browser-tools-mcp" -> "PatrickJS/awesome-cursorrules"
"AgentDeskAI/browser-tools-mcp" -> "RooVetGit/Roo-Code"
"AgentDeskAI/browser-tools-mcp" -> "modelcontextprotocol/inspector" ["e"=1]
"AgentDeskAI/browser-tools-mcp" -> "browser-use/web-ui"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "KalyanKS-NLP/llm-engineer-toolkit"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "bhav09/Generative-AI-Resources"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "hamzafarooq/building-llm-applications-from-scratch"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "KalyanKS-NLP/LLM-Survey-Papers-Collection"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "llmgenai/LLMInterviewQuestions"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "ashishpatel26/500-AI-Agents-Projects"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "decodingml/second-brain-ai-assistant-course"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "Tkag0001/AI_and_Machine_Learning_for_Coders" ["e"=1]
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "labdmitriy/llm-rag"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "afshinea/stanford-cme-295-transformers-large-language-models"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "break-into-data/ai-engineer-toolkit"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "JUSTSUJAY/nlp-zero-to-hero" ["e"=1]
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "neural-maze/ava-whatsapp-agent-course"
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "youssefHosni/Awesome-AI-Data-Guided-Projects" ["e"=1]
"KalyanKS-NLP/rag-zero-to-hero-guide" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"loopwork-ai/iMCP" -> "modelcontextprotocol/swift-sdk" ["e"=1]
"loopwork-ai/iMCP" -> "loopwork-ai/ollama-swift"
"loopwork-ai/iMCP" -> "loopwork-ai/Madrid"
"loopwork-ai/iMCP" -> "loopwork-ai/Ontology"
"loopwork-ai/iMCP" -> "loopwork-ai/emcee"
"loopwork-ai/iMCP" -> "eastriverlee/LLM.swift" ["e"=1]
"loopwork-ai/iMCP" -> "loopwork-ai/hype"
"restyler/awesome-n8n" -> "Marvomatic/n8n-templates"
"restyler/awesome-n8n" -> "nerding-io/n8n-nodes-mcp"
"restyler/awesome-n8n" -> "rubickecho/n8n-deepseek"
"restyler/awesome-n8n" -> "coleam00/local-ai-packaged"
"restyler/awesome-n8n" -> "enescingoz/awesome-n8n-templates"
"restyler/awesome-n8n" -> "makafeli/n8n-workflow-builder"
"restyler/awesome-n8n" -> "Touxan/n8n-ultimate-scraper"
"restyler/awesome-n8n" -> "coleam00/ottomator-agents"
"restyler/awesome-n8n" -> "drudge/n8n-nodes-puppeteer"
"restyler/awesome-n8n" -> "coleam00/ai-agents-masterclass"
"restyler/awesome-n8n" -> "joshpocock/Stride-AI-Agents"
"restyler/awesome-n8n" -> "oriondesign2015/n8n-nodes-evolution-api" ["e"=1]
"restyler/awesome-n8n" -> "hanson-cheng/n8n-workflows"
"restyler/awesome-n8n" -> "stephengpope/no-code-architects-toolkit"
"restyler/awesome-n8n" -> "jackvandervall/Agentic-Archive"
"panda-sandeep/epigram" -> "harishdeivanayagam/rowfill"
"panda-sandeep/epigram" -> "FoloUp/FoloUp"
"panda-sandeep/epigram" -> "specstoryai/getspecstory"
"panda-sandeep/epigram" -> "echohive42/AI-reads-books-page-by-page"
"General-Analysis/GA" -> "SupportTools/dr-syncer"
"General-Analysis/GA" -> "Trylz/Restir_CPP"
"General-Analysis/GA" -> "Chirag-Main1/ChatBot_perosnal"
"General-Analysis/GA" -> "spectrumwebco/kled.io"
"General-Analysis/GA" -> "MasterOfLogic1/UipathLibraries"
"General-Analysis/GA" -> "Webinix-dev/webinix"
"General-Analysis/GA" -> "muraliavarma/vue-slot-table"
"General-Analysis/GA" -> "MacroSurfer/MacroSurferFunctions"
"General-Analysis/GA" -> "HMUNACHI/super-lazy-autograd"
"General-Analysis/GA" -> "furudo-erika/awesome-postman-alternatives"
"General-Analysis/GA" -> "andreyykavv/RynexLLM"
"General-Analysis/GA" -> "RichartDedekind/NollarsVPN"
"General-Analysis/GA" -> "RoyGeagea/inventory-management"
"General-Analysis/GA" -> "armorwallet/armor-crypto-mcp"
"General-Analysis/GA" -> "gptBuster/gptBuster"
"KardelRuveyda/uretken-yapayzeka-chatbot-gelistirme-temelleri" -> "KardelRuveyda/gemini-devmultigroup-example"
"bracesproul/gen-ui-computer-use" -> "langchain-ai/langgraph-cua-py"
"fleuristes/fleur" -> "zaidmukaddam/scira-mcp-chat"
"jolovicdev/shandu" -> "zamalali/DeepGit"
"jolovicdev/shandu" -> "rango-ramesh/advanced-chunker"
"jolovicdev/shandu" -> "CopilotKit/open-multi-agent-canvas"
"jolovicdev/shandu" -> "AstraBert/llama-4-researcher"
"jolovicdev/shandu" -> "langchain-ai/langgraph-swarm-py"
"jolovicdev/shandu" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"jolovicdev/shandu" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"jolovicdev/shandu" -> "langchain-ai/langgraphjs-gen-ui-examples"
"jolovicdev/shandu" -> "langchain-ai/llmanager"
"jolovicdev/shandu" -> "Deluxer/oliva"
"jolovicdev/shandu" -> "von-development/awesome-LangGraph"
"jolovicdev/shandu" -> "zamalali/InboxHero"
"jolovicdev/shandu" -> "wassim249/YT-Navigator"
"jolovicdev/shandu" -> "alonlavian/RAGent"
"jolovicdev/shandu" -> "LearningCircuit/local-deep-research"
"xrdevrob/QuestCameraKit" -> "oculus-samples/Unity-PassthroughCameraApiSamples" ["e"=1]
"xrdevrob/QuestCameraKit" -> "balajikandavel/book-recommendation-engine"
"xrdevrob/QuestCameraKit" -> "dex-checker/dex-checker-solana-evm-wallets"
"xrdevrob/QuestCameraKit" -> "Trylz/RestirFalcor"
"xrdevrob/QuestCameraKit" -> "cyberharish/solana-pumpfun-bundler-volume-bot"
"xrdevrob/QuestCameraKit" -> "wess/zenolang"
"xrdevrob/QuestCameraKit" -> "TomaAytakin/RedPanda"
"xrdevrob/QuestCameraKit" -> "jhd3197/Cacao"
"xrdevrob/QuestCameraKit" -> "Dokan-E-Commerce/compliance-laravel-sdk"
"xrdevrob/QuestCameraKit" -> "barbaraojxoc/awesome-coding"
"xrdevrob/QuestCameraKit" -> "ultramodernism/manifesto-paper"
"xrdevrob/QuestCameraKit" -> "andreyykavv/RynexLLM"
"xrdevrob/QuestCameraKit" -> "SolSndy/SolSandwich-Solana-Sandwich-bot"
"xrdevrob/QuestCameraKit" -> "openqquantify/OpenQQuantify-Cesium-Digital-Twins-Simulations"
"xrdevrob/QuestCameraKit" -> "Canuck-Gamblers/Best-Online-Casino-Canada-2025-Top-5-Real-Money-Sites"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "KalyanKS-NLP/llm-engineer-toolkit"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "hamzafarooq/building-llm-applications-from-scratch"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "KalyanKS-NLP/rag-zero-to-hero-guide"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "neural-maze/ava-whatsapp-agent-course"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "patchy631/ai-engineering-hub"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "mongodb-developer/GenAI-Showcase"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "transformerlab/transformerlab-app"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "aburkov/theLMbook" ["e"=1]
"afshinea/stanford-cme-295-transformers-large-language-models" -> "PacktPublishing/LLM-Engineers-Handbook"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "tanishqkumar/beyond-nanogpt" ["e"=1]
"afshinea/stanford-cme-295-transformers-large-language-models" -> "von-development/awesome-LangGraph"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "going-doer/Paper2Code"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "decodingml/second-brain-ai-assistant-course"
"afshinea/stanford-cme-295-transformers-large-language-models" -> "mcp-use/mcp-use"
"YZ-Cai/SimGRAG" -> "CogComp/reasoning-eval"
"mims-harvard/ToolUniverse" -> "mims-harvard/TxAgent"
"Marvomatic/n8n-templates" -> "restyler/awesome-n8n"
"Marvomatic/n8n-templates" -> "hanson-cheng/n8n-workflows"
"Marvomatic/n8n-templates" -> "jackvandervall/Agentic-Archive"
"Marvomatic/n8n-templates" -> "datawranglerai/self-host-n8n-on-gcr"
"Marvomatic/n8n-templates" -> "enescingoz/awesome-n8n-templates"
"Marvomatic/n8n-templates" -> "nerding-io/n8n-nodes-mcp"
"Marvomatic/n8n-templates" -> "Xavi1995/n8n_execution_report"
"Marvomatic/n8n-templates" -> "makafeli/n8n-workflow-builder"
"Marvomatic/n8n-templates" -> "joshpocock/Stride-AI-Agents"
"Marvomatic/n8n-templates" -> "gyoridavid/ai_agents_az"
"Marvomatic/n8n-templates" -> "NPC-Worldwide/npcpy" ["e"=1]
"Marvomatic/n8n-templates" -> "conor-is-my-name/n8n-autoscaling"
"Marvomatic/n8n-templates" -> "devlikeapro/waha-n8n-templates"
"Marvomatic/n8n-templates" -> "Stirito/N8N_Workflow_Template"
"Marvomatic/n8n-templates" -> "stephengpope/no-code-architects-toolkit"
"crafter-station/text0" -> "Krish120003/gitfaster"
"crafter-station/text0" -> "ekmigasari/wfcOS"
"callmesora/llmops-python-package" -> "fmind/mlops-python-package"
"callmesora/llmops-python-package" -> "MLOps-Courses/mlops-coding-course"
"callmesora/llmops-python-package" -> "fmind/cookiecutter-mlops-package"
"callmesora/llmops-python-package" -> "neural-maze/ava-whatsapp-agent-course"
"callmesora/llmops-python-package" -> "decodingml/second-brain-ai-assistant-course"
"callmesora/llmops-python-package" -> "PacktPublishing/LLM-Engineers-Handbook"
"callmesora/llmops-python-package" -> "SylphAI-Inc/LLM-engineer-handbook"
"callmesora/llmops-python-package" -> "iusztinpaul/energy-forecasting"
"callmesora/llmops-python-package" -> "neural-maze/agentic-patterns-course"
"callmesora/llmops-python-package" -> "decodingml/llm-twin-course"
"callmesora/llmops-python-package" -> "NannyML/The-Little-Book-of-ML-Metrics"
"callmesora/llmops-python-package" -> "SkalskiP/vlms-zero-to-hero" ["e"=1]
"callmesora/llmops-python-package" -> "decodingml/personalized-recommender-course"
"callmesora/llmops-python-package" -> "SylphAI-Inc/AdalFlow"
"callmesora/llmops-python-package" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"Goldziher/kreuzberg" -> "GitHamza0206/simba"
"Goldziher/kreuzberg" -> "thiswillbeyourgithub/wdoc"
"Goldziher/kreuzberg" -> "PragmaticMachineLearning/probly" ["e"=1]
"Goldziher/kreuzberg" -> "pyper-dev/pyper" ["e"=1]
"Goldziher/kreuzberg" -> "tianyaxiang/neurapress" ["e"=1]
"Goldziher/kreuzberg" -> "oomol-lab/pdf-craft" ["e"=1]
"Goldziher/kreuzberg" -> "wisupai/e2m"
"Goldziher/kreuzberg" -> "bodo-run/yek"
"Goldziher/kreuzberg" -> "chonkie-ai/chonkie"
"Goldziher/kreuzberg" -> "echohive42/AI-reads-books-page-by-page"
"Goldziher/kreuzberg" -> "gauge-sh/tach" ["e"=1]
"Goldziher/kreuzberg" -> "ariebovenberg/whenever" ["e"=1]
"Goldziher/kreuzberg" -> "igrek51/wat" ["e"=1]
"Goldziher/kreuzberg" -> "NVIDIA-AI-Blueprints/pdf-to-podcast"
"Goldziher/kreuzberg" -> "goodreasonai/ScrapeServ" ["e"=1]
"pipecat-ai/gemini-multimodal-live-demo" -> "daily-demos/daily-bots-web-demo"
"pipecat-ai/gemini-multimodal-live-demo" -> "pipecat-ai/gemini-webrtc-web-simple"
"pipecat-ai/gemini-multimodal-live-demo" -> "daily-demos/rtvi-client-android-demo"
"pipecat-ai/gemini-multimodal-live-demo" -> "pipecat-ai/pipecat-client-android"
"BrowserMCP/mcp" -> "browserbase/mcp-server-browserbase"
"BrowserMCP/mcp" -> "magnitudedev/magnitude"
"BrowserMCP/mcp" -> "AgentDeskAI/browser-tools-mcp"
"BrowserMCP/mcp" -> "coder/agentapi"
"BrowserMCP/mcp" -> "lastmile-ai/mcp-agent"
"BrowserMCP/mcp" -> "jae-jae/fetcher-mcp" ["e"=1]
"BrowserMCP/mcp" -> "elevenlabs/elevenlabs-mcp"
"BrowserMCP/mcp" -> "lmnr-ai/index"
"BrowserMCP/mcp" -> "executeautomation/mcp-playwright"
"BrowserMCP/mcp" -> "idosal/git-mcp"
"BrowserMCP/mcp" -> "OpenAgentPlatform/Dive" ["e"=1]
"BrowserMCP/mcp" -> "metorial/mcp-containers" ["e"=1]
"BrowserMCP/mcp" -> "invariantlabs-ai/mcp-scan" ["e"=1]
"BrowserMCP/mcp" -> "trycua/cua"
"BrowserMCP/mcp" -> "browserable/browserable"
"sanjeed5/awesome-cursor-rules-mdc" -> "bmadcode/cursor-custom-agents-rules-generator"
"sanjeed5/awesome-cursor-rules-mdc" -> "Mawla/cursor_rules"
"sanjeed5/awesome-cursor-rules-mdc" -> "flyeric0212/cursor-rules"
"sanjeed5/awesome-cursor-rules-mdc" -> "Bhartendu-Kumar/rules_template" ["e"=1]
"sanjeed5/awesome-cursor-rules-mdc" -> "pontusab/directories"
"sanjeed5/awesome-cursor-rules-mdc" -> "eyaltoledano/claude-task-master"
"sanjeed5/awesome-cursor-rules-mdc" -> "alchaincyf/cursor-rules-huasheng"
"sanjeed5/awesome-cursor-rules-mdc" -> "vanzan01/cursor-memory-bank"
"sanjeed5/awesome-cursor-rules-mdc" -> "eastlondoner/cursor-tools"
"sanjeed5/awesome-cursor-rules-mdc" -> "T1nker-1220/UltraContextAI"
"sanjeed5/awesome-cursor-rules-mdc" -> "PatrickJS/awesome-cursorrules"
"sanjeed5/awesome-cursor-rules-mdc" -> "elie222/inbox-zero" ["e"=1]
"sanjeed5/awesome-cursor-rules-mdc" -> "toss/react-simplikit" ["e"=1]
"sanjeed5/awesome-cursor-rules-mdc" -> "oslook/cursor-ai-downloads" ["e"=1]
"sanjeed5/awesome-cursor-rules-mdc" -> "s-smits/agentic-cursorrules"
"NLPOptimize/flash-tokenizer" -> "SupportTools/dr-syncer"
"NLPOptimize/flash-tokenizer" -> "spectrumwebco/kled.io"
"NLPOptimize/flash-tokenizer" -> "Trylz/Restir_CPP"
"NLPOptimize/flash-tokenizer" -> "furudo-erika/awesome-postman-alternatives"
"NLPOptimize/flash-tokenizer" -> "MasterOfLogic1/UipathLibraries"
"NLPOptimize/flash-tokenizer" -> "Chirag-Main1/ChatBot_perosnal"
"NLPOptimize/flash-tokenizer" -> "Webinix-dev/webinix"
"NLPOptimize/flash-tokenizer" -> "andreyykavv/RynexLLM"
"NLPOptimize/flash-tokenizer" -> "armorwallet/armor-crypto-mcp"
"NLPOptimize/flash-tokenizer" -> "HMUNACHI/super-lazy-autograd"
"NLPOptimize/flash-tokenizer" -> "muraliavarma/vue-slot-table"
"NLPOptimize/flash-tokenizer" -> "RichartDedekind/NollarsVPN"
"NLPOptimize/flash-tokenizer" -> "gptBuster/gptBuster"
"NLPOptimize/flash-tokenizer" -> "MacroSurfer/MacroSurferFunctions"
"NLPOptimize/flash-tokenizer" -> "wyattm14/chatbot-template"
"GoogleCloudPlatform/agent-starter-pack" -> "coleam00/Archon"
"GoogleCloudPlatform/agent-starter-pack" -> "GoogleCloudPlatform/generative-ai"
"GoogleCloudPlatform/agent-starter-pack" -> "googleapis/python-genai"
"GoogleCloudPlatform/agent-starter-pack" -> "GoogleCloudPlatform/applied-ai-engineering-samples" ["e"=1]
"GoogleCloudPlatform/agent-starter-pack" -> "google/adk-python"
"GoogleCloudPlatform/agent-starter-pack" -> "google/adk-samples"
"GoogleCloudPlatform/agent-starter-pack" -> "google-gemini/cookbook"
"GoogleCloudPlatform/agent-starter-pack" -> "GoogleCloudPlatform/genai-databases-retrieval-app" ["e"=1]
"GoogleCloudPlatform/agent-starter-pack" -> "GoogleCloudPlatform/vertex-ai-samples" ["e"=1]
"GoogleCloudPlatform/agent-starter-pack" -> "google-gemini/gemma-cookbook"
"GoogleCloudPlatform/agent-starter-pack" -> "googleapis/genai-toolbox"
"GoogleCloudPlatform/agent-starter-pack" -> "philschmid/gemini-samples"
"GoogleCloudPlatform/agent-starter-pack" -> "neural-maze/ava-whatsapp-agent-course"
"GoogleCloudPlatform/agent-starter-pack" -> "google/A2A"
"GoogleCloudPlatform/agent-starter-pack" -> "tadata-org/fastapi_mcp"
"llmgenai/LLMInterviewQuestions" -> "bhav09/Generative-AI-Resources"
"llmgenai/LLMInterviewQuestions" -> "SylphAI-Inc/LLM-engineer-handbook"
"llmgenai/LLMInterviewQuestions" -> "PacktPublishing/LLM-Engineers-Handbook"
"llmgenai/LLMInterviewQuestions" -> "KalyanKS-NLP/llm-engineer-toolkit"
"llmgenai/LLMInterviewQuestions" -> "neural-maze/ava-whatsapp-agent-course"
"llmgenai/LLMInterviewQuestions" -> "callmesora/llmops-python-package"
"llmgenai/LLMInterviewQuestions" -> "hamzafarooq/building-llm-applications-from-scratch"
"llmgenai/LLMInterviewQuestions" -> "youssefHosni/Data-Science-Interview-Questions-Answers" ["e"=1]
"llmgenai/LLMInterviewQuestions" -> "KalyanKS-NLP/rag-zero-to-hero-guide"
"llmgenai/LLMInterviewQuestions" -> "decodingml/llm-twin-course"
"llmgenai/LLMInterviewQuestions" -> "neural-maze/agentic-patterns-course"
"llmgenai/LLMInterviewQuestions" -> "Devinterview-io/llms-interview-questions" ["e"=1]
"llmgenai/LLMInterviewQuestions" -> "huggingface/smol-course"
"llmgenai/LLMInterviewQuestions" -> "youssefHosni/Data-Science-Interview-Preperation-Resources" ["e"=1]
"llmgenai/LLMInterviewQuestions" -> "HandsOnLLM/Hands-On-Large-Language-Models"
"Om-Alve/smolGPT" -> "huggingface/smollm" ["e"=1]
"Om-Alve/smolGPT" -> "therealoliver/Deepdive-llama3-from-scratch" ["e"=1]
"Om-Alve/smolGPT" -> "alessiodm/drl-zh" ["e"=1]
"Om-Alve/smolGPT" -> "bodo-run/yek"
"Om-Alve/smolGPT" -> "stanford-mast/blast"
"Om-Alve/smolGPT" -> "chonkie-ai/chonkie"
"Om-Alve/smolGPT" -> "circlemind-ai/fast-graphrag"
"Om-Alve/smolGPT" -> "MarioSieg/magnetron" ["e"=1]
"Om-Alve/smolGPT" -> "skyzh/tiny-llm" ["e"=1]
"Om-Alve/smolGPT" -> "SkalskiP/vlms-zero-to-hero" ["e"=1]
"Om-Alve/smolGPT" -> "transformerlab/transformerlab-app"
"Om-Alve/smolGPT" -> "vlm-run/vlmrun-hub" ["e"=1]
"Om-Alve/smolGPT" -> "Maharshi-Pandya/cudacodes" ["e"=1]
"Om-Alve/smolGPT" -> "athina-ai/rag-cookbooks"
"Om-Alve/smolGPT" -> "KoljaB/RealtimeVoiceChat"
"EnesCinr/twitter-mcp" -> "Trylz/RestirFalcor"
"EnesCinr/twitter-mcp" -> "esteai/esteAI"
"EnesCinr/twitter-mcp" -> "hasan4adnan/Recta-AI"
"EnesCinr/twitter-mcp" -> "EmreOzanMemis/DevOpsNedir"
"EnesCinr/twitter-mcp" -> "RichartDedekind/NollarsVPN"
"EnesCinr/twitter-mcp" -> "ExoniaToken/flash-usdt-erc20"
"EnesCinr/twitter-mcp" -> "Trylz/Restir_CPP"
"EnesCinr/twitter-mcp" -> "DewyCoder/crypto-trading-bot-eth-bnb"
"EnesCinr/twitter-mcp" -> "SupportTools/dr-syncer"
"EnesCinr/twitter-mcp" -> "gptBuster/gptBuster"
"EnesCinr/twitter-mcp" -> "andreyykavv/RynexLLM"
"EnesCinr/twitter-mcp" -> "balajikandavel/book-recommendation-engine"
"EnesCinr/twitter-mcp" -> "barbaraojxoc/awesome-coding"
"EnesCinr/twitter-mcp" -> "Profichefsorn77/telegramdm-bot"
"EnesCinr/twitter-mcp" -> "emotion-block/project-elara"
"martin226/slideitin" -> "owengretzinger/gitreadme"
"FareedKhan-dev/all-rag-techniques" -> "BragAI/bRAG-langchain"
"FareedKhan-dev/all-rag-techniques" -> "SaiAkhil066/DeepSeek-RAG-Chatbot"
"FareedKhan-dev/all-rag-techniques" -> "gusye1234/nano-graphrag"
"FareedKhan-dev/all-rag-techniques" -> "KalyanKS-NLP/llm-engineer-toolkit"
"FareedKhan-dev/all-rag-techniques" -> "Andrew-Jang/RAGHub"
"FareedKhan-dev/all-rag-techniques" -> "Danielskry/Awesome-RAG"
"FareedKhan-dev/all-rag-techniques" -> "FareedKhan-dev/train-deepseek-r1" ["e"=1]
"FareedKhan-dev/all-rag-techniques" -> "RUC-NLPIR/FlashRAG"
"FareedKhan-dev/all-rag-techniques" -> "WangRongsheng/awesome-LLM-resources" ["e"=1]
"FareedKhan-dev/all-rag-techniques" -> "NirDiamant/RAG_Techniques"
"FareedKhan-dev/all-rag-techniques" -> "xerrors/Yuxi-Know" ["e"=1]
"FareedKhan-dev/all-rag-techniques" -> "IlyaRice/RAG-Challenge-2" ["e"=1]
"FareedKhan-dev/all-rag-techniques" -> "athina-ai/rag-cookbooks"
"FareedKhan-dev/all-rag-techniques" -> "asinghcsu/AgenticRAG-Survey"
"FareedKhan-dev/all-rag-techniques" -> "dontriskit/awesome-ai-system-prompts"
"thedaviddias/llms-txt-hub" -> "thedaviddias/indie-dev-toolkit"
"thedaviddias/llms-txt-hub" -> "thedaviddias/ux-patterns-for-developers"
"langchain-ai/mcpdoc" -> "langchain-ai/agent-chat-ui"
"langchain-ai/mcpdoc" -> "langchain-ai/langgraph-reflection"
"langchain-ai/mcpdoc" -> "langchain-ai/agent-inbox"
"langchain-ai/mcpdoc" -> "langchain-ai/langgraphjs-gen-ui-examples"
"asinghcsu/AgenticRAG-Survey" -> "BragAI/bRAG-langchain"
"asinghcsu/AgenticRAG-Survey" -> "tjmlabs/ColiVara"
"asinghcsu/AgenticRAG-Survey" -> "run-llama/llamacloud-demo"
"asinghcsu/AgenticRAG-Survey" -> "RUC-NLPIR/FlashRAG"
"asinghcsu/AgenticRAG-Survey" -> "sunnynexus/Search-o1" ["e"=1]
"asinghcsu/AgenticRAG-Survey" -> "athina-ai/rag-cookbooks"
"asinghcsu/AgenticRAG-Survey" -> "neural-maze/ava-whatsapp-agent-course"
"asinghcsu/AgenticRAG-Survey" -> "DEEP-PolyU/Awesome-GraphRAG" ["e"=1]
"asinghcsu/AgenticRAG-Survey" -> "hrithikkoduri/WebRover"
"asinghcsu/AgenticRAG-Survey" -> "Agent-RL/ReCall" ["e"=1]
"asinghcsu/AgenticRAG-Survey" -> "hymie122/RAG-Survey"
"asinghcsu/AgenticRAG-Survey" -> "FareedKhan-dev/all-rag-techniques"
"asinghcsu/AgenticRAG-Survey" -> "philschmid/gemini-samples"
"asinghcsu/AgenticRAG-Survey" -> "souvikmajumder26/Multi-Agent-Medical-Assistant"
"asinghcsu/AgenticRAG-Survey" -> "labdmitriy/llm-rag"
"wild-card-ai/agents-json" -> "superglue-ai/superglue" ["e"=1]
"wild-card-ai/agents-json" -> "humanlayer/humanlayer"
"wild-card-ai/agents-json" -> "lmnr-ai/index"
"wild-card-ai/agents-json" -> "magnitudedev/magnitude"
"wild-card-ai/agents-json" -> "synth-inc/onit"
"wild-card-ai/agents-json" -> "katanemo/archgw"
"wild-card-ai/agents-json" -> "humanlayer/12-factor-agents"
"wild-card-ai/agents-json" -> "lmnr-ai/lmnr"
"wild-card-ai/agents-json" -> "bknd-io/bknd" ["e"=1]
"wild-card-ai/agents-json" -> "postgresml/korvus"
"wild-card-ai/agents-json" -> "steel-dev/steel-browser"
"wild-card-ai/agents-json" -> "gensx-inc/gensx"
"wild-card-ai/agents-json" -> "circlemind-ai/fast-graphrag"
"wild-card-ai/agents-json" -> "coder/agentapi"
"wild-card-ai/agents-json" -> "TrafficGuard/typedai"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "project-ryoma/ryoma" ["e"=1]
"NicholasGoh/fastapi-mcp-langgraph-template" -> "lgesuellip/langgraph-whatsapp-agent"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "von-development/awesome-LangGraph"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "rango-ramesh/advanced-chunker"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "zamalali/DeepGit"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "CopilotKit/open-multi-agent-canvas"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "zamalali/InboxHero"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "langchain-ai/agent-chat-ui"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "amanv1906/GENAI-CareerAssistant-Multiagent"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "neural-maze/ava-whatsapp-agent-course"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "langchain-ai/llmanager"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "philschmid/gemini-samples"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "hrithikkoduri/WebRover"
"NicholasGoh/fastapi-mcp-langgraph-template" -> "Azzedde/paper_to_podcast"
"bhav09/Generative-AI-Resources" -> "KalyanKS-NLP/rag-zero-to-hero-guide"
"bhav09/Generative-AI-Resources" -> "llmgenai/LLMInterviewQuestions"
"CodeGuide-dev/codeguide-starter-lite" -> "sullyo/webapp-starter"
"CodeGuide-dev/codeguide-starter-lite" -> "CodeGuide-dev/codeguide-starter-pro"
"CodeGuide-dev/codeguide-starter-lite" -> "ShenSeanChen/launch-mvp-stripe-nextjs-supabase"
"CodeGuide-dev/codeguide-starter-lite" -> "instructa/viber3d"
"CodeGuide-dev/codeguide-starter-lite" -> "ansh/template-2"
"CodeGuide-dev/codeguide-starter-lite" -> "CodeGuide-dev/deep-research-api"
"CodeGuide-dev/codeguide-starter-lite" -> "makerkit/nextjs-saas-starter-kit-lite"
"d2forum/19th" -> "bytedance/flowgram.ai"
"alicankiraz1/LLMRipper" -> "alicankiraz1/PrivacyGuardian"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "sullyo/webapp-starter"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "CodeGuide-dev/codeguide-starter-lite"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "sshtunnelvision/MCP-LOGO-GEN"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "fiehtle/raycast-internal-search" ["e"=1]
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "mckaywrigley/mckays-app-template"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "instructa/viber3d"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "antoineross/Hikari" ["e"=1]
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "jackfriks/expo-app-boilerplate"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "developersdigest/llm-api-engine"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "alexander-zuev/supabase-mcp-server"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "DannyMac180/meta-agent"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "context-labs/autodelve"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "FoloUp/FoloUp"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "VxASI/blender-mcp-vxai"
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" -> "13point5/gemini-cursor"
"syedazharmbnr1/claude-chatgpt-mcp" -> "ppl-ai/modelcontextprotocol"
"syedazharmbnr1/claude-chatgpt-mcp" -> "VxASI/blender-mcp-vxai"
"syedazharmbnr1/claude-chatgpt-mcp" -> "hylarucoder/ai-flavor-remover" ["e"=1]
"syedazharmbnr1/claude-chatgpt-mcp" -> "exa-labs/exa-mcp-server"
"syedazharmbnr1/claude-chatgpt-mcp" -> "basicmachines-co/basic-memory" ["e"=1]
"syedazharmbnr1/claude-chatgpt-mcp" -> "SimonB97/win-cli-mcp-server" ["e"=1]
"syedazharmbnr1/claude-chatgpt-mcp" -> "browserbase/mcp-server-browserbase"
"syedazharmbnr1/claude-chatgpt-mcp" -> "zcaceres/markdownify-mcp"
"syedazharmbnr1/claude-chatgpt-mcp" -> "Dhravya/apple-mcp"
"TheAgenticAI/CortexON" -> "SupportTools/dr-syncer"
"TheAgenticAI/CortexON" -> "Trylz/Restir_CPP"
"TheAgenticAI/CortexON" -> "RichartDedekind/NollarsVPN"
"TheAgenticAI/CortexON" -> "spectrumwebco/kled.io"
"TheAgenticAI/CortexON" -> "wyattm14/chatbot-template"
"TheAgenticAI/CortexON" -> "furudo-erika/awesome-postman-alternatives"
"TheAgenticAI/CortexON" -> "MasterOfLogic1/UipathLibraries"
"TheAgenticAI/CortexON" -> "Chirag-Main1/ChatBot_perosnal"
"TheAgenticAI/CortexON" -> "Webinix-dev/webinix"
"TheAgenticAI/CortexON" -> "andreyykavv/RynexLLM"
"TheAgenticAI/CortexON" -> "muraliavarma/vue-slot-table"
"TheAgenticAI/CortexON" -> "armorwallet/armor-crypto-mcp"
"TheAgenticAI/CortexON" -> "HMUNACHI/super-lazy-autograd"
"TheAgenticAI/CortexON" -> "updatedotdev/js"
"TheAgenticAI/CortexON" -> "MacroSurfer/MacroSurferFunctions"
"octotools/octotools" -> "plurai-ai/intellagent"
"octotools/octotools" -> "PeterGriffinJin/Search-R1" ["e"=1]
"octotools/octotools" -> "NVIDIA/AIQToolkit"
"octotools/octotools" -> "ucbepic/docetl"
"octotools/octotools" -> "theworldofagents/Agentic-Reasoning" ["e"=1]
"octotools/octotools" -> "emcie-co/parlant"
"octotools/octotools" -> "WujiangXu/AgenticMemory"
"octotools/octotools" -> "character-ai/prompt-poet"
"octotools/octotools" -> "ag2ai/ag2"
"octotools/octotools" -> "HKUDS/AutoAgent"
"octotools/octotools" -> "zou-group/textgrad"
"octotools/octotools" -> "microsoft/RD-Agent"
"octotools/octotools" -> "sunnynexus/Search-o1" ["e"=1]
"octotools/octotools" -> "simular-ai/Agent-S"
"octotools/octotools" -> "YZ-Cai/SimGRAG"
"google/adk-docs" -> "google/adk-samples"
"HKUDS/MiniRAG" -> "HKUDS/VideoRAG" ["e"=1]
"HKUDS/MiniRAG" -> "microsoft/PIKE-RAG"
"HKUDS/MiniRAG" -> "HKUDS/GraphAgent" ["e"=1]
"HKUDS/MiniRAG" -> "gusye1234/nano-graphrag"
"HKUDS/MiniRAG" -> "HKUDS/GraphGPT" ["e"=1]
"HKUDS/MiniRAG" -> "HKUDS/RecLM" ["e"=1]
"HKUDS/MiniRAG" -> "DEEP-PolyU/Awesome-GraphRAG" ["e"=1]
"HKUDS/MiniRAG" -> "HKUDS/LightRAG" ["e"=1]
"HKUDS/MiniRAG" -> "OSU-NLP-Group/HippoRAG"
"HKUDS/MiniRAG" -> "HKUDS/Auto-Deep-Research" ["e"=1]
"HKUDS/MiniRAG" -> "risesoft-y9/DataFlow-Engine" ["e"=1]
"HKUDS/MiniRAG" -> "530051970/zenith-cloudkit" ["e"=1]
"HKUDS/MiniRAG" -> "tianlan-ltd/Magic-Insight" ["e"=1]
"HKUDS/MiniRAG" -> "Windsander/ADI-Stable-Diffusion" ["e"=1]
"HKUDS/MiniRAG" -> "guanchuwang/redis-bench" ["e"=1]
"mustafaozhan/CosmeticScan" -> "mustafaozhan/FirebaseMessagingApp"
"mustafaozhan/CosmeticScan" -> "mustafaozhan/Arc-Maia-Grey-Theme"
"mustafaozhan/CosmeticScan" -> "MobilCat/AndroCat"
"getprobo/probo" -> "authed-dev/authed"
"getprobo/probo" -> "mlop-ai/mlop"
"getprobo/probo" -> "HelixDB/helix-db"
"getprobo/probo" -> "JasonGross/autoformalization-transpilation"
"getprobo/probo" -> "The-LLM-Data-Company/doteval"
"getprobo/probo" -> "Operative-Sh/web-eval-agent"
"getprobo/probo" -> "blaxel-ai/sdk-python"
"getprobo/probo" -> "airweave-ai/airweave"
"getprobo/probo" -> "starslingdev/starsling"
"getprobo/probo" -> "chonkie-inc/chonkie"
"getprobo/probo" -> "trycompai/comp" ["e"=1]
"getprobo/probo" -> "gearnode/privatebin"
"osanseviero/InstantCoder" -> "groq/groq-appgen"
"osanseviero/InstantCoder" -> "Nutlope/llamacoder"
"osanseviero/InstantCoder" -> "Doriandarko/deepseek-engineer"
"osanseviero/InstantCoder" -> "raizamartin/gemini-code" ["e"=1]
"osanseviero/InstantCoder" -> "Doriandarko/gemini-ui-to-code"
"osanseviero/InstantCoder" -> "lee88688/aider-composer"
"osanseviero/InstantCoder" -> "codestoryai/aide"
"osanseviero/InstantCoder" -> "ammaarreshi/Gemini-Search" ["e"=1]
"osanseviero/InstantCoder" -> "srcbookdev/srcbook"
"osanseviero/InstantCoder" -> "browserbase/open-operator"
"osanseviero/InstantCoder" -> "e2b-dev/fragments"
"osanseviero/InstantCoder" -> "google-gemini/live-api-web-console"
"osanseviero/InstantCoder" -> "nicekate/AI-ContentCraft" ["e"=1]
"osanseviero/InstantCoder" -> "zcaceres/markdownify-mcp"
"osanseviero/InstantCoder" -> "google-gemini/starter-applets"
"NarimanN2/ollama-playground" -> "zamalali/DeepGit"
"NarimanN2/ollama-playground" -> "curiousily/AI-Bootcamp"
"NarimanN2/ollama-playground" -> "Deluxer/oliva"
"bmadcode/BMAD-METHOD" -> "bmadcode/cursor-custom-agents-rules-generator"
"bmadcode/BMAD-METHOD" -> "rosendolu/cursor-rules-deploy"
"bmadcode/BMAD-METHOD" -> "johnpeterman72/CursorRIPER"
"bmadcode/BMAD-METHOD" -> "adamwlarson/RooCodeMicroManager" ["e"=1]
"bmadcode/BMAD-METHOD" -> "kleosr/cursorkleosr"
"bmadcode/BMAD-METHOD" -> "ChrisRoyse/Pheromind" ["e"=1]
"developersdigest/llm-api-engine" -> "video-db/Director"
"developersdigest/llm-api-engine" -> "exa-labs/exa-deepseek-chat"
"developersdigest/llm-api-engine" -> "Doriandarko/RAT-retrieval-augmented-thinking"
"developersdigest/llm-api-engine" -> "browserbase/open-operator"
"developersdigest/llm-api-engine" -> "reflex-dev/reflex-llm-examples"
"developersdigest/llm-api-engine" -> "exa-labs/company-researcher"
"developersdigest/llm-api-engine" -> "harishsg993010/LLM-Reasoner"
"developersdigest/llm-api-engine" -> "xynehq/xyne"
"developersdigest/llm-api-engine" -> "eyelevelai/groundx-on-prem"
"developersdigest/llm-api-engine" -> "elizaOS/agent-twitter-client"
"developersdigest/llm-api-engine" -> "mckaywrigley/mckays-app-template"
"developersdigest/llm-api-engine" -> "egoist/sitefetch"
"developersdigest/llm-api-engine" -> "Doriandarko/deepseek-engineer"
"developersdigest/llm-api-engine" -> "AK391/ai-gradio"
"developersdigest/llm-api-engine" -> "sauravpanda/BrowserAI"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "von-development/awesome-LangGraph"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "Deluxer/oliva"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "neural-maze/ava-whatsapp-agent-course"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "lgesuellip/langgraph-whatsapp-agent"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "philschmid/gemini-samples"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "langchain-ai/company-researcher"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "rango-ramesh/advanced-chunker"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "CopilotKit/open-multi-agent-canvas"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "Nachoeigu/agentic-customer-service-medical-clinic"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "project-ryoma/ryoma" ["e"=1]
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "zamalali/DeepGit"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "ahmad2b/postbot3000"
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "meta-llama/synthetic-data-kit" ["e"=1]
"souvikmajumder26/Multi-Agent-Medical-Assistant" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"instructa/viber3d" -> "VxASI/blender-mcp-vxai"
"instructa/viber3d" -> "CodeGuide-dev/codeguide-starter-lite"
"instructa/viber3d" -> "instructa/ai-prompts"
"instructa/viber3d" -> "s-smits/agentic-cursorrules"
"instructa/viber3d" -> "supavec/supavec"
"ymichael/open-codex" -> "raizamartin/gemini-code" ["e"=1]
"ymichael/open-codex" -> "exa-labs/exa-mcp-server"
"ymichael/open-codex" -> "simstudioai/sim"
"ymichael/open-codex" -> "1rgs/claude-code-proxy" ["e"=1]
"ymichael/open-codex" -> "MotiaDev/motia"
"ymichael/open-codex" -> "eyaltoledano/claude-task-master"
"ymichael/open-codex" -> "mcp-use/mcp-use"
"ymichael/open-codex" -> "dnakov/anon-kode" ["e"=1]
"ymichael/open-codex" -> "openai/codex"
"ymichael/open-codex" -> "simular-ai/Agent-S"
"ymichael/open-codex" -> "eastlondoner/cursor-tools"
"ymichael/open-codex" -> "smtg-ai/claude-squad" ["e"=1]
"ymichael/open-codex" -> "philschmid/gemini-samples"
"ymichael/open-codex" -> "zaidmukaddam/scira-mcp-chat"
"ymichael/open-codex" -> "Doriandarko/RAT-retrieval-augmented-thinking"
"zaidmukaddam/scira-mcp-chat" -> "ibelick/zola" ["e"=1]
"zaidmukaddam/scira-mcp-chat" -> "google-gemini/gemini-image-editing-nextjs-quickstart"
"zaidmukaddam/scira-mcp-chat" -> "exa-labs/exa-mcp-server"
"zaidmukaddam/scira-mcp-chat" -> "ducan-ne/opencoder" ["e"=1]
"NVIDIA-AI-Blueprints/rag" -> "NVIDIA-AI-Blueprints/ai-virtual-assistant"
"NVIDIA-AI-Blueprints/rag" -> "NVIDIA-AI-Blueprints/llm-router"
"Deluxer/oliva" -> "zamalali/DeepGit"
"Deluxer/oliva" -> "neural-maze/ava-whatsapp-agent-course"
"Deluxer/oliva" -> "von-development/awesome-LangGraph"
"Deluxer/oliva" -> "souvikmajumder26/Multi-Agent-Medical-Assistant"
"Deluxer/oliva" -> "rango-ramesh/advanced-chunker"
"Deluxer/oliva" -> "langchain-ai/agent-chat-ui"
"Deluxer/oliva" -> "langchain-ai/agentevals"
"Deluxer/oliva" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"Deluxer/oliva" -> "bracesproul/gen-ui-computer-use"
"Deluxer/oliva" -> "wassim249/YT-Navigator"
"Deluxer/oliva" -> "chrischoy/WhisperChain" ["e"=1]
"Deluxer/oliva" -> "langchain-ai/langgraphjs-gen-ui-examples"
"openai/openai-cua-sample-app" -> "openai/openai-responses-starter-app" ["e"=1]
"openai/openai-cua-sample-app" -> "openai/openai-voice-agent-sdk-sample" ["e"=1]
"openai/openai-cua-sample-app" -> "openai/openai-support-agent-demo" ["e"=1]
"openai/openai-cua-sample-app" -> "openai/openai-agents-python"
"openai/openai-cua-sample-app" -> "openai/openai-realtime-twilio-demo" ["e"=1]
"openai/openai-cua-sample-app" -> "showlab/computer_use_ootb" ["e"=1]
"openai/openai-cua-sample-app" -> "openai/openai-realtime-console"
"openai/openai-cua-sample-app" -> "openai/openai-fm" ["e"=1]
"openai/openai-cua-sample-app" -> "browser-use/macOS-use"
"openai/openai-cua-sample-app" -> "openai/openai-structured-outputs-samples"
"openai/openai-cua-sample-app" -> "e2b-dev/open-computer-use"
"openai/openai-cua-sample-app" -> "trycua/acu"
"openai/openai-cua-sample-app" -> "browserbase/cua-browser"
"openai/openai-cua-sample-app" -> "openai/openai-assistants-quickstart"
"openai/openai-cua-sample-app" -> "bracesproul/gen-ui-computer-use"
"disler/single-file-agents" -> "disler/marimo-prompt-library"
"disler/single-file-agents" -> "disler/benchy"
"disler/single-file-agents" -> "disler/pocket-pick"
"disler/single-file-agents" -> "disler/claude-3-7-sonnet-starter-pack"
"disler/single-file-agents" -> "disler/just-prompt"
"disler/single-file-agents" -> "disler/mermaid-js-ai-agent"
"disler/single-file-agents" -> "disler/aider-mcp-server"
"disler/single-file-agents" -> "disler/claude-code-is-programmable"
"disler/single-file-agents" -> "disler/personal-ai-starter-pack"
"disler/single-file-agents" -> "disler/poc-realtime-ai-assistant"
"disler/single-file-agents" -> "disler/indydevtools"
"disler/single-file-agents" -> "disler/anthropic-computer-use-bash-and-files"
"disler/single-file-agents" -> "disler/llm-prompt-testing-quick-start"
"disler/single-file-agents" -> "disler/always-on-ai-assistant"
"disler/single-file-agents" -> "disler/elm-itv-benchmark"
"Scrapybara/scrapybara-cookbook" -> "Scrapybara/scrapybara-python"
"browserbase/open-operator" -> "browserbase/stagehand"
"browserbase/open-operator" -> "e2b-dev/open-computer-use"
"browserbase/open-operator" -> "e2b-dev/fragments"
"browserbase/open-operator" -> "browser-use/web-ui"
"browserbase/open-operator" -> "browserbase/mcp-server-browserbase"
"browserbase/open-operator" -> "jina-ai/node-DeepResearch"
"browserbase/open-operator" -> "Doriandarko/deepseek-engineer"
"browserbase/open-operator" -> "nickscamara/open-deep-research"
"browserbase/open-operator" -> "mshumer/OpenDeepResearcher"
"browserbase/open-operator" -> "developersdigest/llm-api-engine"
"browserbase/open-operator" -> "groq/groq-appgen"
"browserbase/open-operator" -> "bytedance/UI-TARS"
"browserbase/open-operator" -> "Nutlope/llamacoder"
"browserbase/open-operator" -> "steel-dev/steel-browser"
"browserbase/open-operator" -> "langchain-ai/social-media-agent"
"langchain-ai/langgraph-cua-py" -> "bracesproul/gen-ui-computer-use"
"UCSC-VLAA/MedReason" -> "UCSC-VLAA/m1"
"UCSC-VLAA/MedReason" -> "Babelscape/LLM-Oasis"
"mrdbourke/deep-learning" -> "mrdbourke/spaCy"
"mrdbourke/deep-learning" -> "mrdbourke/fastai"
"browser-use/awesome-prompts" -> "browser-use/awesome-projects"
"browser-use/awesome-prompts" -> "google-gemini/gemini-image-editing-nextjs-quickstart"
"browser-use/awesome-prompts" -> "exa-labs/exa-mcp-server"
"leettools-dev/leettools" -> "pengfeng/ask.py"
"leettools-dev/leettools" -> "linktimecloud/kubernetes-data-platform"
"leettools-dev/leettools" -> "TilmanGriesel/chipper"
"leettools-dev/leettools" -> "LinkTime-Corp/llm-in-containers"
"leettools-dev/leettools" -> "CNTRLAI/Notate"
"leettools-dev/leettools" -> "sammyf/ollimca"
"leettools-dev/leettools" -> "fredconex/PixelLlama"
"i-am-bee/acp" -> "i-am-bee/beeai-platform"
"i-am-bee/acp" -> "i-am-bee/beekeeper"
"i-am-bee/acp" -> "i-am-bee/bee-api"
"i-am-bee/acp" -> "i-am-bee/beeai-code-interpreter"
"i-am-bee/acp" -> "i-am-bee/acp-mcp"
"i-am-bee/acp" -> "i-am-bee/beeai-framework-ts-starter"
"i-am-bee/acp" -> "i-am-bee/bee-ui"
"i-am-bee/acp" -> "i-am-bee/bee-stack"
"i-am-bee/acp" -> "i-am-bee/bee-community-tools"
"QuantGeekDev/mcp-framework" -> "SupportTools/dr-syncer"
"QuantGeekDev/mcp-framework" -> "Trylz/Restir_CPP"
"QuantGeekDev/mcp-framework" -> "spectrumwebco/kled.io"
"QuantGeekDev/mcp-framework" -> "RichartDedekind/NollarsVPN"
"QuantGeekDev/mcp-framework" -> "MasterOfLogic1/UipathLibraries"
"QuantGeekDev/mcp-framework" -> "Chirag-Main1/ChatBot_perosnal"
"QuantGeekDev/mcp-framework" -> "furudo-erika/awesome-postman-alternatives"
"QuantGeekDev/mcp-framework" -> "HMUNACHI/super-lazy-autograd"
"QuantGeekDev/mcp-framework" -> "Webinix-dev/webinix"
"QuantGeekDev/mcp-framework" -> "armorwallet/armor-crypto-mcp"
"QuantGeekDev/mcp-framework" -> "gptBuster/gptBuster"
"QuantGeekDev/mcp-framework" -> "andreyykavv/RynexLLM"
"QuantGeekDev/mcp-framework" -> "melihsoft/adamant"
"QuantGeekDev/mcp-framework" -> "muraliavarma/vue-slot-table"
"QuantGeekDev/mcp-framework" -> "MacroSurfer/MacroSurferFunctions"
"esxr/langgraph-mcp" -> "langchain-ai/langchain-mcp-adapters"
"esxr/langgraph-mcp" -> "langchain-ai/agent-chat-ui"
"esxr/langgraph-mcp" -> "janwilmake/openapi-mcp-server" ["e"=1]
"esxr/langgraph-mcp" -> "langchain-ai/langgraph-bigtool"
"esxr/langgraph-mcp" -> "langchain-ai/langgraph-supervisor-py"
"esxr/langgraph-mcp" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"esxr/langgraph-mcp" -> "teddynote-lab/langgraph-mcp-agents" ["e"=1]
"esxr/langgraph-mcp" -> "hinthornw/trustcall"
"esxr/langgraph-mcp" -> "jwa91/LangGraph-Expense-Tracker"
"esxr/langgraph-mcp" -> "langchain-ai/langchainjs-mcp-adapters"
"ajac-zero/example-rag-app" -> "dkruyt/WebRAgent"
"ajac-zero/example-rag-app" -> "Emissary-Tech/legit-rag"
"ajac-zero/example-rag-app" -> "rahmansahinler1/doclink"
"atilsamancioglu/LanguageModel" -> "alicankiraz1/LLMRipper"
"shinhyo/OllamaTalk" -> "Babelscape/LLM-Oasis"
"ai-christianson/RA.Aid" -> "langchain-ai/local-deep-researcher"
"ai-christianson/RA.Aid" -> "Grigorij-Dudnik/Clean-Coder-AI" ["e"=1]
"ai-christianson/RA.Aid" -> "simular-ai/Agent-S"
"ai-christianson/RA.Aid" -> "microsoft/RD-Agent"
"ai-christianson/RA.Aid" -> "wonderwhy-er/DesktopCommanderMCP"
"ai-christianson/RA.Aid" -> "block/goose"
"ai-christianson/RA.Aid" -> "yuruotong1/autoMate"
"ai-christianson/RA.Aid" -> "MODSetter/SurfSense"
"ai-christianson/RA.Aid" -> "ruvnet/sparc" ["e"=1]
"ai-christianson/RA.Aid" -> "e2b-dev/fragments"
"ai-christianson/RA.Aid" -> "RIP-Comm/sossoldi"
"ai-christianson/RA.Aid" -> "Fosowl/agenticSeek"
"ai-christianson/RA.Aid" -> "Zipstack/unstract"
"ai-christianson/RA.Aid" -> "hotheadhacker/awesome-selfhost-docker" ["e"=1]
"ai-christianson/RA.Aid" -> "gptme/gptme"
"CopilotKit/open-multi-agent-canvas" -> "CopilotKit/open-research-ANA"
"CopilotKit/open-multi-agent-canvas" -> "langchain-ai/langgraphjs-gen-ui-examples"
"CopilotKit/open-multi-agent-canvas" -> "langchain-ai/agent-chat-ui"
"CopilotKit/open-multi-agent-canvas" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"CopilotKit/open-multi-agent-canvas" -> "zamalali/InboxHero"
"CopilotKit/open-multi-agent-canvas" -> "wassim249/YT-Navigator"
"CopilotKit/open-multi-agent-canvas" -> "rango-ramesh/advanced-chunker"
"CopilotKit/open-multi-agent-canvas" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"CopilotKit/open-multi-agent-canvas" -> "jolovicdev/shandu"
"CopilotKit/open-multi-agent-canvas" -> "von-development/awesome-LangGraph"
"CopilotKit/open-multi-agent-canvas" -> "langchain-ai/llmanager"
"CopilotKit/open-multi-agent-canvas" -> "langchain-ai/agent-inbox"
"CopilotKit/open-multi-agent-canvas" -> "alonlavian/RAGent"
"CopilotKit/open-multi-agent-canvas" -> "hrithikkoduri/WebRover"
"CopilotKit/open-multi-agent-canvas" -> "langchain-ai/langgraph-swarm-py"
"bodo-run/yek" -> "yamadashy/repomix"
"bodo-run/yek" -> "GreatScottyMac/RooFlow" ["e"=1]
"bodo-run/yek" -> "Goldziher/kreuzberg"
"bodo-run/yek" -> "superglue-ai/superglue" ["e"=1]
"bodo-run/yek" -> "simonw/files-to-prompt"
"bodo-run/yek" -> "lmnr-ai/index"
"bodo-run/yek" -> "Om-Alve/smolGPT"
"bodo-run/yek" -> "Bhartendu-Kumar/rules_template" ["e"=1]
"bodo-run/yek" -> "tesserato/CodeWeaver"
"bodo-run/yek" -> "trycua/cua"
"bodo-run/yek" -> "maynetee/codeselect"
"bodo-run/yek" -> "steel-dev/steel-browser"
"bodo-run/yek" -> "lightpanda-io/browser"
"bodo-run/yek" -> "stuzero/pg-mcp-server"
"bodo-run/yek" -> "nexsol-technologies/pgassistant" ["e"=1]
"HazyResearch/minions" -> "convergence-ai/proxy-lite"
"coder/agentapi" -> "ericpaulsen/coder-aks"
"coder/agentapi" -> "stanford-mast/blast"
"coder/agentapi" -> "coder/guts"
"rbrown101010/yapsearch" -> "exa-labs/exa-deepseek-chat"
"rango-ramesh/advanced-chunker" -> "project-ryoma/ryoma" ["e"=1]
"rango-ramesh/advanced-chunker" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"rango-ramesh/advanced-chunker" -> "cab938/jupyter_tool"
"rango-ramesh/advanced-chunker" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"rango-ramesh/advanced-chunker" -> "CopilotKit/open-multi-agent-canvas"
"rango-ramesh/advanced-chunker" -> "Deluxer/oliva"
"rango-ramesh/advanced-chunker" -> "jolovicdev/shandu"
"rango-ramesh/advanced-chunker" -> "langchain-ai/langgraphjs-gen-ui-examples"
"langchain-ai/langchainjs-mcp-adapters" -> "langchain-ai/create-agent-chat-app"
"Quentin-aq/ai-build" -> "Stirito/N8N_Workflow_Template"
"leonardsellem/n8n-mcp-server" -> "makafeli/n8n-workflow-builder"
"leonardsellem/n8n-mcp-server" -> "liuyoshio/mcp-compass"
"leonardsellem/n8n-mcp-server" -> "ZubeidHendricks/youtube-mcp-server" ["e"=1]
"leonardsellem/n8n-mcp-server" -> "vivekVells/mcp-pandoc" ["e"=1]
"leonardsellem/n8n-mcp-server" -> "ckreiling/mcp-server-docker" ["e"=1]
"mims-harvard/TxAgent" -> "mims-harvard/ToolUniverse"
"mims-harvard/TxAgent" -> "UCSC-VLAA/MedReason"
"mims-harvard/TxAgent" -> "showlab/MovieAgent"
"jackfriks/expo-app-boilerplate" -> "ln-dev7/square-ui" ["e"=1]
"jackfriks/expo-app-boilerplate" -> "instructa/viber3d"
"jackfriks/expo-app-boilerplate" -> "sullyo/webapp-starter"
"jackfriks/expo-app-boilerplate" -> "ShenSeanChen/launch-mvp-stripe-nextjs-supabase"
"langchain-ai/langmem" -> "langchain-ai/langgraph-supervisor-py"
"langchain-ai/langmem" -> "hinthornw/trustcall"
"langchain-ai/langmem" -> "langchain-ai/langgraph-bigtool"
"langchain-ai/langmem" -> "langchain-ai/langgraph-swarm-py"
"langchain-ai/langmem" -> "langchain-ai/agent-chat-ui"
"langchain-ai/langmem" -> "langchain-ai/langgraph-reflection"
"langchain-ai/langmem" -> "langchain-ai/agent-inbox"
"langchain-ai/langmem" -> "andrestorres123/breeze-agent"
"langchain-ai/langmem" -> "langchain-ai/company-researcher"
"langchain-ai/langmem" -> "langchain-ai/memory-agent"
"langchain-ai/langmem" -> "langchain-ai/langchain-mcp-adapters"
"langchain-ai/langmem" -> "langchain-ai/langgraph-codeact"
"langchain-ai/langmem" -> "langchain-ai/langgraph-fullstack-python"
"langchain-ai/langmem" -> "langchain-ai/memory-template"
"langchain-ai/langmem" -> "von-development/awesome-LangGraph"
"langchain-ai/langgraphjs-gen-ui-examples" -> "langchain-ai/agent-chat-ui"
"langchain-ai/langgraphjs-gen-ui-examples" -> "CopilotKit/open-multi-agent-canvas"
"langchain-ai/langgraphjs-gen-ui-examples" -> "langchain-ai/create-agent-chat-app"
"langchain-ai/langgraphjs-gen-ui-examples" -> "alonlavian/RAGent"
"langchain-ai/langgraph-codeact" -> "langchain-ai/langgraph-bigtool"
"langchain-ai/langgraph-codeact" -> "von-development/awesome-LangGraph"
"langchain-ai/langgraph-codeact" -> "langchain-ai/langgraph-supervisor-py"
"langchain-ai/langgraph-codeact" -> "langchain-ai/agent-chat-ui"
"langchain-ai/langgraph-codeact" -> "hinthornw/trustcall"
"langchain-ai/langgraph-codeact" -> "langchain-ai/langgraph-swarm-py"
"langchain-ai/langgraph-codeact" -> "langchain-ai/openevals"
"langchain-ai/langgraph-codeact" -> "langchain-ai/langgraph-fullstack-python"
"langchain-ai/langgraph-codeact" -> "langchain-ai/langgraph-cua-py"
"langchain-ai/langgraph-codeact" -> "bracesproul/gen-ui-computer-use"
"langchain-ai/langgraph-codeact" -> "langchain-ai/langmem"
"langchain-ai/langgraph-codeact" -> "langchain-ai/mcpdoc"
"langchain-ai/langgraph-codeact" -> "foreveryh/mentis" ["e"=1]
"langchain-ai/langgraph-codeact" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"langchain-ai/langgraph-codeact" -> "zamalali/DeepGit"
"cobaltcore-dev/openstack-nix" -> "cyberus-technology/cloud-hypervisor"
"cobaltcore-dev/openstack-nix" -> "phip1611/gitlab-timelogs"
"pipecat-ai/gemini-webrtc-web-simple" -> "pipecat-ai/gemini-multimodal-live-demo"
"pipecat-ai/gemini-webrtc-web-simple" -> "notedit/TransRouter" ["e"=1]
"YunQiAI/OpenManusWeb" -> "AlvinWu7/OpenManu"
"YunQiAI/OpenManusWeb" -> "Shybert-AI/OpenManus-WebUI"
"moondevonyt/ZerePy" -> "moondevonyt/agent-zero"
"moondevonyt/ZerePy" -> "moondevonyt/eliza"
"moondevonyt/ZerePy" -> "moondevonyt/learn-typescript-from-python"
"i-am-bee/beeai-platform" -> "i-am-bee/acp"
"i-am-bee/beeai-platform" -> "i-am-bee/beeai-framework"
"i-am-bee/beeai-platform" -> "i-am-bee/bee-stack"
"i-am-bee/beeai-platform" -> "i-am-bee/beeai-framework-ts-starter"
"i-am-bee/beeai-platform" -> "i-am-bee/beekeeper"
"i-am-bee/beeai-platform" -> "i-am-bee/bee-api"
"i-am-bee/beeai-platform" -> "i-am-bee/beeai-code-interpreter"
"i-am-bee/beeai-platform" -> "i-am-bee/acp-mcp"
"i-am-bee/beeai-platform" -> "i-am-bee/bee-ui"
"vercel-labs/mcp-on-vercel" -> "vercel-labs/mcp-for-next.js"
"vercel-labs/mcp-on-vercel" -> "vercel-labs/ai-sdk-slackbot"
"TensorBlock/awesome-mcp-servers" -> "Chirag-Main1/ChatBot_perosnal"
"TensorBlock/awesome-mcp-servers" -> "Webinix-dev/webinix"
"TensorBlock/awesome-mcp-servers" -> "MacroSurfer/MacroSurferFunctions"
"TensorBlock/awesome-mcp-servers" -> "leopoldjoy/simple-smart-wallet"
"TensorBlock/awesome-mcp-servers" -> "muraliavarma/vue-slot-table"
"TensorBlock/awesome-mcp-servers" -> "andreyykavv/RynexLLM"
"TensorBlock/awesome-mcp-servers" -> "magicuidesign/mcp"
"TensorBlock/awesome-mcp-servers" -> "furudo-erika/awesome-postman-alternatives"
"TensorBlock/awesome-mcp-servers" -> "LyvoAI/lyvo"
"TensorBlock/awesome-mcp-servers" -> "emotion-block/project-elara"
"TensorBlock/awesome-mcp-servers" -> "MasterOfLogic1/UipathLibraries"
"TensorBlock/awesome-mcp-servers" -> "tughw/ComfyUI-FramePack"
"TensorBlock/awesome-mcp-servers" -> "KewbitXMR/haveno-app"
"TensorBlock/awesome-mcp-servers" -> "RoyGeagea/inventory-management"
"TensorBlock/awesome-mcp-servers" -> "gptBuster/gptBuster"
"disler/claude-code-is-programmable" -> "disler/just-prompt"
"disler/claude-code-is-programmable" -> "disler/claude-3-7-sonnet-starter-pack"
"loopwork-ai/emcee" -> "wanaku-ai/wanaku"
"loopwork-ai/emcee" -> "loopwork-ai/hype"
"Operative-Sh/web-eval-agent" -> "authed-dev/authed"
"Operative-Sh/web-eval-agent" -> "mlop-ai/mlop"
"Operative-Sh/web-eval-agent" -> "HelixDB/helix-db"
"Operative-Sh/web-eval-agent" -> "airweave-ai/airweave"
"Operative-Sh/web-eval-agent" -> "getprobo/probo"
"Operative-Sh/web-eval-agent" -> "simstudioai/sim"
"Operative-Sh/web-eval-agent" -> "chonkie-inc/chonkie"
"Operative-Sh/web-eval-agent" -> "JasonGross/autoformalization-transpilation"
"Operative-Sh/web-eval-agent" -> "The-LLM-Data-Company/doteval"
"Operative-Sh/web-eval-agent" -> "blaxel-ai/sdk-python"
"Operative-Sh/web-eval-agent" -> "morphik-org/morphik-core"
"Operative-Sh/web-eval-agent" -> "snagasuri/deebo-prototype" ["e"=1]
"Operative-Sh/web-eval-agent" -> "plexe-ai/plexe"
"Operative-Sh/web-eval-agent" -> "trycua/cua"
"Operative-Sh/web-eval-agent" -> "magnitudedev/magnitude"
"coleam00/mcp-mem0" -> "coleam00/local-ai-packaged"
"coleam00/mcp-mem0" -> "coleam00/supabase-mcp"
"coleam00/mcp-mem0" -> "coleam00/mcp-crawl4ai-rag"
"coleam00/mcp-mem0" -> "mem0ai/mem0-mcp"
"coleam00/mcp-mem0" -> "coleam00/pydantic-ai-github-agent"
"coleam00/mcp-mem0" -> "coleam00/ottomator-agents"
"webmonch/hide-my-mail-cloudflare" -> "theseusXYZ/theseusXYZ"
"webmonch/hide-my-mail-cloudflare" -> "SolSndy/SolSandwich-Solana-Sandwich-bot"
"webmonch/hide-my-mail-cloudflare" -> "Rootly-AI-Labs/Rootly-MCP-server"
"webmonch/hide-my-mail-cloudflare" -> "openqquantify/OpenQQuantify-Cesium-Digital-Twins-Simulations"
"webmonch/hide-my-mail-cloudflare" -> "Canuck-Gamblers/Best-Online-Casino-Canada-2025-Top-5-Real-Money-Sites"
"webmonch/hide-my-mail-cloudflare" -> "balajikandavel/book-recommendation-engine"
"webmonch/hide-my-mail-cloudflare" -> "Trylz/RestirFalcor"
"webmonch/hide-my-mail-cloudflare" -> "Dokan-E-Commerce/compliance-laravel-sdk"
"webmonch/hide-my-mail-cloudflare" -> "dex-checker/dex-checker-solana-evm-wallets"
"webmonch/hide-my-mail-cloudflare" -> "infovlad/reverse-email-lookup"
"webmonch/hide-my-mail-cloudflare" -> "cptcr/schedule-one-tool"
"webmonch/hide-my-mail-cloudflare" -> "wah2pro/Snapchat-Hacking"
"webmonch/hide-my-mail-cloudflare" -> "cyberharish/solana-pumpfun-bundler-volume-bot"
"webmonch/hide-my-mail-cloudflare" -> "nmsdvid/react-native-perfect-ui"
"webmonch/hide-my-mail-cloudflare" -> "KewbitXMR/haveno-app"
"ThinkInAIXYZ/go-mcp" -> "metoro-io/mcp-golang" ["e"=1]
"ThinkInAIXYZ/go-mcp" -> "mark3labs/mcp-go"
"ThinkInAIXYZ/go-mcp" -> "ThinkInAIXYZ/deepchat"
"ThinkInAIXYZ/go-mcp" -> "cloudwego/eino" ["e"=1]
"ThinkInAIXYZ/go-mcp" -> "mark3labs/mcphost" ["e"=1]
"epuerta9/deep-research-py" -> "fdarkaou/open-deep-research"
"AstraBert/llama-4-researcher" -> "run-llama/llamacloud-mcp"
"WujiangXu/AgenticMemory" -> "agiresearch/A-mem"
"SynaLinks/synalinks" -> "SynaLinks/neuro-symbolic-LLMs-handbook"
"SynaLinks/synalinks" -> "SynaLinks/HybridAGI"
"mlop-ai/mlop" -> "JasonGross/autoformalization-transpilation"
"mlop-ai/mlop" -> "The-LLM-Data-Company/doteval"
"mlop-ai/mlop" -> "authed-dev/authed"
"mlop-ai/mlop" -> "blaxel-ai/sdk-python"
"langchain-ai/openevals" -> "langchain-ai/agentevals"
"langchain-ai/openevals" -> "langchain-ai/langgraph-swarm-py"
"langchain-ai/openevals" -> "langchain-ai/langgraph-supervisor-py"
"langchain-ai/openevals" -> "hinthornw/trustcall"
"langchain-ai/openevals" -> "von-development/awesome-LangGraph"
"langchain-ai/openevals" -> "langchain-ai/langgraph-codeact"
"langchain-ai/openevals" -> "langchain-ai/agent-inbox"
"langchain-ai/openevals" -> "langchain-ai/langgraph-cua-py"
"clchinkc/stockchat" -> "clchinkc/streamlit-editor"
"hrithikkoduri/WebRover" -> "langchain-ai/langgraph-supervisor-py"
"hrithikkoduri/WebRover" -> "langchain-ai/social-media-agent"
"hrithikkoduri/WebRover" -> "multinear-demo/demo-bank-support-lc-py"
"hrithikkoduri/WebRover" -> "neural-maze/ava-whatsapp-agent-course"
"hrithikkoduri/WebRover" -> "langchain-ai/agent-inbox"
"hrithikkoduri/WebRover" -> "CopilotKit/open-multi-agent-canvas"
"hrithikkoduri/WebRover" -> "von-development/awesome-LangGraph"
"hrithikkoduri/WebRover" -> "langchain-ai/langgraph-swarm-py"
"hrithikkoduri/WebRover" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"hrithikkoduri/WebRover" -> "athina-ai/rag-cookbooks"
"hrithikkoduri/WebRover" -> "Clevrr-AI/Clevrr-Computer"
"hrithikkoduri/WebRover" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"hrithikkoduri/WebRover" -> "CopilotKit/open-research-ANA"
"hrithikkoduri/WebRover" -> "BragAI/bRAG-langchain"
"hrithikkoduri/WebRover" -> "wassim249/YT-Navigator"
"harishsg993010/LLM-Reasoner" -> "Dicklesworthstone/your-source-to-prompt.html"
"harishsg993010/LLM-Reasoner" -> "specstoryai/getspecstory"
"harishsg993010/LLM-Reasoner" -> "trycua/acu"
"harishsg993010/LLM-Reasoner" -> "tom-doerr/perplexity_search"
"harishsg993010/LLM-Reasoner" -> "echohive42/deepdeek-r1-experiments"
"harishsg993010/LLM-Reasoner" -> "harishdeivanayagam/rowfill"
"harishsg993010/LLM-Reasoner" -> "clchinkc/stockchat"
"harishsg993010/LLM-Reasoner" -> "supavec/supavec"
"13point5/gemini-cursor" -> "e2b-dev/open-computer-use"
"openai/openai-structured-outputs-samples" -> "openai/openai-realtime-twilio-demo" ["e"=1]
"openai/openai-structured-outputs-samples" -> "openai/openai-realtime-solar-system" ["e"=1]
"openai/openai-structured-outputs-samples" -> "reflex-dev/reflex-llm-examples"
"openai/openai-structured-outputs-samples" -> "exa-labs/company-researcher"
"openai/openai-structured-outputs-samples" -> "openai/openai-realtime-console"
"openai/openai-structured-outputs-samples" -> "echohive42/AI-reads-books-page-by-page"
"openai/openai-structured-outputs-samples" -> "jank/curiosity"
"openai/openai-structured-outputs-samples" -> "langchain-ai/agent-inbox"
"openai/openai-structured-outputs-samples" -> "echohive42/AI-book-maker-with-perplexity-search-grounding"
"openai/openai-structured-outputs-samples" -> "echohive42/deepdeek-r1-experiments"
"hotovo/aider-desk" -> "lutzleonhardt/mcpm-aider"
"hotovo/aider-desk" -> "disler/aider-mcp-server"
"sofi444/realtime-transcription-fastrtc" -> "Deluxer/oliva"
"sofi444/realtime-transcription-fastrtc" -> "wassim249/YT-Navigator"
"sofi444/realtime-transcription-fastrtc" -> "freddyaboulton/orpheus-cpp" ["e"=1]
"sofi444/realtime-transcription-fastrtc" -> "philschmid/gemini-samples"
"sofi444/realtime-transcription-fastrtc" -> "gradio-app/fastrtc"
"sofi444/realtime-transcription-fastrtc" -> "chaolongy/KDTalker" ["e"=1]
"Jason2Brownlee/awesome-llm-books" -> "PacktPublishing/LLM-Engineers-Handbook"
"makerkit/nextjs-saas-starter-kit-lite" -> "makerkit/react-native-expo-turbo-saas-kit"
"NanGePlus/MCPTest" -> "NanGePlus/LLMTest"
"tom-doerr/simpledspy" -> "tom-doerr/llm_api_testing"
"HarleyCoops/Math-To-Manim" -> "marcelo-earth/generative-manim" ["e"=1]
"HarleyCoops/Math-To-Manim" -> "TIGER-AI-Lab/TheoremExplainAgent" ["e"=1]
"HarleyCoops/Math-To-Manim" -> "AK391/ai-gradio"
"HarleyCoops/Math-To-Manim" -> "langchain-ai/social-media-agent"
"HarleyCoops/Math-To-Manim" -> "exa-labs/company-researcher"
"HarleyCoops/Math-To-Manim" -> "bklieger-groq/mathtutor-on-groq"
"HarleyCoops/Math-To-Manim" -> "satvik314/opensource_notebooklm"
"HarleyCoops/Math-To-Manim" -> "cxcscmu/Craw4LLM" ["e"=1]
"HarleyCoops/Math-To-Manim" -> "Alibaba-NLP/CHRONOS" ["e"=1]
"HarleyCoops/Math-To-Manim" -> "developersdigest/llm-api-engine"
"HarleyCoops/Math-To-Manim" -> "echohive42/AI-reads-books-page-by-page"
"HarleyCoops/Math-To-Manim" -> "helblazer811/diffusion-visualizations"
"HarleyCoops/Math-To-Manim" -> "wisupai/e2m"
"HarleyCoops/Math-To-Manim" -> "kturung/langgraph_streamlit_codeassistant"
"lutzleonhardt/mcpm-aider" -> "hotovo/aider-desk"
"lutzleonhardt/mcpm-aider" -> "MCP-Club/mcpm"
"lutzleonhardt/mcpm-aider" -> "disler/aider-mcp-server"
"neural-maze/rick-llm" -> "neural-maze/vector-twin"
"Developer-MultiGroup/GenerativeAI-Fundamentals-With-Gemini" -> "KardelRuveyda/gemini-devmultigroup-example"
"philschmid/gemini-samples" -> "von-development/awesome-LangGraph"
"philschmid/gemini-samples" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"philschmid/gemini-samples" -> "langchain-ai/langgraphjs-gen-ui-examples"
"philschmid/gemini-samples" -> "souvikmajumder26/Multi-Agent-Medical-Assistant"
"philschmid/gemini-samples" -> "CopilotKit/open-multi-agent-canvas"
"philschmid/gemini-samples" -> "datalayer/jupyter-mcp-server" ["e"=1]
"philschmid/gemini-samples" -> "rango-ramesh/advanced-chunker"
"philschmid/gemini-samples" -> "sofi444/realtime-transcription-fastrtc"
"philschmid/gemini-samples" -> "langwatch/create-agent-app" ["e"=1]
"philschmid/gemini-samples" -> "neural-maze/ava-whatsapp-agent-course"
"philschmid/gemini-samples" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"philschmid/gemini-samples" -> "langchain-ai/langgraph-codeact"
"philschmid/gemini-samples" -> "google-gemini/gemini-image-editing-nextjs-quickstart"
"philschmid/gemini-samples" -> "labdmitriy/llm-rag"
"philschmid/gemini-samples" -> "patrickloeber/workshop-build-with-gemini"
"digbenjamins/DexBoostHunter" -> "digbenjamins/SolanaWalletTracker"
"digbenjamins/DexBoostHunter" -> "digbenjamins/TwitterTracker"
"DannyMac180/meta-agent" -> "fiehtle/raycast-internal-search" ["e"=1]
"DannyMac180/meta-agent" -> "assafelovic/gptr-mcp"
"DannyMac180/meta-agent" -> "s-smits/agentic-cursorrules"
"mckaywrigley/r1-automated-pr-example" -> "mckaywrigley/o1-ai-playground"
"mckaywrigley/r1-automated-pr-example" -> "mckaywrigley/level-1-agent-code"
"acquiredsecurity/forensic-timeliner" -> "leopoldjoy/simple-smart-wallet"
"acquiredsecurity/forensic-timeliner" -> "adnxy/optic-react-native"
"liuyoshio/mcp-compass" -> "tesla0225/mcp-create"
"lgesuellip/langgraph-whatsapp-agent" -> "NicholasGoh/fastapi-mcp-langgraph-template"
"ALucek/QuicKB" -> "ALucek/NeedleInAVidStack"
"ALucek/QuicKB" -> "ALucek/ppt2desc"
"ALucek/QuicKB" -> "ALucek/tool-calling-guide"
"ALucek/QuicKB" -> "ALucek/openai-realtime-rag"
"vercel-labs/mcp-for-next.js" -> "vercel-labs/mcp-on-vercel"
"Dawanfe/langmanus-web" -> "Darwin-lfl/langmanus"
"mstrYoda/ml-from-scratch" -> "mstrYoda/production-ready-microservice-example"
"luis22d/ZeroTrace-Panel" -> "Solleryn/FourSniper-four.meme-sniper-bot-bsc"
"luis22d/ZeroTrace-Panel" -> "ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey"
"luis22d/ZeroTrace-Panel" -> "BullaTalina/ip-stresser"
"disler/aider-mcp-server" -> "disler/just-prompt"
"disler/aider-mcp-server" -> "disler/single-file-agents"
"disler/aider-mcp-server" -> "disler/claude-code-is-programmable"
"disler/aider-mcp-server" -> "lutzleonhardt/mcpm-aider"
"USTCAGI/Awesome-Papers-Time-Series-Forecasting" -> "USTCAGI/Awesome-LLM-Table-Mining"
"USTCAGI/Awesome-Papers-Retrieval-Augmented-Generation" -> "USTCAGI/Awesome-LLM-Table-Mining"
"USTCAGI/Awesome-Papers-Retrieval-Augmented-Generation" -> "USTCAGI/Awesome-Papers-Time-Series-Forecasting"
"USTCAGI/Awesome-Papers-Retrieval-Augmented-Generation" -> "USTCAGI/CRAG-in-KDD-Cup2024"
"USTCAGI/Awesome-LLM-Table-Mining" -> "USTCAGI/Awesome-Papers-Time-Series-Forecasting"
"USTCAGI/Awesome-LLM-Table-Mining" -> "USTCAGI/Awesome-Papers-Retrieval-Augmented-Generation"
"mckaywrigley/o1-xml-parser" -> "mckaywrigley/mckays-app-template"
"mckaywrigley/o1-xml-parser" -> "s-smits/agentic-cursorrules"
"mckaywrigley/o1-xml-parser" -> "mckaywrigley/o1-pro-template-system"
"mckaywrigley/o1-xml-parser" -> "codespin-ai/codespin-chrome-extension"
"mckaywrigley/o1-xml-parser" -> "RayFernando1337/llm-cursor-rules"
"mckaywrigley/o1-xml-parser" -> "mendableai/llmstxt-generator"
"mckaywrigley/o1-xml-parser" -> "sullyo/prompt2ui"
"google-gemini/gemini-image-editing-nextjs-quickstart" -> "zaidmukaddam/scira-mcp-chat"
"google-gemini/gemini-image-editing-nextjs-quickstart" -> "openai/openai-voice-agent-sdk-sample" ["e"=1]
"google-gemini/gemini-image-editing-nextjs-quickstart" -> "vercel-labs/ai-sdk-preview-internal-knowledge-base"
"google-gemini/gemini-image-editing-nextjs-quickstart" -> "vercel-labs/ai-sdk-image-generator"
"google-gemini/gemini-image-editing-nextjs-quickstart" -> "vercel-labs/ai-sdk-slackbot"
"vercel-labs/ai-sdk-reasoning-starter" -> "vercel-labs/ai-sdk-preview-attachments"
"vercel-labs/ai-sdk-reasoning-starter" -> "vercel-labs/ai-sdk-preview-multi-steps"
"vercel-labs/ai-sdk-reasoning-starter" -> "vercel-labs/ai-sdk-preview-provider-registry"
"vercel-labs/ai-sdk-reasoning-starter" -> "vercel-labs/ai-sdk-flags-edge-config"
"vercel-labs/ai-sdk-reasoning-starter" -> "vercel-labs/ai-sdk-slackbot"
"vercel-labs/ai-sdk-reasoning-starter" -> "vercel-labs/ai-sdk-preview-use-object"
"danilofalcao/cursor-deepseek" -> "s-smits/agentic-cursorrules"
"danilofalcao/cursor-deepseek" -> "techcow2/cursor-agent-tracking"
"daydy-dev/moon-dev-ai-agents-for-trading" -> "MrFadiAi/ai-agents-for-trading"
"daydy-dev/moon-dev-ai-agents-for-trading" -> "moondevonyt/ZerePy"
"The-Pocket/PocketFlow-Template-Python" -> "The-Pocket/PocketFlow-Typescript"
"Shybert-AI/OpenManus-WebUI" -> "Dbbc00/OpenManus-Web"
"Shybert-AI/OpenManus-WebUI" -> "YunQiAI/OpenManusWeb"
"Shybert-AI/OpenManus-WebUI" -> "raydoomed/nephesh"
"Shybert-AI/OpenManus-WebUI" -> "ToMatrgod/OpenManusUi"
"raydoomed/nephesh" -> "iHeyTang/OpenManus"
"raydoomed/nephesh" -> "lumina-lumi/OpenManus-AutoQuant"
"ansh/deeperseeker-app" -> "Galaxies-dev/chatgpt-clone-react-native"
"iHeyTang/OpenManus" -> "raydoomed/nephesh"
"modal-labs/libmodal" -> "modal-labs/ci-on-modal"
"e2b-dev/surf" -> "e2b-dev/desktop"
"e2b-dev/surf" -> "e2b-dev/open-computer-use"
"e2b-dev/surf" -> "e2b-dev/ai-analyst"
"ALucek/agentic-memory" -> "ALucek/tool-calling-guide"
"ALucek/agentic-memory" -> "ALucek/QuicKB"
"ALucek/agentic-memory" -> "ALucek/GraphRAG-Breakdown"
"ALucek/agentic-memory" -> "ALucek/llama3-websearch-agent"
"ashishpatel26/AIAgentWorkshop" -> "ashishpatel26/500-AI-Agents-Projects"
"GongRzhe/Office-PowerPoint-MCP-Server" -> "socamalo/PPT_MCP_Server"
"GongRzhe/Office-PowerPoint-MCP-Server" -> "supercurses/powerpoint"
"GongRzhe/Office-PowerPoint-MCP-Server" -> "Ichigo3766/powerpoint-mcp"
"VectifyAI/PageIndex" -> "mozilla-ai/any-agent"
"VectifyAI/PageIndex" -> "tjmlabs/ColiVara"
"VectifyAI/PageIndex" -> "MotiaDev/motia"
"VectifyAI/PageIndex" -> "wassim249/fastapi-langgraph-agent-production-ready-template"
"VectifyAI/PageIndex" -> "MinishLab/model2vec"
"VectifyAI/PageIndex" -> "Deluxer/oliva"
"VectifyAI/PageIndex" -> "langwatch/langwatch"
"VectifyAI/PageIndex" -> "shcherbak-ai/contextgem"
"VectifyAI/PageIndex" -> "langchain-ai/langgraph-codeact"
"VectifyAI/PageIndex" -> "lgesuellip/langgraph-whatsapp-agent"
"VectifyAI/PageIndex" -> "brandonstarxel/chunking_evaluation"
"AnimaVR/NeuroSync_Trainer_Lite" -> "AnimaVR/NeuroSync_Player"
"AnimaVR/NeuroSync_Trainer_Lite" -> "AnimaVR/NeuroSync_Local_API"
"AnimaVR/NeuroSync_Trainer_Lite" -> "AnimaVR/NeuroSync_Real-Time_API"
"AnimaVR/NeuroSync_Real-Time_API" -> "AnimaVR/NeuroSync_Local_API"
"henni99/WriteBuddy" -> "seonghunYang/i18nmatic"
"henni99/WriteBuddy" -> "NLPOptimize/flash-tokenizer"
"henni99/WriteBuddy" -> "sjy-dv/coltt"
"henni99/WriteBuddy" -> "GOLFROCHAIN/GOLFRO-CONTRACT"
"henni99/WriteBuddy" -> "SBCC-World/SBCC-CONTRACT"
"seonghunYang/i18nmatic" -> "henni99/WriteBuddy"
"mustafaozhan/FirebaseMessagingApp" -> "mustafaozhan/CosmeticScan"
"mustafaozhan/FirebaseMessagingApp" -> "mustafaozhan/Arc-Maia-Grey-Theme"
"makafeli/n8n-workflow-builder" -> "illuminaresolutions/n8n-mcp-server"
"makafeli/n8n-workflow-builder" -> "leonardsellem/n8n-mcp-server"
"vercel-labs/ai-sdk-slackbot" -> "nicoalbanese/aie-feb-25-starter"
"cactus-compute/cactus" -> "Webinix-dev/webinix"
"attunehq/attune" -> "mlop-ai/mlop"
"attunehq/attune" -> "blaxel-ai/sdk-python"
"disler/pocket-pick" -> "disler/just-prompt"
"disler/pocket-pick" -> "disler/single-file-agents"
"disler/pocket-pick" -> "disler/claude-code-is-programmable"
"disler/pocket-pick" -> "disler/claude-3-7-sonnet-starter-pack"
"johnpeterman72/CursorRIPER" -> "johnpeterman72/CursorRIPER.sigma"
"fbilhaut/gline-rs" -> "Knowledgator/GLiNER.cpp"
"echohive42/AI-book-maker-with-perplexity-search-grounding" -> "echohive42/10-000-chatbot-prompts"
"ibm-granite-community/granite-retrieval-agent" -> "ibm-granite-community/granite-snack-cookbook"
"ALucek/ppt2desc" -> "ALucek/NeedleInAVidStack"
"ALucek/ppt2desc" -> "ALucek/QuicKB"
"ALucek/ppt2desc" -> "ALucek/tool-calling-guide"
"alicankiraz1/PrivacyGuardian" -> "alicankiraz1/Hyperion-SAST-Ai.Agent"
"alicankiraz1/Hyperion-SAST-Ai.Agent" -> "alicankiraz1/PrivacyGuardian"
"Stirito/N8N_Workflow_Template" -> "Quentin-aq/ai-build"
"conor-is-my-name/n8n-autoscaling" -> "Xavi1995/n8n_execution_report"
"jgravelle/PocketgroqPKE" -> "jgravelle/Py2md"
"jgravelle/PocketgroqPKE" -> "jgravelle/MiniGroqqle"
"jgravelle/PocketgroqPKE" -> "jgravelle/AutogroqAgent"
"authed-dev/authed" -> "mlop-ai/mlop"
"authed-dev/authed" -> "JasonGross/autoformalization-transpilation"
"authed-dev/authed" -> "The-LLM-Data-Company/doteval"
"authed-dev/authed" -> "blaxel-ai/sdk-python"
"authed-dev/authed" -> "getprobo/probo"
"authed-dev/authed" -> "HelixDB/helix-db"
"authed-dev/authed" -> "CatchTheTornado/open-agents-builder" ["e"=1]
"JasonGross/autoformalization-transpilation" -> "The-LLM-Data-Company/doteval"
"JasonGross/autoformalization-transpilation" -> "mlop-ai/mlop"
"JasonGross/autoformalization-transpilation" -> "blaxel-ai/sdk-python"
"langchain-ai/agentevals" -> "langchain-ai/openevals"
"disler/claude-3-7-sonnet-starter-pack" -> "disler/claude-code-is-programmable"
"disler/claude-3-7-sonnet-starter-pack" -> "disler/single-file-agents"
"Krish120003/zercel" -> "Krish120003/gitfaster"
"Krish120003/gitfaster" -> "ekmigasari/wfcOS"
"Krish120003/gitfaster" -> "Krish120003/zercel"
"Krish120003/gitfaster" -> "crafter-station/text0"
"Nutlope/loras-dev" -> "Nutlope/description-generator"
"ibm-functions/shell" -> "ibm-functions/composer"
"ibm-functions/shell" -> "apache/openwhisk-client-js"
"ibm-functions/shell" -> "IBM/solsa"
"disler/just-prompt" -> "disler/aider-mcp-server"
"disler/just-prompt" -> "disler/claude-code-is-programmable"
"disler/just-prompt" -> "disler/pocket-pick"
"disler/just-prompt" -> "disler/single-file-agents"
"disler/just-prompt" -> "disler/reusable-openai-fine-tune"
"disler/just-prompt" -> "disler/claude-3-7-sonnet-starter-pack"
"disler/just-prompt" -> "disler/anthropic-computer-use-bash-and-files"
"disler/just-prompt" -> "disler/personal-ai-starter-pack"
"owengretzinger/gitreadme" -> "Krish120003/zercel"
"supercurses/powerpoint" -> "Ichigo3766/powerpoint-mcp"
"supercurses/powerpoint" -> "GongRzhe/Office-PowerPoint-MCP-Server"
"ShawhinT/AI-Builders-Bootcamp-2" -> "ShawhinT/AI-Builders-Bootcamp-1"
"mrdbourke/LearnPythonTheHardWay" -> "mrdbourke/deep-learning"
"langchain-ai/llmanager" -> "jacoblee93/corrective-local-rag-qwen"
"langchain-ai/llmanager" -> "maxxxara/linear-agent"
"tacticlaunch/mcp-linear" -> "tacticlaunch/cursor-bank"
"coleam00/supabase-mcp" -> "coleam00/n8n-nodes-mcp"
"IBM/watsonx-developer-hub" -> "IBM/watsonx-ai-platform-demos"
"neLNABR/MegaETH-Auto" -> "BullaTalina/ip-stresser"
"aipotheosis-labs/aci-mcp" -> "aipotheosis-labs/aci-python-sdk"
"aipotheosis-labs/aci-mcp" -> "aipotheosis-labs/aci-agents"
"zhaoqie/gmgn_smart" -> "gevffy/gmgn-scraper"
"johnpeterman72/CursorRIPER.sigma" -> "johnpeterman72/CursorRIPER"
"The-Pocket/PocketFlow-Typescript" -> "zvictor/BrainyFlow"
"neuml/staticvectors" -> "MinishLab/evaluation"
"Red-Hat-AI-Innovation-Team/async-grpo" -> "Red-Hat-AI-Innovation-Team/sdg_hub"
"blaxel-ai/sdk-python" -> "JasonGross/autoformalization-transpilation"
"blaxel-ai/sdk-python" -> "mlop-ai/mlop"
"blaxel-ai/sdk-python" -> "The-LLM-Data-Company/doteval"
"banditburai/daisyft" -> "banditburai/ft-datastar"
"lumina-lumi/OpenManus-AutoQuant" -> "LouisCan/OpenManus_UIToCode"
"sndraw/bookroom" -> "sndraw/sndraw-work"
"sndraw/bookroom" -> "sndraw/LightRAG-Multi"
"The-LLM-Data-Company/doteval" -> "JasonGross/autoformalization-transpilation"
"i-am-bee/beekeeper" -> "i-am-bee/bee-proto"
"i-am-bee/beekeeper" -> "i-am-bee/bee-api"
"ALucek/NeedleInAVidStack" -> "ALucek/QuicKB"
"ALucek/NeedleInAVidStack" -> "ALucek/ppt2desc"
"SuveenE/codenames-ai" -> "SuveenE/photos2movie"
"moondevonyt/eliza" -> "moondevonyt/agent-zero"
"moondevonyt/eliza" -> "moondevonyt/ZerePy"
"moondevonyt/eliza" -> "moondevonyt/Moon-Dev-Code"
"moondevonyt/eliza" -> "moondevonyt/learn-typescript-from-python"
"jgravelle/OpenAI-AgentsSDK-GUI" -> "jgravelle/AutogroqAgent"
"jgravelle/OpenAI-AgentsSDK-GUI" -> "jgravelle/shugok-ai"
"jgravelle/OpenAI-AgentsSDK-GUI" -> "jgravelle/Py2md"
"jgravelle/OpenAI-AgentsSDK-GUI" -> "jgravelle/MiniGroqqle"
"daily-co/pipecat-cloud-starter" -> "pipecat-ai/open-sesame"
"coleam00/pydantic-ai-github-agent" -> "coleam00/n8n-nodes-mcp"
"coleam00/pydantic-ai-github-agent" -> "coleam00/midnight-converse"
"opendatahub-io/llama-stack-demos" -> "opendatahub-io/ilab-on-ocp"
"opendatahub-io/llama-stack-demos" -> "redhat-et/llm-agents"
"jokyun/langmanus" -> "jokyun/langmanus-web"
"mixedbread-ai/mxbai-rerank" -> "mixedbread-ai/ofen"
"sndraw/sndraw-work" -> "sndraw/bookroom"
"sndraw/sndraw-work" -> "sndraw/LightRAG-Multi"
"mckaywrigley/level-1-agent-code" -> "mckaywrigley/typescript-starter"
"moondevonyt/goose" -> "moondevonyt/ZerePy"
"moondevonyt/goose" -> "moondevonyt/agent-zero"
"sndraw/LightRAG-Multi" -> "sndraw/sndraw-work"
"Scrapybara/scrapybara-ts-template" -> "Scrapybara/scrapybara-ts"
"jokyun/langmanus-web" -> "jokyun/langmanus"
"digbenjamins/SolanaWalletTracker" -> "digbenjamins/TwitterTracker"
"digbenjamins/SolanaWalletTracker" -> "digbenjamins/DexBoostHunter"
"mbakgun/dspy-examples" -> "clchinkc/streamlit-editor"
"mrdbourke/awesome-courses" -> "mrdbourke/deep-learning"
"mrdbourke/awesome-courses" -> "mrdbourke/fastai"
"mrdbourke/awesome-courses" -> "mrdbourke/learnopencv"
"digbenjamins/TwitterTracker" -> "digbenjamins/SolanaWalletTracker"
"coleam00/n8n-nodes-mcp" -> "coleam00/pydantic-ai-github-agent"
"mrdbourke/Udacity_DLND_Projects" -> "mrdbourke/deep-learning"
"microsoft/presidio" ["l"="40.844,0.696"]
"microsoft/presidio-research" ["l"="4.975,-38.308"]
"guardrails-ai/guardrails" ["l"="40.879,0.7"]
"NVIDIA/NeMo-Guardrails" ["l"="40.815,0.661"]
"urchade/GLiNER" ["l"="41.163,0.926"]
"Unstructured-IO/unstructured" ["l"="40.796,0.527"]
"explodinggradients/ragas" ["l"="40.902,0.598"]
"dottxt-ai/outlines" ["l"="40.845,0.621"]
"confident-ai/deepeval" ["l"="40.922,0.618"]
"microsoft/LLMLingua" ["l"="40.808,0.615"]
"protectai/llm-guard" ["l"="38.069,-7.462"]
"argilla-io/argilla" ["l"="52.528,25.718"]
"567-labs/instructor" ["l"="40.893,0.563"]
"langfuse/langfuse" ["l"="40.848,0.573"]
"stanfordnlp/dspy" ["l"="40.726,0.466"]
"Arize-ai/phoenix" ["l"="40.893,0.638"]
"n8n-io/n8n" ["l"="40.566,-0.255"]
"langgenius/dify" ["l"="40.445,-0.14"]
"browser-use/browser-use" ["l"="40.821,-0.146"]
"open-webui/open-webui" ["l"="40.421,-0.055"]
"ollama/ollama" ["l"="40.219,0.006"]
"nocodb/nocodb" ["l"="15.639,-10.409"]
"mendableai/firecrawl" ["l"="40.822,-0.021"]
"supabase/supabase" ["l"="15.55,-10.459"]
"FlowiseAI/Flowise" ["l"="40.509,0.15"]
"punkpeye/awesome-mcp-servers" ["l"="40.91,-0.237"]
"unclecode/crawl4ai" ["l"="40.839,-0.071"]
"cline/cline" ["l"="40.793,-0.085"]
"Mintplex-Labs/anything-llm" ["l"="40.567,-0.025"]
"lobehub/lobe-chat" ["l"="40.502,-0.197"]
"modelcontextprotocol/servers" ["l"="40.949,-0.197"]
"toeverything/AFFiNE" ["l"="15.716,-10.602"]
"huggingface/transformers" ["l"="39.827,0.123"]
"pytorch/pytorch" ["l"="48.274,28.966"]
"google-research/bert" ["l"="53.095,25.874"]
"langchain-ai/langchain" ["l"="40.202,0.224"]
"meta-llama/llama" ["l"="40.061,0.34"]
"tensorflow/tensorflow" ["l"="48.211,29.024"]
"Significant-Gravitas/AutoGPT" ["l"="39.989,0.016"]
"facebookresearch/fairseq" ["l"="53.135,25.953"]
"vllm-project/vllm" ["l"="40.265,0.397"]
"deepspeedai/DeepSpeed" ["l"="39.997,0.424"]
"tensorflow/models" ["l"="48.134,28.884"]
"ggml-org/llama.cpp" ["l"="40.142,0.325"]
"hiyouga/LLaMA-Factory" ["l"="40.278,0.218"]
"keras-team/keras" ["l"="48.067,28.867"]
"huggingface/pytorch-image-models" ["l"="50.672,29.653"]
"ocrmypdf/OCRmyPDF" ["l"="40.716,-0.322"]
"opendatalab/MinerU" ["l"="40.716,-0.19"]
"Stirling-Tools/Stirling-PDF" ["l"="12.607,-9.553"]
"microsoft/markitdown" ["l"="40.763,-0.24"]
"allenai/olmocr" ["l"="40.896,-0.109"]
"VikParuchuri/marker" ["l"="40.749,0.026"]
"tesseract-ocr/tesseract" ["l"="48.304,29.216"]
"hiroi-sora/Umi-OCR" ["l"="-48.84,12.901"]
"VikParuchuri/surya" ["l"="40.796,0.027"]
"Byaidu/PDFMathTranslate" ["l"="40.841,-0.42"]
"PaddlePaddle/PaddleOCR" ["l"="50.03,29.7"]
"docling-project/docling" ["l"="40.861,0.001"]
"infiniflow/ragflow" ["l"="40.569,-0.099"]
"vietnh1009/ASCII-generator" ["l"="40.953,-0.488"]
"TheBlewish/Automated-AI-Web-Researcher-Ollama" ["l"="41.204,0.167"]
"XiaoMi/ha_xiaomi_home" ["l"="-48.437,12.714"]
"LiteLoaderQQNT/LiteLoaderQQNT" ["l"="-53.702,-18.704"]
"BewlyBewly/BewlyBewly" ["l"="-49.116,12.957"]
"Zeyi-Lin/HivisionIDPhotos" ["l"="40.811,-0.527"]
"ZCShou/GoGoGo" ["l"="-49.028,13.04"]
"hanydd/BilibiliSponsorBlock" ["l"="-49.251,12.894"]
"RSSNext/Folo" ["l"="40.733,-0.539"]
"subframe7536/maple-font" ["l"="20.535,1.217"]
"SocialSisterYi/bilibili-API-collect" ["l"="-53.669,-18.477"]
"sz3/libcimbar" ["l"="40.881,-0.659"]
"ShiArthur03/ShiArthur03" ["l"="-4.134,23.691"]
"guozhigq/pilipala" ["l"="-49.163,13.012"]
"CherryHQ/cherry-studio" ["l"="40.815,-0.367"]
"gradio-app/gradio" ["l"="39.955,0.241"]
"streamlit/streamlit" ["l"="44.476,20.451"]
"run-llama/llama_index" ["l"="40.423,0.353"]
"huggingface/diffusers" ["l"="45.89,31.459"]
"lm-sys/FastChat" ["l"="40.074,0.427"]
"comfyanonymous/ComfyUI" ["l"="38.32,1.113"]
"Lightning-AI/pytorch-lightning" ["l"="50.795,29.491"]
"oobabooga/text-generation-webui" ["l"="40.107,0.285"]
"microsoft/autogen" ["l"="40.57,0.22"]
"facebookresearch/segment-anything" ["l"="50.506,29.519"]
"seleniumbase/SeleniumBase" ["l"="40.942,-0.129"]
"mherrmann/helium" ["l"="42.901,20.781"]
"ultrafunkamsterdam/undetected-chromedriver" ["l"="47.36,21.421"]
"microsoft/playwright-python" ["l"="44.659,20.418"]
"khoj-ai/khoj" ["l"="40.759,-0.047"]
"SeleniumHQ/selenium" ["l"="-2.029,-0.606"]
"DrewThomasson/ebook2audiobook" ["l"="40.987,-0.244"]
"stanford-oval/storm" ["l"="40.862,0.041"]
"Skyvern-AI/skyvern" ["l"="40.939,0.123"]
"ScrapeGraphAI/Scrapegraph-ai" ["l"="40.813,0.112"]
"Zipstack/unstract" ["l"="41.13,0.166"]
"getmaxun/maxun" ["l"="40.981,-0.157"]
"ultrafunkamsterdam/nodriver" ["l"="47.335,21.485"]
"google-gemini/cookbook" ["l"="40.968,0.135"]
"mindsdb/mindsdb" ["l"="40.488,0.271"]
"ToolJet/ToolJet" ["l"="15.658,-10.155"]
"agno-agi/agno" ["l"="40.899,0.109"]
"crewAIInc/crewAI" ["l"="40.759,0.208"]
"mem0ai/mem0" ["l"="40.718,0.201"]
"deepset-ai/haystack" ["l"="40.615,0.499"]
"novuhq/novu" ["l"="15.734,-10.261"]
"CopilotKit/CopilotKit" ["l"="15.577,-9.928"]
"QuivrHQ/quivr" ["l"="40.365,0.104"]
"Avaiga/taipy" ["l"="15.503,-9.998"]
"All-Hands-AI/OpenHands" ["l"="40.668,0.021"]
"pdf2htmlEX/pdf2htmlEX" ["l"="40.81,-0.22"]
"coolwanglu/pdf2htmlEX" ["l"="46.29,4.796"]
"CosmosShadow/gptpdf" ["l"="40.98,0.094"]
"lxfater/inpaint-web" ["l"="45.616,-1.808"]
"yihong0618/bilingual_book_maker" ["l"="43.699,0.94"]
"pymupdf/PyMuPDF" ["l"="46.116,4.768"]
"opendatalab/PDF-Extract-Kit" ["l"="40.835,0.064"]
"chenxwh/insanely-fast-whisper" ["l"="45.413,-1.949"]
"Huanshere/VideoLingo" ["l"="40.903,-0.359"]
"haoel/haoel.github.io" ["l"="-4.996,17.29"]
"wechat-article/wechat-article-exporter" ["l"="45.591,-0.622"]
"getomni-ai/zerox" ["l"="40.934,0.016"]
"zhuima/awesome-cloudflare" ["l"="46.341,-0.24"]
"divan/txqr" ["l"="40.822,-1.281"]
"divan/txqr-reader" ["l"="40.834,-1.328"]
"jabcode/jabcode" ["l"="40.801,-1.365"]
"fionafibration/TXQR-Android" ["l"="40.794,-1.317"]
"eranyanay/1m-go-websockets" ["l"="3.72,-8.735"]
"divan/gotrace" ["l"="4.019,-8.445"]
"divan/expvarmon" ["l"="4.012,-8.355"]
"qifi-dev/qrs" ["l"="40.876,-0.977"]
"claudiodangelis/qrcp" ["l"="-13.693,-6.809"]
"drk1wi/Modlishka" ["l"="-45.231,-32.206"]
"gomods/athens" ["l"="4.014,-8.749"]
"HFO4/gameboy.live" ["l"="-0.56,-26.618"]
"babyname/fate" ["l"="55.084,29.155"]
"inlets/inlets-archived" ["l"="7.849,-8.653"]
"akavel/up" ["l"="-13.621,-6.661"]
"esimov/pigo" ["l"="1.139,-7.805"]
"gaspa93/googlemaps-scraper" ["l"="41.917,-0.177"]
"omkarcloud/google-maps-scraper" ["l"="42.01,-0.211"]
"patxijuaristi/google_maps_scraper" ["l"="41.938,-0.163"]
"lyyka/google-maps-businesses-scraper" ["l"="41.964,-0.177"]
"omkarcloud/google-maps-reviews-scraper" ["l"="41.982,-0.224"]
"gosom/google-maps-scraper" ["l"="41.664,-0.057"]
"MajideND/scraping-reviews-from-googlemaps" ["l"="41.964,-0.205"]
"outscraper/outscraper-python" ["l"="42.005,-0.245"]
"apify-projects/store-crawler-google-places" ["l"="24.834,-28.517"]
"philshem/gmaps_popular_times_scraper" ["l"="41.325,24.034"]
"apache/openwhisk-runtime-python" ["l"="43.159,0.057"]
"apache/openwhisk-runtime-docker" ["l"="43.188,0.053"]
"apache/openwhisk-client-python" ["l"="43.113,0.064"]
"Oztechan/CCC" ["l"="41.17,2.013"]
"aurora-is-near/evm2near" ["l"="41.202,1.954"]
"rog0978/powerwall_display" ["l"="41.192,1.953"]
"alpersonalwebsite/learn-node.js" ["l"="41.187,1.95"]
"alpersonalwebsite/learn-typescript" ["l"="41.204,1.947"]
"wednesday-solutions/go-template" ["l"="41.197,1.984"]
"CamilleMo/command_recall" ["l"="41.195,1.943"]
"YunaBraska/git-info-action" ["l"="41.184,1.94"]
"MobilCat/AndroCat" ["l"="41.11,2.099"]
"deca-org/deca-ui" ["l"="41.185,1.932"]
"YunaBraska/java-info-action" ["l"="41.194,1.935"]
"mustafaozhan/CosmeticScan" ["l"="41.123,2.09"]
"superinsight/superinsight-db" ["l"="41.212,1.996"]
"nosana-ci/nosana-programs" ["l"="41.192,1.966"]
"mustafaozhan/FirebaseMessagingApp" ["l"="41.124,2.106"]
"wednesday-solutions/react-graphql-ts-template" ["l"="41.191,1.977"]
"cyphar/paperback" ["l"="40.913,-1.386"]
"paritytech/banana_split" ["l"="40.939,-1.417"]
"intra2net/paperbackup" ["l"="40.953,-1.451"]
"jesseduffield/horcrux" ["l"="-13.597,-6.809"]
"matiaskorhonen/paper-age" ["l"="-19.28,-19.845"]
"Twometer/hyperbacked" ["l"="-53.576,9.924"]
"str4d/rage" ["l"="-19.233,-19.958"]
"alisinabh/paperify" ["l"="40.919,-1.454"]
"timwaters/paperback" ["l"="40.916,-1.512"]
"antirez/freakwan" ["l"="40.883,-1.467"]
"za3k/qr-backup" ["l"="40.889,-1.426"]
"rustic-rs/rustic" ["l"="14.672,-11.192"]
"str4d/age-plugin-yubikey" ["l"="-19.257,-19.937"]
"zach-snell/slack-export" ["l"="41.937,1.106"]
"hfaran/slack-export-viewer" ["l"="41.962,1.091"]
"sebseager/slack-exporter" ["l"="41.911,1.072"]
"hfaran/slack2html" ["l"="41.976,1.121"]
"hisabimbola/slack-history-export" ["l"="41.976,1.144"]
"mrdbourke/Sentiment-Analysis-with-Keras" ["l"="42.457,0.312"]
"mrdbourke/AIND-Machine-Translation" ["l"="42.407,0.322"]
"mrdbourke/coursera_bioinformatics_and_genetic_algorithm_experiment" ["l"="42.489,0.306"]
"mrdbourke/fastai" ["l"="42.331,0.335"]
"mrdbourke/learnopencv" ["l"="42.258,0.352"]
"mrdbourke/deep-learning" ["l"="42.318,0.337"]
"ibm-functions/composer" ["l"="42.932,0.088"]
"ibm-functions/shell" ["l"="42.937,0.104"]
"apache/openwhisk-composer" ["l"="42.905,0.089"]
"IBM/solsa" ["l"="42.784,0.118"]
"apache/openwhisk-external-resources" ["l"="42.977,0.085"]
"apache/openwhisk-client-js" ["l"="42.977,0.108"]
"kazhuravlev/options-gen" ["l"="41.222,1.933"]
"kazhuravlev/git-tools" ["l"="41.2,1.911"]
"kazhuravlev/just" ["l"="41.276,1.93"]
"markwylde/just-tap" ["l"="41.252,1.915"]
"iam-mhaseeb/Python-Scrapy-Email-Phone-Number-Crawler" ["l"="42.353,-0.444"]
"4xx404/GlassFrog" ["l"="42.38,-0.459"]
"iter8-tools/iter8" ["l"="42.789,0.187"]
"iter8-tools/iter8-istio" ["l"="42.834,0.183"]
"iter8-tools/iter8-analytics" ["l"="42.825,0.196"]
"iter8-tools/iter8-kfserving" ["l"="42.816,0.183"]
"mustafaozhan/Breeze-Adapta-Cursor" ["l"="41.11,2.132"]
"mustafaozhan/Arc-Maia-Grey-Theme" ["l"="41.114,2.116"]
"mustafaozhan/Numix-Cursor-Maia" ["l"="41.093,2.173"]
"Oztechan/iosCCC" ["l"="41.096,2.119"]
"Rupan/paperbak" ["l"="40.916,-1.593"]
"colorsafe/colorsafe" ["l"="40.916,-1.631"]
"GluuFederation/oxAuth" ["l"="41.131,2.246"]
"GluuFederation/oxTrust" ["l"="41.139,2.28"]
"GluuFederation/community-edition-setup" ["l"="41.117,2.282"]
"GluuFederation/oxd" ["l"="41.139,2.304"]
"JanssenProject/jans" ["l"="41.202,2.011"]
"JanssenProject/home" ["l"="41.097,2.314"]
"JanssenProject/jans-auth-server" ["l"="41.097,2.266"]
"GluuFederation/oxCore" ["l"="41.106,2.251"]
"explosion/wasabi" ["l"="40.842,1.599"]
"explosion/catalogue" ["l"="40.841,1.565"]
"explosion/srsly" ["l"="40.868,1.561"]
"ines/juniper" ["l"="44.91,21.726"]
"explosion/confection" ["l"="40.859,1.521"]
"koaning/spacy-report" ["l"="40.822,1.638"]
"explosion/spacy-experimental" ["l"="52.371,25.546"]
"alchemy-fr/Phraseanet" ["l"="43.089,0.748"]
"alchemy-fr/phrasea" ["l"="43.115,0.746"]
"atrocore/atrodam" ["l"="43.008,0.72"]
"razuna/razuna" ["l"="43.134,0.765"]
"explosion/spacy-transformers" ["l"="52.708,25.579"]
"explosion/cython-blis" ["l"="40.856,1.653"]
"microsoft/spacy-ann-linker" ["l"="-0.28,-42.154"]
"explosion/radicli" ["l"="40.876,1.621"]
"equalframework/equal" ["l"="41.775,1.464"]
"Stryusuf/tron-sunpump-sniper-bot" ["l"="41.808,1.497"]
"alexliubj/SwiftUI-Currency-Converter" ["l"="41.063,2.154"]
"mrdbourke/your-first-kaggle-submission" ["l"="42.383,0.316"]
"dformoso/sklearn-classification" ["l"="47.851,28.431"]
"mrdbourke/python-list-comprehensions-tutorial" ["l"="42.37,0.299"]
"mrdbourke/Udacity_DLND_Projects" ["l"="42.36,0.326"]
"mrdbourke/cnn-explainer" ["l"="42.324,0.325"]
"amosgyamfi/awesome-fasthtml" ["l"="41.731,1.08"]
"curtis-allan/Shad4Fasthtml" ["l"="41.71,1.089"]
"ninohdasilva/fasthtml-tailwind-template" ["l"="41.748,1.09"]
"AnswerDotAI/fh-deploy" ["l"="41.727,1.097"]
"gbolmier/funk-svd" ["l"="41.44,1.665"]
"AdilZouitine/paper_notes" ["l"="41.439,1.633"]
"AdilZouitine/outfit" ["l"="41.433,1.606"]
"tom-doerr/dotfiles" ["l"="41.703,0.298"]
"RayFernando1337/llm-cursor-rules" ["l"="41.619,0.227"]
"deedy/edgar" ["l"="41.812,0.279"]
"tom-doerr/perplexity_search" ["l"="41.816,0.401"]
"mendableai/llmstxt-generator" ["l"="41.649,0.434"]
"context-labs/autodelve" ["l"="41.691,0.152"]
"istio-ecosystem/iter8" ["l"="42.852,0.194"]
"mustafaozhan/GoogleIntegratedSystemConky" ["l"="41.137,2.105"]
"treolabs/treopim" ["l"="43.045,0.707"]
"treolabs/treocore" ["l"="43.041,0.69"]
"kennersoft/kennerpim" ["l"="43.069,0.712"]
"loopingz/webda.io" ["l"="40.882,0.916"]
"loopingz/smtp-relay" ["l"="40.868,0.924"]
"mundungus443/QRStreamer" ["l"="40.776,-1.334"]
"dutchcoders/slackarchive" ["l"="42.129,1.219"]
"docmarionum1/slack-archive-bot" ["l"="42.088,1.186"]
"coder/retry" ["l"="42.321,-0.703"]
"coder/cli" ["l"="42.314,-0.738"]
"ericpaulsen/coder-aks" ["l"="42.266,-0.622"]
"coder/hat" ["l"="42.304,-0.729"]
"matifali/update-coder-template" ["l"="42.342,-0.719"]
"AdilZouitine/pyFeel" ["l"="41.423,1.631"]
"IBM/kar" ["l"="42.627,0.143"]
"IBM/super" ["l"="42.807,0.111"]
"cognitive-catalyst/WA-Testing-Tool" ["l"="42.65,0.079"]
"watson-developer-cloud/assistant-improve-recommendations-notebook" ["l"="42.606,0.096"]
"watson-developer-cloud/assistant-skill-analysis" ["l"="42.63,0.087"]
"watson-developer-cloud/assistant-dialog-flow-analysis" ["l"="42.631,0.071"]
"IBM/watson-stt-wer-python" ["l"="42.678,0.07"]
"IBM/watson-tts-python" ["l"="42.694,0.061"]
"preethm/watson-assistant-metrics-notebook" ["l"="42.638,0.098"]
"coder/bigdur" ["l"="42.288,-0.771"]
"cmoog/sshproxy" ["l"="42.314,-0.723"]
"coder/flog" ["l"="42.312,-0.767"]
"mustafaozhan/Papirus-Icon-Theme-Vectorel-Folders" ["l"="41.12,2.157"]
"coder/nbin" ["l"="42.281,-0.751"]
"coder/pretty" ["l"="42.3,-0.763"]
"TheAnig/NER-LSTM-CNN-Pytorch" ["l"="41.493,2.28"]
"CASRAI-CRedIT/Dictionary" ["l"="41.483,2.3"]
"TheOneStudioLLC/Mac-Recorder" ["l"="41.46,2.275"]
"xames3/nanotorch" ["l"="41.445,2.255"]
"onraj/expo-draggable-textfield" ["l"="41.56,2.222"]
"Weitheskmt/WeiDMD" ["l"="41.475,2.331"]
"CodeFromAnywhere/ActionSchema" ["l"="41.548,2.204"]
"aidinrs/sql-puzzle" ["l"="41.49,2.343"]
"xames3/learn" ["l"="41.554,2.286"]
"FixedPointIO/Artemis" ["l"="41.419,2.258"]
"rynmon/malScraper" ["l"="41.418,2.273"]
"Romain-P/Guinness-Bot" ["l"="41.499,2.316"]
"tm88instrument/BX-Private" ["l"="41.511,2.32"]
"i38100/IIoT-Intelligent-Algorithm" ["l"="41.526,2.313"]
"RevGev/AVAX-SNIPING-BOT-OPENSOURCE" ["l"="41.506,2.334"]
"coder/exectrace" ["l"="42.315,-0.697"]
"treolabs/treocrm" ["l"="43.066,0.683"]
"Haeven/msteam-log-transport" ["l"="41.52,2.292"]
"manumerous/vpselector" ["l"="41.487,2.317"]
"coder/ts-logger" ["l"="42.387,-0.806"]
"coder/homebrew-coder" ["l"="42.36,-0.801"]
"coder/envbuilder-starter-devcontainer" ["l"="42.382,-0.78"]
"NVIDIA/Megatron-LM" ["l"="38.862,-0.695"]
"hpcaitech/ColossalAI" ["l"="39.891,0.381"]
"Dao-AILab/flash-attention" ["l"="38.876,-0.736"]
"deepspeedai/DeepSpeedExamples" ["l"="39.018,-2.201"]
"huggingface/peft" ["l"="40.04,0.52"]
"tatsu-lab/stanford_alpaca" ["l"="40,0.482"]
"THUDM/ChatGLM-6B" ["l"="39.109,-1.855"]
"ymcui/Chinese-LLaMA-Alpaca" ["l"="39.035,-1.985"]
"Vision-CAIR/MiniGPT-4" ["l"="39.832,0.405"]
"karpathy/minGPT" ["l"="40.09,0.707"]
"karpathy/nanoGPT" ["l"="40.159,0.576"]
"karpathy/nn-zero-to-hero" ["l"="40.237,0.751"]
"karpathy/micrograd" ["l"="40.179,0.716"]
"karpathy/llm.c" ["l"="40.217,0.608"]
"karpathy/llama2.c" ["l"="40.169,0.661"]
"jax-ml/jax" ["l"="50.809,29.353"]
"openai/gpt-2" ["l"="53.255,25.87"]
"google-research/google-research" ["l"="50.731,29.386"]
"openai/CLIP" ["l"="50.642,29.547"]
"google-research/tuning_playbook" ["l"="50.662,29.386"]
"Shpota/github-activity-generator" ["l"="40.752,-0.4"]
"srbhr/Resume-Matcher" ["l"="40.855,-0.112"]
"feder-cr/Jobs_Applier_AI_Agent_AIHawk" ["l"="40.712,-0.14"]
"artiebits/fake-git-history" ["l"="40.729,-0.659"]
"Evavic44/portfolio-ideas" ["l"="10.218,-29.373"]
"teableio/teable" ["l"="15.947,-10.308"]
"FujiwaraChoki/MoneyPrinterV2" ["l"="40.847,-0.205"]
"nishant-Tiwari24/company-wise-dsa" ["l"="29.138,-26.604"]
"nishant-Tiwari24/company-wise-projects" ["l"="29.17,-26.561"]
"al1abb/invoify" ["l"="16.372,-10.162"]
"DevCaress/guia-entrevistas-de-programacion" ["l"="27.805,-29.528"]
"gelstudios/gitfiti" ["l"="-16.755,-6.735"]
"blacklanternsecurity/bbot" ["l"="-47.97,-30.103"]
"dockur/macos" ["l"="12.543,-9.511"]
"milvus-io/milvus" ["l"="40.363,0.485"]
"facebookresearch/faiss" ["l"="53.099,26.041"]
"qdrant/qdrant" ["l"="40.485,0.649"]
"weaviate/weaviate" ["l"="40.579,0.593"]
"chroma-core/chroma" ["l"="40.525,0.513"]
"FoundationAgents/MetaGPT" ["l"="40.43,0.067"]
"chatchat-space/Langchain-Chatchat" ["l"="38.945,-1.875"]
"microsoft/graphrag" ["l"="40.735,0.257"]
"ClickHouse/ClickHouse" ["l"="-19.566,-24.894"]
"pingcap/tidb" ["l"="-19.738,-24.91"]
"huggingface/candle" ["l"="-8.472,-4.459"]
"pola-rs/polars" ["l"="44.645,20.67"]
"pgvector/pgvector" ["l"="40.625,0.627"]
"meilisearch/meilisearch" ["l"="15.459,-10.453"]
"tracel-ai/burn" ["l"="-8.427,-4.429"]
"surrealdb/surrealdb" ["l"="-9.359,-5.831"]
"AmruthPillai/Reactive-Resume" ["l"="15.829,-10.625"]
"xitanggg/open-resume" ["l"="15.991,-10.38"]
"zaidmukaddam/scira" ["l"="41.109,0.081"]
"gitroomhq/postiz-app" ["l"="15.658,-10.037"]
"Canner/WrenAI" ["l"="41.063,0.098"]
"swirlai/swirl-search" ["l"="40.967,0.282"]
"assafelovic/gpt-researcher" ["l"="40.767,0.173"]
"twentyhq/twenty" ["l"="15.908,-10.299"]
"sz3/cfc" ["l"="40.881,-0.85"]
"RubyMetric/chsrc" ["l"="-49.253,12.695"]
"niedev/RTranslator" ["l"="45.613,-1.915"]
"pangxiaobin/image-matting" ["l"="-49.3,12.682"]
"ourongxing/newsnow" ["l"="40.994,-0.428"]
"sz3/cimbar" ["l"="40.885,-0.789"]
"vastsa/FileCodeBox" ["l"="-46.419,14.91"]
"luckjiawei/frpc-desktop" ["l"="-49.095,12.731"]
"TeamWiseFlow/wiseflow" ["l"="40.883,-0.072"]
"stitchfix/hamilton" ["l"="41.126,1.27"]
"DAGWorks-Inc/hamilton" ["l"="41.119,1.137"]
"enrolla/enrolla" ["l"="41.124,1.297"]
"thebabylonai/babylog" ["l"="41.103,1.288"]
"map3xyz/supercharge" ["l"="41.113,1.287"]
"usecakework/cakework" ["l"="41.112,1.303"]
"Left-on-Read/leftonread" ["l"="41.122,1.322"]
"NangoHQ/nango-sync" ["l"="41.133,1.345"]
"FrigadeHQ/react-native-onboard" ["l"="41.113,1.335"]
"vaerohq/vaero" ["l"="41.139,1.524"]
"Helicone/valyr" ["l"="41.136,1.328"]
"matanolabs/matano" ["l"="41.147,1.257"]
"athina-ai/athina-sdk" ["l"="41.086,1.259"]
"traceloop/jest-opentelemetry" ["l"="41.099,1.314"]
"outerbase/ezql" ["l"="41.107,1.322"]
"fabiustech/openai" ["l"="41.11,1.358"]
"tinygrad/tinygrad" ["l"="40.128,0.757"]
"karpathy/makemore" ["l"="40.192,0.753"]
"karpathy/minbpe" ["l"="40.261,0.682"]
"karpathy/LLM101n" ["l"="40.39,0.564"]
"karpathy/ng-video-lecture" ["l"="40.229,0.71"]
"naklecha/llama3-from-scratch" ["l"="40.353,0.593"]
"triton-lang/triton" ["l"="38.919,-0.703"]
"ggml-org/ggml" ["l"="40.122,0.635"]
"karpathy/build-nanogpt" ["l"="40.28,0.727"]
"rzane/docker2exe" ["l"="41.442,-0.041"]
"Blaizzy/mlx-audio" ["l"="27.639,-21.06"]
"MODSetter/SurfSense" ["l"="41.317,0.054"]
"egoist/sitefetch" ["l"="41.467,0.176"]
"NilsIrl/dockerc" ["l"="-13.039,-7.254"]
"hotheadhacker/awesome-selfhost-docker" ["l"="16.454,-10.132"]
"simstudioai/sim" ["l"="41.392,0.128"]
"supabase-community/supabase-mcp" ["l"="41.387,-0.113"]
"Zackriya-Solutions/meeting-minutes" ["l"="41.252,-0.075"]
"simular-ai/Agent-S" ["l"="41.286,0.024"]
"Anemll/Anemll" ["l"="27.511,-21.038"]
"liam-hq/liam" ["l"="16.273,-10.165"]
"GoogleCloudPlatform/kubectl-ai" ["l"="41.34,-0.126"]
"Devolutions/IronRDP" ["l"="-12.842,-7.324"]
"aipotheosis-labs/aci" ["l"="41.326,-0.038"]
"stas00/ml-engineering" ["l"="40.346,0.666"]
"gpu-mode/lectures" ["l"="36.832,0.767"]
"mlabonne/llm-course" ["l"="40.41,0.291"]
"Lightning-AI/litgpt" ["l"="40.494,0.584"]
"srush/GPU-Puzzles" ["l"="40.187,0.851"]
"rasbt/LLMs-from-scratch" ["l"="40.329,0.377"]
"sgl-project/sglang" ["l"="38.933,-0.652"]
"axolotl-ai-cloud/axolotl" ["l"="38.697,-0.594"]
"creativeJoe007/google-leads-scraper" ["l"="42.311,-0.383"]
"creativeJoe007/instagram-leads-scraper" ["l"="42.339,-0.391"]
"neuml/txtai" ["l"="40.746,0.567"]
"BerriAI/litellm" ["l"="40.78,0.384"]
"UKPLab/sentence-transformers" ["l"="52.909,25.852"]
"guidance-ai/guidance" ["l"="40.593,0.54"]
"wednesday-solutions/react-template" ["l"="41.156,2.042"]
"wednesday-solutions/serverless" ["l"="41.177,2.065"]
"mhttp-org/unity-sdk" ["l"="41.171,2.045"]
"wednesday-solutions/node-mongo-express" ["l"="41.183,1.986"]
"amadotejada/GAMpass" ["l"="41.148,2.024"]
"amadotejada/self-portal" ["l"="41.13,2.045"]
"ganlvtech/qrcode-file-transfer" ["l"="40.882,-0.935"]
"invopop/gobl" ["l"="41.12,1.366"]
"invopop/gobl.xinvoice" ["l"="41.119,1.409"]
"iota-uz/iota-sdk" ["l"="41.124,1.434"]
"CommonPaper/Mutual-NDA" ["l"="41.099,1.347"]
"SciPhi-AI/R2R" ["l"="41.001,0.481"]
"letta-ai/letta" ["l"="40.762,0.35"]
"weaviate/Verba" ["l"="40.9,0.43"]
"Cinnamon/kotaemon" ["l"="40.858,0.099"]
"wednesday-solutions/flutter_template" ["l"="41.219,1.954"]
"robot-bulls/automated_tiktok_video_creation" ["l"="41.215,1.97"]
"aretecode/system-design-templates-excalidraw" ["l"="41.214,1.983"]
"segment-any-text/wtpsplit" ["l"="41.229,1.005"]
"notAI-tech/deepsegment" ["l"="35.872,2.684"]
"nipunsadvilkar/pySBD" ["l"="52.556,25.628"]
"huggingface/setfit" ["l"="52.568,25.752"]
"mixedbread-ai/batched" ["l"="41.173,1.052"]
"facebookresearch/SONAR" ["l"="38.54,2.134"]
"xhluca/bm25s" ["l"="41.234,0.883"]
"AnswerDotAI/rerankers" ["l"="41.2,0.811"]
"bminixhofer/tractjs" ["l"="-10.629,-6.064"]
"tsproisl/SoMaJo" ["l"="52.179,25.377"]
"mediacloud/sentence-splitter" ["l"="53.767,24.881"]
"mirth/chonky" ["l"="41.3,1.158"]
"SapienzaNLP/relik" ["l"="41.18,1.015"]
"MinishLab/semhash" ["l"="41.221,0.868"]
"fnl/syntok" ["l"="35.919,2.779"]
"baek2sm/ml" ["l"="42.736,0.656"]
"SBCC-World/SBCC-CONTRACT" ["l"="42.691,0.624"]
"GOLFROCHAIN/GOLFRO-CONTRACT" ["l"="42.684,0.648"]
"DRC-asia/DRC-mobility-contracts" ["l"="42.784,0.676"]
"sz3/cimbar-samples" ["l"="40.895,-0.825"]
"superryeti/Email-Crawler-Lead-Generator" ["l"="42.304,-0.414"]
"Madi-S/Lead-Generation" ["l"="42.248,-0.37"]
"sangaline/email-spy" ["l"="42.28,-0.41"]
"JakeMaldonado/Linkedin-Lead-Generator" ["l"="42.328,-0.439"]
"Arize-ai/client_python" ["l"="40.873,0.963"]
"Arize-ai/phoenix-on-azure" ["l"="40.883,0.934"]
"Arize-ai/tutorials_python" ["l"="40.866,1.012"]
"IBM/watsonx-ai-samples" ["l"="42.457,0.155"]
"watson-developer-cloud/assistant-toolkit" ["l"="42.434,0.166"]
"IBM/watsonx-ai-platform-demos" ["l"="42.385,0.187"]
"IBM/watsonx-developer-hub" ["l"="42.4,0.186"]
"IBM/ibm-generative-ai" ["l"="42.4,0.167"]
"ibm-self-serve-assets/SuperKnowa" ["l"="42.488,0.149"]
"TheveloperX/Fake-Git-History" ["l"="40.725,-0.703"]
"SeniorStack720/healthcareservice" ["l"="40.718,-0.72"]
"SeniorStack720/Laravel" ["l"="40.742,-0.709"]
"SeniorStack720/car-rental-site" ["l"="40.733,-0.721"]
"Grussi48/drone-simulation" ["l"="40.708,-0.707"]
"raphaelsty/mkb" ["l"="41.456,1.64"]
"mrdbourke/spaCy" ["l"="42.297,0.34"]
"n8n-io/n8n-nodes-starter" ["l"="41.689,-0.317"]
"n8n-io/n8n-docs" ["l"="41.708,-0.353"]
"n8n-io/n8n-desktop-app" ["l"="41.73,-0.378"]
"umanamente/n8n-nodes-globals" ["l"="41.738,-0.288"]
"n8n-io/n8n-hosting" ["l"="41.748,-0.4"]
"nerding-io/n8n-nodes-mcp" ["l"="41.503,-0.115"]
"ivov/nodemaker" ["l"="41.757,-0.369"]
"ready4mars/n8n-render" ["l"="41.768,-0.424"]
"beamworks/react-csv-importer" ["l"="41.173,1.617"]
"UgnisSoftware/react-spreadsheet-import" ["l"="41.183,1.671"]
"UdaraJay/atm" ["l"="41.883,0.157"]
"UdaraJay/_stats" ["l"="41.904,0.152"]
"asahi417/tner" ["l"="41.161,1.174"]
"kabirkhan/recon" ["l"="52.345,25.538"]
"tomaarsen/SpanMarkerNER" ["l"="41.14,1.073"]
"lajanugen/zeshel" ["l"="-0.424,-42.134"]
"izuna385/Entity-Linking-Recent-Trends" ["l"="-0.423,-42.145"]
"allanj/pytorch_neural_crf" ["l"="53.671,27.581"]
"JoshCrozier/leetcode-javascript" ["l"="42.27,0.455"]
"Chirag-Main1/ChatBot_perosnal" ["l"="42.274,0.475"]
"SupportTools/dr-syncer" ["l"="42.294,0.478"]
"MasterOfLogic1/UipathLibraries" ["l"="42.248,0.461"]
"Trylz/Restir_CPP" ["l"="42.275,0.496"]
"Webinix-dev/webinix" ["l"="42.294,0.445"]
"muraliavarma/vue-slot-table" ["l"="42.256,0.445"]
"spectrumwebco/kled.io" ["l"="42.24,0.472"]
"HMUNACHI/super-lazy-autograd" ["l"="42.227,0.462"]
"MacroSurfer/MacroSurferFunctions" ["l"="42.273,0.441"]
"furudo-erika/awesome-postman-alternatives" ["l"="42.257,0.468"]
"wyattm14/chatbot-template" ["l"="42.239,0.447"]
"RoyGeagea/inventory-management" ["l"="42.271,0.425"]
"gptBuster/gptBuster" ["l"="42.294,0.5"]
"RichartDedekind/NollarsVPN" ["l"="42.284,0.488"]
"updatedotdev/js" ["l"="42.237,0.424"]
"cyberus-technology/hedron" ["l"="40.523,-0.755"]
"phip1611/gitlab-timelogs" ["l"="40.519,-0.791"]
"cyberus-technology/cloud-hypervisor" ["l"="40.516,-0.738"]
"coder/images" ["l"="42.356,-0.774"]
"coder/enterprise-helm" ["l"="42.359,-0.822"]
"coder/coder-logstream-kube" ["l"="42.36,-0.727"]
"coder/terraform-provider-coder" ["l"="42.376,-0.815"]
"coder/modules" ["l"="42.37,-0.719"]
"coder/coder-v1-cli" ["l"="42.331,-0.761"]
"coder/docs" ["l"="42.341,-0.794"]
"chenming-wu/pymdp" ["l"="40.94,1.342"]
"solstice-gao/chatglm-go" ["l"="40.956,1.262"]
"GluuFederation/casa" ["l"="41.139,2.334"]
"MartinoMensio/spacy-universal-sentence-encoder" ["l"="41.035,1.364"]
"MartinoMensio/spacy-sentence-bert" ["l"="41.025,1.413"]
"coder/slog" ["l"="42.297,-0.71"]
"coder/redjet" ["l"="42.332,-0.707"]
"coder/aicommit" ["l"="42.338,-0.696"]
"dhanraj6/Google-Maps-Scraper" ["l"="41.982,-0.167"]
"atrocore/atropim" ["l"="43.001,0.697"]
"atrocore/atrocore" ["l"="42.909,0.683"]
"project-codeflare/multi-cluster-app-dispatcher" ["l"="42.746,0.118"]
"project-codeflare/codeflare-cli" ["l"="42.704,0.129"]
"thayakawa-gh/SlackLogViewer" ["l"="41.9,1.036"]
"kununu/slackdump2html" ["l"="41.89,1.05"]
"rusq/slackdump" ["l"="41.805,0.972"]
"thomasloupe/Slackord" ["l"="41.965,1.031"]
"thomasloupe/Slackord1" ["l"="42.006,1.045"]
"pR0Ps/slack-to-discord" ["l"="42.03,1.055"]
"outscraper/outscraper-php" ["l"="42.043,-0.261"]
"yyeunggg/TelloPy" ["l"="41.224,2.239"]
"henneberger/typekin" ["l"="41.212,2.214"]
"turazashvili/SchemaCraftAI" ["l"="42.923,0.717"]
"Artemis-labs-official/Artemis" ["l"="42.943,0.705"]
"Webinix-dev/zig-webinix" ["l"="42.95,0.683"]
"WubbzyDev/Pump-fun-multi-bot" ["l"="42.65,0.602"]
"RockDard/cpp-health-check" ["l"="42.935,0.669"]
"andrewrfreed/ConversationalAI" ["l"="42.723,0.048"]
"MehdiZouitine/gym_ma_toy" ["l"="41.423,1.566"]
"promptdesk/promptdesk" ["l"="41.506,2.299"]
"VANRao-Stack/elixir" ["l"="41.472,2.352"]
"BlinkDL/RWKV-LM" ["l"="39.888,0.618"]
"BlinkDL/ChatRWKV" ["l"="39.251,-1.95"]
"josStorer/RWKV-Runner" ["l"="39.286,-1.858"]
"tloen/alpaca-lora" ["l"="39.9,0.563"]
"state-spaces/mamba" ["l"="49.202,34.162"]
"FMInference/FlexLLMGen" ["l"="38.831,-0.771"]
"artidoro/qlora" ["l"="39.956,0.604"]
"microsoft/unilm" ["l"="38.785,-0.95"]
"huggingface/trl" ["l"="38.758,-0.761"]
"LianjiaTech/BELLE" ["l"="39.054,-2.075"]
"commaai/openpilot" ["l"="61.704,12.209"]
"geohot/fromthetransistor" ["l"="-14.268,-23.69"]
"ml-explore/mlx" ["l"="40.274,0.591"]
"modular/modular" ["l"="-13.605,-7.969"]
"pgvector/pgvector-python" ["l"="3.951,13.361"]
"lancedb/lancedb" ["l"="40.692,0.686"]
"timescale/pgai" ["l"="41.032,0.376"]
"ggerganov/ggwave" ["l"="40.888,-0.034"]
"PennyroyalTea/gibberlink" ["l"="41.131,-0.109"]
"ggerganov/wave-share" ["l"="54.492,5.257"]
"gradio-app/fastrtc" ["l"="41.146,0.064"]
"ggerganov/kbd-audio" ["l"="-45.368,-32.356"]
"exo-explore/exo" ["l"="40.722,-0.013"]
"block/goose" ["l"="40.984,0.004"]
"rhasspy/piper" ["l"="38.599,1.589"]
"joanrod/star-vector" ["l"="41.163,-0.193"]
"jart/cosmopolitan" ["l"="-21.856,-25.782"]
"ggml-org/whisper.cpp" ["l"="40.033,0.272"]
"leaningtech/webvm" ["l"="12.719,-9.481"]
"pipecat-ai/pipecat" ["l"="41.177,0.336"]
"fixie-ai/ultravox" ["l"="41.148,0.208"]
"roboflow/supervision" ["l"="40.654,-0.062"]
"openai/openai-python" ["l"="40.267,0.323"]
"openai/openai-cookbook" ["l"="40.122,0.21"]
"openai/tiktoken" ["l"="40.271,0.533"]
"openai/evals" ["l"="40.274,0.466"]
"openai/chatgpt-retrieval-plugin" ["l"="40.204,0.322"]
"openai/whisper" ["l"="39.934,0.111"]
"dair-ai/Prompt-Engineering-Guide" ["l"="40.125,0.121"]
"OpenInterpreter/open-interpreter" ["l"="40.372,0.04"]
"Shubhamsaboo/awesome-llm-apps" ["l"="40.932,-0.02"]
"ItzCrazyKns/Perplexica" ["l"="40.831,0.169"]
"danielmiessler/fabric" ["l"="40.618,-0.023"]
"microsoft/AI-For-Beginners" ["l"="40.179,-0.078"]
"microsoft/ML-For-Beginners" ["l"="27.433,-26.679"]
"microsoft/Data-Science-For-Beginners" ["l"="47.771,26.043"]
"microsoft/generative-ai-for-beginners" ["l"="40.287,-0.106"]
"microsoft/IoT-For-Beginners" ["l"="47.774,25.961"]
"microsoft/Web-Dev-For-Beginners" ["l"="27.433,-26.379"]
"abi/screenshot-to-code" ["l"="40.36,-0.159"]
"ByteByteGoHq/system-design-101" ["l"="28.663,-26.853"]
"microsoft/LoRA" ["l"="39.84,0.5"]
"cloneofsimo/lora" ["l"="32.196,31.881"]
"haotian-liu/LLaVA" ["l"="47.375,29.865"]
"bitsandbytes-foundation/bitsandbytes" ["l"="38.792,-0.631"]
"jumperexchange/jumper-exchange" ["l"="41.276,2.039"]
"lifinance/widget" ["l"="41.228,1.976"]
"lifinance/types" ["l"="41.313,2.062"]
"lifinance/sdk" ["l"="41.232,1.988"]
"lifinance/contracts" ["l"="41.293,2.03"]
"lifinance/sdk-node-sample" ["l"="41.303,2.059"]
"lifinance/lifi-contract-types" ["l"="41.313,2.048"]
"LegalDreadPirateRobert/business-lead-generation" ["l"="42.27,-0.388"]
"ahmedmujtaba1/Linkedin-Leads-Generation" ["l"="42.254,-0.4"]
"tomiwaAdey/Nimrod" ["l"="42.287,-0.377"]
"Ambitious-Concepts-Labs/LeadGenerationAPI" ["l"="42.274,-0.363"]
"truera/trulens" ["l"="40.934,0.697"]
"stanford-futuredata/ARES" ["l"="41.059,0.839"]
"pinecone-io/canopy" ["l"="41.017,0.719"]
"zilliztech/GPTCache" ["l"="41.249,-3.826"]
"promptfoo/promptfoo" ["l"="40.866,0.651"]
"Giskard-AI/giskard" ["l"="40.791,0.692"]
"AnswerDotAI/RAGatouille" ["l"="41.095,0.724"]
"aurelio-labs/semantic-router" ["l"="40.963,0.69"]
"ShawhinT/YouTube-Blog" ["l"="41.708,0.617"]
"curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain" ["l"="41.219,-3.513"]
"pixegami/rag-tutorial-v2" ["l"="41.764,0.52"]
"krishnaik06/Finetuning-LLM" ["l"="48.036,24.855"]
"ShawhinT/data-pipeline-example" ["l"="41.761,0.644"]
"callmesora/llmops-python-package" ["l"="41.296,0.621"]
"samwit/langchain-tutorials" ["l"="41.247,-3.529"]
"diambra/arena" ["l"="40.906,0.838"]
"diambra/agents" ["l"="40.888,0.896"]
"josdejong/jsonrepair" ["l"="40.95,0.87"]
"mangiucugna/json_repair" ["l"="40.987,0.717"]
"qdrant/qdrant-client" ["l"="40.828,1.128"]
"qdrant/fastembed" ["l"="41.09,0.869"]
"qdrant/qdrant-web-ui" ["l"="40.807,1.29"]
"qdrant/examples" ["l"="40.856,1.1"]
"qdrant/qdrant-js" ["l"="40.784,1.296"]
"qdrant/mcp-server-qdrant" ["l"="41.411,3.127"]
"qdrant/vector-db-benchmark" ["l"="-1.063,3.852"]
"qdrant/quaterion" ["l"="-44.375,26.329"]
"qdrant/qdrant-spark" ["l"="40.793,1.334"]
"qdrant/qdrant_demo" ["l"="40.825,1.233"]
"huggingface/text-embeddings-inference" ["l"="38.74,-0.669"]
"qdrant/go-client" ["l"="40.798,1.247"]
"qdrant/rust-client" ["l"="-8.662,-4.459"]
"qdrant/qdrant-helm" ["l"="40.808,1.211"]
"suitedaces/sonophile" ["l"="41.436,2.365"]
"louisho5/MotionScroll" ["l"="41.436,2.344"]
"BearAnBull/Pancakeswap-Prediction-Winningbot" ["l"="41.5,2.367"]
"noya-app/noya" ["l"="41.143,1.288"]
"enclaver-io/enclaver" ["l"="41.148,1.314"]
"gotrade94/angel-sdk" ["l"="41.134,1.315"]
"project-codeflare/codeflare" ["l"="42.468,0.184"]
"project-codeflare/rayvens" ["l"="42.652,0.143"]
"caikit/caikit" ["l"="42.336,0.203"]
"IBM/prompt-declaration-language" ["l"="42.304,0.196"]
"brucewlee/lingfeat" ["l"="41.209,1.918"]
"brucewlee/lftk" ["l"="51.471,0.794"]
"chr0meice2/snortrules" ["l"="51.451,0.822"]
"SuperCowPowers/workbench" ["l"="51.451,0.794"]
"SunStresser/IP-BOOTER" ["l"="51.454,0.805"]
"gorodnitskiy/pytorch-infer-utils" ["l"="51.443,0.805"]
"frontendnetwork/veganify" ["l"="41.208,1.933"]
"brodo/json_env" ["l"="41.151,1.92"]
"skiff-org/skiff-ui" ["l"="40.457,-1.001"]
"skiff-org/skiff-apps" ["l"="40.457,-0.94"]
"skiff-org/skiff-windows-app" ["l"="40.433,-1.015"]
"skiff-org/skiff-org.github.io" ["l"="40.451,-1.023"]
"daronyondem/codesamples" ["l"="42.203,0.156"]
"Developer-MultiGroup/GenerativeAI-Fundamentals-With-Gemini" ["l"="42.209,0.138"]
"magicpatterns/catalog" ["l"="41.109,1.249"]
"openintegrations/openint" ["l"="41.08,1.315"]
"daveshap/PlainTextWikipedia" ["l"="40.587,1.325"]
"daveshap/Raven_MVP" ["l"="40.577,1.409"]
"daveshap/NaturalLanguageCognitiveArchitecture" ["l"="40.631,1.203"]
"daveshap/GPT3_Finetunes" ["l"="40.584,1.233"]
"skiff-org/typed-envelopes" ["l"="40.454,-1.064"]
"skiff-org/cipher" ["l"="40.435,-1.042"]
"nuolade/disease-kb" ["l"="41.615,0.951"]
"liuhuanyong/RAGOnMedicalKG" ["l"="41.575,0.909"]
"honeyandme/RAGQnASystem" ["l"="41.587,0.931"]
"IBM/watson-openscale-samples" ["l"="42.363,0.17"]
"CloudPak-Outcomes/Outcomes-Projects" ["l"="42.389,0.143"]
"daveshap/RAVEN_MVP_Public" ["l"="40.576,1.436"]
"daveshap/RavenAGI" ["l"="40.56,1.437"]
"daveshap/Flask_Chat_Voice" ["l"="40.593,1.366"]
"daveshap/EmbeddingService" ["l"="40.572,1.451"]
"daveshap/CoreObjectiveFunctions" ["l"="40.611,1.301"]
"iZooGooD/torrscrapper" ["l"="41.455,2.355"]
"LAION-AI/Open-Assistant" ["l"="39.976,0.371"]
"tensorchord/Awesome-LLMOps" ["l"="40.788,0.591"]
"Hannibal046/Awesome-LLM" ["l"="40.2,0.476"]
"kelvins/awesome-mlops" ["l"="47.985,26.358"]
"visenger/awesome-mlops" ["l"="48.011,26.296"]
"Agenta-AI/agenta" ["l"="41.054,0.51"]
"kyrolabs/awesome-langchain" ["l"="41.255,-3.754"]
"bentoml/OpenLLM" ["l"="40.43,0.502"]
"pezzolabs/pezzo" ["l"="40.9,0.53"]
"skypilot-org/skypilot" ["l"="38.822,-0.668"]
"github/copilot-docs" ["l"="39.762,-0.042"]
"withfig/autocomplete" ["l"="-4.385,-29.744"]
"vitejs/vite" ["l"="-4.127,-29.662"]
"getcursor/cursor" ["l"="40.129,0.013"]
"geekan/HowToLiveLonger" ["l"="-4.78,17.416"]
"Eugeny/tabby" ["l"="-48.168,12.805"]
"twitter/the-algorithm" ["l"="39.971,0.166"]
"github/copilot.vim" ["l"="-12.871,-9.57"]
"CompVis/stable-diffusion" ["l"="38.212,0.954"]
"tauri-apps/tauri" ["l"="-4.489,-29.788"]
"anuraghazra/github-readme-stats" ["l"="27.127,-28.734"]
"acheong08/ChatGPT" ["l"="43.977,1.027"]
"microsoft/PowerToys" ["l"="-48.917,9.688"]
"remix-run/remix" ["l"="-3.936,-29.731"]
"AutomaApp/automa" ["l"="40.766,-0.339"]
"NaiboWang/EasySpider" ["l"="52.608,3.326"]
"bytedance/UI-TARS-desktop" ["l"="41.085,-0.23"]
"imputnet/cobalt" ["l"="40.652,-0.551"]
"web-infra-dev/midscene" ["l"="41.103,-0.091"]
"tw93/Pake" ["l"="12.648,-9.807"]
"labring/FastGPT" ["l"="40.63,-0.17"]
"alyssaxuu/screenity" ["l"="15.857,-10.692"]
"f/awesome-chatgpt-prompts" ["l"="44.321,1.225"]
"nomic-ai/gpt4all" ["l"="40.051,0.191"]
"AntonOsika/gpt-engineer" ["l"="40.255,0.071"]
"reworkd/AgentGPT" ["l"="40.162,0.17"]
"NVIDIA/garak" ["l"="38.051,-7.488"]
"deepchecks/deepchecks" ["l"="45.231,26.033"]
"Azure/PyRIT" ["l"="38.095,-7.485"]
"evidentlyai/evidently" ["l"="45.243,25.941"]
"nebuly-ai/optimate" ["l"="39.799,0.566"]
"lucidrains/PaLM-rlhf-pytorch" ["l"="39.755,0.583"]
"CarperAI/trlx" ["l"="37.133,-0.204"]
"togethercomputer/OpenChatKit" ["l"="39.776,0.515"]
"databrickslabs/dolly" ["l"="39.859,0.551"]
"Instruction-Tuning-with-GPT-4/GPT-4-LLM" ["l"="39.064,-2.245"]
"OptimalScale/LMFlow" ["l"="39.086,-2.178"]
"Atri-Labs/atrilabs-engine" ["l"="41.18,1.281"]
"fern-api/fern" ["l"="41.107,1.213"]
"uptrain-ai/uptrain" ["l"="41.071,1.086"]
"Infisical/infisical" ["l"="15.923,-10.221"]
"highlight/highlight" ["l"="16.066,-10.243"]
"triggerdotdev/trigger.dev" ["l"="16.028,-10.174"]
"NangoHQ/nango" ["l"="16.113,-10.199"]
"reflex-dev/reflex" ["l"="42.887,20.693"]
"finic-ai/finic" ["l"="41.088,1.004"]
"odigos-io/odigos" ["l"="7.26,-6.404"]
"pepperize/cdk-organizations" ["l"="41.156,1.956"]
"boxfish-studio/sugar-rush" ["l"="41.146,1.976"]
"felixrieseberg/slack-archive" ["l"="41.928,1.048"]
"ErikKalkoken/slackchannel2pdf" ["l"="41.867,1.008"]
"Surfer-Org/Protocol" ["l"="41.408,0.554"]
"josephburnett/jd" ["l"="-13.268,-6.774"]
"TomWright/dasel" ["l"="-13.37,-6.701"]
"RamboRogers/rfhunter" ["l"="40.426,5.845"]
"reworkd/tarsier" ["l"="41.129,0.77"]
"clemlesne/scrape-it-now" ["l"="41.544,0.627"]
"wasi-master/13ft" ["l"="12.488,-8.751"]
"benawad/dogehouse" ["l"="-3.978,-29.71"]
"pacocoursey/cmdk" ["l"="-3.661,-29.894"]
"facebook/lexical" ["l"="-3.563,-29.731"]
"vercel/satori" ["l"="-3.77,-29.905"]
"NVIDIA/open-gpu-kernel-modules" ["l"="-14.222,-0.729"]
"vercel/turborepo" ["l"="-4.038,-29.805"]
"remotion-dev/remotion" ["l"="-3.828,-29.752"]
"shuding/nextra" ["l"="-3.618,-29.971"]
"bluesky-social/atproto" ["l"="-48.165,1.976"]
"stitchesjs/stitches" ["l"="-3.994,-29.643"]
"narze/THIS_REPO_HAS_3077_STARS" ["l"="-16.483,-6.245"]
"borisdayma/dalle-mini" ["l"="46.049,31.444"]
"rome/tools" ["l"="-4.076,-29.505"]
"katanaml/sparrow" ["l"="41.062,0.465"]
"ucbepic/docetl" ["l"="41.268,0.517"]
"run-llama/llama_cloud_services" ["l"="41.071,0.55"]
"QuivrHQ/MegaParse" ["l"="41.126,0.216"]
"truefoundry/cognita" ["l"="41.032,0.466"]
"lavague-ai/LaVague" ["l"="41,0.391"]
"Filimoa/open-parse" ["l"="41.109,0.554"]
"mindee/doctr" ["l"="46.249,6.107"]
"steel-dev/steel-browser" ["l"="41.272,0.179"]
"ragapp/ragapp" ["l"="41.055,0.424"]
"tableflowhq/csv-import" ["l"="41.097,1.27"]
"hydradatabase/columnar" ["l"="3.784,13.54"]
"openai/openai-openapi" ["l"="40.651,0.415"]
"openai/openai-node" ["l"="40.638,0.363"]
"openai/openai-assistants-quickstart" ["l"="41.113,0.346"]
"openai/plugins-quickstart" ["l"="41.147,-3.834"]
"openai/openai-realtime-console" ["l"="41.133,0.262"]
"openai/openai-quickstart-python" ["l"="40.479,0.364"]
"openai/openai-deno-build" ["l"="40.555,0.632"]
"openai/web-crawl-q-and-a-example" ["l"="40.539,0.617"]
"openai/openai-realtime-api-beta" ["l"="42.861,-1.221"]
"openai/openai-dotnet" ["l"="-44.173,6.413"]
"openai/openai-quickstart-node" ["l"="40.472,0.394"]
"openai/gpt-discord-bot" ["l"="40.43,0.404"]
"openai/openai-structured-outputs-samples" ["l"="41.375,0.279"]
"openai/openai-cua-sample-app" ["l"="41.294,0.218"]
"betalgo/openai" ["l"="-44.195,6.484"]
"OthersideAI/chronology" ["l"="53.518,26.092"]
"mukulpatnaik/researchgpt" ["l"="43.711,0.898"]
"anthropics/anthropic-sdk-python" ["l"="40.937,0.339"]
"ServiceWeaver/weaver" ["l"="4.144,-9.033"]
"Uniswap/wallet" ["l"="-20.489,10.136"]
"rawandahmad698/PyChatGPT" ["l"="43.804,0.832"]
"chiselstrike/chiselstrike" ["l"="40.217,1.803"]
"chiselstrike/chiselstore" ["l"="-10.394,-6.465"]
"tursodatabase/turso-cli" ["l"="40.278,1.678"]
"chiselstrike/chiselstrike-examples" ["l"="40.21,1.84"]
"MathisBullinger/froebel" ["l"="-12.807,-4.125"]
"dekimir/postgres-searchbox" ["l"="40.193,1.828"]
"daveshap/FinetuningTutorial" ["l"="40.577,1.205"]
"daveshap/PythonGPT3Tutorial" ["l"="40.591,1.194"]
"daveshap/PerfectEmailGenerator" ["l"="40.576,1.219"]
"daveshap/GPT3_ResearchAssistant" ["l"="40.564,1.22"]
"daveshap/TutorChatbot" ["l"="40.56,1.233"]
"daveshap/CreativeWritingCoach" ["l"="40.569,1.245"]
"daveshap/CoverLetterGenerator" ["l"="40.574,1.259"]
"daveshap/GPT3_CriticalArgument" ["l"="40.587,1.247"]
"daveshap/ResumeBuilderGpt3" ["l"="40.603,1.201"]
"daveshap/MovieScriptGenerator" ["l"="40.586,1.271"]
"daveshap/AutoMuse2" ["l"="40.525,1.243"]
"daveshap/AutoMuse" ["l"="40.501,1.286"]
"DS4SD/DocLayNet" ["l"="42.094,0.373"]
"HCIILAB/M6Doc" ["l"="46.373,5.917"]
"doc-analysis/DocBank" ["l"="46.363,6.095"]
"DS4SD/deepsearch-toolkit" ["l"="42.042,0.371"]
"buptlihang/CDLA" ["l"="46.403,6.006"]
"docling-project/docling-ibm-models" ["l"="42.033,0.356"]
"BobLd/DocumentLayoutAnalysis" ["l"="47.389,6.479"]
"ibm-aur-nlp/PubLayNet" ["l"="46.376,6.105"]
"rossumai/docile" ["l"="46.313,6.047"]
"allenai/vila" ["l"="-34.018,16.413"]
"DS4SD/deepsearch-glm" ["l"="42.057,0.374"]
"DS4SD/deepsearch-examples" ["l"="42.05,0.388"]
"doc-analysis/ReadingBank" ["l"="42.156,0.36"]
"jpWang/LiLT" ["l"="46.33,6.091"]
"IBM/SynthTabNet" ["l"="46.442,6.045"]
"langchain-ai/langchainjs" ["l"="40.688,0.432"]
"vercel/ai" ["l"="40.837,0.36"]
"transitive-bullshit/agentic" ["l"="43.891,1.02"]
"modelcontextprotocol/typescript-sdk" ["l"="41.004,0.109"]
"trpc/trpc" ["l"="-3.957,-29.841"]
"nextauthjs/next-auth" ["l"="-3.831,-29.803"]
"vercel/ai-chatbot" ["l"="40.852,0.228"]
"colinhacks/zod" ["l"="-3.966,-29.772"]
"privatenumber/tsx" ["l"="-4.221,-29.964"]
"honojs/hono" ["l"="-4.045,-29.977"]
"amineboutarfi/google_maps_scraper" ["l"="41.989,-0.183"]
"lifinance/create3-factory" ["l"="41.33,2.054"]
"boxyhq/jackson" ["l"="16.054,-10.073"]
"formbricks/formbricks" ["l"="15.992,-10.176"]
"Flagsmith/flagsmith" ["l"="15.913,-10.183"]
"firecamp-dev/firecamp" ["l"="16.003,-10.02"]
"comet-ml/opik" ["l"="41.031,0.315"]
"cyclops-ui/cyclops" ["l"="15.618,-9.886"]
"emcie-co/parlant" ["l"="41.236,0.227"]
"superduper-io/superduper" ["l"="40.669,0.323"]
"humor4fun/slack-backup" ["l"="42.009,1.186"]
"fynnfluegge/rocketnotes" ["l"="41.416,0.411"]
"KruxAI/ragbuilder" ["l"="41.314,0.488"]
"menloresearch/ichigo" ["l"="41.217,0.305"]
"amanv1906/GENAI-CareerAssistant-Multiagent" ["l"="41.483,0.489"]
"kturung/langgraph_streamlit_codeassistant" ["l"="41.443,0.493"]
"gptme/gptme" ["l"="41.161,0.272"]
"chroxify/haptic" ["l"="12.509,-8.573"]
"hrithikkoduri/WebRover" ["l"="41.494,0.379"]
"chonkie-ai/chonkie" ["l"="41.236,0.51"]
"yoheinakajima/ditto" ["l"="41.374,0.391"]
"usefulsensors/moonshine" ["l"="38.537,1.803"]
"cnunescoelho/kiroku" ["l"="41.533,0.502"]
"liseami/screenshot-to-code" ["l"="45.502,-0.58"]
"Storia-AI/sage" ["l"="41.408,0.519"]
"video-db/Director" ["l"="41.473,0.207"]
"Theneo-Inc/api-documentation" ["l"="41.591,2.149"]
"defi-school/Babylon-check-and-delegate" ["l"="41.611,2.157"]
"mtabanja/mtabanja" ["l"="41.577,2.183"]
"nickokss/jumper" ["l"="41.562,2.174"]
"paulpanwang/Gen6DNeRF" ["l"="41.552,2.163"]
"cryptohub-agency/smart_contract_audits" ["l"="41.599,2.177"]
"AlexTeslenko/leetcode" ["l"="41.589,2.185"]
"Isalia20/quad-iou-torch" ["l"="41.581,2.124"]
"amityalwar/snoofus" ["l"="41.571,2.134"]
"greydoubt/m77" ["l"="41.588,2.133"]
"sivakumar-mahalingam/DSA" ["l"="41.606,2.139"]
"CerberusChaos/Starknet-Dapp-Template" ["l"="41.601,2.126"]
"raphaelsty/cherche" ["l"="41.368,1.318"]
"raphaelsty/abayes" ["l"="41.387,1.354"]
"colonelwatch/abstracts-search" ["l"="41.394,1.385"]
"online-ml/watermill.rs" ["l"="41.409,1.502"]
"raphaelsty/kgsearch" ["l"="41.374,1.372"]
"raphaelsty/neural-cherche" ["l"="41.306,1.111"]
"iamnotstatic/multichain-crypto-wallet" ["l"="42.358,0.522"]
"andreyykavv/RynexLLM" ["l"="42.328,0.495"]
"ultramodernism/manifesto-paper" ["l"="42.366,0.573"]
"viziax/viziax-docs" ["l"="42.386,0.566"]
"viziax/surveylogic-splat" ["l"="42.3,0.525"]
"viziax/surveylogic-crm" ["l"="42.393,0.543"]
"mmeerrkkaa/openrouter-kit" ["l"="42.414,0.59"]
"Dokan-E-Commerce/compliance-laravel-sdk" ["l"="42.302,0.542"]
"jakebark/tag-nag" ["l"="42.44,0.51"]
"waylaidwanderer/node-chatgpt-api" ["l"="43.835,1.049"]
"mpociot/chatgpt-vscode" ["l"="43.806,0.885"]
"mckaywrigley/chatbot-ui-lite" ["l"="41.409,-3.738"]
"mrdbourke/machine-learning-notes" ["l"="42.287,0.326"]
"instill-ai/instill-core" ["l"="40.81,0.756"]
"instill-ai/console" ["l"="40.784,0.866"]
"instill-ai/instill.tech" ["l"="40.779,0.852"]
"instill-ai/community" ["l"="40.791,0.853"]
"getzep/zep" ["l"="40.993,0.671"]
"tensorzero/tensorzero" ["l"="40.917,0.469"]
"bentoml/BentoML" ["l"="45.251,25.835"]
"instill-ai/cli" ["l"="40.773,0.875"]
"activeloopai/deeplake" ["l"="45.165,25.816"]
"InfuseAI/primehub" ["l"="-0.331,16.167"]
"MiuLab/Taiwan-LLM" ["l"="22.125,2.041"]
"ray-project/kuberay" ["l"="45.237,25.683"]
"Oliveriver/5d-diplomacy-with-multiverse-time-travel" ["l"="41.297,-0.333"]
"kestasjk/webDiplomacy" ["l"="57.959,18.699"]
"fnuecke/oc2" ["l"="-36.754,-11.777"]
"landing-ai/vision-agent" ["l"="41.106,0.017"]
"torcado194/scritch-player" ["l"="41.398,-0.577"]
"potpie-ai/potpie" ["l"="41.174,0.037"]
"JackHopkins/factorio-learning-environment" ["l"="55.633,-7.843"]
"daveshap/RecursiveSummarizer" ["l"="40.589,1.155"]
"daveshap/MultiDocumentAnswering" ["l"="40.577,1.182"]
"daveshap/Document_Scraping" ["l"="40.591,1.172"]
"daveshap/LongtermChatExternalSources" ["l"="40.61,1.14"]
"daveshap/PDF_OCR_ChatGPT_Investigation" ["l"="40.601,1.167"]
"daveshap/PineconeInfiniteMemoryChatbot" ["l"="40.621,1.12"]
"daveshap/ChatGPT_QA_Regenerative_Medicine" ["l"="40.631,1.128"]
"daveshap/Recreate_ChatGPT" ["l"="40.607,1.179"]
"daveshap/ChatGPT_API_Salience" ["l"="40.621,1.104"]
"daveshap/DiversePerspectives" ["l"="40.589,1.209"]
"daveshap/SCOTUS_GPT3_Opinions" ["l"="40.557,1.181"]
"daveshap/YouTubeChapterGenerator" ["l"="40.678,1.012"]
"DS4SD/quackling" ["l"="42.088,0.349"]
"docling-project/docling-core" ["l"="42.02,0.371"]
"fnzhan/MoNCE" ["l"="41.171,2.109"]
"gbvanrenswoude/async-aws-cdk" ["l"="41.174,2.137"]
"ExoMonk/cairo-nft" ["l"="41.174,2.156"]
"EmperorMew/unstoppable_spam_bot" ["l"="41.191,2.143"]
"zavr/nodectl" ["l"="41.158,2.144"]
"Jaseci-Labs/jaseci" ["l"="41.175,1.976"]
"dataplane-app/dataplane" ["l"="41.167,1.988"]
"endurox-dev/endurox" ["l"="41.178,1.963"]
"caomuqing/neptune" ["l"="41.171,1.95"]
"nixonjoshua98/dexscreener" ["l"="42.691,-0.697"]
"liqtags/DexScreenerClient" ["l"="42.718,-0.703"]
"dexscreener/google-sheets" ["l"="42.721,-0.729"]
"1f1n/gmgnai-wrapper" ["l"="42.614,-0.651"]
"WithSecureLabs/lolcerts" ["l"="40.41,-1.069"]
"un/inbox" ["l"="16.232,-10.045"]
"Pandora-Labs-Org/erc404" ["l"="-46.872,-32.087"]
"skiff-org/trawler" ["l"="40.427,-0.982"]
"oxen-io/session-desktop" ["l"="-51.425,5.857"]
"unkeyed/unkey" ["l"="16.113,-10.111"]
"Codehagen/Badget" ["l"="16.196,-10.059"]
"cyberus-technology/virtualbox-kvm" ["l"="40.515,-0.666"]
"awslabs/llrt" ["l"="-4.113,-30.101"]
"privacytests/privacytests.org" ["l"="-53.444,11.504"]
"ProtonMail/WebClients" ["l"="-52.132,7.458"]
"oxen-io/session-android" ["l"="-52.496,9.136"]
"bpmct/coder-templates" ["l"="42.404,-0.74"]
"sharkymark/v2-templates" ["l"="42.382,-0.731"]
"blackle/blamscamp" ["l"="41.414,-0.636"]
"fluffy-critter/bandcrash" ["l"="41.435,-0.635"]
"blyssprivacy/sdk" ["l"="41.107,1.518"]
"brave-experiments/frodo-pir" ["l"="41.112,1.573"]
"daveshap/PlotGenerator" ["l"="40.61,1.242"]
"daveshap/SceneSimulation" ["l"="40.598,1.254"]
"daveshap/SynopsisGenerator" ["l"="40.606,1.276"]
"deadliner-app/Deadliner" ["l"="41.158,1.942"]
"wednesday-solutions/nextjs-template" ["l"="41.102,1.946"]
"add2cal/add-to-calendar-button-react" ["l"="41.178,1.916"]
"instill-ai/deprecated-core" ["l"="40.784,0.883"]
"instill-ai/cortex" ["l"="40.763,0.89"]
"instill-ai/deprecated-model" ["l"="40.776,0.893"]
"drudge/n8n-nodes-puppeteer" ["l"="41.759,-0.282"]
"minhlucvan/n8n-nodes-browserless" ["l"="41.795,-0.308"]
"edbrdi/n8n-nodes-puppeteer-extended" ["l"="41.802,-0.326"]
"Touxan/n8n-ultimate-scraper" ["l"="41.725,-0.248"]
"umanamente/n8n-nodes-imap" ["l"="41.776,-0.327"]
"n8nhackers/n8n-nodes-document-generator" ["l"="41.769,-0.313"]
"oriondesign2015/n8n-nodes-evolution-api" ["l"="27.206,-30.541"]
"tianyic/only_train_once_personal_footprint" ["l"="41.636,2.2"]
"microsoft/only_train_once" ["l"="41.672,2.205"]
"WoosukKwon/retraining-free-pruning" ["l"="53.128,27.909"]
"huyphan168/EasyCuda" ["l"="41.677,2.225"]
"tianyic/obproxsg" ["l"="41.652,2.224"]
"HankYe/PAGCP" ["l"="41.667,2.246"]
"ghimiredhikura/Awasome-Pruning" ["l"="38.652,-0.098"]
"horseee/LLM-Pruner" ["l"="38.785,-0.288"]
"ternera/hacker101-ctf" ["l"="41.636,2.143"]
"VainF/Torch-Pruning" ["l"="52.647,33.355"]
"coder/envbox" ["l"="42.328,-0.685"]
"daveshap/SymphonyOfThought" ["l"="40.642,1.171"]
"daveshap/BenevolentByDesign" ["l"="40.637,1.225"]
"daveshap/ATOM_Framework" ["l"="40.661,1.091"]
"v0idum/solana_tracker_bot" ["l"="42.501,-0.58"]
"LagLord/Solana-Wallet-Tracker-Crypto-NFT-sales-Discord-Bot" ["l"="42.516,-0.595"]
"kiryl-sol/solana-wallet-tracker" ["l"="42.481,-0.574"]
"Lucifer1590/solana-transaction-analyzer" ["l"="42.533,-0.583"]
"TeleportDAO/teleswap-contracts-evm" ["l"="42.821,-0.523"]
"TeleportDAO/bitcoin-ethereum-smart-contracts" ["l"="42.743,-0.489"]
"TeleportDAO/bls12-381" ["l"="42.858,-0.539"]
"TeleportDAO/liquality-swap-provider" ["l"="42.85,-0.516"]
"TeleportDAO/audits" ["l"="42.844,-0.532"]
"TeleportDAO/classic-bls12-382" ["l"="42.835,-0.547"]
"retail-ai-inc/bean" ["l"="41.853,1.641"]
"retail-ai-inc/beanq" ["l"="41.837,1.637"]
"instill-ai/pipeline-backend" ["l"="40.753,0.911"]
"lifinance/customized-token-list" ["l"="41.344,2.068"]
"coder/jetbrains-coder" ["l"="42.389,-0.744"]
"opendatahub-io-contrib/workbench-images" ["l"="42.403,0.245"]
"opendatahub-io/notebooks" ["l"="42.441,0.248"]
"ParisNeo/FaceAnalyzer" ["l"="39.639,0.347"]
"ParisNeo/safe_store" ["l"="39.704,0.35"]
"ricklamers/orchest-weaviate-tweakers-search" ["l"="41.599,1.167"]
"weaviate/arXiv-demo-dataset" ["l"="41.584,1.133"]
"cedana/cedana" ["l"="41.046,1.082"]
"cedana/cedana-cli" ["l"="41.032,1.08"]
"Skyvern-AI/wyvern" ["l"="41.041,1.065"]
"instill-ai/model-backend" ["l"="40.762,0.921"]
"kapoorsaumitra/padhlebsdk" ["l"="40.878,1.27"]
"kapoorsaumitra/studentbenefits" ["l"="40.889,1.233"]
"coqui-ai/TTS" ["l"="38.433,1.412"]
"suno-ai/bark" ["l"="38.441,1.332"]
"AUTOMATIC1111/stable-diffusion-webui" ["l"="38.181,1.057"]
"SYSTRAN/faster-whisper" ["l"="40.559,3.249"]
"microsoft/JARVIS" ["l"="39.962,0.319"]
"Stability-AI/StableLM" ["l"="39.941,0.547"]
"yoheinakajima/babyagi" ["l"="41.178,-3.894"]
"zylon-ai/private-gpt" ["l"="40.204,0.112"]
"eth-sri/lmql" ["l"="40.817,0.719"]
"1rgs/jsonformer" ["l"="40.858,0.739"]
"PrefectHQ/marvin" ["l"="41.256,-3.98"]
"protectai/rebuff" ["l"="38.037,-7.461"]
"arc53/DocsGPT" ["l"="40.331,0.173"]
"Pythagora-io/gpt-pilot" ["l"="40.484,0.101"]
"mayooear/ai-pdf-chatbot-langchain" ["l"="41.28,-3.796"]
"eosphoros-ai/DB-GPT" ["l"="40.552,0.03"]
"bhaskatripathi/pdfGPT" ["l"="41.151,-3.66"]
"PromtEngineer/localGPT" ["l"="40.265,0.157"]
"microsoft/promptflow" ["l"="40.593,0.384"]
"Future-House/paper-qa" ["l"="40.708,0.391"]
"SakanaAI/AI-Scientist" ["l"="40.81,0.228"]
"blackadad/paper-scraper" ["l"="-34.107,16.205"]
"myshell-ai/OpenVoice" ["l"="38.484,1.436"]
"roboflow/notebooks" ["l"="47.729,26.311"]
"ultralytics/ultralytics" ["l"="50.35,29.629"]
"langflow-ai/langflow" ["l"="40.494,-0.084"]
"localsend/localsend" ["l"="12.632,-9.656"]
"2noise/ChatTTS" ["l"="38.426,1.48"]
"harry0703/MoneyPrinterTurbo" ["l"="40.684,-0.439"]
"KRTirtho/spotube" ["l"="-52.22,8.725"]
"yt-dlp/yt-dlp" ["l"="-48.826,9.897"]
"upscayl/upscayl" ["l"="38.463,0.809"]
"GopeedLab/gopeed" ["l"="-48.774,13.036"]
"EleutherAI/lm-evaluation-harness" ["l"="38.704,-0.669"]
"allenai/RL4LMs" ["l"="37.17,-0.197"]
"facebookresearch/metaseq" ["l"="38.79,-0.808"]
"opendilab/awesome-RLHF" ["l"="37.127,-0.285"]
"oslabs-beta/Caribu" ["l"="41.165,2.559"]
"RediseeLabs/redisee" ["l"="41.168,2.542"]
"oslabs-beta/Aionic" ["l"="41.154,2.538"]
"oslabs-beta/Splache" ["l"="41.15,2.552"]
"oslabs-beta/kubehawk" ["l"="41.183,2.551"]
"oslabs-beta/NetPulse" ["l"="41.195,2.568"]
"oslabs-beta/CloudShift" ["l"="41.184,2.565"]
"AcademySoftwareFoundation/xstudio" ["l"="-31.224,-27.448"]
"timothybrooks/instruct-pix2pix" ["l"="32.237,31.989"]
"google/sentencepiece" ["l"="53.057,25.762"]
"m-bain/whisperX" ["l"="40.533,3.206"]
"Const-me/Whisper" ["l"="45.447,-1.805"]
"huggingface/text-generation-inference" ["l"="38.78,-0.679"]
"lightpanda-io/browser" ["l"="41.201,-0.025"]
"browserbase/stagehand" ["l"="41.126,0.047"]
"onlook-dev/onlook" ["l"="16.179,-10.232"]
"CapSoftware/Cap" ["l"="16.21,-10.181"]
"microsoft/data-formulator" ["l"="41.015,-0.017"]
"Dokploy/dokploy" ["l"="15.967,-10.416"]
"yamadashy/repomix" ["l"="41.056,-0.042"]
"trycua/cua" ["l"="41.36,0.062"]
"autoscrape-labs/pydoll" ["l"="41.136,-0.051"]
"daveshap/raven" ["l"="40.648,1.043"]
"daveshap/REMO_Framework" ["l"="40.659,1.06"]
"daveshap/CharacterSimulation" ["l"="40.596,1.266"]
"FlagOpen/FlagEmbedding" ["l"="38.963,-1.98"]
"Chainlit/chainlit" ["l"="40.742,0.506"]
"pydantic/pydantic-ai" ["l"="41.052,0.276"]
"noamgat/lm-format-enforcer" ["l"="40.908,0.76"]
"ShishirPatil/gorilla" ["l"="41.126,-3.931"]
"kyegomez/tree-of-thoughts" ["l"="36.576,-2.223"]
"griptape-ai/griptape" ["l"="40.915,0.717"]
"unslothai/unsloth" ["l"="40.533,0.197"]
"openai/swarm" ["l"="40.882,0.2"]
"NVIDIA/TensorRT-LLM" ["l"="38.92,-0.621"]
"willwulfken/MidJourney-Styles-and-Keywords-Reference" ["l"="39.942,-0.071"]
"Moonvy/OpenPromptStudio" ["l"="43.856,0.994"]
"invoke-ai/InvokeAI" ["l"="38.436,0.95"]
"camenduru/stable-diffusion-webui-colab" ["l"="32.339,31.797"]
"Mikubill/sd-webui-controlnet" ["l"="32.226,31.739"]
"openai-translator/openai-translator" ["l"="43.901,1.127"]
"hua1995116/awesome-ai-painting" ["l"="44.076,1.071"]
"ChatAnyTeam/ChatAny" ["l"="45.595,2.104"]
"JushBJJ/Mr.-Ranedeer-AI-Tutor" ["l"="40.306,-0.008"]
"thinkingjimmy/Learning-Prompt" ["l"="43.855,0.947"]
"lllyasviel/ControlNet" ["l"="38.358,1.011"]
"novicezk/midjourney-proxy" ["l"="45.554,2.108"]
"thakkarparth007/copilot-explorer" ["l"="40.618,0.873"]
"saschaschramm/github-copilot" ["l"="40.601,0.856"]
"mengjian-github/copilot-analysis" ["l"="40.676,0.78"]
"unit-mesh/choco-builder" ["l"="40.644,0.889"]
"CoderEval/CoderEval" ["l"="36.207,-0.059"]
"modal-labs/modal-examples" ["l"="41.558,1.468"]
"modal-labs/modal-client" ["l"="41.606,1.519"]
"modal-labs/awesome-modal" ["l"="41.531,1.501"]
"modal-labs/llm-finetuning" ["l"="41.467,1.371"]
"modal-labs/quillman" ["l"="41.609,1.553"]
"parlance-labs/ftcourse" ["l"="41.506,1.277"]
"abetlen/llama-cpp-python" ["l"="40.226,0.522"]
"leejet/stable-diffusion.cpp" ["l"="40.288,0.872"]
"mlc-ai/mlc-llm" ["l"="40.109,0.522"]
"huggingface/accelerate" ["l"="38.719,-0.759"]
"trungdq88/Awesome-Black-Friday-Cyber-Monday" ["l"="40.373,-0.221"]
"mRs-/Black-Friday-Deals" ["l"="42.182,-27.116"]
"twf-nikhila/Awesome-Black-Friday-Cyber-Monday-deals" ["l"="9.227,-22.504"]
"0x90n/InfoSec-Black-Friday" ["l"="-45.3,-31.848"]
"everywall/ladder" ["l"="48.45,29.957"]
"vvbbnn00/WARP-Clash-API" ["l"="45.484,0.775"]
"danmindru/rare-big-deal" ["l"="9.193,-22.52"]
"BuilderIO/gpt-crawler" ["l"="40.494,-0.011"]
"MrKai77/Loop" ["l"="26.094,-22.531"]
"LouisShark/chatgpt_system_prompt" ["l"="40.543,0.259"]
"run-llama/rags" ["l"="40.614,0.225"]
"sub-store-org/Sub-Store" ["l"="-50.761,14.724"]
"VirgilClyne/iRingo" ["l"="-50.76,14.758"]
"linexjlin/GPTs" ["l"="40.353,-0.048"]
"jason5ng32/MyIP" ["l"="-46.426,15.044"]
"rubberduck-ai/rubberduck-vscode" ["l"="41.195,0.903"]
"ajikan/ScribeAI" ["l"="41.249,1.031"]
"vercel/modelfusion" ["l"="41.146,0.971"]
"greyhatguy007/Machine-Learning-Specialization-Coursera" ["l"="48.243,27.152"]
"mrdbourke/pytorch-deep-learning" ["l"="47.702,26.234"]
"karpathy/cryptos" ["l"="23.286,14.387"]
"karpathy/nano-llama31" ["l"="38.947,-0.192"]
"AviSoori1x/makeMoE" ["l"="38.595,-0.41"]
"karpathy/lecun1989-repro" ["l"="23.321,14.349"]
"karpathy/arxiv-sanity-lite" ["l"="23.301,14.35"]
"marqo-ai/marqo" ["l"="40.686,0.648"]
"replicate/cog" ["l"="45.067,25.798"]
"RIP-Comm/sossoldi" ["l"="41.277,-0.153"]
"italiaremote/awesome-italia-remote" ["l"="41.663,-1.338"]
"cheshire-cat-ai/core" ["l"="41.598,-1.335"]
"ai-christianson/RA.Aid" ["l"="41.248,0.001"]
"pagopa/io-app" ["l"="41.761,-1.293"]
"microsoft/RD-Agent" ["l"="41.204,0.082"]
"RiccardoPP/dotfiles" ["l"="41.537,-1.164"]
"GuidoPenta/galactic-CV-guide-for-developers" ["l"="41.618,-1.382"]
"langchain-ai/local-deep-researcher" ["l"="41.153,0.018"]
"mensae/hard-python" ["l"="41.377,-0.404"]
"antirez/ttt-rl" ["l"="-5.684,19.856"]
"yuruotong1/autoMate" ["l"="41.234,-0.098"]
"ananthakumaran/paisa" ["l"="11.24,-12.203"]
"tj-actions/changed-files" ["l"="8.172,-45.543"]
"srush/Tensor-Puzzles" ["l"="39.063,-0.265"]
"srush/Triton-Puzzles" ["l"="38.988,-0.306"]
"srush/LLM-Training-Puzzles" ["l"="39.012,-0.261"]
"NVIDIA/cutlass" ["l"="38.965,-0.634"]
"arogozhnikov/einops" ["l"="50.9,29.579"]
"adam-maj/tiny-gpu" ["l"="31.984,-3.886"]
"xlite-dev/LeetCUDA" ["l"="36.853,0.818"]
"atherosai/ui" ["l"="40.383,-0.291"]
"Lissy93/web-check" ["l"="12.737,-9.716"]
"gleam-lang/gleam" ["l"="-13.453,-7.914"]
"rolldown/rolldown" ["l"="-4.149,-29.997"]
"apernet/OpenGFW" ["l"="-48.752,13.432"]
"wandb/openui" ["l"="40.603,0.068"]
"drawdb-io/drawdb" ["l"="15.806,-10.49"]
"open-telemetry/opentelemetry-ebpf-profiler" ["l"="7.222,-6.312"]
"HeyPuter/puter" ["l"="12.695,-9.558"]
"plandex-ai/plandex" ["l"="40.701,0.055"]
"FujiwaraChoki/MoneyPrinter" ["l"="40.638,-0.235"]
"PKU-YuanGroup/Open-Sora-Plan" ["l"="33.524,31.053"]
"nashsu/FreeAskInternet" ["l"="40.769,0.065"]
"WongKinYiu/yolov9" ["l"="48.681,29.992"]
"steven2358/awesome-generative-ai" ["l"="40.692,0.35"]
"filipecalegario/awesome-generative-ai" ["l"="44.175,0.689"]
"ai-collection/ai-collection" ["l"="44.161,0.773"]
"aishwaryanr/awesome-generative-ai-guide" ["l"="40.959,0.454"]
"e2b-dev/awesome-ai-agents" ["l"="40.773,0.248"]
"sindresorhus/awesome-chatgpt" ["l"="44.081,0.78"]
"mahseema/awesome-ai-tools" ["l"="44.478,0.477"]
"owainlewis/awesome-artificial-intelligence" ["l"="47.661,28.533"]
"GoogleCloudPlatform/generative-ai" ["l"="40.881,0.313"]
"anthropics/anthropic-sdk-typescript" ["l"="41.042,0.445"]
"anthropics/anthropic-tokenizer-typescript" ["l"="41.005,0.551"]
"google-gemini/deprecated-generative-ai-js" ["l"="41.19,0.309"]
"anthropics/anthropic-sdk-go" ["l"="4.161,-9.554"]
"anthropics/anthropic-retrieval-demo" ["l"="40.939,0.43"]
"anthropics/anthropic-tools" ["l"="40.929,0.444"]
"anthropics/anthropic-sdk-java" ["l"="45.893,2.19"]
"dqbd/tiktoken" ["l"="46.104,1.056"]
"HumeAI/hume-api-examples" ["l"="41.336,0.822"]
"langchain-ai/langgraphjs" ["l"="41.13,0.383"]
"run-llama/LlamaIndexTS" ["l"="40.977,0.513"]
"groq/groq-typescript" ["l"="41.436,0.688"]
"microsoft/semantic-kernel" ["l"="40.359,0.332"]
"smol-ai/developer" ["l"="41.172,-3.955"]
"IntelLabs/fastRAG" ["l"="41.095,0.79"]
"AkariAsai/self-rag" ["l"="41.139,0.746"]
"RUC-NLPIR/FlashRAG" ["l"="41.17,0.655"]
"stanford-futuredata/ColBERT" ["l"="54.569,25.629"]
"Raudaschl/rag-fusion" ["l"="41.017,0.792"]
"jzbjyb/FLARE" ["l"="54.404,25.563"]
"castorini/pyserini" ["l"="54.512,25.65"]
"Tongji-KGLLM/RAG-Survey" ["l"="41.163,0.76"]
"ray-project/llm-applications" ["l"="41.038,0.801"]
"facebookresearch/atlas" ["l"="54.454,25.579"]
"beir-cellar/beir" ["l"="54.538,25.659"]
"ContextualAI/gritlm" ["l"="54.555,25.676"]
"huggingface/transformers.js" ["l"="40.583,0.458"]
"langchain-ai/chat-langchain" ["l"="41.317,-3.641"]
"tantaraio/voy" ["l"="40.753,1.029"]
"visheratin/web-ai" ["l"="40.706,1.266"]
"jacoblee93/fully-local-pdf-chatbot" ["l"="41.173,0.483"]
"not-pizza/victor" ["l"="40.766,1.154"]
"Stevenic/vectra" ["l"="40.73,1.062"]
"huggingface/ratchet" ["l"="-8.584,-4.315"]
"nitaiaharoni1/vector-storage" ["l"="40.726,1.128"]
"yusufhilmi/client-vector-search" ["l"="40.736,1.158"]
"do-me/SemanticFinder" ["l"="40.743,1.181"]
"ngxson/wllama" ["l"="40.532,1.016"]
"asg017/sqlite-vss" ["l"="40.628,0.963"]
"webonnx/wonnx" ["l"="-8.444,-4.398"]
"ShravanSunder/hnswlib-wasm" ["l"="40.747,1.091"]
"rhashimoto/wa-sqlite" ["l"="-6.34,-28.404"]
"justjake/quickjs-emscripten" ["l"="-22.241,-42.257"]
"jaymody/picoGPT" ["l"="40.005,0.723"]
"amazon-science/mm-cot" ["l"="49.134,30.261"]
"pytorch-labs/gpt-fast" ["l"="38.863,-0.479"]
"lucidrains/x-transformers" ["l"="45.933,31.614"]
"KellerJordan/modded-nanogpt" ["l"="38.872,-0.246"]
"Lightning-AI/lit-llama" ["l"="39.948,0.705"]
"openlm-research/open_llama" ["l"="39.915,0.666"]
"PradipNichite/Youtube-Tutorials" ["l"="42.101,1.423"]
"Coding-Crashkurse/Langchain-Full-Course" ["l"="42.059,1.359"]
"microsoft/TaskWeaver" ["l"="40.732,0.422"]
"superagent-ai/superagent" ["l"="41.136,-3.874"]
"activepieces/activepieces" ["l"="15.934,-10.157"]
"microsoft/promptbase" ["l"="40.703,0.516"]
"langchain-ai/opengpts" ["l"="40.767,0.456"]
"vanna-ai/vanna" ["l"="40.679,0.102"]
"onyx-dot-app/onyx" ["l"="40.658,0.274"]
"ml-explore/mlx-examples" ["l"="27.528,-21.061"]
"OthersideAI/self-operating-computer" ["l"="40.701,0.298"]
"PRIS-CV/DemoFusion" ["l"="33.496,31.134"]
"Unstructured-IO/community" ["l"="41.422,1.148"]
"Unstructured-IO/unstructured-api-tools" ["l"="41.406,1.15"]
"poloclub/diffusion-explainer" ["l"="40.542,0.428"]
"poloclub/LLM-Attributor" ["l"="40.485,0.506"]
"infiniflow/infinity" ["l"="40.691,0.241"]
"facebookincubator/velox" ["l"="-0.461,14.957"]
"xorbitsai/inference" ["l"="40.614,0.018"]
"netease-youdao/BCEmbedding" ["l"="38.98,-2.017"]
"OpenSPG/KAG" ["l"="41.147,0.34"]
"databendlabs/databend" ["l"="-0.454,15.044"]
"risinglightdb/risinglight" ["l"="0.552,13.994"]
"GreptimeTeam/greptimedb" ["l"="-0.383,15.072"]
"InternLM/lmdeploy" ["l"="38.95,-0.593"]
"OpenSPG/openspg" ["l"="41.207,0.478"]
"netease-youdao/QAnything" ["l"="40.678,-0.023"]
"Helicone/helicone" ["l"="40.994,0.57"]
"anthropics/anthropic-cookbook" ["l"="40.919,0.196"]
"googleapis/python-genai" ["l"="41.198,0.259"]
"google-gemini/deprecated-generative-ai-python" ["l"="41.107,0.288"]
"anthropics/hh-rlhf" ["l"="37.194,-0.187"]
"anthropics/anthropic-quickstarts" ["l"="41.007,0.183"]
"anthropics/prompt-eng-interactive-tutorial" ["l"="41.066,0.206"]
"anthropics/courses" ["l"="40.974,0.201"]
"Doriandarko/maestro" ["l"="41.075,0.397"]
"anthropics/anthropic-bedrock-python" ["l"="40.892,0.383"]
"modelcontextprotocol/python-sdk" ["l"="41.051,0.055"]
"bytedance/monolith" ["l"="40.937,-0.091"]
"deepseek-ai/DeepSeek-Coder" ["l"="40.431,-0.221"]
"ericciarla/trendFinder" ["l"="41.175,0.07"]
"antiwork/shortest" ["l"="41.171,-0.006"]
"oumi-ai/oumi" ["l"="40.978,-0.074"]
"oslabs-beta/nimbus" ["l"="41.187,2.462"]
"oslabs-beta/QLache" ["l"="41.185,2.48"]
"oslabs-beta/KafkaCompass" ["l"="41.198,2.473"]
"oslabs-beta/solid-rewind" ["l"="41.188,2.443"]
"oslabs-beta/DataDoc" ["l"="41.174,2.471"]
"oslabs-beta/docker-watch-app" ["l"="41.191,2.428"]
"oslabs-beta/Knight-Owl-Display" ["l"="41.201,2.289"]
"oslabs-beta/KnightOwl" ["l"="50.689,-0.379"]
"minimaxir/simpleaichat" ["l"="41.109,-3.993"]
"langroid/langroid" ["l"="40.977,0.6"]
"DAGWorks-Inc/burr" ["l"="41.11,0.671"]
"jackmpcollins/magentic" ["l"="40.936,0.801"]
"Forethought-Technologies/AutoChain" ["l"="41.284,-3.914"]
"young-geng/EasyLM" ["l"="39.958,0.853"]
"project-baize/baize-chatbot" ["l"="39.074,-2.283"]
"AI-Hypercomputer/maxtext" ["l"="21.833,13.953"]
"togethercomputer/RedPajama-Data" ["l"="39.894,0.706"]
"EleutherAI/pythia" ["l"="37.13,-0.129"]
"mosaicml/llm-foundry" ["l"="39.881,0.753"]
"Sea-Snell/JAXSeq" ["l"="21.943,13.915"]
"OpenGVLab/LLaMA-Adapter" ["l"="39.851,0.706"]
"Sea-Snell/JAX_llama" ["l"="21.939,13.891"]
"stanford-crfm/levanter" ["l"="21.857,13.985"]
"erfanzar/EasyDeL" ["l"="21.929,13.935"]
"google-research/t5x" ["l"="37.139,-0.072"]
"lunary-ai/lunary" ["l"="40.944,0.604"]
"langwatch/langwatch" ["l"="41.285,0.339"]
"Portkey-AI/gateway" ["l"="40.818,0.417"]
"AgentOps-AI/agentops" ["l"="41.051,0.337"]
"vocodedev/vocode-core" ["l"="41.059,0.574"]
"TheR1D/shell_gpt" ["l"="40.515,0.394"]
"sigoden/aichat" ["l"="40.589,0.683"]
"Aider-AI/aider" ["l"="40.722,0.145"]
"BuilderIO/ai-shell" ["l"="41.277,-3.942"]
"mudler/LocalAI" ["l"="40.389,0.18"]
"danny-avila/LibreChat" ["l"="40.589,0.159"]
"continuedev/continue" ["l"="40.648,0.072"]
"TabbyML/tabby" ["l"="40.498,0.034"]
"opendatahub-io-contrib/ai-on-openshift" ["l"="42.334,0.242"]
"rh-aiservices-bu/llm-on-openshift" ["l"="42.264,0.247"]
"rh-aiservices-bu/parasol-insurance" ["l"="42.358,0.24"]
"jucasoliveira/terminalGPT" ["l"="40.333,1.094"]
"adamyodinsky/TerminalGPT" ["l"="40.305,1.219"]
"0xacx/chatGPT-shell-cli" ["l"="40.36,1.039"]
"VaibhavAcharya/code-gpt" ["l"="40.272,1.232"]
"aandrew-me/tgpt" ["l"="40.389,0.954"]
"transitive-bullshit/chatgpt-twitter-bot" ["l"="43.804,0.576"]
"liady/ChatGPT-pdf" ["l"="43.813,0.736"]
"abhagsain/ai-cli" ["l"="-13.02,-6.01"]
"Enkkfull/hard-python" ["l"="41.392,-0.452"]
"mensae/Hard-Python-Redhead-Edition" ["l"="41.406,-0.462"]
"gianlucajahn/react-ecommerce-store" ["l"="41.153,1.994"]
"oqyh/Game-Manager" ["l"="41.127,2.015"]
"Muvon/yoda" ["l"="41.119,1.996"]
"amadotejada/unopass" ["l"="41.105,2.032"]
"xeol-io/xeol" ["l"="41.027,1.125"]
"Trainy-ai/llm-atc" ["l"="41.022,1.09"]
"briefercloud/ergomake" ["l"="41.055,1.069"]
"poozlehq/poozle" ["l"="41.029,1.049"]
"quack-ai/companion-vscode" ["l"="41.025,1.067"]
"trytrench/trench" ["l"="41.046,1.043"]
"artie-labs/transfer" ["l"="41.035,1.099"]
"xeol-io/bumpgen" ["l"="40.983,1.242"]
"iusztinpaul/energy-forecasting" ["l"="41.279,0.696"]
"iusztinpaul/hands-on-llms" ["l"="28.801,-26.962"]
"Paulescu/hands-on-train-and-deploy-ml" ["l"="48.028,26.605"]
"fmind/mlops-python-package" ["l"="41.272,0.666"]
"decodingml/personalized-recommender-course" ["l"="41.307,0.666"]
"Paulescu/build-and-deploy-real-time-feature-pipeline" ["l"="48.053,26.619"]
"Paulescu/hands-on-rl" ["l"="48.023,26.537"]
"decodingml/llm-twin-course" ["l"="41.201,0.612"]
"featurestoreorg/serverless-ml-course" ["l"="47.988,26.449"]
"logicalclocks/hopsworks-tutorials" ["l"="48.028,26.638"]
"Paulescu/real-time-data-pipelines-in-python" ["l"="48.049,26.675"]
"MLOps-Courses/mlops-coding-course" ["l"="41.294,0.683"]
"GokuMohandas/mlops-course" ["l"="48.006,26.378"]
"decodingml/second-brain-ai-assistant-course" ["l"="41.293,0.6"]
"graviraja/MLOps-Basics" ["l"="47.948,26.32"]
"Unstructured-IO/unstructured-api" ["l"="41.268,0.825"]
"Unstructured-IO/unstructured-python-client" ["l"="41.314,0.943"]
"Unstructured-IO/unstructured-inference" ["l"="41.394,1.106"]
"Unstructured-IO/unstructured-js-client" ["l"="41.302,0.926"]
"StreetLamb/tribe" ["l"="41.33,0.465"]
"AnswerDotAI/byaldi" ["l"="41.331,0.719"]
"hapheus/n8n-nodes-youtube-transcript" ["l"="41.827,-0.343"]
"infosecB/awesome-detection-engineering" ["l"="-42.376,-33.15"]
"DataDog/stratus-red-team" ["l"="11.28,-4.61"]
"Yamato-Security/hayabusa" ["l"="-42.285,-33.259"]
"chainguard-dev/osquery-defense-kit" ["l"="6.962,-12.201"]
"Zeus-Labs/ZeusCloud" ["l"="11.246,-4.578"]
"brexhq/substation" ["l"="7,-12.223"]
"panther-labs/panther-analysis" ["l"="11.201,-4.525"]
"veekaybee/viberary" ["l"="41.511,1.13"]
"veekaybee/what_are_embeddings" ["l"="41.465,1.038"]
"Zero6992/chatGPT-discord-bot" ["l"="43.731,0.72"]
"Kav-K/GPTDiscord" ["l"="41.141,-3.631"]
"openai/dallify-discord-bot" ["l"="57.105,18.755"]
"TuringAI-Team/chatgpt-discord-bot" ["l"="43.622,0.545"]
"m1guelpf/chatgpt-discord" ["l"="40.321,0.458"]
"mishl-dev/Discord-AI-Chatbot" ["l"="41.053,-3.601"]
"onury5506/Discord-ChatGPT-Bot" ["l"="43.605,0.488"]
"openai/Video-Pre-Training" ["l"="41.066,-4.565"]
"openai/point-e" ["l"="63.376,1.707"]
"asg017/sqlite-vec" ["l"="40.688,0.739"]
"unum-cloud/usearch" ["l"="-1.175,4.057"]
"vlcn-io/cr-sqlite" ["l"="-6.427,-28.366"]
"microsoft/DiskANN" ["l"="-1.061,3.956"]
"cozodb/cozo" ["l"="-24.01,-20.476"]
"asg017/sqlite-lembed" ["l"="40.518,1.101"]
"nalgeon/sqlean" ["l"="5.077,-8.811"]
"tursodatabase/libsql-client-ts" ["l"="40.413,1.398"]
"maxpert/marmot" ["l"="4.908,-8.76"]
"luojinlongjjj/android-faiss" ["l"="-0.72,4.077"]
"ChrisBop/eth-nft-drainer" ["l"="41.224,2.268"]
"Ox29DC/Crypto-Drainer" ["l"="41.205,2.252"]
"wesbos/hot-tips" ["l"="40.448,-0.471"]
"stolinski/cool-treats" ["l"="40.404,-0.52"]
"antirez/botlib" ["l"="40.441,-0.55"]
"teslamotors/roadster" ["l"="-53.092,-11.884"]
"eknkc/ssr-benchmark" ["l"="40.511,-0.507"]
"yihong0618/tg_bot_collections" ["l"="45.48,0.364"]
"google-gemini/deprecated-generative-ai-swift" ["l"="27.527,-21.332"]
"0xacme/ERC404" ["l"="-46.887,-32.088"]
"aixcoder-plugin/aiXcoder-7B" ["l"="40.604,-0.313"]
"emoisback/Helldivers-2-Internal-Hack-Dll-Proxy-PoC" ["l"="40.522,-0.532"]
"regolith-labs/ore" ["l"="40.45,-0.578"]
"kijai/ComfyUI-DiffusersStableCascade" ["l"="40.352,-0.581"]
"tidwall/neco" ["l"="-22.291,-25.884"]
"zanfranceschi/rinha-de-backend-2024-q1" ["l"="5.695,-20.525"]
"jw-12138/multi-window-collab-demo" ["l"="40.285,-0.492"]
"praeclarum/transformers-js" ["l"="40.679,1.396"]
"mithril-security/tokenizers-wasm" ["l"="40.672,1.447"]
"explosion/curated-transformers" ["l"="40.906,1.308"]
"explosion/spacy-llm" ["l"="41.054,1.177"]
"koaning/bulk" ["l"="45.073,26.36"]
"explosion/prodigy-openai-recipes" ["l"="52.544,25.5"]
"sabetAI/BLoRA" ["l"="38.665,-0.37"]
"PiotrNawrot/nanoT5" ["l"="40.542,1.366"]
"VikParuchuri/textbook_quality" ["l"="38.509,-0.406"]
"webis-de/small-text" ["l"="52.33,25.731"]
"explosion/weasel" ["l"="40.994,1.28"]
"fastai/course22p2" ["l"="49.269,28.53"]
"loxilb-io/loxilb" ["l"="41.531,2.243"]
"JSv4/OpenContracts" ["l"="41.314,0.595"]
"JSv4/Delphic" ["l"="41.395,-3.513"]
"run-llama/llama_deploy" ["l"="41.191,0.539"]
"FutureClubNL/RAGMeUp" ["l"="41.375,0.546"]
"run-llama/create-llama" ["l"="41.249,0.55"]
"postgresml/korvus" ["l"="41.236,0.611"]
"enoch3712/ExtractThinker" ["l"="41.326,0.363"]
"allenai/pawls" ["l"="52.399,25.727"]
"run-llama/llamacloud-demo" ["l"="41.372,0.651"]
"telekom/create-tsi" ["l"="41.395,0.802"]
"apocas/restai" ["l"="41.419,0.849"]
"yoheinakajima/mindgraph" ["l"="41.299,0.58"]
"nlmatics/nlm-ingestor" ["l"="41.156,0.635"]
"YassKhazzan/openperplex_backend_os" ["l"="41.361,0.458"]
"Mingyue-Cheng/FormerTime" ["l"="41.29,1.433"]
"Mingyue-Cheng/InstructTime" ["l"="41.277,1.392"]
"TilmanGriesel/graphite" ["l"="41.185,2"]
"trunk-io/plugins" ["l"="41.201,1.973"]
"grundleborg/slack-advanced-exporter" ["l"="42.016,1.152"]
"4350pChris/slack-vuesualizer" ["l"="42.019,1.127"]
"tamhinsf/ChannelSurf" ["l"="42.044,1.13"]
"hfaran/slack-auto-export" ["l"="41.996,1.12"]
"auino/slack-downloader" ["l"="42.02,1.103"]
"andxyz/slack-history-export" ["l"="42,1.1"]
"next-hat/nanocl" ["l"="41.243,1.963"]
"bisno/WDRO" ["l"="41.297,2.093"]
"gianlucajahn/macOS-react" ["l"="41.164,1.966"]
"shlomnissan/express-client" ["l"="41.099,1.993"]
"Lissy93/my-website" ["l"="41.163,1.976"]
"timestored/pulseui" ["l"="41.171,1.937"]
"aretecode/awesome-advice" ["l"="41.117,1.92"]
"Pythagora-io/pythagora" ["l"="40.783,0.425"]
"puffinsoft/jscanify" ["l"="-11.73,-4.271"]
"chinchang/screenlog.js" ["l"="-11.749,-4.202"]
"Hexagon/croner" ["l"="-12.841,-4.161"]
"irgolic/AutoPR" ["l"="41.228,-3.799"]
"stack-auth/pgmock" ["l"="3.84,12.888"]
"hymhub/css-to-tailwind" ["l"="-11.785,-4.223"]
"ntegrals/aura-voice" ["l"="40.977,0.543"]
"goldbergyoni/nodejs-testing-best-practices" ["l"="-0.462,-33.752"]
"semanser/codel" ["l"="40.99,0.437"]
"Pythagora-io/codebase-chat" ["l"="40.696,0.576"]
"livekit/agents" ["l"="41.1,0.227"]
"betwixt-labs/tempo" ["l"="51.179,-0.6"]
"patched-codes/patchwork" ["l"="3.637,12.896"]
"Boeing/config-file-validator" ["l"="41.568,2.154"]
"UPay-USDT/USDT-Payment-Gateway" ["l"="41.582,2.157"]
"augustovriyan/solana-token-snipers" ["l"="41.561,2.117"]
"catppuccin/home-assistant" ["l"="41.211,2.082"]
"Kibibit/hass-kibibit-theme" ["l"="-14.905,-39.132"]
"daveshap/AI_Tools_and_Papers" ["l"="40.684,1.033"]
"daveshap/ACE_Framework" ["l"="40.753,0.858"]
"DataBassGit/AgentForge" ["l"="41.014,-3.73"]
"daveshap/HeuristicImperatives" ["l"="40.672,1.079"]
"daveshap/SparsePrimingRepresentations" ["l"="40.705,0.917"]
"daveshap/ChatGPT_Custom_Instructions" ["l"="40.746,0.828"]
"visheratin/ai-photo-sorter" ["l"="40.681,1.331"]
"praeclarum/web-transformers" ["l"="40.703,1.341"]
"FL33TW00D/laserbeak" ["l"="-8.58,-4.251"]
"CompendiumFi/PENDAX-SDK" ["l"="41.229,1.906"]
"PiotrNawrot/dynamic-pooling" ["l"="40.506,1.456"]
"PiotrNawrot/nano-sparse-attention" ["l"="40.491,1.49"]
"automorphic-ai/aegis" ["l"="41.041,1.113"]
"redotvideo/haven" ["l"="41.061,1.045"]
"empower-ai/dsensei" ["l"="40.994,1.116"]
"OpenPipe/OpenPipe" ["l"="41.027,0.94"]
"axflow/axflow" ["l"="41.051,0.965"]
"tegonhq/tegon" ["l"="16.351,-10.271"]
"PeerDB-io/peerdb" ["l"="3.77,13.569"]
"artie-labs/reader" ["l"="41.017,1.179"]
"CambioML/pykoi-rlhf-finetuned-transformers" ["l"="40.998,1.086"]
"apoxy-dev/proximal" ["l"="41.01,1.12"]
"Serra-Technologies/serra" ["l"="41.012,1.099"]
"fixie-ai/fixie-sdk-js" ["l"="41.187,1.161"]
"fixie-ai/fixie-examples" ["l"="41.209,1.216"]
"groq/groqflow" ["l"="41.638,0.875"]
"groq/mlagility" ["l"="41.686,0.924"]
"groq/deployment" ["l"="41.666,0.904"]
"bitloops/bitloops-language" ["l"="41.232,1.945"]
"kharvd/gpt-cli" ["l"="40.306,1.186"]
"marcolardera/chatgpt-cli" ["l"="40.326,1.133"]
"kardolus/chatgpt-cli" ["l"="40.336,1.158"]
"jackMort/ChatGPT.nvim" ["l"="-12.821,-9.712"]
"dfinke/PowerShellAI" ["l"="-48.015,7.522"]
"npiv/chatblade" ["l"="41.375,-4.052"]
"tbckr/sgpt" ["l"="40.299,1.15"]
"j178/chatgpt" ["l"="43.531,0.977"]
"CristiVlad25/gpt-cli" ["l"="40.366,1.116"]
"darrenburns/elia" ["l"="43.665,19.174"]
"AineeJames/ChatGPTerminator" ["l"="40.289,1.099"]
"Azure-Samples/qdrant-azure" ["l"="40.781,1.403"]
"kubestellar/kubestellar" ["l"="42.677,0.187"]
"kubestellar/ui" ["l"="42.708,0.176"]
"kubestellar/kubeflex" ["l"="42.718,0.197"]
"swishjam/swishjam" ["l"="41.096,1.332"]
"happy-machine/FastQL" ["l"="41.204,2.037"]
"Raggaer/faceless-bytecode" ["l"="41.229,2.11"]
"daveshap/JobMatching" ["l"="40.562,1.211"]
"daveshap/TwentyQuestions" ["l"="40.621,1.169"]
"daveshap/Postnihilism" ["l"="40.681,1.192"]
"daveshap/Successor_Species" ["l"="40.708,1.201"]
"daveshap/Grand_Struggle_Great_Mystery" ["l"="40.702,1.191"]
"daveshap/PostLaborEconomics" ["l"="40.684,1.228"]
"daveshap/Narratives_Emergence_Convergence" ["l"="40.695,1.213"]
"gianlucajahn/typescript-reddit-clone" ["l"="41.117,1.971"]
"oslabs-beta/Zukeeper" ["l"="41.183,2.52"]
"oslabs-beta/RemixDJ" ["l"="41.194,2.554"]
"oslabs-beta/stitch" ["l"="41.195,2.542"]
"oslabs-beta/solid-query-devkit" ["l"="41.207,2.556"]
"CodeGeeX/codegeex-vscode-extension" ["l"="40.591,0.933"]
"CodeGeeX/codegeex-fastertransformer" ["l"="40.557,0.989"]
"mengjian-github/copilot-analysis-new" ["l"="40.601,0.899"]
"finic-ai/rag-stack" ["l"="41.147,-3.902"]
"getmetal/motorhead" ["l"="41.078,1.152"]
"hegelai/prompttools" ["l"="40.967,0.761"]
"homanp/langchain-ui" ["l"="41.293,-3.697"]
"Unstructured-IO/pipeline-sec-filings" ["l"="41.416,1.167"]
"triggerdotdev/apihero" ["l"="-3.314,-30.762"]
"brilliantlabsAR/monocle-micropython" ["l"="42.318,0.855"]
"brilliantlabsAR/monocle-fpga" ["l"="42.355,0.88"]
"brilliantlabsAR/noa-for-ios" ["l"="42.236,0.795"]
"ariym/whisper-node" ["l"="40.791,1.063"]
"ChetanXpro/nodejs-whisper" ["l"="40.797,1.033"]
"modal-labs/synchronicity" ["l"="41.653,1.562"]
"daveshap/LiteratureReviewBot" ["l"="40.556,1.201"]
"yobulkdev/yobulkdev" ["l"="41.146,1.467"]
"coder/code-marketplace" ["l"="42.356,-0.687"]
"coder/envbuilder" ["l"="42.355,-0.703"]
"coder/vscode-coder" ["l"="42.369,-0.706"]
"coder/backstage-plugins" ["l"="42.372,-0.689"]
"coder/awesome-coder" ["l"="42.366,-0.737"]
"coder/picopilot" ["l"="42.342,-0.682"]
"coder/terraform-provider-coderd" ["l"="42.383,-0.679"]
"daveshap/SummarizeCustomerReviews" ["l"="40.545,1.225"]
"daveshap/DalleHelperBot" ["l"="40.542,1.259"]
"NVIDIA/nim-anywhere" ["l"="41.742,-0.173"]
"NVIDIA/workbench-example-hybrid-rag" ["l"="41.621,-0.04"]
"NVIDIA/nim-deploy" ["l"="41.795,-0.235"]
"NVIDIA/workbench-example-agentic-rag" ["l"="41.717,-0.14"]
"rubbrband/rubbrband" ["l"="41.076,1.293"]
"matifali/dockerdl" ["l"="42.455,-0.831"]
"matifali/coder-templates" ["l"="42.43,-0.791"]
"launchflow/buildflow" ["l"="41.052,1.262"]
"daveshap/BSHR_Loop" ["l"="40.73,0.92"]
"daveshap/Semantic_Embedding_Reverse_Dictionary" ["l"="40.736,0.953"]
"daveshap/YouTube_Slide_Decks" ["l"="40.698,0.957"]
"daveshap/Hierarchical_Document_Representation" ["l"="40.706,0.978"]
"daveshap/latent_space_activation" ["l"="40.727,0.94"]
"daveshap/Quickly_Extract_Science_Papers" ["l"="40.698,1.033"]
"BeastByteAI/falcon" ["l"="40.572,0.88"]
"BeastByteAI/agent_dingo" ["l"="40.536,0.914"]
"BeastByteAI/firefly" ["l"="40.545,0.928"]
"useVenice/venice" ["l"="41.076,1.341"]
"bokito-studio/poetry-camera-rpi" ["l"="41.915,0.486"]
"sam1am/poetroid" ["l"="41.966,0.498"]
"tursodatabase/libsql-client-go" ["l"="40.271,1.716"]
"tursodatabase/awesome-turso" ["l"="40.231,1.721"]
"tursodatabase/go-libsql" ["l"="40.267,1.739"]
"tursodatabase/turso-docs" ["l"="40.251,1.691"]
"coder/webinars" ["l"="42.352,-0.74"]
"coder/packages" ["l"="42.412,-0.763"]
"uwu/basic-env" ["l"="42.399,-0.77"]
"daveshap/Functional_Sentience" ["l"="40.658,1.114"]
"daveshap/RLHI" ["l"="40.696,1.056"]
"daveshap/HierarchicalMemoryConsolidationSystem" ["l"="40.635,1.104"]
"daveshap/Epistemic-Pragmatic_Orthogonality" ["l"="40.668,1.121"]
"daveshap/ACE_L1_Aspiration" ["l"="40.709,1.036"]
"daveshap/Reflective_Journaling_Tool" ["l"="40.684,1.118"]
"daveshap/ImpliedCognition" ["l"="40.648,1.123"]
"daveshap/Benevolent_AGI" ["l"="40.715,1.016"]
"ibm-ecosystem-engineering/Watson-NLP" ["l"="42.521,0.143"]
"ElliotG/coder-oss-tf" ["l"="42.377,-0.764"]
"daveshap/AutoMuseBlogger" ["l"="40.557,1.276"]
"weaviate/weaviate-podcast-search" ["l"="41.552,1.072"]
"FSoft-AI4Code/TheVault" ["l"="41.562,1.749"]
"FSoft-AI4Code/RepoExec" ["l"="41.562,1.732"]
"FSoft-AI4Code/SRank-CodeRanker" ["l"="41.551,1.732"]
"FSoft-AI4Code/CodeCapybara" ["l"="41.565,1.784"]
"FSoft-AI4Code/CodeText-parser" ["l"="41.575,1.733"]
"FSoft-AI4Code/DocChecker" ["l"="41.582,1.746"]
"coder/serpent" ["l"="42.353,-0.717"]
"coder/labeler" ["l"="42.36,-0.675"]
"HumeAI/hume-python-sdk" ["l"="41.371,0.92"]
"HumeAI/competitions" ["l"="41.389,0.982"]
"DeFiMasterd/PancakeX-ASTRA-AVAX-Sniping-Bot" ["l"="41.238,2.139"]
"apache/openwhisk-client-go" ["l"="43.048,0.106"]
"apache/openwhisk-debugger" ["l"="43,0.104"]
"ibmets/node-red-node-openwhisk" ["l"="42.997,0.126"]
"JohannLai/gptcli" ["l"="40.267,1.286"]
"yagil/ChatIDE" ["l"="40.234,1.324"]
"twitter/the-algorithm-ml" ["l"="39.935,0.415"]
"oven-sh/bun" ["l"="-4.134,-29.83"]
"shadcn-ui/ui" ["l"="-3.885,-29.838"]
"xai-org/grok-1" ["l"="40.067,0.077"]
"xtekky/gpt4free" ["l"="44.269,1.341"]
"deepseek-ai/DeepSeek-R1" ["l"="40.176,-0.183"]
"microsoft/kernel-memory" ["l"="-44.155,6.38"]
"microsoft/chat-copilot" ["l"="-44.336,7.215"]
"antimatter15/alpaca.cpp" ["l"="39.949,0.499"]
"ChatGPTNextWeb/NextChat" ["l"="44.086,1.355"]
"cocktailpeanut/dalai" ["l"="39.898,0.454"]
"serge-chat/serge" ["l"="39.954,0.459"]
"ParisNeo/lollms-webui" ["l"="40.199,0.411"]
"azukaar/Cosmos-Server" ["l"="12.383,-8.801"]
"ravenscroftj/turbopilot" ["l"="41.242,-3.952"]
"fauxpilot/fauxpilot" ["l"="41.286,-4.158"]
"tubearchivist/tubearchivist" ["l"="12.526,-8.822"]
"Josh-XT/AGiXT" ["l"="41.089,-3.75"]
"deep-diver/LLM-As-Chatbot" ["l"="39.849,0.651"]
"nat/openplayground" ["l"="41.299,-3.976"]
"Chainlit/cookbook" ["l"="41.422,-3.451"]
"ianarawjo/ChainForge" ["l"="40.898,0.676"]
"openchatai/copilot" ["l"="41.087,-3.959"]
"langgptai/LangGPT" ["l"="40.716,-0.082"]
"trypromptly/LLMStack" ["l"="40.954,0.503"]
"GoogleCloudPlatform/vertex-ai-samples" ["l"="44.841,16.357"]
"GoogleCloudPlatform/asl-ml-immersion" ["l"="44.899,16.362"]
"google/generative-ai-docs" ["l"="41.071,0.319"]
"GoogleCloudPlatform/training-data-analyst" ["l"="44.889,16.434"]
"NirDiamant/GenAI_Agents" ["l"="41.044,0.251"]
"GoogleCloudPlatform/applied-ai-engineering-samples" ["l"="44.783,16.251"]
"meta-llama/llama-cookbook" ["l"="40.401,0.438"]
"GoogleCloudPlatform/python-docs-samples" ["l"="44.859,16.509"]
"NirDiamant/RAG_Techniques" ["l"="40.995,0.329"]
"langchain-ai/langgraph" ["l"="40.934,0.305"]
"dataelement/bisheng" ["l"="51.354,2.739"]
"HKUDS/LightRAG" ["l"="51.414,2.72"]
"microsoft/UFO" ["l"="51.34,2.768"]
"OpenBMB/ChatDev" ["l"="40.464,0.204"]
"fudan-generative-vision/hallo" ["l"="51.385,2.764"]
"EvilGenius-dot/RustMinerSystem" ["l"="51.232,2.797"]
"TJU-DRL-LAB/AI-Optimizer" ["l"="51.225,2.777"]
"WuKongOpenSource/WukongCRM-11.0-JAVA" ["l"="51.285,2.763"]
"TaskingAI/TaskingAI" ["l"="51.311,2.778"]
"dgiot/dgiot" ["l"="51.309,2.726"]
"FoundationAgents/OpenManus" ["l"="40.773,-0.184"]
"Doriandarko/claude-engineer" ["l"="41.018,0.238"]
"xlang-ai/OpenAgents" ["l"="36.761,-2.216"]
"OpenBMB/XAgent" ["l"="36.805,-2.221"]
"Codium-ai/AlphaCodium" ["l"="40.837,0.465"]
"aiwaves-cn/agents" ["l"="36.726,-2.215"]
"VRSEN/agency-swarm" ["l"="41.015,0.424"]
"OpenBMB/AgentVerse" ["l"="36.715,-2.184"]
"bigcode-project/starcoder" ["l"="39.955,0.645"]
"nlpxucan/WizardLM" ["l"="40.014,0.576"]
"salesforce/CodeGen" ["l"="36.085,-0.154"]
"salesforce/CodeT5" ["l"="36.129,-0.206"]
"eugeneyan/open-llms" ["l"="40.107,0.59"]
"meta-llama/codellama" ["l"="40.146,0.454"]
"mckaywrigley/chatbot-ui" ["l"="40.346,0.225"]
"menloresearch/jan" ["l"="40.555,0.115"]
"TransformerOptimus/SuperAGI" ["l"="41.043,-3.921"]
"n4ze3m/page-assist" ["l"="40.896,0.01"]
"chatboxai/chatbox" ["l"="44.08,1.265"]
"unit-mesh/auto-dev" ["l"="40.818,0.56"]
"unit-mesh/autodev-vscode" ["l"="40.743,0.753"]
"AutoCodeRoverSG/auto-code-rover" ["l"="41.007,0.455"]
"unit-mesh/build-your-ai-coding-assistant" ["l"="40.718,0.8"]
"stitionai/devika" ["l"="40.668,0.191"]
"SWE-agent/SWE-agent" ["l"="40.796,0.286"]
"phodal/shire" ["l"="40.71,0.831"]
"MervinPraison/PraisonAI" ["l"="41.129,0.322"]
"developersdigest/llm-answer-engine" ["l"="40.984,0.363"]
"OpenInterpreter/01" ["l"="40.923,0.363"]
"jujumilk3/leaked-system-prompts" ["l"="41.255,-0.042"]
"getzep/graphiti" ["l"="41.191,0.104"]
"kortix-ai/suna" ["l"="41.212,-0.116"]
"jlowin/fastmcp" ["l"="41.177,-0.054"]
"rowboatlabs/rowboat" ["l"="41.327,-0.01"]
"patchy631/ai-engineering-hub" ["l"="41.099,0.143"]
"elie222/inbox-zero" ["l"="16.179,-10.111"]
"bytedance/UI-TARS" ["l"="41.17,-0.086"]
"PatrickJS/awesome-cursorrules" ["l"="41.048,-0.247"]
"nextjs/saas-starter" ["l"="-3.438,-30.264"]
"steven-tey/novel" ["l"="-3.418,-29.986"]
"miurla/morphic" ["l"="40.998,0.269"]
"midday-ai/midday" ["l"="16.182,-10.153"]
"shadcn-ui/taxonomy" ["l"="-3.54,-30.061"]
"haydenbleasel/next-forge" ["l"="-3.513,-30.253"]
"mastra-ai/mastra" ["l"="40.942,0.053"]
"dubinc/dub" ["l"="15.981,-10.273"]
"songquanpeng/one-api" ["l"="43.985,1.26"]
"camel-ai/camel" ["l"="40.856,0.133"]
"microsoft/ai-agents-for-beginners" ["l"="40.91,-0.162"]
"mshumer/gpt-prompt-engineer" ["l"="40.879,0.475"]
"mshumer/gpt-llm-trainer" ["l"="41.05,-4.021"]
"a16z-infra/companion-app" ["l"="41.016,-3.969"]
"mshumer/gpt-investor" ["l"="40.977,0.417"]
"mshumer/gpt-author" ["l"="41.101,-3.88"]
"brexhq/prompt-engineering" ["l"="41.174,-4.03"]
"quack-ai/platform" ["l"="41.008,1.063"]
"joonspk-research/generative_agents" ["l"="40.913,-4.167"]
"kuafuai/DevOpsGPT" ["l"="51.354,2.821"]
"n4ze3m/dialoqbase" ["l"="41.196,-3.724"]
"Nutlope/pdftochat" ["l"="41.324,0.408"]
"BruceMacD/chatd" ["l"="41.541,0.227"]
"Nutlope/notesGPT" ["l"="41.178,0.369"]
"langchain-ai/langchain-nextjs-template" ["l"="41.114,0.431"]
"run-llama/chat-llamaindex" ["l"="41.099,0.655"]
"cohere-ai/cohere-toolkit" ["l"="41.071,0.495"]
"e2b-dev/code-interpreter" ["l"="41.265,0.455"]
"ivanfioravanti/chatbot-ollama" ["l"="41.442,0.139"]
"virattt/financial-agent-ui" ["l"="41.408,0.469"]
"hacksider/Deep-Live-Cam" ["l"="40.441,-0.384"]
"iperov/DeepFaceLive" ["l"="38.326,1.249"]
"facefusion/facefusion" ["l"="32.129,30.114"]
"e2b-dev/e2b-cookbook" ["l"="41.486,0.573"]
"FateMyName/dannjs" ["l"="41.619,0.663"]
"FateMyName/Libreria1" ["l"="41.639,0.665"]
"FateMyName/node" ["l"="41.63,0.658"]
"FateMyName/laminas-diactoros" ["l"="41.628,0.668"]
"FateMyName/fuel-core" ["l"="41.622,0.676"]
"FateMyName/eigenlayer-contracts" ["l"="41.611,0.682"]
"FateMyName/validator-dashboard" ["l"="41.618,0.69"]
"FateMyName/eigenda-operator-setup" ["l"="41.635,0.675"]
"FateMyName/eigensdk-go" ["l"="41.628,0.685"]
"dgjklh/nvmrc" ["l"="41.619,0.651"]
"FateMyName/encrypto" ["l"="41.613,0.672"]
"FateMyName/sashay_pauxi" ["l"="41.604,0.665"]
"FateMyName/monitor-client" ["l"="41.611,0.656"]
"BielskiBartosz/Workspace" ["l"="41.558,0.615"]
"spdustin/ChatGPT-AutoExpert" ["l"="40.652,0.462"]
"PWhiddy/PokemonRedExperiments" ["l"="57.965,17.96"]
"ProfSynapse/Professor-Synapse" ["l"="40.667,0.564"]
"RamiAwar/dataline" ["l"="41.319,0.439"]
"bracesproul/gen-ui-python" ["l"="41.548,0.53"]
"NirDiamant/Controllable-RAG-Agent" ["l"="41.341,0.442"]
"DhruvAtreja/datavisualization_langgraph" ["l"="41.592,0.527"]
"langchain-ai/langgraph-studio" ["l"="41.252,0.38"]
"TAG-Research/TAG-Bench" ["l"="41.321,0.618"]
"tencentmusic/supersonic" ["l"="37.556,-1.448"]
"hwchase17/langgraph-engineer" ["l"="41.533,0.472"]
"EmergenceAI/Agent-E" ["l"="41.299,0.438"]
"jzhang38/TinyLlama" ["l"="38.74,-0.614"]
"pytorch/torchtune" ["l"="38.819,-0.505"]
"meta-llama/llama3" ["l"="40.155,0.388"]
"meta-llama/llama-stack" ["l"="40.875,0.359"]
"facebookresearch/seamless_communication" ["l"="38.571,1.463"]
"chenfei-wu/TaskMatrix" ["l"="39.867,0.285"]
"shawwn/llama-dl" ["l"="39.803,0.625"]
"tloen/llama-int8" ["l"="42.467,-1.824"]
"juncongmoo/pyllama" ["l"="39.781,0.668"]
"randaller/llama-chat" ["l"="42.471,-1.863"]
"qwopqwop200/GPTQ-for-LLaMa" ["l"="39.779,0.712"]
"markasoftware/llama-cpu" ["l"="42.433,-1.78"]
"fishaudio/fish-speech" ["l"="38.438,1.562"]
"jianchang512/pyvideotrans" ["l"="45.592,-1.745"]
"LC044/WeChatMsg" ["l"="-48.784,13.204"]
"Guovin/iptv-api" ["l"="-50.057,14.89"]
"1Panel-dev/MaxKB" ["l"="40.644,-0.312"]
"salesforce/LAVIS" ["l"="49.008,30.194"]
"OpenMOSS/MOSS" ["l"="39.13,-1.971"]
"BradyFU/Awesome-Multimodal-Large-Language-Models" ["l"="47.423,29.9"]
"Beomi/KoAlpaca" ["l"="-5.189,-23.16"]
"gururise/AlpacaDataCleaned" ["l"="42.472,-2.006"]
"teknium1/GPTeacher" ["l"="42.501,-2.047"]
"turboderp/exllama" ["l"="42.603,-2.014"]
"yizhongw/self-instruct" ["l"="39.042,-2.296"]
"SynaLinks/HybridAGI" ["l"="41.242,0.798"]
"SynaLinks/synalinks" ["l"="41.283,0.914"]
"kuzudb/kuzu" ["l"="-0.549,14.879"]
"tomasonjo/blogs" ["l"="53.712,15.09"]
"FalkorDB/FalkorDB" ["l"="9.475,-3.696"]
"SylphAI-Inc/AdalFlow" ["l"="41.15,0.61"]
"rahulnyk/graph_maker" ["l"="53.784,15.149"]
"seanchatmangpt/dspygen" ["l"="41.272,0.972"]
"zou-group/textgrad" ["l"="41.114,0.635"]
"neo4j-labs/text2cypher" ["l"="53.839,15.007"]
"neo4j/NaLLM" ["l"="53.731,15.119"]
"neo4j-labs/llm-graph-builder" ["l"="41.259,0.583"]
"topoteretes/cognee" ["l"="41.224,0.456"]
"bricks-cloud/BricksLLM" ["l"="41.119,0.843"]
"elfvingralf/macOSpilot-ai-assistant" ["l"="41.347,0.783"]
"BerriAI/liteLLM-proxy" ["l"="41.141,1.005"]
"NeumTry/NeumAI" ["l"="41.1,0.92"]
"gusye1234/nano-graphrag" ["l"="41.239,0.574"]
"argilla-io/distilabel" ["l"="38.597,-0.509"]
"GAIR-NLP/O1-Journey" ["l"="37.217,-0.435"]
"RealAlexandreAI/json-repair" ["l"="40.922,0.893"]
"qhjqhj00/MemoRAG" ["l"="41.219,0.595"]
"InternLM/MindSearch" ["l"="40.944,0.218"]
"MeetKai/functionary" ["l"="40.871,0.814"]
"OpenRLHF/OpenRLHF" ["l"="37.161,-0.425"]
"google-gemini/gemma-cookbook" ["l"="41.191,0.237"]
"google-gemini/deprecated-generative-ai-android" ["l"="54.434,-14.229"]
"googleapis/python-aiplatform" ["l"="44.788,16.373"]
"google-gemini/starter-applets" ["l"="41.263,0.262"]
"google-gemini/live-api-web-console" ["l"="41.243,0.259"]
"NVIDIA/GenerativeAIExamples" ["l"="41.12,0.401"]
"HqWu-HITCS/Awesome-Chinese-LLM" ["l"="38.848,-1.98"]
"liguodongiot/llm-action" ["l"="38.757,-2.008"]
"QwenLM/Qwen" ["l"="38.989,-1.849"]
"spotify/voyager" ["l"="41.19,0.965"]
"koaning/embetter" ["l"="45.098,26.328"]
"nmslib/hnswlib" ["l"="-1.047,4.004"]
"spotify/annoy" ["l"="53.031,25.889"]
"currentslab/awesome-vector-search" ["l"="-1.148,3.943"]
"lightonai/pylate" ["l"="41.253,0.965"]
"spotify/sparkey" ["l"="-3.176,18.06"]
"criteo/autofaiss" ["l"="49.039,30.413"]
"explosion/floret" ["l"="52.335,25.607"]
"zhayujie/chatgpt-on-wechat" ["l"="43.989,1.323"]
"THUDM/ChatGLM3" ["l"="39.017,-1.891"]
"makeplane/plane" ["l"="15.813,-10.415"]
"sigoden/llm-functions" ["l"="-13.721,-6.189"]
"simonw/llm" ["l"="40.872,0.523"]
"yetone/avante.nvim" ["l"="-12.919,-9.665"]
"charmbracelet/mods" ["l"="5.189,-5.138"]
"sxyazi/yazi" ["l"="-13.476,-7.286"]
"olimorris/codecompanion.nvim" ["l"="-12.823,-9.791"]
"ratatui/ratatui" ["l"="-9.591,-5.951"]
"EricLBuehler/mistral.rs" ["l"="-8.536,-4.415"]
"zellij-org/zellij" ["l"="-13.502,-7.18"]
"atuinsh/atuin" ["l"="-13.453,-7.145"]
"simonw/files-to-prompt" ["l"="41.418,0.445"]
"Mozilla-Ocho/llamafile" ["l"="40.454,0.444"]
"simonw/datasette" ["l"="5.353,-8.998"]
"MadcowD/ell" ["l"="40.966,0.319"]
"marimo-team/marimo" ["l"="43.003,20.692"]
"simonw/shot-scraper" ["l"="48.826,17.666"]
"CodePhiliaX/Chat2DB" ["l"="40.464,-0.279"]
"eosphoros-ai/DB-GPT-Hub" ["l"="37.511,-1.498"]
"THUDM/ChatGLM2-6B" ["l"="39.075,-1.94"]
"Mirascope/mirascope" ["l"="41.035,0.652"]
"Yifan-Song793/RestGPT" ["l"="40.966,0.961"]
"approximatelabs/sketch" ["l"="45.122,26.269"]
"bananaml/fructose" ["l"="40.961,0.911"]
"langgptai/wonderful-prompts" ["l"="44.02,0.899"]
"EmbraceAGI/awesome-chatgpt-zh" ["l"="44.003,1.09"]
"richards199999/Thinking-Claude" ["l"="40.817,-0.289"]
"QuantumNous/new-api" ["l"="45.584,0.658"]
"rockbenben/ChatGPT-Shortcut" ["l"="43.862,1.044"]
"bleedline/aimoneyhunter" ["l"="-4.84,17.234"]
"alibaba/ali-dbhub" ["l"="-3.471,11.588"]
"dataease/dataease" ["l"="-3.625,11.559"]
"1Panel-dev/1Panel" ["l"="-48.38,12.855"]
"alibaba/easyexcel" ["l"="-3.275,11.579"]
"h2oai/h2ogpt" ["l"="40.315,0.276"]
"e2b-dev/E2B" ["l"="41.204,-3.933"]
"KoljaB/RealtimeTTS" ["l"="40.443,3.283"]
"yl4579/StyleTTS2" ["l"="38.574,1.711"]
"voxos-ai/bolna" ["l"="43.061,-1.282"]
"twilio-labs/call-gpt" ["l"="43.02,-1.268"]
"TaxyAI/browser-extension" ["l"="41.342,-3.921"]
"juncongmoo/chatllama" ["l"="39.135,-2.317"]
"howl-anderson/unlocking-the-power-of-llms" ["l"="39.109,-2.221"]
"AetherCortex/Llama-X" ["l"="39.103,-2.269"]
"CVI-SZU/Linly" ["l"="39.096,-2.137"]
"Facico/Chinese-Vicuna" ["l"="39.136,-2.124"]
"THUDM/GLM-130B" ["l"="39.164,-1.995"]
"OpenBMB/ToolBench" ["l"="36.72,-2.262"]
"enricoros/big-AGI" ["l"="40.807,0.326"]
"billmei/every-chatgpt-gui" ["l"="44.114,0.978"]
"ztjhz/BetterChatGPT" ["l"="44.046,1.107"]
"meistrari/cursive" ["l"="40.469,1.026"]
"meistrari/resguard" ["l"="40.491,1.022"]
"meistrari/cursive-py" ["l"="40.482,1.045"]
"Nutlope/explorecareers" ["l"="41.355,0.371"]
"Nutlope/turboseek" ["l"="41.282,0.362"]
"Nutlope/twitterbio" ["l"="-3.292,-30.391"]
"Nutlope/llamatutor" ["l"="41.306,0.346"]
"Nutlope/blinkshot" ["l"="41.364,0.352"]
"Nutlope/description-generator" ["l"="41.392,0.346"]
"Nutlope/restorePhotos" ["l"="-3.366,-30.364"]
"vercel-labs/ai-sdk-preview-internal-knowledge-base" ["l"="41.467,0.621"]
"Nutlope/napkins" ["l"="41.374,0.369"]
"Nutlope/qrGPT" ["l"="-3.287,-30.478"]
"rajeshdavidbabu/pdf-chat-ai" ["l"="-2.921,-30.699"]
"steven-tey/chathn" ["l"="-3.282,-30.456"]
"mosaicml/composer" ["l"="38.741,-0.539"]
"mosaicml/streaming" ["l"="38.713,-0.353"]
"databricks/megablocks" ["l"="38.772,-0.467"]
"huggingface/nanotron" ["l"="38.746,-0.434"]
"deepspeedai/Megatron-DeepSpeed" ["l"="38.765,-0.569"]
"PlexPt/awesome-chatgpt-prompts-zh" ["l"="44.053,1.214"]
"getumbrel/llama-gpt" ["l"="40.301,0.121"]
"smol-ai/GodMode" ["l"="41.075,-3.99"]
"a16z-infra/llm-app-stack" ["l"="41.025,0.624"]
"a16z-infra/JungleGym" ["l"="40.98,0.801"]
"a16z-infra/ai-getting-started" ["l"="41.049,-3.962"]
"andrewnguonly/Lumos" ["l"="41.133,0.543"]
"humanlayer/humanlayer" ["l"="41.252,0.43"]
"exa-labs/exa-mcp-server" ["l"="41.442,0.01"]
"D-Star-AI/dsRAG" ["l"="41.232,0.557"]
"fleet-ai/context" ["l"="41.102,0.758"]
"VILA-Lab/ATLAS" ["l"="40.949,0.736"]
"evanmiller/LLM-Reading-List" ["l"="40.369,1.192"]
"Maknee/minigpt4.cpp" ["l"="40.219,1.161"]
"abacaj/fine-tune-mistral" ["l"="38.644,-0.301"]
"gpu-mode/awesomeMLSys" ["l"="39.032,-0.309"]
"gpu-mode/resource-stream" ["l"="39.002,-0.284"]
"akashmjn/tinydiarize" ["l"="40.244,1.181"]
"yacineMTB/talk" ["l"="41.389,-3.966"]
"monatis/clip.cpp" ["l"="40.193,1.16"]
"run-llama/finetune-embedding" ["l"="40.841,0.994"]
"SumanthRH/tokenization" ["l"="40.326,1.313"]
"srush/awesome-o1" ["l"="37.2,-0.408"]
"modelscope/ms-swift" ["l"="38.867,-1.929"]
"THUDM/GLM-4" ["l"="39.032,-1.848"]
"QwenLM/Qwen-Agent" ["l"="40.896,0.064"]
"svcvit/Awesome-Dify-Workflow" ["l"="40.706,-0.257"]
"google-deepmind/gemma" ["l"="38.97,-0.712"]
"google/generative-ai-go" ["l"="4.165,-9.529"]
"google/gemma_pytorch" ["l"="38.988,-0.572"]
"dnhkng/GLaDOS" ["l"="40.842,0.264"]
"jasonppy/VoiceCraft" ["l"="38.589,1.65"]
"TheOfficialFloW/PPPwn" ["l"="-13.915,3.848"]
"KoljaB/RealtimeSTT" ["l"="40.486,3.318"]
"ILikeAI/AlwaysReddy" ["l"="42.932,1.72"]
"a-real-ai/pywinassistant" ["l"="41.164,0.462"]
"vikhyat/moondream" ["l"="40.74,0.374"]
"reorproject/reor" ["l"="40.873,0.275"]
"huggingface/parler-tts" ["l"="38.561,1.742"]
"mediar-ai/screenpipe" ["l"="41.018,0.074"]
"erew123/alltalk_tts" ["l"="38.69,1.691"]
"gosom/scrapemate" ["l"="41.748,-0.13"]
"D4Vinci/Scrapling" ["l"="41.256,0.021"]
"omkarcloud/botasaurus" ["l"="47.37,21.504"]
"Zubdata/Google-Maps-Scraper" ["l"="41.867,-0.146"]
"bjesus/pipet" ["l"="16.453,-10.227"]
"Nutlope/logocreator" ["l"="16.413,-10.15"]
"aaPanel/BillionMail" ["l"="16.536,-10.093"]
"developersdigest/llm-api-engine" ["l"="41.506,0.173"]
"CatchTheTornado/text-extract-api" ["l"="41.331,0.217"]
"lancedb/lance" ["l"="-0.447,14.924"]
"apache/datafusion" ["l"="-0.445,14.993"]
"paradedb/paradedb" ["l"="3.815,13.535"]
"quickwit-oss/tantivy" ["l"="-10.004,-6.013"]
"Eventual-Inc/Daft" ["l"="-0.373,14.881"]
"risingwavelabs/risingwave" ["l"="-0.43,15.075"]
"sinaptik-ai/pandas-ai" ["l"="40.729,0.094"]
"Kanaries/pygwalker" ["l"="42.981,20.755"]
"qodo-ai/pr-agent" ["l"="40.752,0.303"]
"qodo-ai/qodo-cover" ["l"="40.839,0.302"]
"coderabbitai/ai-pr-reviewer" ["l"="5.75,-39.969"]
"sweepai/sweep" ["l"="41.127,-4.027"]
"anc95/ChatGPT-CodeReview" ["l"="-5.37,-21.791"]
"mattzcarey/shippie" ["l"="10.549,-3.418"]
"PABannier/encodec.cpp" ["l"="40.204,1.124"]
"Audio-WestlakeU/FS-EEND" ["l"="36.916,3.138"]
"huggingface/diarizers" ["l"="36.906,3.171"]
"PABannier/bark.cpp" ["l"="40.238,1.114"]
"facebookresearch/nougat" ["l"="40.569,0.31"]
"clovaai/donut" ["l"="46.254,6.071"]
"lukas-blecher/LaTeX-OCR" ["l"="46.683,5.821"]
"Ucas-HaoranWei/GOT-OCR2.0" ["l"="40.783,-0.011"]
"mit-han-lab/streaming-llm" ["l"="38.853,-0.645"]
"kermitt2/grobid" ["l"="-34.111,16.29"]
"spencerc99/playhtml" ["l"="41.935,0.506"]
"xinemata/leafy" ["l"="42.013,0.539"]
"jina-ai/reader" ["l"="40.869,0.169"]
"jbexta/AgentPilot" ["l"="40.94,-3.711"]
"Mintplex-Labs/vector-admin" ["l"="40.939,0.523"]
"Ironclad/rivet" ["l"="40.817,0.496"]
"melih-unsal/DemoGPT" ["l"="41.174,-3.758"]
"SamurAIGPT/Best-AI-Agents" ["l"="36.564,-2.483"]
"h2oai/h2o-llmstudio" ["l"="42.345,-2.026"]
"Link-AGI/AutoAgents" ["l"="36.777,-2.259"]
"victordibia/autogen-ui" ["l"="39.971,-1.974"]
"apify/crawlee" ["l"="40.876,-0.306"]
"apify/crawlee-python" ["l"="40.953,0.081"]
"berstend/puppeteer-extra" ["l"="47.485,21.5"]
"tremorlabs/tremor-npm" ["l"="-3.624,-29.905"]
"PlasmoHQ/plasmo" ["l"="9.021,-43.42"]
"xyflow/xyflow" ["l"="-3.591,-29.687"]
"microsoft/playwright" ["l"="-4.432,-29.643"]
"siriustools/sirius-crypter" ["l"="14.787,-12.178"]
"streamviewerchatbot/Stream-Viewer-Bot" ["l"="14.747,-12.246"]
"DefiZoro/BSC-Sniping-Bot-Opensource" ["l"="42.407,-0.367"]
"HarshaMurupudi/Kwaii-ui" ["l"="42.08,-0.24"]
"omkarcloud/tripadvisor-scraper" ["l"="-44.455,-23.547"]
"kby-ai/FaceRecognition-Android" ["l"="51.437,-0.638"]
"RayDefi/Ethereum-Sniping-Bot-Opensource" ["l"="42.112,-0.266"]
"axflow/original-demo-ui" ["l"="41.095,1.046"]
"srcbookdev/srcbook" ["l"="41.208,0.336"]
"briefercloud/layerform" ["l"="5.444,-20.671"]
"LostRuins/koboldcpp" ["l"="42.745,-2"]
"nomic-ai/pygpt4all" ["l"="42.424,-2.108"]
"nomic-ai/gpt4all-chat" ["l"="42.387,-2.119"]
"ParisNeo/lollms" ["l"="39.795,0.354"]
"huggingface/chat-ui" ["l"="40.379,0.403"]
"microsoft/genaiscript" ["l"="41.126,0.143"]
"microsoft/TinyTroupe" ["l"="41.093,0.167"]
"awslabs/agent-squad" ["l"="41.185,0.194"]
"pingcap/autoflow" ["l"="41.294,0.417"]
"kestra-io/kestra" ["l"="15.832,-10.248"]
"onejs/one" ["l"="5.917,-27.966"]
"run-llama/sec-insights" ["l"="41.049,0.692"]
"run-llama/llama-lab" ["l"="41.233,-3.684"]
"run-llama/create_llama_projects" ["l"="48.498,29.991"]
"run-llama/llama-hub" ["l"="41.296,-3.676"]
"lucastononro/llm-food-delivery" ["l"="41.116,0.875"]
"rsrohan99/rag-stream-intermediate-events-tutorial" ["l"="41.363,0.804"]
"run-llama/mongodb-demo" ["l"="41.078,0.907"]
"timho102003/NewsGPT" ["l"="40.985,0.926"]
"shroominic/fastui-chat" ["l"="41.09,0.834"]
"docker/genai-stack" ["l"="40.847,0.398"]
"ollama/ollama-python" ["l"="40.628,0.298"]
"mlc-ai/web-stable-diffusion" ["l"="40.221,0.663"]
"mlc-ai/web-llm" ["l"="40.323,0.527"]
"0hq/WebGPT" ["l"="41.27,-3.861"]
"facebookincubator/AITemplate" ["l"="38.855,-0.59"]
"flashinfer-ai/flashinfer" ["l"="38.975,-0.486"]
"dakenf/diffusers.js" ["l"="40.469,0.819"]
"mlc-ai/mlc-en" ["l"="36.971,1.029"]
"merrymercy/awesome-tensor-compilers" ["l"="37.035,0.94"]
"apache/tvm" ["l"="50.13,29.773"]
"YavorGIvanov/sam.cpp" ["l"="40.223,1.022"]
"dinglufe/segment-anything-cpp-wrapper" ["l"="48.706,29.831"]
"staghado/vit.cpp" ["l"="40.16,1.157"]
"ashvardanian/SimSIMD" ["l"="-19.582,-26.14"]
"eschluntz/compress" ["l"="40.704,5.959"]
"axodox/axodox-machinelearning" ["l"="40.196,0.988"]
"likejazz/llama3.np" ["l"="-5.257,-23.246"]
"vitoplantamura/OnnxStream" ["l"="40.271,0.947"]
"maxbbraun/llama4micro" ["l"="40.074,1.152"]
"chongzhou96/EdgeSAM" ["l"="48.723,29.949"]
"AgentOps-AI/AgentStack" ["l"="41.313,0.235"]
"crewAIInc/crewAI-examples" ["l"="40.96,0.352"]
"ag2ai/ag2" ["l"="41.086,0.343"]
"BeastByteAI/scikit-llm" ["l"="40.729,0.707"]
"shankarpandala/lazypredict" ["l"="45.27,26.207"]
"pycaret/pycaret" ["l"="45.403,26.145"]
"cleanlab/cleanlab" ["l"="45.132,25.932"]
"skorch-dev/skorch" ["l"="45.56,26.121"]
"huggingface/autotrain-advanced" ["l"="38.587,-0.664"]
"feature-engine/feature_engine" ["l"="45.341,26.309"]
"ollama-ui/ollama-ui" ["l"="41.52,0.16"]
"ollama-interface/Ollama-Gui" ["l"="41.588,0.118"]
"richawo/minimal-llm-ui" ["l"="41.555,0.13"]
"enoch1118/ollamaGUI" ["l"="41.611,0.094"]
"HelgeSverre/ollama-gui" ["l"="41.523,0.098"]
"mrdjohnson/llm-x" ["l"="41.632,0.081"]
"kghandour/Ollama-SwiftUI" ["l"="41.672,0.075"]
"bionic-gpt/bionic-gpt" ["l"="41.341,0.286"]
"fmaclen/hollama" ["l"="41.599,0.142"]
"drazdra/ollama-chats" ["l"="41.625,0.105"]
"ggozad/oterm" ["l"="41.66,0.099"]
"jikkuatwork/saddle" ["l"="41.618,0.123"]
"jakobhoeg/nextjs-ollama-llm-ui" ["l"="41.458,0.19"]
"ollama/ollama-js" ["l"="41.096,0.318"]
"semperai/amica" ["l"="41.582,0.404"]
"mfmezger/conversational-agent-langchain" ["l"="41.638,0.549"]
"Nachoeigu/agentic-customer-service-medical-clinic" ["l"="41.527,0.489"]
"georgian-io/LLM-Finetuning-Toolkit" ["l"="41.025,1.005"]
"ashishpatel26/LLM-Finetuning" ["l"="41.11,0.703"]
"georgian-io/Multimodal-Toolkit" ["l"="45.988,24.742"]
"georgian-io/genai-bootcamp" ["l"="40.993,1.048"]
"amaiya/onprem" ["l"="40.951,1.117"]
"okuvshynov/slowllama" ["l"="40.832,1.018"]
"predibase/llm_distillation_playbook" ["l"="38.571,-0.356"]
"Marker-Inc-Korea/AutoRAG" ["l"="41.124,0.522"]
"mesop-dev/mesop" ["l"="40.915,0.396"]
"axodox/unpaint" ["l"="40.146,1.036"]
"symisc/tiny-dream" ["l"="40.176,1.023"]
"igorbrigadir/awesome-twitter-algo" ["l"="41.533,1.169"]
"Mooler0410/LLMsPracticalGuide" ["l"="40.014,0.629"]
"EdVince/Stable-Diffusion-NCNN" ["l"="49.567,30.83"]
"Amblyopius/Stable-Diffusion-ONNX-FP16" ["l"="37.257,1.344"]
"hamzafarooq/building-llm-applications-from-scratch" ["l"="41.239,0.529"]
"KalyanKS-NLP/llm-engineer-toolkit" ["l"="41.214,0.405"]
"KalyanKS-NLP/rag-zero-to-hero-guide" ["l"="41.306,0.527"]
"break-into-data/ai-engineer-toolkit" ["l"="41.255,0.496"]
"PacktPublishing/LLM-Engineers-Handbook" ["l"="41.201,0.578"]
"llmgenai/LLMInterviewQuestions" ["l"="41.275,0.566"]
"mongodb-developer/GenAI-Showcase" ["l"="41.147,0.4"]
"HandsOnLLM/Hands-On-Large-Language-Models" ["l"="41.012,0.525"]
"neural-maze/ava-whatsapp-agent-course" ["l"="41.392,0.451"]
"afshinea/stanford-cme-295-transformers-large-language-models" ["l"="41.272,0.415"]
"hamzafarooq/advanced-llms-course" ["l"="41.353,0.712"]
"youssefHosni/Data-Science-Interview-Preperation-Resources" ["l"="48.131,26.444"]
"aymenfurter/microagents" ["l"="41.282,0.858"]
"Marker-Inc-Korea/RAGchain" ["l"="-5.292,-23.182"]
"pchunduri6/rag-demystified" ["l"="41.034,0.859"]
"rentruewang/bocoel" ["l"="41.218,0.964"]
"RecipeUI/RecipeUI" ["l"="41.063,1.125"]
"stackwiseai/stackwise" ["l"="40.849,-3.69"]
"medplum/medplum" ["l"="51.405,-0.992"]
"kardolus/prompts" ["l"="40.333,1.208"]
"umputun/spot" ["l"="-42.314,15.774"]
"RUCAIBox/LLMSurvey" ["l"="38.837,-2.036"]
"deep-floyd/IF" ["l"="49.092,30.021"]
"Stability-AI/stablediffusion" ["l"="38.29,0.917"]
"Stability-AI/StableStudio" ["l"="38.511,1.082"]
"radix-ui/primitives" ["l"="-3.798,-29.795"]
"resend/react-email" ["l"="-3.706,-29.97"]
"better-auth/better-auth" ["l"="-3.747,-30.154"]
"piercefreeman/gpt-json" ["l"="41.229,-4.041"]
"mlc-ai/xgrammar" ["l"="39.053,-0.407"]
"turboderp-org/exllamav2" ["l"="42.644,-2.028"]
"S-LoRA/S-LoRA" ["l"="38.842,-0.458"]
"FasterDecoding/Medusa" ["l"="38.899,-0.485"]
"aphrodite-engine/aphrodite-engine" ["l"="42.881,1.589"]
"michaelfeil/infinity" ["l"="41.178,0.853"]
"WooooDyy/LLM-Agent-Paper-List" ["l"="36.678,-2.286"]
"LevanKvirkvelia/salute" ["l"="41.255,1.188"]
"Yawanseh/guidescript" ["l"="41.282,1.246"]
"xenova/whisper-web" ["l"="40.634,3.218"]
"electric-sql/pglite" ["l"="-4.143,-30.186"]
"oxc-project/oxc" ["l"="-4.191,-29.976"]
"tldraw/tldraw" ["l"="15.631,-10.712"]
"imgly/background-removal-js" ["l"="-3.441,-29.918"]
"MorpheusAIs/Morpheus" ["l"="42.054,0.503"]
"MorpheusAIs/Docs" ["l"="42.084,0.527"]
"MorpheusAIs/MySuperAgent" ["l"="42.105,0.537"]
"MorpheusAIs/SmartContracts" ["l"="42.087,0.51"]
"DecentralizeAI/MRC" ["l"="42.104,0.516"]
"MorpheusAIs/MRC" ["l"="42.091,0.54"]
"marella/ctransformers" ["l"="42.573,-2.077"]
"AutoGPTQ/AutoGPTQ" ["l"="38.79,-0.529"]
"peremartra/Large-Language-Model-Notebooks-Course" ["l"="41.197,0.683"]
"SylphAI-Inc/LLM-engineer-handbook" ["l"="41.175,0.577"]
"ghimiresunil/LLM-PowerHouse-A-Curated-Guide-for-Large-Language-Models-with-Custom-Training-and-Inferencing" ["l"="41.218,0.785"]
"IbrahimSobh/llms" ["l"="31.425,-28.758"]
"mistralai/cookbook" ["l"="41.262,0.642"]
"hananedupouy/LLMs-in-Finance" ["l"="41.455,0.601"]
"louisfb01/start-llms" ["l"="41.279,0.746"]
"Lordog/dive-into-llms" ["l"="38.678,-2.031"]
"huggingface/smol-course" ["l"="41.102,0.505"]
"mlabonne/llm-datasets" ["l"="41.195,0.654"]
"reworkd/bananalyzer" ["l"="41.078,0.982"]
"run-llama/modal_finetune_sql" ["l"="40.813,1.161"]
"yixuantt/MultiHop-RAG" ["l"="54.261,25.515"]
"kingjulio8238/Memary" ["l"="41.165,0.52"]
"morphik-org/morphik-core" ["l"="41.377,0.238"]
"PrefectHQ/ControlFlow" ["l"="-44.404,6.6"]
"OSU-NLP-Group/HippoRAG" ["l"="41.215,0.527"]
"devflowinc/trieve" ["l"="-44.4,6.551"]
"memodb-io/memobase" ["l"="41.266,0.394"]
"circlemind-ai/fast-graphrag" ["l"="41.239,0.476"]
"lastmile-ai/mcp-agent" ["l"="41.276,-0.004"]
"bbycroft/llm-viz" ["l"="40.553,0.364"]
"poloclub/transformer-explainer" ["l"="40.657,0.238"]
"czhixin/llm-viz-cn" ["l"="40.488,0.485"]
"openai/transformer-debugger" ["l"="38.699,-0.722"]
"ImagineAILab/ai-by-hand-excel" ["l"="40.856,0.444"]
"datawhalechina/llm-universe" ["l"="38.704,-1.959"]
"TencentARC/PhotoMaker" ["l"="33.598,30.984"]
"chenzomi12/AISystem" ["l"="36.88,0.686"]
"daveshap/OpenAI_Agent_Swarm" ["l"="40.773,0.625"]
"daveshap/Claude_Sentience" ["l"="40.862,0.852"]
"daveshap/weekly_arxiv" ["l"="40.72,0.964"]
"daveshap/Raspberry" ["l"="40.875,0.785"]
"nasa-petal/bidara" ["l"="40.674,0.963"]
"recommenders-team/recommenders" ["l"="59.388,23.856"]
"dair-ai/ML-Papers-Explained" ["l"="47.829,26.366"]
"LangbaseInc/langui" ["l"="41.039,0.403"]
"raidendotai/openv0" ["l"="41.027,0.499"]
"horizon-ui/chatgpt-ai-template" ["l"="44.138,1.017"]
"MarsX-dev/floatui" ["l"="-12.819,-31.579"]
"lobehub/lobe-ui" ["l"="-4.093,-32.328"]
"ant-design/x" ["l"="-3.937,-32.608"]
"nolly-studio/cult-ui" ["l"="-3.157,-31.398"]
"assistant-ui/assistant-ui" ["l"="41.044,0.22"]
"motifland/markprompt" ["l"="-3.265,-30.434"]
"vantezzen/autoform" ["l"="-3.212,-31.369"]
"hrishioa/wishful-search" ["l"="41.175,0.739"]
"hrishioa/lumentis" ["l"="41.187,0.515"]
"KarelDO/xmc.dspy" ["l"="41.235,0.914"]
"Alpha-VLLM/LLaMA2-Accessory" ["l"="47.478,29.969"]
"mlfoundations/open_flamingo" ["l"="49.028,30.256"]
"facebookresearch/ImageBind" ["l"="49.068,30.103"]
"X-PLUG/mPLUG-Owl" ["l"="47.444,29.996"]
"238SAMIxD/discord-ai-bot" ["l"="41.854,-0.193"]
"mxyng/discollama" ["l"="41.867,-0.215"]
"kevinthedang/discord-ollama" ["l"="41.812,-0.16"]
"rapmd73/Companion" ["l"="41.877,-0.191"]
"Dicklesworthstone/llm_aided_ocr" ["l"="41.038,0.191"]
"adithya-s-k/omniparse" ["l"="40.808,0.075"]
"Nutlope/llama-ocr" ["l"="41.259,0.31"]
"yigitkonur/swift-ocr-llm-powered-pdf-to-markdown" ["l"="41.303,0.4"]
"lumina-ai-inc/chunkr" ["l"="41.334,0.315"]
"X-PLUG/mPLUG-DocOwl" ["l"="47.309,29.975"]
"codestoryai/aide" ["l"="41.245,0.203"]
"codestoryai/sidecar" ["l"="36.47,-0.125"]
"Doriandarko/deepseek-engineer" ["l"="41.387,0.179"]
"Nutlope/llamacoder" ["l"="41.154,0.183"]
"RooVetGit/Roo-Code" ["l"="41.022,-0.062"]
"groq/groq-appgen" ["l"="41.398,0.316"]
"e2b-dev/fragments" ["l"="41.146,0.241"]
"e2b-dev/open-computer-use" ["l"="41.428,0.224"]
"langchain-ai/open-canvas" ["l"="41.201,0.214"]
"AK391/ai-gradio" ["l"="41.411,0.153"]
"browserbase/open-operator" ["l"="41.343,0.125"]
"stackblitz-labs/bolt.diy" ["l"="41.019,0.033"]
"sourcegraph/cody" ["l"="40.939,0.274"]
"weaviate/healthsearch-demo" ["l"="41.492,0.964"]
"frdel/agent-zero" ["l"="41.075,0.24"]
"HKUDS/AutoAgent" ["l"="41.313,0.119"]
"lastmile-ai/aiconfig" ["l"="41.018,0.744"]
"lastmile-ai/semantic-retrieval" ["l"="42.567,-1.836"]
"lastmile-ai/llama-retrieval-plugin" ["l"="42.55,-1.877"]
"lastmile-ai/lastmileai-python" ["l"="42.566,-1.853"]
"KhoomeiK/LlamaGym" ["l"="41.238,0.71"]
"sourcegraph/sourcegraph-public-snapshot" ["l"="4.072,-8.78"]
"AbanteAI/archive-old-cli-mentat" ["l"="41.167,-3.989"]
"BuilderIO/micro-agent" ["l"="41.076,0.296"]
"mufeedvh/code2prompt" ["l"="41.131,0.105"]
"twinnydotdev/twinny" ["l"="40.976,0.25"]
"menloresearch/awesome-local-ai" ["l"="41.042,0.594"]
"vince-lam/awesome-local-llms" ["l"="41.146,0.851"]
"menloresearch/cortex.cpp" ["l"="40.849,0.499"]
"felladrin/awesome-ai-web-search" ["l"="41.239,0.445"]
"JShollaj/awesome-llm-web-ui" ["l"="41.564,0.578"]
"rashadphz/farfalle" ["l"="41.063,0.364"]
"SecureAI-Tools/SecureAI-Tools" ["l"="12.459,-8.619"]
"underlines/awesome-ml" ["l"="42.669,-1.992"]
"mudler/LocalAGI" ["l"="40.753,-3.634"]
"louisgv/local.ai" ["l"="42.631,-2.215"]
"jaypyles/Scraperr" ["l"="12.41,-8.584"]
"intel/intel-extension-for-transformers" ["l"="64.161,-2.417"]
"SJTU-IPADS/PowerInfer" ["l"="38.998,-0.659"]
"pytorch/executorch" ["l"="39.047,-0.352"]
"transformerlab/transformerlab-app" ["l"="41.303,0.194"]
"kyegomez/swarms" ["l"="41.065,0.15"]
"elizaOS/eliza" ["l"="40.974,-0.04"]
"0xPlaygrounds/rig" ["l"="-8.583,-4.422"]
"microsoft/PromptWizard" ["l"="41.175,0.25"]
"camel-ai/owl" ["l"="41.09,-0.146"]
"facebookresearch/xformers" ["l"="38.829,-0.716"]
"Simatwa/python-tgpt" ["l"="46.224,1.501"]
"aandrew-me/ytDownloader" ["l"="-49.264,10.284"]
"ekkinox/yai" ["l"="40.268,1.157"]
"pystardust/ytfzf" ["l"="-14.199,-3.519"]
"fairyglade/ly" ["l"="-14.505,-3.483"]
"MeanderingProgrammer/render-markdown.nvim" ["l"="-12.715,-9.761"]
"gokcehan/lf" ["l"="-14.233,-3.494"]
"Benexl/yt-x" ["l"="-16.987,-5.133"]
"latitude-dev/latitude-llm" ["l"="41.249,0.356"]
"PySpur-Dev/pyspur" ["l"="41.228,0.062"]
"withcatai/node-llama-cpp" ["l"="40.844,0.787"]
"gluonfield/enchanted" ["l"="27.637,-21.142"]
"sugarforever/chat-ollama" ["l"="40.978,-0.118"]
"anysphere/priompt" ["l"="41.173,0.407"]
"udecode/dotai" ["l"="41.395,0.261"]
"NeoVertex1/SuperPrompt" ["l"="40.976,0.169"]
"eastlondoner/cursor-tools" ["l"="41.338,0.014"]
"entropy-research/Devon" ["l"="41.093,0.408"]
"character-ai/prompt-poet" ["l"="41.323,0.573"]
"Mintplex-Labs/openai-assistant-swarm" ["l"="40.89,-3.509"]
"rnadigital/agentcloud" ["l"="40.015,-2"]
"flanker/chromadb-admin" ["l"="40.899,0.794"]
"langchain-ai/langserve" ["l"="41.393,-3.573"]
"open-webui/pipelines" ["l"="41.081,3.103"]
"trholding/llama2.c" ["l"="40.508,0.845"]
"b4rtaz/distributed-llama" ["l"="40.719,0.628"]
"tairov/llama2.py" ["l"="-42.461,17.59"]
"facebookresearch/MobileLLM" ["l"="38.877,-0.223"]
"alessiodm/drl-zh" ["l"="40.562,5.893"]
"RahulSChand/gpu_poor" ["l"="38.944,-0.529"]
"apple/ml-ane-transformers" ["l"="27.436,-21.064"]
"pinecone-io/terraform-provider-pinecone" ["l"="-2.941,-30.632"]
"pinecone-io/aws-reference-architecture-pulumi" ["l"="-2.893,-30.665"]
"pinecone-io/pinecone-python-client" ["l"="-3.013,-30.599"]
"pinecone-io/pinecone-vercel-starter" ["l"="-3.139,-30.544"]
"pinecone-io/pinecone-client" ["l"="-2.959,-30.622"]
"pinecone-io/pinecone-ts-client" ["l"="-2.995,-30.62"]
"pinecone-io/examples" ["l"="41.289,-3.588"]
"farizrahman4u/loopgpt" ["l"="41.116,-3.745"]
"danielgross/LlamaAcademy" ["l"="41.347,-3.817"]
"metavoiceio/tortoise-tts" ["l"="41.642,1.606"]
"lxe/llavavision" ["l"="47.539,30.471"]
"modal-labs/devlooper" ["l"="43.918,19.839"]
"paulpierre/RasaGPT" ["l"="41.148,-3.693"]
"gmpetrov/databerry" ["l"="41.175,-3.8"]
"wgryc/phasellm" ["l"="41.348,-4.011"]
"FlorianDietz/comgra" ["l"="40.917,1.25"]
"aasimsani/meow-learning" ["l"="41.376,-3.989"]
"rapidpages/rapidpages" ["l"="41.192,0.462"]
"Yuyz0112/dewhale" ["l"="41.137,0.455"]
"SawyerHood/tlbrowse" ["l"="41.346,0.519"]
"Doriandarko/gemini-ui-to-code" ["l"="41.374,0.441"]
"eylonmiz/react-agent" ["l"="-12.674,-7.391"]
"WindChat-Link/windchat-extension" ["l"="41.188,0.498"]
"fill3d/fill" ["l"="40.843,6.045"]
"RubricLab/create-rubric-app" ["l"="-3.348,-30.527"]
"jgravelle/AutoGroq" ["l"="41.28,0.441"]
"nickdobos/agiDotZip" ["l"="40.484,1.236"]
"nikvdp/agentgrunt" ["l"="40.454,1.29"]
"nickdobos/PromptGrimoire" ["l"="40.56,1.116"]
"adamcohenhillel/LLMitlessAPI" ["l"="41.26,-3.73"]
"PrithivirajDamodaran/FlashRank" ["l"="41.16,0.879"]
"huggingface/lighteval" ["l"="38.622,-0.502"]
"withcatai/catai" ["l"="41.075,0.753"]
"rivet-gg/rivet" ["l"="41.161,1.386"]
"rivet-gg/actor-core" ["l"="-5.193,-27.536"]
"AmbientRun/Ambient" ["l"="-9.742,-4.316"]
"bitbrain/beehave" ["l"="-32.201,-26.248"]
"gaea-godot/gaea" ["l"="-32.186,-26.293"]
"moonrepo/moon" ["l"="-4.29,-30.058"]
"Ark2000/PankuConsole" ["l"="-32.167,-26.29"]
"hyperdxio/hyperdx" ["l"="16.035,-10.259"]
"clockworklabs/SpacetimeDB" ["l"="-9.292,-5.713"]
"ArroyoSystems/arroyo" ["l"="-0.424,15.013"]
"camenduru/text-generation-webui-colab" ["l"="39.894,0.506"]
"camenduru/text-generation-webui" ["l"="39.741,0.486"]
"liltom-eth/llama2-webui" ["l"="40.974,-3.885"]
"Troyanovsky/Local-LLM-Comparison-Colab-UI" ["l"="42.546,-2.091"]
"camenduru/text-to-video-synthesis-colab" ["l"="33.683,31.251"]
"llSourcell/Doctor-Dignity" ["l"="41.018,-4.017"]
"camenduru/seamless-m4t-colab" ["l"="39.707,0.525"]
"sanchit-gandhi/whisper-jax" ["l"="40.579,3.218"]
"dsdanielpark/Bard-API" ["l"="41.022,-3.871"]
"relari-ai/continuous-eval" ["l"="3.732,13.023"]
"lanterndata/lantern" ["l"="3.719,13.045"]
"ParisNeo/lollms_personalities_zoo" ["l"="39.724,0.35"]
"ParisNeo/petals_server_installer" ["l"="39.747,0.349"]
"meteroid-oss/meteroid" ["l"="41.076,1.464"]
"openmeterio/openmeter" ["l"="41.088,1.366"]
"uselotus/lotus" ["l"="16.145,-10.249"]
"bytechefhq/bytechef" ["l"="0.739,-28.016"]
"getlago/lago" ["l"="16.088,-10.281"]
"apirrone/Memento" ["l"="41.808,0.363"]
"TheSethRose/Time-Capsule" ["l"="41.757,0.377"]
"dhamaniasad/cytev2" ["l"="41.879,0.403"]
"OwlAIProject/Owl" ["l"="41.612,0.388"]
"jasonjmcghee/rem" ["l"="41.68,0.439"]
"Vincent-liuwingsang/unlost" ["l"="41.847,0.428"]
"yuka-friends/Windrecorder" ["l"="41.748,0.285"]
"openrecall/openrecall" ["l"="41.884,0.216"]
"brilliantlabsAR/frame-codebase" ["l"="42.142,0.724"]
"brilliantlabsAR/frame-utilities-for-python" ["l"="42.118,0.729"]
"brilliantlabsAR/noa-assistant" ["l"="42.043,0.662"]
"brilliantlabsAR/noa-flutter" ["l"="42.112,0.693"]
"brilliantlabsAR/ar-studio-for-vscode" ["l"="42.102,0.707"]
"brilliantlabsAR/docs" ["l"="42.202,0.77"]
"QwenLM/Qwen3" ["l"="38.923,-1.766"]
"modelscope/modelscope-agent" ["l"="36.766,-2.161"]
"QwenLM/Qwen2.5-VL" ["l"="47.318,29.932"]
"yangjianxin1/Firefly" ["l"="38.997,-2.044"]
"QwenLM/Qwen-VL" ["l"="47.411,29.954"]
"open-compass/opencompass" ["l"="38.902,-2.019"]
"Atome-FE/llama-node" ["l"="40.811,0.957"]
"tangledgroup/llama-cpp-wasm" ["l"="40.603,0.98"]
"mybigday/llama.rn" ["l"="-51.527,9.491"]
"mdrokz/rust-llama.cpp" ["l"="-8.634,-4.455"]
"llm-tools/embedJs" ["l"="40.794,0.988"]
"ax-llm/ax" ["l"="41.082,0.678"]
"Siddharth1India/Awesome-Deep-Learning" ["l"="40.966,1.014"]
"Scale3-Labs/langtrace" ["l"="41.007,0.607"]
"ganarajpr/awesome-dspy" ["l"="41.198,0.933"]
"zenbase-ai/core" ["l"="3.602,12.896"]
"MarianoMolina/project_alice" ["l"="39.935,-2.171"]
"WTFAcademy/WTF-Langchain" ["l"="41.061,-0.608"]
"sugarforever/wtf-langchain" ["l"="41.035,-0.523"]
"sugarforever/LangChain-Advanced" ["l"="41.061,-0.638"]
"sugarforever/LlamaIndex-Tutorials" ["l"="41.045,-0.622"]
"sugarforever/LangChain-Tutorials" ["l"="41.048,-0.581"]
"satellitecomponent/Neurite" ["l"="40.949,0.553"]
"pashpashpash/vault-ai" ["l"="41.147,-3.795"]
"e2b-dev/awesome-ai-sdks" ["l"="40.965,-3.725"]
"IST-DASLab/gptq" ["l"="38.814,-0.37"]
"mit-han-lab/llm-awq" ["l"="38.87,-0.434"]
"mit-han-lab/smoothquant" ["l"="38.848,-0.318"]
"casper-hansen/AutoAWQ" ["l"="38.845,-0.427"]
"johnsmith0031/alpaca_lora_4bit" ["l"="42.499,-1.956"]
"NVIDIA/FasterTransformer" ["l"="38.883,-0.641"]
"SqueezeAILab/SqueezeLLM" ["l"="38.846,-0.295"]
"ex3ndr/llama-coder" ["l"="41.218,0.193"]
"rjmacarthy/twinny-api" ["l"="40.916,0.262"]
"srikanth235/privy" ["l"="41.154,0.374"]
"RussellCanfield/wingman-ai" ["l"="41.18,0.173"]
"bernardo-bruning/ollama-copilot" ["l"="41.448,0.116"]
"ProfSynapse/Super_Synapse" ["l"="40.562,0.751"]
"ProfSynapse/dream-text-to-image" ["l"="40.555,0.74"]
"ai-boost/Awesome-GPTs" ["l"="44.138,0.709"]
"ai-boost/awesome-prompts" ["l"="44.113,0.684"]
"nftblackmagic/flask-langchain" ["l"="41.086,-0.686"]
"sugarforever/Advanced-RAG" ["l"="41.025,-0.617"]
"sugarforever/LangChain-SQL-Chain" ["l"="41.054,-0.678"]
"yanqiangmiffy/Chinese-LangChain" ["l"="39.103,-2.038"]
"X-D-Lab/LangChain-ChatGLM-Webui" ["l"="39.109,-2.011"]
"nlmatics/llmsherpa" ["l"="41.055,0.669"]
"shroominic/codeinterpreter-api" ["l"="41.063,-3.887"]
"nicoalbanese/kirimase" ["l"="-3.631,-30.263"]
"zernonia/vue0" ["l"="-7.682,-30.54"]
"raidendotai/cofounder" ["l"="41.062,0.176"]
"udecode/plate" ["l"="-3.528,-29.949"]
"steven-tey/precedent" ["l"="-3.457,-30.134"]
"pondorasti/emojis" ["l"="-3.345,-30.34"]
"rizerphe/local-llm-function-calling" ["l"="42.953,1.858"]
"rgbkrk/chatlab" ["l"="40.835,0.917"]
"jondurbin/airoboros" ["l"="42.563,-2.031"]
"arcee-ai/mergekit" ["l"="38.666,-0.539"]
"NousResearch/Hermes-Function-Calling" ["l"="42.987,1.888"]
"nexusflowai/NexusRaven" ["l"="36.918,-1.222"]
"emarco177/ice_breaker" ["l"="41.733,0.729"]
"emarco177/documentation-helper" ["l"="41.795,0.778"]
"emarco177/langgraph-course" ["l"="41.666,0.605"]
"vishwasg217/fin-sight" ["l"="40.947,0.999"]
"wisherg/python_data_course" ["l"="41.487,0.882"]
"BinNong/meet-libai" ["l"="41.431,0.781"]
"skeskinen/bert.cpp" ["l"="40.141,1.216"]
"monatis/lmm.cpp" ["l"="40.146,1.189"]
"balisujohn/tortoise.cpp" ["l"="40.182,1.188"]
"gitmylo/bark-voice-cloning-HuBERT-quantizer" ["l"="38.64,1.862"]
"edwko/OuteTTS" ["l"="38.5,1.841"]
"Vaibhavs10/open-tts-tracker" ["l"="38.52,1.935"]
"mmwillet/TTS.cpp" ["l"="40.204,1.178"]
"ggerganov/bark.cpp" ["l"="40.189,1.212"]
"NVIDIA/bionemo-examples" ["l"="41.876,-0.088"]
"NVIDIA-BioNeMo-blueprints/generative-virtual-screening" ["l"="41.772,-0.042"]
"BrainBlend-AI/atomic-agents" ["l"="41.106,0.373"]
"OvidijusParsiunas/deep-chat" ["l"="41.017,0.208"]
"ThinkInAIXYZ/deepchat" ["l"="41.211,-0.299"]
"vercel-labs/gemini-chatbot" ["l"="41.358,0.543"]
"openchatai/OpenChat" ["l"="41.083,-3.847"]
"OvidijusParsiunas/active-table" ["l"="-2.87,-29.686"]
"webwhiz-ai/webwhiz" ["l"="41.178,-3.707"]
"SamurAIGPT/Open-Custom-GPT" ["l"="41.13,-3.677"]
"refly-ai/refly" ["l"="41.277,-0.057"]
"ConvoStack/convostack" ["l"="44.487,0.604"]
"advanced-chat/vue-advanced-chat" ["l"="-6.588,-32.709"]
"sugarforever/OpenAI-Tutorials" ["l"="41.018,-0.594"]
"rupeshs/fastsdcpu" ["l"="40.224,0.963"]
"ssube/onnx-web" ["l"="37.298,1.345"]
"rvdveen/epaper-slow-generative-art" ["l"="40.25,0.998"]
"straczowski/raspberry-pi-stable-diffusion" ["l"="40.255,1.021"]
"varunshenoy/opendream" ["l"="40.803,6.048"]
"RWKV/rwkv.cpp" ["l"="49.496,34.009"]
"dome272/Wuerstchen" ["l"="46.262,30.469"]
"lxe/simple-llm-finetuner" ["l"="42.451,-1.975"]
"BingyanStudio/LapisCV" ["l"="-2.907,-32.575"]
"shion-app/shion" ["l"="46.422,-1.002"]
"Planshit/Tai" ["l"="-49.038,12.859"]
"blossom-editor/blossom" ["l"="-54.402,-12.85"]
"lqzhgood/Shmily" ["l"="-47.346,9.889"]
"cooderl/wewe-rss" ["l"="-44.2,11.889"]
"Jeric-X/SyncClipboard" ["l"="-49.353,12.652"]
"easychen/checkchan-dist" ["l"="-44.271,11.745"]
"mulaRahul/keyviz" ["l"="-49.005,12.726"]
"sanjeevanahilan/nanoChatGPT" ["l"="40.471,1.466"]
"avidml/evaluating-LLMs" ["l"="40.452,1.5"]
"daveshap/AutoMuse_ChatGPT" ["l"="40.647,1.093"]
"daveshap/AutoMuse_Chapter_Planner" ["l"="40.638,1.14"]
"daveshap/AI_Future_of_Work" ["l"="40.651,1.148"]
"daveshap/Coding_ChatBot_Assistant" ["l"="40.684,1.087"]
"daveshap/KB_microservice" ["l"="40.688,1.069"]
"daveshap/Automated_Consensus" ["l"="40.699,1.08"]
"daveshap/ACE_WorldState" ["l"="40.701,1.014"]
"daveshap/ChromaDB_Chatbot_Public" ["l"="40.692,1.101"]
"daveshap/EU_AI_Act" ["l"="40.679,1.055"]
"daveshap/Medical_Intake" ["l"="40.729,0.982"]
"daveshap/Open_MURPHIE" ["l"="40.713,0.989"]
"MotiaDev/motia" ["l"="41.38,0.15"]
"lmnr-ai/index" ["l"="41.353,0.179"]
"MinishLab/model2vec" ["l"="41.292,0.639"]
"eyelevelai/groundx-on-prem" ["l"="41.486,0.357"]
"harrisonvanderbyl/rwkv-cpp-accelerated" ["l"="49.472,34.005"]
"nomic-ai/gpt4all-ts" ["l"="42.434,-2.15"]
"FL33TW00D/whisper-turbo" ["l"="40.642,3.171"]
"StructuredLabs/preswald" ["l"="41.018,0.906"]
"promptslab/Promptify" ["l"="43.938,0.65"]
"kevinhermawan/Ollamac" ["l"="41.639,0.121"]
"ollama-webui/ollama-webui-lite" ["l"="41.534,0.078"]
"microsoft/promptbench" ["l"="40.759,0.663"]
"MLGroupJLU/LLM-eval-survey" ["l"="37.241,-0.107"]
"QData/TextAttack" ["l"="52.748,25.575"]
"stanford-crfm/helm" ["l"="37.214,-0.161"]
"tjunlp-lab/Awesome-LLMs-Evaluation-Papers" ["l"="36.69,-2.463"]
"tatsu-lab/alpaca_eval" ["l"="37.246,-0.242"]
"THUDM/AgentBench" ["l"="36.724,-2.315"]
"llm-attacks/llm-attacks" ["l"="38.126,-7.398"]
"JShollaj/awesome-llm-interpretability" ["l"="37.782,-6.936"]
"kristianfreeman/aiwriter" ["l"="41.599,0.216"]
"echohive42/AI-book-maker-with-perplexity-search-grounding" ["l"="41.578,0.235"]
"linux-do/override" ["l"="45.564,0.668"]
"doggy8088/bilingual_book_maker" ["l"="22.21,2.081"]
"phodal/aigc" ["l"="44.081,0.883"]
"linux-do/new-api" ["l"="45.538,0.598"]
"GanymedeNil/document.ai" ["l"="43.7,0.991"]
"aurora-develop/aurora" ["l"="45.497,0.59"]
"phodal/prompt-patterns" ["l"="43.933,0.879"]
"iAmCorey/awesome-indie-hacker-tools" ["l"="45.482,-0.704"]
"ashishpatel26/Treasure-of-Transformers" ["l"="47.86,26.498"]
"rohan-paul/LLM-FineTuning-Large-Language-Models" ["l"="-1.361,17.55"]
"ashishpatel26/500-AI-Agents-Projects" ["l"="41.343,0.602"]
"NielsRogge/Transformers-Tutorials" ["l"="47.772,26.319"]
"explosion/spacy-layout" ["l"="41.103,1.172"]
"explosion/projects" ["l"="52.602,25.571"]
"davidberenstein1957/classy-classification" ["l"="52.298,25.591"]
"IBM/zshot" ["l"="3.23,-6.87"]
"srush/MiniChain" ["l"="41.454,-3.802"]
"NorskRegnesentral/skweak" ["l"="52.47,25.62"]
"automorphic-ai/trex" ["l"="41.008,1.262"]
"Renset/macai" ["l"="41.694,0.037"]
"CrazyNeil/OllamaSpring" ["l"="41.75,0.016"]
"psugihara/FreeChat" ["l"="27.514,-21.182"]
"andersrex/notesollama" ["l"="41.758,0.04"]
"lucidrains/MEGABYTE-pytorch" ["l"="40.522,1.478"]
"lucidrains/simple-hierarchical-transformer" ["l"="40.509,1.529"]
"yangdongchao/AcademiCodec" ["l"="38.483,2.058"]
"hubertsiuzdak/snac" ["l"="38.465,2.056"]
"HazyResearch/hyena-dna" ["l"="24.535,13.568"]
"haoheliu/SemantiCodec-inference" ["l"="38.395,2.151"]
"digitros/nextjs-fastapi" ["l"="41.687,1.161"]
"wpcodevo/nextjs-fastapi-framework" ["l"="41.697,1.228"]
"TCatshoek/fastapi-nextauth-jwt" ["l"="41.74,1.222"]
"vintasoftware/nextjs-fastapi-template" ["l"="41.724,1.24"]
"Nneji123/fastapi-nextjs" ["l"="41.725,1.206"]
"Sheldenburg/ai-engineer-template" ["l"="41.715,1.212"]
"vercel/ai-sdk-rag-starter" ["l"="41.456,0.747"]
"mazzasaverio/nextjs-fastapi-your-chat" ["l"="41.698,1.209"]
"supabase-community/nextjs-openai-doc-search" ["l"="-3.217,-30.437"]
"siriusdeveloper/sirius-crypter" ["l"="42.56,-0.431"]
"twitchviewer/twitch-viewer-bot" ["l"="42.628,-0.472"]
"meistrari/prompts-royale" ["l"="40.526,0.958"]
"BrightPool/udemy-prompt-engineering-course" ["l"="40.484,0.997"]
"mshumer/anthropic_with_functions" ["l"="40.457,1.06"]
"kreneskyp/ix" ["l"="41.143,-3.713"]
"microsoft/prompts-for-edu" ["l"="40.838,0.539"]
"redis-developer/ArXivChatGuru" ["l"="40.912,-3.08"]
"verazuo/jailbreak_llms" ["l"="38.081,-7.391"]
"rotemweiss57/gpt-newspaper" ["l"="41.076,0.52"]
"plastic-labs/tutor-gpt" ["l"="41.242,-3.701"]
"premAI-io/state-of-open-source-ai" ["l"="36.747,-2.114"]
"mshumer/ai-researcher" ["l"="41.16,0.539"]
"taranjeet/awesome-gpts" ["l"="44.168,0.647"]
"friuns2/BlackFriday-GPTs-Prompts" ["l"="44.213,0.701"]
"protosphinx/in" ["l"="40.919,1.14"]
"xyzhang626/embeddings.cpp" ["l"="40.083,1.29"]
"skeskinen/llama-lite" ["l"="42.511,-2.017"]
"PABannier/biogpt.cpp" ["l"="40.097,1.264"]
"cmp-nct/ggllm.cpp" ["l"="39.934,1.461"]
"city96/ComfyUI-GGUF" ["l"="32.742,32.968"]
"chengzeyi/stable-fast" ["l"="33.47,31.369"]
"vladmandic/sdnext" ["l"="32.217,31.686"]
"fmind/cookiecutter-mlops-package" ["l"="41.326,0.672"]
"NannyML/The-Little-Book-of-ML-Metrics" ["l"="41.255,0.672"]
"databricks/mlops-stacks" ["l"="-1.608,17.611"]
"marvelousmlops/mlops-roadmap-2024" ["l"="41.319,0.76"]
"fixie-ai/ai-jsx" ["l"="41.112,0.964"]
"AgentOps-AI/Jaiqu" ["l"="40.998,1.019"]
"dzhng/zod-gpt" ["l"="41.217,1.161"]
"getmetal/Metal" ["l"="41.049,1.213"]
"getmetal/chatbot" ["l"="41.063,1.205"]
"yeagerai/yeagerai-agent" ["l"="41.267,-3.714"]
"BerriAI/reliableGPT" ["l"="41.508,-3.85"]
"toolkit-ai/toolkit-ai" ["l"="41.324,-3.721"]
"prem-research/app" ["l"="41.294,-3.551"]
"fastai/lm-hackers" ["l"="41.164,0.812"]
"fastai/course22" ["l"="49.223,28.563"]
"fastai/diffusion-nbs" ["l"="49.235,28.531"]
"brevdev/launchables" ["l"="38.625,-0.57"]
"AnswerDotAI/claudette" ["l"="41.554,1.031"]
"cckuailong/SuperAdapters" ["l"="40.821,1.089"]
"dgarnitz/vectorflow" ["l"="41.072,0.947"]
"run-llama/llamaindex_aws_ingestion" ["l"="41.178,0.889"]
"abacusai/Long-Context" ["l"="37.975,-1.465"]
"snowfort-ai/awesome-llm-webapps" ["l"="41.703,0.652"]
"unionai-oss/pandera" ["l"="45.28,26.057"]
"TobikoData/sqlmesh" ["l"="-0.528,15.96"]
"ibis-project/ibis" ["l"="-0.598,15.874"]
"dlt-hub/dlt" ["l"="-0.565,15.95"]
"fugue-project/fugue" ["l"="-0.414,14.815"]
"meltano/meltano" ["l"="-0.542,15.98"]
"narwhals-dev/narwhals" ["l"="43.621,26.313"]
"aleechou/Anchor9" ["l"="40.961,1.208"]
"aa12gq/goxenith" ["l"="-54.756,-12.618"]
"Utopia2008/SSR-V2ray-Clash" ["l"="-54.759,-12.643"]
"red-velet/qrpc" ["l"="-54.811,-12.559"]
"tduckboot/tduck-platform" ["l"="40.985,1.205"]
"rhzxg/MicroblogCrawler" ["l"="-54.681,-12.571"]
"rawchen/FeishuBot" ["l"="-54.687,-12.615"]
"RobertWeijie/IS-KnowledgeBase" ["l"="-54.752,-12.568"]
"wwwwdkdk/Sparrow" ["l"="-54.776,-12.532"]
"Yuanyuan-Yuan/CacheQL" ["l"="-54.728,-12.563"]
"Touch-Sun/t-dispatch" ["l"="-54.699,-12.539"]
"ChongQingNoSubway/PDL" ["l"="-54.838,-12.607"]
"yangyuke001/SD-inference" ["l"="-54.665,-12.577"]
"zhenruyan/WSL-libre-linux-kernel" ["l"="-54.643,-12.655"]
"Trainy-ai/nodify" ["l"="41.01,1.147"]
"Trainy-ai/konduktor" ["l"="40.997,1.138"]
"Trainy-ai/trainy" ["l"="40.995,1.172"]
"microsoft/aici" ["l"="40.963,0.639"]
"codelion/optillm" ["l"="41.161,0.425"]
"apoorvumang/prompt-lookup-decoding" ["l"="38.945,-0.386"]
"SqueezeAILab/LLMCompiler" ["l"="38.815,-0.401"]
"huggingface/datatrove" ["l"="38.609,-0.53"]
"ianand/spreadsheets-are-all-you-need" ["l"="40.675,-0.275"]
"Vahe1994/AQLM" ["l"="38.819,-0.321"]
"suyu-emu/suyu" ["l"="-13.743,1.136"]
"mttaggart/I-S00N" ["l"="40.539,-0.503"]
"TheMMC/In-Place_Upgrade_Helper" ["l"="40.566,-0.601"]
"AnswerDotAI/fsdp_qlora" ["l"="38.75,-0.407"]
"adrianhajdin/zoom-clone" ["l"="-51.927,-8.52"]
"nf-core/modules" ["l"="40.555,37.303"]
"gptscript-ai/gptscript" ["l"="40.934,0.247"]
"regolith-labs/ore-cli" ["l"="40.518,-0.456"]
"SoraWebui/SoraWebui" ["l"="45.401,-0.856"]
"adamcohenhillel/ADeus" ["l"="41.131,0.292"]
"qdrant/qdrant-dotnet" ["l"="40.76,1.467"]
"viddexa/autollm" ["l"="41.044,0.771"]
"ray-project/ray-llm" ["l"="38.924,-0.567"]
"ray-project/llmperf" ["l"="38.985,-0.54"]
"ray-project/llm-numbers" ["l"="41.23,-4.088"]
"tigerlab-ai/tiger" ["l"="41.001,0.958"]
"jaemil/agentsflow" ["l"="39.952,-1.977"]
"imoneoi/openchat" ["l"="38.663,-0.73"]
"JayZeeDesign/Discord-AI-Chatbot" ["l"="39.847,-2.039"]
"xforceai/ide" ["l"="39.937,-2.032"]
"chen700564/RGB" ["l"="54.352,25.515"]
"amazon-science/RAGChecker" ["l"="41.183,0.717"]
"IAAR-Shanghai/CRUD_RAG" ["l"="-54.911,-11.533"]
"YHPeter/Awesome-RAG-Evaluation" ["l"="41.027,0.977"]
"OpenBMB/RAGEval" ["l"="-2.413,-33.796"]
"gomate-community/rageval" ["l"="40.963,1.036"]
"TonicAI/tonic_validate" ["l"="-1.791,12.595"]
"HuskyInSalt/CRAG" ["l"="54.338,25.491"]
"facebookresearch/CRAG" ["l"="41.17,1.125"]
"FrigadeHQ/trench" ["l"="16.403,-10.306"]
"weaviate/recipes" ["l"="41.381,0.736"]
"weaviate/weaviate-io" ["l"="-14.712,-10.989"]
"weaviate/mcp-server-weaviate" ["l"="41.421,3.203"]
"weaviate/weaviate-examples" ["l"="-14.709,-10.948"]
"deepset-ai/haystack-cookbook" ["l"="41.686,-3.212"]
"weaviate/weaviate-python-client" ["l"="-14.733,-10.885"]
"SamurAIGPT/LlamaIndex-course" ["l"="41.238,-3.587"]
"weaviate/typescript-client" ["l"="-14.7,-10.907"]
"togethercomputer/together-cookbook" ["l"="41.392,0.581"]
"superlinear-ai/raglite" ["l"="41.391,0.481"]
"run-llama/multi-agent-concierge" ["l"="41.341,0.69"]
"AnswerDotAI/shell_sage" ["l"="41.592,1.001"]
"floneum/floneum" ["l"="-8.558,-4.386"]
"Mobile-Artificial-Intelligence/maid" ["l"="42.171,0.459"]
"JonasGeiping/cramming" ["l"="38.763,-0.346"]
"declare-lab/flan-alpaca" ["l"="42.416,-1.931"]
"mlfoundations/open_lm" ["l"="38.52,-0.465"]
"catie-aq/flashT5" ["l"="40.65,1.429"]
"RobertRiachi/nanoPALM" ["l"="40.512,1.423"]
"allenai/natural-instructions" ["l"="37.211,-0.1"]
"mattneary/attention" ["l"="41.327,1.005"]
"hnmr293/llama-viz" ["l"="41.361,1.063"]
"Coding-Crashkurse/LangChain-Udemy-Course" ["l"="41.982,1.277"]
"JorisdeJong123/7-Days-of-LangChain" ["l"="42.139,1.423"]
"Coding-Crashkurse/LangGraph-Tutorial" ["l"="41.966,1.27"]
"JeremiahPetersen/RepoToText" ["l"="41.467,0.519"]
"flolbr/ChatGPT-File-Editor" ["l"="41.593,-3.322"]
"chand1012/git2gpt" ["l"="41.629,0.61"]
"jimmc414/onefilellm" ["l"="41.353,0.223"]
"Doriandarko/RepoToTextForLLMs" ["l"="41.37,0.478"]
"cognitivecomputations/github2file" ["l"="41.313,0.544"]
"mpoon/gpt-repository-loader" ["l"="41.327,-3.955"]
"BankkRoll/repo2pdf" ["l"="41.742,0.659"]
"emcf/thepipe" ["l"="41.289,0.517"]
"kirill-markin/repo-to-text" ["l"="41.679,0.638"]
"donoceidon/repo2txt" ["l"="41.575,0.608"]
"cyberagiinc/DevDocs" ["l"="42.044,2.262"]
"dontriskit/awesome-ai-system-prompts" ["l"="41.304,-0.001"]
"Dicklesworthstone/your-source-to-prompt.html" ["l"="41.528,0.244"]
"artkulak/repo2file" ["l"="41.538,0.054"]
"cyclotruc/gitingest" ["l"="41.045,-0.006"]
"OpenBMB/RepoAgent" ["l"="36.328,-0.137"]
"The-Pocket/PocketFlow" ["l"="41.228,-0.03"]
"abinthomasonline/repo2txt" ["l"="41.32,0.332"]
"umbertogriffo/rag-chatbot" ["l"="42.098,0.081"]
"AlaGrine/RAG_chatabot_with_Langchain" ["l"="42.107,0.04"]
"avrabyt/RAG-Chatbot" ["l"="42.019,0.197"]
"michelderu/build-your-own-rag-chatbot" ["l"="42.097,0.053"]
"leoneversberg/llm-chatbot-rag" ["l"="42.119,0.057"]
"datvodinh/rag-chatbot" ["l"="42.054,0.058"]
"lalanikarim/ai-chatbot-rag" ["l"="42.151,0.07"]
"dzhng/llm-api" ["l"="41.245,1.222"]
"dzhng/llamaflow" ["l"="41.255,1.254"]
"superlinked/VectorHub" ["l"="41.307,0.879"]
"superlinked/superlinked" ["l"="41.236,0.737"]
"thongnt99/learned-sparse-retrieval" ["l"="54.453,25.719"]
"raphaelsty/LeNLP" ["l"="41.294,1.074"]
"lightonai/ducksearch" ["l"="41.289,1.062"]
"Mozilla-Ocho/Memory-Cache" ["l"="41.493,1.009"]
"misslivirose/Memory-Cache" ["l"="41.526,1.065"]
"hunter-meloche/REMO-langflow" ["l"="52.551,27.941"]
"Mattie/cataclysm" ["l"="40.631,1.08"]
"kyb3r/emergent" ["l"="40.604,1.103"]
"gabrielchua/RAGxplorer" ["l"="41.058,0.723"]
"run-llama/ai-engineer-workshop" ["l"="40.936,0.924"]
"thakkaryash94/chroma-ui" ["l"="40.871,0.882"]
"apocas/restai-frontend" ["l"="41.453,0.899"]
"vicuna-tools/vicuna-installation-guide" ["l"="39.88,1.528"]
"vicuna-tools/Stablediffy" ["l"="39.851,1.561"]
"paolorechia/learn-langchain" ["l"="42.514,-2.094"]
"disler/diffbro" ["l"="41.54,0.666"]
"disler/reusable-openai-fine-tune" ["l"="41.521,0.649"]
"disler/indydevtools" ["l"="41.496,0.639"]
"snexus/llm-search" ["l"="41.134,0.8"]
"AIAnytime/Chat-with-PDF-Chatbot" ["l"="42.124,0.417"]
"AIAnytime/Search-Your-PDF-App" ["l"="42.203,0.376"]
"AIAnytime/Llama2-Medical-Chatbot" ["l"="42.234,0.38"]
"AIAnytime/Chat-with-Audio-using-LLM" ["l"="42.161,0.4"]
"AIAnytime/ChatCSV-Streamlit-App" ["l"="42.152,0.418"]
"AIAnytime/ChatCSV-Llama2-Chatbot" ["l"="42.04,0.458"]
"supabase-community/vercel-ai-chatbot" ["l"="-3.203,-30.468"]
"vercel/nextjs-subscription-payments" ["l"="-3.336,-30.204"]
"redhat-ai-services/ai-accelerator" ["l"="42.23,0.241"]
"Autodesk/shore" ["l"="40.298,1.262"]
"e2b-dev/infra" ["l"="41.439,0.468"]
"micr0-dev/lexido" ["l"="40.194,1.279"]
"adammpkins/llama-terminal-completion" ["l"="40.221,1.249"]
"Piotr1215/aicmdtools" ["l"="40.255,1.205"]
"mmaorc/youtube-summary-cli" ["l"="40.234,1.215"]
"lasantosr/intelli-shell" ["l"="-52.316,10.033"]
"Coding-Crashkurse/Udemy-Advanced-LangChain" ["l"="41.992,1.297"]
"Coding-Crashkurse/LangGraph-Udemy-Course" ["l"="41.843,1.135"]
"Coding-Crashkurse/LangChain-on-Azure-Udemy" ["l"="42.015,1.308"]
"quchangle1/LLM-Tool-Survey" ["l"="36.845,-1.3"]
"Ber666/ToolkenGPT" ["l"="36.822,-2.389"]
"thunlp/ToolLearningPapers" ["l"="36.759,-2.419"]
"dyabel/AnyTool" ["l"="36.869,-1.236"]
"dwzhu-pku/PoSE" ["l"="37.988,-1.446"]
"AILab-CVC/GPT4Tools" ["l"="36.959,-1.189"]
"josherich/repo-to-pdf" ["l"="41.852,0.714"]
"lgrammel/storyteller" ["l"="41.191,1.052"]
"lgrammel/modelfusion-ollama-nextjs-starter" ["l"="41.218,1.118"]
"sgomez/ollama-ai-provider" ["l"="41.19,1.104"]
"TypeAI-dev/typeai" ["l"="41.197,1.074"]
"team-openpm/workgpt" ["l"="41.223,-3.716"]
"dabit3/semantic-search-nextjs-pinecone-langchain-chatgpt" ["l"="-3.054,-30.622"]
"openlit/openlit" ["l"="41.027,0.567"]
"whylabs/langkit" ["l"="38.007,-7.423"]
"emarco177/llamaindex-documentation-helper" ["l"="41.823,0.807"]
"adithya-s-k/AI-Engineering.academy" ["l"="-14.398,-23.077"]
"youssefHosni/Getting-Started-with-Generative-AI" ["l"="48.13,26.5"]
"youssefHosni/Hands-On-LangChain-for-LLM-Applications-Development" ["l"="48.14,26.54"]
"NisaarAgharia/Advanced_RAG" ["l"="41.354,1.029"]
"lancedb/vectordb-recipes" ["l"="40.893,0.987"]
"TransformerOptimus/SuperAGI-Docs" ["l"="41.072,0.808"]
"TransformerOptimus/SuperAGI-Tools" ["l"="41.072,0.853"]
"TransformerOptimus/SuperAGI-Python-Client" ["l"="41.066,0.868"]
"TransformerOptimus/superAGI-tools-common" ["l"="41.062,0.859"]
"PepperBot-co/pepperbot" ["l"="41.294,1.277"]
"phasehq/console" ["l"="41.893,1.586"]
"phasehq/cli" ["l"="41.823,1.512"]
"TheBlokeAI/dockerLLM" ["l"="39.803,1.616"]
"hommayushi3/exllama-runpod-serverless" ["l"="39.741,1.68"]
"ashleykleynhans/runpod-worker-oobabooga" ["l"="39.759,1.657"]
"OpenAccess-AI-Collective/servereless-runpod-ggml" ["l"="39.788,1.661"]
"CambioML/uniflow-llm-based-pdf-extraction-text-cleaning-data-clustering" ["l"="40.966,1.164"]
"CambioML/any-parser" ["l"="40.95,1.186"]
"lancedb/yoloexplorer" ["l"="40.869,1.151"]
"mlabonne/llm-autoeval" ["l"="37.397,-0.221"]
"thiswillbeyourgithub/wdoc" ["l"="41.569,0.174"]
"waetr/KET-RAG" ["l"="53.724,15.469"]
"cxcscmu/Craw4LLM" ["l"="45.529,-0.456"]
"GitHamza0206/simba" ["l"="41.486,0.169"]
"NVIDIA-AI-Blueprints/pdf-to-podcast" ["l"="41.568,0.115"]
"HKUDS/VideoRAG" ["l"="59.48,22.953"]
"Goldziher/kreuzberg" ["l"="41.551,0.19"]
"stair-lab/kg-gen" ["l"="41.5,0.272"]
"rag-web-ui/rag-web-ui" ["l"="45.564,-0.466"]
"nicekate/AI-ContentCraft" ["l"="45.465,-0.604"]
"IBM/unitxt" ["l"="42.11,0.224"]
"IBM/benchbench" ["l"="42.139,0.207"]
"jakobdylanc/llmcord" ["l"="41.896,-0.218"]
"chrisrude/oobabot" ["l"="42.752,-2.074"]
"altoiddealer/ad_discordbot" ["l"="41.932,-0.255"]
"v2rockets/Loyal-Elephie" ["l"="42.913,1.732"]
"matatonic/openedai-vision" ["l"="38.74,1.552"]
"brucepro/Memoir" ["l"="42.747,-2.135"]
"jake83741/vnc-lm" ["l"="41.837,-0.128"]
"daveshap/Democratic_AI_Inputs" ["l"="40.675,1.144"]
"raphaelsty/knowledge" ["l"="41.382,1.262"]
"airvlab/cathsim" ["l"="41.632,1.767"]
"andvg3/LSDM" ["l"="41.598,1.725"]
"pgvector/pgvector-dotnet" ["l"="40.737,1.542"]
"tursodatabase/libsql-js" ["l"="40.386,1.447"]
"KoljaB/AIVoiceChat" ["l"="41.888,0.903"]
"KoljaB/Linguflex" ["l"="41.901,0.877"]
"KoljaB/LocalAIVoiceChat" ["l"="41.837,0.843"]
"KoljaB/stream2sentence" ["l"="41.925,0.921"]
"KoljaB/LocalEmotionalAIVoiceChat" ["l"="41.908,0.899"]
"FSoft-AI4Code/HyperAgent" ["l"="41.584,2.088"]
"FSoft-AI4Code/CodeFlow" ["l"="41.547,1.722"]
"FSoft-AI4Code/XMainframe" ["l"="41.562,1.721"]
"bdqnghi/awesome-ai4code" ["l"="41.582,1.823"]
"TransformerOptimus/Awesome-SuperAGI" ["l"="41.083,0.814"]
"TransformerOptimus/AutoNode" ["l"="41.078,0.774"]
"jackboyla/GLiREL" ["l"="41.167,1.077"]
"argilla-io/adept-augmentations" ["l"="52.196,25.598"]
"universal-ner/universal-ner" ["l"="53.98,15.059"]
"davidberenstein1957/spacy-setfit" ["l"="41.158,1.147"]
"cfahlgren1/observers" ["l"="38.241,-0.601"]
"dakenf/stable-diffusion-nodejs" ["l"="40.431,0.893"]
"KoljaB/WhoSpeaks" ["l"="41.925,0.876"]
"matatonic/openedai-speech" ["l"="38.659,1.629"]
"libraryofcelsus/Aetherius_AI_Assistant" ["l"="40.968,-3.563"]
"KoljaB/TurnVoice" ["l"="41.942,0.899"]
"vndee/local-talking-llm" ["l"="41.862,0.821"]
"CambioML/gpuv" ["l"="40.985,1.158"]
"AllAboutAI-YT/talk-to-chatgpt" ["l"="42.01,0.336"]
"AllAboutAI-YT/chatgpt-promp1" ["l"="42.015,0.32"]
"AllAboutAI-YT/rag" ["l"="41.951,0.347"]
"AllAboutAI-YT/voice-to-image-tensorRT" ["l"="42.019,0.31"]
"AllAboutAI-YT/think-before-you-speak" ["l"="41.966,0.326"]
"AllAboutAI-YT/ai-engineer" ["l"="42.029,0.325"]
"AllAboutAI-YT/ai-vision-scraping" ["l"="41.988,0.32"]
"BMS-geodev/vectra-py" ["l"="40.725,1.104"]
"Anush008/fastembed-js" ["l"="-8.797,-4.316"]
"Stevenic/codepilot" ["l"="40.706,1.164"]
"xuwenhao/mactalk-ai-course" ["l"="40.779,0.951"]
"ahmedbesbes/anonymizer" ["l"="40.773,1.006"]
"littlewwwhite/KnowledgeGraph-based-on-Raw-text-A27" ["l"="41.528,0.882"]
"xerrors/Yuxi-Know" ["l"="46.399,-0.687"]
"Xu1Aan/KGExplorer" ["l"="41.592,0.957"]
"maxin-nk/Chat_to_Medical_Machine" ["l"="41.564,0.93"]
"BBBQL2021/NLP_KBQA" ["l"="41.557,0.947"]
"BinNong/llm-graph-builder" ["l"="41.456,0.78"]
"NanGePlus/GraphragTest" ["l"="41.499,0.804"]
"ligenxun/chatToMedicalAtlas" ["l"="41.567,0.968"]
"P1uviophile/simple_RAG_with_LLMs_API" ["l"="41.55,0.93"]
"nasa-petal/bidara-deep-chat" ["l"="40.638,1.004"]
"MoritzLaurer/summer-school-transformers-2023" ["l"="41.346,1.086"]
"MoritzLaurer/zeroshot-classifier" ["l"="41.32,1.039"]
"ChetanXpro/chatgpt-telegram-bot" ["l"="40.781,1.091"]
"ChetanXpro/LaunchKit" ["l"="40.784,1.11"]
"mrdbourke/learn-transformers" ["l"="42.059,0.43"]
"mrdbourke/rag-resources" ["l"="42.074,0.424"]
"tidwall/tg" ["l"="40.189,-0.951"]
"rochus-keller/CspChan" ["l"="40.248,-0.841"]
"flatgeobuf/flatgeobuf" ["l"="39.398,24.052"]
"daveshap/ENGAGE_Model" ["l"="40.659,1.133"]
"AIAnytime/Chat-With-Your-Data-Chatbot" ["l"="42.233,0.359"]
"AIAnytime/Text-Summarizer-Streamlit-App" ["l"="42.22,0.35"]
"pacman100/LLM-Workshop" ["l"="41.483,1.444"]
"sayakpaul/hf-codegen" ["l"="41.492,1.49"]
"AIAnytime/Medical-RAG-using-Bio-Mistral-7B" ["l"="42.336,0.36"]
"ThisIs-Developer/Llama-2-GGML-Medical-Chatbot" ["l"="42.274,0.35"]
"InsightEdge01/LLama2HealthCareChatBot" ["l"="42.281,0.37"]
"AIAnytime/Medical-Help-App-using-GPT-4V" ["l"="42.3,0.366"]
"yagil/tokmon" ["l"="40.199,1.385"]
"daveshap/Mordin_Solus_Mode" ["l"="40.689,1.143"]
"Jaredfromsubway-eth-mev/BOT" ["l"="42.679,-0.509"]
"bshang165/datastructures-and-algorithms-udacity" ["l"="42.647,-0.475"]
"mevbotsethandbsc/mev-bot" ["l"="42.651,-0.454"]
"colindean/optar" ["l"="40.917,-1.551"]
"Nutlope/aiangels" ["l"="41.487,0.425"]
"Nutlope/pmsox-site" ["l"="-2.912,-30.623"]
"Nutlope/devtool-angels" ["l"="-2.836,-30.676"]
"Nutlope/ai-chatbot" ["l"="-2.85,-30.634"]
"IBM/alchemy-logging" ["l"="42.365,0.19"]
"allwefantasy/byzer-llm" ["l"="40.787,0.924"]
"allwefantasy/auto-coder" ["l"="40.832,0.809"]
"allwefantasy/byzer-agent" ["l"="40.766,0.974"]
"allwefantasy/BYZER-RETRIEVAL" ["l"="40.763,0.991"]
"swishjam/tagsafe" ["l"="41.106,1.376"]
"arogozhnikov/eindex" ["l"="41.656,0.706"]
"amadej2/consistent" ["l"="41.713,0.748"]
"BielskiBartosz/Console" ["l"="41.686,0.723"]
"dunikowski22/dunikovski" ["l"="41.7,0.746"]
"JooooJark/Document" ["l"="41.703,0.716"]
"dimbadimass/htaccess" ["l"="41.693,0.736"]
"unit-mesh/unit-gen" ["l"="40.661,0.86"]
"eugeneyan/visualizing-finetunes" ["l"="41.523,1.354"]
"jjallaire/inspect-llm-workshop" ["l"="41.501,1.342"]
"ragntune/code-llama-finetune" ["l"="41.49,1.413"]
"maxdotio/node-qdrant" ["l"="40.77,1.338"]
"CerebriumAI/examples" ["l"="41.572,0.719"]
"pipecat-ai/rtvi-web-demo" ["l"="41.527,0.678"]
"lhl/voicechat2" ["l"="41.69,0.794"]
"tincans-ai/gazelle" ["l"="41.715,0.879"]
"Writeopia/Writeopia" ["l"="42.339,0.549"]
"balajikandavel/book-recommendation-engine" ["l"="42.319,0.544"]
"jhd3197/Cacao" ["l"="42.363,0.597"]
"TomaAytakin/RedPanda" ["l"="42.302,0.557"]
"Canuck-Gamblers/Best-Online-Casino-Canada-2025-Top-5-Real-Money-Sites" ["l"="42.341,0.594"]
"Vorolski/pump-fun-ultimate" ["l"="42.372,0.549"]
"Trylz/RestirFalcor" ["l"="42.358,0.551"]
"openqquantify/OpenQQuantify-Cesium-Digital-Twins-Simulations" ["l"="42.324,0.59"]
"phasehq/node-sdk" ["l"="41.844,1.525"]
"HumeAI/hume-typescript-sdk" ["l"="41.381,0.948"]
"HumeAI/hume-research-publications" ["l"="41.357,0.885"]
"runpod-workers/worker-vllm" ["l"="39.684,1.745"]
"runpod-workers/worker-sglang" ["l"="39.657,1.756"]
"runpod-workers/worker-faster_whisper" ["l"="39.661,1.782"]
"PaulKinlan/idb-vector" ["l"="40.723,1.219"]
"IngestAI/embedditor" ["l"="42.621,-0.444"]
"bshang165/dl-twitch" ["l"="42.647,-0.431"]
"mevbotsEth-BSC/mev-bot" ["l"="42.662,-0.438"]
"ScamHunter99/MEVBOT-SCAMS" ["l"="42.684,-0.458"]
"Josh-web3/MEV" ["l"="42.713,-0.533"]
"AyushUnleashed/chat_gpt_api_for_everyone" ["l"="40.865,1.308"]
"JorisdeJong123/LangChain-Cheatsheet" ["l"="42.168,1.447"]
"definitive-io/code-indexer-loop" ["l"="41.494,0.757"]
"definitive-io/human-eval-sampling-benchmark" ["l"="41.484,0.737"]
"definitive-io/openassistants" ["l"="41.506,0.771"]
"charlesfrye/qart-codes" ["l"="41.56,1.565"]
"modal-labs/libmodal" ["l"="41.581,1.606"]
"IBM/ibm-generative-ai-node-sdk" ["l"="42.458,0.129"]
"IBM/dsce-sample-apps" ["l"="42.431,0.138"]
"daveshap/GAIA_Initiative" ["l"="40.703,1.114"]
"openshift-psap/llm-load-test" ["l"="42.328,0.269"]
"opendatahub-io/ilab-on-ocp" ["l"="42.284,0.264"]
"ERPdotAI/GNN" ["l"="40.902,1.205"]
"AyushExel/trolo" ["l"="40.858,1.216"]
"ProfSynapse/ConstructorCora" ["l"="40.54,0.764"]
"ProfSynapse/Synapse_DB" ["l"="40.535,0.78"]
"ProfSynapse/CourseConstructor" ["l"="40.529,0.77"]
"ProfSynapse/MissNeura" ["l"="40.547,0.774"]
"ProfSynapse/open-interpreter" ["l"="40.546,0.787"]
"generativelabs/exllama-runpod-serverless" ["l"="39.724,1.697"]
"bananaml/potassium" ["l"="40.922,1.04"]
"bananaml/banana-cli" ["l"="40.908,1.087"]
"TransformerOptimus/SuperAGI-Node-Client" ["l"="41.062,0.885"]
"thedaviddias/publish-release-info-action" ["l"="41.928,1.172"]
"thedaviddias/links-base" ["l"="41.911,1.144"]
"HumeAI/empathic-voice-api-js" ["l"="41.394,1.008"]
"huyphan168/LegalChat" ["l"="41.703,2.243"]
"dakenf/onnxruntime-node-gpu" ["l"="40.42,0.926"]
"AllAboutAI-YT/ai-engineer-project1" ["l"="42,0.32"]
"AllAboutAI-YT/claude-chrome-ex" ["l"="41.991,0.309"]
"AllAboutAI-YT/SD-Python-Automation" ["l"="42.04,0.316"]
"AllAboutAI-YT/chatgpt-stream" ["l"="41.993,0.337"]
"yagil/tokmon-beam" ["l"="40.182,1.413"]
"simplerhacking/Evilginx3-Microsoft365-Phishlet" ["l"="41.418,2.386"]
"akshaykalra92/aws-eks-openvpn-project" ["l"="41.402,2.418"]
"OpenAccess-AI-Collective/ggml-webui" ["l"="39.776,1.691"]
"Babelscape/echoes-from-alexandria" ["l"="41.054,1.342"]
"Babelscape/WSL" ["l"="41.075,1.274"]
"IBM/ibm-generative-ai-cli" ["l"="42.491,0.112"]
"jwilber/svelte2jupyter" ["l"="40.98,1.186"]
"di37/chatbot-chatgpt-api" ["l"="42.331,-0.177"]
"di37/question-answering-api-llm" ["l"="42.352,-0.181"]
"di37/LLM-Load-Unload-Ollama" ["l"="42.277,-0.15"]
"speechmatics/ctranslate2_triton_backend" ["l"="41.268,1.143"]
"mixedbread-ai/ofen" ["l"="41.238,1.09"]
"SafeBreach-Labs/MagicDot" ["l"="40.393,-1.118"]
"kleiton0x00/Proxy-DLL-Loads" ["l"="-47.52,-32.468"]
"dobin/avred" ["l"="-47.534,-32.438"]
"tonyke-bot/ore-miner" ["l"="40.438,-0.607"]
"BenjaSOL/ore-cli-gpu" ["l"="40.416,-0.631"]
"Parms-Crypto/CUDA-ORE-DUMP" ["l"="40.441,-0.625"]
"0xsongsu/dailytask" ["l"="-23.673,9.379"]
"jito-labs/mev-bot" ["l"="-17.093,8.032"]
"nubog-cmd/ore-cli-jito" ["l"="40.397,-0.642"]
"abcdsxg/ore-cli" ["l"="40.404,-0.656"]
"regolith-labs/drillx" ["l"="40.413,-0.602"]
"fuzzland/fourmeme-god" ["l"="-22.39,10.375"]
"jito-labs/searcher-examples" ["l"="-17.056,8.067"]
"nishuzumi/collider" ["l"="-23.666,9.509"]
"blockworks-foundation/lite-rpc" ["l"="-18.155,8.378"]
"Kriptikz/ore-cli-gpu" ["l"="40.433,-0.642"]
"Cissoko420/ore-cli-scripts" ["l"="40.438,-0.656"]
"bgstaal/multipleWindow3dScene" ["l"="40.287,-0.241"]
"ShinoKana/multipleWindow3dScene" ["l"="40.226,-0.429"]
"movie-web/movie-web" ["l"="15.944,-10.706"]
"zed-industries/zed" ["l"="-13.589,-7.651"]
"SawyerHood/draw-a-ui" ["l"="40.437,0.152"]
"aidenybai/react-scan" ["l"="-3.796,-30.028"]
"AnswerDotAI/fasthtml" ["l"="42.937,20.668"]
"pydantic/FastUI" ["l"="42.91,20.629"]
"zauberzeug/nicegui" ["l"="42.83,20.717"]
"huggingface/open-r1" ["l"="37.01,-0.565"]
"tursodatabase/libsql" ["l"="-9.196,-5.852"]
"tursodatabase/limbo" ["l"="-9.462,-5.959"]
"benbjohnson/litestream" ["l"="4.715,-8.844"]
"nilsherzig/LLocalSearch" ["l"="40.908,0.333"]
"netease-youdao/EmotiVoice" ["l"="38.48,1.558"]
"tldraw/make-real" ["l"="40.611,0.335"]
"BCG-X-Official/agentkit" ["l"="41.004,0.296"]
"ZuodaoTech/everyone-can-use-english" ["l"="-4.801,17.293"]
"cbh123/narrator" ["l"="40.668,0.391"]
"Vaibhavs10/insanely-fast-whisper" ["l"="40.594,3.192"]
"google-deepmind/graphcast" ["l"="41.793,25.911"]
"apache/incubator-xtable" ["l"="-0.284,14.892"]
"disler/multi-agent-postgres-data-analytics" ["l"="41.316,0.639"]
"DropbaseHQ/dropbase" ["l"="41.354,0.836"]
"Nike-Inc/koheesio" ["l"="-1.765,17.664"]
"superglue-ai/superglue" ["l"="-12.721,-7.376"]
"leapingio/leaping" ["l"="41.442,0.991"]
"arunsupe/semantic-grep" ["l"="3.847,12.833"]
"urin/vscode-web-visual-editor" ["l"="16.592,-10.317"]
"alishobeiri/thread" ["l"="41.226,0.688"]
"Tanuki/tanuki.py" ["l"="3.844,13.02"]
"visprex/visprex" ["l"="41.423,1.043"]
"metaskills/experts" ["l"="41.236,0.659"]
"ask-fini/paramount" ["l"="3.68,12.808"]
"stuzero/pg-mcp-server" ["l"="41.551,0.595"]
"daminikhq/daminik" ["l"="41.415,0.998"]
"TencentQQGYLab/AppAgent" ["l"="40.729,0.325"]
"X-PLUG/MobileAgent" ["l"="50.975,2.938"]
"THUDM/CogVLM" ["l"="47.384,29.926"]
"BAAI-Agents/Cradle" ["l"="36.745,-1.61"]
"cumulo-autumn/StreamDiffusion" ["l"="33.639,30.968"]
"agiresearch/AIOS" ["l"="40.873,0.405"]
"kyutai-labs/moshi" ["l"="38.492,1.776"]
"TEN-framework/ten-framework" ["l"="41.158,0.123"]
"huggingface/speech-to-speech" ["l"="38.528,1.766"]
"livekit/livekit" ["l"="64.585,-14.062"]
"snakers4/silero-vad" ["l"="40.53,3.28"]
"SesameAILabs/csm" ["l"="38.416,1.621"]
"canopyai/Orpheus-TTS" ["l"="38.48,1.739"]
"LlamaFamily/Llama-Chinese" ["l"="38.933,-1.95"]
"BasedHardware/Whomane" ["l"="41.32,0.296"]
"modem-works/terra" ["l"="41.74,0.435"]
"MikeBirdTech/open-interpreter-termux" ["l"="4.849,-40.583"]
"sullyo/fingen" ["l"="41.744,0.393"]
"BasedHardware/omi" ["l"="41.231,0.13"]
"C0deMunk33/bespoke_automata" ["l"="41.535,0.546"]
"OpenInterpreter/aifs" ["l"="41.625,0.332"]
"gitbutlerapp/gitbutler" ["l"="-13.395,-7.508"]
"langchain-ai/langchain-extract" ["l"="41.435,-3.593"]
"BCG-X-Official/facet" ["l"="45.156,26.36"]
"OS-Copilot/OS-Copilot" ["l"="36.792,-1.579"]
"BCG-X-Official/artkit" ["l"="45.056,26.398"]
"BoundaryML/baml" ["l"="41.085,0.472"]
"GoogleCloudPlatform/localllm" ["l"="40.581,-0.463"]
"RayVentura/ShortGPT" ["l"="40.941,-4.001"]
"maybe-finance/maybe" ["l"="15.914,-10.526"]
"apple/ml-mgie" ["l"="47.423,29.727"]
"krishnaik06/Roadmap-To-Learn-Generative-AI-In-2024" ["l"="48.198,24.922"]
"khangich/machine-learning-interview" ["l"="48.025,26.267"]
"supermemoryai/supermemory" ["l"="41.038,0.122"]
"Dhravya/cloudflare-saas-stack" ["l"="-3.478,-30.342"]
"Mail-0/Zero" ["l"="16.335,-10.125"]
"supermemoryai/markdowner" ["l"="41.185,0.289"]
"RVC-Boss/GPT-SoVITS" ["l"="38.373,1.405"]
"NanmiCoder/MediaCrawler" ["l"="45.738,-1.429"]
"hpcaitech/Open-Sora" ["l"="33.39,32.96"]
"mshumer/ai-journalist" ["l"="41.136,0.502"]
"vercel-labs/ai-sdk-preview-rsc-genui" ["l"="41.453,0.665"]
"vercel-labs/ai-sdk-preview-rag" ["l"="41.466,0.654"]
"vercel-labs/ai-sdk-preview-roundtrips" ["l"="41.465,0.678"]
"vercel-labs/ai-sdk-preview-multi-steps" ["l"="41.47,0.666"]
"vercel-labs/ai-sdk-preview-attachments" ["l"="41.482,0.662"]
"vercel-labs/natural-language-postgres" ["l"="41.497,0.683"]
"d-ivashchuk/cascade" ["l"="-3.405,-31.356"]
"vercel-labs/ai-sdk-preview-pdf-support" ["l"="41.48,0.675"]
"vercel-labs/semantic-image-search" ["l"="41.472,0.688"]
"vercel-labs/ai-sdk-reasoning-starter" ["l"="41.494,0.654"]
"missuo/FreeGPT35" ["l"="45.506,0.61"]
"LLM-Red-Team/kimi-free-api" ["l"="45.541,0.647"]
"PawanOsman/ChatGPT" ["l"="45.521,0.741"]
"deanxv/coze-discord-proxy" ["l"="45.5,0.651"]
"leptonai/search_with_lepton" ["l"="40.798,0.152"]
"jina-ai/node-DeepResearch" ["l"="41.224,0.021"]
"virattt/ai-hedge-fund" ["l"="40.862,-0.245"]
"MerlinKodo/clash-rev" ["l"="-48.893,13.359"]
"disler/poc-realtime-ai-assistant" ["l"="41.448,0.557"]
"Anil-matcha/Awesome-GPT-Store" ["l"="44.135,0.651"]
"disler/marimo-prompt-library" ["l"="41.493,0.62"]
"luosiallen/latent-consistency-model" ["l"="33.528,31.122"]
"disler/personal-ai-starter-pack" ["l"="41.507,0.629"]
"disler/benchy" ["l"="41.476,0.637"]
"atomicals/atomicals-js" ["l"="-23.696,9.495"]
"disler/single-file-agents" ["l"="41.521,0.621"]
"disler/llm-prompt-testing-quick-start" ["l"="41.506,0.656"]
"loro-dev/loro" ["l"="-6.472,-28.352"]
"n8n-io/self-hosted-ai-starter-kit" ["l"="41.124,-0.014"]
"coleam00/ai-agents-masterclass" ["l"="41.408,0.106"]
"deepseek-ai/DeepSeek-LLM" ["l"="39.084,-0.862"]
"deepseek-ai/DeepSeek-Coder-V2" ["l"="39.05,-0.879"]
"deepseek-ai/awesome-deepseek-integration" ["l"="40.518,-0.323"]
"deepseek-ai/DeepSeek-V3" ["l"="40.091,-0.187"]
"deepseek-ai/Janus" ["l"="40.156,-0.309"]
"deepseek-ai/DeepSeek-VL" ["l"="39.042,-0.82"]
"micr0-dev/micr0fetch" ["l"="40.172,1.313"]
"apple/ml-ferret" ["l"="47.375,29.761"]
"apple/ml-stable-diffusion" ["l"="27.398,-20.985"]
"AbanteAI/rawdog" ["l"="41.11,0.456"]
"databricks/lilac" ["l"="38.546,-0.46"]
"theirstory/gliner-spacy" ["l"="41.148,1.093"]
"stanfordnlp/pyreft" ["l"="37.765,-6.896"]
"FullStackRetrieval-com/RetrievalTutorials" ["l"="41.157,0.68"]
"langchain-ai/rag-from-scratch" ["l"="41.276,0.54"]
"parthsarthi03/raptor" ["l"="41.174,0.695"]
"illuin-tech/colpali" ["l"="41.303,0.709"]
"brandonstarxel/chunking_evaluation" ["l"="41.372,0.897"]
"NovaSearch-Team/RAG-Retrieval" ["l"="41.195,0.77"]
"gkamradt/ChunkViz" ["l"="41.818,35.361"]
"yobix-ai/extractous" ["l"="41.336,0.539"]
"deepdoctection/deepdoctection" ["l"="46.288,6.092"]
"microsoft/table-transformer" ["l"="46.34,6.072"]
"pymupdf/RAG" ["l"="41.232,0.634"]
"lm-sys/RouteLLM" ["l"="41.042,0.536"]
"Knowledgator/GLiClass" ["l"="41.239,1.118"]
"PrithivirajDamodaran/Route0x" ["l"="41.201,1.184"]
"urchade/GraphER" ["l"="40.994,1.305"]
"henrikalbihn/gliner-as-a-service" ["l"="41.192,1.135"]
"hymie122/RAG-Survey" ["l"="41.211,0.75"]
"sunnynexus/Search-o1" ["l"="37.293,-0.55"]
"Agent-RL/ReCall" ["l"="37.258,-0.54"]
"gomate-community/TrustRAG" ["l"="-54.155,-12.521"]
"PeterGriffinJin/Search-R1" ["l"="37.232,-0.537"]
"RUC-NLPIR/LLM4IR-Survey" ["l"="54.447,25.654"]
"elder-plinius/L1B3RT4S" ["l"="41.082,0.07"]
"elder-plinius/CL4R1T4S" ["l"="41.314,-0.076"]
"0xeb/TheBigPromptLibrary" ["l"="44.132,0.556"]
"CyberAlbSecOP/Awesome_GPT_Super_Prompting" ["l"="44.179,0.613"]
"dzhng/deep-research" ["l"="41.089,-0.057"]
"x1xhlol/system-prompts-and-models-of-ai-tools" ["l"="40.967,-0.3"]
"microsoft/OmniParser" ["l"="40.869,-0.166"]
"tianyaxiang/neurapress" ["l"="45.597,-0.53"]
"OpenAISpace/ai-trend-publish" ["l"="45.621,-0.528"]
"nanbingxyz/5ire" ["l"="41.191,3.176"]
"FellouAI/eko" ["l"="51.056,2.896"]
"karminski/one-small-step" ["l"="45.592,-0.428"]
"langmanus/langmanus" ["l"="41.276,-0.089"]
"cyfyifanchen/one-person-company" ["l"="45.628,-0.506"]
"leaperone/MultiPost-Extension" ["l"="45.619,-0.547"]
"bytedance/flowgram.ai" ["l"="41.32,-0.247"]
"ErlichLiu/DeepClaude" ["l"="41.096,-0.268"]
"bytedance/deer-flow" ["l"="41.32,-0.101"]
"chatmcp/mcp-server-chatsum" ["l"="45.516,-0.527"]
"jamez-bondos/awesome-gpt4o-images" ["l"="41.129,-0.317"]
"simonw/llm-cmd" ["l"="41.812,0.585"]
"simonw/llm-jq" ["l"="41.927,0.632"]
"taketwo/llm-ollama" ["l"="41.968,0.652"]
"simonw/llm-claude-3" ["l"="41.725,0.557"]
"krillinai/KrillinAI" ["l"="41.065,-0.312"]
"PeterH0323/Streamer-Sales" ["l"="32.324,30.315"]
"modelscope/FunClip" ["l"="45.705,-1.798"]
"GuijiAI/HeyGem.ai" ["l"="32.329,30.267"]
"dreammis/social-auto-upload" ["l"="45.741,-1.617"]
"modelscope/agentscope" ["l"="40.664,0.146"]
"EmbraceAGI/Awesome-AI-GPTs" ["l"="44.148,0.671"]
"tldraw/make-real-starter" ["l"="48.474,30.008"]
"tldraw/draw-fast" ["l"="-5.084,-30.517"]
"browser-use/web-ui" ["l"="41.072,-0.113"]
"BragAI/bRAG-langchain" ["l"="41.35,0.394"]
"mrdbourke/simple-local-rag" ["l"="41.832,0.495"]
"phoboslab/high_impact" ["l"="39.263,-0.012"]
"warp-id/solana-trading-bot" ["l"="-17.127,8.098"]
"michaelhly/solana-py" ["l"="-18.24,8.648"]
"hummingbot/hummingbot" ["l"="-10.574,11.559"]
"kevinhermawan/OllamaKit" ["l"="41.775,-0.008"]
"teddylee777/langchain-kr" ["l"="-5.241,-23.278"]
"NVIDIA/ChatRTX" ["l"="41.239,0.292"]
"NVIDIA/Stable-Diffusion-WebUI-TensorRT" ["l"="32.086,31.658"]
"NVIDIA/trt-llm-as-openai-windows" ["l"="41.323,0.268"]
"Stability-AI/StableCascade" ["l"="33.544,30.971"]
"pinokiocomputer/pinokio" ["l"="32.372,31.678"]
"triton-inference-server/tensorrtllm_backend" ["l"="39.057,-0.665"]
"NVIDIA/NeMo" ["l"="38.896,-0.862"]
"NVIDIAGameWorks/rtx-remix" ["l"="-12.717,-1.703"]
"DIYgod/RSSHub" ["l"="-48.369,12.794"]
"clash-verge-rev/clash-verge-rev" ["l"="-48.677,13.145"]
"chen08209/FlClash" ["l"="-48.923,13.195"]
"AlistGo/alist" ["l"="-48.572,12.993"]
"mihomo-party-org/mihomo-party" ["l"="-48.905,13.156"]
"SagerNet/sing-box" ["l"="-48.703,13.32"]
"usememos/memos" ["l"="12.56,-9.357"]
"strnad/CrewAI-Studio" ["l"="40.083,-1.985"]
"shaunthecomputerscientist/EDA-GPT" ["l"="41.54,0.563"]
"langchain-ai/agent-chat-ui" ["l"="41.5,0.362"]
"joshpocock/Stride-AI-Agents" ["l"="41.574,0.135"]
"wassim249/fastapi-langgraph-agent-production-ready-template" ["l"="41.465,0.386"]
"ishan0102/vimGPT" ["l"="40.932,0.648"]
"ddupont808/GPT-4V-Act" ["l"="36.813,-1.531"]
"Jiayi-Pan/GPT-V-on-Web" ["l"="39.741,-1.895"]
"roboflow/awesome-openai-vision-api-experiments" ["l"="48.644,29.895"]
"nat/natbot" ["l"="41.488,-3.908"]
"iyaja/llama-fs" ["l"="41.015,0.354"]
"QiuYannnn/Local-File-Organizer" ["l"="41.232,0.333"]
"THU-MIG/yolov10" ["l"="48.776,29.972"]
"ozgrozer/ai-renamer" ["l"="41.192,0.434"]
"microsoft/Mastering-GitHub-Copilot-for-Paired-Programming" ["l"="40.532,0.077"]
"microsoft/Security-101" ["l"="-44.07,-33.513"]
"microsoft/xr-development-for-beginners" ["l"="-21.029,9.576"]
"chinesehuazhou/python-whydo" ["l"="-44,11.996"]
"grapeot/devin.cursorrules" ["l"="41.2,-0.152"]
"yandex/perforator" ["l"="-44.666,26.647"]
"NVIDIA/workbench-example-sdxl-customization" ["l"="41.686,-0.106"]
"NVIDIA/workbench-example-mistral-finetune" ["l"="41.698,-0.098"]
"NVIDIA/workbench-example-llama2-finetune" ["l"="41.68,-0.091"]
"tahmidmir/HyrbridRAG" ["l"="41.689,-0.078"]
"NVIDIA-AI-Blueprints/digital-human" ["l"="41.724,-0.095"]
"raphaelmansuy/code2prompt" ["l"="41.397,0.211"]
"mishushakov/llm-scraper" ["l"="41.099,0.113"]
"OmniSVG/OmniSVG" ["l"="33.084,33.131"]
"ahmedkhaleel2004/gitdiagram" ["l"="41.066,-0.188"]
"Cryakl/Ultimate-RAT-Collection" ["l"="-47.521,-32.568"]
"wonderwhy-er/DesktopCommanderMCP" ["l"="41.354,-0.094"]
"visioncortex/vtracer" ["l"="-35.483,20.462"]
"BasedHardware/OpenGlass" ["l"="41.086,0.269"]
"baron-chain/baron-wallet" ["l"="-15.603,8.925"]
"microsoft/qlib" ["l"="-8.82,12.644"]
"AI4Finance-Foundation/FinRobot" ["l"="-8.962,12.588"]
"langchain-ai/open_deep_research" ["l"="41.297,0.143"]
"sammcj/gollama" ["l"="41.734,0.143"]
"TilmanGriesel/chipper" ["l"="41.686,0.271"]
"EndoTheDev/Awesome-Ollama" ["l"="41.728,0.016"]
"LargeWorldModel/LWM" ["l"="47.44,29.845"]
"373675032/verio-house" ["l"="41.827,1.253"]
"373675032/academic-report" ["l"="41.833,1.233"]
"373675032/kaka-shop" ["l"="41.853,1.274"]
"373675032/smart-medicine" ["l"="41.801,1.198"]
"lizhe2004/Awesome-LLM-RAG-Application" ["l"="41.139,0.71"]
"jxzhangjhu/Awesome-LLM-RAG" ["l"="41.231,0.765"]
"WangRongsheng/awesome-LLM-resources" ["l"="38.668,-1.97"]
"DSXiangLi/DecryptPrompt" ["l"="38.952,-2.114"]
"jackaduma/awesome_LLMs_interview_notes" ["l"="38.837,-2.106"]
"360AILAB-NLP/360LayoutAnalysis" ["l"="46.432,5.916"]
"shibing624/MedicalGPT" ["l"="38.984,-2.086"]
"BaranziniLab/KG_RAG" ["l"="53.787,15.219"]
"yuanzhoulvpi2017/zero_nlp" ["l"="39.013,-2.112"]
"OpenAutoCoder/Agentless" ["l"="36.351,-0.147"]
"SWE-bench/SWE-bench" ["l"="36.305,-0.158"]
"aorwall/moatless-tools" ["l"="36.393,-0.134"]
"xlang-ai/OSWorld" ["l"="36.787,-1.538"]
"openai/openai-responses-starter-app" ["l"="42.793,-1.085"]
"openai/openai-realtime-agents" ["l"="41.198,0.13"]
"OpenAssistantGPT/OpenAssistantGPT" ["l"="40.878,-3.352"]
"georgia-tech-db/evadb" ["l"="41.314,-4.007"]
"VRSEN/agency-swarm-lab" ["l"="40.002,-2.045"]
"misbahsy/RAGTune" ["l"="40.991,0.88"]
"Azure/GPT-RAG" ["l"="-44.383,7.229"]
"msoedov/langcorn" ["l"="41.317,-3.665"]
"merveenoyan/smol-vision" ["l"="41.317,0.69"]
"roboflow/maestro" ["l"="48.652,29.93"]
"huggingface/smollm" ["l"="38.717,-0.386"]
"tonywu71/colpali-cookbooks" ["l"="41.389,0.686"]
"huggingface/huggingface-llama-recipes" ["l"="38.546,-0.54"]
"google-research/big_vision" ["l"="48.957,30.256"]
"merveenoyan/awesome-osml-for-devs" ["l"="41.394,0.865"]
"adithya-s-k/VARAG" ["l"="41.412,0.717"]
"SkalskiP/vlms-zero-to-hero" ["l"="-14.367,-23.124"]
"birobirobiro/awesome-shadcn-ui" ["l"="-3.521,-30.172"]
"jakobhoeg/shadcn-chat" ["l"="-3.242,-31.318"]
"sadmann7/shadcn-table" ["l"="-3.17,-31.371"]
"upstash/degree-guru" ["l"="41.581,0.628"]
"upstash/rag-chat" ["l"="41.621,0.561"]
"get-salt-AI/SaltAI" ["l"="42,0.751"]
"get-salt-AI/SaltAI_Documentation_Tools" ["l"="42.037,0.767"]
"ExponentialML/ComfyUI_ModelScopeT2V" ["l"="42.044,0.783"]
"crewAIInc/crewAI-tools" ["l"="40.067,-2.022"]
"majacinka/crewai-experiments" ["l"="40.063,-2.062"]
"Eng-Elias/CrewAI-Visualizer" ["l"="40.086,-2.029"]
"searxng/searxng" ["l"="-53.489,11.091"]
"armorwallet/armor-crypto-mcp" ["l"="42.24,0.488"]
"Nayjest/ai-microcore" ["l"="42.216,0.537"]
"melihsoft/adamant" ["l"="42.376,0.516"]
"MeoMunDep/Mavryk-Wallet" ["l"="42.308,0.407"]
"The-Pocket-World/Pocket-Flow-Framework" ["l"="42.26,0.488"]
"googleapis/js-genai" ["l"="41.263,0.284"]
"google-gemini/example-chat-app" ["l"="41.285,0.228"]
"googleapis/nodejs-vertexai" ["l"="41.245,0.32"]
"langchain-ai/langgraph-engineer" ["l"="41.575,0.478"]
"technovangelist/videoprojects" ["l"="41.596,0.354"]
"brainqub3/jar3d_meta_expert" ["l"="41.517,0.517"]
"coleam00/ottomator-agents" ["l"="41.398,0.04"]
"maudoin/ollama-voice" ["l"="41.842,0.748"]
"samwit/llm-tutorials" ["l"="41.245,-3.488"]
"TrelisResearch/one-click-llms" ["l"="41.839,0.393"]
"technovangelist/ollamamodelupdater" ["l"="41.711,0.244"]
"jgravelle/pocketgroq" ["l"="41.574,0.447"]
"AllAboutAI-YT/easy-local-rag" ["l"="41.782,0.391"]
"tonykipkemboi/ollama_pdf_rag" ["l"="41.856,0.496"]
"ThomasJay/RAG" ["l"="41.847,0.469"]
"curiousily/ragbase" ["l"="41.887,0.53"]
"curiousily/AI-Bootcamp" ["l"="41.808,0.522"]
"pixegami/langchain-rag-tutorial" ["l"="41.806,0.468"]
"SonicWarrior1/pdfchat" ["l"="41.948,0.549"]
"amithkoujalgi/ollama-pdf-bot" ["l"="41.979,0.564"]
"AllAboutAI-YT/ai-terminal" ["l"="41.925,0.335"]
"AllAboutAI-YT/cursor_prompts" ["l"="41.897,0.299"]
"AllAboutAI-YT/chatTTS" ["l"="41.932,0.352"]
"AllAboutAI-YT/hackernews-llm-search" ["l"="41.937,0.337"]
"svpino/livekit-assistant" ["l"="42.881,-1.315"]
"tylerprogramming/ai" ["l"="39.974,-2.041"]
"Exitium-DEV/HD2-Cheat-Launcher" ["l"="40.494,-0.58"]
"emoisback/Helldivers-2-Hack-PoC" ["l"="40.504,-0.57"]
"rocketseat-education/nlw-expert-react" ["l"="40.455,-0.72"]
"McGill-NLP/webllama" ["l"="41.048,0.486"]
"PromtEngineer/Verbi" ["l"="41.326,0.513"]
"EpistasisLab/KRAGEN" ["l"="42.912,1.706"]
"severian42/GraphRAG-Local-UI" ["l"="41.302,0.561"]
"Azure-Samples/graphrag-accelerator" ["l"="-44.405,7.319"]
"neo4j/neo4j-graphrag-python" ["l"="41.408,0.696"]
"rahulnyk/knowledge_graph" ["l"="53.76,15.152"]
"AuvaLab/itext2kg" ["l"="53.682,15.134"]
"TheAiSingularity/graphrag-local-ollama" ["l"="41.358,0.673"]
"instantdb/instant" ["l"="16.142,-10.423"]
"outerbase/studio" ["l"="16.277,-10.204"]
"stack-auth/stack-auth" ["l"="16.206,-10.211"]
"stackblitz/bolt.new" ["l"="40.985,0.06"]
"hatchet-dev/hatchet" ["l"="16.196,-10.328"]
"Doriandarko/omni-engineer" ["l"="41.285,0.386"]
"tinyfish-io/agentql" ["l"="41.516,0.32"]
"sentient-engineering/agent-q" ["l"="41.436,0.376"]
"infrahouse/infrahouse-toolkit" ["l"="41.652,0.309"]
"techwithtim/AI-Web-Scraper" ["l"="60.054,34.589"]
"Clevrr-AI/Clevrr-Computer" ["l"="41.618,0.366"]
"supercorp-ai/superinterface" ["l"="41.31,3.242"]
"langchain-ai/agent-inbox" ["l"="41.509,0.345"]
"Danielskry/Awesome-RAG" ["l"="41.304,0.503"]
"zhengxuJosh/Awesome-RAG-Vision" ["l"="46.49,24.806"]
"coree/awesome-rag" ["l"="41.262,0.731"]
"frutik/Awesome-RAG" ["l"="41.286,0.768"]
"wangwei1237/LLM_in_Action" ["l"="38.482,-1.981"]
"plurai-ai/intellagent" ["l"="41.394,0.394"]
"octotools/octotools" ["l"="41.34,0.345"]
"win4r/AISuperDomain" ["l"="45.588,0.498"]
"CrazyBoyM/llama3-Chinese-chat" ["l"="38.889,-1.957"]
"openai/openai-agents-python" ["l"="41.08,-0.001"]
"huggingface/smolagents" ["l"="40.902,0.152"]
"jonfairbanks/local-rag" ["l"="42.911,1.678"]
"svpino/youtube-rag" ["l"="41.971,0.532"]
"mrdbourke/learn-huggingface" ["l"="41.914,0.529"]
"pixegami/deploy-rag-to-aws" ["l"="41.847,0.56"]
"Farzad-R/Advanced-QA-and-RAG-Series" ["l"="41.792,0.605"]
"amscotti/local-LLM-with-RAG" ["l"="41.942,0.7"]
"yokingma/search_with_ai" ["l"="-44.373,6.538"]
"Omniplex-ai/omniplex" ["l"="41.202,0.383"]
"memfreeme/memfree" ["l"="41.279,0.298"]
"MLSysOps/MLE-agent" ["l"="41.299,0.38"]
"mikekelly/AgentK" ["l"="41.334,0.422"]
"openai/mle-bench" ["l"="36.965,-1.378"]
"WecoAI/aideml" ["l"="37.378,-0.657"]
"ShengranHu/ADAS" ["l"="41.208,0.549"]
"open-thought/system-2-research" ["l"="37.183,-0.401"]
"sentient-engineering/sentient" ["l"="41.449,0.41"]
"supermemoryai/opensearch-ai" ["l"="41.26,0.336"]
"InternLM/lagent" ["l"="38.82,-1.827"]
"ShoggothAI/motleycrew" ["l"="41.493,0.526"]
"starpig1129/DATAGEN" ["l"="41.436,0.449"]
"wasiahmad/Awesome-LLM-Synthetic-Data" ["l"="37.204,-0.365"]
"mcp-use/mcp-use" ["l"="41.354,0.146"]
"plexe-ai/plexe" ["l"="41.409,0.173"]
"Bklieger/infinite-bookshelf" ["l"="41.31,0.465"]
"fatwang2/search2ai" ["l"="45.535,0.463"]
"fatwang2/search4all" ["l"="45.514,0.474"]
"siddrrsh/ambientGPT" ["l"="27.635,-20.94"]
"thinkany-ai/rag-search" ["l"="45.375,-0.823"]
"towardsai/ragbook-notebooks" ["l"="41.384,0.629"]
"towardsai/ai-tutor-rag-system" ["l"="41.45,0.707"]
"multinear-demo/demo-bank-support-lc-py" ["l"="41.527,0.448"]
"bhav09/Generative-AI-Resources" ["l"="41.344,0.585"]
"Galaxies-dev/chatgpt-clone-react-native" ["l"="41.879,0"]
"ansh/deeperseeker-app" ["l"="41.85,0.014"]
"shahriarsajeeb/Artifonia" ["l"="41.949,-0.031"]
"nanobrowser/nanobrowser" ["l"="41.209,-0.075"]
"UdaraJay/Pile" ["l"="41.767,0.179"]
"UdaraJay/Stats" ["l"="41.854,0.16"]
"mikelikesdesign/SwiftUI-experiments" ["l"="41.778,-28.053"]
"farzaa/freewrite" ["l"="41.744,0.07"]
"campsite/campsite" ["l"="-3.542,-30.251"]
"raunofreiberg/interfaces" ["l"="-3.672,-29.978"]
"mainframecomputer/fullmoon-ios" ["l"="27.579,-21.17"]
"raphaelsalaja/sylph" ["l"="-2.926,-31.236"]
"midday-ai/v1" ["l"="-3.539,-30.287"]
"NarimanN2/ollama-playground" ["l"="41.701,0.466"]
"trancethehuman/ai-workshop-code" ["l"="41.612,0.505"]
"ronidas39/LLMtutorial" ["l"="41.91,0.561"]
"sunnysavita10/Generative-AI-Indepth-Basic-to-Advance" ["l"="47.798,25.101"]
"ayush714/customer-satisfaction-mlops" ["l"="48.172,25.038"]
"farouqaldori/aiformat" ["l"="41.632,0.173"]
"quantalogic/quantalogic" ["l"="41.643,0.248"]
"quantalogic/qllm" ["l"="41.562,0.23"]
"mckaywrigley/buildware-ai" ["l"="41.466,0.408"]
"guocaoyi/create-chrome-ext" ["l"="9.097,-43.448"]
"elizaOS/twitter-scraper-finetune" ["l"="-16.133,7.614"]
"VictorTaelin/AI-scripts" ["l"="-22.037,-20.561"]
"elizaOS/agent-twitter-client" ["l"="41.372,0.112"]
"murrlincoln/Based-Agent" ["l"="-20.438,9.889"]
"chiphuyen/aie-book" ["l"="41.079,0.441"]
"neural-maze/agentic-patterns-course" ["l"="41.364,0.581"]
"Lightning-AI/LitServe" ["l"="41.093,0.577"]
"OpenBMB/MiniCPM-o" ["l"="47.272,29.853"]
"metavoiceio/metavoice-src" ["l"="38.601,1.733"]
"yoheinakajima/prettygraph" ["l"="45.494,0.264"]
"yoheinakajima/instagraph" ["l"="41.087,-4.037"]
"yoheinakajima/babyagi-2o" ["l"="41.446,0.512"]
"huggingface/cookbook" ["l"="41.175,0.624"]
"huggingface/alignment-handbook" ["l"="38.666,-0.614"]
"huggingface/computer-vision-course" ["l"="38.476,-0.834"]
"huggingface/evaluation-guidebook" ["l"="41.144,0.656"]
"santinic/audiblez" ["l"="41.249,-0.268"]
"karakeep-app/karakeep" ["l"="12.493,-8.927"]
"poloclub/unitable" ["l"="46.424,6.003"]
"AlibabaResearch/AdvancedLiterateMachinery" ["l"="46.369,6.029"]
"DocumindHQ/documind" ["l"="16.466,-10.38"]
"louisfb01/start-machine-learning" ["l"="47.921,26.331"]
"wikit-ai/awesome-llm-courses" ["l"="41.344,0.931"]
"RamiKrispin/lang2sql" ["l"="40.988,35.068"]
"dswh/ai-engineer-roadmap" ["l"="48.084,24.932"]
"zjunlp/KnowLM" ["l"="53.887,15.144"]
"yuntianhe2014/Easy-RAG" ["l"="41.402,0.75"]
"echonoshy/cgft-llm" ["l"="38.752,-2.086"]
"IDEA-FinAI/ToG" ["l"="53.832,15.245"]
"zjunlp/DeepKE" ["l"="52.937,3.136"]
"gregsadetsky/sagittarius" ["l"="4.639,-40.544"]
"matiasmolinas/evolving-agents" ["l"="41.442,0.96"]
"Planetary-Computers/autotab-starter" ["l"="41.041,0.743"]
"mayt/BrowserGPT" ["l"="41.569,-4.015"]
"widgetti/wanderlust" ["l"="41.503,1.052"]
"langgptai/awesome-claude-prompts" ["l"="44.09,0.61"]
"souzatharsis/podcastfy" ["l"="41.283,0.247"]
"NirDiamant/Prompt_Engineering" ["l"="41.156,0.305"]
"ageerle/ruoyi-ai" ["l"="41.051,-0.482"]
"ageerle/ruoyi-admin" ["l"="41.119,-0.609"]
"ageerle/ruoyi-web" ["l"="41.097,-0.609"]
"alibaba/spring-ai-alibaba" ["l"="45.898,2.311"]
"ageerle/ruoyi-uniapp" ["l"="41.105,-0.588"]
"linshenkx/prompt-optimizer" ["l"="41.025,-0.342"]
"Grt1228/chatgpt-java" ["l"="45.711,2.132"]
"yangjian102621/geekai" ["l"="45.574,2.06"]
"Dooy/chatgpt-web-midjourney-proxy" ["l"="45.542,0.698"]
"aingdesk/AingDesk" ["l"="45.713,-0.511"]
"hncboy/ai-beehive" ["l"="45.674,2.093"]
"Lightning-AI/lightning-thunder" ["l"="38.865,-0.336"]
"Lightning-AI/litData" ["l"="38.723,-0.297"]
"pytorch/torchchat" ["l"="38.967,-0.224"]
"tadata-org/fastapi_mcp" ["l"="41.259,0.079"]
"imanoop7/Ollama-OCR" ["l"="41.431,0.247"]
"echohive42/AI-reads-books-page-by-page" ["l"="41.425,0.189"]
"iamarunbrahma/vision-parse" ["l"="32.512,30.359"]
"tjmlabs/ColiVara" ["l"="41.443,0.391"]
"NVIDIA/nv-ingest" ["l"="41.272,0.203"]
"nomnivore/ollama.nvim" ["l"="-12.95,-9.866"]
"tgraupmann/WinForm_Ollama_Copilot" ["l"="41.761,0.089"]
"Dataherald/dataherald" ["l"="37.556,-1.4"]
"w4n9H/autocoder-nano" ["l"="40.811,0.886"]
"byzer-org/byzer-lang" ["l"="-2.478,14.945"]
"allwefantasy/william-toolbox" ["l"="40.81,0.858"]
"bin123apple/AutoCoder" ["l"="41.141,0.559"]
"unit-mesh/unit-minions" ["l"="39.186,-2.12"]
"allwefantasy/auto-coder.web" ["l"="40.817,0.869"]
"microsoft/PIKE-RAG" ["l"="41.229,0.381"]
"AgentEra/Agently-Daily-News-Collector" ["l"="45.445,0.313"]
"DataScienceUIBK/Rankify" ["l"="40.608,1.035"]
"leptonai/leptonai" ["l"="38.995,-0.608"]
"antirez/smallchat" ["l"="-17.974,-28.035"]
"smartnode/telebot" ["l"="-44.74,26.78"]
"PabloMK7/citra" ["l"="-13.84,1.156"]
"dvlab-research/MGM" ["l"="47.407,29.986"]
"OpenCodeInterpreter/OpenCodeInterpreter" ["l"="40.947,0.376"]
"apple/corenet" ["l"="39.202,-0.546"]
"bigcode-project/starcoder2" ["l"="36.219,-0.19"]
"codefuse-ai/Awesome-Code-LLM" ["l"="36.246,-0.205"]
"SapienzaNLP/maverick-coref" ["l"="41.075,1.236"]
"Babelscape/rebel" ["l"="55.541,26.655"]
"SapienzaNLP/extend" ["l"="52.172,25.713"]
"amazon-science/ReFinED" ["l"="-0.427,-42.187"]
"DerwenAI/strwythura" ["l"="41.219,1.094"]
"DeepGraphLearning/ULTRA" ["l"="53.74,15.311"]
"ai-ng/swift" ["l"="41.473,0.834"]
"deepgram-starters/nextjs-live-transcription" ["l"="42.986,-1.258"]
"TransformerOptimus/SuperCoder" ["l"="41.129,0.585"]
"zjukg/KG-LLM-Papers" ["l"="53.822,15.2"]
"Paitesanshi/LLM-Agent-Survey" ["l"="36.705,-2.301"]
"HillZhang1999/llm-hallucination-survey" ["l"="37.656,-6.917"]
"mistralai/mistral-finetune" ["l"="38.588,-0.615"]
"mistralai/client-python" ["l"="38.418,-0.644"]
"mistralai/mistral-common" ["l"="38.515,-0.566"]
"DEEP-PolyU/Awesome-GraphRAG" ["l"="50.879,2.972"]
"jbarrasa/goingmeta" ["l"="53.673,15.055"]
"Airmomo/graphrag-practice-chinese" ["l"="41.528,0.841"]
"a-s-g93/neo4j-runway" ["l"="53.679,15.108"]
"neo4j-contrib/mcp-neo4j" ["l"="41.388,3.137"]
"ksachdeva/langchain-graphrag" ["l"="41.472,0.747"]
"whyhow-ai/knowledge-graph-studio" ["l"="41.367,0.522"]
"noworneverev/graphrag-visualizer" ["l"="41.411,0.676"]
"Coding-Crashkurse/GraphRAG-with-Llama-3.1" ["l"="41.55,0.831"]
"deep-diver/hf-daily-paper-newsletter" ["l"="41.93,0.377"]
"deep-diver/auto-paper-analysis" ["l"="41.995,0.396"]
"Zjh-819/LLMDataHub" ["l"="38.972,-2.263"]
"lmmlzn/Awesome-LLMs-Datasets" ["l"="38.956,-2.219"]
"abi/secret-llama" ["l"="40.953,0.41"]
"alexpinel/Dot" ["l"="41.156,0.5"]
"tjmlabs/AgentRun" ["l"="41.423,0.756"]
"substratusai/sandboxai" ["l"="41.469,0.858"]
"AnswerDotAI/cosette" ["l"="41.575,1.08"]
"AnswerDotAI/fastlite" ["l"="41.653,1.036"]
"AnswerDotAI/toolslm" ["l"="41.615,1.055"]
"AnswerDotAI/fastsql" ["l"="41.621,1.069"]
"AnswerDotAI/web2md" ["l"="41.591,1.1"]
"lim-hyo-jeong/Prompt-Enhancer" ["l"="40.932,0.843"]
"TencentARC/LLaMA-Pro" ["l"="38.463,-0.328"]
"lypsoty112/Prompt-builder" ["l"="40.937,0.826"]
"sarthakrastogi/quality-prompts" ["l"="41.276,0.717"]
"hkust-nlp/deita" ["l"="37.35,-0.187"]
"huggingface/cosmopedia" ["l"="38.573,-0.492"]
"GPT-Fathom/GPT-Fathom" ["l"="38.611,-2.333"]
"openai/simple-evals" ["l"="37.235,-0.367"]
"baaivision/JudgeLM" ["l"="63.402,11.98"]
"containers/podman-desktop-extension-ai-lab" ["l"="42.224,0.265"]
"containers/ai-lab-recipes" ["l"="42.185,0.264"]
"cdump/evmole" ["l"="42.463,0.581"]
"earos-ai/aw-client" ["l"="42.494,0.62"]
"Slick-ux/Telegram-VPN-Bot-3X-UI" ["l"="42.509,0.57"]
"lee-sihun/djmax-keyviewer" ["l"="42.488,0.561"]
"Profichefsorn77/telegramdm-bot" ["l"="42.426,0.55"]
"Grimmy01/Nodepay-Bot" ["l"="42.514,0.604"]
"kingkej/ExtraLottie" ["l"="42.487,0.578"]
"hmpl-language/hmpl" ["l"="42.446,0.573"]
"scoundrella76/comit" ["l"="42.502,0.588"]
"globalonex/Matrix" ["l"="42.471,0.618"]
"IreneBarnard/crypto-playground" ["l"="42.472,0.601"]
"Burka111/Burka111" ["l"="42.457,0.607"]
"Dze237/Gospecia-VPN-Website" ["l"="42.487,0.597"]
"FreeterApp/Freeter" ["l"="42.009,0.483"]
"Nagi-ovo/CRAG-Ollama-Chat" ["l"="41.853,0.051"]
"reid41/QA-Pilot" ["l"="42.176,-0.023"]
"Abhi5h3k/PrivateDocBot" ["l"="42.606,-2.169"]
"kaifcoder/gemini_multipdf_chat" ["l"="42.146,0.014"]
"apache/openwhisk-wskdeploy" ["l"="43.035,0.075"]
"IBM-Cloud/openwhisk-workshops" ["l"="43.022,0.055"]
"Pandora-Labs-Org/erc404-legacy" ["l"="-46.866,-32.059"]
"magicbear/palworld-server-toolkit" ["l"="56.138,-7.474"]
"atopile/atopile" ["l"="3.682,13.047"]
"JHRobotics/softgpu" ["l"="-20.091,-46.78"]
"mapup/MapUp-Data-Assessment-F" ["l"="40.496,-0.757"]
"ubuygold/go-noss" ["l"="-23.711,9.472"]
"speaches-ai/speaches" ["l"="40.474,3.154"]
"predibase/lorax" ["l"="38.805,-0.556"]
"dstackai/dstack" ["l"="-44.343,6.582"]
"jasonjmcghee/xrem" ["l"="41.844,0.529"]
"DO-SAY-GO/dn" ["l"="-3.549,-28.574"]
"wojciech-kulik/FlashSpace" ["l"="26.067,-22.539"]
"AndrewWalsh/openapi-devtools" ["l"="16.171,-10.362"]
"heyman/heynote" ["l"="-13.254,-7.21"]
"jasonjmcghee/plock" ["l"="41.381,0.706"]
"Gaurav-Gosain/gollama" ["l"="42.023,-0.016"]
"Gaurav-Gosain/ollamanager" ["l"="42.125,-0.074"]
"CodersHQ-AI-ML-Community/ai-confluence" ["l"="42.151,-0.091"]
"pymupdf/PyMuPDF-Utilities" ["l"="46.045,4.805"]
"opendatalab/OmniDocBench" ["l"="46.442,5.941"]
"VikParuchuri/pdftext" ["l"="46.388,5.972"]
"OpenBMB/VisRAG" ["l"="41.306,0.737"]
"pypdfium2-team/pypdfium2" ["l"="46.007,4.796"]
"benitomartin/multimodal-llm-pymupdf4llm" ["l"="41.259,0.756"]
"Softlandia-Ltd/vision-is-all-you-need" ["l"="41.517,0.536"]
"huridocs/pdf-document-layout-analysis" ["l"="46.401,5.931"]
"reid41/shell-pilot" ["l"="42.227,-0.055"]
"not-nullptr/ollama-functions" ["l"="41.801,-0.018"]
"argmaxinc/WhisperKit" ["l"="27.555,-21.137"]
"transitive-bullshit/openai-realtime-api" ["l"="42.91,-1.178"]
"e2b-dev/desktop" ["l"="41.476,0.326"]
"run-llama/chat-ui" ["l"="41.319,0.788"]
"instructlab/taxonomy" ["l"="42.046,0.291"]
"instructlab/community" ["l"="42.068,0.271"]
"instructlab/instructlab" ["l"="42.019,0.274"]
"instructlab/sdg" ["l"="42.09,0.278"]
"instructlab/training" ["l"="42.101,0.289"]
"instructlab/instructlab-bot" ["l"="42.081,0.288"]
"RedHatOfficial/rhelai-dev-preview" ["l"="42.19,0.241"]
"i-am-bee/beeai-framework" ["l"="41.577,0.298"]
"containers/ramalama" ["l"="42.155,0.265"]
"ibm-granite/granite-code-models" ["l"="41.718,0.379"]
"redhat-cop/agnosticd" ["l"="10.584,-11.449"]
"crc-org/crc" ["l"="10.53,-11.424"]
"bootc-dev/bootc" ["l"="-16.978,-2.8"]
"data-prep-kit/data-prep-kit" ["l"="41.903,0.336"]
"srikanth235/benchllama" ["l"="41.174,0.444"]
"ai-ng/magic-spell" ["l"="41.537,0.974"]
"ai-ng/2txt" ["l"="41.527,0.948"]
"trypear/pearai-app-archive" ["l"="41.11,-0.035"]
"trypear/pearai-submodule" ["l"="41.175,-0.197"]
"trypear/pearai-app" ["l"="41.194,-0.241"]
"trypear/pearai-master" ["l"="41.175,-0.251"]
"trypear/pear-landing-page" ["l"="41.184,-0.221"]
"voideditor/void" ["l"="40.92,-0.061"]
"meltylabs/melty" ["l"="41.034,0.152"]
"Dhravya/backend-api-kit" ["l"="-2.906,-31.227"]
"macsplit/urltomarkdown" ["l"="41.192,0.397"]
"ixahmedxi/orbitkit" ["l"="-3.725,-30.268"]
"ishaan1013/sandbox" ["l"="16.301,-9.957"]
"routerso/router" ["l"="-3.386,-31.294"]
"timb-103/saas-starter-stack" ["l"="3.622,13.784"]
"stanford-oval/WikiChat" ["l"="41.073,0.602"]
"KwaiKEG/KwaiAgents" ["l"="36.78,-2.189"]
"e-p-armstrong/augmentoolkit" ["l"="42.925,1.633"]
"lmg-anon/mikupad" ["l"="42.884,1.623"]
"elicit/machine-learning-list" ["l"="41.285,0.495"]
"eugeneyan/llm-paper-notes" ["l"="45.58,26.741"]
"careywyr/UnderstandingDeepLearning-ZH-CN" ["l"="45.465,-0.527"]
"PandaBearLab/prompt-tutorial" ["l"="45.507,0.398"]
"ShixiangWang/pybook" ["l"="45.4,-0.533"]
"swyxio/ai-notes" ["l"="28.762,-26.941"]
"dezoito/ollama-grid-search" ["l"="42.952,1.669"]
"xiaochengcike/Ai-learn" ["l"="-44.033,12.041"]
"tanishqkumar/beyond-nanogpt" ["l"="-14.265,-23.013"]
"microsoft/inshellisense" ["l"="-13.337,-7.294"]
"Eladlev/AutoPrompt" ["l"="40.926,0.498"]
"keirp/automatic_prompt_engineer" ["l"="36.859,-2.471"]
"microsoft/sammo" ["l"="51.384,26.45"]
"trojrobert/MLOps_roadmap_and_curriculum" ["l"="41.397,0.926"]
"loopwork-ai/ollama-swift" ["l"="41.931,-0.21"]
"NSHipster/Nominate" ["l"="41.975,-0.255"]
"pointfreeco/swift-sharing" ["l"="42.389,-26.865"]
"loopwork-ai/iMCP" ["l"="41.893,-0.262"]
"modelcontextprotocol/swift-sdk" ["l"="42.345,-26.793"]
"finnvoor/SwiftUIFX" ["l"="42.049,-0.293"]
"StreamUI/StreamUI.swift" ["l"="42.015,-0.285"]
"drewmccormack/Forked" ["l"="42.864,-27.8"]
"hinterdupfinger/obsidian-ollama" ["l"="-35.122,17.058"]
"devrsi0n/awesome-apple-notes" ["l"="41.836,-0.007"]
"PicoMLX/PicoMLXServer" ["l"="27.557,-21.019"]
"wangyuxinwhy/uniem" ["l"="39.057,-2.129"]
"castorini/rank_llm" ["l"="54.47,25.673"]
"texttron/tevatron" ["l"="54.504,25.68"]
"xbmxb/RAG-query-rewriting" ["l"="54.363,25.551"]
"nomic-ai/contrastors" ["l"="54.57,25.693"]
"BUAADreamer/EasyRAG" ["l"="38.875,-1.709"]
"luyug/Reranker" ["l"="54.489,25.724"]
"blackinkkkxi/RAG_langchain" ["l"="38.811,-2.061"]
"alejandro-ao/chat-with-websites" ["l"="40.224,-1.954"]
"shreyaskarnik/DistiLlama" ["l"="41.449,0.432"]
"MDK8888/GPTFast" ["l"="37.511,-0.16"]
"zlwaterfield/scramble" ["l"="16.535,-10.369"]
"MinorJerry/WebVoyager" ["l"="36.804,-1.504"]
"OSU-NLP-Group/SeeAct" ["l"="36.785,-1.484"]
"Agent-Tools/awesome-autonomous-web" ["l"="41.484,0.597"]
"katanemo/archgw" ["l"="41.205,0.36"]
"traceloop/openllmetry" ["l"="15.599,-9.967"]
"lmnr-ai/lmnr" ["l"="41.246,0.408"]
"Arize-ai/openinference" ["l"="40.895,0.866"]
"andrewyng/translation-agent" ["l"="40.828,0.023"]
"regolith-labs/ore-app" ["l"="40.394,-0.618"]
"codama-idl/codama" ["l"="-18.197,8.448"]
"firedancer-io/firedancer" ["l"="-18.228,8.526"]
"jito-foundation/jito-solana" ["l"="-17.034,8.061"]
"helius-labs/helius-sdk" ["l"="-18.213,8.408"]
"jup-ag/jupiter-quote-api-node" ["l"="-17.041,8.032"]
"solana-developers/create-solana-dapp" ["l"="-18.274,8.486"]
"StockpileLabs/awesome-solana-oss" ["l"="-18.236,8.437"]
"sevenlabs-hq/carbon" ["l"="-18.162,8.397"]
"vectorisvector/Polaris" ["l"="-23.733,9.481"]
"agdev/Langgraph" ["l"="41.567,0.485"]
"ahmad2b/postbot3000" ["l"="41.548,0.471"]
"alonlavian/RAGent" ["l"="41.555,0.435"]
"muratcankoylan/AI-Investigator" ["l"="41.628,0.452"]
"Makesh-Srinivasan/LangChain-GPT-Researcher" ["l"="41.545,0.516"]
"patruff/ollama-mcp-bridge" ["l"="41.279,3.179"]
"dustinblackman/oatmeal" ["l"="-12.743,-7.007"]
"chrishayuk/mcp-cli" ["l"="41.288,3.13"]
"David-Kunz/gen.nvim" ["l"="-12.804,-9.807"]
"pythops/tenere" ["l"="-12.799,-6.972"]
"s-kostyaev/ellama" ["l"="-16.381,-11.667"]
"pgibler/cmdh" ["l"="41.795,0.045"]
"adhikasp/mcp-client-cli" ["l"="41.289,3.082"]
"gonzalezreal/swift-markdown-ui" ["l"="41.899,-28.09"]
"ml-explore/mlx-swift-examples" ["l"="27.555,-21.093"]
"huggingface/chat-macOS" ["l"="27.606,-21.102"]
"huggingface/swift-transformers" ["l"="27.482,-21.118"]
"agiresearch/OpenAGI" ["l"="41.107,-3.767"]
"amnesia49406/Amnesia-Tron-Brute-Force" ["l"="41.507,2.556"]
"amnesia333/Amnesia" ["l"="41.517,2.592"]
"prometheus-wq/Prometheus" ["l"="41.506,2.527"]
"AlexanderKoch-Koch/low_cost_robot" ["l"="59.241,16.584"]
"AugmentOS-Community/OpenSourceSmartGlasses" ["l"="-12.592,-7.497"]
"MarkFzp/mobile-aloha" ["l"="59.282,16.659"]
"togethercomputer/MoA" ["l"="41.124,0.478"]
"chyok/ollama-gui" ["l"="41.653,0.004"]
"mythrantic/ollama-docker" ["l"="41.517,0.034"]
"ruecat/ollama-telegram" ["l"="41.806,-0.133"]
"sheshbabu/Chital" ["l"="41.727,-0.044"]
"andrewyng/aisuite" ["l"="40.89,0.244"]
"TuGraph-family/tugraph-db" ["l"="51.648,15.298"]
"TuGraph-family/TuGraph-AntGraphLearning" ["l"="51.74,15.346"]
"LHRLAB/ChatKBQA" ["l"="53.841,15.227"]
"cocacola-lab/ChatIE" ["l"="53.963,15.141"]
"XiaoxinHe/G-Retriever" ["l"="53.768,15.276"]
"Mirascope/lilypad" ["l"="41.001,0.763"]
"Mirascope/eddie" ["l"="41.034,0.717"]
"stephenleo/llm-structured-output-benchmarks" ["l"="40.995,0.824"]
"LAION-AI/Text-to-speech" ["l"="40.139,1.247"]
"google-deepmind/alphageometry" ["l"="38.804,-0.866"]
"mezbaul-h/june" ["l"="41.711,0.781"]
"daswer123/xtts-api-server" ["l"="38.779,1.664"]
"bigsk1/voice-chat-ai" ["l"="41.672,0.754"]
"apeatling/ollama-voice-mac" ["l"="41.893,0.822"]
"normal-computing/fuji-web" ["l"="41.133,0.904"]
"normal-computing/posteriors" ["l"="21.833,14.209"]
"guinmoon/llmfarm_core.swift" ["l"="27.5,-21.168"]
"athina-ai/rag-cookbooks" ["l"="41.389,0.421"]
"ACHultman/wanderlust" ["l"="41.54,1.107"]
"serpapi/Wander" ["l"="41.527,1.096"]
"felipetodev/wanderlust" ["l"="41.551,1.128"]
"TrafficGuard/typedai" ["l"="41.343,0.498"]
"labmlai/inspectus" ["l"="41.238,0.826"]
"laudspeaker/laudspeaker" ["l"="16.237,-10.239"]
"cfahlgren1/natural-sql" ["l"="3.887,12.949"]
"ChuckHend/pg_vectorize" ["l"="3.709,13.4"]
"teknium1/Prompt-Engineering-Toolkit" ["l"="41.371,0.758"]
"aishwaryaprabhat/Advanced-RAG" ["l"="41.388,1.076"]
"bhargobdeka/advanced-RAG-app" ["l"="41.377,1.087"]
"abgulati/LARS" ["l"="42.908,1.757"]
"AndrewVeee/nucleo-ai" ["l"="42.949,1.767"]
"virattt/financial-datasets" ["l"="-9.509,12.603"]
"virattt/ai-financial-agent" ["l"="41.453,0.255"]
"assistant-ui/assistant-ui-stockbroker" ["l"="41.484,0.462"]
"virattt/financial-agent" ["l"="-9.549,12.566"]
"LERM0/LermoAI" ["l"="41.518,0.5"]
"jank/curiosity" ["l"="41.49,0.505"]
"Libr-AI/OpenFactVerification" ["l"="37.456,-6.816"]
"lamm-mit/PDF2Audio" ["l"="41.338,0.373"]
"prometeydev/Prometheus" ["l"="41.487,2.466"]
"prometeytron/Prometheus-Tron-Brute-Force" ["l"="41.501,2.44"]
"promethron/Prometheus-Tron-Brute-Force" ["l"="41.51,2.463"]
"prometheusdevel/Prometheus" ["l"="41.467,2.433"]
"darknet-onion-links/darknet-onion-links-catalog" ["l"="41.472,2.378"]
"PrometheusStealer/Prometheus" ["l"="41.487,2.428"]
"prometheusdevelop/Prometheus" ["l"="41.496,2.504"]
"promethrahus/Prometheus-Tron-Brute-Force" ["l"="41.52,2.504"]
"phospho-app/phospho-legacy" ["l"="3.796,13.099"]
"SouthBridgeAI/offmute" ["l"="43.03,-1.107"]
"mustafaaljadery/lightning-whisper-mlx" ["l"="27.598,-21.019"]
"groq/groq-api-cookbook" ["l"="41.365,0.502"]
"groq/groq-python" ["l"="41.497,0.719"]
"skapadia3214/groq-moa" ["l"="41.287,0.468"]
"serkandyck/realtime-voice-assistant-groq" ["l"="42.927,-1.355"]
"definitive-io/crewai-groq" ["l"="40.091,-2.056"]
"Bklieger/ScribeWizard" ["l"="41.433,0.581"]
"get-salt-AI/SaltAI_Language_Toolkit" ["l"="41.869,0.679"]
"tom-doerr/dspy_nodes" ["l"="41.966,0.729"]
"lz-chen/research-agent" ["l"="41.541,0.74"]
"gptscript-ai/clio" ["l"="7.054,-8.989"]
"acorn-io/runtime" ["l"="7.55,-9.058"]
"k8sgpt-ai/k8sgpt" ["l"="7.663,-9.09"]
"AmberSahdev/Open-Interface" ["l"="41.32,0.147"]
"showlab/computer_use_ootb" ["l"="36.762,-1.578"]
"trycua/acu" ["l"="41.438,0.199"]
"suitedaces/computer-agent" ["l"="36.778,-1.613"]
"Upsonic/Upsonic" ["l"="40.94,0.163"]
"harishsg993010/LLM-Reasoner" ["l"="41.565,0.208"]
"von-development/awesome-LangGraph" ["l"="41.472,0.367"]
"langchain-ai/langgraph-supervisor-py" ["l"="41.487,0.306"]
"daveshap/David_Shapiro_Reading_List" ["l"="40.744,1.12"]
"s-smits/agentic-cursorrules" ["l"="41.537,0.203"]
"daveshap/Chronic_Health_AI" ["l"="40.841,0.941"]
"deedy/mac_computer_use" ["l"="36.784,-1.644"]
"trypear/pearai-documentation" ["l"="41.18,-0.235"]
"NVIDIA/NeMo-Curator" ["l"="38.556,-0.505"]
"NVIDIA/AIQToolkit" ["l"="41.38,0.332"]
"NVIDIA/DeepLearningExamples" ["l"="50.583,29.53"]
"NVIDIA/tensorflow" ["l"="7.18,-11.491"]
"NVIDIA/nvidia-container-toolkit" ["l"="7.209,-11.422"]
"humanlayer/12-factor-agents" ["l"="41.262,0.225"]
"agi-merge/waggle-dance" ["l"="41.005,0.859"]
"richardyc/Chrome-GPT" ["l"="41.14,-3.742"]
"WisdomShell/codeshell" ["l"="38.996,-2.165"]
"vignshwarar/AI-Employe" ["l"="41.557,-3.989"]
"soufianetahiri/Anxun-isoon" ["l"="40.521,-0.59"]
"I-S00N/I-S00N" ["l"="-45.605,-32.096"]
"starknet-io/provisions-data" ["l"="-19.56,14.421"]
"moest-np/center-randomize" ["l"="30.999,-22.853"]
"merill/awesome-entra" ["l"="-48.094,6.723"]
"OpenGenerativeAI/llm-colosseum" ["l"="40.96,0.574"]
"mistralai-sf24/hackathon" ["l"="38.421,-0.598"]
"lmgame-org/GamingAgent" ["l"="36.486,-2.324"]
"ContextualAI/HALOs" ["l"="37.252,-0.265"]
"aws-banjo/llm-colosseum" ["l"="40.956,0.666"]
"eloialonso/diamond" ["l"="46.34,30.677"]
"mmo80/alpaca-webui" ["l"="41.657,0.06"]
"pixiv/ChatVRM" ["l"="4.605,-40.508"]
"uezo/ChatdollKit" ["l"="4.627,-40.5"]
"tegnike/aituber-kit" ["l"="4.655,-40.522"]
"fagenorn/handcrafted-persona-engine" ["l"="27.92,-21.082"]
"pixiv/three-vrm" ["l"="-31.254,-28.826"]
"PKU-DAIR/RAG-Survey" ["l"="41.259,0.873"]
"rocketseat-education/nlw-expert-react-native" ["l"="40.469,-0.73"]
"rkaehn/cr_task.h" ["l"="40.224,-0.88"]
"mkirchner/hamt" ["l"="40.19,-0.903"]
"flowersteam/lamorel" ["l"="36.484,-2.358"]
"WooooDyy/AgentGym" ["l"="36.812,-1.399"]
"allenai/reward-bench" ["l"="37.258,-0.285"]
"RAGEN-AI/RAGEN" ["l"="37.212,-0.531"]
"WeihaoTan/TWOSOME" ["l"="36.479,-2.381"]
"web-arena-x/webarena" ["l"="36.821,-1.486"]
"flowersteam/Grounding_LLMs_with_online_RL" ["l"="36.505,-2.379"]
"nickbild/local_llm_assistant" ["l"="40.431,6.004"]
"techwithtim/LiveKit-AI-Voice-Assitant" ["l"="42.859,-1.309"]
"hkgood/Ollama_ChatTTS" ["l"="41.932,0.849"]
"vndee/local-assistant-examples" ["l"="41.965,0.77"]
"aurelio-labs/semantic-chunkers" ["l"="-8.845,-4.537"]
"rocketseat-education/nlw-expert-nodejs" ["l"="40.437,-0.782"]
"rocketseat-education/nlw-expert-html-css-js" ["l"="40.46,-0.768"]
"rocketseat-education/nlw-expert-python" ["l"="40.452,-0.754"]
"rocketseat-education/nlw-expert-c-sharp" ["l"="40.445,-0.767"]
"rocketseat-education/nlw-expert-java" ["l"="40.437,-0.757"]
"rocketseat-education/nlw-unite-nodejs" ["l"="40.399,-0.833"]
"rocketseat-education/nlw-journey-react" ["l"="40.383,-0.883"]
"rocketseat-education/nlw-unite-react" ["l"="40.416,-0.826"]
"s-casci/tinyzero" ["l"="41.354,0.957"]
"natolambert/blogcaster" ["l"="41.411,0.903"]
"kartikm7/llocal" ["l"="41.707,0.023"]
"wearedevx/llm-together" ["l"="42.006,0.669"]
"simonw/llm-gemini" ["l"="41.758,0.567"]
"mckaywrigley/o1-xml-parser" ["l"="41.601,0.272"]
"simonw/sqlite-utils" ["l"="5.45,-8.934"]
"SuperMedIntel/Medical-Graph-RAG" ["l"="62.325,37.68"]
"davidhandsome86/LLM_RAG" ["l"="41.642,0.961"]
"rainstorm12/KG-RAG" ["l"="41.625,0.936"]
"kabazoka/ViT-Accelerator" ["l"="40.125,1.177"]
"bytewax/bytewax" ["l"="-0.452,14.845"]
"gouravnagar-infosec/netsleuth" ["l"="41.486,1.09"]
"lotus-data/lotus" ["l"="41.275,0.608"]
"awesome-rag/awesome-rag" ["l"="37.119,-0.394"]
"zjunlp/LLMAgentPapers" ["l"="36.695,-2.389"]
"canadaduane/elm-hccb" ["l"="40.777,-1.402"]
"myinnos/AndroidScratchCard" ["l"="53.983,-12.506"]
"ouyangzhibo/HiQ-Robust-and-Fast-Decoding-of-High-Capacity-Color-QR-Codes" ["l"="40.8,-1.409"]
"felixhao28/JSCPP" ["l"="-43.848,11.463"]
"BINANCECONTRACT/Create-Honeypot-Token" ["l"="42.257,0.021"]
"SmartBNBGuy/BSC-honeypot" ["l"="42.254,0.058"]
"BINANCECONTRACT/Create-BEP20-Meme-Token" ["l"="42.318,0.023"]
"blxintothedark/BBB-Stealer" ["l"="42.315,-0.04"]
"BINANCECONTRACT/BSC-Contract" ["l"="42.325,0.001"]
"darkneton/kerberos-market" ["l"="42.359,-0.048"]
"SmartBNBGuy/create-honeypot-token" ["l"="42.356,0.026"]
"SmartBNBGuy/BEP20-Honeypot" ["l"="42.326,0.055"]
"hosea-teknologiAi/multi-window-scene" ["l"="40.221,-0.486"]
"1281471119qqtt/bgstaals" ["l"="40.2,-0.473"]
"jgravelle/GroqApiLibrary" ["l"="41.706,0.509"]
"jgravelle/Py2md" ["l"="41.626,0.499"]
"jgravelle/shugok-ai" ["l"="41.694,0.502"]
"jgravelle/Grompt" ["l"="41.66,0.493"]
"jgravelle/MiniGroqqle" ["l"="41.667,0.483"]
"bigscience-workshop/petals" ["l"="38.644,-0.664"]
"evilsocket/cake" ["l"="40.91,0.286"]
"distantmagic/paddler" ["l"="42.773,1.596"]
"foldl/chatllm.cpp" ["l"="40.589,0.815"]
"ridgerchu/matmulfreellm" ["l"="38.853,-0.268"]
"mostlygeek/llama-swap" ["l"="42.811,1.652"]
"intel/neural-speed" ["l"="64.119,-2.404"]
"plaintextpackets/netprobe_lite" ["l"="40.492,-0.7"]
"wikit-ai/kg-rag-egc2024" ["l"="41.365,0.981"]
"llm-edge/hal-9100" ["l"="41.019,-3.472"]
"567-labs/instructor-js" ["l"="40.926,0.953"]
"hack-dance/island-ai" ["l"="40.889,1.057"]
"cloudflare/partykit" ["l"="-5.139,-27.567"]
"instructor-ai/evals" ["l"="40.9,1.026"]
"instructor-ai/cloud" ["l"="40.91,1.014"]
"traceloop/openllmetry-js" ["l"="40.889,1.104"]
"373675032/love-charity" ["l"="41.853,1.236"]
"274056675/springboot-openai-chatgpt" ["l"="45.635,2.059"]
"sparrow-js/an-codeAI" ["l"="46.201,-0.629"]
"dakouan18/vx.dev" ["l"="41.15,0.482"]
"weijunext/smart-excel-ai" ["l"="45.409,-0.805"]
"arianrhodsandlot/nostalgist" ["l"="46.402,-1.046"]
"weijunext/landing-page-boilerplate" ["l"="45.388,-0.796"]
"engigu/Message-Push-Nest" ["l"="46.365,-1.004"]
"hardhackerlabs/book" ["l"="45.442,-0.809"]
"Olwiba/Kickass-markdown" ["l"="46.392,-1.072"]
"smartxworks/sunmao-ui" ["l"="-3.831,-32.729"]
"weijunext/indie-hacker-tools" ["l"="45.478,-0.822"]
"rocketseat-education/nlw-unite-devops" ["l"="40.373,-0.86"]
"rocketseat-education/nlw-unite-react-native" ["l"="40.41,-0.85"]
"rocketseat-education/nlw-unite-python" ["l"="40.393,-0.862"]
"rocketseat-education/nlw-journey-nodejs" ["l"="40.359,-0.897"]
"rocketseat-education/nlw-unite-html-css-js" ["l"="40.39,-0.849"]
"rocketseat-education/nlw-unite-java" ["l"="40.407,-0.865"]
"xNul/code-llama-for-vscode" ["l"="40.771,-3.895"]
"AgentOps-AI/tokencost" ["l"="41.085,0.629"]
"alvin-r/databonsai" ["l"="3.817,13.158"]
"Cloud-Code-AI/kaizen" ["l"="41.579,0.269"]
"THUDM/LongWriter" ["l"="41.211,0.5"]
"Cloud-Code-AI/AkiraDocs" ["l"="41.642,0.223"]
"Cloud-Code-AI/cloudstate" ["l"="41.622,0.211"]
"gptlint/gptlint" ["l"="41.771,0.24"]
"sauravpanda/BrowserAI" ["l"="41.541,0.166"]
"gabriben/awesome-generative-information-retrieval" ["l"="54.451,25.671"]
"Xnhyacinth/Awesome-LLM-Long-Context-Modeling" ["l"="38.02,-1.385"]
"hyp1231/awesome-llm-powered-agent" ["l"="36.668,-2.371"]
"Timothyxxx/Chain-of-ThoughtsPapers" ["l"="36.759,-2.46"]
"atfortes/Awesome-LLM-Reasoning" ["l"="37.156,-0.385"]
"WangRongsheng/Awesome-LLM-with-RAG" ["l"="41.279,0.802"]
"mckaywrigley/clarity-ai" ["l"="41.413,-3.779"]
"jjleng/sensei" ["l"="41.425,0.489"]
"Yusuke710/nanoPerplexityAI" ["l"="42.973,-1.097"]
"brunostjohn/perplexideez" ["l"="42.749,1.682"]
"marco-jeffrey/awesome-llm-resources" ["l"="41.346,1.113"]
"bracesproul/langgraphjs-examples" ["l"="41.429,0.51"]
"langchain-ai/langchainjs-mcp-adapters" ["l"="41.467,0.43"]
"langchain-ai/social-media-agent" ["l"="41.46,0.303"]
"0xbitches/sd-webui-lcm" ["l"="31.931,31.657"]
"segmind/distill-sd" ["l"="38.877,0.046"]
"PixArt-alpha/PixArt-sigma" ["l"="33.446,31.148"]
"Nerogar/OneTrainer" ["l"="32.138,31.75"]
"G-U-N/Phased-Consistency-Model" ["l"="46.232,30.452"]
"showlab/X-Adapter" ["l"="33.358,31.2"]
"tin2tin/Pallaidium" ["l"="32.707,32.793"]
"huggingface/optimum-intel" ["l"="64.107,-2.454"]
"MoonRide303/Fooocus-MRE" ["l"="32.124,31.578"]
"Extraltodeus/ComfyUI-AutomaticCFG" ["l"="32.628,32.824"]
"ibm-granite/granite-3.0-language-models" ["l"="41.908,0.387"]
"myshell-ai/JetMoE" ["l"="38.714,-0.426"]
"prometheus-eval/prometheus-eval" ["l"="37.249,-0.148"]
"IBM/dolomite-engine" ["l"="41.822,0.38"]
"ibm-granite/granite-tsfm" ["l"="44.995,24.537"]
"evalplus/evalplus" ["l"="36.214,-0.162"]
"bigcode-project/bigcode-evaluation-harness" ["l"="36.21,-0.134"]
"Doriandarko/opus-interpreter" ["l"="41.453,0.578"]
"Doriandarko/DIY-Astra" ["l"="41.452,0.534"]
"Doriandarko/BabyAGIChatGPT" ["l"="41.253,-3.717"]
"Doriandarko/Moondream2-streamlit" ["l"="41.484,0.546"]
"AxisBotV2/solana-sniper-bot" ["l"="42.774,0.542"]
"CryptoMemeSniper/sol-sniper-bot" ["l"="42.858,0.526"]
"DewyCoder/crypto-trading-bot-eth-bnb" ["l"="42.624,0.53"]
"hasan4adnan/Recta-AI" ["l"="42.604,0.53"]
"blxsi/LBX-Grabber" ["l"="42.848,0.58"]
"shegongku2024/TGshegongku" ["l"="42.85,0.56"]
"MrGreyfun/Local-Code-Interpreter" ["l"="40.805,-3.868"]
"uclaml/SPIN" ["l"="37.259,-0.313"]
"ise-uiuc/magicoder" ["l"="36.258,-0.156"]
"McGill-NLP/weblinx" ["l"="36.801,-1.435"]
"Profluent-AI/OpenCRISPR" ["l"="24.375,13.492"]
"haizelabs/llama3-jailbreak" ["l"="38.027,-7.252"]
"AnswerDotAI/ModernBERT" ["l"="41.243,0.852"]
"AmenRa/ranx" ["l"="54.553,25.749"]
"sunnweiwei/RankGPT" ["l"="54.487,25.659"]
"madtank/autogenstudio-skills" ["l"="39.922,-2.095"]
"Upsonic/Tiger" ["l"="40.067,-1.997"]
"gomate-community/awesome-papers-for-rag" ["l"="40.933,1.083"]
"jwa91/LangGraph-Expense-Tracker" ["l"="41.596,0.5"]
"dheerajrhegde/servicedesk_langgraph_tavily" ["l"="41.577,0.517"]
"botextractai/ai-langgraph-multi-agent" ["l"="41.659,0.542"]
"ggerganov/bert.cpp" ["l"="40.165,1.252"]
"sadmann7/file-uploader" ["l"="-3.184,-31.321"]
"princeton-nlp/ALCE" ["l"="54.43,25.535"]
"facebookresearch/contriever" ["l"="54.494,25.618"]
"shmsw25/FActScore" ["l"="37.612,-6.875"]
"starsuzi/Adaptive-RAG" ["l"="54.309,25.485"]
"OpenAdaptAI/OpenAdapt" ["l"="36.816,-1.566"]
"redotvideo/revideo" ["l"="16.337,-10.241"]
"quarylabs/quary" ["l"="3.779,12.993"]
"ikawrakow/ik_llama.cpp" ["l"="42.818,1.589"]
"Maximilian-Winter/llama-cpp-agent" ["l"="42.92,1.8"]
"Farzad-R/LLM-Zero-to-Hundred" ["l"="41.888,0.648"]
"samwit/agent_tutorials" ["l"="41.621,0.584"]
"rsrohan99/Llama-Researcher" ["l"="41.423,0.807"]
"run-llama/mcp-server-llamacloud" ["l"="41.45,0.761"]
"Kriptikz/ore-hq-client" ["l"="40.373,-0.648"]
"Kriptikz/ore-hq-server" ["l"="40.375,-0.663"]
"bin123apple/MACM" ["l"="37.463,-0.408"]
"novitalabs/AnimateAnyone" ["l"="33.484,31.049"]
"tspeterkim/insta-chat" ["l"="33.355,30.962"]
"daveshap/nonfiction_drafting" ["l"="40.712,0.953"]
"mtniehaus/MediaTool" ["l"="40.563,-0.69"]
"illuin-tech/vidore-benchmark" ["l"="41.363,0.736"]
"PromtEngineer/localGPT-Vision" ["l"="41.431,0.662"]
"s-emanuilov/litepali" ["l"="41.439,0.748"]
"dame-cell/VisionRAG" ["l"="41.47,0.795"]
"harana/search" ["l"="42.498,0.478"]
"hcavarsan/kftray" ["l"="42.45,0.476"]
"unagex/kondense" ["l"="7.112,-9.506"]
"gianlucam76/k8s-cleaner" ["l"="7.433,-9.22"]
"deggja/netfetch" ["l"="7.365,-9.229"]
"leopoldjoy/simple-smart-wallet" ["l"="42.468,0.452"]
"getseabird/seabird" ["l"="7.421,-9.093"]
"KewbitXMR/haveno-app" ["l"="42.389,0.499"]
"adnxy/optic-react-native" ["l"="42.526,0.479"]
"cactus-compute/cactus" ["l"="42.409,0.451"]
"emotion-block/project-elara" ["l"="42.4,0.471"]
"tosinonikute/Carteasy" ["l"="42.516,0.456"]
"tughw/ComfyUI-FramePack" ["l"="42.431,0.449"]
"rapidarchitect/ollama_basic_chat" ["l"="41.769,0.071"]
"n8n-io/n8n-docker-caddy" ["l"="41.802,-0.445"]
"Joffcom/n8n-ngrok" ["l"="41.785,-0.462"]
"mozilla-ai/lumigator" ["l"="41.856,0.199"]
"mozilla-ai/any-agent" ["l"="41.741,0.235"]
"mozilla-ai/document-to-podcast" ["l"="41.887,0.186"]
"mozilla-ai/lm-buddy" ["l"="41.937,0.179"]
"373675032/su-share" ["l"="1.682,10.628"]
"linktimecloud/kubernetes-data-platform" ["l"="41.853,0.267"]
"pengfeng/ask.py" ["l"="41.765,0.315"]
"LinkTime-Corp/llm-in-containers" ["l"="41.871,0.252"]
"leettools-dev/leettools" ["l"="41.789,0.261"]
"dromara/CloudEon" ["l"="-2.447,15.03"]
"linktimecloud/big-data-on-k8s" ["l"="41.952,0.254"]
"apache/bigtop-manager" ["l"="-2.451,14.92"]
"upstash/semantic-cache" ["l"="41.697,0.588"]
"run-rx/rx" ["l"="41.784,0.641"]
"armbues/SiLLM" ["l"="27.643,-20.969"]
"emarco177/reflexion" ["l"="41.721,0.635"]
"emarco177/langgraph-customer-support" ["l"="41.616,0.54"]
"Andrew-Jang/RAGHub" ["l"="41.381,0.465"]
"Sh4yy/personal-ai" ["l"="41.394,0.774"]
"fatwang2/siri-ultra" ["l"="45.568,0.439"]
"developersdigest/ai-devices" ["l"="41.479,0.933"]
"cloudflare/agents-starter" ["l"="-5.196,-27.503"]
"coder/agentapi" ["l"="41.754,-0.067"]
"adaline/gateway" ["l"="41.429,0.546"]
"Lukentui/smotrite-app" ["l"="41.942,0.449"]
"nuance-dev/medio" ["l"="25.765,-22.508"]
"Styx-Crypter/Fud-Crypter-2024-Styx-Builder" ["l"="42.949,0.527"]
"AhmedRabby0601/solana-sniper-bot" ["l"="42.906,0.513"]
"langchain-ai/weblangchain" ["l"="41.436,-3.535"]
"langchain-ai/streamlit-agent" ["l"="41.337,-3.556"]
"Bklieger/Semantic" ["l"="41.415,0.574"]
"Bklieger/ai4collab-bruno" ["l"="41.438,0.602"]
"AllAboutAI-YT/text-to-JSON" ["l"="41.964,0.335"]
"AllAboutAI-YT/Command-R-GPT-4V2" ["l"="41.952,0.328"]
"FlagOpen/TACO" ["l"="41.647,0.688"]
"PavloSap/Readme1" ["l"="41.707,0.727"]
"mitdbg/palimpzest" ["l"="41.381,0.819"]
"orm011/pgserver" ["l"="41.433,0.894"]
"john-adeojo/custom_agent_tutorial" ["l"="41.526,0.571"]
"john-adeojo/agency_swarm_tutorial" ["l"="41.51,0.574"]
"radames/LLM-automator" ["l"="41.448,0.858"]
"eugeneyan/align-app" ["l"="41.547,1.395"]
"simonw/llm-anthropic" ["l"="41.854,0.604"]
"simonw/llm-mistral" ["l"="41.884,0.612"]
"mimo-x/Code-Review-GPT-Gitlab" ["l"="46.303,-0.743"]
"WisdomShell/codeshell-intellij" ["l"="38.935,-2.246"]
"BenjaSOL/orz-cli-gpu" ["l"="40.418,-0.665"]
"OrzSupply/orz-cli" ["l"="40.409,-0.676"]
"0xrsydn/ore-miner" ["l"="40.376,-0.696"]
"cryptoblairo/ore-cli-blairo" ["l"="40.42,-0.653"]
"okeyzero/ore-cli" ["l"="40.39,-0.68"]
"docling-project/docling-serve" ["l"="41.976,0.379"]
"ibm-granite-community/granite-snack-cookbook" ["l"="42.29,0.218"]
"codellm-devkit/python-sdk" ["l"="42.142,0.237"]
"i-am-bee/beeai-platform" ["l"="41.822,0.305"]
"sujee/data-prep-kit-examples" ["l"="41.965,0.35"]
"LangbaseInc/langbase-examples" ["l"="41.452,0.366"]
"LangbaseInc/langbase-sdk" ["l"="41.432,0.346"]
"Scale3-Labs/langtrace-python-sdk" ["l"="40.998,0.695"]
"myscale/myscale-telemetry" ["l"="-0.939,3.776"]
"sugarforever/AutoGen-Tutorials" ["l"="41.068,-0.703"]
"MorpheusAIs/Morpheus-Lumerin-Node" ["l"="42.119,0.556"]
"thevoicecompany/gazelle-train" ["l"="41.751,0.926"]
"serverless/serverless-openwhisk" ["l"="43.098,0.119"]
"christianrice/ai-demos" ["l"="41.884,0.57"]
"christianrice/rag-coding-assistant" ["l"="41.944,0.595"]
"jgravelle/GroqCasters" ["l"="41.7,0.489"]
"PrithivirajDamodaran/SPLADERunner" ["l"="41.168,0.951"]
"naver/splade" ["l"="54.533,25.684"]
"langchain-ai/langgraph-example" ["l"="41.544,0.448"]
"LangGraph-GUI/LangGraph-GUI" ["l"="41.774,0.591"]
"langchain-ai/story-writing" ["l"="41.633,0.474"]
"langchain-ai/react-agent" ["l"="41.676,0.417"]
"john-adeojo/graph_websearch_agent" ["l"="41.601,0.564"]
"hinthornw/trustcall" ["l"="41.518,0.363"]
"pengr/LLM-Synthetic-Data" ["l"="37.134,-0.361"]
"daveshap/PTSD_prompts" ["l"="40.688,0.982"]
"dorianbrown/rank_bm25" ["l"="54.57,25.663"]
"embeddings-benchmark/mteb" ["l"="54.604,25.622"]
"mixedbread-ai/baguetter" ["l"="41.246,1.06"]
"isurulkh/RAG-application-Gemini" ["l"="42.179,0.006"]
"emrgnt-cmplxty/automata" ["l"="51.518,-0.811"]
"shroominic/funcchain" ["l"="-43.948,26.67"]
"genia-dev/GeniA" ["l"="39.905,-1.939"]
"FSoft-AI4Code/AgileCoder" ["l"="41.545,1.657"]
"FSoft-AI4Code/RepoHyper" ["l"="41.554,1.707"]
"FSoft-AI4Code/CodeMMLU" ["l"="41.574,1.67"]
"qnamng/ViSoBERT" ["l"="41.544,1.684"]
"Fsoft-AIC/LibMoE" ["l"="41.572,1.687"]
"tigerbytes-ai/tigers" ["l"="40.983,1.001"]
"DL3DV-10K/Dataset" ["l"="41.46,2.314"]
"cobaltcore-dev/openstack-nix" ["l"="40.515,-0.771"]
"apache/openwhisk-package-kafka" ["l"="43.073,0.087"]
"apache/openwhisk-cli" ["l"="43.059,0.072"]
"AI-Commandos/LLaMa2lang" ["l"="41.446,0.638"]
"camel-ai/crab" ["l"="41.581,-0.159"]
"camel-ai/agent-trust" ["l"="41.65,-0.232"]
"Datayoo/HuggingFists" ["l"="41.5,0.831"]
"KylinMountain/graphrag-server" ["l"="41.425,0.731"]
"zlalvani/relgen" ["l"="40.967,1.288"]
"TrelisResearch/install-guides" ["l"="41.914,0.414"]
"junhoyeo/BetterOCR" ["l"="40.973,1.446"]
"junhoyeo/ondiscord.io" ["l"="40.966,1.491"]
"tusharhero/aitelegrambot" ["l"="41.866,-0.167"]
"puredatum/Local_Rag" ["l"="41.999,0.719"]
"turboderp-org/exui" ["l"="42.902,1.601"]
"ArcadeAI/arcade-ai" ["l"="41.727,0.329"]
"ArcadeAI/arcade-py" ["l"="41.801,0.33"]
"ArcadeAI/arcade-js" ["l"="41.789,0.322"]
"ArcadeAI/SlackAgent" ["l"="41.819,0.336"]
"ArcadeAI/ArcadeGPT" ["l"="41.788,0.336"]
"burakssen/QuitMe" ["l"="41.985,0.458"]
"disler/lllm" ["l"="41.555,0.699"]
"disler/elm-itv-benchmark" ["l"="41.528,0.658"]
"malbaugh/lightweight-wanderlust" ["l"="41.568,1.157"]
"Pythagora-io/pythagora-prompt-lab" ["l"="40.675,0.607"]
"rh-aiservices-bu/insurance-claim-processing" ["l"="42.424,0.231"]
"red-hat-data-services/rhoai-disconnected-install-helper" ["l"="42.46,0.23"]
"diicellman/dspy-rag-fastapi" ["l"="41.266,1.076"]
"Arize-ai/open-inference-spec" ["l"="40.868,0.941"]
"felladrin/MiniSearch" ["l"="42.698,1.674"]
"iongpt/LLM-for-Whatsapp" ["l"="41.587,2.17"]
"disler/omni-complete" ["l"="41.554,0.683"]
"munris-vlad/airdrop-checker" ["l"="-23.497,9.244"]
"code100x/chess" ["l"="30.36,-25.202"]
"USTCAGI/CRAG-in-KDD-Cup2024" ["l"="41.255,1.325"]
"brunnolou/next-ollama-app" ["l"="41.245,1.161"]
"di37/coding-assistant-codellama-streamlit" ["l"="42.329,-0.205"]
"di37/multiclass-news-classification-using-llms" ["l"="42.29,-0.186"]
"di37/langchain-rag-basic-to-advanced-tutorials" ["l"="42.351,-0.2"]
"guillecg98/seekNseat" ["l"="28.486,-29.59"]
"AbeerVaishnav13/FrameDinoGame" ["l"="42.152,0.753"]
"OkGoDoIt/frame-sdk-python" ["l"="42.138,0.757"]
"di37/full-fine-tuning-nvidia-question-and-answering" ["l"="42.308,-0.163"]
"seanchatmangpt/dslmodel" ["l"="41.3,1.022"]
"seanchatmangpt/rdddy" ["l"="41.287,1.018"]
"jmanhype/dspy-self-discover-framework" ["l"="41.3,1.045"]
"AIAnytime/Medical-RAG-using-Meditron-7B-LLM" ["l"="42.369,0.356"]
"ReproModel/repromodel" ["l"="41.72,1.402"]
"SharpLogic/LightNap" ["l"="41.781,1.519"]
"juntoku9/edupal" ["l"="42.781,-0.502"]
"amirzandieh/HyperAttention" ["l"="40.305,1.359"]
"Logistic98/rag-omni" ["l"="41.577,0.785"]
"liuyanqun0815/langgraph_fly_base" ["l"="41.663,0.68"]
"Knowledgator/TurboT5" ["l"="40.72,1.43"]
"Knowledgator/utca" ["l"="40.855,1.385"]
"urchade/ATG" ["l"="40.964,1.408"]
"urchade/EnriCo" ["l"="40.981,1.355"]
"jxnl/n-levels-of-rag" ["l"="41.572,1.413"]
"iamlemec/bert.cpp" ["l"="40.051,1.328"]
"google-coral/coralmicro" ["l"="40.022,1.201"]
"AIAnytime/Medical-Mixture-of-Experts-LLM" ["l"="42.385,0.353"]
"daily-demos/llm-talk" ["l"="41.714,0.914"]
"daily-co/daily-python" ["l"="41.65,0.842"]
"kyaukyuai/gpt-all-star" ["l"="41.12,0.821"]
"kyaukyuai/gpt-all-star-ui" ["l"="41.113,0.896"]
"NanmiCoder/MediaCrawlerGo" ["l"="40.522,0.7"]
"Kriptikz/ore-cli" ["l"="40.435,-0.67"]
"moondevonyt/Moon-Dev-Code" ["l"="41.63,-0.098"]
"moondevonyt/eliza" ["l"="41.616,-0.079"]
"moondevonyt/agent-zero" ["l"="41.635,-0.085"]
"moondevonyt/ZerePy" ["l"="41.628,-0.074"]
"moondevonyt/learn-typescript-from-python" ["l"="41.645,-0.099"]
"moondevonyt/Delete-OpenAI-Assistants-In-Bulk" ["l"="41.662,-0.113"]
"moondevonyt/goose" ["l"="41.653,-0.105"]
"tevslin/meeting-reporter" ["l"="41.653,0.526"]
"shiv248/Streamlit-x-LangGraph-Cookbooks" ["l"="41.606,0.462"]
"apache/openwhisk-devtools" ["l"="43.055,0.047"]
"apache/openwhisk-runtime-java" ["l"="43.093,0.04"]
"apache/openwhisk-runtime-go" ["l"="43.082,0.02"]
"yazanrisheh/Synthetic-Data-Generation-with-LangChain" ["l"="42.193,-0.111"]
"mixedbread-ai/python-sdk" ["l"="41.256,1.094"]
"mixedbread-ai/binary-embeddings" ["l"="41.262,1.107"]
"mixedbread-ai/wiki_demo_app" ["l"="41.249,1.101"]
"denser-org/denser-retriever" ["l"="41.642,0.765"]
"denser-org/denser-chat" ["l"="41.608,0.594"]
"C0nsumption/Consume-ComfyUI-Workflows" ["l"="32.54,32.65"]
"BINANCECONTRACT/How-to-Create-Honeypot-Token" ["l"="42.382,-0.003"]
"Coding-Crashkurse/LangChain-in-Production-with-Langfuse" ["l"="42.034,1.328"]
"CoolkHz/orz-cli-gpu" ["l"="40.382,-0.723"]
"DataScienceUIBK/TriviaHG" ["l"="40.513,1.151"]
"DataScienceUIBK/HintQA" ["l"="40.519,1.164"]
"DataScienceUIBK/HintEval" ["l"="40.535,1.133"]
"mckaywrigley/typescript-starter" ["l"="41.823,0.422"]
"mckaywrigley/level-1-agent-code" ["l"="41.789,0.414"]
"LangbaseInc/BaseAI" ["l"="41.357,0.333"]
"kaiban-ai/KaibanJS" ["l"="41.452,0.323"]
"EurekaLabsAI/ngram" ["l"="38.958,-0.165"]
"ricky0123/vad" ["l"="40.46,3.25"]
"cartesia-ai/cartesia-js" ["l"="41.594,1.067"]
"aryanvichare/stocks" ["l"="-3.205,-31.185"]
"dsa/fast-voice-assistant" ["l"="42.842,-1.35"]
"livekit/agents-playground" ["l"="42.802,-1.328"]
"knowsuchagency/pdf-to-podcast" ["l"="41.415,0.309"]
"gabrielchua/open-notebooklm" ["l"="41.302,0.268"]
"knowsuchagency/promptic" ["l"="41.547,0.296"]
"souzatharsis/podcastfy-demo" ["l"="41.391,0.299"]
"sullyo/prompt2ui" ["l"="41.561,0.456"]
"ozgrozer/chatgpt-artifacts" ["l"="41.513,0.554"]
"13point5/open-artifacts" ["l"="41.632,0.527"]
"BannyLon/DifyAIA" ["l"="50.612,22.159"]
"wwwzhouhui/dify-for-dsl" ["l"="50.626,22.14"]
"YFGaia/dify-plus" ["l"="50.632,22.175"]
"hanfangyuan4396/dify-on-wechat" ["l"="50.565,22.836"]
"osanseviero/InstantCoder" ["l"="41.333,0.244"]
"corbt/agent.exe" ["l"="41.116,0.186"]
"OpenBB-finance/OpenBB" ["l"="-8.778,12.545"]
"mckaywrigley/mckays-app-template" ["l"="41.487,0.149"]
"sullyo/webapp-starter" ["l"="41.581,0.094"]
"mckaywrigley/o1-pro-template-system" ["l"="41.64,0.201"]
"ansh/template-2" ["l"="41.715,0.082"]
"ShenSeanChen/launch-mvp-stripe-nextjs-supabase" ["l"="41.622,0.065"]
"eyaltoledano/claude-task-master" ["l"="41.241,-0.146"]
"yeongpin/cursor-free-vip" ["l"="40.913,-0.414"]
"yuaotian/go-cursor-help" ["l"="45.891,0.799"]
"coleam00/local-ai-packaged" ["l"="41.453,-0.067"]
"coleam00/Archon" ["l"="41.259,0.051"]
"coleam00/mcp-crawl4ai-rag" ["l"="41.496,-0.05"]
"coleam00/mcp-mem0" ["l"="41.503,-0.071"]
"upstash/context7" ["l"="41.263,-0.125"]
"daveebbelaar/ai-cookbook" ["l"="27.311,-30.133"]
"coleam00/ollama-swarm" ["l"="41.489,-0.028"]
"deepseek-ai/DeepSeek-VL2" ["l"="39.076,-0.814"]
"black-forest-labs/flux" ["l"="33.314,33.013"]
"Wan-Video/Wan2.1" ["l"="33.229,33.013"]
"Tencent/HunyuanVideo" ["l"="33.22,32.974"]
"deepseek-ai/FlashMLA" ["l"="39.083,-0.682"]
"astral-sh/uv" ["l"="44.628,20.584"]
"opencode-ai/opencode" ["l"="41.326,-0.17"]
"nari-labs/dia" ["l"="38.382,1.657"]
"MinishLab/vicinity" ["l"="41.282,0.886"]
"jxmorris12/cde" ["l"="41.317,1.083"]
"TusKANNy/seismic" ["l"="-0.909,3.882"]
"mixedbread-ai/mxbai-rerank" ["l"="41.225,1.048"]
"AnswerDotAI/fastkmeans" ["l"="41.276,1.029"]
"HKUDS/MiniRAG" ["l"="41.27,0.479"]
"funstory-ai/BabelDOC" ["l"="41.124,-0.283"]
"jingyaogong/minimind" ["l"="38.662,-1.9"]
"meta-llama/llama-models" ["l"="40.506,0.452"]
"meta-llama/llama-stack-apps" ["l"="40.8,0.448"]
"facebookresearch/sam2" ["l"="48.908,29.989"]
"meta-llama/PurpleLlama" ["l"="38.137,-7.457"]
"simplescaling/s1" ["l"="37.103,-0.537"]
"ictnlp/LLaMA-Omni" ["l"="38.479,1.902"]
"Standard-Intelligence/hertz-dev" ["l"="38.458,1.932"]
"gpt-omni/mini-omni" ["l"="50.866,2.845"]
"win4r/GraphRAG4OpenWebUI" ["l"="41.423,0.705"]
"karthik-codex/Autogen_GraphRAG_Ollama" ["l"="41.401,0.654"]
"Ikaros-521/GraphRAG-Ollama-UI" ["l"="41.398,0.716"]
"zilliztech/deep-searcher" ["l"="41.204,0.047"]
"pydantic/logfire" ["l"="44.886,21.157"]
"pydantic/pydantic" ["l"="44.75,20.746"]
"SamuelSchmidgall/AgentLaboratory" ["l"="41.154,0.089"]
"google/A2A" ["l"="41.044,-0.092"]
"google/adk-python" ["l"="41.085,0.037"]
"JoshuaC215/agent-service-toolkit" ["l"="41.36,0.303"]
"FareedKhan-dev/all-rag-techniques" ["l"="41.323,0.386"]
"SaiAkhil066/DeepSeek-RAG-Chatbot" ["l"="41.406,0.233"]
"glanceapp/glance" ["l"="12.59,-9.191"]
"nickscamara/open-deep-research" ["l"="41.192,0.013"]
"OpenGVLab/InternVL" ["l"="47.362,29.955"]
"RapidAI/RapidOCR" ["l"="45.783,2.557"]
"modelscope/FunASR" ["l"="38.511,1.579"]
"Ucas-HaoranWei/Vary" ["l"="47.281,30.013"]
"CosmosShadow/GeneralAgent" ["l"="36.817,-2.109"]
"jbilcke-hf/clapper" ["l"="45.748,-1.797"]
"adithya-s-k/marker-api" ["l"="45.542,0.383"]
"johnbean393/Sidekick" ["l"="41.46,0.041"]
"LearningCircuit/local-deep-research" ["l"="41.34,0.043"]
"synth-inc/onit" ["l"="41.538,0.106"]
"magnitudedev/magnitude" ["l"="41.431,0.095"]
"bknd-io/bknd" ["l"="16.412,-10.338"]
"vinceanalytics/vince" ["l"="16.433,-10.267"]
"ibttf/interview-coder" ["l"="40.993,-0.183"]
"Ornithopter-pilot/interview-coder-withoupaywall-opensource" ["l"="45.761,-0.428"]
"openai/codex" ["l"="41.035,-0.156"]
"mindverse/Second-Me" ["l"="41.012,-0.211"]
"exa-labs/company-researcher" ["l"="41.509,0.145"]
"FoloUp/FoloUp" ["l"="41.537,0.139"]
"exa-labs/exa-deepseek-chat" ["l"="41.504,0.122"]
"ammaarreshi/Gemini-Search" ["l"="45.615,0.469"]
"SteveSuv/remix-words-funny" ["l"="45.572,-0.565"]
"panda-sandeep/epigram" ["l"="41.587,0.179"]
"wisupai/e2m" ["l"="41.456,0.213"]
"cloudflare/agents" ["l"="-5.143,-27.523"]
"huggingface/yourbench" ["l"="38.448,-0.539"]
"huggingface/search-and-learn" ["l"="37.259,-0.438"]
"huggingface/picotron" ["l"="38.896,-0.25"]
"Integuru-AI/Integuru" ["l"="41.17,0.152"]
"microsoft/playwright-mcp" ["l"="41.144,-0.222"]
"Developer-MultiGroup/DMG-Data-Science-Awesome" ["l"="42.144,0.173"]
"atilsamancioglu/LanguageModel" ["l"="42.275,0.122"]
"mstrYoda/ml-from-scratch" ["l"="42.24,0.152"]
"KardelRuveyda/gemini-devmultigroup-example" ["l"="42.251,0.125"]
"enesmanan/feedback-agent" ["l"="42.176,0.156"]
"CopilotKit/open-research-ANA" ["l"="41.636,0.38"]
"superagent-ai/reag" ["l"="41.477,0.227"]
"lfnovo/open-notebook" ["l"="41.368,0.194"]
"Azzedde/paper_to_podcast" ["l"="41.501,0.442"]
"daijro/camoufox" ["l"="47.328,21.53"]
"TEN-framework/ten_framework.bak" ["l"="41.361,-0.014"]
"PragmaticMachineLearning/docai" ["l"="41.446,0.618"]
"langchain-ai/memory-template" ["l"="41.655,0.381"]
"langchain-ai/memory-agent" ["l"="41.689,0.407"]
"abus-aikorea/voice-pro" ["l"="41.174,-0.313"]
"Kedreamix/Linly-Dubbing" ["l"="45.7,-1.728"]
"SWivid/F5-TTS" ["l"="38.517,1.654"]
"mistweaverco/bananas" ["l"="16.41,-10.203"]
"hexgrad/kokoro" ["l"="38.452,1.716"]
"open-mmlab/Amphion" ["l"="38.531,1.714"]
"modstart-lib/aigcpanel" ["l"="32.359,30.349"]
"Zyphra/Zonos" ["l"="38.484,1.706"]
"bytedance/LatentSync" ["l"="32.248,30.34"]
"Doriandarko/o1-engineer" ["l"="41.171,0.221"]
"modelcontextprotocol/inspector" ["l"="41.242,3.11"]
"punkpeye/fastmcp" ["l"="41.316,3.131"]
"modelcontextprotocol/modelcontextprotocol" ["l"="41.16,-0.149"]
"GLips/Figma-Context-MCP" ["l"="41.231,-0.228"]
"github/github-mcp-server" ["l"="41.127,-0.18"]
"AgentDeskAI/browser-tools-mcp" ["l"="41.287,-0.177"]
"WEIFENG2333/VideoCaptioner" ["l"="45.521,-1.726"]
"linyqh/NarratoAI" ["l"="45.732,-1.719"]
"FunAudioLLM/CosyVoice" ["l"="38.469,1.621"]
"timescale/pgvectorscale" ["l"="3.895,13.427"]
"fastrepl/hyprnote" ["l"="41.35,-0.044"]
"cloudflare/mcp-server-cloudflare" ["l"="41.411,-0.081"]
"microsoft/BitNet" ["l"="40.624,0.115"]
"facebookresearch/lingua" ["l"="38.781,-0.413"]
"aipotheosis-labs/aci-mcp" ["l"="41.482,-0.254"]
"readest/readest" ["l"="-49.126,12.874"]
"guaguastandup/zotero-pdf2zh" ["l"="45.716,-0.351"]
"oomol-lab/pdf-craft" ["l"="46.425,-0.704"]
"u14app/deep-research" ["l"="45.674,0.566"]
"xxnuo/MTranServer" ["l"="46.37,-0.669"]
"cheahjs/free-llm-api-resources" ["l"="41.004,0.149"]
"zukixa/cool-ai-stuff" ["l"="46.326,1.423"]
"cloudcommunity/Cloud-Free-Tier-Comparison" ["l"="7.139,-19.401"]
"e2b-dev/surf" ["l"="41.544,0.275"]
"e2b-dev/ai-analyst" ["l"="41.625,0.292"]
"ranpox/awesome-computer-use" ["l"="36.757,-1.545"]
"Ryubing/Ryujinx" ["l"="-13.814,1.241"]
"David-patrick-chuks/Instagram-AI-Agent" ["l"="41.277,0.105"]
"langchain-ai/langchain-academy" ["l"="41.408,0.352"]
"langchain-ai/langchain-mcp-adapters" ["l"="41.412,0.259"]
"googleapis/genai-toolbox" ["l"="41.435,0.305"]
"googleapis/mcp-toolbox-sdk-python" ["l"="41.526,0.279"]
"langchain-ai/langgraph-swarm-py" ["l"="41.501,0.33"]
"google/adk-samples" ["l"="41.262,0.147"]
"langchain-ai/mcpdoc" ["l"="41.578,0.431"]
"langchain-ai/langmem" ["l"="41.558,0.345"]
"esxr/langgraph-mcp" ["l"="41.526,0.342"]
"langchain-ai/langgraph-reflection" ["l"="41.543,0.345"]
"huggingface/agents-course" ["l"="40.769,0.119"]
"SmartBNBGuy/How-to-Create-Honeypot-Token" ["l"="16.66,-10.781"]
"Faceplugin-ltd/FaceRecognition-Android" ["l"="-13.543,29.64"]
"VedankPurohit/LiveRecall" ["l"="41.988,0.172"]
"DonTizi/ReMind" ["l"="42.869,1.682"]
"thebookisclosed/AmperageKit" ["l"="-49.916,9.307"]
"xaitax/TotalRecall" ["l"="-45.073,-33.855"]
"evomi/mobile-proxies-instructions" ["l"="41.951,0.204"]
"evomi/residential-proxies-instructions" ["l"="41.985,0.2"]
"CodingWonders/DISMTools" ["l"="-49.804,9.76"]
"trustgraph-ai/trustgraph" ["l"="41.458,0.476"]
"superlinear-ai/substrate" ["l"="45.395,21.21"]
"reflex-dev/reflex-llm-examples" ["l"="41.476,0.254"]
"6677-ai/tap4-ai-webui" ["l"="45.377,-0.778"]
"lihuithe/podlm-public" ["l"="45.424,-0.577"]
"all-in-aigc/melodisco" ["l"="45.339,-0.784"]
"itsOwen/CyberScraper-2077" ["l"="41.221,0.271"]
"qiayue/GitBase" ["l"="45.373,-0.794"]
"yaakua/ai-outpainting-com" ["l"="45.354,-0.794"]
"taylorai/aiq" ["l"="41.338,0.656"]
"vlm-run/vlmrun-cookbook" ["l"="40.581,5.922"]
"desgeeko/pdfsyntax" ["l"="40.27,5.68"]
"aotakeda/learn-thing" ["l"="40.238,5.898"]
"AutoMQ/automq" ["l"="-55.366,-13.118"]
"amazon-science/RefChecker" ["l"="37.589,-6.874"]
"TIGER-AI-Lab/LongRAG" ["l"="41.259,0.923"]
"IntelLabs/RAG-FiT" ["l"="41.337,0.637"]
"bbruceyuan/Hands-On-Large-Language-Models-CN" ["l"="38.677,-2.089"]
"langchain-ai/executive-ai-assistant" ["l"="41.423,0.282"]
"togethercomputer/open_deep_research" ["l"="41.234,2.779"]
"philschmid/gemini-samples" ["l"="41.486,0.34"]
"Nutlope/loras-dev" ["l"="41.46,0.281"]
"Nutlope/picMenu" ["l"="41.466,0.343"]
"rmusser01/tldw" ["l"="42.813,1.737"]
"thepersonalaicompany/amurex" ["l"="41.337,0.084"]
"satvik314/opensource_notebooklm" ["l"="41.604,0.197"]
"NanGePlus/CrewAIFlowsFullStack" ["l"="41.762,1.006"]
"NanGePlus/CrewAITest" ["l"="41.784,1.031"]
"NanGePlus/PromptLangChainTest" ["l"="41.656,0.931"]
"NanGePlus/CrewAIFullstackTest" ["l"="41.801,1.032"]
"av/harbor" ["l"="42.789,1.712"]
"albertocubeddu/extensionOS" ["l"="41.348,0.563"]
"whyhow-ai/knowledge-table" ["l"="53.583,15.108"]
"whyhow-ai/recursive-retrieval" ["l"="53.559,15.071"]
"whyhow-ai/schemas" ["l"="53.534,15.085"]
"punnerud/Local_Knowledge_Graph" ["l"="41.602,0.729"]
"bytefer/ollama-ocr" ["l"="42.599,20.414"]
"swark-io/swark" ["l"="41.456,0.235"]
"ag2ai/build-with-ag2" ["l"="39.992,-2.174"]
"ag2ai/fastagency" ["l"="39.964,-2.146"]
"autogenhub/autogen" ["l"="39.982,-2.199"]
"it-ebooks-0/geektime-books" ["l"="-4.739,17.202"]
"latitude-dev/latitude" ["l"="16.281,-10.112"]
"Openpanel-dev/openpanel" ["l"="16.242,-10.164"]
"lecca-digital/lecca-io" ["l"="42.085,0.59"]
"opendatalab/DocLayout-YOLO" ["l"="46.421,5.954"]
"opendatalab/labelU" ["l"="49.607,29.499"]
"opendatalab/magic-doc" ["l"="49.647,29.539"]
"kodu-ai/claude-coder" ["l"="41.071,0.122"]
"HumeAI/hume-evi-next-js-starter" ["l"="41.476,0.714"]
"vercel-labs/ai-sdk-preview-use-object" ["l"="41.484,0.692"]
"xjdr-alt/entropix" ["l"="38.785,-0.321"]
"CodeGuide-dev/codeguide-starter-lite" ["l"="41.728,0.04"]
"kleneway/next-ai-starter" ["l"="42.171,2.177"]
"rbrown101010/landingpage" ["l"="41.793,0.067"]
"kleneway/awesome-cursor-mpc-server" ["l"="42.192,2.198"]
"michaelshimeles/nextjs-starter-kit" ["l"="-3.407,-30.333"]
"lllyasviel/Omost" ["l"="33.45,30.954"]
"fate-ubw/RAGLAB" ["l"="41.344,0.748"]
"GAIR-NLP/OpenResearcher" ["l"="37.538,-0.475"]
"opea-project/GenAIComps" ["l"="64.124,-2.362"]
"plageon/HtmlRAG" ["l"="59.037,22.936"]
"OpenBMB/IoA" ["l"="41.394,0.605"]
"hhhuang/CAG" ["l"="41.344,0.478"]
"decodingml/tabular-semantic-search-tutorial" ["l"="41.368,0.692"]
"neural-maze/philoagents-course" ["l"="41.37,0.605"]
"decodingml/articles-code" ["l"="38.414,-0.888"]
"ShawhinT/AI-Builders-Bootcamp-1" ["l"="41.391,0.836"]
"HadeelAls618/electricity_demand_predictor" ["l"="48.087,26.77"]
"Paulescu/kubernetes-for-ml-engineers" ["l"="48.144,26.913"]
"Paulescu/incremental-ml-training-and-serving" ["l"="41.37,0.784"]
"camel-ai/oasis" ["l"="41.358,0.095"]
"tsinghua-fib-lab/AgentSociety" ["l"="52.166,17.102"]
"FudanDISC/SocialAgent" ["l"="52.109,17.098"]
"tencent-ailab/persona-hub" ["l"="37.272,-0.336"]
"camel-ai/loong" ["l"="16.746,-10.081"]
"pontusab/directories" ["l"="41.299,-0.118"]
"languine-ai/languine" ["l"="-3.591,-30.218"]
"serafimcloud/21st" ["l"="-3.562,-30.227"]
"bmadcode/cursor-custom-agents-rules-generator" ["l"="41.353,-0.224"]
"piotrkulpinski/openalternative" ["l"="16.339,-10.179"]
"browserbase/mcp-server-browserbase" ["l"="41.428,-0.094"]
"mendableai/firecrawl-mcp-server" ["l"="41.395,-0.13"]
"zcaceres/markdownify-mcp" ["l"="41.51,-0.024"]
"executeautomation/mcp-playwright" ["l"="41.312,-0.146"]
"BrowserMCP/mcp" ["l"="41.467,-0.041"]
"21st-dev/magic-mcp" ["l"="41.412,-0.157"]
"Saik0s/mcp-browser-use" ["l"="41.394,2.926"]
"co-browser/browser-use-mcp-server" ["l"="41.424,2.927"]
"graphlit/graphlit-mcp-server" ["l"="41.411,2.96"]
"elevenlabs/elevenlabs-mcp" ["l"="41.435,-0.115"]
"daodao97/chatmcp" ["l"="41.228,3.164"]
"Steven-Luo/MasteringRAG" ["l"="38.692,-1.723"]
"lamm-mit/SciAgentsDiscovery" ["l"="37.625,-0.547"]
"mbarinov/repogpt" ["l"="41.609,0.525"]
"saurabhlalsaxena/Perplexity-Clone-v0.1" ["l"="41.562,0.542"]
"deep-diver/paper-reviewer" ["l"="41.762,0.349"]
"gabrielchua/daily-ai-papers" ["l"="41.881,0.364"]
"langchain-ai/react-voice-agent" ["l"="42.886,-1.257"]
"Azure-Samples/aoai-realtime-audio-sdk" ["l"="-44.489,7.204"]
"openai/openai-realtime-twilio-demo" ["l"="42.883,-1.18"]
"livekit-examples/realtime-playground" ["l"="42.817,-1.287"]
"twilio-samples/speech-assistant-openai-realtime-api-node" ["l"="42.881,-1.212"]
"dynamiq-ai/dynamiq" ["l"="42.088,0.461"]
"iterative/datachain" ["l"="41.107,0.601"]
"iterative/dvc" ["l"="45.319,25.9"]
"pyper-dev/pyper" ["l"="44.952,21.299"]
"drasi-project/drasi-platform" ["l"="40.289,5.866"]
"iterative/terraform-provider-iterative" ["l"="45.007,25.77"]
"dleemiller/WordLlama" ["l"="41.215,0.72"]
"mark3labs/mcp-go" ["l"="41.297,-0.288"]
"metoro-io/mcp-golang" ["l"="-3.957,24.053"]
"tmc/langchaingo" ["l"="3.946,-9.305"]
"cloudwego/eino" ["l"="3.617,-9.155"]
"mark3labs/mcphost" ["l"="41.279,3.152"]
"openai/openai-go" ["l"="4.092,-9.404"]
"sashabaranov/go-openai" ["l"="3.796,-9.18"]
"ThinkInAIXYZ/go-mcp" ["l"="41.283,-0.378"]
"hibiken/asynq" ["l"="3.754,-9.022"]
"sourcegraph/conc" ["l"="4.106,-8.937"]
"samber/lo" ["l"="3.926,-9.071"]
"bytedance/sonic" ["l"="3.671,-8.798"]
"ezyang/codemcp" ["l"="42.072,2.343"]
"anaisbetts/mcp-installer" ["l"="41.381,3.09"]
"oraios/serena" ["l"="42.079,2.299"]
"drmingler/docling-api" ["l"="41.769,0.421"]
"chonkie-inc/chonkie" ["l"="41.44,0.267"]
"HelixDB/helix-db" ["l"="41.487,0.191"]
"airweave-ai/airweave" ["l"="41.509,0.21"]
"Operative-Sh/web-eval-agent" ["l"="41.465,0.159"]
"authed-dev/authed" ["l"="41.494,0.203"]
"Fosowl/agenticSeek" ["l"="41.361,0.028"]
"cocoindex-io/cocoindex" ["l"="41.409,0.197"]
"langchain-ai/company-researcher" ["l"="41.567,0.388"]
"vinay-gatech/stocks-insights-ai-agent" ["l"="41.531,0.374"]
"CopilotKit/open-multi-agent-canvas" ["l"="41.545,0.38"]
"mlop-ai/mlop" ["l"="41.506,0.191"]
"getprobo/probo" ["l"="41.521,0.197"]
"JasonGross/autoformalization-transpilation" ["l"="41.514,0.184"]
"The-LLM-Data-Company/doteval" ["l"="41.52,0.181"]
"blaxel-ai/sdk-python" ["l"="41.53,0.18"]
"attunehq/attune" ["l"="41.592,0.163"]
"starslingdev/starsling" ["l"="41.516,0.227"]
"Not-Diamond/awesome-ai-model-routing" ["l"="41.795,0.747"]
"Not-Diamond/RoRF" ["l"="41.843,0.785"]
"Not-Diamond/notdiamond-python" ["l"="41.829,0.775"]
"mckaywrigley/ai-router-chat" ["l"="41.691,0.672"]
"daveshap/raspberry_experiments" ["l"="40.837,0.845"]
"antibitcoin/ReflectionAnyLLM" ["l"="42.867,1.752"]
"daveshap/BurnoutRecoveryIndex" ["l"="40.844,0.879"]
"DataBassGit/o7" ["l"="40.849,0.835"]
"easychen/ai-self-coding-book" ["l"="45.597,-0.802"]
"ZJU-LLMs/Foundations-of-LLMs" ["l"="38.628,-1.942"]
"Circuit-Digest/ESP-Drone" ["l"="-17.094,-42.909"]
"udlbook/udlbook" ["l"="47.653,26.328"]
"zuruoke/watermark-removal" ["l"="-34.123,22.445"]
"jingyaogong/minimind-v" ["l"="38.736,-2.042"]
"LLMBook-zh/LLMBook-zh.github.io" ["l"="38.636,-1.987"]
"valeman/Awesome_Math_Books" ["l"="43.79,26.169"]
"chartdb/chartdb" ["l"="16.002,-10.48"]
"langchain-ai/langgraph-bigtool" ["l"="41.578,0.345"]
"langchain-ai/openevals" ["l"="41.548,0.33"]
"langchain-ai/langgraph-codeact" ["l"="41.545,0.359"]
"langchain-ai/agentevals" ["l"="41.592,0.329"]
"langchain-ai/lang-memgpt" ["l"="41.588,0.465"]
"whitew1994WW/GraphRAG" ["l"="41.601,0.87"]
"zamalali/DeepGit" ["l"="41.552,0.404"]
"NicholasGoh/fastapi-mcp-langgraph-template" ["l"="41.514,0.408"]
"Deluxer/oliva" ["l"="41.524,0.396"]
"souvikmajumder26/Multi-Agent-Medical-Assistant" ["l"="41.507,0.421"]
"swarmzero/swarmzero" ["l"="42.163,0.536"]
"swarmzero/examples" ["l"="42.186,0.564"]
"InternLM/InternLM" ["l"="38.916,-1.913"]
"InternLM/xtuner" ["l"="38.848,-1.888"]
"win4r/MoA" ["l"="45.619,0.362"]
"human-substrate/Substrate" ["l"="41.873,0.778"]
"danielmiessler/Telos" ["l"="41.932,0.805"]
"danielmiessler/Daemon" ["l"="41.948,0.817"]
"danielmiessler/Frames" ["l"="41.915,0.788"]
"iruletheworldmo/strawberry" ["l"="41.136,0.428"]
"BASI-LABS/parseltongue" ["l"="-22.096,-20.691"]
"NousResearch/DisTrO" ["l"="38.669,-0.176"]
"turing-machines/mentals-ai" ["l"="43.014,1.922"]
"NexaAI/nexa-sdk" ["l"="51.272,2.78"]
"AIxHunter/FileWizardAI" ["l"="42.841,1.689"]
"different-ai/note-companion" ["l"="-35.167,17.127"]
"Kiln-AI/Kiln" ["l"="41.055,0.023"]
"ConardLi/easy-dataset" ["l"="40.664,-0.111"]
"kvcache-ai/ktransformers" ["l"="39.101,-0.742"]
"getAsterisk/deepclaude" ["l"="41.18,-0.115"]
"NPC-Worldwide/npcpy" ["l"="42.674,1.8"]
"snagasuri/deebo-prototype" ["l"="42.066,2.279"]
"SecretiveShell/MCP-Bridge" ["l"="41.263,3.097"]
"multimodal-art-projection/YuE" ["l"="38.652,2.018"]
"GoogleCloudPlatform/agent-starter-pack" ["l"="41.236,0.17"]
"openshift/microshift" ["l"="7.39,-9.552"]
"ublue-os/bluefin" ["l"="-17.046,-2.892"]
"podman-desktop/podman-desktop" ["l"="8.249,-8.691"]
"google/meridian" ["l"="43.684,25.756"]
"containers/toolbox" ["l"="-16.99,-2.773"]
"RedHatDemos/SecurityDemos" ["l"="10.589,-11.464"]
"osbuild/bootc-image-builder" ["l"="-17.003,-2.855"]
"karmab/kcli" ["l"="10.492,-11.343"]
"vercel-labs/ai-sdk-flags-edge-config" ["l"="41.494,0.671"]
"deepset-ai/rag-with-nvidia-nims" ["l"="41.835,-0.279"]
"huggingface/local-gemma" ["l"="41.405,-0.006"]
"keras-team/keras-hub" ["l"="45.728,25.691"]
"GoogleCloudPlatform/genai-databases-retrieval-app" ["l"="44.784,16.2"]
"bracesproul/gen-ui" ["l"="41.584,0.576"]
"bklieger-groq/stockbot-on-groq" ["l"="41.421,0.39"]
"harry0703/AudioNotes" ["l"="45.531,-0.571"]
"raznem/parsera" ["l"="41.36,0.413"]
"SomeOddCodeGuy/WilmerAI" ["l"="42.842,1.71"]
"qx-labs/agents-deep-research" ["l"="42.63,1.801"]
"weavel-ai/Ape" ["l"="45.567,-0.978"]
"kkangert/kspider" ["l"="-55.345,-11.299"]
"zhulu111/ComfyUI_Bxb" ["l"="32.694,32.96"]
"supabase-community/babelfish.ai" ["l"="41.428,0.359"]
"ViggoZ/producthunt-daily-hot" ["l"="45.394,-0.728"]
"wan-h/awesome-digital-human-live2d" ["l"="32.335,30.369"]
"cs-lazy-tools/ChatGPT-On-CS" ["l"="50.493,22.84"]
"panoratech/Panora" ["l"="16.158,-10.044"]
"freestyle-sh/cloudstate" ["l"="3.566,12.893"]
"ssoready/ssoready" ["l"="3.763,12.914"]
"pretzelai/pretzelai" ["l"="3.735,12.998"]
"feizc/FluxMusic" ["l"="38.657,2.069"]
"1mrat/cursor" ["l"="41.506,0.292"]
"grp06/cursor-boost" ["l"="41.582,0.218"]
"Codehagen/propdock" ["l"="-2.981,-31.082"]
"RayFernando1337/MLX-Auto-Subtitled-Video-Generator" ["l"="27.622,-21.016"]
"Doriandarko/RAT-retrieval-augmented-thinking" ["l"="41.45,0.157"]
"Azzedde/brainstormers" ["l"="41.562,0.52"]
"btahir/open-deep-research" ["l"="41.286,0.048"]
"mshumer/OpenDeepResearcher" ["l"="41.294,0.07"]
"harvard-lil/warc-gpt" ["l"="41.299,0.984"]
"PaulPauls/llama3_interpretability_sae" ["l"="37.918,-6.968"]
"opendatahub-io/llama-stack-demos" ["l"="42.315,0.261"]
"NVIDIA-AI-Blueprints/multimodal-pdf-data-extraction" ["l"="41.602,0.045"]
"i-am-bee/acp" ["l"="41.843,0.306"]
"i-am-bee/bee-stack" ["l"="41.849,0.289"]
"i-am-bee/beeai-framework-ts-starter" ["l"="41.837,0.278"]
"i-am-bee/bee-ui" ["l"="41.835,0.291"]
"taishikato/chatsage" ["l"="41.757,0.115"]
"supavec/supavec" ["l"="41.653,0.145"]
"sinaptik-ai/panda-etl" ["l"="41.511,0.74"]
"thmsmlr/instructor_ex" ["l"="4.417,14.872"]
"harishdeivanayagam/rowfill" ["l"="41.592,0.241"]
"gcui-art/markdown-to-image" ["l"="45.558,-0.553"]
"mathieuprog/polymorphic_embed" ["l"="4.424,14.943"]
"adobe/elixir-styler" ["l"="4.48,14.954"]
"brainlid/langchain" ["l"="4.415,14.835"]
"YassKhazzan/openperplex_front" ["l"="41.432,0.527"]
"TheBlewish/Web-LLM-Assistant-Llamacpp-Ollama" ["l"="42.848,1.788"]
"langchain-ai/rag-research-agent-template" ["l"="41.718,0.421"]
"langchain-ai/retrieval-agent-template" ["l"="41.706,0.444"]
"langchain-ai/new-langgraph-project" ["l"="41.759,0.447"]
"langchain-ai/langgraph-fullstack-python" ["l"="41.628,0.4"]
"langchain-ai/data-enrichment" ["l"="41.704,0.418"]
"shaheryaryousaf/rag-voicebot" ["l"="41.758,0.614"]
"langchain-ai/task_mAIstro" ["l"="41.723,0.584"]
"MichaelYuhe/Artifacts-for-ChatGPT" ["l"="41.653,0.627"]
"ykyritsis/ChatGPT-code-preview" ["l"="41.633,0.631"]
"alexfazio/viral-clips-crew" ["l"="40.111,-2.01"]
"theyashwanthsai/Devyan" ["l"="40.1,-1.968"]
"the-convocation/twitter-scraper" ["l"="39.018,33.767"]
"elizaOS/characterfile" ["l"="-16.161,7.603"]
"elizaOS/agentmemory" ["l"="-16.155,7.624"]
"blorm-network/ZerePy" ["l"="-16.045,7.586"]
"elizaOS/eliza-starter" ["l"="-16.131,7.58"]
"inferablehq/inferable" ["l"="41.704,0.221"]
"kturung/colpali-llama-vision-rag" ["l"="41.591,0.371"]
"NVIDIA-AI-Blueprints/ai-virtual-assistant" ["l"="41.704,-0.048"]
"Ji-Cather/GraphAgent" ["l"="45.486,-0.275"]
"HKUDS/GraphAgent" ["l"="59.522,22.951"]
"chiphuyen/dmls-book" ["l"="48.038,26.356"]
"chiphuyen/ml-interviews-book" ["l"="48.067,26.32"]
"AnswerDotAI/MonsterUI" ["l"="41.73,1.048"]
"banditburai/daisyft" ["l"="41.771,1.084"]
"banditburai/ft-datastar" ["l"="41.762,1.073"]
"CarloLepelaars/fh-plotly" ["l"="41.759,1.099"]
"sentient-engineering/jobber" ["l"="41.599,0.299"]
"sentient-engineering/multi-agent-fsm" ["l"="41.569,0.359"]
"nischalj10/local-recall" ["l"="41.724,0.278"]
"feder-cr/resume_render_from_job_description" ["l"="25.963,-27.371"]
"specstoryai/getspecstory" ["l"="41.65,0.181"]
"xynehq/xyne" ["l"="41.612,0.172"]
"arkohut/pensieve" ["l"="41.613,0.251"]
"cosin2077/easyVoice" ["l"="46.364,-0.755"]
"chclt/oh-my-wechat" ["l"="25.894,-22.284"]
"Thytu/Agentarium" ["l"="41.404,0.371"]
"lalanikarim/webrtc-ai-voice-chat" ["l"="41.657,0.787"]
"daily-demos/daily-bots-web-demo" ["l"="41.621,0.763"]
"Finity-Alpha/OpenVoiceChat" ["l"="41.796,0.885"]
"eustlb/speech-to-speech" ["l"="41.755,0.846"]
"lifeiteng/OmniSenseVoice" ["l"="38.416,1.991"]
"collabora/WhisperFusion" ["l"="40.598,3.119"]
"lenML/Speech-AI-Forge" ["l"="45.691,-1.967"]
"Openmacro/openmacro" ["l"="41.423,0.466"]
"unixzii/ibackupextractor" ["l"="25.934,-22.386"]
"kermanx/reactive-vscode" ["l"="-7.518,-30.55"]
"antfu/qr-scanner-wechat" ["l"="-7.485,-30.517"]
"USTC-Hackergame/hackergame2024-writeups" ["l"="-5.098,20.409"]
"vue-vine/vue-vine" ["l"="-7.603,-30.363"]
"Lakr233/BBackupp" ["l"="25.973,-22.4"]
"vuejs/vue-vapor" ["l"="-7.556,-30.424"]
"project-trans/RLE-wiki" ["l"="-53.733,-19.56"]
"Lakr233/Asspp" ["l"="39.474,-22.057"]
"vue-terminal/vue-termui" ["l"="-7.455,-30.408"]
"molvqingtai/WebChat" ["l"="45.561,-0.604"]
"nolebase/integrations" ["l"="-42.665,16.089"]
"Doriandarko/Insanely-Fast-Transcription" ["l"="41.387,0.503"]
"appcypher/awesome-mcp-servers" ["l"="41.371,-0.179"]
"ppl-ai/modelcontextprotocol" ["l"="41.463,-0.113"]
"WujiangXu/AgenticMemory" ["l"="41.613,0.43"]
"supabase-community/database-build" ["l"="41.092,0.2"]
"useplunk/plunk" ["l"="16.249,-10.203"]
"electric-sql/electric" ["l"="-6.376,-28.381"]
"thepersonalaicompany/amurex-backend" ["l"="41.509,-0.164"]
"rishikanthc/Scriberr" ["l"="12.461,-8.552"]
"clusterzx/paperless-ai" ["l"="12.465,-8.682"]
"signerlabs/Klee" ["l"="42.668,1.852"]
"daya0576/beaverhabits" ["l"="12.461,-8.57"]
"crocodilestick/Calibre-Web-Automated" ["l"="12.444,-8.679"]
"DataExpert-io/llm-driven-data-engineering" ["l"="0.251,16.419"]
"SakanaAI/AI-Scientist-v2" ["l"="37.372,-0.585"]
"taichengguo/LLM_MultiAgents_Survey_Papers" ["l"="36.641,-2.348"]
"SalesforceAIResearch/AgentLite" ["l"="36.883,-1.337"]
"metauto-ai/GPTSwarm" ["l"="52.552,3.173"]
"SalesforceAIResearch/xLAM" ["l"="36.866,-1.358"]
"2-fly-4-ai/V0-system-prompt" ["l"="41.215,0.241"]
"sharkqwy/v0prompt" ["l"="41.445,0.071"]
"bklieger-groq/g1" ["l"="37.249,-0.585"]
"privastead/privastead" ["l"="40.388,5.811"]
"beac0n/ruroco" ["l"="3.921,12.745"]
"janwilmake/efficient-recorder" ["l"="41.574,0.322"]
"fal-ai-community/video-starter-kit" ["l"="41.475,0.115"]
"rbbydotdev/someday" ["l"="16.501,-10.305"]
"FormBee/FormBee" ["l"="16.498,-10.278"]
"gsidhu/buzee-tauri" ["l"="46.37,-0.78"]
"KoljaB/RealtimeVoiceChat" ["l"="41.487,0.051"]
"wild-card-ai/agents-json" ["l"="41.397,0.282"]
"DevER-M/yami" ["l"="-51.62,10.503"]
"Z-Gort/Reservoirs-Lab" ["l"="41.691,-0.028"]
"VectifyAI/PageIndex" ["l"="41.493,0.4"]
"dmayboroda/minima" ["l"="42.196,0.488"]
"XengShi/materialYouNewTab" ["l"="-52.162,9.439"]
"caspianmoon/memoripy" ["l"="42.783,1.773"]
"brucechou1983/chainlit_langgraph" ["l"="41.558,0.56"]
"mendableai/firecrawl-app-examples" ["l"="41.779,0.482"]
"langchain-ai/people-researcher" ["l"="7.427,-12.425"]
"CH563/shot-easy-website" ["l"="45.412,-0.694"]
"NVIDIA/ACE" ["l"="41.819,-0.208"]
"NVIDIA-AI-Blueprints/llm-router" ["l"="41.778,-0.118"]
"daily-co/nimble-pipecat" ["l"="41.778,-0.14"]
"NVIDIA-AI-Blueprints/vulnerability-analysis" ["l"="44.181,23.582"]
"NVIDIA-AI-Blueprints/video-search-and-summarization" ["l"="41.774,-0.157"]
"microsoft/KBLaM" ["l"="41.297,0.315"]
"dCaples/AutoDidact" ["l"="37.252,-0.621"]
"SakanaAI/self-adaptive-llms" ["l"="37.399,-0.602"]
"sentient-agi/OpenDeepSearch" ["l"="41.312,0.023"]
"facebookresearch/spiritlm" ["l"="38.442,2.008"]
"WhisperSpeech/WhisperSpeech" ["l"="38.594,1.796"]
"menloresearch/ichigo-demo" ["l"="41.3,0.293"]
"adoresever/DataGraphX_Learn" ["l"="41.604,0.904"]
"AI4WA/Docs2KG" ["l"="53.73,15.178"]
"klay-liu/tutorial-in-bilibili" ["l"="41.513,0.863"]
"NanGePlus/GraphRAGTestV040" ["l"="41.548,0.862"]
"NanGePlus/KagTest" ["l"="41.579,0.877"]
"NanGePlus/RagLangChainTest" ["l"="41.681,0.961"]
"wade1010/graphrag-ui" ["l"="41.473,0.767"]
"guoyao/graphrag-more" ["l"="41.568,0.863"]
"NanGePlus/LightRAGTest" ["l"="41.577,0.951"]
"NanGePlus/LLMTest" ["l"="41.752,1.019"]
"NanGePlus/LangFlowTest" ["l"="41.733,1.002"]
"NanGePlus/HaystackTest" ["l"="41.715,0.989"]
"ZB052-A/LightRAG-Deepseek-Test" ["l"="41.619,1.011"]
"huggingface/transformers.js-examples" ["l"="41.674,0.699"]
"FPiasecki2/ShellScript" ["l"="41.737,0.75"]
"AgentScript-AI/agentscript" ["l"="41.795,0.204"]
"differentialhq/differential" ["l"="41.823,0.176"]
"composecraft/composecraft" ["l"="12.398,-8.51"]
"farshed/sage" ["l"="41.171,3.276"]
"cheeselemon/ophiuchi-desktop" ["l"="16.383,-10.274"]
"gotohuman/gotohuman-langgraph-lead-example" ["l"="41.589,0.483"]
"langchain-ai/llmanager" ["l"="41.659,0.401"]
"zaidmukaddam/scira-mcp-chat" ["l"="41.589,0.071"]
"ymichael/open-codex" ["l"="41.412,0.024"]
"exa-labs/exa-hallucination-detector" ["l"="41.571,0.011"]
"wong2/awesome-mcp-servers" ["l"="41.371,3.111"]
"punkpeye/awesome-mcp-clients" ["l"="41.248,3.14"]
"chatmcp/mcpso" ["l"="45.349,-0.723"]
"langchain-ai/langgraphjs-gen-ui-examples" ["l"="41.562,0.417"]
"lgesuellip/langgraph-whatsapp-agent" ["l"="41.53,0.427"]
"zamalali/InboxHero" ["l"="41.591,0.422"]
"labdmitriy/llm-rag" ["l"="41.48,0.442"]
"ahmad2b/canvas-callback" ["l"="41.68,0.471"]
"ed-donner/llm_engineering" ["l"="41.412,0.62"]
"joanby/llm_engineering" ["l"="41.547,0.765"]
"ed-donner/agents" ["l"="41.524,0.723"]
"VoltAgent/voltagent" ["l"="41.433,0.172"]
"ed-donner/agentic" ["l"="41.527,0.751"]
"krishnaik06/Complete-Python-Bootcamp" ["l"="48.158,24.934"]
"aceliuchanghong/FAQ_Of_LLM_Interview" ["l"="38.689,-2.157"]
"KaihuaTang/Building-a-Small-LLM-from-Scratch" ["l"="38.565,-1.824"]
"DataTalksClub/llm-zoomcamp" ["l"="47.799,26.198"]
"jerhadf/linear-mcp-server" ["l"="41.612,-0.707"]
"tacticlaunch/mcp-linear" ["l"="41.547,-0.587"]
"cline/linear-mcp" ["l"="41.638,-0.757"]
"8090-inc/xrx-core" ["l"="41.67,0.561"]
"8090-inc/xrx-sample-apps" ["l"="41.744,0.598"]
"bklieger-groq/mathtutor-on-groq" ["l"="41.632,0.422"]
"karthik-codex/autogen_FEA" ["l"="41.459,0.724"]
"jasonkylelol/graphrag-chinese" ["l"="41.557,0.882"]
"modelcontextprotocol/docs" ["l"="41.124,3.191"]
"modelcontextprotocol/java-sdk" ["l"="45.924,2.285"]
"open-webui/mcpo" ["l"="41.14,3.069"]
"DannyMac180/meta-agent" ["l"="41.56,0.147"]
"evilsocket/nerve" ["l"="-44.902,-33.904"]
"svpino/alloy-voice-assistant" ["l"="41.212,0.435"]
"LlamaEdge/LlamaEdge" ["l"="-7.97,-8.057"]
"win4r/o1" ["l"="37.327,-0.819"]
"EtiennePerot/safe-code-execution" ["l"="41.041,3.113"]
"noworneverev/graphrag-api" ["l"="41.446,0.73"]
"MartianInGreen/OpenWebUI-Tools" ["l"="41.014,3.089"]
"ed-donner/choose_llm" ["l"="41.558,0.788"]
"modelscope/MemoryScope" ["l"="36.721,3.099"]
"zjunlp/OmniThink" ["l"="37.418,-0.667"]
"MoonshotAI/MoBA" ["l"="39.065,-0.332"]
"Warma10032/cyber-doctor" ["l"="41.656,1.001"]
"Ji-yutong/Intelligent-Q-A-System-for-Automotive-Knowledge" ["l"="41.642,0.984"]
"NannyML/nannyml" ["l"="45.214,26.062"]
"koaning/scikit-lego" ["l"="45.251,26.324"]
"mmschlk/shapiq" ["l"="43.754,26.234"]
"lamm-mit/GraphReasoning" ["l"="37.669,-0.565"]
"johnmai-dev/NotebookMLX" ["l"="27.662,-21.038"]
"marlaman/show-me" ["l"="41.503,0.488"]
"AnswerDotAI/fasthtml-example" ["l"="41.698,1.035"]
"AnswerDotAI/FastHTML-Gallery" ["l"="41.74,1.108"]
"maces/fastapi-htmx" ["l"="48.448,17.825"]
"AnswerDotAI/fh-about" ["l"="41.741,1.067"]
"AnswerDotAI/llms-txt" ["l"="41.686,0.842"]
"AnswerDotAI/fastcore" ["l"="49.36,28.567"]
"AnswerDotAI/fh-bootstrap" ["l"="41.715,1.07"]
"Nutlope/ai-search-engine" ["l"="41.432,0.427"]
"yapishu/icewalk" ["l"="41.866,0.515"]
"suvansh/ChromaAdaptEmbed" ["l"="41.406,0.954"]
"ALucek/QuicKB" ["l"="41.484,1.151"]
"ALucek/ppt2desc" ["l"="41.467,1.125"]
"ALucek/chunking-strategies" ["l"="41.399,0.967"]
"SamurAIGPT/AI-Youtube-Shorts-Generator" ["l"="37.127,33.872"]
"pen-ho/medical_knowledge_graph_app-master" ["l"="55.354,27.297"]
"michael-wzhu/ChatMed" ["l"="55.493,27.5"]
"zhengguanyu/KGB-RAG" ["l"="41.623,0.987"]
"answerlink/IntelliQ" ["l"="52.572,3.194"]
"MinishLab/tokenlearn" ["l"="41.29,0.839"]
"huggingface/text-clustering" ["l"="38.56,-0.481"]
"arcee-ai/DistillKit" ["l"="38.541,-0.299"]
"ibm-granite/granite-guardian" ["l"="41.982,0.413"]
"docling-project/docling-parse" ["l"="42.053,0.357"]
"rasbt/LLM-workshop-2024" ["l"="41.018,0.679"]
"rasbt/MachineLearning-QandAI-book" ["l"="47.636,26.42"]
"rasbt/pycon2024" ["l"="40.974,0.848"]
"rasbt/machine-learning-book" ["l"="47.73,26.361"]
"Lightning-AI/dl-fundamentals" ["l"="41.095,34.936"]
"droidrun/droidrun" ["l"="45.717,-0.453"]
"browserable/browserable" ["l"="41.557,0.089"]
"Scrapybara/scrapybara-cookbook" ["l"="41.781,0.119"]
"echohive42/AI-Data-Scientist-scores-top-1-percent-on-Kaggle" ["l"="41.679,0.189"]
"regenrek/codefetch" ["l"="41.664,0.21"]
"sshtunnelvision/MCP-LOGO-GEN" ["l"="41.666,0.13"]
"matheusd/pypaperbak" ["l"="40.966,-1.483"]
"RexanWONG/text-behind-image" ["l"="16.314,-10.038"]
"run-llama/voice-chat-pdf" ["l"="42.92,-1.209"]
"virgoone/next-money" ["l"="45.306,-0.785"]
"misbahsy/meetingmind" ["l"="42.971,-1.143"]
"jgravelle/Groqqle" ["l"="41.639,0.489"]
"jgravelle/groqcrawl" ["l"="41.653,0.468"]
"jgravelle/AutogroqAgent" ["l"="41.652,0.479"]
"jgravelle/StrawberryGroq" ["l"="41.664,0.466"]
"tonyoconnell/Groqqle" ["l"="41.679,0.51"]
"jgravelle/jPaste" ["l"="41.69,0.515"]
"jgravelle/OpenAI-AgentsSDK-GUI" ["l"="41.681,0.498"]
"jgravelle/AutoGrok" ["l"="41.718,0.52"]
"jgravelle/Grompt_plugin" ["l"="41.672,0.493"]
"chrschy/fact-finder" ["l"="41.545,0.717"]
"microsoft/MInference" ["l"="38.971,-0.326"]
"THUDM/LongBench" ["l"="38.005,-1.432"]
"THUDM/LongAlign" ["l"="37.992,-1.378"]
"dvlab-research/LongLoRA" ["l"="37.983,-1.5"]
"THUDM/LongCite" ["l"="38.054,-1.344"]
"mit-han-lab/duo-attention" ["l"="38.971,-0.271"]
"jquesnelle/yarn" ["l"="38.005,-1.472"]
"AllAboutAI-YT/real_time_website_b" ["l"="41.959,0.316"]
"stephengpope/no-code-architects-toolkit" ["l"="41.482,0.009"]
"Marvomatic/n8n-templates" ["l"="41.618,-0.132"]
"restyler/awesome-n8n" ["l"="41.579,-0.102"]
"gyoridavid/short-video-maker" ["l"="41.595,-0.123"]
"gyoridavid/ai_agents_az" ["l"="41.601,-0.096"]
"business-science/awesome-generative-ai-data-scientist" ["l"="41.432,0.329"]
"business-science/ai-data-science-team" ["l"="41.37,0.257"]
"business-science/free-ai-tips" ["l"="41.482,0.284"]
"business-science/pytimetk" ["l"="-8.958,12.929"]
"quant-science/sunday-quant-scientist" ["l"="-9.016,12.932"]
"PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" ["l"="-9.049,12.98"]
"business-science/free_r_tips" ["l"="40.452,35.5"]
"shcherbak-ai/contextgem" ["l"="41.493,0.23"]
"langwatch/scenario" ["l"="16.684,-10.101"]
"attentionmech/mav" ["l"="16.646,-10.087"]
"humanlayer/agentcontrolplane" ["l"="41.385,0.525"]
"zhentingqi/rStar" ["l"="37.279,-0.465"]
"trotsky1997/MathBlackBox" ["l"="37.3,-0.414"]
"maitrix-org/llm-reasoners" ["l"="37.235,-0.398"]
"nolly-studio/ai-chatbot-supabase" ["l"="41.799,0.155"]
"snarktank/ai-dev-tasks" ["l"="41.768,0.211"]
"mckaywrigley/o1-ai-playground" ["l"="41.647,0.333"]
"zorazrw/agent-workflow-memory" ["l"="36.778,-1.436"]
"thunlp/LEGENT" ["l"="64.619,3.655"]
"OpenBMB/ProAgent" ["l"="36.808,-2.184"]
"thunlp/Optima" ["l"="41.507,0.672"]
"thinkwee/iAgents" ["l"="41.524,0.77"]
"artnoage/Podcast" ["l"="41.701,0.537"]
"gensx-inc/gensx" ["l"="41.653,0.286"]
"orra-dev/orra" ["l"="41.791,0.288"]
"AgoraIO/openai-realtime-python" ["l"="42.83,-1.251"]
"AgoraIO/API-Examples" ["l"="62.01,-22.03"]
"pipecat-ai/pipecat-flows" ["l"="41.633,0.791"]
"pipecat-ai/smart-turn" ["l"="41.585,0.761"]
"pipecat-ai/pipecat-client-web" ["l"="41.612,0.788"]
"pipecat-ai/docs" ["l"="41.621,0.809"]
"pipecat-ai/open-sesame" ["l"="41.636,0.809"]
"pipecat-ai/gemini-multimodal-live-demo" ["l"="41.589,0.696"]
"McGill-NLP/llm2vec" ["l"="54.627,25.653"]
"Nutlope/self.so" ["l"="41.102,3.026"]
"argilla-io/spacy-wordnet" ["l"="52.408,25.505"]
"neural-maze/rick-llm" ["l"="41.467,0.544"]
"Alibaba-NLP/ViDoRAG" ["l"="46.417,24.8"]
"theworldofagents/Agentic-Reasoning" ["l"="37.327,-0.613"]
"noahshinn/reflexion" ["l"="36.75,-2.304"]
"13point5/gemini-cursor" ["l"="41.577,0.152"]
"showlab/ShowUI" ["l"="36.737,-1.552"]
"sammcj/llamalink" ["l"="41.86,0.102"]
"Les-El/Ollm-Bridge" ["l"="41.832,0.105"]
"sammcj/ingest" ["l"="41.891,0.111"]
"eelbaz/ollama-lmstudio-bridge" ["l"="41.816,0.119"]
"paulrobello/parllama" ["l"="41.911,0.078"]
"mckaywrigley/r1-automated-pr-example" ["l"="41.693,0.387"]
"mckaywrigley/repo-chat" ["l"="41.345,-3.734"]
"mckaywrigley/ai-brainstore" ["l"="41.32,-3.757"]
"mckaywrigley/prompts" ["l"="41.368,-3.781"]
"vercel-labs/ai-sdk-slackbot" ["l"="41.604,0.543"]
"andrewgcodes/repo2prompt" ["l"="41.674,0.529"]
"daily-demos/rtvi-client-android-demo" ["l"="41.625,0.741"]
"ai-bot-pro/achatbot" ["l"="41.672,0.818"]
"opensouls/philip-the-filereader" ["l"="41.591,0.549"]
"AnswerDotAI/gpu.cpp" ["l"="39.049,-0.139"]
"AllAboutAI-YT/claude-artifact-prompts" ["l"="41.971,0.308"]
"palico-ai/palico-ai" ["l"="16.65,-10.464"]
"rectanglehq/Shapeshift" ["l"="3.799,12.719"]
"postgresml/postgresml" ["l"="3.858,13.499"]
"taubyte/tau" ["l"="16.281,-10.352"]
"dorklyorg/dorkly" ["l"="41.31,0.821"]
"shegongku2024/TG_shegongku" ["l"="42.876,0.568"]
"DevHuxley/How-to-create-honeypot-token" ["l"="42.882,0.591"]
"3choff/FastWhisperAPI" ["l"="41.412,0.588"]
"gkamradt/QuickAgent" ["l"="42.946,-1.329"]
"vercel-labs/vercel-nav-demo" ["l"="41.54,0.785"]
"facebookresearch/blt" ["l"="37.409,-0.635"]
"PaymanAI/langman-examples" ["l"="41.557,0.508"]
"nirbar1985/ai-travel-agent" ["l"="41.557,0.492"]
"wonderwhy-er/bolt.myaibuilt.app_hosted-Bolt.New-oTToDev" ["l"="41.704,0.34"]
"jesuscopado/samantha-os1" ["l"="41.844,0.353"]
"sarthakrastogi/graph-rag" ["l"="41.524,0.812"]
"FlowTestAI/FlowTest" ["l"="41.337,0.902"]
"ruvnet/sparc" ["l"="42.01,2.112"]
"vintasoftware/medplum-chat-app" ["l"="41.741,1.271"]
"vintasoftware/django-ai-assistant" ["l"="48.663,17.699"]
"fixmydjango/fixmydjango" ["l"="6.442,-20.335"]
"CognosysAI/browser" ["l"="41.667,0.242"]
"clchinkc/stockchat" ["l"="41.73,0.167"]
"microsoft/MarS" ["l"="-8.964,12.644"]
"upstash/wikipedia-semantic-search" ["l"="41.578,0.499"]
"stripe/agent-toolkit" ["l"="41.46,-0.149"]
"ZubeidHendricks/youtube-mcp-server" ["l"="41.456,2.99"]
"thepersonalaicompany/amurex-web" ["l"="41.552,-0.224"]
"thedaviddias/indie-dev-toolkit" ["l"="41.883,1.101"]
"thedaviddias/llms-txt-hub" ["l"="41.843,1.04"]
"DracoR22/handi-cat_wallet-tracker" ["l"="42.444,-0.554"]
"vvizardev/telegram-wallet-tracking-bot-v1.0" ["l"="42.475,-0.547"]
"Glooring/SolanaTrackerBot" ["l"="42.457,-0.58"]
"1f1n/Dragon" ["l"="42.556,-0.622"]
"digbenjamins/SolanaWalletTracker" ["l"="42.122,-0.377"]
"YZYLAB/solana-trade-bot" ["l"="-17.205,8.124"]
"velocitybolt/open-extract" ["l"="41.526,0.702"]
"simonmysun/ell" ["l"="41.908,-0.123"]
"oluwatunmiisheii/react-smart-conditional" ["l"="42.372,0.407"]
"Emissary-Tech/legit-rag" ["l"="41.466,0.496"]
"lesteroliver911/contextual-doc-retrieval-opneai-reranker" ["l"="41.517,0.591"]
"lee88688/aider-composer" ["l"="41.511,0.465"]
"cartesia-ai/cartesia-python" ["l"="41.621,1.123"]
"neuml/rag" ["l"="42.86,1.821"]
"ajac-zero/example-rag-app" ["l"="41.534,0.59"]
"open-webui/openapi-servers" ["l"="41.09,3.083"]
"weAIDB/awsome-data-llm" ["l"="1.862,13.654"]
"john-adeojo/custom_websearch_agent" ["l"="41.591,0.594"]
"LangGraph-GUI/LangGraph-GUI-backend" ["l"="41.778,0.622"]
"kaymen99/langgraph-email-automation" ["l"="41.747,0.683"]
"p-e-w/arrows" ["l"="42.928,1.57"]
"DiscovAI/DiscovAI-search" ["l"="41.599,0.615"]
"Jing-yilin/E2M" ["l"="41.579,0.197"]
"federicotorrielli/BetterWhisperX" ["l"="7.574,-11.156"]
"mlc-ai/web-llm-chat" ["l"="40.343,0.924"]
"cfahlgren1/webllm-playground" ["l"="40.318,0.999"]
"mlc-ai/web-llm-assistant" ["l"="40.318,0.974"]
"hrishioa/wasm-ai" ["l"="40.295,1.011"]
"danielleyahalom/company-researcher" ["l"="41.569,0.686"]
"rocketseat-education/nlw-journey-react-native" ["l"="40.358,-0.928"]
"rocketseat-education/nlw-journey-devops" ["l"="40.342,-0.914"]
"rocketseat-education/nlw-journey-go" ["l"="40.331,-0.93"]
"tensorlakeai/indexify" ["l"="-44.353,6.559"]
"x011/SecretPixel" ["l"="-51.925,10.041"]
"vxfemboy/ghostport" ["l"="-51.548,10.426"]
"daytonaio/ai-enablement-stack" ["l"="41.528,-0.194"]
"daytonaio/sdk" ["l"="6.563,-8.867"]
"alebeck/boring" ["l"="42.489,-0.778"]
"andrearaponi/dito" ["l"="42.542,-0.825"]
"byawitz/ggh" ["l"="-12.918,-6.936"]
"laktak/zfind" ["l"="3.946,12.779"]
"destel/rill" ["l"="4.363,-8.944"]
"coder/wush" ["l"="42.399,-0.707"]
"Lifailon/lazyjournal" ["l"="-12.884,-6.926"]
"bracesproul/site-rag" ["l"="41.805,0.549"]
"argilla-io/synthetic-data-generator" ["l"="38.334,-0.58"]
"gan/glm4v-assistant" ["l"="41.177,0.556"]
"microsoft/Trace" ["l"="41.36,0.627"]
"gradio-app/openai-gradio" ["l"="40.966,1.08"]
"gradio-app/anthropic-gradio" ["l"="40.943,1.141"]
"jgravelle/PocketgroqPKE" ["l"="41.65,0.489"]
"Lesterpaintstheworld/terminal-velocity" ["l"="41.449,0.349"]
"Lesterpaintstheworld/kinos" ["l"="41.65,0.36"]
"DigitalKin-ai/kinos" ["l"="41.633,0.352"]
"adamwlarson/ai-book-writer" ["l"="41.673,0.356"]
"hrishioa/mandark" ["l"="41.442,0.92"]
"suzgunmirac/meta-prompting" ["l"="51.334,26.483"]
"charliermarsh/whisper.cpp-cli" ["l"="3.777,13.161"]
"ibm-granite-community/granite-retrieval-agent" ["l"="42.322,0.217"]
"ibm-granite/granite-3.1-language-models" ["l"="42.36,0.211"]
"bklieger-groq/NotebookLlama-Groq" ["l"="42.954,-1.074"]
"alexfazio/OpenPlexity-Pages" ["l"="42.948,-1.169"]
"mnfst/manifest" ["l"="16.324,-10.281"]
"front10/landing-page-book" ["l"="10.337,-29.062"]
"harsxv/tinystatus" ["l"="16.542,-10.34"]
"inngest/inngest-js" ["l"="16.32,-9.992"]
"L-Blondy/up-fetch" ["l"="-7.36,-30.735"]
"inngest/inngest" ["l"="16.213,-10.107"]
"davideast/dataprompt" ["l"="41.679,0.305"]
"cartesia-ai/edge" ["l"="41.639,1.162"]
"vercel-labs/ai-sdk-preview-array-output-mode" ["l"="41.499,0.7"]
"vercel-labs/ai-sdk-preview-provider-registry" ["l"="41.507,0.69"]
"outspeed-ai/outspeed" ["l"="41.516,0.91"]
"AutoSurveys/AutoSurvey" ["l"="-54.794,-11.598"]
"cloudflare/workers-mcp" ["l"="-5.237,-27.451"]
"idosal/git-mcp" ["l"="41.429,-0.006"]
"yasyf/anthropic-computer-use-modal" ["l"="41.537,1.553"]
"AnswerDotAI/ContextKit" ["l"="41.613,1.035"]
"AnswerDotAI/fastdata" ["l"="41.645,1.091"]
"john-adeojo/use-tools" ["l"="41.647,0.59"]
"disler/claude-3-7-sonnet-starter-pack" ["l"="41.543,0.652"]
"disler/always-on-ai-assistant" ["l"="41.465,0.566"]
"disler/anthropic-computer-use-bash-and-files" ["l"="41.509,0.615"]
"disler/claude-code-is-programmable" ["l"="41.569,0.668"]
"disler/mermaid-js-ai-agent" ["l"="41.521,0.637"]
"disler/just-prompt" ["l"="41.554,0.646"]
"disler/pocket-pick" ["l"="41.552,0.662"]
"13point5/open-artifacts-renderer" ["l"="41.698,0.563"]
"rocketseat-education/nlw-journey-html-css-js" ["l"="40.373,-0.916"]
"rocketseat-education/nlw-journey-python" ["l"="40.387,-0.923"]
"VRSEN/agency-voice-interface" ["l"="40.013,-2.103"]
"andresvourakis/data-scientist-handbook" ["l"="48.317,26.333"]
"potahtml/mpa-archive" ["l"="16.624,-10.356"]
"ThousandBirdsInc/chidori" ["l"="41.291,-3.881"]
"run-llama/llamabot" ["l"="41.439,0.831"]
"run-llama/llama-slides" ["l"="41.411,0.825"]
"daily-demos/awesome-daily" ["l"="41.659,0.855"]
"krish-adi/llmstxt-site" ["l"="41.771,0.913"]
"saschaseniuk/vite-plugin-llms" ["l"="41.737,0.87"]
"dotenvx/llmstxt" ["l"="41.747,0.896"]
"cognitivecomputations/agi_memory" ["l"="24.775,-30.957"]
"ALucek/tool-calling-guide" ["l"="41.517,1.209"]
"ALucek/multimodal-rag" ["l"="41.535,1.246"]
"aws-samples/langgraph-agents-with-amazon-bedrock" ["l"="41.578,0.539"]
"superagi/Veagle" ["l"="41.039,0.839"]
"Filiphasan/dotnet-minify-url" ["l"="42.258,0.529"]
"SolSndy/SolSandwich-Solana-Sandwich-bot" ["l"="42.281,0.536"]
"dex-checker/dex-checker-solana-evm-wallets" ["l"="42.281,0.55"]
"cyberharish/solana-pumpfun-bundler-volume-bot" ["l"="42.263,0.556"]
"thunlp/Adaptive-Note" ["l"="-2.386,-33.813"]
"IDEA-FinAI/RagVL" ["l"="41.346,0.86"]
"OpenBMB/UltraRAG" ["l"="-2.29,-33.862"]
"cnzzx/VSA" ["l"="41.37,0.868"]
"llm-lab-org/Multimodal-RAG-Survey" ["l"="46.452,24.809"]
"thomas-pedersen/cursor-chat-browser" ["l"="41.849,0.13"]
"somogyijanos/cursor-chat-export" ["l"="41.925,0.106"]
"WooodHead/cursor-export" ["l"="41.944,0.116"]
"Red-Hat-AI-Innovation-Team/sdg_hub" ["l"="42.142,0.293"]
"instructlab/eval" ["l"="3.254,-6.798"]
"asg017/sqlite-rembed" ["l"="40.486,1.141"]
"NVIDIA-AI-Blueprints/rag" ["l"="41.759,-0.095"]
"BhabhaAI/dataformer" ["l"="41.613,0.478"]
"KardelRuveyda/dotnet-mystic" ["l"="42.498,0.043"]
"KardelRuveyda/langchain-mystic" ["l"="42.494,0.03"]
"browserbase/BrowseGPT" ["l"="41.606,0.824"]
"coder/quartz" ["l"="42.329,-0.73"]
"AnimaVR/NeuroSync_Local_API" ["l"="41.944,-0.373"]
"AnimaVR/NeuroSync_Player" ["l"="41.915,-0.347"]
"AnimaVR/NeuroSync_Trainer_Lite" ["l"="41.928,-0.373"]
"AnimaVR/NeuroSync_Real-Time_API" ["l"="41.935,-0.387"]
"MinishLab/evaluation" ["l"="41.312,0.914"]
"xlang-ai/Spider2" ["l"="37.416,-1.526"]
"XGenerationLab/XiYan-SQL" ["l"="37.424,-1.55"]
"eosphoros-ai/Awesome-Text2SQL" ["l"="37.484,-1.491"]
"MohammadrezaPourreza/Few-shot-NL2SQL-with-prompting" ["l"="37.462,-1.541"]
"defog-ai/sql-eval" ["l"="37.478,-1.546"]
"AnswerDotAI/pythonrunscript" ["l"="41.676,1.087"]
"AnswerDotAI/fasthtml-tut" ["l"="41.674,1.072"]
"emarco177/dandi" ["l"="41.854,0.652"]
"yllvar/Smart_Money_Follower" ["l"="42.594,-0.658"]
"henrytirla/Solana-PNL-Bot" ["l"="42.594,-0.631"]
"dotnaonweh/solanaWallet-checker" ["l"="42.569,-0.645"]
"d3witt/viking" ["l"="3.899,12.769"]
"GTekSD/SUASS" ["l"="-48.031,-29.316"]
"yunginnanet/HellPot" ["l"="-51.48,10.555"]
"KylinMountain/markify" ["l"="41.492,0.851"]
"Debapriya-source/nyaya-gpt" ["l"="41.645,0.567"]
"kirill-markin/chrome-auto-image-blocker" ["l"="41.776,0.693"]
"pipecat-ai/rtvi-infra-examples" ["l"="41.568,0.739"]
"zhaoqie/gmgn_smart" ["l"="42.626,-0.687"]
"gevffy/gmgn-scraper" ["l"="42.62,-0.67"]
"ganarkf/solana-wallet-checker" ["l"="42.601,-0.685"]
"run-llama/human_in_the_loop_workflow_demo" ["l"="41.473,0.902"]
"Otacon/olpaka" ["l"="41.761,-0.023"]
"IBM/TDD-Bench-Verified" ["l"="42.18,0.214"]
"codellm-devkit/codeanalyzer-java" ["l"="42.168,0.218"]
"actualize-ae/voice-chat-pdf" ["l"="41.663,0.509"]
"AbhinavTheDev/coding-agent" ["l"="41.642,0.506"]
"joanby/matematicas-ml" ["l"="41.587,0.821"]
"Coding-Crashkurse/Llama3.2---LangGraph-Email-Agent" ["l"="41.869,1.161"]
"rubickecho/n8n-deepseek" ["l"="41.68,-0.133"]
"joshpocock/kestra" ["l"="41.679,0.119"]
"USTCAGI/Awesome-LLM-Table-Mining" ["l"="41.27,1.369"]
"USTCAGI/Awesome-Papers-Time-Series-Forecasting" ["l"="41.259,1.361"]
"USTCAGI/Awesome-Papers-Retrieval-Augmented-Generation" ["l"="41.275,1.357"]
"Mohit21GoJs/agent-orchestration-examples" ["l"="41.723,0.533"]
"graphgeeks-lab/awesome-graph-universe" ["l"="41.574,0.557"]
"FalkorDB/GraphRAG-SDK" ["l"="9.484,-3.661"]
"KardelRuveyda/openai-dotnet-turkish-book" ["l"="42.47,0.04"]
"KardelRuveyda/openai-dotnet-exercises" ["l"="42.508,0.024"]
"KardelRuveyda/uretken-yapayzeka-chatbot-gelistirme-temelleri" ["l"="42.373,0.078"]
"KardelRuveyda/prompt-engineering-turkish-book" ["l"="42.487,0.017"]
"meetingbot/meetingbot" ["l"="42.207,0.577"]
"noah-duncan/attendee" ["l"="42.237,0.618"]
"owengretzinger/gitreadme" ["l"="42.125,0.468"]
"jina-ai/late-chunking" ["l"="41.327,1.205"]
"IAAR-Shanghai/Meta-Chunking" ["l"="-54.86,-11.54"]
"naughtygopher/pocache" ["l"="42.586,-0.866"]
"thunlp/iAgents" ["l"="41.557,0.808"]
"ShuheWang1998/Reinforcement-Learning-Enhanced-LLMs-A-Survey" ["l"="42.341,0.43"]
"BullaTalina/ip-stresser" ["l"="42.468,0.394"]
"magicuidesign/mcp" ["l"="42.383,0.434"]
"kimd155/QuickResponseC2" ["l"="42.429,0.403"]
"topsecretagent007/pumpfun-bundler-bot" ["l"="42.403,0.396"]
"Textualize/transcendent-textual" ["l"="43.63,19.276"]
"google-gemini/gemini-api-quickstart" ["l"="41.333,0.173"]
"google-gemini/angular-language-learning-sample" ["l"="41.387,0.098"]
"docling-project/docling-mcp" ["l"="42.032,0.407"]
"rocketseat-education/nlw-journey-c-sharp" ["l"="40.342,-0.964"]
"rocketseat-education/nlw-journey-ia" ["l"="40.359,-0.913"]
"LangGraph-GUI/LangGraph-learn" ["l"="41.823,0.622"]
"LangGraph-GUI/LangGraph-GUI-reactflow" ["l"="41.805,0.628"]
"andrestorres123/breeze-agent" ["l"="41.657,0.346"]
"xyin-anl/Nodeology" ["l"="41.728,0.35"]
"kaymen99/sales-outreach-automation-langgraph" ["l"="41.819,0.716"]
"kaymen99/AI-Sales-agent" ["l"="41.88,0.739"]
"CryptoAscetic/crypto-tool" ["l"="42.643,-0.655"]
"noah-duncan/py-zoom-meeting-sdk" ["l"="42.26,0.646"]
"browserbase/browserbase-computer-use" ["l"="41.633,0.856"]
"di37/speech-to-text-fine-tuning-on-unseen-language" ["l"="42.308,-0.204"]
"0x4f53/secretsnitch" ["l"="41.849,1.544"]
"curtis-allan/lucide-fasthtml" ["l"="41.727,1.127"]
"phihung/fasthtml_examples" ["l"="41.754,1.162"]
"Lesterpaintstheworld/AutonomousAIs" ["l"="41.713,0.356"]
"coleam00/chatgpt-chrome-extension" ["l"="41.528,-0.069"]
"coleam00/midnight-converse" ["l"="41.527,-0.094"]
"Red-Hat-AI-Innovation-Team/async-grpo" ["l"="42.168,0.299"]
"lesteroliver911/contextual-chunking-graphpowered-rag" ["l"="41.587,0.651"]
"Nutlope/finetune" ["l"="41.466,0.454"]
"docling-project/docling-haystack" ["l"="42.127,0.342"]
"retail-ai-inc/sync" ["l"="41.83,1.612"]
"anonymousvano/uncensored-hidden-wiki" ["l"="41.803,1.575"]
"jimmyraj18/jimmyraj18" ["l"="41.813,1.569"]
"i-am-bee/beeai-code-interpreter" ["l"="41.918,0.278"]
"ibm-granite/granite-io" ["l"="42.334,0.172"]
"rocketseat-education/nlw-journey-java" ["l"="40.373,-0.937"]
"NVIDIA/metropolis-nim-workflows" ["l"="41.82,-0.254"]
"Knowledgator/GLiNER.cpp" ["l"="41.292,1.218"]
"fbilhaut/gline-rs" ["l"="41.312,1.256"]
"davanstrien/data-for-fine-tuning-llms" ["l"="41.537,1.325"]
"lifinance/bigmi" ["l"="41.327,2.086"]
"Scrapybara/scrapybara-python" ["l"="41.879,0.084"]
"Scrapybara/scrapybara-ts" ["l"="41.951,0.064"]
"Scrapybara/scrapybara-mcp" ["l"="41.93,0.065"]
"google-gemini/api-examples" ["l"="41.334,0.191"]
"xintai6660707/ore-mine-pool" ["l"="40.353,-0.687"]
"neural-maze/vector-twin" ["l"="41.506,0.585"]
"ShawhinT/AI-Builders-Bootcamp-2" ["l"="41.415,0.879"]
"Bifrost-Technologies/ore-pool-miner" ["l"="40.35,-0.668"]
"mckaywrigley/realtime-ai-livekit-playground" ["l"="41.752,0.706"]
"Babelscape/FENICE" ["l"="41.055,1.283"]
"SapienzaNLP/zebra" ["l"="41.041,1.279"]
"phodal/aise" ["l"="40.675,0.882"]
"zjh7890/gpt-tools" ["l"="40.693,0.88"]
"shire-lang/shire-demo" ["l"="40.684,0.862"]
"tw-haiven/haiven" ["l"="40.652,0.917"]
"finnvoor/LocalVideoStreaming" ["l"="42.101,-0.329"]
"i-am-bee/bee-api" ["l"="41.871,0.292"]
"i-am-bee/bee-python-sdk" ["l"="41.883,0.276"]
"modal-labs/ci-on-modal" ["l"="41.592,1.626"]
"tom-doerr/simpledspy" ["l"="41.932,0.428"]
"i-am-bee/bee-community-tools" ["l"="41.87,0.282"]
"i-am-bee/bee-proto" ["l"="41.879,0.286"]
"i-am-bee/beekeeper" ["l"="41.867,0.305"]
"dgwyer/fasthtml-demos" ["l"="41.774,1.121"]
"AllAboutAI-YT/e-labs_agent" ["l"="42.057,0.319"]
"ulychen0119/Sol-Raydium-Sniper-Bot" ["l"="42.996,0.527"]
"ExoniaCoder/flash-usdt-erc20" ["l"="42.674,0.532"]
"SuveenE/photos2movie" ["l"="41.684,0.01"]
"SuveenE/codenames-ai" ["l"="41.656,0.035"]
"aihes/graphrag" ["l"="41.615,0.892"]
"nischalj10/headless-ollama" ["l"="41.813,0.259"]
"coder/coder-desktop-windows" ["l"="42.29,-0.799"]
"Knowledgator/GLiClass.c" ["l"="41.265,1.16"]
"mozilla-ai/speech-to-text-finetune" ["l"="41.952,0.162"]
"callmephilip/html2ft" ["l"="41.781,1.219"]
"phihung/fh_utils" ["l"="41.769,1.195"]
"jgravelle/aiAPIkeys" ["l"="41.752,0.537"]
"Erickrus/langgraph-editor" ["l"="41.832,0.655"]
"daily-co/pipecat-cloud-starter" ["l"="41.657,0.829"]
"di37/youtube-notes-generator" ["l"="42.233,-0.146"]
"jgravelle/Groquments" ["l"="41.733,0.517"]
"Babelscape/LLM-Oasis" ["l"="41.035,1.48"]
"mwatkins1970/SAE_Feature_Interpretability_Tool" ["l"="41.029,1.518"]
"arihanv/fasthtml-modal" ["l"="41.543,1.587"]
"coder/guts" ["l"="42.022,-0.354"]
"Scrapybara/scrapybara-ts-template" ["l"="41.978,0.055"]
"OpenAgentPlatform/Dive" ["l"="41.235,3.193"]
"jiji262/douyin-downloader" ["l"="45.759,-1.576"]
"Bistutu/FluentRead" ["l"="-49.201,12.768"]
"henrythe9th/AI-Crash-Course" ["l"="41.107,0.252"]
"armankhondker/awesome-ai-ml-resources" ["l"="-14.467,-23.103"]
"hesamsheikh/ml-retreat" ["l"="-14.412,-23.112"]
"adam-maj/deep-learning" ["l"="-14.393,-23.136"]
"chengazhen/cursor-auto-free" ["l"="45.833,0.738"]
"kingparks/cursor-vip" ["l"="45.802,0.736"]
"OpenHealthForAll/open-health" ["l"="41.375,-0.075"]
"fastenhealth/fasten-onprem" ["l"="12.529,-8.702"]
"manualdousuario/marreta" ["l"="12.438,-8.539"]
"11notes/docker-kms" ["l"="45.718,-0.581"]
"kyutai-labs/hibiki" ["l"="38.422,1.957"]
"Freika/dawarich" ["l"="12.466,-8.719"]
"IsaacGemal/wikitok" ["l"="41.626,0.145"]
"rbrown101010/yapsearch" ["l"="41.56,0.065"]
"xajik/thedeck" ["l"="40.351,5.784"]
"t3dotgg/unduck" ["l"="-3.644,-30.443"]
"t3dotgg/quickpic" ["l"="-3.652,-30.383"]
"google-gemini/gemini-image-editing-nextjs-quickstart" ["l"="41.632,0.268"]
"soGeneri/awesome-launch" ["l"="41.694,0.104"]
"The-Pocket/PocketFlow-Tutorial-Codebase-Knowledge" ["l"="41.208,-0.184"]
"The-Pocket/PocketFlow-Template-Python" ["l"="41.371,-0.313"]
"AsyncFuncAI/deepwiki-open" ["l"="41.253,-0.19"]
"stanford-mast/blast" ["l"="41.707,-0.007"]
"SureScaleAI/cleverbee" ["l"="41.837,-0.084"]
"OpenPipe/ART" ["l"="37.027,-0.431"]
"VxASI/blender-mcp-vxai" ["l"="41.679,-0.008"]
"instructa/viber3d" ["l"="41.707,0.057"]
"martin226/vibe-draw" ["l"="41.415,-0.041"]
"lakshaybhushan/vecto3d" ["l"="-2.991,-31.231"]
"ibelick/prompt-kit" ["l"="-2.995,-31.298"]
"martin226/slideitin" ["l"="41.822,0.199"]
"ahujasid/blender-mcp" ["l"="41.1,-0.354"]
"VAST-AI-Research/TripoSG" ["l"="64.405,3.351"]
"umlx5h/LLPlayer" ["l"="45.597,-0.509"]
"alecm20/story-flicks" ["l"="45.684,-0.533"]
"CopilotKit/open-mcp-client" ["l"="41.208,3.14"]
"chongdashu/unreal-mcp" ["l"="-24.92,-32.681"]
"yeyu2/Youtube_demos" ["l"="40.207,-2.01"]
"anthropics/claude-code" ["l"="41.005,-0.101"]
"apache/openwhisk-deploy-kube" ["l"="42.994,0.068"]
"IBM/OpenWhisk-on-Kubernetes" ["l"="43.005,0.035"]
"pacslab/SLApp-PerfCost-MdlOpt" ["l"="63.41,-12.571"]
"lzjzx1122/FaaSFlow" ["l"="63.405,-12.521"]
"agiresearch/A-mem" ["l"="41.737,0.474"]
"volcengine/verl" ["l"="37.143,-0.472"]
"going-doer/Paper2Code" ["l"="41.346,0.262"]
"HKUDS/AI-Researcher" ["l"="37.299,-0.608"]
"allenai/codescientist" ["l"="37.407,-0.569"]
"blazickjp/arxiv-mcp-server" ["l"="41.519,3.042"]
"Vexa-ai/vexa" ["l"="16.6,-10.09"]
"ccbikai/hacker-news" ["l"="45.625,-0.57"]
"harishsg993010/damn-vulnerable-MCP-server" ["l"="-43.67,-29.312"]
"NovaSky-AI/SkyThought" ["l"="37.141,-0.55"]
"NJU-PCALab/STAR" ["l"="33.075,33.098"]
"NVIDIA/Cosmos" ["l"="59.173,16.723"]
"Jiayi-Pan/TinyZero" ["l"="37.1,-0.574"]
"teddynote-lab/langgraph-mcp-agents" ["l"="-5.339,-23.323"]
"Dhravya/apple-mcp" ["l"="41.552,-0.025"]
"browser-use/macOS-use" ["l"="41.487,0.094"]
"recursechat/mcp-server-apple-shortcuts" ["l"="41.528,3.086"]
"cameroncooke/XcodeBuildMCP" ["l"="42.427,-26.843"]
"justinpbarnett/unity-mcp" ["l"="-24.934,-32.766"]
"Tencent/Hunyuan3D-2" ["l"="64.486,3.201"]
"microsoft/TRELLIS" ["l"="64.404,3.185"]
"Genesis-Embodied-AI/Genesis" ["l"="59.161,16.789"]
"lllyasviel/FramePack" ["l"="33.231,33.05"]
"moondevonyt/moon-dev-ai-agents" ["l"="41.541,-0.003"]
"daydy-dev/moon-dev-ai-agents-for-trading" ["l"="41.656,-0.089"]
"chainstacklabs/pump-fun-bot" ["l"="-17.147,8.053"]
"sendaifun/solana-agent-kit" ["l"="-16.023,7.472"]
"digbenjamins/SolanaTokenSniper" ["l"="41.954,-0.278"]
"vanzan01/cursor-memory-bank" ["l"="41.378,-0.268"]
"jackfriks/expo-app-boilerplate" ["l"="41.674,0.048"]
"fdarkaou/open-deep-research" ["l"="41.423,0.054"]
"iliane5/meridian" ["l"="41.384,0.014"]
"HKUDS/Auto-Deep-Research" ["l"="51.129,2.925"]
"risesoft-y9/Digital-Infrastructure" ["l"="51.19,2.805"]
"Everlyn-Labs/Everlyn-1" ["l"="51.246,2.784"]
"FxPool/FXMinerProxy" ["l"="51.216,2.797"]
"PKU-Alignment/align-anything" ["l"="51.18,2.879"]
"om-ai-lab/OmAgent" ["l"="51.038,2.866"]
"lharries/whatsapp-mcp" ["l"="41.299,-0.033"]
"tulir/whatsmeow" ["l"="27.114,-30.371"]
"bytedance/MegaTTS3" ["l"="38.431,1.739"]
"evalstate/fast-agent" ["l"="41.21,3.116"]
"robusta-dev/krr" ["l"="7.568,-9.093"]
"kubernetes-sigs/headlamp" ["l"="7.524,-9.044"]
"LadybirdBrowser/ladybird" ["l"="-13.677,-7.646"]
"sjzar/chatlog" ["l"="45.686,-0.479"]
"princehuang/overseas-website-note" ["l"="45.55,-0.663"]
"doocs/md" ["l"="-3.301,-32.763"]
"hylarucoder/ai-flavor-remover" ["l"="45.626,-0.425"]
"1517005260/graph-rag-agent" ["l"="41.758,1.05"]
"1517005260/nowcoder" ["l"="41.789,1.082"]
"sndraw/sndraw-work" ["l"="41.82,1.133"]
"nikmcfly/ANUS" ["l"="41.139,-0.076"]
"cognitivecomputations/dolphin-mcp" ["l"="41.289,3.059"]
"google/adk-docs" ["l"="41.314,0.095"]
"PhialsBasement/Chain-of-Recursive-Thoughts" ["l"="41.399,0.07"]
"asgeirtj/system_prompts_leaks" ["l"="41.382,-0.041"]
"langchain-ai/universal-tool-server" ["l"="41.662,0.33"]
"langmanus/langmanus-web" ["l"="41.547,-0.108"]
"OpenManus/OpenManus-RL" ["l"="37.215,-0.572"]
"Darwin-lfl/langmanus" ["l"="41.473,-0.079"]
"sst/opencontrol" ["l"="-3.81,-30.378"]
"sst/ion" ["l"="-3.839,-30.295"]
"dnakov/anon-kode" ["l"="42.131,2.396"]
"toolbeam/openauth" ["l"="-3.883,-30.231"]
"terminaldotshop/terminal" ["l"="-3.794,-30.367"]
"rocicorp/mono" ["l"="-6.313,-28.351"]
"benvinegar/counterscale" ["l"="-5.109,-27.55"]
"t3dotgg/stripe-recommendations" ["l"="-3.648,-30.294"]
"yesfedor/nuxt-core-template" ["l"="41.623,0.194"]
"Rootly-AI-Labs/Rootly-MCP-server" ["l"="41.934,0.401"]
"ryokun6/ryos" ["l"="42.539,0.753"]
"ekmigasari/wfcOS" ["l"="42.484,0.722"]
"ubicloud/ubicloud" ["l"="16.115,-10.309"]
"gauge-sh/tach" ["l"="44.986,21.234"]
"ashishpatel26/AIAgentWorkshop" ["l"="41.385,0.666"]
"GURPREETKAURJETHRA/END-TO-END-GENERATIVE-AI-PROJECTS" ["l"="29.251,-26.191"]
"youssefHosni/Awesome-AI-Data-Guided-Projects" ["l"="48.107,26.493"]
"skyzh/tiny-llm" ["l"="0.462,14.019"]
"astral-sh/ty" ["l"="44.853,21.024"]
"convergence-ai/proxy-lite" ["l"="41.463,0.091"]
"convergence-ai/webgames" ["l"="41.555,0.031"]
"HazyResearch/minions" ["l"="41.598,-0.018"]
"AIDotNet/OpenDeepWiki" ["l"="-32.42,0.645"]
"awslabs/mcp" ["l"="43.369,-0.356"]
"microsoft/typescript-go" ["l"="-4.096,-30.034"]
"hanson-cheng/n8n-workflows" ["l"="41.649,-0.126"]
"gabriel-g2n/workflows" ["l"="27.179,-30.586"]
"makafeli/n8n-workflow-builder" ["l"="41.628,-0.197"]
"datawranglerai/self-host-n8n-on-gcr" ["l"="41.693,-0.176"]
"sonnylazuardi/cursor-talk-to-figma-mcp" ["l"="41.283,-0.235"]
"epuerta9/deep-research-py" ["l"="41.545,-0.052"]
"HarshJ23/Deeper-Seeker" ["l"="42.589,1.811"]
"AnotiaWang/deep-research-web-ui" ["l"="45.735,0.59"]
"p0n1/epub_to_audiobook" ["l"="38.857,1.626"]
"xykt/NetQuality" ["l"="-46.517,15.088"]
"leonardsellem/n8n-mcp-server" ["l"="41.638,-0.257"]
"bmadcode/BMAD-METHOD" ["l"="41.439,-0.361"]
"sanjeed5/awesome-cursor-rules-mdc" ["l"="41.398,-0.225"]
"Bhartendu-Kumar/rules_template" ["l"="42.069,2.255"]
"oslook/cursor-ai-downloads" ["l"="45.871,0.729"]
"T1nker-1220/UltraContextAI" ["l"="41.432,-0.291"]
"Mawla/cursor_rules" ["l"="41.426,-0.313"]
"kleneway/pastemax" ["l"="42.114,2.256"]
"d2forum/19th" ["l"="41.381,-0.37"]
"alibaba/designable" ["l"="-3.851,-32.785"]
"web-infra-dev/modern.js" ["l"="-3.919,-32.653"]
"bytedance/InfiniteYou" ["l"="51.259,2.754"]
"web-infra-dev/garfish" ["l"="-3.958,-32.675"]
"badboysm890/ClaraVerse" ["l"="42.698,1.804"]
"dyad-sh/dyad" ["l"="42.712,1.832"]
"BandarLabs/gitpodcast" ["l"="42.261,0.719"]
"BandarLabs/clickclickclick" ["l"="42.345,0.775"]
"CodeUpdaterBot/ClickUi" ["l"="42.636,1.828"]
"austin-starks/FinAnGPT-Pro" ["l"="-8.69,13.338"]
"metorial/mcp-containers" ["l"="45.656,-0.303"]
"JefferyHcool/BiliNote" ["l"="45.672,-0.506"]
"f/mcptools" ["l"="41.113,3.005"]
"alexander-zuev/supabase-mcp-server" ["l"="41.483,-0.137"]
"Blaizzy/mlx-vlm" ["l"="27.592,-21.052"]
"browser-use/awesome-prompts" ["l"="41.632,0.035"]
"formsmd/formsmd" ["l"="16.585,-10.062"]
"C-Loftus/QuickPiperAudiobook" ["l"="40.292,5.99"]
"SagiPolaczek/NeuralSVG" ["l"="-35.397,20.378"]
"potpie-ai/AI-COSS" ["l"="41.819,0.051"]
"baturyilmaz/wordpecker-app" ["l"="40.667,5.802"]
"goodreasonai/ScrapeServ" ["l"="46.387,-0.581"]
"Aident-AI/open-cuak" ["l"="41.881,0.038"]
"SeekStorm/SeekStorm" ["l"="16.497,-10.328"]
"ses4255/Versatile-OCR-Program" ["l"="41.918,0.013"]
"sligter/DeepGemini" ["l"="45.717,0.452"]
"snailyp/gemini-balance" ["l"="45.694,0.564"]
"deanxv/genspark2api" ["l"="45.681,0.531"]
"HiveNexus/HiveChat" ["l"="45.599,-0.476"]
"MartialBE/one-hub" ["l"="45.558,0.569"]
"smtg-ai/claude-squad" ["l"="42.061,2.369"]
"defog-ai/introspect" ["l"="41.704,0.189"]
"mozilla-ai/byota" ["l"="41.82,0.217"]
"mozilla-ai/aissert" ["l"="41.796,0.227"]
"datawhalechina/self-llm" ["l"="38.745,-1.957"]
"makenotion/notion-mcp-server" ["l"="41.368,-0.15"]
"suekou/mcp-notion-server" ["l"="41.439,3.121"]
"ryoppippi/sitemcp" ["l"="41.956,2.28"]
"line/line-bot-mcp-server" ["l"="41.886,2.296"]
"kinopeee/cursorrules" ["l"="4.705,-40.555"]
"mizchi/ailab" ["l"="5.834,-39.942"]
"MobinX/awesome-mcp-list" ["l"="45.677,-0.373"]
"robertpiosik/CodeWebChat" ["l"="45.628,-0.33"]
"yzfly/Awesome-MCP-ZH" ["l"="41.226,-0.336"]
"wenyuanw/quick-prompt" ["l"="45.66,-0.361"]
"pogjester/company-research-agent" ["l"="45.709,-0.424"]
"syedazharmbnr1/claude-chatgpt-mcp" ["l"="41.55,-0.082"]
"tavily-ai/tavily-mcp" ["l"="41.527,2.912"]
"ppl-ai/api-cookbook" ["l"="41.533,-0.24"]
"smithery-ai/mcp-obsidian" ["l"="41.439,3.042"]
"ckreiling/mcp-server-docker" ["l"="41.472,3.021"]
"alioshr/memory-bank-mcp" ["l"="42.038,2.224"]
"GreatScottyMac/roo-code-memory-bank" ["l"="42.089,2.228"]
"ipenywis/aimemory" ["l"="41.418,-0.347"]
"tacticlaunch/cursor-bank" ["l"="41.5,-0.5"]
"GreatScottyMac/RooFlow" ["l"="42.062,2.235"]
"johnpeterman72/CursorRIPER" ["l"="41.455,-0.398"]
"primecai/diffusion-self-distillation" ["l"="42.325,0.525"]
"arttttt/SimpleMVI" ["l"="42.387,0.593"]
"openai/preparedness" ["l"="37.255,-0.422"]
"hello-nerdo/CodebaseToPrompt" ["l"="41.694,0.366"]
"lanzhihong6/stock-scanner" ["l"="45.844,0.556"]
"colanode/colanode" ["l"="12.343,-8.531"]
"Dawanfe/langmanus-web" ["l"="41.524,-0.146"]
"skyming/awesome-ai-agent" ["l"="41.557,-0.18"]
"Shybert-AI/OpenManus-WebUI" ["l"="41.612,-0.276"]
"LeapLabTHU/cooragent" ["l"="49.29,32.923"]
"jokyun/langmanus" ["l"="41.544,-0.173"]
"rango-ramesh/advanced-chunker" ["l"="41.538,0.391"]
"lanesky/thinking-gemini" ["l"="40.779,-0.488"]
"ihmily/StreamCap" ["l"="-49.38,12.7"]
"index-tts/index-tts" ["l"="38.46,1.811"]
"liaokongVFX/MCP-Chinese-Getting-Started-Guide" ["l"="45.635,-0.38"]
"xming521/WeClone" ["l"="45.727,-0.485"]
"xuanli199/weekly" ["l"="-49.319,12.72"]
"btw-so/btw" ["l"="16.236,-10.337"]
"PathOfBuildingCommunity/PathOfBuilding-PoE2" ["l"="37.583,-1.126"]
"ygwyg/diverce" ["l"="-5.153,-27.491"]
"DataScienceUIBK/ArabicaQA" ["l"="40.577,1.069"]
"volcengine/ai-app-lab" ["l"="41.3,-0.203"]
"volcengine/rtc-aigc-demo" ["l"="38.941,1.225"]
"HumanAIGC-Engineering/OpenAvatarChat" ["l"="32.302,30.421"]
"agentuniverse-ai/agentUniverse" ["l"="36.841,-2.117"]
"wwbin2017/bailing" ["l"="38.673,1.526"]
"stepfun-ai/Step-Audio" ["l"="38.456,1.767"]
"LLM-Red-Team/jimeng-free-api" ["l"="45.65,0.551"]
"bracesproul/gen-ui-computer-use" ["l"="41.543,0.316"]
"YunQiAI/OpenManusWeb" ["l"="41.639,-0.292"]
"TheAgenticAI/CortexON" ["l"="42.213,0.42"]
"ZongqianLi/ReasonGraph" ["l"="45.54,-0.368"]
"agent-network-protocol/AgentNetworkProtocol" ["l"="52.081,17.049"]
"chrisboden/knowledgesync" ["l"="41.706,0.167"]
"MaxHastings/Kolo" ["l"="42.65,1.761"]
"reading-plus-ai/mcp-server-data-exploration" ["l"="41.493,3.076"]
"basicmachines-co/basic-memory" ["l"="41.502,3.007"]
"haris-musa/excel-mcp-server" ["l"="41.506,3.099"]
"vivekVells/mcp-pandoc" ["l"="41.452,3.058"]
"zcaceres/fetch-mcp" ["l"="41.463,2.93"]
"pskill9/website-downloader" ["l"="41.477,3.072"]
"Krish120003/gitfaster" ["l"="42.427,0.693"]
"crafter-station/text0" ["l"="42.463,0.724"]
"ViaAnthroposBenevolentia/gemini-2-live-api-demo" ["l"="45.697,0.69"]
"heiko-hotz/gemini-multimodal-live-dev-guide" ["l"="44.723,16.215"]
"saharmor/gemini-multimodal-playground" ["l"="41.377,0.214"]
"DaInfernalCoder/perplexity-mcp" ["l"="42.141,2.27"]
"QuantGeekDev/docker-mcp" ["l"="41.48,3.06"]
"supercurses/powerpoint" ["l"="41.591,-0.337"]
"MotiaDev/motia-examples" ["l"="41.516,0.058"]
"MiniMax-AI/MiniMax-MCP" ["l"="41.394,2.743"]
"huggingface/nanoVLM" ["l"="38.876,-0.304"]
"axtrur/awesome-ai-system-prompts" ["l"="41.476,-0.186"]
"rybbit-io/rybbit" ["l"="16.246,-10.292"]
"hackingthemarkets/interactive-brokers-web-api" ["l"="-8.473,13.049"]
"sahibzada-allahyar/YC-Killer" ["l"="42.362,0.488"]
"coleam00/supabase-mcp" ["l"="41.543,-0.139"]
"coleam00/pydantic-ai-github-agent" ["l"="41.531,-0.125"]
"HITsz-TMG/FilmAgent" ["l"="51.226,2.877"]
"stuzero/pg-mcp" ["l"="41.608,0.629"]
"zainulabedeen123/best-saas-kit" ["l"="41.626,0.31"]
"clchinkc/streamlit-editor" ["l"="41.876,0.136"]
"mbakgun/dspy-examples" ["l"="41.921,0.13"]
"lugenx/lab" ["l"="3.838,12.714"]
"andrewromanenco/cocommit" ["l"="-43.532,-29.28"]
"NVIDIA/AIQToolkit-UI" ["l"="41.418,0.335"]
"AIDC-AI/Marco-o1" ["l"="37.253,-0.466"]
"facebookresearch/large_concept_model" ["l"="37.317,-0.585"]
"asinghcsu/AgenticRAG-Survey" ["l"="41.405,0.493"]
"psbarrales/context-code" ["l"="41.601,0.23"]
"jolovicdev/shandu" ["l"="41.569,0.373"]
"wassim249/YT-Navigator" ["l"="41.534,0.408"]
"suncloudsmoon/TextCraft" ["l"="41.812,0.238"]
"itsPreto/tangent" ["l"="41.932,2.197"]
"CNTRLAI/Notate" ["l"="41.837,0.24"]
"trycompai/comp" ["l"="-2.973,-31.251"]
"supavec/supa-deep-research" ["l"="41.721,0.121"]
"sofi444/realtime-transcription-fastrtc" ["l"="41.52,0.301"]
"digbenjamins/TwitterTracker" ["l"="42.067,-0.342"]
"digbenjamins/DexBoostHunter" ["l"="42.068,-0.353"]
"enescingoz/awesome-n8n-templates" ["l"="41.652,-0.176"]
"conor-is-my-name/n8n-autoscaling" ["l"="41.677,-0.201"]
"Xavi1995/n8n_execution_report" ["l"="41.662,-0.198"]
"jackvandervall/Agentic-Archive" ["l"="41.633,-0.16"]
"harishsg993010/HawkinsDB" ["l"="41.894,0.461"]
"harishsg993010/HawkinsAgent" ["l"="41.956,0.474"]
"harishsg993010/HawkinsRAG" ["l"="41.939,0.471"]
"davidbrowne17/csm-streaming" ["l"="27.823,-21.082"]
"KalyanKS-NLP/LLM-Survey-Papers-Collection" ["l"="41.422,0.639"]
"Tkag0001/AI_and_Machine_Learning_for_Coders" ["l"="52.42,-0.235"]
"JUSTSUJAY/nlp-zero-to-hero" ["l"="52.427,-0.187"]
"loopwork-ai/Madrid" ["l"="41.934,-0.308"]
"loopwork-ai/Ontology" ["l"="41.915,-0.299"]
"loopwork-ai/emcee" ["l"="41.981,-0.353"]
"eastriverlee/LLM.swift" ["l"="27.506,-21.146"]
"loopwork-ai/hype" ["l"="41.954,-0.325"]
"General-Analysis/GA" ["l"="42.285,0.461"]
"langchain-ai/langgraph-cua-py" ["l"="41.605,0.323"]
"fleuristes/fleur" ["l"="41.799,-0.052"]
"AstraBert/llama-4-researcher" ["l"="41.803,0.428"]
"xrdevrob/QuestCameraKit" ["l"="42.335,0.57"]
"oculus-samples/Unity-PassthroughCameraApiSamples" ["l"="-30.769,-34.972"]
"wess/zenolang" ["l"="42.369,0.618"]
"barbaraojxoc/awesome-coding" ["l"="42.406,0.561"]
"aburkov/theLMbook" ["l"="37.14,-0.588"]
"YZ-Cai/SimGRAG" ["l"="41.592,0.384"]
"CogComp/reasoning-eval" ["l"="41.673,0.381"]
"mims-harvard/ToolUniverse" ["l"="40.944,1.841"]
"mims-harvard/TxAgent" ["l"="40.951,1.81"]
"devlikeapro/waha-n8n-templates" ["l"="41.673,-0.181"]
"Stirito/N8N_Workflow_Template" ["l"="41.715,-0.214"]
"PragmaticMachineLearning/probly" ["l"="46.389,-0.636"]
"bodo-run/yek" ["l"="41.466,0.135"]
"ariebovenberg/whenever" ["l"="44.988,21.201"]
"igrek51/wat" ["l"="45.066,21.259"]
"pipecat-ai/gemini-webrtc-web-simple" ["l"="41.657,0.741"]
"pipecat-ai/pipecat-client-android" ["l"="41.636,0.733"]
"jae-jae/fetcher-mcp" ["l"="45.782,0.461"]
"invariantlabs-ai/mcp-scan" ["l"="-43.641,-29.291"]
"flyeric0212/cursor-rules" ["l"="41.489,-0.353"]
"alchaincyf/cursor-rules-huasheng" ["l"="41.475,-0.325"]
"toss/react-simplikit" ["l"="-5.417,-21.94"]
"NLPOptimize/flash-tokenizer" ["l"="42.309,0.488"]
"youssefHosni/Data-Science-Interview-Questions-Answers" ["l"="48.103,26.317"]
"Devinterview-io/llms-interview-questions" ["l"="25.393,-28.862"]
"Om-Alve/smolGPT" ["l"="41.499,0.25"]
"therealoliver/Deepdive-llama3-from-scratch" ["l"="40.57,5.97"]
"MarioSieg/magnetron" ["l"="-14.338,-23.047"]
"vlm-run/vlmrun-hub" ["l"="40.545,5.778"]
"Maharshi-Pandya/cudacodes" ["l"="-14.337,-23.08"]
"EnesCinr/twitter-mcp" ["l"="42.412,0.517"]
"esteai/esteAI" ["l"="42.454,0.529"]
"EmreOzanMemis/DevOpsNedir" ["l"="42.48,0.523"]
"ExoniaToken/flash-usdt-erc20" ["l"="42.505,0.525"]
"FareedKhan-dev/train-deepseek-r1" ["l"="37.039,-0.482"]
"IlyaRice/RAG-Challenge-2" ["l"="51.377,3.084"]
"thedaviddias/ux-patterns-for-developers" ["l"="41.874,1.08"]
"project-ryoma/ryoma" ["l"="50.817,3.033"]
"CodeGuide-dev/codeguide-starter-pro" ["l"="41.793,0.016"]
"CodeGuide-dev/deep-research-api" ["l"="41.806,0.007"]
"makerkit/nextjs-saas-starter-kit-lite" ["l"="41.894,-0.044"]
"alicankiraz1/LLMRipper" ["l"="42.353,0.099"]
"alicankiraz1/PrivacyGuardian" ["l"="42.4,0.082"]
"fiehtle/raycast-internal-search" ["l"="27.499,-21.352"]
"antoineross/Hikari" ["l"="-3.463,-31.388"]
"SimonB97/win-cli-mcp-server" ["l"="41.453,3.084"]
"HKUDS/GraphGPT" ["l"="53.702,15.275"]
"HKUDS/RecLM" ["l"="59.478,22.935"]
"risesoft-y9/DataFlow-Engine" ["l"="50.89,2.918"]
"530051970/zenith-cloudkit" ["l"="50.818,2.986"]
"tianlan-ltd/Magic-Insight" ["l"="50.81,2.971"]
"Windsander/ADI-Stable-Diffusion" ["l"="50.812,2.921"]
"guanchuwang/redis-bench" ["l"="50.784,2.907"]
"gearnode/privatebin" ["l"="41.667,0.17"]
"raizamartin/gemini-code" ["l"="42.136,2.358"]
"rosendolu/cursor-rules-deploy" ["l"="41.473,-0.412"]
"adamwlarson/RooCodeMicroManager" ["l"="42.078,2.185"]
"kleosr/cursorkleosr" ["l"="41.503,-0.463"]
"ChrisRoyse/Pheromind" ["l"="42.036,2.165"]
"meta-llama/synthetic-data-kit" ["l"="38.432,-0.559"]
"instructa/ai-prompts" ["l"="41.859,-0.035"]
"1rgs/claude-code-proxy" ["l"="42.096,2.374"]
"ibelick/zola" ["l"="-2.96,-31.281"]
"ducan-ne/opencoder" ["l"="28.081,-21.088"]
"chrischoy/WhisperChain" ["l"="45.608,-0.385"]
"openai/openai-voice-agent-sdk-sample" ["l"="42.822,-1.107"]
"openai/openai-support-agent-demo" ["l"="42.813,-1.08"]
"openai/openai-fm" ["l"="42.793,-1.058"]
"browserbase/cua-browser" ["l"="41.372,0.167"]
"disler/aider-mcp-server" ["l"="41.635,0.713"]
"UCSC-VLAA/MedReason" ["l"="40.991,1.674"]
"UCSC-VLAA/m1" ["l"="40.987,1.708"]
"browser-use/awesome-projects" ["l"="41.73,-0.017"]
"sammyf/ollimca" ["l"="41.894,0.252"]
"fredconex/PixelLlama" ["l"="41.924,0.241"]
"i-am-bee/acp-mcp" ["l"="41.864,0.319"]
"QuantGeekDev/mcp-framework" ["l"="42.307,0.465"]
"janwilmake/openapi-mcp-server" ["l"="41.36,3.08"]
"dkruyt/WebRAgent" ["l"="41.601,0.641"]
"rahmansahinler1/doclink" ["l"="41.65,0.646"]
"shinhyo/OllamaTalk" ["l"="41.028,1.579"]
"Grigorij-Dudnik/Clean-Coder-AI" ["l"="42,2.228"]
"tesserato/CodeWeaver" ["l"="41.643,-0.018"]
"maynetee/codeselect" ["l"="41.611,0.013"]
"nexsol-technologies/pgassistant" ["l"="3.675,13.582"]
"cab938/jupyter_tool" ["l"="41.645,0.407"]
"langchain-ai/create-agent-chat-app" ["l"="41.598,0.445"]
"Quentin-aq/ai-build" ["l"="41.75,-0.238"]
"liuyoshio/mcp-compass" ["l"="41.698,-0.384"]
"showlab/MovieAgent" ["l"="40.93,1.869"]
"ln-dev7/square-ui" ["l"="-3.024,-31.228"]
"foreveryh/mentis" ["l"="47.427,26.378"]
"notedit/TransRouter" ["l"="45.375,-0.718"]
"AlvinWu7/OpenManu" ["l"="41.669,-0.353"]
"vercel-labs/mcp-on-vercel" ["l"="41.793,0.663"]
"vercel-labs/mcp-for-next.js" ["l"="41.837,0.689"]
"TensorBlock/awesome-mcp-servers" ["l"="42.342,0.458"]
"LyvoAI/lyvo" ["l"="42.406,0.428"]
"wanaku-ai/wanaku" ["l"="42.02,-0.397"]
"mem0ai/mem0-mcp" ["l"="41.596,-0.204"]
"webmonch/hide-my-mail-cloudflare" ["l"="42.284,0.57"]
"theseusXYZ/theseusXYZ" ["l"="42.319,0.615"]
"infovlad/reverse-email-lookup" ["l"="42.292,0.618"]
"cptcr/schedule-one-tool" ["l"="42.288,0.601"]
"wah2pro/Snapchat-Hacking" ["l"="42.307,0.627"]
"nmsdvid/react-native-perfect-ui" ["l"="42.304,0.6"]
"run-llama/llamacloud-mcp" ["l"="41.89,0.438"]
"SynaLinks/neuro-symbolic-LLMs-handbook" ["l"="41.304,0.964"]
"echohive42/deepdeek-r1-experiments" ["l"="41.541,0.257"]
"openai/openai-realtime-solar-system" ["l"="42.849,-1.153"]
"hotovo/aider-desk" ["l"="41.762,0.807"]
"lutzleonhardt/mcpm-aider" ["l"="41.738,0.788"]
"freddyaboulton/orpheus-cpp" ["l"="38.236,1.667"]
"chaolongy/KDTalker" ["l"="32.172,30.682"]
"Jason2Brownlee/awesome-llm-books" ["l"="41.319,0.848"]
"makerkit/react-native-expo-turbo-saas-kit" ["l"="41.959,-0.074"]
"NanGePlus/MCPTest" ["l"="41.806,1.067"]
"tom-doerr/llm_api_testing" ["l"="41.969,0.438"]
"HarleyCoops/Math-To-Manim" ["l"="41.562,0.254"]
"marcelo-earth/generative-manim" ["l"="47.241,26.48"]
"TIGER-AI-Lab/TheoremExplainAgent" ["l"="45.492,-0.468"]
"Alibaba-NLP/CHRONOS" ["l"="37.429,-0.711"]
"helblazer811/diffusion-visualizations" ["l"="41.738,0.206"]
"MCP-Club/mcpm" ["l"="41.798,0.842"]
"datalayer/jupyter-mcp-server" ["l"="41.428,2.892"]
"langwatch/create-agent-app" ["l"="16.775,-10.093"]
"patrickloeber/workshop-build-with-gemini" ["l"="41.68,0.33"]
"assafelovic/gptr-mcp" ["l"="41.703,0.128"]
"acquiredsecurity/forensic-timeliner" ["l"="42.545,0.458"]
"tesla0225/mcp-create" ["l"="41.735,-0.442"]
"ALucek/NeedleInAVidStack" ["l"="41.477,1.168"]
"ALucek/openai-realtime-rag" ["l"="41.496,1.203"]
"mstrYoda/production-ready-microservice-example" ["l"="42.288,0.145"]
"luis22d/ZeroTrace-Panel" ["l"="42.501,0.401"]
"Solleryn/FourSniper-four.meme-sniper-bot-bsc" ["l"="42.569,0.394"]
"codespin-ai/codespin-chrome-extension" ["l"="41.725,0.255"]
"vercel-labs/ai-sdk-image-generator" ["l"="41.713,0.265"]
"danilofalcao/cursor-deepseek" ["l"="41.843,0.078"]
"techcow2/cursor-agent-tracking" ["l"="41.952,0.038"]
"MrFadiAi/ai-agents-for-trading" ["l"="41.704,-0.125"]
"The-Pocket/PocketFlow-Typescript" ["l"="41.428,-0.425"]
"Dbbc00/OpenManus-Web" ["l"="41.63,-0.326"]
"raydoomed/nephesh" ["l"="41.696,-0.435"]
"ToMatrgod/OpenManusUi" ["l"="41.647,-0.329"]
"iHeyTang/OpenManus" ["l"="41.714,-0.472"]
"lumina-lumi/OpenManus-AutoQuant" ["l"="41.733,-0.495"]
"ALucek/agentic-memory" ["l"="41.558,1.267"]
"ALucek/GraphRAG-Breakdown" ["l"="41.594,1.324"]
"ALucek/llama3-websearch-agent" ["l"="41.585,1.304"]
"GongRzhe/Office-PowerPoint-MCP-Server" ["l"="41.622,-0.397"]
"socamalo/PPT_MCP_Server" ["l"="41.643,-0.438"]
"Ichigo3766/powerpoint-mcp" ["l"="41.613,-0.38"]
"henni99/WriteBuddy" ["l"="42.593,0.602"]
"seonghunYang/i18nmatic" ["l"="42.623,0.611"]
"sjy-dv/coltt" ["l"="42.643,0.641"]
"illuminaresolutions/n8n-mcp-server" ["l"="41.689,-0.265"]
"nicoalbanese/aie-feb-25-starter" ["l"="41.657,0.574"]
"johnpeterman72/CursorRIPER.sigma" ["l"="41.476,-0.435"]
"echohive42/10-000-chatbot-prompts" ["l"="41.683,0.227"]
"alicankiraz1/Hyperion-SAST-Ai.Agent" ["l"="42.421,0.074"]
"CatchTheTornado/open-agents-builder" ["l"="12.082,-36.358"]
"Krish120003/zercel" ["l"="42.332,0.629"]
"mrdbourke/LearnPythonTheHardWay" ["l"="42.345,0.32"]
"jacoblee93/corrective-local-rag-qwen" ["l"="41.748,0.411"]
"maxxxara/linear-agent" ["l"="41.737,0.41"]
"coleam00/n8n-nodes-mcp" ["l"="41.557,-0.156"]
"neLNABR/MegaETH-Auto" ["l"="42.522,0.374"]
"aipotheosis-labs/aci-python-sdk" ["l"="41.531,-0.322"]
"aipotheosis-labs/aci-agents" ["l"="41.517,-0.298"]
"zvictor/BrainyFlow" ["l"="41.45,-0.475"]
"neuml/staticvectors" ["l"="41.334,0.978"]
"LouisCan/OpenManus_UIToCode" ["l"="41.751,-0.524"]
"sndraw/bookroom" ["l"="41.843,1.161"]
"sndraw/LightRAG-Multi" ["l"="41.83,1.152"]
"redhat-et/llm-agents" ["l"="42.351,0.262"]
"jokyun/langmanus-web" ["l"="41.567,-0.203"]
"mrdbourke/awesome-courses" ["l"="42.308,0.326"]
}