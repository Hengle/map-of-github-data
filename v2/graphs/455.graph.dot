digraph G {
"uber/petastorm" -> "horovod/horovod" ["e"=1]
"uber/petastorm" -> "databricks/koalas"
"uber/petastorm" -> "databricks/spark-deep-learning"
"uber/petastorm" -> "polyaxon/polyaxon" ["e"=1]
"uber/petastorm" -> "webdataset/webdataset" ["e"=1]
"uber/petastorm" -> "yahoo/TensorFlowOnSpark"
"uber/petastorm" -> "linkedin/spark-tfrecord" ["e"=1]
"uber/petastorm" -> "tensorflow/ecosystem" ["e"=1]
"uber/petastorm" -> "mosaicml/streaming" ["e"=1]
"uber/petastorm" -> "SeldonIO/seldon-core" ["e"=1]
"uber/petastorm" -> "uber/fiber"
"uber/petastorm" -> "pytorch/torcharrow" ["e"=1]
"uber/petastorm" -> "combust/mleap"
"uber/petastorm" -> "facebookresearch/fairscale" ["e"=1]
"uber/petastorm" -> "microsoft/SynapseML"
"Stratio/stratio-cassandra" -> "Stratio/stratio-connector-elasticsearch"
"Stratio/stratio-cassandra" -> "Stratio/stratio-connector-commons"
"Stratio/stratio-cassandra" -> "Stratio/stratio-connector-mongodb"
"Stratio/stratio-cassandra" -> "Stratio/cassandra"
"Stratio/stratio-cassandra" -> "Stratio/ccm"
"Stratio/stratio-cassandra" -> "Stratio/stratio-connector-cassandra"
"Stratio/stratio-cassandra" -> "Stratio/stratio-connector-deep"
"Stratio/stratio-cassandra" -> "Stratio/stratio-cassandra-benchmark"
"Stratio/stratio-cassandra" -> "Stratio/stratio-connector-decision"
"Stratio/stratio-cassandra" -> "Stratio/aerospike-client-java"
"Stratio/stratio-cassandra" -> "Stratio/data-generator"
"Stratio/stratio-cassandra" -> "Stratio/java-driver"
"Stratio/stratio-cassandra" -> "Stratio/wikipedia-parser"
"Stratio/stratio-cassandra" -> "Stratio/queries-spark-benchmark"
"Stratio/stratio-cassandra" -> "Stratio/stratio-connector-hdfs"
"Stratio/crossdata" -> "Stratio/stratio-connector-mongodb"
"Stratio/crossdata" -> "Stratio/stratio-connector-elasticsearch"
"Stratio/crossdata" -> "Stratio/stratio-connector-commons"
"Stratio/crossdata" -> "Stratio/stratio-connector-cassandra"
"Stratio/crossdata" -> "Stratio/cassandra"
"Stratio/crossdata" -> "Stratio/ccm"
"Stratio/crossdata" -> "Stratio/stratio-connector-deep"
"Stratio/crossdata" -> "Stratio/aerospike-client-java"
"Stratio/crossdata" -> "Stratio/stratio-connector-decision"
"Stratio/crossdata" -> "Stratio/data-generator"
"Stratio/crossdata" -> "Stratio/stratio-connector-hdfs"
"Stratio/crossdata" -> "Stratio/java-driver"
"Stratio/crossdata" -> "Stratio/queries-spark-benchmark"
"Stratio/crossdata" -> "Stratio/wikipedia-parser"
"Stratio/crossdata" -> "Stratio/stratio-cassandra-benchmark"
"Stratio/deep-spark" -> "Stratio/cassandra"
"Stratio/deep-spark" -> "Stratio/ccm"
"Stratio/deep-spark" -> "Stratio/stratio-connector-elasticsearch"
"Stratio/deep-spark" -> "Stratio/stratio-connector-commons"
"Stratio/deep-spark" -> "Stratio/aerospike-client-java"
"Stratio/deep-spark" -> "Stratio/stratio-connector-mongodb"
"Stratio/deep-spark" -> "Stratio/data-generator"
"Stratio/deep-spark" -> "Stratio/stratio-connector-cassandra"
"Stratio/deep-spark" -> "Stratio/java-driver"
"Stratio/deep-spark" -> "Stratio/stratio-connector-deep"
"Stratio/deep-spark" -> "Stratio/queries-spark-benchmark"
"Stratio/deep-spark" -> "Stratio/stratio-connector-decision"
"Stratio/deep-spark" -> "Stratio/wikipedia-parser"
"Stratio/deep-spark" -> "Stratio/stratio-cassandra-benchmark"
"Stratio/deep-spark" -> "Stratio/s3-bucket-list"
"actionml/universal-recommender" -> "actionml/harness"
"actionml/universal-recommender" -> "apache/predictionio-template-recommender"
"actionml/universal-recommender" -> "PredictionIO/template-scala-parallel-universal-recommendation"
"actionml/universal-recommender" -> "OryxProject/oryx"
"actionml/universal-recommender" -> "tdunning/MiA" ["e"=1]
"actionml/universal-recommender" -> "actionml/ur-analysis-tools"
"actionml/universal-recommender" -> "apache/predictionio-template-ecom-recommender"
"actionml/universal-recommender" -> "apache/predictionio" ["e"=1]
"actionml/universal-recommender" -> "codelibs/elasticsearch-taste"
"actionml/universal-recommender" -> "steveny2k/docker-predictionio"
"actionml/universal-recommender" -> "grahamjenson/list_of_recommender_systems" ["e"=1]
"actionml/universal-recommender" -> "mingfang/docker-predictionio"
"actionml/universal-recommender" -> "chensoul/grab" ["e"=1]
"actionml/universal-recommender" -> "actionml/cluster-setup"
"actionml/universal-recommender" -> "SeldonIO/seldon-server"
"lessthanoptimal/ejml" -> "optimatika/ojAlgo"
"lessthanoptimal/ejml" -> "ujmp/universal-java-matrix-package"
"lessthanoptimal/ejml" -> "fommil/matrix-toolkits-java"
"lessthanoptimal/ejml" -> "jblas-project/jblas"
"lessthanoptimal/ejml" -> "vkostyukov/la4j"
"lessthanoptimal/ejml" -> "apache/commons-math" ["e"=1]
"lessthanoptimal/ejml" -> "Hipparchus-Math/hipparchus"
"lessthanoptimal/ejml" -> "HebiRobotics/MFL"
"lessthanoptimal/ejml" -> "lessthanoptimal/Java-Matrix-Benchmark"
"lessthanoptimal/ejml" -> "fommil/netlib-java"
"lessthanoptimal/ejml" -> "hughperkins/jeigen"
"lessthanoptimal/ejml" -> "lessthanoptimal/ddogleg"
"lessthanoptimal/ejml" -> "lessthanoptimal/BoofCV"
"lessthanoptimal/ejml" -> "FXyz/FXyz" ["e"=1]
"lessthanoptimal/ejml" -> "opencollab/jlatexmath" ["e"=1]
"JohnSnowLabs/spark-nlp" -> "JohnSnowLabs/spark-nlp-workshop" ["e"=1]
"JohnSnowLabs/spark-nlp" -> "flairNLP/flair" ["e"=1]
"JohnSnowLabs/spark-nlp" -> "microsoft/SynapseML"
"JohnSnowLabs/spark-nlp" -> "allenai/allennlp" ["e"=1]
"JohnSnowLabs/spark-nlp" -> "stanfordnlp/stanza" ["e"=1]
"JohnSnowLabs/spark-nlp" -> "yahoo/TensorFlowOnSpark"
"JohnSnowLabs/spark-nlp" -> "databricks/koalas"
"JohnSnowLabs/spark-nlp" -> "databricks/spark-deep-learning"
"JohnSnowLabs/spark-nlp" -> "makcedward/nlpaug" ["e"=1]
"JohnSnowLabs/spark-nlp" -> "UKPLab/sentence-transformers" ["e"=1]
"JohnSnowLabs/spark-nlp" -> "PAIR-code/lit" ["e"=1]
"JohnSnowLabs/spark-nlp" -> "combust/mleap"
"JohnSnowLabs/spark-nlp" -> "microsoft/nlp-recipes" ["e"=1]
"JohnSnowLabs/spark-nlp" -> "ddangelov/Top2Vec" ["e"=1]
"JohnSnowLabs/spark-nlp" -> "JohnSnowLabs/nlu" ["e"=1]
"rockthejvm/scala-2-beginners" -> "rockthejvm/scala-2-advanced"
"rockthejvm/scala-2-beginners" -> "rockthejvm/spark-essentials"
"rockthejvm/scala-2-beginners" -> "rockthejvm/akka-classic-essentials"
"rockthejvm/scala-2-beginners" -> "rockthejvm/scala-at-light-speed"
"rockthejvm/scala-2-beginners" -> "rockthejvm/scala-problems-interviews"
"rockthejvm/scala-2-beginners" -> "rockthejvm/akka-http"
"rockthejvm/scala-2-beginners" -> "rockthejvm/spark-optimization"
"rockthejvm/scala-2-beginners" -> "rockthejvm/udemy-akka-remoting-clustering"
"rockthejvm/scala-2-beginners" -> "rockthejvm/akka-streams"
"tirthajyoti/Interactive_Machine_Learning" -> "tirthajyoti/TensorFlow_Basics"
"sequenceiq/hadoop-docker" -> "sequenceiq/docker-spark"
"sequenceiq/hadoop-docker" -> "kiwenlau/hadoop-cluster-docker"
"sequenceiq/hadoop-docker" -> "big-data-europe/docker-hadoop-spark-workbench"
"sequenceiq/hadoop-docker" -> "big-data-europe/docker-hadoop"
"sequenceiq/hadoop-docker" -> "sequenceiq/docker-ambari" ["e"=1]
"sequenceiq/hadoop-docker" -> "gettyimages/docker-spark"
"sequenceiq/hadoop-docker" -> "big-data-europe/docker-spark"
"sequenceiq/hadoop-docker" -> "analytically/hadoop-ansible" ["e"=1]
"sequenceiq/hadoop-docker" -> "tomwhite/hadoop-book"
"sequenceiq/hadoop-docker" -> "databricks/reference-apps"
"sequenceiq/hadoop-docker" -> "alvinhenrick/hadoop-mutinode"
"sequenceiq/hadoop-docker" -> "big-data-europe/docker-hive"
"sequenceiq/hadoop-docker" -> "bigdatafoundation/docker-hadoop"
"sequenceiq/hadoop-docker" -> "HariSekhon/Dockerfiles"
"sequenceiq/hadoop-docker" -> "databricks/spark-avro"
"databricks/koalas" -> "delta-io/delta" ["e"=1]
"databricks/koalas" -> "databricks/spark-deep-learning"
"databricks/koalas" -> "vaexio/vaex" ["e"=1]
"databricks/koalas" -> "mlflow/mlflow" ["e"=1]
"databricks/koalas" -> "modin-project/modin" ["e"=1]
"databricks/koalas" -> "microsoft/SynapseML"
"databricks/koalas" -> "awslabs/deequ" ["e"=1]
"databricks/koalas" -> "nteract/papermill" ["e"=1]
"databricks/koalas" -> "dask/dask" ["e"=1]
"databricks/koalas" -> "Netflix/metaflow" ["e"=1]
"databricks/koalas" -> "databricks/scala-style-guide" ["e"=1]
"databricks/koalas" -> "amundsen-io/amundsen" ["e"=1]
"databricks/koalas" -> "feast-dev/feast" ["e"=1]
"databricks/koalas" -> "jupyter-incubator/sparkmagic"
"databricks/koalas" -> "alteryx/featuretools" ["e"=1]
"dlwh/epic" -> "dlwh/puck"
"dlwh/epic" -> "factorie/factorie" ["e"=1]
"dlwh/epic" -> "scalanlp/chalk"
"dlwh/epic" -> "clulab/processors"
"dlwh/epic" -> "scalanlp/breeze" ["e"=1]
"dlwh/epic" -> "databricks/spark-corenlp"
"dlwh/epic" -> "saddle/saddle" ["e"=1]
"deanwampler/spark-scala-tutorial" -> "deanwampler/JustEnoughScalaForSpark"
"deanwampler/spark-scala-tutorial" -> "deanwampler/programming-scala-book-code-examples" ["e"=1]
"deanwampler/spark-scala-tutorial" -> "spark-notebook/spark-notebook"
"deanwampler/spark-scala-tutorial" -> "jadianes/spark-py-notebooks"
"deanwampler/spark-scala-tutorial" -> "databricks/reference-apps"
"deanwampler/spark-scala-tutorial" -> "spirom/LearningSpark"
"deanwampler/spark-scala-tutorial" -> "databricks/scala-style-guide" ["e"=1]
"deanwampler/spark-scala-tutorial" -> "killrweather/killrweather"
"deanwampler/spark-scala-tutorial" -> "databricks/spark-training"
"deanwampler/spark-scala-tutorial" -> "japila-books/apache-spark-internals"
"deanwampler/spark-scala-tutorial" -> "databricks/learning-spark"
"deanwampler/spark-scala-tutorial" -> "awesome-spark/awesome-spark" ["e"=1]
"deanwampler/spark-scala-tutorial" -> "sryza/spark-timeseries"
"deanwampler/spark-scala-tutorial" -> "alexandru/scala-best-practices" ["e"=1]
"deanwampler/spark-scala-tutorial" -> "databricks/spark-deep-learning"
"Huawei-Hadoop/hindex" -> "NGDATA/hbase-indexer"
"Huawei-Hadoop/hindex" -> "hbase-trx/hbase-transactional-tableindexed"
"Huawei-Hadoop/hindex" -> "apache/phoenix" ["e"=1]
"Huawei-Hadoop/hindex" -> "larsgeorge/hbase-book"
"Huawei-Hadoop/hindex" -> "HuaweiBigData/astro"
"Huawei-Hadoop/hindex" -> "nerdammer/spark-hbase-connector"
"Huawei-Hadoop/hindex" -> "Huawei-Spark/Spark-SQL-on-HBase"
"Huawei-Hadoop/hindex" -> "caroljmcdonald/SparkStreamingHBaseExample"
"Huawei-Hadoop/hindex" -> "OpenTSDB/asynchbase"
"Huawei-Hadoop/hindex" -> "sdksdk0/Elasticsearch-Hbase"
"Huawei-Hadoop/hindex" -> "flink-china/flink-forward-china-2018" ["e"=1]
"Huawei-Hadoop/hindex" -> "apache/hbase" ["e"=1]
"Huawei-Hadoop/hindex" -> "forcedotcom/phoenix"
"codelibs/elasticsearch-taste" -> "pandastrike/bayzee"
"codelibs/elasticsearch-taste" -> "sdhu/elasticsearch-prediction"
"codelibs/elasticsearch-taste" -> "hadashiA/elasticsearch-flavor"
"Observe-secretly/HbaseGUI" -> "bit-ware/HBaseXplorer"
"Observe-secretly/HbaseGUI" -> "HY-ZhengWei/HBaseClient"
"Observe-secretly/HbaseGUI" -> "apache/hbase-operator-tools"
"Observe-secretly/HbaseGUI" -> "apachecn/hbase-doc-zh" ["e"=1]
"Observe-secretly/HbaseGUI" -> "Qihoo360/XSQL" ["e"=1]
"lessthanoptimal/BoofCV" -> "lessthanoptimal/BoofAndroidDemo"
"lessthanoptimal/BoofCV" -> "lessthanoptimal/PyBoof"
"lessthanoptimal/BoofCV" -> "openimaj/openimaj"
"lessthanoptimal/BoofCV" -> "lessthanoptimal/ejml"
"lessthanoptimal/BoofCV" -> "bytedeco/javacv" ["e"=1]
"lessthanoptimal/BoofCV" -> "alicevision/AliceVision" ["e"=1]
"lessthanoptimal/BoofCV" -> "nguyenq/tess4j" ["e"=1]
"lessthanoptimal/BoofCV" -> "jeffheaton/encog-java-core"
"lessthanoptimal/BoofCV" -> "vlfeat/vlfeat" ["e"=1]
"lessthanoptimal/BoofCV" -> "DiegoCatalano/Catalano-Framework"
"lessthanoptimal/BoofCV" -> "openMVG/openMVG" ["e"=1]
"lessthanoptimal/BoofCV" -> "sweeneychris/TheiaSfM" ["e"=1]
"lessthanoptimal/BoofCV" -> "fommil/matrix-toolkits-java"
"lessthanoptimal/BoofCV" -> "marknabil/SFM-Visual-SLAM" ["e"=1]
"lessthanoptimal/BoofCV" -> "visionworkbench/visionworkbench" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "linyiqun/DataMiningAlgorithm"
"Flowerowl/Big_Data_Resources" -> "jobbole/awesome-machine-learning-cn" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "memect/hao" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "endymecy/spark-ml-source-analysis"
"Flowerowl/Big_Data_Resources" -> "ty4z2008/Qix" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "egrcc/guidetodatamining" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "jacksu/utils4s"
"Flowerowl/Big_Data_Resources" -> "lw-lin/CoolplaySpark"
"Flowerowl/Big_Data_Resources" -> "lenskit/lenskit" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "gnemoug/distribute_crawler" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "ocelma/python-recsys" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "guoguibing/librec" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "FudanNLP/fnlp" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "lzjqsdd/scikit-learn-doc-cn" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "Syndrome777/DeepLearningTutorial" ["e"=1]
"kevinschaich/pyspark-cheatsheet" -> "cartershanklin/pyspark-cheatsheet"
"kevinschaich/pyspark-cheatsheet" -> "MingChen0919/learning-apache-spark"
"kevinschaich/pyspark-cheatsheet" -> "spark-examples/pyspark-examples"
"kevinschaich/pyspark-cheatsheet" -> "mahmoudparsian/pyspark-tutorial"
"kevinschaich/pyspark-cheatsheet" -> "edyoda/pyspark-tutorial"
"kevinschaich/pyspark-cheatsheet" -> "tirthajyoti/Spark-with-Python"
"kevinschaich/pyspark-cheatsheet" -> "awesome-spark/awesome-spark" ["e"=1]
"kevinschaich/pyspark-cheatsheet" -> "AlexIoannides/pyspark-example-project" ["e"=1]
"kevinschaich/pyspark-cheatsheet" -> "XD-DENG/Spark-practice"
"kevinschaich/pyspark-cheatsheet" -> "palantir/pyspark-style-guide" ["e"=1]
"kevinschaich/pyspark-cheatsheet" -> "mahmoudparsian/data-algorithms-with-spark"
"kevinschaich/pyspark-cheatsheet" -> "andfanilo/pyspark-tutorial"
"kevinschaich/pyspark-cheatsheet" -> "UrbanInstitute/pyspark-tutorials"
"kevinschaich/pyspark-cheatsheet" -> "josephmachado/data_engineering_best_practices" ["e"=1]
"kevinschaich/pyspark-cheatsheet" -> "josephmachado/beginner_de_project" ["e"=1]
"japila-books/spark-sql-internals" -> "japila-books/apache-spark-internals"
"japila-books/spark-sql-internals" -> "japila-books/spark-structured-streaming-internals"
"japila-books/spark-sql-internals" -> "japila-books/delta-lake-internals"
"japila-books/spark-sql-internals" -> "jaceklaskowski/kafka-notebook"
"japila-books/spark-sql-internals" -> "jaceklaskowski/mastering-kafka-streams-book"
"japila-books/spark-sql-internals" -> "apache/incubator-gluten" ["e"=1]
"japila-books/spark-sql-internals" -> "LucaCanali/sparkMeasure" ["e"=1]
"japila-books/spark-sql-internals" -> "jaceklaskowski/spark-workshop"
"japila-books/spark-sql-internals" -> "apache/celeborn" ["e"=1]
"japila-books/spark-sql-internals" -> "awesome-spark/awesome-spark" ["e"=1]
"japila-books/spark-sql-internals" -> "jaceklaskowski/spark-kubernetes-book"
"japila-books/spark-sql-internals" -> "databricks/spark-sql-perf" ["e"=1]
"japila-books/spark-sql-internals" -> "Pushkr/Apache-Spark-Hands-On"
"japila-books/spark-sql-internals" -> "Intel-bigdata/spark-adaptive" ["e"=1]
"japila-books/spark-sql-internals" -> "apache/kyuubi" ["e"=1]
"amplab/graphx" -> "endymecy/spark-graphx-source-analysis"
"jelmerk/hnswlib" -> "stepstone-tech/hnswlib-jna"
"jelmerk/hnswlib" -> "annoy4s/annoy4s"
"jelmerk/hnswlib" -> "spotify/annoy-java"
"jelmerk/hnswlib" -> "ZJULearning/nsg" ["e"=1]
"jelmerk/hnswlib" -> "opensearch-project/k-NN" ["e"=1]
"achinnasamy/bigdata" -> "Larry3z/HadoopRelatedBooks"
"achinnasamy/bigdata" -> "databricks/Spark-The-Definitive-Guide"
"achinnasamy/bigdata" -> "achinnasamy/Free-Deep-Learning-Books" ["e"=1]
"achinnasamy/bigdata" -> "vaquarkhan/Apache-Kafka-poc-and-notes"
"achinnasamy/bigdata" -> "phatak-dev/spark2.0-examples"
"achinnasamy/bigdata" -> "polomarcus/Spark-Structured-Streaming-Examples"
"jblas-project/jblas" -> "fommil/matrix-toolkits-java"
"jblas-project/jblas" -> "fommil/netlib-java"
"jblas-project/jblas" -> "lessthanoptimal/ejml"
"jblas-project/jblas" -> "vkostyukov/la4j"
"jblas-project/jblas" -> "hughperkins/jeigen"
"jblas-project/jblas" -> "optimatika/ojAlgo"
"jblas-project/jblas" -> "deeplearning4j/nd4j" ["e"=1]
"jeffheaton/encog-java-core" -> "jeffheaton/encog-java-examples"
"jeffheaton/encog-java-core" -> "jeffheaton/encog-java-workbench"
"jeffheaton/encog-java-core" -> "jeffheaton/encog-dotnet-core" ["e"=1]
"jeffheaton/encog-java-core" -> "jeffheaton/encog-c"
"jeffheaton/encog-java-core" -> "neuroph/neuroph"
"jeffheaton/encog-java-core" -> "EdwardRaff/JSAT"
"jeffheaton/encog-java-core" -> "datumbox/datumbox-framework"
"jeffheaton/encog-java-core" -> "jeffheaton/encog-sample-java"
"jeffheaton/encog-java-core" -> "ivan-vasilev/neuralnetworks"
"nikolaypavlov/MLPNeuralNet" -> "danielsdeleo/Decider"
"nikolaypavlov/MLPNeuralNet" -> "h2oai/h2o-2"
"nikolaypavlov/MLPNeuralNet" -> "jubatus/jubatus"
"nikolaypavlov/MLPNeuralNet" -> "cloudera/oryx"
"nikolaypavlov/MLPNeuralNet" -> "mikeizbicki/HLearn" ["e"=1]
"nikolaypavlov/MLPNeuralNet" -> "ryanb/ruby-warrior" ["e"=1]
"nikolaypavlov/MLPNeuralNet" -> "stsievert/swix" ["e"=1]
"nikolaypavlov/MLPNeuralNet" -> "johnmyleswhite/ML_for_Hackers" ["e"=1]
"nikolaypavlov/MLPNeuralNet" -> "numenta/nupic-legacy" ["e"=1]
"nikolaypavlov/MLPNeuralNet" -> "TaimurAyaz/TAOverlay" ["e"=1]
"databricks/LearningSparkV2" -> "databricks/Spark-The-Definitive-Guide"
"databricks/LearningSparkV2" -> "databricks/devrel" ["e"=1]
"databricks/LearningSparkV2" -> "databricks/learning-spark"
"databricks/LearningSparkV2" -> "awesome-spark/awesome-spark" ["e"=1]
"databricks/LearningSparkV2" -> "spark-examples/pyspark-examples"
"databricks/LearningSparkV2" -> "databricks-academy/data-engineering-with-databricks-english" ["e"=1]
"databricks/LearningSparkV2" -> "MrPowers/chispa" ["e"=1]
"databricks/LearningSparkV2" -> "delta-io/delta" ["e"=1]
"databricks/LearningSparkV2" -> "damklis/DataEngineeringProject" ["e"=1]
"databricks/LearningSparkV2" -> "AlexIoannides/pyspark-example-project" ["e"=1]
"databricks/LearningSparkV2" -> "japila-books/apache-spark-internals"
"databricks/LearningSparkV2" -> "BasPH/data-pipelines-with-apache-airflow" ["e"=1]
"databricks/LearningSparkV2" -> "databricks/koalas"
"databricks/LearningSparkV2" -> "databricks/delta-live-tables-notebooks" ["e"=1]
"databricks/LearningSparkV2" -> "derar-alhussein/Databricks-Certified-Data-Engineer-Associate" ["e"=1]
"apache/hbase-connectors" -> "apache/hbase-operator-tools"
"apache/hbase-connectors" -> "hortonworks-spark/shc"
"apache/hbase-connectors" -> "cloudera-labs/SparkOnHBase"
"apache/hbase-connectors" -> "apache/phoenix-connectors"
"apache/hbase-connectors" -> "apache/phoenix" ["e"=1]
"apache/hbase-connectors" -> "analysys/presto-hbase-connector" ["e"=1]
"apache/hbase-connectors" -> "Huawei-Spark/Spark-SQL-on-HBase"
"apache/hbase-connectors" -> "allwefantasy/spark-binlog" ["e"=1]
"cloudera/oryx" -> "h2oai/h2o-2"
"cloudera/oryx" -> "OryxProject/oryx"
"cloudera/oryx" -> "apache/mahout" ["e"=1]
"cloudera/oryx" -> "SeldonIO/seldon-server"
"cloudera/oryx" -> "jubatus/jubatus"
"cloudera/oryx" -> "danielsdeleo/Decider"
"cloudera/oryx" -> "datumbox/datumbox-framework"
"cloudera/oryx" -> "nikolaypavlov/MLPNeuralNet"
"cloudera/oryx" -> "myrrix/myrrix-recommender" ["e"=1]
"cloudera/oryx" -> "cloudera/spark-dataflow" ["e"=1]
"cloudera/oryx" -> "myui/hivemall" ["e"=1]
"thunder-project/thunder" -> "bolt-project/bolt"
"thunder-project/thunder" -> "lightning-viz/lightning" ["e"=1]
"thunder-project/thunder" -> "lensacom/sparkit-learn"
"thunder-project/thunder" -> "sparklingpandas/sparklingpandas"
"thunder-project/thunder" -> "flatironinstitute/CaImAn" ["e"=1]
"thunder-project/thunder" -> "amplab/keystone"
"thunder-project/thunder" -> "codeneuro/neurofinder" ["e"=1]
"thunder-project/thunder" -> "binder-project/binder" ["e"=1]
"thunder-project/thunder" -> "nipy/nitime" ["e"=1]
"thunder-project/thunder" -> "dirkneumann/deepdist"
"thunder-project/thunder" -> "amplab/succinct"
"thunder-project/thunder" -> "flatironinstitute/CaImAn-MATLAB" ["e"=1]
"thunder-project/thunder" -> "sryza/spark-timeseries"
"tirthajyoti/Optimization-Python" -> "tirthajyoti/Deep-learning-with-Python"
"runawayhorse001/LearningApacheSpark" -> "runawayhorse001/CheatSheet"
"runawayhorse001/LearningApacheSpark" -> "runawayhorse001/PythonTipsDS"
"runawayhorse001/LearningApacheSpark" -> "MingChen0919/learning-apache-spark"
"runawayhorse001/LearningApacheSpark" -> "jkthompson/pyspark-pictures"
"runawayhorse001/PythonTipsDS" -> "runawayhorse001/SphinxGithub"
"runawayhorse001/PythonTipsDS" -> "runawayhorse001/PyAudit"
"runawayhorse001/CheatSheet" -> "runawayhorse001/PythonTipsDS"
"ZEPL/zeppelin" -> "apache/zeppelin" ["e"=1]
"ZEPL/zeppelin" -> "ibm-et/spark-kernel"
"ZEPL/zeppelin" -> "spark-notebook/spark-notebook"
"ZEPL/zeppelin" -> "ZEPL/z-manager"
"ZEPL/zeppelin" -> "quantifind/wisp" ["e"=1]
"ZEPL/zeppelin" -> "naver/yobi" ["e"=1]
"ZEPL/zeppelin" -> "apache/tajo"
"ZEPL/zeppelin" -> "gearpump/gearpump" ["e"=1]
"mattpap/IScala" -> "Bridgewater/scala-notebook"
"mattpap/IScala" -> "almond-sh/almond" ["e"=1]
"mattpap/IScala" -> "hohonuuli/sparknotebook"
"mattpap/IScala" -> "tribbloid/ISpark"
"ericxiao251/spark-syntax" -> "UrbanInstitute/pyspark-tutorials"
"ericxiao251/spark-syntax" -> "XD-DENG/Spark-practice"
"ericxiao251/spark-syntax" -> "kevinschaich/pyspark-cheatsheet"
"ericxiao251/spark-syntax" -> "ekampf/PySpark-Boilerplate"
"ericxiao251/spark-syntax" -> "awesome-spark/spark-gotchas" ["e"=1]
"ericxiao251/spark-syntax" -> "gtoonstra/etl-with-airflow" ["e"=1]
"susanli2016/Deep-Learning-with-deeplearning.ai" -> "susanli2016/Machine-Learning-with-AndrewNg"
"hardikvasa/http-connection-lifecycle" -> "hardikvasa/database-journal"
"ivan-vasilev/neuralnetworks" -> "neuroph/neuroph"
"ivan-vasilev/neuralnetworks" -> "jeffheaton/encog-java-core"
"ivan-vasilev/neuralnetworks" -> "jlmd/SimpleNeuralNetwork"
"ivan-vasilev/neuralnetworks" -> "amten/NeuralNetwork"
"ivan-vasilev/neuralnetworks" -> "EdwardRaff/JSAT"
"ivan-vasilev/neuralnetworks" -> "deeplearning4j/nd4j" ["e"=1]
"ivan-vasilev/neuralnetworks" -> "yusugomori/DeepLearning" ["e"=1]
"ivan-vasilev/neuralnetworks" -> "datumbox/datumbox-framework"
"ivan-vasilev/neuralnetworks" -> "haifengl/smile" ["e"=1]
"ivan-vasilev/neuralnetworks" -> "amaas/stanford_dl_ex" ["e"=1]
"ivan-vasilev/neuralnetworks" -> "nitishsrivastava/deepnet" ["e"=1]
"ivan-vasilev/neuralnetworks" -> "deeplearning4j/Canova"
"ivan-vasilev/neuralnetworks" -> "hughperkins/DeepCL" ["e"=1]
"ivan-vasilev/neuralnetworks" -> "rasmusbergpalm/DeepLearnToolbox" ["e"=1]
"ivan-vasilev/neuralnetworks" -> "deeplearning4j/deeplearning4j" ["e"=1]
"JahstreetOrg/spark-on-kubernetes-helm" -> "JahstreetOrg/spark-on-kubernetes-docker"
"JahstreetOrg/spark-on-kubernetes-helm" -> "jahstreet/incubator-livy"
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/Optimization-Python"
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/TensorFlow_Basics"
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/PyTorch_Machine_Learning"
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/Machine-Learning-with-Python" ["e"=1]
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/Stats-Maths-with-Python" ["e"=1]
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/Interactive_Machine_Learning"
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/Spark-with-Python"
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/Algorithm_Maths_Python"
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/ML-apps-with-Streamlit"
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/Algorithm-Data-Structures-Python"
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/Web-Database-Analytics"
"tirthajyoti/Deep-learning-with-Python" -> "tirthajyoti/Scikit-image-processing"
"rockthejvm/scala-2-advanced" -> "rockthejvm/scala-2-beginners"
"rockthejvm/scala-2-advanced" -> "rockthejvm/akka-classic-essentials"
"rockthejvm/scala-2-advanced" -> "rockthejvm/spark-optimization"
"rockthejvm/scala-2-advanced" -> "rockthejvm/spark-performance-tuning"
"rockthejvm/scala-2-advanced" -> "rockthejvm/akka-http"
"rockthejvm/scala-2-advanced" -> "rockthejvm/udemy-akka-remoting-clustering"
"rockthejvm/scala-2-advanced" -> "rockthejvm/scala-problems-interviews"
"rockthejvm/scala-2-advanced" -> "rockthejvm/udemy-spark-streaming"
"rockthejvm/scala-2-advanced" -> "rockthejvm/spark-essentials"
"rockthejvm/scala-2-advanced" -> "rockthejvm/udemy-akka-persistence-starter"
"rockthejvm/scala-2-advanced" -> "rockthejvm/udemy-akka-serialization"
"rockthejvm/scala-2-advanced" -> "rockthejvm/akka-streams"
"stanford-futuredata/sparser" -> "stanford-futuredata/macrobase"
"dajobe/hbase-docker" -> "big-data-europe/docker-hbase"
"dajobe/hbase-docker" -> "python-happybase/happybase" ["e"=1]
"dajobe/hbase-docker" -> "krejcmat/hadoop-hbase-docker"
"dajobe/hbase-docker" -> "HariSekhon/Dockerfiles"
"Apress/machine-learning-with-pyspark" -> "edyoda/machine-learning-using-pyspark"
"holdenk/fastdataprocessingwithsparkexamples" -> "holdenk/chef-cookbook-spark"
"holdenk/fastdataprocessingwithsparkexamples" -> "holdenk/fastdataprocessingwithspark-sharkexamples"
"tirthajyoti/Web-Database-Analytics" -> "hardikvasa/webb"
"tirthajyoti/Web-Database-Analytics" -> "tirthajyoti/Algorithm_Maths_Python"
"tirthajyoti/Web-Database-Analytics" -> "tirthajyoti/Deep-learning-with-Python"
"tirthajyoti/Web-Database-Analytics" -> "tirthajyoti/Interactive_Machine_Learning"
"h2oai/driverlessai-recipes" -> "h2oai/tutorials"
"h2oai/driverlessai-recipes" -> "h2oai/awesome-h2o"
"OpenTSDB/tcollector" -> "OpenTSDB/opentsdb" ["e"=1]
"OpenTSDB/tcollector" -> "OpenTSDB/asynchbase"
"OpenTSDB/tcollector" -> "OpenTSDB/opentsdb-elasticsearch"
"edyoda/pyspark-tutorial" -> "awantik/pyspark-learning"
"edyoda/pyspark-tutorial" -> "MingChen0919/learning-apache-spark"
"jleetutorial/python-spark-tutorial" -> "jleetutorial/python-spark-streaming"
"jleetutorial/python-spark-tutorial" -> "jleetutorial/sparkTutorial"
"jleetutorial/python-spark-tutorial" -> "jleetutorial/scala-spark-tutorial"
"AndrewKuzmin/spark-structured-streaming-examples" -> "stefcorda/sparkStreamingETL"
"apache/hbase-operator-tools" -> "apache/hbase-connectors"
"apache/hbase-operator-tools" -> "CCweixiao/HydraQL-Manager"
"apache/hbase-operator-tools" -> "DarkPhoenixs/hbase-meta-repair"
"apache/hbase-operator-tools" -> "apache/phoenix" ["e"=1]
"holdenk/learning-spark-examples" -> "holdenk/fastdataprocessingwithsparkexamples"
"holdenk/learning-spark-examples" -> "holdenk/elasticsearchspark"
"holdenk/learning-spark-examples" -> "high-performance-spark/high-performance-spark-examples"
"holdenk/learning-spark-examples" -> "spirom/LearningSpark"
"holdenk/learning-spark-examples" -> "phatak-dev/spark2.0-examples"
"kite-sdk/kite" -> "kite-sdk/kite-examples"
"kite-sdk/kite" -> "NGDATA/hbase-indexer"
"HariSekhon/HAProxy-configs" -> "HariSekhon/Terraform"
"HariSekhon/HAProxy-configs" -> "HariSekhon/awesome-command-line-apps"
"HariSekhon/HAProxy-configs" -> "HariSekhon/cheatsheets"
"susanli2016/PySpark-and-MLlib" -> "PacktPublishing/Learning-PySpark"
"susanli2016/PySpark-and-MLlib" -> "susanli2016/Deep-Learning-with-deeplearning.ai"
"susanli2016/PySpark-and-MLlib" -> "XD-DENG/Spark-practice"
"susanli2016/PySpark-and-MLlib" -> "UrbanInstitute/pyspark-tutorials"
"susanli2016/PySpark-and-MLlib" -> "tirthajyoti/Spark-with-Python"
"susanli2016/PySpark-and-MLlib" -> "mahmoudparsian/pyspark-tutorial"
"susanli2016/PySpark-and-MLlib" -> "srivatsan88/Mastering-Apache-Spark" ["e"=1]
"susanli2016/PySpark-and-MLlib" -> "jadianes/spark-py-notebooks"
"susanli2016/PySpark-and-MLlib" -> "MingChen0919/learning-apache-spark"
"sparklingpandas/sparklingpandas" -> "lensacom/sparkit-learn"
"sparklingpandas/sparklingpandas" -> "tburmeister/pyneural" ["e"=1]
"HebiRobotics/MFL" -> "diffplug/matfilerw"
"tzaeschke/tinspin-indexes" -> "tzaeschke/phtree"
"tzaeschke/tinspin-indexes" -> "tzaeschke/TinSpin"
"mvillarrealb/docker-spark-cluster" -> "big-data-europe/docker-spark"
"mvillarrealb/docker-spark-cluster" -> "cluster-apps-on-docker/spark-standalone-cluster-on-docker"
"mvillarrealb/docker-spark-cluster" -> "sdesilva26/docker-spark"
"mvillarrealb/docker-spark-cluster" -> "cordon-thiago/airflow-spark" ["e"=1]
"mvillarrealb/docker-spark-cluster" -> "big-data-europe/docker-hadoop-spark-workbench"
"mvillarrealb/docker-spark-cluster" -> "bitnami/bitnami-docker-spark"
"mvillarrealb/docker-spark-cluster" -> "gettyimages/docker-spark"
"mvillarrealb/docker-spark-cluster" -> "JahstreetOrg/spark-on-kubernetes-helm"
"mvillarrealb/docker-spark-cluster" -> "panovvv/bigdata-docker-compose"
"mvillarrealb/docker-spark-cluster" -> "EthicalML/kafka-spark-streaming-zeppelin-docker"
"mvillarrealb/docker-spark-cluster" -> "Marcel-Jan/docker-hadoop-spark"
"mvillarrealb/docker-spark-cluster" -> "datamechanics/examples"
"mvillarrealb/docker-spark-cluster" -> "big-data-europe/docker-hadoop"
"mvillarrealb/docker-spark-cluster" -> "xnuinside/airflow_in_docker_compose"
"mvillarrealb/docker-spark-cluster" -> "mrn-aglic/pyspark-playground"
"uber/neuropod" -> "uber/fiber"
"uber/neuropod" -> "microsoft/hummingbird" ["e"=1]
"uber/neuropod" -> "uber/petastorm"
"uber/neuropod" -> "pytorch/elastic" ["e"=1]
"uber/neuropod" -> "tuplex/tuplex" ["e"=1]
"uber/neuropod" -> "KartikChugh/Otto" ["e"=1]
"uber/neuropod" -> "tensorflow/runtime" ["e"=1]
"uber/neuropod" -> "tensorflow/custom-op" ["e"=1]
"mingfang/docker-predictionio" -> "steveny2k/docker-predictionio"
"mingfang/docker-predictionio" -> "sphereio/docker-predictionio"
"jaceklaskowski/mastering-kafka-streams-book" -> "jaceklaskowski/kafka-notebook"
"san089/Cloudera_Material" -> "okmich/cca175notes"
"h2oai/tutorials" -> "h2oai/driverlessai-tutorials"
"alitouka/spark_dbscan" -> "irvingc/dbscan-on-spark"
"alitouka/spark_dbscan" -> "scalanlp/nak"
"alitouka/spark_dbscan" -> "mraad/dbscan-spark"
"alitouka/spark_dbscan" -> "bwoneill/pypardis"
"alitouka/spark_dbscan" -> "yu-iskw/hierarchical-clustering-with-spark"
"alitouka/spark_dbscan" -> "saurfang/spark-tsne"
"alitouka/spark_dbscan" -> "syoummer/SpatialSpark" ["e"=1]
"alitouka/spark_dbscan" -> "crim-ca/patchwork"
"chuanenlin/shutterscrape" -> "Diastro/Zeek"
"tirthajyoti/PyTorch_Machine_Learning" -> "tirthajyoti/TensorFlow_Basics"
"optimatika/ojAlgo" -> "lessthanoptimal/ejml"
"optimatika/ojAlgo" -> "ujmp/universal-java-matrix-package"
"optimatika/ojAlgo" -> "jblas-project/jblas"
"optimatika/ojAlgo" -> "apache/commons-math" ["e"=1]
"optimatika/ojAlgo" -> "vkostyukov/la4j"
"optimatika/ojAlgo" -> "chocoteam/choco-solver" ["e"=1]
"optimatika/ojAlgo" -> "fommil/matrix-toolkits-java"
"optimatika/ojAlgo" -> "finmath/finmath-lib" ["e"=1]
"optimatika/ojAlgo" -> "umontreal-simul/ssj"
"optimatika/ojAlgo" -> "Kotlin/kotlin-numpy" ["e"=1]
"optimatika/ojAlgo" -> "kyonifer/koma" ["e"=1]
"optimatika/ojAlgo" -> "Hipparchus-Math/hipparchus"
"rockthejvm/akka-http" -> "rockthejvm/udemy-akka-serialization"
"rockthejvm/akka-http" -> "rockthejvm/akka-streams"
"rockthejvm/akka-http" -> "rockthejvm/akka-persistence"
"rockthejvm/akka-http" -> "rockthejvm/udemy-akka-remoting-clustering"
"tirthajyoti/Spark-with-Python" -> "XD-DENG/Spark-practice"
"tirthajyoti/Spark-with-Python" -> "abulbasar/pyspark-examples"
"tirthajyoti/Spark-with-Python" -> "UrbanInstitute/pyspark-tutorials"
"tirthajyoti/Spark-with-Python" -> "mahmoudparsian/pyspark-tutorial"
"tirthajyoti/Spark-with-Python" -> "spark-examples/pyspark-examples"
"tirthajyoti/Spark-with-Python" -> "susanli2016/PySpark-and-MLlib"
"tirthajyoti/Spark-with-Python" -> "jadianes/spark-py-notebooks"
"tirthajyoti/Spark-with-Python" -> "PacktPublishing/Learning-PySpark"
"tirthajyoti/Spark-with-Python" -> "cartershanklin/pyspark-cheatsheet"
"tirthajyoti/Spark-with-Python" -> "drabastomek/learningPySpark"
"tirthajyoti/Spark-with-Python" -> "tirthajyoti/Deep-learning-with-Python"
"tirthajyoti/Spark-with-Python" -> "kevinschaich/pyspark-cheatsheet"
"tirthajyoti/Spark-with-Python" -> "arverma/TowardsDataEngineering"
"tirthajyoti/Spark-with-Python" -> "awantik/pyspark-learning"
"tirthajyoti/Spark-with-Python" -> "edyoda/pyspark-tutorial"
"jeffheaton/encog-java-examples" -> "jeffheaton/encog-java-workbench"
"jeffheaton/encog-java-examples" -> "jeffheaton/encog-java-core"
"jeffheaton/encog-java-examples" -> "jeffheaton/encog-sample-java"
"drabastomek/PySparkCookbook" -> "drabastomek/learningPySpark_video"
"pandastrike/bayzee" -> "polyfractal/ElasticBayes"
"neuroph/NeurophFramework" -> "neuroph/NeurophStudio"
"Diastro/Zeek" -> "hardikvasa/webb"
"MarcKaminski/spark-FeatureSelection" -> "sramirez/spark-infotheoretic-feature-selection"
"JahstreetOrg/spark-on-kubernetes-docker" -> "jahstreet/incubator-livy"
"JahstreetOrg/spark-on-kubernetes-docker" -> "JahstreetOrg/spark-on-kubernetes-helm"
"JahstreetOrg/spark-on-kubernetes-docker" -> "lightbend/spark-history-server-docker"
"mahmoudparsian/pyspark-algorithms" -> "mahmoudparsian/machine-learning-course"
"jleetutorial/python-spark-streaming" -> "jleetutorial/python-spark-tutorial"
"jleetutorial/python-spark-streaming" -> "sridharswamy/Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka"
"jleetutorial/python-spark-streaming" -> "LearningJournal/Spark-Streaming-In-Python"
"wurstmeister/storm-kafka-0.8-plus-test" -> "wurstmeister/storm-kafka-0.8-plus"
"rockthejvm/akka-streams" -> "rockthejvm/akka-http"
"rockthejvm/akka-streams" -> "rockthejvm/udemy-akka-remoting-clustering"
"rockthejvm/akka-streams" -> "rockthejvm/udemy-akka-serialization"
"rockthejvm/akka-streams" -> "rockthejvm/akka-persistence"
"LinkedInAttic/scanns" -> "soundcloud/cosine-lsh-join-spark"
"LinkedInAttic/scanns" -> "marufaytekin/lsh-spark"
"LinkedInAttic/scanns" -> "karlhigley/spark-neighbors"
"LinkedInAttic/scanns" -> "hibayesian/spark-fm" ["e"=1]
"LinkedInAttic/scanns" -> "emesday/spark-annoy"
"jahstreet/incubator-livy" -> "JahstreetOrg/spark-on-kubernetes-docker"
"jeffheaton/encog-java-workbench" -> "jeffheaton/encog-java-examples"
"neuroph/NeurophStudio" -> "neuroph/NeurophFramework"
"holdenk/spark-validator" -> "databricks/spark-integration-tests"
"holdenk/spark-validator" -> "holdenk/spark-structured-streaming-ml"
"holdenk/spark-validator" -> "juanrh/sscheck"
"holdenk/spark-validator" -> "high-performance-spark/high-performance-spark-examples"
"runawayhorse001/PyAudit" -> "runawayhorse001/SphinxGithub"
"beyondj2ee/flumeng-kafka-plugin" -> "wurstmeister/storm-kafka-0.8-plus"
"polyfractal/ElasticBayes" -> "pandastrike/bayzee"
"little-bit-shy/docker-hadoop" -> "ibywind/docker-hadoop-spark-hive"
"rockthejvm/akka-classic-essentials" -> "rockthejvm/akka-persistence"
"rockthejvm/akka-classic-essentials" -> "rockthejvm/udemy-akka-persistence-starter"
"rockthejvm/akka-classic-essentials" -> "rockthejvm/udemy-akka-remoting-clustering"
"rockthejvm/akka-classic-essentials" -> "rockthejvm/akka-streams"
"rockthejvm/akka-classic-essentials" -> "rockthejvm/akka-http"
"rockthejvm/akka-classic-essentials" -> "rockthejvm/udemy-akka-serialization"
"rockthejvm/akka-classic-essentials" -> "rockthejvm/scala-2-advanced"
"rockthejvm/akka-classic-essentials" -> "rockthejvm/udemy-akka-streams"
"tirthajyoti/Algorithm-Data-Structures-Python" -> "tirthajyoti/TensorFlow_Basics"
"tirthajyoti/Algorithm-Data-Structures-Python" -> "tirthajyoti/Algorithm_Maths_Python"
"rockthejvm/udemy-akka-remoting-clustering" -> "rockthejvm/udemy-akka-serialization"
"rockthejvm/akka-persistence" -> "rockthejvm/akka-http"
"rockthejvm/akka-persistence" -> "rockthejvm/udemy-akka-persistence-starter"
"rockthejvm/udemy-akka-persistence-starter" -> "rockthejvm/udemy-akka-remoting-clustering"
"rockthejvm/udemy-akka-serialization" -> "rockthejvm/udemy-akka-remoting-clustering"
"posix4e/Elasticsearch-HBase-River" -> "mallocator/Elasticsearch-HBase-River"
"Stratio/Decision" -> "Stratio/stratio-connector-elasticsearch"
"Stratio/Decision" -> "Stratio/stratio-connector-commons"
"Stratio/Decision" -> "Stratio/stratio-connector-mongodb"
"Stratio/Decision" -> "Stratio/stratio-connector-cassandra"
"Stratio/Decision" -> "Stratio/stratio-connector-decision"
"Stratio/Decision" -> "Stratio/cassandra"
"Stratio/Decision" -> "Stratio/ccm"
"Stratio/Decision" -> "Stratio/stratio-connector-deep"
"Stratio/Decision" -> "Stratio/stratio-connector-hdfs"
"Stratio/Decision" -> "Stratio/aerospike-client-java"
"Stratio/Decision" -> "Stratio/crossdata"
"Stratio/Decision" -> "Stratio/java-driver"
"Stratio/Decision" -> "Stratio/data-generator"
"Stratio/Decision" -> "Stratio/queries-spark-benchmark"
"Stratio/Decision" -> "Stratio/crossdata-connector-skeleton"
"Stratio/ingestion" -> "Stratio/stratio-connector-elasticsearch"
"Stratio/ingestion" -> "Stratio/stratio-connector-commons"
"Stratio/ingestion" -> "Stratio/stratio-connector-mongodb"
"Stratio/ingestion" -> "Stratio/stratio-connector-cassandra"
"Stratio/ingestion" -> "Stratio/cassandra"
"Stratio/ingestion" -> "Stratio/ccm"
"Stratio/ingestion" -> "Stratio/stratio-connector-deep"
"Stratio/ingestion" -> "Stratio/aerospike-client-java"
"Stratio/ingestion" -> "Stratio/flume"
"Stratio/ingestion" -> "Stratio/data-generator"
"Stratio/ingestion" -> "Stratio/stratio-connector-decision"
"Stratio/ingestion" -> "Stratio/stratio-connector-hdfs"
"Stratio/ingestion" -> "Stratio/java-driver"
"Stratio/ingestion" -> "Stratio/queries-spark-benchmark"
"Stratio/ingestion" -> "Stratio/wikipedia-parser"
"JerryLead/SparkInternals" -> "lw-lin/CoolplaySpark"
"JerryLead/SparkInternals" -> "ColZer/DigAndBuried" ["e"=1]
"JerryLead/SparkInternals" -> "spark-jobserver/spark-jobserver"
"JerryLead/SparkInternals" -> "databricks/learning-spark"
"JerryLead/SparkInternals" -> "japila-books/apache-spark-internals"
"JerryLead/SparkInternals" -> "databricks/scala-style-guide" ["e"=1]
"JerryLead/SparkInternals" -> "endymecy/spark-ml-source-analysis"
"JerryLead/SparkInternals" -> "flink-china/flink-training-course" ["e"=1]
"JerryLead/SparkInternals" -> "byzer-org/byzer-lang" ["e"=1]
"JerryLead/SparkInternals" -> "delta-io/delta" ["e"=1]
"JerryLead/SparkInternals" -> "apache/spark" ["e"=1]
"JerryLead/SparkInternals" -> "Alluxio/alluxio" ["e"=1]
"JerryLead/SparkInternals" -> "Angel-ML/angel" ["e"=1]
"JerryLead/SparkInternals" -> "apache/flink" ["e"=1]
"JerryLead/SparkInternals" -> "jacksu/utils4s"
"databricks/spark-csv" -> "databricks/spark-avro"
"databricks/spark-csv" -> "spark-jobserver/spark-jobserver"
"databricks/spark-csv" -> "databricks/spark-redshift" ["e"=1]
"databricks/spark-csv" -> "spark-notebook/spark-notebook"
"databricks/spark-csv" -> "databricks/tensorframes"
"databricks/spark-csv" -> "sryza/spark-timeseries"
"databricks/spark-csv" -> "cloudera/livy"
"databricks/spark-csv" -> "databricks/scala-style-guide" ["e"=1]
"databricks/spark-csv" -> "holdenk/spark-testing-base"
"databricks/spark-csv" -> "harsha2010/magellan" ["e"=1]
"databricks/spark-csv" -> "apache/cassandra-spark-connector" ["e"=1]
"databricks/spark-csv" -> "sbt/sbt-assembly" ["e"=1]
"databricks/spark-csv" -> "databricks/learning-spark"
"databricks/spark-csv" -> "spirom/LearningSpark"
"databricks/spark-csv" -> "amplab/spark-indexedrdd"
"apache/predictionio-template-similar-product" -> "PredictionIO/template-scala-parallel-leadscoring"
"apache/predictionio-template-similar-product" -> "PredictionIO/template-scala-parallel-productranking"
"apache/predictionio-template-similar-product" -> "apache/predictionio-template-attribute-based-classifier"
"apache/predictionio-template-similar-product" -> "PredictionIO/template-scala-parallel-complementarypurchase"
"apache/predictionio-template-similar-product" -> "apache/predictionio-template-recommender"
"apache/predictionio-template-similar-product" -> "apache/predictionio-template-ecom-recommender"
"apache/predictionio-template-similar-product" -> "apache/predictionio-template-skeleton"
"spark-jobserver/spark-jobserver" -> "cloudera/livy"
"spark-jobserver/spark-jobserver" -> "spark-notebook/spark-notebook"
"spark-jobserver/spark-jobserver" -> "apache/cassandra-spark-connector" ["e"=1]
"spark-jobserver/spark-jobserver" -> "holdenk/spark-testing-base"
"spark-jobserver/spark-jobserver" -> "JerryLead/SparkInternals"
"spark-jobserver/spark-jobserver" -> "lw-lin/CoolplaySpark"
"spark-jobserver/spark-jobserver" -> "apache/zeppelin" ["e"=1]
"spark-jobserver/spark-jobserver" -> "databricks/spark-csv"
"spark-jobserver/spark-jobserver" -> "apache/incubator-livy"
"spark-jobserver/spark-jobserver" -> "databricks/scala-style-guide" ["e"=1]
"spark-jobserver/spark-jobserver" -> "OryxProject/oryx"
"spark-jobserver/spark-jobserver" -> "filodb/FiloDB"
"spark-jobserver/spark-jobserver" -> "byzer-org/byzer-lang" ["e"=1]
"spark-jobserver/spark-jobserver" -> "Alluxio/alluxio" ["e"=1]
"spark-jobserver/spark-jobserver" -> "databricks/learning-spark"
"linyiqun/DataMiningAlgorithm" -> "weiweifan/Big-Data-Resources" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "apachecn/python_data_analysis_and_mining_action" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "Flowerowl/Big_Data_Resources"
"linyiqun/DataMiningAlgorithm" -> "lw-lin/CoolplaySpark"
"linyiqun/DataMiningAlgorithm" -> "nonstriater/Learn-Algorithms" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "lawlite19/MachineLearning_Python" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "datawhalechina/team-learning-data-mining" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "Wang-Jun-Chao/leetcode" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "LinXueyuanStdio/PythonDataMining" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "wangzhiwubigdata/God-Of-BigData" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "ty4z2008/Qix" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "heibaiying/BigData-Notes" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "Smilexuhc/Data-Competition-TopSolution" ["e"=1]
"linyiqun/DataMiningAlgorithm" -> "endymecy/spark-ml-source-analysis"
"linyiqun/DataMiningAlgorithm" -> "imhuay/Algorithm_Interview_Notes-Chinese" ["e"=1]
"HariSekhon/Kubernetes-configs" -> "HariSekhon/Templates"
"HariSekhon/Kubernetes-configs" -> "HariSekhon/Terraform"
"HariSekhon/Kubernetes-configs" -> "HariSekhon/GitHub-Actions"
"HariSekhon/Kubernetes-configs" -> "HariSekhon/Dockerfiles"
"HariSekhon/Kubernetes-configs" -> "HariSekhon/Jenkins"
"HariSekhon/Kubernetes-configs" -> "HariSekhon/DevOps-Python-tools"
"HariSekhon/Kubernetes-configs" -> "HariSekhon/SQL-scripts"
"HariSekhon/Kubernetes-configs" -> "HariSekhon/Knowledge-Base"
"HariSekhon/Templates" -> "HariSekhon/Terraform"
"HariSekhon/Templates" -> "HariSekhon/GitHub-Actions"
"HariSekhon/Templates" -> "HariSekhon/Jenkins"
"HariSekhon/Templates" -> "HariSekhon/Knowledge-Base"
"databricks/learning-spark" -> "sryza/aas"
"databricks/learning-spark" -> "JerryLead/SparkInternals"
"databricks/learning-spark" -> "lw-lin/CoolplaySpark"
"databricks/learning-spark" -> "databricks/Spark-The-Definitive-Guide"
"databricks/learning-spark" -> "tomwhite/hadoop-book"
"databricks/learning-spark" -> "spark-notebook/spark-notebook"
"databricks/learning-spark" -> "databricks/scala-style-guide" ["e"=1]
"databricks/learning-spark" -> "spark-jobserver/spark-jobserver"
"databricks/learning-spark" -> "yahoo/TensorFlowOnSpark"
"databricks/learning-spark" -> "endymecy/spark-ml-source-analysis"
"databricks/learning-spark" -> "databricks/spark-deep-learning"
"databricks/learning-spark" -> "apache/spark" ["e"=1]
"databricks/learning-spark" -> "databricks/spark-csv"
"databricks/learning-spark" -> "mahmoudparsian/data-algorithms-book"
"databricks/learning-spark" -> "apache/zeppelin" ["e"=1]
"tomwhite/hadoop-book" -> "databricks/learning-spark"
"tomwhite/hadoop-book" -> "larsgeorge/hbase-book"
"tomwhite/hadoop-book" -> "apache/hadoop" ["e"=1]
"tomwhite/hadoop-book" -> "JerryLead/SparkInternals"
"tomwhite/hadoop-book" -> "databricks/Spark-The-Definitive-Guide"
"tomwhite/hadoop-book" -> "apache/hive" ["e"=1]
"tomwhite/hadoop-book" -> "apache/hbase" ["e"=1]
"tomwhite/hadoop-book" -> "sryza/aas"
"tomwhite/hadoop-book" -> "lw-lin/CoolplaySpark"
"tomwhite/hadoop-book" -> "apache/storm" ["e"=1]
"tomwhite/hadoop-book" -> "cloudera/hue" ["e"=1]
"tomwhite/hadoop-book" -> "flink-china/flink-training-course" ["e"=1]
"tomwhite/hadoop-book" -> "steveloughran/winutils"
"tomwhite/hadoop-book" -> "apache/zookeeper" ["e"=1]
"tomwhite/hadoop-book" -> "elastic/elasticsearch-hadoop" ["e"=1]
"amplab/spark-indexedrdd" -> "amplab/succinct"
"amplab/spark-indexedrdd" -> "InitialDLab/Simba" ["e"=1]
"amplab/spark-indexedrdd" -> "amplab/keystone"
"amplab/spark-indexedrdd" -> "ankurdave/part"
"amplab/spark-indexedrdd" -> "databricks/tensorframes"
"amplab/spark-indexedrdd" -> "cloudera/spark-dataflow" ["e"=1]
"amplab/spark-indexedrdd" -> "databricks/spark-perf" ["e"=1]
"spark-examples/pyspark-examples" -> "mahmoudparsian/pyspark-tutorial"
"spark-examples/pyspark-examples" -> "AlexIoannides/pyspark-example-project" ["e"=1]
"spark-examples/pyspark-examples" -> "spark-examples/spark-scala-examples"
"spark-examples/pyspark-examples" -> "cartershanklin/pyspark-cheatsheet"
"spark-examples/pyspark-examples" -> "kevinschaich/pyspark-cheatsheet"
"spark-examples/pyspark-examples" -> "UrbanInstitute/pyspark-tutorials"
"spark-examples/pyspark-examples" -> "tirthajyoti/Spark-with-Python"
"spark-examples/pyspark-examples" -> "PacktPublishing/Learning-PySpark"
"spark-examples/pyspark-examples" -> "LearningJournal/Spark-Programming-In-Python"
"spark-examples/pyspark-examples" -> "krishnaik06/Pyspark-With-Python" ["e"=1]
"spark-examples/pyspark-examples" -> "OBenner/data-engineering-interview-questions" ["e"=1]
"spark-examples/pyspark-examples" -> "databricks/LearningSparkV2"
"spark-examples/pyspark-examples" -> "databricks-academy/data-engineering-with-databricks-english" ["e"=1]
"spark-examples/pyspark-examples" -> "databricks/Spark-The-Definitive-Guide"
"spark-examples/pyspark-examples" -> "alanchn31/Data-Engineering-Projects" ["e"=1]
"LearningJournal/Spark-Programming-In-Python" -> "LearningJournal/Spark-Streaming-In-Python"
"LearningJournal/Spark-Programming-In-Python" -> "spark-examples/pyspark-examples"
"LearningJournal/Spark-Programming-In-Python" -> "LearningJournal/SparkProgrammingInScala"
"LearningJournal/Spark-Programming-In-Python" -> "tirthajyoti/Spark-with-Python"
"LearningJournal/Spark-Programming-In-Python" -> "LearningJournal/Python-Foundation-Course"
"LearningJournal/Spark-Programming-In-Python" -> "derar-alhussein/Databricks-Certified-Data-Engineer-Associate" ["e"=1]
"LearningJournal/Spark-Programming-In-Python" -> "LearningJournal/Spark-Streaming-In-Scala"
"LearningJournal/Spark-Programming-In-Python" -> "vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer" ["e"=1]
"sryza/aas" -> "databricks/learning-spark"
"sryza/aas" -> "mahmoudparsian/data-algorithms-book"
"sryza/aas" -> "OryxProject/oryx"
"sryza/aas" -> "sryza/spark-timeseries"
"sryza/aas" -> "spark-notebook/spark-notebook"
"sryza/aas" -> "lw-lin/CoolplaySpark"
"sryza/aas" -> "yahoo/TensorFlowOnSpark"
"sryza/aas" -> "endymecy/spark-ml-source-analysis"
"sryza/aas" -> "JerryLead/SparkInternals"
"sryza/aas" -> "databricks/Spark-The-Definitive-Guide"
"sryza/aas" -> "databricks/reference-apps"
"sryza/aas" -> "spark-jobserver/spark-jobserver"
"sryza/aas" -> "databricks/scala-style-guide" ["e"=1]
"sryza/aas" -> "scalanlp/breeze" ["e"=1]
"sryza/aas" -> "high-performance-spark/high-performance-spark-examples"
"spark-notebook/spark-notebook" -> "spark-jobserver/spark-jobserver"
"spark-notebook/spark-notebook" -> "apache/zeppelin" ["e"=1]
"spark-notebook/spark-notebook" -> "almond-sh/almond" ["e"=1]
"spark-notebook/spark-notebook" -> "scalanlp/breeze" ["e"=1]
"spark-notebook/spark-notebook" -> "sryza/spark-timeseries"
"spark-notebook/spark-notebook" -> "Bridgewater/scala-notebook"
"spark-notebook/spark-notebook" -> "holdenk/spark-testing-base"
"spark-notebook/spark-notebook" -> "databricks/scala-style-guide" ["e"=1]
"spark-notebook/spark-notebook" -> "databricks/learning-spark"
"spark-notebook/spark-notebook" -> "databricks/spark-csv"
"spark-notebook/spark-notebook" -> "lauris/awesome-scala" ["e"=1]
"spark-notebook/spark-notebook" -> "rushter/data-science-blogs" ["e"=1]
"spark-notebook/spark-notebook" -> "nborwankar/LearnDataScience" ["e"=1]
"spark-notebook/spark-notebook" -> "killrweather/killrweather"
"spark-notebook/spark-notebook" -> "yahoo/TensorFlowOnSpark"
"mahmoudparsian/data-algorithms-book" -> "sryza/aas"
"mahmoudparsian/data-algorithms-book" -> "databricks/learning-spark"
"mahmoudparsian/data-algorithms-book" -> "japila-books/apache-spark-internals"
"mahmoudparsian/data-algorithms-book" -> "databricks/reference-apps"
"mahmoudparsian/data-algorithms-book" -> "spark-notebook/spark-notebook"
"mahmoudparsian/data-algorithms-book" -> "adamjshook/mapreducepatterns"
"mahmoudparsian/data-algorithms-book" -> "OryxProject/oryx"
"mahmoudparsian/data-algorithms-book" -> "mahmoudparsian/big-data-mapreduce-course"
"mahmoudparsian/data-algorithms-book" -> "endymecy/spark-ml-source-analysis"
"mahmoudparsian/data-algorithms-book" -> "lw-lin/CoolplaySpark"
"mahmoudparsian/data-algorithms-book" -> "spirom/LearningSpark"
"mahmoudparsian/data-algorithms-book" -> "spark-jobserver/spark-jobserver"
"mahmoudparsian/data-algorithms-book" -> "JerryLead/SparkInternals"
"mahmoudparsian/data-algorithms-book" -> "linkedin/dr-elephant" ["e"=1]
"mahmoudparsian/data-algorithms-book" -> "deanwampler/programming-scala-book-code-examples" ["e"=1]
"nathanmarz/storm-starter" -> "nathanmarz/storm-deploy"
"nathanmarz/storm-starter" -> "nathanmarz/storm-contrib"
"nathanmarz/storm-starter" -> "nathanmarz/storm-kestrel"
"nathanmarz/storm-starter" -> "nathanmarz/storm" ["e"=1]
"nathanmarz/storm-starter" -> "wurstmeister/storm-kafka-0.8-plus"
"nathanmarz/storm-starter" -> "colinsurprenant/redstorm"
"nathanmarz/storm-starter" -> "miguno/kafka-storm-starter"
"nathanmarz/storm-starter" -> "yahoo/storm-yarn"
"nathanmarz/storm-starter" -> "revelytix/carbonite" ["e"=1]
"nathanmarz/storm-starter" -> "apache/storm" ["e"=1]
"nathanmarz/storm-starter" -> "mesos/spark" ["e"=1]
"nathanmarz/storm-starter" -> "lynaghk/cljs-d3" ["e"=1]
"killrweather/killrweather" -> "apache/cassandra-spark-connector" ["e"=1]
"killrweather/killrweather" -> "akka/alpakka-kafka" ["e"=1]
"killrweather/killrweather" -> "databricks/reference-apps"
"killrweather/killrweather" -> "miguno/kafka-storm-starter"
"killrweather/killrweather" -> "sryza/spark-timeseries"
"killrweather/killrweather" -> "spark-notebook/spark-notebook"
"killrweather/killrweather" -> "theiterators/akka-http-microservice" ["e"=1]
"killrweather/killrweather" -> "RBMHTechnology/eventuate" ["e"=1]
"killrweather/killrweather" -> "apache/cassandra-ccm" ["e"=1]
"killrweather/killrweather" -> "spark-jobserver/spark-jobserver"
"killrweather/killrweather" -> "OryxProject/oryx"
"killrweather/killrweather" -> "holdenk/spark-testing-base"
"killrweather/killrweather" -> "filodb/FiloDB"
"killrweather/killrweather" -> "deanwampler/spark-scala-tutorial"
"killrweather/killrweather" -> "databricks/spark-csv"
"Marcel-Jan/docker-hadoop-spark" -> "myamafuj/hadoop-hive-spark-docker"
"Marcel-Jan/docker-hadoop-spark" -> "martinkarlssonio/big-data-solution"
"Marcel-Jan/docker-hadoop-spark" -> "panovvv/bigdata-docker-compose"
"dibbhatt/kafka-spark-consumer" -> "koeninger/kafka-exactly-once"
"dibbhatt/kafka-spark-consumer" -> "spirom/spark-streaming-with-kafka"
"dibbhatt/kafka-spark-consumer" -> "miguno/kafka-storm-starter"
"dibbhatt/kafka-spark-consumer" -> "databricks/reference-apps"
"dibbhatt/kafka-spark-consumer" -> "cloudera-labs/SparkOnHBase"
"dibbhatt/kafka-spark-consumer" -> "wankunde/logcount" ["e"=1]
"dibbhatt/kafka-spark-consumer" -> "Huawei-Spark/Spark-SQL-on-HBase"
"dibbhatt/kafka-spark-consumer" -> "databricks/spark-avro"
"dibbhatt/kafka-spark-consumer" -> "confluentinc/kafka-connect-hdfs" ["e"=1]
"dibbhatt/kafka-spark-consumer" -> "qindongliang/streaming-offset-to-zk" ["e"=1]
"dibbhatt/kafka-spark-consumer" -> "nerdammer/spark-hbase-connector"
"dibbhatt/kafka-spark-consumer" -> "Stratio/sparta"
"dibbhatt/kafka-spark-consumer" -> "tresata/spark-kafka"
"dibbhatt/kafka-spark-consumer" -> "lw-lin/CoolplaySpark"
"dibbhatt/kafka-spark-consumer" -> "hbase-rdd/hbase-rdd"
"spirom/LearningSpark" -> "spirom/spark-streaming-with-kafka"
"spirom/LearningSpark" -> "xubo245/SparkLearning"
"spirom/LearningSpark" -> "jacksu/utils4s"
"spirom/LearningSpark" -> "high-performance-spark/high-performance-spark-examples"
"spirom/LearningSpark" -> "wanghan0501/UserSessionBehaviorOfflineAnalysis" ["e"=1]
"spirom/LearningSpark" -> "phatak-dev/spark2.0-examples"
"spirom/LearningSpark" -> "LeechanX/Netflix-Recommender-with-Spark" ["e"=1]
"spirom/LearningSpark" -> "hbase-rdd/hbase-rdd"
"spirom/LearningSpark" -> "deanwampler/spark-scala-tutorial"
"spirom/LearningSpark" -> "polomarcus/Spark-Structured-Streaming-Examples"
"spirom/LearningSpark" -> "databricks/spark-csv"
"spirom/LearningSpark" -> "endymecy/spark-ml-source-analysis"
"spirom/LearningSpark" -> "groupon/sparklint" ["e"=1]
"spirom/LearningSpark" -> "databricks/reference-apps"
"spirom/LearningSpark" -> "linbojin/spark-notes" ["e"=1]
"nerdammer/spark-hbase-connector" -> "hbase-rdd/hbase-rdd"
"nerdammer/spark-hbase-connector" -> "cloudera-labs/SparkOnHBase"
"nerdammer/spark-hbase-connector" -> "Huawei-Spark/Spark-SQL-on-HBase"
"nerdammer/spark-hbase-connector" -> "hortonworks-spark/shc"
"nerdammer/spark-hbase-connector" -> "caroljmcdonald/SparkStreamingHBaseExample"
"nerdammer/spark-hbase-connector" -> "NGDATA/hbase-indexer"
"Intel-bigdata/spark-streamingsql" -> "thunderain-project/StreamSQL"
"OryxProject/oryx" -> "cloudera/oryx"
"OryxProject/oryx" -> "spark-jobserver/spark-jobserver"
"OryxProject/oryx" -> "apache/predictionio" ["e"=1]
"OryxProject/oryx" -> "sryza/aas"
"OryxProject/oryx" -> "SeldonIO/seldon-server"
"OryxProject/oryx" -> "cloudera/livy"
"OryxProject/oryx" -> "apache/mahout" ["e"=1]
"OryxProject/oryx" -> "sryza/spark-timeseries"
"OryxProject/oryx" -> "apache/gobblin" ["e"=1]
"OryxProject/oryx" -> "h2oai/sparkling-water"
"OryxProject/oryx" -> "filodb/FiloDB"
"OryxProject/oryx" -> "killrweather/killrweather"
"OryxProject/oryx" -> "actionml/universal-recommender"
"OryxProject/oryx" -> "lenskit/lenskit" ["e"=1]
"OryxProject/oryx" -> "amplab/keystone"
"hohonuuli/sparknotebook" -> "tribbloid/ISpark"
"databricks/spark-avro" -> "databricks/spark-csv"
"databricks/spark-avro" -> "holdenk/spark-testing-base"
"databricks/spark-avro" -> "cloudera-labs/SparkOnHBase"
"databricks/spark-avro" -> "hbase-rdd/hbase-rdd"
"databricks/spark-avro" -> "databricks/spark-redshift" ["e"=1]
"databricks/spark-avro" -> "dibbhatt/kafka-spark-consumer"
"databricks/spark-avro" -> "apache/cassandra-spark-connector" ["e"=1]
"databricks/spark-avro" -> "spark-jobserver/spark-jobserver"
"databricks/spark-avro" -> "aws-samples/emr-bootstrap-actions" ["e"=1]
"databricks/spark-avro" -> "Huawei-Spark/Spark-SQL-on-HBase"
"databricks/spark-avro" -> "databricks/spark-knowledgebase"
"databricks/spark-avro" -> "sksamuel/avro4s" ["e"=1]
"databricks/spark-avro" -> "databricks/reference-apps"
"databricks/spark-avro" -> "databricks/spark-xml"
"databricks/spark-avro" -> "LinkedInAttic/camus" ["e"=1]
"ibm-et/spark-kernel" -> "apache/incubator-toree"
"ibm-et/spark-kernel" -> "hohonuuli/sparknotebook"
"ibm-et/spark-kernel" -> "amplab/keystone"
"ibm-et/spark-kernel" -> "hammerlab/grafana-spark-dashboards" ["e"=1]
"ibm-et/spark-kernel" -> "ddf-project/DDF" ["e"=1]
"ibm-et/spark-kernel" -> "ooyala/spark-jobserver"
"ibm-et/spark-kernel" -> "collectivemedia/spark-ext"
"ibm-et/spark-kernel" -> "tribbloid/ISpark"
"ibm-et/spark-kernel" -> "mattpap/IScala"
"skrusche63/spark-elastic" -> "holdenk/elasticsearchspark"
"skrusche63/spark-elastic" -> "skrusche63/elastic-insight"
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "mvillarrealb/docker-spark-cluster"
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "sdesilva26/docker-spark"
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "cordon-thiago/airflow-spark" ["e"=1]
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "big-data-europe/docker-spark"
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "databricks/docker-spark-iceberg" ["e"=1]
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "mrn-aglic/spark-standalone-cluster"
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "bitnami/bitnami-docker-spark"
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "testdrivenio/spark-kubernetes"
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "panovvv/bigdata-docker-compose"
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "EthicalML/kafka-spark-streaming-zeppelin-docker"
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" -> "fabiogjardim/bigdata_docker"
"rockthejvm/scala-at-light-speed" -> "rockthejvm/scala-2-beginners"
"rockthejvm/scala-at-light-speed" -> "rockthejvm/scala-problems-interviews"
"rockthejvm/scala-at-light-speed" -> "rockthejvm/spark-essentials"
"dirkneumann/deepdist" -> "guoding83128/OpenDL"
"dirkneumann/deepdist" -> "adatao/tensorspark"
"dirkneumann/deepdist" -> "amplab/SparkNet"
"dirkneumann/deepdist" -> "yajiemiao/pdnn" ["e"=1]
"dirkneumann/deepdist" -> "amplab/keystone"
"dirkneumann/deepdist" -> "intel-machine-learning/DistML" ["e"=1]
"datumbox/datumbox-framework" -> "h2oai/h2o-2"
"datumbox/datumbox-framework" -> "datumbox/datumbox-framework-examples"
"datumbox/datumbox-framework" -> "EdwardRaff/JSAT"
"datumbox/datumbox-framework" -> "cloudera/oryx"
"datumbox/datumbox-framework" -> "SeldonIO/seldon-server"
"datumbox/datumbox-framework" -> "apache/mahout" ["e"=1]
"datumbox/datumbox-framework" -> "jeffheaton/encog-java-core"
"datumbox/datumbox-framework" -> "datumbox/NaiveBayesClassifier"
"datumbox/datumbox-framework" -> "danielsdeleo/Decider"
"datumbox/datumbox-framework" -> "jubatus/jubatus"
"datumbox/datumbox-framework" -> "bwaldvogel/liblinear-java"
"datumbox/datumbox-framework" -> "deeplearning4j/nd4j" ["e"=1]
"datumbox/datumbox-framework" -> "nikolaypavlov/MLPNeuralNet"
"datumbox/datumbox-framework" -> "OryxProject/oryx"
"datumbox/datumbox-framework" -> "mimno/Mallet" ["e"=1]
"sequenceiq/docker-spark" -> "sequenceiq/hadoop-docker"
"sequenceiq/docker-spark" -> "gettyimages/docker-spark"
"sequenceiq/docker-spark" -> "epahomov/docker-spark"
"sequenceiq/docker-spark" -> "databricks/reference-apps"
"sequenceiq/docker-spark" -> "big-data-europe/docker-spark"
"sequenceiq/docker-spark" -> "Lab41/ipython-spark-docker"
"sequenceiq/docker-spark" -> "databricks/spark-csv"
"sequenceiq/docker-spark" -> "big-data-europe/docker-hadoop-spark-workbench"
"sequenceiq/docker-spark" -> "sequenceiq/docker-ambari" ["e"=1]
"sequenceiq/docker-spark" -> "dylanmei/docker-zeppelin"
"sequenceiq/docker-spark" -> "spark-jobserver/spark-jobserver"
"sequenceiq/docker-spark" -> "ibm-et/spark-kernel"
"sequenceiq/docker-spark" -> "spark-notebook/spark-notebook"
"sequenceiq/docker-spark" -> "databricks/spark-knowledgebase"
"sequenceiq/docker-spark" -> "sryza/spark-timeseries"
"nathanmarz/storm-deploy" -> "nathanmarz/storm-starter"
"nathanmarz/storm-deploy" -> "nathanmarz/storm-kestrel"
"nathanmarz/storm-deploy" -> "nathanmarz/cascalog" ["e"=1]
"h2oai/sparkling-water" -> "h2oai/h2o-3" ["e"=1]
"h2oai/sparkling-water" -> "h2oai/h2o-tutorials"
"h2oai/sparkling-water" -> "sryza/spark-timeseries"
"h2oai/sparkling-water" -> "h2oai/deepwater"
"h2oai/sparkling-water" -> "h2oai/h2o-flow"
"h2oai/sparkling-water" -> "amplab/keystone"
"h2oai/sparkling-water" -> "h2oai/h2o4gpu"
"h2oai/sparkling-water" -> "amplab/SparkNet"
"h2oai/sparkling-water" -> "databricks/spark-sklearn"
"h2oai/sparkling-water" -> "yahoo/CaffeOnSpark"
"h2oai/sparkling-water" -> "apache/incubator-toree"
"h2oai/sparkling-water" -> "OryxProject/oryx"
"h2oai/sparkling-water" -> "databricks/tensorframes"
"h2oai/sparkling-water" -> "sparklyr/sparklyr" ["e"=1]
"h2oai/sparkling-water" -> "h2oai/h2o-meetups"
"filodb/FiloDB" -> "apache/cassandra-spark-connector" ["e"=1]
"filodb/FiloDB" -> "TIBCOSoftware/snappydata" ["e"=1]
"filodb/FiloDB" -> "spark-jobserver/spark-jobserver"
"filodb/FiloDB" -> "gearpump/gearpump" ["e"=1]
"filodb/FiloDB" -> "sryza/spark-timeseries"
"filodb/FiloDB" -> "amplab/keystone"
"filodb/FiloDB" -> "typelevel/frameless" ["e"=1]
"filodb/FiloDB" -> "paypal/squbs" ["e"=1]
"filodb/FiloDB" -> "OryxProject/oryx"
"filodb/FiloDB" -> "apache/incubator-toree"
"filodb/FiloDB" -> "pipelinedb/pipelinedb" ["e"=1]
"filodb/FiloDB" -> "densh/scala-offheap" ["e"=1]
"filodb/FiloDB" -> "killrweather/killrweather"
"filodb/FiloDB" -> "spark-notebook/spark-notebook"
"filodb/FiloDB" -> "Stratio/sparta"
"japila-books/delta-lake-internals" -> "japila-books/spark-sql-internals"
"japila-books/delta-lake-internals" -> "jaceklaskowski/spark-kubernetes-book"
"japila-books/delta-lake-internals" -> "japila-books/spark-structured-streaming-internals"
"lensacom/sparkit-learn" -> "databricks/spark-sklearn"
"lensacom/sparkit-learn" -> "mahmoudparsian/pyspark-tutorial"
"lensacom/sparkit-learn" -> "tensorflow/skflow" ["e"=1]
"lensacom/sparkit-learn" -> "bolt-project/bolt"
"lensacom/sparkit-learn" -> "thunder-project/thunder"
"lensacom/sparkit-learn" -> "aigamedev/scikit-neuralnetwork" ["e"=1]
"lensacom/sparkit-learn" -> "sparklingpandas/sparklingpandas"
"lensacom/sparkit-learn" -> "jadianes/spark-py-notebooks"
"lensacom/sparkit-learn" -> "sryza/spark-timeseries"
"lensacom/sparkit-learn" -> "ottogroup/palladium" ["e"=1]
"lensacom/sparkit-learn" -> "drabastomek/learningPySpark"
"lensacom/sparkit-learn" -> "ogrisel/parallel_ml_tutorial" ["e"=1]
"lensacom/sparkit-learn" -> "robdmc/pandashells" ["e"=1]
"lensacom/sparkit-learn" -> "databricks/spark-deep-learning"
"lensacom/sparkit-learn" -> "tmadl/sklearn-expertsys" ["e"=1]
"panovvv/bigdata-docker-compose" -> "panovvv/hadoop-hive-spark-docker"
"panovvv/bigdata-docker-compose" -> "spancer/bigdata-docker-compose"
"panovvv/bigdata-docker-compose" -> "myamafuj/hadoop-hive-spark-docker"
"rockthejvm/spark-essentials" -> "rockthejvm/spark-optimization"
"rockthejvm/spark-essentials" -> "rockthejvm/spark-performance-tuning"
"rockthejvm/spark-essentials" -> "rockthejvm/scala-2-beginners"
"rockthejvm/spark-essentials" -> "rockthejvm/scala-problems-interviews"
"rockthejvm/spark-essentials" -> "rockthejvm/scala-2-advanced"
"rockthejvm/spark-essentials" -> "rockthejvm/udemy-spark-streaming"
"rockthejvm/spark-essentials" -> "rockthejvm/spark-streaming"
"rockthejvm/spark-essentials" -> "rockthejvm/udemy-scala-beginners"
"rockthejvm/spark-essentials" -> "rockthejvm/akka-classic-essentials"
"LearningJournal/Spark-Streaming-In-Python" -> "LearningJournal/SparkProgrammingInScala"
"LearningJournal/Spark-Streaming-In-Python" -> "LearningJournal/Spark-Streaming-In-Scala"
"LearningJournal/Spark-Streaming-In-Python" -> "LearningJournal/Spark-Programming-In-Python"
"LearningJournal/Spark-Streaming-In-Python" -> "LearningJournal/Python-Foundation-Course"
"danielsdeleo/Decider" -> "cardmagic/classifier" ["e"=1]
"danielsdeleo/Decider" -> "pauldix/basset"
"danielsdeleo/Decider" -> "nikolaypavlov/MLPNeuralNet"
"danielsdeleo/Decider" -> "jubatus/jubatus"
"mrsqueeze/spark-hash" -> "marufaytekin/lsh-spark"
"mrsqueeze/spark-hash" -> "soundcloud/cosine-lsh-join-spark"
"mrsqueeze/spark-hash" -> "karlhigley/spark-neighbors"
"nathanmarz/storm-contrib" -> "nathanmarz/storm-starter"
"nathanmarz/storm-contrib" -> "NetherlandsForensicInstitute/kafka-spout"
"nathanmarz/storm-contrib" -> "wurstmeister/storm-kafka-0.8-plus"
"spark-examples/spark-scala-examples" -> "spark-examples/pyspark-examples"
"spark-examples/spark-scala-examples" -> "sparkbyexamples/spark-examples"
"spark-examples/spark-scala-examples" -> "rockthejvm/spark-essentials"
"spark-examples/spark-scala-examples" -> "LearningJournal/SparkProgrammingInScala"
"spark-examples/spark-scala-examples" -> "Baeldung/scala-tutorials" ["e"=1]
"spark-examples/spark-scala-examples" -> "tirthajyoti/Spark-with-Python"
"spark-examples/spark-scala-examples" -> "deanwampler/spark-scala-tutorial"
"spark-examples/spark-scala-examples" -> "databricks/Spark-The-Definitive-Guide"
"spark-examples/spark-scala-examples" -> "mrpowers-io/spark-fast-tests" ["e"=1]
"spark-examples/spark-scala-examples" -> "TheAlgorithms/Scala" ["e"=1]
"spark-examples/spark-scala-examples" -> "rockthejvm/spark-optimization"
"spark-examples/spark-scala-examples" -> "rockthejvm/scala-at-light-speed"
"neuroph/neuroph" -> "neuroph/NeurophFramework"
"neuroph/neuroph" -> "neuroph/NeurophStudio"
"neuroph/neuroph" -> "jeffheaton/encog-java-core"
"neuroph/neuroph" -> "ivan-vasilev/neuralnetworks"
"miguno/kafka-storm-starter" -> "miguno/wirbelsturm"
"miguno/kafka-storm-starter" -> "killrweather/killrweather"
"miguno/kafka-storm-starter" -> "dibbhatt/kafka-spark-consumer"
"miguno/kafka-storm-starter" -> "koeninger/kafka-exactly-once"
"miguno/kafka-storm-starter" -> "nathanmarz/storm-starter"
"miguno/kafka-storm-starter" -> "elodina/scala-kafka" ["e"=1]
"miguno/kafka-storm-starter" -> "databricks/reference-apps"
"miguno/kafka-storm-starter" -> "nathanmarz/storm-contrib"
"miguno/kafka-storm-starter" -> "chimpler/blog-spark-streaming-log-aggregation"
"miguno/kafka-storm-starter" -> "wurstmeister/storm-kafka-0.8-plus"
"miguno/kafka-storm-starter" -> "databricks/spark-knowledgebase"
"miguno/kafka-storm-starter" -> "NetherlandsForensicInstitute/kafka-spout"
"miguno/kafka-storm-starter" -> "hbase-rdd/hbase-rdd"
"miguno/kafka-storm-starter" -> "twitter/bijection" ["e"=1]
"miguno/kafka-storm-starter" -> "twitter/summingbird" ["e"=1]
"databricks/reference-apps" -> "databricks/spark-knowledgebase"
"databricks/reference-apps" -> "databricks/spark-training"
"databricks/reference-apps" -> "killrweather/killrweather"
"databricks/reference-apps" -> "dibbhatt/kafka-spark-consumer"
"databricks/reference-apps" -> "sryza/spark-timeseries"
"databricks/reference-apps" -> "deanwampler/spark-scala-tutorial"
"databricks/reference-apps" -> "sequenceiq/docker-spark"
"databricks/reference-apps" -> "databricks/spark-avro"
"databricks/reference-apps" -> "miguno/kafka-storm-starter"
"databricks/reference-apps" -> "databricks/learning-spark"
"databricks/reference-apps" -> "koeninger/kafka-exactly-once"
"databricks/reference-apps" -> "databricks/scala-style-guide" ["e"=1]
"databricks/reference-apps" -> "Huawei-Spark/Spark-SQL-on-HBase"
"databricks/reference-apps" -> "spark-jobserver/spark-jobserver"
"databricks/reference-apps" -> "databricks/spark-csv"
"rockthejvm/spark-optimization" -> "rockthejvm/spark-performance-tuning"
"rockthejvm/spark-optimization" -> "rockthejvm/udemy-spark-streaming"
"rockthejvm/spark-optimization" -> "rockthejvm/spark-streaming"
"rockthejvm/spark-performance-tuning" -> "rockthejvm/spark-optimization"
"rockthejvm/spark-performance-tuning" -> "rockthejvm/udemy-spark-streaming"
"rockthejvm/scala-problems-interviews" -> "rockthejvm/cats-course"
"rockthejvm/udemy-spark-streaming" -> "rockthejvm/spark-performance-tuning"
"rockthejvm/udemy-spark-streaming" -> "rockthejvm/spark-streaming"
"amplab/succinct" -> "amplab/spark-indexedrdd"
"amplab/succinct" -> "amplab/keystone"
"amplab/succinct" -> "vigna/Sux4J"
"amplab/succinct" -> "efficient/SuRF" ["e"=1]
"amplab/succinct" -> "fast-pack/JavaFastPFOR" ["e"=1]
"fabiogjardim/bigdata_docker" -> "rodrigo-reboucas/docker-bigdata"
"fabiogjardim/bigdata_docker" -> "panovvv/bigdata-docker-compose"
"fabiogjardim/bigdata_docker" -> "fabiogjardim/mds"
"fabiogjardim/bigdata_docker" -> "myamafuj/hadoop-hive-spark-docker"
"fabiogjardim/bigdata_docker" -> "panovvv/hadoop-hive-spark-docker"
"fabiogjardim/bigdata_docker" -> "A3Data/rony" ["e"=1]
"fabiogjardim/bigdata_docker" -> "cluster-apps-on-docker/spark-standalone-cluster-on-docker"
"fabiogjardim/bigdata_docker" -> "airtoncarneiro/dev-spark-jupyter"
"tresata/spark-kafka" -> "koeninger/kafka-exactly-once"
"HariSekhon/SQL-scripts" -> "HariSekhon/DevOps-Python-tools"
"HariSekhon/SQL-scripts" -> "Azmodey/pg_dba_scripts"
"HariSekhon/SQL-scripts" -> "HariSekhon/HAProxy-configs"
"HariSekhon/SQL-scripts" -> "HariSekhon/Terraform"
"HariSekhon/SQL-scripts" -> "HariSekhon/Dockerfiles"
"HariSekhon/SQL-scripts" -> "HariSekhon/cheatsheets"
"HariSekhon/SQL-scripts" -> "HariSekhon/Kubernetes-configs"
"HariSekhon/SQL-scripts" -> "HariSekhon/Templates"
"HariSekhon/SQL-scripts" -> "fatdba/Oracle-Database-Scripts" ["e"=1]
"HariSekhon/SQL-scripts" -> "HariSekhon/DevOps-Golang-tools"
"HariSekhon/SQL-scripts" -> "HariSekhon/GitHub-Actions"
"zdata-inc/SparkSampleProject" -> "prabeesh/SparkTwitterAnalysis"
"zdata-inc/SparkSampleProject" -> "zdata-inc/StormSampleProject"
"uber/fiber" -> "uber/neuropod"
"uber/fiber" -> "uber/petastorm"
"uber/fiber" -> "google-deepmind/reverb" ["e"=1]
"uber/fiber" -> "uber-research/poet" ["e"=1]
"uber/fiber" -> "google-deepmind/bsuite" ["e"=1]
"uber/fiber" -> "uber/bayesmark" ["e"=1]
"uber/fiber" -> "uber/manifold" ["e"=1]
"uber/fiber" -> "SeldonIO/seldon-core" ["e"=1]
"uber/fiber" -> "uber/aresdb" ["e"=1]
"tomdz/storm-esper" -> "hellojinjie/storm-esper-example"
"hbase-rdd/hbase-rdd" -> "nerdammer/spark-hbase-connector"
"hbase-rdd/hbase-rdd" -> "cloudera-labs/SparkOnHBase"
"hbase-rdd/hbase-rdd" -> "Huawei-Spark/Spark-SQL-on-HBase"
"hbase-rdd/hbase-rdd" -> "hbase-rdd/hbase-rdd-examples"
"hbase-rdd/hbase-rdd" -> "hortonworks-spark/shc"
"hbase-rdd/hbase-rdd" -> "LinMingQiang/sparkstreaming" ["e"=1]
"hbase-rdd/hbase-rdd" -> "TopSpoofer/hbrdd"
"hbase-rdd/hbase-rdd" -> "databricks/spark-avro"
"hbase-rdd/hbase-rdd" -> "caroljmcdonald/SparkStreamingHBaseExample"
"hbase-rdd/hbase-rdd" -> "groupon/sparklint" ["e"=1]
"hbase-rdd/hbase-rdd" -> "HuaweiBigData/astro"
"hbase-rdd/hbase-rdd" -> "polomarcus/Spark-Structured-Streaming-Examples"
"cloudera-labs/SparkOnHBase" -> "nerdammer/spark-hbase-connector"
"cloudera-labs/SparkOnHBase" -> "hbase-rdd/hbase-rdd"
"cloudera-labs/SparkOnHBase" -> "Huawei-Spark/Spark-SQL-on-HBase"
"cloudera-labs/SparkOnHBase" -> "hortonworks-spark/shc"
"cloudera-labs/SparkOnHBase" -> "apache/hbase-connectors"
"cloudera-labs/SparkOnHBase" -> "NGDATA/hbase-indexer"
"cloudera-labs/SparkOnHBase" -> "LinMingQiang/sparkstreaming" ["e"=1]
"cloudera-labs/SparkOnHBase" -> "caroljmcdonald/SparkStreamingHBaseExample"
"cloudera-labs/SparkOnHBase" -> "databricks/spark-avro"
"cloudera-labs/SparkOnHBase" -> "dibbhatt/kafka-spark-consumer"
"jubatus/jubatus" -> "danielsdeleo/Decider"
"jubatus/jubatus" -> "retrieva/pficommon"
"jubatus/jubatus" -> "nikolaypavlov/MLPNeuralNet"
"jubatus/jubatus" -> "h2oai/h2o-2"
"jubatus/jubatus" -> "cloudera/oryx"
"jubatus/jubatus" -> "jubatus/jubatus-example"
"jubatus/jubatus" -> "myui/hivemall" ["e"=1]
"jubatus/jubatus" -> "SeldonIO/seldon-server"
"deeplearning4j/Canova" -> "deeplearning4j/dl4j-snapshot-examples"
"deeplearning4j/Canova" -> "deeplearning4j/libnd4j"
"mahmoudparsian/data-algorithms-with-spark" -> "mahmoudparsian/big-data-mapreduce-course"
"mahmoudparsian/data-algorithms-with-spark" -> "mahmoudparsian/pyspark-algorithms"
"mahmoudparsian/data-algorithms-with-spark" -> "mahmoudparsian/machine-learning-course"
"mahmoudparsian/data-algorithms-with-spark" -> "mahmoudparsian/pyspark-tutorial"
"h2oai/h2o-meetups" -> "h2oai/h2o-tutorials"
"h2oai/h2o-meetups" -> "h2oai/deepwater"
"h2oai/h2o-meetups" -> "h2oai/awesome-h2o"
"h2oai/h2o-meetups" -> "jfpuget/LibFM_in_Keras" ["e"=1]
"h2oai/h2o-meetups" -> "anttttti/Wordbatch" ["e"=1]
"h2oai/h2o-meetups" -> "sowla/useR2019-materials" ["e"=1]
"h2oai/h2o-meetups" -> "h2oai/sparkling-water"
"h2oai/h2o-meetups" -> "h2oai/steam"
"h2oai/h2o-meetups" -> "h2oai/data-science-examples"
"h2oai/h2o-meetups" -> "jphall663/interpretable_machine_learning_with_python" ["e"=1]
"h2oai/h2o-meetups" -> "ledell/useR-machine-learning-tutorial" ["e"=1]
"h2oai/h2o-meetups" -> "kbroman/RStudioConf2019Slides" ["e"=1]
"h2oai/h2o-meetups" -> "h2oai/tutorials"
"colinsurprenant/redstorm" -> "colinsurprenant/storm-jruby"
"jkthompson/pyspark-pictures" -> "awantik/pyspark-learning"
"sakserv/hadoop-mini-clusters" -> "hortonworks/registry" ["e"=1]
"mahmoudparsian/big-data-mapreduce-course" -> "mahmoudparsian/machine-learning-course"
"mahmoudparsian/big-data-mapreduce-course" -> "mahmoudparsian/data-algorithms-with-spark"
"tirthajyoti/ML-apps-with-Streamlit" -> "tirthajyoti/Scikit-image-book"
"cartershanklin/pyspark-cheatsheet" -> "kevinschaich/pyspark-cheatsheet"
"cartershanklin/pyspark-cheatsheet" -> "sankamuk/PysparkCheatsheet"
"cartershanklin/pyspark-cheatsheet" -> "arverma/TowardsDataEngineering"
"cartershanklin/pyspark-cheatsheet" -> "spark-examples/pyspark-examples"
"cartershanklin/pyspark-cheatsheet" -> "UrbanInstitute/pyspark-tutorials"
"cartershanklin/pyspark-cheatsheet" -> "mahmoudparsian/pyspark-tutorial"
"cartershanklin/pyspark-cheatsheet" -> "AlexIoannides/pyspark-example-project" ["e"=1]
"cartershanklin/pyspark-cheatsheet" -> "Saurav3218/Pyspark_Questions_SKS"
"cartershanklin/pyspark-cheatsheet" -> "tirthajyoti/Spark-with-Python"
"cartershanklin/pyspark-cheatsheet" -> "palantir/pyspark-style-guide" ["e"=1]
"cartershanklin/pyspark-cheatsheet" -> "itversity/data-engineering-spark"
"cartershanklin/pyspark-cheatsheet" -> "vivek-bombatkar/Spark-with-Python---My-learning-notes-" ["e"=1]
"cartershanklin/pyspark-cheatsheet" -> "ankurchavda/SparkLearning" ["e"=1]
"cartershanklin/pyspark-cheatsheet" -> "mahmoudparsian/data-algorithms-with-spark"
"cartershanklin/pyspark-cheatsheet" -> "martandsingh/ApacheSpark" ["e"=1]
"deeplearning4j/dl4j-snapshot-examples" -> "deeplearning4j/Canova"
"databricks/spark-training" -> "databricks/spark-knowledgebase"
"databricks/spark-training" -> "databricks/reference-apps"
"databricks/spark-training" -> "amplab/training"
"databricks/spark-training" -> "stefanobaghino/spark-twitter-stream-example"
"databricks/spark-training" -> "snowplow-archive/spark-streaming-example-project" ["e"=1]
"databricks/spark-training" -> "databricks/spark-sklearn"
"databricks/spark-training" -> "databricks/spark-perf" ["e"=1]
"databricks/spark-training" -> "deanwampler/spark-scala-tutorial"
"databricks/spark-training" -> "JerryLead/SparkLearning"
"databricks/spark-training" -> "mkuthan/example-spark-kafka"
"databricks/spark-training" -> "databricks/learning-spark"
"databricks/spark-training" -> "hammerlab/spree"
"databricks/spark-knowledgebase" -> "databricks/spark-training"
"databricks/spark-knowledgebase" -> "databricks/reference-apps"
"databricks/spark-knowledgebase" -> "phatak-dev/spark2.0-examples"
"databricks/spark-knowledgebase" -> "hammerlab/spree"
"databricks/spark-knowledgebase" -> "databricks/spark-sql-perf" ["e"=1]
"databricks/spark-knowledgebase" -> "matteoredaelli/pyspark-examples"
"databricks/spark-knowledgebase" -> "koeninger/kafka-exactly-once"
"databricks/spark-knowledgebase" -> "tresata/spark-kafka"
"databricks/spark-knowledgebase" -> "databricks/tensorframes"
"databricks/spark-knowledgebase" -> "databricks/spark-perf" ["e"=1]
"databricks/spark-knowledgebase" -> "tribbloid/ISpark"
"databricks/spark-knowledgebase" -> "jaceklaskowski/spark-workshop"
"h2oai/h2o-flow" -> "h2oai/h2o.js"
"h2oai/h2o-flow" -> "h2oai/steam"
"arverma/TowardsDataEngineering" -> "sankamuk/PysparkCheatsheet"
"tdebatty/java-LSH" -> "JorenSix/TarsosLSH"
"tdebatty/java-LSH" -> "ALShum/MinHashLSH"
"tdebatty/java-LSH" -> "codelibs/minhash"
"tdebatty/java-LSH" -> "guoziqingbupt/Locality-sensitive-hashing" ["e"=1]
"tdebatty/java-LSH" -> "EdDuarte/similarity-search-java"
"panovvv/hadoop-hive-spark-docker" -> "panovvv/bigdata-docker-compose"
"HariSekhon/DevOps-Golang-tools" -> "HariSekhon/GitHub-Actions"
"HariSekhon/DevOps-Golang-tools" -> "HariSekhon/Terraform"
"HariSekhon/cheatsheets" -> "HariSekhon/awesome-command-line-apps"
"dgadiraju/code" -> "dgadiraju/data"
"dgadiraju/code" -> "Pushkr/Apache-Spark-Hands-On"
"dgadiraju/itversity-books" -> "dgadiraju/itversity-boxes"
"dgadiraju/itversity-books" -> "dgadiraju/data"
"dgadiraju/data" -> "dgadiraju/itversity-books"
"dgadiraju/data" -> "dgadiraju/spark2demo"
"dgadiraju/data" -> "dgadiraju/code"
"codelibs/elasticsearch-minhash" -> "codelibs/minhash"
"amplab/velox-modelserver" -> "amplab/keystone"
"jlmd/SimpleNeuralNetwork" -> "DanielaKolarova/NeuralNetworks"
"koeninger/kafka-exactly-once" -> "tresata/spark-kafka"
"koeninger/kafka-exactly-once" -> "cpbaranwal/Spark-Streaming-DirectKafka-Examples"
"koeninger/kafka-exactly-once" -> "dibbhatt/kafka-spark-consumer"
"koeninger/kafka-exactly-once" -> "ippontech/spark-kafka-source"
"koeninger/kafka-exactly-once" -> "tresata/spark-sorted"
"koeninger/kafka-exactly-once" -> "spirom/spark-streaming-with-kafka"
"koeninger/kafka-exactly-once" -> "Huawei-Spark/Spark-SQL-on-HBase"
"koeninger/kafka-exactly-once" -> "holdenk/spark-validator"
"HariSekhon/awesome-command-line-apps" -> "HariSekhon/cheatsheets"
"clulab/reach" -> "clulab/processors"
"SeldonIO/seldonio.github.com" -> "SeldonIO/seldon-vm"
"SeldonIO/seldonio.github.com" -> "SeldonIO/semantic-vectors-lucene-tools"
"SeldonIO/seldonio.github.com" -> "SeldonIO/importer-movielens-10m"
"SeldonIO/seldonio.github.com" -> "SeldonIO/seldon-spark"
"apache/predictionio-template-recommender" -> "apache/predictionio-template-similar-product"
"apache/predictionio-template-recommender" -> "PredictionIO/template-scala-parallel-productranking"
"apache/predictionio-template-recommender" -> "apache/predictionio-template-ecom-recommender"
"apache/predictionio-template-recommender" -> "apache/predictionio-template-attribute-based-classifier"
"apache/predictionio-template-recommender" -> "PredictionIO/template-scala-parallel-leadscoring"
"apache/predictionio-template-recommender" -> "apache/predictionio-template-skeleton"
"LearningJournal/SparkProgrammingInScala" -> "LearningJournal/Spark-Streaming-In-Scala"
"LearningJournal/SparkProgrammingInScala" -> "LearningJournal/Spark-Streaming-In-Python"
"codelibs/minhash" -> "codelibs/elasticsearch-minhash"
"ceteri/spark-exercises" -> "ceteri/intro_spark"
"CCweixiao/HydraQL-Manager" -> "CCweixiao/hbase-sdk"
"CCweixiao/HydraQL-Manager" -> "CCweixiao/HydraQL"
"databricks/spark-integration-tests" -> "holdenk/spark-validator"
"databricks/spark-integration-tests" -> "juanrh/sscheck"
"ibywind/docker-hadoop-spark-hive" -> "little-bit-shy/docker-hadoop"
"rockthejvm/cats-course" -> "rockthejvm/cats-effect"
"apache/predictionio-template-attribute-based-classifier" -> "PredictionIO/template-scala-parallel-productranking"
"apache/predictionio-template-attribute-based-classifier" -> "PredictionIO/template-scala-parallel-leadscoring"
"apache/predictionio-template-attribute-based-classifier" -> "PredictionIO/template-scala-parallel-complementarypurchase"
"apache/predictionio-template-attribute-based-classifier" -> "apache/predictionio-template-similar-product"
"gradusnikov/jmatio" -> "diffplug/matfilerw"
"tribbloid/ISpark" -> "hohonuuli/sparknotebook"
"apache/predictionio-template-skeleton" -> "PredictionIO/template-scala-parallel-productranking"
"apache/predictionio-template-skeleton" -> "PredictionIO/template-scala-parallel-leadscoring"
"CCweixiao/hbase-sdk" -> "CCweixiao/HydraQL-Manager"
"yu-iskw/hierarchical-clustering-with-spark" -> "xiaocai00/SparkPinkMST"
"chimpler/blog-spark-streaming-log-aggregation" -> "gwenshap/SparkStreamingExample"
"sankamuk/PysparkCheatsheet" -> "arverma/TowardsDataEngineering"
"dgadiraju/itversity-boxes" -> "dgadiraju/itversity-books"
"Stratio/Spark-MongoDB" -> "Stratio/stratio-connector-sparkSQL"
"Stratio/Spark-MongoDB" -> "Stratio/stratio-connector-hdfs"
"Stratio/Spark-MongoDB" -> "Stratio/sphinx-maven"
"Stratio/Spark-MongoDB" -> "Stratio/medsavant"
"Stratio/Spark-MongoDB" -> "Stratio/hbase"
"Stratio/Spark-MongoDB" -> "Stratio/spark-cassandra-connector"
"Stratio/Spark-MongoDB" -> "Stratio/crossdata-connector-skeleton"
"Stratio/Spark-MongoDB" -> "Stratio/pomParser"
"Stratio/Spark-MongoDB" -> "Stratio/unix-maven-plugin"
"Stratio/Spark-MongoDB" -> "Stratio/deep-examples"
"Stratio/Spark-MongoDB" -> "Stratio/deep_functional_test"
"Stratio/Spark-MongoDB" -> "Stratio/sphinx-theme-stratio"
"Stratio/Spark-MongoDB" -> "Stratio/sandbox"
"Stratio/Spark-MongoDB" -> "Stratio/stratio-connector-elasticsearch"
"Stratio/Spark-MongoDB" -> "Stratio/stratio-connector-commons"
"Stratio/sparta" -> "Stratio/stratio-connector-hdfs"
"Stratio/sparta" -> "Stratio/crossdata"
"Stratio/sparta" -> "Stratio/stratio-connector-elasticsearch"
"Stratio/sparta" -> "Stratio/stratio-connector-commons"
"Stratio/sparta" -> "Stratio/stratio-connector-decision"
"Stratio/sparta" -> "Stratio/stratio-connector-mongodb"
"Stratio/sparta" -> "Stratio/stratio-connector-cassandra"
"Stratio/sparta" -> "Stratio/stratio-connector-deep"
"Stratio/sparta" -> "Stratio/crossdata-connector-skeleton"
"Stratio/sparta" -> "Stratio/pomParser"
"Stratio/sparta" -> "Stratio/deep-examples"
"Stratio/sparta" -> "Stratio/unix-maven-plugin"
"Stratio/sparta" -> "Stratio/stratio-connector-sparkSQL"
"Stratio/sparta" -> "Stratio/sphinx-maven"
"Stratio/sparta" -> "Stratio/medsavant"
"Stratio/cassandra-lucene-index" -> "Stratio/stratio-cassandra"
"Stratio/cassandra-lucene-index" -> "Stratio/stratio-connector-hdfs"
"Stratio/cassandra-lucene-index" -> "Stratio/spark-solr"
"Stratio/cassandra-lucene-index" -> "Stratio/stratio-connector-sparkSQL"
"Stratio/cassandra-lucene-index" -> "Stratio/sphinx-maven"
"Stratio/cassandra-lucene-index" -> "Stratio/medsavant"
"Stratio/cassandra-lucene-index" -> "Stratio/hbase"
"Stratio/cassandra-lucene-index" -> "Stratio/spark-cassandra-connector"
"Stratio/cassandra-lucene-index" -> "Stratio/vagrant-ova-plugin"
"Stratio/cassandra-lucene-index" -> "Stratio/crossdata-connector-skeleton"
"Stratio/cassandra-lucene-index" -> "Stratio/pomParser"
"Stratio/cassandra-lucene-index" -> "Stratio/stratio-connector-elasticsearch"
"Stratio/cassandra-lucene-index" -> "Stratio/stratio-connector-commons"
"Stratio/cassandra-lucene-index" -> "Stratio/stratio-connector-decision"
"Stratio/cassandra-lucene-index" -> "Stratio/stratio-connector-mongodb"
"Stratio/spark-rabbitmq" -> "Stratio/spark-solr"
"Stratio/spark-rabbitmq" -> "Stratio/vagrant-ova-plugin"
"Stratio/spark-rabbitmq" -> "Stratio/sphinx-maven"
"Stratio/spark-rabbitmq" -> "Stratio/medsavant"
"Stratio/spark-rabbitmq" -> "Stratio/hbase"
"Stratio/spark-rabbitmq" -> "Stratio/spark-cassandra-connector"
"Stratio/spark-rabbitmq" -> "Stratio/fakenator"
"Stratio/spark-rabbitmq" -> "Stratio/crossdata-connector-skeleton"
"Stratio/spark-rabbitmq" -> "Stratio/pomParser"
"Stratio/spark-rabbitmq" -> "Stratio/sphinx-theme-stratio"
"Stratio/spark-rabbitmq" -> "Stratio/stratio-connector-sparkSQL"
"Stratio/spark-rabbitmq" -> "Stratio/stratio-frontend-architecture"
"Stratio/spark-rabbitmq" -> "Stratio/stratio-connector-hdfs"
"Stratio/spark-rabbitmq" -> "Stratio/morphlines"
"Stratio/spark-rabbitmq" -> "Stratio/deep_functional_test"
"holdenk/spark-testing-base" -> "mrpowers-io/spark-daria" ["e"=1]
"holdenk/spark-testing-base" -> "mrpowers-io/spark-fast-tests" ["e"=1]
"holdenk/spark-testing-base" -> "spark-jobserver/spark-jobserver"
"holdenk/spark-testing-base" -> "typelevel/frameless" ["e"=1]
"holdenk/spark-testing-base" -> "holdenk/spark-validator"
"holdenk/spark-testing-base" -> "high-performance-spark/high-performance-spark-examples"
"holdenk/spark-testing-base" -> "databricks/scala-style-guide" ["e"=1]
"holdenk/spark-testing-base" -> "LucaCanali/sparkMeasure" ["e"=1]
"holdenk/spark-testing-base" -> "sbt/sbt-assembly" ["e"=1]
"holdenk/spark-testing-base" -> "spark-notebook/spark-notebook"
"holdenk/spark-testing-base" -> "scopt/scopt" ["e"=1]
"holdenk/spark-testing-base" -> "databricks/spark-avro"
"holdenk/spark-testing-base" -> "spotify/scio" ["e"=1]
"holdenk/spark-testing-base" -> "japila-books/apache-spark-internals"
"holdenk/spark-testing-base" -> "cloudera/livy"
"SeldonIO/seldon-server" -> "cloudera/oryx"
"SeldonIO/seldon-server" -> "OryxProject/oryx"
"SeldonIO/seldon-server" -> "apache/predictionio" ["e"=1]
"SeldonIO/seldon-server" -> "h2oai/h2o-2"
"SeldonIO/seldon-server" -> "apache/mahout" ["e"=1]
"SeldonIO/seldon-server" -> "jubatus/jubatus"
"SeldonIO/seldon-server" -> "datumbox/datumbox-framework"
"SeldonIO/seldon-server" -> "SeldonIO/seldon-spark"
"SeldonIO/seldon-server" -> "PipelineAI/pipeline" ["e"=1]
"SeldonIO/seldon-server" -> "SeldonIO/seldonio.github.com"
"SeldonIO/seldon-server" -> "danielsdeleo/Decider"
"SeldonIO/seldon-server" -> "lenskit/lenskit" ["e"=1]
"SeldonIO/seldon-server" -> "SeldonIO/seldon-core" ["e"=1]
"SeldonIO/seldon-server" -> "pulsarIO/realtime-analytics"
"SeldonIO/seldon-server" -> "nikolaypavlov/MLPNeuralNet"
"kiwenlau/hadoop-cluster-docker" -> "sequenceiq/hadoop-docker"
"kiwenlau/hadoop-cluster-docker" -> "big-data-europe/docker-hadoop"
"kiwenlau/hadoop-cluster-docker" -> "big-data-europe/docker-hadoop-spark-workbench"
"kiwenlau/hadoop-cluster-docker" -> "ruoyu-chen/hadoop-docker"
"kiwenlau/hadoop-cluster-docker" -> "big-data-europe/docker-hive"
"kiwenlau/hadoop-cluster-docker" -> "HariSekhon/Dockerfiles"
"kiwenlau/hadoop-cluster-docker" -> "alvinhenrick/hadoop-mutinode"
"kiwenlau/hadoop-cluster-docker" -> "sequenceiq/docker-spark"
"kiwenlau/hadoop-cluster-docker" -> "big-data-europe/docker-spark"
"kiwenlau/hadoop-cluster-docker" -> "gettyimages/docker-spark"
"kiwenlau/hadoop-cluster-docker" -> "tomwhite/hadoop-book"
"kiwenlau/hadoop-cluster-docker" -> "sequenceiq/docker-ambari" ["e"=1]
"kiwenlau/hadoop-cluster-docker" -> "Lewuathe/docker-hadoop-cluster"
"kiwenlau/hadoop-cluster-docker" -> "azkaban/azkaban" ["e"=1]
"kiwenlau/hadoop-cluster-docker" -> "JerryLead/SparkInternals"
"hardikvasa/awesome-programming" -> "hardikvasa/webb"
"hardikvasa/awesome-programming" -> "hardikvasa/database-journal"
"hardikvasa/awesome-programming" -> "hardikvasa/wikipedia-crawler"
"hardikvasa/awesome-programming" -> "hardikvasa/cleoria-web-crawler"
"minrk/findspark" -> "apache/incubator-toree"
"minrk/findspark" -> "lensacom/sparkit-learn"
"minrk/findspark" -> "GoogleCloudDataproc/spark-bigquery-connector" ["e"=1]
"minrk/findspark" -> "almond-sh/almond" ["e"=1]
"mkuthan/example-spark-kafka" -> "mkuthan/example-spark"
"mkuthan/example-spark-kafka" -> "BenFradet/spark-kafka-writer"
"mkuthan/example-spark-kafka" -> "Stratio/spark-kafka"
"mkuthan/example-spark-kafka" -> "tresata/spark-kafka"
"spark-mooc/mooc-setup" -> "Lab41/ipython-spark-docker"
"spark-mooc/mooc-setup" -> "databricks/spark-knowledgebase"
"spark-mooc/mooc-setup" -> "spark-mooc/mooc-setup-dbc"
"pulsarIO/realtime-analytics" -> "pulsarIO/jetstream"
"pulsarIO/realtime-analytics" -> "Stratio/Decision"
"pulsarIO/realtime-analytics" -> "pulsarIO/jetstream-esper"
"pulsarIO/realtime-analytics" -> "filodb/FiloDB"
"pulsarIO/realtime-analytics" -> "apache/eagle" ["e"=1]
"pulsarIO/realtime-analytics" -> "redBorder/cep"
"pulsarIO/realtime-analytics" -> "pulsarIO/pulsar-reporting-ui"
"pulsarIO/realtime-analytics" -> "gearpump/gearpump" ["e"=1]
"pulsarIO/realtime-analytics" -> "KylinOLAP/Kylin"
"pulsarIO/realtime-analytics" -> "HuaweiBigData/StreamCQL"
"sryza/spark-timeseries" -> "twosigma/flint"
"sryza/spark-timeseries" -> "spark-notebook/spark-notebook"
"sryza/spark-timeseries" -> "sryza/spark-ts-examples"
"sryza/spark-timeseries" -> "h2oai/sparkling-water"
"sryza/spark-timeseries" -> "amplab/keystone"
"sryza/spark-timeseries" -> "killrweather/killrweather"
"sryza/spark-timeseries" -> "scalanlp/breeze" ["e"=1]
"sryza/spark-timeseries" -> "amplab/SparkNet"
"sryza/spark-timeseries" -> "filodb/FiloDB"
"sryza/spark-timeseries" -> "databricks/tensorframes"
"sryza/spark-timeseries" -> "databricks/spark-csv"
"sryza/spark-timeseries" -> "spark-jobserver/spark-jobserver"
"sryza/spark-timeseries" -> "sryza/aas"
"sryza/spark-timeseries" -> "databricks/spark-deep-learning"
"sryza/spark-timeseries" -> "OryxProject/oryx"
"EdwardRaff/JSAT" -> "tgsmith61591/clust4j"
"EdwardRaff/JSAT" -> "datumbox/datumbox-framework"
"EdwardRaff/JSAT" -> "bwaldvogel/liblinear-java"
"EdwardRaff/JSAT" -> "jeffheaton/encog-java-core"
"EdwardRaff/JSAT" -> "elki-project/elki"
"EdwardRaff/JSAT" -> "jtablesaw/tablesaw" ["e"=1]
"EdwardRaff/JSAT" -> "haifengl/smile" ["e"=1]
"EdwardRaff/JSAT" -> "optimatika/ojAlgo"
"EdwardRaff/JSAT" -> "oracle/tribuo" ["e"=1]
"EdwardRaff/JSAT" -> "jblas-project/jblas"
"EdwardRaff/JSAT" -> "JorenSix/TarsosLSH"
"EdwardRaff/JSAT" -> "jzy3d/jzy3d-api" ["e"=1]
"EdwardRaff/JSAT" -> "pcpratts/rootbeer1" ["e"=1]
"EdwardRaff/JSAT" -> "tdebatty/java-LSH"
"EdwardRaff/JSAT" -> "padreati/rapaio"
"gettyimages/docker-spark" -> "sequenceiq/docker-spark"
"gettyimages/docker-spark" -> "big-data-europe/docker-spark"
"gettyimages/docker-spark" -> "big-data-europe/docker-hadoop-spark-workbench"
"gettyimages/docker-spark" -> "dylanmei/docker-zeppelin"
"gettyimages/docker-spark" -> "epahomov/docker-spark"
"gettyimages/docker-spark" -> "P7h/docker-spark"
"gettyimages/docker-spark" -> "spark-jobserver/spark-jobserver"
"gettyimages/docker-spark" -> "databricks/spark-redshift" ["e"=1]
"gettyimages/docker-spark" -> "SingularitiesCR/spark-docker"
"gettyimages/docker-spark" -> "sequenceiq/hadoop-docker"
"gettyimages/docker-spark" -> "marcus-drake/sbt-docker" ["e"=1]
"gettyimages/docker-spark" -> "RedisLabs/spark-redis"
"gettyimages/docker-spark" -> "apache-spark-on-k8s/spark" ["e"=1]
"gettyimages/docker-spark" -> "mvillarrealb/docker-spark-cluster"
"gettyimages/docker-spark" -> "kiwenlau/hadoop-cluster-docker"
"juanrh/sscheck" -> "databricks/spark-integration-tests"
"apache/predictionio-template-ecom-recommender" -> "apache/predictionio-template-recommender"
"apache/predictionio-template-ecom-recommender" -> "apache/predictionio-template-similar-product"
"apache/predictionio-template-ecom-recommender" -> "PredictionIO/template-scala-parallel-complementarypurchase"
"apache/predictionio-template-ecom-recommender" -> "PredictionIO/template-scala-parallel-productranking"
"apache/predictionio-template-ecom-recommender" -> "PredictionIO/template-scala-parallel-leadscoring"
"lintool/MapReduceAlgorithms" -> "adamjshook/mapreducepatterns"
"mahmoudparsian/pyspark-tutorial" -> "UrbanInstitute/pyspark-tutorials"
"mahmoudparsian/pyspark-tutorial" -> "spark-examples/pyspark-examples"
"mahmoudparsian/pyspark-tutorial" -> "lensacom/sparkit-learn"
"mahmoudparsian/pyspark-tutorial" -> "AlexIoannides/pyspark-example-project" ["e"=1]
"mahmoudparsian/pyspark-tutorial" -> "jadianes/spark-py-notebooks"
"mahmoudparsian/pyspark-tutorial" -> "PacktPublishing/Learning-PySpark"
"mahmoudparsian/pyspark-tutorial" -> "drabastomek/learningPySpark"
"mahmoudparsian/pyspark-tutorial" -> "cartershanklin/pyspark-cheatsheet"
"mahmoudparsian/pyspark-tutorial" -> "tirthajyoti/Spark-with-Python"
"mahmoudparsian/pyspark-tutorial" -> "mahmoudparsian/data-algorithms-with-spark"
"mahmoudparsian/pyspark-tutorial" -> "XD-DENG/Spark-practice"
"mahmoudparsian/pyspark-tutorial" -> "kevinschaich/pyspark-cheatsheet"
"mahmoudparsian/pyspark-tutorial" -> "susanli2016/PySpark-and-MLlib"
"mahmoudparsian/pyspark-tutorial" -> "jkthompson/pyspark-pictures"
"mahmoudparsian/pyspark-tutorial" -> "MingChen0919/learning-apache-spark"
"dylanmei/docker-zeppelin" -> "gettyimages/docker-spark"
"openimaj/openimaj" -> "openimaj/imageterrier"
"ujmp/universal-java-matrix-package" -> "jdmp/java-data-mining-package"
"ujmp/universal-java-matrix-package" -> "lessthanoptimal/ejml"
"espertechinc/esper" -> "siddhi-io/siddhi" ["e"=1]
"espertechinc/esper" -> "luonanqin/csdn-esper"
"espertechinc/esper" -> "timolson/cointrader" ["e"=1]
"espertechinc/esper" -> "adrianmilne/esper-demo-nuclear"
"espertechinc/esper" -> "fhussonnois/kafkastreams-cep" ["e"=1]
"espertechinc/esper" -> "tomdz/storm-esper"
"espertechinc/esper" -> "espertechinc/nesper"
"espertechinc/esper" -> "Stratio/Decision"
"espertechinc/esper" -> "HuaweiBigData/StreamCQL"
"espertechinc/esper" -> "pulsarIO/realtime-analytics"
"espertechinc/esper" -> "childe/hangout" ["e"=1]
"espertechinc/esper" -> "uber-archive/AthenaX" ["e"=1]
"espertechinc/esper" -> "apache/calcite" ["e"=1]
"espertechinc/esper" -> "apache/eagle" ["e"=1]
"espertechinc/esper" -> "janino-compiler/janino" ["e"=1]
"epahomov/docker-spark" -> "epahomov/docker-zeppelin"
"huawei-noah/streamDM" -> "apache/incubator-samoa" ["e"=1]
"huawei-noah/streamDM" -> "Waikato/moa" ["e"=1]
"huawei-noah/streamDM" -> "huawei-noah/streamDM-Cpp"
"huawei-noah/streamDM" -> "Stratio/sparta"
"huawei-noah/streamDM" -> "cloudml/zen" ["e"=1]
"huawei-noah/streamDM" -> "sryza/spark-timeseries"
"huawei-noah/streamDM" -> "databricks/tensorframes"
"huawei-noah/streamDM" -> "amplab/SparkNet"
"huawei-noah/streamDM" -> "linkedin/photon-ml" ["e"=1]
"huawei-noah/streamDM" -> "shijinkui/spark_study" ["e"=1]
"huawei-noah/streamDM" -> "intel-machine-learning/DistML" ["e"=1]
"huawei-noah/streamDM" -> "irvingc/dbscan-on-spark"
"huawei-noah/streamDM" -> "LIBBLE/LIBBLE-Spark" ["e"=1]
"huawei-noah/streamDM" -> "yahoo/CaffeOnSpark"
"huawei-noah/streamDM" -> "amplab/spark-indexedrdd"
"amplab/spark-ec2" -> "nchammas/flintrock"
"amplab/spark-ec2" -> "databricks/spark-perf" ["e"=1]
"nchammas/flintrock" -> "amplab/spark-ec2"
"nchammas/flintrock" -> "PiercingDan/spark-Jupyter-AWS"
"nchammas/flintrock" -> "mrpowers-io/spark-daria" ["e"=1]
"nchammas/flintrock" -> "mrpowers-io/spark-fast-tests" ["e"=1]
"nchammas/flintrock" -> "amplab/keystone"
"nchammas/flintrock" -> "databricks/spark-redshift" ["e"=1]
"nchammas/flintrock" -> "apache/incubator-toree"
"nchammas/flintrock" -> "graphframes/graphframes"
"nchammas/flintrock" -> "broxtronix/spark-gce"
"nchammas/flintrock" -> "linkedin/photon-ml" ["e"=1]
"nchammas/flintrock" -> "databricks/spark-sql-perf" ["e"=1]
"nchammas/flintrock" -> "rdblue/s3committer"
"nchammas/flintrock" -> "groupon/spark-metrics" ["e"=1]
"nchammas/flintrock" -> "jupyter-incubator/sparkmagic"
"nchammas/flintrock" -> "amplab/spark-indexedrdd"
"jadianes/spark-py-notebooks" -> "jadianes/spark-movie-lens" ["e"=1]
"jadianes/spark-py-notebooks" -> "jadianes/data-science-your-way" ["e"=1]
"jadianes/spark-py-notebooks" -> "mahmoudparsian/pyspark-tutorial"
"jadianes/spark-py-notebooks" -> "drabastomek/learningPySpark"
"jadianes/spark-py-notebooks" -> "awesome-spark/awesome-spark" ["e"=1]
"jadianes/spark-py-notebooks" -> "PacktPublishing/Learning-PySpark"
"jadianes/spark-py-notebooks" -> "lensacom/sparkit-learn"
"jadianes/spark-py-notebooks" -> "UrbanInstitute/pyspark-tutorials"
"jadianes/spark-py-notebooks" -> "XD-DENG/Spark-practice"
"jadianes/spark-py-notebooks" -> "deanwampler/spark-scala-tutorial"
"jadianes/spark-py-notebooks" -> "tirthajyoti/Spark-with-Python"
"jadianes/spark-py-notebooks" -> "jadianes/spark-r-notebooks" ["e"=1]
"jadianes/spark-py-notebooks" -> "spark-notebook/spark-notebook"
"jadianes/spark-py-notebooks" -> "databricks/learning-spark"
"jadianes/spark-py-notebooks" -> "susanli2016/PySpark-and-MLlib"
"Huawei-Spark/Spark-SQL-on-HBase" -> "nerdammer/spark-hbase-connector"
"Huawei-Spark/Spark-SQL-on-HBase" -> "hbase-rdd/hbase-rdd"
"Huawei-Spark/Spark-SQL-on-HBase" -> "cloudera-labs/SparkOnHBase"
"Huawei-Spark/Spark-SQL-on-HBase" -> "hortonworks-spark/shc"
"Huawei-Spark/Spark-SQL-on-HBase" -> "HuaweiBigData/astro"
"Huawei-Spark/Spark-SQL-on-HBase" -> "Intel-bigdata/spark-streamingsql"
"Huawei-Spark/Spark-SQL-on-HBase" -> "caroljmcdonald/SparkStreamingHBaseExample"
"Huawei-Spark/Spark-SQL-on-HBase" -> "koeninger/kafka-exactly-once"
"Huawei-Spark/Spark-SQL-on-HBase" -> "dibbhatt/kafka-spark-consumer"
"ptnplanet/Java-Naive-Bayes-Classifier" -> "datumbox/NaiveBayesClassifier"
"ptnplanet/Java-Naive-Bayes-Classifier" -> "reallin/Bayes"
"espertechinc/nesper" -> "debuglevel/NEsper-CEP-Example"
"mongodb/mongo-spark" -> "Stratio/Spark-MongoDB"
"mongodb/mongo-spark" -> "mongodb/mongo-hadoop" ["e"=1]
"mongodb/mongo-spark" -> "databricks/spark-csv"
"mongodb/mongo-spark" -> "databricks/spark-avro"
"mongodb/mongo-spark" -> "RedisLabs/spark-redis"
"mongodb/mongo-spark" -> "breinero-zz/MongoDB_Spark_Course"
"mongodb/mongo-spark" -> "apache/cassandra-spark-connector" ["e"=1]
"mongodb/mongo-spark" -> "apache/incubator-livy"
"mongodb/mongo-spark" -> "LucaCanali/sparkMeasure" ["e"=1]
"mongodb/mongo-spark" -> "databricks/spark-sql-perf" ["e"=1]
"mongodb/mongo-spark" -> "Huawei-Spark/Spark-SQL-on-HBase"
"mongodb/mongo-spark" -> "mongodb/mongo-scala-driver" ["e"=1]
"mongodb/mongo-spark" -> "apache/hbase-connectors"
"mongodb/mongo-spark" -> "neo4j/neo4j-spark-connector" ["e"=1]
"mongodb/mongo-spark" -> "apache/gobblin" ["e"=1]
"jaceklaskowski/spark-kubernetes-book" -> "japila-books/pyspark-internals"
"PredictionIO/template-scala-parallel-universal-recommendation" -> "apache/predictionio-template-ecom-recommender"
"PredictionIO/template-scala-parallel-universal-recommendation" -> "apache/predictionio-template-similar-product"
"PredictionIO/template-scala-parallel-universal-recommendation" -> "actionml/cluster-setup"
"PredictionIO/template-scala-parallel-universal-recommendation" -> "apache/predictionio-template-skeleton"
"pulsarIO/jetstream" -> "pulsarIO/jetstream-esper"
"pulsarIO/jetstream" -> "pulsarIO/realtime-analytics"
"jdmp/java-data-mining-package" -> "ujmp/universal-java-matrix-package"
"hammerlab/spree" -> "hammerlab/spark-json-relay"
"elki-project/elki" -> "EdwardRaff/JSAT"
"elki-project/elki" -> "yahoo/egads" ["e"=1]
"elki-project/elki" -> "tgsmith61591/clust4j"
"elki-project/elki" -> "alitouka/spark_dbscan"
"elki-project/elki" -> "apache/incubator-samoa" ["e"=1]
"elki-project/elki" -> "Waikato/moa" ["e"=1]
"elki-project/elki" -> "mhahsler/dbscan" ["e"=1]
"elki-project/elki" -> "lejon/T-SNE-Java"
"elki-project/elki" -> "scikit-learn-contrib/hdbscan" ["e"=1]
"elki-project/elki" -> "fast-pack/JavaFastPFOR" ["e"=1]
"elki-project/elki" -> "Markus-Go/rapidminer-anomalydetection"
"elki-project/elki" -> "annoviko/pyclustering" ["e"=1]
"elki-project/elki" -> "Netflix/Surus" ["e"=1]
"elki-project/elki" -> "haifengl/smile" ["e"=1]
"elki-project/elki" -> "lbehnke/hierarchical-clustering-java"
"mkuthan/example-spark" -> "mkuthan/example-spark-kafka"
"mkuthan/example-spark" -> "phatak-dev/spark2.0-examples"
"mkuthan/example-spark" -> "JerryLead/SparkLearning"
"svenkreiss/pysparkling" -> "ekampf/PySpark-Boilerplate"
"HariSekhon/Terraform" -> "HariSekhon/GitHub-Actions"
"HariSekhon/Terraform" -> "HariSekhon/cheatsheets"
"HariSekhon/Terraform" -> "HariSekhon/GitHub-Actions-Contexts"
"HariSekhon/Terraform" -> "HariSekhon/DevOps-Golang-tools"
"HariSekhon/Terraform" -> "HariSekhon/Templates"
"sramirez/spark-infotheoretic-feature-selection" -> "sramirez/spark-MDLP-discretization"
"sramirez/spark-infotheoretic-feature-selection" -> "MarcKaminski/spark-FeatureSelection"
"sramirez/spark-infotheoretic-feature-selection" -> "wxhC3SC6OPm8M1HXboMy/spark-mrmr-feature-selection"
"sramirez/spark-infotheoretic-feature-selection" -> "sramirez/fast-mRMR"
"sramirez/spark-infotheoretic-feature-selection" -> "manuparra/MasterDatCom_BDCC_Practice"
"sramirez/spark-infotheoretic-feature-selection" -> "LIDIAgroup/SparkFeatureSelection"
"spotify/annoy-java" -> "annoy4s/annoy4s"
"hardikvasa/hadoop-mapreduce-examples-python" -> "hardikvasa/cleoria-web-crawler"
"irvingc/dbscan-on-spark" -> "alitouka/spark_dbscan"
"irvingc/dbscan-on-spark" -> "mraad/dbscan-spark"
"irvingc/dbscan-on-spark" -> "scalanlp/nak"
"irvingc/dbscan-on-spark" -> "bwoneill/pypardis"
"irvingc/dbscan-on-spark" -> "saurfang/spark-tsne"
"SeldonIO/seldon-spark" -> "SeldonIO/seldon-vm"
"SeldonIO/seldon-spark" -> "SeldonIO/semantic-vectors-lucene-tools"
"saurfang/spark-tsne" -> "saurfang/spark-knn"
"epfldata/squall" -> "HuaweiBigData/StreamCQL"
"epfldata/squall" -> "nathanmarz/trident-memcached"
"Lab41/ipython-spark-docker" -> "Lab41/soft-boiled"
"spancer/bigdata-docker-builds" -> "spancer/bigdata-docker-compose"
"amplab/keystone" -> "amplab/velox-modelserver"
"amplab/keystone" -> "zhangyuc/splash" ["e"=1]
"amplab/keystone" -> "amplab/spark-indexedrdd"
"amplab/keystone" -> "collectivemedia/spark-ext"
"amplab/keystone" -> "amplab/succinct"
"amplab/keystone" -> "linkedin/photon-ml" ["e"=1]
"amplab/keystone" -> "amplab/SparkNet"
"amplab/keystone" -> "mesos/myriad" ["e"=1]
"amplab/keystone" -> "sryza/spark-timeseries"
"amplab/keystone" -> "ibm-et/spark-kernel"
"amplab/keystone" -> "h2oai/sparkling-water"
"amplab/keystone" -> "coral-streaming/coral"
"amplab/keystone" -> "tresata/spark-sorted"
"amplab/keystone" -> "Intel-bigdata/spark-streamingsql"
"amplab/keystone" -> "databricks/tensorframes"
"sramirez/spark-MDLP-discretization" -> "sramirez/spark-infotheoretic-feature-selection"
"SeldonIO/importer-movielens-10m" -> "SeldonIO/semantic-vectors-lucene-tools"
"SeldonIO/importer-movielens-10m" -> "SeldonIO/seldon-vm"
"SeldonIO/semantic-vectors-lucene-tools" -> "SeldonIO/importer-movielens-10m"
"SeldonIO/semantic-vectors-lucene-tools" -> "SeldonIO/seldon-vm"
"SeldonIO/seldon-vm" -> "SeldonIO/semantic-vectors-lucene-tools"
"SeldonIO/seldon-vm" -> "SeldonIO/importer-movielens-10m"
"hardikvasa/webb" -> "hardikvasa/cleoria-web-crawler"
"hardikvasa/webb" -> "Diastro/Zeek"
"hardikvasa/webb" -> "hardikvasa/awesome-programming"
"hardikvasa/webb" -> "shivam5992/pyscrapper"
"hardikvasa/webb" -> "hardikvasa/wikipedia-crawler"
"hardikvasa/webb" -> "hardikvasa/database-journal"
"spancer/bigdata-docker-compose" -> "spancer/bigdata-docker-builds"
"spancer/bigdata-docker-compose" -> "spancer/flink-iceberg-demo"
"spancer/bigdata-docker-compose" -> "panovvv/bigdata-docker-compose"
"spancer/bigdata-docker-compose" -> "hulichao/docker-bigdata"
"hardikvasa/wikipedia-crawler" -> "hardikvasa/cleoria-web-crawler"
"hardikvasa/wikipedia-crawler" -> "AndreiRegiani/wikipedia-crawler"
"vigna/Sux4J" -> "thomasmueller/minperf"
"vspiewak/twitter-sentiment-analysis" -> "DhruvKumar/spark-twitter-sentiment"
"vspiewak/twitter-sentiment-analysis" -> "stefanobaghino/spark-twitter-stream-example"
"vspiewak/twitter-sentiment-analysis" -> "zdata-inc/SparkSampleProject"
"rockthejvm/cats-effect" -> "rockthejvm/cats-course"
"rockthejvm/cats-effect" -> "rockthejvm/zio-course"
"sdhu/elasticsearch-prediction" -> "sdhu/elasticsearch-prediction-spark"
"sdhu/elasticsearch-prediction-spark" -> "sdhu/elasticsearch-prediction"
"PredictionIO/template-scala-parallel-productranking" -> "PredictionIO/template-scala-parallel-leadscoring"
"PredictionIO/template-scala-parallel-productranking" -> "apache/predictionio-template-attribute-based-classifier"
"PredictionIO/template-scala-parallel-leadscoring" -> "PredictionIO/template-scala-parallel-productranking"
"PredictionIO/template-scala-parallel-leadscoring" -> "PredictionIO/template-scala-parallel-complementarypurchase"
"endymecy/spark-ml-source-analysis" -> "lw-lin/CoolplaySpark"
"endymecy/spark-ml-source-analysis" -> "jacksu/utils4s"
"endymecy/spark-ml-source-analysis" -> "JerryLead/SparkInternals"
"endymecy/spark-ml-source-analysis" -> "xubo245/SparkLearning"
"endymecy/spark-ml-source-analysis" -> "yahoo/TensorFlowOnSpark"
"endymecy/spark-ml-source-analysis" -> "Angel-ML/angel" ["e"=1]
"endymecy/spark-ml-source-analysis" -> "byzer-org/byzer-lang" ["e"=1]
"endymecy/spark-ml-source-analysis" -> "wzhe06/Ad-papers" ["e"=1]
"endymecy/spark-ml-source-analysis" -> "alibaba/x-deeplearning" ["e"=1]
"endymecy/spark-ml-source-analysis" -> "endymecy/spark-graphx-source-analysis"
"endymecy/spark-ml-source-analysis" -> "ColZer/DigAndBuried" ["e"=1]
"endymecy/spark-ml-source-analysis" -> "wzhe06/SparkCTR" ["e"=1]
"endymecy/spark-ml-source-analysis" -> "databricks/spark-deep-learning"
"endymecy/spark-ml-source-analysis" -> "databricks/learning-spark"
"endymecy/spark-ml-source-analysis" -> "apachecn/spark-doc-zh"
"steveloughran/winutils" -> "cdarlint/winutils" ["e"=1]
"steveloughran/winutils" -> "lw-lin/CoolplaySpark"
"steveloughran/winutils" -> "JerryLead/SparkInternals"
"steveloughran/winutils" -> "srccodes/hadoop-common-2.2.0-bin" ["e"=1]
"steveloughran/winutils" -> "hortonworks-spark/shc"
"steveloughran/winutils" -> "DTStack/chunjun" ["e"=1]
"steveloughran/winutils" -> "apache/hive" ["e"=1]
"steveloughran/winutils" -> "azkaban/azkaban" ["e"=1]
"steveloughran/winutils" -> "databricks/learning-spark"
"steveloughran/winutils" -> "apache/ambari" ["e"=1]
"steveloughran/winutils" -> "apache/flink-cdc" ["e"=1]
"steveloughran/winutils" -> "apache/seatunnel" ["e"=1]
"steveloughran/winutils" -> "DTStack/flinkStreamSQL" ["e"=1]
"steveloughran/winutils" -> "apache/dolphinscheduler" ["e"=1]
"steveloughran/winutils" -> "apachecn/spark-doc-zh"
"yahoo/CaffeOnSpark" -> "amplab/SparkNet"
"yahoo/CaffeOnSpark" -> "yahoo/TensorFlowOnSpark"
"yahoo/CaffeOnSpark" -> "databricks/tensorframes"
"yahoo/CaffeOnSpark" -> "h2oai/sparkling-water"
"yahoo/CaffeOnSpark" -> "dirkneumann/deepdist"
"yahoo/CaffeOnSpark" -> "jay-mahadeokar/pynetbuilder" ["e"=1]
"yahoo/CaffeOnSpark" -> "maxpumperla/elephas"
"yahoo/CaffeOnSpark" -> "sryza/spark-timeseries"
"yahoo/CaffeOnSpark" -> "adatao/tensorspark"
"yahoo/CaffeOnSpark" -> "microsoft/DMTK" ["e"=1]
"yahoo/CaffeOnSpark" -> "huawei-noah/streamDM"
"yahoo/CaffeOnSpark" -> "amplab/keystone"
"yahoo/CaffeOnSpark" -> "soumith/convnet-benchmarks" ["e"=1]
"yahoo/CaffeOnSpark" -> "sailing-pmls/bosen" ["e"=1]
"yahoo/CaffeOnSpark" -> "NervanaSystems/neon" ["e"=1]
"HuaweiBigData/StreamCQL" -> "HuaweiBigData/astro"
"HuaweiBigData/StreamCQL" -> "epfldata/squall"
"HuaweiBigData/StreamCQL" -> "HuaweiBigData/carbondata"
"HuaweiBigData/StreamCQL" -> "uber-archive/chaperone" ["e"=1]
"HuaweiBigData/StreamCQL" -> "Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" ["e"=1]
"HuaweiBigData/StreamCQL" -> "eBay/Eagle" ["e"=1]
"HariSekhon/Dockerfiles" -> "HariSekhon/DevOps-Python-tools"
"HariSekhon/Dockerfiles" -> "dajobe/hbase-docker"
"HariSekhon/Dockerfiles" -> "HariSekhon/Kubernetes-configs"
"HariSekhon/Dockerfiles" -> "HariSekhon/Templates"
"HariSekhon/Dockerfiles" -> "big-data-europe/docker-hadoop"
"HariSekhon/Dockerfiles" -> "big-data-europe/docker-hbase"
"HariSekhon/Dockerfiles" -> "HariSekhon/SQL-scripts"
"HariSekhon/Dockerfiles" -> "big-data-europe/docker-hadoop-spark-workbench"
"HariSekhon/Dockerfiles" -> "HariSekhon/Terraform"
"HariSekhon/Dockerfiles" -> "HariSekhon/Nagios-Plugins" ["e"=1]
"HariSekhon/Dockerfiles" -> "ruoyu-chen/hadoop-docker"
"HariSekhon/Dockerfiles" -> "big-data-europe/docker-spark"
"HariSekhon/Dockerfiles" -> "HariSekhon/GitHub-Actions"
"HariSekhon/Dockerfiles" -> "big-data-europe/docker-hive"
"HariSekhon/Dockerfiles" -> "kiwenlau/hadoop-cluster-docker"
"apache/incubator-toree" -> "almond-sh/almond" ["e"=1]
"apache/incubator-toree" -> "ibm-et/spark-kernel"
"apache/incubator-toree" -> "vegas-viz/Vegas" ["e"=1]
"apache/incubator-toree" -> "cloudera/livy"
"apache/incubator-toree" -> "jupyter-incubator/sparkmagic"
"apache/incubator-toree" -> "apache/incubator-livy"
"apache/incubator-toree" -> "databricks/tensorframes"
"apache/incubator-toree" -> "apache/systemds"
"apache/incubator-toree" -> "spark-jobserver/spark-jobserver"
"apache/incubator-toree" -> "harsha2010/magellan" ["e"=1]
"apache/incubator-toree" -> "h2oai/sparkling-water"
"apache/incubator-toree" -> "spark-notebook/spark-notebook"
"apache/incubator-toree" -> "minrk/findspark"
"apache/incubator-toree" -> "filodb/FiloDB"
"apache/incubator-toree" -> "amplab/keystone"
"jacksu/utils4s" -> "lw-lin/CoolplaySpark"
"jacksu/utils4s" -> "endymecy/spark-ml-source-analysis"
"jacksu/utils4s" -> "xubo245/SparkLearning"
"jacksu/utils4s" -> "spirom/LearningSpark"
"jacksu/utils4s" -> "byzer-org/byzer-lang" ["e"=1]
"jacksu/utils4s" -> "Centaur/repox" ["e"=1]
"jacksu/utils4s" -> "JerryLead/SparkInternals"
"jacksu/utils4s" -> "cjuexuan/mynote" ["e"=1]
"jacksu/utils4s" -> "apachecn/spark-doc-zh"
"jacksu/utils4s" -> "ColZer/DigAndBuried" ["e"=1]
"jacksu/utils4s" -> "teeyog/IQL" ["e"=1]
"jacksu/utils4s" -> "lauris/awesome-scala" ["e"=1]
"jacksu/utils4s" -> "spark-jobserver/spark-jobserver"
"jacksu/utils4s" -> "LinMingQiang/sparkstreaming" ["e"=1]
"jacksu/utils4s" -> "allwefantasy/my-life" ["e"=1]
"hortonworks-spark/shc" -> "nerdammer/spark-hbase-connector"
"hortonworks-spark/shc" -> "cloudera-labs/SparkOnHBase"
"hortonworks-spark/shc" -> "Huawei-Spark/Spark-SQL-on-HBase"
"hortonworks-spark/shc" -> "apache/hbase-connectors"
"hortonworks-spark/shc" -> "hbase-rdd/hbase-rdd"
"hortonworks-spark/shc" -> "RedisLabs/spark-redis"
"hortonworks-spark/shc" -> "NGDATA/hbase-indexer"
"hortonworks-spark/shc" -> "apache/phoenix" ["e"=1]
"hortonworks-spark/shc" -> "cloudera/livy"
"hortonworks-spark/shc" -> "allwefantasy/spark-binlog" ["e"=1]
"hortonworks-spark/shc" -> "japila-books/spark-structured-streaming-internals"
"hortonworks-spark/shc" -> "teeyog/IQL" ["e"=1]
"hortonworks-spark/shc" -> "byzer-org/byzer-lang" ["e"=1]
"hortonworks-spark/shc" -> "apache/incubator-livy"
"hortonworks-spark/shc" -> "lw-lin/CoolplaySpark"
"lw-lin/CoolplaySpark" -> "JerryLead/SparkInternals"
"lw-lin/CoolplaySpark" -> "endymecy/spark-ml-source-analysis"
"lw-lin/CoolplaySpark" -> "byzer-org/byzer-lang" ["e"=1]
"lw-lin/CoolplaySpark" -> "jacksu/utils4s"
"lw-lin/CoolplaySpark" -> "flink-china/flink-training-course" ["e"=1]
"lw-lin/CoolplaySpark" -> "ColZer/DigAndBuried" ["e"=1]
"lw-lin/CoolplaySpark" -> "DTStack/flinkStreamSQL" ["e"=1]
"lw-lin/CoolplaySpark" -> "databricks/learning-spark"
"lw-lin/CoolplaySpark" -> "DTStack/chunjun" ["e"=1]
"lw-lin/CoolplaySpark" -> "spark-jobserver/spark-jobserver"
"lw-lin/CoolplaySpark" -> "apachecn/spark-doc-zh"
"lw-lin/CoolplaySpark" -> "wangzhiwubigdata/God-Of-BigData" ["e"=1]
"lw-lin/CoolplaySpark" -> "zhisheng17/flink-learning" ["e"=1]
"lw-lin/CoolplaySpark" -> "xubo245/SparkLearning"
"lw-lin/CoolplaySpark" -> "lw-lin/streaming-readings" ["e"=1]
"big-data-europe/docker-spark" -> "big-data-europe/docker-hadoop"
"big-data-europe/docker-spark" -> "big-data-europe/docker-hadoop-spark-workbench"
"big-data-europe/docker-spark" -> "mvillarrealb/docker-spark-cluster"
"big-data-europe/docker-spark" -> "big-data-europe/docker-hive"
"big-data-europe/docker-spark" -> "gettyimages/docker-spark"
"big-data-europe/docker-spark" -> "big-data-europe/docker-flink"
"big-data-europe/docker-spark" -> "bitnami/bitnami-docker-spark"
"big-data-europe/docker-spark" -> "sequenceiq/docker-spark"
"big-data-europe/docker-spark" -> "big-data-europe/docker-hbase"
"big-data-europe/docker-spark" -> "cluster-apps-on-docker/spark-standalone-cluster-on-docker"
"big-data-europe/docker-spark" -> "kubeflow/spark-operator" ["e"=1]
"big-data-europe/docker-spark" -> "puckel/docker-airflow" ["e"=1]
"big-data-europe/docker-spark" -> "holdenk/spark-testing-base"
"big-data-europe/docker-spark" -> "databricks/spark-deep-learning"
"big-data-europe/docker-spark" -> "HariSekhon/Dockerfiles"
"XD-DENG/Spark-practice" -> "tirthajyoti/Spark-with-Python"
"XD-DENG/Spark-practice" -> "XD-DENG/Spark-ML-Intro"
"XD-DENG/Spark-practice" -> "UrbanInstitute/pyspark-tutorials"
"XD-DENG/Spark-practice" -> "drabastomek/learningPySpark"
"XD-DENG/Spark-practice" -> "Pushkr/Apache-Spark-Hands-On"
"XD-DENG/Spark-practice" -> "abulbasar/pyspark-examples"
"XD-DENG/Spark-practice" -> "PacktPublishing/Learning-PySpark"
"XD-DENG/Spark-practice" -> "jadianes/spark-py-notebooks"
"XD-DENG/Spark-practice" -> "susanli2016/PySpark-and-MLlib"
"XD-DENG/Spark-practice" -> "mahmoudparsian/pyspark-tutorial"
"RedisLabs/spark-redis" -> "hortonworks-spark/shc"
"RedisLabs/spark-redis" -> "debasishg/scala-redis" ["e"=1]
"RedisLabs/spark-redis" -> "elastic/elasticsearch-hadoop" ["e"=1]
"RedisLabs/spark-redis" -> "Huawei-Spark/Spark-SQL-on-HBase"
"RedisLabs/spark-redis" -> "spark-jobserver/spark-jobserver"
"RedisLabs/spark-redis" -> "japila-books/spark-structured-streaming-internals"
"RedisLabs/spark-redis" -> "lw-lin/CoolplaySpark"
"RedisLabs/spark-redis" -> "apache/cassandra-spark-connector" ["e"=1]
"RedisLabs/spark-redis" -> "TIBCOSoftware/snappydata" ["e"=1]
"RedisLabs/spark-redis" -> "combust/mleap"
"RedisLabs/spark-redis" -> "sryza/spark-timeseries"
"RedisLabs/spark-redis" -> "cloudera/livy"
"RedisLabs/spark-redis" -> "databricks/spark-avro"
"RedisLabs/spark-redis" -> "byzer-org/byzer-lang" ["e"=1]
"RedisLabs/spark-redis" -> "apache/hbase-connectors"
"stanford-futuredata/macrobase" -> "stanford-futuredata/ASAP"
"stanford-futuredata/macrobase" -> "stanford-futuredata/sparser"
"stanford-futuredata/macrobase" -> "stanford-futuredata/readinggroup"
"stanford-futuredata/macrobase" -> "weld-project/weld" ["e"=1]
"stanford-futuredata/macrobase" -> "stanford-futuredata/noscope" ["e"=1]
"stanford-futuredata/macrobase" -> "amplab/keystone"
"stanford-futuredata/macrobase" -> "amplab/spark-indexedrdd"
"stanford-futuredata/macrobase" -> "rdblue/s3committer"
"myamafuj/hadoop-hive-spark-docker" -> "enkhalifapro/bigdata-all-in-one"
"myamafuj/hadoop-hive-spark-docker" -> "martinkarlssonio/big-data-solution"
"clulab/nlp-reading-group" -> "clulab/processors"
"h2oai/h2o-tutorials" -> "h2oai/h2o-3" ["e"=1]
"h2oai/h2o-tutorials" -> "h2oai/h2o-meetups"
"h2oai/h2o-tutorials" -> "h2oai/sparkling-water"
"h2oai/h2o-tutorials" -> "h2oai/awesome-h2o"
"h2oai/h2o-tutorials" -> "ledell/useR-machine-learning-tutorial" ["e"=1]
"h2oai/h2o-tutorials" -> "mlr-org/mlr" ["e"=1]
"h2oai/h2o-tutorials" -> "ModelOriented/DALEX" ["e"=1]
"h2oai/h2o-tutorials" -> "DarrenCook/h2o"
"h2oai/h2o-tutorials" -> "h2oai/tutorials"
"h2oai/h2o-tutorials" -> "sparklyr/sparklyr" ["e"=1]
"h2oai/h2o-tutorials" -> "h2oai/h2o4gpu"
"h2oai/h2o-tutorials" -> "h2oai/deepwater"
"h2oai/h2o-tutorials" -> "kaz-Anova/StackNet" ["e"=1]
"h2oai/h2o-tutorials" -> "rstudio/webinars" ["e"=1]
"h2oai/h2o-tutorials" -> "h2oai/mli-resources" ["e"=1]
"rockthejvm/udemy-scala-beginners" -> "rockthejvm/udemy-scala-advanced"
"rockthejvm/udemy-scala-beginners" -> "rockthejvm/spark-essentials"
"rockthejvm/udemy-scala-beginners" -> "rockthejvm/spark-optimization"
"databricks/spark-sklearn" -> "lensacom/sparkit-learn"
"databricks/spark-sklearn" -> "databricks/spark-deep-learning"
"databricks/spark-sklearn" -> "databricks/tensorframes"
"databricks/spark-sklearn" -> "yahoo/TensorFlowOnSpark"
"databricks/spark-sklearn" -> "combust/mleap"
"databricks/spark-sklearn" -> "h2oai/sparkling-water"
"databricks/spark-sklearn" -> "twosigma/flint"
"databricks/spark-sklearn" -> "databricks/spark-corenlp"
"databricks/spark-sklearn" -> "sryza/spark-timeseries"
"databricks/spark-sklearn" -> "maxpumperla/elephas"
"databricks/spark-sklearn" -> "apache/incubator-toree"
"databricks/spark-sklearn" -> "hyperopt/hyperopt-sklearn" ["e"=1]
"databricks/spark-sklearn" -> "bolt-project/bolt"
"databricks/spark-sklearn" -> "databricks/spark-csv"
"databricks/spark-sklearn" -> "graphframes/graphframes"
"SparkTC/systemml" -> "apache/systemds"
"SparkTC/systemml" -> "apache/systemds-website"
"SparkTC/systemml" -> "Samsung/veles" ["e"=1]
"SparkTC/systemml" -> "microsoft/Multiverso" ["e"=1]
"SparkTC/systemml" -> "amplab/keystone"
"SparkTC/systemml" -> "apache/bahir"
"SparkTC/systemml" -> "microsoft/DMTK" ["e"=1]
"SparkTC/systemml" -> "apache/bahir-website"
"SparkTC/systemml" -> "IDSIA/brainstorm" ["e"=1]
"SparkTC/systemml" -> "apache/incubator-samoa" ["e"=1]
"apache/systemds" -> "SparkTC/systemml"
"apache/systemds" -> "apache/bahir"
"apache/systemds" -> "apache/incubator-toree"
"apache/systemds" -> "amplab/keystone"
"apache/systemds" -> "apache/systemds-website"
"apache/systemds" -> "tugraz-isds/systemds" ["e"=1]
"apache/systemds" -> "h2oai/sparkling-water"
"apache/systemds" -> "apache/bahir-website"
"apache/systemds" -> "yahoo/CaffeOnSpark"
"apache/systemds" -> "sryza/spark-timeseries"
"apache/systemds" -> "huawei-noah/streamDM"
"apache/systemds" -> "apache/datasketches-java" ["e"=1]
"apache/systemds" -> "microsoft/DMTK" ["e"=1]
"apache/systemds" -> "OryxProject/oryx"
"apache/systemds" -> "yahoo/TensorFlowOnSpark"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/Dockerfiles"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/Templates"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/SQL-scripts"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/Terraform"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/HAProxy-configs"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/DevOps-Bash-tools" ["e"=1]
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/DevOps-Golang-tools"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/GitHub-Actions"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/Nagios-Plugins" ["e"=1]
"HariSekhon/DevOps-Python-tools" -> "dennyzhang/devops_public" ["e"=1]
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/Kubernetes-configs"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/Knowledge-Base"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/DevOps-Perl-tools"
"HariSekhon/DevOps-Python-tools" -> "HariSekhon/cheatsheets"
"HariSekhon/DevOps-Python-tools" -> "paiml/python_devops_book" ["e"=1]
"amplab/SparkNet" -> "yahoo/CaffeOnSpark"
"amplab/SparkNet" -> "databricks/tensorframes"
"amplab/SparkNet" -> "dirkneumann/deepdist"
"amplab/SparkNet" -> "adatao/tensorspark"
"amplab/SparkNet" -> "amplab/keystone"
"amplab/SparkNet" -> "sryza/spark-timeseries"
"amplab/SparkNet" -> "intel-machine-learning/DistML" ["e"=1]
"amplab/SparkNet" -> "h2oai/sparkling-water"
"amplab/SparkNet" -> "cloudml/zen" ["e"=1]
"amplab/SparkNet" -> "sunbow1/SparkMLlibDeepLearn" ["e"=1]
"amplab/SparkNet" -> "huawei-noah/streamDM"
"amplab/SparkNet" -> "dmlc/parameter_server" ["e"=1]
"amplab/SparkNet" -> "sailing-pmls/bosen" ["e"=1]
"amplab/SparkNet" -> "amplab/spark-indexedrdd"
"amplab/SparkNet" -> "maxpumperla/elephas"
"databricks/spark-corenlp" -> "scalanlp/chalk"
"databricks/spark-corenlp" -> "clulab/processors"
"databricks/spark-corenlp" -> "databricks/tensorframes"
"databricks/spark-corenlp" -> "dlwh/epic"
"databricks/spark-corenlp" -> "master/spark-stemming"
"databricks/spark-corenlp" -> "high-performance-spark/high-performance-spark-examples"
"databricks/spark-corenlp" -> "databricks/spark-sklearn"
"databricks/spark-corenlp" -> "vspiewak/twitter-sentiment-analysis"
"databricks/spark-corenlp" -> "mpollmeier/gremlin-scala" ["e"=1]
"databricks/spark-corenlp" -> "ceteri/spark-exercises"
"databricks/spark-corenlp" -> "h2oai/sparkling-water"
"databricks/spark-corenlp" -> "deeplearning4j/ScalNet" ["e"=1]
"databricks/spark-corenlp" -> "collectivemedia/spark-ext"
"databricks/spark-corenlp" -> "sryza/spark-timeseries"
"databricks/spark-corenlp" -> "amplab/keystone"
"japila-books/apache-spark-internals" -> "japila-books/spark-sql-internals"
"japila-books/apache-spark-internals" -> "JerryLead/SparkInternals"
"japila-books/apache-spark-internals" -> "japila-books/spark-structured-streaming-internals"
"japila-books/apache-spark-internals" -> "LucaCanali/sparkMeasure" ["e"=1]
"japila-books/apache-spark-internals" -> "databricks/scala-style-guide" ["e"=1]
"japila-books/apache-spark-internals" -> "ColZer/DigAndBuried" ["e"=1]
"japila-books/apache-spark-internals" -> "japila-books/delta-lake-internals"
"japila-books/apache-spark-internals" -> "awesome-spark/awesome-spark" ["e"=1]
"japila-books/apache-spark-internals" -> "holdenk/spark-testing-base"
"japila-books/apache-spark-internals" -> "jaceklaskowski/spark-workshop"
"japila-books/apache-spark-internals" -> "lw-lin/CoolplaySpark"
"japila-books/apache-spark-internals" -> "high-performance-spark/high-performance-spark-examples"
"japila-books/apache-spark-internals" -> "spark-jobserver/spark-jobserver"
"japila-books/apache-spark-internals" -> "databricks/spark-sql-perf" ["e"=1]
"japila-books/apache-spark-internals" -> "linkedin/dr-elephant" ["e"=1]
"cloudera/livy" -> "apache/incubator-livy"
"cloudera/livy" -> "spark-jobserver/spark-jobserver"
"cloudera/livy" -> "jupyter-incubator/sparkmagic"
"cloudera/livy" -> "apache/incubator-toree"
"cloudera/livy" -> "hortonworks-spark/shc"
"cloudera/livy" -> "holdenk/spark-testing-base"
"cloudera/livy" -> "databricks/tensorframes"
"cloudera/livy" -> "databricks/spark-csv"
"cloudera/livy" -> "OryxProject/oryx"
"cloudera/livy" -> "linkedin/dr-elephant" ["e"=1]
"cloudera/livy" -> "databricks/spark-sql-perf" ["e"=1]
"cloudera/livy" -> "byzer-org/byzer-lang" ["e"=1]
"cloudera/livy" -> "apache/carbondata" ["e"=1]
"cloudera/livy" -> "spark-notebook/spark-notebook"
"cloudera/livy" -> "Hydrospheredata/mist" ["e"=1]
"maxpumperla/elephas" -> "cerndb/dist-keras"
"maxpumperla/elephas" -> "databricks/spark-deep-learning"
"maxpumperla/elephas" -> "yahoo/TensorFlowOnSpark"
"maxpumperla/elephas" -> "maxpumperla/hyperas" ["e"=1]
"maxpumperla/elephas" -> "databricks/spark-sklearn"
"maxpumperla/elephas" -> "farizrahman4u/seq2seq" ["e"=1]
"maxpumperla/elephas" -> "amplab/SparkNet"
"maxpumperla/elephas" -> "keplr-io/quiver" ["e"=1]
"maxpumperla/elephas" -> "EderSantana/seya" ["e"=1]
"maxpumperla/elephas" -> "yahoo/CaffeOnSpark"
"maxpumperla/elephas" -> "combust/mleap"
"maxpumperla/elephas" -> "NervanaSystems/neon" ["e"=1]
"maxpumperla/elephas" -> "tensorflow/skflow" ["e"=1]
"maxpumperla/elephas" -> "databricks/tensorframes"
"maxpumperla/elephas" -> "lensacom/sparkit-learn"
"pulsarIO/pulsar-reporting-ui" -> "pulsarIO/pulsar-reporting-api"
"adatao/tensorspark" -> "databricks/tensorframes"
"adatao/tensorspark" -> "dirkneumann/deepdist"
"adatao/tensorspark" -> "amplab/SparkNet"
"adatao/tensorspark" -> "cerndb/dist-keras"
"rockthejvm/udemy-scala-advanced" -> "rockthejvm/udemy-scala-beginners"
"databricks/spark-xml" -> "databricks/spark-avro"
"databricks/spark-xml" -> "databricks/spark-csv"
"databricks/spark-xml" -> "elsevierlabs-os/spark-xml-utils"
"databricks/spark-xml" -> "databricks/spark-sql-perf" ["e"=1]
"databricks/spark-xml" -> "databricks/spark-corenlp"
"databricks/spark-xml" -> "AbsaOSS/spline" ["e"=1]
"databricks/spark-xml" -> "nightscape/spark-excel"
"databricks/spark-xml" -> "HyukjinKwon/spark-xml"
"databricks/spark-xml" -> "apache/incubator-toree"
"databricks/spark-xml" -> "databricks/spark-knowledgebase"
"databricks/spark-xml" -> "databricks/scala-style-guide" ["e"=1]
"databricks/spark-xml" -> "delta-io/delta-sharing" ["e"=1]
"databricks/spark-xml" -> "delta-io/connectors" ["e"=1]
"databricks/spark-xml" -> "sakserv/hadoop-mini-clusters"
"jupyter-incubator/sparkmagic" -> "cloudera/livy"
"jupyter-incubator/sparkmagic" -> "apache/incubator-livy"
"jupyter-incubator/sparkmagic" -> "apache/incubator-toree"
"jupyter-incubator/sparkmagic" -> "almond-sh/almond" ["e"=1]
"jupyter-incubator/sparkmagic" -> "spark-jobserver/spark-jobserver"
"jupyter-incubator/sparkmagic" -> "JahstreetOrg/spark-on-kubernetes-helm"
"jupyter-incubator/sparkmagic" -> "databricks/spark-deep-learning"
"jupyter-incubator/sparkmagic" -> "jupyter-server/enterprise_gateway" ["e"=1]
"jupyter-incubator/sparkmagic" -> "databricks/koalas"
"jupyter-incubator/sparkmagic" -> "combust/mleap"
"jupyter-incubator/sparkmagic" -> "LucaCanali/sparkMeasure" ["e"=1]
"jupyter-incubator/sparkmagic" -> "dropbox/PyHive" ["e"=1]
"jupyter-incubator/sparkmagic" -> "graphframes/graphframes"
"jupyter-incubator/sparkmagic" -> "databricks/tensorframes"
"jupyter-incubator/sparkmagic" -> "holdenk/spark-testing-base"
"HariSekhon/GitHub-Actions" -> "HariSekhon/Terraform"
"HariSekhon/GitHub-Actions" -> "HariSekhon/GitHub-Actions-Contexts"
"HariSekhon/GitHub-Actions" -> "HariSekhon/DevOps-Golang-tools"
"HariSekhon/GitHub-Actions" -> "HariSekhon/Templates"
"egen/spark-sftp" -> "arcizon/spark-filetransfer"
"HariSekhon/Jenkins" -> "HariSekhon/Terraform"
"HariSekhon/Jenkins" -> "HariSekhon/Templates"
"soundcloud/cosine-lsh-join-spark" -> "karlhigley/spark-neighbors"
"soundcloud/cosine-lsh-join-spark" -> "marufaytekin/lsh-spark"
"soundcloud/cosine-lsh-join-spark" -> "mrsqueeze/spark-hash"
"soundcloud/cosine-lsh-join-spark" -> "LinkedInAttic/scanns"
"HuaweiBigData/astro" -> "HuaweiBigData/StreamCQL"
"HuaweiBigData/astro" -> "Huawei-Spark/Spark-SQL-on-HBase"
"HuaweiBigData/astro" -> "HuaweiBigData/carbondata"
"HuaweiBigData/astro" -> "NGDATA/hbase-indexer"
"HuaweiBigData/astro" -> "TopSpoofer/hbrdd"
"actionml/template-scala-parallel-universal-recommendation" -> "actionml/ur-analysis-tools"
"actionml/template-scala-parallel-universal-recommendation" -> "actionml/cluster-setup"
"actionml/PredictionIO" -> "actionml/cluster-setup"
"collectivemedia/spark-ext" -> "collectivemedia/modelmatrix"
"tzaeschke/phtree" -> "tzaeschke/tinspin-indexes"
"tzaeschke/phtree" -> "tzaeschke/TinSpin"
"tzaeschke/phtree" -> "tzaeschke/phtree-cpp"
"tzaeschke/phtree" -> "improbable-eng/phtree-cpp"
"tzaeschke/phtree" -> "vigna/Sux4J"
"karlhigley/spark-neighbors" -> "soundcloud/cosine-lsh-join-spark"
"karlhigley/spark-neighbors" -> "marufaytekin/lsh-spark"
"karlhigley/spark-neighbors" -> "mrsqueeze/spark-hash"
"high-performance-spark/high-performance-spark-examples" -> "holdenk/spark-validator"
"high-performance-spark/high-performance-spark-examples" -> "holdenk/spark-testing-base"
"high-performance-spark/high-performance-spark-examples" -> "holdenk/spark-structured-streaming-ml"
"high-performance-spark/high-performance-spark-examples" -> "spirom/LearningSpark"
"high-performance-spark/high-performance-spark-examples" -> "LucaCanali/sparkMeasure" ["e"=1]
"high-performance-spark/high-performance-spark-examples" -> "japila-books/apache-spark-internals"
"high-performance-spark/high-performance-spark-examples" -> "databricks/spark-corenlp"
"high-performance-spark/high-performance-spark-examples" -> "polomarcus/Spark-Structured-Streaming-Examples"
"high-performance-spark/high-performance-spark-examples" -> "mrpowers-io/spark-daria" ["e"=1]
"high-performance-spark/high-performance-spark-examples" -> "databricks/spark-perf" ["e"=1]
"high-performance-spark/high-performance-spark-examples" -> "qubole/sparklens" ["e"=1]
"high-performance-spark/high-performance-spark-examples" -> "databricks/reference-apps"
"high-performance-spark/high-performance-spark-examples" -> "spark-jobserver/spark-jobserver"
"high-performance-spark/high-performance-spark-examples" -> "databricks/spark-sql-perf" ["e"=1]
"high-performance-spark/high-performance-spark-examples" -> "holdenk/learning-spark-examples"
"marufaytekin/lsh-spark" -> "soundcloud/cosine-lsh-join-spark"
"marufaytekin/lsh-spark" -> "mrsqueeze/spark-hash"
"marufaytekin/lsh-spark" -> "karlhigley/spark-neighbors"
"marufaytekin/lsh-spark" -> "barneygovan/lsh-scala"
"deeplearning4j/libnd4j" -> "deeplearning4j/dl4j-streaming"
"reallin/Bayes" -> "ma-xu/DataMining"
"saurfang/spark-knn" -> "karlhigley/spark-neighbors"
"saurfang/spark-knn" -> "saurfang/spark-tsne"
"saurfang/spark-knn" -> "marufaytekin/lsh-spark"
"saurfang/spark-knn" -> "syoummer/SpatialSpark" ["e"=1]
"saurfang/spark-knn" -> "soundcloud/cosine-lsh-join-spark"
"saurfang/spark-knn" -> "irvingc/dbscan-on-spark"
"saurfang/spark-knn" -> "tdebatty/spark-knn-graphs"
"saurfang/spark-knn" -> "sramirez/spark-infotheoretic-feature-selection"
"saurfang/spark-knn" -> "emesday/spark-annoy"
"Saurav3218/Pyspark_Questions_SKS" -> "sankamuk/PysparkCheatsheet"
"caroljmcdonald/SparkStreamingHBaseExample" -> "mapr-demos/SparkStreamingHBaseExample"
"caroljmcdonald/SparkStreamingHBaseExample" -> "gwenshap/SparkStreamingExample"
"bwoneill/pypardis" -> "LiyangLingIntel/SparkDBSCAN"
"diffplug/matfilerw" -> "HebiRobotics/MFL"
"diffplug/matfilerw" -> "gradusnikov/jmatio"
"actionml/cluster-setup" -> "actionml/PredictionIO"
"actionml/cluster-setup" -> "actionml/ur-analysis-tools"
"apache/systemds-website" -> "apache/bahir-website"
"HyukjinKwon/spark-xml" -> "HyukjinKwon/pyspark-project-example"
"apache/bahir" -> "apache/systemds-website"
"apache/bahir" -> "apache/bahir-website"
"apache/bahir" -> "apache/bahir-flink" ["e"=1]
"apache/bahir" -> "apache/systemds"
"big-data-europe/docker-flink" -> "GezimSejdiu/flink-starter"
"big-data-europe/docker-flink" -> "big-data-europe/docker-kafka"
"big-data-europe/docker-flink" -> "big-data-europe/docker-hbase"
"big-data-europe/docker-hadoop" -> "big-data-europe/docker-hive"
"big-data-europe/docker-hadoop" -> "big-data-europe/docker-spark"
"big-data-europe/docker-hadoop" -> "big-data-europe/docker-hadoop-spark-workbench"
"big-data-europe/docker-hadoop" -> "kiwenlau/hadoop-cluster-docker"
"big-data-europe/docker-hadoop" -> "big-data-europe/docker-hbase"
"big-data-europe/docker-hadoop" -> "big-data-europe/docker-flink"
"big-data-europe/docker-hadoop" -> "HariSekhon/Dockerfiles"
"big-data-europe/docker-hadoop" -> "sequenceiq/hadoop-docker"
"big-data-europe/docker-hadoop" -> "ruoyu-chen/hadoop-docker"
"big-data-europe/docker-hadoop" -> "wurstmeister/kafka-docker" ["e"=1]
"big-data-europe/docker-hadoop" -> "Marcel-Jan/docker-hadoop-spark"
"big-data-europe/docker-hadoop" -> "steveloughran/winutils"
"big-data-europe/docker-hadoop" -> "apache/hudi" ["e"=1]
"big-data-europe/docker-hadoop" -> "azkaban/azkaban" ["e"=1]
"big-data-europe/docker-hadoop" -> "tomwhite/hadoop-book"
"xubo245/SparkLearning" -> "endymecy/spark-ml-source-analysis"
"xubo245/SparkLearning" -> "spirom/LearningSpark"
"xubo245/SparkLearning" -> "jacksu/utils4s"
"xubo245/SparkLearning" -> "lw-lin/CoolplaySpark"
"xubo245/SparkLearning" -> "xubo245/MLlibLearning"
"xubo245/SparkLearning" -> "shijinkui/spark_study" ["e"=1]
"xubo245/SparkLearning" -> "LinMingQiang/sparkstreaming" ["e"=1]
"xubo245/SparkLearning" -> "cjuexuan/mynote" ["e"=1]
"xubo245/SparkLearning" -> "apachecn/spark-doc-zh"
"xubo245/SparkLearning" -> "LeechanX/Netflix-Recommender-with-Spark" ["e"=1]
"xubo245/SparkLearning" -> "ljcan/SparkStreaming" ["e"=1]
"xubo245/SparkLearning" -> "endymecy/spark-graphx-source-analysis"
"xubo245/SparkLearning" -> "smallnest/douban-recommender" ["e"=1]
"xubo245/SparkLearning" -> "qindongliang/streaming-offset-to-zk" ["e"=1]
"xubo245/SparkLearning" -> "dibbhatt/kafka-spark-consumer"
"big-data-europe/docker-hive" -> "big-data-europe/docker-hadoop"
"big-data-europe/docker-hive" -> "big-data-europe/docker-spark"
"big-data-europe/docker-hive" -> "big-data-europe/docker-hbase"
"big-data-europe/docker-hive" -> "big-data-europe/docker-flink"
"big-data-europe/docker-hive" -> "big-data-europe/docker-hadoop-spark-workbench"
"big-data-europe/docker-hive" -> "ruoyu-chen/hadoop-docker"
"big-data-europe/docker-hive" -> "kiwenlau/hadoop-cluster-docker"
"big-data-europe/docker-hive" -> "HariSekhon/Dockerfiles"
"big-data-europe/docker-hive" -> "dropbox/PyHive" ["e"=1]
"big-data-europe/docker-hive" -> "apache/atlas" ["e"=1]
"big-data-europe/docker-hive" -> "big-data-europe/docker-kafka"
"big-data-europe/docker-hive" -> "apache/hive" ["e"=1]
"big-data-europe/docker-hive" -> "spancer/bigdata-docker-compose"
"big-data-europe/docker-hive" -> "gettyimages/docker-spark"
"big-data-europe/docker-hive" -> "big-data-europe/docker-hive-metastore-postgresql"
"big-data-europe/docker-kafka" -> "big-data-europe/docker-zeppelin"
"graphframes/graphframes" -> "opencypher/morpheus" ["e"=1]
"graphframes/graphframes" -> "neo4j/neo4j-spark-connector" ["e"=1]
"graphframes/graphframes" -> "cloudera/livy"
"graphframes/graphframes" -> "combust/mleap"
"graphframes/graphframes" -> "spark-jobserver/spark-jobserver"
"graphframes/graphframes" -> "databricks/spark-sklearn"
"graphframes/graphframes" -> "sryza/spark-timeseries"
"graphframes/graphframes" -> "Sotera/spark-distributed-louvain-modularity" ["e"=1]
"graphframes/graphframes" -> "jupyter-incubator/sparkmagic"
"graphframes/graphframes" -> "Sotera/distributed-graph-analytics" ["e"=1]
"graphframes/graphframes" -> "databricks/tensorframes"
"graphframes/graphframes" -> "databricks/spark-deep-learning"
"graphframes/graphframes" -> "TIBCOSoftware/snappydata" ["e"=1]
"graphframes/graphframes" -> "holdenk/spark-testing-base"
"graphframes/graphframes" -> "databricks/koalas"
"big-data-europe/docker-hadoop-spark-workbench" -> "big-data-europe/docker-spark"
"big-data-europe/docker-hadoop-spark-workbench" -> "big-data-europe/docker-hadoop"
"big-data-europe/docker-hadoop-spark-workbench" -> "gettyimages/docker-spark"
"big-data-europe/docker-hadoop-spark-workbench" -> "big-data-europe/docker-hive"
"big-data-europe/docker-hadoop-spark-workbench" -> "big-data-europe/docker-flink"
"big-data-europe/docker-hadoop-spark-workbench" -> "panovvv/bigdata-docker-compose"
"big-data-europe/docker-hadoop-spark-workbench" -> "kiwenlau/hadoop-cluster-docker"
"big-data-europe/docker-hadoop-spark-workbench" -> "big-data-europe/docker-hbase"
"big-data-europe/docker-hadoop-spark-workbench" -> "ruoyu-chen/hadoop-docker"
"big-data-europe/docker-hadoop-spark-workbench" -> "sequenceiq/hadoop-docker"
"big-data-europe/docker-hadoop-spark-workbench" -> "sequenceiq/docker-spark"
"big-data-europe/docker-hadoop-spark-workbench" -> "HariSekhon/Dockerfiles"
"big-data-europe/docker-hadoop-spark-workbench" -> "mvillarrealb/docker-spark-cluster"
"big-data-europe/docker-hadoop-spark-workbench" -> "big-data-europe/docker-zeppelin"
"big-data-europe/docker-hadoop-spark-workbench" -> "big-data-europe/docker-spark-notebook"
"databricks/tensorframes" -> "databricks/spark-deep-learning"
"databricks/tensorframes" -> "adatao/tensorspark"
"databricks/tensorframes" -> "yahoo/TensorFlowOnSpark"
"databricks/tensorframes" -> "databricks/spark-sklearn"
"databricks/tensorframes" -> "amplab/SparkNet"
"databricks/tensorframes" -> "databricks/spark-corenlp"
"databricks/tensorframes" -> "amplab/spark-indexedrdd"
"databricks/tensorframes" -> "apache/incubator-toree"
"databricks/tensorframes" -> "fommil/netlib-java"
"databricks/tensorframes" -> "yahoo/CaffeOnSpark"
"databricks/tensorframes" -> "databricks/spark-csv"
"databricks/tensorframes" -> "sryza/spark-timeseries"
"databricks/tensorframes" -> "cloudera/livy"
"databricks/tensorframes" -> "amplab/keystone"
"databricks/tensorframes" -> "tensorflow/ecosystem" ["e"=1]
"deanwampler/JustEnoughScalaForSpark" -> "deanwampler/spark-scala-tutorial"
"deanwampler/JustEnoughScalaForSpark" -> "deanwampler/programming-scala-book-code-examples" ["e"=1]
"deanwampler/JustEnoughScalaForSpark" -> "spirom/LearningSpark"
"deanwampler/JustEnoughScalaForSpark" -> "LucaCanali/sparkMeasure" ["e"=1]
"deanwampler/JustEnoughScalaForSpark" -> "groupon/sparklint" ["e"=1]
"deanwampler/JustEnoughScalaForSpark" -> "awesome-spark/awesome-spark" ["e"=1]
"deanwampler/JustEnoughScalaForSpark" -> "mrpowers-io/spark-daria" ["e"=1]
"deanwampler/JustEnoughScalaForSpark" -> "phatak-dev/spark2.0-examples"
"deanwampler/JustEnoughScalaForSpark" -> "spark-notebook/spark-notebook"
"deanwampler/JustEnoughScalaForSpark" -> "jaceklaskowski/spark-workshop"
"deanwampler/JustEnoughScalaForSpark" -> "databricks/spark-knowledgebase"
"deanwampler/JustEnoughScalaForSpark" -> "mrpowers-io/spark-style-guide" ["e"=1]
"deanwampler/JustEnoughScalaForSpark" -> "mrpowers-io/spark-fast-tests" ["e"=1]
"deanwampler/JustEnoughScalaForSpark" -> "killrweather/killrweather"
"deanwampler/JustEnoughScalaForSpark" -> "databricks/scala-style-guide" ["e"=1]
"TopSpoofer/hbrdd" -> "TopSpoofer/kafka-spark-streaming-to-hbase"
"HuaweiBigData/carbondata" -> "HuaweiBigData/astro"
"HuaweiBigData/carbondata" -> "apache/carbondata" ["e"=1]
"HuaweiBigData/carbondata" -> "shunfei/indexr" ["e"=1]
"HuaweiBigData/carbondata" -> "HuaweiBigData/StreamCQL"
"HuaweiBigData/carbondata" -> "QiangCai/carbondata_guide" ["e"=1]
"SingularitiesCR/spark-docker" -> "SingularitiesCR/hadoop-docker"
"endymecy/spark-graphx-source-analysis" -> "cld378632668/A-community-detect-System-based-on-GraphX" ["e"=1]
"endymecy/spark-graphx-source-analysis" -> "amplab/graphx"
"endymecy/spark-graphx-source-analysis" -> "cld378632668/Source-Notes-Chinese-translations-of-Spark-GraphX" ["e"=1]
"endymecy/spark-graphx-source-analysis" -> "endymecy/spark-config-and-tuning"
"endymecy/spark-graphx-source-analysis" -> "endymecy/spark-programming-guide-zh-cn"
"endymecy/spark-graphx-source-analysis" -> "weijie-he/jinyong"
"endymecy/spark-graphx-source-analysis" -> "shijinkui/spark_study" ["e"=1]
"endymecy/spark-graphx-source-analysis" -> "sparkling-graph/sparkling-graph" ["e"=1]
"endymecy/spark-graphx-source-analysis" -> "endymecy/spark-ml-source-analysis"
"thomasmueller/minperf" -> "vigna/Sux4J"
"jaceklaskowski/spark-workshop" -> "jaceklaskowski/kafka-notebook"
"jaceklaskowski/spark-workshop" -> "japila-books/apache-spark-internals"
"jaceklaskowski/spark-workshop" -> "japila-books/spark-structured-streaming-internals"
"jaceklaskowski/spark-workshop" -> "databricks/spark-knowledgebase"
"jaceklaskowski/spark-workshop" -> "japila-books/spark-sql-internals"
"jaceklaskowski/spark-workshop" -> "koeninger/kafka-exactly-once"
"bit-ware/HBaseXplorer" -> "zpasal/hbase-gui-admin"
"mrn-aglic/pyspark-playground" -> "mrn-aglic/spark-standalone-cluster"
"qindongliang/hbase-increment-index" -> "wjw465150/SolrCoprocessor"
"qindongliang/hbase-increment-index" -> "jibaro/hbase-solr-coprocessor"
"endymecy/spark-config-and-tuning" -> "endymecy/spark-graphx-source-analysis"
"endymecy/spark-config-and-tuning" -> "endymecy/AlgorithmsOnSpark"
"actionml/ur-analysis-tools" -> "actionml/template-scala-parallel-universal-recommendation"
"actionml/ur-analysis-tools" -> "actionml/cluster-setup"
"mraad/dbscan-spark" -> "irvingc/dbscan-on-spark"
"phatak-dev/spark2.0-examples" -> "polomarcus/Spark-Structured-Streaming-Examples"
"phatak-dev/spark2.0-examples" -> "japila-books/spark-structured-streaming-internals"
"phatak-dev/spark2.0-examples" -> "mkuthan/example-spark"
"phatak-dev/spark2.0-examples" -> "databricks/spark-knowledgebase"
"krejcmat/hadoop-hbase-docker" -> "krejcmat/hadoop-docker"
"krejcmat/hadoop-docker" -> "krejcmat/hadoop-hbase-docker"
"rockthejvm/zio-course" -> "rockthejvm/cats-effect"
"mrn-aglic/spark-standalone-cluster" -> "mrn-aglic/pyspark-playground"
"apache/bahir-website" -> "apache/systemds-website"
"TopSpoofer/kafka-spark-streaming-to-hbase" -> "DRUNK2013/spark-streaming"
"intel/ipex-llm" -> "intel/BigDL"
"intel/ipex-llm" -> "yahoo/TensorFlowOnSpark"
"intel/ipex-llm" -> "databricks/spark-deep-learning"
"intel/ipex-llm" -> "Angel-ML/angel" ["e"=1]
"intel/ipex-llm" -> "databricks/tensorframes"
"intel/ipex-llm" -> "apache/predictionio" ["e"=1]
"intel/ipex-llm" -> "microsoft/SynapseML"
"intel/ipex-llm" -> "horovod/horovod" ["e"=1]
"intel/ipex-llm" -> "intel/intel-extension-for-pytorch" ["e"=1]
"intel/ipex-llm" -> "spark-notebook/spark-notebook"
"intel/ipex-llm" -> "scalanlp/breeze" ["e"=1]
"intel/ipex-llm" -> "spark-jobserver/spark-jobserver"
"intel/ipex-llm" -> "apache/mxnet" ["e"=1]
"intel/ipex-llm" -> "maxpumperla/elephas"
"intel/ipex-llm" -> "uxlfoundation/oneDNN" ["e"=1]
"ruoyu-chen/hadoop-docker" -> "longyinzaitian/HadoopDemo" ["e"=1]
"ruoyu-chen/hadoop-docker" -> "big-data-europe/docker-hbase"
"ruoyu-chen/hadoop-docker" -> "xiaokugua250/DataMingProject" ["e"=1]
"ruoyu-chen/hadoop-docker" -> "panovvv/bigdata-docker-compose"
"ruoyu-chen/hadoop-docker" -> "big-data-europe/docker-hadoop-spark-workbench"
"ruoyu-chen/hadoop-docker" -> "kiwenlau/hadoop-cluster-docker"
"ruoyu-chen/hadoop-docker" -> "little-bit-shy/docker-hadoop"
"ruoyu-chen/hadoop-docker" -> "JoeWoo/hadoop-spark-hive-cluster-docker"
"ruoyu-chen/hadoop-docker" -> "big-data-europe/docker-hive"
"vaquarkhan/Apache-Kafka-poc-and-notes" -> "Pushkr/Apache-Spark-Hands-On"
"vaquarkhan/Apache-Kafka-poc-and-notes" -> "rohgar/scala-spark-4"
"vaquarkhan/Apache-Kafka-poc-and-notes" -> "phatak-dev/spark2.0-examples"
"vaquarkhan/Apache-Kafka-poc-and-notes" -> "spirom/spark-streaming-with-kafka"
"BenFradet/spark-kafka-writer" -> "mkuthan/example-spark-kafka"
"BenFradet/spark-kafka-writer" -> "ansrivas/spark-structured-streaming"
"BenFradet/spark-kafka-writer" -> "tresata/spark-kafka"
"BenFradet/spark-kafka-writer" -> "jerryshao/spark-kafka-0-8-sql"
"BenFradet/spark-kafka-writer" -> "polomarcus/Spark-Structured-Streaming-Examples"
"combust/mleap" -> "databricks/spark-deep-learning"
"combust/mleap" -> "jpmml/jpmml-sparkml" ["e"=1]
"combust/mleap" -> "databricks/spark-sklearn"
"combust/mleap" -> "ucbrise/clipper" ["e"=1]
"combust/mleap" -> "microsoft/SynapseML"
"combust/mleap" -> "databricks/tensorframes"
"combust/mleap" -> "openscoring/openscoring" ["e"=1]
"combust/mleap" -> "VertaAI/modeldb" ["e"=1]
"combust/mleap" -> "jpmml/jpmml-evaluator" ["e"=1]
"combust/mleap" -> "graphframes/graphframes"
"combust/mleap" -> "databricks/koalas"
"combust/mleap" -> "jupyter-incubator/sparkmagic"
"combust/mleap" -> "sryza/spark-timeseries"
"combust/mleap" -> "RedisLabs/spark-redis"
"combust/mleap" -> "yahoo/TensorFlowOnSpark"
"nightscape/spark-excel" -> "mrpowers-io/spark-daria" ["e"=1]
"nightscape/spark-excel" -> "hortonworks-spark/shc"
"nightscape/spark-excel" -> "mrpowers-io/spark-fast-tests" ["e"=1]
"nightscape/spark-excel" -> "apache/hbase-connectors"
"nightscape/spark-excel" -> "AbsaOSS/spline" ["e"=1]
"nightscape/spark-excel" -> "allwefantasy/spark-binlog" ["e"=1]
"nightscape/spark-excel" -> "G-Research/spark-extension" ["e"=1]
"nightscape/spark-excel" -> "egen/spark-sftp"
"nightscape/spark-excel" -> "ZuInnoTe/spark-hadoopoffice-ds"
"nightscape/spark-excel" -> "ZuInnoTe/hadoopoffice"
"nightscape/spark-excel" -> "spoddutur/spark-notes" ["e"=1]
"nightscape/spark-excel" -> "cjuexuan/mynote" ["e"=1]
"nightscape/spark-excel" -> "databricks/spark-xml"
"nightscape/spark-excel" -> "ClickHouse/spark-clickhouse-connector" ["e"=1]
"Hipparchus-Math/hipparchus" -> "CS-SI/Orekit" ["e"=1]
"Hipparchus-Math/hipparchus" -> "netomi/uom"
"cerndb/dist-keras" -> "maxpumperla/elephas"
"cerndb/dist-keras" -> "databricks/spark-deep-learning"
"cerndb/dist-keras" -> "adatao/tensorspark"
"cerndb/dist-keras" -> "yahoo/TensorFlowOnSpark"
"cerndb/dist-keras" -> "tmulc18/Distributed-TensorFlow-Guide" ["e"=1]
"cerndb/dist-keras" -> "kuza55/keras-extras" ["e"=1]
"cerndb/dist-keras" -> "databricks/tensorframes"
"cerndb/dist-keras" -> "rjagerman/glint" ["e"=1]
"cerndb/dist-keras" -> "codekansas/keras-language-modeling" ["e"=1]
"cerndb/dist-keras" -> "amplab/SparkNet"
"cerndb/dist-keras" -> "databricks/spark-sklearn"
"cerndb/dist-keras" -> "lensacom/sparkit-learn"
"cerndb/dist-keras" -> "keplr-io/quiver" ["e"=1]
"cerndb/dist-keras" -> "bstriner/keras-adversarial" ["e"=1]
"cerndb/dist-keras" -> "amplab/keystone"
"UrbanInstitute/pyspark-tutorials" -> "PacktPublishing/Learning-PySpark"
"UrbanInstitute/pyspark-tutorials" -> "mahmoudparsian/pyspark-tutorial"
"UrbanInstitute/pyspark-tutorials" -> "drabastomek/learningPySpark"
"UrbanInstitute/pyspark-tutorials" -> "cartershanklin/pyspark-cheatsheet"
"UrbanInstitute/pyspark-tutorials" -> "edyoda/pyspark-tutorial"
"UrbanInstitute/pyspark-tutorials" -> "areibman/pyspark_exercises"
"UrbanInstitute/pyspark-tutorials" -> "XD-DENG/Spark-practice"
"UrbanInstitute/pyspark-tutorials" -> "tirthajyoti/Spark-with-Python"
"UrbanInstitute/pyspark-tutorials" -> "spark-examples/pyspark-examples"
"UrbanInstitute/pyspark-tutorials" -> "awantik/pyspark-learning"
"UrbanInstitute/pyspark-tutorials" -> "jadianes/spark-py-notebooks"
"UrbanInstitute/pyspark-tutorials" -> "UrbanInstitute/spark-social-science"
"UrbanInstitute/pyspark-tutorials" -> "susanli2016/PySpark-and-MLlib"
"UrbanInstitute/pyspark-tutorials" -> "MingChen0919/learning-apache-spark"
"UrbanInstitute/pyspark-tutorials" -> "AlexIoannides/pyspark-example-project" ["e"=1]
"annoy4s/annoy4s" -> "emesday/spark-annoy"
"drabastomek/learningPySpark" -> "PacktPublishing/Learning-PySpark"
"drabastomek/learningPySpark" -> "mahmoudparsian/pyspark-tutorial"
"drabastomek/learningPySpark" -> "UrbanInstitute/pyspark-tutorials"
"drabastomek/learningPySpark" -> "jadianes/spark-py-notebooks"
"drabastomek/learningPySpark" -> "XD-DENG/Spark-practice"
"drabastomek/learningPySpark" -> "drabastomek/PySparkCookbook"
"drabastomek/learningPySpark" -> "lensacom/sparkit-learn"
"drabastomek/learningPySpark" -> "awantik/pyspark-learning"
"drabastomek/learningPySpark" -> "dennyglee/databricks" ["e"=1]
"drabastomek/learningPySpark" -> "tirthajyoti/Spark-with-Python"
"drabastomek/learningPySpark" -> "MingChen0919/learning-apache-spark"
"drabastomek/learningPySpark" -> "Apress/machine-learning-with-pyspark"
"drabastomek/learningPySpark" -> "edyoda/pyspark-tutorial"
"drabastomek/learningPySpark" -> "jkthompson/pyspark-pictures"
"drabastomek/learningPySpark" -> "databricks/spark-deep-learning"
"h2oai/deepwater" -> "h2oai/steam"
"h2oai/deepwater" -> "h2oai/sparkling-water"
"h2oai/deepwater" -> "h2oai/h2o-meetups"
"h2oai/deepwater" -> "h2oai/h2o4gpu"
"HariSekhon/Diagrams-as-Code" -> "HariSekhon/Knowledge-Base"
"HariSekhon/Diagrams-as-Code" -> "HariSekhon/Templates"
"StumbleUponArchive/asynchbase" -> "StumbleUponArchive/tcollector"
"Pushkr/Apache-Spark-Hands-On" -> "Venkata09/BigDataCertificationPrep"
"Pushkr/Apache-Spark-Hands-On" -> "okmich/cca175notes"
"jaceklaskowski/kafka-notebook" -> "jaceklaskowski/mastering-kafka-streams-book"
"jaceklaskowski/kafka-notebook" -> "jaceklaskowski/kafka-workshop"
"P7h/Spark-MLlib-Twitter-Sentiment-Analysis" -> "sridharswamy/Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka"
"UrbanInstitute/sparkr-tutorials" -> "UrbanInstitute/spark-social-science"
"scalanlp/chalk" -> "scalanlp/nak"
"spirom/spark-streaming-with-kafka" -> "polomarcus/Spark-Structured-Streaming-Examples"
"spirom/spark-streaming-with-kafka" -> "trK54Ylmz/kafka-spark-streaming-example"
"spirom/spark-streaming-with-kafka" -> "spirom/LearningSpark"
"spirom/spark-streaming-with-kafka" -> "ansrivas/spark-structured-streaming"
"spirom/spark-streaming-with-kafka" -> "dibbhatt/kafka-spark-consumer"
"spirom/spark-streaming-with-kafka" -> "wanghan0501/UserSessionBehaviorOfflineAnalysis" ["e"=1]
"spirom/spark-streaming-with-kafka" -> "koeninger/kafka-exactly-once"
"spirom/spark-streaming-with-kafka" -> "cpbaranwal/Spark-Streaming-DirectKafka-Examples"
"AndreiRegiani/wikipedia-crawler" -> "AndreiRegiani/falcon-mongo-template"
"emesday/spark-annoy" -> "annoy4s/annoy4s"
"holdenk/spark-structured-streaming-ml" -> "holdenk/spark-validator"
"holdenk/spark-structured-streaming-ml" -> "polomarcus/Spark-Structured-Streaming-Examples"
"adrianmilne/esper-demo-nuclear" -> "zhenghorse/CEP"
"hbase-trx/hbase-transactional-tableindexed" -> "ykulbak/ihbase"
"StumbleUponArchive/async" -> "OpenTSDB/async"
"StumbleUponArchive/tcollector" -> "StumbleUponArchive/asynchbase"
"jleetutorial/sparkTutorial" -> "jleetutorial/scala-spark-tutorial"
"fommil/matrix-toolkits-java" -> "fommil/netlib-java"
"fommil/matrix-toolkits-java" -> "jblas-project/jblas"
"fommil/matrix-toolkits-java" -> "vkostyukov/la4j"
"fommil/matrix-toolkits-java" -> "lessthanoptimal/ejml"
"fommil/matrix-toolkits-java" -> "ujmp/universal-java-matrix-package"
"fommil/matrix-toolkits-java" -> "lessthanoptimal/Java-Matrix-Benchmark"
"fommil/matrix-toolkits-java" -> "hughperkins/jeigen"
"fommil/matrix-toolkits-java" -> "optimatika/ojAlgo"
"fommil/matrix-toolkits-java" -> "bwaldvogel/liblinear-java"
"actionml/harness" -> "actionml/universal-recommender"
"sdksdk0/Elasticsearch-Hbase" -> "HY-ZhengWei/HBaseClient"
"sdksdk0/Elasticsearch-Hbase" -> "2shou/HBaseObserver"
"sdksdk0/Elasticsearch-Hbase" -> "NGDATA/hbase-indexer"
"sdksdk0/Elasticsearch-Hbase" -> "xiaokugua250/DataMingProject" ["e"=1]
"sdksdk0/Elasticsearch-Hbase" -> "SpringForAll/spring-boot-starter-hbase"
"sdksdk0/Elasticsearch-Hbase" -> "wankunde/logcount" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "databricks/spark-deep-learning"
"yahoo/TensorFlowOnSpark" -> "databricks/tensorframes"
"yahoo/TensorFlowOnSpark" -> "tensorflow/ecosystem" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "yahoo/CaffeOnSpark"
"yahoo/TensorFlowOnSpark" -> "intel/ipex-llm"
"yahoo/TensorFlowOnSpark" -> "maxpumperla/elephas"
"yahoo/TensorFlowOnSpark" -> "Angel-ML/angel" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "endymecy/spark-ml-source-analysis"
"yahoo/TensorFlowOnSpark" -> "microsoft/SynapseML"
"yahoo/TensorFlowOnSpark" -> "horovod/horovod" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "alibaba/x-deeplearning" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "databricks/spark-sklearn"
"yahoo/TensorFlowOnSpark" -> "tensorflow/serving" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "JerryLead/SparkInternals"
"yahoo/TensorFlowOnSpark" -> "lw-lin/CoolplaySpark"
"vkostyukov/la4j" -> "fommil/matrix-toolkits-java"
"vkostyukov/la4j" -> "jblas-project/jblas"
"vkostyukov/la4j" -> "lessthanoptimal/ejml"
"vkostyukov/la4j" -> "ujmp/universal-java-matrix-package"
"vkostyukov/la4j" -> "optimatika/ojAlgo"
"fommil/netlib-java" -> "fommil/matrix-toolkits-java"
"fommil/netlib-java" -> "jblas-project/jblas"
"fommil/netlib-java" -> "scalanlp/breeze" ["e"=1]
"fommil/netlib-java" -> "databricks/tensorframes"
"fommil/netlib-java" -> "typelevel/spire" ["e"=1]
"fommil/netlib-java" -> "fast-pack/JavaFastPFOR" ["e"=1]
"fommil/netlib-java" -> "vegas-viz/Vegas" ["e"=1]
"fommil/netlib-java" -> "deeplearning4j/nd4j" ["e"=1]
"fommil/netlib-java" -> "typesafehub/zinc"
"fommil/netlib-java" -> "nativelibs4java/ScalaCL" ["e"=1]
"fommil/netlib-java" -> "lessthanoptimal/Java-Matrix-Benchmark"
"fommil/netlib-java" -> "mattpap/IScala"
"fommil/netlib-java" -> "BIDData/BIDMat" ["e"=1]
"fommil/netlib-java" -> "databricks/spark-corenlp"
"fommil/netlib-java" -> "sryza/spark-timeseries"
"DarrenCook/h2o" -> "h2oai/rsparkling"
"h2oai/rsparkling" -> "trestletech/user2016-sparklyr"
"twosigma/flint" -> "sryza/spark-timeseries"
"twosigma/flint" -> "databricks/spark-sklearn"
"twosigma/flint" -> "twosigma/beakerx" ["e"=1]
"twosigma/flint" -> "man-group/arctic" ["e"=1]
"twosigma/flint" -> "combust/mleap"
"twosigma/flint" -> "typelevel/frameless" ["e"=1]
"twosigma/flint" -> "apache/incubator-toree"
"twosigma/flint" -> "databricks/spark-deep-learning"
"twosigma/flint" -> "databricks/tensorframes"
"twosigma/flint" -> "databricks/koalas"
"twosigma/flint" -> "mrpowers-io/spark-daria" ["e"=1]
"twosigma/flint" -> "filodb/FiloDB"
"twosigma/flint" -> "RJT1990/pyflux" ["e"=1]
"twosigma/flint" -> "sryza/aas"
"twosigma/flint" -> "holdenk/spark-testing-base"
"steveny2k/docker-predictionio" -> "mingfang/docker-predictionio"
"PiercingDan/spark-Jupyter-AWS" -> "nchammas/flintrock"
"adamjshook/mapreducepatterns" -> "geftimov/hadoop-map-reduce-patterns"
"ZuInnoTe/hadoopoffice" -> "ZuInnoTe/spark-hadoopoffice-ds"
"trK54Ylmz/kafka-spark-streaming-example" -> "ansrivas/spark-structured-streaming"
"trK54Ylmz/kafka-spark-streaming-example" -> "spirom/spark-streaming-with-kafka"
"ekampf/PySpark-Boilerplate" -> "svenkreiss/pysparkling"
"ekampf/PySpark-Boilerplate" -> "AlexIoannides/pyspark-example-project" ["e"=1]
"ekampf/PySpark-Boilerplate" -> "awesome-spark/spark-gotchas" ["e"=1]
"ekampf/PySpark-Boilerplate" -> "mrpowers-io/quinn" ["e"=1]
"ekampf/PySpark-Boilerplate" -> "mahmoudparsian/pyspark-tutorial"
"ekampf/PySpark-Boilerplate" -> "vaquarkhan/Apache-Kafka-poc-and-notes"
"ekampf/PySpark-Boilerplate" -> "vivek-bombatkar/Spark-with-Python---My-learning-notes-" ["e"=1]
"ekampf/PySpark-Boilerplate" -> "vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer" ["e"=1]
"ekampf/PySpark-Boilerplate" -> "kawadia/pyspark.test"
"ekampf/PySpark-Boilerplate" -> "awesome-spark/awesome-spark" ["e"=1]
"ekampf/PySpark-Boilerplate" -> "UrbanInstitute/pyspark-tutorials"
"scalanlp/nak" -> "scalanlp/chalk"
"scalanlp/nak" -> "alitouka/spark_dbscan"
"scalanlp/nak" -> "irvingc/dbscan-on-spark"
"lbehnke/hierarchical-clustering-java" -> "sape/hac"
"lbehnke/hierarchical-clustering-java" -> "yangliuy/DataMiningCluster"
"HariSekhon/Knowledge-Base" -> "HariSekhon/Templates"
"HariSekhon/Knowledge-Base" -> "HariSekhon/Diagrams-as-Code"
"HariSekhon/Knowledge-Base" -> "HariSekhon/GitHub-Actions"
"HariSekhon/Knowledge-Base" -> "HariSekhon/DevOps-Golang-tools"
"HariSekhon/Knowledge-Base" -> "HariSekhon/Terraform"
"rohgar/scala-design-2" -> "rohgar/scala-principles-1"
"rohgar/scala-design-2" -> "rohgar/scala-parallel-programming-3"
"ansrivas/spark-structured-streaming" -> "polomarcus/Spark-Structured-Streaming-Examples"
"ansrivas/spark-structured-streaming" -> "instaclustr/sample-KafkaSparkCassandra"
"sridharswamy/Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka" -> "kaantas/kafka-twitter-spark-streaming"
"sridharswamy/Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka" -> "kaantas/spark-twitter-sentiment-analysis"
"sridharswamy/Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka" -> "amir-rahnama/pyspark-twitter-stream-mining"
"sridharswamy/Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka" -> "emumba-com/live_twitter_sentiment_analysis"
"sridharswamy/Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka" -> "JasonSanchez/spark-streaming-twitter-kafka"
"sridharswamy/Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka" -> "P7h/Spark-MLlib-Twitter-Sentiment-Analysis"
"jacksoup/HbaseAPI" -> "jacksoup/solr-to-es"
"adornes/spark_python_ml_examples" -> "XD-DENG/Spark-ML-Intro"
"amplab/training" -> "amplab/training-scripts"
"rohgar/scala-parallel-programming-3" -> "rohgar/scala-design-2"
"rohgar/scala-parallel-programming-3" -> "rohgar/scala-principles-1"
"rohgar/scala-principles-1" -> "rohgar/scala-design-2"
"rohgar/scala-principles-1" -> "rohgar/scala-parallel-programming-3"
"AndreiRegiani/falcon-mongo-template" -> "renannprado/gogs-repository-viewer-plugin"
"xiaocai00/SparkPinkMST" -> "yu-iskw/hierarchical-clustering-with-spark"
"h2oai/h2o4gpu" -> "h2oai/deepwater"
"h2oai/h2o4gpu" -> "h2oai/sparkling-water"
"h2oai/h2o4gpu" -> "h2oai/h2o-tutorials"
"h2oai/h2o4gpu" -> "h2oai/h2o-meetups"
"SpringForAll/spring-boot-starter-hbase" -> "JThink/SkyEye" ["e"=1]
"SpringForAll/spring-boot-starter-hbase" -> "jacksoup/HbaseAPI"
"SpringForAll/spring-boot-starter-hbase" -> "sdksdk0/Elasticsearch-Hbase"
"SpringForAll/spring-boot-starter-hbase" -> "HY-ZhengWei/HBaseClient"
"SpringForAll/spring-boot-starter-hbase" -> "SpringForAll/springcloud-thoth" ["e"=1]
"SpringForAll/spring-boot-starter-hbase" -> "alibaba/simplehbase" ["e"=1]
"OpenTSDB/asynchbase" -> "OpenTSDB/async"
"OpenTSDB/asynchbase" -> "NGDATA/hbase-indexer"
"OpenTSDB/asynchbase" -> "OpenTSDB/tcollector"
"OpenTSDB/asynchbase" -> "StumbleUponArchive/asynchbase"
"OpenTSDB/asynchbase" -> "larsgeorge/hbase-book"
"OpenTSDB/asynchbase" -> "YahooArchive/omid" ["e"=1]
"OpenTSDB/asynchbase" -> "OpenTSDB/opentsdb" ["e"=1]
"OpenTSDB/asynchbase" -> "hbase-trx/hbase-transactional-tableindexed"
"OpenTSDB/asynchbase" -> "cloudera/kudu" ["e"=1]
"OpenTSDB/asynchbase" -> "Huawei-Hadoop/hindex"
"larsgeorge/hbase-book" -> "Huawei-Hadoop/hindex"
"larsgeorge/hbase-book" -> "apache/hbase" ["e"=1]
"larsgeorge/hbase-book" -> "tomwhite/hadoop-book"
"larsgeorge/hbase-book" -> "NGDATA/hbase-indexer"
"larsgeorge/hbase-book" -> "OpenTSDB/asynchbase"
"larsgeorge/hbase-book" -> "cloudera-labs/SparkOnHBase"
"larsgeorge/hbase-book" -> "apache/phoenix" ["e"=1]
"larsgeorge/hbase-book" -> "lw-lin/CoolplaySpark"
"larsgeorge/hbase-book" -> "databricks/learning-spark"
"larsgeorge/hbase-book" -> "Huawei-Spark/Spark-SQL-on-HBase"
"larsgeorge/hbase-book" -> "nerdammer/spark-hbase-connector"
"larsgeorge/hbase-book" -> "python-happybase/happybase" ["e"=1]
"larsgeorge/hbase-book" -> "hbase-rdd/hbase-rdd"
"larsgeorge/hbase-book" -> "linkedin/dr-elephant" ["e"=1]
"larsgeorge/hbase-book" -> "apache/oozie" ["e"=1]
"NGDATA/hbase-indexer" -> "Huawei-Hadoop/hindex"
"NGDATA/hbase-indexer" -> "hortonworks-spark/shc"
"NGDATA/hbase-indexer" -> "HuaweiBigData/astro"
"NGDATA/hbase-indexer" -> "cloudera-labs/SparkOnHBase"
"NGDATA/hbase-indexer" -> "sdksdk0/Elasticsearch-Hbase"
"NGDATA/hbase-indexer" -> "kite-sdk/kite"
"NGDATA/hbase-indexer" -> "nerdammer/spark-hbase-connector"
"NGDATA/hbase-indexer" -> "mallocator/Elasticsearch-HBase-River"
"NGDATA/hbase-indexer" -> "apache/phoenix" ["e"=1]
"NGDATA/hbase-indexer" -> "qindongliang/hbase-increment-index"
"NGDATA/hbase-indexer" -> "OpenTSDB/asynchbase"
"h2oai/awesome-h2o" -> "h2oai/driverlessai-recipes"
"h2oai/awesome-h2o" -> "h2oai/h2o-meetups"
"h2oai/awesome-h2o" -> "h2oai/tutorials"
"h2oai/awesome-h2o" -> "h2oai/h2o-tutorials"
"h2oai/awesome-h2o" -> "h2oai/sparkling-water"
"h2oai/awesome-h2o" -> "DarrenCook/h2o"
"h2oai/awesome-h2o" -> "h2oai/steam"
"h2oai/h2o-2" -> "cloudera/oryx"
"h2oai/h2o-2" -> "danielsdeleo/Decider"
"h2oai/h2o-2" -> "datumbox/datumbox-framework"
"h2oai/h2o-2" -> "apache/mahout" ["e"=1]
"h2oai/h2o-2" -> "johnmyleswhite/ML_for_Hackers" ["e"=1]
"h2oai/h2o-2" -> "nikolaypavlov/MLPNeuralNet"
"h2oai/h2o-2" -> "jubatus/jubatus"
"h2oai/h2o-2" -> "numenta/nupic-legacy" ["e"=1]
"h2oai/h2o-2" -> "h2oai/h2o-3" ["e"=1]
"h2oai/h2o-2" -> "SeldonIO/seldon-server"
"h2oai/h2o-2" -> "apache/predictionio" ["e"=1]
"h2oai/h2o-2" -> "OryxProject/oryx"
"h2oai/h2o-2" -> "shogun-toolbox/shogun" ["e"=1]
"h2oai/h2o-2" -> "mikeizbicki/HLearn" ["e"=1]
"h2oai/h2o-2" -> "VowpalWabbit/vowpal_wabbit" ["e"=1]
"PacktPublishing/Learning-PySpark" -> "UrbanInstitute/pyspark-tutorials"
"PacktPublishing/Learning-PySpark" -> "drabastomek/learningPySpark"
"PacktPublishing/Learning-PySpark" -> "awantik/pyspark-learning"
"PacktPublishing/Learning-PySpark" -> "mahmoudparsian/pyspark-tutorial"
"PacktPublishing/Learning-PySpark" -> "PacktPublishing/PySpark-Cookbook"
"PacktPublishing/Learning-PySpark" -> "susanli2016/PySpark-and-MLlib"
"PacktPublishing/Learning-PySpark" -> "edyoda/pyspark-tutorial"
"PacktPublishing/Learning-PySpark" -> "jadianes/spark-py-notebooks"
"PacktPublishing/Learning-PySpark" -> "XD-DENG/Spark-practice"
"PacktPublishing/Learning-PySpark" -> "drabastomek/PySparkCookbook"
"PacktPublishing/Learning-PySpark" -> "matteoredaelli/pyspark-examples"
"PacktPublishing/Learning-PySpark" -> "MingChen0919/learning-apache-spark"
"PacktPublishing/Learning-PySpark" -> "tirthajyoti/Spark-with-Python"
"PacktPublishing/Learning-PySpark" -> "spark-examples/pyspark-examples"
"MingChen0919/learning-apache-spark" -> "edyoda/pyspark-tutorial"
"MingChen0919/learning-apache-spark" -> "kevinschaich/pyspark-cheatsheet"
"MingChen0919/learning-apache-spark" -> "runawayhorse001/LearningApacheSpark"
"MingChen0919/learning-apache-spark" -> "UrbanInstitute/pyspark-tutorials"
"MingChen0919/learning-apache-spark" -> "awantik/pyspark-learning"
"MingChen0919/learning-apache-spark" -> "PacktPublishing/Learning-PySpark"
"MingChen0919/learning-apache-spark" -> "jkthompson/pyspark-pictures"
"MingChen0919/learning-apache-spark" -> "mahmoudparsian/pyspark-tutorial"
"MingChen0919/learning-apache-spark" -> "drabastomek/learningPySpark"
"MingChen0919/learning-apache-spark" -> "susanli2016/PySpark-and-MLlib"
"japila-books/spark-structured-streaming-internals" -> "japila-books/spark-sql-internals"
"japila-books/spark-structured-streaming-internals" -> "polomarcus/Spark-Structured-Streaming-Examples"
"japila-books/spark-structured-streaming-internals" -> "jaceklaskowski/kafka-notebook"
"japila-books/spark-structured-streaming-internals" -> "japila-books/apache-spark-internals"
"japila-books/spark-structured-streaming-internals" -> "phatak-dev/spark2.0-examples"
"japila-books/spark-structured-streaming-internals" -> "japila-books/delta-lake-internals"
"japila-books/spark-structured-streaming-internals" -> "hortonworks-spark/shc"
"japila-books/spark-structured-streaming-internals" -> "Intel-bigdata/spark-adaptive" ["e"=1]
"japila-books/spark-structured-streaming-internals" -> "jaceklaskowski/spark-workshop"
"japila-books/spark-structured-streaming-internals" -> "jaceklaskowski/mastering-kafka-streams-book"
"japila-books/spark-structured-streaming-internals" -> "holdenk/spark-structured-streaming-ml"
"japila-books/spark-structured-streaming-internals" -> "allwefantasy/spark-binlog" ["e"=1]
"japila-books/spark-structured-streaming-internals" -> "teeyog/IQL" ["e"=1]
"japila-books/spark-structured-streaming-internals" -> "jaceklaskowski/spark-streaming-notebook"
"japila-books/spark-structured-streaming-internals" -> "BenFradet/spark-kafka-writer"
"Bridgewater/scala-notebook" -> "mattpap/IScala"
"Bridgewater/scala-notebook" -> "spark-notebook/spark-notebook"
"Bridgewater/scala-notebook" -> "quantifind/wisp" ["e"=1]
"Bridgewater/scala-notebook" -> "saddle/saddle" ["e"=1]
"Bridgewater/scala-notebook" -> "almond-sh/almond" ["e"=1]
"Bridgewater/scala-notebook" -> "hohonuuli/sparknotebook"
"Bridgewater/scala-notebook" -> "sryza/spark-timeseries"
"Bridgewater/scala-notebook" -> "danielkorzekwa/bayes-scala" ["e"=1]
"manuparra/MasterDatCom_BDCC_Practice" -> "gDanix/Imb-sampling-ROS_and_RUS"
"rohgar/scala-spark-4" -> "rohgar/scala-principles-1"
"rohgar/scala-spark-4" -> "rohgar/scala-parallel-programming-3"
"rohgar/scala-spark-4" -> "rohgar/scala-design-2"
"rohgar/scala-spark-4" -> "vaquarkhan/Apache-Kafka-poc-and-notes"
"awantik/pyspark-learning" -> "edyoda/pyspark-tutorial"
"awantik/pyspark-learning" -> "PacktPublishing/Learning-PySpark"
"rdblue/s3committer" -> "hortonworks-spark/cloud-integration"
"OpenTSDB/async" -> "StumbleUponArchive/async"
"mallocator/Elasticsearch-HBase-River" -> "posix4e/Elasticsearch-HBase-River"
"apache/incubator-livy" -> "cloudera/livy"
"apache/incubator-livy" -> "jupyter-incubator/sparkmagic"
"apache/incubator-livy" -> "apache/kyuubi" ["e"=1]
"apache/incubator-livy" -> "spark-jobserver/spark-jobserver"
"apache/incubator-livy" -> "apache/celeborn" ["e"=1]
"apache/incubator-livy" -> "apache/griffin" ["e"=1]
"apache/incubator-livy" -> "apache/carbondata" ["e"=1]
"apache/incubator-livy" -> "apache/incubator-toree"
"apache/incubator-livy" -> "uber/RemoteShuffleService" ["e"=1]
"apache/incubator-livy" -> "apache/ranger" ["e"=1]
"apache/incubator-livy" -> "apache/incubator-gluten" ["e"=1]
"apache/incubator-livy" -> "linkedin/dr-elephant" ["e"=1]
"apache/incubator-livy" -> "byzer-org/byzer-lang" ["e"=1]
"apache/incubator-livy" -> "apache/uniffle" ["e"=1]
"apache/incubator-livy" -> "databricks/spark-sql-perf" ["e"=1]
"hi-primus/optimus" -> "databricks/koalas"
"hi-primus/optimus" -> "mrpowers-io/quinn" ["e"=1]
"hi-primus/optimus" -> "blaze/blaze" ["e"=1]
"hi-primus/optimus" -> "lensacom/sparkit-learn"
"hi-primus/optimus" -> "databricks/spark-deep-learning"
"hi-primus/optimus" -> "AxeldeRomblay/MLBox" ["e"=1]
"hi-primus/optimus" -> "jupyter-incubator/sparkmagic"
"hi-primus/optimus" -> "maxpumperla/elephas"
"hi-primus/optimus" -> "hi-primus/bumblebee"
"hi-primus/optimus" -> "spotify/chartify" ["e"=1]
"hi-primus/optimus" -> "pdpipe/pdpipe" ["e"=1]
"hi-primus/optimus" -> "vaexio/vaex" ["e"=1]
"hi-primus/optimus" -> "awslabs/deequ" ["e"=1]
"hi-primus/optimus" -> "awesome-spark/awesome-spark" ["e"=1]
"hi-primus/optimus" -> "h2oai/datatable" ["e"=1]
"databricks/Spark-The-Definitive-Guide" -> "databricks/learning-spark"
"databricks/Spark-The-Definitive-Guide" -> "databricks/LearningSparkV2"
"databricks/Spark-The-Definitive-Guide" -> "databricks/scala-style-guide" ["e"=1]
"databricks/Spark-The-Definitive-Guide" -> "awesome-spark/awesome-spark" ["e"=1]
"databricks/Spark-The-Definitive-Guide" -> "databricks/spark-deep-learning"
"databricks/Spark-The-Definitive-Guide" -> "JerryLead/SparkInternals"
"databricks/Spark-The-Definitive-Guide" -> "delta-io/delta" ["e"=1]
"databricks/Spark-The-Definitive-Guide" -> "sryza/aas"
"databricks/Spark-The-Definitive-Guide" -> "databricks/koalas"
"databricks/Spark-The-Definitive-Guide" -> "japila-books/apache-spark-internals"
"databricks/Spark-The-Definitive-Guide" -> "tomwhite/hadoop-book"
"databricks/Spark-The-Definitive-Guide" -> "spark-notebook/spark-notebook"
"databricks/Spark-The-Definitive-Guide" -> "holdenk/spark-testing-base"
"databricks/Spark-The-Definitive-Guide" -> "awslabs/deequ" ["e"=1]
"databricks/Spark-The-Definitive-Guide" -> "mrpowers-io/spark-daria" ["e"=1]
"apachecn/spark-doc-zh" -> "lw-lin/CoolplaySpark"
"apachecn/spark-doc-zh" -> "apachecn/flink-doc-zh" ["e"=1]
"apachecn/spark-doc-zh" -> "realguoshuai/hadoop_study" ["e"=1]
"apachecn/spark-doc-zh" -> "jacksu/utils4s"
"apachecn/spark-doc-zh" -> "byzer-org/byzer-lang" ["e"=1]
"apachecn/spark-doc-zh" -> "xubo245/SparkLearning"
"apachecn/spark-doc-zh" -> "endymecy/spark-ml-source-analysis"
"apachecn/spark-doc-zh" -> "apachecn/storm-doc-zh" ["e"=1]
"apachecn/spark-doc-zh" -> "water8394/BigData-Interview" ["e"=1]
"apachecn/spark-doc-zh" -> "fayson/cdhproject" ["e"=1]
"apachecn/spark-doc-zh" -> "apachecn/hbase-doc-zh" ["e"=1]
"apachecn/spark-doc-zh" -> "JerryLead/SparkInternals"
"apachecn/spark-doc-zh" -> "apachecn/kafka-doc-zh" ["e"=1]
"apachecn/spark-doc-zh" -> "flink-china/flink-training-course" ["e"=1]
"apachecn/spark-doc-zh" -> "teeyog/IQL" ["e"=1]
"microsoft/SynapseML" -> "yahoo/TensorFlowOnSpark"
"microsoft/SynapseML" -> "databricks/spark-deep-learning"
"microsoft/SynapseML" -> "databricks/koalas"
"microsoft/SynapseML" -> "combust/mleap"
"microsoft/SynapseML" -> "microsoft/LightGBM" ["e"=1]
"microsoft/SynapseML" -> "JohnSnowLabs/spark-nlp"
"microsoft/SynapseML" -> "delta-io/delta" ["e"=1]
"microsoft/SynapseML" -> "intel/ipex-llm"
"microsoft/SynapseML" -> "alteryx/featuretools" ["e"=1]
"microsoft/SynapseML" -> "interpretml/interpret" ["e"=1]
"microsoft/SynapseML" -> "mlflow/mlflow" ["e"=1]
"microsoft/SynapseML" -> "Angel-ML/angel" ["e"=1]
"microsoft/SynapseML" -> "Azure/MachineLearningNotebooks" ["e"=1]
"microsoft/SynapseML" -> "horovod/horovod" ["e"=1]
"microsoft/SynapseML" -> "scalanlp/breeze" ["e"=1]
"polomarcus/Spark-Structured-Streaming-Examples" -> "ansrivas/spark-structured-streaming"
"polomarcus/Spark-Structured-Streaming-Examples" -> "holdenk/spark-structured-streaming-ml"
"polomarcus/Spark-Structured-Streaming-Examples" -> "japila-books/spark-structured-streaming-internals"
"polomarcus/Spark-Structured-Streaming-Examples" -> "spirom/spark-streaming-with-kafka"
"polomarcus/Spark-Structured-Streaming-Examples" -> "AndrewKuzmin/spark-structured-streaming-examples"
"polomarcus/Spark-Structured-Streaming-Examples" -> "phatak-dev/spark2.0-examples"
"polomarcus/Spark-Structured-Streaming-Examples" -> "chermenin/spark-states"
"polomarcus/Spark-Structured-Streaming-Examples" -> "instaclustr/sample-KafkaSparkCassandra"
"polomarcus/Spark-Structured-Streaming-Examples" -> "LinMingQiang/sparkstreaming" ["e"=1]
"polomarcus/Spark-Structured-Streaming-Examples" -> "BenFradet/spark-kafka-writer"
"polomarcus/Spark-Structured-Streaming-Examples" -> "stefcorda/sparkStreamingETL"
"polomarcus/Spark-Structured-Streaming-Examples" -> "groupon/sparklint" ["e"=1]
"databricks/spark-deep-learning" -> "yahoo/TensorFlowOnSpark"
"databricks/spark-deep-learning" -> "databricks/tensorframes"
"databricks/spark-deep-learning" -> "databricks/spark-sklearn"
"databricks/spark-deep-learning" -> "maxpumperla/elephas"
"databricks/spark-deep-learning" -> "databricks/koalas"
"databricks/spark-deep-learning" -> "combust/mleap"
"databricks/spark-deep-learning" -> "cerndb/dist-keras"
"databricks/spark-deep-learning" -> "intel/ipex-llm"
"databricks/spark-deep-learning" -> "microsoft/SynapseML"
"databricks/spark-deep-learning" -> "databricks/scala-style-guide" ["e"=1]
"databricks/spark-deep-learning" -> "spark-notebook/spark-notebook"
"databricks/spark-deep-learning" -> "tensorflow/ecosystem" ["e"=1]
"databricks/spark-deep-learning" -> "sryza/spark-timeseries"
"databricks/spark-deep-learning" -> "endymecy/spark-ml-source-analysis"
"databricks/spark-deep-learning" -> "databricks/learning-spark"
"intel/BigDL" -> "intel/ipex-llm"
"intel/BigDL" -> "yahoo/TensorFlowOnSpark"
"intel/BigDL" -> "flink-extended/dl-on-flink" ["e"=1]
"intel/BigDL" -> "databricks/spark-deep-learning"
"intel/BigDL" -> "alibaba/Alink" ["e"=1]
"intel/BigDL" -> "microsoft/SynapseML"
"intel/BigDL" -> "byzer-org/byzer-lang" ["e"=1]
"intel/BigDL" -> "Angel-ML/angel" ["e"=1]
"intel/BigDL" -> "Cabletutu/analytics-zoo"
"intel/BigDL" -> "DTStack/flinkStreamSQL" ["e"=1]
"intel/BigDL" -> "databricks/koalas"
"intel/BigDL" -> "endymecy/spark-ml-source-analysis"
"intel/BigDL" -> "lw-lin/CoolplaySpark"
"intel/BigDL" -> "salesforce/TransmogrifAI" ["e"=1]
"intel/BigDL" -> "horovod/horovod" ["e"=1]
"HY-ZhengWei/HBaseClient" -> "sdksdk0/Elasticsearch-Hbase"
"HY-ZhengWei/HBaseClient" -> "apachecn/hbase-doc-zh" ["e"=1]
"big-data-europe/docker-hbase" -> "big-data-europe/docker-kafka"
"big-data-europe/docker-hbase" -> "big-data-europe/docker-flink"
"big-data-europe/docker-hbase" -> "dajobe/hbase-docker"
"big-data-europe/docker-hbase" -> "big-data-europe/docker-hadoop"
"big-data-europe/docker-hbase" -> "big-data-europe/docker-hive"
"clulab/processors" -> "clulab/reach"
"clulab/processors" -> "dlwh/epic"
"clulab/processors" -> "databricks/spark-corenlp"
"clulab/processors" -> "gangeli/CoreNLP-Scala"
"clulab/processors" -> "clulab/odin-examples"
"clulab/processors" -> "clulab/nlp-reading-group"
"clulab/processors" -> "EducationalTestingService/rstfinder" ["e"=1]
"wurstmeister/storm-kafka-0.8-plus" -> "beyondj2ee/flumeng-kafka-plugin"
"wurstmeister/storm-kafka-0.8-plus" -> "wurstmeister/storm-kafka-0.8-plus-test"
"wurstmeister/storm-kafka-0.8-plus" -> "NetherlandsForensicInstitute/kafka-spout"
"abulbasar/pyspark-examples" -> "rich-iannone/so-many-pyspark-examples"
"abulbasar/pyspark-examples" -> "Haripriya6/Sample-HIVE-Project"
"dlwh/puck" -> "dlwh/epic"
"OpenTSDB/opentsdb-elasticsearch" -> "OpenTSDB/opentsdb-rpc-kafka"
"OpenTSDB/opentsdb-rpc-kafka" -> "OpenTSDB/opentsdb-elasticsearch"
"JorenSix/TarsosLSH" -> "tdebatty/java-LSH"
"holdenk/chef-cookbook-spark" -> "holdenk/fastdataprocessingwithspark-sharkexamples"
"gDanix/Imb-sampling-ROS_and_RUS" -> "manuparra/MasterDatCom_BDCC_Practice"
"uber/petastorm" ["l"="-2.71,17.193"]
"horovod/horovod" ["l"="45.559,25.861"]
"databricks/koalas" ["l"="-2.598,17.109"]
"databricks/spark-deep-learning" ["l"="-2.625,17.097"]
"polyaxon/polyaxon" ["l"="45.403,25.847"]
"webdataset/webdataset" ["l"="49.092,30.307"]
"yahoo/TensorFlowOnSpark" ["l"="-2.571,17.128"]
"linkedin/spark-tfrecord" ["l"="58.056,23.337"]
"tensorflow/ecosystem" ["l"="58.014,23.44"]
"mosaicml/streaming" ["l"="38.713,-0.353"]
"SeldonIO/seldon-core" ["l"="45.311,25.819"]
"uber/fiber" ["l"="-2.8,17.242"]
"pytorch/torcharrow" ["l"="21.555,14.161"]
"combust/mleap" ["l"="-2.597,17.142"]
"facebookresearch/fairscale" ["l"="38.777,-0.604"]
"microsoft/SynapseML" ["l"="-2.539,17.163"]
"Stratio/stratio-cassandra" ["l"="-2.15,17.112"]
"Stratio/stratio-connector-elasticsearch" ["l"="-2.177,17.094"]
"Stratio/stratio-connector-commons" ["l"="-2.19,17.094"]
"Stratio/stratio-connector-mongodb" ["l"="-2.173,17.106"]
"Stratio/cassandra" ["l"="-2.16,17.151"]
"Stratio/ccm" ["l"="-2.172,17.143"]
"Stratio/stratio-connector-cassandra" ["l"="-2.196,17.127"]
"Stratio/stratio-connector-deep" ["l"="-2.184,17.132"]
"Stratio/stratio-cassandra-benchmark" ["l"="-2.125,17.146"]
"Stratio/stratio-connector-decision" ["l"="-2.163,17.098"]
"Stratio/aerospike-client-java" ["l"="-2.16,17.139"]
"Stratio/data-generator" ["l"="-2.146,17.147"]
"Stratio/java-driver" ["l"="-2.135,17.105"]
"Stratio/wikipedia-parser" ["l"="-2.121,17.127"]
"Stratio/queries-spark-benchmark" ["l"="-2.133,17.119"]
"Stratio/stratio-connector-hdfs" ["l"="-2.174,17.082"]
"Stratio/crossdata" ["l"="-2.169,17.123"]
"Stratio/deep-spark" ["l"="-2.145,17.132"]
"Stratio/s3-bucket-list" ["l"="-2.097,17.161"]
"actionml/universal-recommender" ["l"="-2.561,17.429"]
"actionml/harness" ["l"="-2.57,17.462"]
"apache/predictionio-template-recommender" ["l"="-2.564,17.514"]
"PredictionIO/template-scala-parallel-universal-recommendation" ["l"="-2.56,17.495"]
"OryxProject/oryx" ["l"="-2.55,17.203"]
"tdunning/MiA" ["l"="-2.845,14.443"]
"actionml/ur-analysis-tools" ["l"="-2.537,17.46"]
"apache/predictionio-template-ecom-recommender" ["l"="-2.58,17.51"]
"apache/predictionio" ["l"="47.761,28.905"]
"codelibs/elasticsearch-taste" ["l"="-2.625,17.562"]
"steveny2k/docker-predictionio" ["l"="-2.6,17.461"]
"grahamjenson/list_of_recommender_systems" ["l"="59.479,23.799"]
"mingfang/docker-predictionio" ["l"="-2.612,17.481"]
"chensoul/grab" ["l"="-1.71,16.734"]
"actionml/cluster-setup" ["l"="-2.543,17.475"]
"SeldonIO/seldon-server" ["l"="-2.445,17.337"]
"lessthanoptimal/ejml" ["l"="-2.278,17.346"]
"optimatika/ojAlgo" ["l"="-2.285,17.381"]
"ujmp/universal-java-matrix-package" ["l"="-2.258,17.354"]
"fommil/matrix-toolkits-java" ["l"="-2.312,17.341"]
"jblas-project/jblas" ["l"="-2.329,17.353"]
"vkostyukov/la4j" ["l"="-2.296,17.361"]
"apache/commons-math" ["l"="-2.804,12.422"]
"Hipparchus-Math/hipparchus" ["l"="-2.243,17.374"]
"HebiRobotics/MFL" ["l"="-2.194,17.337"]
"lessthanoptimal/Java-Matrix-Benchmark" ["l"="-2.343,17.311"]
"fommil/netlib-java" ["l"="-2.444,17.266"]
"hughperkins/jeigen" ["l"="-2.294,17.322"]
"lessthanoptimal/ddogleg" ["l"="-2.243,17.322"]
"lessthanoptimal/BoofCV" ["l"="-2.204,17.399"]
"FXyz/FXyz" ["l"="0.158,10.155"]
"opencollab/jlatexmath" ["l"="58.958,-15.594"]
"JohnSnowLabs/spark-nlp" ["l"="-2.489,17.188"]
"JohnSnowLabs/spark-nlp-workshop" ["l"="52.538,25.607"]
"flairNLP/flair" ["l"="52.897,25.764"]
"allenai/allennlp" ["l"="53.002,25.738"]
"stanfordnlp/stanza" ["l"="52.949,25.808"]
"makcedward/nlpaug" ["l"="52.729,25.717"]
"UKPLab/sentence-transformers" ["l"="52.909,25.852"]
"PAIR-code/lit" ["l"="52.732,25.676"]
"microsoft/nlp-recipes" ["l"="52.848,25.725"]
"ddangelov/Top2Vec" ["l"="52.649,25.709"]
"JohnSnowLabs/nlu" ["l"="52.491,25.64"]
"rockthejvm/scala-2-beginners" ["l"="-3.099,16.793"]
"rockthejvm/scala-2-advanced" ["l"="-3.102,16.774"]
"rockthejvm/spark-essentials" ["l"="-3.07,16.788"]
"rockthejvm/akka-classic-essentials" ["l"="-3.123,16.781"]
"rockthejvm/scala-at-light-speed" ["l"="-3.058,16.816"]
"rockthejvm/scala-problems-interviews" ["l"="-3.12,16.804"]
"rockthejvm/akka-http" ["l"="-3.133,16.771"]
"rockthejvm/spark-optimization" ["l"="-3.049,16.784"]
"rockthejvm/udemy-akka-remoting-clustering" ["l"="-3.119,16.77"]
"rockthejvm/akka-streams" ["l"="-3.128,16.762"]
"tirthajyoti/Interactive_Machine_Learning" ["l"="-2.957,16.577"]
"tirthajyoti/TensorFlow_Basics" ["l"="-2.941,16.595"]
"sequenceiq/hadoop-docker" ["l"="-2.81,17.009"]
"sequenceiq/docker-spark" ["l"="-2.757,17.041"]
"kiwenlau/hadoop-cluster-docker" ["l"="-2.848,17.009"]
"big-data-europe/docker-hadoop-spark-workbench" ["l"="-2.882,17.043"]
"big-data-europe/docker-hadoop" ["l"="-2.879,17.013"]
"sequenceiq/docker-ambari" ["l"="-3.165,15.078"]
"gettyimages/docker-spark" ["l"="-2.817,17.047"]
"big-data-europe/docker-spark" ["l"="-2.862,17.062"]
"analytically/hadoop-ansible" ["l"="-3.256,15.149"]
"tomwhite/hadoop-book" ["l"="-2.692,16.951"]
"databricks/reference-apps" ["l"="-2.611,16.984"]
"alvinhenrick/hadoop-mutinode" ["l"="-2.834,16.98"]
"big-data-europe/docker-hive" ["l"="-2.909,17.029"]
"bigdatafoundation/docker-hadoop" ["l"="-2.845,16.96"]
"HariSekhon/Dockerfiles" ["l"="-2.961,17.014"]
"databricks/spark-avro" ["l"="-2.564,16.976"]
"delta-io/delta" ["l"="-2.713,14.82"]
"vaexio/vaex" ["l"="45.322,26.021"]
"mlflow/mlflow" ["l"="45.387,25.899"]
"modin-project/modin" ["l"="45.322,26.054"]
"awslabs/deequ" ["l"="-2.525,14.763"]
"nteract/papermill" ["l"="43.499,23.891"]
"dask/dask" ["l"="43.655,23.686"]
"Netflix/metaflow" ["l"="45.284,25.859"]
"databricks/scala-style-guide" ["l"="-2.761,18.521"]
"amundsen-io/amundsen" ["l"="-2.461,14.757"]
"feast-dev/feast" ["l"="45.299,25.787"]
"jupyter-incubator/sparkmagic" ["l"="-2.639,17.119"]
"alteryx/featuretools" ["l"="45.454,26.16"]
"dlwh/epic" ["l"="-2.569,17.324"]
"dlwh/puck" ["l"="-2.578,17.368"]
"factorie/factorie" ["l"="-2.877,18.643"]
"scalanlp/chalk" ["l"="-2.53,17.396"]
"clulab/processors" ["l"="-2.543,17.318"]
"scalanlp/breeze" ["l"="-2.772,18.611"]
"databricks/spark-corenlp" ["l"="-2.591,17.205"]
"saddle/saddle" ["l"="-2.904,18.643"]
"deanwampler/spark-scala-tutorial" ["l"="-2.669,16.983"]
"deanwampler/JustEnoughScalaForSpark" ["l"="-2.644,16.949"]
"deanwampler/programming-scala-book-code-examples" ["l"="-2.689,18.635"]
"spark-notebook/spark-notebook" ["l"="-2.647,17.062"]
"jadianes/spark-py-notebooks" ["l"="-2.77,16.885"]
"spirom/LearningSpark" ["l"="-2.574,16.949"]
"killrweather/killrweather" ["l"="-2.573,17.047"]
"databricks/spark-training" ["l"="-2.665,16.959"]
"japila-books/apache-spark-internals" ["l"="-2.639,16.926"]
"databricks/learning-spark" ["l"="-2.635,17.005"]
"awesome-spark/awesome-spark" ["l"="26.008,-26.379"]
"sryza/spark-timeseries" ["l"="-2.622,17.129"]
"alexandru/scala-best-practices" ["l"="-2.74,18.595"]
"Huawei-Hadoop/hindex" ["l"="-2.44,16.845"]
"NGDATA/hbase-indexer" ["l"="-2.459,16.842"]
"hbase-trx/hbase-transactional-tableindexed" ["l"="-2.401,16.805"]
"apache/phoenix" ["l"="-2.659,14.707"]
"larsgeorge/hbase-book" ["l"="-2.519,16.884"]
"HuaweiBigData/astro" ["l"="-2.411,16.904"]
"nerdammer/spark-hbase-connector" ["l"="-2.478,16.894"]
"Huawei-Spark/Spark-SQL-on-HBase" ["l"="-2.509,16.925"]
"caroljmcdonald/SparkStreamingHBaseExample" ["l"="-2.458,16.877"]
"OpenTSDB/asynchbase" ["l"="-2.423,16.814"]
"sdksdk0/Elasticsearch-Hbase" ["l"="-2.401,16.751"]
"flink-china/flink-forward-china-2018" ["l"="-2.568,15.129"]
"apache/hbase" ["l"="-2.784,14.681"]
"forcedotcom/phoenix" ["l"="-2.381,16.815"]
"pandastrike/bayzee" ["l"="-2.656,17.619"]
"sdhu/elasticsearch-prediction" ["l"="-2.624,17.6"]
"hadashiA/elasticsearch-flavor" ["l"="-2.645,17.584"]
"Observe-secretly/HbaseGUI" ["l"="-2.41,16.661"]
"bit-ware/HBaseXplorer" ["l"="-2.384,16.603"]
"HY-ZhengWei/HBaseClient" ["l"="-2.393,16.701"]
"apache/hbase-operator-tools" ["l"="-2.466,16.754"]
"apachecn/hbase-doc-zh" ["l"="-2.512,15.258"]
"Qihoo360/XSQL" ["l"="-2.444,15.016"]
"lessthanoptimal/BoofAndroidDemo" ["l"="-2.153,17.392"]
"lessthanoptimal/PyBoof" ["l"="-2.17,17.416"]
"openimaj/openimaj" ["l"="-2.109,17.412"]
"bytedeco/javacv" ["l"="-3.108,12.387"]
"alicevision/AliceVision" ["l"="60.423,9.583"]
"nguyenq/tess4j" ["l"="-3.157,12.359"]
"jeffheaton/encog-java-core" ["l"="-2.264,17.473"]
"vlfeat/vlfeat" ["l"="60.365,9.513"]
"DiegoCatalano/Catalano-Framework" ["l"="-2.143,17.437"]
"openMVG/openMVG" ["l"="60.408,9.548"]
"sweeneychris/TheiaSfM" ["l"="60.474,9.517"]
"marknabil/SFM-Visual-SLAM" ["l"="59.494,11.091"]
"visionworkbench/visionworkbench" ["l"="60.313,9.847"]
"Flowerowl/Big_Data_Resources" ["l"="-2.438,17.025"]
"linyiqun/DataMiningAlgorithm" ["l"="-2.39,17.041"]
"jobbole/awesome-machine-learning-cn" ["l"="-8.602,-34.727"]
"memect/hao" ["l"="53.227,27.434"]
"endymecy/spark-ml-source-analysis" ["l"="-2.526,17.028"]
"ty4z2008/Qix" ["l"="50.515,28.062"]
"egrcc/guidetodatamining" ["l"="-8.66,-34.537"]
"jacksu/utils4s" ["l"="-2.519,16.978"]
"lw-lin/CoolplaySpark" ["l"="-2.542,16.994"]
"lenskit/lenskit" ["l"="59.514,23.844"]
"gnemoug/distribute_crawler" ["l"="48.562,23.433"]
"ocelma/python-recsys" ["l"="59.511,23.809"]
"guoguibing/librec" ["l"="59.415,23.774"]
"FudanNLP/fnlp" ["l"="53.24,27.377"]
"lzjqsdd/scikit-learn-doc-cn" ["l"="50.392,28.028"]
"Syndrome777/DeepLearningTutorial" ["l"="50.26,28.088"]
"kevinschaich/pyspark-cheatsheet" ["l"="-2.848,16.82"]
"cartershanklin/pyspark-cheatsheet" ["l"="-2.873,16.827"]
"MingChen0919/learning-apache-spark" ["l"="-2.824,16.804"]
"spark-examples/pyspark-examples" ["l"="-2.851,16.851"]
"mahmoudparsian/pyspark-tutorial" ["l"="-2.817,16.85"]
"edyoda/pyspark-tutorial" ["l"="-2.821,16.79"]
"tirthajyoti/Spark-with-Python" ["l"="-2.842,16.803"]
"AlexIoannides/pyspark-example-project" ["l"="0.353,16.37"]
"XD-DENG/Spark-practice" ["l"="-2.794,16.805"]
"palantir/pyspark-style-guide" ["l"="-1.697,17.56"]
"mahmoudparsian/data-algorithms-with-spark" ["l"="-2.844,16.879"]
"andfanilo/pyspark-tutorial" ["l"="-2.902,16.771"]
"UrbanInstitute/pyspark-tutorials" ["l"="-2.819,16.819"]
"josephmachado/data_engineering_best_practices" ["l"="0.269,16.477"]
"josephmachado/beginner_de_project" ["l"="0.348,16.482"]
"japila-books/spark-sql-internals" ["l"="-2.642,16.841"]
"japila-books/spark-structured-streaming-internals" ["l"="-2.598,16.872"]
"japila-books/delta-lake-internals" ["l"="-2.622,16.845"]
"jaceklaskowski/kafka-notebook" ["l"="-2.617,16.808"]
"jaceklaskowski/mastering-kafka-streams-book" ["l"="-2.604,16.818"]
"apache/incubator-gluten" ["l"="-2.532,14.908"]
"LucaCanali/sparkMeasure" ["l"="-2.432,14.794"]
"jaceklaskowski/spark-workshop" ["l"="-2.625,16.889"]
"apache/celeborn" ["l"="-2.551,14.937"]
"jaceklaskowski/spark-kubernetes-book" ["l"="-2.635,16.79"]
"databricks/spark-sql-perf" ["l"="-2.499,14.863"]
"Pushkr/Apache-Spark-Hands-On" ["l"="-2.703,16.727"]
"Intel-bigdata/spark-adaptive" ["l"="-2.465,14.914"]
"apache/kyuubi" ["l"="-2.559,14.916"]
"amplab/graphx" ["l"="-2.35,17.01"]
"endymecy/spark-graphx-source-analysis" ["l"="-2.404,16.997"]
"jelmerk/hnswlib" ["l"="-2.407,17.9"]
"stepstone-tech/hnswlib-jna" ["l"="-2.397,17.927"]
"annoy4s/annoy4s" ["l"="-2.427,17.851"]
"spotify/annoy-java" ["l"="-2.428,17.885"]
"ZJULearning/nsg" ["l"="-1.084,3.971"]
"opensearch-project/k-NN" ["l"="-2.576,8.709"]
"achinnasamy/bigdata" ["l"="-2.666,16.83"]
"Larry3z/HadoopRelatedBooks" ["l"="-2.681,16.755"]
"databricks/Spark-The-Definitive-Guide" ["l"="-2.709,16.983"]
"achinnasamy/Free-Deep-Learning-Books" ["l"="29.128,-21.758"]
"vaquarkhan/Apache-Kafka-poc-and-notes" ["l"="-2.654,16.766"]
"phatak-dev/spark2.0-examples" ["l"="-2.621,16.868"]
"polomarcus/Spark-Structured-Streaming-Examples" ["l"="-2.571,16.862"]
"deeplearning4j/nd4j" ["l"="-5.295,10.622"]
"jeffheaton/encog-java-examples" ["l"="-2.231,17.465"]
"jeffheaton/encog-java-workbench" ["l"="-2.218,17.476"]
"jeffheaton/encog-dotnet-core" ["l"="-35.106,-2.981"]
"jeffheaton/encog-c" ["l"="-2.235,17.496"]
"neuroph/neuroph" ["l"="-2.233,17.529"]
"EdwardRaff/JSAT" ["l"="-2.298,17.473"]
"datumbox/datumbox-framework" ["l"="-2.372,17.403"]
"jeffheaton/encog-sample-java" ["l"="-2.238,17.48"]
"ivan-vasilev/neuralnetworks" ["l"="-2.267,17.522"]
"nikolaypavlov/MLPNeuralNet" ["l"="-2.391,17.361"]
"danielsdeleo/Decider" ["l"="-2.42,17.389"]
"h2oai/h2o-2" ["l"="-2.423,17.36"]
"jubatus/jubatus" ["l"="-2.403,17.381"]
"cloudera/oryx" ["l"="-2.42,17.33"]
"mikeizbicki/HLearn" ["l"="-20.806,-20.113"]
"ryanb/ruby-warrior" ["l"="4.392,-37.204"]
"stsievert/swix" ["l"="46.555,-24.047"]
"johnmyleswhite/ML_for_Hackers" ["l"="48.1,28.513"]
"numenta/nupic-legacy" ["l"="44.862,27.874"]
"TaimurAyaz/TAOverlay" ["l"="47.038,-23.085"]
"databricks/LearningSparkV2" ["l"="-2.744,16.945"]
"databricks/devrel" ["l"="-1.554,17.597"]
"databricks-academy/data-engineering-with-databricks-english" ["l"="-1.536,17.631"]
"MrPowers/chispa" ["l"="-1.711,17.596"]
"damklis/DataEngineeringProject" ["l"="0.37,16.458"]
"BasPH/data-pipelines-with-apache-airflow" ["l"="0.393,15.982"]
"databricks/delta-live-tables-notebooks" ["l"="-1.585,17.614"]
"derar-alhussein/Databricks-Certified-Data-Engineer-Associate" ["l"="-1.504,17.697"]
"apache/hbase-connectors" ["l"="-2.491,16.881"]
"hortonworks-spark/shc" ["l"="-2.529,16.936"]
"cloudera-labs/SparkOnHBase" ["l"="-2.503,16.903"]
"apache/phoenix-connectors" ["l"="-2.483,16.828"]
"analysys/presto-hbase-connector" ["l"="-2.279,14.831"]
"allwefantasy/spark-binlog" ["l"="-2.364,15.068"]
"apache/mahout" ["l"="-2.79,14.586"]
"myrrix/myrrix-recommender" ["l"="59.507,23.905"]
"cloudera/spark-dataflow" ["l"="44.537,16.532"]
"myui/hivemall" ["l"="-2.452,14.579"]
"thunder-project/thunder" ["l"="-2.733,17.144"]
"bolt-project/bolt" ["l"="-2.744,17.109"]
"lightning-viz/lightning" ["l"="43.659,23.96"]
"lensacom/sparkit-learn" ["l"="-2.726,17.041"]
"sparklingpandas/sparklingpandas" ["l"="-2.767,17.087"]
"flatironinstitute/CaImAn" ["l"="60.547,34.144"]
"amplab/keystone" ["l"="-2.658,17.203"]
"codeneuro/neurofinder" ["l"="60.42,34.04"]
"binder-project/binder" ["l"="43.564,23.998"]
"nipy/nitime" ["l"="62.198,34.443"]
"dirkneumann/deepdist" ["l"="-2.69,17.23"]
"amplab/succinct" ["l"="-2.71,17.259"]
"flatironinstitute/CaImAn-MATLAB" ["l"="60.506,34.125"]
"tirthajyoti/Optimization-Python" ["l"="-2.961,16.623"]
"tirthajyoti/Deep-learning-with-Python" ["l"="-2.926,16.628"]
"runawayhorse001/LearningApacheSpark" ["l"="-2.87,16.746"]
"runawayhorse001/CheatSheet" ["l"="-2.895,16.712"]
"runawayhorse001/PythonTipsDS" ["l"="-2.91,16.702"]
"jkthompson/pyspark-pictures" ["l"="-2.836,16.782"]
"runawayhorse001/SphinxGithub" ["l"="-2.931,16.689"]
"runawayhorse001/PyAudit" ["l"="-2.922,16.678"]
"ZEPL/zeppelin" ["l"="-2.581,17.227"]
"apache/zeppelin" ["l"="-2.787,14.742"]
"ibm-et/spark-kernel" ["l"="-2.692,17.17"]
"ZEPL/z-manager" ["l"="-2.56,17.281"]
"quantifind/wisp" ["l"="-2.791,18.769"]
"naver/yobi" ["l"="-3.685,-21.635"]
"apache/tajo" ["l"="-2.525,17.268"]
"gearpump/gearpump" ["l"="-2.5,18.736"]
"mattpap/IScala" ["l"="-2.666,17.185"]
"Bridgewater/scala-notebook" ["l"="-2.693,17.131"]
"almond-sh/almond" ["l"="-2.79,18.698"]
"hohonuuli/sparknotebook" ["l"="-2.709,17.15"]
"tribbloid/ISpark" ["l"="-2.692,17.109"]
"ericxiao251/spark-syntax" ["l"="-2.808,16.757"]
"ekampf/PySpark-Boilerplate" ["l"="-2.768,16.739"]
"awesome-spark/spark-gotchas" ["l"="-2.435,14.696"]
"gtoonstra/etl-with-airflow" ["l"="0.375,16.002"]
"susanli2016/Deep-Learning-with-deeplearning.ai" ["l"="-2.756,16.773"]
"susanli2016/Machine-Learning-with-AndrewNg" ["l"="-2.741,16.746"]
"hardikvasa/http-connection-lifecycle" ["l"="-3.035,16.346"]
"hardikvasa/database-journal" ["l"="-3.028,16.379"]
"jlmd/SimpleNeuralNetwork" ["l"="-2.243,17.581"]
"amten/NeuralNetwork" ["l"="-2.262,17.564"]
"yusugomori/DeepLearning" ["l"="47.9,28.966"]
"haifengl/smile" ["l"="-2.802,18.447"]
"amaas/stanford_dl_ex" ["l"="47.921,28.818"]
"nitishsrivastava/deepnet" ["l"="47.998,28.919"]
"deeplearning4j/Canova" ["l"="-2.203,17.599"]
"hughperkins/DeepCL" ["l"="64.334,-2.04"]
"rasmusbergpalm/DeepLearnToolbox" ["l"="47.92,29.074"]
"deeplearning4j/deeplearning4j" ["l"="48.06,29.126"]
"JahstreetOrg/spark-on-kubernetes-helm" ["l"="-2.822,17.147"]
"JahstreetOrg/spark-on-kubernetes-docker" ["l"="-2.853,17.167"]
"jahstreet/incubator-livy" ["l"="-2.839,17.171"]
"tirthajyoti/PyTorch_Machine_Learning" ["l"="-2.917,16.583"]
"tirthajyoti/Machine-Learning-with-Python" ["l"="47.9,28.329"]
"tirthajyoti/Stats-Maths-with-Python" ["l"="48.032,28.286"]
"tirthajyoti/Algorithm_Maths_Python" ["l"="-2.937,16.58"]
"tirthajyoti/ML-apps-with-Streamlit" ["l"="-2.965,16.603"]
"tirthajyoti/Algorithm-Data-Structures-Python" ["l"="-2.926,16.599"]
"tirthajyoti/Web-Database-Analytics" ["l"="-2.96,16.549"]
"tirthajyoti/Scikit-image-processing" ["l"="-2.903,16.606"]
"rockthejvm/spark-performance-tuning" ["l"="-3.068,16.77"]
"rockthejvm/udemy-spark-streaming" ["l"="-3.079,16.767"]
"rockthejvm/udemy-akka-persistence-starter" ["l"="-3.138,16.78"]
"rockthejvm/udemy-akka-serialization" ["l"="-3.12,16.755"]
"stanford-futuredata/sparser" ["l"="-2.692,17.431"]
"stanford-futuredata/macrobase" ["l"="-2.688,17.376"]
"dajobe/hbase-docker" ["l"="-2.997,17.037"]
"big-data-europe/docker-hbase" ["l"="-2.936,17.035"]
"python-happybase/happybase" ["l"="-2.605,14.473"]
"krejcmat/hadoop-hbase-docker" ["l"="-3.073,17.066"]
"Apress/machine-learning-with-pyspark" ["l"="-2.866,16.777"]
"edyoda/machine-learning-using-pyspark" ["l"="-2.896,16.747"]
"holdenk/fastdataprocessingwithsparkexamples" ["l"="-2.553,16.767"]
"holdenk/chef-cookbook-spark" ["l"="-2.54,16.732"]
"holdenk/fastdataprocessingwithspark-sharkexamples" ["l"="-2.539,16.746"]
"hardikvasa/webb" ["l"="-3.018,16.425"]
"h2oai/driverlessai-recipes" ["l"="-2.791,17.399"]
"h2oai/tutorials" ["l"="-2.767,17.385"]
"h2oai/awesome-h2o" ["l"="-2.768,17.355"]
"OpenTSDB/tcollector" ["l"="-2.359,16.759"]
"OpenTSDB/opentsdb" ["l"="-2.73,14.598"]
"OpenTSDB/opentsdb-elasticsearch" ["l"="-2.309,16.723"]
"awantik/pyspark-learning" ["l"="-2.805,16.793"]
"jleetutorial/python-spark-tutorial" ["l"="-3.165,16.611"]
"jleetutorial/python-spark-streaming" ["l"="-3.141,16.645"]
"jleetutorial/sparkTutorial" ["l"="-3.172,16.575"]
"jleetutorial/scala-spark-tutorial" ["l"="-3.192,16.588"]
"AndrewKuzmin/spark-structured-streaming-examples" ["l"="-2.56,16.811"]
"stefcorda/sparkStreamingETL" ["l"="-2.56,16.826"]
"CCweixiao/HydraQL-Manager" ["l"="-2.461,16.674"]
"DarkPhoenixs/hbase-meta-repair" ["l"="-2.469,16.713"]
"holdenk/learning-spark-examples" ["l"="-2.583,16.851"]
"holdenk/elasticsearchspark" ["l"="-2.566,16.728"]
"high-performance-spark/high-performance-spark-examples" ["l"="-2.603,16.965"]
"kite-sdk/kite" ["l"="-2.432,16.78"]
"kite-sdk/kite-examples" ["l"="-2.42,16.731"]
"HariSekhon/HAProxy-configs" ["l"="-3.089,17.017"]
"HariSekhon/Terraform" ["l"="-3.055,16.988"]
"HariSekhon/awesome-command-line-apps" ["l"="-3.104,17.009"]
"HariSekhon/cheatsheets" ["l"="-3.077,17.005"]
"susanli2016/PySpark-and-MLlib" ["l"="-2.788,16.823"]
"PacktPublishing/Learning-PySpark" ["l"="-2.805,16.83"]
"srivatsan88/Mastering-Apache-Spark" ["l"="47.67,27.871"]
"tburmeister/pyneural" ["l"="44.828,27.544"]
"diffplug/matfilerw" ["l"="-2.159,17.334"]
"tzaeschke/tinspin-indexes" ["l"="-2.93,17.5"]
"tzaeschke/phtree" ["l"="-2.903,17.48"]
"tzaeschke/TinSpin" ["l"="-2.916,17.511"]
"mvillarrealb/docker-spark-cluster" ["l"="-2.907,17.098"]
"cluster-apps-on-docker/spark-standalone-cluster-on-docker" ["l"="-2.954,17.119"]
"sdesilva26/docker-spark" ["l"="-2.973,17.135"]
"cordon-thiago/airflow-spark" ["l"="0.438,15.993"]
"bitnami/bitnami-docker-spark" ["l"="-2.92,17.119"]
"panovvv/bigdata-docker-compose" ["l"="-2.975,17.094"]
"EthicalML/kafka-spark-streaming-zeppelin-docker" ["l"="-2.936,17.144"]
"Marcel-Jan/docker-hadoop-spark" ["l"="-2.964,17.078"]
"datamechanics/examples" ["l"="-2.909,17.142"]
"xnuinside/airflow_in_docker_compose" ["l"="-2.946,17.177"]
"mrn-aglic/pyspark-playground" ["l"="-2.956,17.152"]
"uber/neuropod" ["l"="-2.831,17.266"]
"microsoft/hummingbird" ["l"="45.328,26.09"]
"pytorch/elastic" ["l"="8.256,-9.478"]
"tuplex/tuplex" ["l"="5.771,-19.64"]
"KartikChugh/Otto" ["l"="-13.38,-5.945"]
"tensorflow/runtime" ["l"="45.651,25.641"]
"tensorflow/custom-op" ["l"="45.668,25.628"]
"sphereio/docker-predictionio" ["l"="-2.637,17.511"]
"san089/Cloudera_Material" ["l"="-2.706,16.642"]
"okmich/cca175notes" ["l"="-2.705,16.675"]
"h2oai/driverlessai-tutorials" ["l"="-2.783,17.427"]
"alitouka/spark_dbscan" ["l"="-2.452,17.569"]
"irvingc/dbscan-on-spark" ["l"="-2.485,17.543"]
"scalanlp/nak" ["l"="-2.488,17.503"]
"mraad/dbscan-spark" ["l"="-2.478,17.566"]
"bwoneill/pypardis" ["l"="-2.481,17.587"]
"yu-iskw/hierarchical-clustering-with-spark" ["l"="-2.438,17.615"]
"saurfang/spark-tsne" ["l"="-2.474,17.642"]
"syoummer/SpatialSpark" ["l"="39.55,23.749"]
"crim-ca/patchwork" ["l"="-2.44,17.595"]
"chuanenlin/shutterscrape" ["l"="-2.987,16.36"]
"Diastro/Zeek" ["l"="-2.999,16.396"]
"chocoteam/choco-solver" ["l"="51.114,25.94"]
"finmath/finmath-lib" ["l"="-9.776,10.749"]
"umontreal-simul/ssj" ["l"="-2.251,17.411"]
"Kotlin/kotlin-numpy" ["l"="54.83,-13.819"]
"kyonifer/koma" ["l"="54.884,-13.798"]
"rockthejvm/akka-persistence" ["l"="-3.148,16.766"]
"abulbasar/pyspark-examples" ["l"="-2.831,16.738"]
"drabastomek/learningPySpark" ["l"="-2.794,16.858"]
"arverma/TowardsDataEngineering" ["l"="-2.89,16.801"]
"drabastomek/PySparkCookbook" ["l"="-2.859,16.805"]
"drabastomek/learningPySpark_video" ["l"="-2.886,16.784"]
"polyfractal/ElasticBayes" ["l"="-2.668,17.642"]
"neuroph/NeurophFramework" ["l"="-2.196,17.561"]
"neuroph/NeurophStudio" ["l"="-2.213,17.556"]
"MarcKaminski/spark-FeatureSelection" ["l"="-2.502,17.826"]
"sramirez/spark-infotheoretic-feature-selection" ["l"="-2.516,17.808"]
"lightbend/spark-history-server-docker" ["l"="-2.879,17.186"]
"mahmoudparsian/pyspark-algorithms" ["l"="-2.879,16.895"]
"mahmoudparsian/machine-learning-course" ["l"="-2.846,16.904"]
"sridharswamy/Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka" ["l"="-3.242,16.603"]
"LearningJournal/Spark-Streaming-In-Python" ["l"="-3.001,16.742"]
"wurstmeister/storm-kafka-0.8-plus-test" ["l"="-2.32,16.885"]
"wurstmeister/storm-kafka-0.8-plus" ["l"="-2.359,16.88"]
"LinkedInAttic/scanns" ["l"="-2.437,17.781"]
"soundcloud/cosine-lsh-join-spark" ["l"="-2.448,17.761"]
"marufaytekin/lsh-spark" ["l"="-2.472,17.76"]
"karlhigley/spark-neighbors" ["l"="-2.459,17.749"]
"hibayesian/spark-fm" ["l"="57.855,23.368"]
"emesday/spark-annoy" ["l"="-2.44,17.808"]
"holdenk/spark-validator" ["l"="-2.62,16.913"]
"databricks/spark-integration-tests" ["l"="-2.648,16.887"]
"holdenk/spark-structured-streaming-ml" ["l"="-2.594,16.892"]
"juanrh/sscheck" ["l"="-2.654,16.87"]
"beyondj2ee/flumeng-kafka-plugin" ["l"="-2.335,16.849"]
"little-bit-shy/docker-hadoop" ["l"="-2.977,16.971"]
"ibywind/docker-hadoop-spark-hive" ["l"="-2.994,16.955"]
"rockthejvm/udemy-akka-streams" ["l"="-3.157,16.784"]
"posix4e/Elasticsearch-HBase-River" ["l"="-2.466,16.778"]
"mallocator/Elasticsearch-HBase-River" ["l"="-2.462,16.799"]
"Stratio/Decision" ["l"="-2.19,17.112"]
"Stratio/crossdata-connector-skeleton" ["l"="-2.196,17.075"]
"Stratio/ingestion" ["l"="-2.155,17.124"]
"Stratio/flume" ["l"="-2.091,17.129"]
"JerryLead/SparkInternals" ["l"="-2.591,16.995"]
"ColZer/DigAndBuried" ["l"="-2.422,14.937"]
"spark-jobserver/spark-jobserver" ["l"="-2.598,17.047"]
"flink-china/flink-training-course" ["l"="-2.622,15.064"]
"byzer-org/byzer-lang" ["l"="-2.478,14.945"]
"apache/spark" ["l"="-2.926,14.733"]
"Alluxio/alluxio" ["l"="-2.726,14.775"]
"Angel-ML/angel" ["l"="58.068,23.5"]
"apache/flink" ["l"="-2.797,14.863"]
"databricks/spark-csv" ["l"="-2.61,17.064"]
"databricks/spark-redshift" ["l"="11.665,-2.537"]
"databricks/tensorframes" ["l"="-2.607,17.167"]
"cloudera/livy" ["l"="-2.587,17.083"]
"holdenk/spark-testing-base" ["l"="-2.654,17.026"]
"harsha2010/magellan" ["l"="39.509,23.802"]
"apache/cassandra-spark-connector" ["l"="-1.451,18.507"]
"sbt/sbt-assembly" ["l"="-2.679,18.67"]
"amplab/spark-indexedrdd" ["l"="-2.641,17.243"]
"apache/predictionio-template-similar-product" ["l"="-2.577,17.527"]
"PredictionIO/template-scala-parallel-leadscoring" ["l"="-2.573,17.537"]
"PredictionIO/template-scala-parallel-productranking" ["l"="-2.561,17.538"]
"apache/predictionio-template-attribute-based-classifier" ["l"="-2.574,17.549"]
"PredictionIO/template-scala-parallel-complementarypurchase" ["l"="-2.593,17.539"]
"apache/predictionio-template-skeleton" ["l"="-2.553,17.527"]
"apache/incubator-livy" ["l"="-2.557,17.074"]
"filodb/FiloDB" ["l"="-2.542,17.11"]
"weiweifan/Big-Data-Resources" ["l"="-1.656,16.697"]
"apachecn/python_data_analysis_and_mining_action" ["l"="50.705,27.839"]
"nonstriater/Learn-Algorithms" ["l"="-4.318,17.819"]
"lawlite19/MachineLearning_Python" ["l"="50.772,28.036"]
"datawhalechina/team-learning-data-mining" ["l"="50.827,27.899"]
"Wang-Jun-Chao/leetcode" ["l"="-4.927,14.785"]
"LinXueyuanStdio/PythonDataMining" ["l"="50.618,27.748"]
"wangzhiwubigdata/God-Of-BigData" ["l"="-1.495,16.561"]
"heibaiying/BigData-Notes" ["l"="-4.224,15.014"]
"Smilexuhc/Data-Competition-TopSolution" ["l"="50.603,28.086"]
"imhuay/Algorithm_Interview_Notes-Chinese" ["l"="50.748,28.231"]
"HariSekhon/Kubernetes-configs" ["l"="-3.058,17.005"]
"HariSekhon/Templates" ["l"="-3.068,16.982"]
"HariSekhon/GitHub-Actions" ["l"="-3.042,16.976"]
"HariSekhon/Jenkins" ["l"="-3.09,16.988"]
"HariSekhon/DevOps-Python-tools" ["l"="-3.038,16.994"]
"HariSekhon/SQL-scripts" ["l"="-3.043,17.017"]
"HariSekhon/Knowledge-Base" ["l"="-3.08,16.967"]
"sryza/aas" ["l"="-2.624,17.039"]
"mahmoudparsian/data-algorithms-book" ["l"="-2.635,16.979"]
"apache/hadoop" ["l"="-2.883,14.682"]
"apache/hive" ["l"="-2.73,14.719"]
"apache/storm" ["l"="-2.798,14.635"]
"cloudera/hue" ["l"="-2.682,14.724"]
"steveloughran/winutils" ["l"="-2.601,16.93"]
"apache/zookeeper" ["l"="-2.97,11.883"]
"elastic/elasticsearch-hadoop" ["l"="-2.62,14.653"]
"InitialDLab/Simba" ["l"="39.572,23.706"]
"ankurdave/part" ["l"="-2.648,17.304"]
"databricks/spark-perf" ["l"="-2.486,14.764"]
"spark-examples/spark-scala-examples" ["l"="-2.916,16.85"]
"LearningJournal/Spark-Programming-In-Python" ["l"="-2.94,16.778"]
"krishnaik06/Pyspark-With-Python" ["l"="48.284,24.728"]
"OBenner/data-engineering-interview-questions" ["l"="0.368,16.435"]
"alanchn31/Data-Engineering-Projects" ["l"="0.387,16.459"]
"LearningJournal/SparkProgrammingInScala" ["l"="-2.975,16.778"]
"LearningJournal/Python-Foundation-Course" ["l"="-2.97,16.746"]
"LearningJournal/Spark-Streaming-In-Scala" ["l"="-2.981,16.758"]
"vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer" ["l"="-1.521,17.546"]
"lauris/awesome-scala" ["l"="-2.697,18.505"]
"rushter/data-science-blogs" ["l"="47.978,28.375"]
"nborwankar/LearnDataScience" ["l"="48.07,28.381"]
"adamjshook/mapreducepatterns" ["l"="-2.683,16.804"]
"mahmoudparsian/big-data-mapreduce-course" ["l"="-2.798,16.914"]
"linkedin/dr-elephant" ["l"="-2.515,14.8"]
"nathanmarz/storm-starter" ["l"="-2.336,16.872"]
"nathanmarz/storm-deploy" ["l"="-2.289,16.86"]
"nathanmarz/storm-contrib" ["l"="-2.363,16.898"]
"nathanmarz/storm-kestrel" ["l"="-2.301,16.841"]
"nathanmarz/storm" ["l"="-3.227,19.918"]
"colinsurprenant/redstorm" ["l"="-2.264,16.839"]
"miguno/kafka-storm-starter" ["l"="-2.468,16.934"]
"yahoo/storm-yarn" ["l"="-2.285,16.818"]
"revelytix/carbonite" ["l"="-23.239,-20.529"]
"mesos/spark" ["l"="-3.257,19.842"]
"lynaghk/cljs-d3" ["l"="-23.453,-20.529"]
"akka/alpakka-kafka" ["l"="-2.52,18.71"]
"theiterators/akka-http-microservice" ["l"="-2.488,18.715"]
"RBMHTechnology/eventuate" ["l"="-2.492,18.781"]
"apache/cassandra-ccm" ["l"="-1.411,18.48"]
"myamafuj/hadoop-hive-spark-docker" ["l"="-3.018,17.112"]
"martinkarlssonio/big-data-solution" ["l"="-3.007,17.096"]
"dibbhatt/kafka-spark-consumer" ["l"="-2.509,16.944"]
"koeninger/kafka-exactly-once" ["l"="-2.559,16.918"]
"spirom/spark-streaming-with-kafka" ["l"="-2.552,16.879"]
"wankunde/logcount" ["l"="-1.717,16.644"]
"confluentinc/kafka-connect-hdfs" ["l"="-0.542,16.892"]
"qindongliang/streaming-offset-to-zk" ["l"="-2.398,15.325"]
"Stratio/sparta" ["l"="-2.254,17.09"]
"tresata/spark-kafka" ["l"="-2.57,16.892"]
"hbase-rdd/hbase-rdd" ["l"="-2.492,16.915"]
"xubo245/SparkLearning" ["l"="-2.488,16.974"]
"wanghan0501/UserSessionBehaviorOfflineAnalysis" ["l"="-1.697,16.665"]
"LeechanX/Netflix-Recommender-with-Spark" ["l"="-1.601,16.731"]
"groupon/sparklint" ["l"="-2.461,14.781"]
"linbojin/spark-notes" ["l"="-2.35,15.056"]
"Intel-bigdata/spark-streamingsql" ["l"="-2.678,17.068"]
"thunderain-project/StreamSQL" ["l"="-2.717,17.073"]
"apache/gobblin" ["l"="-2.587,14.686"]
"h2oai/sparkling-water" ["l"="-2.669,17.246"]
"aws-samples/emr-bootstrap-actions" ["l"="11.657,-2.496"]
"databricks/spark-knowledgebase" ["l"="-2.625,16.952"]
"sksamuel/avro4s" ["l"="-2.543,18.812"]
"databricks/spark-xml" ["l"="-2.509,17.051"]
"LinkedInAttic/camus" ["l"="-2.516,14.564"]
"apache/incubator-toree" ["l"="-2.625,17.15"]
"hammerlab/grafana-spark-dashboards" ["l"="-2.458,14.73"]
"ddf-project/DDF" ["l"="-2.858,15.41"]
"ooyala/spark-jobserver" ["l"="-2.764,17.208"]
"collectivemedia/spark-ext" ["l"="-2.688,17.211"]
"skrusche63/spark-elastic" ["l"="-2.552,16.655"]
"skrusche63/elastic-insight" ["l"="-2.546,16.625"]
"databricks/docker-spark-iceberg" ["l"="-0.163,14.818"]
"mrn-aglic/spark-standalone-cluster" ["l"="-2.977,17.156"]
"testdrivenio/spark-kubernetes" ["l"="-3.029,17.132"]
"fabiogjardim/bigdata_docker" ["l"="-3.016,17.151"]
"guoding83128/OpenDL" ["l"="-2.751,17.27"]
"adatao/tensorspark" ["l"="-2.656,17.22"]
"amplab/SparkNet" ["l"="-2.637,17.212"]
"yajiemiao/pdnn" ["l"="44.9,27.615"]
"intel-machine-learning/DistML" ["l"="57.803,23.436"]
"datumbox/datumbox-framework-examples" ["l"="-2.357,17.441"]
"datumbox/NaiveBayesClassifier" ["l"="-2.374,17.496"]
"bwaldvogel/liblinear-java" ["l"="-2.318,17.418"]
"mimno/Mallet" ["l"="53.249,26.277"]
"epahomov/docker-spark" ["l"="-2.818,17.089"]
"Lab41/ipython-spark-docker" ["l"="-2.784,16.957"]
"dylanmei/docker-zeppelin" ["l"="-2.802,17.068"]
"nathanmarz/cascalog" ["l"="-23.558,-20.429"]
"h2oai/h2o-3" ["l"="45.559,26.049"]
"h2oai/h2o-tutorials" ["l"="-2.736,17.347"]
"h2oai/deepwater" ["l"="-2.726,17.3"]
"h2oai/h2o-flow" ["l"="-2.768,17.299"]
"h2oai/h2o4gpu" ["l"="-2.709,17.316"]
"databricks/spark-sklearn" ["l"="-2.662,17.132"]
"yahoo/CaffeOnSpark" ["l"="-2.615,17.215"]
"sparklyr/sparklyr" ["l"="40.411,35.356"]
"h2oai/h2o-meetups" ["l"="-2.744,17.322"]
"TIBCOSoftware/snappydata" ["l"="-2.532,14.7"]
"typelevel/frameless" ["l"="-2.741,18.752"]
"paypal/squbs" ["l"="-2.517,18.674"]
"pipelinedb/pipelinedb" ["l"="2.841,13.677"]
"densh/scala-offheap" ["l"="-2.686,18.801"]
"tensorflow/skflow" ["l"="47.865,28.864"]
"aigamedev/scikit-neuralnetwork" ["l"="44.825,27.682"]
"ottogroup/palladium" ["l"="44.809,27.493"]
"ogrisel/parallel_ml_tutorial" ["l"="48.104,28.426"]
"robdmc/pandashells" ["l"="43.761,23.94"]
"tmadl/sklearn-expertsys" ["l"="45.268,26.275"]
"panovvv/hadoop-hive-spark-docker" ["l"="-3.001,17.123"]
"spancer/bigdata-docker-compose" ["l"="-3.008,17.075"]
"rockthejvm/spark-streaming" ["l"="-3.058,16.763"]
"rockthejvm/udemy-scala-beginners" ["l"="-3.08,16.743"]
"cardmagic/classifier" ["l"="6.305,-37.433"]
"pauldix/basset" ["l"="-2.427,17.423"]
"mrsqueeze/spark-hash" ["l"="-2.466,17.778"]
"NetherlandsForensicInstitute/kafka-spout" ["l"="-2.389,16.904"]
"sparkbyexamples/spark-examples" ["l"="-2.97,16.846"]
"Baeldung/scala-tutorials" ["l"="-2.577,18.962"]
"mrpowers-io/spark-fast-tests" ["l"="-1.788,17.562"]
"TheAlgorithms/Scala" ["l"="-6.168,15.612"]
"miguno/wirbelsturm" ["l"="-2.387,16.927"]
"elodina/scala-kafka" ["l"="-2.403,18.838"]
"chimpler/blog-spark-streaming-log-aggregation" ["l"="-2.432,16.894"]
"twitter/bijection" ["l"="-2.56,18.572"]
"twitter/summingbird" ["l"="-2.553,18.534"]
"rockthejvm/cats-course" ["l"="-3.189,16.796"]
"vigna/Sux4J" ["l"="-2.835,17.404"]
"efficient/SuRF" ["l"="1.743,13.399"]
"fast-pack/JavaFastPFOR" ["l"="-5.611,10.614"]
"rodrigo-reboucas/docker-bigdata" ["l"="-3.069,17.171"]
"fabiogjardim/mds" ["l"="-3.048,17.189"]
"A3Data/rony" ["l"="6.494,-20.053"]
"airtoncarneiro/dev-spark-jupyter" ["l"="-3.045,17.167"]
"Azmodey/pg_dba_scripts" ["l"="-3.102,17.041"]
"fatdba/Oracle-Database-Scripts" ["l"="4.566,-4.421"]
"HariSekhon/DevOps-Golang-tools" ["l"="-3.058,16.969"]
"zdata-inc/SparkSampleProject" ["l"="-2.855,17.226"]
"prabeesh/SparkTwitterAnalysis" ["l"="-2.883,17.253"]
"zdata-inc/StormSampleProject" ["l"="-2.896,17.239"]
"google-deepmind/reverb" ["l"="23.648,14.816"]
"uber-research/poet" ["l"="57.575,18.546"]
"google-deepmind/bsuite" ["l"="57.591,18.253"]
"uber/bayesmark" ["l"="46.024,26.257"]
"uber/manifold" ["l"="45.291,26.116"]
"uber/aresdb" ["l"="1.962,13.497"]
"tomdz/storm-esper" ["l"="-2.135,16.967"]
"hellojinjie/storm-esper-example" ["l"="-2.104,16.952"]
"hbase-rdd/hbase-rdd-examples" ["l"="-2.452,16.903"]
"LinMingQiang/sparkstreaming" ["l"="-2.442,15.223"]
"TopSpoofer/hbrdd" ["l"="-2.415,16.879"]
"retrieva/pficommon" ["l"="-2.398,17.445"]
"jubatus/jubatus-example" ["l"="-2.401,17.42"]
"deeplearning4j/dl4j-snapshot-examples" ["l"="-2.187,17.616"]
"deeplearning4j/libnd4j" ["l"="-2.169,17.638"]
"jfpuget/LibFM_in_Keras" ["l"="57.384,24.027"]
"anttttti/Wordbatch" ["l"="57.424,24.02"]
"sowla/useR2019-materials" ["l"="40.499,35.54"]
"h2oai/steam" ["l"="-2.771,17.326"]
"h2oai/data-science-examples" ["l"="-2.793,17.342"]
"jphall663/interpretable_machine_learning_with_python" ["l"="45.169,26.208"]
"ledell/useR-machine-learning-tutorial" ["l"="48.209,28.391"]
"kbroman/RStudioConf2019Slides" ["l"="40.514,35.388"]
"colinsurprenant/storm-jruby" ["l"="-2.235,16.824"]
"sakserv/hadoop-mini-clusters" ["l"="-2.407,17.1"]
"hortonworks/registry" ["l"="-3.089,14.925"]
"tirthajyoti/Scikit-image-book" ["l"="-2.99,16.591"]
"sankamuk/PysparkCheatsheet" ["l"="-2.909,16.804"]
"Saurav3218/Pyspark_Questions_SKS" ["l"="-2.916,16.819"]
"itversity/data-engineering-spark" ["l"="-2.939,16.815"]
"vivek-bombatkar/Spark-with-Python---My-learning-notes-" ["l"="-1.493,17.522"]
"ankurchavda/SparkLearning" ["l"="0.37,16.482"]
"martandsingh/ApacheSpark" ["l"="25.659,-28.948"]
"amplab/training" ["l"="-2.717,16.918"]
"stefanobaghino/spark-twitter-stream-example" ["l"="-2.739,17.074"]
"snowplow-archive/spark-streaming-example-project" ["l"="11.526,-2.489"]
"JerryLead/SparkLearning" ["l"="-2.676,16.864"]
"mkuthan/example-spark-kafka" ["l"="-2.605,16.838"]
"hammerlab/spree" ["l"="-2.681,16.9"]
"matteoredaelli/pyspark-examples" ["l"="-2.717,16.877"]
"h2oai/h2o.js" ["l"="-2.808,17.316"]
"tdebatty/java-LSH" ["l"="-2.182,17.52"]
"JorenSix/TarsosLSH" ["l"="-2.207,17.504"]
"ALShum/MinHashLSH" ["l"="-2.145,17.525"]
"codelibs/minhash" ["l"="-2.132,17.55"]
"guoziqingbupt/Locality-sensitive-hashing" ["l"="-1.116,4.115"]
"EdDuarte/similarity-search-java" ["l"="-2.157,17.542"]
"dgadiraju/code" ["l"="-2.7,16.598"]
"dgadiraju/data" ["l"="-2.7,16.546"]
"dgadiraju/itversity-books" ["l"="-2.703,16.511"]
"dgadiraju/itversity-boxes" ["l"="-2.703,16.488"]
"dgadiraju/spark2demo" ["l"="-2.683,16.527"]
"codelibs/elasticsearch-minhash" ["l"="-2.109,17.564"]
"amplab/velox-modelserver" ["l"="-2.712,17.231"]
"DanielaKolarova/NeuralNetworks" ["l"="-2.234,17.61"]
"cpbaranwal/Spark-Streaming-DirectKafka-Examples" ["l"="-2.539,16.86"]
"ippontech/spark-kafka-source" ["l"="-2.519,16.856"]
"tresata/spark-sorted" ["l"="-2.669,17.049"]
"clulab/reach" ["l"="-2.519,17.339"]
"SeldonIO/seldonio.github.com" ["l"="-2.455,17.396"]
"SeldonIO/seldon-vm" ["l"="-2.455,17.412"]
"SeldonIO/semantic-vectors-lucene-tools" ["l"="-2.471,17.412"]
"SeldonIO/importer-movielens-10m" ["l"="-2.461,17.426"]
"SeldonIO/seldon-spark" ["l"="-2.462,17.385"]
"ceteri/spark-exercises" ["l"="-2.533,17.285"]
"ceteri/intro_spark" ["l"="-2.505,17.311"]
"CCweixiao/hbase-sdk" ["l"="-2.452,16.649"]
"CCweixiao/HydraQL" ["l"="-2.469,16.645"]
"rockthejvm/cats-effect" ["l"="-3.222,16.79"]
"gradusnikov/jmatio" ["l"="-2.135,17.334"]
"xiaocai00/SparkPinkMST" ["l"="-2.431,17.638"]
"gwenshap/SparkStreamingExample" ["l"="-2.427,16.868"]
"Stratio/Spark-MongoDB" ["l"="-2.208,17.043"]
"Stratio/stratio-connector-sparkSQL" ["l"="-2.177,17.055"]
"Stratio/sphinx-maven" ["l"="-2.187,17.045"]
"Stratio/medsavant" ["l"="-2.184,17.064"]
"Stratio/hbase" ["l"="-2.152,17.03"]
"Stratio/spark-cassandra-connector" ["l"="-2.163,17.04"]
"Stratio/pomParser" ["l"="-2.197,17.06"]
"Stratio/unix-maven-plugin" ["l"="-2.241,17.051"]
"Stratio/deep-examples" ["l"="-2.23,17.068"]
"Stratio/deep_functional_test" ["l"="-2.148,17.013"]
"Stratio/sphinx-theme-stratio" ["l"="-2.167,17.021"]
"Stratio/sandbox" ["l"="-2.176,17.001"]
"Stratio/cassandra-lucene-index" ["l"="-2.15,17.07"]
"Stratio/spark-solr" ["l"="-2.108,17.066"]
"Stratio/vagrant-ova-plugin" ["l"="-2.111,17.047"]
"Stratio/spark-rabbitmq" ["l"="-2.139,17.044"]
"Stratio/fakenator" ["l"="-2.079,17.045"]
"Stratio/stratio-frontend-architecture" ["l"="-2.101,17.013"]
"Stratio/morphlines" ["l"="-2.084,17.025"]
"mrpowers-io/spark-daria" ["l"="-1.76,17.545"]
"scopt/scopt" ["l"="-2.682,18.726"]
"spotify/scio" ["l"="-2.787,18.552"]
"PipelineAI/pipeline" ["l"="45.443,25.806"]
"pulsarIO/realtime-analytics" ["l"="-2.311,17.127"]
"ruoyu-chen/hadoop-docker" ["l"="-2.924,17.01"]
"Lewuathe/docker-hadoop-cluster" ["l"="-2.903,16.965"]
"azkaban/azkaban" ["l"="-2.634,14.766"]
"hardikvasa/awesome-programming" ["l"="-3.035,16.402"]
"hardikvasa/wikipedia-crawler" ["l"="-3.058,16.39"]
"hardikvasa/cleoria-web-crawler" ["l"="-3.052,16.411"]
"minrk/findspark" ["l"="-2.716,17.108"]
"GoogleCloudDataproc/spark-bigquery-connector" ["l"="44.739,16.374"]
"mkuthan/example-spark" ["l"="-2.635,16.82"]
"BenFradet/spark-kafka-writer" ["l"="-2.576,16.831"]
"Stratio/spark-kafka" ["l"="-2.595,16.778"]
"spark-mooc/mooc-setup" ["l"="-2.727,16.895"]
"spark-mooc/mooc-setup-dbc" ["l"="-2.733,16.85"]
"pulsarIO/jetstream" ["l"="-2.279,17.131"]
"pulsarIO/jetstream-esper" ["l"="-2.288,17.146"]
"apache/eagle" ["l"="-2.455,14.982"]
"redBorder/cep" ["l"="-2.303,17.161"]
"pulsarIO/pulsar-reporting-ui" ["l"="-2.282,17.174"]
"KylinOLAP/Kylin" ["l"="-2.252,17.166"]
"HuaweiBigData/StreamCQL" ["l"="-2.309,16.959"]
"twosigma/flint" ["l"="-2.656,17.1"]
"sryza/spark-ts-examples" ["l"="-2.729,17.169"]
"tgsmith61591/clust4j" ["l"="-2.313,17.529"]
"elki-project/elki" ["l"="-2.328,17.565"]
"jtablesaw/tablesaw" ["l"="-5.336,10.665"]
"oracle/tribuo" ["l"="-5.667,15.282"]
"jzy3d/jzy3d-api" ["l"="0.291,10.084"]
"pcpratts/rootbeer1" ["l"="-6.004,10.434"]
"padreati/rapaio" ["l"="-2.278,17.45"]
"P7h/docker-spark" ["l"="-2.849,17.096"]
"SingularitiesCR/spark-docker" ["l"="-2.869,16.976"]
"marcus-drake/sbt-docker" ["l"="-2.605,18.734"]
"RedisLabs/spark-redis" ["l"="-2.566,17.014"]
"apache-spark-on-k8s/spark" ["l"="-2.702,14.956"]
"lintool/MapReduceAlgorithms" ["l"="-2.675,16.718"]
"openimaj/imageterrier" ["l"="-2.074,17.422"]
"jdmp/java-data-mining-package" ["l"="-2.228,17.347"]
"espertechinc/esper" ["l"="-2.208,16.997"]
"siddhi-io/siddhi" ["l"="-2.53,15.438"]
"luonanqin/csdn-esper" ["l"="-2.187,16.964"]
"timolson/cointrader" ["l"="-9.791,10.702"]
"adrianmilne/esper-demo-nuclear" ["l"="-2.157,16.959"]
"fhussonnois/kafkastreams-cep" ["l"="-0.755,16.842"]
"espertechinc/nesper" ["l"="-2.174,16.942"]
"childe/hangout" ["l"="-3.788,8.909"]
"uber-archive/AthenaX" ["l"="-2.527,15.056"]
"apache/calcite" ["l"="-2.682,14.818"]
"janino-compiler/janino" ["l"="-2.702,11.767"]
"epahomov/docker-zeppelin" ["l"="-2.848,17.121"]
"huawei-noah/streamDM" ["l"="-2.55,17.245"]
"apache/incubator-samoa" ["l"="51.339,15.436"]
"Waikato/moa" ["l"="45.828,26.009"]
"huawei-noah/streamDM-Cpp" ["l"="-2.499,17.281"]
"cloudml/zen" ["l"="57.815,23.426"]
"linkedin/photon-ml" ["l"="57.814,23.392"]
"shijinkui/spark_study" ["l"="-2.387,15.064"]
"LIBBLE/LIBBLE-Spark" ["l"="57.781,23.397"]
"amplab/spark-ec2" ["l"="-2.644,17.339"]
"nchammas/flintrock" ["l"="-2.655,17.274"]
"PiercingDan/spark-Jupyter-AWS" ["l"="-2.671,17.322"]
"graphframes/graphframes" ["l"="-2.645,17.143"]
"broxtronix/spark-gce" ["l"="-2.673,17.299"]
"rdblue/s3committer" ["l"="-2.659,17.366"]
"groupon/spark-metrics" ["l"="-2.445,14.715"]
"jadianes/spark-movie-lens" ["l"="-1.566,16.86"]
"jadianes/data-science-your-way" ["l"="-1.5,16.906"]
"jadianes/spark-r-notebooks" ["l"="-1.471,16.913"]
"ptnplanet/Java-Naive-Bayes-Classifier" ["l"="-2.38,17.569"]
"reallin/Bayes" ["l"="-2.377,17.614"]
"debuglevel/NEsper-CEP-Example" ["l"="-2.157,16.922"]
"mongodb/mongo-spark" ["l"="-2.464,16.998"]
"mongodb/mongo-hadoop" ["l"="0.338,-33.471"]
"breinero-zz/MongoDB_Spark_Course" ["l"="-2.43,16.99"]
"mongodb/mongo-scala-driver" ["l"="-2.465,18.503"]
"neo4j/neo4j-spark-connector" ["l"="-2.692,-41.949"]
"japila-books/pyspark-internals" ["l"="-2.63,16.751"]
"hammerlab/spark-json-relay" ["l"="-2.698,16.872"]
"yahoo/egads" ["l"="52.298,14.717"]
"mhahsler/dbscan" ["l"="64.247,12.355"]
"lejon/T-SNE-Java" ["l"="-2.33,17.619"]
"scikit-learn-contrib/hdbscan" ["l"="45.336,26.248"]
"Markus-Go/rapidminer-anomalydetection" ["l"="-2.303,17.6"]
"annoviko/pyclustering" ["l"="45.447,26.409"]
"Netflix/Surus" ["l"="52.242,14.747"]
"lbehnke/hierarchical-clustering-java" ["l"="-2.295,17.638"]
"svenkreiss/pysparkling" ["l"="-2.776,16.689"]
"HariSekhon/GitHub-Actions-Contexts" ["l"="-3.053,16.957"]
"sramirez/spark-MDLP-discretization" ["l"="-2.537,17.822"]
"wxhC3SC6OPm8M1HXboMy/spark-mrmr-feature-selection" ["l"="-2.542,17.803"]
"sramirez/fast-mRMR" ["l"="-2.512,17.851"]
"manuparra/MasterDatCom_BDCC_Practice" ["l"="-2.537,17.839"]
"LIDIAgroup/SparkFeatureSelection" ["l"="-2.52,17.831"]
"hardikvasa/hadoop-mapreduce-examples-python" ["l"="-3.079,16.41"]
"saurfang/spark-knn" ["l"="-2.474,17.712"]
"epfldata/squall" ["l"="-2.268,16.94"]
"nathanmarz/trident-memcached" ["l"="-2.24,16.925"]
"Lab41/soft-boiled" ["l"="-2.814,16.944"]
"spancer/bigdata-docker-builds" ["l"="-3.035,17.073"]
"zhangyuc/splash" ["l"="57.715,23.452"]
"mesos/myriad" ["l"="6.339,-13.194"]
"coral-streaming/coral" ["l"="-2.739,17.249"]
"shivam5992/pyscrapper" ["l"="-3.042,16.44"]
"spancer/flink-iceberg-demo" ["l"="-3.055,17.09"]
"hulichao/docker-bigdata" ["l"="-3.038,17.09"]
"AndreiRegiani/wikipedia-crawler" ["l"="-3.085,16.36"]
"thomasmueller/minperf" ["l"="-2.858,17.437"]
"vspiewak/twitter-sentiment-analysis" ["l"="-2.763,17.18"]
"DhruvKumar/spark-twitter-sentiment" ["l"="-2.805,17.196"]
"rockthejvm/zio-course" ["l"="-3.248,16.785"]
"sdhu/elasticsearch-prediction-spark" ["l"="-2.622,17.619"]
"wzhe06/Ad-papers" ["l"="58.15,23.422"]
"alibaba/x-deeplearning" ["l"="58.105,23.45"]
"wzhe06/SparkCTR" ["l"="58.109,23.367"]
"apachecn/spark-doc-zh" ["l"="-2.499,16.998"]
"cdarlint/winutils" ["l"="-2.663,15.063"]
"srccodes/hadoop-common-2.2.0-bin" ["l"="-2.805,14.317"]
"DTStack/chunjun" ["l"="-2.547,14.994"]
"apache/ambari" ["l"="-2.618,14.808"]
"apache/flink-cdc" ["l"="-2.628,15.005"]
"apache/seatunnel" ["l"="-2.62,14.953"]
"DTStack/flinkStreamSQL" ["l"="-2.55,15.063"]
"apache/dolphinscheduler" ["l"="-2.646,14.978"]
"jay-mahadeokar/pynetbuilder" ["l"="51.61,33.401"]
"maxpumperla/elephas" ["l"="-2.63,17.173"]
"microsoft/DMTK" ["l"="57.796,23.535"]
"soumith/convnet-benchmarks" ["l"="47.812,29.023"]
"sailing-pmls/bosen" ["l"="57.779,23.463"]
"NervanaSystems/neon" ["l"="47.851,29.03"]
"HuaweiBigData/carbondata" ["l"="-2.342,16.926"]
"uber-archive/chaperone" ["l"="-0.532,16.99"]
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" ["l"="-2.542,15.15"]
"eBay/Eagle" ["l"="-2.349,14.944"]
"HariSekhon/Nagios-Plugins" ["l"="9.145,-11.192"]
"vegas-viz/Vegas" ["l"="-2.829,18.736"]
"apache/systemds" ["l"="-2.603,17.247"]
"Centaur/repox" ["l"="-2.228,18.648"]
"cjuexuan/mynote" ["l"="-2.42,14.998"]
"teeyog/IQL" ["l"="-2.449,15.06"]
"allwefantasy/my-life" ["l"="-2.405,15.011"]
"zhisheng17/flink-learning" ["l"="-2.724,15.04"]
"lw-lin/streaming-readings" ["l"="-2.581,15.109"]
"big-data-europe/docker-flink" ["l"="-2.919,17.054"]
"kubeflow/spark-operator" ["l"="-2.696,14.992"]
"puckel/docker-airflow" ["l"="0.366,16.031"]
"XD-DENG/Spark-ML-Intro" ["l"="-2.805,16.713"]
"debasishg/scala-redis" ["l"="-2.566,18.655"]
"stanford-futuredata/ASAP" ["l"="-2.726,17.446"]
"stanford-futuredata/readinggroup" ["l"="-2.713,17.41"]
"weld-project/weld" ["l"="-0.591,15.005"]
"stanford-futuredata/noscope" ["l"="63.528,-13.483"]
"enkhalifapro/bigdata-all-in-one" ["l"="-3.059,17.124"]
"clulab/nlp-reading-group" ["l"="-2.543,17.364"]
"mlr-org/mlr" ["l"="40.385,35.389"]
"ModelOriented/DALEX" ["l"="45.206,26.192"]
"DarrenCook/h2o" ["l"="-2.808,17.376"]
"kaz-Anova/StackNet" ["l"="57.449,24.024"]
"rstudio/webinars" ["l"="40.422,35.4"]
"h2oai/mli-resources" ["l"="45.192,26.229"]
"rockthejvm/udemy-scala-advanced" ["l"="-3.096,16.718"]
"hyperopt/hyperopt-sklearn" ["l"="45.543,26.244"]
"SparkTC/systemml" ["l"="-2.62,17.288"]
"apache/systemds-website" ["l"="-2.598,17.282"]
"Samsung/veles" ["l"="57.72,23.554"]
"microsoft/Multiverso" ["l"="57.797,23.487"]
"apache/bahir" ["l"="-2.6,17.309"]
"apache/bahir-website" ["l"="-2.59,17.291"]
"IDSIA/brainstorm" ["l"="44.91,27.713"]
"tugraz-isds/systemds" ["l"="1.982,13.311"]
"apache/datasketches-java" ["l"="-5.71,10.711"]
"HariSekhon/DevOps-Bash-tools" ["l"="29.164,-24.832"]
"dennyzhang/devops_public" ["l"="28.869,-24.126"]
"HariSekhon/DevOps-Perl-tools" ["l"="-3.117,16.99"]
"paiml/python_devops_book" ["l"="29.477,-23.052"]
"sunbow1/SparkMLlibDeepLearn" ["l"="-1.784,16.496"]
"dmlc/parameter_server" ["l"="57.817,23.485"]
"master/spark-stemming" ["l"="-2.57,17.258"]
"mpollmeier/gremlin-scala" ["l"="-2.809,18.757"]
"deeplearning4j/ScalNet" ["l"="-2.882,18.72"]
"apache/carbondata" ["l"="-2.566,14.755"]
"Hydrospheredata/mist" ["l"="-2.145,14.648"]
"cerndb/dist-keras" ["l"="-2.661,17.166"]
"maxpumperla/hyperas" ["l"="45.631,26.158"]
"farizrahman4u/seq2seq" ["l"="55.837,28.49"]
"keplr-io/quiver" ["l"="50.406,33.282"]
"EderSantana/seya" ["l"="44.839,27.696"]
"pulsarIO/pulsar-reporting-api" ["l"="-2.262,17.198"]
"elsevierlabs-os/spark-xml-utils" ["l"="-2.449,17.071"]
"AbsaOSS/spline" ["l"="-2.407,14.789"]
"nightscape/spark-excel" ["l"="-2.442,16.953"]
"HyukjinKwon/spark-xml" ["l"="-2.459,17.059"]
"delta-io/delta-sharing" ["l"="-1.665,17.562"]
"delta-io/connectors" ["l"="-1.669,17.538"]
"jupyter-server/enterprise_gateway" ["l"="43.299,24.018"]
"dropbox/PyHive" ["l"="-2.499,14.666"]
"egen/spark-sftp" ["l"="-2.387,16.884"]
"arcizon/spark-filetransfer" ["l"="-2.366,16.858"]
"actionml/template-scala-parallel-universal-recommendation" ["l"="-2.523,17.476"]
"actionml/PredictionIO" ["l"="-2.533,17.493"]
"collectivemedia/modelmatrix" ["l"="-2.733,17.227"]
"tzaeschke/phtree-cpp" ["l"="-2.899,17.508"]
"improbable-eng/phtree-cpp" ["l"="-2.933,17.479"]
"qubole/sparklens" ["l"="-2.442,14.815"]
"barneygovan/lsh-scala" ["l"="-2.496,17.77"]
"deeplearning4j/dl4j-streaming" ["l"="-2.152,17.658"]
"ma-xu/DataMining" ["l"="-2.374,17.643"]
"tdebatty/spark-knn-graphs" ["l"="-2.501,17.726"]
"mapr-demos/SparkStreamingHBaseExample" ["l"="-2.417,16.853"]
"LiyangLingIntel/SparkDBSCAN" ["l"="-2.492,17.611"]
"HyukjinKwon/pyspark-project-example" ["l"="-2.428,17.071"]
"apache/bahir-flink" ["l"="-2.593,15.124"]
"GezimSejdiu/flink-starter" ["l"="-2.958,17.056"]
"big-data-europe/docker-kafka" ["l"="-2.94,17.056"]
"wurstmeister/kafka-docker" ["l"="-0.644,16.986"]
"apache/hudi" ["l"="-2.655,14.877"]
"xubo245/MLlibLearning" ["l"="-2.421,16.969"]
"ljcan/SparkStreaming" ["l"="-1.672,16.625"]
"smallnest/douban-recommender" ["l"="-1.621,16.777"]
"apache/atlas" ["l"="-2.515,14.86"]
"big-data-europe/docker-hive-metastore-postgresql" ["l"="-2.939,16.991"]
"big-data-europe/docker-zeppelin" ["l"="-2.923,17.071"]
"opencypher/morpheus" ["l"="-2.601,-41.966"]
"Sotera/spark-distributed-louvain-modularity" ["l"="51.574,15.706"]
"Sotera/distributed-graph-analytics" ["l"="51.592,15.669"]
"big-data-europe/docker-spark-notebook" ["l"="-2.9,17.07"]
"mrpowers-io/spark-style-guide" ["l"="-1.724,17.561"]
"TopSpoofer/kafka-spark-streaming-to-hbase" ["l"="-2.377,16.843"]
"shunfei/indexr" ["l"="-2.337,14.742"]
"QiangCai/carbondata_guide" ["l"="-2.381,14.789"]
"SingularitiesCR/hadoop-docker" ["l"="-2.889,16.949"]
"cld378632668/A-community-detect-System-based-on-GraphX" ["l"="0.403,12.306"]
"cld378632668/Source-Notes-Chinese-translations-of-Spark-GraphX" ["l"="0.451,12.35"]
"endymecy/spark-config-and-tuning" ["l"="-2.347,16.987"]
"endymecy/spark-programming-guide-zh-cn" ["l"="-2.369,16.976"]
"weijie-he/jinyong" ["l"="-2.369,16.995"]
"sparkling-graph/sparkling-graph" ["l"="51.574,15.656"]
"zpasal/hbase-gui-admin" ["l"="-2.37,16.573"]
"qindongliang/hbase-increment-index" ["l"="-2.447,16.763"]
"wjw465150/SolrCoprocessor" ["l"="-2.445,16.724"]
"jibaro/hbase-solr-coprocessor" ["l"="-2.442,16.739"]
"endymecy/AlgorithmsOnSpark" ["l"="-2.309,16.991"]
"krejcmat/hadoop-docker" ["l"="-3.099,17.077"]
"DRUNK2013/spark-streaming" ["l"="-2.352,16.826"]
"intel/ipex-llm" ["l"="-2.505,17.132"]
"intel/BigDL" ["l"="-2.492,17.09"]
"intel/intel-extension-for-pytorch" ["l"="64.147,-2.455"]
"apache/mxnet" ["l"="47.989,29.03"]
"uxlfoundation/oneDNN" ["l"="37.195,0.838"]
"longyinzaitian/HadoopDemo" ["l"="-1.74,16.563"]
"xiaokugua250/DataMingProject" ["l"="-1.721,16.624"]
"JoeWoo/hadoop-spark-hive-cluster-docker" ["l"="-2.956,16.971"]
"rohgar/scala-spark-4" ["l"="-2.641,16.698"]
"ansrivas/spark-structured-streaming" ["l"="-2.55,16.839"]
"jerryshao/spark-kafka-0-8-sql" ["l"="-2.567,16.784"]
"jpmml/jpmml-sparkml" ["l"="45.852,26.589"]
"ucbrise/clipper" ["l"="45.471,25.829"]
"openscoring/openscoring" ["l"="45.871,26.612"]
"VertaAI/modeldb" ["l"="45.366,25.801"]
"jpmml/jpmml-evaluator" ["l"="45.847,26.568"]
"G-Research/spark-extension" ["l"="-1.782,17.616"]
"ZuInnoTe/spark-hadoopoffice-ds" ["l"="-2.403,16.945"]
"ZuInnoTe/hadoopoffice" ["l"="-2.387,16.955"]
"spoddutur/spark-notes" ["l"="-1.465,17.51"]
"ClickHouse/spark-clickhouse-connector" ["l"="1.191,-9.401"]
"CS-SI/Orekit" ["l"="19.424,14.796"]
"netomi/uom" ["l"="-2.217,17.37"]
"tmulc18/Distributed-TensorFlow-Guide" ["l"="57.879,23.406"]
"kuza55/keras-extras" ["l"="50.297,33.388"]
"rjagerman/glint" ["l"="57.838,23.444"]
"codekansas/keras-language-modeling" ["l"="55.861,28.465"]
"bstriner/keras-adversarial" ["l"="46.019,29.224"]
"areibman/pyspark_exercises" ["l"="-2.845,16.758"]
"UrbanInstitute/spark-social-science" ["l"="-2.852,16.729"]
"dennyglee/databricks" ["l"="-1.536,17.566"]
"HariSekhon/Diagrams-as-Code" ["l"="-3.113,16.955"]
"StumbleUponArchive/asynchbase" ["l"="-2.394,16.778"]
"StumbleUponArchive/tcollector" ["l"="-2.38,16.763"]
"Venkata09/BigDataCertificationPrep" ["l"="-2.706,16.698"]
"jaceklaskowski/kafka-workshop" ["l"="-2.605,16.752"]
"P7h/Spark-MLlib-Twitter-Sentiment-Analysis" ["l"="-3.263,16.583"]
"UrbanInstitute/sparkr-tutorials" ["l"="-2.87,16.683"]
"trK54Ylmz/kafka-spark-streaming-example" ["l"="-2.527,16.834"]
"AndreiRegiani/falcon-mongo-template" ["l"="-3.102,16.338"]
"zhenghorse/CEP" ["l"="-2.132,16.937"]
"ykulbak/ihbase" ["l"="-2.376,16.788"]
"StumbleUponArchive/async" ["l"="-2.33,16.777"]
"OpenTSDB/async" ["l"="-2.354,16.788"]
"2shou/HBaseObserver" ["l"="-2.37,16.724"]
"SpringForAll/spring-boot-starter-hbase" ["l"="-2.362,16.695"]
"tensorflow/serving" ["l"="58.004,23.53"]
"typelevel/spire" ["l"="-2.734,18.701"]
"typesafehub/zinc" ["l"="-2.384,17.269"]
"nativelibs4java/ScalaCL" ["l"="-6.033,10.403"]
"BIDData/BIDMat" ["l"="57.603,23.403"]
"h2oai/rsparkling" ["l"="-2.866,17.4"]
"trestletech/user2016-sparklyr" ["l"="-2.895,17.415"]
"twosigma/beakerx" ["l"="43.57,23.888"]
"man-group/arctic" ["l"="-8.806,12.96"]
"RJT1990/pyflux" ["l"="45.55,26.296"]
"geftimov/hadoop-map-reduce-patterns" ["l"="-2.703,16.769"]
"mrpowers-io/quinn" ["l"="-1.737,17.583"]
"kawadia/pyspark.test" ["l"="-2.75,16.689"]
"sape/hac" ["l"="-2.275,17.657"]
"yangliuy/DataMiningCluster" ["l"="-2.286,17.673"]
"rohgar/scala-design-2" ["l"="-2.628,16.668"]
"rohgar/scala-principles-1" ["l"="-2.632,16.655"]
"rohgar/scala-parallel-programming-3" ["l"="-2.644,16.666"]
"instaclustr/sample-KafkaSparkCassandra" ["l"="-2.546,16.82"]
"kaantas/kafka-twitter-spark-streaming" ["l"="-3.272,16.623"]
"kaantas/spark-twitter-sentiment-analysis" ["l"="-3.245,16.57"]
"amir-rahnama/pyspark-twitter-stream-mining" ["l"="-3.289,16.592"]
"emumba-com/live_twitter_sentiment_analysis" ["l"="-3.248,16.625"]
"JasonSanchez/spark-streaming-twitter-kafka" ["l"="-3.269,16.606"]
"jacksoup/HbaseAPI" ["l"="-2.33,16.657"]
"jacksoup/solr-to-es" ["l"="-2.313,16.636"]
"adornes/spark_python_ml_examples" ["l"="-2.815,16.657"]
"amplab/training-scripts" ["l"="-2.747,16.911"]
"renannprado/gogs-repository-viewer-plugin" ["l"="-3.114,16.32"]
"JThink/SkyEye" ["l"="-3.455,12.096"]
"SpringForAll/springcloud-thoth" ["l"="-1.327,10.216"]
"alibaba/simplehbase" ["l"="-3.76,12.586"]
"YahooArchive/omid" ["l"="-4.119,12.444"]
"cloudera/kudu" ["l"="-2.59,14.661"]
"apache/oozie" ["l"="-2.682,14.694"]
"shogun-toolbox/shogun" ["l"="47.683,28.986"]
"VowpalWabbit/vowpal_wabbit" ["l"="45.634,26.119"]
"PacktPublishing/PySpark-Cookbook" ["l"="-2.778,16.777"]
"jaceklaskowski/spark-streaming-notebook" ["l"="-2.583,16.805"]
"danielkorzekwa/bayes-scala" ["l"="39.38,36.002"]
"gDanix/Imb-sampling-ROS_and_RUS" ["l"="-2.549,17.855"]
"hortonworks-spark/cloud-integration" ["l"="-2.656,17.4"]
"apache/griffin" ["l"="-2.465,14.893"]
"uber/RemoteShuffleService" ["l"="-2.505,14.911"]
"apache/ranger" ["l"="-2.568,14.818"]
"apache/uniffle" ["l"="-2.547,14.963"]
"hi-primus/optimus" ["l"="-2.583,17.173"]
"blaze/blaze" ["l"="43.73,23.808"]
"AxeldeRomblay/MLBox" ["l"="45.457,26.189"]
"hi-primus/bumblebee" ["l"="-2.508,17.234"]
"spotify/chartify" ["l"="45.396,26.044"]
"pdpipe/pdpipe" ["l"="45.299,26.313"]
"h2oai/datatable" ["l"="40.411,35.236"]
"apachecn/flink-doc-zh" ["l"="-2.542,15.198"]
"realguoshuai/hadoop_study" ["l"="-1.611,16.574"]
"apachecn/storm-doc-zh" ["l"="-2.489,15.44"]
"water8394/BigData-Interview" ["l"="-1.588,16.578"]
"fayson/cdhproject" ["l"="-2.522,14.944"]
"apachecn/kafka-doc-zh" ["l"="-2.51,15.309"]
"microsoft/LightGBM" ["l"="45.601,26.085"]
"interpretml/interpret" ["l"="45.309,26.145"]
"Azure/MachineLearningNotebooks" ["l"="-45.023,7.724"]
"chermenin/spark-states" ["l"="-2.537,16.795"]
"flink-extended/dl-on-flink" ["l"="-2.662,15.142"]
"alibaba/Alink" ["l"="-2.62,15.034"]
"Cabletutu/analytics-zoo" ["l"="-2.445,17.108"]
"salesforce/TransmogrifAI" ["l"="45.526,25.945"]
"gangeli/CoreNLP-Scala" ["l"="-2.518,17.36"]
"clulab/odin-examples" ["l"="-2.539,17.345"]
"EducationalTestingService/rstfinder" ["l"="58.081,29.051"]
"rich-iannone/so-many-pyspark-examples" ["l"="-2.839,16.693"]
"Haripriya6/Sample-HIVE-Project" ["l"="-2.836,16.71"]
"OpenTSDB/opentsdb-rpc-kafka" ["l"="-2.288,16.706"]
}