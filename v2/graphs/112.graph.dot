digraph G {
"google/cpu_features" -> "pytorch/cpuinfo" ["e"=1]
"ARM-software/armnn" -> "ARM-software/ComputeLibrary"
"ARM-software/armnn" -> "ARM-software/ML-examples" ["e"=1]
"ARM-software/armnn" -> "ARM-software/android-nn-driver"
"ARM-software/armnn" -> "pytorch/QNNPACK"
"ARM-software/armnn" -> "google/XNNPACK"
"ARM-software/armnn" -> "google/gemmlowp"
"ARM-software/armnn" -> "OAID/Caffe-HRT" ["e"=1]
"ARM-software/armnn" -> "XiaoMi/mace"
"ARM-software/armnn" -> "projectNe10/Ne10"
"ARM-software/armnn" -> "ARM-software/CMSIS_5" ["e"=1]
"ARM-software/armnn" -> "huawei-noah/bolt"
"ARM-software/armnn" -> "ARM-software/ML-KWS-for-MCU" ["e"=1]
"ARM-software/armnn" -> "Tencent/FeatherCNN"
"ARM-software/armnn" -> "microsoft/nnfusion"
"ARM-software/armnn" -> "OAID/Tengine" ["e"=1]
"dpilger26/NumCpp" -> "NVIDIA/thrust" ["e"=1]
"mlcommons/inference" -> "mlcommons/training"
"mlcommons/inference" -> "baidu-research/DeepBench"
"mlcommons/inference" -> "NVIDIA/nccl-tests" ["e"=1]
"mlcommons/inference" -> "onnx/onnx-mlir"
"mlcommons/inference" -> "NVIDIA/TransformerEngine" ["e"=1]
"mlcommons/inference" -> "mlcommons/ck"
"mlcommons/inference" -> "alibaba/ai-matrix"
"mlcommons/inference" -> "mlcommons/tiny" ["e"=1]
"mlcommons/inference" -> "microsoft/nnfusion"
"mlcommons/inference" -> "iree-org/iree"
"mlcommons/inference" -> "flashinfer-ai/flashinfer" ["e"=1]
"mlcommons/inference" -> "mlcommons/inference_policies"
"mlcommons/inference" -> "mlcommons/storage" ["e"=1]
"mlcommons/inference" -> "pytorch/glow"
"mlcommons/inference" -> "NVIDIA/nccl" ["e"=1]
"intel/ai-reference-models" -> "intel/intel-xpu-backend-for-triton" ["e"=1]
"intel/ai-reference-models" -> "NervanaSystems/ngraph" ["e"=1]
"intel/ai-reference-models" -> "uxlfoundation/oneDNN" ["e"=1]
"tensorflow/model-optimization" -> "pytorch/QNNPACK" ["e"=1]
"tensorflow/model-optimization" -> "google/gemmlowp" ["e"=1]
"bytedance/byteps" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["e"=1]
"Robert-JunWang/Pelee" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"eric612/MobileNet-YOLO" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"inducer/pyopencl" -> "inducer/pycuda" ["e"=1]
"inducer/pyopencl" -> "inducer/loopy" ["e"=1]
"microsoft/ai-edu" -> "microsoft/AI-System" ["e"=1]
"moderngpu/moderngpu" -> "NVIDIA/cub"
"moderngpu/moderngpu" -> "cudpp/cudpp"
"moderngpu/moderngpu" -> "NVIDIA/thrust"
"moderngpu/moderngpu" -> "gunrock/gunrock" ["e"=1]
"moderngpu/moderngpu" -> "NervanaSystems/maxas"
"moderngpu/moderngpu" -> "NVIDIA-developer-blog/code-samples"
"moderngpu/moderngpu" -> "eyalroz/cuda-api-wrappers"
"moderngpu/moderngpu" -> "stotko/stdgpu"
"moderngpu/moderngpu" -> "NVIDIA/libcudacxx"
"moderngpu/moderngpu" -> "NVIDIA/cccl"
"moderngpu/moderngpu" -> "NVIDIA/jitify"
"moderngpu/moderngpu" -> "cusplibrary/cusplibrary" ["e"=1]
"moderngpu/moderngpu" -> "NVIDIA/nccl" ["e"=1]
"moderngpu/moderngpu" -> "NVIDIA/multi-gpu-programming-models"
"moderngpu/moderngpu" -> "gpgpu-sim/gpgpu-sim_distribution" ["e"=1]
"openvinotoolkit/openvino" -> "uxlfoundation/oneDNN" ["e"=1]
"google/tangent" -> "facebookresearch/TensorComprehensions" ["e"=1]
"gunrock/gunrock" -> "NVIDIA/cub" ["e"=1]
"gunrock/gunrock" -> "moderngpu/moderngpu" ["e"=1]
"PacktPublishing/Learn-CUDA-Programming" -> "brucefan1983/CUDA-Programming"
"PacktPublishing/Learn-CUDA-Programming" -> "Tony-Tan/CUDA_Freshman"
"PacktPublishing/Learn-CUDA-Programming" -> "CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-"
"PacktPublishing/Learn-CUDA-Programming" -> "NVIDIA/CUDALibrarySamples"
"PacktPublishing/Learn-CUDA-Programming" -> "NVIDIA/cuda-samples" ["e"=1]
"PacktPublishing/Learn-CUDA-Programming" -> "xlite-dev/LeetCUDA"
"PacktPublishing/Learn-CUDA-Programming" -> "BBuf/how-to-optim-algorithm-in-cuda"
"PacktPublishing/Learn-CUDA-Programming" -> "CoffeeBeforeArch/cuda_programming"
"PacktPublishing/Learn-CUDA-Programming" -> "olcf/cuda-training-series"
"PacktPublishing/Learn-CUDA-Programming" -> "HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese"
"PacktPublishing/Learn-CUDA-Programming" -> "gpu-mode/lectures"
"PacktPublishing/Learn-CUDA-Programming" -> "PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA"
"PacktPublishing/Learn-CUDA-Programming" -> "Liu-xiandong/How_to_optimize_in_GPU"
"PacktPublishing/Learn-CUDA-Programming" -> "puttsk/cuda-tutorial" ["e"=1]
"PacktPublishing/Learn-CUDA-Programming" -> "flame/how-to-optimize-gemm"
"alibaba/MNN" -> "XiaoMi/mace" ["e"=1]
"rapidsai/cugraph" -> "rapidsai/rmm" ["e"=1]
"rapidsai/cugraph" -> "NVIDIA/cub" ["e"=1]
"plaidml/plaidml" -> "apple/tensorflow_macos" ["e"=1]
"plaidml/plaidml" -> "apache/tvm" ["e"=1]
"plaidml/plaidml" -> "horovod/horovod" ["e"=1]
"plaidml/plaidml" -> "NervanaSystems/ngraph"
"plaidml/plaidml" -> "hughperkins/tf-coriander" ["e"=1]
"plaidml/plaidml" -> "ROCm/ROCm" ["e"=1]
"plaidml/plaidml" -> "keras-team/autokeras" ["e"=1]
"plaidml/plaidml" -> "pytorch/glow"
"plaidml/plaidml" -> "iree-org/iree"
"plaidml/plaidml" -> "halide/Halide"
"plaidml/plaidml" -> "facebookresearch/TensorComprehensions"
"plaidml/plaidml" -> "facebookarchive/caffe2" ["e"=1]
"plaidml/plaidml" -> "apache/mxnet" ["e"=1]
"plaidml/plaidml" -> "ROCm/hip" ["e"=1]
"plaidml/plaidml" -> "EpistasisLab/tpot" ["e"=1]
"mlcommons/training" -> "mlcommons/inference"
"mlcommons/training" -> "baidu-research/DeepBench"
"mlcommons/training" -> "tensorflow/benchmarks" ["e"=1]
"mlcommons/training" -> "basicmi/AI-Chip"
"mlcommons/training" -> "uxlfoundation/oneDNN"
"mlcommons/training" -> "NVIDIA/nccl" ["e"=1]
"mlcommons/training" -> "mlcommons/training_policies"
"mlcommons/training" -> "flexflow/flexflow-train" ["e"=1]
"mlcommons/training" -> "pytorch/gloo" ["e"=1]
"mlcommons/training" -> "NVIDIA/TransformerEngine" ["e"=1]
"mlcommons/training" -> "tensorflow/mlir"
"mlcommons/training" -> "NVIDIA/gdrcopy" ["e"=1]
"mlcommons/training" -> "tensorflow/mesh" ["e"=1]
"mlcommons/training" -> "horovod/horovod" ["e"=1]
"mlcommons/training" -> "NVIDIA/nccl-tests" ["e"=1]
"NVIDIA/cutlass" -> "xlite-dev/LeetCUDA" ["e"=1]
"NVIDIA/cutlass" -> "gpu-mode/lectures" ["e"=1]
"aklomp/base64" -> "pytorch/cpuinfo" ["e"=1]
"imgbot/Imgbot" -> "LBANN/lbann" ["e"=1]
"Kobzol/hardware-effects" -> "Kobzol/hardware-effects-gpu" ["e"=1]
"NVIDIA/cuda-samples" -> "NVIDIA/CUDALibrarySamples" ["e"=1]
"NVIDIA/cuda-samples" -> "xlite-dev/LeetCUDA" ["e"=1]
"NVIDIA/cuda-samples" -> "NVIDIA/thrust" ["e"=1]
"NVIDIA/cuda-samples" -> "Tony-Tan/CUDA_Freshman" ["e"=1]
"NVIDIA/cuda-samples" -> "gpu-mode/lectures" ["e"=1]
"NVIDIA/cuda-samples" -> "NVIDIA/cccl" ["e"=1]
"NVIDIA/cuda-samples" -> "BBuf/how-to-optim-algorithm-in-cuda" ["e"=1]
"cybertronai/gradient-checkpointing" -> "facebookresearch/TensorComprehensions" ["e"=1]
"flame/blis" -> "flame/how-to-optimize-gemm"
"flame/blis" -> "libxsmm/libxsmm"
"flame/blis" -> "OpenMathLib/OpenBLAS"
"flame/blis" -> "flame/libflame"
"flame/blis" -> "flame/blislab"
"flame/blis" -> "uxlfoundation/oneDNN"
"flame/blis" -> "Reference-LAPACK/lapack" ["e"=1]
"flame/blis" -> "CNugteren/CLBlast" ["e"=1]
"flame/blis" -> "ginkgo-project/ginkgo" ["e"=1]
"flame/blis" -> "tensor-compiler/taco"
"flame/blis" -> "google/gemmlowp"
"flame/blis" -> "kokkos/kokkos" ["e"=1]
"flame/blis" -> "giaf/blasfeo" ["e"=1]
"flame/blis" -> "NVIDIA/cutlass" ["e"=1]
"flame/blis" -> "tpoisonooo/how-to-optimize-gemm"
"Tony-Tan/CUDA_Freshman" -> "BBuf/how-to-optim-algorithm-in-cuda"
"Tony-Tan/CUDA_Freshman" -> "brucefan1983/CUDA-Programming"
"Tony-Tan/CUDA_Freshman" -> "xlite-dev/LeetCUDA"
"Tony-Tan/CUDA_Freshman" -> "HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese"
"Tony-Tan/CUDA_Freshman" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Tony-Tan/CUDA_Freshman" -> "BBuf/tvm_mlir_learn"
"Tony-Tan/CUDA_Freshman" -> "godweiyang/NN-CUDA-Example"
"Tony-Tan/CUDA_Freshman" -> "NVIDIA/cuda-samples" ["e"=1]
"Tony-Tan/CUDA_Freshman" -> "zjhellofss/KuiperInfer"
"Tony-Tan/CUDA_Freshman" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"Tony-Tan/CUDA_Freshman" -> "gpu-mode/lectures"
"Tony-Tan/CUDA_Freshman" -> "NVIDIA/CUDALibrarySamples"
"Tony-Tan/CUDA_Freshman" -> "shouxieai/tensorRT_Pro" ["e"=1]
"Tony-Tan/CUDA_Freshman" -> "openmlsys/openmlsys-zh"
"Tony-Tan/CUDA_Freshman" -> "NVIDIA/FasterTransformer" ["e"=1]
"huihut/OpenCV-MinGW-Build" -> "msnh2012/Msnhnet" ["e"=1]
"flashlight/flashlight" -> "NVIDIA/thrust" ["e"=1]
"xindongzhang/MNN-APPLICATIONS" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"ARM-software/arm-trusted-firmware" -> "ARM-software/ComputeLibrary" ["e"=1]
"fritzlabs/Awesome-Mobile-Machine-Learning" -> "pytorch/QNNPACK" ["e"=1]
"OpenMathLib/OpenBLAS" -> "Reference-LAPACK/lapack" ["e"=1]
"OpenMathLib/OpenBLAS" -> "flame/how-to-optimize-gemm"
"OpenMathLib/OpenBLAS" -> "flame/blis"
"OpenMathLib/OpenBLAS" -> "ARM-software/ComputeLibrary"
"OpenMathLib/OpenBLAS" -> "uxlfoundation/oneDNN"
"OpenMathLib/OpenBLAS" -> "apache/tvm" ["e"=1]
"OpenMathLib/OpenBLAS" -> "NVIDIA/cutlass" ["e"=1]
"OpenMathLib/OpenBLAS" -> "Tencent/ncnn" ["e"=1]
"OpenMathLib/OpenBLAS" -> "google/gemmlowp"
"OpenMathLib/OpenBLAS" -> "DrTimothyAldenDavis/SuiteSparse" ["e"=1]
"OpenMathLib/OpenBLAS" -> "open-mpi/ompi" ["e"=1]
"OpenMathLib/OpenBLAS" -> "alibaba/MNN" ["e"=1]
"OpenMathLib/OpenBLAS" -> "apache/mxnet" ["e"=1]
"OpenMathLib/OpenBLAS" -> "facebookarchive/caffe2" ["e"=1]
"OpenMathLib/OpenBLAS" -> "pybind/pybind11" ["e"=1]
"ARM-software/android-nn-driver" -> "ARM-software/armnn-mlperf"
"ARM-software/android-nn-driver" -> "ARM-software/armnn"
"ARM-software/android-nn-driver" -> "intel/nn-hal"
"pytorch/glow" -> "apache/tvm" ["e"=1]
"pytorch/glow" -> "facebookresearch/TensorComprehensions"
"pytorch/glow" -> "tensorflow/mlir"
"pytorch/glow" -> "iree-org/iree"
"pytorch/glow" -> "halide/Halide"
"pytorch/glow" -> "google/gemmlowp"
"pytorch/glow" -> "merrymercy/awesome-tensor-compilers"
"pytorch/glow" -> "pytorch/QNNPACK"
"pytorch/glow" -> "llvm/torch-mlir"
"pytorch/glow" -> "IntelLabs/distiller" ["e"=1]
"pytorch/glow" -> "NervanaSystems/ngraph"
"pytorch/glow" -> "uxlfoundation/oneDNN"
"pytorch/glow" -> "pytorch/FBGEMM"
"pytorch/glow" -> "microsoft/nnfusion"
"pytorch/glow" -> "alibaba/BladeDISC"
"facebookresearch/TensorComprehensions" -> "pytorch/glow"
"facebookresearch/TensorComprehensions" -> "halide/Halide"
"facebookresearch/TensorComprehensions" -> "tensorflow/mlir"
"facebookresearch/TensorComprehensions" -> "tensor-compiler/taco"
"facebookresearch/TensorComprehensions" -> "dmlc/nnvm" ["e"=1]
"facebookresearch/TensorComprehensions" -> "NervanaSystems/ngraph"
"facebookresearch/TensorComprehensions" -> "pytorch/gloo" ["e"=1]
"facebookresearch/TensorComprehensions" -> "microsoft/nnfusion"
"facebookresearch/TensorComprehensions" -> "jiazhihao/TASO"
"facebookresearch/TensorComprehensions" -> "Tiramisu-Compiler/tiramisu"
"facebookresearch/TensorComprehensions" -> "zdevito/ATen" ["e"=1]
"facebookresearch/TensorComprehensions" -> "alibaba/BladeDISC"
"facebookresearch/TensorComprehensions" -> "apache/tvm" ["e"=1]
"facebookresearch/TensorComprehensions" -> "inducer/loopy"
"facebookresearch/TensorComprehensions" -> "google/gemmlowp"
"PaddlePaddle/Paddle-Lite" -> "XiaoMi/mace" ["e"=1]
"PaddlePaddle/Paddle-Lite" -> "ARM-software/ComputeLibrary" ["e"=1]
"inducer/pycuda" -> "inducer/pyopencl" ["e"=1]
"inducer/pycuda" -> "lebedov/scikit-cuda"
"inducer/pycuda" -> "cupy/cupy" ["e"=1]
"inducer/pycuda" -> "cudamat/cudamat"
"inducer/pycuda" -> "numba/numba" ["e"=1]
"inducer/pycuda" -> "NVIDIA/cuda-python"
"inducer/pycuda" -> "NVIDIA/cub"
"inducer/pycuda" -> "PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA"
"inducer/pycuda" -> "inducer/loopy"
"inducer/pycuda" -> "NVIDIA/thrust"
"inducer/pycuda" -> "NVIDIA-developer-blog/code-samples"
"inducer/pycuda" -> "NVIDIA/nccl" ["e"=1]
"inducer/pycuda" -> "inducer/pudb" ["e"=1]
"inducer/pycuda" -> "onnx/onnx-tensorrt" ["e"=1]
"inducer/pycuda" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"CoffeeBeforeArch/cuda_programming" -> "olcf/cuda-training-series"
"CoffeeBeforeArch/cuda_programming" -> "Infatoshi/cuda-course" ["e"=1]
"CoffeeBeforeArch/cuda_programming" -> "PacktPublishing/Learn-CUDA-Programming"
"CoffeeBeforeArch/cuda_programming" -> "siboehm/SGEMM_CUDA"
"CoffeeBeforeArch/cuda_programming" -> "CoffeeBeforeArch/cpp_crash_course"
"CoffeeBeforeArch/cuda_programming" -> "CoffeeBeforeArch/cpp_from_scratch"
"CoffeeBeforeArch/cuda_programming" -> "CoffeeBeforeArch/parallel_cpp"
"CoffeeBeforeArch/cuda_programming" -> "NVIDIA/CUDALibrarySamples"
"CoffeeBeforeArch/cuda_programming" -> "pranjalssh/fast.cu"
"CoffeeBeforeArch/cuda_programming" -> "CoffeeBeforeArch/parallel_programming"
"CoffeeBeforeArch/cuda_programming" -> "brucefan1983/CUDA-Programming"
"CoffeeBeforeArch/cuda_programming" -> "gpu-mode/resource-stream" ["e"=1]
"CoffeeBeforeArch/cuda_programming" -> "NVIDIA/cuda-samples" ["e"=1]
"CoffeeBeforeArch/cuda_programming" -> "deeperlearning/professional-cuda-c-programming"
"CoffeeBeforeArch/cuda_programming" -> "RussWong/CUDATutorial"
"banach-space/llvm-tutor" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"banach-space/llvm-tutor" -> "j2kun/mlir-tutorial" ["e"=1]
"banach-space/llvm-tutor" -> "iree-org/iree" ["e"=1]
"eric612/Caffe-YOLOv3-Windows" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"bharathgs/Awesome-Distributed-Deep-Learning" -> "mit-han-lab/inter-operator-scheduler" ["e"=1]
"bharathgs/Awesome-Distributed-Deep-Learning" -> "Jokeren/Awesome-GPU" ["e"=1]
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/cuda-samples" ["e"=1]
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/cub"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/cutlass" ["e"=1]
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/cccl"
"NVIDIA/CUDALibrarySamples" -> "Liu-xiandong/How_to_optimize_in_GPU"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/nvbench"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/CUDALibrarySamples" -> "Tony-Tan/CUDA_Freshman"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/TransformerEngine" ["e"=1]
"NVIDIA/CUDALibrarySamples" -> "NVIDIA-developer-blog/code-samples"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/FasterTransformer" ["e"=1]
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/thrust"
"NVIDIA/CUDALibrarySamples" -> "flashinfer-ai/flashinfer" ["e"=1]
"NVIDIA/CUDALibrarySamples" -> "BBuf/how-to-optim-algorithm-in-cuda"
"NVIDIA/CUDALibrarySamples" -> "brucefan1983/CUDA-Programming"
"tensorflow/community" -> "tensorflow/mlir" ["e"=1]
"sun254/awesome-model-compression-and-acceleration" -> "pytorch/QNNPACK" ["e"=1]
"pytorch/FBGEMM" -> "google/gemmlowp"
"pytorch/FBGEMM" -> "libxsmm/libxsmm"
"pytorch/FBGEMM" -> "pytorch/QNNPACK"
"pytorch/FBGEMM" -> "NVIDIA/TransformerEngine" ["e"=1]
"pytorch/FBGEMM" -> "flame/how-to-optimize-gemm"
"pytorch/FBGEMM" -> "NVIDIA-Merlin/HugeCTR" ["e"=1]
"pytorch/FBGEMM" -> "microsoft/nnfusion"
"pytorch/FBGEMM" -> "pytorch/torchrec" ["e"=1]
"pytorch/FBGEMM" -> "pytorch/kineto" ["e"=1]
"pytorch/FBGEMM" -> "IST-DASLab/marlin" ["e"=1]
"pytorch/FBGEMM" -> "pytorch/torchdynamo"
"pytorch/FBGEMM" -> "bytedance/flux" ["e"=1]
"pytorch/FBGEMM" -> "flashinfer-ai/flashinfer" ["e"=1]
"pytorch/FBGEMM" -> "llvm/torch-mlir"
"pytorch/FBGEMM" -> "tpoisonooo/how-to-optimize-gemm"
"pytorch/QNNPACK" -> "google/gemmlowp"
"pytorch/QNNPACK" -> "Tencent/FeatherCNN"
"pytorch/QNNPACK" -> "Tencent/PocketFlow" ["e"=1]
"pytorch/QNNPACK" -> "Maratyszcza/NNPACK"
"pytorch/QNNPACK" -> "IntelLabs/distiller" ["e"=1]
"pytorch/QNNPACK" -> "BUG1989/caffe-int8-convert-tools"
"pytorch/QNNPACK" -> "andravin/wincnn"
"pytorch/QNNPACK" -> "google/XNNPACK"
"pytorch/QNNPACK" -> "JDAI-CV/dabnn" ["e"=1]
"pytorch/QNNPACK" -> "flame/how-to-optimize-gemm"
"pytorch/QNNPACK" -> "ARM-software/ComputeLibrary"
"pytorch/QNNPACK" -> "XiaoMi/mace"
"pytorch/QNNPACK" -> "huawei-noah/bolt"
"pytorch/QNNPACK" -> "ARM-software/armnn"
"pytorch/QNNPACK" -> "pytorch/FBGEMM"
"openai/blocksparse" -> "NervanaSystems/maxas" ["e"=1]
"openai/blocksparse" -> "google/gemmlowp" ["e"=1]
"openai/blocksparse" -> "tensor-compiler/taco" ["e"=1]
"openai/blocksparse" -> "pytorch/FBGEMM" ["e"=1]
"openai/blocksparse" -> "openai/openai-gemm" ["e"=1]
"openai/blocksparse" -> "facebookresearch/TensorComprehensions" ["e"=1]
"openai/blocksparse" -> "baidu-research/DeepBench" ["e"=1]
"openai/blocksparse" -> "NVIDIA/cub" ["e"=1]
"openai/blocksparse" -> "NVIDIA-developer-blog/code-samples" ["e"=1]
"RRZE-HPC/gpu-benches" -> "NVIDIA/nvbench"
"RRZE-HPC/gpu-benches" -> "KnowingNothing/MatmulTutorial"
"RRZE-HPC/gpu-benches" -> "Bruce-Lee-LY/cuda_hgemm"
"RRZE-HPC/gpu-benches" -> "sjfeng1999/gpu-arch-microbenchmark"
"RRZE-HPC/gpu-benches" -> "ekondis/mixbench" ["e"=1]
"RRZE-HPC/gpu-benches" -> "cloudcores/CuAssembler"
"RRZE-HPC/gpu-benches" -> "sunlex0717/DissectingTensorCores"
"RRZE-HPC/gpu-benches" -> "NVIDIA/multi-gpu-programming-models"
"RRZE-HPC/gpu-benches" -> "Yinghan-Li/YHs_Sample"
"RRZE-HPC/gpu-benches" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"RRZE-HPC/gpu-benches" -> "accel-sim/accel-sim-framework" ["e"=1]
"RRZE-HPC/gpu-benches" -> "ColfaxResearch/cutlass-kernels"
"RRZE-HPC/gpu-benches" -> "pranjalssh/fast.cu"
"RRZE-HPC/gpu-benches" -> "TiledTensor/TiledCUDA"
"RRZE-HPC/gpu-benches" -> "Kobzol/hardware-effects-gpu"
"BBuf/how-to-optim-algorithm-in-cuda" -> "xlite-dev/LeetCUDA"
"BBuf/how-to-optim-algorithm-in-cuda" -> "BBuf/tvm_mlir_learn"
"BBuf/how-to-optim-algorithm-in-cuda" -> "BBuf/how-to-learn-deep-learning-framework"
"BBuf/how-to-optim-algorithm-in-cuda" -> "Liu-xiandong/How_to_optimize_in_GPU"
"BBuf/how-to-optim-algorithm-in-cuda" -> "gpu-mode/lectures"
"BBuf/how-to-optim-algorithm-in-cuda" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"BBuf/how-to-optim-algorithm-in-cuda" -> "flashinfer-ai/flashinfer" ["e"=1]
"BBuf/how-to-optim-algorithm-in-cuda" -> "Tony-Tan/CUDA_Freshman"
"BBuf/how-to-optim-algorithm-in-cuda" -> "zjhellofss/KuiperInfer"
"BBuf/how-to-optim-algorithm-in-cuda" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial"
"BBuf/how-to-optim-algorithm-in-cuda" -> "kvcache-ai/Mooncake" ["e"=1]
"BBuf/how-to-optim-algorithm-in-cuda" -> "brucefan1983/CUDA-Programming"
"BBuf/how-to-optim-algorithm-in-cuda" -> "ModelTC/lightllm" ["e"=1]
"BBuf/how-to-optim-algorithm-in-cuda" -> "openmlsys/openmlsys-zh"
"BBuf/how-to-optim-algorithm-in-cuda" -> "NVIDIA/cutlass" ["e"=1]
"AdaptiveCpp/AdaptiveCpp" -> "NVIDIA/cccl" ["e"=1]
"inisis/brocolli" -> "tsingmicro-toolchain/OnnxSlim" ["e"=1]
"inisis/brocolli" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"inisis/brocolli" -> "inisis/caffe" ["e"=1]
"inisis/brocolli" -> "inisis/daisy" ["e"=1]
"inisis/brocolli" -> "inisis/OnnxSlim" ["e"=1]
"tensorflow/mlir" -> "iree-org/iree"
"tensorflow/mlir" -> "tensorflow/runtime" ["e"=1]
"tensorflow/mlir" -> "pytorch/glow"
"tensorflow/mlir" -> "facebookresearch/TensorComprehensions"
"tensorflow/mlir" -> "llvm/torch-mlir"
"tensorflow/mlir" -> "halide/Halide"
"tensorflow/mlir" -> "NervanaSystems/ngraph"
"tensorflow/mlir" -> "apache/tvm" ["e"=1]
"tensorflow/mlir" -> "tensor-compiler/taco"
"tensorflow/mlir" -> "google/gemmlowp"
"tensorflow/mlir" -> "pytorch/tvm"
"tensorflow/mlir" -> "microsoft/nnfusion"
"tensorflow/mlir" -> "onnx/onnx-mlir"
"tensorflow/mlir" -> "tensorflow/mlir-hlo"
"tensorflow/mlir" -> "ONNC/onnc" ["e"=1]
"Cyan4973/FiniteStateEntropy" -> "NVIDIA/nvcomp" ["e"=1]
"XiaoMi/mace" -> "alibaba/MNN" ["e"=1]
"XiaoMi/mace" -> "Tencent/ncnn" ["e"=1]
"XiaoMi/mace" -> "Tencent/FeatherCNN"
"XiaoMi/mace" -> "Tencent/TNN" ["e"=1]
"XiaoMi/mace" -> "Tencent/PocketFlow" ["e"=1]
"XiaoMi/mace" -> "ARM-software/ComputeLibrary"
"XiaoMi/mace" -> "pytorch/QNNPACK"
"XiaoMi/mace" -> "OAID/Tengine" ["e"=1]
"XiaoMi/mace" -> "PaddlePaddle/Paddle-Lite" ["e"=1]
"XiaoMi/mace" -> "apache/tvm" ["e"=1]
"XiaoMi/mace" -> "XiaoMi/mace-models"
"XiaoMi/mace" -> "google/gemmlowp"
"XiaoMi/mace" -> "IntelLabs/distiller" ["e"=1]
"XiaoMi/mace" -> "daquexian/onnx-simplifier" ["e"=1]
"XiaoMi/mace" -> "ARM-software/armnn"
"EasonLiao/CudaTree" -> "deeplearningais/curfil"
"sdemyanov/ConvNet" -> "xingdi-eric-yuan/conv-net-version-3"
"sdemyanov/ConvNet" -> "TorontoDeepLearning/convnet"
"jetpacapp/DeepBeliefSDK" -> "google/gemmlowp" ["e"=1]
"PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA" -> "PacktPublishing/Learn-CUDA-Programming"
"PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA" -> "PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA"
"PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA" -> "inducer/pycuda"
"PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA" -> "PacktPublishing/Hands-On-GPU-Programming-with-CUDA-C-and-Python-3.x-Second-Edition"
"PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA" -> "sallenkey-wei/cuda-handbook"
"ContinuumIO/gtc2019-numba" -> "ContinuumIO/gtc2020-numba"
"BUG1989/caffe-int8-convert-tools" -> "andravin/wincnn"
"BUG1989/caffe-int8-convert-tools" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "starimeL/PytorchConverter" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "deepglint/EasyQuant" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "eric612/MobileNet-YOLO" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "pytorch/QNNPACK"
"BUG1989/caffe-int8-convert-tools" -> "JDAI-CV/dabnn" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "Tencent/FeatherCNN"
"BUG1989/caffe-int8-convert-tools" -> "shicai/MobileNet-Caffe" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "chuanqi305/MobileNetv2-SSDLite" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "PaddlePaddle/Anakin"
"BUG1989/caffe-int8-convert-tools" -> "xxradon/PytorchToCaffe" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "miaow1988/ShuffleNet_V2_pytorch_caffe" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "MTLab/onnx2caffe" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "jakc4103/DFQ" ["e"=1]
"cloudcores/CuAssembler" -> "daadaada/turingas"
"cloudcores/CuAssembler" -> "NervanaSystems/maxas"
"cloudcores/CuAssembler" -> "QianyanTech/NBAssembler"
"cloudcores/CuAssembler" -> "Yinghan-Li/YHs_Sample"
"cloudcores/CuAssembler" -> "0xD0GF00D/DocumentSASS"
"cloudcores/CuAssembler" -> "sjfeng1999/gpu-arch-microbenchmark"
"cloudcores/CuAssembler" -> "microsoft/nnfusion"
"cloudcores/CuAssembler" -> "OpenPPL/CuAssembler"
"cloudcores/CuAssembler" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"cloudcores/CuAssembler" -> "KnowingNothing/MatmulTutorial"
"cloudcores/CuAssembler" -> "NVlabs/NVBit" ["e"=1]
"cloudcores/CuAssembler" -> "PAA-NCIC/PPoPP2017_artifact"
"cloudcores/CuAssembler" -> "Liu-xiandong/How_to_optimize_in_GPU"
"cloudcores/CuAssembler" -> "Bruce-Lee-LY/cuda_hgemm"
"cloudcores/CuAssembler" -> "Cjkkkk/CUDA_gemm"
"microsoft/DirectML" -> "lshqqytiger/stable-diffusion-webui-amdgpu" ["e"=1]
"microsoft/DirectML" -> "vosen/ZLUDA" ["e"=1]
"Tencent/PocketFlow" -> "pytorch/QNNPACK" ["e"=1]
"Tencent/PocketFlow" -> "XiaoMi/mace" ["e"=1]
"Tencent/PocketFlow" -> "Tencent/FeatherCNN" ["e"=1]
"Tencent/PocketFlow" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"Tencent/PocketFlow" -> "google/gemmlowp" ["e"=1]
"PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" -> "PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" ["e"=1]
"sfzhang15/FaceBoxes" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"DLTcollab/sse2neon" -> "intel/ARM_NEON_2_x86_SSE" ["e"=1]
"DLTcollab/sse2neon" -> "jratcliff63367/sse2neon" ["e"=1]
"rapidsai/raft" -> "rapidsai/rmm" ["e"=1]
"rapidsai/raft" -> "NVIDIA/cuCollections" ["e"=1]
"rapidsai/raft" -> "NVIDIA/cub" ["e"=1]
"rapidsai/raft" -> "NVIDIA/cccl" ["e"=1]
"intel/compute-runtime" -> "uxlfoundation/oneDNN" ["e"=1]
"u39kun/deep-learning-benchmark" -> "LambdaColdStorage/lambda-tensorflow-benchmark"
"u39kun/deep-learning-benchmark" -> "baidu-research/DeepBench"
"u39kun/deep-learning-benchmark" -> "hclhkbu/dlbench"
"LambdaColdStorage/lambda-tensorflow-benchmark" -> "lambdal/deeplearning-benchmark"
"LambdaColdStorage/lambda-tensorflow-benchmark" -> "u39kun/deep-learning-benchmark"
"rapidsai/rmm" -> "NVIDIA/cuCollections"
"rapidsai/rmm" -> "NVIDIA/nvbench"
"rapidsai/rmm" -> "rapidsai/raft" ["e"=1]
"rapidsai/rmm" -> "NVIDIA/cccl"
"rapidsai/rmm" -> "NVIDIA/cnmem"
"rapidsai/rmm" -> "NVIDIA/cub"
"rapidsai/rmm" -> "NVIDIA/jitify"
"rapidsai/rmm" -> "NVIDIA/NVTX"
"rapidsai/rmm" -> "rapidsai/cuvs" ["e"=1]
"rapidsai/rmm" -> "eyalroz/cuda-api-wrappers"
"rapidsai/rmm" -> "rapidsai/kvikio" ["e"=1]
"rapidsai/rmm" -> "rapidsai/cugraph" ["e"=1]
"rapidsai/rmm" -> "NVIDIA/libcudacxx"
"rapidsai/rmm" -> "NVIDIA/MatX"
"rapidsai/rmm" -> "rapidsai/cuspatial" ["e"=1]
"flexflow/flexflow-train" -> "jiazhihao/TASO" ["e"=1]
"flexflow/flexflow-train" -> "microsoft/nnfusion" ["e"=1]
"owensgroup/SlabHash" -> "owensgroup/GpuBTree"
"owensgroup/SlabHash" -> "owensgroup/MVGpuBTree"
"owensgroup/SlabHash" -> "pzrq/megakv"
"owensgroup/SlabHash" -> "owensgroup/SlabAlloc"
"egraphs-good/egg" -> "uwplse/tensat" ["e"=1]
"egraphs-good/egg" -> "mlir-rs/melior" ["e"=1]
"symisc/sod" -> "microsoft/ELL" ["e"=1]
"symisc/sod" -> "pytorch/QNNPACK" ["e"=1]
"symisc/sod" -> "ARM-software/ComputeLibrary" ["e"=1]
"eigenteam/eigen-git-mirror" -> "OpenMathLib/OpenBLAS" ["e"=1]
"apache/incubator-nemo" -> "snuspl/pluto"
"apache/incubator-nemo" -> "snuspl/nemo"
"apache/incubator-nemo" -> "snuspl/cruise"
"apache/incubator-nemo" -> "apache/reef"
"apache/incubator-nemo" -> "snuspl/parallax"
"apache/incubator-nemo" -> "friendliai/FAI-Model"
"apache/incubator-nemo" -> "friendliai/friendli-client"
"apache/incubator-nemo" -> "friendliai/LLMServingPerfEvaluator"
"apache/incubator-nemo" -> "friendliai/periflow-python-sdk"
"JDAI-CV/DNNLibrary" -> "daquexian/dnntools"
"JDAI-CV/DNNLibrary" -> "BUG1989/ncnn-benchmark" ["e"=1]
"JDAI-CV/DNNLibrary" -> "daquexian/dnnlibrary-example"
"JDAI-CV/DNNLibrary" -> "BUG1989/caffe-int8-convert-tools"
"JDAI-CV/DNNLibrary" -> "OAID/Caffe-HRT" ["e"=1]
"JDAI-CV/DNNLibrary" -> "JDAI-CV/dabnn" ["e"=1]
"JDAI-CV/DNNLibrary" -> "PaddlePaddle/Anakin"
"JDAI-CV/DNNLibrary" -> "Tencent/FeatherCNN"
"JDAI-CV/DNNLibrary" -> "daquexian/chaoli-forum-for-android-2" ["e"=1]
"JDAI-CV/DNNLibrary" -> "erickingxu/pyBridge"
"JDAI-CV/DNNLibrary" -> "zhy520xp/mace-makefile-project" ["e"=1]
"YuanhaoGong/SideWindowFilter" -> "YuanhaoGong/CurvatureFilter"
"YuanhaoGong/SideWindowFilter" -> "Luxiush/Weighted-Guided-Image-Filter"
"YuanhaoGong/SideWindowFilter" -> "dontLoveBugs/SideWindowFilter"
"YuanhaoGong/SideWindowFilter" -> "Ldpe2G/ArmNeonOptimization"
"YuanhaoGong/SideWindowFilter" -> "YuanhaoGong/WeightedMeanCurvature"
"YuanhaoGong/SideWindowFilter" -> "Beta-y/Side_Window_Filtering"
"YuanhaoGong/SideWindowFilter" -> "sai-bi/ImageSmoothing"
"YuanhaoGong/SideWindowFilter" -> "swz30/CycleISP" ["e"=1]
"YuanhaoGong/SideWindowFilter" -> "kuan-wang/The_Bilateral_Solver" ["e"=1]
"YuanhaoGong/SideWindowFilter" -> "mgharbi/hdrnet_legacy" ["e"=1]
"mlcommons/training_policies" -> "mlcommons/training_results_v0.5"
"mlcommons/training_policies" -> "mlcommons/logging"
"XiaoMi/mace-models" -> "XiaoMi/mobile-ai-bench"
"XiaoMi/mace-models" -> "XiaoMi/kaldi-onnx" ["e"=1]
"XiaoMi/mace-models" -> "XiaoMi/mace"
"XiaoMi/mace-models" -> "XiaoMi/mace-kit"
"XiaoMi/mace-models" -> "BUG1989/caffe-int8-convert-tools"
"XiaoMi/mace-models" -> "Tencent/FeatherCNN"
"XiaoMi/mace-models" -> "szad670401/Fast-MTCNN" ["e"=1]
"rapidsai-community/notebooks-contrib" -> "rapidsai/rmm" ["e"=1]
"CoffeeBeforeArch/cpp_crash_course" -> "CoffeeBeforeArch/practical_parallelism_in_cpp"
"CoffeeBeforeArch/cpp_crash_course" -> "CoffeeBeforeArch/cpp_20_samples"
"AliveToolkit/alive2" -> "llvm/clangir" ["e"=1]
"sampsyo/bril" -> "llvm/Polygeist" ["e"=1]
"sampsyo/cs6120" -> "j2kun/mlir-tutorial" ["e"=1]
"sampsyo/cs6120" -> "kumasento/polymer" ["e"=1]
"sampsyo/cs6120" -> "facebookresearch/CompilerGym" ["e"=1]
"sampsyo/cs6120" -> "llvm/Polygeist" ["e"=1]
"cdisselkoen/llvm-ir" -> "mlir-rs/melior" ["e"=1]
"shriramsb/vDNN" -> "shriramsb/vdnn-plus-plus"
"shriramsb/vdnn-plus-plus" -> "shriramsb/vDNN"
"huiscliu/Tutorials" -> "Tony-Tan/CUDA_Freshman"
"huiscliu/Tutorials" -> "brucefan1983/CUDA-Programming"
"huiscliu/Tutorials" -> "LitLeo/TensorRT_Tutorial" ["e"=1]
"huiscliu/Tutorials" -> "Syencil/tensorRT" ["e"=1]
"huiscliu/Tutorials" -> "PacktPublishing/Learn-CUDA-Programming"
"huiscliu/Tutorials" -> "dlunion/tensorRTIntegrate" ["e"=1]
"huiscliu/Tutorials" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"huiscliu/Tutorials" -> "godweiyang/NN-CUDA-Example"
"huiscliu/Tutorials" -> "sangyc10/CUDA-code"
"huiscliu/Tutorials" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"huiscliu/Tutorials" -> "chrischoy/pytorch-custom-cuda-tutorial" ["e"=1]
"huiscliu/Tutorials" -> "udacity/cs344"
"huiscliu/Tutorials" -> "PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA"
"huiscliu/Tutorials" -> "onnx/onnx-tensorrt" ["e"=1]
"huiscliu/Tutorials" -> "BrightXiaoHan/CMakeTutorial" ["e"=1]
"BBuf/Darknet" -> "msnh2012/Msnhnet" ["e"=1]
"ferrandi/PandA-bambu" -> "kumasento/polymer" ["e"=1]
"IntelLabs/distiller" -> "pytorch/QNNPACK" ["e"=1]
"IntelLabs/distiller" -> "google/gemmlowp" ["e"=1]
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"onnx/onnx-tensorflow" -> "uxlfoundation/oneDNN" ["e"=1]
"eth-cscs/COSMA" -> "cp2k/dbcsr"
"eth-cscs/COSMA" -> "eth-cscs/SpFFT"
"eth-cscs/COSMA" -> "eth-cscs/Tiled-MM"
"eth-cscs/COSMA" -> "eth-cscs/DLA-Future"
"BBuf/Image-processing-algorithm" -> "msnh2012/Msnhnet" ["e"=1]
"BBuf/Image-processing-algorithm" -> "PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" ["e"=1]
"uTensor/uTensor" -> "ARM-software/armnn" ["e"=1]
"uTensor/uTensor" -> "microsoft/ELL" ["e"=1]
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" -> "PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" ["e"=1]
"starimeL/PytorchConverter" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"xxradon/PytorchToCaffe" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"depctg/udacity-cs344-colab" -> "udacity/cs344"
"depctg/udacity-cs344-colab" -> "nickspell/udacity-IntroToParallelProgramming"
"cudamat/cudamat" -> "lebedov/scikit-cuda"
"cudamat/cudamat" -> "andersbll/cudarray"
"cudamat/cudamat" -> "nitishsrivastava/deepnet" ["e"=1]
"cudamat/cudamat" -> "lmjohns3/theanets" ["e"=1]
"cudamat/cudamat" -> "dmlc/minerva" ["e"=1]
"cudamat/cudamat" -> "inducer/pycuda"
"cudamat/cudamat" -> "dnouri/cuda-convnet"
"cudamat/cudamat" -> "gwtaylor/theano-rnn" ["e"=1]
"cudamat/cudamat" -> "amaas/stanford-ctc" ["e"=1]
"cudamat/cudamat" -> "mila-iqia/blocks" ["e"=1]
"cudamat/cudamat" -> "EasonLiao/CudaTree"
"brucefan1983/CUDA-Programming" -> "YouQixiaowu/CUDA-Programming-with-Python"
"brucefan1983/CUDA-Programming" -> "Tony-Tan/CUDA_Freshman"
"brucefan1983/CUDA-Programming" -> "BBuf/how-to-optim-algorithm-in-cuda"
"brucefan1983/CUDA-Programming" -> "xlite-dev/LeetCUDA"
"brucefan1983/CUDA-Programming" -> "PacktPublishing/Learn-CUDA-Programming"
"brucefan1983/CUDA-Programming" -> "HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese"
"brucefan1983/CUDA-Programming" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"brucefan1983/CUDA-Programming" -> "godweiyang/NN-CUDA-Example"
"brucefan1983/CUDA-Programming" -> "Liu-xiandong/How_to_optimize_in_GPU"
"brucefan1983/CUDA-Programming" -> "NVIDIA/cuda-samples" ["e"=1]
"brucefan1983/CUDA-Programming" -> "BBuf/tvm_mlir_learn"
"brucefan1983/CUDA-Programming" -> "NVIDIA/CUDALibrarySamples"
"brucefan1983/CUDA-Programming" -> "gpu-mode/lectures"
"brucefan1983/CUDA-Programming" -> "shouxieai/tensorRT_Pro" ["e"=1]
"brucefan1983/CUDA-Programming" -> "LitLeo/TensorRT_Tutorial" ["e"=1]
"uxlfoundation/oneDPL" -> "uxlfoundation/oneDNN" ["e"=1]
"pytorch/xla" -> "openxla/xla"
"pytorch/xla" -> "facebookresearch/fairscale" ["e"=1]
"pytorch/xla" -> "NVIDIA/apex" ["e"=1]
"pytorch/xla" -> "google/flax" ["e"=1]
"pytorch/xla" -> "iree-org/iree"
"pytorch/xla" -> "llvm/torch-mlir"
"pytorch/xla" -> "NVIDIA/TransformerEngine" ["e"=1]
"pytorch/xla" -> "alibaba/BladeDISC"
"pytorch/xla" -> "google-deepmind/dm-haiku" ["e"=1]
"pytorch/xla" -> "pytorch/functorch" ["e"=1]
"pytorch/xla" -> "triton-lang/triton" ["e"=1]
"pytorch/xla" -> "pytorch/torchdynamo"
"pytorch/xla" -> "NVIDIA/nccl" ["e"=1]
"pytorch/xla" -> "pytorch/TensorRT" ["e"=1]
"pytorch/xla" -> "tensorflow/mlir-hlo"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "CVCUDA/CV-CUDA" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "LitLeo/OpenCUDA"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "BBuf/Image-processing-algorithm" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "littlebearsama/CUDA-notes"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "PacktPublishing/Learn-CUDA-Programming"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "brucefan1983/CUDA-Programming"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "PacktPublishing/Mastering-OpenCV-4-Third-Edition" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "msnh2012/Msnhnet"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "pitzer/SiftGPU" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "xiangweizeng/mobile-lpr" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "Celebrandil/CudaSift" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "ZhenghaoFei/visual_odom" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "HuangCongQing/pcl-learning" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "Syencil/tensorRT" ["e"=1]
"pytorch/extension-cpp" -> "NVIDIA-developer-blog/code-samples" ["e"=1]
"pytorch/extension-cpp" -> "NVIDIA/cccl" ["e"=1]
"pytorch/extension-cpp" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"chasingegg/Winconv" -> "TaoHuUMD/Winograd_Convolution"
"chasingegg/Winconv" -> "dorthyluu/cs194-winograd"
"kristjankorjus/Replicating-DeepMind" -> "TorontoDeepLearning/convnet" ["e"=1]
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "microsoft/AI-System"
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "openmlsys/openmlsys-zh"
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "merrymercy/awesome-tensor-compilers"
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "AmberLJC/LLMSys-PaperList" ["e"=1]
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "BBuf/tvm_mlir_learn"
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "tqchen/tinyflow" ["e"=1]
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "flashinfer-ai/flashinfer" ["e"=1]
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "bytedance/byteps" ["e"=1]
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "xlite-dev/LeetCUDA"
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial"
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "gpu-mode/lectures"
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "BBuf/how-to-optim-algorithm-in-cuda"
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "alpa-projects/alpa" ["e"=1]
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" -> "dyweb/papers-notebook" ["e"=1]
"NVIDIA/open-gpu-doc" -> "NervanaSystems/maxas" ["e"=1]
"NVIDIA/open-gpu-doc" -> "cloudcores/CuAssembler" ["e"=1]
"NVIDIA/open-gpu-doc" -> "NVIDIA/libcudacxx" ["e"=1]
"facebookarchive/BOLT" -> "tensorflow/mlir" ["e"=1]
"google-research/morph-net" -> "pytorch/QNNPACK" ["e"=1]
"spcl/dace" -> "spcl/daceml"
"spcl/dace" -> "spcl/substation"
"spcl/dace" -> "spcl/npbench"
"spcl/dace" -> "spcl/mlir-dace"
"spcl/dace" -> "cornell-zhang/heterocl" ["e"=1]
"spcl/dace" -> "spcl/dace-vscode"
"spcl/dace" -> "GridTools/gt4py"
"spcl/dace" -> "deep500/deep500"
"spcl/dace" -> "definelicht/hlslib" ["e"=1]
"spcl/dace" -> "ParRes/Kernels" ["e"=1]
"spcl/dace" -> "eth-cscs/COSMA"
"spcl/dace" -> "spcl/pymlir"
"spcl/dace" -> "spcl/open-earth-compiler"
"spcl/dace" -> "mit-han-lab/inter-operator-scheduler"
"spcl/dace" -> "NVlabs/timeloop" ["e"=1]
"Tencent/FeatherCNN" -> "PaddlePaddle/Anakin"
"Tencent/FeatherCNN" -> "pytorch/QNNPACK"
"Tencent/FeatherCNN" -> "XiaoMi/mace"
"Tencent/FeatherCNN" -> "BUG1989/caffe-int8-convert-tools"
"Tencent/FeatherCNN" -> "Tencent/PocketFlow" ["e"=1]
"Tencent/FeatherCNN" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"Tencent/FeatherCNN" -> "Maratyszcza/NNPACK"
"Tencent/FeatherCNN" -> "shicai/MobileNet-Caffe" ["e"=1]
"Tencent/FeatherCNN" -> "moli232777144/mtcnn_ncnn" ["e"=1]
"Tencent/FeatherCNN" -> "starimeL/PytorchConverter" ["e"=1]
"Tencent/FeatherCNN" -> "ARM-software/ComputeLibrary"
"Tencent/FeatherCNN" -> "huawei-noah/bolt"
"Tencent/FeatherCNN" -> "andravin/wincnn"
"Tencent/FeatherCNN" -> "Rock-100/FaceKit" ["e"=1]
"Tencent/FeatherCNN" -> "JDAI-CV/dabnn" ["e"=1]
"didi/AoE" -> "XiaoMi/mobile-ai-bench" ["e"=1]
"intel/nauta" -> "NervanaSystems/ngraph" ["e"=1]
"agenium-scale/nsimd" -> "libxsmm/libxsmm" ["e"=1]
"google/autofdo" -> "jansel/opentuner" ["e"=1]
"ARM-software/ML-KWS-for-MCU" -> "ARM-software/armnn" ["e"=1]
"xuqiantong/CUDA-Winograd" -> "andravin/wincnn"
"xuqiantong/CUDA-Winograd" -> "md2z34/winograd_gpu"
"xuqiantong/CUDA-Winograd" -> "pku-liang/FlexTensor"
"xuqiantong/CUDA-Winograd" -> "qsyao/cudaBERT"
"xuqiantong/CUDA-Winograd" -> "c3sr/tcu_scope"
"xuqiantong/CUDA-Winograd" -> "thu-pacman/PET"
"xuqiantong/CUDA-Winograd" -> "UDC-GAC/openCNN"
"xuqiantong/CUDA-Winograd" -> "xingyul/sparse-winograd-cnn"
"ROCm/llvm-project" -> "ROCm/rocMLIR" ["e"=1]
"qsyao/cudaBERT" -> "qsyao/cuda_spatial_deform"
"wkcn/MobulaOP" -> "wkcn/mobula"
"wkcn/MobulaOP" -> "szha/mxnet-jit-batch"
"networkservicemesh/networkservicemesh" -> "ctuning/ck-tensorflow" ["e"=1]
"facebook/FAI-PEP" -> "enyac-group/single-path-nas" ["e"=1]
"facebook/FAI-PEP" -> "pytorch/QNNPACK"
"facebook/FAI-PEP" -> "XiaoMi/mobile-ai-bench"
"pytorch/tvm" -> "d2l-ai/d2l-tvm"
"pytorch/tvm" -> "merrymercy/tvm-mali"
"pytorch/tvm" -> "tvmai/meetup-slides"
"pytorch/tvm" -> "vinx13/tvm-cuda-int8-benchmark"
"pytorch/tvm" -> "pytorch/QNNPACK"
"pytorch/tvm" -> "tqchen/ffi-navigator"
"pytorch/tvm" -> "jiazhihao/TASO"
"pytorch/tvm" -> "tlc-pack/tophub"
"pytorch/tvm" -> "tensorflow/mlir"
"pytorch/tvm" -> "tlc-pack/relax"
"pytorch/tvm" -> "microsoft/nnfusion"
"pytorch/tvm" -> "dmlc/dlpack"
"pytorch/tvm" -> "StrongSpoon/tvm.schedule"
"pytorch/tvm" -> "tensorflow/mlir-hlo"
"ONNC/onnc" -> "onnx/onnx-mlir" ["e"=1]
"ONNC/onnc" -> "tensorflow/mlir" ["e"=1]
"ONNC/onnc" -> "NervanaSystems/ngraph" ["e"=1]
"borgwang/tinynn" -> "msnh2012/Msnhnet" ["e"=1]
"TorontoDeepLearning/convnet" -> "akrizhevsky/cuda-convnet2"
"TorontoDeepLearning/convnet" -> "sdemyanov/ConvNet"
"TorontoDeepLearning/convnet" -> "NervanaSystems/nervanagpu"
"TorontoDeepLearning/convnet" -> "dnouri/cuda-convnet"
"NVIDIA/multi-gpu-programming-models" -> "FZJ-JSC/tutorial-multi-gpu"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/gdrcopy" ["e"=1]
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/nvbench"
"NVIDIA/multi-gpu-programming-models" -> "bytedance/flux" ["e"=1]
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/nccl-tests" ["e"=1]
"NVIDIA/multi-gpu-programming-models" -> "RRZE-HPC/gpu-benches"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/jitify"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/nvbandwidth" ["e"=1]
"NVIDIA/multi-gpu-programming-models" -> "KnowingNothing/MatmulTutorial"
"NVIDIA/multi-gpu-programming-models" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA-developer-blog/code-samples"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/cuCollections"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/nccl" ["e"=1]
"NVIDIA/multi-gpu-programming-models" -> "microsoft/msccl" ["e"=1]
"NVIDIA/multi-gpu-programming-models" -> "UoB-HPC/BabelStream" ["e"=1]
"rapidsai/notebooks" -> "rapidsai/rmm" ["e"=1]
"longcw/pytorch2caffe" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"ARM-software/ML-examples" -> "ARM-software/armnn" ["e"=1]
"ARM-software/ML-examples" -> "ARM-software/ComputeLibrary" ["e"=1]
"ARM-software/ML-examples" -> "ARM-software/android-nn-driver" ["e"=1]
"OpenACC/openacc-training-materials" -> "OpenACC/openacc-best-practices-guide"
"Ldpe2G/ArmNeonOptimization" -> "rogerou/Arm-neon-intrinsics"
"Ldpe2G/ArmNeonOptimization" -> "YuanhaoGong/SideWindowFilter"
"Ldpe2G/ArmNeonOptimization" -> "BBuf/ArmNeonOptimization"
"Ldpe2G/ArmNeonOptimization" -> "thenifty/neon-guide"
"Ldpe2G/ArmNeonOptimization" -> "tpoisonooo/how-to-optimize-gemm"
"Ldpe2G/ArmNeonOptimization" -> "msnh2012/Msnhnet"
"Ldpe2G/ArmNeonOptimization" -> "intel/ARM_NEON_2_x86_SSE"
"Ldpe2G/ArmNeonOptimization" -> "HuiiJi/AISP" ["e"=1]
"Mysticial/Flops" -> "tud-zih-energy/FIRESTARTER"
"Mysticial/Flops" -> "libxsmm/libxsmm"
"snuspl/parallax" -> "snuspl/pluto"
"snuspl/parallax" -> "snuspl/cruise"
"snuspl/parallax" -> "snuspl/nemo"
"snuspl/parallax" -> "apache/incubator-nemo"
"snuspl/parallax" -> "friendliai/periflow-python-sdk"
"snuspl/parallax" -> "friendliai/friendli-client"
"snuspl/parallax" -> "apache/reef"
"snuspl/parallax" -> "friendliai/FAI-Model"
"maestro-project/maestro" -> "pku-liang/TileFlow" ["e"=1]
"keroro824/HashingDeepLearning" -> "RUSH-LAB/SLIDE"
"keroro824/HashingDeepLearning" -> "IntelLabs/SLIDE_opt_ia"
"keroro824/HashingDeepLearning" -> "google/neural-tangents" ["e"=1]
"keroro824/HashingDeepLearning" -> "openai/blocksparse" ["e"=1]
"keroro824/HashingDeepLearning" -> "tensorflow/mesh" ["e"=1]
"keroro824/HashingDeepLearning" -> "jiazhihao/TASO"
"keroro824/HashingDeepLearning" -> "dblalock/bolt" ["e"=1]
"keroro824/HashingDeepLearning" -> "uwplse/tensat"
"facebookresearch/kill-the-bits" -> "pytorch/QNNPACK" ["e"=1]
"in66-dev/In-Prestissimo" -> "PaddlePaddle/Anakin" ["e"=1]
"in66-dev/In-Prestissimo" -> "Tencent/FeatherCNN" ["e"=1]
"zhihu/cuBERT" -> "qsyao/cudaBERT" ["e"=1]
"PaddlePaddle/Anakin" -> "Tencent/FeatherCNN"
"PaddlePaddle/Anakin" -> "BUG1989/caffe-int8-convert-tools"
"PaddlePaddle/Anakin" -> "luoyetx/mini-caffe" ["e"=1]
"PaddlePaddle/Anakin" -> "huawei-noah/bolt"
"PaddlePaddle/Anakin" -> "andravin/wincnn"
"PaddlePaddle/Anakin" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"PaddlePaddle/Anakin" -> "JDAI-CV/dabnn" ["e"=1]
"PaddlePaddle/Anakin" -> "pytorch/QNNPACK"
"PaddlePaddle/Anakin" -> "google/gemmlowp"
"PaddlePaddle/Anakin" -> "in66-dev/In-Prestissimo" ["e"=1]
"PaddlePaddle/Anakin" -> "OAID/Caffe-HRT" ["e"=1]
"PaddlePaddle/Anakin" -> "Maratyszcza/NNPACK"
"PaddlePaddle/Anakin" -> "olojuwin/facerecognize-for-mobile-phone" ["e"=1]
"PaddlePaddle/Anakin" -> "XiaoMi/mobile-ai-bench"
"PaddlePaddle/Anakin" -> "ARM-software/ComputeLibrary"
"tpoisonooo/how-to-optimize-gemm" -> "flame/blislab"
"tpoisonooo/how-to-optimize-gemm" -> "flame/how-to-optimize-gemm"
"tpoisonooo/how-to-optimize-gemm" -> "Yinghan-Li/YHs_Sample"
"tpoisonooo/how-to-optimize-gemm" -> "Cjkkkk/CUDA_gemm"
"tpoisonooo/how-to-optimize-gemm" -> "Liu-xiandong/How_to_optimize_in_GPU"
"tpoisonooo/how-to-optimize-gemm" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"tpoisonooo/how-to-optimize-gemm" -> "KnowingNothing/MatmulTutorial"
"tpoisonooo/how-to-optimize-gemm" -> "MegEngine/MegCC"
"tpoisonooo/how-to-optimize-gemm" -> "pigirons/cpufp"
"tpoisonooo/how-to-optimize-gemm" -> "njuhope/cuda_sgemm"
"tpoisonooo/how-to-optimize-gemm" -> "OpenPPL/ppl.nn"
"tpoisonooo/how-to-optimize-gemm" -> "BBuf/how-to-optim-algorithm-in-cuda"
"tpoisonooo/how-to-optimize-gemm" -> "Bruce-Lee-LY/cuda_hgemm"
"tpoisonooo/how-to-optimize-gemm" -> "tpoisonooo/chgemm"
"tpoisonooo/how-to-optimize-gemm" -> "yzhaiustc/Optimizing-DGEMM-on-Intel-CPUs-with-AVX512F"
"pku-liang/FlexTensor" -> "pku-liang/AMOS"
"pku-liang/FlexTensor" -> "mit-han-lab/inter-operator-scheduler"
"pku-liang/FlexTensor" -> "UofT-EcoSystem/DietCode"
"pku-liang/FlexTensor" -> "microsoft/nnfusion"
"pku-liang/FlexTensor" -> "pku-liang/TileFlow"
"pku-liang/FlexTensor" -> "zhaiyi000/tlp"
"pku-liang/FlexTensor" -> "jiazhihao/TASO"
"mosharaf/eecs598" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["e"=1]
"gvtulder/elasticdeform" -> "qsyao/cuda_spatial_deform"
"gvtulder/elasticdeform" -> "fcalvet/image_tools"
"gvtulder/elasticdeform" -> "google-deepmind/multidim-image-augmentation"
"krrishnarraj/clpeak" -> "MegEngine/MegPeak" ["e"=1]
"vinx13/tvm-cuda-int8-benchmark" -> "masahi/tvm-winograd"
"dnouri/cuda-convnet" -> "akrizhevsky/cuda-convnet2"
"ROCm/AMDMIGraphX" -> "ROCm/rocMLIR" ["e"=1]
"XiaoMi/mobile-ai-bench" -> "XiaoMi/mace-models"
"XiaoMi/mobile-ai-bench" -> "Tencent/FeatherCNN"
"XiaoMi/mobile-ai-bench" -> "HolmesShuan/CNN-Inference-Engine-Quick-View"
"XiaoMi/mobile-ai-bench" -> "OAID/Caffe-HRT" ["e"=1]
"XiaoMi/mobile-ai-bench" -> "huawei-noah/bolt"
"XiaoMi/mobile-ai-bench" -> "AI-performance/embedded-ai.bench"
"XiaoMi/mobile-ai-bench" -> "pytorch/QNNPACK"
"XiaoMi/mobile-ai-bench" -> "BUG1989/caffe-int8-convert-tools"
"XiaoMi/mobile-ai-bench" -> "PaddlePaddle/Anakin"
"XiaoMi/mobile-ai-bench" -> "XiaoMi/mace"
"XiaoMi/mobile-ai-bench" -> "starimeL/PytorchConverter" ["e"=1]
"alibaba/ai-matrix" -> "mlcommons/training_policies"
"alibaba/ai-matrix" -> "AngusG/tensorflow-xnor-bnn" ["e"=1]
"Cambricon/caffe" -> "Cambricon/caffe_boost"
"Cambricon/caffe" -> "Cambricon/CNStream"
"Cambricon/caffe" -> "Cambricon/Cambricon-Gst"
"ParRes/Kernels" -> "libxsmm/libxsmm" ["e"=1]
"ParRes/Kernels" -> "cp2k/dbcsr" ["e"=1]
"szha/KDD18-Gluon" -> "szha/mxnet-jit-batch" ["e"=1]
"mlcommons/training_results_v0.5" -> "mlcommons/training_policies"
"cp2k/dbcsr" -> "sfilippone/psblas3" ["e"=1]
"cp2k/dbcsr" -> "eth-cscs/COSMA"
"cp2k/dbcsr" -> "jacobwilliams/quadpack"
"rogerou/Arm-neon-intrinsics" -> "Ldpe2G/ArmNeonOptimization"
"rogerou/Arm-neon-intrinsics" -> "thenifty/neon-guide"
"rogerou/Arm-neon-intrinsics" -> "BBuf/ArmNeonOptimization"
"rogerou/Arm-neon-intrinsics" -> "chunhuajiang/arm-gcc-inline-assembler"
"rogerou/Arm-neon-intrinsics" -> "andravin/wincnn"
"rogerou/Arm-neon-intrinsics" -> "carlushuang/cpu_gemm_opt"
"rogerou/Arm-neon-intrinsics" -> "tpoisonooo/how-to-optimize-gemm"
"rogerou/Arm-neon-intrinsics" -> "intel/ARM_NEON_2_x86_SSE"
"Kobzol/hardware-effects-gpu" -> "Kobzol/hardware-effects" ["e"=1]
"Kobzol/hardware-effects-gpu" -> "RRZE-HPC/gpu-benches"
"Kobzol/hardware-effects-gpu" -> "NVIDIA/nvbench"
"Kobzol/hardware-effects-gpu" -> "leimao/CUDA-GEMM-Optimization"
"Kobzol/hardware-effects-gpu" -> "Bruce-Lee-LY/cuda_hgemm"
"Kobzol/hardware-effects-gpu" -> "ColfaxResearch/cutlass-kernels"
"harrism/numba_examples" -> "ContinuumIO/gtc2017-numba"
"MTLab/onnx2caffe" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"owensgroup/GpuBTree" -> "owensgroup/MVGpuBTree"
"owensgroup/GpuBTree" -> "owensgroup/SlabHash"
"flame/libflame" -> "amd/libflame"
"flame/libflame" -> "flame/blis"
"ScientificClubofESI/LaraHack" -> "NEDJIMAbelgacem/Graphics_Engine"
"ScientificClubofESI/LaraHack" -> "projeduc/intro_apprentissage_automatique"
"rbaygildin/learn-gpgpu" -> "gmarciani/cudawesome"
"ARM-software/Tool-Solutions" -> "ARM-software/armnn-mlperf"
"envytools/envytools" -> "NervanaSystems/maxas" ["e"=1]
"xiangweizeng/darknet2ncnn" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"chuanqi305/MobileNetv2-SSDLite" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"fqnchina/ImageSmoothing" -> "zhufeida/Benchmark_EPS"
"MeteoSwiss-APN/dawn" -> "GridTools/gridtools"
"GridTools/gridtools" -> "GridTools/gt4py"
"GridTools/gridtools" -> "MeteoSwiss-APN/dawn"
"awslabs/mxboard" -> "wkcn/MobulaOP" ["e"=1]
"NervanaSystems/ngraph-tf" -> "tensorflow/ngraph-bridge"
"NervanaSystems/ngraph-tf" -> "NervanaSystems/ngraph-tensorflow-bridge"
"ValeevGroup/tiledarray" -> "cp2k/dbcsr" ["e"=1]
"Luxiush/Weighted-Guided-Image-Filter" -> "RockeyDon/Gradient-Domain-Guided-Image-Filtering"
"intel/cm-compiler" -> "intel/xetla" ["e"=1]
"merrymercy/tvm-mali" -> "szad670401/tvm_benchmark_cpp"
"merrymercy/tvm-mali" -> "tlc-pack/TLCBench"
"rgavaska/Fast-Adaptive-Bilateral-Filtering" -> "GKalliatakis/Bilateral-Filtering"
"rgavaska/Fast-Adaptive-Bilateral-Filtering" -> "bigmms/chen_spl20_gabf"
"rgavaska/Fast-Adaptive-Bilateral-Filtering" -> "wliusjtu/Embedding-Bilateral-Filter-in-Least-Squares-for-Efficient-Edge-preserving-Image-Smoothing"
"rgavaska/Fast-Adaptive-Bilateral-Filtering" -> "Luxiush/Weighted-Guided-Image-Filter"
"cornell-zhang/heterocl" -> "kumasento/polymer" ["e"=1]
"wzsh/wmma_tensorcore_sample" -> "wmmae/wmma_extension"
"wzsh/wmma_tensorcore_sample" -> "nicolaswilde/cuda-tensorcore-hgemm"
"wzsh/wmma_tensorcore_sample" -> "Cjkkkk/CUDA_gemm"
"qsyao/cuda_spatial_deform" -> "qsyao/cudaBERT"
"qsyao/cuda_spatial_deform" -> "gvtulder/elasticdeform"
"metricq/aiocouch" -> "metricq/metricq-python"
"xingyul/sparse-winograd-cnn" -> "andravin/wincnn"
"xingyul/sparse-winograd-cnn" -> "IntelLabs/SkimCaffe" ["e"=1]
"xingyul/sparse-winograd-cnn" -> "jafermarq/WinogradAwareNets"
"xingyul/sparse-winograd-cnn" -> "dorthyluu/cs194-winograd"
"xingyul/sparse-winograd-cnn" -> "xuqiantong/CUDA-Winograd"
"deeplearningais/curfil" -> "EasonLiao/CudaTree"
"metricq/metricq" -> "metricq/metricq-python"
"metricq/metricq" -> "tud-zih-energy/lo2s"
"szha/mxnet-jit-batch" -> "awslabs/lorien"
"RockeyDon/Gradient-Domain-Guided-Image-Filtering" -> "biswajitcsecu/-Color-multi-focus-image-fusion-using-Guided-and-Bilateral-filter-based-on-focus-region-detection-in"
"ContinuumIO/gtc2018-numba" -> "ContinuumIO/gtc2019-numba"
"tensorflow/ngraph-bridge" -> "NervanaSystems/ngraph-tf"
"tensorflow/ngraph-bridge" -> "NervanaSystems/ngraph-tensorflow-bridge"
"LLNL/Aluminum" -> "BaguaSys/bagua-net"
"inisis/Capella" -> "inisis/onion"
"inisis/Capella" -> "inisis/chexpert"
"inisis/Capella" -> "WeLoveAI/onnx2torch"
"inisis/Capella" -> "inisis/daisy"
"inisis/Capella" -> "inisis/bilibili-video"
"inisis/Capella" -> "inisis/OnnxLLM"
"inisis/Capella" -> "inisis/caffe"
"inisis/Capella" -> "inisis/caffe2onnx"
"inisis/Capella" -> "inisis/katago-benchmark"
"inisis/Capella" -> "inisis/machine-learning-facial-deformer"
"csjunxu/Image-Smoothing-State-of-the-art" -> "wliusjtu/Semi-Global-Weighted-Least-Squares-in-Image-Filtering"
"swsnu/bd2018" -> "friendliai/friendli-model-optimizer"
"zhufeida/Benchmark_EPS" -> "fqnchina/ImageSmoothing"
"zhufeida/Benchmark_EPS" -> "wliusjtu/Semi-Global-Weighted-Least-Squares-in-Image-Filtering"
"inisis/daisy" -> "inisis/chexpert"
"inisis/daisy" -> "inisis/onion"
"inisis/DFace" -> "inisis/onion"
"inisis/DFace" -> "inisis/chexpert"
"inisis/caffe" -> "inisis/onion"
"periscop/cloog" -> "inducer/islpy"
"periscop/cloog" -> "Meinersbur/pet"
"periscop/cloog" -> "periscop/piplib"
"linnanwang/superneurons-release" -> "shriramsb/vDNN"
"linnanwang/superneurons-release" -> "shriramsb/vdnn-plus-plus"
"iree-org/iree" -> "llvm/torch-mlir"
"iree-org/iree" -> "onnx/onnx-mlir"
"iree-org/iree" -> "merrymercy/awesome-tensor-compilers"
"iree-org/iree" -> "openxla/xla"
"iree-org/iree" -> "buddy-compiler/buddy-mlir"
"iree-org/iree" -> "BBuf/tvm_mlir_learn"
"iree-org/iree" -> "alibaba/BladeDISC"
"iree-org/iree" -> "tensorflow/mlir-hlo"
"iree-org/iree" -> "tensorflow/mlir"
"iree-org/iree" -> "j2kun/mlir-tutorial"
"iree-org/iree" -> "microsoft/nnfusion"
"iree-org/iree" -> "llvm/circt" ["e"=1]
"iree-org/iree" -> "openxla/stablehlo"
"iree-org/iree" -> "apache/tvm" ["e"=1]
"iree-org/iree" -> "triton-lang/triton" ["e"=1]
"projectNe10/Ne10" -> "ARM-software/ComputeLibrary"
"projectNe10/Ne10" -> "intel/ARM_NEON_2_x86_SSE"
"projectNe10/Ne10" -> "google/gemmlowp"
"projectNe10/Ne10" -> "pytorch/QNNPACK"
"projectNe10/Ne10" -> "thenifty/neon-guide"
"projectNe10/Ne10" -> "ermig1979/Simd" ["e"=1]
"projectNe10/Ne10" -> "ARM-software/armnn"
"projectNe10/Ne10" -> "Maratyszcza/NNPACK"
"projectNe10/Ne10" -> "Tencent/FeatherCNN"
"projectNe10/Ne10" -> "andravin/wincnn"
"projectNe10/Ne10" -> "ARM-software/optimized-routines"
"projectNe10/Ne10" -> "flame/how-to-optimize-gemm"
"projectNe10/Ne10" -> "andrepuschmann/math-neon"
"projectNe10/Ne10" -> "kfrlib/kfr" ["e"=1]
"projectNe10/Ne10" -> "halide/Halide"
"microsoft/AI-System" -> "openmlsys/openmlsys-zh"
"microsoft/AI-System" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero"
"microsoft/AI-System" -> "BBuf/tvm_mlir_learn"
"microsoft/AI-System" -> "merrymercy/awesome-tensor-compilers"
"microsoft/AI-System" -> "xlite-dev/LeetCUDA"
"microsoft/AI-System" -> "BBuf/how-to-optim-algorithm-in-cuda"
"microsoft/AI-System" -> "chenzomi12/AISystem"
"microsoft/AI-System" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"microsoft/AI-System" -> "gpu-mode/lectures"
"microsoft/AI-System" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial"
"microsoft/AI-System" -> "microsoft/ai-edu" ["e"=1]
"microsoft/AI-System" -> "zjhellofss/KuiperInfer"
"microsoft/AI-System" -> "kvcache-ai/Mooncake" ["e"=1]
"microsoft/AI-System" -> "flashinfer-ai/flashinfer" ["e"=1]
"microsoft/AI-System" -> "apache/tvm" ["e"=1]
"arrayfire/arrayfire" -> "NVIDIA/thrust" ["e"=1]
"arrayfire/arrayfire" -> "NVIDIA/cub" ["e"=1]
"arrayfire/arrayfire" -> "halide/Halide" ["e"=1]
"facebookresearch/fairscale" -> "pytorch/torchdynamo" ["e"=1]
"zwang4/awesome-machine-learning-in-compilers" -> "merrymercy/awesome-tensor-compilers"
"zwang4/awesome-machine-learning-in-compilers" -> "KnowingNothing/compiler-and-arch"
"zwang4/awesome-machine-learning-in-compilers" -> "BBuf/tvm_mlir_learn"
"zwang4/awesome-machine-learning-in-compilers" -> "facebookresearch/CompilerGym"
"zwang4/awesome-machine-learning-in-compilers" -> "llvm/torch-mlir"
"zwang4/awesome-machine-learning-in-compilers" -> "google/ml-compiler-opt"
"zwang4/awesome-machine-learning-in-compilers" -> "j2kun/mlir-tutorial"
"zwang4/awesome-machine-learning-in-compilers" -> "iree-org/iree"
"zwang4/awesome-machine-learning-in-compilers" -> "buddy-compiler/buddy-mlir"
"zwang4/awesome-machine-learning-in-compilers" -> "banach-space/llvm-tutor" ["e"=1]
"zwang4/awesome-machine-learning-in-compilers" -> "onnx/onnx-mlir"
"zwang4/awesome-machine-learning-in-compilers" -> "microsoft/nnfusion"
"zwang4/awesome-machine-learning-in-compilers" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero"
"zwang4/awesome-machine-learning-in-compilers" -> "shining1984/PL-Compiler-Resource" ["e"=1]
"zwang4/awesome-machine-learning-in-compilers" -> "llvm/Polygeist"
"Evian-Zhang/llvm-ir-tutorial" -> "BBuf/tvm_mlir_learn" ["e"=1]
"Evian-Zhang/llvm-ir-tutorial" -> "buddy-compiler/buddy-mlir" ["e"=1]
"Evian-Zhang/llvm-ir-tutorial" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"vosen/ZLUDA" -> "ROCm/ROCm" ["e"=1]
"vosen/ZLUDA" -> "lshqqytiger/ZLUDA"
"vosen/ZLUDA" -> "NVIDIA/open-gpu-kernel-modules" ["e"=1]
"vosen/ZLUDA" -> "lshqqytiger/stable-diffusion-webui-amdgpu"
"vosen/ZLUDA" -> "tracel-ai/burn" ["e"=1]
"vosen/ZLUDA" -> "HigherOrderCO/Bend" ["e"=1]
"vosen/ZLUDA" -> "vladmandic/sdnext" ["e"=1]
"vosen/ZLUDA" -> "doitsujin/dxvk" ["e"=1]
"vosen/ZLUDA" -> "triton-lang/triton" ["e"=1]
"vosen/ZLUDA" -> "ROCm/hip" ["e"=1]
"vosen/ZLUDA" -> "Rust-GPU/Rust-CUDA" ["e"=1]
"vosen/ZLUDA" -> "rui314/mold" ["e"=1]
"vosen/ZLUDA" -> "huggingface/candle" ["e"=1]
"vosen/ZLUDA" -> "gfx-rs/wgpu" ["e"=1]
"vosen/ZLUDA" -> "ValveSoftware/Proton" ["e"=1]
"NVIDIA/nvidia-container-toolkit" -> "NVIDIA/cccl" ["e"=1]
"mlpack/mlpack" -> "NVIDIA/thrust" ["e"=1]
"Jittor/jittor" -> "microsoft/nnfusion" ["e"=1]
"Jittor/jittor" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"Jittor/jittor" -> "alibaba/BladeDISC" ["e"=1]
"Jittor/jittor" -> "halide/Halide" ["e"=1]
"Jittor/jittor" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["e"=1]
"pytorch/TensorRT" -> "OpenPPL/ppl.nn" ["e"=1]
"stas00/ml-engineering" -> "gpu-mode/lectures" ["e"=1]
"deepglint/EasyQuant" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"NVIDIA/libcudacxx" -> "NVIDIA/cub"
"NVIDIA/libcudacxx" -> "NVIDIA/thrust"
"NVIDIA/libcudacxx" -> "NVIDIA/cccl"
"NVIDIA/libcudacxx" -> "NVIDIA/cuCollections"
"NVIDIA/libcudacxx" -> "stotko/stdgpu"
"NVIDIA/libcudacxx" -> "NVIDIA/jitify"
"NVIDIA/libcudacxx" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/libcudacxx" -> "NVIDIA/MatX"
"NVIDIA/libcudacxx" -> "NVIDIA/nvbench"
"NVIDIA/libcudacxx" -> "NVIDIA/stdexec" ["e"=1]
"NVIDIA/libcudacxx" -> "NVIDIA/gdrcopy" ["e"=1]
"NVIDIA/libcudacxx" -> "rapidsai/rmm"
"NVIDIA/libcudacxx" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/libcudacxx" -> "NVIDIA/cutlass" ["e"=1]
"NVIDIA/libcudacxx" -> "AdaptiveCpp/AdaptiveCpp" ["e"=1]
"olcf/cuda-training-series" -> "gpu-mode/resource-stream" ["e"=1]
"olcf/cuda-training-series" -> "CoffeeBeforeArch/cuda_programming"
"olcf/cuda-training-series" -> "siboehm/SGEMM_CUDA"
"olcf/cuda-training-series" -> "gpu-mode/lectures"
"olcf/cuda-training-series" -> "Liu-xiandong/How_to_optimize_in_GPU"
"olcf/cuda-training-series" -> "PacktPublishing/Learn-CUDA-Programming"
"olcf/cuda-training-series" -> "NVIDIA/multi-gpu-programming-models"
"olcf/cuda-training-series" -> "BBuf/how-to-optim-algorithm-in-cuda"
"olcf/cuda-training-series" -> "FZJ-JSC/tutorial-multi-gpu"
"olcf/cuda-training-series" -> "srush/Triton-Puzzles" ["e"=1]
"olcf/cuda-training-series" -> "HazyResearch/ThunderKittens" ["e"=1]
"olcf/cuda-training-series" -> "xlite-dev/LeetCUDA"
"olcf/cuda-training-series" -> "NVIDIA/cccl"
"olcf/cuda-training-series" -> "pranjalssh/fast.cu"
"olcf/cuda-training-series" -> "leimao/CUDA-GEMM-Optimization"
"huangrt01/CS-Notes" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["e"=1]
"plctlab/PLCT-Weekly" -> "buddy-compiler/buddy-mlir" ["e"=1]
"NervanaSystems/neon" -> "Maratyszcza/NNPACK" ["e"=1]
"soumith/convnet-benchmarks" -> "Maratyszcza/NNPACK" ["e"=1]
"soumith/convnet-benchmarks" -> "google/gemmlowp" ["e"=1]
"soumith/convnet-benchmarks" -> "baidu-research/DeepBench" ["e"=1]
"andersbll/deeppy" -> "andersbll/cudarray" ["e"=1]
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "tensorflow/mlir-hlo"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "microsoft/nnfusion"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "alibaba/ai-matrix"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "alibaba/BladeDISC"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "buddy-compiler/buddy-mlir"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "tpoisonooo/how-to-optimize-gemm"
"stotko/stdgpu" -> "eyalroz/cuda-api-wrappers"
"stotko/stdgpu" -> "NVIDIA/cuCollections"
"stotko/stdgpu" -> "NVIDIA/libcudacxx"
"stotko/stdgpu" -> "NVIDIA/MatX"
"stotko/stdgpu" -> "NVIDIA/jitify"
"stotko/stdgpu" -> "martinus/nanobench" ["e"=1]
"stotko/stdgpu" -> "NVIDIA/cub"
"stotko/stdgpu" -> "xtensor-stack/xsimd" ["e"=1]
"stotko/stdgpu" -> "NVIDIA/cccl"
"stotko/stdgpu" -> "eliaskosunen/scnlib" ["e"=1]
"stotko/stdgpu" -> "neka-nat/cupoch" ["e"=1]
"stotko/stdgpu" -> "NVIDIA/thrust"
"stotko/stdgpu" -> "moderngpu/moderngpu"
"stotko/stdgpu" -> "nvidia-isaac/nvblox" ["e"=1]
"stotko/stdgpu" -> "jfalcou/eve" ["e"=1]
"NervanaSystems/maxas" -> "cloudcores/CuAssembler"
"NervanaSystems/maxas" -> "daadaada/turingas"
"NervanaSystems/maxas" -> "flame/how-to-optimize-gemm"
"NervanaSystems/maxas" -> "gpgpu-sim/gpgpu-sim_distribution" ["e"=1]
"NervanaSystems/maxas" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"NervanaSystems/maxas" -> "Yinghan-Li/YHs_Sample"
"NervanaSystems/maxas" -> "NVIDIA/cub"
"NervanaSystems/maxas" -> "eBay/maxDNN"
"NervanaSystems/maxas" -> "openai/openai-gemm"
"NervanaSystems/maxas" -> "hyqneuron/asfermi"
"NervanaSystems/maxas" -> "Liu-xiandong/How_to_optimize_in_GPU"
"NervanaSystems/maxas" -> "NervanaSystems/nervanagpu"
"NervanaSystems/maxas" -> "Cjkkkk/CUDA_gemm"
"NervanaSystems/maxas" -> "PAA-NCIC/PPoPP2017_artifact"
"NervanaSystems/maxas" -> "libxsmm/libxsmm"
"google/XNNPACK" -> "pytorch/QNNPACK"
"google/XNNPACK" -> "google/gemmlowp"
"google/XNNPACK" -> "google/ruy"
"google/XNNPACK" -> "ARM-software/armnn"
"google/XNNPACK" -> "ARM-software/ComputeLibrary"
"google/XNNPACK" -> "flame/how-to-optimize-gemm"
"google/XNNPACK" -> "microsoft/nnfusion"
"google/XNNPACK" -> "iree-org/iree"
"google/XNNPACK" -> "Maratyszcza/NNPACK"
"google/XNNPACK" -> "uxlfoundation/oneDNN"
"google/XNNPACK" -> "libxsmm/libxsmm"
"google/XNNPACK" -> "pytorch/FBGEMM"
"google/XNNPACK" -> "huawei-noah/bolt"
"google/XNNPACK" -> "onnx/onnx-mlir"
"google/XNNPACK" -> "tensorflow/runtime" ["e"=1]
"libxsmm/libxsmm" -> "flame/blis"
"libxsmm/libxsmm" -> "pytorch/FBGEMM"
"libxsmm/libxsmm" -> "NervanaSystems/maxas"
"libxsmm/libxsmm" -> "flame/blislab"
"libxsmm/libxsmm" -> "flame/how-to-optimize-gemm"
"libxsmm/libxsmm" -> "uxlfoundation/oneDNN"
"libxsmm/libxsmm" -> "IntelLabs/SkimCaffe" ["e"=1]
"libxsmm/libxsmm" -> "ParRes/Kernels" ["e"=1]
"libxsmm/libxsmm" -> "google/gemmlowp"
"libxsmm/libxsmm" -> "tensor-compiler/taco"
"libxsmm/libxsmm" -> "andravin/wincnn"
"libxsmm/libxsmm" -> "codeplaysoftware/portBLAS" ["e"=1]
"libxsmm/libxsmm" -> "cp2k/dbcsr"
"libxsmm/libxsmm" -> "uxlfoundation/oneMath" ["e"=1]
"libxsmm/libxsmm" -> "Maratyszcza/NNPACK"
"daadaada/turingas" -> "cloudcores/CuAssembler"
"daadaada/turingas" -> "PAA-NCIC/PPoPP2017_artifact"
"daadaada/turingas" -> "daadaada/gas"
"daadaada/turingas" -> "NervanaSystems/maxas"
"daadaada/turingas" -> "sjfeng1999/gpu-arch-microbenchmark"
"daadaada/turingas" -> "hyqneuron/asfermi"
"daadaada/turingas" -> "QianyanTech/NBAssembler"
"daadaada/turingas" -> "xiuxiazhang/KeplerAs"
"merrymercy/awesome-tensor-compilers" -> "BBuf/tvm_mlir_learn"
"merrymercy/awesome-tensor-compilers" -> "zwang4/awesome-machine-learning-in-compilers"
"merrymercy/awesome-tensor-compilers" -> "microsoft/nnfusion"
"merrymercy/awesome-tensor-compilers" -> "iree-org/iree"
"merrymercy/awesome-tensor-compilers" -> "alibaba/BladeDISC"
"merrymercy/awesome-tensor-compilers" -> "flame/how-to-optimize-gemm"
"merrymercy/awesome-tensor-compilers" -> "apache/tvm" ["e"=1]
"merrymercy/awesome-tensor-compilers" -> "llvm/torch-mlir"
"merrymercy/awesome-tensor-compilers" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero"
"merrymercy/awesome-tensor-compilers" -> "KnowingNothing/compiler-and-arch"
"merrymercy/awesome-tensor-compilers" -> "flashinfer-ai/flashinfer" ["e"=1]
"merrymercy/awesome-tensor-compilers" -> "buddy-compiler/buddy-mlir"
"merrymercy/awesome-tensor-compilers" -> "alpa-projects/alpa" ["e"=1]
"merrymercy/awesome-tensor-compilers" -> "openmlsys/openmlsys-zh"
"merrymercy/awesome-tensor-compilers" -> "BBuf/how-to-optim-algorithm-in-cuda"
"NVIDIA-Merlin/NVTabular" -> "NVIDIA/cuCollections" ["e"=1]
"NVIDIA-Merlin/NVTabular" -> "rapidsai/rmm" ["e"=1]
"msr-fiddle/pipedream" -> "snuspl/nimble" ["e"=1]
"CppCon/CppCon2020" -> "NVIDIA/libcudacxx" ["e"=1]
"openhackathons-org/gpubootcamp" -> "openhackathons-org/End-to-End-AI-for-Science"
"openhackathons-org/gpubootcamp" -> "FZJ-JSC/tutorial-multi-gpu"
"openhackathons-org/gpubootcamp" -> "nv-legate/cupynumeric"
"openhackathons-org/gpubootcamp" -> "UoB-HPC/BabelStream" ["e"=1]
"openhackathons-org/gpubootcamp" -> "NVIDIA/multi-gpu-programming-models"
"openhackathons-org/gpubootcamp" -> "omlins/ParallelStencil.jl" ["e"=1]
"openhackathons-org/gpubootcamp" -> "OpenACC/openacc-training-materials"
"openhackathons-org/gpubootcamp" -> "NVIDIA/hpc-container-maker" ["e"=1]
"intel/intel-extension-for-pytorch" -> "uxlfoundation/oneDNN" ["e"=1]
"intel/intel-extension-for-pytorch" -> "intel/intel-xpu-backend-for-triton" ["e"=1]
"onnx/onnx-mlir" -> "llvm/torch-mlir"
"onnx/onnx-mlir" -> "tensorflow/mlir-hlo"
"onnx/onnx-mlir" -> "buddy-compiler/buddy-mlir"
"onnx/onnx-mlir" -> "iree-org/iree"
"onnx/onnx-mlir" -> "alibaba/BladeDISC"
"onnx/onnx-mlir" -> "sophgo/tpu-mlir"
"onnx/onnx-mlir" -> "KEKE046/mlir-tutorial"
"onnx/onnx-mlir" -> "llvm/Polygeist"
"onnx/onnx-mlir" -> "bytedance/byteir"
"onnx/onnx-mlir" -> "microsoft/nnfusion"
"onnx/onnx-mlir" -> "openxla/stablehlo"
"onnx/onnx-mlir" -> "BBuf/tvm_mlir_learn"
"onnx/onnx-mlir" -> "j2kun/mlir-tutorial"
"onnx/onnx-mlir" -> "MegEngine/MegCC"
"onnx/onnx-mlir" -> "iml130/mlir-emitc"
"NVIDIA/gdrcopy" -> "NVIDIA/multi-gpu-programming-models" ["e"=1]
"NVIDIA/gdrcopy" -> "NVIDIA/nvbench" ["e"=1]
"llvm/torch-mlir" -> "onnx/onnx-mlir"
"llvm/torch-mlir" -> "iree-org/iree"
"llvm/torch-mlir" -> "buddy-compiler/buddy-mlir"
"llvm/torch-mlir" -> "tensorflow/mlir-hlo"
"llvm/torch-mlir" -> "alibaba/BladeDISC"
"llvm/torch-mlir" -> "llvm/Polygeist"
"llvm/torch-mlir" -> "BBuf/tvm_mlir_learn"
"llvm/torch-mlir" -> "microsoft/nnfusion"
"llvm/torch-mlir" -> "merrymercy/awesome-tensor-compilers"
"llvm/torch-mlir" -> "openxla/stablehlo"
"llvm/torch-mlir" -> "bytedance/byteir"
"llvm/torch-mlir" -> "sophgo/tpu-mlir"
"llvm/torch-mlir" -> "j2kun/mlir-tutorial"
"llvm/torch-mlir" -> "openxla/xla"
"llvm/torch-mlir" -> "llvm/circt" ["e"=1]
"othmanus/algeria-cities" -> "Tiramisu-Compiler/tiramisu" ["e"=1]
"shining1984/PL-Compiler-Resource" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"shining1984/PL-Compiler-Resource" -> "BBuf/tvm_mlir_learn" ["e"=1]
"Adlik/Adlik" -> "Adlik/model_optimizer_tf"
"Adlik/Adlik" -> "Adlik/model_optimizer"
"Adlik/Adlik" -> "YanshiShield/YanshiShield"
"Adlik/Adlik" -> "OpenPPL/ppl.nn"
"Adlik/Adlik" -> "microsoft/nnfusion"
"Adlik/Adlik" -> "huawei-noah/bolt"
"Adlik/Adlik" -> "alibaba/BladeDISC"
"Adlik/Adlik" -> "Tencent/TNN" ["e"=1]
"Adlik/Adlik" -> "OpenPPL/ppq" ["e"=1]
"Adlik/Adlik" -> "tpoisonooo/how-to-optimize-gemm"
"Adlik/Adlik" -> "ModelTC/MQBench" ["e"=1]
"Adlik/Adlik" -> "OpenPPL/ppl.cv"
"Adlik/Adlik" -> "666DZY666/micronet" ["e"=1]
"NVIDIA-Merlin/HugeCTR" -> "pytorch/FBGEMM" ["e"=1]
"NVIDIA-Merlin/HugeCTR" -> "alibaba/BladeDISC" ["e"=1]
"ChrisCummins/ProGraML" -> "facebookresearch/CompilerGym" ["e"=1]
"Tencent/TurboTransformers" -> "bytedance/ByteTransformer" ["e"=1]
"Tencent/TurboTransformers" -> "alibaba/BladeDISC" ["e"=1]
"Tencent/TurboTransformers" -> "microsoft/nnfusion" ["e"=1]
"tensorflow/runtime" -> "tensorflow/mlir-hlo" ["e"=1]
"tensorflow/runtime" -> "microsoft/nnfusion" ["e"=1]
"tensorflow/runtime" -> "tensorflow/mlir" ["e"=1]
"tensorflow/runtime" -> "alibaba/BladeDISC" ["e"=1]
"tensorflow/runtime" -> "iree-org/iree" ["e"=1]
"tensorflow/runtime" -> "onnx/onnx-mlir" ["e"=1]
"tensorflow/runtime" -> "llvm/torch-mlir" ["e"=1]
"tensorflow/runtime" -> "jiazhihao/TASO" ["e"=1]
"tensorflow/runtime" -> "NervanaSystems/ngraph" ["e"=1]
"tensorflow/runtime" -> "dmlc/dlpack" ["e"=1]
"google/ml-compiler-opt" -> "facebookresearch/CompilerGym"
"google/ml-compiler-opt" -> "llvm/Polygeist"
"google/ml-compiler-opt" -> "zwang4/awesome-machine-learning-in-compilers"
"google/ml-compiler-opt" -> "llvm/clangir"
"google/ml-compiler-opt" -> "jansel/opentuner"
"google/ml-compiler-opt" -> "tensorflow/mlir-hlo"
"google/ml-compiler-opt" -> "ChrisCummins/ProGraML" ["e"=1]
"google/ml-compiler-opt" -> "llvm/torch-mlir"
"google/ml-compiler-opt" -> "AliveToolkit/alive2" ["e"=1]
"google/ml-compiler-opt" -> "buddy-compiler/buddy-mlir"
"google/ml-compiler-opt" -> "bondhugula/pluto"
"google/ml-compiler-opt" -> "j2kun/mlir-tutorial"
"google/ml-compiler-opt" -> "spcl/pymlir"
"google/ml-compiler-opt" -> "banach-space/llvm-tutor" ["e"=1]
"google/ml-compiler-opt" -> "onnx/onnx-mlir"
"tensorflow/mlir-hlo" -> "onnx/onnx-mlir"
"tensorflow/mlir-hlo" -> "openxla/stablehlo"
"tensorflow/mlir-hlo" -> "alibaba/BladeDISC"
"tensorflow/mlir-hlo" -> "llvm/torch-mlir"
"tensorflow/mlir-hlo" -> "bytedance/byteir"
"tensorflow/mlir-hlo" -> "tensorflow/runtime" ["e"=1]
"tensorflow/mlir-hlo" -> "iml130/mlir-emitc"
"tensorflow/mlir-hlo" -> "llvm/Polygeist"
"tensorflow/mlir-hlo" -> "buddy-compiler/buddy-mlir"
"tensorflow/mlir-hlo" -> "kumasento/polymer"
"tensorflow/mlir-hlo" -> "ROCm/rocMLIR"
"tensorflow/mlir-hlo" -> "iree-org/iree"
"tensorflow/mlir-hlo" -> "microsoft/nnfusion"
"tensorflow/mlir-hlo" -> "spcl/pymlir"
"tensorflow/mlir-hlo" -> "libxsmm/tpp-mlir"
"NVIDIA/cccl" -> "NVIDIA/cub"
"NVIDIA/cccl" -> "NVIDIA/MatX"
"NVIDIA/cccl" -> "NVIDIA/nvbench"
"NVIDIA/cccl" -> "NVIDIA/cuCollections"
"NVIDIA/cccl" -> "NVIDIA/thrust"
"NVIDIA/cccl" -> "NVIDIA/libcudacxx"
"NVIDIA/cccl" -> "NVIDIA/cutlass" ["e"=1]
"NVIDIA/cccl" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/cccl" -> "NVIDIA/stdexec" ["e"=1]
"NVIDIA/cccl" -> "flashinfer-ai/flashinfer" ["e"=1]
"NVIDIA/cccl" -> "rapidsai/rmm"
"NVIDIA/cccl" -> "HazyResearch/ThunderKittens" ["e"=1]
"NVIDIA/cccl" -> "NVIDIA/TransformerEngine" ["e"=1]
"NVIDIA/cccl" -> "NVIDIA/cuda-samples" ["e"=1]
"NVIDIA/cccl" -> "BBuf/how-to-optim-algorithm-in-cuda"
"bytedance/effective_transformer" -> "bytedance/ByteTransformer" ["e"=1]
"bytedance/effective_transformer" -> "bytedance/matxscript" ["e"=1]
"Tencent/TNN" -> "XiaoMi/mace" ["e"=1]
"Tencent/TNN" -> "huawei-noah/bolt" ["e"=1]
"Tencent/TNN" -> "OpenPPL/ppl.nn" ["e"=1]
"sai-bi/ImageSmoothing" -> "csjunxu/Image-Smoothing-State-of-the-art"
"sai-bi/ImageSmoothing" -> "zhufeida/Benchmark_EPS"
"sai-bi/ImageSmoothing" -> "sai-bi/L1Flattening" ["e"=1]
"sai-bi/ImageSmoothing" -> "wliusjtu/Real-time-Image-Smoothing-via-Iterative-Least-Squares"
"sai-bi/ImageSmoothing" -> "wliusjtu/Generalized-Smoothing-Framework"
"sai-bi/ImageSmoothing" -> "wliusjtu/Embedding-Bilateral-Filter-in-Least-Squares-for-Efficient-Edge-preserving-Image-Smoothing"
"sai-bi/ImageSmoothing" -> "fqnchina/ImageSmoothing"
"sai-bi/ImageSmoothing" -> "fergaletto/GVWA"
"sai-bi/ImageSmoothing" -> "wliusjtu/Semi-Global-Weighted-Least-Squares-in-Image-Filtering"
"uploadcare/pillow-simd" -> "pytorch/torchdynamo" ["e"=1]
"d2l-ai/d2l-tvm" -> "pytorch/tvm"
"d2l-ai/d2l-tvm" -> "microsoft/nnfusion"
"d2l-ai/d2l-tvm" -> "merrymercy/awesome-tensor-compilers"
"d2l-ai/d2l-tvm" -> "tvmai/meetup-slides"
"d2l-ai/d2l-tvm" -> "dmlc/dlpack"
"d2l-ai/d2l-tvm" -> "tlc-pack/relax"
"d2l-ai/d2l-tvm" -> "tqchen/ffi-navigator"
"d2l-ai/d2l-tvm" -> "alibaba/BladeDISC"
"d2l-ai/d2l-tvm" -> "mit-han-lab/inter-operator-scheduler"
"d2l-ai/d2l-tvm" -> "onnx/onnx-mlir"
"d2l-ai/d2l-tvm" -> "BBuf/tvm_mlir_learn"
"d2l-ai/d2l-tvm" -> "MegEngine/MegCC"
"d2l-ai/d2l-tvm" -> "flame/how-to-optimize-gemm"
"d2l-ai/d2l-tvm" -> "wkcn/MobulaOP"
"d2l-ai/d2l-tvm" -> "KnowingNothing/compiler-and-arch"
"ARM-software/abi-aa" -> "ARM-software/optimized-routines" ["e"=1]
"jakc4103/DFQ" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"learn-llvm/awesome-llvm" -> "j2kun/mlir-tutorial" ["e"=1]
"learn-llvm/awesome-llvm" -> "KEKE046/mlir-tutorial" ["e"=1]
"learn-llvm/awesome-llvm" -> "zwang4/awesome-machine-learning-in-compilers" ["e"=1]
"intel/neural-compressor" -> "uxlfoundation/oneDNN" ["e"=1]
"zchrissirhcz/awesome-ncnn" -> "msnh2012/Msnhnet" ["e"=1]
"gpgpu-sim/gpgpu-sim_distribution" -> "NervanaSystems/maxas" ["e"=1]
"gpgpu-sim/gpgpu-sim_distribution" -> "cloudcores/CuAssembler" ["e"=1]
"BRTResearch/AIChip_Paper_List" -> "basicmi/AI-Chip" ["e"=1]
"NVIDIA/nvcomp" -> "NVIDIA/cuCollections"
"NVIDIA/nvcomp" -> "NVIDIA/jitify"
"NVIDIA/nvcomp" -> "facebookresearch/dietgpu" ["e"=1]
"NVIDIA/nvcomp" -> "szcompressor/cuSZ" ["e"=1]
"NVIDIA/nvcomp" -> "dingwentao/GPU-lossless-compression" ["e"=1]
"NVIDIA/nvcomp" -> "NVIDIA/gdrcopy" ["e"=1]
"NVIDIA/nvcomp" -> "eyalroz/cuda-kat"
"NVIDIA/nvcomp" -> "NVIDIA/cub"
"NVIDIA/nvcomp" -> "NVIDIA/gds-nvidia-fs" ["e"=1]
"NVIDIA/nvcomp" -> "powturbo/Turbo-Range-Coder" ["e"=1]
"NVIDIA/nvcomp" -> "rapidsai/rmm"
"NVIDIA/nvcomp" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/nvcomp" -> "NVIDIA/libcudacxx"
"NVIDIA/nvcomp" -> "LLNL/zfp" ["e"=1]
"NVIDIA/nvcomp" -> "IlyaGrebnov/libsais" ["e"=1]
"sleeepyjack/warpcore" -> "owensgroup/SlabHash"
"sleeepyjack/warpcore" -> "NVIDIA/cuCollections"
"sleeepyjack/warpcore" -> "muellan/metacache"
"bytedance/lightseq" -> "alibaba/BladeDISC" ["e"=1]
"NVIDIA/tensorflow" -> "NVIDIA/CUDALibrarySamples" ["e"=1]
"NVIDIA/tensorflow" -> "NVIDIA/cub" ["e"=1]
"NVIDIA/tensorflow" -> "NVIDIA/libcudacxx" ["e"=1]
"NVIDIA/tensorflow" -> "NVIDIA/cudnn-frontend" ["e"=1]
"NVIDIA/cuCollections" -> "rapidsai/rmm"
"NVIDIA/cuCollections" -> "NVIDIA/cub"
"NVIDIA/cuCollections" -> "sleeepyjack/warpcore"
"NVIDIA/cuCollections" -> "NVIDIA/cccl"
"NVIDIA/cuCollections" -> "NVIDIA/nvbench"
"NVIDIA/cuCollections" -> "NVIDIA/jitify"
"NVIDIA/cuCollections" -> "owensgroup/SlabHash"
"NVIDIA/cuCollections" -> "NVIDIA/MatX"
"NVIDIA/cuCollections" -> "NVIDIA/libcudacxx"
"NVIDIA/cuCollections" -> "stotko/stdgpu"
"NVIDIA/cuCollections" -> "NVIDIA/nvcomp"
"NVIDIA/cuCollections" -> "rapidsai/raft" ["e"=1]
"NVIDIA/cuCollections" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/cuCollections" -> "NVIDIA-Merlin/HierarchicalKV" ["e"=1]
"NVIDIA/cuCollections" -> "eyalroz/cuda-api-wrappers"
"jiazhihao/TASO" -> "microsoft/nnfusion"
"jiazhihao/TASO" -> "thu-pacman/PET"
"jiazhihao/TASO" -> "mit-han-lab/inter-operator-scheduler"
"jiazhihao/TASO" -> "uwplse/tensat"
"jiazhihao/TASO" -> "flexflow/flexflow-train" ["e"=1]
"jiazhihao/TASO" -> "pku-liang/FlexTensor"
"jiazhihao/TASO" -> "llvm/torch-mlir"
"jiazhihao/TASO" -> "uwsampl/SparseTIR"
"jiazhihao/TASO" -> "merrymercy/awesome-tensor-compilers"
"jiazhihao/TASO" -> "alibaba/BladeDISC"
"jiazhihao/TASO" -> "onnx/onnx-mlir"
"jiazhihao/TASO" -> "tensor-compiler/taco"
"jiazhihao/TASO" -> "bytedance/ByteTransformer"
"jiazhihao/TASO" -> "mirage-project/mirage" ["e"=1]
"jiazhihao/TASO" -> "snuspl/nimble"
"MegEngine/MegEngine" -> "OpenPPL/ppl.nn" ["e"=1]
"MegEngine/MegEngine" -> "flame/how-to-optimize-gemm" ["e"=1]
"microsoft/nnfusion" -> "jiazhihao/TASO"
"microsoft/nnfusion" -> "alibaba/BladeDISC"
"microsoft/nnfusion" -> "merrymercy/awesome-tensor-compilers"
"microsoft/nnfusion" -> "microsoft/antares" ["e"=1]
"microsoft/nnfusion" -> "llvm/torch-mlir"
"microsoft/nnfusion" -> "tensorflow/runtime" ["e"=1]
"microsoft/nnfusion" -> "mit-han-lab/inter-operator-scheduler"
"microsoft/nnfusion" -> "cloudcores/CuAssembler"
"microsoft/nnfusion" -> "tensorflow/mlir-hlo"
"microsoft/nnfusion" -> "iree-org/iree"
"microsoft/nnfusion" -> "pku-liang/FlexTensor"
"microsoft/nnfusion" -> "onnx/onnx-mlir"
"microsoft/nnfusion" -> "tensor-compiler/taco"
"microsoft/nnfusion" -> "flexflow/flexflow-train" ["e"=1]
"microsoft/nnfusion" -> "MegEngine/MegCC"
"PacktPublishing/Learn-LLVM-12" -> "BBuf/tvm_mlir_learn" ["e"=1]
"PacktPublishing/Learn-LLVM-12" -> "buddy-compiler/buddy-mlir" ["e"=1]
"microsoft/antares" -> "microsoft/nnfusion" ["e"=1]
"microsoft/antares" -> "mit-han-lab/inter-operator-scheduler" ["e"=1]
"GridTools/gt4py" -> "GridTools/gridtools"
"GridTools/gt4py" -> "ai2cm/pace"
"GridTools/gt4py" -> "GridTools/serialbox"
"GridTools/gt4py" -> "MeteoSwiss-APN/dawn"
"huawei-noah/AdderNet" -> "huawei-noah/bolt" ["e"=1]
"numba/llvmlite" -> "spcl/pymlir" ["e"=1]
"exo-lang/exo" -> "llvm/Polygeist" ["e"=1]
"exo-lang/exo" -> "kumasento/polymer" ["e"=1]
"exo-lang/exo" -> "pku-liang/AMOS" ["e"=1]
"exo-lang/exo" -> "bondhugula/pluto" ["e"=1]
"expnkx/fast_io" -> "stotko/stdgpu" ["e"=1]
"intel/pti-gpu" -> "intel/intel-xpu-backend-for-triton" ["e"=1]
"intel/pti-gpu" -> "intel/mlir-extensions" ["e"=1]
"mlcommons/ck" -> "ctuning/ck-autotuning"
"mlcommons/ck" -> "ctuning/ck-tensorflow"
"mlcommons/ck" -> "ctuning/ck-env"
"mlcommons/ck" -> "ctuning/ck-math"
"mlcommons/ck" -> "ctuning/ck-crowdnode"
"mlcommons/ck" -> "ctuning/ck-crowdtuning"
"mlcommons/ck" -> "ctuning/ck-analytics"
"mlcommons/ck" -> "ctuning/ck-web"
"mlcommons/ck" -> "ctuning/ck-docker"
"mlcommons/ck" -> "ctuning/ck-dissemination-modules"
"mlcommons/ck" -> "ctuning/ck-ext-far-manager-plugin"
"mlcommons/ck" -> "ctuning/ck-crowdtuning-platforms"
"mlcommons/ck" -> "ctuning/artifact-evaluation"
"mlcommons/ck" -> "ctuning/ck-web-adapt-workshop"
"mlcommons/ck" -> "ctuning/ck-dev-compilers"
"Cjkkkk/CUDA_gemm" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"Cjkkkk/CUDA_gemm" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Cjkkkk/CUDA_gemm" -> "tpoisonooo/how-to-optimize-gemm"
"Cjkkkk/CUDA_gemm" -> "Yinghan-Li/YHs_Sample"
"Cjkkkk/CUDA_gemm" -> "KnowingNothing/MatmulTutorial"
"Cjkkkk/CUDA_gemm" -> "Bruce-Lee-LY/cuda_hgemm"
"Cjkkkk/CUDA_gemm" -> "njuhope/cuda_sgemm"
"Cjkkkk/CUDA_gemm" -> "wangzyon/NVIDIA_SGEMM_PRACTICE"
"Cjkkkk/CUDA_gemm" -> "66RING/tiny-flash-attention"
"Cjkkkk/CUDA_gemm" -> "wzsh/wmma_tensorcore_sample"
"Cjkkkk/CUDA_gemm" -> "leimao/CUDA-GEMM-Optimization"
"Cjkkkk/CUDA_gemm" -> "XiaoSong9905/CUDA-Optimization-Guide"
"Cjkkkk/CUDA_gemm" -> "BBuf/how-to-optim-algorithm-in-cuda"
"Cjkkkk/CUDA_gemm" -> "AyakaGEMM/Hands-on-GEMM"
"Cjkkkk/CUDA_gemm" -> "cloudcores/CuAssembler"
"wliusjtu/Real-time-Image-Smoothing-via-Iterative-Least-Squares" -> "wliusjtu/Semi-Global-Weighted-Least-Squares-in-Image-Filtering"
"wliusjtu/Real-time-Image-Smoothing-via-Iterative-Least-Squares" -> "wliusjtu/Generalized-Smoothing-Framework"
"wliusjtu/Real-time-Image-Smoothing-via-Iterative-Least-Squares" -> "wliusjtu/Embedding-Bilateral-Filter-in-Least-Squares-for-Efficient-Edge-preserving-Image-Smoothing"
"llvm/Polygeist" -> "kumasento/polymer"
"llvm/Polygeist" -> "llvm/clangir"
"llvm/Polygeist" -> "buddy-compiler/buddy-mlir"
"llvm/Polygeist" -> "iml130/mlir-emitc"
"llvm/Polygeist" -> "xdslproject/xdsl"
"llvm/Polygeist" -> "llvm/torch-mlir"
"llvm/Polygeist" -> "tensorflow/mlir-hlo"
"llvm/Polygeist" -> "UIUC-ChenLab/scalehls" ["e"=1]
"llvm/Polygeist" -> "libxsmm/tpp-mlir"
"llvm/Polygeist" -> "spcl/pymlir"
"llvm/Polygeist" -> "j2kun/mlir-tutorial"
"llvm/Polygeist" -> "Xilinx/mlir-aie" ["e"=1]
"llvm/Polygeist" -> "bondhugula/pluto"
"llvm/Polygeist" -> "Meinersbur/ppcg"
"llvm/Polygeist" -> "KEKE046/mlir-tutorial"
"uxlfoundation/oneMath" -> "uxlfoundation/oneDNN" ["e"=1]
"uxlfoundation/oneMath" -> "libxsmm/libxsmm" ["e"=1]
"onnx/optimizer" -> "onnx/onnx-mlir" ["e"=1]
"onnx/optimizer" -> "OpenPPL/ppl.nn" ["e"=1]
"onnx/optimizer" -> "alibaba/BladeDISC" ["e"=1]
"onnx/optimizer" -> "microsoft/nnfusion" ["e"=1]
"banach-space/clang-tutor" -> "llvm/clangir" ["e"=1]
"s-gupta/rcnn-depth" -> "deeplearningais/curfil" ["e"=1]
"msnh2012/Msnhnet" -> "tpoisonooo/how-to-optimize-gemm"
"msnh2012/Msnhnet" -> "BBuf/ArmNeonOptimization"
"msnh2012/Msnhnet" -> "aovoc/nnieqat-pytorch" ["e"=1]
"msnh2012/Msnhnet" -> "BBuf/Darknet" ["e"=1]
"msnh2012/Msnhnet" -> "BUG1989/caffe-int8-convert-tools"
"msnh2012/Msnhnet" -> "msnh2012/CasiaLabeler"
"msnh2012/Msnhnet" -> "OpenPPL/ppl.nn"
"msnh2012/Msnhnet" -> "deepglint/EasyQuant" ["e"=1]
"msnh2012/Msnhnet" -> "Syencil/tensorRT" ["e"=1]
"msnh2012/Msnhnet" -> "huawei-noah/bolt"
"msnh2012/Msnhnet" -> "zchrissirhcz/awesome-ncnn" ["e"=1]
"msnh2012/Msnhnet" -> "zerollzeng/tiny-tensorrt" ["e"=1]
"msnh2012/Msnhnet" -> "andravin/wincnn"
"msnh2012/Msnhnet" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"msnh2012/Msnhnet" -> "dlunion/tensorRTIntegrate" ["e"=1]
"NVIDIA/nsight-training" -> "cwpearson/nvidia-performance-tools"
"Maratyszcza/PeachPy" -> "Maratyszcza/NNPACK" ["e"=1]
"Maratyszcza/PeachPy" -> "libxsmm/libxsmm" ["e"=1]
"yzhaiustc/Optimizing-DGEMM-on-Intel-CPUs-with-AVX512F" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"yzhaiustc/Optimizing-DGEMM-on-Intel-CPUs-with-AVX512F" -> "wjc404/GEMM_AVX512F"
"yzhaiustc/Optimizing-DGEMM-on-Intel-CPUs-with-AVX512F" -> "tpoisonooo/how-to-optimize-gemm"
"llvm/circt" -> "llvm/torch-mlir" ["e"=1]
"llvm/circt" -> "llvm/Polygeist" ["e"=1]
"llvm/circt" -> "iree-org/iree" ["e"=1]
"sh1r0/caffe-android-lib" -> "Maratyszcza/NNPACK" ["e"=1]
"inducer/loopy" -> "dmlc/HalideIR"
"inducer/loopy" -> "inducer/pymbolic" ["e"=1]
"inducer/loopy" -> "NervanaSystems/maxas"
"inducer/loopy" -> "StrongSpoon/tvm.schedule"
"inducer/loopy" -> "facebookresearch/TensorComprehensions"
"inducer/loopy" -> "Meinersbur/ppcg"
"inducer/loopy" -> "microsoft/nnfusion"
"inducer/loopy" -> "inducer/pyopencl" ["e"=1]
"inducer/loopy" -> "pytorch/tvm"
"inducer/loopy" -> "d2l-ai/d2l-tvm"
"inducer/loopy" -> "gunrock/gunrock" ["e"=1]
"inducer/loopy" -> "andravin/wincnn"
"inducer/loopy" -> "tqchen/ffi-navigator"
"inducer/loopy" -> "tensorflow/mlir"
"inducer/loopy" -> "bondhugula/pluto"
"YouQixiaowu/CUDA-Programming-with-Python" -> "brucefan1983/CUDA-Programming"
"YouQixiaowu/CUDA-Programming-with-Python" -> "MethodJiao/VulkanDemo"
"YouQixiaowu/CUDA-Programming-with-Python" -> "MethodJiao/GoSample"
"YouQixiaowu/CUDA-Programming-with-Python" -> "MethodJiao/OCCGraphicDemo"
"YouQixiaowu/CUDA-Programming-with-Python" -> "akingse/learn_python"
"plctlab/PLCT-Open-Reports" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"google/ruy" -> "mmperf/mmperf"
"google/ruy" -> "google/XNNPACK"
"google/ruy" -> "deepspeedai/DeepSpeed-Kernels"
"oneapi-src/oneAPI-samples" -> "uxlfoundation/oneDNN" ["e"=1]
"huawei-noah/bolt" -> "JDAI-CV/dabnn" ["e"=1]
"huawei-noah/bolt" -> "huawei-noah/vega" ["e"=1]
"huawei-noah/bolt" -> "OpenPPL/ppl.nn"
"huawei-noah/bolt" -> "andravin/wincnn"
"huawei-noah/bolt" -> "pytorch/QNNPACK"
"huawei-noah/bolt" -> "BUG1989/caffe-int8-convert-tools"
"huawei-noah/bolt" -> "Tencent/TNN" ["e"=1]
"huawei-noah/bolt" -> "Tencent/FeatherCNN"
"huawei-noah/bolt" -> "PaddlePaddle/Anakin"
"huawei-noah/bolt" -> "AI-performance/embedded-ai.bench"
"huawei-noah/bolt" -> "tpoisonooo/how-to-optimize-gemm"
"huawei-noah/bolt" -> "msnh2012/Msnhnet"
"huawei-noah/bolt" -> "flame/how-to-optimize-gemm"
"huawei-noah/bolt" -> "xxradon/PytorchToCaffe" ["e"=1]
"huawei-noah/bolt" -> "google/gemmlowp"
"huawei-noah/vega" -> "huawei-noah/bolt" ["e"=1]
"dmlc/minerva" -> "NervanaSystems/nervana-lib-gpu-performance-preview" ["e"=1]
"tvmai/meetup-slides" -> "pku-liang/AMOS"
"tvmai/meetup-slides" -> "nox-410/tvm.tl"
"tvmai/meetup-slides" -> "tvmai/tvmai.github.io"
"tvmai/meetup-slides" -> "tqchen/ffi-navigator"
"uwplse/tensat" -> "gussmith23/glenside"
"uwplse/tensat" -> "uwplse/ruler" ["e"=1]
"grimoire/mmdetection-to-tensorrt" -> "msnh2012/Msnhnet" ["e"=1]
"hughperkins/DeepCL" -> "Maratyszcza/NNPACK" ["e"=1]
"apache/reef" -> "snuspl/dolphin"
"apache/reef" -> "snuspl/pluto"
"apache/reef" -> "snuspl/cruise"
"apache/reef" -> "snuspl/nemo"
"apache/reef" -> "apache/incubator-nemo"
"apache/reef" -> "friendliai/LLMServingPerfEvaluator"
"apache/reef" -> "snuspl/parallax"
"shinpei0208/gdev" -> "laanwj/decuda" ["e"=1]
"ctuning/ck-analytics" -> "ctuning/ck-crowdnode"
"ctuning/ck-analytics" -> "ctuning/ck-web"
"ctuning/ck-analytics" -> "ctuning/ck-docker"
"ctuning/ck-analytics" -> "ctuning/ck-math"
"ctuning/ck-analytics" -> "ctuning/ck-dissemination-modules"
"ctuning/ck-analytics" -> "ctuning/ck-crowdtuning-platforms"
"ctuning/ck-analytics" -> "ctuning/ck-crowdtuning"
"ctuning/ck-analytics" -> "ctuning/ck-web-adapt-workshop"
"ctuning/ck-analytics" -> "dividiti/gemmbench-adapt16"
"ctuning/ck-analytics" -> "ctuning/ck-ext-far-manager-plugin"
"ctuning/ck-analytics" -> "ctuning/ck-guide-images"
"ctuning/ck-analytics" -> "ctuning/ck-dev-compilers"
"ctuning/ck-autotuning" -> "ctuning/ck-crowdtuning"
"ctuning/ck-autotuning" -> "ctuning/ck-math"
"ctuning/ck-autotuning" -> "ctuning/ck-crowdnode"
"ctuning/ck-autotuning" -> "ctuning/ck-web"
"ctuning/ck-autotuning" -> "ctuning/ck-docker"
"ctuning/ck-autotuning" -> "ctuning/ck-analytics"
"ctuning/ck-autotuning" -> "ctuning/ck-dissemination-modules"
"ctuning/ck-autotuning" -> "ctuning/ck-web-adapt-workshop"
"ctuning/ck-autotuning" -> "ctuning/ck-env"
"ctuning/ck-autotuning" -> "ctuning/ck-ext-far-manager-plugin"
"ctuning/ck-autotuning" -> "ctuning/ck-crowdtuning-platforms"
"ctuning/ck-autotuning" -> "ctuning/ck-dev-compilers"
"ctuning/ck-autotuning" -> "dividiti/gemmbench-adapt16"
"ctuning/ctuning-programs" -> "ctuning/ck-web"
"ctuning/ctuning-programs" -> "ctuning/ck-dissemination-modules"
"ctuning/ctuning-programs" -> "ctuning/ck-docker"
"ctuning/ctuning-programs" -> "ctuning/ck-crowdtuning"
"ctuning/ctuning-programs" -> "ctuning/ck-web-adapt-workshop"
"ctuning/ctuning-programs" -> "ctuning/ck-math"
"ctuning/ctuning-programs" -> "ctuning/ck-guide-images"
"ctuning/ctuning-programs" -> "ctuning/ck-crowdnode"
"ctuning/ctuning-programs" -> "ctuning/ck-ext-far-manager-plugin"
"ctuning/ctuning-programs" -> "dividiti/gemmbench-adapt16"
"ctuning/ctuning-programs" -> "ctuning/ck-crowdtuning-platforms"
"ctuning/ctuning-programs" -> "ctuning/ck-dev-compilers"
"ctuning/ctuning-programs" -> "ctuning/ck-analytics"
"ctuning/ctuning-programs" -> "dividiti/gemmbench"
"UIUC-ChenLab/scalehls" -> "kumasento/polymer" ["e"=1]
"UIUC-ChenLab/scalehls" -> "llvm/Polygeist" ["e"=1]
"Cambricon/CNStream" -> "Cambricon/caffe"
"Cambricon/CNStream" -> "Cambricon/ffmpeg-mlu"
"Cambricon/CNStream" -> "Cambricon/Cambricon-Gst"
"Cambricon/CNStream" -> "Cambricon/easydk"
"Cambricon/CNStream" -> "Cambricon/mlu-ops"
"Cambricon/CNStream" -> "Cambricon/cambricon-k8s-device-plugin"
"Cambricon/CNStream" -> "Cambricon/caffe_boost"
"Cambricon/CNStream" -> "CambriconKnight/dev-env-ubuntu"
"Cambricon/CNStream" -> "Cambricon/CN-GDB"
"Cambricon/CNStream" -> "superlich7/Paddle-Lite"
"Cambricon/CNStream" -> "CambriconKnight/mlu220-cross-compile-docker-image"
"Cambricon/cambricon-k8s-device-plugin" -> "Cambricon/mlu-exporter"
"buaa-hipo/dlcompiler-comparison" -> "uwsampl/sparsetir-artifact" ["e"=1]
"gussmith23/glenside" -> "uwplse/tensat"
"pytorch/kineto" -> "pytorch/torchdynamo" ["e"=1]
"pytorch/kineto" -> "pytorch/FBGEMM" ["e"=1]
"lambdal/deeplearning-benchmark" -> "LambdaColdStorage/lambda-tensorflow-benchmark"
"xingdi-eric-yuan/conv-net-version-3" -> "xingdi-eric-yuan/single-layer-convnet"
"xingdi-eric-yuan/conv-net-version-3" -> "xingdi-eric-yuan/multi-layer-convnet"
"CoffeeBeforeArch/parallel_programming" -> "CoffeeBeforeArch/practical_parallelism_in_cpp"
"NVIDIA/NVTX" -> "NVIDIA/nvbench"
"NVIDIA/NVTX" -> "NVIDIA/jitify"
"NVIDIA/NVTX" -> "rapidsai/rmm"
"NVIDIA/NVTX" -> "NVIDIA/cccl"
"NVIDIA/NVTX" -> "NVIDIA/Fuser"
"NVIDIA/NVTX" -> "NVIDIA/nvbandwidth" ["e"=1]
"NVIDIA/NVTX" -> "cwpearson/nvidia-performance-tools"
"NVIDIA/NVTX" -> "NVIDIA/cuCollections"
"NVIDIA/NVTX" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/NVTX" -> "NVIDIA/cub"
"NVIDIA/NVTX" -> "microsoft/NPKit" ["e"=1]
"NVIDIA/NVTX" -> "bryancatanzaro/trove"
"NVIDIA/NVTX" -> "openucx/ucc" ["e"=1]
"NVIDIA/NVTX" -> "NVIDIA/cudnn-frontend"
"NVlabs/NVBit" -> "cloudcores/CuAssembler" ["e"=1]
"NVlabs/NVBit" -> "daadaada/turingas" ["e"=1]
"iml130/mlir-emitc" -> "kumasento/polymer"
"iml130/mlir-emitc" -> "libxsmm/tpp-mlir"
"iml130/mlir-emitc" -> "ROCm/rocMLIR"
"iml130/mlir-emitc" -> "Xilinx/mlir-air" ["e"=1]
"iml130/mlir-emitc" -> "llvm/Polygeist"
"iml130/mlir-emitc" -> "tensorflow/mlir-hlo"
"iml130/mlir-emitc" -> "jmgorius/mlir-standalone-template"
"iml130/mlir-emitc" -> "tancheng/mlir-cgra" ["e"=1]
"StrongSpoon/tvm.schedule" -> "Archermmt/tvm_walk_through"
"StrongSpoon/tvm.schedule" -> "tlc-pack/relax"
"StrongSpoon/tvm.schedule" -> "mit-han-lab/inter-operator-scheduler"
"StrongSpoon/tvm.schedule" -> "apache/tvm-rfcs"
"StrongSpoon/tvm.schedule" -> "tqchen/ffi-navigator"
"tqchen/ffi-navigator" -> "tlc-pack/relax"
"tqchen/ffi-navigator" -> "apache/tvm-rfcs"
"tqchen/ffi-navigator" -> "awslabs/raf"
"tqchen/ffi-navigator" -> "StrongSpoon/tvm.schedule"
"tqchen/ffi-navigator" -> "nox-410/tvm.tl"
"tqchen/ffi-navigator" -> "mlc-ai/notebooks"
"tqchen/ffi-navigator" -> "tvmai/meetup-slides"
"tqchen/ffi-navigator" -> "uwsampl/SparseTIR"
"tqchen/ffi-navigator" -> "tlc-pack/tophub"
"tqchen/ffi-navigator" -> "anirudhsundar/tvm-gdb-commands"
"tqchen/ffi-navigator" -> "wzh99/relay-mlir"
"tqchen/ffi-navigator" -> "pku-liang/AMOS"
"tqchen/ffi-navigator" -> "octoml/octoml-profile"
"oneapi-src/level-zero" -> "intel/mlir-extensions" ["e"=1]
"pigirons/sgemm_hsw" -> "pigirons/cpufp"
"pigirons/sgemm_hsw" -> "StrongSpoon/tvm.schedule"
"pigirons/sgemm_hsw" -> "BBuf/how-to-optimize-gemm"
"pigirons/sgemm_hsw" -> "flame/blislab"
"pigirons/sgemm_hsw" -> "flame/how-to-optimize-gemm"
"pigirons/sgemm_hsw" -> "pigirons/conv3x3_m1"
"pigirons/sgemm_hsw" -> "Yinghan-Li/YHs_Sample"
"pigirons/sgemm_hsw" -> "cloudcores/CuAssembler"
"UCLA-VAST/AutoSA" -> "kumasento/polymer" ["e"=1]
"Cambricon/CN-GDB" -> "Cambricon/caffe"
"aovoc/nnieqat-pytorch" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"Adlik/model_optimizer_tf" -> "Adlik/model_optimizer"
"nosferalatu/SimpleGPUHashTable" -> "owensgroup/SlabHash"
"nosferalatu/SimpleGPUHashTable" -> "sleeepyjack/warpcore"
"nosferalatu/SimpleGPUHashTable" -> "NVIDIA/cuCollections"
"nosferalatu/SimpleGPUHashTable" -> "cudpp/cudpp"
"nosferalatu/SimpleGPUHashTable" -> "NVlabs/fermat" ["e"=1]
"mgaudet/CompilerJobs" -> "mlir-rs/melior" ["e"=1]
"LLNL/merlin" -> "LLNL/maestrowf"
"jmgorius/mlir-standalone-template" -> "iml130/mlir-emitc"
"jmgorius/mlir-standalone-template" -> "makslevental/nelli"
"jmgorius/mlir-standalone-template" -> "tancheng/mlir-cgra" ["e"=1]
"spcl/pymlir" -> "makslevental/nelli"
"spcl/pymlir" -> "kumasento/polymer"
"spcl/pymlir" -> "spcl/mlir-dace"
"spcl/pymlir" -> "numba/numba-mlir"
"spcl/pymlir" -> "llvm/Polygeist"
"spcl/pymlir" -> "makslevental/mlir-python-extras"
"spcl/pymlir" -> "xdslproject/xdsl"
"spcl/pymlir" -> "iml130/mlir-emitc"
"spcl/pymlir" -> "tensorflow/mlir-hlo"
"spcl/pymlir" -> "buddy-compiler/buddy-mlir"
"spcl/pymlir" -> "google/mlir-npcomp"
"spcl/pymlir" -> "intel/mlir-extensions"
"spcl/pymlir" -> "tancheng/mlir-cgra" ["e"=1]
"spcl/pymlir" -> "mlir-rs/melior"
"spcl/pymlir" -> "iree-org/iree-turbine"
"OpenACC/openacc-best-practices-guide" -> "FluidNumerics/gpu-programming"
"wmmae/wmma_extension" -> "wzsh/wmma_tensorcore_sample"
"spcl/substation" -> "spcl/dace"
"spcl/daceml" -> "spcl/dace-vscode"
"Cambricon/ffmpeg-mlu" -> "Cambricon/Cambricon-Gst"
"Cambricon/ffmpeg-mlu" -> "Cambricon/CNStream"
"Cambricon/caffe_boost" -> "Cambricon/caffe"
"metricq/metricq-python" -> "metricq/metricq"
"cwpearson/nvidia-performance-tools" -> "NVIDIA/nsight-training"
"uxlfoundation/oneCCL" -> "intel/intel-xpu-backend-for-triton" ["e"=1]
"msnh2012/CasiaLabeler" -> "msnh2012/Msnhnet"
"msnh2012/CasiaLabeler" -> "pprp/landmark_annotation" ["e"=1]
"msnh2012/CasiaLabeler" -> "FeiGeChuanShu/ncnn_nanodet_hand" ["e"=1]
"ROCm/rocMLIR" -> "iml130/mlir-emitc"
"ROCm/rocMLIR" -> "kumasento/polymer"
"ROCm/rocMLIR" -> "ROCm/AMDMIGraphX" ["e"=1]
"ROCm/rocMLIR" -> "ROCm/Tensile" ["e"=1]
"ROCm/rocMLIR" -> "libxsmm/tpp-mlir"
"ROCm/rocMLIR" -> "iree-org/iree-llvm-sandbox"
"ROCm/rocMLIR" -> "nod-ai/iree-amd-aie" ["e"=1]
"ROCm/rocMLIR" -> "intel/mlir-extensions"
"ROCm/rocMLIR" -> "ROCm/rocSOLVER" ["e"=1]
"ROCm/rocMLIR" -> "tensorflow/mlir-hlo"
"eth-cscs/DLA-Future" -> "pika-org/pika"
"inducer/islpy" -> "periscop/cloog"
"inducer/islpy" -> "Meinersbur/isl"
"inducer/islpy" -> "Meinersbur/pet"
"inducer/islpy" -> "Meinersbur/ppcg"
"AI-performance/embedded-ai.bench" -> "huawei-noah/bolt"
"AI-performance/embedded-ai.bench" -> "deepglint/EasyQuant" ["e"=1]
"andersbll/cudarray" -> "andersbll/deeppy" ["e"=1]
"andersbll/cudarray" -> "cudamat/cudamat"
"kumasento/polymer" -> "llvm/Polygeist"
"kumasento/polymer" -> "iml130/mlir-emitc"
"kumasento/polymer" -> "circt-hls/circt-hls" ["e"=1]
"kumasento/polymer" -> "kumasento/polsca"
"kumasento/polymer" -> "polymage-labs/mlirx"
"kumasento/polymer" -> "tancheng/mlir-cgra" ["e"=1]
"kumasento/polymer" -> "ROCm/rocMLIR"
"SeventhBlue/cudaLearningMaterials" -> "Saint-forWisdom/CUDA_ParallelPragram"
"rise-lang/shine" -> "rise-lang/rise"
"YashasSamaga/ConvolutionBuildingBlocks" -> "md2z34/winograd_gpu"
"jaywonchung/dotfiles" -> "friendliai/periflow-python-sdk"
"jaywonchung/dotfiles" -> "friendliai/periflow-cli"
"BBuf/tvm_mlir_learn" -> "BBuf/how-to-optim-algorithm-in-cuda"
"BBuf/tvm_mlir_learn" -> "merrymercy/awesome-tensor-compilers"
"BBuf/tvm_mlir_learn" -> "BBuf/how-to-learn-deep-learning-framework"
"BBuf/tvm_mlir_learn" -> "buddy-compiler/buddy-mlir"
"BBuf/tvm_mlir_learn" -> "KEKE046/mlir-tutorial"
"BBuf/tvm_mlir_learn" -> "xlite-dev/LeetCUDA"
"BBuf/tvm_mlir_learn" -> "apache/tvm" ["e"=1]
"BBuf/tvm_mlir_learn" -> "sophgo/tpu-mlir"
"BBuf/tvm_mlir_learn" -> "llvm/torch-mlir"
"BBuf/tvm_mlir_learn" -> "openmlsys/openmlsys-zh"
"BBuf/tvm_mlir_learn" -> "alibaba/BladeDISC"
"BBuf/tvm_mlir_learn" -> "flame/how-to-optimize-gemm"
"BBuf/tvm_mlir_learn" -> "iree-org/iree"
"BBuf/tvm_mlir_learn" -> "Liu-xiandong/How_to_optimize_in_GPU"
"BBuf/tvm_mlir_learn" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"ShiqiYu/CPP" -> "openmlsys/openmlsys-zh" ["e"=1]
"ShiqiYu/CPP" -> "l0ngc/hpc-learning" ["e"=1]
"apple/tensorflow_macos" -> "plaidml/plaidml" ["e"=1]
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/cub"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/thrust"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/nccl" ["e"=1]
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/gdrcopy" ["e"=1]
"NVIDIA-developer-blog/code-samples" -> "NervanaSystems/maxas"
"NVIDIA-developer-blog/code-samples" -> "cudpp/cudpp"
"NVIDIA-developer-blog/code-samples" -> "moderngpu/moderngpu"
"NVIDIA-developer-blog/code-samples" -> "harrism/hemi"
"NVIDIA-developer-blog/code-samples" -> "gpgpu-sim/gpgpu-sim_distribution" ["e"=1]
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/cuda-samples" ["e"=1]
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/cnmem"
"NVIDIA-developer-blog/code-samples" -> "baidu-research/persistent-rnn" ["e"=1]
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/cutlass" ["e"=1]
"antonmks/Alenka" -> "cudpp/cudpp" ["e"=1]
"NVIDIA/trt-samples-for-hackathon-cn" -> "BBuf/how-to-optim-algorithm-in-cuda" ["e"=1]
"rose-compiler/rose" -> "bondhugula/pluto" ["e"=1]
"pytorch/torchrec" -> "pytorch/FBGEMM" ["e"=1]
"NVIDIA/stdexec" -> "NVIDIA/cccl" ["e"=1]
"facebookresearch/CompilerGym" -> "google/ml-compiler-opt"
"facebookresearch/CompilerGym" -> "zwang4/awesome-machine-learning-in-compilers"
"facebookresearch/CompilerGym" -> "ChrisCummins/ProGraML" ["e"=1]
"facebookresearch/CompilerGym" -> "llvm/torch-mlir"
"facebookresearch/CompilerGym" -> "llvm/Polygeist"
"facebookresearch/CompilerGym" -> "jansel/opentuner"
"facebookresearch/CompilerGym" -> "spcl/ncc" ["e"=1]
"facebookresearch/CompilerGym" -> "tensorflow/mlir-hlo"
"facebookresearch/CompilerGym" -> "merrymercy/awesome-tensor-compilers"
"facebookresearch/CompilerGym" -> "iree-org/iree"
"facebookresearch/CompilerGym" -> "jiazhihao/TASO"
"facebookresearch/CompilerGym" -> "openxla/stablehlo"
"facebookresearch/CompilerGym" -> "j2kun/mlir-tutorial"
"facebookresearch/CompilerGym" -> "facebookresearch/loop_tool"
"facebookresearch/CompilerGym" -> "AliveToolkit/alive2" ["e"=1]
"google/gemmlowp" -> "pytorch/QNNPACK"
"google/gemmlowp" -> "Maratyszcza/NNPACK"
"google/gemmlowp" -> "flame/how-to-optimize-gemm"
"google/gemmlowp" -> "ARM-software/ComputeLibrary"
"google/gemmlowp" -> "andravin/wincnn"
"google/gemmlowp" -> "IntelLabs/distiller" ["e"=1]
"google/gemmlowp" -> "uxlfoundation/oneDNN"
"google/gemmlowp" -> "google/XNNPACK"
"google/gemmlowp" -> "pytorch/FBGEMM"
"google/gemmlowp" -> "projectNe10/Ne10"
"google/gemmlowp" -> "openai/openai-gemm"
"google/gemmlowp" -> "soumith/convnet-benchmarks" ["e"=1]
"google/gemmlowp" -> "MatthieuCourbariaux/BinaryNet" ["e"=1]
"google/gemmlowp" -> "Tencent/FeatherCNN"
"google/gemmlowp" -> "NervanaSystems/maxas"
"NVIDIA/cuda-python" -> "NVIDIA/cccl"
"NVIDIA/cuda-python" -> "tile-ai/tilelang" ["e"=1]
"NVIDIA/cuda-python" -> "flashinfer-ai/flashinfer" ["e"=1]
"NVIDIA/cuda-python" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/cuda-python" -> "HazyResearch/ThunderKittens" ["e"=1]
"NVIDIA/cuda-python" -> "NVIDIA/TransformerEngine" ["e"=1]
"NVIDIA/cuda-python" -> "NVIDIA/cutlass" ["e"=1]
"NVIDIA/cuda-python" -> "gpu-mode/lectures"
"NVIDIA/cuda-python" -> "ai-dynamo/dynamo" ["e"=1]
"NVIDIA/cuda-python" -> "xlite-dev/LeetCUDA"
"NVIDIA/cuda-python" -> "kvcache-ai/Mooncake" ["e"=1]
"NVIDIA/cuda-python" -> "NVIDIA/cub"
"NVIDIA/cuda-python" -> "NVIDIA/warp" ["e"=1]
"NVIDIA/cuda-python" -> "nv-legate/cupynumeric"
"NVIDIA/cuda-python" -> "inducer/pycuda"
"NVIDIA/thrust" -> "NVIDIA/cub"
"NVIDIA/thrust" -> "NVIDIA/libcudacxx"
"NVIDIA/thrust" -> "NVIDIA/cccl"
"NVIDIA/thrust" -> "arrayfire/arrayfire" ["e"=1]
"NVIDIA/thrust" -> "NVIDIA/cuda-samples" ["e"=1]
"NVIDIA/thrust" -> "NVIDIA/cutlass" ["e"=1]
"NVIDIA/thrust" -> "moderngpu/moderngpu"
"NVIDIA/thrust" -> "uxlfoundation/oneTBB" ["e"=1]
"NVIDIA/thrust" -> "NVIDIA-developer-blog/code-samples"
"NVIDIA/thrust" -> "NVIDIA/nccl" ["e"=1]
"NVIDIA/thrust" -> "STEllAR-GROUP/hpx" ["e"=1]
"NVIDIA/thrust" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/thrust" -> "ericniebler/range-v3" ["e"=1]
"NVIDIA/thrust" -> "ROCm/hip" ["e"=1]
"NVIDIA/thrust" -> "xtensor-stack/xtensor" ["e"=1]
"tzutalin/ImageNet_Utils" -> "dividiti/ck-caffe" ["e"=1]
"roastduck/FreeTensor" -> "thu-pacman/PET"
"roastduck/FreeTensor" -> "pku-liang/AMOS"
"roastduck/FreeTensor" -> "uwsampl/SparseTIR"
"roastduck/FreeTensor" -> "UofT-EcoSystem/DietCode"
"roastduck/FreeTensor" -> "thu-pacman/HyQuas"
"NVIDIA/caffe" -> "NVIDIA/cnmem" ["e"=1]
"eedalong/ECE408" -> "aschuh703/ECE408"
"Atcold/NYU-DLSP21" -> "minitorch/minitorch" ["e"=1]
"intel/idlf" -> "NervanaSystems/nervanagpu" ["e"=1]
"ermig1979/Simd" -> "ARM-software/ComputeLibrary" ["e"=1]
"ermig1979/Simd" -> "projectNe10/Ne10" ["e"=1]
"ermig1979/Simd" -> "intel/ARM_NEON_2_x86_SSE" ["e"=1]
"ermig1979/Simd" -> "halide/Halide" ["e"=1]
"ermig1979/Simd" -> "google/gemmlowp" ["e"=1]
"OpenPPL/ppl.nn" -> "OpenPPL/ppl.cv"
"OpenPPL/ppl.nn" -> "OpenPPL/ppq" ["e"=1]
"OpenPPL/ppl.nn" -> "alibaba/BladeDISC"
"OpenPPL/ppl.nn" -> "flame/how-to-optimize-gemm"
"OpenPPL/ppl.nn" -> "tpoisonooo/how-to-optimize-gemm"
"OpenPPL/ppl.nn" -> "pigirons/cpufp"
"OpenPPL/ppl.nn" -> "huawei-noah/bolt"
"OpenPPL/ppl.nn" -> "microsoft/nnfusion"
"OpenPPL/ppl.nn" -> "open-mmlab/mmdeploy" ["e"=1]
"OpenPPL/ppl.nn" -> "daquexian/onnx-simplifier" ["e"=1]
"OpenPPL/ppl.nn" -> "OpenPPL/ppl.llm.kernel.cuda"
"OpenPPL/ppl.nn" -> "openppl-public/ppl.nn.llm"
"OpenPPL/ppl.nn" -> "Tencent/TNN" ["e"=1]
"OpenPPL/ppl.nn" -> "ModelTC/MQBench" ["e"=1]
"OpenPPL/ppl.nn" -> "pytorch/TensorRT" ["e"=1]
"dmlc/dmlc-core" -> "dmlc/dlpack" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "BBuf/how-to-optim-algorithm-in-cuda"
"godweiyang/NN-CUDA-Example" -> "Tony-Tan/CUDA_Freshman"
"godweiyang/NN-CUDA-Example" -> "Liu-xiandong/How_to_optimize_in_GPU"
"godweiyang/NN-CUDA-Example" -> "brucefan1983/CUDA-Programming"
"godweiyang/NN-CUDA-Example" -> "BBuf/tvm_mlir_learn"
"godweiyang/NN-CUDA-Example" -> "xlite-dev/LeetCUDA"
"godweiyang/NN-CUDA-Example" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "gpu-mode/lectures"
"godweiyang/NN-CUDA-Example" -> "bytedance/lightseq" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "zjhellofss/KuiperInfer"
"godweiyang/NN-CUDA-Example" -> "OpenPPL/ppq" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "LitLeo/TensorRT_Tutorial" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "ifromeast/cuda_learning"
"godweiyang/NN-CUDA-Example" -> "NVIDIA/FasterTransformer" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "Cjkkkk/CUDA_gemm"
"kjw0612/awesome-random-forest" -> "deeplearningais/curfil" ["e"=1]
"NVIDIA/nvbench" -> "RRZE-HPC/gpu-benches"
"NVIDIA/nvbench" -> "NVIDIA/cccl"
"NVIDIA/nvbench" -> "NVIDIA/jitify"
"NVIDIA/nvbench" -> "NVIDIA/cuCollections"
"NVIDIA/nvbench" -> "ekondis/mixbench" ["e"=1]
"NVIDIA/nvbench" -> "NVIDIA/cub"
"NVIDIA/nvbench" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/nvbench" -> "NVIDIA/MatX"
"NVIDIA/nvbench" -> "rapidsai/rmm"
"NVIDIA/nvbench" -> "cloudcores/CuAssembler"
"NVIDIA/nvbench" -> "Yinghan-Li/YHs_Sample"
"NVIDIA/nvbench" -> "NVIDIA/gdrcopy" ["e"=1]
"NVIDIA/nvbench" -> "NVIDIA/NVTX"
"NVIDIA/nvbench" -> "KnowingNothing/MatmulTutorial"
"NVIDIA/nvbench" -> "Bruce-Lee-LY/cuda_hgemm"
"NervanaSystems/nervanagpu" -> "NervanaSystems/nervana-lib-gpu-performance-preview"
"NervanaSystems/nervanagpu" -> "DeepMark/deepmark" ["e"=1]
"NervanaSystems/nervanagpu" -> "bshillingford/autobw.torch" ["e"=1]
"NervanaSystems/nervanagpu" -> "eBay/maxDNN"
"NervanaSystems/nervanagpu" -> "PAA-NCIC/PPoPP2017_artifact"
"NervanaSystems/nervanagpu" -> "joschu/cgt" ["e"=1]
"NervanaSystems/nervanagpu" -> "NervanaSystems/maxas"
"alpa-projects/alpa" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"alpa-projects/alpa" -> "microsoft/nnfusion" ["e"=1]
"alpa-projects/alpa" -> "alibaba/BladeDISC" ["e"=1]
"alpa-projects/alpa" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["e"=1]
"Tencent/PatrickStar" -> "alibaba/BladeDISC" ["e"=1]
"NVIDIA/cnmem" -> "NVIDIA/jitify"
"NVIDIA/cnmem" -> "rapidsai/rmm"
"NVIDIA/cnmem" -> "linnanwang/superneurons-release"
"NVIDIA/cnmem" -> "canonizer/halloc" ["e"=1]
"NVIDIA/cnmem" -> "cudpp/cudpp"
"NVIDIA/cnmem" -> "NervanaSystems/maxas"
"NVIDIA/cnmem" -> "NVIDIA/caffe" ["e"=1]
"pytorch/functorch" -> "pytorch/torchdynamo" ["e"=1]
"akrizhevsky/cuda-convnet2" -> "dnouri/cuda-convnet"
"akrizhevsky/cuda-convnet2" -> "soumith/convnet-benchmarks" ["e"=1]
"akrizhevsky/cuda-convnet2" -> "TorontoDeepLearning/convnet"
"akrizhevsky/cuda-convnet2" -> "uoguelph-mlrg/theano_alexnet" ["e"=1]
"akrizhevsky/cuda-convnet2" -> "NervanaSystems/nervanagpu"
"akrizhevsky/cuda-convnet2" -> "NervanaSystems/maxas"
"akrizhevsky/cuda-convnet2" -> "sdemyanov/ConvNet"
"akrizhevsky/cuda-convnet2" -> "dmlc/minerva" ["e"=1]
"akrizhevsky/cuda-convnet2" -> "eBay/maxDNN"
"akrizhevsky/cuda-convnet2" -> "gcr/torch-residual-networks" ["e"=1]
"akrizhevsky/cuda-convnet2" -> "NervanaSystems/neon" ["e"=1]
"akrizhevsky/cuda-convnet2" -> "openai/openai-gemm"
"akrizhevsky/cuda-convnet2" -> "andravin/wincnn"
"akrizhevsky/cuda-convnet2" -> "dmlc/cxxnet" ["e"=1]
"akrizhevsky/cuda-convnet2" -> "dmlc/mshadow" ["e"=1]
"RRZE-HPC/likwid" -> "libxsmm/libxsmm" ["e"=1]
"trailofbits/vast" -> "llvm/clangir" ["e"=1]
"trailofbits/vast" -> "llvm/Polygeist" ["e"=1]
"datastaxdevs/workshop-graphql-netflix" -> "OpenPPL/ppl.nn" ["e"=1]
"jratcliff63367/sse2neon" -> "intel/ARM_NEON_2_x86_SSE"
"jratcliff63367/sse2neon" -> "DLTcollab/sse2neon" ["e"=1]
"jratcliff63367/sse2neon" -> "RomaTeng/EKF-SLAM-on-Manifold" ["e"=1]
"csmith-project/creduce" -> "llvm/clangir" ["e"=1]
"snuspl/nimble" -> "friendliai/FAI-Model"
"snuspl/nimble" -> "friendliai/periflow-python-sdk"
"snuspl/nimble" -> "snuspl/parallax"
"snuspl/nimble" -> "snuspl/fluffy"
"snuspl/nimble" -> "friendliai/friendli-client"
"snuspl/nimble" -> "friendliai/periflow-cli"
"snuspl/nimble" -> "friendliai/LLMServingPerfEvaluator"
"snuspl/nimble" -> "jaywonchung/dotfiles"
"snuspl/nimble" -> "jiazhihao/TASO"
"snuspl/nimble" -> "snuspl/pluto"
"snuspl/nimble" -> "snuspl/nemo"
"snuspl/nimble" -> "mit-han-lab/inter-operator-scheduler"
"snuspl/nimble" -> "friendliai/friendli-model-optimizer"
"andrepuschmann/math-neon" -> "xboxfanj/math-neon"
"tlc-pack/tenset" -> "zhaiyi000/tlp"
"tlc-pack/tenset" -> "UofT-EcoSystem/DietCode"
"tlc-pack/tenset" -> "awslabs/lorien"
"tlc-pack/tenset" -> "uwsampl/SparseTIR"
"tlc-pack/tenset" -> "zhaiyi000/tlm"
"tlc-pack/tenset" -> "awslabs/slapo"
"PKUFlyingPig/CS149-parallel-computing" -> "XiaoSong9905/CUDA-Optimization-Guide" ["e"=1]
"Jack47/hack-SysML" -> "BBuf/how-to-learn-deep-learning-framework"
"Jack47/hack-SysML" -> "alibaba/BladeDISC"
"Jack47/hack-SysML" -> "Yinghan-Li/YHs_Sample"
"Jack47/hack-SysML" -> "mlc-ai/mlc-zh"
"Jack47/hack-SysML" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero"
"Jack47/hack-SysML" -> "BBuf/how-to-optim-algorithm-in-cuda"
"Jack47/hack-SysML" -> "mlc-ai/notebooks"
"Jack47/hack-SysML" -> "tpoisonooo/how-to-optimize-gemm"
"Jack47/hack-SysML" -> "sgl-project/sgl-learning-materials" ["e"=1]
"Jack47/hack-SysML" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Jack47/hack-SysML" -> "BBuf/tvm_mlir_learn"
"Jack47/hack-SysML" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"Jack47/hack-SysML" -> "merrymercy/awesome-tensor-compilers"
"Jack47/hack-SysML" -> "sail-sg/zero-bubble-pipeline-parallelism" ["e"=1]
"Jack47/hack-SysML" -> "petuum/adaptdl" ["e"=1]
"tlc-pack/relax" -> "apache/tvm-rfcs"
"tlc-pack/relax" -> "mlc-ai/relax"
"tlc-pack/relax" -> "tqchen/ffi-navigator"
"tlc-pack/relax" -> "mlc-ai/notebooks"
"tlc-pack/relax" -> "StrongSpoon/tvm.schedule"
"tlc-pack/relax" -> "pku-liang/AMOS"
"tlc-pack/relax" -> "uwsampl/SparseTIR"
"tlc-pack/relax" -> "tlc-pack/TLCBench"
"tlc-pack/relax" -> "mit-han-lab/inter-operator-scheduler"
"tlc-pack/relax" -> "UofT-EcoSystem/DietCode"
"tlc-pack/relax" -> "Archermmt/tvm_walk_through"
"tlc-pack/relax" -> "thu-pacman/PET"
"tlc-pack/relax" -> "roastduck/FreeTensor"
"tlc-pack/relax" -> "awslabs/raf"
"tlc-pack/relax" -> "anirudhsundar/tvm-gdb-commands"
"P2Tree/LLVM_for_cpu0" -> "StrongSpoon/tvm.schedule" ["e"=1]
"P2Tree/LLVM_for_cpu0" -> "buddy-compiler/buddy-mlir" ["e"=1]
"P2Tree/LLVM_for_cpu0" -> "KEKE046/mlir-tutorial" ["e"=1]
"P2Tree/LLVM_for_cpu0" -> "Lewuathe/mlir-hello" ["e"=1]
"pytorch/data" -> "pytorch/torchdynamo" ["e"=1]
"buddy-compiler/buddy-mlir" -> "KEKE046/mlir-tutorial"
"buddy-compiler/buddy-mlir" -> "sophgo/tpu-mlir"
"buddy-compiler/buddy-mlir" -> "onnx/onnx-mlir"
"buddy-compiler/buddy-mlir" -> "BBuf/tvm_mlir_learn"
"buddy-compiler/buddy-mlir" -> "llvm/Polygeist"
"buddy-compiler/buddy-mlir" -> "llvm/torch-mlir"
"buddy-compiler/buddy-mlir" -> "bytedance/byteir"
"buddy-compiler/buddy-mlir" -> "j2kun/mlir-tutorial"
"buddy-compiler/buddy-mlir" -> "buddy-compiler/buddy-benchmark"
"buddy-compiler/buddy-mlir" -> "MegEngine/MegCC"
"buddy-compiler/buddy-mlir" -> "alibaba/BladeDISC"
"buddy-compiler/buddy-mlir" -> "tensorflow/mlir-hlo"
"buddy-compiler/buddy-mlir" -> "iree-org/iree"
"buddy-compiler/buddy-mlir" -> "merrymercy/awesome-tensor-compilers"
"buddy-compiler/buddy-mlir" -> "spcl/pymlir"
"xiaoweiChen/Learn-LLVM-12" -> "buddy-compiler/buddy-mlir" ["e"=1]
"xiaoweiChen/Learn-LLVM-12" -> "StrongSpoon/tvm.schedule" ["e"=1]
"xiaoweiChen/Learn-LLVM-12" -> "KEKE046/mlir-tutorial" ["e"=1]
"ChunelFeng/CGraph" -> "zjhellofss/KuiperInfer" ["e"=1]
"nv-legate/cupynumeric" -> "nv-legate/legate"
"nv-legate/cupynumeric" -> "nv-legate/legate.pandas"
"nv-legate/cupynumeric" -> "StanfordLegion/legion" ["e"=1]
"nv-legate/cupynumeric" -> "NVIDIA/MatX"
"nv-legate/cupynumeric" -> "NVIDIA/cuda-python"
"nv-legate/cupynumeric" -> "rapidsai/cucim" ["e"=1]
"nv-legate/cupynumeric" -> "LLNL/RAJA" ["e"=1]
"nv-legate/cupynumeric" -> "rapidsai/rmm"
"nv-legate/cupynumeric" -> "FZJ-JSC/tutorial-multi-gpu"
"nv-legate/cupynumeric" -> "rapidsai/kvikio" ["e"=1]
"nv-legate/cupynumeric" -> "NVIDIA/cuCollections"
"nv-legate/cupynumeric" -> "hypre-space/hypre" ["e"=1]
"nv-legate/cupynumeric" -> "rapidsai/cugraph" ["e"=1]
"nv-legate/cupynumeric" -> "PyFR/PyFR" ["e"=1]
"nv-legate/cupynumeric" -> "NVIDIA/cccl"
"BaguaSys/bagua" -> "alibaba/BladeDISC" ["e"=1]
"BaguaSys/bagua" -> "BaguaSys/bagua-core" ["e"=1]
"BaguaSys/bagua" -> "pytorch/torchdynamo" ["e"=1]
"intel/mlir-extensions" -> "libxsmm/tpp-mlir"
"intel/mlir-extensions" -> "intel/graph-compiler"
"intel/mlir-extensions" -> "numba/numba-mlir"
"intel/mlir-extensions" -> "kumasento/polymer"
"intel/mlir-extensions" -> "ROCm/rocMLIR"
"intel/mlir-extensions" -> "iml130/mlir-emitc"
"intel/mlir-extensions" -> "NodLabs/mlir-examples"
"intel/mlir-extensions" -> "intel/xetla"
"intel/mlir-extensions" -> "intel/intel-xpu-backend-for-triton"
"intel/mlir-extensions" -> "llvm/mlir-www"
"hughperkins/cltorch" -> "eBay/maxDNN" ["e"=1]
"deeperlearning/professional-cuda-c-programming" -> "Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes"
"deeperlearning/professional-cuda-c-programming" -> "CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-"
"deeperlearning/professional-cuda-c-programming" -> "ArchaeaSoftware/cudahandbook"
"deeperlearning/professional-cuda-c-programming" -> "brucefan1983/CUDA-Programming"
"deeperlearning/professional-cuda-c-programming" -> "NVIDIA/CUDALibrarySamples"
"deeperlearning/professional-cuda-c-programming" -> "PacktPublishing/Learn-CUDA-Programming"
"deeperlearning/professional-cuda-c-programming" -> "Bruce-Lee-LY/cuda_hgemm"
"deeperlearning/professional-cuda-c-programming" -> "NVIDIA/multi-gpu-programming-models"
"deeperlearning/professional-cuda-c-programming" -> "NVIDIA-developer-blog/code-samples"
"deeperlearning/professional-cuda-c-programming" -> "66RING/tiny-flash-attention"
"deeperlearning/professional-cuda-c-programming" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Meinersbur/ppcg" -> "Meinersbur/pet"
"Meinersbur/ppcg" -> "Meinersbur/isl"
"Meinersbur/ppcg" -> "bondhugula/pluto"
"Meinersbur/ppcg" -> "inducer/islpy"
"Meinersbur/ppcg" -> "kumasento/polymer"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "Cjkkkk/CUDA_gemm"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "Yinghan-Li/YHs_Sample"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "Liu-xiandong/How_to_optimize_in_GPU"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "njuhope/cuda_sgemm"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "Bruce-Lee-LY/cuda_hgemm"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "tpoisonooo/how-to-optimize-gemm"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "yzhaiustc/Optimizing-DGEMM-on-Intel-CPUs-with-AVX512F"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "KnowingNothing/MatmulTutorial"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "NervanaSystems/maxas"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "cloudcores/CuAssembler"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "wangzyon/NVIDIA_SGEMM_PRACTICE"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "siboehm/SGEMM_CUDA"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "flame/how-to-optimize-gemm"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "pranjalssh/fast.cu"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "nicolaswilde/cuda-tensorcore-hgemm"
"Tencent/Forward" -> "OpenPPL/ppl.nn" ["e"=1]
"Tencent/Forward" -> "AI-performance/embedded-ai.bench" ["e"=1]
"Tencent/Forward" -> "OpenPPL/ppl.cv" ["e"=1]
"xboot/libonnx" -> "MegEngine/MegCC" ["e"=1]
"snuspl/cruise" -> "snuspl/pluto"
"snuspl/cruise" -> "snuspl/nemo"
"ekondis/mixbench" -> "NVIDIA/nvbench" ["e"=1]
"ekondis/mixbench" -> "RRZE-HPC/gpu-benches" ["e"=1]
"YuanhaoGong/CurvatureFilter" -> "YuanhaoGong/SideWindowFilter"
"YuanhaoGong/CurvatureFilter" -> "YuanhaoGong/Naturalization"
"YuanhaoGong/CurvatureFilter" -> "YuanhaoGong/WeightedMeanCurvature"
"YuanhaoGong/CurvatureFilter" -> "sai-bi/ImageSmoothing"
"YuanhaoGong/CurvatureFilter" -> "timothybrooks/hdr-plus" ["e"=1]
"mmperf/mmperf" -> "iree-org/iree-llvm-sandbox"
"OpenPPL/ppl.cv" -> "OpenPPL/ppl.nn"
"OpenPPL/ppl.cv" -> "OpenPPL/ppl.common"
"OpenPPL/ppl.cv" -> "OpenPPL/ppq" ["e"=1]
"OpenPPL/ppl.cv" -> "openppl-public/ppl.nn.llm"
"OpenPPL/ppl.cv" -> "nndeploy/nndeploy" ["e"=1]
"OpenPPL/ppl.cv" -> "MegEngine/MegCC"
"OpenPPL/ppl.cv" -> "CVCUDA/CV-CUDA" ["e"=1]
"OpenPPL/ppl.cv" -> "tpoisonooo/how-to-optimize-gemm"
"OpenPPL/ppl.cv" -> "Tencent/TPAT" ["e"=1]
"OpenPPL/ppl.cv" -> "pigirons/cpufp"
"OpenPPL/ppl.cv" -> "NVIDIA-AI-IOT/tensorrt_plugin_generator" ["e"=1]
"OpenPPL/ppl.cv" -> "OpenPPL/CuAssembler"
"OpenPPL/ppl.cv" -> "OpenPPL/ppl.llm.kernel.cuda"
"OpenPPL/ppl.cv" -> "ModelTC/MQBench" ["e"=1]
"OpenPPL/ppl.cv" -> "zerollzeng/tiny-tensorrt" ["e"=1]
"luoyetx/mini-caffe" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"ROCm/composable_kernel" -> "cloudcores/CuAssembler" ["e"=1]
"ROCm/composable_kernel" -> "ROCm/rocMLIR" ["e"=1]
"ROCm/composable_kernel" -> "Yinghan-Li/YHs_Sample" ["e"=1]
"UoB-HPC/BabelStream" -> "NVIDIA/multi-gpu-programming-models" ["e"=1]
"nv-legate/legate" -> "nv-legate/legate.pandas"
"nv-legate/legate" -> "nv-legate/cupynumeric"
"nv-legate/legate" -> "nv-legate/legate-sparse"
"nv-legate/legate" -> "nv-legate/legate.hello"
"tbennun/cudnn-training" -> "pwlnk/cuda-neural-network"
"tbennun/cudnn-training" -> "Hardware-Alchemy/cuDNN-sample"
"tbennun/cudnn-training" -> "haanjack/mnist-cudnn"
"tbennun/cudnn-training" -> "eBay/maxDNN"
"JuliaHubOSS/llvm-cbe" -> "llvm/clangir" ["e"=1]
"wliusjtu/Generalized-Smoothing-Framework" -> "wliusjtu/Real-time-Image-Smoothing-via-Iterative-Least-Squares"
"wliusjtu/Generalized-Smoothing-Framework" -> "wliusjtu/Embedding-Bilateral-Filter-in-Least-Squares-for-Efficient-Edge-preserving-Image-Smoothing"
"ctuning/ck-env" -> "ctuning/ck-crowdnode"
"ctuning/ck-env" -> "ctuning/ck-crowdtuning"
"ctuning/ck-env" -> "ctuning/ck-math"
"ctuning/ck-env" -> "ctuning/ck-web"
"ctuning/ck-env" -> "ctuning/ck-dissemination-modules"
"ctuning/ck-env" -> "ctuning/ck-docker"
"ctuning/ck-env" -> "ctuning/ck-dev-compilers"
"ctuning/ck-env" -> "ctuning/ck-web-adapt-workshop"
"ctuning/ck-env" -> "ctuning/ck-ext-far-manager-plugin"
"ctuning/ck-env" -> "ctuning/ck-guide-images"
"ctuning/ck-env" -> "ctuning/ck-autotuning"
"ctuning/ck-env" -> "ctuning/ck-analytics"
"ctuning/ck-env" -> "dividiti/gemmbench-adapt16"
"ctuning/ck-env" -> "ctuning/ck-crowdtuning-platforms"
"ctuning/ck-env" -> "ctuning/ck-tensorflow"
"apache/tvm-rfcs" -> "tlc-pack/relax"
"apache/tvm-rfcs" -> "tlc-pack/TLCBench"
"apache/tvm-rfcs" -> "pku-liang/AMOS"
"apache/tvm-rfcs" -> "anirudhsundar/tvm-gdb-commands"
"NVlabs/SASSI" -> "PAA-NCIC/PPoPP2017_artifact" ["e"=1]
"thu-pacman/PET" -> "roastduck/FreeTensor"
"thu-pacman/PET" -> "mit-han-lab/inter-operator-scheduler"
"thu-pacman/PET" -> "pku-liang/AMOS"
"thu-pacman/PET" -> "uwsampl/SparseTIR"
"thu-pacman/PET" -> "UofT-EcoSystem/DietCode"
"thu-pacman/PET" -> "cmu-catalyst/collage"
"thu-pacman/PET" -> "jiazhihao/TASO"
"RUSH-LAB/SLIDE" -> "keroro824/HashingDeepLearning"
"RUSH-LAB/SLIDE" -> "IntelLabs/SLIDE_opt_ia"
"NVIDIA/cudnn-frontend" -> "ColfaxResearch/cutlass-kernels"
"NVIDIA/cudnn-frontend" -> "ROCm/composable_kernel" ["e"=1]
"NVIDIA/cudnn-frontend" -> "KnowingNothing/MatmulTutorial"
"NVIDIA/cudnn-frontend" -> "bytedance/ByteTransformer"
"NVIDIA/cudnn-frontend" -> "cloudcores/CuAssembler"
"NVIDIA/cudnn-frontend" -> "NVIDIA/TransformerEngine" ["e"=1]
"NVIDIA/cudnn-frontend" -> "bytedance/flux" ["e"=1]
"NVIDIA/cudnn-frontend" -> "Cjkkkk/CUDA_gemm"
"NVIDIA/cudnn-frontend" -> "fanshiqing/grouped_gemm"
"NVIDIA/cudnn-frontend" -> "NVIDIA/NVTX"
"NVIDIA/cudnn-frontend" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/cudnn-frontend" -> "microsoft/nnfusion"
"NVIDIA/cudnn-frontend" -> "alibaba/BladeDISC"
"NVIDIA/cudnn-frontend" -> "tspeterkim/flash-attention-minimal"
"NVIDIA/cudnn-frontend" -> "FlagOpen/FlagGems" ["e"=1]
"Lewuathe/mlir-hello" -> "iml130/mlir-emitc"
"Lewuathe/mlir-hello" -> "KEKE046/mlir-tutorial"
"Lewuathe/mlir-hello" -> "jmgorius/mlir-standalone-template"
"Lewuathe/mlir-hello" -> "llvm/Polygeist"
"anirudhsundar/tvm-gdb-commands" -> "Lunderberg/tvm-gdb-extension"
"jaywonchung/reason" -> "jaywonchung/dotfiles" ["e"=1]
"laanwj/decuda" -> "hyqneuron/asfermi"
"thenifty/neon-guide" -> "rogerou/Arm-neon-intrinsics"
"thenifty/neon-guide" -> "intel/ARM_NEON_2_x86_SSE"
"thenifty/neon-guide" -> "Ldpe2G/ArmNeonOptimization"
"thenifty/neon-guide" -> "projectNe10/Ne10"
"thenifty/neon-guide" -> "tpoisonooo/how-to-optimize-gemm"
"thenifty/neon-guide" -> "ARM-software/ComputeLibrary"
"thenifty/neon-guide" -> "jratcliff63367/sse2neon"
"thenifty/neon-guide" -> "BBuf/ArmNeonOptimization"
"thenifty/neon-guide" -> "andravin/wincnn"
"thenifty/neon-guide" -> "MegEngine/mperf"
"thenifty/neon-guide" -> "google/gemmlowp"
"thenifty/neon-guide" -> "AI-performance/embedded-ai.bench"
"thenifty/neon-guide" -> "MegEngine/MegPeak"
"mit-han-lab/inter-operator-scheduler" -> "thu-pacman/PET"
"mit-han-lab/inter-operator-scheduler" -> "pku-liang/AMOS"
"mit-han-lab/inter-operator-scheduler" -> "UofT-EcoSystem/DietCode"
"mit-han-lab/inter-operator-scheduler" -> "jiazhihao/TASO"
"mit-han-lab/inter-operator-scheduler" -> "pku-liang/FlexTensor"
"mit-han-lab/inter-operator-scheduler" -> "tlc-pack/relax"
"mit-han-lab/inter-operator-scheduler" -> "StrongSpoon/tvm.schedule"
"mit-han-lab/inter-operator-scheduler" -> "uwsampl/SparseTIR"
"mit-han-lab/inter-operator-scheduler" -> "tlc-pack/tenset"
"mit-han-lab/inter-operator-scheduler" -> "microsoft/nnfusion"
"mit-han-lab/inter-operator-scheduler" -> "awslabs/raf"
"mit-han-lab/inter-operator-scheduler" -> "nox-410/tvm.tl"
"mit-han-lab/inter-operator-scheduler" -> "cmu-catalyst/collage"
"MegEngine/cutlass" -> "njuhope/cuda_sgemm"
"google/nccl-fastsocket" -> "BaguaSys/bagua-net" ["e"=1]
"pku-liang/AMOS" -> "pku-liang/FlexTensor"
"pku-liang/AMOS" -> "UofT-EcoSystem/DietCode"
"pku-liang/AMOS" -> "nox-410/tvm.tl"
"pku-liang/AMOS" -> "zhaiyi000/tlp"
"pku-liang/AMOS" -> "roastduck/FreeTensor"
"pku-liang/AMOS" -> "mit-han-lab/inter-operator-scheduler"
"pku-liang/AMOS" -> "thu-pacman/PET"
"BaguaSys/operator" -> "BaguaSys/tutorials"
"Pylir/Pylir" -> "beaver-lodge/beaver"
"Pylir/Pylir" -> "Checkmate50/pylambda"
"Pylir/Pylir" -> "jmgorius/mlir-standalone-template"
"nv-legate/legate.pandas" -> "nv-legate/legate"
"nv-legate/legate.pandas" -> "nv-legate/legate.hello"
"Meinersbur/isl" -> "inducer/islpy"
"Meinersbur/isl" -> "Meinersbur/ppcg"
"Meinersbur/pet" -> "periscop/cloog"
"Meinersbur/pet" -> "Meinersbur/ppcg"
"UDC-GAC/openCNN" -> "md2z34/winograd_gpu"
"eBay/maxDNN" -> "hyqneuron/asfermi"
"Lunderberg/tvm-gdb-extension" -> "anirudhsundar/tvm-gdb-commands"
"BaguaSys/bagua-core" -> "BaguaSys/bagua-net"
"BaguaSys/bagua-core" -> "BaguaSys/tutorials"
"BaguaSys/bagua-net" -> "BaguaSys/tutorials"
"BaguaSys/bagua-net" -> "BaguaSys/bagua-core"
"snuspl/fluffy" -> "jaywonchung/dotfiles"
"snuspl/fluffy" -> "friendliai/periflow-python-sdk"
"snuspl/fluffy" -> "friendliai/periflow-cli"
"OpenPPL/ppl.common" -> "OpenPPL/hpcc"
"fergaletto/SSIF" -> "fergaletto/GVWA"
"hyqneuron/asfermi" -> "xiuxiazhang/KeplerAs"
"hyqneuron/asfermi" -> "PAA-NCIC/PPoPP2017_artifact"
"hyqneuron/asfermi" -> "laanwj/decuda"
"Cambricon/mlu-exporter" -> "Cambricon/cambricon-k8s-device-plugin"
"CambriconKnight/dev-env-ubuntu" -> "CambriconKnight/mlu220-cross-compile-docker-image"
"daadaada/gas" -> "hkust-adsl/gass"
"inisis/machine-learning-facial-deformer" -> "inisis/onion"
"inisis/machine-learning-facial-deformer" -> "WeLoveAI/onnx2torch"
"inisis/bilibili-video" -> "inisis/onion"
"inisis/bilibili-video" -> "inisis/chexpert"
"OpenPPL/hpcc" -> "OpenPPL/ppl.common"
"CambriconKnight/mlu220-cross-compile-docker-image" -> "CambriconKnight/dev-env-ubuntu"
"swsnu/aisys2021" -> "friendliai/periflow-cli"
"swsnu/aisys2021" -> "jaywonchung/dotfiles"
"BaguaSys/tutorials" -> "BaguaSys/bagua-net"
"BaguaSys/tutorials" -> "BaguaSys/bagua-core"
"NVIDIA/open-gpu-kernel-modules" -> "vosen/ZLUDA" ["e"=1]
"srush/Tensor-Puzzles" -> "minitorch/minitorch" ["e"=1]
"srush/Tensor-Puzzles" -> "gpu-mode/lectures" ["e"=1]
"TingsongYu/PyTorch-Tutorial-2nd" -> "chenzomi12/AISystem" ["e"=1]
"elemental/Elemental" -> "flame/libflame" ["e"=1]
"elemental/Elemental" -> "libxsmm/libxsmm" ["e"=1]
"elemental/Elemental" -> "LLNL/Aluminum" ["e"=1]
"parallel101/course" -> "zjhellofss/KuiperInfer" ["e"=1]
"parallel101/course" -> "xlite-dev/LeetCUDA" ["e"=1]
"parallel101/course" -> "BBuf/how-to-optim-algorithm-in-cuda" ["e"=1]
"parallel101/course" -> "openmlsys/openmlsys-zh" ["e"=1]
"parallel101/course" -> "Tony-Tan/CUDA_Freshman" ["e"=1]
"openmlsys/openmlsys-zh" -> "microsoft/AI-System"
"openmlsys/openmlsys-zh" -> "BBuf/tvm_mlir_learn"
"openmlsys/openmlsys-zh" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero"
"openmlsys/openmlsys-zh" -> "chenzomi12/AISystem"
"openmlsys/openmlsys-zh" -> "xlite-dev/LeetCUDA"
"openmlsys/openmlsys-zh" -> "BBuf/how-to-optim-algorithm-in-cuda"
"openmlsys/openmlsys-zh" -> "merrymercy/awesome-tensor-compilers"
"openmlsys/openmlsys-zh" -> "zjhellofss/KuiperInfer"
"openmlsys/openmlsys-zh" -> "gpu-mode/lectures"
"openmlsys/openmlsys-zh" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"openmlsys/openmlsys-zh" -> "NVIDIA/FasterTransformer" ["e"=1]
"openmlsys/openmlsys-zh" -> "apache/tvm" ["e"=1]
"openmlsys/openmlsys-zh" -> "flashinfer-ai/flashinfer" ["e"=1]
"openmlsys/openmlsys-zh" -> "kvcache-ai/Mooncake" ["e"=1]
"openmlsys/openmlsys-zh" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial"
"google/inception" -> "NervanaSystems/nervanagpu" ["e"=1]
"minitorch/minitorch" -> "srush/Tensor-Puzzles" ["e"=1]
"minitorch/minitorch" -> "gpu-mode/lectures"
"minitorch/minitorch" -> "srush/Triton-Puzzles" ["e"=1]
"minitorch/minitorch" -> "xlite-dev/LeetCUDA"
"minitorch/minitorch" -> "microsoft/AI-System"
"minitorch/minitorch" -> "gpu-mode/resource-stream" ["e"=1]
"minitorch/minitorch" -> "srush/GPU-Puzzles" ["e"=1]
"minitorch/minitorch" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero"
"minitorch/minitorch" -> "srush/LLM-Training-Puzzles" ["e"=1]
"minitorch/minitorch" -> "BBuf/how-to-optim-algorithm-in-cuda"
"minitorch/minitorch" -> "openmlsys/openmlsys-zh"
"minitorch/minitorch" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial"
"minitorch/minitorch" -> "flashinfer-ai/flashinfer" ["e"=1]
"minitorch/minitorch" -> "pytorch/torchtitan" ["e"=1]
"minitorch/minitorch" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"zchee/cuda-sample" -> "lzhengchun/matrix-cuda"
"zchee/cuda-sample" -> "wangzyon/NVIDIA_SGEMM_PRACTICE"
"zchee/cuda-sample" -> "NVIDIA-developer-blog/code-samples"
"andersbll/neural_artistic_style" -> "andersbll/cudarray" ["e"=1]
"shibatch/sleef" -> "ARM-software/optimized-routines" ["e"=1]
"shibatch/sleef" -> "libxsmm/libxsmm" ["e"=1]
"shibatch/sleef" -> "intel/ARM_NEON_2_x86_SSE" ["e"=1]
"amd/OpenCL-caffe" -> "eBay/maxDNN" ["e"=1]
"MAhaitao999/CUDA_Programming" -> "QINZHAOYU/CudaSteps"
"pytorch/torchdynamo" -> "alibaba/BladeDISC"
"pytorch/torchdynamo" -> "llvm/torch-mlir"
"pytorch/torchdynamo" -> "pytorch/functorch" ["e"=1]
"pytorch/torchdynamo" -> "pytorch/PiPPy" ["e"=1]
"pytorch/torchdynamo" -> "ELS-RD/kernl" ["e"=1]
"pytorch/torchdynamo" -> "pytorch/kineto" ["e"=1]
"pytorch/torchdynamo" -> "microsoft/nnfusion"
"pytorch/torchdynamo" -> "facebookresearch/fairscale" ["e"=1]
"pytorch/torchdynamo" -> "tensorflow/mlir-hlo"
"pytorch/torchdynamo" -> "hidet-org/hidet"
"pytorch/torchdynamo" -> "pytorch/FBGEMM"
"pytorch/torchdynamo" -> "NVIDIA/TransformerEngine" ["e"=1]
"pytorch/torchdynamo" -> "pytorch/benchmark" ["e"=1]
"pytorch/torchdynamo" -> "pytorch/TensorRT" ["e"=1]
"pytorch/torchdynamo" -> "jiazhihao/TASO"
"Liu-xiandong/How_to_optimize_in_GPU" -> "BBuf/how-to-optim-algorithm-in-cuda"
"Liu-xiandong/How_to_optimize_in_GPU" -> "Cjkkkk/CUDA_gemm"
"Liu-xiandong/How_to_optimize_in_GPU" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"Liu-xiandong/How_to_optimize_in_GPU" -> "Yinghan-Li/YHs_Sample"
"Liu-xiandong/How_to_optimize_in_GPU" -> "Bruce-Lee-LY/cuda_hgemm"
"Liu-xiandong/How_to_optimize_in_GPU" -> "tpoisonooo/how-to-optimize-gemm"
"Liu-xiandong/How_to_optimize_in_GPU" -> "xlite-dev/LeetCUDA"
"Liu-xiandong/How_to_optimize_in_GPU" -> "flame/how-to-optimize-gemm"
"Liu-xiandong/How_to_optimize_in_GPU" -> "wangzyon/NVIDIA_SGEMM_PRACTICE"
"Liu-xiandong/How_to_optimize_in_GPU" -> "KnowingNothing/MatmulTutorial"
"Liu-xiandong/How_to_optimize_in_GPU" -> "DD-DuDa/Cute-Learning"
"Liu-xiandong/How_to_optimize_in_GPU" -> "BBuf/tvm_mlir_learn"
"Liu-xiandong/How_to_optimize_in_GPU" -> "tspeterkim/flash-attention-minimal"
"Liu-xiandong/How_to_optimize_in_GPU" -> "XiaoSong9905/CUDA-Optimization-Guide"
"Liu-xiandong/How_to_optimize_in_GPU" -> "flashinfer-ai/flashinfer" ["e"=1]
"Yinghan-Li/YHs_Sample" -> "njuhope/cuda_sgemm"
"Yinghan-Li/YHs_Sample" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"Yinghan-Li/YHs_Sample" -> "tpoisonooo/how-to-optimize-gemm"
"Yinghan-Li/YHs_Sample" -> "Cjkkkk/CUDA_gemm"
"Yinghan-Li/YHs_Sample" -> "Bruce-Lee-LY/cuda_hgemm"
"Yinghan-Li/YHs_Sample" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Yinghan-Li/YHs_Sample" -> "nicolaswilde/cuda-tensorcore-hgemm"
"Yinghan-Li/YHs_Sample" -> "KnowingNothing/MatmulTutorial"
"Yinghan-Li/YHs_Sample" -> "cloudcores/CuAssembler"
"Yinghan-Li/YHs_Sample" -> "AyakaGEMM/Hands-on-GEMM"
"Yinghan-Li/YHs_Sample" -> "NervanaSystems/maxas"
"Yinghan-Li/YHs_Sample" -> "sunlex0717/DissectingTensorCores"
"Yinghan-Li/YHs_Sample" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"Yinghan-Li/YHs_Sample" -> "pranjalssh/fast.cu"
"Yinghan-Li/YHs_Sample" -> "66RING/tiny-flash-attention"
"ZhangGe6/onnx-modifier" -> "OpenPPL/ppl.nn" ["e"=1]
"facebookarchive/fb-caffe-exts" -> "Maratyszcza/NNPACK" ["e"=1]
"open-mmlab/mmdeploy" -> "OpenPPL/ppl.nn" ["e"=1]
"nod-ai/SHARK-Studio" -> "lshqqytiger/stable-diffusion-webui-amdgpu"
"nod-ai/SHARK-Studio" -> "Amblyopius/Stable-Diffusion-ONNX-FP16"
"nod-ai/SHARK-Studio" -> "llvm/torch-mlir"
"nod-ai/SHARK-Studio" -> "iree-org/iree"
"nod-ai/SHARK-Studio" -> "azuritecoin/OnnxDiffusersUI"
"nod-ai/SHARK-Studio" -> "YellowRoseCx/koboldcpp-rocm"
"nod-ai/SHARK-Studio" -> "openxla/stablehlo"
"nod-ai/SHARK-Studio" -> "vladmandic/sdnext" ["e"=1]
"nod-ai/SHARK-Studio" -> "ROCm/ROCm" ["e"=1]
"nod-ai/SHARK-Studio" -> "ssube/onnx-web"
"nod-ai/SHARK-Studio" -> "nod-ai/SHARK-ModelDev"
"nod-ai/SHARK-Studio" -> "tensorflow/mlir-hlo"
"nod-ai/SHARK-Studio" -> "onnx/onnx-mlir"
"nod-ai/SHARK-Studio" -> "lshqqytiger/ZLUDA"
"nod-ai/SHARK-Studio" -> "llvm/Polygeist"
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "Tony-Tan/CUDA_Freshman"
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "BBuf/how-to-optim-algorithm-in-cuda"
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "HeKun-NVIDIA/TensorRT-Developer_Guide_in_Chinese" ["e"=1]
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "xlite-dev/LeetCUDA"
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "brucefan1983/CUDA-Programming"
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "Liu-xiandong/How_to_optimize_in_GPU"
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "BBuf/tvm_mlir_learn"
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "NVIDIA/cuda-samples" ["e"=1]
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "PaddleJitLab/CUDATutorial"
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "flashinfer-ai/flashinfer" ["e"=1]
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "sangyc10/CUDA-code"
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "openmlsys/openmlsys-zh"
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" -> "gpu-mode/lectures"
"ROCm/hip" -> "NVIDIA/thrust" ["e"=1]
"ROCm/hip" -> "NVIDIA/cub" ["e"=1]
"ROCm/hip" -> "halide/Halide" ["e"=1]
"Maratyszcza/pthreadpool" -> "Maratyszcza/FP16"
"Maratyszcza/pthreadpool" -> "Maratyszcza/FXdiv"
"Maratyszcza/pthreadpool" -> "pytorch/cpuinfo"
"NVIDIA/nccl" -> "NVIDIA/cub" ["e"=1]
"NVIDIA/nvbandwidth" -> "NVIDIA/multi-gpu-programming-models" ["e"=1]
"NVIDIA/nvbandwidth" -> "NVIDIA/nvbench" ["e"=1]
"NVIDIA/nvbandwidth" -> "NVIDIA/NVTX" ["e"=1]
"QINZHAOYU/CudaSteps" -> "MAhaitao999/CUDA_Programming"
"QINZHAOYU/CudaSteps" -> "SeventhBlue/cudaLearningMaterials"
"QINZHAOYU/CudaSteps" -> "HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese"
"QINZHAOYU/CudaSteps" -> "coderonion/cuda-beginner-course-cpp-version"
"QINZHAOYU/CudaSteps" -> "brucefan1983/CUDA-Programming"
"QINZHAOYU/CudaSteps" -> "sangyc10/CUDA-code"
"QINZHAOYU/CudaSteps" -> "XiaoSong9905/CUDA-Optimization-Guide"
"QINZHAOYU/CudaSteps" -> "Saint-forWisdom/CUDA_ParallelPragram"
"QINZHAOYU/CudaSteps" -> "Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes"
"QINZHAOYU/CudaSteps" -> "HuangCongQing/cuda-learning"
"QINZHAOYU/CudaSteps" -> "Tongkaio/CUDA_Kernel_Samples"
"pytorch/executorch" -> "google/XNNPACK" ["e"=1]
"pytorch/executorch" -> "openxla/xla" ["e"=1]
"ROCm/Tensile" -> "ROCm/rocMLIR" ["e"=1]
"ARM-software/optimized-routines" -> "shibatch/sleef" ["e"=1]
"ARM-software/optimized-routines" -> "ARM-software/ComputeLibrary"
"ARM-software/optimized-routines" -> "projectNe10/Ne10"
"ARM-software/optimized-routines" -> "ARM-software/abi-aa" ["e"=1]
"ARM-software/optimized-routines" -> "intel/ARM_NEON_2_x86_SSE"
"ARM-software/optimized-routines" -> "ARM-software/acle"
"ARM-software/optimized-routines" -> "JuliaMath/openlibm" ["e"=1]
"ARM-software/optimized-routines" -> "andrepuschmann/math-neon"
"ARM-software/optimized-routines" -> "libhugetlbfs/libhugetlbfs" ["e"=1]
"ARM-software/optimized-routines" -> "kdrag0n/adevtool" ["e"=1]
"ARM-software/optimized-routines" -> "ARM-software/synchronization-benchmarks"
"ARM-software/optimized-routines" -> "RRZE-HPC/OSACA" ["e"=1]
"OpenPPL/ppq" -> "OpenPPL/ppl.nn" ["e"=1]
"OpenPPL/ppq" -> "BBuf/tvm_mlir_learn" ["e"=1]
"OpenPPL/ppq" -> "OpenPPL/ppl.cv" ["e"=1]
"OpenPPL/ppq" -> "BBuf/how-to-optim-algorithm-in-cuda" ["e"=1]
"sophgo/tpu-mlir" -> "buddy-compiler/buddy-mlir"
"sophgo/tpu-mlir" -> "KEKE046/mlir-tutorial"
"sophgo/tpu-mlir" -> "BBuf/tvm_mlir_learn"
"sophgo/tpu-mlir" -> "sophgo/sophon-demo" ["e"=1]
"sophgo/tpu-mlir" -> "llvm/torch-mlir"
"sophgo/tpu-mlir" -> "sophgo/LLM-TPU" ["e"=1]
"sophgo/tpu-mlir" -> "onnx/onnx-mlir"
"sophgo/tpu-mlir" -> "alibaba/BladeDISC"
"sophgo/tpu-mlir" -> "j2kun/mlir-tutorial"
"sophgo/tpu-mlir" -> "tensorflow/mlir-hlo"
"sophgo/tpu-mlir" -> "iree-org/iree"
"sophgo/tpu-mlir" -> "MegEngine/MegCC"
"sophgo/tpu-mlir" -> "llvm/Polygeist"
"sophgo/tpu-mlir" -> "Cambricon/triton-linalg"
"sophgo/tpu-mlir" -> "merrymercy/awesome-tensor-compilers"
"Jonathan2251/lbd" -> "kumasento/polymer" ["e"=1]
"Jonathan2251/lbd" -> "buddy-compiler/buddy-mlir" ["e"=1]
"inikep/lzbench" -> "NVIDIA/nvcomp" ["e"=1]
"alibaba/BladeDISC" -> "microsoft/nnfusion"
"alibaba/BladeDISC" -> "tensorflow/mlir-hlo"
"alibaba/BladeDISC" -> "llvm/torch-mlir"
"alibaba/BladeDISC" -> "bytedance/byteir"
"alibaba/BladeDISC" -> "merrymercy/awesome-tensor-compilers"
"alibaba/BladeDISC" -> "BBuf/tvm_mlir_learn"
"alibaba/BladeDISC" -> "buddy-compiler/buddy-mlir"
"alibaba/BladeDISC" -> "MegEngine/MegCC"
"alibaba/BladeDISC" -> "onnx/onnx-mlir"
"alibaba/BladeDISC" -> "OpenPPL/ppl.nn"
"alibaba/BladeDISC" -> "iree-org/iree"
"alibaba/BladeDISC" -> "DeepRec-AI/DeepRec" ["e"=1]
"alibaba/BladeDISC" -> "pytorch/torchdynamo"
"alibaba/BladeDISC" -> "openxla/stablehlo"
"alibaba/BladeDISC" -> "tensorflow/runtime" ["e"=1]
"DeepRec-AI/DeepRec" -> "alibaba/BladeDISC" ["e"=1]
"NVIDIA/MatX" -> "NVIDIA/cccl"
"NVIDIA/MatX" -> "NVIDIA/nvbench"
"NVIDIA/MatX" -> "NVIDIA/cuCollections"
"NVIDIA/MatX" -> "NVIDIA/jitify"
"NVIDIA/MatX" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/MatX" -> "stotko/stdgpu"
"NVIDIA/MatX" -> "NVIDIA/libcudacxx"
"NVIDIA/MatX" -> "NVIDIA/cub"
"NVIDIA/MatX" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/MatX" -> "NVIDIA/thrust"
"NVIDIA/MatX" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/MatX" -> "rapidsai/rmm"
"NVIDIA/MatX" -> "autodiff/autodiff" ["e"=1]
"NVIDIA/MatX" -> "NVIDIA/AMGX" ["e"=1]
"NVIDIA/MatX" -> "NVIDIA/Fuser"
"Ascend/pytorch" -> "vllm-project/vllm-ascend" ["e"=1]
"Ascend/pytorch" -> "pcg-mlp/KsanaLLM" ["e"=1]
"Ascend/pytorch" -> "microsoft/triton-shared"
"Ascend/pytorch" -> "alibaba/BladeDISC"
"Ascend/pytorch" -> "Cambricon/torch_mlu"
"Ascend/pytorch" -> "bdhirsh/pytorch_open_registration_example"
"Ascend/pytorch" -> "Cambricon/triton-linalg"
"Ascend/pytorch" -> "Ascend/AscendSpeed"
"hidet-org/hidet" -> "KnowingNothing/compiler-and-arch"
"hidet-org/hidet" -> "uwsampl/SparseTIR"
"hidet-org/hidet" -> "microsoft/nnfusion"
"hidet-org/hidet" -> "tlc-pack/relax"
"hidet-org/hidet" -> "pku-liang/AMOS"
"hidet-org/hidet" -> "merrymercy/awesome-tensor-compilers"
"hidet-org/hidet" -> "buddy-compiler/buddy-mlir"
"hidet-org/hidet" -> "jiazhihao/TASO"
"hidet-org/hidet" -> "mit-han-lab/inter-operator-scheduler"
"hidet-org/hidet" -> "pytorch/torchdynamo"
"hidet-org/hidet" -> "alibaba/BladeDISC"
"hidet-org/hidet" -> "llvm/torch-mlir"
"hidet-org/hidet" -> "UofT-EcoSystem/DietCode"
"hidet-org/hidet" -> "tile-ai/tilelang" ["e"=1]
"hidet-org/hidet" -> "TiledTensor/TiledCUDA"
"joyycom/VNN" -> "OpenPPL/ppl.nn" ["e"=1]
"joyycom/VNN" -> "huawei-noah/bolt" ["e"=1]
"owensgroup/MVGpuBTree" -> "owensgroup/GpuBTree"
"Tencent/TPAT" -> "alibaba/BladeDISC" ["e"=1]
"Tencent/TPAT" -> "OpenPPL/ppl.cv" ["e"=1]
"Tencent/TPAT" -> "bytedance/ByteTransformer" ["e"=1]
"Tencent/TPAT" -> "OpenPPL/ppl.nn" ["e"=1]
"HeKun-NVIDIA/TensorRT-Developer_Guide_in_Chinese" -> "HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" ["e"=1]
"facebookresearch/dietgpu" -> "NVIDIA/nvcomp" ["e"=1]
"FZJ-JSC/tutorial-multi-gpu" -> "NVIDIA/multi-gpu-programming-models"
"FZJ-JSC/tutorial-multi-gpu" -> "XiaoSong9905/CUDA-Optimization-Guide"
"FZJ-JSC/tutorial-multi-gpu" -> "ColfaxResearch/cutlass-kernels"
"FZJ-JSC/tutorial-multi-gpu" -> "Bruce-Lee-LY/flash_attention_inference"
"Xilinx/mlir-aie" -> "llvm/Polygeist" ["e"=1]
"Xilinx/mlir-aie" -> "kumasento/polymer" ["e"=1]
"Xilinx/mlir-aie" -> "iml130/mlir-emitc" ["e"=1]
"friendliai/FAI-Model" -> "friendliai/periflow-cli"
"friendliai/FAI-Model" -> "friendliai/periflow-python-sdk"
"friendliai/FAI-Model" -> "friendliai/LLMServingPerfEvaluator"
"friendliai/FAI-Model" -> "friendliai/friendli-client"
"friendliai/FAI-Model" -> "swsnu/aisys2021"
"friendliai/FAI-Model" -> "snuspl/fluffy"
"friendliai/FAI-Model" -> "friendliai/friendli-model-optimizer"
"ArchaeaSoftware/cudahandbook" -> "deeperlearning/professional-cuda-c-programming"
"ArchaeaSoftware/cudahandbook" -> "NVIDIA/cub"
"ArchaeaSoftware/cudahandbook" -> "NVIDIA-developer-blog/code-samples"
"ArchaeaSoftware/cudahandbook" -> "moderngpu/moderngpu"
"ArchaeaSoftware/cudahandbook" -> "eyalroz/cuda-api-wrappers"
"ArchaeaSoftware/cudahandbook" -> "Erkaman/Awesome-CUDA"
"ArchaeaSoftware/cudahandbook" -> "eegkno/CUDA_by_practice"
"ArchaeaSoftware/cudahandbook" -> "NervanaSystems/maxas"
"ArchaeaSoftware/cudahandbook" -> "eedalong/ECE408"
"ArchaeaSoftware/cudahandbook" -> "PacktPublishing/Learn-CUDA-Programming"
"ArchaeaSoftware/cudahandbook" -> "NVIDIA/thrust"
"ArchaeaSoftware/cudahandbook" -> "lebedov/scikit-cuda"
"ArchaeaSoftware/cudahandbook" -> "Yinghan-Li/YHs_Sample"
"ArchaeaSoftware/cudahandbook" -> "udacity/cs344"
"ducha-aiki/caffenet-benchmark" -> "Maratyszcza/NNPACK" ["e"=1]
"ROCm/rocBLAS" -> "ROCm/rocMLIR" ["e"=1]
"Cambricon/mlu-ops" -> "Cambricon/catch"
"Cambricon/mlu-ops" -> "Cambricon/CNStream"
"Cambricon/mlu-ops" -> "Cambricon/triton-linalg"
"joschu/cgt" -> "NervanaSystems/nervanagpu" ["e"=1]
"Artelnics/opennn" -> "uxlfoundation/oneDNN" ["e"=1]
"Artelnics/opennn" -> "stotko/stdgpu" ["e"=1]
"STEllAR-GROUP/hpx" -> "NVIDIA/thrust" ["e"=1]
"hpcaitech/EnergonAI" -> "bytedance/ByteTransformer" ["e"=1]
"snuspl/pluto" -> "snuspl/nemo"
"snuspl/pluto" -> "snuspl/cruise"
"xdslproject/xdsl" -> "llvm/Polygeist"
"xdslproject/xdsl" -> "spcl/pymlir"
"xdslproject/xdsl" -> "libxsmm/tpp-mlir"
"xdslproject/xdsl" -> "makslevental/nelli"
"xdslproject/xdsl" -> "j2kun/mlir-tutorial"
"xdslproject/xdsl" -> "makslevental/mlir-python-extras"
"xdslproject/xdsl" -> "mlir-rs/melior"
"xdslproject/xdsl" -> "kumasento/polymer"
"xdslproject/xdsl" -> "intel/mlir-extensions"
"xdslproject/xdsl" -> "tancheng/mlir-cgra" ["e"=1]
"xdslproject/xdsl" -> "jmgorius/mlir-standalone-template"
"xdslproject/xdsl" -> "opencompl/paper-template"
"xdslproject/xdsl" -> "llvm/clangir"
"xdslproject/xdsl" -> "opencompl/lean-mlir"
"xdslproject/xdsl" -> "llvm/torch-mlir"
"MegEngine/MegPeak" -> "MegEngine/mperf"
"MegEngine/MegPeak" -> "MegEngine/MegCC"
"alibaba/EasyParallelLibrary" -> "alibaba/BladeDISC" ["e"=1]
"egraphs-good/egglog" -> "mlir-rs/melior" ["e"=1]
"mlc-ai/mlc-en" -> "mlc-ai/mlc-zh"
"mlc-ai/mlc-en" -> "mlc-ai/notebooks"
"mlc-ai/mlc-en" -> "tlc-pack/relax"
"mlc-ai/mlc-en" -> "KnowingNothing/compiler-and-arch"
"mlc-ai/mlc-en" -> "d2l-ai/d2l-tvm"
"mlc-ai/mlc-en" -> "awslabs/slapo"
"mlc-ai/mlc-en" -> "jiazhihao/TASO"
"mlc-ai/mlc-en" -> "pku-liang/AMOS"
"ctuning/artifact-evaluation" -> "ctuning/ck-docker"
"ctuning/artifact-evaluation" -> "dividiti/gemmbench-adapt16"
"ctuning/artifact-evaluation" -> "ctuning/ck-crowdtuning"
"ctuning/artifact-evaluation" -> "ctuning/ck-web-adapt-workshop"
"ctuning/artifact-evaluation" -> "ctuning/ck-web"
"ctuning/artifact-evaluation" -> "ctuning/ck-dissemination-modules"
"ctuning/artifact-evaluation" -> "ctuning/ck-crowdtuning-platforms"
"ctuning/artifact-evaluation" -> "ctuning/ck-math"
"ctuning/artifact-evaluation" -> "ctuning/ck-guide-images"
"ctuning/artifact-evaluation" -> "ctuning/ck-crowdnode"
"ctuning/artifact-evaluation" -> "ctuning/ck-dev-compilers"
"ctuning/artifact-evaluation" -> "ctuning/ck-ext-far-manager-plugin"
"ctuning/artifact-evaluation" -> "dividiti/gemmbench"
"ctuning/artifact-evaluation" -> "ctuning/ck-analytics"
"ctuning/artifact-evaluation" -> "ctuning/ck-autotuning"
"dividiti/gemmbench" -> "ctuning/ck-web-adapt-workshop"
"dividiti/gemmbench" -> "dividiti/gemmbench-adapt16"
"dividiti/gemmbench" -> "ctuning/ck-dissemination-modules"
"dividiti/gemmbench" -> "ctuning/ck-guide-images"
"dividiti/gemmbench" -> "ctuning/ck-dev-compilers"
"dividiti/gemmbench" -> "ctuning/ck-crowdtuning-platforms"
"dividiti/gemmbench" -> "ctuning/ck-docker"
"dividiti/gemmbench" -> "ctuning/ck-crowdnode"
"dividiti/gemmbench" -> "ctuning/ck-ext-far-manager-plugin"
"dividiti/gemmbench" -> "ctuning/ck-web"
"dividiti/gemmbench" -> "ctuning/ck-crowdtuning"
"intel/xpumanager" -> "intel/xetla" ["e"=1]
"pika-org/pika" -> "eth-cscs/DLA-Future"
"mlir-rs/melior" -> "mlir-rs/mlir-sys"
"mlir-rs/melior" -> "vaivaswatha/pliron"
"mlir-rs/melior" -> "cdisselkoen/llvm-ir" ["e"=1]
"mlir-rs/melior" -> "xdslproject/xdsl"
"mlir-rs/melior" -> "spcl/pymlir"
"mlir-rs/melior" -> "egraphs-good/egglog" ["e"=1]
"mlir-rs/melior" -> "TheDan64/inkwell" ["e"=1]
"mlir-rs/melior" -> "j2kun/mlir-tutorial"
"mlir-rs/melior" -> "jmgorius/mlir-standalone-template"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "siboehm/SGEMM_CUDA"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "Liu-xiandong/How_to_optimize_in_GPU"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "Bruce-Lee-LY/cuda_hgemm"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "leimao/CUDA-GEMM-Optimization"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "tspeterkim/flash-attention-minimal"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "ColfaxResearch/cutlass-kernels"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "Cjkkkk/CUDA_gemm"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "AyakaGEMM/Hands-on-GEMM"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "Yinghan-Li/YHs_Sample"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "pranjalssh/fast.cu"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "tpoisonooo/how-to-optimize-gemm"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "66RING/tiny-flash-attention"
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "siboehm/ShallowSpeed" ["e"=1]
"wangzyon/NVIDIA_SGEMM_PRACTICE" -> "KnowingNothing/MatmulTutorial"
"oneapi-src/SYCLomatic" -> "intel/intel-xpu-backend-for-triton" ["e"=1]
"stressapptest/stressapptest" -> "tud-zih-energy/FIRESTARTER" ["e"=1]
"Cpp-Project-Manager/Cpp-Project-Manager" -> "Maou-Shimazu/Projects-Answers"
"sjfeng1999/gpu-arch-microbenchmark" -> "shen203/GPU_Microbenchmark"
"sjfeng1999/gpu-arch-microbenchmark" -> "daadaada/turingas"
"sjfeng1999/gpu-arch-microbenchmark" -> "sunlex0717/DissectingTensorCores"
"mlc-ai/mlc-zh" -> "mlc-ai/notebooks"
"mlc-ai/mlc-zh" -> "mlc-ai/mlc-en"
"mlc-ai/mlc-zh" -> "BBuf/tvm_mlir_learn"
"mlc-ai/mlc-zh" -> "merrymercy/awesome-tensor-compilers"
"mlc-ai/mlc-zh" -> "tlc-pack/relax"
"mlc-ai/mlc-zh" -> "Liu-xiandong/How_to_optimize_in_GPU"
"mlc-ai/mlc-zh" -> "hyperai/tvm-cn" ["e"=1]
"mlc-ai/mlc-zh" -> "microsoft/nnfusion"
"mlc-ai/mlc-zh" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"mlc-ai/mlc-zh" -> "alibaba/BladeDISC"
"mlc-ai/mlc-zh" -> "buddy-compiler/buddy-mlir"
"mlc-ai/mlc-zh" -> "openmlsys/openmlsys-zh"
"mlc-ai/mlc-zh" -> "MegEngine/MegCC"
"mlc-ai/mlc-zh" -> "llvm/torch-mlir"
"mlc-ai/mlc-zh" -> "bytedance/byteir"
"pytorch/PiPPy" -> "pytorch/torchdynamo" ["e"=1]
"hunterzju/llvm-tutorial" -> "KEKE046/mlir-tutorial" ["e"=1]
"Maou-Shimazu/Projects-Answers" -> "nullishamy/kate"
"njuhope/cuda_sgemm" -> "Yinghan-Li/YHs_Sample"
"njuhope/cuda_sgemm" -> "nicolaswilde/cuda-tensorcore-hgemm"
"njuhope/cuda_sgemm" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"njuhope/cuda_sgemm" -> "AyakaGEMM/Hands-on-GEMM"
"njuhope/cuda_sgemm" -> "lixiuhong/implicit_gemm_convolution"
"njuhope/cuda_sgemm" -> "Cjkkkk/CUDA_gemm"
"njuhope/cuda_sgemm" -> "tpoisonooo/how-to-optimize-gemm"
"uwsampl/SparseTIR" -> "uwsampl/sparsetir-artifact"
"uwsampl/SparseTIR" -> "roastduck/FreeTensor"
"uwsampl/SparseTIR" -> "microsoft/SparTA" ["e"=1]
"uwsampl/SparseTIR" -> "pku-liang/AMOS"
"uwsampl/SparseTIR" -> "thu-pacman/PET"
"uwsampl/SparseTIR" -> "tlc-pack/tenset"
"uwsampl/SparseTIR" -> "zhaiyi000/tlm"
"ARM-software/CMSIS-NN" -> "ARM-software/armnn" ["e"=1]
"microsoft/SparTA" -> "uwsampl/SparseTIR" ["e"=1]
"nullishamy/kate" -> "Maou-Shimazu/Projects-Answers"
"nullishamy/kate" -> "Checkmate50/pylambda"
"YanshiShield/YanshiShield" -> "Adlik/model_optimizer"
"UofT-EcoSystem/DietCode" -> "pku-liang/AMOS"
"UofT-EcoSystem/DietCode" -> "tlc-pack/tenset"
"UofT-EcoSystem/DietCode" -> "awslabs/lorien"
"friendliai/periflow-python-sdk" -> "friendliai/periflow-cli"
"friendliai/periflow-python-sdk" -> "friendliai/friendli-client"
"friendliai/periflow-cli" -> "friendliai/periflow-python-sdk"
"LitLeo/OpenCUDA" -> "LitLeo/TensorRT_Tutorial" ["e"=1]
"LitLeo/OpenCUDA" -> "PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA"
"buddy-compiler/buddy-benchmark" -> "buddy-compiler/buddy-mlir"
"uwsampl/sparsetir-artifact" -> "uwsampl/SparseTIR"
"XiaoSong9905/HPC-Notes" -> "XiaoSong9905/CUDA-Optimization-Guide"
"XiaoSong9905/HPC-Notes" -> "XiaoSong9905/dgemm-knl"
"awslabs/raf" -> "awslabs/ratex"
"awslabs/raf" -> "awslabs/lorien"
"awslabs/raf" -> "cmu-catalyst/collage"
"awslabs/raf" -> "awslabs/slapo"
"awslabs/raf" -> "comaniac/epoi"
"awslabs/raf" -> "UofT-EcoSystem/DietCode"
"awslabs/raf" -> "pku-liang/AMOS"
"nicolaswilde/cuda-sgemm" -> "nicolaswilde/cuda-tensorcore-hgemm"
"pigirons/conv3x3_m1" -> "OpenPPL/hpcc"
"Archermmt/tvm_walk_through" -> "StrongSpoon/tvm.schedule"
"inisis/katago-benchmark" -> "inisis/onion"
"inisis/katago-benchmark" -> "inisis/chexpert"
"awslabs/lorien" -> "szha/mxnet-jit-batch"
"tud-zih-energy/x86_adapt" -> "tud-zih-energy/x86_energy"
"inisis/caffe2onnx" -> "inisis/onion"
"inisis/caffe2onnx" -> "inisis/OnnxLLM"
"inisis/caffe2onnx" -> "inisis/chexpert"
"inisis/caffe2onnx" -> "inisis/caffe"
"inisis/caffe2onnx" -> "WeLoveAI/onnx2torch"
"tud-zih-energy/x86_energy" -> "tud-zih-energy/x86_adapt"
"chenzomi12/AISystem" -> "chenzomi12/AIInfra"
"chenzomi12/AISystem" -> "openmlsys/openmlsys-zh"
"chenzomi12/AISystem" -> "xlite-dev/LeetCUDA"
"chenzomi12/AISystem" -> "liguodongiot/llm-action" ["e"=1]
"chenzomi12/AISystem" -> "BBuf/tvm_mlir_learn"
"chenzomi12/AISystem" -> "microsoft/AI-System"
"chenzomi12/AISystem" -> "zjhellofss/KuiperInfer"
"chenzomi12/AISystem" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"chenzomi12/AISystem" -> "BBuf/how-to-optim-algorithm-in-cuda"
"chenzomi12/AISystem" -> "mli/paper-reading" ["e"=1]
"chenzomi12/AISystem" -> "sgl-project/sglang" ["e"=1]
"chenzomi12/AISystem" -> "NVIDIA/Megatron-LM" ["e"=1]
"chenzomi12/AISystem" -> "Dao-AILab/flash-attention" ["e"=1]
"chenzomi12/AISystem" -> "gpu-mode/lectures"
"chenzomi12/AISystem" -> "vllm-project/vllm" ["e"=1]
"uxlfoundation/oneDNN" -> "apache/tvm" ["e"=1]
"uxlfoundation/oneDNN" -> "ARM-software/ComputeLibrary"
"uxlfoundation/oneDNN" -> "google/gemmlowp"
"uxlfoundation/oneDNN" -> "flame/how-to-optimize-gemm"
"uxlfoundation/oneDNN" -> "herumi/xbyak" ["e"=1]
"uxlfoundation/oneDNN" -> "intel/caffe" ["e"=1]
"uxlfoundation/oneDNN" -> "libxsmm/libxsmm"
"uxlfoundation/oneDNN" -> "intel/intel-extension-for-pytorch" ["e"=1]
"uxlfoundation/oneDNN" -> "NervanaSystems/ngraph"
"uxlfoundation/oneDNN" -> "uxlfoundation/oneMath" ["e"=1]
"uxlfoundation/oneDNN" -> "Maratyszcza/NNPACK"
"uxlfoundation/oneDNN" -> "uxlfoundation/oneDAL" ["e"=1]
"uxlfoundation/oneDNN" -> "iree-org/iree"
"uxlfoundation/oneDNN" -> "openvinotoolkit/openvino" ["e"=1]
"uxlfoundation/oneDNN" -> "OpenMathLib/OpenBLAS"
"openxla/stablehlo" -> "openxla/community"
"openxla/stablehlo" -> "tensorflow/mlir-hlo"
"openxla/stablehlo" -> "openxla/xla"
"openxla/stablehlo" -> "llvm/torch-mlir"
"openxla/stablehlo" -> "iree-org/iree"
"openxla/stablehlo" -> "alibaba/BladeDISC"
"openxla/stablehlo" -> "onnx/onnx-mlir"
"openxla/stablehlo" -> "bytedance/byteir"
"openxla/stablehlo" -> "libxsmm/tpp-mlir"
"openxla/stablehlo" -> "microsoft/triton-shared"
"openxla/stablehlo" -> "openxla/shardy"
"openxla/stablehlo" -> "llvm/Polygeist"
"openxla/stablehlo" -> "buddy-compiler/buddy-mlir"
"openxla/stablehlo" -> "KEKE046/mlir-tutorial"
"openxla/stablehlo" -> "intel/mlir-extensions"
"ROCm/ROCm" -> "vosen/ZLUDA" ["e"=1]
"ROCm/ROCm" -> "uxlfoundation/oneDNN" ["e"=1]
"Visualize-ML/Book4_Power-of-Matrix" -> "chenzomi12/AISystem" ["e"=1]
"llvm/clangir" -> "trailofbits/vast" ["e"=1]
"llvm/clangir" -> "llvm/Polygeist"
"llvm/clangir" -> "facebookarchive/clangir" ["e"=1]
"llvm/clangir" -> "microsoft/triton-shared"
"llvm/clangir" -> "intel/mlir-extensions"
"llvm/clangir" -> "xdslproject/xdsl"
"llvm/clangir" -> "j2kun/mlir-tutorial"
"llvm/clangir" -> "jmgorius/mlir-standalone-template"
"llvm/clangir" -> "iml130/mlir-emitc"
"llvm/clangir" -> "AliveToolkit/alive2" ["e"=1]
"llvm/clangir" -> "llvm/circt" ["e"=1]
"llvm/clangir" -> "llvm/torch-mlir"
"llvm/clangir" -> "google/ml-compiler-opt"
"llvm/clangir" -> "spcl/pymlir"
"llvm/clangir" -> "buddy-compiler/buddy-mlir"
"ELS-RD/kernl" -> "pytorch/torchdynamo" ["e"=1]
"ELS-RD/kernl" -> "hidet-org/hidet" ["e"=1]
"srush/GPU-Puzzles" -> "gpu-mode/lectures" ["e"=1]
"srush/GPU-Puzzles" -> "xlite-dev/LeetCUDA" ["e"=1]
"awslabs/slapo" -> "awslabs/raf"
"awslabs/slapo" -> "awslabs/lorien"
"awslabs/slapo" -> "uwsampl/SparseTIR"
"awslabs/slapo" -> "tlc-pack/tenset"
"awslabs/slapo" -> "chhzh123/ptc-tutorial"
"awslabs/slapo" -> "pku-liang/AMOS"
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "vladmandic/sdnext" ["e"=1]
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "nod-ai/SHARK-Studio"
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "lshqqytiger/ZLUDA"
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "patientx/ComfyUI-Zluda"
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "YellowRoseCx/koboldcpp-rocm"
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "Amblyopius/Stable-Diffusion-ONNX-FP16"
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "microsoft/DirectML" ["e"=1]
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "vosen/ZLUDA"
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "azuritecoin/OnnxDiffusersUI"
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "lshqqytiger/stable-diffusion-webui-amdgpu-forge"
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "Coyote-A/ultimate-upscale-for-automatic1111" ["e"=1]
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "pkuliyi2015/multidiffusion-upscaler-for-automatic1111" ["e"=1]
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "Bing-su/adetailer" ["e"=1]
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "Gourieff/sd-webui-reactor" ["e"=1]
"lshqqytiger/stable-diffusion-webui-amdgpu" -> "lllyasviel/stable-diffusion-webui-forge" ["e"=1]
"coreylowman/cudarc" -> "mlir-rs/melior" ["e"=1]
"n00mkrad/text2image-gui" -> "azuritecoin/OnnxDiffusersUI" ["e"=1]
"n00mkrad/text2image-gui" -> "ssube/onnx-web" ["e"=1]
"PaddleJitLab/CUDATutorial" -> "BBuf/how-to-optim-algorithm-in-cuda"
"PaddleJitLab/CUDATutorial" -> "Tongkaio/CUDA_Kernel_Samples"
"PaddleJitLab/CUDATutorial" -> "xlite-dev/LeetCUDA"
"PaddleJitLab/CUDATutorial" -> "Liu-xiandong/How_to_optimize_in_GPU"
"PaddleJitLab/CUDATutorial" -> "RussWong/CUDATutorial"
"PaddleJitLab/CUDATutorial" -> "zjhellofss/KuiperLLama"
"PaddleJitLab/CUDATutorial" -> "galeselee/Awesome_LLM_System-PaperList" ["e"=1]
"PaddleJitLab/CUDATutorial" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial"
"PaddleJitLab/CUDATutorial" -> "BBuf/how-to-learn-deep-learning-framework"
"PaddleJitLab/CUDATutorial" -> "HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese"
"PaddleJitLab/CUDATutorial" -> "sgl-project/sgl-learning-materials" ["e"=1]
"PaddleJitLab/CUDATutorial" -> "bytedance/flux" ["e"=1]
"PaddleJitLab/CUDATutorial" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"PaddleJitLab/CUDATutorial" -> "ifromeast/cuda_learning"
"PaddleJitLab/CUDATutorial" -> "harleyszhang/llm_note"
"halide/Halide" -> "apache/tvm" ["e"=1]
"halide/Halide" -> "facebookresearch/TensorComprehensions"
"halide/Halide" -> "ARM-software/ComputeLibrary"
"halide/Halide" -> "merrymercy/awesome-tensor-compilers"
"halide/Halide" -> "tensorflow/mlir"
"halide/Halide" -> "pytorch/glow"
"halide/Halide" -> "google/gemmlowp"
"halide/Halide" -> "tensor-compiler/taco"
"halide/Halide" -> "flame/how-to-optimize-gemm"
"halide/Halide" -> "iree-org/iree"
"halide/Halide" -> "NVIDIA/cutlass" ["e"=1]
"halide/Halide" -> "microsoft/nnfusion"
"halide/Halide" -> "alibaba/MNN" ["e"=1]
"halide/Halide" -> "BBuf/tvm_mlir_learn"
"halide/Halide" -> "NVIDIA/thrust"
"romeric/Fastor" -> "libxsmm/libxsmm" ["e"=1]
"romeric/Fastor" -> "tensor-compiler/taco" ["e"=1]
"VoltaML/voltaML" -> "MegEngine/MegCC" ["e"=1]
"fengbintu/Neural-Networks-on-Silicon" -> "basicmi/AI-Chip" ["e"=1]
"EdVince/Stable-Diffusion-NCNN" -> "wangzhaode/mnn-stable-diffusion" ["e"=1]
"openxla/xla" -> "openxla/stablehlo"
"openxla/xla" -> "iree-org/iree"
"openxla/xla" -> "llvm/torch-mlir"
"openxla/xla" -> "merrymercy/awesome-tensor-compilers"
"openxla/xla" -> "triton-lang/triton" ["e"=1]
"openxla/xla" -> "google/flax" ["e"=1]
"openxla/xla" -> "flashinfer-ai/flashinfer" ["e"=1]
"openxla/xla" -> "alibaba/BladeDISC"
"openxla/xla" -> "pytorch/xla"
"openxla/xla" -> "apache/tvm" ["e"=1]
"openxla/xla" -> "NVIDIA/cutlass" ["e"=1]
"openxla/xla" -> "alpa-projects/alpa" ["e"=1]
"openxla/xla" -> "BBuf/tvm_mlir_learn"
"openxla/xla" -> "microsoft/nnfusion"
"openxla/xla" -> "NVIDIA/TransformerEngine" ["e"=1]
"vladmandic/sdnext" -> "lshqqytiger/stable-diffusion-webui-amdgpu" ["e"=1]
"facebookincubator/AITemplate" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"facebookincubator/AITemplate" -> "alibaba/BladeDISC" ["e"=1]
"zjhellofss/KuiperInfer" -> "zjhellofss/KuiperLLama"
"zjhellofss/KuiperInfer" -> "BBuf/how-to-optim-algorithm-in-cuda"
"zjhellofss/KuiperInfer" -> "xlite-dev/LeetCUDA"
"zjhellofss/KuiperInfer" -> "zjhellofss/kuiperdatawhale"
"zjhellofss/KuiperInfer" -> "BBuf/tvm_mlir_learn"
"zjhellofss/KuiperInfer" -> "nndeploy/nndeploy" ["e"=1]
"zjhellofss/KuiperInfer" -> "openmlsys/openmlsys-zh"
"zjhellofss/KuiperInfer" -> "ChunelFeng/CGraph" ["e"=1]
"zjhellofss/KuiperInfer" -> "chenzomi12/AISystem"
"zjhellofss/KuiperInfer" -> "parallel101/course" ["e"=1]
"zjhellofss/KuiperInfer" -> "OpenPPL/ppq" ["e"=1]
"zjhellofss/KuiperInfer" -> "Tony-Tan/CUDA_Freshman"
"zjhellofss/KuiperInfer" -> "gpu-mode/lectures"
"zjhellofss/KuiperInfer" -> "Liu-xiandong/How_to_optimize_in_GPU"
"zjhellofss/KuiperInfer" -> "yuesong-feng/30dayMakeCppServer" ["e"=1]
"Reference-LAPACK/lapack" -> "OpenMathLib/OpenBLAS" ["e"=1]
"Reference-LAPACK/lapack" -> "flame/blis" ["e"=1]
"AyakaGEMM/Hands-on-GEMM" -> "njuhope/cuda_sgemm"
"AyakaGEMM/Hands-on-GEMM" -> "nicolaswilde/cuda-sgemm"
"AyakaGEMM/Hands-on-GEMM" -> "Yinghan-Li/YHs_Sample"
"AyakaGEMM/Hands-on-GEMM" -> "reed-lau/cute-gemm"
"xlite-dev/LeetCUDA" -> "BBuf/how-to-optim-algorithm-in-cuda"
"xlite-dev/LeetCUDA" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"xlite-dev/LeetCUDA" -> "gpu-mode/lectures"
"xlite-dev/LeetCUDA" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial"
"xlite-dev/LeetCUDA" -> "flashinfer-ai/flashinfer" ["e"=1]
"xlite-dev/LeetCUDA" -> "Liu-xiandong/How_to_optimize_in_GPU"
"xlite-dev/LeetCUDA" -> "BBuf/tvm_mlir_learn"
"xlite-dev/LeetCUDA" -> "NVIDIA/cutlass" ["e"=1]
"xlite-dev/LeetCUDA" -> "Tony-Tan/CUDA_Freshman"
"xlite-dev/LeetCUDA" -> "kvcache-ai/Mooncake" ["e"=1]
"xlite-dev/LeetCUDA" -> "zjhellofss/KuiperInfer"
"xlite-dev/LeetCUDA" -> "sgl-project/sglang" ["e"=1]
"xlite-dev/LeetCUDA" -> "deepseek-ai/DeepGEMM" ["e"=1]
"xlite-dev/LeetCUDA" -> "ModelTC/lightllm" ["e"=1]
"xlite-dev/LeetCUDA" -> "tile-ai/tilelang" ["e"=1]
"samjabrahams/tensorflow-on-raspberry-pi" -> "microsoft/ELL" ["e"=1]
"Maratyszcza/NNPACK" -> "google/gemmlowp"
"Maratyszcza/NNPACK" -> "pytorch/QNNPACK"
"Maratyszcza/NNPACK" -> "soumith/convnet-benchmarks" ["e"=1]
"Maratyszcza/NNPACK" -> "andravin/wincnn"
"Maratyszcza/NNPACK" -> "dmlc/nnvm" ["e"=1]
"Maratyszcza/NNPACK" -> "Tencent/FeatherCNN"
"Maratyszcza/NNPACK" -> "NervanaSystems/neon" ["e"=1]
"Maratyszcza/NNPACK" -> "ARM-software/ComputeLibrary"
"Maratyszcza/NNPACK" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"Maratyszcza/NNPACK" -> "openai/openai-gemm"
"Maratyszcza/NNPACK" -> "DeepMark/deepmark" ["e"=1]
"Maratyszcza/NNPACK" -> "uxlfoundation/oneDNN"
"Maratyszcza/NNPACK" -> "ENCP/CNNdroid" ["e"=1]
"Maratyszcza/NNPACK" -> "baidu-research/DeepBench"
"Maratyszcza/NNPACK" -> "libxsmm/libxsmm"
"Tiramisu-Compiler/tiramisu" -> "tensor-compiler/taco"
"Tiramisu-Compiler/tiramisu" -> "bondhugula/pluto"
"Tiramisu-Compiler/tiramisu" -> "microsoft/nnfusion"
"Tiramisu-Compiler/tiramisu" -> "jiazhihao/TASO"
"Tiramisu-Compiler/tiramisu" -> "facebookresearch/TensorComprehensions"
"Tiramisu-Compiler/tiramisu" -> "Meinersbur/ppcg"
"Tiramisu-Compiler/tiramisu" -> "othmanus/algeria-cities" ["e"=1]
"Tiramisu-Compiler/tiramisu" -> "ScientificClubofESI/LaraHack"
"Tiramisu-Compiler/tiramisu" -> "alger-ia/dziribert" ["e"=1]
"Tiramisu-Compiler/tiramisu" -> "llvm/Polygeist"
"Tiramisu-Compiler/tiramisu" -> "merrymercy/awesome-tensor-compilers"
"Tiramisu-Compiler/tiramisu" -> "pku-liang/FlexTensor"
"Tiramisu-Compiler/tiramisu" -> "halide/Halide"
"Tiramisu-Compiler/tiramisu" -> "llvm/torch-mlir"
"Tiramisu-Compiler/tiramisu" -> "tensorflow/mlir"
"azuritecoin/OnnxDiffusersUI" -> "Amblyopius/Stable-Diffusion-ONNX-FP16"
"azuritecoin/OnnxDiffusersUI" -> "ssube/onnx-web"
"azuritecoin/OnnxDiffusersUI" -> "JbPasquier/stable-diffusion-onnx-ui"
"pigirons/cpufp" -> "tpoisonooo/how-to-optimize-gemm"
"pigirons/cpufp" -> "flame/blislab"
"pigirons/cpufp" -> "flame/how-to-optimize-gemm"
"pigirons/cpufp" -> "pigirons/sgemm_hsw"
"pigirons/cpufp" -> "OpenPPL/ppl.nn"
"pigirons/cpufp" -> "cloudcores/CuAssembler"
"pigirons/cpufp" -> "Yinghan-Li/YHs_Sample"
"pigirons/cpufp" -> "alibaba/BladeDISC"
"pigirons/cpufp" -> "OpenPPL/ppl.cv"
"pigirons/cpufp" -> "MegEngine/MegCC"
"pigirons/cpufp" -> "Cjkkkk/CUDA_gemm"
"pigirons/cpufp" -> "microsoft/nnfusion"
"pigirons/cpufp" -> "OpenPPL/ppl.llm.kernel.cuda"
"pigirons/cpufp" -> "NervanaSystems/maxas"
"pigirons/cpufp" -> "BBuf/how-to-optimize-gemm"
"MatthieuCourbariaux/BinaryNet" -> "google/gemmlowp" ["e"=1]
"nviennot/core-to-core-latency" -> "pigirons/cpufp" ["e"=1]
"CVCUDA/CV-CUDA" -> "OpenPPL/ppl.cv" ["e"=1]
"CVCUDA/CV-CUDA" -> "OpenPPL/ppl.nn" ["e"=1]
"CVCUDA/CV-CUDA" -> "NVIDIA/CUDALibrarySamples" ["e"=1]
"uxlfoundation/oneDAL" -> "uxlfoundation/oneDNN" ["e"=1]
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "azuritecoin/OnnxDiffusersUI"
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "ssube/onnx-web"
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "ZTMIDGO/Android-Stable-diffusion-ONNX" ["e"=1]
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "ForserX/StableDiffusionUI"
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "nod-ai/SHARK-Studio"
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "NeusZimmer/ONNX-Stable-Diffusion-ModularUI"
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "NeusZimmer/ONNX-ModularUI-StableDiffusion"
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "uchuusen/onnx_stable_diffusion_controlnet"
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "JbPasquier/stable-diffusion-onnx-ui"
"DeepMark/deepmark" -> "NervanaSystems/nervanagpu" ["e"=1]
"sherlockchou86/VideoPipe" -> "zjhellofss/KuiperInfer" ["e"=1]
"siboehm/SGEMM_CUDA" -> "wangzyon/NVIDIA_SGEMM_PRACTICE"
"siboehm/SGEMM_CUDA" -> "leimao/CUDA-GEMM-Optimization"
"siboehm/SGEMM_CUDA" -> "tspeterkim/flash-attention-minimal"
"siboehm/SGEMM_CUDA" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"siboehm/SGEMM_CUDA" -> "Bruce-Lee-LY/cuda_hgemm"
"siboehm/SGEMM_CUDA" -> "66RING/tiny-flash-attention"
"siboehm/SGEMM_CUDA" -> "KnowingNothing/MatmulTutorial"
"siboehm/SGEMM_CUDA" -> "pranjalssh/fast.cu"
"siboehm/SGEMM_CUDA" -> "Cjkkkk/CUDA_gemm"
"siboehm/SGEMM_CUDA" -> "Liu-xiandong/How_to_optimize_in_GPU"
"siboehm/SGEMM_CUDA" -> "HazyResearch/ThunderKittens" ["e"=1]
"siboehm/SGEMM_CUDA" -> "gpu-mode/resource-stream" ["e"=1]
"siboehm/SGEMM_CUDA" -> "ColfaxResearch/cutlass-kernels"
"siboehm/SGEMM_CUDA" -> "srush/Triton-Puzzles" ["e"=1]
"siboehm/SGEMM_CUDA" -> "flashinfer-ai/flashinfer" ["e"=1]
"openxla/community" -> "openxla/stablehlo"
"baidu-research/persistent-rnn" -> "openai/openai-gemm" ["e"=1]
"mit-han-lab/tinyengine" -> "MegEngine/MegCC" ["e"=1]
"jacobhilton/deep_learning_curriculum" -> "minitorch/minitorch" ["e"=1]
"tud-zih-energy/FIRESTARTER" -> "tud-zih-energy/x86_adapt"
"tud-zih-energy/FIRESTARTER" -> "tud-zih-energy/lo2s"
"tud-zih-energy/FIRESTARTER" -> "tud-zih-energy/x86_energy"
"tud-zih-energy/FIRESTARTER" -> "metricq/metricq"
"tud-zih-energy/FIRESTARTER" -> "metricq/metricq-python"
"harleyszhang/dl_note" -> "harleyszhang/llm_note"
"harleyszhang/dl_note" -> "harleyszhang/lite_llama"
"harleyszhang/dl_note" -> "datawhalechina/awesome-compression" ["e"=1]
"harleyszhang/dl_note" -> "zjhellofss/KuiperLLama"
"harleyszhang/dl_note" -> "DD-DuDa/Cute-Learning"
"harleyszhang/dl_note" -> "harleyszhang/llm_counts"
"harleyszhang/dl_note" -> "harleyszhang/cv_note" ["e"=1]
"harleyszhang/dl_note" -> "ifromeast/cuda_learning"
"harleyszhang/dl_note" -> "Tongkaio/CUDA_Kernel_Samples"
"harleyszhang/dl_note" -> "nndeploy/nndeploy" ["e"=1]
"harleyszhang/dl_note" -> "tspeterkim/flash-attention-minimal"
"harleyszhang/dl_note" -> "xlite-dev/LeetCUDA"
"sophgo/sophon-demo" -> "sophgo/tpu-mlir" ["e"=1]
"microsoft/mscclpp" -> "ColfaxResearch/cutlass-kernels" ["e"=1]
"microsoft/mscclpp" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes" -> "Eddie-Wang1120/HPC-Learning-Notes"
"Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes" -> "l0ngc/hpc-learning"
"Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes" -> "deeperlearning/professional-cuda-c-programming"
"Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes" -> "ifromeast/cuda_learning"
"Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes" -> "RussWong/CUDATutorial"
"Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes" -> "Cjkkkk/CUDA_gemm"
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "YuanhaoGong/CurvatureFilter" ["e"=1]
"intel/intel-extension-for-tensorflow" -> "intel/xetla" ["e"=1]
"intel/intel-extension-for-tensorflow" -> "intel/intel-xpu-backend-for-triton" ["e"=1]
"intel/intel-extension-for-tensorflow" -> "codeplaysoftware/cutlass-sycl" ["e"=1]
"LLNL/zfp" -> "NVIDIA/nvcomp" ["e"=1]
"bytedance/byteir" -> "MegEngine/MegCC"
"bytedance/byteir" -> "tensorflow/mlir-hlo"
"bytedance/byteir" -> "buddy-compiler/buddy-mlir"
"bytedance/byteir" -> "alibaba/BladeDISC"
"bytedance/byteir" -> "Cambricon/triton-linalg"
"bytedance/byteir" -> "llvm/torch-mlir"
"bytedance/byteir" -> "onnx/onnx-mlir"
"bytedance/byteir" -> "volcengine/veScale" ["e"=1]
"bytedance/byteir" -> "KnowingNothing/MatmulTutorial"
"bytedance/byteir" -> "KEKE046/mlir-tutorial"
"bytedance/byteir" -> "bytedance/flux" ["e"=1]
"bytedance/byteir" -> "microsoft/triton-shared"
"bytedance/byteir" -> "j2kun/mlir-tutorial"
"bytedance/byteir" -> "openxla/stablehlo"
"bytedance/byteir" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"MegEngine/MegCC" -> "bytedance/byteir"
"MegEngine/MegCC" -> "MegEngine/MegPeak"
"MegEngine/MegCC" -> "tpoisonooo/how-to-optimize-gemm"
"MegEngine/MegCC" -> "buddy-compiler/buddy-mlir"
"MegEngine/MegCC" -> "alibaba/BladeDISC"
"MegEngine/MegCC" -> "MegEngine/mperf"
"MegEngine/MegCC" -> "microsoft/nnfusion"
"MegEngine/MegCC" -> "KEKE046/mlir-tutorial"
"MegEngine/MegCC" -> "onnx/onnx-mlir"
"MegEngine/MegCC" -> "tensorflow/mlir-hlo"
"MegEngine/MegCC" -> "BBuf/how-to-learn-deep-learning-framework"
"MegEngine/MegCC" -> "sophgo/tpu-mlir"
"MegEngine/MegCC" -> "OpenPPL/ppl.cv"
"MegEngine/MegCC" -> "BBuf/tvm_mlir_learn"
"MegEngine/MegCC" -> "Yinghan-Li/YHs_Sample"
"ENCP/CNNdroid" -> "Maratyszcza/NNPACK" ["e"=1]
"ENCP/CNNdroid" -> "google/gemmlowp" ["e"=1]
"ENCP/CNNdroid" -> "ARM-software/ComputeLibrary" ["e"=1]
"NVIDIA/NeMo-Framework-Launcher" -> "fanshiqing/grouped_gemm" ["e"=1]
"ThanatosShinji/onnx-tool" -> "MegEngine/MegCC" ["e"=1]
"ThanatosShinji/onnx-tool" -> "tsingmicro-toolchain/OnnxSlim" ["e"=1]
"ThanatosShinji/onnx-tool" -> "onnx/onnx-mlir" ["e"=1]
"CoffeeBeforeArch/cpp_from_scratch" -> "CoffeeBeforeArch/parallel_cpp"
"CoffeeBeforeArch/cpp_from_scratch" -> "CoffeeBeforeArch/cpp_sw_dev"
"corsix/amx" -> "libxsmm/libxsmm" ["e"=1]
"flame/blislab" -> "tpoisonooo/how-to-optimize-gemm"
"flame/blislab" -> "flame/how-to-optimize-gemm"
"flame/blislab" -> "pigirons/cpufp"
"flame/blislab" -> "KnowingNothing/MatmulTutorial"
"flame/blislab" -> "libxsmm/libxsmm"
"flame/blislab" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"flame/blislab" -> "Yinghan-Li/YHs_Sample"
"flame/blislab" -> "Liu-xiandong/How_to_optimize_in_GPU"
"flame/blislab" -> "yzhaiustc/Optimizing-DGEMM-on-Intel-CPUs-with-AVX512F"
"flame/blislab" -> "Cjkkkk/CUDA_gemm"
"flame/blislab" -> "openai/openai-gemm"
"flame/blislab" -> "flame/blis"
"flame/blislab" -> "cloudcores/CuAssembler"
"flame/blislab" -> "pigirons/sgemm_hsw"
"flame/blislab" -> "NervanaSystems/maxas"
"PKUFlyingPig/CMU10-714" -> "RussWong/CUDATutorial" ["e"=1]
"cusplibrary/cusplibrary" -> "cudpp/cudpp" ["e"=1]
"LBANN/lbann" -> "LLNL/Aluminum"
"LBANN/lbann" -> "LLNL/maestrowf"
"LBANN/lbann" -> "LLNL/merlin"
"LBANN/lbann" -> "deep500/deep500"
"zhangyachen/ComputerArchitectureAndCppBooks" -> "PaddleJitLab/CUDATutorial" ["e"=1]
"XiaoSong9905/CUDA-Optimization-Guide" -> "XiaoSong9905/HPC-Notes"
"XiaoSong9905/CUDA-Optimization-Guide" -> "Eddie-Wang1120/HPC-Learning-Notes"
"XiaoSong9905/CUDA-Optimization-Guide" -> "Liu-xiandong/How_to_optimize_in_GPU"
"XiaoSong9905/CUDA-Optimization-Guide" -> "Cjkkkk/CUDA_gemm"
"XiaoSong9905/CUDA-Optimization-Guide" -> "KnowingNothing/MatmulTutorial"
"XiaoSong9905/CUDA-Optimization-Guide" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"XiaoSong9905/CUDA-Optimization-Guide" -> "FZJ-JSC/tutorial-multi-gpu"
"XiaoSong9905/CUDA-Optimization-Guide" -> "Yinghan-Li/YHs_Sample"
"XiaoSong9905/CUDA-Optimization-Guide" -> "XiaoSong9905/dgemm-knl"
"XiaoSong9905/CUDA-Optimization-Guide" -> "ifromeast/cuda_learning"
"XiaoSong9905/CUDA-Optimization-Guide" -> "l0ngc/hpc-learning"
"XiaoSong9905/CUDA-Optimization-Guide" -> "Sunt-ing/stick" ["e"=1]
"XiaoSong9905/CUDA-Optimization-Guide" -> "66RING/tiny-flash-attention"
"XiaoSong9905/CUDA-Optimization-Guide" -> "nicolaswilde/cuda-tensorcore-hgemm"
"XiaoSong9905/CUDA-Optimization-Guide" -> "wangzyon/NVIDIA_SGEMM_PRACTICE"
"ForserX/StableDiffusionUI" -> "ssube/onnx-web"
"ForserX/StableDiffusionUI" -> "ForserX/Asura2D"
"yechengxi/LightNet" -> "sdemyanov/ConvNet" ["e"=1]
"bytedance/matxscript" -> "bytedance/ByteTransformer"
"bytedance/matxscript" -> "bytedance/byteir"
"bytedance/matxscript" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"bytedance/matxscript" -> "pytorch/torchdynamo"
"bytedance/matxscript" -> "mlc-ai/notebooks"
"bytedance/matxscript" -> "alibaba/BladeDISC"
"bytedance/matxscript" -> "bytedance/effective_transformer" ["e"=1]
"bytedance/matxscript" -> "tlc-pack/relax"
"bytedance/matxscript" -> "UofT-EcoSystem/DietCode"
"bytedance/matxscript" -> "microsoft/nnfusion"
"bytedance/matxscript" -> "alibaba/EasyParallelLibrary" ["e"=1]
"bytedance/matxscript" -> "tensorflow/mlir-hlo"
"bytedance/matxscript" -> "awslabs/raf"
"CoffeeBeforeArch/parallel_cpp" -> "CoffeeBeforeArch/cpp_from_scratch"
"CoffeeBeforeArch/parallel_cpp" -> "CoffeeBeforeArch/cpp_sw_dev"
"CoffeeBeforeArch/parallel_cpp" -> "CoffeeBeforeArch/cache_simulator"
"FlagOpen/FlagPerf" -> "FlagOpen/FlagGems" ["e"=1]
"FlagOpen/FlagPerf" -> "FlagOpen/FlagAttention"
"FlagOpen/FlagPerf" -> "FlagOpen/FlagScale"
"FlagOpen/FlagPerf" -> "FlagTree/flagtree"
"FlagOpen/FlagPerf" -> "bytedance/ByteMLPerf"
"wangzyon/trt_learn" -> "caibucai22/awesome-cuda"
"libxsmm/tpp-mlir" -> "iml130/mlir-emitc"
"libxsmm/tpp-mlir" -> "intel/mlir-extensions"
"libxsmm/tpp-mlir" -> "ROCm/rocMLIR"
"libxsmm/tpp-mlir" -> "Xilinx/mlir-air" ["e"=1]
"libxsmm/tpp-mlir" -> "iree-org/iree-turbine"
"libxsmm/tpp-mlir" -> "kumasento/polymer"
"mlc-ai/relax" -> "tlc-pack/relax"
"mlc-ai/relax" -> "UofT-EcoSystem/DietCode"
"aschuh703/ECE408" -> "TaKeTube/ECE-408"
"aschuh703/ECE408" -> "eedalong/ECE408"
"0xD0GF00D/DocumentSASS" -> "cloudcores/CuAssembler"
"OpenPPL/ppl.kernel.cpu" -> "OpenPPL/ppl.kernel.cuda"
"KernelTuner/kernel_tuner" -> "wangzyon/NVIDIA_SGEMM_PRACTICE" ["e"=1]
"KernelTuner/kernel_tuner" -> "NVIDIA/nvbench" ["e"=1]
"KernelTuner/kernel_tuner" -> "NVIDIA/cuCollections" ["e"=1]
"KernelTuner/kernel_tuner" -> "eyalroz/cuda-kat" ["e"=1]
"KernelTuner/kernel_tuner" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" ["e"=1]
"KernelTuner/kernel_tuner" -> "NervanaSystems/maxas" ["e"=1]
"SJTU-ACA-Lab/blue-porcelain" -> "sjfeng1999/gpu-arch-microbenchmark" ["e"=1]
"ssube/onnx-web" -> "NeusZimmer/ONNX-ModularUI-StableDiffusion"
"ssube/onnx-web" -> "Amblyopius/Stable-Diffusion-ONNX-FP16"
"ssube/onnx-web" -> "ForserX/StableDiffusionUI"
"ssube/onnx-web" -> "azuritecoin/OnnxDiffusersUI"
"ssube/onnx-web" -> "JbPasquier/stable-diffusion-onnx-ui"
"mlc-ai/notebooks" -> "mlc-ai/mlc-zh"
"mlc-ai/notebooks" -> "tlc-pack/relax"
"mlc-ai/notebooks" -> "tlc-pack/tenset"
"mlc-ai/notebooks" -> "apache/tvm-rfcs"
"mlc-ai/notebooks" -> "mlc-ai/mlc-en"
"mlc-ai/notebooks" -> "tqchen/ffi-navigator"
"mlc-ai/notebooks" -> "uwsampl/SparseTIR"
"mlc-ai/notebooks" -> "zhaiyi000/tlp"
"mlc-ai/notebooks" -> "mlc-ai/relax"
"mlc-ai/notebooks" -> "StrongSpoon/tvm.schedule"
"mlc-ai/notebooks" -> "awslabs/raf"
"mlc-ai/notebooks" -> "octoml/octoml-profile"
"mlc-ai/notebooks" -> "pku-liang/AMOS"
"mlc-ai/notebooks" -> "openmlsys/openmlsys-cuda"
"mlc-ai/notebooks" -> "tlc-pack/TLCBench"
"OpenPPL/CuAssembler" -> "openppl-public/ppl.nn.llm"
"OpenPPL/CuAssembler" -> "OpenPPL/ppl.common"
"OpenPPL/CuAssembler" -> "OpenPPL/ppl.llm.serving"
"OpenPPL/CuAssembler" -> "daadaada/gas"
"OpenPPL/CuAssembler" -> "OpenPPL/ppl.llm.kernel.cuda"
"OpenPPL/ppl.kernel.cuda" -> "OpenPPL/ppl.kernel.cpu"
"InfiniTensor/InfiniTensor" -> "InfiniTensor/RefactorGraph"
"InfiniTensor/InfiniTensor" -> "InfiniTensor/InfiniLM"
"InfiniTensor/InfiniTensor" -> "thu-pacman/PET"
"InfiniTensor/InfiniTensor" -> "humuyan/Korch"
"InfiniTensor/InfiniTensor" -> "InfiniTensor/operators"
"InfiniTensor/InfiniTensor" -> "LearningInfiniTensor/TinyInfiniTensor"
"InfiniTensor/InfiniTensor" -> "KnowingNothing/MatmulTutorial"
"InfiniTensor/InfiniTensor" -> "InfiniTensor/ninetoothed"
"InfiniTensor/InfiniTensor" -> "mirage-project/mirage" ["e"=1]
"InfiniTensor/InfiniTensor" -> "LearningInfiniTensor/learning-lm-rs"
"InfiniTensor/InfiniTensor" -> "uwsampl/SparseTIR"
"InfiniTensor/InfiniTensor" -> "LearningInfiniTensor/learning-cxx"
"InfiniTensor/InfiniTensor" -> "KnowingNothing/compiler-and-arch"
"wangzhaode/mnn-stable-diffusion" -> "wangzhaode/mnn-yolo"
"wangzhaode/mnn-stable-diffusion" -> "wangzhaode/mnn-mobilenet"
"wangzhaode/mnn-stable-diffusion" -> "wangzhaode/mnn-segment-anything"
"KnowingNothing/compiler-and-arch" -> "pku-liang/AMOS"
"KnowingNothing/compiler-and-arch" -> "KnowingNothing/MatmulTutorial"
"KnowingNothing/compiler-and-arch" -> "microsoft/BitBLAS" ["e"=1]
"KnowingNothing/compiler-and-arch" -> "merrymercy/awesome-tensor-compilers"
"KnowingNothing/compiler-and-arch" -> "KEKE046/mlir-tutorial"
"KnowingNothing/compiler-and-arch" -> "hidet-org/hidet"
"KnowingNothing/compiler-and-arch" -> "thu-pacman/PET"
"KnowingNothing/compiler-and-arch" -> "mit-han-lab/inter-operator-scheduler"
"KnowingNothing/compiler-and-arch" -> "mirage-project/mirage" ["e"=1]
"KnowingNothing/compiler-and-arch" -> "TiledTensor/TiledCUDA"
"KnowingNothing/compiler-and-arch" -> "zwang4/awesome-machine-learning-in-compilers"
"KnowingNothing/compiler-and-arch" -> "NVlabs/timeloop" ["e"=1]
"KnowingNothing/compiler-and-arch" -> "uwsampl/SparseTIR"
"KnowingNothing/compiler-and-arch" -> "awslabs/slapo"
"KnowingNothing/compiler-and-arch" -> "buddy-compiler/buddy-mlir"
"sunlex0717/DissectingTensorCores" -> "sjfeng1999/gpu-arch-microbenchmark"
"nicolaswilde/cuda-tensorcore-hgemm" -> "njuhope/cuda_sgemm"
"nicolaswilde/cuda-tensorcore-hgemm" -> "nicolaswilde/cuda-sgemm"
"nicolaswilde/cuda-tensorcore-hgemm" -> "Bruce-Lee-LY/cuda_hgemm"
"nicolaswilde/cuda-tensorcore-hgemm" -> "Yinghan-Li/YHs_Sample"
"nicolaswilde/cuda-tensorcore-hgemm" -> "wmmae/wmma_extension"
"nicolaswilde/cuda-tensorcore-hgemm" -> "KnowingNothing/MatmulTutorial"
"nicolaswilde/cuda-tensorcore-hgemm" -> "wzsh/wmma_tensorcore_sample"
"zhaiyi000/tlp" -> "tlc-pack/tenset"
"zhaiyi000/tlp" -> "zhaiyi000/tlm"
"vaivaswatha/pliron" -> "mlir-rs/melior"
"ZhouJiaHuan/yolo_deploy" -> "wangzhaode/mnn-yolo"
"wangzhaode/llm-export" -> "luchangli03/export_llama_to_onnx"
"wangzhaode/llm-export" -> "inisis/OnnxLLM"
"wangzhaode/llm-export" -> "wangzhaode/mnn-llm" ["e"=1]
"wangzhaode/llm-export" -> "tsingmicro-toolchain/OnnxSlim"
"wangzhaode/llm-export" -> "tpoisonooo/llama.onnx"
"wangzhaode/llm-export" -> "wangzhaode/mnn-stable-diffusion"
"wangzhaode/llm-export" -> "wangzhaode/onnx-llm"
"wangzhaode/llm-export" -> "inisis/OnnxSlim"
"wangzhaode/llm-export" -> "AXERA-TECH/ax-llm" ["e"=1]
"wangzhaode/mnn-llm" -> "wangzhaode/llm-export" ["e"=1]
"dmlc/nnvm" -> "Maratyszcza/NNPACK" ["e"=1]
"dmlc/nnvm" -> "google/gemmlowp" ["e"=1]
"dmlc/nnvm" -> "facebookresearch/TensorComprehensions" ["e"=1]
"dmlc/nnvm" -> "NervanaSystems/ngraph" ["e"=1]
"dmlc/nnvm" -> "baidu-research/DeepBench" ["e"=1]
"intel/ipex-llm" -> "uxlfoundation/oneDNN" ["e"=1]
"ModelTC/lightllm" -> "BBuf/how-to-optim-algorithm-in-cuda" ["e"=1]
"ModelTC/lightllm" -> "xlite-dev/LeetCUDA" ["e"=1]
"ModelTC/lightllm" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"mlc-ai/web-stable-diffusion" -> "mlc-ai/mlc-en" ["e"=1]
"mlc-ai/web-stable-diffusion" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"LostRuins/koboldcpp" -> "YellowRoseCx/koboldcpp-rocm" ["e"=1]
"axodox/axodox-machinelearning" -> "Amblyopius/Stable-Diffusion-ONNX-FP16" ["e"=1]
"bbycroft/llm-viz" -> "chenzomi12/AISystem" ["e"=1]
"sangyc10/CUDA-code" -> "HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese"
"sangyc10/CUDA-code" -> "brucefan1983/CUDA-Programming"
"sangyc10/CUDA-code" -> "zjhellofss/KuiperLLama"
"sangyc10/CUDA-code" -> "xlite-dev/LeetCUDA"
"sangyc10/CUDA-code" -> "QINZHAOYU/CudaSteps"
"sangyc10/CUDA-code" -> "Tony-Tan/CUDA_Freshman"
"sangyc10/CUDA-code" -> "Liu-xiandong/How_to_optimize_in_GPU"
"sangyc10/CUDA-code" -> "MAhaitao999/CUDA_Programming"
"sangyc10/CUDA-code" -> "BBuf/how-to-optim-algorithm-in-cuda"
"sangyc10/CUDA-code" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"sangyc10/CUDA-code" -> "zjhellofss/KuiperInfer"
"sangyc10/CUDA-code" -> "kwea123/pytorch-cppcuda-tutorial" ["e"=1]
"sangyc10/CUDA-code" -> "gpu-mode/lectures"
"sangyc10/CUDA-code" -> "godweiyang/NN-CUDA-Example"
"sangyc10/CUDA-code" -> "shouxieai/tensorRT_Pro" ["e"=1]
"jansel/opentuner" -> "google/ml-compiler-opt"
"jansel/opentuner" -> "facebookresearch/CompilerGym"
"jansel/opentuner" -> "CNugteren/CLTune" ["e"=1]
"jansel/opentuner" -> "lift-project/lift"
"flashinfer-ai/flashinfer" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"flashinfer-ai/flashinfer" -> "xlite-dev/LeetCUDA" ["e"=1]
"flashinfer-ai/flashinfer" -> "BBuf/how-to-optim-algorithm-in-cuda" ["e"=1]
"flame/how-to-optimize-gemm" -> "flame/blislab"
"flame/how-to-optimize-gemm" -> "tpoisonooo/how-to-optimize-gemm"
"flame/how-to-optimize-gemm" -> "merrymercy/awesome-tensor-compilers"
"flame/how-to-optimize-gemm" -> "google/gemmlowp"
"flame/how-to-optimize-gemm" -> "BBuf/tvm_mlir_learn"
"flame/how-to-optimize-gemm" -> "Liu-xiandong/How_to_optimize_in_GPU"
"flame/how-to-optimize-gemm" -> "NervanaSystems/maxas"
"flame/how-to-optimize-gemm" -> "pigirons/cpufp"
"flame/how-to-optimize-gemm" -> "microsoft/nnfusion"
"flame/how-to-optimize-gemm" -> "BBuf/how-to-optim-algorithm-in-cuda"
"flame/how-to-optimize-gemm" -> "OpenPPL/ppl.nn"
"flame/how-to-optimize-gemm" -> "pytorch/QNNPACK"
"flame/how-to-optimize-gemm" -> "flame/blis"
"flame/how-to-optimize-gemm" -> "andravin/wincnn"
"flame/how-to-optimize-gemm" -> "alibaba/BladeDISC"
"mpitutorial/mpitutorial" -> "flame/how-to-optimize-gemm" ["e"=1]
"mpitutorial/mpitutorial" -> "NVIDIA/cub" ["e"=1]
"andravin/wincnn" -> "xingyul/sparse-winograd-cnn"
"andravin/wincnn" -> "BUG1989/caffe-int8-convert-tools"
"andravin/wincnn" -> "xuqiantong/CUDA-Winograd"
"andravin/wincnn" -> "Maratyszcza/NNPACK"
"andravin/wincnn" -> "google/gemmlowp"
"andravin/wincnn" -> "pytorch/QNNPACK"
"andravin/wincnn" -> "flame/how-to-optimize-gemm"
"andravin/wincnn" -> "IntelLabs/SkimCaffe" ["e"=1]
"andravin/wincnn" -> "huawei-noah/bolt"
"andravin/wincnn" -> "Tencent/FeatherCNN"
"andravin/wincnn" -> "NervanaSystems/maxas"
"andravin/wincnn" -> "PaddlePaddle/Anakin"
"andravin/wincnn" -> "libxsmm/libxsmm"
"andravin/wincnn" -> "deepglint/EasyQuant" ["e"=1]
"andravin/wincnn" -> "pmgysel/caffe" ["e"=1]
"l0ngc/hpc-learning" -> "Eddie-Wang1120/HPC-Learning-Notes"
"l0ngc/hpc-learning" -> "XiaoSong9905/CUDA-Optimization-Guide"
"l0ngc/hpc-learning" -> "Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes"
"l0ngc/hpc-learning" -> "xlite-dev/LeetCUDA"
"l0ngc/hpc-learning" -> "Liu-xiandong/How_to_optimize_in_GPU"
"l0ngc/hpc-learning" -> "BBuf/tvm_mlir_learn"
"l0ngc/hpc-learning" -> "BBuf/how-to-optim-algorithm-in-cuda"
"l0ngc/hpc-learning" -> "zjhellofss/KuiperInfer"
"l0ngc/hpc-learning" -> "Tongkaio/CUDA_Kernel_Samples"
"l0ngc/hpc-learning" -> "gpu-mode/lectures"
"l0ngc/hpc-learning" -> "zjhellofss/KuiperLLama"
"l0ngc/hpc-learning" -> "openmlsys/openmlsys-zh"
"l0ngc/hpc-learning" -> "shinezyy/micro-arch-training" ["e"=1]
"l0ngc/hpc-learning" -> "PaddleJitLab/CUDATutorial"
"l0ngc/hpc-learning" -> "parallel101/course" ["e"=1]
"Sunt-ing/stick" -> "XiaoSong9905/CUDA-Optimization-Guide" ["e"=1]
"kebijuelun/Awesome-LLM-Learning" -> "harleyszhang/llm_note" ["e"=1]
"microsoft/ELL" -> "microsoft/EdgeML" ["e"=1]
"microsoft/ELL" -> "uTensor/uTensor" ["e"=1]
"microsoft/ELL" -> "ARM-software/ComputeLibrary"
"microsoft/ELL" -> "google/gemmlowp"
"microsoft/ELL" -> "samjabrahams/tensorflow-on-raspberry-pi" ["e"=1]
"microsoft/ELL" -> "DT42/BerryNet" ["e"=1]
"microsoft/ELL" -> "Maratyszcza/NNPACK"
"microsoft/ELL" -> "majianjia/nnom" ["e"=1]
"microsoft/ELL" -> "NervanaSystems/ngraph"
"microsoft/ELL" -> "facebookarchive/caffe2" ["e"=1]
"microsoft/ELL" -> "ARM-software/armnn"
"microsoft/ELL" -> "dmlc/nnvm" ["e"=1]
"microsoft/ELL" -> "facebookresearch/TensorComprehensions"
"microsoft/ELL" -> "tiny-dnn/tiny-dnn" ["e"=1]
"microsoft/ELL" -> "baidu-research/DeepBench"
"xlite-dev/Awesome-LLM-Inference" -> "xlite-dev/LeetCUDA" ["e"=1]
"xlite-dev/Awesome-LLM-Inference" -> "BBuf/how-to-optim-algorithm-in-cuda" ["e"=1]
"xlite-dev/Awesome-LLM-Inference" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"xlite-dev/Awesome-LLM-Inference" -> "gpu-mode/lectures" ["e"=1]
"intel/caffe" -> "uxlfoundation/oneDNN" ["e"=1]
"intel/caffe" -> "baidu-research/DeepBench" ["e"=1]
"intel/caffe" -> "Tencent/FeatherCNN" ["e"=1]
"intel/caffe" -> "Maratyszcza/NNPACK" ["e"=1]
"intel/caffe" -> "google/gemmlowp" ["e"=1]
"baidu-research/DeepBench" -> "mlcommons/training"
"baidu-research/DeepBench" -> "soumith/convnet-benchmarks" ["e"=1]
"baidu-research/DeepBench" -> "NervanaSystems/maxas"
"baidu-research/DeepBench" -> "tensorflow/benchmarks" ["e"=1]
"baidu-research/DeepBench" -> "google/gemmlowp"
"baidu-research/DeepBench" -> "openai/openai-gemm"
"baidu-research/DeepBench" -> "Maratyszcza/NNPACK"
"baidu-research/DeepBench" -> "basicmi/AI-Chip"
"baidu-research/DeepBench" -> "gpgpu-sim/gpgpu-sim_distribution" ["e"=1]
"baidu-research/DeepBench" -> "hclhkbu/dlbench"
"baidu-research/DeepBench" -> "fengbintu/Neural-Networks-on-Silicon" ["e"=1]
"baidu-research/DeepBench" -> "mlcommons/inference"
"baidu-research/DeepBench" -> "libxsmm/libxsmm"
"baidu-research/DeepBench" -> "u39kun/deep-learning-benchmark"
"baidu-research/DeepBench" -> "NVIDIA/nccl" ["e"=1]
"nitishsrivastava/deepnet" -> "cudamat/cudamat" ["e"=1]
"nitishsrivastava/deepnet" -> "TorontoDeepLearning/convnet" ["e"=1]
"uxlfoundation/oneTBB" -> "NVIDIA/thrust" ["e"=1]
"bytedance/ByteTransformer" -> "ColfaxResearch/cutlass-kernels"
"bytedance/ByteTransformer" -> "KnowingNothing/MatmulTutorial"
"bytedance/ByteTransformer" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"bytedance/ByteTransformer" -> "jiazhihao/TASO"
"bytedance/ByteTransformer" -> "alibaba/BladeDISC"
"bytedance/ByteTransformer" -> "bytedance/effective_transformer" ["e"=1]
"bytedance/ByteTransformer" -> "bytedance/matxscript"
"bytedance/ByteTransformer" -> "microsoft/nnfusion"
"bytedance/ByteTransformer" -> "bytedance/flux" ["e"=1]
"bytedance/ByteTransformer" -> "tlc-pack/libflash_attn"
"bytedance/ByteTransformer" -> "bytedance/byteir"
"bytedance/ByteTransformer" -> "IST-DASLab/marlin" ["e"=1]
"bytedance/ByteTransformer" -> "alibaba/rtp-llm" ["e"=1]
"bytedance/ByteTransformer" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"bytedance/ByteTransformer" -> "mit-han-lab/omniserve" ["e"=1]
"MegEngine/InferLLM" -> "MegEngine/MegCC" ["e"=1]
"MegEngine/InferLLM" -> "MegEngine/MegPeak" ["e"=1]
"MegEngine/InferLLM" -> "MegEngine/mperf" ["e"=1]
"MegEngine/InferLLM" -> "tpoisonooo/llama.onnx" ["e"=1]
"MegEngine/InferLLM" -> "bytedance/byteir" ["e"=1]
"MegEngine/InferLLM" -> "OpenPPL/ppl.nn" ["e"=1]
"MegEngine/InferLLM" -> "zjhellofss/KuiperLLama" ["e"=1]
"MegEngine/InferLLM" -> "tpoisonooo/how-to-optimize-gemm" ["e"=1]
"cassiebreviu/StableDiffusion" -> "TensorStack-AI/OnnxStack"
"cassiebreviu/StableDiffusion" -> "DarthAffe/StableDiffusion.NET"
"cassiebreviu/StableDiffusion" -> "andreae293/Stable-Diffusion.NET-NCNN"
"cassiebreviu/StableDiffusion" -> "dranger003/llama.cpp-dotnet"
"tsingmicro-toolchain/OnnxSlim" -> "inisis/OnnxSlim"
"tsingmicro-toolchain/OnnxSlim" -> "WeLoveAI/onnx2torch"
"tsingmicro-toolchain/OnnxSlim" -> "inisis/OnnxLLM"
"tsingmicro-toolchain/OnnxSlim" -> "inisis/onion"
"tsingmicro-toolchain/OnnxSlim" -> "wangzhaode/llm-export"
"harvard-edge/cs249r_book" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"harvard-edge/cs249r_book" -> "gpu-mode/lectures" ["e"=1]
"harvard-edge/cs249r_book" -> "xlite-dev/LeetCUDA" ["e"=1]
"harvard-edge/cs249r_book" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["e"=1]
"harvard-edge/cs249r_book" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"vitoplantamura/OnnxStream" -> "ssube/onnx-web" ["e"=1]
"j2kun/mlir-tutorial" -> "KEKE046/mlir-tutorial"
"j2kun/mlir-tutorial" -> "buddy-compiler/buddy-mlir"
"j2kun/mlir-tutorial" -> "llvm/Polygeist"
"j2kun/mlir-tutorial" -> "llvm/torch-mlir"
"j2kun/mlir-tutorial" -> "iree-org/iree"
"j2kun/mlir-tutorial" -> "BBuf/tvm_mlir_learn"
"j2kun/mlir-tutorial" -> "google/heir" ["e"=1]
"j2kun/mlir-tutorial" -> "xdslproject/xdsl"
"j2kun/mlir-tutorial" -> "bytedance/byteir"
"j2kun/mlir-tutorial" -> "onnx/onnx-mlir"
"j2kun/mlir-tutorial" -> "sophgo/tpu-mlir"
"j2kun/mlir-tutorial" -> "llvm/clangir"
"j2kun/mlir-tutorial" -> "merrymercy/awesome-tensor-compilers"
"j2kun/mlir-tutorial" -> "microsoft/triton-shared"
"j2kun/mlir-tutorial" -> "zwang4/awesome-machine-learning-in-compilers"
"wangzhaode/mnn-yolo" -> "ZhouJiaHuan/yolo_deploy"
"wangzhaode/mnn-yolo" -> "wangzhaode/mnn-stable-diffusion"
"wangzhaode/mnn-yolo" -> "wangzhaode/mnn-mobilenet"
"wangzhaode/mnn-yolo" -> "wangzhaode/mnn-segment-anything"
"Umio-Yasuno/amdgpu_top" -> "lamikr/rocm_sdk_builder" ["e"=1]
"Eddie-Wang1120/HPC-Learning-Notes" -> "Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes"
"Eddie-Wang1120/HPC-Learning-Notes" -> "l0ngc/hpc-learning"
"Eddie-Wang1120/HPC-Learning-Notes" -> "XiaoSong9905/CUDA-Optimization-Guide"
"Eddie-Wang1120/HPC-Learning-Notes" -> "XiaoSong9905/HPC-Notes"
"Eddie-Wang1120/HPC-Learning-Notes" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Eddie-Wang1120/HPC-Learning-Notes" -> "RussWong/CUDATutorial"
"Eddie-Wang1120/HPC-Learning-Notes" -> "BBuf/how-to-optim-algorithm-in-cuda"
"Eddie-Wang1120/HPC-Learning-Notes" -> "BBuf/how-to-learn-deep-learning-framework"
"Eddie-Wang1120/HPC-Learning-Notes" -> "Cjkkkk/CUDA_gemm"
"Eddie-Wang1120/HPC-Learning-Notes" -> "zjhellofss/KuiperLLama"
"Eddie-Wang1120/HPC-Learning-Notes" -> "zjhellofss/KuiperInfer"
"Eddie-Wang1120/HPC-Learning-Notes" -> "zjhellofss/kuiperdatawhale"
"Eddie-Wang1120/HPC-Learning-Notes" -> "KnowingNothing/MatmulTutorial"
"Eddie-Wang1120/HPC-Learning-Notes" -> "nndeploy/nndeploy" ["e"=1]
"Eddie-Wang1120/HPC-Learning-Notes" -> "He-Ze/HPC-Lab-SYSU"
"zjhellofss/kuiperdatawhale" -> "zjhellofss/KuiperInfer"
"zjhellofss/kuiperdatawhale" -> "zjhellofss/KuiperLLama"
"zjhellofss/kuiperdatawhale" -> "zjhellofss/KuiperCourse"
"zjhellofss/kuiperdatawhale" -> "HuPengsheet/EasyNN"
"zjhellofss/kuiperdatawhale" -> "xgqdut2016/cuda_code"
"zjhellofss/kuiperdatawhale" -> "nndeploy/nndeploy" ["e"=1]
"zjhellofss/kuiperdatawhale" -> "Eddie-Wang1120/HPC-Learning-Notes"
"StanfordLegion/legion" -> "nv-legate/cupynumeric" ["e"=1]
"StanfordLegion/legion" -> "NVIDIA/multi-gpu-programming-models" ["e"=1]
"StanfordLegion/legion" -> "nv-legate/legate" ["e"=1]
"StanfordLegion/legion" -> "NVIDIA/cuCollections" ["e"=1]
"StanfordLegion/legion" -> "tensor-compiler/taco" ["e"=1]
"apple/axlearn" -> "openxla/xla" ["e"=1]
"jcjohnson/cnn-benchmarks" -> "albanie/convnet-burden" ["e"=1]
"tqchen/tinyflow" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["e"=1]
"tqchen/tinyflow" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"tqchen/tinyflow" -> "flame/how-to-optimize-gemm" ["e"=1]
"tqchen/tinyflow" -> "d2l-ai/d2l-tvm" ["e"=1]
"tqchen/tinyflow" -> "microsoft/nnfusion" ["e"=1]
"tqchen/tinyflow" -> "google/gemmlowp" ["e"=1]
"IntelLabs/SkimCaffe" -> "xingyul/sparse-winograd-cnn" ["e"=1]
"IntelLabs/SkimCaffe" -> "andravin/wincnn" ["e"=1]
"IntelLabs/SkimCaffe" -> "libxsmm/libxsmm" ["e"=1]
"microsoft/Llama-2-Onnx" -> "tpoisonooo/llama.onnx"
"microsoft/Llama-2-Onnx" -> "luchangli03/export_llama_to_onnx"
"microsoft/Llama-2-Onnx" -> "microsoft/onnxruntime-genai" ["e"=1]
"microsoft/Llama-2-Onnx" -> "ThanatosShinji/onnx-tool" ["e"=1]
"microsoft/Llama-2-Onnx" -> "onnx/onnx-mlir"
"microsoft/Llama-2-Onnx" -> "S-LoRA/S-LoRA" ["e"=1]
"AmberLJC/LLMSys-PaperList" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["e"=1]
"cli99/llm-analysis" -> "harleyszhang/llm_counts" ["e"=1]
"src-d/kmcuda" -> "lebedov/scikit-cuda" ["e"=1]
"tensor-compiler/taco" -> "microsoft/nnfusion"
"tensor-compiler/taco" -> "jiazhihao/TASO"
"tensor-compiler/taco" -> "merrymercy/awesome-tensor-compilers"
"tensor-compiler/taco" -> "Tiramisu-Compiler/tiramisu"
"tensor-compiler/taco" -> "llvm/Polygeist"
"tensor-compiler/taco" -> "halide/Halide"
"tensor-compiler/taco" -> "facebookresearch/TensorComprehensions"
"tensor-compiler/taco" -> "libxsmm/libxsmm"
"tensor-compiler/taco" -> "cyclops-community/ctf" ["e"=1]
"tensor-compiler/taco" -> "tensorflow/mlir"
"tensor-compiler/taco" -> "iree-org/iree"
"tensor-compiler/taco" -> "uwsampl/SparseTIR"
"tensor-compiler/taco" -> "llvm/torch-mlir"
"tensor-compiler/taco" -> "ValeevGroup/tiledarray" ["e"=1]
"tensor-compiler/taco" -> "onnx/onnx-mlir"
"kennethleungty/Llama-2-Open-Source-LLM-CPU-Inference" -> "microsoft/Llama-2-Onnx" ["e"=1]
"mlc-ai/tokenizers-cpp" -> "wangkuiyi/huggingface-tokenizer-in-cxx"
"mlc-ai/tokenizers-cpp" -> "mlc-ai/relax"
"YellowRoseCx/koboldcpp-rocm" -> "lshqqytiger/ZLUDA"
"YellowRoseCx/koboldcpp-rocm" -> "brknsoul/ROCmLibs"
"YellowRoseCx/koboldcpp-rocm" -> "patientx/ComfyUI-Zluda"
"YellowRoseCx/koboldcpp-rocm" -> "likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU"
"YellowRoseCx/koboldcpp-rocm" -> "LostRuins/koboldcpp" ["e"=1]
"YellowRoseCx/koboldcpp-rocm" -> "lshqqytiger/stable-diffusion-webui-amdgpu"
"YellowRoseCx/koboldcpp-rocm" -> "lshqqytiger/stable-diffusion-webui-amdgpu-forge"
"YellowRoseCx/koboldcpp-rocm" -> "nod-ai/SHARK-Studio"
"YellowRoseCx/koboldcpp-rocm" -> "lamikr/rocm_sdk_builder"
"YellowRoseCx/koboldcpp-rocm" -> "likelovewant/ollama-for-amd"
"YellowRoseCx/koboldcpp-rocm" -> "Amblyopius/Stable-Diffusion-ONNX-FP16"
"YellowRoseCx/koboldcpp-rocm" -> "nktice/AMD-AI" ["e"=1]
"YellowRoseCx/koboldcpp-rocm" -> "likelovewant/stable-diffusion-webui-forge-on-amd"
"YellowRoseCx/koboldcpp-rocm" -> "cierru/st-stepped-thinking" ["e"=1]
"YellowRoseCx/koboldcpp-rocm" -> "ROCm/flash-attention" ["e"=1]
"Erkaman/Awesome-CUDA" -> "Jokeren/Awesome-GPU"
"Erkaman/Awesome-CUDA" -> "cudpp/cudpp"
"Erkaman/Awesome-CUDA" -> "jslee02/awesome-gpgpu"
"Erkaman/Awesome-CUDA" -> "coderonion/awesome-cuda-and-hpc" ["e"=1]
"Erkaman/Awesome-CUDA" -> "eyalroz/cuda-api-wrappers"
"Erkaman/Awesome-CUDA" -> "gmarciani/cudawesome"
"Erkaman/Awesome-CUDA" -> "harrism/hemi"
"Erkaman/Awesome-CUDA" -> "rbaygildin/learn-gpgpu"
"Erkaman/Awesome-CUDA" -> "ArchaeaSoftware/cudahandbook"
"Erkaman/Awesome-CUDA" -> "facebookarchive/fbcuda" ["e"=1]
"Erkaman/Awesome-CUDA" -> "stotko/stdgpu"
"Erkaman/Awesome-CUDA" -> "NVIDIA/jitify"
"Erkaman/Awesome-CUDA" -> "NVIDIA/cub"
"Erkaman/Awesome-CUDA" -> "Apress/ray-tracing-gems" ["e"=1]
"Erkaman/Awesome-CUDA" -> "romain-jacotin/cuda"
"bytedance/ByteMLPerf" -> "bytedance/byteir"
"BBuf/how-to-learn-deep-learning-framework" -> "BBuf/how-to-optim-algorithm-in-cuda"
"BBuf/how-to-learn-deep-learning-framework" -> "BBuf/tvm_mlir_learn"
"BBuf/how-to-learn-deep-learning-framework" -> "KEKE046/mlir-tutorial"
"BBuf/how-to-learn-deep-learning-framework" -> "MegEngine/MegCC"
"BBuf/how-to-learn-deep-learning-framework" -> "Liu-xiandong/How_to_optimize_in_GPU"
"BBuf/how-to-learn-deep-learning-framework" -> "Jack47/hack-SysML"
"BBuf/how-to-learn-deep-learning-framework" -> "Yinghan-Li/YHs_Sample"
"BBuf/how-to-learn-deep-learning-framework" -> "SiriusNEO/Triton-Puzzles-Lite" ["e"=1]
"BBuf/how-to-learn-deep-learning-framework" -> "66RING/tiny-flash-attention"
"BBuf/how-to-learn-deep-learning-framework" -> "bytedance/byteir"
"BBuf/how-to-learn-deep-learning-framework" -> "buddy-compiler/buddy-mlir"
"BBuf/how-to-learn-deep-learning-framework" -> "KnowingNothing/MatmulTutorial"
"BBuf/how-to-learn-deep-learning-framework" -> "zjhellofss/KuiperLLama"
"BBuf/how-to-learn-deep-learning-framework" -> "xlite-dev/LeetCUDA"
"BBuf/how-to-learn-deep-learning-framework" -> "mlc-ai/notebooks"
"simit-lang/simit" -> "tensor-compiler/taco" ["e"=1]
"thuml/depyf" -> "microsoft/triton-shared" ["e"=1]
"thuml/depyf" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"thuml/depyf" -> "alibaba/BladeDISC" ["e"=1]
"thuml/depyf" -> "hidet-org/hidet" ["e"=1]
"makslevental/mlir-python-extras" -> "Xilinx/aie-rt" ["e"=1]
"makslevental/mlir-python-extras" -> "makslevental/mlir-wheels"
"microsoft/triton-shared" -> "Cambricon/triton-linalg"
"microsoft/triton-shared" -> "FlagOpen/FlagGems" ["e"=1]
"microsoft/triton-shared" -> "KEKE046/mlir-tutorial"
"microsoft/triton-shared" -> "libxsmm/tpp-mlir"
"microsoft/triton-shared" -> "intel/intel-xpu-backend-for-triton"
"microsoft/triton-shared" -> "triton-lang/triton-cpu"
"microsoft/triton-shared" -> "Deep-Learning-Profiling-Tools/triton-viz" ["e"=1]
"microsoft/triton-shared" -> "TiledTensor/TiledCUDA"
"microsoft/triton-shared" -> "iml130/mlir-emitc"
"microsoft/triton-shared" -> "llvm/Polygeist"
"microsoft/triton-shared" -> "bytedance/byteir"
"microsoft/triton-shared" -> "ROCm/rocMLIR"
"microsoft/triton-shared" -> "llvm/clangir"
"microsoft/triton-shared" -> "mobiusml/gemlite" ["e"=1]
"microsoft/triton-shared" -> "triton-lang/kernels" ["e"=1]
"KnowingNothing/MatmulTutorial" -> "ColfaxResearch/cutlass-kernels"
"KnowingNothing/MatmulTutorial" -> "DD-DuDa/Cute-Learning"
"KnowingNothing/MatmulTutorial" -> "reed-lau/cute-gemm"
"KnowingNothing/MatmulTutorial" -> "Bruce-Lee-LY/cuda_hgemm"
"KnowingNothing/MatmulTutorial" -> "TiledTensor/TiledCUDA"
"KnowingNothing/MatmulTutorial" -> "66RING/tiny-flash-attention"
"KnowingNothing/MatmulTutorial" -> "microsoft/BitBLAS" ["e"=1]
"KnowingNothing/MatmulTutorial" -> "Cjkkkk/CUDA_gemm"
"KnowingNothing/MatmulTutorial" -> "KnowingNothing/compiler-and-arch"
"KnowingNothing/MatmulTutorial" -> "IST-DASLab/marlin" ["e"=1]
"KnowingNothing/MatmulTutorial" -> "bytedance/flux" ["e"=1]
"KnowingNothing/MatmulTutorial" -> "tpoisonooo/how-to-optimize-gemm"
"KnowingNothing/MatmulTutorial" -> "ColfaxResearch/cfx-article-src"
"KnowingNothing/MatmulTutorial" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"KnowingNothing/MatmulTutorial" -> "Yinghan-Li/YHs_Sample"
"herumi/xbyak" -> "uxlfoundation/oneDNN" ["e"=1]
"herumi/xbyak" -> "libxsmm/libxsmm" ["e"=1]
"herumi/xbyak" -> "flame/how-to-optimize-gemm" ["e"=1]
"herumi/xbyak" -> "pigirons/cpufp" ["e"=1]
"herumi/xbyak" -> "NervanaSystems/maxas" ["e"=1]
"herumi/xbyak" -> "alibaba/BladeDISC" ["e"=1]
"nndeploy/nndeploy" -> "zjhellofss/KuiperInfer" ["e"=1]
"nndeploy/nndeploy" -> "zjhellofss/KuiperLLama" ["e"=1]
"nndeploy/nndeploy" -> "OpenPPL/ppl.cv" ["e"=1]
"coderonion/awesome-cuda-and-hpc" -> "DD-DuDa/Cute-Learning" ["e"=1]
"dividiti/ck-caffe" -> "ctuning/ck-docker"
"dividiti/ck-caffe" -> "ctuning/ck-math"
"dividiti/ck-caffe" -> "ctuning/ck-crowdtuning-platforms"
"dividiti/ck-caffe" -> "ctuning/ck-web"
"dividiti/ck-caffe" -> "ctuning/ck-crowdtuning"
"dividiti/ck-caffe" -> "dividiti/gemmbench-adapt16"
"dividiti/ck-caffe" -> "ctuning/ck-crowdnode"
"dividiti/ck-caffe" -> "ctuning/ck-web-adapt-workshop"
"dividiti/ck-caffe" -> "ctuning/ck-analytics"
"dividiti/ck-caffe" -> "ctuning/ck-dissemination-modules"
"dividiti/ck-caffe" -> "ctuning/ck-guide-images"
"dividiti/ck-caffe" -> "ctuning/ck-tensorflow"
"dividiti/ck-caffe" -> "ctuning/ck-env"
"dividiti/ck-caffe" -> "dividiti/gemmbench"
"dividiti/ck-caffe" -> "ctuning/ck-dev-compilers"
"FlagAI-Open/Aquila2" -> "FlagOpen/FlagScale" ["e"=1]
"TensorStack-AI/OnnxStack" -> "cassiebreviu/StableDiffusion"
"TensorStack-AI/OnnxStack" -> "saddam213/LLamaStack"
"TensorStack-AI/OnnxStack" -> "DarthAffe/StableDiffusion.NET"
"TensorStack-AI/OnnxStack" -> "Stackyard-AI/Amuse"
"TensorStack-AI/OnnxStack" -> "ssube/onnx-web"
"openppl-public/ppl.nn.llm" -> "OpenPPL/ppl.llm.serving"
"openppl-public/ppl.nn.llm" -> "OpenPPL/ppl.llm.kernel.cuda"
"openppl-public/ppl.nn.llm" -> "OpenPPL/ppl.pmx"
"openppl-public/ppl.nn.llm" -> "OpenPPL/CuAssembler"
"openppl-public/ppl.nn.llm" -> "OpenPPL/ppl.kernel.cuda"
"MegEngine/mperf" -> "MegEngine/MegPeak"
"MegEngine/mperf" -> "MegEngine/MegCC"
"tlc-pack/libflash_attn" -> "Bruce-Lee-LY/flash_attention_inference"
"tpoisonooo/llama.onnx" -> "luchangli03/export_llama_to_onnx"
"tpoisonooo/llama.onnx" -> "wangzhaode/llm-export"
"tpoisonooo/llama.onnx" -> "microsoft/Llama-2-Onnx"
"tpoisonooo/llama.onnx" -> "tpoisonooo/how-to-optimize-gemm"
"tpoisonooo/llama.onnx" -> "OpenPPL/ppl.cv"
"tpoisonooo/llama.onnx" -> "openppl-public/ppl.nn.llm"
"tpoisonooo/llama.onnx" -> "daquexian/faster-rwkv" ["e"=1]
"tpoisonooo/llama.onnx" -> "MegEngine/MegCC"
"HuPengsheet/use-ncnn" -> "HuPengsheet/EasyNN"
"shreyansh26/FlashAttention-PyTorch" -> "kyegomez/FlashAttention20"
"shreyansh26/FlashAttention-PyTorch" -> "66RING/tiny-flash-attention"
"harleyszhang/llm_counts" -> "harleyszhang/lite_llama"
"harleyszhang/llm_counts" -> "zjhellofss/triton_course"
"RussWong/CUDATutorial" -> "RussWong/LLM-engineering"
"RussWong/CUDATutorial" -> "zjhellofss/KuiperLLama"
"RussWong/CUDATutorial" -> "Liu-xiandong/How_to_optimize_in_GPU"
"RussWong/CUDATutorial" -> "Cjkkkk/CUDA_gemm"
"RussWong/CUDATutorial" -> "BBuf/how-to-optim-algorithm-in-cuda"
"RussWong/CUDATutorial" -> "Eddie-Wang1120/HPC-Learning-Notes"
"RussWong/CUDATutorial" -> "PaddleJitLab/CUDATutorial"
"RussWong/CUDATutorial" -> "openmlsys/openmlsys-cuda"
"RussWong/CUDATutorial" -> "flame/blislab"
"tgale96/grouped_gemm" -> "fanshiqing/grouped_gemm"
"BobMcDear/attorch" -> "FlagOpen/FlagAttention" ["e"=1]
"BobMcDear/attorch" -> "microsoft/triton-shared" ["e"=1]
"BobMcDear/attorch" -> "tspeterkim/flash-attention-minimal" ["e"=1]
"crabml/crabml" -> "InfiniTensor/InfiniLM" ["e"=1]
"PacktPublishing/Learn-LLVM-17" -> "KEKE046/mlir-tutorial" ["e"=1]
"tenstorrent/tt-metal" -> "tenstorrent/tt-buda"
"tenstorrent/tt-metal" -> "tenstorrent/tt-mlir"
"tenstorrent/tt-metal" -> "tenstorrent/tt-kmd"
"tenstorrent/tt-metal" -> "tenstorrent/pytorch2.0_ttnn"
"tenstorrent/tt-metal" -> "arakhmati/torchtrail"
"tenstorrent/tt-metal" -> "tenstorrent/ttnn-visualizer"
"tenstorrent/tt-metal" -> "tenstorrent/tt-smi"
"tenstorrent/tt-metal" -> "tenstorrent/tt-buda-demos"
"tenstorrent/tt-metal" -> "tenstorrent/tt-forge-fe"
"tenstorrent/tt-metal" -> "tenstorrent/tt-firmware"
"tenstorrent/tt-metal" -> "tenstorrent/tt-tvm"
"tenstorrent/tt-metal" -> "tenstorrent/tt-forge"
"tenstorrent/tt-metal" -> "openxla/stablehlo"
"tenstorrent/tt-metal" -> "mesozoic-egg/tinygrad-notes" ["e"=1]
"tenstorrent/tt-metal" -> "llvm/torch-mlir"
"wangsiping97/FastGEMV" -> "Bruce-Lee-LY/cuda_hgemv"
"wangsiping97/FastGEMV" -> "reed-lau/cute-gemm"
"Bruce-Lee-LY/cuda_hgemm" -> "KnowingNothing/MatmulTutorial"
"Bruce-Lee-LY/cuda_hgemm" -> "nicolaswilde/cuda-tensorcore-hgemm"
"Bruce-Lee-LY/cuda_hgemm" -> "Yinghan-Li/YHs_Sample"
"Bruce-Lee-LY/cuda_hgemm" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Bruce-Lee-LY/cuda_hgemm" -> "Cjkkkk/CUDA_gemm"
"Bruce-Lee-LY/cuda_hgemm" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"Bruce-Lee-LY/cuda_hgemm" -> "ColfaxResearch/cutlass-kernels"
"Bruce-Lee-LY/cuda_hgemm" -> "pranjalssh/fast.cu"
"Bruce-Lee-LY/cuda_hgemm" -> "66RING/tiny-flash-attention"
"Bruce-Lee-LY/cuda_hgemm" -> "wangzyon/NVIDIA_SGEMM_PRACTICE"
"Bruce-Lee-LY/cuda_hgemm" -> "DD-DuDa/Cute-Learning"
"Bruce-Lee-LY/cuda_hgemm" -> "microsoft/BitBLAS" ["e"=1]
"Bruce-Lee-LY/cuda_hgemm" -> "RRZE-HPC/gpu-benches"
"Bruce-Lee-LY/cuda_hgemm" -> "reed-lau/cute-gemm"
"Bruce-Lee-LY/cuda_hgemm" -> "Bruce-Lee-LY/flash_attention_inference"
"OpenPPL/ppl.llm.kernel.cuda" -> "OpenPPL/ppl.llm.serving"
"OpenPPL/ppl.llm.kernel.cuda" -> "OpenPPL/ppl.pmx"
"OpenPPL/ppl.llm.kernel.cuda" -> "openppl-public/ppl.nn.llm"
"OpenPPL/ppl.llm.kernel.cuda" -> "OpenPPL/CuAssembler"
"OpenPPL/ppl.llm.kernel.cuda" -> "OpenPPL/ppl.kernel.cuda"
"luchangli03/onnxsim_large_model" -> "luchangli03/export_llama_to_onnx"
"intel/xetla" -> "codeplaysoftware/cutlass-sycl"
"intel/intel-xpu-backend-for-triton" -> "intel/xetla"
"intel/intel-xpu-backend-for-triton" -> "libxsmm/tpp-mlir"
"intel/intel-xpu-backend-for-triton" -> "intel/torch-xpu-ops"
"intel/intel-xpu-backend-for-triton" -> "microsoft/triton-shared"
"intel/intel-xpu-backend-for-triton" -> "intel/mlir-extensions"
"intel/intel-xpu-backend-for-triton" -> "codeplaysoftware/cutlass-sycl"
"intel/intel-xpu-backend-for-triton" -> "intel/pti-gpu" ["e"=1]
"intel/intel-xpu-backend-for-triton" -> "pytorch-labs/triton-cpu"
"intel/intel-xpu-backend-for-triton" -> "triton-lang/triton-cpu"
"intel/intel-xpu-backend-for-triton" -> "oneapi-src/SYCLomatic" ["e"=1]
"dranger003/llama.cpp-dotnet" -> "hpretila/llama.net"
"FlagOpen/FlagScale" -> "FlagOpen/FlagCX"
"FlagOpen/FlagScale" -> "FlagAI-Open/OpenSeek"
"FlagOpen/FlagScale" -> "feifeibear/long-context-attention" ["e"=1]
"FlagOpen/FlagScale" -> "FlagOpen/FlagAttention"
"FlagOpen/FlagScale" -> "FlagAI-Open/Aquila2" ["e"=1]
"FlagOpen/FlagScale" -> "FlagOpen/FlagGems" ["e"=1]
"FlagOpen/FlagScale" -> "alibaba/ChatLearn" ["e"=1]
"ifromeast/cuda_learning" -> "DD-DuDa/Cute-Learning"
"ifromeast/cuda_learning" -> "66RING/tiny-flash-attention"
"ifromeast/cuda_learning" -> "Tongkaio/CUDA_Kernel_Samples"
"ifromeast/cuda_learning" -> "BBuf/how-to-optim-algorithm-in-cuda"
"ifromeast/cuda_learning" -> "AyakaGEMM/Hands-on-GEMM"
"ifromeast/cuda_learning" -> "pranjalssh/fast.cu"
"ifromeast/cuda_learning" -> "Bruce-Lee-LY/cuda_hgemm"
"ifromeast/cuda_learning" -> "XiaoSong9905/CUDA-Optimization-Guide"
"ifromeast/cuda_learning" -> "tspeterkim/flash-attention-minimal"
"ifromeast/cuda_learning" -> "Liu-xiandong/How_to_optimize_in_GPU"
"ifromeast/cuda_learning" -> "weishengying/cutlass_flash_atten_fp8"
"ifromeast/cuda_learning" -> "xlite-dev/HGEMM"
"ifromeast/cuda_learning" -> "wangzyon/NVIDIA_SGEMM_PRACTICE"
"ifromeast/cuda_learning" -> "luliyucoordinate/cute-flash-attention"
"ifromeast/cuda_learning" -> "Yinghan-Li/YHs_Sample"
"Bruce-Lee-LY/flash_attention_inference" -> "tlc-pack/libflash_attn"
"Bruce-Lee-LY/flash_attention_inference" -> "Bruce-Lee-LY/decoding_attention"
"Bruce-Lee-LY/flash_attention_inference" -> "weishengying/tiny-flash-attention"
"Bruce-Lee-LY/flash_attention_inference" -> "luliyucoordinate/cute-flash-attention"
"Bruce-Lee-LY/flash_attention_inference" -> "reed-lau/cute-gemm"
"Bruce-Lee-LY/flash_attention_inference" -> "DD-DuDa/Cute-Learning"
"ctuning/ck-math" -> "ctuning/ck-web"
"ctuning/ck-math" -> "ctuning/ck-docker"
"ctuning/ck-math" -> "ctuning/ck-crowdtuning"
"ctuning/ck-math" -> "ctuning/ck-crowdnode"
"ctuning/ck-tensorflow" -> "ctuning/ck-math"
"ctuning/ck-tensorflow" -> "ctuning/ck-web"
"ctuning/ck-tensorflow" -> "ctuning/ck-docker"
"ctuning/ck-tensorflow" -> "ctuning/ck-crowdtuning"
"ctuning/ck-tensorflow" -> "ctuning/ck-crowdnode"
"ctuning/ck-tensorflow" -> "ctuning/ck-env"
"ctuning/ck-tensorflow" -> "ctuning/ck-autotuning"
"ctuning/ck-tensorflow" -> "ctuning/ck-dissemination-modules"
"ctuning/ck-tensorflow" -> "ctuning/ck-analytics"
"ctuning/ck-tensorflow" -> "ctuning/ck-ext-far-manager-plugin"
"ctuning/ck-tensorflow" -> "ctuning/ck-web-adapt-workshop"
"ctuning/ck-tensorflow" -> "ctuning/ck-crowdtuning-platforms"
"ctuning/ck-tensorflow" -> "ctuning/ck-dev-compilers"
"ctuning/ck-tensorflow" -> "ctuning/ck-guide-images"
"ctuning/ck-tensorflow" -> "dividiti/gemmbench-adapt16"
"harrism/hemi" -> "harrism/cpp11-range"
"harrism/hemi" -> "eyalroz/cuda-api-wrappers"
"harrism/hemi" -> "NVIDIA-developer-blog/code-samples"
"harrism/hemi" -> "jaredhoberock/bulk"
"OpenPPL/ppl.pmx" -> "OpenPPL/ppl.llm.serving"
"OpenPPL/ppl.pmx" -> "OpenPPL/ppl.llm.kernel.cuda"
"OpenPPL/ppl.pmx" -> "openppl-public/ppl.nn.llm"
"OpenPPL/ppl.pmx" -> "OpenPPL/ppl.kernel.cuda"
"OpenPPL/ppl.llm.serving" -> "openppl-public/ppl.nn.llm"
"OpenPPL/ppl.llm.serving" -> "OpenPPL/ppl.pmx"
"OpenPPL/ppl.llm.serving" -> "OpenPPL/ppl.llm.kernel.cuda"
"OpenPPL/ppl.llm.serving" -> "OpenPPL/CuAssembler"
"OpenPPL/ppl.llm.serving" -> "OpenPPL/ppl.kernel.cuda"
"octoml/octoml-profile" -> "gsuuon/ad-llama"
"octoml/octoml-profile" -> "apache/tvm-rfcs"
"nod-ai/SHARK-ModelDev" -> "nod-ai/shark-ai"
"nod-ai/SHARK-ModelDev" -> "iree-org/iree-turbine"
"google/heir" -> "j2kun/mlir-tutorial" ["e"=1]
"NVIDIA/Fuser" -> "csarofeen/pytorch"
"NVIDIA/Fuser" -> "TiledTensor/TiledCUDA"
"NVIDIA/Fuser" -> "NVIDIA/nvidia-resiliency-ext" ["e"=1]
"NVIDIA/Fuser" -> "NVIDIA/jitify"
"NVIDIA/Fuser" -> "ColfaxResearch/cutlass-kernels"
"philipturner/metal-flash-attention" -> "pranjalssh/fast.cu" ["e"=1]
"InfiniTensor/RefactorGraph" -> "InfiniTensor/InfiniTensor"
"ZTMIDGO/Android-Stable-diffusion-ONNX" -> "Amblyopius/Stable-Diffusion-ONNX-FP16" ["e"=1]
"pytorch-labs/applied-ai" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"pytorch-labs/applied-ai" -> "ColfaxResearch/cutlass-kernels" ["e"=1]
"pytorch-labs/applied-ai" -> "pranjalssh/fast.cu" ["e"=1]
"chunhuajiang/arm-gcc-inline-assembler" -> "rogerou/Arm-neon-intrinsics"
"friendliai/friendli-client" -> "friendliai/periflow-cli"
"friendliai/friendli-client" -> "friendliai/friendli-model-optimizer"
"friendliai/friendli-client" -> "friendliai/periflow-python-sdk"
"friendliai/friendli-client" -> "friendliai/LLMServingPerfEvaluator"
"friendliai/friendli-client" -> "snuspl/pluto"
"luchangli03/export_llama_to_onnx" -> "luchangli03/onnxsim_large_model"
"luchangli03/export_llama_to_onnx" -> "wangzhaode/llm-export"
"luchangli03/export_llama_to_onnx" -> "tpoisonooo/llama.onnx"
"pku-liang/TileFlow" -> "pku-liang/MAGIS"
"Adlik/model_optimizer" -> "Adlik/model_optimizer_tf"
"Adlik/model_optimizer" -> "YanshiShield/YanshiShield"
"saddam213/LLamaStack" -> "AsakusaRinne/semantic-kernel-LLamaSharp"
"WeLoveAI/onnx2torch" -> "inisis/onion"
"tiny-dnn/tiny-dnn" -> "Maratyszcza/NNPACK" ["e"=1]
"tiny-dnn/tiny-dnn" -> "halide/Halide" ["e"=1]
"tiny-dnn/tiny-dnn" -> "google/gemmlowp" ["e"=1]
"adam-maj/tiny-gpu" -> "gpu-mode/lectures" ["e"=1]
"adam-maj/tiny-gpu" -> "xlite-dev/LeetCUDA" ["e"=1]
"hughperkins/tf-coriander" -> "plaidml/plaidml" ["e"=1]
"xtensor-stack/xtensor" -> "NVIDIA/thrust" ["e"=1]
"apache/tvm" -> "BBuf/tvm_mlir_learn" ["e"=1]
"apache/tvm" -> "halide/Halide" ["e"=1]
"apache/tvm" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"apache/tvm" -> "iree-org/iree" ["e"=1]
"apache/tvm" -> "pytorch/glow" ["e"=1]
"apache/tvm" -> "uxlfoundation/oneDNN" ["e"=1]
"patientx/ComfyUI-Zluda" -> "lshqqytiger/ZLUDA"
"patientx/ComfyUI-Zluda" -> "brknsoul/ROCmLibs"
"patientx/ComfyUI-Zluda" -> "lshqqytiger/stable-diffusion-webui-amdgpu-forge"
"patientx/ComfyUI-Zluda" -> "likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU"
"patientx/ComfyUI-Zluda" -> "YellowRoseCx/koboldcpp-rocm"
"patientx/ComfyUI-Zluda" -> "likelovewant/stable-diffusion-webui-forge-on-amd"
"patientx/ComfyUI-Zluda" -> "lshqqytiger/stable-diffusion-webui-amdgpu"
"patientx/ComfyUI-Zluda" -> "CS1o/Stable-Diffusion-Info"
"patientx/ComfyUI-Zluda" -> "Beinsezii/comfyui-amd-go-fast"
"tinygrad/open-gpu-kernel-modules" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"zeux/calm" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"zeux/calm" -> "reed-lau/cute-gemm" ["e"=1]
"reed-lau/cute-gemm" -> "66RING/tiny-flash-attention"
"reed-lau/cute-gemm" -> "CalebDu/Awesome-Cute"
"reed-lau/cute-gemm" -> "DD-DuDa/Cute-Learning"
"reed-lau/cute-gemm" -> "luliyucoordinate/cute-flash-attention"
"reed-lau/cute-gemm" -> "ColfaxResearch/cutlass-kernels"
"reed-lau/cute-gemm" -> "KnowingNothing/MatmulTutorial"
"reed-lau/cute-gemm" -> "Bruce-Lee-LY/flash_attention_inference"
"reed-lau/cute-gemm" -> "tlc-pack/libflash_attn"
"reed-lau/cute-gemm" -> "wangsiping97/FastGEMV"
"Lightning-AI/lightning-thunder" -> "NVIDIA/Fuser" ["e"=1]
"gpu-mode/lectures" -> "xlite-dev/LeetCUDA"
"gpu-mode/lectures" -> "BBuf/how-to-optim-algorithm-in-cuda"
"gpu-mode/lectures" -> "gpu-mode/resource-stream" ["e"=1]
"gpu-mode/lectures" -> "flashinfer-ai/flashinfer" ["e"=1]
"gpu-mode/lectures" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"gpu-mode/lectures" -> "NVIDIA/cutlass" ["e"=1]
"gpu-mode/lectures" -> "HazyResearch/ThunderKittens" ["e"=1]
"gpu-mode/lectures" -> "srush/Triton-Puzzles" ["e"=1]
"gpu-mode/lectures" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial"
"gpu-mode/lectures" -> "BBuf/tvm_mlir_learn"
"gpu-mode/lectures" -> "triton-lang/triton" ["e"=1]
"gpu-mode/lectures" -> "kvcache-ai/Mooncake" ["e"=1]
"gpu-mode/lectures" -> "ModelTC/lightllm" ["e"=1]
"gpu-mode/lectures" -> "gpu-mode/awesomeMLSys" ["e"=1]
"gpu-mode/lectures" -> "linkedin/Liger-Kernel" ["e"=1]
"tspeterkim/flash-attention-minimal" -> "66RING/tiny-flash-attention"
"tspeterkim/flash-attention-minimal" -> "wangzyon/NVIDIA_SGEMM_PRACTICE"
"tspeterkim/flash-attention-minimal" -> "pranjalssh/fast.cu"
"tspeterkim/flash-attention-minimal" -> "siboehm/SGEMM_CUDA"
"tspeterkim/flash-attention-minimal" -> "Liu-xiandong/How_to_optimize_in_GPU"
"tspeterkim/flash-attention-minimal" -> "ColfaxResearch/cutlass-kernels"
"tspeterkim/flash-attention-minimal" -> "KnowingNothing/MatmulTutorial"
"tspeterkim/flash-attention-minimal" -> "HazyResearch/ThunderKittens" ["e"=1]
"tspeterkim/flash-attention-minimal" -> "DD-DuDa/Cute-Learning"
"tspeterkim/flash-attention-minimal" -> "IST-DASLab/marlin" ["e"=1]
"tspeterkim/flash-attention-minimal" -> "tile-ai/tilelang" ["e"=1]
"tspeterkim/flash-attention-minimal" -> "flashinfer-ai/flashinfer" ["e"=1]
"tspeterkim/flash-attention-minimal" -> "luliyucoordinate/cute-flash-attention"
"tspeterkim/flash-attention-minimal" -> "BBuf/how-to-optim-algorithm-in-cuda"
"tspeterkim/flash-attention-minimal" -> "Bruce-Lee-LY/cuda_hgemm"
"openai/openai-gemm" -> "NervanaSystems/maxas"
"openai/openai-gemm" -> "Maratyszcza/NNPACK"
"openai/openai-gemm" -> "google/gemmlowp"
"openai/openai-gemm" -> "NervanaSystems/nervanagpu"
"openai/openai-gemm" -> "eBay/maxDNN"
"openai/openai-gemm" -> "baidu-research/DeepBench"
"openai/openai-gemm" -> "PAA-NCIC/PPoPP2017_artifact"
"openai/openai-gemm" -> "flame/blislab"
"openai/openai-gemm" -> "libxsmm/libxsmm"
"openai/openai-gemm" -> "baidu-research/persistent-rnn" ["e"=1]
"openai/openai-gemm" -> "daadaada/turingas"
"openai/openai-gemm" -> "IntelLabs/SkimCaffe" ["e"=1]
"openai/openai-gemm" -> "andravin/wincnn"
"openai/openai-gemm" -> "naibaf7/libdnn"
"lift-project/lift" -> "Meinersbur/ppcg"
"lift-project/lift" -> "rise-lang/shine"
"lift-project/lift" -> "elevate-lang/elevate"
"srush/Triton-Puzzles" -> "gpu-mode/lectures" ["e"=1]
"tenstorrent/tt-buda" -> "tenstorrent/tt-metal"
"tenstorrent/tt-buda" -> "tenstorrent/tt-buda-demos"
"tenstorrent/tt-buda" -> "tenstorrent/tt-mlir"
"tenstorrent/tt-buda" -> "tenstorrent/tt-kmd"
"tenstorrent/tt-buda" -> "tenstorrent/tt-budabackend"
"tenstorrent/tt-buda" -> "tenstorrent/tt-smi"
"tenstorrent/tt-buda" -> "tenstorrent/tt-tvm"
"tenstorrent/tt-buda" -> "tenstorrent/tt-forge-fe"
"tenstorrent/tt-buda" -> "tenstorrent/tt-flash"
"tenstorrent/tt-buda" -> "tenstorrent/pytorch2.0_ttnn"
"tenstorrent/tt-buda" -> "tenstorrent/luwen"
"tenstorrent/tt-buda" -> "tenstorrent/tt-firmware"
"likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU" -> "likelovewant/ollama-for-amd"
"likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU" -> "lshqqytiger/ZLUDA"
"likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU" -> "brknsoul/ROCmLibs"
"likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU" -> "patientx/ComfyUI-Zluda"
"likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU" -> "ByronLeeeee/Ollama-For-AMD-Installer"
"likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU" -> "likelovewant/stable-diffusion-webui-forge-on-amd"
"likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU" -> "YellowRoseCx/koboldcpp-rocm"
"likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU" -> "lshqqytiger/stable-diffusion-webui-amdgpu-forge"
"likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU" -> "lamikr/rocm_sdk_builder"
"HazyResearch/aisys-building-blocks" -> "tspeterkim/flash-attention-minimal" ["e"=1]
"HazyResearch/aisys-building-blocks" -> "siboehm/SGEMM_CUDA" ["e"=1]
"Tongkaio/CUDA_Kernel_Samples" -> "ifromeast/cuda_learning"
"Tongkaio/CUDA_Kernel_Samples" -> "PaddleJitLab/CUDATutorial"
"Tongkaio/CUDA_Kernel_Samples" -> "zjhellofss/KuiperLLama"
"Tongkaio/CUDA_Kernel_Samples" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Tongkaio/CUDA_Kernel_Samples" -> "BBuf/how-to-optim-algorithm-in-cuda"
"Tongkaio/CUDA_Kernel_Samples" -> "xlite-dev/LeetCUDA"
"Tongkaio/CUDA_Kernel_Samples" -> "DD-DuDa/Cute-Learning"
"Tongkaio/CUDA_Kernel_Samples" -> "Bruce-Lee-LY/cuda_hgemm"
"Tongkaio/CUDA_Kernel_Samples" -> "weishengying/cutlass_flash_atten_fp8"
"Tongkaio/CUDA_Kernel_Samples" -> "66RING/tiny-flash-attention"
"Tongkaio/CUDA_Kernel_Samples" -> "RussWong/CUDATutorial"
"Tongkaio/CUDA_Kernel_Samples" -> "BBuf/how-to-learn-deep-learning-framework"
"Tongkaio/CUDA_Kernel_Samples" -> "xlite-dev/HGEMM"
"Tongkaio/CUDA_Kernel_Samples" -> "MLSys-Learner-Resources/Awesome-MLSys-Blogger" ["e"=1]
"Tongkaio/CUDA_Kernel_Samples" -> "nndeploy/nndeploy" ["e"=1]
"Deep-Learning-Profiling-Tools/triton-viz" -> "microsoft/triton-shared" ["e"=1]
"volcengine/veScale" -> "bytedance/byteir" ["e"=1]
"FlagOpen/FlagGems" -> "FlagOpen/FlagAttention" ["e"=1]
"FlagOpen/FlagGems" -> "Cambricon/triton-linalg" ["e"=1]
"FlagOpen/FlagGems" -> "microsoft/triton-shared" ["e"=1]
"FlagOpen/FlagGems" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"FlagOpen/FlagGems" -> "KEKE046/mlir-tutorial" ["e"=1]
"FlagOpen/FlagGems" -> "FlagOpen/FlagPerf" ["e"=1]
"FlagOpen/FlagGems" -> "alibaba/BladeDISC" ["e"=1]
"mirage-project/mirage" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"mirage-project/mirage" -> "KnowingNothing/compiler-and-arch" ["e"=1]
"lamikr/rocm_sdk_builder" -> "Said-Akbar/vllm-rocm"
"lamikr/rocm_sdk_builder" -> "Said-Akbar/triton-gcn5"
"lamikr/rocm_sdk_builder" -> "ROCm/aiter" ["e"=1]
"lamikr/rocm_sdk_builder" -> "likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU"
"lshqqytiger/ZLUDA" -> "patientx/ComfyUI-Zluda"
"lshqqytiger/ZLUDA" -> "brknsoul/ROCmLibs"
"lshqqytiger/ZLUDA" -> "likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU"
"lshqqytiger/ZLUDA" -> "lshqqytiger/stable-diffusion-webui-amdgpu-forge"
"lshqqytiger/ZLUDA" -> "YellowRoseCx/koboldcpp-rocm"
"lshqqytiger/ZLUDA" -> "lshqqytiger/stable-diffusion-webui-amdgpu"
"lshqqytiger/ZLUDA" -> "likelovewant/stable-diffusion-webui-forge-on-amd"
"lshqqytiger/ZLUDA" -> "vosen/ZLUDA"
"lshqqytiger/ZLUDA" -> "CS1o/Stable-Diffusion-Info"
"lshqqytiger/ZLUDA" -> "Amblyopius/Stable-Diffusion-ONNX-FP16"
"lshqqytiger/ZLUDA" -> "Repeerc/flash-attention-v2-RDNA3-minimal"
"lshqqytiger/ZLUDA" -> "Beinsezii/comfyui-amd-go-fast"
"microsoft/BitBLAS" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"microsoft/BitBLAS" -> "TiledTensor/TiledCUDA" ["e"=1]
"microsoft/BitBLAS" -> "KnowingNothing/compiler-and-arch" ["e"=1]
"microsoft/BitBLAS" -> "ColfaxResearch/cutlass-kernels" ["e"=1]
"HazyResearch/ThunderKittens" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"HazyResearch/ThunderKittens" -> "gpu-mode/lectures" ["e"=1]
"likelovewant/ollama-for-amd" -> "likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU"
"likelovewant/ollama-for-amd" -> "ByronLeeeee/Ollama-For-AMD-Installer"
"likelovewant/ollama-for-amd" -> "YellowRoseCx/koboldcpp-rocm"
"likelovewant/ollama-for-amd" -> "brknsoul/ROCmLibs"
"likelovewant/ollama-for-amd" -> "lshqqytiger/ZLUDA"
"likelovewant/ollama-for-amd" -> "lshqqytiger/stable-diffusion-webui-amdgpu"
"fla-org/flash-linear-attention" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"fla-org/flash-linear-attention" -> "xlite-dev/LeetCUDA" ["e"=1]
"hahnyuan/LLM-Viewer" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"IST-DASLab/marlin" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"eyalroz/cuda-api-wrappers" -> "NVIDIA/jitify"
"eyalroz/cuda-api-wrappers" -> "stotko/stdgpu"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/cub"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/MatX"
"eyalroz/cuda-api-wrappers" -> "eyalroz/cuda-kat"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/libcudacxx"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/nvbench"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/cuCollections"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/multi-gpu-programming-models"
"eyalroz/cuda-api-wrappers" -> "harrism/hemi"
"eyalroz/cuda-api-wrappers" -> "rapidsai/rmm"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/thrust"
"eyalroz/cuda-api-wrappers" -> "AdaptiveCpp/AdaptiveCpp" ["e"=1]
"eyalroz/cuda-api-wrappers" -> "NVIDIA/cccl"
"eyalroz/cuda-api-wrappers" -> "moderngpu/moderngpu"
"dyweb/papers-notebook" -> "HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["e"=1]
"dmlc/HalideIR" -> "inducer/loopy"
"dmlc/HalideIR" -> "inducer/islpy"
"dmlc/HalideIR" -> "andersy005/tvm-in-action"
"dmlc/HalideIR" -> "tlc-pack/relax"
"dmlc/HalideIR" -> "StrongSpoon/tvm.schedule"
"bytedance/flux" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"microsoft/vattention" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"lucidrains/ring-attention-pytorch" -> "ColfaxResearch/cutlass-kernels" ["e"=1]
"intel/ARM_NEON_2_x86_SSE" -> "jratcliff63367/sse2neon"
"intel/ARM_NEON_2_x86_SSE" -> "projectNe10/Ne10"
"intel/ARM_NEON_2_x86_SSE" -> "DLTcollab/sse2neon" ["e"=1]
"intel/ARM_NEON_2_x86_SSE" -> "thenifty/neon-guide"
"intel/ARM_NEON_2_x86_SSE" -> "rogerou/Arm-neon-intrinsics"
"intel/ARM_NEON_2_x86_SSE" -> "andrepuschmann/math-neon"
"intel/ARM_NEON_2_x86_SSE" -> "ermig1979/Simd" ["e"=1]
"intel/ARM_NEON_2_x86_SSE" -> "Ldpe2G/ArmNeonOptimization"
"intel/ARM_NEON_2_x86_SSE" -> "christophe-lyon/arm-neon-tests"
"intel/ARM_NEON_2_x86_SSE" -> "intel/Immintrin-debug"
"intel/ARM_NEON_2_x86_SSE" -> "ARM-software/ComputeLibrary"
"intel/ARM_NEON_2_x86_SSE" -> "simd-everywhere/simde" ["e"=1]
"intel/ARM_NEON_2_x86_SSE" -> "ARM-software/optimized-routines"
"intel/ARM_NEON_2_x86_SSE" -> "flame/blislab"
"intel/ARM_NEON_2_x86_SSE" -> "tpoisonooo/how-to-optimize-gemm"
"leimao/TensorRT-Custom-Plugin-Example" -> "Bruce-Lee-LY/decoding_attention"
"leimao/TensorRT-Custom-Plugin-Example" -> "wangzyon/trt_learn"
"KEKE046/mlir-tutorial" -> "j2kun/mlir-tutorial"
"KEKE046/mlir-tutorial" -> "buddy-compiler/buddy-mlir"
"KEKE046/mlir-tutorial" -> "BBuf/tvm_mlir_learn"
"KEKE046/mlir-tutorial" -> "sophgo/tpu-mlir"
"KEKE046/mlir-tutorial" -> "microsoft/triton-shared"
"KEKE046/mlir-tutorial" -> "FlagOpen/FlagGems" ["e"=1]
"KEKE046/mlir-tutorial" -> "llvm/Polygeist"
"KEKE046/mlir-tutorial" -> "KnowingNothing/compiler-and-arch"
"KEKE046/mlir-tutorial" -> "onnx/onnx-mlir"
"KEKE046/mlir-tutorial" -> "bytedance/byteir"
"KEKE046/mlir-tutorial" -> "Lewuathe/mlir-hello"
"KEKE046/mlir-tutorial" -> "llvm/torch-mlir"
"KEKE046/mlir-tutorial" -> "BBuf/how-to-learn-deep-learning-framework"
"KEKE046/mlir-tutorial" -> "MegEngine/MegCC"
"KEKE046/mlir-tutorial" -> "Cambricon/triton-linalg"
"gpu-mode/resource-stream" -> "gpu-mode/lectures" ["e"=1]
"gpu-mode/resource-stream" -> "siboehm/SGEMM_CUDA" ["e"=1]
"gpu-mode/resource-stream" -> "BBuf/how-to-optim-algorithm-in-cuda" ["e"=1]
"gpu-mode/resource-stream" -> "xlite-dev/LeetCUDA" ["e"=1]
"gpu-mode/resource-stream" -> "olcf/cuda-training-series" ["e"=1]
"FlagOpen/FlagAttention" -> "FlagOpen/FlagGems" ["e"=1]
"FlagOpen/FlagAttention" -> "zinccat/Awesome-Triton-Kernels" ["e"=1]
"FlagOpen/FlagAttention" -> "DD-DuDa/Cute-Learning"
"FlagOpen/FlagAttention" -> "TiledTensor/TiledCUDA"
"FlagOpen/FlagAttention" -> "FlagOpen/FlagPerf"
"FlagOpen/FlagAttention" -> "BobMcDear/attorch" ["e"=1]
"FlagOpen/FlagAttention" -> "66RING/tiny-flash-attention"
"FlagOpen/FlagAttention" -> "amirzandieh/HyperAttention" ["e"=1]
"FlagOpen/FlagAttention" -> "ColfaxResearch/cutlass-kernels"
"FlagOpen/FlagAttention" -> "srush/triton-autodiff" ["e"=1]
"FlagOpen/FlagAttention" -> "FlagOpen/FlagScale"
"FlagOpen/FlagAttention" -> "KnowingNothing/MatmulTutorial"
"rapidsai/cuvs" -> "rapidsai/rmm" ["e"=1]
"bondhugula/pluto" -> "Meinersbur/ppcg"
"bondhugula/pluto" -> "kumasento/polymer"
"bondhugula/pluto" -> "periscop/cloog"
"bondhugula/pluto" -> "Meinersbur/pet"
"bondhugula/pluto" -> "llvm/Polygeist"
"bondhugula/pluto" -> "inducer/islpy"
"bondhugula/pluto" -> "pku-liang/FlexTensor"
"bondhugula/pluto" -> "Meinersbur/isl"
"bondhugula/pluto" -> "UCLA-VAST/AutoSA" ["e"=1]
"bondhugula/pluto" -> "ftynse/clint"
"bondhugula/pluto" -> "microsoft/nnfusion"
"bondhugula/pluto" -> "tensorflow/mlir-hlo"
"bondhugula/pluto" -> "quepas/Compiler-benchmark-suites"
"bondhugula/pluto" -> "davewathaverford/the-omega-project"
"bondhugula/pluto" -> "Tiramisu-Compiler/tiramisu"
"microsoft/onnxruntime-genai" -> "microsoft/Llama-2-Onnx" ["e"=1]
"leimao/CUDA-GEMM-Optimization" -> "ColfaxResearch/cutlass-kernels"
"leimao/CUDA-GEMM-Optimization" -> "siboehm/SGEMM_CUDA"
"leimao/CUDA-GEMM-Optimization" -> "wangzyon/NVIDIA_SGEMM_PRACTICE"
"leimao/CUDA-GEMM-Optimization" -> "pranjalssh/fast.cu"
"leimao/CUDA-GEMM-Optimization" -> "KnowingNothing/MatmulTutorial"
"leimao/CUDA-GEMM-Optimization" -> "Cjkkkk/CUDA_gemm"
"leimao/CUDA-GEMM-Optimization" -> "TiledTensor/TiledCUDA"
"leimao/CUDA-GEMM-Optimization" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"google-ai-edge/model-explorer" -> "openxla/stablehlo" ["e"=1]
"google-ai-edge/model-explorer" -> "xdslproject/xdsl" ["e"=1]
"google-ai-edge/model-explorer" -> "openxla/shardy" ["e"=1]
"gpu-mode/awesomeMLSys" -> "gpu-mode/lectures" ["e"=1]
"gpu-mode/awesomeMLSys" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"gpu-mode/awesomeMLSys" -> "siboehm/SGEMM_CUDA" ["e"=1]
"ornladios/ADIOS2" -> "LBANN/lbann" ["e"=1]
"intel/intel-npu-acceleration-library" -> "intel/intel-xpu-backend-for-triton" ["e"=1]
"intel/intel-npu-acceleration-library" -> "intel/xetla" ["e"=1]
"intel/intel-npu-acceleration-library" -> "spcl/pymlir" ["e"=1]
"hahnyuan/nn_tools" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"triton-lang/triton-cpu" -> "pytorch-labs/triton-cpu"
"digitalbrain79/darknet-nnpack" -> "Maratyszcza/NNPACK" ["e"=1]
"zjhellofss/KuiperLLama" -> "zjhellofss/KuiperInfer"
"zjhellofss/KuiperLLama" -> "zjhellofss/kuiperdatawhale"
"zjhellofss/KuiperLLama" -> "RussWong/CUDATutorial"
"zjhellofss/KuiperLLama" -> "harleyszhang/lite_llama"
"zjhellofss/KuiperLLama" -> "nndeploy/nndeploy" ["e"=1]
"zjhellofss/KuiperLLama" -> "Tongkaio/CUDA_Kernel_Samples"
"zjhellofss/KuiperLLama" -> "Liu-xiandong/How_to_optimize_in_GPU"
"zjhellofss/KuiperLLama" -> "caiwanxianhust/FasterLLaMA"
"zjhellofss/KuiperLLama" -> "BBuf/how-to-optim-algorithm-in-cuda"
"zjhellofss/KuiperLLama" -> "xlite-dev/LeetCUDA"
"zjhellofss/KuiperLLama" -> "tspeterkim/flash-attention-minimal"
"zjhellofss/KuiperLLama" -> "BBuf/how-to-learn-deep-learning-framework"
"zjhellofss/KuiperLLama" -> "66RING/tiny-flash-attention"
"zjhellofss/KuiperLLama" -> "ifromeast/cuda_learning"
"zjhellofss/KuiperLLama" -> "916241958/yolov8-Onnxruntime"
"snuspl/nemo" -> "snuspl/pluto"
"snuspl/nemo" -> "snuspl/cruise"
"tensorflow/benchmarks" -> "mlcommons/training" ["e"=1]
"tensorflow/benchmarks" -> "baidu-research/DeepBench" ["e"=1]
"tensorflow/benchmarks" -> "LambdaColdStorage/lambda-tensorflow-benchmark" ["e"=1]
"brknsoul/ROCmLibs" -> "patientx/ComfyUI-Zluda"
"brknsoul/ROCmLibs" -> "lshqqytiger/ZLUDA"
"brknsoul/ROCmLibs" -> "likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU"
"brknsoul/ROCmLibs" -> "YellowRoseCx/koboldcpp-rocm"
"brknsoul/ROCmLibs" -> "lshqqytiger/stable-diffusion-webui-amdgpu-forge"
"sophgo/LLM-TPU" -> "sophgo/tpu-mlir" ["e"=1]
"alibaba/rtp-llm" -> "bytedance/ByteTransformer" ["e"=1]
"alibaba/rtp-llm" -> "alibaba/BladeDISC" ["e"=1]
"intel/neural-speed" -> "intel/intel-xpu-backend-for-triton" ["e"=1]
"datawhalechina/awesome-compression" -> "harleyszhang/dl_note" ["e"=1]
"usyd-fsalab/fp6_llm" -> "ColfaxResearch/cfx-article-src" ["e"=1]
"ColfaxResearch/cutlass-kernels" -> "ColfaxResearch/cfx-article-src"
"ColfaxResearch/cutlass-kernels" -> "KnowingNothing/MatmulTutorial"
"ColfaxResearch/cutlass-kernels" -> "reed-lau/cute-gemm"
"ColfaxResearch/cutlass-kernels" -> "TiledTensor/TiledCUDA"
"ColfaxResearch/cutlass-kernels" -> "66RING/tiny-flash-attention"
"ColfaxResearch/cutlass-kernels" -> "DD-DuDa/Cute-Learning"
"ColfaxResearch/cutlass-kernels" -> "pranjalssh/fast.cu"
"ColfaxResearch/cutlass-kernels" -> "leimao/CUDA-GEMM-Optimization"
"ColfaxResearch/cutlass-kernels" -> "Bruce-Lee-LY/cuda_hgemm"
"ColfaxResearch/cutlass-kernels" -> "CalebDu/Awesome-Cute"
"ColfaxResearch/cutlass-kernels" -> "ppl-ai/pplx-kernels" ["e"=1]
"ColfaxResearch/cutlass-kernels" -> "tgale96/grouped_gemm"
"ColfaxResearch/cutlass-kernels" -> "weishengying/cutlass_flash_atten_fp8"
"ColfaxResearch/cutlass-kernels" -> "microsoft/mscclpp" ["e"=1]
"ColfaxResearch/cutlass-kernels" -> "xlite-dev/HGEMM"
"intel/auto-round" -> "intel/intel-xpu-backend-for-triton" ["e"=1]
"mit-han-lab/patch_conv" -> "xdit-project/DistVAE"
"intel/graph-compiler" -> "intel/mlir-extensions"
"PAA-NCIC/PPoPP2017_artifact" -> "hyqneuron/asfermi"
"PAA-NCIC/PPoPP2017_artifact" -> "daadaada/turingas"
"PAA-NCIC/PPoPP2017_artifact" -> "xiuxiazhang/KeplerAs"
"PAA-NCIC/PPoPP2017_artifact" -> "codyjrivera/tsm2x-imp"
"PAA-NCIC/PPoPP2017_artifact" -> "gpgpu-sim/cutlass-gpgpu-sim"
"66RING/tiny-flash-attention" -> "reed-lau/cute-gemm"
"66RING/tiny-flash-attention" -> "DD-DuDa/Cute-Learning"
"66RING/tiny-flash-attention" -> "ColfaxResearch/cutlass-kernels"
"66RING/tiny-flash-attention" -> "KnowingNothing/MatmulTutorial"
"66RING/tiny-flash-attention" -> "tspeterkim/flash-attention-minimal"
"66RING/tiny-flash-attention" -> "luliyucoordinate/cute-flash-attention"
"66RING/tiny-flash-attention" -> "ColfaxResearch/cfx-article-src"
"66RING/tiny-flash-attention" -> "Bruce-Lee-LY/cuda_hgemm"
"66RING/tiny-flash-attention" -> "weishengying/cutlass_flash_atten_fp8"
"66RING/tiny-flash-attention" -> "xlite-dev/HGEMM"
"66RING/tiny-flash-attention" -> "weishengying/tiny-flash-attention"
"66RING/tiny-flash-attention" -> "pranjalssh/fast.cu"
"66RING/tiny-flash-attention" -> "ifromeast/cuda_learning"
"66RING/tiny-flash-attention" -> "Cjkkkk/CUDA_gemm"
"66RING/tiny-flash-attention" -> "TiledTensor/TiledCUDA"
"tud-zih-energy/lo2s" -> "metricq/metricq-python"
"tud-zih-energy/lo2s" -> "metricq/metricq"
"tud-zih-energy/lo2s" -> "tud-zih-energy/x86_adapt"
"tud-zih-energy/lo2s" -> "tud-zih-energy/x86_energy"
"TiledTensor/TiledCUDA" -> "microsoft/TileFusion"
"TiledTensor/TiledCUDA" -> "xlite-dev/HGEMM"
"TiledTensor/TiledCUDA" -> "DD-DuDa/Cute-Learning"
"TiledTensor/TiledCUDA" -> "ColfaxResearch/cutlass-kernels"
"TiledTensor/TiledCUDA" -> "KnowingNothing/MatmulTutorial"
"TiledTensor/TiledCUDA" -> "TiledTensor/TiledLower"
"TiledTensor/TiledCUDA" -> "TiledTensor/TiledKernel"
"TiledTensor/TiledCUDA" -> "ColfaxResearch/cfx-article-src"
"TiledTensor/TiledCUDA" -> "microsoft/BitBLAS" ["e"=1]
"TiledTensor/TiledCUDA" -> "c3sr/tcu_scope"
"TiledTensor/TiledCUDA" -> "LeiWang1999/tvm_gpu_gemm"
"HazyResearch/flash-fft-conv" -> "ColfaxResearch/cutlass-kernels" ["e"=1]
"InfiniTensor/InfiniLM" -> "InfiniTensor/ninetoothed"
"InfiniTensor/InfiniLM" -> "InfiniTensor/operators"
"InfiniTensor/InfiniLM" -> "InfiniTensor/InfiniTensor"
"InfiniTensor/InfiniLM" -> "InfiniTensor/RefactorGraph"
"InfiniTensor/InfiniLM" -> "YdrMaster/operators-rs"
"InfiniTensor/InfiniLM" -> "LearningInfiniTensor/TinyInfiniTensor"
"InfiniTensor/InfiniLM" -> "LearningInfiniTensor/learning-lm-rs"
"InfiniTensor/InfiniLM" -> "YdrMaster/llama2.rs"
"InfiniTensor/InfiniLM" -> "LearningInfiniTensor/learning-cxx"
"gpu-mode/triton-index" -> "66RING/tiny-flash-attention" ["e"=1]
"gpu-mode/triton-index" -> "DD-DuDa/Cute-Learning" ["e"=1]
"tenstorrent/tt-kmd" -> "tenstorrent/tt-smi"
"tenstorrent/tt-kmd" -> "tenstorrent/tt-firmware"
"tenstorrent/tt-kmd" -> "tenstorrent/tt-flash"
"tenstorrent/luwen" -> "tenstorrent/tt-firmware"
"tenstorrent/tt-smi" -> "tenstorrent/tt-kmd"
"tenstorrent/tt-smi" -> "tenstorrent/tt-flash"
"tenstorrent/tt-smi" -> "tenstorrent/tt-firmware"
"NVIDIA/nvmath-python" -> "NVIDIA/numbast"
"NVIDIA/nvmath-python" -> "NVIDIA/numba-cuda"
"NVIDIA/nvmath-python" -> "NVIDIA/accelerated-computing-hub"
"tenstorrent/tt-buda-demos" -> "tenstorrent/tt-firmware"
"tenstorrent/tt-buda-demos" -> "tenstorrent/tt-tvm"
"tenstorrent/tt-buda-demos" -> "tenstorrent/tt-buda-benchmarks"
"tenstorrent/tt-buda-demos" -> "tenstorrent/tt-kmd"
"tenstorrent/tt-buda-demos" -> "tenstorrent/tt-smi"
"Beinsezii/comfyui-amd-go-fast" -> "Repeerc/flash-attention-v2-RDNA3-minimal"
"iree-org/iree-turbine" -> "nod-ai/shark-ai"
"iree-org/iree-turbine" -> "nod-ai/SHARK-ModelDev"
"lshqqytiger/stable-diffusion-webui-amdgpu-forge" -> "likelovewant/stable-diffusion-webui-forge-on-amd"
"lshqqytiger/stable-diffusion-webui-amdgpu-forge" -> "patientx/ComfyUI-Zluda"
"lshqqytiger/stable-diffusion-webui-amdgpu-forge" -> "lshqqytiger/ZLUDA"
"lshqqytiger/stable-diffusion-webui-amdgpu-forge" -> "lshqqytiger/OneTrainer"
"DD-DuDa/Cute-Learning" -> "reed-lau/cute-gemm"
"DD-DuDa/Cute-Learning" -> "KnowingNothing/MatmulTutorial"
"DD-DuDa/Cute-Learning" -> "66RING/tiny-flash-attention"
"DD-DuDa/Cute-Learning" -> "TiledTensor/TiledCUDA"
"DD-DuDa/Cute-Learning" -> "luliyucoordinate/cute-flash-attention"
"DD-DuDa/Cute-Learning" -> "ColfaxResearch/cutlass-kernels"
"DD-DuDa/Cute-Learning" -> "xlite-dev/HGEMM"
"DD-DuDa/Cute-Learning" -> "CalebDu/Awesome-Cute"
"DD-DuDa/Cute-Learning" -> "pranjalssh/fast.cu"
"DD-DuDa/Cute-Learning" -> "Bruce-Lee-LY/flash_attention_inference"
"DD-DuDa/Cute-Learning" -> "ColfaxResearch/cfx-article-src"
"DD-DuDa/Cute-Learning" -> "InternLM/turbomind"
"DD-DuDa/Cute-Learning" -> "weishengying/cutlass_flash_atten_fp8"
"DD-DuDa/Cute-Learning" -> "zeroine/cutlass-cute-sample"
"fanshiqing/grouped_gemm" -> "tgale96/grouped_gemm"
"shawntan/scattermoe" -> "tgale96/grouped_gemm" ["e"=1]
"ColfaxResearch/cfx-article-src" -> "ColfaxResearch/cutlass-kernels"
"ColfaxResearch/cfx-article-src" -> "xlite-dev/HGEMM"
"ColfaxResearch/cfx-article-src" -> "CalebDu/Awesome-Cute"
"ColfaxResearch/cfx-article-src" -> "TiledTensor/TiledCUDA"
"ColfaxResearch/cfx-article-src" -> "DD-DuDa/Cute-Learning"
"tenstorrent/tt-flash" -> "tenstorrent/tt-smi"
"tenstorrent/tt-flash" -> "tenstorrent/tt-firmware"
"tenstorrent/tt-flash" -> "tenstorrent/luwen"
"tenstorrent/tt-budabackend" -> "tenstorrent/tt-tvm"
"tenstorrent/tt-studio" -> "tenstorrent/tt-inference-server"
"likelovewant/stable-diffusion-webui-forge-on-amd" -> "lshqqytiger/stable-diffusion-webui-amdgpu-forge"
"TiledTensor/TiledLower" -> "SohamGovande/ThunderKittens-FA3CustomMasks"
"TiledTensor/TiledLower" -> "TiledTensor/TiledKernel"
"nox-410/tvm.tl" -> "Yongqi-Zhuo/triton-tvm"
"nox-410/tvm.tl" -> "gsuuon/ad-llama"
"nox-410/tvm.tl" -> "nox-410/Welder"
"zhaiyi000/tlm" -> "uiuc-arc/felix"
"zhaiyi000/tlm" -> "zhaiyi000/tlp"
"tenstorrent/tt-tvm" -> "tenstorrent/tt-budabackend"
"tenstorrent/tt-tvm" -> "tenstorrent/tt-firmware"
"TiledTensor/TiledKernel" -> "TiledTensor/TiledLower"
"DT42/BerryNet" -> "microsoft/ELL" ["e"=1]
"ZJU-LLMs/Foundations-of-LLMs" -> "chenzomi12/AISystem" ["e"=1]
"inisis/OnnxLLM" -> "inisis/onion"
"inisis/OnnxLLM" -> "inisis/caffe2onnx"
"inisis/OnnxLLM" -> "inisis/chexpert"
"inisis/OnnxLLM" -> "WeLoveAI/onnx2torch"
"Infatoshi/cuda-course" -> "CoffeeBeforeArch/cuda_programming" ["e"=1]
"Infatoshi/cuda-course" -> "gpu-mode/lectures" ["e"=1]
"Infatoshi/cuda-course" -> "siboehm/SGEMM_CUDA" ["e"=1]
"Infatoshi/cuda-course" -> "wangzyon/NVIDIA_SGEMM_PRACTICE" ["e"=1]
"Infatoshi/cuda-course" -> "xlite-dev/LeetCUDA" ["e"=1]
"linkedin/Liger-Kernel" -> "gpu-mode/lectures" ["e"=1]
"NVIDIA/cub" -> "NVIDIA/thrust"
"NVIDIA/cub" -> "NVIDIA/libcudacxx"
"NVIDIA/cub" -> "NVIDIA/cccl"
"NVIDIA/cub" -> "NVIDIA/cuCollections"
"NVIDIA/cub" -> "moderngpu/moderngpu"
"NVIDIA/cub" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/cub" -> "NVIDIA/nvbench"
"NVIDIA/cub" -> "NervanaSystems/maxas"
"NVIDIA/cub" -> "NVIDIA/jitify"
"NVIDIA/cub" -> "NVIDIA/cutlass" ["e"=1]
"NVIDIA/cub" -> "NVIDIA-developer-blog/code-samples"
"NVIDIA/cub" -> "cudpp/cudpp"
"NVIDIA/cub" -> "NVIDIA/nccl" ["e"=1]
"NVIDIA/cub" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/cub" -> "gunrock/gunrock" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "flashinfer-ai/flashinfer" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "xlite-dev/LeetCUDA"
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "kvcache-ai/Mooncake" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "volcengine/verl" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "sgl-project/sgl-learning-materials" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "BBuf/how-to-optim-algorithm-in-cuda"
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "sgl-project/sglang" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "OpenRLHF/OpenRLHF" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "tile-ai/tilelang" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "gpu-mode/lectures"
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "ModelTC/lightllm" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "inclusionAI/AReaL" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "Open-Reasoner-Zero/Open-Reasoner-Zero" ["e"=1]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" -> "AmberLJC/LLMSys-PaperList" ["e"=1]
"pytorch/cpuinfo" -> "Maratyszcza/pthreadpool"
"pytorch/cpuinfo" -> "google/ruy"
"pytorch/cpuinfo" -> "google/cpu_features" ["e"=1]
"pytorch/cpuinfo" -> "pytorch/QNNPACK"
"pytorch/cpuinfo" -> "pigirons/cpufp"
"pytorch/cpuinfo" -> "Maratyszcza/NNPACK"
"pytorch/cpuinfo" -> "pytorch/FBGEMM"
"pytorch/cpuinfo" -> "libxsmm/libxsmm"
"pytorch/cpuinfo" -> "google/gemmlowp"
"pytorch/cpuinfo" -> "intel/ARM_NEON_2_x86_SSE"
"pytorch/cpuinfo" -> "flame/blislab"
"pytorch/cpuinfo" -> "gulrak/filesystem" ["e"=1]
"pytorch/cpuinfo" -> "ARM-software/ComputeLibrary"
"pytorch/cpuinfo" -> "flame/how-to-optimize-gemm"
"pytorch/cpuinfo" -> "projectNe10/Ne10"
"kvcache-ai/Mooncake" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"kvcache-ai/Mooncake" -> "xlite-dev/LeetCUDA" ["e"=1]
"kvcache-ai/Mooncake" -> "BBuf/how-to-optim-algorithm-in-cuda" ["e"=1]
"FFTW/fftw3" -> "OpenMathLib/OpenBLAS" ["e"=1]
"FFTW/fftw3" -> "projectNe10/Ne10" ["e"=1]
"Steven-Luo/MasteringRAG" -> "harleyszhang/llm_note" ["e"=1]
"ARM-software/ComputeLibrary" -> "ARM-software/armnn"
"ARM-software/ComputeLibrary" -> "projectNe10/Ne10"
"ARM-software/ComputeLibrary" -> "google/gemmlowp"
"ARM-software/ComputeLibrary" -> "OAID/Caffe-HRT" ["e"=1]
"ARM-software/ComputeLibrary" -> "pytorch/QNNPACK"
"ARM-software/ComputeLibrary" -> "XiaoMi/mace"
"ARM-software/ComputeLibrary" -> "Maratyszcza/NNPACK"
"ARM-software/ComputeLibrary" -> "uxlfoundation/oneDNN"
"ARM-software/ComputeLibrary" -> "apache/tvm" ["e"=1]
"ARM-software/ComputeLibrary" -> "halide/Halide"
"ARM-software/ComputeLibrary" -> "Tencent/FeatherCNN"
"ARM-software/ComputeLibrary" -> "OAID/Tengine" ["e"=1]
"ARM-software/ComputeLibrary" -> "flame/how-to-optimize-gemm"
"ARM-software/ComputeLibrary" -> "ermig1979/Simd" ["e"=1]
"ARM-software/ComputeLibrary" -> "alibaba/MNN" ["e"=1]
"andrewkchan/yalm" -> "66RING/tiny-flash-attention" ["e"=1]
"AIGeniusInstitute/AI-Agent-In-Action" -> "harleyszhang/llm_note" ["e"=1]
"dblalock/bolt" -> "google/gemmlowp" ["e"=1]
"ByronLeeeee/Ollama-For-AMD-Installer" -> "likelovewant/ollama-for-amd"
"ByronLeeeee/Ollama-For-AMD-Installer" -> "likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU"
"ContinuumIO/gtc2017-numba" -> "harrism/numba_examples"
"ContinuumIO/gtc2017-numba" -> "ContinuumIO/gtc2019-numba"
"ContinuumIO/gtc2017-numba" -> "ContinuumIO/gtc2018-numba"
"ContinuumIO/gtc2017-numba" -> "ContinuumIO/gtc2020-numba"
"ContinuumIO/gtc2017-numba" -> "numba/numba-examples"
"ContinuumIO/gtc2017-numba" -> "NVIDIA/cuda-python"
"ContinuumIO/gtc2017-numba" -> "numba/nvidia-cuda-tutorial"
"sgl-project/sgl-learning-materials" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"sgl-project/sgl-learning-materials" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"chenzomi12/AIInfra" -> "chenzomi12/AISystem"
"chenzomi12/AIInfra" -> "xlite-dev/LeetCUDA"
"chenzomi12/AIInfra" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial"
"chenzomi12/AIInfra" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"chenzomi12/AIInfra" -> "kvcache-ai/Mooncake" ["e"=1]
"chenzomi12/AIInfra" -> "BBuf/how-to-optim-algorithm-in-cuda"
"chenzomi12/AIInfra" -> "microsoft/AI-System"
"chenzomi12/AIInfra" -> "gpu-mode/lectures"
"chenzomi12/AIInfra" -> "openmlsys/openmlsys-zh"
"chenzomi12/AIInfra" -> "wdndev/llm_interview_note" ["e"=1]
"chenzomi12/AIInfra" -> "flashinfer-ai/flashinfer" ["e"=1]
"chenzomi12/AIInfra" -> "liguodongiot/llm-action" ["e"=1]
"chenzomi12/AIInfra" -> "deepseek-ai/DeepEP" ["e"=1]
"chenzomi12/AIInfra" -> "ai-dynamo/dynamo" ["e"=1]
"chenzomi12/AIInfra" -> "zjhellofss/KuiperInfer"
"wdndev/llama3-from-scratch-zh" -> "harleyszhang/llm_note" ["e"=1]
"harleyszhang/llm_note" -> "harleyszhang/dl_note"
"harleyszhang/llm_note" -> "harleyszhang/lite_llama"
"harleyszhang/llm_note" -> "xlite-dev/LeetCUDA"
"harleyszhang/llm_note" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial"
"harleyszhang/llm_note" -> "BBuf/how-to-optim-algorithm-in-cuda"
"harleyszhang/llm_note" -> "Steven-Luo/MasteringRAG" ["e"=1]
"harleyszhang/llm_note" -> "Tongkaio/CUDA_Kernel_Samples"
"harleyszhang/llm_note" -> "PaddleJitLab/CUDATutorial"
"harleyszhang/llm_note" -> "zjhellofss/KuiperLLama"
"harleyszhang/llm_note" -> "SiriusNEO/Triton-Puzzles-Lite" ["e"=1]
"harleyszhang/llm_note" -> "xlite-dev/Awesome-LLM-Inference" ["e"=1]
"harleyszhang/llm_note" -> "wdndev/llm_interview_note" ["e"=1]
"harleyszhang/llm_note" -> "zjhellofss/KuiperInfer"
"harleyszhang/llm_note" -> "AIGeniusInstitute/AI-Agent-In-Action" ["e"=1]
"harleyszhang/llm_note" -> "wdndev/tiny-llm-zh" ["e"=1]
"AnswerDotAI/gpu.cpp" -> "gpu-mode/lectures" ["e"=1]
"pytorch/gloo" -> "facebookresearch/TensorComprehensions" ["e"=1]
"pytorch/gloo" -> "Maratyszcza/NNPACK" ["e"=1]
"mikex86/LibreCuda" -> "NVIDIA/cccl" ["e"=1]
"mikex86/LibreCuda" -> "kuterd/nv_isa_solver" ["e"=1]
"Infatoshi/mnist-cuda" -> "siboehm/SGEMM_CUDA" ["e"=1]
"tile-ai/tilelang" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"tile-ai/tilelang" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"bbruceyuan/Hands-On-Large-Language-Models-CN" -> "chenzomi12/AIInfra" ["e"=1]
"dmlc/dlpack" -> "microsoft/nnfusion"
"dmlc/dlpack" -> "d2l-ai/d2l-tvm"
"dmlc/dlpack" -> "tqchen/ffi-navigator"
"dmlc/dlpack" -> "dmlc/dmlc-core" ["e"=1]
"dmlc/dlpack" -> "llvm/torch-mlir"
"dmlc/dlpack" -> "pytorch/tvm"
"dmlc/dlpack" -> "jiazhihao/TASO"
"dmlc/dlpack" -> "NVIDIA/cub"
"dmlc/dlpack" -> "pytorch/gloo" ["e"=1]
"dmlc/dlpack" -> "iree-org/iree"
"dmlc/dlpack" -> "tensorflow/mlir-hlo"
"dmlc/dlpack" -> "tensorflow/runtime" ["e"=1]
"dmlc/dlpack" -> "flexflow/flexflow-train" ["e"=1]
"dmlc/dlpack" -> "Tencent/TPAT" ["e"=1]
"dmlc/dlpack" -> "dmlc/nnvm" ["e"=1]
"xgqdut2016/cuda_code" -> "xgqdut2016/hpc2torch"
"xgqdut2016/cuda_code" -> "YdrMaster/notebook"
"boostorg/compute" -> "NVIDIA/thrust" ["e"=1]
"inisis/OnnxSlim" -> "tsingmicro-toolchain/OnnxSlim"
"inisis/OnnxSlim" -> "inisis/OnnxLLM"
"inisis/OnnxSlim" -> "inisis/onion"
"inisis/OnnxSlim" -> "inisis/caffe2onnx"
"inisis/OnnxSlim" -> "inisis/chexpert"
"inisis/OnnxSlim" -> "WeLoveAI/onnx2torch"
"inisis/OnnxSlim" -> "inisis/bilibili-video"
"inisis/OnnxSlim" -> "inisis/Capella"
"inisis/OnnxSlim" -> "inisis/caffe"
"inisis/OnnxSlim" -> "inisis/katago-benchmark"
"inisis/OnnxSlim" -> "inisis/machine-learning-facial-deformer"
"clu0/unet.cu" -> "pranjalssh/fast.cu" ["e"=1]
"clu0/unet.cu" -> "tspeterkim/flash-attention-minimal" ["e"=1]
"clu0/unet.cu" -> "siboehm/SGEMM_CUDA" ["e"=1]
"udacity/cs344" -> "depctg/udacity-cs344-colab"
"udacity/cs344" -> "ibebrett/CUDA-CS344"
"udacity/cs344" -> "NVIDIA-developer-blog/code-samples"
"udacity/cs344" -> "NVIDIA/cub"
"udacity/cs344" -> "NVIDIA/thrust"
"udacity/cs344" -> "moderngpu/moderngpu"
"udacity/cs344" -> "ArchaeaSoftware/cudahandbook"
"udacity/cs344" -> "gpu-mode/lectures"
"udacity/cs344" -> "huiscliu/Tutorials"
"udacity/cs344" -> "akrizhevsky/cuda-convnet2"
"udacity/cs344" -> "jaredhoberock/stanford-cs193g-sp2010"
"udacity/cs344" -> "PacktPublishing/Learn-CUDA-Programming"
"udacity/cs344" -> "cudpp/cudpp"
"udacity/cs344" -> "olcf/cuda-training-series"
"udacity/cs344" -> "NervanaSystems/maxas"
"baidu-research/baidu-allreduce" -> "openai/openai-gemm" ["e"=1]
"cudpp/cudpp" -> "NVIDIA/cub"
"cudpp/cudpp" -> "moderngpu/moderngpu"
"cudpp/cudpp" -> "Erkaman/Awesome-CUDA"
"cudpp/cudpp" -> "owensgroup/SlabHash"
"cudpp/cudpp" -> "cusplibrary/cusplibrary" ["e"=1]
"cudpp/cudpp" -> "NVIDIA/cuCollections"
"cudpp/cudpp" -> "NVIDIA-developer-blog/code-samples"
"cudpp/cudpp" -> "Xtra-Computing/Medusa" ["e"=1]
"cudpp/cudpp" -> "NVIDIA/cnmem"
"cudpp/cudpp" -> "nosferalatu/SimpleGPUHashTable"
"cudpp/cudpp" -> "facebookarchive/fbcuda" ["e"=1]
"cudpp/cudpp" -> "gunrock/gunrock" ["e"=1]
"cudpp/cudpp" -> "sleeepyjack/warpcore"
"cudpp/cudpp" -> "farkhor/CuSha" ["e"=1]
"cudpp/cudpp" -> "NervanaSystems/maxas"
"intel/clDNN" -> "uxlfoundation/oneDNN" ["e"=1]
"intel/clDNN" -> "andravin/wincnn" ["e"=1]
"intel/clDNN" -> "NervanaSystems/ngraph" ["e"=1]
"intel/clDNN" -> "PaddlePaddle/Anakin" ["e"=1]
"intel/clDNN" -> "google/gemmlowp" ["e"=1]
"intel/clDNN" -> "Maratyszcza/NNPACK" ["e"=1]
"vincentfpgarcia/kNN-CUDA" -> "cudpp/cudpp" ["e"=1]
"reframe-hpc/reframe" -> "eth-cscs/COSMA" ["e"=1]
"amd/blis" -> "amd/libflame"
"amd/blis" -> "amd/aocl-libm-ose"
"amd/blis" -> "amd/scalapack"
"amd/libflame" -> "amd/blis"
"harleyszhang/lite_llama" -> "zjhellofss/triton_course"
"harleyszhang/lite_llama" -> "harleyszhang/llm_counts"
"SiriusNEO/Triton-Puzzles-Lite" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"SiriusNEO/Triton-Puzzles-Lite" -> "KEKE046/mlir-tutorial" ["e"=1]
"SiriusNEO/Triton-Puzzles-Lite" -> "66RING/tiny-flash-attention" ["e"=1]
"SiriusNEO/Triton-Puzzles-Lite" -> "DD-DuDa/Cute-Learning" ["e"=1]
"xlite-dev/HGEMM" -> "TiledTensor/TiledCUDA"
"xlite-dev/HGEMM" -> "LeiWang1999/Stream-k.tvm"
"kuterd/nv_isa_solver" -> "cloudcores/CuAssembler"
"NVIDIA/accelerated-computing-hub" -> "NVIDIA/nvmath-python"
"NVIDIA/accelerated-computing-hub" -> "NVIDIA/numba-cuda"
"NVIDIA/accelerated-computing-hub" -> "NVIDIA/cuCollections"
"NVIDIA/accelerated-computing-hub" -> "drkennetz/cuda_examples"
"NVIDIA/accelerated-computing-hub" -> "NVIDIA/numbast"
"NVIDIA/accelerated-computing-hub" -> "jacobtomlinson/gpu-python-tutorial"
"NVIDIA/accelerated-computing-hub" -> "NVIDIA/nvbench"
"NVIDIA/accelerated-computing-hub" -> "NVIDIA/cccl"
"NVIDIA/accelerated-computing-hub" -> "NVIDIA/jitify"
"NVIDIA/accelerated-computing-hub" -> "gevtushenko/llm.c"
"NVIDIA/accelerated-computing-hub" -> "rapidsai/rmm"
"NVIDIA/accelerated-computing-hub" -> "rapidsai/kvikio" ["e"=1]
"NVIDIA/accelerated-computing-hub" -> "pranjalssh/fast.cu"
"NVIDIA/accelerated-computing-hub" -> "NVIDIA/MatX"
"NVIDIA/accelerated-computing-hub" -> "NVIDIA/cuda-python"
"Maratyszcza/FP16" -> "Maratyszcza/pthreadpool"
"Maratyszcza/FP16" -> "artyom-beilis/float16"
"dlsys-course/assignment1-2018" -> "pytorch/tvm" ["e"=1]
"Cambricon/triton-linalg" -> "microsoft/triton-shared"
"Cambricon/triton-linalg" -> "FlagOpen/FlagGems" ["e"=1]
"Cambricon/triton-linalg" -> "bytedance/byteir"
"Cambricon/triton-linalg" -> "KEKE046/mlir-tutorial"
"Cambricon/triton-linalg" -> "Cambricon/mlu-ops"
"Cambricon/triton-linalg" -> "triton-lang/triton-cpu"
"Cambricon/triton-linalg" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"pytorch-labs/tritonbench" -> "microsoft/TileFusion" ["e"=1]
"feifeibear/ChituAttention" -> "chengzeyi/piflux"
"mobiusml/gemlite" -> "Bruce-Lee-LY/cuda_hgemv" ["e"=1]
"mobiusml/gemlite" -> "ColfaxResearch/cutlass-kernels" ["e"=1]
"viennacl/viennacl-dev" -> "naibaf7/libdnn" ["e"=1]
"LitLeo/TensorRT_Tutorial" -> "BBuf/how-to-optim-algorithm-in-cuda" ["e"=1]
"bryancatanzaro/trove" -> "NVIDIA/jitify"
"bryancatanzaro/trove" -> "bryancatanzaro/generics"
"microsoft/TileFusion" -> "TiledTensor/TiledCUDA"
"LearningInfiniTensor/learning-lm-rs" -> "LearningInfiniTensor/TinyInfiniTensor"
"LearningInfiniTensor/learning-lm-rs" -> "LearningInfiniTensor/learning-cxx"
"pcg-mlp/KsanaLLM" -> "tlc-pack/libflash_attn" ["e"=1]
"chengzeyi/piflux" -> "feifeibear/ChituAttention"
"pranjalssh/fast.cu" -> "ColfaxResearch/cutlass-kernels"
"pranjalssh/fast.cu" -> "DD-DuDa/Cute-Learning"
"pranjalssh/fast.cu" -> "ColfaxResearch/cfx-article-src"
"pranjalssh/fast.cu" -> "Bruce-Lee-LY/cuda_hgemm"
"pranjalssh/fast.cu" -> "KnowingNothing/MatmulTutorial"
"pranjalssh/fast.cu" -> "flashinfer-ai/cutlass-viz" ["e"=1]
"pranjalssh/fast.cu" -> "infinigence/FlashOverlap" ["e"=1]
"pranjalssh/fast.cu" -> "ByteDance-Seed/Triton-distributed" ["e"=1]
"pranjalssh/fast.cu" -> "ppl-ai/pplx-kernels" ["e"=1]
"pranjalssh/fast.cu" -> "66RING/tiny-flash-attention"
"pranjalssh/fast.cu" -> "tspeterkim/flash-attention-minimal"
"pranjalssh/fast.cu" -> "CalebDu/Awesome-Cute"
"pranjalssh/fast.cu" -> "luliyucoordinate/cute-flash-attention"
"pranjalssh/fast.cu" -> "leimao/CUDA-GEMM-Optimization"
"pranjalssh/fast.cu" -> "xlite-dev/HGEMM"
"luliyucoordinate/cute-flash-attention" -> "reed-lau/cute-gemm"
"CalebDu/Awesome-Cute" -> "reed-lau/cute-gemm"
"CalebDu/Awesome-Cute" -> "feifeibear/ChituAttention"
"tenstorrent/tt-forge" -> "tenstorrent/tt-forge-fe"
"tenstorrent/tt-forge" -> "tenstorrent/tt-mlir"
"friendliai/LLMServingPerfEvaluator" -> "friendliai/friendli-client"
"friendliai/LLMServingPerfEvaluator" -> "friendliai/periflow-cli"
"friendliai/LLMServingPerfEvaluator" -> "friendliai/friendli-model-optimizer"
"friendliai/LLMServingPerfEvaluator" -> "friendliai/periflow-python-sdk"
"friendliai/LLMServingPerfEvaluator" -> "friendliai/FAI-Model"
"xlite-dev/ffpa-attn" -> "xlite-dev/HGEMM" ["e"=1]
"ScalingIntelligence/KernelBench" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"ScalingIntelligence/KernelBench" -> "TiledTensor/TiledCUDA" ["e"=1]
"Repeerc/flash-attention-v2-RDNA3-minimal" -> "Beinsezii/comfyui-amd-go-fast"
"weishengying/cutlass_flash_atten_fp8" -> "weishengying/tiny-flash-attention"
"weishengying/cutlass_flash_atten_fp8" -> "feifeibear/ChituAttention"
"xdit-project/DistVAE" -> "mit-han-lab/patch_conv"
"xdit-project/DistVAE" -> "chengzeyi/piflux"
"xdit-project/DistVAE" -> "feifeibear/ChituAttention"
"LearningInfiniTensor/learning-cxx" -> "LearningInfiniTensor/learning-lm-rs"
"LearningInfiniTensor/learning-cxx" -> "YdrMaster/notebook"
"LearningInfiniTensor/learning-cxx" -> "xgqdut2016/hpc2torch"
"xgqdut2016/hpc2torch" -> "xgqdut2016/cuda_code"
"tenstorrent/tt-mlir" -> "tenstorrent/tt-forge-fe"
"tenstorrent/tt-mlir" -> "tenstorrent/tt-forge"
"tenstorrent/tt-mlir" -> "tenstorrent/tt-xla"
"tenstorrent/tt-mlir" -> "tenstorrent/tt-buda"
"tenstorrent/tt-mlir" -> "tenstorrent/tt-torch"
"tenstorrent/tt-mlir" -> "tenstorrent/tt-studio"
"NVIDIA/nvidia-resiliency-ext" -> "NVIDIA/Fuser" ["e"=1]
"LearningInfiniTensor/TinyInfiniTensor" -> "LearningInfiniTensor/learning-lm-rs"
"tenstorrent/tt-forge-fe" -> "tenstorrent/tt-xla"
"tenstorrent/tt-forge-fe" -> "tenstorrent/tt-mlir"
"tenstorrent/tt-forge-fe" -> "tenstorrent/tt-forge"
"weishengying/tiny-flash-attention" -> "weishengying/cutlass_flash_atten_fp8"
"openxla/shardy" -> "tenstorrent/tt-xla"
"openxla/shardy" -> "iree-org/iree-turbine"
"Yongqi-Zhuo/triton-tvm" -> "LeiWang1999/Stream-k.tvm"
"LeiWang1999/Stream-k.tvm" -> "Yongqi-Zhuo/triton-tvm"
"tenstorrent/tt-torch" -> "tenstorrent/tt-xla"
"tenstorrent/tt-inference-server" -> "tenstorrent/tt-studio"
"SohamGovande/ThunderKittens-FA3CustomMasks" -> "sgl-project/DeepGEMM"
"deepseek-ai/open-infra-index" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"vllm-project/vllm-ascend" -> "Ascend/pytorch" ["e"=1]
"Tencent/ncnn" -> "XiaoMi/mace" ["e"=1]
"lebedov/scikit-cuda" -> "cudamat/cudamat"
"lebedov/scikit-cuda" -> "inducer/pycuda"
"lebedov/scikit-cuda" -> "hannes-brt/cudnn-python-wrappers"
"lebedov/scikit-cuda" -> "arrayfire/arrayfire-python" ["e"=1]
"lebedov/scikit-cuda" -> "numba/pyculib"
"lebedov/scikit-cuda" -> "ArchaeaSoftware/cudahandbook"
"lebedov/scikit-cuda" -> "cupy/cupy" ["e"=1]
"lebedov/scikit-cuda" -> "EasonLiao/CudaTree"
"lebedov/scikit-cuda" -> "inducer/pyopencl" ["e"=1]
"lebedov/scikit-cuda" -> "mila-iqia/platoon" ["e"=1]
"lebedov/scikit-cuda" -> "src-d/kmcuda" ["e"=1]
"lebedov/scikit-cuda" -> "dmlc/mshadow" ["e"=1]
"lebedov/scikit-cuda" -> "NVIDIA/cub"
"lebedov/scikit-cuda" -> "dmlc/minpy" ["e"=1]
"lebedov/scikit-cuda" -> "andersbll/cudarray"
"csarron/awesome-emdl" -> "google/gemmlowp" ["e"=1]
"csarron/awesome-emdl" -> "XiaoMi/mobile-ai-bench" ["e"=1]
"inclusionAI/AReaL" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"lhelontra/tensorflow-on-arm" -> "ARM-software/armnn" ["e"=1]
"ai-dynamo/dynamo" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"OAID/Caffe-HRT" -> "ARM-software/ComputeLibrary" ["e"=1]
"OAID/Caffe-HRT" -> "merrymercy/tvm-mali" ["e"=1]
"MoonshotAI/MoBA" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"albanie/convnet-burden" -> "jcjohnson/cnn-benchmarks" ["e"=1]
"albanie/convnet-burden" -> "sovrasov/flops-counter.pytorch" ["e"=1]
"albanie/convnet-burden" -> "soeaver/caffe-model" ["e"=1]
"albanie/convnet-burden" -> "IntelLabs/distiller" ["e"=1]
"albanie/convnet-burden" -> "baidu-research/DeepBench"
"albanie/convnet-burden" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"albanie/convnet-burden" -> "google/gemmlowp"
"albanie/convnet-burden" -> "basicmi/AI-Chip"
"albanie/convnet-burden" -> "Lyken17/pytorch-OpCounter" ["e"=1]
"albanie/convnet-burden" -> "mit-han-lab/once-for-all" ["e"=1]
"albanie/convnet-burden" -> "marvis/pytorch-caffe-darknet-convert" ["e"=1]
"albanie/convnet-burden" -> "ducha-aiki/caffenet-benchmark" ["e"=1]
"albanie/convnet-burden" -> "ysh329/deep-learning-model-convertor" ["e"=1]
"albanie/convnet-burden" -> "pytorch/QNNPACK"
"albanie/convnet-burden" -> "zhijian-liu/torchprofile" ["e"=1]
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" -> "deeperlearning/professional-cuda-c-programming"
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" -> "PacktPublishing/Learn-CUDA-Programming"
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" -> "ischintsan/cuda_by_example"
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" -> "NVIDIA/CUDALibrarySamples"
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" -> "rkinas/triton-resources" ["e"=1]
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" -> "ArchaeaSoftware/cudahandbook"
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" -> "yanqswhu/cuda_by_example"
"deepseek-ai/DeepGEMM" -> "xlite-dev/LeetCUDA" ["e"=1]
"pytorch/benchmark" -> "pytorch/torchdynamo" ["e"=1]
"pytorch/benchmark" -> "alibaba/BladeDISC" ["e"=1]
"bbruceyuan/LLMs-Zero-to-Hero" -> "chenzomi12/AIInfra" ["e"=1]
"vllm-project/production-stack" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"NervanaSystems/ngraph" -> "uxlfoundation/oneDNN"
"NervanaSystems/ngraph" -> "tensorflow/mlir"
"NervanaSystems/ngraph" -> "facebookresearch/TensorComprehensions"
"NervanaSystems/ngraph" -> "dmlc/nnvm" ["e"=1]
"NervanaSystems/ngraph" -> "pytorch/glow"
"NervanaSystems/ngraph" -> "ONNC/onnc" ["e"=1]
"NervanaSystems/ngraph" -> "microsoft/nnfusion"
"NervanaSystems/ngraph" -> "tensorflow/runtime" ["e"=1]
"NervanaSystems/ngraph" -> "PaddlePaddle/Anakin"
"NervanaSystems/ngraph" -> "pytorch/QNNPACK"
"NervanaSystems/ngraph" -> "intel/nauta" ["e"=1]
"NervanaSystems/ngraph" -> "tensor-compiler/taco"
"NervanaSystems/ngraph" -> "tensorflow/ngraph-bridge"
"NervanaSystems/ngraph" -> "NervanaSystems/he-transformer" ["e"=1]
"NervanaSystems/ngraph" -> "NervanaSystems/neon" ["e"=1]
"basicmi/AI-Chip" -> "fengbintu/Neural-Networks-on-Silicon" ["e"=1]
"basicmi/AI-Chip" -> "BRTResearch/AIChip_Paper_List" ["e"=1]
"basicmi/AI-Chip" -> "nvdla/hw" ["e"=1]
"basicmi/AI-Chip" -> "doonny/PipeCNN" ["e"=1]
"basicmi/AI-Chip" -> "baidu-research/DeepBench"
"basicmi/AI-Chip" -> "ARM-software/SCALE-Sim" ["e"=1]
"basicmi/AI-Chip" -> "google/gemmlowp"
"basicmi/AI-Chip" -> "dgschwend/zynqnet" ["e"=1]
"basicmi/AI-Chip" -> "ucb-bar/gemmini" ["e"=1]
"basicmi/AI-Chip" -> "IBM/AccDNN" ["e"=1]
"basicmi/AI-Chip" -> "pytorch/QNNPACK"
"basicmi/AI-Chip" -> "basicmi/AI-Articles"
"basicmi/AI-Chip" -> "stanford-mast/nn_dataflow" ["e"=1]
"basicmi/AI-Chip" -> "ARM-software/ComputeLibrary"
"basicmi/AI-Chip" -> "gpgpu-sim/gpgpu-sim_distribution" ["e"=1]
"LeanModels/DFloat11" -> "wangsiping97/FastGEMV" ["e"=1]
"TheDan64/inkwell" -> "mlir-rs/melior" ["e"=1]
"ysh329/embedded-ai.bi-weekly" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"ysh329/embedded-ai.bi-weekly" -> "AI-performance/embedded-ai.bench" ["e"=1]
"MLNLP-World/LLMs-from-scratch-CN" -> "harleyszhang/llm_note" ["e"=1]
"Jokeren/Awesome-GPU" -> "cloudcores/CuAssembler"
"Jokeren/Awesome-GPU" -> "sjfeng1999/gpu-arch-microbenchmark"
"Jokeren/Awesome-GPU" -> "accel-sim/accel-sim-framework" ["e"=1]
"Jokeren/Awesome-GPU" -> "NervanaSystems/maxas"
"Jokeren/Awesome-GPU" -> "Erkaman/Awesome-CUDA"
"Jokeren/Awesome-GPU" -> "RRZE-HPC/gpu-benches"
"Jokeren/Awesome-GPU" -> "KnowingNothing/MatmulTutorial"
"Jokeren/Awesome-GPU" -> "antgroup/glake" ["e"=1]
"Jokeren/Awesome-GPU" -> "NVIDIA/nvbench"
"Jokeren/Awesome-GPU" -> "merrymercy/awesome-tensor-compilers"
"Jokeren/Awesome-GPU" -> "NVIDIA/multi-gpu-programming-models"
"Jokeren/Awesome-GPU" -> "NVlabs/NVBit" ["e"=1]
"Jokeren/Awesome-GPU" -> "microsoft/nnfusion"
"Jokeren/Awesome-GPU" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"Jokeren/Awesome-GPU" -> "mit-han-lab/inter-operator-scheduler"
"NVIDIA/nccl-tests" -> "NVIDIA/multi-gpu-programming-models" ["e"=1]
"zdevito/ATen" -> "facebookresearch/TensorComprehensions" ["e"=1]
"zdevito/ATen" -> "Maratyszcza/NNPACK" ["e"=1]
"zdevito/ATen" -> "google/gemmlowp" ["e"=1]
"fla-org/native-sparse-attention" -> "66RING/tiny-flash-attention" ["e"=1]
"microsoft/EdgeML" -> "microsoft/ELL" ["e"=1]
"microsoft/EdgeML" -> "google/gemmlowp" ["e"=1]
"NVIDIA/jitify" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/jitify" -> "NVIDIA/nvbench"
"NVIDIA/jitify" -> "bryancatanzaro/trove"
"NVIDIA/jitify" -> "NVIDIA/cuCollections"
"NVIDIA/jitify" -> "NVIDIA/cub"
"NVIDIA/jitify" -> "NVIDIA/cnmem"
"NVIDIA/jitify" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/jitify" -> "NVIDIA/MatX"
"NVIDIA/jitify" -> "NVIDIA/libcudacxx"
"NVIDIA/jitify" -> "NVIDIA/Fuser"
"NVIDIA/jitify" -> "ROCm/rocPRIM" ["e"=1]
"NVIDIA/jitify" -> "NVIDIA/nvcomp"
"NVIDIA/jitify" -> "NVIDIA/NVTX"
"NVIDIA/jitify" -> "rapidsai/rmm"
"NVIDIA/jitify" -> "NVIDIA/gdrcopy" ["e"=1]
"yonghenglh6/DepthwiseConvolution" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"ByteDance-Seed/Triton-distributed" -> "KnowingNothing/MatmulTutorial" ["e"=1]
"MLSys-Learner-Resources/Awesome-MLSys-Blogger" -> "zhaochenyang20/Awesome-ML-SYS-Tutorial" ["e"=1]
"zjhellofss/triton_course" -> "harleyszhang/lite_llama"
"ppl-ai/pplx-kernels" -> "ColfaxResearch/cutlass-kernels" ["e"=1]
"ppl-ai/pplx-kernels" -> "pranjalssh/fast.cu" ["e"=1]
"ppl-ai/pplx-kernels" -> "ColfaxResearch/cfx-article-src" ["e"=1]
"FlagAI-Open/OpenSeek" -> "FlagOpen/FlagScale"
"Said-Akbar/vllm-rocm" -> "Said-Akbar/triton-gcn5"
"LLNL/maestrowf" -> "LLNL/merlin"
"LLNL/maestrowf" -> "spack/spack-configs"
"feifeibear/DPSKV3MFU" -> "sgl-project/DeepGEMM"
"Said-Akbar/triton-gcn5" -> "Said-Akbar/vllm-rocm"
"nlzy/vllm-gfx906" -> "Said-Akbar/triton-gcn5"
"FlexFusion/FlexFusion" -> "sgl-project/DeepGEMM"
"sgl-project/DeepGEMM" -> "SohamGovande/ThunderKittens-FA3CustomMasks"
"google/cpu_features" ["l"="-19.655,-25.945", "c"=10]
"pytorch/cpuinfo" ["l"="37.128,0.775"]
"ARM-software/armnn" ["l"="37.21,0.775"]
"ARM-software/ComputeLibrary" ["l"="37.183,0.77"]
"ARM-software/ML-examples" ["l"="-16.102,-42.554", "c"=387]
"ARM-software/android-nn-driver" ["l"="37.31,0.711"]
"pytorch/QNNPACK" ["l"="37.176,0.796"]
"google/XNNPACK" ["l"="37.164,0.85"]
"google/gemmlowp" ["l"="37.151,0.815"]
"OAID/Caffe-HRT" ["l"="33.035,29.121", "c"=57]
"XiaoMi/mace" ["l"="37.239,0.718"]
"projectNe10/Ne10" ["l"="37.142,0.743"]
"ARM-software/CMSIS_5" ["l"="-17.771,-43.142", "c"=55]
"huawei-noah/bolt" ["l"="37.114,0.758"]
"ARM-software/ML-KWS-for-MCU" ["l"="35.537,2.486", "c"=308]
"Tencent/FeatherCNN" ["l"="37.183,0.734"]
"microsoft/nnfusion" ["l"="37.073,0.947"]
"OAID/Tengine" ["l"="50.933,2.661", "c"=85]
"dpilger26/NumCpp" ["l"="-20.014,-25.82", "c"=10]
"NVIDIA/thrust" ["l"="36.687,0.901"]
"mlcommons/inference" ["l"="37.276,0.9"]
"mlcommons/training" ["l"="37.297,0.859"]
"baidu-research/DeepBench" ["l"="37.226,0.818"]
"NVIDIA/nccl-tests" ["l"="1.965,14.459", "c"=572]
"onnx/onnx-mlir" ["l"="37.108,0.982"]
"NVIDIA/TransformerEngine" ["l"="38.884,-0.512", "c"=39]
"mlcommons/ck" ["l"="37.616,0.873"]
"alibaba/ai-matrix" ["l"="37.29,0.927"]
"mlcommons/tiny" ["l"="-16.139,-42.535", "c"=387]
"iree-org/iree" ["l"="37.132,0.971"]
"flashinfer-ai/flashinfer" ["l"="38.975,-0.486", "c"=39]
"mlcommons/inference_policies" ["l"="37.337,0.911"]
"mlcommons/storage" ["l"="2.022,14.973", "c"=756]
"pytorch/glow" ["l"="37.175,0.908"]
"NVIDIA/nccl" ["l"="38.96,-0.676", "c"=39]
"intel/ai-reference-models" ["l"="64.218,-2.477", "c"=1153]
"intel/intel-xpu-backend-for-triton" ["l"="37.166,1.139"]
"NervanaSystems/ngraph" ["l"="37.206,0.889"]
"uxlfoundation/oneDNN" ["l"="37.195,0.838"]
"tensorflow/model-optimization" ["l"="45.627,25.723", "c"=68]
"bytedance/byteps" ["l"="58.028,23.559", "c"=161]
"HuaizhengZhang/AI-Infra-from-Zero-to-Hero" ["l"="36.947,0.829"]
"Robert-JunWang/Pelee" ["l"="51.725,33.343", "c"=354]
"BUG1989/caffe-int8-convert-tools" ["l"="37.158,0.718"]
"eric612/MobileNet-YOLO" ["l"="51.673,33.285", "c"=354]
"inducer/pyopencl" ["l"="64.342,-2.11", "c"=477]
"inducer/pycuda" ["l"="36.665,0.84"]
"inducer/loopy" ["l"="37.033,0.971"]
"microsoft/ai-edu" ["l"="50.982,28.288", "c"=104]
"microsoft/AI-System" ["l"="36.923,0.755"]
"moderngpu/moderngpu" ["l"="36.696,0.93"]
"NVIDIA/cub" ["l"="36.72,0.942"]
"cudpp/cudpp" ["l"="36.677,0.945"]
"gunrock/gunrock" ["l"="51.441,15.303", "c"=1231]
"NervanaSystems/maxas" ["l"="36.924,0.876"]
"NVIDIA-developer-blog/code-samples" ["l"="36.723,0.91"]
"eyalroz/cuda-api-wrappers" ["l"="36.675,0.968"]
"stotko/stdgpu" ["l"="36.641,0.958"]
"NVIDIA/libcudacxx" ["l"="36.656,0.981"]
"NVIDIA/cccl" ["l"="36.699,0.959"]
"NVIDIA/jitify" ["l"="36.704,1.001"]
"cusplibrary/cusplibrary" ["l"="63.147,-1.737", "c"=175]
"NVIDIA/multi-gpu-programming-models" ["l"="36.747,0.962"]
"gpgpu-sim/gpgpu-sim_distribution" ["l"="31.034,-2.965", "c"=1037]
"openvinotoolkit/openvino" ["l"="64.163,-2.572", "c"=1153]
"google/tangent" ["l"="45.152,20.435", "c"=20]
"facebookresearch/TensorComprehensions" ["l"="37.142,0.92"]
"PacktPublishing/Learn-CUDA-Programming" ["l"="36.768,0.816"]
"brucefan1983/CUDA-Programming" ["l"="36.789,0.799"]
"Tony-Tan/CUDA_Freshman" ["l"="36.813,0.818"]
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" ["l"="36.701,0.815"]
"NVIDIA/CUDALibrarySamples" ["l"="36.745,0.894"]
"NVIDIA/cuda-samples" ["l"="38.941,-0.786", "c"=39]
"xlite-dev/LeetCUDA" ["l"="36.853,0.818"]
"BBuf/how-to-optim-algorithm-in-cuda" ["l"="36.877,0.836"]
"CoffeeBeforeArch/cuda_programming" ["l"="36.738,0.825"]
"olcf/cuda-training-series" ["l"="36.782,0.881"]
"HeKun-NVIDIA/CUDA-Programming-Guide-in-Chinese" ["l"="36.83,0.795"]
"gpu-mode/lectures" ["l"="36.832,0.767"]
"PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA" ["l"="36.701,0.75"]
"Liu-xiandong/How_to_optimize_in_GPU" ["l"="36.883,0.883"]
"puttsk/cuda-tutorial" ["l"="-14.056,-23.129", "c"=1101]
"flame/how-to-optimize-gemm" ["l"="37.053,0.853"]
"alibaba/MNN" ["l"="50.189,29.806", "c"=83]
"rapidsai/cugraph" ["l"="43.927,23.625", "c"=95]
"rapidsai/rmm" ["l"="36.687,1.012"]
"plaidml/plaidml" ["l"="37.251,0.947"]
"apple/tensorflow_macos" ["l"="27.333,-21.007", "c"=577]
"apache/tvm" ["l"="50.13,29.773", "c"=83]
"horovod/horovod" ["l"="45.559,25.861", "c"=68]
"hughperkins/tf-coriander" ["l"="64.324,-1.956", "c"=477]
"ROCm/ROCm" ["l"="64.289,-1.821", "c"=477]
"keras-team/autokeras" ["l"="45.58,26.009", "c"=68]
"halide/Halide" ["l"="37.107,0.89"]
"facebookarchive/caffe2" ["l"="47.886,29.061", "c"=89]
"apache/mxnet" ["l"="47.989,29.03", "c"=89]
"ROCm/hip" ["l"="64.264,-1.882", "c"=477]
"EpistasisLab/tpot" ["l"="45.482,26.124", "c"=68]
"tensorflow/benchmarks" ["l"="57.92,23.535", "c"=161]
"basicmi/AI-Chip" ["l"="37.291,0.775"]
"mlcommons/training_policies" ["l"="37.371,0.897"]
"flexflow/flexflow-train" ["l"="38.927,-0.488", "c"=39]
"pytorch/gloo" ["l"="57.935,23.566", "c"=161]
"tensorflow/mlir" ["l"="37.156,0.945"]
"NVIDIA/gdrcopy" ["l"="1.92,14.452", "c"=572]
"tensorflow/mesh" ["l"="45.702,25.677", "c"=68]
"NVIDIA/cutlass" ["l"="38.965,-0.634", "c"=39]
"aklomp/base64" ["l"="-19.423,-26.031", "c"=10]
"imgbot/Imgbot" ["l"="9.02,-44.87", "c"=828]
"LBANN/lbann" ["l"="37.64,1.216"]
"Kobzol/hardware-effects" ["l"="-19.739,-26.005", "c"=10]
"Kobzol/hardware-effects-gpu" ["l"="36.806,0.998"]
"cybertronai/gradient-checkpointing" ["l"="45.737,25.766", "c"=68]
"flame/blis" ["l"="37.113,0.808"]
"libxsmm/libxsmm" ["l"="37.11,0.835"]
"OpenMathLib/OpenBLAS" ["l"="37.247,0.775"]
"flame/libflame" ["l"="37.181,0.694"]
"flame/blislab" ["l"="37.003,0.856"]
"Reference-LAPACK/lapack" ["l"="62.961,-1.512", "c"=175]
"CNugteren/CLBlast" ["l"="64.293,-2.058", "c"=477]
"ginkgo-project/ginkgo" ["l"="63.135,-1.514", "c"=175]
"tensor-compiler/taco" ["l"="37.115,0.938"]
"kokkos/kokkos" ["l"="63.141,-1.443", "c"=175]
"giaf/blasfeo" ["l"="61.448,14.832", "c"=480]
"tpoisonooo/how-to-optimize-gemm" ["l"="36.986,0.849"]
"BBuf/tvm_mlir_learn" ["l"="36.986,0.9"]
"godweiyang/NN-CUDA-Example" ["l"="36.832,0.835"]
"zjhellofss/KuiperInfer" ["l"="36.869,0.795"]
"NVIDIA/trt-samples-for-hackathon-cn" ["l"="53.301,32.657", "c"=251]
"shouxieai/tensorRT_Pro" ["l"="53.346,32.653", "c"=251]
"openmlsys/openmlsys-zh" ["l"="36.916,0.798"]
"NVIDIA/FasterTransformer" ["l"="38.883,-0.641", "c"=39]
"huihut/OpenCV-MinGW-Build" ["l"="-20.463,-27.963", "c"=107]
"msnh2012/Msnhnet" ["l"="37.04,0.716"]
"flashlight/flashlight" ["l"="47.672,29.267", "c"=89]
"xindongzhang/MNN-APPLICATIONS" ["l"="33.352,29.168", "c"=57]
"ARM-software/arm-trusted-firmware" ["l"="-17.793,-43.254", "c"=55]
"fritzlabs/Awesome-Mobile-Machine-Learning" ["l"="46.552,-24.185", "c"=656]
"Tencent/ncnn" ["l"="50.241,29.805", "c"=83]
"DrTimothyAldenDavis/SuiteSparse" ["l"="63.043,-1.556", "c"=175]
"open-mpi/ompi" ["l"="1.981,14.386", "c"=572]
"pybind/pybind11" ["l"="-20.066,-25.744", "c"=10]
"ARM-software/armnn-mlperf" ["l"="37.385,0.662"]
"intel/nn-hal" ["l"="37.352,0.684"]
"merrymercy/awesome-tensor-compilers" ["l"="37.035,0.94"]
"llvm/torch-mlir" ["l"="37.11,1.005"]
"IntelLabs/distiller" ["l"="52.71,33.427", "c"=271]
"pytorch/FBGEMM" ["l"="37.128,0.864"]
"alibaba/BladeDISC" ["l"="37.066,0.962"]
"dmlc/nnvm" ["l"="57.845,23.597", "c"=161]
"jiazhihao/TASO" ["l"="37.045,0.992"]
"Tiramisu-Compiler/tiramisu" ["l"="37.138,1.001"]
"zdevito/ATen" ["l"="51.447,29.977", "c"=83]
"PaddlePaddle/Paddle-Lite" ["l"="50.086,29.69", "c"=83]
"lebedov/scikit-cuda" ["l"="36.601,0.828"]
"cupy/cupy" ["l"="43.714,23.501", "c"=95]
"cudamat/cudamat" ["l"="36.605,0.784"]
"numba/numba" ["l"="43.67,23.566", "c"=95]
"NVIDIA/cuda-python" ["l"="36.638,0.889"]
"inducer/pudb" ["l"="45.162,20.777", "c"=20]
"onnx/onnx-tensorrt" ["l"="53.248,32.637", "c"=251]
"NVIDIA-AI-IOT/torch2trt" ["l"="53.275,32.58", "c"=251]
"Infatoshi/cuda-course" ["l"="-14.228,-23.111", "c"=1101]
"siboehm/SGEMM_CUDA" ["l"="36.825,0.925"]
"CoffeeBeforeArch/cpp_crash_course" ["l"="36.638,0.731"]
"CoffeeBeforeArch/cpp_from_scratch" ["l"="36.677,0.76"]
"CoffeeBeforeArch/parallel_cpp" ["l"="36.672,0.741"]
"pranjalssh/fast.cu" ["l"="36.818,0.95"]
"CoffeeBeforeArch/parallel_programming" ["l"="36.658,0.757"]
"gpu-mode/resource-stream" ["l"="39.002,-0.284", "c"=39]
"deeperlearning/professional-cuda-c-programming" ["l"="36.762,0.873"]
"RussWong/CUDATutorial" ["l"="36.862,0.891"]
"banach-space/llvm-tutor" ["l"="-22.141,-18.515", "c"=763]
"j2kun/mlir-tutorial" ["l"="37.107,1.03"]
"eric612/Caffe-YOLOv3-Windows" ["l"="51.634,33.277", "c"=354]
"bharathgs/Awesome-Distributed-Deep-Learning" ["l"="51.671,1.96", "c"=663]
"mit-han-lab/inter-operator-scheduler" ["l"="37.018,1.026"]
"Jokeren/Awesome-GPU" ["l"="36.866,0.965"]
"NVIDIA/nvbench" ["l"="36.75,0.982"]
"tensorflow/community" ["l"="45.676,25.696", "c"=68]
"sun254/awesome-model-compression-and-acceleration" ["l"="52.691,33.486", "c"=271]
"NVIDIA-Merlin/HugeCTR" ["l"="58.146,23.558", "c"=161]
"pytorch/torchrec" ["l"="58.231,23.523", "c"=161]
"pytorch/kineto" ["l"="39.097,-0.468", "c"=39]
"IST-DASLab/marlin" ["l"="38.931,-0.353", "c"=39]
"pytorch/torchdynamo" ["l"="37.098,0.959"]
"bytedance/flux" ["l"="38.984,-0.43", "c"=39]
"Tencent/PocketFlow" ["l"="52.744,33.373", "c"=271]
"Maratyszcza/NNPACK" ["l"="37.154,0.787"]
"andravin/wincnn" ["l"="37.093,0.778"]
"JDAI-CV/dabnn" ["l"="-52.272,-15.115", "c"=1184]
"openai/blocksparse" ["l"="48.863,33.895", "c"=556]
"openai/openai-gemm" ["l"="37.046,0.815"]
"RRZE-HPC/gpu-benches" ["l"="36.839,0.972"]
"KnowingNothing/MatmulTutorial" ["l"="36.884,0.961"]
"Bruce-Lee-LY/cuda_hgemm" ["l"="36.86,0.941"]
"sjfeng1999/gpu-arch-microbenchmark" ["l"="36.913,0.957"]
"ekondis/mixbench" ["l"="64.154,-1.996", "c"=477]
"cloudcores/CuAssembler" ["l"="36.931,0.931"]
"sunlex0717/DissectingTensorCores" ["l"="36.893,0.978"]
"Yinghan-Li/YHs_Sample" ["l"="36.901,0.924"]
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" ["l"="36.91,0.911"]
"accel-sim/accel-sim-framework" ["l"="31.017,-2.941", "c"=1037]
"ColfaxResearch/cutlass-kernels" ["l"="36.84,0.986"]
"TiledTensor/TiledCUDA" ["l"="36.877,1.015"]
"BBuf/how-to-learn-deep-learning-framework" ["l"="36.941,0.918"]
"xlite-dev/Awesome-LLM-Inference" ["l"="38.954,-0.506", "c"=39]
"zhaochenyang20/Awesome-ML-SYS-Tutorial" ["l"="36.876,0.767"]
"kvcache-ai/Mooncake" ["l"="39.029,-0.539", "c"=39]
"ModelTC/lightllm" ["l"="38.919,-0.53", "c"=39]
"AdaptiveCpp/AdaptiveCpp" ["l"="64.223,-1.97", "c"=477]
"inisis/brocolli" ["l"="51.637,33.228", "c"=354]
"tsingmicro-toolchain/OnnxSlim" ["l"="37.049,0.456"]
"inisis/caffe" ["l"="37.032,0.411"]
"inisis/daisy" ["l"="37.036,0.381"]
"inisis/OnnxSlim" ["l"="37.04,0.428"]
"tensorflow/runtime" ["l"="45.651,25.641", "c"=68]
"pytorch/tvm" ["l"="37.06,1.036"]
"tensorflow/mlir-hlo" ["l"="37.124,1.023"]
"ONNC/onnc" ["l"="31.903,-2.926", "c"=212]
"Cyan4973/FiniteStateEntropy" ["l"="-39.263,21.099", "c"=563]
"NVIDIA/nvcomp" ["l"="36.665,1.03"]
"Tencent/TNN" ["l"="50.14,29.861", "c"=83]
"XiaoMi/mace-models" ["l"="37.233,0.677"]
"daquexian/onnx-simplifier" ["l"="50.2,29.876", "c"=83]
"EasonLiao/CudaTree" ["l"="36.536,0.765"]
"deeplearningais/curfil" ["l"="36.499,0.743"]
"sdemyanov/ConvNet" ["l"="36.819,0.632"]
"xingdi-eric-yuan/conv-net-version-3" ["l"="36.782,0.548"]
"TorontoDeepLearning/convnet" ["l"="36.832,0.682"]
"jetpacapp/DeepBeliefSDK" ["l"="47.763,29.085", "c"=89]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" ["l"="36.762,0.699"]
"PacktPublishing/Hands-On-GPU-Programming-with-CUDA-C-and-Python-3.x-Second-Edition" ["l"="36.665,0.709"]
"sallenkey-wei/cuda-handbook" ["l"="36.649,0.683"]
"ContinuumIO/gtc2019-numba" ["l"="36.351,0.825"]
"ContinuumIO/gtc2020-numba" ["l"="36.373,0.833"]
"yonghenglh6/DepthwiseConvolution" ["l"="51.654,33.328", "c"=354]
"starimeL/PytorchConverter" ["l"="51.66,33.246", "c"=354]
"deepglint/EasyQuant" ["l"="52.568,33.435", "c"=271]
"shicai/MobileNet-Caffe" ["l"="51.674,33.332", "c"=354]
"chuanqi305/MobileNetv2-SSDLite" ["l"="51.692,33.305", "c"=354]
"PaddlePaddle/Anakin" ["l"="37.165,0.747"]
"xxradon/PytorchToCaffe" ["l"="51.63,33.247", "c"=354]
"miaow1988/ShuffleNet_V2_pytorch_caffe" ["l"="51.719,33.259", "c"=354]
"MTLab/onnx2caffe" ["l"="51.613,33.212", "c"=354]
"jakc4103/DFQ" ["l"="52.547,33.437", "c"=271]
"daadaada/turingas" ["l"="36.95,0.894"]
"QianyanTech/NBAssembler" ["l"="36.948,0.95"]
"0xD0GF00D/DocumentSASS" ["l"="36.941,0.967"]
"OpenPPL/CuAssembler" ["l"="36.989,0.794"]
"NVlabs/NVBit" ["l"="30.968,-2.981", "c"=1037]
"PAA-NCIC/PPoPP2017_artifact" ["l"="36.968,0.879"]
"Cjkkkk/CUDA_gemm" ["l"="36.89,0.913"]
"microsoft/DirectML" ["l"="-23.409,-27.774", "c"=26]
"lshqqytiger/stable-diffusion-webui-amdgpu" ["l"="37.249,1.387"]
"vosen/ZLUDA" ["l"="37.303,1.495"]
"PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" ["l"="51.314,29.684", "c"=83]
"sfzhang15/FaceBoxes" ["l"="33.263,29.187", "c"=57]
"DLTcollab/sse2neon" ["l"="-22.342,-23.364", "c"=496]
"intel/ARM_NEON_2_x86_SSE" ["l"="37.114,0.703"]
"jratcliff63367/sse2neon" ["l"="37.122,0.665"]
"rapidsai/raft" ["l"="-1.044,3.934", "c"=576]
"NVIDIA/cuCollections" ["l"="36.669,0.998"]
"intel/compute-runtime" ["l"="64.26,-1.983", "c"=477]
"u39kun/deep-learning-benchmark" ["l"="37.358,0.777"]
"LambdaColdStorage/lambda-tensorflow-benchmark" ["l"="37.426,0.751"]
"hclhkbu/dlbench" ["l"="37.339,0.799"]
"lambdal/deeplearning-benchmark" ["l"="37.468,0.734"]
"NVIDIA/cnmem" ["l"="36.72,0.975"]
"NVIDIA/NVTX" ["l"="36.733,1.018"]
"rapidsai/cuvs" ["l"="-1.024,3.898", "c"=576]
"rapidsai/kvikio" ["l"="1.765,14.51", "c"=572]
"NVIDIA/MatX" ["l"="36.689,0.986"]
"rapidsai/cuspatial" ["l"="43.959,23.66", "c"=95]
"owensgroup/SlabHash" ["l"="36.582,1.026"]
"owensgroup/GpuBTree" ["l"="36.543,1.044"]
"owensgroup/MVGpuBTree" ["l"="36.527,1.054"]
"pzrq/megakv" ["l"="36.546,1.066"]
"owensgroup/SlabAlloc" ["l"="36.557,1.05"]
"egraphs-good/egg" ["l"="-0.663,15.362", "c"=729]
"uwplse/tensat" ["l"="37.029,1.186"]
"mlir-rs/melior" ["l"="37.236,1.081"]
"symisc/sod" ["l"="-22.271,-26.028", "c"=101]
"microsoft/ELL" ["l"="37.251,0.836"]
"eigenteam/eigen-git-mirror" ["l"="59.233,10.862", "c"=87]
"apache/incubator-nemo" ["l"="36.981,0.618"]
"snuspl/pluto" ["l"="36.981,0.638"]
"snuspl/nemo" ["l"="36.969,0.636"]
"snuspl/cruise" ["l"="36.967,0.616"]
"apache/reef" ["l"="36.979,0.599"]
"snuspl/parallax" ["l"="36.993,0.629"]
"friendliai/FAI-Model" ["l"="36.995,0.65"]
"friendliai/friendli-client" ["l"="36.981,0.658"]
"friendliai/LLMServingPerfEvaluator" ["l"="36.976,0.646"]
"friendliai/periflow-python-sdk" ["l"="36.991,0.662"]
"JDAI-CV/DNNLibrary" ["l"="37.212,0.658"]
"daquexian/dnntools" ["l"="37.226,0.618"]
"BUG1989/ncnn-benchmark" ["l"="51.643,33.201", "c"=354]
"daquexian/dnnlibrary-example" ["l"="37.239,0.632"]
"daquexian/chaoli-forum-for-android-2" ["l"="58.912,-15.551", "c"=467]
"erickingxu/pyBridge" ["l"="37.24,0.615"]
"zhy520xp/mace-makefile-project" ["l"="-51.938,-15.667", "c"=1008]
"YuanhaoGong/SideWindowFilter" ["l"="37.189,0.462"]
"YuanhaoGong/CurvatureFilter" ["l"="37.206,0.397"]
"Luxiush/Weighted-Guided-Image-Filter" ["l"="37.259,0.392"]
"dontLoveBugs/SideWindowFilter" ["l"="37.215,0.434"]
"Ldpe2G/ArmNeonOptimization" ["l"="37.103,0.652"]
"YuanhaoGong/WeightedMeanCurvature" ["l"="37.193,0.424"]
"Beta-y/Side_Window_Filtering" ["l"="37.219,0.452"]
"sai-bi/ImageSmoothing" ["l"="37.229,0.336"]
"swz30/CycleISP" ["l"="-34.555,22.441", "c"=429]
"kuan-wang/The_Bilateral_Solver" ["l"="-31.115,-35.056", "c"=187]
"mgharbi/hdrnet_legacy" ["l"="-33.714,23.046", "c"=616]
"mlcommons/training_results_v0.5" ["l"="37.403,0.904"]
"mlcommons/logging" ["l"="37.42,0.891"]
"XiaoMi/mobile-ai-bench" ["l"="37.203,0.701"]
"XiaoMi/kaldi-onnx" ["l"="35.702,2.408", "c"=308]
"XiaoMi/mace-kit" ["l"="37.278,0.649"]
"szad670401/Fast-MTCNN" ["l"="33.196,29.151", "c"=57]
"rapidsai-community/notebooks-contrib" ["l"="43.924,23.718", "c"=95]
"CoffeeBeforeArch/practical_parallelism_in_cpp" ["l"="36.619,0.717"]
"CoffeeBeforeArch/cpp_20_samples" ["l"="36.599,0.694"]
"AliveToolkit/alive2" ["l"="-22.062,-18.585", "c"=763]
"llvm/clangir" ["l"="37.151,1.076"]
"sampsyo/bril" ["l"="-22.188,-18.58", "c"=763]
"llvm/Polygeist" ["l"="37.132,1.05"]
"sampsyo/cs6120" ["l"="-22.215,-18.571", "c"=763]
"kumasento/polymer" ["l"="37.159,1.093"]
"facebookresearch/CompilerGym" ["l"="37.093,1.066"]
"cdisselkoen/llvm-ir" ["l"="-9.442,-6.402", "c"=5]
"shriramsb/vDNN" ["l"="36.527,0.969"]
"shriramsb/vdnn-plus-plus" ["l"="36.541,0.965"]
"huiscliu/Tutorials" ["l"="36.748,0.778"]
"LitLeo/TensorRT_Tutorial" ["l"="53.23,32.686", "c"=251]
"Syencil/tensorRT" ["l"="53.218,32.707", "c"=251]
"dlunion/tensorRTIntegrate" ["l"="53.203,32.687", "c"=251]
"sangyc10/CUDA-code" ["l"="36.805,0.779"]
"CaoWGG/TensorRT-CenterNet" ["l"="53.189,32.699", "c"=251]
"chrischoy/pytorch-custom-cuda-tutorial" ["l"="51.381,30.009", "c"=83]
"udacity/cs344" ["l"="36.716,0.839"]
"BrightXiaoHan/CMakeTutorial" ["l"="-18.465,-27.978", "c"=62]
"BBuf/Darknet" ["l"="52.897,33.349", "c"=271]
"ferrandi/PandA-bambu" ["l"="31.6,-2.534", "c"=212]
"onnx/onnx-tensorflow" ["l"="50.088,29.955", "c"=83]
"eth-cscs/COSMA" ["l"="37.403,1.002"]
"cp2k/dbcsr" ["l"="37.338,0.95"]
"eth-cscs/SpFFT" ["l"="37.444,0.993"]
"eth-cscs/Tiled-MM" ["l"="37.436,1.015"]
"eth-cscs/DLA-Future" ["l"="37.477,1.001"]
"BBuf/Image-processing-algorithm" ["l"="-33.603,23.068", "c"=616]
"uTensor/uTensor" ["l"="-16.161,-42.533", "c"=387]
"PacktPublishing/Mastering-OpenCV-4-Third-Edition" ["l"="51.279,29.71", "c"=83]
"depctg/udacity-cs344-colab" ["l"="36.653,0.795"]
"nickspell/udacity-IntroToParallelProgramming" ["l"="36.592,0.752"]
"andersbll/cudarray" ["l"="36.564,0.784"]
"nitishsrivastava/deepnet" ["l"="47.998,28.919", "c"=89]
"lmjohns3/theanets" ["l"="44.889,27.638", "c"=789]
"dmlc/minerva" ["l"="57.773,23.509", "c"=161]
"dnouri/cuda-convnet" ["l"="36.785,0.713"]
"gwtaylor/theano-rnn" ["l"="44.872,27.623", "c"=789]
"amaas/stanford-ctc" ["l"="35.698,2.181", "c"=308]
"mila-iqia/blocks" ["l"="44.867,27.695", "c"=789]
"YouQixiaowu/CUDA-Programming-with-Python" ["l"="36.72,0.697"]
"uxlfoundation/oneDPL" ["l"="64.191,-1.959", "c"=477]
"pytorch/xla" ["l"="37.205,1.003"]
"openxla/xla" ["l"="37.169,0.988"]
"facebookresearch/fairscale" ["l"="38.777,-0.604", "c"=39]
"NVIDIA/apex" ["l"="50.832,29.796", "c"=83]
"google/flax" ["l"="21.721,13.999", "c"=267]
"google-deepmind/dm-haiku" ["l"="21.721,14.052", "c"=267]
"pytorch/functorch" ["l"="21.677,14.079", "c"=267]
"triton-lang/triton" ["l"="38.919,-0.703", "c"=39]
"pytorch/TensorRT" ["l"="53.262,32.686", "c"=251]
"CVCUDA/CV-CUDA" ["l"="53.302,32.711", "c"=251]
"LitLeo/OpenCUDA" ["l"="36.741,0.638"]
"littlebearsama/CUDA-notes" ["l"="36.716,0.616"]
"pitzer/SiftGPU" ["l"="60.494,9.503", "c"=636]
"xiangweizeng/mobile-lpr" ["l"="34.182,30.04", "c"=892]
"Celebrandil/CudaSift" ["l"="60.481,9.541", "c"=636]
"ZhenghaoFei/visual_odom" ["l"="59.568,10.979", "c"=87]
"HuangCongQing/pcl-learning" ["l"="58.087,9.801", "c"=142]
"pytorch/extension-cpp" ["l"="51.386,29.973", "c"=83]
"chasingegg/Winconv" ["l"="37.104,0.557"]
"TaoHuUMD/Winograd_Convolution" ["l"="37.114,0.524"]
"dorthyluu/cs194-winograd" ["l"="37.088,0.619"]
"kristjankorjus/Replicating-DeepMind" ["l"="57.235,18.048", "c"=45]
"AmberLJC/LLMSys-PaperList" ["l"="39.038,-0.452", "c"=39]
"tqchen/tinyflow" ["l"="57.91,23.583", "c"=161]
"alpa-projects/alpa" ["l"="38.879,-0.61", "c"=39]
"dyweb/papers-notebook" ["l"="0.669,13.944", "c"=115]
"NVIDIA/open-gpu-doc" ["l"="7.577,-11.275", "c"=515]
"facebookarchive/BOLT" ["l"="-19.59,-26.088", "c"=10]
"google-research/morph-net" ["l"="52.896,33.956", "c"=708]
"spcl/dace" ["l"="37.354,1.1"]
"spcl/daceml" ["l"="37.4,1.125"]
"spcl/substation" ["l"="37.376,1.125"]
"spcl/npbench" ["l"="37.396,1.084"]
"spcl/mlir-dace" ["l"="37.295,1.086"]
"cornell-zhang/heterocl" ["l"="31.679,-2.606", "c"=212]
"spcl/dace-vscode" ["l"="37.386,1.108"]
"GridTools/gt4py" ["l"="37.458,1.169"]
"deep500/deep500" ["l"="37.515,1.161"]
"definelicht/hlslib" ["l"="31.699,-2.649", "c"=212]
"ParRes/Kernels" ["l"="63.236,-1.348", "c"=175]
"spcl/pymlir" ["l"="37.199,1.073"]
"spcl/open-earth-compiler" ["l"="37.41,1.105"]
"NVlabs/timeloop" ["l"="31.019,-2.883", "c"=1037]
"moli232777144/mtcnn_ncnn" ["l"="33.206,29.199", "c"=57]
"Rock-100/FaceKit" ["l"="33.25,29.205", "c"=57]
"didi/AoE" ["l"="57.31,-12.166", "c"=216]
"intel/nauta" ["l"="64.259,-2.508", "c"=1153]
"agenium-scale/nsimd" ["l"="-19.644,-26.186", "c"=10]
"google/autofdo" ["l"="6.757,-6.125", "c"=335]
"jansel/opentuner" ["l"="37.131,1.137"]
"xuqiantong/CUDA-Winograd" ["l"="37.032,0.794"]
"md2z34/winograd_gpu" ["l"="37.022,0.738"]
"pku-liang/FlexTensor" ["l"="37.045,1.022"]
"qsyao/cudaBERT" ["l"="36.955,0.584"]
"c3sr/tcu_scope" ["l"="36.954,0.88"]
"thu-pacman/PET" ["l"="36.993,1.032"]
"UDC-GAC/openCNN" ["l"="37.029,0.755"]
"xingyul/sparse-winograd-cnn" ["l"="37.07,0.724"]
"ROCm/llvm-project" ["l"="64.175,-1.769", "c"=477]
"ROCm/rocMLIR" ["l"="37.179,1.07"]
"qsyao/cuda_spatial_deform" ["l"="36.927,0.506"]
"wkcn/MobulaOP" ["l"="36.967,1.155"]
"wkcn/mobula" ["l"="36.954,1.212"]
"szha/mxnet-jit-batch" ["l"="36.941,1.158"]
"networkservicemesh/networkservicemesh" ["l"="8.636,-9.753", "c"=14]
"ctuning/ck-tensorflow" ["l"="37.665,0.862"]
"facebook/FAI-PEP" ["l"="37.273,0.687"]
"enyac-group/single-path-nas" ["l"="52.883,34.051", "c"=708]
"d2l-ai/d2l-tvm" ["l"="37.023,0.995"]
"merrymercy/tvm-mali" ["l"="37.046,1.152"]
"tvmai/meetup-slides" ["l"="37.026,1.095"]
"vinx13/tvm-cuda-int8-benchmark" ["l"="37.064,1.175"]
"tqchen/ffi-navigator" ["l"="37.015,1.076"]
"tlc-pack/tophub" ["l"="37.052,1.103"]
"tlc-pack/relax" ["l"="37.009,1.063"]
"dmlc/dlpack" ["l"="37.003,0.999"]
"StrongSpoon/tvm.schedule" ["l"="37.02,1.047"]
"borgwang/tinynn" ["l"="51.546,28.096", "c"=104]
"akrizhevsky/cuda-convnet2" ["l"="36.876,0.741"]
"NervanaSystems/nervanagpu" ["l"="36.914,0.825"]
"FZJ-JSC/tutorial-multi-gpu" ["l"="36.77,0.984"]
"NVIDIA/nvbandwidth" ["l"="1.998,14.495", "c"=572]
"ByteDance-Seed/Triton-distributed" ["l"="39.013,-0.386", "c"=39]
"microsoft/msccl" ["l"="1.972,14.532", "c"=572]
"UoB-HPC/BabelStream" ["l"="63.23,-1.369", "c"=175]
"rapidsai/notebooks" ["l"="43.903,23.698", "c"=95]
"longcw/pytorch2caffe" ["l"="51.647,33.257", "c"=354]
"OpenACC/openacc-training-materials" ["l"="36.58,1.154"]
"OpenACC/openacc-best-practices-guide" ["l"="36.541,1.189"]
"rogerou/Arm-neon-intrinsics" ["l"="37.088,0.692"]
"BBuf/ArmNeonOptimization" ["l"="37.083,0.672"]
"thenifty/neon-guide" ["l"="37.103,0.731"]
"HuiiJi/AISP" ["l"="-34.553,22.375", "c"=429]
"Mysticial/Flops" ["l"="37.067,0.594"]
"tud-zih-energy/FIRESTARTER" ["l"="37.003,0.466"]
"maestro-project/maestro" ["l"="30.994,-2.865", "c"=1037]
"pku-liang/TileFlow" ["l"="37.029,1.134"]
"keroro824/HashingDeepLearning" ["l"="37.018,1.258"]
"RUSH-LAB/SLIDE" ["l"="37.003,1.322"]
"IntelLabs/SLIDE_opt_ia" ["l"="37.025,1.308"]
"google/neural-tangents" ["l"="21.667,13.957", "c"=267]
"dblalock/bolt" ["l"="-19.706,10.141", "c"=22]
"facebookresearch/kill-the-bits" ["l"="52.622,33.465", "c"=271]
"in66-dev/In-Prestissimo" ["l"="33.025,29.135", "c"=57]
"zhihu/cuBERT" ["l"="53.325,27.081", "c"=60]
"luoyetx/mini-caffe" ["l"="33.084,29.174", "c"=57]
"olojuwin/facerecognize-for-mobile-phone" ["l"="33.262,29.245", "c"=57]
"MegEngine/MegCC" ["l"="37.045,0.917"]
"pigirons/cpufp" ["l"="37.013,0.872"]
"njuhope/cuda_sgemm" ["l"="36.918,0.935"]
"OpenPPL/ppl.nn" ["l"="37.036,0.833"]
"tpoisonooo/chgemm" ["l"="36.974,0.785"]
"yzhaiustc/Optimizing-DGEMM-on-Intel-CPUs-with-AVX512F" ["l"="36.958,0.862"]
"pku-liang/AMOS" ["l"="37.001,1.054"]
"UofT-EcoSystem/DietCode" ["l"="36.996,1.071"]
"zhaiyi000/tlp" ["l"="36.992,1.083"]
"mosharaf/eecs598" ["l"="39.199,-0.433", "c"=39]
"gvtulder/elasticdeform" ["l"="36.906,0.451"]
"fcalvet/image_tools" ["l"="36.896,0.425"]
"google-deepmind/multidim-image-augmentation" ["l"="36.887,0.398"]
"krrishnarraj/clpeak" ["l"="64.233,-2.075", "c"=477]
"MegEngine/MegPeak" ["l"="37.08,0.84"]
"masahi/tvm-winograd" ["l"="37.067,1.23"]
"ROCm/AMDMIGraphX" ["l"="64.213,-1.761", "c"=477]
"HolmesShuan/CNN-Inference-Engine-Quick-View" ["l"="37.27,0.626"]
"AI-performance/embedded-ai.bench" ["l"="37.141,0.699"]
"AngusG/tensorflow-xnor-bnn" ["l"="52.579,33.635", "c"=271]
"Cambricon/caffe" ["l"="37.475,1.108"]
"Cambricon/caffe_boost" ["l"="37.463,1.118"]
"Cambricon/CNStream" ["l"="37.454,1.091"]
"Cambricon/Cambricon-Gst" ["l"="37.485,1.1"]
"szha/KDD18-Gluon" ["l"="51.765,33.767", "c"=354]
"sfilippone/psblas3" ["l"="62.658,-0.797", "c"=953]
"jacobwilliams/quadpack" ["l"="37.389,0.955"]
"chunhuajiang/arm-gcc-inline-assembler" ["l"="37.08,0.636"]
"carlushuang/cpu_gemm_opt" ["l"="37.107,0.609"]
"leimao/CUDA-GEMM-Optimization" ["l"="36.85,0.952"]
"harrism/numba_examples" ["l"="36.366,0.88"]
"ContinuumIO/gtc2017-numba" ["l"="36.391,0.862"]
"amd/libflame" ["l"="37.277,0.592"]
"ScientificClubofESI/LaraHack" ["l"="37.28,1.022"]
"NEDJIMAbelgacem/Graphics_Engine" ["l"="37.318,1.02"]
"projeduc/intro_apprentissage_automatique" ["l"="37.322,1.035"]
"rbaygildin/learn-gpgpu" ["l"="36.589,0.923"]
"gmarciani/cudawesome" ["l"="36.599,0.938"]
"ARM-software/Tool-Solutions" ["l"="37.44,0.625"]
"envytools/envytools" ["l"="7.498,-11.277", "c"=515]
"xiangweizeng/darknet2ncnn" ["l"="32.846,29.073", "c"=57]
"fqnchina/ImageSmoothing" ["l"="37.23,0.28"]
"zhufeida/Benchmark_EPS" ["l"="37.217,0.295"]
"MeteoSwiss-APN/dawn" ["l"="37.491,1.172"]
"GridTools/gridtools" ["l"="37.48,1.185"]
"awslabs/mxboard" ["l"="51.776,33.685", "c"=354]
"NervanaSystems/ngraph-tf" ["l"="37.392,0.862"]
"tensorflow/ngraph-bridge" ["l"="37.356,0.863"]
"NervanaSystems/ngraph-tensorflow-bridge" ["l"="37.393,0.846"]
"ValeevGroup/tiledarray" ["l"="21.975,17.646", "c"=863]
"RockeyDon/Gradient-Domain-Guided-Image-Filtering" ["l"="37.288,0.378"]
"intel/cm-compiler" ["l"="64.247,-1.962", "c"=477]
"intel/xetla" ["l"="37.191,1.166"]
"szad670401/tvm_benchmark_cpp" ["l"="37.049,1.195"]
"tlc-pack/TLCBench" ["l"="37.019,1.115"]
"rgavaska/Fast-Adaptive-Bilateral-Filtering" ["l"="37.294,0.341"]
"GKalliatakis/Bilateral-Filtering" ["l"="37.317,0.312"]
"bigmms/chen_spl20_gabf" ["l"="37.318,0.332"]
"wliusjtu/Embedding-Bilateral-Filter-in-Least-Squares-for-Efficient-Edge-preserving-Image-Smoothing" ["l"="37.268,0.329"]
"wzsh/wmma_tensorcore_sample" ["l"="36.91,0.971"]
"wmmae/wmma_extension" ["l"="36.907,1.003"]
"nicolaswilde/cuda-tensorcore-hgemm" ["l"="36.899,0.952"]
"metricq/aiocouch" ["l"="36.968,0.384"]
"metricq/metricq-python" ["l"="36.979,0.418"]
"IntelLabs/SkimCaffe" ["l"="52.714,33.614", "c"=271]
"jafermarq/WinogradAwareNets" ["l"="37.063,0.662"]
"metricq/metricq" ["l"="36.978,0.436"]
"tud-zih-energy/lo2s" ["l"="36.992,0.428"]
"awslabs/lorien" ["l"="36.955,1.115"]
"biswajitcsecu/-Color-multi-focus-image-fusion-using-Guided-and-Bilateral-filter-based-on-focus-region-detection-in" ["l"="37.311,0.37"]
"ContinuumIO/gtc2018-numba" ["l"="36.347,0.849"]
"LLNL/Aluminum" ["l"="37.708,1.227"]
"BaguaSys/bagua-net" ["l"="37.753,1.243"]
"inisis/Capella" ["l"="37.049,0.398"]
"inisis/onion" ["l"="37.043,0.411"]
"inisis/chexpert" ["l"="37.039,0.402"]
"WeLoveAI/onnx2torch" ["l"="37.06,0.424"]
"inisis/bilibili-video" ["l"="37.03,0.392"]
"inisis/OnnxLLM" ["l"="37.052,0.436"]
"inisis/caffe2onnx" ["l"="37.054,0.414"]
"inisis/katago-benchmark" ["l"="37.025,0.402"]
"inisis/machine-learning-facial-deformer" ["l"="37.063,0.401"]
"csjunxu/Image-Smoothing-State-of-the-art" ["l"="37.213,0.316"]
"wliusjtu/Semi-Global-Weighted-Least-Squares-in-Image-Filtering" ["l"="37.233,0.309"]
"swsnu/bd2018" ["l"="36.944,0.621"]
"friendliai/friendli-model-optimizer" ["l"="36.968,0.665"]
"inisis/DFace" ["l"="37.049,0.38"]
"periscop/cloog" ["l"="37.11,1.144"]
"inducer/islpy" ["l"="37.094,1.115"]
"Meinersbur/pet" ["l"="37.117,1.121"]
"periscop/piplib" ["l"="37.122,1.185"]
"linnanwang/superneurons-release" ["l"="36.58,0.969"]
"buddy-compiler/buddy-mlir" ["l"="37.088,0.996"]
"llvm/circt" ["l"="31.812,-3.85", "c"=188]
"openxla/stablehlo" ["l"="37.147,1.037"]
"ermig1979/Simd" ["l"="-19.57,-26.205", "c"=10]
"ARM-software/optimized-routines" ["l"="37.164,0.667"]
"andrepuschmann/math-neon" ["l"="37.147,0.65"]
"kfrlib/kfr" ["l"="38.349,5.564", "c"=65]
"chenzomi12/AISystem" ["l"="36.88,0.686"]
"arrayfire/arrayfire" ["l"="64.369,-1.965", "c"=477]
"zwang4/awesome-machine-learning-in-compilers" ["l"="37.076,1.018"]
"KnowingNothing/compiler-and-arch" ["l"="36.989,1.015"]
"google/ml-compiler-opt" ["l"="37.128,1.071"]
"shining1984/PL-Compiler-Resource" ["l"="-22.236,-18.462", "c"=763]
"Evian-Zhang/llvm-ir-tutorial" ["l"="-22.235,-18.49", "c"=763]
"lshqqytiger/ZLUDA" ["l"="37.249,1.419"]
"NVIDIA/open-gpu-kernel-modules" ["l"="-14.222,-0.729", "c"=152]
"tracel-ai/burn" ["l"="-8.427,-4.429", "c"=407]
"HigherOrderCO/Bend" ["l"="-13.543,-7.868", "c"=86]
"vladmandic/sdnext" ["l"="32.217,31.686", "c"=88]
"doitsujin/dxvk" ["l"="-14.378,-0.817", "c"=152]
"Rust-GPU/Rust-CUDA" ["l"="-8.371,-4.458", "c"=407]
"rui314/mold" ["l"="-19.648,-25.785", "c"=10]
"huggingface/candle" ["l"="-8.472,-4.459", "c"=407]
"gfx-rs/wgpu" ["l"="-9.765,-4.35", "c"=227]
"ValveSoftware/Proton" ["l"="-14.321,-0.851", "c"=152]
"NVIDIA/nvidia-container-toolkit" ["l"="7.209,-11.422", "c"=515]
"mlpack/mlpack" ["l"="47.673,29.17", "c"=89]
"Jittor/jittor" ["l"="49.956,29.805", "c"=83]
"stas00/ml-engineering" ["l"="40.346,0.666", "c"=7]
"NVIDIA/stdexec" ["l"="-19.877,-26.042", "c"=10]
"srush/Triton-Puzzles" ["l"="38.988,-0.306", "c"=39]
"HazyResearch/ThunderKittens" ["l"="38.957,-0.343", "c"=39]
"huangrt01/CS-Notes" ["l"="-6.607,19.402", "c"=637]
"plctlab/PLCT-Weekly" ["l"="-22.338,-18.413", "c"=763]
"NervanaSystems/neon" ["l"="47.851,29.03", "c"=89]
"soumith/convnet-benchmarks" ["l"="47.812,29.023", "c"=89]
"andersbll/deeppy" ["l"="48.009,28.516", "c"=89]
"alibaba/heterogeneity-aware-lowering-and-optimization" ["l"="37.1,0.927"]
"martinus/nanobench" ["l"="-19.895,-26.103", "c"=10]
"xtensor-stack/xsimd" ["l"="-19.688,-26.103", "c"=10]
"eliaskosunen/scnlib" ["l"="-19.933,-26.131", "c"=10]
"neka-nat/cupoch" ["l"="58.188,10.094", "c"=142]
"nvidia-isaac/nvblox" ["l"="59.35,11.266", "c"=87]
"jfalcou/eve" ["l"="-19.782,-26.145", "c"=10]
"eBay/maxDNN" ["l"="36.928,0.893"]
"hyqneuron/asfermi" ["l"="36.958,0.906"]
"google/ruy" ["l"="37.24,0.87"]
"codeplaysoftware/portBLAS" ["l"="64.206,-2.007", "c"=477]
"uxlfoundation/oneMath" ["l"="64.167,-1.95", "c"=477]
"daadaada/gas" ["l"="36.971,0.808"]
"xiuxiazhang/KeplerAs" ["l"="36.967,0.891"]
"NVIDIA-Merlin/NVTabular" ["l"="58.228,23.615", "c"=161]
"msr-fiddle/pipedream" ["l"="7.319,-11.064", "c"=515]
"snuspl/nimble" ["l"="36.995,0.727"]
"CppCon/CppCon2020" ["l"="-19.763,-26.088", "c"=10]
"openhackathons-org/gpubootcamp" ["l"="36.652,1.081"]
"openhackathons-org/End-to-End-AI-for-Science" ["l"="36.606,1.137"]
"nv-legate/cupynumeric" ["l"="36.633,1.023"]
"omlins/ParallelStencil.jl" ["l"="22.116,16.853", "c"=77]
"NVIDIA/hpc-container-maker" ["l"="7.171,-13.781", "c"=893]
"intel/intel-extension-for-pytorch" ["l"="64.147,-2.455", "c"=1153]
"sophgo/tpu-mlir" ["l"="37.081,0.976"]
"KEKE046/mlir-tutorial" ["l"="37.071,0.995"]
"bytedance/byteir" ["l"="37.062,1.01"]
"iml130/mlir-emitc" ["l"="37.165,1.063"]
"othmanus/algeria-cities" ["l"="-10.734,-29.149", "c"=1173]
"Adlik/Adlik" ["l"="37.067,0.813"]
"Adlik/model_optimizer_tf" ["l"="37.067,0.76"]
"Adlik/model_optimizer" ["l"="37.054,0.768"]
"YanshiShield/YanshiShield" ["l"="37.064,0.779"]
"OpenPPL/ppq" ["l"="52.571,33.354", "c"=271]
"ModelTC/MQBench" ["l"="52.551,33.403", "c"=271]
"OpenPPL/ppl.cv" ["l"="37.016,0.812"]
"666DZY666/micronet" ["l"="52.669,33.387", "c"=271]
"ChrisCummins/ProGraML" ["l"="35.929,-0.355", "c"=315]
"Tencent/TurboTransformers" ["l"="53.292,27.093", "c"=60]
"bytedance/ByteTransformer" ["l"="36.968,0.992"]
"bondhugula/pluto" ["l"="37.108,1.083"]
"libxsmm/tpp-mlir" ["l"="37.172,1.093"]
"bytedance/effective_transformer" ["l"="53.242,27.037", "c"=60]
"bytedance/matxscript" ["l"="37.032,1.037"]
"sai-bi/L1Flattening" ["l"="64.15,1.578", "c"=134]
"wliusjtu/Real-time-Image-Smoothing-via-Iterative-Least-Squares" ["l"="37.257,0.307"]
"wliusjtu/Generalized-Smoothing-Framework" ["l"="37.251,0.323"]
"fergaletto/GVWA" ["l"="37.247,0.292"]
"uploadcare/pillow-simd" ["l"="51.04,29.838", "c"=83]
"ARM-software/abi-aa" ["l"="-17.793,-43.177", "c"=55]
"learn-llvm/awesome-llvm" ["l"="-22.182,-18.51", "c"=763]
"intel/neural-compressor" ["l"="64.182,-2.465", "c"=1153]
"zchrissirhcz/awesome-ncnn" ["l"="49.574,30.912", "c"=1055]
"BRTResearch/AIChip_Paper_List" ["l"="31.013,-2.907", "c"=1037]
"facebookresearch/dietgpu" ["l"="-39.322,21.111", "c"=563]
"szcompressor/cuSZ" ["l"="-18.958,-26.214", "c"=10]
"dingwentao/GPU-lossless-compression" ["l"="-18.864,-26.242", "c"=10]
"eyalroz/cuda-kat" ["l"="36.631,1.052"]
"NVIDIA/gds-nvidia-fs" ["l"="1.81,14.471", "c"=572]
"powturbo/Turbo-Range-Coder" ["l"="-39.232,21.108", "c"=563]
"LLNL/zfp" ["l"="-19.162,-26.154", "c"=10]
"IlyaGrebnov/libsais" ["l"="-39.286,21.166", "c"=563]
"sleeepyjack/warpcore" ["l"="36.609,1.013"]
"muellan/metacache" ["l"="36.574,1.053"]
"bytedance/lightseq" ["l"="53.268,27.061", "c"=60]
"NVIDIA/tensorflow" ["l"="7.18,-11.491", "c"=515]
"NVIDIA/cudnn-frontend" ["l"="36.877,0.989"]
"NVIDIA-Merlin/HierarchicalKV" ["l"="58.167,23.63", "c"=161]
"uwsampl/SparseTIR" ["l"="36.988,1.059"]
"mirage-project/mirage" ["l"="39.025,-0.348", "c"=39]
"MegEngine/MegEngine" ["l"="49.984,29.855", "c"=83]
"microsoft/antares" ["l"="-53.002,-11.836", "c"=400]
"PacktPublishing/Learn-LLVM-12" ["l"="-22.26,-18.517", "c"=763]
"ai2cm/pace" ["l"="37.498,1.193"]
"GridTools/serialbox" ["l"="37.478,1.205"]
"huawei-noah/AdderNet" ["l"="50.611,30.068", "c"=83]
"numba/llvmlite" ["l"="-22.049,-18.429", "c"=763]
"exo-lang/exo" ["l"="31.652,-2.52", "c"=212]
"expnkx/fast_io" ["l"="-19.85,-26.138", "c"=10]
"intel/pti-gpu" ["l"="64.172,-1.99", "c"=477]
"intel/mlir-extensions" ["l"="37.188,1.113"]
"ctuning/ck-autotuning" ["l"="37.641,0.864"]
"ctuning/ck-env" ["l"="37.653,0.863"]
"ctuning/ck-math" ["l"="37.647,0.89"]
"ctuning/ck-crowdnode" ["l"="37.643,0.879"]
"ctuning/ck-crowdtuning" ["l"="37.668,0.889"]
"ctuning/ck-analytics" ["l"="37.661,0.872"]
"ctuning/ck-web" ["l"="37.663,0.883"]
"ctuning/ck-docker" ["l"="37.658,0.891"]
"ctuning/ck-dissemination-modules" ["l"="37.653,0.883"]
"ctuning/ck-ext-far-manager-plugin" ["l"="37.641,0.852"]
"ctuning/ck-crowdtuning-platforms" ["l"="37.667,0.849"]
"ctuning/artifact-evaluation" ["l"="37.651,0.872"]
"ctuning/ck-web-adapt-workshop" ["l"="37.651,0.852"]
"ctuning/ck-dev-compilers" ["l"="37.657,0.845"]
"wangzyon/NVIDIA_SGEMM_PRACTICE" ["l"="36.872,0.925"]
"66RING/tiny-flash-attention" ["l"="36.836,0.957"]
"XiaoSong9905/CUDA-Optimization-Guide" ["l"="36.856,0.91"]
"AyakaGEMM/Hands-on-GEMM" ["l"="36.884,0.944"]
"xdslproject/xdsl" ["l"="37.189,1.088"]
"UIUC-ChenLab/scalehls" ["l"="31.665,-2.547", "c"=212]
"Xilinx/mlir-aie" ["l"="31.71,-2.53", "c"=212]
"Meinersbur/ppcg" ["l"="37.114,1.101"]
"onnx/optimizer" ["l"="-44.239,6.049", "c"=1131]
"banach-space/clang-tutor" ["l"="-22.157,-18.536", "c"=763]
"s-gupta/rcnn-depth" ["l"="47.897,35.704", "c"=695]
"aovoc/nnieqat-pytorch" ["l"="51.57,33.197", "c"=354]
"msnh2012/CasiaLabeler" ["l"="37.037,0.643"]
"zerollzeng/tiny-tensorrt" ["l"="53.231,32.666", "c"=251]
"tanluren/yolov3-channel-and-layer-pruning" ["l"="52.798,33.345", "c"=271]
"NVIDIA/nsight-training" ["l"="36.638,1.173"]
"cwpearson/nvidia-performance-tools" ["l"="36.663,1.134"]
"Maratyszcza/PeachPy" ["l"="45.375,20.845", "c"=20]
"wjc404/GEMM_AVX512F" ["l"="36.974,0.83"]
"sh1r0/caffe-android-lib" ["l"="32.897,29.038", "c"=57]
"dmlc/HalideIR" ["l"="37.05,1.071"]
"inducer/pymbolic" ["l"="-35.978,22.904", "c"=630]
"MethodJiao/VulkanDemo" ["l"="36.703,0.656"]
"MethodJiao/GoSample" ["l"="36.71,0.669"]
"MethodJiao/OCCGraphicDemo" ["l"="36.687,0.659"]
"akingse/learn_python" ["l"="36.696,0.672"]
"plctlab/PLCT-Open-Reports" ["l"="-22.322,-18.439", "c"=763]
"mmperf/mmperf" ["l"="37.298,0.965"]
"deepspeedai/DeepSpeed-Kernels" ["l"="37.32,0.886"]
"oneapi-src/oneAPI-samples" ["l"="64.161,-1.972", "c"=477]
"huawei-noah/vega" ["l"="52.84,34.038", "c"=708]
"NervanaSystems/nervana-lib-gpu-performance-preview" ["l"="36.796,0.833"]
"nox-410/tvm.tl" ["l"="36.989,1.105"]
"tvmai/tvmai.github.io" ["l"="37.025,1.152"]
"gussmith23/glenside" ["l"="37.028,1.222"]
"uwplse/ruler" ["l"="-0.634,15.379", "c"=729]
"grimoire/mmdetection-to-tensorrt" ["l"="53.194,32.721", "c"=251]
"hughperkins/DeepCL" ["l"="64.334,-2.04", "c"=477]
"snuspl/dolphin" ["l"="36.976,0.563"]
"shinpei0208/gdev" ["l"="7.417,-11.263", "c"=515]
"laanwj/decuda" ["l"="36.967,0.947"]
"dividiti/gemmbench-adapt16" ["l"="37.678,0.852"]
"ctuning/ck-guide-images" ["l"="37.682,0.884"]
"ctuning/ctuning-programs" ["l"="37.672,0.874"]
"dividiti/gemmbench" ["l"="37.672,0.864"]
"Cambricon/ffmpeg-mlu" ["l"="37.478,1.087"]
"Cambricon/easydk" ["l"="37.5,1.091"]
"Cambricon/mlu-ops" ["l"="37.32,1.074"]
"Cambricon/cambricon-k8s-device-plugin" ["l"="37.522,1.101"]
"CambriconKnight/dev-env-ubuntu" ["l"="37.491,1.074"]
"Cambricon/CN-GDB" ["l"="37.492,1.117"]
"superlich7/Paddle-Lite" ["l"="37.464,1.07"]
"CambriconKnight/mlu220-cross-compile-docker-image" ["l"="37.48,1.067"]
"Cambricon/mlu-exporter" ["l"="37.546,1.105"]
"buaa-hipo/dlcompiler-comparison" ["l"="-18.621,-43.224", "c"=55]
"uwsampl/sparsetir-artifact" ["l"="36.959,1.094"]
"xingdi-eric-yuan/single-layer-convnet" ["l"="36.758,0.521"]
"xingdi-eric-yuan/multi-layer-convnet" ["l"="36.775,0.512"]
"NVIDIA/Fuser" ["l"="36.753,1.036"]
"microsoft/NPKit" ["l"="1.996,14.528", "c"=572]
"bryancatanzaro/trove" ["l"="36.696,1.06"]
"openucx/ucc" ["l"="1.979,14.514", "c"=572]
"Xilinx/mlir-air" ["l"="31.704,-2.507", "c"=212]
"jmgorius/mlir-standalone-template" ["l"="37.219,1.093"]
"tancheng/mlir-cgra" ["l"="32.733,-3.375", "c"=180]
"Archermmt/tvm_walk_through" ["l"="37.035,1.084"]
"apache/tvm-rfcs" ["l"="37.005,1.095"]
"awslabs/raf" ["l"="36.981,1.09"]
"mlc-ai/notebooks" ["l"="36.984,1.046"]
"anirudhsundar/tvm-gdb-commands" ["l"="37.006,1.117"]
"wzh99/relay-mlir" ["l"="37.01,1.159"]
"octoml/octoml-profile" ["l"="36.998,1.128"]
"oneapi-src/level-zero" ["l"="64.182,-1.977", "c"=477]
"pigirons/sgemm_hsw" ["l"="37.008,0.9"]
"BBuf/how-to-optimize-gemm" ["l"="37.036,0.887"]
"pigirons/conv3x3_m1" ["l"="37.001,0.828"]
"UCLA-VAST/AutoSA" ["l"="31.686,-2.589", "c"=212]
"nosferalatu/SimpleGPUHashTable" ["l"="36.599,0.984"]
"NVlabs/fermat" ["l"="-24.515,-27.944", "c"=145]
"mgaudet/CompilerJobs" ["l"="-22.171,-18.601", "c"=763]
"LLNL/merlin" ["l"="37.671,1.23"]
"LLNL/maestrowf" ["l"="37.677,1.253"]
"makslevental/nelli" ["l"="37.229,1.107"]
"numba/numba-mlir" ["l"="37.213,1.117"]
"makslevental/mlir-python-extras" ["l"="37.25,1.11"]
"google/mlir-npcomp" ["l"="37.26,1.071"]
"iree-org/iree-turbine" ["l"="37.227,1.161"]
"FluidNumerics/gpu-programming" ["l"="36.519,1.21"]
"uxlfoundation/oneCCL" ["l"="64.165,-1.916", "c"=477]
"pprp/landmark_annotation" ["l"="50.322,29.289", "c"=83]
"FeiGeChuanShu/ncnn_nanodet_hand" ["l"="49.635,30.895", "c"=1055]
"ROCm/Tensile" ["l"="64.201,-1.765", "c"=477]
"iree-org/iree-llvm-sandbox" ["l"="37.26,1.027"]
"nod-ai/iree-amd-aie" ["l"="31.716,-2.493", "c"=212]
"ROCm/rocSOLVER" ["l"="64.236,-1.749", "c"=477]
"pika-org/pika" ["l"="37.507,0.999"]
"Meinersbur/isl" ["l"="37.107,1.125"]
"circt-hls/circt-hls" ["l"="31.626,-2.497", "c"=212]
"kumasento/polsca" ["l"="37.188,1.131"]
"polymage-labs/mlirx" ["l"="37.185,1.148"]
"SeventhBlue/cudaLearningMaterials" ["l"="36.731,0.737"]
"Saint-forWisdom/CUDA_ParallelPragram" ["l"="36.745,0.744"]
"rise-lang/shine" ["l"="37.135,1.288"]
"rise-lang/rise" ["l"="37.134,1.319"]
"YashasSamaga/ConvolutionBuildingBlocks" ["l"="37.006,0.699"]
"jaywonchung/dotfiles" ["l"="36.978,0.683"]
"friendliai/periflow-cli" ["l"="36.981,0.672"]
"ShiqiYu/CPP" ["l"="-5.578,20.111", "c"=564]
"l0ngc/hpc-learning" ["l"="36.866,0.856"]
"harrism/hemi" ["l"="36.624,0.927"]
"baidu-research/persistent-rnn" ["l"="46.007,27.733", "c"=277]
"antonmks/Alenka" ["l"="-15.808,-8.27", "c"=1915]
"rose-compiler/rose" ["l"="-22.073,-18.657", "c"=763]
"spcl/ncc" ["l"="35.927,-0.392", "c"=315]
"facebookresearch/loop_tool" ["l"="37.093,1.166"]
"MatthieuCourbariaux/BinaryNet" ["l"="52.596,33.617", "c"=271]
"tile-ai/tilelang" ["l"="39.012,-0.362", "c"=39]
"ai-dynamo/dynamo" ["l"="39.067,-0.549", "c"=39]
"NVIDIA/warp" ["l"="61.236,16.348", "c"=184]
"uxlfoundation/oneTBB" ["l"="-19.813,-25.686", "c"=10]
"STEllAR-GROUP/hpx" ["l"="-19.82,-26.088", "c"=10]
"ericniebler/range-v3" ["l"="-19.86,-26.027", "c"=10]
"xtensor-stack/xtensor" ["l"="-19.991,-25.883", "c"=10]
"tzutalin/ImageNet_Utils" ["l"="50.47,33.025", "c"=314]
"dividiti/ck-caffe" ["l"="37.687,0.869"]
"roastduck/FreeTensor" ["l"="36.972,1.07"]
"thu-pacman/HyQuas" ["l"="36.937,1.127"]
"NVIDIA/caffe" ["l"="51.536,33.367", "c"=354]
"eedalong/ECE408" ["l"="36.56,0.856"]
"aschuh703/ECE408" ["l"="36.512,0.85"]
"Atcold/NYU-DLSP21" ["l"="47.9,26.467", "c"=323]
"minitorch/minitorch" ["l"="36.908,0.724"]
"intel/idlf" ["l"="57.709,23.492", "c"=161]
"open-mmlab/mmdeploy" ["l"="50.347,29.856", "c"=83]
"OpenPPL/ppl.llm.kernel.cuda" ["l"="37.002,0.778"]
"openppl-public/ppl.nn.llm" ["l"="37.009,0.761"]
"dmlc/dmlc-core" ["l"="57.828,23.524", "c"=161]
"ifromeast/cuda_learning" ["l"="36.839,0.915"]
"kjw0612/awesome-random-forest" ["l"="47.841,28.88", "c"=89]
"DeepMark/deepmark" ["l"="45.942,27.676", "c"=277]
"bshillingford/autobw.torch" ["l"="45.948,27.696", "c"=277]
"joschu/cgt" ["l"="44.924,27.689", "c"=789]
"Tencent/PatrickStar" ["l"="58.103,23.704", "c"=161]
"canonizer/halloc" ["l"="-15.838,-8.306", "c"=1915]
"uoguelph-mlrg/theano_alexnet" ["l"="44.883,27.597", "c"=789]
"gcr/torch-residual-networks" ["l"="45.946,27.638", "c"=277]
"dmlc/cxxnet" ["l"="57.767,23.488", "c"=161]
"dmlc/mshadow" ["l"="57.832,23.546", "c"=161]
"RRZE-HPC/likwid" ["l"="6.737,-6.263", "c"=335]
"trailofbits/vast" ["l"="-21.996,-18.568", "c"=763]
"datastaxdevs/workshop-graphql-netflix" ["l"="-1.327,18.969", "c"=1217]
"RomaTeng/EKF-SLAM-on-Manifold" ["l"="59.629,10.926", "c"=87]
"csmith-project/creduce" ["l"="-22.084,-18.599", "c"=763]
"snuspl/fluffy" ["l"="36.996,0.676"]
"xboxfanj/math-neon" ["l"="37.152,0.597"]
"tlc-pack/tenset" ["l"="36.972,1.083"]
"zhaiyi000/tlm" ["l"="36.972,1.111"]
"awslabs/slapo" ["l"="36.954,1.077"]
"PKUFlyingPig/CS149-parallel-computing" ["l"="-7.005,19.484", "c"=637]
"Jack47/hack-SysML" ["l"="36.967,0.924"]
"mlc-ai/mlc-zh" ["l"="37.001,0.967"]
"sgl-project/sgl-learning-materials" ["l"="39.042,-0.418", "c"=39]
"sail-sg/zero-bubble-pipeline-parallelism" ["l"="38.894,-0.45", "c"=39]
"petuum/adaptdl" ["l"="7.35,-11.154", "c"=515]
"mlc-ai/relax" ["l"="36.978,1.128"]
"P2Tree/LLVM_for_cpu0" ["l"="-22.301,-18.529", "c"=763]
"Lewuathe/mlir-hello" ["l"="37.166,1.037"]
"pytorch/data" ["l"="21.583,14.144", "c"=267]
"buddy-compiler/buddy-benchmark" ["l"="37.084,1.044"]
"xiaoweiChen/Learn-LLVM-12" ["l"="-22.271,-18.495", "c"=763]
"ChunelFeng/CGraph" ["l"="-18.429,-28.228", "c"=62]
"nv-legate/legate" ["l"="36.587,1.084"]
"nv-legate/legate.pandas" ["l"="36.568,1.076"]
"StanfordLegion/legion" ["l"="63.262,-1.411", "c"=175]
"rapidsai/cucim" ["l"="41.798,27.336", "c"=369]
"LLNL/RAJA" ["l"="63.182,-1.42", "c"=175]
"hypre-space/hypre" ["l"="63.12,-1.518", "c"=175]
"PyFR/PyFR" ["l"="63.226,-1.553", "c"=175]
"BaguaSys/bagua" ["l"="58.072,23.632", "c"=161]
"BaguaSys/bagua-core" ["l"="37.77,1.257"]
"intel/graph-compiler" ["l"="37.208,1.138"]
"NodLabs/mlir-examples" ["l"="37.209,1.158"]
"llvm/mlir-www" ["l"="37.216,1.179"]
"hughperkins/cltorch" ["l"="64.385,-2.014", "c"=477]
"Eddie-Wang1120/Professional-CUDA-C-Programming-Code-and-Notes" ["l"="36.819,0.877"]
"ArchaeaSoftware/cudahandbook" ["l"="36.707,0.88"]
"Tencent/Forward" ["l"="53.248,32.753", "c"=251]
"xboot/libonnx" ["l"="-16.13,-42.602", "c"=387]
"YuanhaoGong/Naturalization" ["l"="37.205,0.366"]
"timothybrooks/hdr-plus" ["l"="-34.635,22.379", "c"=429]
"OpenPPL/ppl.common" ["l"="37.016,0.781"]
"nndeploy/nndeploy" ["l"="53.413,32.627", "c"=251]
"Tencent/TPAT" ["l"="53.265,32.712", "c"=251]
"NVIDIA-AI-IOT/tensorrt_plugin_generator" ["l"="53.339,32.618", "c"=251]
"ROCm/composable_kernel" ["l"="64.195,-1.714", "c"=477]
"nv-legate/legate-sparse" ["l"="36.555,1.114"]
"nv-legate/legate.hello" ["l"="36.56,1.097"]
"tbennun/cudnn-training" ["l"="36.847,1.125"]
"pwlnk/cuda-neural-network" ["l"="36.823,1.207"]
"Hardware-Alchemy/cuDNN-sample" ["l"="36.821,1.172"]
"haanjack/mnist-cudnn" ["l"="36.838,1.181"]
"JuliaHubOSS/llvm-cbe" ["l"="-22.045,-18.662", "c"=763]
"NVlabs/SASSI" ["l"="30.934,-3.006", "c"=1037]
"cmu-catalyst/collage" ["l"="36.964,1.056"]
"fanshiqing/grouped_gemm" ["l"="36.845,1.061"]
"tspeterkim/flash-attention-minimal" ["l"="36.84,0.934"]
"FlagOpen/FlagGems" ["l"="39.023,-0.372", "c"=39]
"Lunderberg/tvm-gdb-extension" ["l"="37.001,1.148"]
"jaywonchung/reason" ["l"="7.426,-11.022", "c"=515]
"MegEngine/mperf" ["l"="37.08,0.859"]
"MegEngine/cutlass" ["l"="36.918,1.023"]
"google/nccl-fastsocket" ["l"="1.993,14.511", "c"=572]
"BaguaSys/operator" ["l"="37.799,1.247"]
"BaguaSys/tutorials" ["l"="37.776,1.243"]
"Pylir/Pylir" ["l"="37.369,1.173"]
"beaver-lodge/beaver" ["l"="37.42,1.199"]
"Checkmate50/pylambda" ["l"="37.424,1.223"]
"OpenPPL/hpcc" ["l"="37.005,0.795"]
"fergaletto/SSIF" ["l"="37.26,0.263"]
"hkust-adsl/gass" ["l"="36.968,0.758"]
"swsnu/aisys2021" ["l"="36.965,0.653"]
"srush/Tensor-Puzzles" ["l"="39.063,-0.265", "c"=39]
"TingsongYu/PyTorch-Tutorial-2nd" ["l"="38.602,-1.993", "c"=202]
"elemental/Elemental" ["l"="21.988,17.613", "c"=863]
"parallel101/course" ["l"="-18.547,-28.095", "c"=62]
"google/inception" ["l"="50.686,33.174", "c"=314]
"srush/GPU-Puzzles" ["l"="40.187,0.851", "c"=7]
"srush/LLM-Training-Puzzles" ["l"="39.012,-0.261", "c"=39]
"pytorch/torchtitan" ["l"="38.89,-0.387", "c"=39]
"zchee/cuda-sample" ["l"="36.887,0.862"]
"lzhengchun/matrix-cuda" ["l"="36.945,0.784"]
"andersbll/neural_artistic_style" ["l"="45.619,29.444", "c"=170]
"shibatch/sleef" ["l"="-19.583,-26.167", "c"=10]
"amd/OpenCL-caffe" ["l"="64.359,-2.01", "c"=477]
"MAhaitao999/CUDA_Programming" ["l"="36.767,0.74"]
"QINZHAOYU/CudaSteps" ["l"="36.774,0.774"]
"pytorch/PiPPy" ["l"="38.928,-0.444", "c"=39]
"ELS-RD/kernl" ["l"="38.86,-0.528", "c"=39]
"hidet-org/hidet" ["l"="37.029,1.013"]
"pytorch/benchmark" ["l"="39.161,-0.455", "c"=39]
"DD-DuDa/Cute-Learning" ["l"="36.826,0.978"]
"ZhangGe6/onnx-modifier" ["l"="-44.202,6.021", "c"=1131]
"facebookarchive/fb-caffe-exts" ["l"="45.897,27.647", "c"=277]
"nod-ai/SHARK-Studio" ["l"="37.203,1.236"]
"Amblyopius/Stable-Diffusion-ONNX-FP16" ["l"="37.257,1.344"]
"azuritecoin/OnnxDiffusersUI" ["l"="37.261,1.322"]
"YellowRoseCx/koboldcpp-rocm" ["l"="37.217,1.4"]
"ssube/onnx-web" ["l"="37.298,1.345"]
"nod-ai/SHARK-ModelDev" ["l"="37.233,1.206"]
"HeKun-NVIDIA/TensorRT-Developer_Guide_in_Chinese" ["l"="53.345,32.676", "c"=251]
"PaddleJitLab/CUDATutorial" ["l"="36.846,0.856"]
"Maratyszcza/pthreadpool" ["l"="37.196,0.629"]
"Maratyszcza/FP16" ["l"="37.234,0.561"]
"Maratyszcza/FXdiv" ["l"="37.215,0.584"]
"coderonion/cuda-beginner-course-cpp-version" ["l"="36.747,0.726"]
"HuangCongQing/cuda-learning" ["l"="36.731,0.721"]
"Tongkaio/CUDA_Kernel_Samples" ["l"="36.838,0.894"]
"pytorch/executorch" ["l"="39.047,-0.352", "c"=39]
"ARM-software/acle" ["l"="37.185,0.589"]
"JuliaMath/openlibm" ["l"="-19.441,-26.254", "c"=10]
"libhugetlbfs/libhugetlbfs" ["l"="6.625,-6.182", "c"=335]
"kdrag0n/adevtool" ["l"="-55.495,11.937", "c"=427]
"ARM-software/synchronization-benchmarks" ["l"="37.174,0.612"]
"RRZE-HPC/OSACA" ["l"="6.665,-6.247", "c"=335]
"sophgo/sophon-demo" ["l"="53.527,32.6", "c"=251]
"sophgo/LLM-TPU" ["l"="53.562,32.57", "c"=251]
"Cambricon/triton-linalg" ["l"="37.151,1.054"]
"Jonathan2251/lbd" ["l"="-22.291,-18.564", "c"=763]
"inikep/lzbench" ["l"="-39.198,21.101", "c"=563]
"DeepRec-AI/DeepRec" ["l"="58.15,23.519", "c"=161]
"autodiff/autodiff" ["l"="-19.556,-25.891", "c"=10]
"NVIDIA/AMGX" ["l"="63.137,-1.54", "c"=175]
"Ascend/pytorch" ["l"="37.091,1.138"]
"vllm-project/vllm-ascend" ["l"="39.065,-0.502", "c"=39]
"pcg-mlp/KsanaLLM" ["l"="39.07,-0.357", "c"=39]
"microsoft/triton-shared" ["l"="37.113,1.064"]
"Cambricon/torch_mlu" ["l"="37.086,1.19"]
"bdhirsh/pytorch_open_registration_example" ["l"="37.104,1.19"]
"Ascend/AscendSpeed" ["l"="37.094,1.213"]
"joyycom/VNN" ["l"="61.974,-14.238", "c"=165]
"Bruce-Lee-LY/flash_attention_inference" ["l"="36.812,1.016"]
"Erkaman/Awesome-CUDA" ["l"="36.656,0.933"]
"eegkno/CUDA_by_practice" ["l"="36.707,1.025"]
"ducha-aiki/caffenet-benchmark" ["l"="50.619,33.182", "c"=314]
"ROCm/rocBLAS" ["l"="64.222,-1.797", "c"=477]
"Cambricon/catch" ["l"="37.358,1.066"]
"Artelnics/opennn" ["l"="47.692,29.201", "c"=89]
"hpcaitech/EnergonAI" ["l"="38.988,-0.837", "c"=39]
"opencompl/paper-template" ["l"="37.229,1.128"]
"opencompl/lean-mlir" ["l"="37.259,1.138"]
"alibaba/EasyParallelLibrary" ["l"="58.143,23.672", "c"=161]
"egraphs-good/egglog" ["l"="-0.635,15.286", "c"=729]
"mlc-ai/mlc-en" ["l"="36.971,1.029"]
"intel/xpumanager" ["l"="63.973,-2.549", "c"=1153]
"mlir-rs/mlir-sys" ["l"="37.293,1.113"]
"vaivaswatha/pliron" ["l"="37.277,1.095"]
"TheDan64/inkwell" ["l"="-9.62,-6.368", "c"=5]
"siboehm/ShallowSpeed" ["l"="57.711,23.683", "c"=161]
"oneapi-src/SYCLomatic" ["l"="64.135,-1.986", "c"=477]
"stressapptest/stressapptest" ["l"="6.811,-6.347", "c"=335]
"Cpp-Project-Manager/Cpp-Project-Manager" ["l"="37.512,1.29"]
"Maou-Shimazu/Projects-Answers" ["l"="37.49,1.274"]
"shen203/GPU_Microbenchmark" ["l"="36.9,1.016"]
"hyperai/tvm-cn" ["l"="51.15,2.773", "c"=85]
"hunterzju/llvm-tutorial" ["l"="-22.294,-18.505", "c"=763]
"nullishamy/kate" ["l"="37.47,1.257"]
"lixiuhong/implicit_gemm_convolution" ["l"="36.928,0.975"]
"microsoft/SparTA" ["l"="63.148,-2.039", "c"=175]
"ARM-software/CMSIS-NN" ["l"="-16.1,-42.535", "c"=387]
"XiaoSong9905/HPC-Notes" ["l"="36.873,0.906"]
"XiaoSong9905/dgemm-knl" ["l"="36.859,0.924"]
"awslabs/ratex" ["l"="36.951,1.137"]
"comaniac/epoi" ["l"="36.962,1.134"]
"nicolaswilde/cuda-sgemm" ["l"="36.906,0.986"]
"tud-zih-energy/x86_adapt" ["l"="37.003,0.441"]
"tud-zih-energy/x86_energy" ["l"="36.989,0.446"]
"chenzomi12/AIInfra" ["l"="36.843,0.717"]
"liguodongiot/llm-action" ["l"="38.757,-2.008", "c"=202]
"mli/paper-reading" ["l"="50.604,29.465", "c"=83]
"sgl-project/sglang" ["l"="38.933,-0.652", "c"=39]
"NVIDIA/Megatron-LM" ["l"="38.862,-0.695", "c"=39]
"Dao-AILab/flash-attention" ["l"="38.876,-0.736", "c"=39]
"vllm-project/vllm" ["l"="40.265,0.397", "c"=7]
"herumi/xbyak" ["l"="-42.604,-35.222", "c"=40]
"intel/caffe" ["l"="51.559,33.341", "c"=354]
"uxlfoundation/oneDAL" ["l"="64.15,-1.932", "c"=477]
"openxla/community" ["l"="37.208,1.046"]
"openxla/shardy" ["l"="37.237,1.147"]
"Visualize-ML/Book4_Power-of-Matrix" ["l"="51.281,28.209", "c"=104]
"facebookarchive/clangir" ["l"="-21.928,-18.557", "c"=763]
"chhzh123/ptc-tutorial" ["l"="36.933,1.108"]
"patientx/ComfyUI-Zluda" ["l"="37.247,1.437"]
"lshqqytiger/stable-diffusion-webui-amdgpu-forge" ["l"="37.232,1.437"]
"Coyote-A/ultimate-upscale-for-automatic1111" ["l"="32.026,31.699", "c"=88]
"pkuliyi2015/multidiffusion-upscaler-for-automatic1111" ["l"="32.128,31.704", "c"=88]
"Bing-su/adetailer" ["l"="32.113,31.688", "c"=88]
"Gourieff/sd-webui-reactor" ["l"="32.151,31.625", "c"=88]
"lllyasviel/stable-diffusion-webui-forge" ["l"="32.266,31.684", "c"=88]
"coreylowman/cudarc" ["l"="-8.349,-4.431", "c"=407]
"n00mkrad/text2image-gui" ["l"="-36.21,21.058", "c"=597]
"zjhellofss/KuiperLLama" ["l"="36.838,0.872"]
"galeselee/Awesome_LLM_System-PaperList" ["l"="39.07,-0.403", "c"=39]
"harleyszhang/llm_note" ["l"="36.815,0.85"]
"romeric/Fastor" ["l"="-19.645,-26.018", "c"=10]
"VoltaML/voltaML" ["l"="31.804,31.935", "c"=88]
"fengbintu/Neural-Networks-on-Silicon" ["l"="31.792,-2.807", "c"=212]
"EdVince/Stable-Diffusion-NCNN" ["l"="49.567,30.83", "c"=1055]
"wangzhaode/mnn-stable-diffusion" ["l"="37.093,0.412"]
"facebookincubator/AITemplate" ["l"="38.855,-0.59", "c"=39]
"zjhellofss/kuiperdatawhale" ["l"="36.796,0.856"]
"yuesong-feng/30dayMakeCppServer" ["l"="-18.203,-28.038", "c"=62]
"reed-lau/cute-gemm" ["l"="36.828,0.998"]
"deepseek-ai/DeepGEMM" ["l"="39.065,-0.638", "c"=39]
"samjabrahams/tensorflow-on-raspberry-pi" ["l"="50.292,32.99", "c"=314]
"ENCP/CNNdroid" ["l"="32.906,29.07", "c"=57]
"alger-ia/dziribert" ["l"="-10.728,-29.096", "c"=1173]
"JbPasquier/stable-diffusion-onnx-ui" ["l"="37.283,1.331"]
"nviennot/core-to-core-latency" ["l"="6.693,-6.227", "c"=335]
"ZTMIDGO/Android-Stable-diffusion-ONNX" ["l"="49.498,30.812", "c"=1055]
"ForserX/StableDiffusionUI" ["l"="37.318,1.365"]
"NeusZimmer/ONNX-Stable-Diffusion-ModularUI" ["l"="37.271,1.362"]
"NeusZimmer/ONNX-ModularUI-StableDiffusion" ["l"="37.285,1.358"]
"uchuusen/onnx_stable_diffusion_controlnet" ["l"="37.285,1.372"]
"sherlockchou86/VideoPipe" ["l"="53.366,32.624", "c"=251]
"mit-han-lab/tinyengine" ["l"="-16.12,-42.541", "c"=387]
"jacobhilton/deep_learning_curriculum" ["l"="37.859,-6.851", "c"=766]
"harleyszhang/dl_note" ["l"="36.801,0.896"]
"harleyszhang/lite_llama" ["l"="36.77,0.855"]
"datawhalechina/awesome-compression" ["l"="51.036,27.763", "c"=104]
"harleyszhang/llm_counts" ["l"="36.745,0.859"]
"harleyszhang/cv_note" ["l"="50.517,28.214", "c"=104]
"microsoft/mscclpp" ["l"="2.009,14.543", "c"=572]
"Eddie-Wang1120/HPC-Learning-Notes" ["l"="36.856,0.879"]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" ["l"="32.995,29.018", "c"=57]
"intel/intel-extension-for-tensorflow" ["l"="64.209,-2.436", "c"=1153]
"codeplaysoftware/cutlass-sycl" ["l"="37.179,1.181"]
"volcengine/veScale" ["l"="38.975,-0.445", "c"=39]
"NVIDIA/NeMo-Framework-Launcher" ["l"="38.638,-0.423", "c"=39]
"ThanatosShinji/onnx-tool" ["l"="-44.224,6.015", "c"=1131]
"CoffeeBeforeArch/cpp_sw_dev" ["l"="36.656,0.731"]
"corsix/amx" ["l"="41.141,-22.949", "c"=419]
"PKUFlyingPig/CMU10-714" ["l"="-7.012,19.537", "c"=637]
"zhangyachen/ComputerArchitectureAndCppBooks" ["l"="-22.544,-23.689", "c"=496]
"Sunt-ing/stick" ["l"="-7.056,19.55", "c"=637]
"ForserX/Asura2D" ["l"="37.342,1.379"]
"yechengxi/LightNet" ["l"="51.233,38.207", "c"=545]
"CoffeeBeforeArch/cache_simulator" ["l"="36.645,0.711"]
"FlagOpen/FlagPerf" ["l"="36.813,1.137"]
"FlagOpen/FlagAttention" ["l"="36.821,1.069"]
"FlagOpen/FlagScale" ["l"="36.775,1.158"]
"FlagTree/flagtree" ["l"="36.795,1.175"]
"bytedance/ByteMLPerf" ["l"="36.911,1.105"]
"wangzyon/trt_learn" ["l"="36.672,1.234"]
"caibucai22/awesome-cuda" ["l"="36.658,1.258"]
"TaKeTube/ECE-408" ["l"="36.478,0.846"]
"OpenPPL/ppl.kernel.cpu" ["l"="36.974,0.709"]
"OpenPPL/ppl.kernel.cuda" ["l"="36.982,0.734"]
"KernelTuner/kernel_tuner" ["l"="64.184,-2.164", "c"=477]
"SJTU-ACA-Lab/blue-porcelain" ["l"="31.961,-3.948", "c"=188]
"openmlsys/openmlsys-cuda" ["l"="36.93,0.999"]
"OpenPPL/ppl.llm.serving" ["l"="36.989,0.757"]
"InfiniTensor/InfiniTensor" ["l"="36.906,1.128"]
"InfiniTensor/RefactorGraph" ["l"="36.903,1.166"]
"InfiniTensor/InfiniLM" ["l"="36.877,1.181"]
"humuyan/Korch" ["l"="36.906,1.192"]
"InfiniTensor/operators" ["l"="36.89,1.161"]
"LearningInfiniTensor/TinyInfiniTensor" ["l"="36.877,1.162"]
"InfiniTensor/ninetoothed" ["l"="36.894,1.179"]
"LearningInfiniTensor/learning-lm-rs" ["l"="36.862,1.166"]
"LearningInfiniTensor/learning-cxx" ["l"="36.847,1.148"]
"wangzhaode/mnn-yolo" ["l"="37.107,0.377"]
"wangzhaode/mnn-mobilenet" ["l"="37.11,0.394"]
"wangzhaode/mnn-segment-anything" ["l"="37.088,0.375"]
"microsoft/BitBLAS" ["l"="38.934,-0.302", "c"=39]
"ZhouJiaHuan/yolo_deploy" ["l"="37.111,0.353"]
"wangzhaode/llm-export" ["l"="37.047,0.52"]
"luchangli03/export_llama_to_onnx" ["l"="37.039,0.594"]
"wangzhaode/mnn-llm" ["l"="-52.926,-11.895", "c"=400]
"tpoisonooo/llama.onnx" ["l"="37.029,0.682"]
"wangzhaode/onnx-llm" ["l"="37.059,0.489"]
"AXERA-TECH/ax-llm" ["l"="-18.538,-42.691", "c"=55]
"intel/ipex-llm" ["l"="-2.505,17.132", "c"=455]
"mlc-ai/web-stable-diffusion" ["l"="40.221,0.663", "c"=7]
"LostRuins/koboldcpp" ["l"="42.745,-2", "c"=1097]
"axodox/axodox-machinelearning" ["l"="40.196,0.988", "c"=7]
"bbycroft/llm-viz" ["l"="40.553,0.364", "c"=7]
"kwea123/pytorch-cppcuda-tutorial" ["l"="63.756,1.729", "c"=134]
"CNugteren/CLTune" ["l"="64.247,-2.099", "c"=477]
"lift-project/lift" ["l"="37.134,1.219"]
"mpitutorial/mpitutorial" ["l"="2.032,14.371", "c"=572]
"pmgysel/caffe" ["l"="52.666,33.591", "c"=271]
"shinezyy/micro-arch-training" ["l"="31.865,-4.01", "c"=188]
"kebijuelun/Awesome-LLM-Learning" ["l"="38.681,-2.11", "c"=202]
"microsoft/EdgeML" ["l"="-16.151,-42.555", "c"=387]
"DT42/BerryNet" ["l"="50.269,33.037", "c"=314]
"majianjia/nnom" ["l"="-16.12,-42.574", "c"=387]
"tiny-dnn/tiny-dnn" ["l"="47.785,29.128", "c"=89]
"tlc-pack/libflash_attn" ["l"="36.855,1.032"]
"alibaba/rtp-llm" ["l"="39.011,-0.464", "c"=39]
"mit-han-lab/omniserve" ["l"="38.923,-0.332", "c"=39]
"MegEngine/InferLLM" ["l"="39.237,-1.998", "c"=202]
"cassiebreviu/StableDiffusion" ["l"="37.457,1.508"]
"TensorStack-AI/OnnxStack" ["l"="37.422,1.464"]
"DarthAffe/StableDiffusion.NET" ["l"="37.447,1.487"]
"andreae293/Stable-Diffusion.NET-NCNN" ["l"="37.48,1.523"]
"dranger003/llama.cpp-dotnet" ["l"="37.488,1.549"]
"harvard-edge/cs249r_book" ["l"="39.094,-0.499", "c"=39]
"vitoplantamura/OnnxStream" ["l"="40.271,0.947", "c"=7]
"google/heir" ["l"="51.329,1.46", "c"=378]
"Umio-Yasuno/amdgpu_top" ["l"="-14.575,-0.834", "c"=152]
"lamikr/rocm_sdk_builder" ["l"="37.205,1.497"]
"He-Ze/HPC-Lab-SYSU" ["l"="36.906,0.852"]
"zjhellofss/KuiperCourse" ["l"="36.726,0.795"]
"HuPengsheet/EasyNN" ["l"="36.721,0.765"]
"xgqdut2016/cuda_code" ["l"="36.801,1.043"]
"apple/axlearn" ["l"="21.797,13.92", "c"=267]
"jcjohnson/cnn-benchmarks" ["l"="50.591,33.163", "c"=314]
"albanie/convnet-burden" ["l"="37.29,0.808"]
"microsoft/Llama-2-Onnx" ["l"="37.057,0.687"]
"microsoft/onnxruntime-genai" ["l"="-44.231,6.165", "c"=1131]
"S-LoRA/S-LoRA" ["l"="38.842,-0.458", "c"=39]
"cli99/llm-analysis" ["l"="39.06,-0.448", "c"=39]
"src-d/kmcuda" ["l"="65.823,11.739", "c"=203]
"cyclops-community/ctf" ["l"="21.924,17.673", "c"=863]
"kennethleungty/Llama-2-Open-Source-LLM-CPU-Inference" ["l"="41.089,-3.631", "c"=146]
"mlc-ai/tokenizers-cpp" ["l"="36.937,1.26"]
"wangkuiyi/huggingface-tokenizer-in-cxx" ["l"="36.921,1.307"]
"brknsoul/ROCmLibs" ["l"="37.219,1.427"]
"likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU" ["l"="37.215,1.454"]
"likelovewant/ollama-for-amd" ["l"="37.191,1.436"]
"nktice/AMD-AI" ["l"="64.158,-1.581", "c"=477]
"likelovewant/stable-diffusion-webui-forge-on-amd" ["l"="37.236,1.453"]
"cierru/st-stepped-thinking" ["l"="43.001,-1.871", "c"=1097]
"ROCm/flash-attention" ["l"="64.181,-1.637", "c"=477]
"jslee02/awesome-gpgpu" ["l"="36.572,0.942"]
"coderonion/awesome-cuda-and-hpc" ["l"="25.664,-26.644", "c"=32]
"facebookarchive/fbcuda" ["l"="46.107,27.655", "c"=277]
"Apress/ray-tracing-gems" ["l"="-23.168,-27.643", "c"=26]
"romain-jacotin/cuda" ["l"="36.531,0.93"]
"SiriusNEO/Triton-Puzzles-Lite" ["l"="39.043,-0.332", "c"=39]
"simit-lang/simit" ["l"="62.843,1.138", "c"=371]
"thuml/depyf" ["l"="39.077,-0.392", "c"=39]
"Xilinx/aie-rt" ["l"="31.758,-2.475", "c"=212]
"makslevental/mlir-wheels" ["l"="37.284,1.134"]
"triton-lang/triton-cpu" ["l"="37.156,1.121"]
"Deep-Learning-Profiling-Tools/triton-viz" ["l"="39.056,-0.223", "c"=39]
"mobiusml/gemlite" ["l"="38.957,-0.27", "c"=39]
"triton-lang/kernels" ["l"="39.016,-0.197", "c"=39]
"ColfaxResearch/cfx-article-src" ["l"="36.843,1.003"]
"FlagAI-Open/Aquila2" ["l"="39.234,-2.107", "c"=202]
"saddam213/LLamaStack" ["l"="37.464,1.465"]
"Stackyard-AI/Amuse" ["l"="37.422,1.499"]
"OpenPPL/ppl.pmx" ["l"="37.001,0.744"]
"daquexian/faster-rwkv" ["l"="49.642,30.752", "c"=1055]
"HuPengsheet/use-ncnn" ["l"="36.679,0.694"]
"shreyansh26/FlashAttention-PyTorch" ["l"="36.761,1.084"]
"kyegomez/FlashAttention20" ["l"="36.72,1.144"]
"zjhellofss/triton_course" ["l"="36.745,0.845"]
"RussWong/LLM-engineering" ["l"="36.808,0.917"]
"tgale96/grouped_gemm" ["l"="36.828,1.047"]
"BobMcDear/attorch" ["l"="38.995,-0.216", "c"=39]
"crabml/crabml" ["l"="-8.876,-4.449", "c"=407]
"PacktPublishing/Learn-LLVM-17" ["l"="-22.237,-18.522", "c"=763]
"tenstorrent/tt-metal" ["l"="37.303,1.189"]
"tenstorrent/tt-buda" ["l"="37.335,1.232"]
"tenstorrent/tt-mlir" ["l"="37.314,1.244"]
"tenstorrent/tt-kmd" ["l"="37.341,1.209"]
"tenstorrent/pytorch2.0_ttnn" ["l"="37.324,1.212"]
"arakhmati/torchtrail" ["l"="37.335,1.19"]
"tenstorrent/ttnn-visualizer" ["l"="37.332,1.175"]
"tenstorrent/tt-smi" ["l"="37.355,1.207"]
"tenstorrent/tt-buda-demos" ["l"="37.358,1.229"]
"tenstorrent/tt-forge-fe" ["l"="37.31,1.224"]
"tenstorrent/tt-firmware" ["l"="37.346,1.22"]
"tenstorrent/tt-tvm" ["l"="37.345,1.241"]
"tenstorrent/tt-forge" ["l"="37.298,1.232"]
"mesozoic-egg/tinygrad-notes" ["l"="-14.328,-23.234", "c"=1101]
"wangsiping97/FastGEMV" ["l"="36.791,1.067"]
"Bruce-Lee-LY/cuda_hgemv" ["l"="36.765,1.117"]
"luchangli03/onnxsim_large_model" ["l"="37.036,0.561"]
"intel/torch-xpu-ops" ["l"="37.175,1.196"]
"pytorch-labs/triton-cpu" ["l"="37.165,1.166"]
"hpretila/llama.net" ["l"="37.508,1.573"]
"FlagOpen/FlagCX" ["l"="36.738,1.196"]
"FlagAI-Open/OpenSeek" ["l"="36.76,1.205"]
"feifeibear/long-context-attention" ["l"="38.982,-0.409", "c"=39]
"alibaba/ChatLearn" ["l"="37.3,-0.348", "c"=126]
"weishengying/cutlass_flash_atten_fp8" ["l"="36.792,0.95"]
"xlite-dev/HGEMM" ["l"="36.855,0.988"]
"luliyucoordinate/cute-flash-attention" ["l"="36.813,0.972"]
"Bruce-Lee-LY/decoding_attention" ["l"="36.744,1.118"]
"weishengying/tiny-flash-attention" ["l"="36.795,0.974"]
"harrism/cpp11-range" ["l"="36.56,0.925"]
"jaredhoberock/bulk" ["l"="36.571,0.913"]
"gsuuon/ad-llama" ["l"="36.989,1.166"]
"nod-ai/shark-ai" ["l"="37.25,1.193"]
"csarofeen/pytorch" ["l"="36.728,1.081"]
"NVIDIA/nvidia-resiliency-ext" ["l"="38.5,-0.255", "c"=39]
"philipturner/metal-flash-attention" ["l"="41.206,-22.978", "c"=419]
"pytorch-labs/applied-ai" ["l"="39.009,-0.227", "c"=39]
"pku-liang/MAGIS" ["l"="37.008,1.196"]
"AsakusaRinne/semantic-kernel-LLamaSharp" ["l"="37.487,1.472"]
"adam-maj/tiny-gpu" ["l"="31.984,-3.886", "c"=188]
"CS1o/Stable-Diffusion-Info" ["l"="37.264,1.46"]
"Beinsezii/comfyui-amd-go-fast" ["l"="37.277,1.438"]
"tinygrad/open-gpu-kernel-modules" ["l"="39.042,-0.376", "c"=39]
"zeux/calm" ["l"="39.087,-0.359", "c"=39]
"CalebDu/Awesome-Cute" ["l"="36.792,0.984"]
"Lightning-AI/lightning-thunder" ["l"="38.865,-0.336", "c"=39]
"gpu-mode/awesomeMLSys" ["l"="39.032,-0.309", "c"=39]
"linkedin/Liger-Kernel" ["l"="38.866,-0.383", "c"=39]
"naibaf7/libdnn" ["l"="37.045,0.747"]
"elevate-lang/elevate" ["l"="37.139,1.257"]
"tenstorrent/tt-budabackend" ["l"="37.356,1.26"]
"tenstorrent/tt-flash" ["l"="37.365,1.22"]
"tenstorrent/luwen" ["l"="37.366,1.24"]
"ByronLeeeee/Ollama-For-AMD-Installer" ["l"="37.182,1.468"]
"HazyResearch/aisys-building-blocks" ["l"="38.989,-0.267", "c"=39]
"MLSys-Learner-Resources/Awesome-MLSys-Blogger" ["l"="39.147,-0.346", "c"=39]
"Said-Akbar/vllm-rocm" ["l"="37.192,1.532"]
"Said-Akbar/triton-gcn5" ["l"="37.203,1.543"]
"ROCm/aiter" ["l"="64.179,-1.687", "c"=477]
"Repeerc/flash-attention-v2-RDNA3-minimal" ["l"="37.291,1.429"]
"fla-org/flash-linear-attention" ["l"="38.943,-0.326", "c"=39]
"hahnyuan/LLM-Viewer" ["l"="39.008,-0.345", "c"=39]
"andersy005/tvm-in-action" ["l"="37.056,1.132"]
"microsoft/vattention" ["l"="39.038,-0.4", "c"=39]
"lucidrains/ring-attention-pytorch" ["l"="38.964,-0.403", "c"=39]
"christophe-lyon/arm-neon-tests" ["l"="37.125,0.639"]
"intel/Immintrin-debug" ["l"="37.137,0.624"]
"simd-everywhere/simde" ["l"="-19.644,-26.163", "c"=10]
"leimao/TensorRT-Custom-Plugin-Example" ["l"="36.699,1.192"]
"zinccat/Awesome-Triton-Kernels" ["l"="39.066,-0.179", "c"=39]
"amirzandieh/HyperAttention" ["l"="40.305,1.359", "c"=7]
"srush/triton-autodiff" ["l"="39.084,-0.135", "c"=39]
"ftynse/clint" ["l"="37.137,1.117"]
"quepas/Compiler-benchmark-suites" ["l"="37.137,1.159"]
"davewathaverford/the-omega-project" ["l"="37.118,1.164"]
"google-ai-edge/model-explorer" ["l"="39.148,-0.311", "c"=39]
"ornladios/ADIOS2" ["l"="63.147,-1.417", "c"=175]
"intel/intel-npu-acceleration-library" ["l"="64.076,-2.433", "c"=1153]
"hahnyuan/nn_tools" ["l"="51.614,33.235", "c"=354]
"digitalbrain79/darknet-nnpack" ["l"="51.657,33.164", "c"=354]
"caiwanxianhust/FasterLLaMA" ["l"="36.778,0.842"]
"916241958/yolov8-Onnxruntime" ["l"="36.788,0.91"]
"intel/neural-speed" ["l"="64.119,-2.404", "c"=1153]
"usyd-fsalab/fp6_llm" ["l"="38.894,-0.226", "c"=39]
"ppl-ai/pplx-kernels" ["l"="39.032,-0.326", "c"=39]
"intel/auto-round" ["l"="38.638,-0.202", "c"=39]
"mit-han-lab/patch_conv" ["l"="36.536,0.889"]
"xdit-project/DistVAE" ["l"="36.577,0.896"]
"codyjrivera/tsm2x-imp" ["l"="36.985,0.928"]
"gpgpu-sim/cutlass-gpgpu-sim" ["l"="36.998,0.92"]
"microsoft/TileFusion" ["l"="36.869,1.054"]
"TiledTensor/TiledLower" ["l"="36.842,1.101"]
"TiledTensor/TiledKernel" ["l"="36.853,1.077"]
"LeiWang1999/tvm_gpu_gemm" ["l"="36.867,1.09"]
"HazyResearch/flash-fft-conv" ["l"="49.049,33.962", "c"=556]
"YdrMaster/operators-rs" ["l"="36.862,1.216"]
"YdrMaster/llama2.rs" ["l"="36.874,1.219"]
"gpu-mode/triton-index" ["l"="39.028,-0.224", "c"=39]
"NVIDIA/nvmath-python" ["l"="36.56,0.999"]
"NVIDIA/numbast" ["l"="36.575,1.01"]
"NVIDIA/numba-cuda" ["l"="36.537,0.992"]
"NVIDIA/accelerated-computing-hub" ["l"="36.622,0.992"]
"tenstorrent/tt-buda-benchmarks" ["l"="37.386,1.249"]
"lshqqytiger/OneTrainer" ["l"="37.236,1.474"]
"InternLM/turbomind" ["l"="36.782,1.042"]
"zeroine/cutlass-cute-sample" ["l"="36.794,1.022"]
"shawntan/scattermoe" ["l"="39.074,-0.219", "c"=39]
"tenstorrent/tt-studio" ["l"="37.339,1.281"]
"tenstorrent/tt-inference-server" ["l"="37.355,1.297"]
"SohamGovande/ThunderKittens-FA3CustomMasks" ["l"="36.808,1.188"]
"Yongqi-Zhuo/triton-tvm" ["l"="36.923,1.086"]
"nox-410/Welder" ["l"="36.985,1.151"]
"uiuc-arc/felix" ["l"="36.957,1.172"]
"ZJU-LLMs/Foundations-of-LLMs" ["l"="38.628,-1.942", "c"=202]
"volcengine/verl" ["l"="37.143,-0.472", "c"=126]
"OpenRLHF/OpenRLHF" ["l"="37.161,-0.425", "c"=126]
"inclusionAI/AReaL" ["l"="37.191,-0.484", "c"=126]
"Open-Reasoner-Zero/Open-Reasoner-Zero" ["l"="37.209,-0.473", "c"=126]
"gulrak/filesystem" ["l"="-19.953,-26.129", "c"=10]
"FFTW/fftw3" ["l"="38.24,5.574", "c"=65]
"Steven-Luo/MasteringRAG" ["l"="38.692,-1.723", "c"=202]
"andrewkchan/yalm" ["l"="39.24,-0.339", "c"=39]
"AIGeniusInstitute/AI-Agent-In-Action" ["l"="38.587,-1.806", "c"=202]
"numba/numba-examples" ["l"="36.331,0.887"]
"numba/nvidia-cuda-tutorial" ["l"="36.314,0.849"]
"wdndev/llm_interview_note" ["l"="38.723,-2.075", "c"=202]
"deepseek-ai/DeepEP" ["l"="39.104,-0.649", "c"=39]
"wdndev/llama3-from-scratch-zh" ["l"="38.729,-2.12", "c"=202]
"wdndev/tiny-llm-zh" ["l"="38.765,-2.151", "c"=202]
"AnswerDotAI/gpu.cpp" ["l"="39.049,-0.139", "c"=39]
"mikex86/LibreCuda" ["l"="39.249,-0.299", "c"=39]
"kuterd/nv_isa_solver" ["l"="36.906,1.047"]
"Infatoshi/mnist-cuda" ["l"="-14.218,-23.138", "c"=1101]
"bbruceyuan/Hands-On-Large-Language-Models-CN" ["l"="38.677,-2.089", "c"=202]
"xgqdut2016/hpc2torch" ["l"="36.811,1.093"]
"YdrMaster/notebook" ["l"="36.809,1.111"]
"boostorg/compute" ["l"="64.303,-2.033", "c"=477]
"clu0/unet.cu" ["l"="38.938,-0.16", "c"=39]
"ibebrett/CUDA-CS344" ["l"="36.638,0.811"]
"jaredhoberock/stanford-cs193g-sp2010" ["l"="36.632,0.772"]
"baidu-research/baidu-allreduce" ["l"="57.879,23.522", "c"=161]
"Xtra-Computing/Medusa" ["l"="51.397,15.257", "c"=1231]
"farkhor/CuSha" ["l"="51.425,15.261", "c"=1231]
"intel/clDNN" ["l"="64.228,-2.093", "c"=477]
"vincentfpgarcia/kNN-CUDA" ["l"="65.722,11.728", "c"=203]
"reframe-hpc/reframe" ["l"="7.162,-13.842", "c"=893]
"amd/blis" ["l"="37.317,0.55"]
"amd/aocl-libm-ose" ["l"="37.355,0.513"]
"amd/scalapack" ["l"="37.335,0.531"]
"LeiWang1999/Stream-k.tvm" ["l"="36.891,1.063"]
"drkennetz/cuda_examples" ["l"="36.56,1.029"]
"jacobtomlinson/gpu-python-tutorial" ["l"="36.504,1.019"]
"gevtushenko/llm.c" ["l"="36.538,1.016"]
"artyom-beilis/float16" ["l"="37.257,0.524"]
"dlsys-course/assignment1-2018" ["l"="57.862,23.632", "c"=161]
"pytorch-labs/tritonbench" ["l"="39.049,-0.17", "c"=39]
"feifeibear/ChituAttention" ["l"="36.67,0.923"]
"chengzeyi/piflux" ["l"="36.615,0.907"]
"viennacl/viennacl-dev" ["l"="64.357,-2.038", "c"=477]
"bryancatanzaro/generics" ["l"="36.676,1.108"]
"flashinfer-ai/cutlass-viz" ["l"="39.111,-0.292", "c"=39]
"infinigence/FlashOverlap" ["l"="39.103,-0.318", "c"=39]
"xlite-dev/ffpa-attn" ["l"="39.161,-0.275", "c"=39]
"ScalingIntelligence/KernelBench" ["l"="39.039,-0.281", "c"=39]
"tenstorrent/tt-xla" ["l"="37.283,1.215"]
"tenstorrent/tt-torch" ["l"="37.291,1.247"]
"sgl-project/DeepGEMM" ["l"="36.792,1.229"]
"deepseek-ai/open-infra-index" ["l"="39.091,-0.615", "c"=39]
"hannes-brt/cudnn-python-wrappers" ["l"="36.523,0.801"]
"arrayfire/arrayfire-python" ["l"="-8.113,-4.585", "c"=407]
"numba/pyculib" ["l"="36.537,0.821"]
"mila-iqia/platoon" ["l"="44.92,27.563", "c"=789]
"dmlc/minpy" ["l"="47.77,29.028", "c"=89]
"csarron/awesome-emdl" ["l"="52.67,33.513", "c"=271]
"lhelontra/tensorflow-on-arm" ["l"="50.157,32.849", "c"=314]
"MoonshotAI/MoBA" ["l"="39.065,-0.332", "c"=39]
"sovrasov/flops-counter.pytorch" ["l"="50.866,29.917", "c"=83]
"soeaver/caffe-model" ["l"="51.656,33.388", "c"=354]
"Eric-mingjie/rethinking-network-pruning" ["l"="52.711,33.398", "c"=271]
"Lyken17/pytorch-OpCounter" ["l"="50.863,29.894", "c"=83]
"mit-han-lab/once-for-all" ["l"="52.809,34.01", "c"=708]
"marvis/pytorch-caffe-darknet-convert" ["l"="51.664,33.272", "c"=354]
"ysh329/deep-learning-model-convertor" ["l"="50.344,33.145", "c"=314]
"zhijian-liu/torchprofile" ["l"="52.822,34.061", "c"=708]
"ischintsan/cuda_by_example" ["l"="36.67,0.784"]
"rkinas/triton-resources" ["l"="-14.287,-23.108", "c"=1101]
"yanqswhu/cuda_by_example" ["l"="36.616,0.748"]
"bbruceyuan/LLMs-Zero-to-Hero" ["l"="38.714,-2.1", "c"=202]
"vllm-project/production-stack" ["l"="39.028,-0.513", "c"=39]
"NervanaSystems/he-transformer" ["l"="51.414,1.48", "c"=378]
"nvdla/hw" ["l"="31.917,-3.876", "c"=188]
"doonny/PipeCNN" ["l"="31.791,-2.745", "c"=212]
"ARM-software/SCALE-Sim" ["l"="31.037,-2.894", "c"=1037]
"dgschwend/zynqnet" ["l"="31.768,-2.751", "c"=212]
"ucb-bar/gemmini" ["l"="31.825,-3.938", "c"=188]
"IBM/AccDNN" ["l"="31.804,-2.773", "c"=212]
"basicmi/AI-Articles" ["l"="37.348,0.738"]
"stanford-mast/nn_dataflow" ["l"="31.021,-2.853", "c"=1037]
"LeanModels/DFloat11" ["l"="37.146,-0.757", "c"=126]
"ysh329/embedded-ai.bi-weekly" ["l"="52.666,33.565", "c"=271]
"MLNLP-World/LLMs-from-scratch-CN" ["l"="38.61,-2.027", "c"=202]
"antgroup/glake" ["l"="39.016,-0.444", "c"=39]
"fla-org/native-sparse-attention" ["l"="39.019,-0.298", "c"=39]
"ROCm/rocPRIM" ["l"="64.232,-1.786", "c"=477]
"spack/spack-configs" ["l"="37.702,1.277"]
"feifeibear/DPSKV3MFU" ["l"="36.784,1.267"]
"nlzy/vllm-gfx906" ["l"="37.2,1.574"]
"FlexFusion/FlexFusion" ["l"="36.775,1.253"]
}