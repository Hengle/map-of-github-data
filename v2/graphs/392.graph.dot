digraph G {
"FStarLang/FStar" -> "FStarLang/karamel"
"FStarLang/FStar" -> "idris-lang/Idris-dev" ["e"=1]
"FStarLang/FStar" -> "agda/agda" ["e"=1]
"FStarLang/FStar" -> "rocq-prover/rocq"
"FStarLang/FStar" -> "dafny-lang/dafny"
"FStarLang/FStar" -> "hacl-star/hacl-star"
"FStarLang/FStar" -> "CakeML/cakeml"
"FStarLang/FStar" -> "AbsInt/CompCert"
"FStarLang/FStar" -> "leanprover/lean3"
"FStarLang/FStar" -> "idris-lang/Idris2" ["e"=1]
"FStarLang/FStar" -> "HoTT/Coq-HoTT" ["e"=1]
"FStarLang/FStar" -> "koka-lang/koka" ["e"=1]
"FStarLang/FStar" -> "ucsd-progsys/liquidhaskell" ["e"=1]
"FStarLang/FStar" -> "ocaml/ocaml" ["e"=1]
"FStarLang/FStar" -> "plfa/plfa.github.io" ["e"=1]
"Inventitech/strans" -> "microsoft/prose"
"steshaw/plt" -> "rocq-prover/rocq" ["e"=1]
"schollz/hostyoself" -> "Inventitech/strans" ["e"=1]
"viperproject/prusti-dev" -> "GaloisInc/crucible" ["e"=1]
"rocq-prover/rocq" -> "agda/agda" ["e"=1]
"rocq-prover/rocq" -> "AbsInt/CompCert"
"rocq-prover/rocq" -> "ocaml/ocaml" ["e"=1]
"rocq-prover/rocq" -> "HoTT/Coq-HoTT" ["e"=1]
"rocq-prover/rocq" -> "FStarLang/FStar"
"rocq-prover/rocq" -> "leanprover/lean4" ["e"=1]
"rocq-prover/rocq" -> "leanprover/lean3"
"rocq-prover/rocq" -> "idris-lang/Idris-dev" ["e"=1]
"rocq-prover/rocq" -> "math-comp/math-comp"
"rocq-prover/rocq" -> "ghc/ghc" ["e"=1]
"rocq-prover/rocq" -> "UniMath/UniMath" ["e"=1]
"rocq-prover/rocq" -> "ProofGeneral/PG"
"rocq-prover/rocq" -> "rocq-community/coq-tricks"
"rocq-prover/rocq" -> "plfa/plfa.github.io" ["e"=1]
"rocq-prover/rocq" -> "Z3Prover/z3" ["e"=1]
"UniMath/UniMath" -> "math-comp/math-comp" ["e"=1]
"UniMath/UniMath" -> "jwiegley/category-theory" ["e"=1]
"UniMath/UniMath" -> "MetaRocq/metarocq" ["e"=1]
"UniMath/UniMath" -> "mattam82/Coq-Equations" ["e"=1]
"leanprover/lean4" -> "leanprover/lean3" ["e"=1]
"leanprover/lean4" -> "rocq-prover/rocq" ["e"=1]
"leanprover/lean4" -> "FStarLang/FStar" ["e"=1]
"NASA-SW-VnV/ikos" -> "diffblue/cbmc" ["e"=1]
"NASA-SW-VnV/ikos" -> "seahorn/seahorn" ["e"=1]
"imteekay/programming-language-research" -> "rocq-community/awesome-coq" ["e"=1]
"leanprover/lean3" -> "leanprover/lean4" ["e"=1]
"leanprover/lean3" -> "leanprover-community/mathlib3" ["e"=1]
"leanprover/lean3" -> "rocq-prover/rocq"
"leanprover/lean3" -> "FStarLang/FStar"
"leanprover/lean3" -> "HoTT/Coq-HoTT" ["e"=1]
"leanprover/lean3" -> "mortberg/cubicaltt" ["e"=1]
"leanprover/lean3" -> "UniMath/UniMath" ["e"=1]
"leanprover/lean3" -> "agda/agda" ["e"=1]
"leanprover/lean3" -> "AbsInt/CompCert"
"leanprover/lean3" -> "idris-lang/Idris-dev" ["e"=1]
"leanprover/lean3" -> "plfa/plfa.github.io" ["e"=1]
"leanprover/lean3" -> "math-comp/math-comp"
"leanprover/lean3" -> "HOL-Theorem-Prover/HOL"
"leanprover/lean3" -> "jrh13/hol-light"
"leanprover/lean3" -> "RedPRL/sml-redprl" ["e"=1]
"nimble-code/Spin" -> "nimble-code/Cobra"
"nimble-code/Spin" -> "nimble-code/Modex"
"nimble-code/Spin" -> "diffblue/cbmc"
"nimble-code/Spin" -> "verifast/verifast"
"nimble-code/Spin" -> "albertocasagrande/pyModelChecking"
"nimble-code/Spin" -> "utwente-fmt/ltsmin"
"nimble-code/Spin" -> "prismmodelchecker/prism"
"ellisk42/ec" -> "flxsosa/ProgramSearch" ["e"=1]
"albrow/fo" -> "rhysd/gocaml" ["e"=1]
"ml4tp/gamepad" -> "ml4tp/tcoq"
"HoTT/Coq-HoTT" -> "jwiegley/category-theory" ["e"=1]
"HoTT/Coq-HoTT" -> "math-comp/math-comp" ["e"=1]
"HoTT/Coq-HoTT" -> "MetaRocq/metarocq" ["e"=1]
"HoTT/Coq-HoTT" -> "rocq-prover/rocq" ["e"=1]
"HoTT/Coq-HoTT" -> "AbsInt/CompCert" ["e"=1]
"HoTT/Coq-HoTT" -> "mattam82/Coq-Equations" ["e"=1]
"stp/stp" -> "SRI-CSL/yices2"
"stp/stp" -> "msoos/cryptominisat"
"stp/stp" -> "bitwuzla/bitwuzla"
"stp/stp" -> "arminbiere/cadical"
"stp/stp" -> "Boolector/boolector"
"stp/stp" -> "cvc5/cvc5"
"stp/stp" -> "klee/klee" ["e"=1]
"stp/stp" -> "seahorn/seahorn"
"stp/stp" -> "S2E/s2e-old" ["e"=1]
"stp/stp" -> "arminbiere/kissat"
"stp/stp" -> "pysmt/pysmt"
"stp/stp" -> "niklasso/minisat"
"stp/stp" -> "seahorn/crab" ["e"=1]
"stp/stp" -> "S2E/s2e" ["e"=1]
"stp/stp" -> "smackers/smack"
"MetaRocq/metarocq" -> "mattam82/Coq-Equations"
"MetaRocq/metarocq" -> "math-comp/math-comp"
"MetaRocq/metarocq" -> "lukaszcz/coqhammer"
"MetaRocq/metarocq" -> "rocq-community/coq-tricks"
"MetaRocq/metarocq" -> "PrincetonUniversity/VST"
"MetaRocq/metarocq" -> "DeepSpec/InteractionTrees"
"MetaRocq/metarocq" -> "LPCIC/coq-elpi"
"MetaRocq/metarocq" -> "vellvm/vellvm"
"MetaRocq/metarocq" -> "QuickChick/QuickChick"
"MetaRocq/metarocq" -> "smtcoq/smtcoq"
"MetaRocq/metarocq" -> "rocq-prover/opam"
"MetaRocq/metarocq" -> "rocq-prover/vscoq"
"MetaRocq/metarocq" -> "CertiCoq/certicoq"
"MetaRocq/metarocq" -> "Deducteam/lambdapi"
"MetaRocq/metarocq" -> "mit-plv/bedrock2"
"hwayne/lets-prove-leftpad" -> "ligurio/practical-fm" ["e"=1]
"hwayne/lets-prove-leftpad" -> "fraunhoferfokus/acsl-by-example" ["e"=1]
"hwayne/lets-prove-leftpad" -> "achlipala/frap" ["e"=1]
"egraphs-good/egg" -> "emina/rosette" ["e"=1]
"egraphs-good/egg" -> "cvc5/cvc5" ["e"=1]
"facebook/SPARTA" -> "seahorn/seahorn" ["e"=1]
"facebook/SPARTA" -> "smackers/smack" ["e"=1]
"facebook/SPARTA" -> "staticafi/symbiotic" ["e"=1]
"Election-Tech-Initiative/electionguard" -> "tamarin-prover/tamarin-prover" ["e"=1]
"ligurio/practical-fm" -> "rocq-community/coq-tricks"
"ligurio/practical-fm" -> "awesomo4000/awesome-provable"
"ligurio/practical-fm" -> "QuickChick/QuickChick"
"ligurio/practical-fm" -> "PrincetonUniversity/VST"
"ligurio/practical-fm" -> "mit-plv/bedrock2"
"ligurio/practical-fm" -> "seL4/l4v"
"ligurio/practical-fm" -> "fraunhoferfokus/acsl-by-example"
"ligurio/practical-fm" -> "jdnklau/fm-ml"
"ligurio/practical-fm" -> "boogie-org/boogie"
"ligurio/practical-fm" -> "CakeML/cakeml"
"ligurio/practical-fm" -> "cpitclaudel/company-coq"
"ligurio/practical-fm" -> "antalsz/hs-to-coq"
"ligurio/practical-fm" -> "LeventErkok/sbv" ["e"=1]
"ligurio/practical-fm" -> "vellvm/vellvm"
"ligurio/practical-fm" -> "rocq-prover/vscoq"
"AliveToolkit/alive2" -> "vellvm/vellvm" ["e"=1]
"csmith-project/csmith" -> "AbsInt/CompCert" ["e"=1]
"QuickChick/QuickChick" -> "mattam82/Coq-Equations"
"QuickChick/QuickChick" -> "DeepSpec/InteractionTrees"
"QuickChick/QuickChick" -> "MetaRocq/metarocq"
"QuickChick/QuickChick" -> "CertiCoq/certicoq"
"QuickChick/QuickChick" -> "rocq-community/coq-ext-lib"
"QuickChick/QuickChick" -> "DeepSpec/dsss17"
"QuickChick/QuickChick" -> "PrincetonUniversity/VST"
"QuickChick/QuickChick" -> "ProofGeneral/PG"
"QuickChick/QuickChick" -> "smtcoq/smtcoq"
"QuickChick/QuickChick" -> "rocq-prover/rfcs"
"QuickChick/QuickChick" -> "math-comp/math-comp"
"QuickChick/QuickChick" -> "lukaszcz/coqhammer"
"QuickChick/QuickChick" -> "rocq-prover/opam"
"QuickChick/QuickChick" -> "rocq-community/coq-tricks"
"QuickChick/QuickChick" -> "cpitclaudel/company-coq"
"pysathq/pysat" -> "arminbiere/cadical"
"pysathq/pysat" -> "arminbiere/kissat"
"pysathq/pysat" -> "msoos/cryptominisat"
"pysathq/pysat" -> "pysmt/pysmt"
"pysathq/pysat" -> "dselsam/neurosat" ["e"=1]
"pysathq/pysat" -> "niklasso/minisat"
"pysathq/pysat" -> "arminbiere/satch"
"pysathq/pysat" -> "sat-group/open-wbo"
"pysathq/pysat" -> "marijnheule/microsat"
"pysathq/pysat" -> "tulip-control/dd"
"pysathq/pysat" -> "alexeyignatiev/mkplot"
"pysathq/pysat" -> "meelgroup/approxmc"
"pysathq/pysat" -> "arminbiere/lingeling"
"pysathq/pysat" -> "Boolector/boolector"
"pysathq/pysat" -> "SRI-CSL/yices2"
"google/souper" -> "cvc5/cvc5" ["e"=1]
"google/souper" -> "AbsInt/CompCert" ["e"=1]
"mit-plv/riscv-semantics" -> "mit-plv/riscv-coq"
"mit-plv/riscv-semantics" -> "rsnikhil/Forvis_RISCV-ISA-Spec"
"mit-plv/riscv-semantics" -> "mit-plv/kami"
"mit-plv/riscv-semantics" -> "GaloisInc/grift"
"mit-plv/riscv-semantics" -> "sifive/Kami"
"mit-plv/riscv-semantics" -> "riscvarchive/ISA_Formal_Spec_Public_Review" ["e"=1]
"mit-plv/riscv-semantics" -> "sifive/RiscvSpecFormal"
"mit-plv/riscv-semantics" -> "mit-plv/koika"
"math-comp/analysis" -> "math-comp/math-comp"
"math-comp/analysis" -> "mattam82/Coq-Equations"
"math-comp/analysis" -> "math-comp/hierarchy-builder"
"math-comp/analysis" -> "MetaRocq/metarocq"
"math-comp/analysis" -> "Deducteam/lambdapi"
"math-comp/analysis" -> "rocq-community/coq-ext-lib"
"math-comp/analysis" -> "affeldt-aist/monae"
"math-comp/analysis" -> "LPCIC/coq-elpi"
"math-comp/analysis" -> "rocq-prover/opam"
"math-comp/analysis" -> "lukaszcz/coqhammer"
"math-comp/analysis" -> "uds-psl/coq-library-undecidability"
"math-comp/analysis" -> "jtassarotti/coq-proba"
"math-comp/analysis" -> "rocq-prover/rfcs"
"math-comp/analysis" -> "GeoCoq/GeoCoq"
"math-comp/analysis" -> "snu-sf/paco"
"sweirich/pi-forall" -> "rocq-community/coq-tricks" ["e"=1]
"rsnikhil/Forvis_RISCV-ISA-Spec" -> "mit-plv/riscv-semantics"
"rsnikhil/Forvis_RISCV-ISA-Spec" -> "GaloisInc/grift"
"sifive/Kami" -> "mit-plv/kami"
"sifive/Kami" -> "sifive/RiscvSpecFormal"
"sifive/Kami" -> "mit-plv/koika"
"sifive/Kami" -> "mit-plv/riscv-semantics"
"mit-plv/bedrock2" -> "vellvm/vellvm"
"mit-plv/bedrock2" -> "PrincetonUniversity/VST"
"mit-plv/bedrock2" -> "smtcoq/smtcoq"
"mit-plv/bedrock2" -> "DeepSpec/InteractionTrees"
"mit-plv/bedrock2" -> "MetaRocq/metarocq"
"mit-plv/bedrock2" -> "CertiCoq/certicoq"
"mit-plv/bedrock2" -> "mattam82/Coq-Equations"
"mit-plv/bedrock2" -> "mit-plv/riscv-coq"
"mit-plv/bedrock2" -> "lukaszcz/coqhammer"
"mit-plv/bedrock2" -> "QuickChick/QuickChick"
"mit-plv/bedrock2" -> "mit-plv/bedrock"
"mit-plv/bedrock2" -> "mit-plv/fiat"
"mit-plv/bedrock2" -> "LPCIC/coq-elpi"
"mit-plv/bedrock2" -> "achlipala/frap"
"mit-plv/bedrock2" -> "rocq-prover/opam"
"DeepSpec/InteractionTrees" -> "mattam82/Coq-Equations"
"DeepSpec/InteractionTrees" -> "snu-sf/paco"
"DeepSpec/InteractionTrees" -> "vellvm/vellvm"
"DeepSpec/InteractionTrees" -> "smtcoq/smtcoq"
"DeepSpec/InteractionTrees" -> "QuickChick/QuickChick"
"DeepSpec/InteractionTrees" -> "lukaszcz/coqhammer"
"DeepSpec/InteractionTrees" -> "bluerock-io/BRiCk"
"DeepSpec/InteractionTrees" -> "PrincetonUniversity/VST"
"DeepSpec/InteractionTrees" -> "MetaRocq/metarocq"
"DeepSpec/InteractionTrees" -> "rocq-community/coq-tricks"
"DeepSpec/InteractionTrees" -> "mit-plv/bedrock2"
"DeepSpec/InteractionTrees" -> "mit-plv/fiat"
"DeepSpec/InteractionTrees" -> "rocq-community/coq-ext-lib"
"DeepSpec/InteractionTrees" -> "math-comp/math-comp"
"cedille/cedille" -> "Deducteam/lambdapi" ["e"=1]
"cedille/cedille" -> "mattam82/Coq-Equations" ["e"=1]
"riscv/sail-riscv" -> "rems-project/sail" ["e"=1]
"sifive/RiscvSpecFormal" -> "sifive/Kami"
"sifive/RiscvSpecFormal" -> "mit-plv/riscv-coq"
"yishn/tikzcd-editor" -> "jwiegley/category-theory" ["e"=1]
"google/skylark" -> "rhysd/gocaml" ["e"=1]
"johnyf/tool_lists" -> "tulip-control/dd"
"johnyf/tool_lists" -> "tulip-control/tulip-control"
"johnyf/tool_lists" -> "tulip-control/omega"
"johnyf/tool_lists" -> "boogie-org/boogie"
"johnyf/tool_lists" -> "ivmai/cudd"
"johnyf/tool_lists" -> "wilbowma/cur" ["e"=1]
"johnyf/tool_lists" -> "ultimate-pa/ultimate"
"johnyf/tool_lists" -> "emina/rosette"
"johnyf/tool_lists" -> "awesomo4000/awesome-provable"
"johnyf/tool_lists" -> "ligurio/practical-fm"
"johnyf/tool_lists" -> "utwente-fmt/ltsmin"
"johnyf/tool_lists" -> "VerifiableRobotics/LTLMoP"
"johnyf/tool_lists" -> "pysmt/pysmt"
"rust-secure-code/safety-dance" -> "project-oak/rust-verification-tools" ["e"=1]
"LeifAndersen/PLGradSchools" -> "PrincetonUniversity/VST" ["e"=1]
"crypto101/book" -> "C2SP/wycheproof" ["e"=1]
"rocq-community/coq-art" -> "ilyasergey/pnp"
"rocq-community/coq-art" -> "EugeneLoy/coq_jupyter"
"calyxir/calyx" -> "mit-plv/koika" ["e"=1]
"pornin/CTTK" -> "project-everest/vale"
"agda/agda-stdlib" -> "Deducteam/lambdapi" ["e"=1]
"facebookexperimental/MIRAI" -> "GaloisInc/crucible" ["e"=1]
"facebookexperimental/MIRAI" -> "lizhuohua/rust-mir-checker" ["e"=1]
"facebookexperimental/MIRAI" -> "project-oak/rust-verification-tools" ["e"=1]
"facebookexperimental/MIRAI" -> "hopv/rust-horn" ["e"=1]
"facebookexperimental/MIRAI" -> "seahorn/seahorn" ["e"=1]
"minoki/LunarML" -> "elpinal/bright-ml"
"minoki/LunarML" -> "azdavis/millet"
"minoki/LunarML" -> "kindl/Hypatia"
"minoki/LunarML" -> "polyml/polyml"
"minoki/LunarML" -> "melsman/mlkit"
"minoki/LunarML" -> "shwestrick/smlfmt"
"minoki/LunarML" -> "smlsharp/smlsharp"
"minoki/LunarML" -> "MLton/mlton"
"minoki/LunarML" -> "MPLLang/mpl"
"minoki/LunarML" -> "diku-dk/sml-server"
"minoki/LunarML" -> "eatonphil/ponyo"
"microsoft/verisol" -> "boogie-org/boogie"
"microsoft/verisol" -> "boogie-org/corral"
"microsoft/verisol" -> "SRI-CSL/solidity"
"PLSysSec/haybale" -> "GaloisInc/crucible" ["e"=1]
"verifast/verifast" -> "smackers/smack"
"verifast/verifast" -> "PrincetonUniversity/VST"
"verifast/verifast" -> "boogie-org/boogie"
"verifast/verifast" -> "DeepSpec/InteractionTrees"
"verifast/verifast" -> "mit-plv/bedrock2"
"verifast/verifast" -> "mattam82/Coq-Equations"
"verifast/verifast" -> "sosy-lab/sv-benchmarks"
"verifast/verifast" -> "jrh13/hol-light"
"verifast/verifast" -> "vellvm/vellvm"
"verifast/verifast" -> "seahorn/seahorn"
"verifast/verifast" -> "ProofGeneral/PG"
"verifast/verifast" -> "rocq-community/coq-tricks"
"verifast/verifast" -> "viperproject/silicon"
"verifast/verifast" -> "fraunhoferfokus/acsl-by-example"
"verifast/verifast" -> "CakeML/cakeml"
"nearai/program_synthesis" -> "carpedm20/karel"
"nearai/program_synthesis" -> "carpedm20/program-synthesis-rl-tensorflow"
"StanfordPL/stoke" -> "emina/rosette" ["e"=1]
"StanfordPL/stoke" -> "SRI-CSL/yices2" ["e"=1]
"StanfordPL/stoke" -> "GaloisInc/crucible" ["e"=1]
"esumii/min-caml" -> "rhysd/gocaml"
"esumii/min-caml" -> "tomprimozic/type-systems" ["e"=1]
"esumii/min-caml" -> "gfngfn/SATySFi" ["e"=1]
"esumii/min-caml" -> "smlsharp/smlsharp"
"esumii/min-caml" -> "ocaml-community/sedlex" ["e"=1]
"esumii/min-caml" -> "melsman/mlkit"
"esumii/min-caml" -> "sunchao/tiger"
"esumii/min-caml" -> "steshaw/tiger-ml"
"esumii/min-caml" -> "CakeML/cakeml"
"esumii/min-caml" -> "camlspotter/ocaml-zippy-tutorial-in-japanese"
"esumii/min-caml" -> "MLton/mlton"
"esumii/min-caml" -> "yallop/effects-bibliography" ["e"=1]
"esumii/min-caml" -> "polyml/polyml"
"tomprimozic/type-systems" -> "esumii/min-caml" ["e"=1]
"tomprimozic/type-systems" -> "CakeML/cakeml" ["e"=1]
"mupq/pqm4" -> "jasmin-lang/jasmin" ["e"=1]
"princeton-vl/CoqGym" -> "MetaRocq/metarocq"
"princeton-vl/CoqGym" -> "jesse-michael-han/lean-gptf" ["e"=1]
"princeton-vl/CoqGym" -> "smtcoq/smtcoq"
"princeton-vl/CoqGym" -> "PrincetonUniversity/VST"
"princeton-vl/CoqGym" -> "openai/lean-gym" ["e"=1]
"princeton-vl/CoqGym" -> "rocq-community/awesome-coq"
"princeton-vl/CoqGym" -> "lukaszcz/coqhammer"
"princeton-vl/CoqGym" -> "rocq-community/coq-tricks"
"princeton-vl/CoqGym" -> "rocq-archive/coq-serapi"
"princeton-vl/CoqGym" -> "tensorflow/deepmath"
"princeton-vl/CoqGym" -> "ml4tp/gamepad"
"princeton-vl/CoqGym" -> "vellvm/vellvm"
"princeton-vl/CoqGym" -> "UCSD-PL/proverbot9001"
"princeton-vl/CoqGym" -> "zhangir-azerbayev/ProofNet" ["e"=1]
"princeton-vl/CoqGym" -> "stanford-centaur/PyPantograph" ["e"=1]
"herbie-fp/herbie" -> "emina/rosette" ["e"=1]
"SyGuS-Org/benchmarks" -> "SyGuS-Org/tools"
"SyGuS-Org/tools" -> "SyGuS-Org/benchmarks"
"secure-software-engineering/phasar" -> "staticafi/symbiotic" ["e"=1]
"Boolector/boolector" -> "SRI-CSL/yices2"
"Boolector/boolector" -> "bitwuzla/bitwuzla"
"Boolector/boolector" -> "stanford-centaur/smt-switch"
"Boolector/boolector" -> "arminbiere/cadical"
"Boolector/boolector" -> "cvc5/cvc5"
"Boolector/boolector" -> "pysmt/pysmt"
"Boolector/boolector" -> "stp/stp"
"Boolector/boolector" -> "hwmcc/btor2tools"
"Boolector/boolector" -> "stanford-centaur/pono"
"Boolector/boolector" -> "ddsmt/ddSMT"
"Boolector/boolector" -> "arminbiere/satch"
"Boolector/boolector" -> "YosysHQ/sby" ["e"=1]
"Boolector/boolector" -> "SRI-CSL/sally"
"Boolector/boolector" -> "seahorn/seahorn"
"Boolector/boolector" -> "msoos/cryptominisat"
"veorq/cryptocoding" -> "hacspec/hacspec" ["e"=1]
"veorq/cryptocoding" -> "C2SP/wycheproof" ["e"=1]
"MPLLang/mpl" -> "MLton/mlton"
"MPLLang/mpl" -> "elpinal/bright-ml"
"MPLLang/mpl" -> "smlsharp/smlsharp"
"MPLLang/mpl" -> "athas/raytracers"
"MPLLang/mpl" -> "azdavis/millet"
"MPLLang/mpl" -> "polyml/polyml"
"MPLLang/mpl" -> "minoki/LunarML"
"MPLLang/mpl" -> "shwestrick/smlfmt"
"MPLLang/mpl" -> "diku-dk/smlpkg"
"MPLLang/mpl" -> "MPLLang/mpllib"
"MPLLang/mpl" -> "MPLLang/mpl-tutorial"
"MPLLang/mpl" -> "CakeML/cakeml"
"MPLLang/mpl" -> "eatonphil/ponyo"
"rocq-prover/vscoq" -> "MetaRocq/metarocq"
"rocq-prover/vscoq" -> "ejgallego/coq-lsp"
"rocq-prover/vscoq" -> "cpitclaudel/company-coq"
"rocq-prover/vscoq" -> "rocq-community/coq-tricks"
"rocq-prover/vscoq" -> "mattam82/Coq-Equations"
"rocq-prover/vscoq" -> "rocq-prover/platform"
"rocq-prover/vscoq" -> "rocq-community/awesome-coq"
"rocq-prover/vscoq" -> "siegebell/vscoq"
"rocq-prover/vscoq" -> "lukaszcz/coqhammer"
"rocq-prover/vscoq" -> "rocq-community/coq-art"
"rocq-prover/vscoq" -> "PrincetonUniversity/VST"
"rocq-prover/vscoq" -> "mit-plv/bedrock2"
"rocq-prover/vscoq" -> "vellvm/vellvm"
"rocq-prover/vscoq" -> "ott-lang/ott"
"rocq-prover/vscoq" -> "DeepSpec/InteractionTrees"
"GaloisInc/cryptol" -> "GaloisInc/saw-script"
"GaloisInc/cryptol" -> "GaloisInc/crucible"
"GaloisInc/cryptol" -> "EasyCrypt/easycrypt"
"GaloisInc/cryptol" -> "LeventErkok/sbv" ["e"=1]
"GaloisInc/cryptol" -> "CakeML/cakeml"
"GaloisInc/cryptol" -> "FStarLang/karamel"
"GaloisInc/cryptol" -> "antalsz/hs-to-coq"
"GaloisInc/cryptol" -> "mit-plv/fiat-crypto"
"GaloisInc/cryptol" -> "PrincetonUniversity/VST"
"GaloisInc/cryptol" -> "jasmin-lang/jasmin"
"GaloisInc/cryptol" -> "hacl-star/hacl-star"
"GaloisInc/cryptol" -> "FStarLang/FStar"
"GaloisInc/cryptol" -> "boogie-org/boogie"
"GaloisInc/cryptol" -> "GaloisInc/swanky" ["e"=1]
"GaloisInc/cryptol" -> "HoTT/Coq-HoTT" ["e"=1]
"vprover/vampire" -> "eprover/eprover"
"vprover/vampire" -> "cvc5/cvc5"
"vprover/vampire" -> "SRI-CSL/yices2"
"vprover/vampire" -> "arminbiere/cadical"
"vprover/vampire" -> "HOL-Theorem-Prover/HOL"
"vprover/vampire" -> "jrh13/hol-light"
"vprover/vampire" -> "smtcoq/smtcoq"
"vprover/vampire" -> "sneeuwballen/zipperposition"
"vprover/vampire" -> "Deducteam/Dedukti"
"vprover/vampire" -> "bitwuzla/bitwuzla"
"vprover/vampire" -> "Boolector/boolector"
"vprover/vampire" -> "boogie-org/boogie"
"vprover/vampire" -> "pysmt/pysmt"
"vprover/vampire" -> "stp/stp"
"vprover/vampire" -> "ddsmt/ddSMT"
"andrejbauer/plzoo" -> "CakeML/cakeml" ["e"=1]
"andrejbauer/plzoo" -> "MLton/mlton" ["e"=1]
"FormalTheology/GoedelGod" -> "mattam82/Coq-Equations" ["e"=1]
"FormalTheology/GoedelGod" -> "ilyasergey/pnp" ["e"=1]
"FormalTheology/GoedelGod" -> "cpitclaudel/alectryon" ["e"=1]
"Coq-zh/SF-zh" -> "achlipala/frap" ["e"=1]
"Coq-zh/SF-zh" -> "rocq-prover/rocq" ["e"=1]
"cloudflare/circl" -> "mit-plv/fiat-crypto" ["e"=1]
"bluespec/Flute" -> "sifive/Kami" ["e"=1]
"cristian-mattarei/CoSA" -> "stanford-centaur/pono"
"math-comp/hierarchy-builder" -> "math-comp/finmap"
"microsoft/DeepCoder-Utils" -> "dkamm/deepcoder"
"tlswg/tls13-spec" -> "project-everest/mitls-fstar" ["e"=1]
"pshved/timeout" -> "arminbiere/runlim"
"digama0/mm0" -> "Deducteam/Dedukti" ["e"=1]
"digama0/mm0" -> "cpitclaudel/alectryon" ["e"=1]
"nadia-polikarpova/cse291-program-synthesis" -> "TyGuS/suslik"
"nadia-polikarpova/cse291-program-synthesis" -> "nadia-polikarpova/synquid"
"nadia-polikarpova/cse291-program-synthesis" -> "microsoft/prose"
"nadia-polikarpova/cse291-program-synthesis" -> "praveenkulkarni1996/awesome-program-synthesis"
"nadia-polikarpova/cse291-program-synthesis" -> "epfl-lara/leon" ["e"=1]
"nadia-polikarpova/cse291-program-synthesis" -> "emina/rosette"
"nadia-polikarpova/cse291-program-synthesis" -> "granule-project/granule" ["e"=1]
"rossberg/1ml" -> "rossberg/hamlet"
"rossberg/1ml" -> "elpinal/bright-ml"
"rossberg/1ml" -> "rossberg/mixml"
"rossberg/1ml" -> "elpinal/modules"
"rossberg/1ml" -> "jozefg/blott" ["e"=1]
"rossberg/1ml" -> "SMLFamily/Successor-ML"
"LeventErkok/sbv" -> "antalsz/hs-to-coq" ["e"=1]
"LeventErkok/sbv" -> "GaloisInc/crucible" ["e"=1]
"rems-project/sail" -> "riscv/sail-riscv" ["e"=1]
"rems-project/sail" -> "sifive/Kami"
"rems-project/sail" -> "vellvm/vellvm"
"rems-project/sail" -> "PrincetonUniversity/VST"
"rems-project/sail" -> "mit-plv/bedrock2"
"rems-project/sail" -> "B-Lang-org/bsc" ["e"=1]
"rems-project/sail" -> "rems-project/sail-arm"
"rems-project/sail" -> "SymbioticEDA/riscv-formal" ["e"=1]
"rems-project/sail" -> "achlipala/frap"
"rems-project/sail" -> "emina/rosette"
"rems-project/sail" -> "CakeML/cakeml"
"rems-project/sail" -> "riscv-non-isa/riscv-arch-test" ["e"=1]
"rems-project/sail" -> "ott-lang/ott"
"rems-project/sail" -> "creusot-rs/creusot" ["e"=1]
"rems-project/sail" -> "mit-plv/kami"
"rust-lang/datafrog" -> "jix/varisat" ["e"=1]
"ejgallego/coq-lsp" -> "sr-lab/coqpyt"
"ejgallego/coq-lsp" -> "rocq-prover/vscoq"
"ejgallego/coq-lsp" -> "rocq-prover/rfcs"
"ejgallego/coq-lsp" -> "mattam82/Coq-Equations"
"ejgallego/coq-lsp" -> "ocaml-multicore/saturn" ["e"=1]
"ejgallego/coq-lsp" -> "tomtomjhj/coq-lsp.nvim"
"ejgallego/coq-lsp" -> "rocq-community/autosubst"
"ejgallego/coq-lsp" -> "whonore/Coqtail"
"jix/varisat" -> "shnarazk/splr"
"dselsam/neurosat" -> "pysathq/pysat" ["e"=1]
"arminbiere/lingeling" -> "mi-ki/glucose-syrup"
"arminbiere/lingeling" -> "DfX-NYUAD/PSAT"
"dkamm/deepcoder" -> "HiroakiMikami/deep-coder"
"dkamm/deepcoder" -> "microsoft/DeepCoder-Utils"
"dkamm/deepcoder" -> "water-vapor/DeepCoder-tensorflow"
"dkamm/deepcoder" -> "amitz25/PCCoder"
"dkamm/deepcoder" -> "clvrai/leaps"
"dkamm/deepcoder" -> "shrivastavadisha/N-PEPS"
"Deducteam/lambdapi" -> "Deducteam/Dedukti"
"Deducteam/lambdapi" -> "mattam82/Coq-Equations"
"Deducteam/lambdapi" -> "MetaRocq/metarocq"
"Deducteam/lambdapi" -> "math-comp/analysis"
"Deducteam/lambdapi" -> "cedille/cedille" ["e"=1]
"Deducteam/lambdapi" -> "LPCIC/elpi"
"Deducteam/lambdapi" -> "math-comp/math-comp"
"Deducteam/lambdapi" -> "AndrasKovacs/elaboration-zoo" ["e"=1]
"Deducteam/lambdapi" -> "PrincetonUniversity/VST"
"Deducteam/lambdapi" -> "LPCIC/coq-elpi"
"Deducteam/lambdapi" -> "agda/agda-categories" ["e"=1]
"Deducteam/lambdapi" -> "HOL-Theorem-Prover/HOL"
"Deducteam/lambdapi" -> "rocq-community/coq-tricks"
"Deducteam/lambdapi" -> "ott-lang/ott"
"Deducteam/lambdapi" -> "agda/cubical" ["e"=1]
"kfl/mosml" -> "melsman/mlkit"
"kfl/mosml" -> "polyml/polyml"
"kfl/mosml" -> "MLton/mlton"
"kfl/mosml" -> "standardml/smackage"
"kfl/mosml" -> "elpinal/bright-ml"
"kfl/mosml" -> "smlsharp/smlsharp"
"haskell-perf/checklist" -> "antalsz/hs-to-coq" ["e"=1]
"GaloisInc/macaw" -> "GaloisInc/reopt"
"classabbyamp/espresso-logic" -> "Gigantua/Espresso"
"CertiCoq/certicoq" -> "mattam82/Coq-Equations"
"CertiCoq/certicoq" -> "QuickChick/QuickChick"
"CertiCoq/certicoq" -> "lukaszcz/coqhammer"
"CertiCoq/certicoq" -> "MetaRocq/metarocq"
"CertiCoq/certicoq" -> "mit-plv/bedrock2"
"CertiCoq/certicoq" -> "rocq-prover/opam"
"CertiCoq/certicoq" -> "rocq-prover/rfcs"
"lukaszcz/coqhammer" -> "smtcoq/smtcoq"
"lukaszcz/coqhammer" -> "mattam82/Coq-Equations"
"lukaszcz/coqhammer" -> "MetaRocq/metarocq"
"lukaszcz/coqhammer" -> "DeepSpec/InteractionTrees"
"lukaszcz/coqhammer" -> "GeoCoq/GeoCoq"
"lukaszcz/coqhammer" -> "snu-sf/paco"
"lukaszcz/coqhammer" -> "CertiCoq/certicoq"
"lukaszcz/coqhammer" -> "rocq-community/coq-ext-lib"
"lukaszcz/coqhammer" -> "rocq-archive/coq-serapi"
"lukaszcz/coqhammer" -> "rocq-community/coq-tricks"
"lukaszcz/coqhammer" -> "math-comp/hierarchy-builder"
"lukaszcz/coqhammer" -> "QuickChick/QuickChick"
"lukaszcz/coqhammer" -> "LPCIC/coq-elpi"
"lukaszcz/coqhammer" -> "unicoq/unicoq"
"lukaszcz/coqhammer" -> "ProofGeneral/PG"
"rocq-community/fourcolor" -> "mattam82/Coq-Equations"
"rocq-community/fourcolor" -> "rocq-prover/rfcs"
"rocq-community/fourcolor" -> "math-comp/math-comp"
"ilyasergey/pnp" -> "rocq-community/coq-art"
"ilyasergey/pnp" -> "DeepSpec/dsss17"
"ilyasergey/pnp" -> "mattam82/Coq-Equations"
"ilyasergey/pnp" -> "rocq-prover/opam"
"tulip-control/tulip-control" -> "slivingston/gr1py"
"tulip-control/tulip-control" -> "tulip-control/omega"
"tulip-control/tulip-control" -> "VerifiableRobotics/LTLMoP"
"tulip-control/tulip-control" -> "tulip-control/polytope"
"nimble-code/Cobra" -> "nimble-code/Uno"
"SRI-CSL/libpoly" -> "SRI-CSL/OCCAM"
"SRI-CSL/libpoly" -> "SRI-CSL/sally"
"project-everest/everparse" -> "CertiCoq/certicoq"
"rocq-community/reglang" -> "math-comp/finmap"
"finnschiermer/x86prime" -> "diku-compSys/compSys-e2020-pub"
"kirkedal/compSys-e2019-pub" -> "finnschiermer/x86prime"
"kirkedal/compSys-e2019-pub" -> "datalogisk-fagraad/DIKUNotes"
"amuletml/amulet" -> "kindl/Hypatia" ["e"=1]
"vsedach/Vacietis" -> "y2q-actionman/with-c-syntax"
"vsedach/Vacietis" -> "quil-lang/magicl" ["e"=1]
"aman-goel/avr" -> "stanford-centaur/pono"
"aman-goel/avr" -> "gipsyh/rIC3"
"aman-goel/avr" -> "hwmcc/btor2tools"
"aman-goel/avr" -> "diffblue/hw-cbmc"
"aman-goel/avr" -> "arbrad/IC3ref"
"aman-goel/avr" -> "cristian-mattarei/CoSA"
"awesomo4000/awesome-provable" -> "ligurio/practical-fm"
"awesomo4000/awesome-provable" -> "ilyasergey/pnp"
"flxsosa/ProgramSearch" -> "lorepozo/program-induction"
"flxsosa/ProgramSearch" -> "clvrai/leaps"
"bunelr/GandRL_for_NPS" -> "carpedm20/karel"
"bunelr/GandRL_for_NPS" -> "Jungyhuk/latent-execution"
"bunelr/GandRL_for_NPS" -> "carpedm20/program-synthesis-rl-tensorflow"
"hwmcc/btor2tools" -> "CoriolisSP/FuzzBtor2"
"hwmcc/btor2tools" -> "gipsyh/rIC3"
"amitz25/PCCoder" -> "Jungyhuk/latent-execution"
"meelgroup/approxmc" -> "meelgroup/ganak"
"meelgroup/approxmc" -> "marcthurley/sharpSAT"
"stanford-centaur/smt-switch" -> "stanford-centaur/pono"
"stanford-centaur/smt-switch" -> "cristian-mattarei/CoSA"
"stanford-centaur/smt-switch" -> "hwmcc/btor2tools"
"stanford-centaur/smt-switch" -> "gipsyh/rIC3"
"stanford-centaur/smt-switch" -> "SRI-CSL/yices2"
"stanford-centaur/smt-switch" -> "aman-goel/avr"
"stanford-centaur/smt-switch" -> "Boolector/boolector"
"shaohua0116/demo2program" -> "carpedm20/program-synthesis-rl-tensorflow"
"Deducteam/Dedukti" -> "Deducteam/lambdapi"
"Deducteam/Dedukti" -> "Deducteam/Logipedia"
"rocq-community/corn" -> "rocq-community/math-classes"
"rocq-community/corn" -> "rocq-community/coq-ext-lib"
"arbrad/IC3ref" -> "aman-goel/avr"
"arbrad/IC3ref" -> "gipsyh/rIC3"
"arbrad/IC3ref" -> "Gy-Hu/HWMCC24-benchmark" ["e"=1]
"uds-psl/coq-library-undecidability" -> "uds-psl/coq-library-complexity"
"uds-psl/coq-library-undecidability" -> "math-comp/hierarchy-builder"
"carpedm20/program-synthesis-rl-tensorflow" -> "carpedm20/karel"
"carpedm20/program-synthesis-rl-tensorflow" -> "shaohua0116/demo2program"
"carpedm20/program-synthesis-rl-tensorflow" -> "bunelr/GandRL_for_NPS"
"meelgroup/ganak" -> "meelgroup/approxmc"
"rocq-community/math-classes" -> "rocq-community/corn"
"rocq-community/math-classes" -> "rocq-community/coq-ext-lib"
"formal-land/coq-of-ocaml" -> "coq-io/io"
"formal-land/coq-of-ocaml" -> "vellvm/vellvm"
"formal-land/coq-of-ocaml" -> "CertiCoq/certicoq"
"formal-land/coq-of-ocaml" -> "mattam82/Coq-Equations"
"formal-land/coq-of-ocaml" -> "mit-plv/bedrock2"
"formal-land/coq-of-ocaml" -> "MetaRocq/metarocq"
"formal-land/coq-of-ocaml" -> "rocq-prover/opam"
"formal-land/coq-of-ocaml" -> "rocq-community/coqeal"
"formal-land/coq-of-ocaml" -> "ocaml-gospel/gospel"
"rocq-community/coq-dpdgraph" -> "rocq-community/coqeal"
"rocq-community/coq-dpdgraph" -> "coq-community/coq-program-verification-template"
"rossberg/hamlet" -> "standardml/smackage"
"tulip-control/polytope" -> "mcmtroffaes/pycddlib"
"usi-verification-and-security/opensmt" -> "usi-verification-and-security/golem"
"system-pclub/rust-study" -> "lizhuohua/rust-mir-checker"
"system-pclub/rust-study" -> "rustanlys/rupta"
"system-pclub/rust-study" -> "lizhuohua/rust-ffi-checker"
"system-pclub/rust-study" -> "Artisan-Lab/RAPx"
"datalogisk-fagraad/DIKUNotes" -> "kirkedal/compSys-e2019-pub"
"datalogisk-fagraad/DIKUNotes" -> "coastalcph/nlp-course"
"datalogisk-fagraad/DIKUNotes" -> "diku-compSys/compSys-e2020-pub"
"datalogisk-fagraad/DIKUNotes" -> "finnschiermer/x86prime"
"datalogisk-fagraad/DIKUNotes" -> "diku-compSys/compSys-e2021-pub"
"datalogisk-fagraad/DIKUNotes" -> "diku-dk/ap-e2024-pub"
"datalogisk-fagraad/DIKUNotes" -> "joshniemela/KU-courses"
"datalogisk-fagraad/DIKUNotes" -> "diku-dk/smlpkg"
"datalogisk-fagraad/DIKUNotes" -> "diku-dk/diku-canvas"
"datalogisk-fagraad/DIKUNotes" -> "diku-compSys/compSys-e2023-pub"
"SMLFamily/The-Definition-of-Standard-ML" -> "SMLFamily/The-Definition-of-Standard-ML-Revised"
"SMLFamily/The-Definition-of-Standard-ML" -> "SMLFamily/SML-The-Living-Language"
"SMLFamily/The-Definition-of-Standard-ML" -> "SMLFamily/The-Mechanization-of-Standard-ML"
"SMLFamily/The-Definition-of-Standard-ML-Revised" -> "SMLFamily/The-Definition-of-Standard-ML"
"SMLFamily/The-Definition-of-Standard-ML-Revised" -> "SMLFamily/The-Mechanization-of-Standard-ML"
"SMLFamily/The-Definition-of-Standard-ML-Revised" -> "SMLFamily/Successor-ML"
"carpedm20/karel" -> "carpedm20/program-synthesis-rl-tensorflow"
"carpedm20/karel" -> "bunelr/GandRL_for_NPS"
"elpinal/modules" -> "elpinal/modules-rs"
"awslabs/aws-crypto-policy-compliance-checker" -> "awslabs/data-classification-checker"
"mit-plv/riscv-coq" -> "mit-plv/riscv-semantics"
"mit-plv/riscv-coq" -> "sifive/RiscvSpecFormal"
"diku-dk/lys" -> "diku-dk/smlfut"
"diku-dk/lys" -> "diku-dk/futhark-vscode"
"HACS-workshop/hacspec" -> "agl/postquantum"
"SRI-CSL/PVS" -> "nasa/pvslib"
"SRI-CSL/PVS" -> "SRI-CSL/sally"
"DfX-NYUAD/PSAT" -> "gatelabdavis/SMTAttack"
"seL4/camkes-vm-examples" -> "seL4/camkes-arm-vm"
"gatelabdavis/SMTAttack" -> "DfX-NYUAD/PSAT"
"tink-crypto/tink" -> "C2SP/wycheproof" ["e"=1]
"AbsInt/CompCert" -> "PrincetonUniversity/VST"
"AbsInt/CompCert" -> "rocq-prover/rocq"
"AbsInt/CompCert" -> "CakeML/cakeml"
"AbsInt/CompCert" -> "vellvm/vellvm"
"AbsInt/CompCert" -> "HoTT/Coq-HoTT" ["e"=1]
"AbsInt/CompCert" -> "MetaRocq/metarocq"
"AbsInt/CompCert" -> "rocq-community/coq-tricks"
"AbsInt/CompCert" -> "agda/agda" ["e"=1]
"AbsInt/CompCert" -> "math-comp/math-comp"
"AbsInt/CompCert" -> "ProofGeneral/PG"
"AbsInt/CompCert" -> "achlipala/frap"
"AbsInt/CompCert" -> "FStarLang/FStar"
"AbsInt/CompCert" -> "QuickChick/QuickChick"
"AbsInt/CompCert" -> "UniMath/UniMath" ["e"=1]
"AbsInt/CompCert" -> "DeepSpec/InteractionTrees"
"utwente-fmt/ltsmin" -> "adl/hoaf"
"idris-lang/Idris-dev" -> "FStarLang/FStar" ["e"=1]
"robpike/lisp" -> "rhysd/gocaml" ["e"=1]
"bgavran/Category_Theory_Machine_Learning" -> "jwiegley/category-theory" ["e"=1]
"ark-lang/ark" -> "rhysd/gocaml" ["e"=1]
"CatalaLang/catala" -> "AbsInt/CompCert" ["e"=1]
"CatalaLang/catala" -> "FStarLang/FStar" ["e"=1]
"CatalaLang/catala" -> "Deducteam/lambdapi" ["e"=1]
"CatalaLang/catala" -> "FStarLang/karamel" ["e"=1]
"CatalaLang/catala" -> "CakeML/cakeml" ["e"=1]
"seL4/seL4" -> "seL4/l4v" ["e"=1]
"seL4/seL4" -> "AbsInt/CompCert" ["e"=1]
"microsoft/verona" -> "FStarLang/FStar" ["e"=1]
"aws/s2n-tls" -> "C2SP/wycheproof" ["e"=1]
"magmide/magmide" -> "vellvm/vellvm" ["e"=1]
"magmide/magmide" -> "achlipala/frap" ["e"=1]
"google/end-to-end" -> "C2SP/wycheproof" ["e"=1]
"ongardie/raft.tla" -> "uwplse/verdi" ["e"=1]
"lizhuohua/rust-mir-checker" -> "lizhuohua/rust-ffi-checker"
"lizhuohua/rust-mir-checker" -> "system-pclub/rust-study"
"lizhuohua/rust-mir-checker" -> "Artisan-Lab/RULF"
"lizhuohua/rust-mir-checker" -> "Artisan-Lab/RAPx"
"lizhuohua/rust-mir-checker" -> "rustanlys/rupta"
"lizhuohua/rust-mir-checker" -> "LiHRaM/taint"
"rocq-community/awesome-coq" -> "rocq-community/coq-tricks"
"rocq-community/awesome-coq" -> "mattam82/Coq-Equations"
"rocq-community/awesome-coq" -> "rocq-prover/vscoq"
"rocq-community/awesome-coq" -> "achlipala/frap"
"rocq-community/awesome-coq" -> "MetaRocq/metarocq"
"rocq-community/awesome-coq" -> "PrincetonUniversity/VST"
"rocq-community/awesome-coq" -> "math-comp/math-comp"
"rocq-community/awesome-coq" -> "math-comp/analysis"
"rocq-community/awesome-coq" -> "QuickChick/QuickChick"
"rocq-community/awesome-coq" -> "mit-plv/bedrock2"
"rocq-community/awesome-coq" -> "rocq-community/coq-art"
"rocq-community/awesome-coq" -> "ott-lang/ott"
"rocq-community/awesome-coq" -> "princeton-vl/CoqGym"
"rocq-community/awesome-coq" -> "cpitclaudel/company-coq"
"rocq-community/awesome-coq" -> "yeah-tiger/yeah-tiger.github.io"
"S2E/s2e" -> "staticafi/symbiotic" ["e"=1]
"seL4/l4v" -> "seL4/seL4" ["e"=1]
"seL4/l4v" -> "seL4/isabelle" ["e"=1]
"seL4/l4v" -> "HOL-Theorem-Prover/HOL"
"seL4/l4v" -> "smtcoq/smtcoq"
"seL4/l4v" -> "CakeML/cakeml"
"seL4/l4v" -> "DeepSpec/InteractionTrees"
"seL4/l4v" -> "MetaRocq/metarocq"
"seL4/l4v" -> "AbsInt/CompCert"
"seL4/l4v" -> "mit-plv/bedrock2"
"seL4/l4v" -> "ligurio/practical-fm"
"seL4/l4v" -> "seL4/seL4_libs"
"seL4/l4v" -> "PrincetonUniversity/VST"
"seL4/l4v" -> "jrh13/hol-light"
"seL4/l4v" -> "polyml/polyml"
"seL4/l4v" -> "antalsz/hs-to-coq"
"azdavis/millet" -> "shwestrick/smlfmt"
"azdavis/millet" -> "T-Brick/molasses"
"azdavis/millet" -> "smlnj/smlnj"
"azdavis/millet" -> "brandonspark/mulligan"
"azdavis/millet" -> "MLton/mlton"
"azdavis/millet" -> "minoki/LunarML"
"azdavis/millet" -> "standardml/smackage"
"azdavis/millet" -> "SomewhatML/sml-compiler"
"PrincetonUniversity/VST" -> "mit-plv/bedrock2"
"PrincetonUniversity/VST" -> "MetaRocq/metarocq"
"PrincetonUniversity/VST" -> "DeepSpec/InteractionTrees"
"PrincetonUniversity/VST" -> "vellvm/vellvm"
"PrincetonUniversity/VST" -> "mattam82/Coq-Equations"
"PrincetonUniversity/VST" -> "QuickChick/QuickChick"
"PrincetonUniversity/VST" -> "math-comp/math-comp"
"PrincetonUniversity/VST" -> "ProofGeneral/PG"
"PrincetonUniversity/VST" -> "AbsInt/CompCert"
"PrincetonUniversity/VST" -> "smtcoq/smtcoq"
"PrincetonUniversity/VST" -> "rocq-community/coq-tricks"
"PrincetonUniversity/VST" -> "CakeML/cakeml"
"PrincetonUniversity/VST" -> "CertiCoq/certicoq"
"PrincetonUniversity/VST" -> "achlipala/frap"
"PrincetonUniversity/VST" -> "lukaszcz/coqhammer"
"niklasso/minisat" -> "msoos/cryptominisat"
"niklasso/minisat" -> "arminbiere/cadical"
"niklasso/minisat" -> "arminbiere/kissat"
"niklasso/minisat" -> "pysathq/pysat"
"niklasso/minisat" -> "stp/stp"
"niklasso/minisat" -> "cvc5/cvc5"
"niklasso/minisat" -> "berkeley-abc/abc" ["e"=1]
"niklasso/minisat" -> "SRI-CSL/yices2"
"niklasso/minisat" -> "Boolector/boolector"
"niklasso/minisat" -> "diffblue/cbmc"
"niklasso/minisat" -> "pysmt/pysmt"
"niklasso/minisat" -> "seahorn/seahorn"
"niklasso/minisat" -> "marijnheule/microsat"
"niklasso/minisat" -> "audemard/glucose"
"niklasso/minisat" -> "Z3Prover/z3" ["e"=1]
"viperproject/gobra" -> "viperproject/gobra-ide"
"viperproject/gobra" -> "viperproject/VerifiedSCION"
"viperproject/gobra" -> "viperproject/silver"
"viperproject/gobra" -> "viperproject/carbon"
"viperproject/gobra" -> "viperproject/silicon"
"arminbiere/kissat" -> "arminbiere/cadical"
"arminbiere/kissat" -> "msoos/cryptominisat"
"arminbiere/kissat" -> "niklasso/minisat"
"arminbiere/kissat" -> "bitwuzla/bitwuzla"
"arminbiere/kissat" -> "arminbiere/satch"
"arminbiere/kissat" -> "pysathq/pysat"
"arminbiere/kissat" -> "audemard/glucose"
"arminbiere/kissat" -> "cvc5/cvc5"
"arminbiere/kissat" -> "SRI-CSL/yices2"
"arminbiere/kissat" -> "Boolector/boolector"
"arminbiere/kissat" -> "stp/stp"
"arminbiere/kissat" -> "hgarrereyn/SBVA"
"arminbiere/kissat" -> "marijnheule/microsat"
"arminbiere/kissat" -> "arminbiere/lingeling"
"arminbiere/kissat" -> "marijnheule/drat-trim"
"racket/typed-racket" -> "emina/rosette" ["e"=1]
"sweirich/dth" -> "snowleopard/alga-paper" ["e"=1]
"sweirich/dth" -> "antalsz/hs-to-coq"
"statebox/awesome-applied-ct" -> "jwiegley/category-theory" ["e"=1]
"tulip-control/dd" -> "ivmai/cudd"
"tulip-control/dd" -> "utwente-fmt/sylvan"
"tulip-control/dd" -> "trolando/sylvan"
"tulip-control/dd" -> "tulip-control/omega"
"tulip-control/dd" -> "johnyf/tool_lists"
"tulip-control/dd" -> "SSoelvsten/adiar"
"sosy-lab/cpachecker" -> "sosy-lab/sv-benchmarks"
"sosy-lab/cpachecker" -> "sosy-lab/benchexec"
"sosy-lab/cpachecker" -> "ultimate-pa/ultimate"
"sosy-lab/cpachecker" -> "diffblue/cbmc"
"sosy-lab/cpachecker" -> "esbmc/esbmc"
"sosy-lab/cpachecker" -> "smackers/smack"
"sosy-lab/cpachecker" -> "seahorn/seahorn"
"sosy-lab/cpachecker" -> "staticafi/symbiotic"
"sosy-lab/cpachecker" -> "SRI-CSL/sally"
"sosy-lab/cpachecker" -> "sosy-lab/java-smt"
"sosy-lab/cpachecker" -> "boogie-org/corral"
"sosy-lab/cpachecker" -> "mmjb/T2"
"sosy-lab/cpachecker" -> "sosy-lab/sv-witnesses"
"sosy-lab/cpachecker" -> "SRI-CSL/yices2"
"cil-project/cil" -> "goblint/cil"
"cil-project/cil" -> "sosy-lab/sv-benchmarks"
"cil-project/cil" -> "verifast/verifast"
"cil-project/cil" -> "sosy-lab/cpachecker"
"uuverifiers/eldarica" -> "usi-verification-and-security/golem"
"uuverifiers/eldarica" -> "hopv/hoice"
"uuverifiers/eldarica" -> "uuverifiers/tricera"
"acl2/acl2" -> "the-little-prover/j-bob" ["e"=1]
"acl2/acl2" -> "HOL-Theorem-Prover/HOL"
"acl2/acl2" -> "jrh13/hol-light"
"acl2/acl2" -> "Clozure/ccl" ["e"=1]
"acl2/acl2" -> "zkat/chanl" ["e"=1]
"acl2/acl2" -> "SRI-CSL/PVS"
"acl2/acl2" -> "kennytilton/cells" ["e"=1]
"acl2/acl2" -> "vsedach/Vacietis"
"acl2/acl2" -> "jscl-project/jscl" ["e"=1]
"acl2/acl2" -> "marcoheisig/Petalisp" ["e"=1]
"acl2/acl2" -> "guicho271828/trivia" ["e"=1]
"acl2/acl2" -> "McCLIM/McCLIM" ["e"=1]
"acl2/acl2" -> "Shen-Language/shen-cl" ["e"=1]
"acl2/acl2" -> "PrincetonUniversity/VST"
"acl2/acl2" -> "aman-goel/avr"
"SRI-CSL/sally" -> "SRI-CSL/libpoly"
"SRI-CSL/sally" -> "SRI-CSL/OCCAM"
"pysmt/pysmt" -> "cvc5/cvc5"
"pysmt/pysmt" -> "SRI-CSL/yices2"
"pysmt/pysmt" -> "Boolector/boolector"
"pysmt/pysmt" -> "pysathq/pysat"
"pysmt/pysmt" -> "seahorn/seahorn"
"pysmt/pysmt" -> "msoos/cryptominisat"
"pysmt/pysmt" -> "stp/stp"
"pysmt/pysmt" -> "arminbiere/cadical"
"pysmt/pysmt" -> "SRI-CSL/sally"
"pysmt/pysmt" -> "sosy-lab/java-smt"
"pysmt/pysmt" -> "boogie-org/boogie"
"pysmt/pysmt" -> "vprover/vampire"
"pysmt/pysmt" -> "staticafi/symbiotic"
"pysmt/pysmt" -> "ddsmt/ddSMT"
"pysmt/pysmt" -> "stanford-centaur/smt-switch"
"diku-dk/smlpkg" -> "shwestrick/smlfmt"
"diku-dk/smlpkg" -> "jtkristensen/Jeopardy"
"diku-dk/smlpkg" -> "diku-dk/sml-http"
"diku-dk/smlpkg" -> "diku-dk/sml-server"
"diku-dk/smlpkg" -> "elpinal/bright-ml"
"diku-dk/smlpkg" -> "diku-dk/smlfut"
"diku-dk/smlpkg" -> "kantinen/kantinfo"
"diku-dk/smlpkg" -> "madsobitsoe/CATITOR"
"clarus/coq-chick-blog" -> "Ptival/PeaCoq"
"clarus/coq-chick-blog" -> "coq-io/io"
"clarus/coq-chick-blog" -> "jwiegley/coq-haskell"
"emina/rosette" -> "cvc5/cvc5"
"emina/rosette" -> "wilbowma/cur" ["e"=1]
"emina/rosette" -> "racket/typed-racket" ["e"=1]
"emina/rosette" -> "boogie-org/boogie"
"emina/rosette" -> "achlipala/frap"
"emina/rosette" -> "mangpo/greenthumb" ["e"=1]
"emina/rosette" -> "PrincetonUniversity/VST"
"emina/rosette" -> "lexi-lambda/hackett" ["e"=1]
"emina/rosette" -> "racketscript/racketscript" ["e"=1]
"emina/rosette" -> "seahorn/seahorn"
"emina/rosette" -> "egraphs-good/egg" ["e"=1]
"emina/rosette" -> "soegaard/urlang" ["e"=1]
"emina/rosette" -> "uwplse/verdi"
"emina/rosette" -> "racket/racket7" ["e"=1]
"emina/rosette" -> "rems-project/sail"
"hopv/MoCHi" -> "hopv/hoice"
"jwiegley/category-theory" -> "mattam82/Coq-Equations"
"jwiegley/category-theory" -> "rocq-community/coq-tricks"
"jwiegley/category-theory" -> "HoTT/Coq-HoTT" ["e"=1]
"jwiegley/category-theory" -> "UniMath/UniMath" ["e"=1]
"jwiegley/category-theory" -> "MetaRocq/metarocq"
"jwiegley/category-theory" -> "jwiegley/coq-haskell"
"jwiegley/category-theory" -> "ProofGeneral/PG"
"jwiegley/category-theory" -> "agda/agda-categories" ["e"=1]
"jwiegley/category-theory" -> "antalsz/hs-to-coq"
"jwiegley/category-theory" -> "math-comp/math-comp"
"jwiegley/category-theory" -> "mortberg/cubicaltt" ["e"=1]
"jwiegley/category-theory" -> "smtcoq/smtcoq"
"jwiegley/category-theory" -> "jwbuurlage/category-theory-programmers" ["e"=1]
"jwiegley/category-theory" -> "rocq-community/math-classes"
"jwiegley/category-theory" -> "achlipala/frap"
"elpinal/bright-ml" -> "elpinal/seqmod"
"elpinal/bright-ml" -> "diku-dk/sml-server"
"hacspec/hacspec" -> "cryspen/hax"
"hacspec/hacspec" -> "pornin/crrl"
"hacspec/hacspec" -> "cryspen/libcrux"
"hacspec/hacspec" -> "jasmin-lang/jasmin"
"benjaminkiesl/tamarin_toy_protocol" -> "tamarin-prover/teaching"
"rocq-prover/platform" -> "rocq-prover/vscoq"
"rocq-prover/platform" -> "rocq-prover/opam"
"rocq-prover/platform" -> "MetaRocq/metarocq"
"rocq-prover/platform" -> "mattam82/Coq-Equations"
"rocq-prover/platform" -> "math-comp/analysis"
"rocq-prover/platform" -> "QuickChick/QuickChick"
"rocq-prover/platform" -> "math-comp/math-comp"
"rocq-prover/platform" -> "ejgallego/coq-lsp"
"rocq-prover/platform" -> "PrincetonUniversity/VST"
"openmls/openmls" -> "hacspec/hacspec" ["e"=1]
"Chain-Fox/Chain-Fox" -> "lizhuohua/rust-mir-checker" ["e"=1]
"Chain-Fox/Chain-Fox" -> "BurtonQin/Awesome-Rust-Checker" ["e"=1]
"Chain-Fox/Chain-Fox" -> "Artisan-Lab/RULF" ["e"=1]
"Chain-Fox/Chain-Fox" -> "lizhuohua/rust-ffi-checker" ["e"=1]
"Chain-Fox/Chain-Fox" -> "AeneasVerif/charon" ["e"=1]
"Chain-Fox/Chain-Fox" -> "Artisan-Lab/RAPx" ["e"=1]
"Chain-Fox/Chain-Fox" -> "system-pclub/rust-study" ["e"=1]
"bitwuzla/bitwuzla" -> "Boolector/boolector"
"bitwuzla/bitwuzla" -> "SRI-CSL/yices2"
"bitwuzla/bitwuzla" -> "arminbiere/cadical"
"bitwuzla/bitwuzla" -> "stp/stp"
"bitwuzla/bitwuzla" -> "arminbiere/kissat"
"bitwuzla/bitwuzla" -> "stanford-centaur/smt-switch"
"bitwuzla/bitwuzla" -> "gipsyh/rIC3"
"bitwuzla/bitwuzla" -> "aman-goel/avr"
"bitwuzla/bitwuzla" -> "hwmcc/btor2tools"
"bitwuzla/bitwuzla" -> "cvc5/cvc5"
"bitwuzla/bitwuzla" -> "jix/kissat_extras"
"bitwuzla/bitwuzla" -> "wjrforcyber/ABCPaperCheck" ["e"=1]
"bitwuzla/bitwuzla" -> "stanford-centaur/pono"
"bitwuzla/bitwuzla" -> "diffblue/hw-cbmc"
"project-oak/rust-verification-tools" -> "hopv/rust-horn"
"project-oak/rust-verification-tools" -> "GaloisInc/crucible"
"project-oak/rust-verification-tools" -> "Kha/electrolysis"
"SRI-CSL/yices2" -> "Boolector/boolector"
"SRI-CSL/yices2" -> "cvc5/cvc5"
"SRI-CSL/yices2" -> "stp/stp"
"SRI-CSL/yices2" -> "SRI-CSL/sally"
"SRI-CSL/yices2" -> "seahorn/seahorn"
"SRI-CSL/yices2" -> "bitwuzla/bitwuzla"
"SRI-CSL/yices2" -> "stanford-centaur/smt-switch"
"SRI-CSL/yices2" -> "arminbiere/cadical"
"SRI-CSL/yices2" -> "pysmt/pysmt"
"SRI-CSL/yices2" -> "seahorn/clam" ["e"=1]
"SRI-CSL/yices2" -> "stanford-centaur/pono"
"SRI-CSL/yices2" -> "vprover/vampire"
"SRI-CSL/yices2" -> "seahorn/crab" ["e"=1]
"SRI-CSL/yices2" -> "SRI-CSL/libpoly"
"SRI-CSL/yices2" -> "ultimate-pa/ultimate"
"athas/raytracers" -> "MPLLang/mpl"
"nasa/pvslib" -> "SRI-CSL/PVS"
"nasa/pvslib" -> "nasa/vscode-pvs"
"melsman/mlkit" -> "polyml/polyml"
"melsman/mlkit" -> "standardml/smackage"
"melsman/mlkit" -> "SMLFamily/Successor-ML"
"melsman/mlkit" -> "kfl/mosml"
"melsman/mlkit" -> "MLton/mlton"
"melsman/mlkit" -> "eatonphil/ponyo"
"melsman/mlkit" -> "SMLFamily/BasisLibrary"
"melsman/mlkit" -> "elpinal/bright-ml"
"melsman/mlkit" -> "SMLFamily/The-Definition-of-Standard-ML-Revised"
"hopv/rust-horn" -> "hopv/hoice"
"hopv/rust-horn" -> "viperproject/mendel-verifier"
"uwplse/verdi" -> "uwplse/verdi-raft"
"uwplse/verdi" -> "DistributedComponents/disel"
"uwplse/verdi" -> "microsoft/Ironclad" ["e"=1]
"uwplse/verdi" -> "mit-pdos/fscq"
"uwplse/verdi" -> "smtcoq/smtcoq"
"uwplse/verdi" -> "PrincetonUniversity/VST"
"uwplse/verdi" -> "mattam82/Coq-Equations"
"uwplse/verdi" -> "achlipala/frap"
"uwplse/verdi" -> "Ptival/PeaCoq"
"uwplse/verdi" -> "DeepSpec/InteractionTrees"
"uwplse/verdi" -> "QuickChick/QuickChick"
"uwplse/verdi" -> "RedPRL/sml-redprl" ["e"=1]
"uwplse/verdi" -> "ongardie/raft.tla" ["e"=1]
"uwplse/verdi" -> "MetaRocq/metarocq"
"uwplse/verdi" -> "rocq-community/coq-tricks"
"cpitclaudel/alectryon" -> "mattam82/Coq-Equations"
"cpitclaudel/alectryon" -> "leanprover/LeanInk" ["e"=1]
"cpitclaudel/alectryon" -> "rocq-community/coq-tricks"
"cpitclaudel/alectryon" -> "MetaRocq/metarocq"
"cpitclaudel/alectryon" -> "coq-tactician/coq-tactician"
"cpitclaudel/alectryon" -> "tchajed/ltac2-tutorial"
"cpitclaudel/alectryon" -> "cpitclaudel/company-coq"
"smtcoq/smtcoq" -> "lukaszcz/coqhammer"
"smtcoq/smtcoq" -> "mattam82/Coq-Equations"
"smtcoq/smtcoq" -> "DeepSpec/InteractionTrees"
"smtcoq/smtcoq" -> "rocq-community/coqeal"
"smtcoq/smtcoq" -> "bluerock-io/BRiCk"
"smtcoq/smtcoq" -> "mit-plv/bedrock2"
"smtcoq/smtcoq" -> "rocq-community/paramcoq"
"smtcoq/smtcoq" -> "MetaRocq/metarocq"
"smtcoq/smtcoq" -> "QuickChick/QuickChick"
"smtcoq/smtcoq" -> "LPCIC/coq-elpi"
"viperproject/silver" -> "viperproject/silicon"
"viperproject/silver" -> "viperproject/carbon"
"viperproject/silver" -> "viperproject/gobra"
"viperproject/silver" -> "viperproject/viperserver"
"viperproject/silicon" -> "viperproject/silver"
"viperproject/silicon" -> "viperproject/carbon"
"viperproject/silicon" -> "utwente-fmt/vercors"
"viperproject/carbon" -> "viperproject/silver"
"viperproject/carbon" -> "viperproject/viperserver"
"MPLLang/mpl-tutorial" -> "diku-dk/sml-server"
"MPLLang/mpl-tutorial" -> "diku-dk/smlfut"
"mgaudet/CompilerJobs" -> "SomewhatML/sml-compiler" ["e"=1]
"trolando/sylvan" -> "utwente-fmt/sylvan"
"trolando/sylvan" -> "ivmai/cudd"
"trolando/sylvan" -> "trolando/lace"
"staticafi/symbiotic" -> "mchalupa/dg" ["e"=1]
"staticafi/symbiotic" -> "seahorn/crab" ["e"=1]
"staticafi/symbiotic" -> "zhangyz/llvm-slicing" ["e"=1]
"staticafi/symbiotic" -> "seahorn/clam" ["e"=1]
"staticafi/symbiotic" -> "seahorn/seahorn"
"staticafi/symbiotic" -> "eurecom-s3/symcc" ["e"=1]
"staticafi/symbiotic" -> "jirislaby/LLVMSlicer" ["e"=1]
"staticafi/symbiotic" -> "sslab-gatech/qsym" ["e"=1]
"staticafi/symbiotic" -> "kdudka/predator"
"staticafi/symbiotic" -> "ultimate-pa/ultimate"
"staticafi/symbiotic" -> "seahorn/sea-dsa" ["e"=1]
"staticafi/symbiotic" -> "sosy-lab/cpachecker"
"staticafi/symbiotic" -> "trailofbits/polytracker" ["e"=1]
"staticafi/symbiotic" -> "S2E/s2e" ["e"=1]
"standardml/smackage" -> "eatonphil/ponyo"
"standardml/smackage" -> "standardml/cmlib" ["e"=1]
"standardml/smackage" -> "standardml/hackday"
"standardml/smackage" -> "melsman/mlkit"
"standardml/smackage" -> "rossberg/hamlet"
"standardml/smackage" -> "SMLFamily/Successor-ML"
"standardml/smackage" -> "SMLFamily/BasisLibrary"
"model-checking/cbmc-starter-kit" -> "model-checking/cbmc-viewer"
"model-checking/cbmc-viewer" -> "model-checking/cbmc-starter-kit"
"SomewhatML/sml-compiler" -> "shwestrick/smlfmt"
"mit-plv/koika" -> "mit-plv/kami"
"mit-plv/koika" -> "sifive/Kami"
"seL4/sel4test" -> "seL4/sel4bench"
"seL4/sel4test" -> "seL4/capdl"
"seL4/sel4test" -> "seL4/seL4_tools"
"ashish-gehani/OCCAM" -> "SRI-CSL/OCCAM"
"nadia-polikarpova/synquid" -> "TyGuS/hoogle_plus"
"nadia-polikarpova/synquid" -> "tjknoth/resyn"
"genieacs/espresso-iisojs" -> "Gigantua/Espresso"
"smlhelp/book" -> "T-Brick/molasses"
"stanford-centaur/pono" -> "stanford-centaur/smt-switch"
"stanford-centaur/pono" -> "cristian-mattarei/CoSA"
"stanford-centaur/pono" -> "aman-goel/avr"
"stanford-centaur/pono" -> "diffblue/hw-cbmc"
"utwente-fmt/sylvan" -> "trolando/sylvan"
"ParkerK/Tigpiler" -> "steshaw/tiger-ml"
"diku-compSys/compSys-e2020-pub" -> "finnschiermer/x86prime"
"diku-compSys/compSys-e2020-pub" -> "kirkedal/its-e2020-pub"
"seL4/camkes-vm" -> "seL4/camkes-arm-vm"
"seL4/camkes-vm" -> "seL4/camkes-tool"
"seL4/camkes" -> "seL4/camkes-arm-vm"
"seL4/camkes-manifest" -> "seL4/sel4-tutorials-manifest"
"seL4/camkes-manifest" -> "seL4/sel4bench"
"mit-plv/rupicola" -> "mit-plv/bbv"
"ashish-gehani/Trimmer" -> "SRI-CSL/OCCAM"
"Z3Prover/z3" -> "cvc5/cvc5" ["e"=1]
"Z3Prover/z3" -> "rocq-prover/rocq" ["e"=1]
"Z3Prover/z3" -> "dafny-lang/dafny" ["e"=1]
"Z3Prover/z3" -> "FStarLang/FStar" ["e"=1]
"flux-rs/flux" -> "GaloisInc/crucible" ["e"=1]
"google/keytransparency" -> "C2SP/wycheproof" ["e"=1]
"math-comp/math-comp" -> "mattam82/Coq-Equations"
"math-comp/math-comp" -> "math-comp/analysis"
"math-comp/math-comp" -> "MetaRocq/metarocq"
"math-comp/math-comp" -> "UniMath/UniMath" ["e"=1]
"math-comp/math-comp" -> "PrincetonUniversity/VST"
"math-comp/math-comp" -> "ProofGeneral/PG"
"math-comp/math-comp" -> "QuickChick/QuickChick"
"math-comp/math-comp" -> "DeepSpec/InteractionTrees"
"math-comp/math-comp" -> "rocq-community/coq-tricks"
"math-comp/math-comp" -> "cpitclaudel/company-coq"
"math-comp/math-comp" -> "Deducteam/lambdapi"
"math-comp/math-comp" -> "rocq-prover/opam"
"math-comp/math-comp" -> "HoTT/Coq-HoTT" ["e"=1]
"math-comp/math-comp" -> "rocq-community/math-classes"
"math-comp/math-comp" -> "smtcoq/smtcoq"
"p-org/P" -> "dafny-lang/dafny" ["e"=1]
"p-org/P" -> "FStarLang/FStar" ["e"=1]
"p-org/P" -> "boogie-org/boogie" ["e"=1]
"p-org/P" -> "AbsInt/CompCert" ["e"=1]
"chromium/badssl.com" -> "C2SP/wycheproof" ["e"=1]
"bheisler/iai" -> "project-oak/rust-verification-tools" ["e"=1]
"esbmc/esbmc" -> "diffblue/cbmc"
"esbmc/esbmc" -> "sosy-lab/cpachecker"
"esbmc/esbmc" -> "sosy-lab/sv-benchmarks"
"esbmc/esbmc" -> "seahorn/seahorn"
"esbmc/esbmc" -> "staticafi/symbiotic"
"esbmc/esbmc" -> "kaled-alshmrany/FuSeBMC"
"esbmc/esbmc" -> "SRI-CSL/yices2"
"esbmc/esbmc" -> "uuverifiers/eldarica"
"esbmc/esbmc" -> "ultimate-pa/ultimate"
"esbmc/esbmc" -> "smackers/smack"
"esbmc/esbmc" -> "stanford-centaur/pono"
"esbmc/esbmc" -> "cvc5/cvc5"
"esbmc/esbmc" -> "esbmc/esbmc-ai"
"esbmc/esbmc" -> "diffblue/hw-cbmc"
"esbmc/esbmc" -> "stanford-centaur/smt-switch"
"sslab-gatech/Rudra" -> "lizhuohua/rust-mir-checker" ["e"=1]
"sslab-gatech/Rudra" -> "project-oak/rust-verification-tools" ["e"=1]
"eth-sri/ELINA" -> "Antique-team/memcad" ["e"=1]
"seahorn/seahorn" -> "seahorn/clam" ["e"=1]
"seahorn/seahorn" -> "smackers/smack"
"seahorn/seahorn" -> "seahorn/crab" ["e"=1]
"seahorn/seahorn" -> "SRI-CSL/yices2"
"seahorn/seahorn" -> "seahorn/sea-dsa" ["e"=1]
"seahorn/seahorn" -> "boogie-org/boogie"
"seahorn/seahorn" -> "staticafi/symbiotic"
"seahorn/seahorn" -> "sosy-lab/sv-benchmarks"
"seahorn/seahorn" -> "SRI-CSL/sally"
"seahorn/seahorn" -> "antoinemine/apron" ["e"=1]
"seahorn/seahorn" -> "sosy-lab/cpachecker"
"seahorn/seahorn" -> "mchalupa/dg" ["e"=1]
"seahorn/seahorn" -> "diffblue/cbmc"
"seahorn/seahorn" -> "cvc5/cvc5"
"seahorn/seahorn" -> "eurecom-s3/symcc" ["e"=1]
"creusot-rs/creusot" -> "sarsko/CreuSAT" ["e"=1]
"creusot-rs/creusot" -> "AeneasVerif/aeneas" ["e"=1]
"creusot-rs/creusot" -> "GaloisInc/crucible" ["e"=1]
"creusot-rs/creusot" -> "PrincetonUniversity/VST" ["e"=1]
"creusot-rs/creusot" -> "AbsInt/CompCert" ["e"=1]
"trailofbits/vast" -> "seahorn/seahorn" ["e"=1]
"trailofbits/vast" -> "staticafi/symbiotic" ["e"=1]
"google/keyczar" -> "C2SP/wycheproof" ["e"=1]
"gfngfn/SATySFi" -> "esumii/min-caml" ["e"=1]
"newca12/awesome-rust-formalized-reasoning" -> "cryspen/hax" ["e"=1]
"matijapretnar/eff" -> "jwiegley/category-theory" ["e"=1]
"matijapretnar/eff" -> "CakeML/cakeml" ["e"=1]
"Julian/lean.nvim" -> "whonore/Coqtail" ["e"=1]
"tamarin-prover/tamarin-prover" -> "tamarin-prover/teaching"
"tamarin-prover/tamarin-prover" -> "cascremers/scyther"
"tamarin-prover/tamarin-prover" -> "EasyCrypt/easycrypt"
"tamarin-prover/tamarin-prover" -> "tamarin-prover/manual"
"tamarin-prover/tamarin-prover" -> "tls13tamarin/TLS13Tamarin"
"tamarin-prover/tamarin-prover" -> "jasmin-lang/jasmin"
"tamarin-prover/tamarin-prover" -> "benjaminkiesl/tamarin_toy_protocol"
"tamarin-prover/tamarin-prover" -> "HACS-workshop/hacspec"
"tamarin-prover/tamarin-prover" -> "relic-toolkit/relic" ["e"=1]
"tamarin-prover/tamarin-prover" -> "ott-lang/ott"
"tamarin-prover/tamarin-prover" -> "SSProve/ssprove"
"sarsko/CreuSAT" -> "creusot-rs/creusot" ["e"=1]
"sarsko/CreuSAT" -> "shnarazk/splr"
"sarsko/CreuSAT" -> "project-oak/rust-verification-tools"
"sarsko/CreuSAT" -> "jix/varisat"
"sarsko/CreuSAT" -> "GaloisInc/crucible"
"sarsko/CreuSAT" -> "hopv/rust-horn"
"sarsko/CreuSAT" -> "loiclec/fuzzcheck-rs" ["e"=1]
"sarsko/CreuSAT" -> "PrincetonUniversity/VST"
"sarsko/CreuSAT" -> "arminbiere/kissat"
"sarsko/CreuSAT" -> "model-checking/kani" ["e"=1]
"sarsko/CreuSAT" -> "verus-lang/verus" ["e"=1]
"sarsko/CreuSAT" -> "arminbiere/cadical"
"sarsko/CreuSAT" -> "viperproject/prusti-dev" ["e"=1]
"sarsko/CreuSAT" -> "smtcoq/smtcoq"
"mit-plv/fiat" -> "mit-plv/bbv"
"mit-plv/fiat" -> "mit-plv/rupicola"
"msoos/cryptominisat" -> "arminbiere/cadical"
"msoos/cryptominisat" -> "arminbiere/kissat"
"msoos/cryptominisat" -> "niklasso/minisat"
"msoos/cryptominisat" -> "stp/stp"
"msoos/cryptominisat" -> "pysathq/pysat"
"msoos/cryptominisat" -> "cvc5/cvc5"
"msoos/cryptominisat" -> "SRI-CSL/yices2"
"msoos/cryptominisat" -> "Boolector/boolector"
"msoos/cryptominisat" -> "pysmt/pysmt"
"msoos/cryptominisat" -> "kste/cryptosmt" ["e"=1]
"msoos/cryptominisat" -> "diffblue/cbmc"
"msoos/cryptominisat" -> "bitwuzla/bitwuzla"
"msoos/cryptominisat" -> "arminbiere/satch"
"msoos/cryptominisat" -> "meelgroup/approxmc"
"msoos/cryptominisat" -> "muhos/ParaFROST"
"csmith-project/creduce" -> "AbsInt/CompCert" ["e"=1]
"arminbiere/satch" -> "marijnheule/microsat"
"arminbiere/satch" -> "arminbiere/gimsatul"
"arminbiere/satch" -> "arminbiere/runlim"
"arminbiere/satch" -> "arminbiere/cadical"
"arminbiere/satch" -> "arminbiere/kissat"
"GaloisInc/saw-script" -> "GaloisInc/cryptol"
"GaloisInc/saw-script" -> "GaloisInc/crucible"
"GaloisInc/saw-script" -> "GaloisInc/saw-core"
"GaloisInc/saw-script" -> "LeventErkok/sbv" ["e"=1]
"GaloisInc/saw-script" -> "antalsz/hs-to-coq"
"GaloisInc/saw-script" -> "PrincetonUniversity/VST"
"GaloisInc/saw-script" -> "boogie-org/boogie"
"GaloisInc/saw-script" -> "HACS-workshop/hacspec"
"GaloisInc/saw-script" -> "FStarLang/karamel"
"GaloisInc/saw-script" -> "smackers/smack"
"mchalupa/dg" -> "staticafi/symbiotic" ["e"=1]
"mchalupa/dg" -> "seahorn/seahorn" ["e"=1]
"Artisan-Lab/RULF" -> "Artisan-Lab/RAPx"
"Artisan-Lab/RULF" -> "rust-corpus/qrates"
"Artisan-Lab/RULF" -> "parasol-aser/XRust"
"boogie-org/boogie" -> "smackers/smack"
"boogie-org/boogie" -> "boogie-org/corral"
"boogie-org/boogie" -> "seahorn/seahorn"
"boogie-org/boogie" -> "dafny-lang/dafny"
"boogie-org/boogie" -> "cvc5/cvc5"
"boogie-org/boogie" -> "sosy-lab/sv-benchmarks"
"boogie-org/boogie" -> "emina/rosette"
"boogie-org/boogie" -> "microsoft/verisol"
"boogie-org/boogie" -> "verifast/verifast"
"boogie-org/boogie" -> "PrincetonUniversity/VST"
"boogie-org/boogie" -> "SRI-CSL/yices2"
"boogie-org/boogie" -> "ultimate-pa/ultimate"
"boogie-org/boogie" -> "vellvm/vellvm"
"boogie-org/boogie" -> "viperproject/silicon"
"boogie-org/boogie" -> "mit-plv/bedrock2"
"sosy-lab/sv-benchmarks" -> "sosy-lab/cpachecker"
"sosy-lab/sv-benchmarks" -> "ultimate-pa/ultimate"
"sosy-lab/sv-benchmarks" -> "seahorn/seahorn"
"sosy-lab/sv-benchmarks" -> "sosy-lab/benchexec"
"sosy-lab/sv-benchmarks" -> "sosy-lab/sv-comp"
"sosy-lab/sv-benchmarks" -> "ultimate-pa/smtinterpol"
"sosy-lab/sv-benchmarks" -> "boogie-org/corral"
"sosy-lab/sv-benchmarks" -> "seahorn/clam" ["e"=1]
"sosy-lab/sv-benchmarks" -> "diffblue/cbmc"
"sosy-lab/sv-benchmarks" -> "boogie-org/boogie"
"sosy-lab/sv-benchmarks" -> "sosy-lab/sv-witnesses"
"sosy-lab/sv-benchmarks" -> "sosy-lab/java-smt"
"sosy-lab/sv-benchmarks" -> "staticafi/symbiotic"
"sosy-lab/sv-benchmarks" -> "uuverifiers/eldarica"
"sosy-lab/sv-benchmarks" -> "esbmc/esbmc"
"the-little-prover/j-bob" -> "acl2/acl2" ["e"=1]
"the-little-prover/j-bob" -> "achlipala/frap" ["e"=1]
"the-little-prover/j-bob" -> "jrh13/hol-light" ["e"=1]
"cpitclaudel/company-coq" -> "ProofGeneral/PG"
"cpitclaudel/company-coq" -> "mattam82/Coq-Equations"
"cpitclaudel/company-coq" -> "rocq-community/coq-tricks"
"cpitclaudel/company-coq" -> "rocq-community/coq-dpdgraph"
"cpitclaudel/company-coq" -> "rocq-community/coq-ext-lib"
"cpitclaudel/company-coq" -> "QuickChick/QuickChick"
"cpitclaudel/company-coq" -> "math-comp/math-comp"
"cpitclaudel/company-coq" -> "achlipala/frap"
"cpitclaudel/company-coq" -> "rocq-prover/vscoq"
"cpitclaudel/company-coq" -> "smtcoq/smtcoq"
"cpitclaudel/company-coq" -> "jscoq/jscoq"
"cpitclaudel/company-coq" -> "DeepSpec/dsss17"
"cpitclaudel/company-coq" -> "PrincetonUniversity/VST"
"cpitclaudel/company-coq" -> "DeepSpec/InteractionTrees"
"cpitclaudel/company-coq" -> "cpitclaudel/alectryon"
"GeoCoq/GeoCoq" -> "lukaszcz/coqhammer"
"GeoCoq/GeoCoq" -> "mattam82/Coq-Equations"
"GeoCoq/GeoCoq" -> "rocq-prover/rfcs"
"udosteinberg/NOVA" -> "seL4/seL4_libs" ["e"=1]
"diku-kmc/kleenexlang" -> "jtkristensen/Jeopardy"
"diku-kmc/kleenexlang" -> "dikurevy/Public-Archive"
"sosy-lab/benchexec" -> "sosy-lab/cpachecker"
"sosy-lab/benchexec" -> "sosy-lab/sv-benchmarks"
"sosy-lab/benchexec" -> "sosy-lab/java-smt"
"sosy-lab/benchexec" -> "ultimate-pa/ultimate"
"sosy-lab/benchexec" -> "stanford-centaur/pono"
"sosy-lab/benchexec" -> "SRI-CSL/yices2"
"sosy-lab/benchexec" -> "SRI-CSL/sally"
"sosy-lab/benchexec" -> "sosy-lab/java-common-lib"
"EasyCrypt/easycrypt" -> "jasmin-lang/jasmin"
"EasyCrypt/easycrypt" -> "formosa-crypto/libjade"
"EasyCrypt/easycrypt" -> "mit-plv/fiat-crypto"
"EasyCrypt/easycrypt" -> "mattam82/Coq-Equations"
"EasyCrypt/easycrypt" -> "ProofGeneral/PG"
"EasyCrypt/easycrypt" -> "QuickChick/QuickChick"
"EasyCrypt/easycrypt" -> "tamarin-prover/tamarin-prover"
"EasyCrypt/easycrypt" -> "SSProve/ssprove"
"EasyCrypt/easycrypt" -> "hacspec/hacspec"
"EasyCrypt/easycrypt" -> "alleystoughton/EasyTeach"
"EasyCrypt/easycrypt" -> "PrincetonUniversity/VST"
"EasyCrypt/easycrypt" -> "rocq-community/coq-ext-lib"
"EasyCrypt/easycrypt" -> "DeepSpec/InteractionTrees"
"EasyCrypt/easycrypt" -> "GaloisInc/cryptol"
"EasyCrypt/easycrypt" -> "vellvm/vellvm"
"jscoq/jscoq" -> "mattam82/Coq-Equations"
"jscoq/jscoq" -> "cpitclaudel/company-coq"
"jscoq/jscoq" -> "rocq-community/coq-dpdgraph"
"jscoq/jscoq" -> "ProofGeneral/PG"
"jscoq/jscoq" -> "rocq-community/coq-tricks"
"jscoq/jscoq" -> "math-comp/math-comp"
"jscoq/jscoq" -> "cpitclaudel/alectryon"
"jscoq/jscoq" -> "MetaRocq/metarocq"
"jscoq/jscoq" -> "rocq-community/coqdocjs"
"jscoq/jscoq" -> "PrincetonUniversity/VST"
"jscoq/jscoq" -> "smtcoq/smtcoq"
"jscoq/jscoq" -> "rocq-archive/coq-serapi"
"jscoq/jscoq" -> "rocq-prover/vscoq"
"jscoq/jscoq" -> "clarus/coq-chick-blog"
"jscoq/jscoq" -> "DeepSpec/InteractionTrees"
"ocaml-gospel/gospel" -> "ocaml-gospel/ortac"
"HOL-Theorem-Prover/HOL" -> "CakeML/cakeml"
"HOL-Theorem-Prover/HOL" -> "polyml/polyml"
"HOL-Theorem-Prover/HOL" -> "jrh13/hol-light"
"HOL-Theorem-Prover/HOL" -> "Deducteam/lambdapi"
"HOL-Theorem-Prover/HOL" -> "PrincetonUniversity/VST"
"HOL-Theorem-Prover/HOL" -> "ProofGeneral/PG"
"HOL-Theorem-Prover/HOL" -> "acl2/acl2"
"HOL-Theorem-Prover/HOL" -> "MetaRocq/metarocq"
"HOL-Theorem-Prover/HOL" -> "mit-plv/bedrock2"
"HOL-Theorem-Prover/HOL" -> "MLton/mlton"
"HOL-Theorem-Prover/HOL" -> "agda/agda-categories" ["e"=1]
"HOL-Theorem-Prover/HOL" -> "vprover/vampire"
"HOL-Theorem-Prover/HOL" -> "lukaszcz/coqhammer"
"HOL-Theorem-Prover/HOL" -> "ott-lang/ott"
"HOL-Theorem-Prover/HOL" -> "agda/cubical" ["e"=1]
"GaloisInc/reopt" -> "GaloisInc/macaw"
"DSLsofMath/DSLsofMath" -> "antalsz/hs-to-coq" ["e"=1]
"polyml/polyml" -> "MLton/mlton"
"polyml/polyml" -> "melsman/mlkit"
"polyml/polyml" -> "CakeML/cakeml"
"polyml/polyml" -> "HOL-Theorem-Prover/HOL"
"polyml/polyml" -> "SMLFamily/Successor-ML"
"polyml/polyml" -> "kfl/mosml"
"polyml/polyml" -> "standardml/smackage"
"polyml/polyml" -> "eatonphil/ponyo"
"polyml/polyml" -> "smlnj/smlnj"
"polyml/polyml" -> "jrh13/hol-light"
"polyml/polyml" -> "rossberg/1ml"
"polyml/polyml" -> "smlsharp/smlsharp"
"polyml/polyml" -> "minoki/LunarML"
"polyml/polyml" -> "MPLLang/mpl"
"polyml/polyml" -> "rossberg/hamlet"
"SMLFamily/BasisLibrary" -> "SMLFamily/Successor-ML"
"ths-rwth/smtrat" -> "ths-rwth/carl"
"ths-rwth/smtrat" -> "moves-rwth/pycarl"
"ths-rwth/carl" -> "ths-rwth/smtrat"
"ths-rwth/carl" -> "moves-rwth/pycarl"
"awslabs/s2n-bignum" -> "jrh13/hol-light" ["e"=1]
"teyjus/teyjus" -> "LPCIC/elpi"
"mattam82/Coq-Equations" -> "DeepSpec/InteractionTrees"
"mattam82/Coq-Equations" -> "MetaRocq/metarocq"
"mattam82/Coq-Equations" -> "rocq-archive/coq-serapi"
"mattam82/Coq-Equations" -> "rocq-prover/opam"
"mattam82/Coq-Equations" -> "rocq-community/coq-tricks"
"mattam82/Coq-Equations" -> "math-comp/math-comp"
"mattam82/Coq-Equations" -> "smtcoq/smtcoq"
"mattam82/Coq-Equations" -> "lukaszcz/coqhammer"
"mattam82/Coq-Equations" -> "rocq-community/coq-ext-lib"
"mattam82/Coq-Equations" -> "LPCIC/coq-elpi"
"mattam82/Coq-Equations" -> "CertiCoq/certicoq"
"mattam82/Coq-Equations" -> "QuickChick/QuickChick"
"mattam82/Coq-Equations" -> "cpitclaudel/alectryon"
"mattam82/Coq-Equations" -> "cpitclaudel/company-coq"
"mattam82/Coq-Equations" -> "Deducteam/lambdapi"
"camlspotter/ocaml-zippy-tutorial-in-japanese" -> "jats-ug/translate"
"tip-org/benchmarks" -> "tip-org/tools"
"tip-org/tools" -> "tip-org/benchmarks"
"SMLFamily/Successor-ML" -> "SMLFamily/BasisLibrary"
"SMLFamily/Successor-ML" -> "SMLFamily/The-Definition-of-Standard-ML-Revised"
"SMLFamily/Successor-ML" -> "eatonphil/ponyo"
"SMLFamily/Successor-ML" -> "SMLFamily/The-Mechanization-of-Standard-ML"
"SMLFamily/Successor-ML" -> "melsman/mlkit"
"SMLFamily/Successor-ML" -> "standardml/smackage"
"SMLFamily/Successor-ML" -> "polyml/polyml"
"SMLFamily/Successor-ML" -> "MLton/mlton"
"SMLFamily/Successor-ML" -> "SMLFamily/The-Definition-of-Standard-ML"
"SMLFamily/Successor-ML" -> "smlnj/smlnj"
"SMLFamily/Successor-ML" -> "rossberg/hamlet"
"SMLFamily/Successor-ML" -> "SMLFamily/SML-The-Living-Language"
"SMLFamily/Successor-ML" -> "elpinal/bright-ml"
"shwestrick/smlfmt" -> "MPLLang/mpllib"
"shwestrick/smlfmt" -> "T-Brick/molasses"
"shwestrick/smlfmt" -> "diku-dk/smlfut"
"shwestrick/smlfmt" -> "shwestrick/mpl-1brc"
"coq-io/io" -> "coq-io/system"
"rocq-prover/opam" -> "rocq-community/coq-ext-lib"
"rocq-prover/opam" -> "mattam82/Coq-Equations"
"rocq-prover/opam" -> "rocq-prover/rfcs"
"rocq-prover/opam" -> "math-comp/hierarchy-builder"
"QilinPTA/Qilin" -> "rustanlys/rupta" ["e"=1]
"coq-io/system" -> "coq-io/hello-world"
"math-comp/finmap" -> "rocq-community/reglang"
"qed-solver/prover" -> "qed-solver/parser"
"usi-verification-and-security/golem" -> "uuverifiers/eldarica"
"diku-compSys/compSys-e2021-pub" -> "diku-its/its-e2022"
"qed-solver/parser" -> "qed-solver/prover"
"ciao-lang/ciao" -> "LPCIC/elpi" ["e"=1]
"P-H-C/phc-winner-argon2" -> "C2SP/wycheproof" ["e"=1]
"agda/agda" -> "rocq-prover/rocq" ["e"=1]
"agda/agda" -> "FStarLang/FStar" ["e"=1]
"AeneasVerif/aeneas" -> "AeneasVerif/charon"
"AeneasVerif/aeneas" -> "cryspen/hax"
"AeneasVerif/aeneas" -> "creusot-rs/creusot" ["e"=1]
"ProofGeneral/PG" -> "cpitclaudel/company-coq"
"ProofGeneral/PG" -> "mattam82/Coq-Equations"
"ProofGeneral/PG" -> "QuickChick/QuickChick"
"ProofGeneral/PG" -> "math-comp/math-comp"
"ProofGeneral/PG" -> "rocq-community/coq-tricks"
"ProofGeneral/PG" -> "PrincetonUniversity/VST"
"ProofGeneral/PG" -> "lukaszcz/coqhammer"
"ProofGeneral/PG" -> "MetaRocq/metarocq"
"ProofGeneral/PG" -> "smtcoq/smtcoq"
"ProofGeneral/PG" -> "jscoq/jscoq"
"ProofGeneral/PG" -> "CakeML/cakeml"
"ProofGeneral/PG" -> "jwiegley/category-theory"
"ProofGeneral/PG" -> "rocq-community/coq-dpdgraph"
"ProofGeneral/PG" -> "DeepSpec/InteractionTrees"
"ProofGeneral/PG" -> "rocq-community/math-classes"
"microsoft/prose" -> "nadia-polikarpova/cse291-program-synthesis"
"microsoft/prose" -> "nearai/program_synthesis"
"microsoft/prose" -> "gustavoasoares/refazer"
"microsoft/prose" -> "emina/rosette"
"microsoft/prose" -> "Inventitech/strans"
"microsoft/prose" -> "HiroakiMikami/deep-coder"
"microsoft/prose" -> "SyGuS-Org/benchmarks"
"microsoft/prose" -> "jfeser/L2"
"microsoft/prose" -> "sosy-lab/sv-benchmarks"
"microsoft/prose" -> "pysmt/pysmt"
"microsoft/prose" -> "SyGuS-Org/tools"
"microsoft/prose" -> "ravichugh/sketch-n-sketch" ["e"=1]
"urweb/urweb" -> "MLton/mlton" ["e"=1]
"urweb/urweb" -> "melsman/mlkit" ["e"=1]
"urweb/urweb" -> "CakeML/cakeml" ["e"=1]
"urweb/urweb" -> "achlipala/frap" ["e"=1]
"urweb/urweb" -> "ProofGeneral/PG" ["e"=1]
"verus-lang/verus" -> "AeneasVerif/aeneas" ["e"=1]
"verus-lang/verus" -> "dafny-lang/dafny" ["e"=1]
"google/crubit" -> "lizhuohua/rust-ffi-checker" ["e"=1]
"jrh13/hol-light" -> "HOL-Theorem-Prover/HOL"
"jrh13/hol-light" -> "CakeML/cakeml"
"jrh13/hol-light" -> "awslabs/s2n-bignum" ["e"=1]
"jrh13/hol-light" -> "mattam82/Coq-Equations"
"jrh13/hol-light" -> "polyml/polyml"
"jrh13/hol-light" -> "flyspeck/flyspeck"
"jrh13/hol-light" -> "ProofGeneral/PG"
"jrh13/hol-light" -> "PrincetonUniversity/VST"
"jrh13/hol-light" -> "math-comp/math-comp"
"jrh13/hol-light" -> "Deducteam/lambdapi"
"jrh13/hol-light" -> "HoTT/Coq-HoTT" ["e"=1]
"jrh13/hol-light" -> "acl2/acl2"
"jrh13/hol-light" -> "vprover/vampire"
"jrh13/hol-light" -> "lukaszcz/coqhammer"
"jrh13/hol-light" -> "cedille/cedille" ["e"=1]
"IUCompilerCourse/Essentials-of-Compilation" -> "achlipala/frap" ["e"=1]
"IUCompilerCourse/Essentials-of-Compilation" -> "emina/rosette" ["e"=1]
"google/paranoid_crypto" -> "C2SP/wycheproof" ["e"=1]
"mietek/sf" -> "ilyasergey/pnp" ["e"=1]
"minirust/minirust" -> "rocq-community/coq-tricks" ["e"=1]
"mit-plv/fiat-crypto" -> "EasyCrypt/easycrypt"
"mit-plv/fiat-crypto" -> "jasmin-lang/jasmin"
"mit-plv/fiat-crypto" -> "mmcloughlin/addchain" ["e"=1]
"mit-plv/fiat-crypto" -> "hacl-star/hacl-star"
"mit-plv/fiat-crypto" -> "mit-plv/fiat"
"mit-plv/fiat-crypto" -> "mit-plv/bedrock2"
"mit-plv/fiat-crypto" -> "PrincetonUniversity/VST"
"mit-plv/fiat-crypto" -> "MetaRocq/metarocq"
"mit-plv/fiat-crypto" -> "GaloisInc/cryptol"
"mit-plv/fiat-crypto" -> "microsoft/PQCrypto-SIDH" ["e"=1]
"mit-plv/fiat-crypto" -> "mratsim/constantine" ["e"=1]
"mit-plv/fiat-crypto" -> "relic-toolkit/relic" ["e"=1]
"mit-plv/fiat-crypto" -> "lurk-lab/awesome-folding" ["e"=1]
"mit-plv/fiat-crypto" -> "vellvm/vellvm"
"mit-plv/fiat-crypto" -> "arkworks-rs/algebra" ["e"=1]
"mit-pdos/fscq" -> "uwplse/verdi"
"mit-pdos/fscq" -> "sibylfs/sibylfs_src"
"mit-pdos/fscq" -> "jwiegley/coq-haskell"
"mit-pdos/fscq" -> "rocq-community/coq-tricks"
"lizhuohua/rust-ffi-checker" -> "lizhuohua/rust-mir-checker"
"lizhuohua/rust-ffi-checker" -> "Artisan-Lab/RAPx"
"lizhuohua/rust-ffi-checker" -> "Artisan-Lab/RULF"
"ultimate-pa/ultimate" -> "sosy-lab/sv-benchmarks"
"ultimate-pa/ultimate" -> "SRI-CSL/sally"
"ultimate-pa/ultimate" -> "ultimate-pa/smtinterpol"
"ultimate-pa/ultimate" -> "sosy-lab/cpachecker"
"ultimate-pa/ultimate" -> "smackers/smack"
"ultimate-pa/ultimate" -> "staticafi/symbiotic"
"ultimate-pa/ultimate" -> "ultimate-pa/hanfor"
"ultimate-pa/ultimate" -> "seahorn/crab" ["e"=1]
"ultimate-pa/ultimate" -> "SRI-CSL/yices2"
"ultimate-pa/ultimate" -> "seahorn/seahorn"
"ultimate-pa/ultimate" -> "sosy-lab/benchexec"
"ultimate-pa/ultimate" -> "kdudka/predator"
"ultimate-pa/ultimate" -> "SaswatPadhi/LoopInvGen"
"ultimate-pa/ultimate" -> "uuverifiers/eldarica"
"ultimate-pa/ultimate" -> "boogie-org/boogie"
"microsoft/Ironclad" -> "uwplse/verdi" ["e"=1]
"sosy-lab/java-smt" -> "ultimate-pa/smtinterpol"
"sosy-lab/java-smt" -> "sosy-lab/benchexec"
"sosy-lab/java-smt" -> "sosy-lab/sv-benchmarks"
"sosy-lab/java-smt" -> "sosy-lab/cpachecker"
"sosy-lab/java-smt" -> "SymbolicPathFinder/jpf-symbc" ["e"=1]
"sosy-lab/java-smt" -> "SRI-CSL/yices2"
"sosy-lab/java-smt" -> "jayhorn/jayhorn"
"sosy-lab/java-smt" -> "ultimate-pa/ultimate"
"sosy-lab/java-smt" -> "psycopaths/jdart" ["e"=1]
"sosy-lab/java-smt" -> "pysmt/pysmt"
"sosy-lab/java-smt" -> "usi-verification-and-security/golem"
"sosy-lab/java-smt" -> "tudo-aqua/z3-turnkey"
"sosy-lab/java-smt" -> "cvc5/cvc5"
"nuprl/10PL" -> "achlipala/frap" ["e"=1]
"nuprl/10PL" -> "ilyasergey/pnp" ["e"=1]
"nuprl/10PL" -> "rocq-community/coq-tricks" ["e"=1]
"UpstandingHackers/hammer" -> "pornin/CTTK" ["e"=1]
"seL4/sel4-tutorials" -> "seL4/seL4_libs"
"seL4/sel4-tutorials" -> "seL4/capdl"
"seL4/sel4-tutorials" -> "seL4/sel4bench"
"seL4/sel4-tutorials" -> "seL4/seL4_tools"
"seL4/sel4-tutorials" -> "seL4/sel4-tutorials-manifest"
"seL4/sel4-tutorials" -> "seL4/camkes-tool"
"seL4/sel4-tutorials" -> "seL4/docs"
"project-everest/mitls-fstar" -> "mitls/mitls-flex"
"project-everest/mitls-fstar" -> "project-everest/vale"
"cjdrake/pyeda" -> "ivmai/cudd"
"cjdrake/pyeda" -> "classabbyamp/espresso-logic"
"cjdrake/pyeda" -> "tulip-control/dd"
"cjdrake/pyeda" -> "circuitgraph/circuitgraph"
"AeneasVerif/charon" -> "AeneasVerif/aeneas"
"AeneasVerif/charon" -> "AeneasVerif/eurydice"
"flyspeck/flyspeck" -> "jrh13/hol-light"
"prismmodelchecker/prism" -> "moves-rwth/storm"
"prismmodelchecker/prism" -> "prismmodelchecker/prism-games"
"prismmodelchecker/prism" -> "moves-rwth/stormpy"
"seL4/capdl" -> "seL4/sel4bench"
"jayhorn/jayhorn" -> "awslabs/aws-crypto-policy-compliance-checker"
"clvrai/leaps" -> "flxsosa/ProgramSearch"
"formosa-crypto/libjade" -> "jasmin-lang/jasmin"
"seL4/util_libs" -> "seL4/seL4_tools"
"seL4/util_libs" -> "seL4/sel4bench"
"seL4/util_libs" -> "seL4/seL4_libs"
"uhub/awesome-coq" -> "Ptival/PeaCoq"
"Gigantua/Espresso" -> "genieacs/espresso-iisojs"
"diku-dk/futhark-vscode" -> "diku-dk/lys"
"seL4/seL4_tools" -> "seL4/seL4_libs"
"seL4/seL4_tools" -> "seL4/util_libs"
"seL4/seL4_tools" -> "seL4/capdl"
"seL4/seL4_tools" -> "seL4/sel4test"
"seL4/seL4_tools" -> "seL4/sel4bench"
"diku-dk/sml-http" -> "diku-dk/sml-server"
"diku-dk/sml-server" -> "diku-dk/sml-http"
"brandonspark/mulligan" -> "T-Brick/molasses"
"brandonspark/mulligan" -> "T-Brick/c0deine"
"seL4/seL4_libs" -> "seL4/seL4_tools"
"seL4/seL4_libs" -> "seL4/sel4-tutorials"
"seL4/seL4_libs" -> "seL4/capdl"
"seL4/seL4_libs" -> "seL4/sel4bench"
"seL4/seL4_libs" -> "seL4/camkes-arm-vm"
"MPLLang/mpllib" -> "diku-dk/smlfut"
"T-Brick/c0deine" -> "T-Brick/molasses"
"T-Brick/c0deine" -> "brandonspark/mulligan"
"T-Brick/c0deine" -> "T-Brick/lean-wasm"
"T-Brick/c0deine" -> "JamesGallicchio/LeanColls" ["e"=1]
"seL4/sel4-tutorials-manifest" -> "hybridNeo/sel4-tee-os"
"smlnj/smlnj" -> "smlnj/legacy"
"smlnj/smlnj" -> "azdavis/millet"
"smlnj/smlnj" -> "SMLFamily/Successor-ML"
"smlnj/smlnj" -> "MLton/mlton"
"smlnj/smlnj" -> "polyml/polyml"
"smlnj/smlnj" -> "shwestrick/smlfmt"
"smlnj/smlnj" -> "smlsharp/smlsharp"
"tlaplus/tlaplus" -> "dafny-lang/dafny" ["e"=1]
"tlaplus/tlaplus" -> "rocq-prover/rocq" ["e"=1]
"kadena-io/juno" -> "uwplse/verdi" ["e"=1]
"checkedc/checkedc" -> "AbsInt/CompCert" ["e"=1]
"tls-attacker/TLS-Attacker" -> "C2SP/wycheproof" ["e"=1]
"Frama-C/Frama-C-snapshot" -> "acsl-language/acsl"
"Frama-C/Frama-C-snapshot" -> "Frama-C/open-source-case-studies"
"Frama-C/Frama-C-snapshot" -> "AllanBlanchard/tutoriel_wp"
"achlipala/frap" -> "rocq-community/coq-tricks"
"achlipala/frap" -> "cpitclaudel/company-coq"
"achlipala/frap" -> "PrincetonUniversity/VST"
"achlipala/frap" -> "MetaRocq/metarocq"
"achlipala/frap" -> "ilyasergey/pnp"
"achlipala/frap" -> "mit-plv/bedrock2"
"achlipala/frap" -> "rocq-community/awesome-coq"
"achlipala/frap" -> "QuickChick/QuickChick"
"achlipala/frap" -> "math-comp/math-comp"
"achlipala/frap" -> "mattam82/Coq-Equations"
"achlipala/frap" -> "DeepSpec/InteractionTrees"
"achlipala/frap" -> "RedPRL/sml-redprl" ["e"=1]
"achlipala/frap" -> "vellvm/vellvm"
"achlipala/frap" -> "AbsInt/CompCert"
"achlipala/frap" -> "ProofGeneral/PG"
"dafny-lang/dafny" -> "boogie-org/boogie"
"dafny-lang/dafny" -> "FStarLang/FStar"
"dafny-lang/dafny" -> "rocq-prover/rocq"
"dafny-lang/dafny" -> "AbsInt/CompCert"
"dafny-lang/dafny" -> "Z3Prover/z3" ["e"=1]
"dafny-lang/dafny" -> "p-org/P" ["e"=1]
"dafny-lang/dafny" -> "cvc5/cvc5"
"dafny-lang/dafny" -> "koka-lang/koka" ["e"=1]
"dafny-lang/dafny" -> "CakeML/cakeml"
"dafny-lang/dafny" -> "verus-lang/verus" ["e"=1]
"dafny-lang/dafny" -> "idris-lang/Idris2" ["e"=1]
"dafny-lang/dafny" -> "emina/rosette"
"dafny-lang/dafny" -> "agda/agda" ["e"=1]
"dafny-lang/dafny" -> "achlipala/frap"
"dafny-lang/dafny" -> "PrincetonUniversity/VST"
"webyrd/Barliman" -> "emina/rosette" ["e"=1]
"Kha/electrolysis" -> "project-oak/rust-verification-tools"
"project-everest/everest" -> "FStarLang/karamel"
"project-everest/everest" -> "project-everest/vale"
"project-everest/everest" -> "FStarLang/fstar-mode.el"
"project-everest/everest" -> "project-everest/mitls-fstar"
"utwente-fmt/vercors" -> "viperproject/silicon"
"e2email-org/e2email" -> "C2SP/wycheproof" ["e"=1]
"souffle-lang/souffle" -> "cvc5/cvc5" ["e"=1]
"souffle-lang/souffle" -> "emina/rosette" ["e"=1]
"smackers/smack" -> "boogie-org/boogie"
"smackers/smack" -> "seahorn/seahorn"
"smackers/smack" -> "boogie-org/corral"
"smackers/smack" -> "sosy-lab/cpachecker"
"smackers/smack" -> "ultimate-pa/ultimate"
"smackers/smack" -> "seahorn/crab" ["e"=1]
"smackers/smack" -> "verifast/verifast"
"smackers/smack" -> "diffblue/cbmc"
"smackers/smack" -> "SRI-CSL/yices2"
"smackers/smack" -> "SRI-CSL/sally"
"smackers/smack" -> "sosy-lab/sv-benchmarks"
"smackers/smack" -> "seahorn/sea-dsa" ["e"=1]
"smackers/smack" -> "seahorn/clam" ["e"=1]
"smackers/smack" -> "stp/stp"
"smackers/smack" -> "Boolector/boolector"
"borisveytsman/acmart" -> "plclub/metalib" ["e"=1]
"runtimeverification/k" -> "HOL-Theorem-Prover/HOL" ["e"=1]
"smlsharp/smlsharp" -> "elpinal/bright-ml"
"smlsharp/smlsharp" -> "AtsushiOhori/compiler-text"
"smlsharp/smlsharp" -> "shwestrick/smlfmt"
"diffblue/cbmc" -> "sosy-lab/cpachecker"
"diffblue/cbmc" -> "esbmc/esbmc"
"diffblue/cbmc" -> "seahorn/seahorn"
"diffblue/cbmc" -> "sosy-lab/sv-benchmarks"
"diffblue/cbmc" -> "smackers/smack"
"diffblue/cbmc" -> "cvc5/cvc5"
"diffblue/cbmc" -> "SRI-CSL/yices2"
"diffblue/cbmc" -> "msoos/cryptominisat"
"diffblue/cbmc" -> "arminbiere/cadical"
"diffblue/cbmc" -> "ultimate-pa/ultimate"
"diffblue/cbmc" -> "Boolector/boolector"
"diffblue/cbmc" -> "boogie-org/boogie"
"diffblue/cbmc" -> "model-checking/cbmc-starter-kit"
"diffblue/cbmc" -> "seahorn/crab" ["e"=1]
"diffblue/cbmc" -> "staticafi/symbiotic"
"FStarLang/karamel" -> "project-everest/vale"
"FStarLang/karamel" -> "FStarLang/FStar"
"FStarLang/karamel" -> "project-everest/everest"
"FStarLang/karamel" -> "FStarLang/fstar-mode.el"
"FStarLang/karamel" -> "project-everest/mitls-fstar"
"FStarLang/karamel" -> "hacl-star/hacl-star"
"FStarLang/karamel" -> "vellvm/vellvm"
"FStarLang/karamel" -> "cedille/cedille" ["e"=1]
"FStarLang/karamel" -> "CertiCoq/certicoq"
"FStarLang/karamel" -> "CakeML/cakeml"
"FStarLang/karamel" -> "DeepSpec/InteractionTrees"
"FStarLang/karamel" -> "PrincetonUniversity/VST"
"FStarLang/karamel" -> "FStarLang/steel"
"FStarLang/karamel" -> "project-everest/everparse"
"FStarLang/karamel" -> "QuickChick/QuickChick"
"formal-land/coq-of-rust" -> "AeneasVerif/aeneas" ["e"=1]
"formal-land/coq-of-rust" -> "cryspen/hax" ["e"=1]
"formal-land/coq-of-rust" -> "formal-land/coq-of-ocaml" ["e"=1]
"formal-land/coq-of-rust" -> "AeneasVerif/charon" ["e"=1]
"formal-land/coq-of-rust" -> "GaloisInc/crucible" ["e"=1]
"pornin/crrl" -> "pornin/rust-fn-dsa"
"sneeuwballen/zipperposition" -> "tip-org/benchmarks"
"rocq-community/coq-ext-lib" -> "rocq-prover/opam"
"rocq-community/coq-ext-lib" -> "mattam82/Coq-Equations"
"rocq-community/coq-ext-lib" -> "rocq-community/math-classes"
"rocq-community/coq-ext-lib" -> "Mtac2/Mtac2"
"rocq-community/coq-ext-lib" -> "mit-plv/bbv"
"eatonphil/ponyo" -> "standardml/smackage"
"eatonphil/ponyo" -> "SMLFamily/Successor-ML"
"eatonphil/ponyo" -> "SMLFamily/BasisLibrary"
"eatonphil/ponyo" -> "elpinal/bright-ml"
"eatonphil/ponyo" -> "UBMLtonGroup/RTMLton"
"eatonphil/ponyo" -> "melsman/mlkit"
"gipsyh/rIC3" -> "jix/kissat_extras"
"boogie-org/corral" -> "boogie-org/sdvbench"
"jfeser/L2" -> "psosera/myth"
"marcthurley/sharpSAT" -> "Laakeri/sharpsat-td"
"marcthurley/sharpSAT" -> "crillab/d4"
"cryspen/libcrux" -> "cryspen/hax"
"cryspen/hax" -> "cryspen/libcrux"
"cryspen/hax" -> "AeneasVerif/aeneas"
"cryspen/hax" -> "hacspec/hacspec"
"cryspen/hax" -> "AeneasVerif/charon"
"smlnj/legacy" -> "smlnj/smlnj"
"rocq-archive/coq-serapi" -> "mattam82/Coq-Equations"
"rocq-archive/coq-serapi" -> "lukaszcz/coqhammer"
"ivmai/cudd" -> "tulip-control/dd"
"ivmai/cudd" -> "trolando/sylvan"
"gustavoasoares/refazer" -> "reudismam/Refazer"
"T-Brick/molasses" -> "brandonspark/mulligan"
"kdudka/predator" -> "Antique-team/memcad"
"jtkristensen/Jeopardy" -> "diku-dk/smlfut"
"ocaml/ocaml" -> "rocq-prover/rocq" ["e"=1]
"CakeML/cakeml" -> "HOL-Theorem-Prover/HOL"
"CakeML/cakeml" -> "polyml/polyml"
"CakeML/cakeml" -> "MLton/mlton"
"CakeML/cakeml" -> "PrincetonUniversity/VST"
"CakeML/cakeml" -> "jrh13/hol-light"
"CakeML/cakeml" -> "AbsInt/CompCert"
"CakeML/cakeml" -> "mattam82/Coq-Equations"
"CakeML/cakeml" -> "vellvm/vellvm"
"CakeML/cakeml" -> "rocq-community/coq-tricks"
"CakeML/cakeml" -> "ProofGeneral/PG"
"CakeML/cakeml" -> "Deducteam/lambdapi"
"CakeML/cakeml" -> "MetaRocq/metarocq"
"CakeML/cakeml" -> "mit-plv/bedrock2"
"CakeML/cakeml" -> "ucsd-progsys/liquidhaskell" ["e"=1]
"CakeML/cakeml" -> "FStarLang/FStar"
"HoTT/book" -> "rocq-prover/rocq" ["e"=1]
"arminbiere/cadical" -> "arminbiere/kissat"
"arminbiere/cadical" -> "msoos/cryptominisat"
"arminbiere/cadical" -> "bitwuzla/bitwuzla"
"arminbiere/cadical" -> "niklasso/minisat"
"arminbiere/cadical" -> "Boolector/boolector"
"arminbiere/cadical" -> "SRI-CSL/yices2"
"arminbiere/cadical" -> "pysathq/pysat"
"arminbiere/cadical" -> "audemard/glucose"
"arminbiere/cadical" -> "arminbiere/satch"
"arminbiere/cadical" -> "cvc5/cvc5"
"arminbiere/cadical" -> "stp/stp"
"arminbiere/cadical" -> "marijnheule/microsat"
"arminbiere/cadical" -> "biotomas/ipasir"
"arminbiere/cadical" -> "vprover/vampire"
"arminbiere/cadical" -> "marijnheule/drat-trim"
"hacl-star/hacl-star" -> "FStarLang/FStar"
"hacl-star/hacl-star" -> "FStarLang/karamel"
"hacl-star/hacl-star" -> "project-everest/mitls-fstar"
"hacl-star/hacl-star" -> "mit-plv/fiat-crypto"
"hacl-star/hacl-star" -> "project-everest/vale"
"hacl-star/hacl-star" -> "project-everest/everest"
"hacl-star/hacl-star" -> "EasyCrypt/easycrypt"
"hacl-star/hacl-star" -> "GaloisInc/cryptol"
"hacl-star/hacl-star" -> "AbsInt/CompCert"
"hacl-star/hacl-star" -> "jasmin-lang/jasmin"
"hacl-star/hacl-star" -> "C2SP/wycheproof"
"hacl-star/hacl-star" -> "tamarin-prover/tamarin-prover"
"hacl-star/hacl-star" -> "PrincetonUniversity/VST"
"hacl-star/hacl-star" -> "briansmith/ring" ["e"=1]
"hacl-star/hacl-star" -> "CakeML/cakeml"
"uwdb/Cosette" -> "emina/rosette"
"uwdb/Cosette" -> "Mestway/Scythe"
"uwdb/Cosette" -> "jscoq/jscoq"
"uwdb/Cosette" -> "jscert/jscert"
"uwdb/Cosette" -> "RedPRL/sml-redprl" ["e"=1]
"uwdb/Cosette" -> "achlipala/frap"
"uwdb/Cosette" -> "CakeML/cakeml"
"uwdb/Cosette" -> "qed-solver/prover"
"uwdb/Cosette" -> "georgia-tech-db/spes"
"uwdb/Cosette" -> "SJTU-IPADS/SQLSolver" ["e"=1]
"uwdb/Cosette" -> "souffle-lang/souffle" ["e"=1]
"uwdb/Cosette" -> "sqlancer/sqlancer" ["e"=1]
"uwdb/Cosette" -> "maximedenes/native-coq"
"uwdb/Cosette" -> "jwiegley/category-theory"
"uwdb/Cosette" -> "rntz/datafun" ["e"=1]
"pointlander/peg" -> "rhysd/gocaml" ["e"=1]
"diku-compSys/compSys-e2023-pub" -> "diku-dk/su-guides"
"brownplt/pyret-lang" -> "polyml/polyml" ["e"=1]
"coastalcph/nlp-course" -> "diku-dk/ap-e2024-pub"
"S2E/s2e-old" -> "stp/stp" ["e"=1]
"uwplse/verdi-raft" -> "uwplse/verdi"
"uwplse/verdi-raft" -> "DistributedComponents/disel"
"uwplse/verdi-raft" -> "affeldt-aist/monae"
"hypro/hypro" -> "ths-rwth/carl"
"cascremers/scyther" -> "tamarin-prover/tamarin-prover"
"audemard/glucose" -> "arminbiere/cadical"
"meithecatte/busycoq" -> "danbriggs/Turing"
"aigarashi/PL-LectureNotes" -> "kuis-isle3sw/IoPLMaterials"
"plclub/lngen" -> "plclub/metalib"
"seL4/sel4bench" -> "seL4/capdl"
"seL4/sel4bench" -> "seL4/sel4test"
"C2SP/wycheproof" -> "tink-crypto/tink" ["e"=1]
"C2SP/wycheproof" -> "veorq/cryptocoding" ["e"=1]
"C2SP/wycheproof" -> "google/keytransparency" ["e"=1]
"C2SP/wycheproof" -> "tls-attacker/TLS-Attacker" ["e"=1]
"C2SP/wycheproof" -> "aws/s2n-tls" ["e"=1]
"C2SP/wycheproof" -> "google/binnavi" ["e"=1]
"C2SP/wycheproof" -> "hacl-star/hacl-star"
"C2SP/wycheproof" -> "google/oss-fuzz" ["e"=1]
"C2SP/wycheproof" -> "briansmith/ring" ["e"=1]
"C2SP/wycheproof" -> "google/honggfuzz" ["e"=1]
"C2SP/wycheproof" -> "nccgroup/featherduster" ["e"=1]
"C2SP/wycheproof" -> "guidovranken/cryptofuzz" ["e"=1]
"C2SP/wycheproof" -> "mit-plv/fiat-crypto"
"C2SP/wycheproof" -> "google/paranoid_crypto" ["e"=1]
"C2SP/wycheproof" -> "struct/mms" ["e"=1]
"tensorflow/deepmath" -> "princeton-vl/CoqGym"
"tensorflow/deepmath" -> "jrh13/hol-light"
"tensorflow/deepmath" -> "brain-research/hol-light"
"tensorflow/deepmath" -> "tensorflow/fold" ["e"=1]
"tensorflow/deepmath" -> "tensorflow/haskell" ["e"=1]
"tensorflow/deepmath" -> "jwiegley/category-theory"
"tensorflow/deepmath" -> "tensorflow/skflow" ["e"=1]
"tensorflow/deepmath" -> "vprover/vampire"
"tensorflow/deepmath" -> "HoTT/Coq-HoTT" ["e"=1]
"tensorflow/deepmath" -> "HOL-Theorem-Prover/HOL"
"tensorflow/deepmath" -> "tensorflow/transform" ["e"=1]
"tensorflow/deepmath" -> "tensorflow/profiler-ui" ["e"=1]
"tensorflow/deepmath" -> "leanprover/lean3"
"tensorflow/deepmath" -> "google-deepmind/learning-to-learn" ["e"=1]
"KeenS/webml" -> "eatonphil/ponyo"
"KeenS/webml" -> "SOSML/SOSML"
"rocq-community/coq-tricks" -> "mattam82/Coq-Equations"
"rocq-community/coq-tricks" -> "MetaRocq/metarocq"
"rocq-community/coq-tricks" -> "achlipala/frap"
"rocq-community/coq-tricks" -> "cpitclaudel/company-coq"
"rocq-community/coq-tricks" -> "DeepSpec/InteractionTrees"
"rocq-community/coq-tricks" -> "rocq-community/awesome-coq"
"rocq-community/coq-tricks" -> "cpitclaudel/alectryon"
"rocq-community/coq-tricks" -> "lukaszcz/coqhammer"
"rocq-community/coq-tricks" -> "ProofGeneral/PG"
"rocq-community/coq-tricks" -> "vellvm/vellvm"
"rocq-community/coq-tricks" -> "PrincetonUniversity/VST"
"rocq-community/coq-tricks" -> "smtcoq/smtcoq"
"rocq-community/coq-tricks" -> "QuickChick/QuickChick"
"rocq-community/coq-tricks" -> "math-comp/math-comp"
"rocq-community/coq-tricks" -> "whonore/Coqtail"
"cvc5/cvc5" -> "SRI-CSL/yices2"
"cvc5/cvc5" -> "pysmt/pysmt"
"cvc5/cvc5" -> "Boolector/boolector"
"cvc5/cvc5" -> "vprover/vampire"
"cvc5/cvc5" -> "arminbiere/cadical"
"cvc5/cvc5" -> "stp/stp"
"cvc5/cvc5" -> "bitwuzla/bitwuzla"
"cvc5/cvc5" -> "emina/rosette"
"cvc5/cvc5" -> "seahorn/seahorn"
"cvc5/cvc5" -> "boogie-org/boogie"
"cvc5/cvc5" -> "diffblue/cbmc"
"cvc5/cvc5" -> "msoos/cryptominisat"
"cvc5/cvc5" -> "Z3Prover/z3" ["e"=1]
"cvc5/cvc5" -> "arminbiere/kissat"
"cvc5/cvc5" -> "stanford-centaur/smt-switch"
"milochristiansen/lua" -> "rhysd/gocaml" ["e"=1]
"jwbuurlage/category-theory-programmers" -> "jwiegley/category-theory" ["e"=1]
"jwbuurlage/category-theory-programmers" -> "antalsz/hs-to-coq" ["e"=1]
"GaloisInc/crucible" -> "GaloisInc/saw-script"
"GaloisInc/crucible" -> "GaloisInc/what4"
"GaloisInc/crucible" -> "LeventErkok/sbv" ["e"=1]
"GaloisInc/crucible" -> "facebookexperimental/MIRAI" ["e"=1]
"GaloisInc/crucible" -> "PLSysSec/haybale" ["e"=1]
"GaloisInc/crucible" -> "seahorn/crab" ["e"=1]
"GaloisInc/crucible" -> "seahorn/clam" ["e"=1]
"GaloisInc/crucible" -> "cedille/cedille" ["e"=1]
"GaloisInc/crucible" -> "GaloisInc/cryptol"
"GaloisInc/crucible" -> "staticafi/symbiotic"
"GaloisInc/crucible" -> "creusot-rs/creusot" ["e"=1]
"GaloisInc/crucible" -> "project-oak/rust-verification-tools"
"GaloisInc/crucible" -> "seahorn/seahorn"
"GaloisInc/crucible" -> "viperproject/prusti-dev" ["e"=1]
"GaloisInc/crucible" -> "GaloisInc/macaw"
"ccz181078/Coq-BB5" -> "meithecatte/busycoq"
"ccz181078/Coq-BB5" -> "mattam82/Coq-Equations"
"ccz181078/Coq-BB5" -> "math-comp/math-comp"
"ccz181078/Coq-BB5" -> "leanprover-community/lean-auto" ["e"=1]
"cr-marcstevens/sha1collisiondetection" -> "mit-plv/fiat-crypto" ["e"=1]
"cr-marcstevens/sha1collisiondetection" -> "C2SP/wycheproof" ["e"=1]
"YosysHQ/sby" -> "diffblue/hw-cbmc" ["e"=1]
"primaryobjects/AI-Programmer" -> "HiroakiMikami/deep-coder" ["e"=1]
"primaryobjects/AI-Programmer" -> "microsoft/prose" ["e"=1]
"Mercury-Language/mercury" -> "LPCIC/elpi" ["e"=1]
"google-deepmind/card2code" -> "nearai/program_synthesis" ["e"=1]
"eprover/eprover" -> "vprover/vampire"
"eprover/eprover" -> "sneeuwballen/zipperposition"
"eprover/eprover" -> "eprover/PyRes"
"rdaly525/coreir" -> "cristian-mattarei/CoSA" ["e"=1]
"OpenLogicProject/OpenLogic" -> "leanprover/lean3" ["e"=1]
"jasmin-lang/jasmin" -> "EasyCrypt/easycrypt"
"jasmin-lang/jasmin" -> "formosa-crypto/libjade"
"jasmin-lang/jasmin" -> "hacspec/hacspec"
"jasmin-lang/jasmin" -> "DeepSpec/InteractionTrees"
"jasmin-lang/jasmin" -> "smtcoq/smtcoq"
"jasmin-lang/jasmin" -> "mit-plv/fiat-crypto"
"jasmin-lang/jasmin" -> "tfaoliveira/libjc"
"PrincetonUniversity/ILAng" -> "PrincetonUniversity/IMDb-Archive"
"PrincetonUniversity/ILAng" -> "cristian-mattarei/CoSA"
"ott-lang/ott" -> "mattam82/Coq-Equations"
"ott-lang/ott" -> "plclub/lngen"
"ott-lang/ott" -> "rems-project/lem"
"ott-lang/ott" -> "AndrasKovacs/elaboration-zoo" ["e"=1]
"ott-lang/ott" -> "MetaRocq/metarocq"
"ott-lang/ott" -> "rocq-community/coq-tricks"
"ott-lang/ott" -> "plclub/metalib"
"ott-lang/ott" -> "Deducteam/lambdapi"
"ott-lang/ott" -> "PrincetonUniversity/VST"
"ott-lang/ott" -> "AndrasKovacs/smalltt" ["e"=1]
"ott-lang/ott" -> "CakeML/cakeml"
"ott-lang/ott" -> "cedille/cedille" ["e"=1]
"ott-lang/ott" -> "Deducteam/Dedukti"
"ott-lang/ott" -> "granule-project/granule" ["e"=1]
"DistributedComponents/disel" -> "DistributedComponents/verdi-chord"
"sunchao/tiger" -> "steshaw/tiger-ml"
"sunchao/tiger" -> "ParkerK/Tigpiler"
"moves-rwth/storm" -> "moves-rwth/stormpy"
"moves-rwth/storm" -> "prismmodelchecker/prism"
"moves-rwth/storm" -> "ths-rwth/carl"
"moves-rwth/storm" -> "randriu/synthesis"
"moves-rwth/storm" -> "prismmodelchecker/prism-benchmarks"
"project-everest/vale" -> "FStarLang/karamel"
"project-everest/vale" -> "project-everest/mitls-fstar"
"project-everest/vale" -> "project-everest/everest"
"project-everest/vale" -> "pornin/CTTK"
"project-everest/vale" -> "FStarLang/fstar-mode.el"
"project-everest/vale" -> "imdea-software/verifying-constant-time" ["e"=1]
"project-everest/vale" -> "HACS-workshop/hacspec"
"reudismam/Refazer" -> "gustavoasoares/refazer"
"mcmtroffaes/pycddlib" -> "mcmtroffaes/cddlib_old"
"Artisan-Lab/RAPx" -> "lizhuohua/rust-ffi-checker"
"Artisan-Lab/RAPx" -> "Artisan-Lab/RULF"
"Artisan-Lab/RAPx" -> "BurtonQin/Awesome-Rust-Checker"
"Artisan-Lab/RAPx" -> "hopv/rust-horn"
"Artisan-Lab/RAPx" -> "lizhuohua/rust-mir-checker"
"acsl-language/acsl" -> "AllanBlanchard/tutoriel_wp"
"acsl-language/acsl" -> "fraunhoferfokus/acsl-by-example"
"moves-rwth/stormpy" -> "moves-rwth/storm"
"moves-rwth/stormpy" -> "moves-rwth/pycarl"
"BurtonQin/Awesome-Rust-Checker" -> "Artisan-Lab/Rust-memory-safety-bugs"
"IntelLabs/flrc" -> "CakeML/cakeml" ["e"=1]
"MLton/mlton" -> "polyml/polyml"
"MLton/mlton" -> "CakeML/cakeml"
"MLton/mlton" -> "melsman/mlkit"
"MLton/mlton" -> "SMLFamily/Successor-ML"
"MLton/mlton" -> "azdavis/millet"
"MLton/mlton" -> "smlnj/smlnj"
"MLton/mlton" -> "kfl/mosml"
"MLton/mlton" -> "MPLLang/mpl"
"MLton/mlton" -> "smlsharp/smlsharp"
"MLton/mlton" -> "eatonphil/ponyo"
"MLton/mlton" -> "standardml/smackage"
"MLton/mlton" -> "HOL-Theorem-Prover/HOL"
"MLton/mlton" -> "RedPRL/sml-redprl" ["e"=1]
"MLton/mlton" -> "AndrasKovacs/elaboration-zoo" ["e"=1]
"MLton/mlton" -> "minoki/LunarML"
"vellvm/vellvm" -> "DeepSpec/InteractionTrees"
"vellvm/vellvm" -> "mit-plv/bedrock2"
"vellvm/vellvm" -> "PrincetonUniversity/VST"
"vellvm/vellvm" -> "MetaRocq/metarocq"
"vellvm/vellvm" -> "mattam82/Coq-Equations"
"vellvm/vellvm" -> "rocq-community/coq-tricks"
"vellvm/vellvm" -> "smtcoq/smtcoq"
"vellvm/vellvm" -> "QuickChick/QuickChick"
"vellvm/vellvm" -> "CertiCoq/certicoq"
"vellvm/vellvm" -> "lukaszcz/coqhammer"
"vellvm/vellvm" -> "rocq-community/coq-ext-lib"
"vellvm/vellvm" -> "CakeML/cakeml"
"vellvm/vellvm" -> "formal-land/coq-of-ocaml"
"vellvm/vellvm" -> "AbsInt/CompCert"
"vellvm/vellvm" -> "sifive/Kami"
"rhysd/gocaml" -> "esumii/min-caml"
"rhysd/gocaml" -> "milochristiansen/lua" ["e"=1]
"rhysd/gocaml" -> "DQNEO/minigo" ["e"=1]
"rhysd/gocaml" -> "maekawatoshiki/sericum" ["e"=1]
"rhysd/gocaml" -> "prakhar1989/type-inference" ["e"=1]
"rhysd/gocaml" -> "polyml/polyml"
"rhysd/gocaml" -> "robpike/lisp" ["e"=1]
"rhysd/gocaml" -> "google/skylark" ["e"=1]
"stanislaw/awesome-safety-critical" -> "ligurio/practical-fm" ["e"=1]
"diku-dk/ap-e2024-pub" -> "coastalcph/nlp-course"
"diku-dk/ap-e2024-pub" -> "diku-dk/pmph-e2024-pub"
"diku-dk/ap-e2024-pub" -> "diku-compSys/compSys-e2022-pub"
"diku-dk/ap-e2024-pub" -> "joshniemela/KU-courses"
"hazelgrove/hazel" -> "CakeML/cakeml" ["e"=1]
"antalsz/hs-to-coq" -> "jwiegley/coq-haskell"
"antalsz/hs-to-coq" -> "QuickChick/QuickChick"
"antalsz/hs-to-coq" -> "LeventErkok/sbv" ["e"=1]
"antalsz/hs-to-coq" -> "discus-lang/iron" ["e"=1]
"spacejam/tla-rust" -> "uwplse/verdi" ["e"=1]
"enzet/symbolic-execution" -> "staticafi/symbiotic" ["e"=1]
"rust-fuzz/trophy-case" -> "lizhuohua/rust-mir-checker" ["e"=1]
"LPCIC/elpi" -> "LPCIC/coq-elpi"
"LPCIC/elpi" -> "teyjus/teyjus"
"LPCIC/elpi" -> "Deducteam/lambdapi"
"LPCIC/elpi" -> "astampoulis/makam" ["e"=1]
"LPCIC/elpi" -> "cedille/cedille" ["e"=1]
"LPCIC/elpi" -> "mattam82/Coq-Equations"
"LPCIC/elpi" -> "agda/cubical" ["e"=1]
"marcoeilers/nagini" -> "viperproject/silicon"
"marcoeilers/nagini" -> "viperproject/silver"
"marcoeilers/nagini" -> "viperproject/gobra"
"kuis-isle3sw/IoPLMaterials" -> "aigarashi/PL-LectureNotes"
"kuis-isle3sw/IoPLMaterials" -> "camlspotter/ocaml-zippy-tutorial-in-japanese"
"dreal/dreal4" -> "verivital/nnv" ["e"=1]
"dreal/dreal4" -> "SRI-CSL/yices2"
"gipsyh/rIC3-HWMCC24" -> "CoriolisSP/FuzzBtor2"
"LPCIC/coq-elpi" -> "LPCIC/elpi"
"LPCIC/coq-elpi" -> "mattam82/Coq-Equations"
"LPCIC/coq-elpi" -> "MetaRocq/metarocq"
"LPCIC/coq-elpi" -> "math-comp/hierarchy-builder"
"LPCIC/coq-elpi" -> "rocq-prover/rfcs"
"LPCIC/coq-elpi" -> "smtcoq/smtcoq"
"endorlabs/MIRAI" -> "lizhuohua/rust-ffi-checker" ["e"=1]
"endorlabs/MIRAI" -> "AeneasVerif/charon" ["e"=1]
"AllanBlanchard/tutoriel_wp" -> "fraunhoferfokus/acsl-by-example"
"AllanBlanchard/tutoriel_wp" -> "acsl-language/acsl"
"diku-dk/dpp-e2024-pub" -> "diku-dk/pmph-e2024-pub"
"seL4/rumprun" -> "seL4/camkes-arm-vm"
"diku-dk/pmph-e2024-pub" -> "diku-dk/dpp-e2024-pub"
"leanprover-community/mathlib3" -> "leanprover/lean3" ["e"=1]
"javapathfinder/jpf-core" -> "diffblue/cbmc" ["e"=1]
"javapathfinder/jpf-core" -> "sosy-lab/java-smt" ["e"=1]
"AlloyTools/org.alloytools.alloy" -> "emina/rosette" ["e"=1]
"AlloyTools/org.alloytools.alloy" -> "polyml/polyml" ["e"=1]
"AlloyTools/org.alloytools.alloy" -> "dafny-lang/dafny" ["e"=1]
"SOSML/SOSML" -> "shwestrick/smlfmt"
"SOSML/SOSML" -> "elpinal/bright-ml"
"SOSML/SOSML" -> "SomewhatML/sml-compiler"
"SOSML/SOSML" -> "KeenS/webml"
"SOSML/SOSML" -> "smlsharp/smlsharp"
"seahorn/sea-dsa" -> "seahorn/seahorn" ["e"=1]
"seahorn/clam" -> "seahorn/seahorn" ["e"=1]
"seahorn/clam" -> "staticafi/symbiotic" ["e"=1]
"seahorn/clam" -> "SRI-CSL/yices2" ["e"=1]
"seahorn/crab" -> "seahorn/seahorn" ["e"=1]
"seahorn/crab" -> "staticafi/symbiotic" ["e"=1]
"granule-project/granule" -> "Deducteam/lambdapi" ["e"=1]
"mit-plv/kami" -> "sifive/Kami"
"mit-plv/kami" -> "mit-plv/koika"
"mit-plv/kami" -> "mit-plv/riscv-semantics"
"the-lambda-church/coquille" -> "whonore/Coqtail"
"SRI-CSL/gllvm" -> "SRI-CSL/OCCAM" ["e"=1]
"SRI-CSL/gllvm" -> "SRI-CSL/libpoly" ["e"=1]
"whonore/Coqtail" -> "rocq-community/coq-tricks"
"whonore/Coqtail" -> "ejgallego/coq-lsp"
"whonore/Coqtail" -> "mattam82/Coq-Equations"
"whonore/Coqtail" -> "CertiCoq/certicoq"
"whonore/Coqtail" -> "cpitclaudel/company-coq"
"whonore/Coqtail" -> "the-lambda-church/coquille"
"whonore/Coqtail" -> "lukaszcz/coqhammer"
"whonore/Coqtail" -> "rocq-archive/coq-serapi"
"whonore/Coqtail" -> "DeepSpec/InteractionTrees"
"whonore/Coqtail" -> "PrincetonUniversity/VST"
"whonore/Coqtail" -> "tomtomjhj/coq-lsp.nvim"
"whonore/Coqtail" -> "MetaRocq/metarocq"
"whonore/Coqtail" -> "achlipala/frap"
"whonore/Coqtail" -> "rocq-community/coq-dpdgraph"
"whonore/Coqtail" -> "rocq-prover/vscoq"
"DeepSpec/dsss17" -> "QuickChick/QuickChick"
"DeepSpec/dsss17" -> "DeepSpec/dsss18"
"DeepSpec/dsss17" -> "OPLSS/oplss-notes-2017"
"HiroakiMikami/deep-coder" -> "water-vapor/DeepCoder-tensorflow"
"HiroakiMikami/deep-coder" -> "dkamm/deepcoder"
"HiroakiMikami/deep-coder" -> "microsoft/DeepCoder-Utils"
"tamarin-prover/teaching" -> "benjaminkiesl/tamarin_toy_protocol"
"tamarin-prover/teaching" -> "tamarin-prover/manual"
"steshaw/tiger-ml" -> "sunchao/tiger"
"steshaw/tiger-ml" -> "ParkerK/Tigpiler"
"plclub/metalib" -> "plclub/lngen"
"fraunhoferfokus/acsl-by-example" -> "AllanBlanchard/tutoriel_wp"
"fraunhoferfokus/acsl-by-example" -> "acsl-language/acsl"
"fraunhoferfokus/acsl-by-example" -> "evdenis/verker"
"hopv/hoice" -> "uuverifiers/eldarica"
"hopv/hoice" -> "hopv/MoCHi"
"hopv/hoice" -> "hiroshi-unno/coar"
"marijnheule/microsat" -> "arminbiere/satch"
"marijnheule/microsat" -> "biotomas/ipasir"
"FStarLang/FStar" ["l"="-22.298,-19.414"]
"FStarLang/karamel" ["l"="-22.262,-19.449"]
"idris-lang/Idris-dev" ["l"="-20.948,-20.228", "c"=118]
"agda/agda" ["l"="-21.963,-20.135", "c"=447]
"rocq-prover/rocq" ["l"="-22.311,-19.446"]
"dafny-lang/dafny" ["l"="-22.296,-19.36"]
"hacl-star/hacl-star" ["l"="-22.274,-19.483"]
"CakeML/cakeml" ["l"="-22.173,-19.362"]
"AbsInt/CompCert" ["l"="-22.241,-19.409"]
"leanprover/lean3" ["l"="-22.268,-19.388"]
"idris-lang/Idris2" ["l"="-22.422,-21.627", "c"=474]
"HoTT/Coq-HoTT" ["l"="-21.935,-20.123", "c"=447]
"koka-lang/koka" ["l"="-22.47,-21.657", "c"=474]
"ucsd-progsys/liquidhaskell" ["l"="-20.74,-20.183", "c"=118]
"ocaml/ocaml" ["l"="-25.826,-22.582", "c"=150]
"plfa/plfa.github.io" ["l"="-21.966,-20.166", "c"=447]
"Inventitech/strans" ["l"="-22.53,-19.449"]
"microsoft/prose" ["l"="-22.478,-19.412"]
"steshaw/plt" ["l"="-21.066,-20.154", "c"=118]
"schollz/hostyoself" ["l"="-3.845,-28.398", "c"=4]
"viperproject/prusti-dev" ["l"="-9.757,-6.512", "c"=5]
"GaloisInc/crucible" ["l"="-22.387,-19.365"]
"leanprover/lean4" ["l"="-21.469,-19.222", "c"=752]
"math-comp/math-comp" ["l"="-22.173,-19.433"]
"ghc/ghc" ["l"="-20.88,-20.223", "c"=118]
"UniMath/UniMath" ["l"="-21.94,-20.103", "c"=447]
"ProofGeneral/PG" ["l"="-22.201,-19.412"]
"rocq-community/coq-tricks" ["l"="-22.194,-19.422"]
"Z3Prover/z3" ["l"="-45.232,-34.368", "c"=282]
"jwiegley/category-theory" ["l"="-22.145,-19.402"]
"MetaRocq/metarocq" ["l"="-22.173,-19.409"]
"mattam82/Coq-Equations" ["l"="-22.159,-19.426"]
"NASA-SW-VnV/ikos" ["l"="-22.005,-18.509", "c"=763]
"diffblue/cbmc" ["l"="-22.347,-19.222"]
"seahorn/seahorn" ["l"="-22.349,-19.263"]
"imteekay/programming-language-research" ["l"="-14.574,-23.095", "c"=1101]
"rocq-community/awesome-coq" ["l"="-22.196,-19.449"]
"leanprover-community/mathlib3" ["l"="-21.457,-19.153", "c"=752]
"mortberg/cubicaltt" ["l"="-21.99,-20.153", "c"=447]
"HOL-Theorem-Prover/HOL" ["l"="-22.175,-19.333"]
"jrh13/hol-light" ["l"="-22.197,-19.335"]
"RedPRL/sml-redprl" ["l"="-22.021,-20.167", "c"=447]
"nimble-code/Spin" ["l"="-22.241,-19.12"]
"nimble-code/Cobra" ["l"="-22.213,-19.054"]
"nimble-code/Modex" ["l"="-22.237,-19.088"]
"verifast/verifast" ["l"="-22.257,-19.318"]
"albertocasagrande/pyModelChecking" ["l"="-22.216,-19.082"]
"utwente-fmt/ltsmin" ["l"="-22.26,-19.141"]
"prismmodelchecker/prism" ["l"="-22.2,-18.985"]
"ellisk42/ec" ["l"="53.736,29.653", "c"=547]
"flxsosa/ProgramSearch" ["l"="-22.675,-19.605"]
"albrow/fo" ["l"="4.306,-8.361", "c"=0]
"rhysd/gocaml" ["l"="-21.958,-19.334"]
"ml4tp/gamepad" ["l"="-22.262,-19.516"]
"ml4tp/tcoq" ["l"="-22.281,-19.544"]
"stp/stp" ["l"="-22.401,-19.242"]
"SRI-CSL/yices2" ["l"="-22.379,-19.23"]
"msoos/cryptominisat" ["l"="-22.421,-19.211"]
"bitwuzla/bitwuzla" ["l"="-22.399,-19.211"]
"arminbiere/cadical" ["l"="-22.42,-19.249"]
"Boolector/boolector" ["l"="-22.396,-19.226"]
"cvc5/cvc5" ["l"="-22.373,-19.254"]
"klee/klee" ["l"="-22.064,-18.483", "c"=763]
"S2E/s2e-old" ["l"="-43.001,-37.076", "c"=306]
"arminbiere/kissat" ["l"="-22.444,-19.238"]
"pysmt/pysmt" ["l"="-22.391,-19.254"]
"niklasso/minisat" ["l"="-22.427,-19.23"]
"seahorn/crab" ["l"="-21.978,-18.556", "c"=763]
"S2E/s2e" ["l"="-41.581,-36.117", "c"=91]
"smackers/smack" ["l"="-22.33,-19.259"]
"lukaszcz/coqhammer" ["l"="-22.163,-19.417"]
"PrincetonUniversity/VST" ["l"="-22.216,-19.396"]
"DeepSpec/InteractionTrees" ["l"="-22.189,-19.413"]
"LPCIC/coq-elpi" ["l"="-22.135,-19.417"]
"vellvm/vellvm" ["l"="-22.201,-19.388"]
"QuickChick/QuickChick" ["l"="-22.18,-19.422"]
"smtcoq/smtcoq" ["l"="-22.193,-19.4"]
"rocq-prover/opam" ["l"="-22.136,-19.43"]
"rocq-prover/vscoq" ["l"="-22.169,-19.45"]
"CertiCoq/certicoq" ["l"="-22.163,-19.404"]
"Deducteam/lambdapi" ["l"="-22.159,-19.388"]
"mit-plv/bedrock2" ["l"="-22.184,-19.377"]
"hwayne/lets-prove-leftpad" ["l"="0.978,13.573", "c"=115]
"ligurio/practical-fm" ["l"="-22.228,-19.345"]
"fraunhoferfokus/acsl-by-example" ["l"="-22.353,-19.409"]
"achlipala/frap" ["l"="-22.182,-19.394"]
"egraphs-good/egg" ["l"="-0.663,15.362", "c"=729]
"emina/rosette" ["l"="-22.288,-19.326"]
"facebook/SPARTA" ["l"="-21.981,-18.53", "c"=763]
"staticafi/symbiotic" ["l"="-22.369,-19.273"]
"Election-Tech-Initiative/electionguard" ["l"="-20.825,12.389", "c"=22]
"tamarin-prover/tamarin-prover" ["l"="-22.257,-19.543"]
"awesomo4000/awesome-provable" ["l"="-22.211,-19.293"]
"seL4/l4v" ["l"="-22.22,-19.361"]
"jdnklau/fm-ml" ["l"="-22.24,-19.287"]
"boogie-org/boogie" ["l"="-22.304,-19.295"]
"cpitclaudel/company-coq" ["l"="-22.183,-19.444"]
"antalsz/hs-to-coq" ["l"="-22.197,-19.36"]
"LeventErkok/sbv" ["l"="-20.619,-20.182", "c"=118]
"AliveToolkit/alive2" ["l"="-22.062,-18.585", "c"=763]
"csmith-project/csmith" ["l"="-22.04,-18.577", "c"=763]
"rocq-community/coq-ext-lib" ["l"="-22.143,-19.453"]
"DeepSpec/dsss17" ["l"="-22.102,-19.444"]
"rocq-prover/rfcs" ["l"="-22.128,-19.456"]
"pysathq/pysat" ["l"="-22.445,-19.204"]
"dselsam/neurosat" ["l"="50.786,26.62", "c"=490]
"arminbiere/satch" ["l"="-22.467,-19.216"]
"sat-group/open-wbo" ["l"="-22.502,-19.171"]
"marijnheule/microsat" ["l"="-22.471,-19.232"]
"tulip-control/dd" ["l"="-22.332,-19.111"]
"alexeyignatiev/mkplot" ["l"="-22.479,-19.182"]
"meelgroup/approxmc" ["l"="-22.491,-19.148"]
"arminbiere/lingeling" ["l"="-22.512,-19.208"]
"google/souper" ["l"="-22.083,-18.565", "c"=763]
"mit-plv/riscv-semantics" ["l"="-22.132,-19.224"]
"mit-plv/riscv-coq" ["l"="-22.132,-19.266"]
"rsnikhil/Forvis_RISCV-ISA-Spec" ["l"="-22.114,-19.198"]
"mit-plv/kami" ["l"="-22.163,-19.239"]
"GaloisInc/grift" ["l"="-22.109,-19.18"]
"sifive/Kami" ["l"="-22.158,-19.258"]
"riscvarchive/ISA_Formal_Spec_Public_Review" ["l"="31.598,-3.894", "c"=188]
"sifive/RiscvSpecFormal" ["l"="-22.129,-19.244"]
"mit-plv/koika" ["l"="-22.153,-19.219"]
"math-comp/analysis" ["l"="-22.122,-19.44"]
"math-comp/hierarchy-builder" ["l"="-22.095,-19.476"]
"affeldt-aist/monae" ["l"="-22.057,-19.404"]
"uds-psl/coq-library-undecidability" ["l"="-22.054,-19.504"]
"jtassarotti/coq-proba" ["l"="-22.067,-19.479"]
"GeoCoq/GeoCoq" ["l"="-22.111,-19.458"]
"snu-sf/paco" ["l"="-22.122,-19.425"]
"sweirich/pi-forall" ["l"="-21.999,-20.207", "c"=447]
"mit-plv/bedrock" ["l"="-22.139,-19.319"]
"mit-plv/fiat" ["l"="-22.145,-19.378"]
"bluerock-io/BRiCk" ["l"="-22.15,-19.364"]
"cedille/cedille" ["l"="-22.011,-20.218", "c"=447]
"riscv/sail-riscv" ["l"="31.652,-3.821", "c"=188]
"rems-project/sail" ["l"="-22.213,-19.319"]
"yishn/tikzcd-editor" ["l"="-21.894,-20.139", "c"=447]
"google/skylark" ["l"="4.163,-8.27", "c"=0]
"johnyf/tool_lists" ["l"="-22.289,-19.194"]
"tulip-control/tulip-control" ["l"="-22.279,-19.099"]
"tulip-control/omega" ["l"="-22.298,-19.124"]
"ivmai/cudd" ["l"="-22.316,-19.086"]
"wilbowma/cur" ["l"="-22.069,-20.27", "c"=447]
"ultimate-pa/ultimate" ["l"="-22.338,-19.235"]
"VerifiableRobotics/LTLMoP" ["l"="-22.279,-19.135"]
"rust-secure-code/safety-dance" ["l"="-9.761,-6.468", "c"=5]
"project-oak/rust-verification-tools" ["l"="-22.457,-19.331"]
"LeifAndersen/PLGradSchools" ["l"="-22.06,-20.181", "c"=447]
"crypto101/book" ["l"="-44.346,-33.907", "c"=865]
"C2SP/wycheproof" ["l"="-22.315,-19.572"]
"rocq-community/coq-art" ["l"="-22.118,-19.477"]
"ilyasergey/pnp" ["l"="-22.118,-19.41"]
"EugeneLoy/coq_jupyter" ["l"="-22.077,-19.544"]
"calyxir/calyx" ["l"="32.871,-3.471", "c"=180]
"pornin/CTTK" ["l"="-22.377,-19.545"]
"project-everest/vale" ["l"="-22.326,-19.511"]
"agda/agda-stdlib" ["l"="-22.001,-20.106", "c"=447]
"facebookexperimental/MIRAI" ["l"="-9.689,-6.496", "c"=5]
"lizhuohua/rust-mir-checker" ["l"="-22.719,-19.227"]
"hopv/rust-horn" ["l"="-22.516,-19.271"]
"minoki/LunarML" ["l"="-21.987,-19.24"]
"elpinal/bright-ml" ["l"="-21.97,-19.228"]
"azdavis/millet" ["l"="-21.959,-19.254"]
"kindl/Hypatia" ["l"="-21.951,-19.172"]
"polyml/polyml" ["l"="-22.058,-19.283"]
"melsman/mlkit" ["l"="-22.012,-19.257"]
"shwestrick/smlfmt" ["l"="-21.941,-19.238"]
"smlsharp/smlsharp" ["l"="-21.976,-19.277"]
"MLton/mlton" ["l"="-22.034,-19.281"]
"MPLLang/mpl" ["l"="-21.989,-19.265"]
"diku-dk/sml-server" ["l"="-21.941,-19.207"]
"eatonphil/ponyo" ["l"="-21.978,-19.251"]
"microsoft/verisol" ["l"="-22.335,-19.321"]
"boogie-org/corral" ["l"="-22.345,-19.285"]
"SRI-CSL/solidity" ["l"="-22.362,-19.35"]
"PLSysSec/haybale" ["l"="-9.488,-6.479", "c"=5]
"sosy-lab/sv-benchmarks" ["l"="-22.349,-19.25"]
"viperproject/silicon" ["l"="-22.224,-19.198"]
"nearai/program_synthesis" ["l"="-22.601,-19.467"]
"carpedm20/karel" ["l"="-22.645,-19.491"]
"carpedm20/program-synthesis-rl-tensorflow" ["l"="-22.665,-19.484"]
"StanfordPL/stoke" ["l"="-21.998,-18.611", "c"=763]
"esumii/min-caml" ["l"="-21.987,-19.322"]
"tomprimozic/type-systems" ["l"="-22.096,-20.226", "c"=447]
"gfngfn/SATySFi" ["l"="4.597,-40.032", "c"=1133]
"ocaml-community/sedlex" ["l"="-25.928,-22.755", "c"=150]
"sunchao/tiger" ["l"="-21.917,-19.339"]
"steshaw/tiger-ml" ["l"="-21.928,-19.356"]
"camlspotter/ocaml-zippy-tutorial-in-japanese" ["l"="-21.874,-19.348"]
"yallop/effects-bibliography" ["l"="-22.027,-20.189", "c"=447]
"mupq/pqm4" ["l"="-21.479,-24.454", "c"=1251]
"jasmin-lang/jasmin" ["l"="-22.23,-19.508"]
"princeton-vl/CoqGym" ["l"="-22.227,-19.433"]
"jesse-michael-han/lean-gptf" ["l"="-21.357,-19.121", "c"=752]
"openai/lean-gym" ["l"="-21.31,-19.146", "c"=752]
"rocq-archive/coq-serapi" ["l"="-22.189,-19.464"]
"tensorflow/deepmath" ["l"="-22.254,-19.352"]
"UCSD-PL/proverbot9001" ["l"="-22.247,-19.488"]
"zhangir-azerbayev/ProofNet" ["l"="-21.296,-19.158", "c"=752]
"stanford-centaur/PyPantograph" ["l"="-21.255,-19.122", "c"=752]
"herbie-fp/herbie" ["l"="-0.676,15.406", "c"=729]
"SyGuS-Org/benchmarks" ["l"="-22.499,-19.436"]
"SyGuS-Org/tools" ["l"="-22.484,-19.441"]
"secure-software-engineering/phasar" ["l"="-22.077,-18.53", "c"=763]
"stanford-centaur/smt-switch" ["l"="-22.393,-19.194"]
"hwmcc/btor2tools" ["l"="-22.406,-19.174"]
"stanford-centaur/pono" ["l"="-22.386,-19.18"]
"ddsmt/ddSMT" ["l"="-22.39,-19.281"]
"YosysHQ/sby" ["l"="32.914,-3.693", "c"=180]
"SRI-CSL/sally" ["l"="-22.346,-19.202"]
"veorq/cryptocoding" ["l"="-19.098,12.954", "c"=173]
"hacspec/hacspec" ["l"="-22.216,-19.607"]
"athas/raytracers" ["l"="-21.935,-19.278"]
"diku-dk/smlpkg" ["l"="-21.898,-19.196"]
"MPLLang/mpllib" ["l"="-21.942,-19.224"]
"MPLLang/mpl-tutorial" ["l"="-21.952,-19.219"]
"ejgallego/coq-lsp" ["l"="-22.145,-19.497"]
"rocq-prover/platform" ["l"="-22.156,-19.461"]
"siegebell/vscoq" ["l"="-22.139,-19.54"]
"ott-lang/ott" ["l"="-22.207,-19.434"]
"GaloisInc/cryptol" ["l"="-22.274,-19.425"]
"GaloisInc/saw-script" ["l"="-22.322,-19.388"]
"EasyCrypt/easycrypt" ["l"="-22.221,-19.483"]
"mit-plv/fiat-crypto" ["l"="-22.237,-19.462"]
"GaloisInc/swanky" ["l"="51.511,1.324", "c"=378]
"vprover/vampire" ["l"="-22.328,-19.29"]
"eprover/eprover" ["l"="-22.393,-19.323"]
"sneeuwballen/zipperposition" ["l"="-22.417,-19.331"]
"Deducteam/Dedukti" ["l"="-22.19,-19.318"]
"andrejbauer/plzoo" ["l"="-22.054,-20.211", "c"=447]
"FormalTheology/GoedelGod" ["l"="-21.945,-20.154", "c"=447]
"cpitclaudel/alectryon" ["l"="-22.172,-19.485"]
"Coq-zh/SF-zh" ["l"="-22.193,-20.139", "c"=447]
"cloudflare/circl" ["l"="-21.522,-24.389", "c"=1251]
"bluespec/Flute" ["l"="31.744,-3.682", "c"=188]
"cristian-mattarei/CoSA" ["l"="-22.4,-19.141"]
"math-comp/finmap" ["l"="-22.05,-19.545"]
"microsoft/DeepCoder-Utils" ["l"="-22.611,-19.533"]
"dkamm/deepcoder" ["l"="-22.621,-19.551"]
"tlswg/tls13-spec" ["l"="-11.042,-4.564", "c"=1245]
"project-everest/mitls-fstar" ["l"="-22.311,-19.524"]
"pshved/timeout" ["l"="-22.611,-19.132"]
"arminbiere/runlim" ["l"="-22.549,-19.17"]
"digama0/mm0" ["l"="-21.416,-19.058", "c"=752]
"nadia-polikarpova/cse291-program-synthesis" ["l"="-22.478,-19.389"]
"TyGuS/suslik" ["l"="-22.535,-19.412"]
"nadia-polikarpova/synquid" ["l"="-22.573,-19.42"]
"praveenkulkarni1996/awesome-program-synthesis" ["l"="-22.512,-19.406"]
"epfl-lara/leon" ["l"="-3.011,18.913", "c"=38]
"granule-project/granule" ["l"="-22,-20.239", "c"=447]
"rossberg/1ml" ["l"="-22.026,-19.195"]
"rossberg/hamlet" ["l"="-22.038,-19.226"]
"rossberg/mixml" ["l"="-22.031,-19.159"]
"elpinal/modules" ["l"="-22.009,-19.14"]
"jozefg/blott" ["l"="-22.014,-20.198", "c"=447]
"SMLFamily/Successor-ML" ["l"="-22.013,-19.228"]
"B-Lang-org/bsc" ["l"="31.778,-3.668", "c"=188]
"rems-project/sail-arm" ["l"="-22.196,-19.262"]
"SymbioticEDA/riscv-formal" ["l"="31.723,-3.794", "c"=188]
"riscv-non-isa/riscv-arch-test" ["l"="31.689,-3.799", "c"=188]
"creusot-rs/creusot" ["l"="-9.712,-6.557", "c"=5]
"rust-lang/datafrog" ["l"="-0.653,15.198", "c"=729]
"jix/varisat" ["l"="-22.291,-19.262"]
"sr-lab/coqpyt" ["l"="-22.114,-19.544"]
"ocaml-multicore/saturn" ["l"="-25.848,-22.891", "c"=150]
"tomtomjhj/coq-lsp.nvim" ["l"="-22.158,-19.512"]
"rocq-community/autosubst" ["l"="-22.119,-19.563"]
"whonore/Coqtail" ["l"="-22.173,-19.468"]
"shnarazk/splr" ["l"="-22.311,-19.277"]
"mi-ki/glucose-syrup" ["l"="-22.545,-19.207"]
"DfX-NYUAD/PSAT" ["l"="-22.559,-19.198"]
"HiroakiMikami/deep-coder" ["l"="-22.581,-19.516"]
"water-vapor/DeepCoder-tensorflow" ["l"="-22.596,-19.544"]
"amitz25/PCCoder" ["l"="-22.658,-19.552"]
"clvrai/leaps" ["l"="-22.657,-19.587"]
"shrivastavadisha/N-PEPS" ["l"="-22.63,-19.575"]
"LPCIC/elpi" ["l"="-22.088,-19.398"]
"AndrasKovacs/elaboration-zoo" ["l"="-22.035,-20.2", "c"=447]
"agda/agda-categories" ["l"="-21.996,-20.118", "c"=447]
"agda/cubical" ["l"="-22.011,-20.125", "c"=447]
"kfl/mosml" ["l"="-22.031,-19.254"]
"standardml/smackage" ["l"="-22.01,-19.242"]
"haskell-perf/checklist" ["l"="-20.651,-20.103", "c"=118]
"GaloisInc/macaw" ["l"="-22.513,-19.377"]
"GaloisInc/reopt" ["l"="-22.557,-19.386"]
"classabbyamp/espresso-logic" ["l"="-22.369,-18.947"]
"Gigantua/Espresso" ["l"="-22.38,-18.91"]
"unicoq/unicoq" ["l"="-22.209,-19.372"]
"rocq-community/fourcolor" ["l"="-22.09,-19.46"]
"slivingston/gr1py" ["l"="-22.271,-19.07"]
"tulip-control/polytope" ["l"="-22.271,-19.028"]
"nimble-code/Uno" ["l"="-22.199,-19.028"]
"SRI-CSL/libpoly" ["l"="-22.35,-19.176"]
"SRI-CSL/OCCAM" ["l"="-22.357,-19.137"]
"project-everest/everparse" ["l"="-22.148,-19.346"]
"rocq-community/reglang" ["l"="-22.037,-19.572"]
"finnschiermer/x86prime" ["l"="-21.744,-19.12"]
"diku-compSys/compSys-e2020-pub" ["l"="-21.731,-19.108"]
"kirkedal/compSys-e2019-pub" ["l"="-21.748,-19.144"]
"datalogisk-fagraad/DIKUNotes" ["l"="-21.763,-19.129"]
"amuletml/amulet" ["l"="-22.033,-20.272", "c"=447]
"vsedach/Vacietis" ["l"="-22.159,-19.171"]
"y2q-actionman/with-c-syntax" ["l"="-22.126,-19.121"]
"quil-lang/magicl" ["l"="-24.059,-21.576", "c"=182]
"aman-goel/avr" ["l"="-22.367,-19.171"]
"gipsyh/rIC3" ["l"="-22.4,-19.16"]
"diffblue/hw-cbmc" ["l"="-22.383,-19.164"]
"arbrad/IC3ref" ["l"="-22.382,-19.135"]
"lorepozo/program-induction" ["l"="-22.695,-19.623"]
"bunelr/GandRL_for_NPS" ["l"="-22.666,-19.505"]
"Jungyhuk/latent-execution" ["l"="-22.675,-19.533"]
"CoriolisSP/FuzzBtor2" ["l"="-22.43,-19.133"]
"meelgroup/ganak" ["l"="-22.512,-19.129"]
"marcthurley/sharpSAT" ["l"="-22.536,-19.103"]
"shaohua0116/demo2program" ["l"="-22.695,-19.487"]
"Deducteam/Logipedia" ["l"="-22.155,-19.285"]
"rocq-community/corn" ["l"="-22.112,-19.499"]
"rocq-community/math-classes" ["l"="-22.135,-19.472"]
"Gy-Hu/HWMCC24-benchmark" ["l"="33.27,-5.507", "c"=830]
"uds-psl/coq-library-complexity" ["l"="-22.019,-19.525"]
"formal-land/coq-of-ocaml" ["l"="-22.131,-19.393"]
"coq-io/io" ["l"="-22.027,-19.412"]
"rocq-community/coqeal" ["l"="-22.111,-19.426"]
"ocaml-gospel/gospel" ["l"="-22.238,-19.374"]
"rocq-community/coq-dpdgraph" ["l"="-22.149,-19.479"]
"coq-community/coq-program-verification-template" ["l"="-22.125,-19.525"]
"mcmtroffaes/pycddlib" ["l"="-22.271,-18.983"]
"usi-verification-and-security/opensmt" ["l"="-22.467,-19.111"]
"usi-verification-and-security/golem" ["l"="-22.428,-19.155"]
"system-pclub/rust-study" ["l"="-22.716,-19.21"]
"rustanlys/rupta" ["l"="-22.743,-19.207"]
"lizhuohua/rust-ffi-checker" ["l"="-22.699,-19.227"]
"Artisan-Lab/RAPx" ["l"="-22.676,-19.232"]
"coastalcph/nlp-course" ["l"="-21.722,-19.141"]
"diku-compSys/compSys-e2021-pub" ["l"="-21.745,-19.096"]
"diku-dk/ap-e2024-pub" ["l"="-21.708,-19.128"]
"joshniemela/KU-courses" ["l"="-21.731,-19.127"]
"diku-dk/diku-canvas" ["l"="-21.778,-19.111"]
"diku-compSys/compSys-e2023-pub" ["l"="-21.763,-19.091"]
"SMLFamily/The-Definition-of-Standard-ML" ["l"="-21.987,-19.186"]
"SMLFamily/The-Definition-of-Standard-ML-Revised" ["l"="-21.999,-19.202"]
"SMLFamily/SML-The-Living-Language" ["l"="-22.01,-19.178"]
"SMLFamily/The-Mechanization-of-Standard-ML" ["l"="-21.993,-19.172"]
"elpinal/modules-rs" ["l"="-21.999,-19.112"]
"awslabs/aws-crypto-policy-compliance-checker" ["l"="-22.448,-19.081"]
"awslabs/data-classification-checker" ["l"="-22.464,-19.06"]
"diku-dk/lys" ["l"="-21.88,-19.168"]
"diku-dk/smlfut" ["l"="-21.917,-19.199"]
"diku-dk/futhark-vscode" ["l"="-21.863,-19.157"]
"HACS-workshop/hacspec" ["l"="-22.335,-19.487"]
"agl/postquantum" ["l"="-22.367,-19.504"]
"SRI-CSL/PVS" ["l"="-22.306,-19.147"]
"nasa/pvslib" ["l"="-22.339,-19.086"]
"gatelabdavis/SMTAttack" ["l"="-22.581,-19.192"]
"seL4/camkes-vm-examples" ["l"="-22.651,-19.337"]
"seL4/camkes-arm-vm" ["l"="-22.621,-19.35"]
"tink-crypto/tink" ["l"="-2.358,11.669", "c"=15]
"adl/hoaf" ["l"="-22.261,-19.111"]
"robpike/lisp" ["l"="-11.098,-3.304", "c"=1294]
"bgavran/Category_Theory_Machine_Learning" ["l"="-21.953,-19.993", "c"=447]
"ark-lang/ark" ["l"="-21.681,-23.453", "c"=496]
"CatalaLang/catala" ["l"="-22.502,-21.595", "c"=474]
"seL4/seL4" ["l"="-24.969,-22.405", "c"=1051]
"microsoft/verona" ["l"="-9.631,-6.137", "c"=5]
"aws/s2n-tls" ["l"="-19.422,-25.571", "c"=10]
"magmide/magmide" ["l"="-22.582,-21.626", "c"=474]
"google/end-to-end" ["l"="9.521,-9.339", "c"=14]
"ongardie/raft.tla" ["l"="0.895,13.764", "c"=115]
"uwplse/verdi" ["l"="-22.125,-19.374"]
"Artisan-Lab/RULF" ["l"="-22.708,-19.246"]
"LiHRaM/taint" ["l"="-22.753,-19.228"]
"yeah-tiger/yeah-tiger.github.io" ["l"="-22.182,-19.517"]
"seL4/isabelle" ["l"="-21.45,-18.913", "c"=752]
"seL4/seL4_libs" ["l"="-22.532,-19.345"]
"T-Brick/molasses" ["l"="-21.897,-19.242"]
"smlnj/smlnj" ["l"="-22.003,-19.273"]
"brandonspark/mulligan" ["l"="-21.89,-19.231"]
"SomewhatML/sml-compiler" ["l"="-21.909,-19.226"]
"berkeley-abc/abc" ["l"="33.043,-5.634", "c"=830]
"audemard/glucose" ["l"="-22.454,-19.261"]
"viperproject/gobra" ["l"="-22.184,-19.147"]
"viperproject/gobra-ide" ["l"="-22.172,-19.117"]
"viperproject/VerifiedSCION" ["l"="-22.162,-19.128"]
"viperproject/silver" ["l"="-22.199,-19.164"]
"viperproject/carbon" ["l"="-22.213,-19.159"]
"hgarrereyn/SBVA" ["l"="-22.496,-19.236"]
"marijnheule/drat-trim" ["l"="-22.471,-19.262"]
"racket/typed-racket" ["l"="-23.505,-21.522", "c"=182]
"sweirich/dth" ["l"="-22.118,-19.298"]
"snowleopard/alga-paper" ["l"="-20.578,-20.319", "c"=118]
"statebox/awesome-applied-ct" ["l"="-21.969,-20.019", "c"=447]
"utwente-fmt/sylvan" ["l"="-22.308,-19.068"]
"trolando/sylvan" ["l"="-22.322,-19.058"]
"SSoelvsten/adiar" ["l"="-22.359,-19.076"]
"sosy-lab/cpachecker" ["l"="-22.355,-19.238"]
"sosy-lab/benchexec" ["l"="-22.366,-19.219"]
"esbmc/esbmc" ["l"="-22.36,-19.203"]
"sosy-lab/java-smt" ["l"="-22.377,-19.203"]
"mmjb/T2" ["l"="-22.326,-19.179"]
"sosy-lab/sv-witnesses" ["l"="-22.321,-19.231"]
"cil-project/cil" ["l"="-22.362,-19.298"]
"goblint/cil" ["l"="-22.431,-19.309"]
"uuverifiers/eldarica" ["l"="-22.423,-19.186"]
"hopv/hoice" ["l"="-22.493,-19.196"]
"uuverifiers/tricera" ["l"="-22.45,-19.144"]
"acl2/acl2" ["l"="-22.224,-19.261"]
"the-little-prover/j-bob" ["l"="-25.007,-21.765", "c"=877]
"Clozure/ccl" ["l"="-23.921,-21.544", "c"=182]
"zkat/chanl" ["l"="-24.145,-21.486", "c"=182]
"kennytilton/cells" ["l"="-24.009,-21.346", "c"=182]
"jscl-project/jscl" ["l"="-23.957,-21.552", "c"=182]
"marcoheisig/Petalisp" ["l"="-24.028,-21.571", "c"=182]
"guicho271828/trivia" ["l"="-24.038,-21.544", "c"=182]
"McCLIM/McCLIM" ["l"="-23.95,-21.567", "c"=182]
"Shen-Language/shen-cl" ["l"="-20.215,-19.706", "c"=118]
"jtkristensen/Jeopardy" ["l"="-21.892,-19.166"]
"diku-dk/sml-http" ["l"="-21.924,-19.19"]
"kantinen/kantinfo" ["l"="-21.873,-19.182"]
"madsobitsoe/CATITOR" ["l"="-21.867,-19.192"]
"clarus/coq-chick-blog" ["l"="-22.047,-19.424"]
"Ptival/PeaCoq" ["l"="-22.004,-19.418"]
"jwiegley/coq-haskell" ["l"="-22.092,-19.378"]
"mangpo/greenthumb" ["l"="-21.951,-18.624", "c"=763]
"lexi-lambda/hackett" ["l"="-22.006,-20.275", "c"=447]
"racketscript/racketscript" ["l"="-23.534,-21.495", "c"=182]
"soegaard/urlang" ["l"="-23.489,-21.484", "c"=182]
"racket/racket7" ["l"="-23.507,-21.477", "c"=182]
"hopv/MoCHi" ["l"="-22.525,-19.187"]
"jwbuurlage/category-theory-programmers" ["l"="-20.693,-20.086", "c"=118]
"elpinal/seqmod" ["l"="-21.953,-19.196"]
"cryspen/hax" ["l"="-22.199,-19.679"]
"pornin/crrl" ["l"="-22.243,-19.672"]
"cryspen/libcrux" ["l"="-22.203,-19.656"]
"benjaminkiesl/tamarin_toy_protocol" ["l"="-22.275,-19.587"]
"tamarin-prover/teaching" ["l"="-22.274,-19.604"]
"openmls/openmls" ["l"="-19.221,12.845", "c"=173]
"Chain-Fox/Chain-Fox" ["l"="-9.725,-6.575", "c"=5]
"BurtonQin/Awesome-Rust-Checker" ["l"="-22.695,-19.195"]
"AeneasVerif/charon" ["l"="-22.193,-19.736"]
"jix/kissat_extras" ["l"="-22.418,-19.17"]
"wjrforcyber/ABCPaperCheck" ["l"="33.078,-5.699", "c"=830]
"Kha/electrolysis" ["l"="-22.505,-19.325"]
"seahorn/clam" ["l"="-22.011,-18.552", "c"=763]
"nasa/vscode-pvs" ["l"="-22.359,-19.049"]
"SMLFamily/BasisLibrary" ["l"="-21.993,-19.222"]
"viperproject/mendel-verifier" ["l"="-22.546,-19.269"]
"uwplse/verdi-raft" ["l"="-22.06,-19.37"]
"DistributedComponents/disel" ["l"="-22.053,-19.348"]
"microsoft/Ironclad" ["l"="0.897,13.592", "c"=115]
"mit-pdos/fscq" ["l"="-22.085,-19.36"]
"leanprover/LeanInk" ["l"="-21.421,-19.134", "c"=752]
"coq-tactician/coq-tactician" ["l"="-22.156,-19.564"]
"tchajed/ltac2-tutorial" ["l"="-22.172,-19.549"]
"rocq-community/paramcoq" ["l"="-22.126,-19.346"]
"viperproject/viperserver" ["l"="-22.21,-19.144"]
"utwente-fmt/vercors" ["l"="-22.224,-19.175"]
"mgaudet/CompilerJobs" ["l"="-22.171,-18.601", "c"=763]
"trolando/lace" ["l"="-22.315,-19.025"]
"mchalupa/dg" ["l"="-22.043,-18.503", "c"=763]
"zhangyz/llvm-slicing" ["l"="-22.002,-18.476", "c"=763]
"eurecom-s3/symcc" ["l"="-41.524,-36.126", "c"=91]
"jirislaby/LLVMSlicer" ["l"="-21.965,-18.456", "c"=763]
"sslab-gatech/qsym" ["l"="-41.541,-36.162", "c"=91]
"kdudka/predator" ["l"="-22.41,-19.282"]
"seahorn/sea-dsa" ["l"="-22.029,-18.528", "c"=763]
"trailofbits/polytracker" ["l"="-41.557,-36.111", "c"=91]
"standardml/cmlib" ["l"="31.382,-28.273", "c"=1078]
"standardml/hackday" ["l"="-21.982,-19.208"]
"model-checking/cbmc-starter-kit" ["l"="-22.305,-19.172"]
"model-checking/cbmc-viewer" ["l"="-22.285,-19.156"]
"seL4/sel4test" ["l"="-22.586,-19.353"]
"seL4/sel4bench" ["l"="-22.576,-19.335"]
"seL4/capdl" ["l"="-22.57,-19.353"]
"seL4/seL4_tools" ["l"="-22.563,-19.342"]
"ashish-gehani/OCCAM" ["l"="-22.377,-19.101"]
"TyGuS/hoogle_plus" ["l"="-22.617,-19.424"]
"tjknoth/resyn" ["l"="-22.598,-19.433"]
"genieacs/espresso-iisojs" ["l"="-22.387,-18.888"]
"smlhelp/book" ["l"="-21.85,-19.243"]
"ParkerK/Tigpiler" ["l"="-21.904,-19.361"]
"kirkedal/its-e2020-pub" ["l"="-21.711,-19.092"]
"seL4/camkes-vm" ["l"="-22.644,-19.369"]
"seL4/camkes-tool" ["l"="-22.622,-19.364"]
"seL4/camkes" ["l"="-22.662,-19.356"]
"seL4/camkes-manifest" ["l"="-22.605,-19.319"]
"seL4/sel4-tutorials-manifest" ["l"="-22.622,-19.323"]
"mit-plv/rupicola" ["l"="-22.102,-19.35"]
"mit-plv/bbv" ["l"="-22.109,-19.392"]
"ashish-gehani/Trimmer" ["l"="-22.365,-19.109"]
"flux-rs/flux" ["l"="-9.699,-6.524", "c"=5]
"google/keytransparency" ["l"="9.436,-9.304", "c"=14]
"p-org/P" ["l"="0.87,13.614", "c"=115]
"chromium/badssl.com" ["l"="9.186,-9.121", "c"=14]
"bheisler/iai" ["l"="-10.123,-6.637", "c"=5]
"kaled-alshmrany/FuSeBMC" ["l"="-22.353,-19.152"]
"esbmc/esbmc-ai" ["l"="-22.338,-19.159"]
"sslab-gatech/Rudra" ["l"="-9.737,-6.477", "c"=5]
"eth-sri/ELINA" ["l"="-21.969,-18.575", "c"=763]
"Antique-team/memcad" ["l"="-22.454,-19.291"]
"antoinemine/apron" ["l"="-21.95,-18.572", "c"=763]
"sarsko/CreuSAT" ["l"="-22.367,-19.322"]
"AeneasVerif/aeneas" ["l"="-22.192,-19.714"]
"trailofbits/vast" ["l"="-21.996,-18.568", "c"=763]
"google/keyczar" ["l"="56.795,-13.911", "c"=123]
"newca12/awesome-rust-formalized-reasoning" ["l"="-9.628,-6.654", "c"=5]
"matijapretnar/eff" ["l"="-22.077,-20.193", "c"=447]
"Julian/lean.nvim" ["l"="-21.398,-19.098", "c"=752]
"cascremers/scyther" ["l"="-22.261,-19.575"]
"tamarin-prover/manual" ["l"="-22.258,-19.593"]
"tls13tamarin/TLS13Tamarin" ["l"="-22.241,-19.587"]
"relic-toolkit/relic" ["l"="50.543,1.932", "c"=2204]
"SSProve/ssprove" ["l"="-22.233,-19.549"]
"loiclec/fuzzcheck-rs" ["l"="-9.926,-6.361", "c"=5]
"model-checking/kani" ["l"="-9.804,-6.503", "c"=5]
"verus-lang/verus" ["l"="-9.749,-6.557", "c"=5]
"kste/cryptosmt" ["l"="-45.765,-34.659", "c"=282]
"muhos/ParaFROST" ["l"="-22.472,-19.16"]
"csmith-project/creduce" ["l"="-22.084,-18.599", "c"=763]
"arminbiere/gimsatul" ["l"="-22.519,-19.226"]
"GaloisInc/saw-core" ["l"="-22.373,-19.405"]
"rust-corpus/qrates" ["l"="-22.733,-19.265"]
"parasol-aser/XRust" ["l"="-22.733,-19.249"]
"sosy-lab/sv-comp" ["l"="-22.306,-19.235"]
"ultimate-pa/smtinterpol" ["l"="-22.326,-19.204"]
"jscoq/jscoq" ["l"="-22.15,-19.442"]
"udosteinberg/NOVA" ["l"="-24.951,-22.336", "c"=1051]
"diku-kmc/kleenexlang" ["l"="-21.866,-19.129"]
"dikurevy/Public-Archive" ["l"="-21.85,-19.109"]
"sosy-lab/java-common-lib" ["l"="-22.408,-19.262"]
"formosa-crypto/libjade" ["l"="-22.228,-19.529"]
"alleystoughton/EasyTeach" ["l"="-22.213,-19.531"]
"rocq-community/coqdocjs" ["l"="-22.126,-19.505"]
"ocaml-gospel/ortac" ["l"="-22.295,-19.385"]
"DSLsofMath/DSLsofMath" ["l"="-32.181,-36.495", "c"=1115]
"ths-rwth/smtrat" ["l"="-22.152,-18.892"]
"ths-rwth/carl" ["l"="-22.172,-18.899"]
"moves-rwth/pycarl" ["l"="-22.162,-18.916"]
"awslabs/s2n-bignum" ["l"="-18.856,-25.465", "c"=10]
"teyjus/teyjus" ["l"="-22.03,-19.39"]
"jats-ug/translate" ["l"="-21.849,-19.354"]
"tip-org/benchmarks" ["l"="-22.467,-19.352"]
"tip-org/tools" ["l"="-22.488,-19.356"]
"shwestrick/mpl-1brc" ["l"="-21.924,-19.212"]
"coq-io/system" ["l"="-21.972,-19.421"]
"QilinPTA/Qilin" ["l"="36.145,-0.788", "c"=1188]
"coq-io/hello-world" ["l"="-21.941,-19.425"]
"qed-solver/prover" ["l"="-22.003,-19.452"]
"qed-solver/parser" ["l"="-21.979,-19.461"]
"diku-its/its-e2022" ["l"="-21.731,-19.074"]
"ciao-lang/ciao" ["l"="-1.969,-41.44", "c"=963]
"P-H-C/phc-winner-argon2" ["l"="-9.477,-6.099", "c"=5]
"gustavoasoares/refazer" ["l"="-22.502,-19.456"]
"jfeser/L2" ["l"="-22.499,-19.476"]
"ravichugh/sketch-n-sketch" ["l"="-5.059,-41.84", "c"=333]
"urweb/urweb" ["l"="-22.035,-20.324", "c"=447]
"google/crubit" ["l"="-9.587,-6.443", "c"=5]
"flyspeck/flyspeck" ["l"="-22.179,-19.289"]
"IUCompilerCourse/Essentials-of-Compilation" ["l"="-24.959,-21.739", "c"=877]
"google/paranoid_crypto" ["l"="-45.637,-34.706", "c"=282]
"mietek/sf" ["l"="-22.084,-20.165", "c"=447]
"minirust/minirust" ["l"="-9.713,-6.489", "c"=5]
"mmcloughlin/addchain" ["l"="-18.809,13.273", "c"=173]
"microsoft/PQCrypto-SIDH" ["l"="-21.433,-24.375", "c"=1251]
"mratsim/constantine" ["l"="-18.758,12.959", "c"=173]
"lurk-lab/awesome-folding" ["l"="-18.745,12.899", "c"=173]
"arkworks-rs/algebra" ["l"="-18.856,12.915", "c"=173]
"sibylfs/sibylfs_src" ["l"="-22.034,-19.357"]
"ultimate-pa/hanfor" ["l"="-22.309,-19.215"]
"SaswatPadhi/LoopInvGen" ["l"="-22.287,-19.218"]
"SymbolicPathFinder/jpf-symbc" ["l"="36.255,-0.766", "c"=1188]
"jayhorn/jayhorn" ["l"="-22.421,-19.116"]
"psycopaths/jdart" ["l"="36.288,-0.741", "c"=1188]
"tudo-aqua/z3-turnkey" ["l"="-22.377,-19.149"]
"nuprl/10PL" ["l"="-21.959,-20.196", "c"=447]
"UpstandingHackers/hammer" ["l"="-43.031,-36.254", "c"=306]
"seL4/sel4-tutorials" ["l"="-22.588,-19.341"]
"seL4/docs" ["l"="-22.617,-19.338"]
"mitls/mitls-flex" ["l"="-22.353,-19.564"]
"cjdrake/pyeda" ["l"="-22.347,-19.017"]
"circuitgraph/circuitgraph" ["l"="-22.353,-18.977"]
"AeneasVerif/eurydice" ["l"="-22.189,-19.767"]
"moves-rwth/storm" ["l"="-22.192,-18.938"]
"prismmodelchecker/prism-games" ["l"="-22.206,-18.961"]
"moves-rwth/stormpy" ["l"="-22.175,-18.947"]
"seL4/util_libs" ["l"="-22.563,-19.323"]
"uhub/awesome-coq" ["l"="-21.932,-19.454"]
"T-Brick/c0deine" ["l"="-21.864,-19.226"]
"T-Brick/lean-wasm" ["l"="-21.832,-19.218"]
"JamesGallicchio/LeanColls" ["l"="-21.506,-19.224", "c"=752]
"hybridNeo/sel4-tee-os" ["l"="-22.647,-19.314"]
"smlnj/legacy" ["l"="-21.99,-19.294"]
"tlaplus/tlaplus" ["l"="0.874,13.68", "c"=115]
"kadena-io/juno" ["l"="-22.909,14.336", "c"=412]
"checkedc/checkedc" ["l"="-22.07,-26.189", "c"=101]
"tls-attacker/TLS-Attacker" ["l"="-11.155,-4.648", "c"=1245]
"Frama-C/Frama-C-snapshot" ["l"="-22.427,-19.483"]
"acsl-language/acsl" ["l"="-22.383,-19.446"]
"Frama-C/open-source-case-studies" ["l"="-22.451,-19.512"]
"AllanBlanchard/tutoriel_wp" ["l"="-22.399,-19.444"]
"webyrd/Barliman" ["l"="-25.031,-21.838", "c"=877]
"project-everest/everest" ["l"="-22.299,-19.505"]
"FStarLang/fstar-mode.el" ["l"="-22.318,-19.493"]
"e2email-org/e2email" ["l"="9.588,-9.366", "c"=14]
"souffle-lang/souffle" ["l"="-0.631,15.245", "c"=729]
"borisveytsman/acmart" ["l"="-52.983,-11.763", "c"=400]
"plclub/metalib" ["l"="-22.201,-19.509"]
"runtimeverification/k" ["l"="-20.105,10.97", "c"=22]
"AtsushiOhori/compiler-text" ["l"="-21.946,-19.298"]
"FStarLang/steel" ["l"="-22.302,-19.483"]
"formal-land/coq-of-rust" ["l"="-9.769,-6.586", "c"=5]
"pornin/rust-fn-dsa" ["l"="-22.253,-19.704"]
"Mtac2/Mtac2" ["l"="-22.105,-19.52"]
"UBMLtonGroup/RTMLton" ["l"="-21.909,-19.279"]
"boogie-org/sdvbench" ["l"="-22.384,-19.301"]
"psosera/myth" ["l"="-22.516,-19.505"]
"Laakeri/sharpsat-td" ["l"="-22.562,-19.084"]
"crillab/d4" ["l"="-22.545,-19.078"]
"reudismam/Refazer" ["l"="-22.518,-19.473"]
"HoTT/book" ["l"="-21.929,-20.079", "c"=447]
"biotomas/ipasir" ["l"="-22.484,-19.25"]
"briansmith/ring" ["l"="-9.997,-6.04", "c"=5]
"uwdb/Cosette" ["l"="-22.081,-19.425"]
"Mestway/Scythe" ["l"="-22.029,-19.458"]
"jscert/jscert" ["l"="-22.002,-19.479"]
"georgia-tech-db/spes" ["l"="-22.038,-19.446"]
"SJTU-IPADS/SQLSolver" ["l"="1.858,13.815", "c"=376]
"sqlancer/sqlancer" ["l"="1.924,13.522", "c"=376]
"maximedenes/native-coq" ["l"="-22.02,-19.438"]
"rntz/datafun" ["l"="-0.629,15.215", "c"=729]
"pointlander/peg" ["l"="4.582,-8.277", "c"=0]
"diku-dk/su-guides" ["l"="-21.758,-19.066"]
"brownplt/pyret-lang" ["l"="-23.53,-21.544", "c"=182]
"hypro/hypro" ["l"="-22.17,-18.869"]
"meithecatte/busycoq" ["l"="-22.03,-19.552"]
"danbriggs/Turing" ["l"="-22.006,-19.576"]
"aigarashi/PL-LectureNotes" ["l"="-21.78,-19.368"]
"kuis-isle3sw/IoPLMaterials" ["l"="-21.807,-19.362"]
"plclub/lngen" ["l"="-22.203,-19.493"]
"google/binnavi" ["l"="-42.913,-36.896", "c"=306]
"google/oss-fuzz" ["l"="-41.73,-36.282", "c"=91]
"google/honggfuzz" ["l"="-41.587,-36.28", "c"=91]
"nccgroup/featherduster" ["l"="-45.276,-34.606", "c"=282]
"guidovranken/cryptofuzz" ["l"="-41.455,-36.167", "c"=91]
"struct/mms" ["l"="-41.439,-36.37", "c"=91]
"brain-research/hol-light" ["l"="-22.306,-19.335"]
"tensorflow/fold" ["l"="46.192,27.87", "c"=277]
"tensorflow/haskell" ["l"="-20.863,-20.137", "c"=118]
"tensorflow/skflow" ["l"="47.865,28.864", "c"=89]
"tensorflow/transform" ["l"="45.596,25.695", "c"=68]
"tensorflow/profiler-ui" ["l"="57.892,23.617", "c"=161]
"google-deepmind/learning-to-learn" ["l"="47.672,28.819", "c"=89]
"KeenS/webml" ["l"="-21.885,-19.261"]
"SOSML/SOSML" ["l"="-21.918,-19.251"]
"milochristiansen/lua" ["l"="4.263,-8.288", "c"=0]
"GaloisInc/what4" ["l"="-22.43,-19.4"]
"ccz181078/Coq-BB5" ["l"="-22.085,-19.505"]
"leanprover-community/lean-auto" ["l"="-21.353,-19.163", "c"=752]
"cr-marcstevens/sha1collisiondetection" ["l"="23.749,-27.486", "c"=28]
"primaryobjects/AI-Programmer" ["l"="47.449,28.168", "c"=89]
"Mercury-Language/mercury" ["l"="-1.991,-41.411", "c"=963]
"google-deepmind/card2code" ["l"="37.549,-1.764", "c"=999]
"eprover/PyRes" ["l"="-22.435,-19.354"]
"rdaly525/coreir" ["l"="32.825,-3.457", "c"=180]
"OpenLogicProject/OpenLogic" ["l"="-21.915,-20.103", "c"=447]
"tfaoliveira/libjc" ["l"="-22.217,-19.557"]
"PrincetonUniversity/ILAng" ["l"="-22.424,-19.077"]
"PrincetonUniversity/IMDb-Archive" ["l"="-22.437,-19.048"]
"rems-project/lem" ["l"="-22.196,-19.539"]
"AndrasKovacs/smalltt" ["l"="-22.027,-20.232", "c"=447]
"DistributedComponents/verdi-chord" ["l"="-22.023,-19.342"]
"randriu/synthesis" ["l"="-22.193,-18.91"]
"prismmodelchecker/prism-benchmarks" ["l"="-22.207,-18.919"]
"imdea-software/verifying-constant-time" ["l"="-45.611,-34.816", "c"=282]
"mcmtroffaes/cddlib_old" ["l"="-22.272,-18.958"]
"Artisan-Lab/Rust-memory-safety-bugs" ["l"="-22.715,-19.172"]
"IntelLabs/flrc" ["l"="-20.604,-20.094", "c"=118]
"DQNEO/minigo" ["l"="-21.848,-23.382", "c"=496]
"maekawatoshiki/sericum" ["l"="4.439,-39.902", "c"=1133]
"prakhar1989/type-inference" ["l"="-22.173,-20.248", "c"=447]
"stanislaw/awesome-safety-critical" ["l"="23.352,-26.871", "c"=28]
"diku-dk/pmph-e2024-pub" ["l"="-21.676,-19.132"]
"diku-compSys/compSys-e2022-pub" ["l"="-21.681,-19.111"]
"hazelgrove/hazel" ["l"="-22.13,-20.161", "c"=447]
"discus-lang/iron" ["l"="-15.696,-8.461", "c"=1915]
"spacejam/tla-rust" ["l"="0.866,13.644", "c"=115]
"enzet/symbolic-execution" ["l"="-41.607,-36.141", "c"=91]
"rust-fuzz/trophy-case" ["l"="-9.666,-6.508", "c"=5]
"astampoulis/makam" ["l"="-22.179,-19.958", "c"=447]
"marcoeilers/nagini" ["l"="-22.196,-19.131"]
"dreal/dreal4" ["l"="-22.448,-19.167"]
"verivital/nnv" ["l"="38.782,-7.347", "c"=232]
"gipsyh/rIC3-HWMCC24" ["l"="-22.445,-19.107"]
"endorlabs/MIRAI" ["l"="-9.74,-6.657", "c"=5]
"diku-dk/dpp-e2024-pub" ["l"="-21.656,-19.131"]
"seL4/rumprun" ["l"="-22.645,-19.35"]
"javapathfinder/jpf-core" ["l"="36.253,-0.786", "c"=1188]
"AlloyTools/org.alloytools.alloy" ["l"="0.926,13.592", "c"=115]
"the-lambda-church/coquille" ["l"="-22.16,-19.528"]
"SRI-CSL/gllvm" ["l"="-22.062,-18.534", "c"=763]
"DeepSpec/dsss18" ["l"="-22.038,-19.484"]
"OPLSS/oplss-notes-2017" ["l"="-22.053,-19.465"]
"evdenis/verker" ["l"="-22.397,-19.424"]
"hiroshi-unno/coar" ["l"="-22.529,-19.17"]
}