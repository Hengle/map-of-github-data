digraph G {
"arunponnusamy/cvlib" -> "arunponnusamy/object-detection-opencv"
"arunponnusamy/cvlib" -> "arunponnusamy/gender-detection-keras"
"arunponnusamy/cvlib" -> "Luca96/dlib-minified-models"
"arunponnusamy/cvlib" -> "arunponnusamy/face-detection-comparison"
"arunponnusamy/cvlib" -> "augmentedstartups/AS-One" ["e"=1]
"arunponnusamy/cvlib" -> "ipazc/mtcnn"
"davisking/dlib" -> "cmusatyalab/openface"
"davisking/dlib" -> "davidsandberg/facenet"
"davisking/dlib" -> "ShiqiYu/libfacedetection"
"davisking/dlib" -> "TadasBaltrusaitis/OpenFace"
"davisking/dlib" -> "ageitgey/face_recognition"
"davisking/dlib" -> "BVLC/caffe" ["e"=1]
"davisking/dlib" -> "CMU-Perceptual-Computing-Lab/openpose" ["e"=1]
"davisking/dlib" -> "mlpack/mlpack" ["e"=1]
"davisking/dlib" -> "davisking/dlib-models"
"davisking/dlib" -> "opencv/opencv_contrib" ["e"=1]
"davisking/dlib" -> "Tencent/ncnn" ["e"=1]
"davisking/dlib" -> "pjreddie/darknet" ["e"=1]
"davisking/dlib" -> "tiny-dnn/tiny-dnn" ["e"=1]
"davisking/dlib" -> "seetaface/SeetaFaceEngine"
"davisking/dlib" -> "opencv/opencv" ["e"=1]
"vipstone/faceai" -> "ageitgey/face_recognition"
"vipstone/faceai" -> "coneypo/Dlib_face_recognition_from_camera"
"vipstone/faceai" -> "jackzhenguo/python-small-examples" ["e"=1]
"vipstone/faceai" -> "Kr1s77/awesome-python-login-model" ["e"=1]
"vipstone/faceai" -> "apachecn/ailearning" ["e"=1]
"vipstone/faceai" -> "imhuay/Algorithm_Interview_Notes-Chinese" ["e"=1]
"vipstone/faceai" -> "scutan90/DeepLearning-500-questions" ["e"=1]
"vipstone/faceai" -> "ShiqiYu/libfacedetection"
"vipstone/faceai" -> "davidsandberg/facenet"
"vipstone/faceai" -> "facert/awesome-spider" ["e"=1]
"vipstone/faceai" -> "Jack-Cherish/python-spider" ["e"=1]
"vipstone/faceai" -> "MLEveryday/100-Days-Of-ML-Code" ["e"=1]
"vipstone/faceai" -> "oarriaga/face_classification" ["e"=1]
"vipstone/faceai" -> "0voice/interview_internal_reference" ["e"=1]
"vipstone/faceai" -> "qiurunze123/miaosha" ["e"=1]
"mahyarnajibi/SSH" -> "sfzhang15/SFD"
"mahyarnajibi/SSH" -> "zeusees/FaceBoxes"
"mahyarnajibi/SSH" -> "peiyunh/tiny"
"mahyarnajibi/SSH" -> "wy1iu/sphereface"
"mahyarnajibi/SSH" -> "liuyuisanai/RSA-for-object-detection"
"mahyarnajibi/SSH" -> "kpzhang93/MTCNN_face_detection_alignment"
"mahyarnajibi/SSH" -> "Rock-100/FaceKit"
"mahyarnajibi/SSH" -> "AlphaQi/MTCNN-light"
"mahyarnajibi/SSH" -> "happynear/NormFace"
"mahyarnajibi/SSH" -> "wywu/LAB"
"mahyarnajibi/SSH" -> "Seanlinx/mtcnn"
"mahyarnajibi/SSH" -> "CongWeilin/mtcnn-caffe"
"mahyarnajibi/SSH" -> "dlunion/mtcnn"
"mahyarnajibi/SSH" -> "ydwen/caffe-face"
"mahyarnajibi/SSH" -> "Tencent/FaceDetection-DSFD"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "ayushreal/Signature-recognition"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "K-G-PRAJWAL/Python-Projects"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "surajsinghbisht054/Python-Media-Player"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "kishanrajput23/Jarvis-Desktop-Voice-Assistant" ["e"=1]
"shubhamkumar27/Face_recognition_based_attendance_system" -> "CT83/SmoothStream"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "sharmaji27/face-recognition-based-attendance-system"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "Kalebu/Website-blocker-python"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "aashishpeepra/whatsapp-live-cricket-bot"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "kmhmubin/Face-Recognition-Attendance-System"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "Kalebu/Python-Speech-Recognition-"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "Spidy20/Attendace_management_system"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "Vatshayan/Live-Chatbot-for-Final-Year-Project" ["e"=1]
"shubhamkumar27/Face_recognition_based_attendance_system" -> "praveenkumarsrivas/Jarvis-AI-using-python3-"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "venugopalkadamba/Face_Verification_based_Attendance_system"
"shubhamkumar27/Face_recognition_based_attendance_system" -> "Kalebu/Plagiarism-checker-Python"
"ChanChiChoi/awesome-Face_Recognition" -> "ZhaoJ9014/face.evoLVe"
"ChanChiChoi/awesome-Face_Recognition" -> "1adrianb/face-alignment"
"ChanChiChoi/awesome-Face_Recognition" -> "polarisZhao/awesome-face"
"ChanChiChoi/awesome-Face_Recognition" -> "TreB1eN/InsightFace_Pytorch"
"ChanChiChoi/awesome-Face_Recognition" -> "JDAI-CV/FaceX-Zoo"
"ChanChiChoi/awesome-Face_Recognition" -> "yfeng95/PRNet" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "Tencent/FaceDetection-DSFD"
"ChanChiChoi/awesome-Face_Recognition" -> "biubug6/Pytorch_Retinaface"
"ChanChiChoi/awesome-Face_Recognition" -> "cleardusk/3DDFA" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "davidsandberg/facenet"
"ChanChiChoi/awesome-Face_Recognition" -> "amusi/awesome-object-detection" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "ronghuaiyang/arcface-pytorch"
"ChanChiChoi/awesome-Face_Recognition" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"ChanChiChoi/awesome-Face_Recognition" -> "yfeng95/face3d" ["e"=1]
"kmhmubin/Face-Recognition-Attendance-System" -> "ashishdubey10/Face-Recognition-Based-Attendance-System"
"kmhmubin/Face-Recognition-Attendance-System" -> "nevilparmar11/Attendance-Management-System-Using-Face-Recognition"
"kmhmubin/Face-Recognition-Attendance-System" -> "Spidy20/Attendace_management_system"
"kmhmubin/Face-Recognition-Attendance-System" -> "Patelrahul4884/Attendance-Management-system-using-face-recognition"
"kmhmubin/Face-Recognition-Attendance-System" -> "venugopalkadamba/Face_Verification_based_Attendance_system"
"kmhmubin/Face-Recognition-Attendance-System" -> "shubamwalia/Face-Recognition-Attendance-System"
"kmhmubin/Face-Recognition-Attendance-System" -> "shubhamkumar27/Face_recognition_based_attendance_system"
"kmhmubin/Face-Recognition-Attendance-System" -> "rishabh-karmakar/Facial-Recognition-Based-Attendance-System" ["e"=1]
"kmhmubin/Face-Recognition-Attendance-System" -> "shashankch292/Face-Detection-Recognition-Based-Attendance-System"
"kmhmubin/Face-Recognition-Attendance-System" -> "sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition"
"kmhmubin/Face-Recognition-Attendance-System" -> "sonu275981/Face-Recognition-Attendance-System"
"kmhmubin/Face-Recognition-Attendance-System" -> "satinder147/Attendance-using-Face"
"kmhmubin/Face-Recognition-Attendance-System" -> "ShubhamSonkesriya/Face-Recognition-Attendance-System"
"kmhmubin/Face-Recognition-Attendance-System" -> "GraphtyLove/Face-recognition-project"
"kmhmubin/Face-Recognition-Attendance-System" -> "joeVenner/FaceRecognition-GUI-APP"
"ipazc/mtcnn" -> "AITTSMD/MTCNN-Tensorflow"
"ipazc/mtcnn" -> "kpzhang93/MTCNN_face_detection_alignment"
"ipazc/mtcnn" -> "timesler/facenet-pytorch"
"ipazc/mtcnn" -> "davidsandberg/facenet"
"ipazc/mtcnn" -> "biubug6/Pytorch_Retinaface"
"ipazc/mtcnn" -> "ZhaoJ9014/face.evoLVe"
"ipazc/mtcnn" -> "1adrianb/face-alignment"
"ipazc/mtcnn" -> "TropComplique/mtcnn-pytorch"
"ipazc/mtcnn" -> "ChanChiChoi/awesome-Face_Recognition"
"ipazc/mtcnn" -> "Tencent/FaceDetection-DSFD"
"ipazc/mtcnn" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"ipazc/mtcnn" -> "rcmalli/keras-vggface"
"ipazc/mtcnn" -> "shanren7/real_time_face_recognition"
"ipazc/mtcnn" -> "natanielruiz/deep-head-pose"
"ipazc/mtcnn" -> "cleardusk/3DDFA" ["e"=1]
"ronghuaiyang/arcface-pytorch" -> "TreB1eN/InsightFace_Pytorch"
"ronghuaiyang/arcface-pytorch" -> "wujiyang/Face_Pytorch"
"ronghuaiyang/arcface-pytorch" -> "biubug6/Pytorch_Retinaface"
"ronghuaiyang/arcface-pytorch" -> "ZhaoJ9014/face.evoLVe"
"ronghuaiyang/arcface-pytorch" -> "MuggleWang/CosFace_pytorch"
"ronghuaiyang/arcface-pytorch" -> "timesler/facenet-pytorch"
"ronghuaiyang/arcface-pytorch" -> "wy1iu/sphereface"
"ronghuaiyang/arcface-pytorch" -> "JDAI-CV/FaceX-Zoo"
"ronghuaiyang/arcface-pytorch" -> "clcarwin/sphereface_pytorch"
"ronghuaiyang/arcface-pytorch" -> "siriusdemon/Build-Your-Own-Face-Model"
"ronghuaiyang/arcface-pytorch" -> "ChanChiChoi/awesome-Face_Recognition"
"ronghuaiyang/arcface-pytorch" -> "HuangYG123/CurricularFace"
"ronghuaiyang/arcface-pytorch" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"ronghuaiyang/arcface-pytorch" -> "KaiyangZhou/pytorch-center-loss"
"ronghuaiyang/arcface-pytorch" -> "michuanhaohao/reid-strong-baseline" ["e"=1]
"deepinsight/insightface" -> "davidsandberg/facenet"
"deepinsight/insightface" -> "open-mmlab/mmdetection" ["e"=1]
"deepinsight/insightface" -> "serengil/deepface"
"deepinsight/insightface" -> "Tencent/ncnn" ["e"=1]
"deepinsight/insightface" -> "ageitgey/face_recognition"
"deepinsight/insightface" -> "huggingface/pytorch-image-models" ["e"=1]
"deepinsight/insightface" -> "1adrianb/face-alignment"
"deepinsight/insightface" -> "ShiqiYu/libfacedetection"
"deepinsight/insightface" -> "facebookresearch/detectron2" ["e"=1]
"deepinsight/insightface" -> "ChanChiChoi/awesome-Face_Recognition"
"deepinsight/insightface" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"deepinsight/insightface" -> "AlexeyAB/darknet" ["e"=1]
"deepinsight/insightface" -> "biubug6/Pytorch_Retinaface"
"deepinsight/insightface" -> "CMU-Perceptual-Computing-Lab/openpose" ["e"=1]
"deepinsight/insightface" -> "facebookresearch/segment-anything" ["e"=1]
"Mjrovai/OpenCV-Face-Recognition" -> "Mjrovai/OpenCV-Object-Face-Tracking"
"Mjrovai/OpenCV-Face-Recognition" -> "informramiz/opencv-face-recognition-python"
"Mjrovai/OpenCV-Face-Recognition" -> "neha01/FaceRecognition"
"Mjrovai/OpenCV-Face-Recognition" -> "jerry1900/faceRecognition"
"Mjrovai/OpenCV-Face-Recognition" -> "kmhmubin/Face-Recognition-Attendance-System"
"Mjrovai/OpenCV-Face-Recognition" -> "coneypo/Dlib_face_recognition_from_camera"
"Mjrovai/OpenCV-Face-Recognition" -> "seathiefwang/FaceRecognition-tensorflow"
"Mjrovai/OpenCV-Face-Recognition" -> "makelove/OpenCV-Python-Tutorial" ["e"=1]
"Mjrovai/OpenCV-Face-Recognition" -> "ChanChiChoi/awesome-Face_Recognition"
"Mjrovai/OpenCV-Face-Recognition" -> "shanren7/real_time_face_recognition"
"Mjrovai/OpenCV-Face-Recognition" -> "joeVenner/FaceRecognition-GUI-APP"
"Mjrovai/OpenCV-Face-Recognition" -> "abidrahmank/OpenCV2-Python-Tutorials" ["e"=1]
"Mjrovai/OpenCV-Face-Recognition" -> "arunponnusamy/object-detection-opencv"
"Mjrovai/OpenCV-Face-Recognition" -> "hamuchiwa/AutoRCCar" ["e"=1]
"Mjrovai/OpenCV-Face-Recognition" -> "thecodacus/Face-Recognition"
"1adrianb/face-alignment" -> "yfeng95/PRNet" ["e"=1]
"1adrianb/face-alignment" -> "cleardusk/3DDFA" ["e"=1]
"1adrianb/face-alignment" -> "yfeng95/face3d" ["e"=1]
"1adrianb/face-alignment" -> "TadasBaltrusaitis/OpenFace"
"1adrianb/face-alignment" -> "cleardusk/3DDFA_V2" ["e"=1]
"1adrianb/face-alignment" -> "ChanChiChoi/awesome-Face_Recognition"
"1adrianb/face-alignment" -> "microsoft/Deep3DFaceReconstruction" ["e"=1]
"1adrianb/face-alignment" -> "1adrianb/2D-and-3D-face-alignment" ["e"=1]
"1adrianb/face-alignment" -> "zllrunning/face-parsing.PyTorch" ["e"=1]
"1adrianb/face-alignment" -> "patrikhuber/eos" ["e"=1]
"1adrianb/face-alignment" -> "davidsandberg/facenet"
"1adrianb/face-alignment" -> "kpzhang93/MTCNN_face_detection_alignment"
"1adrianb/face-alignment" -> "yfeng95/DECA" ["e"=1]
"1adrianb/face-alignment" -> "ZhaoJ9014/face.evoLVe"
"1adrianb/face-alignment" -> "deepinsight/insightface"
"coneypo/Dlib_face_recognition_from_camera" -> "jerry1900/faceRecognition"
"coneypo/Dlib_face_recognition_from_camera" -> "seathiefwang/FaceRecognition-tensorflow"
"coneypo/Dlib_face_recognition_from_camera" -> "winterssy/face_recognition_py"
"coneypo/Dlib_face_recognition_from_camera" -> "kuaikuaikim/dface"
"coneypo/Dlib_face_recognition_from_camera" -> "inspurer/WorkAttendanceSystem"
"coneypo/Dlib_face_recognition_from_camera" -> "vipstone/faceai"
"coneypo/Dlib_face_recognition_from_camera" -> "kongqw/OpenCVForAndroid"
"coneypo/Dlib_face_recognition_from_camera" -> "luanshiyinyang/FacialExpressionRecognition" ["e"=1]
"coneypo/Dlib_face_recognition_from_camera" -> "chenlinzhong/face-login"
"coneypo/Dlib_face_recognition_from_camera" -> "66pig/face_recognition"
"coneypo/Dlib_face_recognition_from_camera" -> "windzu/facenet_facerecognition"
"coneypo/Dlib_face_recognition_from_camera" -> "fuzheng0301/FaceRecognition" ["e"=1]
"coneypo/Dlib_face_recognition_from_camera" -> "eai2x/Face-Recognition-Class-Attendance-System"
"coneypo/Dlib_face_recognition_from_camera" -> "yeziyang1992/Face_Recognition_Client"
"coneypo/Dlib_face_recognition_from_camera" -> "MrZhousf/tf_facenet"
"Tencent/FaceDetection-DSFD" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"Tencent/FaceDetection-DSFD" -> "kpzhang93/MTCNN_face_detection_alignment"
"Tencent/FaceDetection-DSFD" -> "biubug6/Pytorch_Retinaface"
"Tencent/FaceDetection-DSFD" -> "Star-Clouds/CenterFace"
"Tencent/FaceDetection-DSFD" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"Tencent/FaceDetection-DSFD" -> "zuoqing1988/ZQCNN"
"Tencent/FaceDetection-DSFD" -> "ZhaoJ9014/face.evoLVe"
"Tencent/FaceDetection-DSFD" -> "ChanChiChoi/awesome-Face_Recognition"
"Tencent/FaceDetection-DSFD" -> "AITTSMD/MTCNN-Tensorflow"
"Tencent/FaceDetection-DSFD" -> "ShiqiYu/libfacedetection"
"Tencent/FaceDetection-DSFD" -> "TreB1eN/InsightFace_Pytorch"
"Tencent/FaceDetection-DSFD" -> "biubug6/Face-Detector-1MB-with-landmark"
"Tencent/FaceDetection-DSFD" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"Tencent/FaceDetection-DSFD" -> "mahyarnajibi/SSH"
"Tencent/FaceDetection-DSFD" -> "wywu/LAB"
"ammarmahmood1999/HeartHealthPrediction" -> "ayushreal/Signature-recognition"
"zhu260824/face_ncnn" -> "YuGongCharley/MTCNN_facenet_Android"
"winterssy/face_recognition_py" -> "jerry1900/faceRecognition"
"winterssy/face_recognition_py" -> "coneypo/Dlib_face_recognition_from_camera"
"winterssy/face_recognition_py" -> "yeziyang1992/Face_Recognition_Client"
"winterssy/face_recognition_py" -> "inspurer/WorkAttendanceSystem"
"winterssy/face_recognition_py" -> "seathiefwang/FaceRecognition-tensorflow"
"winterssy/face_recognition_py" -> "66pig/face_recognition"
"winterssy/face_recognition_py" -> "windzu/facenet_facerecognition"
"winterssy/face_recognition_py" -> "douxiao/detect_face_pyqt5" ["e"=1]
"winterssy/face_recognition_py" -> "kuaikuaikim/dface"
"winterssy/face_recognition_py" -> "kongqw/OpenCVForAndroid"
"winterssy/face_recognition_py" -> "eai2x/Face-Recognition-Class-Attendance-System"
"winterssy/face_recognition_py" -> "coderXuXiang/Face_Recognition"
"winterssy/face_recognition_py" -> "bubbliiiing/keras-face-recognition" ["e"=1]
"winterssy/face_recognition_py" -> "hirohe/facerec-python" ["e"=1]
"winterssy/face_recognition_py" -> "vipstone/faceai"
"facebookresearch/supervision-by-registration" -> "D-X-Y/landmark-detection"
"facebookresearch/supervision-by-registration" -> "wywu/LAB"
"facebookresearch/supervision-by-registration" -> "guoqiangqi/PFLD"
"facebookresearch/supervision-by-registration" -> "610265158/Peppa_Pig_Face_Landmark"
"facebookresearch/supervision-by-registration" -> "MarekKowalski/DeepAlignmentNetwork"
"facebookresearch/supervision-by-registration" -> "HRNet/HRNet-Facial-Landmark-Detection"
"facebookresearch/supervision-by-registration" -> "cleardusk/3DDFA" ["e"=1]
"facebookresearch/supervision-by-registration" -> "protossw512/AdaptiveWingLoss"
"facebookresearch/supervision-by-registration" -> "1adrianb/2D-and-3D-face-alignment" ["e"=1]
"facebookresearch/supervision-by-registration" -> "polarisZhao/PFLD-pytorch"
"facebookresearch/supervision-by-registration" -> "610265158/face_landmark"
"facebookresearch/supervision-by-registration" -> "Star-Clouds/CenterFace"
"facebookresearch/supervision-by-registration" -> "Rock-100/FaceKit"
"facebookresearch/supervision-by-registration" -> "mrgloom/Face-landmarks-detection-benchmark"
"facebookresearch/supervision-by-registration" -> "patrikhuber/eos" ["e"=1]
"610265158/face_landmark" -> "610265158/Peppa_Pig_Face_Landmark"
"610265158/face_landmark" -> "guoqiangqi/PFLD"
"610265158/face_landmark" -> "protossw512/AdaptiveWingLoss"
"610265158/face_landmark" -> "JACKYLUO1991/106-landmarks-dataset"
"610265158/face_landmark" -> "Hsintao/pfld_106_face_landmarks"
"610265158/face_landmark" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"610265158/face_landmark" -> "610265158/DSFD-tensorflow"
"610265158/face_landmark" -> "610265158/faceboxes-tensorflow"
"610265158/face_landmark" -> "mrgloom/Face-landmarks-detection-benchmark"
"610265158/face_landmark" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"610265158/face_landmark" -> "polarisZhao/PFLD-pytorch"
"610265158/face_landmark" -> "TheSouthFrog/stylealign"
"610265158/face_landmark" -> "wywu/LAB"
"610265158/face_landmark" -> "610265158/face_landmark_pytorch"
"610265158/face_landmark" -> "hanson-young/nniefacelib"
"xindongzhang/MNN-APPLICATIONS" -> "MirrorYuChen/mnn_example"
"xindongzhang/MNN-APPLICATIONS" -> "apxlwl/MNN-yolov3"
"xindongzhang/MNN-APPLICATIONS" -> "Star-Clouds/CenterFace"
"xindongzhang/MNN-APPLICATIONS" -> "Charrin/RetinaFace-Cpp"
"xindongzhang/MNN-APPLICATIONS" -> "hanson-young/nniefacelib"
"xindongzhang/MNN-APPLICATIONS" -> "alibaba/MNNKit"
"xindongzhang/MNN-APPLICATIONS" -> "MirrorYuChen/ncnn_example"
"xindongzhang/MNN-APPLICATIONS" -> "biubug6/Face-Detector-1MB-with-landmark"
"xindongzhang/MNN-APPLICATIONS" -> "SyGoing/LFFD-MNN"
"xindongzhang/MNN-APPLICATIONS" -> "guoqiangqi/PFLD"
"xindongzhang/MNN-APPLICATIONS" -> "moli232777144/mtcnn_ncnn"
"xindongzhang/MNN-APPLICATIONS" -> "zuoqing1988/ZQCNN"
"xindongzhang/MNN-APPLICATIONS" -> "zeusees/HyperFT"
"xindongzhang/MNN-APPLICATIONS" -> "moli232777144/mobilefacenet-mxnet"
"xindongzhang/MNN-APPLICATIONS" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"timesler/facenet-pytorch" -> "ZhaoJ9014/face.evoLVe"
"timesler/facenet-pytorch" -> "davidsandberg/facenet"
"timesler/facenet-pytorch" -> "TreB1eN/InsightFace_Pytorch"
"timesler/facenet-pytorch" -> "ronghuaiyang/arcface-pytorch"
"timesler/facenet-pytorch" -> "biubug6/Pytorch_Retinaface"
"timesler/facenet-pytorch" -> "ipazc/mtcnn"
"timesler/facenet-pytorch" -> "ChanChiChoi/awesome-Face_Recognition"
"timesler/facenet-pytorch" -> "1adrianb/face-alignment"
"timesler/facenet-pytorch" -> "JDAI-CV/FaceX-Zoo"
"timesler/facenet-pytorch" -> "serengil/deepface"
"timesler/facenet-pytorch" -> "deepinsight/insightface"
"timesler/facenet-pytorch" -> "lukemelas/EfficientNet-PyTorch" ["e"=1]
"timesler/facenet-pytorch" -> "zllrunning/face-parsing.PyTorch" ["e"=1]
"timesler/facenet-pytorch" -> "Cadene/pretrained-models.pytorch" ["e"=1]
"timesler/facenet-pytorch" -> "cydonia999/VGGFace2-pytorch"
"bnu-wangxun/Deep_Metric" -> "Confusezius/Deep-Metric-Learning-Baselines"
"bnu-wangxun/Deep_Metric" -> "msight-tech/research-ms-loss"
"bnu-wangxun/Deep_Metric" -> "kdhht2334/Survey_of_Deep_Metric_Learning"
"bnu-wangxun/Deep_Metric" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"bnu-wangxun/Deep_Metric" -> "msight-tech/research-xbm"
"bnu-wangxun/Deep_Metric" -> "ronekko/deep_metric_learning"
"bnu-wangxun/Deep_Metric" -> "dichotomies/proxy-nca"
"bnu-wangxun/Deep_Metric" -> "KevinMusgrave/powerful-benchmarker"
"bnu-wangxun/Deep_Metric" -> "KevinMusgrave/pytorch-metric-learning" ["e"=1]
"bnu-wangxun/Deep_Metric" -> "rksltnl/Deep-Metric-Learning-CVPR16"
"bnu-wangxun/Deep_Metric" -> "Confusezius/ICCV2019_MIC"
"bnu-wangxun/Deep_Metric" -> "CompVis/metric-learning-divide-and-conquer"
"bnu-wangxun/Deep_Metric" -> "filipradenovic/cnnimageretrieval-pytorch" ["e"=1]
"bnu-wangxun/Deep_Metric" -> "scikit-learn-contrib/metric-learn"
"bnu-wangxun/Deep_Metric" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"scikit-learn-contrib/metric-learn" -> "bnu-wangxun/Deep_Metric"
"scikit-learn-contrib/metric-learn" -> "Confusezius/Deep-Metric-Learning-Baselines"
"scikit-learn-contrib/metric-learn" -> "KevinMusgrave/pytorch-metric-learning" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/category_encoders" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "msight-tech/research-ms-loss"
"scikit-learn-contrib/metric-learn" -> "jlsuarezdiaz/pyDML"
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/boruta_py" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/imbalanced-learn" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/hdbscan" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/DESlib" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "benhamner/Metrics" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/skope-rules" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "kdhht2334/Survey_of_Deep_Metric_Learning"
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/sklearn-pandas" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "rksltnl/Deep-Metric-Learning-CVPR16"
"inspurer/WorkAttendanceSystem" -> "66pig/face_recognition"
"inspurer/WorkAttendanceSystem" -> "eai2x/Face-Recognition-Class-Attendance-System"
"inspurer/WorkAttendanceSystem" -> "coneypo/Dlib_face_recognition_from_camera"
"inspurer/WorkAttendanceSystem" -> "waiterxiaoyy/waiter-facerecognition-python"
"inspurer/WorkAttendanceSystem" -> "winterssy/face_recognition_py"
"inspurer/WorkAttendanceSystem" -> "king-xw/Face_Recogntion"
"inspurer/WorkAttendanceSystem" -> "liqq1228/python-opencv"
"inspurer/WorkAttendanceSystem" -> "chenlinzhong/face-login"
"inspurer/WorkAttendanceSystem" -> "yeziyang1992/Face_Recognition_Client"
"inspurer/WorkAttendanceSystem" -> "reece15/cnn_face_detection"
"inspurer/WorkAttendanceSystem" -> "windzu/facenet_facerecognition"
"inspurer/WorkAttendanceSystem" -> "jerry1900/faceRecognition"
"inspurer/WorkAttendanceSystem" -> "hirohe/facerec-python" ["e"=1]
"inspurer/WorkAttendanceSystem" -> "librahfacebook/Face"
"inspurer/WorkAttendanceSystem" -> "hualuoo/dormitory_menage_system"
"yl-1993/learn-to-cluster" -> "Zhongdao/gcn_clustering"
"yl-1993/learn-to-cluster" -> "XiaohangZhan/cdp"
"yl-1993/learn-to-cluster" -> "xiaoxiong74/face-cluster-by-infomap"
"yl-1993/learn-to-cluster" -> "makarandtapaswi/BallClustering_ICCV2019"
"yl-1993/learn-to-cluster" -> "yl-1993/hfsoftmax"
"yl-1993/learn-to-cluster" -> "sstzal/STAR-FC"
"yl-1993/learn-to-cluster" -> "varun-suresh/Clustering"
"yl-1993/learn-to-cluster" -> "XiaohangZhan/face_recognition_framework"
"yl-1993/learn-to-cluster" -> "wujiyang/Face_Pytorch"
"yl-1993/learn-to-cluster" -> "cavalleria/cavaface"
"yl-1993/learn-to-cluster" -> "TreB1eN/InsightFace_Pytorch"
"yl-1993/learn-to-cluster" -> "JDAI-CV/FaceX-Zoo"
"yl-1993/learn-to-cluster" -> "Tencent/TFace"
"yl-1993/learn-to-cluster" -> "seasonSH/Probabilistic-Face-Embeddings"
"yl-1993/learn-to-cluster" -> "ronghuaiyang/arcface-pytorch"
"yinguobing/head-pose-estimation" -> "natanielruiz/deep-head-pose"
"yinguobing/head-pose-estimation" -> "lincolnhard/head-pose-estimation"
"yinguobing/head-pose-estimation" -> "yinguobing/cnn-facial-landmark"
"yinguobing/head-pose-estimation" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"yinguobing/head-pose-estimation" -> "mpatacchiola/deepgaze"
"yinguobing/head-pose-estimation" -> "shamangary/FSA-Net"
"yinguobing/head-pose-estimation" -> "WIKI2020/FacePose_pytorch"
"yinguobing/head-pose-estimation" -> "qiexing/face-landmark-localization"
"yinguobing/head-pose-estimation" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"yinguobing/head-pose-estimation" -> "thohemp/6DRepNet"
"yinguobing/head-pose-estimation" -> "wywu/LAB"
"yinguobing/head-pose-estimation" -> "jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV"
"yinguobing/head-pose-estimation" -> "guoqiangqi/PFLD"
"yinguobing/head-pose-estimation" -> "TadasBaltrusaitis/OpenFace"
"yinguobing/head-pose-estimation" -> "stevenyangyj/deep-head-pose-lite"
"akshaybahadur21/Facial-Recognition-using-Facenet" -> "TheAnkurGoswami/Face-Recognition-using-FaceNet"
"akshaybahadur21/Facial-Recognition-using-Facenet" -> "R4j4n/Face-recognition-Using-Facenet-On-Tensorflow-2.X"
"akshaybahadur21/Facial-Recognition-using-Facenet" -> "AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow"
"akshaybahadur21/Facial-Recognition-using-Facenet" -> "krasserm/face-recognition"
"akshaybahadur21/Facial-Recognition-using-Facenet" -> "akshaybahadur21/Emojinator"
"akshaybahadur21/Facial-Recognition-using-Facenet" -> "akshaybahadur21/HandMovementTracking"
"akshaybahadur21/Facial-Recognition-using-Facenet" -> "Skuldur/facenet-face-recognition"
"akshaybahadur21/Facial-Recognition-using-Facenet" -> "vsyw/Keras-OpenFace"
"akshaybahadur21/Facial-Recognition-using-Facenet" -> "akshaybahadur21/Autopilot" ["e"=1]
"akshaybahadur21/Facial-Recognition-using-Facenet" -> "arsfutura/face-recognition"
"SpikeKing/triplet-loss-mnist" -> "omoindrot/tensorflow-triplet-loss"
"SpikeKing/triplet-loss-mnist" -> "alfonmedela/triplet-loss-pytorch"
"SpikeKing/triplet-loss-mnist" -> "chencodeX/triplet-loss-pytorch"
"SpikeKing/triplet-loss-mnist" -> "SpikeKing/triplet-loss-gluon"
"blankWorld/MTCNN-Accelerate-Onet" -> "CongWeilin/mtcnn-caffe"
"blankWorld/MTCNN-Accelerate-Onet" -> "dlunion/mtcnn"
"blankWorld/MTCNN-Accelerate-Onet" -> "xialuxi/arcface-caffe"
"blankWorld/MTCNN-Accelerate-Onet" -> "szad670401/Fast-MTCNN"
"blankWorld/MTCNN-Accelerate-Onet" -> "honghuCode/mobileFacenet-ncnn"
"blankWorld/MTCNN-Accelerate-Onet" -> "lsy17096535/faceboxes"
"blankWorld/MTCNN-Accelerate-Onet" -> "zeusees/FaceBoxes"
"blankWorld/MTCNN-Accelerate-Onet" -> "luoyetx/Joint-Face-Detection-and-Alignment"
"blankWorld/MTCNN-Accelerate-Onet" -> "ElegantGod/ncnn"
"blankWorld/MTCNN-Accelerate-Onet" -> "panda-lab/ncnn-vs2013"
"blankWorld/MTCNN-Accelerate-Onet" -> "liuyuisanai/RSA-for-object-detection"
"blankWorld/MTCNN-Accelerate-Onet" -> "HolmesShuan/ShuffleNet-An-Extremely-Efficient-CNN-for-Mobile-Devices-Caffe-Reimplementation" ["e"=1]
"blankWorld/MTCNN-Accelerate-Onet" -> "happynear/MTCNN_face_detection_alignment"
"blankWorld/MTCNN-Accelerate-Onet" -> "AlphaQi/MTCNN-light"
"blankWorld/MTCNN-Accelerate-Onet" -> "olojuwin/facerecognize-for-mobile-phone"
"natanielruiz/deep-head-pose" -> "shamangary/FSA-Net"
"natanielruiz/deep-head-pose" -> "yinguobing/head-pose-estimation"
"natanielruiz/deep-head-pose" -> "stevenyangyj/deep-head-pose-lite"
"natanielruiz/deep-head-pose" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"natanielruiz/deep-head-pose" -> "mpatacchiola/deepgaze"
"natanielruiz/deep-head-pose" -> "lincolnhard/head-pose-estimation"
"natanielruiz/deep-head-pose" -> "cleardusk/3DDFA" ["e"=1]
"natanielruiz/deep-head-pose" -> "thohemp/6DRepNet"
"natanielruiz/deep-head-pose" -> "polarisZhao/PFLD-pytorch"
"natanielruiz/deep-head-pose" -> "swook/GazeML" ["e"=1]
"natanielruiz/deep-head-pose" -> "biubug6/Pytorch_Retinaface"
"natanielruiz/deep-head-pose" -> "yfeng95/PRNet" ["e"=1]
"natanielruiz/deep-head-pose" -> "vitoralbiero/img2pose"
"natanielruiz/deep-head-pose" -> "hysts/pytorch_mpiigaze" ["e"=1]
"natanielruiz/deep-head-pose" -> "Tobias-Fischer/rt_gene" ["e"=1]
"moli232777144/mtcnn_ncnn" -> "ElegantGod/ncnn"
"moli232777144/mtcnn_ncnn" -> "dlunion/mtcnn"
"moli232777144/mtcnn_ncnn" -> "CongWeilin/mtcnn-caffe"
"moli232777144/mtcnn_ncnn" -> "AlphaQi/MTCNN-light"
"moli232777144/mtcnn_ncnn" -> "Longqi-S/ncnn-mtcnn"
"moli232777144/mtcnn_ncnn" -> "moli232777144/mobilefacenet-mxnet"
"moli232777144/mtcnn_ncnn" -> "MirrorYuChen/ncnn_example"
"moli232777144/mtcnn_ncnn" -> "honghuCode/mobileFacenet-ncnn"
"moli232777144/mtcnn_ncnn" -> "imistyrain/MTCNN"
"moli232777144/mtcnn_ncnn" -> "Seanlinx/mtcnn"
"moli232777144/mtcnn_ncnn" -> "dangbo/ncnn-mobile"
"moli232777144/mtcnn_ncnn" -> "panda-lab/face-landmark"
"moli232777144/mtcnn_ncnn" -> "starimeL/PytorchConverter" ["e"=1]
"moli232777144/mtcnn_ncnn" -> "zuoqing1988/ZQCNN"
"moli232777144/mtcnn_ncnn" -> "happynear/MTCNN_face_detection_alignment"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "aditya-vora/FCHD-Fully-Convolutional-Head-Detector"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "pranoyr/head-detection-using-yolo"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "aosokin/cnn_head_detection"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "njvisionpower/Safety-Helmet-Wearing-Dataset"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "wujixiu/helmet-detection"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "Star-Clouds/CenterFace"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "Charrin/RetinaFace-Cpp"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "gjy3035/C-3-Framework" ["e"=1]
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "biubug6/Face-Detector-1MB-with-landmark"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "becauseofAI/lffd-pytorch"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "Sentient07/HeadHunter"
"TingsongYu/cascaded_mobilenet-v2" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"TingsongYu/cascaded_mobilenet-v2" -> "CongWeilin/mtcnn-caffe"
"TingsongYu/cascaded_mobilenet-v2" -> "moli232777144/mobilefacenet-mxnet"
"TingsongYu/cascaded_mobilenet-v2" -> "zuoqing1988/train-mtcnn"
"TingsongYu/cascaded_mobilenet-v2" -> "panda-lab/face-landmark"
"TingsongYu/cascaded_mobilenet-v2" -> "farmingyard/caffe-mobilenet" ["e"=1]
"xialuxi/arcface-caffe" -> "gehaocool/CombinedMargin-caffe"
"xialuxi/arcface-caffe" -> "happynear/AMSoftmax"
"xialuxi/arcface-caffe" -> "zhanglaplace/MobileFaceNet"
"xialuxi/arcface-caffe" -> "GarrickLin/MXNet2Caffe"
"xialuxi/arcface-caffe" -> "blankWorld/MTCNN-Accelerate-Onet"
"xialuxi/arcface-caffe" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"xialuxi/arcface-caffe" -> "zeusees/FaceBoxes"
"xialuxi/arcface-caffe" -> "cypw/MXNet2Caffe"
"xialuxi/arcface-caffe" -> "xialuxi/AMSoftmax"
"xialuxi/arcface-caffe" -> "wy1iu/sphereface-plus"
"xialuxi/arcface-caffe" -> "Charrin/RetinaFace-Cpp"
"xialuxi/arcface-caffe" -> "olojuwin/facerecognize-for-mobile-phone"
"xialuxi/arcface-caffe" -> "ydwen/caffe-face"
"xialuxi/arcface-caffe" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"xialuxi/arcface-caffe" -> "wy1iu/sphereface"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "nwesem/mtcnn_facenet_cpp_tensorRT" ["e"=1]
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "clancylian/retinaface"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "AlphaQi/MTCNN-light"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "wy1iu/sphereface-plus"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "GarrickLin/MXNet2Caffe"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "moli232777144/mobilefacenet-mxnet"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "xialuxi/arcface-caffe"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "szad670401/Fast-MTCNN"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "blankWorld/MTCNN-Accelerate-Onet"
"zuoqing1988/ZQCNN" -> "szad670401/HyperLandmark"
"zuoqing1988/ZQCNN" -> "MirrorYuChen/ncnn_example"
"zuoqing1988/ZQCNN" -> "Star-Clouds/CenterFace"
"zuoqing1988/ZQCNN" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"zuoqing1988/ZQCNN" -> "biubug6/Face-Detector-1MB-with-landmark"
"zuoqing1988/ZQCNN" -> "moli232777144/mtcnn_ncnn"
"zuoqing1988/ZQCNN" -> "Rock-100/FaceKit"
"zuoqing1988/ZQCNN" -> "wywu/LAB"
"zuoqing1988/ZQCNN" -> "ShiqiYu/libfacedetection"
"zuoqing1988/ZQCNN" -> "Tencent/FaceDetection-DSFD"
"zuoqing1988/ZQCNN" -> "wy1iu/sphereface"
"zuoqing1988/ZQCNN" -> "kpzhang93/MTCNN_face_detection_alignment"
"zuoqing1988/ZQCNN" -> "dlunion/mtcnn"
"zuoqing1988/ZQCNN" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"zuoqing1988/ZQCNN" -> "seetafaceengine/SeetaFace2"
"moli232777144/mobilefacenet-mxnet" -> "honghuCode/mobileFacenet-ncnn"
"moli232777144/mobilefacenet-mxnet" -> "GRAYKEY/mobilefacenet_android"
"moli232777144/mobilefacenet-mxnet" -> "qidiso/mobilefacenet-V2"
"moli232777144/mobilefacenet-mxnet" -> "moli232777144/mtcnn_ncnn"
"moli232777144/mobilefacenet-mxnet" -> "ElegantGod/ncnn"
"moli232777144/mobilefacenet-mxnet" -> "imistyrain/MobileFaceNet"
"moli232777144/mobilefacenet-mxnet" -> "KaleidoZhouYN/mobilefacenet-caffe"
"moli232777144/mobilefacenet-mxnet" -> "GarrickLin/MXNet2Caffe"
"moli232777144/mobilefacenet-mxnet" -> "bruinxiong/Modified-CRUNet-and-Residual-Attention-Network.mxnet"
"moli232777144/mobilefacenet-mxnet" -> "bleakie/MaskInsightface"
"moli232777144/mobilefacenet-mxnet" -> "ElegantGod/SSHA"
"moli232777144/mobilefacenet-mxnet" -> "olojuwin/facerecognize-for-mobile-phone"
"moli232777144/mobilefacenet-mxnet" -> "xialuxi/arcface-caffe"
"moli232777144/mobilefacenet-mxnet" -> "KangKangLoveCat/insightface_ncnn"
"moli232777144/mobilefacenet-mxnet" -> "walkoncross/prepare-faces-zyf"
"honghuCode/mobileFacenet-ncnn" -> "moli232777144/mobilefacenet-mxnet"
"honghuCode/mobileFacenet-ncnn" -> "GRAYKEY/mobilefacenet_ncnn"
"honghuCode/mobileFacenet-ncnn" -> "GRAYKEY/mobilefacenet_android"
"honghuCode/mobileFacenet-ncnn" -> "ElegantGod/ncnn"
"honghuCode/mobileFacenet-ncnn" -> "imistyrain/MobileFaceNet"
"honghuCode/mobileFacenet-ncnn" -> "liguiyuan/mobilefacenet-ncnn"
"honghuCode/mobileFacenet-ncnn" -> "moli232777144/mtcnn_ncnn"
"honghuCode/mobileFacenet-ncnn" -> "blankWorld/MTCNN-Accelerate-Onet"
"honghuCode/mobileFacenet-ncnn" -> "MirrorYuChen/ncnn_example"
"honghuCode/mobileFacenet-ncnn" -> "Charrin/RetinaFace-Cpp"
"honghuCode/mobileFacenet-ncnn" -> "KangKangLoveCat/insightface_ncnn"
"qidiso/mobilefacenet-V2" -> "qidiso/termux-gui" ["e"=1]
"qidiso/mobilefacenet-V2" -> "qidiso/mxnet-retrain" ["e"=1]
"qidiso/mobilefacenet-V2" -> "moli232777144/mobilefacenet-mxnet"
"qidiso/mobilefacenet-V2" -> "sirius-ai/MobileFaceNet_TF"
"qidiso/mobilefacenet-V2" -> "Xiaoccer/MobileFaceNet_Pytorch"
"qidiso/mobilefacenet-V2" -> "honghuCode/mobileFacenet-ncnn"
"qidiso/mobilefacenet-V2" -> "becauseofAI/MobileFace" ["e"=1]
"qidiso/mobilefacenet-V2" -> "yangxue0827/MobileFaceNet_Tensorflow"
"qidiso/mobilefacenet-V2" -> "bleakie/MaskInsightface"
"qidiso/mobilefacenet-V2" -> "moli232777144/mtcnn_ncnn"
"qidiso/mobilefacenet-V2" -> "MirrorYuChen/ncnn_example"
"qidiso/mobilefacenet-V2" -> "GRAYKEY/mobilefacenet_android"
"qidiso/mobilefacenet-V2" -> "zhanglaplace/MobileFaceNet"
"qidiso/mobilefacenet-V2" -> "biubug6/Face-Detector-1MB-with-landmark"
"qidiso/mobilefacenet-V2" -> "xialuxi/arcface-caffe"
"GRAYKEY/mobilefacenet_android" -> "moli232777144/mobilefacenet-mxnet"
"GRAYKEY/mobilefacenet_android" -> "honghuCode/mobileFacenet-ncnn"
"GRAYKEY/mobilefacenet_android" -> "dangbo/ncnn-mobile"
"GRAYKEY/mobilefacenet_android" -> "Monologuethl/Android_Facenet_Recognition"
"GRAYKEY/mobilefacenet_android" -> "zhanglaplace/MobileFaceNet"
"GRAYKEY/mobilefacenet_android" -> "KaleidoZhouYN/mobilefacenet-caffe"
"GRAYKEY/mobilefacenet_android" -> "vcvycy/Android_Facenet"
"GRAYKEY/mobilefacenet_android" -> "zhaotun/RetinaFace_NCNN_Android_demo"
"szad670401/HyperLandmark" -> "panda-lab/face-landmark"
"szad670401/HyperLandmark" -> "chengzhengxin/sdm"
"szad670401/HyperLandmark" -> "zuoqing1988/ZQCNN"
"szad670401/HyperLandmark" -> "wywu/LAB"
"szad670401/HyperLandmark" -> "guoqiangqi/PFLD"
"szad670401/HyperLandmark" -> "610265158/Peppa_Pig_Face_Landmark"
"szad670401/HyperLandmark" -> "Star-Clouds/CenterFace"
"szad670401/HyperLandmark" -> "biubug6/Face-Detector-1MB-with-landmark"
"szad670401/HyperLandmark" -> "Rock-100/FaceKit"
"szad670401/HyperLandmark" -> "zeusees/HyperFT"
"szad670401/HyperLandmark" -> "zeusees/Zeusee-Face-Anti-spoofing" ["e"=1]
"szad670401/HyperLandmark" -> "polarisZhao/PFLD-pytorch"
"szad670401/HyperLandmark" -> "moli232777144/mtcnn_ncnn"
"szad670401/HyperLandmark" -> "kpzhang93/MTCNN_face_detection_alignment"
"szad670401/HyperLandmark" -> "yfeng95/PRNet" ["e"=1]
"tobybreckon/fire-detection-cnn" -> "OlafenwaMoses/FireNET"
"tobybreckon/fire-detection-cnn" -> "cair/Fire-Detection-Image-Dataset"
"tobybreckon/fire-detection-cnn" -> "robmarkcole/fire-detection-from-images"
"tobybreckon/fire-detection-cnn" -> "steffensbola/furg-fire-dataset"
"tobybreckon/fire-detection-cnn" -> "gengyanlei/fire-smoke-detect-yolov4"
"tobybreckon/fire-detection-cnn" -> "arpit-jadon/FireNet-LightWeight-Network-for-Fire-Detection"
"tobybreckon/fire-detection-cnn" -> "DeepQuestAI/Fire-Smoke-Dataset"
"tobybreckon/fire-detection-cnn" -> "xjg0124/Fire-and-Smoke-Detection"
"tobybreckon/fire-detection-cnn" -> "xjg0124/Video_Smoke_Detection"
"tobybreckon/fire-detection-cnn" -> "midasklr/FireSmokeDetectionByEfficientNet"
"tobybreckon/fire-detection-cnn" -> "POLARBEARWYY/Smoke-Detection"
"tobybreckon/fire-detection-cnn" -> "NeelBhowmik/efficient-compact-fire-detection-cnn"
"tobybreckon/fire-detection-cnn" -> "spacewalk01/yolov5-fire-detection"
"tobybreckon/fire-detection-cnn" -> "MuhammadMoinFaisal/FireDetectionYOLOv8"
"tobybreckon/fire-detection-cnn" -> "gaiasd/DFireDataset"
"ZhaoJ9014/face.evoLVe" -> "TreB1eN/InsightFace_Pytorch"
"ZhaoJ9014/face.evoLVe" -> "JDAI-CV/FaceX-Zoo"
"ZhaoJ9014/face.evoLVe" -> "ChanChiChoi/awesome-Face_Recognition"
"ZhaoJ9014/face.evoLVe" -> "ronghuaiyang/arcface-pytorch"
"ZhaoJ9014/face.evoLVe" -> "biubug6/Pytorch_Retinaface"
"ZhaoJ9014/face.evoLVe" -> "timesler/facenet-pytorch"
"ZhaoJ9014/face.evoLVe" -> "wujiyang/Face_Pytorch"
"ZhaoJ9014/face.evoLVe" -> "ZhaoJ9014/High-Performance-Face-Recognition" ["e"=1]
"ZhaoJ9014/face.evoLVe" -> "Tencent/FaceDetection-DSFD"
"ZhaoJ9014/face.evoLVe" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"ZhaoJ9014/face.evoLVe" -> "wy1iu/sphereface"
"ZhaoJ9014/face.evoLVe" -> "Star-Clouds/CenterFace"
"ZhaoJ9014/face.evoLVe" -> "Tencent/TFace"
"ZhaoJ9014/face.evoLVe" -> "1adrianb/face-alignment"
"ZhaoJ9014/face.evoLVe" -> "cleardusk/3DDFA" ["e"=1]
"luckycallor/InsightFace-tensorflow" -> "auroua/InsightFace_TF"
"luckycallor/InsightFace-tensorflow" -> "AIInAi/tf-insightface"
"luckycallor/InsightFace-tensorflow" -> "Fei-Wang/insightface"
"luckycallor/InsightFace-tensorflow" -> "peteryuX/arcface-tf2"
"luckycallor/InsightFace-tensorflow" -> "vincentwei0919/insightface_for_face_recognition"
"luckycallor/InsightFace-tensorflow" -> "friedhelm739/Insightface-tensorflow"
"luckycallor/InsightFace-tensorflow" -> "yule-li/CosFace"
"luckycallor/InsightFace-tensorflow" -> "HiKapok/tf.extra_losses"
"luckycallor/InsightFace-tensorflow" -> "4uiiurz1/keras-arcface"
"luckycallor/InsightFace-tensorflow" -> "sirius-ai/MobileFaceNet_TF"
"luckycallor/InsightFace-tensorflow" -> "Joker316701882/Additive-Margin-Softmax"
"luckycallor/InsightFace-tensorflow" -> "dmonterom/face_recognition_TF2"
"njvisionpower/mxnet-insightface-cpp" -> "njvisionpower/mxnet-mtcnn-cpp"
"njvisionpower/mxnet-insightface-cpp" -> "KangKangLoveCat/insightface_ncnn"
"njvisionpower/mxnet-insightface-cpp" -> "markson14/FaceRecognitionCpp"
"zuoqing1988/ZQCNN-MTCNN-vs-libfacedetection" -> "zhanglaplace/MobileFaceNet"
"MirrorYuChen/ncnn_example" -> "moli232777144/mtcnn_ncnn"
"MirrorYuChen/ncnn_example" -> "hanson-young/nniefacelib"
"MirrorYuChen/ncnn_example" -> "biubug6/Face-Detector-1MB-with-landmark"
"MirrorYuChen/ncnn_example" -> "bleakie/MaskInsightface"
"MirrorYuChen/ncnn_example" -> "Charrin/RetinaFace-Cpp"
"MirrorYuChen/ncnn_example" -> "honghuCode/mobileFacenet-ncnn"
"MirrorYuChen/ncnn_example" -> "zuoqing1988/ZQCNN"
"MirrorYuChen/ncnn_example" -> "olojuwin/facerecognize-for-mobile-phone"
"MirrorYuChen/ncnn_example" -> "qaz734913414/Ncnn_FaceTrack"
"MirrorYuChen/ncnn_example" -> "MirrorYuChen/mnn_example"
"MirrorYuChen/ncnn_example" -> "guoqiangqi/PFLD"
"MirrorYuChen/ncnn_example" -> "liguiyuan/mobilefacenet-ncnn"
"MirrorYuChen/ncnn_example" -> "zeusees/HyperFT"
"MirrorYuChen/ncnn_example" -> "xialuxi/arcface-caffe"
"MirrorYuChen/ncnn_example" -> "Star-Clouds/CenterFace"
"clancylian/retinaface" -> "Charrin/RetinaFace-Cpp"
"clancylian/retinaface" -> "PKUZHOU/MTCNN_FaceDetection_TensorRT"
"clancylian/retinaface" -> "biubug6/Face-Detector-1MB-with-landmark"
"clancylian/retinaface" -> "azhe198827/retinaface_tensorRT"
"clancylian/retinaface" -> "wzj5133329/retinaface_caffe"
"clancylian/retinaface" -> "bleakie/CenterMulti"
"clancylian/retinaface" -> "MirrorYuChen/ncnn_example"
"clancylian/retinaface" -> "supernotman/RetinaFace_Pytorch"
"clancylian/retinaface" -> "1996scarlet/faster-mobile-retinaface"
"clancylian/retinaface" -> "cholihao/Retinaface-caffe"
"clancylian/retinaface" -> "szad670401/advanced-mxnet2caffe"
"clancylian/retinaface" -> "njvisionpower/mxnet-insightface-cpp"
"clancylian/retinaface" -> "cypw/MXNet2Caffe"
"Charrin/RetinaFace-Cpp" -> "clancylian/retinaface"
"Charrin/RetinaFace-Cpp" -> "MirrorYuChen/ncnn_example"
"Charrin/RetinaFace-Cpp" -> "honghuCode/mobileFacenet-ncnn"
"Charrin/RetinaFace-Cpp" -> "biubug6/Face-Detector-1MB-with-landmark"
"Charrin/RetinaFace-Cpp" -> "cypw/MXNet2Caffe"
"Charrin/RetinaFace-Cpp" -> "cholihao/Retinaface-caffe"
"Charrin/RetinaFace-Cpp" -> "xialuxi/arcface-caffe"
"Charrin/RetinaFace-Cpp" -> "olojuwin/facerecognize-for-mobile-phone"
"Charrin/RetinaFace-Cpp" -> "hanson-young/nniefacelib"
"Charrin/RetinaFace-Cpp" -> "wzj5133329/retinaface_caffe"
"Charrin/RetinaFace-Cpp" -> "SyGoing/LFFD-with-ncnn"
"Charrin/RetinaFace-Cpp" -> "szad670401/advanced-mxnet2caffe"
"Charrin/RetinaFace-Cpp" -> "zeusees/FaceBoxes"
"Charrin/RetinaFace-Cpp" -> "moli232777144/mtcnn_ncnn"
"Charrin/RetinaFace-Cpp" -> "bleakie/MaskInsightface"
"yu4u/age-estimation-pytorch" -> "yu4u/age-gender-estimation"
"yu4u/age-estimation-pytorch" -> "Herosan163/AgeEstimation"
"yu4u/age-estimation-pytorch" -> "shamangary/SSR-Net"
"yu4u/age-estimation-pytorch" -> "wayen820/gender_age_estimation_mxnet"
"yu4u/age-estimation-pytorch" -> "naayaaa/Age-Gender-Pred"
"yu4u/age-estimation-pytorch" -> "Nicholasli1995/VisualizingNDF"
"yu4u/age-estimation-pytorch" -> "diovisgood/agender"
"yu4u/age-estimation-pytorch" -> "oukohou/SSR_Net_Pytorch"
"yu4u/age-estimation-pytorch" -> "dandynaufaldi/Agendernet"
"yu4u/age-estimation-pytorch" -> "vicwer/C3AE_Age_Estimation"
"yu4u/age-estimation-pytorch" -> "b02901145/SSR-Net_megaage-asian"
"yu4u/age-estimation-pytorch" -> "StevenBanama/C3AE"
"yu4u/age-estimation-pytorch" -> "Raschka-research-group/coral-cnn"
"yu4u/age-estimation-pytorch" -> "Nebula4869/PyTorch-gender-age-estimation"
"yu4u/age-estimation-pytorch" -> "deepinx/age-gender-estimation"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "Star-Clouds/CenterFace"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "becauseofAI/lffd-pytorch"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "YonghaoHe/LFD-A-Light-and-Fast-Detector"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "biubug6/Face-Detector-1MB-with-landmark"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "becauseofAI/MobileFace" ["e"=1]
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "dlunion/DBFace"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "zuoqing1988/ZQCNN"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "aditya-vora/FCHD-Fully-Convolutional-Head-Detector"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "xiangweizeng/mobile-lpr" ["e"=1]
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "Tencent/FaceDetection-DSFD"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "liuwei16/CSP" ["e"=1]
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "zisianw/FaceBoxes.PyTorch"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "becauseofAI/awesome-face" ["e"=1]
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"bleakie/MaskInsightface" -> "olojuwin/facerecognize-for-mobile-phone"
"bleakie/MaskInsightface" -> "liuyuisanai/trojans-face-recognizer"
"bleakie/MaskInsightface" -> "MirrorYuChen/ncnn_example"
"bleakie/MaskInsightface" -> "bleakie/CenterMulti"
"bleakie/MaskInsightface" -> "moli232777144/mobilefacenet-mxnet"
"bleakie/MaskInsightface" -> "zma-c-137/VarGFaceNet"
"bleakie/MaskInsightface" -> "cavalleria/cavaface"
"bleakie/MaskInsightface" -> "becauseofAI/MobileFace" ["e"=1]
"bleakie/MaskInsightface" -> "Charrin/RetinaFace-Cpp"
"bleakie/MaskInsightface" -> "Star-Clouds/CenterFace"
"bleakie/MaskInsightface" -> "biubug6/Face-Detector-1MB-with-landmark"
"bleakie/MaskInsightface" -> "Star-Clouds/FRDA"
"bleakie/MaskInsightface" -> "HuangYG123/CurricularFace"
"bleakie/MaskInsightface" -> "SyGoing/LFFD-with-ncnn"
"bleakie/MaskInsightface" -> "1996scarlet/ArcFace-Multiplex-Recognition"
"DataXujing/YOLO-V3-Tensorflow" -> "DataXujing/Faster-R-CNN-Keras"
"DataXujing/YOLO-V3-Tensorflow" -> "njvisionpower/Safety-Helmet-Wearing-Dataset"
"DataXujing/YOLO-V3-Tensorflow" -> "HouchangX-AI/Helmet-Detection"
"DataXujing/YOLO-V3-Tensorflow" -> "dengfenglai321/YOLOv4-Hat-detection"
"DataXujing/YOLO-V3-Tensorflow" -> "Byronnar/tensorflow-serving-yolov3" ["e"=1]
"DataXujing/YOLO-V3-Tensorflow" -> "zyl067459/yolov3"
"Zhongdao/gcn_clustering" -> "yl-1993/learn-to-cluster"
"Zhongdao/gcn_clustering" -> "XiaohangZhan/cdp"
"Zhongdao/gcn_clustering" -> "varun-suresh/Clustering"
"Zhongdao/gcn_clustering" -> "makarandtapaswi/BallClustering_ICCV2019"
"Zhongdao/gcn_clustering" -> "ssarfraz/FINCH-Clustering"
"Zhongdao/gcn_clustering" -> "seasonSH/Probabilistic-Face-Embeddings"
"Zhongdao/gcn_clustering" -> "XiaohangZhan/face_recognition_framework"
"Zhongdao/gcn_clustering" -> "zhunzhong07/ECN" ["e"=1]
"Zhongdao/gcn_clustering" -> "xiaoboCASIA/SV-X-Softmax"
"Zhongdao/gcn_clustering" -> "megvii-research/ML-GCN" ["e"=1]
"Zhongdao/gcn_clustering" -> "sjtuzq/person_search_gcn" ["e"=1]
"Zhongdao/gcn_clustering" -> "zhly0/facenet-face-cluster-chinese-whispers-"
"Zhongdao/gcn_clustering" -> "yl-1993/hfsoftmax"
"yuxitong/TensorFlowAndroidDemo" -> "yuxitong/AutoMarKingTensorFlowPython"
"yuxitong/TensorFlowAndroidDemo" -> "sxpl/FaceAC"
"yuxitong/TensorFlowAndroidDemo" -> "kongqw/OpenCVForAndroid"
"yuxitong/TensorFlowAndroidDemo" -> "yuxitong/TimeView"
"yuxitong/TensorFlowAndroidDemo" -> "tz28/Chinese-number-gestures-recognition" ["e"=1]
"yuxitong/TensorFlowAndroidDemo" -> "yuxitong/AndroidLivePusher"
"yuxitong/TensorFlowAndroidDemo" -> "amitshekhariitbhu/AndroidTensorFlowMachineLearningExample" ["e"=1]
"yuxitong/TensorFlowAndroidDemo" -> "vcvycy/MTCNN4Android"
"yuxitong/TensorFlowAndroidDemo" -> "Reginer/MVVMHub"
"yuxitong/TensorFlowAndroidDemo" -> "ISS-Kerui/Bus-Driver-Behavior-Detection"
"yuxitong/TensorFlowAndroidDemo" -> "aiyaapp/AiyaEffectsAndroid" ["e"=1]
"yuxitong/TensorFlowAndroidDemo" -> "ywl5320/wlmusic" ["e"=1]
"yuxitong/TensorFlowAndroidDemo" -> "simplezhli/Tesseract-OCR-Scanner" ["e"=1]
"yuxitong/TensorFlowAndroidDemo" -> "omnigeeker/mlnd_distracted_driver_detection"
"yuxitong/TensorFlowAndroidDemo" -> "EasyDarwin/EasyPusher-Android" ["e"=1]
"chenlinzhong/face-login" -> "windzu/facenet_facerecognition"
"chenlinzhong/face-login" -> "MrZhousf/tf_facenet"
"chenlinzhong/face-login" -> "shanren7/real_time_face_recognition"
"chenlinzhong/face-login" -> "LeslieZhoa/tensorflow-MTCNN"
"chenlinzhong/face-login" -> "inspurer/WorkAttendanceSystem"
"chenlinzhong/face-login" -> "boyliwensheng/understand_facenet"
"chenlinzhong/face-login" -> "PanJinquan/Face_Detection_Recognition"
"chenlinzhong/face-login" -> "seathiefwang/FaceRecognition-tensorflow"
"chenlinzhong/face-login" -> "LeslieZhoa/tensorflow-facenet"
"chenlinzhong/face-login" -> "coneypo/Dlib_face_recognition_from_camera"
"chenlinzhong/face-login" -> "jerry1900/faceRecognition"
"chenlinzhong/face-login" -> "bubbliiiing/keras-face-recognition" ["e"=1]
"chenlinzhong/face-login" -> "ninesky110/Real-time-face-recognition"
"chenlinzhong/face-login" -> "AITTSMD/MTCNN-Tensorflow"
"chenlinzhong/face-login" -> "auroua/InsightFace_TF"
"gqjjqg/android-extend" -> "asdfqwrasdf/ArcFaceDemo"
"gqjjqg/android-extend" -> "Sanqi5401/ArcSoftDemo"
"kuaikuaikim/dface" -> "TropComplique/mtcnn-pytorch"
"kuaikuaikim/dface" -> "Sierkinhane/mtcnn-pytorch"
"kuaikuaikim/dface" -> "seathiefwang/FaceRecognition-tensorflow"
"kuaikuaikim/dface" -> "coneypo/Dlib_face_recognition_from_camera"
"kuaikuaikim/dface" -> "jerry1900/faceRecognition"
"kuaikuaikim/dface" -> "AITTSMD/MTCNN-Tensorflow"
"kuaikuaikim/dface" -> "kpzhang93/MTCNN_face_detection_alignment"
"kuaikuaikim/dface" -> "TreB1eN/InsightFace_Pytorch"
"kuaikuaikim/dface" -> "ZhaoJ9014/face.evoLVe"
"kuaikuaikim/dface" -> "Tencent/FaceDetection-DSFD"
"kuaikuaikim/dface" -> "wujiyang/Face_Pytorch"
"kuaikuaikim/dface" -> "AlfredXiangWu/LightCNN"
"kuaikuaikim/dface" -> "timesler/facenet-pytorch"
"kuaikuaikim/dface" -> "shanren7/real_time_face_recognition"
"kuaikuaikim/dface" -> "clcarwin/sphereface_pytorch"
"akshaybahadur21/Drowsiness_Detection" -> "raja434/driver-fatigue-detection-system"
"akshaybahadur21/Drowsiness_Detection" -> "msindev/Driver-Drowsiness-Detector"
"akshaybahadur21/Drowsiness_Detection" -> "AnirudhGP/DrowsyDriverDetection"
"akshaybahadur21/Drowsiness_Detection" -> "nishagandhi/DrowsyDriverDetection"
"akshaybahadur21/Drowsiness_Detection" -> "akshaybahadur21/HandMovementTracking"
"akshaybahadur21/Drowsiness_Detection" -> "akshaybahadur21/Emojinator"
"akshaybahadur21/Drowsiness_Detection" -> "fear-the-lord/Drowsiness-Detection"
"akshaybahadur21/Drowsiness_Detection" -> "neelanjan00/Driver-Drowsiness-Detection"
"akshaybahadur21/Drowsiness_Detection" -> "tahaemara/sleep-detection"
"akshaybahadur21/Drowsiness_Detection" -> "jaisayush/Fatigue-Detection-System-Based-On-Behavioural-Characteristics-Of-Driver"
"akshaybahadur21/Drowsiness_Detection" -> "akshaybahadur21/Facial-Recognition-using-Facenet"
"akshaybahadur21/Drowsiness_Detection" -> "nicknochnack/YOLO-Drowsiness-Detection" ["e"=1]
"akshaybahadur21/Drowsiness_Detection" -> "Arijit1080/Drowsiness-and-Yawn-Detection-with-voice-alert-using-Dlib"
"akshaybahadur21/Drowsiness_Detection" -> "JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection"
"akshaybahadur21/Drowsiness_Detection" -> "omnigeeker/mlnd_distracted_driver_detection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "Aristochi/Dangerous_driving_behavior_detection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "omnigeeker/mlnd_distracted_driver_detection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "wangjianlin1985/Python_FatigueDrivingDetection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "KyrieIrv11ng/Yolov5-driving-detection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "BillySturate/Fatigue-driving-detection-system-based-on-opencv-dlib"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "DohaerisT/DangerousDrivingDetector"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "Aristochi/MTCNN_CNN_DangerDrivingDetection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "xg-zhang/faceRegister"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "raja434/driver-fatigue-detection-system"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "wangjianlin1985/Python_ConvolutionalNeuralNetwork_FaceRecognition_fatiguedriving"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "yinghualuowu/Python_VLPR" ["e"=1]
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "neelanjan00/Driver-Drowsiness-Detection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "Yaoshicn/decaptcha" ["e"=1]
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "qunshansj/Perclos-Enhanced-YOLO-Drowsiness-Detection-System"
"arunponnusamy/object-detection-opencv" -> "arunponnusamy/cvlib"
"arunponnusamy/object-detection-opencv" -> "iArunava/YOLOv3-Object-Detection-with-OpenCV"
"arunponnusamy/object-detection-opencv" -> "yash42828/YOLO-object-detection-with-OpenCV"
"arunponnusamy/object-detection-opencv" -> "Surya-Murali/Real-Time-Object-Detection-With-OpenCV"
"arunponnusamy/object-detection-opencv" -> "gustavz/realtime_object_detection" ["e"=1]
"arunponnusamy/object-detection-opencv" -> "arunponnusamy/gender-detection-keras"
"arunponnusamy/object-detection-opencv" -> "arunponnusamy/face-detection-comparison"
"arunponnusamy/object-detection-opencv" -> "PINTO0309/OpenVINO-YoloV3" ["e"=1]
"architshukla/Plagiarism-Checker" -> "abhilampard/Simple-Plagiarism-Checker"
"architshukla/Plagiarism-Checker" -> "diogocabral/sherlock"
"architshukla/Plagiarism-Checker" -> "Copyleaks/Python-Plagiarism-Checker"
"architshukla/Plagiarism-Checker" -> "dodona-edu/dolos"
"architshukla/Plagiarism-Checker" -> "JonathanReeve/text-matcher"
"architshukla/Plagiarism-Checker" -> "TylerJaacks/ItsJustACoincidenceProfessor"
"architshukla/Plagiarism-Checker" -> "harirakul/Plagiarism-Detection"
"architshukla/Plagiarism-Checker" -> "suyash248/plagiarism_detection"
"yeziyang1992/Face_Recognition_Client" -> "yeziyang1992/Python-Tensorflow-Face-v2.0"
"yeziyang1992/Face_Recognition_Client" -> "yeziyang1992/Python-Tensorflow-Face"
"yeziyang1992/Face_Recognition_Client" -> "66pig/face_recognition"
"serengil/neural-networks-py" -> "serengil/exchanging-encrypted-mails"
"serengil/neural-networks-py" -> "serengil/neural-networks"
"wondervictor/WiderFace-Evaluation" -> "yxlijun/DSFD.pytorch"
"wondervictor/WiderFace-Evaluation" -> "bairdzhang/smallhardface"
"wondervictor/WiderFace-Evaluation" -> "xiaqunfeng/face-evaluation"
"wondervictor/WiderFace-Evaluation" -> "akofman/wider-face-pascal-voc-annotations"
"wondervictor/WiderFace-Evaluation" -> "luuuyi/S3FD.PyTorch"
"PanJinquan/Face_Detection_Recognition" -> "boyliwensheng/understand_facenet"
"PanJinquan/Face_Detection_Recognition" -> "windzu/facenet_facerecognition"
"PanJinquan/Face_Detection_Recognition" -> "chenlinzhong/face-login"
"PanJinquan/Face_Detection_Recognition" -> "LeslieZhoa/tensorflow-MTCNN"
"PanJinquan/Face_Detection_Recognition" -> "LeslieZhoa/tensorflow-facenet"
"PanJinquan/Face_Detection_Recognition" -> "ninesky110/Real-time-face-recognition"
"PanJinquan/Face_Detection_Recognition" -> "MrZhousf/tf_facenet"
"PanJinquan/Face_Detection_Recognition" -> "foreverYoungGitHub/MTCNN"
"PanJinquan/Face_Detection_Recognition" -> "AITTSMD/MTCNN-Tensorflow"
"PanJinquan/Face_Detection_Recognition" -> "friedhelm739/Insightface-tensorflow"
"PanJinquan/Face_Detection_Recognition" -> "vincentwei0919/insightface_for_face_recognition"
"omoindrot/tensorflow-triplet-loss" -> "adambielski/siamese-triplet" ["e"=1]
"omoindrot/tensorflow-triplet-loss" -> "VisualComputingInstitute/triplet-reid" ["e"=1]
"omoindrot/tensorflow-triplet-loss" -> "SpikeKing/triplet-loss-mnist"
"omoindrot/tensorflow-triplet-loss" -> "AdrianUng/keras-triplet-loss-mnist"
"omoindrot/tensorflow-triplet-loss" -> "andreasveit/triplet-network-pytorch"
"omoindrot/tensorflow-triplet-loss" -> "bnu-wangxun/Deep_Metric"
"omoindrot/tensorflow-triplet-loss" -> "michuanhaohao/keras_reid" ["e"=1]
"omoindrot/tensorflow-triplet-loss" -> "sanku-lib/image_triplet_loss"
"omoindrot/tensorflow-triplet-loss" -> "NegatioN/OnlineMiningTripletLoss"
"omoindrot/tensorflow-triplet-loss" -> "maciejkula/triplet_recommendations_keras" ["e"=1]
"omoindrot/tensorflow-triplet-loss" -> "dhwajraj/deep-siamese-text-similarity" ["e"=1]
"omoindrot/tensorflow-triplet-loss" -> "EncodeTS/TensorFlow_Center_Loss"
"omoindrot/tensorflow-triplet-loss" -> "KaiyangZhou/pytorch-center-loss"
"omoindrot/tensorflow-triplet-loss" -> "ywpkwon/siamese_tf_mnist" ["e"=1]
"omoindrot/tensorflow-triplet-loss" -> "huanghoujing/person-reid-triplet-loss-baseline" ["e"=1]
"msindev/Driver-Drowsiness-Detector" -> "jaisayush/Fatigue-Detection-System-Based-On-Behavioural-Characteristics-Of-Driver"
"msindev/Driver-Drowsiness-Detector" -> "neelanjan00/Driver-Drowsiness-Detection"
"msindev/Driver-Drowsiness-Detector" -> "fear-the-lord/Drowsiness-Detection"
"msindev/Driver-Drowsiness-Detector" -> "akshaybahadur21/Drowsiness_Detection"
"msindev/Driver-Drowsiness-Detector" -> "msindev/Gesture-Controlled-Snake-Game"
"msindev/Driver-Drowsiness-Detector" -> "muskanvk/Drowsiness-Detection-System-for-Drivers"
"msindev/Driver-Drowsiness-Detector" -> "AnirudhGP/DrowsyDriverDetection"
"msindev/Driver-Drowsiness-Detector" -> "raja434/driver-fatigue-detection-system"
"msindev/Driver-Drowsiness-Detector" -> "nishagandhi/DrowsyDriverDetection"
"msindev/Driver-Drowsiness-Detector" -> "woorimlee/drowsiness-detection"
"niehen6174/face_detection_and_recognition" -> "niehen6174/image-and-speech-processing"
"niehen6174/face_detection_and_recognition" -> "niehen6174/Face-recognition-check-in-system"
"yeephycho/tensorflow-face-detection" -> "bruceyang2012/Face-detection-with-mobilenet-ssd"
"yeephycho/tensorflow-face-detection" -> "AITTSMD/MTCNN-Tensorflow"
"yeephycho/tensorflow-face-detection" -> "kpzhang93/MTCNN_face_detection_alignment"
"yeephycho/tensorflow-face-detection" -> "ildoonet/deepface"
"yeephycho/tensorflow-face-detection" -> "MarekKowalski/DeepAlignmentNetwork"
"yeephycho/tensorflow-face-detection" -> "iitzco/faced"
"yeephycho/tensorflow-face-detection" -> "sirius-ai/MobileFaceNet_TF"
"yeephycho/tensorflow-face-detection" -> "yeephycho/widerface-to-tfrecord"
"yeephycho/tensorflow-face-detection" -> "sfzhang15/SFD"
"yeephycho/tensorflow-face-detection" -> "qdraw/tensorflow-face-object-detector-tutorial"
"yeephycho/tensorflow-face-detection" -> "Tencent/FaceDetection-DSFD"
"yeephycho/tensorflow-face-detection" -> "mahyarnajibi/SSH"
"yeephycho/tensorflow-face-detection" -> "wywu/LAB"
"yeephycho/tensorflow-face-detection" -> "sthanhng/yoloface"
"yeephycho/tensorflow-face-detection" -> "szad670401/HyperLandmark"
"sfzhang15/FaceBoxes" -> "zisianw/FaceBoxes.PyTorch"
"sfzhang15/FaceBoxes" -> "zeusees/FaceBoxes"
"sfzhang15/FaceBoxes" -> "Rock-100/FaceKit"
"sfzhang15/FaceBoxes" -> "ChiCheng123/SRN"
"sfzhang15/FaceBoxes" -> "xialuxi/arcface-caffe"
"sfzhang15/FaceBoxes" -> "wywu/LAB"
"sfzhang15/FaceBoxes" -> "sfzhang15/SFD"
"sfzhang15/FaceBoxes" -> "liuyuisanai/RSA-for-object-detection"
"sfzhang15/FaceBoxes" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"sfzhang15/FaceBoxes" -> "mahyarnajibi/SSH"
"sfzhang15/FaceBoxes" -> "TropComplique/FaceBoxes-tensorflow"
"sfzhang15/FaceBoxes" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"sfzhang15/FaceBoxes" -> "moli232777144/mtcnn_ncnn"
"sfzhang15/FaceBoxes" -> "zuoqing1988/ZQCNN"
"sfzhang15/FaceBoxes" -> "szad670401/Fast-MTCNN"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "bleakie/MaskInsightface"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "windzu/facenet_facerecognition"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "clancylian/retinaface"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "becauseofAI/MobileFace" ["e"=1]
"1996scarlet/ArcFace-Multiplex-Recognition" -> "Charrin/RetinaFace-Cpp"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "siriusdemon/Build-Your-Own-Face-Model"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "olojuwin/facerecognize-for-mobile-phone"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "1996scarlet/faster-mobile-retinaface"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "tuna318/Face-Recognition-with-InsightFace"
"seetaface/SeetaFaceEngine2" -> "seetaface/SeetaFaceEngine"
"seetaface/SeetaFaceEngine2" -> "seetafaceengine/SeetaFace2"
"seetaface/SeetaFaceEngine2" -> "jamesluozhiwei/seetafaceJNI"
"seetaface/SeetaFaceEngine2" -> "seetafaceengine/SeetaFace6"
"seetaface/SeetaFaceEngine2" -> "ydwen/caffe-face"
"seetaface/SeetaFaceEngine2" -> "szad670401/HyperLandmark"
"seetaface/SeetaFaceEngine2" -> "AlphaQi/MTCNN-light"
"seetaface/SeetaFaceEngine2" -> "Rock-100/FaceKit"
"seetaface/SeetaFaceEngine2" -> "moli232777144/mtcnn_ncnn"
"seetaface/SeetaFaceEngine2" -> "wy1iu/sphereface"
"seetaface/SeetaFaceEngine2" -> "SeetaFace6Open/index"
"seetaface/SeetaFaceEngine2" -> "zeusees/Zeusee-Face-Anti-spoofing" ["e"=1]
"seetaface/SeetaFaceEngine2" -> "zuoqing1988/ZQCNN"
"seetaface/SeetaFaceEngine2" -> "dlunion/mtcnn"
"seetaface/SeetaFaceEngine2" -> "CongWeilin/mtcnn-caffe"
"yogesh-kamat/FaceAttend" -> "amaljoseph/Face_Recognition_Attendance_System_Python-OpenCV"
"yogesh-kamat/FaceAttend" -> "shashankch292/Face-Detection-Recognition-Based-Attendance-System"
"boyliwensheng/understand_facenet" -> "windzu/facenet_facerecognition"
"boyliwensheng/understand_facenet" -> "LeslieZhoa/tensorflow-MTCNN"
"boyliwensheng/understand_facenet" -> "shanren7/real_time_face_recognition"
"boyliwensheng/understand_facenet" -> "LeslieZhoa/tensorflow-facenet"
"boyliwensheng/understand_facenet" -> "PanJinquan/Face_Detection_Recognition"
"boyliwensheng/understand_facenet" -> "MrZhousf/tf_facenet"
"boyliwensheng/understand_facenet" -> "AITTSMD/MTCNN-Tensorflow"
"boyliwensheng/understand_facenet" -> "chenlinzhong/face-login"
"boyliwensheng/understand_facenet" -> "liorshk/facenet_pytorch"
"boyliwensheng/understand_facenet" -> "davidsandberg/facenet"
"boyliwensheng/understand_facenet" -> "vincentwei0919/insightface_for_face_recognition"
"boyliwensheng/understand_facenet" -> "moli232777144/mobilefacenet-mxnet"
"boyliwensheng/understand_facenet" -> "auroua/InsightFace_TF"
"boyliwensheng/understand_facenet" -> "tbmoon/facenet"
"boyliwensheng/understand_facenet" -> "kpzhang93/MTCNN_face_detection_alignment"
"shen1994/DeepID" -> "jinze1994/DeepID1"
"shen1994/DeepID" -> "Piccolo-Jr/FaceVerification-DeepID2"
"cydonia999/VGGFace2-pytorch" -> "ox-vgg/vgg_face2"
"cydonia999/VGGFace2-pytorch" -> "prlz77/vgg-face.pytorch"
"cydonia999/VGGFace2-pytorch" -> "TropComplique/mtcnn-pytorch"
"cydonia999/VGGFace2-pytorch" -> "rcmalli/keras-vggface"
"cydonia999/VGGFace2-pytorch" -> "AruniRC/resnet-face-pytorch"
"cydonia999/VGGFace2-pytorch" -> "AlfredXiangWu/LightCNN"
"cydonia999/VGGFace2-pytorch" -> "clcarwin/sphereface_pytorch"
"cydonia999/VGGFace2-pytorch" -> "EvelynFan/AWESOME-FER" ["e"=1]
"cydonia999/VGGFace2-pytorch" -> "tamerthamoqa/facenet-pytorch-glint360k"
"cydonia999/VGGFace2-pytorch" -> "ronghuaiyang/arcface-pytorch"
"cydonia999/VGGFace2-pytorch" -> "TreB1eN/InsightFace_Pytorch"
"cydonia999/VGGFace2-pytorch" -> "timesler/facenet-pytorch"
"cydonia999/VGGFace2-pytorch" -> "MuggleWang/CosFace_pytorch"
"cydonia999/VGGFace2-pytorch" -> "ZhaoJ9014/High-Performance-Face-Recognition" ["e"=1]
"cydonia999/VGGFace2-pytorch" -> "wujiyang/Face_Pytorch"
"wujiyang/Face_Pytorch" -> "TreB1eN/InsightFace_Pytorch"
"wujiyang/Face_Pytorch" -> "ronghuaiyang/arcface-pytorch"
"wujiyang/Face_Pytorch" -> "MuggleWang/CosFace_pytorch"
"wujiyang/Face_Pytorch" -> "QuasarLight/Pytorch_Face_Recognition"
"wujiyang/Face_Pytorch" -> "ZhaoJ9014/face.evoLVe"
"wujiyang/Face_Pytorch" -> "cavalleria/cavaface"
"wujiyang/Face_Pytorch" -> "foamliu/InsightFace-v2"
"wujiyang/Face_Pytorch" -> "wy1iu/sphereface"
"wujiyang/Face_Pytorch" -> "HuangYG123/CurricularFace"
"wujiyang/Face_Pytorch" -> "clcarwin/sphereface_pytorch"
"wujiyang/Face_Pytorch" -> "yule-li/CosFace"
"wujiyang/Face_Pytorch" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"wujiyang/Face_Pytorch" -> "liorshk/facenet_pytorch"
"wujiyang/Face_Pytorch" -> "Xiaoccer/MobileFaceNet_Pytorch"
"wujiyang/Face_Pytorch" -> "yl-1993/learn-to-cluster"
"tamerthamoqa/facenet-pytorch-glint360k" -> "tbmoon/facenet"
"tamerthamoqa/facenet-pytorch-glint360k" -> "liorshk/facenet_pytorch"
"tamerthamoqa/facenet-pytorch-glint360k" -> "chencodeX/triplet-loss-pytorch"
"tamerthamoqa/facenet-pytorch-glint360k" -> "cydonia999/VGGFace2-pytorch"
"tamerthamoqa/facenet-pytorch-glint360k" -> "CaptainEven/FaceRecognition"
"tamerthamoqa/facenet-pytorch-glint360k" -> "cavalleria/cavaface"
"tamerthamoqa/facenet-pytorch-glint360k" -> "zhongyy/Face-Transformer"
"abhilampard/Simple-Plagiarism-Checker" -> "architshukla/Plagiarism-Checker"
"abhilampard/Simple-Plagiarism-Checker" -> "JonathanReeve/text-matcher"
"abhilampard/Simple-Plagiarism-Checker" -> "Kalebu/Plagiarism-checker-Python"
"abhilampard/Simple-Plagiarism-Checker" -> "ayushreal/Signature-recognition"
"ayushreal/Signature-recognition" -> "ammarmahmood1999/HeartHealthPrediction"
"ayushreal/Signature-recognition" -> "aashishpeepra/whatsapp-live-cricket-bot"
"ayushreal/Signature-recognition" -> "shabh2412/stock_price_prediction_application"
"neha01/FaceRecognition" -> "ashishdubey10/Face-Recognition-Based-Attendance-System"
"neha01/FaceRecognition" -> "thecodacus/Face-Recognition"
"ox-vgg/vgg_face2" -> "cydonia999/VGGFace2-pytorch"
"ox-vgg/vgg_face2" -> "rcmalli/keras-vggface"
"ox-vgg/vgg_face2" -> "WeidiXie/Keras-VGGFace2-ResNet50"
"ox-vgg/vgg_face2" -> "NNNNAI/VGGFace2-HQ" ["e"=1]
"ox-vgg/vgg_face2" -> "ZhaoJ9014/face.evoLVe"
"ox-vgg/vgg_face2" -> "happynear/FaceDatasets"
"ox-vgg/vgg_face2" -> "AlfredXiangWu/LightCNN"
"ox-vgg/vgg_face2" -> "kpzhang93/MTCNN_face_detection_alignment"
"ox-vgg/vgg_face2" -> "tamerthamoqa/facenet-pytorch-glint360k"
"ox-vgg/vgg_face2" -> "ZhaoJ9014/High-Performance-Face-Recognition" ["e"=1]
"ox-vgg/vgg_face2" -> "nyoki-mtl/keras-facenet"
"ox-vgg/vgg_face2" -> "timesler/facenet-pytorch"
"ox-vgg/vgg_face2" -> "TreB1eN/InsightFace_Pytorch"
"ox-vgg/vgg_face2" -> "ruochunjin/C-MS-Celeb"
"ox-vgg/vgg_face2" -> "fwang91/IMDb-Face"
"ruochunjin/C-MS-Celeb" -> "HuangYG123/CurricularFace"
"ruochunjin/C-MS-Celeb" -> "fwang91/IMDb-Face"
"ruochunjin/C-MS-Celeb" -> "Charrin/RetinaFace-Cpp"
"ruochunjin/C-MS-Celeb" -> "foamliu/InsightFace-v2"
"ruochunjin/C-MS-Celeb" -> "tiandunx/SV-X-Softmax"
"ruochunjin/C-MS-Celeb" -> "deepinx/megaface-evaluation"
"krasserm/face-recognition" -> "vsyw/Keras-OpenFace"
"krasserm/face-recognition" -> "akshaybahadur21/Facial-Recognition-using-Facenet"
"krasserm/face-recognition" -> "nyoki-mtl/keras-facenet"
"krasserm/face-recognition" -> "Skuldur/facenet-face-recognition"
"krasserm/face-recognition" -> "chen0040/keras-face"
"krasserm/face-recognition" -> "rcmalli/keras-vggface"
"krasserm/face-recognition" -> "vinayakarannil/Face_Recognition"
"krasserm/face-recognition" -> "shanren7/real_time_face_recognition"
"krasserm/face-recognition" -> "sainimohit23/FaceNet-Real-Time-face-recognition"
"krasserm/face-recognition" -> "bearsprogrammer/real-time-deep-face-recognition"
"krasserm/face-recognition" -> "ildoonet/deepface"
"krasserm/face-recognition" -> "sumantrajoshi/Face-recognition-using-deep-learning"
"krasserm/face-recognition" -> "AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow"
"krasserm/face-recognition" -> "satinder147/Attendance-using-Face"
"krasserm/face-recognition" -> "vudung45/FaceRec"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "YirongMao/softmax_variants"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "wujiyang/Face_Pytorch"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "ronghuaiyang/arcface-pytorch"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "amirhfarzaneh/lsoftmax-pytorch"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "KaiyangZhou/pytorch-center-loss"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "TinyZeaMays/CircleLoss"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "foamliu/InsightFace-v2"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "cavalleria/cavaface"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "TreB1eN/InsightFace_Pytorch"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "Jungjee/RawNet" ["e"=1]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "manojpamk/pytorch_xvectors" ["e"=1]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "clcarwin/sphereface_pytorch"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "CoinCheung/pytorch-loss" ["e"=1]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "iiscleap/NeuralPlda" ["e"=1]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "jxgu1016/MNIST_center_loss_pytorch"
"TreB1eN/InsightFace_Pytorch" -> "ronghuaiyang/arcface-pytorch"
"TreB1eN/InsightFace_Pytorch" -> "ZhaoJ9014/face.evoLVe"
"TreB1eN/InsightFace_Pytorch" -> "biubug6/Pytorch_Retinaface"
"TreB1eN/InsightFace_Pytorch" -> "wujiyang/Face_Pytorch"
"TreB1eN/InsightFace_Pytorch" -> "JDAI-CV/FaceX-Zoo"
"TreB1eN/InsightFace_Pytorch" -> "ChanChiChoi/awesome-Face_Recognition"
"TreB1eN/InsightFace_Pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"TreB1eN/InsightFace_Pytorch" -> "foamliu/InsightFace-v2"
"TreB1eN/InsightFace_Pytorch" -> "timesler/facenet-pytorch"
"TreB1eN/InsightFace_Pytorch" -> "HuangYG123/CurricularFace"
"TreB1eN/InsightFace_Pytorch" -> "wy1iu/sphereface"
"TreB1eN/InsightFace_Pytorch" -> "clcarwin/sphereface_pytorch"
"TreB1eN/InsightFace_Pytorch" -> "Star-Clouds/CenterFace"
"TreB1eN/InsightFace_Pytorch" -> "Tencent/FaceDetection-DSFD"
"TreB1eN/InsightFace_Pytorch" -> "Xiaoccer/MobileFaceNet_Pytorch"
"foamliu/InsightFace-PyTorch" -> "foamliu/InsightFace-v2"
"foamliu/InsightFace-PyTorch" -> "nizhib/pytorch-insightface"
"foamliu/InsightFace-PyTorch" -> "XiaohangZhan/face_recognition_framework"
"foamliu/InsightFace-PyTorch" -> "LcenArthas/CCF-BDCI2019-Multi-person-Face-Recognition-Competition-Baseline"
"supernotman/RetinaFace_Pytorch" -> "ElvishElvis/68-Retinaface-Pytorch-version"
"supernotman/RetinaFace_Pytorch" -> "bogireddytejareddy/retinaface-pytorch"
"supernotman/RetinaFace_Pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"supernotman/RetinaFace_Pytorch" -> "biubug6/Pytorch_Retinaface"
"supernotman/RetinaFace_Pytorch" -> "zma-c-137/VarGFaceNet"
"supernotman/RetinaFace_Pytorch" -> "Media-Smart/vedadet"
"supernotman/RetinaFace_Pytorch" -> "clancylian/retinaface"
"supernotman/RetinaFace_Pytorch" -> "wondervictor/WiderFace-Evaluation"
"supernotman/RetinaFace_Pytorch" -> "HuangYG123/CurricularFace"
"supernotman/RetinaFace_Pytorch" -> "foamliu/InsightFace-PyTorch"
"supernotman/RetinaFace_Pytorch" -> "TreB1eN/InsightFace_Pytorch"
"supernotman/RetinaFace_Pytorch" -> "chenjun2hao/CenterFace.pytorch"
"supernotman/RetinaFace_Pytorch" -> "Star-Clouds/CenterFace"
"supernotman/RetinaFace_Pytorch" -> "zisianw/FaceBoxes.PyTorch"
"supernotman/RetinaFace_Pytorch" -> "Charrin/RetinaFace-Cpp"
"zisianw/FaceBoxes.PyTorch" -> "sfzhang15/FaceBoxes"
"zisianw/FaceBoxes.PyTorch" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"zisianw/FaceBoxes.PyTorch" -> "ChiCheng123/SRN"
"zisianw/FaceBoxes.PyTorch" -> "Star-Clouds/CenterFace"
"zisianw/FaceBoxes.PyTorch" -> "TropComplique/FaceBoxes-tensorflow"
"zisianw/FaceBoxes.PyTorch" -> "Rock-100/FaceKit"
"zisianw/FaceBoxes.PyTorch" -> "biubug6/Pytorch_Retinaface"
"zisianw/FaceBoxes.PyTorch" -> "Tencent/FaceDetection-DSFD"
"zisianw/FaceBoxes.PyTorch" -> "zeusees/FaceBoxes"
"zisianw/FaceBoxes.PyTorch" -> "mahyarnajibi/SSH"
"zisianw/FaceBoxes.PyTorch" -> "ZhaoJ9014/face.evoLVe"
"zisianw/FaceBoxes.PyTorch" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"zisianw/FaceBoxes.PyTorch" -> "dlunion/DBFace"
"zisianw/FaceBoxes.PyTorch" -> "cleardusk/3DDFA" ["e"=1]
"zisianw/FaceBoxes.PyTorch" -> "TreB1eN/InsightFace_Pytorch"
"tbmoon/facenet" -> "liorshk/facenet_pytorch"
"tbmoon/facenet" -> "tamerthamoqa/facenet-pytorch-glint360k"
"tbmoon/facenet" -> "tbmoon/basic_vqa" ["e"=1]
"tbmoon/facenet" -> "tbmoon/kalman_filter" ["e"=1]
"tbmoon/facenet" -> "BeiXi1949/Face-Recognition_FaceNet_PyTorch"
"tbmoon/facenet" -> "CaptainEven/FaceRecognition"
"tbmoon/facenet" -> "wujiyang/Face_Pytorch"
"tbmoon/facenet" -> "XiaohangZhan/face_recognition_framework"
"justusschock/shapenet" -> "D-X-Y/landmark-detection"
"justusschock/shapenet" -> "HRNet/HRNet-Facial-Landmark-Detection"
"justusschock/shapenet" -> "facebookresearch/supervision-by-registration"
"justusschock/shapenet" -> "wywu/LAB"
"justusschock/shapenet" -> "songhengyang/face_landmark_factory"
"justusschock/shapenet" -> "FengZhenhua/Wing-Loss"
"justusschock/shapenet" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"justusschock/shapenet" -> "TheSouthFrog/stylealign"
"justusschock/shapenet" -> "guoqiangqi/PFLD"
"justusschock/shapenet" -> "shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization"
"justusschock/shapenet" -> "TencentYoutuResearch/FaceAlignment-FHR" ["e"=1]
"Xiaoccer/MobileFaceNet_Pytorch" -> "foamliu/MobileFaceNet"
"Xiaoccer/MobileFaceNet_Pytorch" -> "sirius-ai/MobileFaceNet_TF"
"Xiaoccer/MobileFaceNet_Pytorch" -> "qidiso/mobilefacenet-V2"
"Xiaoccer/MobileFaceNet_Pytorch" -> "TreB1eN/InsightFace_Pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "cavalleria/cavaface"
"Xiaoccer/MobileFaceNet_Pytorch" -> "yeyupiaoling/Pytorch-MobileFaceNet"
"Xiaoccer/MobileFaceNet_Pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"Xiaoccer/MobileFaceNet_Pytorch" -> "MuggleWang/CosFace_pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "wujiyang/Face_Pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "xuexingyu24/MobileFaceNet_Tutorial_Pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "ronghuaiyang/arcface-pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "honghuCode/mobileFacenet-ncnn"
"Xiaoccer/MobileFaceNet_Pytorch" -> "zma-c-137/VarGFaceNet"
"Xiaoccer/MobileFaceNet_Pytorch" -> "wy1iu/sphereface"
"Xiaoccer/MobileFaceNet_Pytorch" -> "supernotman/RetinaFace_Pytorch"
"dozercodes/DecisionTree" -> "Erikfather/Decision_tree-python"
"4uiiurz1/keras-arcface" -> "peteryuX/arcface-tf2"
"4uiiurz1/keras-arcface" -> "leondgarse/Keras_insightface"
"4uiiurz1/keras-arcface" -> "auroua/InsightFace_TF"
"4uiiurz1/keras-arcface" -> "luckycallor/InsightFace-tensorflow"
"4uiiurz1/keras-arcface" -> "ktjonsson/keras-ArcFace"
"4uiiurz1/keras-arcface" -> "dmonterom/face_recognition_TF2"
"4uiiurz1/keras-arcface" -> "Fei-Wang/insightface"
"4uiiurz1/keras-arcface" -> "EncodeTS/TensorFlow_Center_Loss"
"4uiiurz1/keras-arcface" -> "LCorleone/Various-Loss-Function-in-Face-Recognition"
"4uiiurz1/keras-arcface" -> "hao-qiang/AM-Softmax"
"4uiiurz1/pytorch-adacos" -> "xiaoboCASIA/SV-X-Softmax"
"4uiiurz1/pytorch-adacos" -> "HuangYG123/CurricularFace"
"4uiiurz1/pytorch-adacos" -> "happynear/FaceDatasets"
"4uiiurz1/pytorch-adacos" -> "xialuxi/arcface-caffe"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "bruceyang2012/Face-identification-with-cnn-triplet-loss"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "bruceyang2012/Face-Alignment-with-simple-cnn"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "yeephycho/tensorflow-face-detection"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "tanakataiki/ssd_kerasV2"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "ManishSoni1908/Mobilenet-ssd-keras"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "yeephycho/widerface-to-tfrecord"
"tahaemara/sleep-detection" -> "raja434/driver-fatigue-detection-system"
"tahaemara/sleep-detection" -> "AnirudhGP/DrowsyDriverDetection"
"HRNet/HRNet-Facial-Landmark-Detection" -> "D-X-Y/landmark-detection"
"HRNet/HRNet-Facial-Landmark-Detection" -> "protossw512/AdaptiveWingLoss"
"HRNet/HRNet-Facial-Landmark-Detection" -> "polarisZhao/PFLD-pytorch"
"HRNet/HRNet-Facial-Landmark-Detection" -> "wywu/LAB"
"HRNet/HRNet-Facial-Landmark-Detection" -> "cunjian/pytorch_face_landmark"
"HRNet/HRNet-Facial-Landmark-Detection" -> "guoqiangqi/PFLD"
"HRNet/HRNet-Facial-Landmark-Detection" -> "jhb86253817/PIPNet"
"HRNet/HRNet-Facial-Landmark-Detection" -> "facebookresearch/supervision-by-registration"
"HRNet/HRNet-Facial-Landmark-Detection" -> "HRNet/HRNet-Image-Classification" ["e"=1]
"HRNet/HRNet-Facial-Landmark-Detection" -> "cleardusk/3DDFA_V2" ["e"=1]
"HRNet/HRNet-Facial-Landmark-Detection" -> "cleardusk/3DDFA" ["e"=1]
"HRNet/HRNet-Facial-Landmark-Detection" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"HRNet/HRNet-Facial-Landmark-Detection" -> "biubug6/Pytorch_Retinaface"
"HRNet/HRNet-Facial-Landmark-Detection" -> "Star-Clouds/CenterFace"
"HRNet/HRNet-Facial-Landmark-Detection" -> "610265158/face_landmark"
"Erikfather/Decision_tree-python" -> "dozercodes/DecisionTree"
"Erikfather/Decision_tree-python" -> "ryanmadden/decision-tree"
"Erikfather/Decision_tree-python" -> "tiepvupsu/DecisionTreeID3"
"Erikfather/Decision_tree-python" -> "JonathonYan1993/ML_DecisionTree_prepruning_postpruning"
"Erikfather/Decision_tree-python" -> "barisesmer/C4.5"
"Erikfather/Decision_tree-python" -> "SmallVagetable/machine_learning_python" ["e"=1]
"Erikfather/Decision_tree-python" -> "wepe/efficient-decision-tree-notes" ["e"=1]
"Erikfather/Decision_tree-python" -> "Rudo-erek/decision-tree"
"Erikfather/Decision_tree-python" -> "serengil/chefboost"
"Erikfather/Decision_tree-python" -> "lucksd356/DecisionTrees"
"Erikfather/Decision_tree-python" -> "zhaoxingfeng/RandomForest" ["e"=1]
"Erikfather/Decision_tree-python" -> "benedekrozemberczki/awesome-decision-tree-papers" ["e"=1]
"Erikfather/Decision_tree-python" -> "Freemanzxp/GBDT_Simple_Tutorial" ["e"=1]
"Erikfather/Decision_tree-python" -> "darlinglele/classification"
"Erikfather/Decision_tree-python" -> "michaeldorner/DecisionTrees"
"normandipalo/faceID_beta" -> "jongmoochoi/irisfaceRGBD" ["e"=1]
"normandipalo/faceID_beta" -> "auroua/InsightFace_TF"
"normandipalo/faceID_beta" -> "DeepSystems/supervisely-tutorials" ["e"=1]
"normandipalo/faceID_beta" -> "Skuldur/facenet-face-recognition"
"normandipalo/faceID_beta" -> "Fdevmsy/Image_Classification_with_5_methods" ["e"=1]
"normandipalo/faceID_beta" -> "harveyslash/Facial-Similarity-with-Siamese-Networks-in-Pytorch" ["e"=1]
"normandipalo/faceID_beta" -> "vsyw/Keras-OpenFace"
"normandipalo/faceID_beta" -> "Rock-100/FaceKit"
"normandipalo/faceID_beta" -> "SeuTao/FaceBagNet" ["e"=1]
"normandipalo/faceID_beta" -> "wy1iu/sphereface"
"iitzco/faced" -> "sthanhng/yoloface"
"iitzco/faced" -> "ildoonet/deepface"
"iitzco/faced" -> "yeephycho/tensorflow-face-detection"
"iitzco/faced" -> "sfzhang15/FaceBoxes"
"iitzco/faced" -> "szad670401/Fast-MTCNN"
"iitzco/faced" -> "cydonia999/Tiny_Faces_in_Tensorflow"
"iitzco/faced" -> "EricZgw/PyramidBox"
"iitzco/faced" -> "iitzco/tfserve"
"iitzco/faced" -> "peiyunh/tiny"
"iitzco/faced" -> "Rock-100/FaceKit"
"iitzco/faced" -> "abars/YoloKerasFaceDetection"
"haofanwang/accurate-head-pose" -> "MingzhenShao/HeadPose"
"haofanwang/accurate-head-pose" -> "shamangary/FSA-Net"
"haofanwang/accurate-head-pose" -> "stevenyangyj/deep-head-pose-lite"
"haofanwang/accurate-head-pose" -> "haofanwang/mxnet-Head-Pose"
"shamangary/FSA-Net" -> "natanielruiz/deep-head-pose"
"shamangary/FSA-Net" -> "haofanwang/accurate-head-pose"
"shamangary/FSA-Net" -> "omasaht/headpose-fsanet-pytorch"
"shamangary/FSA-Net" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"shamangary/FSA-Net" -> "vitoralbiero/img2pose"
"shamangary/FSA-Net" -> "thohemp/6DRepNet"
"shamangary/FSA-Net" -> "stevenyangyj/deep-head-pose-lite"
"shamangary/FSA-Net" -> "yinguobing/head-pose-estimation"
"shamangary/FSA-Net" -> "WIKI2020/FacePose_pytorch"
"shamangary/FSA-Net" -> "polarisZhao/PFLD-pytorch"
"shamangary/FSA-Net" -> "shamangary/SSR-Net"
"shamangary/FSA-Net" -> "guoqiangqi/PFLD"
"shamangary/FSA-Net" -> "lincolnhard/head-pose-estimation"
"shamangary/FSA-Net" -> "Tobias-Fischer/rt_gene" ["e"=1]
"shamangary/FSA-Net" -> "610265158/Peppa_Pig_Face_Landmark"
"stevenyangyj/deep-head-pose-lite" -> "natanielruiz/deep-head-pose"
"stevenyangyj/deep-head-pose-lite" -> "haofanwang/accurate-head-pose"
"stevenyangyj/deep-head-pose-lite" -> "Oreobird/tf-keras-deep-head-pose"
"stevenyangyj/deep-head-pose-lite" -> "shamangary/FSA-Net"
"stevenyangyj/deep-head-pose-lite" -> "natanielruiz/dockerface"
"akshaybahadur21/Digit-Recognizer" -> "akshaybahadur21/HandMovementTracking"
"jihunchoi/lsoftmax-pytorch" -> "amirhfarzaneh/lsoftmax-pytorch"
"shamangary/SSR-Net" -> "b02901145/SSR-Net_megaage-asian"
"shamangary/SSR-Net" -> "wayen820/gender_age_estimation_mxnet"
"shamangary/SSR-Net" -> "yu4u/age-gender-estimation"
"shamangary/SSR-Net" -> "yu4u/age-estimation-pytorch"
"shamangary/SSR-Net" -> "vicwer/C3AE_Age_Estimation"
"shamangary/SSR-Net" -> "oukohou/SSR_Net_Pytorch"
"shamangary/SSR-Net" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"shamangary/SSR-Net" -> "StevenBanama/C3AE"
"shamangary/SSR-Net" -> "shamangary/FSA-Net"
"shamangary/SSR-Net" -> "siriusdemon/pytorch-DEX"
"shamangary/SSR-Net" -> "dpressel/rude-carnie"
"shamangary/SSR-Net" -> "GilLevi/AgeGenderDeepLearning"
"shamangary/SSR-Net" -> "wywu/LAB"
"shamangary/SSR-Net" -> "CrazySummerday/SSR-Net"
"shamangary/SSR-Net" -> "fwang91/IMDb-Face"
"msight-tech/research-ms-loss" -> "bnu-wangxun/Deep_Metric"
"msight-tech/research-ms-loss" -> "Confusezius/Deep-Metric-Learning-Baselines"
"msight-tech/research-ms-loss" -> "msight-tech/research-xbm"
"msight-tech/research-ms-loss" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"msight-tech/research-ms-loss" -> "kdhht2334/Survey_of_Deep_Metric_Learning"
"msight-tech/research-ms-loss" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"msight-tech/research-ms-loss" -> "Confusezius/ICCV2019_MIC"
"msight-tech/research-ms-loss" -> "KevinMusgrave/powerful-benchmarker"
"msight-tech/research-ms-loss" -> "leeesangwon/PyTorch-Image-Retrieval" ["e"=1]
"msight-tech/research-ms-loss" -> "dichotomies/proxy-nca"
"msight-tech/research-ms-loss" -> "wzzheng/HDML"
"msight-tech/research-ms-loss" -> "idstcv/SoftTriple"
"msight-tech/research-ms-loss" -> "CompVis/metric-learning-divide-and-conquer"
"msight-tech/research-ms-loss" -> "rksltnl/Deep-Metric-Learning-CVPR16"
"msight-tech/research-ms-loss" -> "TinyZeaMays/CircleLoss"
"dlunion/OpenPose" -> "dlunion/EasyOpenPose"
"dlunion/OpenPose" -> "dlunion/CC4.0"
"dlunion/OpenPose" -> "lincolnhard/openpose-darknet"
"dlunion/OpenPose" -> "dlunion/mtcnn"
"dlunion/OpenPose" -> "murdockhou/lightweight_openpose" ["e"=1]
"lincolnhard/openpose-darknet" -> "dlunion/EasyOpenPose"
"lincolnhard/openpose-darknet" -> "lincolnhard/facenet-darknet-inference"
"iArunava/YOLOv3-Object-Detection-with-OpenCV" -> "arunponnusamy/object-detection-opencv"
"iArunava/YOLOv3-Object-Detection-with-OpenCV" -> "Surya-Murali/Real-Time-Object-Detection-With-OpenCV"
"iArunava/YOLOv3-Object-Detection-with-OpenCV" -> "lbeaucourt/Object-detection"
"Linzaer/Face-Track-Detect-Extract" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"Linzaer/Face-Track-Detect-Extract" -> "ZidanMusk/experimenting-with-sort" ["e"=1]
"Linzaer/Face-Track-Detect-Extract" -> "Star-Clouds/CenterFace"
"Linzaer/Face-Track-Detect-Extract" -> "biubug6/Face-Detector-1MB-with-landmark"
"Linzaer/Face-Track-Detect-Extract" -> "pyannote/pyannote-video" ["e"=1]
"Linzaer/Face-Track-Detect-Extract" -> "szad670401/Fast-MTCNN"
"Linzaer/Face-Track-Detect-Extract" -> "zeusees/FaceBoxes"
"Linzaer/Face-Track-Detect-Extract" -> "Rock-100/FaceKit"
"Linzaer/Face-Track-Detect-Extract" -> "becauseofAI/MobileFace" ["e"=1]
"Linzaer/Face-Track-Detect-Extract" -> "guoqiangqi/PFLD"
"Linzaer/Face-Track-Detect-Extract" -> "dlunion/mtcnn"
"Linzaer/Face-Track-Detect-Extract" -> "AlphaQi/MTCNN-light"
"Linzaer/Face-Track-Detect-Extract" -> "qaz734913414/Ncnn_FaceTrack"
"Linzaer/Face-Track-Detect-Extract" -> "zuoqing1988/ZQCNN"
"Linzaer/Face-Track-Detect-Extract" -> "moli232777144/mtcnn_ncnn"
"KaiyangZhou/pytorch-center-loss" -> "jxgu1016/MNIST_center_loss_pytorch"
"KaiyangZhou/pytorch-center-loss" -> "louis-she/center-loss.pytorch"
"KaiyangZhou/pytorch-center-loss" -> "ronghuaiyang/arcface-pytorch"
"KaiyangZhou/pytorch-center-loss" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"KaiyangZhou/pytorch-center-loss" -> "amirhfarzaneh/lsoftmax-pytorch"
"KaiyangZhou/pytorch-center-loss" -> "YirongMao/softmax_variants"
"KaiyangZhou/pytorch-center-loss" -> "Cysu/open-reid" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "clcarwin/sphereface_pytorch"
"KaiyangZhou/pytorch-center-loss" -> "TinyZeaMays/CircleLoss"
"KaiyangZhou/pytorch-center-loss" -> "adambielski/siamese-triplet" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "megvii-research/BBN" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "tengshaofeng/ResidualAttentionNetwork-pytorch" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "CoinCheung/pytorch-loss" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "MuggleWang/CosFace_pytorch"
"KaiyangZhou/pytorch-center-loss" -> "huanghoujing/person-reid-triplet-loss-baseline" ["e"=1]
"jamesluozhiwei/seetafaceJNI" -> "tracy100/seetaface6SDK"
"jamesluozhiwei/seetafaceJNI" -> "seetaface/SeetaFaceEngine2"
"jamesluozhiwei/seetafaceJNI" -> "shuguoli68/LiSeetaFace2"
"jamesluozhiwei/seetafaceJNI" -> "xiaoxiaoazhang/SeetaFace2AndroidDemo"
"Raschka-research-group/coral-cnn" -> "Nicholasli1995/VisualizingNDF"
"Raschka-research-group/coral-cnn" -> "Raschka-research-group/coral-pytorch"
"Raschka-research-group/coral-cnn" -> "EthanRosenthal/spacecutter"
"Raschka-research-group/coral-cnn" -> "nhshin-mcl/MWR"
"Raschka-research-group/coral-cnn" -> "Raschka-research-group/corn-ordinal-neuralnet"
"Raschka-research-group/coral-cnn" -> "StevenBanama/C3AE"
"Raschka-research-group/coral-cnn" -> "Herosan163/AgeEstimation"
"Raschka-research-group/coral-cnn" -> "gaobb/DLDL-v2"
"Raschka-research-group/coral-cnn" -> "ck37/coral-ordinal"
"Raschka-research-group/coral-cnn" -> "yu4u/age-estimation-pytorch"
"Raschka-research-group/coral-cnn" -> "axeber01/dold"
"Raschka-research-group/coral-cnn" -> "shamangary/SSR-Net"
"Raschka-research-group/coral-cnn" -> "imdeepmind/processed-imdb-wiki-dataset"
"Raschka-research-group/coral-cnn" -> "JingchunCheng/All-Age-Faces-Dataset"
"Raschka-research-group/coral-cnn" -> "kongsicong/Age_recognition_OR"
"dodona-edu/dolos" -> "blingenf/copydetect"
"dodona-edu/dolos" -> "TylerJaacks/ItsJustACoincidenceProfessor"
"dodona-edu/dolos" -> "dodona-edu/dodona"
"dodona-edu/dolos" -> "diogocabral/sherlock"
"dodona-edu/dolos" -> "architshukla/Plagiarism-Checker"
"happynear/AMSoftmax" -> "happynear/NormFace"
"happynear/AMSoftmax" -> "wy1iu/sphereface"
"happynear/AMSoftmax" -> "happynear/FaceDatasets"
"happynear/AMSoftmax" -> "wy1iu/LargeMargin_Softmax_Loss"
"happynear/AMSoftmax" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"happynear/AMSoftmax" -> "xialuxi/arcface-caffe"
"happynear/AMSoftmax" -> "liuyuisanai/coco_loss"
"happynear/AMSoftmax" -> "Joker316701882/Additive-Margin-Softmax"
"happynear/AMSoftmax" -> "fwang91/IMDb-Face"
"happynear/AMSoftmax" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"happynear/AMSoftmax" -> "happynear/FaceVerification"
"happynear/AMSoftmax" -> "ydwen/caffe-face"
"happynear/AMSoftmax" -> "liuyuisanai/RSA-for-object-detection"
"happynear/AMSoftmax" -> "KaleidoZhouYN/mobilefacenet-caffe"
"happynear/AMSoftmax" -> "KaleidoZhouYN/Loss-Functions"
"Joker316701882/Additive-Margin-Softmax" -> "happynear/AMSoftmax"
"Joker316701882/Additive-Margin-Softmax" -> "yule-li/CosFace"
"Joker316701882/Additive-Margin-Softmax" -> "wy1iu/sphereface"
"Joker316701882/Additive-Margin-Softmax" -> "happynear/NormFace"
"Joker316701882/Additive-Margin-Softmax" -> "auroua/InsightFace_TF"
"Joker316701882/Additive-Margin-Softmax" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"Joker316701882/Additive-Margin-Softmax" -> "happynear/FaceDatasets"
"Joker316701882/Additive-Margin-Softmax" -> "fwang91/IMDb-Face"
"Joker316701882/Additive-Margin-Softmax" -> "liuyuisanai/RSA-for-object-detection"
"Joker316701882/Additive-Margin-Softmax" -> "liuyuisanai/coco_loss"
"Joker316701882/Additive-Margin-Softmax" -> "clcarwin/sphereface_pytorch"
"Joker316701882/Additive-Margin-Softmax" -> "pppoe/tensorflow-sphereface-asoftmax"
"Joker316701882/Additive-Margin-Softmax" -> "HiKapok/tf.extra_losses"
"Joker316701882/Additive-Margin-Softmax" -> "happynear/FaceVerification"
"Joker316701882/Additive-Margin-Softmax" -> "xiaoboCASIA/SV-X-Softmax"
"nenadmarkus/pico" -> "wincle/NPD"
"nenadmarkus/pico" -> "patrikhuber/superviseddescent"
"nenadmarkus/pico" -> "yulequan/face-alignment-in-3000fps"
"nenadmarkus/pico" -> "luoyetx/JDA"
"nenadmarkus/pico" -> "freesouls/face-alignment-at-3000fps"
"nenadmarkus/pico" -> "CitrusRokid/OpenNPD"
"nenadmarkus/pico" -> "tntrung/sdm_face_alignment"
"nenadmarkus/pico" -> "luoyetx/face-alignment-at-3000fps"
"nenadmarkus/pico" -> "jwyang/face-alignment"
"nenadmarkus/pico" -> "chengzhengxin/sdm"
"nenadmarkus/pico" -> "qiexing/face-landmark-localization"
"nenadmarkus/pico" -> "sai-bi/FaceAlignment"
"nenadmarkus/pico" -> "foreverYoungGitHub/MTCNN"
"nenadmarkus/pico" -> "Seanlinx/mtcnn"
"nenadmarkus/pico" -> "AlphaQi/MTCNN-light"
"KinWaiCheuk/Triplet-net-keras" -> "AdrianUng/keras-triplet-loss-mnist"
"KinWaiCheuk/Triplet-net-keras" -> "noelcodella/tripletloss-keras-tensorflow"
"KinWaiCheuk/Triplet-net-keras" -> "asparagus/triplet-net"
"sanku-lib/image_triplet_loss" -> "shivsondhi/Triplet-Loss"
"sanku-lib/image_triplet_loss" -> "KinWaiCheuk/Triplet-net-keras"
"sanku-lib/image_triplet_loss" -> "Ekeany/Siamese-Network-with-Triplet-Loss"
"auroua/InsightFace_TF" -> "luckycallor/InsightFace-tensorflow"
"auroua/InsightFace_TF" -> "AIInAi/tf-insightface"
"auroua/InsightFace_TF" -> "Joker316701882/Additive-Margin-Softmax"
"auroua/InsightFace_TF" -> "sirius-ai/MobileFaceNet_TF"
"auroua/InsightFace_TF" -> "Fei-Wang/insightface"
"auroua/InsightFace_TF" -> "yule-li/CosFace"
"auroua/InsightFace_TF" -> "wy1iu/sphereface"
"auroua/InsightFace_TF" -> "happynear/AMSoftmax"
"auroua/InsightFace_TF" -> "wywu/LAB"
"auroua/InsightFace_TF" -> "AITTSMD/MTCNN-Tensorflow"
"auroua/InsightFace_TF" -> "moli232777144/mobilefacenet-mxnet"
"auroua/InsightFace_TF" -> "fwang91/IMDb-Face"
"auroua/InsightFace_TF" -> "4uiiurz1/keras-arcface"
"auroua/InsightFace_TF" -> "happynear/FaceDatasets"
"auroua/InsightFace_TF" -> "Rock-100/FaceKit"
"itboyst/ArcSoftFaceDemo" -> "chengxy-nds/ArcSoftFaceDemo"
"itboyst/ArcSoftFaceDemo" -> "itboyst/ArcSoftFaceDemoUI"
"itboyst/ArcSoftFaceDemo" -> "jastar-wang/arcface"
"itboyst/ArcSoftFaceDemo" -> "itboyst/ArcSoftFaceFrameDemo"
"itboyst/ArcSoftFaceDemo" -> "joetang1989/ArcFaceRecognizeDemo"
"itboyst/ArcSoftFaceDemo" -> "asdfqwrasdf/ArcFaceDemo"
"itboyst/ArcSoftFaceDemo" -> "ycdtbs/Face-recognition"
"itboyst/ArcSoftFaceDemo" -> "SkyStonePan/ArcfaceDemo_Android"
"itboyst/ArcSoftFaceDemo" -> "seetaface/SeetaFaceEngine2"
"itboyst/ArcSoftFaceDemo" -> "smartkids77/ArcSoft_FreeSDK_Demo"
"itboyst/ArcSoftFaceDemo" -> "niehen6174/face_detection_and_recognition"
"HosniMansour/Unity3DFaceTtracking" -> "edk208/mixamoFaceTransfer"
"JingchunCheng/All-Age-Faces-Dataset" -> "deepinx/age-gender-estimation"
"baomingwang/MTCNN-Tensorflow" -> "LeslieZhoa/tensorflow-MTCNN"
"baomingwang/MTCNN-Tensorflow" -> "BobLiu20/mtcnn_tf"
"baomingwang/MTCNN-Tensorflow" -> "look4pritam/tfmtcnn"
"baomingwang/MTCNN-Tensorflow" -> "AITTSMD/MTCNN-Tensorflow"
"penincillin/DREAM" -> "HRLTY/TP-GAN" ["e"=1]
"penincillin/DREAM" -> "fwang91/IMDb-Face"
"penincillin/DREAM" -> "iacopomasi/face_specific_augm" ["e"=1]
"penincillin/DREAM" -> "liuyuisanai/RSA-for-object-detection"
"penincillin/DREAM" -> "KaleidoZhouYN/Pytorch_FRS"
"penincillin/DREAM" -> "clcarwin/sphereface_pytorch"
"penincillin/DREAM" -> "happynear/FaceDatasets"
"penincillin/DREAM" -> "XiaohangZhan/cdp"
"penincillin/DREAM" -> "wy1iu/sphereface"
"penincillin/DREAM" -> "huangyangyu/NoiseFace"
"penincillin/DREAM" -> "zhangjunh/DR-GAN-by-pytorch" ["e"=1]
"penincillin/DREAM" -> "happynear/NormFace"
"penincillin/DREAM" -> "happynear/AMSoftmax"
"penincillin/DREAM" -> "ZhaoJ9014/High-Performance-Face-Recognition" ["e"=1]
"penincillin/DREAM" -> "mx54039q/fnm" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "kpzhang93/MTCNN_face_detection_alignment"
"AITTSMD/MTCNN-Tensorflow" -> "CongWeilin/mtcnn-caffe"
"AITTSMD/MTCNN-Tensorflow" -> "Seanlinx/mtcnn"
"AITTSMD/MTCNN-Tensorflow" -> "LeslieZhoa/tensorflow-MTCNN"
"AITTSMD/MTCNN-Tensorflow" -> "dlunion/mtcnn"
"AITTSMD/MTCNN-Tensorflow" -> "shanren7/real_time_face_recognition"
"AITTSMD/MTCNN-Tensorflow" -> "davidsandberg/facenet"
"AITTSMD/MTCNN-Tensorflow" -> "ipazc/mtcnn"
"AITTSMD/MTCNN-Tensorflow" -> "Tencent/FaceDetection-DSFD"
"AITTSMD/MTCNN-Tensorflow" -> "wy1iu/sphereface"
"AITTSMD/MTCNN-Tensorflow" -> "zuoqing1988/ZQCNN"
"AITTSMD/MTCNN-Tensorflow" -> "AlphaQi/MTCNN-light"
"AITTSMD/MTCNN-Tensorflow" -> "auroua/InsightFace_TF"
"AITTSMD/MTCNN-Tensorflow" -> "ydwen/caffe-face"
"AITTSMD/MTCNN-Tensorflow" -> "moli232777144/mtcnn_ncnn"
"pppoe/tensorflow-sphereface-asoftmax" -> "hujun100/tensorflow-sphereface"
"pppoe/tensorflow-sphereface-asoftmax" -> "YunYang1994/SphereFace"
"pppoe/tensorflow-sphereface-asoftmax" -> "HiKapok/tf.extra_losses"
"pppoe/tensorflow-sphereface-asoftmax" -> "andrewhuman/sphereloss_tensorflow"
"pppoe/tensorflow-sphereface-asoftmax" -> "EncodeTS/TensorFlow_Center_Loss"
"sirius-ai/MobileFaceNet_TF" -> "qidiso/mobilefacenet-V2"
"sirius-ai/MobileFaceNet_TF" -> "yangxue0827/MobileFaceNet_Tensorflow"
"sirius-ai/MobileFaceNet_TF" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"sirius-ai/MobileFaceNet_TF" -> "Xiaoccer/MobileFaceNet_Pytorch"
"sirius-ai/MobileFaceNet_TF" -> "auroua/InsightFace_TF"
"sirius-ai/MobileFaceNet_TF" -> "estebanuri/face_recognition"
"sirius-ai/MobileFaceNet_TF" -> "honghuCode/mobileFacenet-ncnn"
"sirius-ai/MobileFaceNet_TF" -> "moli232777144/mobilefacenet-mxnet"
"sirius-ai/MobileFaceNet_TF" -> "jiangxiluning/facenet_mtcnn_to_mobile"
"sirius-ai/MobileFaceNet_TF" -> "luckycallor/InsightFace-tensorflow"
"sirius-ai/MobileFaceNet_TF" -> "yule-li/CosFace"
"sirius-ai/MobileFaceNet_TF" -> "zhanglaplace/MobileFaceNet"
"sirius-ai/MobileFaceNet_TF" -> "AIInAi/tf-insightface"
"sirius-ai/MobileFaceNet_TF" -> "AITTSMD/MTCNN-Tensorflow"
"sirius-ai/MobileFaceNet_TF" -> "GRAYKEY/mobilefacenet_ncnn"
"fwang91/IMDb-Face" -> "happynear/FaceDatasets"
"fwang91/IMDb-Face" -> "happynear/AMSoftmax"
"fwang91/IMDb-Face" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"fwang91/IMDb-Face" -> "happynear/NormFace"
"fwang91/IMDb-Face" -> "wy1iu/sphereface"
"fwang91/IMDb-Face" -> "liuyuisanai/coco_loss"
"fwang91/IMDb-Face" -> "cleardusk/MeGlass"
"fwang91/IMDb-Face" -> "liuyuisanai/RSA-for-object-detection"
"fwang91/IMDb-Face" -> "Joker316701882/Additive-Margin-Softmax"
"fwang91/IMDb-Face" -> "moli232777144/mobilefacenet-mxnet"
"fwang91/IMDb-Face" -> "penincillin/DREAM"
"fwang91/IMDb-Face" -> "KaleidoZhouYN/Pytorch_FRS"
"fwang91/IMDb-Face" -> "xiaoboCASIA/SV-X-Softmax"
"fwang91/IMDb-Face" -> "wy1iu/sphereface-plus"
"fwang91/IMDb-Face" -> "seasonSH/DocFace"
"b02901145/SSR-Net_megaage-asian" -> "shamangary/SSR-Net"
"b02901145/SSR-Net_megaage-asian" -> "wayen820/gender_age_estimation_mxnet"
"b02901145/SSR-Net_megaage-asian" -> "vicwer/C3AE_Age_Estimation"
"haofanwang/mxnet-Head-Pose" -> "Cjiangbpcs/gazenet_mxJiang"
"XiaohangZhan/cdp" -> "yl-1993/learn-to-cluster"
"XiaohangZhan/cdp" -> "Zhongdao/gcn_clustering"
"XiaohangZhan/cdp" -> "XiaohangZhan/face_recognition_framework"
"XiaohangZhan/cdp" -> "happynear/FaceDatasets"
"XiaohangZhan/cdp" -> "sstzal/STAR-FC"
"XiaohangZhan/cdp" -> "seasonSH/Probabilistic-Face-Embeddings"
"XiaohangZhan/cdp" -> "happynear/NormFace"
"XiaohangZhan/cdp" -> "varun-suresh/Clustering"
"XiaohangZhan/cdp" -> "fwang91/IMDb-Face"
"XiaohangZhan/cdp" -> "penincillin/DREAM"
"XiaohangZhan/cdp" -> "xiaoxiong74/face-cluster-by-infomap"
"XiaohangZhan/cdp" -> "happynear/AMSoftmax"
"XiaohangZhan/cdp" -> "yl-1993/hfsoftmax"
"XiaohangZhan/cdp" -> "liuyuisanai/RSA-for-object-detection"
"XiaohangZhan/cdp" -> "XiaohangZhan/conditional-motion-propagation" ["e"=1]
"wayen820/gender_age_estimation_mxnet" -> "deepinx/age-gender-estimation"
"wayen820/gender_age_estimation_mxnet" -> "b02901145/SSR-Net_megaage-asian"
"wayen820/gender_age_estimation_mxnet" -> "shamangary/SSR-Net"
"wayen820/gender_age_estimation_mxnet" -> "ivclab/agegenderLMTCNN" ["e"=1]
"wayen820/gender_age_estimation_mxnet" -> "haofanwang/mxnet-Head-Pose"
"zuoqing1988/train-mtcnn" -> "zuoqing1988/train-GenderAge"
"zuoqing1988/train-mtcnn" -> "dlunion/mtcnn"
"zuoqing1988/train-mtcnn" -> "luoyetx/Joint-Face-Detection-and-Alignment"
"zuoqing1988/train-mtcnn" -> "KangKangLoveCat/insightface_ncnn"
"zuoqing1988/train-mtcnn" -> "olojuwin/facerecognize-for-mobile-phone"
"MrZhousf/tf_facenet" -> "windzu/facenet_facerecognition"
"MrZhousf/tf_facenet" -> "LeslieZhoa/tensorflow-facenet"
"MrZhousf/tf_facenet" -> "bubbliiiing/keras-face-recognition" ["e"=1]
"MrZhousf/tf_facenet" -> "chenlinzhong/face-login"
"MrZhousf/tf_facenet" -> "vincentwei0919/insightface_for_face_recognition"
"valerystrizh/pytorch-histogram-loss" -> "madkn/HistogramLoss"
"valerystrizh/pytorch-histogram-loss" -> "dichotomies/proxy-nca"
"valerystrizh/pytorch-histogram-loss" -> "Confusezius/ICCV2019_MIC"
"seasonSH/Probabilistic-Face-Embeddings" -> "Ontheway361/dul-pytorch"
"seasonSH/Probabilistic-Face-Embeddings" -> "xiaoboCASIA/SV-X-Softmax"
"seasonSH/Probabilistic-Face-Embeddings" -> "huangyangyu/NoiseFace"
"seasonSH/Probabilistic-Face-Embeddings" -> "HuangYG123/CurricularFace"
"seasonSH/Probabilistic-Face-Embeddings" -> "IrvingMeng/MagFace"
"seasonSH/Probabilistic-Face-Embeddings" -> "XiaohangZhan/cdp"
"seasonSH/Probabilistic-Face-Embeddings" -> "javier-hernandezo/FaceQnet"
"seasonSH/Probabilistic-Face-Embeddings" -> "Ontheway361/pfe-pytorch"
"seasonSH/Probabilistic-Face-Embeddings" -> "cleardusk/MFR"
"seasonSH/Probabilistic-Face-Embeddings" -> "Zhongdao/gcn_clustering"
"seasonSH/Probabilistic-Face-Embeddings" -> "liuyuisanai/trojans-face-recognizer"
"seasonSH/Probabilistic-Face-Embeddings" -> "pterhoer/FaceImageQuality"
"seasonSH/Probabilistic-Face-Embeddings" -> "zhongyy/Unequal-Training-for-Deep-Face-Recognition-with-Long-Tailed-Noisy-Data"
"seasonSH/Probabilistic-Face-Embeddings" -> "KaenChan/ProbFace"
"seasonSH/Probabilistic-Face-Embeddings" -> "zma-c-137/VarGFaceNet"
"xg-zhang/faceRegister" -> "waiterxiaoyy/waiter-facerecognition-python"
"xg-zhang/faceRegister" -> "Sharpiless/Face-recognition-for-classroom-sign-in"
"xg-zhang/faceRegister" -> "tf2jaguar/pytorch_train"
"xg-zhang/faceRegister" -> "luqicoder/FR-system"
"xg-zhang/faceRegister" -> "Yaoshicn/decaptcha" ["e"=1]
"xg-zhang/faceRegister" -> "DeathYmz/Check-in-and-Check-out-System-for-Face-Recognition"
"xg-zhang/faceRegister" -> "veraposeidon/Insect_Identification" ["e"=1]
"xg-zhang/faceRegister" -> "yinghualuowu/Python_VLPR" ["e"=1]
"xg-zhang/faceRegister" -> "mengyue0722/Face-swiping-Time-Attendance-System"
"lbeaucourt/Object-detection" -> "gustavz/realtime_object_detection" ["e"=1]
"lbeaucourt/Object-detection" -> "iArunava/YOLOv3-Object-Detection-with-OpenCV"
"lbeaucourt/Object-detection" -> "datitran/object_detector_app" ["e"=1]
"lbeaucourt/Object-detection" -> "DrewNF/Tensorflow_Object_Tracking_Video" ["e"=1]
"lbeaucourt/Object-detection" -> "myfavouritekk/vdetlib" ["e"=1]
"66pig/face_recognition" -> "inspurer/WorkAttendanceSystem"
"66pig/face_recognition" -> "eai2x/Face-Recognition-Class-Attendance-System"
"66pig/face_recognition" -> "waiterxiaoyy/waiter-facerecognition-python"
"66pig/face_recognition" -> "librahfacebook/Face"
"66pig/face_recognition" -> "reece15/cnn_face_detection"
"66pig/face_recognition" -> "mengyue0722/Face-swiping-Time-Attendance-System"
"66pig/face_recognition" -> "yeziyang1992/Face_Recognition_Client"
"66pig/face_recognition" -> "king-xw/Face_Recogntion"
"66pig/face_recognition" -> "BrucePoki/Attendance-system"
"66pig/face_recognition" -> "liqq1228/python-opencv"
"66pig/face_recognition" -> "z0gSh1u/pr-attendance"
"Alex13832/FaceSwap-Android" -> "androidroadies/FaceSwap"
"Alex13832/FaceSwap-Android" -> "tunaemre/Face-Swap-Android"
"foamliu/InsightFace-v2" -> "foamliu/InsightFace-PyTorch"
"foamliu/InsightFace-v2" -> "TreB1eN/InsightFace_Pytorch"
"foamliu/InsightFace-v2" -> "wujiyang/Face_Pytorch"
"foamliu/InsightFace-v2" -> "HuangYG123/CurricularFace"
"foamliu/InsightFace-v2" -> "QuasarLight/Pytorch_Face_Recognition"
"foamliu/InsightFace-v2" -> "XiaohangZhan/face_recognition_framework"
"foamliu/InsightFace-v2" -> "bleakie/MaskInsightface"
"foamliu/InsightFace-v2" -> "cavalleria/cavaface"
"foamliu/InsightFace-v2" -> "ronghuaiyang/arcface-pytorch"
"foamliu/InsightFace-v2" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"foamliu/InsightFace-v2" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"kangdp/MiniTodo" -> "kangdp/TptDialSample"
"kangdp/MiniTodo" -> "kangdp/KPermission"
"Reginer/MVVMHub" -> "yuxitong/AndroidLivePusher"
"Reginer/MVVMHub" -> "kangdp/StarBarcode"
"Reginer/MVVMHub" -> "DaveBoy/AndroidLocalizationer"
"Reginer/MVVMHub" -> "wushaoge/WsgMvvm"
"Reginer/MVVMHub" -> "kangdp/TptDialSample"
"Reginer/MVVMHub" -> "Reginer/Renju"
"Reginer/MVVMHub" -> "Reginer/AutoAPKTool"
"Reginer/MVVMHub" -> "wuyr/ActivityMessenger"
"Reginer/MVVMHub" -> "WANZIzZ/RowingView"
"xuexingyu24/MobileFaceNet_Tutorial_Pytorch" -> "xuexingyu24/Pruning_MTCNN_MobileFaceNet_Using_Pytorch"
"xuexingyu24/MobileFaceNet_Tutorial_Pytorch" -> "foamliu/MobileFaceNet"
"BlcaKHat/yolov3-Helmet-Detection" -> "AyazSaiyed/Helmet-Detection-"
"BlcaKHat/yolov3-Helmet-Detection" -> "wujixiu/helmet-detection"
"BlcaKHat/yolov3-Helmet-Detection" -> "Angericky/safety-helmet-detection-in-real-time-video"
"BlcaKHat/yolov3-Helmet-Detection" -> "iamdsc/automatic-helmet-detection"
"BlcaKHat/yolov3-Helmet-Detection" -> "rafiuddinkhan/Yolo-Training-GoogleColab"
"BlcaKHat/yolov3-Helmet-Detection" -> "weimin17/Object-Detection_HelmetDetection"
"AnshulSood11/PPE-Detection-YOLO-Deep_SORT" -> "CiscoDevNet/ppe-detection"
"AnshulSood11/PPE-Detection-YOLO-Deep_SORT" -> "rekon/keras-yolo2"
"AnshulSood11/PPE-Detection-YOLO-Deep_SORT" -> "y3mr3/PPE-Detection-YOLO"
"AnshulSood11/PPE-Detection-YOLO-Deep_SORT" -> "snehilsanyal/Construction-Site-Safety-PPE-Detection"
"AnshulSood11/PPE-Detection-YOLO-Deep_SORT" -> "ZijianWang-ZW/PPE_detection"
"AnshulSood11/PPE-Detection-YOLO-Deep_SORT" -> "ciber-lab/pictor-ppe"
"AnshulSood11/PPE-Detection-YOLO-Deep_SORT" -> "wujixiu/helmet-detection"
"KaleidoZhouYN/mobilefacenet-caffe" -> "zhanglaplace/MobileFaceNet"
"KaleidoZhouYN/mobilefacenet-caffe" -> "imistyrain/MobileFaceNet"
"KaleidoZhouYN/mobilefacenet-caffe" -> "GarrickLin/MXNet2Caffe"
"KaleidoZhouYN/mobilefacenet-caffe" -> "AlfredXiangWu/MsCelebFaceExtract"
"pillarpond/face-recognizer-android" -> "Lauszus/FaceRecognitionApp"
"pillarpond/face-recognizer-android" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework"
"pillarpond/face-recognizer-android" -> "jiangxiluning/facenet_mtcnn_to_mobile"
"pillarpond/face-recognizer-android" -> "vcvycy/MTCNN4Android"
"pillarpond/face-recognizer-android" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"pillarpond/face-recognizer-android" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"pillarpond/face-recognizer-android" -> "Zod20/OpenCV-Face-Recognition-Android"
"pillarpond/face-recognizer-android" -> "Monologuethl/Android_Facenet_Recognition"
"pillarpond/face-recognizer-android" -> "vcvycy/Android_Facenet"
"pillarpond/face-recognizer-android" -> "gv22ga/dlib-face-recognition-android"
"pillarpond/face-recognizer-android" -> "abhn/marvel"
"pillarpond/face-recognizer-android" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"pillarpond/face-recognizer-android" -> "estebanuri/face_recognition"
"pillarpond/face-recognizer-android" -> "GthanosAI/android_mtcnn_insightface_face_recognize"
"pillarpond/face-recognizer-android" -> "GRAYKEY/mobilefacenet_android"
"JACKYLUO1991/106-landmarks-dataset" -> "chengzhengxin/deep-sdm"
"JACKYLUO1991/106-landmarks-dataset" -> "610265158/face_landmark"
"JACKYLUO1991/106-landmarks-dataset" -> "chengzhengxin/sdm"
"tkat0/PyTorch_BlazeFace" -> "shanglianlm0525/BlazeFace"
"tkat0/PyTorch_BlazeFace" -> "hollance/BlazeFace-PyTorch"
"tkat0/PyTorch_BlazeFace" -> "kentaroy47/BlazeFace_Person.pytorch"
"tkat0/PyTorch_BlazeFace" -> "dl-maxwang/blazeface-tensorflow"
"tkat0/PyTorch_BlazeFace" -> "xindongzhang/MNN-APPLICATIONS"
"tkat0/PyTorch_BlazeFace" -> "Star-Clouds/CenterFace"
"yxlijun/Pyramidbox.pytorch" -> "Goingqs/PyramidBox"
"yxlijun/Pyramidbox.pytorch" -> "yxlijun/DSFD.pytorch"
"yxlijun/Pyramidbox.pytorch" -> "jianzhnie/pyramidbox_pytorch"
"yxlijun/Pyramidbox.pytorch" -> "ChiCheng123/SRN"
"yxlijun/Pyramidbox.pytorch" -> "yxlijun/S3FD.pytorch"
"yxlijun/Pyramidbox.pytorch" -> "luuuyi/S3FD.PyTorch"
"OValery16/Language-Translation-with-deep-learning-" -> "prathamsolanki/gender-recognition-by-voice"
"OValery16/Language-Translation-with-deep-learning-" -> "tripathivenkteshwar/faceDetection"
"CT83/SmoothStream" -> "ammarmahmood1999/HeartHealthPrediction"
"CT83/SmoothStream" -> "shubhamkumar27/Face_recognition_based_attendance_system"
"CT83/SmoothStream" -> "vmlaker/hello-websocket"
"CT83/SmoothStream" -> "aashishpeepra/whatsapp-live-cricket-bot"
"CT83/SmoothStream" -> "ayushreal/Signature-recognition"
"Confusezius/Deep-Metric-Learning-Baselines" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"Confusezius/Deep-Metric-Learning-Baselines" -> "bnu-wangxun/Deep_Metric"
"Confusezius/Deep-Metric-Learning-Baselines" -> "kdhht2334/Survey_of_Deep_Metric_Learning"
"Confusezius/Deep-Metric-Learning-Baselines" -> "msight-tech/research-ms-loss"
"Confusezius/Deep-Metric-Learning-Baselines" -> "Confusezius/ICCV2019_MIC"
"Confusezius/Deep-Metric-Learning-Baselines" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"Confusezius/Deep-Metric-Learning-Baselines" -> "CompVis/metric-learning-divide-and-conquer"
"Confusezius/Deep-Metric-Learning-Baselines" -> "msight-tech/research-xbm"
"Confusezius/Deep-Metric-Learning-Baselines" -> "ronekko/deep_metric_learning"
"Confusezius/Deep-Metric-Learning-Baselines" -> "KevinMusgrave/powerful-benchmarker"
"Confusezius/Deep-Metric-Learning-Baselines" -> "dichotomies/proxy-nca"
"Confusezius/Deep-Metric-Learning-Baselines" -> "KevinMusgrave/pytorch-metric-learning" ["e"=1]
"Confusezius/Deep-Metric-Learning-Baselines" -> "idstcv/SoftTriple"
"Confusezius/Deep-Metric-Learning-Baselines" -> "jeromerony/dml_cross_entropy"
"Confusezius/Deep-Metric-Learning-Baselines" -> "leeesangwon/PyTorch-Image-Retrieval" ["e"=1]
"sai-bi/FaceAlignment" -> "yulequan/face-alignment-in-3000fps"
"sai-bi/FaceAlignment" -> "jwyang/face-alignment"
"sai-bi/FaceAlignment" -> "freesouls/face-alignment-at-3000fps"
"sai-bi/FaceAlignment" -> "luoyetx/face-alignment-at-3000fps"
"sai-bi/FaceAlignment" -> "patrikhuber/superviseddescent"
"sai-bi/FaceAlignment" -> "tntrung/sdm_face_alignment"
"sai-bi/FaceAlignment" -> "delphifirst/FaceX"
"sai-bi/FaceAlignment" -> "cheind/dest"
"sai-bi/FaceAlignment" -> "zhusz/CVPR15-CFSS"
"sai-bi/FaceAlignment" -> "TadasBaltrusaitis/CLM-framework"
"sai-bi/FaceAlignment" -> "luoyetx/JDA"
"sai-bi/FaceAlignment" -> "patrikhuber/4dface" ["e"=1]
"sai-bi/FaceAlignment" -> "andrejmaris/facefit"
"sai-bi/FaceAlignment" -> "ChrisYang/RCPR"
"sai-bi/FaceAlignment" -> "zhzhanp/TCDCN-face-alignment"
"prlz77/vgg-face.pytorch" -> "yzhang559/vgg-face"
"prlz77/vgg-face.pytorch" -> "cydonia999/VGGFace2-pytorch"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "ustcqidi/BeautyPredict"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "fendouai/FaceRank" ["e"=1]
"HCIILAB/SCUT-FBP5500-Database-Release" -> "fbplab/MEBeauty-database"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "HCIILAB/SCUT-HEAD-Dataset-Release"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "jackhuntcn/facial_beauty_prediction"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "lucasxlu/TransFBP"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "zma-c-137/VarGFaceNet"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "szad670401/HyperLandmark"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "mahyarnajibi/SSH"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "wywu/LAB"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "kpzhang93/MTCNN_face_detection_alignment"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "imfing/ava_downloader" ["e"=1]
"HCIILAB/SCUT-FBP5500-Database-Release" -> "CongWeilin/mtcnn-caffe"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "csjliang/PPR10K" ["e"=1]
"HCIILAB/SCUT-FBP5500-Database-Release" -> "biubug6/Face-Detector-1MB-with-landmark"
"zuoqing1988/train-mtcnn-head" -> "zuoqing1988/train-mtcnn"
"bytefish/opencv" -> "bytefish/libfacerec"
"bytefish/opencv" -> "bytefish/facerec"
"bytefish/opencv" -> "vRallev/OpenCV" ["e"=1]
"bytefish/opencv" -> "MasteringOpenCV/code" ["e"=1]
"bytefish/opencv" -> "Aravindlivewire/Opencv"
"bytefish/opencv" -> "alyssaq/opencv"
"bytefish/opencv" -> "bcsiriuschen/High-Dimensional-LBP"
"bytefish/opencv" -> "bsdnoobz/opencv-code"
"bytefish/opencv" -> "biometrics/openbr"
"bytefish/opencv" -> "carolinepacheco/lbp-library"
"bytefish/opencv" -> "greatyao/asmlibrary"
"bytefish/opencv" -> "benhoff/face-recognizer-gui" ["e"=1]
"bytefish/opencv" -> "QianMo/OpenCV3-Intro-Book-Src" ["e"=1]
"bytefish/opencv" -> "mrnugget/opencv-haar-classifier-training" ["e"=1]
"bytefish/opencv" -> "kylemcdonald/FaceTracker"
"greatyao/aamlibrary" -> "jiapei100/VOSM"
"greatyao/aamlibrary" -> "greatyao/asmlibrary"
"greatyao/aamlibrary" -> "phoenix367/AAMToolbox"
"greatyao/aamlibrary" -> "cheind/aam"
"vicwer/C3AE_Age_Estimation" -> "StevenBanama/C3AE"
"vicwer/C3AE_Age_Estimation" -> "b02901145/SSR-Net_megaage-asian"
"vicwer/C3AE_Age_Estimation" -> "oukohou/SSR_Net_Pytorch"
"vicwer/C3AE_Age_Estimation" -> "kongsicong/Age_recognition_OR"
"vicwer/C3AE_Age_Estimation" -> "shamangary/SSR-Net"
"nishagandhi/DrowsyDriverDetection" -> "AnirudhGP/DrowsyDriverDetection"
"nishagandhi/DrowsyDriverDetection" -> "tripathivenkteshwar/faceDetection"
"nishagandhi/DrowsyDriverDetection" -> "raja434/driver-fatigue-detection-system"
"nishagandhi/DrowsyDriverDetection" -> "OValery16/Language-Translation-with-deep-learning-"
"nishagandhi/DrowsyDriverDetection" -> "faeya/traffic-sign-classification"
"nishagandhi/DrowsyDriverDetection" -> "TejasNaikk/DriverDrowsiness_Detection"
"nishagandhi/DrowsyDriverDetection" -> "prathamsolanki/gender-recognition-by-voice"
"BeiXi1949/Face-Recognition_FaceNet_PyTorch" -> "Skyendless/FaceRecognition"
"abars/YoloKerasFaceDetection" -> "dannyblueliu/YOLO-Face-detection"
"abars/YoloKerasFaceDetection" -> "sthanhng/yoloface"
"abars/YoloKerasFaceDetection" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"abars/YoloKerasFaceDetection" -> "dpressel/rude-carnie"
"abars/YoloKerasFaceDetection" -> "OValery16/gender-age-classification"
"abars/YoloKerasFaceDetection" -> "wayen820/gender_age_estimation_mxnet"
"abars/YoloKerasFaceDetection" -> "imistyrain/yolo-face"
"abars/YoloKerasFaceDetection" -> "yu4u/age-gender-estimation"
"ustcqidi/BeautyPredict" -> "HuyTu7/face_rating"
"ustcqidi/BeautyPredict" -> "lucasxlu/TransFBP"
"ustcqidi/BeautyPredict" -> "bknyaz/beauty_vision"
"ustcqidi/BeautyPredict" -> "HCIILAB/SCUT-FBP5500-Database-Release"
"serengil/decision-trees-for-ml" -> "serengil/neural-networks"
"serengil/decision-trees-for-ml" -> "serengil/neural-networks-py"
"serengil/decision-trees-for-ml" -> "serengil/exchanging-encrypted-mails"
"serengil/decision-trees-for-ml" -> "serengil/encrypted-class-loader"
"CompVis/metric-learning-divide-and-conquer" -> "Confusezius/Deep-Metric-Learning-Baselines"
"CompVis/metric-learning-divide-and-conquer" -> "Confusezius/ICCV2019_MIC"
"CompVis/metric-learning-divide-and-conquer" -> "pierre-jacob/ICCV2019-Horde"
"CompVis/metric-learning-divide-and-conquer" -> "dichotomies/proxy-nca"
"CompVis/metric-learning-divide-and-conquer" -> "kdhht2334/Survey_of_Deep_Metric_Learning"
"CompVis/metric-learning-divide-and-conquer" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"CompVis/metric-learning-divide-and-conquer" -> "kunhe/FastAP-metric-learning"
"CompVis/metric-learning-divide-and-conquer" -> "MyLtYkRiTiK/ComputerVision_Tutorials_in_Russian" ["e"=1]
"CompVis/metric-learning-divide-and-conquer" -> "wzzheng/HDML"
"CompVis/metric-learning-divide-and-conquer" -> "mop/bier"
"CompVis/metric-learning-divide-and-conquer" -> "bnu-wangxun/Deep_Metric"
"CompVis/metric-learning-divide-and-conquer" -> "msight-tech/research-ms-loss"
"CompVis/metric-learning-divide-and-conquer" -> "CHENGY12/DMML"
"CompVis/metric-learning-divide-and-conquer" -> "osai-ai/tensor-stream" ["e"=1]
"sxpl/FaceAC" -> "zeusees/Zeusee-Face-Anti-spoofing" ["e"=1]
"sxpl/FaceAC" -> "tyhjh/ArcFace"
"sxpl/FaceAC" -> "GuoYangGit/OCR"
"sxpl/FaceAC" -> "yuxitong/TensorFlowAndroidDemo"
"sxpl/FaceAC" -> "June0611/EyeBlickCheck"
"sxpl/FaceAC" -> "xiaoyaoyou1212/ViseFace"
"sxpl/FaceAC" -> "reggie1996/FaceDetect"
"sxpl/FaceAC" -> "xiaomsh/OCR_identify" ["e"=1]
"sxpl/FaceAC" -> "kongqw/OpenCVForAndroid"
"sxpl/FaceAC" -> "julyCodeGo/OpenCVCheck"
"librahfacebook/Face" -> "king-xw/Face_Recogntion"
"Rock-100/FaceKit" -> "wywu/LAB"
"Rock-100/FaceKit" -> "zuoqing1988/ZQCNN"
"Rock-100/FaceKit" -> "dlunion/mtcnn"
"Rock-100/FaceKit" -> "sfzhang15/FaceBoxes"
"Rock-100/FaceKit" -> "CongWeilin/mtcnn-caffe"
"Rock-100/FaceKit" -> "AlphaQi/MTCNN-light"
"Rock-100/FaceKit" -> "ydwen/caffe-face"
"Rock-100/FaceKit" -> "siriusdemon/pytorch-PCN"
"Rock-100/FaceKit" -> "Star-Clouds/CenterFace"
"Rock-100/FaceKit" -> "mahyarnajibi/SSH"
"Rock-100/FaceKit" -> "zeusees/FaceBoxes"
"Rock-100/FaceKit" -> "szad670401/HyperLandmark"
"Rock-100/FaceKit" -> "wy1iu/sphereface"
"Rock-100/FaceKit" -> "Seanlinx/mtcnn"
"Rock-100/FaceKit" -> "kpzhang93/MTCNN_face_detection_alignment"
"wywu/LAB" -> "facebookresearch/supervision-by-registration"
"wywu/LAB" -> "MarekKowalski/DeepAlignmentNetwork"
"wywu/LAB" -> "D-X-Y/landmark-detection"
"wywu/LAB" -> "szad670401/HyperLandmark"
"wywu/LAB" -> "guoqiangqi/PFLD"
"wywu/LAB" -> "Rock-100/FaceKit"
"wywu/LAB" -> "HRNet/HRNet-Facial-Landmark-Detection"
"wywu/LAB" -> "polarisZhao/PFLD-pytorch"
"wywu/LAB" -> "Star-Clouds/CenterFace"
"wywu/LAB" -> "1adrianb/2D-and-3D-face-alignment" ["e"=1]
"wywu/LAB" -> "panda-lab/face-landmark"
"wywu/LAB" -> "chengzhengxin/sdm"
"wywu/LAB" -> "zuoqing1988/ZQCNN"
"wywu/LAB" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"wywu/LAB" -> "yfeng95/PRNet" ["e"=1]
"Monologuethl/Android_Facenet_Recognition" -> "vcvycy/Android_Facenet"
"Monologuethl/Android_Facenet_Recognition" -> "YuGongCharley/MTCNN_facenet_Android"
"LeslieZhoa/tensorflow-MTCNN" -> "baomingwang/MTCNN-Tensorflow"
"LeslieZhoa/tensorflow-MTCNN" -> "AITTSMD/MTCNN-Tensorflow"
"LeslieZhoa/tensorflow-MTCNN" -> "LeslieZhoa/tensorflow-facenet"
"LeslieZhoa/tensorflow-MTCNN" -> "CongWeilin/mtcnn-caffe"
"LeslieZhoa/tensorflow-MTCNN" -> "imistyrain/MTCNN"
"LeslieZhoa/tensorflow-MTCNN" -> "moli232777144/mtcnn_ncnn"
"LeslieZhoa/tensorflow-MTCNN" -> "boyliwensheng/understand_facenet"
"LeslieZhoa/tensorflow-MTCNN" -> "chenlinzhong/face-login"
"LeslieZhoa/tensorflow-MTCNN" -> "Seanlinx/mtcnn"
"LeslieZhoa/tensorflow-MTCNN" -> "luckyluckydadada/MTCNN_tf"
"LeslieZhoa/tensorflow-MTCNN" -> "dlunion/mtcnn"
"LeslieZhoa/tensorflow-MTCNN" -> "zuoqing1988/train-mtcnn"
"LeslieZhoa/tensorflow-MTCNN" -> "Charrin/RetinaFace-Cpp"
"LeslieZhoa/tensorflow-MTCNN" -> "jiangxiluning/facenet_mtcnn_to_mobile"
"LeslieZhoa/tensorflow-MTCNN" -> "bubbliiiing/mtcnn-keras" ["e"=1]
"adityachechani/Driver-Fatigue-Detection" -> "raja434/driver-fatigue-detection-system"
"adityachechani/Driver-Fatigue-Detection" -> "sahnimanas/Fatigue-Detection"
"xGonZh10n/FaceDetection" -> "JabamiLight/dlib-android-facedect"
"aakashjhawar/face-recognition-using-deep-learning" -> "joeVenner/FaceRecognition-GUI-APP"
"aakashjhawar/face-recognition-using-deep-learning" -> "venugopalkadamba/Face_Verification_based_Attendance_system"
"aakashjhawar/face-recognition-using-deep-learning" -> "codeglitchz/attendance-system"
"seasonSH/DocFace" -> "liuyuisanai/coco_loss"
"seasonSH/DocFace" -> "fwang91/IMDb-Face"
"seasonSH/DocFace" -> "zma-c-137/VarGFaceNet"
"seasonSH/DocFace" -> "happynear/NormFace"
"seasonSH/DocFace" -> "happynear/FaceDatasets"
"seasonSH/DocFace" -> "liuyuisanai/RSA-for-object-detection"
"seasonSH/DocFace" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"seasonSH/DocFace" -> "happynear/AMSoftmax"
"seasonSH/DocFace" -> "huangyangyu/NoiseFace"
"seasonSH/DocFace" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"seasonSH/DocFace" -> "SeuTao/FaceBagNet" ["e"=1]
"seasonSH/DocFace" -> "seasonSH/Probabilistic-Face-Embeddings"
"seasonSH/DocFace" -> "moli232777144/mobilefacenet-mxnet"
"seasonSH/DocFace" -> "walkoncross/prepare-faces-zyf"
"seasonSH/DocFace" -> "bleakie/MaskInsightface"
"jaisayush/Fatigue-Detection-System-Based-On-Behavioural-Characteristics-Of-Driver" -> "neelanjan00/Driver-Drowsiness-Detection"
"jaisayush/Fatigue-Detection-System-Based-On-Behavioural-Characteristics-Of-Driver" -> "msindev/Driver-Drowsiness-Detector"
"bairdzhang/smallhardface" -> "Goingqs/PyramidBox"
"bairdzhang/smallhardface" -> "power0341/RSA_pycaffe"
"bairdzhang/smallhardface" -> "wondervictor/WiderFace-Evaluation"
"satinder147/Attendance-using-Face" -> "msindev/Facial-Recognition-Using-FaceNet-Siamese-One-Shot-Learning"
"satinder147/Attendance-using-Face" -> "ashishdubey10/Face-Recognition-Based-Attendance-System"
"satinder147/Attendance-using-Face" -> "hfrommane/TF-siamesenet" ["e"=1]
"satinder147/Attendance-using-Face" -> "thuyngch/Face-Attendance-System"
"satinder147/Attendance-using-Face" -> "GraphtyLove/Face-recognition-project"
"satinder147/Attendance-using-Face" -> "yogesh-kamat/FaceAttend"
"satinder147/Attendance-using-Face" -> "amaljoseph/Face_Recognition_Attendance_System_Python-OpenCV"
"satinder147/Attendance-using-Face" -> "shashankch292/Face-Detection-Recognition-Based-Attendance-System"
"satinder147/Attendance-using-Face" -> "shubamwalia/Face-Recognition-Attendance-System"
"satinder147/Attendance-using-Face" -> "008karan/Face-recognition"
"arsfutura/face-recognition" -> "sainimohit23/FaceNet-Real-Time-face-recognition"
"D-X-Y/landmark-detection" -> "facebookresearch/supervision-by-registration"
"D-X-Y/landmark-detection" -> "HRNet/HRNet-Facial-Landmark-Detection"
"D-X-Y/landmark-detection" -> "wywu/LAB"
"D-X-Y/landmark-detection" -> "guoqiangqi/PFLD"
"D-X-Y/landmark-detection" -> "protossw512/AdaptiveWingLoss"
"D-X-Y/landmark-detection" -> "cunjian/pytorch_face_landmark"
"D-X-Y/landmark-detection" -> "justusschock/shapenet"
"D-X-Y/landmark-detection" -> "polarisZhao/PFLD-pytorch"
"D-X-Y/landmark-detection" -> "yinguobing/cnn-facial-landmark"
"D-X-Y/landmark-detection" -> "mrgloom/Face-landmarks-detection-benchmark"
"D-X-Y/landmark-detection" -> "TheSouthFrog/stylealign"
"D-X-Y/landmark-detection" -> "610265158/face_landmark"
"D-X-Y/landmark-detection" -> "610265158/Peppa_Pig_Face_Landmark"
"D-X-Y/landmark-detection" -> "biubug6/Face-Detector-1MB-with-landmark"
"D-X-Y/landmark-detection" -> "MarekKowalski/DeepAlignmentNetwork"
"Mjrovai/OpenCV-Object-Face-Tracking" -> "Mjrovai/OpenCV-Face-Recognition"
"ShubhamSonkesriya/Face-Recognition-Attendance-System" -> "amaljoseph/Face_Recognition_Attendance_System_Python-OpenCV"
"ShubhamSonkesriya/Face-Recognition-Attendance-System" -> "chetanyachopra22/FaceRecognition-Attendance-Marking"
"ShubhamSonkesriya/Face-Recognition-Attendance-System" -> "shashankch292/Face-Detection-Recognition-Based-Attendance-System"
"clcarwin/SFD_pytorch" -> "louis-she/sfd.pytorch"
"clcarwin/SFD_pytorch" -> "yxlijun/S3FD.pytorch"
"clcarwin/SFD_pytorch" -> "sfzhang15/SFD"
"clcarwin/SFD_pytorch" -> "Goingqs/PyramidBox"
"yinguobing/cnn-facial-landmark" -> "yinguobing/facial-landmark-detection-hrnet"
"yinguobing/cnn-facial-landmark" -> "yinguobing/head-pose-estimation"
"yinguobing/cnn-facial-landmark" -> "D-X-Y/landmark-detection"
"yinguobing/cnn-facial-landmark" -> "qiexing/face-landmark-localization"
"yinguobing/cnn-facial-landmark" -> "HRNet/HRNet-Facial-Landmark-Detection"
"yinguobing/cnn-facial-landmark" -> "panda-lab/face-landmark"
"yinguobing/cnn-facial-landmark" -> "songhengyang/face_landmark_factory"
"yinguobing/cnn-facial-landmark" -> "guoqiangqi/PFLD"
"yinguobing/cnn-facial-landmark" -> "junhwanjang/face_landmark_dnn"
"yinguobing/cnn-facial-landmark" -> "luoyetx/deep-landmark"
"yinguobing/cnn-facial-landmark" -> "wywu/LAB"
"yinguobing/cnn-facial-landmark" -> "cunjian/pytorch_face_landmark"
"yinguobing/cnn-facial-landmark" -> "mrgloom/Face-landmarks-detection-benchmark"
"yinguobing/cnn-facial-landmark" -> "yinguobing/image_utility"
"yinguobing/cnn-facial-landmark" -> "facebookresearch/supervision-by-registration"
"jian667/face-dataset" -> "iacopomasi/face_specific_augm" ["e"=1]
"jian667/face-dataset" -> "joojs/fairface"
"ildoonet/deepface" -> "iitzco/faced"
"ildoonet/deepface" -> "yeephycho/tensorflow-face-detection"
"ildoonet/deepface" -> "auroua/InsightFace_TF"
"ildoonet/deepface" -> "AIInAi/tf-insightface"
"ildoonet/deepface" -> "krasserm/face-recognition"
"ildoonet/deepface" -> "sirius-ai/MobileFaceNet_TF"
"michaeldorner/DecisionTrees" -> "lucksd356/DecisionTrees"
"michaeldorner/DecisionTrees" -> "geerk/C45algorithm"
"tanakataiki/ssd_kerasV2" -> "ManishSoni1908/Mobilenet-ssd-keras"
"tanakataiki/ssd_kerasV2" -> "oarriaga/SSD-keras"
"tanakataiki/ssd_kerasV2" -> "bruceyang2012/Face-detection-with-mobilenet-ssd"
"tanakataiki/ssd_kerasV2" -> "wikke/SSD_Keras"
"polarisZhao/awesome-face" -> "ChanChiChoi/awesome-Face_Recognition"
"polarisZhao/awesome-face" -> "becauseofAI/awesome-face" ["e"=1]
"polarisZhao/awesome-face" -> "Rock-100/FaceKit"
"polarisZhao/awesome-face" -> "wywu/LAB"
"polarisZhao/awesome-face" -> "wy1iu/sphereface"
"polarisZhao/awesome-face" -> "ZhaoJ9014/face.evoLVe"
"polarisZhao/awesome-face" -> "AlexanderParkin/ChaLearn_liveness_challenge" ["e"=1]
"polarisZhao/awesome-face" -> "fwang91/IMDb-Face"
"polarisZhao/awesome-face" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"polarisZhao/awesome-face" -> "biubug6/Face-Detector-1MB-with-landmark"
"polarisZhao/awesome-face" -> "ZitongYu/CDCN" ["e"=1]
"polarisZhao/awesome-face" -> "happynear/FaceDatasets"
"polarisZhao/awesome-face" -> "JDAI-CV/FaceX-Zoo"
"polarisZhao/awesome-face" -> "Star-Clouds/CenterFace"
"polarisZhao/awesome-face" -> "RizhaoCai/Awesome-FAS" ["e"=1]
"cleardusk/MeGlass" -> "cleardusk/EmotionChallenge"
"cleardusk/MeGlass" -> "fwang91/IMDb-Face"
"cleardusk/MeGlass" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"cleardusk/MeGlass" -> "cleardusk/MFR"
"cleardusk/MeGlass" -> "olojuwin/facerecognize-for-mobile-phone"
"cleardusk/MeGlass" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"cleardusk/MeGlass" -> "xiaoboCASIA/SV-X-Softmax"
"cleardusk/MeGlass" -> "happynear/NormFace"
"cleardusk/MeGlass" -> "happynear/AMSoftmax"
"cleardusk/MeGlass" -> "wy1iu/MHE"
"cleardusk/MeGlass" -> "iacopomasi/face_specific_augm" ["e"=1]
"cleardusk/MeGlass" -> "walkoncross/prepare-faces-zyf"
"cleardusk/MeGlass" -> "cleardusk/ImageToAscii"
"cleardusk/MeGlass" -> "LynnHo/HD-CelebA-Cropper" ["e"=1]
"KangKangLoveCat/insightface_ncnn" -> "flycat0101/imistyrain-MobileFaceNet"
"KangKangLoveCat/insightface_ncnn" -> "zuoqing1988/train-mtcnn"
"KangKangLoveCat/insightface_ncnn" -> "honghuCode/mobileFacenet-ncnn"
"KangKangLoveCat/insightface_ncnn" -> "olojuwin/facerecognize-for-mobile-phone"
"Sierkinhane/mtcnn-pytorch" -> "TropComplique/mtcnn-pytorch"
"Sierkinhane/mtcnn-pytorch" -> "kuaikuaikim/dface"
"Sierkinhane/mtcnn-pytorch" -> "Linwei-Chen/MTCNN_Pytorch"
"Sierkinhane/mtcnn-pytorch" -> "wujiyang/MTCNN_TRAIN"
"Sierkinhane/mtcnn-pytorch" -> "BrightXiaoHan/FaceDetector"
"Sierkinhane/mtcnn-pytorch" -> "polarisZhao/mtcnn-pytorch"
"Sierkinhane/mtcnn-pytorch" -> "xiezheng-cs/mtcnn_pytorch"
"Sierkinhane/mtcnn-pytorch" -> "beichen2012/mtcnn-pytorch"
"Sierkinhane/mtcnn-pytorch" -> "TreB1eN/InsightFace_Pytorch"
"Sierkinhane/mtcnn-pytorch" -> "LeslieZhoa/tensorflow-MTCNN"
"Sierkinhane/mtcnn-pytorch" -> "supernotman/RetinaFace_Pytorch"
"Sierkinhane/mtcnn-pytorch" -> "CongWeilin/mtcnn-caffe"
"Sierkinhane/mtcnn-pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"Sierkinhane/mtcnn-pytorch" -> "polarisZhao/PFLD-pytorch"
"Sierkinhane/mtcnn-pytorch" -> "guoqiangqi/PFLD"
"HansRen1024/Face-Tracking-Using-CNN-and-Optical-Flow" -> "zeusees/HyperFT"
"HansRen1024/Face-Tracking-Using-CNN-and-Optical-Flow" -> "HansRen1024/Stabilized-Face-Detection-Bbox"
"HansRen1024/Face-Tracking-Using-CNN-and-Optical-Flow" -> "qaz734913414/Ncnn_FaceTrack"
"HansRen1024/Face-Tracking-Using-CNN-and-Optical-Flow" -> "moli232777144/mtcnn_ncnn"
"jwyang/face-alignment" -> "yulequan/face-alignment-in-3000fps"
"jwyang/face-alignment" -> "sai-bi/FaceAlignment"
"jwyang/face-alignment" -> "freesouls/face-alignment-at-3000fps"
"jwyang/face-alignment" -> "luoyetx/face-alignment-at-3000fps"
"jwyang/face-alignment" -> "delphifirst/FaceX"
"jwyang/face-alignment" -> "patrikhuber/superviseddescent"
"jwyang/face-alignment" -> "luoyetx/JDA"
"jwyang/face-alignment" -> "tntrung/sdm_face_alignment"
"jwyang/face-alignment" -> "jwyang/face-alignment-cpp"
"jwyang/face-alignment" -> "zhzhanp/TCDCN-face-alignment"
"jwyang/face-alignment" -> "FacialLandmark/landmark_py"
"jwyang/face-alignment" -> "mrgloom/Face-landmarks-detection-benchmark"
"jwyang/face-alignment" -> "luoyetx/deep-landmark"
"jwyang/face-alignment" -> "zhusz/CVPR15-CFSS"
"jwyang/face-alignment" -> "FaceDetect/jointCascade_py"
"rafiuddinkhan/Yolo-Training-GoogleColab" -> "BlcaKHat/yolov3-Helmet-Detection"
"rafiuddinkhan/Yolo-Training-GoogleColab" -> "rekon/keras-yolo2"
"rafiuddinkhan/Yolo-Training-GoogleColab" -> "AyazSaiyed/Helmet-Detection-"
"rafiuddinkhan/Yolo-Training-GoogleColab" -> "wujixiu/helmet-detection"
"rafiuddinkhan/Yolo-Training-GoogleColab" -> "ivangrov/YOLOv3-GoogleColab"
"tyhjh/ArcFace" -> "wangshengyang1996/ArcfaceDemo"
"adityajn105/Face-Recognition-Siamese-Network" -> "susantabiswas/FaceRecog"
"AIInAi/tf-insightface" -> "auroua/InsightFace_TF"
"AIInAi/tf-insightface" -> "luckycallor/InsightFace-tensorflow"
"AIInAi/tf-insightface" -> "Fei-Wang/insightface"
"AIInAi/tf-insightface" -> "yangxue0827/MobileFaceNet_Tensorflow"
"bearsprogrammer/real-time-deep-face-recognition" -> "shanren7/real_time_face_recognition"
"bearsprogrammer/real-time-deep-face-recognition" -> "AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow"
"bearsprogrammer/real-time-deep-face-recognition" -> "krasserm/face-recognition"
"bearsprogrammer/real-time-deep-face-recognition" -> "habrman/FaceRecognition"
"bearsprogrammer/real-time-deep-face-recognition" -> "vudung45/FaceRec"
"bearsprogrammer/real-time-deep-face-recognition" -> "ishwarsawale/real-time-face-recognition-with-facenet"
"junhwanjang/face_landmark_dnn" -> "huohuotm/Facial-Landmark"
"junhwanjang/face_landmark_dnn" -> "TropComplique/wing-loss"
"huuuuusy/Mask-RCNN-Shiny" -> "huuuuusy/Darknet-Cross"
"huuuuusy/Mask-RCNN-Shiny" -> "huuuuusy/YOLOV3-on-Android"
"codeniko/shape_predictor_81_face_landmarks" -> "codeniko/eos"
"codeniko/shape_predictor_81_face_landmarks" -> "szad670401/HyperLandmark"
"codeniko/shape_predictor_81_face_landmarks" -> "YuvalNirkin/face_segmentation" ["e"=1]
"codeniko/shape_predictor_81_face_landmarks" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"codeniko/shape_predictor_81_face_landmarks" -> "nxsEdson/CVD-Physiological-Measurement" ["e"=1]
"codeniko/shape_predictor_81_face_landmarks" -> "610265158/Peppa_Pig_Face_Landmark"
"codeniko/shape_predictor_81_face_landmarks" -> "panda-lab/face-landmark"
"codeniko/shape_predictor_81_face_landmarks" -> "songhengyang/face_landmark_factory"
"codeniko/shape_predictor_81_face_landmarks" -> "cleardusk/MeGlass"
"codeniko/shape_predictor_81_face_landmarks" -> "wywu/LAB"
"codeniko/shape_predictor_81_face_landmarks" -> "chengzhengxin/sdm"
"codeniko/shape_predictor_81_face_landmarks" -> "yinguobing/cnn-facial-landmark"
"codeniko/shape_predictor_81_face_landmarks" -> "SeuTao/FaceBagNet" ["e"=1]
"codeniko/shape_predictor_81_face_landmarks" -> "YBIGTA/pytorch-hair-segmentation" ["e"=1]
"codeniko/shape_predictor_81_face_landmarks" -> "mapooon/SelfBlendedImages" ["e"=1]
"lucasxlu/HMTNet" -> "lucasxlu/CRNet"
"lucasxlu/HMTNet" -> "gustavz/AttractiveNet"
"lucasxlu/HMTNet" -> "fbplab/MEBeauty-database"
"in66-dev/In-Prestissimo" -> "luoyetx/mini-caffe"
"in66-dev/In-Prestissimo" -> "BUG1989/ncnn-benchmark" ["e"=1]
"in66-dev/In-Prestissimo" -> "AlphaQi/MTCNN-light"
"in66-dev/In-Prestissimo" -> "PerfXLab/embedded_ai" ["e"=1]
"in66-dev/In-Prestissimo" -> "OAID/Caffe-HRT"
"in66-dev/In-Prestissimo" -> "blankWorld/MTCNN-Accelerate-Onet"
"in66-dev/In-Prestissimo" -> "ENCP/CNNdroid"
"in66-dev/In-Prestissimo" -> "PaddlePaddle/Anakin" ["e"=1]
"in66-dev/In-Prestissimo" -> "Tencent/FeatherCNN" ["e"=1]
"in66-dev/In-Prestissimo" -> "zhangqianhui/CnnForAndroid"
"in66-dev/In-Prestissimo" -> "AlfredXiangWu/face_verification_experiment"
"in66-dev/In-Prestissimo" -> "OAID/YSQfastfd"
"in66-dev/In-Prestissimo" -> "dlunion/mtcnn"
"in66-dev/In-Prestissimo" -> "starimeL/PytorchConverter" ["e"=1]
"Tony607/Keras_age_gender" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"Tony607/Keras_age_gender" -> "dandynaufaldi/Agendernet"
"Spidy20/Music_player_with_Emotions_recognition" -> "Spidy20/Insta_flters_with_python"
"Skuldur/facenet-face-recognition" -> "AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow"
"Skuldur/facenet-face-recognition" -> "vinayakarannil/Face_Recognition"
"Skuldur/facenet-face-recognition" -> "krasserm/face-recognition"
"Skuldur/facenet-face-recognition" -> "akshaybahadur21/Facial-Recognition-using-Facenet"
"Skuldur/facenet-face-recognition" -> "habrman/FaceRecognition"
"Skuldur/facenet-face-recognition" -> "shanren7/real_time_face_recognition"
"Skuldur/facenet-face-recognition" -> "ColeMurray/medium-facenet-tutorial"
"Skuldur/facenet-face-recognition" -> "nyoki-mtl/keras-facenet"
"Skuldur/facenet-face-recognition" -> "vsyw/Keras-OpenFace"
"Skuldur/facenet-face-recognition" -> "sainimohit23/FaceNet-Real-Time-face-recognition"
"Skuldur/facenet-face-recognition" -> "tbmoon/facenet"
"Skuldur/facenet-face-recognition" -> "arsfutura/face-recognition"
"Skuldur/facenet-face-recognition" -> "richmondu/libfaceid" ["e"=1]
"Skuldur/facenet-face-recognition" -> "msindev/Facial-Recognition-Using-FaceNet-Siamese-One-Shot-Learning"
"wy1iu/SphereNet" -> "wy1iu/DCNets"
"wy1iu/SphereNet" -> "wy1iu/LargeMargin_Softmax_Loss"
"wy1iu/SphereNet" -> "unixpickle/spherenet"
"wy1iu/SphereNet" -> "wy1iu/MHE"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "KaleidoZhouYN/Loss-Functions"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "liuyuisanai/coco_loss"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "inlmouse/MS-Celeb-1M_WashList"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "KaleidoZhouYN/Pytorch_FRS"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "hujun100/tensorflow-sphereface"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "liuyuisanai/RSA-for-object-detection"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "happynear/AMSoftmax"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "walkoncross/prepare-faces-zyf"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "happynear/FaceVerification"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "happynear/FaceDatasets"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "happynear/NormFace"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "KaleidoZhouYN/mobilefacenet-caffe"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "DaFuCoding/MTCNN_Caffe"
"power0341/RSA_pycaffe" -> "AlfredXiangWu/MsCelebFaceExtract"
"happynear/FaceDatasets" -> "happynear/AMSoftmax"
"happynear/FaceDatasets" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"happynear/FaceDatasets" -> "fwang91/IMDb-Face"
"happynear/FaceDatasets" -> "liuyuisanai/RSA-for-object-detection"
"happynear/FaceDatasets" -> "happynear/NormFace"
"happynear/FaceDatasets" -> "liuyuisanai/coco_loss"
"happynear/FaceDatasets" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"happynear/FaceDatasets" -> "KaleidoZhouYN/Pytorch_FRS"
"happynear/FaceDatasets" -> "wy1iu/sphereface"
"happynear/FaceDatasets" -> "Joker316701882/Additive-Margin-Softmax"
"happynear/FaceDatasets" -> "JiajiongCao/CELEB-500K"
"happynear/FaceDatasets" -> "happynear/FaceVerification"
"happynear/FaceDatasets" -> "xiaoboCASIA/SV-X-Softmax"
"happynear/FaceDatasets" -> "KaleidoZhouYN/Loss-Functions"
"happynear/FaceDatasets" -> "pppoe/tensorflow-sphereface-asoftmax"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "KaleidoZhouYN/Pytorch_FRS"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "KaleidoZhouYN/Loss-Functions"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "happynear/AMSoftmax"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "happynear/FaceDatasets"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "liuyuisanai/coco_loss"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "wy1iu/MHE"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "liuyuisanai/RSA-for-object-detection"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "inlmouse/MS-Celeb-1M_WashList"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "Charrin/RangeLoss-Caffe"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "fwang91/IMDb-Face"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "wy1iu/LargeMargin_Softmax_Loss"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "wy1iu/DCNets"
"dlunion/CC4.0" -> "dlunion/CC5.0"
"dlunion/CC4.0" -> "dlunion/CCDL"
"dlunion/CC4.0" -> "dlunion/CaffeLSTM-OCR"
"dlunion/CC4.0" -> "hopef/CCDL"
"dlunion/CC4.0" -> "dlunion/EasyOpenPose"
"huangyangyu/SeqFace" -> "huangyangyu/NoiseFace"
"szad670401/Fast-MTCNN" -> "imistyrain/MTCNN"
"szad670401/Fast-MTCNN" -> "blankWorld/MTCNN-Accelerate-Onet"
"szad670401/Fast-MTCNN" -> "zeusees/FaceBoxes"
"szad670401/Fast-MTCNN" -> "KaleidoZhouYN/e2e-joint-face-detection-and-alignment"
"szad670401/Fast-MTCNN" -> "AlphaQi/MTCNN-light"
"szad670401/Fast-MTCNN" -> "dlunion/mtcnn"
"szad670401/Fast-MTCNN" -> "luoyetx/Joint-Face-Detection-and-Alignment"
"szad670401/Fast-MTCNN" -> "zuoqing1988/train-mtcnn"
"szad670401/Fast-MTCNN" -> "zhanglaplace/3000fps-mtcnn"
"szad670401/Fast-MTCNN" -> "ElegantGod/ncnn"
"szad670401/Fast-MTCNN" -> "deepinsight/mtcnn-ncnn"
"wy1iu/DCNets" -> "wy1iu/SphereNet"
"wy1iu/DCNets" -> "wy1iu/LargeMargin_Softmax_Loss"
"wy1iu/DCNets" -> "YisenWang/Iterative_learning"
"wy1iu/DCNets" -> "unixpickle/spherenet"
"wy1iu/DCNets" -> "wy1iu/MHE"
"wy1iu/DCNets" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"wy1iu/MHE" -> "wy1iu/sphereface-plus"
"wy1iu/MHE" -> "qinzheng12/diagonalwise-refactorization-caffe"
"wy1iu/MHE" -> "rmlin/CoMHE"
"wy1iu/MHE" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"diovisgood/agender" -> "wayen820/gender_age_estimation_mxnet"
"diovisgood/agender" -> "deepinx/age-gender-estimation"
"AruniRC/resnet-face-pytorch" -> "MuggleWang/CosFace_pytorch"
"AruniRC/resnet-face-pytorch" -> "KaihuaTang/ResNet50-Pytorch-Face-Recognition"
"AruniRC/resnet-face-pytorch" -> "cydonia999/VGGFace2-pytorch"
"shamangary/Keras-MNIST-center-loss-with-visualization" -> "handongfeng/MNIST-center-loss"
"shamangary/Keras-MNIST-center-loss-with-visualization" -> "EncodeTS/TensorFlow_Center_Loss"
"nyoki-mtl/keras-facenet" -> "vsyw/Keras-OpenFace"
"nyoki-mtl/keras-facenet" -> "rcmalli/keras-vggface"
"nyoki-mtl/keras-facenet" -> "foamliu/FaceNet"
"nyoki-mtl/keras-facenet" -> "krasserm/face-recognition"
"nyoki-mtl/keras-facenet" -> "davidsandberg/facenet"
"nyoki-mtl/keras-facenet" -> "serengil/tensorflow-101"
"nyoki-mtl/keras-facenet" -> "ox-vgg/vgg_face2"
"nyoki-mtl/keras-facenet" -> "sainimohit23/FaceNet-Real-Time-face-recognition"
"nyoki-mtl/keras-facenet" -> "ipazc/mtcnn"
"nyoki-mtl/keras-facenet" -> "Skuldur/facenet-face-recognition"
"nyoki-mtl/keras-facenet" -> "peteryuX/arcface-tf2"
"nyoki-mtl/keras-facenet" -> "chen0040/keras-face"
"nyoki-mtl/keras-facenet" -> "ildoonet/deepface"
"nyoki-mtl/keras-facenet" -> "akshaybahadur21/Facial-Recognition-using-Facenet"
"nyoki-mtl/keras-facenet" -> "satinder147/Attendance-using-Face"
"TropComplique/FaceBoxes-tensorflow" -> "zisianw/FaceBoxes.PyTorch"
"TropComplique/FaceBoxes-tensorflow" -> "TropComplique/wing-loss"
"TropComplique/FaceBoxes-tensorflow" -> "sfzhang15/FaceBoxes"
"TropComplique/FaceBoxes-tensorflow" -> "zeusees/FaceBoxes"
"louis-she/center-loss.pytorch" -> "jxgu1016/MNIST_center_loss_pytorch"
"louis-she/center-loss.pytorch" -> "KaiyangZhou/pytorch-center-loss"
"louis-she/center-loss.pytorch" -> "lyakaap/image-feature-learning-pytorch"
"louis-she/center-loss.pytorch" -> "louis-she/sfd.pytorch"
"Spidy20/Attendace_management_system" -> "kmhmubin/Face-Recognition-Attendance-System"
"Spidy20/Attendace_management_system" -> "ashishdubey10/Face-Recognition-Based-Attendance-System"
"Spidy20/Attendace_management_system" -> "Patelrahul4884/Attendance-Management-system-using-face-recognition"
"Spidy20/Attendace_management_system" -> "codeglitchz/attendance-system"
"Spidy20/Attendace_management_system" -> "shubhamkumar27/Face_recognition_based_attendance_system"
"Spidy20/Attendace_management_system" -> "ShubhamSonkesriya/Face-Recognition-Attendance-System"
"Spidy20/Attendace_management_system" -> "shubamwalia/Face-Recognition-Attendance-System"
"Spidy20/Attendace_management_system" -> "venugopalkadamba/Face_Verification_based_Attendance_system"
"Spidy20/Attendace_management_system" -> "chetanyachopra22/FaceRecognition-Attendance-Marking"
"Spidy20/Attendace_management_system" -> "sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition"
"Spidy20/Attendace_management_system" -> "staticshreyas/Attendance-Portal" ["e"=1]
"Spidy20/Attendace_management_system" -> "CT83/Facial-Recognition-Attendance-System"
"Spidy20/Attendace_management_system" -> "rishabh-karmakar/Facial-Recognition-Based-Attendance-System" ["e"=1]
"Spidy20/Attendace_management_system" -> "Spidy20/Music_player_with_Emotions_recognition"
"Spidy20/Attendace_management_system" -> "Marauders-9998/Attendance-Management-using-Face-Recognition"
"vithursant/MagnetLoss-PyTorch" -> "mbanani/pytorch-magnet-loss"
"vithursant/MagnetLoss-PyTorch" -> "pumpikano/tf-magnet-loss"
"vithursant/MagnetLoss-PyTorch" -> "littleredxh/DREML"
"zhiqiangdon/CU-Net" -> "mariolew/Deep-Alignment-Network-tensorflow"
"zhiqiangdon/CU-Net" -> "TropComplique/wing-loss"
"qinzheng93/diagonalwise-refactorization-pytorch" -> "qinzheng12/diagonalwise-refactorization-caffe"
"pasrichashivam/hyperface_deep_multi-task-learning_keras_implementation" -> "Adityav2410/RealTimeHyperface"
"jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV" -> "yinguobing/head-pose-estimation"
"jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV" -> "guoqiangqi/PFLD"
"jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV" -> "penincillin/DREAM"
"jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV" -> "lincolnhard/head-pose-estimation"
"XiaohangZhan/face_recognition_framework" -> "XiaohangZhan/cdp"
"XiaohangZhan/face_recognition_framework" -> "zma-c-137/VarGFaceNet"
"XiaohangZhan/face_recognition_framework" -> "lbin/Retinaface_Detectron2"
"XiaohangZhan/face_recognition_framework" -> "foamliu/InsightFace-PyTorch"
"XiaohangZhan/face_recognition_framework" -> "yl-1993/learn-to-cluster"
"XiaohangZhan/face_recognition_framework" -> "bleakie/MaskInsightface"
"parai/dms" -> "prasad-kumkar/ai-driver-safety"
"parai/dms" -> "bnair2001/Driver-monitoring-system"
"parai/dms" -> "TianxingWu/driver-fatigue-monitoring-system"
"parai/dms" -> "nullbyte91/Driver-Monitoring-System-Gaze_Detection"
"guoqiangqi/PFLD" -> "polarisZhao/PFLD-pytorch"
"guoqiangqi/PFLD" -> "610265158/Peppa_Pig_Face_Landmark"
"guoqiangqi/PFLD" -> "Hsintao/pfld_106_face_landmarks"
"guoqiangqi/PFLD" -> "facebookresearch/supervision-by-registration"
"guoqiangqi/PFLD" -> "github-luffy/PFLD_68points_Pytorch"
"guoqiangqi/PFLD" -> "610265158/face_landmark"
"guoqiangqi/PFLD" -> "biubug6/Face-Detector-1MB-with-landmark"
"guoqiangqi/PFLD" -> "wywu/LAB"
"guoqiangqi/PFLD" -> "D-X-Y/landmark-detection"
"guoqiangqi/PFLD" -> "HRNet/HRNet-Facial-Landmark-Detection"
"guoqiangqi/PFLD" -> "hanson-young/nniefacelib"
"guoqiangqi/PFLD" -> "cunjian/pytorch_face_landmark"
"guoqiangqi/PFLD" -> "szad670401/HyperLandmark"
"guoqiangqi/PFLD" -> "Star-Clouds/CenterFace"
"guoqiangqi/PFLD" -> "MirrorYuChen/ncnn_example"
"MuggleWang/CosFace_pytorch" -> "yule-li/CosFace"
"MuggleWang/CosFace_pytorch" -> "clcarwin/sphereface_pytorch"
"MuggleWang/CosFace_pytorch" -> "wujiyang/Face_Pytorch"
"MuggleWang/CosFace_pytorch" -> "YirongMao/softmax_variants"
"MuggleWang/CosFace_pytorch" -> "AruniRC/resnet-face-pytorch"
"MuggleWang/CosFace_pytorch" -> "ronghuaiyang/arcface-pytorch"
"MuggleWang/CosFace_pytorch" -> "happynear/FaceDatasets"
"MuggleWang/CosFace_pytorch" -> "wy1iu/sphereface"
"MuggleWang/CosFace_pytorch" -> "Xiaoccer/MobileFaceNet_Pytorch"
"MuggleWang/CosFace_pytorch" -> "liorshk/facenet_pytorch"
"MuggleWang/CosFace_pytorch" -> "stresearch/xfr"
"MuggleWang/CosFace_pytorch" -> "happynear/AMSoftmax"
"MuggleWang/CosFace_pytorch" -> "TreB1eN/InsightFace_Pytorch"
"MuggleWang/CosFace_pytorch" -> "Joker316701882/Additive-Margin-Softmax"
"MuggleWang/CosFace_pytorch" -> "HuangYG123/CurricularFace"
"dlunion/EasyOpenPose" -> "dlunion/OpenPose"
"dlunion/EasyOpenPose" -> "lincolnhard/openpose-darknet"
"dlunion/EasyOpenPose" -> "dlunion/CaffeLSTM-OCR"
"dlunion/EasyOpenPose" -> "dlunion/CC4.0"
"dlunion/EasyOpenPose" -> "dlunion/CC5.0"
"jing-interactive/DancingGaga" -> "lincolnhard/openpose-darknet"
"jing-interactive/DancingGaga" -> "dlunion/EasyOpenPose"
"Fei-Wang/insightface" -> "AIInAi/tf-insightface"
"Fei-Wang/insightface" -> "luckycallor/InsightFace-tensorflow"
"Fei-Wang/insightface" -> "auroua/InsightFace_TF"
"DeathYmz/Check-in-and-Check-out-System-for-Face-Recognition" -> "zlWang573/FaceSign"
"habom2310/People-tracking-with-Age-and-Gender-detection" -> "tuomastik/video_face_detection"
"habom2310/People-tracking-with-Age-and-Gender-detection" -> "Mps24-7uk/Face-recog-Age-Gender-Emotion-"
"yule-li/CosFace" -> "MuggleWang/CosFace_pytorch"
"yule-li/CosFace" -> "Joker316701882/Additive-Margin-Softmax"
"yule-li/CosFace" -> "wy1iu/sphereface"
"yule-li/CosFace" -> "happynear/AMSoftmax"
"yule-li/CosFace" -> "clcarwin/sphereface_pytorch"
"yule-li/CosFace" -> "auroua/InsightFace_TF"
"yule-li/CosFace" -> "wujiyang/Face_Pytorch"
"yule-li/CosFace" -> "luckycallor/InsightFace-tensorflow"
"yule-li/CosFace" -> "happynear/FaceDatasets"
"yule-li/CosFace" -> "xialuxi/arcface-caffe"
"yule-li/CosFace" -> "penincillin/DREAM"
"yule-li/CosFace" -> "HiKapok/tf.extra_losses"
"yule-li/CosFace" -> "happynear/NormFace"
"yule-li/CosFace" -> "HuangYG123/CurricularFace"
"yule-li/CosFace" -> "sirius-ai/MobileFaceNet_TF"
"yxlijun/S3FD.pytorch" -> "yxlijun/DSFD.pytorch"
"yxlijun/S3FD.pytorch" -> "louis-she/sfd.pytorch"
"yxlijun/S3FD.pytorch" -> "clcarwin/SFD_pytorch"
"yxlijun/S3FD.pytorch" -> "yxlijun/Pyramidbox.pytorch"
"yxlijun/S3FD.pytorch" -> "sfzhang15/SFD"
"yxlijun/S3FD.pytorch" -> "luuuyi/S3FD.PyTorch"
"yxlijun/S3FD.pytorch" -> "Goingqs/PyramidBox"
"yxlijun/S3FD.pytorch" -> "ChiCheng123/SRN"
"yxlijun/S3FD.pytorch" -> "clovaai/EXTD_Pytorch"
"yxlijun/S3FD.pytorch" -> "mahyarnajibi/SSH"
"yxlijun/S3FD.pytorch" -> "dechunwang/SSH-pytorch"
"yxlijun/S3FD.pytorch" -> "zisianw/FaceBoxes.PyTorch"
"sfzhang15/SFD" -> "mahyarnajibi/SSH"
"sfzhang15/SFD" -> "zeusees/FaceBoxes"
"sfzhang15/SFD" -> "clcarwin/SFD_pytorch"
"sfzhang15/SFD" -> "liuyuisanai/RSA-for-object-detection"
"sfzhang15/SFD" -> "yxlijun/S3FD.pytorch"
"sfzhang15/SFD" -> "ChiCheng123/SRN"
"sfzhang15/SFD" -> "sfzhang15/RefineDet" ["e"=1]
"sfzhang15/SFD" -> "Goingqs/PyramidBox"
"sfzhang15/SFD" -> "peiyunh/tiny"
"sfzhang15/SFD" -> "wy1iu/sphereface"
"sfzhang15/SFD" -> "sfzhang15/FaceBoxes"
"sfzhang15/SFD" -> "ydwen/caffe-face"
"sfzhang15/SFD" -> "EricZgw/PyramidBox"
"sfzhang15/SFD" -> "foreverYoungGitHub/MTCNN"
"sfzhang15/SFD" -> "Rock-100/FaceKit"
"rekon/Smoke-semantic-segmentation" -> "aiformankind/wildfire-smoke-dataset"
"rekon/Smoke-semantic-segmentation" -> "linhaoqi027/smoke-segmentation"
"rekon/Smoke-semantic-segmentation" -> "POLARBEARWYY/Smoke-Detection"
"facebookarchive/AICamera-Style-Transfer" -> "facebookarchive/AICamera"
"chaoyuaw/incubator-mxnet" -> "PkuRainBow/HDC.caffe"
"chaoyuaw/incubator-mxnet" -> "ronekko/deep_metric_learning"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "dpressel/rude-carnie"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "yu4u/age-gender-estimation"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "GilLevi/AgeGenderDeepLearning"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "shamangary/SSR-Net"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "abars/YoloKerasFaceDetection"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "Tony607/Keras_age_gender"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "ZZUTK/Face-Aging-CAAE" ["e"=1]
"BoyuanJiang/Age-Gender-Estimate-TF" -> "wayen820/gender_age_estimation_mxnet"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "cjiang2/AgeEstimateAdience"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "b02901145/SSR-Net_megaage-asian"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "wondonghyeon/face-classification" ["e"=1]
"BoyuanJiang/Age-Gender-Estimate-TF" -> "dandynaufaldi/Agendernet"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "qiexing/face-landmark-localization"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "OValery16/gender-age-classification"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "kpzhang93/MTCNN_face_detection_alignment"
"prathmachowksey/Attendance-System-Face-Recognition" -> "imshreyshah/Attendance-System-Face-Recognition"
"akshaybahadur21/Emojinator" -> "akshaybahadur21/Facial-Recognition-using-Facenet"
"akshaybahadur21/Emojinator" -> "akshaybahadur21/Autopilot" ["e"=1]
"akshaybahadur21/Emojinator" -> "akshaybahadur21/Drowsiness_Detection"
"akshaybahadur21/Emojinator" -> "akshaybahadur21/HandMovementTracking"
"akshaybahadur21/Emojinator" -> "raghavpatnecha/Hello-Morse-OpenCV"
"akshaybahadur21/Emojinator" -> "008karan/Face-recognition"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "peiyunh/tiny"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "alexattia/ExtendedTinyFaces"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "varunagrawal/tiny-faces-pytorch"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "chinakook/hr101_mxnet" ["e"=1]
"cydonia999/Tiny_Faces_in_Tensorflow" -> "mahyarnajibi/SSH"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "Timforce/tiny-tf"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "EricZgw/PyramidBox"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "TropComplique/FaceBoxes-tensorflow"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "zeusees/FaceBoxes"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "sfzhang15/SFD"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "louis-she/sfd.pytorch"
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" -> "sumantrajoshi/Face-recognition-using-deep-learning"
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" -> "Skuldur/facenet-face-recognition"
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" -> "akshaybahadur21/Facial-Recognition-using-Facenet"
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" -> "abhiksark/Face-Recognition-FaceNet"
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" -> "sainimohit23/FaceNet-Real-Time-face-recognition"
"steponteam/FaceRecognization" -> "SkyStonePan/ArcfaceDemo_CSharp"
"steponteam/FaceRecognization" -> "catzhou2002/ArcFaceDemo"
"steponteam/FaceRecognization" -> "smartkids77/ArcSoft_FreeSDK_Demo"
"mileistone/study_resources" -> "Media-Smart/volkscv"
"mileistone/study_resources" -> "Media-Smart/vedacls"
"mileistone/study_resources" -> "Media-Smart/vedastr" ["e"=1]
"mileistone/study_resources" -> "Media-Smart/vedaseg"
"mileistone/study_resources" -> "Media-Smart/volksdep"
"mileistone/study_resources" -> "Media-Smart/cheetahinfer"
"EthanRosenthal/spacecutter" -> "Raschka-research-group/coral-pytorch"
"EthanRosenthal/spacecutter" -> "Raschka-research-group/corn-ordinal-neuralnet"
"EthanRosenthal/spacecutter" -> "fabianp/mord"
"windzu/facenet_facerecognition" -> "MrZhousf/tf_facenet"
"windzu/facenet_facerecognition" -> "chenlinzhong/face-login"
"windzu/facenet_facerecognition" -> "LeslieZhoa/tensorflow-facenet"
"windzu/facenet_facerecognition" -> "boyliwensheng/understand_facenet"
"windzu/facenet_facerecognition" -> "shanren7/real_time_face_recognition"
"windzu/facenet_facerecognition" -> "1996scarlet/ArcFace-Multiplex-Recognition"
"windzu/facenet_facerecognition" -> "jerry1900/faceRecognition"
"windzu/facenet_facerecognition" -> "AITTSMD/MTCNN-Tensorflow"
"windzu/facenet_facerecognition" -> "seathiefwang/FaceRecognition-tensorflow"
"windzu/facenet_facerecognition" -> "LeslieZhoa/tensorflow-MTCNN"
"windzu/facenet_facerecognition" -> "yeziyang1992/Python-Tensorflow-Face-v2.0"
"windzu/facenet_facerecognition" -> "vincentwei0919/insightface_for_face_recognition"
"windzu/facenet_facerecognition" -> "inspurer/WorkAttendanceSystem"
"windzu/facenet_facerecognition" -> "PanJinquan/Face_Detection_Recognition"
"windzu/facenet_facerecognition" -> "yeziyang1992/Face_Recognition_Client"
"TropComplique/mtcnn-pytorch" -> "Sierkinhane/mtcnn-pytorch"
"TropComplique/mtcnn-pytorch" -> "cydonia999/VGGFace2-pytorch"
"TropComplique/mtcnn-pytorch" -> "kuaikuaikim/dface"
"TropComplique/mtcnn-pytorch" -> "kpzhang93/MTCNN_face_detection_alignment"
"TropComplique/mtcnn-pytorch" -> "TreB1eN/InsightFace_Pytorch"
"TropComplique/mtcnn-pytorch" -> "clcarwin/sphereface_pytorch"
"TropComplique/mtcnn-pytorch" -> "wujiyang/Face_Pytorch"
"TropComplique/mtcnn-pytorch" -> "zisianw/FaceBoxes.PyTorch"
"TropComplique/mtcnn-pytorch" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"TropComplique/mtcnn-pytorch" -> "polarisZhao/mtcnn-pytorch"
"TropComplique/mtcnn-pytorch" -> "wy1iu/sphereface"
"TropComplique/mtcnn-pytorch" -> "biubug6/Pytorch_Retinaface"
"TropComplique/mtcnn-pytorch" -> "ZhaoJ9014/face.evoLVe"
"TropComplique/mtcnn-pytorch" -> "AITTSMD/MTCNN-Tensorflow"
"TropComplique/mtcnn-pytorch" -> "Rock-100/FaceKit"
"szaza/android-yolo-v2" -> "natanielruiz/android-yolo"
"szaza/android-yolo-v2" -> "sanfooh/android_yolo_truck"
"szaza/android-yolo-v2" -> "mdietrichstein/yolo-tiny-v1-mobile"
"szaza/android-yolo-v2" -> "tzutalin/Android-Object-Detection"
"szaza/android-yolo-v2" -> "huuuuusy/YOLOV3-on-Android"
"szaza/android-yolo-v2" -> "nhatuan84/android-opencv-yolov3"
"szaza/android-yolo-v2" -> "wics1224/yolov3-android-tflite"
"szaza/android-yolo-v2" -> "matteomedioli/AndroidObjectDetection"
"pranoyr/head-detection-using-yolo" -> "aditya-vora/FCHD-Fully-Convolutional-Head-Detector"
"pranoyr/head-detection-using-yolo" -> "aosokin/cnn_head_detection"
"pranoyr/head-detection-using-yolo" -> "HCIILAB/SCUT-HEAD-Dataset-Release"
"pranoyr/head-detection-using-yolo" -> "lincolnhard/mtcnn-head-detection"
"pranoyr/head-detection-using-yolo" -> "AVAuco/ssd_head_keras"
"pranoyr/head-detection-using-yolo" -> "wnov/Keras_Head_Detection_YoloV3"
"pranoyr/head-detection-using-yolo" -> "embracesource-cv-com/FCHD"
"pranoyr/head-detection-using-yolo" -> "val-iisc/lsc-cnn" ["e"=1]
"Goingqs/PyramidBox" -> "yxlijun/Pyramidbox.pytorch"
"Goingqs/PyramidBox" -> "EricZgw/PyramidBox"
"Goingqs/PyramidBox" -> "yxlijun/DSFD.pytorch"
"Goingqs/PyramidBox" -> "ChiCheng123/SRN"
"Goingqs/PyramidBox" -> "bairdzhang/smallhardface"
"Goingqs/PyramidBox" -> "dechunwang/SSH-pytorch"
"Goingqs/PyramidBox" -> "clcarwin/SFD_pytorch"
"Goingqs/PyramidBox" -> "zeusees/FaceBoxes"
"Goingqs/PyramidBox" -> "sfzhang15/SFD"
"Goingqs/PyramidBox" -> "yxlijun/S3FD.pytorch"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "HCIILAB/SCUT-HEAD-Dataset-Release"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "pranoyr/head-detection-using-yolo"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "gjy3035/C-3-Framework" ["e"=1]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "liuwei16/CSP" ["e"=1]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "aosokin/cnn_head_detection"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "val-iisc/lsc-cnn" ["e"=1]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "embracesource-cv-com/FCHD"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "Rock-100/FaceKit"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "Tencent/FaceDetection-DSFD"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "zuoqing1988/ZQCNN"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "leviome/human_counter" ["e"=1]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "zuoqing1988/train-mtcnn-head"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "gjy3035/Awesome-Crowd-Counting" ["e"=1]
"siriusdemon/pytorch-DEX" -> "oukohou/SSR_Net_Pytorch"
"siriusdemon/pytorch-DEX" -> "guillermogotre/CUSP" ["e"=1]
"shubamwalia/Face-Recognition-Attendance-System" -> "ashishdubey10/Face-Recognition-Based-Attendance-System"
"shubamwalia/Face-Recognition-Attendance-System" -> "shashankch292/Face-Detection-Recognition-Based-Attendance-System"
"shubamwalia/Face-Recognition-Attendance-System" -> "sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition"
"shubamwalia/Face-Recognition-Attendance-System" -> "yogesh-kamat/FaceAttend"
"shubamwalia/Face-Recognition-Attendance-System" -> "aagrawal207/OpenCV-Face-Recognition"
"chentyjpm/DarknetDemoInAndroid" -> "huuuuusy/YOLOV3-on-Android"
"chentyjpm/DarknetDemoInAndroid" -> "xiangweizeng/darknet2ncnn"
"chentyjpm/DarknetDemoInAndroid" -> "yuace/yolov2-Tiny-NCNN-Android-demo"
"SkyStonePan/ArcfaceDemo_CSharp_2.2" -> "SkyStonePan/ArcfaceDemo_CSharp_3.0"
"SkyStonePan/ArcfaceDemo_CSharp_2.2" -> "SkyStonePan/ArcSoftIDCardFace_CSharp"
"SkyStonePan/ArcfaceDemo_CSharp_2.2" -> "18628271760/MultipleFacesProcess"
"huihut/Facemoji" -> "lawsonsli/faceCapture"
"huihut/Facemoji" -> "utibenkei/DlibFaceLandmarkDetectorWithLive2DSample"
"huihut/Facemoji" -> "EnoxSoftware/DlibFaceLandmarkDetector"
"huihut/Facemoji" -> "huailiang/face-nn" ["e"=1]
"huihut/Facemoji" -> "HosniMansour/Unity3DFaceTtracking"
"huihut/Facemoji" -> "NumesSanguis/FACSvatar" ["e"=1]
"wujixiu/helmet-detection" -> "weimin17/Object-Detection_HelmetDetection"
"wujixiu/helmet-detection" -> "rekon/keras-yolo2"
"wujixiu/helmet-detection" -> "BlcaKHat/yolov3-Helmet-Detection"
"wujixiu/helmet-detection" -> "njvisionpower/Safety-Helmet-Wearing-Dataset"
"wujixiu/helmet-detection" -> "Angericky/safety-helmet-detection-in-real-time-video"
"wujixiu/helmet-detection" -> "kjaisingh/hardhat-detector"
"wujixiu/helmet-detection" -> "AnshulSood11/PPE-Detection-YOLO-Deep_SORT"
"wujixiu/helmet-detection" -> "rafiuddinkhan/Yolo-Training-GoogleColab"
"wujixiu/helmet-detection" -> "HCIILAB/SCUT-HEAD-Dataset-Release"
"wujixiu/helmet-detection" -> "iamdsc/automatic-helmet-detection"
"wujixiu/helmet-detection" -> "gengyanlei/reflective-clothes-detect-yolov5"
"wujixiu/helmet-detection" -> "honghuCode/mobileFacenet-ncnn"
"wujixiu/helmet-detection" -> "DataXujing/YOLO-V3-Tensorflow"
"wujixiu/helmet-detection" -> "Charrin/RetinaFace-Cpp"
"husaynhakeem/android-face-detector" -> "iglaweb/Ferris-Wheel" ["e"=1]
"husaynhakeem/android-face-detector" -> "rubygarage/emotion-rating-view" ["e"=1]
"husaynhakeem/android-face-detector" -> "quiph/RecyclerView-FastScroller" ["e"=1]
"husaynhakeem/android-face-detector" -> "RedApparat/FaceDetector" ["e"=1]
"husaynhakeem/android-face-detector" -> "mirrajabi/view-effects" ["e"=1]
"husaynhakeem/android-face-detector" -> "betri28/FaceDetectCamera"
"husaynhakeem/android-face-detector" -> "wotomas/VoiceRipple" ["e"=1]
"husaynhakeem/android-face-detector" -> "Marksss/AndroidAutoSwitcher" ["e"=1]
"husaynhakeem/android-face-detector" -> "Lauszus/FaceRecognitionApp"
"husaynhakeem/android-face-detector" -> "lopspower/LazyDatePicker" ["e"=1]
"iitzco/tfserve" -> "iitzco/deepzoo"
"cayden/facesample" -> "vcvycy/Android_Facenet"
"cayden/facesample" -> "vcvycy/MTCNN4Android"
"serengil/chefboost" -> "barisesmer/C4.5"
"serengil/chefboost" -> "serengil/decision-trees-for-ml"
"serengil/chefboost" -> "serengil/neural-networks-py"
"serengil/chefboost" -> "serengil/h2o-ai-101"
"serengil/chefboost" -> "serengil/crypto"
"serengil/chefboost" -> "serengil/exchanging-encrypted-mails"
"serengil/chefboost" -> "ryanmadden/decision-tree"
"serengil/chefboost" -> "serengil/LightPHE"
"serengil/chefboost" -> "serengil/neural-networks"
"serengil/chefboost" -> "m4jidRafiei/Decision-Tree-Python-"
"serengil/chefboost" -> "serengil/tensorflow-101"
"serengil/chefboost" -> "geerk/C45algorithm"
"KaihuaTang/ResNet50-Pytorch-Face-Recognition" -> "AruniRC/resnet-face-pytorch"
"KaihuaTang/ResNet50-Pytorch-Face-Recognition" -> "wangyunjeff/ResNet50-MNIST-pytorch"
"yeziyang1992/Python-Tensorflow-Face-v2.0" -> "yeziyang1992/Face_Recognition_Client"
"yeziyang1992/Python-Tensorflow-Face-v2.0" -> "yeziyang1992/Python-Tensorflow-Face"
"yeziyang1992/Python-Tensorflow-Face-v2.0" -> "lph0729/TensorFlow-FaceRecognition"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "TingsongYu/cascaded_mobilenet-v2"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "zhanglaplace/MobileFaceNet"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "KaleidoZhouYN/mobilefacenet-caffe"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "xialuxi/arcface-caffe"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "610265158/face_landmark"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "TropComplique/wing-loss"
"songhengyang/face_landmark_factory" -> "yinguobing/facial-landmark-detection-hrnet"
"songhengyang/face_landmark_factory" -> "LynnHo/Facial-Landmarks-of-Face-Datasets"
"guanfuchen/facedet" -> "lxg2015/faceboxes"
"SkyStonePan/ArcfaceDemo_Android" -> "SkyStonePan/IdCardVeriDemo_Android"
"SkyStonePan/ArcfaceDemo_Android" -> "asdfqwrasdf/ArcFaceDemo"
"SkyStonePan/ArcfaceDemo_Android" -> "SkyStonePan/ArcfaceDemo_CSharp"
"huangyangyu/NoiseFace" -> "huangyangyu/SeqFace"
"huangyangyu/NoiseFace" -> "zhongyy/Unequal-Training-for-Deep-Face-Recognition-with-Long-Tailed-Noisy-Data"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "vcvycy/MTCNN4Android"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "vcvycy/Android_Facenet"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "pillarpond/face-recognizer-android"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "GRAYKEY/mobilefacenet_android"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "sirius-ai/MobileFaceNet_TF"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "moli232777144/mtcnn_ncnn"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "xuduo35/ncnn-mtcnn-facenet"
"Luca96/android-face-landmarks" -> "Luca96/dlib-for-android"
"lxg2015/faceboxes" -> "XiaXuehai/faceboxes"
"lxg2015/faceboxes" -> "guanfuchen/facedet"
"nosyarlin/Cyber-Attack-Prediction" -> "s1Rishabh/Auto-Attendance-System-using-Deep-Learning"
"nosyarlin/Cyber-Attack-Prediction" -> "faeya/traffic-sign-classification"
"nosyarlin/Cyber-Attack-Prediction" -> "tripathivenkteshwar/faceDetection"
"wangshengyang1996/ArcfaceDemo" -> "wangshengyang1996/FaceTrackDemo"
"ChiCheng123/SRN" -> "Goingqs/PyramidBox"
"ChiCheng123/SRN" -> "rainofmine/Face_Attention_Network"
"ChiCheng123/SRN" -> "yxlijun/Pyramidbox.pytorch"
"ChiCheng123/SRN" -> "yxlijun/DSFD.pytorch"
"ChiCheng123/SRN" -> "zisianw/FaceBoxes.PyTorch"
"ChiCheng123/SRN" -> "sfzhang15/FaceBoxes"
"ChiCheng123/SRN" -> "sfzhang15/SFD"
"ChiCheng123/SRN" -> "EricZgw/PyramidBox"
"ChiCheng123/SRN" -> "yxlijun/S3FD.pytorch"
"ChiCheng123/SRN" -> "louis-she/sfd.pytorch"
"ChiCheng123/SRN" -> "KimSoybean/ScratchDet" ["e"=1]
"ChiCheng123/SRN" -> "xiaoboCASIA/SV-X-Softmax"
"ChiCheng123/SRN" -> "OceanPang/Libra_R-CNN" ["e"=1]
"YirongMao/softmax_variants" -> "MuggleWang/CosFace_pytorch"
"YirongMao/softmax_variants" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"YirongMao/softmax_variants" -> "amirhfarzaneh/lsoftmax-pytorch"
"YirongMao/softmax_variants" -> "jxgu1016/MNIST_center_loss_pytorch"
"YirongMao/softmax_variants" -> "ChaofWang/L-GM_loss_pytorch"
"YirongMao/softmax_variants" -> "jihunchoi/lsoftmax-pytorch"
"YirongMao/softmax_variants" -> "KaiyangZhou/pytorch-center-loss"
"YirongMao/softmax_variants" -> "WeitaoVan/L-GM-loss"
"YirongMao/softmax_variants" -> "4uiiurz1/pytorch-adacos"
"makarandtapaswi/BallClustering_ICCV2019" -> "vivoutlaw/SSIAM"
"xiaoboCASIA/SV-X-Softmax" -> "tiandunx/SV-X-Softmax"
"xiaoboCASIA/SV-X-Softmax" -> "HuangYG123/DDL"
"xiaoboCASIA/SV-X-Softmax" -> "zma-c-137/VarGFaceNet"
"xiaoboCASIA/SV-X-Softmax" -> "seasonSH/Probabilistic-Face-Embeddings"
"xiaoboCASIA/SV-X-Softmax" -> "huangyangyu/NoiseFace"
"xiaoboCASIA/SV-X-Softmax" -> "HuangYG123/CurricularFace"
"xiaoboCASIA/SV-X-Softmax" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"xiaoboCASIA/SV-X-Softmax" -> "walkoncross/prepare-faces-zyf"
"xiaoboCASIA/SV-X-Softmax" -> "xialuxi/arcface-caffe"
"xiaoboCASIA/SV-X-Softmax" -> "liuyuisanai/trojans-face-recognizer"
"xiaoboCASIA/SV-X-Softmax" -> "JiajiongCao/CELEB-500K"
"xiaoboCASIA/SV-X-Softmax" -> "wy1iu/MHE"
"xiaoboCASIA/SV-X-Softmax" -> "4uiiurz1/pytorch-adacos"
"xiaoboCASIA/SV-X-Softmax" -> "happynear/FaceDatasets"
"xiaoboCASIA/SV-X-Softmax" -> "tiandunx/loss_function_search"
"vcvycy/MTCNN4Android" -> "vcvycy/Android_Facenet"
"vcvycy/MTCNN4Android" -> "jiangxiluning/facenet_mtcnn_to_mobile"
"vcvycy/MTCNN4Android" -> "cayden/facesample"
"vcvycy/MTCNN4Android" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"vcvycy/MTCNN4Android" -> "moli232777144/mtcnn_ncnn"
"vcvycy/MTCNN4Android" -> "tzolov/mtcnn-java"
"vcvycy/MTCNN4Android" -> "pillarpond/face-recognizer-android"
"vcvycy/MTCNN4Android" -> "GthanosAI/android_mtcnn_insightface_face_recognize"
"ksachdeva/opencv-mtcnn" -> "deepinsight/mtcnn-ncnn"
"ksachdeva/opencv-mtcnn" -> "golunovas/mtcnn-cpp"
"sthanhng/yoloface" -> "Chenyang-ZHU/YOLOv3-Based-Face-Detection-Tracking"
"sthanhng/yoloface" -> "abars/YoloKerasFaceDetection"
"sthanhng/yoloface" -> "iitzco/faced"
"sthanhng/yoloface" -> "xhuvom/FaceID"
"sthanhng/yoloface" -> "AzureWoods/faceRecognition-yolo-facenet"
"sthanhng/yoloface" -> "yeephycho/tensorflow-face-detection"
"sthanhng/yoloface" -> "zlmo/Face-Detection"
"sthanhng/yoloface" -> "DayBreak-u/yolo-face-with-landmark"
"sthanhng/yoloface" -> "imistyrain/yolo-face"
"sthanhng/yoloface" -> "ildoonet/deepface"
"sthanhng/yoloface" -> "bruceyang2012/Face-detection-with-mobilenet-ssd"
"sthanhng/yoloface" -> "zisianw/FaceBoxes.PyTorch"
"sthanhng/yoloface" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"sthanhng/yoloface" -> "SpikeKing/keras-yolo3-detection" ["e"=1]
"sthanhng/yoloface" -> "dannyblueliu/YOLO-Face-detection"
"LeslieZhoa/tensorflow-facenet" -> "LeslieZhoa/tensorflow-MTCNN"
"LeslieZhoa/tensorflow-facenet" -> "windzu/facenet_facerecognition"
"LeslieZhoa/tensorflow-facenet" -> "MrZhousf/tf_facenet"
"liguiyuan/mobilefacenet-ncnn" -> "GRAYKEY/mobilefacenet_ncnn"
"liguiyuan/mobilefacenet-ncnn" -> "wllkk/face-recognition-ncnn"
"liguiyuan/mobilefacenet-ncnn" -> "zhaotun/MTCNN_MobileFacenet_NCNN_Android"
"tripathivenkteshwar/faceDetection" -> "faeya/traffic-sign-classification"
"tripathivenkteshwar/faceDetection" -> "nosyarlin/Cyber-Attack-Prediction"
"tripathivenkteshwar/faceDetection" -> "s1Rishabh/Auto-Attendance-System-using-Deep-Learning"
"Balaje/OpenCV" -> "Aravindlivewire/Opencv"
"gloomyfish1998/opencv4android" -> "jiangdongguo/OpenCV4Android" ["e"=1]
"gloomyfish1998/opencv4android" -> "kongqw/OpenCVForAndroid"
"deepinsight/mxnet-SSH" -> "ElegantGod/SSHA"
"javier-hernandezo/FaceQnet" -> "pterhoer/FaceImageQuality"
"javier-hernandezo/FaceQnet" -> "deepcam-cn/FaceQuality"
"javier-hernandezo/FaceQnet" -> "pterhoer/QMagFace"
"javier-hernandezo/FaceQnet" -> "seasonSH/Probabilistic-Face-Embeddings"
"javier-hernandezo/FaceQnet" -> "zhanglijun95/FIIQA"
"javier-hernandezo/FaceQnet" -> "IrvingMeng/MagFace"
"javier-hernandezo/FaceQnet" -> "yangyuke001/FIIQA-PyTorch" ["e"=1]
"javier-hernandezo/FaceQnet" -> "Slinene/SDD-FIQA"
"javier-hernandezo/FaceQnet" -> "BruceZhanKai/Face-Image-Quality-Assessment"
"javier-hernandezo/FaceQnet" -> "pterhoer/ExplainableFaceImageQuality"
"javier-hernandezo/FaceQnet" -> "moli232777144/mobilefacenet-mxnet"
"javier-hernandezo/FaceQnet" -> "zma-c-137/VarGFaceNet"
"zeusees/FaceBoxes" -> "dlunion/mtcnn"
"zeusees/FaceBoxes" -> "AlphaQi/MTCNN-light"
"zeusees/FaceBoxes" -> "sfzhang15/FaceBoxes"
"zeusees/FaceBoxes" -> "szad670401/Fast-MTCNN"
"zeusees/FaceBoxes" -> "lsy17096535/faceboxes"
"zeusees/FaceBoxes" -> "blankWorld/MTCNN-Accelerate-Onet"
"zeusees/FaceBoxes" -> "mahyarnajibi/SSH"
"zeusees/FaceBoxes" -> "CongWeilin/mtcnn-caffe"
"zeusees/FaceBoxes" -> "xialuxi/arcface-caffe"
"zeusees/FaceBoxes" -> "liuyuisanai/RSA-for-object-detection"
"zeusees/FaceBoxes" -> "sfzhang15/SFD"
"zeusees/FaceBoxes" -> "panda-lab/face-landmark"
"zeusees/FaceBoxes" -> "Charrin/RetinaFace-Cpp"
"zeusees/FaceBoxes" -> "Seanlinx/mtcnn"
"zeusees/FaceBoxes" -> "ElegantGod/SSHA"
"onnx/onnx-caffe2" -> "facebookarchive/AICamera-Style-Transfer"
"onnx/onnx-caffe2" -> "lupesko/model-zoo-old"
"xiaoyaoyou1212/ViseFace" -> "luoyexk/FaceDetector"
"WeitaoVan/L-GM-loss" -> "ChaofWang/L-GM_loss_pytorch"
"WeitaoVan/L-GM-loss" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"clcarwin/sphereface_pytorch" -> "wy1iu/sphereface"
"clcarwin/sphereface_pytorch" -> "MuggleWang/CosFace_pytorch"
"clcarwin/sphereface_pytorch" -> "happynear/AMSoftmax"
"clcarwin/sphereface_pytorch" -> "yule-li/CosFace"
"clcarwin/sphereface_pytorch" -> "wujiyang/Face_Pytorch"
"clcarwin/sphereface_pytorch" -> "TreB1eN/InsightFace_Pytorch"
"clcarwin/sphereface_pytorch" -> "ronghuaiyang/arcface-pytorch"
"clcarwin/sphereface_pytorch" -> "Joker316701882/Additive-Margin-Softmax"
"clcarwin/sphereface_pytorch" -> "wy1iu/LargeMargin_Softmax_Loss"
"clcarwin/sphereface_pytorch" -> "AlfredXiangWu/LightCNN"
"clcarwin/sphereface_pytorch" -> "penincillin/DREAM"
"clcarwin/sphereface_pytorch" -> "happynear/NormFace"
"clcarwin/sphereface_pytorch" -> "fwang91/IMDb-Face"
"clcarwin/sphereface_pytorch" -> "liorshk/facenet_pytorch"
"clcarwin/sphereface_pytorch" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"KaleidoZhouYN/Loss-Functions" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"KaleidoZhouYN/Loss-Functions" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"KaleidoZhouYN/Loss-Functions" -> "KaleidoZhouYN/Pytorch_FRS"
"KaleidoZhouYN/Loss-Functions" -> "liuyuisanai/coco_loss"
"KaleidoZhouYN/Loss-Functions" -> "inlmouse/MS-Celeb-1M_WashList"
"KaleidoZhouYN/Loss-Functions" -> "happynear/AMSoftmax"
"tpys/face-everthing" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"tpys/face-everthing" -> "zeusees/FaceBoxes"
"tpys/face-everthing" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"tpys/face-everthing" -> "wy1iu/sphereface"
"tpys/face-everthing" -> "happynear/AMSoftmax"
"tpys/face-everthing" -> "happynear/FaceVerification"
"tpys/face-everthing" -> "happynear/NormFace"
"tpys/face-everthing" -> "fwang91/IMDb-Face"
"tpys/face-everthing" -> "GarrickLin/MXNet2Caffe"
"tpys/face-everthing" -> "happynear/FaceDatasets"
"FengZhenhua/Wing-Loss" -> "TropComplique/wing-loss"
"FengZhenhua/Wing-Loss" -> "FengZhenhua/DAC-CSR"
"FengZhenhua/Wing-Loss" -> "JunrQ/caffe-layer"
"rainofmine/Face_Attention_Network" -> "ChiCheng123/SRN"
"rainofmine/Face_Attention_Network" -> "IssacCyj/Adversarial-Occlussion-aware-Face-Detection"
"rainofmine/Face_Attention_Network" -> "rainofmine/Repulsion_Loss" ["e"=1]
"rainofmine/Face_Attention_Network" -> "Goingqs/PyramidBox"
"DeepQuestAI/Fire-Smoke-Dataset" -> "cair/Fire-Detection-Image-Dataset"
"DeepQuestAI/Fire-Smoke-Dataset" -> "steffensbola/furg-fire-dataset"
"DeepQuestAI/Fire-Smoke-Dataset" -> "OlafenwaMoses/FireNET"
"DeepQuestAI/Fire-Smoke-Dataset" -> "sulenn/fire-dataset"
"DeepQuestAI/Fire-Smoke-Dataset" -> "tobybreckon/fire-detection-cnn"
"DeepQuestAI/Fire-Smoke-Dataset" -> "aiformankind/wildfire-smoke-dataset"
"DeepQuestAI/Fire-Smoke-Dataset" -> "gaiasd/DFireDataset"
"DeepQuestAI/Fire-Smoke-Dataset" -> "breed2137/fire_dataset"
"DeepQuestAI/Fire-Smoke-Dataset" -> "robmarkcole/fire-detection-from-images"
"DeepQuestAI/Fire-Smoke-Dataset" -> "RashadGarayev/FireDetection"
"huuuuusy/YOLOV3-on-Android" -> "chentyjpm/DarknetDemoInAndroid"
"huuuuusy/YOLOV3-on-Android" -> "huuuuusy/Darknet-Cross"
"huuuuusy/YOLOV3-on-Android" -> "TheSmike/pasm-yolov3-Android"
"huuuuusy/YOLOV3-on-Android" -> "yuace/yolov2-Tiny-NCNN-Android-demo"
"huuuuusy/YOLOV3-on-Android" -> "huuuuusy/videocube-toolkit"
"huuuuusy/YOLOV3-on-Android" -> "wics1224/yolov3-android-tflite"
"huuuuusy/YOLOV3-on-Android" -> "huuuuusy/YOLO-Learning-Notes"
"FunkyKoki/Look_At_Boundary_PyTorch" -> "facial-landmarks-localization-challenge/Look_At_Boundary_PyTorch"
"dlunion/CC5.0" -> "dlunion/CC4.0"
"dlunion/CC5.0" -> "dlunion/CaffeLSTM-OCR"
"cleardusk/ImageToAscii" -> "cleardusk/EmotionChallenge"
"cleardusk/ImageToAscii" -> "cleardusk/UCAS"
"TianxingWu/driver-fatigue-monitoring-system" -> "prashantdukecyfi/Driver-monitoring-system-for-automobile-using-machine-learning-and-OpenCV"
"TianxingWu/driver-fatigue-monitoring-system" -> "parai/dms"
"arpit-jadon/FireNet-LightWeight-Network-for-Fire-Detection" -> "tobybreckon/fire-detection-cnn"
"arpit-jadon/FireNet-LightWeight-Network-for-Fire-Detection" -> "OlafenwaMoses/FireNET"
"arpit-jadon/FireNet-LightWeight-Network-for-Fire-Detection" -> "cair/Fire-Detection-Image-Dataset"
"arpit-jadon/FireNet-LightWeight-Network-for-Fire-Detection" -> "steffensbola/furg-fire-dataset"
"andrewhuman/sphereloss_tensorflow" -> "hujun100/tensorflow-sphereface"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "Confusezius/Deep-Metric-Learning-Baselines"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "bnu-wangxun/Deep_Metric"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "msight-tech/research-ms-loss"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "KevinMusgrave/powerful-benchmarker"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "dichotomies/proxy-nca"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "CompVis/metric-learning-divide-and-conquer"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "Confusezius/ICCV2019_MIC"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "clovaai/symmetrical-synthesis" ["e"=1]
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "kunhe/FastAP-metric-learning"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "KevinMusgrave/pytorch-metric-learning" ["e"=1]
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "pierre-jacob/ICCV2019-Horde"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "msight-tech/research-xbm"
"kdhht2334/Survey_of_Deep_Metric_Learning" -> "idstcv/SoftTriple"
"aashishpeepra/Whatsapp_Bot_selenium" -> "aashishpeepra/whatsapp-live-cricket-bot"
"noelcodella/tripletloss-keras-tensorflow" -> "KinWaiCheuk/Triplet-net-keras"
"noelcodella/tripletloss-keras-tensorflow" -> "shivsondhi/Triplet-Loss"
"xuexingyu24/MTCNN_Tutorial" -> "xuexingyu24/Pruning_MTCNN_MobileFaceNet_Using_Pytorch"
"kasyoukin/caffe_ocr_for_linux" -> "yalecyu/crnn.caffe"
"kasyoukin/caffe_ocr_for_linux" -> "ChWick/warp-ctc"
"kasyoukin/caffe_ocr_for_linux" -> "fendaq/Caffe-OCR"
"kasyoukin/caffe_ocr_for_linux" -> "warrentdrew/Caffe_SSD_LSTM_LPR"
"xjg0124/Video_Smoke_Detection" -> "xjg0124/Fire-and-Smoke-Detection"
"xjg0124/Video_Smoke_Detection" -> "POLARBEARWYY/Smoke-Detection"
"xjg0124/Video_Smoke_Detection" -> "filonenkoa/cnn_evaluation_smoke"
"xjg0124/Video_Smoke_Detection" -> "kauser-cse-buet/flame-detection-system"
"xjg0124/Video_Smoke_Detection" -> "tobybreckon/fire-detection-cnn"
"xjg0124/Video_Smoke_Detection" -> "lancezhange/smoke_recognition"
"xjg0124/Video_Smoke_Detection" -> "nicolaswee/FireDetection-TensorFlow"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "shubamwalia/Face-Recognition-Attendance-System"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "kmhmubin/Face-Recognition-Attendance-System"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "shashankch292/Face-Detection-Recognition-Based-Attendance-System"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "neha01/FaceRecognition"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "satinder147/Attendance-using-Face"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "ShubhamSonkesriya/Face-Recognition-Attendance-System"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "yogesh-kamat/FaceAttend"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "Spidy20/Attendace_management_system"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "amaljoseph/Face_Recognition_Attendance_System_Python-OpenCV"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "Marauders-9998/Attendance-Management-using-Face-Recognition"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "codeglitchz/attendance-system"
"ashishdubey10/Face-Recognition-Based-Attendance-System" -> "CT83/Facial-Recognition-Attendance-System"
"wzzheng/HDML" -> "ronekko/deep_metric_learning"
"wzzheng/HDML" -> "Confusezius/ICCV2019_MIC"
"wzzheng/HDML" -> "mop/bier"
"wzzheng/HDML" -> "dichotomies/proxy-nca"
"wzzheng/HDML" -> "vadimkantorov/metriclearningbench"
"vcvycy/Android_Facenet" -> "Monologuethl/Android_Facenet_Recognition"
"vcvycy/Android_Facenet" -> "vcvycy/MTCNN4Android"
"vcvycy/Android_Facenet" -> "GRAYKEY/mobilefacenet_android"
"vcvycy/Android_Facenet" -> "cayden/facesample"
"vcvycy/Android_Facenet" -> "jiangxiluning/facenet_mtcnn_to_mobile"
"friedhelm739/Insightface-tensorflow" -> "friedhelm739/MTCNN-tensorflow"
"msindev/Facial-Recognition-Using-FaceNet-Siamese-One-Shot-Learning" -> "satinder147/Attendance-using-Face"
"msindev/Facial-Recognition-Using-FaceNet-Siamese-One-Shot-Learning" -> "dkarunakaran/facenet_mtcnn_tensorflow_inference_engine"
"msindev/Facial-Recognition-Using-FaceNet-Siamese-One-Shot-Learning" -> "sumantrajoshi/Face-recognition-using-deep-learning"
"msindev/Facial-Recognition-Using-FaceNet-Siamese-One-Shot-Learning" -> "adityajn105/Face-Recognition-Siamese-Network"
"msindev/Facial-Recognition-Using-FaceNet-Siamese-One-Shot-Learning" -> "anson0910/Siamese_Networks_Face_Recognition"
"SkyStonePan/ArcfaceDemo_CSharp" -> "SkyStonePan/ArcSoftIDCardFace_CSharp"
"SkyStonePan/ArcfaceDemo_CSharp" -> "Thxzzzzz/ArcFaceSharp"
"SkyStonePan/ArcfaceDemo_CSharp" -> "catzhou2002/ArcFaceDemo"
"amirhfarzaneh/lsoftmax-pytorch" -> "jihunchoi/lsoftmax-pytorch"
"amirhfarzaneh/lsoftmax-pytorch" -> "wy1iu/LargeMargin_Softmax_Loss"
"amirhfarzaneh/lsoftmax-pytorch" -> "YirongMao/softmax_variants"
"amirhfarzaneh/lsoftmax-pytorch" -> "HiKapok/tf.extra_losses"
"amirhfarzaneh/lsoftmax-pytorch" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"arunponnusamy/gender-detection-keras" -> "arunponnusamy/gender-classification"
"arunponnusamy/gender-detection-keras" -> "smahesh29/Gender-and-Age-Detection"
"arunponnusamy/gender-detection-keras" -> "arunponnusamy/face-detection-comparison"
"shuguoli68/FaceDemo" -> "shuguoli68/LiSeetaFace2"
"ssarfraz/FINCH-Clustering" -> "Zhongdao/gcn_clustering"
"ssarfraz/FINCH-Clustering" -> "koulakis/h-nne" ["e"=1]
"ssarfraz/FINCH-Clustering" -> "mahdiabavisani/Deep-multimodal-subspace-clustering-networks" ["e"=1]
"ssarfraz/FINCH-Clustering" -> "Annusha/unsup_temp_embed"
"ssarfraz/FINCH-Clustering" -> "makarandtapaswi/BallClustering_ICCV2019"
"ssarfraz/FINCH-Clustering" -> "k-han/DTC" ["e"=1]
"ssarfraz/FINCH-Clustering" -> "yl-1993/learn-to-cluster"
"ssarfraz/FINCH-Clustering" -> "XiaohangZhan/cdp"
"ssarfraz/FINCH-Clustering" -> "shahsohil/DCC" ["e"=1]
"ElegantGod/SSHA" -> "deepinsight/mxnet-SSH"
"ElegantGod/SSHA" -> "KaleidoZhouYN/Pytorch_FRS"
"ElegantGod/SSHA" -> "ElegantGod/mxnet-SSHA"
"ElegantGod/SSHA" -> "KaleidoZhouYN/e2e-joint-face-detection-and-alignment"
"xiangweizeng/darknet2ncnn" -> "chentyjpm/DarknetDemoInAndroid"
"xiangweizeng/darknet2ncnn" -> "KangKangLoveCat/insightface_ncnn"
"xiangweizeng/darknet2ncnn" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"gv22ga/dlib-face-recognition-android" -> "tzutalin/dlib-android-app"
"gv22ga/dlib-face-recognition-android" -> "xGonZh10n/FaceDetection"
"gv22ga/dlib-face-recognition-android" -> "weank1984/face-recognition"
"gv22ga/dlib-face-recognition-android" -> "tzutalin/dlib-android"
"gv22ga/dlib-face-recognition-android" -> "gicheonkang/fast-face-android"
"POLARBEARWYY/Smoke-Detection" -> "xjg0124/Video_Smoke_Detection"
"POLARBEARWYY/Smoke-Detection" -> "midasklr/FireSmokeDetectionByEfficientNet"
"POLARBEARWYY/Smoke-Detection" -> "lancezhange/smoke_recognition"
"POLARBEARWYY/Smoke-Detection" -> "rekon/Smoke-semantic-segmentation"
"POLARBEARWYY/Smoke-Detection" -> "ujjwalsharma9/Fire-Detection"
"POLARBEARWYY/Smoke-Detection" -> "Leofengxin/Video_Smoke_Detection"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "mariolew/Deep-Alignment-Network-tensorflow"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "MarekKowalski/DeepAlignmentNetwork"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "wywu/LAB"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "LeeRel1991/faceAlignment_tensorflow"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "BobLiu20/FacialLandmark_Caffe"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "mrgloom/Face-landmarks-detection-benchmark"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"ISS-Kerui/Bus-Driver-Behavior-Detection" -> "maxuehao/Smokeing-detection"
"niehen6174/image-and-speech-processing" -> "niehen6174/Face-recognition-check-in-system"
"bnair2001/Driver-monitoring-system" -> "parai/dms"
"JuheonYi/tiny-tf" -> "Timforce/tiny-tf"
"AdrianUng/keras-triplet-loss-mnist" -> "KinWaiCheuk/Triplet-net-keras"
"AdrianUng/keras-triplet-loss-mnist" -> "noelcodella/tripletloss-keras-tensorflow"
"AdrianUng/keras-triplet-loss-mnist" -> "shivsondhi/Triplet-Loss"
"EricZgw/PyramidBox" -> "Goingqs/PyramidBox"
"EricZgw/PyramidBox" -> "ChiCheng123/SRN"
"EricZgw/PyramidBox" -> "sfzhang15/SFD"
"EricZgw/PyramidBox" -> "zeusees/FaceBoxes"
"EricZgw/PyramidBox" -> "mahyarnajibi/SSH"
"EricZgw/PyramidBox" -> "bairdzhang/smallhardface"
"EricZgw/PyramidBox" -> "wondervictor/WiderFace-Evaluation"
"EricZgw/PyramidBox" -> "CongWeilin/mtcnn-caffe"
"EricZgw/PyramidBox" -> "foreverYoungGitHub/MTCNN"
"EricZgw/PyramidBox" -> "yxlijun/DSFD.pytorch"
"zhanglaplace/3000fps-mtcnn" -> "zhanglaplace/mtcnn"
"zhanglaplace/3000fps-mtcnn" -> "flycat0101/imistyrain-MobileFaceNet"
"GarrickLin/MXNet2Caffe" -> "cypw/MXNet2Caffe"
"GarrickLin/MXNet2Caffe" -> "KaleidoZhouYN/mobilefacenet-caffe"
"GarrickLin/MXNet2Caffe" -> "xialuxi/arcface-caffe"
"GarrickLin/MXNet2Caffe" -> "szad670401/advanced-mxnet2caffe"
"ivangrov/Android-Deep-Learning-with-OpenCV" -> "matteomedioli/AndroidObjectDetection"
"markson14/FaceRecognitionCpp" -> "szad670401/tvm_mobilefacenet"
"AIRLegend/fakenews" -> "OValery16/Language-Translation-with-deep-learning-"
"jiapei100/VOSM" -> "greatyao/aamlibrary"
"jiapei100/VOSM" -> "greatyao/asmlibrary"
"jiapei100/VOSM" -> "cxcxcxcx/asmlib-opencv"
"gaobb/DLDL-v2" -> "gaobb/DLDL"
"gaobb/DLDL-v2" -> "PuNeal/DLDL-v2-PyTorch"
"msindev/Gesture-Controlled-Snake-Game" -> "msindev/Data-Structures-In-C"
"handongfeng/MNIST-center-loss" -> "shamangary/Keras-MNIST-center-loss-with-visualization"
"zhanglaplace/MobileFaceNet" -> "KaleidoZhouYN/mobilefacenet-caffe"
"zhanglaplace/MobileFaceNet" -> "gehaocool/CombinedMargin-caffe"
"zhanglaplace/MobileFaceNet" -> "flycat0101/imistyrain-MobileFaceNet"
"zhanglaplace/MobileFaceNet" -> "xialuxi/arcface-caffe"
"zhanglaplace/MobileFaceNet" -> "GRAYKEY/mobilefacenet_android"
"codeniko/eos" -> "codeniko/shape_predictor_81_face_landmarks"
"NegatioN/OnlineMiningTripletLoss" -> "alfonmedela/triplet-loss-pytorch"
"NegatioN/OnlineMiningTripletLoss" -> "andreasveit/triplet-network-pytorch"
"zeusees/HyperLabelImg" -> "olojuwin/facerecognize-for-mobile-phone"
"zeusees/HyperLabelImg" -> "moli232777144/mtcnn_ncnn"
"zeusees/HyperLabelImg" -> "guoqiangqi/PFLD"
"zeusees/HyperLabelImg" -> "deepcam-cn/Face-Anti-spoofing.pytorch" ["e"=1]
"zeusees/HyperLabelImg" -> "zeusees/HyperFT"
"zeusees/HyperLabelImg" -> "610265158/Peppa_Pig_Face_Landmark"
"zeusees/HyperLabelImg" -> "xiangweizeng/mobile-lpr" ["e"=1]
"zeusees/HyperLabelImg" -> "zeusees/HyperVID" ["e"=1]
"zeusees/HyperLabelImg" -> "biubug6/Face-Detector-1MB-with-landmark"
"OAID/FaceRecognition" -> "OAID/FaceDetection"
"OAID/FaceRecognition" -> "OAID/YSQfastfd"
"OAID/FaceRecognition" -> "OAID/Caffe-HRT"
"OAID/FaceRecognition" -> "DaFuCoding/MTCNN_Caffe"
"rishabhverma17/sms_slang_translator" -> "surajsinghbisht054/Python-Media-Player"
"kunhe/FastAP-metric-learning" -> "kunhe/Deep-Metric-Learning-Baselines"
"kunhe/FastAP-metric-learning" -> "Confusezius/ICCV2019_MIC"
"gehaocool/CombinedMargin-caffe" -> "xialuxi/arcface-caffe"
"gehaocool/CombinedMargin-caffe" -> "zhanglaplace/MobileFaceNet"
"gehaocool/CombinedMargin-caffe" -> "KaleidoZhouYN/LightResNet-50"
"hujun100/tensorflow-sphereface" -> "andrewhuman/sphereloss_tensorflow"
"hujun100/tensorflow-sphereface" -> "pppoe/tensorflow-sphereface-asoftmax"
"bruinxiong/Modified-CRUNet-and-Residual-Attention-Network.mxnet" -> "imistyrain/MobileFaceNet"
"YunYang1994/SphereFace" -> "pppoe/tensorflow-sphereface-asoftmax"
"YunYang1994/SphereFace" -> "HiKapok/tf.extra_losses"
"yxlijun/DSFD.pytorch" -> "yxlijun/Pyramidbox.pytorch"
"yxlijun/DSFD.pytorch" -> "Goingqs/PyramidBox"
"yxlijun/DSFD.pytorch" -> "yxlijun/S3FD.pytorch"
"yxlijun/DSFD.pytorch" -> "wondervictor/WiderFace-Evaluation"
"yxlijun/DSFD.pytorch" -> "ChiCheng123/SRN"
"yxlijun/DSFD.pytorch" -> "610265158/DSFD-tensorflow"
"yxlijun/DSFD.pytorch" -> "lijiannuist/lightDSFD"
"YirongMao/NAN" -> "jinyanxu/Neural-Aggregation-Network-for-Video-Face-Recognition"
"YirongMao/NAN" -> "YirongMao/COSONet"
"louis-she/sfd.pytorch" -> "clcarwin/SFD_pytorch"
"louis-she/sfd.pytorch" -> "yxlijun/S3FD.pytorch"
"louis-she/sfd.pytorch" -> "luuuyi/S3FD.PyTorch"
"HWenTing/yolo-Android-Real-time-Vehicle-Recognition-System" -> "sanfooh/android_yolo_truck"
"bruceyang2012/Face-Alignment-with-simple-cnn" -> "bruceyang2012/Face-identification-with-cnn-triplet-loss"
"bruceyang2012/Face-Alignment-with-simple-cnn" -> "bruceyang2012/Face-detection-with-mobilenet-ssd"
"bruceyang2012/Face-Alignment-with-simple-cnn" -> "mariolew/TF-FaceLandmarkDetection"
"dandynaufaldi/Agendernet" -> "cjiang2/AgeEstimateAdience"
"dandynaufaldi/Agendernet" -> "zealerww/gender_age_classification"
"elhoangvu/HyperLandmark-iOS" -> "elhoangvu/PCN-iOS"
"wzj5133329/retinaface_caffe" -> "cholihao/Retinaface-caffe"
"chen0040/keras-face" -> "foamliu/FaceNet"
"wy1iu/sphereface-plus" -> "wy1iu/MHE"
"Longqi-S/ncnn-mtcnn" -> "ElegantGod/ncnn"
"Longqi-S/ncnn-mtcnn" -> "moli232777144/mtcnn_ncnn"
"JabamiLight/dlib-android-facedect" -> "liujilong0116/android-opencv-dlib-facelandmark"
"KaleidoZhouYN/e2e-joint-face-detection-and-alignment" -> "XiaXuehai/faceboxes"
"KaleidoZhouYN/e2e-joint-face-detection-and-alignment" -> "ElegantGod/mxnet-SSHA"
"KaleidoZhouYN/e2e-joint-face-detection-and-alignment" -> "goodluckcwl/Sphereface-model"
"KaleidoZhouYN/e2e-joint-face-detection-and-alignment" -> "ElegantGod/SSHA"
"alexattia/ExtendedTinyFaces" -> "cydonia999/Tiny_Faces_in_Tensorflow"
"bruceyang2012/Face-identification-with-cnn-triplet-loss" -> "bruceyang2012/Face-detection-with-mobilenet-ssd"
"shanglianlm0525/BlazeFace" -> "dl-maxwang/blazeface-tensorflow"
"weimin17/Object-Detection_HelmetDetection" -> "rekon/keras-yolo2"
"weimin17/Object-Detection_HelmetDetection" -> "wujixiu/helmet-detection"
"Danicaai/android-mnn" -> "zhu260824/face_mnn"
"pierre-jacob/ICCV2019-Horde" -> "Confusezius/ICCV2019_MIC"
"lsy17096535/faceboxes" -> "lqs19881030/faceboxes"
"cpuimage/MTCNN" -> "ElegantGod/ncnn"
"cpuimage/MTCNN" -> "dlunion/mtcnn"
"cpuimage/MTCNN" -> "moli232777144/mtcnn_ncnn"
"cpuimage/MTCNN" -> "honghuCode/mobileFacenet-ncnn"
"cpuimage/MTCNN" -> "happynear/MTCNN_face_detection_alignment"
"cpuimage/MTCNN" -> "AlphaQi/MTCNN-light"
"cpuimage/MTCNN" -> "foreverYoungGitHub/MTCNN"
"cpuimage/MTCNN" -> "moli232777144/mobilefacenet-mxnet"
"cpuimage/MTCNN" -> "imistyrain/MTCNN"
"inlmouse/MS-Celeb-1M_WashList" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"ManishSoni1908/Mobilenet-ssd-keras" -> "tanakataiki/ssd_kerasV2"
"niehen6174/Face-recognition-check-in-system" -> "niehen6174/image-and-speech-processing"
"susantabiswas/FaceRecog" -> "adityajn105/Face-Recognition-Siamese-Network"
"varunagrawal/tiny-faces-pytorch" -> "cydonia999/Tiny_Faces_in_Tensorflow"
"varunagrawal/tiny-faces-pytorch" -> "peiyunh/tiny"
"varunagrawal/tiny-faces-pytorch" -> "Timforce/tiny-tf"
"varunagrawal/tiny-faces-pytorch" -> "JuheonYi/tiny-tf"
"eisaadil/AttendanceCam" -> "ntshvicky/FaceRecognitionAttendance"
"vudung45/FaceRTC" -> "vudung45/Viet-trie"
"vudung45/FaceRTC" -> "vudung45/MovieSites-MediaExtractor"
"OlafenwaMoses/Traffic-Net" -> "ankitshah009/CarCrash_forecasting_and_detection"
"Oreobird/tf-keras-deep-head-pose" -> "Cjiangbpcs/gazenet_mxJiang"
"Oreobird/tf-keras-deep-head-pose" -> "haofanwang/mxnet-Head-Pose"
"spmallick/PyImageConf2018" -> "ageitgey/image_segmentation_examples"
"dichotomies/proxy-nca" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"dichotomies/proxy-nca" -> "idstcv/SoftTriple"
"dichotomies/proxy-nca" -> "Confusezius/ICCV2019_MIC"
"dichotomies/proxy-nca" -> "jeromerony/dml_cross_entropy"
"dichotomies/proxy-nca" -> "euwern/proxynca_pp"
"dichotomies/proxy-nca" -> "littleredxh/DREML"
"dichotomies/proxy-nca" -> "wzzheng/HDML"
"dichotomies/proxy-nca" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"dichotomies/proxy-nca" -> "vadimkantorov/metriclearningbench"
"dichotomies/proxy-nca" -> "pierre-jacob/ICCV2019-Horde"
"dichotomies/proxy-nca" -> "ronekko/deep_metric_learning"
"dichotomies/proxy-nca" -> "ifeherva/DMLPlayground"
"dichotomies/proxy-nca" -> "bnu-wangxun/Deep_Metric"
"dichotomies/proxy-nca" -> "CompVis/metric-learning-divide-and-conquer"
"dichotomies/proxy-nca" -> "valerystrizh/pytorch-histogram-loss"
"rileykwok/Face-Recognition-Model-with-Gender-Age-and-Emotions-Estimations" -> "Mps24-7uk/Face-recog-Age-Gender-Emotion-"
"HiKapok/tf.extra_losses" -> "auroua/L_Softmax_TensorFlow"
"HiKapok/tf.extra_losses" -> "pppoe/tensorflow-sphereface-asoftmax"
"HiKapok/tf.extra_losses" -> "andrewhuman/sphereloss_tensorflow"
"HiKapok/tf.extra_losses" -> "unixpickle/spherenet"
"HiKapok/tf.extra_losses" -> "YunYang1994/SphereFace"
"facial-landmarks-localization-challenge/Look_At_Boundary_PyTorch" -> "FunkyKoki/Look_At_Boundary_PyTorch"
"iitzco/deepzoo" -> "iitzco/tfserve"
"mop/bier" -> "littleredxh/DREML"
"littleredxh/DREML" -> "mop/bier"
"deepinsight/mtcnn-ncnn" -> "ksachdeva/opencv-mtcnn"
"deepinx/age-gender-estimation" -> "wayen820/gender_age_estimation_mxnet"
"luisarojas/distracted-driver-detection" -> "fomorians/distracted-drivers-keras"
"ChaofWang/L-GM_loss_pytorch" -> "WeitaoVan/L-GM-loss"
"GuoYangGit/OCR" -> "z376368673/FaceSignIn"
"imistyrain/MobileFaceNet" -> "bruinxiong/Modified-CRUNet-and-Residual-Attention-Network.mxnet"
"siriusdemon/pytorch-PCN" -> "Rock-100/FaceKit"
"imistyrain/yolo-face" -> "imistyrain/facemask"
"mariolew/Deep-Alignment-Network-tensorflow" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"mariolew/Deep-Alignment-Network-tensorflow" -> "MarekKowalski/DeepAlignmentNetwork"
"mariolew/Deep-Alignment-Network-tensorflow" -> "trigeorgis/mdm"
"zhongyy/Unequal-Training-for-Deep-Face-Recognition-with-Long-Tailed-Noisy-Data" -> "huangyangyu/NoiseFace"
"TropComplique/wing-loss" -> "FengZhenhua/Wing-Loss"
"zuoqing1988/train-GenderAge" -> "zuoqing1988/train-human14"
"Confusezius/ICCV2019_MIC" -> "pierre-jacob/ICCV2019-Horde"
"Confusezius/ICCV2019_MIC" -> "MLforHealth/S2SD"
"Confusezius/ICCV2019_MIC" -> "wzzheng/HDML"
"shenwei1231/caffe-DeepRegressionForests" -> "kongsicong/Age_recognition_OR"
"KaleidoZhouYN/Pytorch_FRS" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"Herosan163/AgeEstimation" -> "changsukim-ku/order-learning"
"Herosan163/AgeEstimation" -> "jacobzhaoziyuan/AMR-Loss"
"Herosan163/AgeEstimation" -> "basavaraj-hampiholi/Age-Estimation--DEX-in-Pytorch"
"SkyStonePan/ArcSoftIDCardFace_CSharp" -> "SkyStonePan/IDCardVeriDemo_CPP"
"SkyStonePan/ArcSoftIDCardFace_CSharp" -> "SkyStonePan/ArcfaceDemo_CSharp"
"Timforce/tiny-tf" -> "JuheonYi/tiny-tf"
"auroua/L_Softmax_TensorFlow" -> "HiKapok/tf.extra_losses"
"KaleidoZhouYN/LightResNet-50" -> "KaleidoZhouYN/Angular-Distance-softmax-with-Auto-Margin"
"rekon/keras-yolo2" -> "weimin17/Object-Detection_HelmetDetection"
"rekon/keras-yolo2" -> "wujixiu/helmet-detection"
"rekon/keras-yolo2" -> "kjaisingh/hardhat-detector"
"deepinx/megaface-evaluation" -> "daikankan/MegaFace"
"yuxitong/TimeView" -> "yuxitong/AndroidMVP"
"yuxitong/TimeView" -> "yuxitong/AndroidLivePusher"
"yuxitong/TimeView" -> "yuxitong/FFmpegAndroid"
"RenatoBMLR/state-farm-distracted-driver-detection" -> "MLjian/PyTorch_DistractedDriverDetection"
"RenatoBMLR/state-farm-distracted-driver-detection" -> "Apoorvajasti/Distracted-Driver-Detection"
"zisianw/WIDER-to-VOC-annotations" -> "ElegantGod/mxnet-SSHA"
"XiaXuehai/faceboxes" -> "lxg2015/faceboxes"
"XiaXuehai/faceboxes" -> "KaleidoZhouYN/e2e-joint-face-detection-and-alignment"
"msindev/Data-Structures-In-C" -> "msindev/Gesture-Controlled-Snake-Game"
"BobLiu20/FacialLandmark_Caffe" -> "ishay2b/VanillaCNN"
"kangdp/StarBarcode" -> "kangdp/KPermission"
"kangdp/StarBarcode" -> "kangdp/TptDialSample"
"vincentwei0919/insightface_for_face_recognition" -> "944284742/1.FaceRecognition"
"vincentwei0919/insightface_for_face_recognition" -> "luckycallor/InsightFace-tensorflow"
"vincentwei0919/insightface_for_face_recognition" -> "friedhelm739/Insightface-tensorflow"
"vincentwei0919/insightface_for_face_recognition" -> "vincentwei0919/crawler"
"kangdp/TptDialSample" -> "kangdp/KPermission"
"ivangrov/YOLOv3-GoogleColab" -> "kriyeng/yolo-on-colab-notebook"
"610265158/DSFD-tensorflow" -> "610265158/faceboxes-tensorflow"
"610265158/DSFD-tensorflow" -> "yxlijun/DSFD.pytorch"
"610265158/DSFD-tensorflow" -> "610265158/face_landmark"
"TheSmike/pasm-yolov3-Android" -> "wics1224/yolov3-android-tflite"
"TheSmike/pasm-yolov3-Android" -> "nhatuan84/android-opencv-yolov3"
"wics1224/yolov3-android-tflite" -> "nhatuan84/android-opencv-yolov3"
"wics1224/yolov3-android-tflite" -> "TheSmike/pasm-yolov3-Android"
"cholihao/Retinaface-caffe" -> "wzj5133329/retinaface_caffe"
"zuoqing1988/HumanPose" -> "zuoqing1988/train-human14"
"jinyanxu/Neural-Aggregation-Network-for-Video-Face-Recognition" -> "YirongMao/NAN"
"wujiyang/MTCNN_TRAIN" -> "xiezheng-cs/mtcnn_pytorch"
"yangxue0827/MobileFaceNet_Tensorflow" -> "ChenyuGAO-CS/LightFaceNet"
"yangxue0827/MobileFaceNet_Tensorflow" -> "sirius-ai/MobileFaceNet_TF"
"PuNeal/DLDL-v2-PyTorch" -> "gaobb/DLDL"
"PuNeal/DLDL-v2-PyTorch" -> "gaobb/DLDL-v2"
"PuNeal/DLDL-v2-PyTorch" -> "yjl450/age-estimation-ldl-pytorch"
"Lichuanro/smoke-detection-transfer-learning" -> "raady07/Smoke-Detection-in-video"
"imistyrain/facemask" -> "imistyrain/yolo-face"
"sanfooh/android_yolo_truck" -> "HWenTing/yolo-Android-Real-time-Vehicle-Recognition-System"
"xiezheng-cs/mtcnn_pytorch" -> "wujiyang/MTCNN_TRAIN"
"GRAYKEY/mobilefacenet_ncnn" -> "liguiyuan/mobilefacenet-ncnn"
"GRAYKEY/mobilefacenet_ncnn" -> "honghuCode/mobileFacenet-ncnn"
"wujiyang/BossRecognition" -> "wujiyang/Contrastive-Loss"
"vivoutlaw/SSIAM" -> "makarandtapaswi/BallClustering_ICCV2019"
"cvtower/FASNet" -> "cvtower/SeesawNet_pytorch"
"iitzco/widerface-to-tfrecord" -> "yeephycho/widerface-to-tfrecord"
"cvtower/SeesawNet_pytorch" -> "cvtower/FASNet"
"yuxitong/FFmpegAndroid" -> "yuxitong/AndroidMVP"
"friedhelm739/MTCNN-tensorflow" -> "friedhelm739/Insightface-tensorflow"
"yuxitong/AndroidMVP" -> "yuxitong/FFmpegAndroid"
"HTTdesu/SimpleFacerig" -> "skygoo/faceRig"
"AIZOOTech/FaceMaskDetection" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"AIZOOTech/FaceMaskDetection" -> "chandrikadeb7/Face-Mask-Detection"
"AIZOOTech/FaceMaskDetection" -> "Star-Clouds/CenterFace"
"AIZOOTech/FaceMaskDetection" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"AIZOOTech/FaceMaskDetection" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"AIZOOTech/FaceMaskDetection" -> "biubug6/Face-Detector-1MB-with-landmark"
"AIZOOTech/FaceMaskDetection" -> "biubug6/Pytorch_Retinaface"
"AIZOOTech/FaceMaskDetection" -> "Tencent/FaceDetection-DSFD"
"AIZOOTech/FaceMaskDetection" -> "ZhaoJ9014/face.evoLVe"
"AIZOOTech/FaceMaskDetection" -> "minivision-ai/Silent-Face-Anti-Spoofing" ["e"=1]
"AIZOOTech/FaceMaskDetection" -> "njvisionpower/Safety-Helmet-Wearing-Dataset"
"AIZOOTech/FaceMaskDetection" -> "dlunion/DBFace"
"AIZOOTech/FaceMaskDetection" -> "ChanChiChoi/awesome-Face_Recognition"
"AIZOOTech/FaceMaskDetection" -> "JDAI-CV/FaceX-Zoo"
"AIZOOTech/FaceMaskDetection" -> "aqeelanwar/MaskTheFace"
"Hsintao/pfld_106_face_landmarks" -> "polarisZhao/PFLD-pytorch"
"Hsintao/pfld_106_face_landmarks" -> "github-luffy/PFLD_68points_Pytorch"
"Hsintao/pfld_106_face_landmarks" -> "guoqiangqi/PFLD"
"Hsintao/pfld_106_face_landmarks" -> "hanson-young/nniefacelib"
"Hsintao/pfld_106_face_landmarks" -> "610265158/Peppa_Pig_Face_Landmark"
"Hsintao/pfld_106_face_landmarks" -> "AnthonyF333/FaceLandmark_PFLD_UltraLight"
"Hsintao/pfld_106_face_landmarks" -> "Hsintao/pfld-ncnn"
"Hsintao/pfld_106_face_landmarks" -> "610265158/face_landmark"
"Hsintao/pfld_106_face_landmarks" -> "DayBreak-u/yolo-face-with-landmark"
"Hsintao/pfld_106_face_landmarks" -> "chengzhengxin/deep-sdm"
"Hsintao/pfld_106_face_landmarks" -> "Single430/FaceLandmark1000"
"Hsintao/pfld_106_face_landmarks" -> "biubug6/Face-Detector-1MB-with-landmark"
"Hsintao/pfld_106_face_landmarks" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"Hsintao/pfld_106_face_landmarks" -> "protossw512/AdaptiveWingLoss"
"Hsintao/pfld_106_face_landmarks" -> "Star-Clouds/FRDA"
"hpc203/10kinds-light-face-detector-align-recognition" -> "hpc203/libface-sface_detect-recognition-opencv" ["e"=1]
"hpc203/10kinds-light-face-detector-align-recognition" -> "hpc203/yolov5-face-landmarks-opencv-v2" ["e"=1]
"hpc203/10kinds-light-face-detector-align-recognition" -> "Star-Clouds/CenterFace"
"hpc203/10kinds-light-face-detector-align-recognition" -> "chenjun2hao/CenterFace.pytorch"
"hpc203/10kinds-light-face-detector-align-recognition" -> "dlunion/DBFace"
"hpc203/10kinds-light-face-detector-align-recognition" -> "hpc203/yolov5-face-landmarks-opencv" ["e"=1]
"hpc203/10kinds-light-face-detector-align-recognition" -> "hpc203/scrfd-opencv" ["e"=1]
"hpc203/10kinds-light-face-detector-align-recognition" -> "xialuxi/yolov5_face_landmark"
"hpc203/10kinds-light-face-detector-align-recognition" -> "biubug6/Face-Detector-1MB-with-landmark"
"hpc203/10kinds-light-face-detector-align-recognition" -> "hpc203/yolov5-dnn-cpp-python" ["e"=1]
"hpc203/10kinds-light-face-detector-align-recognition" -> "Hsintao/pfld_106_face_landmarks"
"hpc203/10kinds-light-face-detector-align-recognition" -> "polarisZhao/PFLD-pytorch"
"hpc203/10kinds-light-face-detector-align-recognition" -> "pcb9382/FaceAlgorithm" ["e"=1]
"hpc203/10kinds-light-face-detector-align-recognition" -> "hpc203/yolov34-cpp-opencv-dnn" ["e"=1]
"hpc203/10kinds-light-face-detector-align-recognition" -> "biubug6/Pytorch_Retinaface"
"ShiqiYu/libfacedetection" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"ShiqiYu/libfacedetection" -> "zuoqing1988/ZQCNN"
"ShiqiYu/libfacedetection" -> "seetaface/SeetaFaceEngine"
"ShiqiYu/libfacedetection" -> "Tencent/ncnn" ["e"=1]
"ShiqiYu/libfacedetection" -> "davidsandberg/facenet"
"ShiqiYu/libfacedetection" -> "kpzhang93/MTCNN_face_detection_alignment"
"ShiqiYu/libfacedetection" -> "Tencent/FaceDetection-DSFD"
"ShiqiYu/libfacedetection" -> "deepinsight/insightface"
"ShiqiYu/libfacedetection" -> "alibaba/MNN" ["e"=1]
"ShiqiYu/libfacedetection" -> "TadasBaltrusaitis/OpenFace"
"ShiqiYu/libfacedetection" -> "davisking/dlib"
"ShiqiYu/libfacedetection" -> "cmusatyalab/openface"
"ShiqiYu/libfacedetection" -> "ChanChiChoi/awesome-Face_Recognition"
"ShiqiYu/libfacedetection" -> "xingyizhou/CenterNet" ["e"=1]
"ShiqiYu/libfacedetection" -> "AlexeyAB/darknet" ["e"=1]
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "nevilparmar11/Attendance-Management-System-Using-Face-Recognition"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "kmhmubin/Face-Recognition-Attendance-System"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "Spidy20/Attendace_management_system"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "Pragya9ps/Face-Recognition-Attendance-System"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "venugopalkadamba/Face_Verification_based_Attendance_system"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "shubhamkumar27/Face_recognition_based_attendance_system"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "sonu275981/Face-Recognition-Attendance-System"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "sharmaji27/face-recognition-based-attendance-system"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "Vatshayan/Face-recognition-Attendance-System-Project" ["e"=1]
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "memudualimatou/STUDENT-ATTENDANCE-USING-FACIAL-RECOGNITION-SYSTEM-OPENCV"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "staticshreyas/Attendance-Portal" ["e"=1]
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "rishabh-karmakar/Facial-Recognition-Based-Attendance-System" ["e"=1]
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "Waseemali11/Python-FYP-Face-Recognition-Attendence-System"
"Patelrahul4884/Attendance-Management-system-using-face-recognition" -> "joeVenner/FaceRecognition-GUI-APP"
"venugopalkadamba/Face_Verification_based_Attendance_system" -> "prathmachowksey/Attendance-System-Face-Recognition"
"venugopalkadamba/Face_Verification_based_Attendance_system" -> "nevilparmar11/Attendance-Management-System-Using-Face-Recognition"
"venugopalkadamba/Face_Verification_based_Attendance_system" -> "sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition"
"venugopalkadamba/Face_Verification_based_Attendance_system" -> "codeglitchz/attendance-system"
"venugopalkadamba/Face_Verification_based_Attendance_system" -> "memudualimatou/STUDENT-ATTENDANCE-USING-FACIAL-RECOGNITION-SYSTEM-OPENCV"
"venugopalkadamba/Face_Verification_based_Attendance_system" -> "aakashjhawar/face-recognition-using-deep-learning"
"venugopalkadamba/Face_Verification_based_Attendance_system" -> "kmhmubin/Face-Recognition-Attendance-System"
"venugopalkadamba/Face_Verification_based_Attendance_system" -> "imshreyshah/Attendance-System-Face-Recognition"
"exadel-inc/CompreFace" -> "jakowenko/double-take" ["e"=1]
"exadel-inc/CompreFace" -> "serengil/deepface"
"exadel-inc/CompreFace" -> "blakeblackshear/frigate" ["e"=1]
"exadel-inc/CompreFace" -> "sherlockchou86/VideoPipe" ["e"=1]
"exadel-inc/CompreFace" -> "648540858/wvp-GB28181-pro" ["e"=1]
"exadel-inc/CompreFace" -> "skrashevich/double-take" ["e"=1]
"exadel-inc/CompreFace" -> "deepinsight/insightface"
"exadel-inc/CompreFace" -> "apache/hertzbeat" ["e"=1]
"exadel-inc/CompreFace" -> "AlexxIT/go2rtc" ["e"=1]
"exadel-inc/CompreFace" -> "houbb/sensitive-word" ["e"=1]
"exadel-inc/CompreFace" -> "SthPhoenix/InsightFace-REST"
"exadel-inc/CompreFace" -> "ageitgey/face_recognition"
"exadel-inc/CompreFace" -> "exadel-inc/compreface-python-sdk"
"exadel-inc/CompreFace" -> "davidsandberg/facenet"
"exadel-inc/CompreFace" -> "javahuang/SurveyKing" ["e"=1]
"biubug6/Pytorch_Retinaface" -> "biubug6/Face-Detector-1MB-with-landmark"
"biubug6/Pytorch_Retinaface" -> "TreB1eN/InsightFace_Pytorch"
"biubug6/Pytorch_Retinaface" -> "deepcam-cn/yolov5-face"
"biubug6/Pytorch_Retinaface" -> "Star-Clouds/CenterFace"
"biubug6/Pytorch_Retinaface" -> "ronghuaiyang/arcface-pytorch"
"biubug6/Pytorch_Retinaface" -> "ZhaoJ9014/face.evoLVe"
"biubug6/Pytorch_Retinaface" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"biubug6/Pytorch_Retinaface" -> "Tencent/FaceDetection-DSFD"
"biubug6/Pytorch_Retinaface" -> "JDAI-CV/FaceX-Zoo"
"biubug6/Pytorch_Retinaface" -> "polarisZhao/PFLD-pytorch"
"biubug6/Pytorch_Retinaface" -> "ChanChiChoi/awesome-Face_Recognition"
"biubug6/Pytorch_Retinaface" -> "dlunion/DBFace"
"biubug6/Pytorch_Retinaface" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"biubug6/Pytorch_Retinaface" -> "supernotman/RetinaFace_Pytorch"
"biubug6/Pytorch_Retinaface" -> "Tencent/TFace"
"serengil/deepface" -> "deepinsight/insightface"
"serengil/deepface" -> "ageitgey/face_recognition"
"serengil/deepface" -> "timesler/facenet-pytorch"
"serengil/deepface" -> "davidsandberg/facenet"
"serengil/deepface" -> "roboflow/supervision" ["e"=1]
"serengil/deepface" -> "exadel-inc/CompreFace"
"serengil/deepface" -> "VikParuchuri/surya" ["e"=1]
"serengil/deepface" -> "serengil/retinaface"
"serengil/deepface" -> "google-ai-edge/mediapipe" ["e"=1]
"serengil/deepface" -> "ultralytics/ultralytics" ["e"=1]
"serengil/deepface" -> "facefusion/facefusion" ["e"=1]
"serengil/deepface" -> "iperov/DeepFaceLive" ["e"=1]
"serengil/deepface" -> "coqui-ai/TTS" ["e"=1]
"serengil/deepface" -> "fishaudio/fish-speech" ["e"=1]
"serengil/deepface" -> "JaidedAI/EasyOCR" ["e"=1]
"eai2x/Face-Recognition-Class-Attendance-System" -> "inspurer/WorkAttendanceSystem"
"eai2x/Face-Recognition-Class-Attendance-System" -> "66pig/face_recognition"
"eai2x/Face-Recognition-Class-Attendance-System" -> "waiterxiaoyy/waiter-facerecognition-python"
"eai2x/Face-Recognition-Class-Attendance-System" -> "mengyue0722/Face-swiping-Time-Attendance-System"
"eai2x/Face-Recognition-Class-Attendance-System" -> "Sharpiless/Face-recognition-for-classroom-sign-in"
"eai2x/Face-Recognition-Class-Attendance-System" -> "kuronekonano/Face-Recognition-Based-Attendance-System"
"eai2x/Face-Recognition-Class-Attendance-System" -> "xg-zhang/faceRegister"
"eai2x/Face-Recognition-Class-Attendance-System" -> "hualuoo/dormitory_menage_system"
"eai2x/Face-Recognition-Class-Attendance-System" -> "akira4O4/PyQt5_Face_Recognition"
"eai2x/Face-Recognition-Class-Attendance-System" -> "zhanbao2000/classroom_attendance_face_recognition"
"eai2x/Face-Recognition-Class-Attendance-System" -> "reece15/cnn_face_detection"
"balajisrinivas/Face-Mask-Detection" -> "aieml/face-mask-detection-keras"
"balajisrinivas/Face-Mask-Detection" -> "chandrikadeb7/Face-Mask-Detection"
"balajisrinivas/Face-Mask-Detection" -> "Karan-Malik/FaceMaskDetector"
"balajisrinivas/Face-Mask-Detection" -> "Spidy20/face_mask_detection"
"balajisrinivas/Face-Mask-Detection" -> "balajisrinivas/Gender-Detection"
"balajisrinivas/Face-Mask-Detection" -> "balajisrinivas/Object-Detection-on-images-using-YOLO"
"balajisrinivas/Face-Mask-Detection" -> "abd-shoumik/Social-distance-detection"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "ShiqiYu/libfacedetection"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "biubug6/Face-Detector-1MB-with-landmark"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "Star-Clouds/CenterFace"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "biubug6/Pytorch_Retinaface"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "Tencent/FaceDetection-DSFD"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "RangiLyu/nanodet" ["e"=1]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "alibaba/MNN" ["e"=1]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "zuoqing1988/ZQCNN"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "Tencent/ncnn" ["e"=1]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "xingyizhou/CenterNet" ["e"=1]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "Tencent/TNN" ["e"=1]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "ChanChiChoi/awesome-Face_Recognition"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "ZhaoJ9014/face.evoLVe"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "zylo117/Yet-Another-EfficientDet-Pytorch" ["e"=1]
"PeterH0323/Smart_Construction" -> "njvisionpower/Safety-Helmet-Wearing-Dataset"
"PeterH0323/Smart_Construction" -> "gengyanlei/reflective-clothes-detect-yolov5"
"PeterH0323/Smart_Construction" -> "gengyanlei/fire-smoke-detect-yolov4"
"PeterH0323/Smart_Construction" -> "DataXujing/YOLO-v5" ["e"=1]
"PeterH0323/Smart_Construction" -> "CVUsers/Smoke-Detect-by-YoloV5"
"PeterH0323/Smart_Construction" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"PeterH0323/Smart_Construction" -> "yurizzzzz/Helmet-Detection-YoloV5"
"PeterH0323/Smart_Construction" -> "dyh/unbox_yolov5_deepsort_counting" ["e"=1]
"PeterH0323/Smart_Construction" -> "mikel-brostrom/boxmot" ["e"=1]
"PeterH0323/Smart_Construction" -> "deepcam-cn/yolov5-face"
"PeterH0323/Smart_Construction" -> "wang-xinyu/tensorrtx" ["e"=1]
"PeterH0323/Smart_Construction" -> "Megvii-BaseDetection/YOLOX" ["e"=1]
"PeterH0323/Smart_Construction" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"PeterH0323/Smart_Construction" -> "ppogg/YOLOv5-Lite" ["e"=1]
"PeterH0323/Smart_Construction" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"Kalebu/Plagiarism-checker-Python" -> "abhilampard/Simple-Plagiarism-Checker"
"Kalebu/Plagiarism-checker-Python" -> "K-G-PRAJWAL/Python-Projects"
"Kalebu/Plagiarism-checker-Python" -> "shubhamkumar27/Face_recognition_based_attendance_system"
"Kalebu/Plagiarism-checker-Python" -> "Kalebu/Website-blocker-python"
"Kalebu/Plagiarism-checker-Python" -> "CT83/SmoothStream"
"Kalebu/Plagiarism-checker-Python" -> "kishanrajput23/Jarvis-Desktop-Voice-Assistant" ["e"=1]
"Kalebu/Plagiarism-checker-Python" -> "aashishpeepra/whatsapp-live-cricket-bot"
"Kalebu/Plagiarism-checker-Python" -> "architshukla/Plagiarism-Checker"
"Kalebu/Plagiarism-checker-Python" -> "ammarmahmood1999/HeartHealthPrediction"
"Kalebu/Plagiarism-checker-Python" -> "Kalebu/Python-Speech-Recognition-"
"Kalebu/Plagiarism-checker-Python" -> "ayushreal/Signature-recognition"
"Kalebu/Plagiarism-checker-Python" -> "shsarv/Machine-Learning-Projects" ["e"=1]
"adityap27/face-mask-detector" -> "NisargPethani/FACE-MASK-DETECTION-USING-YOLO-V3"
"adityap27/face-mask-detector" -> "VictorLin000/YOLOv3_mask_detect"
"leondgarse/Keras_insightface" -> "peteryuX/arcface-tf2"
"leondgarse/Keras_insightface" -> "4uiiurz1/keras-arcface"
"leondgarse/Keras_insightface" -> "bleakie/MaskInsightface"
"leondgarse/Keras_insightface" -> "luckycallor/InsightFace-tensorflow"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "AIZOOTech/FaceMaskDetection"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "aqeelanwar/MaskTheFace"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "JDAI-CV/FaceX-Zoo"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "Star-Clouds/CenterFace"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "biubug6/Pytorch_Retinaface"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "cabani/MaskedFace-Net"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "biubug6/Face-Detector-1MB-with-landmark"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "ZhaoJ9014/face.evoLVe"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "deepcam-cn/yolov5-face"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "TreB1eN/InsightFace_Pytorch"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "ChanChiChoi/awesome-Face_Recognition"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "Tencent/FaceDetection-DSFD"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "minivision-ai/Silent-Face-Anti-Spoofing" ["e"=1]
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "PeterH0323/Smart_Construction"
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "wujixiu/helmet-detection"
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "gengyanlei/reflective-clothes-detect-yolov5"
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "DataXujing/YOLO-V3-Tensorflow"
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "HCIILAB/SCUT-HEAD-Dataset-Release"
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "gengyanlei/fire-smoke-detect-yolov4"
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "CVUsers/Smoke-Detect-by-YoloV5"
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "AIZOOTech/FaceMaskDetection"
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "wang-xinyu/tensorrtx" ["e"=1]
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "Tianxiaomo/pytorch-YOLOv4" ["e"=1]
"njvisionpower/Safety-Helmet-Wearing-Dataset" -> "yurizzzzz/Helmet-Detection-YoloV5"
"KangLin/FaceRecognizer" -> "xiaoxiaoazhang/SeetaFace2AndroidDemo"
"KangLin/FaceRecognizer" -> "SeetaFace6Open/index"
"KangLin/FaceRecognizer" -> "seetafaceengine/SeetaFace6"
"KangLin/FaceRecognizer" -> "seetafaceengine/SeetaFace2"
"KangLin/FaceRecognizer" -> "seetafaceengine/FaceRecognizer"
"KangLin/FaceRecognizer" -> "seetafaceengine/SeetaFaceTutorial"
"KangLin/FaceRecognizer" -> "guoyaohua/SmileyFace" ["e"=1]
"KangLin/FaceRecognizer" -> "jamesluozhiwei/seetafaceJNI"
"KangLin/FaceRecognizer" -> "shuguoli68/LiSeetaFace2"
"KangLin/FaceRecognizer" -> "MirrorYuChen/ncnn_example"
"KangLin/FaceRecognizer" -> "66pig/face_recognition"
"KangLin/FaceRecognizer" -> "yangjian1218/seetaface6JNIToAPP"
"KangLin/FaceRecognizer" -> "SeetaFace6Open/SeetaFace6JNI"
"thepowerfuldeez/facemesh.pytorch" -> "hollance/BlazeFace-PyTorch"
"thepowerfuldeez/facemesh.pytorch" -> "gouthamvgk/facemesh_coreml_tf"
"thepowerfuldeez/facemesh.pytorch" -> "cedriclmenard/irislandmarks.pytorch"
"thepowerfuldeez/facemesh.pytorch" -> "cunjian/pytorch_face_landmark"
"thepowerfuldeez/facemesh.pytorch" -> "yinguobing/face-mesh-generator"
"smahesh29/Gender-and-Age-Detection" -> "arunponnusamy/gender-detection-keras"
"smahesh29/Gender-and-Age-Detection" -> "juan-csv/Face_info"
"smahesh29/Gender-and-Age-Detection" -> "richmondu/libfaceid" ["e"=1]
"smahesh29/Gender-and-Age-Detection" -> "yu4u/age-gender-estimation"
"smahesh29/Gender-and-Age-Detection" -> "sajjjadayobi/FaceLib" ["e"=1]
"smahesh29/Gender-and-Age-Detection" -> "habom2310/People-tracking-with-Age-and-Gender-detection"
"smahesh29/Gender-and-Age-Detection" -> "diovisgood/agender"
"smahesh29/Gender-and-Age-Detection" -> "abars/YoloKerasFaceDetection"
"smahesh29/Gender-and-Age-Detection" -> "WildChlamydia/MiVOLO"
"smahesh29/Gender-and-Age-Detection" -> "kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" ["e"=1]
"smahesh29/Gender-and-Age-Detection" -> "mowshon/age-and-gender"
"smahesh29/Gender-and-Age-Detection" -> "dpressel/rude-carnie"
"juan-csv/Face_info" -> "juan-csv/emotion_detection"
"juan-csv/Face_info" -> "juan-csv/face-recognition"
"seetafaceengine/SeetaFace6" -> "SeetaFace6Open/index"
"seetafaceengine/SeetaFace6" -> "seetafaceengine/SeetaFace2"
"seetafaceengine/SeetaFace6" -> "tensorflower/seetaFace6Python"
"seetafaceengine/SeetaFace6" -> "KangLin/FaceRecognizer"
"seetafaceengine/SeetaFace6" -> "ViewFaceCore/ViewFaceCore" ["e"=1]
"seetafaceengine/SeetaFace6" -> "seetaface/SeetaFaceEngine2"
"seetafaceengine/SeetaFace6" -> "seetafaceengine/SeetaFaceTutorial"
"seetafaceengine/SeetaFace6" -> "Star-Clouds/CenterFace"
"seetafaceengine/SeetaFace6" -> "MirrorYuChen/ncnn_example"
"seetafaceengine/SeetaFace6" -> "minivision-ai/Silent-Face-Anti-Spoofing" ["e"=1]
"seetafaceengine/SeetaFace6" -> "dlunion/DBFace"
"seetafaceengine/SeetaFace6" -> "seetaface/SeetaFaceEngine"
"seetafaceengine/SeetaFace6" -> "biubug6/Face-Detector-1MB-with-landmark"
"seetafaceengine/SeetaFace6" -> "hanson-young/nniefacelib"
"seetafaceengine/SeetaFace6" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"gengyanlei/reflective-clothes-detect-yolov5" -> "gengyanlei/fire-smoke-detect-yolov4"
"gengyanlei/reflective-clothes-detect-yolov5" -> "njvisionpower/Safety-Helmet-Wearing-Dataset"
"gengyanlei/reflective-clothes-detect-yolov5" -> "PeterH0323/Smart_Construction"
"gengyanlei/reflective-clothes-detect-yolov5" -> "dengfenglai321/YOLOv4-Hat-detection"
"gengyanlei/reflective-clothes-detect-yolov5" -> "CVUsers/Smoke-Detect-by-YoloV5"
"gengyanlei/reflective-clothes-detect-yolov5" -> "yurizzzzz/Helmet-Detection-YoloV5"
"gengyanlei/reflective-clothes-detect-yolov5" -> "wujixiu/helmet-detection"
"gengyanlei/reflective-clothes-detect-yolov5" -> "DataXujing/Faster-R-CNN-Keras"
"gengyanlei/reflective-clothes-detect-yolov5" -> "CVUsers/Fire-Detect-by-YoloV5"
"gengyanlei/reflective-clothes-detect-yolov5" -> "HouchangX-AI/Helmet-Detection"
"gengyanlei/reflective-clothes-detect-yolov5" -> "dyh/unbox_yolov5_deepsort_counting" ["e"=1]
"gengyanlei/reflective-clothes-detect-yolov5" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"gengyanlei/reflective-clothes-detect-yolov5" -> "DataXujing/YOLO-V3-Tensorflow"
"protossw512/AdaptiveWingLoss" -> "HRNet/HRNet-Facial-Landmark-Detection"
"protossw512/AdaptiveWingLoss" -> "TheSouthFrog/stylealign"
"protossw512/AdaptiveWingLoss" -> "610265158/face_landmark"
"protossw512/AdaptiveWingLoss" -> "D-X-Y/landmark-detection"
"protossw512/AdaptiveWingLoss" -> "elliottzheng/AdaptiveWingLoss"
"protossw512/AdaptiveWingLoss" -> "guoqiangqi/PFLD"
"protossw512/AdaptiveWingLoss" -> "Hsintao/pfld_106_face_landmarks"
"protossw512/AdaptiveWingLoss" -> "polarisZhao/PFLD-pytorch"
"protossw512/AdaptiveWingLoss" -> "SeungyounShin/Adaptive-Wing-Loss-for-Robust-Face-Alignment-via-Heatmap-Regression"
"protossw512/AdaptiveWingLoss" -> "wywu/LAB"
"protossw512/AdaptiveWingLoss" -> "facebookresearch/supervision-by-registration"
"protossw512/AdaptiveWingLoss" -> "TropComplique/wing-loss"
"protossw512/AdaptiveWingLoss" -> "Star-Clouds/FRDA"
"protossw512/AdaptiveWingLoss" -> "610265158/Peppa_Pig_Face_Landmark"
"protossw512/AdaptiveWingLoss" -> "1996scarlet/Dense-Head-Pose-Estimation"
"SyGoing/LFFD-with-ncnn" -> "SyGoing/LFFD-MNN"
"SyGoing/LFFD-with-ncnn" -> "SyGoing/LFFD-OpenVINO"
"Star-Clouds/CenterFace" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"Star-Clouds/CenterFace" -> "chenjun2hao/CenterFace.pytorch"
"Star-Clouds/CenterFace" -> "biubug6/Face-Detector-1MB-with-landmark"
"Star-Clouds/CenterFace" -> "dlunion/DBFace"
"Star-Clouds/CenterFace" -> "biubug6/Pytorch_Retinaface"
"Star-Clouds/CenterFace" -> "zuoqing1988/ZQCNN"
"Star-Clouds/CenterFace" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"Star-Clouds/CenterFace" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"Star-Clouds/CenterFace" -> "wywu/LAB"
"Star-Clouds/CenterFace" -> "Tencent/FaceDetection-DSFD"
"Star-Clouds/CenterFace" -> "guoqiangqi/PFLD"
"Star-Clouds/CenterFace" -> "polarisZhao/PFLD-pytorch"
"Star-Clouds/CenterFace" -> "610265158/Peppa_Pig_Face_Landmark"
"Star-Clouds/CenterFace" -> "Rock-100/FaceKit"
"Star-Clouds/CenterFace" -> "szad670401/HyperLandmark"
"biubug6/Face-Detector-1MB-with-landmark" -> "biubug6/Pytorch_Retinaface"
"biubug6/Face-Detector-1MB-with-landmark" -> "Star-Clouds/CenterFace"
"biubug6/Face-Detector-1MB-with-landmark" -> "polarisZhao/PFLD-pytorch"
"biubug6/Face-Detector-1MB-with-landmark" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"biubug6/Face-Detector-1MB-with-landmark" -> "hanson-young/nniefacelib"
"biubug6/Face-Detector-1MB-with-landmark" -> "MirrorYuChen/ncnn_example"
"biubug6/Face-Detector-1MB-with-landmark" -> "guoqiangqi/PFLD"
"biubug6/Face-Detector-1MB-with-landmark" -> "Charrin/RetinaFace-Cpp"
"biubug6/Face-Detector-1MB-with-landmark" -> "dlunion/DBFace"
"biubug6/Face-Detector-1MB-with-landmark" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"biubug6/Face-Detector-1MB-with-landmark" -> "zuoqing1988/ZQCNN"
"biubug6/Face-Detector-1MB-with-landmark" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"biubug6/Face-Detector-1MB-with-landmark" -> "minivision-ai/Silent-Face-Anti-Spoofing" ["e"=1]
"biubug6/Face-Detector-1MB-with-landmark" -> "deepcam-cn/yolov5-face"
"biubug6/Face-Detector-1MB-with-landmark" -> "supernotman/RetinaFace_Pytorch"
"stdcoutzyx/DeepID_FaceClassify" -> "cyh24/Joint-Bayesian"
"stdcoutzyx/DeepID_FaceClassify" -> "happynear/FaceVerification"
"stdcoutzyx/DeepID_FaceClassify" -> "shen1994/DeepID"
"stdcoutzyx/DeepID_FaceClassify" -> "hqli/face_recognition"
"stdcoutzyx/DeepID_FaceClassify" -> "jinze1994/DeepID1"
"stdcoutzyx/DeepID_FaceClassify" -> "AlfredXiangWu/face_verification_experiment"
"stdcoutzyx/DeepID_FaceClassify" -> "chenriwei/DeepFace"
"stdcoutzyx/DeepID_FaceClassify" -> "ydwen/caffe-face"
"stdcoutzyx/DeepID_FaceClassify" -> "patrikhuber/superviseddescent"
"stdcoutzyx/DeepID_FaceClassify" -> "betars/Face-Resources"
"stdcoutzyx/DeepID_FaceClassify" -> "stdcoutzyx/FaceRetrieval"
"stdcoutzyx/DeepID_FaceClassify" -> "chenriwei/FaceTools"
"stdcoutzyx/DeepID_FaceClassify" -> "tntrung/sdm_face_alignment"
"stdcoutzyx/DeepID_FaceClassify" -> "joyhuang9473/deepid-implementation"
"stdcoutzyx/DeepID_FaceClassify" -> "willard-yuan/CNN-for-Face-Image-Retrieval"
"bleakie/CenterMulti" -> "tensorboy/centerpose" ["e"=1]
"bleakie/CenterMulti" -> "chenjun2hao/CenterFace.pytorch"
"bleakie/CenterMulti" -> "lucasjinreal/CenterNet_Pro_Max" ["e"=1]
"bleakie/CenterMulti" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"bleakie/CenterMulti" -> "bleakie/MaskInsightface"
"bleakie/CenterMulti" -> "FateScript/CenterNet-better" ["e"=1]
"bleakie/CenterMulti" -> "xggIoU/centernet_tensorflow_wilderface_voc" ["e"=1]
"bleakie/CenterMulti" -> "olojuwin/facerecognize-for-mobile-phone"
"bleakie/CenterMulti" -> "HiBugs/CenterNet"
"bleakie/CenterMulti" -> "Star-Clouds/CenterFace"
"bleakie/CenterMulti" -> "Hsintao/pfld_106_face_landmarks"
"bleakie/CenterMulti" -> "CaoWGG/TensorRT-YOLOv4" ["e"=1]
"bleakie/CenterMulti" -> "clancylian/retinaface"
"bleakie/CenterMulti" -> "MirrorYuChen/ncnn_example"
"bleakie/CenterMulti" -> "siriusdemon/Build-Your-Own-Face-Model"
"alibaba/MNNKit" -> "xindongzhang/MNN-APPLICATIONS"
"alibaba/MNNKit" -> "MirrorYuChen/mnn_example"
"alibaba/MNNKit" -> "olojuwin/facerecognize-for-mobile-phone"
"alibaba/MNNKit" -> "alibaba/MNN" ["e"=1]
"alibaba/MNNKit" -> "szad670401/HyperLandmark"
"alibaba/MNNKit" -> "610265158/face_landmark"
"alibaba/MNNKit" -> "zuoqing1988/ZQCNN"
"alibaba/MNNKit" -> "didi/AoE" ["e"=1]
"alibaba/MNNKit" -> "biubug6/Face-Detector-1MB-with-landmark"
"alibaba/MNNKit" -> "MirrorYuChen/ncnn_example"
"alibaba/MNNKit" -> "minivision-ai/Silent-Face-Anti-Spoofing-APK" ["e"=1]
"alibaba/MNNKit" -> "Tencent/TNN" ["e"=1]
"alibaba/MNNKit" -> "moli232777144/mtcnn_ncnn"
"alibaba/MNNKit" -> "610265158/Peppa_Pig_Face_Landmark"
"alibaba/MNNKit" -> "tkat0/PyTorch_BlazeFace"
"dlunion/DBFace" -> "Star-Clouds/CenterFace"
"dlunion/DBFace" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"dlunion/DBFace" -> "biubug6/Face-Detector-1MB-with-landmark"
"dlunion/DBFace" -> "polarisZhao/PFLD-pytorch"
"dlunion/DBFace" -> "chenjun2hao/CenterFace.pytorch"
"dlunion/DBFace" -> "biubug6/Pytorch_Retinaface"
"dlunion/DBFace" -> "dlunion/tensorRTIntegrate" ["e"=1]
"dlunion/DBFace" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"dlunion/DBFace" -> "hanson-young/nniefacelib"
"dlunion/DBFace" -> "MirrorYuChen/ncnn_example"
"dlunion/DBFace" -> "zisianw/FaceBoxes.PyTorch"
"dlunion/DBFace" -> "zuoqing1988/ZQCNN"
"dlunion/DBFace" -> "JDAI-CV/FaceX-Zoo"
"dlunion/DBFace" -> "xiangweizeng/mobile-lpr" ["e"=1]
"dlunion/DBFace" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"cavalleria/cavaface" -> "HuangYG123/CurricularFace"
"cavalleria/cavaface" -> "JDAI-CV/FaceX-Zoo"
"cavalleria/cavaface" -> "IrvingMeng/MagFace"
"cavalleria/cavaface" -> "Tencent/TFace"
"cavalleria/cavaface" -> "bleakie/MaskInsightface"
"cavalleria/cavaface" -> "wujiyang/Face_Pytorch"
"cavalleria/cavaface" -> "pterhoer/FaceImageQuality"
"cavalleria/cavaface" -> "olojuwin/facerecognize-for-mobile-phone"
"cavalleria/cavaface" -> "Xiaoccer/MobileFaceNet_Pytorch"
"cavalleria/cavaface" -> "mk-minchul/AdaFace"
"cavalleria/cavaface" -> "aqeelanwar/MaskTheFace"
"cavalleria/cavaface" -> "ZhaoJ9014/face.evoLVe"
"cavalleria/cavaface" -> "xiaoboCASIA/SV-X-Softmax"
"cavalleria/cavaface" -> "deepcam-cn/FaceQuality"
"cavalleria/cavaface" -> "ydwen/opensphere"
"gengyanlei/fire-smoke-detect-yolov4" -> "tobybreckon/fire-detection-cnn"
"gengyanlei/fire-smoke-detect-yolov4" -> "gengyanlei/reflective-clothes-detect-yolov5"
"gengyanlei/fire-smoke-detect-yolov4" -> "robmarkcole/fire-detection-from-images"
"gengyanlei/fire-smoke-detect-yolov4" -> "spacewalk01/yolov5-fire-detection"
"gengyanlei/fire-smoke-detect-yolov4" -> "PeterH0323/Smart_Construction"
"gengyanlei/fire-smoke-detect-yolov4" -> "CVUsers/Smoke-Detect-by-YoloV5"
"gengyanlei/fire-smoke-detect-yolov4" -> "njvisionpower/Safety-Helmet-Wearing-Dataset"
"gengyanlei/fire-smoke-detect-yolov4" -> "gaiasd/DFireDataset"
"gengyanlei/fire-smoke-detect-yolov4" -> "cair/Fire-Detection-Image-Dataset"
"gengyanlei/fire-smoke-detect-yolov4" -> "OlafenwaMoses/FireNET"
"gengyanlei/fire-smoke-detect-yolov4" -> "midasklr/FireSmokeDetectionByEfficientNet"
"gengyanlei/fire-smoke-detect-yolov4" -> "Abonia1/YOLOv8-Fire-and-Smoke-Detection"
"gengyanlei/fire-smoke-detect-yolov4" -> "CVUsers/Fire-Detect-by-YoloV5"
"gengyanlei/fire-smoke-detect-yolov4" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"gengyanlei/fire-smoke-detect-yolov4" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"github-luffy/PFLD_68points_Pytorch" -> "polarisZhao/PFLD-pytorch"
"github-luffy/PFLD_68points_Pytorch" -> "Hsintao/pfld_106_face_landmarks"
"github-luffy/PFLD_68points_Pytorch" -> "guoqiangqi/PFLD"
"github-luffy/PFLD_68points_Pytorch" -> "AnthonyF333/FaceLandmark_PFLD_UltraLight"
"github-luffy/PFLD_68points_Pytorch" -> "cunjian/pytorch_face_landmark"
"github-luffy/PFLD_68points_Pytorch" -> "hanson-young/nniefacelib"
"github-luffy/PFLD_68points_Pytorch" -> "AnthonyF333/PFLD_GhostOne"
"github-luffy/PFLD_68points_Pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"github-luffy/PFLD_68points_Pytorch" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"github-luffy/PFLD_68points_Pytorch" -> "HRNet/HRNet-Facial-Landmark-Detection"
"github-luffy/PFLD_68points_Pytorch" -> "610265158/Peppa_Pig_Face_Landmark"
"github-luffy/PFLD_68points_Pytorch" -> "bleakie/CenterMulti"
"github-luffy/PFLD_68points_Pytorch" -> "jhb86253817/PIPNet"
"github-luffy/PFLD_68points_Pytorch" -> "Charrin/RetinaFace-Cpp"
"github-luffy/PFLD_68points_Pytorch" -> "AmrElsersy/PFLD-Pytorch-Landmarks"
"patrikhuber/superviseddescent" -> "chengzhengxin/sdm"
"patrikhuber/superviseddescent" -> "patrikhuber/4dface" ["e"=1]
"patrikhuber/superviseddescent" -> "tntrung/sdm_face_alignment"
"patrikhuber/superviseddescent" -> "yulequan/face-alignment-in-3000fps"
"patrikhuber/superviseddescent" -> "luoyetx/JDA"
"patrikhuber/superviseddescent" -> "jwyang/face-alignment"
"patrikhuber/superviseddescent" -> "cheind/dest"
"patrikhuber/superviseddescent" -> "zhusz/CVPR15-CFSS"
"patrikhuber/superviseddescent" -> "freesouls/face-alignment-at-3000fps"
"patrikhuber/superviseddescent" -> "sai-bi/FaceAlignment"
"patrikhuber/superviseddescent" -> "TadasBaltrusaitis/CLM-framework"
"patrikhuber/superviseddescent" -> "patrikhuber/eos" ["e"=1]
"patrikhuber/superviseddescent" -> "zhzhanp/TCDCN-face-alignment"
"patrikhuber/superviseddescent" -> "AlfredXiangWu/face_verification_experiment"
"patrikhuber/superviseddescent" -> "wincle/NPD"
"tf2jaguar/pytorch_train" -> "xg-zhang/faceRegister"
"tf2jaguar/pytorch_train" -> "tf2jaguar/carIdentify"
"joeVenner/FaceRecognition-GUI-APP" -> "aakashjhawar/face-recognition-using-deep-learning"
"joeVenner/FaceRecognition-GUI-APP" -> "codeglitchz/attendance-system"
"joeVenner/FaceRecognition-GUI-APP" -> "venugopalkadamba/Face_Verification_based_Attendance_system"
"joeVenner/FaceRecognition-GUI-APP" -> "aydinnyunus/FaceRecognitionSecurity" ["e"=1]
"joeVenner/FaceRecognition-GUI-APP" -> "joeVenner/control-3d-character-using-python"
"joeVenner/FaceRecognition-GUI-APP" -> "prafulla-codes/face-recognition-login-system"
"chandrikadeb7/Face-Mask-Detection" -> "AIZOOTech/FaceMaskDetection"
"chandrikadeb7/Face-Mask-Detection" -> "balajisrinivas/Face-Mask-Detection"
"chandrikadeb7/Face-Mask-Detection" -> "Spidy20/face_mask_detection"
"chandrikadeb7/Face-Mask-Detection" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"chandrikadeb7/Face-Mask-Detection" -> "prajnasb/observations"
"chandrikadeb7/Face-Mask-Detection" -> "cabani/MaskedFace-Net"
"chandrikadeb7/Face-Mask-Detection" -> "Karan-Malik/FaceMaskDetector"
"chandrikadeb7/Face-Mask-Detection" -> "aqeelanwar/MaskTheFace"
"chandrikadeb7/Face-Mask-Detection" -> "aieml/face-mask-detection-keras"
"chandrikadeb7/Face-Mask-Detection" -> "gurucharan-marthi/Face-Mask-Detection"
"chandrikadeb7/Face-Mask-Detection" -> "adityap27/face-mask-detector"
"chandrikadeb7/Face-Mask-Detection" -> "Ank-Cha/Social-Distancing-Analyser-COVID-19"
"chandrikadeb7/Face-Mask-Detection" -> "NVIDIA-AI-IOT/face-mask-detection" ["e"=1]
"chandrikadeb7/Face-Mask-Detection" -> "JDAI-CV/FaceX-Zoo"
"chandrikadeb7/Face-Mask-Detection" -> "datarootsio/tutorial-face-mask-detection"
"cabani/MaskedFace-Net" -> "aqeelanwar/MaskTheFace"
"cabani/MaskedFace-Net" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"cabani/MaskedFace-Net" -> "AIZOOTech/FaceMaskDetection"
"cabani/MaskedFace-Net" -> "borutb-fri/FMLD"
"cabani/MaskedFace-Net" -> "HuangYG123/CurricularFace"
"cabani/MaskedFace-Net" -> "Hsintao/pfld_106_face_landmarks"
"cabani/MaskedFace-Net" -> "chandrikadeb7/Face-Mask-Detection"
"cabani/MaskedFace-Net" -> "Charrin/RetinaFace-Cpp"
"cabani/MaskedFace-Net" -> "Tencent/TFace"
"cabani/MaskedFace-Net" -> "SamYuen101234/Masked_Face_Recognition"
"peteryuX/arcface-tf2" -> "peteryuX/retinaface-tf2"
"peteryuX/arcface-tf2" -> "luckycallor/InsightFace-tensorflow"
"peteryuX/arcface-tf2" -> "dmonterom/face_recognition_TF2"
"peteryuX/arcface-tf2" -> "4uiiurz1/keras-arcface"
"peteryuX/arcface-tf2" -> "leondgarse/Keras_insightface"
"peteryuX/arcface-tf2" -> "mobilesec/arcface-tensorflowlite"
"peteryuX/arcface-tf2" -> "aangfanboy/deepface"
"peteryuX/arcface-tf2" -> "peteryuX/esrgan-tf2" ["e"=1]
"peteryuX/arcface-tf2" -> "Fei-Wang/insightface"
"peteryuX/arcface-tf2" -> "StanislasBertrand/RetinaFace-tf2"
"GraphtyLove/Face-recognition-project" -> "codeglitchz/attendance-system"
"GraphtyLove/Face-recognition-project" -> "satinder147/Attendance-using-Face"
"GraphtyLove/Face-recognition-project" -> "yogesh-kamat/FaceAttend"
"chengxy-nds/ArcSoftFaceDemo" -> "itboyst/ArcSoftFaceDemo"
"juan-csv/Architecture-for-real-time-video-streaming-analytics" -> "juan-csv/face-recognition"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "IIT-PAVIS/Social-Distancing"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "aqeelanwar/SocialDistancingAI"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "deepak112/Social-Distancing-AI"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "basileroth75/covid-social-distancing-detection"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "abd-shoumik/Social-distance-detection"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "ChargedMonk/Social-Distancing-using-YOLOv5"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "DrMahdiRezaei/DeepSOCIAL"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "JohnBetaCode/Social-Distancing-Analyser"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "parthsompura/Social-Distancing-Detector"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "adityap27/face-mask-detector"
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "galliot-us/smart-social-distancing" ["e"=1]
"Ank-Cha/Social-Distancing-Analyser-COVID-19" -> "augmentedstartups/YOLOv4-Tutorials" ["e"=1]
"ShiqiYu/libfacedetection.train" -> "Star-Clouds/CenterFace"
"ShiqiYu/libfacedetection.train" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"ShiqiYu/libfacedetection.train" -> "dlunion/DBFace"
"ShiqiYu/libfacedetection.train" -> "ShiqiYu/libfacedetection"
"ShiqiYu/libfacedetection.train" -> "polarisZhao/PFLD-pytorch"
"ShiqiYu/libfacedetection.train" -> "biubug6/Face-Detector-1MB-with-landmark"
"ShiqiYu/libfacedetection.train" -> "opencv/opencv_zoo"
"ShiqiYu/libfacedetection.train" -> "biubug6/Pytorch_Retinaface"
"ShiqiYu/libfacedetection.train" -> "guoqiangqi/PFLD"
"ShiqiYu/libfacedetection.train" -> "MirrorYuChen/ncnn_example"
"ShiqiYu/libfacedetection.train" -> "610265158/face_landmark"
"ShiqiYu/libfacedetection.train" -> "zuoqing1988/ZQCNN"
"ShiqiYu/libfacedetection.train" -> "JDAI-CV/FaceX-Zoo"
"ShiqiYu/libfacedetection.train" -> "zisianw/FaceBoxes.PyTorch"
"ShiqiYu/libfacedetection.train" -> "DayBreak-u/yolo-face-with-landmark"
"HuangYG123/CurricularFace" -> "cavalleria/cavaface"
"HuangYG123/CurricularFace" -> "IrvingMeng/MagFace"
"HuangYG123/CurricularFace" -> "xiaoboCASIA/SV-X-Softmax"
"HuangYG123/CurricularFace" -> "Tencent/TFace"
"HuangYG123/CurricularFace" -> "cleardusk/MFR"
"HuangYG123/CurricularFace" -> "fdbtrs/ElasticFace"
"HuangYG123/CurricularFace" -> "4uiiurz1/pytorch-adacos"
"HuangYG123/CurricularFace" -> "JDAI-CV/FaceX-Zoo"
"HuangYG123/CurricularFace" -> "bleakie/MaskInsightface"
"HuangYG123/CurricularFace" -> "TreB1eN/InsightFace_Pytorch"
"HuangYG123/CurricularFace" -> "wujiyang/Face_Pytorch"
"HuangYG123/CurricularFace" -> "mk-minchul/AdaFace"
"HuangYG123/CurricularFace" -> "huangyangyu/NoiseFace"
"HuangYG123/CurricularFace" -> "seasonSH/Probabilistic-Face-Embeddings"
"HuangYG123/CurricularFace" -> "ronghuaiyang/arcface-pytorch"
"digital-nomad-cheng/Iris_Landmarks_PyTorch" -> "cedriclmenard/irislandmarks.pytorch"
"digital-nomad-cheng/Iris_Landmarks_PyTorch" -> "OmarMedhat22/Iris-Recognition-CASIA-Iris-Thousand"
"OmarMedhat22/Iris-Recognition-on-Ubiris-v2" -> "OmarMedhat22/iris-Recognition-Casia-Interval-v4"
"OmarMedhat22/Iris-Recognition-CASIA-Iris-Thousand" -> "OmarMedhat22/Iris-Recognition-on-Ubiris-v2"
"OmarMedhat22/Iris-Recognition-CASIA-Iris-Thousand" -> "OmarMedhat22/iris-Recognition-Casia-Interval-v4"
"K-G-PRAJWAL/Python-Projects" -> "surajsinghbisht054/Python-Media-Player"
"K-G-PRAJWAL/Python-Projects" -> "K-G-PRAJWAL/HTML-CSS-Projects" ["e"=1]
"K-G-PRAJWAL/Python-Projects" -> "aashishpeepra/whatsapp-live-cricket-bot"
"K-G-PRAJWAL/Python-Projects" -> "K-G-PRAJWAL/Machine-Learning-Projects" ["e"=1]
"K-G-PRAJWAL/Python-Projects" -> "K-G-PRAJWAL/ExpressJS-Projects" ["e"=1]
"K-G-PRAJWAL/Python-Projects" -> "shubhamkumar27/Face_recognition_based_attendance_system"
"hanson-young/nniefacelib" -> "yangfei963158659/nnie" ["e"=1]
"hanson-young/nniefacelib" -> "Strand2013/NNIE-lite" ["e"=1]
"hanson-young/nniefacelib" -> "polarisZhao/PFLD-pytorch"
"hanson-young/nniefacelib" -> "MirrorYuChen/ncnn_example"
"hanson-young/nniefacelib" -> "biubug6/Face-Detector-1MB-with-landmark"
"hanson-young/nniefacelib" -> "aovoc/nnieqat-pytorch" ["e"=1]
"hanson-young/nniefacelib" -> "Hsintao/pfld_106_face_landmarks"
"hanson-young/nniefacelib" -> "Charrin/RetinaFace-Cpp"
"hanson-young/nniefacelib" -> "guoqiangqi/PFLD"
"hanson-young/nniefacelib" -> "github-luffy/PFLD_68points_Pytorch"
"hanson-young/nniefacelib" -> "ChenYingpeng/caffe-yolov3" ["e"=1]
"hanson-young/nniefacelib" -> "610265158/Peppa_Pig_Face_Landmark"
"hanson-young/nniefacelib" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"hanson-young/nniefacelib" -> "xindongzhang/MNN-APPLICATIONS"
"hanson-young/nniefacelib" -> "610265158/face_landmark"
"neelanjan00/Driver-Drowsiness-Detection" -> "jaisayush/Fatigue-Detection-System-Based-On-Behavioural-Characteristics-Of-Driver"
"neelanjan00/Driver-Drowsiness-Detection" -> "swarnim1212/driver_fatigue_detection"
"neelanjan00/Driver-Drowsiness-Detection" -> "fear-the-lord/Drowsiness-Detection"
"neelanjan00/Driver-Drowsiness-Detection" -> "msindev/Driver-Drowsiness-Detector"
"neelanjan00/Driver-Drowsiness-Detection" -> "KaerMorh/fatigue-driving-detection" ["e"=1]
"chenjun2hao/CenterFace.pytorch" -> "Star-Clouds/CenterFace"
"chenjun2hao/CenterFace.pytorch" -> "bleakie/CenterMulti"
"chenjun2hao/CenterFace.pytorch" -> "siriusdemon/Build-Your-Own-Face-Model"
"chenjun2hao/CenterFace.pytorch" -> "dlunion/DBFace"
"chenjun2hao/CenterFace.pytorch" -> "Star-Clouds/FRDA"
"chenjun2hao/CenterFace.pytorch" -> "tensorboy/centerpose" ["e"=1]
"chenjun2hao/CenterFace.pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"chenjun2hao/CenterFace.pytorch" -> "nvlong21/Lightweight-face-detection-CenterNet"
"chenjun2hao/CenterFace.pytorch" -> "Hsintao/pfld_106_face_landmarks"
"chenjun2hao/CenterFace.pytorch" -> "HiBugs/CenterNet"
"chenjun2hao/CenterFace.pytorch" -> "becauseofAI/lffd-pytorch"
"chenjun2hao/CenterFace.pytorch" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"OlafenwaMoses/FireNET" -> "tobybreckon/fire-detection-cnn"
"OlafenwaMoses/FireNET" -> "robmarkcole/fire-detection-from-images"
"OlafenwaMoses/FireNET" -> "cair/Fire-Detection-Image-Dataset"
"OlafenwaMoses/FireNET" -> "DeepQuestAI/Fire-Smoke-Dataset"
"OlafenwaMoses/FireNET" -> "arpit-jadon/FireNet-LightWeight-Network-for-Fire-Detection"
"OlafenwaMoses/FireNET" -> "sulenn/fire-dataset"
"OlafenwaMoses/FireNET" -> "midasklr/FireSmokeDetectionByEfficientNet"
"OlafenwaMoses/FireNET" -> "AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle"
"OlafenwaMoses/FireNET" -> "steffensbola/furg-fire-dataset"
"OlafenwaMoses/FireNET" -> "gengyanlei/fire-smoke-detect-yolov4"
"OlafenwaMoses/FireNET" -> "POLARBEARWYY/Smoke-Detection"
"OlafenwaMoses/FireNET" -> "OlafenwaMoses/Traffic-Net"
"OlafenwaMoses/FireNET" -> "OlafenwaMoses/Action-Net"
"OlafenwaMoses/FireNET" -> "amirsultan/fireDetection"
"OlafenwaMoses/FireNET" -> "markgao-916/yolov3_fire_detection"
"DrMahdiRezaei/DeepSOCIAL" -> "shliang0603/Yolov4_DeepSocial"
"TadasBaltrusaitis/CLM-framework" -> "patrikhuber/superviseddescent"
"TadasBaltrusaitis/CLM-framework" -> "yulequan/face-alignment-in-3000fps"
"TadasBaltrusaitis/CLM-framework" -> "sai-bi/FaceAlignment"
"TadasBaltrusaitis/CLM-framework" -> "kylemcdonald/FaceTracker"
"TadasBaltrusaitis/CLM-framework" -> "tntrung/sdm_face_alignment"
"TadasBaltrusaitis/CLM-framework" -> "zhusz/CVPR15-CFSS"
"TadasBaltrusaitis/CLM-framework" -> "uricamic/clandmark"
"TadasBaltrusaitis/CLM-framework" -> "luoyetx/deep-landmark"
"TadasBaltrusaitis/CLM-framework" -> "jwyang/face-alignment"
"TadasBaltrusaitis/CLM-framework" -> "cheind/dest"
"TadasBaltrusaitis/CLM-framework" -> "ci2cv/face-analysis-sdk"
"TadasBaltrusaitis/CLM-framework" -> "freesouls/face-alignment-at-3000fps"
"TadasBaltrusaitis/CLM-framework" -> "chengzhengxin/sdm"
"TadasBaltrusaitis/CLM-framework" -> "ydwen/caffe-face"
"TadasBaltrusaitis/CLM-framework" -> "cxcxcxcx/asmlib-opencv"
"WIKI2020/FacePose_pytorch" -> "polarisZhao/PFLD-pytorch"
"WIKI2020/FacePose_pytorch" -> "shamangary/FSA-Net"
"WIKI2020/FacePose_pytorch" -> "vitoralbiero/img2pose"
"WIKI2020/FacePose_pytorch" -> "natanielruiz/deep-head-pose"
"WIKI2020/FacePose_pytorch" -> "cunjian/pytorch_face_landmark"
"WIKI2020/FacePose_pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"WIKI2020/FacePose_pytorch" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"WIKI2020/FacePose_pytorch" -> "yinguobing/head-pose-estimation"
"WIKI2020/FacePose_pytorch" -> "1996scarlet/Dense-Head-Pose-Estimation"
"WIKI2020/FacePose_pytorch" -> "cleardusk/3DDFA_V2" ["e"=1]
"WIKI2020/FacePose_pytorch" -> "wensiyuanseven/lite-virtual-list" ["e"=1]
"WIKI2020/FacePose_pytorch" -> "wensiyuanseven/better-gesture" ["e"=1]
"WIKI2020/FacePose_pytorch" -> "cfs6/AChat" ["e"=1]
"WIKI2020/FacePose_pytorch" -> "github-luffy/PFLD_68points_Pytorch"
"WIKI2020/FacePose_pytorch" -> "hanson-young/nniefacelib"
"omasaht/headpose-fsanet-pytorch" -> "shamangary/FSA-Net"
"omasaht/headpose-fsanet-pytorch" -> "lyp-deeplearning/MOS-Multi-Task-Face-Detect"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "thohemp/6DRepNet"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "natanielruiz/deep-head-pose"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "shamangary/FSA-Net"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "vitoralbiero/img2pose"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "choyingw/SynergyNet" ["e"=1]
"Ascend-Research/HeadPoseEstimation-WHENet" -> "hnuzhy/DirectMHP"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "PINTO0309/HeadPoseEstimation-WHENet-yolov4-onnx-openvino"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "omasaht/headpose-fsanet-pytorch"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "haofanwang/accurate-head-pose"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "1996scarlet/Dense-Head-Pose-Estimation"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "WIKI2020/FacePose_pytorch"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "hysts/pytorch_mpiigaze" ["e"=1]
"Ascend-Research/HeadPoseEstimation-WHENet" -> "lyp-deeplearning/MOS-Multi-Task-Face-Detect"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "yinguobing/head-pose-estimation"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "xucong-zhang/ETH-XGaze" ["e"=1]
"dchen236/FairFace" -> "joojs/fairface"
"dchen236/FairFace" -> "lxq1000/SwinFace"
"dchen236/FairFace" -> "wondonghyeon/face-classification" ["e"=1]
"dchen236/FairFace" -> "gaobb/DLDL-v2"
"dchen236/FairFace" -> "FacePerceiver/FaRL" ["e"=1]
"dchen236/FairFace" -> "Tencent/TFace"
"dchen236/FairFace" -> "microsoft/DigiFace1M"
"dchen236/FairFace" -> "DCGM/ffhq-features-dataset" ["e"=1]
"dchen236/FairFace" -> "sungho-CoolG/FSCL" ["e"=1]
"dchen236/FairFace" -> "HuangYG123/CurricularFace"
"dchen236/FairFace" -> "royorel/FFHQ-Aging-Dataset" ["e"=1]
"dchen236/FairFace" -> "pterhoer/MAAD-Face"
"dchen236/FairFace" -> "oukohou/SSR_Net_Pytorch"
"dchen236/FairFace" -> "princetonvisualai/DomainBiasMitigation" ["e"=1]
"dchen236/FairFace" -> "mk-minchul/dcface" ["e"=1]
"seetafaceengine/SeetaFace2" -> "seetafaceengine/SeetaFace6"
"seetafaceengine/SeetaFace2" -> "SeetaFace6Open/index"
"seetafaceengine/SeetaFace2" -> "seetaface/SeetaFaceEngine2"
"seetafaceengine/SeetaFace2" -> "Star-Clouds/CenterFace"
"seetafaceengine/SeetaFace2" -> "zuoqing1988/ZQCNN"
"seetafaceengine/SeetaFace2" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"seetafaceengine/SeetaFace2" -> "KangLin/FaceRecognizer"
"seetafaceengine/SeetaFace2" -> "seetaface/SeetaFaceEngine"
"seetafaceengine/SeetaFace2" -> "szad670401/HyperLandmark"
"seetafaceengine/SeetaFace2" -> "Tencent/FaceDetection-DSFD"
"seetafaceengine/SeetaFace2" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"seetafaceengine/SeetaFace2" -> "ShiqiYu/libfacedetection"
"seetafaceengine/SeetaFace2" -> "biubug6/Face-Detector-1MB-with-landmark"
"seetafaceengine/SeetaFace2" -> "ZhaoJ9014/face.evoLVe"
"seetafaceengine/SeetaFace2" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"TinyZeaMays/CircleLoss" -> "qianjinhao/circle-loss"
"TinyZeaMays/CircleLoss" -> "zhen8838/Circle-Loss"
"TinyZeaMays/CircleLoss" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"TinyZeaMays/CircleLoss" -> "msight-tech/research-ms-loss"
"TinyZeaMays/CircleLoss" -> "xiangli13/circle-loss"
"TinyZeaMays/CircleLoss" -> "HuangYG123/CurricularFace"
"TinyZeaMays/CircleLoss" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"TinyZeaMays/CircleLoss" -> "KaiyangZhou/pytorch-center-loss"
"TinyZeaMays/CircleLoss" -> "msight-tech/research-xbm"
"TinyZeaMays/CircleLoss" -> "idstcv/SoftTriple"
"TinyZeaMays/CircleLoss" -> "xiaoboCASIA/SV-X-Softmax"
"TinyZeaMays/CircleLoss" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"TinyZeaMays/CircleLoss" -> "seasonSH/Probabilistic-Face-Embeddings"
"TinyZeaMays/CircleLoss" -> "xialuxi/CircleLoss_Face"
"TinyZeaMays/CircleLoss" -> "Confusezius/Deep-Metric-Learning-Baselines"
"Sharpiless/Face-recognition-for-classroom-sign-in" -> "YIQIANWANG/OnlineFaceRecognition"
"peteryuX/retinaface-tf2" -> "StanislasBertrand/RetinaFace-tf2"
"peteryuX/retinaface-tf2" -> "peteryuX/arcface-tf2"
"peteryuX/retinaface-tf2" -> "wondervictor/WiderFace-Evaluation"
"peteryuX/retinaface-tf2" -> "1996scarlet/faster-mobile-retinaface"
"peteryuX/retinaface-tf2" -> "clancylian/retinaface"
"peteryuX/retinaface-tf2" -> "peteryuX/esrgan-tf2" ["e"=1]
"peteryuX/retinaface-tf2" -> "hukkelas/DSFD-Pytorch-Inference"
"peteryuX/retinaface-tf2" -> "EricZgw/PyramidBox"
"KevinMusgrave/powerful-benchmarker" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"KevinMusgrave/powerful-benchmarker" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"KevinMusgrave/powerful-benchmarker" -> "kdhht2334/Survey_of_Deep_Metric_Learning"
"KevinMusgrave/powerful-benchmarker" -> "Confusezius/Deep-Metric-Learning-Baselines"
"KevinMusgrave/powerful-benchmarker" -> "bnu-wangxun/Deep_Metric"
"KevinMusgrave/powerful-benchmarker" -> "msight-tech/research-ms-loss"
"KevinMusgrave/powerful-benchmarker" -> "jeromerony/dml_cross_entropy"
"KevinMusgrave/powerful-benchmarker" -> "euwern/proxynca_pp"
"KevinMusgrave/powerful-benchmarker" -> "idstcv/SoftTriple"
"KevinMusgrave/powerful-benchmarker" -> "msight-tech/research-xbm"
"KevinMusgrave/powerful-benchmarker" -> "dichotomies/proxy-nca"
"KevinMusgrave/powerful-benchmarker" -> "KevinMusgrave/pytorch-metric-learning" ["e"=1]
"KevinMusgrave/powerful-benchmarker" -> "elias-ramzi/ROADMAP"
"KevinMusgrave/powerful-benchmarker" -> "KevinMusgrave/record-keeper"
"KevinMusgrave/powerful-benchmarker" -> "azgo14/classification_metric_learning"
"Surya-Murali/Real-Time-Object-Detection-With-OpenCV" -> "Alina-chan/realtime-object-detection"
"aqeelanwar/MaskTheFace" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"aqeelanwar/MaskTheFace" -> "cabani/MaskedFace-Net"
"aqeelanwar/MaskTheFace" -> "JDAI-CV/FaceX-Zoo"
"aqeelanwar/MaskTheFace" -> "SamYuen101234/Masked_Face_Recognition"
"aqeelanwar/MaskTheFace" -> "IrvingMeng/MagFace"
"aqeelanwar/MaskTheFace" -> "cavalleria/cavaface"
"aqeelanwar/MaskTheFace" -> "Tencent/TFace"
"aqeelanwar/MaskTheFace" -> "pterhoer/FaceImageQuality"
"aqeelanwar/MaskTheFace" -> "broutonlab/face-id-with-medical-masks"
"aqeelanwar/MaskTheFace" -> "fdbtrs/Masked-Face-Recognition-KD"
"aqeelanwar/MaskTheFace" -> "vitoralbiero/img2pose"
"aqeelanwar/MaskTheFace" -> "linserSnow/PDSN"
"aqeelanwar/MaskTheFace" -> "ZhangYuanhan-AI/CelebA-Spoof" ["e"=1]
"aqeelanwar/MaskTheFace" -> "HuangYG123/CurricularFace"
"aqeelanwar/MaskTheFace" -> "mk-minchul/AdaFace"
"DayBreak-u/yolo-face-with-landmark" -> "DayBreak-u/darknet_face_with_landmark"
"DayBreak-u/yolo-face-with-landmark" -> "Hsintao/pfld_106_face_landmarks"
"DayBreak-u/yolo-face-with-landmark" -> "xialuxi/yolov5_face_landmark"
"DayBreak-u/yolo-face-with-landmark" -> "biubug6/Face-Detector-1MB-with-landmark"
"DayBreak-u/yolo-face-with-landmark" -> "SyGoing/LFFD-with-ncnn"
"pterhoer/FaceImageQuality" -> "javier-hernandezo/FaceQnet"
"pterhoer/FaceImageQuality" -> "deepcam-cn/FaceQuality"
"pterhoer/FaceImageQuality" -> "IrvingMeng/MagFace"
"pterhoer/FaceImageQuality" -> "Tencent/TFace"
"pterhoer/FaceImageQuality" -> "cavalleria/cavaface"
"pterhoer/FaceImageQuality" -> "pterhoer/ExplainableFaceImageQuality"
"pterhoer/FaceImageQuality" -> "SSL92/hyperIQA" ["e"=1]
"pterhoer/FaceImageQuality" -> "fdbtrs/CR-FIQA"
"pterhoer/FaceImageQuality" -> "zwx8981/DBCNN-PyTorch" ["e"=1]
"pterhoer/FaceImageQuality" -> "seasonSH/Probabilistic-Face-Embeddings"
"pterhoer/FaceImageQuality" -> "hanson-young/nniefacelib"
"pterhoer/FaceImageQuality" -> "RizhaoCai/Awesome-FAS" ["e"=1]
"pterhoer/FaceImageQuality" -> "JDAI-CV/FaceX-Zoo"
"pterhoer/FaceImageQuality" -> "HuangYG123/CurricularFace"
"pterhoer/FaceImageQuality" -> "minivision-ai/Silent-Face-Anti-Spoofing" ["e"=1]
"gustavz/AttractiveNet" -> "lucasxlu/HMTNet"
"robmarkcole/fire-detection-from-images" -> "tobybreckon/fire-detection-cnn"
"robmarkcole/fire-detection-from-images" -> "spacewalk01/yolov5-fire-detection"
"robmarkcole/fire-detection-from-images" -> "OlafenwaMoses/FireNET"
"robmarkcole/fire-detection-from-images" -> "gengyanlei/fire-smoke-detect-yolov4"
"robmarkcole/fire-detection-from-images" -> "gaiasd/DFireDataset"
"robmarkcole/fire-detection-from-images" -> "AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle"
"robmarkcole/fire-detection-from-images" -> "cair/Fire-Detection-Image-Dataset"
"robmarkcole/fire-detection-from-images" -> "DeepQuestAI/Fire-Smoke-Dataset"
"robmarkcole/fire-detection-from-images" -> "midasklr/FireSmokeDetectionByEfficientNet"
"robmarkcole/fire-detection-from-images" -> "arpit-jadon/FireNet-LightWeight-Network-for-Fire-Detection"
"robmarkcole/fire-detection-from-images" -> "steffensbola/furg-fire-dataset"
"robmarkcole/fire-detection-from-images" -> "jackfrost1411/fire-detection"
"robmarkcole/fire-detection-from-images" -> "MuhammadMoinFaisal/FireDetectionYOLOv8"
"robmarkcole/fire-detection-from-images" -> "Abonia1/YOLOv8-Fire-and-Smoke-Detection"
"robmarkcole/fire-detection-from-images" -> "NeelBhowmik/efficient-compact-fire-detection-cnn"
"gaiasd/DFireDataset" -> "pedbrgs/Fire-Detection"
"gaiasd/DFireDataset" -> "Abonia1/YOLOv8-Fire-and-Smoke-Detection"
"gaiasd/DFireDataset" -> "robmarkcole/fire-detection-from-images"
"gaiasd/DFireDataset" -> "siyuanwu/DFS-FIRE-SMOKE-Dataset"
"gaiasd/DFireDataset" -> "DeepQuestAI/Fire-Smoke-Dataset"
"gaiasd/DFireDataset" -> "gengyanlei/fire-smoke-detect-yolov4"
"gaiasd/DFireDataset" -> "spacewalk01/yolov5-fire-detection"
"gaiasd/DFireDataset" -> "MuhammadMoinFaisal/FireDetectionYOLOv8"
"gaiasd/DFireDataset" -> "aiformankind/wildfire-smoke-dataset"
"gaiasd/DFireDataset" -> "AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle"
"gaiasd/DFireDataset" -> "cair/Fire-Detection-Image-Dataset"
"gaiasd/DFireDataset" -> "tobybreckon/fire-detection-cnn"
"gaiasd/DFireDataset" -> "OlafenwaMoses/FireNET"
"prajnasb/observations" -> "gurucharan-marthi/Face-Mask-Detection"
"prajnasb/observations" -> "Spidy20/face_mask_detection"
"prajnasb/observations" -> "chandrikadeb7/Face-Mask-Detection"
"prajnasb/observations" -> "kairess/mask-detection"
"prajnasb/observations" -> "JadHADDAD92/covid-mask-detector"
"prajnasb/observations" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"prajnasb/observations" -> "adityap27/face-mask-detector"
"prajnasb/observations" -> "rfribeiro/mask-detector"
"prajnasb/observations" -> "cabani/MaskedFace-Net"
"linhaoqi027/SEG-GRAD-CAM" -> "linhaoqi027/smoke-segmentation"
"kiraving/SegGradCAM" -> "linhaoqi027/SEG-GRAD-CAM"
"hualuoo/dormitory_menage_system" -> "gxrtbf/facetrain"
"hualuoo/dormitory_menage_system" -> "waiterxiaoyy/waiter-facerecognition-python"
"hualuoo/dormitory_menage_system" -> "Color-l/FaceRecognitionAttendanceSystem"
"hualuoo/dormitory_menage_system" -> "xg-zhang/faceRegister"
"hualuoo/dormitory_menage_system" -> "eai2x/Face-Recognition-Class-Attendance-System"
"hualuoo/dormitory_menage_system" -> "mengyue0722/Face-swiping-Time-Attendance-System"
"hualuoo/dormitory_menage_system" -> "oneStarLR/faceReco" ["e"=1]
"SeetaFace6Open/index" -> "seetafaceengine/SeetaFace6"
"SeetaFace6Open/index" -> "KangLin/FaceRecognizer"
"SeetaFace6Open/index" -> "seetafaceengine/SeetaFace2"
"SeetaFace6Open/index" -> "tensorflower/seetaFace6Python"
"SeetaFace6Open/index" -> "ViewFaceCore/ViewFaceCore" ["e"=1]
"SeetaFace6Open/index" -> "SeetaFace6Open/SeetaFace6JNI"
"SeetaFace6Open/index" -> "seetafaceengine/SeetaFaceTutorial"
"SeetaFace6Open/index" -> "yangkang2021/SeetaFace6-Build"
"SeetaFace6Open/index" -> "jamesluozhiwei/seetafaceJNI"
"SeetaFace6Open/index" -> "minivision-ai/Silent-Face-Anti-Spoofing" ["e"=1]
"SeetaFace6Open/index" -> "seetaface/SeetaFaceEngine2"
"SeetaFace6Open/index" -> "zeusees/HyperFAS" ["e"=1]
"SeetaFace6Open/index" -> "xiangweizeng/mobile-lpr" ["e"=1]
"SeetaFace6Open/index" -> "SeetaFace6Sharp/SeetaFace6Sharp"
"zeusees/HyperFT" -> "qaz734913414/Ncnn_FaceTrack"
"zeusees/HyperFT" -> "xiangdeyizhang/FaceTrack_ncnn_HyperFT"
"zeusees/HyperFT" -> "HansRen1024/Face-Tracking-Using-CNN-and-Optical-Flow"
"zeusees/HyperFT" -> "moli232777144/mtcnn_ncnn"
"zeusees/HyperFT" -> "MirrorYuChen/ncnn_example"
"zeusees/HyperFT" -> "szad670401/HyperLandmark"
"zeusees/HyperFT" -> "zeusees/HyperLandmark"
"zeusees/HyperFT" -> "ElegantGod/ncnn"
"zeusees/HyperFT" -> "panda-lab/face-landmark"
"zeusees/HyperFT" -> "xindongzhang/MNN-APPLICATIONS"
"zeusees/HyperFT" -> "Star-Clouds/CenterFace"
"zeusees/HyperFT" -> "zeusees/HyperLabelImg"
"zeusees/HyperFT" -> "bleakie/MaskInsightface"
"zeusees/HyperFT" -> "Hsintao/pfld_106_face_landmarks"
"zeusees/HyperFT" -> "zeusees/Zeusee-Face-Anti-spoofing" ["e"=1]
"IIT-PAVIS/AI-Thermometer" -> "IIT-PAVIS/Social-Distancing"
"vdjango/MaskFace" -> "bubbliiiing/mask-recognize" ["e"=1]
"vdjango/MaskFace" -> "ztjryg4/MaskDetect"
"ciber-lab/pictor-ppe" -> "ZijianWang-ZW/PPE_detection"
"ciber-lab/pictor-ppe" -> "ruoxinx/PPE-Detection-Pose"
"ciber-lab/pictor-ppe" -> "AnshulSood11/PPE-Detection-YOLO-Deep_SORT"
"cunjian/pytorch_face_landmark" -> "polarisZhao/PFLD-pytorch"
"cunjian/pytorch_face_landmark" -> "HRNet/HRNet-Facial-Landmark-Detection"
"cunjian/pytorch_face_landmark" -> "github-luffy/PFLD_68points_Pytorch"
"cunjian/pytorch_face_landmark" -> "guoqiangqi/PFLD"
"cunjian/pytorch_face_landmark" -> "D-X-Y/landmark-detection"
"cunjian/pytorch_face_landmark" -> "biubug6/Face-Detector-1MB-with-landmark"
"cunjian/pytorch_face_landmark" -> "610265158/Peppa_Pig_Face_Landmark"
"cunjian/pytorch_face_landmark" -> "Hsintao/pfld_106_face_landmarks"
"cunjian/pytorch_face_landmark" -> "Star-Clouds/CenterFace"
"cunjian/pytorch_face_landmark" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"cunjian/pytorch_face_landmark" -> "biubug6/Pytorch_Retinaface"
"cunjian/pytorch_face_landmark" -> "WIKI2020/FacePose_pytorch"
"cunjian/pytorch_face_landmark" -> "cleardusk/3DDFA_V2" ["e"=1]
"cunjian/pytorch_face_landmark" -> "jhb86253817/PIPNet"
"cunjian/pytorch_face_landmark" -> "vitoralbiero/img2pose"
"610265158/Peppa_Pig_Face_Landmark" -> "610265158/face_landmark"
"610265158/Peppa_Pig_Face_Landmark" -> "guoqiangqi/PFLD"
"610265158/Peppa_Pig_Face_Landmark" -> "Hsintao/pfld_106_face_landmarks"
"610265158/Peppa_Pig_Face_Landmark" -> "facebookresearch/supervision-by-registration"
"610265158/Peppa_Pig_Face_Landmark" -> "Star-Clouds/FRDA"
"610265158/Peppa_Pig_Face_Landmark" -> "polarisZhao/PFLD-pytorch"
"610265158/Peppa_Pig_Face_Landmark" -> "szad670401/HyperLandmark"
"610265158/Peppa_Pig_Face_Landmark" -> "JACKYLUO1991/106-landmarks-dataset"
"610265158/Peppa_Pig_Face_Landmark" -> "wywu/LAB"
"610265158/Peppa_Pig_Face_Landmark" -> "Star-Clouds/CenterFace"
"610265158/Peppa_Pig_Face_Landmark" -> "cunjian/pytorch_face_landmark"
"610265158/Peppa_Pig_Face_Landmark" -> "biubug6/Face-Detector-1MB-with-landmark"
"610265158/Peppa_Pig_Face_Landmark" -> "hanson-young/nniefacelib"
"610265158/Peppa_Pig_Face_Landmark" -> "MirrorYuChen/ncnn_example"
"610265158/Peppa_Pig_Face_Landmark" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"SthPhoenix/InsightFace-REST" -> "linghu8812/tensorrt_inference" ["e"=1]
"SthPhoenix/InsightFace-REST" -> "tuna318/Face-Recognition-with-InsightFace"
"SthPhoenix/InsightFace-REST" -> "bleakie/MaskInsightface"
"SthPhoenix/InsightFace-REST" -> "Star-Clouds/CenterFace"
"SthPhoenix/InsightFace-REST" -> "littletomatodonkey/insight-face-paddle" ["e"=1]
"SthPhoenix/InsightFace-REST" -> "JDAI-CV/FaceX-Zoo"
"SthPhoenix/InsightFace-REST" -> "biubug6/Face-Detector-1MB-with-landmark"
"SthPhoenix/InsightFace-REST" -> "vectornguyen76/face-recognition"
"SthPhoenix/InsightFace-REST" -> "IrvingMeng/MagFace"
"SthPhoenix/InsightFace-REST" -> "clancylian/retinaface"
"SthPhoenix/InsightFace-REST" -> "zeusees/HyperFAS" ["e"=1]
"SthPhoenix/InsightFace-REST" -> "aqeelanwar/MaskTheFace"
"SthPhoenix/InsightFace-REST" -> "pcb9382/FaceAlgorithm" ["e"=1]
"SthPhoenix/InsightFace-REST" -> "zma-c-137/VarGFaceNet"
"SthPhoenix/InsightFace-REST" -> "Tencent/TFace"
"aqeelanwar/SocialDistancingAI" -> "deepak112/Social-Distancing-AI"
"aqeelanwar/SocialDistancingAI" -> "IIT-PAVIS/Social-Distancing"
"vudung45/HLS-GoogleDrive" -> "vudung45/MovieSites-MediaExtractor"
"vudung45/HLS-GoogleDrive" -> "vudung45/FaceRTC"
"vudung45/HLS-GoogleDrive" -> "vudung45/Viet-trie"
"joojs/fairface" -> "dchen236/FairFace"
"joojs/fairface" -> "jian667/face-dataset"
"joojs/fairface" -> "royorel/FFHQ-Aging-Dataset" ["e"=1]
"joojs/fairface" -> "pterhoer/MAAD-Face"
"joojs/fairface" -> "supernotman/RetinaFace_Pytorch"
"joojs/fairface" -> "happynear/FaceDatasets"
"ElvishElvis/68-Retinaface-Pytorch-version" -> "supernotman/RetinaFace_Pytorch"
"ElvishElvis/68-Retinaface-Pytorch-version" -> "bogireddytejareddy/retinaface-pytorch"
"jackweiwang/Android-FaceDetection-UltraNet-MNN" -> "Danicaai/android-mnn"
"jackweiwang/Android-FaceDetection-UltraNet-MNN" -> "MirrorYuChen/mnn_example"
"MirrorYuChen/mnn_example" -> "xindongzhang/MNN-APPLICATIONS"
"MirrorYuChen/mnn_example" -> "MirrorYuChen/ncnn_example"
"MirrorYuChen/mnn_example" -> "jackweiwang/Android-FaceDetection-UltraNet-MNN"
"MirrorYuChen/mnn_example" -> "JACKYLUO1991/106-landmarks-dataset"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "610265158/face_landmark"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "Hsintao/pfld_106_face_landmarks"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "610265158/Peppa_Pig_Face_Landmark"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "chengzhengxin/deep-sdm"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "polarisZhao/PFLD-pytorch"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "cunjian/pytorch_face_landmark"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "yinguobing/facial-landmark-detection-hrnet"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "github-luffy/PFLD_68points_Pytorch"
"tensorflower/seetaFace6Python" -> "zjd1988/seetaface6_onnx_model"
"tensorflower/seetaFace6Python" -> "seetafaceengine/SeetaFace6"
"tensorflower/seetaFace6Python" -> "SeetaFace6Open/index"
"tensorflower/seetaFace6Python" -> "yangjian1218/seetaface6ToPy"
"tensorflower/seetaFace6Python" -> "tensorflower/seetaFace-python"
"tensorflower/seetaFace6Python" -> "tensorflower/ArcFace-python"
"tensorflower/seetaFace6Python" -> "zeusees/HyperFAS" ["e"=1]
"tensorflower/seetaFace6Python" -> "bleakie/MaskInsightface"
"broutonlab/face-id-with-medical-masks" -> "juan-csv/face_recognition_occlusion"
"datarootsio/ml-skeleton-py" -> "datarootsio/tutorial-face-mask-detection"
"datarootsio/ml-skeleton-py" -> "datarootsio/fresh-coffee-listener"
"datarootsio/ml-skeleton-py" -> "datarootsio/databooks"
"datarootsio/ml-skeleton-py" -> "datarootsio/tutorial-mlops"
"ryanmasondavies/FaceDetection" -> "FlexMonkey/CartoonEyes"
"stresearch/xfr" -> "Martlgap/x-face-verification"
"stresearch/xfr" -> "yubangji123/Interpret_FR"
"Bil369/MaskDetect-YOLOv4-PyTorch" -> "CodingChaozhang/yolo3-keras-breath_mask"
"Bil369/MaskDetect-YOLOv4-PyTorch" -> "dengfenglai321/YOLOv4-Hat-detection"
"Bil369/MaskDetect-YOLOv4-PyTorch" -> "hikariming/virus-mask-dataset"
"Bil369/MaskDetect-YOLOv4-PyTorch" -> "huzixuan1/Object_Dete_Masking"
"Bil369/MaskDetect-YOLOv4-PyTorch" -> "ztjryg4/MaskDetect"
"Bil369/MaskDetect-YOLOv4-PyTorch" -> "bubbliiiing/mask-recognize" ["e"=1]
"Bil369/MaskDetect-YOLOv4-PyTorch" -> "xialuxi/yolov5_face_landmark"
"bytefish/facerec" -> "bytefish/facerecognition_guide"
"bytefish/facerec" -> "bytefish/libfacerec"
"bytefish/facerec" -> "biometrics/openbr"
"bytefish/facerec" -> "bytefish/opencv"
"bytefish/facerec" -> "AlfredXiangWu/face_verification_experiment"
"bytefish/facerec" -> "TadasBaltrusaitis/CLM-framework"
"bytefish/facerec" -> "JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform"
"bytefish/facerec" -> "betars/Face-Resources"
"bytefish/facerec" -> "jwyang/face-alignment"
"bytefish/facerec" -> "shanren7/real_time_face_recognition"
"bytefish/facerec" -> "trekhleb/machine-learning-octave" ["e"=1]
"bytefish/facerec" -> "chenriwei/DeepFace"
"bytefish/facerec" -> "tntrung/sdm_face_alignment"
"bytefish/facerec" -> "yulequan/face-alignment-in-3000fps"
"bytefish/facerec" -> "idiap/facereclib" ["e"=1]
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "Confusezius/Deep-Metric-Learning-Baselines"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "kdhht2334/Survey_of_Deep_Metric_Learning"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "Confusezius/ICCV2019_MIC"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "bnu-wangxun/Deep_Metric"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "msight-tech/research-ms-loss"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "dichotomies/proxy-nca"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "KevinMusgrave/powerful-benchmarker"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "msight-tech/research-xbm"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "MLforHealth/S2SD"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "Confusezius/ECCV2020_DiVA_MultiFeature_DML"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "CompVis/metric-learning-divide-and-conquer"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "Confusezius/CVPR2020_PADS"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "jeromerony/dml_cross_entropy"
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" -> "idstcv/SoftTriple"
"ssr197/Fingerprint-Based-Voting-System" -> "faeya/traffic-sign-classification"
"DayBreak-u/darknet_face_with_landmark" -> "DayBreak-u/yolo-face-with-landmark"
"zmurez/MediaPipePyTorch" -> "positive666/mediapipe_PoseEstimation_pytorch"
"zmurez/MediaPipePyTorch" -> "tiqq111/mediapipe_pytorch"
"tensorflower/ArcFace-python" -> "tensorflower/seetaFace-python"
"alfonmedela/triplet-loss-pytorch" -> "Yuol96/pytorch-triplet-loss"
"hollance/BlazeFace-PyTorch" -> "tkat0/PyTorch_BlazeFace"
"hollance/BlazeFace-PyTorch" -> "thepowerfuldeez/facemesh.pytorch"
"hollance/BlazeFace-PyTorch" -> "zmurez/MediaPipePyTorch"
"hollance/BlazeFace-PyTorch" -> "jhb86253817/PIPNet"
"hollance/BlazeFace-PyTorch" -> "zineos/blazeface"
"hollance/BlazeFace-PyTorch" -> "FurkanOM/tf-blazeface"
"hollance/BlazeFace-PyTorch" -> "kentaroy47/BlazeFace_Person.pytorch"
"hollance/BlazeFace-PyTorch" -> "Star-Clouds/CenterFace"
"hollance/BlazeFace-PyTorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"hollance/BlazeFace-PyTorch" -> "stevenyangyj/deep-head-pose-lite"
"hollance/BlazeFace-PyTorch" -> "github-luffy/PFLD_68points_Pytorch"
"hollance/BlazeFace-PyTorch" -> "ibaiGorordo/BlazeFace-TFLite-Inference"
"hollance/BlazeFace-PyTorch" -> "polarisZhao/PFLD-pytorch"
"hollance/BlazeFace-PyTorch" -> "cedriclmenard/irislandmarks.pytorch"
"sulenn/fire-dataset" -> "cair/Fire-Detection-Image-Dataset"
"sulenn/fire-dataset" -> "steffensbola/furg-fire-dataset"
"liqq1228/python-opencv" -> "king-xw/Face_Recogntion"
"sh1r0/caffe-android-lib" -> "sh1r0/caffe-android-demo"
"sh1r0/caffe-android-lib" -> "solrex/caffe-mobile"
"sh1r0/caffe-android-lib" -> "ENCP/CNNdroid"
"sh1r0/caffe-android-lib" -> "zhangqianhui/CnnForAndroid"
"sh1r0/caffe-android-lib" -> "soumith/torch-android" ["e"=1]
"sh1r0/caffe-android-lib" -> "facebookarchive/AICamera"
"sh1r0/caffe-android-lib" -> "Leliana/WhatsThis"
"sh1r0/caffe-android-lib" -> "tzutalin/Android-Object-Detection"
"sh1r0/caffe-android-lib" -> "facebookarchive/fb-caffe-exts" ["e"=1]
"sh1r0/caffe-android-lib" -> "pmgysel/caffe" ["e"=1]
"sh1r0/caffe-android-lib" -> "alexkarargyris/Caffe_OpenCV_Android_App"
"sh1r0/caffe-android-lib" -> "OAID/Caffe-HRT"
"sh1r0/caffe-android-lib" -> "shicai/MobileNet-Caffe" ["e"=1]
"sh1r0/caffe-android-lib" -> "songhan/SqueezeNet-Deep-Compression" ["e"=1]
"sh1r0/caffe-android-lib" -> "Maratyszcza/NNPACK" ["e"=1]
"QuasarLight/Pytorch_Face_Recognition" -> "wujiyang/Face_Pytorch"
"estebanuri/face_recognition" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"estebanuri/face_recognition" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"estebanuri/face_recognition" -> "sirius-ai/MobileFaceNet_TF"
"estebanuri/face_recognition" -> "atharvakale31/Real-Time_Face_Recognition_Android"
"estebanuri/face_recognition" -> "estebanuri/facemaskdetector"
"estebanuri/face_recognition" -> "Malikanhar/Android-Face-Recognition"
"estebanuri/face_recognition" -> "pillarpond/face-recognizer-android"
"estebanuri/face_recognition" -> "abhn/marvel"
"estebanuri/face_recognition" -> "YuGongCharley/MTCNN_facenet_Android"
"idstcv/SoftTriple" -> "dichotomies/proxy-nca"
"idstcv/SoftTriple" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"idstcv/SoftTriple" -> "msight-tech/research-xbm"
"idstcv/SoftTriple" -> "euwern/proxynca_pp"
"idstcv/SoftTriple" -> "suruoxi/DistanceWeightedSampling"
"idstcv/SoftTriple" -> "jeromerony/dml_cross_entropy"
"idstcv/SoftTriple" -> "Confusezius/Deep-Metric-Learning-Baselines"
"idstcv/SoftTriple" -> "leeesangwon/PyTorch-Image-Retrieval" ["e"=1]
"idstcv/SoftTriple" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"idstcv/SoftTriple" -> "msight-tech/research-ms-loss"
"jhb86253817/PIPNet" -> "xlite-dev/torchlm"
"jhb86253817/PIPNet" -> "polarisZhao/PFLD-pytorch"
"jhb86253817/PIPNet" -> "Jiahao-UTS/SLPT-master"
"jhb86253817/PIPNet" -> "HRNet/HRNet-Facial-Landmark-Detection"
"jhb86253817/PIPNet" -> "Hsintao/pfld_106_face_landmarks"
"jhb86253817/PIPNet" -> "choyingw/SynergyNet" ["e"=1]
"jhb86253817/PIPNet" -> "ZhenglinZhou/STAR"
"jhb86253817/PIPNet" -> "thohemp/6DRepNet"
"jhb86253817/PIPNet" -> "cunjian/pytorch_face_landmark"
"jhb86253817/PIPNet" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"jhb86253817/PIPNet" -> "vitoralbiero/img2pose"
"jhb86253817/PIPNet" -> "610265158/face_landmark"
"jhb86253817/PIPNet" -> "andresprados/SPIGA" ["e"=1]
"jhb86253817/PIPNet" -> "nothingelse92/AnchorFace"
"jhb86253817/PIPNet" -> "github-luffy/PFLD_68points_Pytorch"
"polarisZhao/PFLD-pytorch" -> "guoqiangqi/PFLD"
"polarisZhao/PFLD-pytorch" -> "github-luffy/PFLD_68points_Pytorch"
"polarisZhao/PFLD-pytorch" -> "Hsintao/pfld_106_face_landmarks"
"polarisZhao/PFLD-pytorch" -> "cunjian/pytorch_face_landmark"
"polarisZhao/PFLD-pytorch" -> "hanson-young/nniefacelib"
"polarisZhao/PFLD-pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"polarisZhao/PFLD-pytorch" -> "HRNet/HRNet-Facial-Landmark-Detection"
"polarisZhao/PFLD-pytorch" -> "jhb86253817/PIPNet"
"polarisZhao/PFLD-pytorch" -> "wywu/LAB"
"polarisZhao/PFLD-pytorch" -> "610265158/Peppa_Pig_Face_Landmark"
"polarisZhao/PFLD-pytorch" -> "dlunion/DBFace"
"polarisZhao/PFLD-pytorch" -> "Star-Clouds/CenterFace"
"polarisZhao/PFLD-pytorch" -> "610265158/face_landmark"
"polarisZhao/PFLD-pytorch" -> "biubug6/Pytorch_Retinaface"
"polarisZhao/PFLD-pytorch" -> "D-X-Y/landmark-detection"
"VictorLin000/YOLOv3_mask_detect" -> "cansik/yolo-mask-detection"
"Spidy20/face_mask_detection" -> "prajnasb/observations"
"Spidy20/face_mask_detection" -> "chandrikadeb7/Face-Mask-Detection"
"Spidy20/face_mask_detection" -> "mmphego/face_mask_detection_openvino"
"Spidy20/face_mask_detection" -> "gurucharan-marthi/Face-Mask-Detection"
"Spidy20/face_mask_detection" -> "datarootsio/tutorial-face-mask-detection"
"Spidy20/face_mask_detection" -> "aieml/face-mask-detection-keras"
"datarootsio/tutorial-face-mask-detection" -> "datarootsio/ml-skeleton-py"
"datarootsio/tutorial-face-mask-detection" -> "datarootsio/fresh-coffee-listener"
"datarootsio/tutorial-face-mask-detection" -> "datarootsio/databooks"
"gurucharan-marthi/Face-Mask-Detection" -> "prajnasb/observations"
"Karan-Malik/FaceMaskDetector" -> "Karan-Malik/ConvNet" ["e"=1]
"Karan-Malik/FaceMaskDetector" -> "ashutoshvarma/pyxpdf"
"siriusdemon/Build-Your-Own-Face-Model" -> "chenjun2hao/CenterFace.pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "ronghuaiyang/arcface-pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "bleakie/CenterMulti"
"siriusdemon/Build-Your-Own-Face-Model" -> "bubbliiiing/arcface-pytorch" ["e"=1]
"siriusdemon/Build-Your-Own-Face-Model" -> "Star-Clouds/CenterFace"
"siriusdemon/Build-Your-Own-Face-Model" -> "dlunion/DBFace"
"siriusdemon/Build-Your-Own-Face-Model" -> "wujiyang/Face_Pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "hanson-young/nniefacelib"
"siriusdemon/Build-Your-Own-Face-Model" -> "polarisZhao/PFLD-pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "TreB1eN/InsightFace_Pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "biubug6/Face-Detector-1MB-with-landmark"
"siriusdemon/Build-Your-Own-Face-Model" -> "JDAI-CV/FaceX-Zoo"
"siriusdemon/Build-Your-Own-Face-Model" -> "MuggleWang/CosFace_pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "QuasarLight/Pytorch_Face_Recognition"
"siriusdemon/Build-Your-Own-Face-Model" -> "1996scarlet/ArcFace-Multiplex-Recognition"
"cvtower/seesawfacenet_pytorch" -> "cvtower/SeesawNet_pytorch"
"cvtower/seesawfacenet_pytorch" -> "pshashk/seesaw-facenet"
"cvtower/seesawfacenet_pytorch" -> "cvtower/FASNet"
"shantnu/FaceDetect" -> "shantnu/Webcam-Face-Detect"
"shantnu/FaceDetect" -> "informramiz/opencv-face-recognition-python"
"shantnu/FaceDetect" -> "mrnugget/opencv-haar-classifier-training" ["e"=1]
"shantnu/FaceDetect" -> "ITCoders/Human-detection-and-Tracking" ["e"=1]
"shantnu/FaceDetect" -> "bytefish/facerec"
"shantnu/FaceDetect" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"shantnu/FaceDetect" -> "amineHorseman/facial-expression-recognition-svm" ["e"=1]
"shantnu/FaceDetect" -> "shanren7/real_time_face_recognition"
"shantnu/FaceDetect" -> "Skuldur/facenet-face-recognition"
"shantnu/FaceDetect" -> "ydwen/caffe-face"
"shantnu/FaceDetect" -> "guoyilin/FaceDetection_CNN"
"chencodeX/triplet-loss-pytorch" -> "WangXiaoCao/Triplet-loss-image-embedding-extraction"
"chencodeX/triplet-loss-pytorch" -> "nitzankatz/fine-grained-few-shot-classification"
"shantnu/Webcam-Face-Detect" -> "shantnu/FaceDetect"
"sherpaai/Sherpa.ai-Federated-Learning-Framework" -> "ari-dasci/S-TSFE-DL"
"CodingChaozhang/yolo3-keras-breath_mask" -> "ztjryg4/MaskDetect"
"CodingChaozhang/yolo3-keras-breath_mask" -> "Bil369/MaskDetect-YOLOv4-PyTorch"
"linserSnow/PDSN" -> "Baojin-Huang/Webface-OCC"
"linserSnow/PDSN" -> "haibo-qiu/FROM"
"linserSnow/PDSN" -> "yubangji123/Interpret_FR"
"linserSnow/PDSN" -> "WeitaoVan/faceID"
"Single430/FaceLandmark1000" -> "Hsintao/pfld_106_face_landmarks"
"Single430/FaceLandmark1000" -> "hzq-zjm/FaceDetect-FaceLandmark"
"StanislasBertrand/RetinaFace-tf2" -> "peteryuX/retinaface-tf2"
"StanislasBertrand/RetinaFace-tf2" -> "610265158/faceboxes-tensorflow"
"StanislasBertrand/RetinaFace-tf2" -> "StanislasBertrand/UniversalFaceRecog-TF2"
"WANZIzZ/RowingView" -> "xingxingxiaoyu/MyView"
"WANZIzZ/RowingView" -> "kangdp/StarBarcode"
"sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition" -> "shubamwalia/Face-Recognition-Attendance-System"
"sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition" -> "shashankch292/Face-Detection-Recognition-Based-Attendance-System"
"sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition" -> "codeglitchz/attendance-system"
"hukkelas/DSFD-Pytorch-Inference" -> "lijiannuist/lightDSFD"
"hukkelas/DSFD-Pytorch-Inference" -> "610265158/DSFD-tensorflow"
"hukkelas/DSFD-Pytorch-Inference" -> "yxlijun/DSFD.pytorch"
"hukkelas/DSFD-Pytorch-Inference" -> "elliottzheng/face-detection"
"hukkelas/DSFD-Pytorch-Inference" -> "peteryuX/retinaface-tf2"
"ChargedMonk/Social-Distancing-using-YOLOv5" -> "deepak112/Social-Distancing-AI"
"Aristochi/Dangerous_driving_behavior_detection" -> "DohaerisT/DangerousDrivingDetector"
"Aristochi/Dangerous_driving_behavior_detection" -> "JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection"
"Aristochi/Dangerous_driving_behavior_detection" -> "Aristochi/MTCNN_CNN_DangerDrivingDetection"
"Aristochi/Dangerous_driving_behavior_detection" -> "PengfeiM/Fatigue-Driven-Detection-Based-on-CNN"
"Aristochi/Dangerous_driving_behavior_detection" -> "KyrieIrv11ng/Yolov5-driving-detection"
"Aristochi/Dangerous_driving_behavior_detection" -> "omnigeeker/mlnd_distracted_driver_detection"
"DohaerisT/DangerousDrivingDetector" -> "Aristochi/Dangerous_driving_behavior_detection"
"DohaerisT/DangerousDrivingDetector" -> "Dou-noki/Driver-detection-based-on-OpenPose-and-RandomForest"
"DohaerisT/DangerousDrivingDetector" -> "KyrieIrv11ng/Yolov5-driving-detection"
"DohaerisT/DangerousDrivingDetector" -> "Aristochi/MTCNN_CNN_DangerDrivingDetection"
"DohaerisT/DangerousDrivingDetector" -> "omnigeeker/mlnd_distracted_driver_detection"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "estebanuri/face_recognition"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "shubham0204/OnDevice-Face-Recognition-Android"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "atharvakale31/Real-Time_Face_Recognition_Android"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "irhammuch/android-face-recognition"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "Lauszus/FaceRecognitionApp"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "pillarpond/face-recognizer-android"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "shubham0204/Age-Gender_Estimation_TF-Android"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "Malikanhar/Android-Face-Recognition"
"bcsiriuschen/High-Dimensional-LBP" -> "bcsiriuschen/CARC"
"bcsiriuschen/High-Dimensional-LBP" -> "berak/uniform-lbp"
"CVUsers/Smoke-Detect-by-YoloV5" -> "gengyanlei/fire-smoke-detect-yolov4"
"CVUsers/Smoke-Detect-by-YoloV5" -> "gengyanlei/reflective-clothes-detect-yolov5"
"CVUsers/Smoke-Detect-by-YoloV5" -> "CVUsers/Fire-Detect-by-YoloV5"
"CVUsers/Smoke-Detect-by-YoloV5" -> "PeterH0323/Smart_Construction"
"CVUsers/Smoke-Detect-by-YoloV5" -> "njvisionpower/Safety-Helmet-Wearing-Dataset"
"CVUsers/Smoke-Detect-by-YoloV5" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"CVUsers/Smoke-Detect-by-YoloV5" -> "RichardoMrMu/yolov5-smoke-detection-python"
"CVUsers/Smoke-Detect-by-YoloV5" -> "ZJU-lishuang/yolov5_prune" ["e"=1]
"CVUsers/Smoke-Detect-by-YoloV5" -> "insigh1/Interactive_ABCs_with_American_Sign_Language_using_Yolov5"
"CVUsers/Smoke-Detect-by-YoloV5" -> "biubug6/Face-Detector-1MB-with-landmark"
"CVUsers/Smoke-Detect-by-YoloV5" -> "DataXujing/YOLO-v5" ["e"=1]
"CVUsers/Smoke-Detect-by-YoloV5" -> "Syencil/tensorRT" ["e"=1]
"CVUsers/Smoke-Detect-by-YoloV5" -> "tobybreckon/fire-detection-cnn"
"CVUsers/Smoke-Detect-by-YoloV5" -> "hhaAndroid/yolov5-comment" ["e"=1]
"CVUsers/Smoke-Detect-by-YoloV5" -> "deepcam-cn/yolov5-face"
"maxs-kan/InterpretableNeuroDL" -> "neeek2303/Depth-Enhancement-and-Super-Resolution"
"maxs-kan/InterpretableNeuroDL" -> "neeek2303/Leaf-diseases-segmentation"
"maxs-kan/InterpretableNeuroDL" -> "neeek2303/Lenta-Hackathon"
"neeek2303/Leaf-diseases-segmentation" -> "neeek2303/Depth-Enhancement-and-Super-Resolution"
"neeek2303/Leaf-diseases-segmentation" -> "neeek2303/Lenta-Hackathon"
"neeek2303/Leaf-diseases-segmentation" -> "maxs-kan/InterpretableNeuroDL"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" ["e"=1]
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "sirius-ai/MobileFaceNet_TF"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "estebanuri/face_recognition"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "jiangxiluning/facenet_mtcnn_to_mobile"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "vcvycy/MTCNN4Android"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "chentyjpm/InsightFaceRecognition_Demo_AndroidNCNN"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "minivision-ai/Silent-Face-Anti-Spoofing-APK" ["e"=1]
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "atharvakale31/Real-Time_Face_Recognition_Android"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "pillarpond/face-recognizer-android"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "NaumanHSA/Android-Face-Recognition-MTCNN-FaceNet"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "JinghuiZhou/awesome_face_antispoofing" ["e"=1]
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "SeuTao/FaceBagNet" ["e"=1]
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "dinhquy94/face-antispoofing-using-mobileNet" ["e"=1]
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "Star-Clouds/CenterFace"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "becauseofAI/lffd-pytorch"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "JDAI-CV/centerX" ["e"=1]
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "chenjun2hao/CenterFace.pytorch"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "lucasjinreal/CenterNet_Pro_Max" ["e"=1]
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "biubug6/Face-Detector-1MB-with-landmark"
"delphifirst/FaceX" -> "jwyang/face-alignment"
"delphifirst/FaceX" -> "sai-bi/FaceAlignment"
"delphifirst/FaceX" -> "yulequan/face-alignment-in-3000fps"
"delphifirst/FaceX" -> "golnazghiasi/hpm-detection-code"
"Abhinav1004/Distracted-Driver-Detection" -> "Apoorvajasti/Distracted-Driver-Detection"
"Abhinav1004/Distracted-Driver-Detection" -> "MLjian/PyTorch_DistractedDriverDetection"
"jackfrost1411/fire-detection" -> "bubblebeam/Inferno-Realtime-Fire-detection-using-CNNs"
"fabianp/mord" -> "fabianp/minirank"
"fabianp/mord" -> "ayrna/orca"
"fabianp/mord" -> "EthanRosenthal/spacecutter"
"fabianp/mord" -> "Shopify/bevel"
"abd-shoumik/Social-distance-detection" -> "basileroth75/covid-social-distancing-detection"
"olojuwin/facerecognize-for-mobile-phone" -> "liuyuisanai/trojans-face-recognizer"
"olojuwin/facerecognize-for-mobile-phone" -> "zma-c-137/VarGFaceNet"
"olojuwin/facerecognize-for-mobile-phone" -> "bleakie/MaskInsightface"
"olojuwin/facerecognize-for-mobile-phone" -> "deepcam-cn/Face-Anti-spoofing.pytorch" ["e"=1]
"olojuwin/facerecognize-for-mobile-phone" -> "Star-Clouds/FRDA"
"olojuwin/facerecognize-for-mobile-phone" -> "cypw/MXNet2Caffe"
"olojuwin/facerecognize-for-mobile-phone" -> "MirrorYuChen/ncnn_example"
"olojuwin/facerecognize-for-mobile-phone" -> "JiajiongCao/CELEB-500K"
"olojuwin/facerecognize-for-mobile-phone" -> "KaleidoZhouYN/mobilefacenet-caffe"
"olojuwin/facerecognize-for-mobile-phone" -> "SyGoing/LFFD-with-ncnn"
"olojuwin/facerecognize-for-mobile-phone" -> "zuoqing1988/train-mtcnn"
"olojuwin/facerecognize-for-mobile-phone" -> "xialuxi/arcface-caffe"
"olojuwin/facerecognize-for-mobile-phone" -> "Charrin/RetinaFace-Cpp"
"olojuwin/facerecognize-for-mobile-phone" -> "blankWorld/MTCNN-Accelerate-Onet"
"olojuwin/facerecognize-for-mobile-phone" -> "moli232777144/mobilefacenet-mxnet"
"sh1r0/caffe-android-demo" -> "sh1r0/caffe-android-lib"
"sh1r0/caffe-android-demo" -> "solrex/caffe-mobile"
"sh1r0/caffe-android-demo" -> "zhangqianhui/CnnForAndroid"
"sh1r0/caffe-android-demo" -> "Leliana/WhatsThis"
"sh1r0/caffe-android-demo" -> "facebookarchive/AICamera"
"sh1r0/caffe-android-demo" -> "ENCP/CNNdroid"
"sh1r0/caffe-android-demo" -> "alexkarargyris/Caffe_OpenCV_Android_App"
"sh1r0/caffe-android-demo" -> "tzutalin/Android-Object-Detection"
"HouchangX-AI/Helmet-Detection" -> "dengfenglai321/YOLOv4-Hat-detection"
"HouchangX-AI/Helmet-Detection" -> "DataXujing/Faster-R-CNN-Keras"
"HouchangX-AI/Helmet-Detection" -> "HouchangX-AI/Helmet-Detection-Track"
"AyazSaiyed/Helmet-Detection-" -> "BlcaKHat/yolov3-Helmet-Detection"
"juan-csv/emotion_detection" -> "juan-csv/face-recognition"
"juan-csv/emotion_detection" -> "juan-csv/profile_detection"
"CodingChaozhang/YOLOV3_Fire_Detection" -> "markgao-916/yolov3_fire_detection"
"CodingChaozhang/YOLOV3_Fire_Detection" -> "zk2ly/Smoke_Fire_Detection"
"juan-csv/face_recognition_occlusion" -> "JavisPeng/FaceRecognitionWithMask"
"juan-csv/face_recognition_occlusion" -> "broutonlab/face-id-with-medical-masks"
"juan-csv/face_recognition_occlusion" -> "susithrj/MaskNet-Occlusion-Invariant-Face-Recognition-System"
"juan-csv/face_recognition_occlusion" -> "levanquoc/masked-face-recognition"
"juan-csv/face_recognition_occlusion" -> "ZouJiu1/Mask_face_recognitionZ"
"juan-csv/face_recognition_occlusion" -> "Nagasai524/Masked-Face-Recognition-using-Facenet"
"qaz734913414/Ncnn_FaceTrack" -> "zeusees/HyperFT"
"qaz734913414/Ncnn_FaceTrack" -> "xiangdeyizhang/FaceTrack_ncnn_HyperFT"
"qaz734913414/Ncnn_FaceTrack" -> "MirrorYuChen/ncnn_example"
"qaz734913414/Ncnn_FaceTrack" -> "szad670401/Fast-MTCNN"
"qaz734913414/Ncnn_FaceTrack" -> "HansRen1024/Face-Tracking-Using-CNN-and-Optical-Flow"
"zma-c-137/VarGFaceNet" -> "liuyuisanai/trojans-face-recognizer"
"zma-c-137/VarGFaceNet" -> "olojuwin/facerecognize-for-mobile-phone"
"zma-c-137/VarGFaceNet" -> "xiaoboCASIA/SV-X-Softmax"
"zma-c-137/VarGFaceNet" -> "bleakie/MaskInsightface"
"zma-c-137/VarGFaceNet" -> "Star-Clouds/CenterFace"
"zma-c-137/VarGFaceNet" -> "cvtower/seesawfacenet_pytorch"
"zma-c-137/VarGFaceNet" -> "seasonSH/DocFace"
"zma-c-137/VarGFaceNet" -> "GarrickLin/MXNet2Caffe"
"zma-c-137/VarGFaceNet" -> "zhanglaplace/MobileFaceNet"
"zma-c-137/VarGFaceNet" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"zma-c-137/VarGFaceNet" -> "XiaohangZhan/face_recognition_framework"
"zma-c-137/VarGFaceNet" -> "becauseofAI/MobileFace" ["e"=1]
"zma-c-137/VarGFaceNet" -> "HuangYG123/CurricularFace"
"zma-c-137/VarGFaceNet" -> "bruinxiong/Modified-CRUNet-and-Residual-Attention-Network.mxnet"
"zma-c-137/VarGFaceNet" -> "SeuTao/FaceBagNet" ["e"=1]
"AnthonyF333/FaceLandmark_PFLD_UltraLight" -> "AnthonyF333/PFLD_GhostOne"
"AnthonyF333/FaceLandmark_PFLD_UltraLight" -> "github-luffy/PFLD_68points_Pytorch"
"AnthonyF333/FaceLandmark_PFLD_UltraLight" -> "Hsintao/pfld_106_face_landmarks"
"DataXujing/Faster-R-CNN-Keras" -> "dengfenglai321/YOLOv4-Hat-detection"
"DataXujing/Faster-R-CNN-Keras" -> "HouchangX-AI/Helmet-Detection"
"DataXujing/Faster-R-CNN-Keras" -> "DataXujing/YOLO-V3-Tensorflow"
"DataXujing/Faster-R-CNN-Keras" -> "zhhiyuan/yolov5"
"DataXujing/Faster-R-CNN-Keras" -> "HouchangX-AI/Helmet-Detection-Track"
"Ontheway361/dul-pytorch" -> "seasonSH/Probabilistic-Face-Embeddings"
"Ontheway361/dul-pytorch" -> "MouxiaoHuang/DUL"
"Ontheway361/dul-pytorch" -> "Ontheway361/pfe-pytorch"
"Ontheway361/dul-pytorch" -> "MathsShen/SCF" ["e"=1]
"Ontheway361/dul-pytorch" -> "SeungyounShin/GroupFace"
"IIT-PAVIS/Social-Distancing" -> "deepak112/Social-Distancing-AI"
"IIT-PAVIS/Social-Distancing" -> "IIT-PAVIS/AI-Thermometer"
"IIT-PAVIS/Social-Distancing" -> "parthsompura/Social-Distancing-Detector"
"IIT-PAVIS/Social-Distancing" -> "aqeelanwar/SocialDistancingAI"
"IIT-PAVIS/Social-Distancing" -> "Ank-Cha/Social-Distancing-Analyser-COVID-19"
"midasklr/FireSmokeDetectionByEfficientNet" -> "POLARBEARWYY/Smoke-Detection"
"midasklr/FireSmokeDetectionByEfficientNet" -> "xjg0124/Fire-and-Smoke-Detection"
"midasklr/FireSmokeDetectionByEfficientNet" -> "RashadGarayev/FireDetection"
"xiaoxiaoazhang/SeetaFace2AndroidDemo" -> "myml666/Seetaface2"
"xiaoxiaoazhang/SeetaFace2AndroidDemo" -> "hzy3774/SeetaFace2Android"
"yinguobing/facial-landmark-detection-hrnet" -> "yinguobing/face-mesh-generator"
"yinguobing/facial-landmark-detection-hrnet" -> "yinguobing/facial-landmark-dataset"
"yinguobing/facial-landmark-detection-hrnet" -> "yinguobing/cnn-facial-landmark"
"yinguobing/facial-landmark-detection-hrnet" -> "songhengyang/face_landmark_factory"
"yinguobing/facial-landmark-detection-hrnet" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"cleardusk/MFR" -> "cleardusk/MeGlass"
"cleardusk/MFR" -> "HuangYG123/CurricularFace"
"jeromerony/dml_cross_entropy" -> "euwern/proxynca_pp"
"jeromerony/dml_cross_entropy" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"jeromerony/dml_cross_entropy" -> "dichotomies/proxy-nca"
"jeromerony/dml_cross_entropy" -> "navervision/proxy-synthesis"
"prasad-kumkar/ai-driver-safety" -> "parai/dms"
"prasad-kumkar/ai-driver-safety" -> "e-candeloro/Driver-State-Detection"
"prasad-kumkar/ai-driver-safety" -> "prashantdukecyfi/Driver-monitoring-system-for-automobile-using-machine-learning-and-OpenCV"
"prasad-kumkar/ai-driver-safety" -> "bnair2001/Driver-monitoring-system"
"prasad-kumkar/ai-driver-safety" -> "muskanvk/Drowsiness-Detection-System-for-Drivers"
"prasad-kumkar/ai-driver-safety" -> "rubyruins/driver-drowsiness-detection"
"seetafaceengine/SeetaFaceTutorial" -> "seetafaceengine/FaceRecognizer"
"xiangdeyizhang/FaceTrack_ncnn_HyperFT" -> "qaz734913414/Ncnn_FaceTrack"
"xiangdeyizhang/FaceTrack_ncnn_HyperFT" -> "zeusees/HyperFT"
"xiangdeyizhang/FaceTrack_ncnn_HyperFT" -> "taylorguo/MTCNN_Landmark106"
"apxlwl/MNN-yolov3" -> "SyGoing/LFFD-MNN"
"becauseofAI/lffd-pytorch" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"becauseofAI/lffd-pytorch" -> "chenjun2hao/CenterFace.pytorch"
"Aristochi/MTCNN_CNN_DangerDrivingDetection" -> "Aristochi/Dangerous_driving_behavior_detection"
"ZouJiu1/Mask_face_recognitionZ" -> "HouchangX-AI/Mask-face-recognition"
"SamYuen101234/Masked_Face_Recognition" -> "fdbtrs/Masked-Face-Recognition-KD"
"SamYuen101234/Masked_Face_Recognition" -> "sachith500/MaskedFaceRepresentation"
"SamYuen101234/Masked_Face_Recognition" -> "levanquoc/masked-face-recognition"
"SamYuen101234/Masked_Face_Recognition" -> "fdbtrs/Self-restrained-Triplet-Loss"
"SamYuen101234/Masked_Face_Recognition" -> "leowjs/Masked-Face-Recognition"
"SamYuen101234/Masked_Face_Recognition" -> "ZouJiu1/Mask_face_recognitionZ"
"SamYuen101234/Masked_Face_Recognition" -> "jerryuhoo/Masked-Face-Recognition"
"SamYuen101234/Masked_Face_Recognition" -> "JavisPeng/FaceRecognitionWithMask"
"SamYuen101234/Masked_Face_Recognition" -> "juan-csv/face_recognition_occlusion"
"SamYuen101234/Masked_Face_Recognition" -> "aqeelanwar/MaskTheFace"
"SamYuen101234/Masked_Face_Recognition" -> "Nagasai524/Masked-Face-Recognition-using-Facenet"
"Confusezius/ECCV2020_DiVA_MultiFeature_DML" -> "MLforHealth/S2SD"
"liuyuisanai/trojans-face-recognizer" -> "zma-c-137/VarGFaceNet"
"liuyuisanai/trojans-face-recognizer" -> "olojuwin/facerecognize-for-mobile-phone"
"liuyuisanai/trojans-face-recognizer" -> "bleakie/MaskInsightface"
"liuyuisanai/trojans-face-recognizer" -> "SomeoneDistant/Lightweight-Face-Recognition"
"ChenyanWu/MEBOW" -> "hnuzhy/JointBDOE"
"Media-Smart/vedaseg" -> "Media-Smart/volksdep"
"Media-Smart/vedaseg" -> "Media-Smart/vedacls"
"Media-Smart/vedaseg" -> "Media-Smart/volkscv"
"Media-Smart/vedaseg" -> "Media-Smart/cheetahinfer"
"Media-Smart/vedaseg" -> "Media-Smart/cls2det"
"Media-Smart/vedaseg" -> "Media-Smart/vedastr" ["e"=1]
"Media-Smart/vedaseg" -> "LikeLy-Journey/SegmenTron" ["e"=1]
"Media-Smart/vedaseg" -> "Media-Smart/flexinfer"
"Media-Smart/vedaseg" -> "Media-Smart/volkstuner"
"Media-Smart/vedaseg" -> "yu-changqian/BiSeNet"
"Media-Smart/vedaseg" -> "mileistone/study_resources"
"Media-Smart/vedaseg" -> "lxtGH/Fast_Seg" ["e"=1]
"StevenBanama/C3AE" -> "vicwer/C3AE_Age_Estimation"
"MasterBin-IIAU/CSA" -> "tsingqguo/AttackTracker"
"MasterBin-IIAU/CSA" -> "VISION-SJTU/IoUattack"
"MasterBin-IIAU/CSA" -> "huuuuusy/videocube-toolkit"
"shuguoli68/LiSeetaFace2" -> "shuguoli68/FaceDemo"
"shuguoli68/LiSeetaFace2" -> "myml666/Seetaface2"
"Apoorvajasti/Distracted-Driver-Detection" -> "Abhinav1004/Distracted-Driver-Detection"
"jianzhnie/S3FD_pytorch" -> "jianzhnie/pyramidbox_pytorch"
"jianzhnie/S3FD_pytorch" -> "jianzhnie/GroupNorm-MXNet"
"yinguobing/face-mesh-generator" -> "yinguobing/facial-landmark-detection-hrnet"
"yinguobing/face-mesh-generator" -> "yinguobing/facial-landmark-dataset"
"KeqiangSun/FAB" -> "TheSouthFrog/stylealign"
"yinguobing/facial-landmark-dataset" -> "yinguobing/facial-landmark-detection-hrnet"
"yinguobing/facial-landmark-dataset" -> "yinguobing/face-mesh-generator"
"neeek2303/Lenta-Hackathon" -> "neeek2303/Leaf-diseases-segmentation"
"neeek2303/Lenta-Hackathon" -> "neeek2303/Depth-Enhancement-and-Super-Resolution"
"neeek2303/Lenta-Hackathon" -> "maxs-kan/InterpretableNeuroDL"
"Media-Smart/cls2det" -> "Media-Smart/vedacls"
"Media-Smart/cls2det" -> "Media-Smart/volkstuner"
"Media-Smart/volkstuner" -> "Media-Smart/vedacls"
"Media-Smart/volkstuner" -> "Media-Smart/cls2det"
"Media-Smart/volksdep" -> "Media-Smart/flexinfer"
"Media-Smart/volksdep" -> "Media-Smart/cheetahinfer"
"Media-Smart/volksdep" -> "Media-Smart/vedacls"
"Media-Smart/volksdep" -> "Media-Smart/vedaseg"
"Media-Smart/volksdep" -> "Media-Smart/volkscv"
"Media-Smart/volksdep" -> "Media-Smart/vedastr" ["e"=1]
"Media-Smart/volksdep" -> "Media-Smart/volkstuner"
"Media-Smart/volksdep" -> "Media-Smart/cls2det"
"Media-Smart/volksdep" -> "Media-Smart/vedatad"
"Media-Smart/volksdep" -> "Media-Smart/vedadet"
"Media-Smart/vedacls" -> "Media-Smart/volkstuner"
"Media-Smart/vedacls" -> "Media-Smart/cls2det"
"Media-Smart/vedacls" -> "Media-Smart/cheetahinfer"
"Media-Smart/cheetahinfer" -> "Media-Smart/vedacls"
"Media-Smart/cheetahinfer" -> "Media-Smart/flexinfer"
"Media-Smart/cheetahinfer" -> "Media-Smart/volkstuner"
"Media-Smart/cheetahinfer" -> "Media-Smart/cls2det"
"Media-Smart/cheetahinfer" -> "Media-Smart/volkscv"
"Media-Smart/flexinfer" -> "Media-Smart/cheetahinfer"
"Media-Smart/flexinfer" -> "Media-Smart/vedacls"
"Media-Smart/flexinfer" -> "Media-Smart/volkstuner"
"Media-Smart/flexinfer" -> "Media-Smart/volksdep"
"Media-Smart/flexinfer" -> "Media-Smart/cls2det"
"Media-Smart/flexinfer" -> "Media-Smart/volkscv"
"Media-Smart/volkscv" -> "Media-Smart/vedacls"
"Media-Smart/volkscv" -> "Media-Smart/volkstuner"
"Media-Smart/volkscv" -> "Media-Smart/cls2det"
"Media-Smart/volkscv" -> "Media-Smart/cheetahinfer"
"Media-Smart/volkscv" -> "Media-Smart/flexinfer"
"Media-Smart/SKU110K-DenseDet" -> "Media-Smart/volkstuner"
"Media-Smart/SKU110K-DenseDet" -> "Media-Smart/vedacls"
"Media-Smart/SKU110K-DenseDet" -> "Media-Smart/cls2det"
"Media-Smart/SKU110K-DenseDet" -> "Media-Smart/cheetahinfer"
"Media-Smart/SKU110K-DenseDet" -> "tyomj/product_detection" ["e"=1]
"Media-Smart/SKU110K-DenseDet" -> "Media-Smart/volkscv"
"Media-Smart/SKU110K-DenseDet" -> "Media-Smart/flexinfer"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "dichotomies/proxy-nca"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "tjddus9597/LabelRelaxation-CVPR21" ["e"=1]
"tjddus9597/Proxy-Anchor-CVPR2020" -> "tjddus9597/Beyond-Binary-Supervision-CVPR19" ["e"=1]
"tjddus9597/Proxy-Anchor-CVPR2020" -> "msight-tech/research-ms-loss"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "jeromerony/dml_cross_entropy"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "idstcv/SoftTriple"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "KevinMusgrave/powerful-benchmarker"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "Confusezius/Deep-Metric-Learning-Baselines"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "kdhht2334/Survey_of_Deep_Metric_Learning"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "sohyun-l/fifo" ["e"=1]
"tjddus9597/Proxy-Anchor-CVPR2020" -> "msight-tech/research-xbm"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "euwern/proxynca_pp"
"tjddus9597/Proxy-Anchor-CVPR2020" -> "tjddus9597/HIER-CVPR23" ["e"=1]
"tjddus9597/Proxy-Anchor-CVPR2020" -> "juhongm999/hpf" ["e"=1]
"ztjryg4/MaskDetect" -> "CodingChaozhang/yolo3-keras-breath_mask"
"nizhib/pytorch-insightface" -> "foamliu/InsightFace-PyTorch"
"msight-tech/research-xbm" -> "msight-tech/research-ms-loss"
"msight-tech/research-xbm" -> "idstcv/SoftTriple"
"msight-tech/research-xbm" -> "Confusezius/Deep-Metric-Learning-Baselines"
"msight-tech/research-xbm" -> "bnu-wangxun/Deep_Metric"
"msight-tech/research-xbm" -> "tjddus9597/Proxy-Anchor-CVPR2020"
"msight-tech/research-xbm" -> "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch"
"msight-tech/research-xbm" -> "yxgeee/SpCL" ["e"=1]
"msight-tech/research-xbm" -> "zkcys001/UDAStrongBaseline" ["e"=1]
"msight-tech/research-xbm" -> "alibaba-edu/Ranking-based-Instance-Selection"
"msight-tech/research-xbm" -> "jeromerony/dml_cross_entropy"
"msight-tech/research-xbm" -> "KevinMusgrave/powerful-benchmarker"
"msight-tech/research-xbm" -> "whut2962575697/naic_reid" ["e"=1]
"msight-tech/research-xbm" -> "heshuting555/NAIC_Person_ReID_DMT" ["e"=1]
"msight-tech/research-xbm" -> "Andrew-Brown1/Smooth_AP" ["e"=1]
"oukohou/SSR_Net_Pytorch" -> "chyueG/C3AE-pytorch"
"oukohou/SSR_Net_Pytorch" -> "CrazySummerday/SSR-Net"
"hikariming/virus-mask-dataset" -> "huxian123/mask_detecting"
"dodona-edu/dodona" -> "dodona-edu/universal-judge"
"dodona-edu/dodona" -> "dodona-edu/papyros"
"elliottzheng/AdaptiveWingLoss" -> "facial-landmarks-localization-challenge/Look_At_Boundary_PyTorch"
"ck37/coral-ordinal" -> "GarrettJenkinson/condor_tensorflow"
"serengil/deepface-api" -> "serengil/lightface"
"serengil/deepface-api" -> "serengil/neural-networks"
"dengfenglai321/YOLOv4-Hat-detection" -> "zhhiyuan/yolov5"
"dengfenglai321/YOLOv4-Hat-detection" -> "DataXujing/Faster-R-CNN-Keras"
"dengfenglai321/YOLOv4-Hat-detection" -> "HouchangX-AI/Helmet-Detection"
"dengfenglai321/YOLOv4-Hat-detection" -> "zyl067459/yolov3"
"basileroth75/covid-social-distancing-detection" -> "deepak112/Social-Distancing-AI"
"basileroth75/covid-social-distancing-detection" -> "dongfang-steven-yang/social-distancing-monitoring"
"basileroth75/covid-social-distancing-detection" -> "aqeelanwar/SocialDistancingAI"
"FurkanOM/tf-blazeface" -> "vietanhdev/blazeface_keras"
"foamliu/MobileFaceNet" -> "Xiaoccer/MobileFaceNet_Pytorch"
"foamliu/MobileFaceNet" -> "xuexingyu24/MobileFaceNet_Tutorial_Pytorch"
"sbdcv/sbd_mask" -> "olojuwin/facerecognize-for-mobile-phone"
"sbdcv/sbd_mask" -> "bleakie/MaskInsightface"
"SeungyounShin/GroupFace" -> "leoluopy/GroupFacePytorch"
"haoosz/FFR-Net" -> "fdbtrs/Masked-Face-Recognition-KD"
"TheSouthFrog/stylealign" -> "protossw512/AdaptiveWingLoss"
"TheSouthFrog/stylealign" -> "KeqiangSun/FAB"
"TheSouthFrog/stylealign" -> "610265158/face_landmark"
"TheSouthFrog/stylealign" -> "TencentYoutuResearch/FaceAlignment-FHR" ["e"=1]
"TheSouthFrog/stylealign" -> "D-X-Y/landmark-detection"
"TheSouthFrog/stylealign" -> "wywu/ReenactGAN" ["e"=1]
"deepak112/Social-Distancing-AI" -> "aqeelanwar/SocialDistancingAI"
"deepak112/Social-Distancing-AI" -> "IIT-PAVIS/Social-Distancing"
"deepak112/Social-Distancing-AI" -> "basileroth75/covid-social-distancing-detection"
"deepak112/Social-Distancing-AI" -> "ChargedMonk/Social-Distancing-using-YOLOv5"
"juan-csv/profile_detection" -> "juan-csv/emotion_detection"
"juan-csv/profile_detection" -> "juan-csv/eye_blink_detection"
"juan-csv/profile_detection" -> "juan-csv/Architecture-for-real-time-video-streaming-analytics"
"juan-csv/profile_detection" -> "juan-csv/face-recognition"
"Star-Clouds/FRDA" -> "olojuwin/facerecognize-for-mobile-phone"
"Star-Clouds/FRDA" -> "610265158/Peppa_Pig_Face_Landmark"
"Star-Clouds/FRDA" -> "chenjun2hao/CenterFace.pytorch"
"Star-Clouds/FRDA" -> "bleakie/MaskInsightface"
"Star-Clouds/FRDA" -> "Hsintao/pfld_106_face_landmarks"
"myml666/Seetaface2" -> "shuguoli68/LiSeetaFace2"
"pshashk/seesaw-facenet" -> "cvtower/SeesawNet_pytorch"
"grigorisg9gr/polynomial_nets" -> "pterhoer/QMagFace"
"grigorisg9gr/polynomial_nets" -> "fdbtrs/ElasticFace"
"grigorisg9gr/polynomial_nets" -> "zma-c-137/VarGFaceNet"
"LcenArthas/CCF-BDCI2019-Multi-person-Face-Recognition-Competition-Baseline" -> "themostnewone/2019ccf"
"SyGoing/LFFD-MNN" -> "SyGoing/LFFD-with-ncnn"
"euwern/proxynca_pp" -> "jeromerony/dml_cross_entropy"
"serengil/h2o-ai-101" -> "serengil/neural-networks"
"joshuajss/RTAA" -> "VISION-SJTU/IoUattack"
"kangdp/KPermission" -> "kangdp/TptDialSample"
"ifeherva/DMLPlayground" -> "Confusezius/CVPR2020_PADS"
"chentyjpm/InsightFaceRecognition_Demo_AndroidNCNN" -> "zhaotun/RetinaFace_NCNN_Android_demo"
"xuexingyu24/Pruning_MTCNN_MobileFaceNet_Using_Pytorch" -> "xuexingyu24/MTCNN_Tutorial"
"ChrisYang/RCPR" -> "ChrisYang/TIFfacealignment"
"minus31/BlazeFace" -> "dl-maxwang/blazeface-tensorflow"
"dl-maxwang/blazeface-tensorflow" -> "shanglianlm0525/BlazeFace"
"markgao-916/yolov3_fire_detection" -> "amirsultan/fireDetection"
"jianzhnie/pyramidbox_pytorch" -> "jianzhnie/S3FD_pytorch"
"KevinMusgrave/easy-module-attribute-getter" -> "KevinMusgrave/record-keeper"
"KevinMusgrave/record-keeper" -> "KevinMusgrave/easy-module-attribute-getter"
"HouchangX-AI/Mask-face-recognition" -> "ZouJiu1/Mask_face_recognitionZ"
"mileistone/vedaseg" -> "Media-Smart/vedacls"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "kmhmubin/Face-Recognition-Attendance-System"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "venugopalkadamba/Face_Verification_based_Attendance_system"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "Patelrahul4884/Attendance-Management-system-using-face-recognition"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "imshreyshah/Attendance-System-Face-Recognition"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "Pragya9ps/Face-Recognition-Attendance-System"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "sharmaji27/face-recognition-based-attendance-system"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "Waseemali11/Python-FYP-Face-Recognition-Attendence-System"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "dhhruv/Contactless-Attendance-System"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "sonu275981/Face-Recognition-Attendance-System"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "prathmachowksey/Attendance-System-Face-Recognition"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "staticshreyas/Attendance-Portal" ["e"=1]
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "eai2x/Face-Recognition-Class-Attendance-System"
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" -> "Spidy20/Attendace_management_system"
"xialuxi/yolov5_face_landmark" -> "xialuxi/yolov5-car-plate"
"xialuxi/yolov5_face_landmark" -> "deepcam-cn/yolov5-face"
"xialuxi/yolov5_face_landmark" -> "DayBreak-u/yolo-face-with-landmark"
"xialuxi/yolov5_face_landmark" -> "hpc203/yolov5-face-landmarks-opencv-v2" ["e"=1]
"xialuxi/yolov5_face_landmark" -> "qinggangwu/yolov7-pose_Npoint_Ncla"
"xialuxi/yolov5_face_landmark" -> "qinggangwu/yolov5_v6_plate_heading"
"deepcam-cn/yolov5-face" -> "derronqi/yolov7-face" ["e"=1]
"deepcam-cn/yolov5-face" -> "derronqi/yolov8-face" ["e"=1]
"deepcam-cn/yolov5-face" -> "biubug6/Pytorch_Retinaface"
"deepcam-cn/yolov5-face" -> "biubug6/Face-Detector-1MB-with-landmark"
"deepcam-cn/yolov5-face" -> "xlite-dev/lite.ai.toolkit" ["e"=1]
"deepcam-cn/yolov5-face" -> "xialuxi/yolov5_face_landmark"
"deepcam-cn/yolov5-face" -> "ppogg/YOLOv5-Lite" ["e"=1]
"deepcam-cn/yolov5-face" -> "wang-xinyu/tensorrtx" ["e"=1]
"deepcam-cn/yolov5-face" -> "JDAI-CV/FaceX-Zoo"
"deepcam-cn/yolov5-face" -> "Star-Clouds/CenterFace"
"deepcam-cn/yolov5-face" -> "RangiLyu/nanodet" ["e"=1]
"deepcam-cn/yolov5-face" -> "lucasjinreal/yolov7_d2" ["e"=1]
"deepcam-cn/yolov5-face" -> "polarisZhao/PFLD-pytorch"
"deepcam-cn/yolov5-face" -> "minivision-ai/Silent-Face-Anti-Spoofing" ["e"=1]
"deepcam-cn/yolov5-face" -> "meituan/YOLOv6" ["e"=1]
"yeyupiaoling/Pytorch-MobileFaceNet" -> "yeyupiaoling/Pytorch-MTCNN"
"yeyupiaoling/Pytorch-MobileFaceNet" -> "Xiaoccer/MobileFaceNet_Pytorch"
"blingenf/copydetect" -> "dodona-edu/dolos"
"opencv/opencv_zoo" -> "ShiqiYu/libfacedetection.train"
"opencv/opencv_zoo" -> "zhongyy/SFace"
"opencv/opencv_zoo" -> "derronqi/yolov8-face" ["e"=1]
"opencv/opencv_zoo" -> "OpenCVChina/DeepRobotDog"
"opencv/opencv_zoo" -> "NobuoTsukamoto/tensorrt-examples" ["e"=1]
"opencv/opencv_zoo" -> "opencv/opencv_extra" ["e"=1]
"opencv/opencv_zoo" -> "serengil/retinaface"
"opencv/opencv_zoo" -> "NirAharon/BoT-SORT" ["e"=1]
"opencv/opencv_zoo" -> "PINTO0309/openvino2tensorflow" ["e"=1]
"opencv/opencv_zoo" -> "PINTO0309/PINTO_model_zoo" ["e"=1]
"opencv/opencv_zoo" -> "iwatake2222/play_with_tensorrt" ["e"=1]
"mengyue0722/Face-swiping-Time-Attendance-System" -> "waiterxiaoyy/waiter-facerecognition-python"
"mengyue0722/Face-swiping-Time-Attendance-System" -> "66pig/face_recognition"
"mengyue0722/Face-swiping-Time-Attendance-System" -> "liqq1228/python-opencv"
"mengyue0722/Face-swiping-Time-Attendance-System" -> "eai2x/Face-Recognition-Class-Attendance-System"
"mengyue0722/Face-swiping-Time-Attendance-System" -> "xg-zhang/faceRegister"
"happynear/FaceVerification" -> "happynear/NormFace"
"happynear/FaceVerification" -> "AlfredXiangWu/face_verification_experiment"
"happynear/FaceVerification" -> "ydwen/caffe-face"
"happynear/FaceVerification" -> "happynear/AMSoftmax"
"happynear/FaceVerification" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"happynear/FaceVerification" -> "liuyuisanai/coco_loss"
"happynear/FaceVerification" -> "wy1iu/sphereface"
"happynear/FaceVerification" -> "happynear/MTCNN_face_detection_alignment"
"happynear/FaceVerification" -> "hqli/face_recognition"
"happynear/FaceVerification" -> "tornadomeet/mxnet-face"
"happynear/FaceVerification" -> "liuyuisanai/RSA-for-object-detection"
"happynear/FaceVerification" -> "wjgaas/DeepID2"
"happynear/FaceVerification" -> "chenriwei/DeepFace"
"happynear/FaceVerification" -> "AlphaQi/MTCNN-light"
"happynear/FaceVerification" -> "betars/Face-Resources"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "Aristochi/Dangerous_driving_behavior_detection"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "PengfeiM/Fatigue-Driven-Detection-Based-on-CNN"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "omnigeeker/mlnd_distracted_driver_detection"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "wangjianlin1985/Python_FatigueDrivingDetection"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "KyrieIrv11ng/Yolov5-driving-detection"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "DohaerisT/DangerousDrivingDetector"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "1647790440/Yolov5-deepsort-driverDistracted-driving-behavior-detection"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "BillySturate/Fatigue-driving-detection-system-based-on-opencv-dlib"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "BonesCat/YoloV5_PyQt5" ["e"=1]
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "Sharpiless/Yolov5-deepsort-inference" ["e"=1]
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "Sharpiless/Yolov5-Deepsort" ["e"=1]
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "advancer-debug/RedQueen_DrivingSecuritySystem"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "rikichou/distracted-driving-detection"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "qunshansj/Perclos-Enhanced-YOLO-Drowsiness-Detection-System"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "Ai-trainee/Traffic-Sign-Recognition-PyQt5-YOLOv5-GUI" ["e"=1]
"yeyupiaoling/Pytorch-MTCNN" -> "yeyupiaoling/Pytorch-MobileFaceNet"
"layumi/2015_Face_Detection" -> "anson0910/CNN_face_detection"
"layumi/2015_Face_Detection" -> "luoyetx/JDA"
"layumi/2015_Face_Detection" -> "yulequan/face-alignment-in-3000fps"
"layumi/2015_Face_Detection" -> "guoyilin/FaceDetection_CNN"
"IrvingMeng/MagFace" -> "mk-minchul/AdaFace"
"IrvingMeng/MagFace" -> "pterhoer/FaceImageQuality"
"IrvingMeng/MagFace" -> "Tencent/TFace"
"IrvingMeng/MagFace" -> "HuangYG123/CurricularFace"
"IrvingMeng/MagFace" -> "deepcam-cn/FaceQuality"
"IrvingMeng/MagFace" -> "JDAI-CV/FaceX-Zoo"
"IrvingMeng/MagFace" -> "cavalleria/cavaface"
"IrvingMeng/MagFace" -> "pterhoer/QMagFace"
"IrvingMeng/MagFace" -> "fdbtrs/CR-FIQA"
"IrvingMeng/MagFace" -> "seasonSH/Probabilistic-Face-Embeddings"
"IrvingMeng/MagFace" -> "fdbtrs/ElasticFace"
"IrvingMeng/MagFace" -> "javier-hernandezo/FaceQnet"
"IrvingMeng/MagFace" -> "aqeelanwar/MaskTheFace"
"IrvingMeng/MagFace" -> "Ontheway361/dul-pytorch"
"IrvingMeng/MagFace" -> "ronghuaiyang/arcface-pytorch"
"dhhruv/Chrome-Dino-Runner" -> "dhhruv/Compresssio-GUI"
"dhhruv/Chrome-Dino-Runner" -> "dhhruv/Binary-Search-Solutions"
"dhhruv/Chrome-Dino-Runner" -> "dhhruv/todo"
"JDAI-CV/FaceX-Zoo" -> "Tencent/TFace"
"JDAI-CV/FaceX-Zoo" -> "ZhaoJ9014/face.evoLVe"
"JDAI-CV/FaceX-Zoo" -> "IrvingMeng/MagFace"
"JDAI-CV/FaceX-Zoo" -> "cavalleria/cavaface"
"JDAI-CV/FaceX-Zoo" -> "TreB1eN/InsightFace_Pytorch"
"JDAI-CV/FaceX-Zoo" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"JDAI-CV/FaceX-Zoo" -> "biubug6/Pytorch_Retinaface"
"JDAI-CV/FaceX-Zoo" -> "aqeelanwar/MaskTheFace"
"JDAI-CV/FaceX-Zoo" -> "ChanChiChoi/awesome-Face_Recognition"
"JDAI-CV/FaceX-Zoo" -> "HuangYG123/CurricularFace"
"JDAI-CV/FaceX-Zoo" -> "Star-Clouds/CenterFace"
"JDAI-CV/FaceX-Zoo" -> "ronghuaiyang/arcface-pytorch"
"JDAI-CV/FaceX-Zoo" -> "mk-minchul/AdaFace"
"JDAI-CV/FaceX-Zoo" -> "deepcam-cn/yolov5-face"
"JDAI-CV/FaceX-Zoo" -> "minivision-ai/Silent-Face-Anti-Spoofing" ["e"=1]
"uricamic/clandmark" -> "uricamic/flandmark"
"uricamic/clandmark" -> "luoyetx/JDA"
"uricamic/clandmark" -> "TadasBaltrusaitis/CLM-framework"
"uricamic/clandmark" -> "patrikhuber/superviseddescent"
"uricamic/clandmark" -> "yulequan/face-alignment-in-3000fps"
"uricamic/clandmark" -> "jwyang/face-alignment"
"uricamic/clandmark" -> "greatyao/asmlibrary"
"uricamic/clandmark" -> "cxcxcxcx/asmlib-opencv"
"uricamic/clandmark" -> "bcsiriuschen/High-Dimensional-LBP"
"guoyilin/FaceDetection_CNN" -> "anson0910/CNN_face_detection"
"guoyilin/FaceDetection_CNN" -> "layumi/2015_Face_Detection"
"guoyilin/FaceDetection_CNN" -> "luoyetx/JDA"
"guoyilin/FaceDetection_CNN" -> "Russell91/ReInspect" ["e"=1]
"guoyilin/FaceDetection_CNN" -> "yulequan/face-alignment-in-3000fps"
"guoyilin/FaceDetection_CNN" -> "aosokin/cnn_head_detection"
"guoyilin/FaceDetection_CNN" -> "happynear/FaceVerification"
"guoyilin/FaceDetection_CNN" -> "tornadomeet/mxnet-face"
"guoyilin/FaceDetection_CNN" -> "ydwen/caffe-face"
"guoyilin/FaceDetection_CNN" -> "jwyang/face-alignment"
"guoyilin/FaceDetection_CNN" -> "luoyetx/deep-landmark"
"guoyilin/FaceDetection_CNN" -> "chenriwei/DeepFace"
"guoyilin/FaceDetection_CNN" -> "LouieYang/caf_face_detection"
"AlfredXiangWu/face_verification_experiment" -> "happynear/FaceVerification"
"AlfredXiangWu/face_verification_experiment" -> "ydwen/caffe-face"
"AlfredXiangWu/face_verification_experiment" -> "happynear/NormFace"
"AlfredXiangWu/face_verification_experiment" -> "wy1iu/sphereface"
"AlfredXiangWu/face_verification_experiment" -> "AlfredXiangWu/LightCNN"
"AlfredXiangWu/face_verification_experiment" -> "betars/Face-Resources"
"AlfredXiangWu/face_verification_experiment" -> "chenriwei/DeepFace"
"AlfredXiangWu/face_verification_experiment" -> "tornadomeet/mxnet-face"
"AlfredXiangWu/face_verification_experiment" -> "AlphaQi/MTCNN-light"
"AlfredXiangWu/face_verification_experiment" -> "happynear/MTCNN_face_detection_alignment"
"AlfredXiangWu/face_verification_experiment" -> "kpzhang93/MTCNN_face_detection_alignment"
"AlfredXiangWu/face_verification_experiment" -> "dlunion/mtcnn"
"AlfredXiangWu/face_verification_experiment" -> "Seanlinx/mtcnn"
"AlfredXiangWu/face_verification_experiment" -> "happynear/AMSoftmax"
"AlfredXiangWu/face_verification_experiment" -> "iacopomasi/face_specific_augm" ["e"=1]
"luoyetx/deep-landmark" -> "qiexing/face-landmark-localization"
"luoyetx/deep-landmark" -> "ishay2b/VanillaCNN"
"luoyetx/deep-landmark" -> "yulequan/face-alignment-in-3000fps"
"luoyetx/deep-landmark" -> "luoyetx/JDA"
"luoyetx/deep-landmark" -> "luoyetx/face-alignment-at-3000fps"
"luoyetx/deep-landmark" -> "CongWeilin/mtcnn-caffe"
"luoyetx/deep-landmark" -> "liuyuisanai/RSA-for-object-detection"
"luoyetx/deep-landmark" -> "jwyang/face-alignment"
"luoyetx/deep-landmark" -> "ydwen/caffe-face"
"luoyetx/deep-landmark" -> "DaFuCoding/MTCNN_Caffe"
"luoyetx/deep-landmark" -> "dlunion/mtcnn"
"luoyetx/deep-landmark" -> "AlphaQi/MTCNN-light"
"luoyetx/deep-landmark" -> "freesouls/face-alignment-at-3000fps"
"luoyetx/deep-landmark" -> "panda-lab/face-landmark"
"luoyetx/deep-landmark" -> "chengzhengxin/sdm"
"fdbtrs/ElasticFace" -> "pterhoer/QMagFace"
"fdbtrs/ElasticFace" -> "fdbtrs/QuantFace"
"fdbtrs/ElasticFace" -> "fdbtrs/IDiff-Face"
"fdbtrs/ElasticFace" -> "fdbtrs/Masked-Face-Recognition-KD"
"fdbtrs/ElasticFace" -> "fdbtrs/mixfacenets"
"fdbtrs/ElasticFace" -> "fdbtrs/CR-FIQA"
"fdbtrs/ElasticFace" -> "fdbtrs/Self-restrained-Triplet-Loss"
"fdbtrs/ElasticFace" -> "fdbtrs/SFace-Privacy-friendly-and-Accurate-Face-Recognition-using-Synthetic-Data"
"fdbtrs/ElasticFace" -> "meilfang/LMFD-PAD"
"fdbtrs/ElasticFace" -> "fdbtrs/Unsupervised-Face-Recognition-using-Unlabeled-Synthetic-Data"
"fdbtrs/ElasticFace" -> "naserdamer/MorDIFF"
"fdbtrs/ElasticFace" -> "meilfang/SynthASpoof"
"fdbtrs/ElasticFace" -> "fdbtrs/PocketNet"
"fdbtrs/ElasticFace" -> "NetoPedro/FocusFace"
"fdbtrs/ElasticFace" -> "HuangYG123/CurricularFace"
"Raschka-research-group/coral-pytorch" -> "Raschka-research-group/coral-cnn"
"Raschka-research-group/coral-pytorch" -> "Raschka-research-group/corn-ordinal-neuralnet"
"Raschka-research-group/coral-pytorch" -> "EthanRosenthal/spacecutter"
"Raschka-research-group/coral-pytorch" -> "ck37/coral-ordinal"
"Raschka-research-group/coral-pytorch" -> "GarrettJenkinson/condor_pytorch"
"vitoralbiero/img2pose" -> "thohemp/6DRepNet"
"vitoralbiero/img2pose" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"vitoralbiero/img2pose" -> "cleardusk/3DDFA_V2" ["e"=1]
"vitoralbiero/img2pose" -> "choyingw/SynergyNet" ["e"=1]
"vitoralbiero/img2pose" -> "shamangary/FSA-Net"
"vitoralbiero/img2pose" -> "polarisZhao/PFLD-pytorch"
"vitoralbiero/img2pose" -> "WIKI2020/FacePose_pytorch"
"vitoralbiero/img2pose" -> "natanielruiz/deep-head-pose"
"vitoralbiero/img2pose" -> "lyp-deeplearning/MOS-Multi-Task-Face-Detect"
"vitoralbiero/img2pose" -> "menpo/lsfm" ["e"=1]
"vitoralbiero/img2pose" -> "yfeng95/DECA" ["e"=1]
"vitoralbiero/img2pose" -> "soubhiksanyal/FLAME_PyTorch" ["e"=1]
"vitoralbiero/img2pose" -> "HuangYG123/CurricularFace"
"vitoralbiero/img2pose" -> "jhb86253817/PIPNet"
"vitoralbiero/img2pose" -> "cleardusk/3DDFA" ["e"=1]
"Tencent/TFace" -> "JDAI-CV/FaceX-Zoo"
"Tencent/TFace" -> "IrvingMeng/MagFace"
"Tencent/TFace" -> "pterhoer/FaceImageQuality"
"Tencent/TFace" -> "cavalleria/cavaface"
"Tencent/TFace" -> "HuangYG123/CurricularFace"
"Tencent/TFace" -> "mk-minchul/AdaFace"
"Tencent/TFace" -> "deepcam-cn/FaceQuality"
"Tencent/TFace" -> "biubug6/Pytorch_Retinaface"
"Tencent/TFace" -> "ZhaoJ9014/face.evoLVe"
"Tencent/TFace" -> "ZitongYu/CDCN" ["e"=1]
"Tencent/TFace" -> "TreB1eN/InsightFace_Pytorch"
"Tencent/TFace" -> "ZitongYu/DeepFAS" ["e"=1]
"Tencent/TFace" -> "minivision-ai/Silent-Face-Anti-Spoofing" ["e"=1]
"Tencent/TFace" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"Tencent/TFace" -> "biubug6/Face-Detector-1MB-with-landmark"
"serengil/retinaface" -> "biubug6/Pytorch_Retinaface"
"serengil/retinaface" -> "serengil/deepface"
"serengil/retinaface" -> "StanislasBertrand/RetinaFace-tf2"
"serengil/retinaface" -> "timesler/facenet-pytorch"
"serengil/retinaface" -> "mk-minchul/AdaFace"
"serengil/retinaface" -> "tomas-gajarsky/facetorch" ["e"=1]
"serengil/retinaface" -> "Tencent/TFace"
"serengil/retinaface" -> "ipazc/mtcnn"
"serengil/retinaface" -> "ternaus/retinaface" ["e"=1]
"serengil/retinaface" -> "deepcam-cn/yolov5-face"
"serengil/retinaface" -> "ZitongYu/DeepFAS" ["e"=1]
"serengil/retinaface" -> "Media-Smart/vedadet"
"serengil/retinaface" -> "zllrunning/face-parsing.PyTorch" ["e"=1]
"serengil/retinaface" -> "derronqi/yolov8-face" ["e"=1]
"serengil/retinaface" -> "FacePerceiver/FaRL" ["e"=1]
"ayrna/orca" -> "ayrna/orca-python"
"ayrna/orca" -> "fabianp/mord"
"xiaoxiong74/face-cluster-by-infomap" -> "sstzal/STAR-FC"
"xiaoxiong74/face-cluster-by-infomap" -> "yl-1993/learn-to-cluster"
"xiaoxiong74/face-cluster-by-infomap" -> "xiaoxiong74/face-cluster-framework"
"xiaoxiong74/face-cluster-by-infomap" -> "XiaohangZhan/cdp"
"x-shadow-x/FaceIdentificati" -> "julyCodeGo/OpenCVCheck"
"x-shadow-x/FaceIdentificati" -> "tony-Shx/Swface"
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" -> "robmarkcole/fire-detection-from-images"
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" -> "sunnyiisc/Fire-Detection-from-FLAME-Dataset"
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" -> "maidacundo/real-time-fire-segmentation-deep-learning"
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" -> "pereira-gha/activefire"
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" -> "cair/Fire-Detection-Image-Dataset"
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" -> "OlafenwaMoses/FireNET"
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" -> "siyuanwu/DFS-FIRE-SMOKE-Dataset"
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" -> "DeepQuestAI/Fire-Smoke-Dataset"
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" -> "suojiashun/HIT-UAV-Infrared-Thermal-Dataset"
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" -> "gaiasd/DFireDataset"
"deepcam-cn/FaceQuality" -> "pterhoer/FaceImageQuality"
"deepcam-cn/FaceQuality" -> "IrvingMeng/MagFace"
"deepcam-cn/FaceQuality" -> "javier-hernandezo/FaceQnet"
"deepcam-cn/FaceQuality" -> "Slinene/SDD-FIQA"
"deepcam-cn/FaceQuality" -> "Tencent/TFace"
"deepcam-cn/FaceQuality" -> "deepcam-cn/age-estimate"
"deepcam-cn/FaceQuality" -> "fdbtrs/CR-FIQA"
"pterhoer/ExplainableFaceImageQuality" -> "jonasgrebe/pt-femb-face-embeddings"
"pterhoer/ExplainableFaceImageQuality" -> "pterhoer/QMagFace"
"datarootsio/fresh-coffee-listener" -> "datarootsio/expiring-lru-cache"
"datarootsio/fresh-coffee-listener" -> "datarootsio/ml-skeleton-py"
"datarootsio/fresh-coffee-listener" -> "datarootsio/.github"
"exadel-inc/compreface-python-sdk" -> "exadel-inc/compreface-javascript-sdk"
"1996scarlet/Dense-Head-Pose-Estimation" -> "choyingw/SynergyNet" ["e"=1]
"1996scarlet/Dense-Head-Pose-Estimation" -> "cleardusk/3DDFA_V2" ["e"=1]
"1996scarlet/Dense-Head-Pose-Estimation" -> "bubingy/HeadPoseEstimate"
"1996scarlet/Dense-Head-Pose-Estimation" -> "protossw512/AdaptiveWingLoss"
"1996scarlet/Dense-Head-Pose-Estimation" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"1996scarlet/Dense-Head-Pose-Estimation" -> "TimoBolkart/BFM_to_FLAME" ["e"=1]
"1996scarlet/Dense-Head-Pose-Estimation" -> "thohemp/6DRepNet"
"1996scarlet/Dense-Head-Pose-Estimation" -> "WIKI2020/FacePose_pytorch"
"1996scarlet/Dense-Head-Pose-Estimation" -> "jhb86253817/PIPNet"
"Sentient07/HeadHunter--T" -> "Sentient07/HeadHunter"
"Sentient07/HeadHunter" -> "Sentient07/HeadHunter--T"
"fbplab/MEBeauty-database" -> "lucasxlu/CRNet"
"fbplab/MEBeauty-database" -> "lucasxlu/HMTNet"
"fbplab/MEBeauty-database" -> "lucasxlu/ComboLoss"
"tntrung/sdm_face_alignment" -> "patrikhuber/superviseddescent"
"tntrung/sdm_face_alignment" -> "kensun0/Joint-Cascade-Face-Detection-and-Alignment"
"tntrung/sdm_face_alignment" -> "wincle/NPD"
"tntrung/sdm_face_alignment" -> "trigeorgis/mdm"
"tntrung/sdm_face_alignment" -> "zhusz/CVPR15-CFSS"
"tntrung/sdm_face_alignment" -> "sai-bi/FaceAlignment"
"tntrung/sdm_face_alignment" -> "luoyetx/JDA"
"tntrung/sdm_face_alignment" -> "FaceDetect/jointCascade_py"
"tntrung/sdm_face_alignment" -> "yulequan/face-alignment-in-3000fps"
"tntrung/sdm_face_alignment" -> "moliusimon/csdm"
"king-xw/Face_Recogntion" -> "liqq1228/python-opencv"
"steffensbola/furg-fire-dataset" -> "cair/Fire-Detection-Image-Dataset"
"steffensbola/furg-fire-dataset" -> "DeepQuestAI/Fire-Smoke-Dataset"
"steffensbola/furg-fire-dataset" -> "tobybreckon/fire-detection-cnn"
"steffensbola/furg-fire-dataset" -> "sulenn/fire-dataset"
"dhhruv/Contactless-Attendance-System" -> "dhhruv/Compresssio-GUI"
"dhhruv/Contactless-Attendance-System" -> "dhhruv/Binary-Search-Solutions"
"dhhruv/Contactless-Attendance-System" -> "dhhruv/todo"
"dhhruv/Contactless-Attendance-System" -> "dhhruv/EncrypC"
"e-candeloro/Driver-State-Detection" -> "prasad-kumkar/ai-driver-safety"
"e-candeloro/Driver-State-Detection" -> "Abhinav1004/Distracted-Driver-Detection"
"e-candeloro/Driver-State-Detection" -> "ykotseruba/attention_and_driving" ["e"=1]
"e-candeloro/Driver-State-Detection" -> "bnair2001/Driver-monitoring-system"
"e-candeloro/Driver-State-Detection" -> "parai/dms"
"yurizzzzz/Helmet-Detection-YoloV5" -> "zhhiyuan/yolov5"
"yurizzzzz/Helmet-Detection-YoloV5" -> "RUI-LIU7/Helmet_Detection"
"yurizzzzz/Helmet-Detection-YoloV5" -> "gengyanlei/reflective-clothes-detect-yolov5"
"bytefish/libfacerec" -> "bytefish/facerecognition_guide"
"bytefish/libfacerec" -> "bytefish/opencv"
"luoyetx/mini-caffe" -> "AlphaQi/MTCNN-light"
"luoyetx/mini-caffe" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"luoyetx/mini-caffe" -> "OAID/YSQfastfd"
"luoyetx/mini-caffe" -> "solrex/caffe-mobile"
"luoyetx/mini-caffe" -> "dlunion/mtcnn"
"luoyetx/mini-caffe" -> "blankWorld/MTCNN-Accelerate-Onet"
"luoyetx/mini-caffe" -> "farmingyard/caffe-mobilenet" ["e"=1]
"luoyetx/mini-caffe" -> "happynear/NormFace"
"luoyetx/mini-caffe" -> "foreverYoungGitHub/MTCNN"
"luoyetx/mini-caffe" -> "in66-dev/In-Prestissimo"
"luoyetx/mini-caffe" -> "shicai/MobileNet-Caffe" ["e"=1]
"luoyetx/mini-caffe" -> "zeusees/FaceBoxes"
"luoyetx/mini-caffe" -> "walkoncross/prepare-faces-zyf"
"luoyetx/mini-caffe" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"luoyetx/mini-caffe" -> "KaleidoZhouYN/mobilefacenet-caffe"
"elias-ramzi/ROADMAP" -> "justforforfor/insclr"
"jerryuhoo/Masked-Face-Recognition" -> "leowjs/Masked-Face-Recognition"
"neeek2303/Depth-Enhancement-and-Super-Resolution" -> "neeek2303/Leaf-diseases-segmentation"
"neeek2303/Depth-Enhancement-and-Super-Resolution" -> "neeek2303/Lenta-Hackathon"
"neeek2303/Depth-Enhancement-and-Super-Resolution" -> "maxs-kan/InterpretableNeuroDL"
"zhhiyuan/yolov5" -> "sdw8855/YOLOV5_safetyHat"
"zhhiyuan/yolov5" -> "HouchangX-AI/Helmet-Detection-Track"
"patlevin/face-detection-tflite" -> "cedriclmenard/irislandmarks.pytorch"
"zhongyy/Face-Transformer" -> "fdbtrs/ElasticFace"
"zhongyy/Face-Transformer" -> "lxq1000/SwinFace"
"zhongyy/Face-Transformer" -> "DanJun6737/TransFace"
"zhongyy/Face-Transformer" -> "cavalleria/cavaface"
"zhongyy/Face-Transformer" -> "JDAI-CV/FaceX-Zoo"
"zhongyy/Face-Transformer" -> "HuangYG123/CurricularFace"
"zhongyy/Face-Transformer" -> "IrvingMeng/MagFace"
"Media-Smart/vedadet" -> "Media-Smart/volkscv"
"Media-Smart/vedadet" -> "Media-Smart/volksdep"
"Media-Smart/vedadet" -> "biubug6/Pytorch_Retinaface"
"Media-Smart/vedadet" -> "supernotman/RetinaFace_Pytorch"
"Media-Smart/vedadet" -> "damo-cv/MogFace"
"Media-Smart/vedadet" -> "akofman/wider-face-pascal-voc-annotations"
"Media-Smart/vedadet" -> "Star-Clouds/CenterFace"
"Media-Smart/vedadet" -> "Media-Smart/cheetahinfer"
"Media-Smart/vedadet" -> "biubug6/Face-Detector-1MB-with-landmark"
"Media-Smart/vedadet" -> "wondervictor/WiderFace-Evaluation"
"Media-Smart/vedadet" -> "Media-Smart/flexinfer"
"Media-Smart/vedadet" -> "vitoralbiero/img2pose"
"Media-Smart/vedadet" -> "yxlijun/DSFD.pytorch"
"Media-Smart/vedadet" -> "Media-Smart/vedaseg"
"Media-Smart/vedadet" -> "ChiCheng123/SRN"
"eladhoffer/TripletNet" -> "rksltnl/Deep-Metric-Learning-CVPR16"
"eladhoffer/TripletNet" -> "eladhoffer/ImageNet-Training" ["e"=1]
"eladhoffer/TripletNet" -> "wanji/caffe-sl"
"cxcxcxcx/asmlib-opencv" -> "jiapei100/VOSM"
"cxcxcxcx/asmlib-opencv" -> "greatyao/asmlibrary"
"cxcxcxcx/asmlib-opencv" -> "derfred/asmlib-opencv"
"cxcxcxcx/asmlib-opencv" -> "juan-cardelino/stasm"
"cxcxcxcx/asmlib-opencv" -> "greatyao/aamlibrary"
"xialuxi/yolov5-car-plate" -> "xialuxi/yolov5_face_landmark"
"xialuxi/yolov5-car-plate" -> "qinggangwu/yolov5_v6_plate_heading"
"xialuxi/yolov5-car-plate" -> "qinggangwu/yolov7-pose_Npoint_Ncla"
"xialuxi/yolov5-car-plate" -> "yxgong0/CRPD" ["e"=1]
"yulequan/face-alignment-in-3000fps" -> "jwyang/face-alignment"
"yulequan/face-alignment-in-3000fps" -> "sai-bi/FaceAlignment"
"yulequan/face-alignment-in-3000fps" -> "freesouls/face-alignment-at-3000fps"
"yulequan/face-alignment-in-3000fps" -> "luoyetx/face-alignment-at-3000fps"
"yulequan/face-alignment-in-3000fps" -> "patrikhuber/superviseddescent"
"yulequan/face-alignment-in-3000fps" -> "luoyetx/JDA"
"yulequan/face-alignment-in-3000fps" -> "chengzhengxin/sdm"
"yulequan/face-alignment-in-3000fps" -> "delphifirst/FaceX"
"yulequan/face-alignment-in-3000fps" -> "luoyetx/deep-landmark"
"yulequan/face-alignment-in-3000fps" -> "tntrung/sdm_face_alignment"
"yulequan/face-alignment-in-3000fps" -> "CitrusRokid/OpenNPD"
"yulequan/face-alignment-in-3000fps" -> "qiexing/face-landmark-localization"
"yulequan/face-alignment-in-3000fps" -> "kensun0/Joint-Cascade-Face-Detection-and-Alignment"
"yulequan/face-alignment-in-3000fps" -> "TadasBaltrusaitis/CLM-framework"
"yulequan/face-alignment-in-3000fps" -> "zhusz/CVPR15-CFSS"
"atharvakale31/Real-Time_Face_Recognition_Android" -> "irhammuch/android-face-recognition"
"atharvakale31/Real-Time_Face_Recognition_Android" -> "Malikanhar/Android-Face-Recognition"
"atharvakale31/Real-Time_Face_Recognition_Android" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"atharvakale31/Real-Time_Face_Recognition_Android" -> "estebanuri/face_recognition"
"atharvakale31/Real-Time_Face_Recognition_Android" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"atharvakale31/Real-Time_Face_Recognition_Android" -> "NaumanHSA/Android-Face-Recognition-MTCNN-FaceNet"
"atharvakale31/Real-Time_Face_Recognition_Android" -> "shubham0204/OnDevice-Face-Recognition-Android"
"zhusz/CVPR15-CFSS" -> "trigeorgis/mdm"
"zhusz/CVPR15-CFSS" -> "patrikhuber/superviseddescent"
"zhusz/CVPR15-CFSS" -> "tntrung/sdm_face_alignment"
"zhusz/CVPR15-CFSS" -> "freesouls/face-alignment-at-3000fps"
"zhusz/CVPR15-CFSS" -> "moliusimon/csdm"
"zhusz/CVPR15-CFSS" -> "sai-bi/FaceAlignment"
"zhusz/CVPR15-CFSS" -> "zhzhanp/TCDCN-face-alignment"
"zhusz/CVPR15-CFSS" -> "yulequan/face-alignment-in-3000fps"
"zhusz/CVPR15-CFSS" -> "ZhiwenShao/CFT"
"zhusz/CVPR15-CFSS" -> "shaoxiaohu/CVPR2016"
"zhusz/CVPR15-CFSS" -> "jwyang/face-alignment"
"sstzal/STAR-FC" -> "xiaoxiong74/face-cluster-by-infomap"
"ekurutepe/iOS-OpenCV-FaceRec" -> "giomurru/opencv-facerec-tutorial-ios"
"freesouls/face-alignment-at-3000fps" -> "yulequan/face-alignment-in-3000fps"
"freesouls/face-alignment-at-3000fps" -> "luoyetx/face-alignment-at-3000fps"
"freesouls/face-alignment-at-3000fps" -> "jwyang/face-alignment"
"freesouls/face-alignment-at-3000fps" -> "sai-bi/FaceAlignment"
"freesouls/face-alignment-at-3000fps" -> "patrikhuber/superviseddescent"
"freesouls/face-alignment-at-3000fps" -> "zhusz/CVPR15-CFSS"
"freesouls/face-alignment-at-3000fps" -> "luoyetx/JDA"
"freesouls/face-alignment-at-3000fps" -> "chengzhengxin/sdm"
"freesouls/face-alignment-at-3000fps" -> "happynear/FaceVerification"
"freesouls/face-alignment-at-3000fps" -> "luoyetx/deep-landmark"
"freesouls/face-alignment-at-3000fps" -> "happynear/MTCNN_face_detection_alignment"
"freesouls/face-alignment-at-3000fps" -> "panda-lab/face-landmark"
"freesouls/face-alignment-at-3000fps" -> "wincle/NPD"
"freesouls/face-alignment-at-3000fps" -> "CitrusRokid/OpenNPD"
"freesouls/face-alignment-at-3000fps" -> "tntrung/sdm_face_alignment"
"sachith500/MaskedFaceRepresentation" -> "leowjs/Masked-Face-Recognition"
"sachith500/MaskedFaceRepresentation" -> "Nagasai524/Masked-Face-Recognition-using-Facenet"
"ryanmadden/decision-tree" -> "barisesmer/C4.5"
"zk2ly/Smoke_Fire_Detection" -> "CodingChaozhang/YOLOV3_Fire_Detection"
"tsingqguo/ABBA" -> "tsingqguo/AttackTracker"
"pereira-gha/activefire" -> "amanbasu/wildfire-detection"
"Media-Smart/vedatad" -> "Media-Smart/vedacls"
"Media-Smart/vedatad" -> "VividLe/A2Net" ["e"=1]
"Media-Smart/vedatad" -> "asrafulashiq/wsad" ["e"=1]
"geerk/C45algorithm" -> "barisesmer/C4.5"
"Aravindlivewire/Opencv" -> "Balaje/OpenCV"
"fdbtrs/Self-restrained-Triplet-Loss" -> "fdbtrs/QuantFace"
"ibug-group/fpage" -> "yiminglin-ai/imdb-clean"
"ibug-group/fpage" -> "neeek2303/Lenta-Hackathon"
"ibug-group/fpage" -> "neeek2303/Depth-Enhancement-and-Super-Resolution"
"ibug-group/fpage" -> "neeek2303/Leaf-diseases-segmentation"
"KaenChan/lightqnet" -> "KaenChan/lightqnet-train"
"fdbtrs/mixfacenets" -> "fdbtrs/QuantFace"
"fdbtrs/mixfacenets" -> "fdbtrs/PocketNet"
"fdbtrs/mixfacenets" -> "naserdamer/MorDIFF"
"fdbtrs/mixfacenets" -> "meilfang/LMFD-PAD"
"fdbtrs/mixfacenets" -> "NetoPedro/FocusFace"
"FacialLandmark/landmark_py" -> "FaceDetect/jointCascade_py"
"dhhruv/YouTua" -> "dhhruv/Compresssio-GUI"
"dhhruv/YouTua" -> "dhhruv/Binary-Search-Solutions"
"dhhruv/YouTua" -> "dhhruv/todo"
"dhhruv/YouTua" -> "dhhruv/EncrypC"
"dhhruv/YouTua" -> "dhhruv/Stock-Price-Prediction"
"dhhruv/YouTua" -> "dhhruv/Contactless-Attendance-System"
"dhhruv/YouTua" -> "dhhruv/Tic-Tac-Toe"
"fdbtrs/PocketNet" -> "fdbtrs/QuantFace"
"fdbtrs/PocketNet" -> "fdbtrs/mixfacenets"
"fdbtrs/PocketNet" -> "mbfaria/ShuffleFaceNet_Pytorch"
"olddocks/caffe-facialkp" -> "qiexing/caffe-regression"
"VISION-SJTU/IoUattack" -> "joshuajss/RTAA"
"VISION-SJTU/IoUattack" -> "tsingqguo/AttackTracker"
"VISION-SJTU/IoUattack" -> "MasterBin-IIAU/CSA"
"VISION-SJTU/IoUattack" -> "VISION-SJTU/RTAA"
"tsingqguo/AttackTracker" -> "VISION-SJTU/IoUattack"
"tsingqguo/AttackTracker" -> "MasterBin-IIAU/CSA"
"dhhruv/Binary-Search-Solutions" -> "dhhruv/Compresssio-GUI"
"leoluopy/GroupFacePytorch" -> "SeungyounShin/GroupFace"
"karthiknagarajansundar/automatic-music-generation" -> "faeya/traffic-sign-classification"
"dhhruv/EncrypC" -> "dhhruv/Compresssio-GUI"
"golnazghiasi/hpm-detection-code" -> "andyhx/JointCascadeFaceDetection"
"bytefish/facerecognition_guide" -> "bytefish/facerec"
"bytefish/facerecognition_guide" -> "bytefish/libfacerec"
"Copyleaks/.NET-Plagiarism-Checker" -> "Copyleaks/NodeJS-Plagiarism-Checker"
"Copyleaks/.NET-Plagiarism-Checker" -> "Copyleaks/Ruby-Plagiarism-Checker"
"andyhx/JointCascadeFaceDetection" -> "kensun0/Joint-Cascade-Face-Detection-and-Alignment"
"andyhx/JointCascadeFaceDetection" -> "golnazghiasi/hpm-detection-code"
"dhhruv/Vac-Cowin" -> "dhhruv/Compresssio-GUI"
"dhhruv/Vac-Cowin" -> "dhhruv/Binary-Search-Solutions"
"yiminglin-ai/imdb-clean" -> "ibug-group/fpage"
"yiminglin-ai/imdb-clean" -> "neeek2303/Lenta-Hackathon"
"yiminglin-ai/imdb-clean" -> "neeek2303/Depth-Enhancement-and-Super-Resolution"
"VHCC/SeetaFace64Android" -> "CodingNowPls/SeetaFace64Android"
"yangkang2021/SeetaFace6-Build" -> "yangjian1218/seetaface6JNIToAPP"
"yangkang2021/SeetaFace6-Build" -> "SeetaFace6Open/SeetaFace6JNI"
"hzq-zjm/FaceDetect-FaceLandmark" -> "abyssss52/PFLD_ncnn_test"
"SeetaFace6Open/SeetaFace6JNI" -> "yangkang2021/SeetaFace6-Build"
"SeetaFace6Open/SeetaFace6JNI" -> "yangjian1218/seetaface6JNIToAPP"
"anoymous-face/FFC" -> "tiandunx/SV-X-Softmax"
"susithrj/MaskNet-Occlusion-Invariant-Face-Recognition-System" -> "Nagasai524/Masked-Face-Recognition-using-Facenet"
"susithrj/MaskNet-Occlusion-Invariant-Face-Recognition-System" -> "leowjs/Masked-Face-Recognition"
"tiandunx/loss_function_search" -> "tiandunx/SV-X-Softmax"
"cmusatyalab/openface" -> "davidsandberg/facenet"
"cmusatyalab/openface" -> "TadasBaltrusaitis/OpenFace"
"cmusatyalab/openface" -> "ageitgey/face_recognition"
"cmusatyalab/openface" -> "davisking/dlib"
"cmusatyalab/openface" -> "kpzhang93/MTCNN_face_detection_alignment"
"cmusatyalab/openface" -> "seetaface/SeetaFaceEngine"
"cmusatyalab/openface" -> "ShiqiYu/libfacedetection"
"cmusatyalab/openface" -> "BVLC/caffe" ["e"=1]
"cmusatyalab/openface" -> "CMU-Perceptual-Computing-Lab/openpose" ["e"=1]
"cmusatyalab/openface" -> "kjw0612/awesome-deep-vision" ["e"=1]
"cmusatyalab/openface" -> "facebookresearch/Detectron" ["e"=1]
"cmusatyalab/openface" -> "apache/mxnet" ["e"=1]
"cmusatyalab/openface" -> "deepinsight/insightface"
"cmusatyalab/openface" -> "1adrianb/face-alignment"
"cmusatyalab/openface" -> "pjreddie/darknet" ["e"=1]
"sonu275981/Face-Recognition-Attendance-System" -> "ntshvicky/FaceRecognitionAttendance"
"Pragya9ps/Face-Recognition-Attendance-System" -> "Waseemali11/Python-FYP-Face-Recognition-Attendence-System"
"BillySturate/Fatigue-driving-detection-system-based-on-opencv-dlib" -> "Gun-God/driver_fatigue_detection-master"
"tzutalin/dlib-android-app" -> "tzutalin/dlib-android"
"tzutalin/dlib-android-app" -> "gicheonkang/fast-face-android"
"tzutalin/dlib-android-app" -> "gv22ga/dlib-face-recognition-android"
"tzutalin/dlib-android-app" -> "SimonCherryGZ/face-landmark-android"
"tzutalin/dlib-android-app" -> "lawsonsli/faceCapture"
"tzutalin/dlib-android-app" -> "tunaemre/Face-Swap-Android"
"tzutalin/dlib-android-app" -> "zweigraf/face-landmarking-ios"
"tzutalin/dlib-android-app" -> "szad670401/HyperLandmark"
"tzutalin/dlib-android-app" -> "wysaid/android-gpuimage-plus" ["e"=1]
"tzutalin/dlib-android-app" -> "xGonZh10n/FaceDetection"
"tzutalin/dlib-android-app" -> "asdfqwrasdf/ArcFaceDemo"
"tzutalin/dlib-android-app" -> "vcvycy/MTCNN4Android"
"tzutalin/dlib-android-app" -> "FaceAR/OpenFaceIOS"
"tzutalin/dlib-android-app" -> "androidroadies/FaceSwap"
"tzutalin/dlib-android-app" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"tzutalin/dlib-android" -> "tzutalin/dlib-android-app"
"tzutalin/dlib-android" -> "gicheonkang/fast-face-android"
"tzutalin/dlib-android" -> "gv22ga/dlib-face-recognition-android"
"tzutalin/dlib-android" -> "SimonCherryGZ/face-landmark-android"
"tzutalin/dlib-android" -> "TadasBaltrusaitis/CLM-framework"
"tzutalin/dlib-android" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework"
"tzutalin/dlib-android" -> "szad670401/HyperLandmark"
"tzutalin/dlib-android" -> "zweigraf/face-landmarking-ios"
"tzutalin/dlib-android" -> "sh1r0/caffe-android-lib"
"tzutalin/dlib-android" -> "miaoerduo/dlib-face-landmark-compression"
"tzutalin/dlib-android" -> "lawsonsli/faceCapture"
"tzutalin/dlib-android" -> "yulequan/face-alignment-in-3000fps"
"tzutalin/dlib-android" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"tzutalin/dlib-android" -> "hrastnik/FaceSwap" ["e"=1]
"tzutalin/dlib-android" -> "davisking/dlib-models"
"hrastnik/face_detect_n_track" -> "yulequan/face-alignment-in-3000fps"
"hrastnik/face_detect_n_track" -> "kylemcdonald/FaceTracker"
"hrastnik/face_detect_n_track" -> "freesouls/face-alignment-at-3000fps"
"hrastnik/face_detect_n_track" -> "dlunion/mtcnn"
"hrastnik/face_detect_n_track" -> "patrikhuber/superviseddescent"
"hrastnik/face_detect_n_track" -> "chengzhengxin/sdm"
"hrastnik/face_detect_n_track" -> "happynear/MTCNN_face_detection_alignment"
"hrastnik/face_detect_n_track" -> "luoyetx/face-alignment-at-3000fps"
"hrastnik/face_detect_n_track" -> "OAID/YSQfastfd"
"hrastnik/face_detect_n_track" -> "TadasBaltrusaitis/CLM-framework"
"hrastnik/face_detect_n_track" -> "AlphaQi/MTCNN-light"
"hrastnik/face_detect_n_track" -> "cheind/dest"
"hrastnik/face_detect_n_track" -> "davheld/GOTURN" ["e"=1]
"hrastnik/face_detect_n_track" -> "ydwen/caffe-face"
"hrastnik/face_detect_n_track" -> "lincolnhard/head-pose-estimation"
"betars/Face-Resources" -> "ydwen/caffe-face"
"betars/Face-Resources" -> "AlfredXiangWu/face_verification_experiment"
"betars/Face-Resources" -> "chenriwei/DeepFace"
"betars/Face-Resources" -> "happynear/FaceVerification"
"betars/Face-Resources" -> "wy1iu/sphereface"
"betars/Face-Resources" -> "tornadomeet/mxnet-face"
"betars/Face-Resources" -> "kpzhang93/MTCNN_face_detection_alignment"
"betars/Face-Resources" -> "iacopomasi/face_specific_augm" ["e"=1]
"betars/Face-Resources" -> "happynear/NormFace"
"betars/Face-Resources" -> "yulequan/face-alignment-in-3000fps"
"betars/Face-Resources" -> "AlphaQi/MTCNN-light"
"betars/Face-Resources" -> "CongWeilin/mtcnn-caffe"
"betars/Face-Resources" -> "chenriwei/FaceTools"
"betars/Face-Resources" -> "Seanlinx/mtcnn"
"betars/Face-Resources" -> "Rock-100/FaceKit"
"anson0910/CNN_face_detection" -> "guoyilin/FaceDetection_CNN"
"anson0910/CNN_face_detection" -> "mks0601/A-Convolutional-Neural-Network-Cascade-for-Face-Detection"
"anson0910/CNN_face_detection" -> "layumi/2015_Face_Detection"
"anson0910/CNN_face_detection" -> "luoyetx/JDA"
"anson0910/CNN_face_detection" -> "CongWeilin/mtcnn-caffe"
"anson0910/CNN_face_detection" -> "yulequan/face-alignment-in-3000fps"
"anson0910/CNN_face_detection" -> "aosokin/cnn_head_detection"
"anson0910/CNN_face_detection" -> "ydwen/caffe-face"
"anson0910/CNN_face_detection" -> "anson0910/CNN_face_detection_models"
"anson0910/CNN_face_detection" -> "luoyetx/deep-landmark"
"anson0910/CNN_face_detection" -> "Seanlinx/mtcnn"
"anson0910/CNN_face_detection" -> "cheind/dest"
"anson0910/CNN_face_detection" -> "sai-bi/FaceAlignment"
"anson0910/CNN_face_detection" -> "dlunion/mtcnn"
"anson0910/CNN_face_detection" -> "foreverYoungGitHub/CascadeCNN"
"aosokin/cnn_head_detection" -> "pranoyr/head-detection-using-yolo"
"aosokin/cnn_head_detection" -> "Russell91/ReInspect" ["e"=1]
"aosokin/cnn_head_detection" -> "HCIILAB/SCUT-HEAD-Dataset-Release"
"aosokin/cnn_head_detection" -> "anson0910/CNN_face_detection"
"aosokin/cnn_head_detection" -> "aditya-vora/FCHD-Fully-Convolutional-Head-Detector"
"aosokin/cnn_head_detection" -> "layumi/2015_Face_Detection"
"thohemp/6DRepNet" -> "thohemp/6DRepNet360"
"thohemp/6DRepNet" -> "choyingw/SynergyNet" ["e"=1]
"thohemp/6DRepNet" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"thohemp/6DRepNet" -> "vitoralbiero/img2pose"
"thohemp/6DRepNet" -> "andresprados/SPIGA" ["e"=1]
"thohemp/6DRepNet" -> "Ahmednull/L2CS-Net" ["e"=1]
"thohemp/6DRepNet" -> "shamangary/FSA-Net"
"thohemp/6DRepNet" -> "omasaht/headpose-fsanet-pytorch"
"thohemp/6DRepNet" -> "natanielruiz/deep-head-pose"
"thohemp/6DRepNet" -> "hnuzhy/DirectMHP"
"thohemp/6DRepNet" -> "jhb86253817/PIPNet"
"thohemp/6DRepNet" -> "xucong-zhang/ETH-XGaze" ["e"=1]
"thohemp/6DRepNet" -> "PINTO0309/DMHead"
"thohemp/6DRepNet" -> "lyp-deeplearning/MOS-Multi-Task-Face-Detect"
"thohemp/6DRepNet" -> "1996scarlet/Dense-Head-Pose-Estimation"
"luoyetx/face-alignment-at-3000fps" -> "freesouls/face-alignment-at-3000fps"
"luoyetx/face-alignment-at-3000fps" -> "yulequan/face-alignment-in-3000fps"
"luoyetx/face-alignment-at-3000fps" -> "jwyang/face-alignment"
"luoyetx/face-alignment-at-3000fps" -> "sai-bi/FaceAlignment"
"luoyetx/face-alignment-at-3000fps" -> "wincle/NPD"
"luoyetx/face-alignment-at-3000fps" -> "luoyetx/deep-landmark"
"luoyetx/face-alignment-at-3000fps" -> "luoyetx/JDA"
"luoyetx/face-alignment-at-3000fps" -> "ElegantGod/ncnn"
"luoyetx/face-alignment-at-3000fps" -> "blankWorld/MTCNN-Accelerate-Onet"
"luoyetx/face-alignment-at-3000fps" -> "kensun0/Joint-Cascade-Face-Detection-and-Alignment"
"chenriwei/FaceTools" -> "hqli/face_recognition"
"chenriwei/FaceTools" -> "chenriwei/DeepFace"
"chenriwei/FaceTools" -> "happynear/FaceVerification"
"chenriwei/FaceTools" -> "betars/Face-Resources"
"chenriwei/FaceTools" -> "AlfredXiangWu/face_verification_experiment"
"chenriwei/FaceTools" -> "ydwen/caffe-face"
"chenriwei/FaceTools" -> "wjgaas/DeepID2"
"chenriwei/FaceTools" -> "luoyetx/deep-landmark"
"chenriwei/FaceTools" -> "Tonyfy/LCNN_TRAIN"
"chenriwei/FaceTools" -> "Seanlinx/mtcnn"
"chenriwei/FaceTools" -> "CongWeilin/mtcnn-caffe"
"chenriwei/FaceTools" -> "yulequan/face-alignment-in-3000fps"
"chenriwei/FaceTools" -> "dlunion/mtcnn"
"chenriwei/FaceTools" -> "tornadomeet/mxnet-face"
"chenriwei/FaceTools" -> "cyh24/Joint-Bayesian"
"chenriwei/DeepFace" -> "ydwen/caffe-face"
"chenriwei/DeepFace" -> "AlfredXiangWu/face_verification_experiment"
"chenriwei/DeepFace" -> "betars/Face-Resources"
"chenriwei/DeepFace" -> "happynear/FaceVerification"
"chenriwei/DeepFace" -> "wy1iu/sphereface"
"chenriwei/DeepFace" -> "kpzhang93/MTCNN_face_detection_alignment"
"chenriwei/DeepFace" -> "chenriwei/FaceTools"
"chenriwei/DeepFace" -> "hqli/face_recognition"
"chenriwei/DeepFace" -> "dlunion/mtcnn"
"chenriwei/DeepFace" -> "CongWeilin/mtcnn-caffe"
"chenriwei/DeepFace" -> "stdcoutzyx/DeepID_FaceClassify"
"chenriwei/DeepFace" -> "Seanlinx/mtcnn"
"chenriwei/DeepFace" -> "seetaface/SeetaFaceEngine"
"chenriwei/DeepFace" -> "AlphaQi/MTCNN-light"
"chenriwei/DeepFace" -> "happynear/NormFace"
"zhzhanp/TCDCN-face-alignment" -> "ishay2b/VanillaCNN"
"zhzhanp/TCDCN-face-alignment" -> "zhusz/CVPR15-CFSS"
"zhzhanp/TCDCN-face-alignment" -> "chengzhengxin/sdm"
"zhzhanp/TCDCN-face-alignment" -> "jwyang/face-alignment"
"zhzhanp/TCDCN-face-alignment" -> "tornadomeet/mxnet-face"
"zhzhanp/TCDCN-face-alignment" -> "patrikhuber/superviseddescent"
"zhzhanp/TCDCN-face-alignment" -> "trigeorgis/mdm"
"zhzhanp/TCDCN-face-alignment" -> "yulequan/face-alignment-in-3000fps"
"zhzhanp/TCDCN-face-alignment" -> "MarekKowalski/DeepAlignmentNetwork"
"zhzhanp/TCDCN-face-alignment" -> "mrgloom/Face-landmarks-detection-benchmark"
"zhzhanp/TCDCN-face-alignment" -> "qiexing/face-landmark-localization"
"zhzhanp/TCDCN-face-alignment" -> "flyingzhao/tfTCDCN"
"zhzhanp/TCDCN-face-alignment" -> "takiyu/hyperface"
"zhzhanp/TCDCN-face-alignment" -> "panda-lab/face-landmark"
"zhzhanp/TCDCN-face-alignment" -> "luoyetx/deep-landmark"
"mk-minchul/AdaFace" -> "IrvingMeng/MagFace"
"mk-minchul/AdaFace" -> "mk-minchul/CVLface"
"mk-minchul/AdaFace" -> "Tencent/TFace"
"mk-minchul/AdaFace" -> "HuangYG123/CurricularFace"
"mk-minchul/AdaFace" -> "JDAI-CV/FaceX-Zoo"
"mk-minchul/AdaFace" -> "fdbtrs/ElasticFace"
"mk-minchul/AdaFace" -> "mk-minchul/caface"
"mk-minchul/AdaFace" -> "pterhoer/QMagFace"
"mk-minchul/AdaFace" -> "cavalleria/cavaface"
"mk-minchul/AdaFace" -> "ronghuaiyang/arcface-pytorch"
"mk-minchul/AdaFace" -> "wujiyang/Face_Pytorch"
"mk-minchul/AdaFace" -> "HamadYA/GhostFaceNets"
"mk-minchul/AdaFace" -> "ydwen/opensphere"
"mk-minchul/AdaFace" -> "microsoft/DigiFace1M"
"mk-minchul/AdaFace" -> "TreB1eN/InsightFace_Pytorch"
"ydwen/opensphere" -> "cavalleria/cavaface"
"ydwen/opensphere" -> "HuangYG123/CurricularFace"
"ydwen/opensphere" -> "mk-minchul/AdaFace"
"waiterxiaoyy/waiter-facerecognition-python" -> "xg-zhang/faceRegister"
"waiterxiaoyy/waiter-facerecognition-python" -> "66pig/face_recognition"
"waiterxiaoyy/waiter-facerecognition-python" -> "eai2x/Face-Recognition-Class-Attendance-System"
"waiterxiaoyy/waiter-facerecognition-python" -> "luqicoder/FR-system"
"waiterxiaoyy/waiter-facerecognition-python" -> "mengyue0722/Face-swiping-Time-Attendance-System"
"waiterxiaoyy/waiter-facerecognition-python" -> "liqq1228/python-opencv"
"waiterxiaoyy/waiter-facerecognition-python" -> "waiterxiaoyy/waiter-vue-web"
"waiterxiaoyy/waiter-facerecognition-python" -> "waiterxiaoyy/waiter-admin"
"waiterxiaoyy/waiter-facerecognition-python" -> "hualuoo/dormitory_menage_system"
"lyp-deeplearning/MOS-Multi-Task-Face-Detect" -> "hnuzhy/DirectMHP"
"lyp-deeplearning/MOS-Multi-Task-Face-Detect" -> "PINTO0309/HeadPoseEstimation-WHENet-yolov4-onnx-openvino"
"lyp-deeplearning/MOS-Multi-Task-Face-Detect" -> "omasaht/headpose-fsanet-pytorch"
"PINTO0309/HeadPoseEstimation-WHENet-yolov4-onnx-openvino" -> "PINTO0309/DMHead"
"suojiashun/HIT-UAV-Infrared-Thermal-Dataset" -> "fabiopoiesi/monet_dataset"
"suojiashun/HIT-UAV-Infrared-Thermal-Dataset" -> "zhang-pengyu/DUT-VTUAV" ["e"=1]
"suojiashun/HIT-UAV-Infrared-Thermal-Dataset" -> "zhanglw882/ISTDU-Net" ["e"=1]
"cheind/dest" -> "patrikhuber/superviseddescent"
"cheind/dest" -> "sai-bi/FaceAlignment"
"cheind/dest" -> "yulequan/face-alignment-in-3000fps"
"cheind/dest" -> "luoyetx/JDA"
"cheind/dest" -> "patrikhuber/4dface" ["e"=1]
"cheind/dest" -> "junyanz/FaceDemo" ["e"=1]
"cheind/dest" -> "chengzhengxin/sdm"
"cheind/dest" -> "trigeorgis/mdm"
"cheind/dest" -> "KeeganRen/FaceReconstruction" ["e"=1]
"cheind/dest" -> "MichaelMure/3DMM" ["e"=1]
"cheind/dest" -> "zhusz/CVPR15-CFSS"
"cheind/dest" -> "TadasBaltrusaitis/CLM-framework"
"cheind/dest" -> "luoyetx/face-alignment-at-3000fps"
"cheind/dest" -> "1adrianb/binary-face-alignment" ["e"=1]
"cheind/dest" -> "andrejmaris/facefit"
"cyh24/Joint-Bayesian" -> "stdcoutzyx/DeepID_FaceClassify"
"cyh24/Joint-Bayesian" -> "happynear/FaceVerification"
"cyh24/Joint-Bayesian" -> "lufo816/face_verification_demo"
"cyh24/Joint-Bayesian" -> "MaoXu/Joint_Bayesian"
"cyh24/Joint-Bayesian" -> "happynear/NormFace"
"cyh24/Joint-Bayesian" -> "AlfredXiangWu/face_verification_experiment"
"cyh24/Joint-Bayesian" -> "jinze1994/DeepID1"
"cyh24/Joint-Bayesian" -> "shaoguangcheng/faceFrontalization" ["e"=1]
"cyh24/Joint-Bayesian" -> "betars/Face-Resources"
"cyh24/Joint-Bayesian" -> "wjgaas/DeepID2"
"cyh24/Joint-Bayesian" -> "shen1994/DeepID"
"cyh24/Joint-Bayesian" -> "chenriwei/FaceTools"
"cyh24/Joint-Bayesian" -> "hqli/face_recognition"
"spacewalk01/yolov5-fire-detection" -> "robmarkcole/fire-detection-from-images"
"spacewalk01/yolov5-fire-detection" -> "Abonia1/YOLOv8-Fire-and-Smoke-Detection"
"spacewalk01/yolov5-fire-detection" -> "MuhammadMoinFaisal/FireDetectionYOLOv8"
"spacewalk01/yolov5-fire-detection" -> "gengyanlei/fire-smoke-detect-yolov4"
"spacewalk01/yolov5-fire-detection" -> "RichardoMrMu/yolov5-fire-smoke-detect-python"
"spacewalk01/yolov5-fire-detection" -> "gaiasd/DFireDataset"
"spacewalk01/yolov5-fire-detection" -> "DeepQuestAI/Fire-Smoke-Dataset"
"spacewalk01/yolov5-fire-detection" -> "tobybreckon/fire-detection-cnn"
"spacewalk01/yolov5-fire-detection" -> "AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle"
"spacewalk01/yolov5-fire-detection" -> "jackfrost1411/fire-detection"
"spacewalk01/yolov5-fire-detection" -> "noorkhokhar99/Fire-Detection-using-YOLOv8"
"spacewalk01/yolov5-fire-detection" -> "OlafenwaMoses/FireNET"
"Leliana/WhatsThis" -> "zhangqianhui/CnnForAndroid"
"Leliana/WhatsThis" -> "pppoe/WhatsThis-iOS"
"Leliana/WhatsThis" -> "sh1r0/caffe-android-demo"
"Leliana/WhatsThis" -> "sh1r0/caffe-android-lib"
"davisking/dlib-models" -> "davisking/dlib"
"davisking/dlib-models" -> "ageitgey/face_recognition_models"
"davisking/dlib-models" -> "tzutalin/dlib-android"
"davisking/dlib-models" -> "TadasBaltrusaitis/OpenFace"
"davisking/dlib-models" -> "kpzhang93/MTCNN_face_detection_alignment"
"davisking/dlib-models" -> "1adrianb/face-alignment"
"davisking/dlib-models" -> "lincolnhard/head-pose-estimation"
"davisking/dlib-models" -> "natanielruiz/deep-head-pose"
"davisking/dlib-models" -> "mpatacchiola/deepgaze"
"davisking/dlib-models" -> "ipazc/mtcnn"
"davisking/dlib-models" -> "yinguobing/head-pose-estimation"
"davisking/dlib-models" -> "davidsandberg/facenet"
"davisking/dlib-models" -> "codeniko/shape_predictor_81_face_landmarks"
"davisking/dlib-models" -> "patrikhuber/eos" ["e"=1]
"davisking/dlib-models" -> "switchablenorms/CelebAMask-HQ" ["e"=1]
"FaceDetect/jointCascade_py" -> "kensun0/Joint-Cascade-Face-Detection-and-Alignment"
"FaceDetect/jointCascade_py" -> "FacialLandmark/landmark_py"
"FaceDetect/jointCascade_py" -> "luoyetx/JDA"
"FaceDetect/jointCascade_py" -> "andyhx/JointCascadeFaceDetection"
"FaceDetect/jointCascade_py" -> "tntrung/sdm_face_alignment"
"StephenMilborrow/muct" -> "mrgloom/Face-landmarks-detection-benchmark"
"datarootsio/databooks" -> "datarootsio/fresh-coffee-listener"
"datarootsio/databooks" -> "datarootsio/ml-skeleton-py"
"datarootsio/databooks" -> "datarootsio/expiring-lru-cache"
"datarootsio/databooks" -> "datarootsio/tutorial-face-mask-detection"
"datarootsio/databooks" -> "datarootsio/tf-profile"
"datarootsio/databooks" -> "datarootsio/tutorial-mlops"
"uricamic/flandmark" -> "uricamic/clandmark"
"vectornguyen76/face-recognition" -> "vectornguyen76/search-engine-system"
"luoyetx/JDA" -> "kensun0/Joint-Cascade-Face-Detection-and-Alignment"
"luoyetx/JDA" -> "FaceDetect/jointCascade_py"
"luoyetx/JDA" -> "wincle/NPD"
"luoyetx/JDA" -> "CitrusRokid/OpenNPD"
"luoyetx/JDA" -> "patrikhuber/superviseddescent"
"luoyetx/JDA" -> "yulequan/face-alignment-in-3000fps"
"luoyetx/JDA" -> "jwyang/face-alignment"
"luoyetx/JDA" -> "tntrung/sdm_face_alignment"
"luoyetx/JDA" -> "freesouls/face-alignment-at-3000fps"
"luoyetx/JDA" -> "luoyetx/deep-landmark"
"luoyetx/JDA" -> "layumi/2015_Face_Detection"
"luoyetx/JDA" -> "luoyetx/face-alignment-at-3000fps"
"luoyetx/JDA" -> "cheind/dest"
"luoyetx/JDA" -> "tornadomeet/mxnet-face"
"luoyetx/JDA" -> "imistyrain/SeetaFace4Android"
"fdbtrs/QuantFace" -> "naserdamer/MorDIFF"
"fdbtrs/QuantFace" -> "fdbtrs/Synthetic-Face-Recognition"
"fdbtrs/QuantFace" -> "fdbtrs/Unsupervised-Face-Recognition-using-Unlabeled-Synthetic-Data"
"fdbtrs/QuantFace" -> "fdbtrs/mixfacenets"
"fdbtrs/QuantFace" -> "fdbtrs/PocketNet"
"nhshin-mcl/MWR" -> "paplhjak/Facial-Age-Estimation-Benchmark"
"mrgloom/Face-landmarks-detection-benchmark" -> "chengzhengxin/sdm"
"mrgloom/Face-landmarks-detection-benchmark" -> "610265158/face_landmark"
"mrgloom/Face-landmarks-detection-benchmark" -> "wywu/LAB"
"mrgloom/Face-landmarks-detection-benchmark" -> "jwyang/face-alignment"
"mrgloom/Face-landmarks-detection-benchmark" -> "MarekKowalski/DeepAlignmentNetwork"
"mrgloom/Face-landmarks-detection-benchmark" -> "luigivieira/Facial-Landmarks-Annotation-Tool"
"mrgloom/Face-landmarks-detection-benchmark" -> "yulequan/face-alignment-in-3000fps"
"mrgloom/Face-landmarks-detection-benchmark" -> "zhzhanp/TCDCN-face-alignment"
"mrgloom/Face-landmarks-detection-benchmark" -> "qiexing/face-landmark-localization"
"mrgloom/Face-landmarks-detection-benchmark" -> "D-X-Y/landmark-detection"
"mrgloom/Face-landmarks-detection-benchmark" -> "trigeorgis/mdm"
"mrgloom/Face-landmarks-detection-benchmark" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"mrgloom/Face-landmarks-detection-benchmark" -> "panda-lab/face-landmark"
"mrgloom/Face-landmarks-detection-benchmark" -> "ishay2b/VanillaCNN"
"mrgloom/Face-landmarks-detection-benchmark" -> "luoyetx/face-alignment-at-3000fps"
"qiexing/face-landmark-localization" -> "panda-lab/face-landmark"
"qiexing/face-landmark-localization" -> "luoyetx/deep-landmark"
"qiexing/face-landmark-localization" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"qiexing/face-landmark-localization" -> "yulequan/face-alignment-in-3000fps"
"qiexing/face-landmark-localization" -> "chengzhengxin/sdm"
"qiexing/face-landmark-localization" -> "blankWorld/MTCNN-Accelerate-Onet"
"qiexing/face-landmark-localization" -> "CongWeilin/mtcnn-caffe"
"qiexing/face-landmark-localization" -> "ElegantGod/ncnn"
"qiexing/face-landmark-localization" -> "MarekKowalski/DeepAlignmentNetwork"
"qiexing/face-landmark-localization" -> "ydwen/caffe-face"
"qiexing/face-landmark-localization" -> "ishay2b/VanillaCNN"
"qiexing/face-landmark-localization" -> "dlunion/mtcnn"
"qiexing/face-landmark-localization" -> "mrgloom/Face-landmarks-detection-benchmark"
"qiexing/face-landmark-localization" -> "foreverYoungGitHub/MTCNN"
"qiexing/face-landmark-localization" -> "zhzhanp/TCDCN-face-alignment"
"spmallick/dlib" -> "spmallick/learnopencv" ["e"=1]
"spmallick/dlib" -> "lincolnhard/head-pose-estimation"
"spmallick/dlib" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"spmallick/dlib" -> "zweigraf/face-landmarking-ios"
"spmallick/dlib" -> "Santhosh-KS/spookfish"
"spmallick/dlib" -> "FaceAR/OpenFaceIOS"
"spmallick/dlib" -> "spmallick/opencv-haar-classifier-training"
"spmallick/dlib" -> "mpatacchiola/deepgaze"
"spmallick/dlib" -> "yinguobing/head-pose-estimation"
"spmallick/dlib" -> "TadasBaltrusaitis/CLM-framework"
"spmallick/dlib" -> "hrastnik/face_detect_n_track"
"spmallick/dlib" -> "YuvalNirkin/face_segmentation" ["e"=1]
"spmallick/dlib" -> "davheld/GOTURN" ["e"=1]
"xlite-dev/torchlm" -> "jhb86253817/PIPNet"
"xlite-dev/torchlm" -> "choyingw/SynergyNet" ["e"=1]
"xlite-dev/torchlm" -> "Jiahao-UTS/SLPT-master"
"xlite-dev/torchlm" -> "610265158/face_landmark"
"Jiahao-UTS/SLPT-master" -> "Jiahao-UTS/DSLPT"
"Jiahao-UTS/SLPT-master" -> "starhiking/HeatmapInHeatmap"
"Jiahao-UTS/SLPT-master" -> "huangyangyu/ADNet"
"Jiahao-UTS/SLPT-master" -> "ZhenglinZhou/STAR"
"Jiahao-UTS/SLPT-master" -> "starhiking/ATF"
"Jiahao-UTS/SLPT-master" -> "jhb86253817/PIPNet"
"GilLevi/AgeGenderDeepLearning" -> "dpressel/rude-carnie"
"GilLevi/AgeGenderDeepLearning" -> "yu4u/age-gender-estimation"
"GilLevi/AgeGenderDeepLearning" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"GilLevi/AgeGenderDeepLearning" -> "shamangary/SSR-Net"
"GilLevi/AgeGenderDeepLearning" -> "cjiang2/AgeEstimateAdience"
"GilLevi/AgeGenderDeepLearning" -> "tornadomeet/mxnet-face"
"GilLevi/AgeGenderDeepLearning" -> "wayen820/gender_age_estimation_mxnet"
"GilLevi/AgeGenderDeepLearning" -> "guoyilin/FaceDetection_CNN"
"GilLevi/AgeGenderDeepLearning" -> "Tony607/Keras_age_gender"
"GilLevi/AgeGenderDeepLearning" -> "Russell91/ReInspect" ["e"=1]
"GilLevi/AgeGenderDeepLearning" -> "eveningglow/age-and-gender-classification"
"GilLevi/AgeGenderDeepLearning" -> "ydwen/caffe-face"
"GilLevi/AgeGenderDeepLearning" -> "kpzhang93/MTCNN_face_detection_alignment"
"GilLevi/AgeGenderDeepLearning" -> "CongWeilin/mtcnn-caffe"
"GilLevi/AgeGenderDeepLearning" -> "ElegantGod/ncnn"
"RichardoMrMu/yolov5-smoke-detection-python" -> "RichardoMrMu/yolov5-helmet-detection"
"tzutalin/Android-Object-Detection" -> "sh1r0/caffe-android-lib"
"tzutalin/Android-Object-Detection" -> "sh1r0/caffe-android-demo"
"tzutalin/Android-Object-Detection" -> "natanielruiz/android-yolo"
"tzutalin/Android-Object-Detection" -> "zhangqianhui/CnnForAndroid"
"tzutalin/Android-Object-Detection" -> "szaza/android-yolo-v2"
"tzutalin/Android-Object-Detection" -> "alexkarargyris/Caffe_OpenCV_Android_App"
"tzutalin/Android-Object-Detection" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"tzutalin/Android-Object-Detection" -> "imistyrain/SeetaFace4Android"
"meilfang/LMFD-PAD" -> "NetoPedro/FocusFace"
"meilfang/LMFD-PAD" -> "fdbtrs/mixfacenets"
"fdbtrs/CR-FIQA" -> "jankolf/GraFIQs"
"fdbtrs/CR-FIQA" -> "pterhoer/QMagFace"
"fdbtrs/CR-FIQA" -> "fdbtrs/QuantFace"
"fdbtrs/CR-FIQA" -> "fdbtrs/SFace-Privacy-friendly-and-Accurate-Face-Recognition-using-Synthetic-Data"
"fdbtrs/CR-FIQA" -> "pterhoer/ExplainableFaceImageQuality"
"fdbtrs/CR-FIQA" -> "meilfang/SynthASpoof"
"fdbtrs/CR-FIQA" -> "LSIbabnikz/eDifFIQA"
"fdbtrs/CR-FIQA" -> "fdbtrs/ElasticFace"
"fdbtrs/CR-FIQA" -> "meilfang/LMFD-PAD"
"fdbtrs/CR-FIQA" -> "LSIbabnikz/DifFIQA"
"fdbtrs/CR-FIQA" -> "fdbtrs/mixfacenets"
"fdbtrs/CR-FIQA" -> "naserdamer/MorDIFF"
"fdbtrs/CR-FIQA" -> "KaenChan/lightqnet"
"LSIbabnikz/FaceQAN" -> "LSIbabnikz/eDifFIQA"
"xiaolonw/caffe-video_triplet" -> "luhaofang/tripletloss"
"xiaolonw/caffe-video_triplet" -> "hizhangp/triplet"
"xiaolonw/caffe-video_triplet" -> "wujiyang/Triplet-Loss"
"xiaolonw/caffe-video_triplet" -> "daerduoCarey/SpatialTransformerLayer" ["e"=1]
"KyrieIrv11ng/Yolov5-driving-detection" -> "Aristochi/Dangerous_driving_behavior_detection"
"waiterxiaoyy/waiter-admin" -> "waiterxiaoyy/waiter-vue-web"
"waiterxiaoyy/waiter-vue-web" -> "waiterxiaoyy/waiter-admin"
"melgor/Triplet-Learning" -> "guoyilin/caffe"
"melgor/Triplet-Learning" -> "jhjin/triplet-criterion"
"yangjian1218/seetaface6ToPy" -> "zjd1988/seetaface6_onnx_model"
"wanji/caffe-sl" -> "tyandzx/caffe"
"wanji/caffe-sl" -> "guoyilin/caffe"
"wanji/caffe-sl" -> "wujiyang/Triplet-Loss"
"wanji/caffe-sl" -> "luhaofang/tripletloss"
"KaenChan/lightqnet-train" -> "KaenChan/lightqnet"
"kennyvoo/face-occlusion-generation" -> "face3d0725/FaceExtraction"
"kennyvoo/face-occlusion-generation" -> "Baojin-Huang/Webface-OCC"
"greatyao/asmlibrary" -> "jiapei100/VOSM"
"greatyao/asmlibrary" -> "greatyao/aamlibrary"
"greatyao/asmlibrary" -> "cxcxcxcx/asmlib-opencv"
"greatyao/asmlibrary" -> "juan-cardelino/stasm"
"greatyao/asmlibrary" -> "derfred/asmlib-opencv"
"pterhoer/QMagFace" -> "fdbtrs/SFace-Privacy-friendly-and-Accurate-Face-Recognition-using-Synthetic-Data"
"pterhoer/QMagFace" -> "fdbtrs/ElasticFace"
"pterhoer/QMagFace" -> "pterhoer/ExplainableFaceImageQuality"
"pterhoer/QMagFace" -> "fdbtrs/CR-FIQA"
"pterhoer/QMagFace" -> "fdbtrs/IDiff-Face"
"pterhoer/QMagFace" -> "KaenChan/ProbFace"
"pterhoer/QMagFace" -> "jankolf/GraFIQs"
"pterhoer/QMagFace" -> "marcohuber/xSSAB"
"pterhoer/QMagFace" -> "NetoPedro/OCFR-2022"
"pterhoer/QMagFace" -> "jonasgrebe/pt-femb-face-embeddings"
"pterhoer/QMagFace" -> "naserdamer/MorDIFF"
"lancezhange/smoke_recognition" -> "chasezcz/smokeRecognize"
"lancezhange/smoke_recognition" -> "JavisDaDa/SmokeDetectionCNN"
"datarootsio/tutorial-mlops" -> "datarootsio/expiring-lru-cache"
"datarootsio/tutorial-mlops" -> "datarootsio/.github"
"kensun0/Joint-Cascade-Face-Detection-and-Alignment" -> "FaceDetect/jointCascade_py"
"kensun0/Joint-Cascade-Face-Detection-and-Alignment" -> "andyhx/JointCascadeFaceDetection"
"kensun0/Joint-Cascade-Face-Detection-and-Alignment" -> "luoyetx/JDA"
"NetoPedro/FocusFace" -> "fdbtrs/Masked-Face-Recognition-KD"
"fdbtrs/Masked-Face-Recognition-KD" -> "NetoPedro/FocusFace"
"fdbtrs/Masked-Face-Recognition-KD" -> "haoosz/FFR-Net"
"fdbtrs/Masked-Face-Recognition-KD" -> "haibo-qiu/FROM"
"fdbtrs/Masked-Face-Recognition-KD" -> "fdbtrs/Self-restrained-Triplet-Loss"
"haibo-qiu/FROM" -> "fdbtrs/Masked-Face-Recognition-KD"
"haibo-qiu/FROM" -> "haoosz/FFR-Net"
"haibo-qiu/FROM" -> "NetoPedro/FocusFace"
"haibo-qiu/FROM" -> "Baojin-Huang/Webface-OCC"
"faeya/traffic-sign-classification" -> "karthiknagarajansundar/automatic-music-generation"
"amanbasu/wildfire-detection" -> "dbdmg/rescue"
"RichardoMrMu/yolov5-fire-smoke-detect" -> "RichardoMrMu/yolov5-fire-smoke-detect-python"
"RichardoMrMu/yolov5-fire-smoke-detect-python" -> "RichardoMrMu/yolov5-fire-smoke-detect"
"naserdamer/SMDD-Synthetic-Face-Morphing-Attack-Detection-Development-dataset" -> "meilfang/SPL-MAD"
"MouxiaoHuang/DUL" -> "Ontheway361/dul-pytorch"
"qiexing/caffe-regression" -> "olddocks/caffe-facialkp"
"RichardoMrMu/yolov5-helmet-detection-python" -> "RichardoMrMu/yolov5-helmet-detection"
"Copyleaks/Java-Plagiarism-Checker" -> "Copyleaks/Ruby-Plagiarism-Checker"
"zjd1988/seetaface6_onnx_model" -> "zjd1988/seetaface2_onnx_model"
"zjd1988/seetaface6_onnx_model" -> "yangjian1218/seetaface6ToPy"
"starhiking/HeatmapInHeatmap" -> "Jiahao-UTS/SLPT-master"
"starhiking/HeatmapInHeatmap" -> "huangyangyu/ADNet"
"starhiking/HeatmapInHeatmap" -> "Jiahao-UTS/DSLPT"
"yangjian1218/seetaface6JNIToAPP" -> "yangkang2021/SeetaFace6-Build"
"yangjian1218/seetaface6JNIToAPP" -> "CodingNowPls/SeetaFace64Android"
"RichardoMrMu/yolov5-helmet-detection" -> "RichardoMrMu/yolov5-helmet-detection-python"
"leowjs/Masked-Face-Recognition" -> "susithrj/MaskNet-Occlusion-Invariant-Face-Recognition-System"
"leowjs/Masked-Face-Recognition" -> "Nagasai524/Masked-Face-Recognition-using-Facenet"
"davidsandberg/facenet" -> "cmusatyalab/openface"
"davidsandberg/facenet" -> "kpzhang93/MTCNN_face_detection_alignment"
"davidsandberg/facenet" -> "deepinsight/insightface"
"davidsandberg/facenet" -> "ageitgey/face_recognition"
"davidsandberg/facenet" -> "timesler/facenet-pytorch"
"davidsandberg/facenet" -> "davisking/dlib"
"davidsandberg/facenet" -> "ShiqiYu/libfacedetection"
"davidsandberg/facenet" -> "ChanChiChoi/awesome-Face_Recognition"
"davidsandberg/facenet" -> "TadasBaltrusaitis/OpenFace"
"davidsandberg/facenet" -> "AITTSMD/MTCNN-Tensorflow"
"davidsandberg/facenet" -> "1adrianb/face-alignment"
"davidsandberg/facenet" -> "rbgirshick/py-faster-rcnn" ["e"=1]
"davidsandberg/facenet" -> "tensorflow/models" ["e"=1]
"davidsandberg/facenet" -> "facebookresearch/Detectron" ["e"=1]
"davidsandberg/facenet" -> "ZhaoJ9014/face.evoLVe"
"fabianp/minirank" -> "fabianp/mord"
"kong36088/BaiduImageSpider" -> "QianyanTech/Image-Downloader" ["e"=1]
"kong36088/BaiduImageSpider" -> "nnngu/BaiduImageDownload" ["e"=1]
"kong36088/BaiduImageSpider" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"kong36088/BaiduImageSpider" -> "Star-Clouds/CenterFace"
"kong36088/BaiduImageSpider" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"kong36088/BaiduImageSpider" -> "ydwen/caffe-face"
"kong36088/BaiduImageSpider" -> "Rock-100/FaceKit"
"kong36088/BaiduImageSpider" -> "kpzhang93/MTCNN_face_detection_alignment"
"kong36088/BaiduImageSpider" -> "Robert-JunWang/Pelee" ["e"=1]
"kong36088/BaiduImageSpider" -> "SeuTao/FaceBagNet" ["e"=1]
"kong36088/BaiduImageSpider" -> "wywu/LAB"
"kong36088/BaiduImageSpider" -> "Tencent/FaceDetection-DSFD"
"kong36088/BaiduImageSpider" -> "MTLab/onnx2caffe" ["e"=1]
"kong36088/BaiduImageSpider" -> "JDAI-CV/FaceX-Zoo"
"kong36088/BaiduImageSpider" -> "biubug6/Face-Detector-1MB-with-landmark"
"TadasBaltrusaitis/OpenFace" -> "cmusatyalab/openface"
"TadasBaltrusaitis/OpenFace" -> "1adrianb/face-alignment"
"TadasBaltrusaitis/OpenFace" -> "yfeng95/PRNet" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "patrikhuber/eos" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "kpzhang93/MTCNN_face_detection_alignment"
"TadasBaltrusaitis/OpenFace" -> "davidsandberg/facenet"
"TadasBaltrusaitis/OpenFace" -> "seetaface/SeetaFaceEngine"
"TadasBaltrusaitis/OpenFace" -> "cleardusk/3DDFA" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "ShiqiYu/libfacedetection"
"TadasBaltrusaitis/OpenFace" -> "davisking/dlib"
"TadasBaltrusaitis/OpenFace" -> "yfeng95/face3d" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "CMU-Perceptual-Computing-Lab/openpose" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "natanielruiz/deep-head-pose"
"TadasBaltrusaitis/OpenFace" -> "ZheC/Realtime_Multi-Person_Pose_Estimation" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "ChanChiChoi/awesome-Face_Recognition"
"MuhammadMoinFaisal/FireDetectionYOLOv8" -> "Abonia1/YOLOv8-Fire-and-Smoke-Detection"
"MuhammadMoinFaisal/FireDetectionYOLOv8" -> "noorkhokhar99/Fire-Detection-using-YOLOv8"
"MuhammadMoinFaisal/FireDetectionYOLOv8" -> "spacewalk01/yolov5-fire-detection"
"neeek2303/MegaPortraits" -> "neeek2303/Depth-Enhancement-and-Super-Resolution"
"neeek2303/MegaPortraits" -> "neeek2303/Leaf-diseases-segmentation"
"neeek2303/MegaPortraits" -> "neeek2303/Lenta-Hackathon"
"neeek2303/MegaPortraits" -> "maxs-kan/InterpretableNeuroDL"
"neeek2303/MegaPortraits" -> "Kevinfringe/MegaPortrait"
"neeek2303/MegaPortraits" -> "jmliu88/HeSer" ["e"=1]
"neeek2303/MegaPortraits" -> "neeek2303/papers-to-read"
"pedbrgs/Fire-Detection" -> "gaiasd/DFireDataset"
"mpatacchiola/deepgaze" -> "natanielruiz/deep-head-pose"
"mpatacchiola/deepgaze" -> "yinguobing/head-pose-estimation"
"mpatacchiola/deepgaze" -> "CSAILVision/GazeCapture" ["e"=1]
"mpatacchiola/deepgaze" -> "TadasBaltrusaitis/OpenFace"
"mpatacchiola/deepgaze" -> "lincolnhard/head-pose-estimation"
"mpatacchiola/deepgaze" -> "swook/GazeML" ["e"=1]
"mpatacchiola/deepgaze" -> "kpzhang93/MTCNN_face_detection_alignment"
"mpatacchiola/deepgaze" -> "shamangary/FSA-Net"
"mpatacchiola/deepgaze" -> "yfeng95/PRNet" ["e"=1]
"mpatacchiola/deepgaze" -> "betars/Face-Resources"
"mpatacchiola/deepgaze" -> "qiexing/face-landmark-localization"
"mpatacchiola/deepgaze" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"mpatacchiola/deepgaze" -> "Rock-100/FaceKit"
"mpatacchiola/deepgaze" -> "cvlab-uob/Awesome-Gaze-Estimation" ["e"=1]
"mpatacchiola/deepgaze" -> "wywu/LAB"
"ishay2b/VanillaCNN" -> "BobLiu20/FacialLandmark_Caffe"
"ishay2b/VanillaCNN" -> "luoyetx/deep-landmark"
"ishay2b/VanillaCNN" -> "zhzhanp/TCDCN-face-alignment"
"ishay2b/VanillaCNN" -> "qiexing/face-landmark-localization"
"ishay2b/VanillaCNN" -> "shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization"
"ishay2b/VanillaCNN" -> "olddocks/caffe-facialkp"
"ishay2b/VanillaCNN" -> "MarekKowalski/DeepAlignmentNetwork"
"ishay2b/VanillaCNN" -> "blankWorld/MTCNN-Accelerate-Onet"
"luhaofang/tripletloss" -> "hizhangp/triplet"
"luhaofang/tripletloss" -> "xiaolonw/caffe-video_triplet"
"luhaofang/tripletloss" -> "wanji/caffe-sl"
"luhaofang/tripletloss" -> "ydwen/caffe-face"
"luhaofang/tripletloss" -> "AlfredXiangWu/face_verification_experiment"
"luhaofang/tripletloss" -> "rksltnl/Deep-Metric-Learning-CVPR16"
"luhaofang/tripletloss" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"luhaofang/tripletloss" -> "happynear/FaceVerification"
"luhaofang/tripletloss" -> "shicai/DenseNet-Caffe" ["e"=1]
"luhaofang/tripletloss" -> "xialuxi/arcface-caffe"
"luhaofang/tripletloss" -> "happynear/NormFace"
"luhaofang/tripletloss" -> "wjgaas/DeepID2"
"luhaofang/tripletloss" -> "happynear/AMSoftmax"
"luhaofang/tripletloss" -> "liuyuisanai/coco_loss"
"tornadomeet/mxnet-face" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"tornadomeet/mxnet-face" -> "Seanlinx/mtcnn"
"tornadomeet/mxnet-face" -> "happynear/FaceVerification"
"tornadomeet/mxnet-face" -> "AlfredXiangWu/face_verification_experiment"
"tornadomeet/mxnet-face" -> "ydwen/caffe-face"
"tornadomeet/mxnet-face" -> "tfwu/FaceDetection-ConvNet-3D"
"tornadomeet/mxnet-face" -> "zhzhanp/TCDCN-face-alignment"
"tornadomeet/mxnet-face" -> "zhreshold/mxnet-ssd" ["e"=1]
"tornadomeet/mxnet-face" -> "luoyetx/JDA"
"tornadomeet/mxnet-face" -> "AlphaQi/MTCNN-light"
"tornadomeet/mxnet-face" -> "betars/Face-Resources"
"tornadomeet/mxnet-face" -> "luoyetx/deep-landmark"
"tornadomeet/mxnet-face" -> "zhreshold/mxnet-yolo" ["e"=1]
"tornadomeet/mxnet-face" -> "ijkguo/mx-rcnn" ["e"=1]
"tornadomeet/mxnet-face" -> "tqchen/mxnet-gan" ["e"=1]
"hnuzhy/DirectMHP" -> "hnuzhy/JointBDOE"
"hnuzhy/DirectMHP" -> "PINTO0309/DMHead"
"hnuzhy/DirectMHP" -> "lyp-deeplearning/MOS-Multi-Task-Face-Detect"
"hnuzhy/DirectMHP" -> "hnuzhy/CV_DL_Gather"
"microsoft/DigiFace1M" -> "mk-minchul/dcface" ["e"=1]
"microsoft/DigiFace1M" -> "microsoft/FaceSynthetics" ["e"=1]
"microsoft/DigiFace1M" -> "mk-minchul/AdaFace"
"microsoft/DigiFace1M" -> "haibo-qiu/SynFace"
"microsoft/DigiFace1M" -> "pterhoer/QMagFace"
"HamadYA/GhostFaceNets" -> "Hazqeel09/ellzaf_ml"
"HamadYA/GhostFaceNets" -> "otroshi/edgeface"
"HamadYA/GhostFaceNets" -> "fdbtrs/ElasticFace"
"HamadYA/GhostFaceNets" -> "mk-minchul/AdaFace"
"HamadYA/GhostFaceNets" -> "pterhoer/QMagFace"
"HamadYA/GhostFaceNets" -> "mbfaria/ShuffleFaceNet_Pytorch"
"diogocabral/sherlock" -> "arthurzaczek/OSPC"
"hqli/face_recognition" -> "chenriwei/FaceTools"
"hqli/face_recognition" -> "happynear/FaceVerification"
"hqli/face_recognition" -> "wjgaas/DeepID2"
"hqli/face_recognition" -> "PatienceKai/VGG_Face_Caffe_Model"
"hqli/face_recognition" -> "AlfredXiangWu/face_verification_experiment"
"hqli/face_recognition" -> "chenriwei/DeepFace"
"hqli/face_recognition" -> "stdcoutzyx/DeepID_FaceClassify"
"hqli/face_recognition" -> "ydwen/caffe-face"
"hqli/face_recognition" -> "joyhuang9473/deepid-implementation"
"hqli/face_recognition" -> "hizhangp/triplet"
"hqli/face_recognition" -> "betars/Face-Resources"
"hqli/face_recognition" -> "DaFuCoding/MTCNN_Caffe"
"hqli/face_recognition" -> "shen1994/DeepID"
"hqli/face_recognition" -> "cyh24/Joint-Bayesian"
"hqli/face_recognition" -> "luhaofang/tripletloss"
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "bytefish/facerec"
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "uzh-rpg/rpg_open_remode" ["e"=1]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "YuanhaoGong/CurvatureFilter" ["e"=1]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "plotly/plotly_matlab" ["e"=1]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "pdollar/edges" ["e"=1]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "tum-vision/mono_dataset_code" ["e"=1]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "brendenlake/BPL" ["e"=1]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "vlfeat/vlfeat" ["e"=1]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "Russell91/TensorBox" ["e"=1]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "cameronfabbri/Colorful-Image-Colorization" ["e"=1]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" -> "Introduction-to-Autonomous-Robots/Introduction-to-Autonomous-Robots" ["e"=1]
"datarootsio/expiring-lru-cache" -> "datarootsio/tutorial-mlops"
"mks0601/A-Convolutional-Neural-Network-Cascade-for-Face-Detection" -> "anson0910/CNN_face_detection"
"ENCP/CNNdroid" -> "sh1r0/caffe-android-lib"
"ENCP/CNNdroid" -> "zhangqianhui/CnnForAndroid"
"ENCP/CNNdroid" -> "facebookarchive/AICamera"
"ENCP/CNNdroid" -> "sh1r0/caffe-android-demo"
"ENCP/CNNdroid" -> "Maratyszcza/NNPACK" ["e"=1]
"ENCP/CNNdroid" -> "songhan/SqueezeNet-Deep-Compression" ["e"=1]
"ENCP/CNNdroid" -> "mtmd/Mobile_ConvNet"
"ENCP/CNNdroid" -> "in66-dev/In-Prestissimo"
"ENCP/CNNdroid" -> "solrex/caffe-mobile"
"ENCP/CNNdroid" -> "tornadomeet/mxnet-face"
"ENCP/CNNdroid" -> "CAS-CLab/quantized-cnn" ["e"=1]
"ENCP/CNNdroid" -> "google/gemmlowp" ["e"=1]
"ENCP/CNNdroid" -> "ARM-software/ComputeLibrary" ["e"=1]
"ENCP/CNNdroid" -> "Leliana/WhatsThis"
"ENCP/CNNdroid" -> "IntelLabs/SkimCaffe" ["e"=1]
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" -> "MuhammadMoinFaisal/FireDetectionYOLOv8"
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" -> "spacewalk01/yolov5-fire-detection"
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" -> "gaiasd/DFireDataset"
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" -> "noorkhokhar99/Fire-Detection-using-YOLOv8"
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" -> "robmarkcole/fire-detection-from-images"
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" -> "gengyanlei/fire-smoke-detect-yolov4"
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" -> "pedbrgs/Fire-Detection"
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" -> "ytl0623/yolov8-fire-car-and-smoke-detection"
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" -> "SayanSomya/Fire-and-Smoke-detection"
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" -> "Username378/Fire_smoke_monitoring_system"
"serengil/crypto" -> "serengil/exchanging-encrypted-mails"
"serengil/crypto" -> "serengil/neural-networks-py"
"serengil/crypto" -> "serengil/neural-networks"
"serengil/crypto" -> "serengil/h2o-ai-101"
"serengil/crypto" -> "serengil/encrypted-class-loader"
"zweigraf/face-landmarking-ios" -> "FaceAR/OpenFaceIOS"
"zweigraf/face-landmarking-ios" -> "gicheonkang/fast-face-android"
"zweigraf/face-landmarking-ios" -> "YuAo/Vivid" ["e"=1]
"zweigraf/face-landmarking-ios" -> "DroidsOnRoids/VisionFaceDetection"
"zweigraf/face-landmarking-ios" -> "tzutalin/dlib-android-app"
"zweigraf/face-landmarking-ios" -> "chengzhengxin/sdm"
"zweigraf/face-landmarking-ios" -> "tzutalin/dlib-android"
"zweigraf/face-landmarking-ios" -> "erickingxu/MetalImage" ["e"=1]
"zweigraf/face-landmarking-ios" -> "remirobert/Facemotion"
"zweigraf/face-landmarking-ios" -> "cheind/dest"
"zweigraf/face-landmarking-ios" -> "ci2cv/face-analysis-sdk"
"zweigraf/face-landmarking-ios" -> "yinguobing/face-marks"
"zweigraf/face-landmarking-ios" -> "metal-by-example/sample-code" ["e"=1]
"zweigraf/face-landmarking-ios" -> "objcio/issue-21-OpenCV-FaceRec" ["e"=1]
"zweigraf/face-landmarking-ios" -> "Willjay90/AppleFaceDetection"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "ronekko/deep_metric_learning"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "PkuRainBow/HDC.caffe"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "eladhoffer/TripletNet"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "rksltnl/Caffe-Deep-Metric-Learning-CVPR16"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "luhaofang/tripletloss"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "happynear/NormFace"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "bnu-wangxun/Deep_Metric"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "twtygqyy/caffe-augmentation" ["e"=1]
"rksltnl/Deep-Metric-Learning-CVPR16" -> "liuyuisanai/coco_loss"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "msight-tech/research-ms-loss"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "happynear/FaceVerification"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "xiaolonw/caffe-video_triplet"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "AlfredXiangWu/face_verification_experiment"
"rksltnl/Deep-Metric-Learning-CVPR16" -> "jwyang/JULE.torch" ["e"=1]
"rksltnl/Deep-Metric-Learning-CVPR16" -> "wanji/caffe-sl"
"positive666/mediapipe_PoseEstimation_pytorch" -> "zmurez/MediaPipePyTorch"
"Copyleaks/Python-Plagiarism-Checker" -> "Copyleaks/.NET-Plagiarism-Checker"
"Copyleaks/Python-Plagiarism-Checker" -> "Copyleaks/PHP-Plagiarism-Checker"
"Copyleaks/Python-Plagiarism-Checker" -> "Copyleaks/Ruby-Plagiarism-Checker"
"remirobert/Facemotion" -> "joelrfcosta/FaceRecognition"
"remirobert/Facemotion" -> "giomurru/opencv-facerec-tutorial-ios"
"qinggangwu/yolov7-pose_Npoint_Ncla" -> "qinggangwu/yolov5_v6_plate_heading"
"qinggangwu/yolov7-pose_Npoint_Ncla" -> "xialuxi/yolov5-car-plate"
"qinggangwu/yolov7-pose_Npoint_Ncla" -> "nanmi/yolov7-pose"
"qinggangwu/yolov7-pose_Npoint_Ncla" -> "Bigtuo/YOLOv7-Pose-Bytetrack-STGCN"
"Tonyfy/LCNN_TRAIN" -> "liuziwei7/mobile-id"
"Bigtuo/YOLOv7-Pose-Bytetrack-STGCN" -> "Bigtuo/YOLO-POSE-Bytetrack-STGCN"
"zhangqianhui/CnnForAndroid" -> "Leliana/WhatsThis"
"zhangqianhui/CnnForAndroid" -> "solrex/caffe-mobile"
"zhangqianhui/CnnForAndroid" -> "ENCP/CNNdroid"
"zhangqianhui/CnnForAndroid" -> "sh1r0/caffe-android-demo"
"zhangqianhui/CnnForAndroid" -> "sh1r0/caffe-android-lib"
"zhangqianhui/CnnForAndroid" -> "alexkarargyris/Caffe_OpenCV_Android_App"
"zhangqianhui/CnnForAndroid" -> "imistyrain/SeetaFace4Android"
"zhangqianhui/CnnForAndroid" -> "xingwangsfu/caffe-yolo" ["e"=1]
"zhangqianhui/CnnForAndroid" -> "in66-dev/In-Prestissimo"
"betri28/FaceDetectCamera" -> "bytefish/VideoFaceDetection"
"betri28/FaceDetectCamera" -> "RedApparat/FaceDetector" ["e"=1]
"betri28/FaceDetectCamera" -> "gicheonkang/fast-face-android"
"betri28/FaceDetectCamera" -> "blundell/WoodyFaceDetection"
"betri28/FaceDetectCamera" -> "husaynhakeem/android-face-detector"
"wincle/NPD" -> "CitrusRokid/OpenNPD"
"wincle/NPD" -> "luoyetx/JDA"
"wincle/NPD" -> "kensun0/Joint-Cascade-Face-Detection-and-Alignment"
"wincle/NPD" -> "tntrung/sdm_face_alignment"
"wincle/NPD" -> "jwyang/face-alignment-cpp"
"wincle/NPD" -> "luoyetx/face-alignment-at-3000fps"
"huangyangyu/ADNet" -> "huangyangyu/FreeEnricher"
"huangyangyu/ADNet" -> "starhiking/HeatmapInHeatmap"
"huangyangyu/ADNet" -> "Jiahao-UTS/DSLPT"
"nanmi/yolov7-pose" -> "BaofengZan/yolov7-pose-e2e-trt"
"nanmi/yolov7-pose" -> "Gwencong/yolov7-pose-tensorrt"
"nanmi/yolov7-pose" -> "Bigtuo/YOLOv7-Pose-Bytetrack-STGCN"
"nanmi/yolov7-pose" -> "qinggangwu/yolov7-pose_Npoint_Ncla"
"xjg0124/Fire-and-Smoke-Detection" -> "xjg0124/Video_Smoke_Detection"
"xjg0124/Fire-and-Smoke-Detection" -> "hojak99/fire-detection"
"xjg0124/Fire-and-Smoke-Detection" -> "lancezhange/smoke_recognition"
"xjg0124/Fire-and-Smoke-Detection" -> "Lichuanro/smoke-detection-transfer-learning"
"xjg0124/Fire-and-Smoke-Detection" -> "kauser-cse-buet/flame-detection-system"
"tracy100/seetaface6SDK" -> "jamesluozhiwei/seetafaceJNI"
"tracy100/seetaface6SDK" -> "yangjian1218/seetaface6JNIToAPP"
"Martlgap/x-face-verification" -> "Blueblue4/IoU-AwareCalibration" ["e"=1]
"Bigtuo/YOLO-POSE-Bytetrack-STGCN" -> "Bigtuo/YOLOv7-Pose-Bytetrack-STGCN"
"luigivieira/Facial-Landmarks-Annotation-Tool" -> "Mukosame/Face-Annotation-Tool"
"luigivieira/Facial-Landmarks-Annotation-Tool" -> "mrgloom/Face-landmarks-detection-benchmark"
"luigivieira/Facial-Landmarks-Annotation-Tool" -> "luoyetx/face-alignment-at-3000fps"
"pppoe/WhatsThis-iOS" -> "Leliana/WhatsThis"
"PINTO0309/DMHead" -> "PINTO0309/HeadPoseEstimation-WHENet-yolov4-onnx-openvino"
"PINTO0309/DMHead" -> "PINTO0309/Face_Mask_Augmentation"
"AnthonyF333/PFLD_GhostOne" -> "AnthonyF333/FaceLandmark_PFLD_UltraLight"
"fomorians/distracted-drivers-keras" -> "fomorians/distracted-drivers-tf"
"Copyleaks/PHP-Plagiarism-Checker" -> "Copyleaks/.NET-Plagiarism-Checker"
"Copyleaks/PHP-Plagiarism-Checker" -> "Copyleaks/NodeJS-Plagiarism-Checker"
"Copyleaks/PHP-Plagiarism-Checker" -> "Copyleaks/Ruby-Plagiarism-Checker"
"Copyleaks/PHP-Plagiarism-Checker" -> "Copyleaks/Java-Plagiarism-Checker"
"fdbtrs/SFace-Privacy-friendly-and-Accurate-Face-Recognition-using-Synthetic-Data" -> "pterhoer/QMagFace"
"fdbtrs/SFace-Privacy-friendly-and-Accurate-Face-Recognition-using-Synthetic-Data" -> "naserdamer/MorDIFF"
"trancongman276/yolov7-pose" -> "BaofengZan/yolov7-pose-e2e-trt"
"BaofengZan/yolov7-pose-e2e-trt" -> "trancongman276/yolov7-pose"
"mk-minchul/caface" -> "mk-minchul/CVLface"
"Gwencong/yolo-pose-escalator" -> "Gwencong/yolov7-pose-tensorrt"
"Martlgap/octuplet-loss" -> "Martlgap/x-face-verification"
"meilfang/SPL-MAD" -> "naserdamer/MorDIFF"
"naserdamer/MorDIFF" -> "meilfang/SPL-MAD"
"fdbtrs/Unsupervised-Face-Recognition-using-Unlabeled-Synthetic-Data" -> "fdbtrs/ExFaceGAN"
"fdbtrs/Unsupervised-Face-Recognition-using-Unlabeled-Synthetic-Data" -> "fdbtrs/Synthetic-Face-Recognition"
"jhjin/triplet-criterion" -> "melgor/Triplet-Learning"
"NetoPedro/OCFR-2022" -> "jankolf/GraFIQs"
"fomorians/distracted-drivers-tf" -> "fomorians/distracted-drivers-keras"
"Gwencong/yolov7-pose-tensorrt" -> "Gwencong/yolo-pose-escalator"
"seetaface/SeetaFaceEngine" -> "kpzhang93/MTCNN_face_detection_alignment"
"seetaface/SeetaFaceEngine" -> "seetaface/SeetaFaceEngine2"
"seetaface/SeetaFaceEngine" -> "ShiqiYu/libfacedetection"
"seetaface/SeetaFaceEngine" -> "ydwen/caffe-face"
"seetaface/SeetaFaceEngine" -> "TadasBaltrusaitis/OpenFace"
"seetaface/SeetaFaceEngine" -> "wy1iu/sphereface"
"seetaface/SeetaFaceEngine" -> "davidsandberg/facenet"
"seetaface/SeetaFaceEngine" -> "seetafaceengine/SeetaFace2"
"seetaface/SeetaFaceEngine" -> "cmusatyalab/openface"
"seetaface/SeetaFaceEngine" -> "chenriwei/DeepFace"
"seetaface/SeetaFaceEngine" -> "weiliu89/caffe" ["e"=1]
"seetaface/SeetaFaceEngine" -> "zuoqing1988/ZQCNN"
"seetaface/SeetaFaceEngine" -> "liuruoze/EasyPR" ["e"=1]
"seetaface/SeetaFaceEngine" -> "facebookarchive/caffe2" ["e"=1]
"seetaface/SeetaFaceEngine" -> "betars/Face-Resources"
"kongqw/OpenCVForAndroid" -> "doggycoder/AndroidOpenGLDemo" ["e"=1]
"kongqw/OpenCVForAndroid" -> "wuhaoyu1990/MagicCamera" ["e"=1]
"kongqw/OpenCVForAndroid" -> "mabeijianxi/small-video-record" ["e"=1]
"kongqw/OpenCVForAndroid" -> "yuxitong/TensorFlowAndroidDemo"
"kongqw/OpenCVForAndroid" -> "coneypo/Dlib_face_recognition_from_camera"
"kongqw/OpenCVForAndroid" -> "sxpl/FaceAC"
"kongqw/OpenCVForAndroid" -> "aserbao/AndroidCamera" ["e"=1]
"kongqw/OpenCVForAndroid" -> "saki4510t/UVCCamera" ["e"=1]
"kongqw/OpenCVForAndroid" -> "pqpo/SmartCropper" ["e"=1]
"kongqw/OpenCVForAndroid" -> "CJT2325/CameraView" ["e"=1]
"kongqw/OpenCVForAndroid" -> "RedApparat/FaceDetector" ["e"=1]
"kongqw/OpenCVForAndroid" -> "Jasonchenlijian/FastBle" ["e"=1]
"kongqw/OpenCVForAndroid" -> "crazycodeboy/TakePhoto" ["e"=1]
"kongqw/OpenCVForAndroid" -> "gloomyfish1998/opencv4android"
"kongqw/OpenCVForAndroid" -> "dingjikerbo/Android-BluetoothKit" ["e"=1]
"WildChlamydia/MiVOLO" -> "nhshin-mcl/MWR"
"WildChlamydia/MiVOLO" -> "lxq1000/SwinFace"
"WildChlamydia/MiVOLO" -> "Kartik-3004/facexformer" ["e"=1]
"WildChlamydia/MiVOLO" -> "tae898/age-gender"
"WildChlamydia/MiVOLO" -> "paplhjak/Facial-Age-Estimation-Benchmark"
"WildChlamydia/MiVOLO" -> "sajjjadayobi/FaceLib" ["e"=1]
"WildChlamydia/MiVOLO" -> "yiminglin-ai/imdb-clean"
"WildChlamydia/MiVOLO" -> "dchen236/FairFace"
"WildChlamydia/MiVOLO" -> "joojs/fairface"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "Lauszus/FaceRecognitionApp"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "Lauszus/FaceRecognitionLib"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "abhn/marvel"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "gicheonkang/fast-face-android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "pillarpond/face-recognizer-android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "GRAYKEY/mobilefacenet_android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "tzutalin/Android-Object-Detection"
"chengzhengxin/sdm" -> "patrikhuber/superviseddescent"
"chengzhengxin/sdm" -> "panda-lab/face-landmark"
"chengzhengxin/sdm" -> "szad670401/HyperLandmark"
"chengzhengxin/sdm" -> "yulequan/face-alignment-in-3000fps"
"chengzhengxin/sdm" -> "dlunion/mtcnn"
"chengzhengxin/sdm" -> "MarekKowalski/DeepAlignmentNetwork"
"chengzhengxin/sdm" -> "qiexing/face-landmark-localization"
"chengzhengxin/sdm" -> "JACKYLUO1991/106-landmarks-dataset"
"chengzhengxin/sdm" -> "mrgloom/Face-landmarks-detection-benchmark"
"chengzhengxin/sdm" -> "wywu/LAB"
"chengzhengxin/sdm" -> "zhzhanp/TCDCN-face-alignment"
"chengzhengxin/sdm" -> "AlphaQi/MTCNN-light"
"chengzhengxin/sdm" -> "freesouls/face-alignment-at-3000fps"
"chengzhengxin/sdm" -> "Seanlinx/mtcnn"
"chengzhengxin/sdm" -> "foreverYoungGitHub/MTCNN"
"kylemcdonald/FaceTracker" -> "kylemcdonald/ofxFaceTracker" ["e"=1]
"kylemcdonald/FaceTracker" -> "patrikhuber/4dface" ["e"=1]
"kylemcdonald/FaceTracker" -> "ci2cv/face-analysis-sdk"
"kylemcdonald/FaceTracker" -> "TadasBaltrusaitis/CLM-framework"
"kylemcdonald/FaceTracker" -> "patrikhuber/superviseddescent"
"kylemcdonald/FaceTracker" -> "jwyang/face-alignment"
"kylemcdonald/FaceTracker" -> "hrastnik/face_detect_n_track"
"kylemcdonald/FaceTracker" -> "sai-bi/FaceAlignment"
"kylemcdonald/FaceTracker" -> "yulequan/face-alignment-in-3000fps"
"kylemcdonald/FaceTracker" -> "arturoc/FaceSubstitution" ["e"=1]
"kylemcdonald/FaceTracker" -> "freesouls/face-alignment-at-3000fps"
"kylemcdonald/FaceTracker" -> "patrikhuber/eos" ["e"=1]
"kylemcdonald/FaceTracker" -> "greatyao/asmlibrary"
"kylemcdonald/FaceTracker" -> "uricamic/clandmark"
"kylemcdonald/FaceTracker" -> "greatyao/aamlibrary"
"kpzhang93/MTCNN_face_detection_alignment" -> "ydwen/caffe-face"
"kpzhang93/MTCNN_face_detection_alignment" -> "AITTSMD/MTCNN-Tensorflow"
"kpzhang93/MTCNN_face_detection_alignment" -> "wy1iu/sphereface"
"kpzhang93/MTCNN_face_detection_alignment" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"kpzhang93/MTCNN_face_detection_alignment" -> "Seanlinx/mtcnn"
"kpzhang93/MTCNN_face_detection_alignment" -> "davidsandberg/facenet"
"kpzhang93/MTCNN_face_detection_alignment" -> "CongWeilin/mtcnn-caffe"
"kpzhang93/MTCNN_face_detection_alignment" -> "dlunion/mtcnn"
"kpzhang93/MTCNN_face_detection_alignment" -> "happynear/MTCNN_face_detection_alignment"
"kpzhang93/MTCNN_face_detection_alignment" -> "seetaface/SeetaFaceEngine"
"kpzhang93/MTCNN_face_detection_alignment" -> "Tencent/FaceDetection-DSFD"
"kpzhang93/MTCNN_face_detection_alignment" -> "AlfredXiangWu/face_verification_experiment"
"kpzhang93/MTCNN_face_detection_alignment" -> "weiliu89/caffe" ["e"=1]
"kpzhang93/MTCNN_face_detection_alignment" -> "shanren7/real_time_face_recognition"
"kpzhang93/MTCNN_face_detection_alignment" -> "mahyarnajibi/SSH"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "Lauszus/FaceRecognitionApp"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "abhn/marvel"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "pillarpond/face-recognizer-android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "yaylas/AndroidFaceRecognizer"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "gicheonkang/fast-face-android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "gv22ga/dlib-face-recognition-android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "tzutalin/dlib-android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "GRAYKEY/mobilefacenet_android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"pcr-upm/opal23_headpose" -> "thohemp/6DRepNet360"
"fdbtrs/IDiff-Face" -> "fdbtrs/Synthetic-Face-Recognition"
"fdbtrs/IDiff-Face" -> "fdbtrs/ExFaceGAN"
"fdbtrs/IDiff-Face" -> "fdbtrs/AdaDistill"
"fdbtrs/IDiff-Face" -> "naserdamer/MorDIFF"
"fdbtrs/IDiff-Face" -> "fdbtrs/QuantFace"
"fdbtrs/IDiff-Face" -> "fdbtrs/ElasticFace"
"fdbtrs/IDiff-Face" -> "fdbtrs/Unsupervised-Face-Recognition-using-Unlabeled-Synthetic-Data"
"fdbtrs/IDiff-Face" -> "mk-minchul/dcface" ["e"=1]
"fdbtrs/IDiff-Face" -> "meilfang/SPL-MAD"
"thohemp/6DRepNet360" -> "pcr-upm/opal23_headpose"
"thohemp/6DRepNet360" -> "thohemp/6DRepNet"
"thohemp/6DRepNet360" -> "Redhwan-A/6DoFHPE"
"meilfang/SynthASpoof" -> "meilfang/LMFD-PAD"
"meilfang/SynthASpoof" -> "fdbtrs/QuantFace"
"pumpikano/tf-magnet-loss" -> "vithursant/MagnetLoss-PyTorch"
"FaceAR/OpenFaceIOS" -> "zweigraf/face-landmarking-ios"
"FaceAR/OpenFaceIOS" -> "gicheonkang/fast-face-android"
"FaceAR/OpenFaceIOS" -> "YuAo/Vivid" ["e"=1]
"FaceAR/OpenFaceIOS" -> "chengzhengxin/sdm"
"FaceAR/OpenFaceIOS" -> "KeeganRen/FaceReconstruction" ["e"=1]
"FaceAR/OpenFaceIOS" -> "cheind/dest"
"FaceAR/OpenFaceIOS" -> "ci2cv/face-analysis-sdk"
"FaceAR/OpenFaceIOS" -> "TadasBaltrusaitis/OpenFace"
"FaceAR/OpenFaceIOS" -> "luoyetx/face-alignment-at-3000fps"
"FaceAR/OpenFaceIOS" -> "1adrianb/2D-and-3D-face-alignment" ["e"=1]
"FaceAR/OpenFaceIOS" -> "elhoangvu/HyperLandmark-iOS"
"FaceAR/OpenFaceIOS" -> "TadasBaltrusaitis/CLM-framework"
"FaceAR/OpenFaceIOS" -> "yulequan/face-alignment-in-3000fps"
"FaceAR/OpenFaceIOS" -> "erickingxu/MetalImage" ["e"=1]
"FaceAR/OpenFaceIOS" -> "tzutalin/dlib-android-app"
"datarootsio/tf-profile" -> "datarootsio/databooks"
"datarootsio/tf-profile" -> "datarootsio/prefect-dbt-flow"
"wjgaas/DeepID2" -> "chenzeyuczy/DeepID2"
"happynear/MTCNN_face_detection_alignment" -> "DaFuCoding/MTCNN_Caffe"
"happynear/MTCNN_face_detection_alignment" -> "DuinoDu/mtcnn"
"happynear/MTCNN_face_detection_alignment" -> "Seanlinx/mtcnn"
"happynear/MTCNN_face_detection_alignment" -> "dlunion/mtcnn"
"happynear/MTCNN_face_detection_alignment" -> "CongWeilin/mtcnn-caffe"
"happynear/MTCNN_face_detection_alignment" -> "ydwen/caffe-face"
"happynear/MTCNN_face_detection_alignment" -> "AlphaQi/MTCNN-light"
"happynear/MTCNN_face_detection_alignment" -> "happynear/FaceVerification"
"happynear/MTCNN_face_detection_alignment" -> "foreverYoungGitHub/MTCNN"
"happynear/MTCNN_face_detection_alignment" -> "OAID/FaceDetection"
"happynear/MTCNN_face_detection_alignment" -> "blankWorld/MTCNN-Accelerate-Onet"
"happynear/MTCNN_face_detection_alignment" -> "kpzhang93/MTCNN_face_detection_alignment"
"happynear/MTCNN_face_detection_alignment" -> "happynear/NormFace"
"happynear/MTCNN_face_detection_alignment" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"happynear/MTCNN_face_detection_alignment" -> "moli232777144/mtcnn_ncnn"
"wangjianlin1985/Python_FatigueDrivingDetection" -> "wangjianlin1985/Python_ConvolutionalNeuralNetwork_FaceRecognition_fatiguedriving"
"wangjianlin1985/Python_FatigueDrivingDetection" -> "BillySturate/Fatigue-driving-detection-system-based-on-opencv-dlib"
"wangjianlin1985/Python_FatigueDrivingDetection" -> "KyrieIrv11ng/Yolov5-driving-detection"
"wangjianlin1985/Python_FatigueDrivingDetection" -> "PengfeiM/Fatigue-Driven-Detection-Based-on-CNN"
"wangjianlin1985/Python_ConvolutionalNeuralNetwork_FaceRecognition_fatiguedriving" -> "wangjianlin1985/Python_FatigueDrivingDetection"
"luoyetx/Joint-Face-Detection-and-Alignment" -> "daikankan/mtcnn"
"luoyetx/Joint-Face-Detection-and-Alignment" -> "KaleidoZhouYN/mobilefacenet-caffe"
"quanhua92/darknet" -> "xhuvom/FaceID"
"quanhua92/darknet" -> "dannyblueliu/YOLO-Face-detection"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "qiexing/face-landmark-localization"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "lincolnhard/head-pose-estimation"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "panda-lab/face-landmark"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "szad670401/Fast-MTCNN"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "yinguobing/head-pose-estimation"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "chengzhengxin/sdm"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "natanielruiz/deep-head-pose"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "senliuy/FaceLivenessDetection" ["e"=1]
"guozhongluo/head-pose-estimation-and-face-landmark" -> "miaoerduo/dlib-face-landmark-compression"
"maidacundo/real-time-fire-segmentation-deep-learning" -> "sunnyiisc/Fire-Detection-from-FLAME-Dataset"
"lxq1000/SwinFace" -> "yiminglin-ai/imdb-clean"
"snehilsanyal/Construction-Site-Safety-PPE-Detection" -> "Ismailjm/PPE_detection_using_YOLOV8"
"snehilsanyal/Construction-Site-Safety-PPE-Detection" -> "ZijianWang-ZW/PPE_detection"
"snehilsanyal/Construction-Site-Safety-PPE-Detection" -> "AnshulSood11/PPE-Detection-YOLO-Deep_SORT"
"liuyuisanai/CaffeMex_v2" -> "liuyuisanai/Quality-Aware-Network"
"liuyuisanai/CaffeMex_v2" -> "liuyuisanai/coco_loss"
"liuyuisanai/CaffeMex_v2" -> "soeaver/py-RFCN-priv" ["e"=1]
"CitrusRokid/OpenNPD" -> "wincle/NPD"
"CitrusRokid/OpenNPD" -> "luoyetx/JDA"
"imistyrain/SeetaFace4Android" -> "ghnor/SeetaFace-AS"
"SeetaFace6Sharp/SeetaFace6Sharp" -> "l1183479157/SeetafaceV6DotNet"
"trigeorgis/mdm" -> "zhusz/CVPR15-CFSS"
"trigeorgis/mdm" -> "moliusimon/csdm"
"trigeorgis/mdm" -> "tntrung/sdm_face_alignment"
"trigeorgis/mdm" -> "xipeng13/recurrent-face-alignment"
"trigeorgis/mdm" -> "mariolew/Deep-Alignment-Network-tensorflow"
"trigeorgis/mdm" -> "1adrianb/binary-face-alignment" ["e"=1]
"takiyu/hyperface" -> "shashanktyagi/HyperFace-TensorFlow-implementation"
"takiyu/hyperface" -> "sourabhvora/HyperFace-with-SqueezeNet"
"takiyu/hyperface" -> "zhzhanp/TCDCN-face-alignment"
"takiyu/hyperface" -> "xipeng13/recurrent-face-alignment"
"hizhangp/triplet" -> "luhaofang/tripletloss"
"LSIbabnikz/DifFIQA" -> "LSIbabnikz/eDifFIQA"
"LSIbabnikz/DifFIQA" -> "oufuzhao/CLIB-FIQA"
"ZhiwenShao/CFT" -> "ZhiwenShao/MCNet"
"ZhiwenShao/CFT" -> "moliusimon/csdm"
"toshi-k/kaggle-distracted-driver-detection" -> "fomorians/distracted-drivers-tf"
"toshi-k/kaggle-distracted-driver-detection" -> "fomorians/distracted-drivers-keras"
"toshi-k/kaggle-distracted-driver-detection" -> "tks0123456789/kaggle-Otto" ["e"=1]
"fdbtrs/ExFaceGAN" -> "fdbtrs/Unsupervised-Face-Recognition-using-Unlabeled-Synthetic-Data"
"fdbtrs/ExFaceGAN" -> "fdbtrs/Synthetic-Face-Recognition"
"DanJun6737/TransFace" -> "HaiyuWu/SOTA-Face-Recognition-Train-and-Test"
"DanJun6737/TransFace" -> "DanJun6737/TopoFR"
"ZhenglinZhou/STAR" -> "andresprados/SPIGA" ["e"=1]
"ZhenglinZhou/STAR" -> "Jiahao-UTS/SLPT-master"
"ZhenglinZhou/STAR" -> "huangyangyu/ADNet"
"ZhenglinZhou/STAR" -> "ZhenglinZhou/HeadStudio" ["e"=1]
"ZhenglinZhou/STAR" -> "jhb86253817/PIPNet"
"luoyetx/OrdinalRegression" -> "kongsicong/Age_recognition_OR"
"Jiahao-UTS/DSLPT" -> "Jiahao-UTS/SLPT-master"
"cleardusk/UCAS" -> "cleardusk/EmotionChallenge"
"cleardusk/UCAS" -> "cleardusk/ImageToAscii"
"Copyleaks/NodeJS-Plagiarism-Checker" -> "Copyleaks/.NET-Plagiarism-Checker"
"Copyleaks/NodeJS-Plagiarism-Checker" -> "Copyleaks/Ruby-Plagiarism-Checker"
"bknyaz/beauty_vision" -> "Smellly/DeepBeautyPredictor"
"moliusimon/csdm" -> "ZhiwenShao/CFT"
"kongsicong/Age_recognition_OR" -> "luoyetx/OrdinalRegression"
"ydwen/caffe-face" -> "kpzhang93/MTCNN_face_detection_alignment"
"ydwen/caffe-face" -> "AlfredXiangWu/face_verification_experiment"
"ydwen/caffe-face" -> "wy1iu/sphereface"
"ydwen/caffe-face" -> "happynear/NormFace"
"ydwen/caffe-face" -> "happynear/FaceVerification"
"ydwen/caffe-face" -> "happynear/MTCNN_face_detection_alignment"
"ydwen/caffe-face" -> "CongWeilin/mtcnn-caffe"
"ydwen/caffe-face" -> "chenriwei/DeepFace"
"ydwen/caffe-face" -> "Seanlinx/mtcnn"
"ydwen/caffe-face" -> "dlunion/mtcnn"
"ydwen/caffe-face" -> "betars/Face-Resources"
"ydwen/caffe-face" -> "foreverYoungGitHub/MTCNN"
"ydwen/caffe-face" -> "happynear/AMSoftmax"
"ydwen/caffe-face" -> "DuinoDu/mtcnn"
"ydwen/caffe-face" -> "AlphaQi/MTCNN-light"
"biometrics/openbr" -> "cmusatyalab/openface"
"biometrics/openbr" -> "bytefish/facerec"
"biometrics/openbr" -> "seetaface/SeetaFaceEngine"
"biometrics/openbr" -> "chenriwei/DeepFace"
"biometrics/openbr" -> "kylemcdonald/FaceTracker"
"biometrics/openbr" -> "ydwen/caffe-face"
"biometrics/openbr" -> "TadasBaltrusaitis/OpenFace"
"biometrics/openbr" -> "TadasBaltrusaitis/CLM-framework"
"biometrics/openbr" -> "bytefish/libfacerec"
"biometrics/openbr" -> "liuliu/ccv" ["e"=1]
"biometrics/openbr" -> "kpzhang93/MTCNN_face_detection_alignment"
"biometrics/openbr" -> "yulequan/face-alignment-in-3000fps"
"biometrics/openbr" -> "AlfredXiangWu/face_verification_experiment"
"biometrics/openbr" -> "AlphaQi/MTCNN-light"
"biometrics/openbr" -> "sai-bi/FaceAlignment"
"Lauszus/FaceRecognitionApp" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework"
"Lauszus/FaceRecognitionApp" -> "Lauszus/FaceRecognitionLib"
"Lauszus/FaceRecognitionApp" -> "abhn/marvel"
"Lauszus/FaceRecognitionApp" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"Lauszus/FaceRecognitionApp" -> "pillarpond/face-recognizer-android"
"Lauszus/FaceRecognitionApp" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"Lauszus/FaceRecognitionApp" -> "Malikanhar/Android-Face-Recognition"
"Lauszus/FaceRecognitionApp" -> "gv22ga/dlib-face-recognition-android"
"Lauszus/FaceRecognitionApp" -> "gicheonkang/fast-face-android"
"Lauszus/FaceRecognitionApp" -> "husaynhakeem/android-face-detector"
"Lauszus/FaceRecognitionApp" -> "RedApparat/FaceDetector" ["e"=1]
"Lauszus/FaceRecognitionApp" -> "atharvakale31/Real-Time_Face_Recognition_Android"
"Lauszus/FaceRecognitionApp" -> "wihoho/FaceRecognition"
"Lauszus/FaceRecognitionApp" -> "tzutalin/dlib-android-app"
"Lauszus/FaceRecognitionApp" -> "yaylas/AndroidFaceRecognizer"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "Seanlinx/mtcnn"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "kpzhang93/MTCNN_face_detection_alignment"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "tornadomeet/mxnet-face"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "ydwen/caffe-face"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "AlphaQi/MTCNN-light"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "happynear/MTCNN_face_detection_alignment"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "CongWeilin/mtcnn-caffe"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "dlunion/mtcnn"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "DuinoDu/mtcnn"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "AlfredXiangWu/face_verification_experiment"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "AITTSMD/MTCNN-Tensorflow"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "shanren7/real_time_face_recognition"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "foreverYoungGitHub/MTCNN"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "DaFuCoding/MTCNN_Caffe"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "betars/Face-Resources"
"Seanlinx/mtcnn" -> "CongWeilin/mtcnn-caffe"
"Seanlinx/mtcnn" -> "dlunion/mtcnn"
"Seanlinx/mtcnn" -> "foreverYoungGitHub/MTCNN"
"Seanlinx/mtcnn" -> "happynear/MTCNN_face_detection_alignment"
"Seanlinx/mtcnn" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"Seanlinx/mtcnn" -> "DaFuCoding/MTCNN_Caffe"
"Seanlinx/mtcnn" -> "ydwen/caffe-face"
"Seanlinx/mtcnn" -> "AlphaQi/MTCNN-light"
"Seanlinx/mtcnn" -> "kpzhang93/MTCNN_face_detection_alignment"
"Seanlinx/mtcnn" -> "moli232777144/mtcnn_ncnn"
"Seanlinx/mtcnn" -> "tornadomeet/mxnet-face"
"Seanlinx/mtcnn" -> "AITTSMD/MTCNN-Tensorflow"
"Seanlinx/mtcnn" -> "wy1iu/sphereface"
"Seanlinx/mtcnn" -> "DuinoDu/mtcnn"
"Seanlinx/mtcnn" -> "happynear/FaceVerification"
"imistyrain/MTCNN" -> "szad670401/Fast-MTCNN"
"imistyrain/MTCNN" -> "moli232777144/mtcnn_ncnn"
"imistyrain/MTCNN" -> "AlphaQi/MTCNN-light"
"imistyrain/MTCNN" -> "CongWeilin/mtcnn-caffe"
"imistyrain/MTCNN" -> "ElegantGod/ncnn"
"imistyrain/MTCNN" -> "foreverYoungGitHub/MTCNN"
"imistyrain/MTCNN" -> "Charrin/RetinaFace-Cpp"
"imistyrain/MTCNN" -> "dlunion/mtcnn"
"imistyrain/MTCNN" -> "qaz734913414/Ncnn_FaceTrack"
"imistyrain/MTCNN" -> "cpuimage/MTCNN"
"imistyrain/MTCNN" -> "happynear/MTCNN_face_detection_alignment"
"imistyrain/MTCNN" -> "MirrorYuChen/ncnn_example"
"imistyrain/MTCNN" -> "biubug6/Face-Detector-1MB-with-landmark"
"imistyrain/MTCNN" -> "ksachdeva/opencv-mtcnn"
"imistyrain/MTCNN" -> "DaFuCoding/MTCNN_Caffe"
"peiyunh/tiny" -> "cydonia999/Tiny_Faces_in_Tensorflow"
"peiyunh/tiny" -> "mahyarnajibi/SSH"
"peiyunh/tiny" -> "varunagrawal/tiny-faces-pytorch"
"peiyunh/tiny" -> "Seanlinx/mtcnn"
"peiyunh/tiny" -> "sfzhang15/SFD"
"peiyunh/tiny" -> "ydwen/caffe-face"
"peiyunh/tiny" -> "kpzhang93/MTCNN_face_detection_alignment"
"peiyunh/tiny" -> "CongWeilin/mtcnn-caffe"
"peiyunh/tiny" -> "szq0214/DSOD" ["e"=1]
"peiyunh/tiny" -> "AlphaQi/MTCNN-light"
"peiyunh/tiny" -> "dlunion/mtcnn"
"peiyunh/tiny" -> "wywu/LAB"
"peiyunh/tiny" -> "zhaoweicai/cascade-rcnn" ["e"=1]
"peiyunh/tiny" -> "Rock-100/FaceKit"
"peiyunh/tiny" -> "sfzhang15/RefineDet" ["e"=1]
"surajsinghbisht054/Python-Media-Player" -> "rishabhverma17/sms_slang_translator"
"dpressel/rude-carnie" -> "GilLevi/AgeGenderDeepLearning"
"dpressel/rude-carnie" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"dpressel/rude-carnie" -> "yu4u/age-gender-estimation"
"dpressel/rude-carnie" -> "shamangary/SSR-Net"
"dpressel/rude-carnie" -> "abars/YoloKerasFaceDetection"
"dpressel/rude-carnie" -> "oarriaga/face_classification" ["e"=1]
"dpressel/rude-carnie" -> "chenriwei/DeepFace"
"dpressel/rude-carnie" -> "ZZUTK/Face-Aging-CAAE" ["e"=1]
"dpressel/rude-carnie" -> "gliese581gg/YOLO_tensorflow" ["e"=1]
"dpressel/rude-carnie" -> "eveningglow/age-and-gender-classification"
"dpressel/rude-carnie" -> "arunponnusamy/gender-detection-keras"
"dpressel/rude-carnie" -> "Tony607/Keras_age_gender"
"dpressel/rude-carnie" -> "shanren7/real_time_face_recognition"
"dpressel/rude-carnie" -> "AITTSMD/MTCNN-Tensorflow"
"dpressel/rude-carnie" -> "habom2310/People-tracking-with-Age-and-Gender-detection"
"Xianhua-He/cvpr2024-face-anti-spoofing-challenge" -> "meilfang/SynthASpoof"
"Xianhua-He/cvpr2024-face-anti-spoofing-challenge" -> "sunyiyou/SAFAS" ["e"=1]
"julyCodeGo/OpenCVCheck" -> "x-shadow-x/FaceIdentificati"
"julyCodeGo/OpenCVCheck" -> "shenhuanet/OpenCV-android"
"rcmalli/keras-vggface" -> "ox-vgg/vgg_face2"
"rcmalli/keras-vggface" -> "cydonia999/VGGFace2-pytorch"
"rcmalli/keras-vggface" -> "nyoki-mtl/keras-facenet"
"rcmalli/keras-vggface" -> "auroua/InsightFace_TF"
"rcmalli/keras-vggface" -> "WeidiXie/Keras-VGGFace2-ResNet50"
"rcmalli/keras-vggface" -> "ipazc/mtcnn"
"rcmalli/keras-vggface" -> "krasserm/face-recognition"
"rcmalli/keras-vggface" -> "AIInAi/tf-insightface"
"rcmalli/keras-vggface" -> "Tony607/Keras_face_identification_realtime"
"rcmalli/keras-vggface" -> "vsyw/Keras-OpenFace"
"rcmalli/keras-vggface" -> "AlfredXiangWu/LightCNN"
"rcmalli/keras-vggface" -> "serengil/tensorflow-101"
"rcmalli/keras-vggface" -> "davidsandberg/facenet"
"rcmalli/keras-vggface" -> "yu4u/age-gender-estimation"
"rcmalli/keras-vggface" -> "kpzhang93/MTCNN_face_detection_alignment"
"ronekko/deep_metric_learning" -> "wzzheng/HDML"
"ronekko/deep_metric_learning" -> "rksltnl/Deep-Metric-Learning-CVPR16"
"ronekko/deep_metric_learning" -> "chaoyuaw/incubator-mxnet"
"ronekko/deep_metric_learning" -> "bnu-wangxun/Deep_Metric"
"ronekko/deep_metric_learning" -> "Confusezius/Deep-Metric-Learning-Baselines"
"ronekko/deep_metric_learning" -> "dichotomies/proxy-nca"
"ronekko/deep_metric_learning" -> "CongWeilin/cluster-loss-tensorflow"
"natanielruiz/android-yolo" -> "szaza/android-yolo-v2"
"natanielruiz/android-yolo" -> "miyosuda/TensorFlowAndroidDemo" ["e"=1]
"natanielruiz/android-yolo" -> "tzutalin/Android-Object-Detection"
"natanielruiz/android-yolo" -> "mdietrichstein/yolo-tiny-v1-mobile"
"natanielruiz/android-yolo" -> "gliese581gg/YOLO_tensorflow" ["e"=1]
"natanielruiz/android-yolo" -> "nilboy/tensorflow-yolo" ["e"=1]
"natanielruiz/android-yolo" -> "amitshekhariitbhu/AndroidTensorFlowMachineLearningExample" ["e"=1]
"natanielruiz/android-yolo" -> "huuuuusy/YOLOV3-on-Android"
"natanielruiz/android-yolo" -> "chentyjpm/DarknetDemoInAndroid"
"natanielruiz/android-yolo" -> "ENCP/CNNdroid"
"natanielruiz/android-yolo" -> "thtrieu/darkflow" ["e"=1]
"natanielruiz/android-yolo" -> "sh1r0/caffe-android-lib"
"natanielruiz/android-yolo" -> "Zehaos/MobileNet" ["e"=1]
"natanielruiz/android-yolo" -> "xingwangsfu/caffe-yolo" ["e"=1]
"natanielruiz/android-yolo" -> "zhangqianhui/CnnForAndroid"
"madkn/HistogramLoss" -> "valerystrizh/pytorch-histogram-loss"
"madkn/HistogramLoss" -> "tylersco/adapted_deep_embeddings"
"wy1iu/LargeMargin_Softmax_Loss" -> "wy1iu/SphereNet"
"wy1iu/LargeMargin_Softmax_Loss" -> "happynear/AMSoftmax"
"wy1iu/LargeMargin_Softmax_Loss" -> "wy1iu/DCNets"
"wy1iu/LargeMargin_Softmax_Loss" -> "wy1iu/sphereface"
"wy1iu/LargeMargin_Softmax_Loss" -> "luoyetx/mx-lsoftmax" ["e"=1]
"wy1iu/LargeMargin_Softmax_Loss" -> "happynear/NormFace"
"wy1iu/LargeMargin_Softmax_Loss" -> "amirhfarzaneh/lsoftmax-pytorch"
"wy1iu/LargeMargin_Softmax_Loss" -> "liuyuisanai/coco_loss"
"wy1iu/LargeMargin_Softmax_Loss" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"wy1iu/LargeMargin_Softmax_Loss" -> "ydwen/caffe-face"
"wy1iu/LargeMargin_Softmax_Loss" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"wy1iu/LargeMargin_Softmax_Loss" -> "walkoncross/prepare-faces-zyf"
"wy1iu/LargeMargin_Softmax_Loss" -> "HiKapok/tf.extra_losses"
"wy1iu/LargeMargin_Softmax_Loss" -> "twtygqyy/caffe-augmentation" ["e"=1]
"wy1iu/LargeMargin_Softmax_Loss" -> "jihunchoi/lsoftmax-pytorch"
"usnistgov/frvt" -> "olojuwin/facerecognize-for-mobile-phone"
"usnistgov/frvt" -> "fwang91/IMDb-Face"
"usnistgov/frvt" -> "liuyuisanai/RSA-for-object-detection"
"usnistgov/frvt" -> "happynear/FaceDatasets"
"usnistgov/frvt" -> "xiaoboCASIA/SV-X-Softmax"
"usnistgov/frvt" -> "seasonSH/DocFace"
"usnistgov/frvt" -> "liuyuisanai/coco_loss"
"usnistgov/frvt" -> "happynear/NormFace"
"playerkk/face-py-faster-rcnn" -> "kensun0/Face-Detecion-with-the-Faster-R-CNN-R-FCN"
"playerkk/face-py-faster-rcnn" -> "liuyuisanai/RSA-for-object-detection"
"playerkk/face-py-faster-rcnn" -> "mahyarnajibi/SSH"
"playerkk/face-py-faster-rcnn" -> "ydwen/caffe-face"
"playerkk/face-py-faster-rcnn" -> "tornadomeet/mxnet-face"
"playerkk/face-py-faster-rcnn" -> "sfzhang15/SFD"
"playerkk/face-py-faster-rcnn" -> "xiaolonw/adversarial-frcnn" ["e"=1]
"playerkk/face-py-faster-rcnn" -> "Seanlinx/mtcnn"
"playerkk/face-py-faster-rcnn" -> "dlunion/mtcnn"
"playerkk/face-py-faster-rcnn" -> "CongWeilin/mtcnn-caffe"
"playerkk/face-py-faster-rcnn" -> "DuinoDu/mtcnn"
"playerkk/face-py-faster-rcnn" -> "chenriwei/DeepFace"
"playerkk/face-py-faster-rcnn" -> "anson0910/CNN_face_detection"
"playerkk/face-py-faster-rcnn" -> "betars/Face-Resources"
"playerkk/face-py-faster-rcnn" -> "peiyunh/tiny"
"DuinoDu/mtcnn" -> "happynear/MTCNN_face_detection_alignment"
"DuinoDu/mtcnn" -> "CongWeilin/mtcnn-caffe"
"DuinoDu/mtcnn" -> "DaFuCoding/MTCNN_Caffe"
"DuinoDu/mtcnn" -> "ydwen/caffe-face"
"DuinoDu/mtcnn" -> "dlunion/mtcnn"
"DuinoDu/mtcnn" -> "Seanlinx/mtcnn"
"DuinoDu/mtcnn" -> "foreverYoungGitHub/MTCNN"
"DuinoDu/mtcnn" -> "kpzhang93/MTCNN_face_detection_alignment"
"DuinoDu/mtcnn" -> "AlphaQi/MTCNN-light"
"DuinoDu/mtcnn" -> "AlfredXiangWu/face_verification_experiment"
"DuinoDu/mtcnn" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"DuinoDu/mtcnn" -> "happynear/NormFace"
"DuinoDu/mtcnn" -> "ElegantGod/ncnn"
"DuinoDu/mtcnn" -> "happynear/FaceVerification"
"DuinoDu/mtcnn" -> "blankWorld/MTCNN-Accelerate-Onet"
"DaFuCoding/MTCNN_Caffe" -> "dlunion/mtcnn"
"DaFuCoding/MTCNN_Caffe" -> "foreverYoungGitHub/MTCNN"
"DaFuCoding/MTCNN_Caffe" -> "happynear/MTCNN_face_detection_alignment"
"DaFuCoding/MTCNN_Caffe" -> "CongWeilin/mtcnn-caffe"
"DaFuCoding/MTCNN_Caffe" -> "Seanlinx/mtcnn"
"DaFuCoding/MTCNN_Caffe" -> "DuinoDu/mtcnn"
"DaFuCoding/MTCNN_Caffe" -> "ElegantGod/ncnn"
"DaFuCoding/MTCNN_Caffe" -> "AlphaQi/MTCNN-light"
"DaFuCoding/MTCNN_Caffe" -> "zhanglaplace/MobileFaceNet"
"DaFuCoding/MTCNN_Caffe" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"DaFuCoding/MTCNN_Caffe" -> "ydwen/caffe-face"
"DaFuCoding/MTCNN_Caffe" -> "moli232777144/mtcnn_ncnn"
"DaFuCoding/MTCNN_Caffe" -> "happynear/FaceVerification"
"DaFuCoding/MTCNN_Caffe" -> "luoyetx/deep-landmark"
"DaFuCoding/MTCNN_Caffe" -> "OAID/FaceDetection"
"LSIbabnikz/eDifFIQA" -> "LSIbabnikz/DifFIQA"
"oufuzhao/CLIB-FIQA" -> "jankolf/GraFIQs"
"oufuzhao/CLIB-FIQA" -> "LSIbabnikz/DifFIQA"
"oufuzhao/CLIB-FIQA" -> "LSIbabnikz/eDifFIQA"
"FacePlusPlus/MegviiFacepp-Android-SDK" -> "FacePlusPlus/java-sdk"
"FacePlusPlus/MegviiFacepp-Android-SDK" -> "FacePlusPlus/MegviiFacepp-iOS-SDK"
"mk-minchul/CVLface" -> "mk-minchul/caface"
"mk-minchul/CVLface" -> "mk-minchul/AdaFace"
"mk-minchul/CVLface" -> "mk-minchul/kprpe"
"JonathanReeve/text-matcher" -> "Wazzabeee/copy-spotter"
"FacePlusPlus/java-sdk" -> "FacePlusPlus/MegviiFacepp-Android-SDK"
"AnirudhGP/DrowsyDriverDetection" -> "nishagandhi/DrowsyDriverDetection"
"AnirudhGP/DrowsyDriverDetection" -> "raja434/driver-fatigue-detection-system"
"AnirudhGP/DrowsyDriverDetection" -> "seilna/Deep-RDD"
"abhn/marvel" -> "Lauszus/FaceRecognitionApp"
"abhn/marvel" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework"
"abhn/marvel" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"abhn/marvel" -> "Zod20/OpenCV-Face-Recognition-Android"
"abhn/marvel" -> "pillarpond/face-recognizer-android"
"androidroadies/FaceSwap" -> "tunaemre/Face-Swap-Android"
"androidroadies/FaceSwap" -> "Alex13832/FaceSwap-Android"
"HaiyuWu/SOTA-Face-Recognition-Train-and-Test" -> "HaiyuWu/FaceBrightness"
"ghnor/SeetaFace-AS" -> "imistyrain/SeetaFace4Android"
"ghnor/SeetaFace-AS" -> "willard-yuan/SeetaFaceLib"
"Hazqeel09/ellzaf_ml" -> "HamadYA/GhostFaceNets"
"foreverYoungGitHub/MTCNN" -> "CongWeilin/mtcnn-caffe"
"foreverYoungGitHub/MTCNN" -> "DaFuCoding/MTCNN_Caffe"
"foreverYoungGitHub/MTCNN" -> "dlunion/mtcnn"
"foreverYoungGitHub/MTCNN" -> "Seanlinx/mtcnn"
"foreverYoungGitHub/MTCNN" -> "AlphaQi/MTCNN-light"
"foreverYoungGitHub/MTCNN" -> "ElegantGod/ncnn"
"foreverYoungGitHub/MTCNN" -> "ydwen/caffe-face"
"foreverYoungGitHub/MTCNN" -> "happynear/MTCNN_face_detection_alignment"
"foreverYoungGitHub/MTCNN" -> "moli232777144/mtcnn_ncnn"
"foreverYoungGitHub/MTCNN" -> "OAID/FaceDetection"
"foreverYoungGitHub/MTCNN" -> "DuinoDu/mtcnn"
"foreverYoungGitHub/MTCNN" -> "xialuxi/arcface-caffe"
"foreverYoungGitHub/MTCNN" -> "happynear/NormFace"
"foreverYoungGitHub/MTCNN" -> "luoyetx/mini-caffe"
"foreverYoungGitHub/MTCNN" -> "chengzhengxin/sdm"
"Redhwan-A/6DoFHPE" -> "Redhwan-A/SurveyPHE"
"erogol/beauty.torch" -> "HuyTu7/face_rating"
"erogol/beauty.torch" -> "bknyaz/beauty_vision"
"jinze1994/DeepID1" -> "shen1994/DeepID"
"jinze1994/DeepID1" -> "Piccolo-Jr/FaceVerification-DeepID2"
"CodingNowPls/SeetaFace64Android" -> "VHCC/SeetaFace64Android"
"CodingNowPls/SeetaFace64Android" -> "yangjian1218/seetaface6JNIToAPP"
"serengil/neural-networks" -> "serengil/exchanging-encrypted-mails"
"serengil/neural-networks" -> "serengil/lightface"
"ageitgey/face_recognition" -> "davidsandberg/facenet"
"ageitgey/face_recognition" -> "cmusatyalab/openface"
"ageitgey/face_recognition" -> "tensorflow/models" ["e"=1]
"ageitgey/face_recognition" -> "keras-team/keras" ["e"=1]
"ageitgey/face_recognition" -> "deepfakes/faceswap" ["e"=1]
"ageitgey/face_recognition" -> "deepinsight/insightface"
"ageitgey/face_recognition" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"ageitgey/face_recognition" -> "opencv/opencv" ["e"=1]
"ageitgey/face_recognition" -> "CMU-Perceptual-Computing-Lab/openpose" ["e"=1]
"ageitgey/face_recognition" -> "facebookresearch/Detectron" ["e"=1]
"ageitgey/face_recognition" -> "tensorflow/tensorflow" ["e"=1]
"ageitgey/face_recognition" -> "davisking/dlib"
"ageitgey/face_recognition" -> "serengil/deepface"
"ageitgey/face_recognition" -> "pytorch/pytorch" ["e"=1]
"ageitgey/face_recognition" -> "scikit-learn/scikit-learn" ["e"=1]
"yu4u/age-gender-estimation" -> "dpressel/rude-carnie"
"yu4u/age-gender-estimation" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"yu4u/age-gender-estimation" -> "shamangary/SSR-Net"
"yu4u/age-gender-estimation" -> "GilLevi/AgeGenderDeepLearning"
"yu4u/age-gender-estimation" -> "yu4u/age-estimation-pytorch"
"yu4u/age-gender-estimation" -> "oarriaga/face_classification" ["e"=1]
"yu4u/age-gender-estimation" -> "ZZUTK/Face-Aging-CAAE" ["e"=1]
"yu4u/age-gender-estimation" -> "kpzhang93/MTCNN_face_detection_alignment"
"yu4u/age-gender-estimation" -> "abars/YoloKerasFaceDetection"
"yu4u/age-gender-estimation" -> "wayen820/gender_age_estimation_mxnet"
"yu4u/age-gender-estimation" -> "Tencent/FaceDetection-DSFD"
"yu4u/age-gender-estimation" -> "Tony607/Keras_age_gender"
"yu4u/age-gender-estimation" -> "joojs/fairface"
"yu4u/age-gender-estimation" -> "truongnmt/multi-task-learning"
"yu4u/age-gender-estimation" -> "smahesh29/Gender-and-Age-Detection"
"SimonCherryGZ/face-landmark-android" -> "gicheonkang/fast-face-android"
"SimonCherryGZ/face-landmark-android" -> "tzutalin/dlib-android-app"
"SimonCherryGZ/face-landmark-android" -> "SimonCherryGZ/ARCamera"
"SimonCherryGZ/face-landmark-android" -> "KAlO2/PerfectShow" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "ongakuer/CameraFilter" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "tunaemre/Face-Swap-Android"
"SimonCherryGZ/face-landmark-android" -> "tzutalin/dlib-android"
"SimonCherryGZ/face-landmark-android" -> "hardik-trivedi/FaceFilter" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "DingProg/Makeup" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "szad670401/HyperLandmark"
"SimonCherryGZ/face-landmark-android" -> "doggycoder/AndroidOpenGLDemo" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "ochornenko/Camera2GLPreview" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "pillarpond/face-recognizer-android"
"SimonCherryGZ/face-landmark-android" -> "wysaid/android-gpuimage-plus" ["e"=1]
"tony-Shx/Swface" -> "x-shadow-x/FaceIdentificati"
"cypw/MXNet2Caffe" -> "GarrickLin/MXNet2Caffe"
"cypw/MXNet2Caffe" -> "olojuwin/facerecognize-for-mobile-phone"
"cypw/MXNet2Caffe" -> "xialuxi/arcface-caffe"
"cypw/MXNet2Caffe" -> "Charrin/RetinaFace-Cpp"
"cypw/MXNet2Caffe" -> "KaleidoZhouYN/mobilefacenet-caffe"
"cypw/MXNet2Caffe" -> "szad670401/advanced-mxnet2caffe"
"CongWeilin/mtcnn-caffe" -> "dlunion/mtcnn"
"CongWeilin/mtcnn-caffe" -> "Seanlinx/mtcnn"
"CongWeilin/mtcnn-caffe" -> "foreverYoungGitHub/MTCNN"
"CongWeilin/mtcnn-caffe" -> "DaFuCoding/MTCNN_Caffe"
"CongWeilin/mtcnn-caffe" -> "DuinoDu/mtcnn"
"CongWeilin/mtcnn-caffe" -> "happynear/MTCNN_face_detection_alignment"
"CongWeilin/mtcnn-caffe" -> "moli232777144/mtcnn_ncnn"
"CongWeilin/mtcnn-caffe" -> "ydwen/caffe-face"
"CongWeilin/mtcnn-caffe" -> "blankWorld/MTCNN-Accelerate-Onet"
"CongWeilin/mtcnn-caffe" -> "panda-lab/face-landmark"
"CongWeilin/mtcnn-caffe" -> "AlphaQi/MTCNN-light"
"CongWeilin/mtcnn-caffe" -> "kpzhang93/MTCNN_face_detection_alignment"
"CongWeilin/mtcnn-caffe" -> "ElegantGod/ncnn"
"CongWeilin/mtcnn-caffe" -> "zeusees/FaceBoxes"
"CongWeilin/mtcnn-caffe" -> "AITTSMD/MTCNN-Tensorflow"
"andreasveit/triplet-network-pytorch" -> "andreasveit/conditional-similarity-networks" ["e"=1]
"andreasveit/triplet-network-pytorch" -> "adambielski/siamese-triplet" ["e"=1]
"andreasveit/triplet-network-pytorch" -> "liorshk/facenet_pytorch"
"andreasveit/triplet-network-pytorch" -> "rksltnl/Deep-Metric-Learning-CVPR16"
"andreasveit/triplet-network-pytorch" -> "NegatioN/OnlineMiningTripletLoss"
"andreasveit/triplet-network-pytorch" -> "bnu-wangxun/Deep_Metric"
"andreasveit/triplet-network-pytorch" -> "eladhoffer/TripletNet"
"andreasveit/triplet-network-pytorch" -> "facebookresearch/low-shot-shrink-hallucinate" ["e"=1]
"andreasveit/triplet-network-pytorch" -> "felixgwu/mask_rcnn_pytorch" ["e"=1]
"andreasveit/triplet-network-pytorch" -> "CoinCheung/triplet-reid-pytorch" ["e"=1]
"andreasveit/triplet-network-pytorch" -> "omoindrot/tensorflow-triplet-loss"
"andreasveit/triplet-network-pytorch" -> "jihunchoi/lsoftmax-pytorch"
"andreasveit/triplet-network-pytorch" -> "edgarriba/examples"
"andreasveit/triplet-network-pytorch" -> "floodsung/LearningToCompare_FSL" ["e"=1]
"liorshk/facenet_pytorch" -> "tbmoon/facenet"
"liorshk/facenet_pytorch" -> "tamerthamoqa/facenet-pytorch-glint360k"
"liorshk/facenet_pytorch" -> "wujiyang/Face_Pytorch"
"liorshk/facenet_pytorch" -> "clcarwin/sphereface_pytorch"
"liorshk/facenet_pytorch" -> "MuggleWang/CosFace_pytorch"
"liorshk/facenet_pytorch" -> "jxgu1016/MNIST_center_loss_pytorch"
"liorshk/facenet_pytorch" -> "andreasveit/triplet-network-pytorch"
"liorshk/facenet_pytorch" -> "AlfredXiangWu/LightCNN"
"liorshk/facenet_pytorch" -> "CaptainEven/FaceRecognition"
"jerry1900/faceRecognition" -> "seathiefwang/FaceRecognition-tensorflow"
"jerry1900/faceRecognition" -> "coneypo/Dlib_face_recognition_from_camera"
"jerry1900/faceRecognition" -> "winterssy/face_recognition_py"
"jerry1900/faceRecognition" -> "bystc/FaceRecognition" ["e"=1]
"jerry1900/faceRecognition" -> "kuaikuaikim/dface"
"jerry1900/faceRecognition" -> "yeziyang1992/Python-Tensorflow-Face-v2.0"
"jerry1900/faceRecognition" -> "windzu/facenet_facerecognition"
"jerry1900/faceRecognition" -> "inorilzy/renlian"
"jerry1900/faceRecognition" -> "fuzheng0301/FaceRecognition" ["e"=1]
"jerry1900/faceRecognition" -> "inspurer/WorkAttendanceSystem"
"jerry1900/faceRecognition" -> "shanren7/real_time_face_recognition"
"jerry1900/faceRecognition" -> "66pig/face_recognition"
"jerry1900/faceRecognition" -> "DLlearn/python-in-dl"
"jerry1900/faceRecognition" -> "KangLin/FaceRecognizer"
"jerry1900/faceRecognition" -> "luanshiyinyang/FacialExpressionRecognition" ["e"=1]
"lincolnhard/head-pose-estimation" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"lincolnhard/head-pose-estimation" -> "yinguobing/head-pose-estimation"
"lincolnhard/head-pose-estimation" -> "natanielruiz/deep-head-pose"
"lincolnhard/head-pose-estimation" -> "qiexing/face-landmark-localization"
"lincolnhard/head-pose-estimation" -> "chengzhengxin/sdm"
"lincolnhard/head-pose-estimation" -> "shamangary/FSA-Net"
"lincolnhard/head-pose-estimation" -> "panda-lab/face-landmark"
"lincolnhard/head-pose-estimation" -> "royshil/HeadPosePnP"
"lincolnhard/head-pose-estimation" -> "polarisZhao/PFLD-pytorch"
"lincolnhard/head-pose-estimation" -> "mpatacchiola/deepgaze"
"lincolnhard/head-pose-estimation" -> "wywu/LAB"
"lincolnhard/head-pose-estimation" -> "szad670401/HyperLandmark"
"lincolnhard/head-pose-estimation" -> "qhan1028/Headpose-Detection"
"lincolnhard/head-pose-estimation" -> "jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV"
"lincolnhard/head-pose-estimation" -> "Rock-100/FaceKit"
"wujiyang/DlibFace" -> "wujiyang/FaceRecognition"
"wujiyang/DlibFace" -> "wujiyang/Contrastive-Loss"
"wujiyang/DlibFace" -> "wujiyang/Triplet-Loss"
"wihoho/FaceRecognition" -> "IMS94/javacv-cnn-example"
"prathamsolanki/gender-recognition-by-voice" -> "karthiknagarajansundar/automatic-music-generation"
"ageitgey/face_recognition_models" -> "ageitgey/dlib"
"ageitgey/face_recognition_models" -> "davisking/dlib-models"
"ageitgey/face_recognition_models" -> "ageitgey/image_segmentation_examples"
"ageitgey/face_recognition_models" -> "takuya-takeuchi/FaceRecognitionDotNet" ["e"=1]
"ageitgey/face_recognition_models" -> "takuya-takeuchi/DlibDotNet" ["e"=1]
"KleinYuan/Caffe2-iOS" -> "RobertBiehl/caffe2-ios"
"KleinYuan/Caffe2-iOS" -> "solrex/caffe-mobile"
"KleinYuan/Caffe2-iOS" -> "KeyKy/caffe2_SSD"
"happynear/NormFace" -> "happynear/FaceVerification"
"happynear/NormFace" -> "happynear/AMSoftmax"
"happynear/NormFace" -> "ydwen/caffe-face"
"happynear/NormFace" -> "liuyuisanai/coco_loss"
"happynear/NormFace" -> "wy1iu/sphereface"
"happynear/NormFace" -> "happynear/FaceDatasets"
"happynear/NormFace" -> "liuyuisanai/RSA-for-object-detection"
"happynear/NormFace" -> "AlfredXiangWu/face_verification_experiment"
"happynear/NormFace" -> "wy1iu/LargeMargin_Softmax_Loss"
"happynear/NormFace" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"happynear/NormFace" -> "fwang91/IMDb-Face"
"happynear/NormFace" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"happynear/NormFace" -> "Joker316701882/Additive-Margin-Softmax"
"happynear/NormFace" -> "happynear/MTCNN_face_detection_alignment"
"happynear/NormFace" -> "liuziwei7/mobile-id"
"cair/Fire-Detection-Image-Dataset" -> "steffensbola/furg-fire-dataset"
"cair/Fire-Detection-Image-Dataset" -> "DeepQuestAI/Fire-Smoke-Dataset"
"cair/Fire-Detection-Image-Dataset" -> "tobybreckon/fire-detection-cnn"
"cair/Fire-Detection-Image-Dataset" -> "sulenn/fire-dataset"
"cair/Fire-Detection-Image-Dataset" -> "OlafenwaMoses/FireNET"
"cair/Fire-Detection-Image-Dataset" -> "arpit-jadon/FireNet-LightWeight-Network-for-Fire-Detection"
"cair/Fire-Detection-Image-Dataset" -> "midasklr/FireSmokeDetectionByEfficientNet"
"cair/Fire-Detection-Image-Dataset" -> "robmarkcole/fire-detection-from-images"
"cair/Fire-Detection-Image-Dataset" -> "NeelBhowmik/efficient-compact-fire-detection-cnn"
"cair/Fire-Detection-Image-Dataset" -> "gengyanlei/fire-smoke-detect-yolov4"
"cair/Fire-Detection-Image-Dataset" -> "xjg0124/Fire-and-Smoke-Detection"
"cair/Fire-Detection-Image-Dataset" -> "aiformankind/wildfire-smoke-dataset"
"cair/Fire-Detection-Image-Dataset" -> "AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle"
"cair/Fire-Detection-Image-Dataset" -> "POLARBEARWYY/Smoke-Detection"
"barisesmer/C4.5" -> "geerk/C45algorithm"
"barisesmer/C4.5" -> "ryanmadden/decision-tree"
"barisesmer/C4.5" -> "dpkravi/DecisionTreeClassifier"
"barisesmer/C4.5" -> "serengil/chefboost"
"tunaemre/Face-Swap-Android" -> "androidroadies/FaceSwap"
"tunaemre/Face-Swap-Android" -> "Alex13832/FaceSwap-Android"
"tunaemre/Face-Swap-Android" -> "SimonCherryGZ/AverageFaceDemo"
"dlunion/CCDL" -> "dlunion/mtcnn"
"dlunion/CCDL" -> "dlunion/CC4.0"
"dlunion/CCDL" -> "dlunion/CaffeLSTM-OCR"
"dlunion/CCDL" -> "CongWeilin/mtcnn-caffe"
"dlunion/CCDL" -> "luoyetx/mini-caffe"
"dlunion/CCDL" -> "foreverYoungGitHub/MTCNN"
"dlunion/CCDL" -> "ElegantGod/ncnn"
"liuyuisanai/coco_loss" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"liuyuisanai/coco_loss" -> "walkoncross/prepare-faces-zyf"
"liuyuisanai/coco_loss" -> "happynear/AMSoftmax"
"liuyuisanai/coco_loss" -> "liuyuisanai/RSA-for-object-detection"
"liuyuisanai/coco_loss" -> "happynear/NormFace"
"liuyuisanai/coco_loss" -> "happynear/FaceDatasets"
"liuyuisanai/coco_loss" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"liuyuisanai/coco_loss" -> "inlmouse/MS-Celeb-1M_WashList"
"liuyuisanai/coco_loss" -> "happynear/FaceVerification"
"liuyuisanai/coco_loss" -> "wy1iu/LargeMargin_Softmax_Loss"
"liuyuisanai/coco_loss" -> "liuyuisanai/CaffeMex_v2"
"liuyuisanai/coco_loss" -> "liuyuisanai/Quality-Aware-Network"
"liuyuisanai/coco_loss" -> "KaleidoZhouYN/Loss-Functions"
"liuyuisanai/coco_loss" -> "KaleidoZhouYN/Pytorch_FRS"
"xhuvom/FaceID" -> "quanhua92/darknet"
"xhuvom/FaceID" -> "dannyblueliu/YOLO-Face-detection"
"facebookarchive/AICamera" -> "facebookarchive/AICamera-Style-Transfer"
"facebookarchive/AICamera" -> "sh1r0/caffe-android-lib"
"facebookarchive/AICamera" -> "sh1r0/caffe-android-demo"
"facebookarchive/AICamera" -> "ENCP/CNNdroid"
"facebookarchive/AICamera" -> "solrex/caffe-mobile"
"facebookarchive/AICamera" -> "zhangqianhui/CnnForAndroid"
"facebookarchive/AICamera" -> "Leliana/WhatsThis"
"shanren7/real_time_face_recognition" -> "kpzhang93/MTCNN_face_detection_alignment"
"shanren7/real_time_face_recognition" -> "AITTSMD/MTCNN-Tensorflow"
"shanren7/real_time_face_recognition" -> "Seanlinx/mtcnn"
"shanren7/real_time_face_recognition" -> "bearsprogrammer/real-time-deep-face-recognition"
"shanren7/real_time_face_recognition" -> "AlphaQi/MTCNN-light"
"shanren7/real_time_face_recognition" -> "wy1iu/sphereface"
"shanren7/real_time_face_recognition" -> "ydwen/caffe-face"
"shanren7/real_time_face_recognition" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"shanren7/real_time_face_recognition" -> "yobibyte/yobiface"
"shanren7/real_time_face_recognition" -> "windzu/facenet_facerecognition"
"shanren7/real_time_face_recognition" -> "davidsandberg/facenet"
"shanren7/real_time_face_recognition" -> "chenriwei/DeepFace"
"shanren7/real_time_face_recognition" -> "auroua/InsightFace_TF"
"shanren7/real_time_face_recognition" -> "dlunion/mtcnn"
"shanren7/real_time_face_recognition" -> "CongWeilin/mtcnn-caffe"
"malharsk27/Autoattendance-Cognitive" -> "aagrawal207/OpenCV-Face-Recognition"
"malharsk27/Autoattendance-Cognitive" -> "aagrawal207/AutoAttendance"
"akshaybahadur21/HandMovementTracking" -> "akshaybahadur21/Digit-Recognizer"
"akshaybahadur21/HandMovementTracking" -> "SparshaSaha/Hand-Gesture-Recognition-Using-Background-Elllimination-and-Convolution-Neural-Network" ["e"=1]
"akshaybahadur21/HandMovementTracking" -> "akshaybahadur21/Facial-Recognition-using-Facenet"
"akshaybahadur21/HandMovementTracking" -> "akshaybahadur21/Drowsiness_Detection"
"solrex/caffe-mobile" -> "sh1r0/caffe-android-lib"
"solrex/caffe-mobile" -> "sh1r0/caffe-android-demo"
"solrex/caffe-mobile" -> "luoyetx/mini-caffe"
"solrex/caffe-mobile" -> "zhangqianhui/CnnForAndroid"
"solrex/caffe-mobile" -> "KleinYuan/Caffe2-iOS"
"solrex/caffe-mobile" -> "alexkarargyris/Caffe_OpenCV_Android_App"
"solrex/caffe-mobile" -> "OAID/Caffe-HRT"
"solrex/caffe-mobile" -> "AlphaQi/MTCNN-light"
"solrex/caffe-mobile" -> "ENCP/CNNdroid"
"solrex/caffe-mobile" -> "camel007/Caffe-ShuffleNet" ["e"=1]
"solrex/caffe-mobile" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"solrex/caffe-mobile" -> "pmgysel/caffe" ["e"=1]
"solrex/caffe-mobile" -> "facebookarchive/AICamera"
"solrex/caffe-mobile" -> "jay-mahadeokar/pynetbuilder" ["e"=1]
"solrex/caffe-mobile" -> "OAID/YSQfastfd"
"xmfbit/warpctc-caffe" -> "happynear/SpatialTransformerLayer"
"xmfbit/warpctc-caffe" -> "yalecyu/crnn.caffe"
"gaobb/DLDL" -> "PuNeal/DLDL-v2-PyTorch"
"gaobb/DLDL" -> "gaobb/DLDL-v2"
"gaobb/DLDL" -> "zeakey/LDLForests"
"dannyblueliu/YOLO-Face-detection" -> "quanhua92/darknet"
"dannyblueliu/YOLO-Face-detection" -> "xhuvom/FaceID"
"dannyblueliu/YOLO-Face-detection" -> "azmathmoosa/azFace"
"dannyblueliu/YOLO-Face-detection" -> "imistyrain/yolo-face"
"dannyblueliu/YOLO-Face-detection" -> "abars/YoloKerasFaceDetection"
"vadimkantorov/metriclearningbench" -> "neka-nat/pytorch-hdml"
"EncodeTS/TensorFlow_Center_Loss" -> "shamangary/Keras-MNIST-center-loss-with-visualization"
"EncodeTS/TensorFlow_Center_Loss" -> "pppoe/tensorflow-sphereface-asoftmax"
"EncodeTS/TensorFlow_Center_Loss" -> "zoli333/Center-Loss"
"liuyuisanai/Quality-Aware-Network" -> "hwang1996/Set-to-Set-Recognition"
"liuyuisanai/Quality-Aware-Network" -> "liuyuisanai/CaffeMex_v2"
"liuyuisanai/Quality-Aware-Network" -> "dapengchen123/video_reid" ["e"=1]
"liuyuisanai/Quality-Aware-Network" -> "jinyanxu/Neural-Aggregation-Network-for-Video-Face-Recognition"
"liuyuisanai/Quality-Aware-Network" -> "shuangjiexu/Spatial-Temporal-Pooling-Networks-ReID" ["e"=1]
"aagrawal207/OpenCV-Face-Recognition" -> "aagrawal207/AutoAttendance"
"aagrawal207/OpenCV-Face-Recognition" -> "malharsk27/Autoattendance-Cognitive"
"serengil/encrypted-class-loader" -> "serengil/neural-networks"
"serengil/encrypted-class-loader" -> "serengil/exchanging-encrypted-mails"
"sahnimanas/Fatigue-Detection" -> "raja434/driver-fatigue-detection-system"
"shubham0204/OnDevice-Face-Recognition-Android" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"hojak99/fire-detection" -> "xjg0124/Fire-and-Smoke-Detection"
"zhly0/facenet-face-cluster-chinese-whispers-" -> "KaleidoZhouYN/Pytorch_FRS"
"zhly0/facenet-face-cluster-chinese-whispers-" -> "varun-suresh/Clustering"
"oarriaga/SSD-keras" -> "wikke/SSD_Keras"
"PkuRainBow/HDC.caffe" -> "PkuRainBow/Hard-Aware-Deeply-Cascaed-Embedding"
"PkuRainBow/HDC.caffe" -> "chaoyuaw/incubator-mxnet"
"PkuRainBow/HDC.caffe" -> "mop/bier"
"PkuRainBow/HDC.caffe" -> "rksltnl/Deep-Metric-Learning-CVPR16"
"sourabhvora/HyperFace-with-SqueezeNet" -> "shashanktyagi/HyperFace-TensorFlow-implementation"
"sourabhvora/HyperFace-with-SqueezeNet" -> "Adityav2410/RealTimeHyperface"
"cypw/ResNeXt-1" -> "cholihao/Retinaface-caffe"
"PkuRainBow/Hard-Aware-Deeply-Cascaed-Embedding" -> "guoshengcv/cul"
"RobertBiehl/caffe2-ios" -> "KleinYuan/Caffe2-iOS"
"aagrawal207/AutoAttendance" -> "aagrawal207/OpenCV-Face-Recognition"
"serengil/exchanging-encrypted-mails" -> "serengil/neural-networks"
"cleardusk/EmotionChallenge" -> "cleardusk/ImageToAscii"
"cleardusk/EmotionChallenge" -> "cleardusk/UCAS"
"ZhiwenShao/MCNet" -> "ZhiwenShao/CFT"
"natanielruiz/dockerface" -> "stevenyangyj/deep-head-pose-lite"
"AlfredXiangWu/LightCNN" -> "AlfredXiangWu/face_verification_experiment"
"AlfredXiangWu/LightCNN" -> "wy1iu/sphereface"
"AlfredXiangWu/LightCNN" -> "gh0stintheshe11/Stats-SVG" ["e"=1]
"AlfredXiangWu/LightCNN" -> "HRLTY/TP-GAN" ["e"=1]
"AlfredXiangWu/LightCNN" -> "clcarwin/sphereface_pytorch"
"AlfredXiangWu/LightCNN" -> "wangxupeng/2019Legal-AI-Challenge-Legal-Case-Element-Recognition-solution" ["e"=1]
"AlfredXiangWu/LightCNN" -> "rytsai/best-undress-ai-list" ["e"=1]
"AlfredXiangWu/LightCNN" -> "risesoft-y9/Data-Labeling" ["e"=1]
"AlfredXiangWu/LightCNN" -> "RexGRM/Alz-IDProteinExplorer" ["e"=1]
"AlfredXiangWu/LightCNN" -> "mqz111a/virtual_human_stream" ["e"=1]
"AlfredXiangWu/LightCNN" -> "JinhuaLiang/WavCraft" ["e"=1]
"AlfredXiangWu/LightCNN" -> "yxu0611/Tensorflow-implementation-of-LCNN"
"AlfredXiangWu/LightCNN" -> "cydonia999/VGGFace2-pytorch"
"AlfredXiangWu/LightCNN" -> "ydwen/caffe-face"
"AlfredXiangWu/LightCNN" -> "ShareGPT4Omni/ShareGPT4Video" ["e"=1]
"asdfqwrasdf/ArcFaceDemo" -> "gqjjqg/android-extend"
"asdfqwrasdf/ArcFaceDemo" -> "SkyStonePan/ArcfaceDemo_Android"
"asdfqwrasdf/ArcFaceDemo" -> "smartkids77/ArcSoft_FreeSDK_Demo"
"asdfqwrasdf/ArcFaceDemo" -> "FacePlusPlus/MegviiFacepp-Android-SDK"
"asdfqwrasdf/ArcFaceDemo" -> "ZeroingIn/facedemo"
"asdfqwrasdf/ArcFaceDemo" -> "junerver/ArcFaceDemo"
"asdfqwrasdf/ArcFaceDemo" -> "tzutalin/dlib-android-app"
"asdfqwrasdf/ArcFaceDemo" -> "tyhjh/ArcFace"
"OAID/Caffe-HRT" -> "OAID/MXNet-HRT"
"OAID/Caffe-HRT" -> "IntelLabs/SkimCaffe" ["e"=1]
"OAID/Caffe-HRT" -> "ARM-software/ComputeLibrary" ["e"=1]
"OAID/Caffe-HRT" -> "OAID/FaceDetection"
"OAID/Caffe-HRT" -> "OAID/YSQfastfd"
"OAID/Caffe-HRT" -> "OAID/FaceRecognition"
"OAID/Caffe-HRT" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"OAID/Caffe-HRT" -> "camel007/Caffe-ShuffleNet" ["e"=1]
"OAID/Caffe-HRT" -> "pmgysel/caffe" ["e"=1]
"OAID/Caffe-HRT" -> "dlunion/mtcnn"
"OAID/Caffe-HRT" -> "merrymercy/tvm-mali" ["e"=1]
"OAID/Caffe-HRT" -> "solrex/caffe-mobile"
"OAID/Caffe-HRT" -> "happynear/MTCNN_face_detection_alignment"
"seathiefwang/FaceRecognition-tensorflow" -> "jerry1900/faceRecognition"
"seathiefwang/FaceRecognition-tensorflow" -> "coneypo/Dlib_face_recognition_from_camera"
"seathiefwang/FaceRecognition-tensorflow" -> "kuaikuaikim/dface"
"seathiefwang/FaceRecognition-tensorflow" -> "bystc/FaceRecognition" ["e"=1]
"seathiefwang/FaceRecognition-tensorflow" -> "shanren7/real_time_face_recognition"
"seathiefwang/FaceRecognition-tensorflow" -> "windzu/facenet_facerecognition"
"seathiefwang/FaceRecognition-tensorflow" -> "yeziyang1992/Python-Tensorflow-Face-v2.0"
"seathiefwang/FaceRecognition-tensorflow" -> "winterssy/face_recognition_py"
"seathiefwang/FaceRecognition-tensorflow" -> "vipstone/faceai"
"seathiefwang/FaceRecognition-tensorflow" -> "kongqw/OpenCVForAndroid"
"seathiefwang/FaceRecognition-tensorflow" -> "chenlinzhong/face-login"
"seathiefwang/FaceRecognition-tensorflow" -> "davidsandberg/facenet"
"seathiefwang/FaceRecognition-tensorflow" -> "fuzheng0301/FaceRecognition" ["e"=1]
"seathiefwang/FaceRecognition-tensorflow" -> "kpzhang93/MTCNN_face_detection_alignment"
"seathiefwang/FaceRecognition-tensorflow" -> "inspurer/WorkAttendanceSystem"
"omnigeeker/mlnd_distracted_driver_detection" -> "PengfeiM/Fatigue-Driven-Detection-Based-on-CNN"
"omnigeeker/mlnd_distracted_driver_detection" -> "Aristochi/Dangerous_driving_behavior_detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "DohaerisT/DangerousDrivingDetector"
"omnigeeker/mlnd_distracted_driver_detection" -> "rikichou/distracted-driving-detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "KyrieIrv11ng/Yolov5-driving-detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "9reyson/FatigueDrivingReco"
"omnigeeker/mlnd_distracted_driver_detection" -> "Aristochi/MTCNN_CNN_DangerDrivingDetection"
"omnigeeker/mlnd_distracted_driver_detection" -> "kc345ws/FatigueMonitoring"
"omnigeeker/mlnd_distracted_driver_detection" -> "AnirudhGP/DrowsyDriverDetection"
"omnigeeker/mlnd_distracted_driver_detection" -> "toshi-k/kaggle-distracted-driver-detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "BillySturate/Fatigue-driving-detection-system-based-on-opencv-dlib"
"omnigeeker/mlnd_distracted_driver_detection" -> "oswaldoludwig/Human-Action-Recognition-with-Keras" ["e"=1]
"omnigeeker/mlnd_distracted_driver_detection" -> "luisarojas/distracted-driver-detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "raja434/driver-fatigue-detection-system"
"serengil/tensorflow-101" -> "nyoki-mtl/keras-facenet"
"serengil/tensorflow-101" -> "rcmalli/keras-vggface"
"serengil/tensorflow-101" -> "vsyw/Keras-OpenFace"
"serengil/tensorflow-101" -> "serengil/crypto"
"serengil/tensorflow-101" -> "serengil/neural-networks-py"
"serengil/tensorflow-101" -> "serengil/deepface"
"serengil/tensorflow-101" -> "thoughtworksarts/EmoPy" ["e"=1]
"serengil/tensorflow-101" -> "serengil/chefboost"
"serengil/tensorflow-101" -> "amineHorseman/facial-expression-recognition-using-cnn" ["e"=1]
"serengil/tensorflow-101" -> "yu4u/age-gender-estimation"
"serengil/tensorflow-101" -> "serengil/retinaface"
"serengil/tensorflow-101" -> "serengil/exchanging-encrypted-mails"
"serengil/tensorflow-101" -> "akshaybahadur21/Facial-Recognition-using-Facenet"
"serengil/tensorflow-101" -> "swghosh/DeepFace"
"serengil/tensorflow-101" -> "deeplearningturkiye/turkce-yapay-zeka-kaynaklari" ["e"=1]
"Willjay90/AppleFaceDetection" -> "ahashim1/Face"
"Willjay90/AppleFaceDetection" -> "gunapandianraj/iOS11-VisionFrameWork" ["e"=1]
"Willjay90/AppleFaceDetection" -> "r4ghu/iOS-CoreML-Yolo" ["e"=1]
"Willjay90/AppleFaceDetection" -> "ryanmasondavies/FaceDetection"
"Willjay90/AppleFaceDetection" -> "mattlawer/FaceLandmarksDetection"
"vudung45/FaceRec" -> "habrman/FaceRecognition"
"vudung45/FaceRec" -> "vudung45/FaceRTC"
"SimonCherryGZ/ARCamera" -> "Martin20150405/Omoshiroi" ["e"=1]
"SimonCherryGZ/ARCamera" -> "SimonCherryGZ/face-landmark-android"
"SimonCherryGZ/ARCamera" -> "SimonCherryGZ/AverageFaceDemo"
"SimonCherryGZ/ARCamera" -> "tunaemre/Face-Swap-Android"
"SimonCherryGZ/ARCamera" -> "androidroadies/FaceSwap"
"gicheonkang/fast-face-android" -> "tzutalin/dlib-android-app"
"gicheonkang/fast-face-android" -> "tzutalin/dlib-android"
"gicheonkang/fast-face-android" -> "SimonCherryGZ/face-landmark-android"
"gicheonkang/fast-face-android" -> "zweigraf/face-landmarking-ios"
"gicheonkang/fast-face-android" -> "szad670401/HyperLandmark"
"gicheonkang/fast-face-android" -> "gv22ga/dlib-face-recognition-android"
"gicheonkang/fast-face-android" -> "FaceAR/OpenFaceIOS"
"gicheonkang/fast-face-android" -> "lawsonsli/faceCapture"
"gicheonkang/fast-face-android" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"gicheonkang/fast-face-android" -> "tunaemre/Face-Swap-Android"
"gicheonkang/fast-face-android" -> "betri28/FaceDetectCamera"
"gicheonkang/fast-face-android" -> "flyingzhao/FacialLandmarkAndroid"
"gicheonkang/fast-face-android" -> "Luca96/android-face-landmarks"
"gicheonkang/fast-face-android" -> "chengzhengxin/sdm"
"gicheonkang/fast-face-android" -> "mrgloom/Face-landmarks-detection-benchmark"
"panda-lab/face-landmark" -> "chengzhengxin/sdm"
"panda-lab/face-landmark" -> "szad670401/HyperLandmark"
"panda-lab/face-landmark" -> "qiexing/face-landmark-localization"
"panda-lab/face-landmark" -> "CongWeilin/mtcnn-caffe"
"panda-lab/face-landmark" -> "dlunion/mtcnn"
"panda-lab/face-landmark" -> "ElegantGod/ncnn"
"panda-lab/face-landmark" -> "moli232777144/mtcnn_ncnn"
"panda-lab/face-landmark" -> "wywu/LAB"
"panda-lab/face-landmark" -> "MarekKowalski/DeepAlignmentNetwork"
"panda-lab/face-landmark" -> "zeusees/FaceBoxes"
"panda-lab/face-landmark" -> "Seanlinx/mtcnn"
"panda-lab/face-landmark" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"panda-lab/face-landmark" -> "blankWorld/MTCNN-Accelerate-Onet"
"panda-lab/face-landmark" -> "luoyetx/deep-landmark"
"panda-lab/face-landmark" -> "zhzhanp/TCDCN-face-alignment"
"AlphaQi/MTCNN-light" -> "dlunion/mtcnn"
"AlphaQi/MTCNN-light" -> "foreverYoungGitHub/MTCNN"
"AlphaQi/MTCNN-light" -> "moli232777144/mtcnn_ncnn"
"AlphaQi/MTCNN-light" -> "happynear/MTCNN_face_detection_alignment"
"AlphaQi/MTCNN-light" -> "Seanlinx/mtcnn"
"AlphaQi/MTCNN-light" -> "CongWeilin/mtcnn-caffe"
"AlphaQi/MTCNN-light" -> "zeusees/FaceBoxes"
"AlphaQi/MTCNN-light" -> "ElegantGod/ncnn"
"AlphaQi/MTCNN-light" -> "DaFuCoding/MTCNN_Caffe"
"AlphaQi/MTCNN-light" -> "ydwen/caffe-face"
"AlphaQi/MTCNN-light" -> "szad670401/Fast-MTCNN"
"AlphaQi/MTCNN-light" -> "imistyrain/MTCNN"
"AlphaQi/MTCNN-light" -> "blankWorld/MTCNN-Accelerate-Onet"
"AlphaQi/MTCNN-light" -> "luoyetx/mini-caffe"
"AlphaQi/MTCNN-light" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"ElegantGod/ncnn" -> "moli232777144/mtcnn_ncnn"
"ElegantGod/ncnn" -> "Longqi-S/ncnn-mtcnn"
"ElegantGod/ncnn" -> "dlunion/mtcnn"
"ElegantGod/ncnn" -> "moli232777144/mobilefacenet-mxnet"
"ElegantGod/ncnn" -> "honghuCode/mobileFacenet-ncnn"
"ElegantGod/ncnn" -> "foreverYoungGitHub/MTCNN"
"ElegantGod/ncnn" -> "AlphaQi/MTCNN-light"
"ElegantGod/ncnn" -> "CongWeilin/mtcnn-caffe"
"ElegantGod/ncnn" -> "panda-lab/face-landmark"
"ElegantGod/ncnn" -> "DaFuCoding/MTCNN_Caffe"
"ElegantGod/ncnn" -> "blankWorld/MTCNN-Accelerate-Onet"
"ElegantGod/ncnn" -> "cpuimage/MTCNN"
"ElegantGod/ncnn" -> "dangbo/ncnn-mobile"
"ElegantGod/ncnn" -> "szad670401/Fast-MTCNN"
"ElegantGod/ncnn" -> "qiexing/face-landmark-localization"
"shashanktyagi/HyperFace-TensorFlow-implementation" -> "sourabhvora/HyperFace-with-SqueezeNet"
"shashanktyagi/HyperFace-TensorFlow-implementation" -> "takiyu/hyperface"
"shashanktyagi/HyperFace-TensorFlow-implementation" -> "maharshi95/HyperFace"
"shashanktyagi/HyperFace-TensorFlow-implementation" -> "Adityav2410/RealTimeHyperface"
"shashanktyagi/HyperFace-TensorFlow-implementation" -> "pasrichashivam/hyperface_deep_multi-task-learning_keras_implementation"
"wy1iu/sphereface" -> "ydwen/caffe-face"
"wy1iu/sphereface" -> "happynear/AMSoftmax"
"wy1iu/sphereface" -> "clcarwin/sphereface_pytorch"
"wy1iu/sphereface" -> "wy1iu/LargeMargin_Softmax_Loss"
"wy1iu/sphereface" -> "happynear/NormFace"
"wy1iu/sphereface" -> "kpzhang93/MTCNN_face_detection_alignment"
"wy1iu/sphereface" -> "AlfredXiangWu/face_verification_experiment"
"wy1iu/sphereface" -> "happynear/FaceVerification"
"wy1iu/sphereface" -> "Joker316701882/Additive-Margin-Softmax"
"wy1iu/sphereface" -> "fwang91/IMDb-Face"
"wy1iu/sphereface" -> "Seanlinx/mtcnn"
"wy1iu/sphereface" -> "happynear/FaceDatasets"
"wy1iu/sphereface" -> "mahyarnajibi/SSH"
"wy1iu/sphereface" -> "xialuxi/arcface-caffe"
"wy1iu/sphereface" -> "dlunion/mtcnn"
"eveningglow/age-and-gender-classification" -> "LouieYang/AgeAndGenderEstimation"
"lawsonsli/faceCapture" -> "tzutalin/dlib-android-app"
"lawsonsli/faceCapture" -> "huihut/Facemoji"
"lawsonsli/faceCapture" -> "gicheonkang/fast-face-android"
"lawsonsli/faceCapture" -> "HTTdesu/SimpleFacerig"
"lawsonsli/faceCapture" -> "jan-skarupa/facerig"
"lawsonsli/faceCapture" -> "TianxingWu/OpenVHead" ["e"=1]
"lawsonsli/faceCapture" -> "tzutalin/dlib-android"
"lawsonsli/faceCapture" -> "miaoerduo/dlib-face-landmark-compression"
"lawsonsli/faceCapture" -> "tcw165/my-dlib-experiment" ["e"=1]
"raja434/driver-fatigue-detection-system" -> "adityachechani/Driver-Fatigue-Detection"
"raja434/driver-fatigue-detection-system" -> "sahnimanas/Fatigue-Detection"
"raja434/driver-fatigue-detection-system" -> "AnirudhGP/DrowsyDriverDetection"
"raja434/driver-fatigue-detection-system" -> "tahaemara/sleep-detection"
"raja434/driver-fatigue-detection-system" -> "seilna/Deep-RDD"
"raja434/driver-fatigue-detection-system" -> "nishagandhi/DrowsyDriverDetection"
"raja434/driver-fatigue-detection-system" -> "akshaybahadur21/Drowsiness_Detection"
"raja434/driver-fatigue-detection-system" -> "piyushbajaj0704/Driver-Sleep-Detection-Face-Eyes-Mouth-Detection"
"raja434/driver-fatigue-detection-system" -> "jaisayush/Fatigue-Detection-System-Based-On-Behavioural-Characteristics-Of-Driver"
"ci2cv/face-analysis-sdk" -> "patrikhuber/4dface" ["e"=1]
"ci2cv/face-analysis-sdk" -> "kylemcdonald/FaceTracker"
"ci2cv/face-analysis-sdk" -> "yulequan/face-alignment-in-3000fps"
"ci2cv/face-analysis-sdk" -> "patrikhuber/superviseddescent"
"ci2cv/face-analysis-sdk" -> "TadasBaltrusaitis/CLM-framework"
"ci2cv/face-analysis-sdk" -> "MichaelMure/3DMM" ["e"=1]
"ci2cv/face-analysis-sdk" -> "jwyang/face-alignment"
"ci2cv/face-analysis-sdk" -> "patrikhuber/eos" ["e"=1]
"ci2cv/face-analysis-sdk" -> "menpo/lsfm" ["e"=1]
"ci2cv/face-analysis-sdk" -> "cheind/dest"
"ci2cv/face-analysis-sdk" -> "chengzhengxin/sdm"
"ci2cv/face-analysis-sdk" -> "luoyetx/face-alignment-at-3000fps"
"ci2cv/face-analysis-sdk" -> "freesouls/face-alignment-at-3000fps"
"ci2cv/face-analysis-sdk" -> "sai-bi/FaceAlignment"
"ci2cv/face-analysis-sdk" -> "anhttran/3dmm_cnn" ["e"=1]
"informramiz/opencv-face-recognition-python" -> "nazmiasri95/Face-Recognition"
"informramiz/opencv-face-recognition-python" -> "informramiz/Face-Detection-OpenCV"
"informramiz/opencv-face-recognition-python" -> "Mjrovai/OpenCV-Face-Recognition"
"informramiz/opencv-face-recognition-python" -> "neha01/FaceRecognition"
"informramiz/opencv-face-recognition-python" -> "thecodacus/Face-Recognition"
"informramiz/opencv-face-recognition-python" -> "shantnu/Webcam-Face-Detect"
"informramiz/opencv-face-recognition-python" -> "parulnith/Face-Detection-in-Python-using-OpenCV" ["e"=1]
"informramiz/opencv-face-recognition-python" -> "krasserm/face-recognition"
"informramiz/opencv-face-recognition-python" -> "habrman/FaceRecognition"
"informramiz/opencv-face-recognition-python" -> "shantnu/FaceDetect"
"informramiz/opencv-face-recognition-python" -> "jerry1900/faceRecognition"
"dlunion/CaffeLSTM-OCR" -> "dlunion/CCDL"
"dlunion/CaffeLSTM-OCR" -> "dlunion/CC4.0"
"dlunion/CaffeLSTM-OCR" -> "dlunion/CC5.0"
"dlunion/CaffeLSTM-OCR" -> "xmfbit/warpctc-caffe"
"dlunion/CaffeLSTM-OCR" -> "kasyoukin/caffe_ocr_for_linux"
"dlunion/CaffeLSTM-OCR" -> "senlinuc/caffe_ocr" ["e"=1]
"dlunion/CaffeLSTM-OCR" -> "dlunion/EasyOpenPose"
"dlunion/CaffeLSTM-OCR" -> "yalecyu/crnn.caffe"
"dlunion/CaffeLSTM-OCR" -> "warrentdrew/Caffe_SSD_LSTM_LPR"
"dlunion/mtcnn" -> "CongWeilin/mtcnn-caffe"
"dlunion/mtcnn" -> "AlphaQi/MTCNN-light"
"dlunion/mtcnn" -> "DaFuCoding/MTCNN_Caffe"
"dlunion/mtcnn" -> "Seanlinx/mtcnn"
"dlunion/mtcnn" -> "foreverYoungGitHub/MTCNN"
"dlunion/mtcnn" -> "moli232777144/mtcnn_ncnn"
"dlunion/mtcnn" -> "ElegantGod/ncnn"
"dlunion/mtcnn" -> "happynear/MTCNN_face_detection_alignment"
"dlunion/mtcnn" -> "dlunion/CCDL"
"dlunion/mtcnn" -> "blankWorld/MTCNN-Accelerate-Onet"
"dlunion/mtcnn" -> "zeusees/FaceBoxes"
"dlunion/mtcnn" -> "panda-lab/face-landmark"
"dlunion/mtcnn" -> "ydwen/caffe-face"
"dlunion/mtcnn" -> "chengzhengxin/sdm"
"dlunion/mtcnn" -> "zuoqing1988/train-mtcnn"
"jlsuarezdiaz/pyDML" -> "johny-c/pylmnn"
"jlsuarezdiaz/pyDML" -> "ari-dasci/S-TSFE-DL"
"dangbo/ncnn-mobile" -> "GRAYKEY/mobilefacenet_android"
"dangbo/ncnn-mobile" -> "moli232777144/mtcnn_ncnn"
"dangbo/ncnn-mobile" -> "ElegantGod/ncnn"
"dangbo/ncnn-mobile" -> "KaleidoZhouYN/mobilefacenet-caffe"
"dangbo/ncnn-mobile" -> "moli232777144/mobilefacenet-mxnet"
"dangbo/ncnn-mobile" -> "zhanglaplace/MobileFaceNet"
"dangbo/ncnn-mobile" -> "starimeL/PytorchConverter" ["e"=1]
"dangbo/ncnn-mobile" -> "miaoerduo/dlib-face-landmark-compression"
"dangbo/ncnn-mobile" -> "HansRen1024/Face-Tracking-Using-CNN-and-Optical-Flow"
"OAID/YSQfastfd" -> "OAID/FaceDetection"
"OAID/YSQfastfd" -> "Longqi-S/ncnn-mtcnn"
"OAID/YSQfastfd" -> "luoyetx/mini-caffe"
"OAID/YSQfastfd" -> "OAID/FaceRecognition"
"OAID/YSQfastfd" -> "zeusees/FaceBoxes"
"OAID/YSQfastfd" -> "camel007/Caffe-ShuffleNet" ["e"=1]
"OAID/YSQfastfd" -> "OAID/Caffe-HRT"
"wujiyang/Triplet-Loss" -> "wujiyang/Contrastive-Loss"
"wujiyang/Triplet-Loss" -> "wujiyang/FaceRecognition"
"liuziwei7/mobile-id" -> "Tonyfy/LCNN_TRAIN"
"liuziwei7/mobile-id" -> "happynear/NormFace"
"cyberfire/tensorflow-mtcnn" -> "OAID/FaceDetection"
"cyberfire/tensorflow-mtcnn" -> "mndar/facenet_classifier"
"habrman/FaceRecognition" -> "vudung45/FaceRec"
"habrman/FaceRecognition" -> "nazmiasri95/Face-Recognition"
"MarekKowalski/DeepAlignmentNetwork" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"MarekKowalski/DeepAlignmentNetwork" -> "mariolew/Deep-Alignment-Network-tensorflow"
"MarekKowalski/DeepAlignmentNetwork" -> "wywu/LAB"
"MarekKowalski/DeepAlignmentNetwork" -> "chengzhengxin/sdm"
"MarekKowalski/DeepAlignmentNetwork" -> "shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization"
"MarekKowalski/DeepAlignmentNetwork" -> "panda-lab/face-landmark"
"MarekKowalski/DeepAlignmentNetwork" -> "facebookresearch/supervision-by-registration"
"MarekKowalski/DeepAlignmentNetwork" -> "yulequan/face-alignment-in-3000fps"
"MarekKowalski/DeepAlignmentNetwork" -> "mrgloom/Face-landmarks-detection-benchmark"
"MarekKowalski/DeepAlignmentNetwork" -> "qiexing/face-landmark-localization"
"MarekKowalski/DeepAlignmentNetwork" -> "zhzhanp/TCDCN-face-alignment"
"MarekKowalski/DeepAlignmentNetwork" -> "YuvalNirkin/face_segmentation" ["e"=1]
"MarekKowalski/DeepAlignmentNetwork" -> "MarekKowalski/FaceSwap" ["e"=1]
"MarekKowalski/DeepAlignmentNetwork" -> "fengju514/Face-Pose-Net" ["e"=1]
"MarekKowalski/DeepAlignmentNetwork" -> "ishay2b/VanillaCNN"
"OAID/FaceDetection" -> "OAID/YSQfastfd"
"OAID/FaceDetection" -> "OAID/FaceRecognition"
"OAID/FaceDetection" -> "happynear/MTCNN_face_detection_alignment"
"OAID/FaceDetection" -> "cyberfire/tensorflow-mtcnn"
"OAID/FaceDetection" -> "foreverYoungGitHub/MTCNN"
"OAID/FaceDetection" -> "dlunion/mtcnn"
"OAID/FaceDetection" -> "AlphaQi/MTCNN-light"
"OAID/FaceDetection" -> "ElegantGod/ncnn"
"OAID/FaceDetection" -> "OAID/Caffe-HRT"
"OAID/FaceDetection" -> "DaFuCoding/MTCNN_Caffe"
"OAID/FaceDetection" -> "blankWorld/MTCNN-Accelerate-Onet"
"OAID/FaceDetection" -> "mndar/facenet_classifier"
"OAID/FaceDetection" -> "zeusees/FaceBoxes"
"OAID/FaceDetection" -> "honghuCode/mobileFacenet-ncnn"
"thecodacus/Face-Recognition" -> "nazmiasri95/Face-Recognition"
"vsyw/Keras-OpenFace" -> "krasserm/face-recognition"
"vsyw/Keras-OpenFace" -> "nyoki-mtl/keras-facenet"
"vsyw/Keras-OpenFace" -> "allanzelener/YAD2K" ["e"=1]
"vsyw/Keras-OpenFace" -> "sumantrajoshi/Face-recognition-using-deep-learning"
"vsyw/Keras-OpenFace" -> "davidsandberg/facenet"
"vsyw/Keras-OpenFace" -> "vinayakarannil/Face_Recognition"
"vsyw/Keras-OpenFace" -> "rcmalli/keras-vggface"
"vsyw/Keras-OpenFace" -> "akshaybahadur21/Facial-Recognition-using-Facenet"
"vsyw/Keras-OpenFace" -> "Skuldur/facenet-face-recognition"
"vsyw/Keras-OpenFace" -> "log0/neural-style-painting" ["e"=1]
"vsyw/Keras-OpenFace" -> "sainimohit23/FaceNet-Real-Time-face-recognition"
"vsyw/Keras-OpenFace" -> "serengil/tensorflow-101"
"vsyw/Keras-OpenFace" -> "fchollet/deep-learning-models" ["e"=1]
"vsyw/Keras-OpenFace" -> "experiencor/keras-yolo2" ["e"=1]
"vsyw/Keras-OpenFace" -> "auroua/InsightFace_TF"
"jxgu1016/MNIST_center_loss_pytorch" -> "KaiyangZhou/pytorch-center-loss"
"jxgu1016/MNIST_center_loss_pytorch" -> "louis-she/center-loss.pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "YirongMao/softmax_variants"
"jxgu1016/MNIST_center_loss_pytorch" -> "liorshk/facenet_pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "lyakaap/image-feature-learning-pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "clcarwin/sphereface_pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "AruniRC/resnet-face-pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "jihunchoi/lsoftmax-pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "amirhfarzaneh/lsoftmax-pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "bnu-wangxun/Deep_Metric"
"jxgu1016/MNIST_center_loss_pytorch" -> "MuggleWang/CosFace_pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"liuyuisanai/RSA-for-object-detection" -> "liuyuisanai/coco_loss"
"liuyuisanai/RSA-for-object-detection" -> "happynear/FaceDatasets"
"liuyuisanai/RSA-for-object-detection" -> "happynear/NormFace"
"liuyuisanai/RSA-for-object-detection" -> "walkoncross/prepare-faces-zyf"
"liuyuisanai/RSA-for-object-detection" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"liuyuisanai/RSA-for-object-detection" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"liuyuisanai/RSA-for-object-detection" -> "power0341/RSA_pycaffe"
"liuyuisanai/RSA-for-object-detection" -> "zhanglaplace/MobileFaceNet"
"liuyuisanai/RSA-for-object-detection" -> "blankWorld/MTCNN-Accelerate-Onet"
"liuyuisanai/RSA-for-object-detection" -> "happynear/FaceVerification"
"liuyuisanai/RSA-for-object-detection" -> "mahyarnajibi/SSH"
"liuyuisanai/RSA-for-object-detection" -> "zeusees/FaceBoxes"
"liuyuisanai/RSA-for-object-detection" -> "happynear/AMSoftmax"
"smartkids77/ArcSoft_FreeSDK_Demo" -> "ArcJonSnow/Demo_for_Windows"
"HuyTu7/face_rating" -> "erogol/beauty.torch"
"HuyTu7/face_rating" -> "bknyaz/beauty_vision"
"HuyTu7/face_rating" -> "UCI-NLP-course-team/graphcnn-few-shot-text-classification"
"HuyTu7/face_rating" -> "ustcqidi/BeautyPredict"
"yeephycho/widerface-to-tfrecord" -> "iitzco/widerface-to-tfrecord"
"cjiang2/AgeEstimateAdience" -> "dandynaufaldi/Agendernet"
"varun-suresh/Clustering" -> "zhly0/facenet-face-cluster-chinese-whispers-"
"varun-suresh/Clustering" -> "kevinlu1211/FacialClusteringPipeline"
"varun-suresh/Clustering" -> "Zhongdao/gcn_clustering"
"varun-suresh/Clustering" -> "yl-1993/learn-to-cluster"
"walkoncross/prepare-faces-zyf" -> "liuyuisanai/coco_loss"
"walkoncross/prepare-faces-zyf" -> "KaleidoZhouYN/Pytorch_FRS"
"walkoncross/prepare-faces-zyf" -> "liuyuisanai/RSA-for-object-detection"
"walkoncross/prepare-faces-zyf" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"yalecyu/crnn.caffe" -> "kasyoukin/caffe_ocr_for_linux"
"wujiyang/FaceRecognition" -> "wujiyang/Contrastive-Loss"
"wujiyang/FaceRecognition" -> "wujiyang/DlibFace"
"wujiyang/FaceRecognition" -> "wujiyang/Triplet-Loss"
"goodluckcwl/Sphereface-model" -> "ElegantGod/mxnet-SSHA"
"nazmiasri95/Face-Recognition" -> "thecodacus/Face-Recognition"
"OAID/MXNet-HRT" -> "OAID/Caffe-HRT"
"shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization" -> "cunjian/face_alignment"
"daikankan/MegaFace" -> "walkoncross/megaface-eval-zyf"
"wujiyang/Contrastive-Loss" -> "wujiyang/Triplet-Loss"
"arunponnusamy/cvlib" ["l"="32.889,29.335"]
"arunponnusamy/object-detection-opencv" ["l"="32.809,29.37"]
"arunponnusamy/gender-detection-keras" ["l"="32.872,29.281"]
"Luca96/dlib-minified-models" ["l"="32.819,29.325"]
"arunponnusamy/face-detection-comparison" ["l"="32.851,29.33"]
"augmentedstartups/AS-One" ["l"="54.54,32.414"]
"ipazc/mtcnn" ["l"="33.28,29.326"]
"davisking/dlib" ["l"="33.561,29.281"]
"cmusatyalab/openface" ["l"="33.525,29.32"]
"davidsandberg/facenet" ["l"="33.416,29.377"]
"ShiqiYu/libfacedetection" ["l"="33.457,29.3"]
"TadasBaltrusaitis/OpenFace" ["l"="33.418,29.241"]
"ageitgey/face_recognition" ["l"="33.654,29.431"]
"BVLC/caffe" ["l"="48.066,29.002"]
"CMU-Perceptual-Computing-Lab/openpose" ["l"="50.442,29.763"]
"mlpack/mlpack" ["l"="47.673,29.17"]
"davisking/dlib-models" ["l"="33.321,29.147"]
"opencv/opencv_contrib" ["l"="59.276,10.852"]
"Tencent/ncnn" ["l"="50.241,29.805"]
"pjreddie/darknet" ["l"="50.479,29.806"]
"tiny-dnn/tiny-dnn" ["l"="47.785,29.128"]
"seetaface/SeetaFaceEngine" ["l"="33.325,29.277"]
"opencv/opencv" ["l"="48.256,29.118"]
"vipstone/faceai" ["l"="33.371,29.563"]
"coneypo/Dlib_face_recognition_from_camera" ["l"="33.206,29.557"]
"jackzhenguo/python-small-examples" ["l"="48.09,23.503"]
"Kr1s77/awesome-python-login-model" ["l"="48.203,23.436"]
"apachecn/ailearning" ["l"="50.919,28.214"]
"imhuay/Algorithm_Interview_Notes-Chinese" ["l"="50.748,28.231"]
"scutan90/DeepLearning-500-questions" ["l"="50.915,28.314"]
"facert/awesome-spider" ["l"="48.245,23.399"]
"Jack-Cherish/python-spider" ["l"="48.193,23.401"]
"MLEveryday/100-Days-Of-ML-Code" ["l"="50.911,28.261"]
"oarriaga/face_classification" ["l"="55.996,27.258"]
"0voice/interview_internal_reference" ["l"="-4.411,17.665"]
"qiurunze123/miaosha" ["l"="-4.403,15.074"]
"mahyarnajibi/SSH" ["l"="33.229,29.206"]
"sfzhang15/SFD" ["l"="33.24,29.179"]
"zeusees/FaceBoxes" ["l"="33.205,29.187"]
"peiyunh/tiny" ["l"="33.202,29.166"]
"wy1iu/sphereface" ["l"="33.189,29.282"]
"liuyuisanai/RSA-for-object-detection" ["l"="33.167,29.26"]
"kpzhang93/MTCNN_face_detection_alignment" ["l"="33.233,29.258"]
"Rock-100/FaceKit" ["l"="33.25,29.205"]
"AlphaQi/MTCNN-light" ["l"="33.158,29.183"]
"happynear/NormFace" ["l"="33.13,29.276"]
"wywu/LAB" ["l"="33.279,29.127"]
"Seanlinx/mtcnn" ["l"="33.165,29.213"]
"CongWeilin/mtcnn-caffe" ["l"="33.179,29.203"]
"dlunion/mtcnn" ["l"="33.16,29.194"]
"ydwen/caffe-face" ["l"="33.15,29.227"]
"Tencent/FaceDetection-DSFD" ["l"="33.344,29.251"]
"shubhamkumar27/Face_recognition_based_attendance_system" ["l"="32.834,29.921"]
"ayushreal/Signature-recognition" ["l"="32.791,30.004"]
"K-G-PRAJWAL/Python-Projects" ["l"="32.814,29.958"]
"surajsinghbisht054/Python-Media-Player" ["l"="32.839,29.973"]
"kishanrajput23/Jarvis-Desktop-Voice-Assistant" ["l"="35.628,3.269"]
"CT83/SmoothStream" ["l"="32.808,29.985"]
"sharmaji27/face-recognition-based-attendance-system" ["l"="32.868,29.893"]
"Kalebu/Website-blocker-python" ["l"="32.774,29.957"]
"aashishpeepra/whatsapp-live-cricket-bot" ["l"="32.79,29.973"]
"kmhmubin/Face-Recognition-Attendance-System" ["l"="32.913,29.81"]
"Kalebu/Python-Speech-Recognition-" ["l"="32.794,29.952"]
"Spidy20/Attendace_management_system" ["l"="32.875,29.824"]
"Vatshayan/Live-Chatbot-for-Final-Year-Project" ["l"="-20.433,13.11"]
"praveenkumarsrivas/Jarvis-AI-using-python3-" ["l"="32.843,29.949"]
"venugopalkadamba/Face_Verification_based_Attendance_system" ["l"="32.894,29.838"]
"Kalebu/Plagiarism-checker-Python" ["l"="32.773,29.993"]
"ChanChiChoi/awesome-Face_Recognition" ["l"="33.401,29.319"]
"ZhaoJ9014/face.evoLVe" ["l"="33.352,29.326"]
"1adrianb/face-alignment" ["l"="33.454,29.336"]
"polarisZhao/awesome-face" ["l"="33.294,29.268"]
"TreB1eN/InsightFace_Pytorch" ["l"="33.317,29.339"]
"JDAI-CV/FaceX-Zoo" ["l"="33.385,29.337"]
"yfeng95/PRNet" ["l"="31.726,29.384"]
"biubug6/Pytorch_Retinaface" ["l"="33.398,29.263"]
"cleardusk/3DDFA" ["l"="31.754,29.371"]
"amusi/awesome-object-detection" ["l"="50.791,29.909"]
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["l"="33.597,30.147"]
"ronghuaiyang/arcface-pytorch" ["l"="33.291,29.362"]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["l"="33.454,29.248"]
"yfeng95/face3d" ["l"="31.782,29.389"]
"ashishdubey10/Face-Recognition-Based-Attendance-System" ["l"="32.919,29.762"]
"nevilparmar11/Attendance-Management-System-Using-Face-Recognition" ["l"="32.913,29.845"]
"Patelrahul4884/Attendance-Management-system-using-face-recognition" ["l"="32.887,29.859"]
"shubamwalia/Face-Recognition-Attendance-System" ["l"="32.903,29.779"]
"rishabh-karmakar/Facial-Recognition-Based-Attendance-System" ["l"="56.027,28.431"]
"shashankch292/Face-Detection-Recognition-Based-Attendance-System" ["l"="32.927,29.776"]
"sakshamhere/Automated-Attendance-System-By-Real-Time-Face-Reccognition" ["l"="32.894,29.808"]
"sonu275981/Face-Recognition-Attendance-System" ["l"="32.913,29.875"]
"satinder147/Attendance-using-Face" ["l"="32.985,29.714"]
"ShubhamSonkesriya/Face-Recognition-Attendance-System" ["l"="32.889,29.786"]
"GraphtyLove/Face-recognition-project" ["l"="32.955,29.763"]
"joeVenner/FaceRecognition-GUI-APP" ["l"="32.953,29.8"]
"AITTSMD/MTCNN-Tensorflow" ["l"="33.212,29.295"]
"timesler/facenet-pytorch" ["l"="33.372,29.386"]
"TropComplique/mtcnn-pytorch" ["l"="33.252,29.32"]
"YYuanAnyVision/mxnet_mtcnn_face_detection" ["l"="33.152,29.246"]
"rcmalli/keras-vggface" ["l"="33.198,29.428"]
"shanren7/real_time_face_recognition" ["l"="33.162,29.352"]
"natanielruiz/deep-head-pose" ["l"="33.349,29.073"]
"wujiyang/Face_Pytorch" ["l"="33.256,29.373"]
"MuggleWang/CosFace_pytorch" ["l"="33.209,29.377"]
"clcarwin/sphereface_pytorch" ["l"="33.191,29.357"]
"siriusdemon/Build-Your-Own-Face-Model" ["l"="33.348,29.283"]
"HuangYG123/CurricularFace" ["l"="33.303,29.377"]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" ["l"="33.174,29.404"]
"KaiyangZhou/pytorch-center-loss" ["l"="33.114,29.428"]
"michuanhaohao/reid-strong-baseline" ["l"="55.925,32.783"]
"deepinsight/insightface" ["l"="33.561,29.386"]
"open-mmlab/mmdetection" ["l"="50.617,29.783"]
"serengil/deepface" ["l"="33.551,29.465"]
"huggingface/pytorch-image-models" ["l"="50.672,29.653"]
"facebookresearch/detectron2" ["l"="50.571,29.698"]
"AlexeyAB/darknet" ["l"="50.496,29.853"]
"facebookresearch/segment-anything" ["l"="50.506,29.519"]
"Mjrovai/OpenCV-Face-Recognition" ["l"="33.072,29.567"]
"Mjrovai/OpenCV-Object-Face-Tracking" ["l"="33.045,29.614"]
"informramiz/opencv-face-recognition-python" ["l"="33.049,29.528"]
"neha01/FaceRecognition" ["l"="32.989,29.653"]
"jerry1900/faceRecognition" ["l"="33.195,29.528"]
"seathiefwang/FaceRecognition-tensorflow" ["l"="33.216,29.507"]
"makelove/OpenCV-Python-Tutorial" ["l"="51.124,29.786"]
"abidrahmank/OpenCV2-Python-Tutorials" ["l"="51.284,29.767"]
"hamuchiwa/AutoRCCar" ["l"="61.528,12.493"]
"thecodacus/Face-Recognition" ["l"="33.018,29.594"]
"cleardusk/3DDFA_V2" ["l"="31.781,29.425"]
"microsoft/Deep3DFaceReconstruction" ["l"="31.806,29.392"]
"1adrianb/2D-and-3D-face-alignment" ["l"="31.761,29.315"]
"zllrunning/face-parsing.PyTorch" ["l"="44.898,30.711"]
"patrikhuber/eos" ["l"="31.777,29.352"]
"yfeng95/DECA" ["l"="31.848,29.458"]
"winterssy/face_recognition_py" ["l"="33.223,29.576"]
"kuaikuaikim/dface" ["l"="33.249,29.414"]
"inspurer/WorkAttendanceSystem" ["l"="33.208,29.595"]
"kongqw/OpenCVForAndroid" ["l"="33.126,29.684"]
"luanshiyinyang/FacialExpressionRecognition" ["l"="56.152,27.327"]
"chenlinzhong/face-login" ["l"="33.172,29.454"]
"66pig/face_recognition" ["l"="33.229,29.626"]
"windzu/facenet_facerecognition" ["l"="33.191,29.462"]
"fuzheng0301/FaceRecognition" ["l"="44.542,-22.914"]
"eai2x/Face-Recognition-Class-Attendance-System" ["l"="33.194,29.685"]
"yeziyang1992/Face_Recognition_Client" ["l"="33.194,29.582"]
"MrZhousf/tf_facenet" ["l"="33.157,29.467"]
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["l"="33.41,29.211"]
"Star-Clouds/CenterFace" ["l"="33.367,29.205"]
"zuoqing1988/ZQCNN" ["l"="33.332,29.222"]
"biubug6/Face-Detector-1MB-with-landmark" ["l"="33.384,29.205"]
"ammarmahmood1999/HeartHealthPrediction" ["l"="32.78,30.017"]
"zhu260824/face_ncnn" ["l"="32.825,29.183"]
"YuGongCharley/MTCNN_facenet_Android" ["l"="32.894,29.199"]
"douxiao/detect_face_pyqt5" ["l"="-19.944,-29.005"]
"coderXuXiang/Face_Recognition" ["l"="33.202,29.625"]
"bubbliiiing/keras-face-recognition" ["l"="50.163,30.308"]
"hirohe/facerec-python" ["l"="42.776,6.813"]
"facebookresearch/supervision-by-registration" ["l"="33.314,29.096"]
"D-X-Y/landmark-detection" ["l"="33.328,29.08"]
"guoqiangqi/PFLD" ["l"="33.342,29.133"]
"610265158/Peppa_Pig_Face_Landmark" ["l"="33.354,29.125"]
"MarekKowalski/DeepAlignmentNetwork" ["l"="33.22,29.065"]
"HRNet/HRNet-Facial-Landmark-Detection" ["l"="33.368,29.096"]
"protossw512/AdaptiveWingLoss" ["l"="33.371,29.071"]
"polarisZhao/PFLD-pytorch" ["l"="33.376,29.138"]
"610265158/face_landmark" ["l"="33.352,29.102"]
"mrgloom/Face-landmarks-detection-benchmark" ["l"="33.208,29.053"]
"JACKYLUO1991/106-landmarks-dataset" ["l"="33.303,29.083"]
"Hsintao/pfld_106_face_landmarks" ["l"="33.409,29.132"]
"goodluckcwl/Face-alignment-mobilenet-v2" ["l"="33.253,29.127"]
"610265158/DSFD-tensorflow" ["l"="33.395,29.128"]
"610265158/faceboxes-tensorflow" ["l"="33.388,29.17"]
"ainrichman/Peppa-Facial-Landmark-PyTorch" ["l"="33.392,29.081"]
"TheSouthFrog/stylealign" ["l"="33.359,29.038"]
"610265158/face_landmark_pytorch" ["l"="33.386,29.044"]
"hanson-young/nniefacelib" ["l"="33.372,29.177"]
"xindongzhang/MNN-APPLICATIONS" ["l"="33.352,29.168"]
"MirrorYuChen/mnn_example" ["l"="33.375,29.12"]
"apxlwl/MNN-yolov3" ["l"="33.439,29.13"]
"Charrin/RetinaFace-Cpp" ["l"="33.31,29.229"]
"alibaba/MNNKit" ["l"="33.341,29.156"]
"MirrorYuChen/ncnn_example" ["l"="33.307,29.205"]
"SyGoing/LFFD-MNN" ["l"="33.43,29.151"]
"moli232777144/mtcnn_ncnn" ["l"="33.206,29.199"]
"zeusees/HyperFT" ["l"="33.287,29.157"]
"moli232777144/mobilefacenet-mxnet" ["l"="33.195,29.243"]
"BUG1989/caffe-int8-convert-tools" ["l"="37.158,0.718"]
"lukemelas/EfficientNet-PyTorch" ["l"="50.814,29.93"]
"Cadene/pretrained-models.pytorch" ["l"="50.832,29.881"]
"cydonia999/VGGFace2-pytorch" ["l"="33.232,29.408"]
"bnu-wangxun/Deep_Metric" ["l"="32.831,29.449"]
"Confusezius/Deep-Metric-Learning-Baselines" ["l"="32.809,29.466"]
"msight-tech/research-ms-loss" ["l"="32.832,29.465"]
"kdhht2334/Survey_of_Deep_Metric_Learning" ["l"="32.788,29.47"]
"Confusezius/Revisiting_Deep_Metric_Learning_PyTorch" ["l"="32.802,29.484"]
"msight-tech/research-xbm" ["l"="32.836,29.487"]
"ronekko/deep_metric_learning" ["l"="32.808,29.431"]
"dichotomies/proxy-nca" ["l"="32.773,29.482"]
"KevinMusgrave/powerful-benchmarker" ["l"="32.785,29.495"]
"KevinMusgrave/pytorch-metric-learning" ["l"="50.92,29.719"]
"rksltnl/Deep-Metric-Learning-CVPR16" ["l"="32.921,29.376"]
"Confusezius/ICCV2019_MIC" ["l"="32.761,29.475"]
"CompVis/metric-learning-divide-and-conquer" ["l"="32.773,29.461"]
"filipradenovic/cnnimageretrieval-pytorch" ["l"="58.117,9.077"]
"scikit-learn-contrib/metric-learn" ["l"="32.764,29.43"]
"tjddus9597/Proxy-Anchor-CVPR2020" ["l"="32.818,29.484"]
"scikit-learn-contrib/category_encoders" ["l"="45.384,26.286"]
"jlsuarezdiaz/pyDML" ["l"="32.605,29.449"]
"scikit-learn-contrib/boruta_py" ["l"="45.394,26.348"]
"scikit-learn-contrib/imbalanced-learn" ["l"="45.488,26.194"]
"scikit-learn-contrib/hdbscan" ["l"="45.336,26.248"]
"scikit-learn-contrib/DESlib" ["l"="45.375,26.417"]
"benhamner/Metrics" ["l"="57.532,24.094"]
"scikit-learn-contrib/skope-rules" ["l"="45.342,26.357"]
"scikit-learn-contrib/sklearn-pandas" ["l"="45.438,26.268"]
"waiterxiaoyy/waiter-facerecognition-python" ["l"="33.239,29.696"]
"king-xw/Face_Recogntion" ["l"="33.229,29.645"]
"liqq1228/python-opencv" ["l"="33.228,29.662"]
"reece15/cnn_face_detection" ["l"="33.202,29.653"]
"librahfacebook/Face" ["l"="33.211,29.641"]
"hualuoo/dormitory_menage_system" ["l"="33.22,29.716"]
"yl-1993/learn-to-cluster" ["l"="33.296,29.425"]
"Zhongdao/gcn_clustering" ["l"="33.267,29.44"]
"XiaohangZhan/cdp" ["l"="33.236,29.387"]
"xiaoxiong74/face-cluster-by-infomap" ["l"="33.277,29.454"]
"makarandtapaswi/BallClustering_ICCV2019" ["l"="33.297,29.499"]
"yl-1993/hfsoftmax" ["l"="33.289,29.444"]
"sstzal/STAR-FC" ["l"="33.284,29.466"]
"varun-suresh/Clustering" ["l"="33.257,29.455"]
"XiaohangZhan/face_recognition_framework" ["l"="33.291,29.399"]
"cavalleria/cavaface" ["l"="33.323,29.386"]
"Tencent/TFace" ["l"="33.354,29.368"]
"seasonSH/Probabilistic-Face-Embeddings" ["l"="33.277,29.41"]
"yinguobing/head-pose-estimation" ["l"="33.306,29.064"]
"lincolnhard/head-pose-estimation" ["l"="33.266,29.074"]
"yinguobing/cnn-facial-landmark" ["l"="33.289,29.047"]
"guozhongluo/head-pose-estimation-and-face-landmark" ["l"="33.23,29.079"]
"mpatacchiola/deepgaze" ["l"="33.279,29.094"]
"shamangary/FSA-Net" ["l"="33.327,29.05"]
"WIKI2020/FacePose_pytorch" ["l"="33.388,29.061"]
"qiexing/face-landmark-localization" ["l"="33.185,29.102"]
"Ascend-Research/HeadPoseEstimation-WHENet" ["l"="33.376,29.022"]
"thohemp/6DRepNet" ["l"="33.395,29.004"]
"jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV" ["l"="33.264,29.109"]
"stevenyangyj/deep-head-pose-lite" ["l"="33.345,29.007"]
"akshaybahadur21/Facial-Recognition-using-Facenet" ["l"="33.157,29.637"]
"TheAnkurGoswami/Face-Recognition-using-FaceNet" ["l"="33.154,29.664"]
"R4j4n/Face-recognition-Using-Facenet-On-Tensorflow-2.X" ["l"="33.16,29.693"]
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" ["l"="33.124,29.577"]
"krasserm/face-recognition" ["l"="33.127,29.512"]
"akshaybahadur21/Emojinator" ["l"="33.148,29.79"]
"akshaybahadur21/HandMovementTracking" ["l"="33.178,29.799"]
"Skuldur/facenet-face-recognition" ["l"="33.126,29.534"]
"vsyw/Keras-OpenFace" ["l"="33.172,29.515"]
"akshaybahadur21/Autopilot" ["l"="61.551,12.561"]
"arsfutura/face-recognition" ["l"="33.127,29.603"]
"SpikeKing/triplet-loss-mnist" ["l"="32.92,29.51"]
"omoindrot/tensorflow-triplet-loss" ["l"="32.89,29.457"]
"alfonmedela/triplet-loss-pytorch" ["l"="32.892,29.532"]
"chencodeX/triplet-loss-pytorch" ["l"="33.025,29.508"]
"SpikeKing/triplet-loss-gluon" ["l"="32.917,29.541"]
"blankWorld/MTCNN-Accelerate-Onet" ["l"="33.174,29.179"]
"xialuxi/arcface-caffe" ["l"="33.203,29.236"]
"szad670401/Fast-MTCNN" ["l"="33.196,29.151"]
"honghuCode/mobileFacenet-ncnn" ["l"="33.213,29.213"]
"lsy17096535/faceboxes" ["l"="33.168,29.236"]
"luoyetx/Joint-Face-Detection-and-Alignment" ["l"="33.16,29.157"]
"ElegantGod/ncnn" ["l"="33.168,29.168"]
"panda-lab/ncnn-vs2013" ["l"="33.099,29.141"]
"HolmesShuan/ShuffleNet-An-Extremely-Efficient-CNN-for-Mobile-Devices-Caffe-Reimplementation" ["l"="51.629,33.348"]
"happynear/MTCNN_face_detection_alignment" ["l"="33.145,29.201"]
"olojuwin/facerecognize-for-mobile-phone" ["l"="33.262,29.245"]
"swook/GazeML" ["l"="32.609,28.536"]
"vitoralbiero/img2pose" ["l"="33.409,29.089"]
"hysts/pytorch_mpiigaze" ["l"="32.585,28.532"]
"Tobias-Fischer/rt_gene" ["l"="32.596,28.519"]
"Longqi-S/ncnn-mtcnn" ["l"="33.141,29.153"]
"imistyrain/MTCNN" ["l"="33.216,29.179"]
"dangbo/ncnn-mobile" ["l"="33.145,29.166"]
"panda-lab/face-landmark" ["l"="33.199,29.122"]
"starimeL/PytorchConverter" ["l"="51.66,33.246"]
"HCIILAB/SCUT-HEAD-Dataset-Release" ["l"="33.481,29.149"]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" ["l"="33.41,29.161"]
"pranoyr/head-detection-using-yolo" ["l"="33.453,29.116"]
"aosokin/cnn_head_detection" ["l"="33.324,29.122"]
"njvisionpower/Safety-Helmet-Wearing-Dataset" ["l"="33.678,29.162"]
"wujixiu/helmet-detection" ["l"="33.636,29.12"]
"gjy3035/C-3-Framework" ["l"="33.422,28.528"]
"becauseofAI/lffd-pytorch" ["l"="33.476,29.192"]
"Sentient07/HeadHunter" ["l"="33.59,29.146"]
"TingsongYu/cascaded_mobilenet-v2" ["l"="33.219,29.156"]
"zuoqing1988/train-mtcnn" ["l"="33.188,29.213"]
"farmingyard/caffe-mobilenet" ["l"="51.643,33.339"]
"gehaocool/CombinedMargin-caffe" ["l"="33.185,29.178"]
"happynear/AMSoftmax" ["l"="33.144,29.298"]
"zhanglaplace/MobileFaceNet" ["l"="33.165,29.222"]
"GarrickLin/MXNet2Caffe" ["l"="33.216,29.251"]
"yonghenglh6/DepthwiseConvolution" ["l"="51.654,33.328"]
"cypw/MXNet2Caffe" ["l"="33.247,29.237"]
"xialuxi/AMSoftmax" ["l"="33.213,29.269"]
"wy1iu/sphereface-plus" ["l"="33.114,29.287"]
"PKUZHOU/MTCNN_FaceDetection_TensorRT" ["l"="33.216,29.226"]
"nwesem/mtcnn_facenet_cpp_tensorRT" ["l"="52.873,32.469"]
"clancylian/retinaface" ["l"="33.3,29.252"]
"lewes6369/TensorRT-Yolov3" ["l"="51.677,33.235"]
"szad670401/HyperLandmark" ["l"="33.252,29.147"]
"seetafaceengine/SeetaFace2" ["l"="33.374,29.283"]
"GRAYKEY/mobilefacenet_android" ["l"="33.083,29.201"]
"qidiso/mobilefacenet-V2" ["l"="33.201,29.26"]
"imistyrain/MobileFaceNet" ["l"="33.222,29.241"]
"KaleidoZhouYN/mobilefacenet-caffe" ["l"="33.182,29.224"]
"bruinxiong/Modified-CRUNet-and-Residual-Attention-Network.mxnet" ["l"="33.238,29.277"]
"bleakie/MaskInsightface" ["l"="33.3,29.283"]
"ElegantGod/SSHA" ["l"="33.206,29.096"]
"KangKangLoveCat/insightface_ncnn" ["l"="33.114,29.195"]
"walkoncross/prepare-faces-zyf" ["l"="33.144,29.282"]
"GRAYKEY/mobilefacenet_ncnn" ["l"="33.195,29.221"]
"liguiyuan/mobilefacenet-ncnn" ["l"="33.233,29.192"]
"qidiso/termux-gui" ["l"="-48.461,-25.687"]
"qidiso/mxnet-retrain" ["l"="-48.418,-25.674"]
"sirius-ai/MobileFaceNet_TF" ["l"="33.113,29.272"]
"Xiaoccer/MobileFaceNet_Pytorch" ["l"="33.249,29.342"]
"becauseofAI/MobileFace" ["l"="-52.017,-16.564"]
"yangxue0827/MobileFaceNet_Tensorflow" ["l"="33.086,29.289"]
"Monologuethl/Android_Facenet_Recognition" ["l"="32.972,29.204"]
"vcvycy/Android_Facenet" ["l"="32.997,29.225"]
"zhaotun/RetinaFace_NCNN_Android_demo" ["l"="32.984,29.226"]
"chengzhengxin/sdm" ["l"="33.168,29.094"]
"zeusees/Zeusee-Face-Anti-spoofing" ["l"="33.578,30.165"]
"tobybreckon/fire-detection-cnn" ["l"="33.973,29.114"]
"OlafenwaMoses/FireNET" ["l"="34.007,29.09"]
"cair/Fire-Detection-Image-Dataset" ["l"="33.993,29.101"]
"robmarkcole/fire-detection-from-images" ["l"="33.973,29.092"]
"steffensbola/furg-fire-dataset" ["l"="34.009,29.105"]
"gengyanlei/fire-smoke-detect-yolov4" ["l"="33.891,29.116"]
"arpit-jadon/FireNet-LightWeight-Network-for-Fire-Detection" ["l"="33.996,29.117"]
"DeepQuestAI/Fire-Smoke-Dataset" ["l"="33.996,29.083"]
"xjg0124/Fire-and-Smoke-Detection" ["l"="34.038,29.142"]
"xjg0124/Video_Smoke_Detection" ["l"="34.051,29.13"]
"midasklr/FireSmokeDetectionByEfficientNet" ["l"="34.009,29.121"]
"POLARBEARWYY/Smoke-Detection" ["l"="34.048,29.109"]
"NeelBhowmik/efficient-compact-fire-detection-cnn" ["l"="33.987,29.131"]
"spacewalk01/yolov5-fire-detection" ["l"="33.953,29.094"]
"MuhammadMoinFaisal/FireDetectionYOLOv8" ["l"="33.955,29.074"]
"gaiasd/DFireDataset" ["l"="33.972,29.076"]
"ZhaoJ9014/High-Performance-Face-Recognition" ["l"="-53.133,-16.54"]
"luckycallor/InsightFace-tensorflow" ["l"="33.12,29.366"]
"auroua/InsightFace_TF" ["l"="33.15,29.337"]
"AIInAi/tf-insightface" ["l"="33.117,29.345"]
"Fei-Wang/insightface" ["l"="33.106,29.366"]
"peteryuX/arcface-tf2" ["l"="33.169,29.381"]
"vincentwei0919/insightface_for_face_recognition" ["l"="33.128,29.442"]
"friedhelm739/Insightface-tensorflow" ["l"="33.097,29.444"]
"yule-li/CosFace" ["l"="33.169,29.335"]
"HiKapok/tf.extra_losses" ["l"="33.06,29.377"]
"4uiiurz1/keras-arcface" ["l"="33.087,29.387"]
"Joker316701882/Additive-Margin-Softmax" ["l"="33.135,29.324"]
"dmonterom/face_recognition_TF2" ["l"="33.107,29.384"]
"njvisionpower/mxnet-insightface-cpp" ["l"="33.08,29.263"]
"njvisionpower/mxnet-mtcnn-cpp" ["l"="33.038,29.279"]
"markson14/FaceRecognitionCpp" ["l"="32.957,29.29"]
"zuoqing1988/ZQCNN-MTCNN-vs-libfacedetection" ["l"="33.063,29.22"]
"qaz734913414/Ncnn_FaceTrack" ["l"="33.27,29.147"]
"azhe198827/retinaface_tensorRT" ["l"="33.324,29.304"]
"wzj5133329/retinaface_caffe" ["l"="33.293,29.241"]
"bleakie/CenterMulti" ["l"="33.361,29.227"]
"supernotman/RetinaFace_Pytorch" ["l"="33.355,29.267"]
"1996scarlet/faster-mobile-retinaface" ["l"="33.311,29.299"]
"cholihao/Retinaface-caffe" ["l"="33.281,29.242"]
"szad670401/advanced-mxnet2caffe" ["l"="33.273,29.252"]
"SyGoing/LFFD-with-ncnn" ["l"="33.389,29.188"]
"yu4u/age-estimation-pytorch" ["l"="32.894,29.159"]
"yu4u/age-gender-estimation" ["l"="33.028,29.225"]
"Herosan163/AgeEstimation" ["l"="32.771,29.127"]
"shamangary/SSR-Net" ["l"="33.005,29.162"]
"wayen820/gender_age_estimation_mxnet" ["l"="32.984,29.14"]
"naayaaa/Age-Gender-Pred" ["l"="32.822,29.123"]
"Nicholasli1995/VisualizingNDF" ["l"="32.809,29.157"]
"diovisgood/agender" ["l"="32.88,29.146"]
"oukohou/SSR_Net_Pytorch" ["l"="32.944,29.215"]
"dandynaufaldi/Agendernet" ["l"="32.945,29.149"]
"vicwer/C3AE_Age_Estimation" ["l"="32.916,29.156"]
"b02901145/SSR-Net_megaage-asian" ["l"="32.958,29.148"]
"StevenBanama/C3AE" ["l"="32.872,29.159"]
"Raschka-research-group/coral-cnn" ["l"="32.778,29.173"]
"Nebula4869/PyTorch-gender-age-estimation" ["l"="32.836,29.142"]
"deepinx/age-gender-estimation" ["l"="32.892,29.13"]
"YonghaoHe/LFD-A-Light-and-Fast-Detector" ["l"="33.456,29.196"]
"dlunion/DBFace" ["l"="33.392,29.225"]
"xiangweizeng/mobile-lpr" ["l"="34.182,30.04"]
"liuwei16/CSP" ["l"="50.88,30.311"]
"zisianw/FaceBoxes.PyTorch" ["l"="33.327,29.206"]
"becauseofAI/awesome-face" ["l"="-52.041,-16.568"]
"liuyuisanai/trojans-face-recognizer" ["l"="33.266,29.309"]
"zma-c-137/VarGFaceNet" ["l"="33.294,29.313"]
"Star-Clouds/FRDA" ["l"="33.354,29.188"]
"1996scarlet/ArcFace-Multiplex-Recognition" ["l"="33.306,29.324"]
"DataXujing/YOLO-V3-Tensorflow" ["l"="33.738,29.112"]
"DataXujing/Faster-R-CNN-Keras" ["l"="33.775,29.096"]
"HouchangX-AI/Helmet-Detection" ["l"="33.789,29.097"]
"dengfenglai321/YOLOv4-Hat-detection" ["l"="33.78,29.078"]
"Byronnar/tensorflow-serving-yolov3" ["l"="50.438,32.88"]
"zyl067459/yolov3" ["l"="33.759,29.088"]
"ssarfraz/FINCH-Clustering" ["l"="33.279,29.488"]
"zhunzhong07/ECN" ["l"="55.98,32.777"]
"xiaoboCASIA/SV-X-Softmax" ["l"="33.213,29.344"]
"megvii-research/ML-GCN" ["l"="52.824,15.918"]
"sjtuzq/person_search_gcn" ["l"="56.128,32.725"]
"zhly0/facenet-face-cluster-chinese-whispers-" ["l"="33.223,29.431"]
"yuxitong/TensorFlowAndroidDemo" ["l"="33.092,29.758"]
"yuxitong/AutoMarKingTensorFlowPython" ["l"="33.1,29.79"]
"sxpl/FaceAC" ["l"="33.042,29.776"]
"yuxitong/TimeView" ["l"="33.099,29.824"]
"tz28/Chinese-number-gestures-recognition" ["l"="30.413,29.36"]
"yuxitong/AndroidLivePusher" ["l"="33.082,29.844"]
"amitshekhariitbhu/AndroidTensorFlowMachineLearningExample" ["l"="56.944,-14.785"]
"vcvycy/MTCNN4Android" ["l"="32.991,29.262"]
"Reginer/MVVMHub" ["l"="33.065,29.917"]
"ISS-Kerui/Bus-Driver-Behavior-Detection" ["l"="33.082,29.802"]
"aiyaapp/AiyaEffectsAndroid" ["l"="62.195,-14.327"]
"ywl5320/wlmusic" ["l"="62.148,-14.271"]
"simplezhli/Tesseract-OCR-Scanner" ["l"="59.936,-14.105"]
"omnigeeker/mlnd_distracted_driver_detection" ["l"="33.236,29.964"]
"EasyDarwin/EasyPusher-Android" ["l"="62.205,-14.539"]
"LeslieZhoa/tensorflow-MTCNN" ["l"="33.174,29.323"]
"boyliwensheng/understand_facenet" ["l"="33.189,29.393"]
"PanJinquan/Face_Detection_Recognition" ["l"="33.157,29.41"]
"LeslieZhoa/tensorflow-facenet" ["l"="33.169,29.428"]
"ninesky110/Real-time-face-recognition" ["l"="33.134,29.461"]
"gqjjqg/android-extend" ["l"="32.851,29.532"]
"asdfqwrasdf/ArcFaceDemo" ["l"="32.87,29.486"]
"Sanqi5401/ArcSoftDemo" ["l"="32.839,29.561"]
"Sierkinhane/mtcnn-pytorch" ["l"="33.283,29.299"]
"AlfredXiangWu/LightCNN" ["l"="33.157,29.368"]
"akshaybahadur21/Drowsiness_Detection" ["l"="33.185,29.909"]
"raja434/driver-fatigue-detection-system" ["l"="33.203,29.984"]
"msindev/Driver-Drowsiness-Detector" ["l"="33.168,29.985"]
"AnirudhGP/DrowsyDriverDetection" ["l"="33.188,29.982"]
"nishagandhi/DrowsyDriverDetection" ["l"="33.178,30.017"]
"fear-the-lord/Drowsiness-Detection" ["l"="33.16,29.947"]
"neelanjan00/Driver-Drowsiness-Detection" ["l"="33.188,29.951"]
"tahaemara/sleep-detection" ["l"="33.202,29.962"]
"jaisayush/Fatigue-Detection-System-Based-On-Behavioural-Characteristics-Of-Driver" ["l"="33.172,29.963"]
"nicknochnack/YOLO-Drowsiness-Detection" ["l"="30.582,30.065"]
"Arijit1080/Drowsiness-and-Yawn-Detection-with-voice-alert-using-Dlib" ["l"="33.215,29.91"]
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" ["l"="33.267,29.982"]
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" ["l"="33.269,29.942"]
"Aristochi/Dangerous_driving_behavior_detection" ["l"="33.26,29.964"]
"wangjianlin1985/Python_FatigueDrivingDetection" ["l"="33.304,29.967"]
"KyrieIrv11ng/Yolov5-driving-detection" ["l"="33.283,29.973"]
"BillySturate/Fatigue-driving-detection-system-based-on-opencv-dlib" ["l"="33.293,29.988"]
"DohaerisT/DangerousDrivingDetector" ["l"="33.279,29.962"]
"Aristochi/MTCNN_CNN_DangerDrivingDetection" ["l"="33.249,29.947"]
"xg-zhang/faceRegister" ["l"="33.242,29.759"]
"wangjianlin1985/Python_ConvolutionalNeuralNetwork_FaceRecognition_fatiguedriving" ["l"="33.314,29.951"]
"yinghualuowu/Python_VLPR" ["l"="34.189,29.955"]
"Yaoshicn/decaptcha" ["l"="49.953,22.16"]
"qunshansj/Perclos-Enhanced-YOLO-Drowsiness-Detection-System" ["l"="33.296,29.953"]
"iArunava/YOLOv3-Object-Detection-with-OpenCV" ["l"="32.689,29.352"]
"yash42828/YOLO-object-detection-with-OpenCV" ["l"="32.739,29.362"]
"Surya-Murali/Real-Time-Object-Detection-With-OpenCV" ["l"="32.7,29.372"]
"gustavz/realtime_object_detection" ["l"="52.97,32.607"]
"PINTO0309/OpenVINO-YoloV3" ["l"="64.228,-2.661"]
"architshukla/Plagiarism-Checker" ["l"="32.697,30.092"]
"abhilampard/Simple-Plagiarism-Checker" ["l"="32.74,30.045"]
"diogocabral/sherlock" ["l"="32.67,30.133"]
"Copyleaks/Python-Plagiarism-Checker" ["l"="32.69,30.166"]
"dodona-edu/dolos" ["l"="32.644,30.124"]
"JonathanReeve/text-matcher" ["l"="32.729,30.087"]
"TylerJaacks/ItsJustACoincidenceProfessor" ["l"="32.663,30.106"]
"harirakul/Plagiarism-Detection" ["l"="32.672,30.084"]
"suyash248/plagiarism_detection" ["l"="32.7,30.118"]
"yeziyang1992/Python-Tensorflow-Face-v2.0" ["l"="33.178,29.561"]
"yeziyang1992/Python-Tensorflow-Face" ["l"="33.179,29.6"]
"serengil/neural-networks-py" ["l"="33.341,29.658"]
"serengil/exchanging-encrypted-mails" ["l"="33.345,29.668"]
"serengil/neural-networks" ["l"="33.351,29.695"]
"wondervictor/WiderFace-Evaluation" ["l"="33.401,29.179"]
"yxlijun/DSFD.pytorch" ["l"="33.376,29.158"]
"bairdzhang/smallhardface" ["l"="33.337,29.18"]
"xiaqunfeng/face-evaluation" ["l"="33.5,29.141"]
"akofman/wider-face-pascal-voc-annotations" ["l"="33.508,29.161"]
"luuuyi/S3FD.PyTorch" ["l"="33.347,29.179"]
"foreverYoungGitHub/MTCNN" ["l"="33.147,29.187"]
"adambielski/siamese-triplet" ["l"="57.624,19.606"]
"VisualComputingInstitute/triplet-reid" ["l"="55.966,32.71"]
"AdrianUng/keras-triplet-loss-mnist" ["l"="32.709,29.426"]
"andreasveit/triplet-network-pytorch" ["l"="32.957,29.442"]
"michuanhaohao/keras_reid" ["l"="56.004,32.738"]
"sanku-lib/image_triplet_loss" ["l"="32.712,29.442"]
"NegatioN/OnlineMiningTripletLoss" ["l"="32.917,29.483"]
"maciejkula/triplet_recommendations_keras" ["l"="59.616,23.848"]
"dhwajraj/deep-siamese-text-similarity" ["l"="53.072,27.412"]
"EncodeTS/TensorFlow_Center_Loss" ["l"="32.972,29.414"]
"ywpkwon/siamese_tf_mnist" ["l"="57.693,19.605"]
"huanghoujing/person-reid-triplet-loss-baseline" ["l"="55.986,32.744"]
"msindev/Gesture-Controlled-Snake-Game" ["l"="33.14,30.027"]
"muskanvk/Drowsiness-Detection-System-for-Drivers" ["l"="33.179,30.118"]
"woorimlee/drowsiness-detection" ["l"="33.14,30.007"]
"niehen6174/face_detection_and_recognition" ["l"="32.832,29.646"]
"niehen6174/image-and-speech-processing" ["l"="32.814,29.675"]
"niehen6174/Face-recognition-check-in-system" ["l"="32.797,29.675"]
"yeephycho/tensorflow-face-detection" ["l"="33.211,29.136"]
"bruceyang2012/Face-detection-with-mobilenet-ssd" ["l"="33.195,28.951"]
"ildoonet/deepface" ["l"="33.161,29.279"]
"iitzco/faced" ["l"="33.182,29.147"]
"yeephycho/widerface-to-tfrecord" ["l"="33.205,28.992"]
"qdraw/tensorflow-face-object-detector-tutorial" ["l"="33.191,29.07"]
"sthanhng/yoloface" ["l"="33.206,29.083"]
"sfzhang15/FaceBoxes" ["l"="33.263,29.187"]
"ChiCheng123/SRN" ["l"="33.323,29.183"]
"TropComplique/FaceBoxes-tensorflow" ["l"="33.287,29.143"]
"tuna318/Face-Recognition-with-InsightFace" ["l"="33.416,29.407"]
"seetaface/SeetaFaceEngine2" ["l"="33.266,29.288"]
"jamesluozhiwei/seetafaceJNI" ["l"="33.398,29.412"]
"seetafaceengine/SeetaFace6" ["l"="33.378,29.302"]
"SeetaFace6Open/index" ["l"="33.386,29.358"]
"yogesh-kamat/FaceAttend" ["l"="32.94,29.753"]
"amaljoseph/Face_Recognition_Attendance_System_Python-OpenCV" ["l"="32.927,29.744"]
"liorshk/facenet_pytorch" ["l"="33.151,29.426"]
"tbmoon/facenet" ["l"="33.203,29.473"]
"shen1994/DeepID" ["l"="33.014,29.24"]
"jinze1994/DeepID1" ["l"="32.997,29.24"]
"Piccolo-Jr/FaceVerification-DeepID2" ["l"="32.975,29.246"]
"ox-vgg/vgg_face2" ["l"="33.218,29.394"]
"prlz77/vgg-face.pytorch" ["l"="33.243,29.479"]
"AruniRC/resnet-face-pytorch" ["l"="33.194,29.446"]
"EvelynFan/AWESOME-FER" ["l"="56.121,27.313"]
"tamerthamoqa/facenet-pytorch-glint360k" ["l"="33.206,29.451"]
"QuasarLight/Pytorch_Face_Recognition" ["l"="33.314,29.362"]
"foamliu/InsightFace-v2" ["l"="33.276,29.378"]
"CaptainEven/FaceRecognition" ["l"="33.155,29.486"]
"zhongyy/Face-Transformer" ["l"="33.301,29.455"]
"shabh2412/stock_price_prediction_application" ["l"="32.784,30.039"]
"WeidiXie/Keras-VGGFace2-ResNet50" ["l"="33.22,29.461"]
"NNNNAI/VGGFace2-HQ" ["l"="31.029,30.661"]
"happynear/FaceDatasets" ["l"="33.154,29.316"]
"nyoki-mtl/keras-facenet" ["l"="33.184,29.492"]
"ruochunjin/C-MS-Celeb" ["l"="33.263,29.393"]
"fwang91/IMDb-Face" ["l"="33.165,29.307"]
"tiandunx/SV-X-Softmax" ["l"="33.219,29.419"]
"deepinx/megaface-evaluation" ["l"="33.286,29.515"]
"chen0040/keras-face" ["l"="33.148,29.539"]
"vinayakarannil/Face_Recognition" ["l"="33.116,29.552"]
"sainimohit23/FaceNet-Real-Time-face-recognition" ["l"="33.14,29.553"]
"bearsprogrammer/real-time-deep-face-recognition" ["l"="33.096,29.502"]
"sumantrajoshi/Face-recognition-using-deep-learning" ["l"="33.101,29.584"]
"vudung45/FaceRec" ["l"="33.04,29.574"]
"YirongMao/softmax_variants" ["l"="33.126,29.41"]
"amirhfarzaneh/lsoftmax-pytorch" ["l"="33.097,29.399"]
"TinyZeaMays/CircleLoss" ["l"="32.997,29.454"]
"Jungjee/RawNet" ["l"="37.035,3.278"]
"manojpamk/pytorch_xvectors" ["l"="37.046,3.295"]
"CoinCheung/pytorch-loss" ["l"="50.967,30.014"]
"iiscleap/NeuralPlda" ["l"="37.1,3.36"]
"jxgu1016/MNIST_center_loss_pytorch" ["l"="33.099,29.419"]
"foamliu/InsightFace-PyTorch" ["l"="33.337,29.418"]
"nizhib/pytorch-insightface" ["l"="33.385,29.458"]
"LcenArthas/CCF-BDCI2019-Multi-person-Face-Recognition-Competition-Baseline" ["l"="33.439,29.502"]
"ElvishElvis/68-Retinaface-Pytorch-version" ["l"="33.413,29.286"]
"bogireddytejareddy/retinaface-pytorch" ["l"="33.429,29.276"]
"Media-Smart/vedadet" ["l"="33.481,29.169"]
"chenjun2hao/CenterFace.pytorch" ["l"="33.41,29.198"]
"tbmoon/basic_vqa" ["l"="48.713,32.204"]
"tbmoon/kalman_filter" ["l"="48.723,32.292"]
"BeiXi1949/Face-Recognition_FaceNet_PyTorch" ["l"="33.25,29.574"]
"justusschock/shapenet" ["l"="33.314,29.038"]
"songhengyang/face_landmark_factory" ["l"="33.317,28.988"]
"FengZhenhua/Wing-Loss" ["l"="33.317,28.957"]
"shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization" ["l"="33.252,28.992"]
"TencentYoutuResearch/FaceAlignment-FHR" ["l"="56.387,33.047"]
"foamliu/MobileFaceNet" ["l"="33.267,29.423"]
"yeyupiaoling/Pytorch-MobileFaceNet" ["l"="33.239,29.445"]
"xuexingyu24/MobileFaceNet_Tutorial_Pytorch" ["l"="33.267,29.468"]
"dozercodes/DecisionTree" ["l"="33.5,29.832"]
"Erikfather/Decision_tree-python" ["l"="33.464,29.821"]
"leondgarse/Keras_insightface" ["l"="33.137,29.374"]
"ktjonsson/keras-ArcFace" ["l"="33.042,29.408"]
"LCorleone/Various-Loss-Function-in-Face-Recognition" ["l"="33.028,29.416"]
"hao-qiang/AM-Softmax" ["l"="33.039,29.425"]
"4uiiurz1/pytorch-adacos" ["l"="33.219,29.357"]
"bruceyang2012/Face-identification-with-cnn-triplet-loss" ["l"="33.191,28.911"]
"bruceyang2012/Face-Alignment-with-simple-cnn" ["l"="33.194,28.892"]
"tanakataiki/ssd_kerasV2" ["l"="33.188,28.859"]
"ManishSoni1908/Mobilenet-ssd-keras" ["l"="33.179,28.878"]
"cunjian/pytorch_face_landmark" ["l"="33.393,29.102"]
"jhb86253817/PIPNet" ["l"="33.425,29.053"]
"HRNet/HRNet-Image-Classification" ["l"="53.478,30.99"]
"leoxiaobin/deep-high-resolution-net.pytorch" ["l"="31.728,28.114"]
"ryanmadden/decision-tree" ["l"="33.432,29.78"]
"tiepvupsu/DecisionTreeID3" ["l"="33.51,29.853"]
"JonathonYan1993/ML_DecisionTree_prepruning_postpruning" ["l"="33.483,29.849"]
"barisesmer/C4.5" ["l"="33.422,29.764"]
"SmallVagetable/machine_learning_python" ["l"="53.663,27.238"]
"wepe/efficient-decision-tree-notes" ["l"="57.715,22.651"]
"Rudo-erek/decision-tree" ["l"="33.469,29.861"]
"serengil/chefboost" ["l"="33.378,29.712"]
"lucksd356/DecisionTrees" ["l"="33.45,29.848"]
"zhaoxingfeng/RandomForest" ["l"="50.232,26.996"]
"benedekrozemberczki/awesome-decision-tree-papers" ["l"="51.649,15.707"]
"Freemanzxp/GBDT_Simple_Tutorial" ["l"="58.066,23.292"]
"darlinglele/classification" ["l"="33.495,29.876"]
"michaeldorner/DecisionTrees" ["l"="33.432,29.828"]
"normandipalo/faceID_beta" ["l"="33.143,29.397"]
"jongmoochoi/irisfaceRGBD" ["l"="31.607,29.12"]
"DeepSystems/supervisely-tutorials" ["l"="46.357,7.002"]
"Fdevmsy/Image_Classification_with_5_methods" ["l"="51.721,30.767"]
"harveyslash/Facial-Similarity-with-Siamese-Networks-in-Pytorch" ["l"="57.674,19.582"]
"SeuTao/FaceBagNet" ["l"="33.602,30.132"]
"cydonia999/Tiny_Faces_in_Tensorflow" ["l"="33.232,29.131"]
"EricZgw/PyramidBox" ["l"="33.272,29.173"]
"iitzco/tfserve" ["l"="33.09,29.097"]
"abars/YoloKerasFaceDetection" ["l"="33.059,29.127"]
"haofanwang/accurate-head-pose" ["l"="33.317,29.003"]
"MingzhenShao/HeadPose" ["l"="33.332,28.962"]
"haofanwang/mxnet-Head-Pose" ["l"="33.189,29.002"]
"omasaht/headpose-fsanet-pytorch" ["l"="33.378,28.992"]
"Oreobird/tf-keras-deep-head-pose" ["l"="33.263,28.962"]
"natanielruiz/dockerface" ["l"="33.362,28.941"]
"akshaybahadur21/Digit-Recognizer" ["l"="33.188,29.832"]
"jihunchoi/lsoftmax-pytorch" ["l"="33.057,29.405"]
"BoyuanJiang/Age-Gender-Estimate-TF" ["l"="33.026,29.167"]
"siriusdemon/pytorch-DEX" ["l"="32.933,29.185"]
"dpressel/rude-carnie" ["l"="33.001,29.205"]
"GilLevi/AgeGenderDeepLearning" ["l"="33.048,29.182"]
"CrazySummerday/SSR-Net" ["l"="32.957,29.185"]
"leeesangwon/PyTorch-Image-Retrieval" ["l"="58.098,9.065"]
"wzzheng/HDML" ["l"="32.754,29.457"]
"idstcv/SoftTriple" ["l"="32.819,29.498"]
"dlunion/OpenPose" ["l"="32.86,29.237"]
"dlunion/EasyOpenPose" ["l"="32.799,29.234"]
"dlunion/CC4.0" ["l"="32.859,29.217"]
"lincolnhard/openpose-darknet" ["l"="32.761,29.243"]
"murdockhou/lightweight_openpose" ["l"="31.677,28.157"]
"lincolnhard/facenet-darknet-inference" ["l"="32.719,29.26"]
"lbeaucourt/Object-detection" ["l"="32.619,29.346"]
"Linzaer/Face-Track-Detect-Extract" ["l"="33.283,29.19"]
"ZidanMusk/experimenting-with-sort" ["l"="54.568,32.717"]
"pyannote/pyannote-video" ["l"="42.267,7.402"]
"louis-she/center-loss.pytorch" ["l"="33.118,29.393"]
"Cysu/open-reid" ["l"="55.942,32.753"]
"megvii-research/BBN" ["l"="51.247,30.421"]
"tengshaofeng/ResidualAttentionNetwork-pytorch" ["l"="53.494,31.14"]
"tracy100/seetaface6SDK" ["l"="33.453,29.441"]
"shuguoli68/LiSeetaFace2" ["l"="33.453,29.46"]
"xiaoxiaoazhang/SeetaFace2AndroidDemo" ["l"="33.436,29.456"]
"Raschka-research-group/coral-pytorch" ["l"="32.68,29.169"]
"EthanRosenthal/spacecutter" ["l"="32.639,29.161"]
"nhshin-mcl/MWR" ["l"="32.814,29.287"]
"Raschka-research-group/corn-ordinal-neuralnet" ["l"="32.697,29.169"]
"gaobb/DLDL-v2" ["l"="32.822,29.273"]
"ck37/coral-ordinal" ["l"="32.692,29.151"]
"axeber01/dold" ["l"="32.741,29.169"]
"imdeepmind/processed-imdb-wiki-dataset" ["l"="32.722,29.175"]
"JingchunCheng/All-Age-Faces-Dataset" ["l"="32.794,29.126"]
"kongsicong/Age_recognition_OR" ["l"="32.787,29.144"]
"blingenf/copydetect" ["l"="32.61,30.133"]
"dodona-edu/dodona" ["l"="32.608,30.163"]
"wy1iu/LargeMargin_Softmax_Loss" ["l"="33.106,29.326"]
"KaleidoZhouYN/Angular-Triplet-Loss" ["l"="33.124,29.311"]
"liuyuisanai/coco_loss" ["l"="33.101,29.299"]
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" ["l"="33.127,29.289"]
"happynear/FaceVerification" ["l"="33.11,29.247"]
"KaleidoZhouYN/Loss-Functions" ["l"="33.107,29.309"]
"pppoe/tensorflow-sphereface-asoftmax" ["l"="33.038,29.378"]
"nenadmarkus/pico" ["l"="33.14,29.085"]
"wincle/NPD" ["l"="33.126,29.037"]
"patrikhuber/superviseddescent" ["l"="33.111,29.064"]
"yulequan/face-alignment-in-3000fps" ["l"="33.124,29.071"]
"luoyetx/JDA" ["l"="33.1,29.07"]
"freesouls/face-alignment-at-3000fps" ["l"="33.116,29.083"]
"CitrusRokid/OpenNPD" ["l"="33.14,29.043"]
"tntrung/sdm_face_alignment" ["l"="33.107,29.05"]
"luoyetx/face-alignment-at-3000fps" ["l"="33.135,29.064"]
"jwyang/face-alignment" ["l"="33.124,29.05"]
"sai-bi/FaceAlignment" ["l"="33.111,29.039"]
"KinWaiCheuk/Triplet-net-keras" ["l"="32.665,29.431"]
"noelcodella/tripletloss-keras-tensorflow" ["l"="32.658,29.416"]
"asparagus/triplet-net" ["l"="32.614,29.423"]
"shivsondhi/Triplet-Loss" ["l"="32.68,29.425"]
"Ekeany/Siamese-Network-with-Triplet-Loss" ["l"="32.652,29.451"]
"itboyst/ArcSoftFaceDemo" ["l"="32.903,29.563"]
"chengxy-nds/ArcSoftFaceDemo" ["l"="32.886,29.609"]
"itboyst/ArcSoftFaceDemoUI" ["l"="32.885,29.582"]
"jastar-wang/arcface" ["l"="32.91,29.597"]
"itboyst/ArcSoftFaceFrameDemo" ["l"="32.87,29.587"]
"joetang1989/ArcFaceRecognizeDemo" ["l"="32.896,29.589"]
"ycdtbs/Face-recognition" ["l"="32.858,29.61"]
"SkyStonePan/ArcfaceDemo_Android" ["l"="32.815,29.568"]
"smartkids77/ArcSoft_FreeSDK_Demo" ["l"="32.816,29.595"]
"HosniMansour/Unity3DFaceTtracking" ["l"="32.825,28.827"]
"edk208/mixamoFaceTransfer" ["l"="32.798,28.798"]
"baomingwang/MTCNN-Tensorflow" ["l"="33.089,29.342"]
"BobLiu20/mtcnn_tf" ["l"="33.011,29.361"]
"look4pritam/tfmtcnn" ["l"="33.012,29.377"]
"penincillin/DREAM" ["l"="33.191,29.32"]
"HRLTY/TP-GAN" ["l"="-35.41,21.033"]
"iacopomasi/face_specific_augm" ["l"="31.78,29.273"]
"KaleidoZhouYN/Pytorch_FRS" ["l"="33.157,29.294"]
"huangyangyu/NoiseFace" ["l"="33.246,29.397"]
"zhangjunh/DR-GAN-by-pytorch" ["l"="-35.386,21.044"]
"mx54039q/fnm" ["l"="-35.453,21.056"]
"hujun100/tensorflow-sphereface" ["l"="33.039,29.351"]
"YunYang1994/SphereFace" ["l"="33.014,29.397"]
"andrewhuman/sphereloss_tensorflow" ["l"="33.023,29.371"]
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" ["l"="32.967,29.22"]
"estebanuri/face_recognition" ["l"="32.944,29.199"]
"jiangxiluning/facenet_mtcnn_to_mobile" ["l"="33.029,29.242"]
"cleardusk/MeGlass" ["l"="33.175,29.292"]
"seasonSH/DocFace" ["l"="33.205,29.315"]
"Cjiangbpcs/gazenet_mxJiang" ["l"="33.226,28.965"]
"XiaohangZhan/conditional-motion-propagation" ["l"="-33.761,23.355"]
"ivclab/agegenderLMTCNN" ["l"="34.248,32.118"]
"zuoqing1988/train-GenderAge" ["l"="33.063,29.257"]
"valerystrizh/pytorch-histogram-loss" ["l"="32.7,29.503"]
"madkn/HistogramLoss" ["l"="32.649,29.52"]
"Ontheway361/dul-pytorch" ["l"="33.328,29.497"]
"IrvingMeng/MagFace" ["l"="33.358,29.421"]
"javier-hernandezo/FaceQnet" ["l"="33.33,29.433"]
"Ontheway361/pfe-pytorch" ["l"="33.314,29.468"]
"cleardusk/MFR" ["l"="33.239,29.358"]
"pterhoer/FaceImageQuality" ["l"="33.351,29.404"]
"zhongyy/Unequal-Training-for-Deep-Face-Recognition-with-Long-Tailed-Noisy-Data" ["l"="33.249,29.434"]
"KaenChan/ProbFace" ["l"="33.338,29.479"]
"Sharpiless/Face-recognition-for-classroom-sign-in" ["l"="33.211,29.749"]
"tf2jaguar/pytorch_train" ["l"="33.253,29.796"]
"luqicoder/FR-system" ["l"="33.263,29.744"]
"DeathYmz/Check-in-and-Check-out-System-for-Face-Recognition" ["l"="33.277,29.803"]
"veraposeidon/Insect_Identification" ["l"="34.228,29.836"]
"mengyue0722/Face-swiping-Time-Attendance-System" ["l"="33.222,29.695"]
"datitran/object_detector_app" ["l"="50.35,33.018"]
"DrewNF/Tensorflow_Object_Tracking_Video" ["l"="54.885,33.729"]
"myfavouritekk/vdetlib" ["l"="54.89,33.757"]
"BrucePoki/Attendance-system" ["l"="33.25,29.651"]
"z0gSh1u/pr-attendance" ["l"="33.26,29.669"]
"Alex13832/FaceSwap-Android" ["l"="32.926,29.016"]
"androidroadies/FaceSwap" ["l"="32.934,29.037"]
"tunaemre/Face-Swap-Android" ["l"="32.954,29.039"]
"kangdp/MiniTodo" ["l"="33.022,29.999"]
"kangdp/TptDialSample" ["l"="33.035,29.966"]
"kangdp/KPermission" ["l"="33.033,29.982"]
"kangdp/StarBarcode" ["l"="33.05,29.963"]
"DaveBoy/AndroidLocalizationer" ["l"="33.036,29.941"]
"wushaoge/WsgMvvm" ["l"="33.084,29.935"]
"Reginer/Renju" ["l"="33.06,29.946"]
"Reginer/AutoAPKTool" ["l"="33.048,29.928"]
"wuyr/ActivityMessenger" ["l"="33.08,29.953"]
"WANZIzZ/RowingView" ["l"="33.062,29.979"]
"xuexingyu24/Pruning_MTCNN_MobileFaceNet_Using_Pytorch" ["l"="33.289,29.571"]
"BlcaKHat/yolov3-Helmet-Detection" ["l"="33.691,29.096"]
"AyazSaiyed/Helmet-Detection-" ["l"="33.718,29.083"]
"Angericky/safety-helmet-detection-in-real-time-video" ["l"="33.683,29.121"]
"iamdsc/automatic-helmet-detection" ["l"="33.698,29.115"]
"rafiuddinkhan/Yolo-Training-GoogleColab" ["l"="33.693,29.073"]
"weimin17/Object-Detection_HelmetDetection" ["l"="33.663,29.1"]
"AnshulSood11/PPE-Detection-YOLO-Deep_SORT" ["l"="33.728,29.057"]
"CiscoDevNet/ppe-detection" ["l"="33.735,29.029"]
"rekon/keras-yolo2" ["l"="33.676,29.088"]
"y3mr3/PPE-Detection-YOLO" ["l"="33.749,29.047"]
"snehilsanyal/Construction-Site-Safety-PPE-Detection" ["l"="33.775,29.027"]
"ZijianWang-ZW/PPE_detection" ["l"="33.756,29.028"]
"ciber-lab/pictor-ppe" ["l"="33.77,29.043"]
"AlfredXiangWu/MsCelebFaceExtract" ["l"="33.23,29.23"]
"pillarpond/face-recognizer-android" ["l"="32.958,29.168"]
"Lauszus/FaceRecognitionApp" ["l"="32.909,29.107"]
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" ["l"="32.954,29.116"]
"shubham0204/FaceRecognition_With_FaceNet_Android" ["l"="32.911,29.172"]
"Zod20/OpenCV-Face-Recognition-Android" ["l"="32.911,29.14"]
"gv22ga/dlib-face-recognition-android" ["l"="32.97,29.084"]
"abhn/marvel" ["l"="32.927,29.13"]
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" ["l"="32.941,29.096"]
"GthanosAI/android_mtcnn_insightface_face_recognize" ["l"="32.931,29.225"]
"chengzhengxin/deep-sdm" ["l"="33.406,29.068"]
"tkat0/PyTorch_BlazeFace" ["l"="33.466,29.084"]
"shanglianlm0525/BlazeFace" ["l"="33.53,29.039"]
"hollance/BlazeFace-PyTorch" ["l"="33.476,29.039"]
"kentaroy47/BlazeFace_Person.pytorch" ["l"="33.505,29.043"]
"dl-maxwang/blazeface-tensorflow" ["l"="33.538,29.026"]
"yxlijun/Pyramidbox.pytorch" ["l"="33.362,29.149"]
"Goingqs/PyramidBox" ["l"="33.31,29.161"]
"jianzhnie/pyramidbox_pytorch" ["l"="33.481,29.092"]
"yxlijun/S3FD.pytorch" ["l"="33.323,29.167"]
"OValery16/Language-Translation-with-deep-learning-" ["l"="33.169,30.075"]
"prathamsolanki/gender-recognition-by-voice" ["l"="33.185,30.058"]
"tripathivenkteshwar/faceDetection" ["l"="33.158,30.064"]
"vmlaker/hello-websocket" ["l"="32.818,30.028"]
"jeromerony/dml_cross_entropy" ["l"="32.795,29.509"]
"delphifirst/FaceX" ["l"="33.111,29.013"]
"cheind/dest" ["l"="33.096,29.042"]
"zhusz/CVPR15-CFSS" ["l"="33.121,29.026"]
"TadasBaltrusaitis/CLM-framework" ["l"="33.092,29.057"]
"patrikhuber/4dface" ["l"="31.754,29.288"]
"andrejmaris/facefit" ["l"="33.06,29"]
"ChrisYang/RCPR" ["l"="33.089,28.942"]
"zhzhanp/TCDCN-face-alignment" ["l"="33.157,29.053"]
"yzhang559/vgg-face" ["l"="33.256,29.521"]
"HCIILAB/SCUT-FBP5500-Database-Release" ["l"="33.335,29.106"]
"ustcqidi/BeautyPredict" ["l"="33.423,28.988"]
"fendouai/FaceRank" ["l"="50.208,28.011"]
"fbplab/MEBeauty-database" ["l"="33.376,28.911"]
"jackhuntcn/facial_beauty_prediction" ["l"="33.344,29.031"]
"lucasxlu/TransFBP" ["l"="33.398,29.032"]
"imfing/ava_downloader" ["l"="46.89,31.313"]
"csjliang/PPR10K" ["l"="-33.588,23.004"]
"zuoqing1988/train-mtcnn-head" ["l"="33.303,29.189"]
"bytefish/opencv" ["l"="33.035,28.967"]
"bytefish/libfacerec" ["l"="33.046,29.027"]
"bytefish/facerec" ["l"="33.072,29.106"]
"vRallev/OpenCV" ["l"="-52.655,7.964"]
"MasteringOpenCV/code" ["l"="59.341,10.93"]
"Aravindlivewire/Opencv" ["l"="33.001,28.847"]
"alyssaq/opencv" ["l"="32.975,28.882"]
"bcsiriuschen/High-Dimensional-LBP" ["l"="33.046,28.893"]
"bsdnoobz/opencv-code" ["l"="33.008,28.873"]
"biometrics/openbr" ["l"="33.158,29.135"]
"carolinepacheco/lbp-library" ["l"="32.994,28.908"]
"greatyao/asmlibrary" ["l"="33.035,28.936"]
"benhoff/face-recognizer-gui" ["l"="-20.51,-28.22"]
"QianMo/OpenCV3-Intro-Book-Src" ["l"="51.211,29.775"]
"mrnugget/opencv-haar-classifier-training" ["l"="54.81,32.9"]
"kylemcdonald/FaceTracker" ["l"="33.076,29.018"]
"greatyao/aamlibrary" ["l"="33.05,28.916"]
"jiapei100/VOSM" ["l"="33.033,28.916"]
"phoenix367/AAMToolbox" ["l"="33.057,28.879"]
"cheind/aam" ["l"="33.042,28.872"]
"faeya/traffic-sign-classification" ["l"="33.181,30.069"]
"TejasNaikk/DriverDrowsiness_Detection" ["l"="33.167,30.042"]
"Skyendless/FaceRecognition" ["l"="33.266,29.615"]
"dannyblueliu/YOLO-Face-detection" ["l"="33.124,29"]
"OValery16/gender-age-classification" ["l"="33.004,29.13"]
"imistyrain/yolo-face" ["l"="33.135,29.018"]
"HuyTu7/face_rating" ["l"="33.46,28.924"]
"bknyaz/beauty_vision" ["l"="33.477,28.92"]
"serengil/decision-trees-for-ml" ["l"="33.364,29.689"]
"serengil/encrypted-class-loader" ["l"="33.34,29.695"]
"pierre-jacob/ICCV2019-Horde" ["l"="32.743,29.482"]
"kunhe/FastAP-metric-learning" ["l"="32.724,29.472"]
"MyLtYkRiTiK/ComputerVision_Tutorials_in_Russian" ["l"="50.872,30.744"]
"mop/bier" ["l"="32.729,29.454"]
"CHENGY12/DMML" ["l"="32.689,29.461"]
"osai-ai/tensor-stream" ["l"="50.836,30.728"]
"tyhjh/ArcFace" ["l"="32.921,29.657"]
"GuoYangGit/OCR" ["l"="33.048,29.813"]
"June0611/EyeBlickCheck" ["l"="33.018,29.8"]
"xiaoyaoyou1212/ViseFace" ["l"="33.035,29.854"]
"reggie1996/FaceDetect" ["l"="33.022,29.822"]
"xiaomsh/OCR_identify" ["l"="60.325,-14.014"]
"julyCodeGo/OpenCVCheck" ["l"="32.998,29.896"]
"siriusdemon/pytorch-PCN" ["l"="33.255,29.168"]
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" ["l"="33.238,29.04"]
"luckyluckydadada/MTCNN_tf" ["l"="33.103,29.35"]
"bubbliiiing/mtcnn-keras" ["l"="50.173,30.33"]
"adityachechani/Driver-Fatigue-Detection" ["l"="33.218,30.016"]
"sahnimanas/Fatigue-Detection" ["l"="33.202,30.011"]
"xGonZh10n/FaceDetection" ["l"="32.936,29.055"]
"JabamiLight/dlib-android-facedect" ["l"="32.904,29.011"]
"aakashjhawar/face-recognition-using-deep-learning" ["l"="32.931,29.827"]
"codeglitchz/attendance-system" ["l"="32.921,29.797"]
"power0341/RSA_pycaffe" ["l"="33.252,29.224"]
"msindev/Facial-Recognition-Using-FaceNet-Siamese-One-Shot-Learning" ["l"="33.04,29.661"]
"hfrommane/TF-siamesenet" ["l"="57.677,19.65"]
"thuyngch/Face-Attendance-System" ["l"="32.957,29.727"]
"008karan/Face-recognition" ["l"="33.057,29.758"]
"chetanyachopra22/FaceRecognition-Attendance-Marking" ["l"="32.856,29.808"]
"clcarwin/SFD_pytorch" ["l"="33.289,29.172"]
"louis-she/sfd.pytorch" ["l"="33.277,29.206"]
"yinguobing/facial-landmark-detection-hrnet" ["l"="33.364,28.997"]
"junhwanjang/face_landmark_dnn" ["l"="33.298,28.951"]
"luoyetx/deep-landmark" ["l"="33.143,29.115"]
"yinguobing/image_utility" ["l"="33.298,28.972"]
"jian667/face-dataset" ["l"="32.965,29.35"]
"joojs/fairface" ["l"="33.029,29.33"]
"geerk/C45algorithm" ["l"="33.408,29.78"]
"oarriaga/SSD-keras" ["l"="33.188,28.796"]
"wikke/SSD_Keras" ["l"="33.184,28.812"]
"AlexanderParkin/ChaLearn_liveness_challenge" ["l"="33.619,30.136"]
"ZitongYu/CDCN" ["l"="33.599,30.109"]
"RizhaoCai/Awesome-FAS" ["l"="33.613,30.11"]
"cleardusk/EmotionChallenge" ["l"="33.188,29.34"]
"wy1iu/MHE" ["l"="33.089,29.32"]
"cleardusk/ImageToAscii" ["l"="33.201,29.334"]
"LynnHo/HD-CelebA-Cropper" ["l"="45.989,28.9"]
"flycat0101/imistyrain-MobileFaceNet" ["l"="33.118,29.178"]
"Linwei-Chen/MTCNN_Pytorch" ["l"="33.247,29.299"]
"wujiyang/MTCNN_TRAIN" ["l"="33.273,29.349"]
"BrightXiaoHan/FaceDetector" ["l"="33.314,29.403"]
"polarisZhao/mtcnn-pytorch" ["l"="33.235,29.33"]
"xiezheng-cs/mtcnn_pytorch" ["l"="33.264,29.339"]
"beichen2012/mtcnn-pytorch" ["l"="33.293,29.341"]
"HansRen1024/Face-Tracking-Using-CNN-and-Optical-Flow" ["l"="33.242,29.116"]
"HansRen1024/Stabilized-Face-Detection-Bbox" ["l"="33.256,29.024"]
"jwyang/face-alignment-cpp" ["l"="33.107,28.998"]
"FacialLandmark/landmark_py" ["l"="33.099,28.982"]
"FaceDetect/jointCascade_py" ["l"="33.096,29.013"]
"ivangrov/YOLOv3-GoogleColab" ["l"="33.736,29.006"]
"wangshengyang1996/ArcfaceDemo" ["l"="32.883,29.688"]
"adityajn105/Face-Recognition-Siamese-Network" ["l"="33.021,29.71"]
"susantabiswas/FaceRecog" ["l"="33.012,29.732"]
"habrman/FaceRecognition" ["l"="33.046,29.552"]
"ishwarsawale/real-time-face-recognition-with-facenet" ["l"="33.076,29.529"]
"huohuotm/Facial-Landmark" ["l"="33.3,28.906"]
"TropComplique/wing-loss" ["l"="33.3,29.012"]
"huuuuusy/Mask-RCNN-Shiny" ["l"="32.648,28.924"]
"huuuuusy/Darknet-Cross" ["l"="32.672,28.935"]
"huuuuusy/YOLOV3-on-Android" ["l"="32.707,28.955"]
"codeniko/shape_predictor_81_face_landmarks" ["l"="33.255,29.09"]
"codeniko/eos" ["l"="33.263,29.037"]
"YuvalNirkin/face_segmentation" ["l"="31.159,30.696"]
"nxsEdson/CVD-Physiological-Measurement" ["l"="62.983,35.481"]
"YBIGTA/pytorch-hair-segmentation" ["l"="44.319,31.366"]
"mapooon/SelfBlendedImages" ["l"="31.148,30.111"]
"lucasxlu/HMTNet" ["l"="33.384,28.859"]
"lucasxlu/CRNet" ["l"="33.378,28.874"]
"gustavz/AttractiveNet" ["l"="33.391,28.83"]
"in66-dev/In-Prestissimo" ["l"="33.025,29.135"]
"luoyetx/mini-caffe" ["l"="33.084,29.174"]
"BUG1989/ncnn-benchmark" ["l"="51.643,33.201"]
"PerfXLab/embedded_ai" ["l"="52.688,33.576"]
"OAID/Caffe-HRT" ["l"="33.035,29.121"]
"ENCP/CNNdroid" ["l"="32.906,29.07"]
"PaddlePaddle/Anakin" ["l"="37.165,0.747"]
"Tencent/FeatherCNN" ["l"="37.183,0.734"]
"zhangqianhui/CnnForAndroid" ["l"="32.897,29.054"]
"AlfredXiangWu/face_verification_experiment" ["l"="33.106,29.231"]
"OAID/YSQfastfd" ["l"="33.074,29.136"]
"Tony607/Keras_age_gender" ["l"="32.988,29.177"]
"Spidy20/Music_player_with_Emotions_recognition" ["l"="32.808,29.853"]
"Spidy20/Insta_flters_with_python" ["l"="32.777,29.864"]
"ColeMurray/medium-facenet-tutorial" ["l"="33.084,29.618"]
"richmondu/libfaceid" ["l"="33.678,30.163"]
"wy1iu/SphereNet" ["l"="33.05,29.337"]
"wy1iu/DCNets" ["l"="33.065,29.329"]
"unixpickle/spherenet" ["l"="33.026,29.356"]
"inlmouse/MS-Celeb-1M_WashList" ["l"="33.083,29.305"]
"DaFuCoding/MTCNN_Caffe" ["l"="33.133,29.195"]
"JiajiongCao/CELEB-500K" ["l"="33.225,29.311"]
"Charrin/RangeLoss-Caffe" ["l"="33.065,29.311"]
"dlunion/CC5.0" ["l"="32.816,29.226"]
"dlunion/CCDL" ["l"="33.018,29.194"]
"dlunion/CaffeLSTM-OCR" ["l"="32.826,29.21"]
"hopef/CCDL" ["l"="32.832,29.236"]
"huangyangyu/SeqFace" ["l"="33.24,29.462"]
"KaleidoZhouYN/e2e-joint-face-detection-and-alignment" ["l"="33.226,28.997"]
"zhanglaplace/3000fps-mtcnn" ["l"="33.121,29.131"]
"deepinsight/mtcnn-ncnn" ["l"="33.181,29.06"]
"YisenWang/Iterative_learning" ["l"="33.008,29.34"]
"qinzheng12/diagonalwise-refactorization-caffe" ["l"="32.995,29.351"]
"rmlin/CoMHE" ["l"="33.043,29.318"]
"KaihuaTang/ResNet50-Pytorch-Face-Recognition" ["l"="33.229,29.529"]
"shamangary/Keras-MNIST-center-loss-with-visualization" ["l"="32.927,29.429"]
"handongfeng/MNIST-center-loss" ["l"="32.902,29.431"]
"foamliu/FaceNet" ["l"="33.164,29.547"]
"serengil/tensorflow-101" ["l"="33.277,29.551"]
"lyakaap/image-feature-learning-pytorch" ["l"="33.076,29.447"]
"staticshreyas/Attendance-Portal" ["l"="47.609,20.039"]
"CT83/Facial-Recognition-Attendance-System" ["l"="32.863,29.786"]
"Marauders-9998/Attendance-Management-using-Face-Recognition" ["l"="32.876,29.796"]
"vithursant/MagnetLoss-PyTorch" ["l"="32.563,29.518"]
"mbanani/pytorch-magnet-loss" ["l"="32.533,29.514"]
"pumpikano/tf-magnet-loss" ["l"="32.529,29.532"]
"littleredxh/DREML" ["l"="32.679,29.484"]
"zhiqiangdon/CU-Net" ["l"="33.269,28.938"]
"mariolew/Deep-Alignment-Network-tensorflow" ["l"="33.213,29.007"]
"qinzheng93/diagonalwise-refactorization-pytorch" ["l"="32.955,29.371"]
"pasrichashivam/hyperface_deep_multi-task-learning_keras_implementation" ["l"="33.104,28.802"]
"Adityav2410/RealTimeHyperface" ["l"="33.114,28.816"]
"lbin/Retinaface_Detectron2" ["l"="33.328,29.465"]
"parai/dms" ["l"="33.195,30.256"]
"prasad-kumkar/ai-driver-safety" ["l"="33.185,30.229"]
"bnair2001/Driver-monitoring-system" ["l"="33.177,30.249"]
"TianxingWu/driver-fatigue-monitoring-system" ["l"="33.215,30.262"]
"nullbyte91/Driver-Monitoring-System-Gaze_Detection" ["l"="33.203,30.282"]
"github-luffy/PFLD_68points_Pytorch" ["l"="33.408,29.114"]
"stresearch/xfr" ["l"="33.351,29.518"]
"jing-interactive/DancingGaga" ["l"="32.707,29.242"]
"zlWang573/FaceSign" ["l"="33.291,29.826"]
"habom2310/People-tracking-with-Age-and-Gender-detection" ["l"="32.849,29.19"]
"tuomastik/video_face_detection" ["l"="32.808,29.185"]
"Mps24-7uk/Face-recog-Age-Gender-Emotion-" ["l"="32.756,29.154"]
"clovaai/EXTD_Pytorch" ["l"="33.436,29.078"]
"dechunwang/SSH-pytorch" ["l"="33.308,29.128"]
"sfzhang15/RefineDet" ["l"="50.856,30.175"]
"rekon/Smoke-semantic-segmentation" ["l"="34.087,29.091"]
"aiformankind/wildfire-smoke-dataset" ["l"="34.031,29.079"]
"linhaoqi027/smoke-segmentation" ["l"="34.155,29.085"]
"facebookarchive/AICamera-Style-Transfer" ["l"="32.773,29.032"]
"facebookarchive/AICamera" ["l"="32.856,29.053"]
"chaoyuaw/incubator-mxnet" ["l"="32.792,29.408"]
"PkuRainBow/HDC.caffe" ["l"="32.818,29.4"]
"ZZUTK/Face-Aging-CAAE" ["l"="45.176,30.554"]
"cjiang2/AgeEstimateAdience" ["l"="32.98,29.156"]
"wondonghyeon/face-classification" ["l"="47.386,34.726"]
"prathmachowksey/Attendance-System-Face-Recognition" ["l"="32.863,29.853"]
"imshreyshah/Attendance-System-Face-Recognition" ["l"="32.875,29.845"]
"raghavpatnecha/Hello-Morse-OpenCV" ["l"="33.147,29.828"]
"alexattia/ExtendedTinyFaces" ["l"="33.246,29.057"]
"varunagrawal/tiny-faces-pytorch" ["l"="33.218,29.11"]
"chinakook/hr101_mxnet" ["l"="51.84,33.609"]
"Timforce/tiny-tf" ["l"="33.232,29.097"]
"abhiksark/Face-Recognition-FaceNet" ["l"="33.11,29.618"]
"steponteam/FaceRecognization" ["l"="32.733,29.656"]
"SkyStonePan/ArcfaceDemo_CSharp" ["l"="32.7,29.655"]
"catzhou2002/ArcFaceDemo" ["l"="32.702,29.677"]
"mileistone/study_resources" ["l"="33.622,29.066"]
"Media-Smart/volkscv" ["l"="33.573,29.078"]
"Media-Smart/vedacls" ["l"="33.598,29.066"]
"Media-Smart/vedastr" ["l"="46.532,7.3"]
"Media-Smart/vedaseg" ["l"="33.606,29.081"]
"Media-Smart/volksdep" ["l"="33.576,29.1"]
"Media-Smart/cheetahinfer" ["l"="33.583,29.086"]
"fabianp/mord" ["l"="32.549,29.144"]
"szaza/android-yolo-v2" ["l"="32.765,28.957"]
"natanielruiz/android-yolo" ["l"="32.801,28.993"]
"sanfooh/android_yolo_truck" ["l"="32.744,28.92"]
"mdietrichstein/yolo-tiny-v1-mobile" ["l"="32.746,28.967"]
"tzutalin/Android-Object-Detection" ["l"="32.851,29.017"]
"nhatuan84/android-opencv-yolov3" ["l"="32.734,28.935"]
"wics1224/yolov3-android-tflite" ["l"="32.72,28.936"]
"matteomedioli/AndroidObjectDetection" ["l"="32.709,28.902"]
"lincolnhard/mtcnn-head-detection" ["l"="33.524,29.08"]
"AVAuco/ssd_head_keras" ["l"="33.514,29.094"]
"wnov/Keras_Head_Detection_YoloV3" ["l"="33.501,29.105"]
"embracesource-cv-com/FCHD" ["l"="33.483,29.121"]
"val-iisc/lsc-cnn" ["l"="33.419,28.57"]
"leviome/human_counter" ["l"="54.776,32.489"]
"gjy3035/Awesome-Crowd-Counting" ["l"="33.443,28.513"]
"guillermogotre/CUSP" ["l"="45.179,30.612"]
"aagrawal207/OpenCV-Face-Recognition" ["l"="32.821,29.8"]
"chentyjpm/DarknetDemoInAndroid" ["l"="32.76,29.002"]
"xiangweizeng/darknet2ncnn" ["l"="32.846,29.073"]
"yuace/yolov2-Tiny-NCNN-Android-demo" ["l"="32.717,28.98"]
"SkyStonePan/ArcfaceDemo_CSharp_2.2" ["l"="32.591,29.714"]
"SkyStonePan/ArcfaceDemo_CSharp_3.0" ["l"="32.564,29.736"]
"SkyStonePan/ArcSoftIDCardFace_CSharp" ["l"="32.651,29.682"]
"18628271760/MultipleFacesProcess" ["l"="32.564,29.717"]
"huihut/Facemoji" ["l"="32.879,28.893"]
"lawsonsli/faceCapture" ["l"="32.967,29.003"]
"utibenkei/DlibFaceLandmarkDetectorWithLive2DSample" ["l"="32.86,28.854"]
"EnoxSoftware/DlibFaceLandmarkDetector" ["l"="32.834,28.856"]
"huailiang/face-nn" ["l"="-24.76,-33.016"]
"NumesSanguis/FACSvatar" ["l"="31.76,29.406"]
"kjaisingh/hardhat-detector" ["l"="33.674,29.11"]
"gengyanlei/reflective-clothes-detect-yolov5" ["l"="33.763,29.126"]
"husaynhakeem/android-face-detector" ["l"="32.882,29.008"]
"iglaweb/Ferris-Wheel" ["l"="53.93,-12.721"]
"rubygarage/emotion-rating-view" ["l"="53.939,-12.582"]
"quiph/RecyclerView-FastScroller" ["l"="54.208,-12.559"]
"RedApparat/FaceDetector" ["l"="59.778,-10.594"]
"mirrajabi/view-effects" ["l"="53.749,-12.624"]
"betri28/FaceDetectCamera" ["l"="32.91,28.978"]
"wotomas/VoiceRipple" ["l"="59.55,-10.464"]
"Marksss/AndroidAutoSwitcher" ["l"="54.051,-12.522"]
"lopspower/LazyDatePicker" ["l"="61.391,-14.138"]
"iitzco/deepzoo" ["l"="33.057,29.085"]
"cayden/facesample" ["l"="32.961,29.248"]
"serengil/h2o-ai-101" ["l"="33.352,29.709"]
"serengil/crypto" ["l"="33.334,29.675"]
"serengil/LightPHE" ["l"="33.388,29.754"]
"m4jidRafiei/Decision-Tree-Python-" ["l"="33.403,29.733"]
"wangyunjeff/ResNet50-MNIST-pytorch" ["l"="33.25,29.59"]
"lph0729/TensorFlow-FaceRecognition" ["l"="33.168,29.608"]
"LynnHo/Facial-Landmarks-of-Face-Datasets" ["l"="33.337,28.913"]
"guanfuchen/facedet" ["l"="33.26,28.782"]
"lxg2015/faceboxes" ["l"="33.255,28.823"]
"SkyStonePan/IdCardVeriDemo_Android" ["l"="32.79,29.599"]
"xuduo35/ncnn-mtcnn-facenet" ["l"="32.948,29.266"]
"Luca96/android-face-landmarks" ["l"="32.951,28.965"]
"Luca96/dlib-for-android" ["l"="32.926,28.919"]
"XiaXuehai/faceboxes" ["l"="33.243,28.894"]
"nosyarlin/Cyber-Attack-Prediction" ["l"="33.157,30.082"]
"s1Rishabh/Auto-Attendance-System-using-Deep-Learning" ["l"="33.141,30.086"]
"wangshengyang1996/FaceTrackDemo" ["l"="32.859,29.705"]
"rainofmine/Face_Attention_Network" ["l"="33.396,29.146"]
"KimSoybean/ScratchDet" ["l"="50.846,30.281"]
"OceanPang/Libra_R-CNN" ["l"="50.832,30.247"]
"ChaofWang/L-GM_loss_pytorch" ["l"="33.059,29.442"]
"WeitaoVan/L-GM-loss" ["l"="33.062,29.42"]
"vivoutlaw/SSIAM" ["l"="33.306,29.53"]
"HuangYG123/DDL" ["l"="33.191,29.376"]
"tiandunx/loss_function_search" ["l"="33.201,29.407"]
"tzolov/mtcnn-java" ["l"="32.921,29.277"]
"ksachdeva/opencv-mtcnn" ["l"="33.196,29.038"]
"golunovas/mtcnn-cpp" ["l"="33.194,28.973"]
"Chenyang-ZHU/YOLOv3-Based-Face-Detection-Tracking" ["l"="33.239,29.009"]
"xhuvom/FaceID" ["l"="33.148,28.967"]
"AzureWoods/faceRecognition-yolo-facenet" ["l"="33.215,28.978"]
"zlmo/Face-Detection" ["l"="33.223,29.021"]
"DayBreak-u/yolo-face-with-landmark" ["l"="33.467,29.128"]
"SpikeKing/keras-yolo3-detection" ["l"="50.394,32.91"]
"wllkk/face-recognition-ncnn" ["l"="33.233,29.166"]
"zhaotun/MTCNN_MobileFacenet_NCNN_Android" ["l"="33.233,29.156"]
"Balaje/OpenCV" ["l"="32.991,28.813"]
"gloomyfish1998/opencv4android" ["l"="33.114,29.725"]
"jiangdongguo/OpenCV4Android" ["l"="-52.615,7.887"]
"deepinsight/mxnet-SSH" ["l"="33.215,29.035"]
"deepcam-cn/FaceQuality" ["l"="33.364,29.442"]
"pterhoer/QMagFace" ["l"="33.389,29.503"]
"zhanglijun95/FIIQA" ["l"="33.358,29.499"]
"yangyuke001/FIIQA-PyTorch" ["l"="-54.596,-12.583"]
"Slinene/SDD-FIQA" ["l"="33.352,29.467"]
"BruceZhanKai/Face-Image-Quality-Assessment" ["l"="33.354,29.484"]
"pterhoer/ExplainableFaceImageQuality" ["l"="33.378,29.487"]
"onnx/onnx-caffe2" ["l"="32.678,29.003"]
"lupesko/model-zoo-old" ["l"="32.638,28.991"]
"luoyexk/FaceDetector" ["l"="33.035,29.887"]
"tpys/face-everthing" ["l"="33.147,29.267"]
"FengZhenhua/DAC-CSR" ["l"="33.318,28.923"]
"JunrQ/caffe-layer" ["l"="33.32,28.9"]
"IssacCyj/Adversarial-Occlussion-aware-Face-Detection" ["l"="33.436,29.114"]
"rainofmine/Repulsion_Loss" ["l"="50.926,30.413"]
"sulenn/fire-dataset" ["l"="34.026,29.095"]
"breed2137/fire_dataset" ["l"="34.031,29.057"]
"RashadGarayev/FireDetection" ["l"="34.03,29.107"]
"TheSmike/pasm-yolov3-Android" ["l"="32.703,28.929"]
"huuuuusy/videocube-toolkit" ["l"="32.618,28.898"]
"huuuuusy/YOLO-Learning-Notes" ["l"="32.679,28.949"]
"FunkyKoki/Look_At_Boundary_PyTorch" ["l"="33.51,28.846"]
"facial-landmarks-localization-challenge/Look_At_Boundary_PyTorch" ["l"="33.493,28.873"]
"cleardusk/UCAS" ["l"="33.202,29.35"]
"prashantdukecyfi/Driver-monitoring-system-for-automobile-using-machine-learning-and-OpenCV" ["l"="33.208,30.244"]
"clovaai/symmetrical-synthesis" ["l"="58.084,8.876"]
"aashishpeepra/Whatsapp_Bot_selenium" ["l"="32.744,29.989"]
"xuexingyu24/MTCNN_Tutorial" ["l"="33.293,29.6"]
"kasyoukin/caffe_ocr_for_linux" ["l"="32.74,29.201"]
"yalecyu/crnn.caffe" ["l"="32.753,29.215"]
"ChWick/warp-ctc" ["l"="32.706,29.196"]
"fendaq/Caffe-OCR" ["l"="32.703,29.206"]
"warrentdrew/Caffe_SSD_LSTM_LPR" ["l"="32.768,29.204"]
"filonenkoa/cnn_evaluation_smoke" ["l"="34.082,29.149"]
"kauser-cse-buet/flame-detection-system" ["l"="34.065,29.147"]
"lancezhange/smoke_recognition" ["l"="34.084,29.13"]
"nicolaswee/FireDetection-TensorFlow" ["l"="34.095,29.14"]
"vadimkantorov/metriclearningbench" ["l"="32.706,29.482"]
"friedhelm739/MTCNN-tensorflow" ["l"="33.073,29.466"]
"dkarunakaran/facenet_mtcnn_tensorflow_inference_engine" ["l"="33.035,29.691"]
"anson0910/Siamese_Networks_Face_Recognition" ["l"="33.019,29.679"]
"Thxzzzzz/ArcFaceSharp" ["l"="32.67,29.672"]
"arunponnusamy/gender-classification" ["l"="32.838,29.284"]
"smahesh29/Gender-and-Age-Detection" ["l"="32.894,29.222"]
"shuguoli68/FaceDemo" ["l"="33.484,29.487"]
"koulakis/h-nne" ["l"="44.819,25.891"]
"mahdiabavisani/Deep-multimodal-subspace-clustering-networks" ["l"="53.091,29.902"]
"Annusha/unsup_temp_embed" ["l"="33.307,29.557"]
"k-han/DTC" ["l"="52.73,14.304"]
"shahsohil/DCC" ["l"="53.04,29.794"]
"ElegantGod/mxnet-SSHA" ["l"="33.232,28.986"]
"tzutalin/dlib-android-app" ["l"="32.982,29.109"]
"weank1984/face-recognition" ["l"="32.957,29.058"]
"tzutalin/dlib-android" ["l"="33.033,29.073"]
"gicheonkang/fast-face-android" ["l"="33.002,29.052"]
"ujjwalsharma9/Fire-Detection" ["l"="34.099,29.107"]
"Leofengxin/Video_Smoke_Detection" ["l"="34.078,29.109"]
"LeeRel1991/faceAlignment_tensorflow" ["l"="33.245,28.97"]
"BobLiu20/FacialLandmark_Caffe" ["l"="33.201,29.016"]
"maxuehao/Smokeing-detection" ["l"="33.077,29.826"]
"JuheonYi/tiny-tf" ["l"="33.222,29.089"]
"zhanglaplace/mtcnn" ["l"="33.093,29.115"]
"ivangrov/Android-Deep-Learning-with-OpenCV" ["l"="32.673,28.867"]
"szad670401/tvm_mobilefacenet" ["l"="32.906,29.298"]
"AIRLegend/fakenews" ["l"="33.155,30.113"]
"cxcxcxcx/asmlib-opencv" ["l"="33.049,28.941"]
"gaobb/DLDL" ["l"="32.767,29.282"]
"PuNeal/DLDL-v2-PyTorch" ["l"="32.782,29.276"]
"msindev/Data-Structures-In-C" ["l"="33.127,30.044"]
"zeusees/HyperLabelImg" ["l"="33.306,29.174"]
"deepcam-cn/Face-Anti-spoofing.pytorch" ["l"="33.634,30.141"]
"zeusees/HyperVID" ["l"="34.189,30.054"]
"OAID/FaceRecognition" ["l"="33.069,29.149"]
"OAID/FaceDetection" ["l"="33.113,29.166"]
"rishabhverma17/sms_slang_translator" ["l"="32.848,29.998"]
"kunhe/Deep-Metric-Learning-Baselines" ["l"="32.672,29.472"]
"KaleidoZhouYN/LightResNet-50" ["l"="33.178,29.08"]
"lijiannuist/lightDSFD" ["l"="33.45,29.143"]
"YirongMao/NAN" ["l"="32.842,29.307"]
"jinyanxu/Neural-Aggregation-Network-for-Video-Face-Recognition" ["l"="32.877,29.31"]
"YirongMao/COSONet" ["l"="32.807,29.307"]
"HWenTing/yolo-Android-Real-time-Vehicle-Recognition-System" ["l"="32.734,28.903"]
"mariolew/TF-FaceLandmarkDetection" ["l"="33.199,28.839"]
"zealerww/gender_age_classification" ["l"="32.906,29.128"]
"elhoangvu/HyperLandmark-iOS" ["l"="33.006,28.976"]
"elhoangvu/PCN-iOS" ["l"="32.994,28.945"]
"liujilong0116/android-opencv-dlib-facelandmark" ["l"="32.883,28.98"]
"goodluckcwl/Sphereface-model" ["l"="33.23,28.947"]
"Danicaai/android-mnn" ["l"="33.513,29.003"]
"zhu260824/face_mnn" ["l"="33.548,28.967"]
"lqs19881030/faceboxes" ["l"="33.1,29.257"]
"cpuimage/MTCNN" ["l"="33.182,29.189"]
"eisaadil/AttendanceCam" ["l"="32.902,29.956"]
"ntshvicky/FaceRecognitionAttendance" ["l"="32.906,29.925"]
"vudung45/FaceRTC" ["l"="32.974,29.637"]
"vudung45/Viet-trie" ["l"="32.961,29.662"]
"vudung45/MovieSites-MediaExtractor" ["l"="32.951,29.656"]
"OlafenwaMoses/Traffic-Net" ["l"="34.104,29.066"]
"ankitshah009/CarCrash_forecasting_and_detection" ["l"="34.143,29.06"]
"spmallick/PyImageConf2018" ["l"="33.354,28.843"]
"ageitgey/image_segmentation_examples" ["l"="33.352,28.89"]
"euwern/proxynca_pp" ["l"="32.78,29.514"]
"ifeherva/DMLPlayground" ["l"="32.727,29.503"]
"rileykwok/Face-Recognition-Model-with-Gender-Age-and-Emotions-Estimations" ["l"="32.692,29.122"]
"auroua/L_Softmax_TensorFlow" ["l"="33.031,29.397"]
"luisarojas/distracted-driver-detection" ["l"="33.253,30.023"]
"fomorians/distracted-drivers-keras" ["l"="33.267,30.053"]
"z376368673/FaceSignIn" ["l"="33.052,29.835"]
"imistyrain/facemask" ["l"="33.127,28.973"]
"trigeorgis/mdm" ["l"="33.148,29.006"]
"zuoqing1988/train-human14" ["l"="32.982,29.281"]
"MLforHealth/S2SD" ["l"="32.756,29.5"]
"shenwei1231/caffe-DeepRegressionForests" ["l"="32.733,29.126"]
"changsukim-ku/order-learning" ["l"="32.726,29.107"]
"jacobzhaoziyuan/AMR-Loss" ["l"="32.741,29.1"]
"basavaraj-hampiholi/Age-Estimation--DEX-in-Pytorch" ["l"="32.746,29.112"]
"SkyStonePan/IDCardVeriDemo_CPP" ["l"="32.631,29.695"]
"KaleidoZhouYN/Angular-Distance-softmax-with-Auto-Margin" ["l"="33.169,29.035"]
"daikankan/MegaFace" ["l"="33.308,29.586"]
"yuxitong/AndroidMVP" ["l"="33.11,29.845"]
"yuxitong/FFmpegAndroid" ["l"="33.101,29.856"]
"RenatoBMLR/state-farm-distracted-driver-detection" ["l"="33.172,30.358"]
"MLjian/PyTorch_DistractedDriverDetection" ["l"="33.184,30.341"]
"Apoorvajasti/Distracted-Driver-Detection" ["l"="33.167,30.336"]
"zisianw/WIDER-to-VOC-annotations" ["l"="33.245,28.945"]
"ishay2b/VanillaCNN" ["l"="33.185,29.048"]
"944284742/1.FaceRecognition" ["l"="33.094,29.479"]
"vincentwei0919/crawler" ["l"="33.079,29.481"]
"kriyeng/yolo-on-colab-notebook" ["l"="33.765,28.973"]
"zuoqing1988/HumanPose" ["l"="32.93,29.295"]
"ChenyuGAO-CS/LightFaceNet" ["l"="33.014,29.299"]
"yjl450/age-estimation-ldl-pytorch" ["l"="32.747,29.278"]
"Lichuanro/smoke-detection-transfer-learning" ["l"="34.078,29.167"]
"raady07/Smoke-Detection-in-video" ["l"="34.104,29.179"]
"wujiyang/BossRecognition" ["l"="32.76,29.32"]
"wujiyang/Contrastive-Loss" ["l"="32.798,29.329"]
"cvtower/FASNet" ["l"="33.442,29.472"]
"cvtower/SeesawNet_pytorch" ["l"="33.437,29.483"]
"iitzco/widerface-to-tfrecord" ["l"="33.211,28.959"]
"HTTdesu/SimpleFacerig" ["l"="32.916,28.939"]
"skygoo/faceRig" ["l"="32.9,28.911"]
"AIZOOTech/FaceMaskDetection" ["l"="33.505,29.26"]
"X-zhangyang/Real-World-Masked-Face-Dataset" ["l"="33.486,29.284"]
"chandrikadeb7/Face-Mask-Detection" ["l"="33.668,29.336"]
"minivision-ai/Silent-Face-Anti-Spoofing" ["l"="33.559,30.125"]
"aqeelanwar/MaskTheFace" ["l"="33.453,29.389"]
"AnthonyF333/FaceLandmark_PFLD_UltraLight" ["l"="33.444,29.095"]
"Hsintao/pfld-ncnn" ["l"="33.473,29.106"]
"Single430/FaceLandmark1000" ["l"="33.498,29.076"]
"hpc203/10kinds-light-face-detector-align-recognition" ["l"="33.452,29.173"]
"hpc203/libface-sface_detect-recognition-opencv" ["l"="53.742,32.855"]
"hpc203/yolov5-face-landmarks-opencv-v2" ["l"="53.651,32.83"]
"hpc203/yolov5-face-landmarks-opencv" ["l"="53.627,32.818"]
"hpc203/scrfd-opencv" ["l"="53.698,32.848"]
"xialuxi/yolov5_face_landmark" ["l"="33.598,29.105"]
"hpc203/yolov5-dnn-cpp-python" ["l"="53.584,32.794"]
"pcb9382/FaceAlgorithm" ["l"="53.455,32.595"]
"hpc203/yolov34-cpp-opencv-dnn" ["l"="53.642,32.779"]
"alibaba/MNN" ["l"="50.189,29.806"]
"xingyizhou/CenterNet" ["l"="50.687,29.978"]
"Pragya9ps/Face-Recognition-Attendance-System" ["l"="32.902,29.89"]
"Vatshayan/Face-recognition-Attendance-System-Project" ["l"="-20.429,13.088"]
"memudualimatou/STUDENT-ATTENDANCE-USING-FACIAL-RECOGNITION-SYSTEM-OPENCV" ["l"="32.855,29.87"]
"Waseemali11/Python-FYP-Face-Recognition-Attendence-System" ["l"="32.889,29.88"]
"exadel-inc/CompreFace" ["l"="33.616,29.494"]
"jakowenko/double-take" ["l"="-14.743,-39.18"]
"blakeblackshear/frigate" ["l"="12.215,-9.286"]
"sherlockchou86/VideoPipe" ["l"="53.366,32.624"]
"648540858/wvp-GB28181-pro" ["l"="64.037,-12.908"]
"skrashevich/double-take" ["l"="-14.746,-39.143"]
"apache/hertzbeat" ["l"="-3.451,11.454"]
"AlexxIT/go2rtc" ["l"="63.866,-12.873"]
"houbb/sensitive-word" ["l"="-3.407,11.498"]
"SthPhoenix/InsightFace-REST" ["l"="33.415,29.344"]
"exadel-inc/compreface-python-sdk" ["l"="33.702,29.556"]
"javahuang/SurveyKing" ["l"="-3.692,11.441"]
"deepcam-cn/yolov5-face" ["l"="33.517,29.214"]
"roboflow/supervision" ["l"="40.654,-0.062"]
"VikParuchuri/surya" ["l"="40.796,0.027"]
"serengil/retinaface" ["l"="33.464,29.367"]
"google-ai-edge/mediapipe" ["l"="50.34,29.758"]
"ultralytics/ultralytics" ["l"="50.35,29.629"]
"facefusion/facefusion" ["l"="32.129,30.114"]
"iperov/DeepFaceLive" ["l"="38.326,1.249"]
"coqui-ai/TTS" ["l"="38.433,1.412"]
"fishaudio/fish-speech" ["l"="38.438,1.562"]
"JaidedAI/EasyOCR" ["l"="46.216,7.49"]
"kuronekonano/Face-Recognition-Based-Attendance-System" ["l"="33.192,29.719"]
"akira4O4/PyQt5_Face_Recognition" ["l"="33.179,29.738"]
"zhanbao2000/classroom_attendance_face_recognition" ["l"="33.179,29.711"]
"balajisrinivas/Face-Mask-Detection" ["l"="33.786,29.341"]
"aieml/face-mask-detection-keras" ["l"="33.746,29.334"]
"Karan-Malik/FaceMaskDetector" ["l"="33.773,29.313"]
"Spidy20/face_mask_detection" ["l"="33.742,29.356"]
"balajisrinivas/Gender-Detection" ["l"="33.839,29.332"]
"balajisrinivas/Object-Detection-on-images-using-YOLO" ["l"="33.823,29.342"]
"abd-shoumik/Social-distance-detection" ["l"="33.892,29.368"]
"RangiLyu/nanodet" ["l"="50.401,29.946"]
"Tencent/TNN" ["l"="50.14,29.861"]
"zylo117/Yet-Another-EfficientDet-Pytorch" ["l"="50.672,30.028"]
"PeterH0323/Smart_Construction" ["l"="33.778,29.161"]
"DataXujing/YOLO-v5" ["l"="53.383,3.693"]
"CVUsers/Smoke-Detect-by-YoloV5" ["l"="33.749,29.154"]
"Sharpiless/Yolov5-deepsort-inference" ["l"="54.611,32.527"]
"yurizzzzz/Helmet-Detection-YoloV5" ["l"="33.789,29.127"]
"dyh/unbox_yolov5_deepsort_counting" ["l"="54.637,32.496"]
"mikel-brostrom/boxmot" ["l"="54.558,32.535"]
"wang-xinyu/tensorrtx" ["l"="50.315,29.877"]
"Megvii-BaseDetection/YOLOX" ["l"="50.432,29.878"]
"Gumpest/YOLOv5-Multibackbone-Compression" ["l"="53.444,3.658"]
"ppogg/YOLOv5-Lite" ["l"="53.379,3.659"]
"Syencil/mobile-yolov5-pruning-distillation" ["l"="53.408,3.653"]
"shsarv/Machine-Learning-Projects" ["l"="47.226,24.726"]
"adityap27/face-mask-detector" ["l"="33.805,29.366"]
"NisargPethani/FACE-MASK-DETECTION-USING-YOLO-V3" ["l"="33.837,29.371"]
"VictorLin000/YOLOv3_mask_detect" ["l"="33.857,29.386"]
"cabani/MaskedFace-Net" ["l"="33.501,29.337"]
"tanluren/yolov3-channel-and-layer-pruning" ["l"="52.798,33.345"]
"Lam1360/YOLOv3-model-pruning" ["l"="52.792,33.375"]
"Tianxiaomo/pytorch-YOLOv4" ["l"="50.522,30.01"]
"KangLin/FaceRecognizer" ["l"="33.376,29.405"]
"seetafaceengine/FaceRecognizer" ["l"="33.408,29.431"]
"seetafaceengine/SeetaFaceTutorial" ["l"="33.398,29.395"]
"guoyaohua/SmileyFace" ["l"="53.804,32.879"]
"yangjian1218/seetaface6JNIToAPP" ["l"="33.44,29.437"]
"SeetaFace6Open/SeetaFace6JNI" ["l"="33.42,29.421"]
"thepowerfuldeez/facemesh.pytorch" ["l"="33.495,28.986"]
"gouthamvgk/facemesh_coreml_tf" ["l"="33.537,28.936"]
"cedriclmenard/irislandmarks.pytorch" ["l"="33.562,28.939"]
"yinguobing/face-mesh-generator" ["l"="33.418,28.961"]
"juan-csv/Face_info" ["l"="32.717,29.152"]
"sajjjadayobi/FaceLib" ["l"="-49.136,17.631"]
"WildChlamydia/MiVOLO" ["l"="32.899,29.362"]
"kaushikjadhav01/Deep-Surveillance-Monitor-Facial-Emotion-Age-Gender-Recognition-System" ["l"="-9.173,12.646"]
"mowshon/age-and-gender" ["l"="32.799,29.21"]
"juan-csv/emotion_detection" ["l"="32.651,29.131"]
"juan-csv/face-recognition" ["l"="32.658,29.121"]
"tensorflower/seetaFace6Python" ["l"="33.436,29.357"]
"ViewFaceCore/ViewFaceCore" ["l"="-32.648,0.742"]
"CVUsers/Fire-Detect-by-YoloV5" ["l"="33.822,29.131"]
"elliottzheng/AdaptiveWingLoss" ["l"="33.449,28.95"]
"SeungyounShin/Adaptive-Wing-Loss-for-Robust-Face-Alignment-via-Heatmap-Regression" ["l"="33.427,29.009"]
"1996scarlet/Dense-Head-Pose-Estimation" ["l"="33.412,29.023"]
"SyGoing/LFFD-OpenVINO" ["l"="33.46,29.156"]
"CaoWGG/TensorRT-CenterNet" ["l"="53.189,32.699"]
"stdcoutzyx/DeepID_FaceClassify" ["l"="33.062,29.2"]
"cyh24/Joint-Bayesian" ["l"="33.052,29.237"]
"hqli/face_recognition" ["l"="33.072,29.237"]
"chenriwei/DeepFace" ["l"="33.126,29.227"]
"betars/Face-Resources" ["l"="33.124,29.206"]
"stdcoutzyx/FaceRetrieval" ["l"="33.002,29.184"]
"chenriwei/FaceTools" ["l"="33.094,29.208"]
"joyhuang9473/deepid-implementation" ["l"="33.033,29.205"]
"willard-yuan/CNN-for-Face-Image-Retrieval" ["l"="32.975,29.19"]
"tensorboy/centerpose" ["l"="31.778,28.241"]
"lucasjinreal/CenterNet_Pro_Max" ["l"="50.641,30.319"]
"FateScript/CenterNet-better" ["l"="50.7,30.277"]
"xggIoU/centernet_tensorflow_wilderface_voc" ["l"="50.478,30.343"]
"HiBugs/CenterNet" ["l"="33.447,29.215"]
"CaoWGG/TensorRT-YOLOv4" ["l"="53.207,32.667"]
"didi/AoE" ["l"="57.31,-12.166"]
"minivision-ai/Silent-Face-Anti-Spoofing-APK" ["l"="33.565,30.148"]
"dlunion/tensorRTIntegrate" ["l"="53.203,32.687"]
"mk-minchul/AdaFace" ["l"="33.376,29.431"]
"ydwen/opensphere" ["l"="33.344,29.444"]
"Abonia1/YOLOv8-Fire-and-Smoke-Detection" ["l"="33.936,29.076"]
"AnthonyF333/PFLD_GhostOne" ["l"="33.463,29.069"]
"AmrElsersy/PFLD-Pytorch-Landmarks" ["l"="33.481,29.064"]
"tf2jaguar/carIdentify" ["l"="33.26,29.822"]
"aydinnyunus/FaceRecognitionSecurity" ["l"="-46.815,-24.142"]
"joeVenner/control-3d-character-using-python" ["l"="32.957,29.859"]
"prafulla-codes/face-recognition-login-system" ["l"="32.97,29.833"]
"prajnasb/observations" ["l"="33.698,29.351"]
"gurucharan-marthi/Face-Mask-Detection" ["l"="33.722,29.34"]
"Ank-Cha/Social-Distancing-Analyser-COVID-19" ["l"="33.926,29.378"]
"NVIDIA-AI-IOT/face-mask-detection" ["l"="53.162,32.528"]
"datarootsio/tutorial-face-mask-detection" ["l"="33.817,29.415"]
"borutb-fri/FMLD" ["l"="33.581,29.337"]
"SamYuen101234/Masked_Face_Recognition" ["l"="33.534,29.498"]
"peteryuX/retinaface-tf2" ["l"="33.318,29.256"]
"mobilesec/arcface-tensorflowlite" ["l"="33.145,29.442"]
"aangfanboy/deepface" ["l"="33.113,29.457"]
"peteryuX/esrgan-tf2" ["l"="-34.856,21.626"]
"StanislasBertrand/RetinaFace-tf2" ["l"="33.341,29.304"]
"juan-csv/Architecture-for-real-time-video-streaming-analytics" ["l"="32.625,29.104"]
"IIT-PAVIS/Social-Distancing" ["l"="33.989,29.393"]
"aqeelanwar/SocialDistancingAI" ["l"="33.972,29.402"]
"deepak112/Social-Distancing-AI" ["l"="33.968,29.383"]
"basileroth75/covid-social-distancing-detection" ["l"="33.949,29.397"]
"ChargedMonk/Social-Distancing-using-YOLOv5" ["l"="33.965,29.362"]
"DrMahdiRezaei/DeepSOCIAL" ["l"="34.023,29.374"]
"JohnBetaCode/Social-Distancing-Analyser" ["l"="33.946,29.418"]
"parthsompura/Social-Distancing-Detector" ["l"="33.986,29.371"]
"galliot-us/smart-social-distancing" ["l"="32.122,27.905"]
"augmentedstartups/YOLOv4-Tutorials" ["l"="54.764,32.629"]
"ShiqiYu/libfacedetection.train" ["l"="33.432,29.2"]
"opencv/opencv_zoo" ["l"="33.571,29.227"]
"fdbtrs/ElasticFace" ["l"="33.413,29.504"]
"digital-nomad-cheng/Iris_Landmarks_PyTorch" ["l"="33.619,28.859"]
"OmarMedhat22/Iris-Recognition-CASIA-Iris-Thousand" ["l"="33.651,28.812"]
"OmarMedhat22/Iris-Recognition-on-Ubiris-v2" ["l"="33.674,28.792"]
"OmarMedhat22/iris-Recognition-Casia-Interval-v4" ["l"="33.659,28.789"]
"K-G-PRAJWAL/HTML-CSS-Projects" ["l"="-52.025,-10.448"]
"K-G-PRAJWAL/Machine-Learning-Projects" ["l"="-52.005,-10.443"]
"K-G-PRAJWAL/ExpressJS-Projects" ["l"="-52.012,-10.452"]
"yangfei963158659/nnie" ["l"="51.546,33.202"]
"Strand2013/NNIE-lite" ["l"="51.525,33.17"]
"aovoc/nnieqat-pytorch" ["l"="51.57,33.197"]
"ChenYingpeng/caffe-yolov3" ["l"="51.648,33.285"]
"swarnim1212/driver_fatigue_detection" ["l"="33.205,29.937"]
"KaerMorh/fatigue-driving-detection" ["l"="-54.732,-12.48"]
"nvlong21/Lightweight-face-detection-CenterNet" ["l"="33.528,29.177"]
"AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle" ["l"="34.01,29.061"]
"OlafenwaMoses/Action-Net" ["l"="34.054,29.063"]
"amirsultan/fireDetection" ["l"="34.053,29.078"]
"markgao-916/yolov3_fire_detection" ["l"="34.074,29.061"]
"shliang0603/Yolov4_DeepSocial" ["l"="34.067,29.379"]
"uricamic/clandmark" ["l"="33.074,28.987"]
"ci2cv/face-analysis-sdk" ["l"="33.077,29.039"]
"wensiyuanseven/lite-virtual-list" ["l"="50.589,2.757"]
"wensiyuanseven/better-gesture" ["l"="50.62,2.754"]
"cfs6/AChat" ["l"="50.62,2.726"]
"lyp-deeplearning/MOS-Multi-Task-Face-Detect" ["l"="33.406,28.978"]
"choyingw/SynergyNet" ["l"="31.916,29.442"]
"hnuzhy/DirectMHP" ["l"="33.425,28.94"]
"PINTO0309/HeadPoseEstimation-WHENet-yolov4-onnx-openvino" ["l"="33.403,28.947"]
"xucong-zhang/ETH-XGaze" ["l"="32.552,28.527"]
"dchen236/FairFace" ["l"="33.05,29.362"]
"lxq1000/SwinFace" ["l"="33.005,29.431"]
"FacePerceiver/FaRL" ["l"="31.998,29.48"]
"microsoft/DigiFace1M" ["l"="33.307,29.481"]
"DCGM/ffhq-features-dataset" ["l"="45.193,30.603"]
"sungho-CoolG/FSCL" ["l"="46.001,6.74"]
"royorel/FFHQ-Aging-Dataset" ["l"="45.129,30.588"]
"pterhoer/MAAD-Face" ["l"="32.982,29.376"]
"princetonvisualai/DomainBiasMitigation" ["l"="46.044,6.636"]
"mk-minchul/dcface" ["l"="30.92,30.583"]
"qianjinhao/circle-loss" ["l"="32.96,29.486"]
"zhen8838/Circle-Loss" ["l"="32.961,29.51"]
"xiangli13/circle-loss" ["l"="32.981,29.491"]
"xialuxi/CircleLoss_Face" ["l"="32.971,29.475"]
"YIQIANWANG/OnlineFaceRecognition" ["l"="33.216,29.785"]
"hukkelas/DSFD-Pytorch-Inference" ["l"="33.426,29.175"]
"elias-ramzi/ROADMAP" ["l"="32.702,29.537"]
"KevinMusgrave/record-keeper" ["l"="32.719,29.519"]
"azgo14/classification_metric_learning" ["l"="32.731,29.536"]
"Alina-chan/realtime-object-detection" ["l"="32.653,29.373"]
"broutonlab/face-id-with-medical-masks" ["l"="33.544,29.513"]
"fdbtrs/Masked-Face-Recognition-KD" ["l"="33.497,29.514"]
"linserSnow/PDSN" ["l"="33.508,29.534"]
"ZhangYuanhan-AI/CelebA-Spoof" ["l"="33.585,30.112"]
"DayBreak-u/darknet_face_with_landmark" ["l"="33.532,29.111"]
"SSL92/hyperIQA" ["l"="46.998,31.34"]
"fdbtrs/CR-FIQA" ["l"="33.416,29.52"]
"zwx8981/DBCNN-PyTorch" ["l"="47.009,31.329"]
"jackfrost1411/fire-detection" ["l"="33.983,29.049"]
"pedbrgs/Fire-Detection" ["l"="33.963,29.05"]
"siyuanwu/DFS-FIRE-SMOKE-Dataset" ["l"="34.002,29.039"]
"kairess/mask-detection" ["l"="33.751,29.372"]
"JadHADDAD92/covid-mask-detector" ["l"="33.763,29.391"]
"rfribeiro/mask-detector" ["l"="33.732,29.379"]
"linhaoqi027/SEG-GRAD-CAM" ["l"="34.209,29.078"]
"kiraving/SegGradCAM" ["l"="34.247,29.071"]
"gxrtbf/facetrain" ["l"="33.218,29.765"]
"Color-l/FaceRecognitionAttendanceSystem" ["l"="33.232,29.741"]
"oneStarLR/faceReco" ["l"="42.749,6.772"]
"yangkang2021/SeetaFace6-Build" ["l"="33.436,29.419"]
"zeusees/HyperFAS" ["l"="33.583,30.134"]
"SeetaFace6Sharp/SeetaFace6Sharp" ["l"="33.459,29.416"]
"xiangdeyizhang/FaceTrack_ncnn_HyperFT" ["l"="33.29,29.11"]
"zeusees/HyperLandmark" ["l"="33.306,29.112"]
"IIT-PAVIS/AI-Thermometer" ["l"="34.026,29.408"]
"vdjango/MaskFace" ["l"="33.858,28.916"]
"bubbliiiing/mask-recognize" ["l"="50.187,30.332"]
"ztjryg4/MaskDetect" ["l"="33.826,28.952"]
"ruoxinx/PPE-Detection-Pose" ["l"="33.806,29.034"]
"linghu8812/tensorrt_inference" ["l"="53.252,32.666"]
"littletomatodonkey/insight-face-paddle" ["l"="-47.158,9.05"]
"vectornguyen76/face-recognition" ["l"="33.505,29.416"]
"vudung45/HLS-GoogleDrive" ["l"="32.947,29.674"]
"jackweiwang/Android-FaceDetection-UltraNet-MNN" ["l"="33.45,29.053"]
"zjd1988/seetaface6_onnx_model" ["l"="33.486,29.41"]
"yangjian1218/seetaface6ToPy" ["l"="33.484,29.397"]
"tensorflower/seetaFace-python" ["l"="33.493,29.378"]
"tensorflower/ArcFace-python" ["l"="33.503,29.391"]
"juan-csv/face_recognition_occlusion" ["l"="33.568,29.542"]
"datarootsio/ml-skeleton-py" ["l"="33.853,29.439"]
"datarootsio/fresh-coffee-listener" ["l"="33.857,29.455"]
"datarootsio/databooks" ["l"="33.874,29.446"]
"datarootsio/tutorial-mlops" ["l"="33.873,29.463"]
"ryanmasondavies/FaceDetection" ["l"="32.862,28.735"]
"FlexMonkey/CartoonEyes" ["l"="32.836,28.692"]
"Martlgap/x-face-verification" ["l"="33.393,29.598"]
"yubangji123/Interpret_FR" ["l"="33.435,29.536"]
"Bil369/MaskDetect-YOLOv4-PyTorch" ["l"="33.788,29.001"]
"CodingChaozhang/yolo3-keras-breath_mask" ["l"="33.81,28.971"]
"hikariming/virus-mask-dataset" ["l"="33.85,28.966"]
"huzixuan1/Object_Dete_Masking" ["l"="33.83,28.987"]
"bytefish/facerecognition_guide" ["l"="33.033,29.048"]
"JalaliLabUCLA/Image-feature-detection-using-Phase-Stretch-Transform" ["l"="32.995,29.018"]
"trekhleb/machine-learning-octave" ["l"="-5.358,23.255"]
"idiap/facereclib" ["l"="44.791,27.844"]
"Confusezius/ECCV2020_DiVA_MultiFeature_DML" ["l"="32.761,29.518"]
"Confusezius/CVPR2020_PADS" ["l"="32.743,29.514"]
"ssr197/Fingerprint-Based-Voting-System" ["l"="33.195,30.099"]
"zmurez/MediaPipePyTorch" ["l"="33.562,28.91"]
"positive666/mediapipe_PoseEstimation_pytorch" ["l"="33.579,28.885"]
"tiqq111/mediapipe_pytorch" ["l"="33.582,28.866"]
"Yuol96/pytorch-triplet-loss" ["l"="32.866,29.562"]
"zineos/blazeface" ["l"="33.547,28.993"]
"FurkanOM/tf-blazeface" ["l"="33.531,29.002"]
"ibaiGorordo/BlazeFace-TFLite-Inference" ["l"="33.525,28.983"]
"sh1r0/caffe-android-lib" ["l"="32.897,29.038"]
"sh1r0/caffe-android-demo" ["l"="32.876,29.047"]
"solrex/caffe-mobile" ["l"="32.944,29.074"]
"soumith/torch-android" ["l"="45.881,27.526"]
"Leliana/WhatsThis" ["l"="32.851,29.035"]
"facebookarchive/fb-caffe-exts" ["l"="45.897,27.647"]
"pmgysel/caffe" ["l"="52.666,33.591"]
"alexkarargyris/Caffe_OpenCV_Android_App" ["l"="32.877,29.028"]
"shicai/MobileNet-Caffe" ["l"="51.674,33.332"]
"songhan/SqueezeNet-Deep-Compression" ["l"="52.653,33.603"]
"Maratyszcza/NNPACK" ["l"="37.154,0.787"]
"atharvakale31/Real-Time_Face_Recognition_Android" ["l"="32.907,29.19"]
"estebanuri/facemaskdetector" ["l"="32.879,29.204"]
"Malikanhar/Android-Face-Recognition" ["l"="32.89,29.173"]
"suruoxi/DistanceWeightedSampling" ["l"="32.791,29.545"]
"xlite-dev/torchlm" ["l"="33.447,29.018"]
"Jiahao-UTS/SLPT-master" ["l"="33.476,28.976"]
"ZhenglinZhou/STAR" ["l"="33.469,28.991"]
"andresprados/SPIGA" ["l"="31.962,29.489"]
"nothingelse92/AnchorFace" ["l"="33.484,29.012"]
"cansik/yolo-mask-detection" ["l"="33.882,29.398"]
"mmphego/face_mask_detection_openvino" ["l"="33.786,29.377"]
"Karan-Malik/ConvNet" ["l"="55.955,28.496"]
"ashutoshvarma/pyxpdf" ["l"="33.817,29.302"]
"bubbliiiing/arcface-pytorch" ["l"="50.221,30.358"]
"cvtower/seesawfacenet_pytorch" ["l"="33.416,29.449"]
"pshashk/seesaw-facenet" ["l"="33.45,29.479"]
"shantnu/FaceDetect" ["l"="33.076,29.363"]
"shantnu/Webcam-Face-Detect" ["l"="33.033,29.455"]
"ITCoders/Human-detection-and-Tracking" ["l"="54.674,32.779"]
"amineHorseman/facial-expression-recognition-svm" ["l"="56.036,27.361"]
"guoyilin/FaceDetection_CNN" ["l"="33.121,29.146"]
"WangXiaoCao/Triplet-loss-image-embedding-extraction" ["l"="32.999,29.523"]
"nitzankatz/fine-grained-few-shot-classification" ["l"="33.001,29.534"]
"sherpaai/Sherpa.ai-Federated-Learning-Framework" ["l"="32.492,29.458"]
"ari-dasci/S-TSFE-DL" ["l"="32.534,29.455"]
"Baojin-Huang/Webface-OCC" ["l"="33.561,29.593"]
"haibo-qiu/FROM" ["l"="33.521,29.552"]
"WeitaoVan/faceID" ["l"="33.541,29.576"]
"hzq-zjm/FaceDetect-FaceLandmark" ["l"="33.565,29.024"]
"StanislasBertrand/UniversalFaceRecog-TF2" ["l"="33.345,29.345"]
"xingxingxiaoyu/MyView" ["l"="33.057,30.01"]
"elliottzheng/face-detection" ["l"="33.534,29.146"]
"Dou-noki/Driver-detection-based-on-OpenPose-and-RandomForest" ["l"="33.323,29.987"]
"shubham0204/OnDevice-Face-Recognition-Android" ["l"="32.87,29.175"]
"irhammuch/android-face-recognition" ["l"="32.873,29.188"]
"shubham0204/Age-Gender_Estimation_TF-Android" ["l"="32.841,29.161"]
"bcsiriuschen/CARC" ["l"="33.05,28.844"]
"berak/uniform-lbp" ["l"="33.033,28.837"]
"RichardoMrMu/yolov5-smoke-detection-python" ["l"="33.829,29.183"]
"ZJU-lishuang/yolov5_prune" ["l"="53.408,3.636"]
"insigh1/Interactive_ABCs_with_American_Sign_Language_using_Yolov5" ["l"="33.82,29.162"]
"Syencil/tensorRT" ["l"="53.218,32.707"]
"hhaAndroid/yolov5-comment" ["l"="53.363,3.718"]
"maxs-kan/InterpretableNeuroDL" ["l"="32.696,29.577"]
"neeek2303/Depth-Enhancement-and-Super-Resolution" ["l"="32.719,29.563"]
"neeek2303/Leaf-diseases-segmentation" ["l"="32.71,29.581"]
"neeek2303/Lenta-Hackathon" ["l"="32.727,29.571"]
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" ["l"="33.639,30.128"]
"chentyjpm/InsightFaceRecognition_Demo_AndroidNCNN" ["l"="32.936,29.24"]
"NaumanHSA/Android-Face-Recognition-MTCNN-FaceNet" ["l"="32.919,29.211"]
"JinghuiZhou/awesome_face_antispoofing" ["l"="33.624,30.16"]
"dinhquy94/face-antispoofing-using-mobileNet" ["l"="33.654,30.142"]
"JDAI-CV/centerX" ["l"="50.679,30.255"]
"golnazghiasi/hpm-detection-code" ["l"="33.083,28.969"]
"Abhinav1004/Distracted-Driver-Detection" ["l"="33.174,30.316"]
"bubblebeam/Inferno-Realtime-Fire-detection-using-CNNs" ["l"="33.997,29.012"]
"fabianp/minirank" ["l"="32.524,29.127"]
"ayrna/orca" ["l"="32.506,29.151"]
"Shopify/bevel" ["l"="32.502,29.128"]
"HouchangX-AI/Helmet-Detection-Track" ["l"="33.803,29.081"]
"juan-csv/profile_detection" ["l"="32.628,29.118"]
"CodingChaozhang/YOLOV3_Fire_Detection" ["l"="34.132,29.034"]
"zk2ly/Smoke_Fire_Detection" ["l"="34.157,29.023"]
"JavisPeng/FaceRecognitionWithMask" ["l"="33.552,29.536"]
"susithrj/MaskNet-Occlusion-Invariant-Face-Recognition-System" ["l"="33.592,29.547"]
"levanquoc/masked-face-recognition" ["l"="33.558,29.553"]
"ZouJiu1/Mask_face_recognitionZ" ["l"="33.586,29.56"]
"Nagasai524/Masked-Face-Recognition-using-Facenet" ["l"="33.576,29.526"]
"zhhiyuan/yolov5" ["l"="33.807,29.094"]
"MouxiaoHuang/DUL" ["l"="33.335,29.526"]
"MathsShen/SCF" ["l"="54.58,33.589"]
"SeungyounShin/GroupFace" ["l"="33.367,29.603"]
"myml666/Seetaface2" ["l"="33.47,29.473"]
"hzy3774/SeetaFace2Android" ["l"="33.466,29.486"]
"yinguobing/facial-landmark-dataset" ["l"="33.388,28.955"]
"navervision/proxy-synthesis" ["l"="32.765,29.54"]
"e-candeloro/Driver-State-Detection" ["l"="33.177,30.269"]
"rubyruins/driver-drowsiness-detection" ["l"="33.206,30.226"]
"taylorguo/MTCNN_Landmark106" ["l"="33.29,29.028"]
"HouchangX-AI/Mask-face-recognition" ["l"="33.605,29.579"]
"sachith500/MaskedFaceRepresentation" ["l"="33.592,29.532"]
"fdbtrs/Self-restrained-Triplet-Loss" ["l"="33.478,29.52"]
"leowjs/Masked-Face-Recognition" ["l"="33.578,29.535"]
"jerryuhoo/Masked-Face-Recognition" ["l"="33.564,29.523"]
"SomeoneDistant/Lightweight-Face-Recognition" ["l"="33.26,29.352"]
"ChenyanWu/MEBOW" ["l"="33.477,28.821"]
"hnuzhy/JointBDOE" ["l"="33.457,28.867"]
"Media-Smart/cls2det" ["l"="33.583,29.068"]
"LikeLy-Journey/SegmenTron" ["l"="53.302,30.991"]
"Media-Smart/flexinfer" ["l"="33.566,29.088"]
"Media-Smart/volkstuner" ["l"="33.589,29.076"]
"yu-changqian/BiSeNet" ["l"="33.651,29.017"]
"lxtGH/Fast_Seg" ["l"="53.313,31.043"]
"MasterBin-IIAU/CSA" ["l"="32.546,28.852"]
"tsingqguo/AttackTracker" ["l"="32.53,28.832"]
"VISION-SJTU/IoUattack" ["l"="32.515,28.841"]
"jianzhnie/S3FD_pytorch" ["l"="33.518,29.068"]
"jianzhnie/GroupNorm-MXNet" ["l"="33.555,29.043"]
"KeqiangSun/FAB" ["l"="33.369,28.976"]
"Media-Smart/vedatad" ["l"="33.612,29.05"]
"Media-Smart/SKU110K-DenseDet" ["l"="33.589,29.054"]
"tyomj/product_detection" ["l"="50.914,30.469"]
"tjddus9597/LabelRelaxation-CVPR21" ["l"="62.591,36.366"]
"tjddus9597/Beyond-Binary-Supervision-CVPR19" ["l"="62.584,36.379"]
"sohyun-l/fifo" ["l"="62.542,36.356"]
"tjddus9597/HIER-CVPR23" ["l"="62.531,36.293"]
"juhongm999/hpf" ["l"="62.514,36.374"]
"yxgeee/SpCL" ["l"="55.938,32.84"]
"zkcys001/UDAStrongBaseline" ["l"="55.939,32.852"]
"alibaba-edu/Ranking-based-Instance-Selection" ["l"="32.821,29.531"]
"whut2962575697/naic_reid" ["l"="54.107,32.669"]
"heshuting555/NAIC_Person_ReID_DMT" ["l"="55.989,32.831"]
"Andrew-Brown1/Smooth_AP" ["l"="58.064,8.99"]
"chyueG/C3AE-pytorch" ["l"="32.909,29.235"]
"huxian123/mask_detecting" ["l"="33.875,28.949"]
"dodona-edu/universal-judge" ["l"="32.601,30.184"]
"dodona-edu/papyros" ["l"="32.584,30.177"]
"GarrettJenkinson/condor_tensorflow" ["l"="32.659,29.144"]
"serengil/deepface-api" ["l"="33.357,29.731"]
"serengil/lightface" ["l"="33.345,29.722"]
"dongfang-steven-yang/social-distancing-monitoring" ["l"="33.986,29.426"]
"vietanhdev/blazeface_keras" ["l"="33.562,28.978"]
"sbdcv/sbd_mask" ["l"="33.267,29.268"]
"leoluopy/GroupFacePytorch" ["l"="33.381,29.626"]
"haoosz/FFR-Net" ["l"="33.525,29.537"]
"wywu/ReenactGAN" ["l"="31.148,30.576"]
"juan-csv/eye_blink_detection" ["l"="32.595,29.109"]
"grigorisg9gr/polynomial_nets" ["l"="33.374,29.47"]
"themostnewone/2019ccf" ["l"="33.497,29.558"]
"joshuajss/RTAA" ["l"="32.496,28.827"]
"ChrisYang/TIFfacealignment" ["l"="33.087,28.897"]
"minus31/BlazeFace" ["l"="33.583,28.986"]
"KevinMusgrave/easy-module-attribute-getter" ["l"="32.689,29.526"]
"mileistone/vedaseg" ["l"="33.622,29.032"]
"dhhruv/Contactless-Attendance-System" ["l"="32.775,29.898"]
"xialuxi/yolov5-car-plate" ["l"="33.65,29.045"]
"qinggangwu/yolov7-pose_Npoint_Ncla" ["l"="33.681,29.009"]
"qinggangwu/yolov5_v6_plate_heading" ["l"="33.664,29.052"]
"derronqi/yolov7-face" ["l"="34.061,29.903"]
"derronqi/yolov8-face" ["l"="34.078,29.879"]
"xlite-dev/lite.ai.toolkit" ["l"="50.235,29.859"]
"lucasjinreal/yolov7_d2" ["l"="50.381,29.973"]
"meituan/YOLOv6" ["l"="50.363,29.926"]
"yeyupiaoling/Pytorch-MTCNN" ["l"="33.247,29.5"]
"zhongyy/SFace" ["l"="33.649,29.225"]
"OpenCVChina/DeepRobotDog" ["l"="33.622,29.219"]
"NobuoTsukamoto/tensorrt-examples" ["l"="49.674,29.99"]
"opencv/opencv_extra" ["l"="59.382,10.894"]
"NirAharon/BoT-SORT" ["l"="54.47,32.467"]
"PINTO0309/openvino2tensorflow" ["l"="49.813,29.952"]
"PINTO0309/PINTO_model_zoo" ["l"="49.966,29.931"]
"iwatake2222/play_with_tensorrt" ["l"="49.714,29.963"]
"tornadomeet/mxnet-face" ["l"="33.099,29.163"]
"wjgaas/DeepID2" ["l"="33.048,29.26"]
"1647790440/Yolov5-deepsort-driverDistracted-driving-behavior-detection" ["l"="33.281,30.012"]
"BonesCat/YoloV5_PyQt5" ["l"="53.593,3.718"]
"Sharpiless/Yolov5-Deepsort" ["l"="54.555,32.509"]
"advancer-debug/RedQueen_DrivingSecuritySystem" ["l"="33.297,30.015"]
"rikichou/distracted-driving-detection" ["l"="33.253,29.999"]
"Ai-trainee/Traffic-Sign-Recognition-PyQt5-YOLOv5-GUI" ["l"="53.614,3.716"]
"layumi/2015_Face_Detection" ["l"="33.151,29.099"]
"anson0910/CNN_face_detection" ["l"="33.158,29.117"]
"dhhruv/Chrome-Dino-Runner" ["l"="32.729,29.934"]
"dhhruv/Compresssio-GUI" ["l"="32.74,29.912"]
"dhhruv/Binary-Search-Solutions" ["l"="32.739,29.92"]
"dhhruv/todo" ["l"="32.75,29.917"]
"uricamic/flandmark" ["l"="33.07,28.928"]
"Russell91/ReInspect" ["l"="50.615,33.083"]
"LouieYang/caf_face_detection" ["l"="33.052,29.105"]
"fdbtrs/QuantFace" ["l"="33.442,29.546"]
"fdbtrs/IDiff-Face" ["l"="33.429,29.556"]
"fdbtrs/mixfacenets" ["l"="33.452,29.541"]
"fdbtrs/SFace-Privacy-friendly-and-Accurate-Face-Recognition-using-Synthetic-Data" ["l"="33.406,29.528"]
"meilfang/LMFD-PAD" ["l"="33.459,29.531"]
"fdbtrs/Unsupervised-Face-Recognition-using-Unlabeled-Synthetic-Data" ["l"="33.44,29.562"]
"naserdamer/MorDIFF" ["l"="33.423,29.541"]
"meilfang/SynthASpoof" ["l"="33.463,29.555"]
"fdbtrs/PocketNet" ["l"="33.453,29.56"]
"NetoPedro/FocusFace" ["l"="33.48,29.534"]
"GarrettJenkinson/condor_pytorch" ["l"="32.648,29.178"]
"menpo/lsfm" ["l"="31.825,29.314"]
"soubhiksanyal/FLAME_PyTorch" ["l"="31.876,29.457"]
"ZitongYu/DeepFAS" ["l"="33.583,30.091"]
"tomas-gajarsky/facetorch" ["l"="56.131,27.336"]
"ternaus/retinaface" ["l"="31.207,30.133"]
"ayrna/orca-python" ["l"="32.476,29.149"]
"xiaoxiong74/face-cluster-framework" ["l"="33.304,29.513"]
"x-shadow-x/FaceIdentificati" ["l"="32.978,29.936"]
"tony-Shx/Swface" ["l"="32.968,29.963"]
"sunnyiisc/Fire-Detection-from-FLAME-Dataset" ["l"="34.027,29.031"]
"maidacundo/real-time-fire-segmentation-deep-learning" ["l"="34.044,29.035"]
"pereira-gha/activefire" ["l"="34.08,29.019"]
"suojiashun/HIT-UAV-Infrared-Thermal-Dataset" ["l"="34.053,29.003"]
"deepcam-cn/age-estimate" ["l"="33.392,29.479"]
"jonasgrebe/pt-femb-face-embeddings" ["l"="33.384,29.52"]
"datarootsio/expiring-lru-cache" ["l"="33.887,29.462"]
"datarootsio/.github" ["l"="33.871,29.478"]
"exadel-inc/compreface-javascript-sdk" ["l"="33.742,29.587"]
"bubingy/HeadPoseEstimate" ["l"="33.446,28.973"]
"TimoBolkart/BFM_to_FLAME" ["l"="31.896,29.442"]
"Sentient07/HeadHunter--T" ["l"="33.622,29.148"]
"lucasxlu/ComboLoss" ["l"="33.398,28.869"]
"kensun0/Joint-Cascade-Face-Detection-and-Alignment" ["l"="33.101,29.028"]
"moliusimon/csdm" ["l"="33.117,28.986"]
"dhhruv/EncrypC" ["l"="32.747,29.898"]
"ykotseruba/attention_and_driving" ["l"="53.282,14.602"]
"RUI-LIU7/Helmet_Detection" ["l"="33.834,29.111"]
"justforforfor/insclr" ["l"="32.662,29.552"]
"sdw8855/YOLOV5_safetyHat" ["l"="33.834,29.079"]
"patlevin/face-detection-tflite" ["l"="33.615,28.895"]
"DanJun6737/TransFace" ["l"="33.341,29.597"]
"damo-cv/MogFace" ["l"="33.565,29.158"]
"eladhoffer/TripletNet" ["l"="32.906,29.399"]
"eladhoffer/ImageNet-Training" ["l"="45.959,27.598"]
"wanji/caffe-sl" ["l"="32.914,29.342"]
"derfred/asmlib-opencv" ["l"="33.018,28.921"]
"juan-cardelino/stasm" ["l"="33.022,28.903"]
"yxgong0/CRPD" ["l"="34.075,29.971"]
"ZhiwenShao/CFT" ["l"="33.111,28.96"]
"shaoxiaohu/CVPR2016" ["l"="33.096,28.956"]
"ekurutepe/iOS-OpenCV-FaceRec" ["l"="32.936,28.755"]
"giomurru/opencv-facerec-tutorial-ios" ["l"="32.944,28.8"]
"tsingqguo/ABBA" ["l"="32.515,28.81"]
"amanbasu/wildfire-detection" ["l"="34.114,28.995"]
"VividLe/A2Net" ["l"="47.962,34.056"]
"asrafulashiq/wsad" ["l"="47.909,34.067"]
"ibug-group/fpage" ["l"="32.754,29.553"]
"yiminglin-ai/imdb-clean" ["l"="32.814,29.514"]
"KaenChan/lightqnet" ["l"="33.466,29.589"]
"KaenChan/lightqnet-train" ["l"="33.478,29.61"]
"dhhruv/YouTua" ["l"="32.726,29.906"]
"dhhruv/Stock-Price-Prediction" ["l"="32.696,29.915"]
"dhhruv/Tic-Tac-Toe" ["l"="32.699,29.902"]
"mbfaria/ShuffleFaceNet_Pytorch" ["l"="33.474,29.568"]
"olddocks/caffe-facialkp" ["l"="33.212,28.904"]
"qiexing/caffe-regression" ["l"="33.22,28.867"]
"VISION-SJTU/RTAA" ["l"="32.49,28.842"]
"karthiknagarajansundar/automatic-music-generation" ["l"="33.195,30.079"]
"andyhx/JointCascadeFaceDetection" ["l"="33.089,28.991"]
"Copyleaks/.NET-Plagiarism-Checker" ["l"="32.675,30.189"]
"Copyleaks/NodeJS-Plagiarism-Checker" ["l"="32.672,30.205"]
"Copyleaks/Ruby-Plagiarism-Checker" ["l"="32.686,30.19"]
"dhhruv/Vac-Cowin" ["l"="32.714,29.924"]
"VHCC/SeetaFace64Android" ["l"="33.494,29.473"]
"CodingNowPls/SeetaFace64Android" ["l"="33.474,29.458"]
"abyssss52/PFLD_ncnn_test" ["l"="33.592,29.004"]
"anoymous-face/FFC" ["l"="33.223,29.479"]
"kjw0612/awesome-deep-vision" ["l"="47.831,28.792"]
"facebookresearch/Detectron" ["l"="50.57,29.767"]
"apache/mxnet" ["l"="47.989,29.03"]
"Gun-God/driver_fatigue_detection-master" ["l"="33.318,30.009"]
"SimonCherryGZ/face-landmark-android" ["l"="32.997,29.073"]
"zweigraf/face-landmarking-ios" ["l"="33.025,29.007"]
"wysaid/android-gpuimage-plus" ["l"="62.175,-14.279"]
"FaceAR/OpenFaceIOS" ["l"="33.069,29.059"]
"miaoerduo/dlib-face-landmark-compression" ["l"="33.076,29.078"]
"hrastnik/FaceSwap" ["l"="31.22,30.691"]
"hrastnik/face_detect_n_track" ["l"="33.124,29.099"]
"davheld/GOTURN" ["l"="54.787,33.698"]
"mks0601/A-Convolutional-Neural-Network-Cascade-for-Face-Detection" ["l"="33.104,29.104"]
"anson0910/CNN_face_detection_models" ["l"="33.118,29.115"]
"foreverYoungGitHub/CascadeCNN" ["l"="33.162,29.069"]
"thohemp/6DRepNet360" ["l"="33.423,28.91"]
"Ahmednull/L2CS-Net" ["l"="32.561,28.501"]
"PINTO0309/DMHead" ["l"="33.409,28.928"]
"Tonyfy/LCNN_TRAIN" ["l"="33.029,29.267"]
"flyingzhao/tfTCDCN" ["l"="33.152,28.985"]
"takiyu/hyperface" ["l"="33.131,28.906"]
"mk-minchul/CVLface" ["l"="33.42,29.479"]
"mk-minchul/caface" ["l"="33.408,29.472"]
"HamadYA/GhostFaceNets" ["l"="33.446,29.52"]
"waiterxiaoyy/waiter-vue-web" ["l"="33.253,29.722"]
"waiterxiaoyy/waiter-admin" ["l"="33.267,29.721"]
"fabiopoiesi/monet_dataset" ["l"="34.071,28.981"]
"zhang-pengyu/DUT-VTUAV" ["l"="54.464,33.853"]
"zhanglw882/ISTDU-Net" ["l"="54.069,31.959"]
"junyanz/FaceDemo" ["l"="31.719,29.233"]
"KeeganRen/FaceReconstruction" ["l"="31.771,29.292"]
"MichaelMure/3DMM" ["l"="31.802,29.28"]
"1adrianb/binary-face-alignment" ["l"="31.409,28.182"]
"lufo816/face_verification_demo" ["l"="33.008,29.256"]
"MaoXu/Joint_Bayesian" ["l"="32.974,29.265"]
"shaoguangcheng/faceFrontalization" ["l"="31.663,29.261"]
"RichardoMrMu/yolov5-fire-smoke-detect-python" ["l"="33.976,29.147"]
"noorkhokhar99/Fire-Detection-using-YOLOv8" ["l"="33.945,29.059"]
"pppoe/WhatsThis-iOS" ["l"="32.804,29.023"]
"ageitgey/face_recognition_models" ["l"="33.342,28.985"]
"switchablenorms/CelebAMask-HQ" ["l"="44.863,30.665"]
"StephenMilborrow/muct" ["l"="33.222,28.925"]
"datarootsio/tf-profile" ["l"="33.917,29.471"]
"vectornguyen76/search-engine-system" ["l"="33.528,29.431"]
"imistyrain/SeetaFace4Android" ["l"="32.916,29"]
"fdbtrs/Synthetic-Face-Recognition" ["l"="33.453,29.574"]
"paplhjak/Facial-Age-Estimation-Benchmark" ["l"="32.839,29.323"]
"luigivieira/Facial-Landmarks-Annotation-Tool" ["l"="33.177,28.985"]
"spmallick/dlib" ["l"="33.172,29.017"]
"spmallick/learnopencv" ["l"="50.792,29.813"]
"Santhosh-KS/spookfish" ["l"="33.169,28.959"]
"spmallick/opencv-haar-classifier-training" ["l"="33.167,28.939"]
"Jiahao-UTS/DSLPT" ["l"="33.487,28.951"]
"starhiking/HeatmapInHeatmap" ["l"="33.501,28.957"]
"huangyangyu/ADNet" ["l"="33.503,28.945"]
"starhiking/ATF" ["l"="33.493,28.936"]
"eveningglow/age-and-gender-classification" ["l"="32.938,29.167"]
"RichardoMrMu/yolov5-helmet-detection" ["l"="33.874,29.194"]
"jankolf/GraFIQs" ["l"="33.412,29.551"]
"LSIbabnikz/eDifFIQA" ["l"="33.439,29.592"]
"LSIbabnikz/DifFIQA" ["l"="33.425,29.578"]
"LSIbabnikz/FaceQAN" ["l"="33.461,29.634"]
"xiaolonw/caffe-video_triplet" ["l"="32.943,29.326"]
"luhaofang/tripletloss" ["l"="33.032,29.298"]
"hizhangp/triplet" ["l"="32.991,29.297"]
"wujiyang/Triplet-Loss" ["l"="32.835,29.337"]
"daerduoCarey/SpatialTransformerLayer" ["l"="51.484,33.45"]
"melgor/Triplet-Learning" ["l"="32.75,29.336"]
"guoyilin/caffe" ["l"="32.818,29.344"]
"jhjin/triplet-criterion" ["l"="32.723,29.331"]
"tyandzx/caffe" ["l"="32.865,29.355"]
"kennyvoo/face-occlusion-generation" ["l"="33.619,29.655"]
"face3d0725/FaceExtraction" ["l"="33.644,29.68"]
"marcohuber/xSSAB" ["l"="33.393,29.531"]
"NetoPedro/OCFR-2022" ["l"="33.403,29.539"]
"chasezcz/smokeRecognize" ["l"="34.121,29.141"]
"JavisDaDa/SmokeDetectionCNN" ["l"="34.118,29.126"]
"dbdmg/rescue" ["l"="34.133,28.981"]
"RichardoMrMu/yolov5-fire-smoke-detect" ["l"="33.99,29.166"]
"naserdamer/SMDD-Synthetic-Face-Morphing-Attack-Detection-Development-dataset" ["l"="33.453,29.614"]
"meilfang/SPL-MAD" ["l"="33.436,29.576"]
"RichardoMrMu/yolov5-helmet-detection-python" ["l"="33.897,29.2"]
"Copyleaks/Java-Plagiarism-Checker" ["l"="32.689,30.213"]
"zjd1988/seetaface2_onnx_model" ["l"="33.505,29.435"]
"rbgirshick/py-faster-rcnn" ["l"="50.507,33.119"]
"tensorflow/models" ["l"="48.134,28.884"]
"kong36088/BaiduImageSpider" ["l"="33.289,29.224"]
"QianyanTech/Image-Downloader" ["l"="48.295,23.42"]
"nnngu/BaiduImageDownload" ["l"="49.707,24.162"]
"Robert-JunWang/Pelee" ["l"="51.725,33.343"]
"MTLab/onnx2caffe" ["l"="51.613,33.212"]
"ZheC/Realtime_Multi-Person_Pose_Estimation" ["l"="31.66,28.089"]
"neeek2303/MegaPortraits" ["l"="32.672,29.593"]
"Kevinfringe/MegaPortrait" ["l"="32.628,29.611"]
"jmliu88/HeSer" ["l"="31.006,30.589"]
"neeek2303/papers-to-read" ["l"="32.648,29.608"]
"CSAILVision/GazeCapture" ["l"="32.616,28.562"]
"cvlab-uob/Awesome-Gaze-Estimation" ["l"="32.577,28.543"]
"shicai/DenseNet-Caffe" ["l"="51.631,33.381"]
"tfwu/FaceDetection-ConvNet-3D" ["l"="33.019,29.105"]
"zhreshold/mxnet-ssd" ["l"="51.752,33.563"]
"zhreshold/mxnet-yolo" ["l"="51.813,33.57"]
"ijkguo/mx-rcnn" ["l"="51.729,33.556"]
"tqchen/mxnet-gan" ["l"="51.821,33.669"]
"hnuzhy/CV_DL_Gather" ["l"="33.449,28.885"]
"microsoft/FaceSynthetics" ["l"="31.877,29.484"]
"haibo-qiu/SynFace" ["l"="33.324,29.541"]
"Hazqeel09/ellzaf_ml" ["l"="33.48,29.551"]
"otroshi/edgeface" ["l"="33.498,29.586"]
"arthurzaczek/OSPC" ["l"="32.656,30.157"]
"PatienceKai/VGG_Face_Caffe_Model" ["l"="33.009,29.271"]
"uzh-rpg/rpg_open_remode" ["l"="59.494,11.075"]
"YuanhaoGong/CurvatureFilter" ["l"="37.206,0.397"]
"plotly/plotly_matlab" ["l"="-5.273,23.245"]
"pdollar/edges" ["l"="53.075,30.792"]
"tum-vision/mono_dataset_code" ["l"="59.554,11.03"]
"brendenlake/BPL" ["l"="46.082,27.87"]
"vlfeat/vlfeat" ["l"="60.365,9.513"]
"Russell91/TensorBox" ["l"="50.449,33.05"]
"cameronfabbri/Colorful-Image-Colorization" ["l"="-33.645,20.319"]
"Introduction-to-Autonomous-Robots/Introduction-to-Autonomous-Robots" ["l"="58.891,12.7"]
"mtmd/Mobile_ConvNet" ["l"="32.824,29.057"]
"CAS-CLab/quantized-cnn" ["l"="52.629,33.584"]
"google/gemmlowp" ["l"="37.151,0.815"]
"ARM-software/ComputeLibrary" ["l"="37.183,0.77"]
"IntelLabs/SkimCaffe" ["l"="52.714,33.614"]
"ytl0623/yolov8-fire-car-and-smoke-detection" ["l"="33.919,29.059"]
"SayanSomya/Fire-and-Smoke-detection" ["l"="33.928,29.047"]
"Username378/Fire_smoke_monitoring_system" ["l"="33.941,29.042"]
"YuAo/Vivid" ["l"="43.425,-27.996"]
"DroidsOnRoids/VisionFaceDetection" ["l"="32.963,28.921"]
"erickingxu/MetalImage" ["l"="43.58,-27.992"]
"remirobert/Facemotion" ["l"="32.957,28.859"]
"yinguobing/face-marks" ["l"="32.982,28.955"]
"metal-by-example/sample-code" ["l"="43.632,-27.973"]
"objcio/issue-21-OpenCV-FaceRec" ["l"="44.501,-23.778"]
"Willjay90/AppleFaceDetection" ["l"="32.909,28.813"]
"rksltnl/Caffe-Deep-Metric-Learning-CVPR16" ["l"="32.877,29.391"]
"twtygqyy/caffe-augmentation" ["l"="51.589,33.374"]
"jwyang/JULE.torch" ["l"="53.072,29.822"]
"Copyleaks/PHP-Plagiarism-Checker" ["l"="32.692,30.198"]
"joelrfcosta/FaceRecognition" ["l"="32.944,28.825"]
"nanmi/yolov7-pose" ["l"="33.714,28.952"]
"Bigtuo/YOLOv7-Pose-Bytetrack-STGCN" ["l"="33.732,28.961"]
"liuziwei7/mobile-id" ["l"="33.056,29.283"]
"Bigtuo/YOLO-POSE-Bytetrack-STGCN" ["l"="33.752,28.941"]
"xingwangsfu/caffe-yolo" ["l"="51.678,33.355"]
"bytefish/VideoFaceDetection" ["l"="32.88,28.934"]
"blundell/WoodyFaceDetection" ["l"="32.855,28.929"]
"huangyangyu/FreeEnricher" ["l"="33.522,28.914"]
"BaofengZan/yolov7-pose-e2e-trt" ["l"="33.738,28.905"]
"Gwencong/yolov7-pose-tensorrt" ["l"="33.744,28.923"]
"hojak99/fire-detection" ["l"="34.054,29.163"]
"Blueblue4/IoU-AwareCalibration" ["l"="47.362,34.106"]
"Mukosame/Face-Annotation-Tool" ["l"="33.169,28.92"]
"PINTO0309/Face_Mask_Augmentation" ["l"="33.413,28.893"]
"fomorians/distracted-drivers-tf" ["l"="33.281,30.063"]
"trancongman276/yolov7-pose" ["l"="33.751,28.887"]
"Gwencong/yolo-pose-escalator" ["l"="33.761,28.909"]
"Martlgap/octuplet-loss" ["l"="33.42,29.643"]
"fdbtrs/ExFaceGAN" ["l"="33.444,29.582"]
"weiliu89/caffe" ["l"="50.506,33.094"]
"liuruoze/EasyPR" ["l"="34.21,30.116"]
"facebookarchive/caffe2" ["l"="47.886,29.061"]
"doggycoder/AndroidOpenGLDemo" ["l"="62.11,-14.323"]
"wuhaoyu1990/MagicCamera" ["l"="62.165,-14.338"]
"mabeijianxi/small-video-record" ["l"="62.259,-14.298"]
"aserbao/AndroidCamera" ["l"="62.13,-14.259"]
"saki4510t/UVCCamera" ["l"="59.919,-13.029"]
"pqpo/SmartCropper" ["l"="59.913,-13.793"]
"CJT2325/CameraView" ["l"="59.974,-13.756"]
"Jasonchenlijian/FastBle" ["l"="59.846,-13.33"]
"crazycodeboy/TakePhoto" ["l"="59.852,-13.716"]
"dingjikerbo/Android-BluetoothKit" ["l"="59.863,-13.355"]
"Kartik-3004/facexformer" ["l"="32.154,29.477"]
"tae898/age-gender" ["l"="32.851,29.376"]
"Lauszus/FaceRecognitionLib" ["l"="32.882,29.088"]
"kylemcdonald/ofxFaceTracker" ["l"="33.254,23.971"]
"arturoc/FaceSubstitution" ["l"="33.224,23.925"]
"yaylas/AndroidFaceRecognizer" ["l"="32.87,29.102"]
"pcr-upm/opal23_headpose" ["l"="33.43,28.877"]
"fdbtrs/AdaDistill" ["l"="33.45,29.599"]
"Redhwan-A/6DoFHPE" ["l"="33.44,28.847"]
"datarootsio/prefect-dbt-flow" ["l"="33.949,29.492"]
"chenzeyuczy/DeepID2" ["l"="32.999,29.281"]
"DuinoDu/mtcnn" ["l"="33.141,29.214"]
"daikankan/mtcnn" ["l"="33.109,29.126"]
"quanhua92/darknet" ["l"="33.131,28.945"]
"senliuy/FaceLivenessDetection" ["l"="33.582,30.197"]
"Ismailjm/PPE_detection_using_YOLOV8" ["l"="33.813,29.013"]
"liuyuisanai/CaffeMex_v2" ["l"="33.011,29.315"]
"liuyuisanai/Quality-Aware-Network" ["l"="32.97,29.316"]
"soeaver/py-RFCN-priv" ["l"="43.33,31.004"]
"ghnor/SeetaFace-AS" ["l"="32.869,28.955"]
"l1183479157/SeetafaceV6DotNet" ["l"="33.487,29.441"]
"xipeng13/recurrent-face-alignment" ["l"="33.141,28.925"]
"shashanktyagi/HyperFace-TensorFlow-implementation" ["l"="33.116,28.842"]
"sourabhvora/HyperFace-with-SqueezeNet" ["l"="33.131,28.838"]
"oufuzhao/CLIB-FIQA" ["l"="33.423,29.594"]
"ZhiwenShao/MCNet" ["l"="33.103,28.929"]
"toshi-k/kaggle-distracted-driver-detection" ["l"="33.269,30.034"]
"tks0123456789/kaggle-Otto" ["l"="57.451,24.152"]
"HaiyuWu/SOTA-Face-Recognition-Train-and-Test" ["l"="33.376,29.65"]
"DanJun6737/TopoFR" ["l"="33.352,29.632"]
"ZhenglinZhou/HeadStudio" ["l"="32.107,29.624"]
"luoyetx/OrdinalRegression" ["l"="32.754,29.136"]
"Smellly/DeepBeautyPredictor" ["l"="33.504,28.897"]
"liuliu/ccv" ["l"="-31.562,-35.605"]
"wihoho/FaceRecognition" ["l"="32.778,29.069"]
"szq0214/DSOD" ["l"="51.692,33.428"]
"zhaoweicai/cascade-rcnn" ["l"="50.869,30.19"]
"gliese581gg/YOLO_tensorflow" ["l"="50.408,33.044"]
"Xianhua-He/cvpr2024-face-anti-spoofing-challenge" ["l"="33.505,29.613"]
"sunyiyou/SAFAS" ["l"="33.561,30.036"]
"shenhuanet/OpenCV-android" ["l"="32.997,29.925"]
"Tony607/Keras_face_identification_realtime" ["l"="33.133,29.484"]
"CongWeilin/cluster-loss-tensorflow" ["l"="32.765,29.405"]
"miyosuda/TensorFlowAndroidDemo" ["l"="56.984,-14.866"]
"nilboy/tensorflow-yolo" ["l"="50.385,33.05"]
"thtrieu/darkflow" ["l"="50.392,33.004"]
"Zehaos/MobileNet" ["l"="50.428,33.132"]
"tylersco/adapted_deep_embeddings" ["l"="32.614,29.532"]
"luoyetx/mx-lsoftmax" ["l"="51.848,33.589"]
"usnistgov/frvt" ["l"="33.182,29.303"]
"playerkk/face-py-faster-rcnn" ["l"="33.134,29.177"]
"kensun0/Face-Detecion-with-the-Faster-R-CNN-R-FCN" ["l"="33.087,29.127"]
"xiaolonw/adversarial-frcnn" ["l"="51.654,33.466"]
"FacePlusPlus/MegviiFacepp-Android-SDK" ["l"="32.758,29.589"]
"FacePlusPlus/java-sdk" ["l"="32.739,29.614"]
"FacePlusPlus/MegviiFacepp-iOS-SDK" ["l"="32.716,29.616"]
"mk-minchul/kprpe" ["l"="33.459,29.502"]
"Wazzabeee/copy-spotter" ["l"="32.739,30.114"]
"seilna/Deep-RDD" ["l"="33.186,30.003"]
"HaiyuWu/FaceBrightness" ["l"="33.396,29.673"]
"willard-yuan/SeetaFaceLib" ["l"="32.824,28.913"]
"Redhwan-A/SurveyPHE" ["l"="33.446,28.82"]
"erogol/beauty.torch" ["l"="33.486,28.895"]
"keras-team/keras" ["l"="48.067,28.867"]
"deepfakes/faceswap" ["l"="38.158,1.176"]
"aymericdamien/TensorFlow-Examples" ["l"="47.951,28.706"]
"tensorflow/tensorflow" ["l"="48.211,29.024"]
"pytorch/pytorch" ["l"="48.274,28.966"]
"scikit-learn/scikit-learn" ["l"="48.164,28.819"]
"truongnmt/multi-task-learning" ["l"="32.914,29.256"]
"SimonCherryGZ/ARCamera" ["l"="32.95,29.021"]
"KAlO2/PerfectShow" ["l"="44.394,31.494"]
"ongakuer/CameraFilter" ["l"="62.331,-14.235"]
"hardik-trivedi/FaceFilter" ["l"="51.619,-14.246"]
"DingProg/Makeup" ["l"="62.081,-14.374"]
"ochornenko/Camera2GLPreview" ["l"="62.14,-13.858"]
"andreasveit/conditional-similarity-networks" ["l"="43.646,30.665"]
"facebookresearch/low-shot-shrink-hallucinate" ["l"="57.705,19.362"]
"felixgwu/mask_rcnn_pytorch" ["l"="51.093,30.063"]
"CoinCheung/triplet-reid-pytorch" ["l"="56.078,32.725"]
"edgarriba/examples" ["l"="32.934,29.466"]
"floodsung/LearningToCompare_FSL" ["l"="57.763,19.378"]
"bystc/FaceRecognition" ["l"="47.81,22.459"]
"inorilzy/renlian" ["l"="33.161,29.581"]
"DLlearn/python-in-dl" ["l"="33.157,29.598"]
"royshil/HeadPosePnP" ["l"="33.277,28.977"]
"qhan1028/Headpose-Detection" ["l"="33.277,28.997"]
"wujiyang/DlibFace" ["l"="32.78,29.335"]
"wujiyang/FaceRecognition" ["l"="32.798,29.341"]
"IMS94/javacv-cnn-example" ["l"="32.733,29.054"]
"ageitgey/dlib" ["l"="33.342,28.944"]
"takuya-takeuchi/FaceRecognitionDotNet" ["l"="-32.588,0.801"]
"takuya-takeuchi/DlibDotNet" ["l"="-32.468,0.805"]
"KleinYuan/Caffe2-iOS" ["l"="32.86,28.991"]
"RobertBiehl/caffe2-ios" ["l"="32.834,28.959"]
"KeyKy/caffe2_SSD" ["l"="32.826,28.971"]
"dpkravi/DecisionTreeClassifier" ["l"="33.454,29.779"]
"SimonCherryGZ/AverageFaceDemo" ["l"="32.937,28.998"]
"yobibyte/yobiface" ["l"="33.076,29.404"]
"malharsk27/Autoattendance-Cognitive" ["l"="32.79,29.812"]
"aagrawal207/AutoAttendance" ["l"="32.799,29.8"]
"SparshaSaha/Hand-Gesture-Recognition-Using-Background-Elllimination-and-Convolution-Neural-Network" ["l"="30.454,29.308"]
"camel007/Caffe-ShuffleNet" ["l"="51.658,33.358"]
"jay-mahadeokar/pynetbuilder" ["l"="51.61,33.401"]
"xmfbit/warpctc-caffe" ["l"="32.724,29.216"]
"happynear/SpatialTransformerLayer" ["l"="32.673,29.219"]
"zeakey/LDLForests" ["l"="32.719,29.287"]
"azmathmoosa/azFace" ["l"="33.111,28.94"]
"neka-nat/pytorch-hdml" ["l"="32.656,29.493"]
"zoli333/Center-Loss" ["l"="32.943,29.419"]
"hwang1996/Set-to-Set-Recognition" ["l"="32.926,29.318"]
"dapengchen123/video_reid" ["l"="55.914,32.665"]
"shuangjiexu/Spatial-Temporal-Pooling-Networks-ReID" ["l"="55.941,32.659"]
"PkuRainBow/Hard-Aware-Deeply-Cascaed-Embedding" ["l"="32.753,29.389"]
"cypw/ResNeXt-1" ["l"="33.267,29.226"]
"guoshengcv/cul" ["l"="32.72,29.391"]
"gh0stintheshe11/Stats-SVG" ["l"="50.879,2.896"]
"wangxupeng/2019Legal-AI-Challenge-Legal-Case-Element-Recognition-solution" ["l"="50.747,2.974"]
"rytsai/best-undress-ai-list" ["l"="50.763,3.03"]
"risesoft-y9/Data-Labeling" ["l"="50.881,2.931"]
"RexGRM/Alz-IDProteinExplorer" ["l"="50.73,3.033"]
"mqz111a/virtual_human_stream" ["l"="50.812,2.941"]
"JinhuaLiang/WavCraft" ["l"="50.773,2.966"]
"yxu0611/Tensorflow-implementation-of-LCNN" ["l"="33.08,29.431"]
"ShareGPT4Omni/ShareGPT4Video" ["l"="50.903,2.883"]
"ZeroingIn/facedemo" ["l"="32.872,29.515"]
"junerver/ArcFaceDemo" ["l"="32.855,29.515"]
"OAID/MXNet-HRT" ["l"="33.002,29.094"]
"merrymercy/tvm-mali" ["l"="37.046,1.152"]
"9reyson/FatigueDrivingReco" ["l"="33.239,30.006"]
"kc345ws/FatigueMonitoring" ["l"="33.232,29.99"]
"oswaldoludwig/Human-Action-Recognition-with-Keras" ["l"="47.908,34.026"]
"thoughtworksarts/EmoPy" ["l"="56.057,27.309"]
"amineHorseman/facial-expression-recognition-using-cnn" ["l"="56.084,27.33"]
"swghosh/DeepFace" ["l"="33.297,29.637"]
"deeplearningturkiye/turkce-yapay-zeka-kaynaklari" ["l"="29.757,-21.308"]
"ahashim1/Face" ["l"="32.883,28.786"]
"gunapandianraj/iOS11-VisionFrameWork" ["l"="46.398,-24.489"]
"r4ghu/iOS-CoreML-Yolo" ["l"="46.688,-24.201"]
"mattlawer/FaceLandmarksDetection" ["l"="32.886,28.761"]
"Martin20150405/Omoshiroi" ["l"="62.22,-14.335"]
"flyingzhao/FacialLandmarkAndroid" ["l"="32.972,29.024"]
"maharshi95/HyperFace" ["l"="33.123,28.806"]
"LouieYang/AgeAndGenderEstimation" ["l"="32.86,29.135"]
"jan-skarupa/facerig" ["l"="32.931,28.952"]
"TianxingWu/OpenVHead" ["l"="-31.417,-28.777"]
"tcw165/my-dlib-experiment" ["l"="-52.668,8.035"]
"piyushbajaj0704/Driver-Sleep-Detection-Face-Eyes-Mouth-Detection" ["l"="33.211,30.037"]
"anhttran/3dmm_cnn" ["l"="31.782,29.314"]
"nazmiasri95/Face-Recognition" ["l"="33.012,29.573"]
"informramiz/Face-Detection-OpenCV" ["l"="32.982,29.583"]
"parulnith/Face-Detection-in-Python-using-OpenCV" ["l"="55.983,28.431"]
"senlinuc/caffe_ocr" ["l"="46.28,7.234"]
"johny-c/pylmnn" ["l"="32.566,29.452"]
"cyberfire/tensorflow-mtcnn" ["l"="33.055,29.157"]
"mndar/facenet_classifier" ["l"="33.045,29.144"]
"MarekKowalski/FaceSwap" ["l"="31.185,30.688"]
"fengju514/Face-Pose-Net" ["l"="31.787,29.296"]
"allanzelener/YAD2K" ["l"="50.381,33.03"]
"log0/neural-style-painting" ["l"="45.641,29.597"]
"fchollet/deep-learning-models" ["l"="50.375,33.173"]
"experiencor/keras-yolo2" ["l"="50.411,33.025"]
"ArcJonSnow/Demo_for_Windows" ["l"="32.785,29.631"]
"UCI-NLP-course-team/graphcnn-few-shot-text-classification" ["l"="33.47,28.892"]
"kevinlu1211/FacialClusteringPipeline" ["l"="33.266,29.508"]
"cunjian/face_alignment" ["l"="33.269,28.91"]
"walkoncross/megaface-eval-zyf" ["l"="33.321,29.622"]
}