digraph G {
"priya-dwivedi/cs224n-Squad-Project" -> "deeppavlov/question_generation" ["e"=1]
"asappresearch/sru" -> "LantaoYu/SeqGAN" ["e"=1]
"TobiasLee/Chinese-Hip-pop-Generation" -> "GaoQ1/seqgan"
"TobiasLee/Chinese-Hip-pop-Generation" -> "TobiasLee/SeqGAN_Poem"
"TobiasLee/Chinese-Hip-pop-Generation" -> "codekansas/seqgan-text-tensorflow"
"TobiasLee/Chinese-Hip-pop-Generation" -> "ChenChengKuan/SeqGAN_tensorflow"
"john-hewitt/structural-probes" -> "miyyer/scpn" ["e"=1]
"THUDM/KOBE" -> "ZhihongShao/Planning-based-Hierarchical-Variational-Model"
"THUDM/KOBE" -> "WHUIR/RAGE"
"fuzhenxin/Style-Transfer-in-Text" -> "shentianxiao/language-style-transfer"
"fuzhenxin/Style-Transfer-in-Text" -> "zhijing-jin/Text_Style_Transfer_Survey"
"fuzhenxin/Style-Transfer-in-Text" -> "lijuncen/Sentiment-and-Style-Transfer"
"fuzhenxin/Style-Transfer-in-Text" -> "asyml/texar"
"fuzhenxin/Style-Transfer-in-Text" -> "luofuli/DualRL"
"fuzhenxin/Style-Transfer-in-Text" -> "THUNLP-MT/TG-Reading-List"
"fuzhenxin/Style-Transfer-in-Text" -> "vineetjohn/linguistic-style-transfer"
"fuzhenxin/Style-Transfer-in-Text" -> "uber-research/PPLM" ["e"=1]
"fuzhenxin/Style-Transfer-in-Text" -> "martiansideofthemoon/style-transfer-paraphrase"
"fuzhenxin/Style-Transfer-in-Text" -> "Maluuba/nlg-eval" ["e"=1]
"fuzhenxin/Style-Transfer-in-Text" -> "Nrgeup/controllable-text-attribute-transfer"
"fuzhenxin/Style-Transfer-in-Text" -> "fastnlp/style-transformer"
"fuzhenxin/Style-Transfer-in-Text" -> "geek-ai/Texygen"
"fuzhenxin/Style-Transfer-in-Text" -> "shrimai/Style-Transfer-Through-Back-Translation"
"fuzhenxin/Style-Transfer-in-Text" -> "thunlp/TAADpapers" ["e"=1]
"jiacheng-xu/vmf_vae_nlp" -> "jxhe/vae-lagging-encoder"
"jiacheng-xu/vmf_vae_nlp" -> "harvardnlp/sa-vae"
"jiacheng-xu/vmf_vae_nlp" -> "ysmiao/nvdm" ["e"=1]
"jiacheng-xu/vmf_vae_nlp" -> "nicola-decao/s-vae-pytorch" ["e"=1]
"jiacheng-xu/vmf_vae_nlp" -> "dallascard/scholar" ["e"=1]
"jiacheng-xu/vmf_vae_nlp" -> "bohanli/vae-pretraining-encoder"
"jiacheng-xu/vmf_vae_nlp" -> "kefirski/contiguous-succotash"
"bojone/vae" -> "timbmg/Sentence-VAE" ["e"=1]
"chingyaoc/ggnn.pytorch" -> "beckdaniel/acl2018_graph2seq" ["e"=1]
"nicola-decao/s-vae-pytorch" -> "jiacheng-xu/vmf_vae_nlp" ["e"=1]
"nicola-decao/s-vae-pytorch" -> "jxhe/vae-lagging-encoder" ["e"=1]
"google-research-datasets/paws" -> "miyyer/scpn"
"google-research-datasets/paws" -> "wasiahmad/paraphrase_identification"
"google-research-datasets/paws" -> "neulab/compare-mt" ["e"=1]
"google-research-datasets/paws" -> "google-research-datasets/tydiqa" ["e"=1]
"google-research-datasets/paws" -> "Vamsi995/Paraphrase-Generator"
"google-research-datasets/paws" -> "FranxYao/dgm_latent_bow"
"google-research-datasets/paws" -> "jwieting/para-nmt-50m"
"google-research-datasets/paws" -> "nelson-liu/contextual-repr-analysis" ["e"=1]
"google-research-datasets/paws" -> "Tiiiger/bert_score" ["e"=1]
"google-research-datasets/paws" -> "seominjoon/piqa" ["e"=1]
"google-research-datasets/paws" -> "malllabiisc/SGCP"
"google-research-datasets/paws" -> "mrqa/MRQA-Shared-Task-2019" ["e"=1]
"google-research-datasets/paws" -> "google-research/lasertagger" ["e"=1]
"google-research-datasets/paws" -> "facebookresearch/anli" ["e"=1]
"google-research-datasets/paws" -> "vsuthichai/paraphraser"
"zihangdai/mos" -> "kelvinguu/neural-editor" ["e"=1]
"neulab/compare-mt" -> "harvardnlp/pytorch-struct" ["e"=1]
"google-deepmind/narrativeqa" -> "xinyadu/nqg" ["e"=1]
"ipython/xkcd-font" -> "mamaral/xkcd-Open-Source"
"ipython/xkcd-font" -> "tasdikrahman/xkcd-dl" ["e"=1]
"salesforce/decaNLP" -> "asyml/texar" ["e"=1]
"microsoft/NeuronBlocks" -> "asyml/texar" ["e"=1]
"nyu-mll/jiant" -> "harvardnlp/pytorch-struct" ["e"=1]
"dmlc/gluon-nlp" -> "asyml/texar" ["e"=1]
"thunlp/TAADpapers" -> "fuzhenxin/Style-Transfer-in-Text" ["e"=1]
"rtqichen/beta-tcvae" -> "jxhe/vae-lagging-encoder" ["e"=1]
"weilinie/RelGAN" -> "elvisyjlin/RelGAN-PyTorch" ["e"=1]
"graykode/gpt-2-Pytorch" -> "fuzhenxin/Style-Transfer-in-Text" ["e"=1]
"THUNLP-MT/TG-Reading-List" -> "rikdz/GraphWriter"
"THUNLP-MT/TG-Reading-List" -> "lancopku/Graph-to-seq-comment-generation"
"THUNLP-MT/TG-Reading-List" -> "ChenChengKuan/awesome-text-generation"
"THUNLP-MT/TG-Reading-List" -> "THUNLP-AIPoet/PaperList" ["e"=1]
"THUNLP-MT/TG-Reading-List" -> "fuzhenxin/Style-Transfer-in-Text"
"THUNLP-MT/TG-Reading-List" -> "luofuli/DualRL"
"THUNLP-MT/TG-Reading-List" -> "uber-research/PPLM" ["e"=1]
"THUNLP-MT/TG-Reading-List" -> "wyu97/KENLG-Reading" ["e"=1]
"THUNLP-MT/TG-Reading-List" -> "geek-ai/Texygen"
"THUNLP-MT/TG-Reading-List" -> "asyml/texar-pytorch"
"THUNLP-MT/TG-Reading-List" -> "FranxYao/Deep-Generative-Models-for-Natural-Language-Processing"
"THUNLP-MT/TG-Reading-List" -> "atulkum/pointer_summarizer" ["e"=1]
"THUNLP-MT/TG-Reading-List" -> "THUNLP-MT/MT-Reading-List" ["e"=1]
"THUNLP-MT/TG-Reading-List" -> "lipiji/Guyu" ["e"=1]
"THUNLP-MT/TG-Reading-List" -> "yaserkl/RLSeq2Seq" ["e"=1]
"iwangjian/Paper-Reading-ConvAI" -> "THUNLP-MT/TG-Reading-List" ["e"=1]
"keitakurita/Practical_NLP_in_PyTorch" -> "google-research-datasets/paws" ["e"=1]
"dreasysnail/deconv_paragraph_represention" -> "dreasysnail/textGAN_public" ["e"=1]
"IntelLabs/nlp-architect" -> "asyml/texar" ["e"=1]
"dipta-dhar/Automatic-Question-Generator" -> "holylovenia/question-answer-generation"
"dipta-dhar/Automatic-Question-Generator" -> "indrajithi/genquest"
"dipta-dhar/Automatic-Question-Generator" -> "sumehta/question-generation"
"dipta-dhar/Automatic-Question-Generator" -> "deeppavlov/question_generation"
"dipta-dhar/Automatic-Question-Generator" -> "Maluuba/qgen-workshop"
"keon/seq2seq" -> "suragnair/seqGAN" ["e"=1]
"keon/seq2seq" -> "timbmg/Sentence-VAE" ["e"=1]
"IBM/Graph2Seq" -> "beckdaniel/acl2018_graph2seq" ["e"=1]
"IBM/Graph2Seq" -> "hugochan/RL-based-Graph2Seq-for-NQG" ["e"=1]
"IBM/Graph2Seq" -> "diegma/graph-2-text" ["e"=1]
"IBM/Graph2Seq" -> "freesunshine0316/neural-graph-to-seq-mp" ["e"=1]
"IBM/Graph2Seq" -> "lancopku/Graph-to-seq-comment-generation" ["e"=1]
"jcyk/gtos" -> "QAQ-v/HetGT"
"jcyk/gtos" -> "rikdz/GraphWriter"
"jcyk/gtos" -> "beckdaniel/acl2018_graph2seq"
"jcyk/gtos" -> "jcyk/AMR-gs"
"jcyk/gtos" -> "hugochan/RL-based-Graph2Seq-for-NQG"
"timbmg/VAE-CVAE-MNIST" -> "timbmg/Sentence-VAE" ["e"=1]
"williamFalcon/test-tube" -> "harvardnlp/pytorch-struct" ["e"=1]
"Yifan-Gao/Distractor-Generation-RACE" -> "voidful/BDG"
"Yifan-Gao/Distractor-Generation-RACE" -> "harrylclc/LTR-DG"
"gauthierdmn/question_generation" -> "seanie12/neural-question-generation"
"gauthierdmn/question_generation" -> "agusgun/qag-web"
"gauthierdmn/question_generation" -> "yanghoonkim/neural_question_generation"
"NicGian/text_VAE" -> "alexeyev/Keras-Generating-Sentences-from-a-Continuous-Space"
"NicGian/text_VAE" -> "Toni-Antonova/VAE-Text-Generation"
"ChunchuanLv/AMR_AS_GRAPH_PREDICTION" -> "Oneplus/tamr"
"ChunchuanLv/AMR_AS_GRAPH_PREDICTION" -> "sheng-z/stog"
"ChunchuanLv/AMR_AS_GRAPH_PREDICTION" -> "mdtux89/amr-eager"
"ChunchuanLv/AMR_AS_GRAPH_PREDICTION" -> "sinantie/NeuralAmr"
"jflanigan/jamr" -> "c-amr/camr"
"jflanigan/jamr" -> "sheng-z/stog"
"jflanigan/jamr" -> "amrisi/amr-guidelines"
"jflanigan/jamr" -> "sinantie/NeuralAmr"
"jflanigan/jamr" -> "freesunshine0316/neural-graph-to-seq-mp"
"jflanigan/jamr" -> "summarization/semantic_summ"
"jflanigan/jamr" -> "goodmami/penman"
"jflanigan/jamr" -> "ChunchuanLv/AMR_AS_GRAPH_PREDICTION"
"jflanigan/jamr" -> "jcyk/AMR-gs"
"jflanigan/jamr" -> "mdtux89/amr-eager"
"jflanigan/jamr" -> "IBM/transition-amr-parser"
"jflanigan/jamr" -> "bjascob/amrlib"
"jflanigan/jamr" -> "Oneplus/tamr"
"jflanigan/jamr" -> "snowblink14/smatch"
"jflanigan/jamr" -> "panx27/amr-reader"
"sheng-z/stog" -> "jcyk/AMR-gs"
"sheng-z/stog" -> "ChunchuanLv/AMR_AS_GRAPH_PREDICTION"
"sheng-z/stog" -> "goodmami/penman"
"sheng-z/stog" -> "Oneplus/tamr"
"sheng-z/stog" -> "c-amr/camr"
"sheng-z/stog" -> "jflanigan/jamr"
"sheng-z/stog" -> "amrisi/amr-guidelines"
"sheng-z/stog" -> "snowblink14/smatch"
"sheng-z/stog" -> "freesunshine0316/neural-graph-to-seq-mp"
"sheng-z/stog" -> "mdtux89/amr-evaluation"
"sheng-z/stog" -> "cfmrp/mtool"
"sheng-z/stog" -> "sinantie/NeuralAmr"
"sheng-z/stog" -> "mdtux89/amr-eager"
"sheng-z/stog" -> "RikVN/AMR"
"sheng-z/stog" -> "bjascob/amrlib"
"changwookjun/nlp-paper" -> "THUNLP-MT/TG-Reading-List" ["e"=1]
"KristiyanVachev/Question-Generation" -> "KristiyanVachev/Leaf-Question-Generation"
"KristiyanVachev/Question-Generation" -> "patil-suraj/question_generation"
"KristiyanVachev/Question-Generation" -> "ramsrigouthamg/Questgen.ai"
"KristiyanVachev/Question-Generation" -> "teacherpeterpan/Question-Generation-Paper-List"
"KristiyanVachev/Question-Generation" -> "AMontgomerie/question_generator"
"KristiyanVachev/Question-Generation" -> "bloomsburyai/question-generation"
"KristiyanVachev/Question-Generation" -> "adityasarvaiya/Automatic_Question_Generation"
"KristiyanVachev/Question-Generation" -> "dipta-dhar/Automatic-Question-Generator"
"KristiyanVachev/Question-Generation" -> "indrajithi/genquest"
"KristiyanVachev/Question-Generation" -> "Yifan-Gao/Distractor-Generation-RACE"
"KristiyanVachev/Question-Generation" -> "ujjax/question-generation"
"KristiyanVachev/Question-Generation" -> "gauthierdmn/question_generation"
"KristiyanVachev/Question-Generation" -> "xinyadu/nqg"
"KristiyanVachev/Question-Generation" -> "YuxiXie/SG-Deep-Question-Generation"
"KristiyanVachev/Question-Generation" -> "bisheng/Awesome-QG"
"yaserkl/RLSeq2Seq" -> "geek-ai/Texygen" ["e"=1]
"yaserkl/RLSeq2Seq" -> "THUNLP-MT/TG-Reading-List" ["e"=1]
"wohlert/semi-supervised-pytorch" -> "kefirski/pytorch_RVAE" ["e"=1]
"nikitakit/self-attentive-parser" -> "harvardnlp/pytorch-struct" ["e"=1]
"iamaaditya/neural-paraphrase-generation" -> "paulx3/keras_generative_pg"
"iamaaditya/neural-paraphrase-generation" -> "vsuthichai/paraphraser"
"iamaaditya/neural-paraphrase-generation" -> "leechihahchiu/DRLParaphrase"
"iamaaditya/neural-paraphrase-generation" -> "ale3otik/paraphrases-generator"
"iamaaditya/neural-paraphrase-generation" -> "miyyer/scpn"
"iamaaditya/neural-paraphrase-generation" -> "arvind385801/paraphraseGen"
"iamaaditya/neural-paraphrase-generation" -> "malllabiisc/DiPS"
"iamaaditya/neural-paraphrase-generation" -> "lancopku/WEAN" ["e"=1]
"iamaaditya/neural-paraphrase-generation" -> "HarshTrivedi/paraphrase-generation"
"iamaaditya/neural-paraphrase-generation" -> "wasiahmad/paraphrase_identification"
"iamaaditya/neural-paraphrase-generation" -> "mingdachen/syntactic-template-generation"
"vsuthichai/paraphraser" -> "iamaaditya/neural-paraphrase-generation"
"vsuthichai/paraphraser" -> "miyyer/scpn"
"vsuthichai/paraphraser" -> "Vamsi995/Paraphrase-Generator"
"vsuthichai/paraphraser" -> "PrithivirajDamodaran/Parrot_Paraphraser"
"vsuthichai/paraphraser" -> "paulx3/keras_generative_pg"
"vsuthichai/paraphraser" -> "ale3otik/paraphrases-generator"
"vsuthichai/paraphraser" -> "badripatro/PQG"
"vsuthichai/paraphraser" -> "FranxYao/dgm_latent_bow"
"vsuthichai/paraphraser" -> "HarshTrivedi/paraphrase-generation"
"vsuthichai/paraphraser" -> "jwieting/para-nmt-50m"
"vsuthichai/paraphraser" -> "ramsrigouthamg/Paraphrase-any-question-with-T5-Text-To-Text-Transfer-Transformer-"
"vsuthichai/paraphraser" -> "websymphony/paraphrasing-tool"
"vsuthichai/paraphraser" -> "wyu-du/Reinforce-Paraphrase-Generation"
"vsuthichai/paraphraser" -> "dev-chauhan/PQG-pytorch"
"vsuthichai/paraphraser" -> "google-research-datasets/paws"
"davidgolub/QuestionGeneration" -> "magic282/NQG"
"davidgolub/QuestionGeneration" -> "xinyadu/nqg"
"davidgolub/QuestionGeneration" -> "bloomsburyai/question-generation"
"harvardnlp/var-attn" -> "harvardnlp/sa-vae" ["e"=1]
"salesforce/pytorch-qrnn" -> "harvardnlp/pytorch-struct" ["e"=1]
"salesforce/matchbox" -> "harvardnlp/sa-vae" ["e"=1]
"salesforce/matchbox" -> "harvardnlp/pytorch-struct" ["e"=1]
"williamSYSU/TextGAN-PyTorch" -> "geek-ai/Texygen"
"williamSYSU/TextGAN-PyTorch" -> "suragnair/seqGAN"
"williamSYSU/TextGAN-PyTorch" -> "LantaoYu/SeqGAN"
"williamSYSU/TextGAN-PyTorch" -> "ChenChengKuan/awesome-text-generation"
"williamSYSU/TextGAN-PyTorch" -> "ZiJianZhao/SeqGAN-PyTorch"
"williamSYSU/TextGAN-PyTorch" -> "CR-Gjx/LeakGAN"
"williamSYSU/TextGAN-PyTorch" -> "THUNLP-MT/TG-Reading-List"
"williamSYSU/TextGAN-PyTorch" -> "fuzhenxin/Style-Transfer-in-Text"
"williamSYSU/TextGAN-PyTorch" -> "weilinie/RelGAN"
"williamSYSU/TextGAN-PyTorch" -> "timbmg/Sentence-VAE"
"williamSYSU/TextGAN-PyTorch" -> "uber-research/PPLM" ["e"=1]
"williamSYSU/TextGAN-PyTorch" -> "Nrgeup/SentiGAN"
"williamSYSU/TextGAN-PyTorch" -> "rikdz/GraphWriter"
"williamSYSU/TextGAN-PyTorch" -> "atulkum/pointer_summarizer" ["e"=1]
"williamSYSU/TextGAN-PyTorch" -> "lancopku/DPGAN" ["e"=1]
"GaoQ1/seqgan" -> "TobiasLee/Chinese-Hip-pop-Generation"
"luofuli/DualRL" -> "lijuncen/Sentiment-and-Style-Transfer"
"luofuli/DualRL" -> "rpryzant/delete_retrieve_generate"
"luofuli/DualRL" -> "VideoOS/VideoOS-iOS-SDK" ["e"=1]
"luofuli/DualRL" -> "xksoft/xky" ["e"=1]
"luofuli/DualRL" -> "fastnlp/style-transformer"
"luofuli/DualRL" -> "ljphilp/vue-element-super"
"luofuli/DualRL" -> "airuikun/crawler-node" ["e"=1]
"luofuli/DualRL" -> "shentianxiao/language-style-transfer"
"luofuli/DualRL" -> "luofuli/Fine-grained-Sentiment-Transfer"
"luofuli/DualRL" -> "entanmo/etm" ["e"=1]
"luofuli/DualRL" -> "mxdldev/android-fly-refreshlayout" ["e"=1]
"luofuli/DualRL" -> "ChenWu98/Point-Then-Operate"
"luofuli/DualRL" -> "neowei/base-architect" ["e"=1]
"luofuli/DualRL" -> "airuikun/react-dnd" ["e"=1]
"luofuli/DualRL" -> "fuzhenxin/Style-Transfer-in-Text"
"timbmg/Sentence-VAE" -> "kefirski/pytorch_RVAE"
"timbmg/Sentence-VAE" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow"
"timbmg/Sentence-VAE" -> "wiseodd/controlled-text-generation"
"timbmg/Sentence-VAE" -> "snakeztc/NeuralDialog-CVAE" ["e"=1]
"timbmg/Sentence-VAE" -> "jxhe/vae-lagging-encoder"
"timbmg/Sentence-VAE" -> "ChunyuanLI/Optimus"
"timbmg/Sentence-VAE" -> "rohithreddy024/VAE-Text-Generation"
"timbmg/Sentence-VAE" -> "NicGian/text_VAE"
"timbmg/Sentence-VAE" -> "geek-ai/Texygen"
"timbmg/Sentence-VAE" -> "fuzhenxin/Style-Transfer-in-Text"
"timbmg/Sentence-VAE" -> "asyml/texar"
"timbmg/Sentence-VAE" -> "ChenRocks/fast_abs_rl" ["e"=1]
"timbmg/Sentence-VAE" -> "kelvinguu/neural-editor"
"timbmg/Sentence-VAE" -> "jiacheng-xu/vmf_vae_nlp"
"timbmg/Sentence-VAE" -> "sodawater/T-CVAE"
"rohithreddy024/VAE-Text-Generation" -> "iconix/pytorch-text-vae"
"ElizaLo/NLP-Natural-Language-Processing" -> "wasiahmad/paraphrase_identification" ["e"=1]
"yzhangcs/parser" -> "harvardnlp/pytorch-struct" ["e"=1]
"nesl/nlp_adversarial_examples" -> "miyyer/scpn" ["e"=1]
"lancopku/Graph-to-seq-comment-generation" -> "Walleclipse/AGPC"
"lancopku/Graph-to-seq-comment-generation" -> "rikdz/GraphWriter"
"lancopku/Graph-to-seq-comment-generation" -> "THUNLP-MT/TG-Reading-List"
"lancopku/Graph-to-seq-comment-generation" -> "hugochan/RL-based-Graph2Seq-for-NQG"
"lancopku/Graph-to-seq-comment-generation" -> "seanie12/neural-question-generation"
"indrajithi/genquest" -> "deeppavlov/question_generation"
"indrajithi/genquest" -> "dipta-dhar/Automatic-Question-Generator"
"indrajithi/genquest" -> "sumehta/question-generation"
"indrajithi/genquest" -> "indrajithi/question_generation"
"indrajithi/genquest" -> "bloomsburyai/question-generation"
"indrajithi/genquest" -> "magic282/NQG"
"indrajithi/genquest" -> "atbaker/wikipedia-question-generator"
"indrajithi/genquest" -> "xinyadu/nqg"
"indrajithi/genquest" -> "adityasarvaiya/Automatic_Question_Generation"
"indrajithi/genquest" -> "holylovenia/question-answer-generation"
"indrajithi/genquest" -> "Konigari/Automatic-Question-Generation-Using-Relative-Pronuons-and-Adverbs"
"soskek/bookcorpus" -> "google-research-datasets/paws" ["e"=1]
"soskek/bookcorpus" -> "vitutorial/VITutorial" ["e"=1]
"graykode/xlnet-Pytorch" -> "asyml/texar-pytorch" ["e"=1]
"schelotto/Wasserstein-AutoEncoders" -> "jakezhaojb/ARAE" ["e"=1]
"geek-ai/Texygen" -> "CR-Gjx/LeakGAN"
"geek-ai/Texygen" -> "LantaoYu/SeqGAN"
"geek-ai/Texygen" -> "asyml/texar"
"geek-ai/Texygen" -> "williamSYSU/TextGAN-PyTorch"
"geek-ai/Texygen" -> "ChenChengKuan/awesome-text-generation"
"geek-ai/Texygen" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"geek-ai/Texygen" -> "ofirnachum/sequence_gan"
"geek-ai/Texygen" -> "jakezhaojb/ARAE"
"geek-ai/Texygen" -> "yaserkl/RLSeq2Seq" ["e"=1]
"geek-ai/Texygen" -> "THUNLP-MT/TG-Reading-List"
"geek-ai/Texygen" -> "fuzhenxin/Style-Transfer-in-Text"
"geek-ai/Texygen" -> "suragnair/seqGAN"
"geek-ai/Texygen" -> "shentianxiao/language-style-transfer"
"geek-ai/Texygen" -> "Maluuba/nlg-eval" ["e"=1]
"geek-ai/Texygen" -> "abisee/pointer-generator" ["e"=1]
"allenai/acl2018-semantic-parsing-tutorial" -> "vitutorial/VITutorial" ["e"=1]
"harvardnlp/neural-template-gen" -> "kelvinguu/neural-editor" ["e"=1]
"harvardnlp/neural-template-gen" -> "jxhe/vae-lagging-encoder" ["e"=1]
"ZJULearning/ReDR" -> "Yifan-Gao/conversational-QG"
"YueDongCS/EditNTS" -> "subramanyamdvss/UnsupNTS"
"YueDongCS/EditNTS" -> "ddhruvkr/Edit-Unsup-TS"
"FranxYao/Deep-Generative-Models-for-Natural-Language-Processing" -> "FranxYao/dgm_latent_bow"
"FranxYao/Deep-Generative-Models-for-Natural-Language-Processing" -> "harvardnlp/pytorch-struct"
"FranxYao/Deep-Generative-Models-for-Natural-Language-Processing" -> "FranxYao/Gumbel-CRF"
"FranxYao/Deep-Generative-Models-for-Natural-Language-Processing" -> "fangleai/Implicit-LVM"
"FranxYao/Deep-Generative-Models-for-Natural-Language-Processing" -> "THUNLP-MT/TG-Reading-List"
"FranxYao/Deep-Generative-Models-for-Natural-Language-Processing" -> "FranxYao/Distributional-Generalization-in-Natural-Language-Processing"
"FranxYao/Deep-Generative-Models-for-Natural-Language-Processing" -> "vitutorial/VITutorial"
"kelvinguu/neural-editor" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"kelvinguu/neural-editor" -> "shentianxiao/language-style-transfer"
"kelvinguu/neural-editor" -> "snakeztc/NeuralDialog-CVAE" ["e"=1]
"kelvinguu/neural-editor" -> "jiacheng-xu/vmf_vae_nlp"
"kelvinguu/neural-editor" -> "harvardnlp/neural-template-gen" ["e"=1]
"kelvinguu/neural-editor" -> "NingMiao/CGMH"
"kelvinguu/neural-editor" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow"
"kelvinguu/neural-editor" -> "zihangdai/mos" ["e"=1]
"kelvinguu/neural-editor" -> "julianser/hed-dlg-truncated" ["e"=1]
"kelvinguu/neural-editor" -> "timbmg/Sentence-VAE"
"deep-spin/entmax" -> "harvardnlp/pytorch-struct" ["e"=1]
"rikdz/GraphWriter" -> "THUNLP-MT/TG-Reading-List"
"rikdz/GraphWriter" -> "diegma/graph-2-text"
"rikdz/GraphWriter" -> "lancopku/Graph-to-seq-comment-generation"
"rikdz/GraphWriter" -> "jcyk/gtos"
"rikdz/GraphWriter" -> "freesunshine0316/neural-graph-to-seq-mp"
"rikdz/GraphWriter" -> "UKPLab/kg2text"
"rikdz/GraphWriter" -> "atulkum/pointer_summarizer" ["e"=1]
"rikdz/GraphWriter" -> "UKPLab/plms-graph2text" ["e"=1]
"rikdz/GraphWriter" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"rikdz/GraphWriter" -> "wenhuchen/KGPT" ["e"=1]
"rikdz/GraphWriter" -> "AmitMY/chimera"
"rikdz/GraphWriter" -> "yeliu918/KG-BART" ["e"=1]
"rikdz/GraphWriter" -> "uber-research/PPLM" ["e"=1]
"rikdz/GraphWriter" -> "INK-USC/KagNet" ["e"=1]
"rikdz/GraphWriter" -> "yicheng-w/CommonSenseMultiHopQA" ["e"=1]
"bisheng/Awesome-QG" -> "teacherpeterpan/Question-Generation-Paper-List"
"bisheng/Awesome-QG" -> "seanie12/neural-question-generation"
"bisheng/Awesome-QG" -> "WING-NUS/SG-Deep-Question-Generation"
"bisheng/Awesome-QG" -> "Yifan-Gao/conversational-QG"
"bisheng/Awesome-QG" -> "magic282/NQG"
"bisheng/Awesome-QG" -> "ZhangShiyue/QGforQA"
"bisheng/Awesome-QG" -> "YuxiXie/SG-Deep-Question-Generation"
"bisheng/Awesome-QG" -> "qjzhzw/Open_QG"
"bisheng/Awesome-QG" -> "liyuanfang/mhqg"
"bisheng/Awesome-QG" -> "BangLiu/ACS-QG"
"bisheng/Awesome-QG" -> "BangLiu/QG"
"bisheng/Awesome-QG" -> "YuxiXie/RL-for-Question-Generation"
"bisheng/Awesome-QG" -> "PrekshaNema25/RefNet-QG"
"THUNLP-AIPoet/PaperList" -> "THUNLP-MT/TG-Reading-List" ["e"=1]
"EagleW/PaperRobot" -> "rikdz/GraphWriter"
"EagleW/PaperRobot" -> "baidu/knowledge-driven-dialogue" ["e"=1]
"EagleW/PaperRobot" -> "EagleW/ReviewRobot"
"CR-Gjx/LeakGAN" -> "LantaoYu/SeqGAN"
"CR-Gjx/LeakGAN" -> "geek-ai/Texygen"
"CR-Gjx/LeakGAN" -> "ofirnachum/sequence_gan"
"CR-Gjx/LeakGAN" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"CR-Gjx/LeakGAN" -> "ChenChengKuan/awesome-text-generation"
"CR-Gjx/LeakGAN" -> "codekansas/seqgan-text-tensorflow"
"CR-Gjx/LeakGAN" -> "lancopku/DPGAN" ["e"=1]
"CR-Gjx/LeakGAN" -> "liuyuemaicha/Adversarial-Learning-for-Neural-Dialogue-Generation-in-Tensorflow" ["e"=1]
"CR-Gjx/LeakGAN" -> "williamSYSU/TextGAN-PyTorch"
"CR-Gjx/LeakGAN" -> "AustinCStone/TextGAN"
"CR-Gjx/LeakGAN" -> "suragnair/seqGAN"
"CR-Gjx/LeakGAN" -> "ChenChengKuan/SeqGAN_tensorflow"
"CR-Gjx/LeakGAN" -> "jakezhaojb/ARAE"
"CR-Gjx/LeakGAN" -> "asyml/texar"
"CR-Gjx/LeakGAN" -> "amirbar/rnn.wgan"
"beckdaniel/acl2018_graph2seq" -> "freesunshine0316/neural-graph-to-seq-mp"
"BLLIP/bllip-parser" -> "dmcc/PyStanfordDependencies"
"BLLIP/bllip-parser" -> "c-amr/camr"
"iesl/diora" -> "FilippoC/diffdp" ["e"=1]
"mingdachen/disentangle-semantics-syntax" -> "tom-pelsmaeker/deep-generative-lm"
"harvardnlp/urnng" -> "mingdachen/disentangle-semantics-syntax" ["e"=1]
"cfmrp/tutorial" -> "ChunchuanLv/AMR_AS_GRAPH_PREDICTION"
"cfmrp/tutorial" -> "cfmrp/mtool"
"cfmrp/tutorial" -> "delph-in/pydelphin"
"daib13/TwoStageVAE" -> "jxhe/vae-lagging-encoder" ["e"=1]
"Schlumberger/joint-vae" -> "jxhe/vae-lagging-encoder" ["e"=1]
"jfilter/clean-text" -> "PrithivirajDamodaran/Styleformer" ["e"=1]
"asyml/texar-pytorch" -> "asyml/texar"
"asyml/texar-pytorch" -> "ChenChengKuan/awesome-text-generation"
"asyml/texar-pytorch" -> "harvardnlp/pytorch-struct"
"asyml/texar-pytorch" -> "THUNLP-MT/TG-Reading-List"
"asyml/texar-pytorch" -> "huggingface/naacl_transfer_learning_tutorial" ["e"=1]
"asyml/texar-pytorch" -> "geek-ai/Texygen"
"asyml/texar-pytorch" -> "neulab/compare-mt" ["e"=1]
"asyml/texar-pytorch" -> "MaximumEntropy/Seq2Seq-PyTorch" ["e"=1]
"asyml/texar-pytorch" -> "graykode/xlnet-Pytorch" ["e"=1]
"asyml/texar-pytorch" -> "EdinburghNLP/XSum" ["e"=1]
"asyml/texar-pytorch" -> "ChenRocks/fast_abs_rl" ["e"=1]
"asyml/texar-pytorch" -> "GBLin5566/toward-controlled-generation-of-text-pytorch"
"asyml/texar-pytorch" -> "wiseodd/controlled-text-generation"
"asyml/texar-pytorch" -> "timbmg/Sentence-VAE"
"asyml/texar-pytorch" -> "XuezheMax/NeuroNLP2" ["e"=1]
"jxhe/vae-lagging-encoder" -> "harvardnlp/sa-vae"
"jxhe/vae-lagging-encoder" -> "jiacheng-xu/vmf_vae_nlp"
"jxhe/vae-lagging-encoder" -> "bohanli/vae-pretraining-encoder"
"jxhe/vae-lagging-encoder" -> "fangleai/Implicit-LVM"
"jxhe/vae-lagging-encoder" -> "jxhe/struct-learning-with-flow" ["e"=1]
"jxhe/vae-lagging-encoder" -> "sajadn/posterior-collapse-list"
"jxhe/vae-lagging-encoder" -> "pclucas14/GansFallingShort"
"jxhe/vae-lagging-encoder" -> "timbmg/Sentence-VAE"
"jxhe/vae-lagging-encoder" -> "rtqichen/beta-tcvae" ["e"=1]
"jxhe/vae-lagging-encoder" -> "guxd/DialogWAE" ["e"=1]
"jxhe/vae-lagging-encoder" -> "wiseodd/controlled-text-generation"
"holylovenia/question-answer-generation" -> "agusgun/qag-web"
"holylovenia/question-answer-generation" -> "dipta-dhar/Automatic-Question-Generator"
"shrimai/Style-Transfer-Through-Back-Translation" -> "lijuncen/Sentiment-and-Style-Transfer"
"shrimai/Style-Transfer-Through-Back-Translation" -> "fuzhenxin/text_style_transfer"
"shrimai/Style-Transfer-Through-Back-Translation" -> "shentianxiao/language-style-transfer"
"shrimai/Style-Transfer-Through-Back-Translation" -> "lancopku/Unpaired-Sentiment-Translation" ["e"=1]
"shrimai/Style-Transfer-Through-Back-Translation" -> "harsh19/Shakespearizing-Modern-English"
"shrimai/Style-Transfer-Through-Back-Translation" -> "vineetjohn/linguistic-style-transfer"
"shrimai/Style-Transfer-Through-Back-Translation" -> "parajain/uctf"
"ChenChengKuan/awesome-text-generation" -> "wiseodd/controlled-text-generation"
"ChenChengKuan/awesome-text-generation" -> "THUNLP-MT/TG-Reading-List"
"ChenChengKuan/awesome-text-generation" -> "geek-ai/Texygen"
"ChenChengKuan/awesome-text-generation" -> "asyml/texar-pytorch"
"ChenChengKuan/awesome-text-generation" -> "accelerated-text/awesome-nlg" ["e"=1]
"ChenChengKuan/awesome-text-generation" -> "williamSYSU/TextGAN-PyTorch"
"ChenChengKuan/awesome-text-generation" -> "asyml/texar"
"ChenChengKuan/awesome-text-generation" -> "CR-Gjx/LeakGAN"
"ChenChengKuan/awesome-text-generation" -> "timbmg/Sentence-VAE"
"ChenChengKuan/awesome-text-generation" -> "fuzhenxin/Style-Transfer-in-Text"
"ChenChengKuan/awesome-text-generation" -> "weilinie/RelGAN"
"ChenChengKuan/awesome-text-generation" -> "salesforce/ctrl" ["e"=1]
"ChenChengKuan/awesome-text-generation" -> "CLUEbenchmark/CLGE" ["e"=1]
"wiseodd/controlled-text-generation" -> "GBLin5566/toward-controlled-generation-of-text-pytorch"
"wiseodd/controlled-text-generation" -> "lijuncen/Sentiment-and-Style-Transfer"
"wiseodd/controlled-text-generation" -> "ChenChengKuan/awesome-text-generation"
"wiseodd/controlled-text-generation" -> "timbmg/Sentence-VAE"
"wiseodd/controlled-text-generation" -> "shentianxiao/language-style-transfer"
"wiseodd/controlled-text-generation" -> "snakeztc/NeuralDialog-LAED" ["e"=1]
"wiseodd/controlled-text-generation" -> "jakezhaojb/ARAE"
"wiseodd/controlled-text-generation" -> "kefirski/pytorch_RVAE"
"wiseodd/controlled-text-generation" -> "ssemeniuta/textvae"
"wiseodd/controlled-text-generation" -> "fuzhenxin/Personal-Emotional-Stylized-Dialog" ["e"=1]
"wiseodd/controlled-text-generation" -> "jxhe/vae-lagging-encoder"
"wiseodd/controlled-text-generation" -> "Nrgeup/controllable-text-attribute-transfer"
"tolstikhin/wae" -> "jakezhaojb/ARAE" ["e"=1]
"baoy-nlp/DSS-VAE" -> "mingdachen/disentangle-semantics-syntax"
"cindyxinyiwang/deep-latent-sequence-model" -> "XiaoyuanYi/StyIns"
"cindyxinyiwang/deep-latent-sequence-model" -> "martiansideofthemoon/style-transfer-paraphrase"
"miyyer/scpn" -> "ale3otik/paraphrases-generator"
"miyyer/scpn" -> "mingdachen/syntactic-template-generation"
"miyyer/scpn" -> "iamaaditya/neural-paraphrase-generation"
"miyyer/scpn" -> "HarshTrivedi/paraphrase-generation"
"miyyer/scpn" -> "jwieting/para-nmt-50m"
"miyyer/scpn" -> "vsuthichai/paraphraser"
"miyyer/scpn" -> "marcotcr/sears" ["e"=1]
"miyyer/scpn" -> "malllabiisc/SGCP"
"miyyer/scpn" -> "pmichel31415/teapot-nlp" ["e"=1]
"miyyer/scpn" -> "tagoyal/sow-reap-paraphrasing"
"miyyer/scpn" -> "paulx3/keras_generative_pg"
"vineetjohn/linguistic-style-transfer" -> "h3lio5/linguistic-style-transfer-pytorch"
"vineetjohn/linguistic-style-transfer" -> "fuzhenxin/text_style_transfer"
"vineetjohn/linguistic-style-transfer" -> "Nrgeup/controllable-text-attribute-transfer"
"vineetjohn/linguistic-style-transfer" -> "shentianxiao/language-style-transfer"
"vineetjohn/linguistic-style-transfer" -> "agaralabs/transformer-drg-style-transfer"
"vineetjohn/linguistic-style-transfer" -> "rpryzant/delete_retrieve_generate"
"vineetjohn/linguistic-style-transfer" -> "lijuncen/Sentiment-and-Style-Transfer"
"vineetjohn/linguistic-style-transfer" -> "VAShibaev/text_style_transfer"
"vineetjohn/linguistic-style-transfer" -> "baoy-nlp/DSS-VAE"
"vineetjohn/linguistic-style-transfer" -> "fastnlp/style-transformer"
"vineetjohn/linguistic-style-transfer" -> "shrimai/Style-Transfer-Through-Back-Translation"
"Maluuba/qgen-workshop" -> "GajjarMihir/Topic-Based-Question-Generation"
"malllabiisc/DiPS" -> "arvind385801/paraphraseGen"
"FranxYao/dgm_latent_bow" -> "wyu-du/Reinforce-Paraphrase-Generation"
"FranxYao/dgm_latent_bow" -> "dev-chauhan/PQG-pytorch"
"FranxYao/dgm_latent_bow" -> "FranxYao/Deep-Generative-Models-for-Natural-Language-Processing"
"FranxYao/dgm_latent_bow" -> "arvind385801/paraphraseGen"
"FranxYao/dgm_latent_bow" -> "malllabiisc/DiPS"
"FranxYao/dgm_latent_bow" -> "malllabiisc/SGCP"
"harvardnlp/sa-vae" -> "jxhe/vae-lagging-encoder"
"harvardnlp/sa-vae" -> "kefirski/contiguous-succotash"
"harvardnlp/sa-vae" -> "jiacheng-xu/vmf_vae_nlp"
"ctr4si/A-Hierarchical-Latent-Structure-for-Variational-Conversation-Modeling" -> "fangleai/Implicit-LVM" ["e"=1]
"qjzhzw/Open_QG" -> "yanghoonkim/NQG_ASs2s"
"nicola-decao/s-vae-tf" -> "jiacheng-xu/vmf_vae_nlp" ["e"=1]
"hadyelsahar/Zeroshot-QuestionGeneration" -> "liyuanfang/mhqg"
"hadyelsahar/Zeroshot-QuestionGeneration" -> "wavewangyue/NLPCC-MH"
"RikVN/AMR" -> "xdqkid/S2S-AMR-Parser"
"RikVN/AMR" -> "jcyk/AMR-gs"
"RikVN/AMR" -> "goodmami/penman"
"adityasarvaiya/Automatic_Question_Generation" -> "amyxzhang/wikum"
"adityasarvaiya/Automatic_Question_Generation" -> "indrajithi/genquest"
"adityasarvaiya/Automatic_Question_Generation" -> "bloomsburyai/question-generation"
"adityasarvaiya/Automatic_Question_Generation" -> "sumehta/question-generation"
"bloomsburyai/question-generation" -> "deeppavlov/question_generation"
"bloomsburyai/question-generation" -> "seanie12/neural-question-generation"
"bloomsburyai/question-generation" -> "magic282/NQG"
"bloomsburyai/question-generation" -> "xinyadu/nqg"
"bloomsburyai/question-generation" -> "indrajithi/genquest"
"bloomsburyai/question-generation" -> "yanghoonkim/NQG_ASs2s"
"bloomsburyai/question-generation" -> "ZhangShiyue/QGforQA"
"bloomsburyai/question-generation" -> "davidgolub/QuestionGeneration"
"bloomsburyai/question-generation" -> "PrekshaNema25/RefNet-QG"
"bloomsburyai/question-generation" -> "gauthierdmn/question_generation"
"bloomsburyai/question-generation" -> "teacherpeterpan/Question-Generation-Paper-List"
"bloomsburyai/question-generation" -> "ujjax/question-generation"
"bloomsburyai/question-generation" -> "adityasarvaiya/Automatic_Question_Generation"
"bloomsburyai/question-generation" -> "freesunshine0316/MPQG"
"bloomsburyai/question-generation" -> "yanghoonkim/neural_question_generation"
"magic282/NQG" -> "seanie12/neural-question-generation"
"magic282/NQG" -> "yanghoonkim/NQG_ASs2s"
"magic282/NQG" -> "xinyadu/nqg"
"magic282/NQG" -> "yanghoonkim/neural_question_generation"
"magic282/NQG" -> "freesunshine0316/MPQG"
"magic282/NQG" -> "ZhangShiyue/QGforQA"
"magic282/NQG" -> "bloomsburyai/question-generation"
"magic282/NQG" -> "davidgolub/QuestionGeneration"
"magic282/NQG" -> "qjzhzw/Open_QG"
"magic282/NQG" -> "bisheng/Awesome-QG"
"magic282/NQG" -> "PrekshaNema25/RefNet-QG"
"cfmrp/mtool" -> "danielhers/tupa"
"cfmrp/mtool" -> "huji-nlp/ucca"
"cfmrp/mtool" -> "janmbuys/DeepDeepParser"
"cfmrp/mtool" -> "longxudou/HIT-SCIR-CoNLL2019"
"seanie12/neural-question-generation" -> "yanghoonkim/NQG_ASs2s"
"seanie12/neural-question-generation" -> "magic282/NQG"
"seanie12/neural-question-generation" -> "xinyadu/nqg"
"seanie12/neural-question-generation" -> "WING-NUS/SG-Deep-Question-Generation"
"seanie12/neural-question-generation" -> "hugochan/RL-based-Graph2Seq-for-NQG"
"seanie12/neural-question-generation" -> "PrekshaNema25/RefNet-QG"
"seanie12/neural-question-generation" -> "ZhangShiyue/QGforQA"
"seanie12/neural-question-generation" -> "yanghoonkim/neural_question_generation"
"seanie12/neural-question-generation" -> "bloomsburyai/question-generation"
"seanie12/neural-question-generation" -> "zichaow/QG-Net"
"seanie12/neural-question-generation" -> "gauthierdmn/question_generation"
"seanie12/neural-question-generation" -> "bisheng/Awesome-QG"
"seanie12/neural-question-generation" -> "PrekshaNema25/Answerability-Metric"
"seanie12/neural-question-generation" -> "Yifan-Gao/conversational-QG"
"seanie12/neural-question-generation" -> "teacherpeterpan/Question-Generation-Paper-List"
"shaohua0116/VAE-Tensorflow" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" ["e"=1]
"Yifan-Gao/conversational-QG" -> "ZJULearning/ReDR"
"Yifan-Gao/conversational-QG" -> "searchableai/ChainCQG"
"liyuanfang/mhqg" -> "hugochan/Graph2Seq-for-KGQG"
"liyuanfang/mhqg" -> "hadyelsahar/Zeroshot-QuestionGeneration"
"fuzhenxin/textstyletransferdata" -> "passeul/style-transfer-model-evaluation"
"fuzhenxin/textstyletransferdata" -> "fuzhenxin/text_style_transfer"
"haofuml/cyclical_annealing" -> "zheng-yanan/techniques-for-kl-vanishing"
"haofuml/cyclical_annealing" -> "harvardnlp/sa-vae"
"raosudha89/GYAFC-corpus" -> "lijuncen/Sentiment-and-Style-Transfer"
"raosudha89/GYAFC-corpus" -> "jimth001/formality_emnlp19" ["e"=1]
"raosudha89/GYAFC-corpus" -> "lvyiwei1/StylePTB"
"raosudha89/GYAFC-corpus" -> "fuzhenxin/textstyletransferdata"
"raosudha89/GYAFC-corpus" -> "cookielee77/DAST"
"feralvam/easse" -> "chaojiang06/wiki-auto"
"feralvam/easse" -> "facebookresearch/access"
"feralvam/easse" -> "cocoxu/simplification"
"feralvam/easse" -> "facebookresearch/asset"
"feralvam/easse" -> "facebookresearch/muss"
"feralvam/easse" -> "senisioi/NeuralTextSimplification"
"feralvam/easse" -> "jantrienes/text-simplification-datasets"
"feralvam/easse" -> "Sanqiang/text_simplification"
"feralvam/easse" -> "ghpaetzold/massalign"
"feralvam/easse" -> "qiang2100/BERT-LS"
"feralvam/easse" -> "subramanyamdvss/UnsupNTS"
"feralvam/easse" -> "XingxingZhang/dress"
"malllabiisc/WordGCN" -> "jcyk/gtos" ["e"=1]
"gsh199449/productqa" -> "WHUIR/RAGE"
"Nrgeup/controllable-text-attribute-transfer" -> "agaralabs/transformer-drg-style-transfer"
"Nrgeup/controllable-text-attribute-transfer" -> "cookielee77/DAST"
"Nrgeup/controllable-text-attribute-transfer" -> "vineetjohn/linguistic-style-transfer"
"Nrgeup/controllable-text-attribute-transfer" -> "ChenWu98/Point-Then-Operate"
"Nrgeup/controllable-text-attribute-transfer" -> "lijuncen/Sentiment-and-Style-Transfer"
"Nrgeup/controllable-text-attribute-transfer" -> "h3lio5/linguistic-style-transfer-pytorch"
"Nrgeup/controllable-text-attribute-transfer" -> "fuzhenxin/textstyletransferdata"
"yanghoonkim/neural_question_generation" -> "yanghoonkim/NQG_ASs2s"
"yanghoonkim/neural_question_generation" -> "magic282/NQG"
"shentianxiao/text-autoencoders" -> "Nrgeup/controllable-text-attribute-transfer"
"lijuncen/Sentiment-and-Style-Transfer" -> "rpryzant/delete_retrieve_generate"
"lijuncen/Sentiment-and-Style-Transfer" -> "shentianxiao/language-style-transfer"
"lijuncen/Sentiment-and-Style-Transfer" -> "shrimai/Style-Transfer-Through-Back-Translation"
"lijuncen/Sentiment-and-Style-Transfer" -> "lancopku/Unpaired-Sentiment-Translation" ["e"=1]
"lijuncen/Sentiment-and-Style-Transfer" -> "agaralabs/transformer-drg-style-transfer"
"lijuncen/Sentiment-and-Style-Transfer" -> "raosudha89/GYAFC-corpus"
"lijuncen/Sentiment-and-Style-Transfer" -> "Nrgeup/controllable-text-attribute-transfer"
"lijuncen/Sentiment-and-Style-Transfer" -> "VAShibaev/text_style_transfer"
"lijuncen/Sentiment-and-Style-Transfer" -> "luofuli/DualRL"
"lijuncen/Sentiment-and-Style-Transfer" -> "fastnlp/style-transformer"
"lijuncen/Sentiment-and-Style-Transfer" -> "fuzhenxin/Style-Transfer-in-Text"
"lijuncen/Sentiment-and-Style-Transfer" -> "wiseodd/controlled-text-generation"
"lijuncen/Sentiment-and-Style-Transfer" -> "fuzhenxin/text_style_transfer"
"lijuncen/Sentiment-and-Style-Transfer" -> "vineetjohn/linguistic-style-transfer"
"lijuncen/Sentiment-and-Style-Transfer" -> "fuzhenxin/textstyletransferdata"
"facebookresearch/MultipleAttributeTextRewriting" -> "FranxYao/pivot_analysis"
"nsaphra/AMRICA" -> "nschneid/amr-hackathon"
"pfnet-research/contextual_augmentation" -> "malllabiisc/DiPS" ["e"=1]
"wavewangyue/NLPCC-MH" -> "hadyelsahar/Zeroshot-QuestionGeneration"
"freesunshine0316/neural-graph-to-seq-mp" -> "sinantie/NeuralAmr"
"freesunshine0316/neural-graph-to-seq-mp" -> "beckdaniel/acl2018_graph2seq"
"freesunshine0316/neural-graph-to-seq-mp" -> "diegma/graph-2-text"
"freesunshine0316/neural-graph-to-seq-mp" -> "freesunshine0316/semantic-nmt"
"freesunshine0316/neural-graph-to-seq-mp" -> "sheng-z/stog"
"freesunshine0316/neural-graph-to-seq-mp" -> "jflanigan/jamr"
"freesunshine0316/neural-graph-to-seq-mp" -> "ChunchuanLv/AMR_AS_GRAPH_PREDICTION"
"freesunshine0316/neural-graph-to-seq-mp" -> "Amazing-J/structural-transformer"
"freesunshine0316/neural-graph-to-seq-mp" -> "freesunshine0316/nary-grn" ["e"=1]
"freesunshine0316/neural-graph-to-seq-mp" -> "mdtux89/OpenNMT-py-AMR-to-text"
"ChenChengKuan/SeqGAN_tensorflow" -> "TobiasLee/SeqGAN_Poem"
"ChenChengKuan/SeqGAN_tensorflow" -> "codekansas/seqgan-text-tensorflow"
"ChenChengKuan/SeqGAN_tensorflow" -> "GaoQ1/seqgan"
"ChenChengKuan/SeqGAN_tensorflow" -> "TobiasLee/Chinese-Hip-pop-Generation"
"ChenChengKuan/SeqGAN_tensorflow" -> "dreasysnail/textGAN_public"
"TobiasLee/SeqGAN_Poem" -> "ChenChengKuan/SeqGAN_tensorflow"
"tyliupku/ChineseQG" -> "qjzhzw/Open_QG"
"martiansideofthemoon/squash-generation" -> "Yifan-Gao/conversational-QG"
"martiansideofthemoon/squash-generation" -> "martiansideofthemoon/squash-website"
"fuzhenxin/text_style_transfer" -> "vineetjohn/linguistic-style-transfer"
"fuzhenxin/text_style_transfer" -> "fuzhenxin/textstyletransferdata"
"fuzhenxin/text_style_transfer" -> "shrimai/Style-Transfer-Through-Back-Translation"
"diegma/graph-2-text" -> "AmitMY/chimera"
"diegma/graph-2-text" -> "freesunshine0316/neural-graph-to-seq-mp"
"diegma/graph-2-text" -> "zhaochaocs/DualEnc"
"diegma/graph-2-text" -> "rikdz/GraphWriter"
"diegma/graph-2-text" -> "mdtux89/OpenNMT-py-AMR-to-text"
"diegma/graph-2-text" -> "ThiagoCF05/webnlg" ["e"=1]
"diegma/graph-2-text" -> "bastings/neuralmonkey"
"diegma/graph-2-text" -> "UKPLab/kg2text"
"NingMiao/CGMH" -> "dreasysnail/POINTER"
"NingMiao/CGMH" -> "tagoyal/sow-reap-paraphrasing"
"Nrgeup/SentiGAN" -> "Nrgeup/EasyNLP"
"Nrgeup/SentiGAN" -> "Nrgeup/funny_tool"
"Nrgeup/SentiGAN" -> "Nrgeup/controllable-text-attribute-transfer"
"ablodge/amr-utils" -> "ablodge/leamr"
"freesunshine0316/MPQG" -> "BangLiu/QG"
"freesunshine0316/MPQG" -> "yanghoonkim/NQG_ASs2s"
"eliorsulem/SAMSA" -> "eliorsulem/simplification-acl2018"
"alexeyev/Keras-Generating-Sentences-from-a-Continuous-Space" -> "NicGian/text_VAE"
"dev-chauhan/PQG-pytorch" -> "wyu-du/Reinforce-Paraphrase-Generation"
"dev-chauhan/PQG-pytorch" -> "arvind385801/paraphraseGen"
"GBLin5566/toward-controlled-generation-of-text-pytorch" -> "wiseodd/controlled-text-generation"
"GBLin5566/toward-controlled-generation-of-text-pytorch" -> "DSKSD/Controlled_Text_Generation"
"mdtux89/OpenNMT-py-AMR-to-text" -> "sinantie/NeuralAmr"
"rpryzant/delete_retrieve_generate" -> "lijuncen/Sentiment-and-Style-Transfer"
"rpryzant/delete_retrieve_generate" -> "agaralabs/transformer-drg-style-transfer"
"rpryzant/delete_retrieve_generate" -> "luofuli/DualRL"
"rpryzant/delete_retrieve_generate" -> "passeul/style-transfer-model-evaluation"
"rpryzant/delete_retrieve_generate" -> "vineetjohn/linguistic-style-transfer"
"rpryzant/delete_retrieve_generate" -> "fastnlp/style-transformer"
"rpryzant/delete_retrieve_generate" -> "lvyiwei1/StylePTB"
"rpryzant/delete_retrieve_generate" -> "tag-and-generate/tagger-generator" ["e"=1]
"sodawater/T-CVAE" -> "fangleai/TransformerCVAE"
"sodawater/T-CVAE" -> "zlinao/Variational-Transformer" ["e"=1]
"leuchine/S-LSTM" -> "freesunshine0316/neural-graph-to-seq-mp"
"jwieting/para-nmt-50m" -> "miyyer/scpn"
"mingdachen/syntactic-template-generation" -> "ale3otik/paraphrases-generator"
"mingdachen/syntactic-template-generation" -> "miyyer/scpn"
"mingdachen/syntactic-template-generation" -> "mingdachen/disentangle-semantics-syntax"
"subramanyamdvss/UnsupNTS" -> "HanGuo97/MultitaskSimplification"
"Sanqiang/text_simplification" -> "senisioi/NeuralTextSimplification"
"Sanqiang/text_simplification" -> "eliorsulem/simplification-acl2018"
"Sanqiang/text_simplification" -> "subramanyamdvss/UnsupNTS"
"Sanqiang/text_simplification" -> "XingxingZhang/dress"
"Sanqiang/text_simplification" -> "chaojiang06/wiki-auto"
"iconix/pytorch-text-vae" -> "rohithreddy024/VAE-Text-Generation"
"leechihahchiu/DRLParaphrase" -> "ale3otik/paraphrases-generator"
"AmitMY/chimera" -> "diegma/graph-2-text"
"paulx3/keras_generative_pg" -> "ale3otik/paraphrases-generator"
"paulx3/keras_generative_pg" -> "iamaaditya/neural-paraphrase-generation"
"paulx3/keras_generative_pg" -> "HarshTrivedi/paraphrase-generation"
"harrylclc/LTR-DG" -> "DRSY/DGen"
"eliorsulem/simplification-acl2018" -> "eliorsulem/SAMSA"
"yanghoonkim/NQG_ASs2s" -> "yanghoonkim/neural_question_generation"
"yanghoonkim/NQG_ASs2s" -> "seanie12/neural-question-generation"
"yanghoonkim/NQG_ASs2s" -> "freesunshine0316/MPQG"
"yanghoonkim/NQG_ASs2s" -> "magic282/NQG"
"yanghoonkim/NQG_ASs2s" -> "BangLiu/QG"
"Nrgeup/EasyNLP" -> "Nrgeup/funny_tool"
"arvind385801/paraphraseGen" -> "ale3otik/paraphrases-generator"
"ale3otik/paraphrases-generator" -> "arvind385801/paraphraseGen"
"ale3otik/paraphrases-generator" -> "leechihahchiu/DRLParaphrase"
"ale3otik/paraphrases-generator" -> "mingdachen/syntactic-template-generation"
"BangLiu/QG" -> "freesunshine0316/MPQG"
"BangLiu/QG" -> "yanghoonkim/NQG_ASs2s"
"JohnSnowLabs/nlu" -> "PrithivirajDamodaran/Gramformer" ["e"=1]
"seanie12/Info-HCVAE" -> "seanie12/neural-question-generation"
"seanie12/Info-HCVAE" -> "ZhangShiyue/QGforQA"
"seanie12/Info-HCVAE" -> "algolet/question_generation"
"seanie12/Info-HCVAE" -> "awslabs/unsupervised-qa"
"martiansideofthemoon/style-transfer-paraphrase" -> "cindyxinyiwang/deep-latent-sequence-model"
"martiansideofthemoon/style-transfer-paraphrase" -> "thunlp/StyleAttack" ["e"=1]
"martiansideofthemoon/style-transfer-paraphrase" -> "lvyiwei1/StylePTB"
"martiansideofthemoon/style-transfer-paraphrase" -> "zhijing-jin/Text_Style_Transfer_Survey"
"martiansideofthemoon/style-transfer-paraphrase" -> "fastnlp/style-transformer"
"martiansideofthemoon/style-transfer-paraphrase" -> "lijuncen/Sentiment-and-Style-Transfer"
"martiansideofthemoon/style-transfer-paraphrase" -> "fuzhenxin/Style-Transfer-in-Text"
"martiansideofthemoon/style-transfer-paraphrase" -> "PrithivirajDamodaran/Styleformer"
"fastnlp/style-transformer" -> "cookielee77/DAST"
"fastnlp/style-transformer" -> "lijuncen/Sentiment-and-Style-Transfer"
"fastnlp/style-transformer" -> "luofuli/DualRL"
"fastnlp/style-transformer" -> "rpryzant/delete_retrieve_generate"
"fastnlp/style-transformer" -> "agaralabs/transformer-drg-style-transfer"
"fastnlp/style-transformer" -> "zhijing-jin/Text_Style_Transfer_Survey"
"fastnlp/style-transformer" -> "VAShibaev/text_style_transfer"
"fastnlp/style-transformer" -> "zhijing-jin/IMaT"
"fastnlp/style-transformer" -> "Nrgeup/controllable-text-attribute-transfer"
"fastnlp/style-transformer" -> "vineetjohn/linguistic-style-transfer"
"fastnlp/style-transformer" -> "martiansideofthemoon/style-transfer-paraphrase"
"ZhangShiyue/QGforQA" -> "PrekshaNema25/RefNet-QG"
"ZhangShiyue/QGforQA" -> "seanie12/neural-question-generation"
"ZhangShiyue/QGforQA" -> "magic282/NQG"
"ramsrigouthamg/Paraphrase-any-question-with-T5-Text-To-Text-Transfer-Transformer-" -> "renatoviolin/T5-paraphrase-generation"
"ramsrigouthamg/Paraphrase-any-question-with-T5-Text-To-Text-Transfer-Transformer-" -> "Vamsi995/Paraphrase-Generator"
"ramsrigouthamg/Paraphrase-any-question-with-T5-Text-To-Text-Transfer-Transformer-" -> "dev-chauhan/PQG-pytorch"
"patil-suraj/question_generation" -> "teacherpeterpan/Question-Generation-Paper-List"
"patil-suraj/question_generation" -> "AMontgomerie/question_generator"
"patil-suraj/question_generation" -> "ramsrigouthamg/Questgen.ai"
"patil-suraj/question_generation" -> "KristiyanVachev/Question-Generation"
"patil-suraj/question_generation" -> "xinyadu/nqg"
"patil-suraj/question_generation" -> "seanie12/neural-question-generation"
"patil-suraj/question_generation" -> "bisheng/Awesome-QG"
"patil-suraj/question_generation" -> "seanie12/Info-HCVAE"
"patil-suraj/question_generation" -> "bloomsburyai/question-generation"
"patil-suraj/question_generation" -> "asahi417/lm-question-generation"
"patil-suraj/question_generation" -> "magic282/NQG"
"patil-suraj/question_generation" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"patil-suraj/question_generation" -> "gauthierdmn/question_generation"
"patil-suraj/question_generation" -> "Maluuba/nlg-eval" ["e"=1]
"patil-suraj/question_generation" -> "artitw/text2text"
"google-research/lasertagger" -> "NingMiao/CGMH" ["e"=1]
"google-research/lasertagger" -> "google-research-datasets/paws" ["e"=1]
"neubig/lowresource-nlp-bootcamp-2020" -> "harvardnlp/pytorch-struct" ["e"=1]
"uber-research/PPLM" -> "THUNLP-MT/TG-Reading-List" ["e"=1]
"uber-research/PPLM" -> "fuzhenxin/Style-Transfer-in-Text" ["e"=1]
"uber-research/PPLM" -> "rikdz/GraphWriter" ["e"=1]
"uber-research/PPLM" -> "ChunyuanLI/Optimus" ["e"=1]
"Vamsi995/Paraphrase-Generator" -> "vsuthichai/paraphraser"
"Vamsi995/Paraphrase-Generator" -> "ramsrigouthamg/Paraphrase-any-question-with-T5-Text-To-Text-Transfer-Transformer-"
"Vamsi995/Paraphrase-Generator" -> "PrithivirajDamodaran/Parrot_Paraphraser"
"Vamsi995/Paraphrase-Generator" -> "websymphony/paraphrasing-tool"
"Vamsi995/Paraphrase-Generator" -> "google-research-datasets/paws"
"Vamsi995/Paraphrase-Generator" -> "renatoviolin/T5-paraphrase-generation"
"Vamsi995/Paraphrase-Generator" -> "AudayBerro/automatedParaphrase"
"Vamsi995/Paraphrase-Generator" -> "PrithivirajDamodaran/Styleformer"
"Vamsi995/Paraphrase-Generator" -> "miyyer/scpn"
"filyp/autocorrect" -> "PrithivirajDamodaran/Gramformer" ["e"=1]
"ramsrigouthamg/Questgen.ai" -> "patil-suraj/question_generation"
"ramsrigouthamg/Questgen.ai" -> "KristiyanVachev/Question-Generation"
"ramsrigouthamg/Questgen.ai" -> "AMontgomerie/question_generator"
"ramsrigouthamg/Questgen.ai" -> "teacherpeterpan/Question-Generation-Paper-List"
"ramsrigouthamg/Questgen.ai" -> "artitw/text2text"
"ramsrigouthamg/Questgen.ai" -> "PrithivirajDamodaran/Parrot_Paraphraser"
"ramsrigouthamg/Questgen.ai" -> "asahi417/lm-question-generation"
"ramsrigouthamg/Questgen.ai" -> "PrithivirajDamodaran/Gramformer"
"ramsrigouthamg/Questgen.ai" -> "PrithivirajDamodaran/Styleformer"
"ramsrigouthamg/Questgen.ai" -> "KristiyanVachev/Leaf-Question-Generation"
"ramsrigouthamg/Questgen.ai" -> "ramsrigouthamg/Paraphrase-any-question-with-T5-Text-To-Text-Transfer-Transformer-"
"ramsrigouthamg/Questgen.ai" -> "gauthierdmn/question_generation"
"ramsrigouthamg/Questgen.ai" -> "Vamsi995/Paraphrase-Generator"
"ramsrigouthamg/Questgen.ai" -> "obsei/obsei"
"ramsrigouthamg/Questgen.ai" -> "boudinfl/pke" ["e"=1]
"salesforce/ctrl" -> "fuzhenxin/Style-Transfer-in-Text" ["e"=1]
"salesforce/ctrl" -> "THUNLP-MT/TG-Reading-List" ["e"=1]
"salesforce/ctrl" -> "asyml/texar" ["e"=1]
"grammarly/gector" -> "PrithivirajDamodaran/Gramformer" ["e"=1]
"ml-jku/hopfield-layers" -> "harvardnlp/pytorch-struct" ["e"=1]
"facebookresearch/higher" -> "harvardnlp/pytorch-struct" ["e"=1]
"graph4ai/graph4nlp" -> "rikdz/GraphWriter" ["e"=1]
"accelerated-text/awesome-nlg" -> "ChenChengKuan/awesome-text-generation" ["e"=1]
"AMontgomerie/question_generator" -> "patil-suraj/question_generation"
"AMontgomerie/question_generator" -> "gauthierdmn/question_generation"
"AMontgomerie/question_generator" -> "KristiyanVachev/Leaf-Question-Generation"
"AMontgomerie/question_generator" -> "KristiyanVachev/Question-Generation"
"AMontgomerie/question_generator" -> "ramsrigouthamg/Questgen.ai"
"AMontgomerie/question_generator" -> "artitw/text2text"
"AMontgomerie/question_generator" -> "holylovenia/question-answer-generation"
"AMontgomerie/question_generator" -> "teacherpeterpan/Question-Generation-Paper-List"
"AMontgomerie/question_generator" -> "roemmele/answerquest"
"apache/opennlp" -> "CogComp/cogcomp-nlp" ["e"=1]
"neuspell/neuspell" -> "PrithivirajDamodaran/Gramformer" ["e"=1]
"abhimishra91/transformers-tutorials" -> "patil-suraj/exploring-T5" ["e"=1]
"abhimishra91/transformers-tutorials" -> "patil-suraj/question_generation" ["e"=1]
"renatoviolin/next_word_prediction" -> "renatoviolin/T5-paraphrase-generation" ["e"=1]
"allenai/allennlp-models" -> "miyyer/scpn" ["e"=1]
"allenai/allennlp-models" -> "harvardnlp/pytorch-struct" ["e"=1]
"wyu-du/Reinforce-Paraphrase-Generation" -> "dev-chauhan/PQG-pytorch"
"wyu-du/Reinforce-Paraphrase-Generation" -> "arvind385801/paraphraseGen"
"patil-suraj/exploring-T5" -> "Shivanandroy/T5-Finetuning-PyTorch"
"tanyuqian/progressive-generation" -> "WHUIR/PPVAE" ["e"=1]
"Smerity/sha-rnn" -> "harvardnlp/pytorch-struct" ["e"=1]
"artitw/text2text" -> "AMontgomerie/question_generator"
"artitw/text2text" -> "ujjax/question-generation"
"jind11/TextFooler" -> "miyyer/scpn" ["e"=1]
"teacherpeterpan/Question-Generation-Paper-List" -> "patil-suraj/question_generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "bisheng/Awesome-QG"
"teacherpeterpan/Question-Generation-Paper-List" -> "seanie12/neural-question-generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "xinyadu/nqg"
"teacherpeterpan/Question-Generation-Paper-List" -> "bloomsburyai/question-generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "YuxiXie/SG-Deep-Question-Generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "WING-NUS/SG-Deep-Question-Generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "KristiyanVachev/Question-Generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "magic282/NQG"
"teacherpeterpan/Question-Generation-Paper-List" -> "seanie12/Info-HCVAE"
"teacherpeterpan/Question-Generation-Paper-List" -> "hugochan/RL-based-Graph2Seq-for-NQG"
"teacherpeterpan/Question-Generation-Paper-List" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"teacherpeterpan/Question-Generation-Paper-List" -> "Maluuba/nlg-eval" ["e"=1]
"teacherpeterpan/Question-Generation-Paper-List" -> "hugochan/Graph2Seq-for-KGQG"
"teacherpeterpan/Question-Generation-Paper-List" -> "ramsrigouthamg/Questgen.ai"
"danqi/acl2020-openqa-tutorial" -> "teacherpeterpan/Question-Generation-Paper-List" ["e"=1]
"dreasysnail/POINTER" -> "NLPCode/CBART"
"dreasysnail/POINTER" -> "ChunyuanLI/Optimus"
"jwzhanggy/Graph-Bert" -> "jcyk/gtos" ["e"=1]
"harvardnlp/pytorch-struct" -> "harvardnlp/compound-pcfg" ["e"=1]
"harvardnlp/pytorch-struct" -> "neulab/compare-mt" ["e"=1]
"harvardnlp/pytorch-struct" -> "FranxYao/Deep-Generative-Models-for-Natural-Language-Processing"
"harvardnlp/pytorch-struct" -> "nikitakit/self-attentive-parser" ["e"=1]
"harvardnlp/pytorch-struct" -> "harvardnlp/urnng" ["e"=1]
"harvardnlp/pytorch-struct" -> "facebookresearch/XLM" ["e"=1]
"harvardnlp/pytorch-struct" -> "facebookresearch/higher" ["e"=1]
"harvardnlp/pytorch-struct" -> "salesforce/matchbox" ["e"=1]
"harvardnlp/pytorch-struct" -> "vitutorial/VITutorial"
"harvardnlp/pytorch-struct" -> "XuezheMax/NeuroNLP2" ["e"=1]
"harvardnlp/pytorch-struct" -> "asyml/texar-pytorch"
"harvardnlp/pytorch-struct" -> "deep-spin/entmax" ["e"=1]
"harvardnlp/pytorch-struct" -> "yzhangcs/parser" ["e"=1]
"harvardnlp/pytorch-struct" -> "neubig/lowresource-nlp-bootcamp-2020" ["e"=1]
"harvardnlp/pytorch-struct" -> "huggingface/naacl_transfer_learning_tutorial" ["e"=1]
"c-amr/camr" -> "jflanigan/jamr"
"c-amr/camr" -> "mdtux89/amr-eager"
"c-amr/camr" -> "sheng-z/stog"
"c-amr/camr" -> "amrisi/amr-guidelines"
"c-amr/camr" -> "ChunchuanLv/AMR_AS_GRAPH_PREDICTION"
"c-amr/camr" -> "Oneplus/tamr"
"c-amr/camr" -> "snowblink14/smatch"
"h3lio5/episodic-lifelong-learning" -> "h3lio5/gan-pytorch"
"h3lio5/episodic-lifelong-learning" -> "h3lio5/linguistic-style-transfer-pytorch"
"h3lio5/episodic-lifelong-learning" -> "h3lio5/dynamic-coattention-networks-pytorch"
"h3lio5/episodic-lifelong-learning" -> "subhash2000/iOS_3D_Scanner"
"h3lio5/episodic-lifelong-learning" -> "chho33/LAMOL"
"microsoft/fastseq" -> "dreasysnail/POINTER" ["e"=1]
"IBM/transition-amr-parser" -> "bjascob/amrlib"
"IBM/transition-amr-parser" -> "SapienzaNLP/spring"
"IBM/transition-amr-parser" -> "goodmami/penman"
"IBM/transition-amr-parser" -> "zhangzx-uiuc/AMR-IE"
"IBM/transition-amr-parser" -> "IBM/graph_ensemble_learning"
"IBM/transition-amr-parser" -> "goodbai-nlp/AMRBART"
"IBM/transition-amr-parser" -> "amrisi/amr-guidelines"
"IBM/transition-amr-parser" -> "jflanigan/jamr"
"IBM/transition-amr-parser" -> "jcyk/AMR-gs"
"IBM/transition-amr-parser" -> "bjascob/amrlib-models"
"IBM/transition-amr-parser" -> "IBM/docAMR"
"IBM/transition-amr-parser" -> "sheng-z/stog"
"IBM/transition-amr-parser" -> "ablodge/amr-utils"
"IBM/transition-amr-parser" -> "RikVN/AMR"
"bjascob/amrlib" -> "SapienzaNLP/spring"
"bjascob/amrlib" -> "IBM/transition-amr-parser"
"bjascob/amrlib" -> "goodmami/penman"
"bjascob/amrlib" -> "amrisi/amr-guidelines"
"bjascob/amrlib" -> "bjascob/amrlib-models"
"bjascob/amrlib" -> "IBM/graph_ensemble_learning"
"bjascob/amrlib" -> "jcyk/AMR-gs"
"bjascob/amrlib" -> "sheng-z/stog"
"bjascob/amrlib" -> "goodbai-nlp/AMRBART"
"bjascob/amrlib" -> "jflanigan/jamr"
"bjascob/amrlib" -> "propbank/propbank-frames"
"bjascob/amrlib" -> "ablodge/amr-utils"
"cookielee77/DAST" -> "FranxYao/pivot_analysis"
"ChunyuanLI/Optimus" -> "dreasysnail/POINTER"
"ChunyuanLI/Optimus" -> "timbmg/Sentence-VAE"
"ChunyuanLI/Optimus" -> "WHUIR/PPVAE"
"ChunyuanLI/Optimus" -> "cindyxinyiwang/deep-latent-sequence-model"
"ChunyuanLI/Optimus" -> "sodawater/T-CVAE"
"ChunyuanLI/Optimus" -> "Nrgeup/controllable-text-attribute-transfer"
"ChunyuanLI/Optimus" -> "mingdachen/disentangle-semantics-syntax"
"ChunyuanLI/Optimus" -> "cookielee77/DAST"
"ChunyuanLI/Optimus" -> "jxhe/vae-lagging-encoder"
"ChunyuanLI/Optimus" -> "guangyliu/LatentOps" ["e"=1]
"ChunyuanLI/Optimus" -> "uber-research/PPLM" ["e"=1]
"ChunyuanLI/Optimus" -> "fangleai/TransformerCVAE"
"ChunyuanLI/Optimus" -> "snakeztc/NeuralDialog-CVAE" ["e"=1]
"ChunyuanLI/Optimus" -> "bohanli/vae-pretraining-encoder"
"WING-NUS/SG-Deep-Question-Generation" -> "YuxiXie/SG-Deep-Question-Generation"
"WING-NUS/SG-Deep-Question-Generation" -> "hugochan/RL-based-Graph2Seq-for-NQG"
"WING-NUS/SG-Deep-Question-Generation" -> "seanie12/neural-question-generation"
"fangleai/TransformerCVAE" -> "sodawater/T-CVAE"
"fangleai/TransformerCVAE" -> "Fraser-Greenlee/transformer-vae"
"fangleai/TransformerCVAE" -> "seongminp/transformers-into-vaes"
"hugochan/RL-based-Graph2Seq-for-NQG" -> "WING-NUS/SG-Deep-Question-Generation"
"hugochan/RL-based-Graph2Seq-for-NQG" -> "seanie12/neural-question-generation"
"hugochan/RL-based-Graph2Seq-for-NQG" -> "Yifan-Gao/conversational-QG"
"hugochan/RL-based-Graph2Seq-for-NQG" -> "ZJULearning/ReDR"
"hugochan/RL-based-Graph2Seq-for-NQG" -> "yanghoonkim/NQG_ASs2s"
"hugochan/RL-based-Graph2Seq-for-NQG" -> "ZhangShiyue/QGforQA"
"YuxiXie/SG-Deep-Question-Generation" -> "WING-NUS/SG-Deep-Question-Generation"
"YuxiXie/SG-Deep-Question-Generation" -> "sion-zcfei/CQG"
"hugochan/Graph2Seq-for-KGQG" -> "liyuanfang/mhqg"
"hugochan/Graph2Seq-for-KGQG" -> "RUCKBReasoning/DSM"
"renatoviolin/Multiple-Choice-Question-Generation-T5-and-Text2Text" -> "KristiyanVachev/Leaf-Question-Generation" ["e"=1]
"facebookresearch/asset" -> "cocoxu/simplification"
"nlpdata/dialogre" -> "JiaQiSJTU/DialogueRelationClassification" ["e"=1]
"atbaker/wikipedia-question-generator" -> "indrajithi/genquest"
"ontonotes/conll-formatted-ontonotes-5.0" -> "propbank/propbank-release" ["e"=1]
"aniketmaurya/chitra" -> "gradsflow/gradsflow-automl"
"nschneid/amr-tutorial" -> "amrisi/amr-guidelines"
"nschneid/amr-tutorial" -> "goodmami/penman"
"nschneid/amr-tutorial" -> "nschneid/amr-hackathon"
"nschneid/amr-tutorial" -> "snowblink14/smatch"
"BangLiu/ACS-QG" -> "WING-NUS/SG-Deep-Question-Generation"
"malllabiisc/SGCP" -> "tagoyal/sow-reap-paraphrasing"
"malllabiisc/SGCP" -> "tomhosking/separator"
"UKPLab/plms-graph2text" -> "UKPLab/kg2text" ["e"=1]
"UKPLab/plms-graph2text" -> "diegma/graph-2-text" ["e"=1]
"pkumod/CKBQA" -> "wavewangyue/NLPCC-MH" ["e"=1]
"facebookresearch/access" -> "feralvam/easse"
"facebookresearch/access" -> "tingofurro/keep_it_simple"
"facebookresearch/access" -> "facebookresearch/muss"
"facebookresearch/access" -> "cocoxu/simplification"
"facebookresearch/access" -> "Kvasirs/MILES"
"facebookresearch/access" -> "XingxingZhang/dress"
"facebookresearch/access" -> "subramanyamdvss/UnsupNTS"
"ZhihongShao/Planning-based-Hierarchical-Variational-Model" -> "UKPLab/kg2text"
"ZhihongShao/Planning-based-Hierarchical-Variational-Model" -> "WHUIR/PPVAE"
"UKPLab/kg2text" -> "zhaochaocs/DualEnc"
"UKPLab/kg2text" -> "UKPLab/plms-graph2text" ["e"=1]
"chaojiang06/wiki-auto" -> "feralvam/easse"
"chaojiang06/wiki-auto" -> "XingxingZhang/dress"
"chaojiang06/wiki-auto" -> "RLSNLP/Document-level-text-simplification"
"chaojiang06/wiki-auto" -> "facebookresearch/muss"
"chaojiang06/wiki-auto" -> "KimChengSHEANG/TS_T5"
"sodawater/GraphTransformer" -> "Soistesimmer/AMR-multiview"
"Amazing-J/structural-transformer" -> "QAQ-v/HetGT"
"Amazing-J/structural-transformer" -> "mdtux89/OpenNMT-py-AMR-to-text"
"agaralabs/transformer-drg-style-transfer" -> "Nrgeup/controllable-text-attribute-transfer"
"agaralabs/transformer-drg-style-transfer" -> "VAShibaev/text_style_transfer"
"agaralabs/transformer-drg-style-transfer" -> "cookielee77/DAST"
"agaralabs/transformer-drg-style-transfer" -> "ChenWu98/Point-Then-Operate"
"agaralabs/transformer-drg-style-transfer" -> "lijuncen/Sentiment-and-Style-Transfer"
"agaralabs/transformer-drg-style-transfer" -> "rpryzant/delete_retrieve_generate"
"agaralabs/transformer-drg-style-transfer" -> "vineetjohn/linguistic-style-transfer"
"tagoyal/sow-reap-paraphrasing" -> "malllabiisc/SGCP"
"tagoyal/sow-reap-paraphrasing" -> "mingdachen/syntactic-template-generation"
"jcyk/AMR-gs" -> "sheng-z/stog"
"jcyk/AMR-gs" -> "mdtux89/amr-evaluation"
"jcyk/AMR-gs" -> "ChunchuanLv/AMR_AS_GRAPH_PREDICTION"
"jcyk/AMR-gs" -> "RikVN/AMR"
"QAQ-v/HetGT" -> "sodawater/GraphTransformer"
"QAQ-v/HetGT" -> "Soistesimmer/AMR-multiview"
"chho33/LAMOL" -> "voidism/L2KD"
"chho33/LAMOL" -> "h3lio5/episodic-lifelong-learning"
"chho33/LAMOL" -> "SALT-NLP/Adaptive-Compositional-Modules"
"xdqkid/S2S-AMR-Parser" -> "RikVN/AMR"
"huji-nlp/ucca" -> "danielhers/tupa"
"h3lio5/linguistic-style-transfer-pytorch" -> "h3lio5/gan-pytorch"
"h3lio5/linguistic-style-transfer-pytorch" -> "vineetjohn/linguistic-style-transfer"
"h3lio5/linguistic-style-transfer-pytorch" -> "h3lio5/episodic-lifelong-learning"
"h3lio5/linguistic-style-transfer-pytorch" -> "h3lio5/dynamic-coattention-networks-pytorch"
"h3lio5/linguistic-style-transfer-pytorch" -> "subhash2000/iOS_3D_Scanner"
"JiaQiSJTU/ResponseSelection" -> "JiaQiSJTU/QAmatching"
"JiaQiSJTU/ResponseSelection" -> "JiaQiSJTU/DialogueRelationClassification"
"JiaQiSJTU/ResponseSelection" -> "DRSY/LAMP"
"Soistesimmer/AMR-multiview" -> "sodawater/GraphTransformer"
"h3lio5/gan-pytorch" -> "h3lio5/dynamic-coattention-networks-pytorch"
"JiaQiSJTU/QAmatching" -> "JiaQiSJTU/DialogueRelationClassification"
"JiaQiSJTU/QAmatching" -> "JiaQiSJTU/ResponseSelection"
"h3lio5/dynamic-coattention-networks-pytorch" -> "h3lio5/gan-pytorch"
"PrithivirajDamodaran/Styleformer" -> "PrithivirajDamodaran/Gramformer"
"PrithivirajDamodaran/Styleformer" -> "PrithivirajDamodaran/Parrot_Paraphraser"
"PrithivirajDamodaran/Styleformer" -> "martiansideofthemoon/style-transfer-paraphrase"
"PrithivirajDamodaran/Styleformer" -> "lijuncen/Sentiment-and-Style-Transfer"
"PrithivirajDamodaran/Styleformer" -> "agaralabs/transformer-drg-style-transfer"
"PrithivirajDamodaran/Styleformer" -> "zhijing-jin/Text_Style_Transfer_Survey"
"PrithivirajDamodaran/Styleformer" -> "tunib-ai/parallelformers" ["e"=1]
"PrithivirajDamodaran/Styleformer" -> "Vamsi995/Paraphrase-Generator"
"PrithivirajDamodaran/Styleformer" -> "grammarly/gector" ["e"=1]
"PrithivirajDamodaran/Styleformer" -> "erre-quadro/spikex" ["e"=1]
"PrithivirajDamodaran/Styleformer" -> "simonepri/lm-scorer" ["e"=1]
"PrithivirajDamodaran/Styleformer" -> "infinitylogesh/mutate" ["e"=1]
"PrithivirajDamodaran/Styleformer" -> "cdpierse/transformers-interpret" ["e"=1]
"PrithivirajDamodaran/Styleformer" -> "rpryzant/delete_retrieve_generate"
"obsei/obsei" -> "PrithivirajDamodaran/Gramformer"
"obsei/obsei" -> "erre-quadro/spikex" ["e"=1]
"obsei/obsei" -> "deepset-ai/FARM" ["e"=1]
"obsei/obsei" -> "NorskRegnesentral/skweak" ["e"=1]
"obsei/obsei" -> "PrithivirajDamodaran/Styleformer"
"obsei/obsei" -> "argilla-io/argilla" ["e"=1]
"obsei/obsei" -> "ramsrigouthamg/Questgen.ai"
"obsei/obsei" -> "MaartenGr/PolyFuzz" ["e"=1]
"obsei/obsei" -> "MilaNLProc/contextualized-topic-models" ["e"=1]
"obsei/obsei" -> "graph4ai/graph4nlp" ["e"=1]
"obsei/obsei" -> "aniketmaurya/chitra"
"obsei/obsei" -> "ml-tooling/opyrator" ["e"=1]
"obsei/obsei" -> "ivan-bilan/The-NLP-Pandect" ["e"=1]
"obsei/obsei" -> "huggingface/awesome-huggingface" ["e"=1]
"obsei/obsei" -> "gradsflow/gradsflow-automl"
"Lightning-Universe/lightning-flash" -> "gradsflow/gradsflow-automl" ["e"=1]
"facebookresearch/muss" -> "chaojiang06/wiki-auto"
"facebookresearch/muss" -> "facebookresearch/access"
"facebookresearch/muss" -> "feralvam/easse"
"facebookresearch/muss" -> "subramanyamdvss/UnsupNTS"
"facebookresearch/muss" -> "tingofurro/keep_it_simple"
"strib/scigen" -> "strib/scipher"
"strib/scigen" -> "neldredge/mathgen"
"strib/scigen" -> "EagleW/PaperRobot"
"strib/scigen" -> "ipython/xkcd-font"
"PrithivirajDamodaran/Parrot_Paraphraser" -> "PrithivirajDamodaran/Styleformer"
"PrithivirajDamodaran/Parrot_Paraphraser" -> "Vamsi995/Paraphrase-Generator"
"PrithivirajDamodaran/Parrot_Paraphraser" -> "vsuthichai/paraphraser"
"PrithivirajDamodaran/Parrot_Paraphraser" -> "PrithivirajDamodaran/Gramformer"
"PrithivirajDamodaran/Parrot_Paraphraser" -> "RasaHQ/paraphraser"
"PrithivirajDamodaran/Parrot_Paraphraser" -> "ramsrigouthamg/Questgen.ai"
"PrithivirajDamodaran/Parrot_Paraphraser" -> "martiansideofthemoon/style-transfer-paraphrase"
"PrithivirajDamodaran/Parrot_Paraphraser" -> "GEM-benchmark/NL-Augmenter" ["e"=1]
"PrithivirajDamodaran/Parrot_Paraphraser" -> "cdpierse/transformers-interpret" ["e"=1]
"PrithivirajDamodaran/Parrot_Paraphraser" -> "google-research-datasets/paws"
"PrithivirajDamodaran/Parrot_Paraphraser" -> "google-research/pegasus" ["e"=1]
"PrithivirajDamodaran/Parrot_Paraphraser" -> "makcedward/nlpaug" ["e"=1]
"PrithivirajDamodaran/Parrot_Paraphraser" -> "patil-suraj/question_generation"
"PrithivirajDamodaran/Parrot_Paraphraser" -> "awasthiabhijeet/PIE" ["e"=1]
"PrithivirajDamodaran/Parrot_Paraphraser" -> "websymphony/paraphrasing-tool"
"UKPLab/EasyNMT" -> "PrithivirajDamodaran/Gramformer" ["e"=1]
"abhishekkrthakur/tez" -> "PrithivirajDamodaran/Gramformer" ["e"=1]
"gordicaleksa/pytorch-original-transformer" -> "PrithivirajDamodaran/Styleformer" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "PrithivirajDamodaran/Styleformer"
"PrithivirajDamodaran/Gramformer" -> "grammarly/gector" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "PrithivirajDamodaran/Parrot_Paraphraser"
"PrithivirajDamodaran/Gramformer" -> "chrisjbryant/errant" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "jxmorris12/language_tool_python" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "neuspell/neuspell" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "awasthiabhijeet/PIE" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "ivan-bilan/The-NLP-Pandect" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "obsei/obsei"
"PrithivirajDamodaran/Gramformer" -> "patil-suraj/question_generation"
"PrithivirajDamodaran/Gramformer" -> "argilla-io/argilla" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "cdpierse/transformers-interpret" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "MaartenGr/PolyFuzz" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "jalammar/ecco" ["e"=1]
"PrithivirajDamodaran/Gramformer" -> "graph4ai/graph4nlp" ["e"=1]
"Ki6an/fastT5" -> "Shivanandroy/simpleT5" ["e"=1]
"huggingface/awesome-huggingface" -> "PrithivirajDamodaran/Styleformer" ["e"=1]
"Lightning-AI/tutorials" -> "gradsflow/gradsflow-automl" ["e"=1]
"gradsflow/gradsflow-automl" -> "aniketmaurya/chitra"
"styfeng/DataAug4NLP" -> "FranxYao/Deep-Generative-Models-for-Natural-Language-Processing" ["e"=1]
"DRSY/MoTIS" -> "DRSY/DGen"
"DRSY/MoTIS" -> "JiaQiSJTU/DialogueRelationClassification"
"DRSY/MoTIS" -> "DRSY/LAMP"
"DRSY/MoTIS" -> "JiaQiSJTU/QAmatching"
"DRSY/MoTIS" -> "JiaQiSJTU/ResponseSelection"
"Shivanandroy/T5-Finetuning-PyTorch" -> "patil-suraj/exploring-T5"
"Shivanandroy/T5-Finetuning-PyTorch" -> "Shivanandroy/simpleT5"
"Shivanandroy/simpleT5" -> "Shivanandroy/T5-Finetuning-PyTorch"
"Shivanandroy/simpleT5" -> "Ki6an/fastT5" ["e"=1]
"Shivanandroy/simpleT5" -> "Wangdoudou8/text-summarization-csdn"
"Shivanandroy/simpleT5" -> "martiansideofthemoon/style-transfer-paraphrase"
"asahi417/lm-question-generation" -> "patil-suraj/question_generation"
"asahi417/lm-question-generation" -> "KristiyanVachev/Leaf-Question-Generation"
"asahi417/lm-question-generation" -> "AMontgomerie/question_generator"
"asahi417/lm-question-generation" -> "WorkInTheDark/FairytaleQA_QAG_System"
"asahi417/lm-question-generation" -> "meghabyte/acl2021-education"
"google-research/long-range-arena" -> "harvardnlp/pytorch-struct" ["e"=1]
"DRSY/DGen" -> "DRSY/LAMP"
"DRSY/DGen" -> "AndyChiangSH/CDGP"
"DRSY/DGen" -> "JiaQiSJTU/QAmatching"
"SapienzaNLP/spring" -> "IBM/graph_ensemble_learning"
"SapienzaNLP/spring" -> "bjascob/amrlib"
"SapienzaNLP/spring" -> "goodbai-nlp/AMRBART"
"SapienzaNLP/spring" -> "goodmami/penman"
"SapienzaNLP/spring" -> "IBM/transition-amr-parser"
"SapienzaNLP/spring" -> "ablodge/amr-utils"
"SapienzaNLP/spring" -> "mdtux89/amr-evaluation"
"SapienzaNLP/spring" -> "RikVN/AMR"
"FranxYao/Gumbel-CRF" -> "FilippoC/diffdp"
"voidful/BDG" -> "AndyChiangSH/CDGP"
"JiaQiSJTU/DialogueRelationClassification" -> "JiaQiSJTU/QAmatching"
"JiaQiSJTU/DialogueRelationClassification" -> "JiaQiSJTU/ResponseSelection"
"zhijing-jin/Text_Style_Transfer_Survey" -> "fuzhenxin/Style-Transfer-in-Text"
"zhijing-jin/Text_Style_Transfer_Survey" -> "fastnlp/style-transformer"
"zhijing-jin/Text_Style_Transfer_Survey" -> "lijuncen/Sentiment-and-Style-Transfer"
"zhijing-jin/Text_Style_Transfer_Survey" -> "raosudha89/GYAFC-corpus"
"zhijing-jin/Text_Style_Transfer_Survey" -> "cindyxinyiwang/deep-latent-sequence-model"
"zhijing-jin/Text_Style_Transfer_Survey" -> "LeoLaugier/conditional-auto-encoder-text-to-text-transfer-transformer"
"zhijing-jin/Text_Style_Transfer_Survey" -> "laihuiyuan/pre-trained-formality-transfer"
"zhijing-jin/Text_Style_Transfer_Survey" -> "martiansideofthemoon/style-transfer-paraphrase"
"zhijing-jin/Text_Style_Transfer_Survey" -> "rpryzant/delete_retrieve_generate"
"zhijing-jin/Text_Style_Transfer_Survey" -> "jind11/TitleStylist"
"zhijing-jin/Text_Style_Transfer_Survey" -> "Nrgeup/controllable-text-attribute-transfer"
"zhijing-jin/Text_Style_Transfer_Survey" -> "passeul/style-transfer-model-evaluation"
"zhijing-jin/Text_Style_Transfer_Survey" -> "XiaoyuanYi/StyIns"
"Fraser-Greenlee/transformer-vae" -> "Fraser-Greenlee/T5-VAE"
"Fraser-Greenlee/transformer-vae" -> "shmpanski/t-vae"
"Fraser-Greenlee/transformer-vae" -> "fangleai/TransformerCVAE"
"Fraser-Greenlee/transformer-vae" -> "sodawater/T-CVAE"
"Fraser-Greenlee/transformer-vae" -> "seongminp/transformers-into-vaes"
"cocoxu/Shakespeare" -> "harsh19/Shakespearizing-Modern-English"
"summarization/semantic_summ" -> "sheffieldnlp/AMR2Text-summ"
"summarization/semantic_summ" -> "ellej16/SumMe"
"neldredge/mathgen" -> "strib/scigen"
"XiangLi1999/Diffusion-LM" -> "ChunyuanLI/Optimus" ["e"=1]
"facebookarchive/MemNN" -> "LantaoYu/SeqGAN" ["e"=1]
"mynlp/ccg2lambda" -> "amrisi/amr-guidelines" ["e"=1]
"facebookresearch/playtorch" -> "gradsflow/gradsflow-automl" ["e"=1]
"CogComp/cogcomp-nlp" -> "jflanigan/jamr"
"CogComp/cogcomp-nlp" -> "CogComp/cogcomp-nlpy"
"CogComp/cogcomp-nlp" -> "CogComp/talen"
"CogComp/cogcomp-nlp" -> "propbank/propbank-frames"
"CogComp/cogcomp-nlp" -> "Noahs-ARK/semafor" ["e"=1]
"CogComp/cogcomp-nlp" -> "allenai/semanticilp"
"carpedm20/MemN2N-tensorflow" -> "LantaoYu/SeqGAN" ["e"=1]
"sherjilozair/char-rnn-tensorflow" -> "LantaoYu/SeqGAN" ["e"=1]
"tokestermw/tensorflow-shakespeare" -> "cocoxu/Shakespeare" ["e"=1]
"uci-soe/FairytaleQAData" -> "WorkInTheDark/FairytaleQA_QAG_System"
"uci-soe/FairytaleQAData" -> "zhaozj89/Educational-Question-Generation"
"goodbai-nlp/AMRBART" -> "SapienzaNLP/spring"
"goodbai-nlp/AMRBART" -> "UKPLab/StructAdapt"
"goodbai-nlp/AMRBART" -> "goodmami/penman"
"KristiyanVachev/Leaf-Question-Generation" -> "KristiyanVachev/Question-Generation"
"KristiyanVachev/Leaf-Question-Generation" -> "AMontgomerie/question_generator"
"KristiyanVachev/Leaf-Question-Generation" -> "voidful/BDG"
"KristiyanVachev/Leaf-Question-Generation" -> "meghabyte/acl2021-education"
"WorkInTheDark/FairytaleQA_QAG_System" -> "neuhai/FairytaleQA_Dataset"
"WorkInTheDark/FairytaleQA_QAG_System" -> "uci-soe/FairytaleQAData"
"WorkInTheDark/FairytaleQA_QAG_System" -> "zhaozj89/Educational-Question-Generation"
"mayubo2333/PAIE" -> "zhangzx-uiuc/AMR-IE" ["e"=1]
"blmoistawinde/fense" -> "DRSY/LAMP"
"brmson/dataset-sts" -> "google-research-datasets/paws" ["e"=1]
"carpedm20/variational-text-tensorflow" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" ["e"=1]
"y0ast/VAE-TensorFlow" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" ["e"=1]
"clue-ai/PromptCLUE" -> "Shivanandroy/T5-Finetuning-PyTorch" ["e"=1]
"ofirnachum/sequence_gan" -> "LantaoYu/SeqGAN"
"ofirnachum/sequence_gan" -> "CR-Gjx/LeakGAN"
"ofirnachum/sequence_gan" -> "jakezhaojb/ARAE"
"ofirnachum/sequence_gan" -> "codekansas/seqgan-text-tensorflow"
"ofirnachum/sequence_gan" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"ofirnachum/sequence_gan" -> "geek-ai/Texygen"
"ofirnachum/sequence_gan" -> "olofmogren/c-rnn-gan" ["e"=1]
"ofirnachum/sequence_gan" -> "AustinCStone/TextGAN"
"ofirnachum/sequence_gan" -> "amirbar/rnn.wgan"
"ofirnachum/sequence_gan" -> "jych/nips2015_vrnn" ["e"=1]
"ofirnachum/sequence_gan" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow"
"ofirnachum/sequence_gan" -> "liuyuemaicha/Adversarial-Learning-for-Neural-Dialogue-Generation-in-Tensorflow" ["e"=1]
"ofirnachum/sequence_gan" -> "facebookarchive/MIXER" ["e"=1]
"cheng6076/Variational-LSTM-Autoencoder" -> "rsarxiv/seq2seq-attention"
"cheng6076/Variational-LSTM-Autoencoder" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow"
"goodmami/penman" -> "sheng-z/stog"
"goodmami/penman" -> "bjascob/amrlib"
"goodmami/penman" -> "IBM/graph_ensemble_learning"
"goodmami/penman" -> "amrisi/amr-guidelines"
"goodmami/penman" -> "SapienzaNLP/spring"
"goodmami/penman" -> "mdtux89/amr-evaluation"
"goodmami/penman" -> "RikVN/AMR"
"goodmami/penman" -> "ChunchuanLv/AMR_AS_GRAPH_PREDICTION"
"goodmami/penman" -> "goodbai-nlp/AMRBART"
"goodmami/penman" -> "snowblink14/smatch"
"goodmami/penman" -> "jcyk/AMR-gs"
"goodmami/penman" -> "propbank/propbank-frames"
"goodmami/penman" -> "jflanigan/jamr"
"goodmami/penman" -> "sinantie/NeuralAmr"
"goodmami/penman" -> "nschneid/amr-tutorial"
"propbank/propbank-frames" -> "propbank/propbank-release"
"propbank/propbank-frames" -> "IBM/graph_ensemble_learning"
"neuhai/FairytaleQA_Dataset" -> "WorkInTheDark/FairytaleQA_QAG_System"
"unum-cloud/uform" -> "DRSY/MoTIS" ["e"=1]
"DavidGrangier/wikipedia-biography-dataset" -> "diegma/graph-2-text" ["e"=1]
"LantaoYu/SeqGAN" -> "suragnair/seqGAN"
"LantaoYu/SeqGAN" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"LantaoYu/SeqGAN" -> "ofirnachum/sequence_gan"
"LantaoYu/SeqGAN" -> "CR-Gjx/LeakGAN"
"LantaoYu/SeqGAN" -> "geek-ai/Texygen"
"LantaoYu/SeqGAN" -> "igul222/improved_wgan_training" ["e"=1]
"LantaoYu/SeqGAN" -> "martinarjovsky/WassersteinGAN" ["e"=1]
"LantaoYu/SeqGAN" -> "google/seq2seq" ["e"=1]
"LantaoYu/SeqGAN" -> "wiseodd/generative-models" ["e"=1]
"LantaoYu/SeqGAN" -> "abisee/pointer-generator" ["e"=1]
"LantaoYu/SeqGAN" -> "ZiJianZhao/SeqGAN-PyTorch"
"LantaoYu/SeqGAN" -> "facebookarchive/MemNN" ["e"=1]
"LantaoYu/SeqGAN" -> "geek-ai/irgan" ["e"=1]
"LantaoYu/SeqGAN" -> "Kyubyong/transformer" ["e"=1]
"LantaoYu/SeqGAN" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"wasiahmad/paraphrase_identification" -> "nelson-liu/paraphrase-id-tensorflow" ["e"=1]
"wasiahmad/paraphrase_identification" -> "iamaaditya/neural-paraphrase-generation"
"wasiahmad/paraphrase_identification" -> "google-research-datasets/paws"
"AustinCStone/TextGAN" -> "dreasysnail/textGAN_public"
"AustinCStone/TextGAN" -> "tokestermw/text-gan-tensorflow"
"rajpurkar/SQuAD-explorer" -> "xinyadu/nqg" ["e"=1]
"cocoxu/simplification" -> "senisioi/NeuralTextSimplification"
"cocoxu/simplification" -> "XingxingZhang/dress"
"cocoxu/simplification" -> "facebookresearch/asset"
"cocoxu/simplification" -> "feralvam/easse"
"cocoxu/simplification" -> "facebookresearch/access"
"cocoxu/simplification" -> "XingxingZhang/pysari"
"cocoxu/simplification" -> "eliorsulem/SAMSA"
"cocoxu/simplification" -> "chaojiang06/wiki-auto"
"mdtux89/amr-eager" -> "ChunchuanLv/AMR_AS_GRAPH_PREDICTION"
"propbank/propbank-release" -> "propbank/propbank-frames"
"propbank/propbank-release" -> "ontonotes/conll-formatted-ontonotes-5.0" ["e"=1]
"iwyoo/LSTM-autoencoder" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" ["e"=1]
"Nrgeup/funny_tool" -> "Nrgeup/EasyNLP"
"MaximumEntropy/Seq2Seq-PyTorch" -> "suragnair/seqGAN" ["e"=1]
"MaximumEntropy/Seq2Seq-PyTorch" -> "kefirski/pytorch_RVAE" ["e"=1]
"MaximumEntropy/Seq2Seq-PyTorch" -> "LantaoYu/SeqGAN" ["e"=1]
"MaximumEntropy/Seq2Seq-PyTorch" -> "jakezhaojb/ARAE" ["e"=1]
"tensorflow/fold" -> "LantaoYu/SeqGAN" ["e"=1]
"ericjang/gumbel-softmax" -> "jiacheng-xu/vmf_vae_nlp" ["e"=1]
"Maluuba/newsqa" -> "Maluuba/qgen-workshop" ["e"=1]
"Maluuba/newsqa" -> "xinyadu/nqg" ["e"=1]
"Maluuba/newsqa" -> "davidgolub/QuestionGeneration" ["e"=1]
"olofmogren/c-rnn-gan" -> "ofirnachum/sequence_gan" ["e"=1]
"olofmogren/c-rnn-gan" -> "LantaoYu/SeqGAN" ["e"=1]
"olofmogren/c-rnn-gan" -> "jakezhaojb/ARAE" ["e"=1]
"Lightning-AI/litData" -> "gradsflow/gradsflow-automl" ["e"=1]
"ysmiao/nvdm" -> "jiacheng-xu/vmf_vae_nlp" ["e"=1]
"madrugado/deep-learning-nlp-rl-papers" -> "vitutorial/VITutorial" ["e"=1]
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "kefirski/pytorch_RVAE"
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "ssemeniuta/textvae"
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "cheng6076/Variational-LSTM-Autoencoder"
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "timbmg/Sentence-VAE"
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "carpedm20/variational-text-tensorflow" ["e"=1]
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "kefirski/contiguous-succotash"
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "yiyang92/vae_for_text"
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "snowkylin/rnn-vae" ["e"=1]
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "snakeztc/NeuralDialog-CVAE" ["e"=1]
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "phreeza/tensorflow-vrnn" ["e"=1]
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "iwyoo/LSTM-autoencoder" ["e"=1]
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "ryokamoi/original_textvae"
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" -> "twairball/keras_lstm_vae" ["e"=1]
"snowblink14/smatch" -> "mdtux89/amr-evaluation"
"snowblink14/smatch" -> "Heidelberg-NLP/amr-metric-suite"
"mdtux89/amr-evaluation" -> "snowblink14/smatch"
"mdtux89/amr-evaluation" -> "Heidelberg-NLP/amr-metric-suite"
"bwanglzu/Automatic-Question-Generation" -> "narain280493/Automatic-Question-Generation"
"EdGENetworks/attention-networks-for-classification" -> "kefirski/pytorch_RVAE" ["e"=1]
"laugustyniak/awesome-sentiment-analysis" -> "ChenChengKuan/awesome-text-generation" ["e"=1]
"martinarjovsky/WassersteinGAN" -> "LantaoYu/SeqGAN" ["e"=1]
"google/seq2seq" -> "LantaoYu/SeqGAN" ["e"=1]
"igul222/improved_wgan_training" -> "LantaoYu/SeqGAN" ["e"=1]
"amrisi/amr-guidelines" -> "goodmami/penman"
"amrisi/amr-guidelines" -> "bjascob/amrlib"
"amrisi/amr-guidelines" -> "jflanigan/jamr"
"amrisi/amr-guidelines" -> "sheng-z/stog"
"amrisi/amr-guidelines" -> "propbank/propbank-frames"
"amrisi/amr-guidelines" -> "c-amr/camr"
"amrisi/amr-guidelines" -> "nschneid/amr-tutorial"
"amrisi/amr-guidelines" -> "IBM/transition-amr-parser"
"amrisi/amr-guidelines" -> "SapienzaNLP/spring"
"amrisi/amr-guidelines" -> "snowblink14/smatch"
"amrisi/amr-guidelines" -> "propbank/propbank-release"
"amrisi/amr-guidelines" -> "cfmrp/mtool"
"amrisi/amr-guidelines" -> "mdtux89/amr-eager-multilingual"
"amrisi/amr-guidelines" -> "mynlp/ccg2lambda" ["e"=1]
"amrisi/amr-guidelines" -> "goodbai-nlp/AMRBART"
"jiweil/Neural-Dialogue-Generation" -> "LantaoYu/SeqGAN" ["e"=1]
"jiweil/Neural-Dialogue-Generation" -> "geek-ai/Texygen" ["e"=1]
"jiweil/Neural-Dialogue-Generation" -> "ofirnachum/sequence_gan" ["e"=1]
"jiweil/Neural-Dialogue-Generation" -> "kelvinguu/neural-editor" ["e"=1]
"kefirski/pytorch_RVAE" -> "timbmg/Sentence-VAE"
"kefirski/pytorch_RVAE" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow"
"kefirski/pytorch_RVAE" -> "kefirski/contiguous-succotash"
"kefirski/pytorch_RVAE" -> "paulx3/keras_generative_pg"
"kefirski/pytorch_RVAE" -> "cheng6076/Variational-LSTM-Autoencoder"
"kefirski/pytorch_RVAE" -> "jakezhaojb/ARAE"
"kefirski/pytorch_RVAE" -> "wiseodd/controlled-text-generation"
"kefirski/pytorch_RVAE" -> "ale3otik/paraphrases-generator"
"kefirski/pytorch_RVAE" -> "snakeztc/NeuralDialog-LAED" ["e"=1]
"kefirski/pytorch_RVAE" -> "MaximumEntropy/Seq2Seq-PyTorch" ["e"=1]
"kefirski/pytorch_RVAE" -> "jhclark/multeval" ["e"=1]
"kefirski/pytorch_RVAE" -> "kefirski/hybrid_rvae"
"kefirski/pytorch_RVAE" -> "jiacheng-xu/vmf_vae_nlp"
"kefirski/pytorch_RVAE" -> "miyyer/scpn"
"kefirski/pytorch_RVAE" -> "GBLin5566/toward-controlled-generation-of-text-pytorch"
"nelson-liu/paraphrase-id-tensorflow" -> "wasiahmad/paraphrase_identification" ["e"=1]
"nelson-liu/paraphrase-id-tensorflow" -> "iamaaditya/neural-paraphrase-generation" ["e"=1]
"openai/generating-reviews-discovering-sentiment" -> "kelvinguu/neural-editor" ["e"=1]
"qizhex/RACE_AR_baselines" -> "Yifan-Gao/Distractor-Generation-RACE" ["e"=1]
"jiamings/wgan" -> "jakezhaojb/ARAE" ["e"=1]
"ssemeniuta/textvae" -> "ryokamoi/hybrid_textvae"
"ssemeniuta/textvae" -> "robinsloan/sentence-space"
"ssemeniuta/textvae" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow"
"ssemeniuta/textvae" -> "harvardnlp/sa-vae"
"ssemeniuta/textvae" -> "wiseodd/controlled-text-generation"
"Zardinality/WGAN-tensorflow" -> "LantaoYu/SeqGAN" ["e"=1]
"liuyuemaicha/Adversarial-Learning-for-Neural-Dialogue-Generation-in-Tensorflow" -> "Nrgeup/controllable-text-attribute-transfer" ["e"=1]
"taivop/joke-dataset" -> "codekansas/seqgan-text-tensorflow" ["e"=1]
"codekansas/seqgan-text-tensorflow" -> "ChenChengKuan/SeqGAN_tensorflow"
"codekansas/seqgan-text-tensorflow" -> "GaoQ1/seqgan"
"codekansas/seqgan-text-tensorflow" -> "TobiasLee/SeqGAN_Poem"
"hwalsuklee/tensorflow-mnist-VAE" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" ["e"=1]
"danielhers/tupa" -> "huji-nlp/ucca"
"danielhers/tupa" -> "cfmrp/mtool"
"danielhers/tupa" -> "eliorsulem/SAMSA"
"twairball/keras_lstm_vae" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" ["e"=1]
"twairball/keras_lstm_vae" -> "cheng6076/Variational-LSTM-Autoencoder" ["e"=1]
"xinyadu/nqg" -> "magic282/NQG"
"xinyadu/nqg" -> "seanie12/neural-question-generation"
"xinyadu/nqg" -> "deeppavlov/question_generation"
"xinyadu/nqg" -> "bloomsburyai/question-generation"
"xinyadu/nqg" -> "yanghoonkim/NQG_ASs2s"
"xinyadu/nqg" -> "davidgolub/QuestionGeneration"
"xinyadu/nqg" -> "teacherpeterpan/Question-Generation-Paper-List"
"xinyadu/nqg" -> "yanghoonkim/neural_question_generation"
"xinyadu/nqg" -> "freesunshine0316/MPQG"
"xinyadu/nqg" -> "ZhangShiyue/QGforQA"
"xinyadu/nqg" -> "indrajithi/genquest"
"xinyadu/nqg" -> "victorywys/Learning2Ask_TypedDecoder" ["e"=1]
"xinyadu/nqg" -> "gauthierdmn/question_generation"
"xinyadu/nqg" -> "Maluuba/newsqa" ["e"=1]
"xinyadu/nqg" -> "zichaow/QG-Net"
"ermongroup/Variational-Ladder-Autoencoder" -> "harvardnlp/sa-vae" ["e"=1]
"delph-in/pydelphin" -> "janmbuys/DeepDeepParser"
"delph-in/pydelphin" -> "delph-in/erg"
"delph-in/pydelphin" -> "cfmrp/mtool"
"kefirski/contiguous-succotash" -> "harvardnlp/sa-vae"
"tokestermw/text-gan-tensorflow" -> "AustinCStone/TextGAN"
"Noahs-ARK/NeurboParser" -> "mdtux89/amr-eager" ["e"=1]
"senisioi/NeuralTextSimplification" -> "cocoxu/simplification"
"senisioi/NeuralTextSimplification" -> "Sanqiang/text_simplification"
"senisioi/NeuralTextSimplification" -> "XingxingZhang/dress"
"senisioi/NeuralTextSimplification" -> "subramanyamdvss/UnsupNTS"
"hzy46/Char-RNN-TensorFlow" -> "LantaoYu/SeqGAN" ["e"=1]
"minimaxir/textgenrnn" -> "asyml/texar" ["e"=1]
"minimaxir/textgenrnn" -> "geek-ai/Texygen" ["e"=1]
"geek-ai/irgan" -> "LantaoYu/SeqGAN" ["e"=1]
"amirbar/rnn.wgan" -> "jakezhaojb/ARAE"
"amirbar/rnn.wgan" -> "ofirnachum/sequence_gan"
"amirbar/rnn.wgan" -> "kefirski/contiguous-succotash"
"amirbar/rnn.wgan" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"amirbar/rnn.wgan" -> "wiseodd/controlled-text-generation"
"amirbar/rnn.wgan" -> "ssemeniuta/textvae"
"stanfordnlp/python-stanford-corenlp" -> "vitutorial/VITutorial" ["e"=1]
"shentianxiao/language-style-transfer" -> "lijuncen/Sentiment-and-Style-Transfer"
"shentianxiao/language-style-transfer" -> "fuzhenxin/Style-Transfer-in-Text"
"shentianxiao/language-style-transfer" -> "vineetjohn/linguistic-style-transfer"
"shentianxiao/language-style-transfer" -> "jakezhaojb/ARAE"
"shentianxiao/language-style-transfer" -> "shrimai/Style-Transfer-Through-Back-Translation"
"shentianxiao/language-style-transfer" -> "luofuli/DualRL"
"shentianxiao/language-style-transfer" -> "fuzhenxin/text_style_transfer"
"shentianxiao/language-style-transfer" -> "lancopku/Unpaired-Sentiment-Translation" ["e"=1]
"shentianxiao/language-style-transfer" -> "wiseodd/controlled-text-generation"
"shentianxiao/language-style-transfer" -> "rpryzant/delete_retrieve_generate"
"shentianxiao/language-style-transfer" -> "kelvinguu/neural-editor"
"shentianxiao/language-style-transfer" -> "snakeztc/NeuralDialog-CVAE" ["e"=1]
"shentianxiao/language-style-transfer" -> "Nrgeup/controllable-text-attribute-transfer"
"shentianxiao/language-style-transfer" -> "fuzhenxin/textstyletransferdata"
"shentianxiao/language-style-transfer" -> "asyml/texar"
"asyml/texar" -> "asyml/texar-pytorch"
"asyml/texar" -> "geek-ai/Texygen"
"asyml/texar" -> "fuzhenxin/Style-Transfer-in-Text"
"asyml/texar" -> "abisee/pointer-generator" ["e"=1]
"asyml/texar" -> "NTMC-Community/MatchZoo" ["e"=1]
"asyml/texar" -> "ChenChengKuan/awesome-text-generation"
"asyml/texar" -> "kimiyoung/transformer-xl" ["e"=1]
"asyml/texar" -> "shentianxiao/language-style-transfer"
"asyml/texar" -> "allenai/allennlp" ["e"=1]
"asyml/texar" -> "zihangdai/xlnet" ["e"=1]
"asyml/texar" -> "wiseodd/controlled-text-generation"
"asyml/texar" -> "salesforce/decaNLP" ["e"=1]
"asyml/texar" -> "LantaoYu/SeqGAN"
"asyml/texar" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"asyml/texar" -> "Jiakui/awesome-bert" ["e"=1]
"jakezhaojb/ARAE" -> "shentianxiao/language-style-transfer"
"jakezhaojb/ARAE" -> "ofirnachum/sequence_gan"
"jakezhaojb/ARAE" -> "kefirski/pytorch_RVAE"
"jakezhaojb/ARAE" -> "wiseodd/controlled-text-generation"
"jakezhaojb/ARAE" -> "amirbar/rnn.wgan"
"jakezhaojb/ARAE" -> "zhengliz/natural-adversary" ["e"=1]
"jakezhaojb/ARAE" -> "GBLin5566/toward-controlled-generation-of-text-pytorch"
"jakezhaojb/ARAE" -> "lijuncen/Sentiment-and-Style-Transfer"
"jakezhaojb/ARAE" -> "geek-ai/Texygen"
"jakezhaojb/ARAE" -> "harvardnlp/var-attn" ["e"=1]
"jakezhaojb/ARAE" -> "guxd/DialogWAE" ["e"=1]
"jakezhaojb/ARAE" -> "schelotto/Wasserstein-AutoEncoders" ["e"=1]
"jakezhaojb/ARAE" -> "snakeztc/NeuralDialog-LAED" ["e"=1]
"jakezhaojb/ARAE" -> "artetxem/undreamt" ["e"=1]
"jakezhaojb/ARAE" -> "Nrgeup/controllable-text-attribute-transfer"
"Maluuba/nlg-eval" -> "fuzhenxin/Style-Transfer-in-Text" ["e"=1]
"Maluuba/nlg-eval" -> "teacherpeterpan/Question-Generation-Paper-List" ["e"=1]
"Maluuba/nlg-eval" -> "xinyadu/nqg" ["e"=1]
"Maluuba/nlg-eval" -> "geek-ai/Texygen" ["e"=1]
"Naresh1318/Adversarial_Autoencoder" -> "jakezhaojb/ARAE" ["e"=1]
"ethanluoyc/pytorch-vae" -> "timbmg/Sentence-VAE" ["e"=1]
"suragnair/seqGAN" -> "ZiJianZhao/SeqGAN-PyTorch"
"suragnair/seqGAN" -> "LantaoYu/SeqGAN"
"suragnair/seqGAN" -> "X-czh/SeqGAN-PyTorch"
"suragnair/seqGAN" -> "williamSYSU/TextGAN-PyTorch"
"suragnair/seqGAN" -> "MaximumEntropy/Seq2Seq-PyTorch" ["e"=1]
"suragnair/seqGAN" -> "geek-ai/Texygen"
"suragnair/seqGAN" -> "wiseodd/controlled-text-generation"
"suragnair/seqGAN" -> "CR-Gjx/LeakGAN"
"suragnair/seqGAN" -> "jakezhaojb/ARAE"
"suragnair/seqGAN" -> "jiweil/Neural-Dialogue-Generation" ["e"=1]
"suragnair/seqGAN" -> "GBLin5566/toward-controlled-generation-of-text-pytorch"
"suragnair/seqGAN" -> "lancopku/DPGAN" ["e"=1]
"suragnair/seqGAN" -> "codekansas/seqgan-text-tensorflow"
"suragnair/seqGAN" -> "keon/seq2seq" ["e"=1]
"suragnair/seqGAN" -> "IBM/pytorch-seq2seq" ["e"=1]
"Toni-Antonova/VAE-Text-Generation" -> "NicGian/text_VAE"
"XuezheMax/NeuroNLP2" -> "sheng-z/stog" ["e"=1]
"XuezheMax/NeuroNLP2" -> "harvardnlp/pytorch-struct" ["e"=1]
"eladhoffer/seq2seq.pytorch" -> "wiseodd/controlled-text-generation" ["e"=1]
"eladhoffer/seq2seq.pytorch" -> "jakezhaojb/ARAE" ["e"=1]
"robinsloan/sentence-space" -> "ssemeniuta/textvae"
"jayparks/tf-seq2seq" -> "Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" ["e"=1]
"ywk991112/pytorch-chatbot" -> "timbmg/Sentence-VAE" ["e"=1]
"vitutorial/VITutorial" -> "allenai/acl2018-semantic-parsing-tutorial" ["e"=1]
"vitutorial/VITutorial" -> "harvardnlp/pytorch-struct"
"vitutorial/VITutorial" -> "neulab/compare-mt" ["e"=1]
"vitutorial/VITutorial" -> "uclnlp/jack" ["e"=1]
"deeppavlov/question_generation" -> "indrajithi/genquest"
"deeppavlov/question_generation" -> "bloomsburyai/question-generation"
"deeppavlov/question_generation" -> "xinyadu/nqg"
"deeppavlov/question_generation" -> "sumehta/question-generation"
"deeppavlov/question_generation" -> "dipta-dhar/Automatic-Question-Generator"
"deeppavlov/question_generation" -> "magic282/NQG"
"deeppavlov/question_generation" -> "Maluuba/qgen-workshop"
"deeppavlov/question_generation" -> "yanghoonkim/neural_question_generation"
"deeppavlov/question_generation" -> "bwanglzu/Automatic-Question-Generation"
"deeppavlov/question_generation" -> "ujjax/question-generation"
"deeppavlov/question_generation" -> "atbaker/wikipedia-question-generator"
"deeppavlov/question_generation" -> "davidgolub/QuestionGeneration"
"snakeztc/NeuralDialog-CVAE" -> "timbmg/Sentence-VAE" ["e"=1]
"snakeztc/NeuralDialog-CVAE" -> "sodawater/T-CVAE" ["e"=1]
"ZiJianZhao/SeqGAN-PyTorch" -> "suragnair/seqGAN"
"ZiJianZhao/SeqGAN-PyTorch" -> "X-czh/SeqGAN-PyTorch"
"ZiJianZhao/SeqGAN-PyTorch" -> "LantaoYu/SeqGAN"
"ZiJianZhao/SeqGAN-PyTorch" -> "natnij/seqGAN_pytorch"
"ZiJianZhao/SeqGAN-PyTorch" -> "wiseodd/controlled-text-generation"
"ZiJianZhao/SeqGAN-PyTorch" -> "williamSYSU/TextGAN-PyTorch"
"ZiJianZhao/SeqGAN-PyTorch" -> "ruotianluo/NeuralDialog-CVAE-pytorch" ["e"=1]
"ZiJianZhao/SeqGAN-PyTorch" -> "GBLin5566/toward-controlled-generation-of-text-pytorch"
"harsh19/Shakespearizing-Modern-English" -> "cocoxu/Shakespeare"
"sumehta/question-generation" -> "deeppavlov/question_generation"
"sumehta/question-generation" -> "indrajithi/genquest"
"sumehta/question-generation" -> "dipta-dhar/Automatic-Question-Generator"
"sumehta/question-generation" -> "hemantpugaliya/Automatic-Question-Answer-Generation"
"dreasysnail/textGAN_public" -> "AustinCStone/TextGAN"
"XingxingZhang/dress" -> "cocoxu/simplification"
"XingxingZhang/dress" -> "chaojiang06/wiki-auto"
"XingxingZhang/dress" -> "senisioi/NeuralTextSimplification"
"XingxingZhang/dress" -> "facebookresearch/asset"
"XingxingZhang/dress" -> "Sanqiang/text_simplification"
"XingxingZhang/dress" -> "facebookresearch/access"
"XingxingZhang/dress" -> "feralvam/easse"
"XingxingZhang/dress" -> "YueDongCS/EditNTS"
"XingxingZhang/dress" -> "subramanyamdvss/UnsupNTS"
"sinantie/NeuralAmr" -> "mdtux89/OpenNMT-py-AMR-to-text"
"sinantie/NeuralAmr" -> "freesunshine0316/neural-graph-to-seq-mp"
"sinantie/NeuralAmr" -> "ChunchuanLv/AMR_AS_GRAPH_PREDICTION"
"priya-dwivedi/cs224n-Squad-Project" ["l"="54.755,26.59", "c"=587]
"deeppavlov/question_generation" ["l"="57.276,29.237"]
"asappresearch/sru" ["l"="53.14,25.597", "c"=172]
"LantaoYu/SeqGAN" ["l"="57.813,29.4"]
"TobiasLee/Chinese-Hip-pop-Generation" ["l"="57.897,29.351"]
"GaoQ1/seqgan" ["l"="57.88,29.343"]
"TobiasLee/SeqGAN_Poem" ["l"="57.892,29.365"]
"codekansas/seqgan-text-tensorflow" ["l"="57.85,29.363"]
"ChenChengKuan/SeqGAN_tensorflow" ["l"="57.872,29.363"]
"john-hewitt/structural-probes" ["l"="52.883,25.262", "c"=172]
"miyyer/scpn" ["l"="57.541,29.326"]
"THUDM/KOBE" ["l"="57.551,29.143"]
"ZhihongShao/Planning-based-Hierarchical-Variational-Model" ["l"="57.592,29.178"]
"WHUIR/RAGE" ["l"="57.527,29.121"]
"fuzhenxin/Style-Transfer-in-Text" ["l"="57.665,29.39"]
"shentianxiao/language-style-transfer" ["l"="57.678,29.414"]
"zhijing-jin/Text_Style_Transfer_Survey" ["l"="57.589,29.403"]
"lijuncen/Sentiment-and-Style-Transfer" ["l"="57.639,29.41"]
"asyml/texar" ["l"="57.735,29.417"]
"luofuli/DualRL" ["l"="57.657,29.426"]
"THUNLP-MT/TG-Reading-List" ["l"="57.657,29.344"]
"vineetjohn/linguistic-style-transfer" ["l"="57.64,29.425"]
"uber-research/PPLM" ["l"="53.34,25.91", "c"=172]
"martiansideofthemoon/style-transfer-paraphrase" ["l"="57.586,29.378"]
"Maluuba/nlg-eval" ["l"="58.307,29.128", "c"=665]
"Nrgeup/controllable-text-attribute-transfer" ["l"="57.648,29.399"]
"fastnlp/style-transformer" ["l"="57.62,29.404"]
"geek-ai/Texygen" ["l"="57.748,29.388"]
"shrimai/Style-Transfer-Through-Back-Translation" ["l"="57.664,29.448"]
"thunlp/TAADpapers" ["l"="52.779,25.414", "c"=172]
"jiacheng-xu/vmf_vae_nlp" ["l"="57.695,29.368"]
"jxhe/vae-lagging-encoder" ["l"="57.691,29.389"]
"harvardnlp/sa-vae" ["l"="57.722,29.391"]
"ysmiao/nvdm" ["l"="53.337,26.361", "c"=993]
"nicola-decao/s-vae-pytorch" ["l"="23.093,14.267", "c"=505]
"dallascard/scholar" ["l"="53.334,26.35", "c"=993]
"bohanli/vae-pretraining-encoder" ["l"="57.661,29.363"]
"kefirski/contiguous-succotash" ["l"="57.725,29.344"]
"bojone/vae" ["l"="46.174,29.286", "c"=170]
"timbmg/Sentence-VAE" ["l"="57.705,29.351"]
"chingyaoc/ggnn.pytorch" ["l"="52.977,15.9", "c"=100]
"beckdaniel/acl2018_graph2seq" ["l"="57.654,29.085"]
"google-research-datasets/paws" ["l"="57.488,29.327"]
"wasiahmad/paraphrase_identification" ["l"="57.495,29.294"]
"neulab/compare-mt" ["l"="53.854,24.762", "c"=492]
"google-research-datasets/tydiqa" ["l"="54.657,25.438", "c"=439]
"Vamsi995/Paraphrase-Generator" ["l"="57.471,29.359"]
"FranxYao/dgm_latent_bow" ["l"="57.531,29.378"]
"jwieting/para-nmt-50m" ["l"="57.51,29.311"]
"nelson-liu/contextual-repr-analysis" ["l"="52.925,25.291", "c"=172]
"Tiiiger/bert_score" ["l"="58.292,29.049", "c"=665]
"seominjoon/piqa" ["l"="54.814,26.344", "c"=587]
"malllabiisc/SGCP" ["l"="57.545,29.342"]
"mrqa/MRQA-Shared-Task-2019" ["l"="54.744,26.404", "c"=587]
"google-research/lasertagger" ["l"="52.88,24.377", "c"=1203]
"facebookresearch/anli" ["l"="54.572,25.442", "c"=439]
"vsuthichai/paraphraser" ["l"="57.501,29.341"]
"zihangdai/mos" ["l"="53.213,25.537", "c"=172]
"kelvinguu/neural-editor" ["l"="57.678,29.354"]
"harvardnlp/pytorch-struct" ["l"="57.622,29.477"]
"google-deepmind/narrativeqa" ["l"="54.724,26.475", "c"=587]
"xinyadu/nqg" ["l"="57.318,29.257"]
"ipython/xkcd-font" ["l"="57.422,28.894"]
"mamaral/xkcd-Open-Source" ["l"="57.396,28.858"]
"tasdikrahman/xkcd-dl" ["l"="59.846,34.171", "c"=699]
"salesforce/decaNLP" ["l"="53.027,25.606", "c"=172]
"microsoft/NeuronBlocks" ["l"="53.329,27.334", "c"=60]
"nyu-mll/jiant" ["l"="52.948,25.537", "c"=172]
"dmlc/gluon-nlp" ["l"="53.071,25.619", "c"=172]
"rtqichen/beta-tcvae" ["l"="23.056,14.247", "c"=505]
"weilinie/RelGAN" ["l"="57.78,29.322"]
"elvisyjlin/RelGAN-PyTorch" ["l"="46.045,28.806", "c"=170]
"graykode/gpt-2-Pytorch" ["l"="53.404,25.84", "c"=172]
"rikdz/GraphWriter" ["l"="57.631,29.191"]
"lancopku/Graph-to-seq-comment-generation" ["l"="57.553,29.252"]
"ChenChengKuan/awesome-text-generation" ["l"="57.726,29.364"]
"THUNLP-AIPoet/PaperList" ["l"="53.513,28.068", "c"=60]
"wyu97/KENLG-Reading" ["l"="50.642,2.804", "c"=85]
"asyml/texar-pytorch" ["l"="57.701,29.406"]
"FranxYao/Deep-Generative-Models-for-Natural-Language-Processing" ["l"="57.58,29.437"]
"atulkum/pointer_summarizer" ["l"="58.409,29.081", "c"=665]
"THUNLP-MT/MT-Reading-List" ["l"="53.786,24.715", "c"=492]
"lipiji/Guyu" ["l"="49.228,23.766", "c"=125]
"yaserkl/RLSeq2Seq" ["l"="58.455,29.062", "c"=665]
"iwangjian/Paper-Reading-ConvAI" ["l"="56.723,29.056", "c"=310]
"keitakurita/Practical_NLP_in_PyTorch" ["l"="53.997,27.081", "c"=60]
"dreasysnail/deconv_paragraph_represention" ["l"="53.483,28.67", "c"=1200]
"dreasysnail/textGAN_public" ["l"="57.895,29.386"]
"IntelLabs/nlp-architect" ["l"="52.943,25.66", "c"=172]
"dipta-dhar/Automatic-Question-Generator" ["l"="57.254,29.254"]
"holylovenia/question-answer-generation" ["l"="57.269,29.281"]
"indrajithi/genquest" ["l"="57.273,29.254"]
"sumehta/question-generation" ["l"="57.243,29.239"]
"Maluuba/qgen-workshop" ["l"="57.226,29.221"]
"keon/seq2seq" ["l"="53.231,25.621", "c"=172]
"suragnair/seqGAN" ["l"="57.78,29.391"]
"IBM/Graph2Seq" ["l"="35.898,-0.305", "c"=315]
"hugochan/RL-based-Graph2Seq-for-NQG" ["l"="57.413,29.228"]
"diegma/graph-2-text" ["l"="57.658,29.122"]
"freesunshine0316/neural-graph-to-seq-mp" ["l"="57.687,29.057"]
"jcyk/gtos" ["l"="57.603,29.132"]
"QAQ-v/HetGT" ["l"="57.612,29.085"]
"jcyk/AMR-gs" ["l"="57.714,29.026"]
"timbmg/VAE-CVAE-MNIST" ["l"="46.233,29.354", "c"=170]
"williamFalcon/test-tube" ["l"="51.131,29.717", "c"=83]
"Yifan-Gao/Distractor-Generation-RACE" ["l"="57.233,29.342"]
"voidful/BDG" ["l"="57.235,29.363"]
"harrylclc/LTR-DG" ["l"="57.183,29.367"]
"gauthierdmn/question_generation" ["l"="57.327,29.285"]
"seanie12/neural-question-generation" ["l"="57.356,29.249"]
"agusgun/qag-web" ["l"="57.284,29.294"]
"yanghoonkim/neural_question_generation" ["l"="57.311,29.241"]
"NicGian/text_VAE" ["l"="57.82,29.433"]
"alexeyev/Keras-Generating-Sentences-from-a-Continuous-Space" ["l"="57.845,29.442"]
"Toni-Antonova/VAE-Text-Generation" ["l"="57.848,29.461"]
"ChunchuanLv/AMR_AS_GRAPH_PREDICTION" ["l"="57.699,29"]
"Oneplus/tamr" ["l"="57.702,28.979"]
"sheng-z/stog" ["l"="57.716,29"]
"mdtux89/amr-eager" ["l"="57.691,28.984"]
"sinantie/NeuralAmr" ["l"="57.694,29.028"]
"jflanigan/jamr" ["l"="57.731,28.992"]
"c-amr/camr" ["l"="57.722,28.971"]
"amrisi/amr-guidelines" ["l"="57.743,28.974"]
"summarization/semantic_summ" ["l"="57.807,28.978"]
"goodmami/penman" ["l"="57.735,29.003"]
"IBM/transition-amr-parser" ["l"="57.765,29.005"]
"bjascob/amrlib" ["l"="57.753,28.994"]
"snowblink14/smatch" ["l"="57.711,28.987"]
"panx27/amr-reader" ["l"="57.728,28.95"]
"mdtux89/amr-evaluation" ["l"="57.711,29.01"]
"cfmrp/mtool" ["l"="57.724,28.906"]
"RikVN/AMR" ["l"="57.736,29.025"]
"changwookjun/nlp-paper" ["l"="53.519,27.125", "c"=60]
"KristiyanVachev/Question-Generation" ["l"="57.308,29.3"]
"KristiyanVachev/Leaf-Question-Generation" ["l"="57.295,29.341"]
"patil-suraj/question_generation" ["l"="57.345,29.309"]
"ramsrigouthamg/Questgen.ai" ["l"="57.371,29.342"]
"teacherpeterpan/Question-Generation-Paper-List" ["l"="57.342,29.28"]
"AMontgomerie/question_generator" ["l"="57.317,29.322"]
"bloomsburyai/question-generation" ["l"="57.303,29.258"]
"adityasarvaiya/Automatic_Question_Generation" ["l"="57.254,29.269"]
"ujjax/question-generation" ["l"="57.291,29.283"]
"YuxiXie/SG-Deep-Question-Generation" ["l"="57.366,29.273"]
"bisheng/Awesome-QG" ["l"="57.341,29.255"]
"wohlert/semi-supervised-pytorch" ["l"="23.035,14.311", "c"=505]
"kefirski/pytorch_RVAE" ["l"="57.684,29.333"]
"nikitakit/self-attentive-parser" ["l"="52.919,25.194", "c"=172]
"iamaaditya/neural-paraphrase-generation" ["l"="57.527,29.319"]
"paulx3/keras_generative_pg" ["l"="57.565,29.331"]
"leechihahchiu/DRLParaphrase" ["l"="57.544,29.295"]
"ale3otik/paraphrases-generator" ["l"="57.558,29.321"]
"arvind385801/paraphraseGen" ["l"="57.528,29.344"]
"malllabiisc/DiPS" ["l"="57.531,29.357"]
"lancopku/WEAN" ["l"="58.564,29.093", "c"=665]
"HarshTrivedi/paraphrase-generation" ["l"="57.536,29.31"]
"mingdachen/syntactic-template-generation" ["l"="57.561,29.306"]
"PrithivirajDamodaran/Parrot_Paraphraser" ["l"="57.444,29.351"]
"badripatro/PQG" ["l"="57.467,29.305"]
"ramsrigouthamg/Paraphrase-any-question-with-T5-Text-To-Text-Transfer-Transformer-" ["l"="57.45,29.373"]
"websymphony/paraphrasing-tool" ["l"="57.46,29.332"]
"wyu-du/Reinforce-Paraphrase-Generation" ["l"="57.512,29.364"]
"dev-chauhan/PQG-pytorch" ["l"="57.495,29.365"]
"davidgolub/QuestionGeneration" ["l"="57.297,29.233"]
"magic282/NQG" ["l"="57.324,29.244"]
"harvardnlp/var-attn" ["l"="53.903,24.595", "c"=492]
"salesforce/pytorch-qrnn" ["l"="53.158,25.566", "c"=172]
"salesforce/matchbox" ["l"="53.862,24.659", "c"=492]
"williamSYSU/TextGAN-PyTorch" ["l"="57.751,29.353"]
"ZiJianZhao/SeqGAN-PyTorch" ["l"="57.779,29.409"]
"CR-Gjx/LeakGAN" ["l"="57.793,29.377"]
"Nrgeup/SentiGAN" ["l"="57.773,29.363"]
"lancopku/DPGAN" ["l"="58.587,29.103", "c"=665]
"rpryzant/delete_retrieve_generate" ["l"="57.613,29.421"]
"VideoOS/VideoOS-iOS-SDK" ["l"="-51.647,-14.958", "c"=788]
"xksoft/xky" ["l"="-51.579,-14.962", "c"=788]
"ljphilp/vue-element-super" ["l"="57.704,29.495"]
"airuikun/crawler-node" ["l"="-51.628,-14.938", "c"=788]
"luofuli/Fine-grained-Sentiment-Transfer" ["l"="57.682,29.468"]
"entanmo/etm" ["l"="-51.57,-14.951", "c"=788]
"mxdldev/android-fly-refreshlayout" ["l"="-51.593,-14.962", "c"=788]
"ChenWu98/Point-Then-Operate" ["l"="57.622,29.432"]
"neowei/base-architect" ["l"="-51.674,-14.874", "c"=788]
"airuikun/react-dnd" ["l"="-51.582,-14.949", "c"=788]
"Chung-I/Variational-Recurrent-Autoencoder-Tensorflow" ["l"="57.731,29.32"]
"wiseodd/controlled-text-generation" ["l"="57.711,29.378"]
"snakeztc/NeuralDialog-CVAE" ["l"="56.618,29.067", "c"=310]
"ChunyuanLI/Optimus" ["l"="57.646,29.323"]
"rohithreddy024/VAE-Text-Generation" ["l"="57.719,29.29"]
"ChenRocks/fast_abs_rl" ["l"="58.398,29.071", "c"=665]
"sodawater/T-CVAE" ["l"="57.673,29.286"]
"iconix/pytorch-text-vae" ["l"="57.734,29.267"]
"ElizaLo/NLP-Natural-Language-Processing" ["l"="52.762,25.716", "c"=172]
"yzhangcs/parser" ["l"="52.898,25.162", "c"=172]
"nesl/nlp_adversarial_examples" ["l"="52.792,25.314", "c"=172]
"Walleclipse/AGPC" ["l"="57.542,29.225"]
"indrajithi/question_generation" ["l"="57.229,29.251"]
"atbaker/wikipedia-question-generator" ["l"="57.256,29.22"]
"Konigari/Automatic-Question-Generation-Using-Relative-Pronuons-and-Adverbs" ["l"="57.236,29.262"]
"soskek/bookcorpus" ["l"="53.272,25.671", "c"=172]
"vitutorial/VITutorial" ["l"="57.589,29.498"]
"graykode/xlnet-Pytorch" ["l"="53.683,27.107", "c"=60]
"schelotto/Wasserstein-AutoEncoders" ["l"="22.921,14.25", "c"=505]
"jakezhaojb/ARAE" ["l"="57.732,29.378"]
"jiweil/Neural-Dialogue-Generation" ["l"="56.592,29.076", "c"=310]
"ofirnachum/sequence_gan" ["l"="57.8,29.362"]
"abisee/pointer-generator" ["l"="58.397,29.109", "c"=665]
"allenai/acl2018-semantic-parsing-tutorial" ["l"="37.593,-1.715", "c"=999]
"harvardnlp/neural-template-gen" ["l"="37.695,-2.229", "c"=1210]
"ZJULearning/ReDR" ["l"="57.405,29.201"]
"Yifan-Gao/conversational-QG" ["l"="57.381,29.206"]
"YueDongCS/EditNTS" ["l"="57.762,28.66"]
"subramanyamdvss/UnsupNTS" ["l"="57.803,28.676"]
"ddhruvkr/Edit-Unsup-TS" ["l"="57.738,28.649"]
"FranxYao/Gumbel-CRF" ["l"="57.531,29.479"]
"fangleai/Implicit-LVM" ["l"="57.627,29.448"]
"FranxYao/Distributional-Generalization-in-Natural-Language-Processing" ["l"="57.555,29.474"]
"NingMiao/CGMH" ["l"="57.622,29.31"]
"julianser/hed-dlg-truncated" ["l"="56.606,29.037", "c"=310]
"deep-spin/entmax" ["l"="23.198,14.956", "c"=505]
"UKPLab/kg2text" ["l"="57.627,29.154"]
"UKPLab/plms-graph2text" ["l"="37.792,-2.161", "c"=1210]
"AkariAsai/learning_to_retrieve_reasoning_paths" ["l"="54.515,25.526", "c"=439]
"wenhuchen/KGPT" ["l"="37.812,-2.183", "c"=1210]
"AmitMY/chimera" ["l"="57.658,29.149"]
"yeliu918/KG-BART" ["l"="55.753,25.97", "c"=1119]
"INK-USC/KagNet" ["l"="55.729,25.979", "c"=1119]
"yicheng-w/CommonSenseMultiHopQA" ["l"="54.802,26.452", "c"=587]
"WING-NUS/SG-Deep-Question-Generation" ["l"="57.379,29.248"]
"ZhangShiyue/QGforQA" ["l"="57.345,29.242"]
"qjzhzw/Open_QG" ["l"="57.32,29.206"]
"liyuanfang/mhqg" ["l"="57.236,29.288"]
"BangLiu/ACS-QG" ["l"="57.379,29.23"]
"BangLiu/QG" ["l"="57.334,29.216"]
"YuxiXie/RL-for-Question-Generation" ["l"="57.383,29.26"]
"PrekshaNema25/RefNet-QG" ["l"="57.327,29.232"]
"EagleW/PaperRobot" ["l"="57.536,29.061"]
"baidu/knowledge-driven-dialogue" ["l"="56.703,29.073", "c"=310]
"EagleW/ReviewRobot" ["l"="57.519,29.04"]
"liuyuemaicha/Adversarial-Learning-for-Neural-Dialogue-Generation-in-Tensorflow" ["l"="56.536,29.058", "c"=310]
"AustinCStone/TextGAN" ["l"="57.865,29.39"]
"amirbar/rnn.wgan" ["l"="57.775,29.348"]
"BLLIP/bllip-parser" ["l"="57.756,28.911"]
"dmcc/PyStanfordDependencies" ["l"="57.776,28.881"]
"iesl/diora" ["l"="52.945,25.247", "c"=172]
"FilippoC/diffdp" ["l"="57.51,29.504"]
"mingdachen/disentangle-semantics-syntax" ["l"="57.602,29.32"]
"tom-pelsmaeker/deep-generative-lm" ["l"="57.593,29.29"]
"harvardnlp/urnng" ["l"="52.932,25.233", "c"=172]
"cfmrp/tutorial" ["l"="57.697,28.93"]
"delph-in/pydelphin" ["l"="57.692,28.896"]
"daib13/TwoStageVAE" ["l"="23.079,14.246", "c"=505]
"Schlumberger/joint-vae" ["l"="23.05,14.274", "c"=505]
"jfilter/clean-text" ["l"="52.603,25.667", "c"=172]
"PrithivirajDamodaran/Styleformer" ["l"="57.5,29.389"]
"huggingface/naacl_transfer_learning_tutorial" ["l"="23.497,14.916", "c"=728]
"MaximumEntropy/Seq2Seq-PyTorch" ["l"="53.165,25.589", "c"=172]
"EdinburghNLP/XSum" ["l"="58.353,29.049", "c"=665]
"GBLin5566/toward-controlled-generation-of-text-pytorch" ["l"="57.751,29.372"]
"XuezheMax/NeuroNLP2" ["l"="52.958,25.172", "c"=172]
"jxhe/struct-learning-with-flow" ["l"="52.929,25.11", "c"=172]
"sajadn/posterior-collapse-list" ["l"="57.707,29.451"]
"pclucas14/GansFallingShort" ["l"="57.725,29.447"]
"guxd/DialogWAE" ["l"="56.64,29.04", "c"=310]
"fuzhenxin/text_style_transfer" ["l"="57.648,29.447"]
"lancopku/Unpaired-Sentiment-Translation" ["l"="58.595,29.083", "c"=665]
"harsh19/Shakespearizing-Modern-English" ["l"="57.644,29.525"]
"parajain/uctf" ["l"="57.678,29.484"]
"accelerated-text/awesome-nlg" ["l"="12.962,-8.65", "c"=18]
"salesforce/ctrl" ["l"="53.262,25.783", "c"=172]
"CLUEbenchmark/CLGE" ["l"="53.422,27.081", "c"=60]
"snakeztc/NeuralDialog-LAED" ["l"="56.618,29.079", "c"=310]
"ssemeniuta/textvae" ["l"="57.758,29.327"]
"fuzhenxin/Personal-Emotional-Stylized-Dialog" ["l"="56.679,29.067", "c"=310]
"tolstikhin/wae" ["l"="22.975,14.265", "c"=505]
"baoy-nlp/DSS-VAE" ["l"="57.616,29.369"]
"cindyxinyiwang/deep-latent-sequence-model" ["l"="57.59,29.358"]
"XiaoyuanYi/StyIns" ["l"="57.565,29.385"]
"marcotcr/sears" ["l"="52.772,25.312", "c"=172]
"pmichel31415/teapot-nlp" ["l"="52.797,25.289", "c"=172]
"tagoyal/sow-reap-paraphrasing" ["l"="57.576,29.319"]
"h3lio5/linguistic-style-transfer-pytorch" ["l"="57.66,29.482"]
"agaralabs/transformer-drg-style-transfer" ["l"="57.607,29.409"]
"VAShibaev/text_style_transfer" ["l"="57.627,29.393"]
"GajjarMihir/Topic-Based-Question-Generation" ["l"="57.198,29.204"]
"ctr4si/A-Hierarchical-Latent-Structure-for-Variational-Conversation-Modeling" ["l"="56.654,29.023", "c"=310]
"yanghoonkim/NQG_ASs2s" ["l"="57.338,29.231"]
"nicola-decao/s-vae-tf" ["l"="23.099,14.2", "c"=505]
"hadyelsahar/Zeroshot-QuestionGeneration" ["l"="57.192,29.295"]
"wavewangyue/NLPCC-MH" ["l"="57.162,29.299"]
"xdqkid/S2S-AMR-Parser" ["l"="57.748,29.046"]
"amyxzhang/wikum" ["l"="57.192,29.26"]
"freesunshine0316/MPQG" ["l"="57.315,29.223"]
"danielhers/tupa" ["l"="57.739,28.849"]
"huji-nlp/ucca" ["l"="57.732,28.868"]
"janmbuys/DeepDeepParser" ["l"="57.707,28.884"]
"longxudou/HIT-SCIR-CoNLL2019" ["l"="57.729,28.884"]
"zichaow/QG-Net" ["l"="57.352,29.223"]
"PrekshaNema25/Answerability-Metric" ["l"="57.356,29.205"]
"shaohua0116/VAE-Tensorflow" ["l"="46.185,29.346", "c"=170]
"searchableai/ChainCQG" ["l"="57.385,29.181"]
"hugochan/Graph2Seq-for-KGQG" ["l"="57.257,29.296"]
"fuzhenxin/textstyletransferdata" ["l"="57.634,29.437"]
"passeul/style-transfer-model-evaluation" ["l"="57.602,29.442"]
"haofuml/cyclical_annealing" ["l"="57.772,29.472"]
"zheng-yanan/techniques-for-kl-vanishing" ["l"="57.79,29.501"]
"raosudha89/GYAFC-corpus" ["l"="57.597,29.424"]
"jimth001/formality_emnlp19" ["l"="58.625,16.979", "c"=803]
"lvyiwei1/StylePTB" ["l"="57.573,29.414"]
"cookielee77/DAST" ["l"="57.606,29.393"]
"feralvam/easse" ["l"="57.804,28.659"]
"chaojiang06/wiki-auto" ["l"="57.787,28.651"]
"facebookresearch/access" ["l"="57.823,28.67"]
"cocoxu/simplification" ["l"="57.802,28.688"]
"facebookresearch/asset" ["l"="57.775,28.673"]
"facebookresearch/muss" ["l"="57.819,28.651"]
"senisioi/NeuralTextSimplification" ["l"="57.789,28.694"]
"jantrienes/text-simplification-datasets" ["l"="57.833,28.634"]
"Sanqiang/text_simplification" ["l"="57.776,28.686"]
"ghpaetzold/massalign" ["l"="57.8,28.632"]
"qiang2100/BERT-LS" ["l"="57.816,28.618"]
"XingxingZhang/dress" ["l"="57.79,28.671"]
"malllabiisc/WordGCN" ["l"="55.707,26.722", "c"=464]
"gsh199449/productqa" ["l"="57.505,29.106"]
"shentianxiao/text-autoencoders" ["l"="57.622,29.352"]
"facebookresearch/MultipleAttributeTextRewriting" ["l"="57.548,29.504"]
"FranxYao/pivot_analysis" ["l"="57.57,29.457"]
"nsaphra/AMRICA" ["l"="57.65,28.928"]
"nschneid/amr-hackathon" ["l"="57.671,28.943"]
"pfnet-research/contextual_augmentation" ["l"="52.82,25.984", "c"=172]
"freesunshine0316/semantic-nmt" ["l"="57.694,29.077"]
"Amazing-J/structural-transformer" ["l"="57.646,29.061"]
"freesunshine0316/nary-grn" ["l"="55.694,26.711", "c"=464]
"mdtux89/OpenNMT-py-AMR-to-text" ["l"="57.671,29.061"]
"tyliupku/ChineseQG" ["l"="57.301,29.168"]
"martiansideofthemoon/squash-generation" ["l"="57.371,29.158"]
"martiansideofthemoon/squash-website" ["l"="57.362,29.134"]
"zhaochaocs/DualEnc" ["l"="57.637,29.133"]
"ThiagoCF05/webnlg" ["l"="37.673,-2.262", "c"=1210]
"bastings/neuralmonkey" ["l"="57.682,29.117"]
"dreasysnail/POINTER" ["l"="57.633,29.29"]
"Nrgeup/EasyNLP" ["l"="57.817,29.333"]
"Nrgeup/funny_tool" ["l"="57.821,29.347"]
"ablodge/amr-utils" ["l"="57.786,28.998"]
"ablodge/leamr" ["l"="57.817,28.997"]
"eliorsulem/SAMSA" ["l"="57.77,28.755"]
"eliorsulem/simplification-acl2018" ["l"="57.772,28.729"]
"DSKSD/Controlled_Text_Generation" ["l"="57.794,29.342"]
"tag-and-generate/tagger-generator" ["l"="52.205,24.91", "c"=172]
"fangleai/TransformerCVAE" ["l"="57.66,29.263"]
"zlinao/Variational-Transformer" ["l"="56.747,29.121", "c"=310]
"leuchine/S-LSTM" ["l"="57.721,29.077"]
"HanGuo97/MultitaskSimplification" ["l"="57.819,28.705"]
"DRSY/DGen" ["l"="57.147,29.39"]
"JohnSnowLabs/nlu" ["l"="52.491,25.64", "c"=172]
"PrithivirajDamodaran/Gramformer" ["l"="57.409,29.377"]
"seanie12/Info-HCVAE" ["l"="57.31,29.281"]
"algolet/question_generation" ["l"="57.278,29.307"]
"awslabs/unsupervised-qa" ["l"="57.261,29.314"]
"thunlp/StyleAttack" ["l"="38.407,-7.806", "c"=1088]
"zhijing-jin/IMaT" ["l"="57.613,29.382"]
"renatoviolin/T5-paraphrase-generation" ["l"="57.447,29.396"]
"asahi417/lm-question-generation" ["l"="57.314,29.359"]
"danqi/acl2020-openqa-tutorial" ["l"="54.495,25.53", "c"=439]
"artitw/text2text" ["l"="57.33,29.338"]
"neubig/lowresource-nlp-bootcamp-2020" ["l"="52.812,25.546", "c"=172]
"AudayBerro/automatedParaphrase" ["l"="57.467,29.396"]
"filyp/autocorrect" ["l"="52.808,24.318", "c"=1203]
"obsei/obsei" ["l"="57.383,29.409"]
"boudinfl/pke" ["l"="52.501,25.791", "c"=172]
"grammarly/gector" ["l"="52.809,24.407", "c"=1203]
"ml-jku/hopfield-layers" ["l"="23.711,14.926", "c"=728]
"facebookresearch/higher" ["l"="57.824,19.464", "c"=433]
"graph4ai/graph4nlp" ["l"="52.745,16.131", "c"=100]
"roemmele/answerquest" ["l"="57.277,29.337"]
"apache/opennlp" ["l"="-2.936,14.548", "c"=43]
"CogComp/cogcomp-nlp" ["l"="57.816,28.937"]
"neuspell/neuspell" ["l"="52.786,24.368", "c"=1203]
"abhimishra91/transformers-tutorials" ["l"="53.325,27.014", "c"=60]
"patil-suraj/exploring-T5" ["l"="57.759,29.2"]
"renatoviolin/next_word_prediction" ["l"="52.702,25.427", "c"=172]
"allenai/allennlp-models" ["l"="54.147,27.359", "c"=60]
"Shivanandroy/T5-Finetuning-PyTorch" ["l"="57.734,29.222"]
"tanyuqian/progressive-generation" ["l"="53.583,26.283", "c"=172]
"WHUIR/PPVAE" ["l"="57.614,29.242"]
"Smerity/sha-rnn" ["l"="53.204,27.143", "c"=60]
"jind11/TextFooler" ["l"="52.772,25.364", "c"=172]
"NLPCode/CBART" ["l"="57.622,29.263"]
"jwzhanggy/Graph-Bert" ["l"="52.648,16.063", "c"=100]
"harvardnlp/compound-pcfg" ["l"="52.926,25.251", "c"=172]
"facebookresearch/XLM" ["l"="53.036,25.657", "c"=172]
"h3lio5/episodic-lifelong-learning" ["l"="57.674,29.527"]
"h3lio5/gan-pytorch" ["l"="57.661,29.515"]
"h3lio5/dynamic-coattention-networks-pytorch" ["l"="57.675,29.51"]
"subhash2000/iOS_3D_Scanner" ["l"="57.665,29.506"]
"chho33/LAMOL" ["l"="57.684,29.564"]
"microsoft/fastseq" ["l"="48.903,33.97", "c"=556]
"SapienzaNLP/spring" ["l"="57.751,29.012"]
"zhangzx-uiuc/AMR-IE" ["l"="57.8,29.028"]
"IBM/graph_ensemble_learning" ["l"="57.77,28.988"]
"goodbai-nlp/AMRBART" ["l"="57.762,29.021"]
"bjascob/amrlib-models" ["l"="57.786,29.01"]
"IBM/docAMR" ["l"="57.811,29.013"]
"propbank/propbank-frames" ["l"="57.775,28.967"]
"guangyliu/LatentOps" ["l"="45.968,30.718", "c"=367]
"Fraser-Greenlee/transformer-vae" ["l"="57.673,29.237"]
"seongminp/transformers-into-vaes" ["l"="57.651,29.236"]
"sion-zcfei/CQG" ["l"="57.396,29.274"]
"RUCKBReasoning/DSM" ["l"="57.226,29.307"]
"renatoviolin/Multiple-Choice-Question-Generation-T5-and-Text2Text" ["l"="52.688,25.354", "c"=172]
"nlpdata/dialogre" ["l"="55.624,26.771", "c"=464]
"JiaQiSJTU/DialogueRelationClassification" ["l"="57.093,29.404"]
"ontonotes/conll-formatted-ontonotes-5.0" ["l"="53.364,27.618", "c"=60]
"propbank/propbank-release" ["l"="57.775,28.946"]
"aniketmaurya/chitra" ["l"="57.368,29.461"]
"gradsflow/gradsflow-automl" ["l"="57.344,29.452"]
"nschneid/amr-tutorial" ["l"="57.708,28.964"]
"tomhosking/separator" ["l"="57.551,29.363"]
"pkumod/CKBQA" ["l"="55.576,26.06", "c"=1119]
"tingofurro/keep_it_simple" ["l"="57.845,28.654"]
"Kvasirs/MILES" ["l"="57.858,28.674"]
"RLSNLP/Document-level-text-simplification" ["l"="57.779,28.623"]
"KimChengSHEANG/TS_T5" ["l"="57.766,28.634"]
"sodawater/GraphTransformer" ["l"="57.592,29.072"]
"Soistesimmer/AMR-multiview" ["l"="57.603,29.062"]
"voidism/L2KD" ["l"="57.68,29.586"]
"SALT-NLP/Adaptive-Compositional-Modules" ["l"="57.698,29.591"]
"JiaQiSJTU/ResponseSelection" ["l"="57.101,29.393"]
"JiaQiSJTU/QAmatching" ["l"="57.115,29.394"]
"DRSY/LAMP" ["l"="57.125,29.406"]
"tunib-ai/parallelformers" ["l"="-5.186,-23.235", "c"=164]
"erre-quadro/spikex" ["l"="52.402,25.557", "c"=172]
"simonepri/lm-scorer" ["l"="52.564,24.939", "c"=172]
"infinitylogesh/mutate" ["l"="52.24,25.592", "c"=172]
"cdpierse/transformers-interpret" ["l"="52.586,25.694", "c"=172]
"deepset-ai/FARM" ["l"="52.738,25.6", "c"=172]
"NorskRegnesentral/skweak" ["l"="52.47,25.62", "c"=172]
"argilla-io/argilla" ["l"="52.528,25.718", "c"=172]
"MaartenGr/PolyFuzz" ["l"="52.49,25.706", "c"=172]
"MilaNLProc/contextualized-topic-models" ["l"="52.541,25.658", "c"=172]
"ml-tooling/opyrator" ["l"="45.064,26.072", "c"=68]
"ivan-bilan/The-NLP-Pandect" ["l"="52.746,25.694", "c"=172]
"huggingface/awesome-huggingface" ["l"="38.584,-0.838", "c"=39]
"Lightning-Universe/lightning-flash" ["l"="51.035,29.615", "c"=83]
"strib/scigen" ["l"="57.464,28.962"]
"strib/scipher" ["l"="57.478,28.927"]
"neldredge/mathgen" ["l"="57.426,28.953"]
"RasaHQ/paraphraser" ["l"="57.42,29.327"]
"GEM-benchmark/NL-Augmenter" ["l"="52.667,25.643", "c"=172]
"google-research/pegasus" ["l"="58.354,29.067", "c"=665]
"makcedward/nlpaug" ["l"="52.729,25.717", "c"=172]
"awasthiabhijeet/PIE" ["l"="52.813,24.426", "c"=1203]
"UKPLab/EasyNMT" ["l"="52.569,25.727", "c"=172]
"abhishekkrthakur/tez" ["l"="47.879,26.597", "c"=323]
"gordicaleksa/pytorch-original-transformer" ["l"="44.837,28.597", "c"=771]
"chrisjbryant/errant" ["l"="52.832,24.409", "c"=1203]
"jxmorris12/language_tool_python" ["l"="-1.161,3.324", "c"=258]
"jalammar/ecco" ["l"="52.653,25.662", "c"=172]
"Ki6an/fastT5" ["l"="38.673,-0.684", "c"=39]
"Shivanandroy/simpleT5" ["l"="57.694,29.259"]
"Lightning-AI/tutorials" ["l"="51.111,29.541", "c"=83]
"styfeng/DataAug4NLP" ["l"="52.673,25.732", "c"=172]
"DRSY/MoTIS" ["l"="57.111,29.409"]
"Wangdoudou8/text-summarization-csdn" ["l"="57.709,29.238"]
"WorkInTheDark/FairytaleQA_QAG_System" ["l"="57.267,29.406"]
"meghabyte/acl2021-education" ["l"="57.284,29.367"]
"google-research/long-range-arena" ["l"="48.916,34.009", "c"=556]
"AndyChiangSH/CDGP" ["l"="57.189,29.38"]
"LeoLaugier/conditional-auto-encoder-text-to-text-transfer-transformer" ["l"="57.555,29.424"]
"laihuiyuan/pre-trained-formality-transfer" ["l"="57.546,29.412"]
"jind11/TitleStylist" ["l"="57.544,29.44"]
"Fraser-Greenlee/T5-VAE" ["l"="57.673,29.211"]
"shmpanski/t-vae" ["l"="57.694,29.206"]
"cocoxu/Shakespeare" ["l"="57.639,29.552"]
"sheffieldnlp/AMR2Text-summ" ["l"="57.838,28.969"]
"ellej16/SumMe" ["l"="57.836,28.983"]
"XiangLi1999/Diffusion-LM" ["l"="45.967,30.736", "c"=367]
"facebookarchive/MemNN" ["l"="46.112,27.804", "c"=277]
"mynlp/ccg2lambda" ["l"="55.665,26.359", "c"=1119]
"facebookresearch/playtorch" ["l"="46.837,-24.133", "c"=656]
"CogComp/cogcomp-nlpy" ["l"="57.85,28.905"]
"CogComp/talen" ["l"="57.862,28.931"]
"Noahs-ARK/semafor" ["l"="53.73,28.765", "c"=1200]
"allenai/semanticilp" ["l"="57.824,28.911"]
"carpedm20/MemN2N-tensorflow" ["l"="46.129,27.849", "c"=277]
"sherjilozair/char-rnn-tensorflow" ["l"="46.238,27.763", "c"=277]
"tokestermw/tensorflow-shakespeare" ["l"="53.651,24.774", "c"=492]
"uci-soe/FairytaleQAData" ["l"="57.25,29.426"]
"zhaozj89/Educational-Question-Generation" ["l"="57.239,29.415"]
"UKPLab/StructAdapt" ["l"="57.786,29.044"]
"neuhai/FairytaleQA_Dataset" ["l"="57.269,29.422"]
"mayubo2333/PAIE" ["l"="54.256,28.786", "c"=1076]
"blmoistawinde/fense" ["l"="57.118,29.43"]
"brmson/dataset-sts" ["l"="53.027,25.458", "c"=172]
"carpedm20/variational-text-tensorflow" ["l"="53.382,26.364", "c"=993]
"y0ast/VAE-TensorFlow" ["l"="46.157,29.339", "c"=170]
"clue-ai/PromptCLUE" ["l"="39.171,-2.222", "c"=202]
"olofmogren/c-rnn-gan" ["l"="-9.852,12.862", "c"=105]
"jych/nips2015_vrnn" ["l"="45.001,27.623", "c"=789]
"facebookarchive/MIXER" ["l"="46.026,27.713", "c"=277]
"cheng6076/Variational-LSTM-Autoencoder" ["l"="57.738,29.293"]
"rsarxiv/seq2seq-attention" ["l"="57.773,29.259"]
"unum-cloud/uform" ["l"="-1.226,4.146", "c"=576]
"DavidGrangier/wikipedia-biography-dataset" ["l"="37.686,-2.211", "c"=1210]
"igul222/improved_wgan_training" ["l"="45.897,29.126", "c"=170]
"martinarjovsky/WassersteinGAN" ["l"="45.883,29.153", "c"=170]
"google/seq2seq" ["l"="53.179,25.669", "c"=172]
"wiseodd/generative-models" ["l"="45.835,29.145", "c"=170]
"geek-ai/irgan" ["l"="57.923,23.306", "c"=161]
"Kyubyong/transformer" ["l"="53.233,25.678", "c"=172]
"nelson-liu/paraphrase-id-tensorflow" ["l"="53.051,27.478", "c"=60]
"tokestermw/text-gan-tensorflow" ["l"="57.898,29.407"]
"rajpurkar/SQuAD-explorer" ["l"="46.063,27.824", "c"=277]
"XingxingZhang/pysari" ["l"="57.831,28.695"]
"iwyoo/LSTM-autoencoder" ["l"="52.532,14.654", "c"=569]
"tensorflow/fold" ["l"="46.192,27.87", "c"=277]
"ericjang/gumbel-softmax" ["l"="53.219,29.886", "c"=547]
"Maluuba/newsqa" ["l"="54.707,26.425", "c"=587]
"Lightning-AI/litData" ["l"="38.723,-0.297", "c"=39]
"madrugado/deep-learning-nlp-rl-papers" ["l"="56.342,29.057", "c"=310]
"yiyang92/vae_for_text" ["l"="57.759,29.288"]
"snowkylin/rnn-vae" ["l"="52.597,14.63", "c"=569]
"phreeza/tensorflow-vrnn" ["l"="45.03,27.601", "c"=789]
"ryokamoi/original_textvae" ["l"="57.752,29.302"]
"twairball/keras_lstm_vae" ["l"="52.515,14.674", "c"=569]
"Heidelberg-NLP/amr-metric-suite" ["l"="57.684,29"]
"bwanglzu/Automatic-Question-Generation" ["l"="57.243,29.196"]
"narain280493/Automatic-Question-Generation" ["l"="57.223,29.174"]
"EdGENetworks/attention-networks-for-classification" ["l"="53.351,28.75", "c"=1200]
"laugustyniak/awesome-sentiment-analysis" ["l"="53.006,25.15", "c"=172]
"mdtux89/amr-eager-multilingual" ["l"="57.748,28.946"]
"jhclark/multeval" ["l"="53.739,24.822", "c"=492]
"kefirski/hybrid_rvae" ["l"="57.692,29.304"]
"openai/generating-reviews-discovering-sentiment" ["l"="53.094,25.499", "c"=172]
"qizhex/RACE_AR_baselines" ["l"="54.769,26.503", "c"=587]
"jiamings/wgan" ["l"="46.026,29.136", "c"=170]
"ryokamoi/hybrid_textvae" ["l"="57.777,29.299"]
"robinsloan/sentence-space" ["l"="57.802,29.298"]
"Zardinality/WGAN-tensorflow" ["l"="45.979,29.162", "c"=170]
"taivop/joke-dataset" ["l"="56.462,28.201", "c"=940]
"hwalsuklee/tensorflow-mnist-VAE" ["l"="46.176,29.322", "c"=170]
"victorywys/Learning2Ask_TypedDecoder" ["l"="56.522,28.997", "c"=310]
"ermongroup/Variational-Ladder-Autoencoder" ["l"="23.107,14.241", "c"=505]
"delph-in/erg" ["l"="57.675,28.875"]
"Noahs-ARK/NeurboParser" ["l"="53.701,28.73", "c"=1200]
"hzy46/Char-RNN-TensorFlow" ["l"="53.462,27.478", "c"=60]
"minimaxir/textgenrnn" ["l"="53.411,25.809", "c"=172]
"stanfordnlp/python-stanford-corenlp" ["l"="53.082,27.562", "c"=60]
"NTMC-Community/MatchZoo" ["l"="53.367,27.337", "c"=60]
"kimiyoung/transformer-xl" ["l"="53.149,25.692", "c"=172]
"allenai/allennlp" ["l"="53.002,25.738", "c"=172]
"zihangdai/xlnet" ["l"="53.051,25.718", "c"=172]
"Jiakui/awesome-bert" ["l"="53.517,27.232", "c"=60]
"zhengliz/natural-adversary" ["l"="39.102,-7.373", "c"=232]
"artetxem/undreamt" ["l"="53.831,24.706", "c"=492]
"Naresh1318/Adversarial_Autoencoder" ["l"="46.161,29.427", "c"=170]
"ethanluoyc/pytorch-vae" ["l"="46.235,29.334", "c"=170]
"X-czh/SeqGAN-PyTorch" ["l"="57.796,29.431"]
"IBM/pytorch-seq2seq" ["l"="53.182,25.62", "c"=172]
"eladhoffer/seq2seq.pytorch" ["l"="53.214,25.573", "c"=172]
"jayparks/tf-seq2seq" ["l"="55.779,28.55", "c"=513]
"ywk991112/pytorch-chatbot" ["l"="55.614,28.419", "c"=513]
"uclnlp/jack" ["l"="54.666,26.409", "c"=587]
"natnij/seqGAN_pytorch" ["l"="57.804,29.452"]
"ruotianluo/NeuralDialog-CVAE-pytorch" ["l"="56.618,29.048", "c"=310]
"hemantpugaliya/Automatic-Question-Answer-Generation" ["l"="57.205,29.23"]
}