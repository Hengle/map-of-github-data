digraph G {
"geopandas/geopandas" -> "shapely/shapely"
"geopandas/geopandas" -> "rasterio/rasterio"
"geopandas/geopandas" -> "python-visualization/folium"
"geopandas/geopandas" -> "gboeing/osmnx"
"geopandas/geopandas" -> "Toblerity/Fiona"
"geopandas/geopandas" -> "OSGeo/gdal" ["e"=1]
"geopandas/geopandas" -> "pysal/pysal"
"geopandas/geopandas" -> "pydata/xarray" ["e"=1]
"geopandas/geopandas" -> "movingpandas/movingpandas"
"geopandas/geopandas" -> "geopy/geopy"
"geopandas/geopandas" -> "sacridini/Awesome-Geospatial"
"geopandas/geopandas" -> "SciTools/cartopy" ["e"=1]
"geopandas/geopandas" -> "pyproj4/pyproj"
"geopandas/geopandas" -> "gee-community/geemap"
"geopandas/geopandas" -> "geopandas/dask-geopandas"
"movingpandas/movingpandas" -> "scikit-mobility/scikit-mobility"
"movingpandas/movingpandas" -> "geopandas/dask-geopandas"
"movingpandas/movingpandas" -> "movingpandas/movingpandas-examples"
"movingpandas/movingpandas" -> "pysal/momepy"
"movingpandas/movingpandas" -> "makepath/xarray-spatial"
"movingpandas/movingpandas" -> "pysal/pysal"
"movingpandas/movingpandas" -> "pyrosm/pyrosm"
"movingpandas/movingpandas" -> "UDST/pandana"
"movingpandas/movingpandas" -> "MobilityDB/MobilityDB" ["e"=1]
"movingpandas/movingpandas" -> "developmentseed/lonboard"
"movingpandas/movingpandas" -> "holoviz/spatialpandas"
"movingpandas/movingpandas" -> "gboeing/ppde642"
"movingpandas/movingpandas" -> "geopandas/contextily"
"movingpandas/movingpandas" -> "gboeing/osmnx"
"movingpandas/movingpandas" -> "geopandas/geopandas"
"corteva/rioxarray" -> "corteva/geocube"
"corteva/rioxarray" -> "makepath/xarray-spatial"
"corteva/rioxarray" -> "geopandas/dask-geopandas"
"corteva/rioxarray" -> "opendatacube/odc-stac"
"corteva/rioxarray" -> "google/Xee"
"corteva/rioxarray" -> "pytroll/pyresample" ["e"=1]
"corteva/rioxarray" -> "fatiando/verde" ["e"=1]
"corteva/rioxarray" -> "geoxarray/geoxarray" ["e"=1]
"corteva/rioxarray" -> "perrygeo/python-rasterstats"
"corteva/rioxarray" -> "earthlab/earthpy"
"corteva/rioxarray" -> "geopandas/pyogrio"
"corteva/rioxarray" -> "mdbartos/pysheds"
"corteva/rioxarray" -> "gjoseph92/stackstac"
"corteva/rioxarray" -> "cogeotiff/rio-cogeo"
"corteva/rioxarray" -> "jgrss/geowombat"
"mapbox/robosat" -> "azavea/raster-vision"
"mapbox/robosat" -> "chrieke/awesome-satellite-imagery-datasets"
"mapbox/robosat" -> "developmentseed/label-maker"
"mapbox/robosat" -> "trailbehind/DeepOSM"
"mapbox/robosat" -> "sentinel-hub/eo-learn"
"mapbox/robosat" -> "sentinelsat/sentinelsat"
"mapbox/robosat" -> "rasterio/rasterio"
"mapbox/robosat" -> "CosmiQ/solaris" ["e"=1]
"mapbox/robosat" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"mapbox/robosat" -> "neptune-ai/open-solution-mapping-challenge" ["e"=1]
"mapbox/robosat" -> "mapbox/tippecanoe" ["e"=1]
"mapbox/robosat" -> "sshuair/torchsat"
"mapbox/robosat" -> "sentinel-hub/sentinelhub-py"
"mapbox/robosat" -> "kr-stn/awesome-sentinel"
"mapbox/robosat" -> "planetlabs/notebooks"
"Penn000/SpA-GAN_for_cloud_removal" -> "Yonv1943/CloudRemoval"
"Penn000/SpA-GAN_for_cloud_removal" -> "VSAnimator/stgan"
"Penn000/SpA-GAN_for_cloud_removal" -> "ameraner/dsen2-cr"
"Penn000/SpA-GAN_for_cloud_removal" -> "qzhang95/PSTCR"
"Penn000/SpA-GAN_for_cloud_removal" -> "enomotokenji/mcgan-cvprw2017-pytorch"
"Penn000/SpA-GAN_for_cloud_removal" -> "BUPTLdy/RICE_DATASET"
"Penn000/SpA-GAN_for_cloud_removal" -> "xufangchn/GLF-CR"
"Penn000/SpA-GAN_for_cloud_removal" -> "PeeBar/Awesome-Cloud-Detection-and-Removal"
"Penn000/SpA-GAN_for_cloud_removal" -> "Chintan2108/Cloud-Removal-in-Satellite-Images-using-Conditional-Generative-Adversarial-Networks"
"Penn000/SpA-GAN_for_cloud_removal" -> "littlebeen/DDPM-Enhancement-for-Cloud-Removal"
"Penn000/SpA-GAN_for_cloud_removal" -> "come880412/CTGAN"
"Penn000/SpA-GAN_for_cloud_removal" -> "littlebeen/Cloud-removal-model-collection"
"Penn000/SpA-GAN_for_cloud_removal" -> "PatrickTUM/SEN12MS-CR-TS"
"Penn000/SpA-GAN_for_cloud_removal" -> "ermongroup/STGAN"
"Penn000/SpA-GAN_for_cloud_removal" -> "zhu-xlab/M3R-CR"
"rasterio/rasterio" -> "Toblerity/Fiona"
"rasterio/rasterio" -> "OSGeo/gdal" ["e"=1]
"rasterio/rasterio" -> "corteva/rioxarray"
"rasterio/rasterio" -> "geopandas/geopandas"
"rasterio/rasterio" -> "perrygeo/python-rasterstats"
"rasterio/rasterio" -> "shapely/shapely"
"rasterio/rasterio" -> "azavea/raster-vision"
"rasterio/rasterio" -> "cogeotiff/rio-tiler"
"rasterio/rasterio" -> "makepath/xarray-spatial"
"rasterio/rasterio" -> "developmentseed/titiler"
"rasterio/rasterio" -> "sentinelsat/sentinelsat"
"rasterio/rasterio" -> "radiantearth/stac-spec"
"rasterio/rasterio" -> "microsoft/torchgeo"
"rasterio/rasterio" -> "pyproj4/pyproj"
"rasterio/rasterio" -> "sentinel-hub/eo-learn"
"nmileva/starfm4py" -> "HPSCIL/cuESTARFM"
"nmileva/starfm4py" -> "endu111/remote-sensing-images-fusion"
"nmileva/starfm4py" -> "HPSCIL/cuSTARFM"
"nmileva/starfm4py" -> "JohMast/ImageFusion"
"nmileva/starfm4py" -> "harisw/STARFM_prediction"
"aourednik/historical-basemaps" -> "nrgapple/historic-country-borders-app"
"aourednik/historical-basemaps" -> "geographyclub/qgis-expressions"
"aourednik/historical-basemaps" -> "mapbox/storytelling" ["e"=1]
"aourednik/historical-basemaps" -> "zumbov2/votemapswitzerland" ["e"=1]
"aourednik/historical-basemaps" -> "tjukanovt/qgis_styles"
"aourednik/historical-basemaps" -> "andrewheiss/quarto-wordcount" ["e"=1]
"aourednik/historical-basemaps" -> "eurostat/gridviz"
"georust/rstar" -> "georust/geojson"
"georust/rstar" -> "georust/geo"
"georust/rstar" -> "Stoeoef/spade" ["e"=1]
"georust/rstar" -> "georust/proj"
"georust/rstar" -> "georust/gdal"
"georust/rstar" -> "georust/geozero"
"georust/rstar" -> "tidwall/rtree.rs"
"nasa-gibs/worldview" -> "nasa-gibs/gibs-web-examples"
"nasa-gibs/worldview" -> "nasa-gibs/onearth"
"nasa-gibs/worldview" -> "nsidc/earthaccess"
"nasa-gibs/worldview" -> "NASAWorldWind/WebWorldWind" ["e"=1]
"nasa-gibs/worldview" -> "developmentseed/landsat-util"
"nasa-gibs/worldview" -> "pydap/pydap"
"nasa-gibs/worldview" -> "NeoGeographyToolkit/StereoPipeline" ["e"=1]
"nasa-gibs/worldview" -> "opendatacube/datacube-core"
"nasa-gibs/worldview" -> "nasa/earthdata-search" ["e"=1]
"nasa-gibs/worldview" -> "sentinelsat/sentinelsat"
"nasa-gibs/worldview" -> "sentinel-hub/sentinelhub-py"
"nasa-gibs/worldview" -> "kr-stn/awesome-sentinel"
"nasa-gibs/worldview" -> "nasa/Open-Source-Catalog" ["e"=1]
"nasa-gibs/worldview" -> "nasa/code-nasa-gov" ["e"=1]
"nasa-gibs/worldview" -> "radiantearth/stac-spec"
"fuweifu-vtoo/Semantic-segmentation" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"fuweifu-vtoo/Semantic-segmentation" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"fuweifu-vtoo/Semantic-segmentation" -> "lcylmhlcy/Semantic-segmentation"
"fuweifu-vtoo/Semantic-segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"fuweifu-vtoo/Semantic-segmentation" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"fuweifu-vtoo/Semantic-segmentation" -> "AI-Chen/Deeplab-v3-Plus-pytorch-"
"fuweifu-vtoo/Semantic-segmentation" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"fuweifu-vtoo/Semantic-segmentation" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"fuweifu-vtoo/Semantic-segmentation" -> "cuilunan/Unet-of-remote-sensing-image"
"fuweifu-vtoo/Semantic-segmentation" -> "WangLibo1995/GeoSeg" ["e"=1]
"fuweifu-vtoo/Semantic-segmentation" -> "jayboxyz/deeplearning-image-segmentation"
"fuweifu-vtoo/Semantic-segmentation" -> "lironui/MACU-Net"
"fuweifu-vtoo/Semantic-segmentation" -> "anxiangsir/urban_seg"
"fuweifu-vtoo/Semantic-segmentation" -> "Deeachain/Segmentation-Pytorch" ["e"=1]
"fuweifu-vtoo/Semantic-segmentation" -> "cxyth/rs-segment.pytorch"
"satellite-image-deep-learning/techniques" -> "chrieke/awesome-satellite-imagery-datasets"
"satellite-image-deep-learning/techniques" -> "microsoft/torchgeo"
"satellite-image-deep-learning/techniques" -> "opengeos/segment-geospatial"
"satellite-image-deep-learning/techniques" -> "azavea/raster-vision"
"satellite-image-deep-learning/techniques" -> "gee-community/geemap"
"satellite-image-deep-learning/techniques" -> "sacridini/Awesome-Geospatial"
"satellite-image-deep-learning/techniques" -> "acgeospatial/awesome-earthobservation-code"
"satellite-image-deep-learning/techniques" -> "wenhwu/awesome-remote-sensing-change-detection" ["e"=1]
"satellite-image-deep-learning/techniques" -> "Jack-bo1220/Awesome-Remote-Sensing-Foundation-Models" ["e"=1]
"satellite-image-deep-learning/techniques" -> "sentinel-hub/eo-learn"
"satellite-image-deep-learning/techniques" -> "awesome-spectral-indices/awesome-spectral-indices"
"satellite-image-deep-learning/techniques" -> "satellite-image-deep-learning/datasets"
"satellite-image-deep-learning/techniques" -> "qubvel-org/segmentation_models.pytorch" ["e"=1]
"satellite-image-deep-learning/techniques" -> "google/earthengine-api"
"satellite-image-deep-learning/techniques" -> "opengeos/Awesome-GEE"
"scikit-mobility/scikit-mobility" -> "movingpandas/movingpandas"
"scikit-mobility/scikit-mobility" -> "scikit-mobility/tutorials"
"scikit-mobility/scikit-mobility" -> "scikit-mobility/DeepLearning4HumanMobility"
"scikit-mobility/scikit-mobility" -> "scikit-mobility/DeepGravity"
"scikit-mobility/scikit-mobility" -> "UDST/pandana"
"scikit-mobility/scikit-mobility" -> "mie-lab/trackintel"
"scikit-mobility/scikit-mobility" -> "pysal/momepy"
"scikit-mobility/scikit-mobility" -> "holoviz/spatialpandas"
"scikit-mobility/scikit-mobility" -> "pysal/pysal"
"scikit-mobility/scikit-mobility" -> "MobilityDB/MobilityDB" ["e"=1]
"scikit-mobility/scikit-mobility" -> "geopandas/dask-geopandas"
"scikit-mobility/scikit-mobility" -> "lalessan/scales_human_mobility"
"scikit-mobility/scikit-mobility" -> "UDST/urbanaccess"
"scikit-mobility/scikit-mobility" -> "mszell/geospatialdatascience"
"scikit-mobility/scikit-mobility" -> "geopandas/contextily"
"pygeos/pygeos" -> "geopandas/dask-geopandas"
"pygeos/pygeos" -> "holoviz/spatialpandas"
"pygeos/pygeos" -> "pyrosm/pyrosm"
"pygeos/pygeos" -> "geopandas/pyogrio"
"pygeos/pygeos" -> "pysal/momepy"
"pygeos/pygeos" -> "makepath/xarray-spatial"
"pygeos/pygeos" -> "Toblerity/Fiona"
"pygeos/pygeos" -> "pysal/spopt"
"pygeos/pygeos" -> "corteva/rioxarray"
"pygeos/pygeos" -> "corteva/geocube"
"pygeos/pygeos" -> "geoarrow/geoarrow"
"pygeos/pygeos" -> "Toblerity/rtree" ["e"=1]
"pygeos/pygeos" -> "fatiando/verde" ["e"=1]
"pygeos/pygeos" -> "geopandas/contextily"
"pygeos/pygeos" -> "movingpandas/movingpandas"
"chrieke/awesome-satellite-imagery-datasets" -> "satellite-image-deep-learning/techniques"
"chrieke/awesome-satellite-imagery-datasets" -> "azavea/raster-vision"
"chrieke/awesome-satellite-imagery-datasets" -> "wenhwu/awesome-remote-sensing-change-detection" ["e"=1]
"chrieke/awesome-satellite-imagery-datasets" -> "mapbox/robosat"
"chrieke/awesome-satellite-imagery-datasets" -> "acgeospatial/awesome-earthobservation-code"
"chrieke/awesome-satellite-imagery-datasets" -> "microsoft/torchgeo"
"chrieke/awesome-satellite-imagery-datasets" -> "sentinel-hub/eo-learn"
"chrieke/awesome-satellite-imagery-datasets" -> "satellite-image-deep-learning/datasets"
"chrieke/awesome-satellite-imagery-datasets" -> "sentinelsat/sentinelsat"
"chrieke/awesome-satellite-imagery-datasets" -> "sacridini/Awesome-Geospatial"
"chrieke/awesome-satellite-imagery-datasets" -> "kr-stn/awesome-sentinel"
"chrieke/awesome-satellite-imagery-datasets" -> "Jack-bo1220/Awesome-Remote-Sensing-Foundation-Models" ["e"=1]
"chrieke/awesome-satellite-imagery-datasets" -> "opengeos/segment-geospatial"
"chrieke/awesome-satellite-imagery-datasets" -> "gee-community/geemap"
"chrieke/awesome-satellite-imagery-datasets" -> "MinZHANG-WHU/Change-Detection-Review" ["e"=1]
"developmentseed/titiler" -> "cogeotiff/rio-tiler"
"developmentseed/titiler" -> "cogeotiff/rio-cogeo"
"developmentseed/titiler" -> "DHI/terracotta"
"developmentseed/titiler" -> "stac-utils/stac-fastapi"
"developmentseed/titiler" -> "radiantearth/stac-spec"
"developmentseed/titiler" -> "stac-utils/pystac"
"developmentseed/titiler" -> "developmentseed/eoAPI"
"developmentseed/titiler" -> "developmentseed/morecantile"
"developmentseed/titiler" -> "developmentseed/tipg"
"developmentseed/titiler" -> "corteva/rioxarray"
"developmentseed/titiler" -> "developmentseed/rio-viz"
"developmentseed/titiler" -> "gjoseph92/stackstac"
"developmentseed/titiler" -> "flatgeobuf/flatgeobuf" ["e"=1]
"developmentseed/titiler" -> "radiantearth/stac-browser"
"developmentseed/titiler" -> "developmentseed/cogeo-mosaic"
"jorisvandenbossche/geopandas-tutorial" -> "geopandas/scipy2018-geospatial-data" ["e"=1]
"jorisvandenbossche/geopandas-tutorial" -> "ResidentMario/geoplot"
"jorisvandenbossche/geopandas-tutorial" -> "geopandas/contextily"
"jorisvandenbossche/geopandas-tutorial" -> "urschrei/Geopython"
"jorisvandenbossche/geopandas-tutorial" -> "opengeos/whitebox-python"
"jorisvandenbossche/geopandas-tutorial" -> "ozak/georasters"
"jorisvandenbossche/geopandas-tutorial" -> "koldunovn/python_for_geosciences" ["e"=1]
"jorisvandenbossche/geopandas-tutorial" -> "gdsbook/book"
"jorisvandenbossche/geopandas-tutorial" -> "ceholden/open-geo-tutorial"
"jorisvandenbossche/geopandas-tutorial" -> "jorisvandenbossche/DS-python-data-analysis"
"jorisvandenbossche/geopandas-tutorial" -> "opengeos/python-geospatial"
"jorisvandenbossche/geopandas-tutorial" -> "Automating-GIS-processes/site"
"jorisvandenbossche/geopandas-tutorial" -> "movingpandas/movingpandas"
"jorisvandenbossche/geopandas-tutorial" -> "mszell/geospatialdatascience"
"jorisvandenbossche/geopandas-tutorial" -> "geopandas/dask-geopandas"
"mortcanty/CRCPython" -> "mortcanty/CRC4Docker"
"mortcanty/CRCPython" -> "mortcanty/earthengine"
"mortcanty/CRCPython" -> "BUPTLdy/Land_Use_CNN"
"sarasafavi/remote-sensing-with-python" -> "kscottz/PythonFromSpace"
"sarasafavi/remote-sensing-with-python" -> "ceholden/open-geo-tutorial"
"sentinel-hub/custom-scripts" -> "sentinel-hub/sentinelhub-py"
"sentinel-hub/custom-scripts" -> "sentinel-hub/eo-learn"
"sentinel-hub/custom-scripts" -> "kr-stn/awesome-sentinel"
"sentinel-hub/custom-scripts" -> "acgeospatial/awesome-earthobservation-code"
"sentinel-hub/custom-scripts" -> "opengeos/Awesome-GEE"
"sentinel-hub/custom-scripts" -> "giswqs/earthengine-py-notebooks"
"sentinel-hub/custom-scripts" -> "planetlabs/notebooks"
"sentinel-hub/custom-scripts" -> "sentinel-hub/sentinel2-cloud-detector"
"sentinel-hub/custom-scripts" -> "giswqs/qgis-earthengine-examples"
"sentinel-hub/custom-scripts" -> "awesome-spectral-indices/awesome-spectral-indices"
"sentinel-hub/custom-scripts" -> "gee-community/geetools"
"sentinel-hub/custom-scripts" -> "sentinelsat/sentinelsat"
"sentinel-hub/custom-scripts" -> "davemlz/eemont"
"sentinel-hub/custom-scripts" -> "gee-community/geemap"
"sentinel-hub/custom-scripts" -> "johntruckenbrodt/pyroSAR" ["e"=1]
"sentinel-hub/eo-learn" -> "sentinel-hub/sentinelhub-py"
"sentinel-hub/eo-learn" -> "acgeospatial/awesome-earthobservation-code"
"sentinel-hub/eo-learn" -> "sentinel-hub/sentinel2-cloud-detector"
"sentinel-hub/eo-learn" -> "sentinel-hub/custom-scripts"
"sentinel-hub/eo-learn" -> "azavea/raster-vision"
"sentinel-hub/eo-learn" -> "sentinelsat/sentinelsat"
"sentinel-hub/eo-learn" -> "kr-stn/awesome-sentinel"
"sentinel-hub/eo-learn" -> "makepath/xarray-spatial"
"sentinel-hub/eo-learn" -> "johntruckenbrodt/pyroSAR" ["e"=1]
"sentinel-hub/eo-learn" -> "chrieke/awesome-satellite-imagery-datasets"
"sentinel-hub/eo-learn" -> "awesome-spectral-indices/awesome-spectral-indices"
"sentinel-hub/eo-learn" -> "radiantearth/stac-spec"
"sentinel-hub/eo-learn" -> "planetlabs/notebooks"
"sentinel-hub/eo-learn" -> "GeoscienceAustralia/dea-notebooks"
"sentinel-hub/eo-learn" -> "deepVector/geospatial-machine-learning"
"mapbox/sentinel-tiler" -> "RemotePixel/remotepixel-api"
"mapbox/sentinel-tiler" -> "mapbox/landsat-tiler"
"jblindsay/whitebox-tools" -> "opengeos/whitebox-python"
"jblindsay/whitebox-tools" -> "opengeos/WhiteboxTools-ArcGIS"
"jblindsay/whitebox-tools" -> "jblindsay/whitebox-geospatial-analysis-tools"
"jblindsay/whitebox-tools" -> "mdbartos/pysheds"
"jblindsay/whitebox-tools" -> "r-barnes/richdem"
"jblindsay/whitebox-tools" -> "corteva/rioxarray"
"jblindsay/whitebox-tools" -> "opengeos/lidar"
"jblindsay/whitebox-tools" -> "flatgeobuf/flatgeobuf" ["e"=1]
"jblindsay/whitebox-tools" -> "giswqs/qgis-earthengine-examples"
"jblindsay/whitebox-tools" -> "sacridini/Awesome-Geospatial"
"jblindsay/whitebox-tools" -> "awesome-spectral-indices/awesome-spectral-indices"
"jblindsay/whitebox-tools" -> "dtarb/TauDEM"
"jblindsay/whitebox-tools" -> "rasterio/rasterio"
"jblindsay/whitebox-tools" -> "acgeospatial/awesome-earthobservation-code"
"jblindsay/whitebox-tools" -> "geopandas/dask-geopandas"
"GeospatialPython/pyshp" -> "Toblerity/Fiona"
"GeospatialPython/pyshp" -> "pyproj4/pyproj"
"GeospatialPython/pyshp" -> "rasterio/rasterio"
"GeospatialPython/pyshp" -> "shapely/shapely"
"GeospatialPython/pyshp" -> "jazzband/geojson"
"GeospatialPython/pyshp" -> "pysal/pysal"
"GeospatialPython/pyshp" -> "dwtkns/gdal-cheat-sheet"
"GeospatialPython/pyshp" -> "perrygeo/python-rasterstats"
"GeospatialPython/pyshp" -> "corteva/rioxarray"
"GeospatialPython/pyshp" -> "geopandas/geopandas"
"GeospatialPython/pyshp" -> "project-open-data/esri2open"
"GeospatialPython/pyshp" -> "SciTools/cartopy" ["e"=1]
"GeospatialPython/pyshp" -> "geoalchemy/geoalchemy2"
"GeospatialPython/pyshp" -> "ResidentMario/geoplot"
"GeospatialPython/pyshp" -> "sentinelsat/sentinelsat"
"jazzband/geojson" -> "Toblerity/Fiona"
"jazzband/geojson" -> "pyproj4/pyproj"
"jazzband/geojson" -> "developmentseed/geojson-pydantic"
"jazzband/geojson" -> "GeospatialPython/pyshp"
"jazzband/geojson" -> "shapely/shapely"
"jazzband/geojson" -> "geoalchemy/geoalchemy2"
"jazzband/geojson" -> "radiantearth/stac-spec"
"jazzband/geojson" -> "rasterio/rasterio"
"jazzband/geojson" -> "geopy/geopy"
"jazzband/geojson" -> "developmentseed/lonboard"
"jazzband/geojson" -> "tmcw/awesome-geojson" ["e"=1]
"jazzband/geojson" -> "mapbox/mercantile" ["e"=1]
"jazzband/geojson" -> "geopython/pygeoapi"
"jazzband/geojson" -> "mvexel/overpass-api-python-wrapper" ["e"=1]
"jazzband/geojson" -> "perrygeo/python-rasterstats"
"SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset" -> "SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection"
"SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset" -> "SorourMo/95-Cloud-An-Extension-to-38-Cloud-Dataset"
"SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset" -> "JacobJeppesen/RS-Net"
"SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset" -> "GERSL/Fmask"
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" -> "SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset"
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" -> "JacobJeppesen/RS-Net"
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" -> "SorourMo/95-Cloud-An-Extension-to-38-Cloud-Dataset"
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" -> "1921134176/Deeplearning-for-cloud-detection"
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" -> "IPL-UV/pvl8dagans"
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" -> "Neooolee/WHUS2-CD"
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" -> "Soumyabrata/multilabel-unet"
"Zhaoguanhua/AtmosphericCorrection" -> "robintw/Py6S"
"Zhaoguanhua/AtmosphericCorrection" -> "samsammurphy/6S_emulator"
"Zhaoguanhua/AtmosphericCorrection" -> "WangZhenqing-RS/GF_preprocess"
"Zhaoguanhua/AtmosphericCorrection" -> "GenghisYoung233/Gaofen-Batch"
"Zhaoguanhua/AtmosphericCorrection" -> "samsammurphy/gee-atmcorr-S2"
"Zhaoguanhua/AtmosphericCorrection" -> "multiply-org/atmospheric_correction"
"Zhaoguanhua/AtmosphericCorrection" -> "lucadelu/pyModis"
"Zhaoguanhua/AtmosphericCorrection" -> "desertstsung/Snowy-Dove"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "cuilunan/Unet-of-remote-sensing-image"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "lcylmhlcy/Semantic-segmentation"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "anxiangsir/urban_seg"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "gzr2017/UNet-AerialImageSegmentation"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "ChienWong/ResUnet-a"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "AstarLight/Satellite-Segmentation"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "fuweifu-vtoo/Semantic-segmentation"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "1044197988/TF.Keras-Commonly-used-models"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "vicwer/sense_classification"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "scrssys/semantic_segment_RSImage"
"AstarLight/Satellite-Segmentation" -> "Jiangfeng-Xiong/satellite_seg"
"AstarLight/Satellite-Segmentation" -> "anxiangsir/urban_seg"
"AstarLight/Satellite-Segmentation" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"AstarLight/Satellite-Segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"AstarLight/Satellite-Segmentation" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"AstarLight/Satellite-Segmentation" -> "zlckanata/DeepGlobe-Road-Extraction-Challenge" ["e"=1]
"AstarLight/Satellite-Segmentation" -> "LiuDongjing/BuildingChangeDetector"
"AstarLight/Satellite-Segmentation" -> "lsh1994/keras-segmentation"
"AstarLight/Satellite-Segmentation" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"AstarLight/Satellite-Segmentation" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"AstarLight/Satellite-Segmentation" -> "nshaud/DeepNetsForEO"
"AstarLight/Satellite-Segmentation" -> "1044197988/TF.Keras-Commonly-used-models"
"AstarLight/Satellite-Segmentation" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"AstarLight/Satellite-Segmentation" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"AstarLight/Satellite-Segmentation" -> "fuweifu-vtoo/Semantic-segmentation"
"geo-python/site" -> "Automating-GIS-processes/site"
"CenterForCollectiveLearning/Place-Pulse" -> "denadai2/google_street_view_deep_neural"
"CenterForCollectiveLearning/Place-Pulse" -> "rsangers/explainable_perception"
"CenterForCollectiveLearning/Place-Pulse" -> "emilymuller1991/urban-perceptions"
"CenterForCollectiveLearning/Place-Pulse" -> "abhimanyudubey/dlcity"
"OceanOptics/getOC" -> "CNES/RadiativeTransferCode-OSOAA"
"opengeos/python-geospatial" -> "deepVector/geospatial-machine-learning"
"opengeos/python-geospatial" -> "acgeospatial/awesome-earthobservation-code"
"opengeos/python-geospatial" -> "sacridini/Awesome-Geospatial"
"opengeos/python-geospatial" -> "opengeos/geospatial"
"opengeos/python-geospatial" -> "DahnJ/Awesome-DEM"
"opengeos/python-geospatial" -> "mszell/geospatialdatascience"
"opengeos/python-geospatial" -> "opengeos/Awesome-GEE"
"opengeos/python-geospatial" -> "awesome-spectral-indices/awesome-spectral-indices"
"opengeos/python-geospatial" -> "makepath/xarray-spatial"
"opengeos/python-geospatial" -> "giswqs/qgis-earthengine-examples"
"opengeos/python-geospatial" -> "samapriya/awesome-gee-community-datasets"
"opengeos/python-geospatial" -> "sentinel-hub/eo-learn"
"opengeos/python-geospatial" -> "azavea/raster-vision"
"opengeos/python-geospatial" -> "jblindsay/whitebox-tools"
"opengeos/python-geospatial" -> "giswqs/earthengine-py-notebooks"
"karolzak/keras-unet" -> "neptune-ai/open-solution-mapping-challenge" ["e"=1]
"karolzak/keras-unet" -> "datasciencecampus/laika"
"karolzak/keras-unet" -> "yingkaisha/keras-unet-collection" ["e"=1]
"karolzak/keras-unet" -> "advaitsave/Multiclass-Semantic-Segmentation-CamVid"
"karolzak/keras-unet" -> "nikhilroxtomar/Semantic-Segmentation-Architecture" ["e"=1]
"karolzak/keras-unet" -> "developmentseed/label-maker"
"karolzak/keras-unet" -> "Vooban/Smoothly-Blend-Image-Patches"
"karolzak/keras-unet" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"UDST/urbansim" -> "UDST/pandana"
"UDST/urbansim" -> "UDST/urbanaccess"
"UDST/urbansim" -> "ActivitySim/activitysim" ["e"=1]
"UDST/urbansim" -> "UDST/sanfran_urbansim"
"UDST/urbansim" -> "UDST/synthpop"
"UDST/urbansim" -> "waddell/urban-informatics-and-visualization"
"UDST/urbansim" -> "gboeing/ppde642"
"UDST/urbansim" -> "replicahq/doppelganger"
"UDST/urbansim" -> "UDST/choicemodels"
"UDST/urbansim" -> "matsim-org/matsim-libs" ["e"=1]
"UDST/urbansim" -> "pysal/momepy"
"UDST/urbansim" -> "abmgis/abmgis"
"UDST/urbansim" -> "osPlanning/omx" ["e"=1]
"UDST/urbansim" -> "Esri/public-transit-tools" ["e"=1]
"UDST/urbansim" -> "kuanb/peartree" ["e"=1]
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "manideep2510/eye-in-the-sky"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "rogerxujiang/dstl_unet"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "nshaud/DeepNetsForEO"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "mapbox/robosat"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "Vooban/Smoothly-Blend-Image-Patches"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "radiantearth/mlhub-tutorials"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "chrieke/InstanceSegmentation_Sentinel2"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "AstarLight/Satellite-Segmentation"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "neptune-ai/open-solution-mapping-challenge" ["e"=1]
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "sentinel-hub/eo-learn"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "cuilunan/Unet-of-remote-sensing-image"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "motokimura/spacenet_building_detection" ["e"=1]
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "dronedeploy/dd-ml-segmentation-benchmark" ["e"=1]
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "mszell/geospatialdatascience"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "uwcartlab/webmapping"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "Viglino/font-gis"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "dwtkns/gdal-cheat-sheet"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "DahnJ/Awesome-DEM"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "charleyglynn/OSM-Shapefile-QGIS-stylesheets" ["e"=1]
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "All4Gis/QGIS-cheat-sheet" ["e"=1]
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "geographyclub/qgis-expressions"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "tjukanovt/qgis_styles"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "chrieke/awesome-geospatial-companies"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "klakar/QGIS_resources"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "OrdnanceSurvey/OS-Open-Zoomstack-Stylesheets"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "anitagraser/QGIS-resources" ["e"=1]
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "andrea-ballatore/open-geo-data-education"
"OrdnanceSurvey/GeoDataViz-Toolkit" -> "movingpandas/movingpandas"
"geopython/pygeoapi" -> "geopython/OWSLib"
"geopython/pygeoapi" -> "opengeospatial/ogcapi-features"
"geopython/pygeoapi" -> "geopython/pycsw"
"geopython/pygeoapi" -> "stac-utils/pystac"
"geopython/pygeoapi" -> "radiantearth/stac-spec"
"geopython/pygeoapi" -> "developmentseed/titiler"
"geopython/pygeoapi" -> "stac-utils/stac-fastapi"
"geopython/pygeoapi" -> "CrunchyData/pg_featureserv" ["e"=1]
"geopython/pygeoapi" -> "radiantearth/stac-browser"
"geopython/pygeoapi" -> "cogeotiff/rio-tiler"
"geopython/pygeoapi" -> "opengeospatial/geoparquet"
"geopython/pygeoapi" -> "geopython/pywps"
"geopython/pygeoapi" -> "developmentseed/morecantile"
"geopython/pygeoapi" -> "cogeotiff/rio-cogeo"
"geopython/pygeoapi" -> "makepath/xarray-spatial"
"opengeos/WhiteboxTools-ArcGIS" -> "opengeos/whitebox-python"
"opengeos/WhiteboxTools-ArcGIS" -> "jblindsay/whitebox-tools"
"opengeos/WhiteboxTools-ArcGIS" -> "opengeos/whiteboxgui"
"opengeos/WhiteboxTools-ArcGIS" -> "Esri/deep-learning-frameworks" ["e"=1]
"opengeos/WhiteboxTools-ArcGIS" -> "Dan-Patterson/Tools_for_ArcGIS_Pro"
"sacridini/GEET" -> "kr-stn/EarthEngine_scripts"
"sacridini/GEET" -> "renelikestacos/Google-Earth-Engine-JavaScript-Examples"
"sacridini/GEET" -> "eMapR/LT-GEE"
"sacridini/GEET" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"sacridini/GEET" -> "fitoprincipe/geetools-code-editor"
"sacridini/GEET" -> "SERVIR/water-quality-gee"
"sacridini/GEET" -> "gee-community/geetools"
"sacridini/GEET" -> "mortcanty/earthengine"
"sacridini/GEET" -> "csaybar/EEwPython"
"sacridini/GEET" -> "brmagnuson/LandFallowingInEarthEngine"
"eMapR/LT-GEE" -> "gee-community/ee-palettes"
"eMapR/LT-GEE" -> "gee-community/geetools"
"eMapR/LT-GEE" -> "bfast2/geeBfastMonitor" ["e"=1]
"eMapR/LT-GEE" -> "kr-stn/EarthEngine_scripts"
"eMapR/LT-GEE" -> "fitoprincipe/geetools-code-editor"
"eMapR/LT-GEE" -> "tracek/gee_asset_manager"
"eMapR/LT-GEE" -> "mortcanty/earthengine"
"eMapR/LT-GEE" -> "sacridini/GEET"
"eMapR/LT-GEE" -> "gee-community/awesome-google-earth-engine"
"eMapR/LT-GEE" -> "eMapR/TimeSync-Legacy"
"eMapR/LT-GEE" -> "shijuanchen/forest_degradation_georgia"
"eMapR/LT-GEE" -> "fitoprincipe/geebap"
"eMapR/LT-GEE" -> "jldowns/google_earth_engine_notebook"
"eMapR/LT-GEE" -> "ucalyptus/EarthEngine-Deep-Learning"
"fitoprincipe/geetools-code-editor" -> "gee-community/geetools"
"fitoprincipe/geetools-code-editor" -> "gee-community/ee-palettes"
"fitoprincipe/geetools-code-editor" -> "eMapR/LT-GEE"
"fitoprincipe/geetools-code-editor" -> "kr-stn/EarthEngine_scripts"
"fitoprincipe/geetools-code-editor" -> "sacridini/GEET"
"fitoprincipe/geetools-code-editor" -> "samsammurphy/gee-atmcorr-S2"
"fitoprincipe/geetools-code-editor" -> "fitoprincipe/geebap"
"fitoprincipe/geetools-code-editor" -> "opengeos/Awesome-GEE"
"fitoprincipe/geetools-code-editor" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"fitoprincipe/geetools-code-editor" -> "csaybar/EEwPython"
"fitoprincipe/geetools-code-editor" -> "davemlz/eemont"
"fitoprincipe/geetools-code-editor" -> "samapriya/awesome-gee-community-datasets"
"fitoprincipe/geetools-code-editor" -> "gee-community/qgis-earthengine-plugin"
"fitoprincipe/geetools-code-editor" -> "samapriya/geeup"
"fitoprincipe/geetools-code-editor" -> "gee-community/ee-tensorflow-notebooks"
"SERVIR/water-quality-gee" -> "brmagnuson/LandFallowingInEarthEngine"
"kvos/CoastSat" -> "kvos/CoastSat.slope"
"kvos/CoastSat" -> "chrisleaman/awesome-coastal"
"kvos/CoastSat" -> "opengeos/Awesome-GEE"
"kvos/CoastSat" -> "acgeospatial/awesome-earthobservation-code"
"kvos/CoastSat" -> "gee-community/geetools"
"kvos/CoastSat" -> "awesome-spectral-indices/awesome-spectral-indices"
"kvos/CoastSat" -> "ydoherty/CoastSat.PlanetScope"
"kvos/CoastSat" -> "sentinel-hub/eo-learn"
"kvos/CoastSat" -> "samapriya/awesome-gee-community-datasets"
"kvos/CoastSat" -> "giswqs/earthengine-py-notebooks"
"kvos/CoastSat" -> "planetlabs/notebooks"
"kvos/CoastSat" -> "giswqs/qgis-earthengine-examples"
"kvos/CoastSat" -> "GeoscienceAustralia/dea-notebooks"
"kvos/CoastSat" -> "fitoprincipe/geetools-code-editor"
"kvos/CoastSat" -> "SatelliteShorelines/CoastSeg"
"corteva/geocube" -> "corteva/rioxarray"
"corteva/geocube" -> "makepath/xarray-spatial"
"corteva/geocube" -> "geopandas/dask-geopandas"
"corteva/geocube" -> "gjoseph92/stackstac"
"corteva/geocube" -> "xarray-contrib/xvec" ["e"=1]
"corteva/geocube" -> "stac-utils/pystac"
"corteva/geocube" -> "xarray-contrib/xarray_leaflet"
"corteva/geocube" -> "opendatacube/odc-stac"
"corteva/geocube" -> "google/Xee"
"corteva/geocube" -> "stac-utils/pystac-client"
"corteva/geocube" -> "xarray-contrib/xbatcher" ["e"=1]
"corteva/geocube" -> "geopandas/pyogrio"
"corteva/geocube" -> "pangeo-data/rechunker" ["e"=1]
"corteva/geocube" -> "geoxarray/geoxarray" ["e"=1]
"corteva/geocube" -> "aazuspan/wxee"
"petedannemann/gis-programming-roadmap" -> "AlexArcPy/python-for-gis-progression-path"
"petedannemann/gis-programming-roadmap" -> "sacridini/Awesome-Geospatial"
"petedannemann/gis-programming-roadmap" -> "dwtkns/gdal-cheat-sheet"
"petedannemann/gis-programming-roadmap" -> "tjukanovt/30DayMapChallenge"
"petedannemann/gis-programming-roadmap" -> "opengeos/python-geospatial"
"petedannemann/gis-programming-roadmap" -> "acgeospatial/awesome-earthobservation-code"
"petedannemann/gis-programming-roadmap" -> "giswqs/qgis-earthengine-examples"
"petedannemann/gis-programming-roadmap" -> "deepVector/geospatial-machine-learning"
"petedannemann/gis-programming-roadmap" -> "mszell/geospatialdatascience"
"petedannemann/gis-programming-roadmap" -> "sshuair/awesome-gis" ["e"=1]
"petedannemann/gis-programming-roadmap" -> "Esri/awesome-arcgis-developers" ["e"=1]
"petedannemann/gis-programming-roadmap" -> "Automating-GIS-processes/site"
"petedannemann/gis-programming-roadmap" -> "county-of-simcoe-gis/SimcoeCountyWebViewer" ["e"=1]
"petedannemann/gis-programming-roadmap" -> "jblindsay/whitebox-tools"
"petedannemann/gis-programming-roadmap" -> "movingpandas/movingpandas"
"noncomputable/AgentMaps" -> "projectmesa/mesa"
"noncomputable/AgentMaps" -> "humangeo/leaflet-dvf" ["e"=1]
"noncomputable/AgentMaps" -> "james-owen-ryan/talktown" ["e"=1]
"noncomputable/AgentMaps" -> "riatelab/bertin"
"noncomputable/AgentMaps" -> "projectmesa/mesa-geo"
"lanha/DSen2" -> "remicres/sr4rs" ["e"=1]
"lanha/DSen2" -> "up42/s2-superresolution"
"lanha/DSen2" -> "jensleitloff/CNN-Sentinel"
"lanha/DSen2" -> "sentinel-hub/multi-temporal-super-resolution"
"lanha/DSen2" -> "kr-stn/awesome-sentinel"
"lanha/DSen2" -> "sentinel-hub/sentinel2-cloud-detector"
"lanha/DSen2" -> "chrieke/InstanceSegmentation_Sentinel2"
"lanha/DSen2" -> "Evoland-Land-Monitoring-Evolution/sentinel2_superresolution"
"lanha/DSen2" -> "ameraner/dsen2-cr"
"lanha/DSen2" -> "olivierhagolle/Sentinel-download"
"lanha/DSen2" -> "allenai/satlas-super-resolution" ["e"=1]
"gabrieltseng/pycrop-yield-prediction" -> "JiaxuanYou/crop_yield_prediction"
"gabrieltseng/pycrop-yield-prediction" -> "cleipski/CropPredict"
"gabrieltseng/pycrop-yield-prediction" -> "saeedkhaki92/CNN-RNN-Yield-Prediction"
"gabrieltseng/pycrop-yield-prediction" -> "AnnaXWang/deep-transfer-learning-crop-prediction"
"gabrieltseng/pycrop-yield-prediction" -> "saeedkhaki92/Yield-Prediction-DNN"
"gabrieltseng/pycrop-yield-prediction" -> "brad-ross/crop-yield-prediction-project"
"gabrieltseng/pycrop-yield-prediction" -> "meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery"
"gabrieltseng/pycrop-yield-prediction" -> "AkshanshChahal/ML-in-Agriculture"
"gabrieltseng/pycrop-yield-prediction" -> "vinayakkarande/Crop-Yield-Prediction-Using-CNN-LSTM-"
"jostbr/shallow-water" -> "milankl/swm"
"jostbr/shallow-water" -> "mrocklin/ShallowWater"
"jostbr/shallow-water" -> "jamesp/shallowwater" ["e"=1]
"jostbr/shallow-water" -> "GeoscienceAustralia/anuga_core"
"jostbr/shallow-water" -> "ThanasisMattas/mattflow"
"jostbr/shallow-water" -> "TUM-I5/SWE"
"jostbr/shallow-water" -> "dionhaefner/shallow-water"
"jostbr/shallow-water" -> "wme7/ShallowWaterEquations"
"jostbr/shallow-water" -> "passaH2O/dorado"
"carderne/gridfinder" -> "facebookresearch/many-to-many-dijkstra"
"JacobJeppesen/RS-Net" -> "SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection"
"JacobJeppesen/RS-Net" -> "SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset"
"JacobJeppesen/RS-Net" -> "SorourMo/95-Cloud-An-Extension-to-38-Cloud-Dataset"
"JacobJeppesen/RS-Net" -> "aliFrancis/cloudFCN"
"JacobJeppesen/RS-Net" -> "savasozkan/cloud_detection"
"Azure/pixel_level_land_classification" -> "tropicalmentat/land-cover-to-land-use-classification"
"Azure/pixel_level_land_classification" -> "KGPML/Hyperspectral" ["e"=1]
"Azure/pixel_level_land_classification" -> "microsoft/landcover"
"Azure/pixel_level_land_classification" -> "Esri/raster-deep-learning" ["e"=1]
"Azure/pixel_level_land_classification" -> "rogerxujiang/dstl_unet"
"Azure/pixel_level_land_classification" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"Azure/pixel_level_land_classification" -> "yangsiyu007/SpaceNetExploration" ["e"=1]
"Azure/pixel_level_land_classification" -> "azavea/raster-vision-examples"
"Azure/pixel_level_land_classification" -> "manideep2510/eye-in-the-sky"
"Azure/pixel_level_land_classification" -> "chrieke/InstanceSegmentation_Sentinel2"
"Azure/pixel_level_land_classification" -> "Kalit31/Land-Cover-Analysis"
"GeoscienceAustralia/dea-notebooks" -> "digitalearthafrica/deafrica-sandbox-notebooks"
"GeoscienceAustralia/dea-notebooks" -> "makepath/xarray-spatial"
"GeoscienceAustralia/dea-notebooks" -> "opendatacube/datacube-core"
"GeoscienceAustralia/dea-notebooks" -> "acgeospatial/awesome-earthobservation-code"
"GeoscienceAustralia/dea-notebooks" -> "geopandas/dask-geopandas"
"GeoscienceAustralia/dea-notebooks" -> "corteva/rioxarray"
"GeoscienceAustralia/dea-notebooks" -> "sentinel-hub/eo-learn"
"GeoscienceAustralia/dea-notebooks" -> "opendatacube/odc-stac"
"GeoscienceAustralia/dea-notebooks" -> "corteva/geocube"
"GeoscienceAustralia/dea-notebooks" -> "cogeotiff/rio-cogeo"
"GeoscienceAustralia/dea-notebooks" -> "nsidc/earthaccess"
"GeoscienceAustralia/dea-notebooks" -> "google/Xee"
"GeoscienceAustralia/dea-notebooks" -> "earthlab/earthpy"
"GeoscienceAustralia/dea-notebooks" -> "awesome-spectral-indices/awesome-spectral-indices"
"GeoscienceAustralia/dea-notebooks" -> "opengeos/whitebox-python"
"Hsankesara/DeepResearch" -> "JavisPeng/u_net_liver"
"opengeos/whitebox-python" -> "jblindsay/whitebox-tools"
"opengeos/whitebox-python" -> "opengeos/WhiteboxTools-ArcGIS"
"opengeos/whitebox-python" -> "opengeos/lidar"
"opengeos/whitebox-python" -> "mdbartos/pysheds"
"opengeos/whitebox-python" -> "dtarb/TauDEM"
"opengeos/whitebox-python" -> "giswqs/qgis-earthengine-examples"
"opengeos/whitebox-python" -> "r-barnes/richdem"
"opengeos/whitebox-python" -> "gee-community/qgis-earthengine-plugin"
"opengeos/whitebox-python" -> "jblindsay/whitebox-geospatial-analysis-tools"
"opengeos/whitebox-python" -> "earthlab/earthpy"
"opengeos/whitebox-python" -> "GeoscienceAustralia/dea-notebooks"
"opengeos/whitebox-python" -> "opengeos/geospatial"
"opengeos/whitebox-python" -> "gee-community/geetools"
"opengeos/whitebox-python" -> "aazuspan/wxee"
"opengeos/whitebox-python" -> "opengeos/whiteboxgui"
"georust/gdal" -> "georust/geo"
"georust/gdal" -> "georust/geozero"
"georust/gdal" -> "georust/geojson"
"georust/gdal" -> "georust/proj"
"georust/gdal" -> "pka/awesome-georust"
"georust/gdal" -> "georust/geos"
"georust/gdal" -> "geoarrow/geoarrow-rs"
"georust/gdal" -> "georust/geotiff"
"georust/gdal" -> "flatgeobuf/flatgeobuf" ["e"=1]
"georust/gdal" -> "geoarrow/geoarrow"
"georust/gdal" -> "lukeroth/gdal" ["e"=1]
"georust/gdal" -> "stac-utils/rustac"
"georust/gdal" -> "frewsxcv/rgis"
"georust/gdal" -> "geopolars/geopolars"
"georust/gdal" -> "maplibre/maplibre-rs" ["e"=1]
"Automating-GIS-processes/site" -> "geo-python/site"
"Automating-GIS-processes/site" -> "opengeos/geospatial"
"Automating-GIS-processes/site" -> "volaya/qgis-python-course" ["e"=1]
"Automating-GIS-processes/site" -> "mszell/geospatialdatascience"
"Automating-GIS-processes/site" -> "corteva/geocube"
"Automating-GIS-processes/site" -> "Python-GIS-book/site"
"Automating-GIS-processes/site" -> "AaltoGIS/Sustainability-GIS"
"Automating-GIS-processes/site" -> "sarasafavi/remote-sensing-with-python"
"gdsbook/book" -> "oturns/geosnap"
"gdsbook/book" -> "pysal/momepy"
"gdsbook/book" -> "pysal/pysal"
"gdsbook/book" -> "pysal/tobler"
"gdsbook/book" -> "pysal/spopt"
"gdsbook/book" -> "geopandas/contextily"
"gdsbook/book" -> "perrygeo/pyimpute"
"gdsbook/book" -> "geocompx/geocompy"
"gdsbook/book" -> "edzer/sdsr" ["e"=1]
"gdsbook/book" -> "geopandas/dask-geopandas"
"gdsbook/book" -> "corteva/geocube"
"gdsbook/book" -> "pysal/libpysal"
"gdsbook/book" -> "mattijn/topojson"
"gdsbook/book" -> "pyrosm/pyrosm"
"gdsbook/book" -> "pysal/esda"
"microsoft/USBuildingFootprints" -> "microsoft/GlobalMLBuildingFootprints"
"microsoft/USBuildingFootprints" -> "azavea/raster-vision"
"microsoft/USBuildingFootprints" -> "mapbox/robosat"
"microsoft/USBuildingFootprints" -> "microsoft/CanadianBuildingFootprints"
"microsoft/USBuildingFootprints" -> "mapbox/tippecanoe" ["e"=1]
"microsoft/USBuildingFootprints" -> "opencitymodel/opencitymodel" ["e"=1]
"microsoft/USBuildingFootprints" -> "dwtkns/gdal-cheat-sheet"
"microsoft/USBuildingFootprints" -> "sacridini/Awesome-Geospatial"
"microsoft/USBuildingFootprints" -> "gboeing/osmnx"
"microsoft/USBuildingFootprints" -> "rasterio/rasterio"
"microsoft/USBuildingFootprints" -> "chrieke/awesome-satellite-imagery-datasets"
"microsoft/USBuildingFootprints" -> "microsoft/torchgeo"
"microsoft/USBuildingFootprints" -> "trailbehind/DeepOSM"
"microsoft/USBuildingFootprints" -> "gboeing/ppde642"
"microsoft/USBuildingFootprints" -> "Esri/arcgis-python-api" ["e"=1]
"DataXujing/CNN-paper2" -> "jayboxyz/deeplearning-image-segmentation"
"isikdogan/deepriver" -> "isikdogan/rivamap"
"jayboxyz/deeplearning-image-segmentation" -> "BBuf/Keras-Semantic-Segmentation"
"jayboxyz/deeplearning-image-segmentation" -> "LeslieZhoa/tensorflow-deeplab_v3_plus"
"jayboxyz/deeplearning-image-segmentation" -> "fuweifu-vtoo/Semantic-segmentation"
"jayboxyz/deeplearning-image-segmentation" -> "gzr2017/UNet-AerialImageSegmentation"
"jayboxyz/deeplearning-image-segmentation" -> "DataXujing/CNN-paper2"
"chrisleaman/awesome-coastal" -> "georgebv/coastlib"
"chrisleaman/awesome-coastal" -> "chrisleaman/py-wave-runup"
"chrisleaman/awesome-coastal" -> "ydoherty/CoastSat.PlanetScope"
"chrisleaman/awesome-coastal" -> "caiostringari/pywavelearn"
"chrisleaman/awesome-coastal" -> "caiostringari/picoastal"
"chrisleaman/awesome-coastal" -> "kvos/CoastSat.slope"
"chrisleaman/awesome-coastal" -> "SatelliteShorelines/CoastSeg"
"isofit/isofit" -> "emit-sds/SpectralUnmixing"
"isofit/isofit" -> "davidraythompson/istutor"
"isofit/isofit" -> "PSI-edu/spectroscopy-tetracorder"
"isofit/isofit" -> "nasa/EMIT-Data-Resources"
"isofit/isofit" -> "eradiate/eradiate"
"opengeos/lidar" -> "opengeos/whitebox-python"
"opengeos/lidar" -> "opengeos/geospatial"
"opengeos/lidar" -> "corteva/rioxarray"
"opengeos/lidar" -> "jblindsay/whitebox-tools"
"opengeos/lidar" -> "brycefrank/pyfor" ["e"=1]
"opengeos/lidar" -> "opengeos/geospatial-data-catalogs"
"datasciencecampus/laika" -> "osin-vladimir/kaggle-satellite-imagery-feature-detection" ["e"=1]
"DenisCarriere/geocoder" -> "geopy/geopy"
"DenisCarriere/geocoder" -> "thampiman/reverse-geocoder" ["e"=1]
"DenisCarriere/geocoder" -> "python-visualization/folium"
"DenisCarriere/geocoder" -> "googlemaps/google-maps-services-python"
"DenisCarriere/geocoder" -> "andrea-cuttone/geoplotlib" ["e"=1]
"DenisCarriere/geocoder" -> "daviddrysdale/python-phonenumbers" ["e"=1]
"DenisCarriere/geocoder" -> "openvenues/pypostal" ["e"=1]
"DenisCarriere/geocoder" -> "openeventdata/mordecai" ["e"=1]
"DenisCarriere/geocoder" -> "osm-search/Nominatim" ["e"=1]
"DenisCarriere/geocoder" -> "pelias/pelias" ["e"=1]
"DenisCarriere/geocoder" -> "jazzband/geojson"
"DenisCarriere/geocoder" -> "jwass/mplleaflet" ["e"=1]
"DenisCarriere/geocoder" -> "liiight/notifiers" ["e"=1]
"DenisCarriere/geocoder" -> "datamade/parserator" ["e"=1]
"DenisCarriere/geocoder" -> "gboeing/ppde642"
"earthlab/earthpy" -> "corteva/rioxarray"
"earthlab/earthpy" -> "makepath/xarray-spatial"
"earthlab/earthpy" -> "corteva/geocube"
"earthlab/earthpy" -> "earthlab/earthlab.github.io"
"earthlab/earthpy" -> "mdbartos/pysheds"
"earthlab/earthpy" -> "fatiando/verde" ["e"=1]
"earthlab/earthpy" -> "perrygeo/python-rasterstats"
"earthlab/earthpy" -> "gee-community/qgis-earthengine-plugin"
"earthlab/earthpy" -> "stac-utils/pystac-client"
"earthlab/earthpy" -> "davemlz/eemont"
"earthlab/earthpy" -> "Ouranosinc/xclim" ["e"=1]
"earthlab/earthpy" -> "acgeospatial/awesome-earthobservation-code"
"earthlab/earthpy" -> "GeoscienceAustralia/dea-notebooks"
"earthlab/earthpy" -> "sertit/eoreader" ["e"=1]
"earthlab/earthpy" -> "opengeos/whitebox-python"
"pysal/mgwr" -> "Ziqi-Li/FastGWR"
"pysal/mgwr" -> "pysal/pysal"
"pysal/mgwr" -> "oturns/geosnap"
"pysal/mgwr" -> "Ziqi-Li/geoshapley"
"pysal/mgwr" -> "pysal/momepy"
"pysal/mgwr" -> "pysal/spreg"
"pysal/mgwr" -> "pysal/segregation"
"pysal/mgwr" -> "pysal/tobler"
"pysal/mgwr" -> "sunkun1997/mgtwr" ["e"=1]
"pysal/mgwr" -> "benchmark-urbanism/cityseer-api"
"pysal/mgwr" -> "pysal/spaghetti"
"pysal/mgwr" -> "UDST/pandana"
"pysal/mgwr" -> "GeoDaCenter/geoda"
"pysal/mgwr" -> "pysal/spopt"
"pysal/mgwr" -> "gdsbook/book"
"Limor-Raviv/Tutorial_Agent_Based_Models" -> "petroniocandido/COVID19_AgentBasedSimulation"
"Limor-Raviv/Tutorial_Agent_Based_Models" -> "projectmesa/mesa-examples"
"Limor-Raviv/Tutorial_Agent_Based_Models" -> "InstituteforDiseaseModeling/covasim" ["e"=1]
"deepVector/geospatial-machine-learning" -> "opengeos/python-geospatial"
"deepVector/geospatial-machine-learning" -> "acgeospatial/awesome-earthobservation-code"
"deepVector/geospatial-machine-learning" -> "azavea/raster-vision"
"deepVector/geospatial-machine-learning" -> "sentinel-hub/eo-learn"
"deepVector/geospatial-machine-learning" -> "sshuair/torchsat"
"deepVector/geospatial-machine-learning" -> "developmentseed/label-maker"
"deepVector/geospatial-machine-learning" -> "kr-stn/awesome-sentinel"
"deepVector/geospatial-machine-learning" -> "chrieke/awesome-geospatial-companies"
"deepVector/geospatial-machine-learning" -> "planetlabs/notebooks"
"deepVector/geospatial-machine-learning" -> "davemlz/eemont"
"deepVector/geospatial-machine-learning" -> "patrickcgray/open-geo-tutorial"
"deepVector/geospatial-machine-learning" -> "chrieke/InstanceSegmentation_Sentinel2"
"deepVector/geospatial-machine-learning" -> "microsoft/torchgeo"
"deepVector/geospatial-machine-learning" -> "opengeos/Awesome-GEE"
"deepVector/geospatial-machine-learning" -> "sacridini/Awesome-Geospatial"
"pysal/momepy" -> "geopandas/dask-geopandas"
"pysal/momepy" -> "pyrosm/pyrosm"
"pysal/momepy" -> "pysal/pysal"
"pysal/momepy" -> "oturns/geosnap"
"pysal/momepy" -> "pysal/spopt"
"pysal/momepy" -> "UDST/pandana"
"pysal/momepy" -> "pysal/spaghetti"
"pysal/momepy" -> "pysal/libpysal"
"pysal/momepy" -> "movingpandas/movingpandas"
"pysal/momepy" -> "makepath/xarray-spatial"
"pysal/momepy" -> "benchmark-urbanism/cityseer-api"
"pysal/momepy" -> "pysal/esda"
"pysal/momepy" -> "pygeos/pygeos"
"pysal/momepy" -> "UDST/urbanaccess"
"pysal/momepy" -> "kuanb/peartree" ["e"=1]
"pysal/spreg" -> "pysal/giddy"
"oturns/geosnap" -> "pysal/segregation"
"oturns/geosnap" -> "pysal/tobler"
"oturns/geosnap" -> "UDST/urbanaccess"
"oturns/geosnap" -> "cenpy-devs/cenpy" ["e"=1]
"oturns/geosnap" -> "pysal/momepy"
"oturns/geosnap" -> "pysal/spaghetti"
"oturns/geosnap" -> "UDST/pandana"
"oturns/geosnap" -> "pysal/spopt"
"oturns/geosnap" -> "pyrosm/pyrosm"
"oturns/geosnap" -> "holoviz/spatialpandas"
"oturns/geosnap" -> "gdsbook/book"
"oturns/geosnap" -> "pysal/giddy"
"UDST/synthpop" -> "replicahq/doppelganger"
"mahimatendulkar/Crop-Yield-Prediction-and-Estimation-using-Time-series-remote-sensing-data." -> "ermongroup/Crop_Yield_Prediction"
"OSGeo/homebrew-osgeo4mac" -> "qgis/QGIS-Mac-Packager"
"OSGeo/homebrew-osgeo4mac" -> "qgis/homebrew-qgisdev"
"OSGeo/homebrew-osgeo4mac" -> "dwtkns/gdal-cheat-sheet"
"OSGeo/homebrew-osgeo4mac" -> "radiantearth/stac-spec"
"yannforget/pylandsat" -> "schaefed/geoarray"
"yannforget/pylandsat" -> "acolite/acolite_ls2"
"abmgis/abmgis" -> "SantaFeInstitute/ABMA" ["e"=1]
"abmgis/abmgis" -> "projectmesa/mesa-geo"
"abmgis/abmgis" -> "acrooks2/ClassModels"
"nasa-gibs/gibs-web-examples" -> "nasa-gibs/onearth"
"nasa-gibs/gibs-web-examples" -> "nasa-gibs/worldview"
"developmentseed/label-maker" -> "developmentseed/skynet-train"
"developmentseed/label-maker" -> "developmentseed/skynet-data"
"developmentseed/label-maker" -> "developmentseed/landsat-util"
"developmentseed/label-maker" -> "mapbox/robosat"
"developmentseed/label-maker" -> "azavea/raster-vision"
"developmentseed/label-maker" -> "Geoyi/pixel-decoder"
"developmentseed/label-maker" -> "CosmiQ/solaris" ["e"=1]
"developmentseed/label-maker" -> "kr-stn/awesome-sentinel"
"developmentseed/label-maker" -> "sentinelsat/sentinelsat"
"developmentseed/label-maker" -> "sshuair/torchsat"
"developmentseed/label-maker" -> "deepVector/geospatial-machine-learning"
"developmentseed/label-maker" -> "nshaud/DeepNetsForEO"
"developmentseed/label-maker" -> "azavea/raster-vision-examples"
"developmentseed/label-maker" -> "developmentseed/geolambda"
"developmentseed/label-maker" -> "acgeospatial/awesome-earthobservation-code"
"LiuDongjing/BuildingChangeDetector" -> "Jiangfeng-Xiong/satellite_seg"
"LiuDongjing/BuildingChangeDetector" -> "CarryHJR/remote-sense-quickstart" ["e"=1]
"LiuDongjing/BuildingChangeDetector" -> "kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018" ["e"=1]
"LiuDongjing/BuildingChangeDetector" -> "shinianzhihou/ChangeDetection" ["e"=1]
"LiuDongjing/BuildingChangeDetector" -> "AstarLight/Satellite-Segmentation"
"LiuDongjing/BuildingChangeDetector" -> "scrssys/semantic_segment_RSImage"
"LiuDongjing/BuildingChangeDetector" -> "granularai/fabric" ["e"=1]
"LiuDongjing/BuildingChangeDetector" -> "wylqq312715289/CDGAN"
"LiuDongjing/BuildingChangeDetector" -> "gmayday1997/SceneChangeDet" ["e"=1]
"LiuDongjing/BuildingChangeDetector" -> "LiheYoung/SenseEarth2020-ChangeDetection" ["e"=1]
"LiuDongjing/BuildingChangeDetector" -> "gg-lige/tianchi"
"LiuDongjing/BuildingChangeDetector" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"LiuDongjing/BuildingChangeDetector" -> "dsqx71/Change-Detection-in-Remote-Sensing-Images"
"LiuDongjing/BuildingChangeDetector" -> "mvkolos/siamese-change-detection" ["e"=1]
"LiuDongjing/BuildingChangeDetector" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image" ["e"=1]
"NetLogo/models" -> "NetLogo/Galapagos"
"NetLogo/models" -> "NetLogo/NetLogo"
"NetLogo/models" -> "NetLogo/Tortoise"
"NetLogo/models" -> "josemvidal/netlogomas"
"landlab/landlab" -> "r-barnes/richdem"
"landlab/landlab" -> "wschwanghart/topotoolbox"
"landlab/landlab" -> "mdbartos/pysheds"
"landlab/landlab" -> "csdms/pymt"
"landlab/landlab" -> "landlab/tutorials"
"landlab/landlab" -> "badlands-model/badlands" ["e"=1]
"landlab/landlab" -> "GeoscienceAustralia/anuga_core"
"landlab/landlab" -> "openstreams/wflow" ["e"=1]
"landlab/landlab" -> "LSDtopotools/LSDTopoTools2"
"landlab/landlab" -> "creare-com/pydem"
"landlab/landlab" -> "dtarb/TauDEM"
"landlab/landlab" -> "ec-jrc/lisflood-code" ["e"=1]
"landlab/landlab" -> "CH-Earth/summa" ["e"=1]
"landlab/landlab" -> "raoulcollenteur/Python-Hydrology-Tools" ["e"=1]
"landlab/landlab" -> "modflowpy/flopy" ["e"=1]
"HPSCIL/cuESTARFM" -> "HPSCIL/cuSTNLFFM"
"HPSCIL/cuESTARFM" -> "nmileva/starfm4py"
"HPSCIL/cuESTARFM" -> "HPSCIL/cuSTARFM"
"HPSCIL/cuESTARFM" -> "HPSCIL/cuFSDAF"
"facebookresearch/many-to-many-dijkstra" -> "carderne/gridfinder"
"facebookresearch/many-to-many-dijkstra" -> "RAMP-project/RAMP" ["e"=1]
"facebookresearch/many-to-many-dijkstra" -> "giacfalk/Electrification_SSA_data"
"facebookresearch/many-to-many-dijkstra" -> "developmentseed/ml-hv-grid-pub"
"facebookresearch/many-to-many-dijkstra" -> "KTH-dESA/OnSSET-2016"
"jensleitloff/CNN-Sentinel" -> "shakasom/Deep-Learning-for-Satellite-Imagery"
"jensleitloff/CNN-Sentinel" -> "lanha/DSen2"
"jensleitloff/CNN-Sentinel" -> "mortcanty/CRC4Docker"
"jensleitloff/CNN-Sentinel" -> "chrieke/InstanceSegmentation_Sentinel2"
"jensleitloff/CNN-Sentinel" -> "sentinel-hub/eo-flow" ["e"=1]
"jensleitloff/CNN-Sentinel" -> "nshaud/DeepNetsForEO"
"perrygeo/python-rasterstats" -> "corteva/rioxarray"
"perrygeo/python-rasterstats" -> "rasterio/rasterio"
"perrygeo/python-rasterstats" -> "makepath/xarray-spatial"
"perrygeo/python-rasterstats" -> "corteva/geocube"
"perrygeo/python-rasterstats" -> "fatiando/verde" ["e"=1]
"perrygeo/python-rasterstats" -> "geopandas/dask-geopandas"
"perrygeo/python-rasterstats" -> "cogeotiff/rio-cogeo"
"perrygeo/python-rasterstats" -> "Toblerity/Fiona"
"perrygeo/python-rasterstats" -> "r-barnes/richdem"
"perrygeo/python-rasterstats" -> "isciences/exactextract"
"perrygeo/python-rasterstats" -> "pytroll/pyresample" ["e"=1]
"perrygeo/python-rasterstats" -> "earthlab/earthpy"
"perrygeo/python-rasterstats" -> "mdbartos/pysheds"
"perrygeo/python-rasterstats" -> "geopandas/pyogrio"
"perrygeo/python-rasterstats" -> "holoviz/geoviews" ["e"=1]
"radiantearth/stac-browser" -> "stac-utils/stac-fastapi"
"radiantearth/stac-browser" -> "stac-utils/pystac"
"radiantearth/stac-browser" -> "radiantearth/stac-spec"
"radiantearth/stac-browser" -> "cogeotiff/rio-cogeo"
"radiantearth/stac-browser" -> "radiantearth/stac-api-spec"
"radiantearth/stac-browser" -> "stac-utils/pgstac"
"radiantearth/stac-browser" -> "stac-utils/pystac-client"
"radiantearth/stac-browser" -> "stac-utils/titiler-pgstac"
"radiantearth/stac-browser" -> "developmentseed/eoAPI"
"radiantearth/stac-browser" -> "developmentseed/tipg"
"radiantearth/stac-browser" -> "developmentseed/geolambda"
"radiantearth/stac-browser" -> "developmentseed/titiler"
"radiantearth/stac-browser" -> "stac-utils/qgis-stac-plugin"
"radiantearth/stac-browser" -> "cloudnativegeo/cloud-optimized-geospatial-formats-guide"
"radiantearth/stac-browser" -> "stac-utils/stac-fastapi-pgstac"
"anxiangsir/urban_seg" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"anxiangsir/urban_seg" -> "AstarLight/Satellite-Segmentation"
"anxiangsir/urban_seg" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"anxiangsir/urban_seg" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"anxiangsir/urban_seg" -> "Jiangfeng-Xiong/satellite_seg"
"anxiangsir/urban_seg" -> "cuilunan/Unet-of-remote-sensing-image"
"anxiangsir/urban_seg" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"anxiangsir/urban_seg" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"anxiangsir/urban_seg" -> "fuweifu-vtoo/Semantic-segmentation"
"anxiangsir/urban_seg" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"anxiangsir/urban_seg" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"anxiangsir/urban_seg" -> "lcylmhlcy/Semantic-segmentation"
"anxiangsir/urban_seg" -> "LiuDongjing/BuildingChangeDetector"
"anxiangsir/urban_seg" -> "scrssys/semantic_segment_RSImage"
"anxiangsir/urban_seg" -> "wangye707/ICNet-paddlepaddle"
"Priyabrata017/Crop-prediction-using-Machine-Learning" -> "VaibhavSaini19/Crop-Yield-Prediction-using-ML"
"xungeer29/Remote-Sensing-Image-Classification" -> "sjliu68/Remote-Sensing-Image-Classification"
"xungeer29/Remote-Sensing-Image-Classification" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"xungeer29/Remote-Sensing-Image-Classification" -> "cuilunan/Unet-of-remote-sensing-image"
"xungeer29/Remote-Sensing-Image-Classification" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"xungeer29/Remote-Sensing-Image-Classification" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"xungeer29/Remote-Sensing-Image-Classification" -> "BUPTLdy/Land_Use_CNN"
"xungeer29/Remote-Sensing-Image-Classification" -> "527760681/Keras-Remote-sensing-image-retrieval"
"xungeer29/Remote-Sensing-Image-Classification" -> "mortcanty/CRCPython"
"xungeer29/Remote-Sensing-Image-Classification" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"xungeer29/Remote-Sensing-Image-Classification" -> "fuweifu-vtoo/Semantic-segmentation"
"xungeer29/Remote-Sensing-Image-Classification" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "1044197988/TF.Keras-Commonly-used-models"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "cuilunan/Unet-of-remote-sensing-image"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "fuweifu-vtoo/Semantic-segmentation"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "anxiangsir/urban_seg"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "AstarLight/Satellite-Segmentation"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "ChienWong/ResUnet-a"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "lehaifeng/SCAttNet"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "xungeer29/Remote-Sensing-Image-Classification"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "lcylmhlcy/Semantic-segmentation"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "sjliu68/Remote-Sensing-Image-Classification"
"BUPTLdy/MARTA-GAN" -> "BUPTLdy/Land_Use_CNN"
"BUPTLdy/MARTA-GAN" -> "sjliu68/Remote-Sensing-Image-Classification"
"BUPTLdy/MARTA-GAN" -> "rmkemker/EarthMapper"
"BUPTLdy/MARTA-GAN" -> "weihancug/SSGF-for-HRRS-scene-classification"
"BUPTLdy/MARTA-GAN" -> "527760681/Keras-Remote-sensing-image-retrieval"
"HZCTony/U-net-with-multiple-classification" -> "sohiniroych/U-net-for-Multi-class-semantic-segmentation"
"calebrob6/land-cover" -> "microsoft/landcover"
"csaybar/EEwPython" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"csaybar/EEwPython" -> "davemlz/eemont"
"csaybar/EEwPython" -> "gee-community/geetools"
"csaybar/EEwPython" -> "jldowns/google_earth_engine_notebook"
"csaybar/EEwPython" -> "gee-community/ee-palettes"
"csaybar/EEwPython" -> "sacridini/GEET"
"csaybar/EEwPython" -> "gee-community/ee-tensorflow-notebooks"
"csaybar/EEwPython" -> "gee-community/qgis-earthengine-plugin"
"csaybar/EEwPython" -> "fitoprincipe/geetools-code-editor"
"csaybar/EEwPython" -> "mortcanty/earthengine"
"csaybar/EEwPython" -> "csaybar/EarthEngineMasterGIS"
"csaybar/EEwPython" -> "adugnag/gee_s1_ard"
"csaybar/EEwPython" -> "kr-stn/EarthEngine_scripts"
"csaybar/EEwPython" -> "eMapR/LT-GEE"
"csaybar/EEwPython" -> "giswqs/earthengine-py-notebooks"
"cuilunan/Unet-of-remote-sensing-image" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"cuilunan/Unet-of-remote-sensing-image" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"cuilunan/Unet-of-remote-sensing-image" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"cuilunan/Unet-of-remote-sensing-image" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"cuilunan/Unet-of-remote-sensing-image" -> "xungeer29/Remote-Sensing-Image-Classification"
"cuilunan/Unet-of-remote-sensing-image" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"cuilunan/Unet-of-remote-sensing-image" -> "lcylmhlcy/Semantic-segmentation"
"cuilunan/Unet-of-remote-sensing-image" -> "fuweifu-vtoo/Semantic-segmentation"
"cuilunan/Unet-of-remote-sensing-image" -> "unlimblue/u_net"
"cuilunan/Unet-of-remote-sensing-image" -> "anxiangsir/urban_seg"
"cuilunan/Unet-of-remote-sensing-image" -> "mortcanty/CRCPython"
"cuilunan/Unet-of-remote-sensing-image" -> "ChienWong/ResUnet-a"
"cuilunan/Unet-of-remote-sensing-image" -> "Jiangfeng-Xiong/satellite_seg"
"cuilunan/Unet-of-remote-sensing-image" -> "sjliu68/Remote-Sensing-Image-Classification"
"cuilunan/Unet-of-remote-sensing-image" -> "leeguandong/How-to-make-high-resolution-remote-sensing-image-dataset"
"NetLogo/Tortoise" -> "NetLogo/Galapagos"
"cplusx/google-street-view-panorama-download" -> "geoporttishare/Helsinki_GreenView"
"cplusx/google-street-view-panorama-download" -> "robolyst/streetview"
"stac-utils/pystac" -> "stac-utils/pystac-client"
"stac-utils/pystac" -> "stac-utils/stac-fastapi"
"stac-utils/pystac" -> "gjoseph92/stackstac"
"stac-utils/pystac" -> "radiantearth/stac-spec"
"stac-utils/pystac" -> "radiantearth/stac-browser"
"stac-utils/pystac" -> "opendatacube/odc-stac"
"stac-utils/pystac" -> "radiantearth/stac-api-spec"
"stac-utils/pystac" -> "stac-utils/stactools"
"stac-utils/pystac" -> "cogeotiff/rio-cogeo"
"stac-utils/pystac" -> "corteva/geocube"
"stac-utils/pystac" -> "developmentseed/titiler"
"stac-utils/pystac" -> "developmentseed/eoAPI"
"stac-utils/pystac" -> "intake/intake-stac"
"stac-utils/pystac" -> "geopandas/dask-geopandas"
"stac-utils/pystac" -> "stac-utils/pgstac"
"gumblex/tms2geotiff" -> "deepbands/deep-learning-datasets-maker"
"gumblex/tms2geotiff" -> "aliaksandr960/segment-anything-eo"
"jgrss/geowombat" -> "corteva/rioxarray"
"jgrss/geowombat" -> "xarray-contrib/xvec" ["e"=1]
"jgrss/geowombat" -> "carpentries-incubator/geospatial-python"
"jgrss/geowombat" -> "xarray-contrib/xarray_leaflet"
"jgrss/geowombat" -> "geofileops/geofileops"
"toddwschneider/nyc-subway-data" -> "tsdataclinic/SubwayCrowds"
"cogeotiff/rio-cogeo" -> "cogeotiff/rio-tiler"
"cogeotiff/rio-cogeo" -> "developmentseed/rio-viz"
"cogeotiff/rio-cogeo" -> "developmentseed/titiler"
"cogeotiff/rio-cogeo" -> "radiantearth/stac-browser"
"cogeotiff/rio-cogeo" -> "stac-utils/pystac"
"cogeotiff/rio-cogeo" -> "opendatacube/odc-stac"
"cogeotiff/rio-cogeo" -> "corteva/rioxarray"
"cogeotiff/rio-cogeo" -> "developmentseed/rio-stac"
"cogeotiff/rio-cogeo" -> "gjoseph92/stackstac"
"cogeotiff/rio-cogeo" -> "developmentseed/morecantile"
"cogeotiff/rio-cogeo" -> "developmentseed/cogeo-mosaic"
"cogeotiff/rio-cogeo" -> "stac-utils/stac-fastapi"
"cogeotiff/rio-cogeo" -> "mapbox/rio-glui"
"cogeotiff/rio-cogeo" -> "sat-utils/sat-search"
"cogeotiff/rio-cogeo" -> "airbusgeo/cogger"
"opendatacube/odc-tools" -> "opendatacube/datacube-stats"
"intake/intake-stac" -> "developmentseed/labs-gpt-stac"
"intake/intake-stac" -> "stac-utils/pystac-client"
"intake/intake-stac" -> "gjoseph92/stackstac"
"digitalearthafrica/deafrica-sandbox-notebooks" -> "GeoscienceAustralia/dea-notebooks"
"digitalearthafrica/deafrica-sandbox-notebooks" -> "opendatacube/cube-in-a-box"
"digitalearthafrica/deafrica-sandbox-notebooks" -> "awesome-spectral-indices/spyndex"
"sdadas/polish-nlp-resources" -> "ksopyla/awesome-nlp-polish"
"sdadas/polish-nlp-resources" -> "sdadas/polish-roberta"
"sdadas/polish-nlp-resources" -> "kldarek/polbert"
"sdadas/polish-nlp-resources" -> "sdadas/polish-sentence-evaluation"
"sdadas/polish-nlp-resources" -> "sheerun/awesome-polish-nlp"
"sdadas/polish-nlp-resources" -> "ipipan/spacy-pl"
"sdadas/polish-nlp-resources" -> "ZILiAT-NASK/BAN-PL"
"sdadas/polish-nlp-resources" -> "CLARIN-PL/embeddings"
"sdadas/polish-nlp-resources" -> "dzieciou/pystempel"
"sdadas/polish-nlp-resources" -> "kwrobel-nlp/krnnt"
"sdadas/polish-nlp-resources" -> "sdadas/warsaw-transport"
"sdadas/polish-nlp-resources" -> "allegro/HerBERT"
"sdadas/polish-nlp-resources" -> "Ermlab/PoLitBert"
"sdadas/polish-nlp-resources" -> "chrisociepa/allamo"
"sdadas/polish-nlp-resources" -> "CLARIN-PL/LEPISZCZE"
"DNCrane/Cover-Tree" -> "manzilzaheer/CoverTree"
"DHI/terracotta" -> "cogeotiff/rio-tiler"
"DHI/terracotta" -> "developmentseed/titiler"
"DHI/terracotta" -> "cogeotiff/rio-cogeo"
"DHI/terracotta" -> "banesullivan/localtileserver"
"DHI/terracotta" -> "radiantearth/stac-spec"
"DHI/terracotta" -> "corteva/rioxarray"
"DHI/terracotta" -> "stac-utils/pystac"
"DHI/terracotta" -> "kr-stn/awesome-sentinel"
"DHI/terracotta" -> "makepath/xarray-spatial"
"DHI/terracotta" -> "developmentseed/timvt"
"DHI/terracotta" -> "perrygeo/python-rasterstats"
"DHI/terracotta" -> "ungarj/mapchete"
"DHI/terracotta" -> "mdbartos/pysheds"
"DHI/terracotta" -> "mojodna/marblecutter"
"DHI/terracotta" -> "rasterio/rasterio"
"gee-community/example-scripts" -> "gee-community/awesome-google-earth-engine"
"gee-community/example-scripts" -> "gee-community/ee-jupyter-contrib"
"gee-community/example-scripts" -> "gee-community/ee-palettes"
"sentinel-hub/sentinel2-cloud-detector" -> "sentinel-hub/sentinelhub-py"
"sentinel-hub/sentinel2-cloud-detector" -> "sentinel-hub/eo-learn"
"sentinel-hub/sentinel2-cloud-detector" -> "kr-stn/awesome-sentinel"
"sentinel-hub/sentinel2-cloud-detector" -> "GERSL/Fmask"
"sentinel-hub/sentinel2-cloud-detector" -> "sentinelsat/sentinelsat"
"sentinel-hub/sentinel2-cloud-detector" -> "johntruckenbrodt/pyroSAR" ["e"=1]
"sentinel-hub/sentinel2-cloud-detector" -> "CNES/MAJA" ["e"=1]
"sentinel-hub/sentinel2-cloud-detector" -> "olivierhagolle/Sentinel-download"
"sentinel-hub/sentinel2-cloud-detector" -> "bopen/xarray-sentinel" ["e"=1]
"sentinel-hub/sentinel2-cloud-detector" -> "awesome-spectral-indices/awesome-spectral-indices"
"sentinel-hub/sentinel2-cloud-detector" -> "lanha/DSen2"
"sentinel-hub/sentinel2-cloud-detector" -> "sentinel-hub/custom-scripts"
"sentinel-hub/sentinel2-cloud-detector" -> "ESA-PhiLab/iris" ["e"=1]
"sentinel-hub/sentinel2-cloud-detector" -> "makepath/xarray-spatial"
"sentinel-hub/sentinel2-cloud-detector" -> "ameraner/dsen2-cr"
"gee-community/ee-palettes" -> "gee-community/geetools"
"gee-community/ee-palettes" -> "eMapR/LT-GEE"
"gee-community/ee-palettes" -> "fitoprincipe/geetools-code-editor"
"gee-community/ee-palettes" -> "davemlz/eemont"
"gee-community/ee-palettes" -> "samapriya/geeup"
"gee-community/ee-palettes" -> "kr-stn/EarthEngine_scripts"
"gee-community/ee-palettes" -> "gee-community/awesome-google-earth-engine"
"gee-community/ee-palettes" -> "gee-community/qgis-earthengine-plugin"
"gee-community/ee-palettes" -> "tracek/gee_asset_manager"
"gee-community/ee-palettes" -> "csaybar/EEwPython"
"gee-community/ee-palettes" -> "gee-community/example-scripts"
"gee-community/ee-palettes" -> "mortcanty/earthengine"
"gee-community/ee-palettes" -> "samapriya/awesome-gee-community-datasets"
"gee-community/ee-palettes" -> "awesome-spectral-indices/awesome-spectral-indices"
"gee-community/ee-palettes" -> "opengeos/Awesome-GEE"
"ndminhhus/geeguide" -> "samsammurphy/gee-atmcorr-S2"
"seadas/seadas" -> "mowerther/BNN_2022"
"seadas/seadas" -> "acolite/acolite_ls2"
"projectmesa/mesa-geo" -> "projectmesa/mesa-examples"
"projectmesa/mesa-geo" -> "abmgis/abmgis"
"projectmesa/mesa-geo" -> "projectmesa/mesa"
"projectmesa/mesa-geo" -> "jofmi/agentpy"
"Open-EO/openeo-python-client" -> "Open-EO/openeo-api"
"Open-EO/openeo-python-client" -> "senbox-org/sen2like"
"Open-EO/openeo-python-client" -> "opendatacube/datacube-core"
"BSifringer/EnhancedDCM" -> "cjsyzwsh/dnn-for-economic-information"
"HPSCIL/cuSTARFM" -> "HPSCIL/cuESTARFM"
"HPSCIL/cuSTARFM" -> "harisw/STARFM_prediction"
"Yonv1943/CloudRemoval" -> "enomotokenji/mcgan-cvprw2017-pytorch"
"Yonv1943/CloudRemoval" -> "Penn000/SpA-GAN_for_cloud_removal"
"Yonv1943/CloudRemoval" -> "PeeBar/Awesome-Cloud-Detection-and-Removal"
"yannforget/landsatxplore" -> "yannforget/pylandsat"
"yannforget/landsatxplore" -> "dgketchum/Landsat578"
"yannforget/landsatxplore" -> "olivierhagolle/LANDSAT-Download"
"yannforget/landsatxplore" -> "robintw/Py6S"
"yannforget/landsatxplore" -> "GERSL/Fmask"
"yannforget/landsatxplore" -> "sentinel-hub/sentinelhub-py"
"yannforget/landsatxplore" -> "developmentseed/landsat-util"
"yannforget/landsatxplore" -> "lucadelu/pyModis"
"yannforget/landsatxplore" -> "jgrss/geowombat"
"cogeotiff/rio-tiler" -> "developmentseed/titiler"
"cogeotiff/rio-tiler" -> "cogeotiff/rio-cogeo"
"cogeotiff/rio-tiler" -> "DHI/terracotta"
"cogeotiff/rio-tiler" -> "radiantearth/stac-spec"
"cogeotiff/rio-tiler" -> "developmentseed/rio-viz"
"cogeotiff/rio-tiler" -> "mapbox/landsat-tiler"
"cogeotiff/rio-tiler" -> "corteva/rioxarray"
"cogeotiff/rio-tiler" -> "sat-utils/sat-search"
"cogeotiff/rio-tiler" -> "stac-utils/pystac"
"cogeotiff/rio-tiler" -> "gjoseph92/stackstac"
"cogeotiff/rio-tiler" -> "developmentseed/morecantile"
"cogeotiff/rio-tiler" -> "stac-utils/stac-fastapi"
"cogeotiff/rio-tiler" -> "developmentseed/geolambda"
"cogeotiff/rio-tiler" -> "flatgeobuf/flatgeobuf" ["e"=1]
"cogeotiff/rio-tiler" -> "rasterio/rasterio"
"wuyang0329/unet" -> "ShawDa/unet-rgb"
"wuyang0329/unet" -> "fosaken/U-Net-segmentation"
"wuyang0329/unet" -> "HZCTony/U-net-with-multiple-classification"
"LeslieZhoa/tensorflow-deeplab_v3_plus" -> "jayboxyz/deeplearning-image-segmentation"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "fuweifu-vtoo/Semantic-segmentation"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "zlckanata/DeepGlobe-Road-Extraction-Challenge" ["e"=1]
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "anxiangsir/urban_seg"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "tropicalmentat/land-cover-to-land-use-classification"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "jiankang1991/road_extraction_remote_sensing" ["e"=1]
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "manideep2510/eye-in-the-sky"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"phelber/EuroSAT" -> "raoofnaushad/Land-Cover-Classification-using-Sentinel-2-Dataset"
"phelber/EuroSAT" -> "jensleitloff/CNN-Sentinel"
"phelber/EuroSAT" -> "sentinel-hub/eo-learn"
"phelber/EuroSAT" -> "calebrob6/land-cover"
"phelber/EuroSAT" -> "shakasom/Deep-Learning-for-Satellite-Imagery"
"phelber/EuroSAT" -> "sentinelsat/sentinelsat"
"phelber/EuroSAT" -> "acgeospatial/awesome-earthobservation-code"
"phelber/EuroSAT" -> "microsoft/satellite-imagery-labeling-tool"
"phelber/EuroSAT" -> "lanha/DSen2"
"phelber/EuroSAT" -> "awesome-spectral-indices/awesome-spectral-indices"
"phelber/EuroSAT" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"phelber/EuroSAT" -> "kr-stn/awesome-sentinel"
"phelber/EuroSAT" -> "sentinel-hub/sentinel2-cloud-detector"
"phelber/EuroSAT" -> "VSainteuf/pytorch-psetae" ["e"=1]
"phelber/EuroSAT" -> "isaaccorley/torchrs" ["e"=1]
"microsoft/landcover" -> "calebrob6/land-cover"
"microsoft/landcover" -> "microsoft/landcover-orinoquia"
"microsoft/landcover" -> "microsoft/AIforEarthDataSets"
"microsoft/landcover" -> "microsoft/aerial_wildlife_detection" ["e"=1]
"microsoft/landcover" -> "microsoft/satellite-imagery-labeling-tool"
"ICESAT-2HackWeek/ICESat2_hackweek_tutorials" -> "tsutterley/read-ICESat-2"
"ICESAT-2HackWeek/ICESat2_hackweek_tutorials" -> "ICESAT-2HackWeek/2020_ICESat-2_Hackweek_Tutorials"
"ICESAT-2HackWeek/ICESat2_hackweek_tutorials" -> "SmithB/ICESat2"
"ICESAT-2HackWeek/ICESat2_hackweek_tutorials" -> "icesat2py/icepyx"
"ICESAT-2HackWeek/ICESat2_hackweek_tutorials" -> "Oht0nger/PhoLabeler"
"ICESAT-2HackWeek/ICESat2_hackweek_tutorials" -> "icesat-2UT/PhoREAL"
"ICESAT-2HackWeek/ICESat2_hackweek_tutorials" -> "dshean/icesat_tools"
"icesat2py/icepyx" -> "icesat-2UT/PhoREAL"
"icesat2py/icepyx" -> "ICESAT-2HackWeek/ICESat2_hackweek_tutorials"
"icesat2py/icepyx" -> "tsutterley/read-ICESat-2"
"icesat2py/icepyx" -> "ICESAT-2HackWeek/2020_ICESat-2_Hackweek_Tutorials"
"icesat2py/icepyx" -> "nasa-jpl/captoolkit" ["e"=1]
"icesat2py/icepyx" -> "nsidc/NSIDC-Data-Tutorials"
"icesat2py/icepyx" -> "SmithB/ICESat2"
"icesat2py/icepyx" -> "SlideRuleEarth/sliderule-python"
"icesat2py/icepyx" -> "Oht0nger/PhoLabeler"
"icesat2py/icepyx" -> "nsidc/earthaccess"
"icesat2py/icepyx" -> "ICESat2-Bathymetry/Information"
"icesat2py/icepyx" -> "SlideRuleEarth/sliderule"
"tsutterley/read-ICESat-2" -> "SmithB/ICESat2"
"tsutterley/read-ICESat-2" -> "ICESAT-2HackWeek/ICESat2_hackweek_tutorials"
"tsutterley/read-ICESat-2" -> "SlideRuleEarth/sliderule-python"
"tsutterley/read-ICESat-2" -> "icesat2py/icepyx"
"tsutterley/read-ICESat-2" -> "icesat-2UT/PhoREAL"
"tsutterley/read-ICESat-2" -> "ICESat2-Bathymetry/Information"
"mapbox/landsat-tiler" -> "mapbox/sentinel-tiler"
"mapbox/landsat-tiler" -> "RemotePixel/remotepixel-tiler"
"mapbox/landsat-tiler" -> "RemotePixel/remotepixel-api"
"mapbox/landsat-tiler" -> "sat-utils/sat-api"
"mapbox/landsat-tiler" -> "cogeotiff/rio-tiler"
"mapbox/landsat-tiler" -> "mojodna/marblecutter"
"mapbox/landsat-tiler" -> "developmentseed/geolambda"
"mapbox/landsat-tiler" -> "ungarj/mapchete"
"CNES/RadiativeTransferCode-OSOAA" -> "fnemina/pyOSOAA"
"CNES/RadiativeTransferCode-OSOAA" -> "tadz-io/hydropt"
"CNES/RadiativeTransferCode-OSOAA" -> "mowerther/BNN_2022"
"SDXorg/pysd" -> "SDXorg/PySD-Cookbook"
"SDXorg/pysd" -> "climateinteractive/SDEverywhere"
"SDXorg/pysd" -> "bpowers/sd.js"
"SDXorg/pysd" -> "pbreach/venpy"
"SDXorg/pysd" -> "SDXorg/SD-Tools"
"SDXorg/pysd" -> "SDXorg/test-models"
"SDXorg/pysd" -> "quaquel/EMAworkbench" ["e"=1]
"SDXorg/pysd" -> "bpowers/simlin"
"SDXorg/pysd" -> "transentis/bptk_py_tutorial"
"SDXorg/pysd" -> "JimDuggan/SDMR"
"SDXorg/pysd" -> "scottfr/insightmaker"
"SDXorg/pysd" -> "highperformancecoder/minsky"
"carpentries-incubator/geospatial-python" -> "jgrss/geowombat"
"carpentries-incubator/geospatial-python" -> "stac-utils/stactools"
"lucadelu/pyModis" -> "jgomezdans/get_modis"
"Dan-Patterson/Tools_for_ArcGIS_Pro" -> "Dan-Patterson/numpy_geometry"
"Dan-Patterson/Tools_for_ArcGIS_Pro" -> "AlexArcPy/registrant"
"pysal/spopt" -> "pysal/momepy"
"pysal/spopt" -> "pysal/spaghetti"
"pysal/spopt" -> "pysal/libpysal"
"pysal/spopt" -> "pysal/pysal"
"pysal/spopt" -> "pyrosm/pyrosm"
"pysal/spopt" -> "corteva/geocube"
"pysal/spopt" -> "pysal/tobler"
"pysal/spopt" -> "oturns/geosnap"
"pysal/spopt" -> "pysal/esda"
"pysal/spopt" -> "pygeos/pygeos"
"pysal/spopt" -> "pysal/segregation"
"pysal/spopt" -> "geopandas/dask-geopandas"
"pysal/spopt" -> "pysal/splot"
"pysal/spopt" -> "makepath/xarray-spatial"
"pysal/spopt" -> "geopandas/pyogrio"
"JavisPeng/u_net_liver" -> "Guzaiwang/CE-Net" ["e"=1]
"JavisPeng/u_net_liver" -> "Czt1998/U-net"
"JavisPeng/u_net_liver" -> "mapleneverfade/pytorch-semantic-segmentation"
"JavisPeng/u_net_liver" -> "lsh1994/keras-segmentation"
"JavisPeng/u_net_liver" -> "assassint2017/MICCAI-LITS2017" ["e"=1]
"mie-lab/trackintel" -> "mie-lab/location-prediction"
"mie-lab/trackintel" -> "anitagraser/movement-analysis-tools"
"mie-lab/trackintel" -> "mie-lab/location-mode-prediction"
"mie-lab/trackintel" -> "scikit-mobility/scikit-mobility"
"mie-lab/trackintel" -> "scikit-mobility/DeepLearning4HumanMobility"
"mie-lab/trackintel" -> "winstonyym/urbanity"
"mie-lab/trackintel" -> "movingpandas/movingpandas"
"mie-lab/trackintel" -> "GeoDS/COVID19USFlows" ["e"=1]
"UDST/pandana" -> "UDST/urbanaccess"
"UDST/pandana" -> "UDST/osmnet"
"UDST/pandana" -> "UDST/urbansim"
"UDST/pandana" -> "pyrosm/pyrosm"
"UDST/pandana" -> "pysal/momepy"
"UDST/pandana" -> "oturns/geosnap"
"UDST/pandana" -> "r5py/r5py" ["e"=1]
"UDST/pandana" -> "kuanb/peartree" ["e"=1]
"UDST/pandana" -> "scikit-mobility/scikit-mobility"
"UDST/pandana" -> "movingpandas/movingpandas"
"UDST/pandana" -> "waddell/urban-informatics-and-visualization"
"UDST/pandana" -> "gboeing/ppde642"
"UDST/pandana" -> "benchmark-urbanism/cityseer-api"
"UDST/pandana" -> "UDST/choicemodels"
"UDST/pandana" -> "ipeaGIT/r5r" ["e"=1]
"michelbierlaire/biogeme" -> "mncosta/biogeme_tutorial"
"michelbierlaire/biogeme" -> "jpn--/larch"
"michelbierlaire/biogeme" -> "timothyb0912/pylogit"
"mattijn/topojson" -> "geopandas/pyogrio"
"mattijn/topojson" -> "calvinmetcalf/topojson.py"
"mattijn/topojson" -> "pysal/tobler"
"mattijn/topojson" -> "xarray-contrib/xarray_leaflet"
"mattijn/topojson" -> "corteva/geocube"
"samapriya/geeup" -> "samapriya/gee_asset_manager_addon"
"samapriya/geeup" -> "tracek/gee_asset_manager"
"samapriya/geeup" -> "gee-community/ee-palettes"
"samapriya/geeup" -> "samapriya/ee-appshot"
"foamliu/Scene-Classification" -> "NishantBhavsar/intel-scene-classification"
"foamliu/Scene-Classification" -> "chenyuntc/scene-baseline"
"foamliu/Scene-Classification" -> "buptchan/scene-classification"
"MarcYin/SIAC_GEE" -> "MarcYin/SIAC"
"MarcYin/SIAC_GEE" -> "samsammurphy/gee-atmcorr-S2"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "cuilunan/Unet-of-remote-sensing-image"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "manideep2510/eye-in-the-sky"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "rogerxujiang/dstl_unet"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "rmkemker/EarthMapper"
"manideep2510/eye-in-the-sky" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"manideep2510/eye-in-the-sky" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"manideep2510/eye-in-the-sky" -> "datasciencecampus/laika"
"manideep2510/eye-in-the-sky" -> "chrieke/InstanceSegmentation_Sentinel2"
"manideep2510/eye-in-the-sky" -> "nshaud/DeepNetsForEO"
"manideep2510/eye-in-the-sky" -> "bhavesh907/Crop-Classification" ["e"=1]
"manideep2510/eye-in-the-sky" -> "gicait/DL-for-satellite-image-analysis"
"manideep2510/eye-in-the-sky" -> "rmkemker/EarthMapper"
"manideep2510/eye-in-the-sky" -> "rogerxujiang/dstl_unet"
"manideep2510/eye-in-the-sky" -> "cuilunan/Unet-of-remote-sensing-image"
"manideep2510/eye-in-the-sky" -> "sshuair/torchsat"
"manideep2510/eye-in-the-sky" -> "AstarLight/Satellite-Segmentation"
"manideep2510/eye-in-the-sky" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"manideep2510/eye-in-the-sky" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"manideep2510/eye-in-the-sky" -> "olgaliak/segmentation-unet-maskrcnn"
"acgeospatial/Satellite_Imagery_Python" -> "acgeospatial/Geospatial_Python_CourseV1"
"acgeospatial/Satellite_Imagery_Python" -> "patrickcgray/open-geo-tutorial"
"acgeospatial/Satellite_Imagery_Python" -> "ceholden/open-geo-tutorial"
"acgeospatial/Satellite_Imagery_Python" -> "sarasafavi/remote-sensing-with-python"
"acgeospatial/Satellite_Imagery_Python" -> "acgeospatial/GoogleEarthEnginePy"
"benchmark-urbanism/cityseer-api" -> "winstonyym/urbanity"
"benchmark-urbanism/cityseer-api" -> "PratyushTripathy/COINS"
"benchmark-urbanism/cityseer-api" -> "mszell/bikenwgrowth"
"sshuair/torchsat" -> "CosmiQ/solaris" ["e"=1]
"sshuair/torchsat" -> "deepVector/geospatial-machine-learning"
"sshuair/torchsat" -> "nshaud/DeepNetsForEO"
"sshuair/torchsat" -> "azavea/raster-vision"
"sshuair/torchsat" -> "developmentseed/label-maker"
"sshuair/torchsat" -> "acgeospatial/awesome-earthobservation-code"
"sshuair/torchsat" -> "sentinel-hub/eo-learn"
"sshuair/torchsat" -> "mapbox/robosat"
"sshuair/torchsat" -> "johntruckenbrodt/pyroSAR" ["e"=1]
"sshuair/torchsat" -> "chrieke/awesome-satellite-imagery-datasets"
"sshuair/torchsat" -> "kr-stn/awesome-sentinel"
"sshuair/torchsat" -> "radiantearth/mlhub-tutorials"
"sshuair/torchsat" -> "manideep2510/eye-in-the-sky"
"sshuair/torchsat" -> "azavea/raster-vision-examples"
"sshuair/torchsat" -> "MarcCoru/crop-type-mapping" ["e"=1]
"enomotokenji/mcgan-cvprw2017-pytorch" -> "ermongroup/STGAN"
"thinkingmachines/ph-poverty-mapping" -> "thinkingmachines/unicef-ai4d-poverty-mapping"
"thinkingmachines/ph-poverty-mapping" -> "jmathur25/predicting-poverty-replication"
"sjliu68/Remote-Sensing-Image-Classification" -> "lironui/Double-Branch-Dual-Attention-Mechanism-Network" ["e"=1]
"sjliu68/Remote-Sensing-Image-Classification" -> "codeRimoe/DL_for_RSIs"
"meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery" -> "brad-ross/crop-yield-prediction-project"
"meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery" -> "AnnaXWang/deep-transfer-learning-crop-prediction"
"meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery" -> "AkshanshChahal/ML-in-Agriculture"
"meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery" -> "saeedkhaki92/Yield-Prediction-DNN"
"advaitsave/Multiclass-Semantic-Segmentation-CamVid" -> "srihari-humbarwadi/cityscapes-segmentation-with-Unet"
"vicwer/sense_classification" -> "fortitude94deng/huawei_remote-sensing"
"vicwer/sense_classification" -> "Parker-Lyu/rscup2019_classifier"
"vicwer/sense_classification" -> "niecongchong/RS-Scene-Classification"
"vicwer/sense_classification" -> "fortitude94deng/baidu-remote-sensing"
"vicwer/sense_classification" -> "luoqingshan/Gra_Dedign"
"vicwer/sense_classification" -> "tm9161/SAT"
"cogeotiff/cog-spec" -> "mojodna/marblecutter"
"feevos/resuneta" -> "ChienWong/ResUnet-a"
"feevos/resuneta" -> "waldnerf/decode"
"feevos/resuneta" -> "feevos/ceecnet"
"feevos/resuneta" -> "sentinel-hub/field-delineation" ["e"=1]
"feevos/resuneta" -> "chrieke/InstanceSegmentation_Sentinel2"
"feevos/resuneta" -> "Akhilesh64/ResUnet-a"
"fitoprincipe/geebap" -> "samsammurphy/ee-atmcorr-timeseries"
"fitoprincipe/geebap" -> "jldowns/google_earth_engine_notebook"
"patrickcgray/open-geo-tutorial" -> "ceholden/open-geo-tutorial"
"patrickcgray/open-geo-tutorial" -> "acgeospatial/awesome-earthobservation-code"
"patrickcgray/open-geo-tutorial" -> "acgeospatial/Satellite_Imagery_Python"
"patrickcgray/open-geo-tutorial" -> "patrickcgray/deep_learning_ecology" ["e"=1]
"patrickcgray/open-geo-tutorial" -> "csaybar/EEwPython"
"patrickcgray/open-geo-tutorial" -> "davemlz/eemont"
"patrickcgray/open-geo-tutorial" -> "giswqs/earthengine-py-notebooks"
"patrickcgray/open-geo-tutorial" -> "sentinel-hub/eo-learn"
"patrickcgray/open-geo-tutorial" -> "earthlab/earthpy"
"patrickcgray/open-geo-tutorial" -> "deepVector/geospatial-machine-learning"
"patrickcgray/open-geo-tutorial" -> "jensleitloff/CNN-Sentinel"
"DuFanXin/deep_residual_unet" -> "Kaido0/Brain-Tissue-Segment-Keras"
"developmentseed/mosaicjson-spec" -> "developmentseed/cogeo-mosaic"
"opendatacube/datacube-notebooks" -> "opendatacube/datacube-dataset-config"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation-tf2"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "ChienWong/ResUnet-a"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "lehaifeng/SCAttNet"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "lcylmhlcy/Semantic-segmentation"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "cuilunan/Unet-of-remote-sensing-image"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "scrssys/semantic_segment_RSImage"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "AstarLight/Satellite-Segmentation"
"nasa-gibs/onearth" -> "nasa-gibs/mrf"
"nasa-gibs/onearth" -> "nasa-gibs/gibs-web-examples"
"nasa-gibs/onearth" -> "nasa-gibs/onearth-boxes"
"leeguandong/How-to-make-high-resolution-remote-sensing-image-dataset" -> "scrssys/semantic_segment_RSImage"
"chenyuntc/scene-baseline" -> "buptchan/scene-classification"
"chenyuntc/scene-baseline" -> "fangfchen/AIChallenger_SceneClassification_ZJUGIVE"
"chenyuntc/scene-baseline" -> "foamliu/Scene-Classification"
"chenyuntc/scene-baseline" -> "yya007/SceneClassification"
"puke3615/SceneClassify" -> "foamliu/Scene-Classification"
"puke3615/SceneClassify" -> "chenyuntc/scene-baseline"
"puke3615/SceneClassify" -> "fangfchen/AIChallenger_SceneClassification_ZJUGIVE"
"puke3615/SceneClassify" -> "niecongchong/RS-Scene-Classification"
"seanyx/RivWidthCloudPaper" -> "isikdogan/rivamap"
"developmentseed/rio-viz" -> "developmentseed/morecantile"
"developmentseed/rio-viz" -> "cogeotiff/rio-cogeo"
"developmentseed/rio-viz" -> "developmentseed/cogeo-mosaic"
"developmentseed/rio-viz" -> "geospatial-jeff/aiocogeo"
"BBuf/Keras-Semantic-Segmentation" -> "luyanger1799/Amazing-Semantic-Segmentation" ["e"=1]
"BBuf/Keras-Semantic-Segmentation" -> "jayboxyz/deeplearning-image-segmentation"
"BBuf/Keras-Semantic-Segmentation" -> "lsh1994/keras-segmentation"
"BBuf/Keras-Semantic-Segmentation" -> "1044197988/TF.Keras-Commonly-used-models"
"BBuf/Keras-Semantic-Segmentation" -> "niecongchong/HRNet-keras-semantic-segmentation"
"BBuf/Keras-Semantic-Segmentation" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"BBuf/Keras-Semantic-Segmentation" -> "bubbliiiing/Semantic-Segmentation" ["e"=1]
"BBuf/Keras-Semantic-Segmentation" -> "kirilcvetkov92/Semantic-Segmentation-BiSeNet"
"BBuf/Keras-Semantic-Segmentation" -> "junyuchen245/SPECT-CT-Seg-ResUNet-Keras"
"BBuf/Keras-Semantic-Segmentation" -> "guanfuchen/semseg" ["e"=1]
"BBuf/Keras-Semantic-Segmentation" -> "TianzhongSong/Person-Segmentation-Keras" ["e"=1]
"BBuf/Keras-Semantic-Segmentation" -> "divamgupta/image-segmentation-keras" ["e"=1]
"microsoft/CanadianBuildingFootprints" -> "microsoft/Uganda-Tanzania-Building-Footprints"
"microsoft/CanadianBuildingFootprints" -> "microsoft/AustraliaBuildingFootprints"
"sustainlab-group/africa_poverty" -> "chrisyeh96/africa_poverty_clean"
"sustainlab-group/africa_poverty" -> "Global-Policy-Lab/mosaiks-paper"
"sustainlab-group/africa_poverty" -> "jmathur25/predicting-poverty-replication"
"nsidc/NSIDC-Data-Access-Notebook" -> "nsidc/NSIDC-Data-Tutorials"
"ucdavisdatalab/Intro-to-Desktop-GIS-with-QGIS" -> "ucdavisdatalab/Spatial_SQL"
"ucdavisdatalab/Intro-to-Desktop-GIS-with-QGIS" -> "mltConsEcol/QGIS-Tutorial"
"ucdavisdatalab/Intro-to-Desktop-GIS-with-QGIS" -> "tjukanovt/QGIS-tutorial"
"lcylmhlcy/Semantic-segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"acolite/acolite_ls2" -> "BrandonSmithJ/MDN"
"yya007/SceneClassification" -> "fangfchen/AIChallenger_SceneClassification_ZJUGIVE"
"Servir-Mekong/hydra-floods" -> "aazuspan/wxee"
"Servir-Mekong/hydra-floods" -> "cordmaur/WaterDetect"
"Servir-Mekong/hydra-floods" -> "spaceml-org/ml4floods"
"AnnaXWang/deep-transfer-learning-crop-prediction" -> "cleipski/CropPredict"
"AnnaXWang/deep-transfer-learning-crop-prediction" -> "meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery"
"AnnaXWang/deep-transfer-learning-crop-prediction" -> "brad-ross/crop-yield-prediction-project"
"AnnaXWang/deep-transfer-learning-crop-prediction" -> "gabrieltseng/pycrop-yield-prediction"
"AnnaXWang/deep-transfer-learning-crop-prediction" -> "ermongroup/Crop_Yield_Prediction"
"CNES/swot-hydrology-toolbox" -> "SWOTAlgorithms/RiverObs"
"CNES/swot-hydrology-toolbox" -> "CNES/swot_simulator"
"CNES/swot-hydrology-toolbox" -> "SWOT-community/SWOT-OpenToolkit"
"mittrees/Treepedia_Public" -> "y26805/Treepedia_Public"
"mittrees/Treepedia_Public" -> "krakchris/TreeTect"
"mittrees/Treepedia_Public" -> "billcai/treepedia_dl_public"
"mittrees/Treepedia_Public" -> "stevage/OpenTrees"
"lehaifeng/SCAttNet" -> "lironui/MACU-Net"
"AB-CE/abcFinance" -> "AB-CE/abce"
"alexsingleton/urban_analytics" -> "waddell/urban-informatics-and-visualization"
"alexsingleton/urban_analytics" -> "GDSL-UL/Teaching_Links"
"isciences/exactextract" -> "isciences/exactextractr" ["e"=1]
"isciences/exactextract" -> "xarray-contrib/xvec" ["e"=1]
"isciences/exactextract" -> "corteva/rioxarray"
"isciences/exactextract" -> "opendatacube/odc-stac"
"isciences/exactextract" -> "google/Xee"
"isciences/exactextract" -> "rspatial/terra" ["e"=1]
"isciences/exactextract" -> "geofileops/geofileops"
"isciences/exactextract" -> "corteva/geocube"
"isciences/exactextract" -> "gjoseph92/stackstac"
"dovahcrow/patchify.py" -> "the-lay/tiler"
"Vooban/Smoothly-Blend-Image-Patches" -> "ternaus/kaggle_dstl_submission"
"Vooban/Smoothly-Blend-Image-Patches" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"Vooban/Smoothly-Blend-Image-Patches" -> "rogerxujiang/dstl_unet"
"Vooban/Smoothly-Blend-Image-Patches" -> "nshaud/DeepNetsForEO"
"Vooban/Smoothly-Blend-Image-Patches" -> "manideep2510/eye-in-the-sky"
"Vooban/Smoothly-Blend-Image-Patches" -> "jensleitloff/CNN-Sentinel"
"Vooban/Smoothly-Blend-Image-Patches" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"Vooban/Smoothly-Blend-Image-Patches" -> "azavea/raster-vision"
"Vooban/Smoothly-Blend-Image-Patches" -> "lopuhin/kaggle-dstl"
"Vooban/Smoothly-Blend-Image-Patches" -> "karolzak/keras-unet"
"Vooban/Smoothly-Blend-Image-Patches" -> "KGPML/Hyperspectral" ["e"=1]
"Vooban/Smoothly-Blend-Image-Patches" -> "SpaceNetChallenge/utilities" ["e"=1]
"Vooban/Smoothly-Blend-Image-Patches" -> "ternaus/TernausNetV2" ["e"=1]
"Vooban/Smoothly-Blend-Image-Patches" -> "dovahcrow/patchify.py"
"theonegis/dcstfn" -> "theonegis/edcstfn"
"theonegis/dcstfn" -> "Rohit18/spatiotemporalimagefusion"
"theonegis/dcstfn" -> "chenjia5220967/CSSFc"
"theonegis/edcstfn" -> "theonegis/dcstfn"
"theonegis/edcstfn" -> "theonegis/ganstfm"
"theonegis/edcstfn" -> "LouisChen0104/swinstfm"
"gee-community/ee-jupyter-contrib" -> "tylere/ee-jupyter-examples"
"gee-community/ee-jupyter-contrib" -> "gee-community/ee-runner"
"azavea/raster-vision-examples" -> "azavea/raster-vision-qgis"
"azavea/raster-vision-examples" -> "Geoyi/pixel-decoder"
"azavea/raster-vision-examples" -> "raster-foundry/raster-foundry"
"azavea/raster-vision-examples" -> "azavea/raster-vision-aws"
"csdms/pymt" -> "csdms/bmi"
"azavea/raster-vision-qgis" -> "azavea/raster-vision-fastai-plugin"
"Open-EO/openeo-api" -> "Open-EO/openeo-python-client"
"Open-EO/openeo-api" -> "Open-EO/openeo-qgis-plugin"
"Open-EO/openeo-api" -> "Open-EO/openeo-web-editor"
"opengeospatial/ogcapi-common" -> "opengeospatial/ogcapi-coverages"
"opengeospatial/ogcapi-common" -> "opengeospatial/ogcapi-processes"
"opengeospatial/ogcapi-common" -> "opengeospatial/ogcapi-records"
"opengeospatial/ogcapi-common" -> "opengeospatial/ogcapi-maps"
"opengeospatial/ogcapi-records" -> "opengeospatial/ogcapi-common"
"opengeospatial/ogcapi-records" -> "opengeospatial/developer-events"
"Jiangfeng-Xiong/satellite_seg" -> "AstarLight/Satellite-Segmentation"
"Jiangfeng-Xiong/satellite_seg" -> "anxiangsir/urban_seg"
"Jiangfeng-Xiong/satellite_seg" -> "jiye-ML/Semantic-Segmentation-Satellite-image-segment"
"Jiangfeng-Xiong/satellite_seg" -> "LiuDongjing/BuildingChangeDetector"
"Jiangfeng-Xiong/satellite_seg" -> "scrssys/semantic_segment_RSImage"
"Jiangfeng-Xiong/satellite_seg" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"Jiangfeng-Xiong/satellite_seg" -> "wylqq312715289/CDGAN"
"whu-csl/WHU-SEN-City" -> "jnoat92/atrous-cGAN-for-SAR-optical-synthesis"
"GERSL/Fmask" -> "ubarsc/python-fmask"
"GERSL/Fmask" -> "sentinel-hub/sentinel2-cloud-detector"
"GERSL/Fmask" -> "JacobJeppesen/RS-Net"
"GERSL/Fmask" -> "CNES/MAJA" ["e"=1]
"GERSL/Fmask" -> "SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset"
"GERSL/Fmask" -> "dr-lizhiwei/OpenSICDR"
"GERSL/Fmask" -> "IPL-UV/ee_ipl_uv"
"GERSL/Fmask" -> "SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection"
"wylqq312715289/CDGAN" -> "scrssys/semantic_segment_RSImage"
"SWOTAlgorithms/RiverObs" -> "CNES/swot-hydrology-toolbox"
"SWOTAlgorithms/RiverObs" -> "SWOT-community/SWOT-OpenToolkit"
"AkshanshChahal/ML-in-Agriculture" -> "cleipski/CropPredict"
"AkshanshChahal/ML-in-Agriculture" -> "meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery"
"AkshanshChahal/ML-in-Agriculture" -> "AnnaXWang/deep-transfer-learning-crop-prediction"
"AkshanshChahal/ML-in-Agriculture" -> "saeedkhaki92/Yield-Prediction-DNN"
"AkshanshChahal/ML-in-Agriculture" -> "brad-ross/crop-yield-prediction-project"
"HaiyangOceanWang/STARFM" -> "harisw/STARFM_prediction"
"stac-utils/stac-validator" -> "kbgg/qgis-stac-browser" ["e"=1]
"stac-utils/stac-validator" -> "stac-utils/stac-check"
"truong-pham-dang/1D-Shallow-Water-equations" -> "wme7/ShallowWaterEquations"
"MarcYin/SIAC" -> "MarcYin/SIAC_GEE"
"perrygeo/pyimpute" -> "dymaxionlabs/dask-rasterio"
"worldbank/ML-classification-algorithms-poverty" -> "drivendataorg/pover-t-tests"
"caiostringari/pywavelearn" -> "caiostringari/deepwaves"
"RemotePixel/aws-sat-api-py" -> "RemotePixel/aws-sat-api"
"Soumyabrata/CloudSegNet" -> "Soumyabrata/HDR-cloud-segmentation"
"Soumyabrata/CloudSegNet" -> "Soumyabrata/multilabel-unet"
"1044197988/TF.Keras-Commonly-used-models" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"1044197988/TF.Keras-Commonly-used-models" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"1044197988/TF.Keras-Commonly-used-models" -> "lcylmhlcy/Semantic-segmentation"
"1044197988/TF.Keras-Commonly-used-models" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"1044197988/TF.Keras-Commonly-used-models" -> "rmkemker/EarthMapper"
"1044197988/TF.Keras-Commonly-used-models" -> "AstarLight/Satellite-Segmentation"
"fnemina/pyOSOAA" -> "CNES/RadiativeTransferCode-OSOAA"
"developmentseed/cogeo-mosaic" -> "developmentseed/mosaicjson-spec"
"developmentseed/cogeo-mosaic" -> "developmentseed/morecantile"
"developmentseed/cogeo-mosaic" -> "cogeotiff/rio-tiler-mosaic"
"developmentseed/cogeo-mosaic" -> "developmentseed/rio-viz"
"developmentseed/cogeo-mosaic" -> "cogeotiff/rio-tiler-mvt"
"developmentseed/cogeo-mosaic" -> "stac-utils/titiler-pgstac"
"carsonluuu/Poverty-Prediction-by-Satellite-Imagery" -> "Arshita27/Satellite_Imagery_ML"
"GeoscienceAustralia/dea-config" -> "GeoscienceAustralia/dea-knowledge-hub"
"scrssys/semantic_segment_RSImage" -> "wylqq312715289/CDGAN"
"lsh1994/keras-segmentation" -> "BBuf/Keras-Semantic-Segmentation"
"lsh1994/keras-segmentation" -> "AstarLight/Satellite-Segmentation"
"lsh1994/keras-segmentation" -> "ykamikawa/tf-keras-SegNet" ["e"=1]
"lsh1994/keras-segmentation" -> "Kaido0/Brain-Tissue-Segment-Keras"
"lsh1994/keras-segmentation" -> "Gurupradeep/FCN-for-Semantic-Segmentation" ["e"=1]
"lsh1994/keras-segmentation" -> "luyanger1799/Amazing-Semantic-Segmentation" ["e"=1]
"lsh1994/keras-segmentation" -> "wuyang0329/unet"
"stevenpawley/Pyspatialml" -> "pysal/esda"
"Blaizzy/BiSeNet-Implementation" -> "kirilcvetkov92/Semantic-Segmentation-BiSeNet"
"deeppavlov/Slavic-BERT-NER" -> "sheerun/awesome-polish-nlp"
"rmkemker/EarthMapper" -> "susurrant/rs-img-classification"
"qzhang95/PSTCR" -> "Yonv1943/CloudRemoval"
"qzhang95/PSTCR" -> "enomotokenji/mcgan-cvprw2017-pytorch"
"qzhang95/PSTCR" -> "qzhang95/STS-CNN" ["e"=1]
"pysal/segregation" -> "pysal/giddy"
"pysal/segregation" -> "pysal/splot"
"pysal/segregation" -> "oturns/geosnap"
"pysal/segregation" -> "pysal/inequality"
"pysal/segregation" -> "pysal/tobler"
"pysal/segregation" -> "pysal/mapclassify"
"pysal/segregation" -> "pysal/esda"
"ShawDa/unet-rgb" -> "wuyang0329/unet"
"dzieciou/pystempel" -> "dzieciou/lemmatizer-pl"
"dzieciou/pystempel" -> "Tutanchamon/pl_stemmer"
"mortcanty/CRC4Docker" -> "mortcanty/CRCPython"
"mortcanty/CRC4Docker" -> "mortcanty/earthengine"
"drivendataorg/power-laws-forecasting" -> "drivendataorg/power-laws-cold-start"
"mojodna/marblecutter-virtual" -> "mojodna/marblecutter"
"dzieciou/lemmatizer-pl" -> "dzieciou/pystempel"
"LSDtopotools/LSDTopoTools2" -> "LSDtopotools/LSDMappingTools"
"buptchan/scene-classification" -> "chenyuntc/scene-baseline"
"buptchan/scene-classification" -> "yongyehuang/ocean-of-knowledge"
"buptchan/scene-classification" -> "yya007/SceneClassification"
"buptchan/scene-classification" -> "NishantBhavsar/intel-scene-classification"
"saeedkhaki92/Yield-Prediction-DNN" -> "saeedkhaki92/CNN-RNN-Yield-Prediction"
"saeedkhaki92/Yield-Prediction-DNN" -> "cleipski/CropPredict"
"chenjia5220967/CSSFc" -> "Rohit18/spatiotemporalimagefusion"
"NishantBhavsar/intel-scene-classification" -> "yashbhalgat/Intel_Scene_Classification_Challenge"
"yongyehuang/DC-hi_guides" -> "yongyehuang/ocean-of-knowledge"
"sat-utils/sat-stac" -> "developmentseed/rio-stac"
"chrisleaman/py-wave-runup" -> "chrisleaman/awesome-coastal"
"yongyehuang/ocean-of-knowledge" -> "yongyehuang/view_based_sentiment"
"opengeospatial/ogcapi-maps" -> "opengeospatial/ogcapi-coverages"
"opengeospatial/ogcapi-maps" -> "opengeospatial/ogcapi-tiles"
"opengeospatial/ogcapi-maps" -> "opengeospatial/ogcapi-common"
"harisw/STARFM_prediction" -> "HaiyangOceanWang/STARFM"
"Rohit18/spatiotemporalimagefusion" -> "chenjia5220967/CSSFc"
"fortitude94deng/baidu-remote-sensing" -> "fortitude94deng/huawei_remote-sensing"
"Parker-Lyu/rscup2019_classifier" -> "fortitude94deng/huawei_remote-sensing"
"Parker-Lyu/rscup2019_classifier" -> "fortitude94deng/baidu-remote-sensing"
"fortitude94deng/huawei_remote-sensing" -> "fortitude94deng/baidu-remote-sensing"
"fortitude94deng/huawei_remote-sensing" -> "Parker-Lyu/rscup2019_classifier"
"kirilcvetkov92/Semantic-Segmentation-BiSeNet" -> "Blaizzy/BiSeNet-Implementation"
"gee-community/geemap" -> "giswqs/earthengine-py-notebooks"
"gee-community/geemap" -> "opengeos/Awesome-GEE"
"gee-community/geemap" -> "google/earthengine-api"
"gee-community/geemap" -> "opengeos/leafmap"
"gee-community/geemap" -> "giswqs/qgis-earthengine-examples"
"gee-community/geemap" -> "samapriya/awesome-gee-community-datasets"
"gee-community/geemap" -> "acgeospatial/awesome-earthobservation-code"
"gee-community/geemap" -> "gee-community/geetools"
"gee-community/geemap" -> "opengeos/segment-geospatial"
"gee-community/geemap" -> "satellite-image-deep-learning/techniques"
"gee-community/geemap" -> "google/earthengine-community"
"gee-community/geemap" -> "gee-community/qgis-earthengine-plugin"
"gee-community/geemap" -> "microsoft/torchgeo"
"gee-community/geemap" -> "davemlz/eemont"
"gee-community/geemap" -> "awesome-spectral-indices/awesome-spectral-indices"
"makepath/xarray-spatial" -> "corteva/rioxarray"
"makepath/xarray-spatial" -> "corteva/geocube"
"makepath/xarray-spatial" -> "geopandas/dask-geopandas"
"makepath/xarray-spatial" -> "holoviz/spatialpandas"
"makepath/xarray-spatial" -> "fatiando/verde" ["e"=1]
"makepath/xarray-spatial" -> "gjoseph92/stackstac"
"makepath/xarray-spatial" -> "google/Xee"
"makepath/xarray-spatial" -> "holoviz/geoviews" ["e"=1]
"makepath/xarray-spatial" -> "mdbartos/pysheds"
"makepath/xarray-spatial" -> "GeoscienceAustralia/dea-notebooks"
"makepath/xarray-spatial" -> "earthlab/earthpy"
"makepath/xarray-spatial" -> "pytroll/pyresample" ["e"=1]
"makepath/xarray-spatial" -> "developmentseed/lonboard"
"makepath/xarray-spatial" -> "microsoft/PlanetaryComputerExamples"
"makepath/xarray-spatial" -> "opendatacube/odc-stac"
"projectmesa/mesa" -> "jofmi/agentpy"
"projectmesa/mesa" -> "JuliaDynamics/Agents.jl" ["e"=1]
"projectmesa/mesa" -> "projectmesa/mesa-geo"
"projectmesa/mesa" -> "NetLogo/NetLogo"
"projectmesa/mesa" -> "projectmesa/mesa-examples"
"projectmesa/mesa" -> "Limor-Raviv/Tutorial_Agent_Based_Models"
"projectmesa/mesa" -> "AB-CE/abce"
"projectmesa/mesa" -> "noncomputable/AgentMaps"
"projectmesa/mesa" -> "SDXorg/pysd"
"projectmesa/mesa" -> "abmgis/abmgis"
"projectmesa/mesa" -> "briatte/awesome-network-analysis" ["e"=1]
"projectmesa/mesa" -> "py-why/dowhy" ["e"=1]
"projectmesa/mesa" -> "eclab/mason"
"projectmesa/mesa" -> "salesforce/ai-economist" ["e"=1]
"projectmesa/mesa" -> "gboeing/osmnx"
"cloudtostreet/Sen1Floods11" -> "edornd/mmflood"
"cloudtostreet/Sen1Floods11" -> "cloudtostreet/MODIS_GlobalFloodDatabase"
"cloudtostreet/Sen1Floods11" -> "Tamer-Saleh/S1GFlood-Detection"
"cloudtostreet/Sen1Floods11" -> "CAU-HE/CMCDNet"
"cloudtostreet/Sen1Floods11" -> "drivendataorg/stac-overflow"
"cloudtostreet/Sen1Floods11" -> "spaceml-org/ml4floods"
"cloudtostreet/Sen1Floods11" -> "Mahyarona/Flood-Detection-Algorithm-using-GEE"
"cloudtostreet/Sen1Floods11" -> "NASA-IMPACT/hls-foundation-os" ["e"=1]
"cloudtostreet/Sen1Floods11" -> "sidgan/ETCI-2021-Competition-on-Flood-Detection"
"cloudtostreet/Sen1Floods11" -> "geodrak/OMBRIA"
"cloudtostreet/Sen1Floods11" -> "ClmRmb/SEN12-FLOOD"
"cloudtostreet/Sen1Floods11" -> "csdms-contrib/fwdet"
"opengeos/Awesome-GEE" -> "giswqs/earthengine-py-notebooks"
"opengeos/Awesome-GEE" -> "giswqs/qgis-earthengine-examples"
"opengeos/Awesome-GEE" -> "samapriya/awesome-gee-community-datasets"
"opengeos/Awesome-GEE" -> "gee-community/geemap"
"opengeos/Awesome-GEE" -> "acgeospatial/awesome-earthobservation-code"
"opengeos/Awesome-GEE" -> "gee-community/geetools"
"opengeos/Awesome-GEE" -> "awesome-spectral-indices/awesome-spectral-indices"
"opengeos/Awesome-GEE" -> "davemlz/eemont"
"opengeos/Awesome-GEE" -> "google/earthengine-community"
"opengeos/Awesome-GEE" -> "gee-community/qgis-earthengine-plugin"
"opengeos/Awesome-GEE" -> "google/earthengine-api"
"opengeos/Awesome-GEE" -> "r-spatial/rgee"
"opengeos/Awesome-GEE" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"opengeos/Awesome-GEE" -> "kr-stn/EarthEngine_scripts"
"opengeos/Awesome-GEE" -> "gee-community/ee-palettes"
"giswqs/qgis-earthengine-examples" -> "gee-community/qgis-earthengine-plugin"
"giswqs/qgis-earthengine-examples" -> "giswqs/earthengine-py-notebooks"
"giswqs/qgis-earthengine-examples" -> "opengeos/Awesome-GEE"
"giswqs/qgis-earthengine-examples" -> "gee-community/geetools"
"giswqs/qgis-earthengine-examples" -> "gee-community/geemap"
"giswqs/qgis-earthengine-examples" -> "acgeospatial/awesome-earthobservation-code"
"giswqs/qgis-earthengine-examples" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"giswqs/qgis-earthengine-examples" -> "r-spatial/rgee"
"giswqs/qgis-earthengine-examples" -> "davemlz/eemont"
"giswqs/qgis-earthengine-examples" -> "awesome-spectral-indices/awesome-spectral-indices"
"giswqs/qgis-earthengine-examples" -> "google/earthengine-api"
"giswqs/qgis-earthengine-examples" -> "csaybar/EEwPython"
"giswqs/qgis-earthengine-examples" -> "sentinel-hub/custom-scripts"
"giswqs/qgis-earthengine-examples" -> "opengeos/whitebox-python"
"giswqs/qgis-earthengine-examples" -> "sentinel-hub/eo-learn"
"acgeospatial/awesome-earthobservation-code" -> "awesome-spectral-indices/awesome-spectral-indices"
"acgeospatial/awesome-earthobservation-code" -> "opengeos/Awesome-GEE"
"acgeospatial/awesome-earthobservation-code" -> "giswqs/earthengine-py-notebooks"
"acgeospatial/awesome-earthobservation-code" -> "sentinel-hub/eo-learn"
"acgeospatial/awesome-earthobservation-code" -> "chrieke/awesome-geospatial-companies"
"acgeospatial/awesome-earthobservation-code" -> "kr-stn/awesome-sentinel"
"acgeospatial/awesome-earthobservation-code" -> "sacridini/Awesome-Geospatial"
"acgeospatial/awesome-earthobservation-code" -> "davemlz/eemont"
"acgeospatial/awesome-earthobservation-code" -> "samapriya/awesome-gee-community-datasets"
"acgeospatial/awesome-earthobservation-code" -> "planetlabs/notebooks"
"acgeospatial/awesome-earthobservation-code" -> "giswqs/qgis-earthengine-examples"
"acgeospatial/awesome-earthobservation-code" -> "azavea/raster-vision"
"acgeospatial/awesome-earthobservation-code" -> "sentinel-hub/custom-scripts"
"acgeospatial/awesome-earthobservation-code" -> "chrieke/awesome-satellite-imagery-datasets"
"acgeospatial/awesome-earthobservation-code" -> "RadarCODE/awesome-sar" ["e"=1]
"giswqs/earthengine-py-notebooks" -> "opengeos/Awesome-GEE"
"giswqs/earthengine-py-notebooks" -> "giswqs/qgis-earthengine-examples"
"giswqs/earthengine-py-notebooks" -> "gee-community/geemap"
"giswqs/earthengine-py-notebooks" -> "acgeospatial/awesome-earthobservation-code"
"giswqs/earthengine-py-notebooks" -> "gee-community/geetools"
"giswqs/earthengine-py-notebooks" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"giswqs/earthengine-py-notebooks" -> "google/earthengine-api"
"giswqs/earthengine-py-notebooks" -> "samapriya/awesome-gee-community-datasets"
"giswqs/earthengine-py-notebooks" -> "gee-community/qgis-earthengine-plugin"
"giswqs/earthengine-py-notebooks" -> "davemlz/eemont"
"giswqs/earthengine-py-notebooks" -> "awesome-spectral-indices/awesome-spectral-indices"
"giswqs/earthengine-py-notebooks" -> "google/earthengine-community"
"giswqs/earthengine-py-notebooks" -> "kr-stn/EarthEngine_scripts"
"giswqs/earthengine-py-notebooks" -> "r-spatial/rgee"
"giswqs/earthengine-py-notebooks" -> "csaybar/EEwPython"
"ipipan/spacy-pl" -> "sheerun/awesome-polish-nlp"
"ipipan/spacy-pl" -> "sdadas/polish-sentence-evaluation"
"ipipan/spacy-pl" -> "Ermlab/PoLitBert"
"googlemaps/google-maps-services-python" -> "geopy/geopy"
"googlemaps/google-maps-services-python" -> "python-visualization/folium"
"googlemaps/google-maps-services-python" -> "googleapis/google-api-python-client" ["e"=1]
"googlemaps/google-maps-services-python" -> "gmplot/gmplot"
"googlemaps/google-maps-services-python" -> "gboeing/osmnx"
"googlemaps/google-maps-services-python" -> "geopandas/geopandas"
"googlemaps/google-maps-services-python" -> "DenisCarriere/geocoder"
"googlemaps/google-maps-services-python" -> "googlemaps/google-maps-services-js" ["e"=1]
"googlemaps/google-maps-services-python" -> "googleapis/google-cloud-python" ["e"=1]
"googlemaps/google-maps-services-python" -> "burnash/gspread" ["e"=1]
"googlemaps/google-maps-services-python" -> "pbugnion/gmaps" ["e"=1]
"googlemaps/google-maps-services-python" -> "googlemaps/google-maps-services-java" ["e"=1]
"googlemaps/google-maps-services-python" -> "slimkrazy/python-google-places" ["e"=1]
"googlemaps/google-maps-services-python" -> "seatgeek/fuzzywuzzy" ["e"=1]
"googlemaps/google-maps-services-python" -> "GoogleCloudPlatform/python-docs-samples" ["e"=1]
"holoviz/spatialpandas" -> "geopandas/dask-geopandas"
"holoviz/spatialpandas" -> "makepath/xarray-spatial"
"holoviz/spatialpandas" -> "holoviz/geoviews" ["e"=1]
"holoviz/spatialpandas" -> "pygeos/pygeos"
"holoviz/spatialpandas" -> "geopandas/pyogrio"
"holoviz/spatialpandas" -> "corteva/rioxarray"
"holoviz/spatialpandas" -> "pysal/spaghetti"
"holoviz/spatialpandas" -> "corteva/geocube"
"holoviz/spatialpandas" -> "pysal/esda"
"holoviz/spatialpandas" -> "pyrosm/pyrosm"
"holoviz/spatialpandas" -> "geoarrow/geoarrow"
"holoviz/spatialpandas" -> "xarray-contrib/xvec" ["e"=1]
"holoviz/spatialpandas" -> "rapidsai/cuspatial" ["e"=1]
"holoviz/spatialpandas" -> "jgrss/geowombat"
"holoviz/spatialpandas" -> "pangeo-data/pangeo-docker-images"
"urschrei/Geopython" -> "jorisvandenbossche/geopandas-tutorial"
"urschrei/Geopython" -> "koldunovn/python_for_geosciences" ["e"=1]
"urschrei/Geopython" -> "pysal/momepy"
"urschrei/Geopython" -> "OpenGeoscience/geonotebook"
"urschrei/Geopython" -> "geopandas/contextily"
"geopandas/dask-geopandas" -> "holoviz/spatialpandas"
"geopandas/dask-geopandas" -> "makepath/xarray-spatial"
"geopandas/dask-geopandas" -> "corteva/geocube"
"geopandas/dask-geopandas" -> "geopandas/pyogrio"
"geopandas/dask-geopandas" -> "corteva/rioxarray"
"geopandas/dask-geopandas" -> "stac-utils/pystac"
"geopandas/dask-geopandas" -> "movingpandas/movingpandas"
"geopandas/dask-geopandas" -> "pysal/momepy"
"geopandas/dask-geopandas" -> "pygeos/pygeos"
"geopandas/dask-geopandas" -> "opengeospatial/geoparquet"
"geopandas/dask-geopandas" -> "developmentseed/lonboard"
"geopandas/dask-geopandas" -> "geoarrow/geoarrow"
"geopandas/dask-geopandas" -> "gjoseph92/stackstac"
"geopandas/dask-geopandas" -> "opendatacube/odc-stac"
"geopandas/dask-geopandas" -> "xarray-contrib/xvec" ["e"=1]
"MathieuRita/SAR_denoising" -> "grip-unina/SAR-CNN"
"MathieuRita/SAR_denoising" -> "JK-the-Ko/SAR-CAM"
"MathieuRita/SAR_denoising" -> "malshaV/SAR_DDPM"
"MathieuRita/SAR_denoising" -> "davin11/CNN-NLM"
"georust/geojson" -> "georust/proj"
"georust/geojson" -> "georust/geo"
"georust/geojson" -> "georust/gdal"
"georust/geojson" -> "georust/geozero"
"georust/geojson" -> "georust/geotiff"
"georust/geojson" -> "georust/geos"
"georust/geojson" -> "georust/rstar"
"georust/geojson" -> "georust/wkt"
"georust/geojson" -> "kylebarron/geo-index"
"georust/geojson" -> "pka/awesome-georust"
"georust/geojson" -> "msalib/geo-rasterize"
"gmplot/gmplot" -> "pbugnion/gmaps" ["e"=1]
"gmplot/gmplot" -> "tcassou/mapsplotlib"
"gmplot/gmplot" -> "googlemaps/google-maps-services-python"
"gmplot/gmplot" -> "jwass/mplleaflet" ["e"=1]
"gmplot/gmplot" -> "python-visualization/folium"
"gmplot/gmplot" -> "flask-extensions/Flask-GoogleMaps" ["e"=1]
"gmplot/gmplot" -> "heldersepu/GMapCatcher"
"gmplot/gmplot" -> "geopy/geopy"
"gmplot/gmplot" -> "JoanMartin/trackanimation"
"gmplot/gmplot" -> "tkrajina/gpxpy" ["e"=1]
"gmplot/gmplot" -> "ryancox/motionless"
"r-spatial/rgee" -> "e-sensing/sits" ["e"=1]
"r-spatial/rgee" -> "rspatial/terra" ["e"=1]
"r-spatial/rgee" -> "r-spatial/mapview" ["e"=1]
"r-spatial/rgee" -> "r-spatial/stars" ["e"=1]
"r-spatial/rgee" -> "opengeos/Awesome-GEE"
"r-spatial/rgee" -> "isciences/exactextractr" ["e"=1]
"r-spatial/rgee" -> "r-tmap/tmap" ["e"=1]
"r-spatial/rgee" -> "davemlz/eemont"
"r-spatial/rgee" -> "gee-community/qgis-earthengine-plugin"
"r-spatial/rgee" -> "r-spatial/sf" ["e"=1]
"r-spatial/rgee" -> "giswqs/qgis-earthengine-examples"
"r-spatial/rgee" -> "geocompx/geocompr" ["e"=1]
"r-spatial/rgee" -> "samapriya/awesome-gee-community-datasets"
"r-spatial/rgee" -> "awesome-spectral-indices/awesome-spectral-indices"
"r-spatial/rgee" -> "giswqs/earthengine-py-notebooks"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "fuweifu-vtoo/Semantic-segmentation"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "yisun98/SOLC"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "milleniums/underwater-object-detection-mmdetection" ["e"=1]
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "anxiangsir/urban_seg"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "lcylmhlcy/Semantic-segmentation"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "xungeer29/Remote-Sensing-Image-Classification"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "lironui/MACU-Net"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "wenhwu/awesome-remote-sensing-change-detection" ["e"=1]
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "AI-Chen/Deeplab-v3-Plus-pytorch-"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "WangLibo1995/GeoSeg" ["e"=1]
"whuyao/Urban_Perception_CNN_Model" -> "ylsislove/Urban-Perception-Assessment-Based-on-CNN"
"whuyao/Urban_Perception_CNN_Model" -> "emilymuller1991/urban-perceptions"
"ozak/georasters" -> "dymaxionlabs/dask-rasterio"
"joewdavies/awesome-frontend-gis" -> "eurostat/gridviz"
"joewdavies/awesome-frontend-gis" -> "riatelab/bertin"
"joewdavies/awesome-frontend-gis" -> "maplibre/awesome-maplibre" ["e"=1]
"joewdavies/awesome-frontend-gis" -> "geoarrow/geoarrow-rs"
"joewdavies/awesome-frontend-gis" -> "onthegomap/maplibre-contour" ["e"=1]
"joewdavies/awesome-frontend-gis" -> "w3reality/three-geo" ["e"=1]
"joewdavies/awesome-frontend-gis" -> "Esri/awesome-arcgis-developers" ["e"=1]
"joewdavies/awesome-frontend-gis" -> "developmentseed/lonboard"
"joewdavies/awesome-frontend-gis" -> "opengeos/python-geospatial"
"joewdavies/awesome-frontend-gis" -> "geographyclub/qgis-expressions"
"joewdavies/awesome-frontend-gis" -> "mszell/geospatialdatascience"
"joewdavies/awesome-frontend-gis" -> "qgis/qgis-js" ["e"=1]
"joewdavies/awesome-frontend-gis" -> "flatgeobuf/flatgeobuf" ["e"=1]
"joewdavies/awesome-frontend-gis" -> "geographyclub/gis-from-command-line"
"joewdavies/awesome-frontend-gis" -> "Gaia3D/mago-3d-tiler" ["e"=1]
"pyproj4/pyproj" -> "OSGeo/PROJ" ["e"=1]
"pyproj4/pyproj" -> "Toblerity/Fiona"
"pyproj4/pyproj" -> "shapely/shapely"
"pyproj4/pyproj" -> "rasterio/rasterio"
"pyproj4/pyproj" -> "SciTools/cartopy" ["e"=1]
"pyproj4/pyproj" -> "GeospatialPython/pyshp"
"pyproj4/pyproj" -> "geopandas/geopandas"
"pyproj4/pyproj" -> "jazzband/geojson"
"pyproj4/pyproj" -> "fatiando/verde" ["e"=1]
"pyproj4/pyproj" -> "Turbo87/utm"
"pyproj4/pyproj" -> "corteva/rioxarray"
"pyproj4/pyproj" -> "OSGeo/gdal" ["e"=1]
"pyproj4/pyproj" -> "geopandas/dask-geopandas"
"pyproj4/pyproj" -> "pytroll/pyresample" ["e"=1]
"pyproj4/pyproj" -> "perrygeo/python-rasterstats"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "saeedkhaki92/Yield-Prediction-DNN"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "gabrieltseng/pycrop-yield-prediction"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "cleipski/CropPredict"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "JiaxuanYou/crop_yield_prediction"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "vinayakkarande/Crop-Yield-Prediction-Using-CNN-LSTM-"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "facebookresearch/Context-Aware-Representation-Crop-Yield-Prediction"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "AnnaXWang/deep-transfer-learning-crop-prediction"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "Drinkler/Yield-Prediction"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "VaibhavSaini19/Crop-Yield-Prediction-using-ML"
"satish1901/Methane-detection-from-hyperspectral-imagery" -> "UCSB-VRL/MethaneMapper-Spectral-Absorption-aware-Hyperspectral-Transformer-for-Methane-Detection"
"satish1901/Methane-detection-from-hyperspectral-imagery" -> "UCSB-VRL/StressNet-Detecting-stress-from-thermal-videos"
"satish1901/Methane-detection-from-hyperspectral-imagery" -> "spaceml-org/STARCOP"
"pysal/tobler" -> "oturns/geosnap"
"pysal/tobler" -> "pysal/segregation"
"pysal/tobler" -> "pysal/splot"
"pysal/tobler" -> "pysal/mapclassify"
"hotosm/OpenAerialMap" -> "developmentseed/skynet-data"
"tjukanovt/30DayMapChallenge" -> "hn303/30DayMapChallenge-Bot"
"tjukanovt/30DayMapChallenge" -> "z3tt/30DayMapChallenge2019" ["e"=1]
"tjukanovt/30DayMapChallenge" -> "tjukanovt/qgis_styles"
"tjukanovt/30DayMapChallenge" -> "joewdavies/geoblender"
"tjukanovt/30DayMapChallenge" -> "MapPromptMonday/MapPromptMonday"
"tjukanovt/30DayMapChallenge" -> "acgeospatial/awesome-earthobservation-code"
"tjukanovt/30DayMapChallenge" -> "jwoLondon/30dayMapChallenge"
"tjukanovt/30DayMapChallenge" -> "awesome-spectral-indices/awesome-spectral-indices"
"tjukanovt/30DayMapChallenge" -> "mszell/geospatialdatascience"
"tjukanovt/30DayMapChallenge" -> "Pecners/rayshader_portraits" ["e"=1]
"tjukanovt/30DayMapChallenge" -> "samapriya/awesome-gee-community-datasets"
"tjukanovt/30DayMapChallenge" -> "developmentseed/lonboard"
"tjukanovt/30DayMapChallenge" -> "z3tt/30DayChartChallenge_Collection2021" ["e"=1]
"tjukanovt/30DayMapChallenge" -> "giswqs/qgis-earthengine-examples"
"tjukanovt/30DayMapChallenge" -> "davemlz/eemont"
"GeoscienceAustralia/anuga_core" -> "anuga-community/anuga_core"
"GeoscienceAustralia/anuga_core" -> "passaH2O/dorado"
"GeoscienceAustralia/anuga_core" -> "mrocklin/ShallowWater"
"GeoscienceAustralia/anuga_core" -> "jostbr/shallow-water"
"GeoscienceAustralia/anuga_core" -> "openearth/glofrim" ["e"=1]
"GeoscienceAustralia/anuga_core" -> "pyswmm/swmmio" ["e"=1]
"GeoscienceAustralia/anuga_core" -> "landlab/landlab"
"GeoscienceAustralia/anuga_core" -> "HEMLab/HiPIMS-CUDA"
"lalessan/scales_human_mobility" -> "scikit-mobility/DeepGravity"
"VaibhavSaini19/Crop-Yield-Prediction-using-ML" -> "Drinkler/Yield-Prediction"
"VaibhavSaini19/Crop-Yield-Prediction-using-ML" -> "cleipski/CropPredict"
"VaibhavSaini19/Crop-Yield-Prediction-using-ML" -> "Priyabrata017/Crop-prediction-using-Machine-Learning"
"ubarsc/python-fmask" -> "GERSL/Fmask"
"Neooolee/WHUS2-CD" -> "daleroberts/s2cloudmask"
"adugnag/SAR-FCN-DK3" -> "adugnag/CV-deSpeckNet"
"tjukanovt/qgis_styles" -> "GispoCoding/GlobeBuilder"
"tjukanovt/qgis_styles" -> "GispoCoding/QGIS-visualization-workshop"
"tjukanovt/qgis_styles" -> "klakar/QGIS_resources"
"tjukanovt/qgis_styles" -> "tjukanovt/QGIS-tutorial"
"chrieke/awesome-geospatial-companies" -> "acgeospatial/awesome-earthobservation-code"
"chrieke/awesome-geospatial-companies" -> "DahnJ/EO-jobs"
"chrieke/awesome-geospatial-companies" -> "kr-stn/awesome-sentinel"
"chrieke/awesome-geospatial-companies" -> "gjoseph92/stackstac"
"chrieke/awesome-geospatial-companies" -> "awesome-spectral-indices/awesome-spectral-indices"
"chrieke/awesome-geospatial-companies" -> "Clay-foundation/model" ["e"=1]
"chrieke/awesome-geospatial-companies" -> "corteva/rioxarray"
"chrieke/awesome-geospatial-companies" -> "sacridini/Awesome-Geospatial"
"chrieke/awesome-geospatial-companies" -> "deepVector/geospatial-machine-learning"
"chrieke/awesome-geospatial-companies" -> "stac-utils/pystac"
"chrieke/awesome-geospatial-companies" -> "opengeospatial/geoparquet"
"chrieke/awesome-geospatial-companies" -> "opengeos/Awesome-GEE"
"chrieke/awesome-geospatial-companies" -> "samapriya/awesome-gee-community-datasets"
"chrieke/awesome-geospatial-companies" -> "sentinel-hub/eo-learn"
"chrieke/awesome-geospatial-companies" -> "makepath/xarray-spatial"
"developmentseed/timvt" -> "developmentseed/tipg"
"developmentseed/timvt" -> "developmentseed/tifeatures"
"developmentseed/timvt" -> "developmentseed/morecantile"
"developmentseed/timvt" -> "mkeller3/FastVector"
"google/earthengine-community" -> "opengeos/Awesome-GEE"
"google/earthengine-community" -> "gee-community/geetools"
"google/earthengine-community" -> "samapriya/awesome-gee-community-datasets"
"google/earthengine-community" -> "google/earthengine-api"
"google/earthengine-community" -> "giswqs/earthengine-py-notebooks"
"google/earthengine-community" -> "gee-community/qgis-earthengine-plugin"
"google/earthengine-community" -> "google/Xee"
"google/earthengine-community" -> "kr-stn/EarthEngine_scripts"
"google/earthengine-community" -> "gee-community/geemap"
"google/earthengine-community" -> "awesome-spectral-indices/awesome-spectral-indices"
"google/earthengine-community" -> "r-spatial/rgee"
"google/earthengine-community" -> "davemlz/eemont"
"google/earthengine-community" -> "gee-community/ee-palettes"
"google/earthengine-community" -> "giswqs/qgis-earthengine-examples"
"google/earthengine-community" -> "fitoprincipe/geetools-code-editor"
"microsoft/AustraliaBuildingFootprints" -> "microsoft/Uganda-Tanzania-Building-Footprints"
"microsoft/AustraliaBuildingFootprints" -> "microsoft/SouthAmericaBuildingFootprints"
"microsoft/AustraliaBuildingFootprints" -> "microsoft/KenyaNigeriaBuildingFootprints"
"mszell/bikenwgrowth" -> "mszell/taxonomybikenw"
"pyrosm/pyrosm" -> "UDST/pandana"
"pyrosm/pyrosm" -> "pysal/momepy"
"pyrosm/pyrosm" -> "geopandas/dask-geopandas"
"pyrosm/pyrosm" -> "benchmark-urbanism/cityseer-api"
"pyrosm/pyrosm" -> "osmcode/pyosmium" ["e"=1]
"pyrosm/pyrosm" -> "pysal/spopt"
"pyrosm/pyrosm" -> "pygeos/pygeos"
"pyrosm/pyrosm" -> "r5py/r5py" ["e"=1]
"pyrosm/pyrosm" -> "holoviz/spatialpandas"
"pyrosm/pyrosm" -> "movingpandas/movingpandas"
"pyrosm/pyrosm" -> "pysal/tobler"
"pyrosm/pyrosm" -> "corteva/geocube"
"pyrosm/pyrosm" -> "geopandas/pyogrio"
"pyrosm/pyrosm" -> "oturns/geosnap"
"pyrosm/pyrosm" -> "mattijn/topojson"
"CS-SI/eodag" -> "sertit/eoreader" ["e"=1]
"CS-SI/eodag" -> "stac-utils/pystac"
"CS-SI/eodag" -> "opendatacube/odc-stac"
"CS-SI/eodag" -> "corteva/rioxarray"
"CS-SI/eodag" -> "developmentseed/titiler"
"CS-SI/eodag" -> "stac-utils/pystac-client"
"CS-SI/eodag" -> "bopen/xarray-sentinel" ["e"=1]
"CS-SI/eodag" -> "cogeotiff/rio-cogeo"
"CS-SI/eodag" -> "radiantearth/stac-browser"
"CS-SI/eodag" -> "CS-SI/eodag-labextension"
"CS-SI/eodag" -> "developmentseed/eoAPI"
"CS-SI/eodag" -> "stac-utils/stac-fastapi"
"CS-SI/eodag" -> "johntruckenbrodt/pyroSAR" ["e"=1]
"CS-SI/eodag" -> "gjoseph92/stackstac"
"CS-SI/eodag" -> "makepath/xarray-spatial"
"plovercode/DS-python-geospatial" -> "jorisvandenbossche/DS-python-data-analysis"
"plovercode/DS-python-geospatial" -> "acgeospatial/Geospatial_Python_CourseV1"
"olivierhagolle/LANDSAT-Download" -> "olivierhagolle/Sentinel-download"
"olivierhagolle/LANDSAT-Download" -> "developmentseed/landsat-util"
"olivierhagolle/LANDSAT-Download" -> "USGS-EROS/espa-bulk-downloader"
"olivierhagolle/LANDSAT-Download" -> "olivierhagolle/peps_download"
"olivierhagolle/LANDSAT-Download" -> "yannforget/landsatxplore"
"olivierhagolle/LANDSAT-Download" -> "kapadia/usgs"
"olivierhagolle/LANDSAT-Download" -> "USGS-EROS/espa-surface-reflectance"
"olivierhagolle/LANDSAT-Download" -> "USGS-EROS/espa-api"
"olivierhagolle/LANDSAT-Download" -> "dgketchum/Landsat578"
"olivierhagolle/LANDSAT-Download" -> "kr-stn/awesome-sentinel"
"stac-utils/stac-fastapi" -> "stac-utils/pgstac"
"stac-utils/stac-fastapi" -> "developmentseed/eoAPI"
"stac-utils/stac-fastapi" -> "stac-utils/stac-fastapi-pgstac"
"stac-utils/stac-fastapi" -> "radiantearth/stac-browser"
"stac-utils/stac-fastapi" -> "stac-utils/pystac"
"stac-utils/stac-fastapi" -> "stac-utils/pystac-client"
"stac-utils/stac-fastapi" -> "radiantearth/stac-api-spec"
"stac-utils/stac-fastapi" -> "opendatacube/odc-stac"
"stac-utils/stac-fastapi" -> "stac-utils/stac-geoparquet"
"stac-utils/stac-fastapi" -> "developmentseed/tipg"
"stac-utils/stac-fastapi" -> "developmentseed/titiler"
"stac-utils/stac-fastapi" -> "stac-utils/stactools"
"stac-utils/stac-fastapi" -> "gjoseph92/stackstac"
"stac-utils/stac-fastapi" -> "radiantearth/stac-spec"
"stac-utils/stac-fastapi" -> "stac-utils/titiler-pgstac"
"NetLogo/NetLogo" -> "NetLogo/models"
"NetLogo/NetLogo" -> "projectmesa/mesa"
"NetLogo/NetLogo" -> "NetLogo/Galapagos"
"NetLogo/NetLogo" -> "NetLogo/Tortoise"
"NetLogo/NetLogo" -> "quaquel/pyNetLogo"
"NetLogo/NetLogo" -> "JuliaDynamics/Agents.jl" ["e"=1]
"NetLogo/NetLogo" -> "chathika/NL4Py"
"NetLogo/NetLogo" -> "gama-platform/gama.old"
"NetLogo/NetLogo" -> "abmgis/abmgis"
"NetLogo/NetLogo" -> "eclab/mason"
"NetLogo/NetLogo" -> "ropensci/nlrx" ["e"=1]
"NetLogo/NetLogo" -> "projectmesa/mesa-geo"
"NetLogo/NetLogo" -> "NetLogo/NW-Extension"
"NetLogo/NetLogo" -> "jofmi/agentpy"
"NetLogo/NetLogo" -> "Repast/repast.simphony"
"eurostat/gridviz" -> "riatelab/statsbreaks"
"eurostat/gridviz" -> "eurostat/regl-map-animation"
"eurostat/gridviz" -> "riatelab/bertin"
"eurostat/gridviz" -> "riatelab/magrit"
"eurostat/gridviz" -> "eurostat/eurostat-map"
"eurostat/gridviz" -> "riatelab/geoviz"
"diegovalsesia/speckle2void" -> "emanueledalsasso/SAR2SAR"
"diegovalsesia/speckle2void" -> "adugnag/deSpeckNet"
"diegovalsesia/speckle2void" -> "JK-the-Ko/SAR-CAM"
"csdms/bmi" -> "csdms/pymt"
"geopandas/pyogrio" -> "geopandas/dask-geopandas"
"geopandas/pyogrio" -> "geoarrow/geoarrow"
"geopandas/pyogrio" -> "geofileops/geofileops"
"geopandas/pyogrio" -> "corteva/rioxarray"
"geopandas/pyogrio" -> "benbovy/spherely"
"geopandas/pyogrio" -> "corteva/geocube"
"geopandas/pyogrio" -> "mattijn/topojson"
"geopandas/pyogrio" -> "opengeospatial/geoparquet"
"geopandas/pyogrio" -> "duckdb/duckdb-spatial"
"geopandas/pyogrio" -> "gjoseph92/stackstac"
"geopandas/pyogrio" -> "holoviz/spatialpandas"
"geopandas/pyogrio" -> "developmentseed/tipg"
"geopandas/pyogrio" -> "r5py/r5py" ["e"=1]
"geopandas/pyogrio" -> "geoarrow/geoarrow-rs"
"geopandas/pyogrio" -> "jgrss/geowombat"
"jofmi/agentpy" -> "projectmesa/mesa-examples"
"jofmi/agentpy" -> "AB-CE/abce"
"jofmi/agentpy" -> "projectmesa/mesa"
"jofmi/agentpy" -> "projectmesa/mesa-geo"
"jofmi/agentpy" -> "JuliaDynamics/Agents.jl" ["e"=1]
"developmentseed/landsat-util" -> "olivierhagolle/LANDSAT-Download"
"developmentseed/landsat-util" -> "developmentseed/label-maker"
"developmentseed/landsat-util" -> "sat-utils/sat-api"
"developmentseed/landsat-util" -> "landsat-pds/landsat_ingestor"
"developmentseed/landsat-util" -> "sentinelsat/sentinelsat"
"developmentseed/landsat-util" -> "developmentseed/landsat-api"
"developmentseed/landsat-util" -> "dwtkns/gdal-cheat-sheet"
"developmentseed/landsat-util" -> "developmentseed/skynet-train"
"developmentseed/landsat-util" -> "kapadia/usgs"
"developmentseed/landsat-util" -> "kr-stn/awesome-sentinel"
"developmentseed/landsat-util" -> "sentinel-hub/sentinelhub-py"
"developmentseed/landsat-util" -> "USGS-EROS/espa-api"
"developmentseed/landsat-util" -> "gipit/gippy"
"developmentseed/landsat-util" -> "radiantearth/stac-spec"
"developmentseed/landsat-util" -> "rasterio/rasterio"
"ceholden/open-geo-tutorial" -> "patrickcgray/open-geo-tutorial"
"ceholden/open-geo-tutorial" -> "ceholden/landsat_preprocess"
"ceholden/open-geo-tutorial" -> "sarasafavi/remote-sensing-with-python"
"ceholden/open-geo-tutorial" -> "acgeospatial/Satellite_Imagery_Python"
"ceholden/open-geo-tutorial" -> "beeoda/tutorials"
"ceholden/open-geo-tutorial" -> "olivierhagolle/Sentinel-download"
"ceholden/open-geo-tutorial" -> "gbrunner/programming-for-gis-and-rs"
"samapriya/awesome-gee-community-datasets" -> "opengeos/Awesome-GEE"
"samapriya/awesome-gee-community-datasets" -> "awesome-spectral-indices/awesome-spectral-indices"
"samapriya/awesome-gee-community-datasets" -> "davemlz/eemont"
"samapriya/awesome-gee-community-datasets" -> "gee-community/geetools"
"samapriya/awesome-gee-community-datasets" -> "google/earthengine-community"
"samapriya/awesome-gee-community-datasets" -> "acgeospatial/awesome-earthobservation-code"
"samapriya/awesome-gee-community-datasets" -> "giswqs/earthengine-py-notebooks"
"samapriya/awesome-gee-community-datasets" -> "gee-community/qgis-earthengine-plugin"
"samapriya/awesome-gee-community-datasets" -> "google/Xee"
"samapriya/awesome-gee-community-datasets" -> "gee-community/ee-palettes"
"samapriya/awesome-gee-community-datasets" -> "gee-community/geemap"
"samapriya/awesome-gee-community-datasets" -> "adugnag/gee_s1_ard"
"samapriya/awesome-gee-community-datasets" -> "r-spatial/rgee"
"samapriya/awesome-gee-community-datasets" -> "awesome-spectral-indices/spectral"
"samapriya/awesome-gee-community-datasets" -> "fitoprincipe/geetools-code-editor"
"kvos/CoastSat.slope" -> "mcuttler/CoastSat.islands"
"kvos/CoastSat.slope" -> "ydoherty/CoastSat.PlanetScope"
"drivendataorg/open-cities-ai-challenge" -> "drivendataorg/open-ai-caribbean"
"drivendataorg/open-cities-ai-challenge" -> "qubvel/open-cities-challenge"
"georust/geo" -> "georust/geojson"
"georust/geo" -> "georust/gdal"
"georust/geo" -> "georust/geozero"
"georust/geo" -> "geoarrow/geoarrow-rs"
"georust/geo" -> "georust/rstar"
"georust/geo" -> "georust/geos"
"georust/geo" -> "geopolars/geopolars"
"georust/geo" -> "geoarrow/geoarrow"
"georust/geo" -> "flatgeobuf/flatgeobuf" ["e"=1]
"georust/geo" -> "maplibre/maplibre-rs" ["e"=1]
"georust/geo" -> "georust/proj"
"georust/geo" -> "pka/awesome-georust"
"georust/geo" -> "frewsxcv/rgis"
"georust/geo" -> "opengeospatial/geoparquet"
"georust/geo" -> "maplibre/martin" ["e"=1]
"geopython/pycsw" -> "geopython/OWSLib"
"geopython/pycsw" -> "geopython/pywps"
"geopython/pycsw" -> "geopython/pygeoapi"
"geopython/pycsw" -> "geopython/pygeometa"
"lironui/Multi-Attention-Network" -> "lironui/MAResU-Net"
"lironui/Multi-Attention-Network" -> "lironui/MACU-Net"
"lironui/Multi-Attention-Network" -> "lironui/ABCNet"
"lironui/Multi-Attention-Network" -> "ggsDing/LANet"
"Ermlab/PoLitBert" -> "sdadas/polish-sentence-evaluation"
"xinluo2018/WatNet" -> "isikdogan/deepwatermap"
"xinluo2018/WatNet" -> "Jack-bo1220/Benchmarks-for-Water-Body-Extraction-from-HRORS-Imagery"
"xinluo2018/WatNet" -> "xinluo2018/Tibet-Water-2020"
"ggsDing/LANet" -> "DingLei14/WiCoNet"
"nsidc/NSIDC-Data-Tutorials" -> "nsidc/NSIDC-Data-Access-Notebook"
"nsidc/NSIDC-Data-Tutorials" -> "ICESAT-2HackWeek/2020_ICESat-2_Hackweek_Tutorials"
"radiantearth/stac-api-spec" -> "radiantearth/stac-spec"
"radiantearth/stac-api-spec" -> "stac-utils/pystac-client"
"radiantearth/stac-api-spec" -> "stac-utils/pgstac"
"radiantearth/stac-api-spec" -> "stac-utils/stac-fastapi"
"radiantearth/stac-api-spec" -> "stac-utils/pystac"
"radiantearth/stac-api-spec" -> "radiantearth/stac-browser"
"radiantearth/stac-api-spec" -> "microsoft/planetary-computer-apis"
"radiantearth/stac-api-spec" -> "stac-utils/qgis-stac-plugin"
"radiantearth/stac-api-spec" -> "stac-utils/stactools"
"radiantearth/stac-api-spec" -> "intake/intake-stac"
"radiantearth/stac-api-spec" -> "opendatacube/odc-stac"
"radiantearth/stac-api-spec" -> "gjoseph92/stackstac"
"radiantearth/stac-api-spec" -> "developmentseed/eoAPI"
"radiantearth/stac-api-spec" -> "stac-utils/stac-server"
"radiantearth/stac-api-spec" -> "stac-utils/stac-validator"
"opengeos/geospatial" -> "opengeos/geospatial-ml"
"opengeos/geospatial" -> "corteva/geocube"
"opengeos/geospatial" -> "corteva/rioxarray"
"opengeos/geospatial" -> "opengeos/lidar"
"opengeos/geospatial" -> "opengeos/python-geospatial"
"opengeos/geospatial" -> "opengeos/HyperCoast"
"opengeos/geospatial" -> "opengeos/geospatial-data-catalogs"
"opengeos/geospatial" -> "gee-community/qgis-earthengine-plugin"
"opengeos/geospatial" -> "geopandas/dask-geopandas"
"opengeos/geospatial" -> "jgrss/geowombat"
"opengeos/geospatial" -> "stac-utils/pystac-client"
"opengeos/geospatial" -> "awesome-spectral-indices/awesome-spectral-indices"
"opengeos/geospatial" -> "opengeos/whitebox-python"
"opengeos/geospatial" -> "yotarazona/scikit-eo"
"opengeos/geospatial" -> "makepath/xarray-spatial"
"stac-utils/stactools" -> "stac-utils/stac-asset"
"stac-utils/stactools" -> "stac-utils/stac-pydantic"
"stac-utils/stactools" -> "stac-utils/pystac-client"
"pangeo-data/pangeo-docker-images" -> "microsoft/planetary-computer-containers"
"pangeo-data/pangeo-docker-images" -> "intake/intake-stac"
"pangeo-data/pangeo-docker-images" -> "gjoseph92/stackstac"
"pangeo-data/pangeo-docker-images" -> "gjoseph92/geogif"
"pangeo-data/pangeo-docker-images" -> "stac-utils/xstac" ["e"=1]
"pangeo-data/pangeo-docker-images" -> "stac-utils/pystac-client"
"davidfrantz/force" -> "senbox-org/sen2like"
"davidfrantz/force" -> "jgrss/satsmooth"
"xarray-contrib/xarray_leaflet" -> "davidbrochart/xtrude"
"xarray-contrib/xarray_leaflet" -> "stac-utils/xstac" ["e"=1]
"xarray-contrib/xarray_leaflet" -> "corteva/geocube"
"jmathur25/predicting-poverty-replication" -> "nealjean/predicting-poverty"
"jmathur25/predicting-poverty-replication" -> "thinkingmachines/ph-poverty-mapping"
"jmathur25/predicting-poverty-replication" -> "sustainlab-group/africa_poverty"
"ksopyla/awesome-nlp-polish" -> "sdadas/polish-nlp-resources"
"ksopyla/awesome-nlp-polish" -> "sdadas/polish-roberta"
"ksopyla/awesome-nlp-polish" -> "sheerun/awesome-polish-nlp"
"ksopyla/awesome-nlp-polish" -> "allegro/HerBERT"
"ksopyla/awesome-nlp-polish" -> "Ermlab/PoLitBert"
"ksopyla/awesome-nlp-polish" -> "kldarek/polbert"
"ksopyla/awesome-nlp-polish" -> "kwrobel-nlp/krnnt"
"ksopyla/awesome-nlp-polish" -> "sdadas/polish-sentence-evaluation"
"ksopyla/awesome-nlp-polish" -> "Ermlab/pl-sentiment-analysis"
"ksopyla/awesome-nlp-polish" -> "ipipan/spacy-pl"
"ksopyla/awesome-nlp-polish" -> "dzieciou/pystempel"
"ksopyla/awesome-nlp-polish" -> "deeppavlov/Slavic-BERT-NER"
"ksopyla/awesome-nlp-polish" -> "ZILiAT-NASK/BAN-PL"
"kldarek/polbert" -> "sdadas/polish-roberta"
"kldarek/polbert" -> "Ermlab/PoLitBert"
"kldarek/polbert" -> "sdadas/polish-sentence-evaluation"
"kldarek/polbert" -> "ipipan/spacy-pl"
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" -> "WangZhenqing-RS/2021Tianchi_RS"
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"radiantearth/mlhub-tutorials" -> "radiantearth/crop-type-detection-ICLR-2020"
"radiantearth/mlhub-tutorials" -> "radiantearth/geo-ml-model-catalog"
"radiantearth/mlhub-tutorials" -> "radiantearth/radiant-mlhub"
"radiantearth/mlhub-tutorials" -> "radiantearth/ml4eo-bootcamp-2021"
"UDST/sanfran_urbansim" -> "UDST/bayarea_urbansim"
"cordmaur/WaterDetect" -> "cordmaur/WaterQuality"
"cordmaur/WaterDetect" -> "CNES/MAJA" ["e"=1]
"cordmaur/WaterDetect" -> "isikdogan/deepwatermap"
"cordmaur/WaterDetect" -> "Servir-Mekong/hydra-floods"
"cordmaur/WaterDetect" -> "sertit/eoreader" ["e"=1]
"cjsyzwsh/dnn-for-economic-information" -> "cjsyzwsh/ASU-DNN"
"cjsyzwsh/ASU-DNN" -> "cjsyzwsh/dnn-for-economic-information"
"sdadas/polish-roberta" -> "sdadas/polish-sentence-evaluation"
"sdadas/polish-roberta" -> "Ermlab/PoLitBert"
"sdadas/polish-roberta" -> "sdadas/polish-nlp-resources"
"sdadas/polish-roberta" -> "ipipan/spacy-pl"
"sdadas/polish-roberta" -> "kldarek/polbert"
"lambgeo/docker-lambda" -> "developmentseed/geolambda"
"lambgeo/docker-lambda" -> "rouault/cogserver"
"RandomFractals/geo-data-viewer" -> "geoarrow/geoarrow"
"paulvangentcom/python_corona_simulation" -> "petroniocandido/COVID19_AgentBasedSimulation"
"paulvangentcom/python_corona_simulation" -> "AshtonIzmev/covid-19-pandemic-simulation"
"JasmineRain/NAIC_AI-RS" -> "WangZhenqing-RS/2021Tianchi_RS"
"OSGeo/ows.js" -> "tomkralidis/csw4js"
"Accioy/SAR2optical" -> "mohit-kaushik/SAR_to_Optical"
"Accioy/SAR2optical" -> "JessieZ96/SAR-to-Optical"
"lironui/MACU-Net" -> "lironui/Multi-Attention-Network"
"lironui/MACU-Net" -> "lironui/ABCNet"
"lironui/MACU-Net" -> "lironui/MAResU-Net"
"lironui/MACU-Net" -> "lehaifeng/SCAttNet"
"lironui/MACU-Net" -> "lcylmhlcy/Semantic-segmentation"
"ICESAT-2HackWeek/2020_ICESat-2_Hackweek_Tutorials" -> "ICESAT-2HackWeek/ICESat2_hackweek_tutorials"
"ICESAT-2HackWeek/2020_ICESat-2_Hackweek_Tutorials" -> "nsidc/NSIDC-Data-Tutorials"
"ICESAT-2HackWeek/2020_ICESat-2_Hackweek_Tutorials" -> "icesat2py/icepyx"
"niecongchong/HRNet-keras-semantic-segmentation" -> "soyan1999/segmentation_hrnet_keras"
"niecongchong/HRNet-keras-semantic-segmentation" -> "yuanyuanli85/tf-hrnet"
"niecongchong/HRNet-keras-semantic-segmentation" -> "AI-Chen/HRNet-V2"
"niecongchong/HRNet-keras-semantic-segmentation" -> "niecongchong/DANet-keras"
"kapadia/usgs" -> "USGS-EROS/espa-api"
"niecongchong/DANet-keras" -> "niecongchong/HRNet-keras-semantic-segmentation"
"gipit/gippy" -> "gipit/gips"
"gipit/gippy" -> "olivierhagolle/Start_maja"
"lironui/Linear-Attention-Mechanism" -> "lironui/MAResU-Net"
"geoarrow/geoarrow" -> "geoarrow/geoarrow-rs"
"geoarrow/geoarrow" -> "opengeospatial/geoparquet"
"geoarrow/geoarrow" -> "geopolars/geopolars"
"geoarrow/geoarrow" -> "planetlabs/gpq"
"geoarrow/geoarrow" -> "geoarrow/geoarrow-python"
"geoarrow/geoarrow" -> "geopandas/pyogrio"
"geoarrow/geoarrow" -> "duckdb/duckdb-spatial"
"geoarrow/geoarrow" -> "georust/geozero"
"geoarrow/geoarrow" -> "geoarrow/deck.gl-layers"
"geoarrow/geoarrow" -> "flatgeobuf/flatgeobuf" ["e"=1]
"geoarrow/geoarrow" -> "developmentseed/lonboard"
"geoarrow/geoarrow" -> "geopandas/dask-geopandas"
"geoarrow/geoarrow" -> "cloudnativegeo/cloud-optimized-geospatial-formats-guide"
"geoarrow/geoarrow" -> "kylebarron/parquet-wasm"
"geoarrow/geoarrow" -> "stac-utils/rustac"
"toddwschneider/nyc-subway-turnstile-data" -> "toddwschneider/nyc-subway-data"
"pypims/pypims" -> "HEMLab/HiPIMS-CUDA"
"GDSL-UL/Teaching_Links" -> "andrea-ballatore/open-geo-data-education"
"GDSL-UL/Teaching_Links" -> "AaltoGIS/Sustainability-GIS"
"gee-community/ee-tensorflow-notebooks" -> "mortcanty/earthengine"
"VSAnimator/stgan" -> "PatrickTUM/SEN12MS-CR-TS"
"ThanasisMattas/mattflow" -> "ThanasisMattas/shortestpaths"
"ThanasisMattas/mattflow" -> "ThanasisMattas/cp-handbook"
"podaac/tutorials" -> "podaac/data-subscriber"
"stac-utils/stac-pydantic" -> "stac-utils/stac-check"
"developmentseed/geojson-pydantic" -> "developmentseed/tipg"
"developmentseed/geojson-pydantic" -> "stac-utils/stac-pydantic"
"developmentseed/geojson-pydantic" -> "stac-utils/stac-fastapi"
"developmentseed/geojson-pydantic" -> "developmentseed/eoAPI"
"developmentseed/geojson-pydantic" -> "stac-utils/pgstac"
"developmentseed/geojson-pydantic" -> "developmentseed/titiler"
"developmentseed/geojson-pydantic" -> "geopandas/pyogrio"
"developmentseed/geojson-pydantic" -> "developmentseed/timvt"
"developmentseed/geojson-pydantic" -> "stac-utils/pystac"
"developmentseed/geojson-pydantic" -> "geoalchemy/geoalchemy2"
"developmentseed/geojson-pydantic" -> "cogeotiff/rio-cogeo"
"developmentseed/geojson-pydantic" -> "radiantearth/stac-api-spec"
"developmentseed/geojson-pydantic" -> "banesullivan/localtileserver"
"developmentseed/geojson-pydantic" -> "developmentseed/morecantile"
"developmentseed/geojson-pydantic" -> "geoarrow/geoarrow"
"mrocklin/ShallowWater" -> "TUM-I5/SWE"
"theonegis/ganstfm" -> "theonegis/edcstfn"
"theonegis/ganstfm" -> "LouisChen0104/swinstfm"
"theonegis/ganstfm" -> "songbingze/MLFF-GAN"
"theonegis/ganstfm" -> "qpyeah/MUSTFN"
"davin11/CNN-NLM" -> "RaymondByc/FID-CNN"
"georust/geozero" -> "geoarrow/geoarrow-rs"
"georust/geozero" -> "georust/gdal"
"georust/geozero" -> "Maximkaaa/galileo"
"georust/geozero" -> "georust/geo"
"georust/geozero" -> "geoarrow/geoarrow"
"georust/geozero" -> "georust/geojson"
"georust/geozero" -> "pka/awesome-georust"
"georust/geozero" -> "georust/proj"
"georust/geozero" -> "frewsxcv/rgis"
"georust/geozero" -> "flatgeobuf/flatgeobuf" ["e"=1]
"georust/geozero" -> "kylebarron/geo-index"
"georust/geozero" -> "maplibre/maplibre-tile-spec" ["e"=1]
"georust/geozero" -> "busstoptaktik/geodesy"
"georust/geozero" -> "georust/geos"
"georust/geozero" -> "georust/geotiff"
"senbox-org/sen2like" -> "ESDS-Leipzig/sen2nbar"
"senbox-org/sen2like" -> "TUW-GEO/Equi7Grid"
"geospatial-jeff/aiocogeo" -> "stac-utils/stac-pydantic"
"endu111/remote-sensing-images-fusion" -> "harisw/STARFM_prediction"
"ChienWong/ResUnet-a" -> "feevos/resuneta"
"ChienWong/ResUnet-a" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"ChienWong/ResUnet-a" -> "lcylmhlcy/Semantic-segmentation"
"Chintan2108/Cloud-Removal-in-Satellite-Images-using-Conditional-Generative-Adversarial-Networks" -> "Akash-Ramjyothi/Cloud-and-Fog-removal-System-using-Generative-Adversarial-Networks-Satellite-Image-Processing"
"BrandonSmithJ/MDN" -> "mowerther/BNN_2022"
"BrandonSmithJ/MDN" -> "acolite/acolite_ls2"
"emanueledalsasso/SAR-CNN" -> "emanueledalsasso/SAR2SAR"
"ucd-cws/arcpy_metadata" -> "Esri/hermes"
"ucd-cws/arcpy_metadata" -> "AlexArcPy/registrant"
"ucd-cws/arcpy_metadata" -> "jstep/Arcpy"
"GeomaticsAndRS/sar" -> "grip-unina/SAR-CNN"
"GeomaticsAndRS/sar" -> "XwK-P/ID-CNN"
"scikit-mobility/DeepLearning4HumanMobility" -> "scikit-mobility/DeepGravity"
"scikit-mobility/DeepLearning4HumanMobility" -> "FIBLAB/MoveSim" ["e"=1]
"scikit-mobility/DeepLearning4HumanMobility" -> "scikit-mobility/scikit-mobility"
"scikit-mobility/DeepLearning4HumanMobility" -> "scikit-mobility/tutorials"
"scikit-mobility/DeepLearning4HumanMobility" -> "mie-lab/location-prediction"
"microsoft/Uganda-Tanzania-Building-Footprints" -> "microsoft/KenyaNigeriaBuildingFootprints"
"microsoft/Uganda-Tanzania-Building-Footprints" -> "microsoft/SouthAmericaBuildingFootprints"
"isikdogan/deepwatermap" -> "xinluo2018/WatNet"
"isikdogan/deepwatermap" -> "isikdogan/rivamap"
"isikdogan/deepwatermap" -> "VeinsOfTheEarth/RivGraph"
"isikdogan/deepwatermap" -> "isikdogan/deepriver"
"isikdogan/deepwatermap" -> "cordmaur/WaterDetect"
"parevalo/gee-ccdc-tools" -> "parevalo/landtrendr-ccdc"
"parevalo/gee-ccdc-tools" -> "shijuanchen/forest_degradation_georgia"
"nasa-gibs/mrf" -> "nasa-gibs/gpu-data-to-image"
"transentis/bptk_py_tutorial" -> "transentis/beergame"
"UCSB-VRL/bisqueUCSB" -> "amilworks/ece178"
"CNES/swot_simulator" -> "SWOT-JPL/swotsimulator"
"adugnag/deSpeckNet" -> "adugnag/SAR-FCN-DK3"
"adugnag/deSpeckNet" -> "adugnag/CV-deSpeckNet"
"adugnag/deSpeckNet" -> "adugnag/deSpeckNet-TF-GEE"
"SorourMo/95-Cloud-An-Extension-to-38-Cloud-Dataset" -> "SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset"
"SorourMo/95-Cloud-An-Extension-to-38-Cloud-Dataset" -> "dveyarangi/cloud-net-plus"
"GFZ/arosics" -> "senbox-org/sen2like"
"geofileops/geofileops" -> "geopandas/pyogrio"
"HEMLab/HiPIMS-CUDA" -> "pypims/pypims"
"HEMLab/HiPIMS-CUDA" -> "SynxFlow/SynxFlow"
"HEMLab/HiPIMS-CUDA" -> "lukeshope/hipims-ocl"
"icesat-2UT/PhoREAL" -> "icesat2py/icepyx"
"icesat-2UT/PhoREAL" -> "ICESAT-2HackWeek/ICESat2_hackweek_tutorials"
"icesat-2UT/PhoREAL" -> "Oht0nger/PhoLabeler"
"icesat-2UT/PhoREAL" -> "jonm3D/OpenOceans"
"icesat-2UT/PhoREAL" -> "tsutterley/read-ICESat-2"
"icesat-2UT/PhoREAL" -> "SmithB/ICESat2"
"icesat-2UT/PhoREAL" -> "EduinHSERNA/pyGEDI" ["e"=1]
"icesat-2UT/PhoREAL" -> "ICESat2-Bathymetry/Information"
"allegro/HerBERT" -> "allegro/klejbenchmark-baselines"
"openmole/openmole" -> "openmole/openmole-market"
"openmole/openmole" -> "BioMedIA/irtk-refactored-deprecated"
"SlideRuleEarth/sliderule" -> "SlideRuleEarth/h5coro"
"SlideRuleEarth/sliderule" -> "jonm3D/h5xray"
"developmentseed/morecantile" -> "developmentseed/rio-viz"
"developmentseed/morecantile" -> "developmentseed/cogeo-mosaic"
"developmentseed/morecantile" -> "developmentseed/tilebench"
"developmentseed/morecantile" -> "developmentseed/tifeatures"
"developmentseed/morecantile" -> "stac-utils/stac-geoparquet"
"yuanyuanli85/tf-hrnet" -> "AI-Chen/HRNet-V2"
"yuanyuanli85/tf-hrnet" -> "niecongchong/HRNet-keras-semantic-segmentation"
"yuanyuanli85/tf-hrnet" -> "VXallset/deep-high-resolution-net.TensorFlow"
"shijuanchen/forest_degradation_georgia" -> "jdoblas/DETER_R_AMZ"
"ermongroup/STGAN" -> "xufangchn/GLF-CR"
"ermongroup/STGAN" -> "enomotokenji/mcgan-cvprw2017-pytorch"
"clw5180/remote_sensing_object_detection_2019" -> "fortitude94deng/baidu-remote-sensing"
"clw5180/remote_sensing_object_detection_2019" -> "tangzhenjie/semantic_segmentation_contest"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation-tf2" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"developmentseed/rio-stac" -> "stac-utils/stac-geoparquet"
"developmentseed/rio-stac" -> "sat-utils/sat-stac"
"developmentseed/rio-stac" -> "stac-utils/titiler-pgstac"
"gauteh/hidefix" -> "gauteh/dars"
"caiostringari/deepwaves" -> "caiostringari/pywavelearn"
"emanueledalsasso/SAR2SAR" -> "emanueledalsasso/SAR-CNN"
"emanueledalsasso/SAR2SAR" -> "diegovalsesia/speckle2void"
"emanueledalsasso/SAR2SAR" -> "JK-the-Ko/SAR-CAM"
"emanueledalsasso/SAR2SAR" -> "XwK-P/ID-CNN"
"marceloprates/prettymaps" -> "chrieke/prettymapp"
"marceloprates/prettymaps" -> "gboeing/osmnx"
"marceloprates/prettymaps" -> "opengeos/leafmap"
"marceloprates/prettymaps" -> "rougier/scientific-visualization-book" ["e"=1]
"marceloprates/prettymaps" -> "anvaka/city-roads" ["e"=1]
"marceloprates/prettymaps" -> "sacridini/Awesome-Geospatial"
"marceloprates/prettymaps" -> "gee-community/geemap"
"marceloprates/prettymaps" -> "chriskiehl/Gooey" ["e"=1]
"marceloprates/prettymaps" -> "Textualize/rich" ["e"=1]
"marceloprates/prettymaps" -> "a-b-street/abstreet" ["e"=1]
"marceloprates/prettymaps" -> "gboeing/osmnx-examples"
"marceloprates/prettymaps" -> "Kanaries/pygwalker" ["e"=1]
"marceloprates/prettymaps" -> "movingpandas/movingpandas"
"marceloprates/prettymaps" -> "geopandas/geopandas"
"marceloprates/prettymaps" -> "marimo-team/marimo" ["e"=1]
"ChenlieShi-NWU/Free-shared-Spatiotemporal-method-of-remote-sensing-" -> "theonegis/ganstfm"
"ChenlieShi-NWU/Free-shared-Spatiotemporal-method-of-remote-sensing-" -> "theonegis/edcstfn"
"ChenlieShi-NWU/Free-shared-Spatiotemporal-method-of-remote-sensing-" -> "endu111/remote-sensing-images-fusion"
"ChenlieShi-NWU/Free-shared-Spatiotemporal-method-of-remote-sensing-" -> "tytupski/GEE-Image-Fusion"
"ChenlieShi-NWU/Free-shared-Spatiotemporal-method-of-remote-sensing-" -> "nmileva/starfm4py"
"ChenlieShi-NWU/Free-shared-Spatiotemporal-method-of-remote-sensing-" -> "px39n/Awesome-Data-Fusion-for-Remote-Sensing"
"ChenlieShi-NWU/Free-shared-Spatiotemporal-method-of-remote-sensing-" -> "LouisChen0104/swinstfm"
"ChenlieShi-NWU/Free-shared-Spatiotemporal-method-of-remote-sensing-" -> "HPSCIL/cuESTARFM"
"opengeos/leafmap" -> "gee-community/geemap"
"opengeos/leafmap" -> "opengeos/segment-geospatial"
"opengeos/leafmap" -> "microsoft/torchgeo"
"opengeos/leafmap" -> "opengeos/streamlit-geospatial"
"opengeos/leafmap" -> "sacridini/Awesome-Geospatial"
"opengeos/leafmap" -> "giswqs/earthengine-py-notebooks"
"opengeos/leafmap" -> "movingpandas/movingpandas"
"opengeos/leafmap" -> "rasterio/rasterio"
"opengeos/leafmap" -> "developmentseed/lonboard"
"opengeos/leafmap" -> "acgeospatial/awesome-earthobservation-code"
"opengeos/leafmap" -> "awesome-spectral-indices/awesome-spectral-indices"
"opengeos/leafmap" -> "microsoft/GlobalMLBuildingFootprints"
"opengeos/leafmap" -> "samapriya/awesome-gee-community-datasets"
"opengeos/leafmap" -> "geopandas/geopandas"
"opengeos/leafmap" -> "jblindsay/whitebox-tools"
"georust/proj" -> "georust/geojson"
"georust/proj" -> "georust/wkt"
"georust/proj" -> "georust/gdal"
"georust/proj" -> "georust/geozero"
"microsoft/torchgeo" -> "opengeos/segment-geospatial"
"microsoft/torchgeo" -> "azavea/raster-vision"
"microsoft/torchgeo" -> "Jack-bo1220/Awesome-Remote-Sensing-Foundation-Models" ["e"=1]
"microsoft/torchgeo" -> "satellite-image-deep-learning/techniques"
"microsoft/torchgeo" -> "IBM/terratorch" ["e"=1]
"microsoft/torchgeo" -> "chrieke/awesome-satellite-imagery-datasets"
"microsoft/torchgeo" -> "acgeospatial/awesome-earthobservation-code"
"microsoft/torchgeo" -> "sentinel-hub/eo-learn"
"microsoft/torchgeo" -> "makepath/xarray-spatial"
"microsoft/torchgeo" -> "rasterio/rasterio"
"microsoft/torchgeo" -> "awesome-spectral-indices/awesome-spectral-indices"
"microsoft/torchgeo" -> "gee-community/geemap"
"microsoft/torchgeo" -> "corteva/rioxarray"
"microsoft/torchgeo" -> "Clay-foundation/model" ["e"=1]
"microsoft/torchgeo" -> "sacridini/Awesome-Geospatial"
"eclab/mason" -> "isislab-unisa/dmason"
"eclab/mason" -> "GMUEClab/ecj" ["e"=1]
"eclab/mason" -> "xrubio/pandora"
"eclab/mason" -> "gama-platform/gama.old"
"eclab/mason" -> "fmichel/MaDKit"
"PacktPublishing/Python-for-ArcGIS-Pro" -> "Dan-Patterson/Tools_for_ArcGIS_Pro"
"geopandas/xyzservices" -> "xarray-contrib/xarray_leaflet"
"joewdavies/geoblender" -> "tjukanovt/30DayMapChallenge"
"joewdavies/geoblender" -> "domlysz/BlenderGIS" ["e"=1]
"joewdavies/geoblender" -> "eurostat/gridviz"
"joewdavies/geoblender" -> "minorua/Qgis2threejs" ["e"=1]
"joewdavies/geoblender" -> "mapbox/storytelling" ["e"=1]
"joewdavies/geoblender" -> "joewdavies/awesome-frontend-gis"
"joewdavies/geoblender" -> "uwcartlab/webmapping"
"joewdavies/geoblender" -> "anvaka/peak-map" ["e"=1]
"joewdavies/geoblender" -> "dwtkns/gdal-cheat-sheet"
"joewdavies/geoblender" -> "riatelab/bertin"
"joewdavies/geoblender" -> "tylermorganwall/rayshader" ["e"=1]
"joewdavies/geoblender" -> "giswqs/qgis-earthengine-examples"
"joewdavies/geoblender" -> "OpenTopography/RiverREM"
"joewdavies/geoblender" -> "marceloprates/prettymaps"
"joewdavies/geoblender" -> "Pecners/rayshader_portraits" ["e"=1]
"google/earthengine-api" -> "gee-community/geemap"
"google/earthengine-api" -> "opengeos/Awesome-GEE"
"google/earthengine-api" -> "giswqs/earthengine-py-notebooks"
"google/earthengine-api" -> "google/earthengine-community"
"google/earthengine-api" -> "gee-community/geetools"
"google/earthengine-api" -> "giswqs/qgis-earthengine-examples"
"google/earthengine-api" -> "samapriya/awesome-gee-community-datasets"
"google/earthengine-api" -> "gee-community/qgis-earthengine-plugin"
"google/earthengine-api" -> "r-spatial/rgee"
"google/earthengine-api" -> "fitoprincipe/geetools-code-editor"
"google/earthengine-api" -> "acgeospatial/awesome-earthobservation-code"
"google/earthengine-api" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"google/earthengine-api" -> "rasterio/rasterio"
"google/earthengine-api" -> "awesome-spectral-indices/awesome-spectral-indices"
"google/earthengine-api" -> "sentinel-hub/custom-scripts"
"shapely/shapely" -> "Toblerity/Fiona"
"shapely/shapely" -> "geopandas/geopandas"
"shapely/shapely" -> "rasterio/rasterio"
"shapely/shapely" -> "pyproj4/pyproj"
"shapely/shapely" -> "OSGeo/gdal" ["e"=1]
"shapely/shapely" -> "libgeos/geos" ["e"=1]
"shapely/shapely" -> "gboeing/osmnx"
"shapely/shapely" -> "pygeos/pygeos"
"shapely/shapely" -> "pysal/pysal"
"shapely/shapely" -> "Toblerity/rtree" ["e"=1]
"shapely/shapely" -> "python-visualization/folium"
"shapely/shapely" -> "pydata/xarray" ["e"=1]
"shapely/shapely" -> "GeospatialPython/pyshp"
"shapely/shapely" -> "geopy/geopy"
"shapely/shapely" -> "mikedh/trimesh" ["e"=1]
"sentinelsat/sentinelsat" -> "kr-stn/awesome-sentinel"
"sentinelsat/sentinelsat" -> "sentinel-hub/sentinelhub-py"
"sentinelsat/sentinelsat" -> "johntruckenbrodt/pyroSAR" ["e"=1]
"sentinelsat/sentinelsat" -> "sentinel-hub/eo-learn"
"sentinelsat/sentinelsat" -> "sentinel-hub/sentinel2-cloud-detector"
"sentinelsat/sentinelsat" -> "olivierhagolle/Sentinel-download"
"sentinelsat/sentinelsat" -> "acgeospatial/awesome-earthobservation-code"
"sentinelsat/sentinelsat" -> "corteva/rioxarray"
"sentinelsat/sentinelsat" -> "rasterio/rasterio"
"sentinelsat/sentinelsat" -> "azavea/raster-vision"
"sentinelsat/sentinelsat" -> "developmentseed/landsat-util"
"sentinelsat/sentinelsat" -> "RadarCODE/awesome-sar" ["e"=1]
"sentinelsat/sentinelsat" -> "chrieke/awesome-satellite-imagery-datasets"
"sentinelsat/sentinelsat" -> "olivierhagolle/LANDSAT-Download"
"sentinelsat/sentinelsat" -> "radiantearth/stac-spec"
"px39n/Awesome-Data-Fusion-for-Remote-Sensing" -> "ChenlieShi-NWU/Free-shared-Spatiotemporal-method-of-remote-sensing-"
"px39n/Awesome-Data-Fusion-for-Remote-Sensing" -> "ESDS-Leipzig/cubo"
"aazuspan/wxee" -> "google/Xee"
"aazuspan/wxee" -> "davemlz/eemont"
"aazuspan/wxee" -> "google/earthengine-jupyter"
"aazuspan/wxee" -> "Servir-Mekong/hydra-floods"
"microsoft/RoadDetections" -> "microsoft/GlobalMLBuildingFootprints"
"microsoft/RoadDetections" -> "opengeos/geospatial-data-catalogs"
"microsoft/RoadDetections" -> "opengeos/open-buildings"
"microsoft/RoadDetections" -> "microsoft/satellite-imagery-labeling-tool"
"microsoft/RoadDetections" -> "opengeospatial/geoparquet"
"microsoft/RoadDetections" -> "aliaksandr960/segment-anything-eo"
"microsoft/RoadDetections" -> "duckdb/duckdb-spatial"
"microsoft/RoadDetections" -> "coolzhao/Geo-SAM"
"microsoft/RoadDetections" -> "OvertureMaps/data"
"microsoft/RoadDetections" -> "mszell/geospatialdatascience"
"microsoft/RoadDetections" -> "opengeos/maxar-open-data"
"microsoft/RoadDetections" -> "facebookmicrosites/Open-Mapping-At-Facebook" ["e"=1]
"microsoft/RoadDetections" -> "e-sensing/sits" ["e"=1]
"microsoft/RoadDetections" -> "kraina-ai/quackosm"
"microsoft/RoadDetections" -> "microsoft/torchgeo"
"Toblerity/Fiona" -> "rasterio/rasterio"
"Toblerity/Fiona" -> "shapely/shapely"
"Toblerity/Fiona" -> "pyproj4/pyproj"
"Toblerity/Fiona" -> "Toblerity/rtree" ["e"=1]
"Toblerity/Fiona" -> "perrygeo/python-rasterstats"
"Toblerity/Fiona" -> "GeospatialPython/pyshp"
"Toblerity/Fiona" -> "pygeos/pygeos"
"Toblerity/Fiona" -> "geopandas/geopandas"
"Toblerity/Fiona" -> "corteva/rioxarray"
"Toblerity/Fiona" -> "pysal/pysal"
"Toblerity/Fiona" -> "jazzband/geojson"
"Toblerity/Fiona" -> "geoalchemy/geoalchemy2"
"Toblerity/Fiona" -> "OSGeo/gdal" ["e"=1]
"Toblerity/Fiona" -> "geopandas/contextily"
"Toblerity/Fiona" -> "SciTools/cartopy" ["e"=1]
"mapbox/mapbox-sdk-py" -> "mapbox/mapbox-cli-py"
"mapbox/mapbox-sdk-py" -> "mapbox/mapboxgl-jupyter"
"Bolton-and-Menk-GIS/restapi" -> "AlexArcPy/registrant"
"acolite/acolite" -> "acolite/acolite_ls2"
"acolite/acolite" -> "robintw/Py6S"
"acolite/acolite" -> "hygeos/polymer"
"acolite/acolite" -> "BrandonSmithJ/MDN"
"acolite/acolite" -> "CNES/RadiativeTransferCode-OSOAA"
"Doodleverse/dash_doodler" -> "MLMondays/MLMONDAYS"
"Doodleverse/dash_doodler" -> "Doodleverse/segmentation_gym"
"Doodleverse/dash_doodler" -> "2320sharon/Sniffer"
"Doodleverse/segmentation_gym" -> "Doodleverse/dash_doodler"
"Doodleverse/segmentation_gym" -> "UNCG-DAISY/Instagrain"
"hn303/30DayMapChallenge-Bot" -> "jwoLondon/30dayMapChallenge"
"opendatacube/datacube-core" -> "corteva/rioxarray"
"opendatacube/datacube-core" -> "opendatacube/odc-stac"
"opendatacube/datacube-core" -> "GeoscienceAustralia/dea-notebooks"
"opendatacube/datacube-core" -> "stac-utils/pystac"
"opendatacube/datacube-core" -> "opendatacube/datacube-ows"
"opendatacube/datacube-core" -> "makepath/xarray-spatial"
"opendatacube/datacube-core" -> "radiantearth/stac-spec"
"opendatacube/datacube-core" -> "johntruckenbrodt/pyroSAR" ["e"=1]
"opendatacube/datacube-core" -> "opendatacube/cube-in-a-box"
"opendatacube/datacube-core" -> "google/Xee"
"opendatacube/datacube-core" -> "corteva/geocube"
"opendatacube/datacube-core" -> "gjoseph92/stackstac"
"opendatacube/datacube-core" -> "opendatacube/datacube-notebooks"
"opendatacube/datacube-core" -> "opendatacube/odc-tools"
"opendatacube/datacube-core" -> "bopen/xarray-sentinel" ["e"=1]
"microsoft/PlanetaryComputerExamples" -> "microsoft/PlanetaryComputer"
"microsoft/PlanetaryComputerExamples" -> "microsoft/planetary-computer-apis"
"microsoft/PlanetaryComputerExamples" -> "makepath/xarray-spatial"
"microsoft/PlanetaryComputerExamples" -> "stac-utils/pystac"
"microsoft/PlanetaryComputerExamples" -> "gjoseph92/stackstac"
"microsoft/PlanetaryComputerExamples" -> "opendatacube/odc-stac"
"microsoft/PlanetaryComputerExamples" -> "corteva/rioxarray"
"microsoft/PlanetaryComputerExamples" -> "microsoft/planetary-computer-hub"
"microsoft/PlanetaryComputerExamples" -> "microsoft/AIforEarthDataSets"
"microsoft/PlanetaryComputerExamples" -> "microsoft/planetary-computer-sdk-for-python"
"microsoft/PlanetaryComputerExamples" -> "developmentseed/eoAPI"
"microsoft/PlanetaryComputerExamples" -> "opendatacube/datacube-core"
"microsoft/PlanetaryComputerExamples" -> "davemlz/eemont"
"microsoft/PlanetaryComputerExamples" -> "microsoft/planetary-computer-containers"
"microsoft/PlanetaryComputerExamples" -> "nsidc/earthaccess"
"awesome-spectral-indices/spectral" -> "davemlz/eemont"
"awesome-spectral-indices/spectral" -> "awesome-spectral-indices/awesome-spectral-indices"
"awesome-spectral-indices/spectral" -> "ESDS-Leipzig/cubo"
"awesome-spectral-indices/spectral" -> "awesome-spectral-indices/spyndex"
"planetlabs/planet-client-python" -> "planetlabs/notebooks"
"planetlabs/planet-client-python" -> "planetlabs/qgis-planet-plugin"
"planetlabs/planet-client-python" -> "sentinel-hub/sentinelhub-py"
"planetlabs/planet-client-python" -> "sentinelsat/sentinelsat"
"planetlabs/planet-client-python" -> "olivierhagolle/Sentinel-download"
"planetlabs/planet-client-python" -> "sentinel-hub/sentinel2-cloud-detector"
"podaac/data-subscriber" -> "podaac/tutorials"
"podaac/data-subscriber" -> "SWOT-community/SWOT-OpenToolkit"
"podaac/data-subscriber" -> "podaac/hydrocron"
"Drinkler/Yield-Prediction" -> "lakshya0904/Crop-Yield-Prediction"
"awesome-spectral-indices/awesome-spectral-indices" -> "davemlz/eemont"
"awesome-spectral-indices/awesome-spectral-indices" -> "awesome-spectral-indices/spyndex"
"awesome-spectral-indices/awesome-spectral-indices" -> "acgeospatial/awesome-earthobservation-code"
"awesome-spectral-indices/awesome-spectral-indices" -> "samapriya/awesome-gee-community-datasets"
"awesome-spectral-indices/awesome-spectral-indices" -> "awesome-spectral-indices/spectral"
"awesome-spectral-indices/awesome-spectral-indices" -> "opengeos/Awesome-GEE"
"awesome-spectral-indices/awesome-spectral-indices" -> "e-sensing/sits" ["e"=1]
"awesome-spectral-indices/awesome-spectral-indices" -> "gee-community/ee-palettes"
"awesome-spectral-indices/awesome-spectral-indices" -> "AlexeyPechnikov/pygmtsar" ["e"=1]
"awesome-spectral-indices/awesome-spectral-indices" -> "giswqs/earthengine-py-notebooks"
"awesome-spectral-indices/awesome-spectral-indices" -> "makepath/xarray-spatial"
"awesome-spectral-indices/awesome-spectral-indices" -> "azavea/raster-vision"
"awesome-spectral-indices/awesome-spectral-indices" -> "sentinel-hub/eo-learn"
"awesome-spectral-indices/awesome-spectral-indices" -> "ESDS-Leipzig/cubo"
"awesome-spectral-indices/awesome-spectral-indices" -> "gee-community/geetools"
"AmberHen/WHU-OPT-SAR-dataset" -> "yisun98/SOLC"
"AmberHen/WHU-OPT-SAR-dataset" -> "yaoxu008/QXS-SAROPT"
"AmberHen/WHU-OPT-SAR-dataset" -> "Ray010221/MCANet"
"AmberHen/WHU-OPT-SAR-dataset" -> "XD-MG/DDHRNet"
"AmberHen/WHU-OPT-SAR-dataset" -> "MarsZhaoYT/SAR2Opt-Heterogeneous-Dataset"
"AmberHen/WHU-OPT-SAR-dataset" -> "whu-pzhang/ASANet"
"AmberHen/WHU-OPT-SAR-dataset" -> "PatrickTUM/multimodalCD_ISPRS21"
"AmberHen/WHU-OPT-SAR-dataset" -> "LauraChow/HunanMultimodalDataset"
"AmberHen/WHU-OPT-SAR-dataset" -> "CAU-HE/CMCDNet"
"ameraner/dsen2-cr" -> "xufangchn/GLF-CR"
"ameraner/dsen2-cr" -> "PatrickTUM/SEN12MS-CR-TS"
"ameraner/dsen2-cr" -> "PatrickTUM/UnCRtainTS"
"ameraner/dsen2-cr" -> "zhu-xlab/M3R-CR"
"ameraner/dsen2-cr" -> "ermongroup/STGAN"
"ameraner/dsen2-cr" -> "qzhang95/PSTCR"
"ameraner/dsen2-cr" -> "Penn000/SpA-GAN_for_cloud_removal"
"ameraner/dsen2-cr" -> "Phoenix-Shen/DSEN2_CR_PYTORCH"
"ameraner/dsen2-cr" -> "VSAnimator/stgan"
"ameraner/dsen2-cr" -> "PeeBar/Awesome-Cloud-Detection-and-Removal"
"Akash-Ramjyothi/Cloud-and-Fog-removal-System-using-Generative-Adversarial-Networks-Satellite-Image-Processing" -> "Chintan2108/Cloud-Removal-in-Satellite-Images-using-Conditional-Generative-Adversarial-Networks"
"nsidc/earthaccess" -> "corteva/rioxarray"
"nsidc/earthaccess" -> "gjoseph92/stackstac"
"nsidc/earthaccess" -> "xpublish-community/xpublish" ["e"=1]
"nsidc/earthaccess" -> "makepath/xarray-spatial"
"nsidc/earthaccess" -> "corteva/geocube"
"nsidc/earthaccess" -> "icesat2py/icepyx"
"nsidc/earthaccess" -> "google/Xee"
"nsidc/earthaccess" -> "xarray-contrib/datatree" ["e"=1]
"nsidc/earthaccess" -> "bopen/xarray-sentinel" ["e"=1]
"nsidc/earthaccess" -> "opendatacube/odc-stac"
"nsidc/earthaccess" -> "NASA-Openscapes/earthdata-cloud-cookbook"
"nsidc/earthaccess" -> "nasa/EMIT-Data-Resources"
"nsidc/earthaccess" -> "pangeo-data/xESMF" ["e"=1]
"nsidc/earthaccess" -> "stac-utils/pystac-client"
"nsidc/earthaccess" -> "podaac/tutorials"
"adugnag/gee_s1_ard" -> "davemlz/eemont"
"adugnag/gee_s1_ard" -> "ESA-PhiLab/radiometric-slope-correction"
"adugnag/gee_s1_ard" -> "shijuanchen/forest_degradation_georgia"
"adugnag/gee_s1_ard" -> "mortcanty/earthengine"
"adugnag/gee_s1_ard" -> "wouellette/ee-dynamic-time-warping"
"adugnag/gee_s1_ard" -> "eMapR/LT-GEE"
"adugnag/gee_s1_ard" -> "open-geocomputing/OpenEarthEngineLibrary"
"stac-utils/rustac" -> "stac-utils/stac-geoparquet"
"stac-utils/rustac" -> "stac-utils/rustac-py"
"raoofnaushad/Land-Cover-Classification-using-Sentinel-2-Dataset" -> "reidfalconer/landcover_classification"
"Akhilesh64/ResUnet-a" -> "waldnerf/decode"
"CS-SI/eodag-cube" -> "CS-SI/eodag-labextension"
"davemlz/eemont" -> "awesome-spectral-indices/awesome-spectral-indices"
"davemlz/eemont" -> "gee-community/geetools"
"davemlz/eemont" -> "aazuspan/wxee"
"davemlz/eemont" -> "awesome-spectral-indices/spectral"
"davemlz/eemont" -> "awesome-spectral-indices/spyndex"
"davemlz/eemont" -> "gee-community/ee-palettes"
"davemlz/eemont" -> "samapriya/awesome-gee-community-datasets"
"davemlz/eemont" -> "google/Xee"
"davemlz/eemont" -> "opengeos/Awesome-GEE"
"davemlz/eemont" -> "adugnag/gee_s1_ard"
"davemlz/eemont" -> "gee-community/qgis-earthengine-plugin"
"davemlz/eemont" -> "acgeospatial/awesome-earthobservation-code"
"davemlz/eemont" -> "open-geocomputing/OpenEarthEngineLibrary"
"davemlz/eemont" -> "csaybar/EEwPython"
"davemlz/eemont" -> "philippgaertner/awesome-earth-engine-apps"
"PatrickTUM/multimodalCD_ISPRS21" -> "SebastianHafner/DS_UNet"
"PatrickTUM/multimodalCD_ISPRS21" -> "Lihy256/MSCDUnet"
"wschwanghart/topotoolbox" -> "amforte/Topographic-Analysis-Kit"
"wschwanghart/topotoolbox" -> "LSDtopotools/LSDTopoTools2"
"wschwanghart/topotoolbox" -> "csdms-contrib/topotoolbox"
"wschwanghart/topotoolbox" -> "landlab/landlab"
"philippgaertner/awesome-earth-engine-apps" -> "samapriya/ee-appshot"
"philippgaertner/awesome-earth-engine-apps" -> "samapriya/geeup"
"philippgaertner/awesome-earth-engine-apps" -> "aazuspan/snazzy"
"philippgaertner/awesome-earth-engine-apps" -> "davemlz/eemont"
"philippgaertner/awesome-earth-engine-apps" -> "ndminhhus/geeguide"
"philippgaertner/awesome-earth-engine-apps" -> "shijuanchen/forest_degradation_georgia"
"stac-utils/pystac-client" -> "opendatacube/odc-stac"
"stac-utils/pystac-client" -> "stac-utils/pystac"
"stac-utils/pystac-client" -> "gjoseph92/stackstac"
"stac-utils/pystac-client" -> "stac-utils/stactools"
"stac-utils/pystac-client" -> "intake/intake-stac"
"stac-utils/pystac-client" -> "radiantearth/stac-api-spec"
"stac-utils/pystac-client" -> "stac-utils/stac-fastapi"
"stac-utils/pystac-client" -> "microsoft/PlanetaryComputer"
"stac-utils/pystac-client" -> "sat-utils/sat-search"
"stac-utils/pystac-client" -> "xarray-contrib/xvec" ["e"=1]
"stac-utils/pystac-client" -> "stac-utils/stac-pydantic"
"stac-utils/pystac-client" -> "stac-utils/qgis-stac-plugin"
"microsoft/planetary-computer-apis" -> "microsoft/planetary-computer-hub"
"microsoft/planetary-computer-apis" -> "microsoft/PlanetaryComputerDataCatalog"
"microsoft/planetary-computer-apis" -> "microsoft/planetary-computer-sdk-for-python"
"microsoft/planetary-computer-apis" -> "developmentseed/rio-stac"
"microsoft/planetary-computer-apis" -> "radiantearth/stac-api-spec"
"microsoft/planetary-computer-apis" -> "microsoft/PlanetaryComputerExamples"
"neeraj3029/awesome-sar-deep-learning" -> "grip-unina/SAR-CNN"
"neeraj3029/awesome-sar-deep-learning" -> "JK-the-Ko/SAR-CAM"
"neeraj3029/awesome-sar-deep-learning" -> "ImageRestorationToolbox/SAR-Despeckling"
"IPL-UV/DL-L8S2-UV" -> "IPL-UV/pvl8dagans"
"opengeospatial/geoparquet" -> "geoarrow/geoarrow"
"opengeospatial/geoparquet" -> "duckdb/duckdb-spatial"
"opengeospatial/geoparquet" -> "developmentseed/lonboard"
"opengeospatial/geoparquet" -> "geoarrow/geoarrow-rs"
"opengeospatial/geoparquet" -> "geopolars/geopolars"
"opengeospatial/geoparquet" -> "geopandas/dask-geopandas"
"opengeospatial/geoparquet" -> "planetlabs/gpq"
"opengeospatial/geoparquet" -> "flatgeobuf/flatgeobuf" ["e"=1]
"opengeospatial/geoparquet" -> "developmentseed/titiler"
"opengeospatial/geoparquet" -> "geopandas/pyogrio"
"opengeospatial/geoparquet" -> "makepath/xarray-spatial"
"opengeospatial/geoparquet" -> "radiantearth/stac-browser"
"opengeospatial/geoparquet" -> "radiantearth/stac-spec"
"opengeospatial/geoparquet" -> "felt/tippecanoe" ["e"=1]
"opengeospatial/geoparquet" -> "stac-utils/pystac"
"ydoherty/CoastSat.PlanetScope" -> "mcuttler/CoastSat.islands"
"ydoherty/CoastSat.PlanetScope" -> "kvos/CoastSat.slope"
"anitagraser/movement-analysis-tools" -> "mie-lab/trackintel"
"anitagraser/movement-analysis-tools" -> "movetk/movetk"
"kleok/FLOODPY" -> "PratyushTripathy/global_flood_mapper"
"microsoft/PlanetaryComputer" -> "microsoft/PlanetaryComputerExamples"
"microsoft/PlanetaryComputer" -> "stac-utils/pystac-client"
"microsoft/PlanetaryComputer" -> "microsoft/planetary-computer-apis"
"microsoft/PlanetaryComputer" -> "opendatacube/odc-stac"
"microsoft/PlanetaryComputer" -> "microsoft/planetary-computer-sdk-for-python"
"microsoft/PlanetaryComputer" -> "gjoseph92/stackstac"
"microsoft/PlanetaryComputer" -> "xarray-contrib/xvec" ["e"=1]
"microsoft/PlanetaryComputer" -> "microsoft/planetary-computer-containers"
"microsoft/PlanetaryComputer" -> "stac-utils/stac-geoparquet"
"microsoft/PlanetaryComputer" -> "microsoft/planetary-computer-hub"
"microsoft/PlanetaryComputer" -> "pangeo-data/rechunker" ["e"=1]
"opendatacube/eo-datasets" -> "opendatacube/odc-stats"
"stac-utils/titiler-pgstac" -> "stac-utils/pgstac"
"stac-utils/titiler-pgstac" -> "developmentseed/rio-stac"
"stac-utils/titiler-pgstac" -> "stac-utils/stac-geoparquet"
"gama-platform/gama.old" -> "CityScope/CS_Simulation_GAMA"
"gama-platform/gama.old" -> "eclab/mason"
"gama-platform/gama.old" -> "gama-platform/gama.experimental"
"gama-platform/gama.old" -> "COMOKIT/COMOKIT-Model"
"gama-platform/gama.old" -> "r-and-gama/gamar"
"gama-platform/gama.old" -> "openmole/openmole"
"gama-platform/gama.old" -> "projectmesa/mesa-geo"
"gama-platform/gama.old" -> "mitmedialab/Basic"
"gama-platform/gama.old" -> "ANRGenstar/genstar"
"gama-platform/gama.old" -> "gama-platform/gama"
"geopython/OWSLib" -> "geopython/pygeoapi"
"geopython/OWSLib" -> "geopython/pycsw"
"geopython/OWSLib" -> "geopython/pywps"
"geopython/OWSLib" -> "geopandas/pyogrio"
"geopython/OWSLib" -> "stac-utils/pystac"
"geopython/OWSLib" -> "geopython/pygeometa"
"geopython/OWSLib" -> "sat-utils/sat-search"
"geopython/OWSLib" -> "developmentseed/morecantile"
"geopython/OWSLib" -> "geopython/GeoHealthCheck" ["e"=1]
"geopython/OWSLib" -> "cogeotiff/rio-cogeo"
"geopython/OWSLib" -> "radiantearth/stac-api-spec"
"geopython/pygeometa" -> "wmo-cop/pyoscar"
"movingpandas/movingpandas-examples" -> "movingpandas/movingpandas"
"PratyushTripathy/global_flood_mapper" -> "csaybar/ee-fastapi"
"CLARIN-PL/embeddings" -> "CLARIN-PL/LEPISZCZE"
"tm9161/SAT" -> "keliangli/yaogan"
"highperformancecoder/minsky" -> "highperformancecoder/minsky-models"
"highperformancecoder/minsky" -> "SDXorg/pysd"
"highperformancecoder/minsky" -> "SDXorg/PySD-Cookbook"
"developmentseed/eoAPI" -> "stac-utils/pgstac"
"developmentseed/eoAPI" -> "stac-utils/stac-fastapi"
"developmentseed/eoAPI" -> "stac-utils/stac-geoparquet"
"developmentseed/eoAPI" -> "gjoseph92/stackstac"
"developmentseed/eoAPI" -> "developmentseed/tipg"
"developmentseed/eoAPI" -> "stac-utils/pystac"
"developmentseed/eoAPI" -> "stac-utils/stac-pydantic"
"developmentseed/eoAPI" -> "developmentseed/titiler"
"developmentseed/eoAPI" -> "radiantearth/stac-browser"
"developmentseed/eoAPI" -> "cloudnativegeo/cloud-optimized-geospatial-formats-guide"
"developmentseed/eoAPI" -> "opendatacube/odc-stac"
"developmentseed/eoAPI" -> "radiantearth/stac-api-spec"
"developmentseed/eoAPI" -> "stac-utils/pystac-client"
"developmentseed/eoAPI" -> "developmentseed/eoapi-k8s"
"developmentseed/eoAPI" -> "stac-utils/titiler-pgstac"
"lironui/ABCNet" -> "XD-MG/DDHRNet"
"lironui/ABCNet" -> "lironui/MAResU-Net"
"AaltoGIS/Sustainability-GIS" -> "andrea-ballatore/teaching-programming-for-gis"
"grip-unina/SAR-CNN" -> "JK-the-Ko/SAR-CAM"
"grip-unina/SAR-CNN" -> "GeomaticsAndRS/sar"
"yaoxu008/QXS-SAROPT" -> "AmberHen/WHU-OPT-SAR-dataset"
"yaoxu008/QXS-SAROPT" -> "MarsZhaoYT/SAR2Opt-Heterogeneous-Dataset"
"yaoxu008/QXS-SAROPT" -> "Yusin2Chen/SARoptical_fusion"
"yaoxu008/QXS-SAROPT" -> "whu-csl/WHU-SEN-City"
"yaoxu008/QXS-SAROPT" -> "Coordi777/Conditional-Diffusion-for-SAR-to-Optical-Image-Translation"
"yaoxu008/QXS-SAROPT" -> "LiaoYun0x0/Feature-Matching-and-Position-Matching-between-Optical-and-SAR" ["e"=1]
"yaoxu008/QXS-SAROPT" -> "LJY-RS/SRIF" ["e"=1]
"yaoxu008/QXS-SAROPT" -> "ei1994/GMN-Generative-Matching-Network" ["e"=1]
"gjoseph92/stackstac" -> "opendatacube/odc-stac"
"gjoseph92/stackstac" -> "stac-utils/pystac-client"
"gjoseph92/stackstac" -> "gjoseph92/geogif"
"gjoseph92/stackstac" -> "stac-utils/pystac"
"gjoseph92/stackstac" -> "intake/intake-stac"
"gjoseph92/stackstac" -> "google/Xee"
"gjoseph92/stackstac" -> "corteva/geocube"
"gjoseph92/stackstac" -> "developmentseed/rio-stac"
"gjoseph92/stackstac" -> "stac-utils/stac-geoparquet"
"gjoseph92/stackstac" -> "developmentseed/eoAPI"
"gjoseph92/stackstac" -> "opendatacube/odc-geo"
"gjoseph92/stackstac" -> "stac-utils/xstac" ["e"=1]
"gjoseph92/stackstac" -> "xarray-contrib/xvec" ["e"=1]
"gjoseph92/stackstac" -> "ESDS-Leipzig/cubo"
"gjoseph92/stackstac" -> "makepath/xarray-spatial"
"lironui/MAResU-Net" -> "lironui/Multi-Attention-Network"
"lironui/MAResU-Net" -> "lironui/ABCNet"
"lironui/MAResU-Net" -> "lironui/Linear-Attention-Mechanism"
"raster-foundry/raster-foundry" -> "azavea/franklin" ["e"=1]
"raster-foundry/raster-foundry" -> "azavea/raster-vision-examples"
"raster-foundry/raster-foundry" -> "geotrellis/geotrellis-server" ["e"=1]
"ualsg/Road-Network-Classification" -> "ualsg/Global-road-network-patterns"
"ualsg/Road-Network-Classification" -> "ualsg/GANmapper"
"ualsg/Road-Network-Classification" -> "ualsg/Roofpedia"
"microsoft/AIforEarthDataSets" -> "microsoft/landcover"
"microsoft/AIforEarthDataSets" -> "microsoft/PlanetaryComputerExamples"
"microsoft/AIforEarthDataSets" -> "microsoft/PlanetaryComputer"
"microsoft/AIforEarthDataSets" -> "stac-utils/pystac"
"andrea-ballatore/open-geo-data-education" -> "andrea-ballatore/teaching-programming-for-gis"
"WangZhenqing-RS/2021Tianchi_RS" -> "JasmineRain/NAIC_AI-RS"
"WangZhenqing-RS/2021Tianchi_RS" -> "AI-Chen/Deeplab-v3-Plus-pytorch-"
"pangeo-data/cog-best-practices" -> "stac-utils/xstac" ["e"=1]
"pangeo-data/cog-best-practices" -> "developmentseed/tilebench"
"pangeo-data/cog-best-practices" -> "geospatial-jeff/aiocogeo"
"zhilyzhang/MECNet" -> "Jack-bo1220/MSResNet-via-SSL"
"scikit-mobility/DeepGravity" -> "scikit-mobility/DeepLearning4HumanMobility"
"scikit-mobility/DeepGravity" -> "GeoDS/COVID19USFlows" ["e"=1]
"scikit-mobility/DeepGravity" -> "lalessan/scales_human_mobility"
"scikit-mobility/DeepGravity" -> "leiii/VisitationLaw"
"Zhen3r/BaiduPanoramaSpider" -> "whuyao/BaiduStreetViewSpider"
"mohit-kaushik/SAR_to_Optical" -> "Accioy/SAR2optical"
"mohit-kaushik/SAR_to_Optical" -> "JessieZ96/SAR-to-Optical"
"open-geocomputing/OpenEarthEngineLibrary" -> "davemlz/eemont"
"pka/awesome-georust" -> "georust/gdal"
"pka/awesome-georust" -> "frewsxcv/rgis"
"pka/awesome-georust" -> "georust/geozero"
"pka/awesome-georust" -> "geoarrow/geoarrow-rs"
"pka/awesome-georust" -> "georust/geojson"
"pka/awesome-georust" -> "flatgeobuf/flatgeobuf" ["e"=1]
"pka/awesome-georust" -> "georust/geo"
"pka/awesome-georust" -> "geopolars/geopolars"
"pka/awesome-georust" -> "maplibre/maplibre-rs" ["e"=1]
"pka/awesome-georust" -> "georust/proj"
"pka/awesome-georust" -> "geoarrow/geoarrow"
"pka/awesome-georust" -> "dima634/baby_shark"
"pka/awesome-georust" -> "opengeospatial/geoparquet"
"pka/awesome-georust" -> "georust/geotiff"
"pka/awesome-georust" -> "Maximkaaa/galileo"
"nrgapple/historic-country-borders-app" -> "aourednik/historical-basemaps"
"ytkz11/sar-image" -> "plufengs/Gaofen-3"
"ytkz11/sar-image" -> "WangZhenqing-RS/GF_preprocess"
"waldnerf/decode" -> "Akhilesh64/ResUnet-a"
"waldnerf/decode" -> "long123524/BsiNet-torch"
"waldnerf/decode" -> "feevos/resuneta"
"mapbox/rio-color" -> "mapbox/rio-hist"
"mapbox/rio-color" -> "mapbox/rio-mucho"
"mapbox/rio-color" -> "mapbox/rio-cloudmask"
"mapbox/rio-color" -> "RemotePixel/aws-sat-api-py"
"giswqs/geebook" -> "giswqs/GEE-Courses"
"mmann1123/pyGIS" -> "jgrss/geowombat"
"airbusgeo/cogger" -> "rouault/cogserver"
"airbusgeo/cogger" -> "sozip/sozip-spec"
"airbusgeo/cogger" -> "developmentseed/rio-stac"
"spaceml-org/ml4floods" -> "cloudtostreet/Sen1Floods11"
"ungarj/mapchete" -> "gipit/gippy"
"ungarj/mapchete" -> "olivierhagolle/Start_maja"
"USGS-EROS/espa-bulk-downloader" -> "USGS-EROS/espa-api"
"USGS-EROS/espa-bulk-downloader" -> "USGS-EROS/espa-cloud-masking"
"USGS-EROS/espa-bulk-downloader" -> "USGS-EROS/espa-surface-reflectance"
"USGS-EROS/espa-bulk-downloader" -> "prs021/fmask"
"USGS-EROS/espa-bulk-downloader" -> "olivierhagolle/LANDSAT-Download"
"cloudtostreet/MODIS_GlobalFloodDatabase" -> "cloudtostreet/Sen1Floods11"
"SDXorg/PySD-Cookbook" -> "SDXorg/pysd"
"isislab-unisa/dmason" -> "isislab-unisa/sof"
"JessieZ96/SAR-to-Optical" -> "mohit-kaushik/SAR_to_Optical"
"eradiate/eradiate" -> "rayference/joseki"
"eradiate/eradiate" -> "comet-toolkit/punpy"
"eradiate/eradiate" -> "tadz-io/hydropt"
"NASA-Openscapes/earthdata-cloud-cookbook" -> "NASA-Openscapes/2021-Cloud-Hackathon"
"georust/netcdf" -> "gauteh/hidefix"
"georust/netcdf" -> "georust/geotiff"
"USGS-EROS/espa-cloud-masking" -> "USGS-EROS/espa-surface-reflectance"
"USGS-EROS/espa-cloud-masking" -> "USGS-EROS/espa-surface-temperature"
"USGS-EROS/espa-cloud-masking" -> "USGS-EROS/espa-product-formatter"
"USGS-EROS/espa-cloud-masking" -> "prs021/fmask"
"sidgan/ETCI-2021-Competition-on-Flood-Detection" -> "edornd/mmflood"
"sidgan/ETCI-2021-Competition-on-Flood-Detection" -> "drivendataorg/stac-overflow"
"sidgan/ETCI-2021-Competition-on-Flood-Detection" -> "cloudtostreet/Sen1Floods11"
"Jack-bo1220/MSResNet-via-SSL" -> "zhilyzhang/MECNet"
"domoritz/arrow-wasm" -> "kylebarron/arrow-wasm"
"DingLei14/WiCoNet" -> "ggsDing/LANet"
"DingLei14/WiCoNet" -> "jankyee/URUR" ["e"=1]
"USGS-EROS/espa-surface-reflectance" -> "USGS-EROS/espa-cloud-masking"
"USGS-EROS/espa-surface-reflectance" -> "USGS-EROS/espa-surface-temperature"
"USGS-EROS/espa-surface-reflectance" -> "USGS-EROS/espa-product-formatter"
"USGS-EROS/espa-surface-reflectance" -> "USGS-EROS/espa-api"
"rifqiharrys/sdb_gui" -> "yustisiardhitasari/sdbcnn"
"rifqiharrys/sdb_gui" -> "ArcticCartographer/ICESat-2-Satellite-Derived-Bathymetry-using-Landsat-8-data"
"rifqiharrys/sdb_gui" -> "ICESat2-Bathymetry/Information"
"stac-utils/pgstac" -> "stac-utils/titiler-pgstac"
"stac-utils/pgstac" -> "stac-utils/stac-fastapi-pgstac"
"stac-utils/pgstac" -> "stac-utils/stac-fastapi"
"stac-utils/pgstac" -> "developmentseed/eoAPI"
"stac-utils/pgstac" -> "stac-utils/stac-geoparquet"
"stac-utils/pgstac" -> "radiantearth/stac-api-spec"
"stac-utils/pgstac" -> "stac-utils/stactools"
"stac-utils/pgstac" -> "developmentseed/rio-stac"
"stac-utils/pgstac" -> "developmentseed/tipg"
"stac-utils/pgstac" -> "stac-utils/stac-pydantic"
"stac-utils/pgstac" -> "planetlabs/gpq"
"stac-utils/pgstac" -> "radiantearth/stac-browser"
"stac-utils/pgstac" -> "stac-utils/stac-validator"
"stac-utils/pgstac" -> "developmentseed/morecantile"
"Tristanovsk/grs" -> "hygeos/polymer"
"prs021/fmask" -> "USGS-EROS/espa-cloud-masking"
"gee-community/ee-runner" -> "gee-community/ee-jupyter-contrib"
"gee-community/ee-runner" -> "gee-community/awesome-google-earth-engine"
"yustisiardhitasari/sdbcnn" -> "ArcticCartographer/ICESat-2-Satellite-Derived-Bathymetry-using-Landsat-8-data"
"busstoptaktik/geodesy" -> "3liz/proj4rs"
"UDST/orca" -> "UDST/spandex"
"USGS-EROS/espa-processing" -> "USGS-EROS/espa-surface-temperature"
"LSDtopotools/LSDMappingTools" -> "LSDtopotools/LSDTopoTools2"
"stac-extensions/label" -> "stac-extensions/ml-aoi"
"gjoseph92/geogif" -> "stac-utils/xstac" ["e"=1]
"gjoseph92/geogif" -> "gjoseph92/stackstac"
"radiantearth/geo-ml-model-catalog" -> "stac-extensions/ml-aoi"
"tadz-io/hydropt" -> "mowerther/BNN_2022"
"tadz-io/hydropt" -> "CNES/RadiativeTransferCode-OSOAA"
"stac-extensions/ml-aoi" -> "stac-extensions/label"
"Phoenix-Shen/DSEN2_CR_PYTORCH" -> "PeeBar/Awesome-Cloud-Detection-and-Removal"
"nmandery/h3ron" -> "nmandery/h3ronpy"
"ualsg/GANmapper" -> "ualsg/Road-Network-Classification"
"USGS-EROS/espa-surface-temperature" -> "USGS-EROS/espa-processing"
"sohiniroych/U-net-for-Multi-class-semantic-segmentation" -> "HZCTony/U-net-with-multiple-classification"
"adugnag/CV-deSpeckNet" -> "adugnag/SAR-FCN-DK3"
"sk-zk/streetlevel" -> "sk-zk/lookaround-map"
"sk-zk/streetlevel" -> "sk-zk/lookaround"
"riatelab/bertin" -> "riatelab/magrit"
"riatelab/bertin" -> "eurostat/gridviz"
"riatelab/bertin" -> "magisAR9/webinaires"
"riatelab/bertin" -> "riatelab/statsbreaks"
"riatelab/bertin" -> "riatelab/geoviz"
"riatelab/bertin" -> "riatelab/geoverview"
"riatelab/bertin" -> "riatelab/geotoolbox"
"opengeos/streamlit-geospatial" -> "randyzwitch/streamlit-folium" ["e"=1]
"opengeos/streamlit-geospatial" -> "opengeos/leafmap"
"opengeos/streamlit-geospatial" -> "samapriya/awesome-gee-community-datasets"
"opengeos/streamlit-geospatial" -> "opengeos/Awesome-GEE"
"opengeos/streamlit-geospatial" -> "gee-community/geemap"
"opengeos/streamlit-geospatial" -> "banesullivan/localtileserver"
"opengeos/streamlit-geospatial" -> "opengeos/geospatial"
"opengeos/streamlit-geospatial" -> "opengeos/segment-geospatial"
"opengeos/streamlit-geospatial" -> "developmentseed/lonboard"
"opengeos/streamlit-geospatial" -> "awesome-spectral-indices/awesome-spectral-indices"
"opengeos/streamlit-geospatial" -> "opengeos/aws-open-data-geo"
"opengeos/streamlit-geospatial" -> "opengeos/python-geospatial"
"opengeos/streamlit-geospatial" -> "giswqs/qgis-earthengine-examples"
"opengeos/streamlit-geospatial" -> "opengeospatial/geoparquet"
"opengeos/streamlit-geospatial" -> "corteva/rioxarray"
"TUM-I5/SWE" -> "TUM-I5/SWE-Solvers"
"TUM-I5/SWE" -> "lukeshope/hipims-ocl"
"TUM-I5/SWE" -> "mrocklin/ShallowWater"
"TUM-I5/SWE" -> "wme7/ShallowWaterEquations"
"malshaV/SAR_DDPM" -> "JK-the-Ko/SAR-CAM"
"malshaV/SAR_DDPM" -> "Coordi777/Conditional-Diffusion-for-SAR-to-Optical-Image-Translation"
"malshaV/SAR_DDPM" -> "grip-unina/SAR-CNN"
"chrieke/prettymapp" -> "marceloprates/prettymaps"
"chrieke/prettymapp" -> "randyzwitch/streamlit-folium" ["e"=1]
"chrieke/prettymapp" -> "chrieke/awesome-geospatial-companies"
"chrieke/prettymapp" -> "galadriel-ai/opencopilot"
"chrieke/prettymapp" -> "placemark/placemark" ["e"=1]
"chrieke/prettymapp" -> "opengeos/leafmap"
"chrieke/prettymapp" -> "headwaymaps/headway" ["e"=1]
"chrieke/prettymapp" -> "opengeos/streamlit-geospatial"
"chrieke/prettymapp" -> "jrieke/best-of-streamlit" ["e"=1]
"chrieke/prettymapp" -> "hyperknot/openfreemap" ["e"=1]
"chrieke/prettymapp" -> "microsoft/GlobalMLBuildingFootprints"
"chrieke/prettymapp" -> "gboeing/osmnx"
"chrieke/prettymapp" -> "mkhorasani/Streamlit-Authenticator" ["e"=1]
"chrieke/prettymapp" -> "maplibre/awesome-maplibre" ["e"=1]
"chrieke/prettymapp" -> "azavea/raster-vision"
"toddwschneider/nyc-taxi-data" -> "fivethirtyeight/uber-tlc-foil-response"
"toddwschneider/nyc-taxi-data" -> "toddwschneider/nyc-citibike-data"
"toddwschneider/nyc-taxi-data" -> "twitter/AnomalyDetection" ["e"=1]
"toddwschneider/nyc-taxi-data" -> "szilard/benchm-ml" ["e"=1]
"toddwschneider/nyc-taxi-data" -> "toddwschneider/chicago-taxi-data"
"toddwschneider/nyc-taxi-data" -> "jrnold/ggthemes" ["e"=1]
"toddwschneider/nyc-taxi-data" -> "chriswhong/nyctaxi"
"toddwschneider/nyc-taxi-data" -> "google/CausalImpact" ["e"=1]
"toddwschneider/nyc-taxi-data" -> "juliasilge/tidytext" ["e"=1]
"toddwschneider/nyc-taxi-data" -> "tidymodels/broom" ["e"=1]
"toddwschneider/nyc-taxi-data" -> "Quartz/bad-data-guide" ["e"=1]
"toddwschneider/nyc-taxi-data" -> "toddwschneider/ballr" ["e"=1]
"toddwschneider/nyc-taxi-data" -> "holoviz/datashader" ["e"=1]
"toddwschneider/nyc-taxi-data" -> "rich-iannone/DiagrammeR" ["e"=1]
"toddwschneider/nyc-taxi-data" -> "plotly/plotly.R" ["e"=1]
"AB-CE/abce" -> "AB-CE/abcFinance"
"AB-CE/abce" -> "AB-CE/examples"
"AB-CE/abce" -> "ETACE/eurace_unibi"
"AB-CE/abce" -> "jofmi/agentpy"
"AB-CE/abce" -> "LLNL/Abmarl"
"AB-CE/abce" -> "uwol/computational-economy"
"AB-CE/abce" -> "ShrutiAppiah/Simulating-an-Economy-ABM"
"banesullivan/localtileserver" -> "stac-utils/titiler-pgstac"
"banesullivan/localtileserver" -> "corteva/rioxarray"
"banesullivan/localtileserver" -> "DHI/terracotta"
"banesullivan/localtileserver" -> "developmentseed/titiler"
"banesullivan/localtileserver" -> "developmentseed/lonboard"
"banesullivan/localtileserver" -> "geopandas/xyzservices"
"banesullivan/localtileserver" -> "stac-utils/pystac"
"banesullivan/localtileserver" -> "pangeo-data/cog-best-practices"
"banesullivan/localtileserver" -> "gjoseph92/stackstac"
"banesullivan/localtileserver" -> "aazuspan/wxee"
"banesullivan/localtileserver" -> "cogeotiff/rio-faux"
"banesullivan/localtileserver" -> "developmentseed/geojson-pydantic"
"banesullivan/localtileserver" -> "opendatacube/odc-stac"
"banesullivan/localtileserver" -> "holoviz/spatialpandas"
"banesullivan/localtileserver" -> "geojupyter/jupytergis"
"microsoft/GlobalMLBuildingFootprints" -> "microsoft/RoadDetections"
"microsoft/GlobalMLBuildingFootprints" -> "microsoft/USBuildingFootprints"
"microsoft/GlobalMLBuildingFootprints" -> "opengeos/segment-geospatial"
"microsoft/GlobalMLBuildingFootprints" -> "microsoft/torchgeo"
"microsoft/GlobalMLBuildingFootprints" -> "awesome-spectral-indices/awesome-spectral-indices"
"microsoft/GlobalMLBuildingFootprints" -> "azavea/raster-vision"
"microsoft/GlobalMLBuildingFootprints" -> "gee-community/geemap"
"microsoft/GlobalMLBuildingFootprints" -> "acgeospatial/awesome-earthobservation-code"
"microsoft/GlobalMLBuildingFootprints" -> "opengeos/leafmap"
"microsoft/GlobalMLBuildingFootprints" -> "opengeos/Awesome-GEE"
"microsoft/GlobalMLBuildingFootprints" -> "samapriya/awesome-gee-community-datasets"
"microsoft/GlobalMLBuildingFootprints" -> "Jack-bo1220/Awesome-Remote-Sensing-Foundation-Models" ["e"=1]
"microsoft/GlobalMLBuildingFootprints" -> "sacridini/Awesome-Geospatial"
"microsoft/GlobalMLBuildingFootprints" -> "movingpandas/movingpandas"
"microsoft/GlobalMLBuildingFootprints" -> "opengeospatial/geoparquet"
"greppo-io/greppo" -> "mszell/geospatialdatascience"
"greppo-io/greppo" -> "opengeos/geospatial-data-catalogs"
"greppo-io/greppo" -> "DahnJ/H3-Pandas" ["e"=1]
"greppo-io/greppo" -> "raphaelquast/EOmaps"
"greppo-io/greppo" -> "opengeospatial/geoparquet"
"mszell/geospatialdatascience" -> "geocompx/geocompy"
"mszell/geospatialdatascience" -> "opengeos/geospatial-data-catalogs"
"mszell/geospatialdatascience" -> "opengeos/python-geospatial"
"mszell/geospatialdatascience" -> "greppo-io/greppo"
"mszell/geospatialdatascience" -> "geographyclub/qgis-expressions"
"mszell/geospatialdatascience" -> "benchmark-urbanism/cityseer-api"
"mszell/geospatialdatascience" -> "winstonyym/urbanity"
"mszell/geospatialdatascience" -> "developmentseed/lonboard"
"mszell/geospatialdatascience" -> "movingpandas/movingpandas"
"mszell/geospatialdatascience" -> "awesome-spectral-indices/awesome-spectral-indices"
"mszell/geospatialdatascience" -> "r5py/r5py" ["e"=1]
"mszell/geospatialdatascience" -> "Automating-GIS-processes/site"
"mszell/geospatialdatascience" -> "scikit-mobility/scikit-mobility"
"mszell/geospatialdatascience" -> "anerv/GDS_exercises"
"mszell/geospatialdatascience" -> "GDSL-UL/Teaching_Links"
"VIDA-NYU/tile2net" -> "VIDA-NYU/city-surfaces"
"VIDA-NYU/tile2net" -> "City-Form-Lab/madina"
"raphaelquast/EOmaps" -> "corteva/geocube"
"raphaelquast/EOmaps" -> "ESDS-Leipzig/cubo"
"raphaelquast/EOmaps" -> "pyvista/pyvista-xarray" ["e"=1]
"raphaelquast/EOmaps" -> "fatiando/verde" ["e"=1]
"raphaelquast/EOmaps" -> "makepath/xarray-spatial"
"raphaelquast/EOmaps" -> "bopen/xarray-sentinel" ["e"=1]
"raphaelquast/EOmaps" -> "sertit/eoreader" ["e"=1]
"raphaelquast/EOmaps" -> "regionmask/regionmask" ["e"=1]
"raphaelquast/EOmaps" -> "corteva/rioxarray"
"raphaelquast/EOmaps" -> "geopandas/xyzservices"
"raphaelquast/EOmaps" -> "nsidc/earthaccess"
"raphaelquast/EOmaps" -> "opengeos/geospatial"
"raphaelquast/EOmaps" -> "stac-utils/xstac" ["e"=1]
"rsangers/explainable_perception" -> "aleksandrskoselevs/place-pulse-dataset"
"rsangers/explainable_perception" -> "emilymuller1991/urban-perceptions"
"mapbox/mapbox-cli-py" -> "mapbox/mapbox-upload"
"mapbox/mapbox-cli-py" -> "mapbox/mapbox-sdk-py"
"MarsZhaoYT/SAR2Opt-Heterogeneous-Dataset" -> "Coordi777/Conditional-Diffusion-for-SAR-to-Optical-Image-Translation"
"MarsZhaoYT/SAR2Opt-Heterogeneous-Dataset" -> "MuhammedM294/SAR2Optical"
"MarsZhaoYT/SAR2Opt-Heterogeneous-Dataset" -> "whu-csl/WHU-SEN-City"
"MarsZhaoYT/SAR2Opt-Heterogeneous-Dataset" -> "yaoxu008/QXS-SAROPT"
"MarsZhaoYT/SAR2Opt-Heterogeneous-Dataset" -> "zzh811/opt2sar-cyclegan"
"isikdogan/rivamap" -> "isikdogan/deepriver"
"GeoDaCenter/geoda" -> "pysal/pysal"
"GeoDaCenter/geoda" -> "pysal/mgwr"
"GeoDaCenter/geoda" -> "GeoDaCenter/pygeoda"
"GeoDaCenter/geoda" -> "OSGeo/grass" ["e"=1]
"GeoDaCenter/geoda" -> "r-spatial/stars" ["e"=1]
"GeoDaCenter/geoda" -> "GeoDaCenter/GeoDaSpace"
"GeoDaCenter/geoda" -> "spatstat/spatstat" ["e"=1]
"GeoDaCenter/geoda" -> "GeoDaCenter/rgeoda"
"GeoDaCenter/geoda" -> "r-spatial/RQGIS" ["e"=1]
"GeoDaCenter/geoda" -> "r-spatial/sf" ["e"=1]
"GeoDaCenter/geoda" -> "r-tmap/tmap" ["e"=1]
"GeoDaCenter/geoda" -> "r-spatial/rgee"
"GeoDaCenter/geoda" -> "jblindsay/whitebox-tools"
"GeoDaCenter/geoda" -> "geopandas/scipy2018-geospatial-data" ["e"=1]
"GeoDaCenter/geoda" -> "Toblerity/Fiona"
"gboeing/ppde642" -> "waddell/urban-informatics-and-visualization"
"gboeing/ppde642" -> "gboeing/osmnx"
"gboeing/ppde642" -> "UDST/pandana"
"gboeing/ppde642" -> "gboeing/osmnx-examples"
"gboeing/ppde642" -> "UDST/urbanaccess"
"gboeing/ppde642" -> "movingpandas/movingpandas"
"gboeing/ppde642" -> "gboeing/data-visualization" ["e"=1]
"gboeing/ppde642" -> "pysal/momepy"
"gboeing/ppde642" -> "pysal/pysal"
"gboeing/ppde642" -> "UDST/urbansim"
"gboeing/ppde642" -> "scikit-mobility/scikit-mobility"
"gboeing/ppde642" -> "gboeing/ppd534" ["e"=1]
"gboeing/ppde642" -> "ResidentMario/geoplot"
"gboeing/ppde642" -> "mapbox/mapboxgl-jupyter"
"gboeing/ppde642" -> "OpenGeoscience/geonotebook"
"opengeos/geospatial-ml" -> "giswqs/GEE-Courses"
"opengeos/geospatial-ml" -> "opengeos/geospatial"
"projectmesa/mesa-examples" -> "SFIComplexityExplorer/Mesa-ABM-Tutorial"
"projectmesa/mesa-examples" -> "projectmesa/mesa-geo"
"projectmesa/mesa-examples" -> "jofmi/agentpy"
"pbreach/venpy" -> "SDXorg/test-models"
"pbreach/venpy" -> "climateinteractive/SDEverywhere"
"yisun98/SOLC" -> "AmberHen/WHU-OPT-SAR-dataset"
"yisun98/SOLC" -> "Ray010221/MCANet"
"yisun98/SOLC" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"yisun98/SOLC" -> "Margin1996/Assisted_learning"
"yisun98/SOLC" -> "yaoxu008/QXS-SAROPT"
"yisun98/SOLC" -> "lixinghua5540/DTCDN"
"yisun98/SOLC" -> "sstary/SSRS" ["e"=1]
"yisun98/SOLC" -> "XD-MG/DDHRNet"
"yisun98/SOLC" -> "SpaceNetChallenge/SAR-RGB-DataFusion"
"microsoft/satellite-imagery-labeling-tool" -> "stac-utils/pystac-client"
"microsoft/satellite-imagery-labeling-tool" -> "microsoft/landcover"
"microsoft/satellite-imagery-labeling-tool" -> "microsoft/PlanetaryComputer"
"microsoft/satellite-imagery-labeling-tool" -> "radiantearth/stac-api-spec"
"microsoft/satellite-imagery-labeling-tool" -> "jgrss/geowombat"
"microsoft/satellite-imagery-labeling-tool" -> "gjoseph92/stackstac"
"geographyclub/gis-from-command-line" -> "geographyclub/postgis-cookbook"
"geographyclub/gis-from-command-line" -> "geographyclub/qgis-expressions"
"fivethirtyeight/uber-tlc-foil-response" -> "toddwschneider/nyc-taxi-data"
"fivethirtyeight/uber-tlc-foil-response" -> "toddwschneider/nyc-citibike-data"
"fivethirtyeight/uber-tlc-foil-response" -> "andresmh/nyctaxitrips"
"fivethirtyeight/uber-tlc-foil-response" -> "UDST/pandana"
"fivethirtyeight/uber-tlc-foil-response" -> "UDST/urbansim"
"fivethirtyeight/uber-tlc-foil-response" -> "gboeing/ppde642"
"fivethirtyeight/uber-tlc-foil-response" -> "voxmedia/data-projects" ["e"=1]
"fivethirtyeight/uber-tlc-foil-response" -> "fivethirtyeight/guns-data"
"fivethirtyeight/uber-tlc-foil-response" -> "ipython-books/cookbook-code" ["e"=1]
"fivethirtyeight/uber-tlc-foil-response" -> "pysal/momepy"
"fivethirtyeight/uber-tlc-foil-response" -> "gka/d3-jetpack" ["e"=1]
"malshaV/sar_transformer" -> "malshaV/sar_overcomplete"
"malshaV/sar_transformer" -> "JK-the-Ko/SAR-CAM"
"CS-SI/eodag-labextension" -> "CS-SI/eodag-cube"
"ThanasisMattas/cp-handbook" -> "ThanasisMattas/shortestpaths"
"geopolars/geopolars" -> "geoarrow/geoarrow-rs"
"geopolars/geopolars" -> "geoarrow/geoarrow"
"geopolars/geopolars" -> "developmentseed/lonboard"
"geopolars/geopolars" -> "opengeospatial/geoparquet"
"geopolars/geopolars" -> "duckdb/duckdb-spatial"
"geopolars/geopolars" -> "geopandas/dask-geopandas"
"geopolars/geopolars" -> "georust/geo"
"geopolars/geopolars" -> "makepath/xarray-spatial"
"geopolars/geopolars" -> "flatgeobuf/flatgeobuf" ["e"=1]
"geopolars/geopolars" -> "planetlabs/gpq"
"geopolars/geopolars" -> "georust/gdal"
"geopolars/geopolars" -> "pka/awesome-georust"
"geopolars/geopolars" -> "georust/geozero"
"geopolars/geopolars" -> "abstractqqq/polars_ds_extension" ["e"=1]
"geopolars/geopolars" -> "geopandas/pyogrio"
"SonwYang/SLP-cropland-parcel-extraction" -> "long123524/SEANet_torch"
"SonwYang/SLP-cropland-parcel-extraction" -> "long123524/BsiNet-torch"
"JK-the-Ko/SAR-CAM" -> "muzmax/SAR2SAR_pytorch"
"JK-the-Ko/SAR-CAM" -> "grip-unina/SAR-CNN"
"toddwschneider/nyc-citibike-data" -> "BetaNYC/Bike-Share-Data-Best-Practices" ["e"=1]
"toddwschneider/nyc-citibike-data" -> "toddwschneider/nyc-taxi-data"
"toddwschneider/nyc-citibike-data" -> "toddwschneider/nyc-subway-data"
"kylebarron/parquet-wasm" -> "geoarrow/geoarrow-rs"
"kylebarron/parquet-wasm" -> "geoarrow/geoarrow"
"kylebarron/parquet-wasm" -> "geoarrow/deck.gl-layers"
"kylebarron/parquet-wasm" -> "kylebarron/arrow-js-ffi"
"kylebarron/parquet-wasm" -> "stac-utils/stac-geoparquet"
"kylebarron/parquet-wasm" -> "planetlabs/gpq"
"kylebarron/parquet-wasm" -> "maplibre/maplibre-tile-spec" ["e"=1]
"kylebarron/parquet-wasm" -> "duckdb/duckdb-spatial"
"kylebarron/parquet-wasm" -> "duckdb/duckdb-wasm" ["e"=1]
"kylebarron/parquet-wasm" -> "opengeospatial/geoparquet"
"kylebarron/parquet-wasm" -> "developmentseed/lonboard"
"kylebarron/parquet-wasm" -> "chrispahm/geos-wasm" ["e"=1]
"kylebarron/parquet-wasm" -> "hyparam/hyparquet"
"kylebarron/parquet-wasm" -> "domoritz/arrow-wasm"
"kylebarron/parquet-wasm" -> "protomaps/tippecanoe"
"PatrickTUM/SEN12MS-CR-TS" -> "PatrickTUM/UnCRtainTS"
"PatrickTUM/SEN12MS-CR-TS" -> "xufangchn/GLF-CR"
"PatrickTUM/SEN12MS-CR-TS" -> "ameraner/dsen2-cr"
"PatrickTUM/SEN12MS-CR-TS" -> "zhu-xlab/M3R-CR"
"PatrickTUM/SEN12MS-CR-TS" -> "ermongroup/STGAN"
"PatrickTUM/SEN12MS-CR-TS" -> "VSAnimator/stgan"
"PatrickTUM/SEN12MS-CR-TS" -> "come880412/CTGAN"
"PatrickTUM/SEN12MS-CR-TS" -> "XavierJiezou/DiffCR"
"PatrickTUM/SEN12MS-CR-TS" -> "PeeBar/Awesome-Cloud-Detection-and-Removal"
"whuyao/BaiduStreetViewSpider" -> "Zhen3r/BaiduPanoramaSpider"
"whuyao/BaiduStreetViewSpider" -> "kingsley0107/streetview_images_crawler"
"wherobots/GeoTorchAI" -> "microsoft/torchgeo"
"wherobots/GeoTorchAI" -> "corentin-dfg/Satellite-Image-Time-Series-Datasets" ["e"=1]
"wherobots/GeoTorchAI" -> "awesome-spectral-indices/awesome-spectral-indices"
"wherobots/GeoTorchAI" -> "Clay-foundation/model" ["e"=1]
"wherobots/GeoTorchAI" -> "samapriya/awesome-gee-community-datasets"
"wherobots/GeoTorchAI" -> "CosmiQ/solaris" ["e"=1]
"wherobots/GeoTorchAI" -> "ESDS-Leipzig/cubo"
"wherobots/GeoTorchAI" -> "yotarazona/scikit-eo"
"wherobots/GeoTorchAI" -> "opengeos/geospatial-data-catalogs"
"wherobots/GeoTorchAI" -> "aliaksandr960/segment-anything-eo"
"wherobots/GeoTorchAI" -> "gjoseph92/stackstac"
"wherobots/GeoTorchAI" -> "bopen/sarsen" ["e"=1]
"wherobots/GeoTorchAI" -> "Seyed-Ali-Ahmadi/Awesome_Satellite_Benchmark_Datasets" ["e"=1]
"wherobots/GeoTorchAI" -> "ESA-PhiLab/iris" ["e"=1]
"wherobots/GeoTorchAI" -> "developmentseed/lonboard"
"XinnHe/ST-UNet" -> "lironui/Multi-Attention-Network"
"XinnHe/ST-UNet" -> "lironui/ABCNet"
"XinnHe/ST-UNet" -> "Wzysaber/ST_Unet_pytorch_Semantic-segmentation"
"NetLogo/Galapagos" -> "NetLogo/Tortoise"
"opendatacube/odc-stac" -> "stac-utils/pystac-client"
"opendatacube/odc-stac" -> "opendatacube/odc-geo"
"opendatacube/odc-stac" -> "gjoseph92/stackstac"
"opendatacube/odc-stac" -> "stac-utils/stac-fastapi"
"opendatacube/odc-stac" -> "stac-utils/pystac"
"opendatacube/odc-stac" -> "corteva/rioxarray"
"opendatacube/odc-stac" -> "developmentseed/rio-stac"
"opendatacube/odc-stac" -> "google/Xee"
"opendatacube/odc-stac" -> "xarray-contrib/xvec" ["e"=1]
"opendatacube/odc-stac" -> "developmentseed/titiler-multidim"
"long123524/BsiNet-torch" -> "long123524/SEANet_torch"
"long123524/BsiNet-torch" -> "long123524/CLCFormer"
"long123524/BsiNet-torch" -> "SonwYang/SLP-cropland-parcel-extraction"
"long123524/BsiNet-torch" -> "waldnerf/decode"
"long123524/BsiNet-torch" -> "long123524/HGINet-torch"
"microsoft/planetary-computer-hub" -> "microsoft/planetary-computer-apis"
"awesome-spectral-indices/spyndex" -> "awesome-spectral-indices/awesome-spectral-indices"
"awesome-spectral-indices/spyndex" -> "davemlz/eemont"
"awesome-spectral-indices/spyndex" -> "ESDS-Leipzig/cubo"
"awesome-spectral-indices/spyndex" -> "awesome-spectral-indices/spectral"
"awesome-spectral-indices/spyndex" -> "cmosig/sentle"
"awesome-spectral-indices/spyndex" -> "google/Xee"
"awesome-spectral-indices/spyndex" -> "ESDS-Leipzig/sen2nbar"
"awesome-spectral-indices/spyndex" -> "gjoseph92/stackstac"
"opendatacube/odc-geo" -> "opendatacube/odc-stac"
"opendatacube/odc-geo" -> "stac-utils/xpystac"
"opendatacube/odc-geo" -> "opendatacube/odc-tools"
"olivierhagolle/Sentinel-download" -> "olivierhagolle/LANDSAT-Download"
"olivierhagolle/Sentinel-download" -> "olivierhagolle/peps_download"
"olivierhagolle/Sentinel-download" -> "kr-stn/awesome-sentinel"
"olivierhagolle/Sentinel-download" -> "sentinel-hub/sentinelhub-py"
"olivierhagolle/Sentinel-download" -> "sentinelsat/sentinelsat"
"olivierhagolle/Sentinel-download" -> "sentinel-hub/sentinel2-cloud-detector"
"zhaozhen2333/iFLYTEK2021" -> "long123524/SEANet_torch"
"zhaozhen2333/iFLYTEK2021" -> "long123524/BsiNet-torch"
"zhaozhen2333/iFLYTEK2021" -> "waldnerf/decode"
"zhaozhen2333/iFLYTEK2021" -> "hexnn/Stark" ["e"=1]
"zhaozhen2333/iFLYTEK2021" -> "feevos/resuneta"
"LouisChen0104/swinstfm" -> "theonegis/ganstfm"
"LouisChen0104/swinstfm" -> "Andy-cumt/RASDF_GUI"
"LouisChen0104/swinstfm" -> "theonegis/edcstfn"
"google/earthengine-jupyter" -> "aazuspan/eerepr"
"CreativeInquiry/terrapattern" -> "trailbehind/DeepOSM"
"CreativeInquiry/terrapattern" -> "developmentseed/skynet-data"
"CreativeInquiry/terrapattern" -> "CreativeInquiry/terrapattern-website"
"CreativeInquiry/terrapattern" -> "BradNeuberg/cloudless"
"CreativeInquiry/terrapattern" -> "mitmul/ssai-cnn"
"CreativeInquiry/terrapattern" -> "developmentseed/skynet-train"
"CreativeInquiry/terrapattern" -> "geometalab/OSMDeepOD"
"CreativeInquiry/terrapattern" -> "ngageoint/mrgeo" ["e"=1]
"CreativeInquiry/terrapattern" -> "developmentseed/landsat-util"
"CreativeInquiry/terrapattern" -> "nshaud/DeepNetsForEO"
"CreativeInquiry/terrapattern" -> "developmentseed/label-maker"
"CreativeInquiry/terrapattern" -> "orfeotoolbox/OTB" ["e"=1]
"CreativeInquiry/terrapattern" -> "manzilzaheer/CoverTree"
"geocompx/geocompy" -> "mszell/geospatialdatascience"
"geocompx/geocompy" -> "r5py/r5py" ["e"=1]
"geocompx/geocompy" -> "developmentseed/lonboard"
"geocompx/geocompy" -> "duckdb/duckdb-spatial"
"geocompx/geocompy" -> "edzer/sdsr" ["e"=1]
"geocompx/geocompy" -> "pysal/momepy"
"geocompx/geocompy" -> "pysal/spopt"
"geocompx/geocompy" -> "makepath/xarray-spatial"
"geocompx/geocompy" -> "corteva/rioxarray"
"geocompx/geocompy" -> "geocompx/geocompr" ["e"=1]
"geocompx/geocompy" -> "corteva/geocube"
"geocompx/geocompy" -> "davemlz/eemont"
"BradNeuberg/cloudless" -> "developmentseed/skynet-data"
"BradNeuberg/cloudless" -> "mitmul/ssai-cnn"
"BradNeuberg/cloudless" -> "developmentseed/skynet-train"
"BradNeuberg/cloudless" -> "prs021/fmask"
"BradNeuberg/cloudless" -> "trailbehind/DeepOSM"
"BradNeuberg/cloudless" -> "CreativeInquiry/terrapattern"
"BradNeuberg/cloudless" -> "planetlabs/plcompositor"
"geometalab/OSMDeepOD" -> "developmentseed/skynet-data"
"geometalab/OSMDeepOD" -> "larsroemheld/OSM-HOT-ConvNet"
"geopython/pywps" -> "geopython/pycsw"
"geopython/pywps" -> "geopython/OWSLib"
"geopython/pywps" -> "PyWPS/pywps-4"
"geopython/pywps" -> "geopython/pywps-flask"
"geopython/pywps" -> "OSGeo/ows.js"
"xufangchn/GLF-CR" -> "ermongroup/STGAN"
"xufangchn/GLF-CR" -> "ameraner/dsen2-cr"
"xufangchn/GLF-CR" -> "PatrickTUM/SEN12MS-CR-TS"
"xufangchn/GLF-CR" -> "zhu-xlab/M3R-CR"
"xufangchn/GLF-CR" -> "PatrickTUM/UnCRtainTS"
"xufangchn/GLF-CR" -> "xufangchn/CloudSeg"
"SatelliteShorelines/CoastSeg" -> "2320sharon/Sniffer"
"SatelliteShorelines/CoastSeg" -> "SatelliteShorelines/SDS_Benchmark"
"microsoft/KenyaNigeriaBuildingFootprints" -> "microsoft/SouthAmericaBuildingFootprints"
"developmentseed/tifeatures" -> "developmentseed/supermorecado"
"Jack-bo1220/Benchmarks-for-Water-Body-Extraction-from-HRORS-Imagery" -> "Jack-bo1220/MSResNet-via-SSL"
"Ziqi-Li/SHAP_spatial_data_paper" -> "Ziqi-Li/GIS5122"
"Ziqi-Li/SHAP_spatial_data_paper" -> "Ziqi-Li/geoshapley"
"mitmul/ssai-cnn" -> "developmentseed/skynet-data"
"mitmul/ssai-cnn" -> "trailbehind/DeepOSM"
"mitmul/ssai-cnn" -> "BradNeuberg/cloudless"
"mitmul/ssai-cnn" -> "nshaud/DeepNetsForEO"
"mitmul/ssai-cnn" -> "mitmul/ssai"
"mitmul/ssai-cnn" -> "developmentseed/skynet-train"
"mitmul/ssai-cnn" -> "mathildor/TF-SegNet" ["e"=1]
"mitmul/ssai-cnn" -> "mahmoudmohsen213/airs"
"mitmul/ssai-cnn" -> "geometalab/OSMDeepOD"
"mitmul/ssai-cnn" -> "treigerm/WaterNet"
"mitmul/ssai-cnn" -> "VisionU/HF-FCN-for-Robust-Building-Extraction"
"mitmul/ssai-cnn" -> "aurotripathy/ssd-spacenet"
"mitmul/ssai-cnn" -> "mshiv/sat-seg"
"ytarazona/scikit-eo" -> "EOA-team/eodal"
"jblindsay/whitebox-geospatial-analysis-tools" -> "jblindsay/whitebox-tools"
"brmagnuson/LandFallowingInEarthEngine" -> "renelikestacos/Google-Earth-Engine-JavaScript-Examples"
"JamesRamm/archook" -> "ucd-cws/arcpy_metadata"
"nmandery/h3ronpy" -> "nmandery/h3ron"
"nmandery/h3ronpy" -> "nmandery/rasterh3"
"nmandery/h3ronpy" -> "isaacbrodsky/h3-duckdb"
"adugnag/deSpeckNet-TF-GEE" -> "adugnag/deSpeckNet"
"USGS-EROS/espa-api" -> "USGS-EROS/espa-bulk-downloader"
"USGS-EROS/espa-api" -> "USGS-EROS/espa-surface-reflectance"
"USGS-EROS/espa-api" -> "USGS-EROS/espa-cloud-masking"
"USGS-EROS/espa-api" -> "USGS-EROS/espa-processing"
"come880412/CTGAN" -> "come880412/Scene-Text-Detection-and-Recognition"
"stac-utils/stac-geoparquet" -> "developmentseed/rio-stac"
"stac-utils/stac-geoparquet" -> "stac-utils/rustac"
"stac-utils/stac-geoparquet" -> "stac-utils/stac-fastapi-pgstac"
"stac-utils/stac-geoparquet" -> "planetlabs/gpq"
"stac-utils/stac-geoparquet" -> "stac-utils/titiler-pgstac"
"microsoft/SouthAmericaBuildingFootprints" -> "microsoft/KenyaNigeriaBuildingFootprints"
"SDXorg/test-models" -> "pbreach/venpy"
"mie-lab/location-prediction" -> "mie-lab/location-mode-prediction"
"DahnJ/REM-xarray" -> "stac-utils/xpystac"
"PSI-edu/spectroscopy-tetracorder" -> "emit-sds/SpectralUnmixing"
"ldproxy/ldproxy" -> "BRGM/gml_application_schema_toolbox"
"sk-zk/lookaround" -> "sk-zk/lookaround-map"
"sk-zk/lookaround-map" -> "sk-zk/lookaround"
"sk-zk/lookaround-map" -> "sk-zk/streetlevel"
"sacridini/Awesome-Geospatial" -> "sshuair/awesome-gis" ["e"=1]
"sacridini/Awesome-Geospatial" -> "acgeospatial/awesome-earthobservation-code"
"sacridini/Awesome-Geospatial" -> "azavea/raster-vision"
"sacridini/Awesome-Geospatial" -> "opengeos/python-geospatial"
"sacridini/Awesome-Geospatial" -> "OSGeo/gdal" ["e"=1]
"sacridini/Awesome-Geospatial" -> "satellite-image-deep-learning/techniques"
"sacridini/Awesome-Geospatial" -> "microsoft/torchgeo"
"sacridini/Awesome-Geospatial" -> "gee-community/geemap"
"sacridini/Awesome-Geospatial" -> "rasterio/rasterio"
"sacridini/Awesome-Geospatial" -> "mapbox/awesome-vector-tiles" ["e"=1]
"sacridini/Awesome-Geospatial" -> "opengeos/segment-geospatial"
"sacridini/Awesome-Geospatial" -> "jblindsay/whitebox-tools"
"sacridini/Awesome-Geospatial" -> "chrieke/awesome-satellite-imagery-datasets"
"sacridini/Awesome-Geospatial" -> "chrieke/awesome-geospatial-companies"
"sacridini/Awesome-Geospatial" -> "giswqs/earthengine-py-notebooks"
"cgohlke/geospatial-wheels" -> "cgohlke/numpy-mkl-wheels"
"cgohlke/geospatial-wheels" -> "OSGeo/gdal" ["e"=1]
"cgohlke/geospatial-wheels" -> "opengeos/segment-geospatial"
"cgohlke/geospatial-wheels" -> "corteva/rioxarray"
"cgohlke/geospatial-wheels" -> "CNES/cars" ["e"=1]
"cgohlke/geospatial-wheels" -> "rasterio/rasterio"
"cgohlke/geospatial-wheels" -> "ViTAE-Transformer/SAMRS" ["e"=1]
"cgohlke/geospatial-wheels" -> "cgarrard/osgeopy-code"
"cgohlke/geospatial-wheels" -> "opengeos/whitebox-python"
"cgohlke/geospatial-wheels" -> "perrygeo/python-rasterstats"
"cgohlke/geospatial-wheels" -> "heremaps/tin-terrain" ["e"=1]
"cgohlke/geospatial-wheels" -> "geo-data/cesium-terrain-builder" ["e"=1]
"cgohlke/geospatial-wheels" -> "cgohlke/win_arm64-wheels"
"cgohlke/geospatial-wheels" -> "pytroll/pyresample" ["e"=1]
"cgohlke/geospatial-wheels" -> "Toblerity/Fiona"
"geopy/geopy" -> "DenisCarriere/geocoder"
"geopy/geopy" -> "python-visualization/folium"
"geopy/geopy" -> "geopandas/geopandas"
"geopy/geopy" -> "googlemaps/google-maps-services-python"
"geopy/geopy" -> "shapely/shapely"
"geopy/geopy" -> "gboeing/osmnx"
"geopy/geopy" -> "rasterio/rasterio"
"geopy/geopy" -> "jazzband/geojson"
"geopy/geopy" -> "pyproj4/pyproj"
"geopy/geopy" -> "Toblerity/Fiona"
"geopy/geopy" -> "daviddrysdale/python-phonenumbers" ["e"=1]
"geopy/geopy" -> "osm-search/Nominatim" ["e"=1]
"geopy/geopy" -> "pysal/pysal"
"geopy/geopy" -> "SciTools/cartopy" ["e"=1]
"geopy/geopy" -> "seatgeek/fuzzywuzzy" ["e"=1]
"opengeos/geospatial-data-catalogs" -> "opengeos/aws-open-data-geo"
"opengeos/geospatial-data-catalogs" -> "opengeos/maxar-open-data"
"opengeos/geospatial-data-catalogs" -> "samapriya/awesome-gee-community-datasets"
"opengeos/geospatial-data-catalogs" -> "awesome-spectral-indices/awesome-spectral-indices"
"opengeos/geospatial-data-catalogs" -> "opengeos/geospatial"
"opengeos/geospatial-data-catalogs" -> "acgeospatial/awesome-earthobservation-code"
"opengeos/geospatial-data-catalogs" -> "microsoft/RoadDetections"
"opengeos/geospatial-data-catalogs" -> "mszell/geospatialdatascience"
"opengeos/geospatial-data-catalogs" -> "developmentseed/lonboard"
"opengeos/geospatial-data-catalogs" -> "corteva/rioxarray"
"opengeos/geospatial-data-catalogs" -> "opendatacube/odc-stac"
"opengeos/geospatial-data-catalogs" -> "opengeospatial/geoparquet"
"opengeos/geospatial-data-catalogs" -> "opengeos/lidar"
"opengeos/geospatial-data-catalogs" -> "sertit/eoreader" ["e"=1]
"opengeos/geospatial-data-catalogs" -> "radiantearth/stac-spec"
"opengeos/aws-open-data-geo" -> "opengeos/geospatial-data-catalogs"
"opengeos/aws-open-data-geo" -> "opengeos/aws-open-data-stac"
"opengeos/aws-open-data-geo" -> "opengeos/aws-open-data"
"City-Form-Lab/madina" -> "winstonyym/urbanity"
"City-Form-Lab/madina" -> "VIDA-NYU/tile2net"
"City-Form-Lab/madina" -> "healthysustainablecities/global-indicators"
"geoalchemy/geoalchemy2" -> "developmentseed/geojson-pydantic"
"geoalchemy/geoalchemy2" -> "Toblerity/Fiona"
"geoalchemy/geoalchemy2" -> "pygeos/pygeos"
"geoalchemy/geoalchemy2" -> "geoalchemy/geoalchemy"
"geoalchemy/geoalchemy2" -> "perrygeo/python-rasterstats"
"geoalchemy/geoalchemy2" -> "movingpandas/movingpandas"
"geoalchemy/geoalchemy2" -> "holoviz/spatialpandas"
"geoalchemy/geoalchemy2" -> "pyproj4/pyproj"
"geoalchemy/geoalchemy2" -> "jazzband/geojson"
"geoalchemy/geoalchemy2" -> "geopython/pygeoapi"
"geoalchemy/geoalchemy2" -> "geopython/OWSLib"
"geoalchemy/geoalchemy2" -> "kvesteri/sqlalchemy-utils" ["e"=1]
"geoalchemy/geoalchemy2" -> "postgis/postgis" ["e"=1]
"geoalchemy/geoalchemy2" -> "rasterio/rasterio"
"geoalchemy/geoalchemy2" -> "mapbox/mercantile" ["e"=1]
"OpenTopography/RiverREM" -> "klarrieu/RiverREM"
"OpenTopography/RiverREM" -> "VeinsOfTheEarth/RivGraph"
"OpenTopography/RiverREM" -> "PDAL/wrench" ["e"=1]
"satellite-image-deep-learning/datasets" -> "Seyed-Ali-Ahmadi/Awesome_Satellite_Benchmark_Datasets" ["e"=1]
"satellite-image-deep-learning/datasets" -> "Jack-bo1220/Awesome-Remote-Sensing-Foundation-Models" ["e"=1]
"satellite-image-deep-learning/datasets" -> "chrieke/awesome-satellite-imagery-datasets"
"satellite-image-deep-learning/datasets" -> "microsoft/torchgeo"
"satellite-image-deep-learning/datasets" -> "corentin-dfg/Satellite-Image-Time-Series-Datasets" ["e"=1]
"satellite-image-deep-learning/datasets" -> "satellite-image-deep-learning/software"
"satellite-image-deep-learning/datasets" -> "satellite-image-deep-learning/techniques"
"satellite-image-deep-learning/datasets" -> "zhu-xlab/SSL4EO-S12" ["e"=1]
"satellite-image-deep-learning/datasets" -> "ChenDelong1999/RemoteCLIP" ["e"=1]
"satellite-image-deep-learning/datasets" -> "opengeos/segment-geospatial"
"satellite-image-deep-learning/datasets" -> "lzw-lzw/awesome-remote-sensing-vision-language-models" ["e"=1]
"satellite-image-deep-learning/datasets" -> "jasonmanesis/Satellite-Imagery-Datasets-Containing-Ships" ["e"=1]
"satellite-image-deep-learning/datasets" -> "acgeospatial/awesome-earthobservation-code"
"satellite-image-deep-learning/datasets" -> "allenai/satlas" ["e"=1]
"satellite-image-deep-learning/datasets" -> "wenhwu/awesome-remote-sensing-change-detection" ["e"=1]
"isaacbrodsky/h3-duckdb" -> "duckdb/duckdb-spatial"
"isaacbrodsky/h3-duckdb" -> "nmandery/h3ronpy"
"isaacbrodsky/h3-duckdb" -> "kraina-ai/quackosm"
"isaacbrodsky/h3-duckdb" -> "handstuyennn/geo"
"isaacbrodsky/h3-duckdb" -> "planetlabs/gpq"
"isaacbrodsky/h3-duckdb" -> "fusedio/udfs"
"isaacbrodsky/h3-duckdb" -> "developmentseed/lonboard"
"isaacbrodsky/h3-duckdb" -> "cholmes/duckdb-geoparquet-tutorials"
"benbovy/spherely" -> "paleolimbot/s2geography"
"benbovy/spherely" -> "geopandas/pyogrio"
"benbovy/spherely" -> "xarray-contrib/xvec" ["e"=1]
"m-wrzr/populartimes" -> "philshem/gmaps_popular_times_scraper"
"m-wrzr/populartimes" -> "estrma/busy-hours"
"m-wrzr/populartimes" -> "GrocerCheck/LivePopularTimes"
"m-wrzr/populartimes" -> "ActiveConclusion/COVID19_mobility" ["e"=1]
"m-wrzr/populartimes" -> "gboeing/osmnx-examples"
"m-wrzr/populartimes" -> "pysal/momepy"
"m-wrzr/populartimes" -> "kuwala-io/kuwala" ["e"=1]
"m-wrzr/populartimes" -> "pysal/pysal"
"m-wrzr/populartimes" -> "conveyal/r5" ["e"=1]
"m-wrzr/populartimes" -> "r5py/r5py" ["e"=1]
"trailbehind/DeepOSM" -> "mitmul/ssai-cnn"
"trailbehind/DeepOSM" -> "developmentseed/skynet-data"
"trailbehind/DeepOSM" -> "CreativeInquiry/terrapattern"
"trailbehind/DeepOSM" -> "mapbox/robosat"
"trailbehind/DeepOSM" -> "geometalab/OSMDeepOD"
"trailbehind/DeepOSM" -> "nshaud/DeepNetsForEO"
"trailbehind/DeepOSM" -> "azavea/raster-vision"
"trailbehind/DeepOSM" -> "developmentseed/skynet-train"
"trailbehind/DeepOSM" -> "BradNeuberg/cloudless"
"trailbehind/DeepOSM" -> "jremillard/images-to-osm" ["e"=1]
"trailbehind/DeepOSM" -> "developmentseed/label-maker"
"trailbehind/DeepOSM" -> "developmentseed/landsat-util"
"trailbehind/DeepOSM" -> "treigerm/WaterNet"
"trailbehind/DeepOSM" -> "OpenGeoscience/geonotebook"
"trailbehind/DeepOSM" -> "sentinelsat/sentinelsat"
"EOA-team/eodal" -> "EOA-team/eodal_notebooks"
"JimDuggan/SDMR" -> "SDXorg/test-models"
"JimDuggan/SDMR" -> "climateinteractive/SDEverywhere"
"kraina-ai/srai" -> "kraina-ai/srai-tutorial"
"kraina-ai/srai" -> "kraina-ai/quackosm"
"kraina-ai/srai" -> "CLARIN-PL/embeddings"
"kraina-ai/srai" -> "geopandas/dask-geopandas"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "gee-community/geetools"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "kr-stn/EarthEngine_scripts"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "jldowns/google_earth_engine_notebook"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "renelikestacos/Google-Earth-Engine-JavaScript-Examples"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "csaybar/EEwPython"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "mortcanty/earthengine"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "giswqs/earthengine-py-notebooks"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "sacridini/GEET"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "gee-community/qgis-earthengine-plugin"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "gee-community/ee-tensorflow-notebooks"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "opengeos/Awesome-GEE"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "geohackweek/GoogleEarthEngine"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "giswqs/qgis-earthengine-examples"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "fitoprincipe/geetools-code-editor"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "eMapR/LT-GEE"
"hygeos/polymer" -> "Tristanovsk/grs"
"developmentseed/skynet-data" -> "developmentseed/skynet-train"
"developmentseed/skynet-data" -> "mitmul/ssai-cnn"
"developmentseed/skynet-data" -> "BradNeuberg/cloudless"
"developmentseed/skynet-data" -> "larsroemheld/OSM-HOT-ConvNet"
"developmentseed/skynet-data" -> "developmentseed/spacenet-data"
"developmentseed/skynet-data" -> "geometalab/OSMDeepOD"
"developmentseed/skynet-data" -> "trailbehind/DeepOSM"
"developmentseed/skynet-data" -> "developmentseed/label-maker"
"stac-utils/stac-fastapi-pgstac" -> "stac-utils/pgstac"
"stac-utils/stac-fastapi-pgstac" -> "stac-utils/stac-geoparquet"
"stac-utils/stac-fastapi-pgstac" -> "stac-utils/stac-fastapi"
"jonm3D/OpenOceans" -> "ICESat2-Bathymetry/Information"
"jonm3D/OpenOceans" -> "ArcticCartographer/ICESat-2-Satellite-Derived-Bathymetry-using-Landsat-8-data"
"ICESat2-Bathymetry/Information" -> "jonm3D/OpenOceans"
"ICESat2-Bathymetry/Information" -> "ArcticCartographer/ICESat-2-Satellite-Derived-Bathymetry-using-Landsat-8-data"
"ICESat2-Bathymetry/Information" -> "rifqiharrys/sdb_gui"
"ICESat2-Bathymetry/Information" -> "nmt28/C-SHELPh"
"ICESat2-Bathymetry/Information" -> "yustisiardhitasari/sdbcnn"
"handstuyennn/geo" -> "duckdb/duckdb-spatial"
"handstuyennn/geo" -> "isaacbrodsky/h3-duckdb"
"DahnJ/Awesome-DEM" -> "awesome-spectral-indices/awesome-spectral-indices"
"DahnJ/Awesome-DEM" -> "klarrieu/RiverREM"
"DahnJ/Awesome-DEM" -> "kleok/FLOODPY"
"DahnJ/Awesome-DEM" -> "DahnJ/EO-jobs"
"DahnJ/Awesome-DEM" -> "opengeos/python-geospatial"
"DahnJ/Awesome-DEM" -> "bopen/sarsen" ["e"=1]
"DahnJ/Awesome-DEM" -> "bopen/xarray-sentinel" ["e"=1]
"DahnJ/Awesome-DEM" -> "geographyclub/qgis-expressions"
"DahnJ/Awesome-DEM" -> "openlandmap/GEDTM30"
"DahnJ/Awesome-DEM" -> "facebookresearch/HighResCanopyHeight" ["e"=1]
"DahnJ/Awesome-DEM" -> "DahnJ/REM-xarray"
"DahnJ/Awesome-DEM" -> "AlexeyPechnikov/pygmtsar" ["e"=1]
"DahnJ/Awesome-DEM" -> "chrieke/awesome-geospatial-companies"
"HydroniumLabs/h3o" -> "nmandery/h3ron"
"HydroniumLabs/h3o" -> "nmandery/h3ronpy"
"HydroniumLabs/h3o" -> "geoarrow/geoarrow-rs"
"HydroniumLabs/h3o" -> "yjh0502/rust-s2"
"HydroniumLabs/h3o" -> "nmandery/rasterh3"
"HydroniumLabs/h3o" -> "felixpalmer/a5"
"bair-climate-initiative/multiearth" -> "stac-utils/pystac-client"
"zhu-xlab/M3R-CR" -> "xufangchn/GLF-CR"
"zhu-xlab/M3R-CR" -> "PatrickTUM/SEN12MS-CR-TS"
"zhu-xlab/M3R-CR" -> "PatrickTUM/UnCRtainTS"
"zhu-xlab/M3R-CR" -> "ameraner/dsen2-cr"
"renelikestacos/Google-Earth-Engine-JavaScript-Examples" -> "brmagnuson/LandFallowingInEarthEngine"
"renelikestacos/Google-Earth-Engine-JavaScript-Examples" -> "kr-stn/EarthEngine_scripts"
"renelikestacos/Google-Earth-Engine-JavaScript-Examples" -> "geohackweek/GoogleEarthEngine"
"renelikestacos/Google-Earth-Engine-JavaScript-Examples" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"CLARIN-PL/LEPISZCZE" -> "CLARIN-PL/embeddings"
"cgohlke/win_arm64-wheels" -> "RockLakeGrass/Windows-on-ARM64-Toolchain" ["e"=1]
"cgohlke/win_arm64-wheels" -> "cgohlke/numpy-mkl-wheels"
"long123524/CLCFormer" -> "long123524/BsiNet-torch"
"XD-MG/DDHRNet" -> "Margin1996/Assisted_learning"
"PeeBar/Awesome-Cloud-Detection-and-Removal" -> "Phoenix-Shen/DSEN2_CR_PYTORCH"
"opengeos/aws-open-data" -> "opengeos/NASA-CMR-STAC"
"riatelab/magrit" -> "riatelab/statsbreaks"
"riatelab/magrit" -> "magisAR9/webinaires"
"riatelab/magrit" -> "AtelierCartographie/Khartis"
"riatelab/magrit" -> "riatelab/bertin"
"klarrieu/RiverREM" -> "DahnJ/REM-xarray"
"robintw/Py6S" -> "samsammurphy/6S_emulator"
"robintw/Py6S" -> "Zhaoguanhua/AtmosphericCorrection"
"robintw/Py6S" -> "samsammurphy/gee-atmcorr-S2"
"robintw/Py6S" -> "acolite/acolite"
"robintw/Py6S" -> "jgomezdans/prosail" ["e"=1]
"robintw/Py6S" -> "USGS-EROS/espa-surface-reflectance"
"robintw/Py6S" -> "CNES/RadiativeTransferCode-OSOAA"
"sat-utils/sat-search" -> "sat-utils/sat-stac"
"sat-utils/sat-search" -> "sat-utils/sat-api"
"sat-utils/sat-search" -> "stac-utils/pystac-client"
"sat-utils/sat-search" -> "stac-utils/stactools"
"sat-utils/sat-search" -> "gjoseph92/stackstac"
"sat-utils/sat-search" -> "geospatial-jeff/aiocogeo"
"sat-utils/sat-search" -> "gipit/gippy"
"sat-utils/sat-search" -> "cogeotiff/rio-tiler"
"sat-utils/sat-search" -> "cogeotiff/rio-cogeo"
"sat-utils/sat-search" -> "stac-utils/pystac"
"sat-utils/sat-search" -> "radiantearth/stac-api-spec"
"stevage/OpenTrees" -> "stevage/opentrees-data"
"nasa/EMIT-Data-Resources" -> "emit-sds/emit-ghg"
"nasa/EMIT-Data-Resources" -> "isofit/isofit"
"nasa/EMIT-Data-Resources" -> "nsidc/earthaccess"
"nasa/EMIT-Data-Resources" -> "PSI-edu/spectroscopy-tetracorder"
"mapbox/rio-hist" -> "mapbox/rio-color"
"mapbox/rio-hist" -> "planetlabs/color_balance"
"mapbox/rio-hist" -> "mapbox/rio-cloudmask"
"emit-sds/emit-ghg" -> "nasa/EMIT-Data-Resources"
"winstonyym/urbanity" -> "koito19960406/ZenSVI"
"winstonyym/urbanity" -> "benchmark-urbanism/cityseer-api"
"winstonyym/urbanity" -> "anerv/BikeDNA"
"winstonyym/urbanity" -> "ualsg/Roofpedia"
"winstonyym/urbanity" -> "PratyushTripathy/COINS"
"developmentseed/titiler-image" -> "developmentseed/supermorecado"
"timothyb0912/pylogit" -> "UDST/choicemodels"
"timothyb0912/pylogit" -> "arteagac/xlogit"
"timothyb0912/pylogit" -> "michelbierlaire/biogeme"
"timothyb0912/pylogit" -> "jpn--/larch"
"timothyb0912/pylogit" -> "BSifringer/EnhancedDCM"
"timothyb0912/pylogit" -> "ferasz/LCCM"
"EOA-team/eodal_notebooks" -> "EOA-team/eodal"
"olivierhagolle/peps_download" -> "olivierhagolle/Sentinel-download"
"xrubio/pandora" -> "Repast/repast.hpc"
"sat-utils/sat-api" -> "sat-utils/sat-stac"
"sat-utils/sat-api" -> "sat-utils/sat-search"
"sat-utils/sat-api" -> "mapbox/landsat-tiler"
"sat-utils/sat-api" -> "RemotePixel/remotepixel-api"
"sat-utils/sat-api" -> "mapbox/sentinel-tiler"
"sat-utils/sat-api" -> "developmentseed/landsat-api"
"sat-utils/sat-api" -> "developmentseed/geolambda"
"sat-utils/sat-api" -> "sinergise/Sentinel2ProductIngestor"
"sat-utils/sat-api" -> "radiantearth/community-sprints"
"sat-utils/sat-api" -> "radiantearth/stac-spec"
"sat-utils/sat-api" -> "MLHubEarth/hub"
"sat-utils/sat-api" -> "mojodna/marblecutter"
"sat-utils/sat-api" -> "cogeotiff/rio-cogeo"
"sat-utils/sat-api" -> "landsat-pds/landsat_ingestor"
"sat-utils/sat-api" -> "cogeotiff/rio-tiler"
"developmentseed/tipg" -> "developmentseed/timvt"
"developmentseed/tipg" -> "stac-utils/titiler-pgstac"
"developmentseed/tipg" -> "stac-utils/stac-geoparquet"
"developmentseed/tipg" -> "stac-utils/pgstac"
"developmentseed/tipg" -> "developmentseed/eoAPI"
"developmentseed/tipg" -> "stac-utils/stac-fastapi"
"developmentseed/tipg" -> "planetlabs/gpq"
"developmentseed/tipg" -> "developmentseed/tifeatures"
"developmentseed/tipg" -> "developmentseed/titiler"
"developmentseed/tipg" -> "developmentseed/rio-stac"
"manzilzaheer/CoverTree" -> "DNCrane/Cover-Tree"
"manzilzaheer/CoverTree" -> "patvarilly/CoverTree"
"sozip/sozip-spec" -> "sozip/sozipfile"
"sozip/sozip-spec" -> "airbusgeo/cogger"
"anerv/BikeDNA" -> "christian-werner/spatial-centrality-pub"
"geopandas/contextily" -> "corteva/rioxarray"
"geopandas/contextily" -> "geopandas/dask-geopandas"
"geopandas/contextily" -> "corteva/geocube"
"geopandas/contextily" -> "makepath/xarray-spatial"
"geopandas/contextily" -> "pysal/momepy"
"geopandas/contextily" -> "holoviz/geoviews" ["e"=1]
"geopandas/contextily" -> "pysal/pysal"
"geopandas/contextily" -> "movingpandas/movingpandas"
"geopandas/contextily" -> "pysal/libpysal"
"geopandas/contextily" -> "geopandas/pyogrio"
"geopandas/contextily" -> "mattijn/topojson"
"geopandas/contextily" -> "pyrosm/pyrosm"
"geopandas/contextily" -> "oturns/geosnap"
"geopandas/contextily" -> "UDST/pandana"
"geopandas/contextily" -> "xarray-contrib/xarray_leaflet"
"developmentseed/lonboard" -> "opengeospatial/geoparquet"
"developmentseed/lonboard" -> "duckdb/duckdb-spatial"
"developmentseed/lonboard" -> "geopolars/geopolars"
"developmentseed/lonboard" -> "geoarrow/geoarrow-rs"
"developmentseed/lonboard" -> "geoarrow/geoarrow"
"developmentseed/lonboard" -> "corteva/rioxarray"
"developmentseed/lonboard" -> "geopandas/dask-geopandas"
"developmentseed/lonboard" -> "fusedio/udfs"
"developmentseed/lonboard" -> "planetlabs/gpq"
"developmentseed/lonboard" -> "makepath/xarray-spatial"
"developmentseed/lonboard" -> "developmentseed/eoAPI"
"developmentseed/lonboard" -> "gjoseph92/stackstac"
"developmentseed/lonboard" -> "kraina-ai/quackosm"
"developmentseed/lonboard" -> "isaacbrodsky/h3-duckdb"
"developmentseed/lonboard" -> "geojupyter/jupytergis"
"kr-stn/EarthEngine_scripts" -> "renelikestacos/Google-Earth-Engine-JavaScript-Examples"
"kr-stn/EarthEngine_scripts" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"kr-stn/EarthEngine_scripts" -> "gee-community/geetools"
"kr-stn/EarthEngine_scripts" -> "sacridini/GEET"
"kr-stn/EarthEngine_scripts" -> "jldowns/google_earth_engine_notebook"
"kr-stn/EarthEngine_scripts" -> "brmagnuson/LandFallowingInEarthEngine"
"kr-stn/EarthEngine_scripts" -> "geohackweek/GoogleEarthEngine"
"kr-stn/EarthEngine_scripts" -> "eMapR/LT-GEE"
"kr-stn/EarthEngine_scripts" -> "gee-community/ee-palettes"
"kr-stn/EarthEngine_scripts" -> "mortcanty/earthengine"
"kr-stn/EarthEngine_scripts" -> "fitoprincipe/geetools-code-editor"
"kr-stn/EarthEngine_scripts" -> "SERVIR/water-quality-gee"
"kr-stn/EarthEngine_scripts" -> "gee-community/awesome-google-earth-engine"
"kr-stn/EarthEngine_scripts" -> "opengeos/Awesome-GEE"
"kr-stn/EarthEngine_scripts" -> "google/earthengine-community"
"geographyclub/qgis-expressions" -> "geographyclub/gis-from-command-line"
"geographyclub/qgis-expressions" -> "geographyclub/postgis-cookbook"
"geographyclub/qgis-expressions" -> "geographyclub/qgis-quickstart"
"google/Xee" -> "aazuspan/wxee"
"google/Xee" -> "gjoseph92/stackstac"
"google/Xee" -> "opendatacube/odc-stac"
"google/Xee" -> "corteva/rioxarray"
"google/Xee" -> "alxmrs/dask-ee"
"google/Xee" -> "google/xarray-beam" ["e"=1]
"google/Xee" -> "ESDS-Leipzig/cubo"
"google/Xee" -> "makepath/xarray-spatial"
"google/Xee" -> "corteva/geocube"
"google/Xee" -> "davemlz/eemont"
"google/Xee" -> "cubed-dev/cubed" ["e"=1]
"google/Xee" -> "stac-utils/xstac" ["e"=1]
"google/Xee" -> "DahnJ/Awesome-Zarr" ["e"=1]
"google/Xee" -> "opendatacube/odc-geo"
"google/Xee" -> "xarray-contrib/xbatcher" ["e"=1]
"opengeos/segment-geospatial" -> "microsoft/torchgeo"
"opengeos/segment-geospatial" -> "aliaksandr960/segment-anything-eo"
"opengeos/segment-geospatial" -> "Jack-bo1220/Awesome-Remote-Sensing-Foundation-Models" ["e"=1]
"opengeos/segment-geospatial" -> "satellite-image-deep-learning/techniques"
"opengeos/segment-geospatial" -> "azavea/raster-vision"
"opengeos/segment-geospatial" -> "opengeos/leafmap"
"opengeos/segment-geospatial" -> "gee-community/geemap"
"opengeos/segment-geospatial" -> "samapriya/awesome-gee-community-datasets"
"opengeos/segment-geospatial" -> "awesome-spectral-indices/awesome-spectral-indices"
"opengeos/segment-geospatial" -> "sacridini/Awesome-Geospatial"
"opengeos/segment-geospatial" -> "microsoft/GlobalMLBuildingFootprints"
"opengeos/segment-geospatial" -> "coolzhao/Geo-SAM"
"opengeos/segment-geospatial" -> "acgeospatial/awesome-earthobservation-code"
"opengeos/segment-geospatial" -> "jblindsay/whitebox-tools"
"opengeos/segment-geospatial" -> "opengeos/geoai"
"gboeing/osmnx" -> "gboeing/osmnx-examples"
"gboeing/osmnx" -> "gboeing/ppde642"
"gboeing/osmnx" -> "geopandas/geopandas"
"gboeing/osmnx" -> "movingpandas/movingpandas"
"gboeing/osmnx" -> "python-visualization/folium"
"gboeing/osmnx" -> "sacridini/Awesome-Geospatial"
"gboeing/osmnx" -> "pysal/pysal"
"gboeing/osmnx" -> "shapely/shapely"
"gboeing/osmnx" -> "keplergl/kepler.gl" ["e"=1]
"gboeing/osmnx" -> "pyrosm/pyrosm"
"gboeing/osmnx" -> "pysal/momepy"
"gboeing/osmnx" -> "Project-OSRM/osrm-backend" ["e"=1]
"gboeing/osmnx" -> "geopy/geopy"
"gboeing/osmnx" -> "cyang-kth/fmm" ["e"=1]
"gboeing/osmnx" -> "microsoft/USBuildingFootprints"
"OvertureMaps/data" -> "OvertureMaps/schema"
"OvertureMaps/data" -> "duckdb/duckdb-spatial"
"OvertureMaps/data" -> "opengeospatial/geoparquet"
"OvertureMaps/data" -> "developmentseed/lonboard"
"OvertureMaps/data" -> "OvertureMaps/overturemaps-py"
"OvertureMaps/data" -> "geoarrow/geoarrow"
"OvertureMaps/data" -> "protomaps/PMTiles" ["e"=1]
"OvertureMaps/data" -> "microsoft/RoadDetections"
"OvertureMaps/data" -> "OvertureMaps/overture-tiles"
"OvertureMaps/data" -> "planetlabs/gpq"
"OvertureMaps/data" -> "felt/tippecanoe" ["e"=1]
"OvertureMaps/data" -> "microsoft/GlobalMLBuildingFootprints"
"OvertureMaps/data" -> "kraina-ai/quackosm"
"OvertureMaps/data" -> "opengeos/open-buildings"
"OvertureMaps/data" -> "flatgeobuf/flatgeobuf" ["e"=1]
"ResidentMario/geoplot" -> "holoviz/geoviews" ["e"=1]
"ResidentMario/geoplot" -> "makepath/xarray-spatial"
"ResidentMario/geoplot" -> "pysal/pysal"
"ResidentMario/geoplot" -> "fatiando/verde" ["e"=1]
"ResidentMario/geoplot" -> "geopandas/contextily"
"ResidentMario/geoplot" -> "corteva/geocube"
"ResidentMario/geoplot" -> "jorisvandenbossche/geopandas-tutorial"
"ResidentMario/geoplot" -> "oturns/geosnap"
"ResidentMario/geoplot" -> "andrea-cuttone/geoplotlib" ["e"=1]
"ResidentMario/geoplot" -> "movingpandas/movingpandas"
"ResidentMario/geoplot" -> "geopandas/dask-geopandas"
"ResidentMario/geoplot" -> "SciTools/cartopy" ["e"=1]
"ResidentMario/geoplot" -> "earthlab/earthpy"
"ResidentMario/geoplot" -> "Toblerity/Fiona"
"ResidentMario/geoplot" -> "gboeing/ppde642"
"drivendataorg/competition-winners" -> "drivendataorg/open-cities-ai-challenge"
"drivendataorg/competition-winners" -> "drivendataorg/power-laws-forecasting"
"drivendataorg/competition-winners" -> "drivendataorg/stac-overflow"
"drivendataorg/competition-winners" -> "drivendataorg/pover-t-tests"
"ESDS-Leipzig/cubo" -> "msoechting/lexcube"
"ESDS-Leipzig/cubo" -> "gjoseph92/stackstac"
"ESDS-Leipzig/cubo" -> "google/Xee"
"ESDS-Leipzig/cubo" -> "ESDS-Leipzig/sen2nbar"
"aliaksandr960/segment-anything-eo" -> "opengeos/segment-geospatial"
"aliaksandr960/segment-anything-eo" -> "coolzhao/Geo-SAM"
"aliaksandr960/segment-anything-eo" -> "ESDS-Leipzig/cubo"
"aliaksandr960/segment-anything-eo" -> "gumblex/tms2geotiff"
"aliaksandr960/segment-anything-eo" -> "LucasOsco/AI-RemoteSensing"
"aliaksandr960/segment-anything-eo" -> "corteva/rioxarray"
"aliaksandr960/segment-anything-eo" -> "ViTAE-Transformer/SAMRS" ["e"=1]
"aliaksandr960/segment-anything-eo" -> "gjoseph92/stackstac"
"aliaksandr960/segment-anything-eo" -> "ndminhhus/geeguide"
"aliaksandr960/segment-anything-eo" -> "corentin-dfg/Satellite-Image-Time-Series-Datasets" ["e"=1]
"aliaksandr960/segment-anything-eo" -> "adugnag/gee_s1_ard"
"aliaksandr960/segment-anything-eo" -> "makepath/xarray-spatial"
"aliaksandr960/segment-anything-eo" -> "opengeos/segment-anything"
"aliaksandr960/segment-anything-eo" -> "aazuspan/wxee"
"aliaksandr960/segment-anything-eo" -> "microsoft/satellite-imagery-labeling-tool"
"robolyst/streetview" -> "cplusx/google-street-view-panorama-download"
"robolyst/streetview" -> "rrwen/google_streetview"
"robolyst/streetview" -> "ualsg/global-streetscapes"
"robolyst/streetview" -> "amir32002/3D_Street_View"
"robolyst/streetview" -> "whuyao/BaiduStreetViewSpider"
"robolyst/streetview" -> "koito19960406/ZenSVI"
"robolyst/streetview" -> "robolyst/google"
"robolyst/streetview" -> "rsangers/explainable_perception"
"robolyst/streetview" -> "CenterForCollectiveLearning/Place-Pulse"
"robolyst/streetview" -> "TheGreatRambler/streetview_client"
"robolyst/streetview" -> "whuyao/Urban_Perception_CNN_Model"
"robolyst/streetview" -> "sk-zk/streetlevel"
"robolyst/streetview" -> "tsinghua-fib-lab/DRL-urban-planning" ["e"=1]
"robolyst/streetview" -> "y26805/Treepedia_Public"
"robolyst/streetview" -> "geoporttishare/Helsinki_GreenView"
"waddell/urban-informatics-and-visualization" -> "gboeing/ppde642"
"waddell/urban-informatics-and-visualization" -> "UDST/urbanaccess"
"waddell/urban-informatics-and-visualization" -> "alexsingleton/urban_analytics"
"waddell/urban-informatics-and-visualization" -> "UDST/pandana"
"waddell/urban-informatics-and-visualization" -> "waddell/CP255"
"waddell/urban-informatics-and-visualization" -> "UDST/urbansim"
"waddell/urban-informatics-and-visualization" -> "kuanb/peartree" ["e"=1]
"fivethirtyeight/guns-data" -> "fivethirtyeight/redistricting-atlas-data"
"nealjean/predicting-poverty" -> "jmathur25/predicting-poverty-replication"
"nealjean/predicting-poverty" -> "sustainlab-group/africa_poverty"
"nealjean/predicting-poverty" -> "developmentseed/skynet-train"
"nealjean/predicting-poverty" -> "developmentseed/skynet-data"
"nealjean/predicting-poverty" -> "mani-shailesh/satimage"
"nealjean/predicting-poverty" -> "worldbank/ML-classification-algorithms-poverty"
"nealjean/predicting-poverty" -> "developmentseed/label-maker"
"nealjean/predicting-poverty" -> "trailbehind/DeepOSM"
"nealjean/predicting-poverty" -> "carsonluuu/Poverty-Prediction-by-Satellite-Imagery"
"nealjean/predicting-poverty" -> "planetlabs/notebooks"
"nealjean/predicting-poverty" -> "mitmul/ssai-cnn"
"nealjean/predicting-poverty" -> "kscottz/PythonFromSpace"
"nealjean/predicting-poverty" -> "SigmaMonstR/tutorial_viirs_part1"
"nealjean/predicting-poverty" -> "adrianalbert/urban-environments"
"nealjean/predicting-poverty" -> "JiaxuanYou/crop_yield_prediction"
"galadriel-ai/opencopilot" -> "thepeanutgalleryandco/nftport-discord-bot"
"spaceml-org/STARCOP" -> "UCSB-VRL/MethaneMapper-Spectral-Absorption-aware-Hyperspectral-Transformer-for-Methane-Detection"
"spaceml-org/STARCOP" -> "sudshu/Pandey_2023_RSE"
"spaceml-org/STARCOP" -> "emit-sds/emit-ghg"
"OpenGeoscience/geonotebook" -> "OpenGeoscience/geojs" ["e"=1]
"OpenGeoscience/geonotebook" -> "locationtech-labs/geopyspark" ["e"=1]
"OpenGeoscience/geonotebook" -> "jupyter-widgets/ipyleaflet" ["e"=1]
"OpenGeoscience/geonotebook" -> "mapbox/mapboxgl-jupyter"
"OpenGeoscience/geonotebook" -> "locationtech/geotrellis" ["e"=1]
"OpenGeoscience/geonotebook" -> "azavea/raster-vision"
"OpenGeoscience/geonotebook" -> "dwtkns/gdal-cheat-sheet"
"OpenGeoscience/geonotebook" -> "mapbox/robosat"
"OpenGeoscience/geonotebook" -> "radiantearth/stac-spec"
"OpenGeoscience/geonotebook" -> "trailbehind/DeepOSM"
"OpenGeoscience/geonotebook" -> "gboeing/ppde642"
"OpenGeoscience/geonotebook" -> "ungarj/mapchete"
"OpenGeoscience/geonotebook" -> "rasterio/rasterio"
"OpenGeoscience/geonotebook" -> "developmentseed/landsat-util"
"OpenGeoscience/geonotebook" -> "urschrei/Geopython"
"yotarazona/scikit-eo" -> "ytarazona/scikit-eo"
"yotarazona/scikit-eo" -> "google/Xee"
"duckdb/duckdb-spatial" -> "opengeospatial/geoparquet"
"duckdb/duckdb-spatial" -> "isaacbrodsky/h3-duckdb"
"duckdb/duckdb-spatial" -> "kraina-ai/quackosm"
"duckdb/duckdb-spatial" -> "planetlabs/gpq"
"duckdb/duckdb-spatial" -> "geoarrow/geoarrow"
"duckdb/duckdb-spatial" -> "handstuyennn/geo"
"duckdb/duckdb-spatial" -> "developmentseed/lonboard"
"duckdb/duckdb-spatial" -> "geoarrow/geoarrow-rs"
"duckdb/duckdb-spatial" -> "geopolars/geopolars"
"duckdb/duckdb-spatial" -> "geopandas/pyogrio"
"duckdb/duckdb-spatial" -> "geoarrow/deck.gl-layers"
"duckdb/duckdb-spatial" -> "geoarrow/geoarrow-r" ["e"=1]
"duckdb/duckdb-spatial" -> "flatgeobuf/flatgeobuf" ["e"=1]
"duckdb/duckdb-spatial" -> "geopandas/dask-geopandas"
"duckdb/duckdb-spatial" -> "cloudnativegeo/cloud-optimized-geospatial-formats-guide"
"OvertureMaps/schema" -> "OvertureMaps/overturemaps-py"
"OvertureMaps/schema" -> "OvertureMaps/data"
"planetlabs/gpq" -> "stac-utils/stac-geoparquet"
"planetlabs/gpq" -> "cholmes/duckdb-geoparquet-tutorials"
"planetlabs/gpq" -> "geoarrow/geoarrow"
"planetlabs/gpq" -> "duckdb/duckdb-spatial"
"planetlabs/gpq" -> "geoarrow/geoarrow-rs"
"planetlabs/gpq" -> "stac-utils/titiler-pgstac"
"planetlabs/gpq" -> "developmentseed/rio-stac"
"planetlabs/gpq" -> "geoarrow/deck.gl-layers"
"planetlabs/gpq" -> "developmentseed/tipg"
"planetlabs/gpq" -> "stac-utils/pgstac"
"planetlabs/gpq" -> "opengeos/open-buildings"
"planetlabs/gpq" -> "geoarrow/geoarrow-python"
"planetlabs/gpq" -> "isaacbrodsky/h3-duckdb"
"planetlabs/gpq" -> "OvertureMaps/overturemaps-py"
"planetlabs/gpq" -> "opengeospatial/geoparquet"
"koito19960406/ZenSVI" -> "ualsg/global-streetscapes"
"koito19960406/ZenSVI" -> "winstonyym/urbanity"
"koito19960406/ZenSVI" -> "ualsg/Visual-soundscapes"
"koito19960406/ZenSVI" -> "kunifujiwara/VoxCity"
"coolzhao/Geo-SAM" -> "aliaksandr960/segment-anything-eo"
"coolzhao/Geo-SAM" -> "luisCartoGeo/GeoAI_Plugin"
"coolzhao/Geo-SAM" -> "opengeos/segment-geospatial"
"coolzhao/Geo-SAM" -> "rafiibnsultan/GeoSAM"
"coolzhao/Geo-SAM" -> "BjornNyberg/Geometric-Attributes-Toolbox"
"tylere/ee-jupyter-examples" -> "jldowns/google_earth_engine_notebook"
"tylere/ee-jupyter-examples" -> "gee-community/ee-jupyter-contrib"
"tylere/ee-jupyter-examples" -> "tylere/AGU2017"
"opengeos/geoai" -> "opengeos/segment-geospatial"
"opengeos/geoai" -> "IBM/terratorch" ["e"=1]
"opengeos/geoai" -> "opengeos/maxar-open-data"
"opengeos/geoai" -> "giswqs/geog-312"
"opengeos/geoai" -> "microsoft/torchgeo"
"opengeos/geoai" -> "samapriya/awesome-gee-community-datasets"
"opengeos/geoai" -> "yotarazona/scikit-eo"
"opengeos/geoai" -> "opengeos/geospatial-data-catalogs"
"opengeos/geoai" -> "Clay-foundation/model" ["e"=1]
"opengeos/geoai" -> "opengeos/leafmap"
"opengeos/geoai" -> "GeoRetina/chat2geo"
"opengeos/geoai" -> "developmentseed/lonboard"
"opengeos/geoai" -> "gastruc/AnySat" ["e"=1]
"opengeos/geoai" -> "jblindsay/whitebox-tools"
"opengeos/geoai" -> "Jack-bo1220/Awesome-Remote-Sensing-Foundation-Models" ["e"=1]
"PatrickTUM/UnCRtainTS" -> "PatrickTUM/SEN12MS-CR-TS"
"PatrickTUM/UnCRtainTS" -> "XavierJiezou/DiffCR"
"PatrickTUM/UnCRtainTS" -> "xufangchn/GLF-CR"
"PatrickTUM/UnCRtainTS" -> "zhu-xlab/M3R-CR"
"PatrickTUM/UnCRtainTS" -> "ameraner/dsen2-cr"
"PatrickTUM/UnCRtainTS" -> "XavierJiezou/PMAA"
"3liz/proj4rs" -> "busstoptaktik/geodesy"
"opengeos/maxar-open-data" -> "opengeos/geospatial-data-catalogs"
"opengeos/maxar-open-data" -> "opengeos/solara-maxar"
"opengeos/maxar-open-data" -> "kalkan/Turkey-Earthquake-2023-GeoData"
"opengeos/open-buildings" -> "planetlabs/gpq"
"long123524/SEANet_torch" -> "long123524/BsiNet-torch"
"long123524/SEANet_torch" -> "SonwYang/SLP-cropland-parcel-extraction"
"long123524/SEANet_torch" -> "long123524/HGINet-torch"
"nicogis/Geodatabase-Diagrammer" -> "AlexArcPy/registrant"
"tracek/gee_asset_manager" -> "gee-community/ee-runner"
"tracek/gee_asset_manager" -> "samapriya/gee_asset_manager_addon"
"cloudnativegeo/cloud-optimized-geospatial-formats-guide" -> "stac-utils/stac-geoparquet"
"cloudnativegeo/cloud-optimized-geospatial-formats-guide" -> "developmentseed/rio-stac"
"cloudnativegeo/cloud-optimized-geospatial-formats-guide" -> "pangeo-data/cog-best-practices"
"msoechting/lexcube" -> "cmosig/sentle"
"msoechting/lexcube" -> "ESDS-Leipzig/cubo"
"msoechting/lexcube" -> "awesome-spectral-indices/SpectralIndices.jl"
"climateinteractive/SDEverywhere" -> "SDXorg/test-models"
"climateinteractive/SDEverywhere" -> "pbreach/venpy"
"Ziqi-Li/geoshapley" -> "Ziqi-Li/SHAP_spatial_data_paper"
"Ziqi-Li/geoshapley" -> "Josephjiao7/Geographical-Gaussian-Process-Regression"
"Ziqi-Li/geoshapley" -> "Ziqi-Li/GIS5122"
"Ziqi-Li/geoshapley" -> "Bingbo-Gao/GCCM"
"Ziqi-Li/geoshapley" -> "UrbanGISer/XGeoML"
"LucasOsco/AI-RemoteSensing" -> "aliaksandr960/segment-anything-eo"
"geoarrow/deck.gl-layers" -> "geoarrow/geoarrow-rs"
"geoarrow/deck.gl-layers" -> "planetlabs/gpq"
"geoarrow/deck.gl-layers" -> "geoarrow/geoarrow-python"
"geoarrow/deck.gl-layers" -> "kylebarron/arrow-js-ffi"
"geoarrow/deck.gl-layers" -> "stac-utils/stac-geoparquet"
"geoarrow/geoarrow-rs" -> "geoarrow/geoarrow"
"geoarrow/geoarrow-rs" -> "geopolars/geopolars"
"geoarrow/geoarrow-rs" -> "geoarrow/deck.gl-layers"
"geoarrow/geoarrow-rs" -> "georust/geozero"
"geoarrow/geoarrow-rs" -> "planetlabs/gpq"
"geoarrow/geoarrow-rs" -> "opengeospatial/geoparquet"
"geoarrow/geoarrow-rs" -> "developmentseed/lonboard"
"geoarrow/geoarrow-rs" -> "duckdb/duckdb-spatial"
"geoarrow/geoarrow-rs" -> "geoarrow/geoarrow-python"
"geoarrow/geoarrow-rs" -> "georust/gdal"
"geoarrow/geoarrow-rs" -> "georust/geo"
"geoarrow/geoarrow-rs" -> "kylebarron/parquet-wasm"
"geoarrow/geoarrow-rs" -> "kylebarron/geo-index"
"geoarrow/geoarrow-rs" -> "kylebarron/arro3" ["e"=1]
"geoarrow/geoarrow-rs" -> "pka/awesome-georust"
"geoarrow/geoarrow-python" -> "geoarrow/geoarrow"
"SWOT-community/SWOT-OpenToolkit" -> "SWOT-community/SWOT-Oceanography"
"SWOT-community/SWOT-OpenToolkit" -> "CNES/swot-hydrology-toolbox"
"Repast/repast.simphony" -> "Repast/repast.hpc"
"Repast/repast.simphony" -> "Repast/repast4py"
"opengeos/segment-anything" -> "ESDS-Leipzig/cubo"
"opengeos/segment-anything" -> "aliaksandr960/segment-anything-eo"
"opengeos/segment-anything" -> "satellite-image-deep-learning/course"
"georgebv/coastlib" -> "chrisleaman/awesome-coastal"
"BUPTLdy/Land_Use_CNN" -> "yangxue0827/CNN_UCMerced-LandUse_Caffe"
"BUPTLdy/Land_Use_CNN" -> "BUPTLdy/MARTA-GAN"
"UDST/choicemodels" -> "UDST/orca"
"UDST/choicemodels" -> "UDST/spandex"
"UDST/choicemodels" -> "UDST/urbansim_templates"
"developmentseed/skynet-train" -> "developmentseed/skynet-data"
"developmentseed/skynet-train" -> "developmentseed/spacenet-data"
"developmentseed/skynet-train" -> "developmentseed/label-maker"
"developmentseed/skynet-train" -> "mitmul/ssai-cnn"
"developmentseed/skynet-train" -> "developmentseed/landsat-util"
"developmentseed/skynet-train" -> "BradNeuberg/cloudless"
"developmentseed/skynet-train" -> "developmentseed/skynet-scrub"
"developmentseed/skynet-train" -> "developmentseed/ml-hv-grid-pub"
"UCSB-VRL/MethaneMapper-Spectral-Absorption-aware-Hyperspectral-Transformer-for-Methane-Detection" -> "satish1901/Methane-detection-from-hyperspectral-imagery"
"UCSB-VRL/MethaneMapper-Spectral-Absorption-aware-Hyperspectral-Transformer-for-Methane-Detection" -> "spaceml-org/STARCOP"
"UCSB-VRL/MethaneMapper-Spectral-Absorption-aware-Hyperspectral-Transformer-for-Methane-Detection" -> "UCSB-VRL/bisqueUCSB"
"littlebeen/Remote-Sensing-Super-resolution-Model-Collection" -> "littlebeen/ASDDPM-Adaptive-Semantic-Enhanced-DDPM"
"aurotripathy/ssd-spacenet" -> "developmentseed/spacenet-data"
"SynxFlow/SynxFlow" -> "HEMLab/HiPIMS-CUDA"
"cholmes/duckdb-geoparquet-tutorials" -> "planetlabs/gpq"
"Esri/local-government-desktop-addins" -> "Esri/photo-survey"
"ESDS-Leipzig/sen2nbar" -> "senbox-org/sen2like"
"geographyclub/postgis-cookbook" -> "geographyclub/gis-from-command-line"
"XavierJiezou/DiffCR" -> "PatrickTUM/UnCRtainTS"
"XavierJiezou/DiffCR" -> "Ly403/EMRDM"
"opendatacube/datacube-stats" -> "GeoscienceAustralia/burn-mapping"
"SlideRuleEarth/h5coro" -> "nsidc/cloud-optimized-icesat2"
"SlideRuleEarth/h5coro" -> "jonm3D/h5xray"
"SlideRuleEarth/h5coro" -> "SlideRuleEarth/sliderule"
"mapbox/rio-cloudmask" -> "mapbox/rio-toa"
"mapbox/rio-cloudmask" -> "sinergise/Sentinel2ProductIngestor"
"ANRGenstar/genstar" -> "r-and-gama/gamar"
"SWOT-JPL/swotsimulator" -> "CNES/swot_simulator"
"jonm3D/h5xray" -> "nsidc/cloud-optimized-icesat2"
"jonm3D/h5xray" -> "SlideRuleEarth/h5coro"
"mapbox/rio-toa" -> "mapbox/rio-cloudmask"
"nsidc/cloud-optimized-icesat2" -> "jonm3D/h5xray"
"nsidc/cloud-optimized-icesat2" -> "SlideRuleEarth/h5coro"
"Coordi777/Conditional-Diffusion-for-SAR-to-Optical-Image-Translation" -> "Coordi777/ACD_S2ODPM"
"Coordi777/Conditional-Diffusion-for-SAR-to-Optical-Image-Translation" -> "MarsZhaoYT/SAR2Opt-Heterogeneous-Dataset"
"Coordi777/Conditional-Diffusion-for-SAR-to-Optical-Image-Translation" -> "JessieZ96/SAR-to-Optical"
"Turbo87/utm" -> "pyproj4/pyproj"
"Turbo87/utm" -> "corteva/rioxarray"
"Turbo87/utm" -> "geopandas/dask-geopandas"
"Turbo87/utm" -> "mrJean1/PyGeodesy" ["e"=1]
"Turbo87/utm" -> "opendatacube/odc-stac"
"Turbo87/utm" -> "laspy/laspy" ["e"=1]
"Turbo87/utm" -> "stac-utils/stactools"
"Turbo87/utm" -> "makepath/xarray-spatial"
"Turbo87/utm" -> "geospace-code/pymap3d" ["e"=1]
"Maximkaaa/galileo" -> "georust/geozero"
"Maximkaaa/galileo" -> "frewsxcv/rgis"
"Maximkaaa/galileo" -> "maplibre/maplibre-rs" ["e"=1]
"Maximkaaa/galileo" -> "geoarrow/geoarrow-rs"
"Maximkaaa/galileo" -> "georust/gdal"
"Maximkaaa/galileo" -> "pka/awesome-georust"
"Maximkaaa/galileo" -> "geoarrow/geoarrow"
"Maximkaaa/galileo" -> "alceal/plotlars" ["e"=1]
"Maximkaaa/galileo" -> "podusowski/walkers" ["e"=1]
"Maximkaaa/galileo" -> "maplibre/maplibre-tile-spec" ["e"=1]
"Maximkaaa/galileo" -> "flatgeobuf/flatgeobuf" ["e"=1]
"Maximkaaa/galileo" -> "kylebarron/geo-index"
"Maximkaaa/galileo" -> "georust/geo"
"kr-stn/awesome-sentinel" -> "sentinelsat/sentinelsat"
"kr-stn/awesome-sentinel" -> "sentinel-hub/sentinelhub-py"
"kr-stn/awesome-sentinel" -> "sentinel-hub/sentinel2-cloud-detector"
"kr-stn/awesome-sentinel" -> "olivierhagolle/Sentinel-download"
"kr-stn/awesome-sentinel" -> "acgeospatial/awesome-earthobservation-code"
"kr-stn/awesome-sentinel" -> "johntruckenbrodt/pyroSAR" ["e"=1]
"kr-stn/awesome-sentinel" -> "sentinel-hub/eo-learn"
"kr-stn/awesome-sentinel" -> "sentinel-hub/custom-scripts"
"kr-stn/awesome-sentinel" -> "radiantearth/stac-spec"
"kr-stn/awesome-sentinel" -> "CNES/MAJA" ["e"=1]
"kr-stn/awesome-sentinel" -> "corteva/rioxarray"
"kr-stn/awesome-sentinel" -> "sertit/eoreader" ["e"=1]
"kr-stn/awesome-sentinel" -> "chrieke/awesome-geospatial-companies"
"kr-stn/awesome-sentinel" -> "davidfrantz/force"
"kr-stn/awesome-sentinel" -> "bopen/xarray-sentinel" ["e"=1]
"rafiibnsultan/GeoSAM" -> "Chief-byte/RSAM-Seg"
"UDST/urbanaccess" -> "UDST/pandana"
"UDST/urbanaccess" -> "UDST/osmnet"
"UDST/urbanaccess" -> "kuanb/peartree" ["e"=1]
"UDST/urbanaccess" -> "UDST/urbansim"
"UDST/urbanaccess" -> "oturns/geosnap"
"UDST/urbanaccess" -> "ipeaGIT/r5r" ["e"=1]
"UDST/urbanaccess" -> "UDST/choicemodels"
"UDST/urbanaccess" -> "waddell/urban-informatics-and-visualization"
"UDST/urbanaccess" -> "r-transit/tidytransit" ["e"=1]
"UDST/urbanaccess" -> "conveyal/r5" ["e"=1]
"UDST/urbanaccess" -> "Esri/public-transit-tools" ["e"=1]
"UDST/urbanaccess" -> "ibi-group/datatools-ui" ["e"=1]
"UDST/urbanaccess" -> "higgicd/Accessibility_Toolbox"
"UDST/urbanaccess" -> "Bondify/gtfs_functions" ["e"=1]
"UDST/urbanaccess" -> "CxAalto/gtfspy" ["e"=1]
"ualsg/global-streetscapes" -> "koito19960406/ZenSVI"
"ualsg/global-streetscapes" -> "gastruc/osv5m" ["e"=1]
"ualsg/global-streetscapes" -> "ualsg/GANmapper"
"ualsg/global-streetscapes" -> "robolyst/streetview"
"ualsg/global-streetscapes" -> "winstonyym/urbanity"
"ualsg/global-streetscapes" -> "seai-lab/TorchSpatial" ["e"=1]
"gbrunner/programming-for-gis-and-rs" -> "gbrunner/adv-programming-for-gis-and-rs"
"r-barnes/richdem" -> "dtarb/TauDEM"
"r-barnes/richdem" -> "mdbartos/pysheds"
"r-barnes/richdem" -> "creare-com/pydem"
"r-barnes/richdem" -> "landlab/landlab"
"r-barnes/richdem" -> "perrygeo/python-rasterstats"
"r-barnes/richdem" -> "corteva/rioxarray"
"r-barnes/richdem" -> "jblindsay/whitebox-tools"
"r-barnes/richdem" -> "openstreams/wflow" ["e"=1]
"r-barnes/richdem" -> "opengeos/whitebox-python"
"OvertureMaps/overturemaps-py" -> "OvertureMaps/schema"
"OvertureMaps/overturemaps-py" -> "planetlabs/gpq"
"OvertureMaps/overturemaps-py" -> "cholmes/qgis_plugin_gpq_downloader"
"OvertureMaps/overturemaps-py" -> "kraina-ai/overturemaestro"
"SWOT-community/SWOT-Oceanography" -> "SWOT-community/SWOT-OpenToolkit"
"dwtkns/gdal-cheat-sheet" -> "developmentseed/landsat-util"
"dwtkns/gdal-cheat-sheet" -> "rasterio/rasterio"
"dwtkns/gdal-cheat-sheet" -> "sentinelsat/sentinelsat"
"dwtkns/gdal-cheat-sheet" -> "sacridini/Awesome-Geospatial"
"dwtkns/gdal-cheat-sheet" -> "mapbox/tippecanoe" ["e"=1]
"dwtkns/gdal-cheat-sheet" -> "mbloch/mapshaper" ["e"=1]
"dwtkns/gdal-cheat-sheet" -> "acgeospatial/awesome-earthobservation-code"
"dwtkns/gdal-cheat-sheet" -> "perrygeo/python-rasterstats"
"dwtkns/gdal-cheat-sheet" -> "radiantearth/stac-spec"
"dwtkns/gdal-cheat-sheet" -> "kr-stn/awesome-sentinel"
"dwtkns/gdal-cheat-sheet" -> "gina-alaska/dans-gdal-scripts"
"dwtkns/gdal-cheat-sheet" -> "tmcw/awesome-geojson" ["e"=1]
"dwtkns/gdal-cheat-sheet" -> "OpenGeoscience/geonotebook"
"dwtkns/gdal-cheat-sheet" -> "developmentseed/titiler"
"dwtkns/gdal-cheat-sheet" -> "gee-community/qgis-earthengine-plugin"
"littlebeen/Cloud-removal-model-collection" -> "littlebeen/DDPM-Enhancement-for-Cloud-Removal"
"littlebeen/Cloud-removal-model-collection" -> "littlebeen/Remote-Sensing-Super-resolution-Model-Collection"
"littlebeen/Cloud-removal-model-collection" -> "littlebeen/ASDDPM-Adaptive-Semantic-Enhanced-DDPM"
"treigerm/WaterNet" -> "developmentseed/skynet-data"
"treigerm/WaterNet" -> "mitmul/ssai-cnn"
"treigerm/WaterNet" -> "developmentseed/skynet-train"
"nshaud/DeepNetsForEO" -> "mitmul/ssai-cnn"
"nshaud/DeepNetsForEO" -> "azavea/raster-vision"
"nshaud/DeepNetsForEO" -> "chrieke/InstanceSegmentation_Sentinel2"
"nshaud/DeepNetsForEO" -> "sshuair/torchsat"
"nshaud/DeepNetsForEO" -> "sentinel-hub/eo-learn"
"nshaud/DeepNetsForEO" -> "nshaud/DeepHyperX" ["e"=1]
"nshaud/DeepNetsForEO" -> "jensleitloff/CNN-Sentinel"
"nshaud/DeepNetsForEO" -> "trailbehind/DeepOSM"
"nshaud/DeepNetsForEO" -> "SpaceNetChallenge/BuildingDetectors" ["e"=1]
"nshaud/DeepNetsForEO" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"nshaud/DeepNetsForEO" -> "developmentseed/label-maker"
"nshaud/DeepNetsForEO" -> "manideep2510/eye-in-the-sky"
"nshaud/DeepNetsForEO" -> "AstarLight/Satellite-Segmentation"
"nshaud/DeepNetsForEO" -> "rmkemker/EarthMapper"
"nshaud/DeepNetsForEO" -> "lehaifeng/SCAttNet"
"kraina-ai/quackosm" -> "duckdb/duckdb-spatial"
"kraina-ai/quackosm" -> "isaacbrodsky/h3-duckdb"
"kraina-ai/quackosm" -> "planetlabs/gpq"
"kraina-ai/quackosm" -> "kraina-ai/srai"
"kraina-ai/quackosm" -> "uscuni/neatnet"
"kraina-ai/quackosm" -> "developmentseed/lonboard"
"kraina-ai/quackosm" -> "OvertureMaps/overture-tiles"
"kraina-ai/quackosm" -> "geoarrow/geoarrow"
"kraina-ai/quackosm" -> "Youssef-Harby/OvertureMapsDownloader"
"kraina-ai/quackosm" -> "geoarrow/geoarrow-rs"
"kraina-ai/quackosm" -> "geoarrow/geoarrow-python"
"kraina-ai/quackosm" -> "cholmes/duckdb-geoparquet-tutorials"
"kraina-ai/quackosm" -> "geoarrow/deck.gl-layers"
"kraina-ai/quackosm" -> "OvertureMaps/overturemaps-py"
"aleksandrskoselevs/place-pulse-dataset" -> "rsangers/explainable_perception"
"kylebarron/geo-index" -> "stac-utils/rustac"
"klakar/QGIS_resources" -> "All4Gis/QGIS-cheat-sheet" ["e"=1]
"hyparam/hyparquet" -> "hyparam/hightable"
"hyparam/hyparquet" -> "hyparam/hyllama"
"hyparam/hyparquet" -> "hyparam/icebird"
"hyparam/hyparquet" -> "hyparam/hysnappy"
"hyparam/hyparquet" -> "hyparam/geoparquet"
"hyparam/hyparquet" -> "hyparam/hyparquet-writer"
"hyparam/hyparquet" -> "uwdata/flechette"
"hyparam/hyparquet" -> "hyparam/hyparquet-compressors"
"hyparam/hyparquet" -> "hyparam/hyperparam-cli"
"hyparam/hyparquet" -> "kylebarron/parquet-wasm"
"hyparam/hyparquet" -> "duckdb/duckdb-spatial"
"hyparam/hyparquet" -> "dfsnow/opentimes"
"hyparam/hyparquet" -> "LibertyDSNP/parquetjs"
"hyparam/hightable" -> "hyparam/hyperparam-cli"
"hyparam/hightable" -> "hyparam/icebird"
"hyparam/hightable" -> "hyparam/hyllama"
"hyparam/hightable" -> "hyparam/hyparquet-writer"
"hyparam/hightable" -> "hyparam/hysnappy"
"samsammurphy/6S_emulator" -> "robintw/Py6S"
"AlexArcPy/python-for-gis-progression-path" -> "AlexArcPy/registrant"
"littlebeen/ASDDPM-Adaptive-Semantic-Enhanced-DDPM" -> "littlebeen/Remote-Sensing-Super-resolution-Model-Collection"
"littlebeen/ASDDPM-Adaptive-Semantic-Enhanced-DDPM" -> "littlebeen/DDPM-Enhancement-for-Cloud-Removal"
"fusedio/udfs" -> "developmentseed/lonboard"
"fusedio/udfs" -> "isaacbrodsky/h3-duckdb"
"fusedio/udfs" -> "Clay-foundation/model" ["e"=1]
"fusedio/udfs" -> "developmentseed/eoAPI"
"fusedio/udfs" -> "planetlabs/gpq"
"fusedio/udfs" -> "IBM/terratorch" ["e"=1]
"fusedio/udfs" -> "fusedio/fused-mcp"
"cmosig/sentle" -> "awesome-spectral-indices/SpectralIndices.jl"
"cmosig/sentle" -> "JuliaDataCubes/EarthDataLab.jl" ["e"=1]
"georust/geos" -> "georust/gdal"
"georust/geos" -> "georust/geojson"
"littlebeen/DDPM-Enhancement-for-Cloud-Removal" -> "littlebeen/Cloud-removal-model-collection"
"littlebeen/DDPM-Enhancement-for-Cloud-Removal" -> "littlebeen/ASDDPM-Adaptive-Semantic-Enhanced-DDPM"
"opengeos/HyperCoast" -> "alxmrs/dask-ee"
"amforte/Topographic-Analysis-Kit" -> "amforte/DivideTools"
"Margin1996/Assisted_learning" -> "XD-MG/DDHRNet"
"hyparam/hyllama" -> "hyparam/hyperparam-cli"
"hyparam/hyllama" -> "hyparam/hysnappy"
"hyparam/hyllama" -> "hyparam/hightable"
"hyparam/hysnappy" -> "hyparam/hyparquet-compressors"
"hyparam/hyparquet-compressors" -> "hyparam/hysnappy"
"hyparam/hyparquet-compressors" -> "hyparam/hyperparam-cli"
"amforte/DivideTools" -> "sfgallen/ChiProfiler"
"pysal/pysal" -> "pysal/momepy"
"pysal/pysal" -> "pysal/libpysal"
"pysal/pysal" -> "pysal/spopt"
"pysal/pysal" -> "movingpandas/movingpandas"
"pysal/pysal" -> "makepath/xarray-spatial"
"pysal/pysal" -> "geopandas/dask-geopandas"
"pysal/pysal" -> "pysal/esda"
"pysal/pysal" -> "gdsbook/book"
"pysal/pysal" -> "pysal/mgwr"
"pysal/pysal" -> "geopandas/contextily"
"pysal/pysal" -> "geopandas/geopandas"
"pysal/pysal" -> "ResidentMario/geoplot"
"pysal/pysal" -> "GeoDaCenter/geoda"
"pysal/pysal" -> "Toblerity/Fiona"
"pysal/pysal" -> "corteva/rioxarray"
"kscottz/PythonFromSpace" -> "sarasafavi/remote-sensing-with-python"
"kscottz/PythonFromSpace" -> "planetlabs/notebooks"
"kscottz/PythonFromSpace" -> "mortcanty/CRCPython"
"kscottz/PythonFromSpace" -> "ceholden/open-geo-tutorial"
"kscottz/PythonFromSpace" -> "bleutner/RStoolbox" ["e"=1]
"kscottz/PythonFromSpace" -> "acgeospatial/Satellite_Imagery_Python"
"kscottz/PythonFromSpace" -> "sentinel-hub/eo-learn"
"kscottz/PythonFromSpace" -> "acgeospatial/awesome-earthobservation-code"
"kscottz/PythonFromSpace" -> "wenhwu/awesome-remote-sensing-change-detection" ["e"=1]
"kscottz/PythonFromSpace" -> "sentinelsat/sentinelsat"
"kscottz/PythonFromSpace" -> "developmentseed/label-maker"
"kscottz/PythonFromSpace" -> "awesome-spectral-indices/awesome-spectral-indices"
"kscottz/PythonFromSpace" -> "jqtrde/remote"
"kscottz/PythonFromSpace" -> "kr-stn/awesome-sentinel"
"kscottz/PythonFromSpace" -> "olivierhagolle/Sentinel-download"
"descarteslabs/descarteslabs-python" -> "stac-utils/pystac-client"
"giswqs/geog-312" -> "giswqs/geog-510"
"giswqs/geog-312" -> "opengeos/geoai"
"giswqs/geog-312" -> "yotarazona/scikit-eo"
"giswqs/geog-312" -> "opengeos/maxar-open-data"
"giswqs/geog-312" -> "geojupyter/jupytergis"
"giswqs/geog-312" -> "giswqs/geog-414"
"giswqs/geog-312" -> "geo-python/site"
"giswqs/geog-312" -> "NASAARSET/ARSET_ML_Fundamentals" ["e"=1]
"giswqs/geog-312" -> "opengeos/HyperCoast"
"giswqs/geog-312" -> "mszell/geospatialdatascience"
"azavea/raster-vision" -> "mapbox/robosat"
"azavea/raster-vision" -> "microsoft/torchgeo"
"azavea/raster-vision" -> "chrieke/awesome-satellite-imagery-datasets"
"azavea/raster-vision" -> "sentinel-hub/eo-learn"
"azavea/raster-vision" -> "acgeospatial/awesome-earthobservation-code"
"azavea/raster-vision" -> "rasterio/rasterio"
"azavea/raster-vision" -> "opengeos/segment-geospatial"
"azavea/raster-vision" -> "awesome-spectral-indices/awesome-spectral-indices"
"azavea/raster-vision" -> "sacridini/Awesome-Geospatial"
"azavea/raster-vision" -> "developmentseed/label-maker"
"azavea/raster-vision" -> "nshaud/DeepNetsForEO"
"azavea/raster-vision" -> "deepVector/geospatial-machine-learning"
"azavea/raster-vision" -> "sentinelsat/sentinelsat"
"azavea/raster-vision" -> "radiantearth/stac-spec"
"azavea/raster-vision" -> "CosmiQ/solaris" ["e"=1]
"mortcanty/earthengine" -> "jldowns/google_earth_engine_notebook"
"mortcanty/earthengine" -> "gee-community/ee-tensorflow-notebooks"
"mortcanty/earthengine" -> "mortcanty/CRCPython"
"mortcanty/earthengine" -> "mortcanty/CRC4Docker"
"mortcanty/earthengine" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"mortcanty/earthengine" -> "eMapR/LT-GEE"
"project-open-data/esri2open" -> "Esri/local-government-desktop-addins"
"opendatacube/datacube-ows" -> "opendatacube/eo-datasets"
"opendatacube/datacube-ows" -> "GeoscienceAustralia/dea-config"
"opendatacube/datacube-ows" -> "edwardpmorris/docker-snap"
"gee-community/geetools" -> "fitoprincipe/geetools-code-editor"
"gee-community/geetools" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"gee-community/geetools" -> "kr-stn/EarthEngine_scripts"
"gee-community/geetools" -> "gee-community/qgis-earthengine-plugin"
"gee-community/geetools" -> "davemlz/eemont"
"gee-community/geetools" -> "gee-community/ee-palettes"
"gee-community/geetools" -> "eMapR/LT-GEE"
"gee-community/geetools" -> "opengeos/Awesome-GEE"
"gee-community/geetools" -> "samapriya/awesome-gee-community-datasets"
"gee-community/geetools" -> "giswqs/qgis-earthengine-examples"
"gee-community/geetools" -> "giswqs/earthengine-py-notebooks"
"gee-community/geetools" -> "gee-community/awesome-google-earth-engine"
"gee-community/geetools" -> "google/earthengine-community"
"gee-community/geetools" -> "mortcanty/earthengine"
"gee-community/geetools" -> "csaybar/EEwPython"
"gee-community/awesome-google-earth-engine" -> "gee-community/example-scripts"
"gee-community/awesome-google-earth-engine" -> "jldowns/google_earth_engine_notebook"
"gee-community/awesome-google-earth-engine" -> "gee-community/ee-runner"
"gee-community/awesome-google-earth-engine" -> "gee-community/ee-jupyter-contrib"
"gee-community/awesome-google-earth-engine" -> "tracek/gee_asset_manager"
"pysal/esda" -> "pysal/libpysal"
"pysal/esda" -> "pysal/spaghetti"
"pysal/esda" -> "pysal/mapclassify"
"pysal/esda" -> "pysal/segregation"
"pysal/esda" -> "pysal/splot"
"pysal/esda" -> "pysal/giddy"
"pysal/esda" -> "holoviz/spatialpandas"
"pysal/esda" -> "pysal/momepy"
"pysal/esda" -> "stevenpawley/Pyspatialml"
"pysal/spaghetti" -> "pysal/esda"
"pysal/spaghetti" -> "pysal/libpysal"
"pysal/spaghetti" -> "oturns/geosnap"
"pysal/spaghetti" -> "pysal/spopt"
"pysal/spaghetti" -> "pysal/momepy"
"pysal/spaghetti" -> "pysal/tobler"
"pysal/spaghetti" -> "holoviz/spatialpandas"
"pysal/spaghetti" -> "pysal/mapclassify"
"pysal/spaghetti" -> "pysal/segregation"
"pysal/spaghetti" -> "pysal/splot"
"pysal/spaghetti" -> "makepath/xarray-spatial"
"pysal/spaghetti" -> "pysal/giddy"
"JiaxuanYou/crop_yield_prediction" -> "gabrieltseng/pycrop-yield-prediction"
"JiaxuanYou/crop_yield_prediction" -> "cleipski/CropPredict"
"JiaxuanYou/crop_yield_prediction" -> "saeedkhaki92/CNN-RNN-Yield-Prediction"
"JiaxuanYou/crop_yield_prediction" -> "AnnaXWang/deep-transfer-learning-crop-prediction"
"JiaxuanYou/crop_yield_prediction" -> "meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery"
"JiaxuanYou/crop_yield_prediction" -> "brad-ross/crop-yield-prediction-project"
"JiaxuanYou/crop_yield_prediction" -> "saeedkhaki92/Yield-Prediction-DNN"
"JiaxuanYou/crop_yield_prediction" -> "VaibhavSaini19/Crop-Yield-Prediction-using-ML"
"JiaxuanYou/crop_yield_prediction" -> "AkshanshChahal/ML-in-Agriculture"
"JiaxuanYou/crop_yield_prediction" -> "mahimatendulkar/Crop-Yield-Prediction-and-Estimation-using-Time-series-remote-sensing-data."
"JiaxuanYou/crop_yield_prediction" -> "chrieke/InstanceSegmentation_Sentinel2"
"JiaxuanYou/crop_yield_prediction" -> "ermongroup/Crop_Yield_Prediction"
"JiaxuanYou/crop_yield_prediction" -> "dl4sits/BreizhCrops" ["e"=1]
"JiaxuanYou/crop_yield_prediction" -> "nasaharvest/cropharvest" ["e"=1]
"JiaxuanYou/crop_yield_prediction" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"cleipski/CropPredict" -> "gabrieltseng/pycrop-yield-prediction"
"cleipski/CropPredict" -> "adamjstewart/crop_yield_prediction"
"cleipski/CropPredict" -> "saeedkhaki92/Yield-Prediction-DNN"
"geojupyter/jupytergis" -> "developmentseed/lonboard"
"geojupyter/jupytergis" -> "cloudnativegeo/cloud-optimized-geospatial-formats-guide"
"geojupyter/jupytergis" -> "xarray-contrib/xdggs" ["e"=1]
"geojupyter/jupytergis" -> "geopandas/pyogrio"
"mdbartos/pysheds" -> "raoulcollenteur/Python-Hydrology-Tools" ["e"=1]
"mdbartos/pysheds" -> "r-barnes/richdem"
"mdbartos/pysheds" -> "corteva/rioxarray"
"mdbartos/pysheds" -> "makepath/xarray-spatial"
"mdbartos/pysheds" -> "jblindsay/whitebox-tools"
"mdbartos/pysheds" -> "pastas/pastas" ["e"=1]
"mdbartos/pysheds" -> "landlab/landlab"
"mdbartos/pysheds" -> "fatiando/verde" ["e"=1]
"mdbartos/pysheds" -> "earthlab/earthpy"
"mdbartos/pysheds" -> "neuralhydrology/neuralhydrology" ["e"=1]
"mdbartos/pysheds" -> "pyswmm/pyswmm" ["e"=1]
"mdbartos/pysheds" -> "opengeos/whitebox-python"
"mdbartos/pysheds" -> "dtarb/TauDEM"
"mdbartos/pysheds" -> "perrygeo/python-rasterstats"
"mdbartos/pysheds" -> "Servir-Mekong/hydra-floods"
"gbrunner/adv-programming-for-gis-and-rs" -> "gbrunner/programming-for-gis-and-rs"
"ternaus/kaggle_dstl_submission" -> "rogerxujiang/dstl_unet"
"ternaus/kaggle_dstl_submission" -> "lopuhin/kaggle-dstl"
"ternaus/kaggle_dstl_submission" -> "DeepVoltaire/Dstl-Satellite-Imagery-Feature-Detection"
"ternaus/kaggle_dstl_submission" -> "ternaus/TernausNetV2" ["e"=1]
"ternaus/kaggle_dstl_submission" -> "Vooban/Smoothly-Blend-Image-Patches"
"ternaus/kaggle_dstl_submission" -> "toshi-k/kaggle-satellite-imagery-feature-detection"
"ternaus/kaggle_dstl_submission" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"zizhaozhang/unet-tensorflow-keras" -> "pietz/unet-keras"
"zizhaozhang/unet-tensorflow-keras" -> "ankurhanda/tf-unet"
"zizhaozhang/unet-tensorflow-keras" -> "Kaido0/Brain-Tissue-Segment-Keras"
"zizhaozhang/unet-tensorflow-keras" -> "ZFTurbo/ZF_UNET_224_Pretrained_Model"
"quaquel/pyNetLogo" -> "chathika/NL4Py"
"quaquel/pyNetLogo" -> "qiemem/PythonExtension"
"amir32002/3D_Street_View" -> "robolyst/streetview"
"amir32002/3D_Street_View" -> "google-deepmind/streetlearn" ["e"=1]
"amir32002/3D_Street_View" -> "cvlab-dresden/DSAC" ["e"=1]
"amir32002/3D_Street_View" -> "cityjson/cjio" ["e"=1]
"amir32002/3D_Street_View" -> "niessner/Matterport" ["e"=1]
"samsammurphy/gee-atmcorr-S2" -> "samsammurphy/ee-atmcorr-timeseries"
"samsammurphy/gee-atmcorr-S2" -> "MarcYin/SIAC_GEE"
"samsammurphy/gee-atmcorr-S2" -> "ndminhhus/geeguide"
"samsammurphy/gee-atmcorr-S2" -> "robintw/Py6S"
"samsammurphy/gee-atmcorr-S2" -> "samsammurphy/6S_emulator"
"samsammurphy/gee-atmcorr-S2" -> "samsammurphy/cloud-masking-sentinel2"
"samsammurphy/gee-atmcorr-S2" -> "MarcYin/SIAC"
"frewsxcv/rgis" -> "pka/awesome-georust"
"frewsxcv/rgis" -> "georust/geozero"
"frewsxcv/rgis" -> "Maximkaaa/galileo"
"frewsxcv/rgis" -> "busstoptaktik/geodesy"
"frewsxcv/rgis" -> "geoarrow/geoarrow-rs"
"opengeospatial/ogcapi-processes" -> "opengeospatial/ogcapi-common"
"lopuhin/kaggle-dstl" -> "toshi-k/kaggle-satellite-imagery-feature-detection"
"lopuhin/kaggle-dstl" -> "ternaus/kaggle_dstl_submission"
"lopuhin/kaggle-dstl" -> "rogerxujiang/dstl_unet"
"lopuhin/kaggle-dstl" -> "DeepVoltaire/Dstl-Satellite-Imagery-Feature-Detection"
"lopuhin/kaggle-dstl" -> "EKami/planet-amazon-deforestation"
"pysal/libpysal" -> "pysal/esda"
"pysal/libpysal" -> "pysal/spaghetti"
"pysal/libpysal" -> "pysal/pysal"
"pysal/libpysal" -> "pysal/spopt"
"pysal/libpysal" -> "pysal/momepy"
"pysal/libpysal" -> "pysal/mapclassify"
"pysal/libpysal" -> "corteva/geocube"
"pysal/libpysal" -> "pysal/splot"
"pysal/libpysal" -> "pysal/giddy"
"pysal/libpysal" -> "corteva/rioxarray"
"pysal/libpysal" -> "geopandas/dask-geopandas"
"pysal/libpysal" -> "pysal/segregation"
"pysal/libpysal" -> "pysal/pointpats"
"pysal/libpysal" -> "geopandas/contextily"
"pysal/libpysal" -> "pysal/tobler"
"dtarb/TauDEM" -> "r-barnes/richdem"
"dtarb/TauDEM" -> "NOAA-OWP/inundation-mapping" ["e"=1]
"dtarb/TauDEM" -> "mdbartos/pysheds"
"dtarb/TauDEM" -> "opengeos/whitebox-python"
"dtarb/TauDEM" -> "creare-com/pydem"
"dtarb/TauDEM" -> "cybergis/nfie-floodmap"
"samapriya/gee_asset_manager_addon" -> "samapriya/geeup"
"UDST/osmnet" -> "UDST/urbanaccess"
"MartinuzziFrancesco/RecurrentLayers.jl" -> "awesome-spectral-indices/SpectralIndices.jl"
"pietz/unet-keras" -> "zizhaozhang/unet-tensorflow-keras"
"toshi-k/kaggle-satellite-imagery-feature-detection" -> "DeepVoltaire/Dstl-Satellite-Imagery-Feature-Detection"
"toshi-k/kaggle-satellite-imagery-feature-detection" -> "lopuhin/kaggle-dstl"
"sfgallen/ChiProfiler" -> "amforte/DivideTools"
"planetlabs/planet-amazon-deforestation" -> "EKami/planet-amazon-deforestation"
"jldowns/google_earth_engine_notebook" -> "mortcanty/earthengine"
"jldowns/google_earth_engine_notebook" -> "tylere/ee-jupyter-examples"
"jldowns/google_earth_engine_notebook" -> "gee-community/awesome-google-earth-engine"
"jldowns/google_earth_engine_notebook" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"jldowns/google_earth_engine_notebook" -> "samapriya/Planet-GEE-Pipeline-GUI"
"pysal/mapclassify" -> "pysal/splot"
"pysal/mapclassify" -> "pysal/segregation"
"pysal/mapclassify" -> "pysal/esda"
"pysal/mapclassify" -> "pysal/tobler"
"DeepVoltaire/Dstl-Satellite-Imagery-Feature-Detection" -> "toshi-k/kaggle-satellite-imagery-feature-detection"
"developmentseed/skynet-scrub-server" -> "developmentseed/skynet-scrub"
"developmentseed/skynet-scrub" -> "developmentseed/skynet-scrub-server"
"pysal/splot" -> "pysal/giddy"
"pysal/splot" -> "pysal/segregation"
"uwdata/flechette" -> "alexkreidler/mosaic-playground" ["e"=1]
"planetlabs/notebooks" -> "planetlabs/planet-client-python"
"planetlabs/notebooks" -> "acgeospatial/awesome-earthobservation-code"
"planetlabs/notebooks" -> "sentinel-hub/eo-learn"
"planetlabs/notebooks" -> "kscottz/PythonFromSpace"
"planetlabs/notebooks" -> "gee-community/geetools"
"planetlabs/notebooks" -> "sentinel-hub/custom-scripts"
"planetlabs/notebooks" -> "awesome-spectral-indices/awesome-spectral-indices"
"planetlabs/notebooks" -> "giswqs/earthengine-py-notebooks"
"planetlabs/notebooks" -> "azavea/raster-vision"
"planetlabs/notebooks" -> "sentinelsat/sentinelsat"
"planetlabs/notebooks" -> "kr-stn/awesome-sentinel"
"planetlabs/notebooks" -> "radiantearth/stac-spec"
"planetlabs/notebooks" -> "deepVector/geospatial-machine-learning"
"planetlabs/notebooks" -> "davemlz/eemont"
"planetlabs/notebooks" -> "azavea/raster-vision-examples"
"gboeing/osmnx-examples" -> "gboeing/osmnx"
"gboeing/osmnx-examples" -> "gboeing/ppde642"
"gboeing/osmnx-examples" -> "movingpandas/movingpandas"
"gboeing/osmnx-examples" -> "scikit-mobility/scikit-mobility"
"gboeing/osmnx-examples" -> "pyrosm/pyrosm"
"gboeing/osmnx-examples" -> "pysal/momepy"
"gboeing/osmnx-examples" -> "UDST/pandana"
"gboeing/osmnx-examples" -> "pysal/pysal"
"gboeing/osmnx-examples" -> "mszell/geospatialdatascience"
"gboeing/osmnx-examples" -> "UDST/urbanaccess"
"gboeing/osmnx-examples" -> "waddell/urban-informatics-and-visualization"
"gboeing/osmnx-examples" -> "geopandas/geopandas"
"gboeing/osmnx-examples" -> "mocnik-science/osm-python-tools" ["e"=1]
"gboeing/osmnx-examples" -> "geopandas/contextily"
"gboeing/osmnx-examples" -> "OpenGeoscience/geonotebook"
"awslabs/open-data-registry" -> "developmentseed/geolambda"
"awslabs/open-data-registry" -> "stac-utils/pystac"
"awslabs/open-data-registry" -> "radiantearth/stac-browser"
"awslabs/open-data-registry" -> "radiantearth/stac-spec"
"awslabs/open-data-registry" -> "gjoseph92/stackstac"
"awslabs/open-data-registry" -> "stac-utils/pystac-client"
"awslabs/open-data-registry" -> "awslabs/aws-well-architected-labs" ["e"=1]
"awslabs/open-data-registry" -> "aws/aws-graviton-getting-started" ["e"=1]
"awslabs/open-data-registry" -> "sat-utils/sat-search"
"awslabs/open-data-registry" -> "johntruckenbrodt/pyroSAR" ["e"=1]
"awslabs/open-data-registry" -> "opengeospatial/geoparquet"
"awslabs/open-data-registry" -> "aws/aws-sdk-pandas" ["e"=1]
"awslabs/open-data-registry" -> "jblindsay/whitebox-tools"
"awslabs/open-data-registry" -> "sentinel-hub/eo-learn"
"awslabs/open-data-registry" -> "cogeotiff/rio-tiler"
"GeoRetina/chat2geo" -> "jjsantos01/qgis_mcp"
"GeoRetina/chat2geo" -> "giswqs/geog-510"
"GeoRetina/chat2geo" -> "opengeos/geoai"
"GeoRetina/chat2geo" -> "geocompx/geocompy"
"GeoRetina/chat2geo" -> "geojupyter/jupytergis"
"GeoRetina/chat2geo" -> "earth-genome/ChatGeoPT" ["e"=1]
"python-visualization/folium" -> "geopandas/geopandas"
"python-visualization/folium" -> "geopy/geopy"
"python-visualization/folium" -> "gboeing/osmnx"
"python-visualization/folium" -> "vega/altair" ["e"=1]
"python-visualization/folium" -> "jupyter-widgets/ipyleaflet" ["e"=1]
"python-visualization/folium" -> "holoviz/datashader" ["e"=1]
"python-visualization/folium" -> "bokeh/bokeh" ["e"=1]
"python-visualization/folium" -> "keplergl/kepler.gl" ["e"=1]
"python-visualization/folium" -> "shapely/shapely"
"python-visualization/folium" -> "dask/dask" ["e"=1]
"python-visualization/folium" -> "mwaskom/seaborn" ["e"=1]
"python-visualization/folium" -> "plotly/dash" ["e"=1]
"python-visualization/folium" -> "rasterio/rasterio"
"python-visualization/folium" -> "ydataai/ydata-profiling" ["e"=1]
"python-visualization/folium" -> "plotly/plotly.py" ["e"=1]
"sentinel-hub/sentinelhub-py" -> "sentinel-hub/sentinel2-cloud-detector"
"sentinel-hub/sentinelhub-py" -> "sentinel-hub/eo-learn"
"sentinel-hub/sentinelhub-py" -> "sentinelsat/sentinelsat"
"sentinel-hub/sentinelhub-py" -> "kr-stn/awesome-sentinel"
"sentinel-hub/sentinelhub-py" -> "sentinel-hub/custom-scripts"
"sentinel-hub/sentinelhub-py" -> "olivierhagolle/Sentinel-download"
"sentinel-hub/sentinelhub-py" -> "johntruckenbrodt/pyroSAR" ["e"=1]
"sentinel-hub/sentinelhub-py" -> "azavea/raster-vision"
"sentinel-hub/sentinelhub-py" -> "opendatacube/datacube-core"
"sentinel-hub/sentinelhub-py" -> "rasterio/rasterio"
"sentinel-hub/sentinelhub-py" -> "developmentseed/landsat-util"
"sentinel-hub/sentinelhub-py" -> "makepath/xarray-spatial"
"sentinel-hub/sentinelhub-py" -> "radiantearth/stac-spec"
"sentinel-hub/sentinelhub-py" -> "corteva/rioxarray"
"sentinel-hub/sentinelhub-py" -> "CS-SI/eodag"
"chrieke/InstanceSegmentation_Sentinel2" -> "sentinel-hub/field-delineation" ["e"=1]
"chrieke/InstanceSegmentation_Sentinel2" -> "feevos/resuneta"
"chrieke/InstanceSegmentation_Sentinel2" -> "jensleitloff/CNN-Sentinel"
"chrieke/InstanceSegmentation_Sentinel2" -> "sentinel-hub/eo-learn"
"chrieke/InstanceSegmentation_Sentinel2" -> "nshaud/DeepNetsForEO"
"chrieke/InstanceSegmentation_Sentinel2" -> "lanha/DSen2"
"chrieke/InstanceSegmentation_Sentinel2" -> "bhavesh907/Crop-Classification" ["e"=1]
"chrieke/InstanceSegmentation_Sentinel2" -> "sentinel-hub/sentinel2-cloud-detector"
"chrieke/InstanceSegmentation_Sentinel2" -> "VSainteuf/pytorch-psetae" ["e"=1]
"chrieke/InstanceSegmentation_Sentinel2" -> "manideep2510/eye-in-the-sky"
"chrieke/InstanceSegmentation_Sentinel2" -> "sentinelsat/sentinelsat"
"chrieke/InstanceSegmentation_Sentinel2" -> "waldnerf/decode"
"chrieke/InstanceSegmentation_Sentinel2" -> "MarcCoru/crop-type-mapping" ["e"=1]
"chrieke/InstanceSegmentation_Sentinel2" -> "long123524/BsiNet-torch"
"chrieke/InstanceSegmentation_Sentinel2" -> "gee-community/geetools"
"opengeospatial/ogcapi-features" -> "opengeospatial/ogcapi-maps"
"opengeospatial/ogcapi-features" -> "opengeospatial/ogcapi-common"
"opengeospatial/ogcapi-features" -> "geopython/pygeoapi"
"opengeospatial/ogcapi-features" -> "radiantearth/stac-spec"
"opengeospatial/ogcapi-features" -> "opengeospatial/geopackage" ["e"=1]
"opengeospatial/ogcapi-features" -> "opengeospatial/ogcapi-records"
"opengeospatial/ogcapi-features" -> "opengeospatial/ogc-feat-geo-json"
"opengeospatial/ogcapi-features" -> "CrunchyData/pg_featureserv" ["e"=1]
"opengeospatial/ogcapi-features" -> "ldproxy/ldproxy"
"opengeospatial/ogcapi-features" -> "koordinates/kart" ["e"=1]
"opengeospatial/ogcapi-features" -> "opengeospatial/OGC-Technology-Trends"
"opengeospatial/ogcapi-features" -> "opengeospatial/geoapi" ["e"=1]
"opengeospatial/ogcapi-features" -> "t-rex-tileserver/t-rex" ["e"=1]
"opengeospatial/ogcapi-features" -> "radiantearth/stac-api-spec"
"opengeospatial/ogcapi-features" -> "opengeospatial/ogcapi-processes"
"ZFTurbo/ZF_UNET_224_Pretrained_Model" -> "killthekitten/kaggle-carvana-2017"
"mapbox/mapboxgl-jupyter" -> "CartoDB/cartoframes" ["e"=1]
"mapbox/mapboxgl-jupyter" -> "OpenGeoscience/geonotebook"
"mapbox/mapboxgl-jupyter" -> "jupyter-widgets/ipyleaflet" ["e"=1]
"mapbox/mapboxgl-jupyter" -> "mapbox/mbview" ["e"=1]
"mapbox/mapboxgl-jupyter" -> "mapbox/mapbox-sdk-py"
"mapbox/mapboxgl-jupyter" -> "gboeing/ppde642"
"mapbox/mapboxgl-jupyter" -> "mapbox/csv2geojson" ["e"=1]
"mapbox/mapboxgl-jupyter" -> "mapbox/mapbox-cli-py"
"mapbox/mapboxgl-jupyter" -> "mapbox/robosat"
"mapbox/mapboxgl-jupyter" -> "mapbox/mapbox-isochrone"
"mapbox/mapboxgl-jupyter" -> "ResidentMario/geoplot"
"mapbox/mapboxgl-jupyter" -> "transitland/transitland-processing-animation" ["e"=1]
"mapbox/mapboxgl-jupyter" -> "pysal/pysal"
"mapbox/mapboxgl-jupyter" -> "developmentseed/lonboard"
"mapbox/mapboxgl-jupyter" -> "mapbox/storytelling" ["e"=1]
"jjsantos01/qgis_mcp" -> "GeoRetina/chat2geo"
"jjsantos01/qgis_mcp" -> "geographyclub/qgis-expressions"
"jjsantos01/qgis_mcp" -> "qgis/qgis-js" ["e"=1]
"jjsantos01/qgis_mcp" -> "jagan-shanmugam/open-streetmap-mcp"
"replicahq/doppelganger" -> "UDST/synthpop"
"radiantearth/stac-spec" -> "radiantearth/stac-api-spec"
"radiantearth/stac-spec" -> "stac-utils/pystac"
"radiantearth/stac-spec" -> "radiantearth/stac-browser"
"radiantearth/stac-spec" -> "developmentseed/titiler"
"radiantearth/stac-spec" -> "cogeotiff/rio-tiler"
"radiantearth/stac-spec" -> "stac-utils/stac-fastapi"
"radiantearth/stac-spec" -> "sat-utils/sat-api"
"radiantearth/stac-spec" -> "gjoseph92/stackstac"
"radiantearth/stac-spec" -> "cogeotiff/rio-cogeo"
"radiantearth/stac-spec" -> "geopython/pygeoapi"
"radiantearth/stac-spec" -> "opengeospatial/geoparquet"
"radiantearth/stac-spec" -> "opengeospatial/ogcapi-features"
"radiantearth/stac-spec" -> "stac-utils/pystac-client"
"radiantearth/stac-spec" -> "opendatacube/datacube-core"
"radiantearth/stac-spec" -> "sat-utils/sat-search"
"olson-sean-k/plexus" -> "asny/tri-mesh"
"olson-sean-k/plexus" -> "dima634/baby_shark"
"EKami/planet-amazon-deforestation" -> "planetlabs/planet-amazon-deforestation"
"rrwen/google_streetview" -> "robolyst/streetview"
"geohackweek/GoogleEarthEngine" -> "renelikestacos/Google-Earth-Engine-JavaScript-Examples"
"geohackweek/GoogleEarthEngine" -> "kr-stn/EarthEngine_scripts"
"geohackweek/GoogleEarthEngine" -> "jldowns/google_earth_engine_notebook"
"developmentseed/geolambda" -> "lambgeo/docker-lambda"
"developmentseed/geolambda" -> "sat-utils/sat-api"
"developmentseed/geolambda" -> "radiantearth/stac-browser"
"developmentseed/geolambda" -> "RemotePixel/remotepixel-api"
"developmentseed/geolambda" -> "cogeotiff/rio-tiler"
"developmentseed/geolambda" -> "cogeotiff/rio-cogeo"
"developmentseed/geolambda" -> "pangeo-data/cog-best-practices"
"developmentseed/geolambda" -> "developmentseed/rio-viz"
"developmentseed/geolambda" -> "mapbox/landsat-tiler"
"developmentseed/geolambda" -> "radiantearth/stac-spec"
"developmentseed/geolambda" -> "developmentseed/titiler"
"developmentseed/geolambda" -> "vincentsarago/lambda-tiler"
"developmentseed/geolambda" -> "gjoseph92/stackstac"
"developmentseed/geolambda" -> "developmentseed/rio-stac"
"developmentseed/geolambda" -> "RemotePixel/amazonlinux-gdal"
"RemotePixel/remotepixel-api" -> "mapbox/sentinel-tiler"
"gee-community/qgis-earthengine-plugin" -> "gee-community/geetools"
"gee-community/qgis-earthengine-plugin" -> "giswqs/qgis-earthengine-examples"
"gee-community/qgis-earthengine-plugin" -> "opengeos/Awesome-GEE"
"gee-community/qgis-earthengine-plugin" -> "davemlz/eemont"
"gee-community/qgis-earthengine-plugin" -> "gee-community/awesome-google-earth-engine"
"gee-community/qgis-earthengine-plugin" -> "gee-community/ee-palettes"
"gee-community/qgis-earthengine-plugin" -> "mortcanty/earthengine"
"gee-community/qgis-earthengine-plugin" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"gee-community/qgis-earthengine-plugin" -> "samapriya/awesome-gee-community-datasets"
"gee-community/qgis-earthengine-plugin" -> "giswqs/earthengine-py-notebooks"
"gee-community/qgis-earthengine-plugin" -> "google/Xee"
"gee-community/qgis-earthengine-plugin" -> "google/earthengine-community"
"gee-community/qgis-earthengine-plugin" -> "r-spatial/rgee"
"gee-community/qgis-earthengine-plugin" -> "csaybar/EEwPython"
"gee-community/qgis-earthengine-plugin" -> "kr-stn/EarthEngine_scripts"
"rogerxujiang/dstl_unet" -> "ternaus/kaggle_dstl_submission"
"rogerxujiang/dstl_unet" -> "lopuhin/kaggle-dstl"
"rogerxujiang/dstl_unet" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"rogerxujiang/dstl_unet" -> "DeepVoltaire/Dstl-Satellite-Imagery-Feature-Detection"
"rogerxujiang/dstl_unet" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"AlexArcPy/registrant" -> "nicogis/Geodatabase-Diagrammer"
"AlexArcPy/registrant" -> "Dan-Patterson/Tools_for_ArcGIS_Pro"
"AlexArcPy/registrant" -> "green3g/esri-python-tools"
"hyparam/icebird" -> "hyparam/hyperparam-cli"
"hyparam/icebird" -> "hyparam/hightable"
"hyparam/icebird" -> "hyparam/hyparquet-compressors"
"mojodna/marblecutter" -> "mojodna/marblecutter-virtual"
"mojodna/marblecutter" -> "radiantearth/tiles.rdnt.io"
"mojodna/marblecutter" -> "hotosm/oam-dynamic-tiler"
"mojodna/marblecutter" -> "cogeotiff/cog-spec"
"XwK-P/ID-CNN" -> "bgLeon/SAR-Despeckling"
"XwK-P/ID-CNN" -> "davin11/CNN-NLM"
"sheerun/awesome-polish-nlp" -> "ipipan/spacy-pl"
"samsammurphy/ee-atmcorr-timeseries" -> "samsammurphy/gee-atmcorr-S2"
"georust/geotiff" -> "georust/netcdf"
"Sen2Agri/Sen2Agri-System" -> "olivierhagolle/Start_maja"
"Coordi777/ACD_S2ODPM" -> "Coordi777/Conditional-Diffusion-for-SAR-to-Optical-Image-Translation"
"tavgreen/landuse_classification" -> "yangxue0827/CNN_UCMerced-LandUse_Caffe"
"kwrobel-nlp/krnnt" -> "dzieciou/lemmatizer-pl"
"pysal/giddy" -> "pysal/splot"
"pysal/giddy" -> "pysal/region"
"hyparam/geoparquet" -> "hyparam/hyperparam-cli"
"hyparam/geoparquet" -> "hyparam/hyparquet-compressors"
"hyparam/geoparquet" -> "hyparam/hysnappy"
"yongyehuang/view_based_sentiment" -> "yongyehuang/ocean-of-knowledge"
"yongyehuang/word_similarity" -> "yongyehuang/ocean-of-knowledge"
"yongyehuang/word_similarity" -> "yongyehuang/view_based_sentiment"
"yangxue0827/CNN_UCMerced-LandUse_Caffe" -> "BUPTLdy/Land_Use_CNN"
"yangxue0827/CNN_UCMerced-LandUse_Caffe" -> "tavgreen/landuse_classification"
"geopandas/geopandas" ["l"="41.534,24.123"]
"shapely/shapely" ["l"="41.51,24.104"]
"rasterio/rasterio" ["l"="41.605,24.199"]
"python-visualization/folium" ["l"="41.492,24.02"]
"gboeing/osmnx" ["l"="41.463,24.1"]
"Toblerity/Fiona" ["l"="41.517,24.166"]
"OSGeo/gdal" ["l"="39.384,23.903"]
"pysal/pysal" ["l"="41.462,24.165"]
"pydata/xarray" ["l"="43.73,23.782"]
"movingpandas/movingpandas" ["l"="41.471,24.192"]
"geopy/geopy" ["l"="41.483,24.064"]
"sacridini/Awesome-Geospatial" ["l"="41.677,24.179"]
"SciTools/cartopy" ["l"="40.763,25.555"]
"pyproj4/pyproj" ["l"="41.537,24.171"]
"gee-community/geemap" ["l"="41.71,24.229"]
"geopandas/dask-geopandas" ["l"="41.485,24.249"]
"scikit-mobility/scikit-mobility" ["l"="41.381,24.181"]
"movingpandas/movingpandas-examples" ["l"="41.418,24.153"]
"pysal/momepy" ["l"="41.424,24.176"]
"makepath/xarray-spatial" ["l"="41.56,24.256"]
"pyrosm/pyrosm" ["l"="41.437,24.197"]
"UDST/pandana" ["l"="41.377,24.149"]
"MobilityDB/MobilityDB" ["l"="39.434,24.002"]
"developmentseed/lonboard" ["l"="41.471,24.299"]
"holoviz/spatialpandas" ["l"="41.462,24.24"]
"gboeing/ppde642" ["l"="41.424,24.126"]
"geopandas/contextily" ["l"="41.461,24.209"]
"corteva/rioxarray" ["l"="41.573,24.252"]
"corteva/geocube" ["l"="41.527,24.259"]
"opendatacube/odc-stac" ["l"="41.558,24.305"]
"google/Xee" ["l"="41.622,24.286"]
"pytroll/pyresample" ["l"="40.672,25.538"]
"fatiando/verde" ["l"="40.793,22.648"]
"geoxarray/geoxarray" ["l"="40.672,25.513"]
"perrygeo/python-rasterstats" ["l"="41.566,24.214"]
"earthlab/earthpy" ["l"="41.618,24.247"]
"geopandas/pyogrio" ["l"="41.459,24.278"]
"mdbartos/pysheds" ["l"="41.629,24.19"]
"gjoseph92/stackstac" ["l"="41.566,24.316"]
"cogeotiff/rio-cogeo" ["l"="41.556,24.36"]
"jgrss/geowombat" ["l"="41.543,24.281"]
"mapbox/robosat" ["l"="41.781,24.156"]
"azavea/raster-vision" ["l"="41.74,24.192"]
"chrieke/awesome-satellite-imagery-datasets" ["l"="41.753,24.168"]
"developmentseed/label-maker" ["l"="41.822,24.177"]
"trailbehind/DeepOSM" ["l"="41.823,24.14"]
"sentinel-hub/eo-learn" ["l"="41.75,24.227"]
"sentinelsat/sentinelsat" ["l"="41.761,24.212"]
"CosmiQ/solaris" ["l"="42.504,23.105"]
"reachsumit/deep-unet-for-satellite-image-segmentation" ["l"="41.967,24.1"]
"neptune-ai/open-solution-mapping-challenge" ["l"="42.537,23.163"]
"mapbox/tippecanoe" ["l"="39.391,24.091"]
"sshuair/torchsat" ["l"="41.842,24.161"]
"sentinel-hub/sentinelhub-py" ["l"="41.736,24.254"]
"kr-stn/awesome-sentinel" ["l"="41.763,24.238"]
"planetlabs/notebooks" ["l"="41.795,24.227"]
"Penn000/SpA-GAN_for_cloud_removal" ["l"="42.056,24.591"]
"Yonv1943/CloudRemoval" ["l"="42.079,24.591"]
"VSAnimator/stgan" ["l"="42.038,24.56"]
"ameraner/dsen2-cr" ["l"="42.009,24.527"]
"qzhang95/PSTCR" ["l"="42.066,24.567"]
"enomotokenji/mcgan-cvprw2017-pytorch" ["l"="42.07,24.582"]
"BUPTLdy/RICE_DATASET" ["l"="42.083,24.618"]
"xufangchn/GLF-CR" ["l"="42.028,24.566"]
"PeeBar/Awesome-Cloud-Detection-and-Removal" ["l"="42.05,24.562"]
"Chintan2108/Cloud-Removal-in-Satellite-Images-using-Conditional-Generative-Adversarial-Networks" ["l"="42.108,24.628"]
"littlebeen/DDPM-Enhancement-for-Cloud-Removal" ["l"="42.087,24.638"]
"come880412/CTGAN" ["l"="42.047,24.615"]
"littlebeen/Cloud-removal-model-collection" ["l"="42.077,24.65"]
"PatrickTUM/SEN12MS-CR-TS" ["l"="42.029,24.578"]
"ermongroup/STGAN" ["l"="42.046,24.573"]
"zhu-xlab/M3R-CR" ["l"="42.016,24.558"]
"cogeotiff/rio-tiler" ["l"="41.581,24.357"]
"developmentseed/titiler" ["l"="41.544,24.344"]
"radiantearth/stac-spec" ["l"="41.608,24.326"]
"microsoft/torchgeo" ["l"="41.683,24.205"]
"nmileva/starfm4py" ["l"="41.706,24.858"]
"HPSCIL/cuESTARFM" ["l"="41.685,24.86"]
"endu111/remote-sensing-images-fusion" ["l"="41.696,24.839"]
"HPSCIL/cuSTARFM" ["l"="41.7,24.883"]
"JohMast/ImageFusion" ["l"="41.721,24.888"]
"harisw/STARFM_prediction" ["l"="41.687,24.875"]
"aourednik/historical-basemaps" ["l"="41.492,24.58"]
"nrgapple/historic-country-borders-app" ["l"="41.483,24.627"]
"geographyclub/qgis-expressions" ["l"="41.509,24.462"]
"mapbox/storytelling" ["l"="39.239,24.27"]
"zumbov2/votemapswitzerland" ["l"="-10.352,18.141"]
"tjukanovt/qgis_styles" ["l"="41.58,24.548"]
"andrewheiss/quarto-wordcount" ["l"="40.679,35.035"]
"eurostat/gridviz" ["l"="41.412,24.507"]
"georust/rstar" ["l"="41.247,24.361"]
"georust/geojson" ["l"="41.272,24.369"]
"georust/geo" ["l"="41.309,24.335"]
"Stoeoef/spade" ["l"="63.197,-0.031"]
"georust/proj" ["l"="41.276,24.356"]
"georust/gdal" ["l"="41.305,24.353"]
"georust/geozero" ["l"="41.308,24.367"]
"tidwall/rtree.rs" ["l"="41.177,24.397"]
"nasa-gibs/worldview" ["l"="41.734,24.34"]
"nasa-gibs/gibs-web-examples" ["l"="41.774,24.41"]
"nasa-gibs/onearth" ["l"="41.795,24.451"]
"nsidc/earthaccess" ["l"="41.605,24.223"]
"NASAWorldWind/WebWorldWind" ["l"="37.772,23.965"]
"developmentseed/landsat-util" ["l"="41.781,24.247"]
"pydap/pydap" ["l"="41.781,24.428"]
"NeoGeographyToolkit/StereoPipeline" ["l"="60.306,9.79"]
"opendatacube/datacube-core" ["l"="41.601,24.296"]
"nasa/earthdata-search" ["l"="19.478,14.15"]
"nasa/Open-Source-Catalog" ["l"="19.423,14.153"]
"nasa/code-nasa-gov" ["l"="19.425,14.121"]
"fuweifu-vtoo/Semantic-segmentation" ["l"="42.135,24.047"]
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" ["l"="42.152,24.056"]
"1044197988/Semantic-segmentation-of-remote-sensing-images" ["l"="42.111,24.068"]
"lcylmhlcy/Semantic-segmentation" ["l"="42.124,24.06"]
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" ["l"="42.108,24.055"]
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" ["l"="42.086,24.071"]
"AI-Chen/Deeplab-v3-Plus-pytorch-" ["l"="42.178,24.042"]
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" ["l"="42.135,24.068"]
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" ["l"="42.072,24.075"]
"cuilunan/Unet-of-remote-sensing-image" ["l"="42.076,24.06"]
"WangLibo1995/GeoSeg" ["l"="41.845,25.197"]
"jayboxyz/deeplearning-image-segmentation" ["l"="42.216,24.039"]
"lironui/MACU-Net" ["l"="42.165,24.008"]
"anxiangsir/urban_seg" ["l"="42.114,24.042"]
"Deeachain/Segmentation-Pytorch" ["l"="53.245,30.979"]
"cxyth/rs-segment.pytorch" ["l"="42.176,24.024"]
"satellite-image-deep-learning/techniques" ["l"="41.723,24.146"]
"opengeos/segment-geospatial" ["l"="41.682,24.232"]
"acgeospatial/awesome-earthobservation-code" ["l"="41.727,24.241"]
"wenhwu/awesome-remote-sensing-change-detection" ["l"="41.933,25.227"]
"Jack-bo1220/Awesome-Remote-Sensing-Foundation-Models" ["l"="41.782,25.213"]
"awesome-spectral-indices/awesome-spectral-indices" ["l"="41.706,24.269"]
"satellite-image-deep-learning/datasets" ["l"="41.719,24.177"]
"qubvel-org/segmentation_models.pytorch" ["l"="50.68,29.784"]
"google/earthengine-api" ["l"="41.753,24.309"]
"opengeos/Awesome-GEE" ["l"="41.75,24.273"]
"scikit-mobility/tutorials" ["l"="41.312,24.158"]
"scikit-mobility/DeepLearning4HumanMobility" ["l"="41.298,24.174"]
"scikit-mobility/DeepGravity" ["l"="41.278,24.157"]
"mie-lab/trackintel" ["l"="41.289,24.205"]
"lalessan/scales_human_mobility" ["l"="41.295,24.146"]
"UDST/urbanaccess" ["l"="41.36,24.13"]
"mszell/geospatialdatascience" ["l"="41.51,24.289"]
"pygeos/pygeos" ["l"="41.476,24.22"]
"pysal/spopt" ["l"="41.441,24.214"]
"geoarrow/geoarrow" ["l"="41.397,24.331"]
"Toblerity/rtree" ["l"="39.675,23.757"]
"MinZHANG-WHU/Change-Detection-Review" ["l"="41.98,25.234"]
"DHI/terracotta" ["l"="41.581,24.309"]
"stac-utils/stac-fastapi" ["l"="41.529,24.353"]
"stac-utils/pystac" ["l"="41.546,24.329"]
"developmentseed/eoAPI" ["l"="41.51,24.351"]
"developmentseed/morecantile" ["l"="41.506,24.396"]
"developmentseed/tipg" ["l"="41.48,24.36"]
"developmentseed/rio-viz" ["l"="41.539,24.405"]
"flatgeobuf/flatgeobuf" ["l"="39.398,24.052"]
"radiantearth/stac-browser" ["l"="41.534,24.365"]
"developmentseed/cogeo-mosaic" ["l"="41.505,24.428"]
"jorisvandenbossche/geopandas-tutorial" ["l"="41.54,24.242"]
"geopandas/scipy2018-geospatial-data" ["l"="44.669,26.819"]
"ResidentMario/geoplot" ["l"="41.492,24.184"]
"urschrei/Geopython" ["l"="41.534,24.198"]
"opengeos/whitebox-python" ["l"="41.658,24.238"]
"ozak/georasters" ["l"="41.364,24.243"]
"koldunovn/python_for_geosciences" ["l"="40.757,22.691"]
"gdsbook/book" ["l"="41.427,24.219"]
"ceholden/open-geo-tutorial" ["l"="41.791,24.331"]
"jorisvandenbossche/DS-python-data-analysis" ["l"="41.665,24.387"]
"opengeos/python-geospatial" ["l"="41.658,24.276"]
"Automating-GIS-processes/site" ["l"="41.601,24.312"]
"mortcanty/CRCPython" ["l"="41.96,24.167"]
"mortcanty/CRC4Docker" ["l"="41.921,24.218"]
"mortcanty/earthengine" ["l"="41.862,24.278"]
"BUPTLdy/Land_Use_CNN" ["l"="42.036,24.033"]
"sarasafavi/remote-sensing-with-python" ["l"="41.782,24.315"]
"kscottz/PythonFromSpace" ["l"="41.832,24.246"]
"sentinel-hub/custom-scripts" ["l"="41.767,24.256"]
"giswqs/earthengine-py-notebooks" ["l"="41.768,24.274"]
"sentinel-hub/sentinel2-cloud-detector" ["l"="41.812,24.276"]
"giswqs/qgis-earthengine-examples" ["l"="41.731,24.285"]
"gee-community/geetools" ["l"="41.792,24.289"]
"davemlz/eemont" ["l"="41.73,24.303"]
"johntruckenbrodt/pyroSAR" ["l"="40.985,23.376"]
"GeoscienceAustralia/dea-notebooks" ["l"="41.634,24.273"]
"deepVector/geospatial-machine-learning" ["l"="41.774,24.223"]
"mapbox/sentinel-tiler" ["l"="41.625,24.457"]
"RemotePixel/remotepixel-api" ["l"="41.612,24.446"]
"mapbox/landsat-tiler" ["l"="41.612,24.428"]
"jblindsay/whitebox-tools" ["l"="41.643,24.228"]
"opengeos/WhiteboxTools-ArcGIS" ["l"="41.676,24.321"]
"jblindsay/whitebox-geospatial-analysis-tools" ["l"="41.649,24.172"]
"r-barnes/richdem" ["l"="41.643,24.156"]
"opengeos/lidar" ["l"="41.598,24.24"]
"dtarb/TauDEM" ["l"="41.66,24.14"]
"GeospatialPython/pyshp" ["l"="41.558,24.161"]
"jazzband/geojson" ["l"="41.516,24.192"]
"dwtkns/gdal-cheat-sheet" ["l"="41.659,24.26"]
"project-open-data/esri2open" ["l"="41.551,24.025"]
"geoalchemy/geoalchemy2" ["l"="41.502,24.232"]
"developmentseed/geojson-pydantic" ["l"="41.497,24.327"]
"tmcw/awesome-geojson" ["l"="39.322,24.051"]
"mapbox/mercantile" ["l"="39.278,24.289"]
"geopython/pygeoapi" ["l"="41.516,24.37"]
"mvexel/overpass-api-python-wrapper" ["l"="39.857,22.61"]
"SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset" ["l"="41.918,24.527"]
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" ["l"="41.933,24.565"]
"SorourMo/95-Cloud-An-Extension-to-38-Cloud-Dataset" ["l"="41.916,24.558"]
"JacobJeppesen/RS-Net" ["l"="41.934,24.54"]
"GERSL/Fmask" ["l"="41.899,24.454"]
"1921134176/Deeplearning-for-cloud-detection" ["l"="41.937,24.592"]
"IPL-UV/pvl8dagans" ["l"="41.934,24.615"]
"Neooolee/WHUS2-CD" ["l"="41.955,24.601"]
"Soumyabrata/multilabel-unet" ["l"="41.952,24.629"]
"Zhaoguanhua/AtmosphericCorrection" ["l"="42.06,24.393"]
"robintw/Py6S" ["l"="42.015,24.384"]
"samsammurphy/6S_emulator" ["l"="42.03,24.4"]
"WangZhenqing-RS/GF_preprocess" ["l"="42.133,24.415"]
"GenghisYoung233/Gaofen-Batch" ["l"="42.114,24.396"]
"samsammurphy/gee-atmcorr-S2" ["l"="41.97,24.392"]
"multiply-org/atmospheric_correction" ["l"="42.097,24.409"]
"lucadelu/pyModis" ["l"="42.008,24.361"]
"desertstsung/Snowy-Dove" ["l"="42.093,24.389"]
"YudeWang/UNet-Satellite-Image-Segmentation" ["l"="42.045,24.07"]
"gzr2017/UNet-AerialImageSegmentation" ["l"="42.185,24.06"]
"ChienWong/ResUnet-a" ["l"="42.079,24.099"]
"AstarLight/Satellite-Segmentation" ["l"="42.094,24.083"]
"1044197988/TF.Keras-Commonly-used-models" ["l"="42.127,24.084"]
"vicwer/sense_classification" ["l"="42.242,23.867"]
"scrssys/semantic_segment_RSImage" ["l"="42.111,24.02"]
"Jiangfeng-Xiong/satellite_seg" ["l"="42.098,24.03"]
"zlckanata/DeepGlobe-Road-Extraction-Challenge" ["l"="42.48,23.212"]
"LiuDongjing/BuildingChangeDetector" ["l"="42.13,24.022"]
"lsh1994/keras-segmentation" ["l"="42.264,24.093"]
"nshaud/DeepNetsForEO" ["l"="41.916,24.139"]
"geo-python/site" ["l"="41.622,24.342"]
"CenterForCollectiveLearning/Place-Pulse" ["l"="40.943,24.591"]
"denadai2/google_street_view_deep_neural" ["l"="40.919,24.604"]
"rsangers/explainable_perception" ["l"="40.962,24.578"]
"emilymuller1991/urban-perceptions" ["l"="40.938,24.578"]
"abhimanyudubey/dlcity" ["l"="40.925,24.619"]
"OceanOptics/getOC" ["l"="42.113,24.46"]
"CNES/RadiativeTransferCode-OSOAA" ["l"="42.067,24.442"]
"opengeos/geospatial" ["l"="41.6,24.254"]
"DahnJ/Awesome-DEM" ["l"="41.66,24.407"]
"samapriya/awesome-gee-community-datasets" ["l"="41.714,24.29"]
"karolzak/keras-unet" ["l"="41.937,24.056"]
"datasciencecampus/laika" ["l"="41.974,24.051"]
"yingkaisha/keras-unet-collection" ["l"="61.889,36.988"]
"advaitsave/Multiclass-Semantic-Segmentation-CamVid" ["l"="41.935,23.981"]
"nikhilroxtomar/Semantic-Segmentation-Architecture" ["l"="61.808,37.059"]
"Vooban/Smoothly-Blend-Image-Patches" ["l"="41.958,24.077"]
"UDST/urbansim" ["l"="41.306,24.105"]
"ActivitySim/activitysim" ["l"="62.043,12.306"]
"UDST/sanfran_urbansim" ["l"="41.241,24.082"]
"UDST/synthpop" ["l"="41.264,24.07"]
"waddell/urban-informatics-and-visualization" ["l"="41.349,24.141"]
"replicahq/doppelganger" ["l"="41.245,24.06"]
"UDST/choicemodels" ["l"="41.254,24.091"]
"matsim-org/matsim-libs" ["l"="62.108,12.269"]
"abmgis/abmgis" ["l"="41.041,24.08"]
"osPlanning/omx" ["l"="62.036,12.331"]
"Esri/public-transit-tools" ["l"="36.026,19.566"]
"kuanb/peartree" ["l"="36.006,19.553"]
"manideep2510/eye-in-the-sky" ["l"="41.994,24.106"]
"rogerxujiang/dstl_unet" ["l"="41.998,24.064"]
"radiantearth/mlhub-tutorials" ["l"="41.935,24.011"]
"chrieke/InstanceSegmentation_Sentinel2" ["l"="41.928,24.188"]
"motokimura/spacenet_building_detection" ["l"="42.545,23.103"]
"dronedeploy/dd-ml-segmentation-benchmark" ["l"="42.497,22.824"]
"OrdnanceSurvey/GeoDataViz-Toolkit" ["l"="41.571,24.423"]
"uwcartlab/webmapping" ["l"="41.587,24.486"]
"Viglino/font-gis" ["l"="41.6,24.533"]
"charleyglynn/OSM-Shapefile-QGIS-stylesheets" ["l"="39.044,23.491"]
"All4Gis/QGIS-cheat-sheet" ["l"="39.173,23.441"]
"chrieke/awesome-geospatial-companies" ["l"="41.677,24.271"]
"klakar/QGIS_resources" ["l"="41.571,24.524"]
"OrdnanceSurvey/OS-Open-Zoomstack-Stylesheets" ["l"="41.558,24.487"]
"anitagraser/QGIS-resources" ["l"="39.082,23.553"]
"andrea-ballatore/open-geo-data-education" ["l"="41.488,24.428"]
"geopython/OWSLib" ["l"="41.488,24.393"]
"opengeospatial/ogcapi-features" ["l"="41.506,24.48"]
"geopython/pycsw" ["l"="41.468,24.432"]
"CrunchyData/pg_featureserv" ["l"="39.432,24.024"]
"opengeospatial/geoparquet" ["l"="41.473,24.317"]
"geopython/pywps" ["l"="41.459,24.453"]
"opengeos/whiteboxgui" ["l"="41.696,24.33"]
"Esri/deep-learning-frameworks" ["l"="39.029,23.004"]
"Dan-Patterson/Tools_for_ArcGIS_Pro" ["l"="41.757,24.533"]
"sacridini/GEET" ["l"="41.85,24.309"]
"kr-stn/EarthEngine_scripts" ["l"="41.832,24.307"]
"renelikestacos/Google-Earth-Engine-JavaScript-Examples" ["l"="41.866,24.307"]
"eMapR/LT-GEE" ["l"="41.843,24.325"]
"renelikestacos/Google-Earth-Engine-Python-Examples" ["l"="41.829,24.293"]
"fitoprincipe/geetools-code-editor" ["l"="41.816,24.318"]
"SERVIR/water-quality-gee" ["l"="41.9,24.322"]
"csaybar/EEwPython" ["l"="41.811,24.3"]
"brmagnuson/LandFallowingInEarthEngine" ["l"="41.89,24.309"]
"gee-community/ee-palettes" ["l"="41.798,24.315"]
"bfast2/geeBfastMonitor" ["l"="39.298,35.082"]
"tracek/gee_asset_manager" ["l"="41.866,24.361"]
"gee-community/awesome-google-earth-engine" ["l"="41.855,24.335"]
"eMapR/TimeSync-Legacy" ["l"="41.884,24.351"]
"shijuanchen/forest_degradation_georgia" ["l"="41.866,24.383"]
"fitoprincipe/geebap" ["l"="41.897,24.343"]
"jldowns/google_earth_engine_notebook" ["l"="41.877,24.316"]
"ucalyptus/EarthEngine-Deep-Learning" ["l"="41.911,24.375"]
"gee-community/qgis-earthengine-plugin" ["l"="41.753,24.29"]
"samapriya/geeup" ["l"="41.845,24.366"]
"gee-community/ee-tensorflow-notebooks" ["l"="41.856,24.294"]
"kvos/CoastSat" ["l"="41.831,24.272"]
"kvos/CoastSat.slope" ["l"="41.937,24.294"]
"chrisleaman/awesome-coastal" ["l"="41.975,24.305"]
"ydoherty/CoastSat.PlanetScope" ["l"="41.931,24.305"]
"SatelliteShorelines/CoastSeg" ["l"="41.995,24.277"]
"xarray-contrib/xvec" ["l"="40.585,25.485"]
"xarray-contrib/xarray_leaflet" ["l"="41.459,24.255"]
"stac-utils/pystac-client" ["l"="41.558,24.342"]
"xarray-contrib/xbatcher" ["l"="40.595,25.454"]
"pangeo-data/rechunker" ["l"="40.609,25.474"]
"aazuspan/wxee" ["l"="41.685,24.294"]
"petedannemann/gis-programming-roadmap" ["l"="41.66,24.295"]
"AlexArcPy/python-for-gis-progression-path" ["l"="41.726,24.48"]
"tjukanovt/30DayMapChallenge" ["l"="41.656,24.369"]
"sshuair/awesome-gis" ["l"="39.214,23.905"]
"Esri/awesome-arcgis-developers" ["l"="39.057,23.008"]
"county-of-simcoe-gis/SimcoeCountyWebViewer" ["l"="39.417,23.644"]
"noncomputable/AgentMaps" ["l"="41.064,24.193"]
"projectmesa/mesa" ["l"="40.991,24.101"]
"humangeo/leaflet-dvf" ["l"="38.419,23.033"]
"james-owen-ryan/talktown" ["l"="-32.808,-25.248"]
"riatelab/bertin" ["l"="41.357,24.468"]
"projectmesa/mesa-geo" ["l"="40.974,24.083"]
"lanha/DSen2" ["l"="41.897,24.259"]
"remicres/sr4rs" ["l"="41.57,25.37"]
"up42/s2-superresolution" ["l"="41.943,24.262"]
"jensleitloff/CNN-Sentinel" ["l"="41.901,24.192"]
"sentinel-hub/multi-temporal-super-resolution" ["l"="41.964,24.26"]
"Evoland-Land-Monitoring-Evolution/sentinel2_superresolution" ["l"="41.97,24.282"]
"olivierhagolle/Sentinel-download" ["l"="41.814,24.246"]
"allenai/satlas-super-resolution" ["l"="41.623,25.326"]
"gabrieltseng/pycrop-yield-prediction" ["l"="42.14,24.281"]
"JiaxuanYou/crop_yield_prediction" ["l"="42.086,24.273"]
"cleipski/CropPredict" ["l"="42.155,24.28"]
"saeedkhaki92/CNN-RNN-Yield-Prediction" ["l"="42.151,24.299"]
"AnnaXWang/deep-transfer-learning-crop-prediction" ["l"="42.124,24.285"]
"saeedkhaki92/Yield-Prediction-DNN" ["l"="42.134,24.293"]
"brad-ross/crop-yield-prediction-project" ["l"="42.114,24.273"]
"meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery" ["l"="42.125,24.267"]
"AkshanshChahal/ML-in-Agriculture" ["l"="42.138,24.265"]
"vinayakkarande/Crop-Yield-Prediction-Using-CNN-LSTM-" ["l"="42.169,24.305"]
"jostbr/shallow-water" ["l"="41.751,23.785"]
"milankl/swm" ["l"="41.775,23.755"]
"mrocklin/ShallowWater" ["l"="41.73,23.792"]
"jamesp/shallowwater" ["l"="40.926,25.438"]
"GeoscienceAustralia/anuga_core" ["l"="41.721,23.855"]
"ThanasisMattas/mattflow" ["l"="41.775,23.731"]
"TUM-I5/SWE" ["l"="41.736,23.762"]
"dionhaefner/shallow-water" ["l"="41.774,23.772"]
"wme7/ShallowWaterEquations" ["l"="41.75,23.745"]
"passaH2O/dorado" ["l"="41.744,23.815"]
"carderne/gridfinder" ["l"="41.941,23.855"]
"facebookresearch/many-to-many-dijkstra" ["l"="41.924,23.877"]
"aliFrancis/cloudFCN" ["l"="41.951,24.567"]
"savasozkan/cloud_detection" ["l"="41.958,24.557"]
"Azure/pixel_level_land_classification" ["l"="41.957,24.122"]
"tropicalmentat/land-cover-to-land-use-classification" ["l"="42.033,24.099"]
"KGPML/Hyperspectral" ["l"="41.597,23.242"]
"microsoft/landcover" ["l"="41.734,24.218"]
"Esri/raster-deep-learning" ["l"="38.991,23.001"]
"yangsiyu007/SpaceNetExploration" ["l"="42.577,23.118"]
"azavea/raster-vision-examples" ["l"="41.848,24.104"]
"Kalit31/Land-Cover-Analysis" ["l"="41.991,24.088"]
"digitalearthafrica/deafrica-sandbox-notebooks" ["l"="41.658,24.326"]
"Hsankesara/DeepResearch" ["l"="42.47,24.1"]
"JavisPeng/u_net_liver" ["l"="42.402,24.099"]
"pka/awesome-georust" ["l"="41.326,24.356"]
"georust/geos" ["l"="41.268,24.344"]
"geoarrow/geoarrow-rs" ["l"="41.366,24.342"]
"georust/geotiff" ["l"="41.259,24.401"]
"lukeroth/gdal" ["l"="39.728,24.065"]
"stac-utils/rustac" ["l"="41.364,24.383"]
"frewsxcv/rgis" ["l"="41.299,24.384"]
"geopolars/geopolars" ["l"="41.385,24.315"]
"maplibre/maplibre-rs" ["l"="39.524,24.103"]
"volaya/qgis-python-course" ["l"="39.166,23.47"]
"Python-GIS-book/site" ["l"="41.628,24.384"]
"AaltoGIS/Sustainability-GIS" ["l"="41.52,24.397"]
"oturns/geosnap" ["l"="41.405,24.185"]
"pysal/tobler" ["l"="41.393,24.212"]
"perrygeo/pyimpute" ["l"="41.316,24.225"]
"geocompx/geocompy" ["l"="41.497,24.265"]
"edzer/sdsr" ["l"="39.181,35.239"]
"pysal/libpysal" ["l"="41.422,24.202"]
"mattijn/topojson" ["l"="41.427,24.243"]
"pysal/esda" ["l"="41.395,24.199"]
"microsoft/USBuildingFootprints" ["l"="41.619,24.158"]
"microsoft/GlobalMLBuildingFootprints" ["l"="41.625,24.224"]
"microsoft/CanadianBuildingFootprints" ["l"="41.407,24.404"]
"opencitymodel/opencitymodel" ["l"="38.023,23.873"]
"Esri/arcgis-python-api" ["l"="39.04,23.045"]
"DataXujing/CNN-paper2" ["l"="42.259,24.031"]
"isikdogan/deepriver" ["l"="42.036,24.52"]
"isikdogan/rivamap" ["l"="42.06,24.526"]
"BBuf/Keras-Semantic-Segmentation" ["l"="42.237,24.06"]
"LeslieZhoa/tensorflow-deeplab_v3_plus" ["l"="42.242,24.017"]
"georgebv/coastlib" ["l"="41.996,24.32"]
"chrisleaman/py-wave-runup" ["l"="42.006,24.304"]
"caiostringari/pywavelearn" ["l"="42.03,24.318"]
"caiostringari/picoastal" ["l"="42.013,24.321"]
"isofit/isofit" ["l"="41.869,24.444"]
"emit-sds/SpectralUnmixing" ["l"="41.866,24.466"]
"davidraythompson/istutor" ["l"="41.883,24.484"]
"PSI-edu/spectroscopy-tetracorder" ["l"="41.846,24.441"]
"nasa/EMIT-Data-Resources" ["l"="41.795,24.383"]
"eradiate/eradiate" ["l"="41.979,24.469"]
"brycefrank/pyfor" ["l"="37.748,22.984"]
"opengeos/geospatial-data-catalogs" ["l"="41.574,24.285"]
"osin-vladimir/kaggle-satellite-imagery-feature-detection" ["l"="52.886,31.85"]
"DenisCarriere/geocoder" ["l"="41.435,24.029"]
"thampiman/reverse-geocoder" ["l"="22.757,-26.605"]
"googlemaps/google-maps-services-python" ["l"="41.441,23.979"]
"andrea-cuttone/geoplotlib" ["l"="43.67,24.062"]
"daviddrysdale/python-phonenumbers" ["l"="47.289,18.367"]
"openvenues/pypostal" ["l"="52.392,26.176"]
"openeventdata/mordecai" ["l"="52.572,25.49"]
"osm-search/Nominatim" ["l"="39.496,24.221"]
"pelias/pelias" ["l"="39.547,24.211"]
"jwass/mplleaflet" ["l"="43.673,24.125"]
"liiight/notifiers" ["l"="45.009,20.764"]
"datamade/parserator" ["l"="52.419,26.109"]
"earthlab/earthlab.github.io" ["l"="41.611,24.272"]
"Ouranosinc/xclim" ["l"="40.77,25.472"]
"sertit/eoreader" ["l"="40.961,23.405"]
"pysal/mgwr" ["l"="41.397,24.158"]
"Ziqi-Li/FastGWR" ["l"="41.353,24.109"]
"Ziqi-Li/geoshapley" ["l"="41.315,24.008"]
"pysal/spreg" ["l"="41.333,24.156"]
"pysal/segregation" ["l"="41.377,24.198"]
"sunkun1997/mgtwr" ["l"="-7.673,20.991"]
"benchmark-urbanism/cityseer-api" ["l"="41.333,24.241"]
"pysal/spaghetti" ["l"="41.411,24.21"]
"GeoDaCenter/geoda" ["l"="41.51,24.14"]
"Limor-Raviv/Tutorial_Agent_Based_Models" ["l"="40.912,24.139"]
"petroniocandido/COVID19_AgentBasedSimulation" ["l"="40.83,24.166"]
"projectmesa/mesa-examples" ["l"="40.949,24.114"]
"InstituteforDiseaseModeling/covasim" ["l"="-10.298,17.843"]
"patrickcgray/open-geo-tutorial" ["l"="41.794,24.269"]
"pysal/giddy" ["l"="41.361,24.189"]
"cenpy-devs/cenpy" ["l"="18.8,13.68"]
"mahimatendulkar/Crop-Yield-Prediction-and-Estimation-using-Time-series-remote-sensing-data." ["l"="42.101,24.311"]
"ermongroup/Crop_Yield_Prediction" ["l"="42.106,24.295"]
"OSGeo/homebrew-osgeo4mac" ["l"="41.658,24.428"]
"qgis/QGIS-Mac-Packager" ["l"="41.662,24.495"]
"qgis/homebrew-qgisdev" ["l"="41.673,24.481"]
"yannforget/pylandsat" ["l"="41.974,24.411"]
"schaefed/geoarray" ["l"="41.991,24.44"]
"acolite/acolite_ls2" ["l"="42.052,24.444"]
"SantaFeInstitute/ABMA" ["l"="41.176,35.387"]
"acrooks2/ClassModels" ["l"="41.033,24.06"]
"developmentseed/skynet-train" ["l"="41.867,24.141"]
"developmentseed/skynet-data" ["l"="41.877,24.119"]
"Geoyi/pixel-decoder" ["l"="41.826,24.11"]
"developmentseed/geolambda" ["l"="41.592,24.392"]
"CarryHJR/remote-sense-quickstart" ["l"="42.051,25.258"]
"kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018" ["l"="42.054,25.218"]
"shinianzhihou/ChangeDetection" ["l"="42.03,25.224"]
"granularai/fabric" ["l"="42.082,25.213"]
"wylqq312715289/CDGAN" ["l"="42.125,23.999"]
"gmayday1997/SceneChangeDet" ["l"="42.057,25.236"]
"LiheYoung/SenseEarth2020-ChangeDetection" ["l"="41.991,25.221"]
"gg-lige/tianchi" ["l"="42.147,23.998"]
"dsqx71/Change-Detection-in-Remote-Sensing-Images" ["l"="42.161,23.987"]
"mvkolos/siamese-change-detection" ["l"="42.078,25.233"]
"daifeng2016/End-to-end-CD-for-VHR-satellite-image" ["l"="42.045,25.225"]
"NetLogo/models" ["l"="40.885,24.061"]
"NetLogo/Galapagos" ["l"="40.899,24.051"]
"NetLogo/NetLogo" ["l"="40.929,24.053"]
"NetLogo/Tortoise" ["l"="40.902,24.068"]
"josemvidal/netlogomas" ["l"="40.852,24.065"]
"landlab/landlab" ["l"="41.682,24.026"]
"wschwanghart/topotoolbox" ["l"="41.693,23.95"]
"csdms/pymt" ["l"="41.729,23.959"]
"landlab/tutorials" ["l"="41.694,23.995"]
"badlands-model/badlands" ["l"="40.726,22.905"]
"openstreams/wflow" ["l"="39.975,25.163"]
"LSDtopotools/LSDTopoTools2" ["l"="41.706,23.965"]
"creare-com/pydem" ["l"="41.67,24.073"]
"ec-jrc/lisflood-code" ["l"="39.926,25.039"]
"CH-Earth/summa" ["l"="39.994,25.17"]
"raoulcollenteur/Python-Hydrology-Tools" ["l"="40.004,25.137"]
"modflowpy/flopy" ["l"="40.067,25.07"]
"HPSCIL/cuSTNLFFM" ["l"="41.662,24.874"]
"HPSCIL/cuFSDAF" ["l"="41.668,24.892"]
"RAMP-project/RAMP" ["l"="-11.136,17.658"]
"giacfalk/Electrification_SSA_data" ["l"="41.933,23.838"]
"developmentseed/ml-hv-grid-pub" ["l"="41.897,23.992"]
"KTH-dESA/OnSSET-2016" ["l"="41.914,23.846"]
"shakasom/Deep-Learning-for-Satellite-Imagery" ["l"="41.882,24.181"]
"sentinel-hub/eo-flow" ["l"="41.636,25.42"]
"isciences/exactextract" ["l"="41.541,24.265"]
"holoviz/geoviews" ["l"="43.738,23.967"]
"radiantearth/stac-api-spec" ["l"="41.544,24.373"]
"stac-utils/pgstac" ["l"="41.496,24.366"]
"stac-utils/titiler-pgstac" ["l"="41.483,24.373"]
"stac-utils/qgis-stac-plugin" ["l"="41.55,24.396"]
"cloudnativegeo/cloud-optimized-geospatial-formats-guide" ["l"="41.454,24.371"]
"stac-utils/stac-fastapi-pgstac" ["l"="41.492,24.379"]
"wangye707/ICNet-paddlepaddle" ["l"="42.142,23.976"]
"Priyabrata017/Crop-prediction-using-Machine-Learning" ["l"="42.213,24.295"]
"VaibhavSaini19/Crop-Yield-Prediction-using-ML" ["l"="42.179,24.291"]
"xungeer29/Remote-Sensing-Image-Classification" ["l"="42.09,24.052"]
"sjliu68/Remote-Sensing-Image-Classification" ["l"="42.087,24.013"]
"527760681/Keras-Remote-sensing-image-retrieval" ["l"="42.079,23.996"]
"lehaifeng/SCAttNet" ["l"="42.074,24.042"]
"BUPTLdy/MARTA-GAN" ["l"="42.053,24.008"]
"rmkemker/EarthMapper" ["l"="42.026,24.078"]
"weihancug/SSGF-for-HRRS-scene-classification" ["l"="42.072,23.968"]
"HZCTony/U-net-with-multiple-classification" ["l"="42.369,24.087"]
"sohiniroych/U-net-for-Multi-class-semantic-segmentation" ["l"="42.388,24.075"]
"calebrob6/land-cover" ["l"="41.792,24.192"]
"csaybar/EarthEngineMasterGIS" ["l"="41.886,24.287"]
"adugnag/gee_s1_ard" ["l"="41.792,24.351"]
"unlimblue/u_net" ["l"="42.067,24.02"]
"leeguandong/How-to-make-high-resolution-remote-sensing-image-dataset" ["l"="42.101,24.002"]
"cplusx/google-street-view-panorama-download" ["l"="40.976,24.516"]
"geoporttishare/Helsinki_GreenView" ["l"="40.96,24.521"]
"robolyst/streetview" ["l"="40.979,24.538"]
"stac-utils/stactools" ["l"="41.509,24.34"]
"intake/intake-stac" ["l"="41.523,24.343"]
"gumblex/tms2geotiff" ["l"="41.737,24.41"]
"deepbands/deep-learning-datasets-maker" ["l"="41.772,24.471"]
"aliaksandr960/segment-anything-eo" ["l"="41.682,24.342"]
"carpentries-incubator/geospatial-python" ["l"="41.495,24.305"]
"geofileops/geofileops" ["l"="41.478,24.264"]
"toddwschneider/nyc-subway-data" ["l"="41.194,23.838"]
"tsdataclinic/SubwayCrowds" ["l"="41.188,23.814"]
"developmentseed/rio-stac" ["l"="41.516,24.383"]
"mapbox/rio-glui" ["l"="41.546,24.433"]
"sat-utils/sat-search" ["l"="41.571,24.376"]
"airbusgeo/cogger" ["l"="41.531,24.481"]
"opendatacube/odc-tools" ["l"="41.519,24.305"]
"opendatacube/datacube-stats" ["l"="41.434,24.3"]
"developmentseed/labs-gpt-stac" ["l"="41.449,24.402"]
"opendatacube/cube-in-a-box" ["l"="41.641,24.344"]
"awesome-spectral-indices/spyndex" ["l"="41.689,24.311"]
"sdadas/polish-nlp-resources" ["l"="40.818,24.476"]
"ksopyla/awesome-nlp-polish" ["l"="40.776,24.471"]
"sdadas/polish-roberta" ["l"="40.806,24.491"]
"kldarek/polbert" ["l"="40.792,24.495"]
"sdadas/polish-sentence-evaluation" ["l"="40.797,24.48"]
"sheerun/awesome-polish-nlp" ["l"="40.762,24.482"]
"ipipan/spacy-pl" ["l"="40.783,24.484"]
"ZILiAT-NASK/BAN-PL" ["l"="40.799,24.451"]
"CLARIN-PL/embeddings" ["l"="40.99,24.444"]
"dzieciou/pystempel" ["l"="40.783,24.511"]
"kwrobel-nlp/krnnt" ["l"="40.775,24.498"]
"sdadas/warsaw-transport" ["l"="40.828,24.511"]
"allegro/HerBERT" ["l"="40.775,24.446"]
"Ermlab/PoLitBert" ["l"="40.797,24.469"]
"chrisociepa/allamo" ["l"="40.749,24.507"]
"CLARIN-PL/LEPISZCZE" ["l"="40.926,24.455"]
"DNCrane/Cover-Tree" ["l"="41.86,23.973"]
"manzilzaheer/CoverTree" ["l"="41.865,24.003"]
"banesullivan/localtileserver" ["l"="41.53,24.316"]
"developmentseed/timvt" ["l"="41.468,24.388"]
"ungarj/mapchete" ["l"="41.636,24.37"]
"mojodna/marblecutter" ["l"="41.631,24.485"]
"gee-community/example-scripts" ["l"="41.862,24.348"]
"gee-community/ee-jupyter-contrib" ["l"="41.91,24.357"]
"CNES/MAJA" ["l"="41.535,25.416"]
"bopen/xarray-sentinel" ["l"="40.955,23.382"]
"ESA-PhiLab/iris" ["l"="40.98,23.452"]
"ndminhhus/geeguide" ["l"="41.877,24.397"]
"seadas/seadas" ["l"="42.089,24.472"]
"mowerther/BNN_2022" ["l"="42.07,24.466"]
"jofmi/agentpy" ["l"="40.939,24.093"]
"Open-EO/openeo-python-client" ["l"="41.702,24.096"]
"Open-EO/openeo-api" ["l"="41.721,24.039"]
"senbox-org/sen2like" ["l"="41.743,24.1"]
"BSifringer/EnhancedDCM" ["l"="41.067,23.967"]
"cjsyzwsh/dnn-for-economic-information" ["l"="41.041,23.943"]
"yannforget/landsatxplore" ["l"="41.872,24.33"]
"dgketchum/Landsat578" ["l"="41.911,24.296"]
"olivierhagolle/LANDSAT-Download" ["l"="41.865,24.258"]
"wuyang0329/unet" ["l"="42.335,24.104"]
"ShawDa/unet-rgb" ["l"="42.349,24.123"]
"fosaken/U-Net-segmentation" ["l"="42.364,24.112"]
"jiankang1991/road_extraction_remote_sensing" ["l"="42.493,23.249"]
"phelber/EuroSAT" ["l"="41.826,24.203"]
"raoofnaushad/Land-Cover-Classification-using-Sentinel-2-Dataset" ["l"="41.819,24.093"]
"microsoft/satellite-imagery-labeling-tool" ["l"="41.641,24.299"]
"VSainteuf/pytorch-psetae" ["l"="41.723,25.379"]
"isaaccorley/torchrs" ["l"="41.783,25.283"]
"microsoft/landcover-orinoquia" ["l"="41.763,24.136"]
"microsoft/AIforEarthDataSets" ["l"="41.639,24.318"]
"microsoft/aerial_wildlife_detection" ["l"="-52.49,10.807"]
"ICESAT-2HackWeek/ICESat2_hackweek_tutorials" ["l"="41.6,23.904"]
"tsutterley/read-ICESat-2" ["l"="41.58,23.899"]
"ICESAT-2HackWeek/2020_ICESat-2_Hackweek_Tutorials" ["l"="41.618,23.908"]
"SmithB/ICESat2" ["l"="41.587,23.912"]
"icesat2py/icepyx" ["l"="41.595,23.941"]
"Oht0nger/PhoLabeler" ["l"="41.611,23.895"]
"icesat-2UT/PhoREAL" ["l"="41.592,23.887"]
"dshean/icesat_tools" ["l"="41.607,23.867"]
"nasa-jpl/captoolkit" ["l"="60.304,9.934"]
"nsidc/NSIDC-Data-Tutorials" ["l"="41.626,23.882"]
"SlideRuleEarth/sliderule-python" ["l"="41.566,23.91"]
"ICESat2-Bathymetry/Information" ["l"="41.585,23.859"]
"SlideRuleEarth/sliderule" ["l"="41.556,23.859"]
"RemotePixel/remotepixel-tiler" ["l"="41.614,24.495"]
"sat-utils/sat-api" ["l"="41.628,24.406"]
"fnemina/pyOSOAA" ["l"="42.093,24.446"]
"tadz-io/hydropt" ["l"="42.042,24.462"]
"SDXorg/pysd" ["l"="40.749,24.038"]
"SDXorg/PySD-Cookbook" ["l"="40.733,24.058"]
"climateinteractive/SDEverywhere" ["l"="40.723,24.008"]
"bpowers/sd.js" ["l"="40.714,24.04"]
"pbreach/venpy" ["l"="40.739,24.014"]
"SDXorg/SD-Tools" ["l"="40.765,24.02"]
"SDXorg/test-models" ["l"="40.725,24.025"]
"quaquel/EMAworkbench" ["l"="49.921,25.95"]
"bpowers/simlin" ["l"="40.75,23.995"]
"transentis/bptk_py_tutorial" ["l"="40.685,24.031"]
"JimDuggan/SDMR" ["l"="40.705,24.017"]
"scottfr/insightmaker" ["l"="40.708,23.994"]
"highperformancecoder/minsky" ["l"="40.706,24.062"]
"jgomezdans/get_modis" ["l"="42.053,24.362"]
"Dan-Patterson/numpy_geometry" ["l"="41.768,24.565"]
"AlexArcPy/registrant" ["l"="41.767,24.591"]
"pysal/splot" ["l"="41.377,24.215"]
"Guzaiwang/CE-Net" ["l"="61.965,36.86"]
"Czt1998/U-net" ["l"="42.433,24.11"]
"mapleneverfade/pytorch-semantic-segmentation" ["l"="42.437,24.083"]
"assassint2017/MICCAI-LITS2017" ["l"="61.995,36.827"]
"mie-lab/location-prediction" ["l"="41.259,24.183"]
"anitagraser/movement-analysis-tools" ["l"="41.224,24.189"]
"mie-lab/location-mode-prediction" ["l"="41.251,24.198"]
"winstonyym/urbanity" ["l"="41.208,24.339"]
"GeoDS/COVID19USFlows" ["l"="-10.094,17.919"]
"UDST/osmnet" ["l"="41.334,24.119"]
"r5py/r5py" ["l"="35.971,19.562"]
"ipeaGIT/r5r" ["l"="39.138,35.371"]
"michelbierlaire/biogeme" ["l"="41.091,23.974"]
"mncosta/biogeme_tutorial" ["l"="41.075,23.948"]
"jpn--/larch" ["l"="41.084,23.992"]
"timothyb0912/pylogit" ["l"="41.118,23.999"]
"calvinmetcalf/topojson.py" ["l"="41.344,24.255"]
"samapriya/gee_asset_manager_addon" ["l"="41.884,24.383"]
"samapriya/ee-appshot" ["l"="41.855,24.405"]
"foamliu/Scene-Classification" ["l"="42.398,23.655"]
"NishantBhavsar/intel-scene-classification" ["l"="42.41,23.629"]
"chenyuntc/scene-baseline" ["l"="42.412,23.667"]
"buptchan/scene-classification" ["l"="42.429,23.644"]
"MarcYin/SIAC_GEE" ["l"="41.995,24.406"]
"MarcYin/SIAC" ["l"="41.998,24.423"]
"bhavesh907/Crop-Classification" ["l"="41.681,25.45"]
"gicait/DL-for-satellite-image-analysis" ["l"="42.025,24.119"]
"olgaliak/segmentation-unet-maskrcnn" ["l"="42.047,24.119"]
"acgeospatial/Satellite_Imagery_Python" ["l"="41.818,24.34"]
"acgeospatial/Geospatial_Python_CourseV1" ["l"="41.809,24.429"]
"acgeospatial/GoogleEarthEnginePy" ["l"="41.85,24.389"]
"PratyushTripathy/COINS" ["l"="41.261,24.283"]
"mszell/bikenwgrowth" ["l"="41.252,24.231"]
"MarcCoru/crop-type-mapping" ["l"="41.699,25.403"]
"thinkingmachines/ph-poverty-mapping" ["l"="42.069,24.21"]
"thinkingmachines/unicef-ai4d-poverty-mapping" ["l"="42.106,24.211"]
"jmathur25/predicting-poverty-replication" ["l"="42.026,24.205"]
"lironui/Double-Branch-Dual-Attention-Mechanism-Network" ["l"="41.602,23.298"]
"codeRimoe/DL_for_RSIs" ["l"="42.106,23.967"]
"srihari-humbarwadi/cityscapes-segmentation-with-Unet" ["l"="41.933,23.938"]
"fortitude94deng/huawei_remote-sensing" ["l"="42.27,23.854"]
"Parker-Lyu/rscup2019_classifier" ["l"="42.26,23.843"]
"niecongchong/RS-Scene-Classification" ["l"="42.313,23.777"]
"fortitude94deng/baidu-remote-sensing" ["l"="42.279,23.84"]
"luoqingshan/Gra_Dedign" ["l"="42.235,23.843"]
"tm9161/SAT" ["l"="42.253,23.82"]
"cogeotiff/cog-spec" ["l"="41.649,24.527"]
"feevos/resuneta" ["l"="42.032,24.149"]
"waldnerf/decode" ["l"="42.035,24.171"]
"feevos/ceecnet" ["l"="42.081,24.14"]
"sentinel-hub/field-delineation" ["l"="41.667,25.423"]
"Akhilesh64/ResUnet-a" ["l"="42.053,24.159"]
"samsammurphy/ee-atmcorr-timeseries" ["l"="41.951,24.376"]
"patrickcgray/deep_learning_ecology" ["l"="-52.499,10.888"]
"DuFanXin/deep_residual_unet" ["l"="42.446,24.149"]
"Kaido0/Brain-Tissue-Segment-Keras" ["l"="42.412,24.131"]
"developmentseed/mosaicjson-spec" ["l"="41.48,24.466"]
"opendatacube/datacube-notebooks" ["l"="41.449,24.293"]
"opendatacube/datacube-dataset-config" ["l"="41.401,24.282"]
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation-tf2" ["l"="42.055,24.051"]
"nasa-gibs/mrf" ["l"="41.822,24.52"]
"nasa-gibs/onearth-boxes" ["l"="41.811,24.486"]
"fangfchen/AIChallenger_SceneClassification_ZJUGIVE" ["l"="42.408,23.684"]
"yya007/SceneClassification" ["l"="42.432,23.667"]
"puke3615/SceneClassify" ["l"="42.379,23.699"]
"seanyx/RivWidthCloudPaper" ["l"="42.116,24.555"]
"geospatial-jeff/aiocogeo" ["l"="41.53,24.424"]
"luyanger1799/Amazing-Semantic-Segmentation" ["l"="62,37.031"]
"niecongchong/HRNet-keras-semantic-segmentation" ["l"="42.33,23.973"]
"bubbliiiing/Semantic-Segmentation" ["l"="50.169,30.267"]
"kirilcvetkov92/Semantic-Segmentation-BiSeNet" ["l"="42.291,24.064"]
"junyuchen245/SPECT-CT-Seg-ResUNet-Keras" ["l"="42.264,24.062"]
"guanfuchen/semseg" ["l"="53.353,30.932"]
"TianzhongSong/Person-Segmentation-Keras" ["l"="43.431,31.013"]
"divamgupta/image-segmentation-keras" ["l"="61.967,37.015"]
"microsoft/Uganda-Tanzania-Building-Footprints" ["l"="41.323,24.478"]
"microsoft/AustraliaBuildingFootprints" ["l"="41.305,24.481"]
"sustainlab-group/africa_poverty" ["l"="42.043,24.219"]
"chrisyeh96/africa_poverty_clean" ["l"="42.067,24.234"]
"Global-Policy-Lab/mosaiks-paper" ["l"="42.09,24.228"]
"nsidc/NSIDC-Data-Access-Notebook" ["l"="41.635,23.852"]
"ucdavisdatalab/Intro-to-Desktop-GIS-with-QGIS" ["l"="41.581,24.725"]
"ucdavisdatalab/Spatial_SQL" ["l"="41.57,24.753"]
"mltConsEcol/QGIS-Tutorial" ["l"="41.591,24.759"]
"tjukanovt/QGIS-tutorial" ["l"="41.58,24.651"]
"BrandonSmithJ/MDN" ["l"="42.076,24.45"]
"Servir-Mekong/hydra-floods" ["l"="41.842,24.347"]
"cordmaur/WaterDetect" ["l"="41.934,24.445"]
"spaceml-org/ml4floods" ["l"="42.147,24.327"]
"CNES/swot-hydrology-toolbox" ["l"="41.483,23.75"]
"SWOTAlgorithms/RiverObs" ["l"="41.471,23.762"]
"CNES/swot_simulator" ["l"="41.473,23.709"]
"SWOT-community/SWOT-OpenToolkit" ["l"="41.492,23.79"]
"mittrees/Treepedia_Public" ["l"="40.835,24.658"]
"y26805/Treepedia_Public" ["l"="40.901,24.601"]
"krakchris/TreeTect" ["l"="40.803,24.663"]
"billcai/treepedia_dl_public" ["l"="40.833,24.678"]
"stevage/OpenTrees" ["l"="40.8,24.695"]
"AB-CE/abcFinance" ["l"="40.875,24.126"]
"AB-CE/abce" ["l"="40.892,24.112"]
"alexsingleton/urban_analytics" ["l"="41.34,24.212"]
"GDSL-UL/Teaching_Links" ["l"="41.442,24.334"]
"isciences/exactextractr" ["l"="39.221,35.283"]
"rspatial/terra" ["l"="39.194,35.276"]
"dovahcrow/patchify.py" ["l"="41.995,23.969"]
"the-lay/tiler" ["l"="42.006,23.925"]
"ternaus/kaggle_dstl_submission" ["l"="41.999,24.039"]
"lopuhin/kaggle-dstl" ["l"="42.008,24.016"]
"SpaceNetChallenge/utilities" ["l"="42.489,23.132"]
"ternaus/TernausNetV2" ["l"="50.972,30.634"]
"theonegis/dcstfn" ["l"="41.758,24.869"]
"theonegis/edcstfn" ["l"="41.741,24.839"]
"Rohit18/spatiotemporalimagefusion" ["l"="41.765,24.896"]
"chenjia5220967/CSSFc" ["l"="41.777,24.887"]
"theonegis/ganstfm" ["l"="41.744,24.822"]
"LouisChen0104/swinstfm" ["l"="41.727,24.826"]
"tylere/ee-jupyter-examples" ["l"="41.93,24.344"]
"gee-community/ee-runner" ["l"="41.892,24.364"]
"azavea/raster-vision-qgis" ["l"="41.845,24.036"]
"raster-foundry/raster-foundry" ["l"="41.853,24.055"]
"azavea/raster-vision-aws" ["l"="41.841,24.07"]
"csdms/bmi" ["l"="41.744,23.933"]
"azavea/raster-vision-fastai-plugin" ["l"="41.841,24.008"]
"Open-EO/openeo-qgis-plugin" ["l"="41.726,24.005"]
"Open-EO/openeo-web-editor" ["l"="41.74,24.007"]
"opengeospatial/ogcapi-common" ["l"="41.476,24.552"]
"opengeospatial/ogcapi-coverages" ["l"="41.461,24.587"]
"opengeospatial/ogcapi-processes" ["l"="41.493,24.542"]
"opengeospatial/ogcapi-records" ["l"="41.458,24.551"]
"opengeospatial/ogcapi-maps" ["l"="41.468,24.567"]
"opengeospatial/developer-events" ["l"="41.434,24.591"]
"jiye-ML/Semantic-Segmentation-Satellite-image-segment" ["l"="42.11,23.99"]
"whu-csl/WHU-SEN-City" ["l"="42.473,23.989"]
"jnoat92/atrous-cGAN-for-SAR-optical-synthesis" ["l"="42.491,23.973"]
"ubarsc/python-fmask" ["l"="41.918,24.477"]
"dr-lizhiwei/OpenSICDR" ["l"="41.935,24.493"]
"IPL-UV/ee_ipl_uv" ["l"="41.91,24.499"]
"HaiyangOceanWang/STARFM" ["l"="41.686,24.897"]
"stac-utils/stac-validator" ["l"="41.499,24.413"]
"kbgg/qgis-stac-browser" ["l"="39.516,23.601"]
"stac-utils/stac-check" ["l"="41.485,24.418"]
"truong-pham-dang/1D-Shallow-Water-equations" ["l"="41.75,23.715"]
"dymaxionlabs/dask-rasterio" ["l"="41.291,24.24"]
"worldbank/ML-classification-algorithms-poverty" ["l"="42.13,24.223"]
"drivendataorg/pover-t-tests" ["l"="42.264,24.258"]
"caiostringari/deepwaves" ["l"="42.055,24.326"]
"RemotePixel/aws-sat-api-py" ["l"="41.496,24.847"]
"RemotePixel/aws-sat-api" ["l"="41.488,24.873"]
"Soumyabrata/CloudSegNet" ["l"="41.968,24.672"]
"Soumyabrata/HDR-cloud-segmentation" ["l"="41.977,24.695"]
"cogeotiff/rio-tiler-mosaic" ["l"="41.463,24.476"]
"cogeotiff/rio-tiler-mvt" ["l"="41.465,24.493"]
"carsonluuu/Poverty-Prediction-by-Satellite-Imagery" ["l"="42.011,24.187"]
"Arshita27/Satellite_Imagery_ML" ["l"="42.039,24.189"]
"GeoscienceAustralia/dea-config" ["l"="41.564,24.565"]
"GeoscienceAustralia/dea-knowledge-hub" ["l"="41.558,24.596"]
"ykamikawa/tf-keras-SegNet" ["l"="53.495,30.61"]
"Gurupradeep/FCN-for-Semantic-Segmentation" ["l"="53.454,30.618"]
"stevenpawley/Pyspatialml" ["l"="41.333,24.19"]
"Blaizzy/BiSeNet-Implementation" ["l"="42.315,24.066"]
"deeppavlov/Slavic-BERT-NER" ["l"="40.733,24.477"]
"susurrant/rs-img-classification" ["l"="42.026,24.055"]
"qzhang95/STS-CNN" ["l"="41.534,23.12"]
"pysal/inequality" ["l"="41.315,24.196"]
"pysal/mapclassify" ["l"="41.364,24.209"]
"dzieciou/lemmatizer-pl" ["l"="40.767,24.521"]
"Tutanchamon/pl_stemmer" ["l"="40.767,24.538"]
"drivendataorg/power-laws-forecasting" ["l"="42.42,24.318"]
"drivendataorg/power-laws-cold-start" ["l"="42.442,24.336"]
"mojodna/marblecutter-virtual" ["l"="41.632,24.516"]
"LSDtopotools/LSDMappingTools" ["l"="41.716,23.938"]
"yongyehuang/ocean-of-knowledge" ["l"="42.459,23.614"]
"yashbhalgat/Intel_Scene_Classification_Challenge" ["l"="42.412,23.61"]
"yongyehuang/DC-hi_guides" ["l"="42.471,23.584"]
"sat-utils/sat-stac" ["l"="41.556,24.413"]
"yongyehuang/view_based_sentiment" ["l"="42.474,23.619"]
"opengeospatial/ogcapi-tiles" ["l"="41.449,24.614"]
"opengeos/leafmap" ["l"="41.646,24.202"]
"google/earthengine-community" ["l"="41.77,24.296"]
"microsoft/PlanetaryComputerExamples" ["l"="41.587,24.326"]
"JuliaDynamics/Agents.jl" ["l"="21.983,16.71"]
"briatte/awesome-network-analysis" ["l"="25.963,-26.116"]
"py-why/dowhy" ["l"="43.725,25.604"]
"eclab/mason" ["l"="40.932,24.014"]
"salesforce/ai-economist" ["l"="57.896,18.362"]
"cloudtostreet/Sen1Floods11" ["l"="42.288,24.295"]
"edornd/mmflood" ["l"="42.308,24.273"]
"cloudtostreet/MODIS_GlobalFloodDatabase" ["l"="42.303,24.316"]
"Tamer-Saleh/S1GFlood-Detection" ["l"="42.327,24.307"]
"CAU-HE/CMCDNet" ["l"="42.347,24.165"]
"drivendataorg/stac-overflow" ["l"="42.347,24.293"]
"Mahyarona/Flood-Detection-Algorithm-using-GEE" ["l"="42.331,24.325"]
"NASA-IMPACT/hls-foundation-os" ["l"="41.729,25.277"]
"sidgan/ETCI-2021-Competition-on-Flood-Detection" ["l"="42.325,24.282"]
"geodrak/OMBRIA" ["l"="42.283,24.317"]
"ClmRmb/SEN12-FLOOD" ["l"="42.311,24.298"]
"csdms-contrib/fwdet" ["l"="42.308,24.335"]
"r-spatial/rgee" ["l"="41.723,24.268"]
"RadarCODE/awesome-sar" ["l"="41.006,23.349"]
"googleapis/google-api-python-client" ["l"="44.34,20.677"]
"gmplot/gmplot" ["l"="41.427,23.926"]
"googlemaps/google-maps-services-js" ["l"="22.037,-27.682"]
"googleapis/google-cloud-python" ["l"="44.821,16.544"]
"burnash/gspread" ["l"="44.5,20.689"]
"pbugnion/gmaps" ["l"="43.541,24.063"]
"googlemaps/google-maps-services-java" ["l"="56.685,-14.454"]
"slimkrazy/python-google-places" ["l"="-53.044,-11.864"]
"seatgeek/fuzzywuzzy" ["l"="52.666,25.949"]
"GoogleCloudPlatform/python-docs-samples" ["l"="44.859,16.509"]
"rapidsai/cuspatial" ["l"="43.959,23.66"]
"pangeo-data/pangeo-docker-images" ["l"="41.507,24.315"]
"OpenGeoscience/geonotebook" ["l"="41.602,24.177"]
"MathieuRita/SAR_denoising" ["l"="42.702,23.95"]
"grip-unina/SAR-CNN" ["l"="42.705,23.932"]
"JK-the-Ko/SAR-CAM" ["l"="42.724,23.924"]
"malshaV/SAR_DDPM" ["l"="42.66,23.948"]
"davin11/CNN-NLM" ["l"="42.734,23.963"]
"georust/wkt" ["l"="41.228,24.373"]
"kylebarron/geo-index" ["l"="41.315,24.397"]
"msalib/geo-rasterize" ["l"="41.217,24.395"]
"tcassou/mapsplotlib" ["l"="41.429,23.873"]
"flask-extensions/Flask-GoogleMaps" ["l"="41.858,22.387"]
"heldersepu/GMapCatcher" ["l"="41.391,23.851"]
"JoanMartin/trackanimation" ["l"="41.404,23.878"]
"tkrajina/gpxpy" ["l"="14.006,-12.165"]
"ryancox/motionless" ["l"="41.385,23.893"]
"e-sensing/sits" ["l"="39.23,35.251"]
"r-spatial/mapview" ["l"="39.162,35.283"]
"r-spatial/stars" ["l"="39.183,35.267"]
"r-tmap/tmap" ["l"="39.152,35.271"]
"r-spatial/sf" ["l"="39.132,35.259"]
"geocompx/geocompr" ["l"="39.152,35.245"]
"yisun98/SOLC" ["l"="42.321,24.029"]
"milleniums/underwater-object-detection-mmdetection" ["l"="52.916,13.512"]
"whuyao/Urban_Perception_CNN_Model" ["l"="40.942,24.561"]
"ylsislove/Urban-Perception-Assessment-Based-on-CNN" ["l"="40.919,24.574"]
"joewdavies/awesome-frontend-gis" ["l"="41.468,24.411"]
"maplibre/awesome-maplibre" ["l"="39.54,24.139"]
"onthegomap/maplibre-contour" ["l"="39.521,24.143"]
"w3reality/three-geo" ["l"="37.799,24.12"]
"qgis/qgis-js" ["l"="37.89,24.092"]
"geographyclub/gis-from-command-line" ["l"="41.482,24.482"]
"Gaia3D/mago-3d-tiler" ["l"="37.853,24.055"]
"OSGeo/PROJ" ["l"="39.378,23.872"]
"Turbo87/utm" ["l"="41.523,24.229"]
"facebookresearch/Context-Aware-Representation-Crop-Yield-Prediction" ["l"="42.179,24.326"]
"Drinkler/Yield-Prediction" ["l"="42.199,24.315"]
"satish1901/Methane-detection-from-hyperspectral-imagery" ["l"="42.121,24.521"]
"UCSB-VRL/MethaneMapper-Spectral-Absorption-aware-Hyperspectral-Transformer-for-Methane-Detection" ["l"="42.11,24.508"]
"UCSB-VRL/StressNet-Detecting-stress-from-thermal-videos" ["l"="42.148,24.539"]
"spaceml-org/STARCOP" ["l"="42.06,24.494"]
"hotosm/OpenAerialMap" ["l"="41.894,24.027"]
"hn303/30DayMapChallenge-Bot" ["l"="41.672,24.445"]
"z3tt/30DayMapChallenge2019" ["l"="40.774,35.658"]
"joewdavies/geoblender" ["l"="41.591,24.411"]
"MapPromptMonday/MapPromptMonday" ["l"="41.692,24.44"]
"jwoLondon/30dayMapChallenge" ["l"="41.682,24.427"]
"Pecners/rayshader_portraits" ["l"="40.847,35.595"]
"z3tt/30DayChartChallenge_Collection2021" ["l"="40.961,35.62"]
"anuga-community/anuga_core" ["l"="41.721,23.825"]
"openearth/glofrim" ["l"="39.987,25.258"]
"pyswmm/swmmio" ["l"="39.893,25.313"]
"HEMLab/HiPIMS-CUDA" ["l"="41.7,23.773"]
"daleroberts/s2cloudmask" ["l"="41.971,24.624"]
"adugnag/SAR-FCN-DK3" ["l"="42.823,23.877"]
"adugnag/CV-deSpeckNet" ["l"="42.836,23.885"]
"GispoCoding/GlobeBuilder" ["l"="41.598,24.6"]
"GispoCoding/QGIS-visualization-workshop" ["l"="41.578,24.606"]
"DahnJ/EO-jobs" ["l"="41.704,24.378"]
"Clay-foundation/model" ["l"="41.726,25.265"]
"developmentseed/tifeatures" ["l"="41.446,24.419"]
"mkeller3/FastVector" ["l"="41.404,24.438"]
"microsoft/SouthAmericaBuildingFootprints" ["l"="41.279,24.5"]
"microsoft/KenyaNigeriaBuildingFootprints" ["l"="41.295,24.507"]
"mszell/taxonomybikenw" ["l"="41.22,24.225"]
"osmcode/pyosmium" ["l"="39.452,24.286"]
"CS-SI/eodag" ["l"="41.564,24.329"]
"CS-SI/eodag-labextension" ["l"="41.493,24.355"]
"plovercode/DS-python-geospatial" ["l"="41.761,24.451"]
"USGS-EROS/espa-bulk-downloader" ["l"="41.93,24.246"]
"olivierhagolle/peps_download" ["l"="41.863,24.233"]
"kapadia/usgs" ["l"="41.883,24.237"]
"USGS-EROS/espa-surface-reflectance" ["l"="41.951,24.274"]
"USGS-EROS/espa-api" ["l"="41.913,24.25"]
"stac-utils/stac-geoparquet" ["l"="41.462,24.364"]
"quaquel/pyNetLogo" ["l"="40.868,24.042"]
"chathika/NL4Py" ["l"="40.889,24.034"]
"gama-platform/gama.old" ["l"="40.908,23.987"]
"ropensci/nlrx" ["l"="39.282,35.395"]
"NetLogo/NW-Extension" ["l"="40.911,24.027"]
"Repast/repast.simphony" ["l"="40.858,24.017"]
"riatelab/statsbreaks" ["l"="41.366,24.504"]
"eurostat/regl-map-animation" ["l"="41.391,24.546"]
"riatelab/magrit" ["l"="41.349,24.521"]
"eurostat/eurostat-map" ["l"="41.377,24.562"]
"riatelab/geoviz" ["l"="41.373,24.517"]
"diegovalsesia/speckle2void" ["l"="42.773,23.91"]
"emanueledalsasso/SAR2SAR" ["l"="42.763,23.928"]
"adugnag/deSpeckNet" ["l"="42.813,23.897"]
"benbovy/spherely" ["l"="41.378,24.273"]
"duckdb/duckdb-spatial" ["l"="41.41,24.315"]
"landsat-pds/landsat_ingestor" ["l"="41.738,24.369"]
"developmentseed/landsat-api" ["l"="41.723,24.361"]
"gipit/gippy" ["l"="41.685,24.388"]
"ceholden/landsat_preprocess" ["l"="41.832,24.391"]
"beeoda/tutorials" ["l"="41.812,24.392"]
"gbrunner/programming-for-gis-and-rs" ["l"="41.833,24.432"]
"awesome-spectral-indices/spectral" ["l"="41.71,24.32"]
"mcuttler/CoastSat.islands" ["l"="41.958,24.315"]
"drivendataorg/open-cities-ai-challenge" ["l"="42.454,24.304"]
"drivendataorg/open-ai-caribbean" ["l"="42.484,24.299"]
"qubvel/open-cities-challenge" ["l"="42.484,24.321"]
"maplibre/martin" ["l"="39.442,24.103"]
"geopython/pygeometa" ["l"="41.437,24.464"]
"lironui/Multi-Attention-Network" ["l"="42.21,23.964"]
"lironui/MAResU-Net" ["l"="42.222,23.973"]
"lironui/ABCNet" ["l"="42.243,23.979"]
"ggsDing/LANet" ["l"="42.237,23.919"]
"xinluo2018/WatNet" ["l"="42.06,24.543"]
"isikdogan/deepwatermap" ["l"="41.992,24.511"]
"Jack-bo1220/Benchmarks-for-Water-Body-Extraction-from-HRORS-Imagery" ["l"="42.125,24.587"]
"xinluo2018/Tibet-Water-2020" ["l"="42.087,24.553"]
"DingLei14/WiCoNet" ["l"="42.253,23.9"]
"microsoft/planetary-computer-apis" ["l"="41.567,24.389"]
"stac-utils/stac-server" ["l"="41.53,24.45"]
"opengeos/geospatial-ml" ["l"="41.618,24.132"]
"opengeos/HyperCoast" ["l"="41.548,24.225"]
"yotarazona/scikit-eo" ["l"="41.581,24.224"]
"stac-utils/stac-asset" ["l"="41.438,24.392"]
"stac-utils/stac-pydantic" ["l"="41.505,24.382"]
"microsoft/planetary-computer-containers" ["l"="41.531,24.333"]
"gjoseph92/geogif" ["l"="41.517,24.326"]
"stac-utils/xstac" ["l"="40.592,25.427"]
"davidfrantz/force" ["l"="41.778,24.102"]
"jgrss/satsmooth" ["l"="41.788,24.064"]
"davidbrochart/xtrude" ["l"="41.391,24.254"]
"nealjean/predicting-poverty" ["l"="41.957,24.192"]
"Ermlab/pl-sentiment-analysis" ["l"="40.741,24.457"]
"WangZhenqing-RS/2021Tianchi_RS" ["l"="42.196,24.024"]
"radiantearth/crop-type-detection-ICLR-2020" ["l"="41.924,23.961"]
"radiantearth/geo-ml-model-catalog" ["l"="41.961,23.937"]
"radiantearth/radiant-mlhub" ["l"="41.958,23.978"]
"radiantearth/ml4eo-bootcamp-2021" ["l"="41.952,23.956"]
"UDST/bayarea_urbansim" ["l"="41.213,24.061"]
"cordmaur/WaterQuality" ["l"="41.958,24.476"]
"cjsyzwsh/ASU-DNN" ["l"="41.028,23.93"]
"lambgeo/docker-lambda" ["l"="41.578,24.467"]
"rouault/cogserver" ["l"="41.546,24.513"]
"RandomFractals/geo-data-viewer" ["l"="41.289,24.438"]
"paulvangentcom/python_corona_simulation" ["l"="40.769,24.18"]
"AshtonIzmev/covid-19-pandemic-simulation" ["l"="40.738,24.185"]
"JasmineRain/NAIC_AI-RS" ["l"="42.216,24.003"]
"OSGeo/ows.js" ["l"="41.434,24.516"]
"tomkralidis/csw4js" ["l"="41.418,24.543"]
"Accioy/SAR2optical" ["l"="42.599,23.967"]
"mohit-kaushik/SAR_to_Optical" ["l"="42.586,23.959"]
"JessieZ96/SAR-to-Optical" ["l"="42.572,23.97"]
"soyan1999/segmentation_hrnet_keras" ["l"="42.332,23.939"]
"yuanyuanli85/tf-hrnet" ["l"="42.364,23.947"]
"AI-Chen/HRNet-V2" ["l"="42.364,23.965"]
"niecongchong/DANet-keras" ["l"="42.342,23.956"]
"gipit/gips" ["l"="41.709,24.436"]
"olivierhagolle/Start_maja" ["l"="41.689,24.455"]
"lironui/Linear-Attention-Mechanism" ["l"="42.232,23.948"]
"planetlabs/gpq" ["l"="41.417,24.352"]
"geoarrow/geoarrow-python" ["l"="41.368,24.358"]
"geoarrow/deck.gl-layers" ["l"="41.383,24.346"]
"kylebarron/parquet-wasm" ["l"="41.344,24.33"]
"toddwschneider/nyc-subway-turnstile-data" ["l"="41.167,23.798"]
"pypims/pypims" ["l"="41.7,23.753"]
"ThanasisMattas/shortestpaths" ["l"="41.777,23.707"]
"ThanasisMattas/cp-handbook" ["l"="41.791,23.706"]
"podaac/tutorials" ["l"="41.554,23.995"]
"podaac/data-subscriber" ["l"="41.524,23.903"]
"songbingze/MLFF-GAN" ["l"="41.767,24.842"]
"qpyeah/MUSTFN" ["l"="41.768,24.826"]
"RaymondByc/FID-CNN" ["l"="42.749,23.978"]
"Maximkaaa/galileo" ["l"="41.326,24.379"]
"maplibre/maplibre-tile-spec" ["l"="39.526,24.127"]
"busstoptaktik/geodesy" ["l"="41.259,24.422"]
"ESDS-Leipzig/sen2nbar" ["l"="41.713,24.203"]
"TUW-GEO/Equi7Grid" ["l"="41.76,24.047"]
"Akash-Ramjyothi/Cloud-and-Fog-removal-System-using-Generative-Adversarial-Networks-Satellite-Image-Processing" ["l"="42.13,24.645"]
"emanueledalsasso/SAR-CNN" ["l"="42.785,23.932"]
"ucd-cws/arcpy_metadata" ["l"="41.799,24.681"]
"Esri/hermes" ["l"="41.797,24.707"]
"jstep/Arcpy" ["l"="41.818,24.7"]
"GeomaticsAndRS/sar" ["l"="42.734,23.938"]
"XwK-P/ID-CNN" ["l"="42.756,23.95"]
"FIBLAB/MoveSim" ["l"="50.579,0.699"]
"VeinsOfTheEarth/RivGraph" ["l"="41.867,24.53"]
"parevalo/gee-ccdc-tools" ["l"="41.928,24.419"]
"parevalo/landtrendr-ccdc" ["l"="41.957,24.437"]
"nasa-gibs/gpu-data-to-image" ["l"="41.833,24.548"]
"transentis/beergame" ["l"="40.654,24.026"]
"UCSB-VRL/bisqueUCSB" ["l"="42.161,24.522"]
"amilworks/ece178" ["l"="42.186,24.534"]
"SWOT-JPL/swotsimulator" ["l"="41.468,23.688"]
"adugnag/deSpeckNet-TF-GEE" ["l"="42.831,23.903"]
"dveyarangi/cloud-net-plus" ["l"="41.914,24.587"]
"GFZ/arosics" ["l"="41.774,24.018"]
"SynxFlow/SynxFlow" ["l"="41.686,23.747"]
"lukeshope/hipims-ocl" ["l"="41.716,23.749"]
"jonm3D/OpenOceans" ["l"="41.597,23.849"]
"EduinHSERNA/pyGEDI" ["l"="37.608,22.923"]
"allegro/klejbenchmark-baselines" ["l"="40.749,24.431"]
"openmole/openmole" ["l"="40.86,23.932"]
"openmole/openmole-market" ["l"="40.85,23.908"]
"BioMedIA/irtk-refactored-deprecated" ["l"="40.837,23.919"]
"SlideRuleEarth/h5coro" ["l"="41.548,23.832"]
"jonm3D/h5xray" ["l"="41.534,23.828"]
"developmentseed/tilebench" ["l"="41.492,24.442"]
"VXallset/deep-high-resolution-net.TensorFlow" ["l"="42.386,23.924"]
"jdoblas/DETER_R_AMZ" ["l"="41.899,24.406"]
"clw5180/remote_sensing_object_detection_2019" ["l"="42.311,23.815"]
"tangzhenjie/semantic_segmentation_contest" ["l"="42.334,23.801"]
"gauteh/hidefix" ["l"="41.167,24.478"]
"gauteh/dars" ["l"="41.146,24.5"]
"marceloprates/prettymaps" ["l"="41.584,24.105"]
"chrieke/prettymapp" ["l"="41.642,24.109"]
"rougier/scientific-visualization-book" ["l"="47.96,28.048"]
"anvaka/city-roads" ["l"="39.072,23.739"]
"chriskiehl/Gooey" ["l"="42.747,20.842"]
"Textualize/rich" ["l"="44.658,20.487"]
"a-b-street/abstreet" ["l"="-9.947,-4.603"]
"gboeing/osmnx-examples" ["l"="41.442,24.143"]
"Kanaries/pygwalker" ["l"="42.981,20.755"]
"marimo-team/marimo" ["l"="43.003,20.692"]
"ChenlieShi-NWU/Free-shared-Spatiotemporal-method-of-remote-sensing-" ["l"="41.707,24.793"]
"tytupski/GEE-Image-Fusion" ["l"="41.689,24.813"]
"px39n/Awesome-Data-Fusion-for-Remote-Sensing" ["l"="41.687,24.658"]
"opengeos/streamlit-geospatial" ["l"="41.632,24.255"]
"IBM/terratorch" ["l"="41.745,25.258"]
"isislab-unisa/dmason" ["l"="40.939,23.979"]
"GMUEClab/ecj" ["l"="49.885,25.922"]
"xrubio/pandora" ["l"="40.881,23.999"]
"fmichel/MaDKit" ["l"="40.95,23.992"]
"PacktPublishing/Python-for-ArcGIS-Pro" ["l"="41.795,24.585"]
"geopandas/xyzservices" ["l"="41.476,24.278"]
"domlysz/BlenderGIS" ["l"="-32.629,-27.672"]
"minorua/Qgis2threejs" ["l"="39.245,23.645"]
"anvaka/peak-map" ["l"="37.409,25.09"]
"tylermorganwall/rayshader" ["l"="40.707,35.416"]
"OpenTopography/RiverREM" ["l"="41.733,24.509"]
"libgeos/geos" ["l"="39.436,23.918"]
"mikedh/trimesh" ["l"="62.784,0.189"]
"ESDS-Leipzig/cubo" ["l"="41.659,24.349"]
"google/earthengine-jupyter" ["l"="41.689,24.143"]
"microsoft/RoadDetections" ["l"="41.543,24.305"]
"opengeos/open-buildings" ["l"="41.428,24.371"]
"coolzhao/Geo-SAM" ["l"="41.692,24.364"]
"OvertureMaps/data" ["l"="41.437,24.351"]
"opengeos/maxar-open-data" ["l"="41.592,24.343"]
"facebookmicrosites/Open-Mapping-At-Facebook" ["l"="39.813,22.756"]
"kraina-ai/quackosm" ["l"="41.388,24.36"]
"mapbox/mapbox-sdk-py" ["l"="41.41,24.074"]
"mapbox/mapbox-cli-py" ["l"="41.394,24.048"]
"mapbox/mapboxgl-jupyter" ["l"="41.485,24.132"]
"Bolton-and-Menk-GIS/restapi" ["l"="41.785,24.641"]
"acolite/acolite" ["l"="42.067,24.42"]
"hygeos/polymer" ["l"="42.121,24.438"]
"Doodleverse/dash_doodler" ["l"="42.192,24.24"]
"MLMondays/MLMONDAYS" ["l"="42.222,24.247"]
"Doodleverse/segmentation_gym" ["l"="42.226,24.231"]
"2320sharon/Sniffer" ["l"="42.101,24.254"]
"UNCG-DAISY/Instagrain" ["l"="42.256,24.225"]
"opendatacube/datacube-ows" ["l"="41.568,24.504"]
"microsoft/PlanetaryComputer" ["l"="41.57,24.348"]
"microsoft/planetary-computer-hub" ["l"="41.585,24.378"]
"microsoft/planetary-computer-sdk-for-python" ["l"="41.602,24.38"]
"planetlabs/planet-client-python" ["l"="41.831,24.224"]
"planetlabs/qgis-planet-plugin" ["l"="41.88,24.21"]
"podaac/hydrocron" ["l"="41.512,23.875"]
"lakshya0904/Crop-Yield-Prediction" ["l"="42.225,24.329"]
"AlexeyPechnikov/pygmtsar" ["l"="40.955,23.335"]
"AmberHen/WHU-OPT-SAR-dataset" ["l"="42.393,24.029"]
"yaoxu008/QXS-SAROPT" ["l"="42.443,24.011"]
"Ray010221/MCANet" ["l"="42.365,24.027"]
"XD-MG/DDHRNet" ["l"="42.321,24.005"]
"MarsZhaoYT/SAR2Opt-Heterogeneous-Dataset" ["l"="42.483,24.003"]
"whu-pzhang/ASANet" ["l"="42.423,24.034"]
"PatrickTUM/multimodalCD_ISPRS21" ["l"="42.436,23.978"]
"LauraChow/HunanMultimodalDataset" ["l"="42.412,24.009"]
"PatrickTUM/UnCRtainTS" ["l"="42.009,24.575"]
"Phoenix-Shen/DSEN2_CR_PYTORCH" ["l"="42.036,24.544"]
"xpublish-community/xpublish" ["l"="40.612,25.46"]
"xarray-contrib/datatree" ["l"="40.634,25.459"]
"NASA-Openscapes/earthdata-cloud-cookbook" ["l"="41.632,24.082"]
"pangeo-data/xESMF" ["l"="40.751,25.483"]
"ESA-PhiLab/radiometric-slope-correction" ["l"="41.828,24.409"]
"wouellette/ee-dynamic-time-warping" ["l"="41.809,24.409"]
"open-geocomputing/OpenEarthEngineLibrary" ["l"="41.765,24.36"]
"stac-utils/rustac-py" ["l"="41.323,24.422"]
"reidfalconer/landcover_classification" ["l"="41.819,24.052"]
"CS-SI/eodag-cube" ["l"="41.469,24.374"]
"philippgaertner/awesome-earth-engine-apps" ["l"="41.823,24.375"]
"SebastianHafner/DS_UNet" ["l"="42.454,23.946"]
"Lihy256/MSCDUnet" ["l"="42.46,23.964"]
"amforte/Topographic-Analysis-Kit" ["l"="41.694,23.889"]
"csdms-contrib/topotoolbox" ["l"="41.706,23.912"]
"aazuspan/snazzy" ["l"="41.855,24.42"]
"microsoft/PlanetaryComputerDataCatalog" ["l"="41.577,24.449"]
"neeraj3029/awesome-sar-deep-learning" ["l"="42.711,23.906"]
"ImageRestorationToolbox/SAR-Despeckling" ["l"="42.711,23.884"]
"IPL-UV/DL-L8S2-UV" ["l"="41.937,24.65"]
"felt/tippecanoe" ["l"="39.472,24.117"]
"movetk/movetk" ["l"="41.174,24.177"]
"kleok/FLOODPY" ["l"="41.693,24.561"]
"PratyushTripathy/global_flood_mapper" ["l"="41.713,24.638"]
"opendatacube/eo-datasets" ["l"="41.553,24.579"]
"opendatacube/odc-stats" ["l"="41.547,24.611"]
"CityScope/CS_Simulation_GAMA" ["l"="40.888,23.952"]
"gama-platform/gama.experimental" ["l"="40.879,23.977"]
"COMOKIT/COMOKIT-Model" ["l"="40.909,23.948"]
"r-and-gama/gamar" ["l"="40.891,23.969"]
"mitmedialab/Basic" ["l"="40.919,23.963"]
"ANRGenstar/genstar" ["l"="40.902,23.961"]
"gama-platform/gama" ["l"="40.867,23.963"]
"geopython/GeoHealthCheck" ["l"="38.037,22.953"]
"wmo-cop/pyoscar" ["l"="41.414,24.489"]
"csaybar/ee-fastapi" ["l"="41.721,24.685"]
"keliangli/yaogan" ["l"="42.262,23.793"]
"highperformancecoder/minsky-models" ["l"="40.675,24.073"]
"developmentseed/eoapi-k8s" ["l"="41.452,24.387"]
"andrea-ballatore/teaching-programming-for-gis" ["l"="41.506,24.442"]
"Yusin2Chen/SARoptical_fusion" ["l"="42.468,24.022"]
"Coordi777/Conditional-Diffusion-for-SAR-to-Optical-Image-Translation" ["l"="42.535,23.986"]
"LiaoYun0x0/Feature-Matching-and-Position-Matching-between-Optical-and-SAR" ["l"="63.115,37.281"]
"LJY-RS/SRIF" ["l"="63.071,37.31"]
"ei1994/GMN-Generative-Matching-Network" ["l"="63.135,37.271"]
"opendatacube/odc-geo" ["l"="41.58,24.338"]
"azavea/franklin" ["l"="39.47,23.676"]
"geotrellis/geotrellis-server" ["l"="39.47,23.743"]
"ualsg/Road-Network-Classification" ["l"="41.067,24.415"]
"ualsg/Global-road-network-patterns" ["l"="41.037,24.419"]
"ualsg/GANmapper" ["l"="41.051,24.436"]
"ualsg/Roofpedia" ["l"="41.127,24.384"]
"pangeo-data/cog-best-practices" ["l"="41.516,24.41"]
"zhilyzhang/MECNet" ["l"="42.186,24.627"]
"Jack-bo1220/MSResNet-via-SSL" ["l"="42.167,24.613"]
"leiii/VisitationLaw" ["l"="41.224,24.141"]
"Zhen3r/BaiduPanoramaSpider" ["l"="40.963,24.638"]
"whuyao/BaiduStreetViewSpider" ["l"="40.962,24.615"]
"dima634/baby_shark" ["l"="41.19,24.367"]
"ytkz11/sar-image" ["l"="42.182,24.433"]
"plufengs/Gaofen-3" ["l"="42.208,24.444"]
"long123524/BsiNet-torch" ["l"="42.066,24.18"]
"mapbox/rio-color" ["l"="41.514,24.806"]
"mapbox/rio-hist" ["l"="41.509,24.784"]
"mapbox/rio-mucho" ["l"="41.52,24.839"]
"mapbox/rio-cloudmask" ["l"="41.533,24.73"]
"giswqs/geebook" ["l"="41.645,23.939"]
"giswqs/GEE-Courses" ["l"="41.634,24.009"]
"mmann1123/pyGIS" ["l"="41.425,24.271"]
"sozip/sozip-spec" ["l"="41.527,24.535"]
"USGS-EROS/espa-cloud-masking" ["l"="41.955,24.245"]
"prs021/fmask" ["l"="41.944,24.214"]
"isislab-unisa/sof" ["l"="40.943,23.957"]
"rayference/joseki" ["l"="42.005,24.477"]
"comet-toolkit/punpy" ["l"="41.998,24.487"]
"NASA-Openscapes/2021-Cloud-Hackathon" ["l"="41.646,24.036"]
"georust/netcdf" ["l"="41.21,24.441"]
"USGS-EROS/espa-surface-temperature" ["l"="41.978,24.251"]
"USGS-EROS/espa-product-formatter" ["l"="41.982,24.263"]
"domoritz/arrow-wasm" ["l"="41.241,24.388"]
"kylebarron/arrow-wasm" ["l"="41.205,24.413"]
"jankyee/URUR" ["l"="53.37,31.102"]
"rifqiharrys/sdb_gui" ["l"="41.574,23.836"]
"yustisiardhitasari/sdbcnn" ["l"="41.58,23.821"]
"ArcticCartographer/ICESat-2-Satellite-Derived-Bathymetry-using-Landsat-8-data" ["l"="41.591,23.833"]
"Tristanovsk/grs" ["l"="42.144,24.446"]
"3liz/proj4rs" ["l"="41.237,24.446"]
"UDST/orca" ["l"="41.198,24.079"]
"UDST/spandex" ["l"="41.217,24.079"]
"USGS-EROS/espa-processing" ["l"="41.967,24.24"]
"stac-extensions/label" ["l"="41.982,23.881"]
"stac-extensions/ml-aoi" ["l"="41.974,23.899"]
"nmandery/h3ron" ["l"="41.244,24.295"]
"nmandery/h3ronpy" ["l"="41.281,24.298"]
"sk-zk/streetlevel" ["l"="40.908,24.556"]
"sk-zk/lookaround-map" ["l"="40.885,24.569"]
"sk-zk/lookaround" ["l"="40.881,24.555"]
"magisAR9/webinaires" ["l"="41.339,24.506"]
"riatelab/geoverview" ["l"="41.325,24.499"]
"riatelab/geotoolbox" ["l"="41.316,24.522"]
"randyzwitch/streamlit-folium" ["l"="42.474,-2.793"]
"opengeos/aws-open-data-geo" ["l"="41.51,24.254"]
"TUM-I5/SWE-Solvers" ["l"="41.733,23.734"]
"galadriel-ai/opencopilot" ["l"="41.658,23.983"]
"placemark/placemark" ["l"="39.448,24.051"]
"headwaymaps/headway" ["l"="39.521,24.05"]
"jrieke/best-of-streamlit" ["l"="42.522,-2.784"]
"hyperknot/openfreemap" ["l"="39.533,24.077"]
"mkhorasani/Streamlit-Authenticator" ["l"="42.5,-2.83"]
"toddwschneider/nyc-taxi-data" ["l"="41.204,23.93"]
"fivethirtyeight/uber-tlc-foil-response" ["l"="41.279,24.027"]
"toddwschneider/nyc-citibike-data" ["l"="41.23,23.91"]
"twitter/AnomalyDetection" ["l"="52.251,14.711"]
"szilard/benchm-ml" ["l"="40.313,35.393"]
"toddwschneider/chicago-taxi-data" ["l"="41.181,23.891"]
"jrnold/ggthemes" ["l"="40.596,35.469"]
"chriswhong/nyctaxi" ["l"="41.149,23.878"]
"google/CausalImpact" ["l"="43.636,25.647"]
"juliasilge/tidytext" ["l"="40.453,35.371"]
"tidymodels/broom" ["l"="40.467,35.4"]
"Quartz/bad-data-guide" ["l"="-5.284,-41.43"]
"toddwschneider/ballr" ["l"="49.214,25.035"]
"holoviz/datashader" ["l"="43.728,23.888"]
"rich-iannone/DiagrammeR" ["l"="40.493,35.401"]
"plotly/plotly.R" ["l"="40.363,35.374"]
"AB-CE/examples" ["l"="40.862,24.113"]
"ETACE/eurace_unibi" ["l"="40.868,24.099"]
"LLNL/Abmarl" ["l"="40.865,24.144"]
"uwol/computational-economy" ["l"="40.838,24.102"]
"ShrutiAppiah/Simulating-an-Economy-ABM" ["l"="40.843,24.127"]
"cogeotiff/rio-faux" ["l"="41.533,24.386"]
"geojupyter/jupytergis" ["l"="41.455,24.321"]
"greppo-io/greppo" ["l"="41.492,24.286"]
"DahnJ/H3-Pandas" ["l"="39.584,23.941"]
"raphaelquast/EOmaps" ["l"="41.558,24.277"]
"anerv/GDS_exercises" ["l"="41.442,24.278"]
"VIDA-NYU/tile2net" ["l"="41.018,24.376"]
"VIDA-NYU/city-surfaces" ["l"="40.981,24.382"]
"City-Form-Lab/madina" ["l"="41.061,24.364"]
"pyvista/pyvista-xarray" ["l"="40.638,25.36"]
"regionmask/regionmask" ["l"="40.74,25.49"]
"aleksandrskoselevs/place-pulse-dataset" ["l"="40.972,24.595"]
"mapbox/mapbox-upload" ["l"="41.366,24.008"]
"MuhammedM294/SAR2Optical" ["l"="42.505,23.991"]
"zzh811/opt2sar-cyclegan" ["l"="42.512,24.009"]
"GeoDaCenter/pygeoda" ["l"="41.519,24.074"]
"OSGeo/grass" ["l"="39.32,23.771"]
"GeoDaCenter/GeoDaSpace" ["l"="41.537,24.075"]
"spatstat/spatstat" ["l"="40.492,34.845"]
"GeoDaCenter/rgeoda" ["l"="41.53,24.056"]
"r-spatial/RQGIS" ["l"="39.068,35.221"]
"gboeing/data-visualization" ["l"="15.201,-6.909"]
"gboeing/ppd534" ["l"="36.138,19.776"]
"SFIComplexityExplorer/Mesa-ABM-Tutorial" ["l"="40.94,24.143"]
"Margin1996/Assisted_learning" ["l"="42.335,24.011"]
"lixinghua5540/DTCDN" ["l"="42.352,24.011"]
"sstary/SSRS" ["l"="41.834,25.157"]
"SpaceNetChallenge/SAR-RGB-DataFusion" ["l"="42.347,24.038"]
"geographyclub/postgis-cookbook" ["l"="41.483,24.506"]
"andresmh/nyctaxitrips" ["l"="41.241,23.998"]
"voxmedia/data-projects" ["l"="-5.242,-41.335"]
"fivethirtyeight/guns-data" ["l"="41.194,23.985"]
"ipython-books/cookbook-code" ["l"="48.151,28.37"]
"gka/d3-jetpack" ["l"="-5.188,-41.488"]
"malshaV/sar_transformer" ["l"="42.742,23.895"]
"malshaV/sar_overcomplete" ["l"="42.755,23.877"]
"abstractqqq/polars_ds_extension" ["l"="43.621,26.342"]
"SonwYang/SLP-cropland-parcel-extraction" ["l"="42.094,24.193"]
"long123524/SEANet_torch" ["l"="42.097,24.179"]
"muzmax/SAR2SAR_pytorch" ["l"="42.721,23.943"]
"BetaNYC/Bike-Share-Data-Best-Practices" ["l"="19.227,13.417"]
"kylebarron/arrow-js-ffi" ["l"="41.32,24.309"]
"duckdb/duckdb-wasm" ["l"="-0.384,15.852"]
"chrispahm/geos-wasm" ["l"="39.397,23.758"]
"hyparam/hyparquet" ["l"="41.21,24.316"]
"protomaps/tippecanoe" ["l"="41.271,24.316"]
"XavierJiezou/DiffCR" ["l"="42.018,24.602"]
"kingsley0107/streetview_images_crawler" ["l"="40.942,24.643"]
"wherobots/GeoTorchAI" ["l"="41.626,24.302"]
"corentin-dfg/Satellite-Image-Time-Series-Datasets" ["l"="41.743,25.336"]
"bopen/sarsen" ["l"="40.972,23.366"]
"Seyed-Ali-Ahmadi/Awesome_Satellite_Benchmark_Datasets" ["l"="41.735,25.294"]
"XinnHe/ST-UNet" ["l"="42.26,23.948"]
"Wzysaber/ST_Unet_pytorch_Semantic-segmentation" ["l"="42.28,23.932"]
"developmentseed/titiler-multidim" ["l"="41.493,24.34"]
"long123524/CLCFormer" ["l"="42.096,24.167"]
"long123524/HGINet-torch" ["l"="42.116,24.18"]
"cmosig/sentle" ["l"="41.719,24.402"]
"stac-utils/xpystac" ["l"="41.631,24.423"]
"zhaozhen2333/iFLYTEK2021" ["l"="42.076,24.163"]
"hexnn/Stark" ["l"="38.031,-0.029"]
"Andy-cumt/RASDF_GUI" ["l"="41.73,24.851"]
"aazuspan/eerepr" ["l"="41.713,24.08"]
"CreativeInquiry/terrapattern" ["l"="41.859,24.121"]
"CreativeInquiry/terrapattern-website" ["l"="41.907,24.102"]
"BradNeuberg/cloudless" ["l"="41.889,24.137"]
"mitmul/ssai-cnn" ["l"="41.899,24.117"]
"geometalab/OSMDeepOD" ["l"="41.866,24.09"]
"ngageoint/mrgeo" ["l"="39.428,23.815"]
"orfeotoolbox/OTB" ["l"="60.33,9.798"]
"planetlabs/plcompositor" ["l"="41.906,24.078"]
"larsroemheld/OSM-HOT-ConvNet" ["l"="41.884,24.069"]
"PyWPS/pywps-4" ["l"="41.441,24.482"]
"geopython/pywps-flask" ["l"="41.439,24.494"]
"xufangchn/CloudSeg" ["l"="42.035,24.598"]
"SatelliteShorelines/SDS_Benchmark" ["l"="42.03,24.282"]
"developmentseed/supermorecado" ["l"="41.407,24.468"]
"Ziqi-Li/SHAP_spatial_data_paper" ["l"="41.303,23.985"]
"Ziqi-Li/GIS5122" ["l"="41.288,23.981"]
"mitmul/ssai" ["l"="41.934,24.091"]
"mathildor/TF-SegNet" ["l"="53.563,30.638"]
"mahmoudmohsen213/airs" ["l"="41.909,24.057"]
"treigerm/WaterNet" ["l"="41.883,24.099"]
"VisionU/HF-FCN-for-Robust-Building-Extraction" ["l"="41.934,24.109"]
"aurotripathy/ssd-spacenet" ["l"="41.923,24.078"]
"mshiv/sat-seg" ["l"="41.924,24.1"]
"ytarazona/scikit-eo" ["l"="41.577,24.058"]
"EOA-team/eodal" ["l"="41.574,23.976"]
"JamesRamm/archook" ["l"="41.815,24.725"]
"nmandery/rasterh3" ["l"="41.245,24.278"]
"isaacbrodsky/h3-duckdb" ["l"="41.376,24.326"]
"come880412/Scene-Text-Detection-and-Recognition" ["l"="42.053,24.64"]
"DahnJ/REM-xarray" ["l"="41.668,24.463"]
"ldproxy/ldproxy" ["l"="41.439,24.565"]
"BRGM/gml_application_schema_toolbox" ["l"="41.414,24.604"]
"mapbox/awesome-vector-tiles" ["l"="39.378,24.105"]
"cgohlke/geospatial-wheels" ["l"="41.595,24.139"]
"cgohlke/numpy-mkl-wheels" ["l"="41.605,24.062"]
"CNES/cars" ["l"="60.29,9.755"]
"ViTAE-Transformer/SAMRS" ["l"="41.787,25.183"]
"cgarrard/osgeopy-code" ["l"="41.597,24.027"]
"heremaps/tin-terrain" ["l"="37.738,23.987"]
"geo-data/cesium-terrain-builder" ["l"="37.728,24.023"]
"cgohlke/win_arm64-wheels" ["l"="41.619,24.047"]
"opengeos/aws-open-data-stac" ["l"="41.444,24.254"]
"opengeos/aws-open-data" ["l"="41.407,24.262"]
"healthysustainablecities/global-indicators" ["l"="41.016,24.351"]
"geoalchemy/geoalchemy" ["l"="41.408,24.24"]
"kvesteri/sqlalchemy-utils" ["l"="42.15,22.089"]
"postgis/postgis" ["l"="39.411,23.979"]
"klarrieu/RiverREM" ["l"="41.697,24.485"]
"PDAL/wrench" ["l"="38.001,23.041"]
"satellite-image-deep-learning/software" ["l"="41.768,24.326"]
"zhu-xlab/SSL4EO-S12" ["l"="41.699,25.286"]
"ChenDelong1999/RemoteCLIP" ["l"="41.739,25.165"]
"lzw-lzw/awesome-remote-sensing-vision-language-models" ["l"="41.735,25.15"]
"jasonmanesis/Satellite-Imagery-Datasets-Containing-Ships" ["l"="53.138,31.866"]
"allenai/satlas" ["l"="41.687,25.286"]
"handstuyennn/geo" ["l"="41.356,24.307"]
"fusedio/udfs" ["l"="41.421,24.327"]
"cholmes/duckdb-geoparquet-tutorials" ["l"="41.377,24.373"]
"paleolimbot/s2geography" ["l"="41.32,24.272"]
"m-wrzr/populartimes" ["l"="41.363,24.082"]
"philshem/gmaps_popular_times_scraper" ["l"="41.325,24.034"]
"estrma/busy-hours" ["l"="41.32,24.058"]
"GrocerCheck/LivePopularTimes" ["l"="41.34,24.049"]
"ActiveConclusion/COVID19_mobility" ["l"="-10.14,17.912"]
"kuwala-io/kuwala" ["l"="-0.439,16.103"]
"conveyal/r5" ["l"="36.021,19.597"]
"jremillard/images-to-osm" ["l"="42.551,23.132"]
"EOA-team/eodal_notebooks" ["l"="41.567,23.95"]
"kraina-ai/srai" ["l"="41.275,24.387"]
"kraina-ai/srai-tutorial" ["l"="41.234,24.418"]
"geohackweek/GoogleEarthEngine" ["l"="41.875,24.298"]
"developmentseed/spacenet-data" ["l"="41.9,24.093"]
"nmt28/C-SHELPh" ["l"="41.595,23.82"]
"openlandmap/GEDTM30" ["l"="41.685,24.502"]
"facebookresearch/HighResCanopyHeight" ["l"="41.753,25.3"]
"HydroniumLabs/h3o" ["l"="41.222,24.282"]
"yjh0502/rust-s2" ["l"="41.16,24.268"]
"felixpalmer/a5" ["l"="41.174,24.252"]
"bair-climate-initiative/multiearth" ["l"="41.557,24.449"]
"RockLakeGrass/Windows-on-ARM64-Toolchain" ["l"="-49.466,8.426"]
"opengeos/NASA-CMR-STAC" ["l"="41.357,24.269"]
"AtelierCartographie/Khartis" ["l"="41.316,24.567"]
"jgomezdans/prosail" ["l"="42.554,26.239"]
"stevage/opentrees-data" ["l"="40.779,24.714"]
"emit-sds/emit-ghg" ["l"="41.896,24.429"]
"planetlabs/color_balance" ["l"="41.486,24.806"]
"koito19960406/ZenSVI" ["l"="41.101,24.432"]
"anerv/BikeDNA" ["l"="41.152,24.362"]
"developmentseed/titiler-image" ["l"="41.385,24.498"]
"arteagac/xlogit" ["l"="41.11,23.967"]
"ferasz/LCCM" ["l"="41.093,24.008"]
"Repast/repast.hpc" ["l"="40.85,23.995"]
"sinergise/Sentinel2ProductIngestor" ["l"="41.583,24.583"]
"radiantearth/community-sprints" ["l"="41.645,24.453"]
"MLHubEarth/hub" ["l"="41.643,24.467"]
"patvarilly/CoverTree" ["l"="41.875,23.963"]
"sozip/sozipfile" ["l"="41.524,24.57"]
"christian-werner/spatial-centrality-pub" ["l"="41.126,24.367"]
"geographyclub/qgis-quickstart" ["l"="41.506,24.521"]
"alxmrs/dask-ee" ["l"="41.57,24.236"]
"google/xarray-beam" ["l"="40.56,25.464"]
"cubed-dev/cubed" ["l"="40.564,25.449"]
"DahnJ/Awesome-Zarr" ["l"="40.568,25.408"]
"opengeos/geoai" ["l"="41.59,24.271"]
"keplergl/kepler.gl" ["l"="39.275,23.897"]
"Project-OSRM/osrm-backend" ["l"="39.478,24.249"]
"cyang-kth/fmm" ["l"="39.045,23.933"]
"OvertureMaps/schema" ["l"="41.398,24.387"]
"OvertureMaps/overturemaps-py" ["l"="41.38,24.396"]
"protomaps/PMTiles" ["l"="39.466,24.098"]
"OvertureMaps/overture-tiles" ["l"="41.378,24.413"]
"drivendataorg/competition-winners" ["l"="42.385,24.293"]
"msoechting/lexcube" ["l"="41.7,24.415"]
"LucasOsco/AI-RemoteSensing" ["l"="41.727,24.388"]
"opengeos/segment-anything" ["l"="41.697,24.4"]
"rrwen/google_streetview" ["l"="41,24.557"]
"ualsg/global-streetscapes" ["l"="41.062,24.46"]
"amir32002/3D_Street_View" ["l"="40.935,24.531"]
"robolyst/google" ["l"="40.962,24.556"]
"TheGreatRambler/streetview_client" ["l"="40.981,24.566"]
"tsinghua-fib-lab/DRL-urban-planning" ["l"="52.341,17.101"]
"waddell/CP255" ["l"="41.303,24.127"]
"fivethirtyeight/redistricting-atlas-data" ["l"="41.156,23.96"]
"mani-shailesh/satimage" ["l"="41.994,24.175"]
"SigmaMonstR/tutorial_viirs_part1" ["l"="41.989,24.196"]
"adrianalbert/urban-environments" ["l"="42.005,24.215"]
"thepeanutgalleryandco/nftport-discord-bot" ["l"="41.663,23.956"]
"sudshu/Pandey_2023_RSE" ["l"="42.086,24.507"]
"OpenGeoscience/geojs" ["l"="62.054,35.884"]
"locationtech-labs/geopyspark" ["l"="39.49,23.779"]
"jupyter-widgets/ipyleaflet" ["l"="43.578,24.036"]
"locationtech/geotrellis" ["l"="39.445,23.855"]
"geoarrow/geoarrow-r" ["l"="39.235,35.327"]
"ualsg/Visual-soundscapes" ["l"="41.092,24.459"]
"kunifujiwara/VoxCity" ["l"="41.076,24.444"]
"luisCartoGeo/GeoAI_Plugin" ["l"="41.743,24.427"]
"rafiibnsultan/GeoSAM" ["l"="41.743,24.464"]
"BjornNyberg/Geometric-Attributes-Toolbox" ["l"="41.724,24.431"]
"tylere/AGU2017" ["l"="41.967,24.355"]
"giswqs/geog-312" ["l"="41.529,24.287"]
"GeoRetina/chat2geo" ["l"="41.471,24.343"]
"gastruc/AnySat" ["l"="41.716,25.29"]
"XavierJiezou/PMAA" ["l"="42.001,24.607"]
"opengeos/solara-maxar" ["l"="41.617,24.396"]
"kalkan/Turkey-Earthquake-2023-GeoData" ["l"="41.629,24.438"]
"nicogis/Geodatabase-Diagrammer" ["l"="41.767,24.618"]
"awesome-spectral-indices/SpectralIndices.jl" ["l"="41.731,24.447"]
"Josephjiao7/Geographical-Gaussian-Process-Regression" ["l"="41.286,23.992"]
"Bingbo-Gao/GCCM" ["l"="41.293,23.964"]
"UrbanGISer/XGeoML" ["l"="41.316,23.974"]
"kylebarron/arro3" ["l"="40.471,25.404"]
"SWOT-community/SWOT-Oceanography" ["l"="41.496,23.769"]
"Repast/repast4py" ["l"="40.821,24.002"]
"satellite-image-deep-learning/course" ["l"="41.714,24.457"]
"yangxue0827/CNN_UCMerced-LandUse_Caffe" ["l"="42.045,23.986"]
"UDST/urbansim_templates" ["l"="41.218,24.096"]
"developmentseed/skynet-scrub" ["l"="41.872,24.073"]
"littlebeen/Remote-Sensing-Super-resolution-Model-Collection" ["l"="42.091,24.677"]
"littlebeen/ASDDPM-Adaptive-Semantic-Enhanced-DDPM" ["l"="42.097,24.662"]
"Esri/local-government-desktop-addins" ["l"="41.531,23.956"]
"Esri/photo-survey" ["l"="41.519,23.926"]
"Ly403/EMRDM" ["l"="42.023,24.631"]
"GeoscienceAustralia/burn-mapping" ["l"="41.391,24.29"]
"nsidc/cloud-optimized-icesat2" ["l"="41.54,23.812"]
"mapbox/rio-toa" ["l"="41.524,24.75"]
"Coordi777/ACD_S2ODPM" ["l"="42.554,23.983"]
"mrJean1/PyGeodesy" ["l"="58.324,11.277"]
"laspy/laspy" ["l"="37.835,23.021"]
"geospace-code/pymap3d" ["l"="58.236,11.208"]
"alceal/plotlars" ["l"="-10.127,-6.574"]
"podusowski/walkers" ["l"="-9.46,-4.376"]
"Chief-byte/RSAM-Seg" ["l"="41.77,24.507"]
"r-transit/tidytransit" ["l"="39.123,35.365"]
"ibi-group/datatools-ui" ["l"="36.046,19.594"]
"higgicd/Accessibility_Toolbox" ["l"="41.326,24.093"]
"Bondify/gtfs_functions" ["l"="36.016,19.509"]
"CxAalto/gtfspy" ["l"="35.985,19.531"]
"gastruc/osv5m" ["l"="59.527,9.698"]
"seai-lab/TorchSpatial" ["l"="41.636,25.283"]
"gbrunner/adv-programming-for-gis-and-rs" ["l"="41.843,24.466"]
"cholmes/qgis_plugin_gpq_downloader" ["l"="41.334,24.444"]
"kraina-ai/overturemaestro" ["l"="41.36,24.436"]
"mbloch/mapshaper" ["l"="39.31,24.023"]
"gina-alaska/dans-gdal-scripts" ["l"="41.709,24.348"]
"nshaud/DeepHyperX" ["l"="41.581,23.282"]
"SpaceNetChallenge/BuildingDetectors" ["l"="42.475,23.156"]
"uscuni/neatnet" ["l"="41.344,24.404"]
"Youssef-Harby/OvertureMapsDownloader" ["l"="41.344,24.423"]
"hyparam/hightable" ["l"="41.164,24.302"]
"hyparam/hyllama" ["l"="41.157,24.313"]
"hyparam/icebird" ["l"="41.18,24.304"]
"hyparam/hysnappy" ["l"="41.169,24.322"]
"hyparam/geoparquet" ["l"="41.177,24.333"]
"hyparam/hyparquet-writer" ["l"="41.18,24.293"]
"uwdata/flechette" ["l"="41.152,24.338"]
"hyparam/hyparquet-compressors" ["l"="41.184,24.321"]
"hyparam/hyperparam-cli" ["l"="41.174,24.315"]
"dfsnow/opentimes" ["l"="41.127,24.299"]
"LibertyDSNP/parquetjs" ["l"="41.139,24.321"]
"fusedio/fused-mcp" ["l"="41.37,24.298"]
"JuliaDataCubes/EarthDataLab.jl" ["l"="21.737,17.147"]
"amforte/DivideTools" ["l"="41.69,23.852"]
"sfgallen/ChiProfiler" ["l"="41.689,23.833"]
"bleutner/RStoolbox" ["l"="39.211,35.257"]
"jqtrde/remote" ["l"="41.913,24.269"]
"descarteslabs/descarteslabs-python" ["l"="41.547,24.467"]
"giswqs/geog-510" ["l"="41.448,24.308"]
"giswqs/geog-414" ["l"="41.422,24.287"]
"NASAARSET/ARSET_ML_Fundamentals" ["l"="41.695,25.522"]
"edwardpmorris/docker-snap" ["l"="41.554,24.548"]
"dl4sits/BreizhCrops" ["l"="41.711,25.376"]
"nasaharvest/cropharvest" ["l"="41.706,25.361"]
"adamjstewart/crop_yield_prediction" ["l"="42.189,24.272"]
"xarray-contrib/xdggs" ["l"="40.54,25.453"]
"pastas/pastas" ["l"="40.043,25.086"]
"neuralhydrology/neuralhydrology" ["l"="39.958,25.145"]
"pyswmm/pyswmm" ["l"="39.876,25.295"]
"DeepVoltaire/Dstl-Satellite-Imagery-Feature-Detection" ["l"="41.992,24.017"]
"toshi-k/kaggle-satellite-imagery-feature-detection" ["l"="42.002,23.998"]
"zizhaozhang/unet-tensorflow-keras" ["l"="42.525,24.146"]
"pietz/unet-keras" ["l"="42.548,24.161"]
"ankurhanda/tf-unet" ["l"="42.552,24.132"]
"ZFTurbo/ZF_UNET_224_Pretrained_Model" ["l"="42.59,24.152"]
"qiemem/PythonExtension" ["l"="40.834,24.039"]
"google-deepmind/streetlearn" ["l"="60.905,33.965"]
"cvlab-dresden/DSAC" ["l"="59.229,9.35"]
"cityjson/cjio" ["l"="37.999,23.852"]
"niessner/Matterport" ["l"="60.229,17.466"]
"samsammurphy/cloud-masking-sentinel2" ["l"="42.016,24.42"]
"EKami/planet-amazon-deforestation" ["l"="42.046,23.926"]
"pysal/pointpats" ["l"="41.346,24.171"]
"NOAA-OWP/inundation-mapping" ["l"="40.191,25.375"]
"cybergis/nfie-floodmap" ["l"="41.677,24.091"]
"MartinuzziFrancesco/RecurrentLayers.jl" ["l"="41.753,24.487"]
"planetlabs/planet-amazon-deforestation" ["l"="42.059,23.898"]
"samapriya/Planet-GEE-Pipeline-GUI" ["l"="41.926,24.327"]
"developmentseed/skynet-scrub-server" ["l"="41.876,24.048"]
"alexkreidler/mosaic-playground" ["l"="43.598,24.696"]
"mocnik-science/osm-python-tools" ["l"="39.862,22.584"]
"awslabs/open-data-registry" ["l"="41.608,24.358"]
"awslabs/aws-well-architected-labs" ["l"="10.482,-2.997"]
"aws/aws-graviton-getting-started" ["l"="7.754,-9.465"]
"aws/aws-sdk-pandas" ["l"="11.667,-2.658"]
"jjsantos01/qgis_mcp" ["l"="41.429,24.437"]
"earth-genome/ChatGeoPT" ["l"="24.615,-25.433"]
"vega/altair" ["l"="43.589,23.799"]
"bokeh/bokeh" ["l"="43.589,23.664"]
"dask/dask" ["l"="43.655,23.686"]
"mwaskom/seaborn" ["l"="43.55,23.618"]
"plotly/dash" ["l"="43.537,23.67"]
"ydataai/ydata-profiling" ["l"="45.365,26.075"]
"plotly/plotly.py" ["l"="43.602,23.588"]
"opengeospatial/geopackage" ["l"="39.368,23.793"]
"opengeospatial/ogc-feat-geo-json" ["l"="41.488,24.526"]
"koordinates/kart" ["l"="39.344,23.941"]
"opengeospatial/OGC-Technology-Trends" ["l"="41.468,24.527"]
"opengeospatial/geoapi" ["l"="39.463,23.823"]
"t-rex-tileserver/t-rex" ["l"="39.35,24.144"]
"killthekitten/kaggle-carvana-2017" ["l"="42.629,24.157"]
"CartoDB/cartoframes" ["l"="39.161,24.376"]
"mapbox/mbview" ["l"="39.317,24.197"]
"mapbox/csv2geojson" ["l"="39.167,24.155"]
"mapbox/mapbox-isochrone" ["l"="41.429,24.062"]
"transitland/transitland-processing-animation" ["l"="36.005,19.531"]
"jagan-shanmugam/open-streetmap-mcp" ["l"="41.39,24.477"]
"olson-sean-k/plexus" ["l"="41.099,24.361"]
"asny/tri-mesh" ["l"="41.057,24.342"]
"vincentsarago/lambda-tiler" ["l"="41.605,24.467"]
"RemotePixel/amazonlinux-gdal" ["l"="41.595,24.451"]
"green3g/esri-python-tools" ["l"="41.785,24.615"]
"radiantearth/tiles.rdnt.io" ["l"="41.646,24.551"]
"hotosm/oam-dynamic-tiler" ["l"="41.631,24.539"]
"bgLeon/SAR-Despeckling" ["l"="42.777,23.959"]
"Sen2Agri/Sen2Agri-System" ["l"="41.707,24.533"]
"tavgreen/landuse_classification" ["l"="42.052,23.957"]
"pysal/region" ["l"="41.317,24.177"]
"yongyehuang/word_similarity" ["l"="42.48,23.606"]
}