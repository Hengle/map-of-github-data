digraph G {
"zalandoresearch/fashion-mnist" -> "lmoroney/dlaicourse"
"zalandoresearch/fashion-mnist" -> "tensorflow/models" ["e"=1]
"zalandoresearch/fashion-mnist" -> "facebookresearch/fastText" ["e"=1]
"zalandoresearch/fashion-mnist" -> "keras-team/keras" ["e"=1]
"zalandoresearch/fashion-mnist" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"zalandoresearch/fashion-mnist" -> "facebookresearch/Detectron" ["e"=1]
"zalandoresearch/fashion-mnist" -> "pytorch/examples" ["e"=1]
"zalandoresearch/fashion-mnist" -> "google-deepmind/sonnet" ["e"=1]
"zalandoresearch/fashion-mnist" -> "dmlc/xgboost" ["e"=1]
"zalandoresearch/fashion-mnist" -> "floodsung/Deep-Learning-Papers-Reading-Roadmap" ["e"=1]
"zalandoresearch/fashion-mnist" -> "terryum/awesome-deep-learning-papers" ["e"=1]
"zalandoresearch/fashion-mnist" -> "tensorflow/tensor2tensor" ["e"=1]
"zalandoresearch/fashion-mnist" -> "lengstrom/fast-style-transfer" ["e"=1]
"zalandoresearch/fashion-mnist" -> "horovod/horovod"
"zalandoresearch/fashion-mnist" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"optuna/optuna" -> "hyperopt/hyperopt"
"optuna/optuna" -> "shap/shap"
"optuna/optuna" -> "Lightning-AI/pytorch-lightning" ["e"=1]
"optuna/optuna" -> "mlflow/mlflow"
"optuna/optuna" -> "bayesian-optimization/BayesianOptimization"
"optuna/optuna" -> "microsoft/LightGBM"
"optuna/optuna" -> "ray-project/ray" ["e"=1]
"optuna/optuna" -> "jax-ml/jax" ["e"=1]
"optuna/optuna" -> "pycaret/pycaret"
"optuna/optuna" -> "autogluon/autogluon"
"optuna/optuna" -> "microsoft/nni"
"optuna/optuna" -> "iterative/dvc"
"optuna/optuna" -> "ydataai/ydata-profiling"
"optuna/optuna" -> "sktime/sktime"
"optuna/optuna" -> "automl/auto-sklearn"
"microsoft/nni" -> "keras-team/autokeras"
"microsoft/nni" -> "horovod/horovod"
"microsoft/nni" -> "autogluon/autogluon"
"microsoft/nni" -> "IntelLabs/distiller" ["e"=1]
"microsoft/nni" -> "Lightning-AI/pytorch-lightning" ["e"=1]
"microsoft/nni" -> "EpistasisLab/tpot"
"microsoft/nni" -> "automl/auto-sklearn"
"microsoft/nni" -> "ray-project/ray" ["e"=1]
"microsoft/nni" -> "hibayesian/awesome-automl-papers" ["e"=1]
"microsoft/nni" -> "optuna/optuna"
"microsoft/nni" -> "quark0/darts" ["e"=1]
"microsoft/nni" -> "huggingface/pytorch-image-models" ["e"=1]
"microsoft/nni" -> "NVIDIA/apex" ["e"=1]
"microsoft/nni" -> "lutzroeder/netron" ["e"=1]
"microsoft/nni" -> "microsoft/LightGBM"
"mlflow/mlflow" -> "iterative/dvc"
"mlflow/mlflow" -> "kubeflow/kubeflow"
"mlflow/mlflow" -> "ray-project/ray" ["e"=1]
"mlflow/mlflow" -> "shap/shap"
"mlflow/mlflow" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"mlflow/mlflow" -> "Netflix/metaflow"
"mlflow/mlflow" -> "Lightning-AI/pytorch-lightning" ["e"=1]
"mlflow/mlflow" -> "feast-dev/feast"
"mlflow/mlflow" -> "visenger/awesome-mlops" ["e"=1]
"mlflow/mlflow" -> "horovod/horovod"
"mlflow/mlflow" -> "streamlit/streamlit" ["e"=1]
"mlflow/mlflow" -> "optuna/optuna"
"mlflow/mlflow" -> "apache/airflow" ["e"=1]
"mlflow/mlflow" -> "bentoml/BentoML"
"mlflow/mlflow" -> "kedro-org/kedro"
"PAIR-code/what-if-tool" -> "PAIR-code/lit" ["e"=1]
"PAIR-code/what-if-tool" -> "SeldonIO/alibi"
"PAIR-code/what-if-tool" -> "interpretml/DiCE"
"PAIR-code/what-if-tool" -> "tensorflow/tcav" ["e"=1]
"PAIR-code/what-if-tool" -> "PAIR-code/facets"
"PAIR-code/what-if-tool" -> "fairlearn/fairlearn"
"PAIR-code/what-if-tool" -> "Trusted-AI/AIF360"
"PAIR-code/what-if-tool" -> "uber/manifold"
"PAIR-code/what-if-tool" -> "dssg/aequitas"
"PAIR-code/what-if-tool" -> "PAIR-code/saliency" ["e"=1]
"PAIR-code/what-if-tool" -> "Trusted-AI/AIX360"
"PAIR-code/what-if-tool" -> "oegedijk/explainerdashboard"
"PAIR-code/what-if-tool" -> "SeldonIO/alibi-detect"
"PAIR-code/what-if-tool" -> "EthicalML/xai"
"PAIR-code/what-if-tool" -> "SauceCat/PDPbox"
"facebook/Ax" -> "pytorch/botorch"
"facebook/Ax" -> "cornellius-gp/gpytorch"
"facebook/Ax" -> "facebookresearch/nevergrad"
"facebook/Ax" -> "pyro-ppl/pyro"
"facebook/Ax" -> "hyperopt/hyperopt"
"facebook/Ax" -> "pyro-ppl/numpyro" ["e"=1]
"facebook/Ax" -> "bayesian-optimization/BayesianOptimization"
"facebook/Ax" -> "scikit-optimize/scikit-optimize"
"facebook/Ax" -> "IDSIA/sacred"
"facebook/Ax" -> "EmuKit/emukit"
"facebook/Ax" -> "optuna/optuna"
"facebook/Ax" -> "pytorch/ignite" ["e"=1]
"facebook/Ax" -> "SheffieldML/GPy"
"facebook/Ax" -> "skorch-dev/skorch"
"facebook/Ax" -> "pymc-devs/pymc"
"interpretml/interpret" -> "shap/shap"
"interpretml/interpret" -> "marcotcr/lime"
"interpretml/interpret" -> "SeldonIO/alibi"
"interpretml/interpret" -> "jphall663/awesome-machine-learning-interpretability"
"interpretml/interpret" -> "interpretml/DiCE"
"interpretml/interpret" -> "py-why/dowhy" ["e"=1]
"interpretml/interpret" -> "fairlearn/fairlearn"
"interpretml/interpret" -> "uber/causalml" ["e"=1]
"interpretml/interpret" -> "TeamHG-Memex/eli5"
"interpretml/interpret" -> "microsoft/tensorwatch" ["e"=1]
"interpretml/interpret" -> "Trusted-AI/AIX360"
"interpretml/interpret" -> "pytorch/captum" ["e"=1]
"interpretml/interpret" -> "alteryx/featuretools"
"interpretml/interpret" -> "EpistasisLab/tpot"
"interpretml/interpret" -> "ydataai/ydata-profiling"
"keras-team/keras-tuner" -> "keras-team/autokeras"
"keras-team/keras-tuner" -> "autonomio/talos"
"keras-team/keras-tuner" -> "maxpumperla/hyperas"
"keras-team/keras-tuner" -> "hyperopt/hyperopt"
"keras-team/keras-tuner" -> "sicara/tf-explain" ["e"=1]
"keras-team/keras-tuner" -> "keras-team/keras-cv"
"keras-team/keras-tuner" -> "scikit-optimize/scikit-optimize"
"keras-team/keras-tuner" -> "interpretml/interpret"
"keras-team/keras-tuner" -> "raghakot/keras-vis" ["e"=1]
"keras-team/keras-tuner" -> "keras-team/keras-hub"
"keras-team/keras-tuner" -> "qubvel/efficientnet" ["e"=1]
"keras-team/keras-tuner" -> "keras-team/keras-applications" ["e"=1]
"keras-team/keras-tuner" -> "tensorflow/addons"
"keras-team/keras-tuner" -> "optuna/optuna"
"keras-team/keras-tuner" -> "automl/auto-sklearn"
"bentoml/BentoML" -> "SeldonIO/seldon-core"
"bentoml/BentoML" -> "bentoml/OpenLLM" ["e"=1]
"bentoml/BentoML" -> "mlflow/mlflow"
"bentoml/BentoML" -> "feast-dev/feast"
"bentoml/BentoML" -> "zenml-io/zenml"
"bentoml/BentoML" -> "cortexlabs/cortex"
"bentoml/BentoML" -> "kserve/kserve"
"bentoml/BentoML" -> "Netflix/metaflow"
"bentoml/BentoML" -> "iterative/dvc"
"bentoml/BentoML" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"bentoml/BentoML" -> "evidentlyai/evidently"
"bentoml/BentoML" -> "visenger/awesome-mlops" ["e"=1]
"bentoml/BentoML" -> "kedro-org/kedro"
"bentoml/BentoML" -> "clearml/clearml"
"bentoml/BentoML" -> "bentoml/Yatai"
"gm-spacagna/deep-ttf" -> "daynebatten/keras-wtte-rnn"
"gm-spacagna/deep-ttf" -> "ragulpr/wtte-rnn"
"gm-spacagna/deep-ttf" -> "robi56/Survival-Analysis-using-Deep-Learning"
"gm-spacagna/deep-ttf" -> "ragulpr/wtte-rnn-examples"
"gm-spacagna/deep-ttf" -> "rk2900/DRSA"
"gm-spacagna/deep-ttf" -> "jaredleekatzman/DeepSurv"
"robi56/Survival-Analysis-using-Deep-Learning" -> "PathologyDataScience/SurvivalNet"
"robi56/Survival-Analysis-using-Deep-Learning" -> "rk2900/DRSA"
"robi56/Survival-Analysis-using-Deep-Learning" -> "jaredleekatzman/DeepSurv"
"robi56/Survival-Analysis-using-Deep-Learning" -> "chl8856/DeepHit"
"robi56/Survival-Analysis-using-Deep-Learning" -> "autonlab/auton-survival"
"robi56/Survival-Analysis-using-Deep-Learning" -> "havakv/pycox"
"robi56/Survival-Analysis-using-Deep-Learning" -> "gm-spacagna/deep-ttf"
"robi56/Survival-Analysis-using-Deep-Learning" -> "MGensheimer/nnet-survival"
"robi56/Survival-Analysis-using-Deep-Learning" -> "liupei101/TFDeepSurv"
"robi56/Survival-Analysis-using-Deep-Learning" -> "PathologyDataScience/SCNN"
"robi56/Survival-Analysis-using-Deep-Learning" -> "czifan/DeepSurv.pytorch"
"robi56/Survival-Analysis-using-Deep-Learning" -> "MustafaOguz/Survival_Analysis"
"robi56/Survival-Analysis-using-Deep-Learning" -> "square/pysurvival"
"robi56/Survival-Analysis-using-Deep-Learning" -> "sebp/survival-cnn-estimator"
"CamDavidsonPilon/lifelines" -> "sebp/scikit-survival"
"CamDavidsonPilon/lifelines" -> "CamDavidsonPilon/lifetimes" ["e"=1]
"CamDavidsonPilon/lifelines" -> "havakv/pycox"
"CamDavidsonPilon/lifelines" -> "jaredleekatzman/DeepSurv"
"CamDavidsonPilon/lifelines" -> "square/pysurvival"
"CamDavidsonPilon/lifelines" -> "DistrictDataLabs/yellowbrick"
"CamDavidsonPilon/lifelines" -> "autonlab/auton-survival"
"CamDavidsonPilon/lifelines" -> "pymc-devs/pymc"
"CamDavidsonPilon/lifelines" -> "scikit-learn-contrib/category_encoders"
"CamDavidsonPilon/lifelines" -> "statsmodels/statsmodels" ["e"=1]
"CamDavidsonPilon/lifelines" -> "raphaelvallat/pingouin"
"CamDavidsonPilon/lifelines" -> "py-why/dowhy" ["e"=1]
"CamDavidsonPilon/lifelines" -> "scikit-learn-contrib/imbalanced-learn"
"CamDavidsonPilon/lifelines" -> "rasbt/mlxtend"
"CamDavidsonPilon/lifelines" -> "arviz-devs/arviz" ["e"=1]
"autonomio/talos" -> "maxpumperla/hyperas"
"autonomio/talos" -> "keras-team/keras-tuner"
"autonomio/talos" -> "scikit-optimize/scikit-optimize"
"autonomio/talos" -> "hyperopt/hyperopt"
"autonomio/talos" -> "raghakot/keras-vis" ["e"=1]
"autonomio/talos" -> "keras-team/autokeras"
"autonomio/talos" -> "hyperopt/hyperopt-sklearn"
"autonomio/talos" -> "tensorflow/adanet"
"autonomio/talos" -> "philipperemy/keract" ["e"=1]
"autonomio/talos" -> "AxeldeRomblay/MLBox"
"autonomio/talos" -> "dvgodoy/deepreplay"
"autonomio/talos" -> "rasbt/mlxtend"
"autonomio/talos" -> "automl/Auto-PyTorch" ["e"=1]
"autonomio/talos" -> "salesforce/TransmogrifAI"
"autonomio/talos" -> "EpistasisLab/tpot"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "duxuhao/Feature-Selection"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "jundongl/scikit-feature"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "anujdutt9/Feature-Selection-for-Machine-Learning"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "kaushalshetty/FeatureSelectionGA"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "alicezheng/feature-engineering-book"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "WillKoehrsen/feature-selector"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "scikit-learn-contrib/boruta_py"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "feature-engine/feature_engine"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "solegalli/feature-selection-for-machine-learning"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "ashishpatel26/Amazing-Feature-Engineering" ["e"=1]
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "aikho/awesome-feature-engineering"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "cod3licious/autofeat"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "Ekeany/Boruta-Shap"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "solegalli/feature-engineering-for-machine-learning"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "alteryx/featuretools"
"tensorflow/model-optimization" -> "IntelLabs/distiller" ["e"=1]
"tensorflow/model-optimization" -> "Tencent/PocketFlow" ["e"=1]
"tensorflow/model-optimization" -> "google/qkeras" ["e"=1]
"tensorflow/model-optimization" -> "pytorch/QNNPACK" ["e"=1]
"tensorflow/model-optimization" -> "666DZY666/micronet" ["e"=1]
"tensorflow/model-optimization" -> "tensorflow/addons"
"tensorflow/model-optimization" -> "keras-team/keras-tuner"
"tensorflow/model-optimization" -> "google/gemmlowp" ["e"=1]
"tensorflow/model-optimization" -> "quic/aimet" ["e"=1]
"tensorflow/model-optimization" -> "onnx/tensorflow-onnx" ["e"=1]
"tensorflow/model-optimization" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"tensorflow/model-optimization" -> "tensorflow/model-analysis"
"tensorflow/model-optimization" -> "tensorflow/tensorrt" ["e"=1]
"tensorflow/model-optimization" -> "tensorflow/tfx"
"tensorflow/model-optimization" -> "openxla/xprof"
"kserve/kserve" -> "SeldonIO/seldon-core"
"kserve/kserve" -> "kubeflow/pipelines"
"kserve/kserve" -> "triton-inference-server/server" ["e"=1]
"kserve/kserve" -> "kubeflow/kubeflow"
"kserve/kserve" -> "kubeflow/katib"
"kserve/kserve" -> "kubeflow/trainer" ["e"=1]
"kserve/kserve" -> "bentoml/BentoML"
"kserve/kserve" -> "feast-dev/feast"
"kserve/kserve" -> "volcano-sh/volcano" ["e"=1]
"kserve/kserve" -> "NVIDIA/k8s-device-plugin" ["e"=1]
"kserve/kserve" -> "knative/serving" ["e"=1]
"kserve/kserve" -> "pytorch/serve"
"kserve/kserve" -> "ray-project/kuberay"
"kserve/kserve" -> "kubeflow/manifests"
"kserve/kserve" -> "NVIDIA/gpu-operator" ["e"=1]
"keras-team/autokeras" -> "automl/auto-sklearn"
"keras-team/autokeras" -> "tensorflow/adanet"
"keras-team/autokeras" -> "EpistasisLab/tpot"
"keras-team/autokeras" -> "microsoft/nni"
"keras-team/autokeras" -> "alteryx/featuretools"
"keras-team/autokeras" -> "hibayesian/awesome-automl-papers" ["e"=1]
"keras-team/autokeras" -> "keras-team/keras-tuner"
"keras-team/autokeras" -> "autogluon/autogluon"
"keras-team/autokeras" -> "hyperopt/hyperopt"
"keras-team/autokeras" -> "google/dopamine" ["e"=1]
"keras-team/autokeras" -> "horovod/horovod"
"keras-team/autokeras" -> "melodyguan/enas" ["e"=1]
"keras-team/autokeras" -> "carpedm20/ENAS-pytorch" ["e"=1]
"keras-team/autokeras" -> "shap/shap"
"keras-team/autokeras" -> "ludwig-ai/ludwig"
"modin-project/modin" -> "vaexio/vaex"
"modin-project/modin" -> "dask/dask" ["e"=1]
"modin-project/modin" -> "ydataai/ydata-profiling"
"modin-project/modin" -> "ray-project/ray" ["e"=1]
"modin-project/modin" -> "rapidsai/cudf" ["e"=1]
"modin-project/modin" -> "shap/shap"
"modin-project/modin" -> "nalepae/pandarallel"
"modin-project/modin" -> "jmcarpenter2/swifter"
"modin-project/modin" -> "iterative/dvc"
"modin-project/modin" -> "alteryx/featuretools"
"modin-project/modin" -> "vega/altair" ["e"=1]
"modin-project/modin" -> "EpistasisLab/tpot"
"modin-project/modin" -> "pola-rs/polars" ["e"=1]
"modin-project/modin" -> "blue-yonder/tsfresh"
"modin-project/modin" -> "lux-org/lux"
"Kaggle/kaggle-api" -> "Kaggle/docker-python" ["e"=1]
"Kaggle/kaggle-api" -> "microsoft/LightGBM"
"Kaggle/kaggle-api" -> "dmlc/xgboost" ["e"=1]
"Kaggle/kaggle-api" -> "hyperopt/hyperopt"
"Kaggle/kaggle-api" -> "catboost/catboost"
"Kaggle/kaggle-api" -> "shap/shap"
"Kaggle/kaggle-api" -> "ydataai/ydata-profiling"
"Kaggle/kaggle-api" -> "dunovank/jupyter-themes" ["e"=1]
"Kaggle/kaggle-api" -> "fastai/fastai" ["e"=1]
"Kaggle/kaggle-api" -> "statsmodels/statsmodels" ["e"=1]
"Kaggle/kaggle-api" -> "mlflow/mlflow"
"Kaggle/kaggle-api" -> "scikit-learn-contrib/imbalanced-learn"
"Kaggle/kaggle-api" -> "albumentations-team/albumentations" ["e"=1]
"Kaggle/kaggle-api" -> "jupyterlab/jupyterlab" ["e"=1]
"Kaggle/kaggle-api" -> "scikit-learn/scikit-learn" ["e"=1]
"pymc-devs/pymc" -> "pyro-ppl/pyro"
"pymc-devs/pymc" -> "CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers" ["e"=1]
"pymc-devs/pymc" -> "blei-lab/edward"
"pymc-devs/pymc" -> "statsmodels/statsmodels" ["e"=1]
"pymc-devs/pymc" -> "arviz-devs/arviz" ["e"=1]
"pymc-devs/pymc" -> "pymc-devs/pymc-resources" ["e"=1]
"pymc-devs/pymc" -> "tensorflow/probability"
"pymc-devs/pymc" -> "pyro-ppl/numpyro" ["e"=1]
"pymc-devs/pymc" -> "pgmpy/pgmpy" ["e"=1]
"pymc-devs/pymc" -> "jmschrei/pomegranate"
"pymc-devs/pymc" -> "pymc-devs/pymc4" ["e"=1]
"pymc-devs/pymc" -> "dask/dask" ["e"=1]
"pymc-devs/pymc" -> "stan-dev/stan" ["e"=1]
"pymc-devs/pymc" -> "markdregan/Bayesian-Modelling-in-Python" ["e"=1]
"pymc-devs/pymc" -> "py-why/dowhy" ["e"=1]
"kedro-org/kedro" -> "mckinsey/causalnex" ["e"=1]
"kedro-org/kedro" -> "drivendataorg/cookiecutter-data-science"
"kedro-org/kedro" -> "iterative/dvc"
"kedro-org/kedro" -> "great-expectations/great_expectations" ["e"=1]
"kedro-org/kedro" -> "mlflow/mlflow"
"kedro-org/kedro" -> "Netflix/metaflow"
"kedro-org/kedro" -> "PrefectHQ/prefect" ["e"=1]
"kedro-org/kedro" -> "ydataai/ydata-profiling"
"kedro-org/kedro" -> "evidentlyai/evidently"
"kedro-org/kedro" -> "kedro-org/kedro-viz" ["e"=1]
"kedro-org/kedro" -> "modin-project/modin"
"kedro-org/kedro" -> "unionai-oss/pandera"
"kedro-org/kedro" -> "dagster-io/dagster" ["e"=1]
"kedro-org/kedro" -> "vaexio/vaex"
"kedro-org/kedro" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"pbiecek/xai_resources" -> "lopusz/awesome-interpretable-machine-learning"
"pbiecek/xai_resources" -> "anguyen8/XAI-papers" ["e"=1]
"pbiecek/xai_resources" -> "EthicalML/xai"
"pbiecek/xai_resources" -> "wangyongjie-ntu/Awesome-explainable-AI"
"pbiecek/xai_resources" -> "jphall663/awesome-machine-learning-interpretability"
"pbiecek/xai_resources" -> "h2oai/mli-resources"
"pbiecek/xai_resources" -> "ModelOriented/DrWhy" ["e"=1]
"pbiecek/xai_resources" -> "albermax/innvestigate" ["e"=1]
"pbiecek/xai_resources" -> "ModelOriented/DALEX"
"pbiecek/xai_resources" -> "davidbau/dissect" ["e"=1]
"pbiecek/xai_resources" -> "samzabdiel/XAI" ["e"=1]
"pbiecek/xai_resources" -> "Trusted-AI/AIX360"
"pbiecek/xai_resources" -> "SeldonIO/alibi"
"pbiecek/xai_resources" -> "jphall663/interpretable_machine_learning_with_python"
"pbiecek/xai_resources" -> "parrt/fundamentals-of-deep-learning" ["e"=1]
"sktime/sktime" -> "unit8co/darts"
"sktime/sktime" -> "blue-yonder/tsfresh"
"sktime/sktime" -> "tslearn-team/tslearn"
"sktime/sktime" -> "awslabs/gluonts"
"sktime/sktime" -> "timeseriesAI/tsai"
"sktime/sktime" -> "sktime/pytorch-forecasting"
"sktime/sktime" -> "facebookresearch/Kats"
"sktime/sktime" -> "Nixtla/statsforecast"
"sktime/sktime" -> "TDAmeritrade/stumpy"
"sktime/sktime" -> "sktime/sktime-dl" ["e"=1]
"sktime/sktime" -> "pycaret/pycaret"
"sktime/sktime" -> "johannfaouzi/pyts" ["e"=1]
"sktime/sktime" -> "ourownstory/neural_prophet"
"sktime/sktime" -> "facebook/prophet"
"sktime/sktime" -> "Nixtla/neuralforecast"
"cortexlabs/cortex" -> "bentoml/BentoML"
"cortexlabs/cortex" -> "Netflix/metaflow"
"cortexlabs/cortex" -> "iterative/dvc"
"cortexlabs/cortex" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"cortexlabs/cortex" -> "mlflow/mlflow"
"cortexlabs/cortex" -> "horovod/horovod"
"cortexlabs/cortex" -> "SeldonIO/seldon-core"
"cortexlabs/cortex" -> "feast-dev/feast"
"cortexlabs/cortex" -> "iterative/cml"
"cortexlabs/cortex" -> "google/trax" ["e"=1]
"cortexlabs/cortex" -> "chiphuyen/machine-learning-systems-design" ["e"=1]
"cortexlabs/cortex" -> "vaexio/vaex"
"cortexlabs/cortex" -> "snorkel-team/snorkel" ["e"=1]
"cortexlabs/cortex" -> "kubeflow/kubeflow"
"cortexlabs/cortex" -> "ludwig-ai/ludwig"
"MAIF/melusine" -> "scikit-learn-contrib/qolmat"
"MAIF/melusine" -> "MAIF/eurybia"
"MAIF/melusine" -> "scikit-learn-contrib/MAPIE"
"MAIF/melusine" -> "MAIF/arta"
"MAIF/melusine" -> "Quantmetry/grand-debat"
"MAIF/melusine" -> "Quantmetry/pipeasy-spark"
"MAIF/melusine" -> "salimamoukou/acv00"
"MAIF/melusine" -> "Quantmetry/awesome_quantmetry"
"MAIF/melusine" -> "MAIF/shapash"
"MAIF/melusine" -> "scikit-learn-contrib/skope-rules"
"MAIF/melusine" -> "MAIF/meteole"
"MAIF/melusine" -> "beroguedou/basmatinet"
"MAIF/melusine" -> "MAIF/nio" ["e"=1]
"man-group/dtale" -> "adamerose/PandasGUI"
"man-group/dtale" -> "ydataai/ydata-profiling"
"man-group/dtale" -> "fbdesignpro/sweetviz"
"man-group/dtale" -> "lux-org/lux"
"man-group/dtale" -> "man-group/arctic" ["e"=1]
"man-group/dtale" -> "modin-project/modin"
"man-group/dtale" -> "AutoViML/AutoViz"
"man-group/dtale" -> "vaexio/vaex"
"man-group/dtale" -> "man-group/notebooker" ["e"=1]
"man-group/dtale" -> "sfu-db/dataprep"
"man-group/dtale" -> "pycaret/pycaret"
"man-group/dtale" -> "hudson-and-thames/mlfinlab" ["e"=1]
"man-group/dtale" -> "voila-dashboards/voila" ["e"=1]
"man-group/dtale" -> "man-group/ArcticDB" ["e"=1]
"man-group/dtale" -> "ResidentMario/missingno"
"clearml/clearml" -> "clearml/clearml-server"
"clearml/clearml" -> "kili-technology/kili-python-sdk" ["e"=1]
"clearml/clearml" -> "fabien-h/acta" ["e"=1]
"clearml/clearml" -> "aimhubio/aim"
"clearml/clearml" -> "AlanAutomated/wilson" ["e"=1]
"clearml/clearml" -> "yanchokraev/grayshift" ["e"=1]
"clearml/clearml" -> "iterative/dvc"
"clearml/clearml" -> "feast-dev/feast"
"clearml/clearml" -> "nlpodyssey/spago" ["e"=1]
"clearml/clearml" -> "default-services/components" ["e"=1]
"clearml/clearml" -> "gquittet/graceful-server" ["e"=1]
"clearml/clearml" -> "mlflow/mlflow"
"clearml/clearml" -> "fast-ide/fast-ide" ["e"=1]
"clearml/clearml" -> "LINBIT/drbd" ["e"=1]
"clearml/clearml" -> "celer-network/goCeler-oss" ["e"=1]
"csoneson/ARMOR" -> "iSEE/iSEE"
"csoneson/ARMOR" -> "thelovelab/tximeta"
"alteryx/featuretools" -> "EpistasisLab/tpot"
"alteryx/featuretools" -> "blue-yonder/tsfresh"
"alteryx/featuretools" -> "automl/auto-sklearn"
"alteryx/featuretools" -> "scikit-learn-contrib/imbalanced-learn"
"alteryx/featuretools" -> "hyperopt/hyperopt"
"alteryx/featuretools" -> "ydataai/ydata-profiling"
"alteryx/featuretools" -> "shap/shap"
"alteryx/featuretools" -> "rasbt/mlxtend"
"alteryx/featuretools" -> "keras-team/autokeras"
"alteryx/featuretools" -> "marcotcr/lime"
"alteryx/featuretools" -> "DistrictDataLabs/yellowbrick"
"alteryx/featuretools" -> "modin-project/modin"
"alteryx/featuretools" -> "interpretml/interpret"
"alteryx/featuretools" -> "microsoft/LightGBM"
"alteryx/featuretools" -> "catboost/catboost"
"tensorflow/examples" -> "tensorflow/docs"
"tensorflow/examples" -> "android/camera-samples" ["e"=1]
"tensorflow/examples" -> "googlesamples/mlkit" ["e"=1]
"tensorflow/examples" -> "tensorflow/models" ["e"=1]
"tensorflow/examples" -> "tensorflow/tfjs-models" ["e"=1]
"tensorflow/examples" -> "tensorflow/datasets"
"tensorflow/examples" -> "google-ai-edge/mediapipe" ["e"=1]
"tensorflow/examples" -> "Tencent/ncnn" ["e"=1]
"tensorflow/examples" -> "android/ndk-samples" ["e"=1]
"tensorflow/examples" -> "android/sunflower" ["e"=1]
"tensorflow/examples" -> "alibaba/MNN" ["e"=1]
"tensorflow/examples" -> "EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" ["e"=1]
"tensorflow/examples" -> "android/architecture-components-samples" ["e"=1]
"tensorflow/examples" -> "cats-oss/android-gpuimage" ["e"=1]
"tensorflow/examples" -> "android/compose-samples" ["e"=1]
"tensorflow/docs" -> "tensorflow/community"
"tensorflow/docs" -> "tensorflow/datasets"
"tensorflow/docs" -> "tensorflow/examples"
"tensorflow/docs" -> "tensorflow/tensorboard"
"tensorflow/docs" -> "tensorflow/hub"
"tensorflow/docs" -> "tensorflow/models" ["e"=1]
"tensorflow/docs" -> "tensorflow/serving" ["e"=1]
"tensorflow/docs" -> "tensorflow/tensor2tensor" ["e"=1]
"tensorflow/docs" -> "lmoroney/dlaicourse"
"tensorflow/docs" -> "keras-team/keras-io"
"tensorflow/docs" -> "czy36mengfei/tensorflow2_tutorials_chinese" ["e"=1]
"tensorflow/docs" -> "pytorch/tutorials" ["e"=1]
"tensorflow/docs" -> "google-research/bert" ["e"=1]
"tensorflow/docs" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"tensorflow/docs" -> "chiphuyen/stanford-tensorflow-tutorials" ["e"=1]
"eamid/trimap" -> "YingfanWang/PaCMAP"
"eamid/trimap" -> "hyungkwonko/umato"
"eamid/trimap" -> "wilsonjr/humap"
"eamid/trimap" -> "dillondaudert/UMAP.jl" ["e"=1]
"pavlin-policar/openTSNE" -> "KlugerLab/FIt-SNE" ["e"=1]
"pavlin-policar/openTSNE" -> "CannyLab/tsne-cuda"
"pavlin-policar/openTSNE" -> "DmitryUlyanov/Multicore-TSNE"
"pavlin-policar/openTSNE" -> "mxl1990/tsne-pytorch"
"pavlin-policar/openTSNE" -> "cemoody/topicsne"
"pavlin-policar/openTSNE" -> "lmcinnes/umap"
"pavlin-policar/openTSNE" -> "berenslab/rna-seq-tsne"
"pavlin-policar/openTSNE" -> "beringresearch/ivis"
"pavlin-policar/openTSNE" -> "lvdmaaten/bhtsne"
"pavlin-policar/openTSNE" -> "scikit-learn-contrib/hdbscan"
"pavlin-policar/openTSNE" -> "YingfanWang/PaCMAP"
"pavlin-policar/openTSNE" -> "cvxgrp/pymde"
"pavlin-policar/openTSNE" -> "sepandhaghighi/pycm" ["e"=1]
"pavlin-policar/openTSNE" -> "lmcinnes/pynndescent"
"pavlin-policar/openTSNE" -> "lferry007/LargeVis"
"beringresearch/ivis" -> "wilsonjr/humap"
"feast-dev/feast" -> "SeldonIO/seldon-core"
"feast-dev/feast" -> "mlflow/mlflow"
"feast-dev/feast" -> "bentoml/BentoML"
"feast-dev/feast" -> "feathr-ai/feathr" ["e"=1]
"feast-dev/feast" -> "Netflix/metaflow"
"feast-dev/feast" -> "logicalclocks/hopsworks"
"feast-dev/feast" -> "kserve/kserve"
"feast-dev/feast" -> "kubeflow/kubeflow"
"feast-dev/feast" -> "iterative/dvc"
"feast-dev/feast" -> "evidentlyai/evidently"
"feast-dev/feast" -> "clearml/clearml"
"feast-dev/feast" -> "zenml-io/zenml"
"feast-dev/feast" -> "flyteorg/flyte"
"feast-dev/feast" -> "visenger/awesome-mlops" ["e"=1]
"feast-dev/feast" -> "great-expectations/great_expectations" ["e"=1]
"Code-Pop/real-world-vue" -> "Code-Pop/authentication_course"
"Code-Pop/real-world-vue" -> "Code-Pop/watch-us-build-trello"
"Code-Pop/real-world-vue" -> "Code-Pop/real-world-nuxt"
"Code-Pop/real-world-vue" -> "Code-Pop/beautify-with-vuetify"
"Code-Pop/real-world-vue" -> "Code-Pop/vue-mastery"
"Code-Pop/real-world-vue" -> "Code-Pop/animating-vue"
"Code-Pop/real-world-vue" -> "Code-Pop/Real-World_Vue-3"
"Code-Pop/real-world-vue" -> "Code-Pop/Unit-Testing-Vue2"
"Code-Pop/real-world-vue" -> "Code-Pop/vue-3-reactivity"
"Code-Pop/real-world-vue" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/real-world-vue" -> "Code-Pop/Intro-to-Vue-3"
"Code-Pop/real-world-vue" -> "Code-Pop/build-gmail-clone-with-vue-3"
"Code-Pop/real-world-vue" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/real-world-vue" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/real-world-vue" -> "Code-Pop/Vue-2-to-Vue-3"
"sfu-db/dataprep" -> "fbdesignpro/sweetviz"
"sfu-db/dataprep" -> "AutoViML/AutoViz"
"sfu-db/dataprep" -> "lux-org/lux"
"sfu-db/dataprep" -> "ydataai/ydata-profiling"
"sfu-db/dataprep" -> "sfu-db/connector-x" ["e"=1]
"sfu-db/dataprep" -> "man-group/dtale"
"sfu-db/dataprep" -> "shankarpandala/lazypredict"
"sfu-db/dataprep" -> "feature-engine/feature_engine"
"sfu-db/dataprep" -> "oegedijk/explainerdashboard"
"sfu-db/dataprep" -> "MAIF/shapash"
"sfu-db/dataprep" -> "jbesomi/texthero" ["e"=1]
"sfu-db/dataprep" -> "h2oai/datatable" ["e"=1]
"sfu-db/dataprep" -> "pyjanitor-devs/pyjanitor"
"sfu-db/dataprep" -> "fugue-project/fugue" ["e"=1]
"sfu-db/dataprep" -> "SeldonIO/alibi-detect"
"awslabs/gluonts" -> "sktime/pytorch-forecasting"
"awslabs/gluonts" -> "zalandoresearch/pytorch-ts" ["e"=1]
"awslabs/gluonts" -> "Nixtla/neuralforecast"
"awslabs/gluonts" -> "unit8co/darts"
"awslabs/gluonts" -> "timeseriesAI/tsai"
"awslabs/gluonts" -> "Alro10/deep-learning-time-series" ["e"=1]
"awslabs/gluonts" -> "sktime/sktime"
"awslabs/gluonts" -> "blue-yonder/tsfresh"
"awslabs/gluonts" -> "ourownstory/neural_prophet"
"awslabs/gluonts" -> "amazon-science/chronos-forecasting" ["e"=1]
"awslabs/gluonts" -> "AIStream-Peelout/flow-forecast" ["e"=1]
"awslabs/gluonts" -> "facebookresearch/Kats"
"awslabs/gluonts" -> "tslearn-team/tslearn"
"awslabs/gluonts" -> "Nixtla/statsforecast"
"awslabs/gluonts" -> "thuml/Time-Series-Library" ["e"=1]
"h2oai/h2o-3" -> "h2oai/h2o-tutorials" ["e"=1]
"h2oai/h2o-3" -> "automl/auto-sklearn"
"h2oai/h2o-3" -> "h2oai/sparkling-water" ["e"=1]
"h2oai/h2o-3" -> "EpistasisLab/tpot"
"h2oai/h2o-3" -> "dmlc/xgboost" ["e"=1]
"h2oai/h2o-3" -> "alteryx/featuretools"
"h2oai/h2o-3" -> "microsoft/LightGBM"
"h2oai/h2o-3" -> "keras-team/autokeras"
"h2oai/h2o-3" -> "VowpalWabbit/vowpal_wabbit"
"h2oai/h2o-3" -> "catboost/catboost"
"h2oai/h2o-3" -> "mlflow/mlflow"
"h2oai/h2o-3" -> "facebook/prophet"
"h2oai/h2o-3" -> "hyperopt/hyperopt"
"h2oai/h2o-3" -> "pycaret/pycaret"
"h2oai/h2o-3" -> "autogluon/autogluon"
"ludwig-ai/ludwig" -> "horovod/horovod"
"ludwig-ai/ludwig" -> "keras-team/autokeras"
"ludwig-ai/ludwig" -> "mlflow/mlflow"
"ludwig-ai/ludwig" -> "flairNLP/flair" ["e"=1]
"ludwig-ai/ludwig" -> "EpistasisLab/tpot"
"ludwig-ai/ludwig" -> "iterative/dvc"
"ludwig-ai/ludwig" -> "shap/shap"
"ludwig-ai/ludwig" -> "Netflix/metaflow"
"ludwig-ai/ludwig" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"ludwig-ai/ludwig" -> "automl/auto-sklearn"
"ludwig-ai/ludwig" -> "snorkel-team/snorkel" ["e"=1]
"ludwig-ai/ludwig" -> "interpretml/interpret"
"ludwig-ai/ludwig" -> "marcotcr/lime"
"ludwig-ai/ludwig" -> "alteryx/featuretools"
"ludwig-ai/ludwig" -> "microsoft/nni"
"jlmelville/uwot" -> "tkonopka/umap"
"jlmelville/uwot" -> "ropensci-archive/umapr"
"jlmelville/uwot" -> "jkrijthe/Rtsne"
"jlmelville/uwot" -> "iSEE/iSEE"
"krasserm/bayesian-machine-learning" -> "kumar-shridhar/PyTorch-BayesianCNN" ["e"=1]
"krasserm/bayesian-machine-learning" -> "JavierAntoran/Bayesian-Neural-Networks" ["e"=1]
"krasserm/bayesian-machine-learning" -> "cornellius-gp/gpytorch"
"krasserm/bayesian-machine-learning" -> "pytorch/botorch"
"krasserm/bayesian-machine-learning" -> "bayesian-optimization/BayesianOptimization"
"krasserm/bayesian-machine-learning" -> "SheffieldML/GPy"
"krasserm/bayesian-machine-learning" -> "tensorflow/probability"
"krasserm/bayesian-machine-learning" -> "GPflow/GPflow"
"krasserm/bayesian-machine-learning" -> "piEsposito/blitz-bayesian-deep-learning" ["e"=1]
"krasserm/bayesian-machine-learning" -> "SheffieldML/GPyOpt"
"krasserm/bayesian-machine-learning" -> "bayesgroup/deepbayes-2019" ["e"=1]
"krasserm/bayesian-machine-learning" -> "probml/pyprobml" ["e"=1]
"krasserm/bayesian-machine-learning" -> "EmuKit/emukit"
"krasserm/bayesian-machine-learning" -> "pyro-ppl/numpyro" ["e"=1]
"krasserm/bayesian-machine-learning" -> "uncertainty-toolbox/uncertainty-toolbox" ["e"=1]
"aapatel09/handson-unsupervised-learning" -> "nlpbook/nlpbook"
"aapatel09/handson-unsupervised-learning" -> "PacktPublishing/Hands-On-Explainable-AI-XAI-with-Python"
"aapatel09/handson-unsupervised-learning" -> "totalgood/nlpia" ["e"=1]
"aapatel09/handson-unsupervised-learning" -> "aditya1702/Machine-Learning-and-Data-Science" ["e"=1]
"aapatel09/handson-unsupervised-learning" -> "PracticalTimeSeriesAnalysis/BookRepo" ["e"=1]
"aapatel09/handson-unsupervised-learning" -> "alicezheng/feature-engineering-book"
"aapatel09/handson-unsupervised-learning" -> "davidADSP/GDL_code" ["e"=1]
"aapatel09/handson-unsupervised-learning" -> "DOsinga/deep_learning_cookbook"
"openml/openml-r" -> "rdatsci/rtcl" ["e"=1]
"aimhubio/aim" -> "clearml/clearml"
"aimhubio/aim" -> "evidentlyai/evidently"
"aimhubio/aim" -> "facebookresearch/hydra" ["e"=1]
"aimhubio/aim" -> "arogozhnikov/einops" ["e"=1]
"aimhubio/aim" -> "zenml-io/zenml"
"aimhubio/aim" -> "ashleve/lightning-hydra-template" ["e"=1]
"aimhubio/aim" -> "bentoml/BentoML"
"aimhubio/aim" -> "iterative/dvc"
"aimhubio/aim" -> "activeloopai/deeplake"
"aimhubio/aim" -> "mosaicml/composer" ["e"=1]
"aimhubio/aim" -> "mlflow/mlflow"
"aimhubio/aim" -> "feast-dev/feast"
"aimhubio/aim" -> "google/flax" ["e"=1]
"aimhubio/aim" -> "libffcv/ffcv" ["e"=1]
"aimhubio/aim" -> "argilla-io/argilla" ["e"=1]
"unionai-oss/pandera" -> "ibis-project/ibis" ["e"=1]
"unionai-oss/pandera" -> "fugue-project/fugue" ["e"=1]
"unionai-oss/pandera" -> "great-expectations/great_expectations" ["e"=1]
"unionai-oss/pandera" -> "modin-project/modin"
"unionai-oss/pandera" -> "kedro-org/kedro"
"unionai-oss/pandera" -> "Nixtla/statsforecast"
"unionai-oss/pandera" -> "pola-rs/polars" ["e"=1]
"unionai-oss/pandera" -> "ydataai/ydata-profiling"
"unionai-oss/pandera" -> "beartype/beartype" ["e"=1]
"unionai-oss/pandera" -> "iterative/dvc"
"unionai-oss/pandera" -> "TobikoData/sqlmesh" ["e"=1]
"unionai-oss/pandera" -> "posit-dev/great-tables" ["e"=1]
"unionai-oss/pandera" -> "vaexio/vaex"
"unionai-oss/pandera" -> "dagster-io/dagster" ["e"=1]
"unionai-oss/pandera" -> "sktime/sktime"
"cleanlab/cleanlab" -> "subeeshvasu/Awesome-Learning-with-Label-Noise" ["e"=1]
"cleanlab/cleanlab" -> "Lightning-AI/litgpt" ["e"=1]
"cleanlab/cleanlab" -> "owainlewis/awesome-artificial-intelligence" ["e"=1]
"cleanlab/cleanlab" -> "shap/shap"
"cleanlab/cleanlab" -> "stanfordnlp/dspy" ["e"=1]
"cleanlab/cleanlab" -> "evidentlyai/evidently"
"cleanlab/cleanlab" -> "pycaret/pycaret"
"cleanlab/cleanlab" -> "snorkel-team/snorkel" ["e"=1]
"cleanlab/cleanlab" -> "UKPLab/sentence-transformers" ["e"=1]
"cleanlab/cleanlab" -> "visenger/awesome-mlops" ["e"=1]
"cleanlab/cleanlab" -> "albumentations-team/albumentations" ["e"=1]
"cleanlab/cleanlab" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"cleanlab/cleanlab" -> "iterative/dvc"
"cleanlab/cleanlab" -> "ydataai/ydata-profiling"
"cleanlab/cleanlab" -> "deepchecks/deepchecks"
"sdv-dev/SDV" -> "sdv-dev/CTGAN"
"sdv-dev/SDV" -> "ydataai/ydata-synthetic" ["e"=1]
"sdv-dev/SDV" -> "sdv-dev/SDMetrics"
"sdv-dev/SDV" -> "sdv-dev/Copulas"
"sdv-dev/SDV" -> "sdv-dev/SDGym"
"sdv-dev/SDV" -> "gretelai/gretel-synthetics"
"sdv-dev/SDV" -> "Diyago/Tabular-data-generation"
"sdv-dev/SDV" -> "vanderschaarlab/synthcity"
"sdv-dev/SDV" -> "sdv-dev/RDT"
"sdv-dev/SDV" -> "scikit-learn-contrib/MAPIE"
"sdv-dev/SDV" -> "koaning/scikit-lego"
"sdv-dev/SDV" -> "oegedijk/explainerdashboard"
"sdv-dev/SDV" -> "uber/orbit"
"sdv-dev/SDV" -> "unionai-oss/pandera"
"sdv-dev/SDV" -> "deepchecks/deepchecks"
"kaushalshetty/FeatureSelectionGA" -> "renatoosousa/GeneticAlgorithmForFeatureSelection"
"kaushalshetty/FeatureSelectionGA" -> "duxuhao/Feature-Selection"
"kaushalshetty/FeatureSelectionGA" -> "danielhomola/mifs"
"kaushalshetty/FeatureSelectionGA" -> "manuel-calzolari/sklearn-genetic"
"kaushalshetty/FeatureSelectionGA" -> "JingweiToo/Wrapper-Feature-Selection-Toolbox-Python" ["e"=1]
"kaushalshetty/FeatureSelectionGA" -> "jundongl/scikit-feature"
"kaushalshetty/FeatureSelectionGA" -> "scoliann/GeneticAlgorithmFeatureSelection"
"kaushalshetty/FeatureSelectionGA" -> "solegalli/feature-selection-for-machine-learning"
"kaushalshetty/FeatureSelectionGA" -> "rogeroyer/feature_selection_GAAlgorithm"
"kaushalshetty/FeatureSelectionGA" -> "Ekeany/Boruta-Shap"
"kaushalshetty/FeatureSelectionGA" -> "anujdutt9/Feature-Selection-for-Machine-Learning"
"kaushalshetty/FeatureSelectionGA" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"kaushalshetty/FeatureSelectionGA" -> "ctlab/ITMO_FS"
"kaushalshetty/FeatureSelectionGA" -> "EpistasisLab/scikit-rebate"
"kaushalshetty/FeatureSelectionGA" -> "ahcantao/PSOFeatureSelection" ["e"=1]
"anujdutt9/Feature-Selection-for-Machine-Learning" -> "aikho/awesome-feature-engineering"
"anujdutt9/Feature-Selection-for-Machine-Learning" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"anujdutt9/Feature-Selection-for-Machine-Learning" -> "solegalli/feature-selection-for-machine-learning"
"anujdutt9/Feature-Selection-for-Machine-Learning" -> "kaushalshetty/FeatureSelectionGA"
"anujdutt9/Feature-Selection-for-Machine-Learning" -> "duxuhao/Feature-Selection"
"parrt/dtreeviz" -> "DistrictDataLabs/yellowbrick"
"parrt/dtreeviz" -> "interpretml/interpret"
"parrt/dtreeviz" -> "scikit-learn-contrib/category_encoders"
"parrt/dtreeviz" -> "TeamHG-Memex/eli5"
"parrt/dtreeviz" -> "parrt/random-forest-importances"
"parrt/dtreeviz" -> "MAIF/shapash"
"parrt/dtreeviz" -> "rasbt/mlxtend"
"parrt/dtreeviz" -> "scikit-learn-contrib/imbalanced-learn"
"parrt/dtreeviz" -> "blue-yonder/tsfresh"
"parrt/dtreeviz" -> "SauceCat/PDPbox"
"parrt/dtreeviz" -> "dreamquark-ai/tabnet" ["e"=1]
"parrt/dtreeviz" -> "koaning/scikit-lego"
"parrt/dtreeviz" -> "shap/shap"
"parrt/dtreeviz" -> "ResidentMario/missingno"
"parrt/dtreeviz" -> "reiinakano/scikit-plot"
"cybertronai/gradient-checkpointing" -> "horovod/horovod"
"cybertronai/gradient-checkpointing" -> "NVIDIA/apex" ["e"=1]
"cybertronai/gradient-checkpointing" -> "tensorpack/tensorpack" ["e"=1]
"cybertronai/gradient-checkpointing" -> "tensorflow/mesh"
"cybertronai/gradient-checkpointing" -> "facebookresearch/TensorComprehensions" ["e"=1]
"cybertronai/gradient-checkpointing" -> "HIPS/autograd"
"cybertronai/gradient-checkpointing" -> "facebookresearch/fairseq-lua" ["e"=1]
"cybertronai/gradient-checkpointing" -> "google-deepmind/dnc" ["e"=1]
"cybertronai/gradient-checkpointing" -> "facebookresearch/fairscale" ["e"=1]
"cybertronai/gradient-checkpointing" -> "google-deepmind/sonnet" ["e"=1]
"cybertronai/gradient-checkpointing" -> "tensorflow/fold" ["e"=1]
"cybertronai/gradient-checkpointing" -> "quark0/darts" ["e"=1]
"cybertronai/gradient-checkpointing" -> "tensorflow/lingvo" ["e"=1]
"cybertronai/gradient-checkpointing" -> "dennybritz/deeplearning-papernotes" ["e"=1]
"cybertronai/gradient-checkpointing" -> "tkarras/progressive_growing_of_gans" ["e"=1]
"online-ml/river" -> "scikit-multiflow/scikit-multiflow"
"online-ml/river" -> "SeldonIO/alibi-detect"
"online-ml/river" -> "online-ml/awesome-online-machine-learning"
"online-ml/river" -> "sktime/sktime"
"online-ml/river" -> "evidentlyai/evidently"
"online-ml/river" -> "MAIF/shapash"
"online-ml/river" -> "deepchecks/deepchecks"
"online-ml/river" -> "unit8co/darts"
"online-ml/river" -> "salesforce/Merlion"
"online-ml/river" -> "microsoft/FLAML"
"online-ml/river" -> "modin-project/modin"
"online-ml/river" -> "pycaret/pycaret"
"online-ml/river" -> "interpretml/interpret"
"online-ml/river" -> "Nixtla/statsforecast"
"online-ml/river" -> "blue-yonder/tsfresh"
"hmmlearn/hmmlearn" -> "larsmans/seqlearn" ["e"=1]
"hmmlearn/hmmlearn" -> "jmschrei/pomegranate"
"hmmlearn/hmmlearn" -> "pymc-devs/pymc"
"hmmlearn/hmmlearn" -> "mattjj/pyhsmm" ["e"=1]
"hmmlearn/hmmlearn" -> "tostq/Easy_HMM"
"hmmlearn/hmmlearn" -> "pgmpy/pgmpy" ["e"=1]
"hmmlearn/hmmlearn" -> "tslearn-team/tslearn"
"hmmlearn/hmmlearn" -> "blue-yonder/tsfresh"
"hmmlearn/hmmlearn" -> "rasbt/mlxtend"
"hmmlearn/hmmlearn" -> "scikit-learn-contrib/imbalanced-learn"
"hmmlearn/hmmlearn" -> "statsmodels/statsmodels" ["e"=1]
"hmmlearn/hmmlearn" -> "hyperopt/hyperopt"
"hmmlearn/hmmlearn" -> "blei-lab/edward"
"hmmlearn/hmmlearn" -> "guyz/HMM"
"hmmlearn/hmmlearn" -> "pyro-ppl/pyro"
"fairlearn/fairlearn" -> "Trusted-AI/AIF360"
"fairlearn/fairlearn" -> "interpretml/interpret"
"fairlearn/fairlearn" -> "microsoft/responsible-ai-toolbox"
"fairlearn/fairlearn" -> "dssg/aequitas"
"fairlearn/fairlearn" -> "interpretml/interpret-community"
"fairlearn/fairlearn" -> "interpretml/DiCE"
"fairlearn/fairlearn" -> "koaning/scikit-lego"
"fairlearn/fairlearn" -> "mbilalzafar/fair-classification"
"fairlearn/fairlearn" -> "SeldonIO/alibi"
"fairlearn/fairlearn" -> "propublica/compas-analysis"
"fairlearn/fairlearn" -> "skrub-data/skrub"
"fairlearn/fairlearn" -> "Trusted-AI/AIX360"
"fairlearn/fairlearn" -> "MAIF/shapash"
"fairlearn/fairlearn" -> "scikit-learn-contrib/MAPIE"
"fairlearn/fairlearn" -> "SeldonIO/alibi-detect"
"claimed-framework/component-library" -> "romeokienzler/TensorFlow"
"claimed-framework/component-library" -> "wchill/HMP_Dataset"
"claimed-framework/component-library" -> "lmoroney/dlaicourse"
"claimed-framework/component-library" -> "jupyter/jupyter" ["e"=1]
"claimed-framework/component-library" -> "IBM/MAX-Object-Detector"
"claimed-framework/component-library" -> "salimt/Courses-" ["e"=1]
"claimed-framework/component-library" -> "GoogleCloudPlatform/training-data-analyst" ["e"=1]
"claimed-framework/component-library" -> "elyra-ai/elyra"
"claimed-framework/component-library" -> "https-deeplearning-ai/machine-learning-engineering-for-production-public"
"claimed-framework/component-library" -> "Kulbear/deep-learning-coursera" ["e"=1]
"claimed-framework/component-library" -> "udacity/DSND_Term2" ["e"=1]
"claimed-framework/component-library" -> "udacity/deep-learning-v2-pytorch" ["e"=1]
"claimed-framework/component-library" -> "Trusted-AI/AIF360"
"claimed-framework/component-library" -> "shenweichen/Coursera" ["e"=1]
"claimed-framework/component-library" -> "AllenDowney/ThinkStats2" ["e"=1]
"IBM/MAX-Object-Detector" -> "IBM/MAX-Object-Detector-Web-App"
"IBM/MAX-Object-Detector" -> "IBM/MAX-Weather-Forecaster"
"IBM/MAX-Object-Detector" -> "CODAIT/max-central-repo"
"IBM/MAX-Object-Detector" -> "CODAIT/node-red-contrib-model-asset-exchange"
"IBM/MAX-Object-Detector" -> "IBM/MAX-Framework"
"IBM/MAX-Object-Detector" -> "IBM/MAX-Inception-ResNet-v2"
"oseiskar/simdkalman" -> "malmgrek/gammy"
"pytorch/botorch" -> "facebook/Ax"
"pytorch/botorch" -> "cornellius-gp/gpytorch"
"pytorch/botorch" -> "bayesian-optimization/BayesianOptimization"
"pytorch/botorch" -> "pyro-ppl/pyro"
"pytorch/botorch" -> "SheffieldML/GPy"
"pytorch/botorch" -> "facebookresearch/nevergrad"
"pytorch/botorch" -> "SheffieldML/GPyOpt"
"pytorch/botorch" -> "scikit-optimize/scikit-optimize"
"pytorch/botorch" -> "GPflow/GPflow"
"pytorch/botorch" -> "pyro-ppl/numpyro" ["e"=1]
"pytorch/botorch" -> "krasserm/bayesian-machine-learning"
"pytorch/botorch" -> "google/neural-tangents" ["e"=1]
"pytorch/botorch" -> "skorch-dev/skorch"
"pytorch/botorch" -> "cvxgrp/cvxpylayers" ["e"=1]
"pytorch/botorch" -> "pymc-devs/pymc"
"mljar/mljar-supervised" -> "microsoft/FLAML"
"mljar/mljar-supervised" -> "autogluon/autogluon"
"mljar/mljar-supervised" -> "feature-engine/feature_engine"
"mljar/mljar-supervised" -> "automl/auto-sklearn"
"mljar/mljar-supervised" -> "pycaret/pycaret"
"mljar/mljar-supervised" -> "oegedijk/explainerdashboard"
"mljar/mljar-supervised" -> "MAIF/shapash"
"mljar/mljar-supervised" -> "alteryx/evalml"
"mljar/mljar-supervised" -> "interpretml/interpret"
"mljar/mljar-supervised" -> "EpistasisLab/tpot"
"mljar/mljar-supervised" -> "alteryx/featuretools"
"mljar/mljar-supervised" -> "dreamquark-ai/tabnet" ["e"=1]
"mljar/mljar-supervised" -> "AutoViML/Auto_ViML"
"mljar/mljar-supervised" -> "fbdesignpro/sweetviz"
"mljar/mljar-supervised" -> "AxeldeRomblay/MLBox"
"autogluon/autogluon" -> "automl/auto-sklearn"
"autogluon/autogluon" -> "microsoft/nni"
"autogluon/autogluon" -> "keras-team/autokeras"
"autogluon/autogluon" -> "awslabs/gluonts"
"autogluon/autogluon" -> "optuna/optuna"
"autogluon/autogluon" -> "pycaret/pycaret"
"autogluon/autogluon" -> "microsoft/FLAML"
"autogluon/autogluon" -> "EpistasisLab/tpot"
"autogluon/autogluon" -> "unit8co/darts"
"autogluon/autogluon" -> "mljar/mljar-supervised"
"autogluon/autogluon" -> "alteryx/featuretools"
"autogluon/autogluon" -> "sktime/sktime"
"autogluon/autogluon" -> "shap/shap"
"autogluon/autogluon" -> "blue-yonder/tsfresh"
"autogluon/autogluon" -> "dreamquark-ai/tabnet" ["e"=1]
"kubeflow/kubeflow" -> "mlflow/mlflow"
"kubeflow/kubeflow" -> "kubeflow/pipelines"
"kubeflow/kubeflow" -> "horovod/horovod"
"kubeflow/kubeflow" -> "SeldonIO/seldon-core"
"kubeflow/kubeflow" -> "kserve/kserve"
"kubeflow/kubeflow" -> "ray-project/ray" ["e"=1]
"kubeflow/kubeflow" -> "argoproj/argo-workflows" ["e"=1]
"kubeflow/kubeflow" -> "kubeflow/trainer" ["e"=1]
"kubeflow/kubeflow" -> "volcano-sh/volcano" ["e"=1]
"kubeflow/kubeflow" -> "kubernetes-sigs/kubebuilder" ["e"=1]
"kubeflow/kubeflow" -> "iterative/dvc"
"kubeflow/kubeflow" -> "istio/istio" ["e"=1]
"kubeflow/kubeflow" -> "helm/helm" ["e"=1]
"kubeflow/kubeflow" -> "feast-dev/feast"
"kubeflow/kubeflow" -> "kubernetes-sigs/kustomize" ["e"=1]
"deepcharles/ruptures" -> "hildensia/bayesian_changepoint_detection"
"deepcharles/ruptures" -> "tslearn-team/tslearn"
"deepcharles/ruptures" -> "TDAmeritrade/stumpy"
"deepcharles/ruptures" -> "blue-yonder/tsfresh"
"deepcharles/ruptures" -> "johannfaouzi/pyts" ["e"=1]
"deepcharles/ruptures" -> "zillow/luminaire" ["e"=1]
"deepcharles/ruptures" -> "facebookresearch/Kats"
"deepcharles/ruptures" -> "alkaline-ml/pmdarima"
"deepcharles/ruptures" -> "sktime/sktime"
"deepcharles/ruptures" -> "shunsukeaihara/changefinder"
"deepcharles/ruptures" -> "cerlymarco/tsmoothie"
"deepcharles/ruptures" -> "zhaokg/Rbeast"
"deepcharles/ruptures" -> "wannesm/dtaidistance" ["e"=1]
"deepcharles/ruptures" -> "awslabs/gluonts"
"deepcharles/ruptures" -> "uber/orbit"
"rapidsai/cuml" -> "rapidsai/cudf" ["e"=1]
"rapidsai/cuml" -> "rapidsai/cugraph" ["e"=1]
"rapidsai/cuml" -> "cupy/cupy" ["e"=1]
"rapidsai/cuml" -> "lmcinnes/umap"
"rapidsai/cuml" -> "rapidsai/notebooks" ["e"=1]
"rapidsai/cuml" -> "skorch-dev/skorch"
"rapidsai/cuml" -> "microsoft/hummingbird"
"rapidsai/cuml" -> "DistrictDataLabs/yellowbrick"
"rapidsai/cuml" -> "optuna/optuna"
"rapidsai/cuml" -> "modin-project/modin"
"rapidsai/cuml" -> "interpretml/interpret"
"rapidsai/cuml" -> "dask/dask" ["e"=1]
"rapidsai/cuml" -> "scikit-learn-contrib/imbalanced-learn"
"rapidsai/cuml" -> "shap/shap"
"rapidsai/cuml" -> "dreamquark-ai/tabnet" ["e"=1]
"tensorflow/datasets" -> "lmoroney/dlaicourse"
"tensorflow/datasets" -> "tensorflow/docs"
"tensorflow/datasets" -> "tensorflow/tensorboard"
"tensorflow/datasets" -> "tensorflow/hub"
"tensorflow/datasets" -> "keras-team/keras-preprocessing"
"tensorflow/datasets" -> "tensorflow/probability"
"tensorflow/datasets" -> "tensorflow/addons"
"tensorflow/datasets" -> "tensorflow/tfx"
"tensorflow/datasets" -> "tensorflow/examples"
"tensorflow/datasets" -> "tensorflow/model-optimization"
"tensorflow/datasets" -> "tensorflow/tensor2tensor" ["e"=1]
"tensorflow/datasets" -> "tensorflow/agents" ["e"=1]
"tensorflow/datasets" -> "https-deeplearning-ai/tensorflow-1-public"
"tensorflow/datasets" -> "keras-team/keras-tuner"
"tensorflow/datasets" -> "tensorflow/serving" ["e"=1]
"workalendar/workalendar" -> "vacanza/holidays"
"workalendar/workalendar" -> "olist/correios" ["e"=1]
"workalendar/workalendar" -> "spulec/freezegun" ["e"=1]
"tensorflow/mesh" -> "google-research/t5x" ["e"=1]
"tensorflow/mesh" -> "facebookresearch/fairscale" ["e"=1]
"tensorflow/mesh" -> "google/seqio" ["e"=1]
"tensorflow/mesh" -> "flexflow/flexflow-train" ["e"=1]
"tensorflow/mesh" -> "tensorflow/io"
"tensorflow/mesh" -> "bytedance/byteps" ["e"=1]
"tensorflow/mesh" -> "kakaobrain/torchgpipe" ["e"=1]
"tensorflow/mesh" -> "alpa-projects/alpa" ["e"=1]
"tensorflow/mesh" -> "tensorflow/lingvo" ["e"=1]
"tensorflow/mesh" -> "tensorflow/addons"
"tensorflow/mesh" -> "laekov/fastmoe" ["e"=1]
"tensorflow/mesh" -> "tensorflow/custom-op"
"tensorflow/mesh" -> "google/flaxformer" ["e"=1]
"tensorflow/mesh" -> "cybertronai/gradient-checkpointing"
"tensorflow/mesh" -> "msr-fiddle/pipedream" ["e"=1]
"kubeflow/katib" -> "kubeflow/trainer" ["e"=1]
"kubeflow/katib" -> "kubeflow/pipelines"
"kubeflow/katib" -> "kserve/kserve"
"kubeflow/katib" -> "kubeflow-kale/kale"
"kubeflow/katib" -> "kubeflow/examples" ["e"=1]
"kubeflow/katib" -> "kubeflow/kubeflow"
"kubeflow/katib" -> "kubeflow/manifests"
"kubeflow/katib" -> "SeldonIO/seldon-core"
"kubeflow/katib" -> "kubeflow/mpi-operator" ["e"=1]
"kubeflow/katib" -> "kubernetes-retired/kube-batch" ["e"=1]
"kubeflow/katib" -> "kubeflow/fairing"
"kubeflow/katib" -> "tobegit3hub/advisor"
"kubeflow/katib" -> "kubeflow/arena" ["e"=1]
"kubeflow/katib" -> "kubeflow/pytorch-operator" ["e"=1]
"kubeflow/katib" -> "tensorflow/tfx"
"automl/HpBandSter" -> "automl/SMAC3"
"automl/HpBandSter" -> "automl/ConfigSpace"
"automl/HpBandSter" -> "automl/RoBO"
"automl/HpBandSter" -> "automl/HPOBench"
"automl/HpBandSter" -> "zygmuntz/hyperband"
"automl/HpBandSter" -> "automl/BOAH"
"automl/HpBandSter" -> "automl/DEHB"
"automl/HpBandSter" -> "automl/nas_benchmarks" ["e"=1]
"automl/HpBandSter" -> "openml/automlbenchmark"
"automl/HpBandSter" -> "google-research/nasbench" ["e"=1]
"automl/HpBandSter" -> "dragonfly/dragonfly"
"automl/HpBandSter" -> "automl/nasbench301" ["e"=1]
"automl/HpBandSter" -> "hyperopt/hyperopt-sklearn"
"automl/HpBandSter" -> "automl/CAVE"
"automl/HpBandSter" -> "melodyguan/enas" ["e"=1]
"geopandas/scipy2018-geospatial-data" -> "jorisvandenbossche/geopandas-tutorial" ["e"=1]
"geopandas/scipy2018-geospatial-data" -> "pysal/scipy2019-intermediate-gds"
"geopandas/scipy2018-geospatial-data" -> "pysal/giddy" ["e"=1]
"geopandas/scipy2018-geospatial-data" -> "SocialDataSci/Geospatial_Data_with_Python"
"geopandas/scipy2018-geospatial-data" -> "pysal/esda" ["e"=1]
"geopandas/scipy2018-geospatial-data" -> "darribas/gds18"
"geopandas/scipy2018-geospatial-data" -> "scitools-classroom/scipy-2018-cartopy-tutorial"
"geopandas/scipy2018-geospatial-data" -> "ozak/georasters" ["e"=1]
"geopandas/scipy2018-geospatial-data" -> "kjordahl/SciPy-Tutorial-2015"
"geopandas/scipy2018-geospatial-data" -> "ljwolf/geopython"
"geopandas/scipy2018-geospatial-data" -> "gdsbook/book" ["e"=1]
"geopandas/scipy2018-geospatial-data" -> "geopandas/contextily" ["e"=1]
"koaning/scikit-lego" -> "koaning/human-learn"
"koaning/scikit-lego" -> "feature-engine/feature_engine"
"koaning/scikit-lego" -> "scikit-learn-contrib/MAPIE"
"koaning/scikit-lego" -> "skrub-data/skrub"
"koaning/scikit-lego" -> "koaning/doubtlab"
"koaning/scikit-lego" -> "koaning/embetter"
"koaning/scikit-lego" -> "scikit-learn-contrib/category_encoders"
"koaning/scikit-lego" -> "narwhals-dev/narwhals" ["e"=1]
"koaning/scikit-lego" -> "csinva/imodels"
"koaning/scikit-lego" -> "DistrictDataLabs/yellowbrick"
"koaning/scikit-lego" -> "bambinos/bambi" ["e"=1]
"koaning/scikit-lego" -> "pymc-labs/CausalPy" ["e"=1]
"koaning/scikit-lego" -> "probabl-ai/skore"
"koaning/scikit-lego" -> "mckinsey/causalnex" ["e"=1]
"koaning/scikit-lego" -> "Ekeany/Boruta-Shap"
"SeldonIO/alibi" -> "SeldonIO/alibi-detect"
"SeldonIO/alibi" -> "interpretml/DiCE"
"SeldonIO/alibi" -> "interpretml/interpret"
"SeldonIO/alibi" -> "Trusted-AI/AIX360"
"SeldonIO/alibi" -> "EthicalML/xai"
"SeldonIO/alibi" -> "ModelOriented/DALEX"
"SeldonIO/alibi" -> "pytorch/captum" ["e"=1]
"SeldonIO/alibi" -> "SeldonIO/seldon-core"
"SeldonIO/alibi" -> "MAIF/shapash"
"SeldonIO/alibi" -> "wangyongjie-ntu/Awesome-explainable-AI"
"SeldonIO/alibi" -> "marcotcr/anchor"
"SeldonIO/alibi" -> "jphall663/awesome-machine-learning-interpretability"
"SeldonIO/alibi" -> "DistrictDataLabs/yellowbrick"
"SeldonIO/alibi" -> "salesforce/OmniXAI"
"SeldonIO/alibi" -> "TeamHG-Memex/eli5"
"tkrabel/bamboolib" -> "tkrabel/edaviz"
"tkrabel/bamboolib" -> "8080labs/pyforest"
"tkrabel/bamboolib" -> "fbdesignpro/sweetviz"
"tkrabel/bamboolib" -> "adamerose/PandasGUI"
"tkrabel/bamboolib" -> "AutoViML/AutoViz"
"tkrabel/bamboolib" -> "quantopian/qgrid" ["e"=1]
"tkrabel/bamboolib" -> "8080labs/ppscore"
"tkrabel/bamboolib" -> "arunnbaba/pandas_ui"
"tkrabel/bamboolib" -> "sfu-db/dataprep"
"tkrabel/bamboolib" -> "lux-org/lux"
"tkrabel/bamboolib" -> "AutoViML/Auto_ViML"
"tkrabel/bamboolib" -> "chris1610/sidetable" ["e"=1]
"tkrabel/bamboolib" -> "man-group/dtale"
"tkrabel/bamboolib" -> "TeamHG-Memex/eli5"
"tkrabel/bamboolib" -> "pyjanitor-devs/pandas_flavor" ["e"=1]
"unit8co/darts" -> "sktime/sktime"
"unit8co/darts" -> "sktime/pytorch-forecasting"
"unit8co/darts" -> "facebookresearch/Kats"
"unit8co/darts" -> "awslabs/gluonts"
"unit8co/darts" -> "Nixtla/neuralforecast"
"unit8co/darts" -> "blue-yonder/tsfresh"
"unit8co/darts" -> "Nixtla/statsforecast"
"unit8co/darts" -> "timeseriesAI/tsai"
"unit8co/darts" -> "ourownstory/neural_prophet"
"unit8co/darts" -> "salesforce/Merlion"
"unit8co/darts" -> "pycaret/pycaret"
"unit8co/darts" -> "TDAmeritrade/stumpy"
"unit8co/darts" -> "thuml/Time-Series-Library" ["e"=1]
"unit8co/darts" -> "facebook/prophet"
"unit8co/darts" -> "tslearn-team/tslearn"
"skrub-data/skrub" -> "probabl-ai/skore"
"skrub-data/skrub" -> "koaning/scikit-lego"
"skrub-data/skrub" -> "scikit-learn-contrib/MAPIE"
"skrub-data/skrub" -> "feature-engine/feature_engine"
"skrub-data/skrub" -> "scikit-learn-contrib/category_encoders"
"skrub-data/skrub" -> "narwhals-dev/narwhals" ["e"=1]
"skrub-data/skrub" -> "koaning/embetter"
"skrub-data/skrub" -> "skops-dev/skops"
"skrub-data/skrub" -> "INRIA/scikit-learn-mooc"
"skrub-data/skrub" -> "csinva/imodels"
"skrub-data/skrub" -> "fairlearn/fairlearn"
"skrub-data/skrub" -> "Nixtla/statsforecast"
"skrub-data/skrub" -> "alteryx/evalml"
"skrub-data/skrub" -> "soda-inria/hazardous"
"skrub-data/skrub" -> "rasbt/mlxtend"
"microsoft/forecasting" -> "Azure/DeepLearningForTimeSeriesForecasting" ["e"=1]
"microsoft/forecasting" -> "Alro10/deep-learning-time-series" ["e"=1]
"microsoft/forecasting" -> "sktime/pytorch-forecasting"
"microsoft/forecasting" -> "awslabs/gluonts"
"microsoft/forecasting" -> "ourownstory/neural_prophet"
"microsoft/forecasting" -> "microsoft/nlp-recipes" ["e"=1]
"microsoft/forecasting" -> "sktime/sktime"
"microsoft/forecasting" -> "tslearn-team/tslearn"
"microsoft/forecasting" -> "uber/orbit"
"microsoft/forecasting" -> "blue-yonder/tsfresh"
"microsoft/forecasting" -> "alkaline-ml/pmdarima"
"microsoft/forecasting" -> "unit8co/darts"
"microsoft/forecasting" -> "cuge1995/awesome-time-series" ["e"=1]
"microsoft/forecasting" -> "uber/causalml" ["e"=1]
"microsoft/forecasting" -> "salesforce/Merlion"
"tensorflow/data-validation" -> "tensorflow/model-analysis"
"tensorflow/data-validation" -> "tensorflow/transform"
"tensorflow/data-validation" -> "tensorflow/tfx"
"tensorflow/data-validation" -> "tensorflow/metadata"
"tensorflow/data-validation" -> "google/ml-metadata"
"tensorflow/data-validation" -> "tensorflow/fairness-indicators"
"tensorflow/data-validation" -> "tensorflow/estimator"
"tensorflow/data-validation" -> "kubeflow-kale/kale"
"tensorflow/data-validation" -> "kubeflow/pipelines"
"tensorflow/data-validation" -> "tensorflow/io"
"tensorflow/data-validation" -> "tensorflow/model-optimization"
"tensorflow/data-validation" -> "HoloClean/holoclean" ["e"=1]
"tensorflow/data-validation" -> "tensorflow/cloud" ["e"=1]
"tensorflow/data-validation" -> "GoogleCloudPlatform/cloudml-samples" ["e"=1]
"tensorflow/hub" -> "tensorflow/datasets"
"tensorflow/hub" -> "tensorflow/serving" ["e"=1]
"tensorflow/hub" -> "tensorflow/tensorboard"
"tensorflow/hub" -> "tensorflow/docs"
"tensorflow/hub" -> "tensorflow/tpu" ["e"=1]
"tensorflow/hub" -> "tensorflow/tfx"
"tensorflow/hub" -> "tensorflow/addons"
"tensorflow/hub" -> "tensorflow/model-analysis"
"tensorflow/hub" -> "tensorflow/text"
"tensorflow/hub" -> "tensorflow/tensor2tensor" ["e"=1]
"tensorflow/hub" -> "tensorflow/transform"
"tensorflow/hub" -> "zihangdai/xlnet" ["e"=1]
"tensorflow/hub" -> "tensorflow/nmt" ["e"=1]
"tensorflow/hub" -> "tensorflow/probability"
"tensorflow/hub" -> "keras-team/autokeras"
"RedaOps/ann-visualizer" -> "mm-mansour/Fast-Pandas"
"RedaOps/ann-visualizer" -> "minimaxir/person-blocker"
"RedaOps/ann-visualizer" -> "dfouhey/caffe64"
"RedaOps/ann-visualizer" -> "dmlc/gluon-nlp" ["e"=1]
"RedaOps/ann-visualizer" -> "GauravBh1010tt/DeepLearn" ["e"=1]
"RedaOps/ann-visualizer" -> "mdbloice/Augmentor" ["e"=1]
"RedaOps/ann-visualizer" -> "IntelLabs/nlp-architect" ["e"=1]
"RedaOps/ann-visualizer" -> "stared/livelossplot" ["e"=1]
"RedaOps/ann-visualizer" -> "raghakot/keras-vis" ["e"=1]
"RedaOps/ann-visualizer" -> "rougier/neural-networks"
"RedaOps/ann-visualizer" -> "MrGemy95/Tensorflow-Project-Template" ["e"=1]
"RedaOps/ann-visualizer" -> "Cloud-CV/Fabrik" ["e"=1]
"RedaOps/ann-visualizer" -> "farizrahman4u/recurrentshop" ["e"=1]
"RedaOps/ann-visualizer" -> "sachinruk/deepschool.io" ["e"=1]
"RedaOps/ann-visualizer" -> "PAIR-code/facets"
"minimaxir/automl-gs" -> "d6t/d6tflow"
"minimaxir/automl-gs" -> "AxeldeRomblay/MLBox"
"minimaxir/automl-gs" -> "ClimbsRocks/auto_ml"
"minimaxir/automl-gs" -> "EpistasisLab/tpot"
"minimaxir/automl-gs" -> "ludwig-ai/ludwig"
"minimaxir/automl-gs" -> "tensorflow/adanet"
"minimaxir/automl-gs" -> "alteryx/featuretools"
"minimaxir/automl-gs" -> "automl/auto-sklearn"
"minimaxir/automl-gs" -> "mljar/mljar-supervised"
"minimaxir/automl-gs" -> "TeamHG-Memex/eli5"
"minimaxir/automl-gs" -> "dabl/dabl"
"minimaxir/automl-gs" -> "firmai/industry-machine-learning" ["e"=1]
"minimaxir/automl-gs" -> "instacart/lore"
"minimaxir/automl-gs" -> "tkrabel/bamboolib"
"minimaxir/automl-gs" -> "keras-team/keras-tuner"
"facebookresearch/nevergrad" -> "pytorch/botorch"
"facebookresearch/nevergrad" -> "cornellius-gp/gpytorch"
"facebookresearch/nevergrad" -> "facebook/Ax"
"facebookresearch/nevergrad" -> "pyro-ppl/pyro"
"facebookresearch/nevergrad" -> "scikit-optimize/scikit-optimize"
"facebookresearch/nevergrad" -> "facebookresearch/ReAgent" ["e"=1]
"facebookresearch/nevergrad" -> "HIPS/autograd"
"facebookresearch/nevergrad" -> "google-deepmind/trfl" ["e"=1]
"facebookresearch/nevergrad" -> "rtqichen/torchdiffeq" ["e"=1]
"facebookresearch/nevergrad" -> "facebookresearch/pytext" ["e"=1]
"facebookresearch/nevergrad" -> "arogozhnikov/einops" ["e"=1]
"facebookresearch/nevergrad" -> "hyperopt/hyperopt"
"facebookresearch/nevergrad" -> "google/flax" ["e"=1]
"facebookresearch/nevergrad" -> "bayesian-optimization/BayesianOptimization"
"facebookresearch/nevergrad" -> "google-deepmind/dm-haiku" ["e"=1]
"onnx/sklearn-onnx" -> "onnx/onnxmltools" ["e"=1]
"onnx/sklearn-onnx" -> "jpmml/sklearn2pmml"
"onnx/sklearn-onnx" -> "nok/sklearn-porter"
"onnx/sklearn-onnx" -> "onnx/keras-onnx" ["e"=1]
"onnx/sklearn-onnx" -> "onnx/tensorflow-onnx" ["e"=1]
"onnx/sklearn-onnx" -> "sdpython/mlprodict"
"tensorflow/community" -> "tensorflow/docs"
"tensorflow/community" -> "tensorflow/addons"
"tensorflow/community" -> "tensorflow/runtime"
"tensorflow/community" -> "tensorflow/tfx"
"tensorflow/community" -> "tensorflow/io"
"tensorflow/community" -> "tensorflow/benchmarks" ["e"=1]
"tensorflow/community" -> "tensorflow/custom-op"
"tensorflow/community" -> "tensorflow/mlir" ["e"=1]
"tensorflow/community" -> "tensorflow/recommenders-addons" ["e"=1]
"tensorflow/community" -> "tensorflow/text"
"tensorflow/community" -> "NVIDIA-Merlin/HugeCTR" ["e"=1]
"tensorflow/community" -> "tensorflow/transform"
"tensorflow/community" -> "tensorflow/serving" ["e"=1]
"tensorflow/community" -> "tensorflow/datasets"
"tensorflow/community" -> "tensorflow/estimator"
"davified/clean-code-ml" -> "davified/docker-python-template"
"davified/clean-code-ml" -> "zedr/clean-code-python" ["e"=1]
"davified/clean-code-ml" -> "ThoughtWorksInc/cd4ml-workshop"
"davified/clean-code-ml" -> "uber/orbit"
"davified/clean-code-ml" -> "koaning/scikit-lego"
"davified/clean-code-ml" -> "FilippoBovo/production-data-science"
"davified/clean-code-ml" -> "ThoughtWorksInc/CD4ML-Scenarios"
"davified/clean-code-ml" -> "uber/manifold"
"davified/clean-code-ml" -> "Building-ML-Pipelines/building-machine-learning-pipelines" ["e"=1]
"davified/clean-code-ml" -> "SeldonIO/alibi"
"davified/clean-code-ml" -> "msaroufim/ml-design-patterns"
"davified/clean-code-ml" -> "microsoft/forecasting"
"davified/clean-code-ml" -> "drivendataorg/cookiecutter-data-science"
"davified/clean-code-ml" -> "justmarkham/scikit-learn-tips" ["e"=1]
"davified/clean-code-ml" -> "abiodunjames/Awesome-Clean-Code-Resources" ["e"=1]
"zhaokg/Rbeast" -> "bfast2/geeBfastMonitor" ["e"=1]
"zhaokg/Rbeast" -> "deepcharles/ruptures"
"zhaokg/Rbeast" -> "ec-jrc/nrt"
"kubeflow/pipelines" -> "kubeflow/kubeflow"
"kubeflow/pipelines" -> "kubeflow/katib"
"kubeflow/pipelines" -> "kserve/kserve"
"kubeflow/pipelines" -> "kubeflow/examples" ["e"=1]
"kubeflow/pipelines" -> "tensorflow/tfx"
"kubeflow/pipelines" -> "kubeflow/trainer" ["e"=1]
"kubeflow/pipelines" -> "kubeflow/manifests"
"kubeflow/pipelines" -> "SeldonIO/seldon-core"
"kubeflow/pipelines" -> "kubeflow-kale/kale"
"kubeflow/pipelines" -> "feast-dev/feast"
"kubeflow/pipelines" -> "google/ml-metadata"
"kubeflow/pipelines" -> "mlflow/mlflow"
"kubeflow/pipelines" -> "volcano-sh/volcano" ["e"=1]
"kubeflow/pipelines" -> "GoogleCloudPlatform/mlops-on-gcp" ["e"=1]
"kubeflow/pipelines" -> "flyteorg/flyte"
"cerlymarco/MEDIUM_NoteBook" -> "cerlymarco/tsmoothie"
"cerlymarco/MEDIUM_NoteBook" -> "awslabs/gluonts"
"cerlymarco/MEDIUM_NoteBook" -> "Alro10/deep-learning-time-series" ["e"=1]
"cerlymarco/MEDIUM_NoteBook" -> "sktime/pytorch-forecasting"
"cerlymarco/MEDIUM_NoteBook" -> "rob-med/awesome-TS-anomaly-detection" ["e"=1]
"cerlymarco/MEDIUM_NoteBook" -> "Nixtla/neuralforecast"
"cerlymarco/MEDIUM_NoteBook" -> "timeseriesAI/tsai"
"cerlymarco/MEDIUM_NoteBook" -> "lin-shuyu/VAE-LSTM-for-anomaly-detection" ["e"=1]
"cerlymarco/MEDIUM_NoteBook" -> "salesforce/Merlion"
"cerlymarco/MEDIUM_NoteBook" -> "AIStream-Peelout/flow-forecast" ["e"=1]
"cerlymarco/MEDIUM_NoteBook" -> "unit8co/darts"
"cerlymarco/MEDIUM_NoteBook" -> "sktime/sktime"
"cerlymarco/MEDIUM_NoteBook" -> "zalandoresearch/pytorch-ts" ["e"=1]
"cerlymarco/MEDIUM_NoteBook" -> "numenta/NAB" ["e"=1]
"cerlymarco/MEDIUM_NoteBook" -> "johannfaouzi/pyts" ["e"=1]
"SeldonIO/seldon-core" -> "kserve/kserve"
"SeldonIO/seldon-core" -> "kubeflow/kubeflow"
"SeldonIO/seldon-core" -> "bentoml/BentoML"
"SeldonIO/seldon-core" -> "feast-dev/feast"
"SeldonIO/seldon-core" -> "mlflow/mlflow"
"SeldonIO/seldon-core" -> "polyaxon/polyaxon"
"SeldonIO/seldon-core" -> "SeldonIO/alibi"
"SeldonIO/seldon-core" -> "pachyderm/pachyderm"
"SeldonIO/seldon-core" -> "kubeflow/pipelines"
"SeldonIO/seldon-core" -> "SeldonIO/alibi-detect"
"SeldonIO/seldon-core" -> "Netflix/metaflow"
"SeldonIO/seldon-core" -> "SeldonIO/MLServer"
"SeldonIO/seldon-core" -> "kubeflow/katib"
"SeldonIO/seldon-core" -> "iterative/dvc"
"SeldonIO/seldon-core" -> "evidentlyai/evidently"
"tensorflow/probability" -> "blei-lab/edward"
"tensorflow/probability" -> "pyro-ppl/pyro"
"tensorflow/probability" -> "pymc-devs/pymc"
"tensorflow/probability" -> "pyro-ppl/numpyro" ["e"=1]
"tensorflow/probability" -> "pymc-devs/pymc4" ["e"=1]
"tensorflow/probability" -> "GPflow/GPflow"
"tensorflow/probability" -> "arviz-devs/arviz" ["e"=1]
"tensorflow/probability" -> "cornellius-gp/gpytorch"
"tensorflow/probability" -> "CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers" ["e"=1]
"tensorflow/probability" -> "stan-dev/stan" ["e"=1]
"tensorflow/probability" -> "HIPS/autograd"
"tensorflow/probability" -> "krasserm/bayesian-machine-learning"
"tensorflow/probability" -> "google-deepmind/sonnet" ["e"=1]
"tensorflow/probability" -> "thu-ml/zhusuan"
"tensorflow/probability" -> "tensorflow/agents" ["e"=1]
"Trusted-AI/AIF360" -> "Trusted-AI/AIX360"
"Trusted-AI/AIF360" -> "fairlearn/fairlearn"
"Trusted-AI/AIF360" -> "dssg/aequitas"
"Trusted-AI/AIF360" -> "Trusted-AI/adversarial-robustness-toolbox" ["e"=1]
"Trusted-AI/AIF360" -> "interpretml/interpret"
"Trusted-AI/AIF360" -> "propublica/compas-analysis"
"Trusted-AI/AIF360" -> "mbilalzafar/fair-classification"
"Trusted-AI/AIF360" -> "jphall663/awesome-machine-learning-interpretability"
"Trusted-AI/AIF360" -> "SeldonIO/alibi"
"Trusted-AI/AIF360" -> "datamllab/awesome-fairness-in-ai"
"Trusted-AI/AIF360" -> "adebayoj/fairml"
"Trusted-AI/AIF360" -> "interpretml/DiCE"
"Trusted-AI/AIF360" -> "algofairness/fairness-comparison"
"Trusted-AI/AIF360" -> "PAIR-code/what-if-tool"
"Trusted-AI/AIF360" -> "microsoft/responsible-ai-toolbox"
"Trusted-AI/AIX360" -> "Trusted-AI/AIF360"
"Trusted-AI/AIX360" -> "SeldonIO/alibi"
"Trusted-AI/AIX360" -> "interpretml/DiCE"
"Trusted-AI/AIX360" -> "interpretml/interpret"
"Trusted-AI/AIX360" -> "EthicalML/xai"
"Trusted-AI/AIX360" -> "wangyongjie-ntu/Awesome-explainable-AI"
"Trusted-AI/AIX360" -> "jphall663/awesome-machine-learning-interpretability"
"Trusted-AI/AIX360" -> "ModelOriented/DALEX"
"Trusted-AI/AIX360" -> "marcotcr/anchor"
"Trusted-AI/AIX360" -> "salesforce/OmniXAI"
"Trusted-AI/AIX360" -> "pytorch/captum" ["e"=1]
"Trusted-AI/AIX360" -> "Trusted-AI/adversarial-robustness-toolbox" ["e"=1]
"Trusted-AI/AIX360" -> "interpretml/interpret-community"
"Trusted-AI/AIX360" -> "lopusz/awesome-interpretable-machine-learning"
"Trusted-AI/AIX360" -> "IBM/UQ360"
"lmcinnes/pynndescent" -> "yahoojapan/NGT" ["e"=1]
"lmcinnes/pynndescent" -> "aaalgo/kgraph" ["e"=1]
"lmcinnes/pynndescent" -> "lmcinnes/umap"
"lmcinnes/pynndescent" -> "cvxgrp/pymde"
"lmcinnes/pynndescent" -> "YingfanWang/PaCMAP"
"lmcinnes/pynndescent" -> "scikit-learn-contrib/hdbscan"
"lmcinnes/pynndescent" -> "erikbern/ann-benchmarks" ["e"=1]
"lmcinnes/pynndescent" -> "ZJULearning/efanna" ["e"=1]
"lmcinnes/pynndescent" -> "ZJULearning/nsg" ["e"=1]
"lmcinnes/pynndescent" -> "koaning/embetter"
"lmcinnes/pynndescent" -> "hyungkwonko/umato"
"lmcinnes/pynndescent" -> "eamid/trimap"
"lmcinnes/pynndescent" -> "harsha-simhadri/big-ann-benchmarks" ["e"=1]
"lmcinnes/pynndescent" -> "nmslib/nmslib" ["e"=1]
"lmcinnes/pynndescent" -> "KrishnaswamyLab/PHATE" ["e"=1]
"clearml/clearml-server" -> "clearml/clearml-agent"
"clearml/clearml-server" -> "allegroai/trains-jupyter-plugin"
"clearml/clearml-server" -> "allegroai/clearml-pycharm-plugin"
"clearml/clearml-server" -> "clearml/clearml-serving"
"clearml/clearml-server" -> "clearml/clearml-web"
"clearml/clearml-server" -> "allegroai/clearml-server-helm"
"clearml/clearml-server" -> "allegroai/clearml-server-k8s"
"clearml/clearml-server" -> "clearml/clearml"
"clearml/clearml-server" -> "clearml/clearml-helm-charts"
"pyjanitor-devs/pyjanitor" -> "pyjanitor-devs/pandas_flavor" ["e"=1]
"pyjanitor-devs/pyjanitor" -> "unionai-oss/pandera"
"pyjanitor-devs/pyjanitor" -> "has2k1/plotnine" ["e"=1]
"pyjanitor-devs/pyjanitor" -> "machow/siuba" ["e"=1]
"pyjanitor-devs/pyjanitor" -> "raphaelvallat/pingouin"
"pyjanitor-devs/pyjanitor" -> "holoviz/hvplot" ["e"=1]
"pyjanitor-devs/pyjanitor" -> "posit-dev/great-tables" ["e"=1]
"pyjanitor-devs/pyjanitor" -> "koaning/scikit-lego"
"pyjanitor-devs/pyjanitor" -> "kieferk/dfply" ["e"=1]
"pyjanitor-devs/pyjanitor" -> "fugue-project/fugue" ["e"=1]
"pyjanitor-devs/pyjanitor" -> "bambinos/bambi" ["e"=1]
"pyjanitor-devs/pyjanitor" -> "feature-engine/feature_engine"
"pyjanitor-devs/pyjanitor" -> "sfirke/janitor" ["e"=1]
"pyjanitor-devs/pyjanitor" -> "pdpipe/pdpipe"
"pyjanitor-devs/pyjanitor" -> "sfu-db/dataprep"
"adamerose/PandasGUI" -> "man-group/dtale"
"adamerose/PandasGUI" -> "fbdesignpro/sweetviz"
"adamerose/PandasGUI" -> "lux-org/lux"
"adamerose/PandasGUI" -> "quantopian/qgrid" ["e"=1]
"adamerose/PandasGUI" -> "ydataai/ydata-profiling"
"adamerose/PandasGUI" -> "modin-project/modin"
"adamerose/PandasGUI" -> "vaexio/vaex"
"adamerose/PandasGUI" -> "MAIF/shapash"
"adamerose/PandasGUI" -> "voila-dashboards/voila" ["e"=1]
"adamerose/PandasGUI" -> "tkrabel/bamboolib"
"adamerose/PandasGUI" -> "sfu-db/dataprep"
"adamerose/PandasGUI" -> "oegedijk/explainerdashboard"
"adamerose/PandasGUI" -> "vega/altair" ["e"=1]
"adamerose/PandasGUI" -> "santosjorge/cufflinks"
"adamerose/PandasGUI" -> "DistrictDataLabs/yellowbrick"
"hildensia/bayesian_changepoint_detection" -> "deepcharles/ruptures"
"hildensia/bayesian_changepoint_detection" -> "amanahuja/change-detection-tutorial"
"hildensia/bayesian_changepoint_detection" -> "dtolpin/bocd"
"hildensia/bayesian_changepoint_detection" -> "gwgundersen/bocd"
"hildensia/bayesian_changepoint_detection" -> "shunsukeaihara/changefinder"
"hildensia/bayesian_changepoint_detection" -> "alan-turing-institute/TCPD"
"hildensia/bayesian_changepoint_detection" -> "alan-turing-institute/TCPDBench"
"hildensia/bayesian_changepoint_detection" -> "ruipgil/changepy"
"hildensia/bayesian_changepoint_detection" -> "y-bar/bocd"
"hildensia/bayesian_changepoint_detection" -> "codyrioux/pydata2015seattle"
"hildensia/bayesian_changepoint_detection" -> "epfl-lasa/changepoint-detection"
"hildensia/bayesian_changepoint_detection" -> "chenhaotian/Changepoints"
"hildensia/bayesian_changepoint_detection" -> "zhaokg/Rbeast"
"hildensia/bayesian_changepoint_detection" -> "welch/seasonal"
"hildensia/bayesian_changepoint_detection" -> "zillow/luminaire" ["e"=1]
"microsoft/pai" -> "bytedance/byteps" ["e"=1]
"microsoft/pai" -> "microsoft/nni"
"microsoft/pai" -> "AliyunContainerService/gpushare-scheduler-extender" ["e"=1]
"microsoft/pai" -> "microsoft/hivedscheduler" ["e"=1]
"microsoft/pai" -> "kubeflow/kubeflow"
"microsoft/pai" -> "horovod/horovod"
"microsoft/pai" -> "volcano-sh/volcano" ["e"=1]
"microsoft/pai" -> "determined-ai/determined"
"microsoft/pai" -> "microsoft/frameworkcontroller" ["e"=1]
"microsoft/pai" -> "polyaxon/polyaxon"
"microsoft/pai" -> "NVIDIA/k8s-device-plugin" ["e"=1]
"microsoft/pai" -> "kubeflow/trainer" ["e"=1]
"microsoft/pai" -> "kubeflow/katib"
"microsoft/pai" -> "sql-machine-learning/elasticdl" ["e"=1]
"microsoft/pai" -> "NVIDIA/nccl" ["e"=1]
"marcotcr/anchor" -> "oracle/skater"
"marcotcr/anchor" -> "marcotcr/anchor-experiments"
"marcotcr/anchor" -> "SeldonIO/alibi"
"marcotcr/anchor" -> "Trusted-AI/AIX360"
"marcotcr/anchor" -> "interpretml/DiCE"
"marcotcr/anchor" -> "h2oai/mli-resources"
"marcotcr/anchor" -> "marcotcr/lime"
"marcotcr/anchor" -> "riccotti/LORE"
"marcotcr/anchor" -> "TeamHG-Memex/eli5"
"marcotcr/anchor" -> "christophM/rulefit"
"marcotcr/anchor" -> "ModelOriented/DALEX"
"marcotcr/anchor" -> "pbiecek/xai_resources"
"marcotcr/anchor" -> "marcoancona/DeepExplain" ["e"=1]
"marcotcr/anchor" -> "tmadl/sklearn-expertsys"
"marcotcr/anchor" -> "marcotcr/lime-experiments"
"interpretml/DiCE" -> "SeldonIO/alibi"
"interpretml/DiCE" -> "interpretml/interpret-community"
"interpretml/DiCE" -> "interpretml/interpret"
"interpretml/DiCE" -> "Trusted-AI/AIX360"
"interpretml/DiCE" -> "ModelOriented/DALEX"
"interpretml/DiCE" -> "csinva/imodels"
"interpretml/DiCE" -> "mckinsey/causalnex" ["e"=1]
"interpretml/DiCE" -> "charmlab/mace"
"interpretml/DiCE" -> "py-why/dowhy" ["e"=1]
"interpretml/DiCE" -> "py-why/EconML" ["e"=1]
"interpretml/DiCE" -> "marcotcr/anchor"
"interpretml/DiCE" -> "EthicalML/xai"
"interpretml/DiCE" -> "wangyongjie-ntu/Awesome-explainable-AI"
"interpretml/DiCE" -> "uber/causalml" ["e"=1]
"interpretml/DiCE" -> "fairlearn/fairlearn"
"arvkevi/kneed" -> "lmcinnes/pynndescent"
"arvkevi/kneed" -> "scikit-learn-contrib/boruta_py"
"arvkevi/kneed" -> "feature-engine/feature_engine"
"arvkevi/kneed" -> "scikit-learn-contrib/MAPIE"
"arvkevi/kneed" -> "Ekeany/Boruta-Shap"
"arvkevi/kneed" -> "scikit-learn-contrib/hdbscan"
"arvkevi/kneed" -> "zillow/luminaire" ["e"=1]
"arvkevi/kneed" -> "deepcharles/ruptures"
"arvkevi/kneed" -> "KrishnaswamyLab/PHATE" ["e"=1]
"arvkevi/kneed" -> "scikit-learn-contrib/category_encoders"
"arvkevi/kneed" -> "cod3licious/autofeat"
"arvkevi/kneed" -> "scverse/muon" ["e"=1]
"arvkevi/kneed" -> "linkedin/greykite"
"arvkevi/kneed" -> "vtraag/leidenalg" ["e"=1]
"arvkevi/kneed" -> "DistrictDataLabs/yellowbrick"
"tensorflow/addons" -> "kpe/bert-for-tf2" ["e"=1]
"tensorflow/addons" -> "tensorflow/io"
"tensorflow/addons" -> "tensorflow/community"
"tensorflow/addons" -> "tensorflow/tfx"
"tensorflow/addons" -> "tensorflow/mesh"
"tensorflow/addons" -> "keras-team/keras-tuner"
"tensorflow/addons" -> "tensorflow/datasets"
"tensorflow/addons" -> "tensorflow/model-optimization"
"tensorflow/addons" -> "keras-team/keras-contrib" ["e"=1]
"tensorflow/addons" -> "tensorflow/text"
"tensorflow/addons" -> "CyberZHG/keras-bert" ["e"=1]
"tensorflow/addons" -> "tensorflow/hub"
"tensorflow/addons" -> "tensorflow/runtime"
"tensorflow/addons" -> "tensorflow/probability"
"tensorflow/addons" -> "tensorflow/tensorboard"
"google/ml-metadata" -> "tensorflow/tfx"
"google/ml-metadata" -> "tensorflow/data-validation"
"google/ml-metadata" -> "kubeflow/model-registry"
"google/ml-metadata" -> "kubeflow/metadata"
"google/ml-metadata" -> "kubeflow/pipelines"
"google/ml-metadata" -> "kubeflow/katib"
"google/ml-metadata" -> "tensorflow/tfx-addons"
"google/ml-metadata" -> "kubeflow-kale/kale"
"google/ml-metadata" -> "tensorflow/model-card-toolkit"
"google/ml-metadata" -> "logicalclocks/hopsworks"
"google/ml-metadata" -> "kubeflow/trainer" ["e"=1]
"google/ml-metadata" -> "kserve/kserve"
"google/ml-metadata" -> "VertaAI/modeldb"
"google/ml-metadata" -> "kubeflow/arena" ["e"=1]
"kubeflow-kale/kale" -> "kubeflow/katib"
"kubeflow-kale/kale" -> "kubeflow/manifests"
"kubeflow-kale/kale" -> "kubeflow/pipelines"
"kubeflow-kale/kale" -> "kubeflow/fairing"
"kubeflow-kale/kale" -> "elyra-ai/elyra"
"kubeflow-kale/kale" -> "kserve/kserve"
"kubeflow-kale/kale" -> "spotify/terraform-gke-kubeflow-cluster"
"kubeflow-kale/kale" -> "kubeflow/kfp-tekton"
"kubeflow-kale/kale" -> "google/ml-metadata"
"kubeflow-kale/kale" -> "intro-to-ml-with-kubeflow/intro-to-ml-with-kubeflow-examples" ["e"=1]
"kubeflow-kale/kale" -> "mlrun/mlrun"
"kubeflow-kale/kale" -> "kubeflow/examples" ["e"=1]
"kubeflow-kale/kale" -> "kubeflow-kale/examples"
"kubeflow-kale/kale" -> "provectus/sak-kubeflow" ["e"=1]
"kubeflow-kale/kale" -> "tensorflow/data-validation"
"WillKoehrsen/recurrent-neural-networks" -> "WillKoehrsen/taxi-fare"
"WillKoehrsen/recurrent-neural-networks" -> "DOsinga/deep_learning_cookbook"
"salesforce/TransmogrifAI" -> "combust/mleap" ["e"=1]
"salesforce/TransmogrifAI" -> "tensorflow/adanet"
"salesforce/TransmogrifAI" -> "alteryx/featuretools"
"salesforce/TransmogrifAI" -> "AxeldeRomblay/MLBox"
"salesforce/TransmogrifAI" -> "tensorflow/model-analysis"
"salesforce/TransmogrifAI" -> "yahoo/TensorFlowOnSpark" ["e"=1]
"salesforce/TransmogrifAI" -> "microsoft/SynapseML" ["e"=1]
"salesforce/TransmogrifAI" -> "ClimbsRocks/auto_ml"
"salesforce/TransmogrifAI" -> "h2oai/h2o-3"
"salesforce/TransmogrifAI" -> "EpistasisLab/tpot"
"salesforce/TransmogrifAI" -> "databricks/koalas" ["e"=1]
"salesforce/TransmogrifAI" -> "ucbrise/clipper"
"salesforce/TransmogrifAI" -> "keras-team/autokeras"
"salesforce/TransmogrifAI" -> "byzer-org/byzer-lang" ["e"=1]
"salesforce/TransmogrifAI" -> "oracle/graphpipe"
"nicodv/kmodes" -> "MaxHalford/prince"
"nicodv/kmodes" -> "scikit-learn-contrib/boruta_py"
"nicodv/kmodes" -> "scikit-learn-contrib/hdbscan"
"nicodv/kmodes" -> "scikit-learn-contrib/category_encoders"
"nicodv/kmodes" -> "reiinakano/scikit-plot"
"nicodv/kmodes" -> "rasbt/mlxtend"
"nicodv/kmodes" -> "scikit-learn-contrib/sklearn-pandas"
"nicodv/kmodes" -> "DistrictDataLabs/yellowbrick"
"nicodv/kmodes" -> "scikit-optimize/scikit-optimize"
"nicodv/kmodes" -> "TeamHG-Memex/eli5"
"nicodv/kmodes" -> "hyperopt/hyperopt-sklearn"
"nicodv/kmodes" -> "scikit-learn-contrib/imbalanced-learn"
"nicodv/kmodes" -> "annoviko/pyclustering"
"nicodv/kmodes" -> "bmabey/pyLDAvis" ["e"=1]
"nicodv/kmodes" -> "Ekeany/Boruta-Shap"
"Yelp/MOE" -> "HIPS/Spearmint"
"Yelp/MOE" -> "JasperSnoek/spearmint"
"Yelp/MOE" -> "scikit-optimize/scikit-optimize"
"Yelp/MOE" -> "SheffieldML/GPyOpt"
"Yelp/MOE" -> "automl/SMAC3"
"Yelp/MOE" -> "rmcantin/bayesopt"
"Yelp/MOE" -> "wujian16/Cornell-MOE"
"Yelp/MOE" -> "claesenm/optunity"
"Yelp/MOE" -> "automl/RoBO"
"Yelp/MOE" -> "jaberg/hyperopt"
"Yelp/MOE" -> "hyperopt/hyperopt"
"Yelp/MOE" -> "mwhoffman/pybo"
"Yelp/MOE" -> "hyperopt/hyperopt-sklearn"
"Yelp/MOE" -> "reiinakano/xcessiv"
"Yelp/MOE" -> "blei-lab/edward"
"jbrownlee/Datasets" -> "lmoroney/dlaicourse"
"jbrownlee/Datasets" -> "tensorflow/datasets"
"jbrownlee/Datasets" -> "keras-team/keras-preprocessing"
"jbrownlee/Datasets" -> "selva86/datasets"
"jbrownlee/Datasets" -> "justmarkham/scikit-learn-tips" ["e"=1]
"jbrownlee/Datasets" -> "tirthajyoti/Deep-learning-with-Python" ["e"=1]
"jbrownlee/Datasets" -> "INRIA/scikit-learn-mooc"
"jbrownlee/Datasets" -> "https-deeplearning-ai/tensorflow-1-public"
"jbrownlee/Datasets" -> "https-deeplearning-ai/tensorflow-2-public"
"jbrownlee/Datasets" -> "jbrownlee/Books"
"jbrownlee/Datasets" -> "8080labs/pyforest"
"jbrownlee/Datasets" -> "ibrahimjelliti/Deeplearning.ai-Natural-Language-Processing-Specialization" ["e"=1]
"jbrownlee/Datasets" -> "cerlymarco/MEDIUM_NoteBook"
"jbrownlee/Datasets" -> "tirthajyoti/Machine-Learning-with-Python" ["e"=1]
"jbrownlee/Datasets" -> "PacktPublishing/Practical-Time-Series-Analysis" ["e"=1]
"romeokienzler/TensorFlow" -> "claimed-framework/component-library"
"romeokienzler/TensorFlow" -> "jupyter/jupyter" ["e"=1]
"romeokienzler/TensorFlow" -> "romeokienzler/coursera"
"romeokienzler/TensorFlow" -> "czy36mengfei/tensorflow2_tutorials_chinese" ["e"=1]
"romeokienzler/TensorFlow" -> "IBM/MAX-Object-Detector"
"romeokienzler/TensorFlow" -> "tensorflow/examples"
"romeokienzler/TensorFlow" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"romeokienzler/TensorFlow" -> "deeplearningzerotoall/PyTorch" ["e"=1]
"romeokienzler/TensorFlow" -> "lyhue1991/eat_tensorflow2_in_30_days" ["e"=1]
"romeokienzler/TensorFlow" -> "tensorflow/docs"
"romeokienzler/TensorFlow" -> "Tanu-N-Prabhu/Python" ["e"=1]
"feature-engine/feature_engine" -> "koaning/scikit-lego"
"feature-engine/feature_engine" -> "scikit-learn-contrib/MAPIE"
"feature-engine/feature_engine" -> "scikit-learn-contrib/category_encoders"
"feature-engine/feature_engine" -> "csinva/imodels"
"feature-engine/feature_engine" -> "alteryx/evalml"
"feature-engine/feature_engine" -> "AutoViML/featurewiz"
"feature-engine/feature_engine" -> "scikit-learn-contrib/boruta_py"
"feature-engine/feature_engine" -> "DistrictDataLabs/yellowbrick"
"feature-engine/feature_engine" -> "cod3licious/autofeat"
"feature-engine/feature_engine" -> "rasbt/mlxtend"
"feature-engine/feature_engine" -> "Ekeany/Boruta-Shap"
"feature-engine/feature_engine" -> "alteryx/featuretools"
"feature-engine/feature_engine" -> "skrub-data/skrub"
"feature-engine/feature_engine" -> "oegedijk/explainerdashboard"
"feature-engine/feature_engine" -> "Nixtla/mlforecast"
"TDAmeritrade/stumpy" -> "tslearn-team/tslearn"
"TDAmeritrade/stumpy" -> "blue-yonder/tsfresh"
"TDAmeritrade/stumpy" -> "sktime/sktime"
"TDAmeritrade/stumpy" -> "unit8co/darts"
"TDAmeritrade/stumpy" -> "johannfaouzi/pyts" ["e"=1]
"TDAmeritrade/stumpy" -> "Nixtla/statsforecast"
"TDAmeritrade/stumpy" -> "target/matrixprofile-ts" ["e"=1]
"TDAmeritrade/stumpy" -> "interpretml/interpret"
"TDAmeritrade/stumpy" -> "facebookresearch/Kats"
"TDAmeritrade/stumpy" -> "awslabs/gluonts"
"TDAmeritrade/stumpy" -> "matrix-profile-foundation/matrixprofile" ["e"=1]
"TDAmeritrade/stumpy" -> "uber/orbit"
"TDAmeritrade/stumpy" -> "ourownstory/neural_prophet"
"TDAmeritrade/stumpy" -> "salesforce/Merlion"
"TDAmeritrade/stumpy" -> "linkedin/greykite"
"EthicalML/xai" -> "pbiecek/xai_resources"
"EthicalML/xai" -> "SeldonIO/alibi"
"EthicalML/xai" -> "Trusted-AI/AIX360"
"EthicalML/xai" -> "wangyongjie-ntu/Awesome-explainable-AI"
"EthicalML/xai" -> "jphall663/awesome-machine-learning-interpretability"
"EthicalML/xai" -> "EthicalML/awesome-artificial-intelligence-regulation"
"EthicalML/xai" -> "lopusz/awesome-interpretable-machine-learning"
"EthicalML/xai" -> "ModelOriented/DALEX"
"EthicalML/xai" -> "explainX/explainx"
"EthicalML/xai" -> "interpretml/DiCE"
"EthicalML/xai" -> "jphall663/interpretable_machine_learning_with_python"
"EthicalML/xai" -> "h2oai/mli-resources"
"EthicalML/xai" -> "interpretml/interpret"
"EthicalML/xai" -> "dssg/aequitas"
"EthicalML/xai" -> "oracle/skater"
"manifoldai/merf" -> "RGF-team/rgf" ["e"=1]
"manifoldai/merf" -> "fabsig/GPBoost"
"manifoldai/merf" -> "randel/MixRF"
"catboost/tutorials" -> "catboost/catboost"
"catboost/tutorials" -> "scikit-learn-contrib/boruta_py"
"catboost/tutorials" -> "catboost/benchmarks"
"catboost/tutorials" -> "sberbank-ai-lab/LightAutoML" ["e"=1]
"catboost/tutorials" -> "maks-sh/scikit-uplift" ["e"=1]
"catboost/tutorials" -> "TeamHG-Memex/eli5"
"catboost/tutorials" -> "catboost/catboost-viewer"
"catboost/tutorials" -> "stanfordmlgroup/ngboost"
"catboost/tutorials" -> "DLSchool/deep-learning-school" ["e"=1]
"catboost/tutorials" -> "yandexdataschool/Practical_DL" ["e"=1]
"catboost/tutorials" -> "esokolov/ml-course-hse" ["e"=1]
"catboost/tutorials" -> "dreamquark-ai/tabnet" ["e"=1]
"catboost/tutorials" -> "MAIF/shapash"
"catboost/tutorials" -> "scikit-learn-contrib/category_encoders"
"catboost/tutorials" -> "rasbt/mlxtend"
"SimonBlanke/Hyperactive" -> "SimonBlanke/Gradient-Free-Optimizers" ["e"=1]
"SimonBlanke/Hyperactive" -> "Neuraxio/Neuraxle"
"SimonBlanke/Hyperactive" -> "carlomazzaferro/scikit-hts"
"SimonBlanke/Hyperactive" -> "sohaha/naiveui-admin-template" ["e"=1]
"SimonBlanke/Hyperactive" -> "cod3licious/autofeat"
"alteryx/evalml" -> "alteryx/compose"
"alteryx/evalml" -> "alteryx/woodwork"
"alteryx/evalml" -> "AutoViML/Auto_ViML"
"alteryx/evalml" -> "feature-engine/feature_engine"
"alteryx/evalml" -> "AutoViML/featurewiz"
"alteryx/evalml" -> "cod3licious/autofeat"
"alteryx/evalml" -> "mljar/mljar-supervised"
"alteryx/evalml" -> "koaning/scikit-lego"
"alteryx/evalml" -> "alteryx/featuretools"
"alteryx/evalml" -> "microsoft/FLAML"
"alteryx/evalml" -> "AutoViML/Auto_TS"
"alteryx/evalml" -> "scikit-learn-contrib/MAPIE"
"alteryx/evalml" -> "cerlymarco/shap-hypetune"
"alteryx/evalml" -> "hyperopt/hyperopt-sklearn"
"alteryx/evalml" -> "csinva/imodels"
"keras-team/keras-preprocessing" -> "keras-team/keras-applications" ["e"=1]
"keras-team/keras-preprocessing" -> "lmoroney/dlaicourse"
"keras-team/keras-preprocessing" -> "tensorflow/datasets"
"keras-team/keras-preprocessing" -> "keras-team/keras-contrib" ["e"=1]
"keras-team/keras-preprocessing" -> "keras-team/keras-tuner"
"keras-team/keras-preprocessing" -> "Yoast/YoastSEO.js"
"keras-team/keras-preprocessing" -> "autonomio/talos"
"keras-team/keras-preprocessing" -> "jbrownlee/Datasets"
"keras-team/keras-preprocessing" -> "keras-team/governance"
"keras-team/keras-preprocessing" -> "ashishpatel26/Tensorflow-in-practise-Specialization" ["e"=1]
"keras-team/keras-preprocessing" -> "netrack/keras-metrics" ["e"=1]
"keras-team/keras-preprocessing" -> "keras-team/autokeras"
"keras-team/keras-preprocessing" -> "tensorflow/hub"
"keras-team/keras-preprocessing" -> "tensorflow/addons"
"keras-team/keras-preprocessing" -> "keras-team/keras-docs-zh" ["e"=1]
"tensorflow/model-analysis" -> "tensorflow/data-validation"
"tensorflow/model-analysis" -> "tensorflow/transform"
"tensorflow/model-analysis" -> "tensorflow/tfx"
"tensorflow/model-analysis" -> "oracle/graphpipe"
"tensorflow/model-analysis" -> "MagNet-DL/magnet"
"tensorflow/model-analysis" -> "csxeba/evolute"
"tensorflow/model-analysis" -> "salesforce/TransmogrifAI"
"tensorflow/model-analysis" -> "tensorflow/estimator"
"tensorflow/model-analysis" -> "tensorflow/adanet"
"tensorflow/model-analysis" -> "tensorflow/model-optimization"
"tensorflow/model-analysis" -> "tensorflow/serving" ["e"=1]
"tensorflow/model-analysis" -> "tensorflow/fairness-indicators"
"tensorflow/model-analysis" -> "tensorflow/metadata"
"tensorflow/model-analysis" -> "openxla/xprof"
"tensorflow/model-analysis" -> "GoogleCloudPlatform/cloudml-samples" ["e"=1]
"ACCLAB/DABEST-python" -> "ACCLAB/dabestr"
"ACCLAB/DABEST-python" -> "ejolly/pymer4"
"ACCLAB/DABEST-python" -> "fooof-tools/fooof" ["e"=1]
"ACCLAB/DABEST-python" -> "ACCLAB/DABEST-Matlab"
"ACCLAB/DABEST-python" -> "maximtrp/scikit-posthocs"
"Waikato/moa" -> "scikit-multiflow/scikit-multiflow"
"Waikato/moa" -> "huawei-noah/streamDM" ["e"=1]
"Waikato/moa" -> "Waikato/meka"
"Waikato/moa" -> "Waikato/wekaDeeplearning4j"
"Waikato/moa" -> "apache/incubator-samoa" ["e"=1]
"Waikato/moa" -> "alipsgh/tornado"
"Waikato/moa" -> "hmgomes/AdaptiveRandomForest"
"Waikato/moa" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"Waikato/moa" -> "online-ml/deep-river"
"Waikato/moa" -> "Waikato/weka-3.8"
"Waikato/moa" -> "adaptive-machine-learning/CapyMOA"
"Waikato/moa" -> "online-ml/awesome-online-machine-learning"
"Waikato/moa" -> "blablahaha/concept-drift"
"Waikato/moa" -> "vlosing/driftDatasets"
"Waikato/moa" -> "alipsgh/codes-for-moa"
"scikit-multilearn/scikit-multilearn" -> "Waikato/meka"
"scikit-multilearn/scikit-multilearn" -> "scikit-optimize/scikit-optimize"
"scikit-multilearn/scikit-multilearn" -> "trent-b/iterative-stratification" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "hyperopt/hyperopt-sklearn"
"scikit-multilearn/scikit-multilearn" -> "TeamHG-Memex/eli5"
"scikit-multilearn/scikit-multilearn" -> "RandolphVI/Multi-Label-Text-Classification" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "Refefer/fastxml" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "jundongl/scikit-feature"
"scikit-multilearn/scikit-multilearn" -> "reiinakano/scikit-plot"
"scikit-multilearn/scikit-multilearn" -> "suraj-deshmukh/Keras-Multi-Label-Image-Classification" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "tsoumakas/mulan"
"scikit-multilearn/scikit-multilearn" -> "lancopku/SGM" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "scikit-multiflow/scikit-multiflow"
"scikit-multilearn/scikit-multilearn" -> "scikit-learn-contrib/imbalanced-learn"
"scikit-multilearn/scikit-multilearn" -> "inspirehep/magpie" ["e"=1]
"sdv-dev/SDGym" -> "sdv-dev/SDMetrics"
"sdv-dev/SDGym" -> "sdv-dev/RDT"
"sdv-dev/SDGym" -> "sdv-dev/TGAN"
"sdv-dev/SDGym" -> "sdv-dev/CTGAN"
"sdv-dev/SDGym" -> "mahmoodm2/tableGAN"
"sdv-dev/SDGym" -> "sdv-dev/DeepEcho"
"sdv-dev/SDGym" -> "Diyago/Tabular-data-generation"
"sdv-dev/SDGym" -> "sdv-dev/Copulas"
"sdv-dev/SDGym" -> "Baukebrenninkmeijer/table-evaluator"
"sdv-dev/SDGym" -> "worldbank/REaLTabFormer"
"tobegit3hub/advisor" -> "melodyguan/enas" ["e"=1]
"tobegit3hub/advisor" -> "kubeflow/katib"
"tobegit3hub/advisor" -> "hyperopt/hyperopt"
"tobegit3hub/advisor" -> "bayesian-optimization/BayesianOptimization"
"tobegit3hub/advisor" -> "carpedm20/ENAS-pytorch" ["e"=1]
"tobegit3hub/advisor" -> "microsoft/nni"
"tobegit3hub/advisor" -> "automl/SMAC3"
"tobegit3hub/advisor" -> "hibayesian/awesome-automl-papers" ["e"=1]
"tobegit3hub/advisor" -> "dmlc/ps-lite" ["e"=1]
"tobegit3hub/advisor" -> "JasperSnoek/spearmint"
"tobegit3hub/advisor" -> "tobegit3hub/tensorflow_template_application" ["e"=1]
"tobegit3hub/advisor" -> "quark0/darts" ["e"=1]
"tobegit3hub/advisor" -> "HIPS/Spearmint"
"tobegit3hub/advisor" -> "hyperopt/hyperopt-sklearn"
"tobegit3hub/advisor" -> "Tencent/PocketFlow" ["e"=1]
"unslothai/hyperlearn" -> "skorch-dev/skorch"
"unslothai/hyperlearn" -> "DistrictDataLabs/yellowbrick"
"unslothai/hyperlearn" -> "IDSIA/sacred"
"unslothai/hyperlearn" -> "facebookresearch/nevergrad"
"unslothai/hyperlearn" -> "cornellius-gp/gpytorch"
"unslothai/hyperlearn" -> "pavlin-policar/openTSNE"
"unslothai/hyperlearn" -> "tensorflow/adanet"
"unslothai/hyperlearn" -> "bckenstler/CLR" ["e"=1]
"unslothai/hyperlearn" -> "pyro-ppl/pyro"
"unslothai/hyperlearn" -> "Xtra-Computing/thundersvm"
"unslothai/hyperlearn" -> "huggingface/nanotron" ["e"=1]
"unslothai/hyperlearn" -> "rapidsai/cuml"
"unslothai/hyperlearn" -> "catalyst-team/catalyst" ["e"=1]
"unslothai/hyperlearn" -> "lmcinnes/umap"
"unslothai/hyperlearn" -> "Kaixhin/grokking-pytorch" ["e"=1]
"alteryx/predict-customer-churn" -> "alteryx/open_source_demos"
"alteryx/predict-customer-churn" -> "alteryx/predict-loan-repayment"
"alteryx/predict-customer-churn" -> "alteryx/compose"
"alteryx/predict-customer-churn" -> "Featuretools/predict-correct-answer"
"alteryx/predict-customer-churn" -> "alteryx/predict-malicious-cyber-connections"
"alteryx/predict-customer-churn" -> "alteryx/Automated-Manual-Comparison"
"alteryx/predict-customer-churn" -> "pik1989/MLProject-ChurnPrediction" ["e"=1]
"alteryx/predict-customer-churn" -> "KazukiOnodera/Santander-Customer-Transaction-Prediction" ["e"=1]
"alteryx/predict-customer-churn" -> "alteryx/predict-remaining-useful-life" ["e"=1]
"alteryx/predict-customer-churn" -> "rstudio/keras-customer-churn"
"alteryx/predict-customer-churn" -> "daynebatten/keras-wtte-rnn"
"BayesWitnesses/m2cgen" -> "nok/sklearn-porter"
"BayesWitnesses/m2cgen" -> "dmlc/treelite" ["e"=1]
"BayesWitnesses/m2cgen" -> "Wookai/paper-tips-and-tricks" ["e"=1]
"BayesWitnesses/m2cgen" -> "emlearn/emlearn" ["e"=1]
"BayesWitnesses/m2cgen" -> "reiinakano/scikit-plot"
"BayesWitnesses/m2cgen" -> "scikit-learn-contrib/category_encoders"
"BayesWitnesses/m2cgen" -> "Luolc/AdaBound" ["e"=1]
"BayesWitnesses/m2cgen" -> "microsoft/hummingbird"
"BayesWitnesses/m2cgen" -> "catboost/catboost"
"BayesWitnesses/m2cgen" -> "DistrictDataLabs/yellowbrick"
"BayesWitnesses/m2cgen" -> "interpretml/interpret"
"BayesWitnesses/m2cgen" -> "scikit-learn-contrib/boruta_py"
"BayesWitnesses/m2cgen" -> "minimaxir/automl-gs"
"BayesWitnesses/m2cgen" -> "koaning/scikit-lego"
"BayesWitnesses/m2cgen" -> "EpistasisLab/tpot"
"tensorflow/adanet" -> "keras-team/autokeras"
"tensorflow/adanet" -> "google-deepmind/trfl" ["e"=1]
"tensorflow/adanet" -> "Tencent/PocketFlow" ["e"=1]
"tensorflow/adanet" -> "melodyguan/enas" ["e"=1]
"tensorflow/adanet" -> "google/dopamine" ["e"=1]
"tensorflow/adanet" -> "automl/auto-sklearn"
"tensorflow/adanet" -> "facebookresearch/ReAgent" ["e"=1]
"tensorflow/adanet" -> "EpistasisLab/tpot"
"tensorflow/adanet" -> "hibayesian/awesome-automl-papers" ["e"=1]
"tensorflow/adanet" -> "google-deepmind/graph_nets" ["e"=1]
"tensorflow/adanet" -> "carpedm20/ENAS-pytorch" ["e"=1]
"tensorflow/adanet" -> "quark0/darts" ["e"=1]
"tensorflow/adanet" -> "bendangnuksung/Image-OutPainting" ["e"=1]
"tensorflow/adanet" -> "alteryx/featuretools"
"tensorflow/adanet" -> "microsoft/nni"
"alegonz/baikal" -> "dabl/dabl"
"alegonz/baikal" -> "dovpanda-dev/dovpanda"
"alegonz/baikal" -> "koaning/scikit-lego"
"alegonz/baikal" -> "sepandhaghighi/pycm" ["e"=1]
"alegonz/baikal" -> "jmschrei/apricot"
"alegonz/baikal" -> "kevinzakka/torchnca"
"uxlfoundation/scikit-learn-intelex" -> "uxlfoundation/oneDAL" ["e"=1]
"uxlfoundation/scikit-learn-intelex" -> "IntelPython/scikit-learn_bench" ["e"=1]
"uxlfoundation/scikit-learn-intelex" -> "scikit-learn-contrib/MAPIE"
"uxlfoundation/scikit-learn-intelex" -> "stanfordmlgroup/ngboost"
"uxlfoundation/scikit-learn-intelex" -> "IntelPython/dpctl" ["e"=1]
"uxlfoundation/scikit-learn-intelex" -> "feature-engine/feature_engine"
"uxlfoundation/scikit-learn-intelex" -> "NannyML/nannyml"
"uxlfoundation/scikit-learn-intelex" -> "rapidsai/cuml"
"uxlfoundation/scikit-learn-intelex" -> "koaning/scikit-lego"
"uxlfoundation/scikit-learn-intelex" -> "rasbt/mlxtend"
"uxlfoundation/scikit-learn-intelex" -> "microsoft/hummingbird"
"uxlfoundation/scikit-learn-intelex" -> "skorch-dev/skorch"
"uxlfoundation/scikit-learn-intelex" -> "modin-project/modin"
"uxlfoundation/scikit-learn-intelex" -> "deepchecks/deepchecks"
"uxlfoundation/scikit-learn-intelex" -> "csinva/imodels"
"rogeroyer/feature_selection_GAAlgorithm" -> "weepon/feature_selection"
"rogeroyer/feature_selection_GAAlgorithm" -> "luckyerdog/feature_select"
"rogeroyer/feature_selection_GAAlgorithm" -> "cainsmile/GA_for_Feature_Selection"
"rogeroyer/feature_selection_GAAlgorithm" -> "scoliann/GeneticAlgorithmFeatureSelection"
"rogeroyer/feature_selection_GAAlgorithm" -> "renatoosousa/GeneticAlgorithmForFeatureSelection"
"rogeroyer/feature_selection_GAAlgorithm" -> "OlaWod/feature-selection_GA-SA"
"rogeroyer/feature_selection_GAAlgorithm" -> "zhaoxingfeng/Genetic-Algorithm" ["e"=1]
"rogeroyer/feature_selection_GAAlgorithm" -> "kaushalshetty/FeatureSelectionGA"
"rogeroyer/feature_selection_GAAlgorithm" -> "JingweiToo/Wrapper-Feature-Selection-Toolbox-Python" ["e"=1]
"nalepae/pandarallel" -> "jmcarpenter2/swifter"
"nalepae/pandarallel" -> "modin-project/modin"
"nalepae/pandarallel" -> "vaexio/vaex"
"nalepae/pandarallel" -> "ydataai/ydata-profiling"
"nalepae/pandarallel" -> "rapidsai/cudf" ["e"=1]
"nalepae/pandarallel" -> "blue-yonder/tsfresh"
"nalepae/pandarallel" -> "scikit-learn-contrib/category_encoders"
"nalepae/pandarallel" -> "rasbt/mlxtend"
"nalepae/pandarallel" -> "pycaret/pycaret"
"nalepae/pandarallel" -> "DistrictDataLabs/yellowbrick"
"nalepae/pandarallel" -> "alteryx/featuretools"
"nalepae/pandarallel" -> "unionai-oss/pandera"
"nalepae/pandarallel" -> "shap/shap"
"nalepae/pandarallel" -> "dask/dask" ["e"=1]
"nalepae/pandarallel" -> "skorch-dev/skorch"
"tensorflow/io" -> "tensorflow/runtime"
"tensorflow/io" -> "tensorflow/custom-op"
"tensorflow/io" -> "tensorflow/tfx"
"tensorflow/io" -> "openxla/xprof"
"tensorflow/io" -> "tensorflow/addons"
"tensorflow/io" -> "tensorflow/mesh"
"tensorflow/io" -> "tensorflow/estimator"
"tensorflow/io" -> "tensorflow/transform"
"tensorflow/io" -> "tensorflow/community"
"tensorflow/io" -> "NVIDIA-Merlin/HugeCTR" ["e"=1]
"tensorflow/io" -> "tensorflow/ecosystem" ["e"=1]
"tensorflow/io" -> "tensorflow/benchmarks" ["e"=1]
"tensorflow/io" -> "tensorflow/text"
"tensorflow/io" -> "linkedin/spark-tfrecord" ["e"=1]
"tensorflow/io" -> "tensorflow/data-validation"
"IBM/MAX-Human-Pose-Estimator" -> "IBM/MAX-Framework"
"zhiyongc/GRU-D" -> "Han-JD/GRU-D"
"zhiyongc/GRU-D" -> "PeterChe1990/GRU-D"
"zhiyongc/GRU-D" -> "felixykliu/NAOMI"
"zhiyongc/GRU-D" -> "Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks"
"jphall663/awesome-machine-learning-interpretability" -> "lopusz/awesome-interpretable-machine-learning"
"jphall663/awesome-machine-learning-interpretability" -> "wangyongjie-ntu/Awesome-explainable-AI"
"jphall663/awesome-machine-learning-interpretability" -> "interpretml/interpret"
"jphall663/awesome-machine-learning-interpretability" -> "jphall663/interpretable_machine_learning_with_python"
"jphall663/awesome-machine-learning-interpretability" -> "pbiecek/xai_resources"
"jphall663/awesome-machine-learning-interpretability" -> "h2oai/mli-resources"
"jphall663/awesome-machine-learning-interpretability" -> "christophM/interpretable-ml-book"
"jphall663/awesome-machine-learning-interpretability" -> "EthicalML/xai"
"jphall663/awesome-machine-learning-interpretability" -> "Trusted-AI/AIX360"
"jphall663/awesome-machine-learning-interpretability" -> "marcotcr/lime"
"jphall663/awesome-machine-learning-interpretability" -> "pytorch/captum" ["e"=1]
"jphall663/awesome-machine-learning-interpretability" -> "SeldonIO/alibi"
"jphall663/awesome-machine-learning-interpretability" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"jphall663/awesome-machine-learning-interpretability" -> "interpretml/DiCE"
"jphall663/awesome-machine-learning-interpretability" -> "shap/shap"
"suriyadeepan/torchtest" -> "chaserileyroberts/mltest"
"CannyLab/tsne-cuda" -> "DmitryUlyanov/Multicore-TSNE"
"CannyLab/tsne-cuda" -> "pavlin-policar/openTSNE"
"CannyLab/tsne-cuda" -> "mxl1990/tsne-pytorch"
"CannyLab/tsne-cuda" -> "KlugerLab/FIt-SNE" ["e"=1]
"CannyLab/tsne-cuda" -> "rapidsai/cuml"
"CannyLab/tsne-cuda" -> "facebookresearch/deepcluster" ["e"=1]
"CannyLab/tsne-cuda" -> "lmcinnes/umap"
"CannyLab/tsne-cuda" -> "HobbitLong/PyContrast" ["e"=1]
"CannyLab/tsne-cuda" -> "facebookresearch/moco" ["e"=1]
"CannyLab/tsne-cuda" -> "KevinMusgrave/pytorch-metric-learning" ["e"=1]
"CannyLab/tsne-cuda" -> "NVIDIA/apex" ["e"=1]
"CannyLab/tsne-cuda" -> "facebookresearch/vissl" ["e"=1]
"CannyLab/tsne-cuda" -> "facebookresearch/higher" ["e"=1]
"CannyLab/tsne-cuda" -> "lanpa/tensorboardX" ["e"=1]
"CannyLab/tsne-cuda" -> "facebookresearch/swav" ["e"=1]
"lmoroney/dlaicourse" -> "zalandoresearch/fashion-mnist"
"lmoroney/dlaicourse" -> "tensorflow/datasets"
"lmoroney/dlaicourse" -> "keras-team/keras-preprocessing"
"lmoroney/dlaicourse" -> "Kulbear/deep-learning-coursera" ["e"=1]
"lmoroney/dlaicourse" -> "https-deeplearning-ai/tensorflow-1-public"
"lmoroney/dlaicourse" -> "mbadry1/DeepLearning.ai-Summary" ["e"=1]
"lmoroney/dlaicourse" -> "GoogleCloudPlatform/training-data-analyst" ["e"=1]
"lmoroney/dlaicourse" -> "udacity/deep-learning-v2-pytorch" ["e"=1]
"lmoroney/dlaicourse" -> "ageron/handson-ml2" ["e"=1]
"lmoroney/dlaicourse" -> "fastai/course-v3" ["e"=1]
"lmoroney/dlaicourse" -> "tensorflow/docs"
"lmoroney/dlaicourse" -> "jbrownlee/Datasets"
"lmoroney/dlaicourse" -> "lexfridman/mit-deep-learning" ["e"=1]
"lmoroney/dlaicourse" -> "https-deeplearning-ai/machine-learning-engineering-for-production-public"
"lmoroney/dlaicourse" -> "MITDeepLearning/introtodeeplearning" ["e"=1]
"MaxBenChrist/awesome_time_series_in_python" -> "tslearn-team/tslearn"
"MaxBenChrist/awesome_time_series_in_python" -> "blue-yonder/tsfresh"
"MaxBenChrist/awesome_time_series_in_python" -> "AileenNielsen/TimeSeriesAnalysisWithPython" ["e"=1]
"MaxBenChrist/awesome_time_series_in_python" -> "cuge1995/awesome-time-series" ["e"=1]
"MaxBenChrist/awesome_time_series_in_python" -> "Alro10/deep-learning-time-series" ["e"=1]
"MaxBenChrist/awesome_time_series_in_python" -> "johannfaouzi/pyts" ["e"=1]
"MaxBenChrist/awesome_time_series_in_python" -> "sktime/sktime"
"MaxBenChrist/awesome_time_series_in_python" -> "RJT1990/pyflux"
"MaxBenChrist/awesome_time_series_in_python" -> "sktime/pytorch-forecasting"
"MaxBenChrist/awesome_time_series_in_python" -> "awslabs/gluonts"
"MaxBenChrist/awesome_time_series_in_python" -> "TDAmeritrade/stumpy"
"MaxBenChrist/awesome_time_series_in_python" -> "winedarksea/AutoTS"
"MaxBenChrist/awesome_time_series_in_python" -> "rob-med/awesome-TS-anomaly-detection" ["e"=1]
"MaxBenChrist/awesome_time_series_in_python" -> "alkaline-ml/pmdarima"
"MaxBenChrist/awesome_time_series_in_python" -> "timeseriesAI/tsai"
"raphaelvallat/pingouin" -> "scikit-learn-contrib/MAPIE"
"raphaelvallat/pingouin" -> "maximtrp/scikit-posthocs"
"raphaelvallat/pingouin" -> "bambinos/bambi" ["e"=1]
"raphaelvallat/pingouin" -> "DistrictDataLabs/yellowbrick"
"raphaelvallat/pingouin" -> "koaning/scikit-lego"
"raphaelvallat/pingouin" -> "raphaelvallat/yasa" ["e"=1]
"raphaelvallat/pingouin" -> "feature-engine/feature_engine"
"raphaelvallat/pingouin" -> "bashtage/linearmodels" ["e"=1]
"raphaelvallat/pingouin" -> "CamDavidsonPilon/lifelines"
"raphaelvallat/pingouin" -> "proplot-dev/proplot" ["e"=1]
"raphaelvallat/pingouin" -> "pyjanitor-devs/pyjanitor"
"raphaelvallat/pingouin" -> "fooof-tools/fooof" ["e"=1]
"raphaelvallat/pingouin" -> "trevismd/statannotations" ["e"=1]
"raphaelvallat/pingouin" -> "arviz-devs/arviz" ["e"=1]
"raphaelvallat/pingouin" -> "MaxHalford/prince"
"JustGlowing/minisom" -> "sevamoo/SOMPY"
"JustGlowing/minisom" -> "alexarnimueller/som"
"JustGlowing/minisom" -> "fcomitani/simpsom"
"JustGlowing/minisom" -> "felixriese/susi"
"JustGlowing/minisom" -> "peterwittek/somoclu"
"JustGlowing/minisom" -> "ratschlab/SOM-VAE" ["e"=1]
"JustGlowing/minisom" -> "FlorentF9/DESOM"
"JustGlowing/minisom" -> "cgorman/tensorflow-som"
"JustGlowing/minisom" -> "tslearn-team/tslearn"
"JustGlowing/minisom" -> "lmcinnes/umap"
"JustGlowing/minisom" -> "diego-vicente/som-tsp" ["e"=1]
"JustGlowing/minisom" -> "jakobrunge/tigramite" ["e"=1]
"JustGlowing/minisom" -> "rileypsmith/sklearn-som"
"JustGlowing/minisom" -> "jmcarpenter2/swifter"
"JustGlowing/minisom" -> "itdxer/neupy"
"logicalclocks/hopsworks" -> "logicalclocks/rondb"
"logicalclocks/hopsworks" -> "feast-dev/feast"
"logicalclocks/hopsworks" -> "hopshadoop/hops"
"logicalclocks/hopsworks" -> "feathr-ai/feathr" ["e"=1]
"logicalclocks/hopsworks" -> "logicalclocks/feature-store-api"
"logicalclocks/hopsworks" -> "featureform/featureform"
"logicalclocks/hopsworks" -> "featurestoreorg/serverless-ml-course" ["e"=1]
"logicalclocks/hopsworks" -> "alibaba/feathub" ["e"=1]
"logicalclocks/hopsworks" -> "logicalclocks/hops-examples"
"logicalclocks/hopsworks" -> "SeldonIO/seldon-core"
"logicalclocks/hopsworks" -> "logicalclocks/hopsworks-tutorials" ["e"=1]
"logicalclocks/hopsworks" -> "logicalclocks/maggy"
"logicalclocks/hopsworks" -> "dc-sics/hopsworks"
"logicalclocks/hopsworks" -> "combust/mleap" ["e"=1]
"logicalclocks/hopsworks" -> "google/ml-metadata"
"awslabs/datawig" -> "eltonlaw/impyute"
"awslabs/datawig" -> "kearnz/autoimpute"
"awslabs/datawig" -> "schelterlabs/jenga"
"awslabs/datawig" -> "jsyoon0823/GAIN"
"awslabs/datawig" -> "iskandr/fancyimpute"
"awslabs/datawig" -> "AnotherSamWilson/miceforest"
"awslabs/datawig" -> "syne-tune/syne-tune" ["e"=1]
"awslabs/datawig" -> "epsilon-machine/missingpy"
"havakv/pycox" -> "jaredleekatzman/DeepSurv"
"havakv/pycox" -> "sebp/scikit-survival"
"havakv/pycox" -> "autonlab/auton-survival"
"havakv/pycox" -> "chl8856/DeepHit"
"havakv/pycox" -> "square/pysurvival"
"havakv/pycox" -> "CamDavidsonPilon/lifelines"
"havakv/pycox" -> "czifan/DeepSurv.pytorch"
"havakv/pycox" -> "robi56/Survival-Analysis-using-Deep-Learning"
"havakv/pycox" -> "loft-br/xgboost-survival-embeddings"
"havakv/pycox" -> "rk2900/DRSA"
"havakv/pycox" -> "chl8856/Dynamic-DeepHit"
"havakv/pycox" -> "MGensheimer/nnet-survival"
"havakv/pycox" -> "Novartis/torchsurv"
"havakv/pycox" -> "MI2DataLab/survshap"
"havakv/pycox" -> "PathologyDataScience/SurvivalNet"
"guildai/guildai" -> "VertaAI/modeldb"
"guildai/guildai" -> "IDSIA/sacred"
"guildai/guildai" -> "clearml/clearml"
"guildai/guildai" -> "replicate/keepsake"
"guildai/guildai" -> "magda-io/magda" ["e"=1]
"guildai/guildai" -> "polyaxon/polyaxon"
"guildai/guildai" -> "facebookresearch/hiplot"
"guildai/guildai" -> "mlrun/mlrun"
"guildai/guildai" -> "zenml-io/zenml"
"guildai/guildai" -> "aimhubio/aim"
"guildai/guildai" -> "determined-ai/determined"
"guildai/guildai" -> "vivekratnavel/omniboard"
"guildai/guildai" -> "whylabs/whylogs" ["e"=1]
"guildai/guildai" -> "SeldonIO/alibi"
"guildai/guildai" -> "iterative/dvc"
"vivekratnavel/omniboard" -> "IDSIA/sacred"
"vivekratnavel/omniboard" -> "chovanecm/sacredboard"
"vivekratnavel/omniboard" -> "JarnoRFB/incense"
"vivekratnavel/omniboard" -> "yuvalatzmon/SACRED_HyperOpt_v2"
"IDSIA/sacred" -> "vivekratnavel/omniboard"
"IDSIA/sacred" -> "hyperopt/hyperopt"
"IDSIA/sacred" -> "lanpa/tensorboardX" ["e"=1]
"IDSIA/sacred" -> "chovanecm/sacredboard"
"IDSIA/sacred" -> "skorch-dev/skorch"
"IDSIA/sacred" -> "clearml/clearml"
"IDSIA/sacred" -> "iterative/dvc"
"IDSIA/sacred" -> "HIPS/autograd"
"IDSIA/sacred" -> "pyro-ppl/pyro"
"IDSIA/sacred" -> "blei-lab/edward"
"IDSIA/sacred" -> "polyaxon/polyaxon"
"IDSIA/sacred" -> "fossasia/visdom" ["e"=1]
"IDSIA/sacred" -> "pytorch/ignite" ["e"=1]
"IDSIA/sacred" -> "cornellius-gp/gpytorch"
"IDSIA/sacred" -> "facebookresearch/hydra" ["e"=1]
"FilippoBovo/production-data-science" -> "drivendata/data-science-is-software"
"FilippoBovo/production-data-science" -> "MSFTImagine/Microsoft-DataScience-Process"
"FilippoBovo/production-data-science" -> "thuijskens/production-tools"
"FilippoBovo/production-data-science" -> "engarde-dev/engarde" ["e"=1]
"FilippoBovo/production-data-science" -> "davified/clean-code-ml"
"FilippoBovo/production-data-science" -> "JosPolfliet/awesome-ai-usecases" ["e"=1]
"FilippoBovo/production-data-science" -> "SocialDataSci/Geospatial_Data_with_Python"
"FilippoBovo/production-data-science" -> "hackalog/bus_number"
"FilippoBovo/production-data-science" -> "firmai/business-machine-learning" ["e"=1]
"FilippoBovo/production-data-science" -> "HunterMcGushion/hyperparameter_hunter"
"FilippoBovo/production-data-science" -> "ericmjl/data-testing-tutorial"
"instacart/lore" -> "ClimbsRocks/auto_ml"
"instacart/lore" -> "mm-mansour/Fast-Pandas"
"instacart/lore" -> "reiinakano/scikit-plot"
"instacart/lore" -> "henripal/labnotebook"
"instacart/lore" -> "TeamHG-Memex/eli5"
"instacart/lore" -> "minimaxir/automl-gs"
"instacart/lore" -> "machinalis/featureforge" ["e"=1]
"instacart/lore" -> "polyaxon/polyaxon"
"instacart/lore" -> "reiinakano/xcessiv"
"instacart/lore" -> "d6t/d6tflow"
"instacart/lore" -> "AxeldeRomblay/MLBox"
"instacart/lore" -> "chaserileyroberts/mltest"
"instacart/lore" -> "oracle/skater"
"instacart/lore" -> "studioml/studio"
"instacart/lore" -> "NathanEpstein/Dora" ["e"=1]
"scikit-learn-contrib/skope-rules" -> "christophM/rulefit"
"scikit-learn-contrib/skope-rules" -> "csinva/imodels"
"scikit-learn-contrib/skope-rules" -> "scikit-learn-contrib/DESlib"
"scikit-learn-contrib/skope-rules" -> "tmadl/sklearn-expertsys"
"scikit-learn-contrib/skope-rules" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/skope-rules" -> "scikit-learn-contrib/category_encoders"
"scikit-learn-contrib/skope-rules" -> "oracle/skater"
"scikit-learn-contrib/skope-rules" -> "Ekeany/Boruta-Shap"
"scikit-learn-contrib/skope-rules" -> "koaning/scikit-lego"
"scikit-learn-contrib/skope-rules" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/skope-rules" -> "cod3licious/autofeat"
"scikit-learn-contrib/skope-rules" -> "EpistasisLab/scikit-rebate"
"scikit-learn-contrib/skope-rules" -> "BiomedSciAI/causallib" ["e"=1]
"scikit-learn-contrib/skope-rules" -> "interpretml/DiCE"
"scikit-learn-contrib/skope-rules" -> "guillermo-navas-palencia/optbinning"
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/skope-rules"
"scikit-learn-contrib/DESlib" -> "Menelau/DESlib" ["e"=1]
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/DESlib" -> "EpistasisLab/scikit-rebate"
"scikit-learn-contrib/DESlib" -> "flennerhag/mlens"
"scikit-learn-contrib/DESlib" -> "Ekeany/Boruta-Shap"
"scikit-learn-contrib/DESlib" -> "yzhao062/combo"
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/scikit-learn-contrib"
"scikit-learn-contrib/DESlib" -> "ealcobaca/pymfe"
"scikit-learn-contrib/DESlib" -> "maximtrp/scikit-posthocs"
"scikit-learn-contrib/DESlib" -> "christophM/rulefit"
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/DESlib" -> "analyticalmindsltd/smote_variants" ["e"=1]
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/forest-confidence-interval"
"scikit-learn-contrib/DESlib" -> "vecxoz/vecstack" ["e"=1]
"EmuKit/emukit" -> "SheffieldML/GPy"
"EmuKit/emukit" -> "SheffieldML/GPyOpt"
"EmuKit/emukit" -> "GPflow/GPflow"
"EmuKit/emukit" -> "secondmind-labs/trieste"
"EmuKit/emukit" -> "paraklas/NARGP"
"EmuKit/emukit" -> "SMTorg/smt" ["e"=1]
"EmuKit/emukit" -> "jonathf/chaospy" ["e"=1]
"EmuKit/emukit" -> "cornellius-gp/gpytorch"
"EmuKit/emukit" -> "automl/RoBO"
"EmuKit/emukit" -> "pytorch/botorch"
"EmuKit/emukit" -> "GPflow/GPflowOpt"
"EmuKit/emukit" -> "probabilistic-numerics/probnum" ["e"=1]
"EmuKit/emukit" -> "SURGroup/UQpy" ["e"=1]
"EmuKit/emukit" -> "dragonfly/dragonfly"
"EmuKit/emukit" -> "mdolab/pyoptsparse" ["e"=1]
"spotify/chartify" -> "santinic/pampy" ["e"=1]
"spotify/chartify" -> "quantopian/qgrid" ["e"=1]
"spotify/chartify" -> "ResidentMario/missingno"
"spotify/chartify" -> "vega/altair" ["e"=1]
"spotify/chartify" -> "modin-project/modin"
"spotify/chartify" -> "bokeh/bokeh" ["e"=1]
"spotify/chartify" -> "DistrictDataLabs/yellowbrick"
"spotify/chartify" -> "spotify/luigi" ["e"=1]
"spotify/chartify" -> "mwouts/jupytext" ["e"=1]
"spotify/chartify" -> "holoviz/holoviews" ["e"=1]
"spotify/chartify" -> "vaexio/vaex"
"spotify/chartify" -> "TeamHG-Memex/eli5"
"spotify/chartify" -> "ydataai/ydata-profiling"
"spotify/chartify" -> "ContextLab/hypertools"
"spotify/chartify" -> "EpistasisLab/tpot"
"iSEE/iSEE" -> "csoneson/ARMOR"
"iSEE/iSEE" -> "Bioconductor/BiocStickers"
"h2oai/mli-resources" -> "jphall663/interpretable_machine_learning_with_python"
"h2oai/mli-resources" -> "lopusz/awesome-interpretable-machine-learning"
"h2oai/mli-resources" -> "giuseppec/iml" ["e"=1]
"h2oai/mli-resources" -> "jphall663/awesome-machine-learning-interpretability"
"h2oai/mli-resources" -> "pbiecek/xai_resources"
"h2oai/mli-resources" -> "ModelOriented/DALEX"
"h2oai/mli-resources" -> "oracle/skater"
"h2oai/mli-resources" -> "marcotcr/anchor"
"h2oai/mli-resources" -> "EthicalML/xai"
"h2oai/mli-resources" -> "andosa/treeinterpreter"
"h2oai/mli-resources" -> "tmadl/sklearn-expertsys"
"h2oai/mli-resources" -> "jphall663/GWU_data_mining"
"h2oai/mli-resources" -> "SauceCat/PDPbox"
"h2oai/mli-resources" -> "jphall663/xai_misconceptions"
"h2oai/mli-resources" -> "christophM/rulefit"
"jphall663/interpretable_machine_learning_with_python" -> "h2oai/mli-resources"
"jphall663/interpretable_machine_learning_with_python" -> "jphall663/awesome-machine-learning-interpretability"
"jphall663/interpretable_machine_learning_with_python" -> "lopusz/awesome-interpretable-machine-learning"
"jphall663/interpretable_machine_learning_with_python" -> "jphall663/GWU_data_mining"
"jphall663/interpretable_machine_learning_with_python" -> "oracle/skater"
"jphall663/interpretable_machine_learning_with_python" -> "EthicalML/xai"
"jphall663/interpretable_machine_learning_with_python" -> "pbiecek/xai_resources"
"jphall663/interpretable_machine_learning_with_python" -> "interpretml/DiCE"
"jphall663/interpretable_machine_learning_with_python" -> "interpretml/interpret-community"
"jphall663/interpretable_machine_learning_with_python" -> "ModelOriented/DALEX"
"jphall663/interpretable_machine_learning_with_python" -> "giuseppec/iml" ["e"=1]
"jphall663/interpretable_machine_learning_with_python" -> "SauceCat/PDPbox"
"jphall663/interpretable_machine_learning_with_python" -> "andosa/treeinterpreter"
"jphall663/interpretable_machine_learning_with_python" -> "marcotcr/anchor"
"jphall663/interpretable_machine_learning_with_python" -> "h2oai/h2o-meetups" ["e"=1]
"WillKoehrsen/feature-selector" -> "WillKoehrsen/automated-feature-engineering"
"WillKoehrsen/feature-selector" -> "alteryx/featuretools"
"WillKoehrsen/feature-selector" -> "scikit-learn-contrib/boruta_py"
"WillKoehrsen/feature-selector" -> "duxuhao/Feature-Selection"
"WillKoehrsen/feature-selector" -> "scikit-learn-contrib/category_encoders"
"WillKoehrsen/feature-selector" -> "rasbt/mlxtend"
"WillKoehrsen/feature-selector" -> "scikit-learn-contrib/imbalanced-learn"
"WillKoehrsen/feature-selector" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"WillKoehrsen/feature-selector" -> "jundongl/scikit-feature"
"WillKoehrsen/feature-selector" -> "feature-engine/feature_engine"
"WillKoehrsen/feature-selector" -> "abhayspawar/featexp"
"WillKoehrsen/feature-selector" -> "ShichenXie/scorecardpy"
"WillKoehrsen/feature-selector" -> "WillKoehrsen/hyperparameter-optimization"
"WillKoehrsen/feature-selector" -> "hyperopt/hyperopt-sklearn"
"WillKoehrsen/feature-selector" -> "hyperopt/hyperopt"
"rubinxin/CoCaBO_code" -> "aryandeshwal/HyBO"
"rubinxin/CoCaBO_code" -> "xingchenwan/Casmopolitan"
"vinecopulib/pyvinecopulib" -> "tnagler/VineCopula"
"vinecopulib/pyvinecopulib" -> "maximenc/pycop"
"vinecopulib/pyvinecopulib" -> "DanielBok/copulae"
"vinecopulib/pyvinecopulib" -> "asnelt/mixedvines"
"iterative/example-get-started" -> "iterative/dataset-registry"
"iterative/example-get-started" -> "iterative/dvc-bench"
"dragonfly/dragonfly" -> "SheffieldML/GPyOpt"
"dragonfly/dragonfly" -> "pytorch/botorch"
"dragonfly/dragonfly" -> "automl/HpBandSter"
"dragonfly/dragonfly" -> "automl/RoBO"
"dragonfly/dragonfly" -> "uber-research/TuRBO"
"dragonfly/dragonfly" -> "EmuKit/emukit"
"dragonfly/dragonfly" -> "dme65/pySOT"
"dragonfly/dragonfly" -> "GPflow/GPflowOpt"
"dragonfly/dragonfly" -> "HIPS/Spearmint"
"dragonfly/dragonfly" -> "cornellius-gp/gpytorch"
"dragonfly/dragonfly" -> "kirthevasank/nasbot" ["e"=1]
"dragonfly/dragonfly" -> "SheffieldML/GPy"
"dragonfly/dragonfly" -> "uber/bayesmark"
"dragonfly/dragonfly" -> "OATML/bdl-benchmarks" ["e"=1]
"dragonfly/dragonfly" -> "uncertainty-toolbox/uncertainty-toolbox" ["e"=1]
"scikit-learn-contrib/stability-selection" -> "EpistasisLab/scikit-rebate"
"scikit-learn-contrib/stability-selection" -> "scikit-learn-contrib/forest-confidence-interval"
"scikit-learn-contrib/stability-selection" -> "scikit-learn-contrib/DESlib"
"scikit-learn-contrib/stability-selection" -> "scikit-learn-contrib/polylearn" ["e"=1]
"scikit-learn-contrib/stability-selection" -> "scikit-learn-contrib/boruta_py"
"square/pysurvival" -> "sebp/scikit-survival"
"square/pysurvival" -> "autonlab/auton-survival"
"square/pysurvival" -> "havakv/pycox"
"square/pysurvival" -> "MI2DataLab/survshap"
"square/pysurvival" -> "loft-br/xgboost-survival-embeddings"
"square/pysurvival" -> "jaredleekatzman/DeepSurv"
"square/pysurvival" -> "chl8856/DeepHit"
"square/pysurvival" -> "CamDavidsonPilon/lifelines"
"square/pysurvival" -> "rk2900/DRSA"
"square/pysurvival" -> "julianspaeth/random-survival-forest"
"square/pysurvival" -> "czifan/DeepSurv.pytorch"
"square/pysurvival" -> "robi56/Survival-Analysis-using-Deep-Learning"
"square/pysurvival" -> "chiragnagpal/deep_cox_mixtures"
"kevinzakka/hypersearch" -> "zygmuntz/hyperband"
"kevinzakka/hypersearch" -> "salesforce/matchbox" ["e"=1]
"d6t/d6tflow" -> "d6t/d6tpipe"
"d6t/d6tflow" -> "d6t/d6t-python"
"d6t/d6tflow" -> "minimaxir/automl-gs"
"d6t/d6tflow" -> "dask/fastparquet" ["e"=1]
"d6t/d6tflow" -> "shawnbrown/datatest" ["e"=1]
"d6t/d6tflow" -> "ReviewNB/treon" ["e"=1]
"d6t/d6tflow" -> "d6t/d6tflow-template"
"d6t/d6tflow" -> "Minyus/pipelinex" ["e"=1]
"d6t/d6tflow" -> "mm-mansour/Fast-Pandas"
"d6t/d6tflow" -> "instacart/lore"
"d6t/d6tflow" -> "AxeldeRomblay/MLBox"
"d6t/d6tflow" -> "chiphuyen/lazynlp" ["e"=1]
"d6t/d6tflow" -> "mara/mara-pipelines" ["e"=1]
"henripal/labnotebook" -> "bbli/ml_board"
"henripal/labnotebook" -> "mm-mansour/Fast-Pandas"
"henripal/labnotebook" -> "jgreenemi/Parris"
"weepon/feature_selection" -> "luckyerdog/feature_select"
"weepon/feature_selection" -> "xuman-Amy/preprocessing"
"minimaxir/person-blocker" -> "RedaOps/ann-visualizer"
"minimaxir/person-blocker" -> "mm-mansour/Fast-Pandas"
"minimaxir/person-blocker" -> "dfouhey/caffe64"
"minimaxir/person-blocker" -> "luanfujun/deep-painterly-harmonization" ["e"=1]
"minimaxir/person-blocker" -> "NVlabs/MUNIT" ["e"=1]
"minimaxir/person-blocker" -> "kaishengtai/neuralart" ["e"=1]
"minimaxir/person-blocker" -> "minimaxir/automl-gs"
"minimaxir/person-blocker" -> "meetmangukiya/instagram-scraper" ["e"=1]
"minimaxir/person-blocker" -> "mdbloice/Augmentor" ["e"=1]
"minimaxir/person-blocker" -> "NVIDIA/FastPhotoStyle" ["e"=1]
"minimaxir/person-blocker" -> "cybertronai/imagenet18_old" ["e"=1]
"minimaxir/person-blocker" -> "schollz/howmanypeoplearearound" ["e"=1]
"minimaxir/person-blocker" -> "IntelLabs/nlp-architect" ["e"=1]
"minimaxir/person-blocker" -> "CSAILVision/gandissect" ["e"=1]
"minimaxir/person-blocker" -> "llSourcell/Learn_Blockchain_in_2_months" ["e"=1]
"webermarcolivier/statannot" -> "trevismd/statannotations" ["e"=1]
"webermarcolivier/statannot" -> "maximtrp/scikit-posthocs"
"webermarcolivier/statannot" -> "zqfang/GSEApy" ["e"=1]
"webermarcolivier/statannot" -> "raphaelvallat/pingouin"
"probml/pmtk3" -> "probml/pyprobml" ["e"=1]
"probml/pmtk3" -> "ArthurZC23/Machine-Learning-A-Probabilistic-Perspective-Solutions" ["e"=1]
"probml/pmtk3" -> "PRML/PRMLT" ["e"=1]
"probml/pmtk3" -> "bayesnet/bnt" ["e"=1]
"probml/pmtk3" -> "blei-lab/edward"
"probml/pmtk3" -> "GPflow/GPflow"
"probml/pmtk3" -> "SheffieldML/GPy"
"probml/pmtk3" -> "probml/pmtkdata"
"probml/pmtk3" -> "rasmusbergpalm/DeepLearnToolbox" ["e"=1]
"probml/pmtk3" -> "probml/pmtksupport"
"probml/pmtk3" -> "pgmpy/pgmpy" ["e"=1]
"probml/pmtk3" -> "mattjj/pyhsmm" ["e"=1]
"probml/pmtk3" -> "vlfeat/matconvnet" ["e"=1]
"probml/pmtk3" -> "avehtari/BDA_py_demos" ["e"=1]
"probml/pmtk3" -> "stan-dev/stan" ["e"=1]
"docker-for-data-science/docker-for-data-science-tutorial" -> "ericmjl/data-testing-tutorial"
"uber/manifold" -> "interpretml/interpret"
"uber/manifold" -> "microsoft/hummingbird"
"uber/manifold" -> "SeldonIO/alibi"
"uber/manifold" -> "TeamHG-Memex/eli5"
"uber/manifold" -> "facebookresearch/hiplot"
"uber/manifold" -> "PAIR-code/what-if-tool"
"uber/manifold" -> "SeldonIO/alibi-detect"
"uber/manifold" -> "DistrictDataLabs/yellowbrick"
"uber/manifold" -> "replicate/keepsake"
"uber/manifold" -> "cortexlabs/cortex"
"uber/manifold" -> "uber/causalml" ["e"=1]
"uber/manifold" -> "uber/orbit"
"uber/manifold" -> "mckinsey/causalnex" ["e"=1]
"uber/manifold" -> "linkedin/detext" ["e"=1]
"uber/manifold" -> "MAIF/shapash"
"annoviko/pyclustering" -> "scikit-learn-contrib/hdbscan"
"annoviko/pyclustering" -> "mynameisfiber/pyxmeans"
"annoviko/pyclustering" -> "tslearn-team/tslearn"
"annoviko/pyclustering" -> "scikit-learn-contrib/metric-learn" ["e"=1]
"annoviko/pyclustering" -> "nicodv/kmodes"
"annoviko/pyclustering" -> "wannesm/dtaidistance" ["e"=1]
"annoviko/pyclustering" -> "jundongl/scikit-feature"
"annoviko/pyclustering" -> "MaxHalford/prince"
"annoviko/pyclustering" -> "GiulioRossetti/cdlib" ["e"=1]
"annoviko/pyclustering" -> "elki-project/elki" ["e"=1]
"annoviko/pyclustering" -> "deepcharles/ruptures"
"annoviko/pyclustering" -> "deric/clustering-benchmark"
"annoviko/pyclustering" -> "scikit-learn-contrib/DESlib"
"annoviko/pyclustering" -> "scikit-learn-contrib/category_encoders"
"annoviko/pyclustering" -> "NaegleLab/OpenEnsembles"
"IBM/FfDL" -> "IBM/microservices-traffic-management-using-istio" ["e"=1]
"IBM/FfDL" -> "jupyter-server/enterprise_gateway" ["e"=1]
"IBM/FfDL" -> "machine-learning-exchange/mlx"
"IBM/FfDL" -> "polyaxon/polyaxon"
"IBM/FfDL" -> "IBM-Cloud/openwhisk-darkvisionapp" ["e"=1]
"IBM/FfDL" -> "kubeflow/kfp-tekton"
"IBM/FfDL" -> "IBM/Kubernetes-container-service-GitLab-sample" ["e"=1]
"IBM/FfDL" -> "SeldonIO/seldon-core"
"aikho/awesome-feature-engineering" -> "anujdutt9/Feature-Selection-for-Machine-Learning"
"aikho/awesome-feature-engineering" -> "alicezheng/feature-engineering-book"
"aikho/awesome-feature-engineering" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"aikho/awesome-feature-engineering" -> "Pysamlam/Tips-of-Feature-engineering" ["e"=1]
"aikho/awesome-feature-engineering" -> "WillKoehrsen/automated-feature-engineering"
"thuijskens/production-tools" -> "scikit-learn-contrib/project-template"
"thuijskens/production-tools" -> "FilippoBovo/production-data-science"
"thuijskens/production-tools" -> "tonybaloney/wily" ["e"=1]
"thuijskens/production-tools" -> "se2p/pynguin" ["e"=1]
"ModelOriented/DALEX" -> "ModelOriented/DrWhy" ["e"=1]
"ModelOriented/DALEX" -> "giuseppec/iml" ["e"=1]
"ModelOriented/DALEX" -> "ModelOriented/modelStudio" ["e"=1]
"ModelOriented/DALEX" -> "interpretml/DiCE"
"ModelOriented/DALEX" -> "SeldonIO/alibi"
"ModelOriented/DALEX" -> "Trusted-AI/AIX360"
"ModelOriented/DALEX" -> "mlr-org/mlr3" ["e"=1]
"ModelOriented/DALEX" -> "EthicalML/xai"
"ModelOriented/DALEX" -> "ropensci/drake" ["e"=1]
"ModelOriented/DALEX" -> "thomasp85/lime" ["e"=1]
"ModelOriented/DALEX" -> "oracle/skater"
"ModelOriented/DALEX" -> "interpretml/interpret"
"ModelOriented/DALEX" -> "pbiecek/ema" ["e"=1]
"ModelOriented/DALEX" -> "mlr-org/mlr" ["e"=1]
"ModelOriented/DALEX" -> "csinva/imodels"
"HunterMcGushion/hyperparameter_hunter" -> "RGF-team/rgf" ["e"=1]
"HunterMcGushion/hyperparameter_hunter" -> "abhayspawar/featexp"
"HunterMcGushion/hyperparameter_hunter" -> "ClimbsRocks/auto_ml"
"HunterMcGushion/hyperparameter_hunter" -> "AxeldeRomblay/MLBox"
"HunterMcGushion/hyperparameter_hunter" -> "vecxoz/vecstack" ["e"=1]
"HunterMcGushion/hyperparameter_hunter" -> "flennerhag/mlens"
"HunterMcGushion/hyperparameter_hunter" -> "scikit-optimize/scikit-optimize"
"HunterMcGushion/hyperparameter_hunter" -> "scikit-learn-contrib/boruta_py"
"HunterMcGushion/hyperparameter_hunter" -> "TeamHG-Memex/eli5"
"HunterMcGushion/hyperparameter_hunter" -> "WillKoehrsen/hyperparameter-optimization"
"HunterMcGushion/hyperparameter_hunter" -> "reiinakano/xcessiv"
"HunterMcGushion/hyperparameter_hunter" -> "DeepBlueAI/AutoSmart" ["e"=1]
"HunterMcGushion/hyperparameter_hunter" -> "WillKoehrsen/feature-selector"
"HunterMcGushion/hyperparameter_hunter" -> "yzhao062/combo"
"HunterMcGushion/hyperparameter_hunter" -> "scikit-learn-contrib/category_encoders"
"abhayspawar/featexp" -> "WillKoehrsen/feature-selector"
"abhayspawar/featexp" -> "motefly/DeepGBM" ["e"=1]
"abhayspawar/featexp" -> "HunterMcGushion/hyperparameter_hunter"
"abhayspawar/featexp" -> "flennerhag/mlens"
"abhayspawar/featexp" -> "dabl/dabl"
"abhayspawar/featexp" -> "TeamHG-Memex/eli5"
"abhayspawar/featexp" -> "dayeren/Kaggle_Competition_Treasure" ["e"=1]
"abhayspawar/featexp" -> "WillKoehrsen/hyperparameter-optimization"
"abhayspawar/featexp" -> "rushter/heamy" ["e"=1]
"abhayspawar/featexp" -> "scikit-learn-contrib/category_encoders"
"abhayspawar/featexp" -> "guoday/ctrNet-tool" ["e"=1]
"abhayspawar/featexp" -> "EliotAndres/kaggle-past-solutions" ["e"=1]
"abhayspawar/featexp" -> "scikit-learn-contrib/boruta_py"
"abhayspawar/featexp" -> "Far0n/xgbfi" ["e"=1]
"abhayspawar/featexp" -> "WillKoehrsen/automated-feature-engineering"
"tkrabel/edaviz" -> "tkrabel/bamboolib"
"ThoughtWorksInc/ml-app-template" -> "ThoughtWorksInc/ml-cd-starter-kit"
"tensorflow/estimator" -> "openxla/xprof"
"tensorflow/estimator" -> "tensorflow/transform"
"tensorflow/estimator" -> "tensorflow/metadata"
"tensorflow/estimator" -> "tensorflow/data-validation"
"tensorflow/estimator" -> "tensorflow/autograph"
"tensorflow/estimator" -> "tensorflow/io"
"tensorflow/estimator" -> "tensorflow/model-analysis"
"scikit-multiflow/scikit-multiflow" -> "Waikato/moa"
"scikit-multiflow/scikit-multiflow" -> "online-ml/river"
"scikit-multiflow/scikit-multiflow" -> "blablahaha/concept-drift"
"scikit-multiflow/scikit-multiflow" -> "alipsgh/tornado"
"scikit-multiflow/scikit-multiflow" -> "online-ml/awesome-online-machine-learning"
"scikit-multiflow/scikit-multiflow" -> "hmgomes/AdaptiveRandomForest"
"scikit-multiflow/scikit-multiflow" -> "SeldonIO/alibi-detect"
"scikit-multiflow/scikit-multiflow" -> "koaning/scikit-lego"
"scikit-multiflow/scikit-multiflow" -> "online-ml/deep-river"
"scikit-multiflow/scikit-multiflow" -> "alipsgh/data-streams"
"scikit-multiflow/scikit-multiflow" -> "scikit-multiflow/streaming-datasets"
"scikit-multiflow/scikit-multiflow" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"scikit-multiflow/scikit-multiflow" -> "doubleplusplus/incremental_decision_tree-CART-Random_Forest"
"scikit-multiflow/scikit-multiflow" -> "vlosing/driftDatasets"
"scikit-multiflow/scikit-multiflow" -> "sknetwork-team/scikit-network" ["e"=1]
"parrt/random-forest-importances" -> "SauceCat/PDPbox"
"parrt/random-forest-importances" -> "parrt/dtreeviz"
"parrt/random-forest-importances" -> "andosa/treeinterpreter"
"parrt/random-forest-importances" -> "parrt/stratx"
"parrt/random-forest-importances" -> "oracle/skater"
"parrt/random-forest-importances" -> "scikit-learn-contrib/forest-confidence-interval"
"parrt/random-forest-importances" -> "scikit-learn-contrib/boruta_py"
"parrt/random-forest-importances" -> "ModelOriented/DALEX"
"parrt/random-forest-importances" -> "manuel-calzolari/sklearn-genetic"
"parrt/random-forest-importances" -> "christophM/rulefit"
"parrt/random-forest-importances" -> "DistrictDataLabs/yellowbrick"
"parrt/random-forest-importances" -> "cod3licious/autofeat"
"parrt/random-forest-importances" -> "TeamHG-Memex/eli5"
"parrt/random-forest-importances" -> "AustinRochford/PyCEbox"
"parrt/random-forest-importances" -> "parrt/lolviz" ["e"=1]
"uber/bayesmark" -> "rdturnermtl/bbo_challenge_starter_kit"
"uber/bayesmark" -> "uber-research/TuRBO"
"uber/bayesmark" -> "aryandeshwal/HyBO"
"awslabs/adatune" -> "lucfra/FAR-HO"
"awslabs/adatune" -> "gbaydin/hypergradient-descent"
"awslabs/adatune" -> "lucfra/RFHO"
"awslabs/adatune" -> "fabianp/hoag"
"ShichenXie/scorecardpy" -> "amphibian-dev/toad"
"ShichenXie/scorecardpy" -> "taenggu0309/Scorecard--Function"
"ShichenXie/scorecardpy" -> "ShichenXie/scorecard"
"ShichenXie/scorecardpy" -> "boredbird/woe"
"ShichenXie/scorecardpy" -> "guillermo-navas-palencia/optbinning"
"ShichenXie/scorecardpy" -> "jstephenj14/Monotonic-WOE-Binning-Algorithm"
"ShichenXie/scorecardpy" -> "Lantianzz/Scorecard-Bundle"
"ShichenXie/scorecardpy" -> "finafily526/A_Model_of_Risk_Control"
"ShichenXie/scorecardpy" -> "hsz1273327/ScoreCardModel"
"ShichenXie/scorecardpy" -> "taenggu0309/Scorecard--Assessment"
"ShichenXie/scorecardpy" -> "itlubber/scorecardpipeline"
"ShichenXie/scorecardpy" -> "lavender28/Credit-Card-Score"
"ShichenXie/scorecardpy" -> "wepe/PPD_RiskControlCompetition" ["e"=1]
"ShichenXie/scorecardpy" -> "jpmml/sklearn2pmml"
"ShichenXie/scorecardpy" -> "WillKoehrsen/feature-selector"
"lavender28/Credit-Card-Score" -> "taenggu0309/Scorecard--Function"
"lavender28/Credit-Card-Score" -> "finafily526/A_Model_of_Risk_Control"
"lavender28/Credit-Card-Score" -> "huangxianyang/risk-model"
"lavender28/Credit-Card-Score" -> "htbeker/Application_score_card"
"lavender28/Credit-Card-Score" -> "LeronQ/score_logistic"
"lavender28/Credit-Card-Score" -> "taenggu0309/Scorecard--Assessment"
"taenggu0309/Scorecard--Function" -> "taenggu0309/Scorecard--Assessment"
"taenggu0309/Scorecard--Function" -> "finafily526/A_Model_of_Risk_Control"
"taenggu0309/Scorecard--Function" -> "Lantianzz/Scorecard-Bundle"
"taenggu0309/Scorecard--Function" -> "ShichenXie/scorecardpy"
"taenggu0309/Scorecard--Function" -> "amphibian-dev/toad"
"taenggu0309/Scorecard--Function" -> "lavender28/Credit-Card-Score"
"taenggu0309/Scorecard--Function" -> "taenggu0309/Semi-auto-modeling"
"taenggu0309/Scorecard--Function" -> "huangxianyang/risk-model"
"taenggu0309/Scorecard--Function" -> "Labryant/ScoreCard"
"taenggu0309/Scorecard--Function" -> "taenggu0309/PPD-Modeling-Competition"
"taenggu0309/Scorecard--Function" -> "Mensyne/scorecard_model"
"taenggu0309/Scorecard--Function" -> "lovemyfat/creditCard"
"taenggu0309/Scorecard--Function" -> "xsj0609/data_science"
"taenggu0309/Scorecard--Function" -> "itlubber/scorecardpipeline"
"taenggu0309/Scorecard--Function" -> "SailingHe/Automatic-scorecard-model"
"datmo/datmo" -> "akosiorek/forge"
"tensorflow/tfx" -> "google/ml-metadata"
"tensorflow/tfx" -> "tensorflow/model-analysis"
"tensorflow/tfx" -> "kubeflow/pipelines"
"tensorflow/tfx" -> "tensorflow/data-validation"
"tensorflow/tfx" -> "tensorflow/transform"
"tensorflow/tfx" -> "tensorflow/serving" ["e"=1]
"tensorflow/tfx" -> "tensorflow/io"
"tensorflow/tfx" -> "tensorflow/tfx-addons"
"tensorflow/tfx" -> "SeldonIO/seldon-core"
"tensorflow/tfx" -> "feast-dev/feast"
"tensorflow/tfx" -> "Building-ML-Pipelines/building-machine-learning-pipelines" ["e"=1]
"tensorflow/tfx" -> "kubeflow/kubeflow"
"tensorflow/tfx" -> "kubeflow/katib"
"tensorflow/tfx" -> "tensorflow/addons"
"tensorflow/tfx" -> "tensorflow/community"
"NVIDIA/framework-reproducibility" -> "openxla/xprof"
"lopusz/awesome-interpretable-machine-learning" -> "pbiecek/xai_resources"
"lopusz/awesome-interpretable-machine-learning" -> "jphall663/awesome-machine-learning-interpretability"
"lopusz/awesome-interpretable-machine-learning" -> "h2oai/mli-resources"
"lopusz/awesome-interpretable-machine-learning" -> "jphall663/interpretable_machine_learning_with_python"
"lopusz/awesome-interpretable-machine-learning" -> "EthicalML/xai"
"lopusz/awesome-interpretable-machine-learning" -> "oracle/skater"
"lopusz/awesome-interpretable-machine-learning" -> "marcoancona/DeepExplain" ["e"=1]
"lopusz/awesome-interpretable-machine-learning" -> "anguyen8/XAI-papers" ["e"=1]
"lopusz/awesome-interpretable-machine-learning" -> "andreysharapov/xaience" ["e"=1]
"lopusz/awesome-interpretable-machine-learning" -> "wangyongjie-ntu/Awesome-explainable-AI"
"lopusz/awesome-interpretable-machine-learning" -> "Trusted-AI/AIX360"
"lopusz/awesome-interpretable-machine-learning" -> "ModelOriented/DALEX"
"lopusz/awesome-interpretable-machine-learning" -> "hbaniecki/adversarial-explainable-ai" ["e"=1]
"lopusz/awesome-interpretable-machine-learning" -> "SauceCat/PDPbox"
"lopusz/awesome-interpretable-machine-learning" -> "oneTaken/awesome_deep_learning_interpretability"
"dssg/aequitas" -> "dssg/triage"
"dssg/aequitas" -> "Trusted-AI/AIF360"
"dssg/aequitas" -> "adebayoj/fairml"
"dssg/aequitas" -> "fairlearn/fairlearn"
"dssg/aequitas" -> "propublica/compas-analysis"
"dssg/aequitas" -> "algofairness/fairness-comparison"
"dssg/aequitas" -> "SeldonIO/alibi"
"dssg/aequitas" -> "dssg/fairness_tutorial"
"dssg/aequitas" -> "pymetrics/audit-ai"
"dssg/aequitas" -> "interpretml/DiCE"
"dssg/aequitas" -> "EthicalML/xai"
"dssg/aequitas" -> "dssg/hitchhikers-guide"
"dssg/aequitas" -> "mbilalzafar/fair-classification"
"dssg/aequitas" -> "google/ml-fairness-gym"
"dssg/aequitas" -> "ModelOriented/DALEX"
"openml/automlbenchmark" -> "automl/ConfigSpace"
"openml/automlbenchmark" -> "openml-labs/gama"
"openml/automlbenchmark" -> "openml/openml-python"
"openml/automlbenchmark" -> "openml/OpenML"
"openml/automlbenchmark" -> "ealcobaca/pymfe"
"openml/automlbenchmark" -> "automl/HpBandSter"
"openml/automlbenchmark" -> "automl/HPOBench"
"openml/automlbenchmark" -> "syne-tune/syne-tune" ["e"=1]
"openml/automlbenchmark" -> "windmaple/awesome-AutoML" ["e"=1]
"openml/automlbenchmark" -> "autogluon/tabrepo" ["e"=1]
"openml/automlbenchmark" -> "cod3licious/autofeat"
"openml/automlbenchmark" -> "slds-lmu/yahpo_gym"
"dabl/dabl" -> "engarde-dev/engarde" ["e"=1]
"dabl/dabl" -> "dask/dask-ml" ["e"=1]
"dabl/dabl" -> "koaning/scikit-lego"
"dabl/dabl" -> "kearnz/autoimpute"
"dabl/dabl" -> "dask/dask-searchcv" ["e"=1]
"dabl/dabl" -> "DistrictDataLabs/yellowbrick"
"dabl/dabl" -> "skrub-data/skrub"
"dabl/dabl" -> "luke14free/pm-prophet" ["e"=1]
"dabl/dabl" -> "pdpipe/pdpipe"
"dabl/dabl" -> "AutoViML/Auto_TS"
"dabl/dabl" -> "alegonz/baikal"
"dabl/dabl" -> "flennerhag/mlens"
"dabl/dabl" -> "TeamHG-Memex/eli5"
"dabl/dabl" -> "feature-engine/feature_engine"
"dabl/dabl" -> "abhayspawar/featexp"
"csinva/imodels" -> "scikit-learn-contrib/skope-rules"
"csinva/imodels" -> "feature-engine/feature_engine"
"csinva/imodels" -> "scikit-learn-contrib/MAPIE"
"csinva/imodels" -> "christophM/rulefit"
"csinva/imodels" -> "interpretml/DiCE"
"csinva/imodels" -> "koaning/scikit-lego"
"csinva/imodels" -> "AutoViML/featurewiz"
"csinva/imodels" -> "SelfExplainML/PiML-Toolbox" ["e"=1]
"csinva/imodels" -> "interpretml/interpret"
"csinva/imodels" -> "oegedijk/explainerdashboard"
"csinva/imodels" -> "MAIF/shapash"
"csinva/imodels" -> "ModelOriented/DALEX"
"csinva/imodels" -> "Ekeany/Boruta-Shap"
"csinva/imodels" -> "StatMixedML/XGBoostLSS"
"csinva/imodels" -> "stanfordmlgroup/ngboost"
"Han-JD/GRU-D" -> "PeterChe1990/GRU-D"
"Han-JD/GRU-D" -> "zhiyongc/GRU-D"
"Han-JD/GRU-D" -> "NIPS-BRITS/BRITS"
"Han-JD/GRU-D" -> "fteufel/PyTorch-GRU-D"
"Han-JD/GRU-D" -> "Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks"
"AutoViML/AutoViz" -> "AutoViML/Auto_ViML"
"AutoViML/AutoViz" -> "fbdesignpro/sweetviz"
"AutoViML/AutoViz" -> "sfu-db/dataprep"
"AutoViML/AutoViz" -> "AutoViML/featurewiz"
"AutoViML/AutoViz" -> "lux-org/lux"
"AutoViML/AutoViz" -> "man-group/dtale"
"AutoViML/AutoViz" -> "AutoViML/Auto_TS"
"AutoViML/AutoViz" -> "shankarpandala/lazypredict"
"AutoViML/AutoViz" -> "feature-engine/feature_engine"
"AutoViML/AutoViz" -> "ydataai/ydata-profiling"
"AutoViML/AutoViz" -> "pycaret/pycaret"
"AutoViML/AutoViz" -> "microsoft/FLAML"
"AutoViML/AutoViz" -> "oegedijk/explainerdashboard"
"AutoViML/AutoViz" -> "MAIF/shapash"
"AutoViML/AutoViz" -> "akanz1/klib"
"MLopez-Ibanez/irace" -> "souzamarcelo/acviz"
"stanfordmlgroup/ngboost" -> "StatMixedML/XGBoostLSS"
"stanfordmlgroup/ngboost" -> "StatMixedML/LightGBMLSS"
"stanfordmlgroup/ngboost" -> "fabsig/GPBoost"
"stanfordmlgroup/ngboost" -> "scikit-learn-contrib/MAPIE"
"stanfordmlgroup/ngboost" -> "scikit-learn-contrib/category_encoders"
"stanfordmlgroup/ngboost" -> "scikit-learn-contrib/boruta_py"
"stanfordmlgroup/ngboost" -> "Ekeany/Boruta-Shap"
"stanfordmlgroup/ngboost" -> "uber/orbit"
"stanfordmlgroup/ngboost" -> "feature-engine/feature_engine"
"stanfordmlgroup/ngboost" -> "mckinsey/causalnex" ["e"=1]
"stanfordmlgroup/ngboost" -> "koaning/scikit-lego"
"stanfordmlgroup/ngboost" -> "dreamquark-ai/tabnet" ["e"=1]
"stanfordmlgroup/ngboost" -> "interpretml/interpret"
"stanfordmlgroup/ngboost" -> "csinva/imodels"
"stanfordmlgroup/ngboost" -> "uber/causalml" ["e"=1]
"tensorflow/text" -> "tensorflow/tfx"
"tensorflow/text" -> "openxla/xprof"
"tensorflow/text" -> "tensorflow/addons"
"tensorflow/text" -> "keras-team/keras-hub"
"tensorflow/text" -> "tensorflow/transform"
"tensorflow/text" -> "tensorflow/model-optimization"
"tensorflow/text" -> "keras-team/keras-tuner"
"tensorflow/text" -> "tensorflow/estimator"
"tensorflow/text" -> "tensorflow/io"
"tensorflow/text" -> "tensorflow/hub"
"tensorflow/text" -> "tensorflow/decision-forests"
"tensorflow/text" -> "tensorflow/community"
"tensorflow/text" -> "tensorflow/ranking" ["e"=1]
"tensorflow/text" -> "tensorflow/runtime"
"tensorflow/text" -> "kpe/bert-for-tf2" ["e"=1]
"WillKoehrsen/automated-feature-engineering" -> "alteryx/Automated-Manual-Comparison"
"WillKoehrsen/automated-feature-engineering" -> "WillKoehrsen/feature-selector"
"WillKoehrsen/automated-feature-engineering" -> "WillKoehrsen/hyperparameter-optimization"
"WillKoehrsen/automated-feature-engineering" -> "WillKoehrsen/machine-learning-project-walkthrough" ["e"=1]
"WillKoehrsen/automated-feature-engineering" -> "WillKoehrsen/kaggle-automated-feature-engineering"
"WillKoehrsen/automated-feature-engineering" -> "dayeren/Kaggle_Competition_Treasure" ["e"=1]
"WillKoehrsen/automated-feature-engineering" -> "YC-Coder-Chen/feature-engineering-handbook"
"WillKoehrsen/automated-feature-engineering" -> "wepe/PPD_RiskControlCompetition" ["e"=1]
"WillKoehrsen/automated-feature-engineering" -> "boredbird/woe"
"WillKoehrsen/automated-feature-engineering" -> "duxuhao/Feature-Selection"
"WillKoehrsen/automated-feature-engineering" -> "aikho/awesome-feature-engineering"
"WillKoehrsen/hyperparameter-optimization" -> "WillKoehrsen/automated-feature-engineering"
"WillKoehrsen/hyperparameter-optimization" -> "WillKoehrsen/feature-selector"
"WillKoehrsen/hyperparameter-optimization" -> "hyperopt/hyperopt"
"WillKoehrsen/hyperparameter-optimization" -> "thuijskens/bayesian-optimization"
"WillKoehrsen/hyperparameter-optimization" -> "abhayspawar/featexp"
"WillKoehrsen/hyperparameter-optimization" -> "hyperopt/hyperopt-sklearn"
"WillKoehrsen/hyperparameter-optimization" -> "HunterMcGushion/hyperparameter_hunter"
"WillKoehrsen/hyperparameter-optimization" -> "WillKoehrsen/machine-learning-project-walkthrough" ["e"=1]
"WillKoehrsen/hyperparameter-optimization" -> "WillKoehrsen/wikipedia-data-science"
"WillKoehrsen/hyperparameter-optimization" -> "LiYangHart/Hyperparameter-Optimization-of-Machine-Learning-Algorithms" ["e"=1]
"WillKoehrsen/hyperparameter-optimization" -> "Vooban/Hyperopt-Keras-CNN-CIFAR-100"
"WillKoehrsen/hyperparameter-optimization" -> "bayesian-optimization/BayesianOptimization"
"WillKoehrsen/hyperparameter-optimization" -> "maxpumperla/hyperas"
"WillKoehrsen/hyperparameter-optimization" -> "TianFengshou/hyperopt-doc-zh"
"WillKoehrsen/hyperparameter-optimization" -> "WillKoehrsen/Machine-Learning-Projects" ["e"=1]
"SoftwareAG/nyoka" -> "SoftwareAG/r-pmml"
"SoftwareAG/nyoka" -> "autodeployai/pypmml"
"SoftwareAG/nyoka" -> "jpmml/sklearn2pmml"
"SoftwareAG/nyoka" -> "jpmml/jpmml-evaluator-python"
"SoftwareAG/nyoka" -> "autodeployai/pmml4s"
"SoftwareAG/nyoka" -> "autodeployai/ai-serving"
"amanahuja/change-detection-tutorial" -> "hildensia/bayesian_changepoint_detection"
"FlorentF9/DESOM" -> "FlorentF9/SOMperf"
"FlorentF9/DESOM" -> "FlorentF9/skstab"
"jmcarpenter2/swifter" -> "nalepae/pandarallel"
"jmcarpenter2/swifter" -> "modin-project/modin"
"jmcarpenter2/swifter" -> "vaexio/vaex"
"jmcarpenter2/swifter" -> "TeamHG-Memex/eli5"
"jmcarpenter2/swifter" -> "h2oai/datatable" ["e"=1]
"jmcarpenter2/swifter" -> "unionai-oss/pandera"
"jmcarpenter2/swifter" -> "scikit-learn-contrib/category_encoders"
"jmcarpenter2/swifter" -> "databricks/koalas" ["e"=1]
"jmcarpenter2/swifter" -> "ydataai/ydata-profiling"
"jmcarpenter2/swifter" -> "scikit-learn-contrib/imbalanced-learn"
"jmcarpenter2/swifter" -> "microsoft/hummingbird"
"jmcarpenter2/swifter" -> "ResidentMario/missingno"
"jmcarpenter2/swifter" -> "DistrictDataLabs/yellowbrick"
"jmcarpenter2/swifter" -> "skorch-dev/skorch"
"jmcarpenter2/swifter" -> "quantopian/qgrid" ["e"=1]
"alteryx/predict-appointment-noshow" -> "Featuretools/predict-household-poverty"
"alteryx/predict-appointment-noshow" -> "Featuretools/predict-correct-answer"
"alteryx/predict-appointment-noshow" -> "alteryx/predict-malicious-cyber-connections"
"WillKoehrsen/wikipedia-data-science" -> "DOsinga/deep_learning_cookbook"
"WillKoehrsen/wikipedia-data-science" -> "WillKoehrsen/hyperparameter-optimization"
"WillKoehrsen/wikipedia-data-science" -> "entron/entity-embedding-rossmann" ["e"=1]
"WillKoehrsen/wikipedia-data-science" -> "WillKoehrsen/automated-feature-engineering"
"WillKoehrsen/wikipedia-data-science" -> "alteryx/Automated-Manual-Comparison"
"WillKoehrsen/wikipedia-data-science" -> "WillKoehrsen/machine-learning-project-walkthrough" ["e"=1]
"WillKoehrsen/wikipedia-data-science" -> "wzhe06/Reco-papers" ["e"=1]
"WillKoehrsen/wikipedia-data-science" -> "hexiangnan/neural_collaborative_filtering" ["e"=1]
"jmschrei/apricot" -> "decile-team/submodlib" ["e"=1]
"jmschrei/apricot" -> "EpistasisLab/scikit-rebate"
"jmschrei/apricot" -> "decile-team/cords" ["e"=1]
"jmschrei/apricot" -> "scikit-tda/kepler-mapper" ["e"=1]
"jmschrei/apricot" -> "jmschrei/avocado"
"StatMixedML/XGBoostLSS" -> "StatMixedML/LightGBMLSS"
"StatMixedML/XGBoostLSS" -> "stanfordmlgroup/ngboost"
"StatMixedML/XGBoostLSS" -> "StatMixedML/CatBoostLSS"
"StatMixedML/XGBoostLSS" -> "fabsig/GPBoost"
"StatMixedML/XGBoostLSS" -> "CDonnerer/xgboost-distribution"
"StatMixedML/XGBoostLSS" -> "abhishekkrthakur/autoxgb" ["e"=1]
"StatMixedML/XGBoostLSS" -> "AutoViML/featurewiz"
"StatMixedML/XGBoostLSS" -> "scikit-learn-contrib/MAPIE"
"StatMixedML/XGBoostLSS" -> "Ekeany/Boruta-Shap"
"StatMixedML/XGBoostLSS" -> "Nixtla/tsfeatures"
"StatMixedML/XGBoostLSS" -> "cerlymarco/shap-hypetune"
"StatMixedML/XGBoostLSS" -> "zillow/quantile-forest"
"StatMixedML/XGBoostLSS" -> "cerlymarco/linear-tree"
"StatMixedML/XGBoostLSS" -> "henrikbostrom/crepes" ["e"=1]
"StatMixedML/XGBoostLSS" -> "csinva/imodels"
"djbolder/credit-risk-modelling" -> "jalajthanaki/credit-risk-modelling"
"djbolder/credit-risk-modelling" -> "hankkuang/creditRiskCScoreCard"
"djbolder/credit-risk-modelling" -> "open-risk/transitionMatrix"
"djbolder/credit-risk-modelling" -> "finlytics-hub/credit_risk_model"
"djbolder/credit-risk-modelling" -> "naenumtou/ifrs9"
"yzhao062/awesome-ensemble-learning" -> "yzhao062/combo"
"yzhao062/awesome-ensemble-learning" -> "flennerhag/mlens"
"yzhao062/awesome-ensemble-learning" -> "e-271/awesome-few-shot-learning" ["e"=1]
"fuqiuai/sklearn-feature-engineering" -> "jiangzhongkai/CCF-2018-TeleCOM"
"fuqiuai/sklearn-feature-engineering" -> "angeliababy/houseprice_regression"
"fuqiuai/sklearn-feature-engineering" -> "huangxianyang/Predicting-Loan-Repayment-with-Automated-Feature-Engineering-in-Featuretools"
"trainindata/deploying-machine-learning-models" -> "trainindata/testing-and-monitoring-ml-deployments"
"trainindata/deploying-machine-learning-models" -> "solegalli/feature-selection-for-machine-learning"
"trainindata/deploying-machine-learning-models" -> "solegalli/feature-engineering-for-machine-learning"
"trainindata/deploying-machine-learning-models" -> "feature-engine/feature_engine"
"trainindata/deploying-machine-learning-models" -> "solegalli/machine-learning-imbalanced-data"
"trainindata/deploying-machine-learning-models" -> "trainindata/dmlm-research-and-production"
"trainindata/deploying-machine-learning-models" -> "solegalli/hyperparameter-optimization"
"trainindata/deploying-machine-learning-models" -> "trainindata/feature-engineering-for-time-series-forecasting"
"trainindata/deploying-machine-learning-models" -> "https-deeplearning-ai/machine-learning-engineering-for-production-public"
"trainindata/deploying-machine-learning-models" -> "paiml/practical-mlops-book" ["e"=1]
"trainindata/deploying-machine-learning-models" -> "GoogleCloudPlatform/ml-design-patterns" ["e"=1]
"trainindata/deploying-machine-learning-models" -> "GokuMohandas/mlops-course" ["e"=1]
"trainindata/deploying-machine-learning-models" -> "Building-ML-Pipelines/building-machine-learning-pipelines" ["e"=1]
"trainindata/deploying-machine-learning-models" -> "the-full-stack/fsdl-text-recognizer-2021-labs" ["e"=1]
"trainindata/deploying-machine-learning-models" -> "lazyprogrammer/machine_learning_examples" ["e"=1]
"blent-ai/ALEPython" -> "DanaJomar/PyALE"
"blent-ai/ALEPython" -> "SauceCat/PDPbox"
"OctoberChang/klcpd_code" -> "deryckt/TIRE"
"OctoberChang/klcpd_code" -> "daisuke-motoki/change_point_detector"
"charmlab/mace" -> "ustunb/actionable-recourse"
"charmlab/mace" -> "charliemarx/pmtools"
"charmlab/mace" -> "divyat09/cf-feasibility"
"charmlab/mace" -> "MartinPawel/c-chvae"
"charmlab/mace" -> "charmlab/recourse"
"jsyoon0823/GAIN" -> "dhanajitb/GAIN-Pytorch"
"jsyoon0823/GAIN" -> "steveli/misgan"
"jsyoon0823/GAIN" -> "Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks"
"jsyoon0823/GAIN" -> "caow13/BRITS"
"jsyoon0823/GAIN" -> "Luoyonghong/E2EGAN"
"jsyoon0823/GAIN" -> "IvanBongiorni/GAN-RNN_Timeseries-imputation"
"jsyoon0823/GAIN" -> "lethaiq/GAIN"
"jsyoon0823/GAIN" -> "WenjieDu/SAITS"
"jsyoon0823/GAIN" -> "iskandr/fancyimpute"
"jsyoon0823/GAIN" -> "Graph-Machine-Learning-Group/grin" ["e"=1]
"jsyoon0823/GAIN" -> "epsilon-machine/missingpy"
"jsyoon0823/GAIN" -> "spindro/GINN"
"jsyoon0823/GAIN" -> "rcamino/imputation-dgm"
"jsyoon0823/GAIN" -> "eltonlaw/impyute"
"jsyoon0823/GAIN" -> "OpenIDEA-YunanUniversity/ycimpute"
"taenggu0309/PPD-Modeling-Competition" -> "taenggu0309/Scorecard--Assessment"
"mm-mansour/Fast-Pandas" -> "RedaOps/ann-visualizer"
"mm-mansour/Fast-Pandas" -> "henripal/labnotebook"
"mm-mansour/Fast-Pandas" -> "dfouhey/caffe64"
"mm-mansour/Fast-Pandas" -> "minimaxir/person-blocker"
"mm-mansour/Fast-Pandas" -> "kkyon/botflow" ["e"=1]
"mm-mansour/Fast-Pandas" -> "alexmojaki/birdseye" ["e"=1]
"mm-mansour/Fast-Pandas" -> "ContextLab/hypertools"
"mm-mansour/Fast-Pandas" -> "Squarespace/datasheets" ["e"=1]
"mm-mansour/Fast-Pandas" -> "instacart/lore"
"mm-mansour/Fast-Pandas" -> "reiinakano/scikit-plot"
"mm-mansour/Fast-Pandas" -> "spotify/chartify"
"mm-mansour/Fast-Pandas" -> "reiinakano/xcessiv"
"mm-mansour/Fast-Pandas" -> "snipsco/snips-nlu" ["e"=1]
"mm-mansour/Fast-Pandas" -> "TeamHG-Memex/eli5"
"mm-mansour/Fast-Pandas" -> "d6t/d6tflow"
"pymetrics/audit-ai" -> "algofairness/fairness-comparison"
"pymetrics/audit-ai" -> "adebayoj/fairml"
"pymetrics/audit-ai" -> "columbia/fairtest"
"pymetrics/audit-ai" -> "cosmicBboy/themis-ml"
"pymetrics/audit-ai" -> "algofairness/BlackBoxAuditing"
"pymetrics/audit-ai" -> "dssg/aequitas"
"WillKoehrsen/pytorch_challenge" -> "WillKoehrsen/neural-networks"
"WillKoehrsen/pytorch_challenge" -> "WillKoehrsen/mastering-large-datasets"
"WillKoehrsen/pytorch_challenge" -> "WillKoehrsen/kaggle-automated-feature-engineering"
"duxuhao/Feature-Selection" -> "plantsgo/ijcai-2018" ["e"=1]
"duxuhao/Feature-Selection" -> "YouChouNoBB/ijcai-18-top2-single-mole-solution" ["e"=1]
"duxuhao/Feature-Selection" -> "jundongl/scikit-feature"
"duxuhao/Feature-Selection" -> "kaushalshetty/FeatureSelectionGA"
"duxuhao/Feature-Selection" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"duxuhao/Feature-Selection" -> "luoda888/2018-IJCAI-top3" ["e"=1]
"duxuhao/Feature-Selection" -> "duxuhao/JData-2018" ["e"=1]
"duxuhao/Feature-Selection" -> "luoda888/tianchi-diabetes-top12" ["e"=1]
"duxuhao/Feature-Selection" -> "nzc/dnn_ctr" ["e"=1]
"duxuhao/Feature-Selection" -> "scikit-learn-contrib/boruta_py"
"duxuhao/Feature-Selection" -> "danielhomola/mifs"
"duxuhao/Feature-Selection" -> "WillKoehrsen/feature-selector"
"duxuhao/Feature-Selection" -> "anujdutt9/Feature-Selection-for-Machine-Learning"
"duxuhao/Feature-Selection" -> "dayeren/Kaggle_Competition_Treasure" ["e"=1]
"duxuhao/Feature-Selection" -> "nzc/tencent-contest" ["e"=1]
"IBM/MAX-Framework" -> "IBM/MAX-Skeleton"
"IBM/MAX-Framework" -> "CODAIT/node-red-contrib-model-asset-exchange"
"srome/pykliep" -> "hoxo-m/densratio_py"
"IOHprofiler/IOHexperimenter" -> "IOHprofiler/IOHanalyzer"
"IOHprofiler/IOHexperimenter" -> "IOHprofiler/ModularCMAES"
"IOHprofiler/IOHexperimenter" -> "nikivanstein/GSAreport"
"IOHprofiler/IOHexperimenter" -> "XAI-liacs/LLaMEA"
"chl8856/DeepHit" -> "jaredleekatzman/DeepSurv"
"chl8856/DeepHit" -> "chl8856/Dynamic-DeepHit"
"chl8856/DeepHit" -> "rk2900/DRSA"
"chl8856/DeepHit" -> "autonlab/auton-survival"
"chl8856/DeepHit" -> "havakv/pycox"
"chl8856/DeepHit" -> "czifan/DeepSurv.pytorch"
"chl8856/DeepHit" -> "liupei101/TFDeepSurv"
"chl8856/DeepHit" -> "MI2DataLab/survshap"
"chl8856/DeepHit" -> "robi56/Survival-Analysis-using-Deep-Learning"
"chl8856/DeepHit" -> "ryancburke/DNN_survival"
"chl8856/DeepHit" -> "square/pysurvival"
"chl8856/DeepHit" -> "RyanWangZf/SurvTRACE"
"chl8856/DeepHit" -> "arturomoncadatorres/deepsurvk"
"chl8856/DeepHit" -> "sebp/scikit-survival"
"chl8856/DeepHit" -> "PathologyDataScience/SurvivalNet"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/authentication_course"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/build-gmail-clone-with-vue-3"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/beautify-with-vuetify"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/animating-vue"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/real-world-nuxt"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/vue-3-reactivity"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/real-world-vue"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/Unit-Testing-Vue2"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/Vue-2-to-Vue-3"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/Unit-Testing-Vue-3"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/graphql-client"
"Code-Pop/watch-us-build-trello" -> "Code-Pop/build-a-blog-with-nuxt-3-and-nuxt-content-v2"
"solegalli/feature-engineering-for-machine-learning" -> "solegalli/feature-selection-for-machine-learning"
"solegalli/feature-engineering-for-machine-learning" -> "solegalli/machine-learning-imbalanced-data"
"solegalli/feature-engineering-for-machine-learning" -> "solegalli/hyperparameter-optimization"
"solegalli/feature-engineering-for-machine-learning" -> "trainindata/feature-engineering-for-time-series-forecasting"
"solegalli/feature-engineering-for-machine-learning" -> "ashishpatel26/Amazing-Feature-Engineering" ["e"=1]
"solegalli/feature-engineering-for-machine-learning" -> "trainindata/deploying-machine-learning-models"
"solegalli/feature-engineering-for-machine-learning" -> "trainindata/testing-and-monitoring-ml-deployments"
"ericmjl/dl-workshop" -> "blackjax-devs/sampling-book" ["e"=1]
"d6t/d6tpipe" -> "d6t/d6tflow"
"d6t/d6tpipe" -> "d6t/d6t-python"
"d6t/d6tpipe" -> "d6t/d6tjoin"
"ThoughtWorksInc/cd4ml-workshop" -> "ThoughtWorksInc/CD4ML-Scenarios"
"ThoughtWorksInc/cd4ml-workshop" -> "bgweber/DS_Production"
"ThoughtWorksInc/cd4ml-workshop" -> "ThoughtWorksInc/ml-cd-starter-kit"
"ThoughtWorksInc/cd4ml-workshop" -> "ThoughtWorksInc/ml-app-template"
"ThoughtWorksInc/cd4ml-workshop" -> "thoughtworks/twde-datalab"
"jpmml/jpmml-evaluator" -> "openscoring/openscoring"
"jpmml/jpmml-evaluator" -> "jpmml/sklearn2pmml"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-model"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-sklearn"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-sparkml"
"jpmml/jpmml-evaluator" -> "pjpan/PPJUtils"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-xgboost"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-lightgbm"
"jpmml/jpmml-evaluator" -> "combust/mleap" ["e"=1]
"jpmml/jpmml-evaluator" -> "jpmml/pyspark2pmml"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-android"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-evaluator-spark"
"jpmml/jpmml-evaluator" -> "komiya-atsushi/xgboost-predictor-java" ["e"=1]
"jpmml/jpmml-evaluator" -> "FlinkML/flink-jpmml" ["e"=1]
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-tensorflow"
"jkrijthe/Rtsne" -> "jlmelville/uwot"
"jkrijthe/Rtsne" -> "tkonopka/umap"
"cod3licious/autofeat" -> "Ekeany/Boruta-Shap"
"cod3licious/autofeat" -> "AutoViML/featurewiz"
"cod3licious/autofeat" -> "feature-engine/feature_engine"
"cod3licious/autofeat" -> "AutoViML/Auto_ViML"
"cod3licious/autofeat" -> "christophM/rulefit"
"cod3licious/autofeat" -> "alteryx/evalml"
"cod3licious/autofeat" -> "cerlymarco/shap-hypetune"
"cod3licious/autofeat" -> "scikit-learn-contrib/boruta_py"
"cod3licious/autofeat" -> "predict-idlab/tsflex"
"cod3licious/autofeat" -> "aerdem4/lofo-importance"
"cod3licious/autofeat" -> "StatMixedML/LightGBMLSS"
"cod3licious/autofeat" -> "predict-idlab/powershap"
"cod3licious/autofeat" -> "AutoViML/Auto_TS"
"cod3licious/autofeat" -> "kaushalshetty/FeatureSelectionGA"
"cod3licious/autofeat" -> "cerlymarco/linear-tree"
"alteryx/open_source_demos" -> "alteryx/predict-customer-churn"
"alteryx/open_source_demos" -> "Featuretools/predict-correct-answer"
"alteryx/open_source_demos" -> "alteryx/Automated-Manual-Comparison"
"alteryx/open_source_demos" -> "alteryx/compose"
"alteryx/open_source_demos" -> "alteryx/predict-remaining-useful-life" ["e"=1]
"alteryx/open_source_demos" -> "alteryx/featuretools"
"alteryx/open_source_demos" -> "Featuretools/predict-household-poverty"
"alteryx/open_source_demos" -> "alteryx/predict-malicious-cyber-connections"
"alteryx/open_source_demos" -> "alteryx/predict-olympic-medals"
"alteryx/open_source_demos" -> "MLBazaar/BTB"
"alteryx/open_source_demos" -> "alteryx/predict-loan-repayment"
"alteryx/open_source_demos" -> "cod3licious/autofeat"
"alteryx/open_source_demos" -> "StatMixedML/LightGBMLSS"
"alteryx/open_source_demos" -> "alteryx/evalml"
"WillKoehrsen/taxi-fare" -> "WillKoehrsen/neural-networks"
"WillKoehrsen/taxi-fare" -> "WillKoehrsen/airbus"
"CMA-ES/libcmaes" -> "CMA-ES/c-cmaes"
"CMA-ES/libcmaes" -> "dietmarwo/fast-cma-es"
"CMA-ES/libcmaes" -> "CMA-ES/pycma"
"CMA-ES/libcmaes" -> "numbbo/coco"
"CMA-ES/libcmaes" -> "resibots/blackdrops"
"CMA-ES/libcmaes" -> "CyberAgentAILab/cmaes"
"CMA-ES/libcmaes" -> "ppocma/ppocma"
"CMA-ES/libcmaes" -> "NiMlr/High-Dim-ES-RL" ["e"=1]
"CMA-ES/libcmaes" -> "resibots/limbo"
"cosmicBboy/themis-ml" -> "AustinRochford/PyCEbox"
"cosmicBboy/themis-ml" -> "algofairness/fairness-comparison"
"cosmicBboy/themis-ml" -> "adebayoj/fairml"
"cosmicBboy/themis-ml" -> "ayong8/FairSight"
"cosmicBboy/themis-ml" -> "SauceCat/PDPbox"
"uber-research/parallax" -> "koaning/whatlies"
"asl/rssa" -> "VSainteuf/mcssa"
"hyperopt/hyperopt-nnet" -> "hyperopt/hyperopt-convnet"
"Waikato/weka-3.8" -> "Waikato/wekaDeeplearning4j"
"Waikato/weka-3.8" -> "Waikato/weka-trunk"
"yongkaiwu/FairAI" -> "brandeis-machine-learning/awesome-ml-fairness"
"sdv-dev/Copulas" -> "DanielBok/copulae"
"sdv-dev/Copulas" -> "blent-ai/pycopula"
"sdv-dev/Copulas" -> "maximenc/pycop"
"sdv-dev/Copulas" -> "sdv-dev/RDT"
"sdv-dev/Copulas" -> "sdv-dev/SDGym"
"sdv-dev/Copulas" -> "vinecopulib/pyvinecopulib"
"sdv-dev/Copulas" -> "sdv-dev/SDMetrics"
"sdv-dev/Copulas" -> "sdv-dev/CTGAN"
"sdv-dev/Copulas" -> "tnagler/VineCopula"
"sdv-dev/Copulas" -> "sdv-dev/SDV"
"sdv-dev/Copulas" -> "asnelt/mixedvines"
"sdv-dev/Copulas" -> "sdv-dev/DeepEcho"
"sdv-dev/Copulas" -> "MLBazaar/BTB"
"sdv-dev/Copulas" -> "bashtage/arch" ["e"=1]
"IBM/MAX-Sports-Video-Classifier" -> "IBM/MAX-News-Text-Generator"
"riken-aip/pyHSICLasso" -> "amber0309/HSIC"
"riken-aip/pyHSICLasso" -> "tobias-freidling/hsic-lasso-psi"
"ropensci-archive/umapr" -> "tkonopka/umap"
"ropensci-archive/umapr" -> "jlmelville/uwot"
"ropensci-archive/umapr" -> "zeehio/ggpipe"
"DanielBok/copulae" -> "blent-ai/pycopula"
"DanielBok/copulae" -> "sdv-dev/Copulas"
"DanielBok/copulae" -> "maximenc/pycop"
"DanielBok/copulae" -> "vinecopulib/pyvinecopulib"
"DanielBok/copulae" -> "DanielBok/muarch"
"sapphire921/midas_pro" -> "Yoseph-Zuskin/midaspy"
"sapphire921/midas_pro" -> "mikemull/midaspy"
"oracle/graphpipe" -> "csxeba/evolute"
"oracle/graphpipe" -> "oracle/graphpipe-go"
"oracle/graphpipe" -> "MagNet-DL/magnet"
"oracle/graphpipe" -> "tensorflow/model-analysis"
"oracle/graphpipe" -> "ucbrise/clipper"
"oracle/graphpipe" -> "oracle/graphpipe-py"
"oracle/graphpipe" -> "oracle/graphpipe-tf-py"
"oracle/graphpipe" -> "salesforce/TransmogrifAI"
"WenjieZ/TSCV" -> "sam31415/timeseriescv" ["e"=1]
"WenjieZ/TSCV" -> "Nixtla/tsfeatures"
"WenjieZ/TSCV" -> "predict-idlab/powershap"
"jonfink/GP" -> "mblum/libgp"
"jonfink/GP" -> "SheffieldML/GPc"
"jonfink/GP" -> "nw2190/CppGPs"
"statice/awesome-synthetic-data" -> "gretelai/awesome-synthetic-data"
"jamesrobertlloyd/gpss-research" -> "jamesrobertlloyd/gp-structure-search"
"jamesrobertlloyd/gpss-research" -> "duvenaud/phd-thesis"
"kubeflow/manifests" -> "kubeflow/pipelines"
"kubeflow/manifests" -> "kubeflow/examples" ["e"=1]
"kubeflow/manifests" -> "kubeflow/trainer" ["e"=1]
"kubeflow/manifests" -> "shikanon/kubeflow-manifests" ["e"=1]
"kubeflow/manifests" -> "kubeflow/katib"
"kubeflow/manifests" -> "kserve/kserve"
"kubeflow/manifests" -> "kubeflow-kale/kale"
"kubeflow/manifests" -> "kubeflow/kfctl"
"kubeflow/manifests" -> "awslabs/kubeflow-manifests"
"kubeflow/manifests" -> "deployKF/deployKF"
"kubeflow/manifests" -> "kubeflow/arena" ["e"=1]
"kubeflow/manifests" -> "kubeflow/kubeflow"
"kubeflow/manifests" -> "argoflow/argoflow" ["e"=1]
"kubeflow/manifests" -> "elyra-ai/elyra"
"kubeflow/manifests" -> "kubeflow/website"
"alteryx/predict-taxi-trip-duration" -> "alteryx/predict-appointment-noshow"
"alteryx/predict-taxi-trip-duration" -> "Featuretools/predict-household-poverty"
"alteryx/predict-taxi-trip-duration" -> "Featuretools/predict-correct-answer"
"lucfra/FAR-HO" -> "lucfra/RFHO"
"lucfra/FAR-HO" -> "prolearner/hyper-representation"
"lucfra/FAR-HO" -> "fabianp/hoag"
"lucfra/FAR-HO" -> "awslabs/adatune"
"lucfra/FAR-HO" -> "prolearner/hypertorch"
"lucfra/FAR-HO" -> "automl/BOAH"
"lucfra/FAR-HO" -> "callous-youth/BOML" ["e"=1]
"lucfra/FAR-HO" -> "lorraine2/implicit-hyper-opt"
"caow13/BRITS" -> "NIPS-BRITS/BRITS"
"caow13/BRITS" -> "Luoyonghong/E2EGAN"
"caow13/BRITS" -> "Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks"
"caow13/BRITS" -> "Graph-Machine-Learning-Group/grin" ["e"=1]
"caow13/BRITS" -> "jsyoon0823/MRNN"
"caow13/BRITS" -> "jsyoon0823/GAIN"
"caow13/BRITS" -> "felixykliu/NAOMI"
"caow13/BRITS" -> "ratschlab/GP-VAE"
"caow13/BRITS" -> "WenjieDu/SAITS"
"caow13/BRITS" -> "ivivan/SSIM_Seq2Seq"
"caow13/BRITS" -> "zhiyongc/GRU-D"
"caow13/BRITS" -> "PeterChe1990/GRU-D"
"caow13/BRITS" -> "spindro/GINN"
"caow13/BRITS" -> "iskandr/fancyimpute"
"d6t/d6tstack" -> "d6t/d6tjoin"
"MagNet-DL/magnet" -> "csxeba/evolute"
"MagNet-DL/magnet" -> "oracle/graphpipe"
"IBM/MAX-Text-Sentiment-Classifier" -> "IBM/MAX-Question-Answering"
"ericandrewlewis/wp-media-javascript-guide" -> "ocean90/media-modal-demo"
"ericandrewlewis/wp-media-javascript-guide" -> "xwp/wp-dev-lib" ["e"=1]
"journeyH/debtDefaultResearch" -> "angeliababy/houseprice_regression"
"amphibian-dev/toad" -> "ShichenXie/scorecardpy"
"amphibian-dev/toad" -> "taenggu0309/Scorecard--Function"
"amphibian-dev/toad" -> "guillermo-navas-palencia/optbinning"
"amphibian-dev/toad" -> "itlubber/scorecardpipeline"
"amphibian-dev/toad" -> "boredbird/woe"
"amphibian-dev/toad" -> "Lantianzz/Scorecard-Bundle"
"amphibian-dev/toad" -> "taenggu0309/Scorecard--Assessment"
"amphibian-dev/toad" -> "finafily526/A_Model_of_Risk_Control"
"amphibian-dev/toad" -> "ShichenXie/scorecard"
"amphibian-dev/toad" -> "taenggu0309/Semi-auto-modeling"
"amphibian-dev/toad" -> "xsj0609/data_science"
"amphibian-dev/toad" -> "hczheng/Rong360" ["e"=1]
"amphibian-dev/toad" -> "jstephenj14/Monotonic-WOE-Binning-Algorithm"
"amphibian-dev/toad" -> "chenkkkk/User-loan-risk-prediction" ["e"=1]
"amphibian-dev/toad" -> "wikke/ppdai_risk_evaluation" ["e"=1]
"gevaertlab/MultimodalPrognosis" -> "huangzhii/SALMON"
"jsilter/parametric_tsne" -> "kylemcdonald/Parametric-t-SNE"
"jsilter/parametric_tsne" -> "zaburo-ch/Parametric-t-SNE-in-Keras"
"jsilter/parametric_tsne" -> "luke0201/parametric-tsne-keras"
"liupei101/TFDeepSurv" -> "jaredleekatzman/DeepSurv"
"liupei101/TFDeepSurv" -> "arturomoncadatorres/deepsurvk"
"liupei101/TFDeepSurv" -> "rk2900/DRSA"
"liupei101/TFDeepSurv" -> "chl8856/DeepHit"
"liupei101/TFDeepSurv" -> "mexchy1000/DeepSurv_Keras"
"jaberg/hyperopt" -> "JasperSnoek/spearmint"
"jaberg/hyperopt" -> "HIPS/Spearmint"
"jaberg/hyperopt" -> "uoguelph-mlrg/theano_alexnet" ["e"=1]
"jaberg/hyperopt" -> "Yelp/MOE"
"jaberg/hyperopt" -> "hyperopt/hyperopt"
"jaberg/hyperopt" -> "automl/RoBO"
"jaberg/hyperopt" -> "zygmuntz/hyperband"
"jaberg/hyperopt" -> "hyperopt/hyperopt-sklearn"
"jaberg/hyperopt" -> "miyyer/dan"
"jaberg/hyperopt" -> "SheffieldML/GPyOpt"
"Qihoo360/blackwidow" -> "KernelMaker/rocksutil" ["e"=1]
"Qihoo360/blackwidow" -> "RocksLabs/kvrocks_exporter"
"NIPS-BRITS/BRITS" -> "caow13/BRITS"
"NIPS-BRITS/BRITS" -> "Han-JD/GRU-D"
"NIPS-BRITS/BRITS" -> "Luoyonghong/E2EGAN"
"NIPS-BRITS/BRITS" -> "jsyoon0823/MRNN"
"NIPS-BRITS/BRITS" -> "felixykliu/NAOMI"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "Luoyonghong/E2EGAN"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "caow13/BRITS"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "jsyoon0823/GAIN"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "IvanBongiorni/GAN-RNN_Timeseries-imputation"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "Han-JD/GRU-D"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "NIPS-BRITS/BRITS"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "PeterChe1990/GRU-D"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "zhiyongc/GRU-D"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "xinychen/transdim" ["e"=1]
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "steveli/misgan"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "WenjieDu/SAITS"
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" -> "felixykliu/NAOMI"
"Luoyonghong/E2EGAN" -> "Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks"
"Luoyonghong/E2EGAN" -> "caow13/BRITS"
"Luoyonghong/E2EGAN" -> "felixykliu/NAOMI"
"Luoyonghong/E2EGAN" -> "jsyoon0823/MRNN"
"Luoyonghong/E2EGAN" -> "NIPS-BRITS/BRITS"
"Luoyonghong/E2EGAN" -> "ivivan/SSIM_Seq2Seq"
"duvenaud/phd-thesis" -> "jamesrobertlloyd/gpss-research"
"duvenaud/phd-thesis" -> "jamesrobertlloyd/gp-structure-search"
"Axlgrep/pika-tools" -> "KCacheTeam/pika-tools"
"AutoViML/Auto_ViML" -> "AutoViML/AutoViz"
"AutoViML/Auto_ViML" -> "AutoViML/featurewiz"
"AutoViML/Auto_ViML" -> "AutoViML/Auto_TS"
"AutoViML/Auto_ViML" -> "alteryx/evalml"
"AutoViML/Auto_ViML" -> "AutoViML/deep_autoviml"
"AutoViML/Auto_ViML" -> "cod3licious/autofeat"
"AutoViML/Auto_ViML" -> "cerlymarco/shap-hypetune"
"AutoViML/Auto_ViML" -> "Ekeany/Boruta-Shap"
"AutoViML/Auto_ViML" -> "feature-engine/feature_engine"
"AutoViML/Auto_ViML" -> "cerlymarco/linear-tree"
"AutoViML/Auto_ViML" -> "mljar/mljar-supervised"
"AutoViML/Auto_ViML" -> "smazzanti/mrmr"
"AutoViML/Auto_ViML" -> "AxeldeRomblay/MLBox"
"AutoViML/Auto_ViML" -> "aimclub/FEDOT" ["e"=1]
"AutoViML/Auto_ViML" -> "StatMixedML/LightGBMLSS"
"hackalog/easydata" -> "hackalog/bus_number"
"alteryx/compose" -> "alteryx/evalml"
"alteryx/compose" -> "alteryx/woodwork"
"alteryx/compose" -> "alteryx/nlp_primitives"
"alteryx/compose" -> "alteryx/autonormalize"
"alteryx/compose" -> "alteryx/categorical_encoding"
"alteryx/compose" -> "alteryx/featuretools-tsfresh-primitives"
"alteryx/compose" -> "AutoViML/featurewiz"
"alteryx/compose" -> "alteryx/open_source_demos"
"alteryx/compose" -> "MLBazaar/Cardea"
"IBM/MAX-Skeleton" -> "IBM/MAX-Framework"
"kearnz/autoimpute" -> "eltonlaw/impyute"
"kearnz/autoimpute" -> "AnotherSamWilson/miceforest"
"kearnz/autoimpute" -> "awslabs/datawig"
"kearnz/autoimpute" -> "MaxHalford/starboost"
"yzhao062/combo" -> "yzhao062/SUOD" ["e"=1]
"yzhao062/combo" -> "yzhao062/awesome-ensemble-learning"
"yzhao062/combo" -> "alshedivat/meta-blocks"
"yzhao062/combo" -> "scikit-learn-contrib/DESlib"
"yzhao062/combo" -> "wepe/efficient-decision-tree-notes" ["e"=1]
"yzhao062/combo" -> "amphibian-dev/toad"
"yzhao062/combo" -> "ShichenXie/scorecardpy"
"yzhao062/combo" -> "flennerhag/mlens"
"yzhao062/combo" -> "scikit-learn-contrib/stability-selection"
"yzhao062/combo" -> "ZhiningLiu1998/self-paced-ensemble" ["e"=1]
"yzhao062/combo" -> "Pysamlam/Tips-of-Feature-engineering" ["e"=1]
"yzhao062/combo" -> "HunterMcGushion/hyperparameter_hunter"
"yzhao062/combo" -> "boredbird/woe"
"yzhao062/combo" -> "taenggu0309/Scorecard--Function"
"yzhao062/combo" -> "scikit-learn-contrib/category_encoders"
"aerdem4/lofo-importance" -> "Ekeany/Boruta-Shap"
"aerdem4/lofo-importance" -> "scikit-learn-contrib/boruta_py"
"aerdem4/lofo-importance" -> "cod3licious/autofeat"
"aerdem4/lofo-importance" -> "AutoViML/featurewiz"
"aerdem4/lofo-importance" -> "feature-engine/feature_engine"
"aerdem4/lofo-importance" -> "koaning/scikit-lego"
"aerdem4/lofo-importance" -> "ModelOriented/DALEX"
"aerdem4/lofo-importance" -> "stanfordmlgroup/ngboost"
"aerdem4/lofo-importance" -> "ThomasBury/arfs"
"aerdem4/lofo-importance" -> "cerlymarco/shap-hypetune"
"aerdem4/lofo-importance" -> "AutoViML/Auto_TS"
"aerdem4/lofo-importance" -> "SauceCat/PDPbox"
"aerdem4/lofo-importance" -> "dreamquark-ai/tabnet" ["e"=1]
"aerdem4/lofo-importance" -> "RGF-team/rgf" ["e"=1]
"aerdem4/lofo-importance" -> "csinva/imodels"
"chasedehan/BoostARoota" -> "limexp/xgbfir" ["e"=1]
"chasedehan/BoostARoota" -> "Ekeany/Boruta-Shap"
"chasedehan/BoostARoota" -> "scikit-learn-contrib/boruta_py"
"chasedehan/BoostARoota" -> "manuel-calzolari/sklearn-genetic"
"chasedehan/BoostARoota" -> "EpistasisLab/scikit-rebate"
"fuqiuai/lihang_algorithms" -> "fuqiuai/datamining_algorithms"
"fuqiuai/lihang_algorithms" -> "fuqiuai/sklearn-feature-engineering"
"fuqiuai/lihang_algorithms" -> "geroge-gao/deeplearning"
"fuqiuai/lihang_algorithms" -> "wzyonggege/statistical-learning-method" ["e"=1]
"hughsalimbeni/bayesian_benchmarks" -> "hughsalimbeni/DGPs_with_IWVI"
"hughsalimbeni/bayesian_benchmarks" -> "thjashin/gp-infer-net"
"hughsalimbeni/bayesian_benchmarks" -> "thjashin/spectral-stein-grad"
"thjashin/spectral-stein-grad" -> "YingzhenLi/SteinGrad"
"thjashin/spectral-stein-grad" -> "thjashin/gp-infer-net"
"ssydasheng/FBNN" -> "thjashin/gp-infer-net"
"ssydasheng/FBNN" -> "thjashin/spectral-stein-grad"
"ssydasheng/FBNN" -> "cambridge-mlg/cnn-gp"
"probml/pmtksupport" -> "probml/pmtkdata"
"iterative/dvc.org" -> "iterative/dvclive"
"iterative/dvc.org" -> "iterative/terraform-provider-iterative"
"iterative/dvc.org" -> "iterative/gto"
"iterative/dvc.org" -> "iterative/blog"
"iterative/dvc.org" -> "iterative/mlem.ai"
"iterative/dvc.org" -> "iterative/scmrepo"
"iterative/dvc.org" -> "iterative/vscode-dvc"
"iterative/dvc.org" -> "iterative/cml"
"GAMES-UChile/mogptk" -> "pmorenoz/HetMOGP"
"GAMES-UChile/mogptk" -> "NicoCaro/DataScienceLab" ["e"=1]
"GAMES-UChile/mogptk" -> "secondmind-labs/GPflux"
"GAMES-UChile/mogptk" -> "Magica-Chen/gptp_multi_output"
"jfpower/anfis-pytorch" -> "twmeggs/anfis"
"jfpower/anfis-pytorch" -> "tiagoCuervo/TensorANFIS"
"jfpower/anfis-pytorch" -> "gabrielegilardi/ANFIS"
"jfpower/anfis-pytorch" -> "gregorLen/S-ANFIS-PyTorch"
"jfpower/anfis-pytorch" -> "gregorLen/AnfisTensorflow2.0"
"WillKoehrsen/kaggle-automated-feature-engineering" -> "WillKoehrsen/neural-networks"
"csxeba/evolute" -> "MagNet-DL/magnet"
"csxeba/evolute" -> "oracle/graphpipe"
"c-bata/goptuna" -> "d4l3k/go-bayesopt"
"c-bata/goptuna" -> "CyberAgentAILab/minituna"
"c-bata/goptuna" -> "himkt/allennlp-optuna"
"mathurinm/celer" -> "yngvem/group-lasso"
"mathurinm/celer" -> "scikit-learn-contrib/skglm"
"mathurinm/celer" -> "benchopt/benchopt"
"mathurinm/celer" -> "benchopt/benchmark_lasso"
"mathurinm/celer" -> "alvaromc317/asgl"
"mathurinm/celer" -> "jasonge27/picasso"
"mathurinm/celer" -> "QB3/sparse-ho"
"mathurinm/celer" -> "mathurinm/andersoncd"
"ACCLAB/dabestr" -> "ACCLAB/DABEST-python"
"kubeflow/website" -> "kubeflow/community"
"kubeflow/website" -> "kubeflow/testing"
"chaserileyroberts/mltest" -> "suriyadeepan/torchtest"
"chaserileyroberts/mltest" -> "studioml/studio"
"automl/HPOlib" -> "automl/HPOlib1.5"
"automl/HPOlib" -> "hyperopt/hyperopt-nnet"
"w4k2/stream-learn" -> "w4k2/problexity"
"doubleplusplus/incremental_decision_tree-CART-Random_Forest" -> "vitords/HoeffdingTree"
"doubleplusplus/incremental_decision_tree-CART-Random_Forest" -> "liqi0126/incremental_decision_tree"
"doubleplusplus/incremental_decision_tree-CART-Random_Forest" -> "chaitanya-m/kdd2018"
"finafily526/A_Model_of_Risk_Control" -> "huangxianyang/risk-model"
"finafily526/A_Model_of_Risk_Control" -> "taenggu0309/Scorecard--Function"
"finafily526/A_Model_of_Risk_Control" -> "Mensyne/scorecard_model"
"finafily526/A_Model_of_Risk_Control" -> "taenggu0309/Semi-auto-modeling"
"finafily526/A_Model_of_Risk_Control" -> "SailingHe/Automatic-scorecard-model"
"finafily526/A_Model_of_Risk_Control" -> "taenggu0309/Scorecard--Assessment"
"finafily526/A_Model_of_Risk_Control" -> "huangxianyang/Predicting-Loan-Repayment-with-Automated-Feature-Engineering-in-Featuretools"
"autodeployai/pypmml" -> "autodeployai/pmml4s"
"autodeployai/pypmml" -> "openscoring/openscoring-python"
"guyz/HMM" -> "tostq/Easy_HMM"
"guyz/HMM" -> "albietz/online_hmm" ["e"=1]
"fmorenopino/HeterogeneousHMM" -> "pmorenoz/HierCPD"
"equialgo/fairness-in-ml" -> "mbilalzafar/fair-classification"
"thelovelab/tximeta" -> "COMBINE-lab/wasabi"
"Code-Pop/real-world-nuxt" -> "Code-Pop/animating-vue"
"Code-Pop/real-world-nuxt" -> "Code-Pop/authentication_course"
"Code-Pop/real-world-nuxt" -> "Code-Pop/beautify-with-vuetify"
"Code-Pop/real-world-nuxt" -> "Code-Pop/Unit-Testing-Vue2"
"Code-Pop/real-world-nuxt" -> "Code-Pop/validating-vue3-forms"
"Code-Pop/real-world-nuxt" -> "Code-Pop/watch-us-build-trello"
"Code-Pop/real-world-nuxt" -> "Code-Pop/vue-3-reactivity"
"Code-Pop/real-world-nuxt" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/real-world-nuxt" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/real-world-nuxt" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/real-world-nuxt" -> "Code-Pop/vue-mastery"
"Code-Pop/real-world-nuxt" -> "Code-Pop/build-a-blog-with-nuxt-3-and-nuxt-content-v2"
"Code-Pop/real-world-nuxt" -> "Code-Pop/Unit-Testing-Vue-3"
"Code-Pop/beautify-with-vuetify" -> "Code-Pop/animating-vue"
"Code-Pop/beautify-with-vuetify" -> "Code-Pop/real-world-nuxt"
"Code-Pop/beautify-with-vuetify" -> "Code-Pop/authentication_course"
"Code-Pop/beautify-with-vuetify" -> "Code-Pop/Unit-Testing-Vue2"
"Code-Pop/beautify-with-vuetify" -> "Code-Pop/watch-us-build-trello"
"Code-Pop/beautify-with-vuetify" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/beautify-with-vuetify" -> "Code-Pop/vue-3-reactivity"
"Code-Pop/beautify-with-vuetify" -> "Code-Pop/pwa-with-vue-3"
"WillKoehrsen/probabilistic-programming" -> "WillKoehrsen/deep_learning_cookbook"
"tkonopka/umap" -> "jlmelville/uwot"
"tkonopka/umap" -> "ropensci-archive/umapr"
"probabilistic-learning/HI-VAE" -> "pamattei/miwae"
"probabilistic-learning/HI-VAE" -> "rcamino/imputation-dgm"
"rcamino/imputation-dgm" -> "EagerSun/DL-vs-Stat_Impute"
"tensorflow/custom-op" -> "davidstutz/tensorflow-cpp-op-example" ["e"=1]
"tensorflow/custom-op" -> "tensorflow/networking"
"tensorflow/custom-op" -> "tensorflow/io"
"tensorflow/custom-op" -> "tensorflow/runtime"
"tensorflow/custom-op" -> "tengkz/tensorflow_notes" ["e"=1]
"tensorflow/custom-op" -> "tensorflow/profiler-ui" ["e"=1]
"tensorflow/custom-op" -> "NVIDIA-Merlin/HugeCTR" ["e"=1]
"tensorflow/custom-op" -> "openxla/xprof"
"tensorflow/custom-op" -> "tensorflow/mesh"
"tensorflow/custom-op" -> "DeepRec-AI/DeepRec" ["e"=1]
"tensorflow/custom-op" -> "Qihoo360/tensornet" ["e"=1]
"tensorflow/custom-op" -> "tensorflow/recommenders-addons" ["e"=1]
"tensorflow/custom-op" -> "sql-machine-learning/elasticdl" ["e"=1]
"tensorflow/custom-op" -> "bytedance/effective_transformer" ["e"=1]
"tensorflow/custom-op" -> "tensorflow/benchmarks" ["e"=1]
"aminnayebi/HesBO" -> "facebookresearch/alebo"
"iamDecode/sklearn-pmml-model" -> "autodeployai/pypmml"
"ustunb/actionable-recourse" -> "charmlab/mace"
"ustunb/actionable-recourse" -> "Networks-Learning/strategic-decisions"
"PeterChe1990/GRU-D" -> "Han-JD/GRU-D"
"PeterChe1990/GRU-D" -> "zhiyongc/GRU-D"
"PeterChe1990/GRU-D" -> "Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks"
"doodzhou/Fuzzy-Rouh-Set" -> "neatlymitang/FRS_ML"
"oracle/graphpipe-go" -> "oracle/graphpipe-py"
"jpmml/jpmml-model" -> "jpmml/jpmml-evaluator"
"jpmml/jpmml-model" -> "jpmml/jpmml-sparkml"
"jpmml/jpmml-model" -> "openscoring/openscoring"
"jpmml/jpmml-model" -> "jpmml/jpmml-r"
"jpmml/jpmml-model" -> "jpmml/jpmml"
"scitools-classroom/scipy-2018-cartopy-tutorial" -> "nawendt/cartopy-tutorial"
"boredbird/woe" -> "hsz1273327/ScoreCardModel"
"boredbird/woe" -> "ShichenXie/scorecardpy"
"boredbird/woe" -> "jstephenj14/Monotonic-WOE-Binning-Algorithm"
"boredbird/woe" -> "patrick201/information_value"
"boredbird/woe" -> "amphibian-dev/toad"
"boredbird/woe" -> "ShichenXie/scorecard"
"boredbird/woe" -> "taenggu0309/Scorecard--Function"
"boredbird/woe" -> "Sundar0989/WOE-and-IV"
"boredbird/woe" -> "tatsumiw/ChiMerge"
"boredbird/woe" -> "wepe/PPD_RiskControlCompetition" ["e"=1]
"boredbird/woe" -> "htbeker/Application_score_card"
"boredbird/woe" -> "taenggu0309/Scorecard--Assessment"
"boredbird/woe" -> "jpmml/sklearn2pmml"
"boredbird/woe" -> "chenkkkk/User-loan-risk-prediction" ["e"=1]
"autodeployai/pmml4s-spark" -> "autodeployai/pypmml-spark"
"hackalog/bus_number" -> "hackalog/easydata"
"renatoosousa/GeneticAlgorithmForFeatureSelection" -> "scoliann/GeneticAlgorithmFeatureSelection"
"renatoosousa/GeneticAlgorithmForFeatureSelection" -> "kaushalshetty/FeatureSelectionGA"
"IBM/MAX-Fast-Neural-Style-Transfer" -> "IBM/MAX-Spatial-Transformer-Network"
"IBM/MAX-Fast-Neural-Style-Transfer" -> "IBM/MAX-ResNet-50"
"IBM/MAX-Fast-Neural-Style-Transfer" -> "IBM/MAX-News-Text-Generator"
"IBM/MAX-Fast-Neural-Style-Transfer" -> "IBM/MAX-Review-Text-Generator"
"IBM/MAX-Fast-Neural-Style-Transfer" -> "IBM/MAX-Adversarial-Cryptography"
"Waikato/weka-trunk" -> "Waikato/waikato-repositories"
"Waikato/weka-trunk" -> "Waikato/weka-3.8"
"Waikato/weka-trunk" -> "bnjmn/weka"
"kompics/kompics" -> "kompics/kompics-scala"
"logicalclocks/maggy" -> "logicalclocks/hops-util-py"
"logicalclocks/maggy" -> "logicalclocks/feature-store-api"
"MLBazaar/Cardea" -> "MLBazaar/MLBlocks"
"MLBazaar/Cardea" -> "ballet/ballet"
"alteryx/Automated-Manual-Comparison" -> "WillKoehrsen/automated-feature-engineering"
"alteryx/Automated-Manual-Comparison" -> "alteryx/open_source_demos"
"alteryx/Automated-Manual-Comparison" -> "alteryx/predict-loan-repayment"
"alteryx/Automated-Manual-Comparison" -> "WileyIntelligentSolutions/wiley-dash-boilerplate2"
"better/convoys" -> "canyon289/bayesian-model-evaluation" ["e"=1]
"oracle/graphpipe-py" -> "oracle/graphpipe-tf-py"
"alipsgh/tornado" -> "alipsgh/data-streams"
"alipsgh/tornado" -> "blablahaha/concept-drift"
"alipsgh/tornado" -> "alipsgh/codes-for-moa"
"alipsgh/tornado" -> "ogozuacik/d3-discriminative-drift-detector-concept-drift"
"alipsgh/tornado" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"alipsgh/tornado" -> "denismr/incremental-ks"
"alipsgh/tornado" -> "vlosing/driftDatasets"
"alipsgh/tornado" -> "Western-OC2-Lab/OASW-Concept-Drift-Detection-and-Adaptation"
"mahmoodm2/tableGAN" -> "sdv-dev/TGAN"
"mahmoodm2/tableGAN" -> "sdv-dev/SDGym"
"mahmoodm2/tableGAN" -> "Team-TUD/CTAB-GAN-Plus"
"mahmoodm2/tableGAN" -> "Team-TUD/CTAB-GAN"
"mahmoodm2/tableGAN" -> "Baukebrenninkmeijer/table-evaluator"
"mahmoodm2/tableGAN" -> "Diyago/Tabular-data-generation"
"mahmoodm2/tableGAN" -> "zhao-zilong/Tabula"
"mahmoodm2/tableGAN" -> "cocoissong/TableGAN"
"mahmoodm2/tableGAN" -> "sdv-dev/CTGAN"
"mahmoodm2/tableGAN" -> "Baukebrenninkmeijer/On-the-Generation-and-Evaluation-of-Synthetic-Tabular-Data-using-GANs"
"alteryx/predict-loan-repayment" -> "alteryx/predict-appointment-noshow"
"alteryx/predict-loan-repayment" -> "Featuretools/predict-household-poverty"
"alteryx/predict-loan-repayment" -> "Featuretools/predict-correct-answer"
"alteryx/predict-loan-repayment" -> "alteryx/predict-malicious-cyber-connections"
"brain-research/nngp" -> "SheffieldML/PyDeepGP"
"brain-research/nngp" -> "maka89/Deep-Kernel-GP"
"brain-research/nngp" -> "hughsalimbeni/DGPs_with_IWVI"
"brain-research/nngp" -> "alshedivat/keras-gp"
"brain-research/nngp" -> "cambridge-mlg/convcnp" ["e"=1]
"brain-research/nngp" -> "google/neural-tangents" ["e"=1]
"brain-research/nngp" -> "kekeblom/DeepCGP"
"brain-research/nngp" -> "ghliu/mean-field-fcdnn"
"alteryx/autonormalize" -> "alteryx/categorical_encoding"
"alteryx/autonormalize" -> "alteryx/nlp_primitives"
"felixriese/susi" -> "enricivi/growing_hierarchical_som"
"Neuraxio/Neuraxle" -> "Alex-Lekov/AutoML_Alex"
"Neuraxio/Neuraxle" -> "koaning/scikit-lego"
"Neuraxio/Neuraxle" -> "SimonBlanke/Hyperactive"
"Neuraxio/Neuraxle" -> "ray-project/tune-sklearn"
"Neuraxio/Neuraxle" -> "feature-engine/feature_engine"
"Neuraxio/Neuraxle" -> "alteryx/evalml"
"Neuraxio/Neuraxle" -> "AutoViML/Auto_ViML"
"Neuraxio/Neuraxle" -> "csinva/imodels"
"Neuraxio/Neuraxle" -> "AutoViML/Auto_TS"
"Neuraxio/Neuraxle" -> "antoinecarme/pyaf"
"Neuraxio/Neuraxle" -> "pdpipe/pdpipe"
"Neuraxio/Neuraxle" -> "amitness/toolbox"
"Neuraxio/Neuraxle" -> "scikit-learn-contrib/scikit-learn-extra"
"Neuraxio/Neuraxle" -> "kearnz/autoimpute"
"MFrank2016/GotoSSH" -> "XimalayaCloud/xcache"
"huangzhii/SALMON" -> "lanagarmire/cox-nnet"
"MLBazaar/BTB" -> "MLBazaar/MLBlocks"
"MLBazaar/BTB" -> "MLBazaar/MLPrimitives"
"MLBazaar/BTB" -> "HDI-Project/ATM"
"MLBazaar/BTB" -> "MLBazaar/AutoBazaar"
"MLBazaar/BTB" -> "sintel-dev/Draco"
"MLBazaar/BTB" -> "ballet/ballet"
"CODAIT/aardpfark" -> "modelop/hadrian"
"epsilon-machine/missingpy" -> "eltonlaw/impyute"
"epsilon-machine/missingpy" -> "yuenshingyan/MissForest"
"epsilon-machine/missingpy" -> "OpenIDEA-YunanUniversity/ycimpute"
"epsilon-machine/missingpy" -> "IvanBongiorni/GAN-RNN_Timeseries-imputation"
"epsilon-machine/missingpy" -> "spindro/GINN"
"epsilon-machine/missingpy" -> "jsyoon0823/GAIN"
"epsilon-machine/missingpy" -> "iskandr/fancyimpute"
"epsilon-machine/missingpy" -> "rcamino/imputation-dgm"
"shakedzy/dython" -> "MaxHalford/prince"
"shakedzy/dython" -> "akanz1/klib"
"shakedzy/dython" -> "feature-engine/feature_engine"
"shakedzy/dython" -> "raphaelvallat/pingouin"
"shakedzy/dython" -> "8080labs/ppscore"
"shakedzy/dython" -> "alteryx/evalml"
"shakedzy/dython" -> "Ekeany/Boruta-Shap"
"shakedzy/dython" -> "pdpipe/pdpipe"
"shakedzy/dython" -> "manuel-calzolari/sklearn-genetic"
"shakedzy/dython" -> "pyjanitor-devs/pyjanitor"
"shakedzy/dython" -> "csinva/imodels"
"shakedzy/dython" -> "Neuraxio/Neuraxle"
"HDI-Project/ATMSeer" -> "HDI-Project/ATM"
"bnjmn/weka" -> "Waikato/weka-trunk"
"Code-Pop/vue-mastery" -> "Code-Pop/real-world-nuxt"
"Code-Pop/vue-mastery" -> "Code-Pop/Unit-Testing-Vue2"
"Code-Pop/vue-mastery" -> "Code-Pop/animating-vue"
"Code-Pop/vue-mastery" -> "Code-Pop/real-world-vue"
"Code-Pop/vue-mastery" -> "Code-Pop/authentication_course"
"Code-Pop/vue-mastery" -> "Code-Pop/beautify-with-vuetify"
"Code-Pop/vue-mastery" -> "Code-Pop/watch-us-build-trello"
"Fangzhenxuan/AI_Projects" -> "cainsmile/GA_for_Feature_Selection"
"QuickCorp/pyGT511C3" -> "z-a-f/fingerpi"
"QuickCorp/pyGT511C3" -> "the-AjK/GT-511C3"
"Code-Pop/authentication_course" -> "Code-Pop/animating-vue"
"Code-Pop/authentication_course" -> "Code-Pop/watch-us-build-trello"
"Code-Pop/authentication_course" -> "Code-Pop/real-world-nuxt"
"Code-Pop/authentication_course" -> "Code-Pop/beautify-with-vuetify"
"Code-Pop/authentication_course" -> "Code-Pop/build-gmail-clone-with-vue-3"
"Code-Pop/authentication_course" -> "Code-Pop/Unit-Testing-Vue2"
"Code-Pop/authentication_course" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/authentication_course" -> "Code-Pop/real-world-vue"
"Code-Pop/authentication_course" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/authentication_course" -> "Code-Pop/vue-3-reactivity"
"Code-Pop/authentication_course" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/authentication_course" -> "Code-Pop/pwa-with-vue-3"
"Code-Pop/authentication_course" -> "Code-Pop/build-a-blog-with-nuxt-3-and-nuxt-content-v2"
"lancifollia/tinygbt" -> "ogrisel/pygbm"
"scikit-learn-contrib/scikit-learn-extra" -> "kno10/python-kmedoids"
"scikit-learn-contrib/scikit-learn-extra" -> "scikit-learn-contrib/scikit-learn-contrib"
"tiagoCuervo/TensorANFIS" -> "twmeggs/anfis"
"tiagoCuervo/TensorANFIS" -> "jfpower/anfis-pytorch"
"tiagoCuervo/TensorANFIS" -> "gregorLen/AnfisTensorflow2.0"
"openml/openml-python" -> "openml/OpenML"
"openml/openml-python" -> "openml/openml-r"
"openml/openml-python" -> "openml/automlbenchmark"
"openml/openml-python" -> "automl/ConfigSpace"
"allegroai/clearml-server-k8s" -> "allegroai/clearml-server-helm"
"ivivan/SSIM_Seq2Seq" -> "felixykliu/NAOMI"
"yngvem/group-lasso" -> "mathurinm/celer"
"yngvem/group-lasso" -> "nrdg/groupyr"
"yngvem/group-lasso" -> "alvaromc317/asgl"
"yngvem/group-lasso" -> "fabianp/group_lasso"
"yngvem/group-lasso" -> "scikit-learn-contrib/skglm"
"XimalayaCloud/xcache" -> "pourer/pika_exporter"
"XimalayaCloud/xcache" -> "MFrank2016/GotoSSH"
"XimalayaCloud/xcache" -> "Qihoo360/blackwidow"
"XimalayaCloud/xcache" -> "kernelai/codis"
"kieferk/pymssa" -> "aj-cloete/pssa"
"kieferk/pymssa" -> "AbdullahO/mSSA"
"kieferk/pymssa" -> "VSainteuf/mcssa"
"ealcobaca/pymfe" -> "lpfgarcia/ECoL"
"ealcobaca/pymfe" -> "rivolli/mfe"
"ealcobaca/pymfe" -> "tiagobotari/melime"
"ealcobaca/pymfe" -> "victorhb/ImbCoL"
"ealcobaca/pymfe" -> "gabrieljaguiar/nemenyi"
"ealcobaca/pymfe" -> "gabrieljaguiar/image-meta-feature-extractor"
"ziyuw/rembo" -> "facebookresearch/alebo"
"ziyuw/rembo" -> "rees-c/PyREMBO"
"ziyuw/rembo" -> "zi-w/Structural-Kernel-Learning-for-HDBBO"
"ziyuw/rembo" -> "kirschnj/LineBO"
"xsj0609/data_science" -> "huangxianyang/risk-model"
"jstephenj14/Monotonic-WOE-Binning-Algorithm" -> "boredbird/woe"
"jstephenj14/Monotonic-WOE-Binning-Algorithm" -> "Lantianzz/Scorecard-Bundle"
"jstephenj14/Monotonic-WOE-Binning-Algorithm" -> "statcompute/mob"
"jstephenj14/Monotonic-WOE-Binning-Algorithm" -> "guillermo-navas-palencia/optbinning"
"jstephenj14/Monotonic-WOE-Binning-Algorithm" -> "patrick201/information_value"
"kubeflow/fairing" -> "kubeflow/katib"
"kubeflow/fairing" -> "kubeflow-kale/kale"
"kubeflow/fairing" -> "kubeflow/kfctl"
"kubeflow/fairing" -> "kubeflow/community"
"kubeflow/fairing" -> "spotify/terraform-gke-kubeflow-cluster"
"sintel-dev/Draco" -> "MLBazaar/AutoBazaar"
"pysal/scipy2019-intermediate-gds" -> "pytroll/tutorial-satpy-half-day"
"sdv-dev/TGAN" -> "sdv-dev/SDGym"
"sdv-dev/TGAN" -> "mahmoodm2/tableGAN"
"sdv-dev/TGAN" -> "sdv-dev/CTGAN"
"sdv-dev/TGAN" -> "Diyago/Tabular-data-generation"
"sdv-dev/TGAN" -> "Pushkar-v/Generating-Synthetic-Data-using-GANs"
"sdv-dev/TGAN" -> "Baukebrenninkmeijer/table-evaluator"
"sdv-dev/TGAN" -> "mp2893/medgan" ["e"=1]
"sdv-dev/TGAN" -> "sdv-dev/RDT"
"sdv-dev/TGAN" -> "sdv-dev/SDMetrics"
"sdv-dev/TGAN" -> "Baukebrenninkmeijer/On-the-Generation-and-Evaluation-of-Synthetic-Tabular-Data-using-GANs"
"sdv-dev/TGAN" -> "Team-TUD/CTAB-GAN"
"aresio/simpful" -> "Python-Fuzzylogic/fuzzylogic"
"aresio/simpful" -> "CaroFuchs/pyFUME"
"aresio/simpful" -> "aresio/fst-pso"
"sdv-dev/RDT" -> "sdv-dev/SDMetrics"
"sdv-dev/RDT" -> "sdv-dev/SDGym"
"sdv-dev/RDT" -> "MLBazaar/MLPrimitives"
"sdv-dev/RDT" -> "MLBazaar/MLBlocks"
"sdv-dev/RDT" -> "data-dev/DataTracer"
"sdv-dev/RDT" -> "sdv-dev/DeepEcho"
"kubeflow/community" -> "kubeflow/website"
"keras-team/keras-docs-ko" -> "fuzzythecat/awesome-spacer" ["e"=1]
"keras-team/keras-docs-ko" -> "KerasKorea/KerasKorea.github.io"
"keras-team/keras-docs-ko" -> "KerasKorea/KerasObjectDetector"
"probml/pmtkdata" -> "probml/pmtksupport"
"dtolpin/bocd" -> "projectaligned/chchanges"
"seyedsaeidmasoumzadeh/Fuzzy-Q-Learning" -> "ameybarapatre/ANFIS"
"seyedsaeidmasoumzadeh/Fuzzy-Q-Learning" -> "tms1337/inverted-pendulum-control"
"seyedsaeidmasoumzadeh/Fuzzy-Q-Learning" -> "doandongnguyen/FQL-Fuzzy-Q-Learning"
"seyedsaeidmasoumzadeh/Fuzzy-Q-Learning" -> "pooyanjamshidi/Fuzzy-Q-Learning"
"clearml/clearml-web" -> "allegroai/clearml-pycharm-plugin"
"clearml/clearml-web" -> "allegroai/trains-jupyter-plugin"
"maka89/Deep-Kernel-GP" -> "BayesWatch/deep-kernel-transfer"
"maka89/Deep-Kernel-GP" -> "alshedivat/keras-gp"
"automl/pybnn" -> "automl/RoBO"
"automl/pybnn" -> "cambridge-mlg/DUN"
"automl/pybnn" -> "RuiShu/nn-bayesian-optimization"
"IBM/MAX-Object-Detector-Web-App" -> "IBM/MAX-Object-Detector"
"mscharth/forecasting" -> "ysraell/forecasting"
"spindro/GINN" -> "spindro/AP-GCN"
"spindro/GINN" -> "nicofirst1/ledypi"
"spindro/GINN" -> "felixykliu/NAOMI"
"Baukebrenninkmeijer/On-the-Generation-and-Evaluation-of-Synthetic-Tabular-Data-using-GANs" -> "Baukebrenninkmeijer/table-evaluator"
"chrispaulca/waterfall" -> "jmcarpenter2/parfit"
"baptistar/BOCS" -> "QUVA-Lab/COMBO"
"MLBazaar/MLPrimitives" -> "MLBazaar/MLBlocks"
"MLBazaar/MLPrimitives" -> "MLBazaar/AutoBazaar"
"MLBazaar/MLPrimitives" -> "MLBazaar/BTB"
"MLBazaar/MLPrimitives" -> "MLBazaar/piex"
"MLBazaar/MLPrimitives" -> "sintel-dev/Draco"
"jalajthanaki/credit-risk-modelling" -> "finlytics-hub/credit_risk_model"
"jalajthanaki/credit-risk-modelling" -> "djbolder/credit-risk-modelling"
"jalajthanaki/credit-risk-modelling" -> "vishnukanduri/Credit-Risk-Modeling-in-Python"
"jalajthanaki/credit-risk-modelling" -> "enesozi/Credit-Risk-Analysis"
"jalajthanaki/credit-risk-modelling" -> "hankkuang/creditRiskCScoreCard"
"jalajthanaki/credit-risk-modelling" -> "abhashpanwar/credit-risk-modeling"
"jalajthanaki/credit-risk-modelling" -> "aniruddhachoudhury/Credit-Risk-Model"
"jalajthanaki/credit-risk-modelling" -> "naenumtou/ifrs9"
"autodeployai/pmml4s" -> "autodeployai/pypmml"
"alteryx/categorical_encoding" -> "alteryx/nlp_primitives"
"alteryx/categorical_encoding" -> "alteryx/autonormalize"
"cda-group/arcon" -> "kompics/kompact"
"cda-group/arcon" -> "cda-group/arc"
"cda-group/arcon" -> "uwheel/uwheel"
"Yoast/javascript" -> "Yoast/YoastSEO.js"
"pmorenoz/HetMOGP" -> "pmorenoz/ContinualGP"
"pmorenoz/HetMOGP" -> "pmorenoz/HierCPD"
"pmorenoz/HetMOGP" -> "juanjogg1987/Fully_Natural_Gradient_HetMOGP"
"steveli/misgan" -> "jsyoon0823/GAIN"
"Sundar0989/WOE-and-IV" -> "jstephenj14/Monotonic-WOE-Binning-Algorithm"
"Sundar0989/WOE-and-IV" -> "klaudia-nazarko/iv-and-woe-python"
"Sundar0989/WOE-and-IV" -> "Sundar0989/XuniVerse"
"zi-w/Ensemble-Bayesian-Optimization" -> "facebookresearch/alebo"
"zi-w/Ensemble-Bayesian-Optimization" -> "uber-research/TuRBO"
"IBM/MAX-Speech-to-Text-Converter" -> "IBM/MAX-Review-Text-Generator"
"MGensheimer/nnet-survival" -> "mexchy1000/DeepSurv_Keras"
"MGensheimer/nnet-survival" -> "lanagarmire/cox-nnet"
"ogozuacik/concept-drift-datasets-scikit-multiflow" -> "ogozuacik/d3-discriminative-drift-detector-concept-drift"
"ogozuacik/concept-drift-datasets-scikit-multiflow" -> "gditzler/ConceptDriftResources"
"ogozuacik/concept-drift-datasets-scikit-multiflow" -> "vlosing/driftDatasets"
"ogozuacik/concept-drift-datasets-scikit-multiflow" -> "ogozuacik/one-class-drift-detection"
"ogozuacik/concept-drift-datasets-scikit-multiflow" -> "songqiaohu/THU-Concept-Drift-Datasets-v1.0"
"ogozuacik/concept-drift-datasets-scikit-multiflow" -> "Western-OC2-Lab/MSANA-Online-Data-Stream-Analytics-And-Concept-Drift-Adaptation"
"SheffieldML/deepGP" -> "SheffieldML/GPmat"
"SheffieldML/deepGP" -> "SheffieldML/PyDeepGP"
"blent-ai/pycopula" -> "DanielBok/copulae"
"blent-ai/pycopula" -> "sdv-dev/Copulas"
"blent-ai/pycopula" -> "maximenc/pycop"
"blent-ai/pycopula" -> "stochasticresearch/copula-py"
"blent-ai/pycopula" -> "vinecopulib/pyvinecopulib"
"corels/pycorels" -> "corels/corels"
"WillKoehrsen/data-science-for-good" -> "WillKoehrsen/neural-networks"
"WillKoehrsen/data-science-for-good" -> "WillKoehrsen/kaggle-automated-feature-engineering"
"jmcarpenter2/parfit" -> "chrispaulca/waterfall"
"WillKoehrsen/deep_learning_cookbook" -> "WillKoehrsen/neural-networks"
"IBM/MAX-Review-Text-Generator" -> "IBM/MAX-News-Text-Generator"
"IBM/MAX-Review-Text-Generator" -> "IBM/MAX-ResNet-50"
"IBM/MAX-Review-Text-Generator" -> "IBM/MAX-Spatial-Transformer-Network"
"pmorenoz/HierCPD" -> "pmorenoz/RecyclableGP"
"flyteorg/flytestdlib" -> "flyteorg/flyteadmin"
"flyteorg/flytestdlib" -> "flyteorg/flyteplugins"
"flyteorg/flytestdlib" -> "flyteorg/flyteidl"
"Quantmetry/grand-debat" -> "AntoineSimoulin/pytree"
"Quantmetry/grand-debat" -> "Quantmetry/pipeasy-spark"
"xiyanghu/OSDT" -> "Jimmy-Lin/GeneralizedOptimalSparseDecisionTrees"
"rk2900/DRSA" -> "robi56/Survival-Analysis-using-Deep-Learning"
"rk2900/DRSA" -> "collinprather/drsa"
"rk2900/DRSA" -> "chl8856/DeepHit"
"rk2900/DRSA" -> "jaredleekatzman/DeepSurv"
"rk2900/DRSA" -> "autonlab/auton-survival"
"rk2900/DRSA" -> "liupei101/TFDeepSurv"
"rk2900/DRSA" -> "paidamoyo/adversarial_time_to_event"
"rk2900/DRSA" -> "data-modeler/rnn-surv"
"rk2900/DRSA" -> "chl8856/Dynamic-DeepHit"
"IBM/MAX-Inception-ResNet-v2" -> "IBM/MAX-ResNet-50"
"IBM/MAX-Inception-ResNet-v2" -> "IBM/MAX-Spatial-Transformer-Network"
"IBM/MAX-Inception-ResNet-v2" -> "IBM/MAX-News-Text-Generator"
"hankkuang/creditRiskCScoreCard" -> "hsz1273327/ScoreCardModel"
"rcamino/multi-categorical-gans" -> "rcamino/imputation-dgm"
"IBM/MAX-Adversarial-Cryptography" -> "IBM/MAX-ResNet-50"
"IBM/MAX-Adversarial-Cryptography" -> "IBM/MAX-Spatial-Transformer-Network"
"CODAIT/node-red-contrib-model-asset-exchange" -> "IBM/MAX-Framework"
"automl/BOAH" -> "automl/CAVE"
"thangbui/streaming_sparse_gp" -> "thangbui/sparseGP_powerEP"
"alipsgh/data-streams" -> "alipsgh/codes-for-moa"
"alipsgh/data-streams" -> "alipsgh/tornado"
"alipsgh/data-streams" -> "blablahaha/concept-drift"
"alipsgh/data-streams" -> "vlosing/driftDatasets"
"IBM/MAX-Scene-Classifier" -> "IBM/MAX-ResNet-50"
"IBM/MAX-Scene-Classifier" -> "IBM/MAX-Spatial-Transformer-Network"
"IBM/MAX-Scene-Classifier" -> "IBM/MAX-News-Text-Generator"
"IBM/MAX-Scene-Classifier" -> "IBM/MAX-Review-Text-Generator"
"gabrieljaguiar/nemenyi" -> "gabrieljaguiar/image-meta-feature-extractor"
"taenggu0309/Scorecard--Assessment" -> "taenggu0309/Semi-auto-modeling"
"taenggu0309/Scorecard--Assessment" -> "taenggu0309/Scorecard--Function"
"taenggu0309/Scorecard--Assessment" -> "SailingHe/Automatic-scorecard-model"
"taenggu0309/Scorecard--Assessment" -> "huangxianyang/risk-model"
"taenggu0309/Scorecard--Assessment" -> "Lantianzz/Scorecard-Bundle"
"taenggu0309/Scorecard--Assessment" -> "finafily526/A_Model_of_Risk_Control"
"PathologyDataScience/SCNN" -> "cuicathy/MMD_SurvivalPrediction"
"WillKoehrsen/deep-learning-v2-pytorch" -> "WillKoehrsen/deep_learning_cookbook"
"WillKoehrsen/deep-learning-v2-pytorch" -> "WillKoehrsen/neural-networks"
"yanx27/Scorecard-Modeling" -> "as519002268/ScorecardBox"
"alteryx/predict-malicious-cyber-connections" -> "Featuretools/predict-household-poverty"
"alteryx/predict-malicious-cyber-connections" -> "alteryx/predict-appointment-noshow"
"alteryx/predict-malicious-cyber-connections" -> "Featuretools/predict-correct-answer"
"Featuretools/predict-household-poverty" -> "alteryx/predict-appointment-noshow"
"Featuretools/predict-household-poverty" -> "alteryx/predict-malicious-cyber-connections"
"Featuretools/predict-household-poverty" -> "Featuretools/predict-correct-answer"
"kekeblom/DeepCGP" -> "hughsalimbeni/DGPs_with_IWVI"
"kekeblom/DeepCGP" -> "markvdw/convgp"
"d6t/d6t-python" -> "d6t/d6tpipe"
"d6t/d6t-python" -> "d6t/d6tflow-template"
"jpmml/jpmml-evaluator-python" -> "openscoring/papis.io"
"Featuretools/predict-correct-answer" -> "alteryx/predict-appointment-noshow"
"Featuretools/predict-correct-answer" -> "Featuretools/predict-household-poverty"
"WillKoehrsen/jupyter-notebook-extensions" -> "WillKoehrsen/neural-networks"
"pourer/pika_exporter" -> "Axlgrep/pika-tools"
"pourer/pika_exporter" -> "KCacheTeam/pika-tools"
"IOHprofiler/IOHanalyzer" -> "IOHprofiler/IOHexperimenter"
"IBM/MAX-News-Text-Generator" -> "IBM/MAX-Review-Text-Generator"
"IBM/MAX-News-Text-Generator" -> "IBM/MAX-ResNet-50"
"IBM/MAX-News-Text-Generator" -> "IBM/MAX-Spatial-Transformer-Network"
"arslanmughal99/Rocket-keyword-analyzer" -> "arslanmughal99/Registration-System"
"arslanmughal99/Rocket-keyword-analyzer" -> "arslanmughal5566/Axiom-Dashboard"
"thjashin/gp-infer-net" -> "ssydasheng/FBNN"
"thjashin/gp-infer-net" -> "thjashin/spectral-stein-grad"
"IBM/MAX-ResNet-50" -> "IBM/MAX-Spatial-Transformer-Network"
"IBM/MAX-Spatial-Transformer-Network" -> "IBM/MAX-ResNet-50"
"statcompute/mob" -> "statcompute/py_mob"
"allegroai/clearml-pycharm-plugin" -> "allegroai/trains-jupyter-plugin"
"Quantmetry/pipeasy-spark" -> "Quantmetry/awesome_quantmetry"
"Quantmetry/pipeasy-spark" -> "Quantmetry/grand-debat"
"pytroll/tutorial-satpy-half-day" -> "pysal/scipy2019-intermediate-gds"
"alteryx/nlp_primitives" -> "alteryx/categorical_encoding"
"autodeployai/pypmml-spark" -> "autodeployai/pmml4s-spark"
"felixykliu/NAOMI" -> "ivivan/SSIM_Seq2Seq"
"felixykliu/NAOMI" -> "pbansal5/DeepMVI"
"felixykliu/NAOMI" -> "Luoyonghong/E2EGAN"
"allegroai/trains-jupyter-plugin" -> "allegroai/clearml-pycharm-plugin"
"allegroai/trains-jupyter-plugin" -> "allegroai/clearml-server-helm"
"allegroai/trains-jupyter-plugin" -> "allegroai/clearml-server-k8s"
"QUVA-Lab/COMBO" -> "aryandeshwal/HyBO"
"ballet/ballet" -> "MLBazaar/piex"
"ThoughtWorksInc/ml-cd-starter-kit" -> "ThoughtWorksInc/ml-app-template"
"allegroai/clearml-server-helm" -> "allegroai/clearml-server-k8s"
"WillKoehrsen/fastai-numerical-linear-algebra" -> "WillKoehrsen/neural-networks"
"WillKoehrsen/willkoehrsen.github.io" -> "WillKoehrsen/neural-networks"
"WillKoehrsen/willkoehrsen.github.io" -> "WillKoehrsen/fastai-numerical-linear-algebra"
"WillKoehrsen/airbus" -> "WillKoehrsen/neural-networks"
"arslanmughal99/Registration-System" -> "arslanmughal5566/Axiom-Dashboard"
"arslanmughal99/Registration-System" -> "arslanmughal99/Rocket-keyword-analyzer"
"WillKoehrsen/neural-networks" -> "WillKoehrsen/airbus"
"WillKoehrsen/neural-networks" -> "WillKoehrsen/kaggle-automated-feature-engineering"
"WillKoehrsen/neural-networks" -> "WillKoehrsen/fastai-numerical-linear-algebra"
"alipsgh/machine-learning-materials" -> "alipsgh/codes-for-moa"
"Quantmetry/awesome_quantmetry" -> "Quantmetry/pipeasy-spark"
"herilalaina/mosaic_ml" -> "machinelearningnuremberg/DyHPO"
"arslanmughal99/phisher" -> "arslanmughal5566/Axiom-Dashboard"
"arslanmughal99/phisher" -> "robber5/wifi-killer"
"Diyago/Tabular-data-generation" -> "sdv-dev/CTGAN"
"Diyago/Tabular-data-generation" -> "sdv-dev/TGAN"
"Diyago/Tabular-data-generation" -> "mahmoodm2/tableGAN"
"Diyago/Tabular-data-generation" -> "sdv-dev/SDGym"
"Diyago/Tabular-data-generation" -> "Pushkar-v/Generating-Synthetic-Data-using-GANs"
"Diyago/Tabular-data-generation" -> "Baukebrenninkmeijer/table-evaluator"
"Diyago/Tabular-data-generation" -> "Team-TUD/CTAB-GAN"
"Diyago/Tabular-data-generation" -> "ydataai/ydata-synthetic" ["e"=1]
"Diyago/Tabular-data-generation" -> "justinengelmann/GANbasedOversampling"
"Diyago/Tabular-data-generation" -> "sdv-dev/SDV"
"Diyago/Tabular-data-generation" -> "worldbank/REaLTabFormer"
"Diyago/Tabular-data-generation" -> "lucidrains/tab-transformer-pytorch" ["e"=1]
"Diyago/Tabular-data-generation" -> "Team-TUD/CTAB-GAN-Plus"
"Diyago/Tabular-data-generation" -> "vanderschaarlab/synthcity"
"Diyago/Tabular-data-generation" -> "firmai/deltapy"
"Netflix/metaflow" -> "mlflow/mlflow"
"Netflix/metaflow" -> "iterative/dvc"
"Netflix/metaflow" -> "kedro-org/kedro"
"Netflix/metaflow" -> "feast-dev/feast"
"Netflix/metaflow" -> "flyteorg/flyte"
"Netflix/metaflow" -> "bentoml/BentoML"
"Netflix/metaflow" -> "great-expectations/great_expectations" ["e"=1]
"Netflix/metaflow" -> "nteract/papermill" ["e"=1]
"Netflix/metaflow" -> "zenml-io/zenml"
"Netflix/metaflow" -> "evidentlyai/evidently"
"Netflix/metaflow" -> "PrefectHQ/prefect" ["e"=1]
"Netflix/metaflow" -> "modin-project/modin"
"Netflix/metaflow" -> "SeldonIO/seldon-core"
"Netflix/metaflow" -> "vaexio/vaex"
"Netflix/metaflow" -> "kubeflow/kubeflow"
"SeldonIO/alibi-detect" -> "SeldonIO/alibi"
"SeldonIO/alibi-detect" -> "evidentlyai/evidently"
"SeldonIO/alibi-detect" -> "whylabs/whylogs" ["e"=1]
"SeldonIO/alibi-detect" -> "online-ml/river"
"SeldonIO/alibi-detect" -> "deepchecks/deepchecks"
"SeldonIO/alibi-detect" -> "NannyML/nannyml"
"SeldonIO/alibi-detect" -> "SeldonIO/seldon-core"
"SeldonIO/alibi-detect" -> "MAIF/shapash"
"SeldonIO/alibi-detect" -> "oegedijk/explainerdashboard"
"SeldonIO/alibi-detect" -> "interpretml/interpret"
"SeldonIO/alibi-detect" -> "feature-engine/feature_engine"
"SeldonIO/alibi-detect" -> "salesforce/Merlion"
"SeldonIO/alibi-detect" -> "zillow/luminaire" ["e"=1]
"SeldonIO/alibi-detect" -> "facebookresearch/Kats"
"SeldonIO/alibi-detect" -> "sktime/sktime"
"scikit-learn-contrib/imbalanced-learn" -> "scikit-learn-contrib/category_encoders"
"scikit-learn-contrib/imbalanced-learn" -> "rasbt/mlxtend"
"scikit-learn-contrib/imbalanced-learn" -> "hyperopt/hyperopt"
"scikit-learn-contrib/imbalanced-learn" -> "EpistasisLab/tpot"
"scikit-learn-contrib/imbalanced-learn" -> "automl/auto-sklearn"
"scikit-learn-contrib/imbalanced-learn" -> "shap/shap"
"scikit-learn-contrib/imbalanced-learn" -> "alteryx/featuretools"
"scikit-learn-contrib/imbalanced-learn" -> "marcotcr/lime"
"scikit-learn-contrib/imbalanced-learn" -> "blue-yonder/tsfresh"
"scikit-learn-contrib/imbalanced-learn" -> "DistrictDataLabs/yellowbrick"
"scikit-learn-contrib/imbalanced-learn" -> "scikit-optimize/scikit-optimize"
"scikit-learn-contrib/imbalanced-learn" -> "microsoft/LightGBM"
"scikit-learn-contrib/imbalanced-learn" -> "TeamHG-Memex/eli5"
"scikit-learn-contrib/imbalanced-learn" -> "catboost/catboost"
"scikit-learn-contrib/imbalanced-learn" -> "reiinakano/scikit-plot"
"vacanza/holidays" -> "workalendar/workalendar"
"vacanza/holidays" -> "spulec/freezegun" ["e"=1]
"vacanza/holidays" -> "Nixtla/statsforecast"
"vacanza/holidays" -> "unit8co/darts"
"vacanza/holidays" -> "dateutil/dateutil" ["e"=1]
"vacanza/holidays" -> "unionai-oss/pandera"
"vacanza/holidays" -> "ivelum/djangoql" ["e"=1]
"vacanza/holidays" -> "guofei9987/text_blind_watermark" ["e"=1]
"vacanza/holidays" -> "uber/orbit"
"vacanza/holidays" -> "asottile/pyupgrade" ["e"=1]
"vacanza/holidays" -> "econchick/interrogate" ["e"=1]
"vacanza/holidays" -> "PyCQA/isort" ["e"=1]
"vacanza/holidays" -> "posit-dev/great-tables" ["e"=1]
"vacanza/holidays" -> "pycountry/pycountry" ["e"=1]
"vacanza/holidays" -> "adamchainz/django-upgrade" ["e"=1]
"hyperopt/hyperopt" -> "maxpumperla/hyperas"
"hyperopt/hyperopt" -> "bayesian-optimization/BayesianOptimization"
"hyperopt/hyperopt" -> "hyperopt/hyperopt-sklearn"
"hyperopt/hyperopt" -> "scikit-optimize/scikit-optimize"
"hyperopt/hyperopt" -> "optuna/optuna"
"hyperopt/hyperopt" -> "EpistasisLab/tpot"
"hyperopt/hyperopt" -> "scikit-learn-contrib/imbalanced-learn"
"hyperopt/hyperopt" -> "automl/auto-sklearn"
"hyperopt/hyperopt" -> "microsoft/LightGBM"
"hyperopt/hyperopt" -> "shap/shap"
"hyperopt/hyperopt" -> "alteryx/featuretools"
"hyperopt/hyperopt" -> "catboost/catboost"
"hyperopt/hyperopt" -> "rasbt/mlxtend"
"hyperopt/hyperopt" -> "HIPS/Spearmint"
"hyperopt/hyperopt" -> "marcotcr/lime"
"iterative/cml" -> "iterative/dvc"
"iterative/cml" -> "visenger/awesome-mlops" ["e"=1]
"iterative/cml" -> "bentoml/BentoML"
"iterative/cml" -> "iterative/mlem"
"iterative/cml" -> "evidentlyai/evidently"
"iterative/cml" -> "zenml-io/zenml"
"iterative/cml" -> "deepchecks/deepchecks"
"iterative/cml" -> "cortexlabs/cortex"
"iterative/cml" -> "feast-dev/feast"
"iterative/cml" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"iterative/cml" -> "kedro-org/kedro"
"iterative/cml" -> "SeldonIO/seldon-core"
"iterative/cml" -> "Netflix/metaflow"
"iterative/cml" -> "kelvins/awesome-mlops" ["e"=1]
"iterative/cml" -> "clearml/clearml"
"shankarpandala/lazypredict" -> "pycaret/pycaret"
"shankarpandala/lazypredict" -> "oegedijk/explainerdashboard"
"shankarpandala/lazypredict" -> "lux-org/lux"
"shankarpandala/lazypredict" -> "AutoViML/AutoViz"
"shankarpandala/lazypredict" -> "fbdesignpro/sweetviz"
"shankarpandala/lazypredict" -> "Nixtla/statsforecast"
"shankarpandala/lazypredict" -> "feature-engine/feature_engine"
"shankarpandala/lazypredict" -> "MAIF/shapash"
"shankarpandala/lazypredict" -> "BeastByteAI/scikit-llm" ["e"=1]
"shankarpandala/lazypredict" -> "sfu-db/dataprep"
"shankarpandala/lazypredict" -> "unit8co/darts"
"shankarpandala/lazypredict" -> "DistrictDataLabs/yellowbrick"
"shankarpandala/lazypredict" -> "mljar/mljar-supervised"
"shankarpandala/lazypredict" -> "cleanlab/cleanlab"
"shankarpandala/lazypredict" -> "ydataai/ydata-profiling"
"pycaret/pycaret" -> "ydataai/ydata-profiling"
"pycaret/pycaret" -> "sktime/sktime"
"pycaret/pycaret" -> "unit8co/darts"
"pycaret/pycaret" -> "blue-yonder/tsfresh"
"pycaret/pycaret" -> "automl/auto-sklearn"
"pycaret/pycaret" -> "shap/shap"
"pycaret/pycaret" -> "optuna/optuna"
"pycaret/pycaret" -> "microsoft/FLAML"
"pycaret/pycaret" -> "autogluon/autogluon"
"pycaret/pycaret" -> "EpistasisLab/tpot"
"pycaret/pycaret" -> "mlflow/mlflow"
"pycaret/pycaret" -> "alteryx/featuretools"
"pycaret/pycaret" -> "yzhao062/pyod" ["e"=1]
"pycaret/pycaret" -> "facebookresearch/Kats"
"pycaret/pycaret" -> "interpretml/interpret"
"pytorch/serve" -> "triton-inference-server/server" ["e"=1]
"pytorch/serve" -> "tensorflow/serving" ["e"=1]
"pytorch/serve" -> "kserve/kserve"
"pytorch/serve" -> "bentoml/BentoML"
"pytorch/serve" -> "pytorch/TensorRT" ["e"=1]
"pytorch/serve" -> "SeldonIO/seldon-core"
"pytorch/serve" -> "ahkarami/Deep-Learning-in-Production" ["e"=1]
"pytorch/serve" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"pytorch/serve" -> "facebookresearch/fairscale" ["e"=1]
"pytorch/serve" -> "ShannonAI/service-streamer" ["e"=1]
"pytorch/serve" -> "huggingface/accelerate" ["e"=1]
"pytorch/serve" -> "horovod/horovod"
"pytorch/serve" -> "cortexlabs/cortex"
"pytorch/serve" -> "pytorch/captum" ["e"=1]
"pytorch/serve" -> "NVIDIA/TensorRT" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "haofanwang/Score-CAM" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "lopusz/awesome-interpretable-machine-learning"
"oneTaken/awesome_deep_learning_interpretability" -> "cfchen-duke/ProtoPNet" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "pbiecek/xai_resources"
"oneTaken/awesome_deep_learning_interpretability" -> "wangyongjie-ntu/Awesome-explainable-AI"
"oneTaken/awesome_deep_learning_interpretability" -> "pytorch/captum" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "jphall663/awesome-machine-learning-interpretability"
"oneTaken/awesome_deep_learning_interpretability" -> "zqs1022/interpretableCNN" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "marcoancona/DeepExplain" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "facebookresearch/TorchRay" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "zhoubolei/CAM" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "inouye-lab/ShapleyExplanationNetworks"
"oneTaken/awesome_deep_learning_interpretability" -> "MingchaoZhu/InterpretableMLBook" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "MisaOgura/flashtorch" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "ankurtaly/Integrated-Gradients" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "dmlc/xgboost" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "microsoft/LightGBM"
"VowpalWabbit/vowpal_wabbit" -> "ycjuan/libffm" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "srendle/libfm" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "hyperopt/hyperopt"
"VowpalWabbit/vowpal_wabbit" -> "catboost/catboost"
"VowpalWabbit/vowpal_wabbit" -> "EpistasisLab/tpot"
"VowpalWabbit/vowpal_wabbit" -> "clips/pattern" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "numenta/nupic-legacy" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "marcotcr/lime"
"VowpalWabbit/vowpal_wabbit" -> "facebookresearch/fastText" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "spotify/annoy" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "apache/predictionio" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "scikit-learn-contrib/imbalanced-learn"
"VowpalWabbit/vowpal_wabbit" -> "apache/mxnet" ["e"=1]
"modelop/hadrian" -> "CODAIT/aardpfark"
"modelop/hadrian" -> "datamininggroup/pfa"
"modelop/hadrian" -> "animator/titus2"
"ploomber/ploomber" -> "orchest/orchest"
"ploomber/ploomber" -> "kedro-org/kedro"
"ploomber/ploomber" -> "deepchecks/deepchecks"
"ploomber/ploomber" -> "fugue-project/fugue" ["e"=1]
"ploomber/ploomber" -> "unionai-oss/pandera"
"ploomber/ploomber" -> "zenml-io/zenml"
"ploomber/ploomber" -> "nteract/papermill" ["e"=1]
"ploomber/ploomber" -> "evidentlyai/evidently"
"ploomber/ploomber" -> "ploomber/jupysql" ["e"=1]
"ploomber/ploomber" -> "whylabs/whylogs" ["e"=1]
"ploomber/ploomber" -> "Nixtla/statsforecast"
"ploomber/ploomber" -> "MAIF/shapash"
"ploomber/ploomber" -> "online-ml/river"
"ploomber/ploomber" -> "flyteorg/flyte"
"ploomber/ploomber" -> "NannyML/nannyml"
"sktime/pytorch-forecasting" -> "awslabs/gluonts"
"sktime/pytorch-forecasting" -> "unit8co/darts"
"sktime/pytorch-forecasting" -> "Nixtla/neuralforecast"
"sktime/pytorch-forecasting" -> "timeseriesAI/tsai"
"sktime/pytorch-forecasting" -> "AIStream-Peelout/flow-forecast" ["e"=1]
"sktime/pytorch-forecasting" -> "Alro10/deep-learning-time-series" ["e"=1]
"sktime/pytorch-forecasting" -> "sktime/sktime"
"sktime/pytorch-forecasting" -> "ourownstory/neural_prophet"
"sktime/pytorch-forecasting" -> "zalandoresearch/pytorch-ts" ["e"=1]
"sktime/pytorch-forecasting" -> "zhouhaoyi/Informer2020" ["e"=1]
"sktime/pytorch-forecasting" -> "thuml/Time-Series-Library" ["e"=1]
"sktime/pytorch-forecasting" -> "thuml/Autoformer" ["e"=1]
"sktime/pytorch-forecasting" -> "Nixtla/statsforecast"
"sktime/pytorch-forecasting" -> "philipperemy/n-beats" ["e"=1]
"sktime/pytorch-forecasting" -> "facebookresearch/Kats"
"rasbt/mlxtend" -> "DistrictDataLabs/yellowbrick"
"rasbt/mlxtend" -> "scikit-learn-contrib/imbalanced-learn"
"rasbt/mlxtend" -> "scikit-learn-contrib/category_encoders"
"rasbt/mlxtend" -> "EpistasisLab/tpot"
"rasbt/mlxtend" -> "hyperopt/hyperopt"
"rasbt/mlxtend" -> "automl/auto-sklearn"
"rasbt/mlxtend" -> "TeamHG-Memex/eli5"
"rasbt/mlxtend" -> "blue-yonder/tsfresh"
"rasbt/mlxtend" -> "reiinakano/scikit-plot"
"rasbt/mlxtend" -> "alteryx/featuretools"
"rasbt/mlxtend" -> "scikit-optimize/scikit-optimize"
"rasbt/mlxtend" -> "scikit-learn-contrib/sklearn-pandas"
"rasbt/mlxtend" -> "ydataai/ydata-profiling"
"rasbt/mlxtend" -> "marcotcr/lime"
"rasbt/mlxtend" -> "catboost/catboost"
"timeseriesAI/tsai" -> "sktime/pytorch-forecasting"
"timeseriesAI/tsai" -> "awslabs/gluonts"
"timeseriesAI/tsai" -> "thuml/Time-Series-Library" ["e"=1]
"timeseriesAI/tsai" -> "yuqinie98/PatchTST" ["e"=1]
"timeseriesAI/tsai" -> "sktime/sktime"
"timeseriesAI/tsai" -> "Nixtla/neuralforecast"
"timeseriesAI/tsai" -> "Alro10/deep-learning-time-series" ["e"=1]
"timeseriesAI/tsai" -> "unit8co/darts"
"timeseriesAI/tsai" -> "AIStream-Peelout/flow-forecast" ["e"=1]
"timeseriesAI/tsai" -> "qingsongedu/time-series-transformers-review" ["e"=1]
"timeseriesAI/tsai" -> "hfawaz/dl-4-tsc" ["e"=1]
"timeseriesAI/tsai" -> "blue-yonder/tsfresh"
"timeseriesAI/tsai" -> "cure-lab/LTSF-Linear" ["e"=1]
"timeseriesAI/tsai" -> "zhouhaoyi/Informer2020" ["e"=1]
"timeseriesAI/tsai" -> "johannfaouzi/pyts" ["e"=1]
"vinid/cade" -> "vinid/quica"
"hyungkwonko/umato" -> "hj-n/zadu"
"hyungkwonko/umato" -> "hj-n/labeled-datasets"
"hyungkwonko/umato" -> "hyungkwonko/progressive-umap"
"WillKoehrsen/discovering-disease-outbreaks-base" -> "WillKoehrsen/mastering-large-datasets"
"keras-team/keras-io" -> "keras-team/keras-cv"
"keras-team/keras-io" -> "keras-team/keras-hub"
"keras-team/keras-io" -> "tensorflow/docs"
"keras-team/keras-io" -> "keras-team/keras-tuner"
"keras-team/keras-io" -> "keras-team/keras-core" ["e"=1]
"keras-team/keras-io" -> "PacktPublishing/Advanced-Deep-Learning-with-Keras" ["e"=1]
"keras-team/keras-io" -> "eriklindernoren/Keras-GAN" ["e"=1]
"keras-team/keras-io" -> "tensorflow/datasets"
"keras-team/keras-io" -> "pytorch/tutorials" ["e"=1]
"keras-team/keras-io" -> "tensorflow/addons"
"keras-team/keras-io" -> "google-research/vision_transformer" ["e"=1]
"keras-team/keras-io" -> "google-deepmind/deepmind-research" ["e"=1]
"keras-team/keras-io" -> "google/flax" ["e"=1]
"keras-team/keras-io" -> "keras-team/keras-applications" ["e"=1]
"keras-team/keras-io" -> "tensorflow/recommenders" ["e"=1]
"microsoft/responsible-ai-toolbox" -> "fairlearn/fairlearn"
"microsoft/responsible-ai-toolbox" -> "interpretml/interpret-community"
"microsoft/responsible-ai-toolbox" -> "interpretml/DiCE"
"microsoft/responsible-ai-toolbox" -> "interpretml/interpret"
"microsoft/responsible-ai-toolbox" -> "Azure/azureml-examples" ["e"=1]
"microsoft/responsible-ai-toolbox" -> "microsoft/BackwardCompatibilityML"
"microsoft/responsible-ai-toolbox" -> "ModelOriented/DALEX"
"microsoft/responsible-ai-toolbox" -> "Azure/mlops-v2" ["e"=1]
"microsoft/responsible-ai-toolbox" -> "Trusted-AI/AIF360"
"microsoft/responsible-ai-toolbox" -> "microsoft/MLOpsPython" ["e"=1]
"microsoft/responsible-ai-toolbox" -> "Trusted-AI/AIX360"
"microsoft/responsible-ai-toolbox" -> "microsoft/FLAML"
"microsoft/responsible-ai-toolbox" -> "deepchecks/deepchecks"
"microsoft/responsible-ai-toolbox" -> "evidentlyai/evidently"
"microsoft/responsible-ai-toolbox" -> "microsoft/responsible-ai-toolbox-mitigations"
"microsoft/FLAML" -> "pycaret/pycaret"
"microsoft/FLAML" -> "autogluon/autogluon"
"microsoft/FLAML" -> "mljar/mljar-supervised"
"microsoft/FLAML" -> "automl/auto-sklearn"
"microsoft/FLAML" -> "online-ml/river"
"microsoft/FLAML" -> "feature-engine/feature_engine"
"microsoft/FLAML" -> "interpretml/interpret"
"microsoft/FLAML" -> "MAIF/shapash"
"microsoft/FLAML" -> "facebookresearch/Kats"
"microsoft/FLAML" -> "deepchecks/deepchecks"
"microsoft/FLAML" -> "Nixtla/statsforecast"
"microsoft/FLAML" -> "unit8co/darts"
"microsoft/FLAML" -> "salesforce/Merlion"
"microsoft/FLAML" -> "optuna/optuna"
"microsoft/FLAML" -> "alteryx/featuretools"
"lux-org/lux" -> "fbdesignpro/sweetviz"
"lux-org/lux" -> "ydataai/ydata-profiling"
"lux-org/lux" -> "sfu-db/dataprep"
"lux-org/lux" -> "man-group/dtale"
"lux-org/lux" -> "modin-project/modin"
"lux-org/lux" -> "AutoViML/AutoViz"
"lux-org/lux" -> "vaexio/vaex"
"lux-org/lux" -> "pycaret/pycaret"
"lux-org/lux" -> "adamerose/PandasGUI"
"lux-org/lux" -> "facebookresearch/Kats"
"lux-org/lux" -> "MAIF/shapash"
"lux-org/lux" -> "shankarpandala/lazypredict"
"lux-org/lux" -> "vega/altair" ["e"=1]
"lux-org/lux" -> "oegedijk/explainerdashboard"
"lux-org/lux" -> "Kanaries/pygwalker" ["e"=1]
"activeloopai/deeplake" -> "aimhubio/aim"
"activeloopai/deeplake" -> "zenml-io/zenml"
"activeloopai/deeplake" -> "Lightning-AI/pytorch-lightning" ["e"=1]
"activeloopai/deeplake" -> "iterative/dvc"
"activeloopai/deeplake" -> "bentoml/BentoML"
"activeloopai/deeplake" -> "visenger/awesome-mlops" ["e"=1]
"activeloopai/deeplake" -> "evidentlyai/evidently"
"activeloopai/deeplake" -> "clearml/clearml"
"activeloopai/deeplake" -> "mlflow/mlflow"
"activeloopai/deeplake" -> "arogozhnikov/einops" ["e"=1]
"activeloopai/deeplake" -> "deepset-ai/haystack" ["e"=1]
"activeloopai/deeplake" -> "Netflix/metaflow"
"activeloopai/deeplake" -> "kornia/kornia" ["e"=1]
"activeloopai/deeplake" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"activeloopai/deeplake" -> "cleanlab/cleanlab"
"bayesian-optimization/BayesianOptimization" -> "hyperopt/hyperopt"
"bayesian-optimization/BayesianOptimization" -> "scikit-optimize/scikit-optimize"
"bayesian-optimization/BayesianOptimization" -> "pytorch/botorch"
"bayesian-optimization/BayesianOptimization" -> "optuna/optuna"
"bayesian-optimization/BayesianOptimization" -> "shap/shap"
"bayesian-optimization/BayesianOptimization" -> "microsoft/LightGBM"
"bayesian-optimization/BayesianOptimization" -> "EpistasisLab/tpot"
"bayesian-optimization/BayesianOptimization" -> "cornellius-gp/gpytorch"
"bayesian-optimization/BayesianOptimization" -> "scikit-learn-contrib/imbalanced-learn"
"bayesian-optimization/BayesianOptimization" -> "pymc-devs/pymc"
"bayesian-optimization/BayesianOptimization" -> "automl/auto-sklearn"
"bayesian-optimization/BayesianOptimization" -> "HIPS/Spearmint"
"bayesian-optimization/BayesianOptimization" -> "pyro-ppl/pyro"
"bayesian-optimization/BayesianOptimization" -> "blue-yonder/tsfresh"
"bayesian-optimization/BayesianOptimization" -> "dmlc/xgboost" ["e"=1]
"keras-team/keras-hub" -> "keras-team/keras-cv"
"keras-team/keras-hub" -> "keras-team/keras-core" ["e"=1]
"keras-team/keras-hub" -> "keras-team/keras-io"
"keras-team/keras-hub" -> "keras-team/keras-tuner"
"keras-team/keras-hub" -> "tensorflow/text"
"keras-team/keras-hub" -> "tensorflow/decision-forests"
"keras-team/keras-hub" -> "divamgupta/stable-diffusion-tensorflow" ["e"=1]
"keras-team/keras-hub" -> "tensorflow/similarity"
"keras-team/keras-hub" -> "keras-team/keras-rs"
"keras-team/keras-hub" -> "james77777778/keras-image-models"
"keras-team/keras-hub" -> "keras-team/tf-keras"
"keras-team/keras-hub" -> "leondgarse/keras_cv_attention_models"
"keras-team/keras-hub" -> "keras-team/governance"
"keras-team/keras-hub" -> "fchollet/stable-diffusion-tensorflow"
"MAIF/shapash" -> "oegedijk/explainerdashboard"
"MAIF/shapash" -> "scikit-learn-contrib/MAPIE"
"MAIF/shapash" -> "interpretml/interpret"
"MAIF/shapash" -> "SeldonIO/alibi"
"MAIF/shapash" -> "deepchecks/deepchecks"
"MAIF/shapash" -> "feature-engine/feature_engine"
"MAIF/shapash" -> "pycaret/pycaret"
"MAIF/shapash" -> "SeldonIO/alibi-detect"
"MAIF/shapash" -> "online-ml/river"
"MAIF/shapash" -> "csinva/imodels"
"MAIF/shapash" -> "ModelOriented/DALEX"
"MAIF/shapash" -> "microsoft/FLAML"
"MAIF/shapash" -> "Nixtla/statsforecast"
"MAIF/shapash" -> "evidentlyai/evidently"
"MAIF/shapash" -> "mljar/mljar-supervised"
"PacktPublishing/Vue.js-3.0-Cookbook" -> "PacktPublishing/-Vue.js-3-By-Example"
"vaexio/vaex" -> "modin-project/modin"
"vaexio/vaex" -> "dask/dask" ["e"=1]
"vaexio/vaex" -> "ydataai/ydata-profiling"
"vaexio/vaex" -> "vega/altair" ["e"=1]
"vaexio/vaex" -> "databricks/koalas" ["e"=1]
"vaexio/vaex" -> "jmcarpenter2/swifter"
"vaexio/vaex" -> "voila-dashboards/voila" ["e"=1]
"vaexio/vaex" -> "rapidsai/cudf" ["e"=1]
"vaexio/vaex" -> "blue-yonder/tsfresh"
"vaexio/vaex" -> "sktime/sktime"
"vaexio/vaex" -> "shap/shap"
"vaexio/vaex" -> "kedro-org/kedro"
"vaexio/vaex" -> "iterative/dvc"
"vaexio/vaex" -> "pycaret/pycaret"
"vaexio/vaex" -> "nteract/papermill" ["e"=1]
"tensorflow/docs-l10n" -> "tensorflow/docs"
"tensorflow/docs-l10n" -> "keras-team/keras-docs-ko"
"tensorflow/docs-l10n" -> "keras-team/keras-io"
"fbdesignpro/sweetviz" -> "AutoViML/AutoViz"
"fbdesignpro/sweetviz" -> "sfu-db/dataprep"
"fbdesignpro/sweetviz" -> "ydataai/ydata-profiling"
"fbdesignpro/sweetviz" -> "lux-org/lux"
"fbdesignpro/sweetviz" -> "man-group/dtale"
"fbdesignpro/sweetviz" -> "jbesomi/texthero" ["e"=1]
"fbdesignpro/sweetviz" -> "adamerose/PandasGUI"
"fbdesignpro/sweetviz" -> "ResidentMario/missingno"
"fbdesignpro/sweetviz" -> "pycaret/pycaret"
"fbdesignpro/sweetviz" -> "DistrictDataLabs/yellowbrick"
"fbdesignpro/sweetviz" -> "MAIF/shapash"
"fbdesignpro/sweetviz" -> "feature-engine/feature_engine"
"fbdesignpro/sweetviz" -> "shankarpandala/lazypredict"
"fbdesignpro/sweetviz" -> "oegedijk/explainerdashboard"
"fbdesignpro/sweetviz" -> "interpretml/interpret"
"winedarksea/AutoTS" -> "AutoViML/Auto_TS"
"winedarksea/AutoTS" -> "firmai/atspy"
"winedarksea/AutoTS" -> "alkaline-ml/pmdarima"
"winedarksea/AutoTS" -> "Nixtla/mlforecast"
"winedarksea/AutoTS" -> "skforecast/skforecast"
"winedarksea/AutoTS" -> "linkedin/greykite"
"winedarksea/AutoTS" -> "Nixtla/neuralforecast"
"winedarksea/AutoTS" -> "facebookresearch/Kats"
"winedarksea/AutoTS" -> "uber/orbit"
"winedarksea/AutoTS" -> "ourownstory/neural_prophet"
"winedarksea/AutoTS" -> "sktime/pytorch-forecasting"
"winedarksea/AutoTS" -> "unit8co/darts"
"winedarksea/AutoTS" -> "Nixtla/statsforecast"
"winedarksea/AutoTS" -> "DataCanvasIO/HyperTS"
"winedarksea/AutoTS" -> "johannfaouzi/pyts" ["e"=1]
"HIPS/autograd" -> "jax-ml/jax" ["e"=1]
"HIPS/autograd" -> "blei-lab/edward"
"HIPS/autograd" -> "mattjj/autodidact" ["e"=1]
"HIPS/autograd" -> "pyro-ppl/pyro"
"HIPS/autograd" -> "google/flax" ["e"=1]
"HIPS/autograd" -> "rtqichen/torchdiffeq" ["e"=1]
"HIPS/autograd" -> "pymc-devs/pymc"
"HIPS/autograd" -> "google/tangent" ["e"=1]
"HIPS/autograd" -> "cupy/cupy" ["e"=1]
"HIPS/autograd" -> "cornellius-gp/gpytorch"
"HIPS/autograd" -> "hyperopt/hyperopt"
"HIPS/autograd" -> "horovod/horovod"
"HIPS/autograd" -> "google-deepmind/sonnet" ["e"=1]
"HIPS/autograd" -> "fossasia/visdom" ["e"=1]
"HIPS/autograd" -> "chainer/chainer" ["e"=1]
"cerlymarco/tsmoothie" -> "cerlymarco/MEDIUM_NoteBook"
"cerlymarco/tsmoothie" -> "zillow/luminaire" ["e"=1]
"cerlymarco/tsmoothie" -> "fraunhoferportugal/tsfel" ["e"=1]
"cerlymarco/tsmoothie" -> "winedarksea/AutoTS"
"cerlymarco/tsmoothie" -> "cerlymarco/linear-tree"
"cerlymarco/tsmoothie" -> "deepcharles/ruptures"
"cerlymarco/tsmoothie" -> "Ekeany/Boruta-Shap"
"cerlymarco/tsmoothie" -> "tr8dr/tseries-patterns" ["e"=1]
"cerlymarco/tsmoothie" -> "oseiskar/simdkalman"
"cerlymarco/tsmoothie" -> "tblume1992/ThymeBoost"
"cerlymarco/tsmoothie" -> "carlomazzaferro/scikit-hts"
"cerlymarco/tsmoothie" -> "johannfaouzi/pyts" ["e"=1]
"cerlymarco/tsmoothie" -> "cod3licious/autofeat"
"cerlymarco/tsmoothie" -> "microprediction/timemachines"
"cerlymarco/tsmoothie" -> "cerlymarco/shap-hypetune"
"dietmarwo/fast-cma-es" -> "CyberAgentAILab/cmaes"
"mlrun/mlrun" -> "nuclio/nuclio" ["e"=1]
"mlrun/mlrun" -> "mlrun/demos"
"mlrun/mlrun" -> "SeldonIO/seldon-core"
"mlrun/mlrun" -> "zenml-io/zenml"
"mlrun/mlrun" -> "datarevenue-berlin/OpenMLOps"
"mlrun/mlrun" -> "kubeflow-kale/kale"
"mlrun/mlrun" -> "bentoml/BentoML"
"mlrun/mlrun" -> "kserve/kserve"
"mlrun/mlrun" -> "evidentlyai/evidently"
"mlrun/mlrun" -> "VertaAI/modeldb"
"mlrun/mlrun" -> "deepchecks/deepchecks"
"mlrun/mlrun" -> "feast-dev/feast"
"mlrun/mlrun" -> "whylabs/whylogs" ["e"=1]
"mlrun/mlrun" -> "polyaxon/polyaxon"
"mlrun/mlrun" -> "kedro-org/kedro"
"8080labs/ppscore" -> "scikit-learn-contrib/MAPIE"
"8080labs/ppscore" -> "MAIF/shapash"
"8080labs/ppscore" -> "Ekeany/Boruta-Shap"
"8080labs/ppscore" -> "koaning/scikit-lego"
"8080labs/ppscore" -> "cerlymarco/shap-hypetune"
"8080labs/ppscore" -> "oegedijk/explainerdashboard"
"8080labs/ppscore" -> "Nixtla/mlforecast"
"8080labs/ppscore" -> "feature-engine/feature_engine"
"8080labs/ppscore" -> "mckinsey/causalnex" ["e"=1]
"8080labs/ppscore" -> "shankarpandala/lazypredict"
"8080labs/ppscore" -> "scikit-learn-contrib/category_encoders"
"8080labs/ppscore" -> "cod3licious/autofeat"
"8080labs/ppscore" -> "NannyML/nannyml"
"8080labs/ppscore" -> "8080labs/pyforest"
"8080labs/ppscore" -> "stanfordmlgroup/ngboost"
"jmschrei/pomegranate" -> "pgmpy/pgmpy" ["e"=1]
"jmschrei/pomegranate" -> "hmmlearn/hmmlearn"
"jmschrei/pomegranate" -> "blei-lab/edward"
"jmschrei/pomegranate" -> "pymc-devs/pymc"
"jmschrei/pomegranate" -> "pyro-ppl/pyro"
"jmschrei/pomegranate" -> "markdregan/Bayesian-Modelling-in-Python" ["e"=1]
"jmschrei/pomegranate" -> "RJT1990/pyflux"
"jmschrei/pomegranate" -> "bayespy/bayespy" ["e"=1]
"jmschrei/pomegranate" -> "arviz-devs/arviz" ["e"=1]
"jmschrei/pomegranate" -> "DistrictDataLabs/yellowbrick"
"jmschrei/pomegranate" -> "EpistasisLab/tpot"
"jmschrei/pomegranate" -> "pyro-ppl/numpyro" ["e"=1]
"jmschrei/pomegranate" -> "scikit-learn-contrib/imbalanced-learn"
"jmschrei/pomegranate" -> "scikit-optimize/scikit-optimize"
"jmschrei/pomegranate" -> "tensorflow/skflow" ["e"=1]
"socialfoundations/whynot" -> "socialfoundations/folktables"
"socialfoundations/whynot" -> "google/ml-fairness-gym"
"firmai/deltapy" -> "firmai/atspy"
"firmai/deltapy" -> "firmai/datagene"
"firmai/deltapy" -> "heidelbergcement/hcrystalball"
"firmai/deltapy" -> "somepago/saint" ["e"=1]
"firmai/deltapy" -> "manujosephv/pytorch_tabular" ["e"=1]
"firmai/deltapy" -> "arundo/tsaug" ["e"=1]
"firmai/deltapy" -> "Diyago/Tabular-data-generation"
"firmai/deltapy" -> "tcapelle/timeseries_fastai" ["e"=1]
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/Real-World_Vue-3"
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/real-world-vue"
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/validating-vue3-forms"
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/build-gmail-clone-with-vue-3"
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/watch-us-build-trello"
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/Real-World-Vue-3-New-Syntax"
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/authentication_course"
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/Unit-Testing-Vue-3"
"Code-Pop/Intro-to-Vue-3" -> "PacktPublishing/Vue.js-3.0-Cookbook"
"Code-Pop/Intro-to-Vue-3" -> "iamshaunjp/Vue-3-Firebase" ["e"=1]
"Code-Pop/Intro-to-Vue-3" -> "Code-Pop/beautify-with-vuetify"
"Code-Pop/Intro-to-Vue-3" -> "mitsuba-renderer/mitsuba3" ["e"=1]
"ourownstory/neural_prophet" -> "Nixtla/statsforecast"
"ourownstory/neural_prophet" -> "sktime/pytorch-forecasting"
"ourownstory/neural_prophet" -> "unit8co/darts"
"ourownstory/neural_prophet" -> "awslabs/gluonts"
"ourownstory/neural_prophet" -> "facebookresearch/Kats"
"ourownstory/neural_prophet" -> "uber/orbit"
"ourownstory/neural_prophet" -> "Nixtla/neuralforecast"
"ourownstory/neural_prophet" -> "sktime/sktime"
"ourownstory/neural_prophet" -> "facebook/prophet"
"ourownstory/neural_prophet" -> "salesforce/Merlion"
"ourownstory/neural_prophet" -> "linkedin/greykite"
"ourownstory/neural_prophet" -> "winedarksea/AutoTS"
"ourownstory/neural_prophet" -> "tslearn-team/tslearn"
"ourownstory/neural_prophet" -> "blue-yonder/tsfresh"
"ourownstory/neural_prophet" -> "microsoft/forecasting"
"flyteorg/flyte" -> "Netflix/metaflow"
"flyteorg/flyte" -> "feast-dev/feast"
"flyteorg/flyte" -> "ray-project/kuberay"
"flyteorg/flyte" -> "dagster-io/dagster" ["e"=1]
"flyteorg/flyte" -> "flyteorg/flytekit"
"flyteorg/flyte" -> "SeldonIO/seldon-core"
"flyteorg/flyte" -> "zenml-io/zenml"
"flyteorg/flyte" -> "PrefectHQ/prefect" ["e"=1]
"flyteorg/flyte" -> "bentoml/BentoML"
"flyteorg/flyte" -> "amundsen-io/amundsen" ["e"=1]
"flyteorg/flyte" -> "iterative/dvc"
"flyteorg/flyte" -> "kubeflow/kubeflow"
"flyteorg/flyte" -> "unionai-oss/pandera"
"flyteorg/flyte" -> "kserve/kserve"
"flyteorg/flyte" -> "pachyderm/pachyderm"
"gretelai/gretel-synthetics" -> "gretelai/gretel-blueprints"
"gretelai/gretel-synthetics" -> "gretelai/gretel-python-client"
"gretelai/gretel-synthetics" -> "ydataai/ydata-synthetic" ["e"=1]
"gretelai/gretel-synthetics" -> "fjxmlzn/DoppelGANger" ["e"=1]
"gretelai/gretel-synthetics" -> "gretelai/awesome-synthetic-data"
"gretelai/gretel-synthetics" -> "sdv-dev/CTGAN"
"gretelai/gretel-synthetics" -> "sdv-dev/SDV"
"gretelai/gretel-synthetics" -> "sdv-dev/SDGym"
"gretelai/gretel-synthetics" -> "opendp/smartnoise-sdk" ["e"=1]
"gretelai/gretel-synthetics" -> "sdv-dev/SDMetrics"
"gretelai/gretel-synthetics" -> "vanderschaarlab/synthcity"
"gretelai/gretel-synthetics" -> "gretelai/gdpr-helpers"
"gretelai/gretel-synthetics" -> "worldbank/REaLTabFormer"
"gretelai/gretel-synthetics" -> "tabularis-ai/be_great"
"gretelai/gretel-synthetics" -> "gretelai/gretel-tools"
"microsoft/BackwardCompatibilityML" -> "Azure/Azureml-ResponsibleAI-Preview"
"microsoft/BackwardCompatibilityML" -> "interpretml/slicer"
"ypeleg/HungaBunga" -> "8080labs/pyforest"
"ypeleg/HungaBunga" -> "DagsHub/fds"
"ypeleg/HungaBunga" -> "wilkelab/ggtext" ["e"=1]
"ypeleg/HungaBunga" -> "google-deepmind/bsuite" ["e"=1]
"ypeleg/HungaBunga" -> "DenisVorotyntsev/CategoricalEncodingBenchmark" ["e"=1]
"ypeleg/HungaBunga" -> "dovpanda-dev/dovpanda"
"ypeleg/HungaBunga" -> "koaning/scikit-lego"
"ypeleg/HungaBunga" -> "paulbricman/python-sirajnet"
"ypeleg/HungaBunga" -> "uber/manifold"
"ypeleg/HungaBunga" -> "keras-team/keras-tuner"
"amitness/toolbox" -> "Neuraxio/Neuraxle"
"amitness/toolbox" -> "amitness/papers-with-video"
"amitness/toolbox" -> "uber/manifold"
"amitness/toolbox" -> "jmugan/modern_practical_nlp"
"amitness/toolbox" -> "ray-project/tune-sklearn"
"amitness/toolbox" -> "hundredblocks/ml-powered-applications" ["e"=1]
"amitness/toolbox" -> "dair-ai/nlp_paper_summaries" ["e"=1]
"amitness/toolbox" -> "rasbt/stat453-deep-learning-ss20" ["e"=1]
"amitness/toolbox" -> "SE-ML/awesome-seml" ["e"=1]
"amitness/toolbox" -> "dair-ai/d2l-study-group" ["e"=1]
"amitness/toolbox" -> "benedekrozemberczki/awesome-gradient-boosting-papers" ["e"=1]
"amitness/toolbox" -> "yassouali/ML-paper-notes" ["e"=1]
"amitness/toolbox" -> "luspr/awesome-ml-courses" ["e"=1]
"amitness/toolbox" -> "jmcarpenter2/swifter"
"amitness/toolbox" -> "EthicalML/xai"
"clearml/clearml-agent" -> "clearml/clearml-server"
"clearml/clearml-agent" -> "allegroai/clearml-server-helm"
"clearml/clearml-agent" -> "allegroai/clearml-server-k8s"
"clearml/clearml-agent" -> "allegroai/trains-jupyter-plugin"
"clearml/clearml-agent" -> "clearml/clearml-web"
"clearml/clearml-agent" -> "allegroai/clearml-pycharm-plugin"
"clearml/clearml-agent" -> "clearml/clearml-serving"
"facebookresearch/hiplot" -> "microsoft/hummingbird"
"facebookresearch/hiplot" -> "onelivesleft/PrettyErrors" ["e"=1]
"facebookresearch/hiplot" -> "microsoft/tensorwatch" ["e"=1]
"facebookresearch/hiplot" -> "facebookresearch/hydra" ["e"=1]
"facebookresearch/hiplot" -> "facebookresearch/nevergrad"
"facebookresearch/hiplot" -> "jwkvam/celluloid" ["e"=1]
"facebookresearch/hiplot" -> "scikit-optimize/scikit-optimize"
"facebookresearch/hiplot" -> "pytorch/captum" ["e"=1]
"facebookresearch/hiplot" -> "DistrictDataLabs/yellowbrick"
"facebookresearch/hiplot" -> "vaexio/vaex"
"facebookresearch/hiplot" -> "parrt/tensor-sensor" ["e"=1]
"facebookresearch/hiplot" -> "vahidk/EffectivePyTorch" ["e"=1]
"facebookresearch/hiplot" -> "jmcarpenter2/swifter"
"facebookresearch/hiplot" -> "jettify/pytorch-optimizer" ["e"=1]
"facebookresearch/hiplot" -> "TeamHG-Memex/eli5"
"uber/orbit" -> "linkedin/greykite"
"uber/orbit" -> "Nixtla/statsforecast"
"uber/orbit" -> "ourownstory/neural_prophet"
"uber/orbit" -> "salesforce/Merlion"
"uber/orbit" -> "uber/causalml" ["e"=1]
"uber/orbit" -> "facebookresearch/Kats"
"uber/orbit" -> "winedarksea/AutoTS"
"uber/orbit" -> "sktime/sktime"
"uber/orbit" -> "TDAmeritrade/stumpy"
"uber/orbit" -> "awslabs/gluonts"
"uber/orbit" -> "unit8co/darts"
"uber/orbit" -> "stanfordmlgroup/ngboost"
"uber/orbit" -> "scikit-learn-contrib/MAPIE"
"uber/orbit" -> "tslearn-team/tslearn"
"uber/orbit" -> "pymc-labs/CausalPy" ["e"=1]
"santosjorge/cufflinks" -> "vaexio/vaex"
"santosjorge/cufflinks" -> "plotly/plotly.py" ["e"=1]
"santosjorge/cufflinks" -> "vega/altair" ["e"=1]
"santosjorge/cufflinks" -> "modin-project/modin"
"santosjorge/cufflinks" -> "ydataai/ydata-profiling"
"santosjorge/cufflinks" -> "quantopian/qgrid" ["e"=1]
"santosjorge/cufflinks" -> "quantopian/pyfolio" ["e"=1]
"santosjorge/cufflinks" -> "plotly/dash" ["e"=1]
"santosjorge/cufflinks" -> "bqplot/bqplot" ["e"=1]
"santosjorge/cufflinks" -> "DistrictDataLabs/yellowbrick"
"santosjorge/cufflinks" -> "pydata/pandas-datareader" ["e"=1]
"santosjorge/cufflinks" -> "plotly/plotly_express" ["e"=1]
"santosjorge/cufflinks" -> "mwaskom/seaborn" ["e"=1]
"santosjorge/cufflinks" -> "voila-dashboards/voila" ["e"=1]
"santosjorge/cufflinks" -> "TeamHG-Memex/eli5"
"microprediction/microprediction" -> "microprediction/precise"
"microprediction/microprediction" -> "microprediction/timemachines"
"microprediction/microprediction" -> "OVVO-Financial/NNS"
"microprediction/microprediction" -> "microprediction/humpday"
"microprediction/microprediction" -> "microprediction/winning"
"8080labs/pyforest" -> "ypeleg/HungaBunga"
"8080labs/pyforest" -> "tkrabel/bamboolib"
"8080labs/pyforest" -> "8080labs/ppscore"
"8080labs/pyforest" -> "danijar/handout" ["e"=1]
"8080labs/pyforest" -> "tkrabel/edaviz"
"8080labs/pyforest" -> "quantopian/qgrid" ["e"=1]
"8080labs/pyforest" -> "google-deepmind/bsuite" ["e"=1]
"8080labs/pyforest" -> "firmai/pandasvault" ["e"=1]
"8080labs/pyforest" -> "TeamHG-Memex/eli5"
"8080labs/pyforest" -> "jupyterlab/debugger" ["e"=1]
"8080labs/pyforest" -> "wilkelab/ggtext" ["e"=1]
"8080labs/pyforest" -> "LiyuanLucasLiu/RAdam" ["e"=1]
"8080labs/pyforest" -> "HunterMcGushion/hyperparameter_hunter"
"8080labs/pyforest" -> "justmarkham/scikit-learn-tips" ["e"=1]
"8080labs/pyforest" -> "microsoft/hummingbird"
"alteryx/woodwork" -> "alteryx/compose"
"alteryx/woodwork" -> "alteryx/nlp_primitives"
"alteryx/woodwork" -> "alteryx/evalml"
"alteryx/woodwork" -> "alteryx/categorical_encoding"
"alteryx/woodwork" -> "alteryx/autonormalize"
"explainX/explainx" -> "EthicalML/xai"
"explainX/explainx" -> "wangyongjie-ntu/Awesome-explainable-AI"
"explainX/explainx" -> "Trusted-AI/AIX360"
"explainX/explainx" -> "interpretml/DiCE"
"explainX/explainx" -> "pbiecek/xai_resources"
"explainX/explainx" -> "eli5-org/eli5"
"explainX/explainx" -> "oracle/skater"
"explainX/explainx" -> "ModelOriented/DALEX"
"explainX/explainx" -> "christophM/rulefit"
"explainX/explainx" -> "Ekeany/Boruta-Shap"
"explainX/explainx" -> "SeldonIO/alibi"
"explainX/explainx" -> "AutoViML/Auto_ViML"
"HIPS/Spearmint" -> "JasperSnoek/spearmint"
"HIPS/Spearmint" -> "Yelp/MOE"
"HIPS/Spearmint" -> "SheffieldML/GPyOpt"
"HIPS/Spearmint" -> "hyperopt/hyperopt"
"HIPS/Spearmint" -> "automl/SMAC3"
"HIPS/Spearmint" -> "automl/RoBO"
"HIPS/Spearmint" -> "scikit-optimize/scikit-optimize"
"HIPS/Spearmint" -> "mila-iqia/blocks" ["e"=1]
"HIPS/Spearmint" -> "bayesian-optimization/BayesianOptimization"
"HIPS/Spearmint" -> "SheffieldML/GPy"
"HIPS/Spearmint" -> "GPflow/GPflow"
"HIPS/Spearmint" -> "hyperopt/hyperopt-sklearn"
"HIPS/Spearmint" -> "blei-lab/edward"
"HIPS/Spearmint" -> "jaberg/hyperopt"
"HIPS/Spearmint" -> "GPflow/GPflowOpt"
"orchest/orchest" -> "ploomber/ploomber"
"orchest/orchest" -> "kedro-org/kedro"
"orchest/orchest" -> "MAIF/shapash"
"orchest/orchest" -> "lux-org/lux"
"orchest/orchest" -> "zenml-io/zenml"
"orchest/orchest" -> "evidentlyai/evidently"
"orchest/orchest" -> "mljar/mercury" ["e"=1]
"orchest/orchest" -> "deepchecks/deepchecks"
"orchest/orchest" -> "modin-project/modin"
"orchest/orchest" -> "flyteorg/flyte"
"orchest/orchest" -> "online-ml/river"
"orchest/orchest" -> "fugue-project/fugue" ["e"=1]
"orchest/orchest" -> "ml-tooling/opyrator"
"orchest/orchest" -> "adamerose/PandasGUI"
"orchest/orchest" -> "man-group/dtale"
"elyra-ai/elyra" -> "kubeflow-kale/kale"
"elyra-ai/elyra" -> "jupyter-server/enterprise_gateway" ["e"=1]
"elyra-ai/elyra" -> "elyra-ai/examples"
"elyra-ai/elyra" -> "jupyterlab/extension-examples" ["e"=1]
"elyra-ai/elyra" -> "jupyterlab/jupyterlab-git" ["e"=1]
"elyra-ai/elyra" -> "kubeflow/manifests"
"elyra-ai/elyra" -> "jupyter-lsp/jupyterlab-lsp" ["e"=1]
"elyra-ai/elyra" -> "nteract/papermill" ["e"=1]
"elyra-ai/elyra" -> "ploomber/ploomber"
"elyra-ai/elyra" -> "kubeflow/pipelines"
"elyra-ai/elyra" -> "mauhai/awesome-jupyterlab" ["e"=1]
"elyra-ai/elyra" -> "jupyter/nbdime" ["e"=1]
"elyra-ai/elyra" -> "jupyter-server/jupyter_server" ["e"=1]
"elyra-ai/elyra" -> "jupyterlab-contrib/jupyterlab-variableInspector" ["e"=1]
"elyra-ai/elyra" -> "mwouts/jupytext" ["e"=1]
"finlytics-hub/credit_risk_model" -> "jalajthanaki/credit-risk-modelling"
"finlytics-hub/credit_risk_model" -> "tradertanmay/Credit-Risk-Modeling"
"finlytics-hub/credit_risk_model" -> "vishnukanduri/Credit-Risk-Modeling-in-Python"
"finlytics-hub/credit_risk_model" -> "djbolder/credit-risk-modelling"
"finlytics-hub/credit_risk_model" -> "yineme/Credit_Risk_modelling"
"finlytics-hub/credit_risk_model" -> "mourarthur/awesome-credit-modeling"
"pachyderm/pachyderm" -> "polyaxon/polyaxon"
"pachyderm/pachyderm" -> "iterative/dvc"
"pachyderm/pachyderm" -> "SeldonIO/seldon-core"
"pachyderm/pachyderm" -> "kubeflow/kubeflow"
"pachyderm/pachyderm" -> "Netflix/metaflow"
"pachyderm/pachyderm" -> "spotify/luigi" ["e"=1]
"pachyderm/pachyderm" -> "nteract/papermill" ["e"=1]
"pachyderm/pachyderm" -> "mlflow/mlflow"
"pachyderm/pachyderm" -> "flyteorg/flyte"
"pachyderm/pachyderm" -> "cortexlabs/cortex"
"pachyderm/pachyderm" -> "dask/dask" ["e"=1]
"pachyderm/pachyderm" -> "feast-dev/feast"
"pachyderm/pachyderm" -> "airbnb/knowledge-repo"
"pachyderm/pachyderm" -> "kedro-org/kedro"
"pachyderm/pachyderm" -> "chrislusf/gleam" ["e"=1]
"shijianjian/EfficientNet-PyTorch-3D" -> "okankop/Efficient-3DCNNs" ["e"=1]
"shijianjian/EfficientNet-PyTorch-3D" -> "ZFTurbo/classification_models_3D"
"shijianjian/EfficientNet-PyTorch-3D" -> "ZFTurbo/efficientnet_3D"
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "SheffieldML/GPy"
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "gdroguski/GaussianProcesses"
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "helgeanl/GP-MPC" ["e"=1]
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "Ulti-Dreisteine/gaussian-process-regression"
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "Magica-Chen/gptp_multi_output"
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "jwangjie/gpytorch"
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "dfm/gp" ["e"=1]
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "Eric-Bradford/SDD-GP-MPC" ["e"=1]
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "cornellius-gp/gpytorch"
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "SheffieldML/PyDeepGP"
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "lucasrm25/Gaussian-Process-based-Model-Predictive-Control" ["e"=1]
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "thangbui/streaming_sparse_gp"
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "uzh-rpg/data_driven_mpc" ["e"=1]
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "EmuKit/emukit"
"jwangjie/Gaussian-Process-Regression-Tutorial" -> "jonfink/GP"
"malmgrek/gammy" -> "JohnGoertz/Gumbi"
"online-ml/awesome-online-machine-learning" -> "online-ml/deep-river"
"online-ml/awesome-online-machine-learning" -> "online-ml/beaver"
"online-ml/awesome-online-machine-learning" -> "online-ml/river"
"online-ml/awesome-online-machine-learning" -> "scikit-multiflow/scikit-multiflow"
"online-ml/awesome-online-machine-learning" -> "alipsgh/tornado"
"online-ml/awesome-online-machine-learning" -> "w4k2/stream-learn"
"online-ml/awesome-online-machine-learning" -> "Waikato/moa"
"online-ml/awesome-online-machine-learning" -> "online-ml/light-river"
"online-ml/awesome-online-machine-learning" -> "alison-carrera/onn" ["e"=1]
"online-ml/awesome-online-machine-learning" -> "chickenbestlover/Online-Recurrent-Extreme-Learning-Machine" ["e"=1]
"online-ml/awesome-online-machine-learning" -> "RaptorMai/online-continual-learning" ["e"=1]
"online-ml/awesome-online-machine-learning" -> "leferrad/pyoselm" ["e"=1]
"dovpanda-dev/dovpanda" -> "alegonz/baikal"
"dovpanda-dev/dovpanda" -> "JackMcKew/awesome-python-bytes" ["e"=1]
"dovpanda-dev/dovpanda" -> "idanmoradarthas/DataScienceUtils"
"cokelaer/fitter" -> "erdogant/distfit"
"erdogant/distfit" -> "cokelaer/fitter"
"erdogant/distfit" -> "erdogant/clusteval"
"erdogant/distfit" -> "predict-idlab/tsflex"
"tensorflow/runtime" -> "tensorflow/mlir-hlo" ["e"=1]
"tensorflow/runtime" -> "microsoft/nnfusion" ["e"=1]
"tensorflow/runtime" -> "tensorflow/mlir" ["e"=1]
"tensorflow/runtime" -> "alibaba/BladeDISC" ["e"=1]
"tensorflow/runtime" -> "iree-org/iree" ["e"=1]
"tensorflow/runtime" -> "onnx/onnx-mlir" ["e"=1]
"tensorflow/runtime" -> "llvm/torch-mlir" ["e"=1]
"tensorflow/runtime" -> "jiazhihao/TASO" ["e"=1]
"tensorflow/runtime" -> "tensorflow/io"
"tensorflow/runtime" -> "openxla/xprof"
"tensorflow/runtime" -> "tensorflow/custom-op"
"tensorflow/runtime" -> "NervanaSystems/ngraph" ["e"=1]
"tensorflow/runtime" -> "dmlc/dlpack" ["e"=1]
"tensorflow/runtime" -> "NVIDIA-Merlin/HugeCTR" ["e"=1]
"tensorflow/runtime" -> "pytorch/gloo" ["e"=1]
"uber-research/TuRBO" -> "facebookresearch/alebo"
"uber-research/TuRBO" -> "zi-w/Ensemble-Bayesian-Optimization"
"uber-research/TuRBO" -> "uber/bayesmark"
"uber-research/TuRBO" -> "facebookresearch/morbo" ["e"=1]
"uber-research/TuRBO" -> "facebookresearch/bo_pr"
"uber-research/TuRBO" -> "martinjankowiak/saasbo"
"uber-research/TuRBO" -> "dme65/pySOT"
"uber-research/TuRBO" -> "ziyuw/rembo"
"uber-research/TuRBO" -> "facebookresearch/LaMCTS" ["e"=1]
"uber-research/TuRBO" -> "daxiongshu/rapids-ai-BBO-2nd-place-solution"
"uber-research/TuRBO" -> "xingchenwan/Casmopolitan"
"uber-research/TuRBO" -> "wujian16/Cornell-MOE"
"uber-research/TuRBO" -> "aminnayebi/HesBO"
"uber-research/TuRBO" -> "secondmind-labs/trieste"
"uber-research/TuRBO" -> "jbr-ai-labs/bbo-challenge-jetbrains-research"
"interpretml/interpret-community" -> "interpretml/DiCE"
"interpretml/interpret-community" -> "interpretml/interpret-text"
"interpretml/interpret-community" -> "microsoft/responsible-ai-toolbox"
"interpretml/interpret-community" -> "fairlearn/fairlearn"
"interpretml/interpret-community" -> "interpretml/gam-changer"
"interpretml/interpret-community" -> "interpretml/interpret"
"interpretml/interpret-community" -> "Trusted-AI/AIX360"
"interpretml/interpret-community" -> "microsoft/solution-accelerator-many-models" ["e"=1]
"interpretml/interpret-community" -> "jphall663/interpretable_machine_learning_with_python"
"interpretml/interpret-community" -> "ModelOriented/DALEX"
"interpretml/interpret-community" -> "microsoft/ml-wrappers"
"interpretml/interpret-community" -> "pbiecek/xai_resources"
"interpretml/interpret-community" -> "Azure/azureml-previews" ["e"=1]
"interpretml/interpret-community" -> "csinva/imodels"
"interpretml/interpret-community" -> "linkedin/LiFT"
"INRIA/scikit-learn-mooc" -> "skrub-data/skrub"
"INRIA/scikit-learn-mooc" -> "justmarkham/scikit-learn-tips" ["e"=1]
"INRIA/scikit-learn-mooc" -> "probabl-ai/skore"
"INRIA/scikit-learn-mooc" -> "dair-ai/ML-Notebooks" ["e"=1]
"INRIA/scikit-learn-mooc" -> "GokuMohandas/mlops-course" ["e"=1]
"INRIA/scikit-learn-mooc" -> "koaning/scikit-lego"
"INRIA/scikit-learn-mooc" -> "feature-engine/feature_engine"
"INRIA/scikit-learn-mooc" -> "the-turing-way/the-turing-way" ["e"=1]
"INRIA/scikit-learn-mooc" -> "fairlearn/fairlearn"
"INRIA/scikit-learn-mooc" -> "nilearn/nilearn" ["e"=1]
"INRIA/scikit-learn-mooc" -> "sebp/scikit-survival"
"INRIA/scikit-learn-mooc" -> "probml/pyprobml" ["e"=1]
"INRIA/scikit-learn-mooc" -> "amueller/COMS4995-s20" ["e"=1]
"INRIA/scikit-learn-mooc" -> "koaning/human-learn"
"INRIA/scikit-learn-mooc" -> "glouppe/info8010-deep-learning" ["e"=1]
"zgana/fpp3-python-readalong" -> "Nixtla/fpp3-python"
"zgana/fpp3-python-readalong" -> "mscharth/forecasting"
"zgana/fpp3-python-readalong" -> "PacktPublishing/Modern-Time-Series-Forecasting-with-Python"
"zgana/fpp3-python-readalong" -> "ysraell/forecasting"
"zgana/fpp3-python-readalong" -> "Nixtla/hierarchicalforecast"
"zgana/fpp3-python-readalong" -> "Nixtla/mlforecast"
"zgana/fpp3-python-readalong" -> "Nixtla/statsforecast"
"zgana/fpp3-python-readalong" -> "valeman/Transformers_And_LLM_Are_What_You_Dont_Need" ["e"=1]
"zgana/fpp3-python-readalong" -> "joneswack/conformal-predictions-from-scratch" ["e"=1]
"sevamoo/SOMPY" -> "JustGlowing/minisom"
"sevamoo/SOMPY" -> "peterwittek/somoclu"
"sevamoo/SOMPY" -> "felixriese/susi"
"sevamoo/SOMPY" -> "fcomitani/simpsom"
"sevamoo/SOMPY" -> "itdxer/neupy"
"sevamoo/SOMPY" -> "ilarinieminen/SOM-Toolbox"
"sevamoo/SOMPY" -> "FlorentF9/SOMperf"
"sevamoo/SOMPY" -> "alexarnimueller/som"
"sevamoo/SOMPY" -> "lmjohns3/kohonen"
"sevamoo/SOMPY" -> "spiglerg/Kohonen_SOM_Tensorflow"
"sevamoo/SOMPY" -> "FlorentF9/DESOM"
"oreillymedia/t-SNE-tutorial" -> "cemoody/topicsne"
"oreillymedia/t-SNE-tutorial" -> "karpathy/tsnejs" ["e"=1]
"oreillymedia/t-SNE-tutorial" -> "DmitryUlyanov/Multicore-TSNE"
"oreillymedia/t-SNE-tutorial" -> "bioinf-jku/SNNs" ["e"=1]
"mxl1990/tsne-pytorch" -> "cemoody/topicsne"
"mxl1990/tsne-pytorch" -> "CannyLab/tsne-cuda"
"mxl1990/tsne-pytorch" -> "pavlin-policar/openTSNE"
"Xtra-Computing/thundersvm" -> "Xtra-Computing/thundergbm" ["e"=1]
"Xtra-Computing/thundersvm" -> "rapidsai/cuml"
"Xtra-Computing/thundersvm" -> "skorch-dev/skorch"
"Xtra-Computing/thundersvm" -> "scikit-optimize/scikit-optimize"
"Xtra-Computing/thundersvm" -> "src-d/kmcuda" ["e"=1]
"Xtra-Computing/thundersvm" -> "RJT1990/pyflux"
"Xtra-Computing/thundersvm" -> "microsoft/hummingbird"
"Xtra-Computing/thundersvm" -> "cjlin1/libsvm" ["e"=1]
"Xtra-Computing/thundersvm" -> "bioinf-jku/SNNs" ["e"=1]
"Xtra-Computing/thundersvm" -> "salesforce/pytorch-qrnn" ["e"=1]
"Xtra-Computing/thundersvm" -> "cjlin1/liblinear" ["e"=1]
"Xtra-Computing/thundersvm" -> "catboost/catboost"
"Xtra-Computing/thundersvm" -> "reiinakano/xcessiv"
"Xtra-Computing/thundersvm" -> "DmitryUlyanov/Multicore-TSNE"
"Xtra-Computing/thundersvm" -> "TeamHG-Memex/eli5"
"EthicalML/awesome-artificial-intelligence-regulation" -> "EthicalML/xai"
"EthicalML/awesome-artificial-intelligence-regulation" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"EthicalML/awesome-artificial-intelligence-regulation" -> "fairlearn/fairlearn"
"EthicalML/awesome-artificial-intelligence-regulation" -> "tensorflow/model-card-toolkit"
"EthicalML/awesome-artificial-intelligence-regulation" -> "visenger/awesome-mlops" ["e"=1]
"EthicalML/awesome-artificial-intelligence-regulation" -> "dssg/aequitas"
"EthicalML/awesome-artificial-intelligence-regulation" -> "SeldonIO/alibi"
"EthicalML/awesome-artificial-intelligence-regulation" -> "datarevenue-berlin/OpenMLOps"
"EthicalML/awesome-artificial-intelligence-regulation" -> "SE-ML/awesome-seml" ["e"=1]
"EthicalML/awesome-artificial-intelligence-regulation" -> "GoogleCloudPlatform/ml-design-patterns" ["e"=1]
"EthicalML/awesome-artificial-intelligence-regulation" -> "iterative/cml"
"EthicalML/awesome-artificial-intelligence-regulation" -> "zenml-io/zenml"
"EthicalML/awesome-artificial-intelligence-regulation" -> "ivan-bilan/The-NLP-Pandect" ["e"=1]
"EthicalML/awesome-artificial-intelligence-regulation" -> "eugeneyan/ml-design-docs"
"EthicalML/awesome-artificial-intelligence-regulation" -> "SeldonIO/seldon-core"
"microsoft/hummingbird" -> "facebookresearch/hiplot"
"microsoft/hummingbird" -> "vaexio/vaex"
"microsoft/hummingbird" -> "rapidsai/cuml"
"microsoft/hummingbird" -> "interpretml/interpret"
"microsoft/hummingbird" -> "skorch-dev/skorch"
"microsoft/hummingbird" -> "SeldonIO/alibi-detect"
"microsoft/hummingbird" -> "jmcarpenter2/swifter"
"microsoft/hummingbird" -> "SeldonIO/alibi"
"microsoft/hummingbird" -> "onelivesleft/PrettyErrors" ["e"=1]
"microsoft/hummingbird" -> "arogozhnikov/einops" ["e"=1]
"microsoft/hummingbird" -> "bentoml/BentoML"
"microsoft/hummingbird" -> "stanfordmlgroup/ngboost"
"microsoft/hummingbird" -> "pytorch/captum" ["e"=1]
"microsoft/hummingbird" -> "dreamquark-ai/tabnet" ["e"=1]
"microsoft/hummingbird" -> "linkedin/greykite"
"tensorflow/build" -> "openxla/xprof"
"Nixtla/tsfeatures" -> "Nixtla/hierarchicalforecast"
"Nixtla/tsfeatures" -> "Nixtla/mlforecast"
"Nixtla/tsfeatures" -> "DynamicsAndNeuralSystems/catch22" ["e"=1]
"Nixtla/tsfeatures" -> "predict-idlab/tsflex"
"Nixtla/tsfeatures" -> "DynamicsAndNeuralSystems/pycatch22" ["e"=1]
"Nixtla/tsfeatures" -> "fraunhoferportugal/tsfel" ["e"=1]
"Nixtla/tsfeatures" -> "cerlymarco/tspiral"
"Nixtla/tsfeatures" -> "StatMixedML/LightGBMLSS"
"Nixtla/tsfeatures" -> "Nixtla/datasetsforecast"
"Nixtla/tsfeatures" -> "Nixtla/statsforecast"
"Nixtla/tsfeatures" -> "functime-org/functime" ["e"=1]
"Nixtla/tsfeatures" -> "microprediction/timemachines"
"Nixtla/tsfeatures" -> "zillow/quantile-forest"
"Nixtla/tsfeatures" -> "StatMixedML/XGBoostLSS"
"Nixtla/tsfeatures" -> "winedarksea/AutoTS"
"Tim55667757/FuzzyClassificator" -> "devopshq/FuzzyClassificator"
"fabsig/GPBoost" -> "StatMixedML/XGBoostLSS"
"fabsig/GPBoost" -> "StatMixedML/LightGBMLSS"
"fabsig/GPBoost" -> "stanfordmlgroup/ngboost"
"fabsig/GPBoost" -> "CDonnerer/xgboost-distribution"
"fabsig/GPBoost" -> "scikit-learn-contrib/MAPIE"
"fabsig/GPBoost" -> "Ekeany/Boruta-Shap"
"fabsig/GPBoost" -> "fabsig/KTBoost"
"fabsig/GPBoost" -> "zillow/quantile-forest"
"fabsig/GPBoost" -> "AutoViML/featurewiz"
"fabsig/GPBoost" -> "pymc-labs/CausalPy" ["e"=1]
"fabsig/GPBoost" -> "cerlymarco/linear-tree"
"fabsig/GPBoost" -> "koaning/scikit-lego"
"fabsig/GPBoost" -> "dswah/pyGAM"
"fabsig/GPBoost" -> "StatMixedML/CatBoostLSS"
"fabsig/GPBoost" -> "manifoldai/merf"
"spindro/AP-GCN" -> "nicofirst1/ledypi"
"PacktPublishing/-Vue.js-3-By-Example" -> "PacktPublishing/Vue.js-3.0-Cookbook"
"oegedijk/explainerdashboard" -> "MAIF/shapash"
"oegedijk/explainerdashboard" -> "feature-engine/feature_engine"
"oegedijk/explainerdashboard" -> "deepchecks/deepchecks"
"oegedijk/explainerdashboard" -> "csinva/imodels"
"oegedijk/explainerdashboard" -> "interpretml/interpret"
"oegedijk/explainerdashboard" -> "ModelOriented/DALEX"
"oegedijk/explainerdashboard" -> "evidentlyai/evidently"
"oegedijk/explainerdashboard" -> "SeldonIO/alibi-detect"
"oegedijk/explainerdashboard" -> "SeldonIO/alibi"
"oegedijk/explainerdashboard" -> "mljar/mljar-supervised"
"oegedijk/explainerdashboard" -> "shankarpandala/lazypredict"
"oegedijk/explainerdashboard" -> "SelfExplainML/PiML-Toolbox" ["e"=1]
"oegedijk/explainerdashboard" -> "DistrictDataLabs/yellowbrick"
"oegedijk/explainerdashboard" -> "pycaret/pycaret"
"oegedijk/explainerdashboard" -> "online-ml/river"
"czifan/DeepSurv.pytorch" -> "jaredleekatzman/DeepSurv"
"czifan/DeepSurv.pytorch" -> "arturomoncadatorres/deepsurvk"
"czifan/DeepSurv.pytorch" -> "chl8856/DeepHit"
"czifan/DeepSurv.pytorch" -> "DataX-JieHao/Cox-PASNet"
"czifan/DeepSurv.pytorch" -> "tomcat123a/survival_loss_criteria"
"arturomoncadatorres/deepsurvk" -> "czifan/DeepSurv.pytorch"
"determined-ai/determined" -> "clearml/clearml"
"determined-ai/determined" -> "polyaxon/polyaxon"
"determined-ai/determined" -> "horovod/horovod"
"determined-ai/determined" -> "microsoft/pai"
"determined-ai/determined" -> "pachyderm/pachyderm"
"determined-ai/determined" -> "bentoml/BentoML"
"determined-ai/determined" -> "Netflix/metaflow"
"determined-ai/determined" -> "aimhubio/aim"
"determined-ai/determined" -> "zenml-io/zenml"
"determined-ai/determined" -> "feast-dev/feast"
"determined-ai/determined" -> "VertaAI/modeldb"
"determined-ai/determined" -> "SeldonIO/seldon-core"
"determined-ai/determined" -> "mosaicml/composer" ["e"=1]
"determined-ai/determined" -> "flyteorg/flyte"
"determined-ai/determined" -> "iterative/dvc"
"interpretml/interpret-text" -> "interpretml/interpret-community"
"interpretml/interpret-text" -> "ShilinHe/interpretableNLP"
"interpretml/interpret-text" -> "Eric-Wallace/interpretability-tutorial-emnlp2020" ["e"=1]
"interpretml/interpret-text" -> "interpretml/DiCE"
"Pushkar-v/Generating-Synthetic-Data-using-GANs" -> "Baukebrenninkmeijer/On-the-Generation-and-Evaluation-of-Synthetic-Tabular-Data-using-GANs"
"esafak/mca" -> "TomAugspurger/skmca"
"StatMixedML/LightGBMLSS" -> "StatMixedML/XGBoostLSS"
"StatMixedML/LightGBMLSS" -> "CDonnerer/xgboost-distribution"
"StatMixedML/LightGBMLSS" -> "zillow/quantile-forest"
"StatMixedML/LightGBMLSS" -> "fabsig/GPBoost"
"StatMixedML/LightGBMLSS" -> "elephaint/pgbm"
"StatMixedML/LightGBMLSS" -> "cerlymarco/linear-tree"
"StatMixedML/LightGBMLSS" -> "StatMixedML/CatBoostLSS"
"StatMixedML/LightGBMLSS" -> "stanfordmlgroup/ngboost"
"StatMixedML/LightGBMLSS" -> "Nixtla/tsfeatures"
"StatMixedML/LightGBMLSS" -> "henrikbostrom/crepes" ["e"=1]
"StatMixedML/LightGBMLSS" -> "sktime/skpro" ["e"=1]
"StatMixedML/LightGBMLSS" -> "carlomazzaferro/scikit-hts"
"StatMixedML/LightGBMLSS" -> "Ekeany/Boruta-Shap"
"StatMixedML/LightGBMLSS" -> "Nixtla/hierarchicalforecast"
"StatMixedML/LightGBMLSS" -> "scikit-learn-contrib/MAPIE"
"DanaJomar/PyALE" -> "blent-ai/ALEPython"
"BCG-X-Official/facet" -> "BCG-X-Official/sklearndf"
"BCG-X-Official/facet" -> "BCG-X-Official/pytools"
"BCG-X-Official/facet" -> "Ekeany/Boruta-Shap"
"BCG-X-Official/facet" -> "interpretml/gam-changer"
"BCG-X-Official/facet" -> "BCG-X-Official/agentkit" ["e"=1]
"BCG-X-Official/facet" -> "SelfExplainML/PiML-Toolbox" ["e"=1]
"BCG-X-Official/facet" -> "koaning/scikit-lego"
"BCG-X-Official/facet" -> "BCG-X-Official/artkit"
"BCG-X-Official/facet" -> "explainX/explainx"
"BCG-X-Official/facet" -> "StatMixedML/LightGBMLSS"
"wangyongjie-ntu/Awesome-explainable-AI" -> "jphall663/awesome-machine-learning-interpretability"
"wangyongjie-ntu/Awesome-explainable-AI" -> "pbiecek/xai_resources"
"wangyongjie-ntu/Awesome-explainable-AI" -> "Trusted-AI/AIX360"
"wangyongjie-ntu/Awesome-explainable-AI" -> "EthicalML/xai"
"wangyongjie-ntu/Awesome-explainable-AI" -> "SeldonIO/alibi"
"wangyongjie-ntu/Awesome-explainable-AI" -> "anguyen8/XAI-papers" ["e"=1]
"wangyongjie-ntu/Awesome-explainable-AI" -> "interpretml/DiCE"
"wangyongjie-ntu/Awesome-explainable-AI" -> "hbaniecki/adversarial-explainable-ai" ["e"=1]
"wangyongjie-ntu/Awesome-explainable-AI" -> "salesforce/OmniXAI"
"wangyongjie-ntu/Awesome-explainable-AI" -> "lopusz/awesome-interpretable-machine-learning"
"wangyongjie-ntu/Awesome-explainable-AI" -> "understandable-machine-intelligence-lab/Quantus" ["e"=1]
"wangyongjie-ntu/Awesome-explainable-AI" -> "interpretml/interpret"
"wangyongjie-ntu/Awesome-explainable-AI" -> "explainX/explainx"
"wangyongjie-ntu/Awesome-explainable-AI" -> "pytorch/captum" ["e"=1]
"wangyongjie-ntu/Awesome-explainable-AI" -> "altamiracorp/awesome-xai"
"YingfanWang/PaCMAP" -> "eamid/trimap"
"YingfanWang/PaCMAP" -> "cvxgrp/pymde"
"YingfanWang/PaCMAP" -> "lmcinnes/pynndescent"
"YingfanWang/PaCMAP" -> "wilsonjr/humap"
"YingfanWang/PaCMAP" -> "TutteInstitute/datamapplot" ["e"=1]
"YingfanWang/PaCMAP" -> "hyungkwonko/umato"
"YingfanWang/PaCMAP" -> "hyhuang00/ParamRepulsor"
"YingfanWang/PaCMAP" -> "beringresearch/ivis"
"YingfanWang/PaCMAP" -> "williamsyy/LocalMAP"
"YingfanWang/PaCMAP" -> "KrishnaswamyLab/PHATE" ["e"=1]
"YingfanWang/PaCMAP" -> "scikit-learn-contrib/hdbscan"
"YingfanWang/PaCMAP" -> "hhcho/densvis" ["e"=1]
"YingfanWang/PaCMAP" -> "interpretml/fastSparse"
"YingfanWang/PaCMAP" -> "lferry007/LargeVis"
"sdv-dev/CTGAN" -> "Diyago/Tabular-data-generation"
"sdv-dev/CTGAN" -> "sdv-dev/TGAN"
"sdv-dev/CTGAN" -> "sdv-dev/SDV"
"sdv-dev/CTGAN" -> "sdv-dev/SDGym"
"sdv-dev/CTGAN" -> "sdv-dev/SDMetrics"
"sdv-dev/CTGAN" -> "mahmoodm2/tableGAN"
"sdv-dev/CTGAN" -> "yandex-research/tab-ddpm"
"sdv-dev/CTGAN" -> "sdv-dev/Copulas"
"sdv-dev/CTGAN" -> "ydataai/ydata-synthetic" ["e"=1]
"sdv-dev/CTGAN" -> "Team-TUD/CTAB-GAN"
"sdv-dev/CTGAN" -> "Team-TUD/CTAB-GAN-Plus"
"sdv-dev/CTGAN" -> "gretelai/gretel-synthetics"
"sdv-dev/CTGAN" -> "sdv-dev/RDT"
"sdv-dev/CTGAN" -> "Baukebrenninkmeijer/table-evaluator"
"sdv-dev/CTGAN" -> "worldbank/REaLTabFormer"
"claesenm/optunity" -> "automl/HPOlib"
"claesenm/optunity" -> "HIPS/Spearmint"
"claesenm/optunity" -> "Yelp/MOE"
"claesenm/optunity" -> "rmcantin/bayesopt"
"claesenm/optunity" -> "automl/HpBandSter"
"claesenm/optunity" -> "scikit-optimize/scikit-optimize"
"claesenm/optunity" -> "rsteca/sklearn-deap"
"Ekeany/Boruta-Shap" -> "scikit-learn-contrib/boruta_py"
"Ekeany/Boruta-Shap" -> "cerlymarco/shap-hypetune"
"Ekeany/Boruta-Shap" -> "aerdem4/lofo-importance"
"Ekeany/Boruta-Shap" -> "AutoViML/featurewiz"
"Ekeany/Boruta-Shap" -> "cod3licious/autofeat"
"Ekeany/Boruta-Shap" -> "EpistasisLab/scikit-rebate"
"Ekeany/Boruta-Shap" -> "smazzanti/mrmr"
"Ekeany/Boruta-Shap" -> "predict-idlab/powershap"
"Ekeany/Boruta-Shap" -> "StatMixedML/LightGBMLSS"
"Ekeany/Boruta-Shap" -> "AutoViML/Auto_TS"
"Ekeany/Boruta-Shap" -> "ctlab/ITMO_FS"
"Ekeany/Boruta-Shap" -> "manuel-calzolari/sklearn-genetic"
"Ekeany/Boruta-Shap" -> "feature-engine/feature_engine"
"Ekeany/Boruta-Shap" -> "ThomasBury/arfs"
"Ekeany/Boruta-Shap" -> "scikit-learn-contrib/MAPIE"
"ZFTurbo/segmentation_models_3D" -> "ZFTurbo/classification_models_3D"
"ZFTurbo/segmentation_models_3D" -> "ZFTurbo/efficientnet_3D"
"ZFTurbo/segmentation_models_3D" -> "ZFTurbo/volumentations"
"replicate/keepsake" -> "iterative/cml"
"replicate/keepsake" -> "princeton-vl/DeepV2D" ["e"=1]
"replicate/keepsake" -> "Lightning-Universe/lightning-bolts" ["e"=1]
"replicate/keepsake" -> "karpathy/deep-vector-quantization" ["e"=1]
"replicate/keepsake" -> "Lightning-Universe/lightning-flash" ["e"=1]
"replicate/keepsake" -> "arogozhnikov/einops" ["e"=1]
"replicate/keepsake" -> "uber/manifold"
"replicate/keepsake" -> "microsoft/hummingbird"
"replicate/keepsake" -> "cortexlabs/cortex"
"replicate/keepsake" -> "JonasGeiping/cramming" ["e"=1]
"replicate/keepsake" -> "aimhubio/aim"
"replicate/keepsake" -> "patrick-kidger/torchtyping" ["e"=1]
"replicate/keepsake" -> "IDSIA/sacred"
"replicate/keepsake" -> "huggingface/knockknock" ["e"=1]
"replicate/keepsake" -> "facebookresearch/hydra" ["e"=1]
"marcopeix/time-series-analysis" -> "marcopeix/AppliedTimeSeriesForecastingInPython"
"marcopeix/time-series-analysis" -> "DAMO-DI-ML/NeurIPS2023-One-Fits-All" ["e"=1]
"marcopeix/time-series-analysis" -> "Nixtla/neuralforecast"
"marcopeix/time-series-analysis" -> "thuml/iTransformer" ["e"=1]
"marcopeix/time-series-analysis" -> "marcopeix/TimeSeriesForecastingInPython"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/validating-vue3-forms"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/build-gmail-clone-with-vue-3"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/Real-World_Vue-3"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/build-a-blog-with-nuxt-3-and-nuxt-content-v2"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/vue-3-typescript"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/Unit-Testing-Vue-3"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/real-world-nuxt"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/pwa-with-vue-3"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/beautify-with-vuetify"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/animating-vue"
"Code-Pop/Vue-3-Forms" -> "Code-Pop/authentication_course"
"openxla/xprof" -> "tensorflow/estimator"
"openxla/xprof" -> "tensorflow/runtime"
"openxla/xprof" -> "tensorflow/build"
"openxla/xprof" -> "tensorflow/io"
"openxla/xprof" -> "tensorflow/transform"
"openxla/xprof" -> "tensorflow/custom-op"
"openxla/xprof" -> "tensorflow/autograph"
"openxla/xprof" -> "tensorflow/text"
"openxla/xprof" -> "NVIDIA/framework-reproducibility"
"openxla/xprof" -> "tensorflow/metadata"
"SeldonIO/MLServer" -> "SeldonIO/tempo"
"SeldonIO/MLServer" -> "SeldonIO/seldon-core"
"SeldonIO/MLServer" -> "kserve/kserve"
"SeldonIO/MLServer" -> "kserve/modelmesh-serving"
"SeldonIO/MLServer" -> "SeldonIO/alibi"
"SeldonIO/MLServer" -> "SeldonIO/alibi-detect"
"SeldonIO/MLServer" -> "bentoml/BentoML"
"SeldonIO/MLServer" -> "adriangonz/mlflow-talk"
"SeldonIO/MLServer" -> "kubeflow/katib"
"SeldonIO/MLServer" -> "jeremyjordan/ml-monitoring"
"SeldonIO/MLServer" -> "mlrun/mlrun"
"SeldonIO/MLServer" -> "zenml-io/mlstacks"
"SeldonIO/MLServer" -> "kubeflow-kale/kale"
"SeldonIO/MLServer" -> "triton-inference-server/pytriton" ["e"=1]
"SeldonIO/MLServer" -> "datarevenue-berlin/OpenMLOps"
"AbdullahO/tspdb" -> "AbdullahO/mSSA"
"tensorflow/similarity" -> "keras-team/keras-cv"
"tensorflow/similarity" -> "tensorflow/decision-forests"
"tensorflow/similarity" -> "NVIDIA-Merlin/NVTabular" ["e"=1]
"tensorflow/similarity" -> "keras-team/keras-hub"
"tensorflow/similarity" -> "keras-team/keras-core" ["e"=1]
"tensorflow/similarity" -> "NVIDIA-Merlin/Merlin" ["e"=1]
"tensorflow/similarity" -> "tensorflow/neural-structured-learning" ["e"=1]
"tensorflow/similarity" -> "tensorflow/gnn" ["e"=1]
"tensorflow/similarity" -> "tensorflow/tfx"
"tensorflow/similarity" -> "linkedin/FastTreeSHAP"
"tensorflow/similarity" -> "linkedin/greykite"
"tensorflow/similarity" -> "tensorflow/text"
"tensorflow/similarity" -> "fchollet/stable-diffusion-tensorflow"
"tensorflow/similarity" -> "linkedin/detext" ["e"=1]
"tensorflow/similarity" -> "leondgarse/keras_cv_attention_models"
"koaning/skedulord" -> "ljvmiranda921/vs-split"
"rdturnermtl/bbo_challenge_starter_kit" -> "uber/bayesmark"
"flyteorg/flytekit-java" -> "flyteorg/flyteplugins"
"flyteorg/flytekit-java" -> "flyteorg/flyteadmin"
"flyteorg/flytekit-java" -> "flyteorg/flyteidl"
"tensorflow/tflite-support" -> "tensorflow/runtime"
"tensorflow/tflite-support" -> "google-ai-edge/LiteRT"
"tensorflow/tflite-support" -> "margaretmz/awesome-tensorflow-lite" ["e"=1]
"tensorflow/tflite-support" -> "google-ai-edge/litert-samples"
"tensorflow/tflite-support" -> "openxla/xprof"
"tensorflow/tflite-support" -> "tensorflow/model-optimization"
"alvaromc317/asgl" -> "yaglm/yaglm"
"flyteorg/flyteconsole" -> "flyteorg/flyteidl"
"flyteorg/flyteconsole" -> "flyteorg/flyteplugins"
"flyteorg/flyteconsole" -> "flyteorg/flytecopilot"
"automl/HPOBench" -> "slds-lmu/yahpo_gym"
"automl/HPOBench" -> "automl/LCBench"
"keras-team/keras-cv" -> "keras-team/keras-hub"
"keras-team/keras-cv" -> "keras-team/keras-core" ["e"=1]
"keras-team/keras-cv" -> "leondgarse/keras_cv_attention_models"
"keras-team/keras-cv" -> "keras-team/keras-io"
"keras-team/keras-cv" -> "martinsbruveris/tensorflow-image-models"
"keras-team/keras-cv" -> "keras-team/keras-tuner"
"keras-team/keras-cv" -> "divamgupta/stable-diffusion-tensorflow" ["e"=1]
"keras-team/keras-cv" -> "tensorflow/similarity"
"keras-team/keras-cv" -> "fchollet/stable-diffusion-tensorflow"
"keras-team/keras-cv" -> "google/ml_collections" ["e"=1]
"keras-team/keras-cv" -> "rishigami/Swin-Transformer-TF"
"keras-team/keras-cv" -> "sayakpaul/dreambooth-keras"
"keras-team/keras-cv" -> "tensorflow/decision-forests"
"keras-team/keras-cv" -> "faustomorales/vit-keras"
"keras-team/keras-cv" -> "DavidLandup0/deepvision"
"caojiguo/FDAcourse2019" -> "caojiguo/FDAworkshop"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/animating-vue"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/real-world-nuxt"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/Unit-Testing-Vue2"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/beautify-with-vuetify"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/watch-us-build-trello"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/authentication_course"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/build-gmail-clone-with-vue-3"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/Unit-Testing-Vue-3"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/build-a-blog-with-nuxt-3-and-nuxt-content-v2"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/validating-vue3-forms"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/vue-mastery"
"Code-Pop/vue-3-reactivity" -> "Code-Pop/pwa-with-vue-3"
"akanz1/klib" -> "data-describe/data-describe"
"akanz1/klib" -> "cod3licious/autofeat"
"akanz1/klib" -> "feature-engine/feature_engine"
"akanz1/klib" -> "Ekeany/Boruta-Shap"
"akanz1/klib" -> "shakedzy/dython"
"akanz1/klib" -> "koaning/scikit-lego"
"akanz1/klib" -> "AutoViML/AutoViz"
"akanz1/klib" -> "sfu-db/dataprep"
"akanz1/klib" -> "fbdesignpro/sweetviz"
"akanz1/klib" -> "dabl/dabl"
"logicalclocks/feature-store-api" -> "logicalclocks/hops-examples"
"logicalclocks/feature-store-api" -> "logicalclocks/hops-util-py"
"logicalclocks/feature-store-api" -> "featurestoreorg/featurestore-benchmarks"
"logicalclocks/feature-store-api" -> "logicalclocks/hopsworks-api"
"logicalclocks/feature-store-api" -> "logicalclocks/hops-docs"
"CyberAgentAILab/cmaes" -> "CMA-ES/pycma"
"CyberAgentAILab/cmaes" -> "srom/cma-es"
"CyberAgentAILab/cmaes" -> "dietmarwo/fast-cma-es"
"CyberAgentAILab/cmaes" -> "optuna/kurobako"
"CyberAgentAILab/cmaes" -> "numbbo/coco"
"CyberAgentAILab/cmaes" -> "Evolutionary-Intelligence/pypop"
"CyberAgentAILab/cmaes" -> "CMA-ES/libcmaes"
"CyberAgentAILab/cmaes" -> "RobertTLange/evosax" ["e"=1]
"CyberAgentAILab/cmaes" -> "EvoConJP/CMA-ES_with_Margin"
"CyberAgentAILab/cmaes" -> "optuna/optuna-dashboard"
"CyberAgentAILab/cmaes" -> "optuna/optunahub-registry"
"CyberAgentAILab/cmaes" -> "optuna/optunahub"
"CyberAgentAILab/cmaes" -> "Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP"
"eugeneyan/papermill-mlflow" -> "eugeneyan/python-collab-template"
"gpstuff-dev/gpstuff" -> "Magica-Chen/gptp_multi_output"
"gpstuff-dev/gpstuff" -> "SheffieldML/multigp"
"gpstuff-dev/gpstuff" -> "SheffieldML/deepGP"
"gpstuff-dev/gpstuff" -> "SheffieldML/GPmat"
"gpstuff-dev/gpstuff" -> "alshedivat/gpml"
"iterative/terraform-provider-iterative" -> "iterative/mlem"
"iterative/terraform-provider-iterative" -> "iterative/gto"
"iterative/terraform-provider-iterative" -> "kunzite-app/008"
"iterative/terraform-provider-iterative" -> "iterative/dvclive"
"iterative/terraform-provider-iterative" -> "iterative/mlem.ai"
"iterative/terraform-provider-iterative" -> "iterative/awesome-iterative-projects"
"iterative/terraform-provider-iterative" -> "iterative/vscode-dvc"
"iterative/terraform-provider-iterative" -> "zincware/ZnTrack"
"iterative/terraform-provider-iterative" -> "dacbd/create-issue-action"
"iterative/terraform-provider-iterative" -> "gennaro-tedesco/nvim-dvc"
"iterative/terraform-provider-iterative" -> "mlrepa/mlrepa-library"
"iterative/terraform-provider-iterative" -> "iterative/dvc.org"
"google/ml-fairness-gym" -> "tensorflow/fairness-indicators"
"google/ml-fairness-gym" -> "algofairness/fairness-comparison"
"google/ml-fairness-gym" -> "mbilalzafar/fair-classification"
"google/ml-fairness-gym" -> "equialgo/fairness-in-ml"
"google/ml-fairness-gym" -> "socialfoundations/folktables"
"google/ml-fairness-gym" -> "socialfoundations/whynot"
"google/ml-fairness-gym" -> "dssg/aequitas"
"google/ml-fairness-gym" -> "yongkaiwu/FairAI"
"autonlab/auton-survival" -> "MI2DataLab/survshap"
"autonlab/auton-survival" -> "havakv/pycox"
"autonlab/auton-survival" -> "chl8856/DeepHit"
"autonlab/auton-survival" -> "sebp/scikit-survival"
"autonlab/auton-survival" -> "square/pysurvival"
"autonlab/auton-survival" -> "autonlab/DeepSurvivalMachines"
"autonlab/auton-survival" -> "rk2900/DRSA"
"autonlab/auton-survival" -> "loft-br/xgboost-survival-embeddings"
"autonlab/auton-survival" -> "jaredleekatzman/DeepSurv"
"autonlab/auton-survival" -> "chl8856/Dynamic-DeepHit"
"autonlab/auton-survival" -> "RyanWangZf/SurvTRACE"
"autonlab/auton-survival" -> "robi56/Survival-Analysis-using-Deep-Learning"
"autonlab/auton-survival" -> "chiragnagpal/deep_cox_mixtures"
"autonlab/auton-survival" -> "Novartis/torchsurv"
"autonlab/auton-survival" -> "shi-ang/SurvivalEVAL"
"tensorflow/model-card-toolkit" -> "ivylee/model-cards-and-datasheets"
"tensorflow/model-card-toolkit" -> "tensorflow/fairness-indicators"
"tensorflow/model-card-toolkit" -> "google/ml-metadata"
"mblum/libgp" -> "jonfink/GP"
"mblum/libgp" -> "resibots/limbo"
"mblum/libgp" -> "SheffieldML/GPc"
"iterative/vscode-dvc" -> "iterative/gto"
"iterative/vscode-dvc" -> "dacbd/create-issue-action"
"resibots/limbo" -> "mblum/libgp"
"resibots/limbo" -> "jonfink/GP"
"resibots/limbo" -> "rmcantin/bayesopt"
"resibots/limbo" -> "sferes2/sferes2" ["e"=1]
"resibots/limbo" -> "resibots/blackdrops"
"tensorflow/fairness-indicators" -> "google/ml-fairness-gym"
"tensorflow/fairness-indicators" -> "algofairness/fairness-comparison"
"tensorflow/fairness-indicators" -> "linkedin/LiFT"
"tensorflow/fairness-indicators" -> "tensorflow/data-validation"
"tensorflow/fairness-indicators" -> "tensorflow/model-remediation"
"tensorflow/fairness-indicators" -> "tensorflow/tfx-bsl"
"tensorflow/fairness-indicators" -> "tensorflow/model-card-toolkit"
"datamllab/awesome-fairness-in-ai" -> "brandeis-machine-learning/awesome-ml-fairness"
"datamllab/awesome-fairness-in-ai" -> "uclanlp/awesome-fairness-papers" ["e"=1]
"datamllab/awesome-fairness-in-ai" -> "yongkaiwu/FairAI"
"datamllab/awesome-fairness-in-ai" -> "princetonvisualai/DomainBiasMitigation" ["e"=1]
"datamllab/awesome-fairness-in-ai" -> "mbilalzafar/fair-classification"
"datamllab/awesome-fairness-in-ai" -> "algofairness/fairness-comparison"
"datamllab/awesome-fairness-in-ai" -> "datamllab/xdeep" ["e"=1]
"datamllab/awesome-fairness-in-ai" -> "datamllab/AutoRec" ["e"=1]
"datamllab/awesome-fairness-in-ai" -> "wbawakate/fairtorch"
"datamllab/awesome-fairness-in-ai" -> "equialgo/fairness-in-ml"
"datamllab/awesome-fairness-in-ai" -> "datamllab/pyodds" ["e"=1]
"datamllab/awesome-fairness-in-ai" -> "google/ml-fairness-gym"
"flyteorg/flytekit" -> "flyteorg/flytesnacks"
"flyteorg/flytekit" -> "flyteorg/flyteadmin"
"flyteorg/flytekit" -> "davidmirror-ops/flyte-the-hard-way"
"flyteorg/flytekit" -> "flyteorg/flytepropeller"
"flyteorg/flytekit" -> "flyteorg/flytectl"
"flyteorg/flytekit" -> "flyteorg/flyteconsole"
"flyteorg/flytekit" -> "flyteorg/flyteplugins"
"flyteorg/flytekit" -> "flyteorg/flytestdlib"
"flyteorg/flytekit" -> "unionai-oss/deploy-flyte"
"flyteorg/flytekit" -> "flyteorg/flyteidl"
"flyteorg/flytekit" -> "flyteorg/flytekit-java"
"flyteorg/flytekit" -> "flyteorg/datacatalog"
"flyteorg/flytekit" -> "unionai-oss/unionml"
"flyteorg/flytekit" -> "flyteorg/flytelab"
"guillermo-navas-palencia/optbinning" -> "amphibian-dev/toad"
"guillermo-navas-palencia/optbinning" -> "ShichenXie/scorecardpy"
"guillermo-navas-palencia/optbinning" -> "jstephenj14/Monotonic-WOE-Binning-Algorithm"
"guillermo-navas-palencia/optbinning" -> "ing-bank/skorecard"
"guillermo-navas-palencia/optbinning" -> "Lantianzz/Scorecard-Bundle"
"guillermo-navas-palencia/optbinning" -> "csinva/imodels"
"guillermo-navas-palencia/optbinning" -> "StatMixedML/LightGBMLSS"
"guillermo-navas-palencia/optbinning" -> "feature-engine/feature_engine"
"guillermo-navas-palencia/optbinning" -> "ShichenXie/scorecard"
"guillermo-navas-palencia/optbinning" -> "ing-bank/probatus"
"guillermo-navas-palencia/optbinning" -> "finafily526/A_Model_of_Risk_Control"
"guillermo-navas-palencia/optbinning" -> "scikit-learn-contrib/skope-rules"
"guillermo-navas-palencia/optbinning" -> "Sundar0989/XuniVerse"
"guillermo-navas-palencia/optbinning" -> "taenggu0309/Scorecard--Function"
"guillermo-navas-palencia/optbinning" -> "scikit-learn-contrib/MAPIE"
"ZFTurbo/volumentations" -> "ZFTurbo/classification_models_3D"
"ZFTurbo/volumentations" -> "ZFTurbo/segmentation_models_3D"
"ZFTurbo/volumentations" -> "ZFTurbo/efficientnet_3D"
"ZFTurbo/volumentations" -> "arthur801031/3d-multi-resolution-rcnn"
"ZFTurbo/volumentations" -> "ashawkey/volumentations"
"koaning/human-learn" -> "koaning/scikit-lego"
"koaning/human-learn" -> "koaning/embetter"
"koaning/human-learn" -> "koaning/doubtlab"
"koaning/human-learn" -> "koaning/bulk"
"koaning/human-learn" -> "koaning/whatlies"
"koaning/human-learn" -> "TutteInstitute/thisnotthat"
"koaning/human-learn" -> "koaning/simsity" ["e"=1]
"koaning/human-learn" -> "skops-dev/skops"
"koaning/human-learn" -> "koaning/clumper"
"koaning/human-learn" -> "csinva/imodels"
"koaning/human-learn" -> "koaning/memo"
"koaning/human-learn" -> "skrub-data/skrub"
"koaning/human-learn" -> "koaning/drawdata"
"koaning/human-learn" -> "RasaHQ/rasalit" ["e"=1]
"koaning/human-learn" -> "NorskRegnesentral/skweak" ["e"=1]
"SheffieldML/GPyOpt" -> "SheffieldML/GPy"
"SheffieldML/GPyOpt" -> "HIPS/Spearmint"
"SheffieldML/GPyOpt" -> "GPflow/GPflowOpt"
"SheffieldML/GPyOpt" -> "GPflow/GPflow"
"SheffieldML/GPyOpt" -> "scikit-optimize/scikit-optimize"
"SheffieldML/GPyOpt" -> "EmuKit/emukit"
"SheffieldML/GPyOpt" -> "pytorch/botorch"
"SheffieldML/GPyOpt" -> "automl/RoBO"
"SheffieldML/GPyOpt" -> "JasperSnoek/spearmint"
"SheffieldML/GPyOpt" -> "bayesian-optimization/BayesianOptimization"
"SheffieldML/GPyOpt" -> "Yelp/MOE"
"SheffieldML/GPyOpt" -> "dragonfly/dragonfly"
"SheffieldML/GPyOpt" -> "rmcantin/bayesopt"
"SheffieldML/GPyOpt" -> "cornellius-gp/gpytorch"
"SheffieldML/GPyOpt" -> "automl/SMAC3"
"operatorai/modelstore" -> "bodywork-ml/bodywork-core"
"operatorai/modelstore" -> "fuzzylabs/awesome-open-mlops"
"MIDASverse/MIDASpy" -> "MIDASverse/rMIDAS"
"MIDASverse/MIDASpy" -> "Yoseph-Zuskin/midaspy"
"firmai/atspy" -> "winedarksea/AutoTS"
"firmai/atspy" -> "AutoViML/Auto_TS"
"firmai/atspy" -> "firmai/deltapy"
"firmai/atspy" -> "firmai/pandasvault" ["e"=1]
"firmai/atspy" -> "antoinecarme/pyaf"
"firmai/atspy" -> "firmai/pandapy" ["e"=1]
"firmai/atspy" -> "alkaline-ml/pmdarima"
"firmai/atspy" -> "firmai/datagene"
"firmai/atspy" -> "sktime/sktime-dl" ["e"=1]
"firmai/atspy" -> "wwrechard/pydlm"
"firmai/atspy" -> "firmai/interactive-corporate-report" ["e"=1]
"firmai/atspy" -> "intive-DataScience/tbats" ["e"=1]
"firmai/atspy" -> "firmai/machine-learning-asset-management" ["e"=1]
"firmai/atspy" -> "heidelbergcement/hcrystalball"
"firmai/atspy" -> "Nixtla/tsfeatures"
"eugeneyan/python-collab-template" -> "eugeneyan/poc-docker-template"
"eugeneyan/python-collab-template" -> "eugeneyan/papermill-mlflow"
"eugeneyan/python-collab-template" -> "eugeneyan/testing-ml"
"prolearner/hypertorch" -> "prolearner/hyper-representation"
"prolearner/hypertorch" -> "JunjieYang97/stocBiO"
"YC-Coder-Chen/feature-engineering-handbook" -> "YC-Coder-Chen/Tree-Math"
"YC-Coder-Chen/feature-engineering-handbook" -> "Pysamlam/Tips-of-Feature-engineering" ["e"=1]
"YC-Coder-Chen/feature-engineering-handbook" -> "weepon/feature_selection"
"YC-Coder-Chen/feature-engineering-handbook" -> "WillKoehrsen/automated-feature-engineering"
"YC-Coder-Chen/feature-engineering-handbook" -> "danielhomola/mifs"
"YC-Coder-Chen/feature-engineering-handbook" -> "ctlab/ITMO_FS"
"solegalli/feature-selection-for-machine-learning" -> "solegalli/machine-learning-imbalanced-data"
"solegalli/feature-selection-for-machine-learning" -> "solegalli/feature-engineering-for-machine-learning"
"solegalli/feature-selection-for-machine-learning" -> "solegalli/hyperparameter-optimization"
"solegalli/feature-selection-for-machine-learning" -> "kaushalshetty/FeatureSelectionGA"
"solegalli/feature-selection-for-machine-learning" -> "anujdutt9/Feature-Selection-for-Machine-Learning"
"solegalli/feature-selection-for-machine-learning" -> "trainindata/feature-engineering-for-time-series-forecasting"
"solegalli/feature-selection-for-machine-learning" -> "trainindata/testing-and-monitoring-ml-deployments"
"solegalli/feature-selection-for-machine-learning" -> "ashishpatel26/Amazing-Feature-Engineering" ["e"=1]
"solegalli/feature-selection-for-machine-learning" -> "feature-engine/feature_engine"
"solegalli/feature-selection-for-machine-learning" -> "solegalli/deploying-machine-learning-models"
"solegalli/feature-selection-for-machine-learning" -> "trainindata/deploying-machine-learning-models"
"https-deeplearning-ai/GANs-Public" -> "https-deeplearning-ai/tensorflow-3-public"
"https-deeplearning-ai/GANs-Public" -> "https-deeplearning-ai/tensorflow-3"
"sdv-dev/SDMetrics" -> "sdv-dev/RDT"
"sdv-dev/SDMetrics" -> "sdv-dev/SDGym"
"sdv-dev/SDMetrics" -> "sdv-dev/CTGAN"
"sdv-dev/SDMetrics" -> "sdv-dev/Copulas"
"sdv-dev/SDMetrics" -> "Team-TUD/CTAB-GAN-Plus"
"sdv-dev/SDMetrics" -> "sdv-dev/SDV"
"sdv-dev/SDMetrics" -> "worldbank/REaLTabFormer"
"gretelai/gretel-python-client" -> "gretelai/gretel-blueprints"
"gretelai/gretel-python-client" -> "gretelai/gdpr-helpers"
"gretelai/gretel-python-client" -> "gretelai/trainer"
"gretelai/gretel-python-client" -> "gretelai/public_research"
"maxiaoba/GRAPE" -> "G-AILab/IGRM"
"maxiaoba/GRAPE" -> "spindro/GINN"
"maxiaoba/GRAPE" -> "twitter-research/feature-propagation"
"ratschlab/GP-VAE" -> "caow13/BRITS"
"ratschlab/GP-VAE" -> "NIPS-BRITS/BRITS"
"ratschlab/GP-VAE" -> "Luoyonghong/E2EGAN"
"IvanBongiorni/GAN-RNN_Timeseries-imputation" -> "Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks"
"IvanBongiorni/GAN-RNN_Timeseries-imputation" -> "Luoyonghong/E2EGAN"
"IvanBongiorni/GAN-RNN_Timeseries-imputation" -> "rcamino/imputation-dgm"
"IvanBongiorni/GAN-RNN_Timeseries-imputation" -> "felixykliu/NAOMI"
"IvanBongiorni/GAN-RNN_Timeseries-imputation" -> "jsyoon0823/GAIN"
"xLaszlo/datascience-fails" -> "mrdbourke/cs329s-ml-deployment-tutorial" ["e"=1]
"xLaszlo/datascience-fails" -> "hypergol/hypergol"
"xLaszlo/datascience-fails" -> "eugeneyan/ml-design-docs"
"xdfeng7370/Multi-fidelity-neural-network-" -> "Zhen-Ni/MFNN"
"xdfeng7370/Multi-fidelity-neural-network-" -> "XuhuiM/Multi-Fidelity-DNNs-PINNs"
"automl/fanova" -> "automl/CAVE"
"automl/fanova" -> "automl/BOAH"
"automl/fanova" -> "automl/ParameterImportance"
"automl/fanova" -> "frank-hutter/fanova"
"automl/fanova" -> "automl/HPOlib1.5"
"BayesWatch/deep-kernel-transfer" -> "maka89/Deep-Kernel-GP"
"BayesWatch/deep-kernel-transfer" -> "cnguyen10/few_shot_meta_learning" ["e"=1]
"trainindata/testing-and-monitoring-ml-deployments" -> "trainindata/deploying-machine-learning-models"
"trainindata/testing-and-monitoring-ml-deployments" -> "trainindata/feature-engineering-for-machine-learning"
"trainindata/testing-and-monitoring-ml-deployments" -> "trainindata/dmlm-research-and-production"
"AbdullahO/mSSA" -> "kieferk/pymssa"
"AbdullahO/mSSA" -> "AbdullahO/tspdb"
"fuzzylite/fuzzylite" -> "alvesoaj/eFLL"
"fuzzylite/fuzzylite" -> "fuzzylite/pyfuzzylite"
"fuzzylite/fuzzylite" -> "shuoyueqishi/fuzzy-PID-controller" ["e"=1]
"fuzzylite/fuzzylite" -> "pcingola/jFuzzyLogic"
"iterative/dvc-bench" -> "iterative/scmrepo"
"iterative/dvc-bench" -> "karajan1001/aiooss2"
"koaning/whatlies" -> "koaning/human-learn"
"koaning/whatlies" -> "koaning/doubtlab"
"koaning/whatlies" -> "koaning/embetter"
"koaning/whatlies" -> "RasaHQ/rasalit" ["e"=1]
"koaning/whatlies" -> "uber-research/parallax"
"koaning/whatlies" -> "koaning/cluestar"
"koaning/whatlies" -> "koaning/tokenwiser"
"koaning/whatlies" -> "NorskRegnesentral/skweak" ["e"=1]
"koaning/whatlies" -> "koaning/clumper"
"koaning/whatlies" -> "RasaHQ/rasa-nlu-examples" ["e"=1]
"koaning/whatlies" -> "explosion/floret" ["e"=1]
"koaning/whatlies" -> "kevinlu1248/pyate" ["e"=1]
"koaning/whatlies" -> "davidberenstein1957/concise-concepts" ["e"=1]
"koaning/whatlies" -> "RasaHQ/NLU-training-data" ["e"=1]
"koaning/clumper" -> "koaning/skedulord"
"balajiln/mondrianforest" -> "amirsaffari/online-random-forests"
"balajiln/mondrianforest" -> "nel215/mondrianforest"
"balajiln/mondrianforest" -> "amirsaffari/online-multiclass-lpboost"
"balajiln/mondrianforest" -> "scikit-garden/scikit-garden"
"balajiln/mondrianforest" -> "doubleplusplus/incremental_decision_tree-CART-Random_Forest"
"BCG-X-Official/sklearndf" -> "BCG-X-Official/pytools"
"BCG-X-Official/pytools" -> "BCG-X-Official/sklearndf"
"scikit-image/skimage-tutorials" -> "jorisvandenbossche/geopandas-tutorial" ["e"=1]
"scikit-image/skimage-tutorials" -> "sarasafavi/remote-sensing-with-python" ["e"=1]
"scikit-image/skimage-tutorials" -> "pytroll/tutorial-satpy-half-day"
"scikit-image/skimage-tutorials" -> "ericmjl/dl-workshop"
"rtosholdings/riptable" -> "data-describe/data-describe"
"gditzler/ConceptDriftResources" -> "gditzler/ConceptDriftData"
"gditzler/ConceptDriftResources" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"gditzler/ConceptDriftResources" -> "tegjyotsingh/ConceptDriftInduction"
"gditzler/ConceptDriftResources" -> "blablahaha/concept-drift"
"Lantianzz/Scorecard-Bundle" -> "taenggu0309/Scorecard--Function"
"Lantianzz/Scorecard-Bundle" -> "taenggu0309/Scorecard--Assessment"
"Lantianzz/Scorecard-Bundle" -> "SailingHe/Automatic-scorecard-model"
"Lantianzz/Scorecard-Bundle" -> "Labryant/ScoreCard"
"Lantianzz/Scorecard-Bundle" -> "finafily526/A_Model_of_Risk_Control"
"Code-Pop/animating-vue" -> "Code-Pop/authentication_course"
"Code-Pop/animating-vue" -> "Code-Pop/beautify-with-vuetify"
"Code-Pop/animating-vue" -> "Code-Pop/Unit-Testing-Vue2"
"Code-Pop/animating-vue" -> "Code-Pop/real-world-nuxt"
"Code-Pop/animating-vue" -> "Code-Pop/pwa-with-vue-3"
"Code-Pop/animating-vue" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/animating-vue" -> "Code-Pop/vue-3-reactivity"
"Code-Pop/animating-vue" -> "Code-Pop/watch-us-build-trello"
"Code-Pop/animating-vue" -> "Code-Pop/graphql-client"
"aipredict/ai-deployment" -> "autodeployai/ai-serving"
"aipredict/ai-deployment" -> "MachineLP/QDServing"
"FlorentF9/SOMperf" -> "FlorentF9/skstab"
"julianspaeth/random-survival-forest" -> "Wrymm/Random-Survival-Forests"
"alan-turing-institute/TCPD" -> "alan-turing-institute/TCPDBench"
"alan-turing-institute/TCPDBench" -> "alan-turing-institute/TCPD"
"alan-turing-institute/TCPDBench" -> "zahraatashgahi/ALACPD"
"alan-turing-institute/TCPDBench" -> "deryckt/TIRE"
"CODAIT/max-central-repo" -> "IBM/MAX-Framework"
"CODAIT/max-central-repo" -> "IBM/MAX-Question-Answering"
"tiagobotari/melime" -> "victorhb/ImbCoL"
"tiagobotari/melime" -> "rivolli/mfe"
"tiagobotari/melime" -> "lpfgarcia/ECoL"
"tiagobotari/melime" -> "gabrieljaguiar/nemenyi"
"mlrun/demos" -> "mlrun/functions"
"mlrun/demos" -> "mlrun/demo-github-actions"
"carlomazzaferro/scikit-hts" -> "carlomazzaferro/scikit-hts-examples"
"carlomazzaferro/scikit-hts" -> "CollinRooney12/htsprophet"
"carlomazzaferro/scikit-hts" -> "tblume1992/ThymeBoost"
"carlomazzaferro/scikit-hts" -> "microprediction/timemachines"
"carlomazzaferro/scikit-hts" -> "MBrouns/timeseers" ["e"=1]
"carlomazzaferro/scikit-hts" -> "StatMixedML/LightGBMLSS"
"AutoViML/Auto_TS" -> "winedarksea/AutoTS"
"AutoViML/Auto_TS" -> "AutoViML/Auto_ViML"
"AutoViML/Auto_TS" -> "firmai/atspy"
"AutoViML/Auto_TS" -> "fraunhoferportugal/tsfel" ["e"=1]
"AutoViML/Auto_TS" -> "zillow/luminaire" ["e"=1]
"AutoViML/Auto_TS" -> "alkaline-ml/pmdarima"
"AutoViML/Auto_TS" -> "Ekeany/Boruta-Shap"
"AutoViML/Auto_TS" -> "AutoViML/featurewiz"
"AutoViML/Auto_TS" -> "microprediction/timemachines"
"AutoViML/Auto_TS" -> "antoinecarme/pyaf"
"AutoViML/Auto_TS" -> "feature-engine/feature_engine"
"AutoViML/Auto_TS" -> "AutoViML/AutoViz"
"AutoViML/Auto_TS" -> "skforecast/skforecast"
"AutoViML/Auto_TS" -> "cod3licious/autofeat"
"AutoViML/Auto_TS" -> "MBrouns/timeseers" ["e"=1]
"iterative/awesome-iterative-projects" -> "iterative/demo-bank-customer-churn"
"AnotherSamWilson/miceforest" -> "FarrellDay/miceRanger"
"AnotherSamWilson/miceforest" -> "kearnz/autoimpute"
"AnotherSamWilson/miceforest" -> "Ekeany/Boruta-Shap"
"AnotherSamWilson/miceforest" -> "amices/mice" ["e"=1]
"AnotherSamWilson/miceforest" -> "iskandr/fancyimpute"
"AnotherSamWilson/miceforest" -> "feature-engine/feature_engine"
"AnotherSamWilson/miceforest" -> "koaning/scikit-lego"
"AnotherSamWilson/miceforest" -> "scikit-learn-contrib/MAPIE"
"AnotherSamWilson/miceforest" -> "eltonlaw/impyute"
"AnotherSamWilson/miceforest" -> "vanderschaarlab/hyperimpute"
"AnotherSamWilson/miceforest" -> "epsilon-machine/missingpy"
"AnotherSamWilson/miceforest" -> "cod3licious/autofeat"
"AnotherSamWilson/miceforest" -> "MIDASverse/MIDASpy"
"AnotherSamWilson/miceforest" -> "manuel-calzolari/sklearn-genetic"
"AnotherSamWilson/miceforest" -> "alteryx/evalml"
"ZFTurbo/classification_models_3D" -> "ZFTurbo/efficientnet_3D"
"ZFTurbo/classification_models_3D" -> "ZFTurbo/segmentation_models_3D"
"ZFTurbo/classification_models_3D" -> "ZFTurbo/volumentations"
"ZFTurbo/classification_models_3D" -> "ZFTurbo/timm_3d"
"ZFTurbo/classification_models_3D" -> "shijianjian/EfficientNet-PyTorch-3D"
"Dynamic-Systems-and-GP/GPdyn" -> "HildoBijl/GPRT"
"Dynamic-Systems-and-GP/GPdyn" -> "ftuffner/DSIToolbox"
"gwgundersen/bocd" -> "dtolpin/bocd"
"gwgundersen/bocd" -> "y-bar/bocd"
"deryckt/TIRE" -> "OctoberChang/klcpd_code"
"Alex-Lekov/AutoML_Alex" -> "Alex-Lekov/AutoML-Benchmark"
"ing-bank/popmon" -> "dylan-profiler/visions"
"ing-bank/popmon" -> "ing-bank/probatus"
"ing-bank/popmon" -> "AutoViML/featurewiz"
"ing-bank/popmon" -> "alteryx/evalml"
"ing-bank/popmon" -> "ing-bank/sparse_dot_topn" ["e"=1]
"ing-bank/popmon" -> "histogrammar/histogrammar-python"
"Baukebrenninkmeijer/table-evaluator" -> "Baukebrenninkmeijer/On-the-Generation-and-Evaluation-of-Synthetic-Tabular-Data-using-GANs"
"benchopt/benchopt" -> "scikit-adaptation/skada"
"benchopt/benchopt" -> "scikit-learn-contrib/skglm"
"benchopt/benchopt" -> "mathurinm/celer"
"benchopt/benchopt" -> "benchopt/template_benchmark"
"benchopt/benchopt" -> "mathurinm/libsvmdata"
"benchopt/benchopt" -> "PerformanceEstimation/PEPit"
"benchopt/benchopt" -> "soda-inria/hazardous"
"benchopt/benchopt" -> "QB3/sparse-ho"
"benchopt/benchopt" -> "benchopt/benchmark_lasso"
"benchopt/benchopt" -> "peerannot/peerannot"
"benchopt/benchopt" -> "josephsalmon/HAX712X"
"benchopt/benchopt" -> "alphacsc/alphacsc" ["e"=1]
"benchopt/benchopt" -> "deepinv/deepinv" ["e"=1]
"benchopt/benchopt" -> "josephsalmon/OrganizationFiles"
"benchopt/benchopt" -> "mathurinm/andersoncd"
"eugeneyan/testing-ml" -> "eugeneyan/python-collab-template"
"eugeneyan/testing-ml" -> "eugeneyan/ml-design-docs"
"eugeneyan/testing-ml" -> "eugeneyan/papermill-mlflow"
"eugeneyan/testing-ml" -> "eugeneyan/recsys-nlp-graph"
"ray-project/tune-sklearn" -> "loft-br/xgboost-survival-embeddings"
"ray-project/tune-sklearn" -> "Ekeany/Boruta-Shap"
"ray-project/tune-sklearn" -> "Neuraxio/Neuraxle"
"ray-project/tune-sklearn" -> "koaning/scikit-lego"
"ray-project/tune-sklearn" -> "data-describe/data-describe"
"ray-project/tune-sklearn" -> "alteryx/evalml"
"ray-project/tune-sklearn" -> "scikit-learn-contrib/boruta_py"
"ray-project/tune-sklearn" -> "hyperopt/hyperopt-sklearn"
"ray-project/tune-sklearn" -> "ing-bank/probatus"
"ray-project/tune-sklearn" -> "koaning/human-learn"
"ray-project/tune-sklearn" -> "scikit-learn-contrib/DESlib"
"ray-project/tune-sklearn" -> "cerlymarco/shap-hypetune"
"ray-project/tune-sklearn" -> "scikit-learn-contrib/scikit-learn-extra"
"ray-project/tune-sklearn" -> "scikit-optimize/scikit-optimize"
"StatMixedML/CatBoostLSS" -> "StatMixedML/XGBoostLSS"
"StatMixedML/CatBoostLSS" -> "StatMixedML/LightGBMLSS"
"pcingola/jFuzzyLogic" -> "sorend/fuzzy4j"
"pcingola/jFuzzyLogic" -> "fuzzylite/jfuzzylite"
"automl/LCBench" -> "slds-lmu/yahpo_gym"
"mourarthur/awesome-credit-modeling" -> "ing-bank/skorecard"
"j-wilson/GPflowSampling" -> "cagatayyildiz/neural-ode-tutorial"
"ryojitanabe/reproblems" -> "P-N-Suganthan/2021-RW-MOP"
"autodeployai/ai-serving" -> "autodeployai/pypmml"
"autodeployai/ai-serving" -> "aipredict/ai-deployment"
"PacktPublishing/Hands-On-Explainable-AI-XAI-with-Python" -> "deepfindr/xai-series"
"dssg/mlforpublicpolicylab" -> "dssg/triage"
"dssg/mlforpublicpolicylab" -> "dssg/MLforPublicPolicy"
"dssg/mlforpublicpolicylab" -> "dssg/fairness_tutorial"
"dssg/mlforpublicpolicylab" -> "dssg/MLinPractice"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/Unit-Testing-Vue-3"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/validating-vue3-forms"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/real-world-nuxt"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/animating-vue"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/Vue-2-to-Vue-3"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/Intro-to-Vue-3"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/authentication_course"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/real-world-vue"
"Code-Pop/Real-World_Vue-3" -> "Code-Pop/build-gmail-clone-with-vue-3"
"ltiao/bore" -> "lfbo-ml/lfbo"
"igaloly/vue-preloaders" -> "aporia-ai/dmatrix2np"
"amirsaffari/online-random-forests" -> "amirsaffari/online-multiclass-lpboost"
"amirsaffari/online-random-forests" -> "nel215/mondrianforest"
"amirsaffari/online-random-forests" -> "balajiln/mondrianforest"
"MalteKurz/VineCopulaMatlab" -> "ElsevierSoftwareX/SOFTX-D-21-00039"
"MalteKurz/VineCopulaMatlab" -> "asnelt/MixedVineToolbox"
"Code-Pop/Unit-Testing-Vue2" -> "Code-Pop/animating-vue"
"Code-Pop/Unit-Testing-Vue2" -> "Code-Pop/real-world-nuxt"
"Code-Pop/Unit-Testing-Vue2" -> "Code-Pop/beautify-with-vuetify"
"juanitorduz/btsa" -> "neuefische/ds-meetups"
"juanitorduz/btsa" -> "FrancescaLazzeri/AutoML-for-Timeseries-Forecasting-Berlin-MeetUp"
"pmorenoz/ContinualGP" -> "pmorenoz/HierCPD"
"pmorenoz/ContinualGP" -> "pmorenoz/HetMOGP"
"pmorenoz/ContinualGP" -> "pmorenoz/RecyclableGP"
"dhanajitb/GAIN-Pytorch" -> "jsyoon0823/GAIN"
"justinengelmann/GANbasedOversampling" -> "johaupt/GANbalanced"
"maximenc/pycop" -> "DanielBok/copulae"
"maximenc/pycop" -> "blent-ai/pycopula"
"maximenc/pycop" -> "vinecopulib/pyvinecopulib"
"maximenc/pycop" -> "NinelK/CopulaGP"
"maximenc/pycop" -> "VU-IVM/VineCopulas"
"dssg/data-science-101" -> "dssg/MLforPublicPolicy"
"vishnukanduri/Credit-Risk-Modeling-in-Python" -> "RegaipKURT/Credit-Risk-Modelling"
"vishnukanduri/Credit-Risk-Modeling-in-Python" -> "abhashpanwar/credit-risk-modeling"
"vishnukanduri/Credit-Risk-Modeling-in-Python" -> "sujaytalesara/Predictive-Analytics"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/watch-us-build-trello"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/authentication_course"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/validating-vue3-forms"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/Real-World-Vue-3-TypeScript"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/vue-3-reactivity"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/build-a-blog-with-nuxt-3-and-nuxt-content-v2"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/animating-vue"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/Vue-2-to-Vue-3"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/graphql-client"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/Unit-Testing-Vue-3"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/Unit-Testing-Vue2"
"Code-Pop/build-gmail-clone-with-vue-3" -> "Code-Pop/real-world-nuxt"
"flyteorg/flytectl" -> "flyteorg/flytepropeller"
"flyteorg/flytectl" -> "flyteorg/flyteplugins"
"flyteorg/flytectl" -> "flyteorg/flyteadmin"
"flyteorg/flytectl" -> "flyteorg/flyteconsole"
"flyteorg/flytectl" -> "flyteorg/flyteidl"
"dylan-profiler/visions" -> "dylan-profiler/compressio"
"gregorLen/AnfisTensorflow2.0" -> "tiagoCuervo/TensorANFIS"
"kubeflow/kfp-tekton" -> "IBM/KubeflowDojo"
"kubeflow/kfp-tekton" -> "machine-learning-exchange/mlx"
"IBM/KubeflowDojo" -> "kubeflow/kfp-tekton"
"sile/fanova" -> "sile/hone"
"CyberAgentAILab/minituna" -> "nyk510/gradient-boosted-decision-tree" ["e"=1]
"CyberAgentAILab/minituna" -> "optuna/optunahub"
"himkt/allennlp-optuna" -> "sile/hone"
"SheffieldML/GPc" -> "jonfink/GP"
"SheffieldML/GPc" -> "mblum/libgp"
"ZFTurbo/efficientnet_3D" -> "ZFTurbo/classification_models_3D"
"QB3/sparse-ho" -> "mathurinm/libsvmdata"
"QB3/sparse-ho" -> "benchopt/benchmark_lasso"
"DagsHub/client" -> "jenkinsci/dagshub-branch-source-plugin"
"DagsHub/client" -> "DagsHub/fds"
"DagsHub/client" -> "DagsHub/papers-with-everything"
"flyteorg/flytesnacks" -> "flyteorg/flyteadmin"
"flyteorg/flytesnacks" -> "flyteorg/flytepropeller"
"flyteorg/flytesnacks" -> "flyteorg/flytekit"
"flyteorg/flytesnacks" -> "flyteorg/flytelab"
"flyteorg/flytesnacks" -> "flyteorg/flyteplugins"
"flyteorg/flytesnacks" -> "flyteorg/flyteconsole"
"flyteorg/flytesnacks" -> "davidmirror-ops/flyte-the-hard-way"
"flyteorg/flytesnacks" -> "flyteorg/flytectl"
"flyteorg/flytesnacks" -> "unionai-oss/deploy-flyte"
"flyteorg/flytesnacks" -> "flyteorg/flytekit-python-template"
"flyteorg/flytesnacks" -> "flyteorg/flytekit-java"
"flyteorg/flytesnacks" -> "flyteorg/flyteidl"
"flyteorg/flytesnacks" -> "flyteorg/flytestdlib"
"flyteorg/flytesnacks" -> "flyteorg/flytecopilot"
"Jimmy-Lin/GeneralizedOptimalSparseDecisionTrees" -> "xiyanghu/OSDT"
"Jimmy-Lin/GeneralizedOptimalSparseDecisionTrees" -> "ubc-systopia/gosdt-guesses"
"chl8856/Dynamic-DeepHit" -> "Jeanselme/DynamicDeepHit"
"chl8856/Dynamic-DeepHit" -> "chl8856/DeepHit"
"chl8856/Dynamic-DeepHit" -> "ryancburke/DNN_survival"
"chl8856/Dynamic-DeepHit" -> "havakv/torchtuples"
"XuhuiM/Multi-Fidelity-DNNs-PINNs" -> "xdfeng7370/Multi-fidelity-neural-network-"
"XuhuiM/Multi-Fidelity-DNNs-PINNs" -> "Xiao-dong-Wang/Multifidelity-GP"
"XuhuiM/Multi-Fidelity-DNNs-PINNs" -> "shib0li/DNN-MFBO"
"ThoughtWorksInc/CD4ML-Scenarios" -> "ThoughtWorksInc/cd4ml-workshop"
"ThoughtWorksInc/CD4ML-Scenarios" -> "mona-kay/odsc-sql-for-data-science" ["e"=1]
"ThoughtWorksInc/CD4ML-Scenarios" -> "moovai/model_validation_tutorial"
"KerasKorea/KerasObjectDetector" -> "KerasKorea/KerasKorea.github.io"
"SpatialPython/spatial_python" -> "carsonfarmer/python_geospatial"
"CODAIT/presentations" -> "CODAIT/max-tfjs-models"
"CODAIT/presentations" -> "IBM/MAX-Framework"
"amirsaffari/online-multiclass-lpboost" -> "amirsaffari/online-random-forests"
"tradertanmay/Credit-Risk-Modeling" -> "sujaytalesara/Predictive-Analytics"
"eugeneyan/poc-docker-template" -> "eugeneyan/nocode-ml"
"facebookresearch/alebo" -> "aminnayebi/HesBO"
"IBM/MAX-Question-Answering" -> "IBM/MAX-Framework"
"taenggu0309/Semi-auto-modeling" -> "SailingHe/Automatic-scorecard-model"
"taenggu0309/Semi-auto-modeling" -> "taenggu0309/Scorecard--Assessment"
"SailingHe/Automatic-scorecard-model" -> "taenggu0309/Semi-auto-modeling"
"WillKoehrsen/mastering-large-datasets" -> "WillKoehrsen/neural-networks"
"moovai/model_validation_tutorial" -> "brown-ccv/ODSC_East_2020"
"ogozuacik/d3-discriminative-drift-detector-concept-drift" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"ogozuacik/d3-discriminative-drift-detector-concept-drift" -> "ogozuacik/one-class-drift-detection"
"ogozuacik/d3-discriminative-drift-detector-concept-drift" -> "alipsgh/codes-for-moa"
"flyteorg/flyteadmin" -> "flyteorg/flytestdlib"
"flyteorg/flyteadmin" -> "flyteorg/flyteplugins"
"flyteorg/flyteadmin" -> "flyteorg/flyteidl"
"flyteorg/flyteadmin" -> "flyteorg/flytepropeller"
"flyteorg/flyteadmin" -> "flyteorg/datacatalog"
"flyteorg/flyteadmin" -> "flyteorg/flytecopilot"
"TutteInstitute/vectorizers" -> "TutteInstitute/TextMAP"
"gretelai/gretel-blueprints" -> "gretelai/gretel-python-client"
"gretelai/gretel-blueprints" -> "gretelai/gretel-tools"
"gretelai/gretel-blueprints" -> "gretelai/GAN-location-generator"
"gretelai/gretel-blueprints" -> "gretelai/synthetic-data-genomics"
"flyteorg/datacatalog" -> "flyteorg/flytecopilot"
"flyteorg/datacatalog" -> "flyteorg/flyteadmin"
"flyteorg/datacatalog" -> "flyteorg/flyteplugins"
"flyteorg/datacatalog" -> "flyteorg/flytepropeller"
"flyteorg/datacatalog" -> "flyteorg/flyteidl"
"flyteorg/datacatalog" -> "flyteorg/boilerplate"
"flyteorg/flyteidl" -> "flyteorg/flyteadmin"
"flyteorg/flyteidl" -> "flyteorg/flytepropeller"
"flyteorg/flyteidl" -> "flyteorg/flyteplugins"
"flyteorg/flyteidl" -> "flyteorg/flytecopilot"
"flyteorg/flyteidl" -> "flyteorg/flyteconsole"
"flyteorg/flyteplugins" -> "flyteorg/flytecopilot"
"flyteorg/flyteplugins" -> "flyteorg/flyteadmin"
"flyteorg/flytepropeller" -> "flyteorg/flyteadmin"
"flyteorg/flytepropeller" -> "flyteorg/flyteidl"
"flyteorg/flytepropeller" -> "flyteorg/flyteplugins"
"flyteorg/flytepropeller" -> "flyteorg/flytecopilot"
"flyteorg/flytepropeller" -> "flyteorg/flytectl"
"flyteorg/flytepropeller" -> "flyteorg/boilerplate"
"carlomazzaferro/scikit-hts-examples" -> "carlomazzaferro/scikit-hts"
"carlomazzaferro/scikit-hts-examples" -> "CollinRooney12/htsprophet"
"ckyrkou/Keras_FLOP_Estimator" -> "Mr-TalhaIlyas/Tensorflow-Keras-Model-Profiler"
"nicofirst1/ledypi" -> "spindro/AP-GCN"
"ansrivas/GNG" -> "AdrienGuille/GrowingNeuralGas"
"flyteorg/boilerplate" -> "flyteorg/flytecopilot"
"aporia-ai/dmatrix2np" -> "igaloly/vue-preloaders"
"gabrieljaguiar/image-meta-feature-extractor" -> "gabrieljaguiar/nemenyi"
"hj-n/steadiness-cohesiveness" -> "hj-n/snc-reliability-map"
"huangxianyang/risk-model" -> "finafily526/A_Model_of_Risk_Control"
"huangxianyang/risk-model" -> "nothingyang/RiskModeler"
"huangxianyang/risk-model" -> "SailingHe/Automatic-scorecard-model"
"scikit-learn-contrib/hdbscan" -> "lmcinnes/umap"
"scikit-learn-contrib/hdbscan" -> "scikit-learn-contrib/imbalanced-learn"
"scikit-learn-contrib/hdbscan" -> "DistrictDataLabs/yellowbrick"
"scikit-learn-contrib/hdbscan" -> "scikit-learn-contrib/category_encoders"
"scikit-learn-contrib/hdbscan" -> "ddangelov/Top2Vec" ["e"=1]
"scikit-learn-contrib/hdbscan" -> "reiinakano/scikit-plot"
"scikit-learn-contrib/hdbscan" -> "rasbt/mlxtend"
"scikit-learn-contrib/hdbscan" -> "lmcinnes/pynndescent"
"scikit-learn-contrib/hdbscan" -> "blue-yonder/tsfresh"
"scikit-learn-contrib/hdbscan" -> "DmitryUlyanov/Multicore-TSNE"
"scikit-learn-contrib/hdbscan" -> "hyperopt/hyperopt"
"scikit-learn-contrib/hdbscan" -> "EpistasisLab/tpot"
"scikit-learn-contrib/hdbscan" -> "jmschrei/pomegranate"
"scikit-learn-contrib/hdbscan" -> "scikit-optimize/scikit-optimize"
"scikit-learn-contrib/hdbscan" -> "tslearn-team/tslearn"
"Nixtla/mlforecast" -> "Nixtla/hierarchicalforecast"
"Nixtla/mlforecast" -> "Nixtla/statsforecast"
"Nixtla/mlforecast" -> "Nixtla/neuralforecast"
"Nixtla/mlforecast" -> "Nixtla/tsfeatures"
"Nixtla/mlforecast" -> "Nixtla/nixtla"
"Nixtla/mlforecast" -> "functime-org/functime" ["e"=1]
"Nixtla/mlforecast" -> "skforecast/skforecast"
"Nixtla/mlforecast" -> "winedarksea/AutoTS"
"Nixtla/mlforecast" -> "Nixtla/utilsforecast"
"Nixtla/mlforecast" -> "henrikbostrom/crepes" ["e"=1]
"Nixtla/mlforecast" -> "scikit-learn-contrib/MAPIE"
"Nixtla/mlforecast" -> "Nixtla/transfer-learning-time-series"
"Nixtla/mlforecast" -> "feature-engine/feature_engine"
"Nixtla/mlforecast" -> "google/temporian" ["e"=1]
"Nixtla/mlforecast" -> "mikekeith52/scalecast"
"replicate/cog" -> "skypilot-org/skypilot" ["e"=1]
"replicate/cog" -> "bentoml/BentoML"
"replicate/cog" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"replicate/cog" -> "dottxt-ai/outlines" ["e"=1]
"replicate/cog" -> "evidentlyai/evidently"
"replicate/cog" -> "huggingface/diffusers" ["e"=1]
"replicate/cog" -> "stanfordnlp/dspy" ["e"=1]
"replicate/cog" -> "cleanlab/cleanlab"
"replicate/cog" -> "zenml-io/zenml"
"replicate/cog" -> "567-labs/instructor" ["e"=1]
"replicate/cog" -> "huggingface/text-generation-inference" ["e"=1]
"replicate/cog" -> "Lightning-AI/litgpt" ["e"=1]
"replicate/cog" -> "kedro-org/kedro"
"replicate/cog" -> "deepset-ai/haystack" ["e"=1]
"replicate/cog" -> "iterative/dvc"
"facebookresearch/Kats" -> "unit8co/darts"
"facebookresearch/Kats" -> "salesforce/Merlion"
"facebookresearch/Kats" -> "sktime/sktime"
"facebookresearch/Kats" -> "blue-yonder/tsfresh"
"facebookresearch/Kats" -> "ourownstory/neural_prophet"
"facebookresearch/Kats" -> "awslabs/gluonts"
"facebookresearch/Kats" -> "linkedin/greykite"
"facebookresearch/Kats" -> "Nixtla/statsforecast"
"facebookresearch/Kats" -> "sktime/pytorch-forecasting"
"facebookresearch/Kats" -> "uber/orbit"
"facebookresearch/Kats" -> "TDAmeritrade/stumpy"
"facebookresearch/Kats" -> "facebook/prophet"
"facebookresearch/Kats" -> "tslearn-team/tslearn"
"facebookresearch/Kats" -> "winedarksea/AutoTS"
"facebookresearch/Kats" -> "timeseriesAI/tsai"
"https-deeplearning-ai/tensorflow-2-public" -> "https-deeplearning-ai/tensorflow-3-public"
"https-deeplearning-ai/tensorflow-2-public" -> "https-deeplearning-ai/tensorflow-1-public"
"https-deeplearning-ai/tensorflow-2-public" -> "https-deeplearning-ai/GANs-Public"
"https-deeplearning-ai/tensorflow-2-public" -> "williamcwi/DeepLearning.AI-TensorFlow-Developer-Professional-Certificate" ["e"=1]
"https-deeplearning-ai/tensorflow-2-public" -> "https-deeplearning-ai/machine-learning-engineering-for-production-public"
"https-deeplearning-ai/tensorflow-2-public" -> "IndoNLP/indonlu" ["e"=1]
"ml-tooling/opyrator" -> "ebhy/budgetml"
"ml-tooling/opyrator" -> "ml-tooling/ml-workspace" ["e"=1]
"ml-tooling/opyrator" -> "lux-org/lux"
"ml-tooling/opyrator" -> "MAIF/shapash"
"ml-tooling/opyrator" -> "orchest/orchest"
"ml-tooling/opyrator" -> "aladinyo/WhatsappyApp" ["e"=1]
"ml-tooling/opyrator" -> "zenml-io/zenml"
"ml-tooling/opyrator" -> "rh12503/triangula"
"ml-tooling/opyrator" -> "facebookresearch/AugLy" ["e"=1]
"ml-tooling/opyrator" -> "salesforce/Merlion"
"ml-tooling/opyrator" -> "NorskRegnesentral/skweak" ["e"=1]
"ml-tooling/opyrator" -> "jorisschellekens/borb" ["e"=1]
"ml-tooling/opyrator" -> "josepholiveira/podcastr"
"ml-tooling/opyrator" -> "ml-tooling/best-of-web-python" ["e"=1]
"ml-tooling/opyrator" -> "facebookresearch/Kats"
"automl/auto-sklearn" -> "EpistasisLab/tpot"
"automl/auto-sklearn" -> "keras-team/autokeras"
"automl/auto-sklearn" -> "alteryx/featuretools"
"automl/auto-sklearn" -> "hyperopt/hyperopt"
"automl/auto-sklearn" -> "ClimbsRocks/auto_ml"
"automl/auto-sklearn" -> "scikit-learn-contrib/imbalanced-learn"
"automl/auto-sklearn" -> "h2oai/h2o-3"
"automl/auto-sklearn" -> "scikit-optimize/scikit-optimize"
"automl/auto-sklearn" -> "blue-yonder/tsfresh"
"automl/auto-sklearn" -> "rasbt/mlxtend"
"automl/auto-sklearn" -> "autogluon/autogluon"
"automl/auto-sklearn" -> "hyperopt/hyperopt-sklearn"
"automl/auto-sklearn" -> "AxeldeRomblay/MLBox"
"automl/auto-sklearn" -> "marcotcr/lime"
"automl/auto-sklearn" -> "automl/Auto-PyTorch" ["e"=1]
"Nixtla/neuralforecast" -> "Nixtla/statsforecast"
"Nixtla/neuralforecast" -> "sktime/pytorch-forecasting"
"Nixtla/neuralforecast" -> "awslabs/gluonts"
"Nixtla/neuralforecast" -> "Nixtla/mlforecast"
"Nixtla/neuralforecast" -> "Nixtla/nixtla"
"Nixtla/neuralforecast" -> "unit8co/darts"
"Nixtla/neuralforecast" -> "yuqinie98/PatchTST" ["e"=1]
"Nixtla/neuralforecast" -> "timeseriesAI/tsai"
"Nixtla/neuralforecast" -> "thuml/Time-Series-Library" ["e"=1]
"Nixtla/neuralforecast" -> "cure-lab/LTSF-Linear" ["e"=1]
"Nixtla/neuralforecast" -> "Nixtla/hierarchicalforecast"
"Nixtla/neuralforecast" -> "ourownstory/neural_prophet"
"Nixtla/neuralforecast" -> "KimMeen/Time-LLM" ["e"=1]
"Nixtla/neuralforecast" -> "AIStream-Peelout/flow-forecast" ["e"=1]
"Nixtla/neuralforecast" -> "sktime/sktime"
"zenml-io/zenml" -> "bentoml/BentoML"
"zenml-io/zenml" -> "evidentlyai/evidently"
"zenml-io/zenml" -> "deepchecks/deepchecks"
"zenml-io/zenml" -> "visenger/awesome-mlops" ["e"=1]
"zenml-io/zenml" -> "feast-dev/feast"
"zenml-io/zenml" -> "Netflix/metaflow"
"zenml-io/zenml" -> "clearml/clearml"
"zenml-io/zenml" -> "ebhy/budgetml"
"zenml-io/zenml" -> "kelvins/awesome-mlops" ["e"=1]
"zenml-io/zenml" -> "whylabs/whylogs" ["e"=1]
"zenml-io/zenml" -> "kedro-org/kedro"
"zenml-io/zenml" -> "GokuMohandas/mlops-course" ["e"=1]
"zenml-io/zenml" -> "SeldonIO/seldon-core"
"zenml-io/zenml" -> "flyteorg/flyte"
"zenml-io/zenml" -> "iterative/cml"
"featureform/featureform" -> "feast-dev/feast"
"featureform/featureform" -> "feathr-ai/feathr" ["e"=1]
"featureform/featureform" -> "logicalclocks/hopsworks"
"featureform/featureform" -> "fugue-project/fugue" ["e"=1]
"featureform/featureform" -> "zenml-io/zenml"
"featureform/featureform" -> "evidentlyai/evidently"
"featureform/featureform" -> "deepchecks/deepchecks"
"featureform/featureform" -> "stitchfix/hamilton" ["e"=1]
"featureform/featureform" -> "unionai-oss/pandera"
"featureform/featureform" -> "NannyML/nannyml"
"featureform/featureform" -> "whylabs/whylogs" ["e"=1]
"featureform/featureform" -> "ploomber/ploomber"
"featureform/featureform" -> "kserve/kserve"
"featureform/featureform" -> "bentoml/BentoML"
"featureform/featureform" -> "feature-engine/feature_engine"
"koaning/drawdata" -> "koaning/human-learn"
"koaning/drawdata" -> "koaning/scikit-lego"
"koaning/drawdata" -> "MAIF/shapash"
"koaning/drawdata" -> "koaning/doubtlab"
"koaning/drawdata" -> "manzt/anywidget" ["e"=1]
"koaning/drawdata" -> "NannyML/nannyml"
"koaning/drawdata" -> "skrub-data/skrub"
"koaning/drawdata" -> "lux-org/lux"
"koaning/drawdata" -> "mito-ds/mito" ["e"=1]
"koaning/drawdata" -> "lgienapp/aquarel" ["e"=1]
"koaning/drawdata" -> "shankarpandala/lazypredict"
"koaning/drawdata" -> "functime-org/functime" ["e"=1]
"koaning/drawdata" -> "online-ml/river"
"koaning/drawdata" -> "jupyterlite/jupyterlite" ["e"=1]
"koaning/drawdata" -> "adamerose/PandasGUI"
"ray-project/kuberay" -> "apache/yunikorn-core" ["e"=1]
"ray-project/kuberay" -> "kubernetes-sigs/kueue" ["e"=1]
"ray-project/kuberay" -> "volcano-sh/volcano" ["e"=1]
"ray-project/kuberay" -> "apache/gravitino" ["e"=1]
"ray-project/kuberay" -> "ray-project/ray-llm" ["e"=1]
"ray-project/kuberay" -> "apache/yunikorn-k8shim" ["e"=1]
"ray-project/kuberay" -> "kubeflow/trainer" ["e"=1]
"ray-project/kuberay" -> "kubernetes-sigs/lws" ["e"=1]
"ray-project/kuberay" -> "flyteorg/flyte"
"ray-project/kuberay" -> "kserve/kserve"
"ray-project/kuberay" -> "oap-project/raydp" ["e"=1]
"ray-project/kuberay" -> "kubernetes-sigs/scheduler-plugins" ["e"=1]
"ray-project/kuberay" -> "Project-HAMi/HAMi" ["e"=1]
"ray-project/kuberay" -> "NVIDIA/gpu-operator" ["e"=1]
"ray-project/kuberay" -> "vllm-project/aibrix" ["e"=1]
"https-deeplearning-ai/tensorflow-1-public" -> "https-deeplearning-ai/tensorflow-2-public"
"https-deeplearning-ai/tensorflow-1-public" -> "williamcwi/DeepLearning.AI-TensorFlow-Developer-Professional-Certificate" ["e"=1]
"https-deeplearning-ai/tensorflow-1-public" -> "https-deeplearning-ai/machine-learning-engineering-for-production-public"
"https-deeplearning-ai/tensorflow-1-public" -> "mrdbourke/tensorflow-deep-learning" ["e"=1]
"https-deeplearning-ai/tensorflow-1-public" -> "amanchadha/coursera-deep-learning-specialization" ["e"=1]
"https-deeplearning-ai/tensorflow-1-public" -> "kolasniwash/tensorflow-certification-study-guide" ["e"=1]
"https-deeplearning-ai/tensorflow-1-public" -> "https-deeplearning-ai/tensorflow-3-public"
"https-deeplearning-ai/tensorflow-1-public" -> "lmoroney/dlaicourse"
"https-deeplearning-ai/tensorflow-1-public" -> "zalandoresearch/fashion-mnist"
"https-deeplearning-ai/tensorflow-1-public" -> "tensorflow/datasets"
"https-deeplearning-ai/tensorflow-1-public" -> "ashishpatel26/Tensorflow-in-practise-Specialization" ["e"=1]
"https-deeplearning-ai/tensorflow-1-public" -> "ashishpatel26/Andrew-NG-Notes" ["e"=1]
"https-deeplearning-ai/tensorflow-1-public" -> "greyhatguy007/Machine-Learning-Specialization-Coursera" ["e"=1]
"https-deeplearning-ai/tensorflow-1-public" -> "MaheshBabu11/DeepLearning.AI-TensorFlow-Developer-Course" ["e"=1]
"https-deeplearning-ai/tensorflow-1-public" -> "y33-j3T/Coursera-Deep-Learning" ["e"=1]
"tensorflow/decision-forests" -> "google/yggdrasil-decision-forests"
"tensorflow/decision-forests" -> "tensorflow/similarity"
"tensorflow/decision-forests" -> "tensorflow/gnn" ["e"=1]
"tensorflow/decision-forests" -> "tensorflow/recommenders" ["e"=1]
"tensorflow/decision-forests" -> "tensorflow/tfx"
"tensorflow/decision-forests" -> "keras-team/keras-cv"
"tensorflow/decision-forests" -> "LAMDA-NJU/Deep-Forest" ["e"=1]
"tensorflow/decision-forests" -> "tensorflow/text"
"tensorflow/decision-forests" -> "keras-team/keras-hub"
"tensorflow/decision-forests" -> "tensorflow/transform"
"tensorflow/decision-forests" -> "google/tensorflow-recorder"
"tensorflow/decision-forests" -> "tensorflow/cloud" ["e"=1]
"skforecast/skforecast" -> "Nixtla/mlforecast"
"skforecast/skforecast" -> "winedarksea/AutoTS"
"skforecast/skforecast" -> "Nixtla/statsforecast"
"skforecast/skforecast" -> "feature-engine/feature_engine"
"skforecast/skforecast" -> "scikit-learn-contrib/MAPIE"
"skforecast/skforecast" -> "Nixtla/hierarchicalforecast"
"skforecast/skforecast" -> "AutoViML/Auto_TS"
"skforecast/skforecast" -> "Nixtla/neuralforecast"
"skforecast/skforecast" -> "functime-org/functime" ["e"=1]
"skforecast/skforecast" -> "sktime/sktime"
"skforecast/skforecast" -> "alkaline-ml/pmdarima"
"skforecast/skforecast" -> "uber/orbit"
"skforecast/skforecast" -> "ourownstory/neural_prophet"
"skforecast/skforecast" -> "unit8co/darts"
"skforecast/skforecast" -> "google/temporian" ["e"=1]
"PipelineAI/pipeline" -> "yahoo/TensorFlowOnSpark" ["e"=1]
"PipelineAI/pipeline" -> "spark-notebook/spark-notebook" ["e"=1]
"PipelineAI/pipeline" -> "kubeflow/kubeflow"
"PipelineAI/pipeline" -> "combust/mleap" ["e"=1]
"PipelineAI/pipeline" -> "sryza/spark-timeseries" ["e"=1]
"PipelineAI/pipeline" -> "pachyderm/pachyderm"
"PipelineAI/pipeline" -> "horovod/horovod"
"PipelineAI/pipeline" -> "databricks/spark-deep-learning" ["e"=1]
"PipelineAI/pipeline" -> "SeldonIO/seldon-core"
"PipelineAI/pipeline" -> "spark-jobserver/spark-jobserver" ["e"=1]
"PipelineAI/pipeline" -> "apache/predictionio" ["e"=1]
"PipelineAI/pipeline" -> "tensorflow/serving" ["e"=1]
"PipelineAI/pipeline" -> "h2oai/h2o-3"
"PipelineAI/pipeline" -> "polyaxon/polyaxon"
"PipelineAI/pipeline" -> "VertaAI/modeldb"
"bentoml/Yatai" -> "bentoml/bentoctl"
"bentoml/Yatai" -> "bentoml/BentoML"
"bentoml/Yatai" -> "bentoml/yatai-deployment"
"bentoml/Yatai" -> "ssheng/BentoChain"
"bentoml/Yatai" -> "star-whale/starwhale"
"bentoml/Yatai" -> "tensorchord/envd" ["e"=1]
"AutoViML/featurewiz" -> "AutoViML/Auto_ViML"
"AutoViML/featurewiz" -> "cerlymarco/shap-hypetune"
"AutoViML/featurewiz" -> "Ekeany/Boruta-Shap"
"AutoViML/featurewiz" -> "cod3licious/autofeat"
"AutoViML/featurewiz" -> "feature-engine/feature_engine"
"AutoViML/featurewiz" -> "AutoViML/AutoViz"
"AutoViML/featurewiz" -> "StatMixedML/XGBoostLSS"
"AutoViML/featurewiz" -> "smazzanti/mrmr"
"AutoViML/featurewiz" -> "AutoViML/Auto_TS"
"AutoViML/featurewiz" -> "csinva/imodels"
"AutoViML/featurewiz" -> "alteryx/evalml"
"AutoViML/featurewiz" -> "predict-idlab/tsflex"
"AutoViML/featurewiz" -> "ThomasBury/arfs"
"AutoViML/featurewiz" -> "scikit-learn-contrib/boruta_py"
"AutoViML/featurewiz" -> "fabsig/GPBoost"
"loft-br/xgboost-survival-embeddings" -> "autonlab/auton-survival"
"loft-br/xgboost-survival-embeddings" -> "sebp/scikit-survival"
"loft-br/xgboost-survival-embeddings" -> "square/pysurvival"
"loft-br/xgboost-survival-embeddings" -> "havakv/pycox"
"loft-br/xgboost-survival-embeddings" -> "carlomazzaferro/scikit-hts"
"loft-br/xgboost-survival-embeddings" -> "ray-project/tune-sklearn"
"loft-br/xgboost-survival-embeddings" -> "Ekeany/Boruta-Shap"
"loft-br/xgboost-survival-embeddings" -> "cerlymarco/shap-hypetune"
"loft-br/xgboost-survival-embeddings" -> "StatMixedML/CatBoostLSS"
"google/yggdrasil-decision-forests" -> "tensorflow/decision-forests"
"google/yggdrasil-decision-forests" -> "google/temporian" ["e"=1]
"evidentlyai/evidently" -> "deepchecks/deepchecks"
"evidentlyai/evidently" -> "SeldonIO/alibi-detect"
"evidentlyai/evidently" -> "whylabs/whylogs" ["e"=1]
"evidentlyai/evidently" -> "zenml-io/zenml"
"evidentlyai/evidently" -> "NannyML/nannyml"
"evidentlyai/evidently" -> "visenger/awesome-mlops" ["e"=1]
"evidentlyai/evidently" -> "feast-dev/feast"
"evidentlyai/evidently" -> "iterative/dvc"
"evidentlyai/evidently" -> "bentoml/BentoML"
"evidentlyai/evidently" -> "kedro-org/kedro"
"evidentlyai/evidently" -> "mlflow/mlflow"
"evidentlyai/evidently" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"evidentlyai/evidently" -> "kelvins/awesome-mlops" ["e"=1]
"evidentlyai/evidently" -> "Netflix/metaflow"
"evidentlyai/evidently" -> "online-ml/river"
"Code-Pop/Real-World-Vue-3-TypeScript" -> "Code-Pop/Unit-Testing-Vue-3"
"Code-Pop/Real-World-Vue-3-TypeScript" -> "Code-Pop/build-gmail-clone-with-vue-3"
"Code-Pop/Real-World-Vue-3-TypeScript" -> "Code-Pop/vue-3-typescript"
"google/model_search" -> "MAIF/shapash"
"google/model_search" -> "microsoft/nni"
"google/model_search" -> "PAIR-code/lit" ["e"=1]
"google/model_search" -> "google/automl" ["e"=1]
"google/model_search" -> "facebookresearch/AugLy" ["e"=1]
"google/model_search" -> "microsoft/FLAML"
"google/model_search" -> "autogluon/autogluon"
"google/model_search" -> "keras-team/autokeras"
"google/model_search" -> "SeldonIO/alibi-detect"
"google/model_search" -> "automl/Auto-PyTorch" ["e"=1]
"google/model_search" -> "online-ml/river"
"google/model_search" -> "microsoft/hummingbird"
"google/model_search" -> "tensorflow/adanet"
"google/model_search" -> "ai-eks/OpenClubhouse" ["e"=1]
"google/model_search" -> "evidentlyai/evidently"
"predict-idlab/tsflex" -> "fraunhoferportugal/tsfel" ["e"=1]
"predict-idlab/tsflex" -> "predict-idlab/powershap"
"predict-idlab/tsflex" -> "predict-idlab/sleep-linear" ["e"=1]
"predict-idlab/tsflex" -> "Nixtla/tsfeatures"
"predict-idlab/tsflex" -> "predict-idlab/plotly-resampler" ["e"=1]
"predict-idlab/tsflex" -> "dmbee/seglearn" ["e"=1]
"predict-idlab/tsflex" -> "predict-idlab/tsdownsample"
"predict-idlab/tsflex" -> "raphaelvallat/antropy" ["e"=1]
"predict-idlab/tsflex" -> "cerlymarco/tspiral"
"predict-idlab/tsflex" -> "getml/getml-community"
"predict-idlab/tsflex" -> "AutoViML/featurewiz"
"predict-idlab/tsflex" -> "Nixtla/mlforecast"
"predict-idlab/tsflex" -> "jvdd/argminmax"
"predict-idlab/tsflex" -> "cod3licious/autofeat"
"predict-idlab/tsflex" -> "winedarksea/AutoTS"
"rh12503/triangula" -> "josepholiveira/podcastr"
"rh12503/triangula" -> "esimov/triangle" ["e"=1]
"rh12503/triangula" -> "ml-tooling/opyrator"
"rh12503/triangula" -> "jdah/tetris-os" ["e"=1]
"rh12503/triangula" -> "openkraken/kraken" ["e"=1]
"rh12503/triangula" -> "microsoft/wslg" ["e"=1]
"rh12503/triangula" -> "nextapps-de/winbox" ["e"=1]
"rh12503/triangula" -> "openvinotoolkit/openvino_notebooks" ["e"=1]
"rh12503/triangula" -> "charmbracelet/lipgloss" ["e"=1]
"rh12503/triangula" -> "vijishmadhavan/ArtLine" ["e"=1]
"rh12503/triangula" -> "jdxyw/generativeart" ["e"=1]
"rh12503/triangula" -> "climech/grit" ["e"=1]
"rh12503/triangula" -> "fogleman/primitive" ["e"=1]
"rh12503/triangula" -> "marceloprates/prettymaps" ["e"=1]
"rh12503/triangula" -> "bndw/wifi-card" ["e"=1]
"salesforce/Merlion" -> "facebookresearch/Kats"
"salesforce/Merlion" -> "unit8co/darts"
"salesforce/Merlion" -> "uber/orbit"
"salesforce/Merlion" -> "awslabs/gluonts"
"salesforce/Merlion" -> "Nixtla/statsforecast"
"salesforce/Merlion" -> "ourownstory/neural_prophet"
"salesforce/Merlion" -> "sktime/sktime"
"salesforce/Merlion" -> "linkedin/greykite"
"salesforce/Merlion" -> "timeseriesAI/tsai"
"salesforce/Merlion" -> "sktime/pytorch-forecasting"
"salesforce/Merlion" -> "Nixtla/neuralforecast"
"salesforce/Merlion" -> "TDAmeritrade/stumpy"
"salesforce/Merlion" -> "blue-yonder/tsfresh"
"salesforce/Merlion" -> "winedarksea/AutoTS"
"salesforce/Merlion" -> "online-ml/river"
"optuna/optuna-dashboard" -> "optuna/optuna-examples"
"optuna/optuna-dashboard" -> "optuna/kurobako"
"optuna/optuna-dashboard" -> "optuna/optunahub"
"optuna/optuna-dashboard" -> "optuna/optuna-integration"
"optuna/optuna-dashboard" -> "optuna/optuna"
"optuna/optuna-dashboard" -> "CyberAgentAILab/cmaes"
"optuna/optuna-dashboard" -> "optuna/optunahub-registry"
"optuna/optuna-dashboard" -> "c-bata/goptuna"
"optuna/optuna-dashboard" -> "CyberAgentAILab/minituna"
"optuna/optuna-dashboard" -> "pfnet-research/xfeat" ["e"=1]
"optuna/optuna-dashboard" -> "pfnet/pytorch-pfn-extras" ["e"=1]
"optuna/optuna-dashboard" -> "Ekeany/Boruta-Shap"
"optuna/optuna-dashboard" -> "himkt/allennlp-optuna"
"cerlymarco/shap-hypetune" -> "Ekeany/Boruta-Shap"
"cerlymarco/shap-hypetune" -> "AutoViML/featurewiz"
"cerlymarco/shap-hypetune" -> "predict-idlab/powershap"
"cerlymarco/shap-hypetune" -> "linkedin/FastTreeSHAP"
"cerlymarco/shap-hypetune" -> "cerlymarco/tspiral"
"cerlymarco/shap-hypetune" -> "StatMixedML/LightGBMLSS"
"cerlymarco/shap-hypetune" -> "StatMixedML/XGBoostLSS"
"cerlymarco/shap-hypetune" -> "cod3licious/autofeat"
"cerlymarco/shap-hypetune" -> "ThomasBury/arfs"
"cerlymarco/shap-hypetune" -> "feature-engine/feature_engine"
"cerlymarco/shap-hypetune" -> "scikit-learn-contrib/boruta_py"
"cerlymarco/shap-hypetune" -> "AutoViML/Auto_ViML"
"cerlymarco/shap-hypetune" -> "scikit-learn-contrib/MAPIE"
"cerlymarco/shap-hypetune" -> "smazzanti/mrmr"
"cerlymarco/shap-hypetune" -> "csinva/imodels"
"linkedin/greykite" -> "uber/orbit"
"linkedin/greykite" -> "facebookresearch/Kats"
"linkedin/greykite" -> "ourownstory/neural_prophet"
"linkedin/greykite" -> "salesforce/Merlion"
"linkedin/greykite" -> "winedarksea/AutoTS"
"linkedin/greykite" -> "TDAmeritrade/stumpy"
"linkedin/greykite" -> "Nixtla/statsforecast"
"linkedin/greykite" -> "alkaline-ml/pmdarima"
"linkedin/greykite" -> "unit8co/darts"
"linkedin/greykite" -> "zillow/luminaire" ["e"=1]
"linkedin/greykite" -> "tslearn-team/tslearn"
"linkedin/greykite" -> "sktime/sktime"
"linkedin/greykite" -> "Nixtla/mlforecast"
"linkedin/greykite" -> "awslabs/gluonts"
"linkedin/greykite" -> "AutoViML/Auto_TS"
"msaroufim/ml-design-patterns" -> "tuvovan/ml_in_production"
"msaroufim/ml-design-patterns" -> "eugeneyan/applyingml"
"lvdmaaten/bhtsne" -> "DmitryUlyanov/Multicore-TSNE"
"lvdmaaten/bhtsne" -> "lferry007/LargeVis"
"lvdmaaten/bhtsne" -> "danielfrg/tsne" ["e"=1]
"lvdmaaten/bhtsne" -> "KlugerLab/FIt-SNE" ["e"=1]
"lvdmaaten/bhtsne" -> "jkrijthe/Rtsne"
"lvdmaaten/bhtsne" -> "karpathy/tsnejs" ["e"=1]
"lvdmaaten/bhtsne" -> "elbamos/largeVis"
"lvdmaaten/bhtsne" -> "CannyLab/tsne-cuda"
"lvdmaaten/bhtsne" -> "pavlin-policar/openTSNE"
"lvdmaaten/bhtsne" -> "dominiek/python-bhtsne"
"lvdmaaten/bhtsne" -> "kylemcdonald/Parametric-t-SNE"
"lvdmaaten/bhtsne" -> "Lasagne/Lasagne" ["e"=1]
"lvdmaaten/bhtsne" -> "gcr/torch-residual-networks" ["e"=1]
"lvdmaaten/bhtsne" -> "ethereon/netscope" ["e"=1]
"terrytangyuan/distributed-ml-patterns" -> "terrytangyuan/awesome-kubeflow"
"bodywork-ml/bodywork-core" -> "fuzzylabs/awesome-open-mlops"
"bodywork-ml/bodywork-core" -> "operatorai/modelstore"
"bodywork-ml/bodywork-core" -> "bodywork-ml/bodywork-ml-pipeline-project"
"bodywork-ml/bodywork-core" -> "dataqa/nlp-labelling"
"bodywork-ml/bodywork-core" -> "datarevenue-berlin/OpenMLOps"
"bodywork-ml/bodywork-core" -> "jeremyjordan/ml-monitoring"
"AutoViML/deep_autoviml" -> "AutoViML/AutoViML"
"rafiqhasan/auto-tensorflow" -> "AutoViML/deep_autoviml"
"leondgarse/keras_cv_attention_models" -> "martinsbruveris/tensorflow-image-models"
"leondgarse/keras_cv_attention_models" -> "rishigami/Swin-Transformer-TF"
"leondgarse/keras_cv_attention_models" -> "keras-team/keras-cv"
"leondgarse/keras_cv_attention_models" -> "faustomorales/vit-keras"
"leondgarse/keras_cv_attention_models" -> "taki0112/vit-tensorflow"
"leondgarse/keras_cv_attention_models" -> "leondgarse/keras_efficientnet_v2"
"leondgarse/keras_cv_attention_models" -> "yingkaisha/keras-unet-collection" ["e"=1]
"leondgarse/keras_cv_attention_models" -> "sayakpaul/ConvNeXt-TF"
"leondgarse/keras_cv_attention_models" -> "Burf/TFDetection"
"leondgarse/keras_cv_attention_models" -> "ypeleg/nfnets-keras"
"leondgarse/keras_cv_attention_models" -> "keras-team/keras-core" ["e"=1]
"leondgarse/keras_cv_attention_models" -> "ckyrkou/Keras_FLOP_Estimator"
"leondgarse/keras_cv_attention_models" -> "VcampSoldiers/Swin-Transformer-Tensorflow"
"leondgarse/keras_cv_attention_models" -> "ZFTurbo/classification_models_3D"
"leondgarse/keras_cv_attention_models" -> "keras-team/keras-hub"
"plotly/datasets" -> "selva86/datasets"
"plotly/datasets" -> "plotly/jupyter-dash" ["e"=1]
"plotly/datasets" -> "xLaszlo/datascience-fails"
"plotly/datasets" -> "datasciencedojo/datasets"
"automl/RoBO" -> "automl/pybnn"
"automl/RoBO" -> "automl/SMAC3"
"automl/RoBO" -> "automl/HpBandSter"
"automl/RoBO" -> "automl/HPOlib1.5"
"automl/RoBO" -> "wujian16/Cornell-MOE"
"automl/RoBO" -> "HIPS/Spearmint"
"automl/RoBO" -> "automl/fanova"
"automl/RoBO" -> "automl/autoweka"
"automl/RoBO" -> "SheffieldML/GPyOpt"
"automl/RoBO" -> "automl/pylearningcurvepredictor"
"automl/RoBO" -> "automl/ConfigSpace"
"automl/RoBO" -> "uber-research/TuRBO"
"automl/RoBO" -> "automl/BOAH"
"automl/RoBO" -> "GPflow/GPflowOpt"
"automl/RoBO" -> "JasperSnoek/spearmint"
"microprediction/humpday" -> "microprediction/optimizer-elo-ratings"
"marcopeix/TimeSeriesForecastingInPython" -> "PacktPublishing/Time-Series-Analysis-with-Python-Cookbook"
"marcopeix/TimeSeriesForecastingInPython" -> "marcopeix/AppliedTimeSeriesForecastingInPython"
"marcopeix/TimeSeriesForecastingInPython" -> "PacktPublishing/Modern-Time-Series-Forecasting-with-Python"
"marcopeix/TimeSeriesForecastingInPython" -> "jiwidi/time-series-forecasting-with-python" ["e"=1]
"marcopeix/TimeSeriesForecastingInPython" -> "trainindata/feature-engineering-for-time-series-forecasting"
"marcopeix/TimeSeriesForecastingInPython" -> "marcopeix/time-series-analysis"
"marcopeix/TimeSeriesForecastingInPython" -> "FrancescaLazzeri/Machine-Learning-for-Time-Series-Forecasting"
"marcopeix/TimeSeriesForecastingInPython" -> "marcopeix/AppliedTimeSeriesAnalysisWithPython"
"marcopeix/TimeSeriesForecastingInPython" -> "sinanuozdemir/feature_engineering_bookcamp"
"marcopeix/TimeSeriesForecastingInPython" -> "PacktPublishing/Machine-Learning-for-Time-Series-with-Python"
"marcopeix/TimeSeriesForecastingInPython" -> "skforecast/skforecast"
"marcopeix/TimeSeriesForecastingInPython" -> "PacktPublishing/Forecasting-Time-Series-Data-with-Facebook-Prophet"
"FrancescaLazzeri/Machine-Learning-for-Time-Series-Forecasting" -> "FrancescaLazzeri/AutoML-for-Timeseries-Forecasting-Berlin-MeetUp"
"bayesoptbook/bayesoptbook.github.io" -> "pytorch/botorch"
"bayesoptbook/bayesoptbook.github.io" -> "KrisNguyen135/bayesian-optimization-in-action"
"bayesoptbook/bayesoptbook.github.io" -> "facebookresearch/bo_pr"
"bayesoptbook/bayesoptbook.github.io" -> "dfm/tinygp" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "JaxGaussianProcesses/GPJax" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "normal-computing/posteriors" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "cornellius-gp/gpytorch"
"bayesoptbook/bayesoptbook.github.io" -> "GPflow/GPflow"
"bayesoptbook/bayesoptbook.github.io" -> "krasserm/bayesian-machine-learning"
"bayesoptbook/bayesoptbook.github.io" -> "probml/dynamax" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "bayesiains/nflows" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "BayesianModelingandComputationInPython/BookCode_Edition1" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "secondmind-labs/trieste"
"bayesoptbook/bayesoptbook.github.io" -> "storopoli/Bayesian-Statistics" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "hvarfner/vanilla_bo_in_highdim"
"deepfindr/xai-series" -> "PacktPublishing/Hands-On-Explainable-AI-XAI-with-Python"
"optuna/optuna-examples" -> "optuna/optuna-dashboard"
"optuna/optuna-examples" -> "optuna/optuna"
"optuna/optuna-examples" -> "optuna/optuna-integration"
"optuna/optuna-examples" -> "feature-engine/feature_engine"
"optuna/optuna-examples" -> "dreamquark-ai/tabnet" ["e"=1]
"optuna/optuna-examples" -> "Ekeany/Boruta-Shap"
"optuna/optuna-examples" -> "CyberAgentAILab/cmaes"
"optuna/optuna-examples" -> "optuna/optunahub"
"optuna/optuna-examples" -> "Nixtla/tsfeatures"
"optuna/optuna-examples" -> "lucidrains/tab-transformer-pytorch" ["e"=1]
"optuna/optuna-examples" -> "scikit-learn-contrib/boruta_py"
"tensorflow/tfx-addons" -> "tensorflow/tfx-bsl"
"twmeggs/anfis" -> "jfpower/anfis-pytorch"
"twmeggs/anfis" -> "tiagoCuervo/TensorANFIS"
"twmeggs/anfis" -> "gabrielegilardi/ANFIS"
"twmeggs/anfis" -> "Apress/deep-neuro-fuzzy-systems-w-python"
"twmeggs/anfis" -> "gregorLen/AnfisTensorflow2.0"
"twmeggs/anfis" -> "gregorLen/S-ANFIS-PyTorch"
"twmeggs/anfis" -> "balcilar/Anfis-from-scratch"
"twmeggs/anfis" -> "scikit-fuzzy/scikit-fuzzy"
"twmeggs/anfis" -> "Tim55667757/FuzzyClassificator"
"twmeggs/anfis" -> "ameybarapatre/ANFIS"
"motiwari/BanditPAM" -> "csinva/imodels"
"cerlymarco/linear-tree" -> "StatMixedML/LightGBMLSS"
"cerlymarco/linear-tree" -> "GBDT-PL/GBDT-PL" ["e"=1]
"cerlymarco/linear-tree" -> "carlomazzaferro/scikit-hts"
"cerlymarco/linear-tree" -> "StatMixedML/XGBoostLSS"
"cerlymarco/linear-tree" -> "cerlymarco/tspiral"
"cerlymarco/linear-tree" -> "AutoViML/featurewiz"
"cerlymarco/linear-tree" -> "fabsig/GPBoost"
"cerlymarco/linear-tree" -> "Ekeany/Boruta-Shap"
"cerlymarco/linear-tree" -> "Nixtla/tsfeatures"
"cerlymarco/linear-tree" -> "cod3licious/autofeat"
"cerlymarco/linear-tree" -> "cerlymarco/tsmoothie"
"cerlymarco/linear-tree" -> "tblume1992/ThymeBoost"
"cerlymarco/linear-tree" -> "AutoViML/Auto_ViML"
"cerlymarco/linear-tree" -> "cerlymarco/shap-hypetune"
"cerlymarco/linear-tree" -> "microprediction/timemachines"
"scikit-learn-contrib/MAPIE" -> "valeman/awesome-conformal-prediction" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "henrikbostrom/crepes" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "awslabs/fortuna" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "scikit-learn-contrib/qolmat"
"scikit-learn-contrib/MAPIE" -> "aangelopoulos/conformal-prediction" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "koaning/scikit-lego"
"scikit-learn-contrib/MAPIE" -> "feature-engine/feature_engine"
"scikit-learn-contrib/MAPIE" -> "deel-ai/puncc" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "ml-stat-Sustech/TorchCP" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "stanfordmlgroup/ngboost"
"scikit-learn-contrib/MAPIE" -> "pymc-labs/CausalPy" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "functime-org/functime" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "Nixtla/statsforecast"
"scikit-learn-contrib/MAPIE" -> "zillow/quantile-forest"
"scikit-learn-contrib/MAPIE" -> "csinva/imodels"
"secondmind-labs/trieste" -> "secondmind-labs/GPflux"
"secondmind-labs/trieste" -> "GPflow/GPflowOpt"
"secondmind-labs/trieste" -> "google-research/hyperbo"
"secondmind-labs/trieste" -> "JaxGaussianProcesses/GPJax" ["e"=1]
"secondmind-labs/trieste" -> "uber-research/TuRBO"
"secondmind-labs/trieste" -> "yiminzme/awesome-bayesian-optimization"
"secondmind-labs/trieste" -> "secondmind-labs/markovflow"
"secondmind-labs/trieste" -> "j-wilson/GPflowSampling"
"machine-learning-exchange/mlx" -> "machine-learning-exchange/katalog"
"machine-learning-exchange/mlx" -> "kubeflow/kfp-tekton"
"machine-learning-exchange/mlx" -> "kserve/kserve-pending"
"machine-learning-exchange/mlx" -> "kserve/modelmesh-serving"
"machine-learning-exchange/mlx" -> "IBM/KubeflowDojo"
"kserve/website" -> "kserve/kserve-pending"
"kserve/website" -> "kserve/models-web-app"
"kserve/website" -> "kserve/community"
"kserve/website" -> "kserve/modelmesh-serving"
"kserve/website" -> "kserve/open-inference-protocol"
"kserve/website" -> "kserve/modelmesh-runtime-adapter"
"kserve/modelmesh-serving" -> "kserve/modelmesh"
"kserve/modelmesh-serving" -> "kserve/website"
"kserve/modelmesh-serving" -> "kserve/modelmesh-runtime-adapter"
"kserve/modelmesh-serving" -> "kubeflow/model-registry"
"kserve/modelmesh-serving" -> "kserve/models-web-app"
"kserve/kserve-pending" -> "kserve/modelmesh-runtime-adapter"
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "amanchadha/coursera-machine-learning-engineering-for-prod-mlops-specialization" ["e"=1]
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "GoogleCloudPlatform/mlops-on-gcp" ["e"=1]
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "FourthBrain/software-dev-for-mlops-101"
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "visenger/awesome-mlops" ["e"=1]
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "https-deeplearning-ai/tensorflow-1-public"
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "https-deeplearning-ai/tensorflow-2-public"
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "GoogleCloudPlatform/ml-design-patterns" ["e"=1]
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "GokuMohandas/mlops-course" ["e"=1]
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "kennethleungty/MLOps-Specialization-Notes"
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "evidentlyai/evidently"
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "SauceCat/PDPbox"
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "chiphuyen/ml-interviews-book" ["e"=1]
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "https-deeplearning-ai/GANs-Public"
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "lmoroney/dlaicourse"
"https-deeplearning-ai/machine-learning-engineering-for-production-public" -> "GoogleCloudPlatform/training-data-analyst" ["e"=1]
"PacktPublishing/Machine-Learning-for-Time-Series-with-Python" -> "PacktPublishing/Time-Series-Analysis-with-Python-Cookbook"
"PacktPublishing/Machine-Learning-for-Time-Series-with-Python" -> "PacktPublishing/Modern-Time-Series-Forecasting-with-Python"
"trainindata/feature-engineering-for-time-series-forecasting" -> "trainindata/forecasting-with-machine-learning"
"trainindata/feature-engineering-for-time-series-forecasting" -> "solegalli/hyperparameter-optimization"
"trainindata/feature-engineering-for-time-series-forecasting" -> "trainindata/feature-engineering-for-machine-learning"
"trainindata/feature-engineering-for-time-series-forecasting" -> "solegalli/feature-engineering-for-machine-learning"
"trainindata/feature-engineering-for-time-series-forecasting" -> "solegalli/feature-selection-for-machine-learning"
"trainindata/feature-engineering-for-time-series-forecasting" -> "solegalli/machine-learning-imbalanced-data"
"trainindata/feature-engineering-for-time-series-forecasting" -> "feature-engine/feature-engine-examples"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "PacktPublishing/Time-Series-Analysis-with-Python-Cookbook"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "PacktPublishing/Modern-Time-Series-Forecasting-with-Python-2E"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "PacktPublishing/Machine-Learning-for-Time-Series-with-Python"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "marcopeix/TimeSeriesForecastingInPython"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "trainindata/feature-engineering-for-time-series-forecasting"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "Nixtla/mlforecast"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "PacktPublishing/Applied-Machine-Learning-Explainability-Techniques"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "Nixtla/hierarchicalforecast"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "zgana/fpp3-python-readalong"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "PacktPublishing/Deep-Learning-for-Time-Series-Data-Cookbook"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "AutoViML/Auto_TS"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "Nixtla/statsforecast"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "TimeSynth/TimeSynth" ["e"=1]
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "PacktPublishing/Python-for-Finance-Cookbook-2E"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" -> "skforecast/skforecast"
"hj-n/zadu" -> "hj-n/steadiness-cohesiveness"
"mikekeith52/scalecast" -> "mikekeith52/scalecast-examples"
"mikekeith52/scalecast" -> "Nixtla/mlforecast"
"mikekeith52/scalecast" -> "cerlymarco/tspiral"
"mikekeith52/scalecast" -> "Nixtla/tsfeatures"
"mikekeith52/scalecast" -> "superlinear-ai/conformal-tights" ["e"=1]
"mikekeith52/scalecast" -> "Nixtla/hierarchicalforecast"
"mikekeith52/scalecast" -> "tblume1992/ThymeBoost"
"mikekeith52/scalecast" -> "winedarksea/AutoTS"
"mikekeith52/scalecast" -> "predict-idlab/tsflex"
"mikekeith52/scalecast" -> "AbdullahO/mSSA"
"solegalli/machine-learning-imbalanced-data" -> "solegalli/hyperparameter-optimization"
"solegalli/machine-learning-imbalanced-data" -> "solegalli/feature-selection-for-machine-learning"
"solegalli/machine-learning-imbalanced-data" -> "solegalli/feature-engineering-for-machine-learning"
"solegalli/machine-learning-imbalanced-data" -> "solegalli/deploying-machine-learning-models"
"solegalli/machine-learning-imbalanced-data" -> "solegalli/Python-Feature-Engineering-Cookbook-First-Edition"
"solegalli/machine-learning-imbalanced-data" -> "solegalli/machine-learning-interpretability"
"socialfoundations/folktables" -> "mbilalzafar/fair-classification"
"socialfoundations/folktables" -> "mlfoundations/tableshift" ["e"=1]
"socialfoundations/folktables" -> "propublica/compas-analysis"
"socialfoundations/folktables" -> "algofairness/fairness-comparison"
"Western-OC2-Lab/OASW-Concept-Drift-Detection-and-Adaptation" -> "Western-OC2-Lab/MSANA-Online-Data-Stream-Analytics-And-Concept-Drift-Adaptation"
"eugeneyan/ml-design-docs" -> "eugeneyan/testing-ml"
"eugeneyan/ml-design-docs" -> "eugeneyan/applyingml"
"eugeneyan/ml-design-docs" -> "eugeneyan/papermill-mlflow"
"eugeneyan/ml-design-docs" -> "eugeneyan/python-collab-template"
"eugeneyan/ml-design-docs" -> "eugeneyan/1-on-1s"
"eugeneyan/ml-design-docs" -> "eugeneyan/ml-surveys" ["e"=1]
"eugeneyan/ml-design-docs" -> "ttzt/catalog_of_requirements_for_ai_products"
"eugeneyan/ml-design-docs" -> "msaroufim/ml-design-patterns"
"eugeneyan/ml-design-docs" -> "IrinaGoloshchapova/ml_system_design_doc_ru" ["e"=1]
"eugeneyan/ml-design-docs" -> "xLaszlo/datascience-fails"
"eugeneyan/ml-design-docs" -> "eugeneyan/llm-paper-notes"
"Code-Pop/validating-vue3-forms" -> "Code-Pop/from-vuex-to-pinia"
"Code-Pop/validating-vue3-forms" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/validating-vue3-forms" -> "Code-Pop/graphql-client"
"Code-Pop/validating-vue3-forms" -> "Code-Pop/Vuex_Fundamentals"
"kjordahl/SciPy-Tutorial-2015" -> "carsonfarmer/python_geospatial"
"kserve/modelmesh" -> "kserve/modelmesh-serving"
"aporia-ai/mlplatform-workshop" -> "aporia-ai/mlops.toys"
"aporia-ai/mlplatform-workshop" -> "aporia-ai/inferencedb"
"aporia-ai/mlplatform-workshop" -> "aporia-ai/kubesurvival"
"aporia-ai/mlplatform-workshop" -> "aporia-ai/dmatrix2np"
"aporia-ai/mlplatform-workshop" -> "datarevenue-berlin/OpenMLOps"
"aporia-ai/mlplatform-workshop" -> "aporia-ai/mlnotify"
"aporia-ai/mlplatform-workshop" -> "jeremyjordan/ml-monitoring"
"aporia-ai/mlplatform-workshop" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"aporia-ai/mlplatform-workshop" -> "aniruddhachoudhury/mlopsworld"
"aporia-ai/mlplatform-workshop" -> "dmatrix/tmls-workshop"
"aporia-ai/mlplatform-workshop" -> "igaloly/vue-preloaders"
"carla-recourse/CARLA" -> "wangyongjie-ntu/CFAI"
"carla-recourse/CARLA" -> "charmlab/mace"
"carla-recourse/CARLA" -> "ustunb/actionable-recourse"
"carla-recourse/CARLA" -> "sharmapulkit/FACE-Feasible-Actionable-Counterfactual-Explanations"
"carla-recourse/CARLA" -> "interpretml/DiCE"
"carla-recourse/CARLA" -> "divyat09/cf-feasibility"
"carla-recourse/CARLA" -> "salesforce/OmniXAI"
"sofienkaabar/the-book-of-trading-strategies" -> "sofienkaabar/trend-following-strategies"
"sofienkaabar/the-book-of-trading-strategies" -> "sofienkaabar/contrarian-trading-strategies"
"sofienkaabar/the-book-of-trading-strategies" -> "sofienkaabar/mastering-financial-pattern-recognition"
"logicalclocks/rondb" -> "logicalclocks/feature-store-api"
"logicalclocks/rondb" -> "logicalclocks/hopsworks"
"logicalclocks/rondb" -> "hopshadoop/hops"
"logicalclocks/rondb" -> "featurestoreorg/featurestore-benchmarks"
"logicalclocks/rondb" -> "logicalclocks/hops-util-py"
"logicalclocks/rondb" -> "cda-group/arcon"
"logicalclocks/rondb" -> "sfu-dis/mosaicdb" ["e"=1]
"logicalclocks/rondb" -> "kohler/masstree-beta" ["e"=1]
"logicalclocks/rondb" -> "Qihoo360/blackwidow"
"logicalclocks/rondb" -> "vmware/splinterdb" ["e"=1]
"kennethleungty/MLOps-Specialization-Notes" -> "amanchadha/coursera-machine-learning-engineering-for-prod-mlops-specialization" ["e"=1]
"kennethleungty/MLOps-Specialization-Notes" -> "https-deeplearning-ai/machine-learning-engineering-for-production-public"
"kennethleungty/MLOps-Specialization-Notes" -> "mattborghi/mlops-specialization"
"hadley/bigvis" -> "hadley/r2d3"
"Evolutionary-Intelligence/DistributedEvolutionaryComputation" -> "Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP"
"Evolutionary-Intelligence/DistributedEvolutionaryComputation" -> "Evolutionary-Intelligence/pypop"
"Evolutionary-Intelligence/DistributedEvolutionaryComputation" -> "Evolutionary-Intelligence/dpop7"
"Evolutionary-Intelligence/pypop" -> "Evolutionary-Intelligence/DistributedEvolutionaryComputation"
"Evolutionary-Intelligence/pypop" -> "Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP"
"Evolutionary-Intelligence/pypop" -> "Evolutionary-Intelligence/dpop7"
"Evolutionary-Intelligence/pypop" -> "FeiLiu36/EoH" ["e"=1]
"Evolutionary-Intelligence/pypop" -> "numbbo/coco"
"Evolutionary-Intelligence/pypop" -> "PR-Ryan/DEMO"
"Evolutionary-Intelligence/pypop" -> "MetaEvo/MetaBox"
"Evolutionary-Intelligence/pypop" -> "EMI-Group/evox" ["e"=1]
"Evolutionary-Intelligence/pypop" -> "FeiLiu36/LLM4Opt" ["e"=1]
"Evolutionary-Intelligence/pypop" -> "RobertTLange/evosax" ["e"=1]
"DagsHub/fds" -> "DagsHub/client"
"DagsHub/fds" -> "jenkinsci/dagshub-branch-source-plugin"
"DagsHub/fds" -> "permitio/OPToggles"
"DagsHub/fds" -> "zincware/ZnTrack"
"ebhy/budgetml" -> "zenml-io/zenml"
"ebhy/budgetml" -> "globalaihub/python-education-v2" ["e"=1]
"ebhy/budgetml" -> "codeedu/imersao-fullstack-fullcycle" ["e"=1]
"ebhy/budgetml" -> "allanf181/FuiVazado" ["e"=1]
"ebhy/budgetml" -> "ml-tooling/opyrator"
"ebhy/budgetml" -> "jalammar/ecco" ["e"=1]
"ebhy/budgetml" -> "cortexlabs/cortex"
"ebhy/budgetml" -> "NVlabs/stylegan2-ada-pytorch" ["e"=1]
"ebhy/budgetml" -> "blasty/CVE-2021-3156" ["e"=1]
"ebhy/budgetml" -> "achillesrasquinha/pipupgrade" ["e"=1]
"ebhy/budgetml" -> "iterative/cml"
"ebhy/budgetml" -> "microsoft/hummingbird"
"ebhy/budgetml" -> "ivan-bilan/The-NLP-Pandect" ["e"=1]
"ebhy/budgetml" -> "replicate/keepsake"
"ebhy/budgetml" -> "ploomber/ploomber"
"ThomasBury/arfs" -> "ing-bank/probatus"
"jeremyjordan/ml-monitoring" -> "boxkite-ml/boxkite"
"cvxgrp/pymde" -> "davisidarta/topometry"
"cvxgrp/pymde" -> "YingfanWang/PaCMAP"
"cvxgrp/pymde" -> "lmcinnes/pynndescent"
"cvxgrp/pymde" -> "wilsonjr/humap"
"cvxgrp/pymde" -> "timsainb/ParametricUMAP_paper"
"cvxgrp/pymde" -> "theislab/scib" ["e"=1]
"cvxgrp/pymde" -> "hyungkwonko/umato"
"cvxgrp/pymde" -> "google-research/ott" ["e"=1]
"cvxgrp/pymde" -> "scverse/pertpy" ["e"=1]
"cvxgrp/pymde" -> "emdann/milopy" ["e"=1]
"cvxgrp/pymde" -> "simslab/scHPF"
"eugeneyan/applyingml" -> "eugeneyan/ml-design-docs"
"aporia-ai/mlnotify" -> "aporia-ai/dmatrix2np"
"aporia-ai/mlnotify" -> "aporia-ai/mlops.toys"
"aporia-ai/mlnotify" -> "igaloly/vue-preloaders"
"aporia-ai/mlnotify" -> "aporia-ai/kubesurvival"
"aporia-ai/mlnotify" -> "aporia-ai/inferencedb"
"leondgarse/keras_efficientnet_v2" -> "seermer/TensorFlow2-EfficientNetV2"
"leondgarse/keras_efficientnet_v2" -> "xhluca/keras-noisy-student"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "brianrho/FPM"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "sparkfun/Fingerprint_Scanner-TTL"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "adafruit/Adafruit_CircuitPython_Fingerprint"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "bastianraschke/pyfingerprint"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "hanifizzudinrahman/Module-Fingerprint-DY50-FPM10A"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "adafruit/Adafruit-PN532" ["e"=1]
"HazyResearch/data-centric-ai" -> "daochenzha/data-centric-AI"
"HazyResearch/data-centric-ai" -> "Data-Centric-AI-Community/awesome-data-centric-ai"
"HazyResearch/data-centric-ai" -> "data-centric-ai/dcbench"
"HazyResearch/data-centric-ai" -> "HazyResearch/meerkat" ["e"=1]
"HazyResearch/data-centric-ai" -> "snorkel-team/snorkel" ["e"=1]
"HazyResearch/data-centric-ai" -> "NorskRegnesentral/skweak" ["e"=1]
"HazyResearch/data-centric-ai" -> "HazyResearch/evaporate" ["e"=1]
"HazyResearch/data-centric-ai" -> "Renumics/awesome-open-data-centric-ai"
"HazyResearch/data-centric-ai" -> "subeeshvasu/Awesome-Learning-with-Label-Noise" ["e"=1]
"HazyResearch/data-centric-ai" -> "robustness-gym/robustness-gym" ["e"=1]
"HazyResearch/data-centric-ai" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"HazyResearch/data-centric-ai" -> "HazyResearch/flyingsquid" ["e"=1]
"HazyResearch/data-centric-ai" -> "dcai-course/dcai-lab"
"HazyResearch/data-centric-ai" -> "argilla-io/argilla" ["e"=1]
"HazyResearch/data-centric-ai" -> "google/uncertainty-baselines" ["e"=1]
"IBM/UQ360" -> "Trusted-AI/AIX360"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/post-modern-stack"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "RecList/reclist"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/recs-at-resonable-scale"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "datarevenue-berlin/OpenMLOps"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/paas-data-ingestion"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "fuzzylabs/awesome-open-mlops"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/FREE_7773"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/no-ops-machine-learning"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "aporia-ai/mlplatform-workshop"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "the-full-stack/fsdl-text-recognizer-project" ["e"=1]
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "iusztinpaul/energy-forecasting" ["e"=1]
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "fugue-project/fugue" ["e"=1]
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "cdfoundation/sig-mlops" ["e"=1]
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "NannyML/nannyml"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/MLSys-NYU-2022"
"faustomorales/vit-keras" -> "tuvovan/Vision_Transformer_Keras"
"faustomorales/vit-keras" -> "rishigami/Swin-Transformer-TF"
"faustomorales/vit-keras" -> "leondgarse/keras_cv_attention_models"
"faustomorales/vit-keras" -> "ashishpatel26/Vision-Transformer-Keras-Tensorflow-Pytorch-Examples"
"faustomorales/vit-keras" -> "emla2805/vision-transformer"
"faustomorales/vit-keras" -> "yingkaisha/keras-vision-transformer"
"faustomorales/vit-keras" -> "taki0112/vit-tensorflow"
"faustomorales/vit-keras" -> "kamalkraj/Vision-Transformer"
"faustomorales/vit-keras" -> "martinsbruveris/tensorflow-image-models"
"faustomorales/vit-keras" -> "ZFTurbo/classification_models_3D"
"elephaint/pgbm" -> "StatMixedML/LightGBMLSS"
"the-AjK/GT-511C3" -> "QuickCorp/pyGT511C3"
"Yoast/YoastSEO.js" -> "Yoast/javascript"
"Yoast/YoastSEO.js" -> "arslanmughal99/phisher"
"Yoast/YoastSEO.js" -> "robber5/wifi-killer"
"Yoast/YoastSEO.js" -> "keras-team/keras-preprocessing"
"Yoast/YoastSEO.js" -> "brianrho/FPM"
"Yoast/YoastSEO.js" -> "ericandrewlewis/wp-media-javascript-guide"
"automl/neps" -> "automl/ifBO"
"automl/neps" -> "automl/DeepCAVE"
"automl/neps" -> "automl/jahs_bench_201" ["e"=1]
"automl/neps" -> "automl/lcpfn"
"ing-bank/probatus" -> "ing-bank/skorecard"
"ing-bank/probatus" -> "ThomasBury/arfs"
"ydataai/ydata-quality" -> "ydataai/academy"
"ydataai/ydata-quality" -> "Data-Centric-AI-Community/awesome-data-centric-ai"
"ydataai/ydata-quality" -> "ydataai/ydata-synthetic" ["e"=1]
"smazzanti/mrmr" -> "Ekeany/Boruta-Shap"
"smazzanti/mrmr" -> "danielhomola/mifs"
"smazzanti/mrmr" -> "AutoViML/featurewiz"
"smazzanti/mrmr" -> "cerlymarco/shap-hypetune"
"smazzanti/mrmr" -> "scikit-learn-contrib/MAPIE"
"smazzanti/mrmr" -> "scikit-learn-contrib/boruta_py"
"smazzanti/mrmr" -> "feature-engine/feature_engine"
"smazzanti/mrmr" -> "predict-idlab/powershap"
"smazzanti/mrmr" -> "ctlab/ITMO_FS"
"smazzanti/mrmr" -> "StatMixedML/XGBoostLSS"
"smazzanti/mrmr" -> "ThomasBury/arfs"
"smazzanti/mrmr" -> "cerlymarco/tspiral"
"smazzanti/mrmr" -> "cod3licious/autofeat"
"smazzanti/mrmr" -> "fbrundu/pymrmr"
"smazzanti/mrmr" -> "AutoViML/Auto_ViML"
"CDonnerer/xgboost-distribution" -> "StatMixedML/LightGBMLSS"
"PacktPublishing/Time-Series-Analysis-with-Python-Cookbook" -> "PacktPublishing/Modern-Time-Series-Forecasting-with-Python"
"PacktPublishing/Time-Series-Analysis-with-Python-Cookbook" -> "PacktPublishing/Machine-Learning-for-Time-Series-with-Python"
"PacktPublishing/Time-Series-Analysis-with-Python-Cookbook" -> "trainindata/feature-engineering-for-time-series-forecasting"
"PacktPublishing/Time-Series-Analysis-with-Python-Cookbook" -> "marcopeix/TimeSeriesForecastingInPython"
"PacktPublishing/Time-Series-Analysis-with-Python-Cookbook" -> "PacktPublishing/Applied-Machine-Learning-Explainability-Techniques"
"PacktPublishing/Time-Series-Analysis-with-Python-Cookbook" -> "PacktPublishing/Time-Series-Analysis-with-Python-3.x"
"PacktPublishing/Time-Series-Analysis-with-Python-Cookbook" -> "PacktPublishing/Practical-Time-Series-Analysis" ["e"=1]
"salimamoukou/acv00" -> "salimamoukou/ACPI"
"deric/clustering-benchmark" -> "gagolews/clustering-benchmarks"
"VcampSoldiers/Swin-Transformer-Tensorflow" -> "rishigami/Swin-Transformer-TF"
"https-deeplearning-ai/tensorflow-3-public" -> "https-deeplearning-ai/tensorflow-2-public"
"https-deeplearning-ai/tensorflow-3-public" -> "https-deeplearning-ai/GANs-Public"
"rishigami/Swin-Transformer-TF" -> "VcampSoldiers/Swin-Transformer-Tensorflow"
"rishigami/Swin-Transformer-TF" -> "yingkaisha/keras-vision-transformer"
"rishigami/Swin-Transformer-TF" -> "leondgarse/keras_cv_attention_models"
"rishigami/Swin-Transformer-TF" -> "martinsbruveris/tensorflow-image-models"
"rishigami/Swin-Transformer-TF" -> "faustomorales/vit-keras"
"rishigami/Swin-Transformer-TF" -> "TymonXie/tymon" ["e"=1]
"rishigami/Swin-Transformer-TF" -> "leondgarse/keras_efficientnet_v2"
"rishigami/Swin-Transformer-TF" -> "bubbliiiing/yolox-tf2" ["e"=1]
"rishigami/Swin-Transformer-TF" -> "tsujuifu/pytorch_violet" ["e"=1]
"lasso-net/lassonet" -> "fabian-sp/lassonet"
"lasso-net/lassonet" -> "runopti/stg"
"lasso-net/lassonet" -> "yngvem/group-lasso"
"lasso-net/lassonet" -> "riken-aip/pyHSICLasso"
"MLBazaar/MLBlocks" -> "MLBazaar/MLPrimitives"
"MLBazaar/MLBlocks" -> "MLBazaar/BTB"
"MLBazaar/MLBlocks" -> "MLBazaar/AutoBazaar"
"MLBazaar/MLBlocks" -> "sintel-dev/Draco"
"MLBazaar/MLBlocks" -> "ballet/ballet"
"MLBazaar/MLBlocks" -> "MLBazaar/piex"
"data-centric-ai/dcbench" -> "HazyResearch/model-patching"
"neuefische/ds-meetups" -> "neuefische/ds-simple-plotly-dash-template"
"ing-bank/skorecard" -> "ing-bank/probatus"
"sebastianpinedaar/MMAML-TSR" -> "machinelearningnuremberg/DeepRankingEnsembles"
"sebastianpinedaar/MMAML-TSR" -> "machinelearningnuremberg/DeepPipe"
"sebastianpinedaar/MMAML-TSR" -> "JJASMINE22/MAML_LSTM"
"sebastianpinedaar/MMAML-TSR" -> "machinelearningnuremberg/FSBO"
"dc-sics/hopsworks" -> "hopshadoop/hops"
"dc-sics/hopsworks" -> "logicalclocks/feature-store-api"
"dc-sics/hopsworks" -> "logicalclocks/hopsworks-chef"
"dc-sics/hopsworks" -> "kompics/kompics"
"yingkaisha/keras-vision-transformer" -> "rishigami/Swin-Transformer-TF"
"yingkaisha/keras-vision-transformer" -> "yingkaisha/keras-unet-collection" ["e"=1]
"yingkaisha/keras-vision-transformer" -> "VcampSoldiers/Swin-Transformer-Tensorflow"
"wilsonjr/humap" -> "davisidarta/topometry"
"wilsonjr/humap" -> "wilsonjr/ClusterShapley"
"wilsonjr/humap" -> "hyungkwonko/umato"
"wilsonjr/humap" -> "hj-n/zadu"
"koaning/memo" -> "koaning/skedulord"
"koaning/memo" -> "koaning/tokenwiser"
"datarevenue-berlin/OpenMLOps" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"datarevenue-berlin/OpenMLOps" -> "fuzzylabs/awesome-open-mlops"
"datarevenue-berlin/OpenMLOps" -> "aporia-ai/mlplatform-workshop"
"datarevenue-berlin/OpenMLOps" -> "bodywork-ml/bodywork-core"
"datarevenue-berlin/OpenMLOps" -> "mlrun/mlrun"
"datarevenue-berlin/OpenMLOps" -> "zenml-io/mlstacks"
"datarevenue-berlin/OpenMLOps" -> "cdfoundation/sig-mlops" ["e"=1]
"datarevenue-berlin/OpenMLOps" -> "SeldonIO/seldon-core"
"datarevenue-berlin/OpenMLOps" -> "jmeisele/ml-ops"
"datarevenue-berlin/OpenMLOps" -> "iterative/cml"
"datarevenue-berlin/OpenMLOps" -> "Azure/mlops-v2" ["e"=1]
"datarevenue-berlin/OpenMLOps" -> "EthicalML/awesome-artificial-intelligence-regulation"
"datarevenue-berlin/OpenMLOps" -> "zenml-io/zenml"
"datarevenue-berlin/OpenMLOps" -> "operatorai/modelstore"
"datarevenue-berlin/OpenMLOps" -> "iterative/mlem"
"aporia-ai/kubesurvival" -> "aporia-ai/dmatrix2np"
"aporia-ai/kubesurvival" -> "igaloly/vue-preloaders"
"aporia-ai/kubesurvival" -> "aporia-ai/inferencedb"
"aporia-ai/kubesurvival" -> "aporia-ai/mlops.toys"
"Code-Pop/pwa-with-vue-3" -> "Code-Pop/graphql-client"
"Code-Pop/pwa-with-vue-3" -> "Code-Pop/graphql-server"
"Code-Pop/pwa-with-vue-3" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/pwa-with-vue-3" -> "Code-Pop/vue-3-typescript"
"clearml/clearml-serving" -> "clearml/clearml-server"
"clearml/clearml-serving" -> "clearml/clearml-session"
"clearml/clearml-serving" -> "clearml/clearml-web"
"clearml/clearml-serving" -> "clearml/clearml-agent"
"clearml/clearml-serving" -> "clearml/clearml-helm-charts"
"iterative/dvclive" -> "iterative/gto"
"iterative/dvclive" -> "iterative/scmrepo"
"iterative/dvclive" -> "gennaro-tedesco/nvim-dvc"
"solegalli/hyperparameter-optimization" -> "solegalli/machine-learning-imbalanced-data"
"solegalli/hyperparameter-optimization" -> "solegalli/feature-selection-for-machine-learning"
"solegalli/hyperparameter-optimization" -> "solegalli/feature-engineering-for-machine-learning"
"solegalli/hyperparameter-optimization" -> "solegalli/machine-learning-interpretability"
"solegalli/hyperparameter-optimization" -> "trainindata/feature-engineering-for-time-series-forecasting"
"neatlymitang/FRS_ML" -> "luuil/MLFSPS"
"tuvovan/Vision_Transformer_Keras" -> "kamalkraj/Vision-Transformer"
"tuvovan/Vision_Transformer_Keras" -> "faustomorales/vit-keras"
"tuvovan/Vision_Transformer_Keras" -> "emla2805/vision-transformer"
"dme65/pySOT" -> "SMTorg/smt" ["e"=1]
"dme65/pySOT" -> "uber-research/TuRBO"
"dme65/pySOT" -> "dbindel/POAP"
"dme65/pySOT" -> "dme65/SOT"
"dme65/pySOT" -> "mdolab/pyoptsparse" ["e"=1]
"dme65/pySOT" -> "uber/bayesmark"
"PacktPublishing/Practical-Deep-Learning-at-Scale-with-MLFlow" -> "PacktPublishing/Comet-for-Data-Science"
"PacktPublishing/Practical-Deep-Learning-at-Scale-with-MLFlow" -> "PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python"
"PacktPublishing/Practical-Deep-Learning-at-Scale-with-MLFlow" -> "PacktPublishing/Applied-Machine-Learning-Explainability-Techniques"
"PacktPublishing/Practical-Deep-Learning-at-Scale-with-MLFlow" -> "PacktPublishing/Hyperparameter-Tuning-with-Python"
"hopshadoop/hops" -> "dc-sics/hopsworks"
"hopshadoop/hops" -> "logicalclocks/feature-store-api"
"hopshadoop/hops" -> "hopshadoop/hops-metadata-dal-impl-ndb"
"hopshadoop/hops" -> "linkedin/dynamometer" ["e"=1]
"hopshadoop/hops" -> "logicalclocks/hops-examples"
"hopshadoop/hops" -> "logicalclocks/hops-util-py"
"hopshadoop/hops" -> "logicalclocks/hopsworks"
"hopshadoop/hops" -> "logicalclocks/rondb"
"hopshadoop/hops" -> "logicalclocks/maggy"
"hopshadoop/hops" -> "karamelchef/karamel"
"naenumtou/ifrs9" -> "shawn-y-sun/Credit_Risk_Model_LoanDefaults"
"emla2805/vision-transformer" -> "kamalkraj/Vision-Transformer"
"emla2805/vision-transformer" -> "tuvovan/Vision_Transformer_Keras"
"emla2805/vision-transformer" -> "ashishpatel26/Vision-Transformer-Keras-Tensorflow-Pytorch-Examples"
"emla2805/vision-transformer" -> "faustomorales/vit-keras"
"emla2805/vision-transformer" -> "rishigami/Swin-Transformer-TF"
"PerformanceEstimation/PEPit" -> "PerformanceEstimation/Performance-Estimation-Toolbox"
"PerformanceEstimation/PEPit" -> "benchopt/template_benchmark"
"Code-Pop/Vuex_Fundamentals" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/Vuex_Fundamentals" -> "Code-Pop/build-a-blog-with-nuxt-3-and-nuxt-content-v2"
"Code-Pop/Vuex_Fundamentals" -> "Code-Pop/graphql-client"
"Code-Pop/Vuex_Fundamentals" -> "Code-Pop/Unit-Testing-Vue-3"
"Code-Pop/Vuex_Fundamentals" -> "Code-Pop/pwa-with-vue-3"
"Code-Pop/Vuex_Fundamentals" -> "Code-Pop/validating-vue3-forms"
"Code-Pop/Vuex_Fundamentals" -> "Code-Pop/from-vuex-to-pinia"
"Code-Pop/Vuex_Fundamentals" -> "Code-Pop/graphql-server"
"Code-Pop/Vuex_Fundamentals" -> "Code-Pop/build-gmail-clone-with-vue-3"
"permitio/OPToggles" -> "permitio/opal-helm-chart"
"permitio/OPToggles" -> "permitio/cedar-agent"
"josepholiveira/podcastr" -> "rh12503/triangula"
"josepholiveira/podcastr" -> "guilhermecapitao/podcastr"
"josepholiveira/podcastr" -> "birobirobiro/nlw-05-plantmanager"
"josepholiveira/podcastr" -> "rocketseat-education/nlw-06-reactjs" ["e"=1]
"josepholiveira/podcastr" -> "aladinyo/WhatsappyApp" ["e"=1]
"josepholiveira/podcastr" -> "diego3g/responsive-native" ["e"=1]
"josepholiveira/podcastr" -> "Code-Pop/Real-World_Vue-3"
"josepholiveira/podcastr" -> "RafaelGoulartB/proffy" ["e"=1]
"josepholiveira/podcastr" -> "getomni/visual-studio-code" ["e"=1]
"josepholiveira/podcastr" -> "eva-engine/eva.js" ["e"=1]
"josepholiveira/podcastr" -> "getomni/insomnia" ["e"=1]
"josepholiveira/podcastr" -> "ml-tooling/opyrator"
"josepholiveira/podcastr" -> "Emadabdelhamied/Eng-Mohamed-Hammad-Posts" ["e"=1]
"automl/pylearningcurvepredictor" -> "tdomhan/pylearningcurvepredictor"
"kamalkraj/Vision-Transformer" -> "emla2805/vision-transformer"
"kamalkraj/Vision-Transformer" -> "tuvovan/Vision_Transformer_Keras"
"shi-ang/SurvivalEVAL" -> "WeijiaZhang24/DCSurvival"
"birobirobiro/nlw-06-gameplay" -> "birobirobiro/my-onix-app"
"birobirobiro/nlw-06-gameplay" -> "birobirobiro/codar"
"automl/DeepCAVE" -> "tornede/py_experimenter" ["e"=1]
"automl/DeepCAVE" -> "automl/neps"
"automl/DeepCAVE" -> "automl/arlbench"
"automl/DeepCAVE" -> "automl/Mighty"
"automl/DeepCAVE" -> "automl/DACBench"
"dmatrix/tmls-workshop" -> "elvinzhusiyu/vapit" ["e"=1]
"dmatrix/tmls-workshop" -> "aniruddhachoudhury/mlopsworld"
"aporia-ai/mlops.toys" -> "aporia-ai/dmatrix2np"
"aporia-ai/mlops.toys" -> "igaloly/vue-preloaders"
"aporia-ai/mlops.toys" -> "aporia-ai/inferencedb"
"aporia-ai/mlops.toys" -> "aporia-ai/kubesurvival"
"aporia-ai/mlops.toys" -> "aporia-ai/mlnotify"
"microprediction/timemachines" -> "microprediction/microprediction"
"microprediction/timemachines" -> "microprediction/humpday"
"microprediction/timemachines" -> "carlomazzaferro/scikit-hts"
"microprediction/timemachines" -> "microprediction/precise"
"microprediction/timemachines" -> "antoinecarme/pyaf"
"microprediction/timemachines" -> "cerlymarco/tspiral"
"microprediction/timemachines" -> "Nixtla/tsfeatures"
"microprediction/timemachines" -> "winedarksea/AutoTS"
"microprediction/timemachines" -> "EthanRosenthal/skits"
"microprediction/timemachines" -> "AutoViML/Auto_TS"
"microprediction/timemachines" -> "microprediction/timeseries-notebooks"
"microprediction/timemachines" -> "tblume1992/ThymeBoost"
"ashishpatel26/Vision-Transformer-Keras-Tensorflow-Pytorch-Examples" -> "kamalkraj/Vision-Transformer"
"secondmind-labs/GPflux" -> "secondmind-labs/trieste"
"secondmind-labs/GPflux" -> "secondmind-labs/markovflow"
"secondmind-labs/GPflux" -> "hughsalimbeni/DGPs_with_IWVI"
"i6092467/vadesc" -> "chiragnagpal/deep_cox_mixtures"
"clip-italian/clip-italian" -> "vinid/cade"
"clip-italian/clip-italian" -> "vinid/NegotiationArena"
"jpmml/r2pmml" -> "jpmml/jpmml-r"
"zincware/ZnTrack" -> "zincware/ZnDraw" ["e"=1]
"cruiseresearchgroup/TSCP2" -> "OctoberChang/klcpd_code"
"machinelearningnuremberg/HPO-B" -> "machinelearningnuremberg/FSBO"
"machinelearningnuremberg/HPO-B" -> "machinelearningnuremberg/DeepRankingEnsembles"
"machinelearningnuremberg/HPO-B" -> "machinelearningnuremberg/DeepPipe"
"machinelearningnuremberg/HPO-B" -> "machinelearningnuremberg/DyHPO"
"slds-lmu/yahpo_gym" -> "automl/LCBench"
"SeldonIO/tempo" -> "SeldonIO/ansible-k8s-collection"
"ysraell/forecasting" -> "mscharth/forecasting"
"JunjieYang97/stocBiO" -> "JunjieYang97/MRVRBO"
"JunjieYang97/stocBiO" -> "sowmaster/esjacobians"
"Code-Pop/Unit-Testing-Vue-3" -> "Code-Pop/Touring-Vue-Router"
"Code-Pop/Unit-Testing-Vue-3" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/Unit-Testing-Vue-3" -> "Code-Pop/graphql-client"
"Code-Pop/Unit-Testing-Vue-3" -> "Code-Pop/validating-vue3-forms"
"yfzon/Multi-modal-Multi-instance-Learning" -> "cuicathy/MMD_SurvivalPrediction"
"Code-Pop/Touring-Vue-Router" -> "Code-Pop/Vuex_Fundamentals"
"Code-Pop/Touring-Vue-Router" -> "Code-Pop/Unit-Testing-Vue-3"
"Code-Pop/Touring-Vue-Router" -> "Code-Pop/Vue-3-Forms"
"Code-Pop/Touring-Vue-Router" -> "Code-Pop/validating-vue3-forms"
"Code-Pop/Touring-Vue-Router" -> "Code-Pop/from-vuex-to-pinia"
"mathurinm/andersoncd" -> "TheoGuyard/El0ps"
"apache/kvrocks-controller" -> "RocksLabs/kvrocks_exporter"
"apache/kvrocks-controller" -> "apache/kvrocks-website"
"apache/kvrocks-controller" -> "RocksLabs/kvrocks-operator"
"ypeleg/nfnets-keras" -> "hoangthang1607/nfnets-Tensorflow-2"
"daxiongshu/rapids-ai-BBO-2nd-place-solution" -> "automl/Squirrel-Optimizer-BBO-NeurIPS20-automlorg"
"daxiongshu/rapids-ai-BBO-2nd-place-solution" -> "aerdem4/rapids-kaggle-utils"
"martinjankowiak/saasbo" -> "LamNgo1/cma-meta-algorithm"
"shi-ang/SurvivalAnalysisPapers" -> "shi-ang/SurvivalEVAL"
"shi-ang/SurvivalAnalysisPapers" -> "WeijiaZhang24/DCSurvival"
"shib0li/DNN-MFBO" -> "shib0li/BMBO-DARN"
"chiragnagpal/deep_cox_mixtures" -> "i6092467/vadesc"
"bentoml/simple_di" -> "bentoml/yatai-image-builder"
"JunjieYang97/MRVRBO" -> "JunjieYang97/stocBiO"
"aryandeshwal/HyBO" -> "QUVA-Lab/COMBO"
"aniruddhachoudhury/mlopsworld" -> "dmatrix/tmls-workshop"
"MilaNLProc/feel-it" -> "vinid/quica"
"MilaNLProc/feel-it" -> "vinid/cade"
"Jeanselme/DynamicDeepHit" -> "autonlab/DeepSurvivalMachines"
"Jeanselme/DynamicDeepHit" -> "chl8856/Dynamic-DeepHit"
"YuhaoWong0103/fsl_ts" -> "JJASMINE22/MAML_LSTM"
"mathurinm/libsvmdata" -> "mathurinm/andersoncd"
"mathurinm/libsvmdata" -> "benchopt/benchmark_lasso"
"coveooss/SIGIR-ecom-data-challenge" -> "jacopotagliabue/retail-personalization-workshop"
"coveooss/SIGIR-ecom-data-challenge" -> "RecList/evalRS-CIKM-2022"
"coveooss/SIGIR-ecom-data-challenge" -> "DeepBlueAI/SIGIR_eCOM_2021_Data_Challenge_1st_Place"
"FrancescaLazzeri/AutoML-for-Timeseries-Forecasting-Berlin-MeetUp" -> "FrancescaLazzeri/AutomatedMLEnergyForecast"
"vinid/quica" -> "vinid/cade"
"PABannier/nanograd" -> "benchopt/benchmark_lasso"
"PABannier/nanograd" -> "mathurinm/libsvmdata"
"birobirobiro/nlw-05-plantmanager" -> "birobirobiro/codar"
"flyteorg/flytelab" -> "flyteorg/flyteadmin"
"flyteorg/flytelab" -> "flyteorg/flyteidl"
"hj-n/snc-reliability-map" -> "hj-n/steadiness-cohesiveness"
"birobirobiro/my-onix-app" -> "birobirobiro/live-twitch-lp-gpt3"
"drivendataorg/cookiecutter-data-science" -> "kedro-org/kedro"
"drivendataorg/cookiecutter-data-science" -> "iterative/dvc"
"drivendataorg/cookiecutter-data-science" -> "ydataai/ydata-profiling"
"drivendataorg/cookiecutter-data-science" -> "cookiecutter/cookiecutter" ["e"=1]
"drivendataorg/cookiecutter-data-science" -> "shap/shap"
"drivendataorg/cookiecutter-data-science" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"drivendataorg/cookiecutter-data-science" -> "mlflow/mlflow"
"drivendataorg/cookiecutter-data-science" -> "visenger/awesome-mlops" ["e"=1]
"drivendataorg/cookiecutter-data-science" -> "alexeygrigorev/data-science-interviews" ["e"=1]
"drivendataorg/cookiecutter-data-science" -> "audreyfeldroy/cookiecutter-pypackage" ["e"=1]
"drivendataorg/cookiecutter-data-science" -> "marcotcr/lime"
"drivendataorg/cookiecutter-data-science" -> "EpistasisLab/tpot"
"drivendataorg/cookiecutter-data-science" -> "great-expectations/great_expectations" ["e"=1]
"drivendataorg/cookiecutter-data-science" -> "eugeneyan/applied-ml" ["e"=1]
"drivendataorg/cookiecutter-data-science" -> "DistrictDataLabs/yellowbrick"
"ydataai/ydata-profiling" -> "shap/shap"
"ydataai/ydata-profiling" -> "modin-project/modin"
"ydataai/ydata-profiling" -> "pycaret/pycaret"
"ydataai/ydata-profiling" -> "EpistasisLab/tpot"
"ydataai/ydata-profiling" -> "ResidentMario/missingno"
"ydataai/ydata-profiling" -> "great-expectations/great_expectations" ["e"=1]
"ydataai/ydata-profiling" -> "fbdesignpro/sweetviz"
"ydataai/ydata-profiling" -> "alteryx/featuretools"
"ydataai/ydata-profiling" -> "vaexio/vaex"
"ydataai/ydata-profiling" -> "blue-yonder/tsfresh"
"ydataai/ydata-profiling" -> "marcotcr/lime"
"ydataai/ydata-profiling" -> "man-group/dtale"
"ydataai/ydata-profiling" -> "mlflow/mlflow"
"ydataai/ydata-profiling" -> "drivendataorg/cookiecutter-data-science"
"ydataai/ydata-profiling" -> "DistrictDataLabs/yellowbrick"
"EpistasisLab/tpot" -> "automl/auto-sklearn"
"EpistasisLab/tpot" -> "alteryx/featuretools"
"EpistasisLab/tpot" -> "keras-team/autokeras"
"EpistasisLab/tpot" -> "blue-yonder/tsfresh"
"EpistasisLab/tpot" -> "hyperopt/hyperopt"
"EpistasisLab/tpot" -> "scikit-learn-contrib/imbalanced-learn"
"EpistasisLab/tpot" -> "rasbt/mlxtend"
"EpistasisLab/tpot" -> "marcotcr/lime"
"EpistasisLab/tpot" -> "shap/shap"
"EpistasisLab/tpot" -> "ydataai/ydata-profiling"
"EpistasisLab/tpot" -> "ClimbsRocks/auto_ml"
"EpistasisLab/tpot" -> "DEAP/deap" ["e"=1]
"EpistasisLab/tpot" -> "h2oai/h2o-3"
"EpistasisLab/tpot" -> "DistrictDataLabs/yellowbrick"
"EpistasisLab/tpot" -> "dmlc/xgboost" ["e"=1]
"GPflow/GPflow" -> "SheffieldML/GPy"
"GPflow/GPflow" -> "cornellius-gp/gpytorch"
"GPflow/GPflow" -> "blei-lab/edward"
"GPflow/GPflow" -> "GPflow/GPflowOpt"
"GPflow/GPflow" -> "SheffieldML/GPyOpt"
"GPflow/GPflow" -> "tensorflow/probability"
"GPflow/GPflow" -> "EmuKit/emukit"
"GPflow/GPflow" -> "pyro-ppl/numpyro" ["e"=1]
"GPflow/GPflow" -> "pyro-ppl/pyro"
"GPflow/GPflow" -> "dfm/george" ["e"=1]
"GPflow/GPflow" -> "pytorch/botorch"
"GPflow/GPflow" -> "secondmind-labs/trieste"
"GPflow/GPflow" -> "SheffieldML/PyDeepGP"
"GPflow/GPflow" -> "alshedivat/keras-gp"
"GPflow/GPflow" -> "HIPS/Spearmint"
"gofireflyio/validiac" -> "gofireflyio/badge-of-honor"
"gofireflyio/validiac" -> "komodorio/validkube" ["e"=1]
"gofireflyio/validiac" -> "permitio/OPToggles"
"jundongl/scikit-feature" -> "duxuhao/Feature-Selection"
"jundongl/scikit-feature" -> "scikit-learn-contrib/boruta_py"
"jundongl/scikit-feature" -> "kaushalshetty/FeatureSelectionGA"
"jundongl/scikit-feature" -> "EpistasisLab/scikit-rebate"
"jundongl/scikit-feature" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"jundongl/scikit-feature" -> "danielhomola/mifs"
"jundongl/scikit-feature" -> "reiinakano/scikit-plot"
"jundongl/scikit-feature" -> "rasbt/mlxtend"
"jundongl/scikit-feature" -> "manuel-calzolari/sklearn-genetic"
"jundongl/scikit-feature" -> "hyperopt/hyperopt-sklearn"
"jundongl/scikit-feature" -> "WillKoehrsen/feature-selector"
"jundongl/scikit-feature" -> "scikit-optimize/scikit-optimize"
"jundongl/scikit-feature" -> "scikit-learn-contrib/category_encoders"
"jundongl/scikit-feature" -> "scikit-learn-contrib/imbalanced-learn"
"jundongl/scikit-feature" -> "TeamHG-Memex/eli5"
"Nixtla/statsforecast" -> "Nixtla/neuralforecast"
"Nixtla/statsforecast" -> "Nixtla/mlforecast"
"Nixtla/statsforecast" -> "Nixtla/hierarchicalforecast"
"Nixtla/statsforecast" -> "unit8co/darts"
"Nixtla/statsforecast" -> "ourownstory/neural_prophet"
"Nixtla/statsforecast" -> "Nixtla/nixtla"
"Nixtla/statsforecast" -> "sktime/sktime"
"Nixtla/statsforecast" -> "uber/orbit"
"Nixtla/statsforecast" -> "valeman/awesome-conformal-prediction" ["e"=1]
"Nixtla/statsforecast" -> "awslabs/gluonts"
"Nixtla/statsforecast" -> "facebookresearch/Kats"
"Nixtla/statsforecast" -> "sktime/pytorch-forecasting"
"Nixtla/statsforecast" -> "salesforce/Merlion"
"Nixtla/statsforecast" -> "TDAmeritrade/stumpy"
"Nixtla/statsforecast" -> "functime-org/functime" ["e"=1]
"PacktPublishing/Hyperparameter-Tuning-with-Python" -> "PacktPublishing/Comet-for-Data-Science"
"PacktPublishing/Hyperparameter-Tuning-with-Python" -> "PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python"
"PacktPublishing/Hyperparameter-Tuning-with-Python" -> "PacktPublishing/Practical-Deep-Learning-at-Scale-with-MLFlow"
"PacktPublishing/Hyperparameter-Tuning-with-Python" -> "PacktPublishing/Applied-Machine-Learning-Explainability-Techniques"
"scikit-learn-contrib/category_encoders" -> "scikit-learn-contrib/imbalanced-learn"
"scikit-learn-contrib/category_encoders" -> "rasbt/mlxtend"
"scikit-learn-contrib/category_encoders" -> "TeamHG-Memex/eli5"
"scikit-learn-contrib/category_encoders" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/category_encoders" -> "scikit-learn-contrib/sklearn-pandas"
"scikit-learn-contrib/category_encoders" -> "feature-engine/feature_engine"
"scikit-learn-contrib/category_encoders" -> "scikit-optimize/scikit-optimize"
"scikit-learn-contrib/category_encoders" -> "DistrictDataLabs/yellowbrick"
"scikit-learn-contrib/category_encoders" -> "koaning/scikit-lego"
"scikit-learn-contrib/category_encoders" -> "stanfordmlgroup/ngboost"
"scikit-learn-contrib/category_encoders" -> "reiinakano/scikit-plot"
"scikit-learn-contrib/category_encoders" -> "alteryx/featuretools"
"scikit-learn-contrib/category_encoders" -> "interpretml/interpret"
"scikit-learn-contrib/category_encoders" -> "hyperopt/hyperopt-sklearn"
"scikit-learn-contrib/category_encoders" -> "blue-yonder/tsfresh"
"tnagler/VineCopula" -> "vinecopulib/rvinecopulib"
"tnagler/VineCopula" -> "tnagler/vinereg"
"tnagler/VineCopula" -> "vinecopulib/vinecopulib"
"tnagler/VineCopula" -> "vinecopulib/pyvinecopulib"
"tnagler/VineCopula" -> "MalteKurz/VineCopulaMatlab"
"itdxer/neupy" -> "dnouri/nolearn" ["e"=1]
"itdxer/neupy" -> "zomux/deepy" ["e"=1]
"itdxer/neupy" -> "sevamoo/SOMPY"
"itdxer/neupy" -> "dmlc/minpy" ["e"=1]
"itdxer/neupy" -> "AdrienGuille/GrowingNeuralGas"
"itdxer/neupy" -> "mila-iqia/blocks" ["e"=1]
"itdxer/neupy" -> "andersbll/deeppy" ["e"=1]
"itdxer/neupy" -> "reiinakano/scikit-plot"
"koaning/doubtlab" -> "koaning/embetter"
"koaning/doubtlab" -> "koaning/human-learn"
"koaning/doubtlab" -> "koaning/cluestar"
"koaning/doubtlab" -> "koaning/scikit-lego"
"koaning/doubtlab" -> "koaning/whatlies"
"koaning/doubtlab" -> "NorskRegnesentral/skweak" ["e"=1]
"koaning/doubtlab" -> "koaning/bulk"
"koaning/doubtlab" -> "webis-de/small-text" ["e"=1]
"koaning/doubtlab" -> "csinva/imodels"
"koaning/doubtlab" -> "explosion/floret" ["e"=1]
"koaning/doubtlab" -> "MAIF/eurybia"
"koaning/doubtlab" -> "koaning/clumper"
"NannyML/nannyml" -> "deepchecks/deepchecks"
"NannyML/nannyml" -> "evidentlyai/evidently"
"NannyML/nannyml" -> "SeldonIO/alibi-detect"
"NannyML/nannyml" -> "scikit-learn-contrib/MAPIE"
"NannyML/nannyml" -> "zenml-io/zenml"
"NannyML/nannyml" -> "NannyML/The-Little-Book-of-ML-Metrics" ["e"=1]
"NannyML/nannyml" -> "whylabs/whylogs" ["e"=1]
"NannyML/nannyml" -> "Nixtla/statsforecast"
"NannyML/nannyml" -> "unionai-oss/pandera"
"NannyML/nannyml" -> "online-ml/river"
"NannyML/nannyml" -> "feature-engine/feature_engine"
"NannyML/nannyml" -> "MAIF/shapash"
"NannyML/nannyml" -> "SelfExplainML/PiML-Toolbox" ["e"=1]
"NannyML/nannyml" -> "bentoml/BentoML"
"NannyML/nannyml" -> "koaning/scikit-lego"
"salesforce/OmniXAI" -> "deel-ai/xplique" ["e"=1]
"salesforce/OmniXAI" -> "Trusted-AI/AIX360"
"salesforce/OmniXAI" -> "SeldonIO/alibi"
"salesforce/OmniXAI" -> "interpretml/DiCE"
"salesforce/OmniXAI" -> "wangyongjie-ntu/Awesome-explainable-AI"
"salesforce/OmniXAI" -> "carla-recourse/CARLA"
"salesforce/OmniXAI" -> "understandable-machine-intelligence-lab/Quantus" ["e"=1]
"salesforce/OmniXAI" -> "MAIF/shapash"
"salesforce/OmniXAI" -> "AI4LIFE-GROUP/OpenXAI" ["e"=1]
"salesforce/OmniXAI" -> "salesforce/Merlion"
"salesforce/OmniXAI" -> "csinva/imodels"
"salesforce/OmniXAI" -> "EthicalML/xai"
"salesforce/OmniXAI" -> "SeldonIO/alibi-detect"
"salesforce/OmniXAI" -> "interpretml/interpret"
"salesforce/OmniXAI" -> "pbiecek/xai_resources"
"deepchecks/deepchecks" -> "evidentlyai/evidently"
"deepchecks/deepchecks" -> "NannyML/nannyml"
"deepchecks/deepchecks" -> "zenml-io/zenml"
"deepchecks/deepchecks" -> "SeldonIO/alibi-detect"
"deepchecks/deepchecks" -> "MAIF/shapash"
"deepchecks/deepchecks" -> "whylabs/whylogs" ["e"=1]
"deepchecks/deepchecks" -> "oegedijk/explainerdashboard"
"deepchecks/deepchecks" -> "online-ml/river"
"deepchecks/deepchecks" -> "feature-engine/feature_engine"
"deepchecks/deepchecks" -> "bentoml/BentoML"
"deepchecks/deepchecks" -> "ploomber/ploomber"
"deepchecks/deepchecks" -> "microsoft/FLAML"
"deepchecks/deepchecks" -> "interpretml/interpret"
"deepchecks/deepchecks" -> "argilla-io/argilla" ["e"=1]
"deepchecks/deepchecks" -> "iterative/cml"
"microprediction/precise" -> "microprediction/microprediction"
"microprediction/precise" -> "OVVO-Financial/NNS"
"microprediction/precise" -> "cvxgrp/cov_pred_finance" ["e"=1]
"microprediction/precise" -> "microprediction/timemachines"
"microprediction/precise" -> "microprediction/humpday"
"microprediction/precise" -> "Farmhouse121/Adventures-in-Financial-Data-Science"
"microprediction/precise" -> "OVVO-Financial/NNS-Python"
"microprediction/precise" -> "kayuksel/generative-opt"
"Nixtla/nixtla" -> "Nixtla/neuralforecast"
"Nixtla/nixtla" -> "Nixtla/statsforecast"
"Nixtla/nixtla" -> "Nixtla/mlforecast"
"Nixtla/nixtla" -> "amazon-science/chronos-forecasting" ["e"=1]
"Nixtla/nixtla" -> "google-research/timesfm" ["e"=1]
"Nixtla/nixtla" -> "time-series-foundation-models/lag-llama" ["e"=1]
"Nixtla/nixtla" -> "KimMeen/Time-LLM" ["e"=1]
"Nixtla/nixtla" -> "awslabs/gluonts"
"Nixtla/nixtla" -> "yuqinie98/PatchTST" ["e"=1]
"Nixtla/nixtla" -> "unit8co/darts"
"Nixtla/nixtla" -> "Nixtla/hierarchicalforecast"
"Nixtla/nixtla" -> "SalesforceAIResearch/uni2ts" ["e"=1]
"Nixtla/nixtla" -> "DAMO-DI-ML/NeurIPS2023-One-Fits-All" ["e"=1]
"Nixtla/nixtla" -> "sktime/pytorch-forecasting"
"Nixtla/nixtla" -> "timeseriesAI/tsai"
"PacktPublishing/Applied-Machine-Learning-Explainability-Techniques" -> "PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python"
"PacktPublishing/Applied-Machine-Learning-Explainability-Techniques" -> "PacktPublishing/Comet-for-Data-Science"
"PacktPublishing/Applied-Machine-Learning-Explainability-Techniques" -> "PacktPublishing/Practical-Deep-Learning-at-Scale-with-MLFlow"
"PacktPublishing/Applied-Machine-Learning-Explainability-Techniques" -> "PacktPublishing/Hyperparameter-Tuning-with-Python"
"skops-dev/skops" -> "koaning/embetter"
"skops-dev/skops" -> "probabl-ai/skore"
"skops-dev/skops" -> "skrub-data/skrub"
"skops-dev/skops" -> "koaning/human-learn"
"skops-dev/skops" -> "koaning/scikit-lego"
"skops-dev/skops" -> "soda-inria/hazardous"
"cleanlab/cleanvision" -> "visual-layer/fastdup"
"cleanlab/cleanvision" -> "cleanlab/cleanlab"
"cleanlab/cleanvision" -> "dcai-course/dcai-lab"
"cleanlab/cleanvision" -> "autodistill/autodistill" ["e"=1]
"cleanlab/cleanvision" -> "Deci-AI/super-gradients" ["e"=1]
"cleanlab/cleanvision" -> "dcai-course/dcai-course"
"cleanlab/cleanvision" -> "anminhhung/pytorch_tutorial"
"cleanlab/cleanvision" -> "rafaelpadilla/review_object_detection_metrics" ["e"=1]
"cleanlab/cleanvision" -> "patchy631/machine-learning" ["e"=1]
"cleanlab/cleanvision" -> "GokuMohandas/mlops-course" ["e"=1]
"cleanlab/cleanvision" -> "BloodAxe/pytorch-toolbelt" ["e"=1]
"cleanlab/cleanvision" -> "iusztinpaul/energy-forecasting" ["e"=1]
"cleanlab/cleanvision" -> "cleanlab/cleanvision-examples"
"cleanlab/cleanvision" -> "Renumics/spotlight"
"cleanlab/cleanvision" -> "Paulescu/hands-on-rl" ["e"=1]
"rsteca/sklearn-deap" -> "manuel-calzolari/sklearn-genetic"
"rsteca/sklearn-deap" -> "trevorstephens/gplearn" ["e"=1]
"rsteca/sklearn-deap" -> "tmadl/sklearn-expertsys"
"rsteca/sklearn-deap" -> "hyperopt/hyperopt-sklearn"
"rsteca/sklearn-deap" -> "DEAP/deap" ["e"=1]
"rsteca/sklearn-deap" -> "aigamedev/scikit-neuralnetwork" ["e"=1]
"rsteca/sklearn-deap" -> "reiinakano/xcessiv"
"rsteca/sklearn-deap" -> "reiinakano/scikit-plot"
"rsteca/sklearn-deap" -> "scikit-optimize/scikit-optimize"
"rsteca/sklearn-deap" -> "zygmuntz/hyperband"
"rsteca/sklearn-deap" -> "EpistasisLab/scikit-rebate"
"rsteca/sklearn-deap" -> "claesenm/optunity"
"rsteca/sklearn-deap" -> "scikit-learn-contrib/sklearn-pandas"
"rsteca/sklearn-deap" -> "rodrigo-arenas/Sklearn-genetic-opt" ["e"=1]
"rsteca/sklearn-deap" -> "scikit-learn-contrib/boruta_py"
"lmmentel/awesome-time-series" -> "cuge1995/awesome-time-series" ["e"=1]
"lmmentel/awesome-time-series" -> "cure-lab/Awesome-time-series" ["e"=1]
"lmmentel/awesome-time-series" -> "Nixtla/tsfeatures"
"lmmentel/awesome-time-series" -> "predict-idlab/tsflex"
"lmmentel/awesome-time-series" -> "DaoSword/Time-Series-Forecasting-and-Deep-Learning" ["e"=1]
"lmmentel/awesome-time-series" -> "DynamicsAndNeuralSystems/catch22" ["e"=1]
"lmmentel/awesome-time-series" -> "DataCanvasIO/HyperTS"
"lmmentel/awesome-time-series" -> "deeptime-ml/deeptime" ["e"=1]
"lmmentel/awesome-time-series" -> "fraunhoferportugal/tsfel" ["e"=1]
"lmmentel/awesome-time-series" -> "Nixtla/hierarchicalforecast"
"lmmentel/awesome-time-series" -> "Nixtla/mlforecast"
"lmmentel/awesome-time-series" -> "winedarksea/AutoTS"
"lmmentel/awesome-time-series" -> "zhaokg/Rbeast"
"lmmentel/awesome-time-series" -> "aeon-toolkit/aeon" ["e"=1]
"lmmentel/awesome-time-series" -> "arundo/tsaug" ["e"=1]
"gastonstat/CreditScoring" -> "hsz1273327/ScoreCardModel"
"DrSasanBarak/metats" -> "JJASMINE22/MAML_LSTM"
"DrSasanBarak/metats" -> "radrumond/timehetnet"
"visual-layer/fastdup" -> "cleanlab/cleanvision"
"visual-layer/fastdup" -> "deepchecks/deepchecks"
"visual-layer/fastdup" -> "Deci-AI/super-gradients" ["e"=1]
"visual-layer/fastdup" -> "lightly-ai/lightly" ["e"=1]
"visual-layer/fastdup" -> "rom1504/clip-retrieval" ["e"=1]
"visual-layer/fastdup" -> "obss/sahi" ["e"=1]
"visual-layer/fastdup" -> "CalculatedContent/WeightWatcher" ["e"=1]
"visual-layer/fastdup" -> "autodistill/autodistill" ["e"=1]
"visual-layer/fastdup" -> "OML-Team/open-metric-learning" ["e"=1]
"visual-layer/fastdup" -> "rom1504/img2dataset" ["e"=1]
"visual-layer/fastdup" -> "cleanlab/cleanlab"
"visual-layer/fastdup" -> "SysCV/sam-hq" ["e"=1]
"visual-layer/fastdup" -> "Renumics/spotlight"
"visual-layer/fastdup" -> "airctic/icevision" ["e"=1]
"visual-layer/fastdup" -> "facebookresearch/vissl" ["e"=1]
"iskandr/fancyimpute" -> "eltonlaw/impyute"
"iskandr/fancyimpute" -> "ResidentMario/missingno"
"iskandr/fancyimpute" -> "scikit-learn-contrib/category_encoders"
"iskandr/fancyimpute" -> "caow13/BRITS"
"iskandr/fancyimpute" -> "jsyoon0823/GAIN"
"iskandr/fancyimpute" -> "TeamHG-Memex/eli5"
"iskandr/fancyimpute" -> "scikit-learn-contrib/boruta_py"
"iskandr/fancyimpute" -> "AnotherSamWilson/miceforest"
"iskandr/fancyimpute" -> "epsilon-machine/missingpy"
"iskandr/fancyimpute" -> "kearnz/autoimpute"
"iskandr/fancyimpute" -> "xinychen/transdim" ["e"=1]
"iskandr/fancyimpute" -> "scikit-learn-contrib/sklearn-pandas"
"iskandr/fancyimpute" -> "MaxHalford/prince"
"iskandr/fancyimpute" -> "DistrictDataLabs/yellowbrick"
"iskandr/fancyimpute" -> "feature-engine/feature_engine"
"selva86/datasets" -> "plotly/datasets"
"selva86/datasets" -> "jbrownlee/Datasets"
"selva86/datasets" -> "selva86/selva86.github.io"
"selva86/datasets" -> "selva86/python-machine-learning"
"sofienkaabar/trend-following-strategies" -> "sofienkaabar/the-book-of-trading-strategies"
"sofienkaabar/trend-following-strategies" -> "sofienkaabar/contrarian-trading-strategies"
"sofienkaabar/trend-following-strategies" -> "sofienkaabar/mastering-financial-pattern-recognition"
"Data-Centric-AI-Community/awesome-data-centric-ai" -> "ydataai/academy"
"Data-Centric-AI-Community/awesome-data-centric-ai" -> "ydataai/ydata-quality"
"Data-Centric-AI-Community/awesome-data-centric-ai" -> "HazyResearch/data-centric-ai"
"Data-Centric-AI-Community/awesome-data-centric-ai" -> "Renumics/awesome-open-data-centric-ai"
"Data-Centric-AI-Community/awesome-data-centric-ai" -> "Data-Centric-AI-Community/awesome-python-for-data-science"
"Data-Centric-AI-Community/awesome-data-centric-ai" -> "ydataai/ydata-synthetic" ["e"=1]
"Data-Centric-AI-Community/awesome-data-centric-ai" -> "daochenzha/data-centric-AI"
"machinelearningnuremberg/WellTunedSimpleNets" -> "machinelearningnuremberg/DeepRankingEnsembles"
"machinelearningnuremberg/WellTunedSimpleNets" -> "machinelearningnuremberg/FSBO"
"machinelearningnuremberg/WellTunedSimpleNets" -> "machinelearningnuremberg/DyHPO"
"machinelearningnuremberg/WellTunedSimpleNets" -> "machinelearningnuremberg/DeepPipe"
"Nixtla/transfer-learning-time-series" -> "Nixtla/hierarchicalforecast"
"Nixtla/transfer-learning-time-series" -> "Nixtla/datasetsforecast"
"Nixtla/transfer-learning-time-series" -> "Nixtla/mlforecast"
"microsoft/responsible-ai-toolbox-mitigations" -> "microsoft/responsible-ai-toolbox-tracker"
"WenjieDu/SAITS" -> "WenjieDu/Awesome_Imputation" ["e"=1]
"WenjieDu/SAITS" -> "WenjieDu/PyPOTS" ["e"=1]
"WenjieDu/SAITS" -> "WenjieDu/TSDB" ["e"=1]
"WenjieDu/SAITS" -> "WenjieDu/BrewPOTS" ["e"=1]
"WenjieDu/SAITS" -> "Graph-Machine-Learning-Group/grin" ["e"=1]
"WenjieDu/SAITS" -> "WenjieDu/PyGrinder" ["e"=1]
"WenjieDu/SAITS" -> "AI4HealthUOL/SSSD" ["e"=1]
"WenjieDu/SAITS" -> "caow13/BRITS"
"WenjieDu/SAITS" -> "ermongroup/CSDI" ["e"=1]
"WenjieDu/SAITS" -> "ratschlab/GP-VAE"
"WenjieDu/SAITS" -> "Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks"
"WenjieDu/SAITS" -> "IvanBongiorni/GAN-RNN_Timeseries-imputation"
"WenjieDu/SAITS" -> "jsyoon0823/GAIN"
"WenjieDu/SAITS" -> "Luoyonghong/E2EGAN"
"WenjieDu/SAITS" -> "lixus7/Time-Series-Works-Conferences" ["e"=1]
"adebayoj/fairml" -> "algofairness/BlackBoxAuditing"
"adebayoj/fairml" -> "algofairness/fairness-comparison"
"adebayoj/fairml" -> "columbia/fairtest"
"adebayoj/fairml" -> "cosmicBboy/themis-ml"
"adebayoj/fairml" -> "dssg/aequitas"
"adebayoj/fairml" -> "mbilalzafar/fair-classification"
"adebayoj/fairml" -> "pymetrics/audit-ai"
"adebayoj/fairml" -> "propublica/compas-analysis"
"adebayoj/fairml" -> "tmadl/sklearn-expertsys"
"adebayoj/fairml" -> "LASER-UMASS/Themis"
"koaning/bulk" -> "koaning/embetter"
"koaning/bulk" -> "koaning/human-learn"
"koaning/bulk" -> "TutteInstitute/thisnotthat"
"koaning/bulk" -> "koaning/cluestar"
"koaning/bulk" -> "koaning/doubtlab"
"koaning/bulk" -> "davidberenstein1957/concise-concepts" ["e"=1]
"koaning/bulk" -> "explosion/curated-transformers" ["e"=1]
"koaning/bulk" -> "explosion/prodigy-openai-recipes" ["e"=1]
"koaning/bulk" -> "MaartenGr/PolyFuzz" ["e"=1]
"koaning/bulk" -> "koaning/simsity" ["e"=1]
"koaning/bulk" -> "tomaarsen/SpanMarkerNER" ["e"=1]
"koaning/bulk" -> "TutteInstitute/evoc" ["e"=1]
"koaning/bulk" -> "HLasse/TextDescriptives" ["e"=1]
"koaning/bulk" -> "NorskRegnesentral/skweak" ["e"=1]
"koaning/bulk" -> "booknlp/booknlp" ["e"=1]
"scikit-learn-contrib/project-template" -> "scikit-learn-contrib/scikit-learn-contrib"
"scikit-learn-contrib/project-template" -> "soda-inria/hazardous"
"christophM/rulefit" -> "scikit-learn-contrib/skope-rules"
"christophM/rulefit" -> "csinva/imodels"
"christophM/rulefit" -> "cod3licious/autofeat"
"christophM/rulefit" -> "holub008/xrf" ["e"=1]
"christophM/rulefit" -> "tmadl/sklearn-expertsys"
"christophM/rulefit" -> "oracle/skater"
"christophM/rulefit" -> "corels/corels"
"christophM/rulefit" -> "marjoleinF/pre"
"christophM/rulefit" -> "scikit-learn-contrib/forest-confidence-interval"
"christophM/rulefit" -> "marcotcr/anchor"
"christophM/rulefit" -> "corels/pycorels"
"christophM/rulefit" -> "scikit-learn-contrib/DESlib"
"christophM/rulefit" -> "h2oai/mli-resources"
"christophM/rulefit" -> "StatMixedML/LightGBMLSS"
"christophM/rulefit" -> "SauceCat/PDPbox"
"AustinRochford/PyCEbox" -> "SauceCat/PDPbox"
"AustinRochford/PyCEbox" -> "cosmicBboy/themis-ml"
"kserve/models-web-app" -> "kserve/community"
"kserve/models-web-app" -> "kserve/kserve-pending"
"automl/autoweka" -> "automl/RoBO"
"automl/autoweka" -> "automl/pyautoweka"
"automl/autoweka" -> "laic-ufmg/Recipe"
"automl/autoweka" -> "automl/ConfigSpace"
"automl/autoweka" -> "automl/HPOlib1.5"
"JJASMINE22/MAML_LSTM" -> "YuhaoWong0103/fsl_ts"
"replicate/replicate-python" -> "replicate/replicate-javascript"
"replicate/replicate-python" -> "replicate/cog"
"replicate/replicate-python" -> "replicate/cog-examples"
"replicate/replicate-python" -> "replicate/getting-started-nextjs"
"replicate/replicate-python" -> "replicate/discord-bot-tutorial-code"
"replicate/replicate-python" -> "replicate/llama-chat"
"replicate/replicate-python" -> "replicate/dreambooth"
"bentoml/bentoctl" -> "bentoml/Yatai"
"jphall663/GWU_data_mining" -> "szilard/teach-data-science-UCLA-master-appl-stats"
"jphall663/GWU_data_mining" -> "jphall663/interpretable_machine_learning_with_python"
"jphall663/GWU_data_mining" -> "h2oai/mli-resources"
"andosa/treeinterpreter" -> "oracle/skater"
"andosa/treeinterpreter" -> "gregtam/interpreting-decision-trees-and-random-forests"
"andosa/treeinterpreter" -> "TeamHG-Memex/eli5"
"andosa/treeinterpreter" -> "SauceCat/PDPbox"
"andosa/treeinterpreter" -> "tmadl/sklearn-expertsys"
"andosa/treeinterpreter" -> "h2oai/mli-resources"
"andosa/treeinterpreter" -> "parrt/random-forest-importances"
"andosa/treeinterpreter" -> "AustinRochford/PyCEbox"
"andosa/treeinterpreter" -> "limexp/xgbfir" ["e"=1]
"andosa/treeinterpreter" -> "jphall663/interpretable_machine_learning_with_python"
"andosa/treeinterpreter" -> "scikit-learn-contrib/forest-confidence-interval"
"andosa/treeinterpreter" -> "chrispaulca/waterfall"
"andosa/treeinterpreter" -> "scikit-learn-contrib/category_encoders"
"andosa/treeinterpreter" -> "engarde-dev/engarde" ["e"=1]
"andosa/treeinterpreter" -> "ModelOriented/DALEX"
"unionai-oss/unionml" -> "flyteorg/flytekit"
"unionai-oss/unionml" -> "flyteorg/flytesnacks"
"unionai-oss/unionml" -> "flyteorg/flytestdlib"
"unionai-oss/unionml" -> "flyteorg/flyteadmin"
"unionai-oss/unionml" -> "davidmirror-ops/flyte-the-hard-way"
"koaning/embetter" -> "koaning/bulk"
"koaning/embetter" -> "koaning/doubtlab"
"koaning/embetter" -> "koaning/human-learn"
"koaning/embetter" -> "koaning/simsity" ["e"=1]
"koaning/embetter" -> "koaning/scikit-lego"
"koaning/embetter" -> "koaning/scikit-partial"
"koaning/embetter" -> "koaning/whatlies"
"koaning/embetter" -> "skops-dev/skops"
"koaning/embetter" -> "koaning/cluestar"
"koaning/embetter" -> "probabl-ai/skore"
"koaning/embetter" -> "MNoichl/opinionated" ["e"=1]
"koaning/embetter" -> "NorskRegnesentral/skweak" ["e"=1]
"koaning/embetter" -> "koaning/clumper"
"koaning/embetter" -> "TutteInstitute/thisnotthat"
"koaning/embetter" -> "skrub-data/skrub"
"RecList/reclist" -> "jacopotagliabue/recs-at-resonable-scale"
"RecList/reclist" -> "RecList/evalRS-CIKM-2022"
"RecList/reclist" -> "jacopotagliabue/post-modern-stack"
"RecList/reclist" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"RecList/reclist" -> "jacopotagliabue/FREE_7773"
"RecList/reclist" -> "NVIDIA-Merlin/Merlin" ["e"=1]
"RecList/reclist" -> "NVIDIA-Merlin/models" ["e"=1]
"RecList/reclist" -> "coveooss/SIGIR-ecom-data-challenge"
"RecList/reclist" -> "rn5l/session-rec" ["e"=1]
"RecList/reclist" -> "RecList/evalRS-KDD-2023"
"RecList/reclist" -> "NVIDIA-Merlin/Transformers4Rec" ["e"=1]
"RecList/reclist" -> "vinid/cade"
"RecList/reclist" -> "fuzzylabs/awesome-open-mlops"
"RecList/reclist" -> "sisinflab/elliot" ["e"=1]
"RecList/reclist" -> "vinid/NegotiationArena"
"taki0112/vit-tensorflow" -> "martinsbruveris/tensorflow-image-models"
"taki0112/vit-tensorflow" -> "ashishpatel26/Vision-Transformer-Keras-Tensorflow-Pytorch-Examples"
"taki0112/vit-tensorflow" -> "leondgarse/keras_cv_attention_models"
"taki0112/vit-tensorflow" -> "faustomorales/vit-keras"
"taki0112/vit-tensorflow" -> "rishigami/Swin-Transformer-TF"
"taki0112/vit-tensorflow" -> "yingkaisha/keras-vision-transformer"
"taki0112/vit-tensorflow" -> "sayakpaul/ConvNeXt-TF"
"taki0112/vit-tensorflow" -> "taki0112/CLIP-Tensorflow"
"vanderschaarlab/hyperimpute" -> "vanderschaarlab/autoprognosis"
"vanderschaarlab/hyperimpute" -> "vanderschaarlab/MIRACLE"
"vanderschaarlab/hyperimpute" -> "vanderschaarlab/synthcity"
"Team-TUD/CTAB-GAN" -> "Team-TUD/CTAB-GAN-Plus"
"Team-TUD/CTAB-GAN" -> "zhao-zilong/Tabula"
"Team-TUD/CTAB-GAN" -> "Team-TUD/CTAB-GAN-Plus-DP"
"replicate/discord-bot-tutorial-code" -> "replicate/replicate-support-bot"
"replicate/discord-bot-tutorial-code" -> "replicate/getting-started-nextjs-language"
"numbbo/coco" -> "Evolutionary-Intelligence/pypop"
"numbbo/coco" -> "CMA-ES/pycma"
"numbbo/coco" -> "CyberAgentAILab/cmaes"
"numbbo/coco" -> "CMA-ES/libcmaes"
"numbbo/coco" -> "IOHprofiler/IOHexperimenter"
"numbbo/coco" -> "mikeagn/CEC2013" ["e"=1]
"numbbo/coco" -> "Evolutionary-Intelligence/DistributedEvolutionaryComputation"
"numbbo/coco" -> "uber-research/TuRBO"
"numbbo/coco" -> "Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP"
"numbbo/coco" -> "ryojitanabe/reproblems"
"numbbo/coco" -> "uber/bayesmark"
"numbbo/coco" -> "wujian16/Cornell-MOE"
"numbbo/coco" -> "mazhar-ansari-ardeh/BenchmarkFcns" ["e"=1]
"numbbo/coco" -> "ziyuw/rembo"
"dacbd/create-issue-action" -> "iterative/gto"
"iterative/gto" -> "dacbd/create-issue-action"
"iterative/gto" -> "iterative/terraform-provider-iterative"
"iterative/gto" -> "gennaro-tedesco/nvim-dvc"
"zenml-io/zenml-projects" -> "zenml-io/zenbytes"
"zenml-io/zenml-projects" -> "zenml-io/zenml-gitflow"
"zenml-io/zenml-projects" -> "zenml-io/mlstacks"
"zenml-io/zenml-projects" -> "zenml-io/zenml-dashboard"
"DataCanvasIO/HyperTS" -> "DataCanvasIO/YLearn" ["e"=1]
"DataCanvasIO/HyperTS" -> "winedarksea/AutoTS"
"DataCanvasIO/HyperTS" -> "PaddlePaddle/PaddleTS" ["e"=1]
"DataCanvasIO/HyperTS" -> "zillow/luminaire" ["e"=1]
"DataCanvasIO/HyperTS" -> "AutoViML/Auto_TS"
"Code-Pop/vue-3-typescript" -> "Code-Pop/pwa-with-vue-3"
"Code-Pop/vue-3-typescript" -> "Code-Pop/validating-vue3-forms"
"Code-Pop/vue-3-typescript" -> "Code-Pop/graphql-client"
"Code-Pop/vue-3-typescript" -> "Code-Pop/Unit-Testing-Vue-3"
"iterative/mlem" -> "iterative/terraform-provider-iterative"
"iterative/mlem" -> "iterative/gto"
"iterative/mlem" -> "iterative/vscode-dvc"
"iterative/mlem" -> "iterative/cml"
"iterative/mlem" -> "iterative/dvclive"
"iterative/mlem" -> "iterative/mlem.ai"
"iterative/mlem" -> "linkedin/FastTreeSHAP"
"iterative/mlem" -> "kunzite-app/008"
"iterative/mlem" -> "NannyML/nannyml"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-sklearn"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-evaluator"
"jpmml/sklearn2pmml" -> "SoftwareAG/nyoka"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-xgboost"
"jpmml/sklearn2pmml" -> "openscoring/openscoring"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-sparkml"
"jpmml/sklearn2pmml" -> "autodeployai/pypmml"
"jpmml/sklearn2pmml" -> "boredbird/woe"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-lightgbm"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-model"
"jpmml/sklearn2pmml" -> "ShichenXie/scorecardpy"
"jpmml/sklearn2pmml" -> "jpmml/pyspark2pmml"
"jpmml/sklearn2pmml" -> "scikit-learn-contrib/sklearn-pandas"
"jpmml/sklearn2pmml" -> "onnx/sklearn-onnx"
"jpmml/sklearn2pmml" -> "autodeployai/pmml4s"
"linkedin/FastTreeSHAP" -> "cerlymarco/shap-hypetune"
"linkedin/FastTreeSHAP" -> "interpretml/DiCE"
"linkedin/FastTreeSHAP" -> "rapidsai/gputreeshap" ["e"=1]
"linkedin/FastTreeSHAP" -> "mmschlk/shapiq" ["e"=1]
"linkedin/FastTreeSHAP" -> "Ekeany/Boruta-Shap"
"linkedin/FastTreeSHAP" -> "iancovert/sage" ["e"=1]
"linkedin/FastTreeSHAP" -> "MAIF/shapash"
"linkedin/FastTreeSHAP" -> "cod3licious/autofeat"
"linkedin/FastTreeSHAP" -> "blent-ai/ALEPython"
"linkedin/FastTreeSHAP" -> "fabsig/GPBoost"
"linkedin/FastTreeSHAP" -> "SeldonIO/alibi"
"linkedin/FastTreeSHAP" -> "scikit-learn-contrib/MAPIE"
"linkedin/FastTreeSHAP" -> "linkedin/greykite"
"mitre/menelaus" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"zenml-io/zenbytes" -> "zenml-io/zenml-projects"
"zenml-io/zenbytes" -> "zenml-io/mlstacks"
"zenml-io/zenbytes" -> "zenml-io/zenml-gitflow"
"zenml-io/zenbytes" -> "zenml-io/zenml-dashboard"
"interpretml/gam-changer" -> "interpretml/TalkToEBM"
"interpretml/gam-changer" -> "interpretml/ebm2onnx"
"scikit-learn-contrib/skglm" -> "mathurinm/libsvmdata"
"scikit-learn-contrib/skglm" -> "mathurinm/andersoncd"
"scikit-learn-contrib/skglm" -> "benchopt/benchopt"
"scikit-learn-contrib/skglm" -> "QB3/sparse-ho"
"scikit-learn-contrib/skglm" -> "mathurinm/celer"
"scikit-learn-contrib/skglm" -> "benchopt/benchmark_lasso"
"tblume1992/ThymeBoost" -> "tblume1992/LazyProphet"
"tblume1992/ThymeBoost" -> "carlomazzaferro/scikit-hts"
"tblume1992/ThymeBoost" -> "cerlymarco/tspiral"
"google-research/hyperbo" -> "google-research/gpax"
"google-research/hyperbo" -> "lfbo-ml/lfbo"
"jacopotagliabue/FREE_7773" -> "BauplanLabs/examples"
"g8a9/ferret" -> "g8a9/ear"
"g8a9/ferret" -> "MilaNLProc/simple-generation"
"g8a9/ferret" -> "vinid/NegotiationArena"
"g8a9/ferret" -> "MilaNLProc/twitter-demographer"
"g8a9/ferret" -> "MilaNLProc/feel-it"
"vanderschaarlab/synthcity" -> "yandex-research/tab-ddpm"
"vanderschaarlab/synthcity" -> "amazon-science/tabsyn"
"vanderschaarlab/synthcity" -> "vanderschaarlab/hyperimpute"
"vanderschaarlab/synthcity" -> "tabularis-ai/be_great"
"vanderschaarlab/synthcity" -> "vanderschaarlab/autoprognosis"
"vanderschaarlab/synthcity" -> "tennisonliu/GOGGLE"
"vanderschaarlab/synthcity" -> "SamsungSAILMontreal/ForestDiffusion"
"vanderschaarlab/synthcity" -> "ryan112358/private-pgm" ["e"=1]
"vanderschaarlab/synthcity" -> "sdv-dev/SDMetrics"
"vanderschaarlab/synthcity" -> "sdv-dev/SDV"
"vanderschaarlab/synthcity" -> "statice/anonymeter" ["e"=1]
"vanderschaarlab/synthcity" -> "alan-turing-institute/tapas" ["e"=1]
"vanderschaarlab/synthcity" -> "worldbank/REaLTabFormer"
"vanderschaarlab/synthcity" -> "opendp/smartnoise-sdk" ["e"=1]
"vanderschaarlab/synthcity" -> "Diyago/Tabular-data-generation"
"fuzzylabs/awesome-open-mlops" -> "bodywork-ml/bodywork-core"
"fuzzylabs/awesome-open-mlops" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"fuzzylabs/awesome-open-mlops" -> "datarevenue-berlin/OpenMLOps"
"fuzzylabs/awesome-open-mlops" -> "zenml-io/mlstacks"
"fuzzylabs/awesome-open-mlops" -> "operatorai/modelstore"
"fuzzylabs/awesome-open-mlops" -> "RecList/reclist"
"fuzzylabs/awesome-open-mlops" -> "jacopotagliabue/post-modern-stack"
"fuzzylabs/awesome-open-mlops" -> "jacopotagliabue/recs-at-resonable-scale"
"fuzzylabs/awesome-open-mlops" -> "iterative/terraform-provider-iterative"
"fuzzylabs/awesome-open-mlops" -> "fuzzylabs/matcha"
"auto4opt/AutoOpt" -> "Evolutionary-Intelligence/dpop7"
"Kaixhin/FGLab" -> "Kaixhin/FGMachine"
"Kaixhin/FGLab" -> "empiricalci/emp"
"predict-idlab/powershap" -> "predict-idlab/tsflex"
"predict-idlab/powershap" -> "cerlymarco/shap-hypetune"
"predict-idlab/powershap" -> "Ekeany/Boruta-Shap"
"predict-idlab/powershap" -> "ThomasBury/arfs"
"predict-idlab/powershap" -> "ing-bank/probatus"
"predict-idlab/powershap" -> "predict-idlab/sleep-linear" ["e"=1]
"jpmml/jpmml-sklearn" -> "jpmml/sklearn2pmml"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-evaluator"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-sparkml"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-lightgbm"
"jpmml/jpmml-sklearn" -> "openscoring/openscoring"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-model"
"jpmml/jpmml-sklearn" -> "SoftwareAG/nyoka"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-tensorflow"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-evaluator-spark"
"jpmml/jpmml-sklearn" -> "combust/mleap" ["e"=1]
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-xgboost"
"jpmml/jpmml-sklearn" -> "nok/sklearn-porter"
"jpmml/jpmml-sklearn" -> "boredbird/woe"
"jpmml/jpmml-sklearn" -> "autodeployai/pypmml"
"Waikato/wekaDeeplearning4j" -> "Waikato/weka-3.8"
"Waikato/wekaDeeplearning4j" -> "Waikato/meka"
"IFCA-Advanced-Computing/frouros" -> "mitre/menelaus"
"zillow/quantile-forest" -> "StatMixedML/LightGBMLSS"
"zillow/quantile-forest" -> "henrikbostrom/crepes" ["e"=1]
"zillow/quantile-forest" -> "FilippoMB/Ensemble-Conformalized-Quantile-Regression" ["e"=1]
"zillow/quantile-forest" -> "elephaint/pgbm"
"zillow/quantile-forest" -> "yromano/cqr" ["e"=1]
"zillow/quantile-forest" -> "scikit-learn-contrib/MAPIE"
"zillow/quantile-forest" -> "mpalenciaolivar/Awesome-Decision-Science" ["e"=1]
"zillow/quantile-forest" -> "ip200/venn-abers" ["e"=1]
"zillow/quantile-forest" -> "superlinear-ai/conformal-tights" ["e"=1]
"zillow/quantile-forest" -> "rick12000/confopt" ["e"=1]
"zillow/quantile-forest" -> "joneswack/conformal-predictions-from-scratch" ["e"=1]
"zillow/quantile-forest" -> "deel-ai/puncc" ["e"=1]
"tblume1992/LazyProphet" -> "tblume1992/ThymeBoost"
"koulakis/h-nne" -> "Renumics/awesome-anything2vec"
"TutteInstitute/thisnotthat" -> "TutteInstitute/vectorizers"
"TutteInstitute/thisnotthat" -> "lmcinnes/thisnotthat"
"TutteInstitute/thisnotthat" -> "koaning/bulk"
"vanderschaarlab/autoprognosis" -> "vanderschaarlab/hyperimpute"
"vanderschaarlab/autoprognosis" -> "vanderschaarlab/Interpretability"
"radrumond/timehetnet" -> "YuhaoWong0103/fsl_ts"
"radrumond/timehetnet" -> "DrSasanBarak/metats"
"radrumond/timehetnet" -> "xiaofeng-github/Meta-Learning4FSTSF"
"MilaNLProc/twitter-demographer" -> "vinid/quica"
"MilaNLProc/twitter-demographer" -> "MilaNLProc/simple-generation"
"koaning/scikit-partial" -> "koaning/scikit-prune"
"Waikato/meka" -> "Waikato/wekaDeeplearning4j"
"Waikato/meka" -> "KKimura360/MLC_toolbox"
"Waikato/meka" -> "Waikato/moa"
"Waikato/meka" -> "tsoumakas/mulan"
"Waikato/meka" -> "outcastofmusic/quick-nlp" ["e"=1]
"automl/TransformersCanDoBayesianInference" -> "automl/PFNs"
"automl/TransformersCanDoBayesianInference" -> "automl/PFNs4BO"
"automl/TransformersCanDoBayesianInference" -> "microsoft/ticl"
"automl/TransformersCanDoBayesianInference" -> "machinelearningnuremberg/FSBO"
"iterative/demo-bank-customer-churn" -> "iterative/awesome-iterative-projects"
"beroguedou/basmatinet" -> "beroguedou/churner_frontend"
"beroguedou/basmatinet" -> "beroguedou/churner"
"MAIF/eurybia" -> "MAIF/arta"
"MAIF/eurybia" -> "salimamoukou/acv00"
"MAIF/eurybia" -> "MAIF/melusine"
"automl/zero-shot-automl-with-pretrained-models" -> "automl/quicktunetool"
"automl/zero-shot-automl-with-pretrained-models" -> "machinelearningnuremberg/DyHPO"
"ianozsvald/data_science_delivered" -> "tmadl/sklearn-expertsys"
"ianozsvald/data_science_delivered" -> "AustinRochford/PyCEbox"
"ianozsvald/data_science_delivered" -> "engarde-dev/engarde" ["e"=1]
"ianozsvald/data_science_delivered" -> "ericmjl/bayesian-analysis-recipes" ["e"=1]
"ianozsvald/data_science_delivered" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" ["e"=1]
"ianozsvald/data_science_delivered" -> "RJT1990/pyflux"
"ianozsvald/data_science_delivered" -> "jxieeducation/DIY-Data-Science" ["e"=1]
"ianozsvald/data_science_delivered" -> "dabl/dabl"
"ubc-systopia/gosdt-guesses" -> "interpretml/fastSparse"
"ubc-systopia/gosdt-guesses" -> "Jimmy-Lin/GeneralizedOptimalSparseDecisionTrees"
"PacktPublishing/Comet-for-Data-Science" -> "PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python"
"PacktPublishing/Comet-for-Data-Science" -> "PacktPublishing/Practical-Deep-Learning-at-Scale-with-MLFlow"
"PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python" -> "PacktPublishing/Comet-for-Data-Science"
"PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python" -> "PacktPublishing/Practical-Deep-Learning-at-Scale-with-MLFlow"
"PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python" -> "PacktPublishing/Applied-Machine-Learning-Explainability-Techniques"
"PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python" -> "PacktPublishing/Hyperparameter-Tuning-with-Python"
"jacopotagliabue/post-modern-stack" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"jacopotagliabue/post-modern-stack" -> "jacopotagliabue/recs-at-resonable-scale"
"jacopotagliabue/post-modern-stack" -> "jacopotagliabue/paas-data-ingestion"
"jacopotagliabue/post-modern-stack" -> "RecList/reclist"
"jacopotagliabue/post-modern-stack" -> "jacopotagliabue/no-ops-machine-learning"
"aporia-ai/inferencedb" -> "aporia-ai/dmatrix2np"
"sayakpaul/ConvNeXt-TF" -> "bamps53/convnext-tf"
"online-ml/deep-river" -> "kulbachcedric/EvOAutoML"
"online-ml/deep-river" -> "online-ml/awesome-online-machine-learning"
"online-ml/beaver" -> "MaxHalford/taxi-demo-rp-mz-rv-rd-st"
"RyanWangZf/SurvTRACE" -> "shihux/sa_transformer"
"dssg/police-eis" -> "dssg/dirtyduck"
"sofienkaabar/contrarian-trading-strategies" -> "sofienkaabar/the-book-of-trading-strategies"
"sofienkaabar/contrarian-trading-strategies" -> "sofienkaabar/trend-following-strategies"
"sofienkaabar/contrarian-trading-strategies" -> "sofienkaabar/mastering-financial-pattern-recognition"
"robber5/wifi-killer" -> "arslanmughal99/phisher"
"awslabs/kubeflow-manifests" -> "aws-controllers-k8s/sagemaker-controller" ["e"=1]
"awslabs/kubeflow-manifests" -> "deployKF/deployKF"
"martinsbruveris/tensorflow-image-models" -> "leondgarse/keras_cv_attention_models"
"martinsbruveris/tensorflow-image-models" -> "rishigami/Swin-Transformer-TF"
"martinsbruveris/tensorflow-image-models" -> "leondgarse/keras_efficientnet_v2"
"martinsbruveris/tensorflow-image-models" -> "taki0112/vit-tensorflow"
"martinsbruveris/tensorflow-image-models" -> "hirune924/imgaug-tf"
"martinsbruveris/tensorflow-image-models" -> "gietema/clusterfun"
"martinsbruveris/tensorflow-image-models" -> "ryanwongsa/kaggle-birdsong-recognition" ["e"=1]
"martinsbruveris/tensorflow-image-models" -> "Burf/TFDetection"
"jpmml/jpmml-evaluator-spark" -> "jpmml/jpmml-sparkml"
"shib0li/BMBO-DARN" -> "shib0li/DNN-MFBO"
"gretelai/synthetic-data-genomics" -> "gretelai/gdpr-helpers"
"Kaixhin/FGMachine" -> "Kaixhin/FGLab"
"katiana22/TL-DeepONet" -> "PredictiveIntelligenceLab/ImprovedDeepONets"
"Code-Pop/from-vuex-to-pinia" -> "Code-Pop/validating-vue3-forms"
"autonlab/DeepSurvivalMachines" -> "Jeanselme/DynamicDeepHit"
"thelovelab/tximport" -> "thelovelab/tximeta"
"thelovelab/tximport" -> "COMBINE-lab/shoal"
"koaning/cluestar" -> "koaning/doubtlab"
"koaning/cluestar" -> "koaning/embetter"
"koaning/cluestar" -> "koaning/bulk"
"koaning/cluestar" -> "koaning/whatlies"
"GGiecold-zz/Cluster_Ensembles" -> "NaegleLab/OpenEnsembles"
"Code-Pop/graphql-server" -> "Code-Pop/graphql-client"
"PathologyDataScience/SurvivalNet" -> "robi56/Survival-Analysis-using-Deep-Learning"
"PathologyDataScience/SurvivalNet" -> "PathologyDataScience/SCNN"
"PathologyDataScience/SurvivalNet" -> "jaredleekatzman/DeepSurv"
"apache/kvrocks-website" -> "RocksLabs/kvrocks_exporter"
"gretelai/trainer" -> "gretelai/gdpr-helpers"
"gretelai/trainer" -> "gretelai/GAN-location-generator"
"AntoineSimoulin/pytree" -> "Quantmetry/grand-debat"
"fabianp/group_lasso" -> "rtavenar/SparseGroupLasso"
"twitter-research/feature-propagation" -> "daehoum1/pcfi"
"twitter-research/feature-propagation" -> "marblet/GCNmf"
"algofairness/BlackBoxAuditing" -> "algofairness/fairness-comparison"
"algofairness/BlackBoxAuditing" -> "adebayoj/fairml"
"algofairness/BlackBoxAuditing" -> "geomblog/fairness"
"EvoConJP/CMA-ES_with_Margin" -> "nomuramasahir0/crfmnes"
"birobirobiro/live-twitch-rocket-travel" -> "birobirobiro/live-twitch-lp-gpt3"
"NotMatthewGriffin/pterodactyl" -> "Striveworks/Flyte-Wingman"
"NotMatthewGriffin/pterodactyl" -> "flyteorg/flyteplugins"
"cleanlab/cleanlab-studio" -> "cleanlab/cleanlab-tlm"
"Code-Pop/graphql-client" -> "Code-Pop/graphql-server"
"Code-Pop/graphql-client" -> "Code-Pop/pwa-with-vue-3"
"RocksLabs/kvrocks_exporter" -> "apache/kvrocks-website"
"RocksLabs/kvrocks_exporter" -> "apache/kvrocks-controller"
"tuvovan/ml_in_production" -> "thanhhau097/mlpipeline"
"birobirobiro/my-onix-web" -> "birobirobiro/live-twitch-lp-gpt3"
"iterative/scmrepo" -> "iterative/dvc-bench"
"iterative/dvc-data" -> "iterative/scmrepo"
"iterative/dvc-data" -> "iterative/dvc-bench"
"iterative/dvc-data" -> "iterative/dvcyaml-schema"
"iterative/dvc-data" -> "iterative/dvc-objects"
"bentoml/yatai-deployment" -> "bentoml/yatai-image-builder"
"birobirobiro/live-twitch-lp-gpt3" -> "birobirobiro/live-twitch-rocket-travel"
"maxpumperla/hyperas" -> "hyperopt/hyperopt"
"maxpumperla/hyperas" -> "autonomio/talos"
"maxpumperla/hyperas" -> "maxpumperla/elephas" ["e"=1]
"maxpumperla/hyperas" -> "raghakot/keras-vis" ["e"=1]
"maxpumperla/hyperas" -> "hyperopt/hyperopt-sklearn"
"maxpumperla/hyperas" -> "keras-team/keras-tuner"
"maxpumperla/hyperas" -> "fchollet/keras-resources" ["e"=1]
"maxpumperla/hyperas" -> "scikit-optimize/scikit-optimize"
"maxpumperla/hyperas" -> "farizrahman4u/seq2seq" ["e"=1]
"maxpumperla/hyperas" -> "keras-rl/keras-rl" ["e"=1]
"maxpumperla/hyperas" -> "keplr-io/hera" ["e"=1]
"maxpumperla/hyperas" -> "bstriner/keras-adversarial" ["e"=1]
"maxpumperla/hyperas" -> "keplr-io/quiver" ["e"=1]
"maxpumperla/hyperas" -> "philipperemy/keras-attention" ["e"=1]
"maxpumperla/hyperas" -> "bckenstler/CLR" ["e"=1]
"marcotcr/lime" -> "shap/shap"
"marcotcr/lime" -> "interpretml/interpret"
"marcotcr/lime" -> "TeamHG-Memex/eli5"
"marcotcr/lime" -> "EpistasisLab/tpot"
"marcotcr/lime" -> "scikit-learn-contrib/imbalanced-learn"
"marcotcr/lime" -> "hyperopt/hyperopt"
"marcotcr/lime" -> "automl/auto-sklearn"
"marcotcr/lime" -> "ydataai/ydata-profiling"
"marcotcr/lime" -> "alteryx/featuretools"
"marcotcr/lime" -> "blue-yonder/tsfresh"
"marcotcr/lime" -> "dmlc/xgboost" ["e"=1]
"marcotcr/lime" -> "microsoft/LightGBM"
"marcotcr/lime" -> "flairNLP/flair" ["e"=1]
"marcotcr/lime" -> "facebookresearch/fastText" ["e"=1]
"marcotcr/lime" -> "PAIR-code/facets"
"DistrictDataLabs/yellowbrick" -> "rasbt/mlxtend"
"DistrictDataLabs/yellowbrick" -> "TeamHG-Memex/eli5"
"DistrictDataLabs/yellowbrick" -> "reiinakano/scikit-plot"
"DistrictDataLabs/yellowbrick" -> "ResidentMario/missingno"
"DistrictDataLabs/yellowbrick" -> "scikit-learn-contrib/imbalanced-learn"
"DistrictDataLabs/yellowbrick" -> "scikit-optimize/scikit-optimize"
"DistrictDataLabs/yellowbrick" -> "EpistasisLab/tpot"
"DistrictDataLabs/yellowbrick" -> "scikit-learn-contrib/category_encoders"
"DistrictDataLabs/yellowbrick" -> "blue-yonder/tsfresh"
"DistrictDataLabs/yellowbrick" -> "feature-engine/feature_engine"
"DistrictDataLabs/yellowbrick" -> "ydataai/ydata-profiling"
"DistrictDataLabs/yellowbrick" -> "alteryx/featuretools"
"DistrictDataLabs/yellowbrick" -> "vega/altair" ["e"=1]
"DistrictDataLabs/yellowbrick" -> "automl/auto-sklearn"
"DistrictDataLabs/yellowbrick" -> "scikit-learn-contrib/sklearn-pandas"
"ResidentMario/missingno" -> "ydataai/ydata-profiling"
"ResidentMario/missingno" -> "DistrictDataLabs/yellowbrick"
"ResidentMario/missingno" -> "scikit-learn-contrib/imbalanced-learn"
"ResidentMario/missingno" -> "iskandr/fancyimpute"
"ResidentMario/missingno" -> "rasbt/mlxtend"
"ResidentMario/missingno" -> "EpistasisLab/tpot"
"ResidentMario/missingno" -> "TeamHG-Memex/eli5"
"ResidentMario/missingno" -> "scikit-learn-contrib/category_encoders"
"ResidentMario/missingno" -> "vega/altair" ["e"=1]
"ResidentMario/missingno" -> "blue-yonder/tsfresh"
"ResidentMario/missingno" -> "modin-project/modin"
"ResidentMario/missingno" -> "fbdesignpro/sweetviz"
"ResidentMario/missingno" -> "feature-engine/feature_engine"
"ResidentMario/missingno" -> "reiinakano/scikit-plot"
"ResidentMario/missingno" -> "alteryx/featuretools"
"propublica/compas-analysis" -> "mbilalzafar/fair-classification"
"propublica/compas-analysis" -> "socialfoundations/folktables"
"propublica/compas-analysis" -> "adebayoj/fairml"
"propublica/compas-analysis" -> "dssg/aequitas"
"propublica/compas-analysis" -> "algofairness/fairness-comparison"
"propublica/compas-analysis" -> "fairlearn/fairlearn"
"propublica/compas-analysis" -> "Trusted-AI/AIF360"
"propublica/compas-analysis" -> "datamllab/awesome-fairness-in-ai"
"propublica/compas-analysis" -> "google/ml-fairness-gym"
"propublica/compas-analysis" -> "newsdev/stevedore" ["e"=1]
"propublica/compas-analysis" -> "algofairness/BlackBoxAuditing"
"propublica/compas-analysis" -> "oracle/skater"
"propublica/compas-analysis" -> "invinst/chicago-police-data" ["e"=1]
"propublica/compas-analysis" -> "MimiOnuoha/missing-datasets" ["e"=1]
"propublica/compas-analysis" -> "tolga-b/debiaswe" ["e"=1]
"zenml-io/awesome-open-data-annotation" -> "zzsza/Boostcamp-AI-Tech-Product-Serving" ["e"=1]
"zenml-io/awesome-open-data-annotation" -> "zenml-io/mlstacks"
"zenml-io/awesome-open-data-annotation" -> "tunib-ai/large-scale-lm-tutorials" ["e"=1]
"zenml-io/awesome-open-data-annotation" -> "Renumics/awesome-open-data-centric-ai"
"zenml-io/awesome-open-data-annotation" -> "zenml-io/zenml-projects"
"zenml-io/awesome-open-data-annotation" -> "smilegate-ai/korean_smile_style_dataset" ["e"=1]
"zenml-io/awesome-open-data-annotation" -> "eubinecto/politely"
"zenml-io/awesome-open-data-annotation" -> "smilegate-ai/korean_unsmile_dataset" ["e"=1]
"xorbitsai/xorbits" -> "mars-project/mars" ["e"=1]
"xorbitsai/xorbits" -> "xorbitsai/xoscar"
"xorbitsai/xorbits" -> "xorbitsai/inference" ["e"=1]
"xorbitsai/xorbits" -> "modin-project/modin"
"xorbitsai/xorbits" -> "tensorchord/envd" ["e"=1]
"xorbitsai/xorbits" -> "sfu-db/connector-x" ["e"=1]
"xorbitsai/xorbits" -> "muyuworks/myla"
"xorbitsai/xorbits" -> "godaai/scale-py-zh"
"xorbitsai/xorbits" -> "dask/dask" ["e"=1]
"xorbitsai/xorbits" -> "nalepae/pandarallel"
"xorbitsai/xorbits" -> "WarrenWen666/AI-Software-Startups" ["e"=1]
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/scikit-learn-extra"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/project-template"
"scikit-learn-contrib/scikit-learn-contrib" -> "dask/dask-searchcv" ["e"=1]
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/forest-confidence-interval"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/DESlib"
"scikit-learn-contrib/scikit-learn-contrib" -> "RGF-team/rgf" ["e"=1]
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/category_encoders"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/scikit-learn-contrib" -> "jfloff/pywFM" ["e"=1]
"scikit-learn-contrib/scikit-learn-contrib" -> "hyperopt/hyperopt-sklearn"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/py-earth"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/sklearn-pandas"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/polylearn" ["e"=1]
"scikit-learn-contrib/scikit-learn-contrib" -> "civisanalytics/python-glmnet" ["e"=1]
"kylemcdonald/Parametric-t-SNE" -> "jsilter/parametric_tsne"
"kylemcdonald/Parametric-t-SNE" -> "zaburo-ch/Parametric-t-SNE-in-Keras"
"fchollet/stable-diffusion-tensorflow" -> "divamgupta/stable-diffusion-tensorflow" ["e"=1]
"fchollet/stable-diffusion-tensorflow" -> "keras-team/keras-rs"
"sofienkaabar/mastering-financial-pattern-recognition" -> "sofienkaabar/trend-following-strategies"
"sofienkaabar/mastering-financial-pattern-recognition" -> "sofienkaabar/contrarian-trading-strategies"
"sofienkaabar/mastering-financial-pattern-recognition" -> "sofienkaabar/the-book-of-trading-strategies"
"sofienkaabar/mastering-financial-pattern-recognition" -> "sofienkaabar/deep-learning-for-finance"
"allero-io/allero" -> "permitio/OPToggles"
"scikit-learn-contrib/boruta_py" -> "Ekeany/Boruta-Shap"
"scikit-learn-contrib/boruta_py" -> "jundongl/scikit-feature"
"scikit-learn-contrib/boruta_py" -> "scikit-learn-contrib/category_encoders"
"scikit-learn-contrib/boruta_py" -> "hyperopt/hyperopt-sklearn"
"scikit-learn-contrib/boruta_py" -> "danielhomola/mifs"
"scikit-learn-contrib/boruta_py" -> "feature-engine/feature_engine"
"scikit-learn-contrib/boruta_py" -> "EpistasisLab/scikit-rebate"
"scikit-learn-contrib/boruta_py" -> "TeamHG-Memex/eli5"
"scikit-learn-contrib/boruta_py" -> "stanfordmlgroup/ngboost"
"scikit-learn-contrib/boruta_py" -> "DistrictDataLabs/yellowbrick"
"scikit-learn-contrib/boruta_py" -> "scikit-optimize/scikit-optimize"
"scikit-learn-contrib/boruta_py" -> "scikit-learn-contrib/imbalanced-learn"
"scikit-learn-contrib/boruta_py" -> "rasbt/mlxtend"
"scikit-learn-contrib/boruta_py" -> "scikit-learn-contrib/skope-rules"
"scikit-learn-contrib/boruta_py" -> "scikit-learn-contrib/stability-selection"
"RJT1990/pyflux" -> "bashtage/arch" ["e"=1]
"RJT1990/pyflux" -> "tslearn-team/tslearn"
"RJT1990/pyflux" -> "blue-yonder/tsfresh"
"RJT1990/pyflux" -> "alkaline-ml/pmdarima"
"RJT1990/pyflux" -> "cesium-ml/cesium" ["e"=1]
"RJT1990/pyflux" -> "scikit-optimize/scikit-optimize"
"RJT1990/pyflux" -> "wwrechard/pydlm"
"RJT1990/pyflux" -> "jmschrei/pomegranate"
"RJT1990/pyflux" -> "johannfaouzi/pyts" ["e"=1]
"RJT1990/pyflux" -> "blei-lab/edward"
"RJT1990/pyflux" -> "scikit-learn-contrib/imbalanced-learn"
"RJT1990/pyflux" -> "MaxBenChrist/awesome_time_series_in_python"
"RJT1990/pyflux" -> "man-group/arctic" ["e"=1]
"RJT1990/pyflux" -> "reiinakano/scikit-plot"
"RJT1990/pyflux" -> "awslabs/gluonts"
"blei-lab/edward" -> "pyro-ppl/pyro"
"blei-lab/edward" -> "pymc-devs/pymc"
"blei-lab/edward" -> "tensorflow/probability"
"blei-lab/edward" -> "HIPS/autograd"
"blei-lab/edward" -> "GPflow/GPflow"
"blei-lab/edward" -> "stan-dev/stan" ["e"=1]
"blei-lab/edward" -> "thu-ml/zhusuan"
"blei-lab/edward" -> "jmschrei/pomegranate"
"blei-lab/edward" -> "google-deepmind/sonnet" ["e"=1]
"blei-lab/edward" -> "pgmpy/pgmpy" ["e"=1]
"blei-lab/edward" -> "markdregan/Bayesian-Modelling-in-Python" ["e"=1]
"blei-lab/edward" -> "Lasagne/Lasagne" ["e"=1]
"blei-lab/edward" -> "kjw0612/awesome-rnn" ["e"=1]
"blei-lab/edward" -> "wiseodd/generative-models" ["e"=1]
"blei-lab/edward" -> "hyperopt/hyperopt"
"scikit-optimize/scikit-optimize" -> "hyperopt/hyperopt"
"scikit-optimize/scikit-optimize" -> "hyperopt/hyperopt-sklearn"
"scikit-optimize/scikit-optimize" -> "bayesian-optimization/BayesianOptimization"
"scikit-optimize/scikit-optimize" -> "automl/auto-sklearn"
"scikit-optimize/scikit-optimize" -> "scikit-learn-contrib/imbalanced-learn"
"scikit-optimize/scikit-optimize" -> "reiinakano/scikit-plot"
"scikit-optimize/scikit-optimize" -> "DistrictDataLabs/yellowbrick"
"scikit-optimize/scikit-optimize" -> "TeamHG-Memex/eli5"
"scikit-optimize/scikit-optimize" -> "rasbt/mlxtend"
"scikit-optimize/scikit-optimize" -> "scikit-learn-contrib/category_encoders"
"scikit-optimize/scikit-optimize" -> "EpistasisLab/tpot"
"scikit-optimize/scikit-optimize" -> "HIPS/Spearmint"
"scikit-optimize/scikit-optimize" -> "SheffieldML/GPyOpt"
"scikit-optimize/scikit-optimize" -> "automl/SMAC3"
"scikit-optimize/scikit-optimize" -> "pytorch/botorch"
"tabularis-ai/be_great" -> "worldbank/REaLTabFormer"
"tabularis-ai/be_great" -> "yandex-research/tab-ddpm"
"tabularis-ai/be_great" -> "ZhangTP1996/TapTap"
"tabularis-ai/be_great" -> "zhao-zilong/Tabula"
"tabularis-ai/be_great" -> "Team-TUD/CTAB-GAN"
"tabularis-ai/be_great" -> "amazon-science/tabsyn"
"tabularis-ai/be_great" -> "Team-TUD/CTAB-GAN-Plus"
"tabularis-ai/be_great" -> "vanderschaarlab/synthcity"
"tabularis-ai/be_great" -> "kathrinse/TabSurvey" ["e"=1]
"tabularis-ai/be_great" -> "clinicalml/TabLLM" ["e"=1]
"tabularis-ai/be_great" -> "mahmoodm2/tableGAN"
"tabularis-ai/be_great" -> "tanfiona/LLM-on-Tabular-Data-Prediction-Table-Understanding-Data-Generation" ["e"=1]
"tabularis-ai/be_great" -> "sdv-dev/SDGym"
"tabularis-ai/be_great" -> "vanderschaarlab/hyperimpute"
"erykml/Python-for-Finance-Cookbook-2E" -> "PacktPublishing/Python-for-Finance-Cookbook" ["e"=1]
"erykml/Python-for-Finance-Cookbook-2E" -> "PacktPublishing/Python-for-Finance-Cookbook-2E"
"erykml/Python-for-Finance-Cookbook-2E" -> "sofienkaabar/mastering-financial-pattern-recognition"
"erykml/Python-for-Finance-Cookbook-2E" -> "tidy-finance/website"
"gretelai/awesome-synthetic-data" -> "gretelai/trainer"
"gretelai/awesome-synthetic-data" -> "gretelai/synthetic-data-genomics"
"gretelai/awesome-synthetic-data" -> "gretelai/gdpr-helpers"
"gretelai/awesome-synthetic-data" -> "statice/awesome-synthetic-data"
"gretelai/awesome-synthetic-data" -> "gretelai/gretel-tools"
"gretelai/awesome-synthetic-data" -> "gretelai/gretel-blueprints"
"gretelai/awesome-synthetic-data" -> "gretelai/gretel-python-client"
"gretelai/awesome-synthetic-data" -> "gretelai/GAN-location-generator"
"gretelai/gdpr-helpers" -> "gretelai/trainer"
"gretelai/gdpr-helpers" -> "gretelai/synthetic-data-genomics"
"gretelai/gdpr-helpers" -> "gretelai/gretel-python-client"
"MI2DataLab/survshap" -> "ModelOriented/survex" ["e"=1]
"MI2DataLab/survshap" -> "RyanWangZf/SurvTRACE"
"MI2DataLab/survshap" -> "autonlab/auton-survival"
"Nixtla/hierarchicalforecast" -> "Nixtla/mlforecast"
"Nixtla/hierarchicalforecast" -> "Nixtla/tsfeatures"
"Nixtla/hierarchicalforecast" -> "Nixtla/statsforecast"
"Nixtla/hierarchicalforecast" -> "functime-org/functime" ["e"=1]
"Nixtla/hierarchicalforecast" -> "Nixtla/neuralforecast"
"Nixtla/hierarchicalforecast" -> "Nixtla/transfer-learning-time-series"
"Nixtla/hierarchicalforecast" -> "Nixtla/datasetsforecast"
"Nixtla/hierarchicalforecast" -> "Nixtla/utilsforecast"
"Nixtla/hierarchicalforecast" -> "carlomazzaferro/scikit-hts"
"Nixtla/hierarchicalforecast" -> "scikit-learn-contrib/MAPIE"
"Nixtla/hierarchicalforecast" -> "StatMixedML/LightGBMLSS"
"Nixtla/hierarchicalforecast" -> "Nixtla/nixtla"
"Nixtla/hierarchicalforecast" -> "zillow/quantile-forest"
"Nixtla/hierarchicalforecast" -> "Mcompetitions/M5-methods" ["e"=1]
"Nixtla/hierarchicalforecast" -> "henrikbostrom/crepes" ["e"=1]
"Nixtla/fpp3-python" -> "ysraell/forecasting"
"automl/ConfigSpace" -> "automl/DeepCAVE"
"automl/ConfigSpace" -> "automl/CAVE"
"automl/ConfigSpace" -> "automl/HpBandSter"
"automl/ConfigSpace" -> "automl/SMAC3"
"automl/ConfigSpace" -> "automl/BOAH"
"automl/ConfigSpace" -> "automl/LCBench"
"automl/ConfigSpace" -> "automl/HPOBench"
"automl/ConfigSpace" -> "automl/DEHB"
"automl/ConfigSpace" -> "openml/automlbenchmark"
"automl/ConfigSpace" -> "automl-conf/LatexTemplate"
"automl/ConfigSpace" -> "automl/fanova"
"jaredleekatzman/DeepSurv" -> "havakv/pycox"
"jaredleekatzman/DeepSurv" -> "chl8856/DeepHit"
"jaredleekatzman/DeepSurv" -> "czifan/DeepSurv.pytorch"
"jaredleekatzman/DeepSurv" -> "robi56/Survival-Analysis-using-Deep-Learning"
"jaredleekatzman/DeepSurv" -> "sebp/scikit-survival"
"jaredleekatzman/DeepSurv" -> "liupei101/TFDeepSurv"
"jaredleekatzman/DeepSurv" -> "PathologyDataScience/SurvivalNet"
"jaredleekatzman/DeepSurv" -> "rk2900/DRSA"
"jaredleekatzman/DeepSurv" -> "autonlab/auton-survival"
"jaredleekatzman/DeepSurv" -> "square/pysurvival"
"jaredleekatzman/DeepSurv" -> "CamDavidsonPilon/lifelines"
"jaredleekatzman/DeepSurv" -> "MGensheimer/nnet-survival"
"jaredleekatzman/DeepSurv" -> "chl8856/Dynamic-DeepHit"
"jaredleekatzman/DeepSurv" -> "arturomoncadatorres/deepsurvk"
"jaredleekatzman/DeepSurv" -> "MI2DataLab/survshap"
"dssg/MLforPublicPolicy" -> "dssg/triage"
"dssg/MLforPublicPolicy" -> "dssg/data-science-101"
"dssg/MLforPublicPolicy" -> "dssg/mlforpublicpolicylab"
"dssg/MLforPublicPolicy" -> "dssg/dsapp-reading-group"
"Renumics/spotlight" -> "Renumics/sliceguard"
"Renumics/spotlight" -> "Renumics/renumics-rag"
"Renumics/spotlight" -> "Renumics/awesome-open-data-centric-ai"
"Renumics/spotlight" -> "Renumics/awesome-anything2vec"
"Renumics/spotlight" -> "visual-layer/fastdup"
"Renumics/spotlight" -> "gabrielchua/RAGxplorer" ["e"=1]
"Renumics/spotlight" -> "huggingface/setfit" ["e"=1]
"Renumics/spotlight" -> "mckinsey/vizro" ["e"=1]
"Renumics/spotlight" -> "flekschas/jupyter-scatter" ["e"=1]
"Renumics/spotlight" -> "explosion/curated-transformers" ["e"=1]
"Renumics/spotlight" -> "cleanlab/cleanlab"
"Renumics/spotlight" -> "NannyML/nannyml"
"Renumics/spotlight" -> "Renumics/mesh2vec"
"Renumics/spotlight" -> "evidentlyai/evidently"
"Renumics/spotlight" -> "koaning/embetter"
"dssg/hitchhikers-guide" -> "dssg/triage"
"dssg/hitchhikers-guide" -> "dssg/MLforPublicPolicy"
"dssg/hitchhikers-guide" -> "dssg/mlforpublicpolicylab"
"dssg/hitchhikers-guide" -> "dssg/aequitas"
"dssg/hitchhikers-guide" -> "dssg/data-science-101"
"dssg/hitchhikers-guide" -> "dssg/police-eis"
"dssg/hitchhikers-guide" -> "dssg/dirtyduck"
"dssg/hitchhikers-guide" -> "DeltaAnalytics/machine_learning_for_good"
"dssg/hitchhikers-guide" -> "dssg/dsapp-reading-group"
"dssg/hitchhikers-guide" -> "gboeing/ppde642" ["e"=1]
"dssg/hitchhikers-guide" -> "drivendataorg/competition-winners" ["e"=1]
"dssg/hitchhikers-guide" -> "compsocialscience/summer-institute" ["e"=1]
"dssg/hitchhikers-guide" -> "hadley/stats337" ["e"=1]
"dssg/hitchhikers-guide" -> "rayidghani/magicloops"
"dssg/hitchhikers-guide" -> "psychothan/data-engineering-101" ["e"=1]
"luckyerdog/feature_select" -> "weepon/feature_selection"
"scikit-learn-contrib/forest-confidence-interval" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/forest-confidence-interval" -> "swager/randomForestCI"
"scikit-learn-contrib/forest-confidence-interval" -> "ogrisel/pygbm"
"scikit-learn-contrib/forest-confidence-interval" -> "EpistasisLab/scikit-rebate"
"scikit-learn-contrib/forest-confidence-interval" -> "scikit-garden/scikit-garden"
"scikit-learn-contrib/forest-confidence-interval" -> "scikit-learn-contrib/py-earth"
"scikit-learn-contrib/forest-confidence-interval" -> "AmazaspShumik/sklearn-bayes" ["e"=1]
"replicate/replicate-javascript" -> "replicate/replicate-python"
"replicate/replicate-javascript" -> "replicate/getting-started-nextjs"
"dcai-course/dcai-lab" -> "dcai-course/dcai-course"
"dcai-course/dcai-lab" -> "daochenzha/data-centric-AI"
"dcai-course/dcai-lab" -> "cleanlab/cleanvision"
"predict-idlab/tsdownsample" -> "jvdd/argminmax"
"replicate/lora-training" -> "replicate/lora-inference"
"replicate/cog-stable-diffusion" -> "replicate/dreambooth"
"replicate/cog-stable-diffusion" -> "replicate/cog"
"replicate/cog-stable-diffusion" -> "andreasjansson/cog-stable-diffusion"
"replicate/cog-stable-diffusion" -> "replicate/cog-sdxl"
"replicate/getting-started-nextjs" -> "replicate/getting-started-nextjs-typescript"
"zenml-io/mlstacks" -> "zenml-io/zenbytes"
"zenml-io/mlstacks" -> "zenml-io/zenml-projects"
"zenml-io/mlstacks" -> "zenml-io/zenml-gitflow"
"zenml-io/mlstacks" -> "fuzzylabs/matcha"
"zenml-io/mlstacks" -> "zenml-io/zenml-dashboard"
"zenml-io/mlstacks" -> "fuzzylabs/awesome-open-mlops"
"tmadl/sklearn-expertsys" -> "ploomber/sklearn-evaluation" ["e"=1]
"tmadl/sklearn-expertsys" -> "oracle/skater"
"tmadl/sklearn-expertsys" -> "scikit-learn-contrib/skope-rules"
"tmadl/sklearn-expertsys" -> "christophM/rulefit"
"tmadl/sklearn-expertsys" -> "andosa/treeinterpreter"
"tmadl/sklearn-expertsys" -> "tmadl/sklearn-random-rotation-ensembles"
"tmadl/sklearn-expertsys" -> "adebayoj/fairml"
"tmadl/sklearn-expertsys" -> "rsteca/sklearn-deap"
"tmadl/sklearn-expertsys" -> "ianozsvald/data_science_delivered"
"tmadl/sklearn-expertsys" -> "dask/dask-searchcv" ["e"=1]
"tmadl/sklearn-expertsys" -> "AustinRochford/PyCEbox"
"tmadl/sklearn-expertsys" -> "h2oai/mli-resources"
"tmadl/sklearn-expertsys" -> "scikit-learn-contrib/forest-confidence-interval"
"tmadl/sklearn-expertsys" -> "aigamedev/scikit-neuralnetwork" ["e"=1]
"tmadl/sklearn-expertsys" -> "tmadl/semisup-learn" ["e"=1]
"approximatelabs/lambdaprompt" -> "approximatelabs/sketch"
"yandex-research/tab-ddpm" -> "amazon-science/tabsyn"
"yandex-research/tab-ddpm" -> "Team-TUD/CTAB-GAN"
"yandex-research/tab-ddpm" -> "Team-TUD/CTAB-GAN-Plus"
"yandex-research/tab-ddpm" -> "worldbank/REaLTabFormer"
"yandex-research/tab-ddpm" -> "tabularis-ai/be_great"
"yandex-research/tab-ddpm" -> "SamsungSAILMontreal/ForestDiffusion"
"yandex-research/tab-ddpm" -> "sdv-dev/CTGAN"
"yandex-research/tab-ddpm" -> "pfnet-research/TabCSDI" ["e"=1]
"yandex-research/tab-ddpm" -> "vanderschaarlab/synthcity"
"yandex-research/tab-ddpm" -> "MinkaiXu/TabDiff"
"yandex-research/tab-ddpm" -> "ChaejeongLee/CoDi"
"yandex-research/tab-ddpm" -> "sdv-dev/SDMetrics"
"yandex-research/tab-ddpm" -> "mahmoodm2/tableGAN"
"yandex-research/tab-ddpm" -> "ehoogeboom/multinomial_diffusion" ["e"=1]
"yandex-research/tab-ddpm" -> "sdv-dev/SDGym"
"alvesoaj/eFLL" -> "fuzzylite/fuzzylite"
"alvesoaj/eFLL" -> "amimaro/FuzzyLibrary"
"bastianraschke/pyfingerprint" -> "adafruit/Adafruit_CircuitPython_Fingerprint"
"bastianraschke/pyfingerprint" -> "adafruit/Adafruit-Fingerprint-Sensor-Library"
"bastianraschke/pyfingerprint" -> "brianrho/FPM"
"bastianraschke/pyfingerprint" -> "the-AjK/GT-511C3"
"bastianraschke/pyfingerprint" -> "QuickCorp/pyGT511C3"
"approximatelabs/sketch" -> "approximatelabs/lambdaprompt"
"approximatelabs/sketch" -> "jackmpcollins/magentic" ["e"=1]
"approximatelabs/sketch" -> "approximatelabs/datadm"
"approximatelabs/sketch" -> "PrefectHQ/marvin" ["e"=1]
"approximatelabs/sketch" -> "sfu-db/dataprep"
"approximatelabs/sketch" -> "griptape-ai/griptape" ["e"=1]
"approximatelabs/sketch" -> "Kanaries/pygwalker" ["e"=1]
"approximatelabs/sketch" -> "shankarpandala/lazypredict"
"approximatelabs/sketch" -> "ipyflow/ipyflow" ["e"=1]
"approximatelabs/sketch" -> "Nixtla/statsforecast"
"approximatelabs/sketch" -> "predict-idlab/plotly-resampler" ["e"=1]
"approximatelabs/sketch" -> "fugue-project/fugue" ["e"=1]
"approximatelabs/sketch" -> "posit-dev/great-tables" ["e"=1]
"approximatelabs/sketch" -> "AutoViML/AutoViz"
"approximatelabs/sketch" -> "promptslab/Promptify" ["e"=1]
"RecList/evalRS-CIKM-2022" -> "coveooss/SIGIR-ecom-data-challenge"
"RecList/evalRS-CIKM-2022" -> "RecList/reclist"
"amber0309/HSIC" -> "kjchalup/fcit"
"amber0309/HSIC" -> "oxcsml/kerpy"
"Crunch-UQ4MI/neuraluq" -> "katiana22/TL-DeepONet"
"Crunch-UQ4MI/neuraluq" -> "XuhuiM/Multi-Fidelity-DNNs-PINNs"
"marcotcr/lime-experiments" -> "marcotcr/anchor"
"worldbank/REaLTabFormer" -> "tabularis-ai/be_great"
"worldbank/REaLTabFormer" -> "yandex-research/tab-ddpm"
"worldbank/REaLTabFormer" -> "Team-TUD/CTAB-GAN"
"worldbank/REaLTabFormer" -> "zhao-zilong/Tabula"
"worldbank/REaLTabFormer" -> "ZhangTP1996/TapTap"
"worldbank/REaLTabFormer" -> "Team-TUD/CTAB-GAN-Plus"
"worldbank/REaLTabFormer" -> "microsoft/DPSDA"
"worldbank/REaLTabFormer" -> "NextBrain-ai/nbsynthetic"
"worldbank/REaLTabFormer" -> "sdv-dev/SDMetrics"
"terrytangyuan/awesome-kubeflow" -> "GoogleCloudPlatform/kubeflow-distribution"
"terrytangyuan/awesome-kubeflow" -> "kubeflow/model-registry"
"jpmml/jpmml-xgboost" -> "jpmml/jpmml-tensorflow"
"jpmml/jpmml-xgboost" -> "jpmml/jpmml-sparkml"
"jpmml/jpmml-xgboost" -> "jpmml/jpmml-evaluator"
"machinelearningnuremberg/FSBO" -> "machinelearningnuremberg/DeepRankingEnsembles"
"machinelearningnuremberg/FSBO" -> "machinelearningnuremberg/DeepPipe"
"mbilalzafar/fair-classification" -> "algofairness/fairness-comparison"
"mbilalzafar/fair-classification" -> "equialgo/fairness-in-ml"
"mbilalzafar/fair-classification" -> "jmikko/fair_ERM"
"mbilalzafar/fair-classification" -> "VectorInstitute/laftr"
"mbilalzafar/fair-classification" -> "socialfoundations/folktables"
"mbilalzafar/fair-classification" -> "propublica/compas-analysis"
"mbilalzafar/fair-classification" -> "mkusner/counterfactual-fairness"
"mbilalzafar/fair-classification" -> "gpleiss/equalized_odds_and_calibration"
"mbilalzafar/fair-classification" -> "adebayoj/fairml"
"FourthBrain/software-dev-for-mlops-101" -> "FourthBrain/Branching-out-of-the-Notebook"
"FourthBrain/software-dev-for-mlops-101" -> "FourthBrain/software-dev-for-ml-101"
"FourthBrain/software-dev-for-mlops-101" -> "FourthBrain/FastAPI-for-Machine-Learning-Live-Demo"
"FourthBrain/software-dev-for-mlops-101" -> "FourthBrain/Building-Generative-AI-Apps"
"FourthBrain/software-dev-for-mlops-101" -> "FourthBrain/step-by-step-nlp-dialogpt-chatbot"
"FourthBrain/software-dev-for-mlops-101" -> "https-deeplearning-ai/machine-learning-engineering-for-production-public"
"karajan1001/aiooss2" -> "iterative/dvc-bench"
"karajan1001/aiooss2" -> "iterative/scmrepo"
"MaxHalford/taxi-demo-rp-mz-rv-rd-st" -> "morsapaes/mz-twitch-analytics"
"welch/seasonal" -> "antoinecarme/pyaf"
"welch/seasonal" -> "wwrechard/pydlm"
"welch/seasonal" -> "ServiceNow/stl-decomp-4j" ["e"=1]
"welch/seasonal" -> "andreas-h/pyloess" ["e"=1]
"welch/seasonal" -> "hildensia/bayesian_changepoint_detection"
"welch/seasonal" -> "luke14free/pm-prophet" ["e"=1]
"jacopotagliabue/MLSys-NYU-2022" -> "Paulescu/hands-on-train-and-deploy-ml" ["e"=1]
"jacopotagliabue/MLSys-NYU-2022" -> "iusztinpaul/hands-on-llms" ["e"=1]
"jacopotagliabue/MLSys-NYU-2022" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"patrick201/information_value" -> "Densur/PyWoE"
"patrick201/information_value" -> "boredbird/woe"
"patrick201/information_value" -> "hsz1273327/ScoreCardModel"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-evaluator-spark"
"jpmml/jpmml-sparkml" -> "jpmml/pyspark2pmml"
"jpmml/jpmml-sparkml" -> "openscoring/openscoring"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-evaluator"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-model"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-sklearn"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-sparkml-xgboost"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-xgboost"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-tensorflow"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-lightgbm"
"jpmml/jpmml-sparkml" -> "combust/mleap" ["e"=1]
"jpmml/jpmml-sparkml" -> "rjagerman/glint" ["e"=1]
"jpmml/jpmml-sparkml" -> "jpmml/sklearn2pmml"
"jpmml/jpmml-sparkml" -> "zhengruifeng/spark-libFM" ["e"=1]
"danielhomola/mifs" -> "fbrundu/pymrmr"
"danielhomola/mifs" -> "EpistasisLab/scikit-rebate"
"danielhomola/mifs" -> "kaushalshetty/FeatureSelectionGA"
"danielhomola/mifs" -> "scikit-learn-contrib/boruta_py"
"danielhomola/mifs" -> "jundongl/scikit-feature"
"danielhomola/mifs" -> "jupiters1117/mico"
"danielhomola/mifs" -> "smazzanti/mrmr"
"danielhomola/mifs" -> "mutantturkey/PyFeast"
"danielhomola/mifs" -> "ctlab/ITMO_FS"
"danielhomola/mifs" -> "duxuhao/Feature-Selection"
"danielhomola/mifs" -> "scikit-learn-contrib/stability-selection"
"danielhomola/mifs" -> "dwave-examples/mutual-information-feature-selection"
"danielhomola/mifs" -> "Ekeany/Boruta-Shap"
"elbamos/largeVis" -> "lferry007/LargeVis"
"elbamos/largeVis" -> "hadley/bigvis"
"elbamos/largeVis" -> "jlmelville/uwot"
"optuna/optuna-integration" -> "optuna/optunahub"
"optuna/optuna-integration" -> "optuna/optunahub-registry"
"optuna/optuna-integration" -> "optuna/optuna-visualization-regression-tests"
"jacopotagliabue/recs-at-resonable-scale" -> "jacopotagliabue/post-modern-stack"
"jacopotagliabue/recs-at-resonable-scale" -> "RecList/reclist"
"jacopotagliabue/recs-at-resonable-scale" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"jacopotagliabue/recs-at-resonable-scale" -> "jacopotagliabue/paas-data-ingestion"
"eugeneyan/1-on-1s" -> "eugeneyan/ml-design-docs"
"eugeneyan/1-on-1s" -> "eugeneyan/applyingml"
"optuna/optuna-fast-fanova" -> "optuna/optuna-visualization-regression-tests"
"SheffieldML/PyDeepGP" -> "UCL-SML/Doubly-Stochastic-DGP"
"SheffieldML/PyDeepGP" -> "SheffieldML/deepGP"
"SheffieldML/PyDeepGP" -> "thangbui/deepGP_approxEP"
"SheffieldML/PyDeepGP" -> "brain-research/nngp"
"SheffieldML/PyDeepGP" -> "kekeblom/DeepCGP"
"SheffieldML/PyDeepGP" -> "hughsalimbeni/DGPs_with_IWVI"
"SheffieldML/PyDeepGP" -> "secondmind-labs/GPflux"
"SheffieldML/PyDeepGP" -> "markvdw/convgp"
"SheffieldML/PyDeepGP" -> "jameshensman/VFF"
"SheffieldML/PyDeepGP" -> "thangbui/geepee"
"SheffieldML/PyDeepGP" -> "alshedivat/keras-gp"
"SheffieldML/PyDeepGP" -> "FelixOpolka/Deep-Gaussian-Process"
"SheffieldML/PyDeepGP" -> "cambridge-mlg/sghmc_dgp"
"SheffieldML/PyDeepGP" -> "maka89/Deep-Kernel-GP"
"SheffieldML/PyDeepGP" -> "duvenaud/deep-limits"
"facebookresearch/bo_pr" -> "aryandeshwal/BODi"
"interpretml/FasterRisk" -> "interpretml/fastSparse"
"lfbo-ml/lfbo" -> "ltiao/bore"
"Team-TUD/CTAB-GAN-Plus" -> "Team-TUD/CTAB-GAN"
"Team-TUD/CTAB-GAN-Plus" -> "zhao-zilong/Tabula"
"Team-TUD/CTAB-GAN-Plus" -> "Team-TUD/CTAB-GAN-Plus-DP"
"dcai-course/dcai-course" -> "dcai-course/dcai-lab"
"dcai-course/dcai-course" -> "cleanlab/cleanlab-tlm"
"Code-Pop/Real-World-Vue-3-New-Syntax" -> "Code-Pop/Touring-Vue-Router-Composition-API"
"Code-Pop/Real-World-Vue-3-New-Syntax" -> "Code-Pop/pinia-fundamentals"
"FourthBrain/FastAPI-for-Machine-Learning-Live-Demo" -> "FourthBrain/Branching-out-of-the-Notebook"
"FourthBrain/FastAPI-for-Machine-Learning-Live-Demo" -> "FourthBrain/software-dev-for-mlops-101"
"Code-Pop/build-a-blog-with-nuxt-3-and-nuxt-content-v2" -> "Code-Pop/Vuex_Fundamentals"
"optuna/optuna-visualization-regression-tests" -> "sile/yamakan"
"songqiaohu/THU-Concept-Drift-Datasets-v1.0" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"CityU-AIM-Group/MultiModal-learning" -> "cuicathy/MMD_SurvivalPrediction"
"DagsHub/3D-model-datasets" -> "DagsHub/papers-with-everything"
"JayoungKim408/STaSy" -> "JayoungKim408/SOS"
"JayoungKim408/STaSy" -> "ChaejeongLee/CoDi"
"Nixtla/datasetsforecast" -> "Nixtla/utilsforecast"
"Nixtla/datasetsforecast" -> "Nixtla/coreforecast"
"DagsHub/papers-with-everything" -> "DagsHub/3D-model-datasets"
"microsoft/responsible-ai-toolbox-tracker" -> "microsoft/responsible-ai-toolbox-mitigations"
"thangbui/deepGP_approxEP" -> "thangbui/geepee"
"Densur/PyWoE" -> "Densur/LDPD"
"cuicathy/MMD_SurvivalPrediction" -> "yfzon/Multi-modal-Multi-instance-Learning"
"Team-TUD/CTAB-GAN-Plus-DP" -> "Team-TUD/CTAB-GAN-Plus"
"machinelearningnuremberg/DeepRankingEnsembles" -> "machinelearningnuremberg/FSBO"
"machinelearningnuremberg/DeepRankingEnsembles" -> "machinelearningnuremberg/DeepPipe"
"Renumics/awesome-anything2vec" -> "Renumics/mesh2vec"
"jimdowling/cjsurf" -> "logicalclocks/hopsworks-api"
"machinelearningnuremberg/DyHPO" -> "machinelearningnuremberg/DPL"
"bentoml/yatai-image-builder" -> "bentoml/yatai-deployment"
"machinelearningnuremberg/DPL" -> "machinelearningnuremberg/DyHPO"
"machinelearningnuremberg/DPL" -> "machinelearningnuremberg/DeepRankingEnsembles"
"microsoft/LightGBM" -> "dmlc/xgboost" ["e"=1]
"microsoft/LightGBM" -> "catboost/catboost"
"microsoft/LightGBM" -> "shap/shap"
"microsoft/LightGBM" -> "facebookresearch/fastText" ["e"=1]
"microsoft/LightGBM" -> "hyperopt/hyperopt"
"microsoft/LightGBM" -> "apache/mxnet" ["e"=1]
"microsoft/LightGBM" -> "facebook/prophet"
"microsoft/LightGBM" -> "facebookresearch/faiss" ["e"=1]
"microsoft/LightGBM" -> "shenweichen/DeepCTR" ["e"=1]
"microsoft/LightGBM" -> "scikit-learn-contrib/imbalanced-learn"
"microsoft/LightGBM" -> "VowpalWabbit/vowpal_wabbit"
"microsoft/LightGBM" -> "scikit-learn/scikit-learn" ["e"=1]
"microsoft/LightGBM" -> "google-research/bert" ["e"=1]
"microsoft/LightGBM" -> "keras-team/keras" ["e"=1]
"microsoft/LightGBM" -> "horovod/horovod"
"TeamHG-Memex/eli5" -> "DistrictDataLabs/yellowbrick"
"TeamHG-Memex/eli5" -> "oracle/skater"
"TeamHG-Memex/eli5" -> "scikit-learn-contrib/category_encoders"
"TeamHG-Memex/eli5" -> "marcotcr/lime"
"TeamHG-Memex/eli5" -> "SauceCat/PDPbox"
"TeamHG-Memex/eli5" -> "rasbt/mlxtend"
"TeamHG-Memex/eli5" -> "reiinakano/scikit-plot"
"TeamHG-Memex/eli5" -> "scikit-optimize/scikit-optimize"
"TeamHG-Memex/eli5" -> "interpretml/interpret"
"TeamHG-Memex/eli5" -> "scikit-learn-contrib/imbalanced-learn"
"TeamHG-Memex/eli5" -> "hyperopt/hyperopt"
"TeamHG-Memex/eli5" -> "hyperopt/hyperopt-sklearn"
"TeamHG-Memex/eli5" -> "EpistasisLab/tpot"
"TeamHG-Memex/eli5" -> "andosa/treeinterpreter"
"TeamHG-Memex/eli5" -> "shap/shap"
"airbnb/knowledge-repo" -> "nteract/papermill" ["e"=1]
"airbnb/knowledge-repo" -> "airbnb/aerosolve" ["e"=1]
"airbnb/knowledge-repo" -> "EpistasisLab/tpot"
"airbnb/knowledge-repo" -> "PAIR-code/facets"
"airbnb/knowledge-repo" -> "CamDavidsonPilon/lifetimes" ["e"=1]
"airbnb/knowledge-repo" -> "nteract/nteract" ["e"=1]
"airbnb/knowledge-repo" -> "pachyderm/pachyderm"
"airbnb/knowledge-repo" -> "amundsen-io/amundsen" ["e"=1]
"airbnb/knowledge-repo" -> "ydataai/ydata-profiling"
"airbnb/knowledge-repo" -> "marcotcr/lime"
"airbnb/knowledge-repo" -> "spotify/luigi" ["e"=1]
"airbnb/knowledge-repo" -> "wesm/feather" ["e"=1]
"airbnb/knowledge-repo" -> "drivendataorg/cookiecutter-data-science"
"airbnb/knowledge-repo" -> "iterative/dvc"
"airbnb/knowledge-repo" -> "blue-yonder/tsfresh"
"lferry007/LargeVis" -> "elbamos/largeVis"
"lferry007/LargeVis" -> "tangjianpku/LINE" ["e"=1]
"lferry007/LargeVis" -> "lvdmaaten/bhtsne"
"lferry007/LargeVis" -> "DmitryUlyanov/Multicore-TSNE"
"lferry007/LargeVis" -> "thomaskeck/FastBDT" ["e"=1]
"lferry007/LargeVis" -> "ZJULearning/efanna" ["e"=1]
"lferry007/LargeVis" -> "KlugerLab/FIt-SNE" ["e"=1]
"lferry007/LargeVis" -> "yahoo/lopq" ["e"=1]
"lferry007/LargeVis" -> "facebookarchive/fbpca" ["e"=1]
"lferry007/LargeVis" -> "ArdalanM/pyLightGBM" ["e"=1]
"lferry007/LargeVis" -> "dmlc/minpy" ["e"=1]
"lferry007/LargeVis" -> "ChristianSch/numerflow" ["e"=1]
"lferry007/LargeVis" -> "danielfrg/tsne" ["e"=1]
"lferry007/LargeVis" -> "tomlepaine/fast-wavenet" ["e"=1]
"lferry007/LargeVis" -> "NickShahML/tensorflow_with_latest_papers" ["e"=1]
"SheffieldML/GPy" -> "GPflow/GPflow"
"SheffieldML/GPy" -> "SheffieldML/GPyOpt"
"SheffieldML/GPy" -> "cornellius-gp/gpytorch"
"SheffieldML/GPy" -> "EmuKit/emukit"
"SheffieldML/GPy" -> "pytorch/botorch"
"SheffieldML/GPy" -> "blei-lab/edward"
"SheffieldML/GPy" -> "HIPS/Spearmint"
"SheffieldML/GPy" -> "bayesian-optimization/BayesianOptimization"
"SheffieldML/GPy" -> "SheffieldML/PyDeepGP"
"SheffieldML/GPy" -> "scikit-optimize/scikit-optimize"
"SheffieldML/GPy" -> "jwangjie/Gaussian-Process-Regression-Tutorial"
"SheffieldML/GPy" -> "HIPS/autograd"
"SheffieldML/GPy" -> "krasserm/bayesian-machine-learning"
"SheffieldML/GPy" -> "pymc-devs/pymc"
"SheffieldML/GPy" -> "dfm/george" ["e"=1]
"neonwatty/machine-learning-refined" -> "probml/pyprobml" ["e"=1]
"neonwatty/machine-learning-refined" -> "HIPS/autograd"
"neonwatty/machine-learning-refined" -> "JWarmenhoven/ISLR-python" ["e"=1]
"neonwatty/machine-learning-refined" -> "probml/pml-book" ["e"=1]
"neonwatty/machine-learning-refined" -> "bayesgroup/deepbayes-2019" ["e"=1]
"neonwatty/machine-learning-refined" -> "ermongroup/cs228-notes"
"neonwatty/machine-learning-refined" -> "rasbt/mlxtend"
"neonwatty/machine-learning-refined" -> "SciML/SciMLBook" ["e"=1]
"neonwatty/machine-learning-refined" -> "Atcold/NYU-DLSP20" ["e"=1]
"neonwatty/machine-learning-refined" -> "interpretml/interpret"
"neonwatty/machine-learning-refined" -> "mattjj/autodidact" ["e"=1]
"neonwatty/machine-learning-refined" -> "bfortuner/ml-glossary" ["e"=1]
"neonwatty/machine-learning-refined" -> "krasserm/bayesian-machine-learning"
"neonwatty/machine-learning-refined" -> "hundredblocks/ml-powered-applications" ["e"=1]
"neonwatty/machine-learning-refined" -> "awesome-mlss/awesome-mlss" ["e"=1]
"noahho/CAAFE" -> "microsoft/ticl"
"noahho/CAAFE" -> "automl/neps"
"noahho/CAAFE" -> "Sungwon-Han/FeatLLM"
"BauplanLabs/quack-reduce" -> "BauplanLabs/examples"
"BauplanLabs/quack-reduce" -> "BauplanLabs/no-jvm-wap-with-iceberg"
"microsoft/DPSDA" -> "AI-secure/aug-pe"
"microsoft/DPSDA" -> "SunnierLee/DP-ImaGen"
"daochenzha/data-centric-AI" -> "HazyResearch/data-centric-ai"
"daochenzha/data-centric-AI" -> "dcai-course/dcai-lab"
"daochenzha/data-centric-AI" -> "Guang000/Awesome-Dataset-Distillation" ["e"=1]
"daochenzha/data-centric-AI" -> "JunweiLiang/awesome_lists" ["e"=1]
"daochenzha/data-centric-AI" -> "Data-Centric-AI-Community/awesome-data-centric-ai"
"daochenzha/data-centric-AI" -> "ZigeW/data_management_LLM" ["e"=1]
"daochenzha/data-centric-AI" -> "subeeshvasu/Awesome-Learning-with-Label-Noise" ["e"=1]
"daochenzha/data-centric-AI" -> "yfzhang114/Generalization-Causality" ["e"=1]
"daochenzha/data-centric-AI" -> "Eurus-Holmes/Awesome-Multimodal-Research" ["e"=1]
"daochenzha/data-centric-AI" -> "VainF/Awesome-Anything" ["e"=1]
"daochenzha/data-centric-AI" -> "dqxiu/ICL_PaperList" ["e"=1]
"daochenzha/data-centric-AI" -> "zhoubolei/bolei_awesome_posters" ["e"=1]
"daochenzha/data-centric-AI" -> "MLNLP-World/Paper-Writing-Tips" ["e"=1]
"daochenzha/data-centric-AI" -> "Timothyxxx/Chain-of-ThoughtsPapers" ["e"=1]
"daochenzha/data-centric-AI" -> "HillZhang1999/llm-hallucination-survey" ["e"=1]
"EpistasisLab/scikit-rebate" -> "EpistasisLab/scikit-mdr"
"EpistasisLab/scikit-rebate" -> "danielhomola/mifs"
"EpistasisLab/scikit-rebate" -> "scikit-learn-contrib/stability-selection"
"EpistasisLab/scikit-rebate" -> "Ekeany/Boruta-Shap"
"EpistasisLab/scikit-rebate" -> "manuel-calzolari/sklearn-genetic"
"EpistasisLab/scikit-rebate" -> "jundongl/scikit-feature"
"EpistasisLab/scikit-rebate" -> "scikit-learn-contrib/boruta_py"
"EpistasisLab/scikit-rebate" -> "scikit-learn-contrib/forest-confidence-interval"
"EpistasisLab/scikit-rebate" -> "EpistasisLab/ReBATE"
"EpistasisLab/scikit-rebate" -> "scikit-learn-contrib/DESlib"
"EpistasisLab/scikit-rebate" -> "ctlab/ITMO_FS"
"EpistasisLab/scikit-rebate" -> "kaushalshetty/FeatureSelectionGA"
"EpistasisLab/scikit-rebate" -> "duxuhao/Feature-Selection"
"EpistasisLab/scikit-rebate" -> "scikit-learn-contrib/polylearn" ["e"=1]
"EpistasisLab/scikit-rebate" -> "vecxoz/vecstack" ["e"=1]
"ClimbsRocks/auto_ml" -> "reiinakano/xcessiv"
"ClimbsRocks/auto_ml" -> "automl/auto-sklearn"
"ClimbsRocks/auto_ml" -> "AxeldeRomblay/MLBox"
"ClimbsRocks/auto_ml" -> "EpistasisLab/tpot"
"ClimbsRocks/auto_ml" -> "ClimbsRocks/machineJS" ["e"=1]
"ClimbsRocks/auto_ml" -> "hyperopt/hyperopt-sklearn"
"ClimbsRocks/auto_ml" -> "TeamHG-Memex/eli5"
"ClimbsRocks/auto_ml" -> "alteryx/featuretools"
"ClimbsRocks/auto_ml" -> "reiinakano/scikit-plot"
"ClimbsRocks/auto_ml" -> "keras-team/autokeras"
"ClimbsRocks/auto_ml" -> "HDI-Project/ATM"
"ClimbsRocks/auto_ml" -> "scikit-learn-contrib/category_encoders"
"ClimbsRocks/auto_ml" -> "maxpumperla/hyperas"
"ClimbsRocks/auto_ml" -> "scikit-optimize/scikit-optimize"
"ClimbsRocks/auto_ml" -> "tensorflow/adanet"
"approximatelabs/datadm" -> "approximatelabs/lambdaprompt"
"replicate/llama-chat" -> "replicate/getting-started-nextjs"
"replicate/llama-chat" -> "mendableai/mendable-nextjs-chatbot" ["e"=1]
"replicate/llama-chat" -> "replicate/cog-llama-template" ["e"=1]
"replicate/llama-chat" -> "a16z-infra/llama2-chatbot" ["e"=1]
"replicate/llama-chat" -> "replicate/replicate-python"
"ContextLab/hypertools" -> "PsychoinformaticsLab/pliers" ["e"=1]
"ContextLab/hypertools" -> "reiinakano/scikit-plot"
"ContextLab/hypertools" -> "DistrictDataLabs/yellowbrick"
"ContextLab/hypertools" -> "brainiak/brainiak" ["e"=1]
"ContextLab/hypertools" -> "RJT1990/pyflux"
"ContextLab/hypertools" -> "ContextLab/hypertools-paper-notebooks"
"ContextLab/hypertools" -> "bambinos/bambi" ["e"=1]
"ContextLab/hypertools" -> "TeamHG-Memex/eli5"
"ContextLab/hypertools" -> "kkyon/botflow" ["e"=1]
"ContextLab/hypertools" -> "dmlc/gluon-nlp" ["e"=1]
"ContextLab/hypertools" -> "dmlc/minpy" ["e"=1]
"ContextLab/hypertools" -> "gallantlab/pycortex" ["e"=1]
"ContextLab/hypertools" -> "mm-mansour/Fast-Pandas"
"ContextLab/hypertools" -> "rasbt/mlxtend"
"ContextLab/hypertools" -> "lmcinnes/umap"
"CMA-ES/pycma" -> "CyberAgentAILab/cmaes"
"CMA-ES/pycma" -> "hardmaru/estool" ["e"=1]
"CMA-ES/pycma" -> "CMA-ES/libcmaes"
"CMA-ES/pycma" -> "numbbo/coco"
"CMA-ES/pycma" -> "openai/evolution-strategies-starter" ["e"=1]
"CMA-ES/pycma" -> "RobertTLange/evosax" ["e"=1]
"CMA-ES/pycma" -> "Evolutionary-Intelligence/pypop"
"CMA-ES/pycma" -> "google/evojax" ["e"=1]
"CMA-ES/pycma" -> "facebookresearch/nevergrad"
"CMA-ES/pycma" -> "DEAP/deap" ["e"=1]
"CMA-ES/pycma" -> "hardmaru/pytorch_notebooks" ["e"=1]
"CMA-ES/pycma" -> "uber-research/deep-neuroevolution" ["e"=1]
"CMA-ES/pycma" -> "SheffieldML/GPyOpt"
"CMA-ES/pycma" -> "automl/SMAC3"
"CMA-ES/pycma" -> "uber-research/TuRBO"
"deployKF/deployKF" -> "awslabs/kubeflow-manifests"
"deployKF/deployKF" -> "kubeflow/manifests"
"deployKF/deployKF" -> "terrytangyuan/awesome-kubeflow"
"deployKF/deployKF" -> "argoflow/argoflow" ["e"=1]
"deployKF/deployKF" -> "flopach/digits-recognizer-kubeflow"
"EpistasisLab/scikit-mdr" -> "EpistasisLab/scikit-rebate"
"automl/SMAC3" -> "automl/HpBandSter"
"automl/SMAC3" -> "automl/RoBO"
"automl/SMAC3" -> "automl/ConfigSpace"
"automl/SMAC3" -> "HIPS/Spearmint"
"automl/SMAC3" -> "scikit-optimize/scikit-optimize"
"automl/SMAC3" -> "automl/HPOBench"
"automl/SMAC3" -> "automl/DeepCAVE"
"automl/SMAC3" -> "automl/Auto-PyTorch" ["e"=1]
"automl/SMAC3" -> "hyperopt/hyperopt-sklearn"
"automl/SMAC3" -> "JasperSnoek/spearmint"
"automl/SMAC3" -> "automl/auto-sklearn"
"automl/SMAC3" -> "hyperopt/hyperopt"
"automl/SMAC3" -> "zygmuntz/hyperband"
"automl/SMAC3" -> "SheffieldML/GPyOpt"
"automl/SMAC3" -> "Yelp/MOE"
"thu-ml/zhusuan" -> "blei-lab/edward"
"thu-ml/zhusuan" -> "robi56/awesome-bayesian-deep-learning" ["e"=1]
"thu-ml/zhusuan" -> "pyro-ppl/pyro"
"thu-ml/zhusuan" -> "tensorflow/probability"
"thu-ml/zhusuan" -> "JavierAntoran/Bayesian-Neural-Networks" ["e"=1]
"thu-ml/zhusuan" -> "cornellius-gp/gpytorch"
"thu-ml/zhusuan" -> "GPflow/GPflow"
"thu-ml/zhusuan" -> "kyle-dorman/bayesian-neural-network-blogpost" ["e"=1]
"thu-ml/zhusuan" -> "igul222/improved_wgan_training" ["e"=1]
"thu-ml/zhusuan" -> "kumar-shridhar/PyTorch-BayesianCNN" ["e"=1]
"thu-ml/zhusuan" -> "pgmpy/pgmpy" ["e"=1]
"thu-ml/zhusuan" -> "pymc-devs/pymc"
"thu-ml/zhusuan" -> "wiseodd/generative-models" ["e"=1]
"thu-ml/zhusuan" -> "martinarjovsky/WassersteinGAN" ["e"=1]
"thu-ml/zhusuan" -> "bayesgroup/deepbayes-2018" ["e"=1]
"sofienkaabar/deep-learning-for-finance" -> "sofienkaabar/mastering-financial-pattern-recognition"
"sofienkaabar/deep-learning-for-finance" -> "sofienkaabar/contrarian-trading-strategies"
"sofienkaabar/deep-learning-for-finance" -> "sofienkaabar/misc-files"
"manuel-calzolari/sklearn-genetic" -> "rsteca/sklearn-deap"
"manuel-calzolari/sklearn-genetic" -> "kaushalshetty/FeatureSelectionGA"
"manuel-calzolari/sklearn-genetic" -> "EpistasisLab/scikit-rebate"
"manuel-calzolari/sklearn-genetic" -> "manuel-calzolari/shapicant"
"manuel-calzolari/sklearn-genetic" -> "Ekeany/Boruta-Shap"
"manuel-calzolari/sklearn-genetic" -> "rodrigo-arenas/Sklearn-genetic-opt" ["e"=1]
"manuel-calzolari/sklearn-genetic" -> "jundongl/scikit-feature"
"manuel-calzolari/sklearn-genetic" -> "scikit-learn-contrib/boruta_py"
"manuel-calzolari/sklearn-genetic" -> "AutoViML/featurewiz"
"manuel-calzolari/sklearn-genetic" -> "cod3licious/autofeat"
"cedar-policy/cedar-spec" -> "cedar-policy/rfcs"
"cedar-policy/cedar-spec" -> "cedar-policy/cedar-examples"
"cedar-policy/cedar-spec" -> "cedar-policy/cedar-docs"
"wwrechard/pydlm" -> "tcassou/causal_impact" ["e"=1]
"wwrechard/pydlm" -> "antoinecarme/pyaf"
"wwrechard/pydlm" -> "RJT1990/pyflux"
"wwrechard/pydlm" -> "firmai/atspy"
"wwrechard/pydlm" -> "jrmontag/STLDecompose" ["e"=1]
"wwrechard/pydlm" -> "alkaline-ml/pmdarima"
"wwrechard/pydlm" -> "welch/seasonal"
"wwrechard/pydlm" -> "cerlymarco/tspiral"
"wwrechard/pydlm" -> "dafiti/causalimpact" ["e"=1]
"wwrechard/pydlm" -> "damitkwr/ESRNN-GPU" ["e"=1]
"wwrechard/pydlm" -> "luisdamiano/gsoc17-hhmm"
"wwrechard/pydlm" -> "laurencium/Causalinference" ["e"=1]
"AdrienGuille/GrowingNeuralGas" -> "ansrivas/GNG"
"AdrienGuille/GrowingNeuralGas" -> "kudkudak/Growing-Neural-Gas"
"nok/sklearn-porter" -> "BayesWitnesses/m2cgen"
"nok/sklearn-porter" -> "emlearn/emlearn" ["e"=1]
"nok/sklearn-porter" -> "jpmml/sklearn2pmml"
"nok/sklearn-porter" -> "jpmml/jpmml-sklearn"
"nok/sklearn-porter" -> "onnx/sklearn-onnx"
"nok/sklearn-porter" -> "eloquentarduino/micromlgen" ["e"=1]
"nok/sklearn-porter" -> "ajtulloch/sklearn-compiledtrees"
"nok/sklearn-porter" -> "konstantint/SKompiler"
"nok/sklearn-porter" -> "jpmml/jpmml-evaluator"
"nok/sklearn-porter" -> "DistrictDataLabs/yellowbrick"
"nok/sklearn-porter" -> "scikit-optimize/scikit-optimize"
"nok/sklearn-porter" -> "scikit-learn-contrib/skope-rules"
"nok/sklearn-porter" -> "pplonski/keras2cpp" ["e"=1]
"nok/sklearn-porter" -> "TeamHG-Memex/eli5"
"nok/sklearn-porter" -> "databricks/spark-sklearn" ["e"=1]
"scikit-learn-contrib/qolmat" -> "MAIF/melusine"
"scikit-learn-contrib/qolmat" -> "scikit-learn-contrib/MAPIE"
"scikit-learn-contrib/qolmat" -> "salimamoukou/acv00"
"scikit-learn-contrib/qolmat" -> "beroguedou/basmatinet"
"Renumics/awesome-open-data-centric-ai" -> "Data-Centric-AI-Community/awesome-data-centric-ai"
"Renumics/awesome-open-data-centric-ai" -> "Renumics/awesome-anything2vec"
"Renumics/awesome-open-data-centric-ai" -> "Renumics/spotlight"
"Renumics/awesome-open-data-centric-ai" -> "zenml-io/awesome-open-data-annotation"
"Renumics/awesome-open-data-centric-ai" -> "daochenzha/data-centric-AI"
"Renumics/awesome-open-data-centric-ai" -> "HazyResearch/data-centric-ai"
"Renumics/awesome-open-data-centric-ai" -> "visual-layer/fastdup"
"Renumics/awesome-open-data-centric-ai" -> "Renumics/mesh2vec"
"Renumics/awesome-open-data-centric-ai" -> "HuaizhengZhang/Active-Learning-as-a-Service" ["e"=1]
"Renumics/awesome-open-data-centric-ai" -> "Renumics/sliceguard"
"Renumics/awesome-open-data-centric-ai" -> "dcai-course/dcai-lab"
"drivendata/data-science-is-software" -> "FilippoBovo/production-data-science"
"MetaEvo/MetaBox" -> "MetaEvo/Awesome-MetaBBO"
"MetaEvo/MetaBox" -> "MetaEvo/psc4MetaBBO"
"MetaEvo/MetaBox" -> "LabGong/psc4ddea"
"LabGong/psc4ddea" -> "MetaEvo/Awesome-MetaBBO"
"cedar-policy/cedar" -> "permitio/cedar-agent"
"cedar-policy/cedar" -> "cedar-policy/cedar-spec"
"cedar-policy/cedar" -> "cedar-policy/cedar-examples"
"cedar-policy/cedar" -> "cedar-policy/cedar-java"
"cedar-policy/cedar" -> "cedar-policy/rfcs"
"cedar-policy/cedar" -> "cedar-policy/cedar-docs"
"cedar-policy/cedar" -> "cedar-policy/cedar-go"
"cedar-policy/cedar" -> "cedar-policy/cedar-awesome"
"cedar-policy/cedar" -> "k9securityio/cedar-py"
"cedar-policy/cedar" -> "hydro-project/hydro" ["e"=1]
"FourthBrain/Building-with-Instruction-Tuned-LLMs-A-Step-by-Step-Guide" -> "FourthBrain/Building-Generative-AI-Apps"
"vinid/NegotiationArena" -> "vinid/quica"
"vinid/NegotiationArena" -> "vinid/cade"
"HildoBijl/GPRT" -> "Dynamic-Systems-and-GP/GPdyn"
"HildoBijl/GPRT" -> "HildoBijl/SONIG"
"davidmirror-ops/flyte-the-hard-way" -> "flyteorg/flytekit-python-template"
"davidmirror-ops/flyte-the-hard-way" -> "unionai-oss/deploy-flyte"
"davidmirror-ops/flyte-the-hard-way" -> "flyteorg/flytesnacks"
"davidmirror-ops/flyte-the-hard-way" -> "flyteorg/flytekit"
"davidmirror-ops/flyte-the-hard-way" -> "flyteorg/flyteconsole"
"davidmirror-ops/flyte-the-hard-way" -> "unionai-oss/video-translation"
"davidmirror-ops/flyte-the-hard-way" -> "flyteorg/flyteidl"
"unionai-oss/deploy-flyte" -> "flyteorg/flyteplugins"
"unionai-oss/deploy-flyte" -> "davidmirror-ops/flyte-the-hard-way"
"featurestoreorg/featurestore-benchmarks" -> "logicalclocks/feature-store-api"
"Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP" -> "Evolutionary-Intelligence/DistributedEvolutionaryComputation"
"Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP" -> "Evolutionary-Intelligence/dpop7"
"Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP" -> "Evolutionary-Intelligence/pypop"
"Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP" -> "PR-Ryan/DEMO"
"Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP" -> "auto4opt/AutoOpt"
"gofireflyio/badge-of-honor" -> "gofireflyio/firefly-mcp"
"alshedivat/keras-gp" -> "maka89/Deep-Kernel-GP"
"alshedivat/keras-gp" -> "markvdw/convgp"
"alshedivat/keras-gp" -> "UCL-SML/Doubly-Stochastic-DGP"
"alshedivat/keras-gp" -> "brain-research/nngp"
"alshedivat/keras-gp" -> "SheffieldML/PyDeepGP"
"Zhen-Ni/MFNN" -> "xdfeng7370/Multi-fidelity-neural-network-"
"itlubber/scorecardpipeline" -> "Irreel/AnyActions" ["e"=1]
"itlubber/scorecardpipeline" -> "itlubber/pdtr"
"replicate/cog-sdxl" -> "replicate/lora-inference"
"interpretml/TalkToEBM" -> "interpretml/LLM-Tabular-Memorization-Checker"
"interpretml/TalkToEBM" -> "interpretml/ebm2onnx"
"jpmml/pyspark2pmml" -> "jpmml/jpmml-sparkml"
"jpmml/pyspark2pmml" -> "autodeployai/pypmml-spark"
"jamesrobertlloyd/gp-structure-search" -> "jamesrobertlloyd/gpss-research"
"jamesrobertlloyd/gp-structure-search" -> "duvenaud/phd-thesis"
"jamesrobertlloyd/gp-structure-search" -> "alshedivat/keras-gp"
"SunnierLee/DP-ImaGen" -> "2019ChenGong/DPImageBench"
"Nixtla/utilsforecast" -> "Nixtla/coreforecast"
"Nixtla/utilsforecast" -> "Nixtla/datasetsforecast"
"Nixtla/utilsforecast" -> "Nixtla/nixtlar"
"SamsungSAILMontreal/ForestDiffusion" -> "amazon-science/tabsyn"
"soda-inria/hazardous" -> "soda-inria/survival-analysis-benchmark"
"Code-Pop/Touring-Vue-Router-Composition-API" -> "Code-Pop/Real-World-Vue-3-New-Syntax"
"sylvaincom/astride" -> "boniolp/dsymb-playground"
"permitio/cedar-agent" -> "k9securityio/cedar-py"
"permitio/cedar-agent" -> "cedar-policy/cedar-awesome"
"permitio/cedar-agent" -> "permitio/OPToggles"
"permitio/cedar-agent" -> "permitio/opal-helm-chart"
"uwheel/uwheel" -> "uwheel/datafusion-uwheel"
"machinelearningnuremberg/DeepPipe" -> "machinelearningnuremberg/DeepRankingEnsembles"
"machinelearningnuremberg/DeepPipe" -> "machinelearningnuremberg/FSBO"
"cedar-policy/cedar-examples" -> "cedar-policy/cedar-java"
"cedar-policy/cedar-examples" -> "cedar-policy/cedar-spec"
"cedar-policy/cedar-examples" -> "cedar-policy/cedar-awesome"
"cedar-policy/cedar-examples" -> "cedar-policy/rfcs"
"histogrammar/histogrammar-python" -> "histogrammar/histogrammar-scala"
"cedar-policy/cedar-docs" -> "cedar-policy/rfcs"
"cedar-policy/cedar-docs" -> "iann0036/polai"
"ChaejeongLee/CoDi" -> "JayoungKim408/STaSy"
"james77777778/keras-aug" -> "james77777778/keras-image-models"
"LASER-UMASS/Themis" -> "columbia/fairtest"
"lpfgarcia/ECoL" -> "victorhb/ImbCoL"
"lpfgarcia/ECoL" -> "ealcobaca/pymfe"
"lpfgarcia/ECoL" -> "rivolli/mfe"
"lpfgarcia/ECoL" -> "tiagobotari/melime"
"lpfgarcia/ECoL" -> "gabrieljaguiar/nemenyi"
"lpfgarcia/ECoL" -> "gabrieljaguiar/image-meta-feature-extractor"
"lpfgarcia/ECoL" -> "smastelini/mtr-toolkit"
"Renumics/sliceguard" -> "Renumics/mesh2vec"
"Renumics/sliceguard" -> "Renumics/lexio"
"Renumics/sliceguard" -> "Renumics/awesome-anything2vec"
"logicalclocks/hops-examples" -> "logicalclocks/feature-store-api"
"logicalclocks/hops-examples" -> "logicalclocks/hops-util-py"
"cedar-policy/cedar-java" -> "cedar-policy/cedar-examples"
"replicate/getting-started-nextjs-language" -> "replicate/replicate-support-bot"
"replicate/replicate-support-bot" -> "replicate/getting-started-nextjs-language"
"Renumics/mesh2vec" -> "Renumics/awesome-anything2vec"
"facebook/prophet" -> "blue-yonder/tsfresh"
"facebook/prophet" -> "microsoft/LightGBM"
"facebook/prophet" -> "shap/shap"
"facebook/prophet" -> "dmlc/xgboost" ["e"=1]
"facebook/prophet" -> "statsmodels/statsmodels" ["e"=1]
"facebook/prophet" -> "ourownstory/neural_prophet"
"facebook/prophet" -> "sktime/sktime"
"facebook/prophet" -> "unit8co/darts"
"facebook/prophet" -> "EpistasisLab/tpot"
"facebook/prophet" -> "plotly/dash" ["e"=1]
"facebook/prophet" -> "ydataai/ydata-profiling"
"facebook/prophet" -> "explosion/spaCy" ["e"=1]
"facebook/prophet" -> "facebookresearch/fastText" ["e"=1]
"facebook/prophet" -> "facebookresearch/Kats"
"facebook/prophet" -> "mlflow/mlflow"
"shap/shap" -> "marcotcr/lime"
"shap/shap" -> "interpretml/interpret"
"shap/shap" -> "ydataai/ydata-profiling"
"shap/shap" -> "dmlc/xgboost" ["e"=1]
"shap/shap" -> "microsoft/LightGBM"
"shap/shap" -> "mlflow/mlflow"
"shap/shap" -> "optuna/optuna"
"shap/shap" -> "EpistasisLab/tpot"
"shap/shap" -> "scikit-learn-contrib/imbalanced-learn"
"shap/shap" -> "blue-yonder/tsfresh"
"shap/shap" -> "Lightning-AI/pytorch-lightning" ["e"=1]
"shap/shap" -> "hyperopt/hyperopt"
"shap/shap" -> "facebook/prophet"
"shap/shap" -> "ray-project/ray" ["e"=1]
"shap/shap" -> "iterative/dvc"
"sebp/scikit-survival" -> "CamDavidsonPilon/lifelines"
"sebp/scikit-survival" -> "havakv/pycox"
"sebp/scikit-survival" -> "square/pysurvival"
"sebp/scikit-survival" -> "jaredleekatzman/DeepSurv"
"sebp/scikit-survival" -> "autonlab/auton-survival"
"sebp/scikit-survival" -> "loft-br/xgboost-survival-embeddings"
"sebp/scikit-survival" -> "chl8856/DeepHit"
"sebp/scikit-survival" -> "koaning/scikit-lego"
"sebp/scikit-survival" -> "scikit-learn-contrib/MAPIE"
"sebp/scikit-survival" -> "robi56/Survival-Analysis-using-Deep-Learning"
"sebp/scikit-survival" -> "scikit-learn-contrib/category_encoders"
"sebp/scikit-survival" -> "BiomedSciAI/causallib" ["e"=1]
"sebp/scikit-survival" -> "CamDavidsonPilon/lifetimes" ["e"=1]
"sebp/scikit-survival" -> "MaxHalford/prince"
"sebp/scikit-survival" -> "scikit-learn-contrib/boruta_py"
"ucbrise/clipper" -> "combust/mleap" ["e"=1]
"ucbrise/clipper" -> "VertaAI/modeldb"
"ucbrise/clipper" -> "oracle/graphpipe"
"ucbrise/clipper" -> "SeldonIO/seldon-core"
"ucbrise/clipper" -> "amplab/keystone" ["e"=1]
"ucbrise/clipper" -> "polyaxon/polyaxon"
"ucbrise/clipper" -> "tensorflow/serving" ["e"=1]
"ucbrise/clipper" -> "pachyderm/pachyderm"
"ucbrise/clipper" -> "awslabs/multi-model-server" ["e"=1]
"ucbrise/clipper" -> "salesforce/TransmogrifAI"
"ucbrise/clipper" -> "Hydrospheredata/hydro-serving" ["e"=1]
"ucbrise/clipper" -> "jupyter-incubator/sparkmagic" ["e"=1]
"ucbrise/clipper" -> "studioml/studio"
"ucbrise/clipper" -> "uber/petastorm" ["e"=1]
"ucbrise/clipper" -> "snorkel-team/snorkel" ["e"=1]
"blue-yonder/tsfresh" -> "sktime/sktime"
"blue-yonder/tsfresh" -> "tslearn-team/tslearn"
"blue-yonder/tsfresh" -> "alteryx/featuretools"
"blue-yonder/tsfresh" -> "unit8co/darts"
"blue-yonder/tsfresh" -> "EpistasisLab/tpot"
"blue-yonder/tsfresh" -> "facebook/prophet"
"blue-yonder/tsfresh" -> "facebookresearch/Kats"
"blue-yonder/tsfresh" -> "awslabs/gluonts"
"blue-yonder/tsfresh" -> "TDAmeritrade/stumpy"
"blue-yonder/tsfresh" -> "shap/shap"
"blue-yonder/tsfresh" -> "scikit-learn-contrib/imbalanced-learn"
"blue-yonder/tsfresh" -> "automl/auto-sklearn"
"blue-yonder/tsfresh" -> "rasbt/mlxtend"
"blue-yonder/tsfresh" -> "timeseriesAI/tsai"
"blue-yonder/tsfresh" -> "RJT1990/pyflux"
"DmitryUlyanov/Multicore-TSNE" -> "CannyLab/tsne-cuda"
"DmitryUlyanov/Multicore-TSNE" -> "lvdmaaten/bhtsne"
"DmitryUlyanov/Multicore-TSNE" -> "lmcinnes/umap"
"DmitryUlyanov/Multicore-TSNE" -> "pavlin-policar/openTSNE"
"DmitryUlyanov/Multicore-TSNE" -> "danielfrg/tsne" ["e"=1]
"DmitryUlyanov/Multicore-TSNE" -> "lferry007/LargeVis"
"DmitryUlyanov/Multicore-TSNE" -> "KlugerLab/FIt-SNE" ["e"=1]
"DmitryUlyanov/Multicore-TSNE" -> "rushter/heamy" ["e"=1]
"DmitryUlyanov/Multicore-TSNE" -> "Far0n/kaggletils" ["e"=1]
"DmitryUlyanov/Multicore-TSNE" -> "geffy/tffm" ["e"=1]
"DmitryUlyanov/Multicore-TSNE" -> "TeamHG-Memex/eli5"
"DmitryUlyanov/Multicore-TSNE" -> "scikit-learn-contrib/hdbscan"
"DmitryUlyanov/Multicore-TSNE" -> "kaz-Anova/StackNet" ["e"=1]
"DmitryUlyanov/Multicore-TSNE" -> "reiinakano/xcessiv"
"DmitryUlyanov/Multicore-TSNE" -> "facebookresearch/StarSpace" ["e"=1]
"vlosing/driftDatasets" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"vlosing/driftDatasets" -> "gditzler/ConceptDriftResources"
"antoinecarme/pyaf" -> "microprediction/timemachines"
"antoinecarme/pyaf" -> "wwrechard/pydlm"
"antoinecarme/pyaf" -> "carlomazzaferro/scikit-hts"
"antoinecarme/pyaf" -> "firmai/atspy"
"antoinecarme/pyaf" -> "dmbee/seglearn" ["e"=1]
"antoinecarme/pyaf" -> "winedarksea/AutoTS"
"antoinecarme/pyaf" -> "CollinRooney12/htsprophet"
"antoinecarme/pyaf" -> "AutoViML/Auto_TS"
"antoinecarme/pyaf" -> "welch/seasonal"
"antoinecarme/pyaf" -> "alkaline-ml/pmdarima"
"antoinecarme/pyaf" -> "MBrouns/timeseers" ["e"=1]
"antoinecarme/pyaf" -> "tblume1992/ThymeBoost"
"antoinecarme/pyaf" -> "heidelbergcement/hcrystalball"
"antoinecarme/pyaf" -> "Ekeany/Boruta-Shap"
"antoinecarme/pyaf" -> "cuge1995/awesome-time-series" ["e"=1]
"pdpipe/pdpipe" -> "pyjanitor-devs/pandas_flavor" ["e"=1]
"pdpipe/pdpipe" -> "dabl/dabl"
"pdpipe/pdpipe" -> "pyjanitor-devs/pyjanitor"
"pdpipe/pdpipe" -> "SauceCat/pydqc" ["e"=1]
"pdpipe/pdpipe" -> "scikit-learn-contrib/sklearn-pandas"
"pdpipe/pdpipe" -> "engarde-dev/engarde" ["e"=1]
"pdpipe/pdpipe" -> "Neuraxio/Neuraxle"
"pdpipe/pdpipe" -> "oracle/skater"
"pdpipe/pdpipe" -> "jwkvam/bowtie" ["e"=1]
"pdpipe/pdpipe" -> "alteryx/compose"
"pdpipe/pdpipe" -> "reiinakano/xcessiv"
"pdpipe/pdpipe" -> "reiinakano/scikit-plot"
"kubeflow/model-registry" -> "containers/omlmd"
"JasperSnoek/spearmint" -> "HIPS/Spearmint"
"JasperSnoek/spearmint" -> "jaberg/hyperopt"
"JasperSnoek/spearmint" -> "Yelp/MOE"
"JasperSnoek/spearmint" -> "hyperopt/hyperopt"
"JasperSnoek/spearmint" -> "scikit-optimize/scikit-optimize"
"JasperSnoek/spearmint" -> "SheffieldML/GPyOpt"
"JasperSnoek/spearmint" -> "automl/SMAC3"
"JasperSnoek/spearmint" -> "automl/RoBO"
"JasperSnoek/spearmint" -> "hyperopt/hyperopt-sklearn"
"JasperSnoek/spearmint" -> "Lasagne/Lasagne" ["e"=1]
"JasperSnoek/spearmint" -> "dnouri/nolearn" ["e"=1]
"JasperSnoek/spearmint" -> "zygmuntz/hyperband"
"JasperSnoek/spearmint" -> "mila-iqia/blocks" ["e"=1]
"JasperSnoek/spearmint" -> "blei-lab/edward"
"JasperSnoek/spearmint" -> "dmlc/minerva" ["e"=1]
"SocialDataSci/Geospatial_Data_with_Python" -> "geopandas/scipy2018-geospatial-data"
"MaxHalford/prince" -> "esafak/mca"
"MaxHalford/prince" -> "sebp/scikit-survival"
"MaxHalford/prince" -> "koaning/scikit-lego"
"MaxHalford/prince" -> "feature-engine/feature_engine"
"MaxHalford/prince" -> "scikit-learn-contrib/category_encoders"
"MaxHalford/prince" -> "iskandr/fancyimpute"
"MaxHalford/prince" -> "DistrictDataLabs/yellowbrick"
"MaxHalford/prince" -> "csinva/imodels"
"MaxHalford/prince" -> "nicodv/kmodes"
"MaxHalford/prince" -> "scikit-learn-contrib/boruta_py"
"MaxHalford/prince" -> "raphaelvallat/pingouin"
"MaxHalford/prince" -> "Ekeany/Boruta-Shap"
"MaxHalford/prince" -> "shakedzy/dython"
"MaxHalford/prince" -> "rasbt/mlxtend"
"MaxHalford/prince" -> "scikit-learn-contrib/MAPIE"
"polyaxon/polyaxon" -> "pachyderm/pachyderm"
"polyaxon/polyaxon" -> "SeldonIO/seldon-core"
"polyaxon/polyaxon" -> "VertaAI/modeldb"
"polyaxon/polyaxon" -> "clearml/clearml"
"polyaxon/polyaxon" -> "IDSIA/sacred"
"polyaxon/polyaxon" -> "kubeflow/kubeflow"
"polyaxon/polyaxon" -> "iterative/dvc"
"polyaxon/polyaxon" -> "Netflix/metaflow"
"polyaxon/polyaxon" -> "iterative/cml"
"polyaxon/polyaxon" -> "bentoml/BentoML"
"polyaxon/polyaxon" -> "mlflow/mlflow"
"polyaxon/polyaxon" -> "PAIR-code/facets"
"polyaxon/polyaxon" -> "cortexlabs/cortex"
"polyaxon/polyaxon" -> "horovod/horovod"
"polyaxon/polyaxon" -> "hyperopt/hyperopt"
"peterwittek/somoclu" -> "sevamoo/SOMPY"
"peterwittek/somoclu" -> "cgorman/tensorflow-som"
"peterwittek/somoclu" -> "enricivi/growing_hierarchical_som"
"kunzite-app/008" -> "iterative/terraform-provider-iterative"
"dswah/pyGAM" -> "bambinos/bambi" ["e"=1]
"dswah/pyGAM" -> "scikit-learn-contrib/py-earth"
"dswah/pyGAM" -> "fabsig/GPBoost"
"dswah/pyGAM" -> "koaning/scikit-lego"
"dswah/pyGAM" -> "scikit-learn-contrib/MAPIE"
"dswah/pyGAM" -> "pymc-devs/pymc4" ["e"=1]
"dswah/pyGAM" -> "malmgrek/gammy"
"dswah/pyGAM" -> "scikit-learn-contrib/category_encoders"
"dswah/pyGAM" -> "civisanalytics/python-glmnet" ["e"=1]
"dswah/pyGAM" -> "pymc-labs/CausalPy" ["e"=1]
"dswah/pyGAM" -> "pydata/patsy" ["e"=1]
"dswah/pyGAM" -> "arviz-devs/arviz" ["e"=1]
"dswah/pyGAM" -> "Ekeany/Boruta-Shap"
"dswah/pyGAM" -> "scikit-learn-contrib/skope-rules"
"dswah/pyGAM" -> "stanfordmlgroup/ngboost"
"VertaAI/modeldb" -> "polyaxon/polyaxon"
"VertaAI/modeldb" -> "ucbrise/clipper"
"VertaAI/modeldb" -> "SeldonIO/seldon-core"
"VertaAI/modeldb" -> "combust/mleap" ["e"=1]
"VertaAI/modeldb" -> "feast-dev/feast"
"VertaAI/modeldb" -> "guildai/guildai"
"VertaAI/modeldb" -> "PipelineAI/pipeline"
"VertaAI/modeldb" -> "pachyderm/pachyderm"
"VertaAI/modeldb" -> "kleveross/ormb" ["e"=1]
"VertaAI/modeldb" -> "kubeflow/katib"
"VertaAI/modeldb" -> "mlrun/mlrun"
"VertaAI/modeldb" -> "zenml-io/zenml"
"VertaAI/modeldb" -> "logicalclocks/hopsworks"
"VertaAI/modeldb" -> "SeldonIO/alibi"
"VertaAI/modeldb" -> "snorkel-team/snorkel" ["e"=1]
"ermongroup/cs228-notes" -> "blei-lab/edward"
"ermongroup/cs228-notes" -> "deepgenerativemodels/notes" ["e"=1]
"ermongroup/cs228-notes" -> "pgmpy/pgmpy" ["e"=1]
"ermongroup/cs228-notes" -> "pyro-ppl/pyro"
"ermongroup/cs228-notes" -> "krasserm/bayesian-machine-learning"
"ermongroup/cs228-notes" -> "probml/pyprobml" ["e"=1]
"ermongroup/cs228-notes" -> "mila-iqia/welcome_tutorials" ["e"=1]
"ermongroup/cs228-notes" -> "cornellius-gp/gpytorch"
"ermongroup/cs228-notes" -> "williamFalcon/DeepRLHacks" ["e"=1]
"ermongroup/cs228-notes" -> "dustinvtran/ml-videos" ["e"=1]
"ermongroup/cs228-notes" -> "rll/rllab" ["e"=1]
"ermongroup/cs228-notes" -> "jaanli/variational-autoencoder" ["e"=1]
"ermongroup/cs228-notes" -> "avehtari/BDA_course_Aalto" ["e"=1]
"ermongroup/cs228-notes" -> "tensorflow/probability"
"ermongroup/cs228-notes" -> "dennybritz/deeplearning-papernotes" ["e"=1]
"rtavenar/SparseGroupLasso" -> "fabianp/group_lasso"
"rtavenar/SparseGroupLasso" -> "EugeneNdiaye/GAPSAFE_SGL"
"Nixtla/nixtlar" -> "Nixtla/coreforecast"
"chovanecm/sacredboard" -> "vivekratnavel/omniboard"
"chovanecm/sacredboard" -> "automl/labwatch"
"chovanecm/sacredboard" -> "JarnoRFB/incense"
"chovanecm/sacredboard" -> "Kaixhin/FGLab"
"blablahaha/concept-drift" -> "gditzler/ConceptDriftResources"
"blablahaha/concept-drift" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"blablahaha/concept-drift" -> "vlosing/driftDatasets"
"blablahaha/concept-drift" -> "alipsgh/tornado"
"blablahaha/concept-drift" -> "alipsgh/data-streams"
"blablahaha/concept-drift" -> "tegjyotsingh/ConceptDriftInduction"
"blablahaha/concept-drift" -> "NathanRxl/concept_drift"
"blablahaha/concept-drift" -> "Western-OC2-Lab/OASW-Concept-Drift-Detection-and-Adaptation"
"blablahaha/concept-drift" -> "rsdevigo/pyAdwin"
"blablahaha/concept-drift" -> "gditzler/ConceptDriftData"
"blablahaha/concept-drift" -> "ashokc/Concept-Drift-and-Model-Decay"
"thuijskens/bayesian-optimization" -> "HIPS/Spearmint"
"thuijskens/bayesian-optimization" -> "automl/RoBO"
"thuijskens/bayesian-optimization" -> "WillKoehrsen/hyperparameter-optimization"
"thuijskens/bayesian-optimization" -> "SheffieldML/GPyOpt"
"thuijskens/bayesian-optimization" -> "josejimenezluna/pyGPGO"
"openml/OpenML" -> "openml/openml-python"
"openml/OpenML" -> "openml/automlbenchmark"
"openml/OpenML" -> "openml/openml-r"
"openml/OpenML" -> "automl/RoBO"
"openml/OpenML" -> "automl/ConfigSpace"
"openml/OpenML" -> "openml/openml.org"
"openml/OpenML" -> "openml-labs/gama"
"openml/OpenML" -> "automl/SMAC3"
"openml/OpenML" -> "openml/openml-tutorial"
"openml/OpenML" -> "mlcommons/croissant" ["e"=1]
"HDI-Project/ATM" -> "HDI-Project/ATMSeer"
"HDI-Project/ATM" -> "MLBazaar/BTB"
"HDI-Project/ATM" -> "HDI-Project/FeatureHub"
"HDI-Project/ATM" -> "MLBazaar/MLBlocks"
"HDI-Project/ATM" -> "ClimbsRocks/auto_ml"
"HDI-Project/ATM" -> "MLBazaar/MLPrimitives"
"HDI-Project/ATM" -> "AxeldeRomblay/MLBox"
"HDI-Project/ATM" -> "MLBazaar/AutoBazaar"
"HDI-Project/ATM" -> "h2oai/mli-resources"
"scikit-adaptation/skada" -> "scikit-adaptation/skada-bench"
"scikit-adaptation/skada" -> "TorchDR/TorchDR"
"scikit-adaptation/skada" -> "benchopt/benchopt"
"scikit-adaptation/skada" -> "soda-inria/hazardous"
"scikit-adaptation/skada" -> "mind-inria/hidimstat"
"flennerhag/mlens" -> "vecxoz/vecstack" ["e"=1]
"flennerhag/mlens" -> "reiinakano/xcessiv"
"flennerhag/mlens" -> "scikit-learn-contrib/DESlib"
"flennerhag/mlens" -> "scikit-learn-contrib/category_encoders"
"flennerhag/mlens" -> "rushter/heamy" ["e"=1]
"flennerhag/mlens" -> "rasbt/mlxtend"
"flennerhag/mlens" -> "TeamHG-Memex/eli5"
"flennerhag/mlens" -> "reiinakano/scikit-plot"
"flennerhag/mlens" -> "scikit-optimize/scikit-optimize"
"flennerhag/mlens" -> "EpistasisLab/scikit-rebate"
"flennerhag/mlens" -> "scikit-learn-contrib/forest-confidence-interval"
"flennerhag/mlens" -> "yzhao062/awesome-ensemble-learning"
"flennerhag/mlens" -> "SauceCat/PDPbox"
"flennerhag/mlens" -> "Ekeany/Boruta-Shap"
"flennerhag/mlens" -> "scikit-learn-contrib/boruta_py"
"andrija-djurovic/adsfcr" -> "naenumtou/ifrs9"
"wujian16/Cornell-MOE" -> "GPflow/GPflowOpt"
"wujian16/Cornell-MOE" -> "uber-research/TuRBO"
"wujian16/Cornell-MOE" -> "automl/RoBO"
"wujian16/Cornell-MOE" -> "aminnayebi/HesBO"
"wujian16/Cornell-MOE" -> "kirthevasank/gp-parallel-ts"
"wujian16/Cornell-MOE" -> "ziyuw/rembo"
"wujian16/Cornell-MOE" -> "yunshengtian/DGEMO" ["e"=1]
"wujian16/Cornell-MOE" -> "wujian16/TwoStep-BayesOpt"
"wujian16/Cornell-MOE" -> "rmcantin/bayesopt"
"wujian16/Cornell-MOE" -> "markm541374/gpbo"
"wujian16/Cornell-MOE" -> "kirschnj/LineBO"
"wujian16/Cornell-MOE" -> "numbbo/coco"
"wujian16/Cornell-MOE" -> "SheffieldML/GPyOpt"
"wujian16/Cornell-MOE" -> "facebookresearch/alebo"
"wujian16/Cornell-MOE" -> "Yelp/MOE"
"automl/PFNs" -> "automl/TransformersCanDoBayesianInference"
"automl/PFNs" -> "automl/PFNs4BO"
"automl/PFNs" -> "microsoft/ticl"
"hyperopt/hyperopt-convnet" -> "hyperopt/hyperopt-nnet"
"amazon-science/tabsyn" -> "yandex-research/tab-ddpm"
"amazon-science/tabsyn" -> "MinkaiXu/TabDiff"
"amazon-science/tabsyn" -> "SamsungSAILMontreal/ForestDiffusion"
"amazon-science/tabsyn" -> "ChaejeongLee/CoDi"
"amazon-science/tabsyn" -> "gianlucatruda/TableDiffusion"
"Renumics/renumics-rag" -> "Renumics/awesome-anything2vec"
"jpmml/jpmml-lightgbm" -> "lyg5623/lightgbm_predict4j"
"jpmml/jpmml-lightgbm" -> "alipay/jpmml-sparkml-lightgbm"
"jpmml/jpmml-lightgbm" -> "jpmml/jpmml-sklearn"
"jpmml/jpmml-lightgbm" -> "jpmml/jpmml-xgboost"
"jpmml/jpmml-lightgbm" -> "jpmml/jpmml-model"
"jpmml/jpmml-lightgbm" -> "jpmml/jpmml-sparkml"
"dssg/triage" -> "dssg/dirtyduck"
"dssg/triage" -> "dssg/MLforPublicPolicy"
"dssg/triage" -> "dssg/mlforpublicpolicylab"
"dssg/triage" -> "dssg/police-eis"
"dssg/triage" -> "dssg/hitchhikers-guide"
"dssg/triage" -> "dssg/dsapp-reading-group"
"dssg/triage" -> "dssg/aequitas"
"dssg/triage" -> "rayidghani/magicloops"
"dssg/triage" -> "dssg/fairness_tutorial"
"zhao-zilong/Tabula" -> "Team-TUD/CTAB-GAN-Plus"
"zhao-zilong/Tabula" -> "Team-TUD/CTAB-GAN-Plus-DP"
"zhao-zilong/Tabula" -> "Team-TUD/CTAB-GAN"
"automl/HPOlib1.5" -> "automl/HPOlib"
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python-2E" -> "PacktPublishing/Time-Series-Analysis-with-Python-Cookbook-Second-Edition"
"paraklas/NARGP" -> "Xiao-dong-Wang/Multifidelity-GP"
"paraklas/NARGP" -> "XuhuiM/Multi-Fidelity-DNNs-PINNs"
"jameshensman/VFF" -> "thangbui/geepee"
"Novartis/torchsurv" -> "shi-ang/SurvivalEVAL"
"automl/ParameterImportance" -> "automl/CAVE"
"automl/ParameterImportance" -> "souzamarcelo/acviz"
"optuna/optunahub" -> "optuna/optunahub-registry"
"optuna/optunahub-registry" -> "optuna/optunahub"
"optuna/optunahub-registry" -> "optuna/optuna-visualization-regression-tests"
"eltonlaw/impyute" -> "epsilon-machine/missingpy"
"eltonlaw/impyute" -> "iskandr/fancyimpute"
"eltonlaw/impyute" -> "kearnz/autoimpute"
"eltonlaw/impyute" -> "awslabs/datawig"
"eltonlaw/impyute" -> "OpenIDEA-YunanUniversity/ycimpute"
"eltonlaw/impyute" -> "Oracen-zz/MIDAS"
"eltonlaw/impyute" -> "scikit-learn-contrib/stability-selection"
"eltonlaw/impyute" -> "jsyoon0823/GAIN"
"eltonlaw/impyute" -> "AnotherSamWilson/miceforest"
"eltonlaw/impyute" -> "scikit-learn-contrib/forest-confidence-interval"
"TorchDR/TorchDR" -> "scikit-adaptation/skada"
"TorchDR/TorchDR" -> "scikit-adaptation/skada-bench"
"penfever/TuneTables" -> "automl/Drift-Resilient_TabPFN"
"cedar-policy/cedar-go" -> "cedar-policy/cedar-docs"
"hoxo-m/densratio_py" -> "srome/pykliep"
"hoxo-m/densratio_py" -> "daisuke-motoki/change_point_detector"
"vinecopulib/vinecopulib" -> "vinecopulib/rvinecopulib"
"james77777778/keras-image-models" -> "james77777778/keras-aug"
"asnelt/mixedvines" -> "wgurecky/StarVine"
"machinelearningnuremberg/QuickTune" -> "machinelearningnuremberg/DeepRankingEnsembles"
"machinelearningnuremberg/QuickTune" -> "machinelearningnuremberg/DeepPipe"
"machinelearningnuremberg/QuickTune" -> "machinelearningnuremberg/DyHPO"
"machinelearningnuremberg/QuickTune" -> "machinelearningnuremberg/FSBO"
"machinelearningnuremberg/QuickTune" -> "automl/quicktunetool"
"unionai/unionai-examples" -> "unionai-oss/video-translation"
"microsoft/ticl" -> "automl/Drift-Resilient_TabPFN"
"microsoft/ticl" -> "lektor-lol/lektor-lol.github.io"
"microsoft/ticl" -> "penfever/TuneTables"
"automl/lcpfn" -> "automl/ifBO"
"unionai-oss/video-translation" -> "unionai/unionai-examples"
"boniolp/dsymb-playground" -> "sylvaincom/astride"
"arayabrain/SimplestGANBlogpostCode" -> "sile/yamakan"
"iterative/dvc" -> "iterative/cml"
"iterative/dvc" -> "mlflow/mlflow"
"iterative/dvc" -> "shap/shap"
"iterative/dvc" -> "Netflix/metaflow"
"iterative/dvc" -> "kedro-org/kedro"
"iterative/dvc" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"iterative/dvc" -> "drivendataorg/cookiecutter-data-science"
"iterative/dvc" -> "great-expectations/great_expectations" ["e"=1]
"iterative/dvc" -> "dask/dask" ["e"=1]
"iterative/dvc" -> "ray-project/ray" ["e"=1]
"iterative/dvc" -> "modin-project/modin"
"iterative/dvc" -> "ydataai/ydata-profiling"
"iterative/dvc" -> "visenger/awesome-mlops" ["e"=1]
"iterative/dvc" -> "kubeflow/kubeflow"
"iterative/dvc" -> "bentoml/BentoML"
"christophM/interpretable-ml-book" -> "MingchaoZhu/InterpretableMLBook" ["e"=1]
"christophM/interpretable-ml-book" -> "jphall663/awesome-machine-learning-interpretability"
"christophM/interpretable-ml-book" -> "interpretml/interpret"
"christophM/interpretable-ml-book" -> "marcotcr/lime"
"christophM/interpretable-ml-book" -> "shap/shap"
"christophM/interpretable-ml-book" -> "uber/causalml" ["e"=1]
"christophM/interpretable-ml-book" -> "ModelOriented/DALEX"
"christophM/interpretable-ml-book" -> "lopusz/awesome-interpretable-machine-learning"
"christophM/interpretable-ml-book" -> "SeldonIO/alibi"
"christophM/interpretable-ml-book" -> "giuseppec/iml" ["e"=1]
"christophM/interpretable-ml-book" -> "scikit-learn-contrib/imbalanced-learn"
"christophM/interpretable-ml-book" -> "rasbt/mlxtend"
"christophM/interpretable-ml-book" -> "TeamHG-Memex/eli5"
"christophM/interpretable-ml-book" -> "Trusted-AI/AIX360"
"christophM/interpretable-ml-book" -> "pytorch/captum" ["e"=1]
"ragulpr/wtte-rnn" -> "daynebatten/keras-wtte-rnn"
"ragulpr/wtte-rnn" -> "gm-spacagna/deep-ttf"
"ragulpr/wtte-rnn" -> "ragulpr/wtte-rnn-examples"
"ragulpr/wtte-rnn" -> "CamDavidsonPilon/lifetimes" ["e"=1]
"ragulpr/wtte-rnn" -> "CamDavidsonPilon/lifelines"
"ragulpr/wtte-rnn" -> "better/convoys"
"ragulpr/wtte-rnn" -> "sebp/scikit-survival"
"ragulpr/wtte-rnn" -> "robi56/Survival-Analysis-using-Deep-Learning"
"ragulpr/wtte-rnn" -> "jaredleekatzman/DeepSurv"
"ragulpr/wtte-rnn" -> "autonlab/auton-survival"
"ragulpr/wtte-rnn" -> "maciejkula/spotlight" ["e"=1]
"ragulpr/wtte-rnn" -> "pymc-devs/pymc4" ["e"=1]
"daynebatten/keras-wtte-rnn" -> "gm-spacagna/deep-ttf"
"daynebatten/keras-wtte-rnn" -> "ragulpr/wtte-rnn"
"daynebatten/keras-wtte-rnn" -> "ragulpr/wtte-rnn-examples"
"alkaline-ml/pmdarima" -> "winedarksea/AutoTS"
"alkaline-ml/pmdarima" -> "tslearn-team/tslearn"
"alkaline-ml/pmdarima" -> "RJT1990/pyflux"
"alkaline-ml/pmdarima" -> "bashtage/arch" ["e"=1]
"alkaline-ml/pmdarima" -> "AutoViML/Auto_TS"
"alkaline-ml/pmdarima" -> "Nixtla/statsforecast"
"alkaline-ml/pmdarima" -> "awslabs/gluonts"
"alkaline-ml/pmdarima" -> "blue-yonder/tsfresh"
"alkaline-ml/pmdarima" -> "sktime/sktime"
"alkaline-ml/pmdarima" -> "linkedin/greykite"
"alkaline-ml/pmdarima" -> "uber/orbit"
"alkaline-ml/pmdarima" -> "TDAmeritrade/stumpy"
"alkaline-ml/pmdarima" -> "johannfaouzi/pyts" ["e"=1]
"alkaline-ml/pmdarima" -> "firmai/atspy"
"alkaline-ml/pmdarima" -> "unit8co/darts"
"reiinakano/xcessiv" -> "ClimbsRocks/auto_ml"
"reiinakano/xcessiv" -> "kaz-Anova/StackNet" ["e"=1]
"reiinakano/xcessiv" -> "AxeldeRomblay/MLBox"
"reiinakano/xcessiv" -> "joeddav/devol" ["e"=1]
"reiinakano/xcessiv" -> "reiinakano/scikit-plot"
"reiinakano/xcessiv" -> "rushter/heamy" ["e"=1]
"reiinakano/xcessiv" -> "flennerhag/mlens"
"reiinakano/xcessiv" -> "TeamHG-Memex/eli5"
"reiinakano/xcessiv" -> "Far0n/kaggletils" ["e"=1]
"reiinakano/xcessiv" -> "hyperopt/hyperopt-sklearn"
"reiinakano/xcessiv" -> "EpistasisLab/tpot"
"reiinakano/xcessiv" -> "scikit-optimize/scikit-optimize"
"reiinakano/xcessiv" -> "rsteca/sklearn-deap"
"reiinakano/xcessiv" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"reiinakano/xcessiv" -> "oracle/skater"
"biolab/orange3" -> "statsmodels/statsmodels" ["e"=1]
"biolab/orange3" -> "vega/altair" ["e"=1]
"biolab/orange3" -> "dask/dask" ["e"=1]
"biolab/orange3" -> "automl/auto-sklearn"
"biolab/orange3" -> "h2oai/h2o-3"
"biolab/orange3" -> "DistrictDataLabs/yellowbrick"
"biolab/orange3" -> "biolab/orange3-text" ["e"=1]
"biolab/orange3" -> "bokeh/bokeh" ["e"=1]
"biolab/orange3" -> "EpistasisLab/tpot"
"biolab/orange3" -> "biolab/orange2"
"biolab/orange3" -> "plotly/dash" ["e"=1]
"biolab/orange3" -> "mwaskom/seaborn" ["e"=1]
"biolab/orange3" -> "rasbt/mlxtend"
"biolab/orange3" -> "ydataai/ydata-profiling"
"biolab/orange3" -> "PAIR-code/facets"
"containers/omlmd" -> "kubeflow/model-registry"
"Bioconductor/BiocStickers" -> "Bioconductor/bioc_git_transition"
"fbrundu/pymrmr" -> "danielhomola/mifs"
"fbrundu/pymrmr" -> "kr-prince/mRMR"
"fbrundu/pymrmr" -> "mutantturkey/PyFeast"
"fbrundu/pymrmr" -> "bhklab/PymRMRe"
"fbrundu/pymrmr" -> "chr2117216003/machine_learning"
"reiinakano/scikit-plot" -> "DistrictDataLabs/yellowbrick"
"reiinakano/scikit-plot" -> "TeamHG-Memex/eli5"
"reiinakano/scikit-plot" -> "rasbt/mlxtend"
"reiinakano/scikit-plot" -> "scikit-optimize/scikit-optimize"
"reiinakano/scikit-plot" -> "scikit-learn-contrib/imbalanced-learn"
"reiinakano/scikit-plot" -> "scikit-learn-contrib/category_encoders"
"reiinakano/scikit-plot" -> "EpistasisLab/tpot"
"reiinakano/scikit-plot" -> "hyperopt/hyperopt-sklearn"
"reiinakano/scikit-plot" -> "reiinakano/xcessiv"
"reiinakano/scikit-plot" -> "scikit-learn-contrib/sklearn-pandas"
"reiinakano/scikit-plot" -> "oracle/skater"
"reiinakano/scikit-plot" -> "jundongl/scikit-feature"
"reiinakano/scikit-plot" -> "automl/auto-sklearn"
"reiinakano/scikit-plot" -> "ResidentMario/missingno"
"reiinakano/scikit-plot" -> "scikit-learn-contrib/boruta_py"
"cemoody/topicsne" -> "mxl1990/tsne-pytorch"
"cemoody/topicsne" -> "szagoruyko/functional-zoo" ["e"=1]
"cemoody/topicsne" -> "oreillymedia/t-SNE-tutorial"
"cemoody/topicsne" -> "kevinzakka/tsne-viz"
"cemoody/topicsne" -> "pavlin-policar/openTSNE"
"cemoody/topicsne" -> "vzhong/dashboard"
"cemoody/topicsne" -> "locuslab/qpth" ["e"=1]
"DeltaAnalytics/machine_learning_for_good" -> "DeltaAnalytics/machine_learning_resources"
"probabl-ai/skore" -> "skrub-data/skrub"
"probabl-ai/skore" -> "skops-dev/skops"
"probabl-ai/skore" -> "soda-inria/hazardous"
"probabl-ai/skore" -> "koaning/embetter"
"probabl-ai/skore" -> "koaning/scikit-lego"
"probabl-ai/skore" -> "narwhals-dev/narwhals" ["e"=1]
"probabl-ai/skore" -> "sylvaincom/astride"
"probabl-ai/skore" -> "mmschlk/shapiq" ["e"=1]
"probabl-ai/skore" -> "mljar/supertree"
"probabl-ai/skore" -> "scikit-learn-contrib/project-template"
"hyperopt/hyperopt-sklearn" -> "hyperopt/hyperopt"
"hyperopt/hyperopt-sklearn" -> "scikit-optimize/scikit-optimize"
"hyperopt/hyperopt-sklearn" -> "scikit-learn-contrib/sklearn-pandas"
"hyperopt/hyperopt-sklearn" -> "scikit-learn-contrib/boruta_py"
"hyperopt/hyperopt-sklearn" -> "automl/auto-sklearn"
"hyperopt/hyperopt-sklearn" -> "AxeldeRomblay/MLBox"
"hyperopt/hyperopt-sklearn" -> "TeamHG-Memex/eli5"
"hyperopt/hyperopt-sklearn" -> "reiinakano/scikit-plot"
"hyperopt/hyperopt-sklearn" -> "maxpumperla/hyperas"
"hyperopt/hyperopt-sklearn" -> "scikit-learn-contrib/category_encoders"
"hyperopt/hyperopt-sklearn" -> "EpistasisLab/tpot"
"hyperopt/hyperopt-sklearn" -> "rasbt/mlxtend"
"hyperopt/hyperopt-sklearn" -> "ClimbsRocks/auto_ml"
"hyperopt/hyperopt-sklearn" -> "automl/SMAC3"
"hyperopt/hyperopt-sklearn" -> "HIPS/Spearmint"
"GPflow/GPflowOpt" -> "secondmind-labs/trieste"
"GPflow/GPflowOpt" -> "GPflow/GPflow"
"GPflow/GPflowOpt" -> "SheffieldML/GPyOpt"
"GPflow/GPflowOpt" -> "wujian16/Cornell-MOE"
"GPflow/GPflowOpt" -> "uber-research/TuRBO"
"GPflow/GPflowOpt" -> "markvdw/gpflow-monitor"
"GPflow/GPflowOpt" -> "automl/RoBO"
"GPflow/GPflowOpt" -> "HIPS/Spearmint"
"jndean/LossRider" -> "mljar/supertree"
"tensorflow/transform" -> "tensorflow/model-analysis"
"tensorflow/transform" -> "tensorflow/data-validation"
"tensorflow/transform" -> "tensorflow/tfx"
"tensorflow/transform" -> "tensorflow/ecosystem" ["e"=1]
"tensorflow/transform" -> "tensorflow/estimator"
"tensorflow/transform" -> "tensorflow/fold" ["e"=1]
"tensorflow/transform" -> "tensorflow/benchmarks" ["e"=1]
"tensorflow/transform" -> "GoogleCloudPlatform/cloudml-samples" ["e"=1]
"tensorflow/transform" -> "openxla/xprof"
"tensorflow/transform" -> "tensorflow/serving" ["e"=1]
"tensorflow/transform" -> "tensorflow/io"
"tensorflow/transform" -> "GoogleCloudPlatform/tf-estimator-tutorials" ["e"=1]
"tensorflow/transform" -> "tensorflow/tfx-bsl"
"tensorflow/transform" -> "tensorflow/metadata"
"tensorflow/transform" -> "tensorflow/text"
"ustunb/risk-slim" -> "corels/corels"
"ustunb/risk-slim" -> "ustunb/slim-python"
"ustunb/risk-slim" -> "ustunb/actionable-recourse"
"corels/corels" -> "corels/pycorels"
"corels/corels" -> "ustunb/risk-slim"
"corels/corels" -> "Hongyuy/sbrl"
"corels/corels" -> "interpretml/fastSparse"
"zygmuntz/hyperband" -> "kevinzakka/hypersearch"
"zygmuntz/hyperband" -> "thuijskens/scikit-hyperband"
"zygmuntz/hyperband" -> "automl/HpBandSter"
"zygmuntz/hyperband" -> "scikit-optimize/scikit-optimize"
"zygmuntz/hyperband" -> "automl/SMAC3"
"zygmuntz/hyperband" -> "automl/RoBO"
"zygmuntz/hyperband" -> "scikit-learn-contrib/polylearn" ["e"=1]
"zygmuntz/hyperband" -> "rsteca/sklearn-deap"
"zygmuntz/hyperband" -> "JasperSnoek/spearmint"
"zygmuntz/hyperband" -> "reiinakano/xcessiv"
"zygmuntz/hyperband" -> "RGF-team/rgf" ["e"=1]
"zygmuntz/hyperband" -> "dask/dask-searchcv" ["e"=1]
"zygmuntz/hyperband" -> "hyperopt/hyperopt-sklearn"
"zygmuntz/hyperband" -> "hyperopt/hyperopt"
"zygmuntz/hyperband" -> "maxpumperla/hyperas"
"OVVO-Financial/NNS" -> "OVVO-Financial/NNS-Python"
"oracle/skater" -> "TeamHG-Memex/eli5"
"oracle/skater" -> "SauceCat/PDPbox"
"oracle/skater" -> "andosa/treeinterpreter"
"oracle/skater" -> "marcotcr/anchor"
"oracle/skater" -> "reiinakano/scikit-plot"
"oracle/skater" -> "tmadl/sklearn-expertsys"
"oracle/skater" -> "jphall663/interpretable_machine_learning_with_python"
"oracle/skater" -> "ModelOriented/DALEX"
"oracle/skater" -> "lopusz/awesome-interpretable-machine-learning"
"oracle/skater" -> "AustinRochford/PyCEbox"
"oracle/skater" -> "akelleh/causality" ["e"=1]
"oracle/skater" -> "christophM/rulefit"
"oracle/skater" -> "h2oai/mli-resources"
"oracle/skater" -> "scikit-learn-contrib/skope-rules"
"oracle/skater" -> "SeldonIO/alibi"
"mljar/supertree" -> "jndean/LossRider"
"MetaEvo/Awesome-MetaBBO" -> "LabGong/psc4ddea"
"MetaEvo/Awesome-MetaBBO" -> "MetaEvo/MetaBox"
"MetaEvo/Awesome-MetaBBO" -> "MetaEvo/psc4MetaBBO"
"MetaEvo/Awesome-MetaBBO" -> "GMC-DRL/Symbol"
"SheffieldML/GPmat" -> "SheffieldML/deepGP"
"SheffieldML/GPmat" -> "SheffieldML/multigp"
"SheffieldML/GPmat" -> "sods/netlab"
"SheffieldML/GPmat" -> "SheffieldML/vargplvm"
"SheffieldML/GPmat" -> "maziarraissi/TutorialGP" ["e"=1]
"SheffieldML/GPmat" -> "gpstuff-dev/gpstuff"
"SheffieldML/GPmat" -> "MarcoTodescato/Efficient-GP-Regression-via-Kalman-Filtering"
"SheffieldML/GPmat" -> "HildoBijl/GPRT"
"scikit-fuzzy/scikit-fuzzy" -> "twmeggs/anfis"
"scikit-fuzzy/scikit-fuzzy" -> "aresio/simpful"
"scikit-fuzzy/scikit-fuzzy" -> "jfpower/anfis-pytorch"
"scikit-fuzzy/scikit-fuzzy" -> "Python-Fuzzylogic/fuzzylogic"
"scikit-fuzzy/scikit-fuzzy" -> "tiagoCuervo/TensorANFIS"
"scikit-fuzzy/scikit-fuzzy" -> "omadson/fuzzy-c-means" ["e"=1]
"scikit-fuzzy/scikit-fuzzy" -> "fuzzylite/pyfuzzylite"
"scikit-fuzzy/scikit-fuzzy" -> "fuzzylite/fuzzylite"
"scikit-fuzzy/scikit-fuzzy" -> "tslearn-team/tslearn"
"scikit-fuzzy/scikit-fuzzy" -> "Haghrah/PyIT2FLS"
"scikit-fuzzy/scikit-fuzzy" -> "rsteca/sklearn-deap"
"scikit-fuzzy/scikit-fuzzy" -> "scikit-optimize/scikit-optimize"
"scikit-fuzzy/scikit-fuzzy" -> "caigen/scikit-fuzzy-examples"
"scikit-fuzzy/scikit-fuzzy" -> "Apress/deep-neuro-fuzzy-systems-w-python"
"scikit-fuzzy/scikit-fuzzy" -> "RJT1990/pyflux"
"brianrho/FPM" -> "brianrho/fpmatch"
"brianrho/FPM" -> "arslanmughal99/phisher"
"brianrho/FPM" -> "robber5/wifi-killer"
"szilard/teach-data-science-UCLA-master-appl-stats" -> "jphall663/GWU_data_mining"
"aj-cloete/pssa" -> "kieferk/pymssa"
"aj-cloete/pssa" -> "dmarienko/chaos"
"Python-Fuzzylogic/fuzzylogic" -> "aresio/simpful"
"scikit-learn-contrib/py-earth" -> "dswah/pyGAM"
"scikit-learn-contrib/py-earth" -> "scikit-learn-contrib/forest-confidence-interval"
"scikit-learn-contrib/py-earth" -> "tmadl/sklearn-expertsys"
"scikit-learn-contrib/py-earth" -> "RGF-team/rgf" ["e"=1]
"scikit-learn-contrib/py-earth" -> "scikit-learn-contrib/scikit-learn-contrib"
"scikit-learn-contrib/py-earth" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/py-earth" -> "rushter/heamy" ["e"=1]
"scikit-learn-contrib/py-earth" -> "pandas-ml/pandas-ml" ["e"=1]
"scikit-learn-contrib/py-earth" -> "scikit-optimize/scikit-optimize"
"scikit-learn-contrib/py-earth" -> "scikit-learn-contrib/scikit-learn-extra"
"scikit-learn-contrib/py-earth" -> "cesium-ml/cesium" ["e"=1]
"KKimura360/MLC_toolbox" -> "luuil/MLFSPS"
"KKimura360/MLC_toolbox" -> "ZesenChen/multi-label-dataset"
"tostq/Easy_HMM" -> "guyz/HMM"
"tostq/Easy_HMM" -> "hmmlearn/hmmlearn"
"tostq/Easy_HMM" -> "Eilene/HMM-python"
"tostq/Easy_HMM" -> "aehuynh/hidden-markov-model" ["e"=1]
"tostq/Easy_HMM" -> "JINGEWU/Stock-Market-Trend-Analysis-Using-HMM-LSTM" ["e"=1]
"tostq/Easy_HMM" -> "miaofu/HMM-and-Bayesian-HMM"
"PR-Ryan/DEMO" -> "Evolutionary-Intelligence/dpop7"
"PR-Ryan/DEMO" -> "Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP"
"PR-Ryan/DEMO" -> "auto4opt/AutoOpt"
"christopherjenness/DBCV" -> "FelSiq/DBCV"
"christopherjenness/DBCV" -> "erdogant/clusteval"
"christopherjenness/DBCV" -> "awslabs/amazon-denseclus"
"lanagarmire/cox-nnet" -> "huangzhii/SALMON"
"rivolli/mfe" -> "victorhb/ImbCoL"
"rivolli/mfe" -> "lpfgarcia/ECoL"
"rivolli/mfe" -> "tiagobotari/melime"
"google-ai-edge/litert-samples" -> "google-ai-edge/LiteRT"
"google-ai-edge/LiteRT" -> "google-ai-edge/ai-edge-torch" ["e"=1]
"google-ai-edge/LiteRT" -> "google-ai-edge/litert-samples"
"google-ai-edge/LiteRT" -> "google-ai-edge/model-explorer" ["e"=1]
"google-ai-edge/LiteRT" -> "google-ai-edge/ai-edge-quantizer"
"google-ai-edge/LiteRT" -> "tensorflow/tflite-support"
"scikit-garden/scikit-garden" -> "scikit-learn-contrib/forest-confidence-interval"
"scikit-garden/scikit-garden" -> "balajiln/mondrianforest"
"scikit-garden/scikit-garden" -> "zillow/quantile-forest"
"scikit-garden/scikit-garden" -> "dfagnan/QuantileRandomForestRegressor"
"scikit-garden/scikit-garden" -> "civisanalytics/civisml-extensions"
"scikit-garden/scikit-garden" -> "jasperroebroek/sklearn-quantile"
"PerformanceEstimation/Performance-Estimation-Toolbox" -> "PerformanceEstimation/PEPit"
"PerformanceEstimation/Performance-Estimation-Toolbox" -> "PerformanceEstimation/Learning-Performance-Estimation"
"PerformanceEstimation/Performance-Estimation-Toolbox" -> "AdrienTaylor/AccelerationMonograph"
"MinkaiXu/TabDiff" -> "amazon-science/tabsyn"
"zi-w/Max-value-Entropy-Search" -> "zi-w/Structural-Kernel-Learning-for-HDBBO"
"zi-w/Max-value-Entropy-Search" -> "MethodsOfMachineLearning/entropy-search"
"algofairness/fairness-comparison" -> "mbilalzafar/fair-classification"
"algofairness/fairness-comparison" -> "columbia/fairtest"
"algofairness/fairness-comparison" -> "algofairness/BlackBoxAuditing"
"algofairness/fairness-comparison" -> "adebayoj/fairml"
"algofairness/fairness-comparison" -> "cosmicBboy/themis-ml"
"algofairness/fairness-comparison" -> "VectorInstitute/laftr"
"algofairness/fairness-comparison" -> "equialgo/fairness-in-ml"
"algofairness/fairness-comparison" -> "pymetrics/audit-ai"
"lucfra/RFHO" -> "lucfra/FAR-HO"
"lucfra/RFHO" -> "prolearner/hyper-representation"
"lucfra/RFHO" -> "callous-youth/IAPTT-GM"
"scoliann/GeneticAlgorithmFeatureSelection" -> "renatoosousa/GeneticAlgorithmForFeatureSelection"
"keras-team/keras-rs" -> "abheesht17/whisper-keras"
"XAI-liacs/LLaMEA" -> "IOHprofiler/ModularCMAES"
"kjchalup/independence_test" -> "kjchalup/fcit"
"WillKoehrsen/Hands-On-Machine-Learning" -> "WillKoehrsen/deep_learning_cookbook"
"WillKoehrsen/Hands-On-Machine-Learning" -> "WillKoehrsen/neural-networks"
"2019ChenGong/DPImageBench" -> "SunnierLee/DP-ImaGen"
"vinecopulib/rvinecopulib" -> "tnagler/VineCopula"
"vinecopulib/rvinecopulib" -> "vinecopulib/vinecopulib"
"mikemull/midaspy" -> "Yoseph-Zuskin/midaspy"
"tegjyotsingh/ConceptDriftInduction" -> "gditzler/ConceptDriftResources"
"tegjyotsingh/ConceptDriftInduction" -> "gditzler/ConceptDriftData"
"thangbui/geepee" -> "thangbui/deepGP_approxEP"
"automl/quicktunetool" -> "machinelearningnuremberg/DyHPO"
"automl/Drift-Resilient_TabPFN" -> "lektor-lol/lektor-lol.github.io"
"uwheel/datafusion-uwheel" -> "uwheel/uwheel"
"lmcinnes/umap" -> "scikit-learn-contrib/hdbscan"
"lmcinnes/umap" -> "shap/shap"
"lmcinnes/umap" -> "marcotcr/lime"
"lmcinnes/umap" -> "DistrictDataLabs/yellowbrick"
"lmcinnes/umap" -> "scikit-learn-contrib/imbalanced-learn"
"lmcinnes/umap" -> "hyperopt/hyperopt"
"lmcinnes/umap" -> "pyro-ppl/pyro"
"lmcinnes/umap" -> "blue-yonder/tsfresh"
"lmcinnes/umap" -> "DmitryUlyanov/Multicore-TSNE"
"lmcinnes/umap" -> "skorch-dev/skorch"
"lmcinnes/umap" -> "vega/altair" ["e"=1]
"lmcinnes/umap" -> "rapidsai/cuml"
"lmcinnes/umap" -> "HIPS/autograd"
"lmcinnes/umap" -> "spotify/annoy" ["e"=1]
"lmcinnes/umap" -> "arogozhnikov/einops" ["e"=1]
"scikit-learn-contrib/sklearn-pandas" -> "hyperopt/hyperopt-sklearn"
"scikit-learn-contrib/sklearn-pandas" -> "scikit-learn-contrib/category_encoders"
"scikit-learn-contrib/sklearn-pandas" -> "rasbt/mlxtend"
"scikit-learn-contrib/sklearn-pandas" -> "scikit-learn-contrib/imbalanced-learn"
"scikit-learn-contrib/sklearn-pandas" -> "automl/auto-sklearn"
"scikit-learn-contrib/sklearn-pandas" -> "DistrictDataLabs/yellowbrick"
"scikit-learn-contrib/sklearn-pandas" -> "TeamHG-Memex/eli5"
"scikit-learn-contrib/sklearn-pandas" -> "reiinakano/scikit-plot"
"scikit-learn-contrib/sklearn-pandas" -> "scikit-optimize/scikit-optimize"
"scikit-learn-contrib/sklearn-pandas" -> "EpistasisLab/tpot"
"scikit-learn-contrib/sklearn-pandas" -> "koaning/scikit-lego"
"scikit-learn-contrib/sklearn-pandas" -> "alteryx/featuretools"
"scikit-learn-contrib/sklearn-pandas" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/sklearn-pandas" -> "feature-engine/feature_engine"
"scikit-learn-contrib/sklearn-pandas" -> "blaze/blaze" ["e"=1]
"horovod/horovod" -> "bytedance/byteps" ["e"=1]
"horovod/horovod" -> "ray-project/ray" ["e"=1]
"horovod/horovod" -> "kubeflow/kubeflow"
"horovod/horovod" -> "NVIDIA/apex" ["e"=1]
"horovod/horovod" -> "apache/tvm" ["e"=1]
"horovod/horovod" -> "facebookresearch/faiss" ["e"=1]
"horovod/horovod" -> "tensorflow/tensor2tensor" ["e"=1]
"horovod/horovod" -> "NVIDIA/Megatron-LM" ["e"=1]
"horovod/horovod" -> "apache/mxnet" ["e"=1]
"horovod/horovod" -> "mlflow/mlflow"
"horovod/horovod" -> "pyro-ppl/pyro"
"horovod/horovod" -> "google-deepmind/sonnet" ["e"=1]
"horovod/horovod" -> "microsoft/nni"
"horovod/horovod" -> "jax-ml/jax" ["e"=1]
"horovod/horovod" -> "NVIDIA/nccl" ["e"=1]
"SauceCat/PDPbox" -> "AustinRochford/PyCEbox"
"SauceCat/PDPbox" -> "TeamHG-Memex/eli5"
"SauceCat/PDPbox" -> "oracle/skater"
"SauceCat/PDPbox" -> "blent-ai/ALEPython"
"SauceCat/PDPbox" -> "andosa/treeinterpreter"
"SauceCat/PDPbox" -> "parrt/random-forest-importances"
"SauceCat/PDPbox" -> "cosmicBboy/themis-ml"
"SauceCat/PDPbox" -> "scikit-learn-contrib/boruta_py"
"SauceCat/PDPbox" -> "scikit-learn-contrib/category_encoders"
"SauceCat/PDPbox" -> "DistrictDataLabs/yellowbrick"
"SauceCat/PDPbox" -> "csinva/imodels"
"SauceCat/PDPbox" -> "SeldonIO/alibi"
"SauceCat/PDPbox" -> "ModelOriented/DALEX"
"SauceCat/PDPbox" -> "parrt/dtreeviz"
"SauceCat/PDPbox" -> "lopusz/awesome-interpretable-machine-learning"
"PAIR-code/facets" -> "google-deepmind/sonnet" ["e"=1]
"PAIR-code/facets" -> "marcotcr/lime"
"PAIR-code/facets" -> "tensorflow/tfjs-core" ["e"=1]
"PAIR-code/facets" -> "pyro-ppl/pyro"
"PAIR-code/facets" -> "facebookresearch/fastText" ["e"=1]
"PAIR-code/facets" -> "EpistasisLab/tpot"
"PAIR-code/facets" -> "horovod/horovod"
"PAIR-code/facets" -> "MrNothing/AI-Blocks" ["e"=1]
"PAIR-code/facets" -> "facebookresearch/fairseq-lua" ["e"=1]
"PAIR-code/facets" -> "oarriaga/face_classification" ["e"=1]
"PAIR-code/facets" -> "alteryx/featuretools"
"PAIR-code/facets" -> "DistrictDataLabs/yellowbrick"
"PAIR-code/facets" -> "facebookresearch/ParlAI" ["e"=1]
"PAIR-code/facets" -> "ydataai/ydata-profiling"
"PAIR-code/facets" -> "scikit-learn-contrib/imbalanced-learn"
"pyro-ppl/pyro" -> "blei-lab/edward"
"pyro-ppl/pyro" -> "pymc-devs/pymc"
"pyro-ppl/pyro" -> "pyro-ppl/numpyro" ["e"=1]
"pyro-ppl/pyro" -> "cornellius-gp/gpytorch"
"pyro-ppl/pyro" -> "tensorflow/probability"
"pyro-ppl/pyro" -> "google-deepmind/sonnet" ["e"=1]
"pyro-ppl/pyro" -> "horovod/horovod"
"pyro-ppl/pyro" -> "pytorch/botorch"
"pyro-ppl/pyro" -> "HIPS/autograd"
"pyro-ppl/pyro" -> "skorch-dev/skorch"
"pyro-ppl/pyro" -> "rtqichen/torchdiffeq" ["e"=1]
"pyro-ppl/pyro" -> "CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers" ["e"=1]
"pyro-ppl/pyro" -> "jax-ml/jax" ["e"=1]
"pyro-ppl/pyro" -> "allenai/allennlp" ["e"=1]
"pyro-ppl/pyro" -> "pgmpy/pgmpy" ["e"=1]
"catboost/catboost" -> "microsoft/LightGBM"
"catboost/catboost" -> "dmlc/xgboost" ["e"=1]
"catboost/catboost" -> "hyperopt/hyperopt"
"catboost/catboost" -> "shap/shap"
"catboost/catboost" -> "scikit-learn-contrib/imbalanced-learn"
"catboost/catboost" -> "catboost/tutorials"
"catboost/catboost" -> "EpistasisLab/tpot"
"catboost/catboost" -> "rasbt/mlxtend"
"catboost/catboost" -> "alteryx/featuretools"
"catboost/catboost" -> "automl/auto-sklearn"
"catboost/catboost" -> "TeamHG-Memex/eli5"
"catboost/catboost" -> "marcotcr/lime"
"catboost/catboost" -> "VowpalWabbit/vowpal_wabbit"
"catboost/catboost" -> "blue-yonder/tsfresh"
"catboost/catboost" -> "facebook/prophet"
"catboost/catboost-viewer" -> "catboost/benchmarks"
"alicezheng/feature-engineering-book" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"alicezheng/feature-engineering-book" -> "apachecn/fe4ml-zh" ["e"=1]
"alicezheng/feature-engineering-book" -> "aikho/awesome-feature-engineering"
"alicezheng/feature-engineering-book" -> "scikit-learn-contrib/boruta_py"
"alicezheng/feature-engineering-book" -> "Pysamlam/Tips-of-Feature-engineering" ["e"=1]
"alicezheng/feature-engineering-book" -> "WillKoehrsen/feature-selector"
"alicezheng/feature-engineering-book" -> "PacktPublishing/Feature-Engineering-Made-Easy"
"alicezheng/feature-engineering-book" -> "alteryx/featuretools"
"alicezheng/feature-engineering-book" -> "duxuhao/Feature-Selection"
"alicezheng/feature-engineering-book" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"alicezheng/feature-engineering-book" -> "PacktPublishing/Python-Feature-Engineering-Cookbook" ["e"=1]
"alicezheng/feature-engineering-book" -> "feature-engine/feature_engine"
"alicezheng/feature-engineering-book" -> "ashishpatel26/Amazing-Feature-Engineering" ["e"=1]
"alicezheng/feature-engineering-book" -> "Smilexuhc/Data-Competition-TopSolution" ["e"=1]
"alicezheng/feature-engineering-book" -> "dipanjanS/practical-machine-learning-with-python" ["e"=1]
"DOsinga/deep_learning_cookbook" -> "WillKoehrsen/wikipedia-data-science"
"DOsinga/deep_learning_cookbook" -> "WillKoehrsen/recurrent-neural-networks"
"DOsinga/deep_learning_cookbook" -> "PacktPublishing/Python-Deep-Learning-Cookbook" ["e"=1]
"DOsinga/deep_learning_cookbook" -> "DustinAlandzes/machine-learning-with-python-cookbook-notes"
"DOsinga/deep_learning_cookbook" -> "aapatel09/handson-unsupervised-learning"
"cornellius-gp/gpytorch" -> "pytorch/botorch"
"cornellius-gp/gpytorch" -> "SheffieldML/GPy"
"cornellius-gp/gpytorch" -> "GPflow/GPflow"
"cornellius-gp/gpytorch" -> "pyro-ppl/pyro"
"cornellius-gp/gpytorch" -> "rtqichen/torchdiffeq" ["e"=1]
"cornellius-gp/gpytorch" -> "pyro-ppl/numpyro" ["e"=1]
"cornellius-gp/gpytorch" -> "facebook/Ax"
"cornellius-gp/gpytorch" -> "bayesian-optimization/BayesianOptimization"
"cornellius-gp/gpytorch" -> "google/neural-tangents" ["e"=1]
"cornellius-gp/gpytorch" -> "skorch-dev/skorch"
"cornellius-gp/gpytorch" -> "facebookresearch/nevergrad"
"cornellius-gp/gpytorch" -> "krasserm/bayesian-machine-learning"
"cornellius-gp/gpytorch" -> "JavierAntoran/Bayesian-Neural-Networks" ["e"=1]
"cornellius-gp/gpytorch" -> "HIPS/autograd"
"cornellius-gp/gpytorch" -> "pymc-devs/pymc"
"skorch-dev/skorch" -> "pytorch/ignite" ["e"=1]
"skorch-dev/skorch" -> "pyro-ppl/pyro"
"skorch-dev/skorch" -> "lanpa/tensorboardX" ["e"=1]
"skorch-dev/skorch" -> "pytorch/captum" ["e"=1]
"skorch-dev/skorch" -> "scikit-learn-contrib/imbalanced-learn"
"skorch-dev/skorch" -> "Lightning-AI/pytorch-lightning" ["e"=1]
"skorch-dev/skorch" -> "cornellius-gp/gpytorch"
"skorch-dev/skorch" -> "shap/shap"
"skorch-dev/skorch" -> "automl/auto-sklearn"
"skorch-dev/skorch" -> "optuna/optuna"
"skorch-dev/skorch" -> "hyperopt/hyperopt"
"skorch-dev/skorch" -> "DistrictDataLabs/yellowbrick"
"skorch-dev/skorch" -> "rasbt/mlxtend"
"skorch-dev/skorch" -> "scikit-optimize/scikit-optimize"
"skorch-dev/skorch" -> "allenai/allennlp" ["e"=1]
"tensorflow/tensorboard" -> "lanpa/tensorboardX" ["e"=1]
"tensorflow/tensorboard" -> "tensorflow/serving" ["e"=1]
"tensorflow/tensorboard" -> "tensorflow/datasets"
"tensorflow/tensorboard" -> "horovod/horovod"
"tensorflow/tensorboard" -> "tensorflow/tensor2tensor" ["e"=1]
"tensorflow/tensorboard" -> "PAIR-code/facets"
"tensorflow/tensorboard" -> "tensorflow/probability"
"tensorflow/tensorboard" -> "tensorflow/lucid" ["e"=1]
"tensorflow/tensorboard" -> "tensorflow/docs"
"tensorflow/tensorboard" -> "keras-team/autokeras"
"tensorflow/tensorboard" -> "tensorflow/hub"
"tensorflow/tensorboard" -> "tensorflow/models" ["e"=1]
"tensorflow/tensorboard" -> "fossasia/visdom" ["e"=1]
"tensorflow/tensorboard" -> "google-deepmind/sonnet" ["e"=1]
"tensorflow/tensorboard" -> "google/dopamine" ["e"=1]
"openscoring/openscoring" -> "jpmml/jpmml-evaluator"
"openscoring/openscoring" -> "jpmml/jpmml-sparkml"
"openscoring/openscoring" -> "jpmml/jpmml-model"
"openscoring/openscoring" -> "jpmml/jpmml-sklearn"
"openscoring/openscoring" -> "openscoring/openscoring-python"
"openscoring/openscoring" -> "jpmml/sklearn2pmml"
"openscoring/openscoring" -> "jpmml/jpmml-evaluator-spark"
"openscoring/openscoring" -> "modelop/hadrian"
"openscoring/openscoring" -> "combust/mleap" ["e"=1]
"openscoring/openscoring" -> "jpmml/jpmml-xgboost"
"openscoring/openscoring" -> "jpmml/r2pmml"
"openscoring/openscoring" -> "OryxProject/oryx" ["e"=1]
"openscoring/openscoring" -> "jpmml/jpmml-lightgbm"
"openscoring/openscoring" -> "spotify/zoltar" ["e"=1]
"openscoring/openscoring" -> "RedisLabsModules/redisml" ["e"=1]
"tslearn-team/tslearn" -> "johannfaouzi/pyts" ["e"=1]
"tslearn-team/tslearn" -> "sktime/sktime"
"tslearn-team/tslearn" -> "blue-yonder/tsfresh"
"tslearn-team/tslearn" -> "TDAmeritrade/stumpy"
"tslearn-team/tslearn" -> "wannesm/dtaidistance" ["e"=1]
"tslearn-team/tslearn" -> "dmbee/seglearn" ["e"=1]
"tslearn-team/tslearn" -> "awslabs/gluonts"
"tslearn-team/tslearn" -> "RJT1990/pyflux"
"tslearn-team/tslearn" -> "alkaline-ml/pmdarima"
"tslearn-team/tslearn" -> "MaxBenChrist/awesome_time_series_in_python"
"tslearn-team/tslearn" -> "unit8co/darts"
"tslearn-team/tslearn" -> "timeseriesAI/tsai"
"tslearn-team/tslearn" -> "rob-med/awesome-TS-anomaly-detection" ["e"=1]
"tslearn-team/tslearn" -> "facebookresearch/Kats"
"tslearn-team/tslearn" -> "hfawaz/dl-4-tsc" ["e"=1]
"AxeldeRomblay/MLBox" -> "ClimbsRocks/auto_ml"
"AxeldeRomblay/MLBox" -> "automl/auto-sklearn"
"AxeldeRomblay/MLBox" -> "EpistasisLab/tpot"
"AxeldeRomblay/MLBox" -> "hyperopt/hyperopt-sklearn"
"AxeldeRomblay/MLBox" -> "reiinakano/xcessiv"
"AxeldeRomblay/MLBox" -> "TeamHG-Memex/eli5"
"AxeldeRomblay/MLBox" -> "scikit-learn-contrib/boruta_py"
"AxeldeRomblay/MLBox" -> "alteryx/featuretools"
"AxeldeRomblay/MLBox" -> "scikit-learn-contrib/category_encoders"
"AxeldeRomblay/MLBox" -> "rasbt/mlxtend"
"AxeldeRomblay/MLBox" -> "oracle/skater"
"AxeldeRomblay/MLBox" -> "scikit-optimize/scikit-optimize"
"AxeldeRomblay/MLBox" -> "reiinakano/scikit-plot"
"AxeldeRomblay/MLBox" -> "keras-team/autokeras"
"AxeldeRomblay/MLBox" -> "flennerhag/mlens"
"GAA-UAM/scikit-fda" -> "StevenGolovkine/FDApy"
"GAA-UAM/scikit-fda" -> "jdtuck/fdasrsf_python"
"GAA-UAM/scikit-fda" -> "caojiguo/FDAcourse2019"
"GAA-UAM/scikit-fda" -> "ptonner/pyFDA"
"GAA-UAM/scikit-fda" -> "scikit-learn-contrib/scikit-learn-extra"
"ShichenXie/scorecard" -> "ShichenXie/scorecardpy"
"ShichenXie/scorecard" -> "ayhandis/creditR"
"ShichenXie/scorecard" -> "statcompute/mob"
"luisdamiano/gsoc17-hhmm" -> "luisdamiano/BayesHMM"
"studioml/studio" -> "ModelChimp/modelchimp"
"studioml/studio" -> "akosiorek/forge"
"fcomitani/simpsom" -> "felixriese/susi"
"rmcantin/bayesopt" -> "resibots/limbo"
"rmcantin/bayesopt" -> "SheffieldML/GPyOpt"
"rmcantin/bayesopt" -> "wujian16/Cornell-MOE"
"rmcantin/bayesopt" -> "Yelp/MOE"
"rmcantin/bayesopt" -> "jbrea/BayesianOptimization.jl" ["e"=1]
"rmcantin/bayesopt" -> "claesenm/optunity"
"rmcantin/bayesopt" -> "HIPS/Spearmint"
"rmcantin/bayesopt" -> "HIPS/hypergrad" ["e"=1]
"rmcantin/bayesopt" -> "GPflow/GPflowOpt"
"rmcantin/bayesopt" -> "mwhoffman/pybo"
"rmcantin/bayesopt" -> "ziyuw/rembo"
"rmcantin/bayesopt" -> "secondmind-labs/GPflux"
"rmcantin/bayesopt" -> "aminnayebi/HesBO"
"markvdw/convgp" -> "kekeblom/DeepCGP"
"markvdw/convgp" -> "hughsalimbeni/DGPs_with_IWVI"
"ejolly/pymer4" -> "cosanlab/nltools" ["e"=1]
"ejolly/pymer4" -> "bambinos/bambi" ["e"=1]
"ejolly/pymer4" -> "adamhaber/pybrms"
"ejolly/pymer4" -> "lnccbrown/HSSM" ["e"=1]
"ejolly/pymer4" -> "ACCLAB/DABEST-python"
"CollinRooney12/htsprophet" -> "carlomazzaferro/scikit-hts-examples"
"CollinRooney12/htsprophet" -> "carlomazzaferro/scikit-hts"
"hsz1273327/ScoreCardModel" -> "hankkuang/creditRiskCScoreCard"
"hsz1273327/ScoreCardModel" -> "boredbird/woe"
"hsz1273327/ScoreCardModel" -> "yanx27/Scorecard-Modeling"
"hsz1273327/ScoreCardModel" -> "gastonstat/CreditScoring"
"hsz1273327/ScoreCardModel" -> "patrick201/information_value"
"NaegleLab/OpenEnsembles" -> "GGiecold-zz/Cluster_Ensembles"
"NaegleLab/OpenEnsembles" -> "zhongcaiming/clustering-ensemble"
"maximtrp/scikit-posthocs" -> "raphaelvallat/pingouin"
"maximtrp/scikit-posthocs" -> "puolival/multipy"
"maximtrp/scikit-posthocs" -> "sherbold/autorank"
"maximtrp/scikit-posthocs" -> "scikit-learn-contrib/DESlib"
"maximtrp/scikit-posthocs" -> "ACCLAB/DABEST-python"
"maximtrp/scikit-posthocs" -> "webermarcolivier/statannot"
"maximtrp/scikit-posthocs" -> "hfawaz/cd-diagram" ["e"=1]
"maximtrp/scikit-posthocs" -> "ejolly/pymer4"
"maximtrp/scikit-posthocs" -> "scikit-learn-contrib/scikit-learn-extra"
"maximtrp/scikit-posthocs" -> "citiususc/stac"
"catboost/benchmarks" -> "catboost/catboost-viewer"
"UCL-SML/Doubly-Stochastic-DGP" -> "SheffieldML/PyDeepGP"
"UCL-SML/Doubly-Stochastic-DGP" -> "FelixOpolka/Deep-Gaussian-Process"
"UCL-SML/Doubly-Stochastic-DGP" -> "hughsalimbeni/DGPs_with_IWVI"
"UCL-SML/Doubly-Stochastic-DGP" -> "SheffieldML/deepGP"
"UCL-SML/Doubly-Stochastic-DGP" -> "thangbui/geepee"
"UCL-SML/Doubly-Stochastic-DGP" -> "cambridge-mlg/sghmc_dgp"
"UCL-SML/Doubly-Stochastic-DGP" -> "jameshensman/VFF"
"lyg5623/lightgbm_predict4j" -> "jpmml/jpmml-lightgbm"
"Magica-Chen/gptp_multi_output" -> "gpstuff-dev/gpstuff"
"Magica-Chen/gptp_multi_output" -> "mksadoughi/Multi-output-Gaussian-Process"
"Vooban/Hyperopt-Keras-CNN-CIFAR-100" -> "guillaume-chevalier/Hyperopt-Keras-CNN-CIFAR-100"
"automl/CAVE" -> "automl/ParameterImportance"
"automl/CAVE" -> "automl/DAC"
"automl/CAVE" -> "automl-conf/LatexTemplate"
"automl/CAVE" -> "automl/BOAH"
"kjchalup/fcit" -> "kjchalup/independence_test"
"gofireflyio/firefly-mcp" -> "gofireflyio/badge-of-honor"
"logicalclocks/hops-util-py" -> "logicalclocks/hops-docs"
"logicalclocks/hops-util-py" -> "logicalclocks/feature-store-api"
"mutantturkey/PyFeast" -> "nlhepler/mrmr"
"Renumics/lexio" -> "Renumics/mesh2vec"
"Renumics/lexio" -> "Renumics/sliceguard"
"Renumics/lexio" -> "Renumics/awesome-anything2vec"
"gditzler/ConceptDriftData" -> "gditzler/ConceptDriftResources"
"zalandoresearch/fashion-mnist" ["l"="45.919,25.78"]
"lmoroney/dlaicourse" ["l"="45.831,25.822"]
"tensorflow/models" ["l"="48.134,28.884"]
"facebookresearch/fastText" ["l"="53.043,25.835"]
"keras-team/keras" ["l"="48.067,28.867"]
"aymericdamien/TensorFlow-Examples" ["l"="47.951,28.706"]
"facebookresearch/Detectron" ["l"="50.57,29.767"]
"pytorch/examples" ["l"="50.825,29.621"]
"google-deepmind/sonnet" ["l"="57.431,17.873"]
"dmlc/xgboost" ["l"="48.109,28.951"]
"floodsung/Deep-Learning-Papers-Reading-Roadmap" ["l"="47.883,28.627"]
"terryum/awesome-deep-learning-papers" ["l"="47.852,28.669"]
"tensorflow/tensor2tensor" ["l"="53.167,25.8"]
"lengstrom/fast-style-transfer" ["l"="45.585,29.275"]
"horovod/horovod" ["l"="45.559,25.861"]
"junyanz/pytorch-CycleGAN-and-pix2pix" ["l"="45.639,29.106"]
"optuna/optuna" ["l"="45.547,26.085"]
"hyperopt/hyperopt" ["l"="45.587,26.149"]
"shap/shap" ["l"="45.443,26.065"]
"Lightning-AI/pytorch-lightning" ["l"="50.795,29.491"]
"mlflow/mlflow" ["l"="45.387,25.899"]
"bayesian-optimization/BayesianOptimization" ["l"="45.676,26.163"]
"microsoft/LightGBM" ["l"="45.601,26.085"]
"ray-project/ray" ["l"="50.74,29.255"]
"jax-ml/jax" ["l"="50.809,29.353"]
"pycaret/pycaret" ["l"="45.403,26.145"]
"autogluon/autogluon" ["l"="45.512,26.112"]
"microsoft/nni" ["l"="45.603,25.969"]
"iterative/dvc" ["l"="45.319,25.9"]
"ydataai/ydata-profiling" ["l"="45.365,26.075"]
"sktime/sktime" ["l"="45.495,26.271"]
"automl/auto-sklearn" ["l"="45.526,26.141"]
"keras-team/autokeras" ["l"="45.58,26.009"]
"IntelLabs/distiller" ["l"="52.71,33.427"]
"EpistasisLab/tpot" ["l"="45.482,26.124"]
"hibayesian/awesome-automl-papers" ["l"="52.856,33.947"]
"quark0/darts" ["l"="52.854,33.982"]
"huggingface/pytorch-image-models" ["l"="50.672,29.653"]
"NVIDIA/apex" ["l"="50.832,29.796"]
"lutzroeder/netron" ["l"="50.438,29.655"]
"kubeflow/kubeflow" ["l"="45.39,25.764"]
"EthicalML/awesome-production-machine-learning" ["l"="48.011,26.19"]
"Netflix/metaflow" ["l"="45.284,25.859"]
"feast-dev/feast" ["l"="45.299,25.787"]
"visenger/awesome-mlops" ["l"="48.011,26.296"]
"streamlit/streamlit" ["l"="44.476,20.451"]
"apache/airflow" ["l"="-0.898,16.095"]
"bentoml/BentoML" ["l"="45.251,25.835"]
"kedro-org/kedro" ["l"="45.274,25.925"]
"PAIR-code/what-if-tool" ["l"="45.203,26.096"]
"PAIR-code/lit" ["l"="52.732,25.676"]
"SeldonIO/alibi" ["l"="45.223,26.11"]
"interpretml/DiCE" ["l"="45.165,26.172"]
"tensorflow/tcav" ["l"="24.103,14.251"]
"PAIR-code/facets" ["l"="45.488,25.987"]
"fairlearn/fairlearn" ["l"="45.17,26.127"]
"Trusted-AI/AIF360" ["l"="45.162,26.061"]
"uber/manifold" ["l"="45.291,26.116"]
"dssg/aequitas" ["l"="45.09,26.08"]
"PAIR-code/saliency" ["l"="24.097,14.35"]
"Trusted-AI/AIX360" ["l"="45.155,26.141"]
"oegedijk/explainerdashboard" ["l"="45.258,26.183"]
"SeldonIO/alibi-detect" ["l"="45.295,26.082"]
"EthicalML/xai" ["l"="45.169,26.156"]
"SauceCat/PDPbox" ["l"="45.287,26.229"]
"facebook/Ax" ["l"="45.722,26.114"]
"pytorch/botorch" ["l"="45.788,26.155"]
"cornellius-gp/gpytorch" ["l"="45.783,26.104"]
"facebookresearch/nevergrad" ["l"="45.711,26.14"]
"pyro-ppl/pyro" ["l"="45.709,26.076"]
"pyro-ppl/numpyro" ["l"="21.752,14.11"]
"scikit-optimize/scikit-optimize" ["l"="45.573,26.229"]
"IDSIA/sacred" ["l"="45.555,25.933"]
"EmuKit/emukit" ["l"="45.881,26.165"]
"pytorch/ignite" ["l"="50.991,29.781"]
"SheffieldML/GPy" ["l"="45.84,26.155"]
"skorch-dev/skorch" ["l"="45.56,26.121"]
"pymc-devs/pymc" ["l"="45.746,26.164"]
"interpretml/interpret" ["l"="45.309,26.145"]
"marcotcr/lime" ["l"="45.438,26.108"]
"jphall663/awesome-machine-learning-interpretability" ["l"="45.195,26.141"]
"py-why/dowhy" ["l"="43.725,25.604"]
"uber/causalml" ["l"="43.652,25.595"]
"TeamHG-Memex/eli5" ["l"="45.403,26.217"]
"microsoft/tensorwatch" ["l"="51.022,29.765"]
"pytorch/captum" ["l"="50.955,29.638"]
"alteryx/featuretools" ["l"="45.454,26.16"]
"keras-team/keras-tuner" ["l"="45.637,25.918"]
"autonomio/talos" ["l"="45.608,26.051"]
"maxpumperla/hyperas" ["l"="45.631,26.158"]
"sicara/tf-explain" ["l"="24.104,14.325"]
"keras-team/keras-cv" ["l"="45.749,25.656"]
"raghakot/keras-vis" ["l"="50.472,33.257"]
"keras-team/keras-hub" ["l"="45.728,25.691"]
"qubvel/efficientnet" ["l"="50.665,30.064"]
"keras-team/keras-applications" ["l"="50.567,30.063"]
"tensorflow/addons" ["l"="45.684,25.755"]
"SeldonIO/seldon-core" ["l"="45.311,25.819"]
"bentoml/OpenLLM" ["l"="40.43,0.502"]
"zenml-io/zenml" ["l"="45.223,25.876"]
"cortexlabs/cortex" ["l"="45.328,25.857"]
"kserve/kserve" ["l"="45.314,25.725"]
"evidentlyai/evidently" ["l"="45.243,25.941"]
"clearml/clearml" ["l"="45.263,25.752"]
"bentoml/Yatai" ["l"="45.141,25.671"]
"gm-spacagna/deep-ttf" ["l"="45.178,26.65"]
"daynebatten/keras-wtte-rnn" ["l"="45.21,26.653"]
"ragulpr/wtte-rnn" ["l"="45.193,26.626"]
"robi56/Survival-Analysis-using-Deep-Learning" ["l"="45.166,26.616"]
"ragulpr/wtte-rnn-examples" ["l"="45.187,26.668"]
"rk2900/DRSA" ["l"="45.152,26.619"]
"jaredleekatzman/DeepSurv" ["l"="45.179,26.594"]
"PathologyDataScience/SurvivalNet" ["l"="45.149,26.638"]
"chl8856/DeepHit" ["l"="45.158,26.594"]
"autonlab/auton-survival" ["l"="45.165,26.578"]
"havakv/pycox" ["l"="45.187,26.575"]
"MGensheimer/nnet-survival" ["l"="45.146,26.662"]
"liupei101/TFDeepSurv" ["l"="45.162,26.634"]
"PathologyDataScience/SCNN" ["l"="45.108,26.693"]
"czifan/DeepSurv.pytorch" ["l"="45.145,26.607"]
"MustafaOguz/Survival_Analysis" ["l"="45.131,26.673"]
"square/pysurvival" ["l"="45.179,26.56"]
"sebp/survival-cnn-estimator" ["l"="45.136,26.688"]
"CamDavidsonPilon/lifelines" ["l"="45.271,26.46"]
"sebp/scikit-survival" ["l"="45.219,26.499"]
"CamDavidsonPilon/lifetimes" ["l"="43.585,25.712"]
"DistrictDataLabs/yellowbrick" ["l"="45.396,26.198"]
"scikit-learn-contrib/category_encoders" ["l"="45.384,26.286"]
"statsmodels/statsmodels" ["l"="43.584,23.543"]
"raphaelvallat/pingouin" ["l"="45.23,26.4"]
"scikit-learn-contrib/imbalanced-learn" ["l"="45.488,26.194"]
"rasbt/mlxtend" ["l"="45.448,26.214"]
"arviz-devs/arviz" ["l"="39.209,35.909"]
"hyperopt/hyperopt-sklearn" ["l"="45.543,26.244"]
"tensorflow/adanet" ["l"="45.54,26.002"]
"philipperemy/keract" ["l"="53.963,27.185"]
"AxeldeRomblay/MLBox" ["l"="45.457,26.189"]
"dvgodoy/deepreplay" ["l"="45.695,25.961"]
"automl/Auto-PyTorch" ["l"="52.81,33.946"]
"salesforce/TransmogrifAI" ["l"="45.526,25.945"]
"Yimeng-Zhang/feature-engineering-and-feature-selection" ["l"="45.488,26.422"]
"duxuhao/Feature-Selection" ["l"="45.505,26.442"]
"jundongl/scikit-feature" ["l"="45.46,26.36"]
"anujdutt9/Feature-Selection-for-Machine-Learning" ["l"="45.526,26.47"]
"kaushalshetty/FeatureSelectionGA" ["l"="45.462,26.461"]
"alicezheng/feature-engineering-book" ["l"="45.556,26.435"]
"WillKoehrsen/feature-selector" ["l"="45.533,26.385"]
"scikit-learn-contrib/boruta_py" ["l"="45.394,26.348"]
"feature-engine/feature_engine" ["l"="45.341,26.309"]
"solegalli/feature-selection-for-machine-learning" ["l"="45.543,26.489"]
"ashishpatel26/Amazing-Feature-Engineering" ["l"="47.25,24.735"]
"aikho/awesome-feature-engineering" ["l"="45.563,26.469"]
"cod3licious/autofeat" ["l"="45.343,26.386"]
"Ekeany/Boruta-Shap" ["l"="45.356,26.381"]
"solegalli/feature-engineering-for-machine-learning" ["l"="45.573,26.506"]
"tensorflow/model-optimization" ["l"="45.627,25.723"]
"Tencent/PocketFlow" ["l"="52.744,33.373"]
"google/qkeras" ["l"="31.763,-2.615"]
"pytorch/QNNPACK" ["l"="37.176,0.796"]
"666DZY666/micronet" ["l"="52.669,33.387"]
"google/gemmlowp" ["l"="37.151,0.815"]
"quic/aimet" ["l"="52.582,33.376"]
"onnx/tensorflow-onnx" ["l"="50.108,29.867"]
"Eric-mingjie/rethinking-network-pruning" ["l"="52.711,33.398"]
"tensorflow/model-analysis" ["l"="45.565,25.757"]
"tensorflow/tensorrt" ["l"="53.102,32.65"]
"tensorflow/tfx" ["l"="45.547,25.714"]
"openxla/xprof" ["l"="45.62,25.645"]
"kubeflow/pipelines" ["l"="45.396,25.711"]
"triton-inference-server/server" ["l"="39.002,-0.74"]
"kubeflow/katib" ["l"="45.427,25.737"]
"kubeflow/trainer" ["l"="8.087,-9.331"]
"volcano-sh/volcano" ["l"="8.049,-9.283"]
"NVIDIA/k8s-device-plugin" ["l"="7.272,-11.403"]
"knative/serving" ["l"="7.906,-8.775"]
"pytorch/serve" ["l"="45.342,25.702"]
"ray-project/kuberay" ["l"="45.237,25.683"]
"kubeflow/manifests" ["l"="45.393,25.641"]
"NVIDIA/gpu-operator" ["l"="7.244,-11.395"]
"google/dopamine" ["l"="57.536,17.993"]
"melodyguan/enas" ["l"="52.917,34"]
"carpedm20/ENAS-pytorch" ["l"="52.891,33.983"]
"ludwig-ai/ludwig" ["l"="45.455,25.956"]
"modin-project/modin" ["l"="45.322,26.054"]
"vaexio/vaex" ["l"="45.322,26.021"]
"dask/dask" ["l"="43.655,23.686"]
"rapidsai/cudf" ["l"="43.805,23.569"]
"nalepae/pandarallel" ["l"="45.359,26.105"]
"jmcarpenter2/swifter" ["l"="45.326,26.119"]
"vega/altair" ["l"="43.589,23.799"]
"pola-rs/polars" ["l"="44.645,20.67"]
"blue-yonder/tsfresh" ["l"="45.492,26.228"]
"lux-org/lux" ["l"="45.236,26.161"]
"Kaggle/kaggle-api" ["l"="45.464,26.015"]
"Kaggle/docker-python" ["l"="57.576,24.078"]
"catboost/catboost" ["l"="45.528,26.172"]
"dunovank/jupyter-themes" ["l"="43.45,23.786"]
"fastai/fastai" ["l"="48.016,28.695"]
"albumentations-team/albumentations" ["l"="50.754,29.731"]
"jupyterlab/jupyterlab" ["l"="43.511,23.779"]
"scikit-learn/scikit-learn" ["l"="48.164,28.819"]
"CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers" ["l"="47.978,28.452"]
"blei-lab/edward" ["l"="45.764,26.126"]
"pymc-devs/pymc-resources" ["l"="39.257,35.911"]
"tensorflow/probability" ["l"="45.798,26.028"]
"pgmpy/pgmpy" ["l"="43.764,25.555"]
"jmschrei/pomegranate" ["l"="45.637,26.21"]
"pymc-devs/pymc4" ["l"="39.202,35.941"]
"stan-dev/stan" ["l"="39.248,35.831"]
"markdregan/Bayesian-Modelling-in-Python" ["l"="39.287,35.969"]
"mckinsey/causalnex" ["l"="43.69,25.563"]
"drivendataorg/cookiecutter-data-science" ["l"="45.349,25.991"]
"great-expectations/great_expectations" ["l"="-0.746,16.065"]
"PrefectHQ/prefect" ["l"="-0.802,16.1"]
"kedro-org/kedro-viz" ["l"="22.346,14.565"]
"unionai-oss/pandera" ["l"="45.28,26.057"]
"dagster-io/dagster" ["l"="-0.719,16.003"]
"pbiecek/xai_resources" ["l"="45.142,26.186"]
"lopusz/awesome-interpretable-machine-learning" ["l"="45.172,26.189"]
"anguyen8/XAI-papers" ["l"="23.591,14.831"]
"wangyongjie-ntu/Awesome-explainable-AI" ["l"="45.134,26.165"]
"h2oai/mli-resources" ["l"="45.192,26.229"]
"ModelOriented/DrWhy" ["l"="40.29,35.578"]
"albermax/innvestigate" ["l"="24.158,14.289"]
"ModelOriented/DALEX" ["l"="45.206,26.192"]
"davidbau/dissect" ["l"="23.598,14.86"]
"samzabdiel/XAI" ["l"="24.071,14.309"]
"jphall663/interpretable_machine_learning_with_python" ["l"="45.169,26.208"]
"parrt/fundamentals-of-deep-learning" ["l"="23.629,14.866"]
"unit8co/darts" ["l"="45.491,26.299"]
"tslearn-team/tslearn" ["l"="45.498,26.324"]
"awslabs/gluonts" ["l"="45.525,26.33"]
"timeseriesAI/tsai" ["l"="45.563,26.336"]
"sktime/pytorch-forecasting" ["l"="45.523,26.358"]
"facebookresearch/Kats" ["l"="45.454,26.289"]
"Nixtla/statsforecast" ["l"="45.4,26.325"]
"TDAmeritrade/stumpy" ["l"="45.458,26.319"]
"sktime/sktime-dl" ["l"="43.677,26.85"]
"johannfaouzi/pyts" ["l"="43.69,26.829"]
"ourownstory/neural_prophet" ["l"="45.478,26.338"]
"facebook/prophet" ["l"="45.559,26.2"]
"Nixtla/neuralforecast" ["l"="45.492,26.391"]
"iterative/cml" ["l"="45.195,25.87"]
"google/trax" ["l"="53.153,25.852"]
"chiphuyen/machine-learning-systems-design" ["l"="48.113,26.278"]
"snorkel-team/snorkel" ["l"="52.691,25.708"]
"MAIF/melusine" ["l"="45.161,26.398"]
"scikit-learn-contrib/qolmat" ["l"="45.179,26.413"]
"MAIF/eurybia" ["l"="45.107,26.408"]
"scikit-learn-contrib/MAPIE" ["l"="45.278,26.362"]
"MAIF/arta" ["l"="45.101,26.423"]
"Quantmetry/grand-debat" ["l"="45.114,26.428"]
"Quantmetry/pipeasy-spark" ["l"="45.126,26.421"]
"salimamoukou/acv00" ["l"="45.109,26.438"]
"Quantmetry/awesome_quantmetry" ["l"="45.139,26.424"]
"MAIF/shapash" ["l"="45.275,26.165"]
"scikit-learn-contrib/skope-rules" ["l"="45.342,26.357"]
"MAIF/meteole" ["l"="45.129,26.436"]
"beroguedou/basmatinet" ["l"="45.121,26.452"]
"MAIF/nio" ["l"="-7.318,-31.991"]
"man-group/dtale" ["l"="45.246,26.133"]
"adamerose/PandasGUI" ["l"="45.272,26.14"]
"fbdesignpro/sweetviz" ["l"="45.298,26.186"]
"man-group/arctic" ["l"="-8.806,12.96"]
"AutoViML/AutoViz" ["l"="45.285,26.252"]
"man-group/notebooker" ["l"="45.477,19.423"]
"sfu-db/dataprep" ["l"="45.237,26.208"]
"hudson-and-thames/mlfinlab" ["l"="-8.959,12.864"]
"voila-dashboards/voila" ["l"="43.548,23.948"]
"man-group/ArcticDB" ["l"="-8.888,12.935"]
"ResidentMario/missingno" ["l"="45.366,26.217"]
"clearml/clearml-server" ["l"="45.151,25.573"]
"kili-technology/kili-python-sdk" ["l"="-1.137,3.064"]
"fabien-h/acta" ["l"="-1.145,3.053"]
"aimhubio/aim" ["l"="45.216,25.814"]
"AlanAutomated/wilson" ["l"="-1.137,3.05"]
"yanchokraev/grayshift" ["l"="-1.147,3.071"]
"nlpodyssey/spago" ["l"="-1.203,3.084"]
"default-services/components" ["l"="-1.134,3.044"]
"gquittet/graceful-server" ["l"="-1.128,3.05"]
"fast-ide/fast-ide" ["l"="-1.148,3.088"]
"LINBIT/drbd" ["l"="-1.164,3.068"]
"celer-network/goCeler-oss" ["l"="-1.157,3.082"]
"csoneson/ARMOR" ["l"="44.379,26.304"]
"iSEE/iSEE" ["l"="44.439,26.286"]
"thelovelab/tximeta" ["l"="44.307,26.32"]
"tensorflow/examples" ["l"="45.91,25.692"]
"tensorflow/docs" ["l"="45.82,25.731"]
"android/camera-samples" ["l"="52.138,-13.504"]
"googlesamples/mlkit" ["l"="52.163,-13.445"]
"tensorflow/tfjs-models" ["l"="-32.798,-35.764"]
"tensorflow/datasets" ["l"="45.771,25.797"]
"google-ai-edge/mediapipe" ["l"="50.34,29.758"]
"Tencent/ncnn" ["l"="50.241,29.805"]
"android/ndk-samples" ["l"="59.279,-13.41"]
"android/sunflower" ["l"="58.953,-13.641"]
"alibaba/MNN" ["l"="50.189,29.806"]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" ["l"="50.197,32.835"]
"android/architecture-components-samples" ["l"="59.02,-13.632"]
"cats-oss/android-gpuimage" ["l"="62.114,-14.352"]
"android/compose-samples" ["l"="52.312,-13.477"]
"tensorflow/community" ["l"="45.676,25.696"]
"tensorflow/tensorboard" ["l"="45.723,25.84"]
"tensorflow/hub" ["l"="45.703,25.791"]
"tensorflow/serving" ["l"="58.004,23.53"]
"keras-team/keras-io" ["l"="45.781,25.699"]
"czy36mengfei/tensorflow2_tutorials_chinese" ["l"="50.673,28.262"]
"pytorch/tutorials" ["l"="50.679,28.562"]
"google-research/bert" ["l"="53.095,25.874"]
"chiphuyen/stanford-tensorflow-tutorials" ["l"="47.839,28.711"]
"eamid/trimap" ["l"="44.948,26.303"]
"YingfanWang/PaCMAP" ["l"="44.973,26.28"]
"hyungkwonko/umato" ["l"="44.921,26.309"]
"wilsonjr/humap" ["l"="44.887,26.3"]
"dillondaudert/UMAP.jl" ["l"="40.382,37.927"]
"pavlin-policar/openTSNE" ["l"="45.036,26.216"]
"KlugerLab/FIt-SNE" ["l"="23.534,14.849"]
"CannyLab/tsne-cuda" ["l"="45.061,26.191"]
"DmitryUlyanov/Multicore-TSNE" ["l"="45.128,26.212"]
"mxl1990/tsne-pytorch" ["l"="44.982,26.198"]
"cemoody/topicsne" ["l"="44.918,26.193"]
"lmcinnes/umap" ["l"="45.346,26.158"]
"berenslab/rna-seq-tsne" ["l"="44.963,26.217"]
"beringresearch/ivis" ["l"="44.903,26.267"]
"lvdmaaten/bhtsne" ["l"="44.905,26.22"]
"scikit-learn-contrib/hdbscan" ["l"="45.336,26.248"]
"cvxgrp/pymde" ["l"="44.935,26.281"]
"sepandhaghighi/pycm" ["l"="36.244,23.554"]
"lmcinnes/pynndescent" ["l"="45.083,26.273"]
"lferry007/LargeVis" ["l"="44.938,26.231"]
"feathr-ai/feathr" ["l"="50.967,2.747"]
"logicalclocks/hopsworks" ["l"="45.298,25.642"]
"flyteorg/flyte" ["l"="45.244,25.782"]
"Code-Pop/real-world-vue" ["l"="44.163,25.988"]
"Code-Pop/authentication_course" ["l"="44.172,26.006"]
"Code-Pop/watch-us-build-trello" ["l"="44.158,26.007"]
"Code-Pop/real-world-nuxt" ["l"="44.167,26.018"]
"Code-Pop/beautify-with-vuetify" ["l"="44.144,26.009"]
"Code-Pop/vue-mastery" ["l"="44.13,26.001"]
"Code-Pop/animating-vue" ["l"="44.155,26.02"]
"Code-Pop/Real-World_Vue-3" ["l"="44.231,26.01"]
"Code-Pop/Unit-Testing-Vue2" ["l"="44.137,26.021"]
"Code-Pop/vue-3-reactivity" ["l"="44.154,26.032"]
"Code-Pop/Vue-3-Forms" ["l"="44.184,26.012"]
"Code-Pop/Intro-to-Vue-3" ["l"="44.187,25.981"]
"Code-Pop/build-gmail-clone-with-vue-3" ["l"="44.177,26.026"]
"Code-Pop/Vuex_Fundamentals" ["l"="44.187,26.023"]
"Code-Pop/Touring-Vue-Router" ["l"="44.195,26.009"]
"Code-Pop/Vue-2-to-Vue-3" ["l"="44.201,25.997"]
"sfu-db/connector-x" ["l"="-0.449,14.875"]
"shankarpandala/lazypredict" ["l"="45.27,26.207"]
"jbesomi/texthero" ["l"="52.727,25.752"]
"h2oai/datatable" ["l"="40.411,35.236"]
"pyjanitor-devs/pyjanitor" ["l"="45.231,26.285"]
"fugue-project/fugue" ["l"="-0.414,14.815"]
"zalandoresearch/pytorch-ts" ["l"="44.975,24.322"]
"Alro10/deep-learning-time-series" ["l"="44.98,24.241"]
"amazon-science/chronos-forecasting" ["l"="45.017,24.561"]
"AIStream-Peelout/flow-forecast" ["l"="44.949,24.292"]
"thuml/Time-Series-Library" ["l"="45.002,24.437"]
"h2oai/h2o-3" ["l"="45.559,26.049"]
"h2oai/h2o-tutorials" ["l"="-2.736,17.347"]
"h2oai/sparkling-water" ["l"="-2.669,17.246"]
"VowpalWabbit/vowpal_wabbit" ["l"="45.634,26.119"]
"flairNLP/flair" ["l"="52.897,25.764"]
"jlmelville/uwot" ["l"="44.606,26.258"]
"tkonopka/umap" ["l"="44.589,26.247"]
"ropensci-archive/umapr" ["l"="44.565,26.258"]
"jkrijthe/Rtsne" ["l"="44.667,26.245"]
"krasserm/bayesian-machine-learning" ["l"="45.831,26.118"]
"kumar-shridhar/PyTorch-BayesianCNN" ["l"="22.485,15.338"]
"JavierAntoran/Bayesian-Neural-Networks" ["l"="22.487,15.368"]
"GPflow/GPflow" ["l"="45.874,26.135"]
"piEsposito/blitz-bayesian-deep-learning" ["l"="22.508,15.374"]
"SheffieldML/GPyOpt" ["l"="45.811,26.208"]
"bayesgroup/deepbayes-2019" ["l"="23.619,14.96"]
"probml/pyprobml" ["l"="50.66,27.864"]
"uncertainty-toolbox/uncertainty-toolbox" ["l"="22.523,15.408"]
"aapatel09/handson-unsupervised-learning" ["l"="45.78,26.667"]
"nlpbook/nlpbook" ["l"="45.838,26.714"]
"PacktPublishing/Hands-On-Explainable-AI-XAI-with-Python" ["l"="45.889,26.738"]
"totalgood/nlpia" ["l"="48.321,27.913"]
"aditya1702/Machine-Learning-and-Data-Science" ["l"="57.569,24.183"]
"PracticalTimeSeriesAnalysis/BookRepo" ["l"="44.996,24.048"]
"davidADSP/GDL_code" ["l"="47.826,26.531"]
"DOsinga/deep_learning_cookbook" ["l"="45.752,26.686"]
"openml/openml-r" ["l"="45.886,26.408"]
"rdatsci/rtcl" ["l"="40.329,35.845"]
"facebookresearch/hydra" ["l"="50.954,29.462"]
"arogozhnikov/einops" ["l"="50.9,29.579"]
"ashleve/lightning-hydra-template" ["l"="50.979,29.546"]
"activeloopai/deeplake" ["l"="45.165,25.816"]
"mosaicml/composer" ["l"="38.741,-0.539"]
"google/flax" ["l"="21.721,13.999"]
"libffcv/ffcv" ["l"="50.953,29.6"]
"argilla-io/argilla" ["l"="52.528,25.718"]
"ibis-project/ibis" ["l"="-0.598,15.874"]
"beartype/beartype" ["l"="45.077,21.147"]
"TobikoData/sqlmesh" ["l"="-0.528,15.96"]
"posit-dev/great-tables" ["l"="43.594,26.29"]
"cleanlab/cleanlab" ["l"="45.132,25.932"]
"subeeshvasu/Awesome-Learning-with-Label-Noise" ["l"="51.437,30.403"]
"Lightning-AI/litgpt" ["l"="40.494,0.584"]
"owainlewis/awesome-artificial-intelligence" ["l"="47.661,28.533"]
"stanfordnlp/dspy" ["l"="40.726,0.466"]
"UKPLab/sentence-transformers" ["l"="52.909,25.852"]
"deepchecks/deepchecks" ["l"="45.231,26.033"]
"sdv-dev/SDV" ["l"="44.978,26.432"]
"sdv-dev/CTGAN" ["l"="44.863,26.525"]
"ydataai/ydata-synthetic" ["l"="50.61,-0.438"]
"sdv-dev/SDMetrics" ["l"="44.877,26.507"]
"sdv-dev/Copulas" ["l"="44.832,26.482"]
"sdv-dev/SDGym" ["l"="44.86,26.506"]
"gretelai/gretel-synthetics" ["l"="44.817,26.54"]
"Diyago/Tabular-data-generation" ["l"="44.898,26.523"]
"vanderschaarlab/synthcity" ["l"="44.881,26.554"]
"sdv-dev/RDT" ["l"="44.904,26.479"]
"koaning/scikit-lego" ["l"="45.251,26.324"]
"uber/orbit" ["l"="45.414,26.352"]
"renatoosousa/GeneticAlgorithmForFeatureSelection" ["l"="45.481,26.526"]
"danielhomola/mifs" ["l"="45.437,26.446"]
"manuel-calzolari/sklearn-genetic" ["l"="45.394,26.384"]
"JingweiToo/Wrapper-Feature-Selection-Toolbox-Python" ["l"="50.106,25.978"]
"scoliann/GeneticAlgorithmFeatureSelection" ["l"="45.495,26.541"]
"rogeroyer/feature_selection_GAAlgorithm" ["l"="45.508,26.565"]
"ctlab/ITMO_FS" ["l"="45.436,26.464"]
"EpistasisLab/scikit-rebate" ["l"="45.401,26.417"]
"ahcantao/PSOFeatureSelection" ["l"="50.156,25.964"]
"parrt/dtreeviz" ["l"="45.37,26.243"]
"parrt/random-forest-importances" ["l"="45.308,26.275"]
"dreamquark-ai/tabnet" ["l"="45.99,24.7"]
"reiinakano/scikit-plot" ["l"="45.428,26.233"]
"cybertronai/gradient-checkpointing" ["l"="45.737,25.766"]
"tensorpack/tensorpack" ["l"="50.5,33.165"]
"tensorflow/mesh" ["l"="45.702,25.677"]
"facebookresearch/TensorComprehensions" ["l"="37.142,0.92"]
"HIPS/autograd" ["l"="45.729,26.037"]
"facebookresearch/fairseq-lua" ["l"="53.204,25.644"]
"google-deepmind/dnc" ["l"="46.152,27.91"]
"facebookresearch/fairscale" ["l"="38.777,-0.604"]
"tensorflow/fold" ["l"="46.192,27.87"]
"tensorflow/lingvo" ["l"="35.536,2.371"]
"dennybritz/deeplearning-papernotes" ["l"="47.764,28.803"]
"tkarras/progressive_growing_of_gans" ["l"="45.767,29.1"]
"online-ml/river" ["l"="45.389,26.108"]
"scikit-multiflow/scikit-multiflow" ["l"="45.674,26.058"]
"online-ml/awesome-online-machine-learning" ["l"="45.703,26.006"]
"salesforce/Merlion" ["l"="45.416,26.277"]
"microsoft/FLAML" ["l"="45.377,26.172"]
"hmmlearn/hmmlearn" ["l"="45.667,26.233"]
"larsmans/seqlearn" ["l"="53.225,27.666"]
"mattjj/pyhsmm" ["l"="45.158,27.573"]
"tostq/Easy_HMM" ["l"="45.745,26.3"]
"guyz/HMM" ["l"="45.72,26.289"]
"microsoft/responsible-ai-toolbox" ["l"="45.155,26.093"]
"interpretml/interpret-community" ["l"="45.128,26.147"]
"mbilalzafar/fair-classification" ["l"="45.078,26.03"]
"propublica/compas-analysis" ["l"="45.111,26.057"]
"skrub-data/skrub" ["l"="45.212,26.327"]
"claimed-framework/component-library" ["l"="45.736,25.727"]
"romeokienzler/TensorFlow" ["l"="45.882,25.641"]
"wchill/HMP_Dataset" ["l"="45.796,25.668"]
"jupyter/jupyter" ["l"="47.921,28.361"]
"IBM/MAX-Object-Detector" ["l"="45.987,25.547"]
"salimt/Courses-" ["l"="48.6,28.823"]
"GoogleCloudPlatform/training-data-analyst" ["l"="44.889,16.434"]
"elyra-ai/elyra" ["l"="45.445,25.671"]
"https-deeplearning-ai/machine-learning-engineering-for-production-public" ["l"="45.753,25.926"]
"Kulbear/deep-learning-coursera" ["l"="48.232,28.701"]
"udacity/DSND_Term2" ["l"="49.18,27.666"]
"udacity/deep-learning-v2-pytorch" ["l"="47.526,28.476"]
"shenweichen/Coursera" ["l"="48.535,28.766"]
"AllenDowney/ThinkStats2" ["l"="48.199,28.217"]
"IBM/MAX-Object-Detector-Web-App" ["l"="46.02,25.539"]
"IBM/MAX-Weather-Forecaster" ["l"="46.01,25.513"]
"CODAIT/max-central-repo" ["l"="46.037,25.493"]
"CODAIT/node-red-contrib-model-asset-exchange" ["l"="46.037,25.516"]
"IBM/MAX-Framework" ["l"="46.058,25.498"]
"IBM/MAX-Inception-ResNet-v2" ["l"="46.099,25.443"]
"oseiskar/simdkalman" ["l"="45.324,26.559"]
"malmgrek/gammy" ["l"="45.278,26.531"]
"google/neural-tangents" ["l"="21.667,13.957"]
"cvxgrp/cvxpylayers" ["l"="61.282,14.898"]
"mljar/mljar-supervised" ["l"="45.359,26.197"]
"alteryx/evalml" ["l"="45.314,26.362"]
"AutoViML/Auto_ViML" ["l"="45.329,26.351"]
"argoproj/argo-workflows" ["l"="8.009,-8.809"]
"kubernetes-sigs/kubebuilder" ["l"="8.003,-8.994"]
"istio/istio" ["l"="8.349,-8.475"]
"helm/helm" ["l"="8.212,-8.631"]
"kubernetes-sigs/kustomize" ["l"="7.952,-8.848"]
"deepcharles/ruptures" ["l"="45.481,26.452"]
"hildensia/bayesian_changepoint_detection" ["l"="45.509,26.688"]
"zillow/luminaire" ["l"="52.405,14.718"]
"alkaline-ml/pmdarima" ["l"="45.444,26.38"]
"shunsukeaihara/changefinder" ["l"="45.512,26.596"]
"cerlymarco/tsmoothie" ["l"="45.413,26.452"]
"zhaokg/Rbeast" ["l"="45.487,26.573"]
"wannesm/dtaidistance" ["l"="43.709,26.755"]
"rapidsai/cuml" ["l"="45.369,26.132"]
"rapidsai/cugraph" ["l"="43.927,23.625"]
"cupy/cupy" ["l"="43.714,23.501"]
"rapidsai/notebooks" ["l"="43.903,23.698"]
"microsoft/hummingbird" ["l"="45.328,26.09"]
"keras-team/keras-preprocessing" ["l"="45.774,25.856"]
"tensorflow/agents" ["l"="57.578,18.075"]
"https-deeplearning-ai/tensorflow-1-public" ["l"="45.828,25.863"]
"workalendar/workalendar" ["l"="45.676,26.343"]
"vacanza/holidays" ["l"="45.582,26.283"]
"olist/correios" ["l"="-1.936,18.283"]
"spulec/freezegun" ["l"="44.978,20.89"]
"google-research/t5x" ["l"="37.139,-0.072"]
"google/seqio" ["l"="21.882,13.924"]
"flexflow/flexflow-train" ["l"="38.927,-0.488"]
"tensorflow/io" ["l"="45.628,25.677"]
"bytedance/byteps" ["l"="58.028,23.559"]
"kakaobrain/torchgpipe" ["l"="7.285,-11.069"]
"alpa-projects/alpa" ["l"="38.879,-0.61"]
"laekov/fastmoe" ["l"="38.683,-0.498"]
"tensorflow/custom-op" ["l"="45.668,25.628"]
"google/flaxformer" ["l"="21.85,13.904"]
"msr-fiddle/pipedream" ["l"="7.319,-11.064"]
"kubeflow-kale/kale" ["l"="45.379,25.678"]
"kubeflow/examples" ["l"="8.193,-8.103"]
"kubeflow/mpi-operator" ["l"="8.124,-9.469"]
"kubernetes-retired/kube-batch" ["l"="8.054,-9.32"]
"kubeflow/fairing" ["l"="45.416,25.628"]
"tobegit3hub/advisor" ["l"="45.645,26.043"]
"kubeflow/arena" ["l"="8.097,-9.44"]
"kubeflow/pytorch-operator" ["l"="8.38,-9.436"]
"automl/HpBandSter" ["l"="45.805,26.294"]
"automl/SMAC3" ["l"="45.752,26.256"]
"automl/ConfigSpace" ["l"="45.855,26.329"]
"automl/RoBO" ["l"="45.845,26.262"]
"automl/HPOBench" ["l"="45.817,26.327"]
"zygmuntz/hyperband" ["l"="45.682,26.263"]
"automl/BOAH" ["l"="45.947,26.342"]
"automl/DEHB" ["l"="45.842,26.314"]
"automl/nas_benchmarks" ["l"="52.799,34.066"]
"openml/automlbenchmark" ["l"="45.787,26.365"]
"google-research/nasbench" ["l"="52.823,34.045"]
"dragonfly/dragonfly" ["l"="45.869,26.212"]
"automl/nasbench301" ["l"="52.755,34.067"]
"automl/CAVE" ["l"="45.922,26.351"]
"geopandas/scipy2018-geospatial-data" ["l"="44.669,26.819"]
"jorisvandenbossche/geopandas-tutorial" ["l"="41.54,24.242"]
"pysal/scipy2019-intermediate-gds" ["l"="44.565,26.873"]
"pysal/giddy" ["l"="41.361,24.189"]
"SocialDataSci/Geospatial_Data_with_Python" ["l"="44.795,26.736"]
"pysal/esda" ["l"="41.395,24.199"]
"darribas/gds18" ["l"="44.636,26.821"]
"scitools-classroom/scipy-2018-cartopy-tutorial" ["l"="44.613,26.836"]
"ozak/georasters" ["l"="41.364,24.243"]
"kjordahl/SciPy-Tutorial-2015" ["l"="44.612,26.881"]
"ljwolf/geopython" ["l"="44.652,26.846"]
"gdsbook/book" ["l"="41.427,24.219"]
"geopandas/contextily" ["l"="41.461,24.209"]
"koaning/human-learn" ["l"="45.135,26.339"]
"koaning/doubtlab" ["l"="45.112,26.343"]
"koaning/embetter" ["l"="45.098,26.328"]
"narwhals-dev/narwhals" ["l"="43.621,26.313"]
"csinva/imodels" ["l"="45.264,26.3"]
"bambinos/bambi" ["l"="39.193,35.923"]
"pymc-labs/CausalPy" ["l"="43.664,25.632"]
"probabl-ai/skore" ["l"="45.134,26.399"]
"marcotcr/anchor" ["l"="45.195,26.208"]
"salesforce/OmniXAI" ["l"="45.192,26.169"]
"tkrabel/bamboolib" ["l"="45.295,26.211"]
"tkrabel/edaviz" ["l"="45.244,26.235"]
"8080labs/pyforest" ["l"="45.335,26.18"]
"quantopian/qgrid" ["l"="43.577,23.976"]
"8080labs/ppscore" ["l"="45.297,26.287"]
"arunnbaba/pandas_ui" ["l"="45.161,26.254"]
"chris1610/sidetable" ["l"="43.707,24.354"]
"pyjanitor-devs/pandas_flavor" ["l"="43.701,24.227"]
"skops-dev/skops" ["l"="45.131,26.375"]
"INRIA/scikit-learn-mooc" ["l"="45.223,26.304"]
"soda-inria/hazardous" ["l"="45.041,26.539"]
"microsoft/forecasting" ["l"="45.489,26.362"]
"Azure/DeepLearningForTimeSeriesForecasting" ["l"="44.969,24.208"]
"microsoft/nlp-recipes" ["l"="52.848,25.725"]
"cuge1995/awesome-time-series" ["l"="44.978,24.295"]
"tensorflow/data-validation" ["l"="45.506,25.7"]
"tensorflow/transform" ["l"="45.596,25.695"]
"tensorflow/metadata" ["l"="45.567,25.676"]
"google/ml-metadata" ["l"="45.41,25.678"]
"tensorflow/fairness-indicators" ["l"="45.333,25.821"]
"tensorflow/estimator" ["l"="45.591,25.674"]
"HoloClean/holoclean" ["l"="52.202,26.406"]
"tensorflow/cloud" ["l"="44.801,16.287"]
"GoogleCloudPlatform/cloudml-samples" ["l"="44.818,16.444"]
"tensorflow/tpu" ["l"="50.764,30.01"]
"tensorflow/text" ["l"="45.654,25.709"]
"zihangdai/xlnet" ["l"="53.051,25.718"]
"tensorflow/nmt" ["l"="53.192,25.709"]
"RedaOps/ann-visualizer" ["l"="45.509,25.896"]
"mm-mansour/Fast-Pandas" ["l"="45.498,26.015"]
"minimaxir/person-blocker" ["l"="45.494,25.922"]
"dfouhey/caffe64" ["l"="45.479,25.89"]
"dmlc/gluon-nlp" ["l"="53.071,25.619"]
"GauravBh1010tt/DeepLearn" ["l"="52.936,25.582"]
"mdbloice/Augmentor" ["l"="50.883,29.85"]
"IntelLabs/nlp-architect" ["l"="52.943,25.66"]
"stared/livelossplot" ["l"="23.662,14.907"]
"rougier/neural-networks" ["l"="45.539,25.824"]
"MrGemy95/Tensorflow-Project-Template" ["l"="47.618,28.765"]
"Cloud-CV/Fabrik" ["l"="48.496,32.344"]
"farizrahman4u/recurrentshop" ["l"="55.877,28.51"]
"sachinruk/deepschool.io" ["l"="47.746,28.644"]
"minimaxir/automl-gs" ["l"="45.474,26.088"]
"d6t/d6tflow" ["l"="45.521,25.977"]
"ClimbsRocks/auto_ml" ["l"="45.481,26.169"]
"dabl/dabl" ["l"="45.333,26.327"]
"firmai/industry-machine-learning" ["l"="48.137,26.12"]
"instacart/lore" ["l"="45.488,26.042"]
"facebookresearch/ReAgent" ["l"="57.555,18.092"]
"google-deepmind/trfl" ["l"="57.506,18.106"]
"rtqichen/torchdiffeq" ["l"="22.907,14.56"]
"facebookresearch/pytext" ["l"="52.976,25.701"]
"google-deepmind/dm-haiku" ["l"="21.721,14.052"]
"onnx/sklearn-onnx" ["l"="45.766,26.501"]
"onnx/onnxmltools" ["l"="-44.274,6.076"]
"jpmml/sklearn2pmml" ["l"="45.79,26.559"]
"nok/sklearn-porter" ["l"="45.65,26.413"]
"onnx/keras-onnx" ["l"="-44.328,6.033"]
"sdpython/mlprodict" ["l"="45.82,26.515"]
"tensorflow/runtime" ["l"="45.651,25.641"]
"tensorflow/benchmarks" ["l"="57.92,23.535"]
"tensorflow/mlir" ["l"="37.156,0.945"]
"tensorflow/recommenders-addons" ["l"="52.834,3.04"]
"NVIDIA-Merlin/HugeCTR" ["l"="58.146,23.558"]
"davified/clean-code-ml" ["l"="45.219,26.374"]
"davified/docker-python-template" ["l"="45.189,26.4"]
"zedr/clean-code-python" ["l"="44.928,20.536"]
"ThoughtWorksInc/cd4ml-workshop" ["l"="45.022,26.499"]
"FilippoBovo/production-data-science" ["l"="45.07,26.551"]
"ThoughtWorksInc/CD4ML-Scenarios" ["l"="45.056,26.476"]
"Building-ML-Pipelines/building-machine-learning-pipelines" ["l"="47.941,26.564"]
"msaroufim/ml-design-patterns" ["l"="45.433,26.632"]
"justmarkham/scikit-learn-tips" ["l"="47.982,28.208"]
"abiodunjames/Awesome-Clean-Code-Resources" ["l"="25.939,-26.495"]
"bfast2/geeBfastMonitor" ["l"="39.298,35.082"]
"ec-jrc/nrt" ["l"="45.509,26.638"]
"GoogleCloudPlatform/mlops-on-gcp" ["l"="44.825,16.378"]
"cerlymarco/MEDIUM_NoteBook" ["l"="45.587,26.32"]
"rob-med/awesome-TS-anomaly-detection" ["l"="52.366,14.756"]
"lin-shuyu/VAE-LSTM-for-anomaly-detection" ["l"="52.485,14.747"]
"numenta/NAB" ["l"="52.349,14.769"]
"polyaxon/polyaxon" ["l"="45.403,25.847"]
"pachyderm/pachyderm" ["l"="45.365,25.831"]
"SeldonIO/MLServer" ["l"="45.21,25.764"]
"thu-ml/zhusuan" ["l"="45.851,26.084"]
"Trusted-AI/adversarial-robustness-toolbox" ["l"="38.945,-7.431"]
"datamllab/awesome-fairness-in-ai" ["l"="45.046,25.997"]
"adebayoj/fairml" ["l"="45.111,26.088"]
"algofairness/fairness-comparison" ["l"="45.104,26.029"]
"IBM/UQ360" ["l"="45.074,26.123"]
"yahoojapan/NGT" ["l"="-1.075,3.992"]
"aaalgo/kgraph" ["l"="-1.107,3.982"]
"erikbern/ann-benchmarks" ["l"="-1.101,4.009"]
"ZJULearning/efanna" ["l"="-1.115,3.964"]
"ZJULearning/nsg" ["l"="-1.084,3.971"]
"harsha-simhadri/big-ann-benchmarks" ["l"="-1.08,3.929"]
"nmslib/nmslib" ["l"="-1.068,4.042"]
"KrishnaswamyLab/PHATE" ["l"="41.211,38.427"]
"clearml/clearml-agent" ["l"="45.135,25.524"]
"allegroai/trains-jupyter-plugin" ["l"="45.136,25.54"]
"allegroai/clearml-pycharm-plugin" ["l"="45.124,25.549"]
"clearml/clearml-serving" ["l"="45.112,25.521"]
"clearml/clearml-web" ["l"="45.121,25.538"]
"allegroai/clearml-server-helm" ["l"="45.153,25.531"]
"allegroai/clearml-server-k8s" ["l"="45.149,25.541"]
"clearml/clearml-helm-charts" ["l"="45.104,25.543"]
"has2k1/plotnine" ["l"="40.472,35.256"]
"machow/siuba" ["l"="40.533,35.28"]
"holoviz/hvplot" ["l"="43.754,23.908"]
"kieferk/dfply" ["l"="40.463,35.28"]
"sfirke/janitor" ["l"="40.545,35.415"]
"pdpipe/pdpipe" ["l"="45.299,26.313"]
"santosjorge/cufflinks" ["l"="45.247,26.072"]
"amanahuja/change-detection-tutorial" ["l"="45.533,26.73"]
"dtolpin/bocd" ["l"="45.523,26.77"]
"gwgundersen/bocd" ["l"="45.54,26.762"]
"alan-turing-institute/TCPD" ["l"="45.543,26.808"]
"alan-turing-institute/TCPDBench" ["l"="45.547,26.845"]
"ruipgil/changepy" ["l"="45.498,26.765"]
"y-bar/bocd" ["l"="45.53,26.746"]
"codyrioux/pydata2015seattle" ["l"="45.513,26.724"]
"epfl-lasa/changepoint-detection" ["l"="45.499,26.736"]
"chenhaotian/Changepoints" ["l"="45.511,26.749"]
"welch/seasonal" ["l"="45.45,26.578"]
"microsoft/pai" ["l"="45.47,25.769"]
"AliyunContainerService/gpushare-scheduler-extender" ["l"="7.284,-11.356"]
"microsoft/hivedscheduler" ["l"="7.353,-11.185"]
"determined-ai/determined" ["l"="45.339,25.785"]
"microsoft/frameworkcontroller" ["l"="7.417,-11.225"]
"sql-machine-learning/elasticdl" ["l"="7.315,-11.188"]
"NVIDIA/nccl" ["l"="38.96,-0.676"]
"oracle/skater" ["l"="45.264,26.23"]
"marcotcr/anchor-experiments" ["l"="45.095,26.238"]
"riccotti/LORE" ["l"="45.102,26.197"]
"christophM/rulefit" ["l"="45.244,26.309"]
"marcoancona/DeepExplain" ["l"="24.131,14.277"]
"tmadl/sklearn-expertsys" ["l"="45.268,26.275"]
"marcotcr/lime-experiments" ["l"="45.088,26.217"]
"charmlab/mace" ["l"="44.988,26.174"]
"py-why/EconML" ["l"="43.677,25.61"]
"arvkevi/kneed" ["l"="45.356,26.334"]
"scverse/muon" ["l"="41.245,38.418"]
"linkedin/greykite" ["l"="45.431,26.306"]
"vtraag/leidenalg" ["l"="51.531,15.83"]
"kpe/bert-for-tf2" ["l"="53.628,27.233"]
"keras-team/keras-contrib" ["l"="53.878,27.193"]
"CyberZHG/keras-bert" ["l"="53.597,27.241"]
"kubeflow/model-registry" ["l"="45.342,25.518"]
"kubeflow/metadata" ["l"="45.436,25.594"]
"tensorflow/tfx-addons" ["l"="45.487,25.669"]
"tensorflow/model-card-toolkit" ["l"="45.336,25.75"]
"VertaAI/modeldb" ["l"="45.366,25.801"]
"spotify/terraform-gke-kubeflow-cluster" ["l"="45.382,25.596"]
"kubeflow/kfp-tekton" ["l"="45.292,25.6"]
"intro-to-ml-with-kubeflow/intro-to-ml-with-kubeflow-examples" ["l"="47.961,26.628"]
"mlrun/mlrun" ["l"="45.267,25.801"]
"kubeflow-kale/examples" ["l"="45.363,25.631"]
"provectus/sak-kubeflow" ["l"="-2.143,14.619"]
"WillKoehrsen/recurrent-neural-networks" ["l"="45.803,26.743"]
"WillKoehrsen/taxi-fare" ["l"="45.845,26.782"]
"combust/mleap" ["l"="-2.597,17.142"]
"yahoo/TensorFlowOnSpark" ["l"="-2.571,17.128"]
"microsoft/SynapseML" ["l"="-2.539,17.163"]
"databricks/koalas" ["l"="-2.598,17.109"]
"ucbrise/clipper" ["l"="45.471,25.829"]
"byzer-org/byzer-lang" ["l"="-2.478,14.945"]
"oracle/graphpipe" ["l"="45.553,25.791"]
"nicodv/kmodes" ["l"="45.406,26.3"]
"MaxHalford/prince" ["l"="45.299,26.375"]
"scikit-learn-contrib/sklearn-pandas" ["l"="45.438,26.268"]
"annoviko/pyclustering" ["l"="45.447,26.409"]
"bmabey/pyLDAvis" ["l"="52.754,25.655"]
"Yelp/MOE" ["l"="45.766,26.233"]
"HIPS/Spearmint" ["l"="45.757,26.206"]
"JasperSnoek/spearmint" ["l"="45.726,26.216"]
"rmcantin/bayesopt" ["l"="45.881,26.242"]
"wujian16/Cornell-MOE" ["l"="45.913,26.249"]
"claesenm/optunity" ["l"="45.74,26.275"]
"jaberg/hyperopt" ["l"="45.733,26.238"]
"mwhoffman/pybo" ["l"="45.848,26.239"]
"reiinakano/xcessiv" ["l"="45.468,26.228"]
"jbrownlee/Datasets" ["l"="45.73,25.99"]
"selva86/datasets" ["l"="45.905,26.168"]
"tirthajyoti/Deep-learning-with-Python" ["l"="-2.926,16.628"]
"https-deeplearning-ai/tensorflow-2-public" ["l"="45.814,25.902"]
"jbrownlee/Books" ["l"="45.763,25.967"]
"ibrahimjelliti/Deeplearning.ai-Natural-Language-Processing-Specialization" ["l"="48.369,27.267"]
"tirthajyoti/Machine-Learning-with-Python" ["l"="47.9,28.329"]
"PacktPublishing/Practical-Time-Series-Analysis" ["l"="45.006,24.097"]
"romeokienzler/coursera" ["l"="45.932,25.609"]
"deeplearningzerotoall/PyTorch" ["l"="-5.007,-23.199"]
"lyhue1991/eat_tensorflow2_in_30_days" ["l"="50.781,28.263"]
"Tanu-N-Prabhu/Python" ["l"="48.023,23.744"]
"AutoViML/featurewiz" ["l"="45.321,26.395"]
"Nixtla/mlforecast" ["l"="45.399,26.437"]
"target/matrixprofile-ts" ["l"="43.559,26.795"]
"matrix-profile-foundation/matrixprofile" ["l"="43.59,26.817"]
"EthicalML/awesome-artificial-intelligence-regulation" ["l"="45.202,25.988"]
"explainX/explainx" ["l"="45.17,26.231"]
"manifoldai/merf" ["l"="45.199,26.451"]
"RGF-team/rgf" ["l"="57.486,23.996"]
"fabsig/GPBoost" ["l"="45.274,26.412"]
"randel/MixRF" ["l"="45.145,26.473"]
"catboost/tutorials" ["l"="45.359,26.272"]
"catboost/benchmarks" ["l"="45.224,26.351"]
"sberbank-ai-lab/LightAutoML" ["l"="-44.31,26.184"]
"maks-sh/scikit-uplift" ["l"="43.62,25.617"]
"catboost/catboost-viewer" ["l"="45.244,26.35"]
"stanfordmlgroup/ngboost" ["l"="45.314,26.332"]
"DLSchool/deep-learning-school" ["l"="-44.406,26.065"]
"yandexdataschool/Practical_DL" ["l"="-44.358,26.065"]
"esokolov/ml-course-hse" ["l"="-44.384,26.054"]
"SimonBlanke/Hyperactive" ["l"="45.247,26.437"]
"SimonBlanke/Gradient-Free-Optimizers" ["l"="23.689,14.8"]
"Neuraxio/Neuraxle" ["l"="45.255,26.388"]
"carlomazzaferro/scikit-hts" ["l"="45.332,26.503"]
"sohaha/naiveui-admin-template" ["l"="-53.028,-12.028"]
"alteryx/compose" ["l"="45.237,26.46"]
"alteryx/woodwork" ["l"="45.226,26.44"]
"AutoViML/Auto_TS" ["l"="45.363,26.404"]
"cerlymarco/shap-hypetune" ["l"="45.326,26.383"]
"Yoast/YoastSEO.js" ["l"="46.021,25.742"]
"keras-team/governance" ["l"="45.787,25.757"]
"ashishpatel26/Tensorflow-in-practise-Specialization" ["l"="48.456,27.257"]
"netrack/keras-metrics" ["l"="51.538,33.793"]
"keras-team/keras-docs-zh" ["l"="50.568,28.146"]
"MagNet-DL/magnet" ["l"="45.597,25.761"]
"csxeba/evolute" ["l"="45.586,25.746"]
"ACCLAB/DABEST-python" ["l"="45.07,26.63"]
"ACCLAB/dabestr" ["l"="45.029,26.682"]
"ejolly/pymer4" ["l"="45.056,26.613"]
"fooof-tools/fooof" ["l"="62.058,34.432"]
"ACCLAB/DABEST-Matlab" ["l"="45.04,26.663"]
"maximtrp/scikit-posthocs" ["l"="45.178,26.523"]
"Waikato/moa" ["l"="45.828,26.009"]
"huawei-noah/streamDM" ["l"="-2.55,17.245"]
"Waikato/meka" ["l"="45.855,26.046"]
"Waikato/wekaDeeplearning4j" ["l"="45.923,26.011"]
"apache/incubator-samoa" ["l"="51.339,15.436"]
"alipsgh/tornado" ["l"="45.815,25.984"]
"hmgomes/AdaptiveRandomForest" ["l"="45.766,26.02"]
"ogozuacik/concept-drift-datasets-scikit-multiflow" ["l"="45.854,25.993"]
"online-ml/deep-river" ["l"="45.759,25.998"]
"Waikato/weka-3.8" ["l"="45.981,25.983"]
"adaptive-machine-learning/CapyMOA" ["l"="45.917,25.984"]
"blablahaha/concept-drift" ["l"="45.835,25.977"]
"vlosing/driftDatasets" ["l"="45.813,25.997"]
"alipsgh/codes-for-moa" ["l"="45.849,25.982"]
"scikit-multilearn/scikit-multilearn" ["l"="45.608,26.193"]
"trent-b/iterative-stratification" ["l"="50.689,30.293"]
"RandolphVI/Multi-Label-Text-Classification" ["l"="53.68,27.247"]
"Refefer/fastxml" ["l"="51.666,30.997"]
"suraj-deshmukh/Keras-Multi-Label-Image-Classification" ["l"="51.514,30.736"]
"tsoumakas/mulan" ["l"="45.754,26.091"]
"lancopku/SGM" ["l"="-51.531,-14.771"]
"inspirehep/magpie" ["l"="53.576,27.34"]
"sdv-dev/TGAN" ["l"="44.843,26.512"]
"mahmoodm2/tableGAN" ["l"="44.843,26.537"]
"sdv-dev/DeepEcho" ["l"="44.853,26.474"]
"Baukebrenninkmeijer/table-evaluator" ["l"="44.83,26.522"]
"worldbank/REaLTabFormer" ["l"="44.842,26.564"]
"dmlc/ps-lite" ["l"="57.937,23.504"]
"tobegit3hub/tensorflow_template_application" ["l"="58.027,23.481"]
"unslothai/hyperlearn" ["l"="45.502,26.081"]
"bckenstler/CLR" ["l"="54.076,27.061"]
"Xtra-Computing/thundersvm" ["l"="45.427,26.182"]
"huggingface/nanotron" ["l"="38.746,-0.434"]
"catalyst-team/catalyst" ["l"="50.914,29.869"]
"Kaixhin/grokking-pytorch" ["l"="47.54,28.625"]
"alteryx/predict-customer-churn" ["l"="45.29,26.579"]
"alteryx/open_source_demos" ["l"="45.304,26.502"]
"alteryx/predict-loan-repayment" ["l"="45.329,26.58"]
"Featuretools/predict-correct-answer" ["l"="45.301,26.591"]
"alteryx/predict-malicious-cyber-connections" ["l"="45.308,26.577"]
"alteryx/Automated-Manual-Comparison" ["l"="45.438,26.551"]
"pik1989/MLProject-ChurnPrediction" ["l"="47.156,25.219"]
"KazukiOnodera/Santander-Customer-Transaction-Prediction" ["l"="6.103,-41.042"]
"alteryx/predict-remaining-useful-life" ["l"="51.32,37.929"]
"rstudio/keras-customer-churn" ["l"="45.288,26.655"]
"BayesWitnesses/m2cgen" ["l"="45.461,26.252"]
"dmlc/treelite" ["l"="57.807,23.578"]
"Wookai/paper-tips-and-tricks" ["l"="-4.497,21.989"]
"emlearn/emlearn" ["l"="-16.113,-42.526"]
"Luolc/AdaBound" ["l"="50.941,29.967"]
"google-deepmind/graph_nets" ["l"="52.964,16.035"]
"bendangnuksung/Image-OutPainting" ["l"="45.668,28.948"]
"alegonz/baikal" ["l"="45.178,26.374"]
"dovpanda-dev/dovpanda" ["l"="45.134,26.294"]
"jmschrei/apricot" ["l"="45.179,26.466"]
"kevinzakka/torchnca" ["l"="45.026,26.457"]
"uxlfoundation/scikit-learn-intelex" ["l"="45.321,26.207"]
"uxlfoundation/oneDAL" ["l"="64.15,-1.932"]
"IntelPython/scikit-learn_bench" ["l"="64.099,-1.929"]
"IntelPython/dpctl" ["l"="64.106,-1.906"]
"NannyML/nannyml" ["l"="45.214,26.062"]
"weepon/feature_selection" ["l"="45.538,26.591"]
"luckyerdog/feature_select" ["l"="45.538,26.607"]
"cainsmile/GA_for_Feature_Selection" ["l"="45.536,26.65"]
"OlaWod/feature-selection_GA-SA" ["l"="45.525,26.616"]
"zhaoxingfeng/Genetic-Algorithm" ["l"="50.092,26.333"]
"tensorflow/ecosystem" ["l"="58.014,23.44"]
"linkedin/spark-tfrecord" ["l"="58.056,23.337"]
"IBM/MAX-Human-Pose-Estimator" ["l"="46.086,25.472"]
"zhiyongc/GRU-D" ["l"="45.223,26.764"]
"Han-JD/GRU-D" ["l"="45.204,26.777"]
"PeterChe1990/GRU-D" ["l"="45.206,26.76"]
"felixykliu/NAOMI" ["l"="45.22,26.748"]
"Luoyonghong/Multivariate-Time-Series-Imputation-with-Generative-Adversarial-Networks" ["l"="45.227,26.733"]
"christophM/interpretable-ml-book" ["l"="45.264,26.108"]
"suriyadeepan/torchtest" ["l"="45.65,25.824"]
"chaserileyroberts/mltest" ["l"="45.617,25.859"]
"facebookresearch/deepcluster" ["l"="53.077,29.625"]
"HobbitLong/PyContrast" ["l"="53.038,29.557"]
"facebookresearch/moco" ["l"="53.011,29.578"]
"KevinMusgrave/pytorch-metric-learning" ["l"="50.92,29.719"]
"facebookresearch/vissl" ["l"="52.961,29.524"]
"facebookresearch/higher" ["l"="57.824,19.464"]
"lanpa/tensorboardX" ["l"="50.919,29.781"]
"facebookresearch/swav" ["l"="53.018,29.559"]
"mbadry1/DeepLearning.ai-Summary" ["l"="48.131,28.622"]
"ageron/handson-ml2" ["l"="47.892,28.454"]
"fastai/course-v3" ["l"="49.318,28.61"]
"lexfridman/mit-deep-learning" ["l"="47.747,28.505"]
"MITDeepLearning/introtodeeplearning" ["l"="47.707,28.432"]
"MaxBenChrist/awesome_time_series_in_python" ["l"="45.565,26.366"]
"AileenNielsen/TimeSeriesAnalysisWithPython" ["l"="44.982,24.083"]
"RJT1990/pyflux" ["l"="45.55,26.296"]
"winedarksea/AutoTS" ["l"="45.418,26.403"]
"raphaelvallat/yasa" ["l"="62.174,34.422"]
"bashtage/linearmodels" ["l"="43.745,25.652"]
"proplot-dev/proplot" ["l"="48.031,28.007"]
"trevismd/statannotations" ["l"="22.048,14.632"]
"JustGlowing/minisom" ["l"="45.023,26.061"]
"sevamoo/SOMPY" ["l"="44.918,26.024"]
"alexarnimueller/som" ["l"="44.937,26.048"]
"fcomitani/simpsom" ["l"="44.946,26.026"]
"felixriese/susi" ["l"="44.938,26.005"]
"peterwittek/somoclu" ["l"="44.92,25.997"]
"ratschlab/SOM-VAE" ["l"="43.742,26.814"]
"FlorentF9/DESOM" ["l"="44.897,26.024"]
"cgorman/tensorflow-som" ["l"="44.961,26.011"]
"diego-vicente/som-tsp" ["l"="47.7,26.404"]
"jakobrunge/tigramite" ["l"="43.7,25.504"]
"rileypsmith/sklearn-som" ["l"="44.968,26.043"]
"itdxer/neupy" ["l"="44.986,26.076"]
"logicalclocks/rondb" ["l"="45.274,25.485"]
"hopshadoop/hops" ["l"="45.28,25.535"]
"logicalclocks/feature-store-api" ["l"="45.299,25.525"]
"featureform/featureform" ["l"="45.247,25.899"]
"featurestoreorg/serverless-ml-course" ["l"="47.988,26.449"]
"alibaba/feathub" ["l"="-2.686,15.144"]
"logicalclocks/hops-examples" ["l"="45.294,25.549"]
"logicalclocks/hopsworks-tutorials" ["l"="48.028,26.638"]
"logicalclocks/maggy" ["l"="45.309,25.55"]
"dc-sics/hopsworks" ["l"="45.27,25.516"]
"awslabs/datawig" ["l"="45.251,26.57"]
"eltonlaw/impyute" ["l"="45.271,26.553"]
"kearnz/autoimpute" ["l"="45.261,26.506"]
"schelterlabs/jenga" ["l"="45.231,26.608"]
"jsyoon0823/GAIN" ["l"="45.246,26.662"]
"iskandr/fancyimpute" ["l"="45.301,26.46"]
"AnotherSamWilson/miceforest" ["l"="45.257,26.48"]
"syne-tune/syne-tune" ["l"="43.649,26.108"]
"epsilon-machine/missingpy" ["l"="45.255,26.613"]
"loft-br/xgboost-survival-embeddings" ["l"="45.24,26.503"]
"chl8856/Dynamic-DeepHit" ["l"="45.131,26.611"]
"Novartis/torchsurv" ["l"="45.125,26.632"]
"MI2DataLab/survshap" ["l"="45.143,26.583"]
"guildai/guildai" ["l"="45.355,25.871"]
"replicate/keepsake" ["l"="45.305,25.954"]
"magda-io/magda" ["l"="-2.326,14.663"]
"facebookresearch/hiplot" ["l"="45.406,26.077"]
"vivekratnavel/omniboard" ["l"="45.512,25.812"]
"whylabs/whylogs" ["l"="4.097,13.612"]
"chovanecm/sacredboard" ["l"="45.528,25.748"]
"JarnoRFB/incense" ["l"="45.516,25.764"]
"yuvalatzmon/SACRED_HyperOpt_v2" ["l"="45.522,25.783"]
"fossasia/visdom" ["l"="51.116,29.383"]
"drivendata/data-science-is-software" ["l"="45.015,26.602"]
"MSFTImagine/Microsoft-DataScience-Process" ["l"="45.027,26.578"]
"thuijskens/production-tools" ["l"="45.051,26.573"]
"engarde-dev/engarde" ["l"="43.768,24.089"]
"JosPolfliet/awesome-ai-usecases" ["l"="44.61,0.464"]
"hackalog/bus_number" ["l"="44.982,26.635"]
"firmai/business-machine-learning" ["l"="48.293,25.981"]
"HunterMcGushion/hyperparameter_hunter" ["l"="45.447,26.339"]
"ericmjl/data-testing-tutorial" ["l"="44.985,26.66"]
"henripal/labnotebook" ["l"="45.596,25.93"]
"machinalis/featureforge" ["l"="44.784,27.765"]
"studioml/studio" ["l"="45.572,25.815"]
"NathanEpstein/Dora" ["l"="43.774,24.172"]
"scikit-learn-contrib/DESlib" ["l"="45.375,26.417"]
"scikit-learn-contrib/stability-selection" ["l"="45.375,26.435"]
"BiomedSciAI/causallib" ["l"="43.654,25.567"]
"guillermo-navas-palencia/optbinning" ["l"="45.504,26.523"]
"Menelau/DESlib" ["l"="57.369,23.942"]
"flennerhag/mlens" ["l"="45.426,26.333"]
"yzhao062/combo" ["l"="45.501,26.474"]
"scikit-learn-contrib/scikit-learn-contrib" ["l"="45.329,26.416"]
"ealcobaca/pymfe" ["l"="45.685,26.459"]
"analyticalmindsltd/smote_variants" ["l"="51.491,30.564"]
"scikit-learn-contrib/forest-confidence-interval" ["l"="45.343,26.427"]
"vecxoz/vecstack" ["l"="57.404,23.993"]
"secondmind-labs/trieste" ["l"="45.994,26.188"]
"paraklas/NARGP" ["l"="46.095,26.072"]
"SMTorg/smt" ["l"="62.674,-2.247"]
"jonathf/chaospy" ["l"="62.585,-2.251"]
"GPflow/GPflowOpt" ["l"="45.891,26.208"]
"probabilistic-numerics/probnum" ["l"="21.823,14.186"]
"SURGroup/UQpy" ["l"="62.608,-2.254"]
"mdolab/pyoptsparse" ["l"="62.725,-2.252"]
"spotify/chartify" ["l"="45.396,26.044"]
"santinic/pampy" ["l"="45.192,20.836"]
"bokeh/bokeh" ["l"="43.589,23.664"]
"spotify/luigi" ["l"="44.514,20.588"]
"mwouts/jupytext" ["l"="43.538,23.892"]
"holoviz/holoviews" ["l"="43.69,23.892"]
"ContextLab/hypertools" ["l"="45.445,26.136"]
"Bioconductor/BiocStickers" ["l"="44.389,26.275"]
"giuseppec/iml" ["l"="40.371,35.541"]
"andosa/treeinterpreter" ["l"="45.244,26.259"]
"jphall663/GWU_data_mining" ["l"="45.114,26.236"]
"jphall663/xai_misconceptions" ["l"="45.141,26.244"]
"h2oai/h2o-meetups" ["l"="-2.744,17.322"]
"WillKoehrsen/automated-feature-engineering" ["l"="45.579,26.49"]
"abhayspawar/featexp" ["l"="45.47,26.377"]
"ShichenXie/scorecardpy" ["l"="45.628,26.574"]
"WillKoehrsen/hyperparameter-optimization" ["l"="45.611,26.367"]
"rubinxin/CoCaBO_code" ["l"="46.127,26.257"]
"aryandeshwal/HyBO" ["l"="46.137,26.272"]
"xingchenwan/Casmopolitan" ["l"="46.072,26.25"]
"vinecopulib/pyvinecopulib" ["l"="44.738,26.497"]
"tnagler/VineCopula" ["l"="44.694,26.511"]
"maximenc/pycop" ["l"="44.738,26.48"]
"DanielBok/copulae" ["l"="44.759,26.476"]
"asnelt/mixedvines" ["l"="44.758,26.511"]
"iterative/example-get-started" ["l"="44.789,25.644"]
"iterative/dataset-registry" ["l"="44.764,25.616"]
"iterative/dvc-bench" ["l"="44.846,25.701"]
"uber-research/TuRBO" ["l"="45.98,26.24"]
"dme65/pySOT" ["l"="45.998,26.221"]
"kirthevasank/nasbot" ["l"="52.965,34.108"]
"uber/bayesmark" ["l"="46.024,26.257"]
"OATML/bdl-benchmarks" ["l"="22.453,15.372"]
"scikit-learn-contrib/polylearn" ["l"="57.899,23.337"]
"julianspaeth/random-survival-forest" ["l"="45.1,26.638"]
"chiragnagpal/deep_cox_mixtures" ["l"="45.122,26.583"]
"kevinzakka/hypersearch" ["l"="45.739,26.324"]
"salesforce/matchbox" ["l"="53.862,24.659"]
"d6t/d6tpipe" ["l"="45.521,25.868"]
"d6t/d6t-python" ["l"="45.542,25.894"]
"dask/fastparquet" ["l"="43.893,23.807"]
"shawnbrown/datatest" ["l"="43.813,24.167"]
"ReviewNB/treon" ["l"="43.704,24.251"]
"d6t/d6tflow-template" ["l"="45.553,25.909"]
"Minyus/pipelinex" ["l"="22.421,14.551"]
"chiphuyen/lazynlp" ["l"="48.237,26.322"]
"mara/mara-pipelines" ["l"="0.402,16.087"]
"bbli/ml_board" ["l"="45.655,25.875"]
"jgreenemi/Parris" ["l"="45.689,25.886"]
"xuman-Amy/preprocessing" ["l"="45.54,26.63"]
"luanfujun/deep-painterly-harmonization" ["l"="45.592,29.089"]
"NVlabs/MUNIT" ["l"="45.791,29.003"]
"kaishengtai/neuralart" ["l"="45.668,29.433"]
"meetmangukiya/instagram-scraper" ["l"="38.32,33.967"]
"NVIDIA/FastPhotoStyle" ["l"="45.547,29.157"]
"cybertronai/imagenet18_old" ["l"="45.639,28.869"]
"schollz/howmanypeoplearearound" ["l"="23.506,-26.687"]
"CSAILVision/gandissect" ["l"="45.758,28.987"]
"llSourcell/Learn_Blockchain_in_2_months" ["l"="49.512,26.984"]
"webermarcolivier/statannot" ["l"="45.149,26.509"]
"zqfang/GSEApy" ["l"="41.164,38.486"]
"probml/pmtk3" ["l"="45.946,26.094"]
"ArthurZC23/Machine-Learning-A-Probabilistic-Perspective-Solutions" ["l"="50.544,27.744"]
"PRML/PRMLT" ["l"="50.732,27.983"]
"bayesnet/bnt" ["l"="39.39,35.983"]
"probml/pmtkdata" ["l"="46.005,26.079"]
"rasmusbergpalm/DeepLearnToolbox" ["l"="47.92,29.074"]
"probml/pmtksupport" ["l"="45.995,26.067"]
"vlfeat/matconvnet" ["l"="47.843,29.334"]
"avehtari/BDA_py_demos" ["l"="39.265,35.93"]
"docker-for-data-science/docker-for-data-science-tutorial" ["l"="44.944,26.716"]
"linkedin/detext" ["l"="52.65,25.609"]
"mynameisfiber/pyxmeans" ["l"="45.479,26.487"]
"scikit-learn-contrib/metric-learn" ["l"="32.764,29.43"]
"GiulioRossetti/cdlib" ["l"="51.542,15.843"]
"elki-project/elki" ["l"="-2.328,17.565"]
"deric/clustering-benchmark" ["l"="45.478,26.548"]
"NaegleLab/OpenEnsembles" ["l"="45.55,26.534"]
"IBM/FfDL" ["l"="45.291,25.673"]
"IBM/microservices-traffic-management-using-istio" ["l"="25.802,-30.96"]
"jupyter-server/enterprise_gateway" ["l"="43.299,24.018"]
"machine-learning-exchange/mlx" ["l"="45.255,25.575"]
"IBM-Cloud/openwhisk-darkvisionapp" ["l"="23.655,2.364"]
"IBM/Kubernetes-container-service-GitLab-sample" ["l"="25.823,-30.968"]
"Pysamlam/Tips-of-Feature-engineering" ["l"="50.62,27.968"]
"scikit-learn-contrib/project-template" ["l"="45.158,26.487"]
"tonybaloney/wily" ["l"="45.233,21.108"]
"se2p/pynguin" ["l"="45.317,21.102"]
"ModelOriented/modelStudio" ["l"="40.236,35.602"]
"mlr-org/mlr3" ["l"="40.426,35.516"]
"ropensci/drake" ["l"="40.541,35.385"]
"thomasp85/lime" ["l"="40.429,35.466"]
"pbiecek/ema" ["l"="40.215,35.611"]
"mlr-org/mlr" ["l"="40.385,35.389"]
"DeepBlueAI/AutoSmart" ["l"="57.25,23.222"]
"motefly/DeepGBM" ["l"="58.076,23.416"]
"dayeren/Kaggle_Competition_Treasure" ["l"="57.819,22.625"]
"rushter/heamy" ["l"="57.438,23.998"]
"guoday/ctrNet-tool" ["l"="57.799,22.655"]
"EliotAndres/kaggle-past-solutions" ["l"="57.498,24.076"]
"Far0n/xgbfi" ["l"="57.465,24.01"]
"ThoughtWorksInc/ml-app-template" ["l"="44.995,26.531"]
"ThoughtWorksInc/ml-cd-starter-kit" ["l"="44.992,26.517"]
"tensorflow/autograph" ["l"="45.599,25.621"]
"alipsgh/data-streams" ["l"="45.797,25.991"]
"scikit-multiflow/streaming-datasets" ["l"="45.689,26.024"]
"doubleplusplus/incremental_decision_tree-CART-Random_Forest" ["l"="45.708,26.323"]
"sknetwork-team/scikit-network" ["l"="51.522,15.888"]
"parrt/stratx" ["l"="45.202,26.286"]
"AustinRochford/PyCEbox" ["l"="45.227,26.231"]
"parrt/lolviz" ["l"="43.594,24.164"]
"rdturnermtl/bbo_challenge_starter_kit" ["l"="46.065,26.272"]
"awslabs/adatune" ["l"="46.3,26.454"]
"lucfra/FAR-HO" ["l"="46.241,26.445"]
"gbaydin/hypergradient-descent" ["l"="46.355,26.46"]
"lucfra/RFHO" ["l"="46.275,26.442"]
"fabianp/hoag" ["l"="46.282,26.475"]
"amphibian-dev/toad" ["l"="45.604,26.594"]
"taenggu0309/Scorecard--Function" ["l"="45.613,26.619"]
"ShichenXie/scorecard" ["l"="45.642,26.597"]
"boredbird/woe" ["l"="45.669,26.607"]
"jstephenj14/Monotonic-WOE-Binning-Algorithm" ["l"="45.624,26.605"]
"Lantianzz/Scorecard-Bundle" ["l"="45.599,26.611"]
"finafily526/A_Model_of_Risk_Control" ["l"="45.617,26.644"]
"hsz1273327/ScoreCardModel" ["l"="45.692,26.71"]
"taenggu0309/Scorecard--Assessment" ["l"="45.63,26.626"]
"itlubber/scorecardpipeline" ["l"="45.65,26.625"]
"lavender28/Credit-Card-Score" ["l"="45.65,26.644"]
"wepe/PPD_RiskControlCompetition" ["l"="57.89,22.718"]
"huangxianyang/risk-model" ["l"="45.63,26.655"]
"htbeker/Application_score_card" ["l"="45.684,26.648"]
"LeronQ/score_logistic" ["l"="45.669,26.693"]
"taenggu0309/Semi-auto-modeling" ["l"="45.631,26.638"]
"Labryant/ScoreCard" ["l"="45.599,26.639"]
"taenggu0309/PPD-Modeling-Competition" ["l"="45.635,26.669"]
"Mensyne/scorecard_model" ["l"="45.617,26.66"]
"lovemyfat/creditCard" ["l"="45.616,26.672"]
"xsj0609/data_science" ["l"="45.606,26.651"]
"SailingHe/Automatic-scorecard-model" ["l"="45.617,26.634"]
"datmo/datmo" ["l"="45.58,25.532"]
"akosiorek/forge" ["l"="45.572,25.641"]
"NVIDIA/framework-reproducibility" ["l"="45.61,25.571"]
"andreysharapov/xaience" ["l"="43.535,26.172"]
"hbaniecki/adversarial-explainable-ai" ["l"="39.085,-7.542"]
"oneTaken/awesome_deep_learning_interpretability" ["l"="45.085,26.159"]
"dssg/triage" ["l"="44.922,26.075"]
"dssg/fairness_tutorial" ["l"="44.954,26.068"]
"pymetrics/audit-ai" ["l"="45.084,26.056"]
"dssg/hitchhikers-guide" ["l"="44.898,26.068"]
"google/ml-fairness-gym" ["l"="45.101,25.974"]
"openml-labs/gama" ["l"="45.83,26.389"]
"openml/openml-python" ["l"="45.855,26.384"]
"openml/OpenML" ["l"="45.848,26.361"]
"windmaple/awesome-AutoML" ["l"="52.802,33.976"]
"autogluon/tabrepo" ["l"="43.613,26.054"]
"slds-lmu/yahpo_gym" ["l"="45.821,26.353"]
"dask/dask-ml" ["l"="43.818,23.785"]
"dask/dask-searchcv" ["l"="43.864,23.856"]
"luke14free/pm-prophet" ["l"="39.183,35.973"]
"SelfExplainML/PiML-Toolbox" ["l"="43.688,26.201"]
"StatMixedML/XGBoostLSS" ["l"="45.302,26.413"]
"NIPS-BRITS/BRITS" ["l"="45.206,26.743"]
"fteufel/PyTorch-GRU-D" ["l"="45.189,26.817"]
"akanz1/klib" ["l"="45.277,26.322"]
"MLopez-Ibanez/irace" ["l"="46.079,26.437"]
"souzamarcelo/acviz" ["l"="46.034,26.41"]
"StatMixedML/LightGBMLSS" ["l"="45.315,26.431"]
"tensorflow/decision-forests" ["l"="45.679,25.66"]
"tensorflow/ranking" ["l"="58.143,23.462"]
"WillKoehrsen/machine-learning-project-walkthrough" ["l"="47.149,24.709"]
"WillKoehrsen/kaggle-automated-feature-engineering" ["l"="45.807,26.716"]
"YC-Coder-Chen/feature-engineering-handbook" ["l"="45.53,26.525"]
"thuijskens/bayesian-optimization" ["l"="45.77,26.299"]
"WillKoehrsen/wikipedia-data-science" ["l"="45.65,26.541"]
"LiYangHart/Hyperparameter-Optimization-of-Machine-Learning-Algorithms" ["l"="-54.381,-14.611"]
"Vooban/Hyperopt-Keras-CNN-CIFAR-100" ["l"="45.739,26.427"]
"TianFengshou/hyperopt-doc-zh" ["l"="45.696,26.408"]
"WillKoehrsen/Machine-Learning-Projects" ["l"="47.174,24.722"]
"SoftwareAG/nyoka" ["l"="45.9,26.58"]
"SoftwareAG/r-pmml" ["l"="45.94,26.586"]
"autodeployai/pypmml" ["l"="45.908,26.594"]
"jpmml/jpmml-evaluator-python" ["l"="45.96,26.588"]
"autodeployai/pmml4s" ["l"="45.886,26.568"]
"autodeployai/ai-serving" ["l"="45.991,26.63"]
"FlorentF9/SOMperf" ["l"="44.878,26.01"]
"FlorentF9/skstab" ["l"="44.861,26.01"]
"alteryx/predict-appointment-noshow" ["l"="45.308,26.603"]
"Featuretools/predict-household-poverty" ["l"="45.312,26.587"]
"entron/entity-embedding-rossmann" ["l"="57.448,24.064"]
"wzhe06/Reco-papers" ["l"="58.168,23.4"]
"hexiangnan/neural_collaborative_filtering" ["l"="59.505,23.673"]
"decile-team/submodlib" ["l"="51.792,25.824"]
"decile-team/cords" ["l"="34.504,31.844"]
"scikit-tda/kepler-mapper" ["l"="51.978,16.577"]
"jmschrei/avocado" ["l"="45.102,26.518"]
"StatMixedML/CatBoostLSS" ["l"="45.271,26.441"]
"CDonnerer/xgboost-distribution" ["l"="45.287,26.438"]
"abhishekkrthakur/autoxgb" ["l"="47.852,26.635"]
"Nixtla/tsfeatures" ["l"="45.372,26.465"]
"zillow/quantile-forest" ["l"="45.326,26.454"]
"cerlymarco/linear-tree" ["l"="45.333,26.44"]
"henrikbostrom/crepes" ["l"="43.736,26.187"]
"djbolder/credit-risk-modelling" ["l"="45.737,26.912"]
"jalajthanaki/credit-risk-modelling" ["l"="45.73,26.931"]
"hankkuang/creditRiskCScoreCard" ["l"="45.716,26.822"]
"open-risk/transitionMatrix" ["l"="45.773,26.935"]
"finlytics-hub/credit_risk_model" ["l"="45.696,26.912"]
"naenumtou/ifrs9" ["l"="45.773,26.963"]
"yzhao062/awesome-ensemble-learning" ["l"="45.464,26.435"]
"e-271/awesome-few-shot-learning" ["l"="57.795,19.316"]
"fuqiuai/sklearn-feature-engineering" ["l"="45.763,27.013"]
"jiangzhongkai/CCF-2018-TeleCOM" ["l"="45.766,27.047"]
"angeliababy/houseprice_regression" ["l"="45.797,27.051"]
"huangxianyang/Predicting-Loan-Repayment-with-Automated-Feature-Engineering-in-Featuretools" ["l"="45.692,26.838"]
"trainindata/deploying-machine-learning-models" ["l"="45.596,26.441"]
"trainindata/testing-and-monitoring-ml-deployments" ["l"="45.607,26.49"]
"solegalli/machine-learning-imbalanced-data" ["l"="45.594,26.518"]
"trainindata/dmlm-research-and-production" ["l"="45.627,26.468"]
"solegalli/hyperparameter-optimization" ["l"="45.579,26.525"]
"trainindata/feature-engineering-for-time-series-forecasting" ["l"="45.549,26.555"]
"paiml/practical-mlops-book" ["l"="47.985,26.479"]
"GoogleCloudPlatform/ml-design-patterns" ["l"="48.042,26.422"]
"GokuMohandas/mlops-course" ["l"="48.006,26.378"]
"the-full-stack/fsdl-text-recognizer-2021-labs" ["l"="48.13,26.413"]
"lazyprogrammer/machine_learning_examples" ["l"="47.79,28.517"]
"blent-ai/ALEPython" ["l"="45.22,26.259"]
"DanaJomar/PyALE" ["l"="45.178,26.271"]
"OctoberChang/klcpd_code" ["l"="45.583,27.028"]
"deryckt/TIRE" ["l"="45.572,26.969"]
"daisuke-motoki/change_point_detector" ["l"="45.596,27.095"]
"ustunb/actionable-recourse" ["l"="44.951,26.193"]
"charliemarx/pmtools" ["l"="44.952,26.173"]
"divyat09/cf-feasibility" ["l"="44.988,26.159"]
"MartinPawel/c-chvae" ["l"="44.951,26.161"]
"charmlab/recourse" ["l"="44.935,26.159"]
"dhanajitb/GAIN-Pytorch" ["l"="45.265,26.697"]
"steveli/misgan" ["l"="45.254,26.712"]
"caow13/BRITS" ["l"="45.223,26.695"]
"Luoyonghong/E2EGAN" ["l"="45.214,26.726"]
"IvanBongiorni/GAN-RNN_Timeseries-imputation" ["l"="45.237,26.708"]
"lethaiq/GAIN" ["l"="45.248,26.691"]
"WenjieDu/SAITS" ["l"="45.21,26.711"]
"Graph-Machine-Learning-Group/grin" ["l"="45.125,24.521"]
"spindro/GINN" ["l"="45.193,26.748"]
"rcamino/imputation-dgm" ["l"="45.247,26.735"]
"OpenIDEA-YunanUniversity/ycimpute" ["l"="45.261,26.638"]
"kkyon/botflow" ["l"="45.169,20.738"]
"alexmojaki/birdseye" ["l"="45.291,20.776"]
"Squarespace/datasheets" ["l"="45.974,5.079"]
"snipsco/snips-nlu" ["l"="45.927,4.973"]
"columbia/fairtest" ["l"="45.053,26.052"]
"cosmicBboy/themis-ml" ["l"="45.146,26.122"]
"algofairness/BlackBoxAuditing" ["l"="45.066,26.04"]
"WillKoehrsen/pytorch_challenge" ["l"="45.875,26.769"]
"WillKoehrsen/neural-networks" ["l"="45.874,26.787"]
"WillKoehrsen/mastering-large-datasets" ["l"="45.906,26.792"]
"plantsgo/ijcai-2018" ["l"="57.802,22.669"]
"YouChouNoBB/ijcai-18-top2-single-mole-solution" ["l"="57.791,22.678"]
"luoda888/2018-IJCAI-top3" ["l"="57.775,22.671"]
"duxuhao/JData-2018" ["l"="57.868,22.814"]
"luoda888/tianchi-diabetes-top12" ["l"="57.747,22.668"]
"nzc/dnn_ctr" ["l"="58.086,23.358"]
"nzc/tencent-contest" ["l"="57.778,22.689"]
"IBM/MAX-Skeleton" ["l"="46.079,25.494"]
"srome/pykliep" ["l"="45.611,27.18"]
"hoxo-m/densratio_py" ["l"="45.606,27.152"]
"IOHprofiler/IOHexperimenter" ["l"="46.113,26.36"]
"IOHprofiler/IOHanalyzer" ["l"="46.134,26.366"]
"IOHprofiler/ModularCMAES" ["l"="46.149,26.36"]
"nikivanstein/GSAreport" ["l"="46.134,26.38"]
"XAI-liacs/LLaMEA" ["l"="46.157,26.372"]
"ryancburke/DNN_survival" ["l"="45.117,26.62"]
"RyanWangZf/SurvTRACE" ["l"="45.118,26.598"]
"arturomoncadatorres/deepsurvk" ["l"="45.139,26.625"]
"Code-Pop/Unit-Testing-Vue-3" ["l"="44.194,26.03"]
"Code-Pop/graphql-client" ["l"="44.181,26.038"]
"Code-Pop/build-a-blog-with-nuxt-3-and-nuxt-content-v2" ["l"="44.168,26.033"]
"ericmjl/dl-workshop" ["l"="44.411,26.966"]
"blackjax-devs/sampling-book" ["l"="21.794,14.165"]
"d6t/d6tjoin" ["l"="45.518,25.731"]
"bgweber/DS_Production" ["l"="44.954,26.54"]
"thoughtworks/twde-datalab" ["l"="44.973,26.525"]
"jpmml/jpmml-evaluator" ["l"="45.847,26.568"]
"openscoring/openscoring" ["l"="45.871,26.612"]
"jpmml/jpmml-model" ["l"="45.868,26.597"]
"jpmml/jpmml-sklearn" ["l"="45.818,26.568"]
"jpmml/jpmml-sparkml" ["l"="45.852,26.589"]
"pjpan/PPJUtils" ["l"="45.916,26.559"]
"jpmml/jpmml-xgboost" ["l"="45.835,26.588"]
"jpmml/jpmml-lightgbm" ["l"="45.848,26.613"]
"jpmml/pyspark2pmml" ["l"="45.879,26.584"]
"jpmml/jpmml-android" ["l"="45.892,26.597"]
"jpmml/jpmml-evaluator-spark" ["l"="45.838,26.603"]
"komiya-atsushi/xgboost-predictor-java" ["l"="57.862,23.489"]
"FlinkML/flink-jpmml" ["l"="-1.51,12.566"]
"jpmml/jpmml-tensorflow" ["l"="45.866,26.569"]
"predict-idlab/tsflex" ["l"="45.359,26.504"]
"aerdem4/lofo-importance" ["l"="45.299,26.347"]
"predict-idlab/powershap" ["l"="45.349,26.456"]
"alteryx/predict-olympic-medals" ["l"="45.291,26.556"]
"MLBazaar/BTB" ["l"="45.07,26.428"]
"WillKoehrsen/airbus" ["l"="45.864,26.8"]
"CMA-ES/libcmaes" ["l"="45.984,26.334"]
"CMA-ES/c-cmaes" ["l"="46.059,26.362"]
"dietmarwo/fast-cma-es" ["l"="45.95,26.371"]
"CMA-ES/pycma" ["l"="45.926,26.292"]
"numbbo/coco" ["l"="45.99,26.315"]
"resibots/blackdrops" ["l"="46.021,26.3"]
"CyberAgentAILab/cmaes" ["l"="45.9,26.365"]
"ppocma/ppocma" ["l"="46.052,26.341"]
"NiMlr/High-Dim-ES-RL" ["l"="49.709,26.435"]
"resibots/limbo" ["l"="46.003,26.261"]
"ayong8/FairSight" ["l"="45.095,26.117"]
"uber-research/parallax" ["l"="44.962,26.377"]
"koaning/whatlies" ["l"="45.041,26.356"]
"asl/rssa" ["l"="44.747,26.438"]
"VSainteuf/mcssa" ["l"="44.795,26.447"]
"hyperopt/hyperopt-nnet" ["l"="45.933,26.417"]
"hyperopt/hyperopt-convnet" ["l"="45.957,26.441"]
"Waikato/weka-trunk" ["l"="46.071,25.956"]
"yongkaiwu/FairAI" ["l"="45.022,25.965"]
"brandeis-machine-learning/awesome-ml-fairness" ["l"="44.996,25.965"]
"blent-ai/pycopula" ["l"="44.764,26.49"]
"bashtage/arch" ["l"="-8.907,12.925"]
"IBM/MAX-Sports-Video-Classifier" ["l"="46.154,25.367"]
"IBM/MAX-News-Text-Generator" ["l"="46.14,25.398"]
"riken-aip/pyHSICLasso" ["l"="44.612,27.118"]
"amber0309/HSIC" ["l"="44.579,27.161"]
"tobias-freidling/hsic-lasso-psi" ["l"="44.599,27.136"]
"zeehio/ggpipe" ["l"="44.523,26.261"]
"DanielBok/muarch" ["l"="44.72,26.464"]
"sapphire921/midas_pro" ["l"="45.105,26.824"]
"Yoseph-Zuskin/midaspy" ["l"="45.126,26.776"]
"mikemull/midaspy" ["l"="45.109,26.808"]
"oracle/graphpipe-go" ["l"="45.573,25.731"]
"oracle/graphpipe-py" ["l"="45.553,25.742"]
"oracle/graphpipe-tf-py" ["l"="45.545,25.76"]
"WenjieZ/TSCV" ["l"="45.335,26.525"]
"sam31415/timeseriescv" ["l"="-9.141,13.078"]
"jonfink/GP" ["l"="46.061,26.215"]
"mblum/libgp" ["l"="46.058,26.236"]
"SheffieldML/GPc" ["l"="46.085,26.226"]
"nw2190/CppGPs" ["l"="46.106,26.215"]
"statice/awesome-synthetic-data" ["l"="44.674,26.607"]
"gretelai/awesome-synthetic-data" ["l"="44.721,26.587"]
"jamesrobertlloyd/gpss-research" ["l"="46.346,26.067"]
"jamesrobertlloyd/gp-structure-search" ["l"="46.304,26.068"]
"duvenaud/phd-thesis" ["l"="46.338,26.049"]
"shikanon/kubeflow-manifests" ["l"="8.117,-9.775"]
"kubeflow/kfctl" ["l"="45.407,25.58"]
"awslabs/kubeflow-manifests" ["l"="45.389,25.547"]
"deployKF/deployKF" ["l"="45.39,25.52"]
"argoflow/argoflow" ["l"="-2.088,14.582"]
"kubeflow/website" ["l"="45.43,25.526"]
"alteryx/predict-taxi-trip-duration" ["l"="45.292,26.621"]
"prolearner/hyper-representation" ["l"="46.279,26.461"]
"prolearner/hypertorch" ["l"="46.312,26.482"]
"callous-youth/BOML" ["l"="50.512,2.795"]
"lorraine2/implicit-hyper-opt" ["l"="46.253,26.471"]
"jsyoon0823/MRNN" ["l"="45.183,26.739"]
"ratschlab/GP-VAE" ["l"="45.189,26.725"]
"ivivan/SSIM_Seq2Seq" ["l"="45.237,26.748"]
"d6t/d6tstack" ["l"="45.526,25.631"]
"IBM/MAX-Text-Sentiment-Classifier" ["l"="46.075,25.431"]
"IBM/MAX-Question-Answering" ["l"="46.061,25.465"]
"ericandrewlewis/wp-media-javascript-guide" ["l"="46.093,25.683"]
"ocean90/media-modal-demo" ["l"="46.124,25.658"]
"xwp/wp-dev-lib" ["l"="11.865,-35.411"]
"journeyH/debtDefaultResearch" ["l"="45.821,27.074"]
"hczheng/Rong360" ["l"="57.885,22.698"]
"chenkkkk/User-loan-risk-prediction" ["l"="57.89,22.671"]
"wikke/ppdai_risk_evaluation" ["l"="-3.106,11.035"]
"gevaertlab/MultimodalPrognosis" ["l"="45.036,26.857"]
"huangzhii/SALMON" ["l"="45.06,26.812"]
"jsilter/parametric_tsne" ["l"="44.673,26.187"]
"kylemcdonald/Parametric-t-SNE" ["l"="44.722,26.2"]
"zaburo-ch/Parametric-t-SNE-in-Keras" ["l"="44.677,26.206"]
"luke0201/parametric-tsne-keras" ["l"="44.642,26.183"]
"mexchy1000/DeepSurv_Keras" ["l"="45.148,26.678"]
"uoguelph-mlrg/theano_alexnet" ["l"="44.883,27.597"]
"miyyer/dan" ["l"="45.817,26.264"]
"Qihoo360/blackwidow" ["l"="45.17,25.317"]
"KernelMaker/rocksutil" ["l"="0.776,14.333"]
"RocksLabs/kvrocks_exporter" ["l"="45.124,25.267"]
"xinychen/transdim" ["l"="52.443,17.459"]
"Axlgrep/pika-tools" ["l"="45.058,25.131"]
"KCacheTeam/pika-tools" ["l"="45.053,25.146"]
"AutoViML/deep_autoviml" ["l"="45.376,26.565"]
"smazzanti/mrmr" ["l"="45.356,26.418"]
"aimclub/FEDOT" ["l"="-44.192,26.285"]
"hackalog/easydata" ["l"="44.951,26.667"]
"alteryx/nlp_primitives" ["l"="45.213,26.475"]
"alteryx/autonormalize" ["l"="45.193,26.487"]
"alteryx/categorical_encoding" ["l"="45.2,26.473"]
"alteryx/featuretools-tsfresh-primitives" ["l"="45.192,26.504"]
"MLBazaar/Cardea" ["l"="45.095,26.465"]
"MaxHalford/starboost" ["l"="45.237,26.548"]
"yzhao062/SUOD" ["l"="52.39,14.807"]
"alshedivat/meta-blocks" ["l"="45.57,26.545"]
"wepe/efficient-decision-tree-notes" ["l"="57.715,22.651"]
"ZhiningLiu1998/self-paced-ensemble" ["l"="51.456,30.538"]
"ThomasBury/arfs" ["l"="45.355,26.442"]
"chasedehan/BoostARoota" ["l"="45.389,26.399"]
"limexp/xgbfir" ["l"="57.435,23.966"]
"fuqiuai/lihang_algorithms" ["l"="45.796,27.105"]
"fuqiuai/datamining_algorithms" ["l"="45.821,27.137"]
"geroge-gao/deeplearning" ["l"="45.794,27.139"]
"wzyonggege/statistical-learning-method" ["l"="50.748,28.024"]
"hughsalimbeni/bayesian_benchmarks" ["l"="46.35,26.174"]
"hughsalimbeni/DGPs_with_IWVI" ["l"="46.2,26.151"]
"thjashin/gp-infer-net" ["l"="46.416,26.174"]
"thjashin/spectral-stein-grad" ["l"="46.412,26.188"]
"YingzhenLi/SteinGrad" ["l"="46.439,26.202"]
"ssydasheng/FBNN" ["l"="46.448,26.179"]
"cambridge-mlg/cnn-gp" ["l"="46.482,26.182"]
"iterative/dvc.org" ["l"="44.982,25.794"]
"iterative/dvclive" ["l"="44.963,25.779"]
"iterative/terraform-provider-iterative" ["l"="45.007,25.77"]
"iterative/gto" ["l"="44.999,25.789"]
"iterative/blog" ["l"="44.944,25.788"]
"iterative/mlem.ai" ["l"="45.016,25.815"]
"iterative/scmrepo" ["l"="44.886,25.738"]
"iterative/vscode-dvc" ["l"="44.996,25.811"]
"GAMES-UChile/mogptk" ["l"="46.228,26.205"]
"pmorenoz/HetMOGP" ["l"="46.336,26.234"]
"NicoCaro/DataScienceLab" ["l"="39.811,34.425"]
"secondmind-labs/GPflux" ["l"="46.08,26.186"]
"Magica-Chen/gptp_multi_output" ["l"="46.207,26.169"]
"jfpower/anfis-pytorch" ["l"="45.797,26.612"]
"twmeggs/anfis" ["l"="45.794,26.63"]
"tiagoCuervo/TensorANFIS" ["l"="45.781,26.605"]
"gabrielegilardi/ANFIS" ["l"="45.825,26.645"]
"gregorLen/S-ANFIS-PyTorch" ["l"="45.81,26.646"]
"gregorLen/AnfisTensorflow2.0" ["l"="45.811,26.622"]
"c-bata/goptuna" ["l"="45.834,26.444"]
"d4l3k/go-bayesopt" ["l"="45.881,26.474"]
"CyberAgentAILab/minituna" ["l"="45.797,26.414"]
"himkt/allennlp-optuna" ["l"="45.813,26.432"]
"mathurinm/celer" ["l"="44.776,26.896"]
"yngvem/group-lasso" ["l"="44.734,26.949"]
"scikit-learn-contrib/skglm" ["l"="44.789,26.878"]
"benchopt/benchopt" ["l"="44.832,26.827"]
"benchopt/benchmark_lasso" ["l"="44.793,26.863"]
"alvaromc317/asgl" ["l"="44.758,26.948"]
"jasonge27/picasso" ["l"="44.742,26.917"]
"QB3/sparse-ho" ["l"="44.806,26.868"]
"mathurinm/andersoncd" ["l"="44.783,26.863"]
"kubeflow/community" ["l"="45.438,25.547"]
"kubeflow/testing" ["l"="45.444,25.476"]
"automl/HPOlib" ["l"="45.875,26.347"]
"automl/HPOlib1.5" ["l"="45.889,26.319"]
"w4k2/stream-learn" ["l"="45.779,25.954"]
"w4k2/problexity" ["l"="45.81,25.935"]
"vitords/HoeffdingTree" ["l"="45.759,26.351"]
"liqi0126/incremental_decision_tree" ["l"="45.722,26.348"]
"chaitanya-m/kdd2018" ["l"="45.737,26.348"]
"openscoring/openscoring-python" ["l"="45.919,26.616"]
"albietz/online_hmm" ["l"="45.237,27.587"]
"fmorenopino/HeterogeneousHMM" ["l"="46.424,26.263"]
"pmorenoz/HierCPD" ["l"="46.382,26.252"]
"equialgo/fairness-in-ml" ["l"="45.07,25.991"]
"COMBINE-lab/wasabi" ["l"="44.284,26.336"]
"Code-Pop/validating-vue3-forms" ["l"="44.201,26.021"]
"Code-Pop/pwa-with-vue-3" ["l"="44.171,26.04"]
"WillKoehrsen/probabilistic-programming" ["l"="45.963,26.863"]
"WillKoehrsen/deep_learning_cookbook" ["l"="45.926,26.826"]
"probabilistic-learning/HI-VAE" ["l"="45.223,26.829"]
"pamattei/miwae" ["l"="45.213,26.869"]
"EagerSun/DL-vs-Stat_Impute" ["l"="45.25,26.772"]
"davidstutz/tensorflow-cpp-op-example" ["l"="50.042,33.472"]
"tensorflow/networking" ["l"="45.689,25.554"]
"tengkz/tensorflow_notes" ["l"="58.045,23.6"]
"tensorflow/profiler-ui" ["l"="57.892,23.617"]
"DeepRec-AI/DeepRec" ["l"="58.15,23.519"]
"Qihoo360/tensornet" ["l"="58.042,23.535"]
"bytedance/effective_transformer" ["l"="53.242,27.037"]
"aminnayebi/HesBO" ["l"="45.944,26.24"]
"facebookresearch/alebo" ["l"="45.967,26.25"]
"iamDecode/sklearn-pmml-model" ["l"="45.966,26.612"]
"Networks-Learning/strategic-decisions" ["l"="44.884,26.191"]
"doodzhou/Fuzzy-Rouh-Set" ["l"="46.112,25.992"]
"neatlymitang/FRS_ML" ["l"="46.082,25.998"]
"jpmml/jpmml-r" ["l"="45.919,26.632"]
"jpmml/jpmml" ["l"="45.908,26.645"]
"nawendt/cartopy-tutorial" ["l"="44.585,26.843"]
"patrick201/information_value" ["l"="45.688,26.67"]
"Sundar0989/WOE-and-IV" ["l"="45.652,26.662"]
"tatsumiw/ChiMerge" ["l"="45.713,26.646"]
"autodeployai/pmml4s-spark" ["l"="45.961,26.636"]
"autodeployai/pypmml-spark" ["l"="45.94,26.62"]
"IBM/MAX-Fast-Neural-Style-Transfer" ["l"="46.161,25.401"]
"IBM/MAX-Spatial-Transformer-Network" ["l"="46.133,25.407"]
"IBM/MAX-ResNet-50" ["l"="46.141,25.411"]
"IBM/MAX-Review-Text-Generator" ["l"="46.157,25.387"]
"IBM/MAX-Adversarial-Cryptography" ["l"="46.157,25.415"]
"Waikato/waikato-repositories" ["l"="46.102,25.95"]
"bnjmn/weka" ["l"="46.126,25.936"]
"kompics/kompics" ["l"="45.261,25.445"]
"kompics/kompics-scala" ["l"="45.257,25.412"]
"logicalclocks/hops-util-py" ["l"="45.295,25.513"]
"MLBazaar/MLBlocks" ["l"="45.044,26.433"]
"ballet/ballet" ["l"="45.05,26.454"]
"WileyIntelligentSolutions/wiley-dash-boilerplate2" ["l"="45.458,26.603"]
"better/convoys" ["l"="45.122,26.729"]
"canyon289/bayesian-model-evaluation" ["l"="39.204,36.004"]
"ogozuacik/d3-discriminative-drift-detector-concept-drift" ["l"="45.869,25.988"]
"denismr/incremental-ks" ["l"="45.848,25.956"]
"Western-OC2-Lab/OASW-Concept-Drift-Detection-and-Adaptation" ["l"="45.875,25.974"]
"Team-TUD/CTAB-GAN-Plus" ["l"="44.859,26.558"]
"Team-TUD/CTAB-GAN" ["l"="44.847,26.551"]
"zhao-zilong/Tabula" ["l"="44.839,26.575"]
"cocoissong/TableGAN" ["l"="44.799,26.556"]
"Baukebrenninkmeijer/On-the-Generation-and-Evaluation-of-Synthetic-Tabular-Data-using-GANs" ["l"="44.808,26.521"]
"brain-research/nngp" ["l"="46.187,26.112"]
"SheffieldML/PyDeepGP" ["l"="46.133,26.133"]
"maka89/Deep-Kernel-GP" ["l"="46.194,26.091"]
"alshedivat/keras-gp" ["l"="46.154,26.107"]
"cambridge-mlg/convcnp" ["l"="23.126,14.709"]
"kekeblom/DeepCGP" ["l"="46.207,26.13"]
"ghliu/mean-field-fcdnn" ["l"="46.231,26.105"]
"enricivi/growing_hierarchical_som" ["l"="44.898,25.979"]
"Alex-Lekov/AutoML_Alex" ["l"="45.122,26.476"]
"ray-project/tune-sklearn" ["l"="45.301,26.394"]
"antoinecarme/pyaf" ["l"="45.373,26.488"]
"amitness/toolbox" ["l"="45.17,26.291"]
"scikit-learn-contrib/scikit-learn-extra" ["l"="45.277,26.502"]
"MFrank2016/GotoSSH" ["l"="45.084,25.185"]
"XimalayaCloud/xcache" ["l"="45.107,25.208"]
"lanagarmire/cox-nnet" ["l"="45.085,26.768"]
"MLBazaar/MLPrimitives" ["l"="45.037,26.418"]
"HDI-Project/ATM" ["l"="45.176,26.336"]
"MLBazaar/AutoBazaar" ["l"="45.07,26.408"]
"sintel-dev/Draco" ["l"="45.026,26.428"]
"CODAIT/aardpfark" ["l"="45.997,26.717"]
"modelop/hadrian" ["l"="45.981,26.696"]
"yuenshingyan/MissForest" ["l"="45.268,26.673"]
"shakedzy/dython" ["l"="45.271,26.346"]
"HDI-Project/ATMSeer" ["l"="45.112,26.365"]
"Fangzhenxuan/AI_Projects" ["l"="45.555,26.71"]
"QuickCorp/pyGT511C3" ["l"="46.323,25.636"]
"z-a-f/fingerpi" ["l"="46.353,25.626"]
"the-AjK/GT-511C3" ["l"="46.31,25.648"]
"lancifollia/tinygbt" ["l"="45.305,26.731"]
"ogrisel/pygbm" ["l"="45.315,26.625"]
"kno10/python-kmedoids" ["l"="45.23,26.563"]
"nrdg/groupyr" ["l"="44.713,26.965"]
"fabianp/group_lasso" ["l"="44.704,26.987"]
"pourer/pika_exporter" ["l"="45.073,25.16"]
"kernelai/codis" ["l"="45.108,25.183"]
"kieferk/pymssa" ["l"="44.876,26.456"]
"aj-cloete/pssa" ["l"="44.823,26.442"]
"AbdullahO/mSSA" ["l"="44.986,26.482"]
"lpfgarcia/ECoL" ["l"="45.718,26.48"]
"rivolli/mfe" ["l"="45.732,26.471"]
"tiagobotari/melime" ["l"="45.73,26.485"]
"victorhb/ImbCoL" ["l"="45.716,26.469"]
"gabrieljaguiar/nemenyi" ["l"="45.711,26.49"]
"gabrieljaguiar/image-meta-feature-extractor" ["l"="45.702,26.478"]
"ziyuw/rembo" ["l"="45.984,26.272"]
"rees-c/PyREMBO" ["l"="46.022,26.281"]
"zi-w/Structural-Kernel-Learning-for-HDBBO" ["l"="46.085,26.301"]
"kirschnj/LineBO" ["l"="45.96,26.264"]
"statcompute/mob" ["l"="45.674,26.634"]
"pytroll/tutorial-satpy-half-day" ["l"="44.518,26.9"]
"Pushkar-v/Generating-Synthetic-Data-using-GANs" ["l"="44.816,26.506"]
"mp2893/medgan" ["l"="-33.285,16.236"]
"aresio/simpful" ["l"="45.749,26.607"]
"Python-Fuzzylogic/fuzzylogic" ["l"="45.736,26.589"]
"CaroFuchs/pyFUME" ["l"="45.766,26.63"]
"aresio/fst-pso" ["l"="45.766,26.645"]
"data-dev/DataTracer" ["l"="44.878,26.475"]
"keras-team/keras-docs-ko" ["l"="45.944,25.525"]
"fuzzythecat/awesome-spacer" ["l"="-3.08,-21.053"]
"KerasKorea/KerasKorea.github.io" ["l"="45.961,25.5"]
"KerasKorea/KerasObjectDetector" ["l"="45.973,25.483"]
"projectaligned/chchanges" ["l"="45.523,26.8"]
"seyedsaeidmasoumzadeh/Fuzzy-Q-Learning" ["l"="45.872,26.824"]
"ameybarapatre/ANFIS" ["l"="45.844,26.736"]
"tms1337/inverted-pendulum-control" ["l"="45.874,26.849"]
"doandongnguyen/FQL-Fuzzy-Q-Learning" ["l"="45.882,26.859"]
"pooyanjamshidi/Fuzzy-Q-Learning" ["l"="45.893,26.85"]
"BayesWatch/deep-kernel-transfer" ["l"="46.236,26.075"]
"automl/pybnn" ["l"="45.96,26.289"]
"cambridge-mlg/DUN" ["l"="46.022,26.317"]
"RuiShu/nn-bayesian-optimization" ["l"="46.045,26.303"]
"mscharth/forecasting" ["l"="45.41,26.644"]
"ysraell/forecasting" ["l"="45.404,26.624"]
"spindro/AP-GCN" ["l"="45.163,26.782"]
"nicofirst1/ledypi" ["l"="45.178,26.786"]
"chrispaulca/waterfall" ["l"="45.027,26.306"]
"jmcarpenter2/parfit" ["l"="44.962,26.333"]
"baptistar/BOCS" ["l"="46.241,26.295"]
"QUVA-Lab/COMBO" ["l"="46.187,26.283"]
"MLBazaar/piex" ["l"="45.023,26.441"]
"vishnukanduri/Credit-Risk-Modeling-in-Python" ["l"="45.709,26.96"]
"enesozi/Credit-Risk-Analysis" ["l"="45.743,26.972"]
"abhashpanwar/credit-risk-modeling" ["l"="45.728,26.96"]
"aniruddhachoudhury/Credit-Risk-Model" ["l"="45.749,26.954"]
"cda-group/arcon" ["l"="45.274,25.349"]
"kompics/kompact" ["l"="45.29,25.311"]
"cda-group/arc" ["l"="45.26,25.319"]
"uwheel/uwheel" ["l"="45.274,25.288"]
"Yoast/javascript" ["l"="46.058,25.728"]
"pmorenoz/ContinualGP" ["l"="46.367,26.243"]
"juanjogg1987/Fully_Natural_Gradient_HetMOGP" ["l"="46.36,26.229"]
"klaudia-nazarko/iv-and-woe-python" ["l"="45.668,26.716"]
"Sundar0989/XuniVerse" ["l"="45.582,26.62"]
"zi-w/Ensemble-Bayesian-Optimization" ["l"="46.004,26.242"]
"IBM/MAX-Speech-to-Text-Converter" ["l"="46.188,25.36"]
"gditzler/ConceptDriftResources" ["l"="45.858,25.974"]
"ogozuacik/one-class-drift-detection" ["l"="45.891,25.986"]
"songqiaohu/THU-Concept-Drift-Datasets-v1.0" ["l"="45.888,25.998"]
"Western-OC2-Lab/MSANA-Online-Data-Stream-Analytics-And-Concept-Drift-Adaptation" ["l"="45.899,25.974"]
"SheffieldML/deepGP" ["l"="46.234,26.14"]
"SheffieldML/GPmat" ["l"="46.314,26.137"]
"stochasticresearch/copula-py" ["l"="44.713,26.498"]
"corels/pycorels" ["l"="45.054,26.305"]
"corels/corels" ["l"="44.99,26.304"]
"WillKoehrsen/data-science-for-good" ["l"="45.849,26.76"]
"pmorenoz/RecyclableGP" ["l"="46.395,26.243"]
"flyteorg/flytestdlib" ["l"="45.012,25.364"]
"flyteorg/flyteadmin" ["l"="45.027,25.366"]
"flyteorg/flyteplugins" ["l"="45.034,25.36"]
"flyteorg/flyteidl" ["l"="45.04,25.369"]
"AntoineSimoulin/pytree" ["l"="45.092,26.446"]
"xiyanghu/OSDT" ["l"="44.667,26.353"]
"Jimmy-Lin/GeneralizedOptimalSparseDecisionTrees" ["l"="44.703,26.347"]
"collinprather/drsa" ["l"="45.122,26.659"]
"paidamoyo/adversarial_time_to_event" ["l"="45.111,26.673"]
"data-modeler/rnn-surv" ["l"="45.132,26.651"]
"rcamino/multi-categorical-gans" ["l"="45.243,26.795"]
"thangbui/streaming_sparse_gp" ["l"="46.079,26.126"]
"thangbui/sparseGP_powerEP" ["l"="46.107,26.11"]
"IBM/MAX-Scene-Classifier" ["l"="46.139,25.384"]
"cuicathy/MMD_SurvivalPrediction" ["l"="45.054,26.759"]
"WillKoehrsen/deep-learning-v2-pytorch" ["l"="45.912,26.81"]
"yanx27/Scorecard-Modeling" ["l"="45.713,26.768"]
"as519002268/ScorecardBox" ["l"="45.723,26.793"]
"markvdw/convgp" ["l"="46.19,26.13"]
"openscoring/papis.io" ["l"="45.991,26.594"]
"WillKoehrsen/jupyter-notebook-extensions" ["l"="45.895,26.82"]
"arslanmughal99/Rocket-keyword-analyzer" ["l"="46.17,25.648"]
"arslanmughal99/Registration-System" ["l"="46.174,25.66"]
"arslanmughal5566/Axiom-Dashboard" ["l"="46.15,25.671"]
"statcompute/py_mob" ["l"="45.703,26.663"]
"pbansal5/DeepMVI" ["l"="45.214,26.792"]
"WillKoehrsen/fastai-numerical-linear-algebra" ["l"="45.891,26.798"]
"WillKoehrsen/willkoehrsen.github.io" ["l"="45.882,26.81"]
"alipsgh/machine-learning-materials" ["l"="45.898,25.961"]
"herilalaina/mosaic_ml" ["l"="46.755,26.755"]
"machinelearningnuremberg/DyHPO" ["l"="46.731,26.767"]
"arslanmughal99/phisher" ["l"="46.112,25.701"]
"robber5/wifi-killer" ["l"="46.1,25.713"]
"justinengelmann/GANbasedOversampling" ["l"="44.788,26.54"]
"lucidrains/tab-transformer-pytorch" ["l"="46.038,24.715"]
"firmai/deltapy" ["l"="45.129,26.527"]
"nteract/papermill" ["l"="43.499,23.891"]
"dateutil/dateutil" ["l"="44.87,20.874"]
"ivelum/djangoql" ["l"="47.403,18.595"]
"guofei9987/text_blind_watermark" ["l"="-5.897,17.413"]
"asottile/pyupgrade" ["l"="45.106,21.066"]
"econchick/interrogate" ["l"="45.29,21.201"]
"PyCQA/isort" ["l"="44.979,20.915"]
"pycountry/pycountry" ["l"="-11.702,17.801"]
"adamchainz/django-upgrade" ["l"="47.456,18.43"]
"iterative/mlem" ["l"="45.074,25.859"]
"kelvins/awesome-mlops" ["l"="47.985,26.358"]
"BeastByteAI/scikit-llm" ["l"="40.729,0.707"]
"yzhao062/pyod" ["l"="52.318,14.869"]
"pytorch/TensorRT" ["l"="53.262,32.686"]
"ahkarami/Deep-Learning-in-Production" ["l"="48.121,26.175"]
"NVIDIA-AI-IOT/torch2trt" ["l"="53.275,32.58"]
"ShannonAI/service-streamer" ["l"="53.346,27.159"]
"huggingface/accelerate" ["l"="38.719,-0.759"]
"NVIDIA/TensorRT" ["l"="50.264,29.769"]
"haofanwang/Score-CAM" ["l"="23.985,14.416"]
"cfchen-duke/ProtoPNet" ["l"="24.04,14.105"]
"zqs1022/interpretableCNN" ["l"="24.064,14.167"]
"facebookresearch/TorchRay" ["l"="24.047,14.331"]
"zhoubolei/CAM" ["l"="24.043,14.527"]
"inouye-lab/ShapleyExplanationNetworks" ["l"="44.993,26.137"]
"MingchaoZhu/InterpretableMLBook" ["l"="50.836,28.179"]
"MisaOgura/flashtorch" ["l"="53.523,30.992"]
"ankurtaly/Integrated-Gradients" ["l"="24.09,14.292"]
"ycjuan/libffm" ["l"="58.011,23.415"]
"srendle/libfm" ["l"="57.973,23.42"]
"clips/pattern" ["l"="52.89,25.99"]
"numenta/nupic-legacy" ["l"="44.862,27.874"]
"spotify/annoy" ["l"="53.031,25.889"]
"apache/predictionio" ["l"="47.761,28.905"]
"apache/mxnet" ["l"="47.989,29.03"]
"datamininggroup/pfa" ["l"="46.015,26.725"]
"animator/titus2" ["l"="46.017,26.706"]
"ploomber/ploomber" ["l"="45.257,25.982"]
"orchest/orchest" ["l"="45.2,26.015"]
"ploomber/jupysql" ["l"="-0.332,15.829"]
"zhouhaoyi/Informer2020" ["l"="44.975,24.366"]
"thuml/Autoformer" ["l"="44.918,24.376"]
"philipperemy/n-beats" ["l"="44.996,24.286"]
"yuqinie98/PatchTST" ["l"="44.941,24.448"]
"qingsongedu/time-series-transformers-review" ["l"="44.945,24.366"]
"hfawaz/dl-4-tsc" ["l"="43.668,26.807"]
"cure-lab/LTSF-Linear" ["l"="44.941,24.393"]
"vinid/cade" ["l"="44.827,25.509"]
"vinid/quica" ["l"="44.813,25.479"]
"hj-n/zadu" ["l"="44.851,26.32"]
"hj-n/labeled-datasets" ["l"="44.893,26.329"]
"hyungkwonko/progressive-umap" ["l"="44.88,26.333"]
"WillKoehrsen/discovering-disease-outbreaks-base" ["l"="45.939,26.808"]
"keras-team/keras-core" ["l"="21.757,13.986"]
"PacktPublishing/Advanced-Deep-Learning-with-Keras" ["l"="47.359,28.48"]
"eriklindernoren/Keras-GAN" ["l"="45.733,29.058"]
"google-research/vision_transformer" ["l"="50.739,29.626"]
"google-deepmind/deepmind-research" ["l"="50.791,29.428"]
"tensorflow/recommenders" ["l"="58.205,23.497"]
"Azure/azureml-examples" ["l"="-45.071,7.731"]
"microsoft/BackwardCompatibilityML" ["l"="45.009,26.102"]
"Azure/mlops-v2" ["l"="-45.103,7.782"]
"microsoft/MLOpsPython" ["l"="-45.084,7.751"]
"microsoft/responsible-ai-toolbox-mitigations" ["l"="45.085,26.007"]
"Kanaries/pygwalker" ["l"="42.981,20.755"]
"deepset-ai/haystack" ["l"="40.615,0.499"]
"kornia/kornia" ["l"="50.815,29.658"]
"divamgupta/stable-diffusion-tensorflow" ["l"="31.996,32.059"]
"tensorflow/similarity" ["l"="45.648,25.766"]
"keras-team/keras-rs" ["l"="45.745,25.617"]
"james77777778/keras-image-models" ["l"="45.766,25.625"]
"keras-team/tf-keras" ["l"="45.786,25.642"]
"leondgarse/keras_cv_attention_models" ["l"="45.79,25.549"]
"fchollet/stable-diffusion-tensorflow" ["l"="45.72,25.645"]
"PacktPublishing/Vue.js-3.0-Cookbook" ["l"="44.097,25.946"]
"PacktPublishing/-Vue.js-3-By-Example" ["l"="44.063,25.933"]
"tensorflow/docs-l10n" ["l"="45.879,25.604"]
"firmai/atspy" ["l"="45.335,26.474"]
"skforecast/skforecast" ["l"="45.426,26.424"]
"DataCanvasIO/HyperTS" ["l"="45.418,26.473"]
"mattjj/autodidact" ["l"="21.694,14.021"]
"google/tangent" ["l"="45.152,20.435"]
"chainer/chainer" ["l"="47.887,29.112"]
"fraunhoferportugal/tsfel" ["l"="43.688,26.874"]
"tr8dr/tseries-patterns" ["l"="-9.216,13.095"]
"tblume1992/ThymeBoost" ["l"="45.356,26.521"]
"microprediction/timemachines" ["l"="45.36,26.541"]
"nuclio/nuclio" ["l"="7.883,-8.541"]
"mlrun/demos" ["l"="45.197,25.681"]
"datarevenue-berlin/OpenMLOps" ["l"="45.09,25.756"]
"bayespy/bayespy" ["l"="39.319,35.97"]
"tensorflow/skflow" ["l"="47.865,28.864"]
"socialfoundations/whynot" ["l"="45.039,25.946"]
"socialfoundations/folktables" ["l"="45.067,26.009"]
"firmai/datagene" ["l"="45.206,26.541"]
"heidelbergcement/hcrystalball" ["l"="45.257,26.53"]
"somepago/saint" ["l"="46.051,24.703"]
"manujosephv/pytorch_tabular" ["l"="46.037,24.738"]
"arundo/tsaug" ["l"="43.578,26.712"]
"tcapelle/timeseries_fastai" ["l"="49.459,28.609"]
"Code-Pop/Real-World-Vue-3-New-Syntax" ["l"="44.158,25.939"]
"iamshaunjp/Vue-3-Firebase" ["l"="43.284,17.012"]
"mitsuba-renderer/mitsuba3" ["l"="-24.61,-27.807"]
"flyteorg/flytekit" ["l"="45.044,25.406"]
"amundsen-io/amundsen" ["l"="-2.461,14.757"]
"gretelai/gretel-blueprints" ["l"="44.742,26.578"]
"gretelai/gretel-python-client" ["l"="44.751,26.596"]
"fjxmlzn/DoppelGANger" ["l"="-9.82,12.819"]
"opendp/smartnoise-sdk" ["l"="50.775,1.056"]
"gretelai/gdpr-helpers" ["l"="44.74,26.589"]
"tabularis-ai/be_great" ["l"="44.856,26.575"]
"gretelai/gretel-tools" ["l"="44.758,26.565"]
"Azure/Azureml-ResponsibleAI-Preview" ["l"="44.972,26.105"]
"interpretml/slicer" ["l"="44.952,26.102"]
"ypeleg/HungaBunga" ["l"="45.261,26.039"]
"DagsHub/fds" ["l"="45.162,25.609"]
"wilkelab/ggtext" ["l"="40.666,35.469"]
"google-deepmind/bsuite" ["l"="57.591,18.253"]
"DenisVorotyntsev/CategoricalEncodingBenchmark" ["l"="50.906,30.8"]
"paulbricman/python-sirajnet" ["l"="45.128,26.002"]
"amitness/papers-with-video" ["l"="44.999,26.334"]
"jmugan/modern_practical_nlp" ["l"="45.032,26.328"]
"hundredblocks/ml-powered-applications" ["l"="47.964,26.551"]
"dair-ai/nlp_paper_summaries" ["l"="52.755,25.743"]
"rasbt/stat453-deep-learning-ss20" ["l"="23.568,14.971"]
"SE-ML/awesome-seml" ["l"="48.059,26.185"]
"dair-ai/d2l-study-group" ["l"="52.749,25.847"]
"benedekrozemberczki/awesome-gradient-boosting-papers" ["l"="23.666,14.884"]
"yassouali/ML-paper-notes" ["l"="47.799,27.114"]
"luspr/awesome-ml-courses" ["l"="48.011,26.236"]
"onelivesleft/PrettyErrors" ["l"="44.93,20.609"]
"jwkvam/celluloid" ["l"="23.502,14.937"]
"parrt/tensor-sensor" ["l"="21.566,13.989"]
"vahidk/EffectivePyTorch" ["l"="23.619,15.003"]
"jettify/pytorch-optimizer" ["l"="50.972,29.95"]
"plotly/plotly.py" ["l"="43.602,23.588"]
"quantopian/pyfolio" ["l"="-8.825,12.875"]
"plotly/dash" ["l"="43.537,23.67"]
"bqplot/bqplot" ["l"="43.605,23.918"]
"pydata/pandas-datareader" ["l"="-8.849,12.904"]
"plotly/plotly_express" ["l"="42.921,25.266"]
"mwaskom/seaborn" ["l"="43.55,23.618"]
"microprediction/microprediction" ["l"="45.352,26.659"]
"microprediction/precise" ["l"="45.343,26.681"]
"OVVO-Financial/NNS" ["l"="45.342,26.708"]
"microprediction/humpday" ["l"="45.326,26.662"]
"microprediction/winning" ["l"="45.359,26.72"]
"danijar/handout" ["l"="23.492,14.974"]
"firmai/pandasvault" ["l"="48.349,25.937"]
"jupyterlab/debugger" ["l"="43.394,24.115"]
"LiyuanLucasLiu/RAdam" ["l"="51.031,30.058"]
"eli5-org/eli5" ["l"="45.012,26.24"]
"mila-iqia/blocks" ["l"="44.867,27.695"]
"mljar/mercury" ["l"="43.626,24.05"]
"ml-tooling/opyrator" ["l"="45.064,26.072"]
"elyra-ai/examples" ["l"="45.467,25.605"]
"jupyterlab/extension-examples" ["l"="43.354,24.11"]
"jupyterlab/jupyterlab-git" ["l"="43.439,24.033"]
"jupyter-lsp/jupyterlab-lsp" ["l"="43.456,24.048"]
"mauhai/awesome-jupyterlab" ["l"="43.466,24.013"]
"jupyter/nbdime" ["l"="43.494,23.95"]
"jupyter-server/jupyter_server" ["l"="43.331,24.073"]
"jupyterlab-contrib/jupyterlab-variableInspector" ["l"="43.431,24.066"]
"tradertanmay/Credit-Risk-Modeling" ["l"="45.689,26.949"]
"yineme/Credit_Risk_modelling" ["l"="45.688,26.934"]
"mourarthur/awesome-credit-modeling" ["l"="45.593,26.789"]
"airbnb/knowledge-repo" ["l"="45.4,25.958"]
"chrislusf/gleam" ["l"="3.889,-8.554"]
"shijianjian/EfficientNet-PyTorch-3D" ["l"="45.872,25.37"]
"okankop/Efficient-3DCNNs" ["l"="47.868,33.858"]
"ZFTurbo/classification_models_3D" ["l"="45.881,25.401"]
"ZFTurbo/efficientnet_3D" ["l"="45.893,25.375"]
"jwangjie/Gaussian-Process-Regression-Tutorial" ["l"="46.007,26.142"]
"gdroguski/GaussianProcesses" ["l"="46.068,26.105"]
"helgeanl/GP-MPC" ["l"="61.394,15.038"]
"Ulti-Dreisteine/gaussian-process-regression" ["l"="46.058,26.136"]
"jwangjie/gpytorch" ["l"="46.038,26.13"]
"dfm/gp" ["l"="39.088,36.051"]
"Eric-Bradford/SDD-GP-MPC" ["l"="61.39,15.095"]
"lucasrm25/Gaussian-Process-based-Model-Predictive-Control" ["l"="61.415,15.056"]
"uzh-rpg/data_driven_mpc" ["l"="61.376,15.001"]
"JohnGoertz/Gumbi" ["l"="45.261,26.592"]
"online-ml/beaver" ["l"="45.83,25.949"]
"online-ml/light-river" ["l"="45.737,25.963"]
"alison-carrera/onn" ["l"="60.148,23.994"]
"chickenbestlover/Online-Recurrent-Extreme-Learning-Machine" ["l"="44.669,27.818"]
"RaptorMai/online-continual-learning" ["l"="34.085,31.989"]
"leferrad/pyoselm" ["l"="44.648,27.834"]
"JackMcKew/awesome-python-bytes" ["l"="45.361,20.997"]
"idanmoradarthas/DataScienceUtils" ["l"="45.085,26.3"]
"cokelaer/fitter" ["l"="45.338,26.86"]
"erdogant/distfit" ["l"="45.341,26.803"]
"erdogant/clusteval" ["l"="45.322,26.917"]
"tensorflow/mlir-hlo" ["l"="37.124,1.023"]
"microsoft/nnfusion" ["l"="37.073,0.947"]
"alibaba/BladeDISC" ["l"="37.066,0.962"]
"iree-org/iree" ["l"="37.132,0.971"]
"onnx/onnx-mlir" ["l"="37.108,0.982"]
"llvm/torch-mlir" ["l"="37.11,1.005"]
"jiazhihao/TASO" ["l"="37.045,0.992"]
"NervanaSystems/ngraph" ["l"="37.206,0.889"]
"dmlc/dlpack" ["l"="37.003,0.999"]
"pytorch/gloo" ["l"="57.935,23.566"]
"facebookresearch/morbo" ["l"="50.688,26.338"]
"facebookresearch/bo_pr" ["l"="45.984,26.174"]
"martinjankowiak/saasbo" ["l"="46.049,26.253"]
"facebookresearch/LaMCTS" ["l"="52.789,34.093"]
"daxiongshu/rapids-ai-BBO-2nd-place-solution" ["l"="46.092,26.276"]
"jbr-ai-labs/bbo-challenge-jetbrains-research" ["l"="46.024,26.235"]
"interpretml/interpret-text" ["l"="45.039,26.135"]
"interpretml/gam-changer" ["l"="45.036,26.254"]
"microsoft/solution-accelerator-many-models" ["l"="-45.08,7.772"]
"microsoft/ml-wrappers" ["l"="45.06,26.138"]
"Azure/azureml-previews" ["l"="-45.122,7.782"]
"linkedin/LiFT" ["l"="45.176,25.969"]
"dair-ai/ML-Notebooks" ["l"="47.884,26.381"]
"the-turing-way/the-turing-way" ["l"="40.809,35.376"]
"nilearn/nilearn" ["l"="61.818,35.294"]
"amueller/COMS4995-s20" ["l"="48.712,28.164"]
"glouppe/info8010-deep-learning" ["l"="23.636,14.937"]
"zgana/fpp3-python-readalong" ["l"="45.41,26.559"]
"Nixtla/fpp3-python" ["l"="45.392,26.639"]
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python" ["l"="45.436,26.602"]
"Nixtla/hierarchicalforecast" ["l"="45.396,26.465"]
"valeman/Transformers_And_LLM_Are_What_You_Dont_Need" ["l"="43.742,26.173"]
"joneswack/conformal-predictions-from-scratch" ["l"="43.751,26.203"]
"ilarinieminen/SOM-Toolbox" ["l"="44.834,25.982"]
"lmjohns3/kohonen" ["l"="44.853,25.998"]
"spiglerg/Kohonen_SOM_Tensorflow" ["l"="44.868,25.984"]
"oreillymedia/t-SNE-tutorial" ["l"="44.904,26.17"]
"karpathy/tsnejs" ["l"="23.469,14.372"]
"bioinf-jku/SNNs" ["l"="46.04,29.197"]
"Xtra-Computing/thundergbm" ["l"="57.612,23.972"]
"src-d/kmcuda" ["l"="65.823,11.739"]
"cjlin1/libsvm" ["l"="47.975,29.101"]
"salesforce/pytorch-qrnn" ["l"="53.158,25.566"]
"cjlin1/liblinear" ["l"="57.916,23.445"]
"ivan-bilan/The-NLP-Pandect" ["l"="52.746,25.694"]
"eugeneyan/ml-design-docs" ["l"="45.565,26.632"]
"tensorflow/build" ["l"="45.627,25.593"]
"DynamicsAndNeuralSystems/catch22" ["l"="43.69,26.921"]
"DynamicsAndNeuralSystems/pycatch22" ["l"="43.664,26.934"]
"cerlymarco/tspiral" ["l"="45.353,26.483"]
"Nixtla/datasetsforecast" ["l"="45.386,26.53"]
"functime-org/functime" ["l"="43.647,26.288"]
"Tim55667757/FuzzyClassificator" ["l"="45.858,26.683"]
"devopshq/FuzzyClassificator" ["l"="45.895,26.707"]
"fabsig/KTBoost" ["l"="45.206,26.432"]
"dswah/pyGAM" ["l"="45.28,26.395"]
"DataX-JieHao/Cox-PASNet" ["l"="45.105,26.653"]
"tomcat123a/survival_loss_criteria" ["l"="45.117,26.643"]
"ShilinHe/interpretableNLP" ["l"="44.934,26.126"]
"Eric-Wallace/interpretability-tutorial-emnlp2020" ["l"="23.422,15.267"]
"esafak/mca" ["l"="45.155,26.454"]
"TomAugspurger/skmca" ["l"="45.109,26.493"]
"elephaint/pgbm" ["l"="45.294,26.482"]
"sktime/skpro" ["l"="43.678,26.229"]
"BCG-X-Official/facet" ["l"="45.156,26.36"]
"BCG-X-Official/sklearndf" ["l"="45.087,26.393"]
"BCG-X-Official/pytools" ["l"="45.104,26.389"]
"BCG-X-Official/agentkit" ["l"="41.004,0.296"]
"BCG-X-Official/artkit" ["l"="45.056,26.398"]
"understandable-machine-intelligence-lab/Quantus" ["l"="24.165,14.315"]
"altamiracorp/awesome-xai" ["l"="45.015,26.151"]
"TutteInstitute/datamapplot" ["l"="43.33,24.608"]
"hyhuang00/ParamRepulsor" ["l"="44.917,26.292"]
"williamsyy/LocalMAP" ["l"="44.935,26.314"]
"hhcho/densvis" ["l"="23.581,14.9"]
"interpretml/fastSparse" ["l"="44.88,26.319"]
"yandex-research/tab-ddpm" ["l"="44.825,26.564"]
"rsteca/sklearn-deap" ["l"="45.526,26.301"]
"ZFTurbo/segmentation_models_3D" ["l"="45.912,25.376"]
"ZFTurbo/volumentations" ["l"="45.913,25.353"]
"princeton-vl/DeepV2D" ["l"="64.847,4.228"]
"Lightning-Universe/lightning-bolts" ["l"="50.957,29.568"]
"karpathy/deep-vector-quantization" ["l"="23.256,14.34"]
"Lightning-Universe/lightning-flash" ["l"="51.035,29.615"]
"JonasGeiping/cramming" ["l"="38.763,-0.346"]
"patrick-kidger/torchtyping" ["l"="21.645,14.092"]
"huggingface/knockknock" ["l"="52.873,25.633"]
"marcopeix/time-series-analysis" ["l"="45.499,26.616"]
"marcopeix/AppliedTimeSeriesForecastingInPython" ["l"="45.505,26.66"]
"DAMO-DI-ML/NeurIPS2023-One-Fits-All" ["l"="44.944,24.51"]
"thuml/iTransformer" ["l"="44.911,24.454"]
"marcopeix/TimeSeriesForecastingInPython" ["l"="45.479,26.653"]
"Code-Pop/vue-3-typescript" ["l"="44.194,26.047"]
"SeldonIO/tempo" ["l"="45.146,25.71"]
"kserve/modelmesh-serving" ["l"="45.226,25.54"]
"adriangonz/mlflow-talk" ["l"="45.172,25.724"]
"jeremyjordan/ml-monitoring" ["l"="45.063,25.656"]
"zenml-io/mlstacks" ["l"="44.959,25.723"]
"triton-inference-server/pytriton" ["l"="39.176,-0.766"]
"AbdullahO/tspdb" ["l"="44.945,26.497"]
"NVIDIA-Merlin/NVTabular" ["l"="58.228,23.615"]
"NVIDIA-Merlin/Merlin" ["l"="58.228,23.591"]
"tensorflow/neural-structured-learning" ["l"="53.67,15.858"]
"tensorflow/gnn" ["l"="52.814,16.097"]
"linkedin/FastTreeSHAP" ["l"="45.308,26.233"]
"koaning/skedulord" ["l"="44.978,26.399"]
"ljvmiranda921/vs-split" ["l"="44.939,26.409"]
"flyteorg/flytekit-java" ["l"="45.056,25.379"]
"tensorflow/tflite-support" ["l"="45.651,25.566"]
"google-ai-edge/LiteRT" ["l"="45.658,25.494"]
"margaretmz/awesome-tensorflow-lite" ["l"="60.744,-22.474"]
"google-ai-edge/litert-samples" ["l"="45.668,25.512"]
"yaglm/yaglm" ["l"="44.751,26.98"]
"flyteorg/flyteconsole" ["l"="45.043,25.378"]
"flyteorg/flytecopilot" ["l"="45.037,25.349"]
"automl/LCBench" ["l"="45.837,26.342"]
"martinsbruveris/tensorflow-image-models" ["l"="45.803,25.521"]
"google/ml_collections" ["l"="21.729,14.028"]
"rishigami/Swin-Transformer-TF" ["l"="45.824,25.53"]
"sayakpaul/dreambooth-keras" ["l"="45.798,25.603"]
"faustomorales/vit-keras" ["l"="45.844,25.504"]
"DavidLandup0/deepvision" ["l"="45.786,25.619"]
"caojiguo/FDAcourse2019" ["l"="45.265,26.851"]
"caojiguo/FDAworkshop" ["l"="45.26,26.883"]
"data-describe/data-describe" ["l"="45.17,26.433"]
"featurestoreorg/featurestore-benchmarks" ["l"="45.298,25.493"]
"logicalclocks/hopsworks-api" ["l"="45.307,25.474"]
"logicalclocks/hops-docs" ["l"="45.311,25.5"]
"srom/cma-es" ["l"="45.947,26.402"]
"optuna/kurobako" ["l"="45.842,26.403"]
"Evolutionary-Intelligence/pypop" ["l"="46.015,26.355"]
"RobertTLange/evosax" ["l"="59.268,17.403"]
"EvoConJP/CMA-ES_with_Margin" ["l"="45.959,26.417"]
"optuna/optuna-dashboard" ["l"="45.739,26.371"]
"optuna/optunahub-registry" ["l"="45.807,26.391"]
"optuna/optunahub" ["l"="45.779,26.385"]
"Evolutionary-Intelligence/EvolutionaryComputation-A-Modern-Perspective-ECAMP" ["l"="46.012,26.371"]
"eugeneyan/papermill-mlflow" ["l"="45.623,26.719"]
"eugeneyan/python-collab-template" ["l"="45.618,26.739"]
"gpstuff-dev/gpstuff" ["l"="46.276,26.155"]
"SheffieldML/multigp" ["l"="46.314,26.156"]
"alshedivat/gpml" ["l"="46.306,26.174"]
"kunzite-app/008" ["l"="45.02,25.797"]
"iterative/awesome-iterative-projects" ["l"="44.983,25.729"]
"zincware/ZnTrack" ["l"="45.078,25.681"]
"dacbd/create-issue-action" ["l"="44.983,25.775"]
"gennaro-tedesco/nvim-dvc" ["l"="44.976,25.764"]
"mlrepa/mlrepa-library" ["l"="44.983,25.747"]
"autonlab/DeepSurvivalMachines" ["l"="45.107,26.608"]
"shi-ang/SurvivalEVAL" ["l"="45.097,26.664"]
"ivylee/model-cards-and-datasheets" ["l"="45.328,25.667"]
"sferes2/sferes2" ["l"="59.136,17.188"]
"tensorflow/model-remediation" ["l"="45.394,25.797"]
"tensorflow/tfx-bsl" ["l"="45.474,25.713"]
"uclanlp/awesome-fairness-papers" ["l"="40.243,34.265"]
"princetonvisualai/DomainBiasMitigation" ["l"="46.044,6.636"]
"datamllab/xdeep" ["l"="52.44,14.714"]
"datamllab/AutoRec" ["l"="52.451,14.721"]
"wbawakate/fairtorch" ["l"="44.975,25.975"]
"datamllab/pyodds" ["l"="52.399,14.78"]
"flyteorg/flytesnacks" ["l"="45.029,25.376"]
"davidmirror-ops/flyte-the-hard-way" ["l"="45.013,25.378"]
"flyteorg/flytepropeller" ["l"="45.047,25.355"]
"flyteorg/flytectl" ["l"="45.056,25.366"]
"unionai-oss/deploy-flyte" ["l"="45.02,25.392"]
"flyteorg/datacatalog" ["l"="45.024,25.348"]
"unionai-oss/unionml" ["l"="44.997,25.384"]
"flyteorg/flytelab" ["l"="45.037,25.389"]
"ing-bank/skorecard" ["l"="45.477,26.607"]
"ing-bank/probatus" ["l"="45.396,26.518"]
"arthur801031/3d-multi-resolution-rcnn" ["l"="45.92,25.321"]
"ashawkey/volumentations" ["l"="45.943,25.316"]
"koaning/bulk" ["l"="45.073,26.36"]
"TutteInstitute/thisnotthat" ["l"="45.024,26.369"]
"koaning/simsity" ["l"="40.727,-2.783"]
"koaning/clumper" ["l"="45.053,26.372"]
"koaning/memo" ["l"="45.013,26.386"]
"koaning/drawdata" ["l"="45.197,26.248"]
"RasaHQ/rasalit" ["l"="55.466,28.219"]
"NorskRegnesentral/skweak" ["l"="52.47,25.62"]
"operatorai/modelstore" ["l"="45.012,25.692"]
"bodywork-ml/bodywork-core" ["l"="45.027,25.672"]
"fuzzylabs/awesome-open-mlops" ["l"="44.978,25.682"]
"MIDASverse/MIDASpy" ["l"="45.169,26.684"]
"MIDASverse/rMIDAS" ["l"="45.149,26.727"]
"firmai/pandapy" ["l"="48.388,25.916"]
"wwrechard/pydlm" ["l"="45.438,26.487"]
"firmai/interactive-corporate-report" ["l"="48.335,25.978"]
"intive-DataScience/tbats" ["l"="52.25,14.577"]
"firmai/machine-learning-asset-management" ["l"="-9.066,12.866"]
"eugeneyan/poc-docker-template" ["l"="45.645,26.783"]
"eugeneyan/testing-ml" ["l"="45.6,26.722"]
"JunjieYang97/stocBiO" ["l"="46.363,26.504"]
"YC-Coder-Chen/Tree-Math" ["l"="45.553,26.574"]
"solegalli/deploying-machine-learning-models" ["l"="45.565,26.523"]
"https-deeplearning-ai/GANs-Public" ["l"="45.848,25.895"]
"https-deeplearning-ai/tensorflow-3-public" ["l"="45.858,25.881"]
"https-deeplearning-ai/tensorflow-3" ["l"="45.891,25.881"]
"gretelai/trainer" ["l"="44.727,26.607"]
"gretelai/public_research" ["l"="44.725,26.625"]
"maxiaoba/GRAPE" ["l"="45.148,26.874"]
"G-AILab/IGRM" ["l"="45.139,26.901"]
"twitter-research/feature-propagation" ["l"="45.124,26.942"]
"xLaszlo/datascience-fails" ["l"="45.713,26.563"]
"mrdbourke/cs329s-ml-deployment-tutorial" ["l"="48.135,26.389"]
"hypergol/hypergol" ["l"="45.75,26.575"]
"xdfeng7370/Multi-fidelity-neural-network-" ["l"="46.249,26.012"]
"Zhen-Ni/MFNN" ["l"="46.272,26.009"]
"XuhuiM/Multi-Fidelity-DNNs-PINNs" ["l"="46.219,26.019"]
"automl/fanova" ["l"="45.927,26.332"]
"automl/ParameterImportance" ["l"="45.971,26.371"]
"frank-hutter/fanova" ["l"="45.967,26.352"]
"cnguyen10/few_shot_meta_learning" ["l"="57.799,19.439"]
"trainindata/feature-engineering-for-machine-learning" ["l"="45.591,26.537"]
"fuzzylite/fuzzylite" ["l"="45.771,26.712"]
"alvesoaj/eFLL" ["l"="45.774,26.765"]
"fuzzylite/pyfuzzylite" ["l"="45.745,26.635"]
"shuoyueqishi/fuzzy-PID-controller" ["l"="57.616,10.442"]
"pcingola/jFuzzyLogic" ["l"="45.811,26.807"]
"karajan1001/aiooss2" ["l"="44.854,25.717"]
"koaning/cluestar" ["l"="45.06,26.343"]
"koaning/tokenwiser" ["l"="44.988,26.375"]
"RasaHQ/rasa-nlu-examples" ["l"="55.474,28.208"]
"explosion/floret" ["l"="52.335,25.607"]
"kevinlu1248/pyate" ["l"="52.442,25.568"]
"davidberenstein1957/concise-concepts" ["l"="52.352,25.596"]
"RasaHQ/NLU-training-data" ["l"="55.47,28.197"]
"balajiln/mondrianforest" ["l"="45.638,26.48"]
"amirsaffari/online-random-forests" ["l"="45.671,26.504"]
"nel215/mondrianforest" ["l"="45.684,26.493"]
"amirsaffari/online-multiclass-lpboost" ["l"="45.679,26.52"]
"scikit-garden/scikit-garden" ["l"="45.488,26.503"]
"scikit-image/skimage-tutorials" ["l"="44.452,26.941"]
"sarasafavi/remote-sensing-with-python" ["l"="41.782,24.315"]
"rtosholdings/riptable" ["l"="45.056,26.512"]
"gditzler/ConceptDriftData" ["l"="45.864,25.96"]
"tegjyotsingh/ConceptDriftInduction" ["l"="45.879,25.961"]
"aipredict/ai-deployment" ["l"="46.048,26.659"]
"MachineLP/QDServing" ["l"="46.09,26.683"]
"Wrymm/Random-Survival-Forests" ["l"="45.07,26.673"]
"zahraatashgahi/ALACPD" ["l"="45.555,26.877"]
"mlrun/functions" ["l"="45.19,25.639"]
"mlrun/demo-github-actions" ["l"="45.17,25.642"]
"carlomazzaferro/scikit-hts-examples" ["l"="45.314,26.541"]
"CollinRooney12/htsprophet" ["l"="45.332,26.541"]
"MBrouns/timeseers" ["l"="39.126,35.969"]
"iterative/demo-bank-customer-churn" ["l"="44.975,25.71"]
"FarrellDay/miceRanger" ["l"="45.224,26.534"]
"amices/mice" ["l"="40.602,35.526"]
"vanderschaarlab/hyperimpute" ["l"="44.942,26.574"]
"ZFTurbo/timm_3d" ["l"="45.881,25.351"]
"Dynamic-Systems-and-GP/GPdyn" ["l"="46.449,26.122"]
"HildoBijl/GPRT" ["l"="46.412,26.122"]
"ftuffner/DSIToolbox" ["l"="46.477,26.119"]
"Alex-Lekov/AutoML-Benchmark" ["l"="45.081,26.504"]
"ing-bank/popmon" ["l"="45.348,26.56"]
"dylan-profiler/visions" ["l"="45.373,26.702"]
"ing-bank/sparse_dot_topn" ["l"="52.294,25.763"]
"histogrammar/histogrammar-python" ["l"="45.363,26.638"]
"scikit-adaptation/skada" ["l"="44.886,26.753"]
"benchopt/template_benchmark" ["l"="44.833,26.867"]
"mathurinm/libsvmdata" ["l"="44.796,26.851"]
"PerformanceEstimation/PEPit" ["l"="44.827,26.893"]
"peerannot/peerannot" ["l"="44.805,26.83"]
"josephsalmon/HAX712X" ["l"="44.819,26.846"]
"alphacsc/alphacsc" ["l"="44.133,30.347"]
"deepinv/deepinv" ["l"="-35.435,23.215"]
"josephsalmon/OrganizationFiles" ["l"="44.84,26.849"]
"eugeneyan/recsys-nlp-graph" ["l"="45.625,26.795"]
"sorend/fuzzy4j" ["l"="45.818,26.834"]
"fuzzylite/jfuzzylite" ["l"="45.83,26.848"]
"j-wilson/GPflowSampling" ["l"="46.066,26.169"]
"cagatayyildiz/neural-ode-tutorial" ["l"="46.097,26.165"]
"ryojitanabe/reproblems" ["l"="46.075,26.329"]
"P-N-Suganthan/2021-RW-MOP" ["l"="46.115,26.336"]
"deepfindr/xai-series" ["l"="45.926,26.762"]
"dssg/mlforpublicpolicylab" ["l"="44.881,26.052"]
"dssg/MLforPublicPolicy" ["l"="44.868,26.066"]
"dssg/MLinPractice" ["l"="44.826,26.034"]
"ltiao/bore" ["l"="46.212,26.234"]
"lfbo-ml/lfbo" ["l"="46.19,26.226"]
"igaloly/vue-preloaders" ["l"="44.972,25.581"]
"aporia-ai/dmatrix2np" ["l"="44.961,25.586"]
"MalteKurz/VineCopulaMatlab" ["l"="44.625,26.529"]
"ElsevierSoftwareX/SOFTX-D-21-00039" ["l"="44.595,26.529"]
"asnelt/MixedVineToolbox" ["l"="44.598,26.544"]
"juanitorduz/btsa" ["l"="45.509,26.987"]
"neuefische/ds-meetups" ["l"="45.512,27.025"]
"FrancescaLazzeri/AutoML-for-Timeseries-Forecasting-Berlin-MeetUp" ["l"="45.506,26.921"]
"johaupt/GANbalanced" ["l"="44.751,26.546"]
"NinelK/CopulaGP" ["l"="44.701,26.47"]
"VU-IVM/VineCopulas" ["l"="44.691,26.482"]
"dssg/data-science-101" ["l"="44.847,26.066"]
"RegaipKURT/Credit-Risk-Modelling" ["l"="45.711,26.993"]
"sujaytalesara/Predictive-Analytics" ["l"="45.691,26.973"]
"Code-Pop/Real-World-Vue-3-TypeScript" ["l"="44.171,26.061"]
"dylan-profiler/compressio" ["l"="45.379,26.749"]
"IBM/KubeflowDojo" ["l"="45.278,25.57"]
"sile/fanova" ["l"="45.893,26.489"]
"sile/hone" ["l"="45.861,26.469"]
"nyk510/gradient-boosted-decision-tree" ["l"="6.008,-41.064"]
"DagsHub/client" ["l"="45.163,25.555"]
"jenkinsci/dagshub-branch-source-plugin" ["l"="45.17,25.579"]
"DagsHub/papers-with-everything" ["l"="45.146,25.494"]
"flyteorg/flytekit-python-template" ["l"="44.997,25.356"]
"ubc-systopia/gosdt-guesses" ["l"="44.754,26.339"]
"Jeanselme/DynamicDeepHit" ["l"="45.101,26.624"]
"havakv/torchtuples" ["l"="45.084,26.651"]
"Xiao-dong-Wang/Multifidelity-GP" ["l"="46.164,26.04"]
"shib0li/DNN-MFBO" ["l"="46.255,25.992"]
"mona-kay/odsc-sql-for-data-science" ["l"="29.557,-23.289"]
"moovai/model_validation_tutorial" ["l"="45.002,26.498"]
"SpatialPython/spatial_python" ["l"="44.544,26.95"]
"carsonfarmer/python_geospatial" ["l"="44.572,26.921"]
"CODAIT/presentations" ["l"="46.11,25.48"]
"CODAIT/max-tfjs-models" ["l"="46.137,25.468"]
"eugeneyan/nocode-ml" ["l"="45.657,26.81"]
"brown-ccv/ODSC_East_2020" ["l"="44.972,26.507"]
"TutteInstitute/vectorizers" ["l"="44.91,26.391"]
"TutteInstitute/TextMAP" ["l"="44.861,26.397"]
"gretelai/GAN-location-generator" ["l"="44.704,26.597"]
"gretelai/synthetic-data-genomics" ["l"="44.717,26.601"]
"flyteorg/boilerplate" ["l"="45.036,25.331"]
"ckyrkou/Keras_FLOP_Estimator" ["l"="45.766,25.485"]
"Mr-TalhaIlyas/Tensorflow-Keras-Model-Profiler" ["l"="45.757,25.448"]
"ansrivas/GNG" ["l"="44.823,26.015"]
"AdrienGuille/GrowingNeuralGas" ["l"="44.853,26.028"]
"hj-n/steadiness-cohesiveness" ["l"="44.796,26.33"]
"hj-n/snc-reliability-map" ["l"="44.775,26.333"]
"nothingyang/RiskModeler" ["l"="45.644,26.693"]
"ddangelov/Top2Vec" ["l"="52.649,25.709"]
"Nixtla/nixtla" ["l"="45.513,26.416"]
"Nixtla/utilsforecast" ["l"="45.401,26.534"]
"Nixtla/transfer-learning-time-series" ["l"="45.394,26.501"]
"google/temporian" ["l"="43.696,26.246"]
"mikekeith52/scalecast" ["l"="45.319,26.488"]
"replicate/cog" ["l"="45.067,25.798"]
"skypilot-org/skypilot" ["l"="38.822,-0.668"]
"axolotl-ai-cloud/axolotl" ["l"="38.697,-0.594"]
"dottxt-ai/outlines" ["l"="40.845,0.621"]
"huggingface/diffusers" ["l"="45.89,31.459"]
"567-labs/instructor" ["l"="40.893,0.563"]
"huggingface/text-generation-inference" ["l"="38.78,-0.679"]
"williamcwi/DeepLearning.AI-TensorFlow-Developer-Professional-Certificate" ["l"="48.399,27.238"]
"IndoNLP/indonlu" ["l"="-11.963,-29.927"]
"ebhy/budgetml" ["l"="45.189,25.946"]
"ml-tooling/ml-workspace" ["l"="25.94,-25.778"]
"aladinyo/WhatsappyApp" ["l"="28.961,-28.914"]
"rh12503/triangula" ["l"="44.805,26.066"]
"facebookresearch/AugLy" ["l"="50.923,29.523"]
"jorisschellekens/borb" ["l"="46.043,4.747"]
"josepholiveira/podcastr" ["l"="44.735,26.052"]
"ml-tooling/best-of-web-python" ["l"="25.998,-25.851"]
"KimMeen/Time-LLM" ["l"="44.98,24.513"]
"stitchfix/hamilton" ["l"="41.126,1.27"]
"manzt/anywidget" ["l"="43.482,24.324"]
"mito-ds/mito" ["l"="40.598,-2.568"]
"lgienapp/aquarel" ["l"="22.059,14.496"]
"jupyterlite/jupyterlite" ["l"="43.541,24.028"]
"apache/yunikorn-core" ["l"="-2.678,14.966"]
"kubernetes-sigs/kueue" ["l"="7.91,-9.37"]
"apache/gravitino" ["l"="-2.568,14.952"]
"ray-project/ray-llm" ["l"="38.924,-0.567"]
"apache/yunikorn-k8shim" ["l"="-2.768,15.007"]
"kubernetes-sigs/lws" ["l"="7.886,-9.55"]
"oap-project/raydp" ["l"="-0.286,14.69"]
"kubernetes-sigs/scheduler-plugins" ["l"="8.022,-9.321"]
"Project-HAMi/HAMi" ["l"="7.26,-11.334"]
"vllm-project/aibrix" ["l"="39.043,-0.597"]
"mrdbourke/tensorflow-deep-learning" ["l"="47.764,26.17"]
"amanchadha/coursera-deep-learning-specialization" ["l"="48.272,27.223"]
"kolasniwash/tensorflow-certification-study-guide" ["l"="48.503,27.257"]
"ashishpatel26/Andrew-NG-Notes" ["l"="48.195,27.182"]
"greyhatguy007/Machine-Learning-Specialization-Coursera" ["l"="48.243,27.152"]
"MaheshBabu11/DeepLearning.AI-TensorFlow-Developer-Course" ["l"="48.453,27.228"]
"y33-j3T/Coursera-Deep-Learning" ["l"="48.371,27.306"]
"google/yggdrasil-decision-forests" ["l"="45.701,25.591"]
"LAMDA-NJU/Deep-Forest" ["l"="58.319,23.591"]
"google/tensorflow-recorder" ["l"="45.723,25.572"]
"PipelineAI/pipeline" ["l"="45.443,25.806"]
"spark-notebook/spark-notebook" ["l"="-2.647,17.062"]
"sryza/spark-timeseries" ["l"="-2.622,17.129"]
"databricks/spark-deep-learning" ["l"="-2.625,17.097"]
"spark-jobserver/spark-jobserver" ["l"="-2.598,17.047"]
"bentoml/bentoctl" ["l"="45.118,25.637"]
"bentoml/yatai-deployment" ["l"="45.102,25.612"]
"ssheng/BentoChain" ["l"="45.084,25.621"]
"star-whale/starwhale" ["l"="45.102,25.594"]
"tensorchord/envd" ["l"="8.103,-9.459"]
"google/model_search" ["l"="45.411,26.012"]
"google/automl" ["l"="50.638,30.021"]
"ai-eks/OpenClubhouse" ["l"="-9.142,14.084"]
"predict-idlab/sleep-linear" ["l"="62.272,34.383"]
"predict-idlab/plotly-resampler" ["l"="43.027,25.302"]
"dmbee/seglearn" ["l"="43.654,26.821"]
"predict-idlab/tsdownsample" ["l"="45.36,26.611"]
"raphaelvallat/antropy" ["l"="62.13,34.494"]
"getml/getml-community" ["l"="45.376,26.593"]
"jvdd/argminmax" ["l"="45.352,26.589"]
"esimov/triangle" ["l"="1.285,-7.805"]
"jdah/tetris-os" ["l"="-23.915,-23.076"]
"openkraken/kraken" ["l"="61.512,-22.879"]
"microsoft/wslg" ["l"="-49.213,7.649"]
"nextapps-de/winbox" ["l"="-3.949,-29.511"]
"openvinotoolkit/openvino_notebooks" ["l"="64.178,-2.53"]
"charmbracelet/lipgloss" ["l"="5.126,-5.198"]
"vijishmadhavan/ArtLine" ["l"="44.789,30.759"]
"jdxyw/generativeart" ["l"="36.14,23.773"]
"climech/grit" ["l"="-13.205,-6.527"]
"fogleman/primitive" ["l"="-0.765,-26.648"]
"marceloprates/prettymaps" ["l"="41.584,24.105"]
"bndw/wifi-card" ["l"="-46.286,-31.958"]
"optuna/optuna-examples" ["l"="45.624,26.352"]
"optuna/optuna-integration" ["l"="45.757,26.394"]
"pfnet-research/xfeat" ["l"="5.981,-41.072"]
"pfnet/pytorch-pfn-extras" ["l"="5.966,-41.081"]
"tuvovan/ml_in_production" ["l"="45.417,26.73"]
"eugeneyan/applyingml" ["l"="45.538,26.67"]
"danielfrg/tsne" ["l"="57.478,23.946"]
"elbamos/largeVis" ["l"="44.792,26.243"]
"dominiek/python-bhtsne" ["l"="44.826,26.224"]
"Lasagne/Lasagne" ["l"="47.886,29.002"]
"gcr/torch-residual-networks" ["l"="45.946,27.638"]
"ethereon/netscope" ["l"="45.742,27.601"]
"terrytangyuan/distributed-ml-patterns" ["l"="45.384,25.346"]
"terrytangyuan/awesome-kubeflow" ["l"="45.373,25.429"]
"bodywork-ml/bodywork-ml-pipeline-project" ["l"="45.015,25.641"]
"dataqa/nlp-labelling" ["l"="45.007,25.596"]
"AutoViML/AutoViML" ["l"="45.384,26.608"]
"rafiqhasan/auto-tensorflow" ["l"="45.387,26.669"]
"taki0112/vit-tensorflow" ["l"="45.825,25.498"]
"leondgarse/keras_efficientnet_v2" ["l"="45.804,25.492"]
"yingkaisha/keras-unet-collection" ["l"="61.889,36.988"]
"sayakpaul/ConvNeXt-TF" ["l"="45.808,25.47"]
"Burf/TFDetection" ["l"="45.78,25.513"]
"ypeleg/nfnets-keras" ["l"="45.78,25.467"]
"VcampSoldiers/Swin-Transformer-Tensorflow" ["l"="45.842,25.538"]
"plotly/datasets" ["l"="45.906,26.337"]
"plotly/jupyter-dash" ["l"="42.914,25.321"]
"datasciencedojo/datasets" ["l"="45.99,26.39"]
"automl/autoweka" ["l"="45.9,26.3"]
"automl/pylearningcurvepredictor" ["l"="45.906,26.269"]
"microprediction/optimizer-elo-ratings" ["l"="45.314,26.701"]
"PacktPublishing/Time-Series-Analysis-with-Python-Cookbook" ["l"="45.47,26.674"]
"jiwidi/time-series-forecasting-with-python" ["l"="45.026,24.154"]
"FrancescaLazzeri/Machine-Learning-for-Time-Series-Forecasting" ["l"="45.501,26.819"]
"marcopeix/AppliedTimeSeriesAnalysisWithPython" ["l"="45.474,26.701"]
"sinanuozdemir/feature_engineering_bookcamp" ["l"="45.487,26.714"]
"PacktPublishing/Machine-Learning-for-Time-Series-with-Python" ["l"="45.448,26.664"]
"PacktPublishing/Forecasting-Time-Series-Data-with-Facebook-Prophet" ["l"="45.474,26.735"]
"bayesoptbook/bayesoptbook.github.io" ["l"="45.929,26.133"]
"KrisNguyen135/bayesian-optimization-in-action" ["l"="45.995,26.112"]
"dfm/tinygp" ["l"="21.862,14.228"]
"JaxGaussianProcesses/GPJax" ["l"="21.817,14.154"]
"normal-computing/posteriors" ["l"="21.833,14.209"]
"probml/dynamax" ["l"="21.789,14.131"]
"bayesiains/nflows" ["l"="23.062,14.479"]
"BayesianModelingandComputationInPython/BookCode_Edition1" ["l"="39.169,35.947"]
"storopoli/Bayesian-Statistics" ["l"="22,17.059"]
"hvarfner/vanilla_bo_in_highdim" ["l"="45.973,26.128"]
"Apress/deep-neuro-fuzzy-systems-w-python" ["l"="45.767,26.587"]
"balcilar/Anfis-from-scratch" ["l"="45.822,26.667"]
"scikit-fuzzy/scikit-fuzzy" ["l"="45.709,26.525"]
"motiwari/BanditPAM" ["l"="45.07,26.319"]
"GBDT-PL/GBDT-PL" ["l"="57.694,23.659"]
"valeman/awesome-conformal-prediction" ["l"="43.723,26.143"]
"awslabs/fortuna" ["l"="43.705,26.168"]
"aangelopoulos/conformal-prediction" ["l"="43.753,26.152"]
"deel-ai/puncc" ["l"="43.784,26.192"]
"ml-stat-Sustech/TorchCP" ["l"="43.766,26.166"]
"google-research/hyperbo" ["l"="46.127,26.208"]
"yiminzme/awesome-bayesian-optimization" ["l"="46.034,26.18"]
"secondmind-labs/markovflow" ["l"="46.051,26.187"]
"machine-learning-exchange/katalog" ["l"="45.246,25.553"]
"kserve/kserve-pending" ["l"="45.23,25.517"]
"kserve/website" ["l"="45.21,25.488"]
"kserve/models-web-app" ["l"="45.226,25.494"]
"kserve/community" ["l"="45.214,25.467"]
"kserve/open-inference-protocol" ["l"="45.196,25.444"]
"kserve/modelmesh-runtime-adapter" ["l"="45.216,25.508"]
"kserve/modelmesh" ["l"="45.196,25.508"]
"amanchadha/coursera-machine-learning-engineering-for-prod-mlops-specialization" ["l"="48.307,27.279"]
"FourthBrain/software-dev-for-mlops-101" ["l"="45.934,25.872"]
"kennethleungty/MLOps-Specialization-Notes" ["l"="45.847,25.914"]
"chiphuyen/ml-interviews-book" ["l"="48.067,26.32"]
"trainindata/forecasting-with-machine-learning" ["l"="45.572,26.587"]
"feature-engine/feature-engine-examples" ["l"="45.563,26.6"]
"PacktPublishing/Modern-Time-Series-Forecasting-with-Python-2E" ["l"="45.428,26.712"]
"PacktPublishing/Applied-Machine-Learning-Explainability-Techniques" ["l"="45.454,26.788"]
"PacktPublishing/Deep-Learning-for-Time-Series-Data-Cookbook" ["l"="45.423,26.67"]
"TimeSynth/TimeSynth" ["l"="45.539,24.925"]
"PacktPublishing/Python-for-Finance-Cookbook-2E" ["l"="45.414,26.846"]
"mikekeith52/scalecast-examples" ["l"="45.295,26.541"]
"superlinear-ai/conformal-tights" ["l"="43.737,26.203"]
"solegalli/Python-Feature-Engineering-Cookbook-First-Edition" ["l"="45.624,26.548"]
"solegalli/machine-learning-interpretability" ["l"="45.608,26.54"]
"mlfoundations/tableshift" ["l"="46.161,24.727"]
"eugeneyan/1-on-1s" ["l"="45.57,26.686"]
"eugeneyan/ml-surveys" ["l"="48.028,26.326"]
"ttzt/catalog_of_requirements_for_ai_products" ["l"="45.597,26.697"]
"IrinaGoloshchapova/ml_system_design_doc_ru" ["l"="-44.284,26.098"]
"eugeneyan/llm-paper-notes" ["l"="45.58,26.741"]
"Code-Pop/from-vuex-to-pinia" ["l"="44.215,26.03"]
"aporia-ai/mlplatform-workshop" ["l"="44.985,25.63"]
"aporia-ai/mlops.toys" ["l"="44.945,25.572"]
"aporia-ai/inferencedb" ["l"="44.948,25.587"]
"aporia-ai/kubesurvival" ["l"="44.966,25.566"]
"aporia-ai/mlnotify" ["l"="44.949,25.555"]
"jacopotagliabue/you-dont-need-a-bigger-boat" ["l"="44.944,25.683"]
"aniruddhachoudhury/mlopsworld" ["l"="44.973,25.604"]
"dmatrix/tmls-workshop" ["l"="44.959,25.609"]
"carla-recourse/CARLA" ["l"="45.041,26.168"]
"wangyongjie-ntu/CFAI" ["l"="44.969,26.152"]
"sharmapulkit/FACE-Feasible-Actionable-Counterfactual-Explanations" ["l"="45.006,26.17"]
"sofienkaabar/the-book-of-trading-strategies" ["l"="45.413,27.195"]
"sofienkaabar/trend-following-strategies" ["l"="45.423,27.179"]
"sofienkaabar/contrarian-trading-strategies" ["l"="45.401,27.181"]
"sofienkaabar/mastering-financial-pattern-recognition" ["l"="45.403,27.16"]
"sfu-dis/mosaicdb" ["l"="1.642,13.425"]
"kohler/masstree-beta" ["l"="1.723,13.403"]
"vmware/splinterdb" ["l"="0.71,14.155"]
"mattborghi/mlops-specialization" ["l"="45.902,25.902"]
"hadley/bigvis" ["l"="44.705,26.264"]
"hadley/r2d3" ["l"="44.662,26.28"]
"Evolutionary-Intelligence/DistributedEvolutionaryComputation" ["l"="46.037,26.358"]
"Evolutionary-Intelligence/dpop7" ["l"="46.042,26.375"]
"FeiLiu36/EoH" ["l"="51.166,26.551"]
"PR-Ryan/DEMO" ["l"="46.034,26.385"]
"MetaEvo/MetaBox" ["l"="46.143,26.413"]
"EMI-Group/evox" ["l"="51.253,2.957"]
"FeiLiu36/LLM4Opt" ["l"="51.161,26.57"]
"permitio/OPToggles" ["l"="45.156,25.28"]
"globalaihub/python-education-v2" ["l"="5.766,-19.828"]
"codeedu/imersao-fullstack-fullcycle" ["l"="5.769,-19.866"]
"allanf181/FuiVazado" ["l"="5.746,-19.822"]
"jalammar/ecco" ["l"="52.653,25.662"]
"NVlabs/stylegan2-ada-pytorch" ["l"="44.972,30.644"]
"blasty/CVE-2021-3156" ["l"="-44.486,-29.474"]
"achillesrasquinha/pipupgrade" ["l"="-13.479,-5.823"]
"boxkite-ml/boxkite" ["l"="45.04,25.609"]
"davisidarta/topometry" ["l"="44.861,26.3"]
"timsainb/ParametricUMAP_paper" ["l"="44.832,26.286"]
"theislab/scib" ["l"="41.205,38.439"]
"google-research/ott" ["l"="21.689,13.924"]
"scverse/pertpy" ["l"="41.276,38.364"]
"emdann/milopy" ["l"="41.286,38.417"]
"simslab/scHPF" ["l"="44.864,26.28"]
"seermer/TensorFlow2-EfficientNetV2" ["l"="45.814,25.452"]
"xhluca/keras-noisy-student" ["l"="45.798,25.451"]
"adafruit/Adafruit-Fingerprint-Sensor-Library" ["l"="46.258,25.625"]
"brianrho/FPM" ["l"="46.166,25.685"]
"sparkfun/Fingerprint_Scanner-TTL" ["l"="46.302,25.593"]
"adafruit/Adafruit_CircuitPython_Fingerprint" ["l"="46.289,25.626"]
"bastianraschke/pyfingerprint" ["l"="46.27,25.649"]
"hanifizzudinrahman/Module-Fingerprint-DY50-FPM10A" ["l"="46.272,25.596"]
"adafruit/Adafruit-PN532" ["l"="56.11,2.723"]
"HazyResearch/data-centric-ai" ["l"="44.791,25.783"]
"daochenzha/data-centric-AI" ["l"="44.769,25.817"]
"Data-Centric-AI-Community/awesome-data-centric-ai" ["l"="44.744,25.805"]
"data-centric-ai/dcbench" ["l"="44.72,25.748"]
"HazyResearch/meerkat" ["l"="41.64,-3.817"]
"HazyResearch/evaporate" ["l"="41.602,-3.823"]
"Renumics/awesome-open-data-centric-ai" ["l"="44.844,25.84"]
"robustness-gym/robustness-gym" ["l"="52.643,25.571"]
"HazyResearch/flyingsquid" ["l"="52.381,25.528"]
"dcai-course/dcai-lab" ["l"="44.813,25.829"]
"google/uncertainty-baselines" ["l"="22.495,15.422"]
"jacopotagliabue/post-modern-stack" ["l"="44.921,25.65"]
"RecList/reclist" ["l"="44.897,25.608"]
"jacopotagliabue/recs-at-resonable-scale" ["l"="44.927,25.635"]
"jacopotagliabue/paas-data-ingestion" ["l"="44.903,25.644"]
"jacopotagliabue/FREE_7773" ["l"="44.857,25.6"]
"jacopotagliabue/no-ops-machine-learning" ["l"="44.91,25.667"]
"the-full-stack/fsdl-text-recognizer-project" ["l"="48.096,26.406"]
"iusztinpaul/energy-forecasting" ["l"="41.279,0.696"]
"cdfoundation/sig-mlops" ["l"="48.005,26.469"]
"jacopotagliabue/MLSys-NYU-2022" ["l"="44.877,25.656"]
"tuvovan/Vision_Transformer_Keras" ["l"="45.885,25.483"]
"ashishpatel26/Vision-Transformer-Keras-Tensorflow-Pytorch-Examples" ["l"="45.857,25.463"]
"emla2805/vision-transformer" ["l"="45.866,25.483"]
"yingkaisha/keras-vision-transformer" ["l"="45.858,25.518"]
"kamalkraj/Vision-Transformer" ["l"="45.881,25.463"]
"automl/neps" ["l"="46.122,26.483"]
"automl/ifBO" ["l"="46.141,26.504"]
"automl/DeepCAVE" ["l"="45.988,26.41"]
"automl/jahs_bench_201" ["l"="52.703,34.068"]
"automl/lcpfn" ["l"="46.151,26.494"]
"ydataai/ydata-quality" ["l"="44.681,25.802"]
"ydataai/academy" ["l"="44.704,25.803"]
"fbrundu/pymrmr" ["l"="45.443,26.509"]
"PacktPublishing/Time-Series-Analysis-with-Python-3.x" ["l"="45.46,26.721"]
"salimamoukou/ACPI" ["l"="45.071,26.464"]
"gagolews/clustering-benchmarks" ["l"="45.491,26.593"]
"TymonXie/tymon" ["l"="50.31,30.406"]
"bubbliiiing/yolox-tf2" ["l"="50.176,30.376"]
"tsujuifu/pytorch_violet" ["l"="47.88,32.97"]
"lasso-net/lassonet" ["l"="44.66,27.054"]
"fabian-sp/lassonet" ["l"="44.636,27.062"]
"runopti/stg" ["l"="44.649,27.086"]
"HazyResearch/model-patching" ["l"="44.683,25.734"]
"neuefische/ds-simple-plotly-dash-template" ["l"="45.513,27.05"]
"sebastianpinedaar/MMAML-TSR" ["l"="46.706,26.793"]
"machinelearningnuremberg/DeepRankingEnsembles" ["l"="46.7,26.772"]
"machinelearningnuremberg/DeepPipe" ["l"="46.69,26.774"]
"JJASMINE22/MAML_LSTM" ["l"="46.745,26.824"]
"machinelearningnuremberg/FSBO" ["l"="46.677,26.762"]
"logicalclocks/hopsworks-chef" ["l"="45.253,25.479"]
"wilsonjr/ClusterShapley" ["l"="44.823,26.314"]
"jmeisele/ml-ops" ["l"="45.056,25.714"]
"Code-Pop/graphql-server" ["l"="44.184,26.054"]
"clearml/clearml-session" ["l"="45.094,25.49"]
"luuil/MLFSPS" ["l"="46.037,26.007"]
"dbindel/POAP" ["l"="46.031,26.221"]
"dme65/SOT" ["l"="46.034,26.21"]
"PacktPublishing/Practical-Deep-Learning-at-Scale-with-MLFlow" ["l"="45.444,26.829"]
"PacktPublishing/Comet-for-Data-Science" ["l"="45.467,26.829"]
"PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python" ["l"="45.457,26.819"]
"PacktPublishing/Hyperparameter-Tuning-with-Python" ["l"="45.457,26.841"]
"hopshadoop/hops-metadata-dal-impl-ndb" ["l"="45.282,25.504"]
"linkedin/dynamometer" ["l"="-2.743,14.925"]
"karamelchef/karamel" ["l"="45.253,25.497"]
"shawn-y-sun/Credit_Risk_Model_LoanDefaults" ["l"="45.791,26.983"]
"PerformanceEstimation/Performance-Estimation-Toolbox" ["l"="44.822,26.926"]
"permitio/opal-helm-chart" ["l"="45.148,25.224"]
"permitio/cedar-agent" ["l"="45.142,25.179"]
"guilhermecapitao/podcastr" ["l"="44.69,26.047"]
"birobirobiro/nlw-05-plantmanager" ["l"="44.636,26.037"]
"rocketseat-education/nlw-06-reactjs" ["l"="4.011,-20.956"]
"diego3g/responsive-native" ["l"="4.012,-20.789"]
"RafaelGoulartB/proffy" ["l"="4.158,-21.091"]
"getomni/visual-studio-code" ["l"="4.032,-20.756"]
"eva-engine/eva.js" ["l"="-4.039,-32.818"]
"getomni/insomnia" ["l"="4.019,-20.745"]
"Emadabdelhamied/Eng-Mohamed-Hammad-Posts" ["l"="31.153,-28.797"]
"tdomhan/pylearningcurvepredictor" ["l"="45.943,26.271"]
"WeijiaZhang24/DCSurvival" ["l"="45.073,26.696"]
"birobirobiro/nlw-06-gameplay" ["l"="44.504,26.014"]
"birobirobiro/my-onix-app" ["l"="44.456,26.005"]
"birobirobiro/codar" ["l"="44.565,26.025"]
"tornede/py_experimenter" ["l"="43.78,26.298"]
"automl/arlbench" ["l"="46.024,26.427"]
"automl/Mighty" ["l"="46.01,26.435"]
"automl/DACBench" ["l"="46.027,26.444"]
"elvinzhusiyu/vapit" ["l"="44.74,16.314"]
"EthanRosenthal/skits" ["l"="45.339,26.636"]
"microprediction/timeseries-notebooks" ["l"="45.339,26.606"]
"i6092467/vadesc" ["l"="45.092,26.596"]
"clip-italian/clip-italian" ["l"="44.796,25.486"]
"vinid/NegotiationArena" ["l"="44.832,25.497"]
"jpmml/r2pmml" ["l"="45.929,26.651"]
"zincware/ZnDraw" ["l"="22.148,13.058"]
"cruiseresearchgroup/TSCP2" ["l"="45.59,27.062"]
"machinelearningnuremberg/HPO-B" ["l"="46.71,26.764"]
"SeldonIO/ansible-k8s-collection" ["l"="45.121,25.695"]
"JunjieYang97/MRVRBO" ["l"="46.384,26.507"]
"sowmaster/esjacobians" ["l"="46.382,26.521"]
"yfzon/Multi-modal-Multi-instance-Learning" ["l"="45.039,26.778"]
"TheoGuyard/El0ps" ["l"="44.758,26.873"]
"apache/kvrocks-controller" ["l"="45.098,25.247"]
"apache/kvrocks-website" ["l"="45.118,25.251"]
"RocksLabs/kvrocks-operator" ["l"="45.074,25.229"]
"hoangthang1607/nfnets-Tensorflow-2" ["l"="45.78,25.426"]
"automl/Squirrel-Optimizer-BBO-NeurIPS20-automlorg" ["l"="46.12,26.286"]
"aerdem4/rapids-kaggle-utils" ["l"="46.136,26.291"]
"LamNgo1/cma-meta-algorithm" ["l"="46.09,26.254"]
"shi-ang/SurvivalAnalysisPapers" ["l"="45.063,26.711"]
"shib0li/BMBO-DARN" ["l"="46.272,25.979"]
"bentoml/simple_di" ["l"="45.06,25.554"]
"bentoml/yatai-image-builder" ["l"="45.08,25.582"]
"MilaNLProc/feel-it" ["l"="44.81,25.461"]
"YuhaoWong0103/fsl_ts" ["l"="46.758,26.839"]
"coveooss/SIGIR-ecom-data-challenge" ["l"="44.853,25.561"]
"jacopotagliabue/retail-personalization-workshop" ["l"="44.84,25.534"]
"RecList/evalRS-CIKM-2022" ["l"="44.867,25.579"]
"DeepBlueAI/SIGIR_eCOM_2021_Data_Challenge_1st_Place" ["l"="44.829,25.547"]
"FrancescaLazzeri/AutomatedMLEnergyForecast" ["l"="45.509,26.95"]
"PABannier/nanograd" ["l"="44.768,26.855"]
"birobirobiro/live-twitch-lp-gpt3" ["l"="44.415,25.997"]
"cookiecutter/cookiecutter" ["l"="44.85,20.565"]
"alexeygrigorev/data-science-interviews" ["l"="48.057,26.248"]
"audreyfeldroy/cookiecutter-pypackage" ["l"="45.151,20.85"]
"eugeneyan/applied-ml" ["l"="47.958,26.221"]
"DEAP/deap" ["l"="49.891,26.115"]
"dfm/george" ["l"="20.442,14.792"]
"gofireflyio/validiac" ["l"="45.18,25.212"]
"gofireflyio/badge-of-honor" ["l"="45.192,25.178"]
"komodorio/validkube" ["l"="7.438,-9.107"]
"vinecopulib/rvinecopulib" ["l"="44.667,26.521"]
"tnagler/vinereg" ["l"="44.663,26.504"]
"vinecopulib/vinecopulib" ["l"="44.65,26.521"]
"dnouri/nolearn" ["l"="44.815,27.728"]
"zomux/deepy" ["l"="44.899,27.68"]
"dmlc/minpy" ["l"="47.77,29.028"]
"andersbll/deeppy" ["l"="48.009,28.516"]
"webis-de/small-text" ["l"="52.33,25.731"]
"NannyML/The-Little-Book-of-ML-Metrics" ["l"="41.255,0.672"]
"deel-ai/xplique" ["l"="43.889,26.211"]
"AI4LIFE-GROUP/OpenXAI" ["l"="24.083,14.273"]
"cvxgrp/cov_pred_finance" ["l"="50.924,25.708"]
"Farmhouse121/Adventures-in-Financial-Data-Science" ["l"="45.349,26.74"]
"OVVO-Financial/NNS-Python" ["l"="45.335,26.721"]
"kayuksel/generative-opt" ["l"="45.338,26.754"]
"google-research/timesfm" ["l"="45.034,24.534"]
"time-series-foundation-models/lag-llama" ["l"="44.988,24.557"]
"SalesforceAIResearch/uni2ts" ["l"="44.975,24.536"]
"cleanlab/cleanvision" ["l"="44.905,25.861"]
"visual-layer/fastdup" ["l"="44.969,25.894"]
"autodistill/autodistill" ["l"="48.728,30.002"]
"Deci-AI/super-gradients" ["l"="48.722,29.975"]
"dcai-course/dcai-course" ["l"="44.823,25.811"]
"anminhhung/pytorch_tutorial" ["l"="44.874,25.848"]
"rafaelpadilla/review_object_detection_metrics" ["l"="50.625,30.104"]
"patchy631/machine-learning" ["l"="48.013,26.562"]
"BloodAxe/pytorch-toolbelt" ["l"="50.815,30.167"]
"cleanlab/cleanvision-examples" ["l"="44.887,25.835"]
"Renumics/spotlight" ["l"="44.969,25.936"]
"Paulescu/hands-on-rl" ["l"="48.023,26.537"]
"trevorstephens/gplearn" ["l"="21.949,15.744"]
"aigamedev/scikit-neuralnetwork" ["l"="44.825,27.682"]
"rodrigo-arenas/Sklearn-genetic-opt" ["l"="31.706,-22.969"]
"lmmentel/awesome-time-series" ["l"="45.418,26.513"]
"cure-lab/Awesome-time-series" ["l"="44.939,24.421"]
"DaoSword/Time-Series-Forecasting-and-Deep-Learning" ["l"="44.932,24.433"]
"deeptime-ml/deeptime" ["l"="21.695,15.767"]
"aeon-toolkit/aeon" ["l"="43.719,26.873"]
"gastonstat/CreditScoring" ["l"="45.703,26.749"]
"DrSasanBarak/metats" ["l"="46.774,26.838"]
"radrumond/timehetnet" ["l"="46.784,26.853"]
"lightly-ai/lightly" ["l"="52.926,29.524"]
"rom1504/clip-retrieval" ["l"="49.021,30.321"]
"obss/sahi" ["l"="50.456,29.951"]
"CalculatedContent/WeightWatcher" ["l"="52.52,25.686"]
"OML-Team/open-metric-learning" ["l"="-44.321,26.156"]
"rom1504/img2dataset" ["l"="48.99,30.304"]
"SysCV/sam-hq" ["l"="48.851,30.076"]
"airctic/icevision" ["l"="49.414,28.613"]
"selva86/selva86.github.io" ["l"="45.95,26.175"]
"selva86/python-machine-learning" ["l"="45.946,26.163"]
"Data-Centric-AI-Community/awesome-python-for-data-science" ["l"="44.694,25.778"]
"machinelearningnuremberg/WellTunedSimpleNets" ["l"="46.7,26.754"]
"microsoft/responsible-ai-toolbox-tracker" ["l"="45.054,25.978"]
"WenjieDu/Awesome_Imputation" ["l"="45.088,24.46"]
"WenjieDu/PyPOTS" ["l"="45.05,24.424"]
"WenjieDu/TSDB" ["l"="45.102,24.434"]
"WenjieDu/BrewPOTS" ["l"="45.117,24.423"]
"WenjieDu/PyGrinder" ["l"="45.102,24.421"]
"AI4HealthUOL/SSSD" ["l"="45.074,24.472"]
"ermongroup/CSDI" ["l"="45.066,24.456"]
"lixus7/Time-Series-Works-Conferences" ["l"="44.966,24.405"]
"LASER-UMASS/Themis" ["l"="45.03,26.086"]
"explosion/curated-transformers" ["l"="40.906,1.308"]
"explosion/prodigy-openai-recipes" ["l"="52.544,25.5"]
"MaartenGr/PolyFuzz" ["l"="52.49,25.706"]
"tomaarsen/SpanMarkerNER" ["l"="41.14,1.073"]
"TutteInstitute/evoc" ["l"="43.34,24.657"]
"HLasse/TextDescriptives" ["l"="52.229,25.536"]
"booknlp/booknlp" ["l"="52.308,25.373"]
"holub008/xrf" ["l"="40.205,35.671"]
"marjoleinF/pre" ["l"="45.159,26.32"]
"automl/pyautoweka" ["l"="45.943,26.315"]
"laic-ufmg/Recipe" ["l"="45.96,26.315"]
"replicate/replicate-python" ["l"="44.722,25.586"]
"replicate/replicate-javascript" ["l"="44.676,25.568"]
"replicate/cog-examples" ["l"="44.654,25.589"]
"replicate/getting-started-nextjs" ["l"="44.652,25.548"]
"replicate/discord-bot-tutorial-code" ["l"="44.659,25.521"]
"replicate/llama-chat" ["l"="44.688,25.536"]
"replicate/dreambooth" ["l"="44.725,25.627"]
"szilard/teach-data-science-UCLA-master-appl-stats" ["l"="45.06,26.243"]
"gregtam/interpreting-decision-trees-and-random-forests" ["l"="45.156,26.276"]
"koaning/scikit-partial" ["l"="44.997,26.356"]
"MNoichl/opinionated" ["l"="43.331,24.691"]
"NVIDIA-Merlin/models" ["l"="58.256,23.621"]
"rn5l/session-rec" ["l"="59.605,23.629"]
"RecList/evalRS-KDD-2023" ["l"="44.887,25.573"]
"NVIDIA-Merlin/Transformers4Rec" ["l"="58.252,23.583"]
"sisinflab/elliot" ["l"="59.487,23.642"]
"taki0112/CLIP-Tensorflow" ["l"="45.837,25.451"]
"vanderschaarlab/autoprognosis" ["l"="44.897,26.606"]
"vanderschaarlab/MIRACLE" ["l"="44.92,26.611"]
"Team-TUD/CTAB-GAN-Plus-DP" ["l"="44.846,26.586"]
"replicate/replicate-support-bot" ["l"="44.632,25.507"]
"replicate/getting-started-nextjs-language" ["l"="44.637,25.494"]
"mikeagn/CEC2013" ["l"="50.227,25.748"]
"mazhar-ansari-ardeh/BenchmarkFcns" ["l"="50.096,25.88"]
"zenml-io/zenml-projects" ["l"="44.898,25.723"]
"zenml-io/zenbytes" ["l"="44.917,25.709"]
"zenml-io/zenml-gitflow" ["l"="44.898,25.7"]
"zenml-io/zenml-dashboard" ["l"="44.921,25.727"]
"DataCanvasIO/YLearn" ["l"="43.707,25.49"]
"PaddlePaddle/PaddleTS" ["l"="44.992,24.411"]
"rapidsai/gputreeshap" ["l"="39.849,35.781"]
"mmschlk/shapiq" ["l"="43.754,26.234"]
"iancovert/sage" ["l"="39.903,35.775"]
"mitre/menelaus" ["l"="45.969,25.95"]
"interpretml/TalkToEBM" ["l"="44.951,26.254"]
"interpretml/ebm2onnx" ["l"="44.98,26.252"]
"tblume1992/LazyProphet" ["l"="45.362,26.574"]
"google-research/gpax" ["l"="46.164,26.214"]
"BauplanLabs/examples" ["l"="44.785,25.532"]
"g8a9/ferret" ["l"="44.796,25.431"]
"g8a9/ear" ["l"="44.781,25.398"]
"MilaNLProc/simple-generation" ["l"="44.771,25.42"]
"MilaNLProc/twitter-demographer" ["l"="44.778,25.443"]
"amazon-science/tabsyn" ["l"="44.81,26.594"]
"tennisonliu/GOGGLE" ["l"="44.87,26.597"]
"SamsungSAILMontreal/ForestDiffusion" ["l"="44.799,26.582"]
"ryan112358/private-pgm" ["l"="50.737,1.061"]
"statice/anonymeter" ["l"="50.73,1.012"]
"alan-turing-institute/tapas" ["l"="50.728,1.029"]
"fuzzylabs/matcha" ["l"="44.955,25.7"]
"auto4opt/AutoOpt" ["l"="46.052,26.39"]
"Kaixhin/FGLab" ["l"="45.533,25.579"]
"Kaixhin/FGMachine" ["l"="45.535,25.545"]
"empiricalci/emp" ["l"="45.535,25.524"]
"IFCA-Advanced-Computing/frouros" ["l"="46.044,25.921"]
"FilippoMB/Ensemble-Conformalized-Quantile-Regression" ["l"="43.794,26.093"]
"yromano/cqr" ["l"="43.774,26.122"]
"mpalenciaolivar/Awesome-Decision-Science" ["l"="43.774,26.232"]
"ip200/venn-abers" ["l"="43.767,26.213"]
"rick12000/confopt" ["l"="43.682,26.173"]
"koulakis/h-nne" ["l"="44.819,25.891"]
"Renumics/awesome-anything2vec" ["l"="44.874,25.895"]
"lmcinnes/thisnotthat" ["l"="44.992,26.389"]
"vanderschaarlab/Interpretability" ["l"="44.866,26.651"]
"xiaofeng-github/Meta-Learning4FSTSF" ["l"="46.803,26.867"]
"koaning/scikit-prune" ["l"="44.946,26.362"]
"KKimura360/MLC_toolbox" ["l"="45.974,26.02"]
"outcastofmusic/quick-nlp" ["l"="53.003,25.501"]
"automl/TransformersCanDoBayesianInference" ["l"="46.575,26.711"]
"automl/PFNs" ["l"="46.545,26.693"]
"automl/PFNs4BO" ["l"="46.571,26.692"]
"microsoft/ticl" ["l"="46.484,26.665"]
"beroguedou/churner_frontend" ["l"="45.081,26.48"]
"beroguedou/churner" ["l"="45.094,26.482"]
"automl/zero-shot-automl-with-pretrained-models" ["l"="46.759,26.778"]
"automl/quicktunetool" ["l"="46.74,26.782"]
"ianozsvald/data_science_delivered" ["l"="45.329,26.286"]
"ericmjl/bayesian-analysis-recipes" ["l"="39.226,35.979"]
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" ["l"="39.243,35.945"]
"jxieeducation/DIY-Data-Science" ["l"="46.224,27.842"]
"bamps53/convnext-tf" ["l"="45.817,25.428"]
"kulbachcedric/EvOAutoML" ["l"="45.791,25.97"]
"MaxHalford/taxi-demo-rp-mz-rv-rd-st" ["l"="45.916,25.926"]
"shihux/sa_transformer" ["l"="45.087,26.613"]
"dssg/police-eis" ["l"="44.871,26.095"]
"dssg/dirtyduck" ["l"="44.89,26.09"]
"aws-controllers-k8s/sagemaker-controller" ["l"="48.888,26.546"]
"hirune924/imgaug-tf" ["l"="45.787,25.492"]
"gietema/clusterfun" ["l"="45.828,25.476"]
"ryanwongsa/kaggle-birdsong-recognition" ["l"="39.79,5.151"]
"katiana22/TL-DeepONet" ["l"="46.364,25.968"]
"PredictiveIntelligenceLab/ImprovedDeepONets" ["l"="46.394,25.959"]
"thelovelab/tximport" ["l"="44.255,26.328"]
"COMBINE-lab/shoal" ["l"="44.228,26.334"]
"GGiecold-zz/Cluster_Ensembles" ["l"="45.574,26.568"]
"rtavenar/SparseGroupLasso" ["l"="44.687,27.006"]
"daehoum1/pcfi" ["l"="45.124,26.966"]
"marblet/GCNmf" ["l"="45.107,26.977"]
"geomblog/fairness" ["l"="44.995,26.024"]
"nomuramasahir0/crfmnes" ["l"="45.987,26.444"]
"birobirobiro/live-twitch-rocket-travel" ["l"="44.401,25.987"]
"NotMatthewGriffin/pterodactyl" ["l"="45.016,25.317"]
"Striveworks/Flyte-Wingman" ["l"="45.005,25.294"]
"cleanlab/cleanlab-studio" ["l"="44.735,25.769"]
"cleanlab/cleanlab-tlm" ["l"="44.768,25.785"]
"thanhhau097/mlpipeline" ["l"="45.409,26.778"]
"birobirobiro/my-onix-web" ["l"="44.385,25.998"]
"iterative/dvc-data" ["l"="44.833,25.711"]
"iterative/dvcyaml-schema" ["l"="44.803,25.705"]
"iterative/dvc-objects" ["l"="44.813,25.694"]
"maxpumperla/elephas" ["l"="-2.63,17.173"]
"fchollet/keras-resources" ["l"="47.697,28.66"]
"farizrahman4u/seq2seq" ["l"="55.837,28.49"]
"keras-rl/keras-rl" ["l"="57.489,18.005"]
"keplr-io/hera" ["l"="44.751,27.682"]
"bstriner/keras-adversarial" ["l"="46.019,29.224"]
"keplr-io/quiver" ["l"="50.406,33.282"]
"philipperemy/keras-attention" ["l"="53.873,27.221"]
"newsdev/stevedore" ["l"="-5.194,-41.333"]
"invinst/chicago-police-data" ["l"="-16.507,-5.643"]
"MimiOnuoha/missing-datasets" ["l"="51.916,25.129"]
"tolga-b/debiaswe" ["l"="40.066,34.32"]
"zenml-io/awesome-open-data-annotation" ["l"="44.856,25.765"]
"zzsza/Boostcamp-AI-Tech-Product-Serving" ["l"="-5.063,-23.26"]
"tunib-ai/large-scale-lm-tutorials" ["l"="-5.17,-23.244"]
"smilegate-ai/korean_smile_style_dataset" ["l"="-5.233,-23.213"]
"eubinecto/politely" ["l"="44.816,25.743"]
"smilegate-ai/korean_unsmile_dataset" ["l"="-5.18,-23.194"]
"xorbitsai/xorbits" ["l"="45.138,25.975"]
"mars-project/mars" ["l"="58.09,23.593"]
"xorbitsai/xoscar" ["l"="45.056,25.913"]
"xorbitsai/inference" ["l"="40.614,0.018"]
"muyuworks/myla" ["l"="45.08,25.927"]
"godaai/scale-py-zh" ["l"="45.074,25.945"]
"WarrenWen666/AI-Software-Startups" ["l"="8.137,-9.522"]
"jfloff/pywFM" ["l"="57.926,23.376"]
"scikit-learn-contrib/py-earth" ["l"="45.341,26.402"]
"civisanalytics/python-glmnet" ["l"="60.709,34.414"]
"sofienkaabar/deep-learning-for-finance" ["l"="45.382,27.189"]
"allero-io/allero" ["l"="45.165,25.244"]
"cesium-ml/cesium" ["l"="43.701,26.9"]
"kjw0612/awesome-rnn" ["l"="47.892,28.734"]
"wiseodd/generative-models" ["l"="45.835,29.145"]
"ZhangTP1996/TapTap" ["l"="44.833,26.605"]
"kathrinse/TabSurvey" ["l"="46.089,24.698"]
"clinicalml/TabLLM" ["l"="46.149,24.759"]
"tanfiona/LLM-on-Tabular-Data-Prediction-Table-Understanding-Data-Generation" ["l"="46.288,24.772"]
"erykml/Python-for-Finance-Cookbook-2E" ["l"="45.409,27.032"]
"PacktPublishing/Python-for-Finance-Cookbook" ["l"="-9.103,13.027"]
"tidy-finance/website" ["l"="45.407,27.07"]
"ModelOriented/survex" ["l"="40,35.701"]
"Mcompetitions/M5-methods" ["l"="45.032,24.286"]
"automl-conf/LatexTemplate" ["l"="45.892,26.35"]
"dssg/dsapp-reading-group" ["l"="44.881,26.079"]
"Renumics/sliceguard" ["l"="44.88,25.882"]
"Renumics/renumics-rag" ["l"="44.887,25.917"]
"gabrielchua/RAGxplorer" ["l"="41.058,0.723"]
"huggingface/setfit" ["l"="52.568,25.752"]
"mckinsey/vizro" ["l"="-0.582,15.766"]
"flekschas/jupyter-scatter" ["l"="43.412,24.468"]
"Renumics/mesh2vec" ["l"="44.891,25.89"]
"DeltaAnalytics/machine_learning_for_good" ["l"="44.774,26.026"]
"gboeing/ppde642" ["l"="41.424,24.126"]
"drivendataorg/competition-winners" ["l"="42.385,24.293"]
"compsocialscience/summer-institute" ["l"="39.884,33.916"]
"hadley/stats337" ["l"="40.567,35.394"]
"rayidghani/magicloops" ["l"="44.867,26.081"]
"psychothan/data-engineering-101" ["l"="48.71,28.482"]
"swager/randomForestCI" ["l"="45.307,26.521"]
"AmazaspShumik/sklearn-bayes" ["l"="39.233,36.011"]
"replicate/lora-training" ["l"="44.542,25.607"]
"replicate/lora-inference" ["l"="44.585,25.623"]
"replicate/cog-stable-diffusion" ["l"="44.768,25.678"]
"andreasjansson/cog-stable-diffusion" ["l"="44.696,25.663"]
"replicate/cog-sdxl" ["l"="44.65,25.645"]
"replicate/getting-started-nextjs-typescript" ["l"="44.616,25.532"]
"ploomber/sklearn-evaluation" ["l"="-0.283,15.748"]
"tmadl/sklearn-random-rotation-ensembles" ["l"="45.192,26.305"]
"tmadl/semisup-learn" ["l"="45.093,27.738"]
"approximatelabs/lambdaprompt" ["l"="45.039,26.278"]
"approximatelabs/sketch" ["l"="45.122,26.269"]
"pfnet-research/TabCSDI" ["l"="45.126,24.457"]
"MinkaiXu/TabDiff" ["l"="44.791,26.605"]
"ChaejeongLee/CoDi" ["l"="44.766,26.579"]
"ehoogeboom/multinomial_diffusion" ["l"="46.082,30.626"]
"amimaro/FuzzyLibrary" ["l"="45.779,26.797"]
"jackmpcollins/magentic" ["l"="40.936,0.801"]
"approximatelabs/datadm" ["l"="45.006,26.277"]
"PrefectHQ/marvin" ["l"="41.256,-3.98"]
"griptape-ai/griptape" ["l"="40.915,0.717"]
"ipyflow/ipyflow" ["l"="-0.494,15.793"]
"promptslab/Promptify" ["l"="43.938,0.65"]
"kjchalup/fcit" ["l"="44.552,27.182"]
"oxcsml/kerpy" ["l"="44.578,27.186"]
"Crunch-UQ4MI/neuraluq" ["l"="46.313,25.986"]
"microsoft/DPSDA" ["l"="44.755,26.644"]
"NextBrain-ai/nbsynthetic" ["l"="44.812,26.621"]
"GoogleCloudPlatform/kubeflow-distribution" ["l"="45.376,25.387"]
"jmikko/fair_ERM" ["l"="45.02,26.016"]
"VectorInstitute/laftr" ["l"="45.046,26.02"]
"mkusner/counterfactual-fairness" ["l"="45.003,26.005"]
"gpleiss/equalized_odds_and_calibration" ["l"="45.015,25.993"]
"FourthBrain/Branching-out-of-the-Notebook" ["l"="45.983,25.871"]
"FourthBrain/software-dev-for-ml-101" ["l"="45.966,25.868"]
"FourthBrain/FastAPI-for-Machine-Learning-Live-Demo" ["l"="45.978,25.852"]
"FourthBrain/Building-Generative-AI-Apps" ["l"="46.039,25.838"]
"FourthBrain/step-by-step-nlp-dialogpt-chatbot" ["l"="46.007,25.857"]
"morsapaes/mz-twitch-analytics" ["l"="45.957,25.914"]
"ServiceNow/stl-decomp-4j" ["l"="-23.301,12.897"]
"andreas-h/pyloess" ["l"="52.249,14.656"]
"Paulescu/hands-on-train-and-deploy-ml" ["l"="48.028,26.605"]
"iusztinpaul/hands-on-llms" ["l"="28.801,-26.962"]
"Densur/PyWoE" ["l"="45.722,26.729"]
"jpmml/jpmml-sparkml-xgboost" ["l"="45.896,26.624"]
"rjagerman/glint" ["l"="57.838,23.444"]
"zhengruifeng/spark-libFM" ["l"="57.893,23.393"]
"jupiters1117/mico" ["l"="45.46,26.489"]
"mutantturkey/PyFeast" ["l"="45.441,26.532"]
"dwave-examples/mutual-information-feature-selection" ["l"="45.462,26.503"]
"optuna/optuna-visualization-regression-tests" ["l"="45.831,26.422"]
"optuna/optuna-fast-fanova" ["l"="45.865,26.444"]
"UCL-SML/Doubly-Stochastic-DGP" ["l"="46.178,26.142"]
"thangbui/deepGP_approxEP" ["l"="46.153,26.127"]
"jameshensman/VFF" ["l"="46.17,26.126"]
"thangbui/geepee" ["l"="46.158,26.141"]
"FelixOpolka/Deep-Gaussian-Process" ["l"="46.156,26.155"]
"cambridge-mlg/sghmc_dgp" ["l"="46.17,26.16"]
"duvenaud/deep-limits" ["l"="46.164,26.088"]
"aryandeshwal/BODi" ["l"="46.017,26.169"]
"interpretml/FasterRisk" ["l"="44.833,26.338"]
"Code-Pop/Touring-Vue-Router-Composition-API" ["l"="44.153,25.921"]
"Code-Pop/pinia-fundamentals" ["l"="44.137,25.922"]
"sile/yamakan" ["l"="45.881,26.449"]
"CityU-AIM-Group/MultiModal-learning" ["l"="45.026,26.792"]
"DagsHub/3D-model-datasets" ["l"="45.138,25.472"]
"JayoungKim408/STaSy" ["l"="44.725,26.572"]
"JayoungKim408/SOS" ["l"="44.691,26.575"]
"Nixtla/coreforecast" ["l"="45.394,26.572"]
"Densur/LDPD" ["l"="45.735,26.755"]
"jimdowling/cjsurf" ["l"="45.308,25.443"]
"machinelearningnuremberg/DPL" ["l"="46.725,26.779"]
"facebookresearch/faiss" ["l"="53.099,26.041"]
"shenweichen/DeepCTR" ["l"="58.19,23.431"]
"airbnb/aerosolve" ["l"="47.953,28.806"]
"nteract/nteract" ["l"="43.523,23.861"]
"wesm/feather" ["l"="40.382,35.274"]
"tangjianpku/LINE" ["l"="52.915,16.177"]
"thomaskeck/FastBDT" ["l"="57.455,23.942"]
"yahoo/lopq" ["l"="-1.186,3.98"]
"facebookarchive/fbpca" ["l"="55.396,32.686"]
"ArdalanM/pyLightGBM" ["l"="57.449,23.977"]
"ChristianSch/numerflow" ["l"="-20.262,11.89"]
"tomlepaine/fast-wavenet" ["l"="37.112,2.568"]
"NickShahML/tensorflow_with_latest_papers" ["l"="46.15,27.801"]
"neonwatty/machine-learning-refined" ["l"="45.671,26.096"]
"JWarmenhoven/ISLR-python" ["l"="48.203,28.356"]
"probml/pml-book" ["l"="50.596,27.847"]
"ermongroup/cs228-notes" ["l"="45.817,26.067"]
"SciML/SciMLBook" ["l"="22.081,16.631"]
"Atcold/NYU-DLSP20" ["l"="47.601,28.39"]
"bfortuner/ml-glossary" ["l"="47.584,28.489"]
"awesome-mlss/awesome-mlss" ["l"="-3.781,23.43"]
"noahho/CAAFE" ["l"="46.32,26.584"]
"Sungwon-Han/FeatLLM" ["l"="46.347,26.6"]
"BauplanLabs/quack-reduce" ["l"="44.73,25.476"]
"BauplanLabs/no-jvm-wap-with-iceberg" ["l"="44.704,25.451"]
"AI-secure/aug-pe" ["l"="44.732,26.672"]
"SunnierLee/DP-ImaGen" ["l"="44.713,26.67"]
"Guang000/Awesome-Dataset-Distillation" ["l"="34.404,31.8"]
"JunweiLiang/awesome_lists" ["l"="-3.978,23.512"]
"ZigeW/data_management_LLM" ["l"="37.364,-0.131"]
"yfzhang114/Generalization-Causality" ["l"="50.862,37.904"]
"Eurus-Holmes/Awesome-Multimodal-Research" ["l"="48.677,32.034"]
"VainF/Awesome-Anything" ["l"="48.929,30.125"]
"dqxiu/ICL_PaperList" ["l"="36.777,-2.505"]
"zhoubolei/bolei_awesome_posters" ["l"="-3.929,23.549"]
"MLNLP-World/Paper-Writing-Tips" ["l"="-3.951,23.526"]
"Timothyxxx/Chain-of-ThoughtsPapers" ["l"="36.759,-2.46"]
"HillZhang1999/llm-hallucination-survey" ["l"="37.656,-6.917"]
"EpistasisLab/scikit-mdr" ["l"="45.414,26.489"]
"EpistasisLab/ReBATE" ["l"="45.397,26.485"]
"ClimbsRocks/machineJS" ["l"="35.975,3.183"]
"mendableai/mendable-nextjs-chatbot" ["l"="-3.261,-30.51"]
"replicate/cog-llama-template" ["l"="40.868,-3.929"]
"a16z-infra/llama2-chatbot" ["l"="40.96,-3.919"]
"PsychoinformaticsLab/pliers" ["l"="61.698,35.338"]
"brainiak/brainiak" ["l"="61.766,35.304"]
"ContextLab/hypertools-paper-notebooks" ["l"="45.384,26.016"]
"gallantlab/pycortex" ["l"="61.796,35.291"]
"hardmaru/estool" ["l"="59.253,17.759"]
"openai/evolution-strategies-starter" ["l"="57.409,18.235"]
"google/evojax" ["l"="59.232,17.426"]
"hardmaru/pytorch_notebooks" ["l"="46.436,7.781"]
"uber-research/deep-neuroevolution" ["l"="-35.386,-2.787"]
"flopach/digits-recognizer-kubeflow" ["l"="45.404,25.453"]
"robi56/awesome-bayesian-deep-learning" ["l"="22.411,15.331"]
"kyle-dorman/bayesian-neural-network-blogpost" ["l"="22.436,15.329"]
"igul222/improved_wgan_training" ["l"="45.897,29.126"]
"martinarjovsky/WassersteinGAN" ["l"="45.883,29.153"]
"bayesgroup/deepbayes-2018" ["l"="22.4,15.293"]
"sofienkaabar/misc-files" ["l"="45.373,27.211"]
"manuel-calzolari/shapicant" ["l"="45.382,26.449"]
"cedar-policy/cedar-spec" ["l"="45.131,25.044"]
"cedar-policy/rfcs" ["l"="45.121,25.057"]
"cedar-policy/cedar-examples" ["l"="45.141,25.065"]
"cedar-policy/cedar-docs" ["l"="45.109,25.042"]
"tcassou/causal_impact" ["l"="43.557,25.666"]
"jrmontag/STLDecompose" ["l"="52.257,14.621"]
"dafiti/causalimpact" ["l"="43.565,25.686"]
"damitkwr/ESRNN-GPU" ["l"="45.044,24.269"]
"luisdamiano/gsoc17-hhmm" ["l"="45.457,26.624"]
"laurencium/Causalinference" ["l"="43.609,25.592"]
"kudkudak/Growing-Neural-Gas" ["l"="44.802,26.006"]
"eloquentarduino/micromlgen" ["l"="-16.038,-42.507"]
"ajtulloch/sklearn-compiledtrees" ["l"="45.747,26.454"]
"konstantint/SKompiler" ["l"="45.715,26.446"]
"pplonski/keras2cpp" ["l"="50.205,33.342"]
"databricks/spark-sklearn" ["l"="-2.662,17.132"]
"HuaizhengZhang/Active-Learning-as-a-Service" ["l"="59.114,17.891"]
"MetaEvo/Awesome-MetaBBO" ["l"="46.177,26.428"]
"MetaEvo/psc4MetaBBO" ["l"="46.183,26.413"]
"LabGong/psc4ddea" ["l"="46.167,26.44"]
"cedar-policy/cedar" ["l"="45.122,25.081"]
"cedar-policy/cedar-java" ["l"="45.153,25.053"]
"cedar-policy/cedar-go" ["l"="45.09,25.049"]
"cedar-policy/cedar-awesome" ["l"="45.141,25.11"]
"k9securityio/cedar-py" ["l"="45.131,25.128"]
"hydro-project/hydro" ["l"="-0.458,15.105"]
"FourthBrain/Building-with-Instruction-Tuned-LLMs-A-Step-by-Step-Guide" ["l"="46.102,25.817"]
"HildoBijl/SONIG" ["l"="46.436,26.105"]
"unionai-oss/video-translation" ["l"="44.979,25.343"]
"gofireflyio/firefly-mcp" ["l"="45.197,25.161"]
"Irreel/AnyActions" ["l"="-35.453,20.273"]
"itlubber/pdtr" ["l"="45.671,26.673"]
"interpretml/LLM-Tabular-Memorization-Checker" ["l"="44.886,26.25"]
"2019ChenGong/DPImageBench" ["l"="44.694,26.683"]
"Nixtla/nixtlar" ["l"="45.401,26.588"]
"soda-inria/survival-analysis-benchmark" ["l"="45.009,26.567"]
"sylvaincom/astride" ["l"="45.084,26.436"]
"boniolp/dsymb-playground" ["l"="45.066,26.45"]
"uwheel/datafusion-uwheel" ["l"="45.275,25.265"]
"histogrammar/histogrammar-scala" ["l"="45.367,26.679"]
"iann0036/polai" ["l"="45.102,25.016"]
"james77777778/keras-aug" ["l"="45.776,25.602"]
"smastelini/mtr-toolkit" ["l"="45.742,26.503"]
"Renumics/lexio" ["l"="44.859,25.884"]
"explosion/spaCy" ["l"="52.919,25.931"]
"amplab/keystone" ["l"="-2.658,17.203"]
"awslabs/multi-model-server" ["l"="51.834,33.633"]
"Hydrospheredata/hydro-serving" ["l"="-2.186,14.659"]
"jupyter-incubator/sparkmagic" ["l"="-2.639,17.119"]
"uber/petastorm" ["l"="-2.71,17.193"]
"Far0n/kaggletils" ["l"="57.454,23.99"]
"geffy/tffm" ["l"="57.95,23.375"]
"kaz-Anova/StackNet" ["l"="57.449,24.024"]
"facebookresearch/StarSpace" ["l"="52.979,25.615"]
"SauceCat/pydqc" ["l"="-2.173,14.915"]
"jwkvam/bowtie" ["l"="43.683,24.031"]
"containers/omlmd" ["l"="45.346,25.485"]
"dmlc/minerva" ["l"="57.773,23.509"]
"pydata/patsy" ["l"="39.118,35.867"]
"kleveross/ormb" ["l"="8.118,-9.923"]
"deepgenerativemodels/notes" ["l"="23.015,14.441"]
"mila-iqia/welcome_tutorials" ["l"="23.519,14.799"]
"williamFalcon/DeepRLHacks" ["l"="57.433,18.15"]
"dustinvtran/ml-videos" ["l"="47.706,28.817"]
"rll/rllab" ["l"="57.483,18.133"]
"jaanli/variational-autoencoder" ["l"="46.151,29.319"]
"avehtari/BDA_course_Aalto" ["l"="39.277,35.86"]
"EugeneNdiaye/GAPSAFE_SGL" ["l"="44.671,27.021"]
"automl/labwatch" ["l"="45.533,25.677"]
"NathanRxl/concept_drift" ["l"="45.861,25.947"]
"rsdevigo/pyAdwin" ["l"="45.872,25.95"]
"ashokc/Concept-Drift-and-Model-Decay" ["l"="45.886,25.949"]
"josejimenezluna/pyGPGO" ["l"="45.861,26.304"]
"openml/openml.org" ["l"="45.895,26.391"]
"openml/openml-tutorial" ["l"="45.879,26.385"]
"mlcommons/croissant" ["l"="-1.685,-42.148"]
"HDI-Project/FeatureHub" ["l"="45.092,26.375"]
"scikit-adaptation/skada-bench" ["l"="44.856,26.764"]
"TorchDR/TorchDR" ["l"="44.866,26.777"]
"mind-inria/hidimstat" ["l"="44.886,26.782"]
"andrija-djurovic/adsfcr" ["l"="45.81,26.999"]
"kirthevasank/gp-parallel-ts" ["l"="45.956,26.226"]
"yunshengtian/DGEMO" ["l"="50.707,26.329"]
"wujian16/TwoStep-BayesOpt" ["l"="45.939,26.254"]
"markm541374/gpbo" ["l"="45.951,26.25"]
"gianlucatruda/TableDiffusion" ["l"="44.785,26.626"]
"lyg5623/lightgbm_predict4j" ["l"="45.871,26.646"]
"alipay/jpmml-sparkml-lightgbm" ["l"="45.886,26.659"]
"PacktPublishing/Time-Series-Analysis-with-Python-Cookbook-Second-Edition" ["l"="45.426,26.759"]
"Oracen-zz/MIDAS" ["l"="45.238,26.631"]
"penfever/TuneTables" ["l"="46.493,26.684"]
"automl/Drift-Resilient_TabPFN" ["l"="46.504,26.673"]
"wgurecky/StarVine" ["l"="44.725,26.525"]
"machinelearningnuremberg/QuickTune" ["l"="46.711,26.778"]
"unionai/unionai-examples" ["l"="44.965,25.328"]
"lektor-lol/lektor-lol.github.io" ["l"="46.506,26.66"]
"arayabrain/SimplestGANBlogpostCode" ["l"="45.91,26.465"]
"maciejkula/spotlight" ["l"="59.513,23.761"]
"joeddav/devol" ["l"="49.854,26.25"]
"MLWave/Kaggle-Ensemble-Guide" ["l"="57.491,24.051"]
"biolab/orange3" ["l"="45.519,26.037"]
"biolab/orange3-text" ["l"="60.566,23.914"]
"biolab/orange2" ["l"="45.607,25.9"]
"Bioconductor/bioc_git_transition" ["l"="44.361,26.272"]
"kr-prince/mRMR" ["l"="45.458,26.551"]
"bhklab/PymRMRe" ["l"="45.457,26.542"]
"chr2117216003/machine_learning" ["l"="45.458,26.534"]
"szagoruyko/functional-zoo" ["l"="51.274,29.945"]
"kevinzakka/tsne-viz" ["l"="44.834,26.196"]
"vzhong/dashboard" ["l"="44.823,26.174"]
"locuslab/qpth" ["l"="61.237,14.939"]
"DeltaAnalytics/machine_learning_resources" ["l"="44.731,26.011"]
"mljar/supertree" ["l"="44.982,26.56"]
"markvdw/gpflow-monitor" ["l"="45.927,26.207"]
"jndean/LossRider" ["l"="44.948,26.608"]
"GoogleCloudPlatform/tf-estimator-tutorials" ["l"="57.99,23.32"]
"ustunb/risk-slim" ["l"="44.925,26.262"]
"ustunb/slim-python" ["l"="44.861,26.257"]
"Hongyuy/sbrl" ["l"="44.937,26.332"]
"thuijskens/scikit-hyperband" ["l"="45.705,26.304"]
"akelleh/causality" ["l"="43.642,25.545"]
"GMC-DRL/Symbol" ["l"="46.202,26.44"]
"sods/netlab" ["l"="46.34,26.124"]
"SheffieldML/vargplvm" ["l"="46.364,26.126"]
"maziarraissi/TutorialGP" ["l"="21.892,16.165"]
"MarcoTodescato/Efficient-GP-Regression-via-Kalman-Filtering" ["l"="46.351,26.144"]
"omadson/fuzzy-c-means" ["l"="52.921,17.09"]
"Haghrah/PyIT2FLS" ["l"="45.76,26.544"]
"caigen/scikit-fuzzy-examples" ["l"="45.74,26.545"]
"brianrho/fpmatch" ["l"="46.194,25.678"]
"dmarienko/chaos" ["l"="44.781,26.432"]
"pandas-ml/pandas-ml" ["l"="49.241,28.61"]
"ZesenChen/multi-label-dataset" ["l"="46.011,26.011"]
"Eilene/HMM-python" ["l"="45.79,26.333"]
"aehuynh/hidden-markov-model" ["l"="52.841,27.65"]
"JINGEWU/Stock-Market-Trend-Analysis-Using-HMM-LSTM" ["l"="-52.419,14.334"]
"miaofu/HMM-and-Bayesian-HMM" ["l"="45.776,26.325"]
"christopherjenness/DBCV" ["l"="45.307,27.001"]
"FelSiq/DBCV" ["l"="45.307,27.025"]
"awslabs/amazon-denseclus" ["l"="45.295,27.044"]
"google-ai-edge/ai-edge-torch" ["l"="49.817,29.931"]
"google-ai-edge/model-explorer" ["l"="39.148,-0.311"]
"google-ai-edge/ai-edge-quantizer" ["l"="45.662,25.457"]
"dfagnan/QuantileRandomForestRegressor" ["l"="45.511,26.541"]
"civisanalytics/civisml-extensions" ["l"="45.528,26.565"]
"jasperroebroek/sklearn-quantile" ["l"="45.519,26.545"]
"PerformanceEstimation/Learning-Performance-Estimation" ["l"="44.826,26.95"]
"AdrienTaylor/AccelerationMonograph" ["l"="44.809,26.949"]
"zi-w/Max-value-Entropy-Search" ["l"="46.161,26.322"]
"MethodsOfMachineLearning/entropy-search" ["l"="46.2,26.332"]
"callous-youth/IAPTT-GM" ["l"="46.3,26.43"]
"abheesht17/whisper-keras" ["l"="45.76,25.585"]
"kjchalup/independence_test" ["l"="44.54,27.195"]
"WillKoehrsen/Hands-On-Machine-Learning" ["l"="45.915,26.836"]
"blaze/blaze" ["l"="43.73,23.808"]
"apache/tvm" ["l"="50.13,29.773"]
"NVIDIA/Megatron-LM" ["l"="38.862,-0.695"]
"tensorflow/tfjs-core" ["l"="-32.63,-35.84"]
"MrNothing/AI-Blocks" ["l"="45.615,29.223"]
"oarriaga/face_classification" ["l"="55.996,27.258"]
"facebookresearch/ParlAI" ["l"="53.115,25.785"]
"allenai/allennlp" ["l"="53.002,25.738"]
"apachecn/fe4ml-zh" ["l"="50.649,28.054"]
"PacktPublishing/Feature-Engineering-Made-Easy" ["l"="45.644,26.502"]
"PacktPublishing/Python-Feature-Engineering-Cookbook" ["l"="47.153,24.646"]
"Smilexuhc/Data-Competition-TopSolution" ["l"="50.603,28.086"]
"dipanjanS/practical-machine-learning-with-python" ["l"="52.727,25.483"]
"PacktPublishing/Python-Deep-Learning-Cookbook" ["l"="47.342,28.403"]
"DustinAlandzes/machine-learning-with-python-cookbook-notes" ["l"="45.803,26.776"]
"tensorflow/lucid" ["l"="51.048,29.542"]
"OryxProject/oryx" ["l"="-2.55,17.203"]
"spotify/zoltar" ["l"="-2.95,18.432"]
"RedisLabsModules/redisml" ["l"="9.383,-4.024"]
"GAA-UAM/scikit-fda" ["l"="45.277,26.772"]
"StevenGolovkine/FDApy" ["l"="45.263,26.821"]
"jdtuck/fdasrsf_python" ["l"="45.285,26.824"]
"ptonner/pyFDA" ["l"="45.278,26.802"]
"ayhandis/creditR" ["l"="45.698,26.625"]
"luisdamiano/BayesHMM" ["l"="45.447,26.687"]
"ModelChimp/modelchimp" ["l"="45.618,25.787"]
"jbrea/BayesianOptimization.jl" ["l"="22.11,16.908"]
"HIPS/hypergrad" ["l"="44.928,27.591"]
"cosanlab/nltools" ["l"="61.678,35.32"]
"adamhaber/pybrms" ["l"="45.017,26.649"]
"lnccbrown/HSSM" ["l"="60.968,34.256"]
"zhongcaiming/clustering-ensemble" ["l"="45.587,26.558"]
"puolival/multipy" ["l"="45.102,26.567"]
"sherbold/autorank" ["l"="45.121,26.558"]
"hfawaz/cd-diagram" ["l"="43.643,26.848"]
"citiususc/stac" ["l"="45.142,26.551"]
"mksadoughi/Multi-output-Gaussian-Process" ["l"="46.238,26.174"]
"guillaume-chevalier/Hyperopt-Keras-CNN-CIFAR-100" ["l"="45.801,26.468"]
"automl/DAC" ["l"="45.939,26.383"]
"nlhepler/mrmr" ["l"="45.431,26.577"]
}