digraph G {
"haskellcamargo/sclack" -> "jpbruinsslot/slack-term" ["e"=1]
"haskellcamargo/sclack" -> "wee-slack/wee-slack" ["e"=1]
"haskellcamargo/sclack" -> "quack/quack" ["e"=1]
"haskellcamargo/sclack" -> "google/gif-for-cli"
"haskellcamargo/sclack" -> "haskellcamargo/gemidao-do-zap" ["e"=1]
"haskellcamargo/sclack" -> "sunainapai/makesite"
"haskellcamargo/sclack" -> "atlanhq/camelot"
"haskellcamargo/sclack" -> "danmacnish/cartoonify"
"haskellcamargo/sclack" -> "shobrook/rebound"
"haskellcamargo/sclack" -> "Squarespace/datasheets"
"haskellcamargo/sclack" -> "klaudiosinani/taskbook" ["e"=1]
"haskellcamargo/sclack" -> "Greenwolf/social_mapper" ["e"=1]
"haskellcamargo/sclack" -> "Erotemic/ubelt"
"haskellcamargo/sclack" -> "sgreben/jp" ["e"=1]
"haskellcamargo/sclack" -> "thoppe/pixelhouse"
"euske/pdfminer" -> "pdfminer/pdfminer.six"
"euske/pdfminer" -> "py-pdf/pypdf"
"euske/pdfminer" -> "jsvine/pdfplumber"
"euske/pdfminer" -> "pmaupin/pdfrw"
"euske/pdfminer" -> "chezou/tabula-py"
"euske/pdfminer" -> "deanmalmgren/textract"
"euske/pdfminer" -> "coolwanglu/pdf2htmlEX"
"euske/pdfminer" -> "tabulapdf/tabula"
"euske/pdfminer" -> "timClicks/slate"
"euske/pdfminer" -> "python-openxml/python-docx"
"euske/pdfminer" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"euske/pdfminer" -> "atlanhq/camelot"
"euske/pdfminer" -> "seatgeek/fuzzywuzzy" ["e"=1]
"euske/pdfminer" -> "pymupdf/PyMuPDF"
"euske/pdfminer" -> "clips/pattern" ["e"=1]
"ryu577/pyray" -> "tvytlx/render-py"
"ryu577/pyray" -> "thoppe/pixelhouse"
"ryu577/pyray" -> "avidLearnerInProgress/pyCAIR"
"ryu577/pyray" -> "dizballanze/m00dbot"
"ryu577/pyray" -> "Squarespace/datasheets"
"ryu577/pyray" -> "Erotemic/ubelt"
"ryu577/pyray" -> "mraza007/videodownloader"
"ryu577/pyray" -> "RameshAditya/asciify"
"ryu577/pyray" -> "danmacnish/cartoonify"
"ryu577/pyray" -> "cosme12/SimpleCoin"
"ryu577/pyray" -> "dantaki/vapeplot" ["e"=1]
"ryu577/pyray" -> "Aditya-Khadilkar/Face-tracking-with-Anime-characters"
"ryu577/pyray" -> "M4cs/BabySploit"
"ryu577/pyray" -> "BasioMeusPuga/Lector"
"ryu577/pyray" -> "cuducos/twitter-cleanup"
"claird/PyPDF4" -> "pmaupin/pdfrw"
"mwilliamson/python-mammoth" -> "CenterForOpenScience/pydocx"
"mwilliamson/python-mammoth" -> "mwilliamson/mammoth.js" ["e"=1]
"mwilliamson/python-mammoth" -> "ShayHill/docx2python"
"mwilliamson/python-mammoth" -> "ankushshah89/python-docx2txt"
"mwilliamson/python-mammoth" -> "elapouya/python-docx-template"
"mwilliamson/python-mammoth" -> "python-openxml/python-docx"
"mwilliamson/python-mammoth" -> "bradmontgomery/word2html"
"mwilliamson/python-mammoth" -> "microsoft/Simplify-Docx"
"mwilliamson/python-mammoth" -> "matthewwithanm/python-markdownify" ["e"=1]
"mwilliamson/python-mammoth" -> "mwilliamson/java-mammoth"
"mwilliamson/python-mammoth" -> "weblyzard/inscriptis" ["e"=1]
"mwilliamson/python-mammoth" -> "benbalter/word-to-markdown" ["e"=1]
"mwilliamson/python-mammoth" -> "dougmassay/docximport-sigil-plugin"
"mwilliamson/python-mammoth" -> "pqzx/html2docx"
"mwilliamson/python-mammoth" -> "JessicaTegner/pypandoc" ["e"=1]
"madmaze/pytesseract" -> "tesseract-ocr/tesseract" ["e"=1]
"madmaze/pytesseract" -> "sirfz/tesserocr" ["e"=1]
"madmaze/pytesseract" -> "JaidedAI/EasyOCR" ["e"=1]
"madmaze/pytesseract" -> "py-pdf/pypdf"
"madmaze/pytesseract" -> "pdfminer/pdfminer.six"
"madmaze/pytesseract" -> "pymupdf/PyMuPDF"
"madmaze/pytesseract" -> "tesseract-ocr/tessdata"
"madmaze/pytesseract" -> "python-pillow/Pillow" ["e"=1]
"madmaze/pytesseract" -> "Belval/pdf2image"
"madmaze/pytesseract" -> "opencv/opencv-python" ["e"=1]
"madmaze/pytesseract" -> "UB-Mannheim/tesseract"
"madmaze/pytesseract" -> "ocropus-archive/DUP-ocropy" ["e"=1]
"madmaze/pytesseract" -> "asweigart/pyautogui" ["e"=1]
"madmaze/pytesseract" -> "jsvine/pdfplumber"
"madmaze/pytesseract" -> "seatgeek/fuzzywuzzy" ["e"=1]
"Andromeda1957/netpwn" -> "OffXec/TheDoc"
"Andromeda1957/netpwn" -> "Eitenne/roxysploit"
"ArtifexSoftware/pdf2docx" -> "python-fan/pdf2word" ["e"=1]
"ArtifexSoftware/pdf2docx" -> "pymupdf/PyMuPDF"
"ArtifexSoftware/pdf2docx" -> "jsvine/pdfplumber"
"ArtifexSoftware/pdf2docx" -> "python-openxml/python-docx"
"ArtifexSoftware/pdf2docx" -> "pikepdf/pikepdf"
"ArtifexSoftware/pdf2docx" -> "camelot-dev/camelot"
"ArtifexSoftware/pdf2docx" -> "py-pdf/pypdf"
"ArtifexSoftware/pdf2docx" -> "opendatalab/PDF-Extract-Kit" ["e"=1]
"ArtifexSoftware/pdf2docx" -> "Ucas-HaoranWei/GOT-OCR2.0" ["e"=1]
"ArtifexSoftware/pdf2docx" -> "pdfminer/pdfminer.six"
"ArtifexSoftware/pdf2docx" -> "Belval/pdf2image"
"ArtifexSoftware/pdf2docx" -> "wmjordan/PDFPatcher" ["e"=1]
"ArtifexSoftware/pdf2docx" -> "RapidAI/RapidOCR" ["e"=1]
"ArtifexSoftware/pdf2docx" -> "joschuck/matrix-webcam" ["e"=1]
"ArtifexSoftware/pdf2docx" -> "reloadware/reloadium" ["e"=1]
"reingart/pyfpdf" -> "py-pdf/fpdf2"
"reingart/pyfpdf" -> "JazzCore/python-pdfkit" ["e"=1]
"reingart/pyfpdf" -> "pmaupin/pdfrw"
"reingart/pyfpdf" -> "py-pdf/pypdf"
"reingart/pyfpdf" -> "Belval/pdf2image"
"reingart/pyfpdf" -> "xhtml2pdf/xhtml2pdf" ["e"=1]
"reingart/pyfpdf" -> "web2py/pydal" ["e"=1]
"reingart/pyfpdf" -> "Kozea/WeasyPrint" ["e"=1]
"reingart/pyfpdf" -> "web2py/web2py" ["e"=1]
"reingart/pyfpdf" -> "WhyNotHugo/python-barcode" ["e"=1]
"reingart/pyfpdf" -> "tefra/xsdata" ["e"=1]
"reingart/pyfpdf" -> "python-excel/xlwt"
"reingart/pyfpdf" -> "jorisschellekens/borb"
"reingart/pyfpdf" -> "pikepdf/pikepdf"
"reingart/pyfpdf" -> "Setasign/FPDF" ["e"=1]
"mowolf/ChatAnalyzer" -> "PetengDedet/WhatsApp-Analyzer"
"mowolf/ChatAnalyzer" -> "SpiritFour/whatsanalyze"
"mowolf/ChatAnalyzer" -> "Pustur/whatsapp-chat-parser" ["e"=1]
"mowolf/ChatAnalyzer" -> "empicano/whatsapp-analyzer"
"google/gif-for-cli" -> "RameshAditya/asciify"
"google/gif-for-cli" -> "haskellcamargo/sclack"
"google/gif-for-cli" -> "shobrook/rebound"
"google/gif-for-cli" -> "Squarespace/datasheets"
"google/gif-for-cli" -> "danmacnish/cartoonify"
"google/gif-for-cli" -> "Netflix/pollyjs" ["e"=1]
"google/gif-for-cli" -> "vibora-io/vibora" ["e"=1]
"google/gif-for-cli" -> "mkaz/termgraph" ["e"=1]
"google/gif-for-cli" -> "santinic/pampy" ["e"=1]
"google/gif-for-cli" -> "browsh-org/browsh" ["e"=1]
"google/gif-for-cli" -> "Erotemic/ubelt"
"google/gif-for-cli" -> "atlanhq/camelot"
"google/gif-for-cli" -> "nbedos/termtosvg" ["e"=1]
"google/gif-for-cli" -> "snipsco/snips-nlu"
"google/gif-for-cli" -> "thoppe/pixelhouse"
"xlwings/xlwings" -> "jmcnamara/XlsxWriter"
"xlwings/xlwings" -> "pyexcel/pyexcel"
"xlwings/xlwings" -> "python-excel/xlrd"
"xlwings/xlwings" -> "ericremoreynolds/excelpython"
"xlwings/xlwings" -> "Excel-DNA/ExcelDna" ["e"=1]
"xlwings/xlwings" -> "python-openxml/python-docx"
"xlwings/xlwings" -> "mhammond/pywin32" ["e"=1]
"xlwings/xlwings" -> "xltrail/git-xl" ["e"=1]
"xlwings/xlwings" -> "pywinauto/pywinauto" ["e"=1]
"xlwings/xlwings" -> "rubberduck-vba/Rubberduck" ["e"=1]
"xlwings/xlwings" -> "dgorissen/pycel"
"xlwings/xlwings" -> "fzumstein/python-for-excel"
"xlwings/xlwings" -> "VBA-tools/VBA-Web" ["e"=1]
"xlwings/xlwings" -> "quantopian/qgrid" ["e"=1]
"xlwings/xlwings" -> "VBA-tools/VBA-JSON" ["e"=1]
"sunainapai/makesite" -> "BasioMeusPuga/Lector"
"sunainapai/makesite" -> "bisguzar/twitter-scraper" ["e"=1]
"sunainapai/makesite" -> "Erotemic/ubelt"
"sunainapai/makesite" -> "getnikola/nikola" ["e"=1]
"sunainapai/makesite" -> "snipsco/snips-nlu"
"sunainapai/makesite" -> "RameshAditya/asciify"
"sunainapai/makesite" -> "Squarespace/datasheets"
"sunainapai/makesite" -> "thoppe/pixelhouse"
"sunainapai/makesite" -> "M4cs/BabySploit"
"sunainapai/makesite" -> "atlanhq/camelot"
"sunainapai/makesite" -> "mm-mansour/Fast-Pandas" ["e"=1]
"sunainapai/makesite" -> "haskellcamargo/sclack"
"sunainapai/makesite" -> "dizballanze/m00dbot"
"sunainapai/makesite" -> "ryu577/pyray"
"sunainapai/makesite" -> "YoongiKim/AutoCrawler"
"mileshenrichs/spotify-playlist-generator" -> "Squarespace/datasheets"
"mileshenrichs/spotify-playlist-generator" -> "Erotemic/ubelt"
"mileshenrichs/spotify-playlist-generator" -> "cuducos/twitter-cleanup"
"mileshenrichs/spotify-playlist-generator" -> "mraza007/videodownloader"
"mileshenrichs/spotify-playlist-generator" -> "sdushantha/soundcloud-dl"
"mileshenrichs/spotify-playlist-generator" -> "dizballanze/m00dbot"
"mileshenrichs/spotify-playlist-generator" -> "thoppe/pixelhouse"
"mileshenrichs/spotify-playlist-generator" -> "tvytlx/render-py"
"mileshenrichs/spotify-playlist-generator" -> "M4cs/BabySploit"
"mileshenrichs/spotify-playlist-generator" -> "YouTubeDownload/YouTubeDownload"
"mileshenrichs/spotify-playlist-generator" -> "rianhunter/dbxfs"
"shobrook/rebound" -> "hardikvasa/google-images-download" ["e"=1]
"shobrook/rebound" -> "s0md3v/Photon" ["e"=1]
"shobrook/rebound" -> "snipsco/snips-nlu"
"shobrook/rebound" -> "RameshAditya/asciify"
"shobrook/rebound" -> "xonsh/xonsh" ["e"=1]
"shobrook/rebound" -> "cosmicpython/book" ["e"=1]
"shobrook/rebound" -> "atlanhq/camelot"
"shobrook/rebound" -> "learning-zone/python-basics" ["e"=1]
"shobrook/rebound" -> "danmacnish/cartoonify"
"shobrook/rebound" -> "MTrajK/coding-problems" ["e"=1]
"shobrook/rebound" -> "cosme12/SimpleCoin"
"shobrook/rebound" -> "hannob/snallygaster" ["e"=1]
"shobrook/rebound" -> "Greenwolf/social_mapper" ["e"=1]
"shobrook/rebound" -> "google/gif-for-cli"
"shobrook/rebound" -> "swaroopch/byte-of-python" ["e"=1]
"cosme12/SimpleCoin" -> "Ekultek/WhatWaf" ["e"=1]
"cosme12/SimpleCoin" -> "ryu577/pyray"
"cosme12/SimpleCoin" -> "shobrook/rebound"
"cosme12/SimpleCoin" -> "M4cs/BabySploit"
"cosme12/SimpleCoin" -> "dvf/blockchain" ["e"=1]
"cosme12/SimpleCoin" -> "spipm/crackcoin" ["e"=1]
"cosme12/SimpleCoin" -> "diego-vicente/som-tsp" ["e"=1]
"cosme12/SimpleCoin" -> "NVIDIA/vid2vid" ["e"=1]
"cosme12/SimpleCoin" -> "richardkiss/pycoin" ["e"=1]
"cosme12/SimpleCoin" -> "Greenwolf/social_mapper" ["e"=1]
"cosme12/SimpleCoin" -> "danmacnish/cartoonify"
"cosme12/SimpleCoin" -> "prettier/plugin-python"
"cosme12/SimpleCoin" -> "snipsco/snips-nlu"
"cosme12/SimpleCoin" -> "conradoqg/naivecoin" ["e"=1]
"cosme12/SimpleCoin" -> "satwikkansal/python_blockchain_app" ["e"=1]
"tesseract-ocr/tessdata_fast" -> "tesseract-ocr/tessdata_best"
"tesseract-ocr/tessdata_fast" -> "tesseract-ocr/test"
"tesseract-ocr/tessdata_fast" -> "tesseract-ocr/tesstrain"
"tesseract-ocr/tessdata_fast" -> "tesseract-ocr/langdata"
"tesseract-ocr/tessdata_fast" -> "tesseract-ocr/langdata_lstm"
"tesseract-ocr/tessdata_fast" -> "tesseract-ocr/tessdata"
"tesseract-ocr/tessdata_fast" -> "DanBloomberg/leptonica"
"tesseract-ocr/tessdata_fast" -> "tesseract-ocr/tesseract-ocr.github.io"
"tesseract-ocr/tessdata_fast" -> "charlesw/tesseract" ["e"=1]
"rianhunter/dbxfs" -> "Squarespace/datasheets"
"rianhunter/dbxfs" -> "mraza007/videodownloader"
"rianhunter/dbxfs" -> "avidLearnerInProgress/pyCAIR"
"rianhunter/dbxfs" -> "dizballanze/m00dbot"
"camelot-dev/camelot" -> "camelot-dev/excalibur"
"camelot-dev/camelot" -> "chezou/tabula-py"
"camelot-dev/camelot" -> "jsvine/pdfplumber"
"camelot-dev/camelot" -> "atlanhq/camelot"
"camelot-dev/camelot" -> "pdfminer/pdfminer.six"
"camelot-dev/camelot" -> "tabulapdf/tabula"
"camelot-dev/camelot" -> "pymupdf/PyMuPDF"
"camelot-dev/camelot" -> "py-pdf/pypdf"
"camelot-dev/camelot" -> "microsoft/table-transformer" ["e"=1]
"camelot-dev/camelot" -> "tabulapdf/tabula-java"
"camelot-dev/camelot" -> "Layout-Parser/layout-parser" ["e"=1]
"camelot-dev/camelot" -> "DevashishPrasad/CascadeTabNet" ["e"=1]
"camelot-dev/camelot" -> "mindee/doctr" ["e"=1]
"camelot-dev/camelot" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"camelot-dev/camelot" -> "Unstructured-IO/unstructured" ["e"=1]
"Erotemic/xdoctest" -> "Erotemic/ubelt"
"Erotemic/xdoctest" -> "Kitware/kwcoco"
"BasioMeusPuga/Lector" -> "babluboy/bookworm" ["e"=1]
"BasioMeusPuga/Lector" -> "sunainapai/makesite"
"BasioMeusPuga/Lector" -> "snipsco/snips-nlu"
"BasioMeusPuga/Lector" -> "M4cs/BabySploit"
"BasioMeusPuga/Lector" -> "johnfactotum/foliate" ["e"=1]
"BasioMeusPuga/Lector" -> "Squarespace/datasheets"
"BasioMeusPuga/Lector" -> "thoppe/pixelhouse"
"BasioMeusPuga/Lector" -> "ryu577/pyray"
"BasioMeusPuga/Lector" -> "Erotemic/ubelt"
"BasioMeusPuga/Lector" -> "michaldaniel/ebook-viewer" ["e"=1]
"BasioMeusPuga/Lector" -> "pgaskin/BookBrowser" ["e"=1]
"BasioMeusPuga/Lector" -> "RameshAditya/asciify"
"BasioMeusPuga/Lector" -> "mraza007/videodownloader"
"BasioMeusPuga/Lector" -> "dizballanze/m00dbot"
"BasioMeusPuga/Lector" -> "danmacnish/cartoonify"
"tesseract-ocr/tesstrain" -> "tesseract-ocr/langdata_lstm"
"tesseract-ocr/tesstrain" -> "tesseract-ocr/tessdata_best"
"tesseract-ocr/tesstrain" -> "Shreeshrii/tess5train-fonts"
"tesseract-ocr/tesstrain" -> "mittagessen/kraken" ["e"=1]
"tesseract-ocr/tesstrain" -> "nguyenq/jTessBoxEditor"
"tesseract-ocr/tesstrain" -> "OCR4all/LAREX" ["e"=1]
"tesseract-ocr/tesstrain" -> "tesseract-ocr/langdata"
"tesseract-ocr/tesstrain" -> "OCR-D/ocrd_all" ["e"=1]
"tesseract-ocr/tesstrain" -> "Calamari-OCR/calamari" ["e"=1]
"tesseract-ocr/tesstrain" -> "tesseract-ocr/tessdata_fast"
"tesseract-ocr/tesstrain" -> "Shreeshrii/tessdata_shreetest"
"tesseract-ocr/tesstrain" -> "buliasz/tesstrain-windows-gui"
"tesseract-ocr/tesstrain" -> "cneud/ocr-gt" ["e"=1]
"tesseract-ocr/tesstrain" -> "tesseract-ocr/docs"
"tesseract-ocr/tesstrain" -> "OCR-D/core" ["e"=1]
"YoongiKim/AutoCrawler" -> "Squarespace/datasheets"
"YoongiKim/AutoCrawler" -> "hardikvasa/google-images-download" ["e"=1]
"YoongiKim/AutoCrawler" -> "M4cs/BabySploit"
"YoongiKim/AutoCrawler" -> "mikeyy/nonoCAPTCHA"
"YoongiKim/AutoCrawler" -> "Erotemic/ubelt"
"YoongiKim/AutoCrawler" -> "QianyanTech/Image-Downloader" ["e"=1]
"YoongiKim/AutoCrawler" -> "golbin/TensorFlow-Tutorials" ["e"=1]
"YoongiKim/AutoCrawler" -> "RameshAditya/asciify"
"YoongiKim/AutoCrawler" -> "mraza007/videodownloader"
"YoongiKim/AutoCrawler" -> "hellock/icrawler"
"YoongiKim/AutoCrawler" -> "GunhoChoi/PyTorch-FastCampus" ["e"=1]
"YoongiKim/AutoCrawler" -> "kakao/khaiii" ["e"=1]
"YoongiKim/AutoCrawler" -> "avidLearnerInProgress/pyCAIR"
"YoongiKim/AutoCrawler" -> "atlanhq/camelot"
"YoongiKim/AutoCrawler" -> "thoppe/pixelhouse"
"danmacnish/cartoonify" -> "thoppe/pixelhouse"
"danmacnish/cartoonify" -> "avidLearnerInProgress/pyCAIR"
"danmacnish/cartoonify" -> "ryu577/pyray"
"danmacnish/cartoonify" -> "RameshAditya/asciify"
"danmacnish/cartoonify" -> "dizballanze/m00dbot"
"danmacnish/cartoonify" -> "shobrook/rebound"
"danmacnish/cartoonify" -> "mraza007/videodownloader"
"danmacnish/cartoonify" -> "Squarespace/datasheets"
"danmacnish/cartoonify" -> "mikeyy/nonoCAPTCHA"
"danmacnish/cartoonify" -> "nbedos/termtosvg" ["e"=1]
"danmacnish/cartoonify" -> "snipsco/snips-nlu"
"danmacnish/cartoonify" -> "googlecreativelab/quickdraw-dataset" ["e"=1]
"danmacnish/cartoonify" -> "BasioMeusPuga/Lector"
"danmacnish/cartoonify" -> "google/gif-for-cli"
"danmacnish/cartoonify" -> "atlanhq/camelot"
"pikepdf/pikepdf" -> "qpdf/qpdf" ["e"=1]
"pikepdf/pikepdf" -> "pdfarranger/pdfarranger" ["e"=1]
"pikepdf/pikepdf" -> "py-pdf/pypdf"
"pikepdf/pikepdf" -> "pymupdf/PyMuPDF"
"pikepdf/pikepdf" -> "pdfminer/pdfminer.six"
"pikepdf/pikepdf" -> "pmaupin/pdfrw"
"pikepdf/pikepdf" -> "jorisschellekens/borb"
"pikepdf/pikepdf" -> "camelot-dev/camelot"
"pikepdf/pikepdf" -> "jsvine/pdfplumber"
"pikepdf/pikepdf" -> "Belval/pdf2image"
"pikepdf/pikepdf" -> "ArtifexSoftware/pdf2docx"
"pikepdf/pikepdf" -> "pypdfium2-team/pypdfium2"
"pikepdf/pikepdf" -> "jalan/pdftotext"
"pikepdf/pikepdf" -> "chezou/tabula-py"
"pikepdf/pikepdf" -> "claird/PyPDF4"
"camelot-dev/excalibur" -> "camelot-dev/camelot"
"camelot-dev/excalibur" -> "atlanhq/camelot"
"camelot-dev/excalibur" -> "chezou/tabula-py"
"camelot-dev/excalibur" -> "tabulapdf/tabula"
"camelot-dev/excalibur" -> "tabulapdf/tabula-java"
"camelot-dev/excalibur" -> "jsvine/pdfplumber"
"camelot-dev/excalibur" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"camelot-dev/excalibur" -> "microsoft/table-transformer" ["e"=1]
"camelot-dev/excalibur" -> "pdfminer/pdfminer.six"
"camelot-dev/excalibur" -> "doc-analysis/TableBank" ["e"=1]
"camelot-dev/excalibur" -> "ashima/pdf-table-extract"
"camelot-dev/excalibur" -> "DevashishPrasad/CascadeTabNet" ["e"=1]
"camelot-dev/excalibur" -> "jcushman/pdfquery"
"camelot-dev/excalibur" -> "euske/pdfminer"
"camelot-dev/excalibur" -> "kermitt2/grobid" ["e"=1]
"tvytlx/render-py" -> "thoppe/pixelhouse"
"tvytlx/render-py" -> "ryu577/pyray"
"tvytlx/render-py" -> "dizballanze/m00dbot"
"tvytlx/render-py" -> "cuducos/twitter-cleanup"
"tvytlx/render-py" -> "mraza007/videodownloader"
"tvytlx/render-py" -> "avidLearnerInProgress/pyCAIR"
"ericgazoni/openpyxl" -> "python-excel/xlutils"
"ericgazoni/openpyxl" -> "reingart/vb2py"
"python-openxml/python-docx" -> "elapouya/python-docx-template"
"python-openxml/python-docx" -> "scanny/python-pptx"
"python-openxml/python-docx" -> "py-pdf/pypdf"
"python-openxml/python-docx" -> "mikemaccana/python-docx"
"python-openxml/python-docx" -> "pymupdf/PyMuPDF"
"python-openxml/python-docx" -> "jmcnamara/XlsxWriter"
"python-openxml/python-docx" -> "pdfminer/pdfminer.six"
"python-openxml/python-docx" -> "xlwings/xlwings"
"python-openxml/python-docx" -> "euske/pdfminer"
"python-openxml/python-docx" -> "ankushshah89/python-docx2txt"
"python-openxml/python-docx" -> "jsvine/pdfplumber"
"python-openxml/python-docx" -> "mhammond/pywin32" ["e"=1]
"python-openxml/python-docx" -> "python-excel/xlrd"
"python-openxml/python-docx" -> "deanmalmgren/textract"
"python-openxml/python-docx" -> "ArtifexSoftware/pdf2docx"
"wagoodman/bashful" -> "wagoodman/bridgy"
"wagoodman/bashful" -> "hunterloftis/pbr" ["e"=1]
"wagoodman/bashful" -> "mkchoi212/fac" ["e"=1]
"wagoodman/bashful" -> "bradleyjkemp/memviz" ["e"=1]
"wagoodman/bashful" -> "tj/mmake" ["e"=1]
"wagoodman/bashful" -> "asticode/go-astibob"
"wagoodman/bashful" -> "weaveworks/footloose" ["e"=1]
"wagoodman/bashful" -> "kubicorn/kubicorn" ["e"=1]
"sdushantha/soundcloud-dl" -> "mraza007/videodownloader"
"sdushantha/soundcloud-dl" -> "RameshAditya/asciify"
"sdushantha/soundcloud-dl" -> "thoppe/pixelhouse"
"sdushantha/soundcloud-dl" -> "cuducos/twitter-cleanup"
"sdushantha/soundcloud-dl" -> "Squarespace/datasheets"
"sdushantha/soundcloud-dl" -> "mileshenrichs/spotify-playlist-generator"
"yakovmeister/pdf2image" -> "ol-th/pdf-img-convert.js"
"yakovmeister/pdf2image" -> "mooz/node-pdf-image"
"yakovmeister/pdf2image" -> "dichovsky/pdf-to-png-converter"
"yakovmeister/pdf2image" -> "k-yle/pdf-to-img"
"yakovmeister/pdf2image" -> "ffalt/pdf.js-extract"
"tesseract-ocr/tessdata_best" -> "tesseract-ocr/tessdata_fast"
"tesseract-ocr/tessdata_best" -> "tesseract-ocr/tessdata"
"tesseract-ocr/tessdata_best" -> "tesseract-ocr/tesstrain"
"tesseract-ocr/tessdata_best" -> "tesseract-ocr/tessdoc"
"tesseract-ocr/tessdata_best" -> "UB-Mannheim/tesseract"
"tesseract-ocr/tessdata_best" -> "tesseract-ocr/langdata"
"tesseract-ocr/tessdata_best" -> "DanBloomberg/leptonica"
"tesseract-ocr/tessdata_best" -> "tesseract-ocr/langdata_lstm"
"tesseract-ocr/tessdata_best" -> "nguyenq/tess4j" ["e"=1]
"tesseract-ocr/tessdata_best" -> "sirfz/tesserocr" ["e"=1]
"tesseract-ocr/tessdata_best" -> "madmaze/pytesseract"
"tesseract-ocr/tessdata_best" -> "Calamari-OCR/calamari" ["e"=1]
"tesseract-ocr/tessdata_best" -> "tesseract-ocr/tesseract" ["e"=1]
"tesseract-ocr/tessdata_best" -> "nguyenq/jTessBoxEditor"
"tesseract-ocr/tessdata_best" -> "otiai10/gosseract" ["e"=1]
"M4cs/BabySploit" -> "Erotemic/ubelt"
"M4cs/BabySploit" -> "mraza007/videodownloader"
"M4cs/BabySploit" -> "RameshAditya/asciify"
"M4cs/BabySploit" -> "avidLearnerInProgress/pyCAIR"
"M4cs/BabySploit" -> "Squarespace/datasheets"
"M4cs/BabySploit" -> "thoppe/pixelhouse"
"M4cs/BabySploit" -> "DarkSpiritz/DarkSpiritz"
"M4cs/BabySploit" -> "Greenwolf/social_mapper" ["e"=1]
"M4cs/BabySploit" -> "dizballanze/m00dbot"
"M4cs/BabySploit" -> "mikeyy/nonoCAPTCHA"
"M4cs/BabySploit" -> "cuducos/twitter-cleanup"
"M4cs/BabySploit" -> "YoongiKim/AutoCrawler"
"M4cs/BabySploit" -> "BasioMeusPuga/Lector"
"M4cs/BabySploit" -> "tvytlx/render-py"
"M4cs/BabySploit" -> "mileshenrichs/spotify-playlist-generator"
"timClicks/slate" -> "jcushman/pdfquery"
"timClicks/slate" -> "ecatkins/xpdf_python"
"timClicks/slate" -> "euske/pdfminer"
"timClicks/slate" -> "18F/doc_processing_toolkit" ["e"=1]
"tesseract-ocr/langdata_lstm" -> "tesseract-ocr/test"
"tesseract-ocr/langdata_lstm" -> "livezingy/tesstrainsh-win"
"YouTubeDownload/YouTubeDownload" -> "mraza007/videodownloader"
"YouTubeDownload/YouTubeDownload" -> "get-pytube/pytube3"
"YouTubeDownload/YouTubeDownload" -> "mileshenrichs/spotify-playlist-generator"
"YouTubeDownload/YouTubeDownload" -> "Squarespace/datasheets"
"YouTubeDownload/YouTubeDownload" -> "M4cs/BabySploit"
"YouTubeDownload/YouTubeDownload" -> "RameshAditya/asciify"
"YouTubeDownload/YouTubeDownload" -> "tvytlx/render-py"
"YouTubeDownload/YouTubeDownload" -> "Erotemic/ubelt"
"YouTubeDownload/YouTubeDownload" -> "dizballanze/m00dbot"
"YouTubeDownload/YouTubeDownload" -> "thoppe/pixelhouse"
"YouTubeDownload/YouTubeDownload" -> "pytube/pytube" ["e"=1]
"YouTubeDownload/YouTubeDownload" -> "tdietert/youtubePlaylistDL"
"YouTubeDownload/YouTubeDownload" -> "ryu577/pyray"
"YouTubeDownload/YouTubeDownload" -> "YoongiKim/AutoCrawler"
"YouTubeDownload/YouTubeDownload" -> "sdushantha/soundcloud-dl"
"pymupdf/PyMuPDF-Utilities" -> "pymupdf/PyMuPDF"
"pymupdf/PyMuPDF-Utilities" -> "pymupdf/RAG" ["e"=1]
"pymupdf/PyMuPDF-Utilities" -> "doc-analysis/DocBank" ["e"=1]
"pymupdf/PyMuPDF-Utilities" -> "BobLd/DocumentLayoutAnalysis" ["e"=1]
"pymupdf/PyMuPDF-Utilities" -> "pypdfium2-team/pypdfium2"
"pymupdf/PyMuPDF-Utilities" -> "Belval/pdf2image"
"pymupdf/PyMuPDF-Utilities" -> "jstockwin/py-pdf-parser"
"Aditya-Khadilkar/Face-tracking-with-Anime-characters" -> "dizballanze/m00dbot"
"Aditya-Khadilkar/Face-tracking-with-Anime-characters" -> "thoppe/pixelhouse"
"Aditya-Khadilkar/Face-tracking-with-Anime-characters" -> "avidLearnerInProgress/pyCAIR"
"Aditya-Khadilkar/Face-tracking-with-Anime-characters" -> "tvytlx/render-py"
"Aditya-Khadilkar/Face-tracking-with-Anime-characters" -> "thewaifuproject/waifuchat"
"Aditya-Khadilkar/Face-tracking-with-Anime-characters" -> "ryu577/pyray"
"Aditya-Khadilkar/Face-tracking-with-Anime-characters" -> "HT524/500LineorLess_CN" ["e"=1]
"Aditya-Khadilkar/Face-tracking-with-Anime-characters" -> "RameshAditya/asciify"
"Aditya-Khadilkar/Face-tracking-with-Anime-characters" -> "mraza007/videodownloader"
"RameshAditya/asciify" -> "M4cs/BabySploit"
"RameshAditya/asciify" -> "sdushantha/soundcloud-dl"
"RameshAditya/asciify" -> "thoppe/pixelhouse"
"RameshAditya/asciify" -> "Erotemic/ubelt"
"RameshAditya/asciify" -> "Squarespace/datasheets"
"RameshAditya/asciify" -> "avidLearnerInProgress/pyCAIR"
"RameshAditya/asciify" -> "mraza007/videodownloader"
"RameshAditya/asciify" -> "sepandhaghighi/art" ["e"=1]
"RameshAditya/asciify" -> "ryu577/pyray"
"RameshAditya/asciify" -> "dizballanze/m00dbot"
"RameshAditya/asciify" -> "shobrook/rebound"
"RameshAditya/asciify" -> "danmacnish/cartoonify"
"RameshAditya/asciify" -> "sunainapai/makesite"
"RameshAditya/asciify" -> "mikeyy/nonoCAPTCHA"
"RameshAditya/asciify" -> "tvytlx/render-py"
"DarkSpiritz/DarkSpiritz" -> "DarkSpiritz/DarkSpiritz3"
"DarkSpiritz/DarkSpiritz" -> "Eitenne/roxysploit"
"ericremoreynolds/excelpython" -> "bnikolic/ExPy"
"mikeyy/nonoCAPTCHA" -> "NoahCardoza/CaptchaHarvester" ["e"=1]
"mikeyy/nonoCAPTCHA" -> "theriley106/outCaptcha" ["e"=1]
"mikeyy/nonoCAPTCHA" -> "avidLearnerInProgress/pyCAIR"
"mikeyy/nonoCAPTCHA" -> "thoppe/pixelhouse"
"mikeyy/nonoCAPTCHA" -> "lorien/captcha_solver" ["e"=1]
"mikeyy/nonoCAPTCHA" -> "Squarespace/datasheets"
"mikeyy/nonoCAPTCHA" -> "Erotemic/ubelt"
"mikeyy/nonoCAPTCHA" -> "ecthros/uncaptcha2" ["e"=1]
"mikeyy/nonoCAPTCHA" -> "M4cs/BabySploit"
"mikeyy/nonoCAPTCHA" -> "JackonYang/captcha-tensorflow" ["e"=1]
"mikeyy/nonoCAPTCHA" -> "teal33t/captcha_bypass" ["e"=1]
"mikeyy/nonoCAPTCHA" -> "MacKey-255/GoodByeCatpcha" ["e"=1]
"mikeyy/nonoCAPTCHA" -> "RameshAditya/asciify"
"mikeyy/nonoCAPTCHA" -> "YoongiKim/AutoCrawler"
"mikeyy/nonoCAPTCHA" -> "ad-m/python-anticaptcha" ["e"=1]
"microsoft/Simplify-Docx" -> "pqzx/html2docx"
"prettier/plugin-python" -> "wagoodman/bridgy"
"prettier/plugin-python" -> "facebookresearch/py2bpf"
"k4mpr3t/b4tm4n" -> "OffXec/TheDoc"
"mraza007/videodownloader" -> "cuducos/twitter-cleanup"
"mraza007/videodownloader" -> "YouTubeDownload/YouTubeDownload"
"mraza007/videodownloader" -> "thoppe/pixelhouse"
"mraza007/videodownloader" -> "dizballanze/m00dbot"
"mraza007/videodownloader" -> "sdushantha/soundcloud-dl"
"mraza007/videodownloader" -> "Squarespace/datasheets"
"mraza007/videodownloader" -> "tvytlx/render-py"
"mraza007/videodownloader" -> "Erotemic/ubelt"
"mraza007/videodownloader" -> "mileshenrichs/spotify-playlist-generator"
"mraza007/videodownloader" -> "M4cs/BabySploit"
"avidLearnerInProgress/pyCAIR" -> "thoppe/pixelhouse"
"avidLearnerInProgress/pyCAIR" -> "dizballanze/m00dbot"
"avidLearnerInProgress/pyCAIR" -> "tvytlx/render-py"
"avidLearnerInProgress/pyCAIR" -> "ryu577/pyray"
"avidLearnerInProgress/pyCAIR" -> "Erotemic/ubelt"
"avidLearnerInProgress/pyCAIR" -> "Squarespace/datasheets"
"avidLearnerInProgress/pyCAIR" -> "mikeyy/nonoCAPTCHA"
"avidLearnerInProgress/pyCAIR" -> "cuducos/twitter-cleanup"
"avidLearnerInProgress/pyCAIR" -> "M4cs/BabySploit"
"avidLearnerInProgress/pyCAIR" -> "RameshAditya/asciify"
"avidLearnerInProgress/pyCAIR" -> "Aditya-Khadilkar/Face-tracking-with-Anime-characters"
"avidLearnerInProgress/pyCAIR" -> "vivianhylee/seam-carving"
"avidLearnerInProgress/pyCAIR" -> "danmacnish/cartoonify"
"avidLearnerInProgress/pyCAIR" -> "mraza007/videodownloader"
"axu2/improved-seam-carving" -> "andrewdcampbell/seam-carving"
"axu2/improved-seam-carving" -> "axu2/tiger-menus"
"axu2/improved-seam-carving" -> "vivianhylee/seam-carving"
"andrewdcampbell/seam-carving" -> "vivianhylee/seam-carving"
"andrewdcampbell/seam-carving" -> "axu2/improved-seam-carving"
"andrewdcampbell/seam-carving" -> "li-plus/seam-carving"
"andrewdcampbell/seam-carving" -> "andrewdcampbell/face-movie"
"andrewdcampbell/seam-carving" -> "assafshocher/InGAN" ["e"=1]
"PetengDedet/WhatsApp-Analyzer" -> "empicano/whatsapp-analyzer"
"PetengDedet/WhatsApp-Analyzer" -> "mowolf/ChatAnalyzer"
"dizballanze/m00dbot" -> "thoppe/pixelhouse"
"dizballanze/m00dbot" -> "tvytlx/render-py"
"dizballanze/m00dbot" -> "cuducos/twitter-cleanup"
"dizballanze/m00dbot" -> "mraza007/videodownloader"
"dizballanze/m00dbot" -> "avidLearnerInProgress/pyCAIR"
"dizballanze/m00dbot" -> "Aditya-Khadilkar/Face-tracking-with-Anime-characters"
"dizballanze/m00dbot" -> "ryu577/pyray"
"dizballanze/m00dbot" -> "Squarespace/datasheets"
"dizballanze/m00dbot" -> "Erotemic/ubelt"
"pqzx/html2docx" -> "erezlife/html2docx"
"agl/jbig2enc" -> "ArtifexSoftware/jbig2dec"
"agl/jbig2enc" -> "jwilk/didjvu"
"ank0409/Ditching-Excel-for-Python" -> "learn-co-students/excel-to-python-data-science-intro-000"
"erezlife/html2docx" -> "pqzx/html2docx"
"Edinburgh-Genome-Foundry/pdf_reports" -> "Edinburgh-Genome-Foundry/CAB"
"thoppe/pixelhouse" -> "tvytlx/render-py"
"thoppe/pixelhouse" -> "avidLearnerInProgress/pyCAIR"
"thoppe/pixelhouse" -> "dizballanze/m00dbot"
"thoppe/pixelhouse" -> "ryu577/pyray"
"thoppe/pixelhouse" -> "Squarespace/datasheets"
"thoppe/pixelhouse" -> "mraza007/videodownloader"
"thoppe/pixelhouse" -> "cuducos/twitter-cleanup"
"thoppe/pixelhouse" -> "Erotemic/ubelt"
"thoppe/pixelhouse" -> "RameshAditya/asciify"
"thoppe/pixelhouse" -> "sdushantha/soundcloud-dl"
"thoppe/pixelhouse" -> "M4cs/BabySploit"
"thoppe/pixelhouse" -> "danmacnish/cartoonify"
"thoppe/pixelhouse" -> "Aditya-Khadilkar/Face-tracking-with-Anime-characters"
"cuducos/twitter-cleanup" -> "mraza007/videodownloader"
"cuducos/twitter-cleanup" -> "dizballanze/m00dbot"
"cuducos/twitter-cleanup" -> "thoppe/pixelhouse"
"cuducos/twitter-cleanup" -> "Erotemic/ubelt"
"cuducos/twitter-cleanup" -> "tvytlx/render-py"
"cuducos/twitter-cleanup" -> "cuducos/bot-followers" ["e"=1]
"cuducos/twitter-cleanup" -> "mileshenrichs/spotify-playlist-generator"
"garysieling/pdf-js-csv" -> "SamDecrock/pdf2table"
"ideonate/nb2xls" -> "fkarb/xltable"
"ideonate/nb2xls" -> "webermarcolivier/xlsxpandasformatter"
"ideonate/nb2xls" -> "reingart/vb2py"
"ideonate/nb2xls" -> "snoopyjc/xls2xlsx"
"ideonate/nb2xls" -> "python-excel/xlutils"
"ideonate/nb2xls" -> "vallettea/koala"
"haoxiaoyong1014/editor-ui" -> "haoxiaoyong1014/editor-service"
"reingart/vb2py" -> "fkarb/xltable"
"empicano/whatsapp-analyzer" -> "akashsara/whatsapp-message-analysis"
"recalapp/recal" -> "sebthedev/PrincetonCourses"
"deanmalmgren/textract" -> "pdfminer/pdfminer.six"
"deanmalmgren/textract" -> "miso-belica/sumy" ["e"=1]
"deanmalmgren/textract" -> "chrismattmann/tika-python"
"deanmalmgren/textract" -> "euske/pdfminer"
"deanmalmgren/textract" -> "Alir3z4/html2text" ["e"=1]
"deanmalmgren/textract" -> "ankushshah89/python-docx2txt"
"deanmalmgren/textract" -> "dbashford/textract"
"deanmalmgren/textract" -> "michaelhelmick/lassie" ["e"=1]
"deanmalmgren/textract" -> "py-pdf/pypdf"
"deanmalmgren/textract" -> "chartbeat-labs/textacy" ["e"=1]
"deanmalmgren/textract" -> "rspeer/python-ftfy" ["e"=1]
"deanmalmgren/textract" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"deanmalmgren/textract" -> "codelucas/newspaper" ["e"=1]
"deanmalmgren/textract" -> "python-openxml/python-docx"
"deanmalmgren/textract" -> "buriy/python-readability" ["e"=1]
"pdfminer/pdfminer.six" -> "euske/pdfminer"
"pdfminer/pdfminer.six" -> "jsvine/pdfplumber"
"pdfminer/pdfminer.six" -> "py-pdf/pypdf"
"pdfminer/pdfminer.six" -> "pymupdf/PyMuPDF"
"pdfminer/pdfminer.six" -> "camelot-dev/camelot"
"pdfminer/pdfminer.six" -> "chezou/tabula-py"
"pdfminer/pdfminer.six" -> "atlanhq/camelot"
"pdfminer/pdfminer.six" -> "deanmalmgren/textract"
"pdfminer/pdfminer.six" -> "pmaupin/pdfrw"
"pdfminer/pdfminer.six" -> "kermitt2/grobid" ["e"=1]
"pdfminer/pdfminer.six" -> "Unstructured-IO/unstructured" ["e"=1]
"pdfminer/pdfminer.six" -> "pikepdf/pikepdf"
"pdfminer/pdfminer.six" -> "tabulapdf/tabula"
"pdfminer/pdfminer.six" -> "Layout-Parser/layout-parser" ["e"=1]
"pdfminer/pdfminer.six" -> "Belval/pdf2image"
"oschwartz10612/poppler-windows" -> "Belval/pdf2image"
"oschwartz10612/poppler-windows" -> "UB-Mannheim/zotero-ocr" ["e"=1]
"oschwartz10612/poppler-windows" -> "UB-Mannheim/tesseract"
"oschwartz10612/poppler-windows" -> "conda-forge/poppler-feedstock"
"oschwartz10612/poppler-windows" -> "rmyorston/busybox-w32" ["e"=1]
"oschwartz10612/poppler-windows" -> "jalan/pdftotext"
"ultralytics/google-images-download" -> "ultralytics/flickr_scraper"
"ultralytics/google-images-download" -> "Joeclinton1/google-images-download"
"tabulapdf/tabula-java" -> "tabulapdf/tabula"
"tabulapdf/tabula-java" -> "chezou/tabula-py"
"tabulapdf/tabula-java" -> "thoqbk/traprange"
"tabulapdf/tabula-java" -> "JonathanLink/PDFLayoutTextStripper"
"tabulapdf/tabula-java" -> "camelot-dev/excalibur"
"tabulapdf/tabula-java" -> "atlanhq/camelot"
"tabulapdf/tabula-java" -> "camelot-dev/camelot"
"tabulapdf/tabula-java" -> "tabulapdf/tabula-extractor"
"tabulapdf/tabula-java" -> "jsvine/pdfplumber"
"tabulapdf/tabula-java" -> "ropensci/tabulapdf" ["e"=1]
"tabulapdf/tabula-java" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"tabulapdf/tabula-java" -> "apache/pdfbox" ["e"=1]
"tabulapdf/tabula-java" -> "pdfminer/pdfminer.six"
"tabulapdf/tabula-java" -> "modesty/pdf2json"
"tabulapdf/tabula-java" -> "doc-analysis/TableBank" ["e"=1]
"tesseract-ocr/tessdoc" -> "tesseract-ocr/tessdata_best"
"tesseract-ocr/tessdoc" -> "UB-Mannheim/tesseract"
"tesseract-ocr/tessdoc" -> "tesseract-ocr/tessdata"
"tesseract-ocr/tessdoc" -> "tesseract-ocr/tesstrain"
"tesseract-ocr/tessdoc" -> "otiai10/gosseract" ["e"=1]
"tesseract-ocr/tessdoc" -> "madmaze/pytesseract"
"tesseract-ocr/tessdoc" -> "tesseract-ocr/tesseract" ["e"=1]
"tesseract-ocr/tessdoc" -> "sirfz/tesserocr" ["e"=1]
"tesseract-ocr/tessdoc" -> "tesseract-ocr/langdata"
"tesseract-ocr/tessdoc" -> "mittagessen/kraken" ["e"=1]
"tesseract-ocr/tessdoc" -> "tesseract-ocr/tessdata_fast"
"tesseract-ocr/tessdoc" -> "charlesw/tesseract" ["e"=1]
"tesseract-ocr/tessdoc" -> "DanBloomberg/leptonica"
"tesseract-ocr/tessdoc" -> "tesseract-ocr/langdata_lstm"
"tesseract-ocr/tessdoc" -> "mindee/doctr" ["e"=1]
"mooz/node-pdf-image" -> "fitraditya/node-pdf2img"
"fzumstein/python-for-excel" -> "xlwings/xlwings"
"fzumstein/python-for-excel" -> "tylerjrichards/Streamlit-for-Data-Science" ["e"=1]
"fzumstein/python-for-excel" -> "thepycoach/automation" ["e"=1]
"fzumstein/python-for-excel" -> "PacktWorkshops/The-Pandas-Workshop" ["e"=1]
"fzumstein/python-for-excel" -> "stefmolin/Hands-On-Data-Analysis-with-Pandas-2nd-edition" ["e"=1]
"fzumstein/python-for-excel" -> "learn-co-students/excel-to-python-data-science-intro-000"
"thoqbk/traprange" -> "rostrovsky/pdf-table"
"thoqbk/traprange" -> "JonathanLink/PDFLayoutTextStripper"
"thoqbk/traprange" -> "tabulapdf/tabula-java"
"thoqbk/traprange" -> "ashima/pdf-table-extract"
"chrismattmann/tika-python" -> "apache/tika" ["e"=1]
"chrismattmann/tika-python" -> "chrismattmann/tika-similarity"
"chrismattmann/tika-python" -> "deanmalmgren/textract"
"chrismattmann/tika-python" -> "pdfminer/pdfminer.six"
"chrismattmann/tika-python" -> "jalan/pdftotext"
"chrismattmann/tika-python" -> "chezou/tabula-py"
"chrismattmann/tika-python" -> "LogicalSpark/docker-tikaserver"
"chrismattmann/tika-python" -> "camelot-dev/camelot"
"chrismattmann/tika-python" -> "pymupdf/PyMuPDF"
"chrismattmann/tika-python" -> "euske/pdfminer"
"chrismattmann/tika-python" -> "apache/tika-docker"
"chrismattmann/tika-python" -> "jsvine/pdfplumber"
"chrismattmann/tika-python" -> "atlanhq/camelot"
"chrismattmann/tika-python" -> "py-pdf/pypdf"
"chrismattmann/tika-python" -> "jamesturk/jellyfish" ["e"=1]
"lalalic/docx2html" -> "lalalic/docx4js"
"lalalic/docx2html" -> "artburkart/docx2html"
"lalalic/docx2html" -> "mwilliamson/mammoth.js" ["e"=1]
"lalalic/docx2html" -> "fagbokforlaget/pdftohtmljs"
"lalalic/docx2html" -> "evidenceprime/html-docx-js" ["e"=1]
"pyexcel/pyexcel" -> "pyexcel-webwares/django-excel" ["e"=1]
"pyexcel/pyexcel" -> "pyexcel/pyexcel-xlsx"
"pyexcel/pyexcel" -> "jmcnamara/XlsxWriter"
"pyexcel/pyexcel" -> "xlwings/xlwings"
"pyexcel/pyexcel" -> "pyexcel-webwares/Flask-Excel" ["e"=1]
"pyexcel/pyexcel" -> "kz26/PyExcelerate"
"pyexcel/pyexcel" -> "python-excel/xlrd"
"pyexcel/pyexcel" -> "dgorissen/pycel"
"pyexcel/pyexcel" -> "thombashi/pytablewriter" ["e"=1]
"pyexcel/pyexcel" -> "python-excel/xlutils"
"pyexcel/pyexcel" -> "pyexcel/pyexcel-xls"
"pyexcel/pyexcel" -> "PydPiper/pylightxl"
"pyexcel/pyexcel" -> "vinci1it2000/formulas"
"pyexcel/pyexcel" -> "jazzband/tablib" ["e"=1]
"pyexcel/pyexcel" -> "python-excel/xlwt"
"Joeclinton1/google-images-download" -> "ultralytics/google-images-download"
"lalalic/docx4js" -> "lalalic/docx2html"
"lalalic/docx4js" -> "morungos/node-word-extractor"
"lalalic/docx4js" -> "dkiyatkin/node-office"
"bradbase/xlcalculator" -> "vallettea/koala"
"bradbase/xlcalculator" -> "vinci1it2000/formulas"
"bradbase/xlcalculator" -> "dgorissen/pycel"
"bradbase/xlcalculator" -> "bradbase/flyingkoala"
"ol-th/pdf-img-convert.js" -> "k-yle/pdf-to-img"
"ol-th/pdf-img-convert.js" -> "yakovmeister/pdf2image"
"ol-th/pdf-img-convert.js" -> "dichovsky/pdf-to-png-converter"
"apache/tika-docker" -> "LogicalSpark/docker-tikaserver"
"ultralytics/flickr_scraper" -> "ultralytics/google-images-download"
"abdulr7mann/hackerEnv" -> "MS-WEB-BN/t14m4t" ["e"=1]
"abdulr7mann/hackerEnv" -> "Andromeda1957/netpwn"
"abdulr7mann/hackerEnv" -> "scalabli/sashay" ["e"=1]
"chrismattmann/tika-similarity" -> "chrismattmann/nutch-python"
"chrismattmann/tika-similarity" -> "chrismattmann/etllib"
"jstockwin/py-pdf-parser" -> "maxpmaxp/pdfreader"
"dgorissen/pycel" -> "vallettea/koala"
"dgorissen/pycel" -> "vinci1it2000/formulas"
"dgorissen/pycel" -> "bradbase/xlcalculator"
"dgorissen/pycel" -> "kz26/PyExcelerate"
"dgorissen/pycel" -> "python-excel/xlutils"
"dgorissen/pycel" -> "reingart/vb2py"
"dgorissen/pycel" -> "PydPiper/pylightxl"
"dgorissen/pycel" -> "webermarcolivier/xlsxpandasformatter"
"dgorissen/pycel" -> "fkarb/xltable"
"dgorissen/pycel" -> "JackMcKew/awesome-python-bytes" ["e"=1]
"PydPiper/pylightxl" -> "webermarcolivier/xlsxpandasformatter"
"PydPiper/pylightxl" -> "reingart/vb2py"
"PydPiper/pylightxl" -> "snoopyjc/xls2xlsx"
"PydPiper/pylightxl" -> "python-excel/xlutils"
"LogicalSpark/docker-tikaserver" -> "apache/tika-docker"
"LogicalSpark/docker-tikaserver" -> "dbmdz/solr-ocrpayload-plugin"
"pyexcel/pyexcel-xlsx" -> "pyexcel/pyexcel-xls"
"snoopyjc/xls2xlsx" -> "fkarb/xltable"
"snoopyjc/xls2xlsx" -> "reingart/vb2py"
"elapouya/python-docx-template" -> "python-openxml/python-docx"
"elapouya/python-docx-template" -> "open-xml-templating/docxtemplater" ["e"=1]
"elapouya/python-docx-template" -> "mwilliamson/python-mammoth"
"elapouya/python-docx-template" -> "Bouke/docx-mailmerge"
"elapouya/python-docx-template" -> "jmcnamara/XlsxWriter"
"elapouya/python-docx-template" -> "4teamwork/docxcompose"
"elapouya/python-docx-template" -> "Kozea/WeasyPrint" ["e"=1]
"elapouya/python-docx-template" -> "jhpyle/docassemble" ["e"=1]
"elapouya/python-docx-template" -> "coleifer/huey" ["e"=1]
"elapouya/python-docx-template" -> "guigrpa/docx-templates" ["e"=1]
"elapouya/python-docx-template" -> "ankushshah89/python-docx2txt"
"elapouya/python-docx-template" -> "scanny/python-pptx"
"elapouya/python-docx-template" -> "pymupdf/PyMuPDF"
"elapouya/python-docx-template" -> "JazzCore/python-pdfkit" ["e"=1]
"elapouya/python-docx-template" -> "yourlabs/django-autocomplete-light" ["e"=1]
"py-pdf/pypdf" -> "pdfminer/pdfminer.six"
"py-pdf/pypdf" -> "pymupdf/PyMuPDF"
"py-pdf/pypdf" -> "euske/pdfminer"
"py-pdf/pypdf" -> "jsvine/pdfplumber"
"py-pdf/pypdf" -> "pmaupin/pdfrw"
"py-pdf/pypdf" -> "python-openxml/python-docx"
"py-pdf/pypdf" -> "pikepdf/pikepdf"
"py-pdf/pypdf" -> "chezou/tabula-py"
"py-pdf/pypdf" -> "camelot-dev/camelot"
"py-pdf/pypdf" -> "Belval/pdf2image"
"py-pdf/pypdf" -> "python-pillow/Pillow" ["e"=1]
"py-pdf/pypdf" -> "madmaze/pytesseract"
"py-pdf/pypdf" -> "deanmalmgren/textract"
"py-pdf/pypdf" -> "Kozea/WeasyPrint" ["e"=1]
"py-pdf/pypdf" -> "theskumar/python-dotenv" ["e"=1]
"tesseract-ocr/langdata" -> "tesseract-ocr/docs"
"tesseract-ocr/langdata" -> "tesseract-ocr/tessdata"
"tesseract-ocr/langdata" -> "tesseract-ocr/tesseract-ocr.github.io"
"tesseract-ocr/langdata" -> "tesseract-ocr/langdata_lstm"
"tesseract-ocr/langdata" -> "tesseract-ocr/tesstrain"
"tesseract-ocr/langdata" -> "tesseract-ocr/tessdata_best"
"tesseract-ocr/langdata" -> "tesseract-ocr/tessdata_fast"
"tesseract-ocr/langdata" -> "gali8/Tesseract-OCR-iOS" ["e"=1]
"tesseract-ocr/langdata" -> "Shreeshrii/tess5train-fonts"
"tesseract-ocr/langdata" -> "tmbdev/clstm" ["e"=1]
"tesseract-ocr/langdata" -> "pannous/tensorflow-ocr" ["e"=1]
"tesseract-ocr/langdata" -> "charlesw/tesseract" ["e"=1]
"tesseract-ocr/langdata" -> "tianzhi0549/CTPN" ["e"=1]
"tesseract-ocr/langdata" -> "nguyenq/jTessBoxEditor"
"tesseract-ocr/langdata" -> "ocropus-archive/DUP-ocropy" ["e"=1]
"tesseract-ocr/tessdata" -> "rmtheis/tess-two" ["e"=1]
"tesseract-ocr/tessdata" -> "tesseract-ocr/tessdata_best"
"tesseract-ocr/tessdata" -> "tesseract-ocr/tesseract" ["e"=1]
"tesseract-ocr/tessdata" -> "tesseract-ocr/langdata"
"tesseract-ocr/tessdata" -> "nguyenq/tess4j" ["e"=1]
"tesseract-ocr/tessdata" -> "UB-Mannheim/tesseract"
"tesseract-ocr/tessdata" -> "gali8/Tesseract-OCR-iOS" ["e"=1]
"tesseract-ocr/tessdata" -> "charlesw/tesseract" ["e"=1]
"tesseract-ocr/tessdata" -> "tesseract-ocr/tessdoc"
"tesseract-ocr/tessdata" -> "madmaze/pytesseract"
"tesseract-ocr/tessdata" -> "chineseocr/chineseocr" ["e"=1]
"tesseract-ocr/tessdata" -> "DayBreak-u/chineseocr_lite" ["e"=1]
"tesseract-ocr/tessdata" -> "tesseract-ocr/tessdata_fast"
"tesseract-ocr/tessdata" -> "adaptech-cz/Tesseract4Android" ["e"=1]
"tesseract-ocr/tessdata" -> "PaddlePaddle/PaddleOCR" ["e"=1]
"k-yle/pdf-to-img" -> "ol-th/pdf-img-convert.js"
"python-excel/xlrd" -> "python-excel/xlwt"
"python-excel/xlrd" -> "python-excel/xlutils"
"python-excel/xlrd" -> "jmcnamara/XlsxWriter"
"python-excel/xlrd" -> "python-excel/tutorial"
"python-excel/xlrd" -> "xlwings/xlwings"
"python-excel/xlrd" -> "lxml/lxml" ["e"=1]
"python-excel/xlrd" -> "pyexcel/pyexcel"
"python-excel/xlrd" -> "python-openxml/python-docx"
"python-excel/xlrd" -> "jazzband/tablib" ["e"=1]
"python-excel/xlrd" -> "ericgazoni/openpyxl"
"python-excel/xlrd" -> "psycopg/psycopg2" ["e"=1]
"python-excel/xlrd" -> "dateutil/dateutil" ["e"=1]
"python-excel/xlrd" -> "chardet/chardet" ["e"=1]
"python-excel/xlrd" -> "PyMySQL/PyMySQL" ["e"=1]
"python-excel/xlrd" -> "benoitc/gunicorn" ["e"=1]
"fitraditya/node-pdf2img" -> "mooz/node-pdf-image"
"pmaupin/pdfrw" -> "py-pdf/pypdf"
"pmaupin/pdfrw" -> "euske/pdfminer"
"pmaupin/pdfrw" -> "pdfminer/pdfminer.six"
"pmaupin/pdfrw" -> "claird/PyPDF4"
"pmaupin/pdfrw" -> "pikepdf/pikepdf"
"pmaupin/pdfrw" -> "jcushman/pdfquery"
"pmaupin/pdfrw" -> "reingart/pyfpdf"
"pmaupin/pdfrw" -> "JoshData/pdf-redactor" ["e"=1]
"pmaupin/pdfrw" -> "pymupdf/PyMuPDF"
"pmaupin/pdfrw" -> "rst2pdf/rst2pdf" ["e"=1]
"pmaupin/pdfrw" -> "atlanhq/camelot"
"pmaupin/pdfrw" -> "py-pdf/fpdf2"
"pmaupin/pdfrw" -> "chezou/tabula-py"
"pmaupin/pdfrw" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"pmaupin/pdfrw" -> "xhtml2pdf/xhtml2pdf" ["e"=1]
"jorisschellekens/borb" -> "jorisschellekens/borb-examples"
"jorisschellekens/borb" -> "pikepdf/pikepdf"
"jorisschellekens/borb" -> "Miksus/rocketry" ["e"=1]
"jorisschellekens/borb" -> "pymupdf/PyMuPDF"
"jorisschellekens/borb" -> "py-pdf/pypdf"
"jorisschellekens/borb" -> "py-pdf/fpdf2"
"jorisschellekens/borb" -> "ml-tooling/opyrator" ["e"=1]
"jorisschellekens/borb" -> "jsvine/pdfplumber"
"jorisschellekens/borb" -> "pdfminer/pdfminer.six"
"jorisschellekens/borb" -> "onelivesleft/PrettyErrors" ["e"=1]
"jorisschellekens/borb" -> "ariebovenberg/whenever" ["e"=1]
"jorisschellekens/borb" -> "joerick/pyinstrument" ["e"=1]
"jorisschellekens/borb" -> "adrianlarion/useful-sed" ["e"=1]
"jorisschellekens/borb" -> "bee-san/pyWhat" ["e"=1]
"jorisschellekens/borb" -> "bloomberg/memray" ["e"=1]
"jorisschellekens/borb-examples" -> "jorisschellekens/borb"
"python-excel/xlwt" -> "python-excel/xlrd"
"python-excel/xlwt" -> "python-excel/xlutils"
"python-excel/xlwt" -> "python-excel/tutorial"
"python-excel/xlwt" -> "jmcnamara/XlsxWriter"
"python-excel/xlwt" -> "kz26/PyExcelerate"
"tesseract-ocr/tesseract-ocr.github.io" -> "tesseract-ocr/docs"
"adrienjoly/npm-pdfreader" -> "modesty/pdf2json"
"adrienjoly/npm-pdfreader" -> "ffalt/pdf.js-extract"
"flexpaper/pdf2json" -> "flexpaper/pdftk"
"python-excel/xlutils" -> "python-excel/xlwt"
"python-excel/xlutils" -> "reingart/vb2py"
"python-excel/xlutils" -> "fkarb/xltable"
"python-excel/xlutils" -> "python-excel/tutorial"
"python-excel/xlutils" -> "python-excel/xlrd"
"python-excel/xlutils" -> "vallettea/koala"
"python-excel/xlutils" -> "webermarcolivier/xlsxpandasformatter"
"python-excel/xlutils" -> "snoopyjc/xls2xlsx"
"python-excel/xlutils" -> "ideonate/nb2xls"
"josch/img2pdf" -> "myollie/img2pdf"
"josch/img2pdf" -> "trufanov-nok/scantailor-universal" ["e"=1]
"josch/img2pdf" -> "agl/jbig2enc"
"tesseract-ocr/docs" -> "tesseract-ocr/tesseract-ocr.github.io"
"tesseract-ocr/docs" -> "tesseract-ocr/langdata"
"python-excel/tutorial" -> "python-excel/xlutils"
"python-excel/tutorial" -> "python-excel/xlwt"
"python-excel/tutorial" -> "python-excel/xlrd"
"fkarb/xltable" -> "reingart/vb2py"
"UB-Mannheim/tesseract" -> "tesseract-ocr/tessdata"
"UB-Mannheim/tesseract" -> "tesseract-ocr/tesseract" ["e"=1]
"UB-Mannheim/tesseract" -> "tesseract-ocr/tessdoc"
"UB-Mannheim/tesseract" -> "tesseract-ocr/tessdata_best"
"UB-Mannheim/tesseract" -> "madmaze/pytesseract"
"UB-Mannheim/tesseract" -> "oschwartz10612/poppler-windows"
"UB-Mannheim/tesseract" -> "UB-Mannheim/zotero-ocr" ["e"=1]
"UB-Mannheim/tesseract" -> "sirfz/tesserocr" ["e"=1]
"UB-Mannheim/tesseract" -> "manisandro/gImageReader" ["e"=1]
"UB-Mannheim/tesseract" -> "charlesw/tesseract" ["e"=1]
"UB-Mannheim/tesseract" -> "JaidedAI/EasyOCR" ["e"=1]
"UB-Mannheim/tesseract" -> "pywinauto/pywinauto" ["e"=1]
"UB-Mannheim/tesseract" -> "DanBloomberg/leptonica"
"UB-Mannheim/tesseract" -> "mhammond/pywin32" ["e"=1]
"UB-Mannheim/tesseract" -> "PaddlePaddle/PaddleOCR" ["e"=1]
"jsvine/pdfplumber" -> "pdfminer/pdfminer.six"
"jsvine/pdfplumber" -> "pymupdf/PyMuPDF"
"jsvine/pdfplumber" -> "camelot-dev/camelot"
"jsvine/pdfplumber" -> "py-pdf/pypdf"
"jsvine/pdfplumber" -> "chezou/tabula-py"
"jsvine/pdfplumber" -> "Unstructured-IO/unstructured" ["e"=1]
"jsvine/pdfplumber" -> "atlanhq/camelot"
"jsvine/pdfplumber" -> "Layout-Parser/layout-parser" ["e"=1]
"jsvine/pdfplumber" -> "microsoft/table-transformer" ["e"=1]
"jsvine/pdfplumber" -> "euske/pdfminer"
"jsvine/pdfplumber" -> "tabulapdf/tabula"
"jsvine/pdfplumber" -> "VikParuchuri/marker" ["e"=1]
"jsvine/pdfplumber" -> "kermitt2/grobid" ["e"=1]
"jsvine/pdfplumber" -> "mindee/doctr" ["e"=1]
"jsvine/pdfplumber" -> "facebookresearch/nougat" ["e"=1]
"ankushshah89/python-docx2txt" -> "microsoft/Simplify-Docx"
"ankushshah89/python-docx2txt" -> "deanmalmgren/textract"
"ankushshah89/python-docx2txt" -> "ShayHill/docx2python"
"ankushshah89/python-docx2txt" -> "python-openxml/python-docx"
"ankushshah89/python-docx2txt" -> "mwilliamson/python-mammoth"
"JonathanLink/PDFLayoutTextStripper" -> "thoqbk/traprange"
"JonathanLink/PDFLayoutTextStripper" -> "tabulapdf/tabula-java"
"JonathanLink/PDFLayoutTextStripper" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"JonathanLink/PDFLayoutTextStripper" -> "tabulapdf/tabula"
"JonathanLink/PDFLayoutTextStripper" -> "apache/pdfbox" ["e"=1]
"JonathanLink/PDFLayoutTextStripper" -> "atlanhq/camelot"
"JonathanLink/PDFLayoutTextStripper" -> "BafS/Gutenberg" ["e"=1]
"JonathanLink/PDFLayoutTextStripper" -> "modesty/pdf2json"
"JonathanLink/PDFLayoutTextStripper" -> "uber-archive/image-diff" ["e"=1]
"JonathanLink/PDFLayoutTextStripper" -> "radkovo/Pdf2Dom"
"JonathanLink/PDFLayoutTextStripper" -> "jostmey/NakedTensor" ["e"=1]
"JonathanLink/PDFLayoutTextStripper" -> "goessner/mdmath" ["e"=1]
"JonathanLink/PDFLayoutTextStripper" -> "coolwanglu/pdf2htmlEX"
"JonathanLink/PDFLayoutTextStripper" -> "alexgreene/WikiQuiz" ["e"=1]
"JonathanLink/PDFLayoutTextStripper" -> "LibrePDF/OpenPDF" ["e"=1]
"DanBloomberg/leptonica" -> "mzucker/page_dewarp" ["e"=1]
"DanBloomberg/leptonica" -> "tesseract-ocr/tessdata_best"
"DanBloomberg/leptonica" -> "agl/jbig2enc"
"DanBloomberg/leptonica" -> "ocropus-archive/DUP-ocropy" ["e"=1]
"DanBloomberg/leptonica" -> "tesseract-ocr/tesstrain"
"DanBloomberg/leptonica" -> "scantailor/scantailor" ["e"=1]
"DanBloomberg/leptonica" -> "tesseract-ocr/tessdata_fast"
"DanBloomberg/leptonica" -> "tesseract-ocr/tessdata"
"DanBloomberg/leptonica" -> "ocropus/hocr-tools" ["e"=1]
"DanBloomberg/leptonica" -> "manisandro/gImageReader" ["e"=1]
"DanBloomberg/leptonica" -> "wanghaisheng/awesome-ocr" ["e"=1]
"DanBloomberg/leptonica" -> "sirfz/tesserocr" ["e"=1]
"DanBloomberg/leptonica" -> "uclouvain/openjpeg" ["e"=1]
"DanBloomberg/leptonica" -> "peirick/Tesseract-OCR_for_Windows"
"DanBloomberg/leptonica" -> "charlesw/tesseract" ["e"=1]
"joweich/chat-miner" -> "MasterScrat/Chatistics"
"py-pdf/benchmarks" -> "pypdfium2-team/pypdfium2"
"py-pdf/benchmarks" -> "py-pdf/awesome-pdf"
"jcushman/pdfquery" -> "timClicks/slate"
"jcushman/pdfquery" -> "jsoma/kull"
"jcushman/pdfquery" -> "chezou/tabula-py"
"jcushman/pdfquery" -> "pmaupin/pdfrw"
"jcushman/pdfquery" -> "datanews/tables" ["e"=1]
"jcushman/pdfquery" -> "ashima/pdf-table-extract"
"jcushman/pdfquery" -> "ecatkins/xpdf_python"
"jcushman/pdfquery" -> "HazyResearch/pdftotree" ["e"=1]
"jcushman/pdfquery" -> "euske/pdfminer"
"jcushman/pdfquery" -> "dpapathanasiou/pdfminer-layout-scanner"
"jcushman/pdfquery" -> "fitnr/addfips"
"pypdfium2-team/pypdfium2" -> "py-pdf/benchmarks"
"pypdfium2-team/pypdfium2" -> "VikParuchuri/pdftext" ["e"=1]
"pypdfium2-team/pypdfium2" -> "Sunwood-ai-labs/PEGASUS"
"pypdfium2-team/pypdfium2" -> "ppaanngggg/layoutreader" ["e"=1]
"pypdfium2-team/pypdfium2" -> "huridocs/pdf-document-layout-analysis" ["e"=1]
"pypdfium2-team/pypdfium2" -> "Belval/pdf2image"
"pypdfium2-team/pypdfium2" -> "docling-project/docling-parse" ["e"=1]
"nguyenq/jTessBoxEditor" -> "nguyenq/jTessBoxEditorFX"
"nguyenq/jTessBoxEditor" -> "zdenop/qt-box-editor"
"mikemaccana/python-docx" -> "python-openxml/python-docx"
"mikemaccana/python-docx" -> "python-openxml/python-xlsx"
"chrismattmann/nutch-python" -> "thammegowda/tika-ner-corenlp"
"mwilliamson/java-mammoth" -> "haoxiaoyong1014/editor-service"
"coolwanglu/pdf2htmlEX" -> "pdf2htmlEX/pdf2htmlEX" ["e"=1]
"coolwanglu/pdf2htmlEX" -> "euske/pdfminer"
"coolwanglu/pdf2htmlEX" -> "mozilla/pdf.js" ["e"=1]
"coolwanglu/pdf2htmlEX" -> "wkhtmltopdf/wkhtmltopdf" ["e"=1]
"coolwanglu/pdf2htmlEX" -> "pdfminer/pdfminer.six"
"coolwanglu/pdf2htmlEX" -> "tabulapdf/tabula"
"coolwanglu/pdf2htmlEX" -> "py-pdf/pypdf"
"coolwanglu/pdf2htmlEX" -> "ariya/phantomjs" ["e"=1]
"coolwanglu/pdf2htmlEX" -> "binux/pyspider" ["e"=1]
"coolwanglu/pdf2htmlEX" -> "fxsjy/jieba" ["e"=1]
"coolwanglu/pdf2htmlEX" -> "modesty/pdf2json"
"coolwanglu/pdf2htmlEX" -> "exacity/deeplearningbook-chinese" ["e"=1]
"coolwanglu/pdf2htmlEX" -> "pandao/editor.md" ["e"=1]
"coolwanglu/pdf2htmlEX" -> "fex-team/ueditor" ["e"=1]
"coolwanglu/pdf2htmlEX" -> "GitbookIO/gitbook" ["e"=1]
"vallettea/koala" -> "bradbase/xlcalculator"
"vallettea/koala" -> "dgorissen/pycel"
"vallettea/koala" -> "vinci1it2000/formulas"
"vallettea/koala" -> "bradbase/flyingkoala"
"vallettea/koala" -> "fkarb/xltable"
"vallettea/koala" -> "reingart/vb2py"
"vallettea/koala" -> "python-excel/xlutils"
"vallettea/koala" -> "webermarcolivier/xlsxpandasformatter"
"dougmassay/docximport-sigil-plugin" -> "dougmassay/kindleimport-sigil-plugin"
"hellock/icrawler" -> "dxsooo/ImageCrawl"
"hellock/icrawler" -> "YoongiKim/AutoCrawler"
"hellock/icrawler" -> "fwang91/IMDb-Face" ["e"=1]
"hellock/icrawler" -> "amineHorseman/images-web-crawler"
"hellock/icrawler" -> "XiaohangZhan/cdp" ["e"=1]
"hellock/icrawler" -> "Joeclinton1/google-images-download"
"hellock/icrawler" -> "soeaver/caffe-model" ["e"=1]
"hellock/icrawler" -> "ydwen/caffe-face" ["e"=1]
"hellock/icrawler" -> "hardikvasa/google-images-download" ["e"=1]
"hellock/icrawler" -> "rksltnl/Deep-Metric-Learning-CVPR16" ["e"=1]
"hellock/icrawler" -> "hellock/torchpack"
"hellock/icrawler" -> "twtygqyy/caffe-augmentation" ["e"=1]
"hellock/icrawler" -> "happynear/NormFace" ["e"=1]
"hellock/icrawler" -> "openimages/dataset" ["e"=1]
"tdietert/youtubePlaylistDL" -> "jordoncm/youtube-dl-playlist"
"pymupdf/PyMuPDF" -> "py-pdf/pypdf"
"pymupdf/PyMuPDF" -> "jsvine/pdfplumber"
"pymupdf/PyMuPDF" -> "pdfminer/pdfminer.six"
"pymupdf/PyMuPDF" -> "Unstructured-IO/unstructured" ["e"=1]
"pymupdf/PyMuPDF" -> "pymupdf/PyMuPDF-Utilities"
"pymupdf/PyMuPDF" -> "pymupdf/RAG" ["e"=1]
"pymupdf/PyMuPDF" -> "opendatalab/PDF-Extract-Kit" ["e"=1]
"pymupdf/PyMuPDF" -> "camelot-dev/camelot"
"pymupdf/PyMuPDF" -> "Belval/pdf2image"
"pymupdf/PyMuPDF" -> "VikParuchuri/marker" ["e"=1]
"pymupdf/PyMuPDF" -> "pikepdf/pikepdf"
"pymupdf/PyMuPDF" -> "Layout-Parser/layout-parser" ["e"=1]
"pymupdf/PyMuPDF" -> "ArtifexSoftware/pdf2docx"
"pymupdf/PyMuPDF" -> "VikParuchuri/surya" ["e"=1]
"pymupdf/PyMuPDF" -> "facebookresearch/nougat" ["e"=1]
"chezou/tabula-py" -> "tabulapdf/tabula"
"chezou/tabula-py" -> "camelot-dev/camelot"
"chezou/tabula-py" -> "tabulapdf/tabula-java"
"chezou/tabula-py" -> "atlanhq/camelot"
"chezou/tabula-py" -> "camelot-dev/excalibur"
"chezou/tabula-py" -> "jsvine/pdfplumber"
"chezou/tabula-py" -> "pdfminer/pdfminer.six"
"chezou/tabula-py" -> "euske/pdfminer"
"chezou/tabula-py" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"chezou/tabula-py" -> "py-pdf/pypdf"
"chezou/tabula-py" -> "jcushman/pdfquery"
"chezou/tabula-py" -> "pymupdf/PyMuPDF"
"chezou/tabula-py" -> "Belval/pdf2image"
"chezou/tabula-py" -> "deanmalmgren/textract"
"chezou/tabula-py" -> "pmaupin/pdfrw"
"atlanhq/camelot" -> "camelot-dev/excalibur"
"atlanhq/camelot" -> "camelot-dev/camelot"
"atlanhq/camelot" -> "chezou/tabula-py"
"atlanhq/camelot" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"atlanhq/camelot" -> "tabulapdf/tabula"
"atlanhq/camelot" -> "jsvine/pdfplumber"
"atlanhq/camelot" -> "Squarespace/datasheets"
"atlanhq/camelot" -> "pdfminer/pdfminer.six"
"atlanhq/camelot" -> "tabulapdf/tabula-java"
"atlanhq/camelot" -> "snipsco/snips-nlu"
"atlanhq/camelot" -> "doc-analysis/TableBank" ["e"=1]
"atlanhq/camelot" -> "santinic/pampy" ["e"=1]
"atlanhq/camelot" -> "shobrook/rebound"
"atlanhq/camelot" -> "RameshAditya/asciify"
"atlanhq/camelot" -> "euske/pdfminer"
"scanny/python-pptx" -> "python-openxml/python-docx"
"scanny/python-pptx" -> "gitbrent/PptxGenJS" ["e"=1]
"scanny/python-pptx" -> "jmcnamara/XlsxWriter"
"scanny/python-pptx" -> "MartinPacker/md2pptx" ["e"=1]
"scanny/python-pptx" -> "Ziv-Barber/officegen" ["e"=1]
"scanny/python-pptx" -> "xlwings/xlwings"
"scanny/python-pptx" -> "py-pdf/pypdf"
"scanny/python-pptx" -> "limaoyi1/Auto-PPT" ["e"=1]
"scanny/python-pptx" -> "g21589/PPTX2HTML" ["e"=1]
"scanny/python-pptx" -> "elapouya/python-docx-template"
"scanny/python-pptx" -> "pymupdf/PyMuPDF"
"scanny/python-pptx" -> "pipipi-pikachu/PPTist" ["e"=1]
"scanny/python-pptx" -> "python-excel/xlrd"
"scanny/python-pptx" -> "m3dev/pptx-template"
"scanny/python-pptx" -> "pipipi-pikachu/pptxtojson" ["e"=1]
"modesty/pdf2json" -> "adrienjoly/npm-pdfreader"
"modesty/pdf2json" -> "nisaacson/pdf-extract"
"modesty/pdf2json" -> "galkahana/HummusJS" ["e"=1]
"modesty/pdf2json" -> "flexpaper/pdf2json"
"modesty/pdf2json" -> "modesty/p2jsvc"
"modesty/pdf2json" -> "dbashford/textract"
"modesty/pdf2json" -> "ffalt/pdf.js-extract"
"modesty/pdf2json" -> "foliojs/pdfkit" ["e"=1]
"modesty/pdf2json" -> "desmondmorris/node-tesseract" ["e"=1]
"modesty/pdf2json" -> "coolwanglu/pdf2htmlEX"
"modesty/pdf2json" -> "yakovmeister/pdf2image"
"modesty/pdf2json" -> "tcr/scissors" ["e"=1]
"modesty/pdf2json" -> "euske/pdfminer"
"modesty/pdf2json" -> "tabulapdf/tabula-java"
"modesty/pdf2json" -> "garysieling/pdf-js-csv"
"jmcnamara/XlsxWriter" -> "python-excel/xlrd"
"jmcnamara/XlsxWriter" -> "xlwings/xlwings"
"jmcnamara/XlsxWriter" -> "pyexcel/pyexcel"
"jmcnamara/XlsxWriter" -> "python-excel/xlwt"
"jmcnamara/XlsxWriter" -> "python-openxml/python-docx"
"jmcnamara/XlsxWriter" -> "kz26/PyExcelerate"
"jmcnamara/XlsxWriter" -> "benoitc/gunicorn" ["e"=1]
"jmcnamara/XlsxWriter" -> "martinblech/xmltodict" ["e"=1]
"jmcnamara/XlsxWriter" -> "scanny/python-pptx"
"jmcnamara/XlsxWriter" -> "jazzband/tablib" ["e"=1]
"jmcnamara/XlsxWriter" -> "py-pdf/pypdf"
"jmcnamara/XlsxWriter" -> "django/channels" ["e"=1]
"jmcnamara/XlsxWriter" -> "jschneier/django-storages" ["e"=1]
"jmcnamara/XlsxWriter" -> "lxml/lxml" ["e"=1]
"jmcnamara/XlsxWriter" -> "mkleehammer/pyodbc" ["e"=1]
"MasterScrat/Chatistics" -> "mar-muel/artificial-self-AMLD-2020"
"MasterScrat/Chatistics" -> "facebookresearch/py2bpf"
"MasterScrat/Chatistics" -> "prettier/plugin-python"
"MasterScrat/Chatistics" -> "wagoodman/bridgy"
"MasterScrat/Chatistics" -> "lucasrodes/whatstk"
"MasterScrat/Chatistics" -> "joweich/chat-miner"
"MasterScrat/Chatistics" -> "cosme12/SimpleCoin"
"MasterScrat/Chatistics" -> "PetengDedet/WhatsApp-Analyzer"
"MasterScrat/Chatistics" -> "mowolf/ChatAnalyzer"
"MasterScrat/Chatistics" -> "dantaki/vapeplot" ["e"=1]
"Bouke/docx-mailmerge" -> "iulica/docx-mailmerge"
"Squarespace/datasheets" -> "thoppe/pixelhouse"
"Squarespace/datasheets" -> "Erotemic/ubelt"
"Squarespace/datasheets" -> "mileshenrichs/spotify-playlist-generator"
"Squarespace/datasheets" -> "mraza007/videodownloader"
"Squarespace/datasheets" -> "avidLearnerInProgress/pyCAIR"
"Squarespace/datasheets" -> "dizballanze/m00dbot"
"Squarespace/datasheets" -> "cuducos/twitter-cleanup"
"Squarespace/datasheets" -> "M4cs/BabySploit"
"Squarespace/datasheets" -> "ryu577/pyray"
"Squarespace/datasheets" -> "sdushantha/soundcloud-dl"
"Squarespace/datasheets" -> "RameshAditya/asciify"
"Squarespace/datasheets" -> "rianhunter/dbxfs"
"Squarespace/datasheets" -> "atlanhq/camelot"
"Squarespace/datasheets" -> "YoongiKim/AutoCrawler"
"Squarespace/datasheets" -> "mikeyy/nonoCAPTCHA"
"nguyenq/jTessBoxEditorFX" -> "xcatx9527/jTessBoxEditorCY"
"CenterForOpenScience/pydocx" -> "cos-archives/hgrid"
"tabulapdf/tabula" -> "tabulapdf/tabula-java"
"tabulapdf/tabula" -> "chezou/tabula-py"
"tabulapdf/tabula" -> "atlanhq/camelot"
"tabulapdf/tabula" -> "camelot-dev/camelot"
"tabulapdf/tabula" -> "camelot-dev/excalibur"
"tabulapdf/tabula" -> "jsvine/pdfplumber"
"tabulapdf/tabula" -> "OpenRefine/OpenRefine" ["e"=1]
"tabulapdf/tabula" -> "euske/pdfminer"
"tabulapdf/tabula" -> "pdfminer/pdfminer.six"
"tabulapdf/tabula" -> "WZBSocialScienceCenter/pdftabextract" ["e"=1]
"tabulapdf/tabula" -> "Quartz/bad-data-guide" ["e"=1]
"tabulapdf/tabula" -> "tabulapdf/tabula-extractor"
"tabulapdf/tabula" -> "rawgraphs/rawgraphs-app" ["e"=1]
"tabulapdf/tabula" -> "wireservice/csvkit" ["e"=1]
"tabulapdf/tabula" -> "coolwanglu/pdf2htmlEX"
"snipsco/snips-nlu" -> "deeppavlov/DeepPavlov" ["e"=1]
"snipsco/snips-nlu" -> "crownpku/Rasa_NLU_Chi" ["e"=1]
"snipsco/snips-nlu" -> "snipsco/snips-nlu-rs" ["e"=1]
"snipsco/snips-nlu" -> "sonos/nlu-benchmark" ["e"=1]
"snipsco/snips-nlu" -> "RasaHQ/rasa" ["e"=1]
"snipsco/snips-nlu" -> "IntelLabs/nlp-architect" ["e"=1]
"snipsco/snips-nlu" -> "RasaHQ/rasa_core" ["e"=1]
"snipsco/snips-nlu" -> "bisguzar/twitter-scraper" ["e"=1]
"snipsco/snips-nlu" -> "rodrigopivi/Chatito" ["e"=1]
"snipsco/snips-nlu" -> "mit-nlp/MITIE" ["e"=1]
"snipsco/snips-nlu" -> "facebookresearch/pytext" ["e"=1]
"snipsco/snips-nlu" -> "facebook/duckling" ["e"=1]
"snipsco/snips-nlu" -> "allenai/allennlp" ["e"=1]
"snipsco/snips-nlu" -> "shobrook/rebound"
"snipsco/snips-nlu" -> "facebookresearch/DrQA" ["e"=1]
"Erotemic/ubelt" -> "Erotemic/xdoctest"
"Erotemic/ubelt" -> "Squarespace/datasheets"
"Erotemic/ubelt" -> "M4cs/BabySploit"
"Erotemic/ubelt" -> "cuducos/twitter-cleanup"
"Erotemic/ubelt" -> "avidLearnerInProgress/pyCAIR"
"Erotemic/ubelt" -> "mraza007/videodownloader"
"Erotemic/ubelt" -> "thoppe/pixelhouse"
"Erotemic/ubelt" -> "mileshenrichs/spotify-playlist-generator"
"Erotemic/ubelt" -> "dizballanze/m00dbot"
"Erotemic/ubelt" -> "tvytlx/render-py"
"Erotemic/ubelt" -> "RameshAditya/asciify"
"Erotemic/ubelt" -> "ryu577/pyray"
"Erotemic/ubelt" -> "linkedin/shiv" ["e"=1]
"Erotemic/ubelt" -> "mikeyy/nonoCAPTCHA"
"Erotemic/ubelt" -> "sunainapai/makesite"
"jalan/pdftotext" -> "pdfminer/pdfminer.six"
"jalan/pdftotext" -> "chrismattmann/tika-python"
"jalan/pdftotext" -> "deanmalmgren/textract"
"jalan/pdftotext" -> "metachris/pdfx" ["e"=1]
"jalan/pdftotext" -> "jsvine/pdfplumber"
"jalan/pdftotext" -> "chezou/tabula-py"
"jalan/pdftotext" -> "Belval/pdf2image"
"jalan/pdftotext" -> "pikepdf/pikepdf"
"jalan/pdftotext" -> "jstockwin/py-pdf-parser"
"jalan/pdftotext" -> "camelot-dev/camelot"
"jalan/pdftotext" -> "kermitt2/grobid_client_python" ["e"=1]
"jalan/pdftotext" -> "py-pdf/pypdf"
"jalan/pdftotext" -> "pmaupin/pdfrw"
"jalan/pdftotext" -> "HazyResearch/pdftotree" ["e"=1]
"jalan/pdftotext" -> "maxpmaxp/pdfreader"
"py-pdf/fpdf2" -> "reingart/pyfpdf"
"py-pdf/fpdf2" -> "jorisschellekens/borb"
"py-pdf/fpdf2" -> "py-pdf/pypdf"
"py-pdf/fpdf2" -> "pmaupin/pdfrw"
"py-pdf/fpdf2" -> "JazzCore/python-pdfkit" ["e"=1]
"py-pdf/fpdf2" -> "xhtml2pdf/xhtml2pdf" ["e"=1]
"py-pdf/fpdf2" -> "pikepdf/pikepdf"
"py-pdf/fpdf2" -> "digidigital/Extensions-and-Scripts-for-pyFPDF-fpdf2"
"py-pdf/fpdf2" -> "WhyNotHugo/python-barcode" ["e"=1]
"py-pdf/fpdf2" -> "Edinburgh-Genome-Foundry/pdf_reports"
"py-pdf/fpdf2" -> "MatthiasValvekens/pyHanko" ["e"=1]
"py-pdf/fpdf2" -> "Kozea/WeasyPrint" ["e"=1]
"py-pdf/fpdf2" -> "posit-dev/py-shiny" ["e"=1]
"py-pdf/fpdf2" -> "jazzband/django-defender" ["e"=1]
"py-pdf/fpdf2" -> "Belval/pdf2image"
"vinci1it2000/formulas" -> "dgorissen/pycel"
"vinci1it2000/formulas" -> "vallettea/koala"
"vinci1it2000/formulas" -> "bradbase/xlcalculator"
"vinci1it2000/formulas" -> "vinci1it2000/schedula"
"vinci1it2000/formulas" -> "reingart/vb2py"
"vinci1it2000/formulas" -> "python-excel/xlutils"
"vinci1it2000/formulas" -> "snoopyjc/xls2xlsx"
"vinci1it2000/formulas" -> "ideonate/nb2xls"
"vinci1it2000/formulas" -> "webermarcolivier/xlsxpandasformatter"
"vinci1it2000/formulas" -> "fkarb/xltable"
"webermarcolivier/xlsxpandasformatter" -> "fkarb/xltable"
"webermarcolivier/xlsxpandasformatter" -> "reingart/vb2py"
"sebthedev/PrincetonCourses" -> "recalapp/recal"
"axu2/tiger-menus" -> "sebthedev/PrincetonCourses"
"dbashford/textract" -> "deanmalmgren/textract"
"dbashford/textract" -> "morungos/node-word-extractor"
"dbashford/textract" -> "Ziv-Barber/officegen" ["e"=1]
"dbashford/textract" -> "mwilliamson/mammoth.js" ["e"=1]
"dbashford/textract" -> "likerRr/code4goal-resume-parser" ["e"=1]
"dbashford/textract" -> "modesty/pdf2json"
"dbashford/textract" -> "nisaacson/pdf-extract"
"dbashford/textract" -> "jbrooksuk/node-summary" ["e"=1]
"dbashford/textract" -> "nathanpeck/clui" ["e"=1]
"dbashford/textract" -> "dkiyatkin/node-office"
"dbashford/textract" -> "ageitgey/node-unfluff" ["e"=1]
"dbashford/textract" -> "nodemailer/mailparser" ["e"=1]
"dbashford/textract" -> "adrienjoly/npm-pdfreader"
"dbashford/textract" -> "lalalic/docx4js"
"dbashford/textract" -> "open-xml-templating/docxtemplater" ["e"=1]
"Belval/pdf2image" -> "pymupdf/PyMuPDF"
"Belval/pdf2image" -> "oschwartz10612/poppler-windows"
"Belval/pdf2image" -> "py-pdf/pypdf"
"Belval/pdf2image" -> "pdfminer/pdfminer.six"
"Belval/pdf2image" -> "jsvine/pdfplumber"
"Belval/pdf2image" -> "pypdfium2-team/pypdfium2"
"Belval/pdf2image" -> "madmaze/pytesseract"
"Belval/pdf2image" -> "camelot-dev/camelot"
"Belval/pdf2image" -> "sirfz/tesserocr" ["e"=1]
"Belval/pdf2image" -> "pikepdf/pikepdf"
"Belval/pdf2image" -> "chezou/tabula-py"
"Belval/pdf2image" -> "doc-analysis/DocBank" ["e"=1]
"Belval/pdf2image" -> "doc-analysis/TableBank" ["e"=1]
"Belval/pdf2image" -> "jalan/pdftotext"
"Belval/pdf2image" -> "ibm-aur-nlp/PubLayNet" ["e"=1]
"vivianhylee/seam-carving" -> "andrewdcampbell/seam-carving"
"vivianhylee/seam-carving" -> "axu2/improved-seam-carving"
"vivianhylee/seam-carving" -> "sameeptandon/python-seam-carving"
"vivianhylee/seam-carving" -> "danasilver/seam-carving"
"vivianhylee/seam-carving" -> "avidLearnerInProgress/pyCAIR"
"vivianhylee/seam-carving" -> "li-plus/seam-carving"
"kz26/PyExcelerate" -> "python-excel/xlutils"
"kz26/PyExcelerate" -> "webermarcolivier/xlsxpandasformatter"
"kz26/PyExcelerate" -> "fkarb/xltable"
"kz26/PyExcelerate" -> "vallettea/koala"
"kz26/PyExcelerate" -> "reingart/vb2py"
"kz26/PyExcelerate" -> "dgorissen/pycel"
"kz26/PyExcelerate" -> "pyexcel/pyexcel"
"kz26/PyExcelerate" -> "PydPiper/pylightxl"
"kz26/PyExcelerate" -> "snoopyjc/xls2xlsx"
"kz26/PyExcelerate" -> "ideonate/nb2xls"
"wagoodman/bridgy" -> "wagoodman/bashful"
"wagoodman/bridgy" -> "prettier/plugin-python"
"ashima/pdf-table-extract" -> "tabulapdf/tabula-extractor"
"tabulapdf/tabula-extractor" -> "ashima/pdf-table-extract"
"jsoma/tesseract-uzn" -> "jsoma/kull"
"jsoma/kull" -> "jsoma/tesseract-uzn"
"haskellcamargo/sclack" ["l"="46.026,5.031"]
"jpbruinsslot/slack-term" ["l"="-13.761,-6.634"]
"wee-slack/wee-slack" ["l"="-49.697,2.457"]
"quack/quack" ["l"="6.093,-20.529"]
"google/gif-for-cli" ["l"="45.997,5.007"]
"haskellcamargo/gemidao-do-zap" ["l"="5.953,-20.338"]
"sunainapai/makesite" ["l"="45.99,5.051"]
"atlanhq/camelot" ["l"="46.101,4.914"]
"danmacnish/cartoonify" ["l"="45.954,5.029"]
"shobrook/rebound" ["l"="45.971,4.973"]
"Squarespace/datasheets" ["l"="45.974,5.079"]
"klaudiosinani/taskbook" ["l"="-3.964,-28.928"]
"Greenwolf/social_mapper" ["l"="-46.777,-27.987"]
"Erotemic/ubelt" ["l"="45.944,5.08"]
"sgreben/jp" ["l"="4.49,-8.016"]
"thoppe/pixelhouse" ["l"="45.955,5.087"]
"euske/pdfminer" ["l"="46.204,4.779"]
"pdfminer/pdfminer.six" ["l"="46.154,4.794"]
"py-pdf/pypdf" ["l"="46.167,4.751"]
"jsvine/pdfplumber" ["l"="46.124,4.839"]
"pmaupin/pdfrw" ["l"="46.137,4.74"]
"chezou/tabula-py" ["l"="46.174,4.815"]
"deanmalmgren/textract" ["l"="46.205,4.716"]
"coolwanglu/pdf2htmlEX" ["l"="46.29,4.796"]
"tabulapdf/tabula" ["l"="46.202,4.859"]
"timClicks/slate" ["l"="46.253,4.737"]
"python-openxml/python-docx" ["l"="46.158,4.645"]
"WZBSocialScienceCenter/pdftabextract" ["l"="45.077,20.516"]
"seatgeek/fuzzywuzzy" ["l"="52.666,25.949"]
"pymupdf/PyMuPDF" ["l"="46.116,4.768"]
"clips/pattern" ["l"="52.89,25.99"]
"ryu577/pyray" ["l"="45.919,5.072"]
"tvytlx/render-py" ["l"="45.913,5.109"]
"avidLearnerInProgress/pyCAIR" ["l"="45.926,5.101"]
"dizballanze/m00dbot" ["l"="45.93,5.089"]
"mraza007/videodownloader" ["l"="45.941,5.103"]
"RameshAditya/asciify" ["l"="45.961,5.061"]
"cosme12/SimpleCoin" ["l"="45.862,5.021"]
"dantaki/vapeplot" ["l"="22.183,14.535"]
"Aditya-Khadilkar/Face-tracking-with-Anime-characters" ["l"="45.896,5.087"]
"M4cs/BabySploit" ["l"="45.957,5.107"]
"BasioMeusPuga/Lector" ["l"="45.924,5.045"]
"cuducos/twitter-cleanup" ["l"="45.93,5.12"]
"claird/PyPDF4" ["l"="46.086,4.692"]
"mwilliamson/python-mammoth" ["l"="46.046,4.573"]
"CenterForOpenScience/pydocx" ["l"="45.98,4.556"]
"mwilliamson/mammoth.js" ["l"="-3.431,-33.414"]
"ShayHill/docx2python" ["l"="46.045,4.607"]
"ankushshah89/python-docx2txt" ["l"="46.104,4.625"]
"elapouya/python-docx-template" ["l"="46.106,4.59"]
"bradmontgomery/word2html" ["l"="46.009,4.562"]
"microsoft/Simplify-Docx" ["l"="46.055,4.546"]
"matthewwithanm/python-markdownify" ["l"="46.254,24.152"]
"mwilliamson/java-mammoth" ["l"="45.964,4.512"]
"weblyzard/inscriptis" ["l"="46.173,24.043"]
"benbalter/word-to-markdown" ["l"="-39.706,14.997"]
"dougmassay/docximport-sigil-plugin" ["l"="46.007,4.528"]
"pqzx/html2docx" ["l"="46.031,4.524"]
"JessicaTegner/pypandoc" ["l"="46.318,24.217"]
"madmaze/pytesseract" ["l"="46.216,4.939"]
"tesseract-ocr/tesseract" ["l"="48.304,29.216"]
"sirfz/tesserocr" ["l"="46.134,7.178"]
"JaidedAI/EasyOCR" ["l"="46.216,7.49"]
"tesseract-ocr/tessdata" ["l"="46.321,5.049"]
"python-pillow/Pillow" ["l"="44.441,20.574"]
"Belval/pdf2image" ["l"="46.103,4.813"]
"opencv/opencv-python" ["l"="43.53,23.417"]
"UB-Mannheim/tesseract" ["l"="46.266,5.027"]
"ocropus-archive/DUP-ocropy" ["l"="46.191,7.159"]
"asweigart/pyautogui" ["l"="-1.377,2.156"]
"Andromeda1957/netpwn" ["l"="45.835,5.413"]
"OffXec/TheDoc" ["l"="45.8,5.449"]
"Eitenne/roxysploit" ["l"="45.865,5.343"]
"ArtifexSoftware/pdf2docx" ["l"="46.106,4.727"]
"python-fan/pdf2word" ["l"="54.552,29.069"]
"pikepdf/pikepdf" ["l"="46.084,4.772"]
"camelot-dev/camelot" ["l"="46.157,4.843"]
"opendatalab/PDF-Extract-Kit" ["l"="40.835,0.064"]
"Ucas-HaoranWei/GOT-OCR2.0" ["l"="40.783,-0.011"]
"wmjordan/PDFPatcher" ["l"="-48.726,12.708"]
"RapidAI/RapidOCR" ["l"="45.783,2.557"]
"joschuck/matrix-webcam" ["l"="2.538,-5.301"]
"reloadware/reloadium" ["l"="45.111,21.013"]
"reingart/pyfpdf" ["l"="46.117,4.692"]
"py-pdf/fpdf2" ["l"="46.065,4.712"]
"JazzCore/python-pdfkit" ["l"="47.238,18.335"]
"xhtml2pdf/xhtml2pdf" ["l"="47.284,18.429"]
"web2py/pydal" ["l"="44.305,20.848"]
"Kozea/WeasyPrint" ["l"="47.203,18.293"]
"web2py/web2py" ["l"="44.353,20.788"]
"WhyNotHugo/python-barcode" ["l"="-19.645,-27.849"]
"tefra/xsdata" ["l"="44.794,20.148"]
"python-excel/xlwt" ["l"="46.239,4.527"]
"jorisschellekens/borb" ["l"="46.043,4.747"]
"Setasign/FPDF" ["l"="-14.151,26.287"]
"mowolf/ChatAnalyzer" ["l"="45.593,4.986"]
"PetengDedet/WhatsApp-Analyzer" ["l"="45.601,5.008"]
"SpiritFour/whatsanalyze" ["l"="45.556,4.962"]
"Pustur/whatsapp-chat-parser" ["l"="-41.152,-32.977"]
"empicano/whatsapp-analyzer" ["l"="45.566,5.001"]
"Netflix/pollyjs" ["l"="-4.073,-29.032"]
"vibora-io/vibora" ["l"="44.835,20.824"]
"mkaz/termgraph" ["l"="45.236,20.667"]
"santinic/pampy" ["l"="45.192,20.836"]
"browsh-org/browsh" ["l"="-13.728,-6.875"]
"nbedos/termtosvg" ["l"="-3.961,-28.764"]
"snipsco/snips-nlu" ["l"="45.927,4.973"]
"xlwings/xlwings" ["l"="46.175,4.501"]
"jmcnamara/XlsxWriter" ["l"="46.205,4.563"]
"pyexcel/pyexcel" ["l"="46.25,4.487"]
"python-excel/xlrd" ["l"="46.209,4.521"]
"ericremoreynolds/excelpython" ["l"="46.168,4.415"]
"Excel-DNA/ExcelDna" ["l"="-50.713,6.607"]
"mhammond/pywin32" ["l"="-1.32,2.122"]
"xltrail/git-xl" ["l"="-50.677,6.577"]
"pywinauto/pywinauto" ["l"="-1.369,2.093"]
"rubberduck-vba/Rubberduck" ["l"="-50.646,6.555"]
"dgorissen/pycel" ["l"="46.246,4.433"]
"fzumstein/python-for-excel" ["l"="46.134,4.429"]
"VBA-tools/VBA-Web" ["l"="-50.622,6.576"]
"quantopian/qgrid" ["l"="43.577,23.976"]
"VBA-tools/VBA-JSON" ["l"="-50.657,6.603"]
"bisguzar/twitter-scraper" ["l"="39.039,33.916"]
"getnikola/nikola" ["l"="44.711,20.622"]
"mm-mansour/Fast-Pandas" ["l"="45.498,26.015"]
"YoongiKim/AutoCrawler" ["l"="46.008,5.117"]
"mileshenrichs/spotify-playlist-generator" ["l"="45.946,5.125"]
"sdushantha/soundcloud-dl" ["l"="45.974,5.12"]
"YouTubeDownload/YouTubeDownload" ["l"="45.957,5.142"]
"rianhunter/dbxfs" ["l"="45.919,5.145"]
"hardikvasa/google-images-download" ["l"="50.641,29.827"]
"s0md3v/Photon" ["l"="-46.739,-27.952"]
"xonsh/xonsh" ["l"="44.954,20.7"]
"cosmicpython/book" ["l"="24.155,-24.748"]
"learning-zone/python-basics" ["l"="24.119,-24.737"]
"MTrajK/coding-problems" ["l"="24.098,-24.761"]
"hannob/snallygaster" ["l"="-47.55,-30.277"]
"swaroopch/byte-of-python" ["l"="24.057,-24.704"]
"Ekultek/WhatWaf" ["l"="-47.78,-30.239"]
"dvf/blockchain" ["l"="-22.414,12.968"]
"spipm/crackcoin" ["l"="47.234,28.781"]
"diego-vicente/som-tsp" ["l"="47.7,26.404"]
"NVIDIA/vid2vid" ["l"="45.652,29.047"]
"richardkiss/pycoin" ["l"="-16.945,10.093"]
"prettier/plugin-python" ["l"="45.713,5.048"]
"conradoqg/naivecoin" ["l"="-21.263,10.867"]
"satwikkansal/python_blockchain_app" ["l"="-22.267,12.896"]
"tesseract-ocr/tessdata_fast" ["l"="46.333,5.113"]
"tesseract-ocr/tessdata_best" ["l"="46.324,5.089"]
"tesseract-ocr/test" ["l"="46.306,5.152"]
"tesseract-ocr/tesstrain" ["l"="46.335,5.149"]
"tesseract-ocr/langdata" ["l"="46.351,5.127"]
"tesseract-ocr/langdata_lstm" ["l"="46.307,5.133"]
"DanBloomberg/leptonica" ["l"="46.375,5.092"]
"tesseract-ocr/tesseract-ocr.github.io" ["l"="46.369,5.147"]
"charlesw/tesseract" ["l"="-34.847,-1.323"]
"camelot-dev/excalibur" ["l"="46.174,4.873"]
"microsoft/table-transformer" ["l"="46.34,6.072"]
"tabulapdf/tabula-java" ["l"="46.233,4.857"]
"Layout-Parser/layout-parser" ["l"="46.286,6.131"]
"DevashishPrasad/CascadeTabNet" ["l"="46.371,6.136"]
"mindee/doctr" ["l"="46.249,6.107"]
"Unstructured-IO/unstructured" ["l"="40.796,0.527"]
"Erotemic/xdoctest" ["l"="45.875,5.113"]
"Kitware/kwcoco" ["l"="45.844,5.128"]
"babluboy/bookworm" ["l"="-17.46,-1.379"]
"johnfactotum/foliate" ["l"="11.625,-7.125"]
"michaldaniel/ebook-viewer" ["l"="-17.478,-1.352"]
"pgaskin/BookBrowser" ["l"="11.696,-7.177"]
"Shreeshrii/tess5train-fonts" ["l"="46.341,5.179"]
"mittagessen/kraken" ["l"="47.418,6.383"]
"nguyenq/jTessBoxEditor" ["l"="46.392,5.158"]
"OCR4all/LAREX" ["l"="47.376,6.402"]
"OCR-D/ocrd_all" ["l"="47.374,6.386"]
"Calamari-OCR/calamari" ["l"="46.212,7.176"]
"Shreeshrii/tessdata_shreetest" ["l"="46.345,5.219"]
"buliasz/tesstrain-windows-gui" ["l"="46.323,5.193"]
"cneud/ocr-gt" ["l"="47.347,6.42"]
"tesseract-ocr/docs" ["l"="46.367,5.169"]
"OCR-D/core" ["l"="47.403,6.351"]
"mikeyy/nonoCAPTCHA" ["l"="45.988,5.097"]
"QianyanTech/Image-Downloader" ["l"="48.295,23.42"]
"golbin/TensorFlow-Tutorials" ["l"="-4.938,-23.063"]
"hellock/icrawler" ["l"="46.041,5.229"]
"GunhoChoi/PyTorch-FastCampus" ["l"="-4.914,-23.091"]
"kakao/khaiii" ["l"="-5.064,-23.092"]
"googlecreativelab/quickdraw-dataset" ["l"="45.655,29.236"]
"qpdf/qpdf" ["l"="-19.029,-25.849"]
"pdfarranger/pdfarranger" ["l"="-49.337,10.019"]
"pypdfium2-team/pypdfium2" ["l"="46.007,4.796"]
"jalan/pdftotext" ["l"="46.128,4.808"]
"doc-analysis/TableBank" ["l"="46.4,6.115"]
"ashima/pdf-table-extract" ["l"="46.262,4.847"]
"jcushman/pdfquery" ["l"="46.238,4.763"]
"kermitt2/grobid" ["l"="-34.111,16.29"]
"ericgazoni/openpyxl" ["l"="46.215,4.452"]
"python-excel/xlutils" ["l"="46.249,4.46"]
"reingart/vb2py" ["l"="46.26,4.439"]
"scanny/python-pptx" ["l"="46.167,4.6"]
"mikemaccana/python-docx" ["l"="46.134,4.57"]
"wagoodman/bashful" ["l"="45.601,5.106"]
"wagoodman/bridgy" ["l"="45.652,5.072"]
"hunterloftis/pbr" ["l"="3.481,-5.254"]
"mkchoi212/fac" ["l"="-1.309,-26.511"]
"bradleyjkemp/memviz" ["l"="4.221,-8.278"]
"tj/mmake" ["l"="4.205,-8.16"]
"asticode/go-astibob" ["l"="45.553,5.128"]
"weaveworks/footloose" ["l"="7.648,-8.939"]
"kubicorn/kubicorn" ["l"="10.381,-10.142"]
"yakovmeister/pdf2image" ["l"="46.508,4.784"]
"ol-th/pdf-img-convert.js" ["l"="46.541,4.784"]
"mooz/node-pdf-image" ["l"="46.585,4.802"]
"dichovsky/pdf-to-png-converter" ["l"="46.562,4.77"]
"k-yle/pdf-to-img" ["l"="46.538,4.76"]
"ffalt/pdf.js-extract" ["l"="46.447,4.785"]
"tesseract-ocr/tessdoc" ["l"="46.289,5.086"]
"nguyenq/tess4j" ["l"="-3.157,12.359"]
"otiai10/gosseract" ["l"="3.458,-9.008"]
"DarkSpiritz/DarkSpiritz" ["l"="45.9,5.254"]
"ecatkins/xpdf_python" ["l"="46.272,4.748"]
"18F/doc_processing_toolkit" ["l"="19.514,13.588"]
"livezingy/tesstrainsh-win" ["l"="46.286,5.165"]
"get-pytube/pytube3" ["l"="45.936,5.205"]
"pytube/pytube" ["l"="44.373,20.333"]
"tdietert/youtubePlaylistDL" ["l"="45.963,5.229"]
"pymupdf/PyMuPDF-Utilities" ["l"="46.045,4.805"]
"pymupdf/RAG" ["l"="41.232,0.634"]
"doc-analysis/DocBank" ["l"="46.363,6.095"]
"BobLd/DocumentLayoutAnalysis" ["l"="47.389,6.479"]
"jstockwin/py-pdf-parser" ["l"="46.032,4.843"]
"thewaifuproject/waifuchat" ["l"="45.849,5.092"]
"HT524/500LineorLess_CN" ["l"="48.044,23.644"]
"sepandhaghighi/art" ["l"="36.197,23.548"]
"DarkSpiritz/DarkSpiritz3" ["l"="45.892,5.281"]
"bnikolic/ExPy" ["l"="46.164,4.382"]
"NoahCardoza/CaptchaHarvester" ["l"="48.162,21.137"]
"theriley106/outCaptcha" ["l"="48.209,21.054"]
"lorien/captcha_solver" ["l"="47.668,22.241"]
"ecthros/uncaptcha2" ["l"="-14.025,-6.332"]
"JackonYang/captcha-tensorflow" ["l"="47.804,22.231"]
"teal33t/captcha_bypass" ["l"="47.541,22.236"]
"MacKey-255/GoodByeCatpcha" ["l"="47.484,22.216"]
"ad-m/python-anticaptcha" ["l"="47.582,22.237"]
"facebookresearch/py2bpf" ["l"="45.68,5.048"]
"k4mpr3t/b4tm4n" ["l"="45.775,5.48"]
"vivianhylee/seam-carving" ["l"="45.836,5.182"]
"axu2/improved-seam-carving" ["l"="45.79,5.197"]
"andrewdcampbell/seam-carving" ["l"="45.801,5.219"]
"axu2/tiger-menus" ["l"="45.749,5.22"]
"li-plus/seam-carving" ["l"="45.822,5.23"]
"andrewdcampbell/face-movie" ["l"="45.775,5.253"]
"assafshocher/InGAN" ["l"="44.704,30.505"]
"erezlife/html2docx" ["l"="46.019,4.5"]
"agl/jbig2enc" ["l"="46.484,5.14"]
"ArtifexSoftware/jbig2dec" ["l"="46.507,5.161"]
"jwilk/didjvu" ["l"="46.51,5.135"]
"ank0409/Ditching-Excel-for-Python" ["l"="46.1,4.32"]
"learn-co-students/excel-to-python-data-science-intro-000" ["l"="46.114,4.367"]
"Edinburgh-Genome-Foundry/pdf_reports" ["l"="45.982,4.668"]
"Edinburgh-Genome-Foundry/CAB" ["l"="45.95,4.654"]
"cuducos/bot-followers" ["l"="6.255,-20.361"]
"garysieling/pdf-js-csv" ["l"="46.419,4.815"]
"SamDecrock/pdf2table" ["l"="46.45,4.83"]
"ideonate/nb2xls" ["l"="46.291,4.445"]
"fkarb/xltable" ["l"="46.273,4.443"]
"webermarcolivier/xlsxpandasformatter" ["l"="46.27,4.43"]
"snoopyjc/xls2xlsx" ["l"="46.282,4.433"]
"vallettea/koala" ["l"="46.267,4.416"]
"haoxiaoyong1014/editor-ui" ["l"="45.904,4.459"]
"haoxiaoyong1014/editor-service" ["l"="45.93,4.481"]
"akashsara/whatsapp-message-analysis" ["l"="45.537,5.004"]
"recalapp/recal" ["l"="45.707,5.251"]
"sebthedev/PrincetonCourses" ["l"="45.723,5.238"]
"miso-belica/sumy" ["l"="52.402,25.698"]
"chrismattmann/tika-python" ["l"="46.209,4.818"]
"Alir3z4/html2text" ["l"="46.202,24.094"]
"dbashford/textract" ["l"="46.362,4.706"]
"michaelhelmick/lassie" ["l"="47.612,19.077"]
"chartbeat-labs/textacy" ["l"="52.7,25.649"]
"rspeer/python-ftfy" ["l"="45.172,20.61"]
"codelucas/newspaper" ["l"="46.098,23.942"]
"buriy/python-readability" ["l"="46.199,23.959"]
"oschwartz10612/poppler-windows" ["l"="46.162,4.932"]
"UB-Mannheim/zotero-ocr" ["l"="-34.046,16.987"]
"conda-forge/poppler-feedstock" ["l"="46.158,4.972"]
"rmyorston/busybox-w32" ["l"="-49.564,7.415"]
"ultralytics/google-images-download" ["l"="46.065,5.374"]
"ultralytics/flickr_scraper" ["l"="46.069,5.408"]
"Joeclinton1/google-images-download" ["l"="46.058,5.33"]
"thoqbk/traprange" ["l"="46.297,4.885"]
"JonathanLink/PDFLayoutTextStripper" ["l"="46.29,4.857"]
"tabulapdf/tabula-extractor" ["l"="46.259,4.88"]
"ropensci/tabulapdf" ["l"="40.567,35.346"]
"apache/pdfbox" ["l"="-3.013,12.429"]
"modesty/pdf2json" ["l"="46.364,4.785"]
"fitraditya/node-pdf2img" ["l"="46.613,4.805"]
"tylerjrichards/Streamlit-for-Data-Science" ["l"="47.292,26.311"]
"thepycoach/automation" ["l"="24.241,-24.44"]
"PacktWorkshops/The-Pandas-Workshop" ["l"="61.372,34.758"]
"stefmolin/Hands-On-Data-Analysis-with-Pandas-2nd-edition" ["l"="47.026,24.773"]
"rostrovsky/pdf-table" ["l"="46.341,4.914"]
"apache/tika" ["l"="-2.902,14.611"]
"chrismattmann/tika-similarity" ["l"="46.328,4.864"]
"LogicalSpark/docker-tikaserver" ["l"="46.28,4.911"]
"apache/tika-docker" ["l"="46.257,4.905"]
"jamesturk/jellyfish" ["l"="52.505,25.991"]
"lalalic/docx2html" ["l"="46.493,4.618"]
"lalalic/docx4js" ["l"="46.447,4.647"]
"artburkart/docx2html" ["l"="46.518,4.616"]
"fagbokforlaget/pdftohtmljs" ["l"="46.53,4.59"]
"evidenceprime/html-docx-js" ["l"="-3.298,-33.525"]
"pyexcel-webwares/django-excel" ["l"="47.351,18.812"]
"pyexcel/pyexcel-xlsx" ["l"="46.316,4.481"]
"pyexcel-webwares/Flask-Excel" ["l"="42.25,21.83"]
"kz26/PyExcelerate" ["l"="46.267,4.463"]
"thombashi/pytablewriter" ["l"="5.74,-9.07"]
"pyexcel/pyexcel-xls" ["l"="46.296,4.493"]
"PydPiper/pylightxl" ["l"="46.246,4.415"]
"vinci1it2000/formulas" ["l"="46.286,4.415"]
"jazzband/tablib" ["l"="44.992,20.661"]
"morungos/node-word-extractor" ["l"="46.423,4.675"]
"dkiyatkin/node-office" ["l"="46.406,4.658"]
"bradbase/xlcalculator" ["l"="46.266,4.392"]
"bradbase/flyingkoala" ["l"="46.276,4.374"]
"abdulr7mann/hackerEnv" ["l"="45.842,5.459"]
"MS-WEB-BN/t14m4t" ["l"="-46.626,-25.866"]
"scalabli/sashay" ["l"="-46.511,-26.099"]
"chrismattmann/nutch-python" ["l"="46.382,4.887"]
"chrismattmann/etllib" ["l"="46.352,4.885"]
"maxpmaxp/pdfreader" ["l"="46.06,4.852"]
"JackMcKew/awesome-python-bytes" ["l"="45.361,20.997"]
"dbmdz/solr-ocrpayload-plugin" ["l"="46.308,4.935"]
"open-xml-templating/docxtemplater" ["l"="-3.33,-33.54"]
"Bouke/docx-mailmerge" ["l"="46.066,4.494"]
"4teamwork/docxcompose" ["l"="46.089,4.542"]
"jhpyle/docassemble" ["l"="52.702,27.958"]
"coleifer/huey" ["l"="44.772,20.906"]
"guigrpa/docx-templates" ["l"="-3.299,-33.561"]
"yourlabs/django-autocomplete-light" ["l"="47.294,18.582"]
"theskumar/python-dotenv" ["l"="44.736,20.793"]
"gali8/Tesseract-OCR-iOS" ["l"="44.355,-22.287"]
"tmbdev/clstm" ["l"="46.233,7.11"]
"pannous/tensorflow-ocr" ["l"="46.262,7.131"]
"tianzhi0549/CTPN" ["l"="46.294,7.178"]
"rmtheis/tess-two" ["l"="59.695,-13.893"]
"chineseocr/chineseocr" ["l"="46.24,7.323"]
"DayBreak-u/chineseocr_lite" ["l"="46.206,7.407"]
"adaptech-cz/Tesseract4Android" ["l"="59.852,-14.148"]
"PaddlePaddle/PaddleOCR" ["l"="50.03,29.7"]
"python-excel/tutorial" ["l"="46.225,4.488"]
"lxml/lxml" ["l"="44.822,20.764"]
"psycopg/psycopg2" ["l"="44.663,20.942"]
"dateutil/dateutil" ["l"="44.87,20.874"]
"chardet/chardet" ["l"="44.896,20.939"]
"PyMySQL/PyMySQL" ["l"="44.456,20.807"]
"benoitc/gunicorn" ["l"="44.574,20.803"]
"JoshData/pdf-redactor" ["l"="-51.803,6.603"]
"rst2pdf/rst2pdf" ["l"="23.86,-27.501"]
"jorisschellekens/borb-examples" ["l"="45.984,4.726"]
"Miksus/rocketry" ["l"="44.996,21.132"]
"ml-tooling/opyrator" ["l"="45.064,26.072"]
"onelivesleft/PrettyErrors" ["l"="44.93,20.609"]
"ariebovenberg/whenever" ["l"="44.988,21.201"]
"joerick/pyinstrument" ["l"="45.006,20.882"]
"adrianlarion/useful-sed" ["l"="-13.513,-6.495"]
"bee-san/pyWhat" ["l"="-45.408,-32.237"]
"bloomberg/memray" ["l"="44.903,20.769"]
"adrienjoly/npm-pdfreader" ["l"="46.409,4.761"]
"flexpaper/pdf2json" ["l"="46.45,4.748"]
"flexpaper/pdftk" ["l"="46.476,4.737"]
"josch/img2pdf" ["l"="46.551,5.173"]
"myollie/img2pdf" ["l"="46.583,5.192"]
"trufanov-nok/scantailor-universal" ["l"="45.984,5.91"]
"manisandro/gImageReader" ["l"="-49.291,10.081"]
"VikParuchuri/marker" ["l"="40.749,0.026"]
"facebookresearch/nougat" ["l"="40.569,0.31"]
"BafS/Gutenberg" ["l"="22.832,-27.134"]
"uber-archive/image-diff" ["l"="-2.188,-0.205"]
"radkovo/Pdf2Dom" ["l"="46.361,4.864"]
"jostmey/NakedTensor" ["l"="47.573,28.732"]
"goessner/mdmath" ["l"="46.958,5.895"]
"alexgreene/WikiQuiz" ["l"="23.812,-27.682"]
"LibrePDF/OpenPDF" ["l"="-2.999,12.402"]
"mzucker/page_dewarp" ["l"="46.112,5.936"]
"scantailor/scantailor" ["l"="46.027,5.904"]
"ocropus/hocr-tools" ["l"="47.352,6.33"]
"wanghaisheng/awesome-ocr" ["l"="46.266,7.206"]
"uclouvain/openjpeg" ["l"="-19.232,-25.53"]
"peirick/Tesseract-OCR_for_Windows" ["l"="46.433,5.097"]
"joweich/chat-miner" ["l"="45.662,4.97"]
"MasterScrat/Chatistics" ["l"="45.672,5.011"]
"py-pdf/benchmarks" ["l"="45.946,4.784"]
"py-pdf/awesome-pdf" ["l"="45.899,4.772"]
"jsoma/kull" ["l"="46.273,4.7"]
"datanews/tables" ["l"="-5.174,-41.366"]
"HazyResearch/pdftotree" ["l"="-34.067,16.466"]
"dpapathanasiou/pdfminer-layout-scanner" ["l"="46.301,4.712"]
"fitnr/addfips" ["l"="46.284,4.737"]
"VikParuchuri/pdftext" ["l"="46.388,5.972"]
"Sunwood-ai-labs/PEGASUS" ["l"="45.967,4.806"]
"ppaanngggg/layoutreader" ["l"="46.455,5.923"]
"huridocs/pdf-document-layout-analysis" ["l"="46.401,5.931"]
"docling-project/docling-parse" ["l"="42.053,0.357"]
"nguyenq/jTessBoxEditorFX" ["l"="46.432,5.178"]
"zdenop/qt-box-editor" ["l"="46.422,5.207"]
"python-openxml/python-xlsx" ["l"="46.114,4.519"]
"thammegowda/tika-ner-corenlp" ["l"="46.408,4.897"]
"pdf2htmlEX/pdf2htmlEX" ["l"="40.81,-0.22"]
"mozilla/pdf.js" ["l"="-3.445,-33.673"]
"wkhtmltopdf/wkhtmltopdf" ["l"="-14.399,26.353"]
"ariya/phantomjs" ["l"="-0.749,-31.781"]
"binux/pyspider" ["l"="48.441,23.405"]
"fxsjy/jieba" ["l"="53.075,27.279"]
"exacity/deeplearningbook-chinese" ["l"="50.749,28.189"]
"pandao/editor.md" ["l"="-2.068,-35.997"]
"fex-team/ueditor" ["l"="-4.11,-33.284"]
"GitbookIO/gitbook" ["l"="-1.134,-32.24"]
"dougmassay/kindleimport-sigil-plugin" ["l"="45.991,4.497"]
"dxsooo/ImageCrawl" ["l"="46.073,5.253"]
"fwang91/IMDb-Face" ["l"="33.165,29.307"]
"amineHorseman/images-web-crawler" ["l"="46.052,5.275"]
"XiaohangZhan/cdp" ["l"="33.236,29.387"]
"soeaver/caffe-model" ["l"="51.656,33.388"]
"ydwen/caffe-face" ["l"="33.15,29.227"]
"rksltnl/Deep-Metric-Learning-CVPR16" ["l"="32.921,29.376"]
"hellock/torchpack" ["l"="46.031,5.26"]
"twtygqyy/caffe-augmentation" ["l"="51.589,33.374"]
"happynear/NormFace" ["l"="33.13,29.276"]
"openimages/dataset" ["l"="50.533,33.067"]
"jordoncm/youtube-dl-playlist" ["l"="45.961,5.271"]
"VikParuchuri/surya" ["l"="40.796,0.027"]
"gitbrent/PptxGenJS" ["l"="-3.186,-33.447"]
"MartinPacker/md2pptx" ["l"="46.466,5.737"]
"Ziv-Barber/officegen" ["l"="-3.332,-33.498"]
"limaoyi1/Auto-PPT" ["l"="-2.911,-33.558"]
"g21589/PPTX2HTML" ["l"="-3.112,-33.507"]
"pipipi-pikachu/PPTist" ["l"="-3.444,-33.074"]
"m3dev/pptx-template" ["l"="46.155,4.549"]
"pipipi-pikachu/pptxtojson" ["l"="-3.031,-33.498"]
"nisaacson/pdf-extract" ["l"="46.401,4.724"]
"galkahana/HummusJS" ["l"="-18.837,-25.989"]
"modesty/p2jsvc" ["l"="46.396,4.801"]
"foliojs/pdfkit" ["l"="-3.343,-33.624"]
"desmondmorris/node-tesseract" ["l"="-31.831,-35.531"]
"tcr/scissors" ["l"="-18.778,-26.036"]
"martinblech/xmltodict" ["l"="44.785,20.69"]
"django/channels" ["l"="47.154,18.404"]
"jschneier/django-storages" ["l"="47.247,18.434"]
"mkleehammer/pyodbc" ["l"="44.326,20.893"]
"mar-muel/artificial-self-AMLD-2020" ["l"="45.635,5.027"]
"lucasrodes/whatstk" ["l"="45.637,4.993"]
"iulica/docx-mailmerge" ["l"="46.045,4.454"]
"xcatx9527/jTessBoxEditorCY" ["l"="46.454,5.192"]
"cos-archives/hgrid" ["l"="45.953,4.551"]
"OpenRefine/OpenRefine" ["l"="-4.393,-42.213"]
"Quartz/bad-data-guide" ["l"="-5.284,-41.43"]
"rawgraphs/rawgraphs-app" ["l"="-4.366,-42.075"]
"wireservice/csvkit" ["l"="-13.546,-6.53"]
"deeppavlov/DeepPavlov" ["l"="53.068,25.804"]
"crownpku/Rasa_NLU_Chi" ["l"="55.665,28.28"]
"snipsco/snips-nlu-rs" ["l"="-10.591,-5.535"]
"sonos/nlu-benchmark" ["l"="56.647,29.253"]
"RasaHQ/rasa" ["l"="53.055,25.935"]
"IntelLabs/nlp-architect" ["l"="52.943,25.66"]
"RasaHQ/rasa_core" ["l"="55.603,28.285"]
"rodrigopivi/Chatito" ["l"="55.555,28.258"]
"mit-nlp/MITIE" ["l"="55.592,28.319"]
"facebookresearch/pytext" ["l"="52.976,25.701"]
"facebook/duckling" ["l"="-20.916,-20.244"]
"allenai/allennlp" ["l"="53.002,25.738"]
"facebookresearch/DrQA" ["l"="54.617,26.505"]
"linkedin/shiv" ["l"="45.064,21.037"]
"metachris/pdfx" ["l"="-34.162,16.334"]
"kermitt2/grobid_client_python" ["l"="-34.106,16.333"]
"digidigital/Extensions-and-Scripts-for-pyFPDF-fpdf2" ["l"="46.032,4.685"]
"MatthiasValvekens/pyHanko" ["l"="-5.968,-35.955"]
"posit-dev/py-shiny" ["l"="40.699,35.245"]
"jazzband/django-defender" ["l"="47.425,18.535"]
"vinci1it2000/schedula" ["l"="46.318,4.381"]
"likerRr/code4goal-resume-parser" ["l"="-20.405,12.828"]
"jbrooksuk/node-summary" ["l"="52.266,25.689"]
"nathanpeck/clui" ["l"="-0.854,-35.986"]
"ageitgey/node-unfluff" ["l"="46.302,23.859"]
"nodemailer/mailparser" ["l"="15.297,-8.341"]
"ibm-aur-nlp/PubLayNet" ["l"="46.376,6.105"]
"sameeptandon/python-seam-carving" ["l"="45.839,5.213"]
"danasilver/seam-carving" ["l"="45.809,5.178"]
"jsoma/tesseract-uzn" ["l"="46.29,4.681"]
}