digraph G {
"nextcloud/helm" -> "immich-app/immich-charts"
"nextcloud/helm" -> "k8up-io/k8up" ["e"=1]
"nextcloud/helm" -> "jellyfin/jellyfin-helm"
"nextcloud/helm" -> "nextcloud/notify_push" ["e"=1]
"nextcloud/helm" -> "democratic-csi/democratic-csi" ["e"=1]
"nextcloud/helm" -> "p80n/photoprism-helm"
"nextcloud/helm" -> "open-webui/helm-charts"
"tavily-ai/tavily-python" -> "tavily-ai/tavily-mcp"
"tavily-ai/tavily-python" -> "tavily-ai/tavily-js"
"tavily-ai/tavily-python" -> "alonlavian/RAGent" ["e"=1]
"amidabuddha/console-chat-gpt" -> "3choff/mcp-chatbot"
"open-webui/docs" -> "open-webui/extension"
"open-webui/docs" -> "open-webui/pipelines"
"open-webui/docs" -> "open-webui/openapi-servers"
"open-webui/docs" -> "open-webui/bot"
"open-webui/docs" -> "open-webui/desktop"
"open-webui/docs" -> "open-webui/helm-charts"
"open-webui/docs" -> "MartianInGreen/OpenWebUI-Tools"
"open-webui/docs" -> "open-webui/cookbook"
"open-webui/docs" -> "Haervwe/open-webui-tools"
"open-webui/docs" -> "VariantConst/OpenWebUI-Monitor" ["e"=1]
"open-webui/docs" -> "EtiennePerot/safe-code-execution"
"open-webui/docs" -> "open-webui/mcpo"
"open-webui/docs" -> "open-webui/llama-cpp-runner"
"open-webui/docs" -> "atgehrhardt/Cerebro-OpenWebUI-Package-Manager"
"nanbingxyz/5ire" -> "daodao97/chatmcp"
"nanbingxyz/5ire" -> "punkpeye/awesome-mcp-clients"
"nanbingxyz/5ire" -> "lastmile-ai/mcp-agent" ["e"=1]
"nanbingxyz/5ire" -> "ThinkInAIXYZ/deepchat" ["e"=1]
"nanbingxyz/5ire" -> "refly-ai/refly" ["e"=1]
"nanbingxyz/5ire" -> "CopilotKit/open-mcp-client"
"nanbingxyz/5ire" -> "nbonamy/witsy"
"nanbingxyz/5ire" -> "NitroRCr/AIaW" ["e"=1]
"nanbingxyz/5ire" -> "LaurieWired/GhidraMCP" ["e"=1]
"nanbingxyz/5ire" -> "modelcontextprotocol/inspector"
"nanbingxyz/5ire" -> "jlowin/fastmcp" ["e"=1]
"nanbingxyz/5ire" -> "evalstate/fast-agent"
"nanbingxyz/5ire" -> "OpenAgentPlatform/Dive"
"nanbingxyz/5ire" -> "CherryHQ/cherry-studio" ["e"=1]
"nanbingxyz/5ire" -> "nanbingxyz/mcpsvr"
"trendy-design/llmchat" -> "ibelick/zola" ["e"=1]
"trendy-design/llmchat" -> "ask0ldd/OsspitaUI"
"trendy-design/llmchat" -> "MindWorkAI/AI-Studio"
"trendy-design/llmchat" -> "nbonamy/witsy"
"trendy-design/llmchat" -> "datvodinh/rag-chatbot" ["e"=1]
"nbonamy/witsy" -> "nanbingxyz/5ire"
"nbonamy/witsy" -> "echohive42/AI-reads-books-page-by-page" ["e"=1]
"nbonamy/witsy" -> "daodao97/chatmcp"
"nbonamy/witsy" -> "OpenAgentPlatform/Dive"
"nbonamy/witsy" -> "farshed/sage"
"nbonamy/witsy" -> "13point5/gemini-cursor" ["e"=1]
"nbonamy/witsy" -> "trycua/acu" ["e"=1]
"nbonamy/witsy" -> "groq/groq-desktop-beta"
"nbonamy/witsy" -> "SecretiveShell/MCP-Bridge"
"nbonamy/witsy" -> "CopilotKit/open-mcp-client"
"nbonamy/witsy" -> "theJayTea/WritingTools" ["e"=1]
"nbonamy/witsy" -> "trendy-design/llmchat"
"nbonamy/witsy" -> "imanoop7/Ollama-OCR" ["e"=1]
"nbonamy/witsy" -> "e2b-dev/open-computer-use" ["e"=1]
"nbonamy/witsy" -> "evalstate/fast-agent"
"open-webui/helm-charts" -> "open-webui/cookbook"
"open-webui/helm-charts" -> "otwld/ollama-helm"
"open-webui/helm-charts" -> "open-webui/bot"
"open-webui/helm-charts" -> "open-webui/extension"
"open-webui/helm-charts" -> "open-webui/desktop"
"open-webui/helm-charts" -> "open-webui/scripts"
"open-webui/helm-charts" -> "tjbck/learn"
"open-webui/helm-charts" -> "open-webui/assistant"
"supercorp-ai/superinterface" -> "supercorp-ai/supercompat"
"supercorp-ai/superinterface" -> "supercorp-ai/superargs"
"cyberchitta/llm-context.py" -> "vivekVells/mcp-pandoc"
"cyberchitta/llm-context.py" -> "cyanheads/atlas-mcp-server"
"cyberchitta/llm-context.py" -> "SDGLBL/mcp-claude-code"
"otwld/ollama-helm" -> "open-webui/helm-charts"
"open-webui/assistant" -> "open-webui/cookbook"
"smithery-ai/sdk" -> "smithery-ai/cli"
"smithery-ai/sdk" -> "letta-ai/letta-node"
"sooperset/mcp-atlassian" -> "modelcontextprotocol/inspector"
"sooperset/mcp-atlassian" -> "GLips/Figma-Context-MCP" ["e"=1]
"sooperset/mcp-atlassian" -> "janwilmake/openapi-mcp-server"
"sooperset/mcp-atlassian" -> "sooperset/mcp-client-slackbot"
"sooperset/mcp-atlassian" -> "punkpeye/awesome-mcp-clients"
"sooperset/mcp-atlassian" -> "zcaceres/markdownify-mcp" ["e"=1]
"sooperset/mcp-atlassian" -> "GongRzhe/Gmail-MCP-Server"
"sooperset/mcp-atlassian" -> "lastmile-ai/mcp-agent" ["e"=1]
"sooperset/mcp-atlassian" -> "appcypher/awesome-mcp-servers" ["e"=1]
"sooperset/mcp-atlassian" -> "ckreiling/mcp-server-docker"
"sooperset/mcp-atlassian" -> "smithery-ai/mcp-obsidian"
"sooperset/mcp-atlassian" -> "JetBrains/mcp-jetbrains"
"sooperset/mcp-atlassian" -> "supercorp-ai/supergateway"
"sooperset/mcp-atlassian" -> "punkpeye/fastmcp"
"sooperset/mcp-atlassian" -> "MarkusPfundstein/mcp-obsidian"
"modelcontextprotocol/inspector" -> "modelcontextprotocol/typescript-sdk" ["e"=1]
"modelcontextprotocol/inspector" -> "modelcontextprotocol/modelcontextprotocol" ["e"=1]
"modelcontextprotocol/inspector" -> "modelcontextprotocol/python-sdk" ["e"=1]
"modelcontextprotocol/inspector" -> "lastmile-ai/mcp-agent" ["e"=1]
"modelcontextprotocol/inspector" -> "jlowin/fastmcp" ["e"=1]
"modelcontextprotocol/inspector" -> "punkpeye/fastmcp"
"modelcontextprotocol/inspector" -> "supercorp-ai/supergateway"
"modelcontextprotocol/inspector" -> "evalstate/fast-agent"
"modelcontextprotocol/inspector" -> "CopilotKit/open-mcp-client"
"modelcontextprotocol/inspector" -> "langchain-ai/langchain-mcp-adapters" ["e"=1]
"modelcontextprotocol/inspector" -> "anaisbetts/mcp-installer"
"modelcontextprotocol/inspector" -> "punkpeye/awesome-mcp-clients"
"modelcontextprotocol/inspector" -> "sparfenyuk/mcp-proxy"
"modelcontextprotocol/inspector" -> "mendableai/firecrawl-mcp-server" ["e"=1]
"modelcontextprotocol/inspector" -> "modelcontextprotocol/docs"
"basicmachines-co/basic-memory" -> "zcaceres/markdownify-mcp" ["e"=1]
"basicmachines-co/basic-memory" -> "StevenStavrakis/obsidian-mcp"
"basicmachines-co/basic-memory" -> "smithery-ai/mcp-obsidian"
"basicmachines-co/basic-memory" -> "anaisbetts/mcp-installer"
"basicmachines-co/basic-memory" -> "doobidoo/mcp-memory-service"
"basicmachines-co/basic-memory" -> "evalstate/mcp-hfspace"
"basicmachines-co/basic-memory" -> "tavily-ai/tavily-mcp"
"basicmachines-co/basic-memory" -> "jae-jae/fetcher-mcp" ["e"=1]
"basicmachines-co/basic-memory" -> "reading-plus-ai/mcp-server-data-exploration"
"basicmachines-co/basic-memory" -> "leonardsellem/n8n-mcp-server" ["e"=1]
"basicmachines-co/basic-memory" -> "vivekVells/mcp-pandoc"
"basicmachines-co/basic-memory" -> "FradSer/mcp-server-mas-sequential-thinking"
"basicmachines-co/basic-memory" -> "syedazharmbnr1/claude-chatgpt-mcp" ["e"=1]
"basicmachines-co/basic-memory" -> "jezweb/roo-commander" ["e"=1]
"basicmachines-co/basic-memory" -> "adhikasp/mcp-twikit"
"SimonB97/win-cli-mcp-server" -> "vivekVells/mcp-pandoc"
"SimonB97/win-cli-mcp-server" -> "pyroprompts/any-chat-completions-mcp"
"SimonB97/win-cli-mcp-server" -> "mamertofabian/mcp-everything-search"
"SimonB97/win-cli-mcp-server" -> "MladenSU/cli-mcp-server"
"SimonB97/win-cli-mcp-server" -> "GongRzhe/terminal-controller-mcp"
"SimonB97/win-cli-mcp-server" -> "pskill9/website-downloader"
"adhikasp/mcp-client-cli" -> "3choff/mcp-chatbot"
"adhikasp/mcp-client-cli" -> "chrishayuk/mcp-cli"
"adhikasp/mcp-client-cli" -> "amidabuddha/console-chat-gpt"
"adhikasp/mcp-client-cli" -> "cognitivecomputations/dolphin-mcp"
"adhikasp/mcp-client-cli" -> "SecretiveShell/MCP-Bridge"
"adhikasp/mcp-client-cli" -> "luohy15/y-cli"
"adhikasp/mcp-client-cli" -> "punkpeye/awesome-mcp-clients"
"adhikasp/mcp-client-cli" -> "wong2/mcp-cli"
"adhikasp/mcp-client-cli" -> "Ejb503/multimodal-mcp-client"
"adhikasp/mcp-client-cli" -> "sparfenyuk/mcp-proxy"
"adhikasp/mcp-client-cli" -> "michaellatman/mcp-get"
"adhikasp/mcp-client-cli" -> "EvalsOne/MCP-connect"
"adhikasp/mcp-client-cli" -> "cyberchitta/llm-context.py"
"adhikasp/mcp-client-cli" -> "Jeamee/MCPHub-Desktop"
"adhikasp/mcp-client-cli" -> "zueai/mcp-manager"
"SecretiveShell/MCP-Bridge" -> "bartolli/mcp-llm-bridge"
"SecretiveShell/MCP-Bridge" -> "cyanheads/atlas-mcp-server"
"SecretiveShell/MCP-Bridge" -> "metatool-ai/metatool-app"
"SecretiveShell/MCP-Bridge" -> "wong2/mcp-cli"
"SecretiveShell/MCP-Bridge" -> "Ejb503/multimodal-mcp-client"
"SecretiveShell/MCP-Bridge" -> "chrishayuk/mcp-cli"
"SecretiveShell/MCP-Bridge" -> "acehoss/mcp-gateway"
"SecretiveShell/MCP-Bridge" -> "adhikasp/mcp-client-cli"
"SecretiveShell/MCP-Bridge" -> "supercorp-ai/supergateway"
"SecretiveShell/MCP-Bridge" -> "lightconetech/mcp-gateway"
"SecretiveShell/MCP-Bridge" -> "cyberchitta/llm-context.py"
"SecretiveShell/MCP-Bridge" -> "open-webui/openapi-servers"
"SecretiveShell/MCP-Bridge" -> "hannesrudolph/mcp-ragdocs"
"SecretiveShell/MCP-Bridge" -> "EvalsOne/MCP-connect"
"SecretiveShell/MCP-Bridge" -> "OpenAgentPlatform/Dive"
"wong2/awesome-mcp-servers" -> "appcypher/awesome-mcp-servers" ["e"=1]
"wong2/awesome-mcp-servers" -> "anaisbetts/mcp-installer"
"wong2/awesome-mcp-servers" -> "MarkusPfundstein/mcp-obsidian"
"wong2/awesome-mcp-servers" -> "wong2/mcp-cli"
"wong2/awesome-mcp-servers" -> "chatmcp/mcpso" ["e"=1]
"wong2/awesome-mcp-servers" -> "mzxrai/mcp-webresearch"
"wong2/awesome-mcp-servers" -> "michaellatman/mcp-get"
"wong2/awesome-mcp-servers" -> "chrishayuk/mcp-cli"
"wong2/awesome-mcp-servers" -> "SecretiveShell/MCP-Bridge"
"wong2/awesome-mcp-servers" -> "QuantGeekDev/docker-mcp"
"wong2/awesome-mcp-servers" -> "anaisbetts/mcp-youtube"
"wong2/awesome-mcp-servers" -> "exa-labs/exa-mcp-server" ["e"=1]
"wong2/awesome-mcp-servers" -> "evalstate/mcp-hfspace"
"wong2/awesome-mcp-servers" -> "joshrutkowski/applescript-mcp"
"wong2/awesome-mcp-servers" -> "zueai/mcp-manager"
"chrishayuk/mcp-cli" -> "bartolli/mcp-llm-bridge"
"chrishayuk/mcp-cli" -> "adhikasp/mcp-client-cli"
"chrishayuk/mcp-cli" -> "mark3labs/mcphost"
"chrishayuk/mcp-cli" -> "SecretiveShell/MCP-Bridge"
"chrishayuk/mcp-cli" -> "patruff/ollama-mcp-bridge"
"chrishayuk/mcp-cli" -> "daodao97/chatmcp"
"chrishayuk/mcp-cli" -> "anaisbetts/mcp-installer"
"chrishayuk/mcp-cli" -> "wong2/mcp-cli"
"chrishayuk/mcp-cli" -> "lastmile-ai/mcp-agent" ["e"=1]
"chrishayuk/mcp-cli" -> "michaellatman/mcp-get"
"chrishayuk/mcp-cli" -> "wong2/awesome-mcp-servers"
"chrishayuk/mcp-cli" -> "supercorp-ai/supergateway"
"chrishayuk/mcp-cli" -> "CopilotKit/open-mcp-client"
"chrishayuk/mcp-cli" -> "nanbingxyz/5ire"
"chrishayuk/mcp-cli" -> "modelcontextprotocol/inspector"
"MarkusPfundstein/mcp-obsidian" -> "smithery-ai/mcp-obsidian"
"MarkusPfundstein/mcp-obsidian" -> "coddingtonbear/obsidian-local-rest-api" ["e"=1]
"MarkusPfundstein/mcp-obsidian" -> "StevenStavrakis/obsidian-mcp"
"MarkusPfundstein/mcp-obsidian" -> "jacksteamdev/obsidian-mcp-tools"
"MarkusPfundstein/mcp-obsidian" -> "cyanheads/obsidian-mcp-server"
"MarkusPfundstein/mcp-obsidian" -> "anaisbetts/mcp-installer"
"MarkusPfundstein/mcp-obsidian" -> "wong2/awesome-mcp-servers"
"MarkusPfundstein/mcp-obsidian" -> "vivekVells/mcp-pandoc"
"MarkusPfundstein/mcp-obsidian" -> "SecretiveShell/MCP-Bridge"
"MarkusPfundstein/mcp-obsidian" -> "suekou/mcp-notion-server"
"MarkusPfundstein/mcp-obsidian" -> "zueai/mcp-manager"
"MarkusPfundstein/mcp-obsidian" -> "zcaceres/markdownify-mcp" ["e"=1]
"MarkusPfundstein/mcp-obsidian" -> "cyanheads/atlas-mcp-server"
"MarkusPfundstein/mcp-obsidian" -> "MarkusPfundstein/mcp-gsuite"
"MarkusPfundstein/mcp-obsidian" -> "qdrant/mcp-server-qdrant"
"wong2/mcp-cli" -> "wong2/litemcp"
"wong2/mcp-cli" -> "SecretiveShell/MCP-Bridge"
"wong2/mcp-cli" -> "SimonB97/win-cli-mcp-server"
"wong2/mcp-cli" -> "supercorp-ai/supergateway"
"reading-plus-ai/mcp-server-data-exploration" -> "pskill9/website-downloader"
"reading-plus-ai/mcp-server-data-exploration" -> "ChronulusAI/chronulus-mcp"
"reading-plus-ai/mcp-server-data-exploration" -> "vivekVells/mcp-pandoc"
"reading-plus-ai/mcp-server-data-exploration" -> "YuChenSSR/mindmap-mcp-server"
"reading-plus-ai/mcp-server-data-exploration" -> "haris-musa/excel-mcp-server"
"reading-plus-ai/mcp-server-data-exploration" -> "mzxrai/mcp-webresearch"
"reading-plus-ai/mcp-server-data-exploration" -> "reading-plus-ai/mcp-server-deep-research"
"reading-plus-ai/mcp-server-data-exploration" -> "CheMiguel23/MemoryMesh"
"reading-plus-ai/mcp-server-data-exploration" -> "hannesrudolph/mcp-ragdocs"
"reading-plus-ai/mcp-server-data-exploration" -> "jasonjmcghee/claude-debugs-for-you"
"reading-plus-ai/mcp-server-data-exploration" -> "recursechat/mcp-server-apple-shortcuts"
"reading-plus-ai/mcp-server-data-exploration" -> "sammcj/mcp-package-version"
"reading-plus-ai/mcp-server-data-exploration" -> "zcaceres/markdownify-mcp" ["e"=1]
"reading-plus-ai/mcp-server-data-exploration" -> "QuantGeekDev/docker-mcp"
"reading-plus-ai/mcp-server-data-exploration" -> "cyberchitta/llm-context.py"
"modelcontextprotocol/create-python-server" -> "modelcontextprotocol/create-typescript-server"
"modelcontextprotocol/create-python-server" -> "modelcontextprotocol/docs"
"modelcontextprotocol/create-python-server" -> "modelcontextprotocol/quickstart-resources"
"modelcontextprotocol/create-python-server" -> "modelcontextprotocol/.github"
"Haervwe/open-webui-tools" -> "open-webui/openapi-servers"
"Haervwe/open-webui-tools" -> "open-webui/bot"
"Haervwe/open-webui-tools" -> "blascerecer/open-webui"
"QuantGeekDev/docker-mcp" -> "ckreiling/mcp-server-docker"
"QuantGeekDev/docker-mcp" -> "pskill9/website-downloader"
"QuantGeekDev/docker-mcp" -> "SDGLBL/mcp-claude-code"
"QuantGeekDev/docker-mcp" -> "SimonB97/win-cli-mcp-server"
"QuantGeekDev/docker-mcp" -> "vivekVells/mcp-pandoc"
"QuantGeekDev/docker-mcp" -> "recursechat/mcp-server-apple-shortcuts"
"QuantGeekDev/docker-mcp" -> "reading-plus-ai/mcp-server-data-exploration"
"varunneal/spotify-mcp" -> "ZubeidHendricks/youtube-mcp-server"
"varunneal/spotify-mcp" -> "ckreiling/mcp-server-docker"
"varunneal/spotify-mcp" -> "GongRzhe/Gmail-MCP-Server"
"ckreiling/mcp-server-docker" -> "QuantGeekDev/docker-mcp"
"ckreiling/mcp-server-docker" -> "Flux159/mcp-server-kubernetes" ["e"=1]
"ckreiling/mcp-server-docker" -> "vivekVells/mcp-pandoc"
"ckreiling/mcp-server-docker" -> "varunneal/spotify-mcp"
"ckreiling/mcp-server-docker" -> "GongRzhe/Gmail-MCP-Server"
"ckreiling/mcp-server-docker" -> "DMontgomery40/deepseek-mcp-server"
"ckreiling/mcp-server-docker" -> "Automata-Labs-team/code-sandbox-mcp"
"ckreiling/mcp-server-docker" -> "leonardsellem/n8n-mcp-server" ["e"=1]
"ckreiling/mcp-server-docker" -> "AI-QL/chat-mcp"
"ckreiling/mcp-server-docker" -> "e2b-dev/mcp-server"
"ckreiling/mcp-server-docker" -> "reading-plus-ai/mcp-server-data-exploration"
"ckreiling/mcp-server-docker" -> "SimonB97/win-cli-mcp-server"
"ckreiling/mcp-server-docker" -> "YuChenSSR/mindmap-mcp-server"
"ckreiling/mcp-server-docker" -> "cyanheads/atlas-mcp-server"
"ckreiling/mcp-server-docker" -> "admica/FileScopeMCP"
"designcomputer/mysql_mcp_server" -> "benborla/mcp-server-mysql"
"designcomputer/mysql_mcp_server" -> "runekaagaard/mcp-alchemy"
"designcomputer/mysql_mcp_server" -> "f4ww4z/mcp-mysql-server"
"designcomputer/mysql_mcp_server" -> "haris-musa/excel-mcp-server"
"designcomputer/mysql_mcp_server" -> "QuantGeekDev/docker-mcp"
"designcomputer/mysql_mcp_server" -> "dpflucas/mysql-mcp-server"
"designcomputer/mysql_mcp_server" -> "reading-plus-ai/mcp-server-data-exploration"
"designcomputer/mysql_mcp_server" -> "bytebase/dbhub"
"3choff/mcp-chatbot" -> "amidabuddha/console-chat-gpt"
"3choff/mcp-chatbot" -> "adhikasp/mcp-client-cli"
"michaellatman/mcp-get" -> "Ejb503/multimodal-mcp-client"
"michaellatman/mcp-get" -> "mcp-get/community-servers"
"michaellatman/mcp-get" -> "wong2/mcp-cli"
"michaellatman/mcp-get" -> "ssut/Remote-MCP"
"michaellatman/mcp-get" -> "dkmaker/mcp-rest-api"
"michaellatman/mcp-get" -> "wong2/litemcp"
"michaellatman/mcp-get" -> "rectalogic/langchain-mcp" ["e"=1]
"michaellatman/mcp-get" -> "anaisbetts/mcp-installer"
"adamwattis/mcp-proxy-server" -> "metatool-ai/mcp-server-metamcp"
"blazickjp/arxiv-mcp-server" -> "zcaceres/markdownify-mcp" ["e"=1]
"blazickjp/arxiv-mcp-server" -> "adityak74/mcp-scholarly"
"blazickjp/arxiv-mcp-server" -> "andybrandt/mcp-simple-arxiv"
"blazickjp/arxiv-mcp-server" -> "kaliaboi/mcp-zotero"
"blazickjp/arxiv-mcp-server" -> "MarkusPfundstein/mcp-obsidian"
"blazickjp/arxiv-mcp-server" -> "u14app/deep-research" ["e"=1]
"blazickjp/arxiv-mcp-server" -> "basicmachines-co/basic-memory"
"blazickjp/arxiv-mcp-server" -> "exa-labs/exa-mcp-server" ["e"=1]
"blazickjp/arxiv-mcp-server" -> "cyanheads/atlas-mcp-server"
"blazickjp/arxiv-mcp-server" -> "QuantGeekDev/docker-mcp"
"blazickjp/arxiv-mcp-server" -> "appcypher/awesome-mcp-servers" ["e"=1]
"blazickjp/arxiv-mcp-server" -> "reading-plus-ai/mcp-server-data-exploration"
"blazickjp/arxiv-mcp-server" -> "mzxrai/mcp-webresearch"
"blazickjp/arxiv-mcp-server" -> "HKUDS/Auto-Deep-Research" ["e"=1]
"blazickjp/arxiv-mcp-server" -> "ZongqianLi/ReasonGraph" ["e"=1]
"ccabanillas/notion-mcp" -> "suekou/mcp-notion-server"
"suekou/mcp-notion-server" -> "makenotion/notion-mcp-server" ["e"=1]
"suekou/mcp-notion-server" -> "ccabanillas/notion-mcp"
"suekou/mcp-notion-server" -> "danhilse/notion_mcp"
"suekou/mcp-notion-server" -> "anaisbetts/mcp-installer"
"suekou/mcp-notion-server" -> "v-3/notion-server"
"suekou/mcp-notion-server" -> "MarkusPfundstein/mcp-obsidian"
"suekou/mcp-notion-server" -> "smithery-ai/mcp-obsidian"
"suekou/mcp-notion-server" -> "anaisbetts/mcp-youtube"
"suekou/mcp-notion-server" -> "MarkusPfundstein/mcp-gsuite"
"suekou/mcp-notion-server" -> "awkoy/notion-mcp-server"
"suekou/mcp-notion-server" -> "ppl-ai/modelcontextprotocol" ["e"=1]
"suekou/mcp-notion-server" -> "GongRzhe/Gmail-MCP-Server"
"suekou/mcp-notion-server" -> "kimtaeyoon83/mcp-server-youtube-transcript"
"suekou/mcp-notion-server" -> "qdrant/mcp-server-qdrant"
"suekou/mcp-notion-server" -> "punkpeye/fastmcp"
"Automata-Labs-team/MCP-Server-Playwright" -> "blackwhite084/playwright-plus-python-mcp"
"Automata-Labs-team/MCP-Server-Playwright" -> "kimtaeyoon83/mcp-server-youtube-transcript"
"Automata-Labs-team/MCP-Server-Playwright" -> "g0t4/mcp-server-commands"
"anaisbetts/mcp-youtube" -> "anaisbetts/mcp-installer"
"anaisbetts/mcp-youtube" -> "ZubeidHendricks/youtube-mcp-server"
"anaisbetts/mcp-youtube" -> "kimtaeyoon83/mcp-server-youtube-transcript"
"anaisbetts/mcp-youtube" -> "pierrebrunelle/mcp-server-openai"
"anaisbetts/mcp-youtube" -> "tanigami/mcp-server-perplexity"
"anaisbetts/mcp-youtube" -> "zueai/mcp-manager"
"anaisbetts/mcp-youtube" -> "vivekVells/mcp-pandoc"
"kimtaeyoon83/mcp-server-youtube-transcript" -> "Automata-Labs-team/MCP-Server-Playwright"
"kimtaeyoon83/mcp-server-youtube-transcript" -> "mzxrai/mcp-webresearch"
"kimtaeyoon83/mcp-server-youtube-transcript" -> "anaisbetts/mcp-youtube"
"kimtaeyoon83/mcp-server-youtube-transcript" -> "recursechat/mcp-server-apple-shortcuts"
"kimtaeyoon83/mcp-server-youtube-transcript" -> "zueai/mcp-manager"
"kimtaeyoon83/mcp-server-youtube-transcript" -> "vivekVells/mcp-pandoc"
"kimtaeyoon83/mcp-server-youtube-transcript" -> "pskill9/website-downloader"
"open-webui/pipelines" -> "open-webui/docs"
"open-webui/pipelines" -> "open-webui/mcpo"
"open-webui/pipelines" -> "open-webui/desktop"
"open-webui/pipelines" -> "open-webui/openapi-servers"
"open-webui/pipelines" -> "matatonic/openedai-speech" ["e"=1]
"open-webui/pipelines" -> "open-webui/extension"
"open-webui/pipelines" -> "EtiennePerot/safe-code-execution"
"open-webui/pipelines" -> "open-webui/helm-charts"
"open-webui/pipelines" -> "open-webui/bot"
"open-webui/pipelines" -> "VariantConst/OpenWebUI-Monitor" ["e"=1]
"open-webui/pipelines" -> "av/harbor" ["e"=1]
"open-webui/pipelines" -> "win4r/GraphRAG4OpenWebUI" ["e"=1]
"open-webui/pipelines" -> "Haervwe/open-webui-tools"
"open-webui/pipelines" -> "JordanNanos/example-pipelines"
"open-webui/pipelines" -> "SecretiveShell/MCP-Bridge"
"EtiennePerot/safe-code-execution" -> "tjbck/learn"
"EtiennePerot/safe-code-execution" -> "open-webui/bot"
"EtiennePerot/safe-code-execution" -> "atgehrhardt/Cerebro-OpenWebUI-Package-Manager"
"EtiennePerot/safe-code-execution" -> "MartianInGreen/OpenWebUI-Tools"
"EtiennePerot/safe-code-execution" -> "JordanNanos/example-pipelines"
"EtiennePerot/safe-code-execution" -> "open-webui/openapi-servers"
"modelcontextprotocol/docs" -> "modelcontextprotocol/create-python-server"
"modelcontextprotocol/docs" -> "modelcontextprotocol/create-typescript-server"
"modelcontextprotocol/docs" -> "modelcontextprotocol/quickstart-resources"
"modelcontextprotocol/docs" -> "modelcontextprotocol/modelcontextprotocol" ["e"=1]
"modelcontextprotocol/docs" -> "modelcontextprotocol/.github"
"modelcontextprotocol/docs" -> "mintlify/docs" ["e"=1]
"modelcontextprotocol/docs" -> "modelcontextprotocol/inspector"
"pyroprompts/any-chat-completions-mcp" -> "pierrebrunelle/mcp-server-openai"
"anaisbetts/mcp-installer" -> "anaisbetts/mcp-youtube"
"anaisbetts/mcp-installer" -> "wong2/awesome-mcp-servers"
"anaisbetts/mcp-installer" -> "MarkusPfundstein/mcp-obsidian"
"anaisbetts/mcp-installer" -> "QuantGeekDev/docker-mcp"
"anaisbetts/mcp-installer" -> "appcypher/awesome-mcp-servers" ["e"=1]
"anaisbetts/mcp-installer" -> "michaellatman/mcp-get"
"anaisbetts/mcp-installer" -> "wonderwhy-er/DesktopCommanderMCP" ["e"=1]
"anaisbetts/mcp-installer" -> "kimtaeyoon83/mcp-server-youtube-transcript"
"anaisbetts/mcp-installer" -> "smithery-ai/mcp-obsidian"
"anaisbetts/mcp-installer" -> "modelcontextprotocol/inspector"
"anaisbetts/mcp-installer" -> "suekou/mcp-notion-server"
"anaisbetts/mcp-installer" -> "chrishayuk/mcp-cli"
"anaisbetts/mcp-installer" -> "reading-plus-ai/mcp-server-data-exploration"
"anaisbetts/mcp-installer" -> "joshrutkowski/applescript-mcp"
"anaisbetts/mcp-installer" -> "qdrant/mcp-server-qdrant"
"smithery-ai/mcp-obsidian" -> "MarkusPfundstein/mcp-obsidian"
"smithery-ai/mcp-obsidian" -> "StevenStavrakis/obsidian-mcp"
"smithery-ai/mcp-obsidian" -> "coddingtonbear/obsidian-local-rest-api" ["e"=1]
"smithery-ai/mcp-obsidian" -> "vivekVells/mcp-pandoc"
"smithery-ai/mcp-obsidian" -> "anaisbetts/mcp-installer"
"smithery-ai/mcp-obsidian" -> "ckreiling/mcp-server-docker"
"smithery-ai/mcp-obsidian" -> "PublikPrinciple/obsidian-mcp-rest"
"smithery-ai/mcp-obsidian" -> "zcaceres/markdownify-mcp" ["e"=1]
"smithery-ai/mcp-obsidian" -> "varunneal/spotify-mcp"
"smithery-ai/mcp-obsidian" -> "cyanheads/obsidian-mcp-server"
"smithery-ai/mcp-obsidian" -> "suekou/mcp-notion-server"
"smithery-ai/mcp-obsidian" -> "basicmachines-co/basic-memory"
"smithery-ai/mcp-obsidian" -> "ZubeidHendricks/youtube-mcp-server"
"smithery-ai/mcp-obsidian" -> "exa-labs/exa-mcp-server" ["e"=1]
"smithery-ai/mcp-obsidian" -> "adityak74/mcp-scholarly"
"neo4j-contrib/mcp-neo4j" -> "cyanheads/atlas-mcp-server"
"g0t4/mcp-server-commands" -> "MladenSU/cli-mcp-server"
"g0t4/mcp-server-commands" -> "tumf/mcp-shell-server"
"NormVg/kraken" -> "shhivv/flowplane"
"AI-QL/chat-mcp" -> "bazinga012/mcp_code_executor"
"AI-QL/chat-mcp" -> "AI-QL/chat-ui"
"AI-QL/chat-mcp" -> "Automata-Labs-team/code-sandbox-mcp"
"mark3labs/mcp-filesystem-server" -> "mamertofabian/mcp-everything-search"
"mark3labs/mcp-filesystem-server" -> "strowk/mcp-k8s-go" ["e"=1]
"mark3labs/mcp-filesystem-server" -> "MladenSU/cli-mcp-server"
"mzxrai/mcp-webresearch" -> "qpd-v/mcp-ragdocs"
"mzxrai/mcp-webresearch" -> "zueai/mcp-manager"
"mzxrai/mcp-webresearch" -> "kimtaeyoon83/mcp-server-youtube-transcript"
"mzxrai/mcp-webresearch" -> "pskill9/website-downloader"
"mzxrai/mcp-webresearch" -> "qpd-v/mcp-DEEPwebresearch"
"mzxrai/mcp-webresearch" -> "hannesrudolph/mcp-ragdocs"
"mzxrai/mcp-webresearch" -> "vivekVells/mcp-pandoc"
"mzxrai/mcp-webresearch" -> "reading-plus-ai/mcp-server-data-exploration"
"mzxrai/mcp-webresearch" -> "g0t4/mcp-server-commands"
"mzxrai/mcp-webresearch" -> "CheMiguel23/MemoryMesh"
"BrainDriveAI/openwebui-pipelines" -> "MartianInGreen/OpenWebUI-Tools"
"qdrant/mcp-server-qdrant" -> "sirmews/mcp-pinecone"
"qdrant/mcp-server-qdrant" -> "ppl-ai/modelcontextprotocol" ["e"=1]
"qdrant/mcp-server-qdrant" -> "anaisbetts/mcp-installer"
"qdrant/mcp-server-qdrant" -> "neo4j-contrib/mcp-neo4j"
"qdrant/mcp-server-qdrant" -> "StevenStavrakis/obsidian-mcp"
"qdrant/mcp-server-qdrant" -> "weaviate/mcp-server-weaviate"
"qdrant/mcp-server-qdrant" -> "vivekVells/mcp-pandoc"
"qdrant/mcp-server-qdrant" -> "qdrant/workshop-ultimate-hybrid-search"
"qdrant/mcp-server-qdrant" -> "MarkusPfundstein/mcp-obsidian"
"qdrant/mcp-server-qdrant" -> "wong2/mcp-cli"
"qdrant/mcp-server-qdrant" -> "janwilmake/openapi-mcp-server"
"qdrant/mcp-server-qdrant" -> "mzxrai/mcp-webresearch"
"qdrant/mcp-server-qdrant" -> "zueai/mcp-manager"
"qdrant/mcp-server-qdrant" -> "mark3labs/mcp-filesystem-server"
"qdrant/mcp-server-qdrant" -> "coleam00/mcp-mem0" ["e"=1]
"evalstate/mcp-hfspace" -> "pierrebrunelle/mcp-server-openai"
"evalstate/mcp-hfspace" -> "vivekVells/mcp-pandoc"
"evalstate/mcp-hfspace" -> "cyberchitta/llm-context.py"
"MarkusPfundstein/mcp-gsuite" -> "GongRzhe/Gmail-MCP-Server"
"MarkusPfundstein/mcp-gsuite" -> "ZilongXue/claude-post"
"MarkusPfundstein/mcp-gsuite" -> "janwilmake/openapi-mcp-server"
"MarkusPfundstein/mcp-gsuite" -> "zcaceres/gtasks-mcp"
"MarkusPfundstein/mcp-gsuite" -> "vivekVells/mcp-pandoc"
"MarkusPfundstein/mcp-gsuite" -> "mzxrai/mcp-webresearch"
"MarkusPfundstein/mcp-gsuite" -> "nspady/google-calendar-mcp"
"MarkusPfundstein/mcp-gsuite" -> "evalstate/mcp-hfspace"
"MarkusPfundstein/mcp-gsuite" -> "zueai/mcp-manager"
"MarkusPfundstein/mcp-gsuite" -> "anaisbetts/mcp-youtube"
"vidhupv/x-mcp" -> "EnesCinr/twitter-mcp" ["e"=1]
"MartianInGreen/OpenWebUI-Tools" -> "BrainDriveAI/openwebui-pipelines"
"MartianInGreen/OpenWebUI-Tools" -> "karaketir16/openwebui-langfuse"
"modelcontextprotocol/create-typescript-server" -> "modelcontextprotocol/create-python-server"
"open-webui/extension" -> "open-webui/bot"
"open-webui/extension" -> "open-webui/cookbook"
"open-webui/extension" -> "open-webui/llama-cpp-runner"
"open-webui/cookbook" -> "open-webui/scripts"
"open-webui/cookbook" -> "open-webui/assistant"
"bartolli/mcp-llm-bridge" -> "chrishayuk/mcp-cli"
"bartolli/mcp-llm-bridge" -> "SecretiveShell/MCP-Bridge"
"bartolli/mcp-llm-bridge" -> "patruff/ollama-mcp-bridge"
"atgehrhardt/Cerebro-OpenWebUI-Package-Manager" -> "open-webui/scripts"
"atgehrhardt/Cerebro-OpenWebUI-Package-Manager" -> "open-webui/community-platform"
"open-webui/community-platform" -> "open-webui/llama-cpp-runner"
"open-webui/community-platform" -> "open-webui/scripts"
"Nutlope/self.so" -> "unbody-io/unbody"
"Nutlope/self.so" -> "jasonppy/VoiceStar"
"Nutlope/self.so" -> "f/mcptools"
"Nutlope/self.so" -> "letta-ai/agent-file"
"Nutlope/self.so" -> "ibelick/zola" ["e"=1]
"Nutlope/self.so" -> "Nutlope/napkins" ["e"=1]
"Nutlope/self.so" -> "open-webui/mcpo"
"Nutlope/self.so" -> "Nutlope/loras-dev" ["e"=1]
"Nutlope/self.so" -> "upstash/rag-chat-component" ["e"=1]
"Nutlope/self.so" -> "pogjester/company-research-agent" ["e"=1]
"benborla/mcp-server-mysql" -> "designcomputer/mysql_mcp_server"
"benborla/mcp-server-mysql" -> "bytebase/dbhub"
"benborla/mcp-server-mysql" -> "v-3/notion-server"
"bytebase/dbhub" -> "runekaagaard/mcp-alchemy"
"bytebase/dbhub" -> "benborla/mcp-server-mysql"
"bytebase/dbhub" -> "FreePeak/db-mcp-server"
"punkpeye/awesome-mcp-clients" -> "nanbingxyz/5ire"
"punkpeye/awesome-mcp-clients" -> "lastmile-ai/mcp-agent" ["e"=1]
"punkpeye/awesome-mcp-clients" -> "punkpeye/awesome-mcp-servers" ["e"=1]
"punkpeye/awesome-mcp-clients" -> "adhikasp/mcp-client-cli"
"punkpeye/awesome-mcp-clients" -> "daodao97/chatmcp"
"punkpeye/awesome-mcp-clients" -> "appcypher/awesome-mcp-servers" ["e"=1]
"punkpeye/awesome-mcp-clients" -> "CopilotKit/open-mcp-client"
"punkpeye/awesome-mcp-clients" -> "modelcontextprotocol/inspector"
"punkpeye/awesome-mcp-clients" -> "jlowin/fastmcp" ["e"=1]
"punkpeye/awesome-mcp-clients" -> "evalstate/fast-agent"
"punkpeye/awesome-mcp-clients" -> "mcp-use/mcp-use" ["e"=1]
"punkpeye/awesome-mcp-clients" -> "modelcontextprotocol/python-sdk" ["e"=1]
"punkpeye/awesome-mcp-clients" -> "modelcontextprotocol/typescript-sdk" ["e"=1]
"punkpeye/awesome-mcp-clients" -> "punkpeye/fastmcp"
"punkpeye/awesome-mcp-clients" -> "executeautomation/mcp-playwright" ["e"=1]
"TencentEdgeOne/edgeone-pages-mcp" -> "Azure-Samples/azure-postgresql-mcp"
"f/mcptools" -> "unbody-io/unbody"
"f/mcptools" -> "jasonppy/VoiceStar"
"f/mcptools" -> "letta-ai/agent-file"
"f/mcptools" -> "Nutlope/self.so"
"f/mcptools" -> "open-webui/mcpo"
"f/mcptools" -> "Vexa-ai/vexa" ["e"=1]
"f/mcptools" -> "attentionmech/mav" ["e"=1]
"f/mcptools" -> "langwatch/scenario" ["e"=1]
"tavily-ai/tavily-mcp" -> "DaInfernalCoder/perplexity-mcp" ["e"=1]
"tavily-ai/tavily-mcp" -> "fatwang2/search1api-mcp"
"tavily-ai/tavily-mcp" -> "tavily-ai/tavily-python"
"tavily-ai/tavily-mcp" -> "tavily-ai/tavily-crawl-beta-test"
"tavily-ai/tavily-mcp" -> "e2b-dev/mcp-server"
"tavily-ai/tavily-mcp" -> "Toolbase-AI/toolbase"
"tavily-ai/tavily-mcp" -> "zcaceres/fetch-mcp"
"tavily-ai/tavily-mcp" -> "ZubeidHendricks/youtube-mcp-server"
"patruff/ollama-mcp-bridge" -> "bartolli/mcp-llm-bridge"
"patruff/ollama-mcp-bridge" -> "chrishayuk/mcp-cli"
"patruff/ollama-mcp-bridge" -> "SecretiveShell/MCP-Bridge"
"patruff/ollama-mcp-bridge" -> "rawveg/ollama-mcp"
"patruff/ollama-mcp-bridge" -> "ggozad/oterm" ["e"=1]
"patruff/ollama-mcp-bridge" -> "mark3labs/mcphost"
"patruff/ollama-mcp-bridge" -> "robdodson/ollama-mcp-db"
"patruff/ollama-mcp-bridge" -> "cognitivecomputations/dolphin-mcp"
"patruff/ollama-mcp-bridge" -> "adhikasp/mcp-client-cli"
"patruff/ollama-mcp-bridge" -> "OpenAgentPlatform/Dive"
"patruff/ollama-mcp-bridge" -> "zcaceres/markdownify-mcp" ["e"=1]
"patruff/ollama-mcp-bridge" -> "NightTrek/Ollama-mcp"
"jasonppy/VoiceStar" -> "unbody-io/unbody"
"jasonppy/VoiceStar" -> "gwh22/UniVoice"
"jasonppy/VoiceStar" -> "f/mcptools"
"jasonppy/VoiceStar" -> "letta-ai/agent-file"
"daodao97/chatmcp" -> "BigSweetPotatoStudio/HyperChat" ["e"=1]
"daodao97/chatmcp" -> "nanbingxyz/5ire"
"daodao97/chatmcp" -> "chrishayuk/mcp-cli"
"daodao97/chatmcp" -> "CopilotKit/open-mcp-client"
"daodao97/chatmcp" -> "SecretiveShell/MCP-Bridge"
"daodao97/chatmcp" -> "chatmcp/mcp-server-chatsum" ["e"=1]
"daodao97/chatmcp" -> "punkpeye/awesome-mcp-clients"
"daodao97/chatmcp" -> "october-coder/api-check" ["e"=1]
"daodao97/chatmcp" -> "NitroRCr/AIaW" ["e"=1]
"daodao97/chatmcp" -> "evalstate/fast-agent"
"daodao97/chatmcp" -> "lastmile-ai/mcp-agent" ["e"=1]
"daodao97/chatmcp" -> "adhikasp/mcp-client-cli"
"daodao97/chatmcp" -> "u14app/deep-research" ["e"=1]
"daodao97/chatmcp" -> "refly-ai/refly" ["e"=1]
"daodao97/chatmcp" -> "nbonamy/witsy"
"evalstate/fast-agent" -> "lastmile-ai/mcp-agent" ["e"=1]
"evalstate/fast-agent" -> "modelcontextprotocol/inspector"
"evalstate/fast-agent" -> "punkpeye/awesome-mcp-clients"
"evalstate/fast-agent" -> "modelcontextprotocol/python-sdk" ["e"=1]
"evalstate/fast-agent" -> "daodao97/chatmcp"
"evalstate/fast-agent" -> "nanbingxyz/5ire"
"evalstate/fast-agent" -> "jlowin/fastmcp" ["e"=1]
"evalstate/fast-agent" -> "anaisbetts/mcp-installer"
"evalstate/fast-agent" -> "supercorp-ai/supergateway"
"evalstate/fast-agent" -> "mcp-use/mcp-use" ["e"=1]
"evalstate/fast-agent" -> "open-webui/mcpo"
"evalstate/fast-agent" -> "CopilotKit/open-mcp-client"
"evalstate/fast-agent" -> "langchain-ai/langchain-mcp-adapters" ["e"=1]
"evalstate/fast-agent" -> "wonderwhy-er/DesktopCommanderMCP" ["e"=1]
"evalstate/fast-agent" -> "wong2/mcp-cli"
"punkpeye/fastmcp" -> "modelcontextprotocol/typescript-sdk" ["e"=1]
"punkpeye/fastmcp" -> "QuantGeekDev/mcp-framework" ["e"=1]
"punkpeye/fastmcp" -> "jlowin/fastmcp" ["e"=1]
"punkpeye/fastmcp" -> "modelcontextprotocol/inspector"
"punkpeye/fastmcp" -> "zcaceres/easy-mcp"
"punkpeye/fastmcp" -> "supercorp-ai/supergateway"
"punkpeye/fastmcp" -> "wong2/mcp-cli"
"punkpeye/fastmcp" -> "anaisbetts/mcp-installer"
"punkpeye/fastmcp" -> "wong2/litemcp"
"punkpeye/fastmcp" -> "cloudflare/mcp-server-cloudflare" ["e"=1]
"punkpeye/fastmcp" -> "punkpeye/mcp-client"
"punkpeye/fastmcp" -> "janwilmake/openapi-mcp-server"
"punkpeye/fastmcp" -> "CopilotKit/open-mcp-client"
"punkpeye/fastmcp" -> "punkpeye/awesome-mcp-clients"
"punkpeye/fastmcp" -> "punkpeye/mcp-proxy"
"StevenStavrakis/obsidian-mcp" -> "smithery-ai/mcp-obsidian"
"StevenStavrakis/obsidian-mcp" -> "MarkusPfundstein/mcp-obsidian"
"StevenStavrakis/obsidian-mcp" -> "cyanheads/obsidian-mcp-server"
"StevenStavrakis/obsidian-mcp" -> "ZubeidHendricks/youtube-mcp-server"
"StevenStavrakis/obsidian-mcp" -> "jacksteamdev/obsidian-mcp-tools"
"StevenStavrakis/obsidian-mcp" -> "basicmachines-co/basic-memory"
"StevenStavrakis/obsidian-mcp" -> "GongRzhe/Gmail-MCP-Server"
"StevenStavrakis/obsidian-mcp" -> "vivekVells/mcp-pandoc"
"StevenStavrakis/obsidian-mcp" -> "adityak74/mcp-scholarly"
"supercorp-ai/supergateway" -> "sparfenyuk/mcp-proxy"
"supercorp-ai/supergateway" -> "wong2/mcp-cli"
"supercorp-ai/supergateway" -> "acehoss/mcp-gateway"
"supercorp-ai/supergateway" -> "SecretiveShell/MCP-Bridge"
"supercorp-ai/supergateway" -> "janwilmake/openapi-mcp-server"
"supercorp-ai/supergateway" -> "modelcontextprotocol/inspector"
"supercorp-ai/supergateway" -> "supercorp-ai/superinterface"
"supercorp-ai/supergateway" -> "punkpeye/fastmcp"
"supercorp-ai/supergateway" -> "metatool-ai/metatool-app"
"supercorp-ai/supergateway" -> "lightconetech/mcp-gateway"
"supercorp-ai/supergateway" -> "anaisbetts/mcp-installer"
"supercorp-ai/supergateway" -> "lastmile-ai/mcp-agent" ["e"=1]
"supercorp-ai/supergateway" -> "punkpeye/mcp-proxy"
"supercorp-ai/supergateway" -> "chrishayuk/mcp-cli"
"supercorp-ai/supergateway" -> "EvalsOne/MCP-connect"
"FreePeak/db-mcp-server" -> "FreePeak/cortex"
"recursechat/mcp-server-apple-shortcuts" -> "pskill9/website-downloader"
"zcaceres/fetch-mcp" -> "vivekVells/mcp-pandoc"
"zcaceres/fetch-mcp" -> "Automata-Labs-team/code-sandbox-mcp"
"zcaceres/fetch-mcp" -> "tavily-ai/tavily-mcp"
"zcaceres/fetch-mcp" -> "Saik0s/mcp-browser-use"
"zcaceres/fetch-mcp" -> "tumf/mcp-text-editor"
"zcaceres/fetch-mcp" -> "zcaceres/markdownify-mcp" ["e"=1]
"zcaceres/fetch-mcp" -> "delano/postman-mcp-server"
"pskill9/website-downloader" -> "vivekVells/mcp-pandoc"
"pskill9/website-downloader" -> "sammcj/mcp-package-version"
"pskill9/website-downloader" -> "YuChenSSR/mindmap-mcp-server"
"Saik0s/mcp-browser-use" -> "co-browser/browser-use-mcp-server"
"Saik0s/mcp-browser-use" -> "zcaceres/fetch-mcp"
"Saik0s/mcp-browser-use" -> "browserbase/mcp-server-browserbase" ["e"=1]
"Saik0s/mcp-browser-use" -> "browser-use/macOS-use" ["e"=1]
"Saik0s/mcp-browser-use" -> "ZubeidHendricks/youtube-mcp-server"
"Saik0s/mcp-browser-use" -> "TencentEdgeOne/edgeone-pages-mcp"
"co-browser/browser-use-mcp-server" -> "Saik0s/mcp-browser-use"
"co-browser/browser-use-mcp-server" -> "graphlit/graphlit-mcp-server"
"co-browser/browser-use-mcp-server" -> "carterlasalle/mac_messages_mcp"
"co-browser/browser-use-mcp-server" -> "ZubeidHendricks/youtube-mcp-server"
"nspady/google-calendar-mcp" -> "GongRzhe/Gmail-MCP-Server"
"nspady/google-calendar-mcp" -> "v-3/google-calendar"
"nspady/google-calendar-mcp" -> "MarkusPfundstein/mcp-gsuite"
"luohy15/y-gui" -> "luohy15/y-cli"
"cognitivecomputations/dolphin-mcp" -> "adhikasp/mcp-client-cli"
"cognitivecomputations/dolphin-mcp" -> "Doriandarko/RAT-retrieval-augmented-thinking" ["e"=1]
"cognitivecomputations/dolphin-mcp" -> "3choff/mcp-chatbot"
"sparfenyuk/mcp-proxy" -> "supercorp-ai/supergateway"
"sparfenyuk/mcp-proxy" -> "EvalsOne/MCP-connect"
"sparfenyuk/mcp-proxy" -> "janwilmake/openapi-mcp-server"
"sparfenyuk/mcp-proxy" -> "open-webui/mcpo"
"sparfenyuk/mcp-proxy" -> "modelcontextprotocol/inspector"
"sparfenyuk/mcp-proxy" -> "TBXark/mcp-proxy"
"sparfenyuk/mcp-proxy" -> "adhikasp/mcp-client-cli"
"sparfenyuk/mcp-proxy" -> "punkpeye/mcp-proxy"
"sparfenyuk/mcp-proxy" -> "sidharthrajaram/mcp-sse"
"sparfenyuk/mcp-proxy" -> "CopilotKit/open-mcp-client"
"sparfenyuk/mcp-proxy" -> "wong2/mcp-cli"
"sparfenyuk/mcp-proxy" -> "chatmcp/mcprouter" ["e"=1]
"sparfenyuk/mcp-proxy" -> "SecretiveShell/MCP-Bridge"
"sparfenyuk/mcp-proxy" -> "boilingdata/mcp-server-and-gw"
"sparfenyuk/mcp-proxy" -> "Saik0s/mcp-browser-use"
"haris-musa/excel-mcp-server" -> "reading-plus-ai/mcp-server-data-exploration"
"haris-musa/excel-mcp-server" -> "negokaz/excel-mcp-server"
"haris-musa/excel-mcp-server" -> "zcaceres/markdownify-mcp" ["e"=1]
"haris-musa/excel-mcp-server" -> "ckreiling/mcp-server-docker"
"haris-musa/excel-mcp-server" -> "vivekVells/mcp-pandoc"
"haris-musa/excel-mcp-server" -> "YuChenSSR/mindmap-mcp-server"
"haris-musa/excel-mcp-server" -> "SimonB97/win-cli-mcp-server"
"haris-musa/excel-mcp-server" -> "mamertofabian/mcp-everything-search"
"haris-musa/excel-mcp-server" -> "pogjester/company-research-agent" ["e"=1]
"haris-musa/excel-mcp-server" -> "cr7258/elasticsearch-mcp-server" ["e"=1]
"haris-musa/excel-mcp-server" -> "designcomputer/mysql_mcp_server"
"haris-musa/excel-mcp-server" -> "admica/FileScopeMCP"
"haris-musa/excel-mcp-server" -> "browserbase/mcp-server-browserbase" ["e"=1]
"haris-musa/excel-mcp-server" -> "mark3labs/mcp-filesystem-server"
"haris-musa/excel-mcp-server" -> "anaisbetts/mcp-installer"
"ssut/Remote-MCP" -> "EvalsOne/MCP-connect"
"CopilotKit/open-mcp-client" -> "daodao97/chatmcp"
"CopilotKit/open-mcp-client" -> "modelcontextprotocol/inspector"
"CopilotKit/open-mcp-client" -> "punkpeye/awesome-mcp-clients"
"CopilotKit/open-mcp-client" -> "21st-dev/magic-mcp" ["e"=1]
"CopilotKit/open-mcp-client" -> "nanbingxyz/5ire"
"CopilotKit/open-mcp-client" -> "OpenAgentPlatform/Dive"
"CopilotKit/open-mcp-client" -> "refly-ai/refly" ["e"=1]
"CopilotKit/open-mcp-client" -> "mcp-use/mcp-use" ["e"=1]
"CopilotKit/open-mcp-client" -> "zcaceres/markdownify-mcp" ["e"=1]
"CopilotKit/open-mcp-client" -> "lastmile-ai/mcp-agent" ["e"=1]
"CopilotKit/open-mcp-client" -> "langchain-ai/langchain-mcp-adapters" ["e"=1]
"CopilotKit/open-mcp-client" -> "adhikasp/mcp-client-cli"
"CopilotKit/open-mcp-client" -> "mendableai/firecrawl-mcp-server" ["e"=1]
"CopilotKit/open-mcp-client" -> "open-webui/mcpo"
"CopilotKit/open-mcp-client" -> "langchain-ai/agent-chat-ui" ["e"=1]
"adityak74/mcp-scholarly" -> "vivekVells/mcp-pandoc"
"adityak74/mcp-scholarly" -> "openags/paper-search-mcp"
"open-webui/mcpo" -> "open-webui/openapi-servers"
"open-webui/mcpo" -> "open-webui/pipelines"
"open-webui/mcpo" -> "SecretiveShell/MCP-Bridge"
"open-webui/mcpo" -> "sparfenyuk/mcp-proxy"
"open-webui/mcpo" -> "unbody-io/unbody"
"open-webui/mcpo" -> "f/mcptools"
"open-webui/mcpo" -> "modelcontextprotocol/inspector"
"open-webui/mcpo" -> "CopilotKit/open-mcp-client"
"open-webui/mcpo" -> "tadata-org/fastapi_mcp" ["e"=1]
"open-webui/mcpo" -> "letta-ai/agent-file"
"open-webui/mcpo" -> "open-webui/desktop"
"open-webui/mcpo" -> "VariantConst/OpenWebUI-Monitor" ["e"=1]
"open-webui/mcpo" -> "lastmile-ai/mcp-agent" ["e"=1]
"open-webui/mcpo" -> "mcp-use/mcp-use" ["e"=1]
"open-webui/mcpo" -> "Nutlope/self.so"
"blackwhite084/playwright-plus-python-mcp" -> "Automata-Labs-team/MCP-Server-Playwright"
"cline/mcp-marketplace" -> "adhikasp/mcp-git-ingest"
"GongRzhe/Gmail-MCP-Server" -> "MarkusPfundstein/mcp-gsuite"
"GongRzhe/Gmail-MCP-Server" -> "nspady/google-calendar-mcp"
"GongRzhe/Gmail-MCP-Server" -> "ckreiling/mcp-server-docker"
"GongRzhe/Gmail-MCP-Server" -> "v-3/google-calendar"
"GongRzhe/Gmail-MCP-Server" -> "varunneal/spotify-mcp"
"GongRzhe/Gmail-MCP-Server" -> "ZubeidHendricks/youtube-mcp-server"
"GongRzhe/Gmail-MCP-Server" -> "kimtaeyoon83/mcp-server-youtube-transcript"
"GongRzhe/Gmail-MCP-Server" -> "ZilongXue/claude-post"
"GongRzhe/Gmail-MCP-Server" -> "jasonsum/gmail-mcp-server"
"GongRzhe/Gmail-MCP-Server" -> "StevenStavrakis/obsidian-mcp"
"GongRzhe/Gmail-MCP-Server" -> "vivekVells/mcp-pandoc"
"bytebot-ai/bytebot" -> "NormVg/kraken"
"bytebot-ai/bytebot" -> "agentrpc/agentrpc"
"bytebot-ai/bytebot" -> "r488it/claude_hands"
"mark3labs/mcphost" -> "chrishayuk/mcp-cli"
"mark3labs/mcphost" -> "mark3labs/mcp-go" ["e"=1]
"mark3labs/mcphost" -> "metoro-io/mcp-golang" ["e"=1]
"mark3labs/mcphost" -> "mark3labs/mcp-filesystem-server"
"mark3labs/mcphost" -> "bartolli/mcp-llm-bridge"
"mark3labs/mcphost" -> "patruff/ollama-mcp-bridge"
"mark3labs/mcphost" -> "SecretiveShell/MCP-Bridge"
"mark3labs/mcphost" -> "OpenAgentPlatform/Dive"
"mark3labs/mcphost" -> "ThinkInAIXYZ/go-mcp" ["e"=1]
"mark3labs/mcphost" -> "grafana/mcp-grafana" ["e"=1]
"mark3labs/mcphost" -> "sparfenyuk/mcp-proxy"
"mark3labs/mcphost" -> "modelcontextprotocol/inspector"
"mark3labs/mcphost" -> "daodao97/chatmcp"
"mark3labs/mcphost" -> "adhikasp/mcp-client-cli"
"mark3labs/mcphost" -> "supercorp-ai/supergateway"
"tumf/mcp-shell-server" -> "g0t4/mcp-server-commands"
"tumf/mcp-shell-server" -> "MladenSU/cli-mcp-server"
"modelcontextprotocol/quickstart-resources" -> "modelcontextprotocol/docs"
"modelcontextprotocol/quickstart-resources" -> "modelcontextprotocol/create-python-server"
"modelcontextprotocol/quickstart-resources" -> "modelcontextprotocol/create-typescript-server"
"modelcontextprotocol/quickstart-resources" -> "modelcontextprotocol/.github"
"modelcontextprotocol/quickstart-resources" -> "emarco177/mcp-crash-course"
"negokaz/excel-mcp-server" -> "haris-musa/excel-mcp-server"
"metatool-ai/metatool-app" -> "metatool-ai/mcp-server-metamcp"
"metatool-ai/metatool-app" -> "wegotdocs/open-mcp"
"metatool-ai/metatool-app" -> "SecretiveShell/MCP-Bridge"
"metatool-ai/metatool-app" -> "adamwattis/mcp-proxy-server"
"metatool-ai/metatool-app" -> "ChatTeach/Awesome-AI-Agents"
"metatool-ai/metatool-app" -> "Ejb503/multimodal-mcp-client"
"metatool-ai/metatool-app" -> "agentrpc/agentrpc"
"metatool-ai/metatool-app" -> "aindreyway/mcp-codex-keeper"
"metatool-ai/metatool-app" -> "jasonjmcghee/claude-debugs-for-you"
"metatool-ai/metatool-app" -> "kazuph/mcp-taskmanager"
"metatool-ai/mcp-server-metamcp" -> "metatool-ai/metatool-app"
"metatool-ai/mcp-server-metamcp" -> "adamwattis/mcp-proxy-server"
"crystaldba/postgres-mcp" -> "crystaldba/crystaldba"
"crystaldba/postgres-mcp" -> "FreePeak/db-mcp-server"
"MiniMax-AI/MiniMax-MCP" -> "TencentEdgeOne/edgeone-pages-mcp"
"MiniMax-AI/MiniMax-MCP" -> "PsychArch/minimax-mcp-tools"
"MiniMax-AI/MiniMax-MCP" -> "MiniMax-AI/MiniMax-MCP-JS"
"janwilmake/openapi-mcp-server" -> "vivekVells/mcp-pandoc"
"janwilmake/openapi-mcp-server" -> "esxr/langgraph-mcp" ["e"=1]
"janwilmake/openapi-mcp-server" -> "wong2/mcp-cli"
"janwilmake/openapi-mcp-server" -> "supercorp-ai/supergateway"
"janwilmake/openapi-mcp-server" -> "MarkusPfundstein/mcp-gsuite"
"janwilmake/openapi-mcp-server" -> "sparfenyuk/mcp-proxy"
"janwilmake/openapi-mcp-server" -> "jasonjmcghee/claude-debugs-for-you"
"janwilmake/openapi-mcp-server" -> "ckreiling/mcp-server-docker"
"janwilmake/openapi-mcp-server" -> "cyberchitta/llm-context.py"
"janwilmake/openapi-mcp-server" -> "janwilmake/openapisearch"
"janwilmake/openapi-mcp-server" -> "adhikasp/mcp-git-ingest"
"janwilmake/openapi-mcp-server" -> "anaisbetts/mcp-installer"
"janwilmake/openapi-mcp-server" -> "smithery-ai/sdk"
"janwilmake/openapi-mcp-server" -> "lamemind/mcp-server-multiverse"
"janwilmake/openapi-mcp-server" -> "dcolley/swagger-mcp"
"OpenAgentPlatform/Dive" -> "SecretiveShell/MCP-Bridge"
"OpenAgentPlatform/Dive" -> "oraios/serena" ["e"=1]
"OpenAgentPlatform/Dive" -> "mario-andreschak/FLUJO" ["e"=1]
"OpenAgentPlatform/Dive" -> "badboysm890/ClaraVerse" ["e"=1]
"OpenAgentPlatform/Dive" -> "CopilotKit/open-mcp-client"
"OpenAgentPlatform/Dive" -> "av/harbor" ["e"=1]
"OpenAgentPlatform/Dive" -> "LearningCircuit/local-deep-research" ["e"=1]
"OpenAgentPlatform/Dive" -> "nanbingxyz/5ire"
"OpenAgentPlatform/Dive" -> "srbhptl39/MCP-SuperAssistant" ["e"=1]
"OpenAgentPlatform/Dive" -> "snagasuri/deebo-prototype" ["e"=1]
"OpenAgentPlatform/Dive" -> "rusiaaman/wcgw" ["e"=1]
"OpenAgentPlatform/Dive" -> "mark3labs/mcphost"
"OpenAgentPlatform/Dive" -> "nbonamy/witsy"
"OpenAgentPlatform/Dive" -> "morphik-org/morphik-core" ["e"=1]
"OpenAgentPlatform/Dive" -> "OpenAgentPlatform/dive-mcp-host"
"letta-ai/agent-file" -> "unbody-io/unbody"
"letta-ai/agent-file" -> "jasonppy/VoiceStar"
"letta-ai/agent-file" -> "f/mcptools"
"letta-ai/agent-file" -> "Nutlope/self.so"
"letta-ai/agent-file" -> "letta-ai/letta-chatbot-example"
"wong2/litemcp" -> "wong2/mcp-cli"
"graphlit/graphlit-mcp-server" -> "admica/FileScopeMCP"
"graphlit/graphlit-mcp-server" -> "adhikasp/mcp-git-ingest"
"graphlit/graphlit-mcp-server" -> "co-browser/browser-use-mcp-server"
"graphlit/graphlit-mcp-server" -> "comet-ml/opik-mcp"
"steel-dev/surf.new" -> "steel-dev/steel-mcp-server"
"steel-dev/surf.new" -> "ChatTeach/Awesome-AI-Agents"
"steel-dev/surf.new" -> "wegotdocs/open-mcp"
"NightTrek/Ollama-mcp" -> "emgeee/mcp-ollama"
"open-webui/desktop" -> "open-webui/bot"
"open-webui/desktop" -> "reecelikesramen/open-webui-desktop"
"open-webui/desktop" -> "open-webui/extension"
"open-webui/desktop" -> "open-webui/openapi-servers"
"open-webui/desktop" -> "open-webui/helm-charts"
"open-webui/desktop" -> "open-webui/pipelines"
"open-webui/desktop" -> "MartianInGreen/OpenWebUI-Tools"
"open-webui/desktop" -> "open-webui/docs"
"open-webui/desktop" -> "VariantConst/OpenWebUI-Monitor" ["e"=1]
"open-webui/desktop" -> "open-webui/cookbook"
"open-webui/desktop" -> "EtiennePerot/safe-code-execution"
"adhikasp/mcp-git-ingest" -> "pskill9/website-downloader"
"adhikasp/mcp-git-ingest" -> "cyberchitta/llm-context.py"
"adhikasp/mcp-git-ingest" -> "graphlit/graphlit-mcp-server"
"adhikasp/mcp-git-ingest" -> "hannesrudolph/mcp-ragdocs"
"open-strategy-partners/osp_marketing_tools" -> "YuChenSSR/mindmap-mcp-server"
"Ejb503/multimodal-mcp-client" -> "cyanheads/atlas-mcp-server"
"MladenSU/cli-mcp-server" -> "g0t4/mcp-server-commands"
"MladenSU/cli-mcp-server" -> "tumf/mcp-shell-server"
"runekaagaard/mcp-alchemy" -> "TheRaLabs/legion-mcp"
"pskill9/web-search" -> "pskill9/website-downloader"
"openags/paper-search-mcp" -> "JackKuo666/PubMed-MCP-Server"
"ZubeidHendricks/youtube-mcp-server" -> "vidhupv/x-mcp"
"ZubeidHendricks/youtube-mcp-server" -> "carterlasalle/mac_messages_mcp"
"ZubeidHendricks/youtube-mcp-server" -> "v-3/google-calendar"
"ZubeidHendricks/youtube-mcp-server" -> "anaisbetts/mcp-youtube"
"ZubeidHendricks/youtube-mcp-server" -> "vivekVells/mcp-pandoc"
"wegotdocs/open-mcp" -> "ChatTeach/Awesome-AI-Agents"
"wegotdocs/open-mcp" -> "metatool-ai/metatool-app"
"wegotdocs/open-mcp" -> "Nutlope/deep-research"
"doobidoo/mcp-memory-service" -> "shaneholloman/mcp-knowledge-graph"
"YuChenSSR/mindmap-mcp-server" -> "vivekVells/mcp-pandoc"
"YuChenSSR/mindmap-mcp-server" -> "pskill9/website-downloader"
"YuChenSSR/mindmap-mcp-server" -> "Jktfe/serveMyAPI"
"chroma-core/chroma-mcp" -> "bazinga012/mcp_code_executor"
"jasonjmcghee/claude-debugs-for-you" -> "lamemind/mcp-server-multiverse"
"jasonjmcghee/claude-debugs-for-you" -> "SDGLBL/mcp-claude-code"
"jasonjmcghee/claude-debugs-for-you" -> "jasonjmcghee/WebMCP"
"jasonjmcghee/claude-debugs-for-you" -> "cyberchitta/llm-context.py"
"jasonjmcghee/claude-debugs-for-you" -> "pskill9/website-downloader"
"jasonjmcghee/claude-debugs-for-you" -> "delano/postman-mcp-server"
"jasonjmcghee/claude-debugs-for-you" -> "adhikasp/mcp-git-ingest"
"jasonjmcghee/claude-debugs-for-you" -> "admica/FileScopeMCP"
"jasonjmcghee/claude-debugs-for-you" -> "vivekVells/mcp-pandoc"
"jasonjmcghee/claude-debugs-for-you" -> "pyroprompts/any-chat-completions-mcp"
"open-webui/openapi-servers" -> "open-webui/mcpo"
"open-webui/openapi-servers" -> "open-webui/bot"
"open-webui/openapi-servers" -> "Haervwe/open-webui-tools"
"open-webui/openapi-servers" -> "open-webui/desktop"
"open-webui/openapi-servers" -> "blascerecer/open-webui"
"open-webui/openapi-servers" -> "taylorwilsdon/llm-context-limits"
"open-webui/openapi-servers" -> "atineiatte/deep-research-at-home" ["e"=1]
"open-webui/openapi-servers" -> "open-webui/extension"
"open-webui/openapi-servers" -> "open-webui/pipelines"
"open-webui/openapi-servers" -> "open-webui/docs"
"open-webui/openapi-servers" -> "MartianInGreen/OpenWebUI-Tools"
"open-webui/openapi-servers" -> "JordanNanos/example-pipelines"
"open-webui/openapi-servers" -> "EtiennePerot/safe-code-execution"
"open-webui/openapi-servers" -> "Lex-au/Orpheus-FastAPI" ["e"=1]
"open-webui/openapi-servers" -> "SecretiveShell/MCP-Bridge"
"admica/FileScopeMCP" -> "delano/postman-mcp-server"
"jacksteamdev/obsidian-mcp-tools" -> "cyanheads/obsidian-mcp-server"
"datalayer/jupyter-mcp-server" -> "jjsantos01/jupyter-notebook-mcp"
"datalayer/jupyter-mcp-server" -> "bazinga012/mcp_code_executor"
"datalayer/jupyter-mcp-server" -> "adhikasp/mcp-git-ingest"
"groq/groq-desktop-beta" -> "groq/compound-mcp-server"
"bazinga012/mcp_code_executor" -> "Automata-Labs-team/code-sandbox-mcp"
"JetBrains/mcp-jetbrains" -> "JetBrains/mcp-server-plugin"
"JetBrains/mcp-jetbrains" -> "modelcontextprotocol/kotlin-sdk" ["e"=1]
"JetBrains/mcp-jetbrains" -> "anaisbetts/mcp-installer"
"JetBrains/mcp-jetbrains" -> "SimonB97/win-cli-mcp-server"
"carterlasalle/mac_messages_mcp" -> "hannesrudolph/imessage-query-fastmcp-mcp-server"
"TBXark/mcp-proxy" -> "BigUncle/MCP-Server-Unified-Deployment"
"v-3/discordmcp" -> "AVIMBU/slack-mcp-server"
"togethercomputer/open_deep_research" -> "Nutlope/deep-research"
"smithery-ai/cli" -> "smithery-ai/sdk"
"Automata-Labs-team/code-sandbox-mcp" -> "bazinga012/mcp_code_executor"
"cyanheads/atlas-mcp-server" -> "aindreyway/mcp-codex-keeper"
"vivekVells/mcp-pandoc" -> "pskill9/website-downloader"
"vivekVells/mcp-pandoc" -> "YuChenSSR/mindmap-mcp-server"
"vivekVells/mcp-pandoc" -> "cyberchitta/llm-context.py"
"vivekVells/mcp-pandoc" -> "sammcj/mcp-package-version"
"vivekVells/mcp-pandoc" -> "pyroprompts/any-chat-completions-mcp"
"vivekVells/mcp-pandoc" -> "adityak74/mcp-scholarly"
"vivekVells/mcp-pandoc" -> "SimonB97/win-cli-mcp-server"
"vivekVells/mcp-pandoc" -> "SDGLBL/mcp-claude-code"
"vivekVells/mcp-pandoc" -> "ZilongXue/claude-post"
"SDGLBL/mcp-claude-code" -> "vivekVells/mcp-pandoc"
"FradSer/mcp-server-mas-sequential-thinking" -> "Leghis/Smart-Thinking"
"EvalsOne/MCP-connect" -> "ssut/Remote-MCP"
"OpenAgentPlatform/dive-mcp-host" -> "Funmula-Corp/BigGo-MCP-Server"
"sirmews/mcp-pinecone" -> "okooo5km/memory-mcp-server"
"n1kozor/OpenWebUISimpleDesktop" -> "reecelikesramen/open-webui-desktop"
"groq/compound-mcp-server" -> "groq/groq-changelog"
"luohy15/y-cli" -> "luohy15/y-gui"
"ferrislucas/iterm-mcp" -> "recursechat/mcp-server-apple-shortcuts"
"ChatTeach/Awesome-AI-Agents" -> "wegotdocs/open-mcp"
"Jacck/mcp-reasoner" -> "cyanheads/atlas-mcp-server"
"flyfox666/mcpo_docker_use" -> "open-webui/scripts"
"zueai/mcp-manager" -> "petiky/mcp-manager"
"zueai/mcp-manager" -> "mzxrai/mcp-webresearch"
"zueai/mcp-manager" -> "Jeamee/MCPHub-Desktop"
"zueai/mcp-manager" -> "vivekVells/mcp-pandoc"
"apinetwork/piapi-mcp-server" -> "Jktfe/serveMyAPI"
"sammcj/mcp-package-version" -> "pskill9/website-downloader"
"mamertofabian/mcp-everything-search" -> "pskill9/website-downloader"
"mamertofabian/mcp-everything-search" -> "SimonB97/win-cli-mcp-server"
"mamertofabian/mcp-everything-search" -> "mark3labs/mcp-filesystem-server"
"okooo5km/memory-mcp-server" -> "sirmews/mcp-pinecone"
"kaliaboi/mcp-zotero" -> "gyger/mcp-pyzotero"
"Ozamatash/deep-research-mcp" -> "Ozamatash/localfirecrawl"
"Ozamatash/deep-research-mcp" -> "qpd-v/mcp-DEEPwebresearch"
"v-3/notion-server" -> "v-3/discordmcp"
"v-3/notion-server" -> "AVIMBU/slack-mcp-server"
"DMontgomery40/deepseek-mcp-server" -> "HarshJ23/deepseek-claude-MCP-server"
"unbody-io/unbody" -> "jasonppy/VoiceStar"
"unbody-io/unbody" -> "letta-ai/agent-file"
"unbody-io/unbody" -> "f/mcptools"
"unbody-io/unbody" -> "Nutlope/self.so"
"open-webui/llama-cpp-runner" -> "open-webui/community-platform"
"janwilmake/openapisearch" -> "janwilmake/awesome-durable-objects"
"groq/groq-changelog" -> "groq/compound-mcp-server"
"reecelikesramen/open-webui-desktop" -> "n1kozor/OpenWebUISimpleDesktop"
"open-webui/bot" -> "open-webui/cookbook"
"open-webui/bot" -> "open-webui/openapi-servers"
"open-webui/bot" -> "atgehrhardt/Cerebro-OpenWebUI-Package-Manager"
"open-webui/bot" -> "open-webui/extension"
"open-webui/bot" -> "open-webui/scripts"
"open-webui/bot" -> "open-webui/desktop"
"taylorwilsdon/open-webui-tools" -> "open-webui/scripts"
"open-webui/scripts" -> "taylorwilsdon/open-webui-tools"
"nextcloud/helm" ["l"="40.892,3.113"]
"immich-app/immich-charts" ["l"="40.849,3.137"]
"k8up-io/k8up" ["l"="7.554,-9.272"]
"jellyfin/jellyfin-helm" ["l"="40.858,3.11"]
"nextcloud/notify_push" ["l"="11.845,-12.246"]
"democratic-csi/democratic-csi" ["l"="9.309,-12.22"]
"p80n/photoprism-helm" ["l"="40.867,3.089"]
"open-webui/helm-charts" ["l"="41,3.106"]
"tavily-ai/tavily-python" ["l"="41.577,2.857"]
"tavily-ai/tavily-mcp" ["l"="41.527,2.912"]
"tavily-ai/tavily-js" ["l"="41.601,2.827"]
"alonlavian/RAGent" ["l"="41.555,0.435"]
"amidabuddha/console-chat-gpt" ["l"="41.276,3.015"]
"3choff/mcp-chatbot" ["l"="41.276,3.036"]
"open-webui/docs" ["l"="41.051,3.076"]
"open-webui/extension" ["l"="41.031,3.075"]
"open-webui/pipelines" ["l"="41.081,3.103"]
"open-webui/openapi-servers" ["l"="41.09,3.083"]
"open-webui/bot" ["l"="41.035,3.09"]
"open-webui/desktop" ["l"="41.049,3.094"]
"MartianInGreen/OpenWebUI-Tools" ["l"="41.014,3.089"]
"open-webui/cookbook" ["l"="41.017,3.101"]
"Haervwe/open-webui-tools" ["l"="41.068,3.062"]
"VariantConst/OpenWebUI-Monitor" ["l"="45.647,0.498"]
"EtiennePerot/safe-code-execution" ["l"="41.041,3.113"]
"open-webui/mcpo" ["l"="41.14,3.069"]
"open-webui/llama-cpp-runner" ["l"="41.018,3.056"]
"atgehrhardt/Cerebro-OpenWebUI-Package-Manager" ["l"="41.015,3.076"]
"nanbingxyz/5ire" ["l"="41.191,3.176"]
"daodao97/chatmcp" ["l"="41.228,3.164"]
"punkpeye/awesome-mcp-clients" ["l"="41.248,3.14"]
"lastmile-ai/mcp-agent" ["l"="41.276,-0.004"]
"ThinkInAIXYZ/deepchat" ["l"="41.211,-0.299"]
"refly-ai/refly" ["l"="41.277,-0.057"]
"CopilotKit/open-mcp-client" ["l"="41.208,3.14"]
"nbonamy/witsy" ["l"="41.198,3.219"]
"NitroRCr/AIaW" ["l"="45.671,0.511"]
"LaurieWired/GhidraMCP" ["l"="-42.76,-36.862"]
"modelcontextprotocol/inspector" ["l"="41.242,3.11"]
"jlowin/fastmcp" ["l"="41.177,-0.054"]
"evalstate/fast-agent" ["l"="41.21,3.116"]
"OpenAgentPlatform/Dive" ["l"="41.235,3.193"]
"CherryHQ/cherry-studio" ["l"="40.815,-0.367"]
"nanbingxyz/mcpsvr" ["l"="41.15,3.225"]
"trendy-design/llmchat" ["l"="41.187,3.312"]
"ibelick/zola" ["l"="-2.96,-31.281"]
"ask0ldd/OsspitaUI" ["l"="41.161,3.352"]
"MindWorkAI/AI-Studio" ["l"="41.185,3.376"]
"datvodinh/rag-chatbot" ["l"="42.054,0.058"]
"echohive42/AI-reads-books-page-by-page" ["l"="41.425,0.189"]
"farshed/sage" ["l"="41.171,3.276"]
"13point5/gemini-cursor" ["l"="41.577,0.152"]
"trycua/acu" ["l"="41.438,0.199"]
"groq/groq-desktop-beta" ["l"="41.134,3.291"]
"SecretiveShell/MCP-Bridge" ["l"="41.263,3.097"]
"theJayTea/WritingTools" ["l"="42.777,1.679"]
"imanoop7/Ollama-OCR" ["l"="41.431,0.247"]
"e2b-dev/open-computer-use" ["l"="41.428,0.224"]
"otwld/ollama-helm" ["l"="40.954,3.127"]
"open-webui/scripts" ["l"="40.994,3.079"]
"tjbck/learn" ["l"="41.013,3.128"]
"open-webui/assistant" ["l"="40.994,3.123"]
"supercorp-ai/superinterface" ["l"="41.31,3.242"]
"supercorp-ai/supercompat" ["l"="41.309,3.294"]
"supercorp-ai/superargs" ["l"="41.323,3.277"]
"cyberchitta/llm-context.py" ["l"="41.39,3.055"]
"vivekVells/mcp-pandoc" ["l"="41.452,3.058"]
"cyanheads/atlas-mcp-server" ["l"="41.375,3.038"]
"SDGLBL/mcp-claude-code" ["l"="41.438,3.022"]
"smithery-ai/sdk" ["l"="41.382,3.232"]
"smithery-ai/cli" ["l"="41.394,3.28"]
"letta-ai/letta-node" ["l"="41.38,3.26"]
"sooperset/mcp-atlassian" ["l"="41.35,3.053"]
"GLips/Figma-Context-MCP" ["l"="41.231,-0.228"]
"janwilmake/openapi-mcp-server" ["l"="41.36,3.08"]
"sooperset/mcp-client-slackbot" ["l"="41.334,2.997"]
"zcaceres/markdownify-mcp" ["l"="41.51,-0.024"]
"GongRzhe/Gmail-MCP-Server" ["l"="41.465,3.049"]
"appcypher/awesome-mcp-servers" ["l"="41.371,-0.179"]
"ckreiling/mcp-server-docker" ["l"="41.472,3.021"]
"smithery-ai/mcp-obsidian" ["l"="41.439,3.042"]
"JetBrains/mcp-jetbrains" ["l"="41.373,3.001"]
"supercorp-ai/supergateway" ["l"="41.289,3.099"]
"punkpeye/fastmcp" ["l"="41.316,3.131"]
"MarkusPfundstein/mcp-obsidian" ["l"="41.408,3.072"]
"modelcontextprotocol/typescript-sdk" ["l"="41.004,0.109"]
"modelcontextprotocol/modelcontextprotocol" ["l"="41.16,-0.149"]
"modelcontextprotocol/python-sdk" ["l"="41.051,0.055"]
"langchain-ai/langchain-mcp-adapters" ["l"="41.412,0.259"]
"anaisbetts/mcp-installer" ["l"="41.381,3.09"]
"sparfenyuk/mcp-proxy" ["l"="41.252,3.065"]
"mendableai/firecrawl-mcp-server" ["l"="41.395,-0.13"]
"modelcontextprotocol/docs" ["l"="41.124,3.191"]
"basicmachines-co/basic-memory" ["l"="41.502,3.007"]
"StevenStavrakis/obsidian-mcp" ["l"="41.455,3.029"]
"doobidoo/mcp-memory-service" ["l"="41.609,2.953"]
"evalstate/mcp-hfspace" ["l"="41.426,3.062"]
"jae-jae/fetcher-mcp" ["l"="45.782,0.461"]
"reading-plus-ai/mcp-server-data-exploration" ["l"="41.493,3.076"]
"leonardsellem/n8n-mcp-server" ["l"="41.638,-0.257"]
"FradSer/mcp-server-mas-sequential-thinking" ["l"="41.564,2.951"]
"syedazharmbnr1/claude-chatgpt-mcp" ["l"="41.55,-0.082"]
"jezweb/roo-commander" ["l"="42.075,2.209"]
"adhikasp/mcp-twikit" ["l"="41.547,2.973"]
"SimonB97/win-cli-mcp-server" ["l"="41.453,3.084"]
"pyroprompts/any-chat-completions-mcp" ["l"="41.422,3.036"]
"mamertofabian/mcp-everything-search" ["l"="41.47,3.13"]
"MladenSU/cli-mcp-server" ["l"="41.483,3.169"]
"GongRzhe/terminal-controller-mcp" ["l"="41.497,3.125"]
"pskill9/website-downloader" ["l"="41.477,3.072"]
"adhikasp/mcp-client-cli" ["l"="41.289,3.082"]
"chrishayuk/mcp-cli" ["l"="41.288,3.13"]
"cognitivecomputations/dolphin-mcp" ["l"="41.289,3.059"]
"luohy15/y-cli" ["l"="41.288,2.975"]
"wong2/mcp-cli" ["l"="41.319,3.099"]
"Ejb503/multimodal-mcp-client" ["l"="41.302,3.036"]
"michaellatman/mcp-get" ["l"="41.323,3.067"]
"EvalsOne/MCP-connect" ["l"="41.255,3.045"]
"Jeamee/MCPHub-Desktop" ["l"="41.347,3.101"]
"zueai/mcp-manager" ["l"="41.414,3.107"]
"bartolli/mcp-llm-bridge" ["l"="41.299,3.162"]
"metatool-ai/metatool-app" ["l"="41.263,2.977"]
"acehoss/mcp-gateway" ["l"="41.227,3.079"]
"lightconetech/mcp-gateway" ["l"="41.227,3.06"]
"hannesrudolph/mcp-ragdocs" ["l"="41.405,3.092"]
"wong2/awesome-mcp-servers" ["l"="41.371,3.111"]
"chatmcp/mcpso" ["l"="45.349,-0.723"]
"mzxrai/mcp-webresearch" ["l"="41.475,3.114"]
"QuantGeekDev/docker-mcp" ["l"="41.48,3.06"]
"anaisbetts/mcp-youtube" ["l"="41.428,3.082"]
"exa-labs/exa-mcp-server" ["l"="41.442,0.01"]
"joshrutkowski/applescript-mcp" ["l"="41.373,3.154"]
"mark3labs/mcphost" ["l"="41.279,3.152"]
"patruff/ollama-mcp-bridge" ["l"="41.279,3.179"]
"coddingtonbear/obsidian-local-rest-api" ["l"="-35.263,17.219"]
"jacksteamdev/obsidian-mcp-tools" ["l"="41.424,2.995"]
"cyanheads/obsidian-mcp-server" ["l"="41.425,3.015"]
"suekou/mcp-notion-server" ["l"="41.439,3.121"]
"MarkusPfundstein/mcp-gsuite" ["l"="41.441,3.094"]
"qdrant/mcp-server-qdrant" ["l"="41.411,3.127"]
"wong2/litemcp" ["l"="41.336,3.114"]
"ChronulusAI/chronulus-mcp" ["l"="41.554,3.094"]
"YuChenSSR/mindmap-mcp-server" ["l"="41.514,3.065"]
"haris-musa/excel-mcp-server" ["l"="41.506,3.099"]
"reading-plus-ai/mcp-server-deep-research" ["l"="41.551,3.075"]
"CheMiguel23/MemoryMesh" ["l"="41.526,3.125"]
"jasonjmcghee/claude-debugs-for-you" ["l"="41.405,3.014"]
"recursechat/mcp-server-apple-shortcuts" ["l"="41.528,3.086"]
"sammcj/mcp-package-version" ["l"="41.499,3.056"]
"modelcontextprotocol/create-python-server" ["l"="41.085,3.209"]
"modelcontextprotocol/create-typescript-server" ["l"="41.066,3.22"]
"modelcontextprotocol/quickstart-resources" ["l"="41.089,3.234"]
"modelcontextprotocol/.github" ["l"="41.106,3.217"]
"blascerecer/open-webui" ["l"="41.052,3.041"]
"varunneal/spotify-mcp" ["l"="41.479,3"]
"ZubeidHendricks/youtube-mcp-server" ["l"="41.456,2.99"]
"Flux159/mcp-server-kubernetes" ["l"="9.706,-11.118"]
"DMontgomery40/deepseek-mcp-server" ["l"="41.574,2.987"]
"Automata-Labs-team/code-sandbox-mcp" ["l"="41.486,2.923"]
"AI-QL/chat-mcp" ["l"="41.499,2.906"]
"e2b-dev/mcp-server" ["l"="41.521,2.95"]
"admica/FileScopeMCP" ["l"="41.446,3.001"]
"designcomputer/mysql_mcp_server" ["l"="41.585,3.13"]
"benborla/mcp-server-mysql" ["l"="41.619,3.169"]
"runekaagaard/mcp-alchemy" ["l"="41.662,3.147"]
"f4ww4z/mcp-mysql-server" ["l"="41.632,3.128"]
"dpflucas/mysql-mcp-server" ["l"="41.614,3.14"]
"bytebase/dbhub" ["l"="41.659,3.179"]
"mcp-get/community-servers" ["l"="41.309,3.012"]
"ssut/Remote-MCP" ["l"="41.256,3.018"]
"dkmaker/mcp-rest-api" ["l"="41.32,3.028"]
"rectalogic/langchain-mcp" ["l"="42.224,2.209"]
"adamwattis/mcp-proxy-server" ["l"="41.253,2.929"]
"metatool-ai/mcp-server-metamcp" ["l"="41.249,2.949"]
"blazickjp/arxiv-mcp-server" ["l"="41.519,3.042"]
"adityak74/mcp-scholarly" ["l"="41.493,3.031"]
"andybrandt/mcp-simple-arxiv" ["l"="41.574,3.028"]
"kaliaboi/mcp-zotero" ["l"="41.605,3.025"]
"u14app/deep-research" ["l"="45.674,0.566"]
"HKUDS/Auto-Deep-Research" ["l"="51.129,2.925"]
"ZongqianLi/ReasonGraph" ["l"="45.54,-0.368"]
"ccabanillas/notion-mcp" ["l"="41.455,3.167"]
"makenotion/notion-mcp-server" ["l"="41.368,-0.15"]
"danhilse/notion_mcp" ["l"="41.507,3.162"]
"v-3/notion-server" ["l"="41.56,3.179"]
"awkoy/notion-mcp-server" ["l"="41.453,3.195"]
"ppl-ai/modelcontextprotocol" ["l"="41.463,-0.113"]
"kimtaeyoon83/mcp-server-youtube-transcript" ["l"="41.459,3.11"]
"Automata-Labs-team/MCP-Server-Playwright" ["l"="41.482,3.189"]
"blackwhite084/playwright-plus-python-mcp" ["l"="41.496,3.229"]
"g0t4/mcp-server-commands" ["l"="41.504,3.184"]
"pierrebrunelle/mcp-server-openai" ["l"="41.411,3.05"]
"tanigami/mcp-server-perplexity" ["l"="41.456,3.144"]
"matatonic/openedai-speech" ["l"="38.659,1.629"]
"av/harbor" ["l"="42.789,1.712"]
"win4r/GraphRAG4OpenWebUI" ["l"="41.423,0.705"]
"JordanNanos/example-pipelines" ["l"="41.064,3.128"]
"mintlify/docs" ["l"="-3.241,-30.36"]
"wonderwhy-er/DesktopCommanderMCP" ["l"="41.354,-0.094"]
"PublikPrinciple/obsidian-mcp-rest" ["l"="41.469,2.975"]
"neo4j-contrib/mcp-neo4j" ["l"="41.388,3.137"]
"tumf/mcp-shell-server" ["l"="41.504,3.203"]
"NormVg/kraken" ["l"="41.098,2.781"]
"shhivv/flowplane" ["l"="41.081,2.764"]
"bazinga012/mcp_code_executor" ["l"="41.482,2.882"]
"AI-QL/chat-ui" ["l"="41.511,2.864"]
"mark3labs/mcp-filesystem-server" ["l"="41.434,3.154"]
"strowk/mcp-k8s-go" ["l"="9.684,-11.143"]
"qpd-v/mcp-ragdocs" ["l"="41.534,3.155"]
"qpd-v/mcp-DEEPwebresearch" ["l"="41.533,3.198"]
"BrainDriveAI/openwebui-pipelines" ["l"="40.981,3.086"]
"sirmews/mcp-pinecone" ["l"="41.441,3.232"]
"weaviate/mcp-server-weaviate" ["l"="41.421,3.203"]
"qdrant/workshop-ultimate-hybrid-search" ["l"="41.414,3.165"]
"coleam00/mcp-mem0" ["l"="41.503,-0.071"]
"ZilongXue/claude-post" ["l"="41.462,3.075"]
"zcaceres/gtasks-mcp" ["l"="41.482,3.142"]
"nspady/google-calendar-mcp" ["l"="41.476,3.089"]
"vidhupv/x-mcp" ["l"="41.485,2.956"]
"EnesCinr/twitter-mcp" ["l"="42.412,0.517"]
"karaketir16/openwebui-langfuse" ["l"="40.963,3.09"]
"open-webui/community-platform" ["l"="41,3.06"]
"Nutlope/self.so" ["l"="41.102,3.026"]
"unbody-io/unbody" ["l"="41.086,3.009"]
"jasonppy/VoiceStar" ["l"="41.073,2.988"]
"f/mcptools" ["l"="41.113,3.005"]
"letta-ai/agent-file" ["l"="41.096,2.988"]
"Nutlope/napkins" ["l"="41.374,0.369"]
"Nutlope/loras-dev" ["l"="41.46,0.281"]
"upstash/rag-chat-component" ["l"="23.131,-30.039"]
"pogjester/company-research-agent" ["l"="45.709,-0.424"]
"FreePeak/db-mcp-server" ["l"="41.724,3.212"]
"punkpeye/awesome-mcp-servers" ["l"="40.91,-0.237"]
"mcp-use/mcp-use" ["l"="41.354,0.146"]
"executeautomation/mcp-playwright" ["l"="41.312,-0.146"]
"TencentEdgeOne/edgeone-pages-mcp" ["l"="41.391,2.818"]
"Azure-Samples/azure-postgresql-mcp" ["l"="41.388,2.794"]
"Vexa-ai/vexa" ["l"="16.6,-10.09"]
"attentionmech/mav" ["l"="16.646,-10.087"]
"langwatch/scenario" ["l"="16.684,-10.101"]
"DaInfernalCoder/perplexity-mcp" ["l"="42.141,2.27"]
"fatwang2/search1api-mcp" ["l"="41.543,2.864"]
"tavily-ai/tavily-crawl-beta-test" ["l"="41.545,2.891"]
"Toolbase-AI/toolbase" ["l"="41.572,2.892"]
"zcaceres/fetch-mcp" ["l"="41.463,2.93"]
"rawveg/ollama-mcp" ["l"="41.285,3.229"]
"ggozad/oterm" ["l"="41.66,0.099"]
"robdodson/ollama-mcp-db" ["l"="41.268,3.222"]
"NightTrek/Ollama-mcp" ["l"="41.27,3.251"]
"gwh22/UniVoice" ["l"="41.042,2.961"]
"BigSweetPotatoStudio/HyperChat" ["l"="45.738,0.52"]
"chatmcp/mcp-server-chatsum" ["l"="45.516,-0.527"]
"october-coder/api-check" ["l"="45.633,0.544"]
"QuantGeekDev/mcp-framework" ["l"="42.307,0.465"]
"zcaceres/easy-mcp" ["l"="41.329,3.208"]
"cloudflare/mcp-server-cloudflare" ["l"="41.411,-0.081"]
"punkpeye/mcp-client" ["l"="41.33,3.182"]
"punkpeye/mcp-proxy" ["l"="41.272,3.075"]
"FreePeak/cortex" ["l"="41.748,3.209"]
"Saik0s/mcp-browser-use" ["l"="41.394,2.926"]
"tumf/mcp-text-editor" ["l"="41.468,2.869"]
"delano/postman-mcp-server" ["l"="41.441,2.961"]
"co-browser/browser-use-mcp-server" ["l"="41.424,2.927"]
"browserbase/mcp-server-browserbase" ["l"="41.428,-0.094"]
"browser-use/macOS-use" ["l"="41.487,0.094"]
"graphlit/graphlit-mcp-server" ["l"="41.411,2.96"]
"carterlasalle/mac_messages_mcp" ["l"="41.448,2.909"]
"v-3/google-calendar" ["l"="41.482,3.036"]
"luohy15/y-gui" ["l"="41.288,2.937"]
"Doriandarko/RAT-retrieval-augmented-thinking" ["l"="41.45,0.157"]
"TBXark/mcp-proxy" ["l"="41.2,2.987"]
"sidharthrajaram/mcp-sse" ["l"="41.19,3.022"]
"chatmcp/mcprouter" ["l"="-42.546,16.219"]
"boilingdata/mcp-server-and-gw" ["l"="41.219,3.022"]
"negokaz/excel-mcp-server" ["l"="41.551,3.121"]
"cr7258/elasticsearch-mcp-server" ["l"="-2.28,8.599"]
"21st-dev/magic-mcp" ["l"="41.412,-0.157"]
"langchain-ai/agent-chat-ui" ["l"="41.5,0.362"]
"openags/paper-search-mcp" ["l"="41.551,3.011"]
"tadata-org/fastapi_mcp" ["l"="41.259,0.079"]
"cline/mcp-marketplace" ["l"="41.395,3.181"]
"adhikasp/mcp-git-ingest" ["l"="41.402,3.029"]
"jasonsum/gmail-mcp-server" ["l"="41.523,3.016"]
"bytebot-ai/bytebot" ["l"="41.133,2.806"]
"agentrpc/agentrpc" ["l"="41.188,2.885"]
"r488it/claude_hands" ["l"="41.126,2.764"]
"mark3labs/mcp-go" ["l"="41.297,-0.288"]
"metoro-io/mcp-golang" ["l"="-3.957,24.053"]
"ThinkInAIXYZ/go-mcp" ["l"="41.283,-0.378"]
"grafana/mcp-grafana" ["l"="9.747,-11.23"]
"emarco177/mcp-crash-course" ["l"="41.069,3.26"]
"wegotdocs/open-mcp" ["l"="41.248,2.9"]
"ChatTeach/Awesome-AI-Agents" ["l"="41.232,2.91"]
"aindreyway/mcp-codex-keeper" ["l"="41.314,2.983"]
"kazuph/mcp-taskmanager" ["l"="41.225,2.944"]
"crystaldba/postgres-mcp" ["l"="41.767,3.236"]
"crystaldba/crystaldba" ["l"="41.791,3.249"]
"MiniMax-AI/MiniMax-MCP" ["l"="41.394,2.743"]
"PsychArch/minimax-mcp-tools" ["l"="41.407,2.711"]
"MiniMax-AI/MiniMax-MCP-JS" ["l"="41.381,2.714"]
"esxr/langgraph-mcp" ["l"="41.526,0.342"]
"janwilmake/openapisearch" ["l"="41.353,3.152"]
"lamemind/mcp-server-multiverse" ["l"="41.365,3.022"]
"dcolley/swagger-mcp" ["l"="41.34,3.025"]
"oraios/serena" ["l"="42.079,2.299"]
"mario-andreschak/FLUJO" ["l"="42.113,2.287"]
"badboysm890/ClaraVerse" ["l"="42.698,1.804"]
"LearningCircuit/local-deep-research" ["l"="41.34,0.043"]
"srbhptl39/MCP-SuperAssistant" ["l"="42.015,2.263"]
"snagasuri/deebo-prototype" ["l"="42.066,2.279"]
"rusiaaman/wcgw" ["l"="42.09,2.331"]
"morphik-org/morphik-core" ["l"="41.377,0.238"]
"OpenAgentPlatform/dive-mcp-host" ["l"="41.231,3.246"]
"letta-ai/letta-chatbot-example" ["l"="41.078,2.95"]
"comet-ml/opik-mcp" ["l"="41.39,2.899"]
"steel-dev/surf.new" ["l"="41.221,2.862"]
"steel-dev/steel-mcp-server" ["l"="41.205,2.834"]
"emgeee/mcp-ollama" ["l"="41.269,3.284"]
"reecelikesramen/open-webui-desktop" ["l"="40.997,3.043"]
"open-strategy-partners/osp_marketing_tools" ["l"="41.584,3.072"]
"TheRaLabs/legion-mcp" ["l"="41.694,3.147"]
"pskill9/web-search" ["l"="41.555,3.052"]
"JackKuo666/PubMed-MCP-Server" ["l"="41.584,3.007"]
"Nutlope/deep-research" ["l"="41.242,2.828"]
"shaneholloman/mcp-knowledge-graph" ["l"="41.659,2.93"]
"Jktfe/serveMyAPI" ["l"="41.578,3.053"]
"chroma-core/chroma-mcp" ["l"="41.493,2.827"]
"jasonjmcghee/WebMCP" ["l"="41.388,2.973"]
"taylorwilsdon/llm-context-limits" ["l"="41.098,3.127"]
"atineiatte/deep-research-at-home" ["l"="42.706,1.76"]
"Lex-au/Orpheus-FastAPI" ["l"="27.852,-21.114"]
"datalayer/jupyter-mcp-server" ["l"="41.428,2.892"]
"jjsantos01/jupyter-notebook-mcp" ["l"="41.422,2.849"]
"groq/compound-mcp-server" ["l"="41.11,3.322"]
"JetBrains/mcp-server-plugin" ["l"="41.351,2.94"]
"modelcontextprotocol/kotlin-sdk" ["l"="54.6,-14.02"]
"hannesrudolph/imessage-query-fastmcp-mcp-server" ["l"="41.445,2.864"]
"BigUncle/MCP-Server-Unified-Deployment" ["l"="41.178,2.958"]
"v-3/discordmcp" ["l"="41.592,3.215"]
"AVIMBU/slack-mcp-server" ["l"="41.58,3.202"]
"togethercomputer/open_deep_research" ["l"="41.234,2.779"]
"Leghis/Smart-Thinking" ["l"="41.588,2.93"]
"Funmula-Corp/BigGo-MCP-Server" ["l"="41.229,3.274"]
"okooo5km/memory-mcp-server" ["l"="41.451,3.264"]
"n1kozor/OpenWebUISimpleDesktop" ["l"="40.977,3.028"]
"groq/groq-changelog" ["l"="41.098,3.338"]
"ferrislucas/iterm-mcp" ["l"="41.616,3.089"]
"Jacck/mcp-reasoner" ["l"="41.35,2.966"]
"flyfox666/mcpo_docker_use" ["l"="40.956,3.062"]
"petiky/mcp-manager" ["l"="41.429,3.176"]
"apinetwork/piapi-mcp-server" ["l"="41.622,3.05"]
"gyger/mcp-pyzotero" ["l"="41.646,3.018"]
"Ozamatash/deep-research-mcp" ["l"="41.563,3.247"]
"Ozamatash/localfirecrawl" ["l"="41.577,3.273"]
"HarshJ23/deepseek-claude-MCP-server" ["l"="41.615,2.983"]
"janwilmake/awesome-durable-objects" ["l"="41.357,3.192"]
"taylorwilsdon/open-webui-tools" ["l"="40.974,3.066"]
}