digraph G {
"shinnytech/open-trade-gateway" -> "xywanz/ft"
"shinnytech/open-trade-gateway" -> "shinnytech/shinny-futures-web"
"shinnytech/open-trade-gateway" -> "shinnytech/shinny-futures-android"
"shinnytech/open-trade-gateway" -> "shinnytech/shinny-futures-h5"
"shinnytech/open-trade-gateway" -> "shinnytech/shinny-futures-ios"
"shinnytech/open-trade-gateway" -> "shinnytech/diff"
"shinnytech/open-trade-gateway" -> "yutiansut/QASTRATEGY101"
"shinnytech/open-trade-gateway" -> "shinnytech/tqsdk-js"
"shinnytech/open-trade-gateway" -> "shinnytech/open-md-gateway"
"shinnytech/open-trade-gateway" -> "tashaxing/CTPtest"
"shinnytech/open-trade-gateway" -> "yutiansut/QIFIAccount"
"shinnytech/open-trade-gateway" -> "somewheve/ctpbee"
"ricklamers/gridstudio" -> "waditu/tushare" ["e"=1]
"ta4j/ta4j" -> "sun0x00/redtorch" ["e"=1]
"binux/pyspider" -> "waditu/tushare" ["e"=1]
"klinecharts/KLineChart" -> "jones2000/HQChart" ["e"=1]
"klinecharts/KLineChart" -> "wondertrader/wondertrader" ["e"=1]
"klinecharts/KLineChart" -> "openctp/openctp" ["e"=1]
"klinecharts/KLineChart" -> "waditu/czsc" ["e"=1]
"PKUJohnson/OpenData" -> "quantOS-org/JAQS"
"PKUJohnson/OpenData" -> "rainx/pytdx"
"PKUJohnson/OpenData" -> "moyuanz/DevilYuan"
"PKUJohnson/OpenData" -> "shidenggui/easyquotation"
"PKUJohnson/OpenData" -> "LowinLi/fushare"
"PKUJohnson/OpenData" -> "sinall/StrategyEase-Python-SDK"
"PKUJohnson/OpenData" -> "DemonDamon/FinnewsHunter"
"PKUJohnson/OpenData" -> "cedricporter/funcat"
"PKUJohnson/OpenData" -> "thuquant/awesome-quant"
"PKUJohnson/OpenData" -> "ricequant/rqalpha"
"PKUJohnson/OpenData" -> "foolcage/fooltrader"
"PKUJohnson/OpenData" -> "HuaRongSAO/talib-document"
"PKUJohnson/OpenData" -> "JoinQuant/jqdatasdk"
"PKUJohnson/OpenData" -> "qmhedging/poboquant"
"PKUJohnson/OpenData" -> "QuantFans/quantdigger"
"LowinLi/fushare" -> "xingetouzi/rqalpha-mod-fxdayu-source" ["e"=1]
"LowinLi/fushare" -> "quantOS-org/JAQS"
"LowinLi/fushare" -> "harvey1673/pyktrader"
"LowinLi/fushare" -> "ricequant/rqopen-client"
"LowinLi/fushare" -> "shizhuolin/PyCTP"
"LowinLi/fushare" -> "PKUJohnson/OpenData"
"LowinLi/fushare" -> "xingetouzi/jaqs-fxdayu" ["e"=1]
"LowinLi/fushare" -> "Raytone-D/puppet"
"LowinLi/fushare" -> "DingTobest/JQdataServiceForVNPY"
"LowinLi/fushare" -> "galois-advertising/thunder-trader"
"LowinLi/fushare" -> "sphinx-quant/sphinx-quant"
"LowinLi/fushare" -> "lovelylain/pyctp"
"LowinLi/fushare" -> "nickhuangxinyu/hft"
"sngyai/Sequoia" -> "waditu/czsc"
"sngyai/Sequoia" -> "Rockyzsu/stock"
"sngyai/Sequoia" -> "1nchaos/adata"
"sngyai/Sequoia" -> "mpquant/MyTT"
"sngyai/Sequoia" -> "myhhub/stock" ["e"=1]
"sngyai/Sequoia" -> "akfamily/akshare"
"sngyai/Sequoia" -> "Micro-sheep/efinance"
"sngyai/Sequoia" -> "shidenggui/easyquotation"
"sngyai/Sequoia" -> "zvtvz/zvt"
"sngyai/Sequoia" -> "mpquant/Ashare"
"sngyai/Sequoia" -> "shidenggui/easytrader"
"sngyai/Sequoia" -> "axiaoxin-com/investool"
"sngyai/Sequoia" -> "pythonstock/stock"
"sngyai/Sequoia" -> "Vespa314/chan.py"
"sngyai/Sequoia" -> "shidenggui/easyquant"
"roq-trading/roq-api" -> "nickhuangxinyu/hft" ["e"=1]
"roq-trading/roq-api" -> "opentradesolutions/opentrade" ["e"=1]
"roq-trading/roq-api" -> "physercoe/starquant" ["e"=1]
"roq-trading/roq-api" -> "pegasusTrader/PandoraTrader" ["e"=1]
"jones2000/HQChart" -> "klinecharts/KLineChart" ["e"=1]
"jones2000/HQChart" -> "mpquant/MyTT"
"jones2000/HQChart" -> "chxj1992/kline" ["e"=1]
"jones2000/HQChart" -> "mootdx/mootdx"
"jones2000/HQChart" -> "openctp/openctp"
"jones2000/HQChart" -> "yutiansut/QUANTAXIS"
"jones2000/HQChart" -> "shidenggui/easytrader"
"jones2000/HQChart" -> "2557606319/H5-Kline" ["e"=1]
"jones2000/HQChart" -> "fasiondog/hikyuu"
"jones2000/HQChart" -> "shidenggui/easyquotation"
"jones2000/HQChart" -> "ctpbee/ctpbee"
"jones2000/HQChart" -> "zvtvz/zvt"
"jones2000/HQChart" -> "rainx/pytdx"
"jones2000/HQChart" -> "wondertrader/wondertrader"
"jones2000/HQChart" -> "kungfu-origin/kungfu"
"JoinQuant/jqfactor_analyzer" -> "JoinQuant/jqdatasdk" ["e"=1]
"JoinQuant/jqfactor_analyzer" -> "physercoe/starquant" ["e"=1]
"JoinQuant/jqfactor_analyzer" -> "Chandlercjy/OnePy" ["e"=1]
"JoinQuant/jqfactor_analyzer" -> "hugo2046/QuantsPlaybook" ["e"=1]
"JoinQuant/jqfactor_analyzer" -> "quantOS-org/JAQS" ["e"=1]
"kungfu-origin/kungfu" -> "wondertrader/wondertrader"
"kungfu-origin/kungfu" -> "ricequant/rqalpha"
"kungfu-origin/kungfu" -> "fasiondog/hikyuu"
"kungfu-origin/kungfu" -> "yutiansut/QUANTAXIS"
"kungfu-origin/kungfu" -> "pegasusTrader/PandoraTrader"
"kungfu-origin/kungfu" -> "openctp/openctp"
"kungfu-origin/kungfu" -> "thuquant/awesome-quant"
"kungfu-origin/kungfu" -> "shidenggui/easytrader"
"kungfu-origin/kungfu" -> "vnpy/vnpy"
"kungfu-origin/kungfu" -> "zhuzhenpeng/CTP-TradeServer"
"kungfu-origin/kungfu" -> "fmzquant/strategies"
"kungfu-origin/kungfu" -> "QuantBox/XAPI2"
"kungfu-origin/kungfu" -> "quantOS-org/JAQS"
"kungfu-origin/kungfu" -> "shinnytech/tqsdk-python" ["e"=1]
"kungfu-origin/kungfu" -> "QuantFans/quantdigger"
"pegasusTrader/PandoraTrader" -> "physercoe/starquant"
"pegasusTrader/PandoraTrader" -> "ctpbee/ctpbee"
"pegasusTrader/PandoraTrader" -> "fasiondog/hikyuu"
"pegasusTrader/PandoraTrader" -> "wondertrader/wondertrader"
"pegasusTrader/PandoraTrader" -> "zhuzhenpeng/CTP-TradeServer"
"pegasusTrader/PandoraTrader" -> "kungfu-origin/kungfu"
"pegasusTrader/PandoraTrader" -> "openctp/openctp"
"pegasusTrader/PandoraTrader" -> "wondertrader/wtpy"
"pegasusTrader/PandoraTrader" -> "chronoxor/CppTrader" ["e"=1]
"pegasusTrader/PandoraTrader" -> "tashaxing/CTPtest"
"pegasusTrader/PandoraTrader" -> "zc8424/LazzyQuant"
"pegasusTrader/PandoraTrader" -> "xywanz/ft"
"pegasusTrader/PandoraTrader" -> "galois-advertising/thunder-trader"
"pegasusTrader/PandoraTrader" -> "KeyAlgo/AlgoPlus"
"pegasusTrader/PandoraTrader" -> "nicai0609/Python-CTPAPI"
"waditu/czsc" -> "Vespa314/chan.py"
"waditu/czsc" -> "yijixiuxin/chanlun-pro"
"waditu/czsc" -> "sngyai/Sequoia"
"waditu/czsc" -> "tomcat123a/-chanlun"
"waditu/czsc" -> "yutiansut/QUANTAXIS"
"waditu/czsc" -> "Rockyzsu/stock"
"waditu/czsc" -> "mpquant/MyTT"
"waditu/czsc" -> "hugo2046/QuantsPlaybook"
"waditu/czsc" -> "shidenggui/easytrader"
"waditu/czsc" -> "ibaihuo/chanvis"
"waditu/czsc" -> "zvtvz/zvt"
"waditu/czsc" -> "akfamily/akshare"
"waditu/czsc" -> "shinnytech/tqsdk-python" ["e"=1]
"waditu/czsc" -> "bbfamily/abu"
"waditu/czsc" -> "wondertrader/wondertrader"
"foolcage/fooltrader" -> "zvtvz/zvt"
"foolcage/fooltrader" -> "rainx/pytdx"
"foolcage/fooltrader" -> "QuantFans/quantdigger"
"foolcage/fooltrader" -> "moyuanz/DevilYuan"
"foolcage/fooltrader" -> "thuquant/awesome-quant"
"foolcage/fooltrader" -> "ricequant/rqalpha"
"foolcage/fooltrader" -> "myquant/strategy"
"foolcage/fooltrader" -> "fasiondog/hikyuu"
"foolcage/fooltrader" -> "sinall/StrategyEase-Python-SDK"
"foolcage/fooltrader" -> "Yam-cn/pyalgotrade-cn"
"foolcage/fooltrader" -> "PKUJohnson/OpenData"
"foolcage/fooltrader" -> "Seedarchangel/TuChart"
"foolcage/fooltrader" -> "quantOS-org/JAQS"
"foolcage/fooltrader" -> "yutiansut/QUANTAXIS"
"foolcage/fooltrader" -> "physercoe/starquant"
"constverum/Quantdom" -> "EliteQuant/EliteQuant_Python" ["e"=1]
"Mayitzin/ahrs" -> "dlaidig/broad" ["e"=1]
"refraction-ray/xalpha" -> "SunshowerC/fund-strategy"
"refraction-ray/xalpha" -> "Jerry1014/FundCrawler"
"refraction-ray/xalpha" -> "Micro-sheep/efinance"
"refraction-ray/xalpha" -> "shidenggui/easyquotation"
"refraction-ray/xalpha" -> "Rockyzsu/stock"
"refraction-ray/xalpha" -> "axiaoxin-com/investool"
"refraction-ray/xalpha" -> "shidenggui/easytrader"
"refraction-ray/xalpha" -> "zvtvz/zvt"
"refraction-ray/xalpha" -> "x2rr/funds"
"refraction-ray/xalpha" -> "hugo2046/QuantsPlaybook"
"refraction-ray/xalpha" -> "uname-yang/pysnowball"
"refraction-ray/xalpha" -> "akfamily/akshare"
"refraction-ray/xalpha" -> "shidenggui/easyquant"
"refraction-ray/xalpha" -> "sngyai/Sequoia"
"refraction-ray/xalpha" -> "CBJerry993/TT_Fund"
"JoinQuant/jqdatasdk" -> "JoinQuant/jqfactor_analyzer" ["e"=1]
"JoinQuant/jqdatasdk" -> "sinall/StrategyEase-Python-SDK"
"JoinQuant/jqdatasdk" -> "ricequant/rqalpha"
"JoinQuant/jqdatasdk" -> "HuaRongSAO/talib-document"
"JoinQuant/jqdatasdk" -> "rainx/pytdx"
"JoinQuant/jqdatasdk" -> "cedricporter/funcat"
"JoinQuant/jqdatasdk" -> "zhanghan1990/zipline-chinese"
"JoinQuant/jqdatasdk" -> "shidenggui/easyquant"
"JoinQuant/jqdatasdk" -> "QuantFans/quantdigger"
"JoinQuant/jqdatasdk" -> "uname-yang/pysnowball"
"JoinQuant/jqdatasdk" -> "tkfy920/qstock"
"JoinQuant/jqdatasdk" -> "shidenggui/easyquotation"
"JoinQuant/jqdatasdk" -> "thuquant/awesome-quant"
"JoinQuant/jqdatasdk" -> "PKUJohnson/OpenData"
"JoinQuant/jqdatasdk" -> "zvtvz/zvt"
"moonnejs/uiKLine" -> "msincenselee/vnpy"
"moonnejs/uiKLine" -> "zc8424/LazzyQuant"
"moonnejs/uiKLine" -> "haifengat/hfpy"
"moonnejs/uiKLine" -> "aiqtt/vnpy_future"
"moonnejs/uiKLine" -> "francinexue/xuefu"
"moonnejs/uiKLine" -> "moonnejs/PythonLab"
"moonnejs/uiKLine" -> "jiaminzou888/cppvnpy"
"moonnejs/uiKLine" -> "quantOS-org/JAQS"
"moonnejs/uiKLine" -> "vvipi/VNPY_account_updater"
"moonnejs/uiKLine" -> "X0Leon/XQuant"
"moonnejs/uiKLine" -> "galois-advertising/thunder-trader"
"moonnejs/uiKLine" -> "haifengat/pyctp"
"moonnejs/uiKLine" -> "willowj/python_dataEE"
"moonnejs/uiKLine" -> "zhuzhenpeng/CTP-TradeServer"
"moonnejs/uiKLine" -> "KeyAlgo/AlgoPlus"
"EliteQuant/EliteQuant_Excel" -> "EliteQuant/EliteQuant_R"
"EliteQuant/EliteQuant_Python" -> "EliteQuant/EliteQuant_Cpp"
"EliteQuant/EliteQuant_Python" -> "EliteQuant/EliteQuant_R"
"EliteQuant/EliteQuant_Python" -> "EliteQuant/EliteQuant_Excel"
"EliteQuant/EliteQuant_Python" -> "constverum/Quantdom" ["e"=1]
"EliteQuant/EliteQuant_Python" -> "zc8424/LazzyQuant"
"EliteQuant/EliteQuant_Python" -> "galois-advertising/thunder-trader"
"EliteQuant/EliteQuant_Python" -> "zbarge/stocklook"
"EliteQuant/EliteQuant_Python" -> "EliteQuant/EliteQuant" ["e"=1]
"quantOS-org/quantOSUserGuide" -> "quantOS-org/DataCore"
"quantOS-org/quantOSUserGuide" -> "quantOS-org/TradeSim"
"quantOS-org/quantOSUserGuide" -> "quantOS-org/TradeApi"
"quantOS-org/quantOSUserGuide" -> "quantOS-org/JAQS"
"quantOS-org/quantOSUserGuide" -> "quantOS-org/DataApi"
"quantOS-org/quantOSUserGuide" -> "PKUJohnson/LearnJaqsByExample"
"quantOS-org/quantOSUserGuide" -> "quantOS-org/tushare"
"nooperpudd/ctpwrapper" -> "haifengat/pyctp"
"nooperpudd/ctpwrapper" -> "ctpbee/ctpbee"
"nooperpudd/ctpwrapper" -> "nicai0609/Python-CTPAPI"
"nooperpudd/ctpwrapper" -> "lovelylain/pyctp"
"nooperpudd/ctpwrapper" -> "shizhuolin/PyCTP"
"nooperpudd/ctpwrapper" -> "KeyAlgo/AlgoPlus"
"nooperpudd/ctpwrapper" -> "zhuzhenpeng/CTP-TradeServer"
"nooperpudd/ctpwrapper" -> "tashaxing/CTPtest"
"nooperpudd/ctpwrapper" -> "openctp/openctp-ctp-python"
"nooperpudd/ctpwrapper" -> "keli/ctp-python"
"nooperpudd/ctpwrapper" -> "openctp/openctp"
"nooperpudd/ctpwrapper" -> "vnpy/vnpy_ctp" ["e"=1]
"nooperpudd/ctpwrapper" -> "rainx/pytdx"
"nooperpudd/ctpwrapper" -> "QuantBox/XAPI2"
"nooperpudd/ctpwrapper" -> "zc8424/LazzyQuant"
"shinnytech/diff" -> "shinnytech/shinny-futures-web"
"shinnytech/diff" -> "shinnytech/open-md-gateway"
"nicai0609/JAVA-CTPAPI" -> "zhugf/java-trader"
"nicai0609/JAVA-CTPAPI" -> "sun0x00/redtorch"
"nicai0609/JAVA-CTPAPI" -> "sun0x00/redtorch-resources"
"nicai0609/JAVA-CTPAPI" -> "nicai0609/Python-CTPAPI"
"nicai0609/JAVA-CTPAPI" -> "ktrader-tech/jctp"
"nicai0609/JAVA-CTPAPI" -> "tradercoder/CTPJA"
"nicai0609/JAVA-CTPAPI" -> "ztsec/xtp_api_java"
"nicai0609/JAVA-CTPAPI" -> "haoziwlh/ftdc"
"nicai0609/JAVA-CTPAPI" -> "binhuizhang/CTP_TradeNow"
"nicai0609/JAVA-CTPAPI" -> "nooperpudd/ctpwrapper"
"nicai0609/JAVA-CTPAPI" -> "haifengat/pyctp"
"nicai0609/JAVA-CTPAPI" -> "dearleeyoung/LocalCTP"
"nicai0609/JAVA-CTPAPI" -> "galois-advertising/thunder-trader"
"sphinx-quant/sphinx-quant" -> "msincenselee/vnpy"
"sphinx-quant/sphinx-quant" -> "zc8424/LazzyQuant"
"sphinx-quant/sphinx-quant" -> "BillyZhangGuoping/MarketDataAnaylzerbyDataFrame"
"sphinx-quant/sphinx-quant" -> "physercoe/starquant"
"sphinx-quant/sphinx-quant" -> "Raytone-D/puppet"
"sphinx-quant/sphinx-quant" -> "xingetouzi/jaqs-fxdayu" ["e"=1]
"sphinx-quant/sphinx-quant" -> "liaogx/quant"
"sphinx-quant/sphinx-quant" -> "shakenetwork/DevilYuan"
"sphinx-quant/sphinx-quant" -> "zhuzhenpeng/CTP-TradeServer"
"sphinx-quant/sphinx-quant" -> "tashaxing/CTPtest"
"sphinx-quant/sphinx-quant" -> "phonegapX/QuantBot" ["e"=1]
"sphinx-quant/sphinx-quant" -> "moyuanz/DevilYuan"
"sphinx-quant/sphinx-quant" -> "qmhedging/poboquant"
"sphinx-quant/sphinx-quant" -> "moonnejs/uiKLine"
"sphinx-quant/sphinx-quant" -> "haifengat/pyctp"
"keli/ctp-python" -> "openctp/openctp-ctp-python"
"keli/ctp-python" -> "dearleeyoung/LocalCTP"
"keli/ctp-python" -> "nicai0609/Python-CTPAPI"
"hichenway/stock_predict_with_LSTM" -> "netblind/stockPredict" ["e"=1]
"hichenway/stock_predict_with_LSTM" -> "TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict" ["e"=1]
"hichenway/stock_predict_with_LSTM" -> "LightingFx/hs300_stock_predict" ["e"=1]
"hichenway/stock_predict_with_LSTM" -> "pengxungui/LSTM_stock" ["e"=1]
"tp-yan/WebStockPredict" -> "LightingFx/hs300_stock_predict"
"tp-yan/WebStockPredict" -> "python279/stock-predict"
"tp-yan/WebStockPredict" -> "moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning"
"tp-yan/WebStockPredict" -> "LinLidi/StockSensation"
"tp-yan/WebStockPredict" -> "AdvancingStone/stock-data-analysis-and-prediction"
"tp-yan/WebStockPredict" -> "netblind/stockPredict"
"tp-yan/WebStockPredict" -> "KittenCN/stock_prediction"
"tp-yan/WebStockPredict" -> "albert-feng/blade-fury"
"tp-yan/WebStockPredict" -> "Jiede1/spider-based-on-scrapy_redis-for-share-and-share-prediction-algorithm-search"
"tp-yan/WebStockPredict" -> "MicroEngine/DevilYuan"
"tp-yan/WebStockPredict" -> "sphinx-quant/sphinx-quant"
"tp-yan/WebStockPredict" -> "JoinQuant/jqdatasdk"
"LightingFx/hs300_stock_predict" -> "netblind/stockPredict"
"LightingFx/hs300_stock_predict" -> "moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning"
"LightingFx/hs300_stock_predict" -> "tp-yan/WebStockPredict"
"LightingFx/hs300_stock_predict" -> "pengxungui/LSTM_stock"
"LightingFx/hs300_stock_predict" -> "python279/stock-predict"
"LightingFx/hs300_stock_predict" -> "TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict"
"LightingFx/hs300_stock_predict" -> "KittenCN/stock_prediction"
"LightingFx/hs300_stock_predict" -> "AdvancingStone/stock-data-analysis-and-prediction"
"LightingFx/hs300_stock_predict" -> "MaybeWilliam/stock-price-prediction-BPNN-LSTM"
"LightingFx/hs300_stock_predict" -> "bysjlwdx/TensorFlow"
"LightingFx/hs300_stock_predict" -> "albert-feng/blade-fury"
"LightingFx/hs300_stock_predict" -> "wqk666999/CNN-LSTM-Attention"
"LightingFx/hs300_stock_predict" -> "GERMINO-LiuHe/A-stock-prediction-algorithm-based-on-machine-learning"
"LightingFx/hs300_stock_predict" -> "zhengguowei/stock_prediction"
"LightingFx/hs300_stock_predict" -> "moyuweiqing/Stock-prediction-algorithm-based-on-machine-learning"
"panluoluo/crawler-analysis" -> "pskun/finance_news_analysis" ["e"=1]
"SuperCV/Book" -> "hugo2046/QuantsPlaybook" ["e"=1]
"SuperCV/Book" -> "thuquant/awesome-quant" ["e"=1]
"SuperCV/Book" -> "jrothschild33/learn_backtrader" ["e"=1]
"SuperCV/Book" -> "akfamily/akshare" ["e"=1]
"notadamking/Stock-Trading-Environment" -> "wangshub/RL-Stock" ["e"=1]
"quantOS-org/JAQS" -> "quantOS-org/DataCore"
"quantOS-org/JAQS" -> "quantOS-org/quantOSUserGuide"
"quantOS-org/JAQS" -> "quantOS-org/TradeSim"
"quantOS-org/JAQS" -> "928675268/alphaquant"
"quantOS-org/JAQS" -> "msincenselee/vnpy"
"quantOS-org/JAQS" -> "sinall/StrategyEase-Python-SDK"
"quantOS-org/JAQS" -> "kungfu-origin/kungfu"
"quantOS-org/JAQS" -> "PKUJohnson/OpenData"
"quantOS-org/JAQS" -> "Yam-cn/pyalgotrade-cn"
"quantOS-org/JAQS" -> "QuantFans/quantdigger"
"quantOS-org/JAQS" -> "moyuanz/DevilYuan"
"quantOS-org/JAQS" -> "rainx/pytdx"
"quantOS-org/JAQS" -> "moonnejs/uiKLine"
"quantOS-org/JAQS" -> "xingetouzi/jaqs-fxdayu" ["e"=1]
"quantOS-org/JAQS" -> "cedricporter/funcat"
"asxinyu/Stock" -> "garydai/stock"
"asxinyu/Stock" -> "felixglow/Stock"
"asxinyu/Stock" -> "beetlex-io/Beetle.DT" ["e"=1]
"asxinyu/Stock" -> "hogenwang/comcms_core" ["e"=1]
"asxinyu/Stock" -> "chengderen/Smartflow-Sharp" ["e"=1]
"asxinyu/Stock" -> "benitoro/stockholm" ["e"=1]
"asxinyu/Stock" -> "shidenggui/easyhistory"
"daveqin/stock" -> "nladuo/THSTrader"
"daveqin/stock" -> "match5/thsauto"
"daveqin/stock" -> "Raytone-D/puppet"
"physercoe/starquant" -> "pegasusTrader/PandoraTrader"
"physercoe/starquant" -> "zc8424/LazzyQuant"
"physercoe/starquant" -> "fasiondog/hikyuu"
"physercoe/starquant" -> "xywanz/ft"
"physercoe/starquant" -> "galois-advertising/thunder-trader"
"physercoe/starquant" -> "ctpbee/ctpbee"
"physercoe/starquant" -> "nickhuangxinyu/hft"
"physercoe/starquant" -> "EliteQuant/EliteQuant_Cpp"
"physercoe/starquant" -> "zhanggao2013/AmazingQuant" ["e"=1]
"physercoe/starquant" -> "chronoxor/CppTrader" ["e"=1]
"physercoe/starquant" -> "JoinQuant/jqfactor_analyzer" ["e"=1]
"physercoe/starquant" -> "sphinx-quant/sphinx-quant"
"physercoe/starquant" -> "KeyAlgo/AlgoPlus"
"physercoe/starquant" -> "rburkholder/trade-frame" ["e"=1]
"physercoe/starquant" -> "tashaxing/CTPtest"
"HuobiRDCenter/huobi_Java" -> "2bcoin/zheshiyigeniubidexiangmu" ["e"=1]
"pyecharts/pyecharts-gallery" -> "shidenggui/easyquotation" ["e"=1]
"zlq4863947/tradingViewWikiCn" -> "jones2000/HQChart" ["e"=1]
"zlq4863947/tradingViewWikiCn" -> "HuaRongSAO/talib-document" ["e"=1]
"zlq4863947/tradingViewWikiCn" -> "ibaihuo/chanvis" ["e"=1]
"zlq4863947/tradingViewWikiCn" -> "fmzquant/strategies" ["e"=1]
"zlq4863947/tradingViewWikiCn" -> "openctp/openctp" ["e"=1]
"qmhedging/poboquant" -> "galois-advertising/thunder-trader"
"qmhedging/poboquant" -> "msincenselee/vnpy"
"qmhedging/poboquant" -> "sphinx-quant/sphinx-quant"
"qmhedging/poboquant" -> "JoinQuant/jqfactor_analyzer" ["e"=1]
"qmhedging/poboquant" -> "Yam-cn/pyalgotrade-cn"
"qmhedging/poboquant" -> "pegasusTrader/PandoraTrader"
"qmhedging/poboquant" -> "cedricporter/funcat"
"qmhedging/poboquant" -> "physercoe/starquant"
"qmhedging/poboquant" -> "quantOS-org/JAQS"
"qmhedging/poboquant" -> "PKUJohnson/OpenData"
"qmhedging/poboquant" -> "myquant/strategy"
"qmhedging/poboquant" -> "LowinLi/fushare"
"qmhedging/poboquant" -> "JiaoziMatrix/aioquant" ["e"=1]
"qmhedging/poboquant" -> "sfl666/option_tools" ["e"=1]
"qmhedging/poboquant" -> "kzil88/JXQuant"
"zvtvz/zvt" -> "yutiansut/QUANTAXIS"
"zvtvz/zvt" -> "foolcage/fooltrader"
"zvtvz/zvt" -> "thuquant/awesome-quant"
"zvtvz/zvt" -> "fasiondog/hikyuu"
"zvtvz/zvt" -> "ricequant/rqalpha"
"zvtvz/zvt" -> "Rockyzsu/stock"
"zvtvz/zvt" -> "shidenggui/easyquotation"
"zvtvz/zvt" -> "hugo2046/QuantsPlaybook"
"zvtvz/zvt" -> "shidenggui/easytrader"
"zvtvz/zvt" -> "ranaroussi/quantstats" ["e"=1]
"zvtvz/zvt" -> "waditu/czsc"
"zvtvz/zvt" -> "akfamily/akshare"
"zvtvz/zvt" -> "sngyai/Sequoia"
"zvtvz/zvt" -> "quantopian/alphalens" ["e"=1]
"zvtvz/zvt" -> "letianzj/QuantResearch" ["e"=1]
"slaysd/pytorch-sentiment-analysis-classification" -> "wqk666999/CNN-LSTM-Attention" ["e"=1]
"zhy0313/ea-python" -> "Rockyzsu/stock"
"zhy0313/ea-python" -> "Jack-Cherish/quantitative"
"zhy0313/ea-python" -> "QuantFans/quantdigger"
"zhy0313/ea-python" -> "sinall/StrategyEase-Python-SDK"
"zhy0313/ea-python" -> "geeeeeeeek/QuantStudy" ["e"=1]
"zhy0313/ea-python" -> "MicroEngine/DevilYuan"
"zhy0313/ea-python" -> "jrothschild33/learn_backtrader"
"zhy0313/ea-python" -> "51bitquant/bitquant" ["e"=1]
"zhy0313/ea-python" -> "myquant/strategy"
"zhy0313/ea-python" -> "zwdnet/MyQuant" ["e"=1]
"zhy0313/ea-python" -> "hugo2046/QuantsPlaybook"
"zhy0313/ea-python" -> "yuanxiao1/Python-Quantitative-Trading" ["e"=1]
"zhy0313/ea-python" -> "hengxuZ/binance-quantization" ["e"=1]
"zhy0313/ea-python" -> "waditu/czsc"
"zhy0313/ea-python" -> "shidenggui/easyquant"
"kzil88/JXQuant" -> "Chandlercjy/OnePy"
"kzil88/JXQuant" -> "cedricporter/funcat"
"kzil88/JXQuant" -> "qmhedging/poboquant"
"kzil88/JXQuant" -> "quantOS-org/quantOSUserGuide"
"kzil88/JXQuant" -> "JoinQuant/jqdatasdk"
"kzil88/JXQuant" -> "quantOS-org/JAQS"
"kzil88/JXQuant" -> "JoinQuant/jqfactor_analyzer" ["e"=1]
"kzil88/JXQuant" -> "zhanghan1990/zipline-chinese"
"kzil88/JXQuant" -> "tomcat123a/-chanlun"
"kzil88/JXQuant" -> "QuantFans/quantdigger"
"kzil88/JXQuant" -> "FrankBGao/HeatMap_for_TuShare"
"kzil88/JXQuant" -> "DataIntegrationAlliance/data_integration_celery"
"kzil88/JXQuant" -> "zhanggao2013/AmazingQuant" ["e"=1]
"kzil88/JXQuant" -> "rainx/pytdx"
"kzil88/JXQuant" -> "HuaRongSAO/talib-document"
"tkfy920/PythonQuantitativeFinance" -> "tkfy920/qstock" ["e"=1]
"tkfy920/PythonQuantitativeFinance" -> "ailabx/ailabx" ["e"=1]
"tkfy920/PythonQuantitativeFinance" -> "hugo2046/QuantsPlaybook" ["e"=1]
"tkfy920/PythonQuantitativeFinance" -> "tianjingle/zMain" ["e"=1]
"tkfy920/PythonQuantitativeFinance" -> "yuhanbo758/yuhanbolh" ["e"=1]
"vvipi/py3_demo_on_vnpy_ctp" -> "vvipi/VNPY_account_updater"
"ailabx/ailabx" -> "FinHackCN/finhack" ["e"=1]
"ailabx/ailabx" -> "jrothschild33/learn_backtrader"
"ailabx/ailabx" -> "Ckend/pythondict-quant" ["e"=1]
"ailabx/ailabx" -> "hugo2046/QuantsPlaybook"
"ailabx/ailabx" -> "chenditc/investment_data" ["e"=1]
"ailabx/ailabx" -> "zhanggao2013/AmazingQuant" ["e"=1]
"ailabx/ailabx" -> "charliedream1/ai_quant_trade"
"ailabx/ailabx" -> "JoinQuant/jqfactor_analyzer" ["e"=1]
"ailabx/ailabx" -> "xhlgogo/Quantitative-Investment-Trading-system" ["e"=1]
"ailabx/ailabx" -> "sunnyswag/StockRL"
"ailabx/ailabx" -> "wangshub/RL-Stock"
"ailabx/ailabx" -> "sinall/StrategyEase-Python-SDK"
"ailabx/ailabx" -> "HuaRongSAO/talib-document"
"ailabx/ailabx" -> "tkfy920/PythonQuantitativeFinance" ["e"=1]
"ailabx/ailabx" -> "tkfy920/qstock"
"MicroEngine/DevilYuan" -> "Gary-Hertel/StockQuant"
"MicroEngine/DevilYuan" -> "skyformat99/ths_trade"
"MicroEngine/DevilYuan" -> "zhy0313/ea-python"
"MicroEngine/DevilYuan" -> "albert-feng/blade-fury"
"MicroEngine/DevilYuan" -> "geeeeeeeek/QuantStudy" ["e"=1]
"MicroEngine/DevilYuan" -> "wkingnet/stock-analysis"
"MicroEngine/DevilYuan" -> "bosspen1/stock"
"MicroEngine/DevilYuan" -> "QuantFans/quantdigger"
"MicroEngine/DevilYuan" -> "python279/stock-predict"
"MicroEngine/DevilYuan" -> "tianjingle/zMain"
"MicroEngine/DevilYuan" -> "match5/thsauto"
"MicroEngine/DevilYuan" -> "yuanxiao1/QTYX-V2.0.study" ["e"=1]
"MicroEngine/DevilYuan" -> "yijixiuxin/chanlun-pro"
"MicroEngine/DevilYuan" -> "shidenggui/easyquant"
"MicroEngine/DevilYuan" -> "decaywood/XueQiuSuperSpider"
"DataIntegrationAlliance/data_integration_celery" -> "08zhangyi/multi-factor-gm-wind-joinquant" ["e"=1]
"DataIntegrationAlliance/data_integration_celery" -> "bopo/mootdx"
"DataIntegrationAlliance/data_integration_celery" -> "xingetouzi/jaqs-fxdayu" ["e"=1]
"DataIntegrationAlliance/data_integration_celery" -> "yutiansut/QASTRATEGY101"
"DataIntegrationAlliance/data_integration_celery" -> "nladuo/THSTrader"
"DataIntegrationAlliance/data_integration_celery" -> "rainx/pytdx"
"DataIntegrationAlliance/data_integration_celery" -> "moyuanz/DevilYuan"
"DataIntegrationAlliance/data_integration_celery" -> "daveqin/stock"
"DataIntegrationAlliance/data_integration_celery" -> "newhackerman/TDXPystock"
"DataIntegrationAlliance/data_integration_celery" -> "haifengat/pyctp"
"DataIntegrationAlliance/data_integration_celery" -> "xingetouzi/rqalpha-mod-fxdayu-source" ["e"=1]
"DataIntegrationAlliance/data_integration_celery" -> "cedricporter/funcat"
"DataIntegrationAlliance/data_integration_celery" -> "nooperpudd/ctpwrapper"
"DataIntegrationAlliance/data_integration_celery" -> "Emptyset110/dHydra"
"DataIntegrationAlliance/data_integration_celery" -> "rainx/TdxTradeServer"
"BillyZhangGuoping/MarketDataAnaylzerbyDataFrame" -> "BillyZhangGuoping/VNPY2_BILLY"
"garethdmm/gryphon" -> "nickhuangxinyu/hft" ["e"=1]
"Seedarchangel/TuChart" -> "Yam-cn/pyalgotrade-cn"
"Seedarchangel/TuChart" -> "rainx/pytdx"
"Seedarchangel/TuChart" -> "moyuanz/DevilYuan"
"Seedarchangel/TuChart" -> "shidenggui/easyquant"
"Seedarchangel/TuChart" -> "QuantFans/quantdigger"
"Seedarchangel/TuChart" -> "sinall/StrategyEase-Python-SDK"
"Seedarchangel/TuChart" -> "quantOS-org/JAQS"
"Seedarchangel/TuChart" -> "cedricporter/funcat"
"Seedarchangel/TuChart" -> "Emptyset110/dHydra"
"Seedarchangel/TuChart" -> "shidenggui/easyquotation"
"Seedarchangel/TuChart" -> "zhanghan1990/zipline-chinese"
"Seedarchangel/TuChart" -> "francinexue/xuefu"
"Seedarchangel/TuChart" -> "foolcage/fooltrader"
"Seedarchangel/TuChart" -> "ricequant/rqalpha"
"Seedarchangel/TuChart" -> "waditu/tushare"
"moyuanz/DevilYuan" -> "rainx/pytdx"
"moyuanz/DevilYuan" -> "shidenggui/easyquant"
"moyuanz/DevilYuan" -> "cedricporter/funcat"
"moyuanz/DevilYuan" -> "sinall/StrategyEase-Python-SDK"
"moyuanz/DevilYuan" -> "shidenggui/easyquotation"
"moyuanz/DevilYuan" -> "Raytone-D/puppet"
"moyuanz/DevilYuan" -> "QuantFans/quantdigger"
"moyuanz/DevilYuan" -> "shidenggui/easytrader"
"moyuanz/DevilYuan" -> "quantOS-org/JAQS"
"moyuanz/DevilYuan" -> "yutiansut/QUANTAXIS"
"moyuanz/DevilYuan" -> "zhanghan1990/zipline-chinese"
"moyuanz/DevilYuan" -> "msincenselee/vnpy"
"moyuanz/DevilYuan" -> "QuantBox/XAPI2"
"moyuanz/DevilYuan" -> "kungfu-origin/kungfu"
"moyuanz/DevilYuan" -> "DataIntegrationAlliance/data_integration_celery"
"DemonDamon/FinnewsHunter" -> "algosenses/Stock_Market_Sentiment_Analysis"
"DemonDamon/FinnewsHunter" -> "PKUJohnson/OpenData"
"DemonDamon/FinnewsHunter" -> "pskun/finance_news_analysis"
"DemonDamon/FinnewsHunter" -> "dongyuanxin/news-emotion"
"DemonDamon/FinnewsHunter" -> "LinLidi/StockSensation"
"DemonDamon/FinnewsHunter" -> "Jacen789/NewsCrawler" ["e"=1]
"DemonDamon/FinnewsHunter" -> "mpquant/Ashare"
"DemonDamon/FinnewsHunter" -> "lemonhu/stock-knowledge-graph" ["e"=1]
"DemonDamon/FinnewsHunter" -> "sngyai/Sequoia"
"DemonDamon/FinnewsHunter" -> "Jasonbaby/stock_recommendation_spider"
"DemonDamon/FinnewsHunter" -> "garydai/stock"
"DemonDamon/FinnewsHunter" -> "tkfy920/qstock"
"DemonDamon/FinnewsHunter" -> "KimMeen/Weibo-Analyst" ["e"=1]
"DemonDamon/FinnewsHunter" -> "moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning"
"DemonDamon/FinnewsHunter" -> "GallenQiu/FinanceReportAnalysis" ["e"=1]
"tconsky/ChanlunX" -> "skanda-huayan/tdxCL"
"tspooner/rl_markets" -> "nickhuangxinyu/hft" ["e"=1]
"Edward1Chou/SentimentAnalysis" -> "dongyuanxin/news-emotion" ["e"=1]
"zhangyinghahaha/data_analysis" -> "Python3Spiders/StockSpider" ["e"=1]
"open-trade/opentick" -> "opentradesolutions/opentrade"
"yccheok/jstock" -> "woniu201/WnStock" ["e"=1]
"yccheok/jstock" -> "wangdkchina/pyautotrade_tdx" ["e"=1]
"dongyuanxin/news-emotion" -> "algosenses/Stock_Market_Sentiment_Analysis"
"dongyuanxin/news-emotion" -> "dongyuanxin/various-codes"
"dongyuanxin/news-emotion" -> "Jasonbaby/stock_recommendation_spider"
"dongyuanxin/news-emotion" -> "Edward1Chou/SentimentAnalysis" ["e"=1]
"dongyuanxin/news-emotion" -> "chaoming0625/SentimentPolarityAnalysis" ["e"=1]
"dongyuanxin/news-emotion" -> "DemonDamon/FinnewsHunter"
"dongyuanxin/news-emotion" -> "TATlong/Research-report-Classification-system"
"dongyuanxin/news-emotion" -> "pskun/finance_news_analysis"
"dongyuanxin/news-emotion" -> "A-Rain/BDCI2019-Negative_Finance_Info_Judge" ["e"=1]
"dongyuanxin/news-emotion" -> "AimeeLee77/senti_analysis" ["e"=1]
"dongyuanxin/news-emotion" -> "bung87/bixin" ["e"=1]
"dongyuanxin/news-emotion" -> "DavionWu2018/Sentiment_dictionary"
"dongyuanxin/news-emotion" -> "rainarch/SentiBridge" ["e"=1]
"dongyuanxin/news-emotion" -> "TongzheZhang/CodeOfThesis"
"dongyuanxin/news-emotion" -> "iaminblacklist/Financial_Analysis"
"02ai/US-Stock-Option-Autotrader" -> "757566833/auto-build-react-redux" ["e"=1]
"02ai/US-Stock-Option-Autotrader" -> "LuochuanAD/UsefulCategory" ["e"=1]
"webmobiledev/vue-tradingview" -> "jones2000/HQChart" ["e"=1]
"BYVoid/TA-Lib" -> "eryk/JQuant" ["e"=1]
"FutunnOpen/py-futu-api" -> "FutunnOpen/futuquant"
"FutunnOpen/py-futu-api" -> "billpwchan/futu_algo"
"FutunnOpen/py-futu-api" -> "FutunnOpen/futu-api-doc"
"FutunnOpen/py-futu-api" -> "rainx/pytdx"
"FutunnOpen/py-futu-api" -> "nladuo/THSTrader"
"FutunnOpen/py-futu-api" -> "FutunnOpen/C-For-FutuOpenD"
"FutunnOpen/py-futu-api" -> "QuantFans/quantdigger"
"FutunnOpen/py-futu-api" -> "PKUJohnson/OpenData"
"FutunnOpen/py-futu-api" -> "shidenggui/easyquotation"
"FutunnOpen/py-futu-api" -> "nooperpudd/ctpwrapper"
"FutunnOpen/py-futu-api" -> "zhentaoo/futu-quant"
"FutunnOpen/py-futu-api" -> "quantOS-org/JAQS"
"FutunnOpen/py-futu-api" -> "moyuanz/DevilYuan"
"FutunnOpen/py-futu-api" -> "mootdx/mootdx"
"FutunnOpen/py-futu-api" -> "ricequant/rqalpha"
"chxj1992/kline" -> "jones2000/HQChart" ["e"=1]
"JaysonAlbert/tdx" -> "JaysonAlbert/cn_zipline"
"JaysonAlbert/tdx" -> "JaysonAlbert/zipline"
"JaysonAlbert/tdx" -> "280185386/tdxhq"
"JaysonAlbert/tdx" -> "flysoso/py_tdx"
"JaysonAlbert/tdx" -> "ericyan/tdx"
"JaysonAlbert/tdx" -> "wangdkchina/pyautotrade_tdx"
"JaysonAlbert/tdx" -> "wuyanfei/tdx_fetchKlineData"
"Jasonbaby/stock_recommendation_spider" -> "FrankBGao/HeatMap_for_TuShare"
"Jasonbaby/stock_recommendation_spider" -> "EdwardLee0331/autoDownload"
"08zhangyi/multi-factor-gm-wind-joinquant" -> "DataIntegrationAlliance/data_integration_celery" ["e"=1]
"08zhangyi/multi-factor-gm-wind-joinquant" -> "newhackerman/TDXPystock" ["e"=1]
"QuantBox/QuantBoxXProvider" -> "QuantBox/OpenQuant-CTP"
"uname-yang/pysnowball" -> "Micro-sheep/efinance"
"uname-yang/pysnowball" -> "mpquant/Ashare"
"uname-yang/pysnowball" -> "shidenggui/easyquotation"
"uname-yang/pysnowball" -> "decaywood/XueQiuSuperSpider"
"uname-yang/pysnowball" -> "zhangxiangliang/stock-api"
"uname-yang/pysnowball" -> "shidenggui/easytrader"
"uname-yang/pysnowball" -> "mpquant/MyTT"
"uname-yang/pysnowball" -> "bosspen1/stock"
"uname-yang/pysnowball" -> "shidenggui/easyquant"
"uname-yang/pysnowball" -> "1nchaos/adata"
"uname-yang/pysnowball" -> "JoinQuant/jqdatasdk"
"uname-yang/pysnowball" -> "tkfy920/qstock"
"uname-yang/pysnowball" -> "mootdx/mootdx"
"uname-yang/pysnowball" -> "refraction-ray/xalpha"
"uname-yang/pysnowball" -> "sngyai/Sequoia"
"GraySilver/wencai" -> "zsrl/pywencai"
"GraySilver/wencai" -> "match5/thsauto"
"GraySilver/wencai" -> "newhackerman/TDXPystock"
"GraySilver/wencai" -> "ak4stock/ths_auto_trade"
"GraySilver/wencai" -> "lemonche/capitalfarmer"
"GraySilver/wencai" -> "nladuo/THSTrader"
"GraySilver/wencai" -> "tkfy920/qstock"
"GraySilver/wencai" -> "mootdx/mootdx"
"GraySilver/wencai" -> "skyformat99/ths_trade"
"GraySilver/wencai" -> "tomcat123a/-chanlun"
"GraySilver/wencai" -> "DataIntegrationAlliance/data_integration_celery"
"GraySilver/wencai" -> "mpquant/MyTT"
"GraySilver/wencai" -> "rainx/pytdx"
"GraySilver/wencai" -> "zjp-CN/rustdx"
"GraySilver/wencai" -> "tianjingle/zMain"
"tradercoder/CTPJA" -> "wzjin/java-ctp"
"tradercoder/CTPJA" -> "xuwhyse/ctp4j"
"TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict" -> "netblind/stockPredict"
"TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict" -> "zhengguowei/stock_prediction"
"TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict" -> "python279/stock-predict"
"TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict" -> "LightingFx/hs300_stock_predict"
"TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict" -> "bysjlwdx/TensorFlow"
"mineralres/goshare" -> "hankchan/goctp" ["e"=1]
"algosenses/Stock_Market_Sentiment_Analysis" -> "Rockyzsu/StockPredict"
"algosenses/Stock_Market_Sentiment_Analysis" -> "dongyuanxin/news-emotion"
"algosenses/Stock_Market_Sentiment_Analysis" -> "LinLidi/StockSensation"
"algosenses/Stock_Market_Sentiment_Analysis" -> "algosenses/EastMoneySpider"
"algosenses/Stock_Market_Sentiment_Analysis" -> "hogking/eastmoney_crawler"
"algosenses/Stock_Market_Sentiment_Analysis" -> "Jasonbaby/stock_recommendation_spider"
"algosenses/Stock_Market_Sentiment_Analysis" -> "AdvancingStone/stock-data-analysis-and-prediction"
"algosenses/Stock_Market_Sentiment_Analysis" -> "DemonDamon/FinnewsHunter"
"algosenses/Stock_Market_Sentiment_Analysis" -> "DavionWu2018/Sentiment_dictionary"
"algosenses/Stock_Market_Sentiment_Analysis" -> "chuhaojin/LSTMForSentAnalysis" ["e"=1]
"algosenses/Stock_Market_Sentiment_Analysis" -> "moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning"
"algosenses/Stock_Market_Sentiment_Analysis" -> "Edward1Chou/SentimentAnalysis" ["e"=1]
"algosenses/Stock_Market_Sentiment_Analysis" -> "chaoming0625/SentimentPolarityAnalysis" ["e"=1]
"algosenses/Stock_Market_Sentiment_Analysis" -> "anycodes/SentimentAnalysis" ["e"=1]
"algosenses/Stock_Market_Sentiment_Analysis" -> "WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" ["e"=1]
"NateScarlet/holiday-cn" -> "LKI/chinese-calendar"
"NateScarlet/holiday-cn" -> "lanceliao/china-holiday-calender" ["e"=1]
"NateScarlet/holiday-cn" -> "Haoshenqi0123/holiday"
"NateScarlet/holiday-cn" -> "MrSeaWave/chinese-holidays"
"NateScarlet/holiday-cn" -> "Secbone/calendar"
"NateScarlet/holiday-cn" -> "Finb/Bark" ["e"=1]
"NateScarlet/holiday-cn" -> "songquanpeng/message-pusher" ["e"=1]
"NateScarlet/holiday-cn" -> "xiangyuecn/AreaCity-JsSpider-StatsGov" ["e"=1]
"NateScarlet/holiday-cn" -> "Yikun/hub-mirror-action"
"nicai0609/Python-CTPAPI" -> "nooperpudd/ctpwrapper"
"nicai0609/Python-CTPAPI" -> "shizhuolin/PyCTP"
"nicai0609/Python-CTPAPI" -> "openctp/openctp-ctp-python"
"nicai0609/Python-CTPAPI" -> "nicai0609/JAVA-CTPAPI"
"nicai0609/Python-CTPAPI" -> "ctpbee/ctpbee"
"nicai0609/Python-CTPAPI" -> "KeyAlgo/AlgoPlus"
"nicai0609/Python-CTPAPI" -> "haifengat/pyctp"
"nicai0609/Python-CTPAPI" -> "zhuzhenpeng/CTP-TradeServer"
"nicai0609/Python-CTPAPI" -> "keli/ctp-python"
"nicai0609/Python-CTPAPI" -> "tashaxing/CTPtest"
"nicai0609/Python-CTPAPI" -> "lovelylain/pyctp"
"nicai0609/Python-CTPAPI" -> "openctp/openctp"
"nicai0609/Python-CTPAPI" -> "gaoguole/ctpgao"
"nicai0609/Python-CTPAPI" -> "pegasusTrader/PandoraTrader"
"nicai0609/Python-CTPAPI" -> "dearleeyoung/LocalCTP"
"jm199504/Financial-Time-Series" -> "plouto-quants/FBDQA-2019A"
"jm199504/Financial-Time-Series" -> "lwb-xmu/Multivariate-multi-step-time-series-forecasting-via-LSTM" ["e"=1]
"2bcoin/zheshiyigeniubidexiangmu" -> "xunibidev/ZTuoExchange_framework" ["e"=1]
"2bcoin/zheshiyigeniubidexiangmu" -> "IndexOutOfBounds998/quant4j"
"2bcoin/zheshiyigeniubidexiangmu" -> "bitted/qt"
"51bitquant/bitquant" -> "zhy0313/ea-python" ["e"=1]
"51bitquant/bitquant" -> "fmzquant/strategies" ["e"=1]
"bosspen1/stock" -> "match5/thsauto"
"bosspen1/stock" -> "MistraR/plank"
"bosspen1/stock" -> "jadepeng/pytrader"
"bosspen1/stock" -> "nladuo/THSTrader"
"bosspen1/stock" -> "kingschan1204/istock"
"bosspen1/stock" -> "ak4stock/ths_auto_trade"
"bosspen1/stock" -> "skyformat99/ths_trade"
"bosspen1/stock" -> "uname-yang/pysnowball"
"bosspen1/stock" -> "decaywood/XueQiuSuperSpider"
"bosspen1/stock" -> "lemonche/capitalfarmer"
"bosspen1/stock" -> "benitoro/stockholm" ["e"=1]
"bosspen1/stock" -> "MicroEngine/DevilYuan"
"bosspen1/stock" -> "garydai/stock"
"bosspen1/stock" -> "zsrl/pywencai"
"bosspen1/stock" -> "shidenggui/easyquotation"
"tomcat123a/-chanlun" -> "yijixiuxin/chanlun-pro"
"tomcat123a/-chanlun" -> "Vespa314/chan.py"
"tomcat123a/-chanlun" -> "mywildquant/ChanlunX"
"tomcat123a/-chanlun" -> "ibaihuo/chanvis"
"tomcat123a/-chanlun" -> "sunshinelover/chanlun"
"tomcat123a/-chanlun" -> "waditu/czsc"
"tomcat123a/-chanlun" -> "neil-pan-s/one-quant-doc" ["e"=1]
"tomcat123a/-chanlun" -> "neuks/Indicator"
"tomcat123a/-chanlun" -> "xbfighting/ChZhShCh"
"tomcat123a/-chanlun" -> "thought7878/chanlun_notes"
"tomcat123a/-chanlun" -> "zengbin93/czsc_web_ui"
"tomcat123a/-chanlun" -> "dogfun/chanlun"
"tomcat123a/-chanlun" -> "kymeii/ChanMaster"
"tomcat123a/-chanlun" -> "sngyai/Sequoia"
"tomcat123a/-chanlun" -> "bopo/mootdx"
"yutiansut/QUANTAXIS" -> "rainx/pytdx"
"yutiansut/QUANTAXIS" -> "yutiansut/QAStrategy"
"yutiansut/QUANTAXIS" -> "Raytone-D/puppet"
"yutiansut/QUANTAXIS" -> "Rgveda/996Quant"
"yutiansut/QUANTAXIS" -> "moyuanz/DevilYuan"
"yutiansut/QUANTAXIS" -> "yutiansut/QUANTAXIS"
"yutiansut/QUANTAXIS" -> "mootdx/mootdx"
"yutiansut/QUANTAXIS" -> "rainx/TdxTradeServer"
"yutiansut/QUANTAXIS" -> "cedricporter/funcat"
"yutiansut/QUANTAXIS" -> "wbbhcb/stock_market"
"yutiansut/QUANTAXIS" -> "sinall/StrategyEase-Python-SDK"
"yutiansut/QUANTAXIS" -> "rainx/inside-zipline"
"yutiansut/QUANTAXIS" -> "Chandlercjy/OnePy"
"yutiansut/QUANTAXIS" -> "DataIntegrationAlliance/data_integration_celery"
"yutiansut/QUANTAXIS" -> "daveqin/stock"
"2429298470/stock4j" -> "eryk/JQuant"
"phonegapX/QuantBot" -> "sphinx-quant/sphinx-quant" ["e"=1]
"galois-advertising/thunder-trader" -> "zc8424/LazzyQuant"
"galois-advertising/thunder-trader" -> "xywanz/ft"
"galois-advertising/thunder-trader" -> "nickhuangxinyu/hft"
"galois-advertising/thunder-trader" -> "jiaminzou888/cppvnpy"
"galois-advertising/thunder-trader" -> "physercoe/starquant"
"galois-advertising/thunder-trader" -> "KeyAlgo/AlgoPlus"
"galois-advertising/thunder-trader" -> "zhuzhenpeng/CTP-TradeServer"
"galois-advertising/thunder-trader" -> "EliteQuant/EliteQuant_Cpp"
"galois-advertising/thunder-trader" -> "tashaxing/CTPtest"
"galois-advertising/thunder-trader" -> "QuantBox/XAPI2"
"galois-advertising/thunder-trader" -> "pegasusTrader/PandoraTrader"
"galois-advertising/thunder-trader" -> "shinnytech/open-trade-gateway"
"galois-advertising/thunder-trader" -> "haifengat/hfpy"
"galois-advertising/thunder-trader" -> "moonnejs/uiKLine"
"galois-advertising/thunder-trader" -> "haifengat/pyctp"
"Stepka/Stock-Prediction-usning-Transformer-NN" -> "makaveli10/StockPrediction_Transformer"
"IndexOutOfBounds998/quant4j" -> "IndexOutOfBounds998/quant-admin"
"IndexOutOfBounds998/quant4j" -> "bitted/qt"
"IndexOutOfBounds998/quant4j" -> "2bcoin/zheshiyigeniubidexiangmu"
"IndexOutOfBounds998/quant4j" -> "QuantWorldOrg/QuantWorld" ["e"=1]
"IndexOutOfBounds998/quant4j" -> "tigerfintech/tiger_quant"
"zhanggao2013/AmazingQuant" -> "physercoe/starquant" ["e"=1]
"zhanggao2013/AmazingQuant" -> "ctpbee/ctpbee" ["e"=1]
"zhanggao2013/AmazingQuant" -> "Chandlercjy/OnePy" ["e"=1]
"zhanggao2013/AmazingQuant" -> "galois-advertising/thunder-trader" ["e"=1]
"zhanggao2013/AmazingQuant" -> "fasiondog/hikyuu" ["e"=1]
"zhanggao2013/AmazingQuant" -> "sinall/StrategyEase-Python-SDK" ["e"=1]
"zhanggao2013/AmazingQuant" -> "QuantFans/quantdigger" ["e"=1]
"zhanggao2013/AmazingQuant" -> "ailabx/ailabx" ["e"=1]
"zhanggao2013/AmazingQuant" -> "DataIntegrationAlliance/data_integration_celery" ["e"=1]
"zhanggao2013/AmazingQuant" -> "moyuanz/DevilYuan" ["e"=1]
"lballabio/quantlib-old" -> "QuantBox/QuantBox_XAPI" ["e"=1]
"quantOS-org/DataCore" -> "quantOS-org/TradeSim"
"quantOS-org/DataCore" -> "quantOS-org/TradeApi"
"quantOS-org/DataCore" -> "quantOS-org/DataApi"
"quantOS-org/DataCore" -> "quantOS-org/quantOSUserGuide"
"quantOS-org/DataCore" -> "quantOS-org/tushare"
"quantOS-org/DataCore" -> "quantOS-org/JAQS"
"LinLidi/StockSensation" -> "algosenses/Stock_Market_Sentiment_Analysis"
"LinLidi/StockSensation" -> "tp-yan/WebStockPredict"
"LinLidi/StockSensation" -> "Rockyzsu/StockPredict"
"LinLidi/StockSensation" -> "DemonDamon/FinnewsHunter"
"LinLidi/StockSensation" -> "raymon-tian/networkPublicOpinionAnalysisSystem" ["e"=1]
"LinLidi/StockSensation" -> "garydai/stock"
"xbfighting/ChZhShCh" -> "sunshinelover/chanlun"
"xbfighting/ChZhShCh" -> "Everyheart/ChanLun"
"xbfighting/ChZhShCh" -> "zengbin93/czsc_web_ui"
"xbfighting/ChZhShCh" -> "junguochan/chan-Victor"
"xbfighting/ChZhShCh" -> "fnsoxt/chzhshch"
"bopo/mootdx" -> "rainx/pytdx"
"bopo/mootdx" -> "DataIntegrationAlliance/data_integration_celery"
"bopo/mootdx" -> "datochan/ctdx"
"bopo/mootdx" -> "yutiansut/QASTRATEGY101"
"bopo/mootdx" -> "wuyanfei/tdx_fetchKlineData"
"bopo/mootdx" -> "sqltxt/tdx"
"bopo/mootdx" -> "flysoso/py_tdx"
"bopo/mootdx" -> "Raytone-D/puppet"
"bopo/mootdx" -> "bopo/tdx2csv"
"bopo/mootdx" -> "yutiansut/QUANTAXIS_RealtimeCollector"
"nladuo/THSTrader" -> "match5/thsauto"
"nladuo/THSTrader" -> "skyformat99/ths_trade"
"nladuo/THSTrader" -> "Raytone-D/puppet"
"nladuo/THSTrader" -> "sinall/StrategyEase-Python-SDK"
"nladuo/THSTrader" -> "cedricporter/funcat"
"nladuo/THSTrader" -> "ak4stock/ths_auto_trade"
"nladuo/THSTrader" -> "rainx/pytdx"
"nladuo/THSTrader" -> "daveqin/stock"
"nladuo/THSTrader" -> "shidenggui/easytrader"
"nladuo/THSTrader" -> "zsrl/jqktrader"
"nladuo/THSTrader" -> "shidenggui/easyquant"
"nladuo/THSTrader" -> "mootdx/mootdx"
"nladuo/THSTrader" -> "shidenggui/easyquotation"
"nladuo/THSTrader" -> "bosspen1/stock"
"nladuo/THSTrader" -> "DataIntegrationAlliance/data_integration_celery"
"ztsec/xtp_api_python" -> "MuggleWei/babeltrader"
"ztsec/xtp_api_python" -> "ztsec/xtp_api_java"
"ztsec/xtp_api_python" -> "zhaoyu162/IsaacTrade"
"ztsec/xtp_api_python" -> "DataIntegrationAlliance/data_integration_celery"
"ztsec/xtp_api_python" -> "nicai0609/Python-CTPAPI"
"oldfritter/goDCE" -> "2bcoin/zheshiyigeniubidexiangmu" ["e"=1]
"EliteQuant/EliteQuant_Cpp" -> "EliteQuant/EliteQuant_Python"
"EliteQuant/EliteQuant_Cpp" -> "physercoe/starquant"
"EliteQuant/EliteQuant_Cpp" -> "galois-advertising/thunder-trader"
"EliteQuant/EliteQuant_Cpp" -> "opentradesolutions/opentrade"
"EliteQuant/EliteQuant_Cpp" -> "zc8424/LazzyQuant"
"EliteQuant/EliteQuant_Cpp" -> "evankirkiles/backtest-environment"
"EliteQuant/EliteQuant_Cpp" -> "nickhuangxinyu/hft"
"EliteQuant/EliteQuant_Cpp" -> "roq-trading/roq-api" ["e"=1]
"EliteQuant/EliteQuant_Cpp" -> "ydxt25/QuantSystem"
"EliteQuant/EliteQuant_Cpp" -> "rburkholder/trade-frame" ["e"=1]
"EliteQuant/EliteQuant_Cpp" -> "chronoxor/CppTrader" ["e"=1]
"EliteQuant/EliteQuant_Cpp" -> "rigtorp/spartan" ["e"=1]
"EliteQuant/EliteQuant_Cpp" -> "libtrading/libtrading" ["e"=1]
"EliteQuant/EliteQuant_Cpp" -> "tashaxing/CTPtest"
"EliteQuant/EliteQuant_Cpp" -> "QuantBox/XAPI2"
"soarbear/imu_ekf" -> "Fixit-Davide/imu_zupt" ["e"=1]
"TDGarden/stock-watch" -> "yujintang/vscode-stock"
"nooperpudd/chinastock" -> "1514louluo/mystock"
"nooperpudd/chinastock" -> "zhoudayang/get_recommend_stock"
"nooperpudd/chinastock" -> "felixglow/Stock"
"nooperpudd/chinastock" -> "volanslei/stocks"
"yisbug/nodejs-for-FutuOpenD" -> "yisbug/node-quant"
"yisbug/nodejs-for-FutuOpenD" -> "towerd/C-For-FutuOpenD"
"rainx/TdxTradeServer" -> "rainx/pytdx"
"rainx/TdxTradeServer" -> "JaysonAlbert/tdx"
"rainx/TdxTradeServer" -> "Raytone-D/puppet"
"rainx/TdxTradeServer" -> "928675268/alphaquant"
"rainx/TdxTradeServer" -> "wangdkchina/pyautotrade_tdx"
"rainx/TdxTradeServer" -> "sinall/StrategyEase-Python-SDK"
"rainx/TdxTradeServer" -> "QuantBox/XAPI2"
"rainx/TdxTradeServer" -> "rainx/cn_stock_holidays"
"rainx/TdxTradeServer" -> "cedricporter/funcat"
"rainx/TdxTradeServer" -> "zc8424/LazzyQuant"
"rainx/TdxTradeServer" -> "280185386/tdxhq"
"rainx/TdxTradeServer" -> "haifengat/hfpy"
"rainx/TdxTradeServer" -> "quantOS-org/JAQS"
"rainx/TdxTradeServer" -> "Emptyset110/dHydra"
"rainx/TdxTradeServer" -> "sqltxt/tdx"
"quantOS-org/tushare" -> "quantOS-org/TradeApi"
"quantOS-org/tushare" -> "quantOS-org/DataApi"
"quantOS-org/tushare" -> "quantOS-org/TradeSim"
"quantOS-org/DataApi" -> "quantOS-org/TradeApi"
"quantOS-org/DataApi" -> "quantOS-org/TradeSim"
"quantOS-org/DataApi" -> "quantOS-org/tushare"
"quantOS-org/DataApi" -> "quantOS-org/DataCore"
"quantOS-org/TradeApi" -> "quantOS-org/DataApi"
"quantOS-org/TradeApi" -> "quantOS-org/tushare"
"quantOS-org/TradeApi" -> "quantOS-org/TradeSim"
"quantOS-org/TradeApi" -> "quantOS-org/DataCore"
"quantOS-org/TradeSim" -> "quantOS-org/TradeApi"
"quantOS-org/TradeSim" -> "quantOS-org/DataCore"
"quantOS-org/TradeSim" -> "quantOS-org/DataApi"
"quantOS-org/TradeSim" -> "quantOS-org/tushare"
"quantOS-org/TradeSim" -> "quantOS-org/quantOSUserGuide"
"mywildquant/ChanlunX" -> "neuks/Indicator"
"mywildquant/ChanlunX" -> "yijixiuxin/chanlun-pro"
"mywildquant/ChanlunX" -> "dogfun/chanlun"
"mywildquant/ChanlunX" -> "sunshinelover/chanlun"
"mywildquant/ChanlunX" -> "ibaihuo/chanvis"
"mywildquant/ChanlunX" -> "skanda-huayan/tdxCL"
"mywildquant/ChanlunX" -> "tomcat123a/-chanlun"
"mywildquant/ChanlunX" -> "chan2zen/rust-chan"
"mywildquant/ChanlunX" -> "tconsky/ChanlunX"
"mywildquant/ChanlunX" -> "newquant/chanlun"
"mywildquant/ChanlunX" -> "neil-pan-s/one-quant-doc" ["e"=1]
"mywildquant/ChanlunX" -> "kymeii/ChanMaster"
"mywildquant/ChanlunX" -> "artistliao/ZenTheory"
"mywildquant/ChanlunX" -> "yssource/abquant-data"
"mywildquant/ChanlunX" -> "louis-gg/tdxchanbi"
"windwild/daxintong-plug" -> "fly2sky2018/TDX_stock_dll"
"py-bin/xueqiu_spider" -> "jasonhower/xueqiu"
"py-bin/xueqiu_spider" -> "Gunter-Lin/Snowball_Spider"
"coolzhm/TuShareData" -> "jicewarwick/AShareData"
"coolzhm/TuShareData" -> "HUMANAMUH/tushare-data-sync"
"coolzhm/TuShareData" -> "mumu-2014/tushare-mysql"
"coolzhm/TuShareData" -> "FrankBGao/HeatMap_for_TuShare"
"coolzhm/TuShareData" -> "HDelbert/docker-tensorflow-tushare"
"coolzhm/TuShareData" -> "leo6676284/tushare"
"coolzhm/TuShareData" -> "onewaymyway/stockdata"
"jicewarwick/AShareData" -> "coolzhm/TuShareData"
"jicewarwick/AShareData" -> "mumu-2014/tushare-mysql"
"AlphaSmartDog/DeepLearningNotes" -> "Emptyset110/dHydra" ["e"=1]
"AlphaSmartDog/DeepLearningNotes" -> "QuantFans/quantdigger" ["e"=1]
"AlphaSmartDog/DeepLearningNotes" -> "plouto-quants/FBDQA-2019A" ["e"=1]
"aiqtt/vnpy_future" -> "vvipi/VNPY_account_updater"
"bilibilihuangyifan/ccxtcn" -> "bilibilihuangyifan/marketmarker"
"bilibilihuangyifan/ccxtcn" -> "bilibilihuangyifan/awesome-quant"
"sun0x00/redtorch" -> "nicai0609/JAVA-CTPAPI"
"sun0x00/redtorch" -> "sun0x00/redtorch-resources"
"sun0x00/redtorch" -> "zhugf/java-trader"
"sun0x00/redtorch" -> "QuantWorldOrg/QuantWorld" ["e"=1]
"sun0x00/redtorch" -> "eryk/squant"
"sun0x00/redtorch" -> "galois-advertising/thunder-trader"
"sun0x00/redtorch" -> "2bcoin/zheshiyigeniubidexiangmu"
"sun0x00/redtorch" -> "QuantBox/XAPI2"
"sun0x00/redtorch" -> "haifengat/pyctp"
"sun0x00/redtorch" -> "zc8424/LazzyQuant"
"sun0x00/redtorch" -> "IndexOutOfBounds998/quant4j"
"sun0x00/redtorch" -> "ctpbee/ctpbee"
"sun0x00/redtorch" -> "moyuanz/DevilYuan"
"sun0x00/redtorch" -> "KeyAlgo/AlgoPlus"
"sun0x00/redtorch" -> "physercoe/starquant"
"makcyun/eastmoney_spider" -> "lemonche/capitalfarmer" ["e"=1]
"makcyun/eastmoney_spider" -> "DataIntegrationAlliance/data_integration_celery" ["e"=1]
"opentradesolutions/opentrade" -> "open-trade/opentick"
"opentradesolutions/opentrade" -> "roq-trading/roq-api" ["e"=1]
"opentradesolutions/opentrade" -> "EliteQuant/EliteQuant_Cpp"
"opentradesolutions/opentrade" -> "opentradesolutions/openalpha"
"opentradesolutions/opentrade" -> "physercoe/starquant"
"opentradesolutions/opentrade" -> "roq-trading/roq-cpp-samples" ["e"=1]
"opentradesolutions/opentrade" -> "nickhuangxinyu/hft"
"opentradesolutions/opentrade" -> "opentradesolutions/openrisk"
"opentradesolutions/opentrade" -> "galois-advertising/thunder-trader"
"zhentaoo/futu-quant" -> "billpwchan/futu_algo"
"zhentaoo/futu-quant" -> "02ai/US-Stock-Option-Autotrader"
"928675268/alphaquant" -> "rainx/TdxTradeServer"
"928675268/alphaquant" -> "quantOS-org/JAQS"
"928675268/alphaquant" -> "Raytone-D/puppet"
"928675268/alphaquant" -> "sinall/StrategyEase-Python-SDK"
"928675268/alphaquant" -> "rainx/pytdx"
"928675268/alphaquant" -> "Emptyset110/dHydra"
"928675268/alphaquant" -> "QuantBox/XAPI2"
"928675268/alphaquant" -> "JaysonAlbert/tdx"
"928675268/alphaquant" -> "moyuanz/DevilYuan"
"928675268/alphaquant" -> "zc8424/LazzyQuant"
"928675268/alphaquant" -> "quantOS-org/DataCore"
"928675268/alphaquant" -> "haifengat/hfpy"
"928675268/alphaquant" -> "changye/AutoTrade"
"928675268/alphaquant" -> "nooperpudd/chinastock"
"928675268/alphaquant" -> "wangdkchina/pyautotrade_tdx"
"makaveli10/StockPrediction_Transformer" -> "Stepka/Stock-Prediction-usning-Transformer-NN"
"herrkun/Financial-data-collection-from-web-" -> "EdwardLee0331/autoDownload"
"ziweipolaris/atec2018-nlp" -> "Lapis-Hong/atec-nlp" ["e"=1]
"quantzzh/dlstock" -> "tusonggao/Stock_Automation"
"quantzzh/dlstock" -> "bysjlwdx/TensorFlow"
"nickhuangxinyu/hft" -> "roq-trading/roq-api" ["e"=1]
"nickhuangxinyu/hft" -> "galois-advertising/thunder-trader"
"nickhuangxinyu/hft" -> "xywanz/ft"
"nickhuangxinyu/hft" -> "physercoe/starquant"
"nickhuangxinyu/hft" -> "zc8424/LazzyQuant"
"nickhuangxinyu/hft" -> "chronoxor/CppTrader" ["e"=1]
"nickhuangxinyu/hft" -> "tspooner/rl_markets" ["e"=1]
"nickhuangxinyu/hft" -> "ucaiado/rl_trading" ["e"=1]
"fmzquant/fmz_extend_api_demo" -> "fmzquant/strategies" ["e"=1]
"fmzquant/fmz_extend_api_demo" -> "nladuo/THSTrader" ["e"=1]
"fmzquant/fmz_extend_api_demo" -> "sphinx-quant/sphinx-quant" ["e"=1]
"TATlong/Research-report-Classification-system" -> "xiaohaomao/text_extraction"
"TATlong/Research-report-Classification-system" -> "huanglaoxie0503/research_report_spider"
"TATlong/Research-report-Classification-system" -> "BlankerL/Market-Report-Generator"
"TATlong/Research-report-Classification-system" -> "hogking/eastmoney_crawler"
"thought7878/chanlun_notes" -> "tconsky/ChanlunX"
"thought7878/chanlun_notes" -> "neil-pan-s/one-quant-doc" ["e"=1]
"thought7878/chanlun_notes" -> "ibaihuo/chanvis"
"pengxungui/LSTM_stock" -> "LightingFx/hs300_stock_predict"
"pengxungui/LSTM_stock" -> "coolzhm/TuShareData"
"pengxungui/LSTM_stock" -> "FrankBGao/HeatMap_for_TuShare"
"pengxungui/LSTM_stock" -> "qq1162667214/pyqt5-matplotlib-tushare-"
"pengxungui/LSTM_stock" -> "kuoted/Quotes"
"pengxungui/LSTM_stock" -> "netblind/stockPredict"
"pengxungui/LSTM_stock" -> "Jasonbaby/stock_recommendation_spider"
"pengxungui/LSTM_stock" -> "albert-feng/blade-fury"
"pengxungui/LSTM_stock" -> "ruyisee/ginkgo"
"pengxungui/LSTM_stock" -> "AdvancingStone/stock-data-analysis-and-prediction"
"tigerfintech/openapi-python-sdk" -> "tigerfintech/openapi-java-sdk"
"Jerry1014/FundCrawler" -> "CBJerry993/TT_Fund"
"Jerry1014/FundCrawler" -> "weibycn/fund"
"Jerry1014/FundCrawler" -> "XDTD/fund_crawler"
"Jerry1014/FundCrawler" -> "refraction-ray/xalpha"
"Jerry1014/FundCrawler" -> "SunshowerC/fund-strategy"
"Jerry1014/FundCrawler" -> "linoodb/Python_FundCrawler"
"Jerry1014/FundCrawler" -> "lihao100106/Fund_Rank_based_on_Return_Rate_and_Sharpe_Ratio"
"Jerry1014/FundCrawler" -> "uname-yang/pysnowball"
"Jerry1014/FundCrawler" -> "x2rr/funds"
"Jerry1014/FundCrawler" -> "hongrubaiding/EstimateValueData"
"Jerry1014/FundCrawler" -> "1zilc/fishing-funds"
"Jerry1014/FundCrawler" -> "benitoro/stockholm" ["e"=1]
"Jerry1014/FundCrawler" -> "PKUJohnson/OpenData"
"Jerry1014/FundCrawler" -> "makcyun/eastmoney_spider" ["e"=1]
"ericyan/tdx" -> "dobit/tdxProxy"
"ericyan/tdx" -> "flysoso/py_tdx"
"DingTobest/JQdataServiceForVNPY" -> "tonywanggit/vnpy"
"DingTobest/JQdataServiceForVNPY" -> "vvipi/VNPY_account_updater"
"tusonggao/CTP_Simplest_Demo" -> "tusonggao/Stock_Automation"
"tusonggao/CTP_Simplest_Demo" -> "pprett/bolt"
"tusonggao/CTP_Simplest_Demo" -> "zhuzhenpeng/CTP-MarketDataMachine"
"tusonggao/CTP_Simplest_Demo" -> "tashaxing/CTPtest"
"zhugf/java-trader" -> "nicai0609/JAVA-CTPAPI"
"zhugf/java-trader" -> "sun0x00/redtorch-resources"
"zhugf/java-trader" -> "haoziwlh/ftdc"
"corefan/TdxTradeServer" -> "bensema/gotdx"
"corefan/TdxTradeServer" -> "wps1112/pytdx_backup"
"corefan/TdxTradeServer" -> "roxhf/tdxapi2"
"corefan/TdxTradeServer" -> "quant1x/gotdx"
"corefan/TdxTradeServer" -> "zjp-CN/rustdx"
"shinnytech/shinny-futures-android" -> "shinnytech/shinny-futures-h5"
"shinnytech/shinny-futures-android" -> "shinnytech/shinny-futures-ios"
"shinnytech/shinny-futures-android" -> "shinnytech/open-trade-gateway"
"shinnytech/shinny-futures-android" -> "shinnytech/tqsdk-js"
"shinnytech/shinny-futures-android" -> "shinnytech/diff"
"shinnytech/shinny-futures-android" -> "shinnytech/shinny-futures-web"
"yutiansut/QUANTAXIS_RealtimeCollector" -> "yutiansut/QUANTAXIS_RandomPrice"
"yutiansut/QUANTAXIS_RealtimeCollector" -> "QUANTAXIS/quantdata"
"yutiansut/QUANTAXIS_RealtimeCollector" -> "yutiansut/qamarket-rs"
"lihao100106/Fund_Rank_based_on_Return_Rate_and_Sharpe_Ratio" -> "linoodb/Python_FundCrawler"
"jpsml/6-DOF-Inertial-Odometry" -> "nisharaichur/End-to-End-Learning-Framework-for-IMU-Based-6-DOF-Odometry" ["e"=1]
"xiaohaomao/text_extraction" -> "creacentblue/industry_rotation"
"xiaohaomao/text_extraction" -> "TATlong/Research-report-Classification-system"
"xiaohaomao/text_extraction" -> "BlankerL/Market-Report-Generator"
"JaysonAlbert/zipline" -> "JaysonAlbert/tdx"
"JaysonAlbert/zipline" -> "JaysonAlbert/cn_zipline"
"JaysonAlbert/zipline" -> "zhanghan1990/zipline-chinese"
"JaysonAlbert/zipline" -> "rainx/inside-zipline"
"JaysonAlbert/zipline" -> "rainx/cn_stock_holidays"
"JaysonAlbert/zipline" -> "kanghua309/zipline"
"JaysonAlbert/zipline" -> "rainx/zipline_cn_databundle"
"maxmon/abu_ml" -> "sinall/StrategyEase-Python-SDK"
"maxmon/abu_ml" -> "QuantFans/quantdigger"
"maxmon/abu_ml" -> "AlphaSmartDog/DeepLearningNotes" ["e"=1]
"maxmon/abu_ml" -> "bilibilihuangyifan/ccxtcn"
"maxmon/abu_ml" -> "quantOS-org/JAQS"
"maxmon/abu_ml" -> "bbfamily/abu"
"tradequant/ZMTradeService" -> "tradequant/ZMStockCom"
"LKI/xixiang" -> "zaihui/hutils"
"LKI/xixiang" -> "jkzing/jkzing.com"
"LKI/xixiang" -> "jkzing/bridgit"
"zaihui/hutils" -> "jkzing/bridgit"
"zaihui/hutils" -> "jkzing/jkzing.com"
"zaihui/hutils" -> "LKI/xixiang"
"zaihui/hutils" -> "ldsink/toolbox"
"zaihui/hutils" -> "hui-z/mondrian"
"zhouyantao/PythonStock" -> "coolzhm/TuShareData"
"zhouyantao/PythonStock" -> "mumu-2014/tushare-mysql"
"zhouyantao/PythonStock" -> "onewaymyway/stockdata"
"zhengguowei/stock_prediction" -> "bysjlwdx/TensorFlow"
"zhengguowei/stock_prediction" -> "Clearfk/lstm-rnn-stock-predict"
"hogking/eastmoney_crawler" -> "zyiyy/TextSentiment"
"kanghua309/strategy" -> "jiaminzou888/OpenSource_BSD"
"kanghua309/strategy" -> "rainx/inside-zipline"
"kanghua309/strategy" -> "kanghua309/zipline-chinese"
"kanghua309/strategy" -> "zipline-live/zipline" ["e"=1]
"cat-steel/stock_pick" -> "albert-feng/blade-fury"
"cat-steel/stock_pick" -> "wkingnet/stock-analysis"
"cat-steel/stock_pick" -> "zhupanlinch/OneNightStand"
"cat-steel/stock_pick" -> "shidenggui/easyutils"
"cat-steel/stock_pick" -> "z991/StockWaring"
"cat-steel/stock_pick" -> "TruthHun/auction-stock"
"cat-steel/stock_pick" -> "benitoro/stockholm" ["e"=1]
"xbfighting/chzhshch-1" -> "fnsoxt/chzhshch"
"sun0x00/redtorch-resources" -> "sun0x00/redtorch-web-react"
"sun0x00/redtorch-resources" -> "zhugf/java-trader"
"zhaoyu162/IsaacTrade" -> "zhaoyu162/IsaacOptTrade"
"zhaoyu162/IsaacTrade" -> "zhaoyu162/IssacLv2"
"MuggleWei/babeltrader" -> "leochan007/XTP.GO"
"MuggleWei/babeltrader" -> "ztsec/xtp_api_java"
"MuggleWei/babeltrader" -> "rongyuhuang/XTP.NET"
"bopo/tdx2csv" -> "flysoso/py_tdx"
"JaysonAlbert/cn_zipline" -> "JaysonAlbert/tdx"
"JaysonAlbert/cn_zipline" -> "flysoso/py_tdx"
"JaysonAlbert/cn_zipline" -> "JaysonAlbert/zipline"
"JaysonAlbert/cn_zipline" -> "bopo/tdx2csv"
"JaysonAlbert/cn_zipline" -> "280185386/tdxhq"
"JaysonAlbert/cn_zipline" -> "zhuhuibeishadiao/Tdx"
"nullpointer/fund-crawler" -> "fundvis/fund-data"
"kuoted/Quotes" -> "coolzhm/TuShareData"
"kuoted/Quotes" -> "leo6676284/tushare"
"FutunnOpen/C-For-FutuOpenD" -> "towerd/C-For-FutuOpenD"
"opentradesolutions/openalpha" -> "opentradesolutions/openrisk"
"PKUJohnson/LearnJaqsByExample" -> "quantOS-org/quantOSUserGuide"
"zhaoyu162/IssacLv2" -> "observerss/sinal2"
"zhaoyu162/IssacLv2" -> "zhaoyu162/IsaacTrade"
"zhaoyu162/IssacLv2" -> "datochan/ParseTicFile"
"shinnytech/shinny-futures-web" -> "shinnytech/shinny-futures-h5"
"shinnytech/shinny-futures-web" -> "shinnytech/tqsdk-js"
"shinnytech/shinny-futures-web" -> "shinnytech/diff"
"shinnytech/shinny-futures-web" -> "shinnytech/shinny-futures-ios"
"shinnytech/shinny-futures-h5" -> "shinnytech/shinny-futures-web"
"shinnytech/shinny-futures-h5" -> "shinnytech/shinny-futures-android"
"shinnytech/shinny-futures-h5" -> "shinnytech/tqsdk-js"
"shinnytech/shinny-futures-h5" -> "shinnytech/shinny-futures-ios"
"shinnytech/shinny-futures-h5" -> "shinnytech/open-md-gateway"
"shinnytech/shinny-futures-h5" -> "shinnytech/open-trade-gateway"
"youngdro/fundSpider" -> "nullpointer/fund-crawler"
"shinnytech/tqsdk-js" -> "shinnytech/shinny-futures-web"
"shinnytech/tqsdk-js" -> "shinnytech/shinny-futures-h5"
"FutunnOpen/futu-api-doc" -> "FutunnOpen/C-For-FutuOpenD"
"culi123/QtGuiSurveillanceMulti" -> "toby20130333/qtctp"
"culi123/QtGuiSurveillanceMulti" -> "jiaminzou888/cppvnpy"
"fundvis/fund-data" -> "nullpointer/fund-crawler"
"EliteQuant/EliteQuant_Matlab" -> "EliteQuant/EliteQuant_R"
"EliteQuant/EliteQuant_R" -> "EliteQuant/EliteQuant_Matlab"
"ztsec/xtp_api_java" -> "MuggleWei/babeltrader"
"ztsec/xtp_api_java" -> "zhugf/java-trader"
"bitted/qt" -> "IndexOutOfBounds998/quant-admin"
"zle1992/atec" -> "Lapis-Hong/atec-nlp" ["e"=1]
"Lapis-Hong/atec-nlp" -> "rover9632/atec_nlp"
"Lapis-Hong/atec-nlp" -> "zixuanweeei/atec-sim"
"Lapis-Hong/atec-nlp" -> "jcjview/atec_nlp_sim"
"Lapis-Hong/atec-nlp" -> "ziweipolaris/atec2018-nlp" ["e"=1]
"Lapis-Hong/atec-nlp" -> "JinYang88/atec_nlp_sim"
"Lapis-Hong/atec-nlp" -> "zle1992/atec" ["e"=1]
"Lapis-Hong/atec-nlp" -> "Huijun-Cui/ATEC-NLP" ["e"=1]
"Lapis-Hong/atec-nlp" -> "wuyaqiang/Semantic_Similarity"
"hui-z/mondrian" -> "zaihui/hutils"
"hui-z/mondrian" -> "jkzing/jkzing.com"
"Huijun-Cui/ATEC-NLP" -> "rover9632/atec_nlp" ["e"=1]
"yutiansut/QATrader" -> "yutiansut/QUANTAXIS_RandomPrice"
"rover9632/atec_nlp" -> "zixuanweeei/atec-sim"
"ijibu/gettrackersdata" -> "nzai/regimentation"
"zixuanweeei/atec-sim" -> "rover9632/atec_nlp"
"zixuanweeei/atec-sim" -> "laihuiyuan/ATEC2018_NLP"
"yutiansut/QUANTAXIS_RandomPrice" -> "yutiansut/qamarket-rs"
"QUANTAXIS/quantaxis_run" -> "QUANTAXIS/QIFI"
"waditu/tushare" -> "vnpy/vnpy"
"waditu/tushare" -> "shidenggui/easytrader"
"waditu/tushare" -> "akfamily/akshare"
"waditu/tushare" -> "ricequant/rqalpha"
"waditu/tushare" -> "shidenggui/easyquotation"
"waditu/tushare" -> "yutiansut/QUANTAXIS"
"waditu/tushare" -> "quantopian/zipline" ["e"=1]
"waditu/tushare" -> "bbfamily/abu"
"waditu/tushare" -> "shidenggui/easyquant"
"waditu/tushare" -> "thuquant/awesome-quant"
"waditu/tushare" -> "TA-Lib/ta-lib-python" ["e"=1]
"waditu/tushare" -> "mementum/backtrader" ["e"=1]
"waditu/tushare" -> "Rockyzsu/stock"
"waditu/tushare" -> "pythonstock/stock"
"waditu/tushare" -> "littlecodersh/ItChat" ["e"=1]
"x2rr/funds" -> "SunshowerC/fund-strategy"
"x2rr/funds" -> "refraction-ray/xalpha"
"x2rr/funds" -> "LeekHub/leek-fund"
"x2rr/funds" -> "1zilc/fishing-funds"
"x2rr/funds" -> "Jerry1014/FundCrawler"
"x2rr/funds" -> "huage2580/leeks"
"x2rr/funds" -> "axiaoxin-com/investool"
"x2rr/funds" -> "cteamx/Thief" ["e"=1]
"x2rr/funds" -> "sxei/chrome-plugin-demo" ["e"=1]
"x2rr/funds" -> "huanghyw/jd_seckill" ["e"=1]
"x2rr/funds" -> "Hurdery/jfc"
"x2rr/funds" -> "tophubs/TopList" ["e"=1]
"x2rr/funds" -> "ChinaVolvocars/jd_maotai_seckill" ["e"=1]
"x2rr/funds" -> "CBJerry993/TT_Fund"
"x2rr/funds" -> "Kocal/vue-web-extension" ["e"=1]
"hugo2046/QuantsPlaybook" -> "thuquant/awesome-quant"
"hugo2046/QuantsPlaybook" -> "wondertrader/wondertrader"
"hugo2046/QuantsPlaybook" -> "yutiansut/QUANTAXIS"
"hugo2046/QuantsPlaybook" -> "jrothschild33/learn_backtrader"
"hugo2046/QuantsPlaybook" -> "waditu/czsc"
"hugo2046/QuantsPlaybook" -> "charliedream1/ai_quant_trade"
"hugo2046/QuantsPlaybook" -> "zvtvz/zvt"
"hugo2046/QuantsPlaybook" -> "Rockyzsu/stock"
"hugo2046/QuantsPlaybook" -> "RL-MLDM/alphagen" ["e"=1]
"hugo2046/QuantsPlaybook" -> "quantopian/alphalens" ["e"=1]
"hugo2046/QuantsPlaybook" -> "paperswithbacktest/awesome-systematic-trading" ["e"=1]
"hugo2046/QuantsPlaybook" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"hugo2046/QuantsPlaybook" -> "microsoft/qlib" ["e"=1]
"hugo2046/QuantsPlaybook" -> "FinHackCN/finhack" ["e"=1]
"hugo2046/QuantsPlaybook" -> "Barca0412/Introduction-to-Quantitative-Finance" ["e"=1]
"microsoft/qlib" -> "vnpy/vnpy" ["e"=1]
"microsoft/qlib" -> "yutiansut/QUANTAXIS" ["e"=1]
"microsoft/qlib" -> "akfamily/akshare" ["e"=1]
"microsoft/qlib" -> "UFund-Me/Qbot" ["e"=1]
"microsoft/qlib" -> "ricequant/rqalpha" ["e"=1]
"Ckend/pythondict-quant" -> "jrothschild33/learn_backtrader" ["e"=1]
"Ckend/pythondict-quant" -> "ailabx/ailabx" ["e"=1]
"Ckend/pythondict-quant" -> "HuaRongSAO/talib-document" ["e"=1]
"Ckend/pythondict-quant" -> "mpquant/MyTT" ["e"=1]
"Ckend/pythondict-quant" -> "tkfy920/qstock" ["e"=1]
"Ckend/pythondict-quant" -> "hugo2046/QuantsPlaybook" ["e"=1]
"akfamily/akshare" -> "waditu/tushare"
"akfamily/akshare" -> "shidenggui/easytrader"
"akfamily/akshare" -> "vnpy/vnpy"
"akfamily/akshare" -> "yutiansut/QUANTAXIS"
"akfamily/akshare" -> "mementum/backtrader" ["e"=1]
"akfamily/akshare" -> "shidenggui/easyquotation"
"akfamily/akshare" -> "bbfamily/abu"
"akfamily/akshare" -> "microsoft/qlib" ["e"=1]
"akfamily/akshare" -> "Rockyzsu/stock"
"akfamily/akshare" -> "ricequant/rqalpha"
"akfamily/akshare" -> "pythonstock/stock"
"akfamily/akshare" -> "thuquant/awesome-quant"
"akfamily/akshare" -> "shinnytech/tqsdk-python" ["e"=1]
"akfamily/akshare" -> "UFund-Me/Qbot"
"akfamily/akshare" -> "waditu/czsc"
"mementum/backtrader" -> "vnpy/vnpy" ["e"=1]
"mementum/backtrader" -> "ricequant/rqalpha" ["e"=1]
"mementum/backtrader" -> "akfamily/akshare" ["e"=1]
"mementum/backtrader" -> "yutiansut/QUANTAXIS" ["e"=1]
"josephchenhk/qtrader" -> "wondertrader/wtpy" ["e"=1]
"josephchenhk/qtrader" -> "jrothschild33/learn_backtrader" ["e"=1]
"josephchenhk/qtrader" -> "tkfy920/qstock" ["e"=1]
"wondertrader/wondertrader" -> "wondertrader/wtpy"
"wondertrader/wondertrader" -> "fasiondog/hikyuu"
"wondertrader/wondertrader" -> "openctp/openctp"
"wondertrader/wondertrader" -> "kungfu-origin/kungfu"
"wondertrader/wondertrader" -> "pegasusTrader/PandoraTrader"
"wondertrader/wondertrader" -> "yutiansut/QUANTAXIS"
"wondertrader/wondertrader" -> "UFund-Me/Qbot"
"wondertrader/wondertrader" -> "BigBrotherTrade/trader"
"wondertrader/wondertrader" -> "hugo2046/QuantsPlaybook"
"wondertrader/wondertrader" -> "shinnytech/tqsdk-python" ["e"=1]
"wondertrader/wondertrader" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"wondertrader/wondertrader" -> "vnpy/vnpy"
"wondertrader/wondertrader" -> "mementum/backtrader" ["e"=1]
"wondertrader/wondertrader" -> "thuquant/awesome-quant"
"wondertrader/wondertrader" -> "ricequant/rqalpha"
"DTShare/dtshare" -> "ctpbee/ctpbee" ["e"=1]
"DTShare/dtshare" -> "Rgveda/996Quant" ["e"=1]
"DTShare/dtshare" -> "rainx/pytdx" ["e"=1]
"DTShare/dtshare" -> "PKUJohnson/OpenData" ["e"=1]
"akfamily/aktools" -> "akfamily/awesome-data"
"akfamily/aktools" -> "akfamily/akshare"
"akfamily/aktools" -> "bosspen1/stock"
"akfamily/aktools" -> "match5/thsauto"
"akfamily/aktools" -> "mpquant/Ashare"
"akfamily/aktools" -> "goldenhairs/backtrader_fund" ["e"=1]
"akfamily/aktools" -> "zsrl/pywencai"
"akfamily/aktools" -> "openctp/openctp"
"akfamily/aktools" -> "Micro-sheep/efinance"
"akfamily/aktools" -> "mootdx/mootdx"
"akfamily/aktools" -> "edtechre/pybroker" ["e"=1]
"akfamily/aktools" -> "LowinLi/fushare"
"akfamily/aktools" -> "zillionare/zillionare"
"akfamily/aktools" -> "sngyai/Sequoia"
"akfamily/aktools" -> "GraySilver/wencai"
"akfamily/awesome-data" -> "akfamily/aktools"
"akfamily/awesome-data" -> "akfamily/akshare"
"akfamily/awesome-data" -> "zsrl/pywencai"
"akfamily/awesome-data" -> "zillionare/zillionare"
"akfamily/awesome-data" -> "zhanggao2013/AmazingQuant" ["e"=1]
"akfamily/awesome-data" -> "akfamily/akquant"
"akfamily/awesome-data" -> "JoinQuant/jqdatasdk"
"akfamily/awesome-data" -> "hugo2046/GetAstockFactors"
"akfamily/awesome-data" -> "edtechre/pybroker" ["e"=1]
"akfamily/awesome-data" -> "mootdx/mootdx"
"akfamily/awesome-data" -> "QuantWorld2022/backtrader" ["e"=1]
"akfamily/awesome-data" -> "match5/thsauto"
"akfamily/awesome-data" -> "ctpbee/ctpbee"
"akfamily/awesome-data" -> "chenwr727/stock-backtrader-web-app" ["e"=1]
"akfamily/awesome-data" -> "Skinok/backtrader-pyqt-ui" ["e"=1]
"ctpbee/ctpbee" -> "nooperpudd/ctpwrapper"
"ctpbee/ctpbee" -> "pegasusTrader/PandoraTrader"
"ctpbee/ctpbee" -> "openctp/openctp"
"ctpbee/ctpbee" -> "nicai0609/Python-CTPAPI"
"ctpbee/ctpbee" -> "KeyAlgo/AlgoPlus"
"ctpbee/ctpbee" -> "zhuzhenpeng/CTP-TradeServer"
"ctpbee/ctpbee" -> "openctp/openctp-ctp-python"
"ctpbee/ctpbee" -> "wondertrader/wtpy"
"ctpbee/ctpbee" -> "haifengat/pyctp"
"ctpbee/ctpbee" -> "physercoe/starquant"
"ctpbee/ctpbee" -> "fasiondog/hikyuu"
"ctpbee/ctpbee" -> "tashaxing/CTPtest"
"ctpbee/ctpbee" -> "xywanz/ft"
"ctpbee/ctpbee" -> "rainx/pytdx"
"ctpbee/ctpbee" -> "sinall/StrategyEase-Python-SDK"
"QuantBox/QuantBox_XAPI" -> "QuantBox/XAPI2"
"QuantBox/QuantBox_XAPI" -> "zhuzhenpeng/CTP-TradeServer"
"QuantBox/QuantBox_XAPI" -> "QuantBox/CTP"
"QuantBox/QuantBox_XAPI" -> "lovelylain/pyctp"
"QuantBox/QuantBox_XAPI" -> "niumuguang/AutoTrader"
"QuantBox/QuantBox_XAPI" -> "dxtkdxtk/CTP_Center"
"QuantBox/QuantBox_XAPI" -> "tashaxing/CTPtest"
"QuantBox/QuantBox_XAPI" -> "QuantBox/XAPI3"
"QuantBox/QuantBox_XAPI" -> "Emptyset110/dHydra"
"QuantBox/QuantBox_XAPI" -> "rainx/TdxTradeServer"
"QuantBox/QuantBox_XAPI" -> "zoohanyoo/node-ctp"
"QuantBox/QuantBox_XAPI" -> "haifengat/pyctp"
"QuantBox/QuantBox_XAPI" -> "QuantBox/OpenQuant"
"QuantBox/QuantBox_XAPI" -> "QuantFans/quantdigger"
"QuantBox/QuantBox_XAPI" -> "zc8424/LazzyQuant"
"zhuzhenpeng/CTP-TradeServer" -> "tashaxing/CTPtest"
"zhuzhenpeng/CTP-TradeServer" -> "QuantBox/XAPI2"
"zhuzhenpeng/CTP-TradeServer" -> "zhuzhenpeng/CTP-MarketDataMachine"
"zhuzhenpeng/CTP-TradeServer" -> "QuantBox/QuantBox_XAPI"
"zhuzhenpeng/CTP-TradeServer" -> "zoohanyoo/node-ctp"
"zhuzhenpeng/CTP-TradeServer" -> "lovelylain/pyctp"
"zhuzhenpeng/CTP-TradeServer" -> "zc8424/LazzyQuant"
"zhuzhenpeng/CTP-TradeServer" -> "nooperpudd/ctpwrapper"
"zhuzhenpeng/CTP-TradeServer" -> "haifengat/pyctp"
"zhuzhenpeng/CTP-TradeServer" -> "pegasusTrader/PandoraTrader"
"zhuzhenpeng/CTP-TradeServer" -> "nicai0609/Python-CTPAPI"
"zhuzhenpeng/CTP-TradeServer" -> "shizhuolin/PyCTP"
"zhuzhenpeng/CTP-TradeServer" -> "ctpbee/ctpbee"
"zhuzhenpeng/CTP-TradeServer" -> "niumuguang/AutoTrader"
"zhuzhenpeng/CTP-TradeServer" -> "showmsg/ctp_redis"
"LeekHub/leek-fund" -> "x2rr/funds"
"LeekHub/leek-fund" -> "huage2580/leeks"
"LeekHub/leek-fund" -> "pythonstock/stock"
"LeekHub/leek-fund" -> "akfamily/akshare"
"LeekHub/leek-fund" -> "refraction-ray/xalpha"
"LeekHub/leek-fund" -> "shidenggui/easyquotation"
"LeekHub/leek-fund" -> "shidenggui/easytrader"
"LeekHub/leek-fund" -> "Rockyzsu/stock"
"LeekHub/leek-fund" -> "Micro-sheep/efinance"
"LeekHub/leek-fund" -> "ElemeFE/page-skeleton-webpack-plugin" ["e"=1]
"LeekHub/leek-fund" -> "jones2000/HQChart"
"LeekHub/leek-fund" -> "axiaoxin-com/investool"
"LeekHub/leek-fund" -> "cteamx/Thief" ["e"=1]
"LeekHub/leek-fund" -> "umijs/qiankun" ["e"=1]
"LeekHub/leek-fund" -> "shidenggui/easyquant"
"wondertrader/wtpy" -> "wondertrader/wondertrader"
"wondertrader/wtpy" -> "pegasusTrader/PandoraTrader"
"wondertrader/wtpy" -> "openctp/openctp"
"wondertrader/wtpy" -> "ctpbee/ctpbee"
"wondertrader/wtpy" -> "drlgistics/Wt4ElegantRL"
"wondertrader/wtpy" -> "fasiondog/hikyuu"
"wondertrader/wtpy" -> "kungfu-origin/kungfu"
"wondertrader/wtpy" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"wondertrader/wtpy" -> "BigBrotherTrade/trader"
"wondertrader/wtpy" -> "hugo2046/QuantsPlaybook"
"wondertrader/wtpy" -> "waditu/czsc"
"wondertrader/wtpy" -> "jrothschild33/learn_backtrader"
"wondertrader/wtpy" -> "UFund-Me/Qbot"
"wondertrader/wtpy" -> "physercoe/starquant"
"wondertrader/wtpy" -> "JoinQuant/jqfactor_analyzer" ["e"=1]
"yanglbme/gitee-pages-action" -> "wearerequired/git-mirror-action"
"yanglbme/gitee-pages-action" -> "Yikun/hub-mirror-action"
"yanglbme/gitee-pages-action" -> "hsxyhao/gridea-theme-next" ["e"=1]
"yanglbme/gitee-pages-action" -> "HCLonely/hexo-theme-webstack" ["e"=1]
"garydai/stock" -> "benitoro/stockholm" ["e"=1]
"garydai/stock" -> "felixglow/Stock"
"garydai/stock" -> "decaywood/XueQiuSuperSpider"
"garydai/stock" -> "cforth/stock"
"garydai/stock" -> "Rockyzsu/stock"
"garydai/stock" -> "nooperpudd/chinastock"
"garydai/stock" -> "asxinyu/Stock"
"garydai/stock" -> "TsmileAssassin/stock_discover"
"garydai/stock" -> "shidenggui/easyquant"
"garydai/stock" -> "Jasonbaby/stock_recommendation_spider"
"garydai/stock" -> "xiaobeibei26/xueiqiu_spider"
"garydai/stock" -> "Yam-cn/pyalgotrade-cn"
"garydai/stock" -> "QuantFans/quantdigger"
"garydai/stock" -> "pythonstock/stock"
"garydai/stock" -> "albert-feng/blade-fury"
"wangshub/RL-Stock" -> "notadamking/Stock-Trading-Environment" ["e"=1]
"wangshub/RL-Stock" -> "Rockyzsu/stock"
"wangshub/RL-Stock" -> "pythonstock/stock"
"wangshub/RL-Stock" -> "charliedream1/ai_quant_trade"
"wangshub/RL-Stock" -> "sngyai/Sequoia"
"wangshub/RL-Stock" -> "shidenggui/easytrader"
"wangshub/RL-Stock" -> "sunnyswag/StockRL"
"wangshub/RL-Stock" -> "bbfamily/abu"
"wangshub/RL-Stock" -> "zvtvz/zvt"
"wangshub/RL-Stock" -> "ailabx/ailabx"
"wangshub/RL-Stock" -> "yutiansut/QUANTAXIS"
"wangshub/RL-Stock" -> "shidenggui/easyquotation"
"wangshub/RL-Stock" -> "waditu/czsc"
"wangshub/RL-Stock" -> "hugo2046/QuantsPlaybook"
"wangshub/RL-Stock" -> "Micro-sheep/efinance"
"myinvestpilot/invest-alchemy" -> "refraction-ray/xalpha" ["e"=1]
"KeyAlgo/AlgoPlus" -> "nooperpudd/ctpwrapper"
"KeyAlgo/AlgoPlus" -> "ctpbee/ctpbee"
"KeyAlgo/AlgoPlus" -> "nicai0609/Python-CTPAPI"
"KeyAlgo/AlgoPlus" -> "zc8424/LazzyQuant"
"KeyAlgo/AlgoPlus" -> "haifengat/pyctp"
"KeyAlgo/AlgoPlus" -> "dearleeyoung/LocalCTP"
"KeyAlgo/AlgoPlus" -> "openctp/openctp-ctp-python"
"KeyAlgo/AlgoPlus" -> "galois-advertising/thunder-trader"
"KeyAlgo/AlgoPlus" -> "zhuzhenpeng/CTP-TradeServer"
"KeyAlgo/AlgoPlus" -> "shizhuolin/PyCTP"
"KeyAlgo/AlgoPlus" -> "xywanz/ft"
"KeyAlgo/AlgoPlus" -> "tashaxing/CTPtest"
"KeyAlgo/AlgoPlus" -> "pegasusTrader/PandoraTrader"
"KeyAlgo/AlgoPlus" -> "physercoe/starquant"
"KeyAlgo/AlgoPlus" -> "lovelylain/pyctp"
"QuantFans/quantdigger" -> "shidenggui/easyquant"
"QuantFans/quantdigger" -> "Yam-cn/pyalgotrade-cn"
"QuantFans/quantdigger" -> "sinall/StrategyEase-Python-SDK"
"QuantFans/quantdigger" -> "ricequant/rqalpha"
"QuantFans/quantdigger" -> "gbeced/pyalgotrade" ["e"=1]
"QuantFans/quantdigger" -> "shidenggui/easytrader"
"QuantFans/quantdigger" -> "shidenggui/easyquotation"
"QuantFans/quantdigger" -> "fasiondog/hikyuu"
"QuantFans/quantdigger" -> "QuantBox/XAPI2"
"QuantFans/quantdigger" -> "myquant/strategy"
"QuantFans/quantdigger" -> "Rockyzsu/stock"
"QuantFans/quantdigger" -> "thuquant/awesome-quant"
"QuantFans/quantdigger" -> "yutiansut/QUANTAXIS"
"QuantFans/quantdigger" -> "Emptyset110/dHydra"
"QuantFans/quantdigger" -> "cedricporter/funcat"
"SunshowerC/fund-strategy" -> "refraction-ray/xalpha"
"SunshowerC/fund-strategy" -> "Jerry1014/FundCrawler"
"SunshowerC/fund-strategy" -> "axiaoxin-com/investool"
"SunshowerC/fund-strategy" -> "CBJerry993/TT_Fund"
"SunshowerC/fund-strategy" -> "x2rr/funds"
"SunshowerC/fund-strategy" -> "weibycn/fund"
"SunshowerC/fund-strategy" -> "MrDujing/FundCombination"
"SunshowerC/fund-strategy" -> "Rgveda/996Quant"
"SunshowerC/fund-strategy" -> "Micro-sheep/efinance"
"SunshowerC/fund-strategy" -> "ailabx/ailabx"
"SunshowerC/fund-strategy" -> "jumper2014/anyin-fund-investment"
"SunshowerC/fund-strategy" -> "08zhangyi/multi-factor-gm-wind-joinquant" ["e"=1]
"SunshowerC/fund-strategy" -> "uname-yang/pysnowball"
"SunshowerC/fund-strategy" -> "Ckend/pythondict-quant" ["e"=1]
"SunshowerC/fund-strategy" -> "1zilc/fishing-funds"
"eastmountyxz/Sentiment-Analysis" -> "ZaneMuir/DLUT-Emotionontology"
"Yikun/hub-mirror-action" -> "wearerequired/git-mirror-action"
"Yikun/hub-mirror-action" -> "yanglbme/gitee-pages-action"
"Yikun/hub-mirror-action" -> "ShixiangWang/sync2gitee"
"Yikun/hub-mirror-action" -> "yi-Xu-0100/hub-mirror"
"Yikun/hub-mirror-action" -> "sazs34/MyActions" ["e"=1]
"Yikun/hub-mirror-action" -> "yi-Xu-0100/repo-list-generator"
"hellonlp/sentiment-analysis" -> "hellonlp/sentiment_analysis_dict" ["e"=1]
"yangwohenmai/DeepLearningForTSF" -> "jm199504/Financial-Time-Series" ["e"=1]
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "moyuweiqing/Stock-prediction-algorithm-based-on-machine-learning"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "LightingFx/hs300_stock_predict"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "GERMINO-LiuHe/A-stock-prediction-algorithm-based-on-machine-learning"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "MaybeWilliam/stock-price-prediction-BPNN-LSTM"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "netblind/stockPredict"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "tp-yan/WebStockPredict"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "AdvancingStone/stock-data-analysis-and-prediction"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "KittenCN/stock_prediction"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "zxpeter/stock_predict_machineLearning"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "algosenses/Stock_Market_Sentiment_Analysis"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "FinHackCN/finhack" ["e"=1]
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "pengxungui/LSTM_stock"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "cxdsz/stock-price-prediction-algorithms"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "wqk666999/CNN-LSTM-Attention"
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" -> "ailabx/ailabx"
"justinzm/gopup" -> "akfamily/akshare" ["e"=1]
"netblind/stockPredict" -> "LightingFx/hs300_stock_predict"
"netblind/stockPredict" -> "TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict"
"netblind/stockPredict" -> "zhengguowei/stock_prediction"
"netblind/stockPredict" -> "MaybeWilliam/stock-price-prediction-BPNN-LSTM"
"netblind/stockPredict" -> "moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning"
"netblind/stockPredict" -> "tp-yan/WebStockPredict"
"netblind/stockPredict" -> "cxdsz/stock-price-prediction-algorithms"
"netblind/stockPredict" -> "QikaiXu/Stock-Forecasting"
"netblind/stockPredict" -> "python279/stock-predict"
"netblind/stockPredict" -> "pengxungui/LSTM_stock"
"wqk666999/CNN-LSTM-Attention" -> "PatientEz/CNN-BiLSTM-Attention-Time-Series-Prediction_Keras" ["e"=1]
"wqk666999/CNN-LSTM-Attention" -> "zshicode/Attention-CLX-stock-prediction"
"wqk666999/CNN-LSTM-Attention" -> "koi-boy/CNN-LSTM-Attention"
"wqk666999/CNN-LSTM-Attention" -> "MaybeWilliam/stock-price-prediction-BPNN-LSTM"
"wqk666999/CNN-LSTM-Attention" -> "gangweix/Stoch-predict-with-Tranformer-LSTM"
"wqk666999/CNN-LSTM-Attention" -> "matheusbfernandes/stock-market-prediction" ["e"=1]
"wqk666999/CNN-LSTM-Attention" -> "GivyBoy/CEEMDAN-and-LSTM-CNN-CBAM" ["e"=1]
"wqk666999/CNN-LSTM-Attention" -> "slaysd/pytorch-sentiment-analysis-classification" ["e"=1]
"zhengquantao/vue-kline" -> "ctpbee/ctpbee" ["e"=1]
"hengxuZ/binance-quantization" -> "zhy0313/ea-python" ["e"=1]
"hengxuZ/binance-quantization" -> "fmzquant/strategies" ["e"=1]
"PatientEz/CNN-BiLSTM-Attention-Time-Series-Prediction_Keras" -> "wqk666999/CNN-LSTM-Attention" ["e"=1]
"PatientEz/CNN-BiLSTM-Attention-Time-Series-Prediction_Keras" -> "sarikayamehmet/cnn-bilstm-attention" ["e"=1]
"PatientEz/CNN-BiLSTM-Attention-Time-Series-Prediction_Keras" -> "zshicode/Attention-CLX-stock-prediction" ["e"=1]
"bytebeats/mns" -> "huage2580/leeks"
"bytebeats/mns" -> "WhiteVermouth/intellij-investor-dashboard"
"ggwhsd/CTP-CSharp" -> "shawn666liu/FtdcNet.CTP"
"ggwhsd/CTP-CSharp" -> "GuanXP/CTPSharp"
"plouto-quants/FBDQA-2019A" -> "plouto-quants/FBDQA-2020S"
"plouto-quants/FBDQA-2019A" -> "jm199504/Financial-Time-Series"
"plouto-quants/FBDQA-2019A" -> "xhlgogo/Quantitative-Investment-Trading-system" ["e"=1]
"plouto-quants/FBDQA-2019A" -> "pskun/finance_news_analysis"
"plouto-quants/FBDQA-2019A" -> "andyzsf/TuShare"
"plouto-quants/FBDQA-2019A" -> "qta2019/QtaTraining2019" ["e"=1]
"plouto-quants/FBDQA-2020S" -> "saturn-lab/FBDQA-2020S"
"plouto-quants/FBDQA-2020S" -> "saturn-lab/BDMI-2020S"
"wps1112/pytdx_backup" -> "corefan/TdxTradeServer"
"zhangxiangliang/stock-api" -> "uname-yang/pysnowball"
"zhangxiangliang/stock-api" -> "mpquant/Ashare"
"zhangxiangliang/stock-api" -> "1nchaos/adata"
"zhangxiangliang/stock-api" -> "bosspen1/stock"
"zhangxiangliang/stock-api" -> "sngyai/Sequoia"
"zhangxiangliang/stock-api" -> "xxjwxc/shares"
"zhangxiangliang/stock-api" -> "MicroEngine/DevilYuan"
"zhangxiangliang/stock-api" -> "jadepeng/pytrader"
"zhangxiangliang/stock-api" -> "zjp-CN/rustdx"
"zhangxiangliang/stock-api" -> "mpquant/MyTT"
"zhangxiangliang/stock-api" -> "shidenggui/easyquotation"
"zhangxiangliang/stock-api" -> "Micro-sheep/efinance"
"zhangxiangliang/stock-api" -> "TDGarden/stock-watch"
"zhangxiangliang/stock-api" -> "benitoro/stockholm" ["e"=1]
"zhangxiangliang/stock-api" -> "bankrollhunter/market-breadth"
"hungchun-lin/Stock-price-prediction-using-GAN" -> "zshicode/Attention-CLX-stock-prediction" ["e"=1]
"sangyx/deep-finance" -> "hugo2046/QuantsPlaybook" ["e"=1]
"sangyx/deep-finance" -> "thuquant/awesome-quant" ["e"=1]
"MaybeWilliam/stock-price-prediction-BPNN-LSTM" -> "GERMINO-LiuHe/A-stock-prediction-algorithm-based-on-machine-learning"
"MaybeWilliam/stock-price-prediction-BPNN-LSTM" -> "netblind/stockPredict"
"MaybeWilliam/stock-price-prediction-BPNN-LSTM" -> "moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning"
"MaybeWilliam/stock-price-prediction-BPNN-LSTM" -> "dukuanbing/bpnn-stock-price-prediction" ["e"=1]
"MaybeWilliam/stock-price-prediction-BPNN-LSTM" -> "wqk666999/CNN-LSTM-Attention"
"RonDen/-StockTrading" -> "1251240000/StockVisualization"
"RonDen/-StockTrading" -> "LakeSky/Stock-Trading-System"
"hbdmapi/huobi_futures_Python" -> "nickhuangxinyu/hft" ["e"=1]
"zoohanyoo/node-ctp" -> "showmsg/ctp_redis"
"zoohanyoo/node-ctp" -> "zhuzhenpeng/CTP-TradeServer"
"zoohanyoo/node-ctp" -> "zhuzhenpeng/CTP-MarketDataMachine"
"zoohanyoo/node-ctp" -> "hankchan/goctp"
"zoohanyoo/node-ctp" -> "langhuihui/node-ctp"
"zoohanyoo/node-ctp" -> "zhuwuyun/CTP-TRADER"
"zoohanyoo/node-ctp" -> "zoohanyoo/node-trade"
"zoohanyoo/node-ctp" -> "fouvy/CTPFutrueProvider"
"yutiansut/qaaccount-rs" -> "yutiansut/qatrader-rs"
"yutiansut/qaaccount-rs" -> "yutiansut/QIFIAccount"
"AdvancingStone/stock-learning" -> "AdvancingStone/stock-data-analysis-and-prediction"
"Shimon-Guo/chinese_sentiment_dictionary" -> "nishiwen1214/Keywords_cloud"
"Shimon-Guo/chinese_sentiment_dictionary" -> "nishiwen1214/NLP-Dictionary" ["e"=1]
"Shimon-Guo/chinese_sentiment_dictionary" -> "ppzhenghua/SentimentAnalysisDictionary"
"icoxfog417/awesome-financial-nlp" -> "PKUJohnson/OpenData" ["e"=1]
"icoxfog417/awesome-financial-nlp" -> "MengLingchao/Chinese_financial_sentiment_dictionary" ["e"=1]
"logancyang/my-cs-degree" -> "Rgveda/996Quant" ["e"=1]
"pixta-dev/repository-mirroring-action" -> "wearerequired/git-mirror-action"
"pixta-dev/repository-mirroring-action" -> "yesolutions/mirror-action"
"match5/thsauto" -> "nladuo/THSTrader"
"match5/thsauto" -> "skyformat99/ths_trade"
"match5/thsauto" -> "LeekQuant/leekquant"
"match5/thsauto" -> "ak4stock/ths_auto_trade"
"match5/thsauto" -> "limitget/THS"
"match5/thsauto" -> "zsrl/jqktrader"
"match5/thsauto" -> "newhackerman/TDXPystock"
"match5/thsauto" -> "bosspen1/stock"
"match5/thsauto" -> "GraySilver/wencai"
"match5/thsauto" -> "Raytone-D/puppet"
"match5/thsauto" -> "Tu5039/THSTrader"
"match5/thsauto" -> "mootdx/mootdx"
"match5/thsauto" -> "daveqin/stock"
"match5/thsauto" -> "wukan1986/thsauto"
"match5/thsauto" -> "zsrl/pywencai"
"MengLingchao/Chinese_financial_sentiment_dictionary" -> "DavionWu2018/Sentiment_dictionary"
"MengLingchao/Chinese_financial_sentiment_dictionary" -> "valuesimplex/FinBERT" ["e"=1]
"MengLingchao/Chinese_financial_sentiment_dictionary" -> "A-Rain/BDCI2019-Negative_Finance_Info_Judge" ["e"=1]
"kengerlwl/ChipDistribution" -> "mootdx/mootdx"
"kengerlwl/ChipDistribution" -> "tianjingle/zMain"
"kengerlwl/ChipDistribution" -> "ak4stock/ths_auto_trade"
"kengerlwl/ChipDistribution" -> "newhackerman/TDXPystock"
"kengerlwl/ChipDistribution" -> "WestXu/support_resistance_line" ["e"=1]
"kengerlwl/ChipDistribution" -> "match5/thsauto"
"kengerlwl/ChipDistribution" -> "zjp-CN/rustdx"
"wbbhcb/stock_market" -> "Rgveda/996Quant"
"wbbhcb/stock_market" -> "Rgveda/GolemQ"
"wbbhcb/stock_market" -> "yutiansut/QUANTAXIS"
"wbbhcb/stock_market" -> "JoinQuant/jqfactor_analyzer" ["e"=1]
"wbbhcb/stock_market" -> "JINGEWU/Stock-Market-Trend-Analysis-Using-HMM-LSTM" ["e"=1]
"wbbhcb/stock_market" -> "tomcat123a/-chanlun"
"wbbhcb/stock_market" -> "kzil88/JXQuant"
"wbbhcb/stock_market" -> "wangshub/RL-Stock"
"wbbhcb/stock_market" -> "mootdx/mootdx"
"wbbhcb/stock_market" -> "zhanggao2013/AmazingQuant" ["e"=1]
"wbbhcb/stock_market" -> "yutiansut/QAStrategy"
"wbbhcb/stock_market" -> "phonegapX/alphasickle" ["e"=1]
"wbbhcb/stock_market" -> "Raytone-D/puppet"
"wbbhcb/stock_market" -> "waditu/czsc"
"dxtkdxtk/CTP_Center" -> "niumuguang/AutoTrader"
"pushpendughosh/Stock-market-forecasting" -> "makaveli10/StockPrediction_Transformer" ["e"=1]
"Python3Spiders/StockSpider" -> "linxinloningg/Stockquant"
"Python3Spiders/StockSpider" -> "Liumce/fund_management-eastmoney"
"hellonlp/sentiment_analysis_dict" -> "ZaneMuir/DLUT-Emotionontology"
"hellonlp/sentiment_analysis_dict" -> "l-passer/sentiment-analysis"
"QuantBox/QuantBox.Data" -> "QuantBox/QuantBox.DataSimulator"
"QuantBox/QuantBox.Data" -> "QuantBox/QuantBox.DataReceiver"
"QuantBox/QuantBox.Data" -> "QuantBox/DemoDock"
"huage2580/leeks" -> "bytebeats/mns"
"huage2580/leeks" -> "WhiteVermouth/intellij-investor-dashboard"
"huage2580/leeks" -> "LeekHub/leek-fund"
"huage2580/leeks" -> "x2rr/funds"
"huage2580/leeks" -> "yisier/thief-book-idea" ["e"=1]
"huage2580/leeks" -> "bosspen1/stock"
"huage2580/leeks" -> "WoChen5770/leeks"
"huage2580/leeks" -> "silently9527/Toolkit" ["e"=1]
"huage2580/leeks" -> "Link-Kou/intellij-mybaitslog" ["e"=1]
"huage2580/leeks" -> "SunshowerC/fund-strategy"
"huage2580/leeks" -> "cteamx/Thief" ["e"=1]
"AdvancingStone/stock-data-analysis-and-prediction" -> "AdvancingStone/stock-learning"
"AdvancingStone/stock-data-analysis-and-prediction" -> "tp-yan/WebStockPredict"
"AdvancingStone/stock-data-analysis-and-prediction" -> "LightingFx/hs300_stock_predict"
"AdvancingStone/stock-data-analysis-and-prediction" -> "algosenses/Stock_Market_Sentiment_Analysis"
"mumu-2014/tushare-mysql" -> "coolzhm/TuShareData"
"mumu-2014/tushare-mysql" -> "jicewarwick/AShareData"
"dmquant/chinesecloud" -> "ricequant/rqopen-client"
"ctpbee/ctpbee_desktop" -> "QUANTAXIS/quantdata"
"We-Hack-Studio/nuts" -> "2bcoin/zheshiyigeniubidexiangmu" ["e"=1]
"allen-chiang/Time-Series-Transformer" -> "makaveli10/StockPrediction_Transformer" ["e"=1]
"niumuguang/AutoTrader" -> "dxtkdxtk/CTP_Center"
"niumuguang/AutoTrader" -> "zhuwuyun/CTP-TRADER"
"gaoguole/whfunc" -> "yutiansut/QACTPBeeBroker"
"happydasch/btplotting" -> "jrothschild33/learn_backtrader" ["e"=1]
"yutiansut/QATradeG" -> "yutiansut/qamarket-rs"
"tigerfintech/tiger_quant" -> "tigerfintech/openapi-java-sdk"
"tigerfintech/tiger_quant" -> "ta4j/ta4j-wiki" ["e"=1]
"tigerfintech/tiger_quant" -> "QuantWorldOrg/QuantWorld" ["e"=1]
"xywanz/ft" -> "shinnytech/open-trade-gateway"
"xywanz/ft" -> "galois-advertising/thunder-trader"
"xywanz/ft" -> "zc8424/LazzyQuant"
"xywanz/ft" -> "physercoe/starquant"
"xywanz/ft" -> "near-examples/FT" ["e"=1]
"xywanz/ft" -> "nickhuangxinyu/hft"
"xywanz/ft" -> "7starsea/yijinjing-lite"
"zengbin93/czsc_web_ui" -> "xbfighting/ChZhShCh"
"wearerequired/git-mirror-action" -> "yanglbme/gitee-pages-action"
"wearerequired/git-mirror-action" -> "Yikun/hub-mirror-action"
"niXman/binapi" -> "pegasusTrader/PandoraTrader" ["e"=1]
"zhuzhenpeng/CTP-MarketDataMachine" -> "zhuwuyun/CTP-TRADER"
"zhuzhenpeng/CTP-MarketDataMachine" -> "showmsg/ctp_redis"
"zhuzhenpeng/CTP-MarketDataMachine" -> "zhuzhenpeng/CTP-TradeServer"
"sarikayamehmet/cnn-bilstm-attention" -> "samyeh0527/CNN_BiLSTM_withAttention"
"sarikayamehmet/cnn-bilstm-attention" -> "JeCase/LoadElectricity_Forecasting_CNN-BiLSTM-Attention"
"harvey1673/pyktrader" -> "haifengat/hfpy"
"harvey1673/pyktrader" -> "X0Leon/XQuant"
"harvey1673/pyktrader" -> "zaviichen/pheux"
"harvey1673/pyktrader" -> "wegamekinglc/VisualPortfolio" ["e"=1]
"harvey1673/pyktrader" -> "sunwangme/bftrader"
"mayiweb/goctp" -> "haifengat/goctp"
"mayiweb/goctp" -> "hankchan/goctp"
"mayiweb/goctp" -> "TradeXPlus/ctpgo"
"peterrosetu/10jqka-1" -> "kingking888/10jqka"
"bankrollhunter/tradingview-scripts" -> "bankrollhunter/lonecapital-chart"
"bankrollhunter/tradingview-scripts" -> "bankrollhunter/futu-scripts"
"bankrollhunter/tradingview-scripts" -> "bankrollhunter/market-breadth"
"bankrollhunter/tradingview-scripts" -> "bankrollhunter/thinkorswim-scripts"
"bankrollhunter/tradingview-scripts" -> "bankrollhunter/DreamTrader"
"newquant/chanlun" -> "artistliao/ZenPlot"
"ktrader-tech/jctp" -> "ktrader-tech/ktrader-broker-ctp"
"CBJerry993/TT_Fund" -> "Jerry1014/FundCrawler"
"CBJerry993/TT_Fund" -> "XDTD/fund_crawler"
"CBJerry993/TT_Fund" -> "weibycn/fund"
"CBJerry993/TT_Fund" -> "SunshowerC/fund-strategy"
"CBJerry993/TT_Fund" -> "ZxZ7/ZFundPredictor"
"CBJerry993/TT_Fund" -> "fundvis/fund-data"
"CBJerry993/TT_Fund" -> "AdvancingStone/stock-data-analysis-and-prediction"
"CBJerry993/TT_Fund" -> "lihao100106/Fund_Rank_based_on_Return_Rate_and_Sharpe_Ratio"
"CBJerry993/TT_Fund" -> "luricheng/fundSpider"
"haifengat/goctp" -> "mayiweb/goctp"
"bankrollhunter/lonecapital-chart" -> "bankrollhunter/tradingview-scripts"
"bankrollhunter/lonecapital-chart" -> "bankrollhunter/futu-scripts"
"bankrollhunter/lonecapital-chart" -> "bankrollhunter/market-breadth"
"bankrollhunter/lonecapital-chart" -> "bankrollhunter/thinkorswim-scripts"
"bankrollhunter/lonecapital-chart" -> "bankrollhunter/DreamTrader"
"XDTD/fund_crawler" -> "CBJerry993/TT_Fund"
"XDTD/fund_crawler" -> "linoodb/Python_FundCrawler"
"XDTD/fund_crawler" -> "luricheng/fundSpider"
"XDTD/fund_crawler" -> "Jerry1014/FundCrawler"
"moyuweiqing/Stock-prediction-algorithm-based-on-machine-learning" -> "moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning"
"yutiansut/QAStrategy" -> "yutiansut/QASTRATEGY101"
"yutiansut/QAStrategy" -> "yutiansut/QIFIAccount"
"yutiansut/QAStrategy" -> "yutiansut/QUANTAXIS_RealtimeCollector"
"yutiansut/QAStrategy" -> "Rgveda/GolemQ"
"yutiansut/QAStrategy" -> "yutiansut/QUANTAXIS"
"yutiansut/QAStrategy" -> "zengbin93/czsc_web_ui"
"yutiansut/QAStrategy" -> "yutiansut/QAFactor_Alpha101"
"yutiansut/QAStrategy" -> "yutiansut/qatrader-rs"
"1251240000/StockVisualization" -> "RonDen/-StockTrading"
"yutiansut/QASTRATEGY101" -> "yutiansut/QUANTAXIS_RealtimeCollector"
"yutiansut/QASTRATEGY101" -> "yutiansut/QAStrategy"
"yutiansut/QASTRATEGY101" -> "yutiansut/QIFIAccount"
"yutiansut/QASTRATEGY101" -> "QUANTAXIS/QIFI"
"Rockyzsu/StockPredict" -> "algosenses/Stock_Market_Sentiment_Analysis"
"Rockyzsu/StockPredict" -> "hogking/eastmoney_crawler"
"yajiedesign/CTPCSharp" -> "nonultimate/CTPSharp"
"zillionare/omega" -> "zillionare/omicron"
"dobit/tdxProxy" -> "ericyan/tdx"
"yutiansut/qatrader-rs" -> "yutiansut/qamarket-rs"
"yutiansut/qatrader-rs" -> "yutiansut/QATradeG"
"yutiansut/qatrader-rs" -> "yutiansut/qaaccount-rs"
"fly2sky2018/TDX_stock_dll" -> "windwild/daxintong-plug"
"yutiansut/qamazing_community" -> "yutiansut/qafactor-rs_release"
"yutiansut/QAFactor_Alpha101" -> "yutiansut/QATradeG"
"yutiansut/QAFactor_Alpha101" -> "yutiansut/qafactor-rs_release"
"yutiansut/QAFactor_Alpha101" -> "yutiansut/QIFIAccount"
"wsl1999/Annual_Report_Wordstats" -> "StuPeter/Company_Annual_Report_Analysis_TF"
"yutiansut/QIFIAccount" -> "QUANTAXIS/quantdata"
"ackerr/lab" -> "sjy/symbols4sketch"
"ackerr/lab" -> "LKI/LKI"
"saturn-lab/FBDQA-2020S" -> "saturn-lab/BDMI-2020S"
"saturn-lab/FBDQA-2020S" -> "plouto-quants/FBDQA-2020S"
"saturn-lab/BDMI-2020S" -> "saturn-lab/FBDQA-2020S"
"LKI/LKI" -> "LKI/dotvim"
"LKI/LKI" -> "jkzing/jkzing.com"
"LKI/LKI" -> "zaihui/hutils"
"LKI/LKI" -> "hui-z/h-qrcode"
"LKI/LKI" -> "jkzing/bridgit"
"LKI/LKI" -> "hui-z/ForgiveDB"
"LKI/LKI" -> "sjy/symbols4sketch"
"kingking888/10jqka" -> "peterrosetu/10jqka-1"
"Harpes/ChloeBot" -> "DingpingZhang/white-raven"
"yutiansut/qamarket-rs" -> "yutiansut/QUANTAXIS_RandomPrice"
"yutiansut/qamarket-rs" -> "yutiansut/qatrader-rs"
"QUANTAXIS/QIFI" -> "QUANTAXIS/quantaxis_run"
"synodriver/aioaria2" -> "DingpingZhang/white-raven"
"wkingnet/stock-analysis" -> "mootdx/mootdx"
"wkingnet/stock-analysis" -> "tianjingle/zMain"
"wkingnet/stock-analysis" -> "newhackerman/TDXPystock"
"wkingnet/stock-analysis" -> "cat-steel/stock_pick"
"wkingnet/stock-analysis" -> "zjp-CN/rustdx"
"wkingnet/stock-analysis" -> "sngyai/Sequoia"
"wkingnet/stock-analysis" -> "MicroEngine/DevilYuan"
"wkingnet/stock-analysis" -> "mpquant/MyTT"
"wkingnet/stock-analysis" -> "axiaoxin-com/investool"
"wkingnet/stock-analysis" -> "match5/thsauto"
"wkingnet/stock-analysis" -> "sunnyswag/StockRL"
"wkingnet/stock-analysis" -> "wukan1986/ta_cn" ["e"=1]
"wkingnet/stock-analysis" -> "yijixiuxin/chanlun-pro"
"wkingnet/stock-analysis" -> "zsrl/jqktrader"
"wkingnet/stock-analysis" -> "albert-feng/blade-fury"
"vnpy/vnpy" -> "bbfamily/abu"
"vnpy/vnpy" -> "waditu/tushare"
"vnpy/vnpy" -> "mementum/backtrader" ["e"=1]
"vnpy/vnpy" -> "shidenggui/easytrader"
"vnpy/vnpy" -> "yutiansut/QUANTAXIS"
"vnpy/vnpy" -> "quantopian/zipline" ["e"=1]
"vnpy/vnpy" -> "ricequant/rqalpha"
"vnpy/vnpy" -> "akfamily/akshare"
"vnpy/vnpy" -> "microsoft/qlib" ["e"=1]
"vnpy/vnpy" -> "Rockyzsu/stock"
"vnpy/vnpy" -> "UFund-Me/Qbot"
"vnpy/vnpy" -> "thuquant/awesome-quant"
"vnpy/vnpy" -> "TA-Lib/ta-lib-python" ["e"=1]
"vnpy/vnpy" -> "wondertrader/wondertrader"
"vnpy/vnpy" -> "kungfu-origin/kungfu"
"mpquant/Ashare" -> "mpquant/MyTT"
"mpquant/Ashare" -> "1nchaos/adata"
"mpquant/Ashare" -> "Micro-sheep/efinance"
"mpquant/Ashare" -> "tkfy920/qstock"
"mpquant/Ashare" -> "shidenggui/easyquotation"
"mpquant/Ashare" -> "uname-yang/pysnowball"
"mpquant/Ashare" -> "waditu/czsc"
"mpquant/Ashare" -> "sngyai/Sequoia"
"mpquant/Ashare" -> "mootdx/mootdx"
"mpquant/Ashare" -> "akfamily/akshare"
"mpquant/Ashare" -> "openctp/openctp"
"mpquant/Ashare" -> "shidenggui/easytrader"
"mpquant/Ashare" -> "shidenggui/easyquant"
"mpquant/Ashare" -> "zhangxiangliang/stock-api"
"mpquant/Ashare" -> "jrothschild33/learn_backtrader"
"TA-Lib/ta-lib-python" -> "ricequant/rqalpha" ["e"=1]
"zillionare/zillionare" -> "zillionare/omega"
"zillionare/zillionare" -> "chenwr727/stock-backtrader-web-app" ["e"=1]
"zillionare/zillionare" -> "zillionare/omicron"
"benitoro/stockholm" -> "garydai/stock" ["e"=1]
"benitoro/stockholm" -> "shidenggui/easyquant" ["e"=1]
"benitoro/stockholm" -> "decaywood/XueQiuSuperSpider" ["e"=1]
"benitoro/stockholm" -> "shidenggui/easyquotation" ["e"=1]
"axiaoxin-com/investool" -> "sngyai/Sequoia"
"axiaoxin-com/investool" -> "SunshowerC/fund-strategy"
"axiaoxin-com/investool" -> "refraction-ray/xalpha"
"axiaoxin-com/investool" -> "Micro-sheep/efinance"
"axiaoxin-com/investool" -> "1nchaos/adata"
"axiaoxin-com/investool" -> "xxjwxc/shares"
"axiaoxin-com/investool" -> "wkingnet/stock-analysis"
"axiaoxin-com/investool" -> "waditu/czsc"
"axiaoxin-com/investool" -> "mpquant/Ashare"
"axiaoxin-com/investool" -> "Vespa314/chan.py"
"axiaoxin-com/investool" -> "mpquant/MyTT"
"axiaoxin-com/investool" -> "Rockyzsu/stock"
"axiaoxin-com/investool" -> "tkfy920/qstock"
"axiaoxin-com/investool" -> "ailabx/ailabx"
"axiaoxin-com/investool" -> "shidenggui/easyquotation"
"Rgveda/996Quant" -> "wbbhcb/stock_market"
"Rgveda/996Quant" -> "yutiansut/QUANTAXIS"
"Rgveda/996Quant" -> "Rockyzsu/stock"
"Rgveda/996Quant" -> "Rgveda/GolemQ"
"Rgveda/996Quant" -> "Miya-Su/Quantitative-Trading" ["e"=1]
"Rgveda/996Quant" -> "hugo2046/QuantsPlaybook"
"Rgveda/996Quant" -> "waditu/czsc"
"Rgveda/996Quant" -> "SunshowerC/fund-strategy"
"Rgveda/996Quant" -> "zwdnet/MyQuant" ["e"=1]
"Rgveda/996Quant" -> "victor369basu/Real-time-stock-market-prediction" ["e"=1]
"Rgveda/996Quant" -> "jm199504/Financial-Knowledge-Graphs" ["e"=1]
"Rgveda/996Quant" -> "JINGEWU/Stock-Market-Trend-Analysis-Using-HMM-LSTM" ["e"=1]
"Rgveda/996Quant" -> "JoinQuant/jqdatasdk"
"Rgveda/996Quant" -> "ailabx/ailabx"
"jrothschild33/learn_backtrader" -> "Ckend/pythondict-quant" ["e"=1]
"jrothschild33/learn_backtrader" -> "QuantWorld2022/backtrader" ["e"=1]
"jrothschild33/learn_backtrader" -> "Skinok/backtrader-pyqt-ui" ["e"=1]
"jrothschild33/learn_backtrader" -> "hugo2046/QuantsPlaybook"
"jrothschild33/learn_backtrader" -> "mementum/backtrader" ["e"=1]
"jrothschild33/learn_backtrader" -> "HuaRongSAO/talib-document"
"jrothschild33/learn_backtrader" -> "tkfy920/qstock"
"jrothschild33/learn_backtrader" -> "wondertrader/wondertrader"
"jrothschild33/learn_backtrader" -> "mpquant/MyTT"
"jrothschild33/learn_backtrader" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"jrothschild33/learn_backtrader" -> "ailabx/ailabx"
"jrothschild33/learn_backtrader" -> "Micro-sheep/efinance"
"jrothschild33/learn_backtrader" -> "happydasch/btplotting" ["e"=1]
"jrothschild33/learn_backtrader" -> "FinHackCN/finhack" ["e"=1]
"jrothschild33/learn_backtrader" -> "charliedream1/ai_quant_trade"
"hemangjoshi37a/TrendMaster" -> "gangweix/Stoch-predict-with-Tranformer-LSTM" ["e"=1]
"FengQuanLi/ResnetGPT" -> "wangshub/RL-Stock" ["e"=1]
"mpquant/MyTT" -> "mpquant/Ashare"
"mpquant/MyTT" -> "mootdx/mootdx"
"mpquant/MyTT" -> "cedricporter/funcat"
"mpquant/MyTT" -> "Micro-sheep/efinance"
"mpquant/MyTT" -> "waditu/czsc"
"mpquant/MyTT" -> "yl-yue/yue-library" ["e"=1]
"mpquant/MyTT" -> "springmonster/RestfulTool-Retrofit" ["e"=1]
"mpquant/MyTT" -> "tkfy920/qstock"
"mpquant/MyTT" -> "admin360bug/bypass" ["e"=1]
"mpquant/MyTT" -> "HuaRongSAO/talib-document"
"mpquant/MyTT" -> "HeisenbergEmpire/studynote" ["e"=1]
"mpquant/MyTT" -> "shidenggui/easytrader"
"mpquant/MyTT" -> "Vespa314/chan.py"
"mpquant/MyTT" -> "sngyai/Sequoia"
"mpquant/MyTT" -> "WorldDbs/specs-actors" ["e"=1]
"dromara/northstar" -> "tigerfintech/tiger_quant"
"dromara/northstar" -> "sun0x00/redtorch"
"rrag/react-stockcharts" -> "jones2000/HQChart" ["e"=1]
"QuantBox/QuantBox.DataReceiver" -> "QuantBox/QuantBox.Data"
"QuantBox/QuantBox.DataReceiver" -> "QuantBox/QuantBox.DataSimulator"
"QuantBox/QuantBox.DataReceiver" -> "QuantBox/DemoDock"
"QuantBox/QuantBox.DataReceiver" -> "QuantBox/OpenQuant-CTP"
"gbeced/pyalgotrade" -> "ricequant/rqalpha" ["e"=1]
"gbeced/pyalgotrade" -> "Yam-cn/pyalgotrade-cn" ["e"=1]
"gbeced/pyalgotrade" -> "QuantFans/quantdigger" ["e"=1]
"FengQuanLi/WZCQ" -> "wangshub/RL-Stock" ["e"=1]
"valuesimplex/FinBERT" -> "MengLingchao/Chinese_financial_sentiment_dictionary" ["e"=1]
"fja05680/pinkfish" -> "Chandlercjy/OnePy" ["e"=1]
"pywinauto/pywinauto" -> "shidenggui/easytrader" ["e"=1]
"openctp/openctp" -> "ctpbee/ctpbee"
"openctp/openctp" -> "wondertrader/wondertrader"
"openctp/openctp" -> "pegasusTrader/PandoraTrader"
"openctp/openctp" -> "fasiondog/hikyuu"
"openctp/openctp" -> "kungfu-origin/kungfu"
"openctp/openctp" -> "wondertrader/wtpy"
"openctp/openctp" -> "shinnytech/tqsdk-python" ["e"=1]
"openctp/openctp" -> "nicai0609/Python-CTPAPI"
"openctp/openctp" -> "yutiansut/QUANTAXIS"
"openctp/openctp" -> "shidenggui/easyquotation"
"openctp/openctp" -> "nooperpudd/ctpwrapper"
"openctp/openctp" -> "shidenggui/easytrader"
"openctp/openctp" -> "waditu/czsc"
"openctp/openctp" -> "rainx/pytdx"
"openctp/openctp" -> "openctp/openctp-ctp-python"
"AkatsukiYamisora/stock-prediction-with-DL" -> "DingpingZhang/white-raven"
"sjev/trading-with-python" -> "harvey1673/pyktrader" ["e"=1]
"Micro-sheep/efinance" -> "mpquant/Ashare"
"Micro-sheep/efinance" -> "mpquant/MyTT"
"Micro-sheep/efinance" -> "shidenggui/easyquotation"
"Micro-sheep/efinance" -> "tkfy920/qstock"
"Micro-sheep/efinance" -> "1nchaos/adata"
"Micro-sheep/efinance" -> "uname-yang/pysnowball"
"Micro-sheep/efinance" -> "mootdx/mootdx"
"Micro-sheep/efinance" -> "waditu/czsc"
"Micro-sheep/efinance" -> "sngyai/Sequoia"
"Micro-sheep/efinance" -> "akfamily/akshare"
"Micro-sheep/efinance" -> "openctp/openctp"
"Micro-sheep/efinance" -> "zvtvz/zvt"
"Micro-sheep/efinance" -> "shidenggui/easytrader"
"Micro-sheep/efinance" -> "hugo2046/QuantsPlaybook"
"Micro-sheep/efinance" -> "Rockyzsu/stock"
"mootdx/mootdx" -> "rainx/pytdx"
"mootdx/mootdx" -> "mpquant/MyTT"
"mootdx/mootdx" -> "newhackerman/TDXPystock"
"mootdx/mootdx" -> "zsrl/pywencai"
"mootdx/mootdx" -> "tkfy920/qstock"
"mootdx/mootdx" -> "cedricporter/funcat"
"mootdx/mootdx" -> "zjp-CN/rustdx"
"mootdx/mootdx" -> "Micro-sheep/efinance"
"mootdx/mootdx" -> "match5/thsauto"
"mootdx/mootdx" -> "Vespa314/chan.py"
"mootdx/mootdx" -> "ai4trade/XtQuant"
"mootdx/mootdx" -> "nladuo/THSTrader"
"mootdx/mootdx" -> "yijixiuxin/chanlun-pro"
"mootdx/mootdx" -> "mpquant/Ashare"
"mootdx/mootdx" -> "wps1112/pytdx_backup"
"hustcer/star" -> "garydai/stock"
"hustcer/star" -> "tvvocold/free-for-dev-zh" ["e"=1]
"hustcer/star" -> "alexdobin/STAR" ["e"=1]
"hustcer/star" -> "ahmedosman/STAR" ["e"=1]
"hustcer/star" -> "zhanghan1990/zipline-chinese"
"hustcer/star" -> "Yam-cn/pyalgotrade-cn"
"hustcer/star" -> "benitoro/stockholm" ["e"=1]
"hustcer/star" -> "decaywood/XueQiuSuperSpider"
"hustcer/star" -> "cunjunyu/STAR" ["e"=1]
"hustcer/star" -> "QuantBox/XAPI2"
"hustcer/star" -> "shidenggui/easyquotation"
"hustcer/star" -> "shidenggui/easyquant"
"hustcer/star" -> "deepfence/PacketStreamer" ["e"=1]
"hustcer/star" -> "shidenggui/easytrader"
"hustcer/star" -> "Emptyset110/dHydra"
"jackluson/chinese-fund-crawler" -> "MrDujing/FundCombination"
"jackluson/chinese-fund-crawler" -> "jackluson/anchor_stock"
"jackluson/chinese-fund-crawler" -> "lusongno1/Fund-Selection"
"1zilc/fishing-funds" -> "x2rr/funds"
"1zilc/fishing-funds" -> "Jerry1014/FundCrawler"
"1zilc/fishing-funds" -> "axiaoxin-com/investool"
"1zilc/fishing-funds" -> "Hurdery/jfc"
"1zilc/fishing-funds" -> "SunshowerC/fund-strategy"
"1zilc/fishing-funds" -> "refraction-ray/xalpha"
"1zilc/fishing-funds" -> "LeekHub/leek-fund"
"1zilc/fishing-funds" -> "CBJerry993/TT_Fund"
"1zilc/fishing-funds" -> "itsuhane/SwitchKey" ["e"=1]
"1zilc/fishing-funds" -> "kouchao/TiantianFundApi"
"huobiapi/API_Docs" -> "fmzquant/strategies" ["e"=1]
"msincenselee/vnpy" -> "moonnejs/uiKLine"
"msincenselee/vnpy" -> "haifengat/hfpy"
"msincenselee/vnpy" -> "sphinx-quant/sphinx-quant"
"msincenselee/vnpy" -> "BillyZhangGuoping/MarketDataAnaylzerbyDataFrame"
"msincenselee/vnpy" -> "quantOS-org/JAQS"
"msincenselee/vnpy" -> "aiqtt/vnpy_future"
"msincenselee/vnpy" -> "vvipi/VNPY_account_updater"
"msincenselee/vnpy" -> "Chandlercjy/OnePy"
"msincenselee/vnpy" -> "DingTobest/JQdataServiceForVNPY"
"msincenselee/vnpy" -> "galois-advertising/thunder-trader"
"msincenselee/vnpy" -> "jiaminzou888/cppvnpy"
"msincenselee/vnpy" -> "vvipi/py3_demo_on_vnpy_ctp"
"msincenselee/vnpy" -> "lovelylain/pyctp"
"msincenselee/vnpy" -> "ricequant/rqalpha-mod-vnpy"
"msincenselee/vnpy" -> "moyuanz/DevilYuan"
"kymeii/ChanMaster" -> "EscapingChocolate/czsc"
"kymeii/ChanMaster" -> "wy676579037/simple-czsc"
"1514louluo/mystock" -> "volanslei/stocks"
"1514louluo/mystock" -> "zhoudayang/get_recommend_stock"
"Gary-Hertel/StockQuant" -> "MicroEngine/DevilYuan"
"Gary-Hertel/StockQuant" -> "Delta-F/DeltaTrader"
"Gary-Hertel/StockQuant" -> "LeekQuant/leekquant"
"Gary-Hertel/StockQuant" -> "bosspen1/stock"
"Gary-Hertel/StockQuant" -> "shidenggui/easyquant"
"Gary-Hertel/StockQuant" -> "newhackerman/TDXPystock"
"Gary-Hertel/StockQuant" -> "We-Hack-Studio/nuts" ["e"=1]
"Gary-Hertel/StockQuant" -> "GraySilver/wencai"
"Gary-Hertel/StockQuant" -> "linxinloningg/Stockquant"
"Gary-Hertel/StockQuant" -> "wxylssy/LSSY"
"Gary-Hertel/StockQuant" -> "chinobing/QuantInvest"
"Gary-Hertel/StockQuant" -> "nladuo/THSTrader"
"Gary-Hertel/StockQuant" -> "ak4stock/ths_auto_trade"
"cmiao7-illinois/stock_prediction-based-on-lstm-and-transformer" -> "gangweix/Stoch-predict-with-Tranformer-LSTM"
"cmiao7-illinois/stock_prediction-based-on-lstm-and-transformer" -> "Stepka/Stock-Prediction-usning-Transformer-NN"
"cmiao7-illinois/stock_prediction-based-on-lstm-and-transformer" -> "KittenCN/stock_prediction"
"billpwchan/futu_algo" -> "FutunnOpen/py-futu-api"
"billpwchan/futu_algo" -> "zhentaoo/futu-quant"
"billpwchan/futu_algo" -> "veighna-global/vnpy_futu" ["e"=1]
"billpwchan/futu_algo" -> "billpwchan/DeepTrust"
"billpwchan/futu_algo" -> "FutunnOpen/futu-api-doc"
"billpwchan/futu_algo" -> "josephchenhk/qtrader" ["e"=1]
"billpwchan/futu_algo" -> "02ai/US-Stock-Option-Autotrader"
"billpwchan/futu_algo" -> "Manudecara/Algo-Trading"
"billpwchan/futu_algo" -> "damonYuan/bt-futu-store"
"billpwchan/futu_algo" -> "quincylin1/futubot"
"LKI/lki.github.io" -> "LKI/LKI"
"LKI/lki.github.io" -> "hui-z/ForgiveDB"
"LKI/lki.github.io" -> "jkzing/jkzing.com"
"LKI/lki.github.io" -> "LKI/meican"
"LKI/lki.github.io" -> "LKI/dotvim"
"newhackerman/TDXPystock" -> "bensema/gotdx"
"newhackerman/TDXPystock" -> "mootdx/mootdx"
"newhackerman/TDXPystock" -> "yssource/abquant-data"
"newhackerman/TDXPystock" -> "zjp-CN/rustdx"
"unknown-marketwizards/tradingview-desktop" -> "bankrollhunter/tradingview-scripts"
"unknown-marketwizards/tradingview-desktop" -> "bankrollhunter/lonecapital-chart"
"unknown-marketwizards/tradingview-desktop" -> "f13end/tradingview-custom-indicators" ["e"=1]
"unknown-marketwizards/tradingview-desktop" -> "bankrollhunter/market-breadth"
"unknown-marketwizards/tradingview-desktop" -> "unknown-marketwizards/lantube"
"bankrollhunter/market-breadth" -> "bankrollhunter/lonecapital-chart"
"bankrollhunter/market-breadth" -> "bankrollhunter/tradingview-scripts"
"bankrollhunter/market-breadth" -> "bankrollhunter/DreamTrader"
"bankrollhunter/market-breadth" -> "bankrollhunter/thinkorswim-scripts"
"bankrollhunter/market-breadth" -> "bankrollhunter/futu-scripts"
"bankrollhunter/market-breadth" -> "jchang274/TrendWorld"
"bankrollhunter/market-breadth" -> "jamesdellinger/market_breadth"
"jkzing/jkzing.com" -> "jkzing/bridgit"
"jkzing/jkzing.com" -> "zaihui/hutils"
"jkzing/jkzing.com" -> "LKI/xixiang"
"jkzing/jkzing.com" -> "hui-z/h-qrcode"
"jkzing/jkzing.com" -> "LKI/LKI"
"jkzing/jkzing.com" -> "hui-z/ForgiveDB"
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "cmiao7-illinois/stock_prediction-based-on-lstm-and-transformer"
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "gangweix/CGI-Stereo" ["e"=1]
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "makaveli10/StockPrediction_Transformer"
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "hemangjoshi37a/TrendMaster" ["e"=1]
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "Stepka/Stock-Prediction-usning-Transformer-NN"
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "gangweix/Fast-ACVNet" ["e"=1]
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "gangweix/ACVNet" ["e"=1]
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "wqk666999/CNN-LSTM-Attention"
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "KittenCN/stock_prediction"
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "zshicode/Attention-CLX-stock-prediction"
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "gangweix/IGEV" ["e"=1]
"gangweix/Stoch-predict-with-Tranformer-LSTM" -> "gangweix/IGEV-plusplus" ["e"=1]
"tianjingle/zMain" -> "goldenhairs/backtrader_fund" ["e"=1]
"tianjingle/zMain" -> "newhackerman/TDXPystock"
"tianjingle/zMain" -> "FinHackCN/FinHack-Collecter"
"tianjingle/zMain" -> "chinobing/QuantInvest"
"tianjingle/zMain" -> "sqltxt/tdx"
"tianjingle/zMain" -> "mmdfish/StockIndicatorAnalyzer" ["e"=1]
"tianjingle/zMain" -> "albert-feng/blade-fury"
"louis-gg/tdxchanbi" -> "fly2sky2018/TDX_stock_dll"
"louis-gg/tdxchanbi" -> "skanda-huayan/tdxCL"
"skanda-huayan/tdxCL" -> "louis-gg/tdxchanbi"
"skanda-huayan/tdxCL" -> "tconsky/ChanlunX"
"skanda-huayan/tdxCL" -> "yssource/abquant-data"
"QuantBox/XAPI3" -> "QuantBox/QuantBoxXProvider"
"QuantBox/XAPI3" -> "QuantBox/QuantBox.DataReceiver"
"QuantBox/XAPI3" -> "shawn666liu/FtdcNet.CTP"
"QuantBox/XAPI3" -> "haifengat/hf_at"
"Rgveda/GolemQ" -> "yutiansut/qamazing_community"
"Rgveda/GolemQ" -> "yutiansut/QUANTAXIS_RealtimeCollector"
"Rgveda/GolemQ" -> "yssource/abquant-data"
"szmile2008/FTPlugin" -> "FutunnOpen/FTPluginServer"
"szmile2008/FTPlugin" -> "futuopen/tradeopen"
"Delta-F/DeltaTrader" -> "Gary-Hertel/StockQuant"
"Delta-F/DeltaTrader" -> "zwdnet/MyQuant" ["e"=1]
"Delta-F/DeltaTrader" -> "MicroEngine/DevilYuan"
"Delta-F/DeltaTrader" -> "nladuo/THSTrader"
"Delta-F/DeltaTrader" -> "QuantWorld2022/backtrader" ["e"=1]
"openctp/ViTrader" -> "dearleeyoung/LocalCTP"
"Laichj/box-spider" -> "HaiyangYu1999/StockCrawler"
"ishkong/go-cqhttp-docs" -> "DingpingZhang/white-raven"
"gaoguole/ctpgao" -> "gaoguole/whfunc"
"gaoguole/ctpgao" -> "nicai0609/Python-CTPAPI"
"sunnyswag/StockRL" -> "popbo/alphas" ["e"=1]
"sunnyswag/StockRL" -> "wangshub/RL-Stock"
"sunnyswag/StockRL" -> "ailabx/ailabx"
"sunnyswag/StockRL" -> "LeekQuant/leekquant"
"sunnyswag/StockRL" -> "gsyyysg/StockFormer" ["e"=1]
"skyformat99/ths_trade" -> "ak4stock/ths_auto_trade"
"skyformat99/ths_trade" -> "match5/thsauto"
"skyformat99/ths_trade" -> "zsrl/jqktrader"
"skyformat99/ths_trade" -> "nladuo/THSTrader"
"skyformat99/ths_trade" -> "LeekQuant/leekquant"
"skyformat99/ths_trade" -> "atomat/10jqka-API"
"skyformat99/ths_trade" -> "limitget/THS"
"skyformat99/ths_trade" -> "Tu5039/THSTrader"
"skyformat99/ths_trade" -> "newhackerman/TDXPystock"
"skyformat99/ths_trade" -> "ai4trade/XtQuant"
"skyformat99/ths_trade" -> "bosspen1/stock"
"skyformat99/ths_trade" -> "skyformat99/ChinaStock_TradeAPI"
"skyformat99/ths_trade" -> "MicroEngine/DevilYuan"
"skyformat99/ths_trade" -> "jadepeng/pytrader"
"skyformat99/ths_trade" -> "zsrl/pywencai"
"stockServ/chzhshch-108-plus" -> "fongzhizhi/jiao-ni-chao-gu-piao"
"stockServ/chzhshch-108-plus" -> "zhoudaqing/stock_paper"
"stockServ/chzhshch-108-plus" -> "fnsoxt/chzhshch"
"daniel-om-weber/riann" -> "Armanasq/End-to-End-Deep-Learning-Framework-for-Real-Time-Inertial-Attitude-Estimation-using-6DoF-IMU"
"dlaidig/broad" -> "agnieszkaszczesna/RepoIMU"
"dlaidig/broad" -> "daniel-om-weber/riann"
"agnieszkaszczesna/RepoIMU" -> "dlaidig/broad"
"unknown-marketwizards/lantube" -> "Air-999/AirVideo"
"EscapingChocolate/czsc" -> "wy676579037/simple-czsc"
"EscapingChocolate/czsc" -> "kymeii/ChanMaster"
"limitget/THS" -> "atomat/10jqka-API"
"limitget/THS" -> "misslng/10jqka"
"limitget/THS" -> "limitget/alphaquant"
"limitget/THS" -> "match5/thsauto"
"limitget/THS" -> "peterrosetu/10jqka-1"
"limitget/THS" -> "skyformat99/ths_trade"
"limitget/THS" -> "ak4stock/ths_auto_trade"
"QuantBox/QuantBox.DataSimulator" -> "QuantBox/QuantBox.Data"
"QuantBox/QuantBox.DataSimulator" -> "QuantBox/QuantBox.DataReceiver"
"ktrader-tech/ktrader-broker-ctp" -> "ktrader-tech/jctp"
"bankrollhunter/futu-scripts" -> "bankrollhunter/thinkorswim-scripts"
"bankrollhunter/futu-scripts" -> "bankrollhunter/lonecapital-chart"
"bankrollhunter/futu-scripts" -> "bankrollhunter/DreamTrader"
"bankrollhunter/futu-scripts" -> "bankrollhunter/tradingview-scripts"
"bankrollhunter/futu-scripts" -> "bankrollhunter/market-breadth"
"volanslei/stocks" -> "1514louluo/mystock"
"volanslei/stocks" -> "understar/Stock-Science"
"wvu-navLab/gnss-ins-zupt" -> "Fixit-Davide/imu_zupt"
"atomat/10jqka-API" -> "misslng/10jqka"
"atomat/10jqka-API" -> "limitget/THS"
"lookis/livetrader" -> "yssource/abquant-data"
"nzai/stockrecorder" -> "suetming/usa_stock_data_crawler"
"bankrollhunter/DreamTrader" -> "bankrollhunter/thinkorswim-scripts"
"bankrollhunter/DreamTrader" -> "bankrollhunter/futu-scripts"
"bankrollhunter/thinkorswim-scripts" -> "bankrollhunter/DreamTrader"
"bankrollhunter/thinkorswim-scripts" -> "bankrollhunter/futu-scripts"
"jiapengwei/czsc_gm" -> "wy676579037/simple-czsc"
"LKI/dotvim" -> "LKI/LKI"
"QuantBox/XAPI2" -> "QuantBox/QuantBox_XAPI"
"QuantBox/XAPI2" -> "zhuzhenpeng/CTP-TradeServer"
"QuantBox/XAPI2" -> "rainx/pytdx"
"QuantBox/XAPI2" -> "Yam-cn/pyalgotrade-cn"
"QuantBox/XAPI2" -> "QuantFans/quantdigger"
"QuantBox/XAPI2" -> "zc8424/LazzyQuant"
"QuantBox/XAPI2" -> "tashaxing/CTPtest"
"QuantBox/XAPI2" -> "Emptyset110/dHydra"
"QuantBox/XAPI2" -> "sinall/StrategyEase-Python-SDK"
"QuantBox/XAPI2" -> "haifengat/pyctp"
"QuantBox/XAPI2" -> "Raytone-D/puppet"
"QuantBox/XAPI2" -> "rainx/TdxTradeServer"
"QuantBox/XAPI2" -> "lovelylain/pyctp"
"QuantBox/XAPI2" -> "kungfu-origin/kungfu"
"QuantBox/XAPI2" -> "galois-advertising/thunder-trader"
"wilsonfreitas/awesome-quant" -> "thuquant/awesome-quant" ["e"=1]
"littlecodersh/ItChat" -> "vnpy/vnpy" ["e"=1]
"lballabio/QuantLib" -> "fasiondog/hikyuu" ["e"=1]
"shidenggui/easytrader" -> "shidenggui/easyquotation"
"shidenggui/easytrader" -> "shidenggui/easyquant"
"shidenggui/easytrader" -> "yutiansut/QUANTAXIS"
"shidenggui/easytrader" -> "waditu/tushare"
"shidenggui/easytrader" -> "vnpy/vnpy"
"shidenggui/easytrader" -> "ricequant/rqalpha"
"shidenggui/easytrader" -> "bbfamily/abu"
"shidenggui/easytrader" -> "akfamily/akshare"
"shidenggui/easytrader" -> "Rockyzsu/stock"
"shidenggui/easytrader" -> "QuantFans/quantdigger"
"shidenggui/easytrader" -> "rainx/pytdx"
"shidenggui/easytrader" -> "pythonstock/stock"
"shidenggui/easytrader" -> "thuquant/awesome-quant"
"shidenggui/easytrader" -> "sinall/StrategyEase-Python-SDK"
"shidenggui/easytrader" -> "shinnytech/tqsdk-python" ["e"=1]
"xxjwxc/shares" -> "mineralres/goshare" ["e"=1]
"xxjwxc/shares" -> "jadepeng/pytrader"
"xxjwxc/shares" -> "1nchaos/adata"
"xxjwxc/shares" -> "axiaoxin-com/investool"
"xxjwxc/shares" -> "zhangxiangliang/stock-api"
"xxjwxc/shares" -> "banbox/banbot"
"xxjwxc/shares" -> "ak4stock/ths_auto_trade"
"xxjwxc/shares" -> "gmsec/gmsec" ["e"=1]
"xxjwxc/shares" -> "wkingnet/stock-analysis"
"xxjwxc/shares" -> "mpquant/Ashare"
"paperswithbacktest/awesome-systematic-trading" -> "hugo2046/QuantsPlaybook" ["e"=1]
"Jack-Cherish/quantitative" -> "Rockyzsu/stock"
"Jack-Cherish/quantitative" -> "bbfamily/abu"
"Jack-Cherish/quantitative" -> "zhy0313/ea-python"
"Jack-Cherish/quantitative" -> "QuantFans/quantdigger"
"Jack-Cherish/quantitative" -> "hugo2046/QuantsPlaybook"
"Jack-Cherish/quantitative" -> "sngyai/Sequoia"
"Jack-Cherish/quantitative" -> "shidenggui/easyquant"
"Jack-Cherish/quantitative" -> "waditu/czsc"
"Jack-Cherish/quantitative" -> "vnpy/vnpy"
"Jack-Cherish/quantitative" -> "charliedream1/ai_quant_trade"
"Jack-Cherish/quantitative" -> "shidenggui/easytrader"
"Jack-Cherish/quantitative" -> "shinnytech/tqsdk-python" ["e"=1]
"Jack-Cherish/quantitative" -> "wondertrader/wondertrader"
"Jack-Cherish/quantitative" -> "yutiansut/QUANTAXIS"
"Jack-Cherish/quantitative" -> "MicroEngine/DevilYuan"
"shizhuolin/PyCTP" -> "lovelylain/pyctp"
"shizhuolin/PyCTP" -> "haifengat/pyctp"
"shizhuolin/PyCTP" -> "nicai0609/Python-CTPAPI"
"shizhuolin/PyCTP" -> "nooperpudd/ctpwrapper"
"shizhuolin/PyCTP" -> "tashaxing/CTPtest"
"shizhuolin/PyCTP" -> "zhuzhenpeng/CTP-TradeServer"
"shizhuolin/PyCTP" -> "hankchan/goctp"
"shizhuolin/PyCTP" -> "zc8424/LazzyQuant"
"shizhuolin/PyCTP" -> "haifengat/hfpy"
"shizhuolin/PyCTP" -> "KeyAlgo/AlgoPlus"
"shizhuolin/PyCTP" -> "QuantBox/XAPI2"
"shizhuolin/PyCTP" -> "galois-advertising/thunder-trader"
"shizhuolin/PyCTP" -> "vvipi/py3_demo_on_vnpy_ctp"
"shizhuolin/PyCTP" -> "molebot/web_ctp"
"shizhuolin/PyCTP" -> "ricequant/rqalpha-mod-ctp"
"shidenggui/easyquotation" -> "shidenggui/easytrader"
"shidenggui/easyquotation" -> "shidenggui/easyquant"
"shidenggui/easyquotation" -> "waditu/tushare"
"shidenggui/easyquotation" -> "yutiansut/QUANTAXIS"
"shidenggui/easyquotation" -> "ricequant/rqalpha"
"shidenggui/easyquotation" -> "rainx/pytdx"
"shidenggui/easyquotation" -> "akfamily/akshare"
"shidenggui/easyquotation" -> "QuantFans/quantdigger"
"shidenggui/easyquotation" -> "Rockyzsu/stock"
"shidenggui/easyquotation" -> "sinall/StrategyEase-Python-SDK"
"shidenggui/easyquotation" -> "Micro-sheep/efinance"
"shidenggui/easyquotation" -> "pythonstock/stock"
"shidenggui/easyquotation" -> "bbfamily/abu"
"shidenggui/easyquotation" -> "zvtvz/zvt"
"shidenggui/easyquotation" -> "thuquant/awesome-quant"
"QuantWorld2022/backtrader" -> "jrothschild33/learn_backtrader" ["e"=1]
"QuantWorld2022/backtrader" -> "tkfy920/qstock" ["e"=1]
"QuantWorld2022/backtrader" -> "hugo2046/QuantsPlaybook" ["e"=1]
"QuantWorld2022/backtrader" -> "mootdx/mootdx" ["e"=1]
"tvvocold/free-for-dev-zh" -> "hustcer/star" ["e"=1]
"myquant/strategy" -> "QuantFans/quantdigger"
"myquant/strategy" -> "sinall/StrategyEase-Python-SDK"
"myquant/strategy" -> "thuquant/awesome-quant"
"myquant/strategy" -> "Yam-cn/pyalgotrade-cn"
"myquant/strategy" -> "cedricporter/funcat"
"myquant/strategy" -> "fmzquant/strategies"
"myquant/strategy" -> "QuantBox/XAPI2"
"myquant/strategy" -> "quantOS-org/JAQS"
"myquant/strategy" -> "ricequant/rqalpha"
"myquant/strategy" -> "moyuanz/DevilYuan"
"myquant/strategy" -> "rainx/inside-zipline"
"myquant/strategy" -> "foolcage/fooltrader"
"myquant/strategy" -> "Raytone-D/puppet"
"myquant/strategy" -> "Emptyset110/dHydra"
"myquant/strategy" -> "harvey1673/pyktrader"
"yijixiuxin/chanlun-pro" -> "Vespa314/chan.py"
"yijixiuxin/chanlun-pro" -> "ibaihuo/chanvis"
"yijixiuxin/chanlun-pro" -> "mywildquant/ChanlunX"
"yijixiuxin/chanlun-pro" -> "waditu/czsc"
"yijixiuxin/chanlun-pro" -> "tomcat123a/-chanlun"
"yijixiuxin/chanlun-pro" -> "neil-pan-s/one-quant-doc" ["e"=1]
"yijixiuxin/chanlun-pro" -> "chan2zen/rust-chan"
"yijixiuxin/chanlun-pro" -> "dogfun/chanlun"
"yijixiuxin/chanlun-pro" -> "mootdx/mootdx"
"yijixiuxin/chanlun-pro" -> "neuks/Indicator"
"yijixiuxin/chanlun-pro" -> "gavfu/chzhshch-blog"
"yijixiuxin/chanlun-pro" -> "newhackerman/TDXPystock"
"yijixiuxin/chanlun-pro" -> "thought7878/chanlun_notes"
"yijixiuxin/chanlun-pro" -> "newquant/chanlun"
"yijixiuxin/chanlun-pro" -> "ai4trade/XtQuant"
"wangzhe3224/awesome-systematic-trading" -> "wondertrader/wondertrader" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "thuquant/awesome-quant" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "hugo2046/QuantsPlaybook" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "zvtvz/zvt" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "fasiondog/hikyuu" ["e"=1]
"wangzhe3224/awesome-systematic-trading" -> "jrothschild33/learn_backtrader" ["e"=1]
"decaywood/XueQiuSuperSpider" -> "shidenggui/easyquant"
"decaywood/XueQiuSuperSpider" -> "benitoro/stockholm" ["e"=1]
"decaywood/XueQiuSuperSpider" -> "kingschan1204/istock"
"decaywood/XueQiuSuperSpider" -> "shidenggui/easyquotation"
"decaywood/XueQiuSuperSpider" -> "shidenggui/easytrader"
"decaywood/XueQiuSuperSpider" -> "garydai/stock"
"decaywood/XueQiuSuperSpider" -> "uname-yang/pysnowball"
"decaywood/XueQiuSuperSpider" -> "pythonstock/stock"
"decaywood/XueQiuSuperSpider" -> "bosspen1/stock"
"decaywood/XueQiuSuperSpider" -> "Rockyzsu/stock"
"decaywood/XueQiuSuperSpider" -> "bbfamily/abu"
"decaywood/XueQiuSuperSpider" -> "MicroEngine/DevilYuan"
"decaywood/XueQiuSuperSpider" -> "waditu/tushare"
"decaywood/XueQiuSuperSpider" -> "QuantFans/quantdigger"
"decaywood/XueQiuSuperSpider" -> "ricequant/rqalpha"
"drlgistics/Wt4ElegantRL" -> "showmsg/xman"
"drlgistics/Wt4ElegantRL" -> "drlgistics/Quantitative-analysis"
"Vespa314/chan.py" -> "yijixiuxin/chanlun-pro"
"Vespa314/chan.py" -> "waditu/czsc"
"Vespa314/chan.py" -> "ibaihuo/chanvis"
"Vespa314/chan.py" -> "tomcat123a/-chanlun"
"Vespa314/chan.py" -> "mootdx/mootdx"
"Vespa314/chan.py" -> "mpquant/MyTT"
"Vespa314/chan.py" -> "neil-pan-s/one-quant-doc" ["e"=1]
"Vespa314/chan.py" -> "tkfy920/qstock"
"Vespa314/chan.py" -> "dogfun/chanlun"
"Vespa314/chan.py" -> "mywildquant/ChanlunX"
"Vespa314/chan.py" -> "hugo2046/QuantsPlaybook"
"Vespa314/chan.py" -> "sngyai/Sequoia"
"Vespa314/chan.py" -> "chan2zen/rust-chan"
"Vespa314/chan.py" -> "Micro-sheep/efinance"
"Vespa314/chan.py" -> "neuks/Indicator"
"shidenggui/easyquant" -> "shidenggui/easyquotation"
"shidenggui/easyquant" -> "shidenggui/easytrader"
"shidenggui/easyquant" -> "QuantFans/quantdigger"
"shidenggui/easyquant" -> "sinall/StrategyEase-Python-SDK"
"shidenggui/easyquant" -> "Rockyzsu/stock"
"shidenggui/easyquant" -> "yutiansut/QUANTAXIS"
"shidenggui/easyquant" -> "bbfamily/abu"
"shidenggui/easyquant" -> "benitoro/stockholm" ["e"=1]
"shidenggui/easyquant" -> "ricequant/rqalpha"
"shidenggui/easyquant" -> "decaywood/XueQiuSuperSpider"
"shidenggui/easyquant" -> "moyuanz/DevilYuan"
"shidenggui/easyquant" -> "Yam-cn/pyalgotrade-cn"
"shidenggui/easyquant" -> "waditu/tushare"
"shidenggui/easyquant" -> "rainx/pytdx"
"shidenggui/easyquant" -> "Emptyset110/dHydra"
"fongzhizhi/jiao-ni-chao-gu-piao" -> "stockServ/chzhshch-108-plus"
"CuriousLei/chanlun" -> "wy676579037/simple-czsc"
"CuriousLei/chanlun" -> "dogfun/chanlun"
"ibaihuo/chanvis" -> "yijixiuxin/chanlun-pro"
"ibaihuo/chanvis" -> "Vespa314/chan.py"
"ibaihuo/chanvis" -> "mywildquant/ChanlunX"
"ibaihuo/chanvis" -> "tomcat123a/-chanlun"
"ibaihuo/chanvis" -> "dogfun/chanlun"
"ibaihuo/chanvis" -> "neuks/Indicator"
"ibaihuo/chanvis" -> "neil-pan-s/one-quant-doc" ["e"=1]
"ibaihuo/chanvis" -> "simple-trade/simple-czsc"
"ibaihuo/chanvis" -> "thought7878/chanlun_notes"
"ibaihuo/chanvis" -> "waditu/czsc"
"ibaihuo/chanvis" -> "mootdx/mootdx"
"ibaihuo/chanvis" -> "newquant/chanlun"
"ibaihuo/chanvis" -> "artistliao/ZenTheory"
"ibaihuo/chanvis" -> "xiaopc/a-udf"
"ibaihuo/chanvis" -> "louis-gg/tdxchanbi"
"Skinok/backtrader-pyqt-ui" -> "jrothschild33/learn_backtrader" ["e"=1]
"superquanter/quanter" -> "quant4s/quant4s"
"superquanter/quanter" -> "flycandy/sinalv2"
"superquanter/quanter" -> "ijibu/gettrackersdata"
"zshicode/Attention-CLX-stock-prediction" -> "PatientEz/CNN-BiLSTM-Attention-Time-Series-Prediction_Keras" ["e"=1]
"zshicode/Attention-CLX-stock-prediction" -> "wqk666999/CNN-LSTM-Attention"
"zshicode/Attention-CLX-stock-prediction" -> "Hupperich-Manuel/LSTM-XGBoost-Hybrid-Forecasting"
"zshicode/Attention-CLX-stock-prediction" -> "matheusbfernandes/stock-market-prediction" ["e"=1]
"zshicode/Attention-CLX-stock-prediction" -> "koi-boy/CNN-LSTM-Attention"
"zshicode/Attention-CLX-stock-prediction" -> "gangweix/Stoch-predict-with-Tranformer-LSTM"
"zshicode/Attention-CLX-stock-prediction" -> "hungchun-lin/Stock-price-prediction-using-GAN" ["e"=1]
"zshicode/Attention-CLX-stock-prediction" -> "sarikayamehmet/cnn-bilstm-attention"
"zshicode/Attention-CLX-stock-prediction" -> "zshicode/MambaStock"
"zshicode/Attention-CLX-stock-prediction" -> "MaybeWilliam/stock-price-prediction-BPNN-LSTM"
"flycandy/sinalv2" -> "Emptyset110/dHydra"
"flycandy/sinalv2" -> "Emptyset110/SinaL2"
"flycandy/sinalv2" -> "qiujoe/StockTrader"
"flycandy/sinalv2" -> "wangdkchina/pyautotrade_tdx"
"flycandy/sinalv2" -> "superquanter/quanter"
"flycandy/sinalv2" -> "shidenggui/easyhistory"
"flycandy/sinalv2" -> "Raytone-D/puppet"
"Hupperich-Manuel/LSTM-XGBoost-Hybrid-Forecasting" -> "zshicode/Attention-CLX-stock-prediction"
"artistliao/ZenTheory" -> "artistliao/ZenPlot"
"zjp-CN/rustdx" -> "suzhenyu22/alphaquant"
"zjp-CN/rustdx" -> "kvarenzn/simple-pytdx"
"zjp-CN/rustdx" -> "newhackerman/TDXPystock"
"zjp-CN/rustdx" -> "harryhan1989/pytdxext"
"zjp-CN/rustdx" -> "corefan/TdxTradeServer"
"kvarenzn/simple-pytdx" -> "harryhan1989/pytdxext"
"dlaidig/vqf" -> "DusKing1/vqf-c"
"dlaidig/vqf" -> "dlaidig/broad"
"dlaidig/vqf" -> "dlaidig/qmt"
"dlaidig/vqf" -> "Fixit-Davide/imu_zupt"
"francinexue/xuefu" -> "Yam-cn/pyalgotrade-cn"
"francinexue/xuefu" -> "X0Leon/XQuant"
"francinexue/xuefu" -> "Chandlercjy/OnePy"
"francinexue/xuefu" -> "Emptyset110/dHydra"
"francinexue/xuefu" -> "moonnejs/uiKLine"
"francinexue/xuefu" -> "Yam-cn/potato"
"francinexue/xuefu" -> "jingzhaoyang/pyalgotrade"
"francinexue/xuefu" -> "rainx/inside-zipline"
"francinexue/xuefu" -> "zc8424/LazzyQuant"
"francinexue/xuefu" -> "haifengat/pyctp"
"francinexue/xuefu" -> "sinall/StrategyEase-Python-SDK"
"francinexue/xuefu" -> "zhanghan1990/zipline-chinese"
"francinexue/xuefu" -> "QuantBox/XAPI2"
"francinexue/xuefu" -> "haifengat/hfpy"
"francinexue/xuefu" -> "jiaminzou888/OpenSource_BSD"
"jadepeng/pytrader" -> "ak4stock/ths_auto_trade"
"jadepeng/pytrader" -> "bosspen1/stock"
"jadepeng/pytrader" -> "match5/thsauto"
"jadepeng/pytrader" -> "riiy/emtl"
"jadepeng/pytrader" -> "lemonche/capitalfarmer"
"jadepeng/pytrader" -> "skyformat99/ths_trade"
"jadepeng/pytrader" -> "FinHackCN/finhack" ["e"=1]
"jadepeng/pytrader" -> "nessessary/autoxd"
"jadepeng/pytrader" -> "tianjingle/zMain"
"jadepeng/pytrader" -> "namoshizun/TradePy"
"jadepeng/pytrader" -> "nladuo/THSTrader"
"jadepeng/pytrader" -> "MistraR/plank"
"jadepeng/pytrader" -> "xxjwxc/shares"
"jadepeng/pytrader" -> "zsrl/jqktrader"
"jadepeng/pytrader" -> "1nchaos/adata"
"simple-trade/simple-czsc" -> "simple-trade/simple-czsc-demo"
"simple-trade/simple-czsc" -> "artistliao/ZenPlot"
"simple-trade/simple-czsc" -> "EscapingChocolate/czsc"
"simple-trade/simple-czsc" -> "wy676579037/simple-czsc"
"qiujoe/StockTrader" -> "flycandy/sinalv2"
"qiujoe/StockTrader" -> "drongh/PyAutoTrading"
"qiujoe/StockTrader" -> "superquanter/quanter"
"qiujoe/StockTrader" -> "changye/AutoTrade"
"toby20130333/QStockCharts" -> "cetcjinjian/QT_StockFigure"
"ak4stock/ths_auto_trade" -> "skyformat99/ths_trade"
"ak4stock/ths_auto_trade" -> "LeekQuant/leekquant"
"ak4stock/ths_auto_trade" -> "zsrl/jqktrader"
"ak4stock/ths_auto_trade" -> "match5/thsauto"
"ak4stock/ths_auto_trade" -> "wukan1986/thsauto"
"ak4stock/ths_auto_trade" -> "atomat/10jqka-API"
"ak4stock/ths_auto_trade" -> "limitget/THS"
"ak4stock/ths_auto_trade" -> "nladuo/THSTrader"
"ak4stock/ths_auto_trade" -> "ak4stock/ths_tdx_stock_xueqiu_guoren"
"ak4stock/ths_auto_trade" -> "panghu1103/trade-api"
"ak4stock/ths_auto_trade" -> "jadepeng/pytrader"
"dogfun/chanlun" -> "CuriousLei/chanlun"
"dogfun/chanlun" -> "artistliao/ZenPlot"
"dogfun/chanlun" -> "simple-trade/simple-czsc"
"dogfun/chanlun" -> "newquant/chanlun"
"dogfun/chanlun" -> "mywildquant/ChanlunX"
"dogfun/chanlun" -> "chan2zen/rust-chan"
"dogfun/chanlun" -> "EscapingChocolate/czsc"
"artistliao/ZenPlot" -> "EscapingChocolate/czsc"
"artistliao/ZenPlot" -> "artistliao/ZenTheory"
"artistliao/ZenPlot" -> "simple-trade/simple-czsc-demo"
"simple-trade/simple-czsc-demo" -> "simple-trade/simple-czsc"
"simple-trade/simple-czsc-demo" -> "wy676579037/simple-czsc"
"wy676579037/simple-czsc" -> "EscapingChocolate/czsc"
"Lucassssss/Stock" -> "ijibu/gettrackersdata"
"wangdkchina/pyautotrade_tdx" -> "mineralres/pytdxtrader"
"wangdkchina/pyautotrade_tdx" -> "ynzheng/pyautotrade_tdx"
"wangdkchina/pyautotrade_tdx" -> "wuyanfei/tdx_fetchKlineData"
"wangdkchina/pyautotrade_tdx" -> "280185386/tdxhq"
"wangdkchina/pyautotrade_tdx" -> "flysoso/py_tdx"
"wangdkchina/pyautotrade_tdx" -> "ericyan/tdx"
"wangdkchina/pyautotrade_tdx" -> "JaysonAlbert/tdx"
"nzai/regimentation" -> "ijibu/gettrackersdata"
"flysoso/py_tdx" -> "zhuhuibeishadiao/Tdx"
"flysoso/py_tdx" -> "wuyanfei/tdx_fetchKlineData"
"flysoso/py_tdx" -> "bopo/tdx2csv"
"flysoso/py_tdx" -> "280185386/tdxhq"
"ynzheng/pyautotrade_tdx" -> "wangdkchina/pyautotrade_tdx"
"ynzheng/pyautotrade_tdx" -> "theRockLiu/smart_trade_platform"
"ynzheng/pyautotrade_tdx" -> "tusonggao/Stock_Automation"
"albert-feng/blade-fury" -> "shidenggui/easyutils"
"albert-feng/blade-fury" -> "lfh2016/chinese-stock-Financial-Index"
"albert-feng/blade-fury" -> "shidenggui/easyhistory"
"albert-feng/blade-fury" -> "cat-steel/stock_pick"
"albert-feng/blade-fury" -> "tianjingle/zMain"
"dlaidig/qmt" -> "dongjiashun/qmt_python"
"nntaoli-project/goex" -> "fmzquant/strategies" ["e"=1]
"kf-liu/The-Art-of-Linear-Algebra-zh-CN" -> "BigBrotherTrade/trader" ["e"=1]
"fmzquant/strategies" -> "ricequant/rqalpha"
"fmzquant/strategies" -> "thuquant/awesome-quant"
"fmzquant/strategies" -> "yutiansut/QUANTAXIS"
"fmzquant/strategies" -> "kungfu-origin/kungfu"
"fmzquant/strategies" -> "shidenggui/easytrader"
"fmzquant/strategies" -> "vnpy/vnpy"
"fmzquant/strategies" -> "bbfamily/abu"
"fmzquant/strategies" -> "wondertrader/wondertrader"
"fmzquant/strategies" -> "richox/okcoin-leeks-reaper" ["e"=1]
"fmzquant/strategies" -> "mementum/backtrader" ["e"=1]
"fmzquant/strategies" -> "QuantFans/quantdigger"
"fmzquant/strategies" -> "hugo2046/QuantsPlaybook"
"fmzquant/strategies" -> "fasiondog/hikyuu"
"fmzquant/strategies" -> "gbeced/pyalgotrade" ["e"=1]
"fmzquant/strategies" -> "myquant/strategy"
"thuquant/awesome-quant" -> "yutiansut/QUANTAXIS"
"thuquant/awesome-quant" -> "ricequant/rqalpha"
"thuquant/awesome-quant" -> "hugo2046/QuantsPlaybook"
"thuquant/awesome-quant" -> "zvtvz/zvt"
"thuquant/awesome-quant" -> "fasiondog/hikyuu"
"thuquant/awesome-quant" -> "Rockyzsu/stock"
"thuquant/awesome-quant" -> "wilsonfreitas/awesome-quant" ["e"=1]
"thuquant/awesome-quant" -> "shidenggui/easytrader"
"thuquant/awesome-quant" -> "kungfu-origin/kungfu"
"thuquant/awesome-quant" -> "vnpy/vnpy"
"thuquant/awesome-quant" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"thuquant/awesome-quant" -> "fmzquant/strategies"
"thuquant/awesome-quant" -> "bbfamily/abu"
"thuquant/awesome-quant" -> "akfamily/akshare"
"thuquant/awesome-quant" -> "QuantFans/quantdigger"
"fasiondog/hikyuu" -> "wondertrader/wondertrader"
"fasiondog/hikyuu" -> "pegasusTrader/PandoraTrader"
"fasiondog/hikyuu" -> "kungfu-origin/kungfu"
"fasiondog/hikyuu" -> "yutiansut/QUANTAXIS"
"fasiondog/hikyuu" -> "zvtvz/zvt"
"fasiondog/hikyuu" -> "thuquant/awesome-quant"
"fasiondog/hikyuu" -> "QuantFans/quantdigger"
"fasiondog/hikyuu" -> "ricequant/rqalpha"
"fasiondog/hikyuu" -> "physercoe/starquant"
"fasiondog/hikyuu" -> "openctp/openctp"
"fasiondog/hikyuu" -> "ctpbee/ctpbee"
"fasiondog/hikyuu" -> "sinall/StrategyEase-Python-SDK"
"fasiondog/hikyuu" -> "rainx/pytdx"
"fasiondog/hikyuu" -> "shidenggui/easytrader"
"fasiondog/hikyuu" -> "Rockyzsu/stock"
"Emptyset110/dHydra" -> "flycandy/sinalv2"
"Emptyset110/dHydra" -> "Yam-cn/pyalgotrade-cn"
"Emptyset110/dHydra" -> "Emptyset110/SinaL2"
"Emptyset110/dHydra" -> "rainx/pytdx"
"Emptyset110/dHydra" -> "QuantBox/XAPI2"
"Emptyset110/dHydra" -> "francinexue/xuefu"
"Emptyset110/dHydra" -> "lovelylain/pyctp"
"Emptyset110/dHydra" -> "QuantFans/quantdigger"
"Emptyset110/dHydra" -> "changye/AutoTrade"
"Emptyset110/dHydra" -> "sinall/StrategyEase-Python-SDK"
"Emptyset110/dHydra" -> "shidenggui/easyquant"
"Emptyset110/dHydra" -> "Raytone-D/puppet"
"Emptyset110/dHydra" -> "cedricporter/funcat"
"Emptyset110/dHydra" -> "wangdkchina/pyautotrade_tdx"
"Emptyset110/dHydra" -> "superquanter/quanter"
"edtechre/pybroker" -> "zvtvz/zvt" ["e"=1]
"UFund-Me/Qbot" -> "BigBrotherTrade/trader"
"UFund-Me/Qbot" -> "wondertrader/wondertrader"
"UFund-Me/Qbot" -> "vnpy/vnpy"
"UFund-Me/Qbot" -> "bbfamily/abu"
"UFund-Me/Qbot" -> "microsoft/qlib" ["e"=1]
"UFund-Me/Qbot" -> "akfamily/akshare"
"UFund-Me/Qbot" -> "shidenggui/easytrader"
"UFund-Me/Qbot" -> "paperswithbacktest/awesome-systematic-trading" ["e"=1]
"UFund-Me/Qbot" -> "mementum/backtrader" ["e"=1]
"UFund-Me/Qbot" -> "yutiansut/QUANTAXIS"
"UFund-Me/Qbot" -> "myhhub/stock" ["e"=1]
"UFund-Me/Qbot" -> "Rockyzsu/stock"
"UFund-Me/Qbot" -> "hugo2046/QuantsPlaybook"
"UFund-Me/Qbot" -> "charliedream1/ai_quant_trade"
"UFund-Me/Qbot" -> "waditu/czsc"
"Rockyzsu/stock" -> "pythonstock/stock"
"Rockyzsu/stock" -> "bbfamily/abu"
"Rockyzsu/stock" -> "yutiansut/QUANTAXIS"
"Rockyzsu/stock" -> "shidenggui/easytrader"
"Rockyzsu/stock" -> "shidenggui/easyquant"
"Rockyzsu/stock" -> "vnpy/vnpy"
"Rockyzsu/stock" -> "thuquant/awesome-quant"
"Rockyzsu/stock" -> "shidenggui/easyquotation"
"Rockyzsu/stock" -> "sngyai/Sequoia"
"Rockyzsu/stock" -> "akfamily/akshare"
"Rockyzsu/stock" -> "waditu/czsc"
"Rockyzsu/stock" -> "zvtvz/zvt"
"Rockyzsu/stock" -> "shinnytech/tqsdk-python" ["e"=1]
"Rockyzsu/stock" -> "QuantFans/quantdigger"
"Rockyzsu/stock" -> "Jack-Cherish/quantitative"
"yutiansut/QUANTAXIS" -> "shidenggui/easytrader"
"yutiansut/QUANTAXIS" -> "ricequant/rqalpha"
"yutiansut/QUANTAXIS" -> "bbfamily/abu"
"yutiansut/QUANTAXIS" -> "vnpy/vnpy"
"yutiansut/QUANTAXIS" -> "thuquant/awesome-quant"
"yutiansut/QUANTAXIS" -> "zvtvz/zvt"
"yutiansut/QUANTAXIS" -> "shidenggui/easyquotation"
"yutiansut/QUANTAXIS" -> "Rockyzsu/stock"
"yutiansut/QUANTAXIS" -> "fasiondog/hikyuu"
"yutiansut/QUANTAXIS" -> "kungfu-origin/kungfu"
"yutiansut/QUANTAXIS" -> "waditu/tushare"
"yutiansut/QUANTAXIS" -> "akfamily/akshare"
"yutiansut/QUANTAXIS" -> "mementum/backtrader" ["e"=1]
"yutiansut/QUANTAXIS" -> "shinnytech/tqsdk-python" ["e"=1]
"charliedream1/ai_quant_trade" -> "hugo2046/QuantsPlaybook"
"charliedream1/ai_quant_trade" -> "charliedream1/ai_wiki"
"charliedream1/ai_quant_trade" -> "1nchaos/adata"
"charliedream1/ai_quant_trade" -> "tkfy920/qstock"
"charliedream1/ai_quant_trade" -> "wangshub/RL-Stock"
"charliedream1/ai_quant_trade" -> "UFund-Me/Qbot"
"charliedream1/ai_quant_trade" -> "waditu/czsc"
"charliedream1/ai_quant_trade" -> "Rockyzsu/stock"
"charliedream1/ai_quant_trade" -> "Micro-sheep/efinance"
"charliedream1/ai_quant_trade" -> "sngyai/Sequoia"
"charliedream1/ai_quant_trade" -> "jrothschild33/learn_backtrader"
"charliedream1/ai_quant_trade" -> "FinHackCN/finhack" ["e"=1]
"charliedream1/ai_quant_trade" -> "thuquant/awesome-quant"
"charliedream1/ai_quant_trade" -> "mpquant/MyTT"
"charliedream1/ai_quant_trade" -> "TradeMaster-NTU/TradeMaster" ["e"=1]
"Yam-cn/pyalgotrade-cn" -> "QuantFans/quantdigger"
"Yam-cn/pyalgotrade-cn" -> "francinexue/xuefu"
"Yam-cn/pyalgotrade-cn" -> "gbeced/pyalgotrade" ["e"=1]
"Yam-cn/pyalgotrade-cn" -> "QuantBox/XAPI2"
"Yam-cn/pyalgotrade-cn" -> "Emptyset110/dHydra"
"Yam-cn/pyalgotrade-cn" -> "ricequant/rqalpha"
"Yam-cn/pyalgotrade-cn" -> "sinall/StrategyEase-Python-SDK"
"Yam-cn/pyalgotrade-cn" -> "shidenggui/easyquant"
"Yam-cn/pyalgotrade-cn" -> "zhanghan1990/zipline-chinese"
"Yam-cn/pyalgotrade-cn" -> "ematvey/pybacktest" ["e"=1]
"Yam-cn/pyalgotrade-cn" -> "rainx/pytdx"
"Yam-cn/pyalgotrade-cn" -> "Seedarchangel/TuChart"
"Yam-cn/pyalgotrade-cn" -> "harvey1673/pyktrader"
"Yam-cn/pyalgotrade-cn" -> "cedricporter/funcat"
"Yam-cn/pyalgotrade-cn" -> "quantOS-org/JAQS"
"TradeMaster-NTU/TradeMaster" -> "hugo2046/QuantsPlaybook" ["e"=1]
"TradeMaster-NTU/TradeMaster" -> "wondertrader/wondertrader" ["e"=1]
"RL-MLDM/alphagen" -> "hugo2046/QuantsPlaybook" ["e"=1]
"QuantFabric/QuantFabric" -> "dearleeyoung/LocalCTP" ["e"=1]
"tkfy920/qstock" -> "Micro-sheep/efinance"
"tkfy920/qstock" -> "mpquant/Ashare"
"tkfy920/qstock" -> "mootdx/mootdx"
"tkfy920/qstock" -> "mpquant/MyTT"
"tkfy920/qstock" -> "zsrl/pywencai"
"tkfy920/qstock" -> "Vespa314/chan.py"
"tkfy920/qstock" -> "hugo2046/QuantsPlaybook"
"tkfy920/qstock" -> "jrothschild33/learn_backtrader"
"tkfy920/qstock" -> "tkfy920/PythonQuantitativeFinance" ["e"=1]
"tkfy920/qstock" -> "FinHackCN/finhack" ["e"=1]
"tkfy920/qstock" -> "1nchaos/adata"
"tkfy920/qstock" -> "charliedream1/ai_quant_trade"
"tkfy920/qstock" -> "waditu/czsc"
"tkfy920/qstock" -> "shidenggui/easyquotation"
"tkfy920/qstock" -> "sngyai/Sequoia"
"neuks/Indicator" -> "mywildquant/ChanlunX"
"neuks/Indicator" -> "chan2zen/rust-chan"
"neuks/Indicator" -> "louis-gg/tdxchanbi"
"neuks/Indicator" -> "sunshinelover/chanlun"
"neuks/Indicator" -> "skanda-huayan/tdxCL"
"neuks/Indicator" -> "ibaihuo/chanvis"
"neuks/Indicator" -> "dogfun/chanlun"
"neuks/Indicator" -> "artistliao/ZenTheory"
"neuks/Indicator" -> "sqltxt/tdx"
"neuks/Indicator" -> "tomcat123a/-chanlun"
"neuks/Indicator" -> "tconsky/ChanlunX"
"neuks/Indicator" -> "neil-pan-s/one-quant-doc" ["e"=1]
"neuks/Indicator" -> "kikiqiqi/vnpy"
"neuks/Indicator" -> "xbfighting/ChZhShCh"
"neuks/Indicator" -> "yijixiuxin/chanlun-pro"
"zsrl/pywencai" -> "GraySilver/wencai"
"zsrl/pywencai" -> "mootdx/mootdx"
"zsrl/pywencai" -> "tkfy920/qstock"
"zsrl/pywencai" -> "match5/thsauto"
"zsrl/pywencai" -> "zsrl/jqktrader"
"zsrl/pywencai" -> "zsrl/tdxtrader"
"zsrl/pywencai" -> "skyformat99/ths_trade"
"zsrl/pywencai" -> "ai4trade/XtQuant"
"zsrl/pywencai" -> "nladuo/THSTrader"
"zsrl/pywencai" -> "ak4stock/ths_auto_trade"
"zsrl/pywencai" -> "newhackerman/TDXPystock"
"zsrl/pywencai" -> "zjp-CN/rustdx"
"zsrl/pywencai" -> "rainx/pytdx"
"zsrl/pywencai" -> "Vespa314/chan.py"
"zsrl/pywencai" -> "mpquant/MyTT"
"felixglow/Stock" -> "garydai/stock"
"felixglow/Stock" -> "zhoudayang/get_recommend_stock"
"felixglow/Stock" -> "nooperpudd/chinastock"
"felixglow/Stock" -> "1514louluo/mystock"
"felixglow/Stock" -> "volanslei/stocks"
"felixglow/Stock" -> "benitoro/stockholm" ["e"=1]
"felixglow/Stock" -> "asxinyu/Stock"
"felixglow/Stock" -> "onewaymyway/stockdata"
"felixglow/Stock" -> "cforth/stock"
"felixglow/Stock" -> "TsmileAssassin/stock_discover"
"felixglow/Stock" -> "shidenggui/easyhistory"
"charliedream1/ai_wiki" -> "charliedream1/ai_quant_trade"
"charliedream1/ai_wiki" -> "sunnyswag/StockRL"
"DavionWu2018/Sentiment_dictionary" -> "MengLingchao/Chinese_financial_sentiment_dictionary"
"DavionWu2018/Sentiment_dictionary" -> "ppzhenghua/SentimentAnalysisDictionary"
"xiaopc/a-udf" -> "xiaopc/tradingview-ashare"
"FinHackCN/finhack" -> "hugo2046/QuantsPlaybook" ["e"=1]
"FinHackCN/finhack" -> "ailabx/ailabx" ["e"=1]
"FinHackCN/finhack" -> "mootdx/mootdx" ["e"=1]
"FinHackCN/finhack" -> "tkfy920/qstock" ["e"=1]
"FinHackCN/finhack" -> "ctpbee/ctpbee" ["e"=1]
"shidenggui/easyutils" -> "shidenggui/easyhistory"
"andyzsf/TuShare" -> "Emptyset110/dHydra"
"andyzsf/TuShare" -> "benitoro/stockholm" ["e"=1]
"andyzsf/TuShare" -> "sphinx-quant/sphinx-quant"
"andyzsf/TuShare" -> "plouto-quants/FBDQA-2019A"
"andyzsf/TuShare" -> "albert-feng/blade-fury"
"andyzsf/TuShare" -> "moyuanz/DevilYuan"
"andyzsf/TuShare" -> "Python3Spiders/StockSpider"
"andyzsf/TuShare" -> "sinall/StrategyEase-Python-SDK"
"andyzsf/TuShare" -> "pskun/finance_news_analysis"
"andyzsf/TuShare" -> "shidenggui/easyquant"
"andyzsf/TuShare" -> "QuantFans/quantdigger"
"andyzsf/TuShare" -> "gdnyfcuso/GuGu"
"andyzsf/TuShare" -> "PKUJohnson/OpenData"
"andyzsf/TuShare" -> "onewaymyway/stockdata"
"andyzsf/TuShare" -> "zhanghan1990/zipline-chinese"
"QuantBox/CTP" -> "QuantBox/OpenQuant-CTP"
"QuantBox/CTP" -> "QuantBox/QuantBox_XAPI"
"QuantBox/CTP" -> "marvis/CTP"
"QuantBox/CTP" -> "QuantBox/OpenQuant"
"QuantBox/CTP" -> "tradercoder/CTPJA"
"gavfu/chzhshch-blog" -> "yijixiuxin/chanlun-pro"
"gavfu/chzhshch-blog" -> "simple-trade/simple-czsc"
"gavfu/chzhshch-blog" -> "fnsoxt/chzhshch"
"gavfu/chzhshch-blog" -> "gavfu/chzhshch-blog"
"gavfu/chzhshch-blog" -> "Vespa314/chan.py"
"gavfu/chzhshch-blog" -> "waditu/czsc"
"Rockyzsu/xueqiu" -> "xiaobeibei26/xueiqiu_spider"
"changye/AutoTrade" -> "Emptyset110/dHydra"
"changye/AutoTrade" -> "flycandy/sinalv2"
"changye/AutoTrade" -> "wangdkchina/pyautotrade_tdx"
"changye/AutoTrade" -> "sinall/StrategyEase-Python-SDK"
"changye/AutoTrade" -> "qiujoe/StockTrader"
"changye/AutoTrade" -> "928675268/alphaquant"
"changye/AutoTrade" -> "zhuzhenpeng/CTP-TradeServer"
"changye/AutoTrade" -> "Yam-cn/pyalgotrade-cn"
"changye/AutoTrade" -> "rainx/inside-zipline"
"changye/AutoTrade" -> "QuantBox/XAPI2"
"changye/AutoTrade" -> "cedricporter/funcat"
"changye/AutoTrade" -> "zc8424/LazzyQuant"
"changye/AutoTrade" -> "Yam-cn/potato"
"changye/AutoTrade" -> "huichou/TradeX-API"
"changye/AutoTrade" -> "rainx/TdxTradeServer"
"ai4trade/XtQuant" -> "ruyisee/vnpy_qmt"
"ai4trade/XtQuant" -> "LHanLi/EzQmt"
"ai4trade/XtQuant" -> "FinHackCN/finhack-qmt"
"ai4trade/XtQuant" -> "zsrl/miniqmt-demo"
"ai4trade/XtQuant" -> "Rockyzsu/QMT"
"ai4trade/XtQuant" -> "wukan1986/expr_codegen" ["e"=1]
"ai4trade/XtQuant" -> "mootdx/mootdx"
"ai4trade/XtQuant" -> "zsrl/bt-qmt-store"
"ai4trade/XtQuant" -> "123quant/QMT-QuantLimit"
"ai4trade/XtQuant" -> "zsrl/tdxtrader"
"ai4trade/XtQuant" -> "happybeta/xtquantservice"
"ai4trade/XtQuant" -> "wukan1986/qmt_quote"
"ai4trade/XtQuant" -> "dfkai/xtquantai"
"ai4trade/XtQuant" -> "skyformat99/ths_trade"
"ai4trade/XtQuant" -> "newhackerman/TDXPystock"
"ppzhenghua/SentimentAnalysisDictionary" -> "DavionWu2018/Sentiment_dictionary"
"ppzhenghua/SentimentAnalysisDictionary" -> "Shimon-Guo/chinese_sentiment_dictionary"
"ppzhenghua/SentimentAnalysisDictionary" -> "hiDaDeng/wordexpansion" ["e"=1]
"ppzhenghua/SentimentAnalysisDictionary" -> "ZaneMuir/DLUT-Emotionontology"
"fpga2u/AXOrderBook" -> "showmsg/xman" ["e"=1]
"llSourcell/AI_Composer" -> "tusonggao/CTP_Simplest_Demo" ["e"=1]
"molebot/web_ctp" -> "sunwangme/bftrader"
"molebot/web_ctp" -> "molebot/web_ctp"
"LeekQuant/leekquant" -> "ak4stock/ths_auto_trade"
"LeekQuant/leekquant" -> "misslng/10jqka"
"LeekQuant/leekquant" -> "match5/thsauto"
"LeekQuant/leekquant" -> "wukan1986/thsauto"
"LeekQuant/leekquant" -> "zsrl/jqktrader"
"LeekQuant/leekquant" -> "atomat/10jqka-API"
"LeekQuant/leekquant" -> "skyformat99/ths_trade"
"pskun/finance_news_analysis" -> "DemonDamon/FinnewsHunter"
"pskun/finance_news_analysis" -> "Lapis-Hong/atec-nlp"
"pskun/finance_news_analysis" -> "plouto-quants/FBDQA-2019A"
"pskun/finance_news_analysis" -> "dongyuanxin/news-emotion"
"pskun/finance_news_analysis" -> "panluoluo/crawler-analysis" ["e"=1]
"pskun/finance_news_analysis" -> "GallenQiu/FinanceReportAnalysis" ["e"=1]
"bensema/gotdx" -> "quant1x/gotdx"
"bensema/gotdx" -> "injoyai/tdx"
"shidenggui/easyhistory" -> "shidenggui/easyutils"
"shidenggui/easyhistory" -> "flycandy/sinalv2"
"shidenggui/easyhistory" -> "albert-feng/blade-fury"
"280185386/tdxhq" -> "flysoso/py_tdx"
"280185386/tdxhq" -> "zhuhuibeishadiao/Tdx"
"LakeSky/Stock-Trading-System" -> "RonDen/-StockTrading"
"zsrl/jqktrader" -> "skyformat99/ths_trade"
"zsrl/jqktrader" -> "ak4stock/ths_auto_trade"
"zsrl/jqktrader" -> "LeekQuant/leekquant"
"zsrl/jqktrader" -> "match5/thsauto"
"Fixit-Davide/imu_zupt" -> "wvu-navLab/gnss-ins-zupt"
"Varat7v2/STLF-BiLSTM-CNNBiLSTM" -> "JeCase/LoadElectricity_Forecasting_CNN-BiLSTM-Attention"
"Varat7v2/STLF-BiLSTM-CNNBiLSTM" -> "py00128/Cryptocurrency-Price-Prediction"
"QuantBox/OpenQuant" -> "QuantBox/OpenQuant-CTP"
"QuantBox/OpenQuant" -> "QuantBox/DemoDock"
"QuantBox/OpenQuant" -> "QuantBox/QuantBox.APIProvider"
"QuantBox/OpenQuant" -> "QuantBox/QuantBox.DataReceiver"
"QuantBox/OpenQuant" -> "QuantBox/QuantBox.DataSimulator"
"quant1x/gotdx" -> "bensema/gotdx"
"ruyisee/vnpy_qmt" -> "ai4trade/XtQuant"
"jiaminzou888/OpenSource_BSD" -> "kanghua309/zipline-chinese"
"GuanXP/CTPSharp" -> "ggwhsd/CTP-CSharp"
"sunwangme/bftrader" -> "sunwangme/bfpy"
"sunwangme/bftrader" -> "sunwangme/bftrader"
"zxffffffff/stock-charts-cpp" -> "zxffffffff/stock-charts-dart"
"zxffffffff/stock-charts-cpp" -> "SivanLaai/stockAnalyze"
"hezhenke/AmericaStock" -> "suetming/usa_stock_data_crawler"
"quantopian/zipline" -> "vnpy/vnpy" ["e"=1]
"quantopian/zipline" -> "ricequant/rqalpha" ["e"=1]
"quantopian/zipline" -> "waditu/tushare" ["e"=1]
"quantopian/zipline" -> "yutiansut/QUANTAXIS" ["e"=1]
"bbfamily/abu" -> "vnpy/vnpy"
"bbfamily/abu" -> "Rockyzsu/stock"
"bbfamily/abu" -> "yutiansut/QUANTAXIS"
"bbfamily/abu" -> "shidenggui/easytrader"
"bbfamily/abu" -> "waditu/tushare"
"bbfamily/abu" -> "ricequant/rqalpha"
"bbfamily/abu" -> "shidenggui/easyquant"
"bbfamily/abu" -> "akfamily/akshare"
"bbfamily/abu" -> "pythonstock/stock"
"bbfamily/abu" -> "shidenggui/easyquotation"
"bbfamily/abu" -> "quantopian/zipline" ["e"=1]
"bbfamily/abu" -> "thuquant/awesome-quant"
"bbfamily/abu" -> "UFund-Me/Qbot"
"bbfamily/abu" -> "mementum/backtrader" ["e"=1]
"bbfamily/abu" -> "shinnytech/tqsdk-python" ["e"=1]
"myhhub/stock" -> "pythonstock/stock" ["e"=1]
"myhhub/stock" -> "1nchaos/adata" ["e"=1]
"myhhub/stock" -> "sngyai/Sequoia" ["e"=1]
"myhhub/stock" -> "Rockyzsu/stock" ["e"=1]
"ricequant/rqalpha" -> "yutiansut/QUANTAXIS"
"ricequant/rqalpha" -> "shidenggui/easytrader"
"ricequant/rqalpha" -> "quantopian/zipline" ["e"=1]
"ricequant/rqalpha" -> "waditu/tushare"
"ricequant/rqalpha" -> "thuquant/awesome-quant"
"ricequant/rqalpha" -> "gbeced/pyalgotrade" ["e"=1]
"ricequant/rqalpha" -> "vnpy/vnpy"
"ricequant/rqalpha" -> "kungfu-origin/kungfu"
"ricequant/rqalpha" -> "shidenggui/easyquotation"
"ricequant/rqalpha" -> "quantopian/alphalens" ["e"=1]
"ricequant/rqalpha" -> "mementum/backtrader" ["e"=1]
"ricequant/rqalpha" -> "QuantFans/quantdigger"
"ricequant/rqalpha" -> "bbfamily/abu"
"ricequant/rqalpha" -> "shidenggui/easyquant"
"ricequant/rqalpha" -> "zvtvz/zvt"
"1nchaos/adata" -> "mpquant/Ashare"
"1nchaos/adata" -> "Micro-sheep/efinance"
"1nchaos/adata" -> "sngyai/Sequoia"
"1nchaos/adata" -> "myhhub/stock" ["e"=1]
"1nchaos/adata" -> "mpquant/MyTT"
"1nchaos/adata" -> "waditu/czsc"
"1nchaos/adata" -> "charliedream1/ai_quant_trade"
"1nchaos/adata" -> "tkfy920/qstock"
"1nchaos/adata" -> "mootdx/mootdx"
"1nchaos/adata" -> "akfamily/akshare"
"1nchaos/adata" -> "Rockyzsu/stock"
"1nchaos/adata" -> "shidenggui/easyquotation"
"1nchaos/adata" -> "uname-yang/pysnowball"
"1nchaos/adata" -> "FinHackCN/finhack" ["e"=1]
"1nchaos/adata" -> "ArvinLovegood/go-stock"
"BigBrotherTrade/trader" -> "UFund-Me/Qbot"
"BigBrotherTrade/trader" -> "wondertrader/wondertrader"
"BigBrotherTrade/trader" -> "wondertrader/wtpy"
"BigBrotherTrade/trader" -> "vnpy/vnpy"
"BigBrotherTrade/trader" -> "paperswithbacktest/awesome-systematic-trading" ["e"=1]
"BigBrotherTrade/trader" -> "yutiansut/QUANTAXIS"
"BigBrotherTrade/trader" -> "akfamily/akshare"
"BigBrotherTrade/trader" -> "mementum/backtrader" ["e"=1]
"BigBrotherTrade/trader" -> "wangzhe3224/awesome-systematic-trading" ["e"=1]
"BigBrotherTrade/trader" -> "shidenggui/easytrader"
"BigBrotherTrade/trader" -> "Rockyzsu/stock"
"BigBrotherTrade/trader" -> "bbfamily/abu"
"BigBrotherTrade/trader" -> "hugo2046/QuantsPlaybook"
"BigBrotherTrade/trader" -> "microsoft/qlib" ["e"=1]
"BigBrotherTrade/trader" -> "waditu/czsc"
"cgohlke/talib-build" -> "mootdx/mootdx"
"cgohlke/talib-build" -> "TA-Lib/ta-lib" ["e"=1]
"cgohlke/talib-build" -> "mpquant/MyTT"
"cgohlke/talib-build" -> "HuaRongSAO/talib-document"
"cgohlke/talib-build" -> "rainx/pytdx"
"cgohlke/talib-build" -> "ai4trade/XtQuant"
"cgohlke/talib-build" -> "TA-Lib/ta-lib-python" ["e"=1]
"cgohlke/talib-build" -> "edtechre/pybroker" ["e"=1]
"cgohlke/talib-build" -> "FinHackCN/finhack" ["e"=1]
"cgohlke/talib-build" -> "stefan-jansen/pyfolio-reloaded" ["e"=1]
"cgohlke/talib-build" -> "waditu/czsc"
"cgohlke/talib-build" -> "wkingnet/stock-analysis"
"cgohlke/talib-build" -> "openctp/openctp"
"cgohlke/talib-build" -> "Vespa314/chan.py"
"cgohlke/talib-build" -> "jrothschild33/learn_backtrader"
"dearleeyoung/LocalCTP" -> "showmsg/xman"
"dearleeyoung/LocalCTP" -> "openctp/ViTrader"
"dearleeyoung/LocalCTP" -> "openctp/MiniTrader"
"dearleeyoung/LocalCTP" -> "pseudocodes/go2ctp"
"dearleeyoung/LocalCTP" -> "keli/ctp-python"
"dearleeyoung/LocalCTP" -> "KeyAlgo/AlgoPlus"
"dearleeyoung/LocalCTP" -> "openctp/openctp-ctp-python"
"dearleeyoung/LocalCTP" -> "openctp/webctp"
"dearleeyoung/LocalCTP" -> "wukan1986/expr_codegen" ["e"=1]
"quantopian/alphalens" -> "ricequant/rqalpha" ["e"=1]
"KittenCN/stock_prediction" -> "cmiao7-illinois/stock_prediction-based-on-lstm-and-transformer"
"KittenCN/stock_prediction" -> "LightingFx/hs300_stock_predict"
"KittenCN/stock_prediction" -> "gangweix/Stoch-predict-with-Tranformer-LSTM"
"KittenCN/stock_prediction" -> "moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning"
"KittenCN/stock_prediction" -> "KittenCN/predict_Lottery_ticket_pytorch" ["e"=1]
"KittenCN/stock_prediction" -> "hemangjoshi37a/TrendMaster" ["e"=1]
"KittenCN/stock_prediction" -> "AkatsukiYamisora/stock-prediction-with-DL"
"KittenCN/stock_prediction" -> "tp-yan/WebStockPredict"
"TA-Lib/ta-lib" -> "cgohlke/talib-build" ["e"=1]
"TA-Lib/ta-lib" -> "HuaRongSAO/talib-document" ["e"=1]
"TA-Lib/ta-lib" -> "openctp/openctp" ["e"=1]
"ematvey/pybacktest" -> "Yam-cn/pyalgotrade-cn" ["e"=1]
"PlatformLab/NanoLog" -> "kungfu-origin/kungfu" ["e"=1]
"Barca0412/Introduction-to-Quantitative-Finance" -> "hugo2046/QuantsPlaybook" ["e"=1]
"Barca0412/Introduction-to-Quantitative-Finance" -> "jrothschild33/learn_backtrader" ["e"=1]
"openctp/openctp-ctp-python" -> "keli/ctp-python"
"openctp/openctp-ctp-python" -> "openctp/webctp"
"openctp/openctp-ctp-python" -> "nicai0609/Python-CTPAPI"
"openctp/openctp-ctp-python" -> "Jedore/ctp.examples"
"openctp/openctp-ctp-python" -> "ctpbee/ctpbee"
"openctp/openctp-ctp-python" -> "KeyAlgo/AlgoPlus"
"openctp/openctp-ctp-python" -> "dearleeyoung/LocalCTP"
"openctp/openctp-ctp-python" -> "nooperpudd/ctpwrapper"
"openctp/openctp-ctp-python" -> "haifengat/pyctp"
"openctp/openctp-ctp-python" -> "openctp/openctp-ctpopt-python"
"openctp/openctp-ctp-python" -> "MichaelFinance/CTP_DEV_NOTE"
"openctp/openctp-ctp-python" -> "openctp/openctp"
"llSourcell/tensorflow_image_classifier" -> "tusonggao/CTP_Simplest_Demo" ["e"=1]
"datawhalechina/whale-quant" -> "hugo2046/QuantsPlaybook" ["e"=1]
"datawhalechina/whale-quant" -> "ailabx/ailabx" ["e"=1]
"datawhalechina/whale-quant" -> "thuquant/awesome-quant" ["e"=1]
"QuantBox/OpenQuant-CTP" -> "QuantBox/OpenQuant"
"QuantBox/OpenQuant-CTP" -> "QuantBox/QuantBox.DataSimulator"
"QuantBox/OpenQuant-CTP" -> "QuantBox/QuantBoxXProvider"
"QuantBox/OpenQuant-CTP" -> "QuantBox/QuantBox.DataReceiver"
"QuantBox/OpenQuant-CTP" -> "QuantBox/QuantBox.Data"
"Melelery/c-binance-futures-quant" -> "wondertrader/wondertrader" ["e"=1]
"Melelery/c-binance-futures-quant" -> "wondertrader/wtpy" ["e"=1]
"Melelery/c-binance-futures-quant" -> "hugo2046/QuantsPlaybook" ["e"=1]
"shawn666liu/FtdcNet.CTP" -> "haifengat/hf_ctp_cs_proxy"
"shawn666liu/FtdcNet.CTP" -> "ggwhsd/CTP-CSharp"
"shawn666liu/FtdcNet.CTP" -> "nonultimate/CTPSharp"
"shawn666liu/FtdcNet.CTP" -> "GuanXP/CTPSharp"
"shawn666liu/FtdcNet.CTP" -> "shawn666liu/ftdc2c_ctp"
"openctp/webctp" -> "openctp/openctp-ctp-python"
"BigBrotherTrade/backend-ctp" -> "BigBrotherTrade/flower"
"BigBrotherTrade/backend-ctp" -> "showmsg/ctp_redis"
"BigBrotherTrade/backend-ctp" -> "BigBrotherTrade/dashboard"
"Greedysky/TTKDownloader" -> "toby20130333/QStockCharts" ["e"=1]
"rburkholder/trade-frame" -> "physercoe/starquant" ["e"=1]
"rburkholder/trade-frame" -> "EliteQuant/EliteQuant_Cpp" ["e"=1]
"Emptyset110/SinaL2" -> "flycandy/sinalv2"
"Emptyset110/SinaL2" -> "observerss/sinal2"
"silver6wings/SilverQuant" -> "123quant/QMT-QuantLimit"
"silver6wings/SilverQuant" -> "LHanLi/EzQmt"
"silver6wings/SilverQuant" -> "bravebird/qmt"
"silver6wings/SilverQuant" -> "zsrl/bt-qmt-store"
"silver6wings/SilverQuant" -> "zsrl/miniqmt-demo"
"silver6wings/SilverQuant" -> "wukan1986/qmt_quote"
"silver6wings/SilverQuant" -> "zsrl/tdxtrader"
"ydxt25/QuantSystem" -> "dendisuhubdy/quanttrade"
"arthur19q3/Cookbook-for-Rustaceans-in-Finance" -> "mineralres/rust-share" ["e"=1]
"zhoudayang/get_recommend_stock" -> "1514louluo/mystock"
"zhoudayang/get_recommend_stock" -> "volanslei/stocks"
"zhoudayang/get_recommend_stock" -> "nooperpudd/chinastock"
"zhoudayang/get_recommend_stock" -> "felixglow/Stock"
"JeCase/LoadElectricity_Forecasting_CNN-BiLSTM-Attention" -> "Varat7v2/STLF-BiLSTM-CNNBiLSTM"
"zsrl/miniqmt-demo" -> "zsrl/bt-qmt-store"
"zsrl/miniqmt-demo" -> "QSimons/miniQMT_trade"
"zsrl/miniqmt-demo" -> "LHanLi/EzQmt"
"zsrl/miniqmt-demo" -> "zsrl/xtquant-doc"
"zsrl/miniqmt-demo" -> "happybeta/xtquantservice"
"zsrl/miniqmt-demo" -> "ai4trade/XtQuant"
"zsrl/miniqmt-demo" -> "yuhanbo758/yuhanbolh"
"zsrl/miniqmt-demo" -> "zsrl/tdxtrader"
"zsrl/miniqmt-demo" -> "bravebird/qmt"
"zsrl/miniqmt-demo" -> "FinHackCN/finhack-qmt"
"eryk/JQuant" -> "eryk/squant"
"eryk/JQuant" -> "2429298470/stock4j"
"eryk/JQuant" -> "zc8424/QuantTester"
"eryk/JQuant" -> "ausky/stock"
"vvipi/VNPY_account_updater" -> "vvipi/py3_demo_on_vnpy_ctp"
"vvipi/VNPY_account_updater" -> "aiqtt/vnpy_future"
"real-time-machine-learning/1-pandas-intro" -> "real-time-machine-learning/2-scikit-learn-intro"
"real-time-machine-learning/1-pandas-intro" -> "real-time-machine-learning/4-rabbitmq"
"real-time-machine-learning/1-pandas-intro" -> "real-time-machine-learning/5-elasticsearch-logstash-kibana"
"real-time-machine-learning/1-pandas-intro" -> "real-time-machine-learning/3-docker-intro"
"Armanasq/End-to-End-Deep-Learning-Framework-for-Real-Time-Inertial-Attitude-Estimation-using-6DoF-IMU" -> "daniel-om-weber/riann"
"Armanasq/End-to-End-Deep-Learning-Framework-for-Real-Time-Inertial-Attitude-Estimation-using-6DoF-IMU" -> "nisharaichur/End-to-End-Learning-Framework-for-IMU-Based-6-DOF-Odometry"
"Armanasq/End-to-End-Deep-Learning-Framework-for-Real-Time-Inertial-Attitude-Estimation-using-6DoF-IMU" -> "NextEasywood/Model-Based-Deep-Learning-for-Low-Cost-IMU-Dead-Reckoning-of-Wheeled-Mobile-Robot"
"zsrl/bt-qmt-store" -> "zsrl/miniqmt-demo"
"zsrl/bt-qmt-store" -> "LHanLi/EzQmt"
"zsrl/bt-qmt-store" -> "bravebird/qmt"
"zsrl/bt-qmt-store" -> "ruyisee/vnpy_qmt"
"zsrl/bt-qmt-store" -> "silver6wings/SilverQuant"
"zsrl/bt-qmt-store" -> "Rockyzsu/QMT"
"jkzing/bridgit" -> "zaihui/hutils"
"jkzing/bridgit" -> "jkzing/jkzing.com"
"sunwangme/bftrader" -> "sunwangme/bfgo"
"QuantBox/QuantBox.APIProvider" -> "QuantBox/DemoDock"
"X0Leon/XQuant" -> "francinexue/xuefu"
"rainx/zipline_cn_databundle" -> "rainx/cn_stock_holidays"
"BigBrotherTrade/dashboard" -> "BigBrotherTrade/flower"
"BigBrotherTrade/dashboard" -> "BigBrotherTrade/backend-ctp"
"misslng/10jqka" -> "atomat/10jqka-API"
"sunwangme/bfpy" -> "sunwangme/bftrader"
"sunwangme/bfpy" -> "sunwangme/bfgo"
"hankchan/goctp" -> "gaxxx/ctp"
"hankchan/goctp" -> "mayiweb/goctp"
"hankchan/goctp" -> "zoohanyoo/node-ctp"
"pseudocodes/go2ctp" -> "pseudocodes/ctp2rs"
"LHanLi/FreeBack" -> "LHanLi/GPminer"
"jxls080511/stockPrediction" -> "suetming/usa_stock_data_crawler"
"sunwangme/bfgo" -> "sunwangme/bfpy"
"sunwangme/bfgo" -> "sunwangme/bftrader"
"mineralres/rust-share" -> "baiguoname/qust"
"maxbbraun/trump2cash" -> "ricequant/rqalpha" ["e"=1]
"brianway/webporter" -> "decaywood/XueQiuSuperSpider" ["e"=1]
"cedricporter/funcat" -> "sinall/StrategyEase-Python-SDK"
"cedricporter/funcat" -> "rainx/pytdx"
"cedricporter/funcat" -> "mpquant/MyTT"
"cedricporter/funcat" -> "Raytone-D/puppet"
"cedricporter/funcat" -> "nladuo/THSTrader"
"cedricporter/funcat" -> "moyuanz/DevilYuan"
"cedricporter/funcat" -> "ricequant/rqalpha"
"cedricporter/funcat" -> "HuaRongSAO/talib-document"
"cedricporter/funcat" -> "mootdx/mootdx"
"cedricporter/funcat" -> "QuantFans/quantdigger"
"cedricporter/funcat" -> "Yam-cn/pyalgotrade-cn"
"cedricporter/funcat" -> "rainx/TdxTradeServer"
"cedricporter/funcat" -> "shidenggui/easyquotation"
"cedricporter/funcat" -> "quantOS-org/JAQS"
"cedricporter/funcat" -> "Emptyset110/dHydra"
"AI4Finance-Foundation/FinRobot" -> "charliedream1/ai_quant_trade" ["e"=1]
"zc8424/LazzyQuant" -> "galois-advertising/thunder-trader"
"zc8424/LazzyQuant" -> "zhuzhenpeng/CTP-TradeServer"
"zc8424/LazzyQuant" -> "haifengat/pyctp"
"zc8424/LazzyQuant" -> "tashaxing/CTPtest"
"zc8424/LazzyQuant" -> "haifengat/hfpy"
"zc8424/LazzyQuant" -> "xywanz/ft"
"zc8424/LazzyQuant" -> "zhuzhenpeng/CTP-MarketDataMachine"
"zc8424/LazzyQuant" -> "physercoe/starquant"
"zc8424/LazzyQuant" -> "KeyAlgo/AlgoPlus"
"zc8424/LazzyQuant" -> "moonnejs/uiKLine"
"zc8424/LazzyQuant" -> "QuantBox/XAPI2"
"zc8424/LazzyQuant" -> "showmsg/ctp_redis"
"zc8424/LazzyQuant" -> "shizhuolin/PyCTP"
"zc8424/LazzyQuant" -> "Raytone-D/puppet"
"zc8424/LazzyQuant" -> "pegasusTrader/PandoraTrader"
"rainx/inside-zipline" -> "zhanghan1990/zipline-chinese"
"rainx/inside-zipline" -> "JaysonAlbert/zipline"
"rainx/inside-zipline" -> "rainx/zipline_cn_databundle"
"rainx/inside-zipline" -> "rainx/cn_stock_holidays"
"rainx/inside-zipline" -> "kanghua309/strategy"
"rainx/inside-zipline" -> "Yam-cn/pyalgotrade-cn"
"rainx/inside-zipline" -> "francinexue/xuefu"
"rainx/inside-zipline" -> "JaysonAlbert/tdx"
"rainx/inside-zipline" -> "JaysonAlbert/cn_zipline"
"rainx/inside-zipline" -> "rainx/TdxTradeServer"
"rainx/inside-zipline" -> "rainx/pytdx"
"rainx/inside-zipline" -> "zc8424/LazzyQuant"
"rainx/inside-zipline" -> "haifengat/hfpy"
"rainx/inside-zipline" -> "zipline-live/zipline" ["e"=1]
"rainx/inside-zipline" -> "Chandlercjy/OnePy"
"sinall/StrategyEase-Python-SDK" -> "QuantFans/quantdigger"
"sinall/StrategyEase-Python-SDK" -> "cedricporter/funcat"
"sinall/StrategyEase-Python-SDK" -> "Raytone-D/puppet"
"sinall/StrategyEase-Python-SDK" -> "shidenggui/easyquant"
"sinall/StrategyEase-Python-SDK" -> "rainx/pytdx"
"sinall/StrategyEase-Python-SDK" -> "zhanghan1990/zipline-chinese"
"sinall/StrategyEase-Python-SDK" -> "Yam-cn/pyalgotrade-cn"
"sinall/StrategyEase-Python-SDK" -> "nladuo/THSTrader"
"sinall/StrategyEase-Python-SDK" -> "QuantBox/XAPI2"
"sinall/StrategyEase-Python-SDK" -> "shidenggui/easyquotation"
"sinall/StrategyEase-Python-SDK" -> "moyuanz/DevilYuan"
"sinall/StrategyEase-Python-SDK" -> "shidenggui/easytrader"
"sinall/StrategyEase-Python-SDK" -> "rainx/TdxTradeServer"
"sinall/StrategyEase-Python-SDK" -> "myquant/strategy"
"sinall/StrategyEase-Python-SDK" -> "Emptyset110/dHydra"
"richox/okcoin-leeks-reaper" -> "fmzquant/strategies" ["e"=1]
"richox/okcoin-leeks-reaper" -> "kungfu-origin/kungfu" ["e"=1]
"richox/okcoin-leeks-reaper" -> "QuantBox/XAPI2" ["e"=1]
"showmsg/ctp_redis" -> "BigBrotherTrade/backend-ctp"
"showmsg/ctp_redis" -> "zhuzhenpeng/CTP-MarketDataMachine"
"showmsg/ctp_redis" -> "zoohanyoo/node-ctp"
"python279/stock-predict" -> "bysjlwdx/TensorFlow"
"python279/stock-predict" -> "zhengguowei/stock_prediction"
"python279/stock-predict" -> "jxls080511/stockPrediction"
"python279/stock-predict" -> "real-time-machine-learning/2-scikit-learn-intro"
"python279/stock-predict" -> "LightingFx/hs300_stock_predict"
"LKI/meican" -> "jkzing/jkzing.com"
"LKI/meican" -> "wujiyu115/meican"
"LKI/meican" -> "LKI/LKI"
"LKI/meican" -> "hui-z/ForgiveDB"
"haifengat/pyctp" -> "haifengat/hfpy"
"haifengat/pyctp" -> "nooperpudd/ctpwrapper"
"haifengat/pyctp" -> "shizhuolin/PyCTP"
"haifengat/pyctp" -> "haifengat/hf_at"
"haifengat/pyctp" -> "haifengat/hf_ctp_cs_proxy"
"haifengat/pyctp" -> "lovelylain/pyctp"
"haifengat/pyctp" -> "zc8424/LazzyQuant"
"haifengat/pyctp" -> "nicai0609/Python-CTPAPI"
"haifengat/pyctp" -> "zhuzhenpeng/CTP-TradeServer"
"haifengat/pyctp" -> "tashaxing/CTPtest"
"haifengat/pyctp" -> "KeyAlgo/AlgoPlus"
"haifengat/pyctp" -> "QuantBox/XAPI2"
"haifengat/pyctp" -> "jiaminzou888/cppvnpy"
"haifengat/pyctp" -> "ctpbee/ctpbee"
"haifengat/pyctp" -> "openctp/openctp-ctp-python"
"mineralres/pytdxtrader" -> "wangdkchina/pyautotrade_tdx"
"mineralres/pytdxtrader" -> "280185386/tdxhq"
"Raytone-D/puppet" -> "rainx/TdxTradeServer"
"Raytone-D/puppet" -> "sinall/StrategyEase-Python-SDK"
"Raytone-D/puppet" -> "nladuo/THSTrader"
"Raytone-D/puppet" -> "rainx/pytdx"
"Raytone-D/puppet" -> "cedricporter/funcat"
"Raytone-D/puppet" -> "zc8424/LazzyQuant"
"Raytone-D/puppet" -> "QuantBox/XAPI2"
"Raytone-D/puppet" -> "928675268/alphaquant"
"Raytone-D/puppet" -> "Emptyset110/dHydra"
"Raytone-D/puppet" -> "moyuanz/DevilYuan"
"Raytone-D/puppet" -> "match5/thsauto"
"Raytone-D/puppet" -> "flycandy/sinalv2"
"Raytone-D/puppet" -> "huichou/TradeX-API"
"Raytone-D/puppet" -> "datochan/ctdx"
"Raytone-D/puppet" -> "quantOS-org/DataCore"
"banbox/banbot" -> "banbox/banstrats"
"zcyeee/EastMoney_Crawler" -> "Euclid-Jie/Euclidguba-search"
"zcyeee/EastMoney_Crawler" -> "algosenses/EastMoneySpider"
"rainx/cn_stock_holidays" -> "rainx/zipline_cn_databundle"
"rainx/cn_stock_holidays" -> "JaysonAlbert/zipline"
"rainx/cn_stock_holidays" -> "rainx/inside-zipline"
"rainx/cn_stock_holidays" -> "JaysonAlbert/cn_zipline"
"rainx/cn_stock_holidays" -> "JaysonAlbert/tdx"
"LHanLi/EzQmt" -> "FinHackCN/finhack-qmt"
"LHanLi/EzQmt" -> "bravebird/qmt"
"LHanLi/EzQmt" -> "123quant/QMT-QuantLimit"
"LHanLi/EzQmt" -> "wukan1986/qmt_quote"
"LHanLi/EzQmt" -> "LHanLi/GPminer"
"LHanLi/EzQmt" -> "zillionare/pyqmt"
"LHanLi/EzQmt" -> "silver6wings/SilverQuant"
"LHanLi/EzQmt" -> "ai4trade/XtQuant"
"LHanLi/EzQmt" -> "LHanLi/FreeBack"
"LHanLi/EzQmt" -> "QSimons/miniQMT_trade"
"LHanLi/EzQmt" -> "zsrl/bt-qmt-store"
"LHanLi/EzQmt" -> "zsrl/miniqmt-demo"
"LHanLi/EzQmt" -> "Rockyzsu/QMT"
"eryk/squant" -> "eryk/JQuant"
"eryk/squant" -> "2429298470/stock4j"
"eryk/squant" -> "quant4s/quant4s"
"eryk/squant" -> "tigerfintech/tiger_quant"
"fnsoxt/chzhshch" -> "xbfighting/chzhshch-1"
"fnsoxt/chzhshch" -> "gsysbrj/gsysbrj.github.io"
"fnsoxt/chzhshch" -> "zhoudaqing/stock_paper"
"fnsoxt/chzhshch" -> "stockServ/chzhshch-108-plus"
"yuhanbo758/yuhanbolh" -> "bravebird/qmt"
"chan2zen/rust-chan" -> "YuYuKunKun/chanlun.py"
"chan2zen/rust-chan" -> "neuks/Indicator"
"chan2zen/rust-chan" -> "dogfun/chanlun"
"chan2zen/rust-chan" -> "artistliao/ZenTheory"
"chan2zen/rust-chan" -> "mywildquant/ChanlunX"
"haifengat/hf_trade_terminal" -> "haifengat/hf_ctp_c_proxy"
"zshicode/MambaStock" -> "Atik-Ahamed/TimeMachine" ["e"=1]
"ldsink/toolbox" -> "zaihui/hutils"
"ldsink/toolbox" -> "jkzing/bridgit"
"freevolunteer/bondTrader" -> "freevolunteer/hangqing"
"freevolunteer/bondTrader" -> "freevolunteer/daban"
"freevolunteer/bondTrader" -> "MedicineStick/mini_gpt" ["e"=1]
"FinHackCN/finhack-qmt" -> "LHanLi/EzQmt"
"FinHackCN/finhack-qmt" -> "zillionare/pyqmt"
"FinHackCN/finhack-qmt" -> "wukan1986/qmt_quote"
"FinHackCN/finhack-qmt" -> "bravebird/qmt"
"real-time-machine-learning/3-docker-intro" -> "real-time-machine-learning/5-elasticsearch-logstash-kibana"
"real-time-machine-learning/3-docker-intro" -> "real-time-machine-learning/4-rabbitmq"
"real-time-machine-learning/4-rabbitmq" -> "real-time-machine-learning/3-docker-intro"
"real-time-machine-learning/4-rabbitmq" -> "real-time-machine-learning/5-elasticsearch-logstash-kibana"
"real-time-machine-learning/4-rabbitmq" -> "real-time-machine-learning/2-scikit-learn-intro"
"real-time-machine-learning/4-rabbitmq" -> "real-time-machine-learning/1-pandas-intro"
"EdwardLee0331/autoDownload" -> "StuPeter/Company_Annual_Report_Analysis_TF"
"YuYuKunKun/chanlun.py" -> "chan2zen/rust-chan"
"haifengat/hf_ctp_cs_proxy" -> "haifengat/hf_ctp_c_proxy"
"haifengat/hf_ctp_cs_proxy" -> "shawn666liu/FtdcNet.CTP"
"haifengat/hf_ctp_cs_proxy" -> "haifengat/hf_trade_terminal"
"haifengat/hf_ctp_c_proxy" -> "haifengat/hf_trade_terminal"
"haifengat/hf_ctp_c_proxy" -> "haifengat/hf_ctp_cs_proxy"
"real-time-machine-learning/2-scikit-learn-intro" -> "real-time-machine-learning/4-rabbitmq"
"real-time-machine-learning/2-scikit-learn-intro" -> "real-time-machine-learning/1-pandas-intro"
"real-time-machine-learning/2-scikit-learn-intro" -> "real-time-machine-learning/5-elasticsearch-logstash-kibana"
"real-time-machine-learning/2-scikit-learn-intro" -> "real-time-machine-learning/3-docker-intro"
"Jedore/openctp-ctp-channels" -> "Jedore/ctp.examples"
"wuyanfei/tdx_fetchKlineData" -> "flysoso/py_tdx"
"wuyanfei/tdx_fetchKlineData" -> "280185386/tdxhq"
"wuyanfei/tdx_fetchKlineData" -> "ericyan/tdx"
"wuyanfei/tdx_fetchKlineData" -> "dobit/tdxProxy"
"wuyanfei/tdx_fetchKlineData" -> "zhuhuibeishadiao/Tdx"
"wuyanfei/tdx_fetchKlineData" -> "bopo/tdx2csv"
"wuyanfei/tdx_fetchKlineData" -> "wangdkchina/pyautotrade_tdx"
"tusonggao/Stock_Automation" -> "tusonggao/CTP_Simplest_Demo"
"tusonggao/Stock_Automation" -> "tusonggao/Generate_Abstract_Random_Images"
"jiaminzou888/cppvnpy" -> "kangseung/JSTrader"
"jiaminzou888/cppvnpy" -> "culi123/QtGuiSurveillanceMulti"
"jingzhaoyang/pyalgotrade" -> "AdaJass/pyalgotrade3"
"gearlessHU/xt_qmt_func" -> "bravebird/qmt"
"suetming/usa_stock_data_crawler" -> "hezhenke/AmericaStock"
"real-time-machine-learning/5-elasticsearch-logstash-kibana" -> "real-time-machine-learning/3-docker-intro"
"real-time-machine-learning/5-elasticsearch-logstash-kibana" -> "real-time-machine-learning/4-rabbitmq"
"zipline-live/zipline" -> "rainx/inside-zipline" ["e"=1]
"zipline-live/zipline" -> "kanghua309/strategy" ["e"=1]
"zipline-live/zipline" -> "JaysonAlbert/zipline" ["e"=1]
"tashaxing/CTPtest" -> "zhuzhenpeng/CTP-TradeServer"
"tashaxing/CTPtest" -> "shizhuolin/PyCTP"
"tashaxing/CTPtest" -> "zhuzhenpeng/CTP-MarketDataMachine"
"tashaxing/CTPtest" -> "zc8424/LazzyQuant"
"tashaxing/CTPtest" -> "nooperpudd/ctpwrapper"
"tashaxing/CTPtest" -> "haifengat/pyctp"
"tashaxing/CTPtest" -> "QuantBox/XAPI2"
"tashaxing/CTPtest" -> "shinnytech/open-trade-gateway"
"tashaxing/CTPtest" -> "pegasusTrader/PandoraTrader"
"tashaxing/CTPtest" -> "nicai0609/Python-CTPAPI"
"tashaxing/CTPtest" -> "tusonggao/CTP_Simplest_Demo"
"tashaxing/CTPtest" -> "ctpbee/ctpbee"
"tashaxing/CTPtest" -> "showmsg/ctp_redis"
"tashaxing/CTPtest" -> "galois-advertising/thunder-trader"
"tashaxing/CTPtest" -> "xywanz/ft"
"kikiqiqi/vnpy" -> "sunshinelover/chanlun"
"kikiqiqi/vnpy" -> "neuks/Indicator"
"zhanghan1990/zipline-chinese" -> "rainx/inside-zipline"
"zhanghan1990/zipline-chinese" -> "JaysonAlbert/zipline"
"zhanghan1990/zipline-chinese" -> "sinall/StrategyEase-Python-SDK"
"zhanghan1990/zipline-chinese" -> "rainx/zipline_cn_databundle"
"zhanghan1990/zipline-chinese" -> "Yam-cn/pyalgotrade-cn"
"zhanghan1990/zipline-chinese" -> "JaysonAlbert/tdx"
"zhanghan1990/zipline-chinese" -> "rainx/cn_stock_holidays"
"zhanghan1990/zipline-chinese" -> "JaysonAlbert/cn_zipline"
"zhanghan1990/zipline-chinese" -> "QuantFans/quantdigger"
"zhanghan1990/zipline-chinese" -> "ricequant/rqalpha"
"zhanghan1990/zipline-chinese" -> "moyuanz/DevilYuan"
"zhanghan1990/zipline-chinese" -> "quantOS-org/JAQS"
"zhanghan1990/zipline-chinese" -> "francinexue/xuefu"
"zhanghan1990/zipline-chinese" -> "rainx/pytdx"
"zhanghan1990/zipline-chinese" -> "Raytone-D/puppet"
"kingschan1204/istock" -> "decaywood/XueQiuSuperSpider"
"kingschan1204/istock" -> "bosspen1/stock"
"kingschan1204/istock" -> "kingschan1204/easyCrawl"
"kingschan1204/istock" -> "sun0x00/redtorch"
"kingschan1204/istock" -> "eryk/squant"
"kingschan1204/istock" -> "YangPeng-DistanceLearning/istock-fund"
"kingschan1204/istock" -> "benitoro/stockholm" ["e"=1]
"kingschan1204/istock" -> "Laichj/box-spider"
"kingschan1204/istock" -> "2429298470/stock4j"
"kingschan1204/istock" -> "LakeSky/Stock-Trading-System"
"kingschan1204/istock" -> "moyuanz/DevilYuan"
"kingschan1204/istock" -> "eryk/JQuant"
"kingschan1204/istock" -> "ausky/stock"
"kingschan1204/istock" -> "chenerzhu/proxy-pool" ["e"=1]
"kingschan1204/istock" -> "ityouknow/awesome-spring-boot" ["e"=1]
"tradequant/ZMStockCom" -> "tradequant/ZMTradeService"
"tradequant/ZMStockCom" -> "280185386/tdxhq"
"tradequant/ZMStockCom" -> "viponedream/tdxhq"
"ricequant/rqalpha-mod-vnpy" -> "ricequant/rqalpha-mod-tushare"
"ricequant/rqalpha-mod-vnpy" -> "johnsonchak/rqalpha-mod-hello"
"ricequant/rqalpha-mod-vnpy" -> "ricequant/rqalpha-mod-ctp"
"ricequant/rqalpha-mod-tushare" -> "johnsonchak/rqalpha-mod-hello"
"LouisScorpio/datamining" -> "quantzzh/dlstock" ["e"=1]
"HuberTRoy/MusicBox" -> "Seedarchangel/TuChart" ["e"=1]
"imspzero/chan_lun_py" -> "sunshinelover/chanlun"
"xiaobeibei26/xueiqiu_spider" -> "Rockyzsu/xueqiu"
"xiaobeibei26/xueiqiu_spider" -> "Gunter-Lin/Snowball_Spider"
"sunshinelover/chanlun" -> "xbfighting/ChZhShCh"
"sunshinelover/chanlun" -> "kikiqiqi/vnpy"
"sunshinelover/chanlun" -> "Everyheart/ChanLun"
"sunshinelover/chanlun" -> "neuks/Indicator"
"Yam-cn/potato" -> "AdaJass/pyalgotrade3"
"FutunnOpen/FTPluginServer" -> "szmile2008/FTPlugin"
"FutunnOpen/FTPluginServer" -> "FutunnOpen/futuquant"
"FutunnOpen/FTPluginServer" -> "stormtrader/gw_trade"
"FutunnOpen/FTPluginServer" -> "FutunnOpen/rqalpha-mod-futu"
"FutunnOpen/FTPluginServer" -> "zznn/futu-openAPI"
"zsrl/tdxtrader" -> "zsrl/miniqmt-demo"
"zsrl/tdxtrader" -> "silver6wings/SilverQuant"
"zsrl/tdxtrader" -> "123quant/QMT-QuantLimit"
"zsrl/tdxtrader" -> "louis-gg/tdxchanbi"
"haifengat/hfpy" -> "haifengat/pyctp"
"haifengat/hfpy" -> "haifengat/hf_at"
"haifengat/hfpy" -> "quantOS-org/TradeSim"
"haifengat/hfpy" -> "haifengat/hf_trade_terminal"
"haifengat/hfpy" -> "harvey1673/pyktrader"
"haifengat/hfpy" -> "msincenselee/vnpy"
"haifengat/hfpy" -> "vvipi/py3_demo_on_vnpy_ctp"
"haifengat/hfpy" -> "zc8424/LazzyQuant"
"haifengat/hfpy" -> "haifengat/hf_ctp_cs_proxy"
"haifengat/hfpy" -> "quantOS-org/DataCore"
"haifengat/hf_at" -> "haifengat/hfpy"
"haifengat/hf_at" -> "haifengat/hf_ctp_cs_proxy"
"haifengat/hf_at" -> "haifengat/hf_ctp_c_proxy"
"haifengat/hf_at" -> "haifengat/hf_trade_terminal"
"haifengat/hf_at" -> "haifengat/pyctp"
"279838089/meican" -> "wujiyu115/meican"
"wujiyu115/meican" -> "279838089/meican"
"onewaymyway/stockdata" -> "coolzhm/TuShareData"
"onewaymyway/stockdata" -> "leo6676284/tushare"
"nonultimate/CTPSharp" -> "yajiedesign/CTPCSharp"
"nonultimate/CTPSharp" -> "shawn666liu/FtdcNet.CTP"
"nonultimate/CTPSharp" -> "fouvy/CTPFutrueProvider"
"bravebird/qmt" -> "zillionare/pyqmt"
"bravebird/qmt" -> "gearlessHU/xt_qmt_func"
"bravebird/qmt" -> "FinHackCN/finhack-qmt"
"injoyai/tdx" -> "bensema/gotdx"
"injoyai/tdx" -> "injoyai/stock"
"banbox/banstrats" -> "banbox/banbot"
"Jedore/ctp.examples" -> "Jedore/openctp-ctp-channels"
"bnufree/Hq" -> "cetcjinjian/QT_StockFigure"
"freevolunteer/daban" -> "freevolunteer/bondTrader"
"freevolunteer/daban" -> "123quant/QMT-QuantLimit"
"LHanLi/GPminer" -> "LHanLi/FreeBack"
"RainyQing/leeks" -> "WoChen5770/leeks"
"kangseung/JSTrader" -> "kangseung/jstrader2"
"ccxt/ccxt" -> "vnpy/vnpy" ["e"=1]
"pyecharts/pyecharts" -> "waditu/tushare" ["e"=1]
"pyecharts/pyecharts" -> "vnpy/vnpy" ["e"=1]
"pyecharts/pyecharts" -> "akfamily/akshare" ["e"=1]
"LLMQuant/quant-wiki" -> "charliedream1/ai_quant_trade" ["e"=1]
"LLMQuant/quant-wiki" -> "hugo2046/QuantsPlaybook" ["e"=1]
"LLMQuant/quant-wiki" -> "thuquant/awesome-quant" ["e"=1]
"LLMQuant/quant-wiki" -> "wondertrader/wondertrader" ["e"=1]
"LLMQuant/quant-wiki" -> "UFund-Me/Qbot" ["e"=1]
"pythonstock/stock" -> "Rockyzsu/stock"
"pythonstock/stock" -> "bbfamily/abu"
"pythonstock/stock" -> "shidenggui/easytrader"
"pythonstock/stock" -> "shidenggui/easyquotation"
"pythonstock/stock" -> "akfamily/akshare"
"pythonstock/stock" -> "yutiansut/QUANTAXIS"
"pythonstock/stock" -> "myhhub/stock" ["e"=1]
"pythonstock/stock" -> "shidenggui/easyquant"
"pythonstock/stock" -> "waditu/tushare"
"pythonstock/stock" -> "wangshub/RL-Stock"
"pythonstock/stock" -> "vnpy/vnpy"
"pythonstock/stock" -> "sngyai/Sequoia"
"pythonstock/stock" -> "benitoro/stockholm" ["e"=1]
"pythonstock/stock" -> "waditu/czsc"
"pythonstock/stock" -> "zvtvz/zvt"
"gaojunhuicavon/Annual" -> "StuPeter/Company_Annual_Report_Analysis_TF"
"24mlight/A_Share_investment_Agent" -> "charliedream1/ai_quant_trade" ["e"=1]
"24mlight/A_Share_investment_Agent" -> "UFund-Me/Qbot" ["e"=1]
"24mlight/A_Share_investment_Agent" -> "ArvinLovegood/go-stock" ["e"=1]
"24mlight/A_Share_investment_Agent" -> "1nchaos/adata" ["e"=1]
"lovelylain/pyctp" -> "shizhuolin/PyCTP"
"lovelylain/pyctp" -> "nooperpudd/ctpwrapper"
"lovelylain/pyctp" -> "zhuzhenpeng/CTP-TradeServer"
"lovelylain/pyctp" -> "haifengat/pyctp"
"lovelylain/pyctp" -> "QuantBox/QuantBox_XAPI"
"lovelylain/pyctp" -> "nicai0609/Python-CTPAPI"
"lovelylain/pyctp" -> "Emptyset110/dHydra"
"lovelylain/pyctp" -> "QuantBox/XAPI2"
"lovelylain/pyctp" -> "quantOS-org/DataCore"
"lovelylain/pyctp" -> "harvey1673/pyktrader"
"lovelylain/pyctp" -> "tashaxing/CTPtest"
"lovelylain/pyctp" -> "Yam-cn/pyalgotrade-cn"
"lovelylain/pyctp" -> "msincenselee/vnpy"
"lovelylain/pyctp" -> "QuantBox/CTP"
"lovelylain/pyctp" -> "zoohanyoo/node-ctp"
"rainx/pytdx" -> "mootdx/mootdx"
"rainx/pytdx" -> "rainx/TdxTradeServer"
"rainx/pytdx" -> "cedricporter/funcat"
"rainx/pytdx" -> "yutiansut/QUANTAXIS"
"rainx/pytdx" -> "QuantBox/XAPI2"
"rainx/pytdx" -> "shidenggui/easyquotation"
"rainx/pytdx" -> "sinall/StrategyEase-Python-SDK"
"rainx/pytdx" -> "moyuanz/DevilYuan"
"rainx/pytdx" -> "Raytone-D/puppet"
"rainx/pytdx" -> "Emptyset110/dHydra"
"rainx/pytdx" -> "shidenggui/easytrader"
"rainx/pytdx" -> "ricequant/rqalpha"
"rainx/pytdx" -> "shidenggui/easyquant"
"rainx/pytdx" -> "bopo/mootdx"
"HuaRongSAO/talib-document" -> "xingbuxing/TA-Lib-in-chinese"
"HuaRongSAO/talib-document" -> "cedricporter/funcat"
"HuaRongSAO/talib-document" -> "TA-Lib/ta-lib-python" ["e"=1]
"HuaRongSAO/talib-document" -> "ricequant/rqalpha"
"HuaRongSAO/talib-document" -> "jrothschild33/learn_backtrader"
"HuaRongSAO/talib-document" -> "mpquant/MyTT"
"HuaRongSAO/talib-document" -> "yutiansut/QUANTAXIS"
"HuaRongSAO/talib-document" -> "thuquant/awesome-quant"
"HuaRongSAO/talib-document" -> "rainx/pytdx"
"HuaRongSAO/talib-document" -> "hugo2046/QuantsPlaybook"
"HuaRongSAO/talib-document" -> "fasiondog/hikyuu"
"HuaRongSAO/talib-document" -> "waditu/czsc"
"HuaRongSAO/talib-document" -> "openctp/openctp"
"HuaRongSAO/talib-document" -> "shidenggui/easyquotation"
"HuaRongSAO/talib-document" -> "shidenggui/easytrader"
"ArvinLovegood/go-stock" -> "1nchaos/adata"
"ArvinLovegood/go-stock" -> "myhhub/stock" ["e"=1]
"ArvinLovegood/go-stock" -> "axiaoxin-com/investool"
"ArvinLovegood/go-stock" -> "lanzhihong6/stock-scanner" ["e"=1]
"ArvinLovegood/go-stock" -> "charliedream1/ai_quant_trade"
"ArvinLovegood/go-stock" -> "AI4Finance-Foundation/FinRobot" ["e"=1]
"ArvinLovegood/go-stock" -> "alecm20/story-flicks" ["e"=1]
"ArvinLovegood/go-stock" -> "DR-lin-eng/stock-scanner" ["e"=1]
"ArvinLovegood/go-stock" -> "tkfy920/qstock"
"ArvinLovegood/go-stock" -> "mpquant/Ashare"
"ArvinLovegood/go-stock" -> "sngyai/Sequoia"
"ArvinLovegood/go-stock" -> "yenche123/liubai" ["e"=1]
"ArvinLovegood/go-stock" -> "FinHackCN/finhack" ["e"=1]
"ArvinLovegood/go-stock" -> "24mlight/A_Share_investment_Agent" ["e"=1]
"ArvinLovegood/go-stock" -> "zsrl/pywencai"
"FutunnOpen/futuquant" -> "FutunnOpen/py-futu-api"
"FutunnOpen/futuquant" -> "FutunnOpen/FTPluginServer"
"FutunnOpen/futuquant" -> "quantOS-org/JAQS"
"FutunnOpen/futuquant" -> "haifengat/hfpy"
"FutunnOpen/futuquant" -> "szmile2008/FTPlugin"
"FutunnOpen/futuquant" -> "QuantBox/XAPI2"
"FutunnOpen/futuquant" -> "rainx/inside-zipline"
"FutunnOpen/futuquant" -> "stormtrader/gw_trade"
"FutunnOpen/futuquant" -> "rainx/pytdx"
"FutunnOpen/futuquant" -> "moonnejs/uiKLine"
"FutunnOpen/futuquant" -> "sinall/StrategyEase-Python-SDK"
"FutunnOpen/futuquant" -> "Yam-cn/pyalgotrade-cn"
"FutunnOpen/futuquant" -> "zznn/futu-openAPI"
"FutunnOpen/futuquant" -> "Raytone-D/puppet"
"FutunnOpen/futuquant" -> "moyuanz/DevilYuan"
"chronoxor/CppTrader" -> "pegasusTrader/PandoraTrader" ["e"=1]
"chronoxor/CppTrader" -> "physercoe/starquant" ["e"=1]
"wequant-org/liveStrategyEngine" -> "sinall/StrategyEase-Python-SDK" ["e"=1]
"wequant-org/liveStrategyEngine" -> "myquant/strategy" ["e"=1]
"ricequant/rqalpha-mod-ctp" -> "ricequant/rqalpha-mod-tushare"
"ricequant/rqalpha-mod-ctp" -> "johnsonchak/rqalpha-mod-hello"
"LKI/chinese-calendar" -> "NateScarlet/holiday-cn"
"LKI/chinese-calendar" -> "LKI/LKI"
"LKI/chinese-calendar" -> "hui-z/ForgiveDB"
"LKI/chinese-calendar" -> "blackholll/loonflow" ["e"=1]
"LKI/chinese-calendar" -> "zhuifengshen/DingtalkChatbot" ["e"=1]
"LKI/chinese-calendar" -> "zaihui/hutils"
"LKI/chinese-calendar" -> "LKI/lki.github.io"
"LKI/chinese-calendar" -> "wechatpy/wechatpy" ["e"=1]
"LKI/chinese-calendar" -> "ctpbee/ctpbee"
"LKI/chinese-calendar" -> "workalendar/workalendar" ["e"=1]
"LKI/chinese-calendar" -> "LKI/meican"
"LKI/chinese-calendar" -> "mozillazg/python-pinyin" ["e"=1]
"LKI/chinese-calendar" -> "ls0f/phone" ["e"=1]
"LKI/chinese-calendar" -> "nicai0609/Python-CTPAPI"
"LKI/chinese-calendar" -> "shidenggui/easyquotation"
"cetcjinjian/StockKLine" -> "cetcjinjian/QT_StockFigure"
"cetcjinjian/StockKLine" -> "toby20130333/QStockCharts"
"cetcjinjian/StockKLine" -> "SivanLaai/stockAnalyze"
"cetcjinjian/StockKLine" -> "binghuo365/StockBall"
"cetcjinjian/StockKLine" -> "kangseung/trader"
"ZaneMuir/DLUT-Emotionontology" -> "eastmountyxz/Sentiment-Analysis"
"ZaneMuir/DLUT-Emotionontology" -> "hellonlp/sentiment_analysis_dict"
"hui-z/ForgiveDB" -> "jkzing/jkzing.com"
"hui-z/ForgiveDB" -> "LKI/xixiang"
"hui-z/ForgiveDB" -> "zaihui/hutils"
"hui-z/ForgiveDB" -> "LKI/LKI"
"hui-z/ForgiveDB" -> "jkzing/bridgit"
"hui-z/ForgiveDB" -> "LKI/meican"
"hui-z/ForgiveDB" -> "dawn110110/templator"
"woniu201/WnStock" -> "cetcjinjian/StockKLine"
"woniu201/WnStock" -> "neuks/Indicator"
"weibycn/fund" -> "Jerry1014/FundCrawler"
"weibycn/fund" -> "CBJerry993/TT_Fund"
"weibycn/fund" -> "XDTD/fund_crawler"
"weibycn/fund" -> "linoodb/Python_FundCrawler"
"weibycn/fund" -> "jixiuf/fund"
"weibycn/fund" -> "refraction-ray/xalpha"
"weibycn/fund" -> "SunshowerC/fund-strategy"
"weibycn/fund" -> "luricheng/fundSpider"
"weibycn/fund" -> "freedom-xiao007/fund"
"weibycn/fund" -> "opqrst123/spider_weixin"
"weibycn/fund" -> "ZxZ7/ZFundPredictor"
"weibycn/fund" -> "MrDujing/FundCombination"
"weibycn/fund" -> "bbdLe/Fund"
"Chandlercjy/OnePy" -> "Chandlercjy/OnePy_Old"
"Chandlercjy/OnePy" -> "francinexue/xuefu"
"Chandlercjy/OnePy" -> "X0Leon/XQuant"
"Chandlercjy/OnePy" -> "msincenselee/vnpy"
"Chandlercjy/OnePy" -> "zhanggao2013/AmazingQuant" ["e"=1]
"Chandlercjy/OnePy" -> "quantOS-org/JAQS"
"Chandlercjy/OnePy" -> "JoinQuant/jqfactor_analyzer" ["e"=1]
"Chandlercjy/OnePy" -> "fja05680/pinkfish" ["e"=1]
"Chandlercjy/OnePy" -> "moonnejs/uiKLine"
"Chandlercjy/OnePy" -> "rainx/inside-zipline"
"Chandlercjy/OnePy" -> "ematvey/pybacktest" ["e"=1]
"Chandlercjy/OnePy" -> "08zhangyi/multi-factor-gm-wind-joinquant" ["e"=1]
"Chandlercjy/OnePy" -> "galois-advertising/thunder-trader"
"Chandlercjy/OnePy" -> "QuantFans/quantdigger"
"Chandlercjy/OnePy" -> "harvey1673/pyktrader"
"QUANTAXIS/qautlra-rs" -> "baiguoname/qust"
"QUANTAXIS/qautlra-rs" -> "yutiansut/QIFIAccount"
"xingbuxing/TA-Lib-in-chinese" -> "HuaRongSAO/talib-document"
"xingbuxing/TA-Lib-in-chinese" -> "zhanghan1990/zipline-chinese"
"xingbuxing/TA-Lib-in-chinese" -> "BillyZhangGuoping/MarketDataAnaylzerbyDataFrame"
"xingbuxing/TA-Lib-in-chinese" -> "Chandlercjy/OnePy"
"xingbuxing/TA-Lib-in-chinese" -> "51bitquant/bitquant" ["e"=1]
"xingbuxing/TA-Lib-in-chinese" -> "myquant/strategy"
"xingbuxing/TA-Lib-in-chinese" -> "Jornason/bitfinex_echarts" ["e"=1]
"xingbuxing/TA-Lib-in-chinese" -> "cedricporter/funcat"
"xingbuxing/TA-Lib-in-chinese" -> "msincenselee/vnpy"
"xingbuxing/TA-Lib-in-chinese" -> "JaysonAlbert/cn_zipline"
"xingbuxing/TA-Lib-in-chinese" -> "rainx/pytdx"
"xingbuxing/TA-Lib-in-chinese" -> "JoinQuant/jqfactor_analyzer" ["e"=1]
"xingbuxing/TA-Lib-in-chinese" -> "JaysonAlbert/tdx"
"xingbuxing/TA-Lib-in-chinese" -> "xingetouzi/vnpy_fxdayu" ["e"=1]
"xingbuxing/TA-Lib-in-chinese" -> "rainx/inside-zipline"
"jixiuf/fund" -> "pinple/vlight"
"zhangshuiyong/nodequant" -> "zoohanyoo/node-ctp"
"zhangshuiyong/nodequant" -> "drip-trader/dripjs"
"zhangshuiyong/nodequant" -> "yisbug/nodejs-for-FutuOpenD"
"zhangshuiyong/nodequant" -> "quant4s/quant4s"
"zhangshuiyong/nodequant" -> "MuggleWei/babeltrader"
"zhangshuiyong/nodequant" -> "waditu/tushare.js"
"zhangshuiyong/nodequant" -> "zhuzhenpeng/CTP-TradeServer"
"zhangshuiyong/nodequant" -> "fmzquant/fmz_extend_api_demo" ["e"=1]
"zhangshuiyong/nodequant" -> "shinnytech/tqsdk-js"
"zhangshuiyong/nodequant" -> "wequant-org/liveStrategyEngine" ["e"=1]
"zhangshuiyong/nodequant" -> "haifengat/hf_at"
"zhangshuiyong/nodequant" -> "QuantBox/XAPI2"
"zhangshuiyong/nodequant" -> "sun0x00/redtorch"
"zhangshuiyong/nodequant" -> "hankchan/goctp"
"zhangshuiyong/nodequant" -> "node-webot/wechat-enterprise" ["e"=1]
"sqltxt/tdx" -> "bopo/tdx2csv"
"sqltxt/tdx" -> "flysoso/py_tdx"
"sqltxt/tdx" -> "wuyanfei/tdx_fetchKlineData"
"sqltxt/tdx" -> "JaysonAlbert/cn_zipline"
"sqltxt/tdx" -> "ericyan/tdx"
"FrankBGao/HeatMap_for_TuShare" -> "FrankBGao/HeatMap_Echart_for_TuShare"
"FrankBGao/HeatMap_for_TuShare" -> "coolzhm/TuShareData"
"observerss/sinal2" -> "Emptyset110/SinaL2"
"wukan1986/qmt_quote" -> "123quant/QMT-QuantLimit"
"wukan1986/qmt_quote" -> "FinHackCN/finhack-qmt"
"123quant/QMT-QuantLimit" -> "wukan1986/qmt_quote"
"123quant/QMT-QuantLimit" -> "bravebird/qmt"
"123quant/QMT-QuantLimit" -> "silver6wings/SilverQuant"
"123quant/QMT-QuantLimit" -> "LHanLi/EzQmt"
"123quant/QMT-QuantLimit" -> "FinHackCN/finhack-qmt"
"123quant/QMT-QuantLimit" -> "freevolunteer/daban"
"123quant/QMT-QuantLimit" -> "dongjiashun/qmt_python"
"cetcjinjian/QT_StockFigure" -> "bnufree/Hq"
"kangseung/trader" -> "kangseung/jstrader2"
"hui-z/h-qrcode" -> "jkzing/jkzing.com"
"hui-z/h-qrcode" -> "privatenumber/npm-registry-sync"
"shinnytech/open-trade-gateway" ["l"="-8.632,14.52"]
"xywanz/ft" ["l"="-8.683,14.607"]
"shinnytech/shinny-futures-web" ["l"="-8.656,14.457"]
"shinnytech/shinny-futures-android" ["l"="-8.641,14.464"]
"shinnytech/shinny-futures-h5" ["l"="-8.651,14.476"]
"shinnytech/shinny-futures-ios" ["l"="-8.642,14.445"]
"shinnytech/diff" ["l"="-8.628,14.456"]
"yutiansut/QASTRATEGY101" ["l"="-8.483,14.603"]
"shinnytech/tqsdk-js" ["l"="-8.672,14.474"]
"shinnytech/open-md-gateway" ["l"="-8.631,14.478"]
"tashaxing/CTPtest" ["l"="-8.673,14.625"]
"yutiansut/QIFIAccount" ["l"="-8.464,14.612"]
"somewheve/ctpbee" ["l"="-8.608,14.445"]
"ricklamers/gridstudio" ["l"="47.987,23.36", "c"=125]
"waditu/tushare" ["l"="-8.386,14.645"]
"ta4j/ta4j" ["l"="-9.772,10.668", "c"=614]
"sun0x00/redtorch" ["l"="-8.741,14.649"]
"binux/pyspider" ["l"="48.441,23.405", "c"=125]
"klinecharts/KLineChart" ["l"="-8.444,11.539", "c"=807]
"jones2000/HQChart" ["l"="-8.5,14.784"]
"wondertrader/wondertrader" ["l"="-8.421,14.674"]
"openctp/openctp" ["l"="-8.549,14.737"]
"waditu/czsc" ["l"="-8.41,14.804"]
"PKUJohnson/OpenData" ["l"="-8.581,14.747"]
"quantOS-org/JAQS" ["l"="-8.585,14.664"]
"rainx/pytdx" ["l"="-8.539,14.715"]
"moyuanz/DevilYuan" ["l"="-8.578,14.699"]
"shidenggui/easyquotation" ["l"="-8.469,14.767"]
"LowinLi/fushare" ["l"="-8.652,14.681"]
"sinall/StrategyEase-Python-SDK" ["l"="-8.55,14.697"]
"DemonDamon/FinnewsHunter" ["l"="-8.679,14.84"]
"cedricporter/funcat" ["l"="-8.556,14.719"]
"thuquant/awesome-quant" ["l"="-8.431,14.699"]
"ricequant/rqalpha" ["l"="-8.462,14.679"]
"foolcage/fooltrader" ["l"="-8.529,14.685"]
"HuaRongSAO/talib-document" ["l"="-8.5,14.754"]
"JoinQuant/jqdatasdk" ["l"="-8.534,14.778"]
"qmhedging/poboquant" ["l"="-8.615,14.697"]
"QuantFans/quantdigger" ["l"="-8.52,14.704"]
"xingetouzi/rqalpha-mod-fxdayu-source" ["l"="-8.911,15.752", "c"=565]
"harvey1673/pyktrader" ["l"="-8.632,14.615"]
"ricequant/rqopen-client" ["l"="-8.801,14.645"]
"shizhuolin/PyCTP" ["l"="-8.699,14.616"]
"xingetouzi/jaqs-fxdayu" ["l"="-8.844,15.759", "c"=565]
"Raytone-D/puppet" ["l"="-8.587,14.686"]
"DingTobest/JQdataServiceForVNPY" ["l"="-8.695,14.597"]
"galois-advertising/thunder-trader" ["l"="-8.686,14.623"]
"sphinx-quant/sphinx-quant" ["l"="-8.668,14.686"]
"lovelylain/pyctp" ["l"="-8.655,14.615"]
"nickhuangxinyu/hft" ["l"="-8.712,14.63"]
"sngyai/Sequoia" ["l"="-8.439,14.822"]
"Rockyzsu/stock" ["l"="-8.404,14.754"]
"1nchaos/adata" ["l"="-8.444,14.875"]
"mpquant/MyTT" ["l"="-8.478,14.822"]
"myhhub/stock" ["l"="-55.234,-13.076", "c"=910]
"akfamily/akshare" ["l"="-8.353,14.76"]
"Micro-sheep/efinance" ["l"="-8.425,14.84"]
"zvtvz/zvt" ["l"="-8.435,14.763"]
"mpquant/Ashare" ["l"="-8.483,14.858"]
"shidenggui/easytrader" ["l"="-8.441,14.732"]
"axiaoxin-com/investool" ["l"="-8.425,14.896"]
"pythonstock/stock" ["l"="-8.373,14.73"]
"Vespa314/chan.py" ["l"="-8.413,14.871"]
"shidenggui/easyquant" ["l"="-8.492,14.729"]
"roq-trading/roq-api" ["l"="-10.607,12.936", "c"=265]
"opentradesolutions/opentrade" ["l"="-8.773,14.593"]
"physercoe/starquant" ["l"="-8.651,14.649"]
"pegasusTrader/PandoraTrader" ["l"="-8.607,14.662"]
"chxj1992/kline" ["l"="-8.507,11.503", "c"=807]
"mootdx/mootdx" ["l"="-8.502,14.844"]
"yutiansut/QUANTAXIS" ["l"="-8.458,14.714"]
"2557606319/H5-Kline" ["l"="-55.259,-14.229", "c"=842]
"fasiondog/hikyuu" ["l"="-8.502,14.689"]
"ctpbee/ctpbee" ["l"="-8.631,14.695"]
"kungfu-origin/kungfu" ["l"="-8.485,14.648"]
"JoinQuant/jqfactor_analyzer" ["l"="-8.68,15.771", "c"=565]
"Chandlercjy/OnePy" ["l"="-8.6,14.629"]
"hugo2046/QuantsPlaybook" ["l"="-8.397,14.778"]
"vnpy/vnpy" ["l"="-8.327,14.642"]
"zhuzhenpeng/CTP-TradeServer" ["l"="-8.669,14.607"]
"fmzquant/strategies" ["l"="-8.435,14.623"]
"QuantBox/XAPI2" ["l"="-8.618,14.64"]
"shinnytech/tqsdk-python" ["l"="-51.558,-15.082", "c"=788]
"wondertrader/wtpy" ["l"="-8.483,14.706"]
"chronoxor/CppTrader" ["l"="-10.56,12.922", "c"=265]
"zc8424/LazzyQuant" ["l"="-8.658,14.629"]
"KeyAlgo/AlgoPlus" ["l"="-8.686,14.652"]
"nicai0609/Python-CTPAPI" ["l"="-8.683,14.67"]
"yijixiuxin/chanlun-pro" ["l"="-8.401,14.897"]
"tomcat123a/-chanlun" ["l"="-8.378,14.855"]
"ibaihuo/chanvis" ["l"="-8.36,14.889"]
"bbfamily/abu" ["l"="-8.371,14.693"]
"myquant/strategy" ["l"="-8.54,14.663"]
"Yam-cn/pyalgotrade-cn" ["l"="-8.564,14.663"]
"Seedarchangel/TuChart" ["l"="-8.523,14.662"]
"constverum/Quantdom" ["l"="-8.966,13.066", "c"=105]
"EliteQuant/EliteQuant_Python" ["l"="-8.714,14.5"]
"Mayitzin/ahrs" ["l"="57.452,10.898", "c"=821]
"dlaidig/broad" ["l"="-8.799,15.45"]
"refraction-ray/xalpha" ["l"="-8.384,14.88"]
"SunshowerC/fund-strategy" ["l"="-8.376,14.936"]
"Jerry1014/FundCrawler" ["l"="-8.393,14.959"]
"x2rr/funds" ["l"="-8.329,14.951"]
"uname-yang/pysnowball" ["l"="-8.469,14.843"]
"CBJerry993/TT_Fund" ["l"="-8.403,14.992"]
"zhanghan1990/zipline-chinese" ["l"="-8.547,14.645"]
"tkfy920/qstock" ["l"="-8.464,14.862"]
"moonnejs/uiKLine" ["l"="-8.645,14.607"]
"msincenselee/vnpy" ["l"="-8.645,14.63"]
"haifengat/hfpy" ["l"="-8.653,14.596"]
"aiqtt/vnpy_future" ["l"="-8.675,14.568"]
"francinexue/xuefu" ["l"="-8.598,14.61"]
"moonnejs/PythonLab" ["l"="-8.665,14.533"]
"jiaminzou888/cppvnpy" ["l"="-8.709,14.666"]
"vvipi/VNPY_account_updater" ["l"="-8.675,14.583"]
"X0Leon/XQuant" ["l"="-8.629,14.582"]
"haifengat/pyctp" ["l"="-8.678,14.638"]
"willowj/python_dataEE" ["l"="-8.658,14.513"]
"EliteQuant/EliteQuant_Excel" ["l"="-8.713,14.439"]
"EliteQuant/EliteQuant_R" ["l"="-8.714,14.417"]
"EliteQuant/EliteQuant_Cpp" ["l"="-8.722,14.589"]
"zbarge/stocklook" ["l"="-8.754,14.395"]
"EliteQuant/EliteQuant" ["l"="-8.959,12.823", "c"=105]
"quantOS-org/quantOSUserGuide" ["l"="-8.604,14.579"]
"quantOS-org/DataCore" ["l"="-8.615,14.592"]
"quantOS-org/TradeSim" ["l"="-8.621,14.573"]
"quantOS-org/TradeApi" ["l"="-8.611,14.56"]
"quantOS-org/DataApi" ["l"="-8.628,14.557"]
"PKUJohnson/LearnJaqsByExample" ["l"="-8.607,14.52"]
"quantOS-org/tushare" ["l"="-8.617,14.551"]
"nooperpudd/ctpwrapper" ["l"="-8.656,14.663"]
"openctp/openctp-ctp-python" ["l"="-8.69,14.69"]
"keli/ctp-python" ["l"="-8.716,14.679"]
"vnpy/vnpy_ctp" ["l"="-10.6,11.039", "c"=720]
"nicai0609/JAVA-CTPAPI" ["l"="-8.756,14.625"]
"zhugf/java-trader" ["l"="-8.787,14.612"]
"sun0x00/redtorch-resources" ["l"="-8.797,14.627"]
"ktrader-tech/jctp" ["l"="-8.835,14.603"]
"tradercoder/CTPJA" ["l"="-8.774,14.54"]
"ztsec/xtp_api_java" ["l"="-8.778,14.562"]
"haoziwlh/ftdc" ["l"="-8.812,14.614"]
"binhuizhang/CTP_TradeNow" ["l"="-8.799,14.605"]
"dearleeyoung/LocalCTP" ["l"="-8.744,14.677"]
"BillyZhangGuoping/MarketDataAnaylzerbyDataFrame" ["l"="-8.632,14.596"]
"liaogx/quant" ["l"="-8.741,14.699"]
"shakenetwork/DevilYuan" ["l"="-8.74,14.718"]
"phonegapX/QuantBot" ["l"="-10.705,10.73", "c"=720]
"hichenway/stock_predict_with_LSTM" ["l"="-9.233,12.61", "c"=105]
"netblind/stockPredict" ["l"="-8.774,14.932"]
"TankZhouFirst/Pytorch-LSTM-Stock-Price-Predict" ["l"="-8.795,14.947"]
"LightingFx/hs300_stock_predict" ["l"="-8.757,14.941"]
"pengxungui/LSTM_stock" ["l"="-8.747,14.889"]
"tp-yan/WebStockPredict" ["l"="-8.713,14.902"]
"python279/stock-predict" ["l"="-8.774,14.949"]
"moyuweiqing/A-stock-prediction-algorithm-based-on-machine-learning" ["l"="-8.739,14.937"]
"LinLidi/StockSensation" ["l"="-8.72,14.859"]
"AdvancingStone/stock-data-analysis-and-prediction" ["l"="-8.705,14.941"]
"KittenCN/stock_prediction" ["l"="-8.784,14.988"]
"albert-feng/blade-fury" ["l"="-8.641,14.828"]
"Jiede1/spider-based-on-scrapy_redis-for-share-and-share-prediction-algorithm-search" ["l"="-8.719,14.958"]
"MicroEngine/DevilYuan" ["l"="-8.554,14.829"]
"MaybeWilliam/stock-price-prediction-BPNN-LSTM" ["l"="-8.797,14.977"]
"bysjlwdx/TensorFlow" ["l"="-8.807,14.908"]
"wqk666999/CNN-LSTM-Attention" ["l"="-8.814,15.014"]
"GERMINO-LiuHe/A-stock-prediction-algorithm-based-on-machine-learning" ["l"="-8.763,14.981"]
"zhengguowei/stock_prediction" ["l"="-8.812,14.949"]
"moyuweiqing/Stock-prediction-algorithm-based-on-machine-learning" ["l"="-8.744,14.97"]
"panluoluo/crawler-analysis" ["l"="50.679,27.714", "c"=104]
"pskun/finance_news_analysis" ["l"="-8.78,14.83"]
"SuperCV/Book" ["l"="-6.348,18.505", "c"=779]
"jrothschild33/learn_backtrader" ["l"="-8.455,14.803"]
"notadamking/Stock-Trading-Environment" ["l"="-9.575,14.802", "c"=970]
"wangshub/RL-Stock" ["l"="-8.367,14.796"]
"928675268/alphaquant" ["l"="-8.585,14.629"]
"asxinyu/Stock" ["l"="-8.573,14.616"]
"garydai/stock" ["l"="-8.566,14.686"]
"felixglow/Stock" ["l"="-8.585,14.586"]
"beetlex-io/Beetle.DT" ["l"="-32.949,1.074", "c"=106]
"hogenwang/comcms_core" ["l"="-32.868,0.921", "c"=106]
"chengderen/Smartflow-Sharp" ["l"="-32.861,0.905", "c"=106]
"benitoro/stockholm" ["l"="48.651,23.506", "c"=125]
"shidenggui/easyhistory" ["l"="-8.634,14.719"]
"daveqin/stock" ["l"="-8.576,14.782"]
"nladuo/THSTrader" ["l"="-8.554,14.797"]
"match5/thsauto" ["l"="-8.559,14.859"]
"zhanggao2013/AmazingQuant" ["l"="-8.633,15.779", "c"=565]
"rburkholder/trade-frame" ["l"="-10.629,12.942", "c"=265]
"HuobiRDCenter/huobi_Java" ["l"="-10.517,10.642", "c"=720]
"2bcoin/zheshiyigeniubidexiangmu" ["l"="-8.865,14.631"]
"pyecharts/pyecharts-gallery" ["l"="48.216,23.311", "c"=125]
"zlq4863947/tradingViewWikiCn" ["l"="-8.456,11.495", "c"=807]
"JiaoziMatrix/aioquant" ["l"="-10.576,10.723", "c"=720]
"sfl666/option_tools" ["l"="-5.103,-42.48", "c"=302]
"kzil88/JXQuant" ["l"="-8.571,14.729"]
"ranaroussi/quantstats" ["l"="-8.9,12.851", "c"=105]
"quantopian/alphalens" ["l"="-8.874,12.874", "c"=105]
"letianzj/QuantResearch" ["l"="-8.999,12.913", "c"=105]
"slaysd/pytorch-sentiment-analysis-classification" ["l"="53.245,28.724", "c"=1200]
"zhy0313/ea-python" ["l"="-8.473,14.747"]
"Jack-Cherish/quantitative" ["l"="-8.408,14.725"]
"geeeeeeeek/QuantStudy" ["l"="-8.761,15.753", "c"=565]
"51bitquant/bitquant" ["l"="-10.656,10.781", "c"=720]
"zwdnet/MyQuant" ["l"="-8.744,15.845", "c"=565]
"yuanxiao1/Python-Quantitative-Trading" ["l"="-8.745,15.888", "c"=565]
"hengxuZ/binance-quantization" ["l"="-10.639,10.795", "c"=720]
"FrankBGao/HeatMap_for_TuShare" ["l"="-8.726,14.811"]
"DataIntegrationAlliance/data_integration_celery" ["l"="-8.58,14.717"]
"tkfy920/PythonQuantitativeFinance" ["l"="-8.698,15.751", "c"=565]
"ailabx/ailabx" ["l"="-8.447,14.847"]
"tianjingle/zMain" ["l"="-8.578,14.849"]
"yuhanbo758/yuhanbolh" ["l"="-8.54,15.103"]
"vvipi/py3_demo_on_vnpy_ctp" ["l"="-8.689,14.582"]
"FinHackCN/finhack" ["l"="-8.647,15.736", "c"=565]
"Ckend/pythondict-quant" ["l"="-9.07,13.32", "c"=105]
"chenditc/investment_data" ["l"="-8.59,15.736", "c"=565]
"charliedream1/ai_quant_trade" ["l"="-8.371,14.826"]
"xhlgogo/Quantitative-Investment-Trading-system" ["l"="-8.769,15.843", "c"=565]
"sunnyswag/StockRL" ["l"="-8.403,14.854"]
"Gary-Hertel/StockQuant" ["l"="-8.584,14.865"]
"skyformat99/ths_trade" ["l"="-8.561,14.888"]
"wkingnet/stock-analysis" ["l"="-8.513,14.871"]
"bosspen1/stock" ["l"="-8.547,14.844"]
"yuanxiao1/QTYX-V2.0.study" ["l"="-8.736,15.939", "c"=565]
"decaywood/XueQiuSuperSpider" ["l"="-8.524,14.758"]
"08zhangyi/multi-factor-gm-wind-joinquant" ["l"="-8.778,15.761", "c"=565]
"bopo/mootdx" ["l"="-8.509,14.667"]
"newhackerman/TDXPystock" ["l"="-8.512,14.895"]
"Emptyset110/dHydra" ["l"="-8.583,14.648"]
"rainx/TdxTradeServer" ["l"="-8.568,14.641"]
"BillyZhangGuoping/VNPY2_BILLY" ["l"="-8.659,14.551"]
"garethdmm/gryphon" ["l"="-10.609,12.979", "c"=265]
"algosenses/Stock_Market_Sentiment_Analysis" ["l"="-8.773,14.893"]
"dongyuanxin/news-emotion" ["l"="-8.812,14.869"]
"Jacen789/NewsCrawler" ["l"="48.798,23.39", "c"=125]
"lemonhu/stock-knowledge-graph" ["l"="55.384,27.169", "c"=476]
"Jasonbaby/stock_recommendation_spider" ["l"="-8.747,14.83"]
"KimMeen/Weibo-Analyst" ["l"="50.008,22.056", "c"=890]
"GallenQiu/FinanceReportAnalysis" ["l"="50.464,27.433", "c"=104]
"tconsky/ChanlunX" ["l"="-8.327,14.926"]
"skanda-huayan/tdxCL" ["l"="-8.353,14.938"]
"tspooner/rl_markets" ["l"="-10.784,12.9", "c"=265]
"Edward1Chou/SentimentAnalysis" ["l"="50.055,22.12", "c"=890]
"zhangyinghahaha/data_analysis" ["l"="49.856,22.053", "c"=890]
"Python3Spiders/StockSpider" ["l"="-8.712,14.829"]
"open-trade/opentick" ["l"="-8.838,14.571"]
"yccheok/jstock" ["l"="-9.705,10.78", "c"=614]
"woniu201/WnStock" ["l"="-8.387,15.084"]
"wangdkchina/pyautotrade_tdx" ["l"="-8.553,14.574"]
"dongyuanxin/various-codes" ["l"="-8.858,14.863"]
"chaoming0625/SentimentPolarityAnalysis" ["l"="50.048,22.086", "c"=890]
"TATlong/Research-report-Classification-system" ["l"="-8.894,14.919"]
"A-Rain/BDCI2019-Negative_Finance_Info_Judge" ["l"="53.714,27.097", "c"=60]
"AimeeLee77/senti_analysis" ["l"="50.025,22.106", "c"=890]
"bung87/bixin" ["l"="50.096,22.124", "c"=890]
"DavionWu2018/Sentiment_dictionary" ["l"="-8.934,14.908"]
"rainarch/SentiBridge" ["l"="53.449,27.445", "c"=60]
"TongzheZhang/CodeOfThesis" ["l"="-8.853,14.884"]
"iaminblacklist/Financial_Analysis" ["l"="-8.877,14.882"]
"02ai/US-Stock-Option-Autotrader" ["l"="-8.481,14.442"]
"757566833/auto-build-react-redux" ["l"="-51.585,-14.841", "c"=788]
"LuochuanAD/UsefulCategory" ["l"="-51.512,-14.777", "c"=788]
"webmobiledev/vue-tradingview" ["l"="-8.431,11.466", "c"=807]
"BYVoid/TA-Lib" ["l"="-9.763,10.646", "c"=614]
"eryk/JQuant" ["l"="-8.795,14.73"]
"FutunnOpen/py-futu-api" ["l"="-8.529,14.623"]
"FutunnOpen/futuquant" ["l"="-8.627,14.671"]
"billpwchan/futu_algo" ["l"="-8.473,14.478"]
"FutunnOpen/futu-api-doc" ["l"="-8.503,14.515"]
"FutunnOpen/C-For-FutuOpenD" ["l"="-8.539,14.509"]
"zhentaoo/futu-quant" ["l"="-8.493,14.489"]
"JaysonAlbert/tdx" ["l"="-8.534,14.592"]
"JaysonAlbert/cn_zipline" ["l"="-8.517,14.596"]
"JaysonAlbert/zipline" ["l"="-8.52,14.575"]
"280185386/tdxhq" ["l"="-8.515,14.555"]
"flysoso/py_tdx" ["l"="-8.505,14.596"]
"ericyan/tdx" ["l"="-8.495,14.577"]
"wuyanfei/tdx_fetchKlineData" ["l"="-8.506,14.585"]
"EdwardLee0331/autoDownload" ["l"="-8.89,14.826"]
"QuantBox/QuantBoxXProvider" ["l"="-8.747,14.46"]
"QuantBox/OpenQuant-CTP" ["l"="-8.733,14.45"]
"zhangxiangliang/stock-api" ["l"="-8.475,14.91"]
"GraySilver/wencai" ["l"="-8.53,14.854"]
"zsrl/pywencai" ["l"="-8.524,14.881"]
"ak4stock/ths_auto_trade" ["l"="-8.56,14.899"]
"lemonche/capitalfarmer" ["l"="-8.581,14.892"]
"zjp-CN/rustdx" ["l"="-8.512,14.93"]
"wzjin/java-ctp" ["l"="-8.814,14.524"]
"xuwhyse/ctp4j" ["l"="-8.804,14.515"]
"mineralres/goshare" ["l"="-10.771,10.728", "c"=720]
"hankchan/goctp" ["l"="-8.77,14.503"]
"Rockyzsu/StockPredict" ["l"="-8.798,14.888"]
"algosenses/EastMoneySpider" ["l"="-8.856,14.952"]
"hogking/eastmoney_crawler" ["l"="-8.841,14.908"]
"chuhaojin/LSTMForSentAnalysis" ["l"="50.097,22.103", "c"=890]
"anycodes/SentimentAnalysis" ["l"="50.066,22.144", "c"=890]
"WayneDW/Sentiment-Analysis-in-Event-Driven-Stock-Price-Movement-Prediction" ["l"="-9.197,12.751", "c"=105]
"NateScarlet/holiday-cn" ["l"="-8.696,15.179"]
"LKI/chinese-calendar" ["l"="-8.672,14.996"]
"lanceliao/china-holiday-calender" ["l"="-50.711,14.791", "c"=190]
"Haoshenqi0123/holiday" ["l"="-8.722,15.237"]
"MrSeaWave/chinese-holidays" ["l"="-8.717,15.207"]
"Secbone/calendar" ["l"="-8.69,15.219"]
"Finb/Bark" ["l"="-50.71,14.906", "c"=190]
"songquanpeng/message-pusher" ["l"="-46.3,14.868", "c"=93]
"xiangyuecn/AreaCity-JsSpider-StatsGov" ["l"="-3.547,-33.255", "c"=30]
"Yikun/hub-mirror-action" ["l"="-8.696,15.352"]
"gaoguole/ctpgao" ["l"="-8.764,14.679"]
"jm199504/Financial-Time-Series" ["l"="-8.851,14.797"]
"plouto-quants/FBDQA-2019A" ["l"="-8.794,14.788"]
"lwb-xmu/Multivariate-multi-step-time-series-forecasting-via-LSTM" ["l"="45.01,24.128", "c"=166]
"xunibidev/ZTuoExchange_framework" ["l"="-10.262,13.091", "c"=265]
"IndexOutOfBounds998/quant4j" ["l"="-8.889,14.637"]
"bitted/qt" ["l"="-8.917,14.623"]
"MistraR/plank" ["l"="-8.595,14.921"]
"jadepeng/pytrader" ["l"="-8.549,14.915"]
"kingschan1204/istock" ["l"="-8.703,14.759"]
"mywildquant/ChanlunX" ["l"="-8.344,14.904"]
"sunshinelover/chanlun" ["l"="-8.299,14.902"]
"neil-pan-s/one-quant-doc" ["l"="-54.65,-13.635", "c"=219]
"neuks/Indicator" ["l"="-8.357,14.911"]
"xbfighting/ChZhShCh" ["l"="-8.285,14.87"]
"thought7878/chanlun_notes" ["l"="-8.335,14.886"]
"zengbin93/czsc_web_ui" ["l"="-8.313,14.807"]
"dogfun/chanlun" ["l"="-8.33,14.908"]
"kymeii/ChanMaster" ["l"="-8.308,14.891"]
"yutiansut/QAStrategy" ["l"="-8.422,14.647"]
"Rgveda/996Quant" ["l"="-8.4,14.823"]
"wbbhcb/stock_market" ["l"="-8.442,14.781"]
"rainx/inside-zipline" ["l"="-8.557,14.605"]
"2429298470/stock4j" ["l"="-8.778,14.736"]
"Stepka/Stock-Prediction-usning-Transformer-NN" ["l"="-8.873,15.032"]
"makaveli10/StockPrediction_Transformer" ["l"="-8.892,15.047"]
"IndexOutOfBounds998/quant-admin" ["l"="-8.936,14.63"]
"QuantWorldOrg/QuantWorld" ["l"="50.461,2.726", "c"=85]
"tigerfintech/tiger_quant" ["l"="-8.909,14.667"]
"lballabio/quantlib-old" ["l"="-8.869,13.189", "c"=105]
"QuantBox/QuantBox_XAPI" ["l"="-8.659,14.573"]
"raymon-tian/networkPublicOpinionAnalysisSystem" ["l"="50.028,21.966", "c"=890]
"Everyheart/ChanLun" ["l"="-8.255,14.881"]
"junguochan/chan-Victor" ["l"="-8.235,14.863"]
"fnsoxt/chzhshch" ["l"="-8.211,14.926"]
"datochan/ctdx" ["l"="-8.605,14.722"]
"sqltxt/tdx" ["l"="-8.492,14.669"]
"bopo/tdx2csv" ["l"="-8.498,14.614"]
"yutiansut/QUANTAXIS_RealtimeCollector" ["l"="-8.421,14.596"]
"zsrl/jqktrader" ["l"="-8.549,14.881"]
"ztsec/xtp_api_python" ["l"="-8.703,14.551"]
"MuggleWei/babeltrader" ["l"="-8.784,14.523"]
"zhaoyu162/IsaacTrade" ["l"="-8.678,14.42"]
"oldfritter/goDCE" ["l"="-10.309,13", "c"=265]
"evankirkiles/backtest-environment" ["l"="-8.797,14.548"]
"ydxt25/QuantSystem" ["l"="-8.824,14.548"]
"rigtorp/spartan" ["l"="-10.594,12.888", "c"=265]
"libtrading/libtrading" ["l"="-10.56,12.893", "c"=265]
"soarbear/imu_ekf" ["l"="57.4,10.8", "c"=821]
"Fixit-Davide/imu_zupt" ["l"="-8.767,15.447"]
"TDGarden/stock-watch" ["l"="-8.464,15.043"]
"yujintang/vscode-stock" ["l"="-8.466,15.099"]
"nooperpudd/chinastock" ["l"="-8.571,14.556"]
"1514louluo/mystock" ["l"="-8.563,14.523"]
"zhoudayang/get_recommend_stock" ["l"="-8.571,14.534"]
"volanslei/stocks" ["l"="-8.573,14.513"]
"yisbug/nodejs-for-FutuOpenD" ["l"="-8.679,14.444"]
"yisbug/node-quant" ["l"="-8.688,14.398"]
"towerd/C-For-FutuOpenD" ["l"="-8.601,14.461"]
"rainx/cn_stock_holidays" ["l"="-8.537,14.578"]
"chan2zen/rust-chan" ["l"="-8.342,14.925"]
"newquant/chanlun" ["l"="-8.323,14.9"]
"artistliao/ZenTheory" ["l"="-8.316,14.918"]
"yssource/abquant-data" ["l"="-8.377,14.9"]
"louis-gg/tdxchanbi" ["l"="-8.373,14.96"]
"windwild/daxintong-plug" ["l"="-8.302,15.052"]
"fly2sky2018/TDX_stock_dll" ["l"="-8.323,15.028"]
"py-bin/xueqiu_spider" ["l"="-8.383,14.411"]
"jasonhower/xueqiu" ["l"="-8.369,14.387"]
"Gunter-Lin/Snowball_Spider" ["l"="-8.408,14.452"]
"coolzhm/TuShareData" ["l"="-8.773,14.812"]
"jicewarwick/AShareData" ["l"="-8.808,14.825"]
"HUMANAMUH/tushare-data-sync" ["l"="-8.822,14.821"]
"mumu-2014/tushare-mysql" ["l"="-8.798,14.811"]
"HDelbert/docker-tensorflow-tushare" ["l"="-8.812,14.81"]
"leo6676284/tushare" ["l"="-8.76,14.803"]
"onewaymyway/stockdata" ["l"="-8.729,14.759"]
"AlphaSmartDog/DeepLearningNotes" ["l"="-9.639,14.704", "c"=970]
"bilibilihuangyifan/ccxtcn" ["l"="-8.652,14.855"]
"bilibilihuangyifan/marketmarker" ["l"="-8.68,14.902"]
"bilibilihuangyifan/awesome-quant" ["l"="-8.685,14.885"]
"eryk/squant" ["l"="-8.801,14.693"]
"makcyun/eastmoney_spider" ["l"="50.503,27.474", "c"=104]
"opentradesolutions/openalpha" ["l"="-8.822,14.583"]
"roq-trading/roq-cpp-samples" ["l"="-10.574,12.983", "c"=265]
"opentradesolutions/openrisk" ["l"="-8.811,14.571"]
"changye/AutoTrade" ["l"="-8.585,14.603"]
"herrkun/Financial-data-collection-from-web-" ["l"="-8.944,14.821"]
"ziweipolaris/atec2018-nlp" ["l"="53.267,27.444", "c"=60]
"Lapis-Hong/atec-nlp" ["l"="-8.921,14.854"]
"quantzzh/dlstock" ["l"="-8.825,14.775"]
"tusonggao/Stock_Automation" ["l"="-8.77,14.638"]
"ucaiado/rl_trading" ["l"="-9.547,14.716", "c"=970]
"fmzquant/fmz_extend_api_demo" ["l"="-10.683,10.682", "c"=720]
"xiaohaomao/text_extraction" ["l"="-8.933,14.937"]
"huanglaoxie0503/research_report_spider" ["l"="-8.92,14.926"]
"BlankerL/Market-Report-Generator" ["l"="-8.917,14.945"]
"qq1162667214/pyqt5-matplotlib-tushare-" ["l"="-8.792,14.908"]
"kuoted/Quotes" ["l"="-8.778,14.851"]
"ruyisee/ginkgo" ["l"="-8.761,14.91"]
"tigerfintech/openapi-python-sdk" ["l"="-9.038,14.644"]
"tigerfintech/openapi-java-sdk" ["l"="-8.984,14.653"]
"weibycn/fund" ["l"="-8.357,15.01"]
"XDTD/fund_crawler" ["l"="-8.388,15.006"]
"linoodb/Python_FundCrawler" ["l"="-8.378,15.018"]
"lihao100106/Fund_Rank_based_on_Return_Rate_and_Sharpe_Ratio" ["l"="-8.401,15.023"]
"hongrubaiding/EstimateValueData" ["l"="-8.374,14.996"]
"1zilc/fishing-funds" ["l"="-8.35,14.973"]
"dobit/tdxProxy" ["l"="-8.481,14.552"]
"tonywanggit/vnpy" ["l"="-8.689,14.556"]
"tusonggao/CTP_Simplest_Demo" ["l"="-8.741,14.612"]
"pprett/bolt" ["l"="-8.799,14.589"]
"zhuzhenpeng/CTP-MarketDataMachine" ["l"="-8.706,14.581"]
"corefan/TdxTradeServer" ["l"="-8.489,14.986"]
"bensema/gotdx" ["l"="-8.465,14.996"]
"wps1112/pytdx_backup" ["l"="-8.495,14.962"]
"roxhf/tdxapi2" ["l"="-8.486,15.03"]
"quant1x/gotdx" ["l"="-8.464,15.018"]
"yutiansut/QUANTAXIS_RandomPrice" ["l"="-8.376,14.534"]
"QUANTAXIS/quantdata" ["l"="-8.422,14.559"]
"yutiansut/qamarket-rs" ["l"="-8.383,14.549"]
"jpsml/6-DOF-Inertial-Odometry" ["l"="57.315,10.91", "c"=821]
"nisharaichur/End-to-End-Learning-Framework-for-IMU-Based-6-DOF-Odometry" ["l"="-8.849,15.527"]
"creacentblue/industry_rotation" ["l"="-8.961,14.951"]
"kanghua309/zipline" ["l"="-8.488,14.527"]
"rainx/zipline_cn_databundle" ["l"="-8.53,14.56"]
"maxmon/abu_ml" ["l"="-8.563,14.76"]
"tradequant/ZMTradeService" ["l"="-8.493,14.371"]
"tradequant/ZMStockCom" ["l"="-8.493,14.409"]
"LKI/xixiang" ["l"="-8.69,15.101"]
"zaihui/hutils" ["l"="-8.68,15.081"]
"jkzing/jkzing.com" ["l"="-8.699,15.092"]
"jkzing/bridgit" ["l"="-8.686,15.093"]
"ldsink/toolbox" ["l"="-8.668,15.1"]
"hui-z/mondrian" ["l"="-8.68,15.106"]
"zhouyantao/PythonStock" ["l"="-8.775,14.789"]
"Clearfk/lstm-rnn-stock-predict" ["l"="-8.855,14.974"]
"zyiyy/TextSentiment" ["l"="-8.865,14.918"]
"kanghua309/strategy" ["l"="-8.54,14.523"]
"jiaminzou888/OpenSource_BSD" ["l"="-8.557,14.507"]
"kanghua309/zipline-chinese" ["l"="-8.54,14.481"]
"zipline-live/zipline" ["l"="-8.813,13.112", "c"=105]
"cat-steel/stock_pick" ["l"="-8.625,14.871"]
"zhupanlinch/OneNightStand" ["l"="-8.666,14.925"]
"shidenggui/easyutils" ["l"="-8.648,14.792"]
"z991/StockWaring" ["l"="-8.655,14.893"]
"TruthHun/auction-stock" ["l"="-8.652,14.907"]
"xbfighting/chzhshch-1" ["l"="-8.189,14.941"]
"sun0x00/redtorch-web-react" ["l"="-8.838,14.623"]
"zhaoyu162/IsaacOptTrade" ["l"="-8.682,14.379"]
"zhaoyu162/IssacLv2" ["l"="-8.653,14.393"]
"leochan007/XTP.GO" ["l"="-8.817,14.503"]
"rongyuhuang/XTP.NET" ["l"="-8.831,14.493"]
"zhuhuibeishadiao/Tdx" ["l"="-8.496,14.562"]
"nullpointer/fund-crawler" ["l"="-8.37,15.152"]
"fundvis/fund-data" ["l"="-8.377,15.107"]
"observerss/sinal2" ["l"="-8.617,14.472"]
"datochan/ParseTicFile" ["l"="-8.658,14.338"]
"youngdro/fundSpider" ["l"="-8.364,15.201"]
"culi123/QtGuiSurveillanceMulti" ["l"="-8.771,14.66"]
"toby20130333/qtctp" ["l"="-8.821,14.658"]
"EliteQuant/EliteQuant_Matlab" ["l"="-8.72,14.384"]
"zle1992/atec" ["l"="53.248,27.455", "c"=60]
"rover9632/atec_nlp" ["l"="-8.958,14.855"]
"zixuanweeei/atec-sim" ["l"="-8.974,14.859"]
"jcjview/atec_nlp_sim" ["l"="-8.947,14.848"]
"JinYang88/atec_nlp_sim" ["l"="-8.954,14.87"]
"Huijun-Cui/ATEC-NLP" ["l"="53.237,27.467", "c"=60]
"wuyaqiang/Semantic_Similarity" ["l"="-8.94,14.869"]
"yutiansut/QATrader" ["l"="-8.343,14.498"]
"ijibu/gettrackersdata" ["l"="-8.625,14.427"]
"nzai/regimentation" ["l"="-8.621,14.4"]
"laihuiyuan/ATEC2018_NLP" ["l"="-9.005,14.863"]
"QUANTAXIS/quantaxis_run" ["l"="-8.435,14.527"]
"QUANTAXIS/QIFI" ["l"="-8.451,14.548"]
"quantopian/zipline" ["l"="-8.73,12.759", "c"=105]
"TA-Lib/ta-lib-python" ["l"="-8.798,12.815", "c"=105]
"mementum/backtrader" ["l"="-8.808,12.765", "c"=105]
"littlecodersh/ItChat" ["l"="48.152,23.298", "c"=125]
"LeekHub/leek-fund" ["l"="-8.337,14.847"]
"huage2580/leeks" ["l"="-8.271,14.899"]
"cteamx/Thief" ["l"="-48.804,13.156", "c"=13]
"sxei/chrome-plugin-demo" ["l"="-7.718,-34.46", "c"=48]
"huanghyw/jd_seckill" ["l"="-50.785,16.796", "c"=675]
"Hurdery/jfc" ["l"="-8.291,14.999"]
"tophubs/TopList" ["l"="-4.889,17.653", "c"=316]
"ChinaVolvocars/jd_maotai_seckill" ["l"="-50.818,16.766", "c"=675]
"Kocal/vue-web-extension" ["l"="9.204,-43.479", "c"=982]
"RL-MLDM/alphagen" ["l"="-8.588,15.752", "c"=565]
"paperswithbacktest/awesome-systematic-trading" ["l"="-8.911,12.759", "c"=105]
"wangzhe3224/awesome-systematic-trading" ["l"="-8.884,12.772", "c"=105]
"microsoft/qlib" ["l"="-8.82,12.644", "c"=105]
"Barca0412/Introduction-to-Quantitative-Finance" ["l"="-8.653,15.756", "c"=565]
"UFund-Me/Qbot" ["l"="-8.295,14.736"]
"josephchenhk/qtrader" ["l"="-10.544,10.831", "c"=720]
"BigBrotherTrade/trader" ["l"="-8.319,14.7"]
"DTShare/dtshare" ["l"="52.006,15.42", "c"=100]
"akfamily/aktools" ["l"="-8.532,14.823"]
"akfamily/awesome-data" ["l"="-8.574,14.822"]
"goldenhairs/backtrader_fund" ["l"="-8.724,15.719", "c"=565]
"edtechre/pybroker" ["l"="-8.908,12.826", "c"=105]
"zillionare/zillionare" ["l"="-8.618,14.9"]
"akfamily/akquant" ["l"="-8.619,14.823"]
"hugo2046/GetAstockFactors" ["l"="-8.631,14.849"]
"QuantWorld2022/backtrader" ["l"="-8.659,15.776", "c"=565]
"chenwr727/stock-backtrader-web-app" ["l"="-8.731,15.66", "c"=565]
"Skinok/backtrader-pyqt-ui" ["l"="-9.042,13.294", "c"=105]
"QuantBox/CTP" ["l"="-8.7,14.518"]
"niumuguang/AutoTrader" ["l"="-8.683,14.53"]
"dxtkdxtk/CTP_Center" ["l"="-8.679,14.507"]
"QuantBox/XAPI3" ["l"="-8.737,14.493"]
"zoohanyoo/node-ctp" ["l"="-8.724,14.542"]
"QuantBox/OpenQuant" ["l"="-8.719,14.463"]
"showmsg/ctp_redis" ["l"="-8.717,14.559"]
"ElemeFE/page-skeleton-webpack-plugin" ["l"="-4.009,-33.119", "c"=30]
"umijs/qiankun" ["l"="-3.87,-33.024", "c"=30]
"drlgistics/Wt4ElegantRL" ["l"="-8.634,14.76"]
"yanglbme/gitee-pages-action" ["l"="-8.706,15.394"]
"wearerequired/git-mirror-action" ["l"="-8.682,15.404"]
"hsxyhao/gridea-theme-next" ["l"="-41.916,14.862", "c"=140]
"HCLonely/hexo-theme-webstack" ["l"="-42.259,15.174", "c"=140]
"cforth/stock" ["l"="-8.554,14.588"]
"TsmileAssassin/stock_discover" ["l"="-8.55,14.553"]
"xiaobeibei26/xueiqiu_spider" ["l"="-8.448,14.509"]
"myinvestpilot/invest-alchemy" ["l"="-46.222,14.738", "c"=93]
"gbeced/pyalgotrade" ["l"="-8.802,12.896", "c"=105]
"MrDujing/FundCombination" ["l"="-8.301,15.029"]
"jumper2014/anyin-fund-investment" ["l"="-8.319,15.004"]
"eastmountyxz/Sentiment-Analysis" ["l"="-9.14,14.984"]
"ZaneMuir/DLUT-Emotionontology" ["l"="-9.123,14.963"]
"ShixiangWang/sync2gitee" ["l"="-8.669,15.367"]
"yi-Xu-0100/hub-mirror" ["l"="-8.724,15.364"]
"sazs34/MyActions" ["l"="-50.848,15.509", "c"=78]
"yi-Xu-0100/repo-list-generator" ["l"="-8.723,15.345"]
"hellonlp/sentiment-analysis" ["l"="50.015,22.132", "c"=890]
"hellonlp/sentiment_analysis_dict" ["l"="-9.162,14.966"]
"yangwohenmai/DeepLearningForTSF" ["l"="45.039,24.18", "c"=166]
"zxpeter/stock_predict_machineLearning" ["l"="-8.794,14.932"]
"cxdsz/stock-price-prediction-algorithms" ["l"="-8.77,14.966"]
"justinzm/gopup" ["l"="48.325,23.442", "c"=125]
"QikaiXu/Stock-Forecasting" ["l"="-8.819,14.934"]
"PatientEz/CNN-BiLSTM-Attention-Time-Series-Prediction_Keras" ["l"="44.945,24.186", "c"=166]
"zshicode/Attention-CLX-stock-prediction" ["l"="-8.863,15.058"]
"koi-boy/CNN-LSTM-Attention" ["l"="-8.835,15.056"]
"gangweix/Stoch-predict-with-Tranformer-LSTM" ["l"="-8.841,15.029"]
"matheusbfernandes/stock-market-prediction" ["l"="-9.342,12.631", "c"=105]
"GivyBoy/CEEMDAN-and-LSTM-CNN-CBAM" ["l"="52.464,29.759", "c"=83]
"zhengquantao/vue-kline" ["l"="-8.514,11.535", "c"=807]
"sarikayamehmet/cnn-bilstm-attention" ["l"="-8.941,15.118"]
"bytebeats/mns" ["l"="-8.207,14.892"]
"WhiteVermouth/intellij-investor-dashboard" ["l"="-8.183,14.895"]
"ggwhsd/CTP-CSharp" ["l"="-8.831,14.47"]
"shawn666liu/FtdcNet.CTP" ["l"="-8.801,14.485"]
"GuanXP/CTPSharp" ["l"="-8.846,14.464"]
"plouto-quants/FBDQA-2020S" ["l"="-8.89,14.786"]
"andyzsf/TuShare" ["l"="-8.655,14.749"]
"qta2019/QtaTraining2019" ["l"="-8.837,15.903", "c"=565]
"saturn-lab/FBDQA-2020S" ["l"="-8.917,14.786"]
"saturn-lab/BDMI-2020S" ["l"="-8.934,14.784"]
"xxjwxc/shares" ["l"="-8.485,14.938"]
"bankrollhunter/market-breadth" ["l"="-8.316,15.158"]
"hungchun-lin/Stock-price-prediction-using-GAN" ["l"="-9.471,12.827", "c"=105]
"sangyx/deep-finance" ["l"="-9.013,12.722", "c"=105]
"dukuanbing/bpnn-stock-price-prediction" ["l"="50.37,26.327", "c"=759]
"RonDen/-StockTrading" ["l"="-8.931,14.741"]
"1251240000/StockVisualization" ["l"="-8.97,14.738"]
"LakeSky/Stock-Trading-System" ["l"="-8.87,14.748"]
"hbdmapi/huobi_futures_Python" ["l"="-10.549,10.679", "c"=720]
"langhuihui/node-ctp" ["l"="-8.758,14.515"]
"zhuwuyun/CTP-TRADER" ["l"="-8.71,14.53"]
"zoohanyoo/node-trade" ["l"="-8.758,14.529"]
"fouvy/CTPFutrueProvider" ["l"="-8.784,14.49"]
"yutiansut/qaaccount-rs" ["l"="-8.403,14.542"]
"yutiansut/qatrader-rs" ["l"="-8.387,14.563"]
"AdvancingStone/stock-learning" ["l"="-8.723,14.996"]
"Shimon-Guo/chinese_sentiment_dictionary" ["l"="-9.062,14.943"]
"nishiwen1214/Keywords_cloud" ["l"="-9.09,14.947"]
"nishiwen1214/NLP-Dictionary" ["l"="-53.682,-13.753", "c"=514]
"ppzhenghua/SentimentAnalysisDictionary" ["l"="-9.026,14.934"]
"icoxfog417/awesome-financial-nlp" ["l"="53.722,27.048", "c"=60]
"MengLingchao/Chinese_financial_sentiment_dictionary" ["l"="-8.974,14.917"]
"logancyang/my-cs-degree" ["l"="52.053,15.454", "c"=100]
"pixta-dev/repository-mirroring-action" ["l"="-8.675,15.467"]
"yesolutions/mirror-action" ["l"="-8.671,15.505"]
"LeekQuant/leekquant" ["l"="-8.542,14.899"]
"limitget/THS" ["l"="-8.578,14.928"]
"Tu5039/THSTrader" ["l"="-8.595,14.902"]
"wukan1986/thsauto" ["l"="-8.577,14.911"]
"valuesimplex/FinBERT" ["l"="53.632,27.155", "c"=60]
"kengerlwl/ChipDistribution" ["l"="-8.53,14.915"]
"WestXu/support_resistance_line" ["l"="-9.156,13.234", "c"=105]
"Rgveda/GolemQ" ["l"="-8.393,14.715"]
"JINGEWU/Stock-Market-Trend-Analysis-Using-HMM-LSTM" ["l"="-52.419,14.334", "c"=592]
"phonegapX/alphasickle" ["l"="-8.728,15.771", "c"=565]
"pushpendughosh/Stock-market-forecasting" ["l"="-9.202,12.817", "c"=105]
"linxinloningg/Stockquant" ["l"="-8.665,14.871"]
"Liumce/fund_management-eastmoney" ["l"="-8.751,14.854"]
"l-passer/sentiment-analysis" ["l"="-9.195,14.971"]
"QuantBox/QuantBox.Data" ["l"="-8.753,14.419"]
"QuantBox/QuantBox.DataSimulator" ["l"="-8.74,14.428"]
"QuantBox/QuantBox.DataReceiver" ["l"="-8.747,14.441"]
"QuantBox/DemoDock" ["l"="-8.731,14.43"]
"yisier/thief-book-idea" ["l"="-53.107,-15.227", "c"=346]
"WoChen5770/leeks" ["l"="-8.201,14.911"]
"silently9527/Toolkit" ["l"="-5.249,-36.16", "c"=1193]
"Link-Kou/intellij-mybaitslog" ["l"="-3.411,11.623", "c"=15]
"dmquant/chinesecloud" ["l"="-8.886,14.607"]
"ctpbee/ctpbee_desktop" ["l"="-8.4,14.519"]
"We-Hack-Studio/nuts" ["l"="-10.683,10.771", "c"=720]
"allen-chiang/Time-Series-Transformer" ["l"="44.843,24.253", "c"=166]
"gaoguole/whfunc" ["l"="-8.829,14.682"]
"yutiansut/QACTPBeeBroker" ["l"="-8.863,14.69"]
"happydasch/btplotting" ["l"="-9.047,13.27", "c"=105]
"yutiansut/QATradeG" ["l"="-8.366,14.548"]
"ta4j/ta4j-wiki" ["l"="-9.925,10.778", "c"=614]
"near-examples/FT" ["l"="-20.657,14.208", "c"=591]
"7starsea/yijinjing-lite" ["l"="-8.75,14.597"]
"niXman/binapi" ["l"="-9.638,10.592", "c"=614]
"samyeh0527/CNN_BiLSTM_withAttention" ["l"="-8.963,15.133"]
"JeCase/LoadElectricity_Forecasting_CNN-BiLSTM-Attention" ["l"="-8.987,15.153"]
"zaviichen/pheux" ["l"="-8.717,14.607"]
"wegamekinglc/VisualPortfolio" ["l"="-8.993,13.183", "c"=105]
"sunwangme/bftrader" ["l"="-8.736,14.568"]
"mayiweb/goctp" ["l"="-8.812,14.433"]
"haifengat/goctp" ["l"="-8.838,14.405"]
"TradeXPlus/ctpgo" ["l"="-8.822,14.394"]
"peterrosetu/10jqka-1" ["l"="-8.615,15.007"]
"kingking888/10jqka" ["l"="-8.625,15.033"]
"bankrollhunter/tradingview-scripts" ["l"="-8.285,15.194"]
"bankrollhunter/lonecapital-chart" ["l"="-8.302,15.197"]
"bankrollhunter/futu-scripts" ["l"="-8.303,15.182"]
"bankrollhunter/thinkorswim-scripts" ["l"="-8.285,15.181"]
"bankrollhunter/DreamTrader" ["l"="-8.293,15.173"]
"artistliao/ZenPlot" ["l"="-8.296,14.923"]
"ktrader-tech/ktrader-broker-ctp" ["l"="-8.862,14.594"]
"ZxZ7/ZFundPredictor" ["l"="-8.369,15.041"]
"luricheng/fundSpider" ["l"="-8.383,15.032"]
"yutiansut/QAFactor_Alpha101" ["l"="-8.396,14.581"]
"yajiedesign/CTPCSharp" ["l"="-8.846,14.433"]
"nonultimate/CTPSharp" ["l"="-8.822,14.456"]
"zillionare/omega" ["l"="-8.641,14.941"]
"zillionare/omicron" ["l"="-8.644,14.928"]
"yutiansut/qamazing_community" ["l"="-8.363,14.618"]
"yutiansut/qafactor-rs_release" ["l"="-8.361,14.581"]
"wsl1999/Annual_Report_Wordstats" ["l"="-8.988,14.818"]
"StuPeter/Company_Annual_Report_Analysis_TF" ["l"="-8.964,14.822"]
"ackerr/lab" ["l"="-8.724,15.134"]
"sjy/symbols4sketch" ["l"="-8.719,15.118"]
"LKI/LKI" ["l"="-8.709,15.084"]
"LKI/dotvim" ["l"="-8.727,15.092"]
"hui-z/h-qrcode" ["l"="-8.719,15.106"]
"hui-z/ForgiveDB" ["l"="-8.695,15.073"]
"Harpes/ChloeBot" ["l"="-8.889,15.177"]
"DingpingZhang/white-raven" ["l"="-8.886,15.153"]
"synodriver/aioaria2" ["l"="-8.911,15.168"]
"wukan1986/ta_cn" ["l"="-8.626,15.819", "c"=565]
"Miya-Su/Quantitative-Trading" ["l"="-8.724,15.835", "c"=565]
"victor369basu/Real-time-stock-market-prediction" ["l"="-1.134,2.975", "c"=258]
"jm199504/Financial-Knowledge-Graphs" ["l"="55.339,27.216", "c"=476]
"hemangjoshi37a/TrendMaster" ["l"="-8.505,15.686", "c"=565]
"FengQuanLi/ResnetGPT" ["l"="58.219,18.274", "c"=45]
"yl-yue/yue-library" ["l"="52.852,3.056", "c"=391]
"springmonster/RestfulTool-Retrofit" ["l"="52.878,3.047", "c"=391]
"admin360bug/bypass" ["l"="52.886,3.039", "c"=391]
"HeisenbergEmpire/studynote" ["l"="52.897,3.033", "c"=391]
"WorldDbs/specs-actors" ["l"="52.866,3.061", "c"=391]
"dromara/northstar" ["l"="-8.875,14.666"]
"rrag/react-stockcharts" ["l"="-8.423,11.625", "c"=807]
"FengQuanLi/WZCQ" ["l"="58.185,18.249", "c"=45]
"fja05680/pinkfish" ["l"="-8.911,13.147", "c"=105]
"pywinauto/pywinauto" ["l"="-1.369,2.093", "c"=1057]
"AkatsukiYamisora/stock-prediction-with-DL" ["l"="-8.839,15.088"]
"sjev/trading-with-python" ["l"="-8.825,13.15", "c"=105]
"ai4trade/XtQuant" ["l"="-8.532,14.981"]
"hustcer/star" ["l"="-8.515,14.641"]
"tvvocold/free-for-dev-zh" ["l"="-8.595,-34.585", "c"=48]
"alexdobin/STAR" ["l"="40.746,37.317", "c"=141]
"ahmedosman/STAR" ["l"="30.189,28.675", "c"=94]
"cunjunyu/STAR" ["l"="63.385,12.658", "c"=241]
"deepfence/PacketStreamer" ["l"="-9.036,14.31", "c"=105]
"jackluson/chinese-fund-crawler" ["l"="-8.211,15.093"]
"jackluson/anchor_stock" ["l"="-8.196,15.116"]
"lusongno1/Fund-Selection" ["l"="-8.179,15.11"]
"itsuhane/SwitchKey" ["l"="26.064,-22.578", "c"=63]
"kouchao/TiantianFundApi" ["l"="-8.271,15.03"]
"huobiapi/API_Docs" ["l"="-10.644,10.604", "c"=720]
"ricequant/rqalpha-mod-vnpy" ["l"="-8.858,14.516"]
"EscapingChocolate/czsc" ["l"="-8.288,14.908"]
"wy676579037/simple-czsc" ["l"="-8.268,14.918"]
"Delta-F/DeltaTrader" ["l"="-8.607,14.844"]
"wxylssy/LSSY" ["l"="-8.625,14.925"]
"chinobing/QuantInvest" ["l"="-8.61,14.884"]
"cmiao7-illinois/stock_prediction-based-on-lstm-and-transformer" ["l"="-8.835,15.008"]
"veighna-global/vnpy_futu" ["l"="-10.676,11.064", "c"=720]
"billpwchan/DeepTrust" ["l"="-8.458,14.445"]
"Manudecara/Algo-Trading" ["l"="-8.438,14.406"]
"damonYuan/bt-futu-store" ["l"="-8.442,14.442"]
"quincylin1/futubot" ["l"="-8.458,14.427"]
"LKI/lki.github.io" ["l"="-8.723,15.07"]
"LKI/meican" ["l"="-8.707,15.062"]
"unknown-marketwizards/tradingview-desktop" ["l"="-8.278,15.226"]
"f13end/tradingview-custom-indicators" ["l"="-8.389,11.297", "c"=807]
"unknown-marketwizards/lantube" ["l"="-8.252,15.268"]
"jchang274/TrendWorld" ["l"="-8.285,15.158"]
"jamesdellinger/market_breadth" ["l"="-8.327,15.185"]
"gangweix/CGI-Stereo" ["l"="65.185,5.143", "c"=415]
"gangweix/Fast-ACVNet" ["l"="65.206,5.136", "c"=415]
"gangweix/ACVNet" ["l"="65.232,5.105", "c"=415]
"gangweix/IGEV" ["l"="65.237,5.143", "c"=415]
"gangweix/IGEV-plusplus" ["l"="65.211,5.172", "c"=415]
"FinHackCN/FinHack-Collecter" ["l"="-8.632,14.888"]
"mmdfish/StockIndicatorAnalyzer" ["l"="51.931,15.371", "c"=100]
"haifengat/hf_at" ["l"="-8.702,14.567"]
"szmile2008/FTPlugin" ["l"="-8.714,14.715"]
"FutunnOpen/FTPluginServer" ["l"="-8.695,14.717"]
"futuopen/tradeopen" ["l"="-8.754,14.732"]
"openctp/ViTrader" ["l"="-8.794,14.671"]
"Laichj/box-spider" ["l"="-8.804,14.758"]
"HaiyangYu1999/StockCrawler" ["l"="-8.846,14.758"]
"ishkong/go-cqhttp-docs" ["l"="-8.909,15.193"]
"popbo/alphas" ["l"="-8.656,15.797", "c"=565]
"gsyyysg/StockFormer" ["l"="-8.517,15.742", "c"=565]
"atomat/10jqka-API" ["l"="-8.563,14.933"]
"skyformat99/ChinaStock_TradeAPI" ["l"="-8.611,14.951"]
"stockServ/chzhshch-108-plus" ["l"="-8.163,14.944"]
"fongzhizhi/jiao-ni-chao-gu-piao" ["l"="-8.138,14.954"]
"zhoudaqing/stock_paper" ["l"="-8.174,14.932"]
"daniel-om-weber/riann" ["l"="-8.819,15.488"]
"Armanasq/End-to-End-Deep-Learning-Framework-for-Real-Time-Inertial-Attitude-Estimation-using-6DoF-IMU" ["l"="-8.831,15.512"]
"agnieszkaszczesna/RepoIMU" ["l"="-8.817,15.461"]
"Air-999/AirVideo" ["l"="-8.237,15.294"]
"misslng/10jqka" ["l"="-8.56,14.949"]
"limitget/alphaquant" ["l"="-8.593,14.969"]
"understar/Stock-Science" ["l"="-8.564,14.468"]
"wvu-navLab/gnss-ins-zupt" ["l"="-8.77,15.472"]
"lookis/livetrader" ["l"="-8.288,14.97"]
"nzai/stockrecorder" ["l"="-8.842,15.153"]
"suetming/usa_stock_data_crawler" ["l"="-8.825,15.111"]
"jiapengwei/czsc_gm" ["l"="-8.235,14.928"]
"wilsonfreitas/awesome-quant" ["l"="-8.869,12.719", "c"=105]
"lballabio/QuantLib" ["l"="-8.768,12.851", "c"=105]
"banbox/banbot" ["l"="-8.451,15.078"]
"gmsec/gmsec" ["l"="2.902,-8.773", "c"=0]
"molebot/web_ctp" ["l"="-8.744,14.585"]
"ricequant/rqalpha-mod-ctp" ["l"="-8.885,14.524"]
"gavfu/chzhshch-blog" ["l"="-8.346,14.882"]
"showmsg/xman" ["l"="-8.716,14.734"]
"drlgistics/Quantitative-analysis" ["l"="-8.665,14.78"]
"CuriousLei/chanlun" ["l"="-8.284,14.925"]
"simple-trade/simple-czsc" ["l"="-8.301,14.912"]
"xiaopc/a-udf" ["l"="-8.274,14.948"]
"superquanter/quanter" ["l"="-8.644,14.548"]
"quant4s/quant4s" ["l"="-8.754,14.575"]
"flycandy/sinalv2" ["l"="-8.614,14.607"]
"Hupperich-Manuel/LSTM-XGBoost-Hybrid-Forecasting" ["l"="-8.883,15.088"]
"zshicode/MambaStock" ["l"="-8.913,15.092"]
"Emptyset110/SinaL2" ["l"="-8.61,14.541"]
"qiujoe/StockTrader" ["l"="-8.6,14.551"]
"suzhenyu22/alphaquant" ["l"="-8.51,14.988"]
"kvarenzn/simple-pytdx" ["l"="-8.515,14.971"]
"harryhan1989/pytdxext" ["l"="-8.523,14.959"]
"dlaidig/vqf" ["l"="-8.761,15.401"]
"DusKing1/vqf-c" ["l"="-8.784,15.413"]
"dlaidig/qmt" ["l"="-8.695,15.303"]
"Yam-cn/potato" ["l"="-8.59,14.534"]
"jingzhaoyang/pyalgotrade" ["l"="-8.59,14.518"]
"riiy/emtl" ["l"="-8.557,14.967"]
"nessessary/autoxd" ["l"="-8.584,14.999"]
"namoshizun/TradePy" ["l"="-8.573,14.975"]
"simple-trade/simple-czsc-demo" ["l"="-8.269,14.93"]
"drongh/PyAutoTrading" ["l"="-8.594,14.485"]
"toby20130333/QStockCharts" ["l"="-8.449,15.215"]
"cetcjinjian/QT_StockFigure" ["l"="-8.43,15.222"]
"ak4stock/ths_tdx_stock_xueqiu_guoren" ["l"="-8.577,14.951"]
"panghu1103/trade-api" ["l"="-8.59,14.951"]
"Lucassssss/Stock" ["l"="-8.618,14.373"]
"mineralres/pytdxtrader" ["l"="-8.524,14.533"]
"ynzheng/pyautotrade_tdx" ["l"="-8.631,14.54"]
"theRockLiu/smart_trade_platform" ["l"="-8.624,14.493"]
"lfh2016/chinese-stock-Financial-Index" ["l"="-8.686,14.867"]
"dongjiashun/qmt_python" ["l"="-8.627,15.199"]
"nntaoli-project/goex" ["l"="-10.756,10.642", "c"=720]
"kf-liu/The-Art-of-Linear-Algebra-zh-CN" ["l"="51.199,28.189", "c"=104]
"richox/okcoin-leeks-reaper" ["l"="-10.663,10.642", "c"=720]
"charliedream1/ai_wiki" ["l"="-8.293,14.843"]
"TradeMaster-NTU/TradeMaster" ["l"="-8.92,12.672", "c"=105]
"ematvey/pybacktest" ["l"="-8.91,13.098", "c"=105]
"QuantFabric/QuantFabric" ["l"="-8.518,15.881", "c"=565]
"kikiqiqi/vnpy" ["l"="-8.296,14.937"]
"zsrl/tdxtrader" ["l"="-8.512,15.019"]
"xiaopc/tradingview-ashare" ["l"="-8.242,14.973"]
"gdnyfcuso/GuGu" ["l"="-8.692,14.788"]
"marvis/CTP" ["l"="-8.703,14.471"]
"Rockyzsu/xueqiu" ["l"="-8.421,14.474"]
"huichou/TradeX-API" ["l"="-8.57,14.577"]
"ruyisee/vnpy_qmt" ["l"="-8.536,15.018"]
"LHanLi/EzQmt" ["l"="-8.551,15.06"]
"FinHackCN/finhack-qmt" ["l"="-8.566,15.059"]
"zsrl/miniqmt-demo" ["l"="-8.539,15.045"]
"Rockyzsu/QMT" ["l"="-8.553,15.033"]
"wukan1986/expr_codegen" ["l"="-8.605,15.813", "c"=565]
"zsrl/bt-qmt-store" ["l"="-8.529,15.052"]
"123quant/QMT-QuantLimit" ["l"="-8.56,15.085"]
"happybeta/xtquantservice" ["l"="-8.553,15.018"]
"wukan1986/qmt_quote" ["l"="-8.557,15.049"]
"dfkai/xtquantai" ["l"="-8.512,15.041"]
"hiDaDeng/wordexpansion" ["l"="50.175,22.031", "c"=890]
"fpga2u/AXOrderBook" ["l"="-8.555,15.805", "c"=565]
"llSourcell/AI_Composer" ["l"="55.854,28.551", "c"=513]
"injoyai/tdx" ["l"="-8.444,15.032"]
"Varat7v2/STLF-BiLSTM-CNNBiLSTM" ["l"="-9.009,15.171"]
"py00128/Cryptocurrency-Price-Prediction" ["l"="-9.032,15.189"]
"QuantBox/QuantBox.APIProvider" ["l"="-8.729,14.415"]
"sunwangme/bfpy" ["l"="-8.757,14.548"]
"zxffffffff/stock-charts-cpp" ["l"="-8.438,15.283"]
"zxffffffff/stock-charts-dart" ["l"="-8.434,15.308"]
"SivanLaai/stockAnalyze" ["l"="-8.442,15.241"]
"hezhenke/AmericaStock" ["l"="-8.832,15.129"]
"ArvinLovegood/go-stock" ["l"="-8.442,14.928"]
"cgohlke/talib-build" ["l"="-8.506,14.822"]
"TA-Lib/ta-lib" ["l"="-8.904,12.964", "c"=105]
"stefan-jansen/pyfolio-reloaded" ["l"="-8.978,13.033", "c"=105]
"openctp/MiniTrader" ["l"="-8.814,14.674"]
"pseudocodes/go2ctp" ["l"="-8.829,14.697"]
"openctp/webctp" ["l"="-8.727,14.692"]
"KittenCN/predict_Lottery_ticket_pytorch" ["l"="-9.431,12.153", "c"=105]
"PlatformLab/NanoLog" ["l"="-19.963,-25.837", "c"=10]
"Jedore/ctp.examples" ["l"="-8.757,14.699"]
"openctp/openctp-ctpopt-python" ["l"="-8.723,14.704"]
"MichaelFinance/CTP_DEV_NOTE" ["l"="-8.767,14.714"]
"llSourcell/tensorflow_image_classifier" ["l"="49.751,26.778", "c"=791]
"datawhalechina/whale-quant" ["l"="-8.668,15.699", "c"=565]
"Melelery/c-binance-futures-quant" ["l"="-10.584,10.831", "c"=720]
"haifengat/hf_ctp_cs_proxy" ["l"="-8.74,14.549"]
"shawn666liu/ftdc2c_ctp" ["l"="-8.838,14.449"]
"BigBrotherTrade/backend-ctp" ["l"="-8.758,14.492"]
"BigBrotherTrade/flower" ["l"="-8.785,14.47"]
"BigBrotherTrade/dashboard" ["l"="-8.781,14.456"]
"Greedysky/TTKDownloader" ["l"="-20.36,-27.983", "c"=107]
"silver6wings/SilverQuant" ["l"="-8.534,15.067"]
"bravebird/qmt" ["l"="-8.55,15.08"]
"dendisuhubdy/quanttrade" ["l"="-8.868,14.548"]
"arthur19q3/Cookbook-for-Rustaceans-in-Finance" ["l"="-10.741,13.11", "c"=265]
"mineralres/rust-share" ["l"="-8.482,15.067"]
"QSimons/miniQMT_trade" ["l"="-8.537,15.082"]
"zsrl/xtquant-doc" ["l"="-8.519,15.08"]
"zc8424/QuantTester" ["l"="-8.838,14.73"]
"ausky/stock" ["l"="-8.764,14.752"]
"real-time-machine-learning/1-pandas-intro" ["l"="-8.93,15.003"]
"real-time-machine-learning/2-scikit-learn-intro" ["l"="-8.903,14.985"]
"real-time-machine-learning/4-rabbitmq" ["l"="-8.927,14.988"]
"real-time-machine-learning/5-elasticsearch-logstash-kibana" ["l"="-8.943,14.997"]
"real-time-machine-learning/3-docker-intro" ["l"="-8.94,14.984"]
"NextEasywood/Model-Based-Deep-Learning-for-Low-Cost-IMU-Dead-Reckoning-of-Wheeled-Mobile-Robot" ["l"="-8.831,15.533"]
"sunwangme/bfgo" ["l"="-8.761,14.559"]
"gaxxx/ctp" ["l"="-8.804,14.467"]
"pseudocodes/ctp2rs" ["l"="-8.87,14.707"]
"LHanLi/FreeBack" ["l"="-8.573,15.099"]
"LHanLi/GPminer" ["l"="-8.58,15.086"]
"jxls080511/stockPrediction" ["l"="-8.801,15.045"]
"baiguoname/qust" ["l"="-8.482,15.007"]
"maxbbraun/trump2cash" ["l"="-8.71,12.698", "c"=105]
"brianway/webporter" ["l"="-3.707,12.053", "c"=15]
"AI4Finance-Foundation/FinRobot" ["l"="-8.962,12.588", "c"=105]
"wujiyu115/meican" ["l"="-8.748,15.1"]
"banbox/banstrats" ["l"="-8.442,15.112"]
"zcyeee/EastMoney_Crawler" ["l"="-8.91,15.006"]
"Euclid-Jie/Euclidguba-search" ["l"="-8.946,15.032"]
"zillionare/pyqmt" ["l"="-8.571,15.077"]
"gsysbrj/gsysbrj.github.io" ["l"="-8.181,14.956"]
"YuYuKunKun/chanlun.py" ["l"="-8.303,14.956"]
"haifengat/hf_trade_terminal" ["l"="-8.716,14.57"]
"haifengat/hf_ctp_c_proxy" ["l"="-8.731,14.559"]
"Atik-Ahamed/TimeMachine" ["l"="44.785,24.572", "c"=166]
"freevolunteer/bondTrader" ["l"="-8.566,15.178"]
"freevolunteer/hangqing" ["l"="-8.567,15.21"]
"freevolunteer/daban" ["l"="-8.564,15.14"]
"MedicineStick/mini_gpt" ["l"="38.101,-0.029", "c"=39]
"Jedore/openctp-ctp-channels" ["l"="-8.782,14.704"]
"tusonggao/Generate_Abstract_Random_Images" ["l"="-8.818,14.636"]
"kangseung/JSTrader" ["l"="-8.669,14.817"]
"AdaJass/pyalgotrade3" ["l"="-8.58,14.492"]
"gearlessHU/xt_qmt_func" ["l"="-8.557,15.108"]
"kingschan1204/easyCrawl" ["l"="-8.756,14.771"]
"YangPeng-DistanceLearning/istock-fund" ["l"="-8.737,14.782"]
"chenerzhu/proxy-pool" ["l"="-5.187,11.554", "c"=928]
"ityouknow/awesome-spring-boot" ["l"="-4.46,15.219", "c"=92]
"viponedream/tdxhq" ["l"="-8.472,14.372"]
"ricequant/rqalpha-mod-tushare" ["l"="-8.919,14.479"]
"johnsonchak/rqalpha-mod-hello" ["l"="-8.928,14.504"]
"LouisScorpio/datamining" ["l"="-9.294,12.502", "c"=105]
"HuberTRoy/MusicBox" ["l"="-19.924,-28.959", "c"=1095]
"imspzero/chan_lun_py" ["l"="-8.231,14.948"]
"stormtrader/gw_trade" ["l"="-8.678,14.71"]
"FutunnOpen/rqalpha-mod-futu" ["l"="-8.74,14.738"]
"zznn/futu-openAPI" ["l"="-8.673,14.723"]
"279838089/meican" ["l"="-8.764,15.118"]
"injoyai/stock" ["l"="-8.43,15.059"]
"bnufree/Hq" ["l"="-8.42,15.242"]
"RainyQing/leeks" ["l"="-8.162,14.915"]
"kangseung/jstrader2" ["l"="-8.605,14.97"]
"ccxt/ccxt" ["l"="-10.57,11.645", "c"=408]
"pyecharts/pyecharts" ["l"="48.043,23.379", "c"=125]
"LLMQuant/quant-wiki" ["l"="-8.613,15.674", "c"=565]
"gaojunhuicavon/Annual" ["l"="-9.006,14.821"]
"24mlight/A_Share_investment_Agent" ["l"="-8.575,15.652", "c"=565]
"xingbuxing/TA-Lib-in-chinese" ["l"="-8.553,14.63"]
"lanzhihong6/stock-scanner" ["l"="45.844,0.556", "c"=99]
"alecm20/story-flicks" ["l"="45.684,-0.533", "c"=222]
"DR-lin-eng/stock-scanner" ["l"="45.878,0.535", "c"=99]
"yenche123/liubai" ["l"="46.362,-0.839", "c"=542]
"wequant-org/liveStrategyEngine" ["l"="-10.666,10.615", "c"=720]
"blackholll/loonflow" ["l"="8.929,-5.759", "c"=278]
"zhuifengshen/DingtalkChatbot" ["l"="8.872,-5.693", "c"=278]
"wechatpy/wechatpy" ["l"="49.829,22.656", "c"=958]
"workalendar/workalendar" ["l"="45.676,26.343", "c"=68]
"mozillazg/python-pinyin" ["l"="53.163,27.377", "c"=60]
"ls0f/phone" ["l"="-65.596,15.933", "c"=967]
"cetcjinjian/StockKLine" ["l"="-8.442,15.177"]
"binghuo365/StockBall" ["l"="-8.425,15.203"]
"kangseung/trader" ["l"="-8.517,15.096"]
"dawn110110/templator" ["l"="-8.702,15.108"]
"jixiuf/fund" ["l"="-8.306,15.078"]
"freedom-xiao007/fund" ["l"="-8.346,15.048"]
"opqrst123/spider_weixin" ["l"="-8.326,15.049"]
"bbdLe/Fund" ["l"="-8.336,15.069"]
"Chandlercjy/OnePy_Old" ["l"="-8.593,14.564"]
"QUANTAXIS/qautlra-rs" ["l"="-8.483,14.885"]
"Jornason/bitfinex_echarts" ["l"="-10.594,10.706", "c"=720]
"xingetouzi/vnpy_fxdayu" ["l"="-8.888,15.759", "c"=565]
"pinple/vlight" ["l"="-8.281,15.107"]
"zhangshuiyong/nodequant" ["l"="-8.733,14.52"]
"drip-trader/dripjs" ["l"="-8.764,14.47"]
"waditu/tushare.js" ["l"="-8.78,14.434"]
"node-webot/wechat-enterprise" ["l"="-4.446,-33.732", "c"=30]
"FrankBGao/HeatMap_Echart_for_TuShare" ["l"="-8.751,14.814"]
"privatenumber/npm-registry-sync" ["l"="-8.741,15.127"]
}