digraph G {
"PySimpleGUI/PySimpleGUI" -> "asweigart/pyautogui" ["e"=1]
"madmaze/pytesseract" -> "asweigart/pyautogui" ["e"=1]
"pndurette/gTTS" -> "TaylorSMarks/playsound" ["e"=1]
"xlwings/xlwings" -> "mhammond/pywin32" ["e"=1]
"xlwings/xlwings" -> "pywinauto/pywinauto" ["e"=1]
"mhammond/pywin32" -> "pywinauto/pywinauto"
"mhammond/pywin32" -> "asweigart/pyautogui"
"mhammond/pywin32" -> "pyinstaller/pyinstaller" ["e"=1]
"mhammond/pywin32" -> "giampaolo/psutil" ["e"=1]
"mhammond/pywin32" -> "yinkaisheng/Python-UIAutomation-for-Windows"
"mhammond/pywin32" -> "xlwings/xlwings" ["e"=1]
"mhammond/pywin32" -> "boppreh/keyboard"
"mhammond/pywin32" -> "python-openxml/python-docx" ["e"=1]
"mhammond/pywin32" -> "Nuitka/Nuitka" ["e"=1]
"mhammond/pywin32" -> "r0x0r/pywebview" ["e"=1]
"mhammond/pywin32" -> "pythonnet/pythonnet" ["e"=1]
"mhammond/pywin32" -> "python-pillow/Pillow" ["e"=1]
"mhammond/pywin32" -> "wxWidgets/Phoenix" ["e"=1]
"mhammond/pywin32" -> "moses-palmer/pynput"
"mhammond/pywin32" -> "AutoHotkey/AutoHotkey" ["e"=1]
"tebelorg/RPA-Python" -> "aisingapore/TagUI"
"tebelorg/RPA-Python" -> "open-rpa/openrpa"
"tebelorg/RPA-Python" -> "robotframework/robotframework"
"tebelorg/RPA-Python" -> "robocorp/rpaframework" ["e"=1]
"tebelorg/RPA-Python" -> "automagica/automagica"
"tebelorg/RPA-Python" -> "saucepleez/taskt"
"tebelorg/RPA-Python" -> "A9T9/RPA"
"tebelorg/RPA-Python" -> "microsoft/playwright-python" ["e"=1]
"tebelorg/RPA-Python" -> "pywinauto/pywinauto"
"tebelorg/RPA-Python" -> "asweigart/pyautogui"
"tebelorg/RPA-Python" -> "GeneralNewsExtractor/GeneralNewsExtractor" ["e"=1]
"tebelorg/RPA-Python" -> "piglei/one-python-craftsman" ["e"=1]
"tebelorg/RPA-Python" -> "wechaty/wechaty" ["e"=1]
"tebelorg/RPA-Python" -> "g1879/DrissionPage" ["e"=1]
"tebelorg/RPA-Python" -> "yinkaisheng/Python-UIAutomation-for-Windows"
"saucepleez/taskt" -> "open-rpa/openrpa"
"saucepleez/taskt" -> "arviedelgado/roro"
"saucepleez/taskt" -> "aisingapore/TagUI"
"saucepleez/taskt" -> "A9T9/RPA"
"saucepleez/taskt" -> "tfreitasleal/sharpRPA"
"saucepleez/taskt" -> "saucepleez/tasktServer"
"saucepleez/taskt" -> "automagica/automagica"
"saucepleez/taskt" -> "robocorp/rpaframework" ["e"=1]
"saucepleez/taskt" -> "tebelorg/RPA-Python"
"saucepleez/taskt" -> "robotframework/robotframework"
"saucepleez/taskt" -> "open-rpa/openflow"
"saucepleez/taskt" -> "FlaUI/FlaUI" ["e"=1]
"saucepleez/taskt" -> "rpa-ai/RPAStudio"
"saucepleez/taskt" -> "OpenBotsAI/OpenBots.Studio"
"saucepleez/taskt" -> "FlaUI/FlaUInspect"
"ClimenteA/flaskwebgui" -> "moses-palmer/pystray" ["e"=1]
"asweigart/PythonStdioGames" -> "asweigart/pyperclip" ["e"=1]
"LightBDD/LightBDD" -> "TestStack/TestStack.BDDfy" ["e"=1]
"slashdotdash/faker-cs" -> "nbuilder/nbuilder"
"takluyver/pynsist" -> "moses-palmer/pystray" ["e"=1]
"RaiMan/SikuliX-2014" -> "RaiMan/SikuliNG"
"RaiMan/SikuliX-2014" -> "sikuli/sikuli" ["e"=1]
"RaiMan/SikuliX-2014" -> "RaiMan/SikuliX1"
"asweigart/pyperclip" -> "moses-palmer/pynput"
"asweigart/pyperclip" -> "asweigart/pyautogui"
"asweigart/pyperclip" -> "boppreh/keyboard"
"asweigart/pyperclip" -> "asweigart/pyscreeze"
"asweigart/pyperclip" -> "asweigart/PyGetWindow"
"asweigart/pyperclip" -> "terryyin/clipboard"
"asweigart/pyperclip" -> "boppreh/mouse"
"asweigart/pyperclip" -> "tartley/colorama" ["e"=1]
"asweigart/pyperclip" -> "liiight/notifiers" ["e"=1]
"asweigart/pyperclip" -> "astanin/python-tabulate" ["e"=1]
"asweigart/pyperclip" -> "ActiveState/appdirs" ["e"=1]
"asweigart/pyperclip" -> "marcelotduarte/cx_Freeze" ["e"=1]
"asweigart/pyperclip" -> "wxWidgets/Phoenix" ["e"=1]
"asweigart/pyperclip" -> "jmoiron/humanize" ["e"=1]
"asweigart/pyperclip" -> "python-attrs/attrs" ["e"=1]
"BoboTiG/python-mss" -> "ra1nty/DXcam"
"BoboTiG/python-mss" -> "boppreh/mouse"
"BoboTiG/python-mss" -> "SerpentAI/D3DShot"
"BoboTiG/python-mss" -> "moses-palmer/pynput"
"BoboTiG/python-mss" -> "asweigart/PyGetWindow"
"BoboTiG/python-mss" -> "boppreh/keyboard"
"BoboTiG/python-mss" -> "learncodebygaming/pydirectinput"
"BoboTiG/python-mss" -> "ponty/pyscreenshot"
"BoboTiG/python-mss" -> "asweigart/pyautogui"
"BoboTiG/python-mss" -> "spyoungtech/ahk" ["e"=1]
"BoboTiG/python-mss" -> "learncodebygaming/opencv_tutorials"
"BoboTiG/python-mss" -> "tartley/colorama" ["e"=1]
"BoboTiG/python-mss" -> "jacexh/pyautoit"
"BoboTiG/python-mss" -> "r0x0r/pywebview" ["e"=1]
"BoboTiG/python-mss" -> "ofeksadlo/CSGO-Aimbot-CNN" ["e"=1]
"automagica/automagica" -> "aisingapore/TagUI"
"automagica/automagica" -> "open-rpa/openrpa"
"automagica/automagica" -> "tebelorg/RPA-Python"
"automagica/automagica" -> "saucepleez/taskt"
"automagica/automagica" -> "arviedelgado/roro"
"automagica/automagica" -> "robotframework/robotframework"
"automagica/automagica" -> "robocorp/rpaframework" ["e"=1]
"automagica/automagica" -> "pywinauto/pywinauto"
"automagica/automagica" -> "A9T9/RPA"
"automagica/automagica" -> "asweigart/pyautogui"
"automagica/automagica" -> "rpa-ai/RPAStudio"
"automagica/automagica" -> "yinkaisheng/Python-UIAutomation-for-Windows"
"automagica/automagica" -> "microsoft/playwright-python" ["e"=1]
"automagica/automagica" -> "open-rpa/openflow"
"automagica/automagica" -> "checkly/headless-recorder" ["e"=1]
"appium/appium-flutter-driver" -> "serhatbolsu/robotframework-appiumlibrary" ["e"=1]
"SerpentAI/D3DShot" -> "ra1nty/DXcam"
"SerpentAI/D3DShot" -> "BoboTiG/python-mss"
"SerpentAI/D3DShot" -> "SerpentAI/sneakysnek"
"SerpentAI/D3DShot" -> "learncodebygaming/pydirectinput"
"patrikoss/pyclick" -> "vincentbavitz/bezmouse"
"appium/python-client" -> "serhatbolsu/robotframework-appiumlibrary" ["e"=1]
"up1/course-robotframework" -> "drobota/robotframework-xvfb"
"up1/course-robotframework" -> "lovelysystems/robotframework-imaplibrary"
"RaiMan/SikuliX1" -> "sikuli/sikuli" ["e"=1]
"RaiMan/SikuliX1" -> "RaiMan/SikuliNG"
"RaiMan/SikuliX1" -> "RaiMan/sikulix4python"
"RaiMan/SikuliX1" -> "RaiMan/SikuliX-2014"
"RaiMan/SikuliX1" -> "pywinauto/pywinauto"
"RaiMan/SikuliX1" -> "aisingapore/TagUI"
"RaiMan/SikuliX1" -> "glitchassassin/lackey"
"RaiMan/SikuliX1" -> "asweigart/pyautogui"
"RaiMan/SikuliX1" -> "A9T9/RPA"
"RaiMan/SikuliX1" -> "microsoft/WinAppDriver"
"RaiMan/SikuliX1" -> "AirtestProject/Airtest" ["e"=1]
"RaiMan/SikuliX1" -> "robotframework/robotframework"
"RaiMan/SikuliX1" -> "yinkaisheng/Python-UIAutomation-for-Windows"
"RaiMan/SikuliX1" -> "open-rpa/openrpa"
"RaiMan/SikuliX1" -> "tebelorg/RPA-Python"
"open-rpa/openrpa" -> "saucepleez/taskt"
"open-rpa/openrpa" -> "aisingapore/TagUI"
"open-rpa/openrpa" -> "A9T9/RPA"
"open-rpa/openrpa" -> "open-rpa/openflow"
"open-rpa/openrpa" -> "robocorp/rpaframework" ["e"=1]
"open-rpa/openrpa" -> "tebelorg/RPA-Python"
"open-rpa/openrpa" -> "robotframework/robotframework"
"open-rpa/openrpa" -> "automagica/automagica"
"open-rpa/openrpa" -> "arviedelgado/roro"
"open-rpa/openrpa" -> "tfreitasleal/sharpRPA"
"open-rpa/openrpa" -> "FlaUI/FlaUI" ["e"=1]
"open-rpa/openrpa" -> "rpa-ai/RPAStudio"
"open-rpa/openrpa" -> "FlaUI/FlaUInspect"
"open-rpa/openrpa" -> "pywinauto/pywinauto"
"open-rpa/openrpa" -> "yinkaisheng/Python-UIAutomation-for-Windows"
"vincentbavitz/bezmouse" -> "patrikoss/pyclick"
"python-openxml/python-docx" -> "mhammond/pywin32" ["e"=1]
"spyoungtech/ahk" -> "boppreh/mouse" ["e"=1]
"appium/dotnet-client" -> "appium/appium-windows-driver"
"appium/dotnet-client" -> "microsoft/WinAppDriver"
"appium/dotnet-client" -> "FlaUI/FlaUInspect"
"appium/dotnet-client" -> "TestStack/UIAComWrapper"
"appium/dotnet-client" -> "appium/appium-xcuitest-driver" ["e"=1]
"zzzprojects/EntityFramework-Effort" -> "zzzprojects/nmemory"
"zzzprojects/EntityFramework-Effort" -> "nbuilder/nbuilder"
"zzzprojects/EntityFramework-Effort" -> "GitTools/GitLink" ["e"=1]
"svanoort/pyresttest" -> "MarketSquare/robotframework-requests" ["e"=1]
"machine/machine.specifications" -> "TestStack/TestStack.BDDfy" ["e"=1]
"firedm/FireDM" -> "Aboghazala/AwesomeTkinter" ["e"=1]
"andriyko/sublime-robot-framework-assistant" -> "joao-carloto/RF_Install_Script"
"andriyko/sublime-robot-framework-assistant" -> "boakley/robotframework-hub"
"andriyko/sublime-robot-framework-assistant" -> "HelioGuilherme66/RIDE"
"andriyko/sublime-robot-framework-assistant" -> "rickypc/robotframework-extendedselenium2library"
"autopilot-rs/autopy" -> "intra2net/guibot"
"autopilot-rs/autopy" -> "autopilot-rs/autopy-legacy"
"autopilot-rs/autopy" -> "autopilot-rs/autopilot-rs"
"autopilot-rs/autopy" -> "glitchassassin/lackey"
"autopilot-rs/autopy" -> "PyUserInput/PyUserInput"
"autopilot-rs/autopy" -> "asweigart/pyscreeze"
"autopilot-rs/autopy" -> "pywinauto/py_inspect"
"autopilot-rs/autopy" -> "ldtp/ldtp2"
"autopilot-rs/autopy" -> "moses-palmer/pynput"
"autopilot-rs/autopy" -> "pywinauto/pywinauto"
"blackrosezy/gui-inspect-tool" -> "pywinauto/pywinauto"
"blackrosezy/gui-inspect-tool" -> "pywinauto/py_inspect"
"blackrosezy/gui-inspect-tool" -> "yinkaisheng/Python-UIAutomation-for-Windows"
"blackrosezy/gui-inspect-tool" -> "microsoft/WinAppDriver"
"blackrosezy/gui-inspect-tool" -> "pywinauto/SWAPY"
"blackrosezy/gui-inspect-tool" -> "fangchaooo/zh-pywinauto-doc"
"blackrosezy/gui-inspect-tool" -> "glitchassassin/lackey"
"blackrosezy/gui-inspect-tool" -> "FlaUI/FlaUInspect"
"blackrosezy/gui-inspect-tool" -> "TestStack/White"
"blackrosezy/gui-inspect-tool" -> "asweigart/pyautogui"
"blackrosezy/gui-inspect-tool" -> "2gis/Winium.Desktop"
"blackrosezy/gui-inspect-tool" -> "microsoft/accessibility-insights-windows" ["e"=1]
"blackrosezy/gui-inspect-tool" -> "FlaUI/FlaUI" ["e"=1]
"blackrosezy/gui-inspect-tool" -> "xcgspring/AXUI"
"blackrosezy/gui-inspect-tool" -> "2gis/Winium"
"RaiMan/sikulix4python" -> "adrian-evo/robotframework-sikulixlibrary"
"fangchaooo/zh-pywinauto-doc" -> "beuaaa/pywinauto_recorder"
"fangchaooo/zh-pywinauto-doc" -> "langlixiaobailongqaq/python-pywinauto"
"fangchaooo/zh-pywinauto-doc" -> "blackrosezy/gui-inspect-tool"
"MarketSquare/remoteswinglibrary" -> "MarketSquare/SwingLibrary"
"Snooz82/robotframework-datadriver" -> "damies13/rfswarm"
"Snooz82/robotframework-datadriver" -> "salabs/TestArchiver"
"Snooz82/robotframework-datadriver" -> "manykarim/robotframework-doctestlibrary"
"Snooz82/robotframework-datadriver" -> "rticau/ScreenCapLibrary"
"Snooz82/robotframework-datadriver" -> "MarketSquare/robotframework-seleniumtestability"
"Snooz82/robotframework-datadriver" -> "adiralashiva8/robotframework-metrics"
"Snooz82/robotframework-datadriver" -> "adiralashiva8/robotframework-historic"
"Snooz82/robotframework-datadriver" -> "MarketSquare/robotframework-robocop"
"Snooz82/robotframework-datadriver" -> "adrianyorke/robotframework-cookbook"
"Snooz82/robotframework-datadriver" -> "Accruent/robotframework-zoomba"
"Snooz82/robotframework-datadriver" -> "GDATASoftwareAG/robotframework-flaui"
"Snooz82/robotframework-datadriver" -> "robocorp/robotframework-lsp"
"Snooz82/robotframework-datadriver" -> "Simakvokka/robotframework-imagelibrary"
"UiPath/ReFrameWork" -> "UiPath/Community.Activities"
"UiPath/ReFrameWork" -> "mihhdu/Enhanced-REFramework"
"UiPath/ReFrameWork" -> "UiPath/orchestrator-powershell"
"UiPath/ReFrameWork" -> "arviedelgado/roro"
"UiPath/ReFrameWork" -> "SharathRaju489/UiPath"
"UiPath/ReFrameWork" -> "UiPath/Infrastructure"
"SharathRaju489/UiPath" -> "vajrang-b/UiPath_ReusableCodes"
"SharathRaju489/UiPath" -> "HarshadRanganathan/uipath-learning"
"SharathRaju489/UiPath" -> "UiPath/Community.Activities"
"SharathRaju489/UiPath" -> "cristinegulescu/startUiPathFromSalesforce"
"SharathRaju489/UiPath" -> "UiPath-Services/StudioTemplates"
"SharathRaju489/UiPath" -> "rohanbaraskar/UiPath-11"
"DannyDainton/All-Things-Postman" -> "MarketSquare/awesome-robotframework" ["e"=1]
"asyrjasalo/RESTinstance" -> "MarketSquare/robotframework-requests"
"asyrjasalo/RESTinstance" -> "Snooz82/robotframework-datadriver"
"asyrjasalo/RESTinstance" -> "damies13/rfswarm"
"asyrjasalo/RESTinstance" -> "robotframework/PythonRemoteServer"
"asyrjasalo/RESTinstance" -> "MarketSquare/robotframework-browser"
"asyrjasalo/RESTinstance" -> "MarketSquare/awesome-robotframework"
"asyrjasalo/RESTinstance" -> "salabs/TestArchiver"
"asyrjasalo/RESTinstance" -> "boakley/robotframework-pageobjectlibrary"
"asyrjasalo/RESTinstance" -> "adrianyorke/robotframework-cookbook"
"asyrjasalo/RESTinstance" -> "MarketSquare/robotframework-seleniumtestability"
"asyrjasalo/RESTinstance" -> "robotframework-thailand/robotframework-jsonlibrary"
"asyrjasalo/RESTinstance" -> "Accruent/robotframework-zoomba"
"asyrjasalo/RESTinstance" -> "manykarim/robotframework-doctestlibrary"
"asyrjasalo/RESTinstance" -> "MarketSquare/robotframework-faker"
"asyrjasalo/RESTinstance" -> "rickypc/robotframework-imaplibrary"
"robotframework/WebDemo" -> "robotframework/RobotDemo"
"robotframework/WebDemo" -> "robotframework/QuickStartGuide"
"robotframework/WebDemo" -> "robotframework/HowToWriteGoodTestCases"
"robotframework/WebDemo" -> "manykarim/robotframework-doctestlibrary"
"mkorpela/pabot" -> "MarketSquare/robotframework-browser"
"mkorpela/pabot" -> "MarketSquare/robotframework-robocop"
"mkorpela/pabot" -> "MarketSquare/awesome-robotframework"
"mkorpela/pabot" -> "robotframework/SeleniumLibrary"
"mkorpela/pabot" -> "boakley/robotframework-hub"
"mkorpela/pabot" -> "adiralashiva8/robotframework-metrics"
"mkorpela/pabot" -> "xyb/robotframework-debuglibrary"
"mkorpela/pabot" -> "nokia/RED"
"mkorpela/pabot" -> "MarketSquare/robotframework-requests"
"mkorpela/pabot" -> "MarketSquare/robotframework-tidy"
"mkorpela/pabot" -> "robotframework/RIDE"
"mkorpela/pabot" -> "robotframework/PythonRemoteServer"
"mkorpela/pabot" -> "boakley/robotframework-lint"
"mkorpela/pabot" -> "damies13/rfswarm"
"mkorpela/pabot" -> "serhatbolsu/robotframework-appiumlibrary"
"microsoft/accessibility-insights-windows" -> "FlaUI/FlaUInspect" ["e"=1]
"robotframework/RobotDemo" -> "robotframework/WebDemo"
"MarketSquare/robotframework-faker" -> "MarketSquare/robotframework-archivelibrary"
"luisxiaomai/robotframework-anywherelibrary" -> "lovelysystems/robotframework-imaplibrary"
"mtrubs/intellibot" -> "AmailP/robot-plugin"
"mtrubs/intellibot" -> "lte2000/intellibot"
"mtrubs/intellibot" -> "xyb/robotframework-debuglibrary"
"mtrubs/intellibot" -> "boakley/robotframework-lint"
"mtrubs/intellibot" -> "peritus/robotframework-httplibrary"
"mtrubs/intellibot" -> "andriyko/sublime-robot-framework-assistant"
"robots-from-jupyter/robotlab" -> "MarketSquare/robotframework-seleniumscreenshots"
"robots-from-jupyter/robotkernel" -> "robots-from-jupyter/robotlab"
"robots-from-jupyter/robotkernel" -> "jupyter-xeus/xeus-robot"
"adiralashiva8/robotframework-metrics" -> "adiralashiva8/robotframework-historic"
"adiralashiva8/robotframework-metrics" -> "MarketSquare/awesome-robotframework"
"adiralashiva8/robotframework-metrics" -> "damies13/rfswarm"
"adiralashiva8/robotframework-metrics" -> "Snooz82/robotframework-datadriver"
"adiralashiva8/robotframework-metrics" -> "boakley/robotframework-hub"
"adiralashiva8/robotframework-metrics" -> "MarketSquare/robotframework-robocop"
"adiralashiva8/robotframework-metrics" -> "Accruent/robotframework-zoomba"
"adiralashiva8/robotframework-metrics" -> "MarketSquare/robotframework-browser"
"adiralashiva8/robotframework-metrics" -> "robocorp/robotframework-lsp"
"adiralashiva8/robotframework-metrics" -> "boakley/robotframework-lint"
"adiralashiva8/robotframework-metrics" -> "adrianyorke/robotframework-cookbook"
"adiralashiva8/robotframework-metrics" -> "MarketSquare/robotframework-tidy"
"adiralashiva8/robotframework-metrics" -> "mkorpela/pabot"
"adiralashiva8/robotframework-metrics" -> "nokia/RED"
"adiralashiva8/robotframework-metrics" -> "MarketSquare/robotframework-seleniumtestability"
"2gis/Winium.Cruciatus" -> "2gis/Winium.Desktop"
"2gis/Winium.Cruciatus" -> "2gis/Winium"
"2gis/Winium.Cruciatus" -> "2gis/Winium.Elements"
"adegard/tagui_scripts" -> "adegard/TagIE.ahk"
"adegard/tagui_scripts" -> "tebelorg/Tmail"
"zzzprojects/nmemory" -> "zzzprojects/EntityFramework-Effort"
"rpa-ai/RPAStudio" -> "gaojunxin/my-profile-vue" ["e"=1]
"rpa-ai/RPAStudio" -> "tfreitasleal/sharpRPA"
"rpa-ai/RPAStudio" -> "arviedelgado/roro"
"MarketSquare/Robotframework-Database-Library" -> "MarketSquare/robotframework-requests"
"MarketSquare/Robotframework-Database-Library" -> "damies13/rfswarm"
"MarketSquare/Robotframework-Database-Library" -> "MarketSquare/robotframework-faker"
"MarketSquare/Robotframework-Database-Library" -> "MarketSquare/awesome-robotframework"
"MarketSquare/Robotframework-Database-Library" -> "MarketSquare/robotframework-robocop"
"MarketSquare/Robotframework-Database-Library" -> "robotframework/robotframework.github.com"
"MarketSquare/Robotframework-Database-Library" -> "MarketSquare/robotframework-tidy"
"MarketSquare/Robotframework-Database-Library" -> "Snooz82/robotframework-datadriver"
"open-rpa/openflow" -> "open-rpa/openrpa"
"open-rpa/openflow" -> "open-rpa/docker"
"open-rpa/openflow" -> "OpenBotsAI/OpenBots.Studio"
"open-rpa/openflow" -> "skadefro/openflow"
"open-rpa/openflow" -> "open-rpa/examples-files"
"tfreitasleal/sharpRPA" -> "arviedelgado/roro"
"tfreitasleal/sharpRPA" -> "saucepleez/taskt"
"tfreitasleal/sharpRPA" -> "tsujio/OpenRPA"
"TestStack/UIAVerify" -> "TestStack/uia-custom-pattern-managed"
"Accruent/robotframework-zoomba" -> "adiralashiva8/robotframework-historic"
"Accruent/robotframework-zoomba" -> "Snooz82/robotframework-datadriver"
"Accruent/robotframework-zoomba" -> "serhatbolsu/robotframework-appiumlibrary"
"Accruent/robotframework-zoomba" -> "Omenia/robotframework-whitelibrary"
"Accruent/robotframework-zoomba" -> "adiralashiva8/robotframework-metrics"
"Accruent/robotframework-zoomba" -> "GDATASoftwareAG/robotframework-flaui"
"Accruent/robotframework-zoomba" -> "rticau/ScreenCapLibrary"
"Accruent/robotframework-zoomba" -> "MarketSquare/awesome-robotframework"
"Accruent/robotframework-zoomba" -> "MarketSquare/robotframework-seleniumtestability"
"Accruent/robotframework-zoomba" -> "adrianyorke/robotframework-cookbook"
"Accruent/robotframework-zoomba" -> "MarketSquare/robotframework-SikuliLibrary"
"Accruent/robotframework-zoomba" -> "nokia/robotframework-autoitlibrary"
"Accruent/robotframework-zoomba" -> "MarketSquare/robotframework-faker"
"Accruent/robotframework-zoomba" -> "damies13/rfswarm"
"UiPath/orchestrator-powershell" -> "UiPath/Community.Activities"
"UiPath/orchestrator-powershell" -> "bogdanripa/UiPath-Orchestrator-Smart-Scheduler"
"UiPath/orchestrator-powershell" -> "UiPath/Infrastructure"
"UiPath/orchestrator-powershell" -> "UiPath/Chatbot-Samples"
"UiPath/orchestrator-powershell" -> "mihhdu/Enhanced-REFramework"
"UiPath/orchestrator-powershell" -> "jenkinsci/uipath-automation-package-plugin"
"UiPath/orchestrator-powershell" -> "UiPath-Services/UiPath-DevOps-Scripts"
"AmailP/robot-plugin" -> "mtrubs/intellibot"
"salabs/TestArchiver" -> "salabs/Epimetheus"
"intra2net/guibot" -> "autopilot-rs/autopy"
"UiPath/Chatbot-Samples" -> "bogdanripa/UiPath-Orchestrator-Smart-Scheduler"
"vajrang-b/UiPath_ReusableCodes" -> "cristinegulescu/startUiPathFromSalesforce"
"microsoft/playwright-python" -> "asweigart/pyautogui" ["e"=1]
"microsoft/playwright-python" -> "tebelorg/RPA-Python" ["e"=1]
"kivy/python-for-android" -> "asweigart/pyautogui" ["e"=1]
"asweigart/pyautogui" -> "pywinauto/pywinauto"
"asweigart/pyautogui" -> "boppreh/keyboard"
"asweigart/pyautogui" -> "pyinstaller/pyinstaller" ["e"=1]
"asweigart/pyautogui" -> "mhammond/pywin32"
"asweigart/pyautogui" -> "microsoft/playwright-python" ["e"=1]
"asweigart/pyautogui" -> "PySimpleGUI/PySimpleGUI" ["e"=1]
"asweigart/pyautogui" -> "moses-palmer/pynput"
"asweigart/pyautogui" -> "yinkaisheng/Python-UIAutomation-for-Windows"
"asweigart/pyautogui" -> "asweigart/pyperclip"
"asweigart/pyautogui" -> "Nuitka/Nuitka" ["e"=1]
"asweigart/pyautogui" -> "chriskiehl/Gooey" ["e"=1]
"asweigart/pyautogui" -> "tebelorg/RPA-Python"
"asweigart/pyautogui" -> "giampaolo/psutil" ["e"=1]
"asweigart/pyautogui" -> "joke2k/faker" ["e"=1]
"asweigart/pyautogui" -> "psf/requests-html" ["e"=1]
"pyinstaller/pyinstaller" -> "asweigart/pyautogui" ["e"=1]
"pyinstaller/pyinstaller" -> "mhammond/pywin32" ["e"=1]
"mozilla/geckodriver" -> "robotframework/robotframework" ["e"=1]
"mozilla/geckodriver" -> "asweigart/pyautogui" ["e"=1]
"robotframework/robotframework" -> "robotframework/SeleniumLibrary"
"robotframework/robotframework" -> "aisingapore/TagUI"
"robotframework/robotframework" -> "open-rpa/openrpa"
"robotframework/robotframework" -> "tebelorg/RPA-Python"
"robotframework/robotframework" -> "robotframework/RIDE"
"robotframework/robotframework" -> "robocorp/rpaframework" ["e"=1]
"robotframework/robotframework" -> "appium/appium" ["e"=1]
"robotframework/robotframework" -> "saucepleez/taskt"
"robotframework/robotframework" -> "pytest-dev/pytest" ["e"=1]
"robotframework/robotframework" -> "automagica/automagica"
"robotframework/robotframework" -> "SeleniumHQ/selenium" ["e"=1]
"robotframework/robotframework" -> "mkorpela/pabot"
"robotframework/robotframework" -> "atinfo/awesome-test-automation" ["e"=1]
"robotframework/robotframework" -> "allure-framework/allure2" ["e"=1]
"robotframework/robotframework" -> "MarketSquare/robotframework-browser"
"robotframework/SeleniumLibrary" -> "MarketSquare/robotframework-requests"
"robotframework/SeleniumLibrary" -> "robotframework/RIDE"
"robotframework/SeleniumLibrary" -> "robotframework/robotframework"
"robotframework/SeleniumLibrary" -> "mkorpela/pabot"
"robotframework/SeleniumLibrary" -> "serhatbolsu/robotframework-appiumlibrary"
"robotframework/SeleniumLibrary" -> "MarketSquare/robotframework-browser"
"robotframework/SeleniumLibrary" -> "robotframework/HowToWriteGoodTestCases"
"robotframework/SeleniumLibrary" -> "MarketSquare/awesome-robotframework"
"robotframework/SeleniumLibrary" -> "MarketSquare/SSHLibrary"
"robotframework/SeleniumLibrary" -> "nokia/RED"
"robotframework/SeleniumLibrary" -> "boakley/robotframework-lint"
"robotframework/SeleniumLibrary" -> "boakley/robotframework-hub"
"robotframework/SeleniumLibrary" -> "robotframework/QuickStartGuide"
"robotframework/SeleniumLibrary" -> "MarketSquare/Robotframework-Database-Library"
"robotframework/SeleniumLibrary" -> "ppodgorsek/docker-robot-framework"
"serhatbolsu/robotframework-appiumlibrary" -> "MarketSquare/robotframework-requests"
"serhatbolsu/robotframework-appiumlibrary" -> "Accruent/robotframework-zoomba"
"serhatbolsu/robotframework-appiumlibrary" -> "robotframework/SeleniumLibrary"
"serhatbolsu/robotframework-appiumlibrary" -> "MarketSquare/robotframework-SikuliLibrary"
"serhatbolsu/robotframework-appiumlibrary" -> "MarketSquare/awesome-robotframework"
"serhatbolsu/robotframework-appiumlibrary" -> "mkorpela/pabot"
"serhatbolsu/robotframework-appiumlibrary" -> "boakley/robotframework-lint"
"serhatbolsu/robotframework-appiumlibrary" -> "eficode/robotframework-imagehorizonlibrary"
"serhatbolsu/robotframework-appiumlibrary" -> "Snooz82/robotframework-datadriver"
"serhatbolsu/robotframework-appiumlibrary" -> "luisxiaomai/robotframework-anywherelibrary"
"serhatbolsu/robotframework-appiumlibrary" -> "appium/python-client" ["e"=1]
"serhatbolsu/robotframework-appiumlibrary" -> "lovelysystems/robotframework-ioslibrary"
"serhatbolsu/robotframework-appiumlibrary" -> "MarketSquare/Robotframework-Database-Library"
"serhatbolsu/robotframework-appiumlibrary" -> "MarketSquare/robotframework-browser"
"serhatbolsu/robotframework-appiumlibrary" -> "robotframework/HowToWriteGoodTestCases"
"winpython/winpython" -> "mhammond/pywin32" ["e"=1]
"baijum/selenium-python" -> "robotframework/SeleniumLibrary" ["e"=1]
"appium-boneyard/sample-code" -> "serhatbolsu/robotframework-appiumlibrary" ["e"=1]
"TestLinkOpenSourceTRMS/testlink-code" -> "robotframework/RIDE" ["e"=1]
"ms7m/notify-py" -> "YuriyLisovskiy/pynotifier"
"MarketSquare/SSHLibrary" -> "MarketSquare/SwingLibrary"
"MarketSquare/SSHLibrary" -> "boakley/robotframework-hub"
"MarketSquare/SSHLibrary" -> "boakley/robotframework-lint"
"MarketSquare/SSHLibrary" -> "MarketSquare/Rammbock"
"MarketSquare/SSHLibrary" -> "robotframework/PythonRemoteServer"
"KianBrose/Image-Recognition-Botting-Tutorial" -> "KianBrose/Python-botting-butorial-part-2"
"robotframework/QuickStartGuide" -> "robotframework/HowToWriteGoodTestCases"
"robotframework/QuickStartGuide" -> "robotframework/WebDemo"
"robotframework/QuickStartGuide" -> "robotframework/RobotDemo"
"robotframework/QuickStartGuide" -> "robotframework/SeleniumLibrary"
"robotframework/QuickStartGuide" -> "robotframework/RIDE"
"robotframework/QuickStartGuide" -> "boakley/robotframework-hub"
"robotframework/QuickStartGuide" -> "MarketSquare/robotframework-requests"
"robotframework/QuickStartGuide" -> "nokia/RED"
"robotframework/QuickStartGuide" -> "peritus/robotframework-httplibrary"
"robotframework/QuickStartGuide" -> "boakley/robotframework-lint"
"tryptech/obs-zoom-and-follow" -> "Kalmat/PyWinCtl" ["e"=1]
"sikuli/sikuli" -> "RaiMan/SikuliX-2014" ["e"=1]
"sikuli/sikuli" -> "RaiMan/SikuliNG" ["e"=1]
"sikuli/sikuli" -> "RaiMan/SikuliX1" ["e"=1]
"sikuli/sikuli" -> "pywinauto/pywinauto" ["e"=1]
"sikuli/sikuli" -> "glitchassassin/lackey" ["e"=1]
"sikuli/sikuli" -> "2gis/Winium.Desktop" ["e"=1]
"learncodebygaming/opencv_tutorials" -> "learncodebygaming/pydirectinput"
"learncodebygaming/opencv_tutorials" -> "ClarityCoders/ComputerVision-OpenCV"
"learncodebygaming/opencv_tutorials" -> "ClarityCoders/Fall-Guys-AI"
"learncodebygaming/opencv_tutorials" -> "moises-dias/yolo-opencv-detector"
"learncodebygaming/opencv_tutorials" -> "learncodebygaming/enb_bot"
"learncodebygaming/opencv_tutorials" -> "ra1nty/DXcam"
"learncodebygaming/opencv_tutorials" -> "KianBrose/Image-Recognition-Botting-Tutorial"
"learncodebygaming/opencv_tutorials" -> "6ftClaud/Lineage-Bot"
"mkorpela/RoboMachine" -> "pavlobaron/robotframework-soapuilibrary"
"mkorpela/RoboMachine" -> "ombre42/robotframework-sudslibrary"
"mkorpela/RoboMachine" -> "joao-carloto/RF_Install_Script"
"mkorpela/RoboMachine" -> "peterservice-rnd/robotframework-jsonvalidator"
"adrianyorke/robotframework-cookbook" -> "MarketSquare/awesome-robotframework"
"adrianyorke/robotframework-cookbook" -> "MarketSquare/robotframework-robocop"
"adrianyorke/robotframework-cookbook" -> "MarketSquare/robotframework-browser"
"adrianyorke/robotframework-cookbook" -> "Snooz82/robotframework-datadriver"
"adrianyorke/robotframework-cookbook" -> "adiralashiva8/robotframework-historic"
"adrianyorke/robotframework-cookbook" -> "MarketSquare/robotframework-tidy"
"adrianyorke/robotframework-cookbook" -> "damies13/rfswarm"
"adrianyorke/robotframework-cookbook" -> "robocorp/robotframework-lsp"
"adrianyorke/robotframework-cookbook" -> "robotcodedev/robotcode"
"adrianyorke/robotframework-cookbook" -> "ppodgorsek/docker-robot-framework"
"adrianyorke/robotframework-cookbook" -> "salabs/TestArchiver"
"adrianyorke/robotframework-cookbook" -> "robots-from-jupyter/robotkernel"
"adrianyorke/robotframework-cookbook" -> "Accruent/robotframework-zoomba"
"adrianyorke/robotframework-cookbook" -> "boakley/robotframework-pageobjectlibrary"
"adrianyorke/robotframework-cookbook" -> "adiralashiva8/robotframework-metrics"
"RaiMan/SikuliNG" -> "RaiMan/SikuliX-2014"
"RaiMan/SikuliNG" -> "sikuli/sikuli" ["e"=1]
"RaiMan/SikuliNG" -> "RaiMan/SikuliX1"
"RaiMan/SikuliNG" -> "SikuliX/SikuliX-Docs"
"RaiMan/SikuliNG" -> "christianrondeau/SikuliSharp"
"mehdime/DbContextScope" -> "zzzprojects/EntityFramework-Effort" ["e"=1]
"MarketSquare/robotframework-browser" -> "MarketSquare/robotframework-robocop"
"MarketSquare/robotframework-browser" -> "damies13/rfswarm"
"MarketSquare/robotframework-browser" -> "mkorpela/pabot"
"MarketSquare/robotframework-browser" -> "MarketSquare/robotframework-tidy"
"MarketSquare/robotframework-browser" -> "adrianyorke/robotframework-cookbook"
"MarketSquare/robotframework-browser" -> "robotcodedev/robotcode"
"MarketSquare/robotframework-browser" -> "robocorp/robotframework-lsp"
"MarketSquare/robotframework-browser" -> "MarketSquare/awesome-robotframework"
"MarketSquare/robotframework-browser" -> "Snooz82/robotframework-datadriver"
"MarketSquare/robotframework-browser" -> "adiralashiva8/robotframework-metrics"
"MarketSquare/robotframework-browser" -> "ppodgorsek/docker-robot-framework"
"MarketSquare/robotframework-browser" -> "manykarim/robotframework-doctestlibrary"
"MarketSquare/robotframework-browser" -> "adiralashiva8/robotframework-historic"
"MarketSquare/robotframework-browser" -> "robotframework/SeleniumLibrary"
"MarketSquare/robotframework-browser" -> "MarketSquare/robotframework-requests"
"OpenBotsAI/OpenBots.Studio" -> "OpenBotsAI/OpenBots.Server"
"robotframework/RIDE" -> "nokia/RED"
"robotframework/RIDE" -> "robotframework/SeleniumLibrary"
"robotframework/RIDE" -> "mkorpela/pabot"
"robotframework/RIDE" -> "robotframework/robotframework"
"robotframework/RIDE" -> "MarketSquare/SSHLibrary"
"robotframework/RIDE" -> "boakley/robotframework-hub"
"robotframework/RIDE" -> "HelioGuilherme66/RIDE"
"robotframework/RIDE" -> "robotframework/HowToWriteGoodTestCases"
"robotframework/RIDE" -> "MarketSquare/robotframework-requests"
"robotframework/RIDE" -> "adiralashiva8/robotframework-metrics"
"robotframework/RIDE" -> "MarketSquare/awesome-robotframework"
"robotframework/RIDE" -> "robotframework/PythonRemoteServer"
"robotframework/RIDE" -> "robotframework/QuickStartGuide"
"robotframework/RIDE" -> "serhatbolsu/robotframework-appiumlibrary"
"robotframework/RIDE" -> "andriyko/sublime-robot-framework-assistant"
"asweigart/pyscreeze" -> "asweigart/pytweening"
"asweigart/pyscreeze" -> "asweigart/PyGetWindow"
"nbuilder/nbuilder" -> "garethdown44/nbuilder"
"nbuilder/nbuilder" -> "oriches/faker-cs"
"nbuilder/nbuilder" -> "slashdotdash/faker-cs"
"nbuilder/nbuilder" -> "AutoFixture/AutoFixture" ["e"=1]
"nbuilder/nbuilder" -> "TestStack/TestStack.BDDfy"
"nbuilder/nbuilder" -> "zzzprojects/EntityFramework-Effort"
"nbuilder/nbuilder" -> "nickdodd79/AutoBogus" ["e"=1]
"MarketSquare/robotframework-robocop" -> "MarketSquare/robotframework-tidy"
"MarketSquare/robotframework-robocop" -> "damies13/rfswarm"
"MarketSquare/robotframework-robocop" -> "adrianyorke/robotframework-cookbook"
"MarketSquare/robotframework-robocop" -> "MarketSquare/robotframework-browser"
"MarketSquare/robotframework-robocop" -> "robotcodedev/robotcode"
"MarketSquare/robotframework-robocop" -> "boakley/robotframework-lint"
"MarketSquare/robotframework-robocop" -> "MarketSquare/roboswag"
"MarketSquare/robotframework-robocop" -> "Snooz82/robotframework-datadriver"
"MarketSquare/robotframework-robocop" -> "MarketSquare/awesome-robotframework"
"MarketSquare/robotframework-robocop" -> "robocorp/robotframework-lsp"
"MarketSquare/robotframework-robocop" -> "mkorpela/pabot"
"MarketSquare/robotframework-robocop" -> "MarketSquare/robotframework-sherlock"
"MarketSquare/robotframework-robocop" -> "adiralashiva8/robotframework-metrics"
"MarketSquare/robotframework-robocop" -> "adiralashiva8/robotframework-historic"
"MarketSquare/robotframework-robocop" -> "ppodgorsek/docker-robot-framework"
"asweigart/PyGetWindow" -> "Kalmat/PyWinCtl"
"asweigart/PyGetWindow" -> "asweigart/pyscreeze"
"asweigart/PyGetWindow" -> "BoboTiG/python-mss"
"asweigart/PyGetWindow" -> "boppreh/mouse"
"asweigart/PyGetWindow" -> "glitchassassin/lackey"
"asweigart/PyGetWindow" -> "moses-palmer/pystray"
"learncodebygaming/pydirectinput" -> "learncodebygaming/opencv_tutorials"
"learncodebygaming/pydirectinput" -> "ReggX/pydirectinput_rgx"
"learncodebygaming/pydirectinput" -> "kennyhml/pyinterception" ["e"=1]
"learncodebygaming/pydirectinput" -> "bode135/pydamo" ["e"=1]
"learncodebygaming/pydirectinput" -> "SerpentAI/D3DShot"
"learncodebygaming/pydirectinput" -> "WallBreaker2/op" ["e"=1]
"learncodebygaming/pydirectinput" -> "BestBurning/kmclassdll" ["e"=1]
"learncodebygaming/pydirectinput" -> "BoboTiG/python-mss"
"learncodebygaming/pydirectinput" -> "ddxoft/master" ["e"=1]
"learncodebygaming/pydirectinput" -> "moses-palmer/pynput"
"learncodebygaming/pydirectinput" -> "starofrainnight/pywinio" ["e"=1]
"learncodebygaming/pydirectinput" -> "ItGarbager/aimcf_yolov5" ["e"=1]
"learncodebygaming/pydirectinput" -> "jacexh/pyautoit"
"learncodebygaming/pydirectinput" -> "ra1nty/DXcam"
"learncodebygaming/pydirectinput" -> "patrikoss/pyclick"
"lte2000/intellibot" -> "mtrubs/intellibot"
"boakley/robotframework-lint" -> "boakley/robotframework-hub"
"boakley/robotframework-lint" -> "robotframework/PythonLibCore"
"boakley/robotframework-lint" -> "MarketSquare/robotframework-robocop"
"boakley/robotframework-lint" -> "xyb/robotframework-debuglibrary"
"boakley/robotframework-lint" -> "MarketSquare/awesome-robotframework"
"boakley/robotframework-lint" -> "MarketSquare/robotframework-tidy"
"boakley/robotframework-lint" -> "nokia/RED"
"boakley/robotframework-lint" -> "pbylicki/rfhub2"
"MarketSquare/robotframework-requests" -> "MarketSquare/Robotframework-Database-Library"
"MarketSquare/robotframework-requests" -> "serhatbolsu/robotframework-appiumlibrary"
"MarketSquare/robotframework-requests" -> "asyrjasalo/RESTinstance"
"MarketSquare/robotframework-requests" -> "robotframework/SeleniumLibrary"
"MarketSquare/robotframework-requests" -> "MarketSquare/awesome-robotframework"
"MarketSquare/robotframework-requests" -> "peritus/robotframework-httplibrary"
"MarketSquare/robotframework-requests" -> "mkorpela/pabot"
"MarketSquare/robotframework-requests" -> "MarketSquare/robotframework-browser"
"MarketSquare/robotframework-requests" -> "robotframework/HowToWriteGoodTestCases"
"MarketSquare/robotframework-requests" -> "boakley/robotframework-hub"
"MarketSquare/robotframework-requests" -> "Snooz82/robotframework-datadriver"
"MarketSquare/robotframework-requests" -> "up1/course-robotframework"
"MarketSquare/robotframework-requests" -> "adiralashiva8/robotframework-metrics"
"MarketSquare/robotframework-requests" -> "boakley/robotframework-lint"
"MarketSquare/robotframework-requests" -> "xyb/robotframework-debuglibrary"
"damies13/rfswarm" -> "MarketSquare/roboswag"
"damies13/rfswarm" -> "MarketSquare/robotframework-robocop"
"damies13/rfswarm" -> "adiralashiva8/robotframework-historic"
"damies13/rfswarm" -> "robocorp/robotframework-lsp"
"damies13/rfswarm" -> "salabs/TestArchiver"
"damies13/rfswarm" -> "Snooz82/robotframework-datadriver"
"damies13/rfswarm" -> "jessezach/RobotEyes"
"damies13/rfswarm" -> "MarketSquare/robotframework-tidy"
"damies13/rfswarm" -> "MarketSquare/robotframework-openapidriver"
"damies13/rfswarm" -> "MarketSquare/robotframework-browser"
"damies13/rfswarm" -> "MarketSquare/robotframework-style-guide"
"damies13/rfswarm" -> "adiralashiva8/robotframework-metrics"
"damies13/rfswarm" -> "robotcodedev/robotcode"
"robocorp/robotframework-lsp" -> "robocorp/action-trigger-process"
"robocorp/robotframework-lsp" -> "damies13/rfswarm"
"robocorp/robotframework-lsp" -> "MarketSquare/robotframework-tidy"
"robocorp/robotframework-lsp" -> "robocorp/rcc" ["e"=1]
"robocorp/robotframework-lsp" -> "robocorp/robotframework-output-stream"
"robocorp/robotframework-lsp" -> "robocorp/action-upload-robot"
"robocorp/robotframework-lsp" -> "MarketSquare/robotframework-robocop"
"robocorp/robotframework-lsp" -> "robots-from-jupyter/robotkernel"
"robocorp/robotframework-lsp" -> "MarketSquare/robotframework-browser"
"robocorp/robotframework-lsp" -> "Snooz82/robotframework-datadriver"
"robocorp/robotframework-lsp" -> "tomi/vscode-rf-language-server"
"robocorp/robotframework-lsp" -> "adrianyorke/robotframework-cookbook"
"robocorp/robotframework-lsp" -> "adiralashiva8/robotframework-historic"
"robocorp/robotframework-lsp" -> "MarketSquare/robotframework-seleniumtestability"
"robocorp/robotframework-lsp" -> "adiralashiva8/robotframework-metrics"
"xyb/robotframework-debuglibrary" -> "robotframework-thailand/robotframework-jsonlibrary"
"xyb/robotframework-debuglibrary" -> "boakley/robotframework-hub"
"xyb/robotframework-debuglibrary" -> "boakley/robotframework-lint"
"xyb/robotframework-debuglibrary" -> "userzimmermann/robotframework-tools"
"jupyter-xeus/xeus-robot" -> "jupyter-xeus/xeus-python-wheel"
"ClarityCoders/Fall-Guys-AI" -> "ClarityCoders/ZigZag"
"ClarityCoders/Fall-Guys-AI" -> "learncodebygaming/opencv_tutorials"
"boakley/robotframework-hub" -> "boakley/robotframework-lint"
"boakley/robotframework-hub" -> "boakley/robotframework-pageobjectlibrary"
"boakley/robotframework-hub" -> "ncbi/robotframework-pageobjects"
"boakley/robotframework-hub" -> "mkorpela/RoboMachine"
"boakley/robotframework-hub" -> "molsky/robotframework-dashboard"
"boakley/robotframework-hub" -> "xyb/robotframework-debuglibrary"
"boakley/robotframework-hub" -> "robotframework/PythonRemoteServer"
"boakley/robotframework-hub" -> "luisxiaomai/robotframework-anywherelibrary"
"boakley/robotframework-hub" -> "rickypc/robotframework-extendedselenium2library"
"boakley/robotframework-hub" -> "dmizverev/robot-framework-library"
"boakley/robotframework-hub" -> "andriyko/sublime-robot-framework-assistant"
"boakley/robotframework-hub" -> "MarketSquare/robotframework-angularjs"
"boakley/robotframework-hub" -> "drobota/robotframework-xvfb"
"boakley/robotframework-hub" -> "nokia/RED"
"boakley/robotframework-hub" -> "lovelysystems/robotframework-ioslibrary"
"xcgspring/AXUI" -> "arkottke/winguiauto"
"HelioGuilherme66/RIDE" -> "andriyko/sublime-robot-framework-assistant"
"adiralashiva8/robotframework-historic" -> "adiralashiva8/robotframework-metrics"
"adiralashiva8/robotframework-historic" -> "Simakvokka/robotframework-imagelibrary"
"adiralashiva8/robotframework-historic" -> "manykarim/robotframework-doctestlibrary"
"adiralashiva8/robotframework-historic" -> "damies13/rfswarm"
"adiralashiva8/robotframework-historic" -> "adiralashiva8/robotframework-examples"
"Tesena-smart-testing/WatchUI" -> "manykarim/robotframework-doctestlibrary"
"robotframework/LibraryApiExamples" -> "robotframework/Generator"
"wgnet/webium" -> "ncbi/robotframework-pageobjects" ["e"=1]
"ncbi/robotframework-pageobjects" -> "boakley/robotframework-hub"
"ncbi/robotframework-pageobjects" -> "daluu/robotframework-simple-page-object-example"
"ncbi/robotframework-pageobjects" -> "alisaifee/holmium.core" ["e"=1]
"ncbi/robotframework-pageobjects" -> "luisxiaomai/robotframework-anywherelibrary"
"ncbi/robotframework-pageobjects" -> "boakley/robotframework-pageobjectlibrary"
"ncbi/robotframework-pageobjects" -> "rickypc/robotframework-extendedselenium2library"
"ncbi/robotframework-pageobjects" -> "wgnet/webium" ["e"=1]
"beuaaa/pywinauto_recorder" -> "pywinauto/py_inspect"
"beuaaa/pywinauto_recorder" -> "dm-vodopyanov/py_inspect"
"joao-carloto/RF_Install_Script" -> "joao-carloto/FireRobot"
"wechaty/dotnet-wechaty" -> "wechaty/dotnet-wechaty-getting-started"
"open-rpa/examples-files" -> "open-rpa/docker"
"MarketSquare/SwingLibrary" -> "MarketSquare/remoteswinglibrary"
"MarketSquare/SwingLibrary" -> "MarketSquare/SSHLibrary"
"joonvena/robotframework-docker-action" -> "joonvena/robotframework-reporter-action"
"salabs/Epimetheus" -> "salabs/TestArchiver"
"joao-carloto/FireRobot" -> "joao-carloto/RF_Install_Script"
"robotframework/DosDontsSlides" -> "robotframework/Generator"
"ClarityCoders/ComputerVision-OpenCV" -> "learncodebygaming/opencv_tutorials"
"ClarityCoders/ComputerVision-OpenCV" -> "ClarityCoders/fishington.io-bot"
"cluic/wxauto" -> "yinkaisheng/Python-UIAutomation-for-Windows" ["e"=1]
"2gis/Winium" -> "2gis/Winium.Desktop"
"2gis/Winium" -> "2gis/Winium.Cruciatus"
"2gis/Winium" -> "microsoft/WinAppDriver"
"2gis/Winium" -> "TestStack/White"
"2gis/Winium" -> "2gis/Winium.Elements"
"2gis/Winium" -> "atinfo/at.info-knowledge-base" ["e"=1]
"2gis/Winium" -> "appium/appium-for-mac" ["e"=1]
"gmamaladze/globalmousekeyhook" -> "TestStack/White" ["e"=1]
"Omenia/robotframework-whitelibrary" -> "adiralashiva8/robotframework-keyword-metrics"
"Omenia/robotframework-whitelibrary" -> "rticau/ScreenCapLibrary"
"appium/appium-inspector" -> "serhatbolsu/robotframework-appiumlibrary" ["e"=1]
"pywinauto/pywinauto" -> "yinkaisheng/Python-UIAutomation-for-Windows"
"pywinauto/pywinauto" -> "asweigart/pyautogui"
"pywinauto/pywinauto" -> "blackrosezy/gui-inspect-tool"
"pywinauto/pywinauto" -> "mhammond/pywin32"
"pywinauto/pywinauto" -> "pywinauto/SWAPY"
"pywinauto/pywinauto" -> "microsoft/WinAppDriver"
"pywinauto/pywinauto" -> "AirtestProject/Airtest" ["e"=1]
"pywinauto/pywinauto" -> "shidenggui/easytrader" ["e"=1]
"pywinauto/pywinauto" -> "pywinauto/py_inspect"
"pywinauto/pywinauto" -> "tebelorg/RPA-Python"
"pywinauto/pywinauto" -> "robotframework/robotframework"
"pywinauto/pywinauto" -> "FlaUI/FlaUI" ["e"=1]
"pywinauto/pywinauto" -> "openatx/uiautomator2" ["e"=1]
"pywinauto/pywinauto" -> "glitchassassin/lackey"
"pywinauto/pywinauto" -> "microsoft/playwright-python" ["e"=1]
"yinkaisheng/Python-UIAutomation-for-Windows" -> "pywinauto/pywinauto"
"yinkaisheng/Python-UIAutomation-for-Windows" -> "cluic/wxauto" ["e"=1]
"yinkaisheng/Python-UIAutomation-for-Windows" -> "blackrosezy/gui-inspect-tool"
"yinkaisheng/Python-UIAutomation-for-Windows" -> "microsoft/WinAppDriver"
"yinkaisheng/Python-UIAutomation-for-Windows" -> "asweigart/pyautogui"
"yinkaisheng/Python-UIAutomation-for-Windows" -> "FlaUI/FlaUI" ["e"=1]
"yinkaisheng/Python-UIAutomation-for-Windows" -> "lich0821/WeChatFerry" ["e"=1]
"yinkaisheng/Python-UIAutomation-for-Windows" -> "openatx/uiautomator2" ["e"=1]
"yinkaisheng/Python-UIAutomation-for-Windows" -> "AirtestProject/Airtest" ["e"=1]
"yinkaisheng/Python-UIAutomation-for-Windows" -> "mhammond/pywin32"
"yinkaisheng/Python-UIAutomation-for-Windows" -> "g1879/DrissionPage" ["e"=1]
"yinkaisheng/Python-UIAutomation-for-Windows" -> "tebelorg/RPA-Python"
"yinkaisheng/Python-UIAutomation-for-Windows" -> "FlaUI/FlaUInspect"
"yinkaisheng/Python-UIAutomation-for-Windows" -> "microsoft/playwright-python" ["e"=1]
"yinkaisheng/Python-UIAutomation-for-Windows" -> "ttttupup/wxhelper" ["e"=1]
"eficode/robotframework-imagehorizonlibrary" -> "rticau/ScreenCapLibrary"
"eficode/robotframework-imagehorizonlibrary" -> "MarketSquare/robotframework-SikuliLibrary"
"detro/ghostdriver" -> "RaiMan/SikuliX-2014" ["e"=1]
"emmatyping/pyhooked" -> "schurpf/pyhk"
"UiPath-Services/UiPath-DevOps-Scripts" -> "UiPath-Services/OrchestratorManager"
"oriches/faker-cs" -> "nbuilder/nbuilder"
"oriches/faker-cs" -> "Kuree/Faker.Net"
"machulav/ec2-github-runner" -> "connery-io/connery-sdk" ["e"=1]
"pywinauto/SWAPY" -> "pywinauto/py_inspect"
"pywinauto/SWAPY" -> "pywinauto/pywinauto"
"robocorp/action-trigger-process" -> "robocorp/action-upload-robot"
"robocorp/action-upload-robot" -> "robocorp/action-trigger-process"
"robocorp/robocorp-old" -> "mikahanninen/robots"
"robocorp/robocorp-old" -> "robocorp/actions-cookbook"
"2gis/Winium.Desktop" -> "2gis/Winium"
"2gis/Winium.Desktop" -> "2gis/Winium.Cruciatus"
"2gis/Winium.Desktop" -> "TestStack/White"
"2gis/Winium.Desktop" -> "ldtp/cobra"
"2gis/Winium.Desktop" -> "dzharii/swd-recorder" ["e"=1]
"2gis/Winium.Desktop" -> "Bumblebee/Bumblebee"
"2gis/Winium.Desktop" -> "2gis/Winium.Elements"
"2gis/Winium.Desktop" -> "microsoft/WinAppDriver"
"robotcodedev/robotcode" -> "MarketSquare/robotframework-robocop"
"robotcodedev/robotcode" -> "damies13/rfswarm"
"robotcodedev/robotcode" -> "MarketSquare/robotframework-tidy"
"robotcodedev/robotcode" -> "MarketSquare/robotframework-browser"
"robotcodedev/robotcode" -> "adrianyorke/robotframework-cookbook"
"robotcodedev/robotcode" -> "MarketSquare/robotframework-openapidriver"
"robotcodedev/robotcode" -> "perfroboter/robotframework-perfbot"
"robotcodedev/robotcode" -> "Snooz82/robotframework-code-examples"
"robotcodedev/robotcode" -> "MarketSquare/roboswag"
"robotcodedev/robotcode" -> "MarketSquare/awesome-robotframework"
"robotcodedev/robotcode" -> "robocorp/robotframework-lsp"
"robotcodedev/robotcode" -> "Snooz82/robotframework-datadriver"
"robotcodedev/robotcode" -> "manykarim/robotframework-doctestlibrary"
"robotcodedev/robotcode" -> "timdegroot1996/robotframework-dashboard"
"vajrang-b/UiPathIn30Days" -> "vajrang-b/UiPath_ReusableCodes"
"MarketSquare/robotframework-tidy" -> "MarketSquare/robotframework-robocop"
"MarketSquare/robotframework-tidy" -> "MarketSquare/robotframework-sherlock"
"MarketSquare/robotframework-tidy" -> "MarketSquare/robotframework-style-guide"
"MarketSquare/robotframework-tidy" -> "MarketSquare/roboswag"
"MarketSquare/robotframework-tidy" -> "robocorp/robotframework-lsp"
"manykarim/robotframework-doctestlibrary" -> "salabs/TestArchiver"
"pavlobaron/robotframework-soapuilibrary" -> "ombre42/robotframework-sudslibrary"
"UB-Mannheim/tesseract" -> "pywinauto/pywinauto" ["e"=1]
"UB-Mannheim/tesseract" -> "mhammond/pywin32" ["e"=1]
"LTEnjoy/easyChat" -> "yinkaisheng/Python-UIAutomation-for-Windows" ["e"=1]
"Kalmat/PyWinCtl" -> "tryptech/obs-zoom-and-follow" ["e"=1]
"Kalmat/PyWinCtl" -> "asweigart/PyGetWindow"
"moses-palmer/pynput" -> "boppreh/keyboard"
"moses-palmer/pynput" -> "PyUserInput/PyUserInput"
"moses-palmer/pynput" -> "boppreh/mouse"
"moses-palmer/pynput" -> "asweigart/pyperclip"
"moses-palmer/pynput" -> "asweigart/pyautogui"
"moses-palmer/pynput" -> "BoboTiG/python-mss"
"moses-palmer/pynput" -> "SavinaRoja/PyUserInput"
"moses-palmer/pynput" -> "spyoungtech/ahk" ["e"=1]
"moses-palmer/pynput" -> "asweigart/PyGetWindow"
"moses-palmer/pynput" -> "pywinauto/pywinauto"
"moses-palmer/pynput" -> "moses-palmer/pystray"
"moses-palmer/pynput" -> "learncodebygaming/pydirectinput"
"moses-palmer/pynput" -> "mhammond/pywin32"
"moses-palmer/pynput" -> "autopilot-rs/autopy"
"moses-palmer/pynput" -> "jithurjacob/Windows-10-Toast-Notifications"
"ra1nty/DXcam" -> "SerpentAI/D3DShot"
"ra1nty/DXcam" -> "AI-M-BOT/DXcam"
"ra1nty/DXcam" -> "BoboTiG/python-mss"
"ra1nty/DXcam" -> "NiiightmareXD/windows-capture" ["e"=1]
"ra1nty/DXcam" -> "RootKit-Org/BetterCam"
"ra1nty/DXcam" -> "Fidelxyz/DXCam-CPP"
"ra1nty/DXcam" -> "ekknod/logitech-cve" ["e"=1]
"ra1nty/DXcam" -> "mherkazandjian/fastgrab"
"ra1nty/DXcam" -> "wangpy1995/dxgi4py"
"ra1nty/DXcam" -> "not-matthias/obs-rs" ["e"=1]
"ra1nty/DXcam" -> "lovettchris/wincam"
"ra1nty/DXcam" -> "Franklin-Zhang0/Yolo-v8-Apex-Aim-assist" ["e"=1]
"ra1nty/DXcam" -> "pyturtle/Valorant-AI-cheats" ["e"=1]
"ra1nty/DXcam" -> "kennyhml/pyinterception" ["e"=1]
"ra1nty/DXcam" -> "ItGarbager/aimcf_yolov5" ["e"=1]
"J2TEAM/awesome-AutoIt" -> "jacexh/pyautoit" ["e"=1]
"ldtp/ldtp2" -> "ldtp/cobra"
"TestStack/TestStack.BDDfy" -> "LightBDD/LightBDD" ["e"=1]
"TestStack/TestStack.BDDfy" -> "TestStack/TestStack.ConventionTests"
"TestStack/TestStack.BDDfy" -> "TestStack/TestStack.Seleno"
"TestStack/TestStack.BDDfy" -> "TestStack/TestStack.Dossier"
"TestStack/TestStack.BDDfy" -> "nbuilder/nbuilder"
"TestStack/TestStack.BDDfy" -> "adamralph/xbehave.net" ["e"=1]
"TestStack/TestStack.BDDfy" -> "machine/machine.specifications" ["e"=1]
"jithurjacob/Windows-10-Toast-Notifications" -> "moses-palmer/pystray"
"jithurjacob/Windows-10-Toast-Notifications" -> "vardecab/win10toast-click"
"jithurjacob/Windows-10-Toast-Notifications" -> "Infinidat/infi.systray"
"jithurjacob/Windows-10-Toast-Notifications" -> "moses-palmer/pynput"
"jithurjacob/Windows-10-Toast-Notifications" -> "kivy/plyer" ["e"=1]
"jithurjacob/Windows-10-Toast-Notifications" -> "TkinterEP/ttkthemes" ["e"=1]
"jithurjacob/Windows-10-Toast-Notifications" -> "malja/zroya"
"jithurjacob/Windows-10-Toast-Notifications" -> "GitHub30/win11toast" ["e"=1]
"jithurjacob/Windows-10-Toast-Notifications" -> "go-toast/toast" ["e"=1]
"jithurjacob/Windows-10-Toast-Notifications" -> "Windos/BurntToast" ["e"=1]
"jithurjacob/Windows-10-Toast-Notifications" -> "asweigart/pyperclip"
"jithurjacob/Windows-10-Toast-Notifications" -> "boppreh/keyboard"
"jithurjacob/Windows-10-Toast-Notifications" -> "pywinauto/pywinauto"
"jithurjacob/Windows-10-Toast-Notifications" -> "asweigart/PyGetWindow"
"jithurjacob/Windows-10-Toast-Notifications" -> "boppreh/mouse"
"autopilot-rs/autopy-legacy" -> "autopilot-rs/autopy"
"autopilot-rs/autopy-legacy" -> "Riamse/autopy3"
"autopilot-rs/autopy-legacy" -> "pywinauto/SWAPY"
"robotframework/PythonRemoteServer" -> "boakley/robotframework-hub"
"robotframework/PythonRemoteServer" -> "robotframework/DbBot"
"robotframework/PythonRemoteServer" -> "robotframework/RemoteInterface"
"robotframework/PythonRemoteServer" -> "salabs/TestArchiver"
"robotframework/PythonRemoteServer" -> "MarketSquare/robotframework-SikuliLibrary"
"robotframework/PythonRemoteServer" -> "MarketSquare/robotframework-webservice"
"drobota/robotframework-xvfb" -> "MarketSquare/robotframework-archivelibrary"
"nokia/RED" -> "robotframework/RIDE"
"nokia/RED" -> "boakley/robotframework-hub"
"nokia/RED" -> "boakley/robotframework-lint"
"nokia/RED" -> "MarketSquare/awesome-robotframework"
"nokia/RED" -> "mkorpela/RoboMachine"
"nokia/RED" -> "andriyko/sublime-robot-framework-assistant"
"nokia/RED" -> "adiralashiva8/robotframework-metrics"
"nokia/RED" -> "mkorpela/pabot"
"nokia/RED" -> "HelioGuilherme66/RIDE"
"nokia/RED" -> "robocorp/robotframework-lsp"
"nokia/RED" -> "robotframework/PythonRemoteServer"
"nokia/RED" -> "Snooz82/robotframework-datadriver"
"nokia/RED" -> "MarketSquare/SSHLibrary"
"nokia/RED" -> "small99/AutoLink" ["e"=1]
"nokia/RED" -> "adrianyorke/robotframework-cookbook"
"arviedelgado/roro" -> "tfreitasleal/sharpRPA"
"arviedelgado/roro" -> "saucepleez/taskt"
"arviedelgado/roro" -> "UiPath/Community.Activities"
"arviedelgado/roro" -> "open-rpa/openrpa"
"arviedelgado/roro" -> "rpa-ai/RPAStudio"
"arviedelgado/roro" -> "automagica/automagica"
"arviedelgado/roro" -> "tsujio/OpenRPA"
"arviedelgado/roro" -> "aisingapore/TagUI"
"arviedelgado/roro" -> "saucepleez/sharpRPA"
"arviedelgado/roro" -> "open-rpa/openflow"
"arviedelgado/roro" -> "adegard/tagui_scripts"
"arviedelgado/roro" -> "mihhdu/Enhanced-REFramework"
"arviedelgado/roro" -> "FlaUI/FlaUInspect"
"arviedelgado/roro" -> "UiPath/ReFrameWork"
"bendersej/bill-collector" -> "robocorp/action-upload-robot"
"robotframework/jrobotremoteserver" -> "robotframework/RemoteInterface"
"MarketSquare/robotframework-SikuliLibrary" -> "eficode/robotframework-imagehorizonlibrary"
"MarketSquare/robotframework-SikuliLibrary" -> "GDATASoftwareAG/robotframework-flaui"
"MarketSquare/robotframework-SikuliLibrary" -> "nokia/robotframework-autoitlibrary"
"MarketSquare/robotframework-SikuliLibrary" -> "boakley/robotframework-hub"
"MarketSquare/robotframework-SikuliLibrary" -> "Omenia/robotframework-whitelibrary"
"MarketSquare/robotframework-SikuliLibrary" -> "robotframework/PythonRemoteServer"
"MarketSquare/robotframework-SikuliLibrary" -> "Snooz82/robotframework-datadriver"
"MarketSquare/robotframework-SikuliLibrary" -> "adiralashiva8/robotframework-historic"
"MarketSquare/robotframework-SikuliLibrary" -> "Accruent/robotframework-zoomba"
"MarketSquare/robotframework-SikuliLibrary" -> "damies13/rfswarm"
"MarketSquare/robotframework-SikuliLibrary" -> "lovelysystems/robotframework-imaplibrary"
"MarketSquare/robotframework-SikuliLibrary" -> "mentalisttraceur/robotframework-dependencylibrary"
"PyUserInput/PyUserInput" -> "SavinaRoja/PyUserInput"
"PyUserInput/PyUserInput" -> "moses-palmer/pynput"
"PyUserInput/PyUserInput" -> "pepijndevos/PyMouse"
"PyUserInput/PyUserInput" -> "autopilot-rs/autopy"
"PyUserInput/PyUserInput" -> "python-xlib/python-xlib" ["e"=1]
"MarketSquare/robotframeworkguides" -> "MarketSquare/robotframework-style-guide"
"ldtp/cobra" -> "F1ashhimself/UISoup"
"ldtp/cobra" -> "ldtp/ldtp2"
"open-rpa/docker" -> "open-rpa/examples-files"
"MarketSquare/robotframework-openapidriver" -> "MarketSquare/robotframework-openapi-libcore"
"MarketSquare/robotframework-openapidriver" -> "MarketSquare/roboswag"
"MarketSquare/roboswag" -> "MarketSquare/robotframework-openapitools"
"MarketSquare/robotframework-style-guide" -> "MarketSquare/robotframework-openapi-libcore"
"opencv/opencv-python" -> "asweigart/pyautogui" ["e"=1]
"TestStack/White" -> "FlaUI/FlaUI" ["e"=1]
"TestStack/White" -> "FlaUI/FlaUInspect"
"TestStack/White" -> "2gis/Winium.Desktop"
"TestStack/White" -> "microsoft/WinAppDriver"
"TestStack/White" -> "2gis/Winium"
"TestStack/White" -> "TestStack/UIAComWrapper"
"TestStack/White" -> "snoopwpf/snoopwpf" ["e"=1]
"TestStack/White" -> "gmamaladze/globalmousekeyhook" ["e"=1]
"TestStack/White" -> "TestStack/TestStack.docs"
"TestStack/White" -> "fsprojects/Paket" ["e"=1]
"TestStack/White" -> "Fody/Costura" ["e"=1]
"TestStack/White" -> "SpecFlowOSS/SpecFlow" ["e"=1]
"TestStack/White" -> "reactiveui/Akavache" ["e"=1]
"TestStack/White" -> "blackrosezy/gui-inspect-tool"
"TestStack/White" -> "TestStack/TestStack.BDDfy"
"mkleehammer/pyodbc" -> "mhammond/pywin32" ["e"=1]
"moses-palmer/pystray" -> "Infinidat/infi.systray"
"moses-palmer/pystray" -> "TomSchimansky/TkinterMapView" ["e"=1]
"moses-palmer/pystray" -> "ragardner/tksheet" ["e"=1]
"moses-palmer/pystray" -> "PySimpleGUI/psgtray"
"moses-palmer/pystray" -> "ms7m/notify-py"
"moses-palmer/pystray" -> "TkinterEP/ttkthemes" ["e"=1]
"moses-palmer/pystray" -> "TkinterEP/ttkwidgets" ["e"=1]
"moses-palmer/pystray" -> "Akuli/porcupine" ["e"=1]
"moses-palmer/pystray" -> "asweigart/PyGetWindow"
"moses-palmer/pystray" -> "nngogol/async-desktop-chat"
"moses-palmer/pystray" -> "Aboghazala/AwesomeTkinter"
"moses-palmer/pystray" -> "alejandroautalan/pygubu-designer" ["e"=1]
"moses-palmer/pystray" -> "jithurjacob/Windows-10-Toast-Notifications"
"FlaUI/FlaUI" -> "FlaUI/FlaUInspect" ["e"=1]
"FlaUI/FlaUI" -> "TestStack/White" ["e"=1]
"FlaUI/FlaUI" -> "microsoft/WinAppDriver" ["e"=1]
"microsoft/WinAppDriver" -> "FlaUI/FlaUI" ["e"=1]
"microsoft/WinAppDriver" -> "TestStack/White"
"microsoft/WinAppDriver" -> "CommunityToolkit/WindowsCommunityToolkit" ["e"=1]
"microsoft/WinAppDriver" -> "pywinauto/pywinauto"
"microsoft/WinAppDriver" -> "2gis/Winium"
"microsoft/WinAppDriver" -> "FlaUI/FlaUInspect"
"microsoft/WinAppDriver" -> "yinkaisheng/Python-UIAutomation-for-Windows"
"microsoft/WinAppDriver" -> "reactiveui/ReactiveUI" ["e"=1]
"microsoft/WinAppDriver" -> "snoopwpf/snoopwpf" ["e"=1]
"microsoft/WinAppDriver" -> "appium/appium-desktop" ["e"=1]
"microsoft/WinAppDriver" -> "appium/appium" ["e"=1]
"microsoft/WinAppDriver" -> "microsoft/microsoft-ui-xaml" ["e"=1]
"microsoft/WinAppDriver" -> "appium/dotnet-client"
"microsoft/WinAppDriver" -> "blackrosezy/gui-inspect-tool"
"microsoft/WinAppDriver" -> "SpecFlowOSS/SpecFlow" ["e"=1]
"davycloud/robotframework-userguide-cn" -> "molsky/robotframework-dashboard"
"robotframework/HowToWriteGoodTestCases" -> "robotframework/QuickStartGuide"
"robotframework/HowToWriteGoodTestCases" -> "MarketSquare/awesome-robotframework"
"robotframework/HowToWriteGoodTestCases" -> "robotframework/SeleniumLibrary"
"robotframework/HowToWriteGoodTestCases" -> "robotframework/WebDemo"
"robotframework/HowToWriteGoodTestCases" -> "MarketSquare/robotframework-requests"
"robotframework/HowToWriteGoodTestCases" -> "MarketSquare/robotframework-robocop"
"robotframework/HowToWriteGoodTestCases" -> "robotframework/RIDE"
"robotframework/HowToWriteGoodTestCases" -> "robotframework/DosDontsSlides"
"robotframework/HowToWriteGoodTestCases" -> "mkorpela/pabot"
"robotframework/HowToWriteGoodTestCases" -> "robotframework/RobotDemo"
"robotframework/HowToWriteGoodTestCases" -> "boakley/robotframework-lint"
"robotframework/HowToWriteGoodTestCases" -> "nokia/RED"
"robotframework/HowToWriteGoodTestCases" -> "ppodgorsek/docker-robot-framework"
"robotframework/HowToWriteGoodTestCases" -> "adrianyorke/robotframework-cookbook"
"robotframework/HowToWriteGoodTestCases" -> "serhatbolsu/robotframework-appiumlibrary"
"Digital-Sapphire/PyUpdater" -> "asweigart/pyscreeze" ["e"=1]
"TaylorSMarks/playsound" -> "hamiltron/py-simple-audio"
"TaylorSMarks/playsound" -> "spatialaudio/python-sounddevice" ["e"=1]
"TaylorSMarks/playsound" -> "boppreh/mouse"
"UiPath/Community.Activities" -> "UiPath/orchestrator-powershell"
"UiPath/Community.Activities" -> "UiPath/ReFrameWork"
"UiPath/Community.Activities" -> "SharathRaju489/UiPath"
"UiPath/Community.Activities" -> "mihhdu/Enhanced-REFramework"
"UiPath/Community.Activities" -> "UiPath/Chatbot-Samples"
"UiPath/Community.Activities" -> "bogdanripa/UiPath-Orchestrator-Smart-Scheduler"
"UiPath/Community.Activities" -> "UiPath-Services/UiPath-DevOps-Scripts"
"UiPath/Community.Activities" -> "arviedelgado/roro"
"UiPath/Community.Activities" -> "UiPath-Services/StudioTemplates"
"UiPath/Community.Activities" -> "andumorie/uipath-face-recognition-framework"
"UiPath/Community.Activities" -> "UiPath/Infrastructure"
"robotframework/RemoteInterface" -> "robotframework/jrobotremoteserver"
"UiPath/uipathcli" -> "UiPath-Services/UiPath-DevOps-Scripts"
"boakley/robotframework-pageobjectlibrary" -> "daluu/robotframework-simple-page-object-example"
"boakley/robotframework-pageobjectlibrary" -> "boakley/robotframework-hub"
"robocorp/robocorp" -> "Sema4AI/actions"
"robocorp/robocorp" -> "robocorp/rpaframework" ["e"=1]
"robocorp/robocorp" -> "robocorp/rcc" ["e"=1]
"robocorp/robocorp" -> "robocorp/actions-cookbook"
"robocorp/robocorp" -> "robocorp/action-trigger-process"
"robocorp/robocorp" -> "robocorp/action-upload-robot"
"robocorp/robocorp" -> "robocorp/robotframework-lsp"
"robocorp/robocorp" -> "connery-io/connery-sdk"
"robocorp/robocorp" -> "Sema4AI/cookbook"
"appium/appium-windows-driver" -> "FlaUI/FlaUI.WebDriver"
"Infinidat/infi.systray" -> "moses-palmer/pystray"
"KianBrose/smtp_mail_bot_server" -> "KianBrose/Image-Recognition-Botting-Tutorial"
"ppodgorsek/docker-robot-framework" -> "MarketSquare/robotframework-robocop"
"ppodgorsek/docker-robot-framework" -> "adrianyorke/robotframework-cookbook"
"ppodgorsek/docker-robot-framework" -> "damies13/rfswarm"
"ppodgorsek/docker-robot-framework" -> "MarketSquare/awesome-robotframework"
"ppodgorsek/docker-robot-framework" -> "MarketSquare/robotframework-browser"
"ppodgorsek/docker-robot-framework" -> "joonvena/robotframework-docker-action"
"ppodgorsek/docker-robot-framework" -> "Snooz82/robotframework-datadriver"
"ppodgorsek/docker-robot-framework" -> "asyrjasalo/rfdocker"
"ppodgorsek/docker-robot-framework" -> "mkorpela/pabot"
"ppodgorsek/docker-robot-framework" -> "xyb/robotframework-debuglibrary"
"ppodgorsek/docker-robot-framework" -> "adiralashiva8/robotframework-historic"
"ppodgorsek/docker-robot-framework" -> "robocorp/robotframework-lsp"
"ppodgorsek/docker-robot-framework" -> "ypasmk/robot-framework-docker"
"ppodgorsek/docker-robot-framework" -> "adiralashiva8/robotframework-metrics"
"ppodgorsek/docker-robot-framework" -> "boakley/robotframework-lint"
"glitchassassin/lackey" -> "xcgspring/AXUI"
"glitchassassin/lackey" -> "autopilot-rs/autopy"
"glitchassassin/lackey" -> "blackrosezy/gui-inspect-tool"
"glitchassassin/lackey" -> "jacexh/pyautoit"
"glitchassassin/lackey" -> "asweigart/PyGetWindow"
"glitchassassin/lackey" -> "pywinauto/pywinauto"
"glitchassassin/lackey" -> "arkottke/winguiauto"
"glitchassassin/lackey" -> "boppreh/mouse"
"glitchassassin/lackey" -> "emmatyping/pyhooked"
"glitchassassin/lackey" -> "intra2net/guibot"
"glitchassassin/lackey" -> "asweigart/pyscreeze"
"glitchassassin/lackey" -> "RaiMan/SikuliX1"
"glitchassassin/lackey" -> "RaiMan/SikuliNG"
"glitchassassin/lackey" -> "yinkaisheng/Python-UIAutomation-for-Windows"
"glitchassassin/lackey" -> "MarketSquare/robotframework-SikuliLibrary"
"connery-io/connery-sdk" -> "Sema4AI/actions"
"connery-io/connery-sdk" -> "robocorp/robocorp"
"moises-dias/yolo-opencv-detector" -> "ClarityCoders/TornadoBot"
"Bumblebee/Bumblebee" -> "yandex-qatools/htmlelements-dotnet"
"Answeror/pyhook_py3k" -> "gggfreak2003/PyHook3"
"ombre42/robotframework-sudslibrary" -> "pavlobaron/robotframework-soapuilibrary"
"aisingapore/TagUI" -> "tebelorg/RPA-Python"
"aisingapore/TagUI" -> "open-rpa/openrpa"
"aisingapore/TagUI" -> "saucepleez/taskt"
"aisingapore/TagUI" -> "robotframework/robotframework"
"aisingapore/TagUI" -> "A9T9/RPA"
"aisingapore/TagUI" -> "automagica/automagica"
"aisingapore/TagUI" -> "robocorp/rpaframework" ["e"=1]
"aisingapore/TagUI" -> "arviedelgado/roro"
"aisingapore/TagUI" -> "schickling/chromeless" ["e"=1]
"aisingapore/TagUI" -> "pywinauto/pywinauto"
"aisingapore/TagUI" -> "RaiMan/SikuliX1"
"aisingapore/TagUI" -> "muesli/beehive" ["e"=1]
"aisingapore/TagUI" -> "forter/security-101-for-saas-startups" ["e"=1]
"aisingapore/TagUI" -> "go-vgo/robotgo" ["e"=1]
"aisingapore/TagUI" -> "botpress/botpress" ["e"=1]
"AmrEldib/cmder-powerline-prompt" -> "nbuilder/nbuilder" ["e"=1]
"appium/appium" -> "robotframework/robotframework" ["e"=1]
"SunOner/sunone_aimbot" -> "RootKit-Org/BetterCam" ["e"=1]
"SavinaRoja/PyUserInput" -> "PyUserInput/PyUserInput"
"SavinaRoja/PyUserInput" -> "pepijndevos/PyMouse"
"SavinaRoja/PyUserInput" -> "moses-palmer/pynput"
"SavinaRoja/PyUserInput" -> "boppreh/mouse"
"SavinaRoja/PyUserInput" -> "boppreh/keyboard"
"SavinaRoja/PyUserInput" -> "autopilot-rs/autopy-legacy"
"SavinaRoja/PyUserInput" -> "ponty/pyscreenshot"
"SavinaRoja/PyUserInput" -> "asweigart/pyautogui"
"SavinaRoja/PyUserInput" -> "glitchassassin/lackey"
"SavinaRoja/PyUserInput" -> "Answeror/pyhook_py3k"
"marcelotduarte/cx_Freeze" -> "asweigart/pyperclip" ["e"=1]
"marcelotduarte/cx_Freeze" -> "moses-palmer/pystray" ["e"=1]
"Sema4AI/actions" -> "robocorp/actions-cookbook"
"Sema4AI/actions" -> "Sema4AI/cookbook"
"Sema4AI/actions" -> "robocorp/action-upload-robot"
"Sema4AI/actions" -> "robocorp/action-trigger-process"
"Sema4AI/actions" -> "robocorp/robocorp"
"jessezach/RobotEyes" -> "damies13/rfswarm"
"robocorp/actions-cookbook" -> "Sema4AI/cookbook"
"TestStack/UIAComWrapper" -> "TestStack/uia-custom-pattern-managed"
"sohwendy/Robotcorder" -> "Simakvokka/robotframework-imagelibrary"
"Sema4AI/cookbook" -> "robocorp/actions-cookbook"
"enigo-rs/enigo" -> "autopilot-rs/autopilot-rs" ["e"=1]
"MarketSquare/awesome-robotframework" -> "adrianyorke/robotframework-cookbook"
"MarketSquare/awesome-robotframework" -> "adiralashiva8/robotframework-metrics"
"MarketSquare/awesome-robotframework" -> "adiralashiva8/robotframework-historic"
"MarketSquare/awesome-robotframework" -> "boakley/robotframework-lint"
"MarketSquare/awesome-robotframework" -> "MarketSquare/robotframework-robocop"
"MarketSquare/awesome-robotframework" -> "MarketSquare/robotframework-browser"
"MarketSquare/awesome-robotframework" -> "mkorpela/pabot"
"MarketSquare/awesome-robotframework" -> "damies13/rfswarm"
"MarketSquare/awesome-robotframework" -> "nokia/RED"
"MarketSquare/awesome-robotframework" -> "boakley/robotframework-pageobjectlibrary"
"MarketSquare/awesome-robotframework" -> "ppodgorsek/docker-robot-framework"
"MarketSquare/awesome-robotframework" -> "boakley/robotframework-hub"
"MarketSquare/awesome-robotframework" -> "Accruent/robotframework-zoomba"
"MarketSquare/awesome-robotframework" -> "robotframework/HowToWriteGoodTestCases"
"MarketSquare/awesome-robotframework" -> "robotcodedev/robotcode"
"robotframework/PythonLibCore" -> "boakley/robotframework-lint"
"robotframework-thailand/robotframework-jsonlibrary" -> "peterservice-rnd/robotframework-jsonvalidator"
"nateshmbhat/pyttsx3" -> "asweigart/pyautogui" ["e"=1]
"A9T9/RPA" -> "open-rpa/openrpa"
"A9T9/RPA" -> "saucepleez/taskt"
"A9T9/RPA" -> "aisingapore/TagUI"
"A9T9/RPA" -> "robocorp/rpaframework" ["e"=1]
"A9T9/RPA" -> "tebelorg/RPA-Python"
"A9T9/RPA" -> "robotframework/robotframework"
"A9T9/RPA" -> "open-rpa/openflow"
"A9T9/RPA" -> "SeleniumHQ/selenium-ide" ["e"=1]
"A9T9/RPA" -> "leoxiaoping/pbottleRPA" ["e"=1]
"A9T9/RPA" -> "RaiMan/SikuliX1"
"A9T9/RPA" -> "arviedelgado/roro"
"A9T9/RPA" -> "automagica/automagica"
"A9T9/RPA" -> "OpenBMB/ProAgent" ["e"=1]
"A9T9/RPA" -> "microsoft/WindowsAgentArena" ["e"=1]
"A9T9/RPA" -> "LoveOctocat/UI.Vision-Kantu-ZH"
"boppreh/keyboard" -> "boppreh/mouse"
"boppreh/keyboard" -> "moses-palmer/pynput"
"boppreh/keyboard" -> "asweigart/pyautogui"
"boppreh/keyboard" -> "asweigart/pyperclip"
"boppreh/keyboard" -> "spyoungtech/ahk" ["e"=1]
"boppreh/keyboard" -> "BoboTiG/python-mss"
"boppreh/keyboard" -> "pywinauto/pywinauto"
"boppreh/keyboard" -> "mhammond/pywin32"
"boppreh/keyboard" -> "r0x0r/pywebview" ["e"=1]
"boppreh/keyboard" -> "pyinstaller/pyinstaller" ["e"=1]
"boppreh/keyboard" -> "SavinaRoja/PyUserInput"
"boppreh/keyboard" -> "tartley/colorama" ["e"=1]
"boppreh/keyboard" -> "flexxui/flexx" ["e"=1]
"boppreh/keyboard" -> "rawpython/remi" ["e"=1]
"boppreh/keyboard" -> "giampaolo/psutil" ["e"=1]
"SeleniumHQ/selenium-ide" -> "A9T9/RPA" ["e"=1]
"SeleniumHQ/selenium-ide" -> "robotframework/SeleniumLibrary" ["e"=1]
"boppreh/mouse" -> "boppreh/keyboard"
"boppreh/mouse" -> "moses-palmer/pynput"
"boppreh/mouse" -> "BoboTiG/python-mss"
"boppreh/mouse" -> "spyoungtech/ahk" ["e"=1]
"boppreh/mouse" -> "asweigart/PyGetWindow"
"boppreh/mouse" -> "SavinaRoja/PyUserInput"
"boppreh/mouse" -> "glitchassassin/lackey"
"boppreh/mouse" -> "asweigart/pyperclip"
"boppreh/mouse" -> "asweigart/pyautogui"
"boppreh/mouse" -> "bode135/pydamo" ["e"=1]
"boppreh/mouse" -> "bode135/VirtualKey_with_Ctypes" ["e"=1]
"boppreh/mouse" -> "TaylorSMarks/playsound"
"boppreh/mouse" -> "PyUserInput/PyUserInput"
"boppreh/mouse" -> "pywinauto/pywinauto"
"boppreh/mouse" -> "jacexh/pyautoit"
"kiwitcms/Kiwi" -> "MarketSquare/awesome-robotframework" ["e"=1]
"FlaUI/FlaUInspect" -> "FlaUI/FlaUI" ["e"=1]
"FlaUI/FlaUInspect" -> "twenzel/FlaUIRecorder"
"FlaUI/FlaUInspect" -> "TestStack/White"
"FlaUI/FlaUInspect" -> "microsoft/WinAppDriver"
"FlaUI/FlaUInspect" -> "appium/dotnet-client"
"FlaUI/FlaUInspect" -> "microsoft/accessibility-insights-windows" ["e"=1]
"FlaUI/FlaUInspect" -> "TestStack/UIAComWrapper"
"FlaUI/FlaUInspect" -> "FlaUI/FlaUI.WebDriver"
"FlaUI/FlaUInspect" -> "wechaty/dotnet-wechaty"
"pywinauto/py_inspect" -> "pywinauto/SWAPY"
"pywinauto/py_inspect" -> "dm-vodopyanov/py_inspect"
"pywinauto/py_inspect" -> "beuaaa/pywinauto_recorder"
"pywinauto/py_inspect" -> "blackrosezy/gui-inspect-tool"
"iPlantCollaborativeOpenSource/Robotframework-MongoDB-Library" -> "ombre42/robotframework-sudslibrary"
"PySimpleGUI/PySimpleGUI" ["l"="42.69,20.798", "c"=1073]
"asweigart/pyautogui" ["l"="-1.377,2.156"]
"madmaze/pytesseract" ["l"="46.216,4.939", "c"=1062]
"pndurette/gTTS" ["l"="37.02,2.468", "c"=117]
"TaylorSMarks/playsound" ["l"="-1.212,2.255"]
"xlwings/xlwings" ["l"="46.175,4.501", "c"=1062]
"mhammond/pywin32" ["l"="-1.32,2.122"]
"pywinauto/pywinauto" ["l"="-1.369,2.093"]
"pyinstaller/pyinstaller" ["l"="42.664,20.902", "c"=1073]
"giampaolo/psutil" ["l"="44.655,20.711", "c"=20]
"yinkaisheng/Python-UIAutomation-for-Windows" ["l"="-1.388,2.056"]
"boppreh/keyboard" ["l"="-1.323,2.189"]
"python-openxml/python-docx" ["l"="46.158,4.645", "c"=1062]
"Nuitka/Nuitka" ["l"="42.642,20.824", "c"=1073]
"r0x0r/pywebview" ["l"="42.608,20.777", "c"=1073]
"pythonnet/pythonnet" ["l"="-34.897,-1.485", "c"=8]
"python-pillow/Pillow" ["l"="44.441,20.574", "c"=20]
"wxWidgets/Phoenix" ["l"="42.578,20.856", "c"=1073]
"moses-palmer/pynput" ["l"="-1.286,2.186"]
"AutoHotkey/AutoHotkey" ["l"="-49.269,9.804", "c"=59]
"tebelorg/RPA-Python" ["l"="-1.462,2.071"]
"aisingapore/TagUI" ["l"="-1.508,2.064"]
"open-rpa/openrpa" ["l"="-1.484,2.006"]
"robotframework/robotframework" ["l"="-1.574,2.083"]
"robocorp/rpaframework" ["l"="-1.179,3.033", "c"=258]
"automagica/automagica" ["l"="-1.472,2.033"]
"saucepleez/taskt" ["l"="-1.515,2.005"]
"A9T9/RPA" ["l"="-1.518,2.033"]
"microsoft/playwright-python" ["l"="44.659,20.418", "c"=20]
"GeneralNewsExtractor/GeneralNewsExtractor" ["l"="48.469,23.341", "c"=125]
"piglei/one-python-craftsman" ["l"="48.071,23.611", "c"=125]
"wechaty/wechaty" ["l"="50.67,22.693", "c"=508]
"g1879/DrissionPage" ["l"="-54.401,-14.671", "c"=301]
"arviedelgado/roro" ["l"="-1.506,1.955"]
"tfreitasleal/sharpRPA" ["l"="-1.501,1.974"]
"saucepleez/tasktServer" ["l"="-1.571,1.988"]
"open-rpa/openflow" ["l"="-1.53,1.976"]
"FlaUI/FlaUI" ["l"="-36.597,1.068", "c"=137]
"rpa-ai/RPAStudio" ["l"="-1.479,1.966"]
"OpenBotsAI/OpenBots.Studio" ["l"="-1.559,1.971"]
"FlaUI/FlaUInspect" ["l"="-1.396,1.958"]
"ClimenteA/flaskwebgui" ["l"="42.492,20.781", "c"=1073]
"moses-palmer/pystray" ["l"="-1.185,2.182"]
"asweigart/PythonStdioGames" ["l"="59.651,34.24", "c"=699]
"asweigart/pyperclip" ["l"="-1.327,2.223"]
"LightBDD/LightBDD" ["l"="-34.388,-0.736", "c"=8]
"TestStack/TestStack.BDDfy" ["l"="-1.226,1.791"]
"slashdotdash/faker-cs" ["l"="-1.202,1.7"]
"nbuilder/nbuilder" ["l"="-1.182,1.726"]
"takluyver/pynsist" ["l"="42.528,20.872", "c"=1073]
"RaiMan/SikuliX-2014" ["l"="-1.479,2.162"]
"RaiMan/SikuliNG" ["l"="-1.446,2.173"]
"sikuli/sikuli" ["l"="-0.945,1.004", "c"=108]
"RaiMan/SikuliX1" ["l"="-1.446,2.107"]
"asweigart/pyscreeze" ["l"="-1.272,2.158"]
"asweigart/PyGetWindow" ["l"="-1.26,2.193"]
"terryyin/clipboard" ["l"="-1.364,2.272"]
"boppreh/mouse" ["l"="-1.294,2.213"]
"tartley/colorama" ["l"="45.06,20.743", "c"=20]
"liiight/notifiers" ["l"="45.009,20.764", "c"=20]
"astanin/python-tabulate" ["l"="45.009,20.83", "c"=20]
"ActiveState/appdirs" ["l"="45.154,21.062", "c"=20]
"marcelotduarte/cx_Freeze" ["l"="42.592,20.888", "c"=1073]
"jmoiron/humanize" ["l"="45.096,20.836", "c"=20]
"python-attrs/attrs" ["l"="45.053,20.869", "c"=20]
"BoboTiG/python-mss" ["l"="-1.291,2.268"]
"ra1nty/DXcam" ["l"="-1.299,2.357"]
"SerpentAI/D3DShot" ["l"="-1.291,2.326"]
"learncodebygaming/pydirectinput" ["l"="-1.267,2.311"]
"ponty/pyscreenshot" ["l"="-1.243,2.284"]
"spyoungtech/ahk" ["l"="-46.924,9.133", "c"=655]
"learncodebygaming/opencv_tutorials" ["l"="-1.245,2.398"]
"jacexh/pyautoit" ["l"="-1.321,2.26"]
"ofeksadlo/CSGO-Aimbot-CNN" ["l"="-43.922,-36.5", "c"=711]
"checkly/headless-recorder" ["l"="-4.218,-29.166", "c"=4]
"appium/appium-flutter-driver" ["l"="-1.61,-0.607", "c"=224]
"serhatbolsu/robotframework-appiumlibrary" ["l"="-1.758,2.175"]
"SerpentAI/sneakysnek" ["l"="-1.266,2.36"]
"patrikoss/pyclick" ["l"="-1.189,2.356"]
"vincentbavitz/bezmouse" ["l"="-1.157,2.374"]
"appium/python-client" ["l"="-0.969,1.014", "c"=108]
"up1/course-robotframework" ["l"="-1.758,2.261"]
"drobota/robotframework-xvfb" ["l"="-1.776,2.26"]
"lovelysystems/robotframework-imaplibrary" ["l"="-1.766,2.244"]
"RaiMan/sikulix4python" ["l"="-1.422,2.039"]
"glitchassassin/lackey" ["l"="-1.344,2.144"]
"microsoft/WinAppDriver" ["l"="-1.354,1.991"]
"AirtestProject/Airtest" ["l"="-0.909,1.023", "c"=108]
"appium/dotnet-client" ["l"="-1.369,1.932"]
"appium/appium-windows-driver" ["l"="-1.372,1.877"]
"TestStack/UIAComWrapper" ["l"="-1.351,1.908"]
"appium/appium-xcuitest-driver" ["l"="-1.673,-0.605", "c"=224]
"zzzprojects/EntityFramework-Effort" ["l"="-1.167,1.675"]
"zzzprojects/nmemory" ["l"="-1.155,1.642"]
"GitTools/GitLink" ["l"="-32.168,-0.703", "c"=139]
"svanoort/pyresttest" ["l"="45.477,19.242", "c"=1169]
"MarketSquare/robotframework-requests" ["l"="-1.741,2.165"]
"machine/machine.specifications" ["l"="-34.364,-0.952", "c"=8]
"firedm/FireDM" ["l"="-49.301,10.176", "c"=59]
"Aboghazala/AwesomeTkinter" ["l"="-1.13,2.204"]
"andriyko/sublime-robot-framework-assistant" ["l"="-1.691,2.206"]
"joao-carloto/RF_Install_Script" ["l"="-1.67,2.248"]
"boakley/robotframework-hub" ["l"="-1.73,2.206"]
"HelioGuilherme66/RIDE" ["l"="-1.674,2.187"]
"rickypc/robotframework-extendedselenium2library" ["l"="-1.707,2.237"]
"autopilot-rs/autopy" ["l"="-1.262,2.121"]
"intra2net/guibot" ["l"="-1.279,2.098"]
"autopilot-rs/autopy-legacy" ["l"="-1.228,2.105"]
"autopilot-rs/autopilot-rs" ["l"="-1.168,2.077"]
"PyUserInput/PyUserInput" ["l"="-1.238,2.19"]
"pywinauto/py_inspect" ["l"="-1.287,2.05"]
"ldtp/ldtp2" ["l"="-1.216,2.036"]
"blackrosezy/gui-inspect-tool" ["l"="-1.331,2.034"]
"pywinauto/SWAPY" ["l"="-1.303,2.068"]
"fangchaooo/zh-pywinauto-doc" ["l"="-1.286,2.009"]
"TestStack/White" ["l"="-1.323,1.941"]
"2gis/Winium.Desktop" ["l"="-1.28,1.961"]
"microsoft/accessibility-insights-windows" ["l"="-8.471,-23.936", "c"=539]
"xcgspring/AXUI" ["l"="-1.327,2.076"]
"2gis/Winium" ["l"="-1.306,1.964"]
"adrian-evo/robotframework-sikulixlibrary" ["l"="-1.415,2.008"]
"beuaaa/pywinauto_recorder" ["l"="-1.259,2.023"]
"langlixiaobailongqaq/python-pywinauto" ["l"="-1.253,1.991"]
"MarketSquare/remoteswinglibrary" ["l"="-1.704,2.306"]
"MarketSquare/SwingLibrary" ["l"="-1.703,2.277"]
"Snooz82/robotframework-datadriver" ["l"="-1.793,2.163"]
"damies13/rfswarm" ["l"="-1.8,2.141"]
"salabs/TestArchiver" ["l"="-1.812,2.176"]
"manykarim/robotframework-doctestlibrary" ["l"="-1.807,2.131"]
"rticau/ScreenCapLibrary" ["l"="-1.822,2.196"]
"MarketSquare/robotframework-seleniumtestability" ["l"="-1.819,2.169"]
"adiralashiva8/robotframework-metrics" ["l"="-1.773,2.156"]
"adiralashiva8/robotframework-historic" ["l"="-1.805,2.155"]
"MarketSquare/robotframework-robocop" ["l"="-1.779,2.136"]
"adrianyorke/robotframework-cookbook" ["l"="-1.789,2.148"]
"Accruent/robotframework-zoomba" ["l"="-1.795,2.18"]
"GDATASoftwareAG/robotframework-flaui" ["l"="-1.806,2.2"]
"robocorp/robotframework-lsp" ["l"="-1.822,2.142"]
"Simakvokka/robotframework-imagelibrary" ["l"="-1.847,2.175"]
"UiPath/ReFrameWork" ["l"="-1.52,1.88"]
"UiPath/Community.Activities" ["l"="-1.53,1.856"]
"mihhdu/Enhanced-REFramework" ["l"="-1.538,1.89"]
"UiPath/orchestrator-powershell" ["l"="-1.554,1.849"]
"SharathRaju489/UiPath" ["l"="-1.528,1.809"]
"UiPath/Infrastructure" ["l"="-1.551,1.867"]
"vajrang-b/UiPath_ReusableCodes" ["l"="-1.541,1.762"]
"HarshadRanganathan/uipath-learning" ["l"="-1.52,1.774"]
"cristinegulescu/startUiPathFromSalesforce" ["l"="-1.542,1.781"]
"UiPath-Services/StudioTemplates" ["l"="-1.514,1.823"]
"rohanbaraskar/UiPath-11" ["l"="-1.51,1.788"]
"DannyDainton/All-Things-Postman" ["l"="-1.655,-0.291", "c"=224]
"MarketSquare/awesome-robotframework" ["l"="-1.759,2.152"]
"asyrjasalo/RESTinstance" ["l"="-1.782,2.187"]
"robotframework/PythonRemoteServer" ["l"="-1.756,2.217"]
"MarketSquare/robotframework-browser" ["l"="-1.762,2.132"]
"boakley/robotframework-pageobjectlibrary" ["l"="-1.765,2.203"]
"robotframework-thailand/robotframework-jsonlibrary" ["l"="-1.731,2.227"]
"MarketSquare/robotframework-faker" ["l"="-1.807,2.216"]
"rickypc/robotframework-imaplibrary" ["l"="-1.824,2.231"]
"robotframework/WebDemo" ["l"="-1.738,2.098"]
"robotframework/RobotDemo" ["l"="-1.714,2.093"]
"robotframework/QuickStartGuide" ["l"="-1.714,2.149"]
"robotframework/HowToWriteGoodTestCases" ["l"="-1.735,2.127"]
"mkorpela/pabot" ["l"="-1.735,2.148"]
"robotframework/SeleniumLibrary" ["l"="-1.707,2.132"]
"xyb/robotframework-debuglibrary" ["l"="-1.715,2.19"]
"nokia/RED" ["l"="-1.727,2.176"]
"MarketSquare/robotframework-tidy" ["l"="-1.79,2.128"]
"robotframework/RIDE" ["l"="-1.694,2.159"]
"boakley/robotframework-lint" ["l"="-1.744,2.18"]
"MarketSquare/robotframework-archivelibrary" ["l"="-1.812,2.255"]
"luisxiaomai/robotframework-anywherelibrary" ["l"="-1.749,2.231"]
"mtrubs/intellibot" ["l"="-1.667,2.213"]
"AmailP/robot-plugin" ["l"="-1.637,2.219"]
"lte2000/intellibot" ["l"="-1.643,2.241"]
"peritus/robotframework-httplibrary" ["l"="-1.691,2.183"]
"robots-from-jupyter/robotlab" ["l"="-1.898,2.08"]
"MarketSquare/robotframework-seleniumscreenshots" ["l"="-1.918,2.06"]
"robots-from-jupyter/robotkernel" ["l"="-1.868,2.115"]
"jupyter-xeus/xeus-robot" ["l"="-1.914,2.093"]
"2gis/Winium.Cruciatus" ["l"="-1.273,1.937"]
"2gis/Winium.Elements" ["l"="-1.289,1.94"]
"adegard/tagui_scripts" ["l"="-1.562,1.915"]
"adegard/TagIE.ahk" ["l"="-1.592,1.904"]
"tebelorg/Tmail" ["l"="-1.579,1.894"]
"gaojunxin/my-profile-vue" ["l"="54.799,29.1", "c"=1074]
"MarketSquare/Robotframework-Database-Library" ["l"="-1.781,2.17"]
"robotframework/robotframework.github.com" ["l"="-1.85,2.207"]
"open-rpa/docker" ["l"="-1.545,1.941"]
"skadefro/openflow" ["l"="-1.545,1.955"]
"open-rpa/examples-files" ["l"="-1.561,1.948"]
"tsujio/OpenRPA" ["l"="-1.496,1.937"]
"TestStack/UIAVerify" ["l"="-1.328,1.835"]
"TestStack/uia-custom-pattern-managed" ["l"="-1.337,1.864"]
"Omenia/robotframework-whitelibrary" ["l"="-1.822,2.216"]
"MarketSquare/robotframework-SikuliLibrary" ["l"="-1.751,2.197"]
"nokia/robotframework-autoitlibrary" ["l"="-1.796,2.227"]
"bogdanripa/UiPath-Orchestrator-Smart-Scheduler" ["l"="-1.554,1.832"]
"UiPath/Chatbot-Samples" ["l"="-1.54,1.83"]
"jenkinsci/uipath-automation-package-plugin" ["l"="-1.585,1.835"]
"UiPath-Services/UiPath-DevOps-Scripts" ["l"="-1.568,1.816"]
"salabs/Epimetheus" ["l"="-1.84,2.186"]
"kivy/python-for-android" ["l"="41.731,20.82", "c"=1040]
"chriskiehl/Gooey" ["l"="42.747,20.842", "c"=1073]
"joke2k/faker" ["l"="44.687,20.582", "c"=20]
"psf/requests-html" ["l"="44.804,20.556", "c"=20]
"mozilla/geckodriver" ["l"="-1.97,-0.511", "c"=224]
"appium/appium" ["l"="-0.868,1.098", "c"=108]
"pytest-dev/pytest" ["l"="44.797,20.826", "c"=20]
"SeleniumHQ/selenium" ["l"="-2.029,-0.606", "c"=224]
"atinfo/awesome-test-automation" ["l"="-1.743,-0.368", "c"=224]
"allure-framework/allure2" ["l"="-1.798,-0.355", "c"=224]
"MarketSquare/SSHLibrary" ["l"="-1.708,2.217"]
"ppodgorsek/docker-robot-framework" ["l"="-1.769,2.117"]
"eficode/robotframework-imagehorizonlibrary" ["l"="-1.788,2.209"]
"lovelysystems/robotframework-ioslibrary" ["l"="-1.741,2.217"]
"winpython/winpython" ["l"="42.585,20.936", "c"=1073]
"baijum/selenium-python" ["l"="-1.106,1.105", "c"=108]
"appium-boneyard/sample-code" ["l"="-0.991,1.033", "c"=108]
"TestLinkOpenSourceTRMS/testlink-code" ["l"="-1.679,-0.208", "c"=224]
"ms7m/notify-py" ["l"="-1.092,2.182"]
"YuriyLisovskiy/pynotifier" ["l"="-1.052,2.185"]
"MarketSquare/Rammbock" ["l"="-1.676,2.264"]
"KianBrose/Image-Recognition-Botting-Tutorial" ["l"="-1.218,2.499"]
"KianBrose/Python-botting-butorial-part-2" ["l"="-1.221,2.526"]
"tryptech/obs-zoom-and-follow" ["l"="-55.449,9.35", "c"=558]
"Kalmat/PyWinCtl" ["l"="-1.208,2.209"]
"ClarityCoders/ComputerVision-OpenCV" ["l"="-1.255,2.449"]
"ClarityCoders/Fall-Guys-AI" ["l"="-1.202,2.42"]
"moises-dias/yolo-opencv-detector" ["l"="-1.206,2.454"]
"learncodebygaming/enb_bot" ["l"="-1.262,2.424"]
"6ftClaud/Lineage-Bot" ["l"="-1.231,2.431"]
"mkorpela/RoboMachine" ["l"="-1.695,2.255"]
"pavlobaron/robotframework-soapuilibrary" ["l"="-1.68,2.289"]
"ombre42/robotframework-sudslibrary" ["l"="-1.681,2.306"]
"peterservice-rnd/robotframework-jsonvalidator" ["l"="-1.718,2.268"]
"robotcodedev/robotcode" ["l"="-1.8,2.115"]
"SikuliX/SikuliX-Docs" ["l"="-1.453,2.204"]
"christianrondeau/SikuliSharp" ["l"="-1.469,2.219"]
"mehdime/DbContextScope" ["l"="-34.283,-1.004", "c"=8]
"OpenBotsAI/OpenBots.Server" ["l"="-1.585,1.955"]
"asweigart/pytweening" ["l"="-1.206,2.136"]
"garethdown44/nbuilder" ["l"="-1.154,1.741"]
"oriches/faker-cs" ["l"="-1.143,1.711"]
"AutoFixture/AutoFixture" ["l"="-34.54,-1.009", "c"=8]
"nickdodd79/AutoBogus" ["l"="-34.433,-0.715", "c"=8]
"MarketSquare/roboswag" ["l"="-1.815,2.107"]
"MarketSquare/robotframework-sherlock" ["l"="-1.79,2.1"]
"ReggX/pydirectinput_rgx" ["l"="-1.236,2.34"]
"kennyhml/pyinterception" ["l"="-46.737,9.232", "c"=655]
"bode135/pydamo" ["l"="-42.618,-35.623", "c"=40]
"WallBreaker2/op" ["l"="-42.68,-35.466", "c"=40]
"BestBurning/kmclassdll" ["l"="-42.615,-35.676", "c"=40]
"ddxoft/master" ["l"="-42.67,-35.61", "c"=40]
"starofrainnight/pywinio" ["l"="-42.502,-35.754", "c"=40]
"ItGarbager/aimcf_yolov5" ["l"="-44.059,-36.616", "c"=711]
"robotframework/PythonLibCore" ["l"="-1.772,2.217"]
"pbylicki/rfhub2" ["l"="-1.772,2.23"]
"jessezach/RobotEyes" ["l"="-1.843,2.129"]
"MarketSquare/robotframework-openapidriver" ["l"="-1.83,2.11"]
"MarketSquare/robotframework-style-guide" ["l"="-1.83,2.097"]
"robocorp/action-trigger-process" ["l"="-1.9,2.148"]
"robocorp/rcc" ["l"="-1.157,3.022", "c"=258]
"robocorp/robotframework-output-stream" ["l"="-1.856,2.144"]
"robocorp/action-upload-robot" ["l"="-1.904,2.135"]
"tomi/vscode-rf-language-server" ["l"="-1.873,2.152"]
"userzimmermann/robotframework-tools" ["l"="-1.686,2.226"]
"jupyter-xeus/xeus-python-wheel" ["l"="-1.938,2.078"]
"ClarityCoders/ZigZag" ["l"="-1.164,2.44"]
"ncbi/robotframework-pageobjects" ["l"="-1.735,2.241"]
"molsky/robotframework-dashboard" ["l"="-1.741,2.287"]
"dmizverev/robot-framework-library" ["l"="-1.734,2.261"]
"MarketSquare/robotframework-angularjs" ["l"="-1.718,2.251"]
"arkottke/winguiauto" ["l"="-1.33,2.095"]
"adiralashiva8/robotframework-examples" ["l"="-1.846,2.159"]
"Tesena-smart-testing/WatchUI" ["l"="-1.857,2.098"]
"robotframework/LibraryApiExamples" ["l"="-1.756,1.999"]
"robotframework/Generator" ["l"="-1.748,2.026"]
"wgnet/webium" ["l"="45.517,19.287", "c"=1169]
"daluu/robotframework-simple-page-object-example" ["l"="-1.755,2.244"]
"alisaifee/holmium.core" ["l"="45.548,19.246", "c"=1169]
"dm-vodopyanov/py_inspect" ["l"="-1.25,2.042"]
"joao-carloto/FireRobot" ["l"="-1.653,2.268"]
"wechaty/dotnet-wechaty" ["l"="-1.413,1.896"]
"wechaty/dotnet-wechaty-getting-started" ["l"="-1.416,1.867"]
"joonvena/robotframework-docker-action" ["l"="-1.798,2.049"]
"joonvena/robotframework-reporter-action" ["l"="-1.815,2.017"]
"robotframework/DosDontsSlides" ["l"="-1.739,2.063"]
"ClarityCoders/fishington.io-bot" ["l"="-1.267,2.486"]
"cluic/wxauto" ["l"="50.615,22.785", "c"=508]
"atinfo/at.info-knowledge-base" ["l"="-1.819,-0.351", "c"=224]
"appium/appium-for-mac" ["l"="-1.703,-1.04", "c"=224]
"gmamaladze/globalmousekeyhook" ["l"="-36.584,1.217", "c"=137]
"adiralashiva8/robotframework-keyword-metrics" ["l"="-1.849,2.24"]
"appium/appium-inspector" ["l"="-1.649,-0.595", "c"=224]
"shidenggui/easytrader" ["l"="-8.441,14.732", "c"=177]
"openatx/uiautomator2" ["l"="-0.867,0.965", "c"=108]
"lich0821/WeChatFerry" ["l"="50.578,22.738", "c"=508]
"ttttupup/wxhelper" ["l"="50.554,22.706", "c"=508]
"detro/ghostdriver" ["l"="-1.994,-0.307", "c"=224]
"emmatyping/pyhooked" ["l"="-1.26,2.248"]
"schurpf/pyhk" ["l"="-1.215,2.294"]
"UiPath-Services/OrchestratorManager" ["l"="-1.588,1.804"]
"Kuree/Faker.Net" ["l"="-1.106,1.696"]
"machulav/ec2-github-runner" ["l"="8.187,-45.589", "c"=544]
"connery-io/connery-sdk" ["l"="-1.97,2.165"]
"robocorp/robocorp-old" ["l"="-2.019,2.131"]
"mikahanninen/robots" ["l"="-2.043,2.128"]
"robocorp/actions-cookbook" ["l"="-1.978,2.136"]
"ldtp/cobra" ["l"="-1.218,1.995"]
"dzharii/swd-recorder" ["l"="-1.94,-0.34", "c"=224]
"Bumblebee/Bumblebee" ["l"="-1.233,1.924"]
"perfroboter/robotframework-perfbot" ["l"="-1.817,2.068"]
"Snooz82/robotframework-code-examples" ["l"="-1.807,2.08"]
"timdegroot1996/robotframework-dashboard" ["l"="-1.823,2.084"]
"vajrang-b/UiPathIn30Days" ["l"="-1.547,1.73"]
"UB-Mannheim/tesseract" ["l"="46.266,5.027", "c"=1062]
"LTEnjoy/easyChat" ["l"="50.496,22.787", "c"=508]
"SavinaRoja/PyUserInput" ["l"="-1.265,2.216"]
"jithurjacob/Windows-10-Toast-Notifications" ["l"="-1.236,2.166"]
"AI-M-BOT/DXcam" ["l"="-1.335,2.37"]
"NiiightmareXD/windows-capture" ["l"="-9.993,-9.134", "c"=905]
"RootKit-Org/BetterCam" ["l"="-1.316,2.414"]
"Fidelxyz/DXCam-CPP" ["l"="-1.317,2.381"]
"ekknod/logitech-cve" ["l"="-43.894,-36.583", "c"=711]
"mherkazandjian/fastgrab" ["l"="-1.334,2.394"]
"wangpy1995/dxgi4py" ["l"="-1.303,2.394"]
"not-matthias/obs-rs" ["l"="-43.843,-36.582", "c"=711]
"lovettchris/wincam" ["l"="-1.287,2.387"]
"Franklin-Zhang0/Yolo-v8-Apex-Aim-assist" ["l"="-43.966,-36.584", "c"=711]
"pyturtle/Valorant-AI-cheats" ["l"="-44.11,-36.559", "c"=711]
"J2TEAM/awesome-AutoIt" ["l"="52.185,0.569", "c"=585]
"TestStack/TestStack.ConventionTests" ["l"="-1.199,1.799"]
"TestStack/TestStack.Seleno" ["l"="-1.239,1.758"]
"TestStack/TestStack.Dossier" ["l"="-1.202,1.774"]
"adamralph/xbehave.net" ["l"="-34.351,-0.728", "c"=8]
"vardecab/win10toast-click" ["l"="-1.182,2.204"]
"Infinidat/infi.systray" ["l"="-1.164,2.165"]
"kivy/plyer" ["l"="41.681,20.763", "c"=1040]
"TkinterEP/ttkthemes" ["l"="41.867,19.989", "c"=1130]
"malja/zroya" ["l"="-1.165,2.132"]
"GitHub30/win11toast" ["l"="41.703,19.831", "c"=1130]
"go-toast/toast" ["l"="3.63,-5.639", "c"=255]
"Windos/BurntToast" ["l"="-48.006,7.595", "c"=311]
"Riamse/autopy3" ["l"="-1.198,2.087"]
"robotframework/DbBot" ["l"="-1.792,2.271"]
"robotframework/RemoteInterface" ["l"="-1.788,2.291"]
"MarketSquare/robotframework-webservice" ["l"="-1.792,2.253"]
"small99/AutoLink" ["l"="-1.205,1.156", "c"=108]
"saucepleez/sharpRPA" ["l"="-1.508,1.923"]
"bendersej/bill-collector" ["l"="-1.925,2.118"]
"robotframework/jrobotremoteserver" ["l"="-1.802,2.315"]
"mentalisttraceur/robotframework-dependencylibrary" ["l"="-1.782,2.24"]
"pepijndevos/PyMouse" ["l"="-1.223,2.227"]
"python-xlib/python-xlib" ["l"="-14.49,-2.968", "c"=71]
"MarketSquare/robotframeworkguides" ["l"="-1.861,2.063"]
"F1ashhimself/UISoup" ["l"="-1.188,1.978"]
"MarketSquare/robotframework-openapi-libcore" ["l"="-1.849,2.084"]
"MarketSquare/robotframework-openapitools" ["l"="-1.837,2.074"]
"opencv/opencv-python" ["l"="43.53,23.417", "c"=95]
"snoopwpf/snoopwpf" ["l"="-36.56,1.065", "c"=137]
"TestStack/TestStack.docs" ["l"="-1.307,1.907"]
"fsprojects/Paket" ["l"="-35.985,-3.182", "c"=364]
"Fody/Costura" ["l"="-34.795,-1.058", "c"=8]
"SpecFlowOSS/SpecFlow" ["l"="-34.534,-0.878", "c"=8]
"reactiveui/Akavache" ["l"="-36.776,-2.227", "c"=113]
"mkleehammer/pyodbc" ["l"="44.326,20.893", "c"=20]
"TomSchimansky/TkinterMapView" ["l"="41.857,19.939", "c"=1130]
"ragardner/tksheet" ["l"="41.874,19.975", "c"=1130]
"PySimpleGUI/psgtray" ["l"="-1.137,2.175"]
"TkinterEP/ttkwidgets" ["l"="41.897,19.971", "c"=1130]
"Akuli/porcupine" ["l"="41.946,19.921", "c"=1130]
"nngogol/async-desktop-chat" ["l"="-1.154,2.195"]
"alejandroautalan/pygubu-designer" ["l"="41.833,19.971", "c"=1130]
"CommunityToolkit/WindowsCommunityToolkit" ["l"="-36.694,0.886", "c"=137]
"reactiveui/ReactiveUI" ["l"="-36.651,0.922", "c"=137]
"appium/appium-desktop" ["l"="-0.933,1.058", "c"=108]
"microsoft/microsoft-ui-xaml" ["l"="-36.702,0.849", "c"=137]
"davycloud/robotframework-userguide-cn" ["l"="-1.749,2.331"]
"Digital-Sapphire/PyUpdater" ["l"="42.391,20.906", "c"=1073]
"hamiltron/py-simple-audio" ["l"="-1.147,2.272"]
"spatialaudio/python-sounddevice" ["l"="38.349,3.975", "c"=201]
"andumorie/uipath-face-recognition-framework" ["l"="-1.5,1.835"]
"UiPath/uipathcli" ["l"="-1.589,1.781"]
"robocorp/robocorp" ["l"="-1.934,2.153"]
"Sema4AI/actions" ["l"="-1.948,2.136"]
"Sema4AI/cookbook" ["l"="-1.962,2.144"]
"FlaUI/FlaUI.WebDriver" ["l"="-1.388,1.903"]
"KianBrose/smtp_mail_bot_server" ["l"="-1.195,2.554"]
"asyrjasalo/rfdocker" ["l"="-1.771,2.061"]
"ypasmk/robot-framework-docker" ["l"="-1.783,2.076"]
"ClarityCoders/TornadoBot" ["l"="-1.182,2.476"]
"yandex-qatools/htmlelements-dotnet" ["l"="-1.214,1.907"]
"Answeror/pyhook_py3k" ["l"="-1.188,2.267"]
"gggfreak2003/PyHook3" ["l"="-1.16,2.297"]
"schickling/chromeless" ["l"="-1.187,-26.897", "c"=814]
"muesli/beehive" ["l"="3.882,-8.132", "c"=0]
"forter/security-101-for-saas-startups" ["l"="23.334,-26.817", "c"=28]
"go-vgo/robotgo" ["l"="3.534,-5.682", "c"=255]
"botpress/botpress" ["l"="15.591,-10.128", "c"=198]
"AmrEldib/cmder-powerline-prompt" ["l"="-50.622,12.976", "c"=2126]
"SunOner/sunone_aimbot" ["l"="-44.028,-36.568", "c"=711]
"sohwendy/Robotcorder" ["l"="-1.895,2.202"]
"enigo-rs/enigo" ["l"="-9.909,-9.083", "c"=905]
"nateshmbhat/pyttsx3" ["l"="35.267,2.375", "c"=308]
"SeleniumHQ/selenium-ide" ["l"="-1.928,-0.518", "c"=224]
"leoxiaoping/pbottleRPA" ["l"="50.141,3.388", "c"=941]
"OpenBMB/ProAgent" ["l"="36.808,-2.184", "c"=797]
"microsoft/WindowsAgentArena" ["l"="36.765,-1.524", "c"=795]
"LoveOctocat/UI.Vision-Kantu-ZH" ["l"="-1.571,2.015"]
"flexxui/flexx" ["l"="42.535,20.798", "c"=1073]
"rawpython/remi" ["l"="42.572,20.767", "c"=1073]
"bode135/VirtualKey_with_Ctypes" ["l"="-42.619,-35.649", "c"=40]
"kiwitcms/Kiwi" ["l"="-1.703,-0.185", "c"=224]
"twenzel/FlaUIRecorder" ["l"="-1.412,1.925"]
"iPlantCollaborativeOpenSource/Robotframework-MongoDB-Library" ["l"="-1.676,2.338"]
}