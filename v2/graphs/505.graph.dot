digraph G {
"google-research/arxiv-latex-cleaner" -> "rtqichen/torchdiffeq" ["e"=1]
"nomic-ai/deepscatter" -> "PAIR-code/scatter-gl" ["e"=1]
"nomic-ai/deepscatter" -> "PAIR-code/umap-js" ["e"=1]
"rosinality/vq-vae-2-pytorch" -> "ritheshkumar95/pytorch-vqvae"
"rosinality/vq-vae-2-pytorch" -> "zalandoresearch/pytorch-vq-vae"
"rosinality/vq-vae-2-pytorch" -> "nadavbh12/VQ-VAE"
"rosinality/vq-vae-2-pytorch" -> "MishaLaskin/vqvae"
"rosinality/vq-vae-2-pytorch" -> "CompVis/taming-transformers" ["e"=1]
"rosinality/vq-vae-2-pytorch" -> "AntixK/PyTorch-VAE" ["e"=1]
"rosinality/vq-vae-2-pytorch" -> "lucidrains/vector-quantize-pytorch" ["e"=1]
"rosinality/vq-vae-2-pytorch" -> "NVlabs/NVAE"
"rosinality/vq-vae-2-pytorch" -> "rosinality/stylegan2-pytorch" ["e"=1]
"rosinality/vq-vae-2-pytorch" -> "ajbrock/BigGAN-PyTorch" ["e"=1]
"rosinality/vq-vae-2-pytorch" -> "microsoft/VQ-Diffusion" ["e"=1]
"rosinality/vq-vae-2-pytorch" -> "rosinality/style-based-gan-pytorch" ["e"=1]
"rosinality/vq-vae-2-pytorch" -> "vvvm23/vqvae-2"
"rosinality/vq-vae-2-pytorch" -> "openai/guided-diffusion" ["e"=1]
"rosinality/vq-vae-2-pytorch" -> "mseitzer/pytorch-fid" ["e"=1]
"PAIR-code/umap-js" -> "PAIR-code/scatter-gl"
"PAIR-code/umap-js" -> "PAIR-code/understanding-umap"
"PAIR-code/umap-js" -> "saehm/DruidJS" ["e"=1]
"PAIR-code/umap-js" -> "scienceai/tsne-js"
"PAIR-code/umap-js" -> "karpathy/tsnejs"
"karpathy/convnetjs" -> "karpathy/reinforcejs" ["e"=1]
"patrick-kidger/Deep-Signature-Transforms" -> "patrick-kidger/signatory"
"patrick-kidger/Deep-Signature-Transforms" -> "bottler/iisignature"
"patrick-kidger/Deep-Signature-Transforms" -> "jambo6/generalised-signature-method"
"patrick-kidger/Deep-Signature-Transforms" -> "kormilitzin/the-signature-method-in-machine-learning"
"patrick-kidger/signatory" -> "patrick-kidger/Deep-Signature-Transforms"
"patrick-kidger/signatory" -> "bottler/iisignature"
"patrick-kidger/signatory" -> "crispitagorico/sigkernel"
"patrick-kidger/signatory" -> "anh-tong/signax"
"patrick-kidger/signatory" -> "datasig-ac-uk/esig"
"patrick-kidger/signatory" -> "jambo6/generalised-signature-method"
"patrick-kidger/signatory" -> "jambo6/neuralRDEs"
"patrick-kidger/signatory" -> "SigCGANs/Conditional-Sig-Wasserstein-GANs" ["e"=1]
"patrick-kidger/signatory" -> "patrick-kidger/torchcde"
"patrick-kidger/signatory" -> "tgcsaba/GPSig"
"patrick-kidger/signatory" -> "patrick-kidger/NeuralCDE"
"patrick-kidger/signatory" -> "kormilitzin/the-signature-method-in-machine-learning"
"patrick-kidger/signatory" -> "imanolperez/market_simulator" ["e"=1]
"patrick-kidger/signatory" -> "datasig-ac-uk/RoughPy"
"patrick-kidger/signatory" -> "datasig-ac-uk/signature_applications"
"google-deepmind/mathematics_dataset" -> "google-deepmind/neural-processes" ["e"=1]
"google-research/disentanglement_lib" -> "sootlasten/disentangled-representation-papers" ["e"=1]
"google-research/disentanglement_lib" -> "YannDubs/disentangling-vae"
"google-research/disentanglement_lib" -> "google-deepmind/dsprites-dataset"
"google-research/disentanglement_lib" -> "rtqichen/beta-tcvae"
"google-research/disentanglement_lib" -> "amir-abdi/disentanglement-pytorch"
"google-research/disentanglement_lib" -> "1Konny/Beta-VAE"
"google-research/disentanglement_lib" -> "1Konny/FactorVAE"
"google-research/disentanglement_lib" -> "Schlumberger/joint-vae"
"google-research/disentanglement_lib" -> "rr-learning/disentanglement_dataset"
"google-research/disentanglement_lib" -> "google/compare_gan" ["e"=1]
"google-research/disentanglement_lib" -> "bayesiains/nsf" ["e"=1]
"google-research/disentanglement_lib" -> "kimhc6028/relational-networks" ["e"=1]
"google-research/disentanglement_lib" -> "matthewvowels1/Awesome-VAEs"
"google-research/disentanglement_lib" -> "ethanfetaya/NRI" ["e"=1]
"google-research/disentanglement_lib" -> "rdevon/DIM" ["e"=1]
"rtqichen/torchdiffeq" -> "DiffEqML/torchdyn"
"rtqichen/torchdiffeq" -> "Zymrael/awesome-neural-ode"
"rtqichen/torchdiffeq" -> "rtqichen/ffjord"
"rtqichen/torchdiffeq" -> "google-research/torchsde"
"rtqichen/torchdiffeq" -> "msurtsukov/neural-ode"
"rtqichen/torchdiffeq" -> "patrick-kidger/diffrax" ["e"=1]
"rtqichen/torchdiffeq" -> "cornellius-gp/gpytorch" ["e"=1]
"rtqichen/torchdiffeq" -> "YuliaRubanova/latent_ode"
"rtqichen/torchdiffeq" -> "pyro-ppl/pyro" ["e"=1]
"rtqichen/torchdiffeq" -> "EmilienDupont/augmented-neural-odes"
"rtqichen/torchdiffeq" -> "HIPS/autograd" ["e"=1]
"rtqichen/torchdiffeq" -> "lululxvi/deepxde" ["e"=1]
"rtqichen/torchdiffeq" -> "atong01/conditional-flow-matching" ["e"=1]
"rtqichen/torchdiffeq" -> "arogozhnikov/einops" ["e"=1]
"rtqichen/torchdiffeq" -> "patrick-kidger/NeuralCDE"
"epfml/OptML_course" -> "janosh/awesome-normalizing-flows" ["e"=1]
"dynamicslab/pysindy" -> "DiffEqML/torchdyn" ["e"=1]
"jiacheng-xu/vmf_vae_nlp" -> "nicola-decao/s-vae-pytorch" ["e"=1]
"bojone/vae" -> "bojone/flow" ["e"=1]
"openai/glow" -> "chaiyujin/glow-pytorch" ["e"=1]
"openai/glow" -> "rosinality/glow-pytorch" ["e"=1]
"rdevon/DIM" -> "google-research/disentanglement_lib" ["e"=1]
"nicola-decao/s-vae-pytorch" -> "nicola-decao/s-vae-tf"
"nicola-decao/s-vae-pytorch" -> "jiacheng-xu/vmf_vae_nlp" ["e"=1]
"nicola-decao/s-vae-pytorch" -> "pimdh/lie-vae" ["e"=1]
"nicola-decao/s-vae-pytorch" -> "riannevdberg/sylvester-flows"
"nicola-decao/s-vae-pytorch" -> "emilemathieu/pvae" ["e"=1]
"nicola-decao/s-vae-pytorch" -> "jmtomczak/vae_vampprior"
"nicola-decao/s-vae-pytorch" -> "jxhe/vae-lagging-encoder" ["e"=1]
"nicola-decao/s-vae-pytorch" -> "nicola-decao/power_spherical"
"nicola-decao/s-vae-pytorch" -> "1Konny/Beta-VAE"
"nicola-decao/s-vae-pytorch" -> "rtqichen/beta-tcvae"
"nicola-decao/s-vae-pytorch" -> "Schlumberger/joint-vae"
"arxiv-vanity/arxiv-vanity" -> "karpathy/arxiv-sanity-lite" ["e"=1]
"chiphuyen/sotawhat" -> "ikostrikov/pytorch-flows" ["e"=1]
"facebookresearch/nevergrad" -> "rtqichen/torchdiffeq" ["e"=1]
"google/neural-tangents" -> "DiffEqML/torchdyn" ["e"=1]
"google/neural-tangents" -> "google-research/torchsde" ["e"=1]
"google/neural-tangents" -> "rtqichen/torchdiffeq" ["e"=1]
"MishaLaskin/vqvae" -> "ritheshkumar95/pytorch-vqvae"
"MishaLaskin/vqvae" -> "rosinality/vq-vae-2-pytorch"
"MishaLaskin/vqvae" -> "nadavbh12/VQ-VAE"
"MishaLaskin/vqvae" -> "zalandoresearch/pytorch-vq-vae"
"MishaLaskin/vqvae" -> "dome272/VQGAN-pytorch" ["e"=1]
"MishaLaskin/vqvae" -> "lucidrains/vector-quantize-pytorch" ["e"=1]
"MishaLaskin/vqvae" -> "cientgu/VQ-Diffusion" ["e"=1]
"MishaLaskin/vqvae" -> "karpathy/deep-vector-quantization"
"MishaLaskin/vqvae" -> "CompVis/taming-transformers" ["e"=1]
"MishaLaskin/vqvae" -> "vvvm23/vqvae-2"
"MishaLaskin/vqvae" -> "microsoft/VQ-Diffusion" ["e"=1]
"MishaLaskin/vqvae" -> "AntixK/PyTorch-VAE" ["e"=1]
"MishaLaskin/vqvae" -> "YannDubs/disentangling-vae"
"MishaLaskin/vqvae" -> "ermongroup/ddim" ["e"=1]
"MishaLaskin/vqvae" -> "LTH14/mar" ["e"=1]
"dataflowr/notebooks" -> "jmtomczak/intro_dgm" ["e"=1]
"rosinality/glow-pytorch" -> "chaiyujin/glow-pytorch"
"rosinality/glow-pytorch" -> "y0ast/Glow-PyTorch"
"rosinality/glow-pytorch" -> "kamenbliznashki/normalizing_flows"
"rosinality/glow-pytorch" -> "ikostrikov/pytorch-flows"
"rosinality/glow-pytorch" -> "chrischute/real-nvp"
"rosinality/glow-pytorch" -> "rtqichen/residual-flows"
"rosinality/glow-pytorch" -> "chrischute/glow"
"rosinality/glow-pytorch" -> "openai/glow" ["e"=1]
"rosinality/glow-pytorch" -> "jhjacobsen/invertible-resnet"
"rosinality/glow-pytorch" -> "shirleyzhu233/realNVP"
"rosinality/glow-pytorch" -> "bayesiains/nflows"
"rosinality/glow-pytorch" -> "karpathy/pytorch-normalizing-flows"
"rosinality/glow-pytorch" -> "VincentStimper/normalizing-flows"
"rosinality/glow-pytorch" -> "bojone/flow"
"rosinality/glow-pytorch" -> "andreas128/SRFlow" ["e"=1]
"karpathy/pytorch-made" -> "ikostrikov/pytorch-flows"
"karpathy/pytorch-made" -> "mgermain/MADE"
"karpathy/pytorch-made" -> "karpathy/pytorch-normalizing-flows"
"karpathy/pytorch-made" -> "gpapamak/maf"
"karpathy/pytorch-made" -> "karpathy/find-birds"
"karpathy/pytorch-made" -> "riannevdberg/sylvester-flows"
"karpathy/pytorch-made" -> "ericjang/normalizing-flows-tutorial"
"karpathy/pytorch-made" -> "kamenbliznashki/normalizing_flows"
"karpathy/pytorch-made" -> "nicola-decao/BNAF"
"karpathy/pytorch-made" -> "karpathy/examples"
"karpathy/pytorch-made" -> "karpathy/deep-vector-quantization"
"karpathy/pytorch-made" -> "ANLGBOY/MADE-with-PyTorch"
"karpathy/pytorch-made" -> "ptrblck/prog_gans_pytorch_inference" ["e"=1]
"karpathy/pytorch-made" -> "CW-Huang/NAF"
"karpathy/pytorch-made" -> "jzbontar/pixelcnn-pytorch"
"karpathy/ulogme" -> "selfspy/selfspy" ["e"=1]
"karpathy/ulogme" -> "Naereen/uLogMe"
"karpathy/ulogme" -> "karpathy/arxiv-sanity-lite"
"karpathy/ulogme" -> "karpathy/deep-vector-quantization"
"karpathy/ulogme" -> "karpathy/karpathy.github.io"
"karpathy/ulogme" -> "karpathy/researchlei"
"karpathy/ulogme" -> "karpathy/notpygamejs"
"karpathy/ulogme" -> "rejuvyesh/arbtt-graph" ["e"=1]
"karpathy/ulogme" -> "karpathy/cryptos"
"karpathy/ulogme" -> "karpathy/gitstats"
"karpathy/ulogme" -> "karpathy/paper-notes" ["e"=1]
"karpathy/ulogme" -> "sourcegraph/thyme" ["e"=1]
"karpathy/ulogme" -> "karpathy/forestjs"
"karpathy/ulogme" -> "karpathy/recurrentjs"
"karpathy/ulogme" -> "karpathy/pytorch-made"
"colah/colah.github.io" -> "karpathy/karpathy.github.io"
"colah/colah.github.io" -> "colah/Conv-Nets-Series"
"colah/colah.github.io" -> "facebookarchive/bAbI-tasks" ["e"=1]
"colah/colah.github.io" -> "soumith/convnet-benchmarks" ["e"=1]
"Ranlot/single-parameter-fit" -> "dragonfly/dragonfly" ["e"=1]
"Ranlot/single-parameter-fit" -> "greydanus/hamiltonian-nn"
"harthur/clustering" -> "harthur/classifier" ["e"=1]
"harthur/clustering" -> "uhho/density-clustering"
"harthur/clustering" -> "nicolaspanel/node-svm"
"harthur/clustering" -> "Philmod/node-kmeans"
"harthur/clustering" -> "karpathy/forestjs"
"loudinthecloud/pytorch-ntm" -> "jhjacobsen/pytorch-i-revnet" ["e"=1]
"uhho/density-clustering" -> "upphiminn/jDBSCAN"
"uhho/density-clustering" -> "solzimer/skmeans"
"uhho/density-clustering" -> "harthur/clustering"
"ikostrikov/pytorch-flows" -> "kamenbliznashki/normalizing_flows"
"ikostrikov/pytorch-flows" -> "bayesiains/nsf" ["e"=1]
"ikostrikov/pytorch-flows" -> "nicola-decao/BNAF"
"ikostrikov/pytorch-flows" -> "karpathy/pytorch-normalizing-flows"
"ikostrikov/pytorch-flows" -> "karpathy/pytorch-made"
"ikostrikov/pytorch-flows" -> "bayesiains/nflows"
"ikostrikov/pytorch-flows" -> "rtqichen/ffjord"
"ikostrikov/pytorch-flows" -> "rosinality/glow-pytorch"
"ikostrikov/pytorch-flows" -> "riannevdberg/sylvester-flows"
"ikostrikov/pytorch-flows" -> "gpapamak/maf"
"ikostrikov/pytorch-flows" -> "tonyduan/normalizing-flows"
"ikostrikov/pytorch-flows" -> "didriknielsen/survae_flows"
"ikostrikov/pytorch-flows" -> "chrischute/real-nvp"
"ikostrikov/pytorch-flows" -> "CW-Huang/NAF"
"ikostrikov/pytorch-flows" -> "rtqichen/residual-flows"
"karpathy/find-birds" -> "karpathy/pytorch-made"
"karpathy/find-birds" -> "karpathy/optim"
"karpathy/find-birds" -> "karpathy/tf-agent"
"karpathy/find-birds" -> "karpathy/twoolpy"
"karpathy/find-birds" -> "karpathy/notpygamejs"
"karpathy/find-birds" -> "karpathy/covid-sanity"
"vislearn/FrEIA" -> "vislearn/analyzing_inverse_problems"
"vislearn/FrEIA" -> "vislearn/conditional_INNs"
"vislearn/FrEIA" -> "bayesiains/nflows"
"vislearn/FrEIA" -> "gudovskiy/cflow-ad" ["e"=1]
"vislearn/FrEIA" -> "janosh/awesome-normalizing-flows"
"vislearn/FrEIA" -> "pkuxmq/Invertible-Image-Rescaling" ["e"=1]
"vislearn/FrEIA" -> "jhjacobsen/invertible-resnet"
"vislearn/FrEIA" -> "kamenbliznashki/normalizing_flows"
"vislearn/FrEIA" -> "gathierry/FastFlow" ["e"=1]
"vislearn/FrEIA" -> "didriknielsen/survae_flows"
"vislearn/FrEIA" -> "VincentStimper/normalizing-flows"
"vislearn/FrEIA" -> "rosinality/glow-pytorch"
"vislearn/FrEIA" -> "jhjacobsen/pytorch-i-revnet"
"vislearn/FrEIA" -> "marco-rudolph/differnet" ["e"=1]
"vislearn/FrEIA" -> "chrischute/real-nvp"
"openai/sparse_attention" -> "openai/distribution_augmentation" ["e"=1]
"google-deepmind/3d-shapes" -> "rr-learning/disentanglement_dataset"
"google-deepmind/3d-shapes" -> "google-deepmind/dsprites-dataset"
"google-deepmind/3d-shapes" -> "1Konny/FactorVAE"
"google-deepmind/3d-shapes" -> "paruby/DIP-VAE"
"google-deepmind/3d-shapes" -> "amir-abdi/disentanglement-pytorch"
"google-deepmind/3d-shapes" -> "cianeastwood/qedr"
"kefirski/bdir_vae" -> "jmtomczak/vae_vpflows"
"kefirski/bdir_vae" -> "sbaurdlp/keras-iaf-mnist"
"ericjang/normalizing-flows-tutorial" -> "abdulfatir/normalizing-flows"
"ericjang/normalizing-flows-tutorial" -> "gpapamak/maf"
"ericjang/normalizing-flows-tutorial" -> "ex4sperans/variational-inference-with-normalizing-flows"
"ericjang/normalizing-flows-tutorial" -> "riannevdberg/sylvester-flows"
"ericjang/normalizing-flows-tutorial" -> "tonyduan/normalizing-flows"
"ericjang/normalizing-flows-tutorial" -> "kamenbliznashki/normalizing_flows"
"ericjang/normalizing-flows-tutorial" -> "openai/iaf" ["e"=1]
"ericjang/normalizing-flows-tutorial" -> "LukasRinder/normalizing-flows"
"ericjang/normalizing-flows-tutorial" -> "ikostrikov/pytorch-flows"
"ericjang/normalizing-flows-tutorial" -> "PolinaKirichenko/flows_ood"
"ericjang/normalizing-flows-tutorial" -> "karpathy/pytorch-normalizing-flows"
"ericjang/normalizing-flows-tutorial" -> "nicola-decao/BNAF"
"ericjang/normalizing-flows-tutorial" -> "bayesiains/nsf" ["e"=1]
"ericjang/normalizing-flows-tutorial" -> "taesungp/real-nvp"
"ericjang/normalizing-flows-tutorial" -> "acids-ircam/pytorch_flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "abdulfatir/normalizing-flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "riannevdberg/sylvester-flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "tonyduan/normalizing-flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "ericjang/normalizing-flows-tutorial"
"ex4sperans/variational-inference-with-normalizing-flows" -> "bayesiains/nsf" ["e"=1]
"ex4sperans/variational-inference-with-normalizing-flows" -> "gpapamak/maf"
"ex4sperans/variational-inference-with-normalizing-flows" -> "ikostrikov/pytorch-flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "chrischute/real-nvp"
"ex4sperans/variational-inference-with-normalizing-flows" -> "kefirski/bdir_vae"
"ex4sperans/variational-inference-with-normalizing-flows" -> "aravindsrinivas/flowpp"
"ex4sperans/variational-inference-with-normalizing-flows" -> "karpathy/pytorch-normalizing-flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "jmtomczak/vae_vpflows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "bojone/flow"
"ex4sperans/variational-inference-with-normalizing-flows" -> "bayesiains/nflows"
"chrischute/real-nvp" -> "shirleyzhu233/realNVP"
"chrischute/real-nvp" -> "chaiyujin/glow-pytorch"
"chrischute/real-nvp" -> "kamenbliznashki/normalizing_flows"
"chrischute/real-nvp" -> "didriknielsen/survae_flows"
"chrischute/real-nvp" -> "chrischute/glow"
"chrischute/real-nvp" -> "rosinality/glow-pytorch"
"chrischute/real-nvp" -> "y0ast/Glow-PyTorch"
"chrischute/real-nvp" -> "senya-ashukha/real-nvp-pytorch"
"chrischute/real-nvp" -> "tonyduan/normalizing-flows"
"chrischute/real-nvp" -> "paultsw/nice_pytorch"
"chrischute/real-nvp" -> "ikostrikov/pytorch-flows"
"chrischute/real-nvp" -> "PolinaKirichenko/flows_ood"
"chrischute/real-nvp" -> "rtqichen/ffjord"
"chrischute/real-nvp" -> "gpapamak/maf"
"chrischute/real-nvp" -> "aravindsrinivas/flowpp"
"kamenbliznashki/normalizing_flows" -> "tonyduan/normalizing-flows"
"kamenbliznashki/normalizing_flows" -> "bayesiains/nflows"
"kamenbliznashki/normalizing_flows" -> "karpathy/pytorch-normalizing-flows"
"kamenbliznashki/normalizing_flows" -> "ikostrikov/pytorch-flows"
"kamenbliznashki/normalizing_flows" -> "didriknielsen/survae_flows"
"kamenbliznashki/normalizing_flows" -> "rosinality/glow-pytorch"
"kamenbliznashki/normalizing_flows" -> "riannevdberg/sylvester-flows"
"kamenbliznashki/normalizing_flows" -> "janosh/awesome-normalizing-flows"
"kamenbliznashki/normalizing_flows" -> "gpapamak/maf"
"kamenbliznashki/normalizing_flows" -> "nicola-decao/BNAF"
"kamenbliznashki/normalizing_flows" -> "VincentStimper/normalizing-flows"
"kamenbliznashki/normalizing_flows" -> "ex4sperans/variational-inference-with-normalizing-flows"
"kamenbliznashki/normalizing_flows" -> "y0ast/Glow-PyTorch"
"kamenbliznashki/normalizing_flows" -> "chaiyujin/glow-pytorch"
"kamenbliznashki/normalizing_flows" -> "chrischute/real-nvp"
"rtqichen/beta-tcvae" -> "1Konny/FactorVAE"
"rtqichen/beta-tcvae" -> "Schlumberger/joint-vae"
"rtqichen/beta-tcvae" -> "1Konny/Beta-VAE"
"rtqichen/beta-tcvae" -> "google-deepmind/dsprites-dataset"
"rtqichen/beta-tcvae" -> "google-research/disentanglement_lib"
"rtqichen/beta-tcvae" -> "YannDubs/disentangling-vae"
"rtqichen/beta-tcvae" -> "amir-abdi/disentanglement-pytorch"
"rtqichen/beta-tcvae" -> "miyosuda/disentangled_vae"
"rtqichen/beta-tcvae" -> "sootlasten/disentangled-representation-papers" ["e"=1]
"rtqichen/beta-tcvae" -> "jxhe/vae-lagging-encoder" ["e"=1]
"rtqichen/beta-tcvae" -> "ananyahjha93/cycle-consistent-vae"
"rtqichen/beta-tcvae" -> "cianeastwood/qedr"
"rtqichen/beta-tcvae" -> "rr-learning/disentanglement_dataset"
"rtqichen/beta-tcvae" -> "jmtomczak/vae_vampprior"
"rtqichen/beta-tcvae" -> "daib13/TwoStageVAE"
"ritheshkumar95/pytorch-vqvae" -> "rosinality/vq-vae-2-pytorch"
"ritheshkumar95/pytorch-vqvae" -> "zalandoresearch/pytorch-vq-vae"
"ritheshkumar95/pytorch-vqvae" -> "MishaLaskin/vqvae"
"ritheshkumar95/pytorch-vqvae" -> "nadavbh12/VQ-VAE"
"ritheshkumar95/pytorch-vqvae" -> "hiwonjoon/tf-vqvae"
"ritheshkumar95/pytorch-vqvae" -> "swasun/VQ-VAE-Speech" ["e"=1]
"ritheshkumar95/pytorch-vqvae" -> "lucidrains/vector-quantize-pytorch" ["e"=1]
"ritheshkumar95/pytorch-vqvae" -> "nakosung/VQ-VAE"
"ritheshkumar95/pytorch-vqvae" -> "1Konny/Beta-VAE"
"ritheshkumar95/pytorch-vqvae" -> "karpathy/deep-vector-quantization"
"ritheshkumar95/pytorch-vqvae" -> "dome272/VQGAN-pytorch" ["e"=1]
"ritheshkumar95/pytorch-vqvae" -> "google-research/disentanglement_lib"
"ritheshkumar95/pytorch-vqvae" -> "AntixK/PyTorch-VAE" ["e"=1]
"ritheshkumar95/pytorch-vqvae" -> "YannDubs/disentangling-vae"
"ritheshkumar95/pytorch-vqvae" -> "1Konny/VQ-VAE"
"chaiyujin/glow-pytorch" -> "rosinality/glow-pytorch"
"chaiyujin/glow-pytorch" -> "y0ast/Glow-PyTorch"
"chaiyujin/glow-pytorch" -> "chrischute/real-nvp"
"chaiyujin/glow-pytorch" -> "kamenbliznashki/normalizing_flows"
"chaiyujin/glow-pytorch" -> "pclucas14/pytorch-glow"
"chaiyujin/glow-pytorch" -> "chrischute/glow"
"chaiyujin/glow-pytorch" -> "jhjacobsen/invertible-resnet"
"chaiyujin/glow-pytorch" -> "openai/glow" ["e"=1]
"chaiyujin/glow-pytorch" -> "andreas128/SRFlow" ["e"=1]
"chaiyujin/glow-pytorch" -> "corenel/pytorch-glow"
"chaiyujin/glow-pytorch" -> "ikostrikov/pytorch-flows"
"chaiyujin/glow-pytorch" -> "rtqichen/ffjord"
"chaiyujin/glow-pytorch" -> "rtqichen/residual-flows"
"chaiyujin/glow-pytorch" -> "aravindsrinivas/flowpp"
"chaiyujin/glow-pytorch" -> "jhjacobsen/pytorch-i-revnet"
"openai/ebm_code_release" -> "openai/distribution_augmentation" ["e"=1]
"MCG-NKU/CmCode" -> "torrvision/Objectness" ["e"=1]
"YannDubs/disentangling-vae" -> "google-research/disentanglement_lib"
"YannDubs/disentangling-vae" -> "1Konny/Beta-VAE"
"YannDubs/disentangling-vae" -> "rtqichen/beta-tcvae"
"YannDubs/disentangling-vae" -> "amir-abdi/disentanglement-pytorch"
"YannDubs/disentangling-vae" -> "matthewvowels1/Awesome-VAEs"
"YannDubs/disentangling-vae" -> "google-deepmind/dsprites-dataset"
"YannDubs/disentangling-vae" -> "nmichlo/disent"
"YannDubs/disentangling-vae" -> "1Konny/FactorVAE"
"YannDubs/disentangling-vae" -> "Schlumberger/joint-vae"
"YannDubs/disentangling-vae" -> "sootlasten/disentangled-representation-papers" ["e"=1]
"YannDubs/disentangling-vae" -> "miyosuda/disentangled_vae"
"YannDubs/disentangling-vae" -> "daib13/TwoStageVAE"
"YannDubs/disentangling-vae" -> "clementchadebec/benchmark_VAE"
"YannDubs/disentangling-vae" -> "AntixK/PyTorch-VAE" ["e"=1]
"YannDubs/disentangling-vae" -> "NVlabs/NVAE"
"thunil/Physics-Based-Deep-Learning" -> "DiffEqML/torchdyn" ["e"=1]
"thunil/Physics-Based-Deep-Learning" -> "Zymrael/awesome-neural-ode" ["e"=1]
"junku901/machine_learning" -> "nicolaspanel/node-svm" ["e"=1]
"Zymrael/awesome-neural-ode" -> "DiffEqML/torchdyn"
"Zymrael/awesome-neural-ode" -> "msurtsukov/neural-ode"
"Zymrael/awesome-neural-ode" -> "rtqichen/torchdiffeq"
"Zymrael/awesome-neural-ode" -> "EmilienDupont/augmented-neural-odes"
"Zymrael/awesome-neural-ode" -> "patrick-kidger/NeuralCDE"
"Zymrael/awesome-neural-ode" -> "google-research/torchsde"
"Zymrael/awesome-neural-ode" -> "YuliaRubanova/latent_ode"
"Zymrael/awesome-neural-ode" -> "patrick-kidger/torchcde"
"Zymrael/awesome-neural-ode" -> "patrick-kidger/diffrax" ["e"=1]
"Zymrael/awesome-neural-ode" -> "jacobjinkelly/easy-neural-ode"
"Zymrael/awesome-neural-ode" -> "NeuroDiffGym/neurodiffeq" ["e"=1]
"Zymrael/awesome-neural-ode" -> "2prime/ODE-DL" ["e"=1]
"Zymrael/awesome-neural-ode" -> "janosh/awesome-normalizing-flows"
"Zymrael/awesome-neural-ode" -> "pdebench/PDEBench" ["e"=1]
"Zymrael/awesome-neural-ode" -> "Zymrael/gde" ["e"=1]
"ctallec/pyvarinf" -> "probtorch/probtorch" ["e"=1]
"1Konny/FactorVAE" -> "1Konny/Beta-VAE"
"1Konny/FactorVAE" -> "rtqichen/beta-tcvae"
"1Konny/FactorVAE" -> "miyosuda/disentangled_vae"
"1Konny/FactorVAE" -> "Schlumberger/joint-vae"
"1Konny/FactorVAE" -> "google-deepmind/3d-shapes"
"1Konny/FactorVAE" -> "amir-abdi/disentanglement-pytorch"
"1Konny/FactorVAE" -> "google-deepmind/dsprites-dataset"
"1Konny/FactorVAE" -> "YannDubs/disentangling-vae"
"1Konny/FactorVAE" -> "google-research/disentanglement_lib"
"1Konny/FactorVAE" -> "bhpfelix/Variational-Autoencoder-PyTorch" ["e"=1]
"1Konny/FactorVAE" -> "cianeastwood/qedr"
"1Konny/FactorVAE" -> "iffsid/disentangling-disentanglement"
"1Konny/FactorVAE" -> "jmtomczak/vae_vampprior"
"1Konny/FactorVAE" -> "AIcrowd/neurips2019_disentanglement_challenge_starter_kit"
"1Konny/FactorVAE" -> "riannevdberg/sylvester-flows"
"1Konny/Beta-VAE" -> "1Konny/FactorVAE"
"1Konny/Beta-VAE" -> "rtqichen/beta-tcvae"
"1Konny/Beta-VAE" -> "miyosuda/disentangled_vae"
"1Konny/Beta-VAE" -> "YannDubs/disentangling-vae"
"1Konny/Beta-VAE" -> "google-research/disentanglement_lib"
"1Konny/Beta-VAE" -> "Schlumberger/joint-vae"
"1Konny/Beta-VAE" -> "google-deepmind/dsprites-dataset"
"1Konny/Beta-VAE" -> "amir-abdi/disentanglement-pytorch"
"1Konny/Beta-VAE" -> "ethanluoyc/pytorch-vae" ["e"=1]
"1Konny/Beta-VAE" -> "daib13/TwoStageVAE"
"1Konny/Beta-VAE" -> "matthewvowels1/Awesome-VAEs"
"1Konny/Beta-VAE" -> "nicola-decao/s-vae-pytorch"
"1Konny/Beta-VAE" -> "ananyahjha93/cycle-consistent-vae"
"1Konny/Beta-VAE" -> "sootlasten/disentangled-representation-papers" ["e"=1]
"1Konny/Beta-VAE" -> "google-deepmind/3d-shapes"
"edebrouwer/gru_ode_bayes" -> "YuliaRubanova/latent_ode"
"edebrouwer/gru_ode_bayes" -> "mlech26l/ode-lstms"
"edebrouwer/gru_ode_bayes" -> "patrick-kidger/NeuralCDE"
"edebrouwer/gru_ode_bayes" -> "patrick-kidger/torchcde"
"edebrouwer/gru_ode_bayes" -> "PeterChe1990/GRU-D" ["e"=1]
"edebrouwer/gru_ode_bayes" -> "boschresearch/Continuous-Recurrent-Units" ["e"=1]
"edebrouwer/gru_ode_bayes" -> "bighuang624/DSANet" ["e"=1]
"edebrouwer/gru_ode_bayes" -> "zhiyongc/GRU-D" ["e"=1]
"freelunchtheorem/Conditional_Density_Estimation" -> "ikostrikov/pytorch-flows" ["e"=1]
"manzilzaheer/DeepSets" -> "yassersouri/pytorch-deep-sets"
"manzilzaheer/DeepSets" -> "juho-lee/set_transformer"
"manzilzaheer/DeepSets" -> "dpernes/deepsets-digitsum"
"manzilzaheer/DeepSets" -> "Cyanogenoid/dspn"
"manzilzaheer/DeepSets" -> "giannisnik/repset"
"juho-lee/set_transformer" -> "manzilzaheer/DeepSets"
"juho-lee/set_transformer" -> "TropComplique/set-transformer"
"juho-lee/set_transformer" -> "Cyanogenoid/dspn"
"juho-lee/set_transformer" -> "lucidrains/slot-attention" ["e"=1]
"juho-lee/set_transformer" -> "yassersouri/pytorch-deep-sets"
"juho-lee/set_transformer" -> "phanideepgampa/stacked-capsule-networks" ["e"=1]
"juho-lee/set_transformer" -> "deep-spin/entmax"
"juho-lee/set_transformer" -> "sjhwang82/AdvancedML" ["e"=1]
"juho-lee/set_transformer" -> "arrigonialberto86/set_transformer"
"juho-lee/set_transformer" -> "juho-lee/bnp"
"juho-lee/set_transformer" -> "lucidrains/perceiver-pytorch" ["e"=1]
"juho-lee/set_transformer" -> "EmilienDupont/neural-processes"
"juho-lee/set_transformer" -> "google-deepmind/neural-processes"
"juho-lee/set_transformer" -> "jw9730/setvae"
"juho-lee/set_transformer" -> "tristandeleu/pytorch-meta" ["e"=1]
"jariasf/GMVAE" -> "jmtomczak/vae_vampprior" ["e"=1]
"timbmg/VAE-CVAE-MNIST" -> "1Konny/Beta-VAE" ["e"=1]
"timbmg/VAE-CVAE-MNIST" -> "YannDubs/disentangling-vae" ["e"=1]
"williamFalcon/test-tube" -> "ikostrikov/pytorch-flows" ["e"=1]
"deepgenerativemodels/notes" -> "Subhajit135/CS236_DGM"
"deepgenerativemodels/notes" -> "ermongroup/cs228-notes" ["e"=1]
"deepgenerativemodels/notes" -> "rll/deepul" ["e"=1]
"deepgenerativemodels/notes" -> "janosh/awesome-normalizing-flows"
"deepgenerativemodels/notes" -> "kamenbliznashki/normalizing_flows"
"deepgenerativemodels/notes" -> "karpathy/pytorch-normalizing-flows"
"deepgenerativemodels/notes" -> "bayesiains/nflows"
"deepgenerativemodels/notes" -> "VincentStimper/normalizing-flows"
"deepgenerativemodels/notes" -> "tonyduan/normalizing-flows"
"deepgenerativemodels/notes" -> "ericjang/normalizing-flows-tutorial"
"deepgenerativemodels/notes" -> "tengyuma/cs229m_notes" ["e"=1]
"deepgenerativemodels/notes" -> "paperswithcode/releasing-research-code" ["e"=1]
"ermongroup/ncsn" -> "rtqichen/ffjord" ["e"=1]
"ermongroup/ncsn" -> "jhjacobsen/invertible-resnet" ["e"=1]
"msurtsukov/neural-ode" -> "Zymrael/awesome-neural-ode"
"msurtsukov/neural-ode" -> "EmilienDupont/augmented-neural-odes"
"msurtsukov/neural-ode" -> "rtqichen/torchdiffeq"
"msurtsukov/neural-ode" -> "DiffEqML/torchdyn"
"msurtsukov/neural-ode" -> "YuliaRubanova/latent_ode"
"msurtsukov/neural-ode" -> "patrick-kidger/NeuralCDE"
"msurtsukov/neural-ode" -> "Rachnog/Neural-ODE-Experiments"
"msurtsukov/neural-ode" -> "google-research/torchsde"
"msurtsukov/neural-ode" -> "rtqichen/ffjord"
"msurtsukov/neural-ode" -> "patrick-kidger/torchcde"
"msurtsukov/neural-ode" -> "jacobjinkelly/easy-neural-ode"
"msurtsukov/neural-ode" -> "llSourcell/Neural_Differential_Equations"
"msurtsukov/neural-ode" -> "JSeam2/Neural-Ordinary-Differential-Equations"
"msurtsukov/neural-ode" -> "titu1994/tfdiffeq"
"msurtsukov/neural-ode" -> "patrick-kidger/diffrax" ["e"=1]
"facebookresearch/adaptive-span" -> "deep-spin/entmax" ["e"=1]
"nadavbh12/VQ-VAE" -> "ritheshkumar95/pytorch-vqvae"
"nadavbh12/VQ-VAE" -> "rosinality/vq-vae-2-pytorch"
"nadavbh12/VQ-VAE" -> "zalandoresearch/pytorch-vq-vae"
"nadavbh12/VQ-VAE" -> "MishaLaskin/vqvae"
"nadavbh12/VQ-VAE" -> "hiwonjoon/tf-vqvae"
"nadavbh12/VQ-VAE" -> "nakosung/VQ-VAE"
"nadavbh12/VQ-VAE" -> "swasun/VQ-VAE-Speech" ["e"=1]
"nadavbh12/VQ-VAE" -> "ikostrikov/pytorch-flows"
"nadavbh12/VQ-VAE" -> "Schlumberger/joint-vae"
"nadavbh12/VQ-VAE" -> "1Konny/Beta-VAE"
"nadavbh12/VQ-VAE" -> "hsinyilin19/ResNetVAE" ["e"=1]
"nadavbh12/VQ-VAE" -> "ethanluoyc/pytorch-vae" ["e"=1]
"nadavbh12/VQ-VAE" -> "karpathy/deep-vector-quantization"
"nadavbh12/VQ-VAE" -> "1Konny/FactorVAE"
"nadavbh12/VQ-VAE" -> "1Konny/VQ-VAE"
"google-deepmind/neural-processes" -> "EmilienDupont/neural-processes"
"google-deepmind/neural-processes" -> "YannDubs/Neural-Process-Family"
"google-deepmind/neural-processes" -> "soobinseo/Attentive-Neural-Process"
"google-deepmind/neural-processes" -> "cambridge-mlg/convcnp"
"google-deepmind/neural-processes" -> "geniki/neural-processes"
"google-deepmind/neural-processes" -> "kasparmartens/NeuralProcesses"
"google-deepmind/neural-processes" -> "wassname/attentive-neural-processes"
"google-deepmind/neural-processes" -> "cornellius-gp/gpytorch" ["e"=1]
"google-deepmind/neural-processes" -> "crisbodnar/ndp"
"google-deepmind/neural-processes" -> "didriknielsen/survae_flows"
"google-deepmind/neural-processes" -> "bayesiains/nflows"
"google-deepmind/neural-processes" -> "AMLab-Amsterdam/FNP"
"google-deepmind/neural-processes" -> "wesselb/NeuralProcesses.jl"
"google-deepmind/neural-processes" -> "GPflow/GPflow" ["e"=1]
"google-deepmind/neural-processes" -> "ikostrikov/pytorch-flows"
"Natsu6767/InfoGAN-PyTorch" -> "pianomania/infoGAN-pytorch"
"Natsu6767/InfoGAN-PyTorch" -> "openai/InfoGAN" ["e"=1]
"Natsu6767/InfoGAN-PyTorch" -> "taeoh-kim/Pytorch_InfoGAN"
"Natsu6767/InfoGAN-PyTorch" -> "raahii/infogan-pytorch"
"Natsu6767/InfoGAN-PyTorch" -> "1Konny/Beta-VAE"
"Natsu6767/InfoGAN-PyTorch" -> "fjxmlzn/InfoGAN-CR"
"Natsu6767/InfoGAN-PyTorch" -> "1Konny/FactorVAE"
"Natsu6767/InfoGAN-PyTorch" -> "cianeastwood/qedr"
"Natsu6767/InfoGAN-PyTorch" -> "amir-abdi/disentanglement-pytorch"
"zalandoresearch/pytorch-vq-vae" -> "ritheshkumar95/pytorch-vqvae"
"zalandoresearch/pytorch-vq-vae" -> "rosinality/vq-vae-2-pytorch"
"zalandoresearch/pytorch-vq-vae" -> "nadavbh12/VQ-VAE"
"zalandoresearch/pytorch-vq-vae" -> "MishaLaskin/vqvae"
"zalandoresearch/pytorch-vq-vae" -> "swasun/VQ-VAE-Speech" ["e"=1]
"zalandoresearch/pytorch-vq-vae" -> "unixpickle/vq-vae-2"
"zalandoresearch/pytorch-vq-vae" -> "sony/sqvae"
"zalandoresearch/pytorch-vq-vae" -> "1Konny/VQ-VAE"
"zalandoresearch/pytorch-vq-vae" -> "hrbigelow/ae-wavenet" ["e"=1]
"zalandoresearch/pytorch-vq-vae" -> "pclucas14/pixel-cnn-pp"
"zalandoresearch/pytorch-vq-vae" -> "1Konny/Beta-VAE"
"zalandoresearch/pytorch-vq-vae" -> "YannDubs/disentangling-vae"
"zalandoresearch/pytorch-vq-vae" -> "1Konny/FactorVAE"
"zalandoresearch/pytorch-vq-vae" -> "cientgu/VQ-Diffusion" ["e"=1]
"zalandoresearch/pytorch-vq-vae" -> "lucidrains/vector-quantize-pytorch" ["e"=1]
"ldeecke/gmm-torch" -> "kamenbliznashki/normalizing_flows" ["e"=1]
"bayesnet/bnt" -> "jluttine/tikz-bayesnet" ["e"=1]
"wohlert/semi-supervised-pytorch" -> "dpkingma/nips14-ssl" ["e"=1]
"wohlert/semi-supervised-pytorch" -> "saemundsson/semisupervised_vae" ["e"=1]
"wohlert/semi-supervised-pytorch" -> "CuriousAI/mean-teacher" ["e"=1]
"wohlert/semi-supervised-pytorch" -> "probtorch/probtorch"
"wohlert/semi-supervised-pytorch" -> "Schlumberger/joint-vae"
"wohlert/semi-supervised-pytorch" -> "kimiyoung/ssl_bad_gan" ["e"=1]
"wohlert/semi-supervised-pytorch" -> "YannDubs/disentangling-vae"
"wohlert/semi-supervised-pytorch" -> "CuriousAI/ladder" ["e"=1]
"wohlert/semi-supervised-pytorch" -> "nicola-decao/s-vae-pytorch"
"wohlert/semi-supervised-pytorch" -> "kefirski/pytorch_RVAE" ["e"=1]
"wohlert/semi-supervised-pytorch" -> "google-research/disentanglement_lib"
"wohlert/semi-supervised-pytorch" -> "larsmaaloee/auxiliary-deep-generative-models" ["e"=1]
"wohlert/semi-supervised-pytorch" -> "riannevdberg/sylvester-flows"
"wohlert/semi-supervised-pytorch" -> "1Konny/Beta-VAE"
"wohlert/semi-supervised-pytorch" -> "lyakaap/VAT-pytorch" ["e"=1]
"geomstats/geomstats" -> "google-research/torchsde" ["e"=1]
"geomstats/geomstats" -> "google-research/disentanglement_lib" ["e"=1]
"pclucas14/pixel-cnn-pp" -> "jzbontar/pixelcnn-pytorch"
"pclucas14/pixel-cnn-pp" -> "openai/pixel-cnn" ["e"=1]
"pclucas14/pixel-cnn-pp" -> "kkleidal/GatedPixelCNNPyTorch"
"pclucas14/pixel-cnn-pp" -> "TrentBrick/PyTorchDiscreteFlows"
"pclucas14/pixel-cnn-pp" -> "chrischute/real-nvp"
"pclucas14/pixel-cnn-pp" -> "PrajitR/fast-pixel-cnn" ["e"=1]
"pclucas14/pixel-cnn-pp" -> "jmtomczak/vae_vpflows"
"pclucas14/pixel-cnn-pp" -> "jmtomczak/vae_vampprior"
"pclucas14/pixel-cnn-pp" -> "ikostrikov/pytorch-flows"
"pclucas14/pixel-cnn-pp" -> "vlievin/biva-pytorch"
"pclucas14/pixel-cnn-pp" -> "CW-Huang/NAF"
"pclucas14/pixel-cnn-pp" -> "rosinality/glow-pytorch"
"pclucas14/pixel-cnn-pp" -> "addtt/ladder-vae-pytorch"
"nicola-decao/BNAF" -> "riannevdberg/sylvester-flows"
"nicola-decao/BNAF" -> "CW-Huang/NAF"
"nicola-decao/BNAF" -> "CW-Huang/CP-Flow" ["e"=1]
"nicola-decao/BNAF" -> "LukasRinder/normalizing-flows"
"nicola-decao/BNAF" -> "ikostrikov/pytorch-flows"
"nicola-decao/BNAF" -> "kamenbliznashki/normalizing_flows"
"nicola-decao/BNAF" -> "bayesiains/nsf" ["e"=1]
"nicola-decao/BNAF" -> "didriknielsen/survae_flows"
"nicola-decao/BNAF" -> "CW-Huang/torchkit"
"kmkolasinski/deep-learning-notes" -> "rtqichen/torchdiffeq"
"kmkolasinski/deep-learning-notes" -> "EmilienDupont/augmented-neural-odes"
"kmkolasinski/deep-learning-notes" -> "msurtsukov/neural-ode"
"kmkolasinski/deep-learning-notes" -> "YuliaRubanova/latent_ode"
"kmkolasinski/deep-learning-notes" -> "Zymrael/awesome-neural-ode"
"kmkolasinski/deep-learning-notes" -> "rtqichen/ffjord"
"kmkolasinski/deep-learning-notes" -> "titu1994/tfdiffeq"
"kmkolasinski/deep-learning-notes" -> "ericjang/normalizing-flows-tutorial"
"kmkolasinski/deep-learning-notes" -> "taki0112/Tensorflow-Cookbook" ["e"=1]
"kmkolasinski/deep-learning-notes" -> "mandubian/neural-ode"
"kmkolasinski/deep-learning-notes" -> "DiffEqML/torchdyn"
"kmkolasinski/deep-learning-notes" -> "locuslab/deq"
"kmkolasinski/deep-learning-notes" -> "openai/glow" ["e"=1]
"kmkolasinski/deep-learning-notes" -> "google/compare_gan" ["e"=1]
"kmkolasinski/deep-learning-notes" -> "abdulfatir/normalizing-flows"
"NeuroDiffGym/neurodiffeq" -> "DiffEqML/torchdyn" ["e"=1]
"NeuroDiffGym/neurodiffeq" -> "Zymrael/awesome-neural-ode" ["e"=1]
"Rachnog/Neural-ODE-Experiments" -> "msurtsukov/neural-ode"
"Rachnog/Neural-ODE-Experiments" -> "EmilienDupont/augmented-neural-odes"
"Rachnog/Neural-ODE-Experiments" -> "titu1994/tfdiffeq"
"bojone/flow" -> "rosinality/glow-pytorch"
"bojone/flow" -> "aravindsrinivas/flowpp"
"bojone/flow" -> "ex4sperans/variational-inference-with-normalizing-flows"
"bojone/flow" -> "laurent-dinh/nice"
"bojone/flow" -> "paultsw/nice_pytorch"
"bojone/flow" -> "tonyduan/normalizing-flows"
"bojone/flow" -> "bojone/gan-qp" ["e"=1]
"shirleyzhu233/realNVP" -> "chrischute/real-nvp"
"shirleyzhu233/realNVP" -> "fmu2/NICE"
"shirleyzhu233/realNVP" -> "xqding/RealNVP"
"salesforce/matchbox" -> "vene/sparsemap" ["e"=1]
"rtqichen/ffjord" -> "rtqichen/residual-flows"
"rtqichen/ffjord" -> "rtqichen/torchdiffeq"
"rtqichen/ffjord" -> "EmilienDupont/augmented-neural-odes"
"rtqichen/ffjord" -> "riannevdberg/sylvester-flows"
"rtqichen/ffjord" -> "ikostrikov/pytorch-flows"
"rtqichen/ffjord" -> "cfinlay/ffjord-rnode"
"rtqichen/ffjord" -> "jhjacobsen/invertible-resnet"
"rtqichen/ffjord" -> "didriknielsen/survae_flows"
"rtqichen/ffjord" -> "kamenbliznashki/normalizing_flows"
"rtqichen/ffjord" -> "DiffEqML/torchdyn"
"rtqichen/ffjord" -> "amirgholami/anode"
"rtqichen/ffjord" -> "google-research/torchsde"
"rtqichen/ffjord" -> "gpapamak/maf"
"rtqichen/ffjord" -> "chrischute/real-nvp"
"rtqichen/ffjord" -> "johannbrehmer/manifold-flow"
"llSourcell/Neural_Differential_Equations" -> "msurtsukov/neural-ode"
"llSourcell/Neural_Differential_Equations" -> "titu1994/tfdiffeq"
"llSourcell/Neural_Differential_Equations" -> "EmilienDupont/augmented-neural-odes"
"llSourcell/Neural_Differential_Equations" -> "mandubian/neural-ode"
"google/vae-seq" -> "ermongroup/Sequential-Variational-Autoencoder" ["e"=1]
"greydanus/hamiltonian-nn" -> "MilesCranmer/lagrangian_nns"
"greydanus/hamiltonian-nn" -> "mfinzi/constrained-hamiltonian-neural-networks"
"greydanus/hamiltonian-nn" -> "DiffEqML/torchdyn"
"greydanus/hamiltonian-nn" -> "milutter/deep_lagrangian_networks"
"greydanus/hamiltonian-nn" -> "Zymrael/awesome-neural-ode"
"greydanus/hamiltonian-nn" -> "Zymrael/PortHamiltonianNN"
"greydanus/hamiltonian-nn" -> "jpzxshi/sympnets"
"greydanus/hamiltonian-nn" -> "Physics-aware-AI/Symplectic-ODENet"
"greydanus/hamiltonian-nn" -> "ChrisRackauckas/universal_differential_equations" ["e"=1]
"greydanus/hamiltonian-nn" -> "a-norcliffe/sonode"
"greydanus/hamiltonian-nn" -> "anshu957/OrderChaosHNN"
"greydanus/hamiltonian-nn" -> "mariosmat/hamiltonianNNetODEs"
"greydanus/hamiltonian-nn" -> "CampusAI/Hamiltonian-Generative-Networks"
"greydanus/hamiltonian-nn" -> "EmilienDupont/augmented-neural-odes"
"greydanus/hamiltonian-nn" -> "msurtsukov/neural-ode"
"vene/sparse-structured-attention" -> "vene/sparsemap"
"vene/sparse-structured-attention" -> "KrisKorrel/sparsemax-pytorch"
"xinychen/awesome-latex-drawing" -> "jluttine/tikz-bayesnet" ["e"=1]
"torrvision/Objectness" -> "varun-nagaraja/BING-Objectness"
"torrvision/Objectness" -> "alessandroferrari/BING-Objectness"
"torrvision/Objectness" -> "bbabenko/simple_convnet"
"karpathy/examples" -> "karpathy/lifejs"
"karpathy/examples" -> "karpathy/optim"
"karpathy/examples" -> "karpathy/tf-agent"
"karpathy/examples" -> "karpathy/twoolpy"
"karpathy/examples" -> "karpathy/sqlitedict"
"sjhwang82/AdvancedML" -> "juho-lee/bnp" ["e"=1]
"jhjacobsen/invertible-resnet" -> "rtqichen/residual-flows"
"jhjacobsen/invertible-resnet" -> "jhjacobsen/pytorch-i-revnet"
"jhjacobsen/invertible-resnet" -> "chaiyujin/glow-pytorch"
"jhjacobsen/invertible-resnet" -> "rtqichen/ffjord"
"jhjacobsen/invertible-resnet" -> "y0ast/Glow-PyTorch"
"jhjacobsen/invertible-resnet" -> "rosinality/glow-pytorch"
"jhjacobsen/invertible-resnet" -> "kamenbliznashki/normalizing_flows"
"jhjacobsen/invertible-resnet" -> "vislearn/FrEIA"
"jhjacobsen/invertible-resnet" -> "didriknielsen/survae_flows"
"jhjacobsen/invertible-resnet" -> "chrischute/real-nvp"
"jhjacobsen/invertible-resnet" -> "silvandeleemput/memcnn"
"jhjacobsen/invertible-resnet" -> "ikostrikov/pytorch-flows"
"jhjacobsen/invertible-resnet" -> "wgrathwohl/JEM" ["e"=1]
"jhjacobsen/invertible-resnet" -> "bayesiains/nsf" ["e"=1]
"jhjacobsen/invertible-resnet" -> "gpapamak/maf"
"jhjacobsen/pytorch-i-revnet" -> "renmengye/revnet-public" ["e"=1]
"jhjacobsen/pytorch-i-revnet" -> "jhjacobsen/invertible-resnet"
"jhjacobsen/pytorch-i-revnet" -> "tbung/pytorch-revnet"
"jhjacobsen/pytorch-i-revnet" -> "silvandeleemput/memcnn"
"jhjacobsen/pytorch-i-revnet" -> "rtqichen/residual-flows"
"jhjacobsen/pytorch-i-revnet" -> "ikostrikov/pytorch-flows"
"jhjacobsen/pytorch-i-revnet" -> "chaiyujin/glow-pytorch"
"jhjacobsen/pytorch-i-revnet" -> "jhjacobsen/fully-invertible-revnet"
"jhjacobsen/pytorch-i-revnet" -> "vislearn/FrEIA"
"jhjacobsen/pytorch-i-revnet" -> "locuslab/pytorch_fft" ["e"=1]
"hiwonjoon/tf-vqvae" -> "nakosung/VQ-VAE"
"hiwonjoon/tf-vqvae" -> "JeremyCCHsu/vqvae-speech" ["e"=1]
"hiwonjoon/tf-vqvae" -> "ritheshkumar95/pytorch-vqvae"
"hiwonjoon/tf-vqvae" -> "nadavbh12/VQ-VAE"
"hiwonjoon/tf-vqvae" -> "1Konny/VQ-VAE"
"hiwonjoon/tf-vqvae" -> "swasun/VQ-VAE-Speech" ["e"=1]
"karpathy/scriptsbots" -> "karpathy/lifejs"
"karpathy/scriptsbots" -> "karpathy/notpygamejs"
"karpathy/scriptsbots" -> "JimAllanson/lifejs"
"karpathy/scriptsbots" -> "Ramblurr/scriptbots"
"karpathy/scriptsbots" -> "karpathy/twoolpy"
"karpathy/scriptsbots" -> "GhengopelALPHA/scriptbots"
"karpathy/scriptsbots" -> "karpathy/optim"
"karpathy/scriptsbots" -> "karpathy/forestjs"
"karpathy/scriptsbots" -> "karpathy/EigenLibSVM"
"schelotto/Wasserstein-AutoEncoders" -> "tolstikhin/wae"
"schelotto/Wasserstein-AutoEncoders" -> "sedelmeyer/wasserstein-auto-encoder"
"schelotto/Wasserstein-AutoEncoders" -> "eifuentes/swae-pytorch"
"schelotto/Wasserstein-AutoEncoders" -> "1Konny/WAE-pytorch"
"schelotto/Wasserstein-AutoEncoders" -> "neale/Adversarial-Autoencoder" ["e"=1]
"schelotto/Wasserstein-AutoEncoders" -> "jakezhaojb/ARAE" ["e"=1]
"schelotto/Wasserstein-AutoEncoders" -> "bhpfelix/Variational-Autoencoder-PyTorch" ["e"=1]
"schelotto/Wasserstein-AutoEncoders" -> "skolouri/swae"
"schelotto/Wasserstein-AutoEncoders" -> "maitek/waae-pytorch" ["e"=1]
"sootlasten/disentangled-representation-papers" -> "google-research/disentanglement_lib" ["e"=1]
"silvandeleemput/memcnn" -> "cetmann/iunets"
"silvandeleemput/memcnn" -> "jhjacobsen/pytorch-i-revnet"
"silvandeleemput/memcnn" -> "tbung/pytorch-revnet"
"silvandeleemput/memcnn" -> "RobinBruegger/RevTorch" ["e"=1]
"silvandeleemput/memcnn" -> "renmengye/revnet-public" ["e"=1]
"silvandeleemput/memcnn" -> "jhjacobsen/invertible-resnet"
"locuslab/trellisnet" -> "locuslab/deq"
"locuslab/trellisnet" -> "ofirpress/YouMayNotNeedAttention" ["e"=1]
"locuslab/trellisnet" -> "haohy/TCAN" ["e"=1]
"EmilienDupont/neural-processes" -> "geniki/neural-processes"
"EmilienDupont/neural-processes" -> "cambridge-mlg/convcnp"
"EmilienDupont/neural-processes" -> "YannDubs/Neural-Process-Family"
"EmilienDupont/neural-processes" -> "soobinseo/Attentive-Neural-Process"
"EmilienDupont/neural-processes" -> "google-deepmind/neural-processes"
"EmilienDupont/neural-processes" -> "makora9143/pytorch-convcnp"
"EmilienDupont/neural-processes" -> "crisbodnar/ndp"
"EmilienDupont/neural-processes" -> "wassname/attentive-neural-processes"
"EmilienDupont/neural-processes" -> "AMLab-Amsterdam/FNP"
"EmilienDupont/neural-processes" -> "wesselb/NeuralProcesses.jl"
"deep-spin/entmax" -> "KrisKorrel/sparsemax-pytorch"
"deep-spin/entmax" -> "harvardnlp/pytorch-struct" ["e"=1]
"deep-spin/entmax" -> "vene/sparsemap"
"deep-spin/entmax" -> "harvardnlp/cascaded-generation" ["e"=1]
"deep-spin/entmax" -> "facebookresearch/adaptive-span" ["e"=1]
"deep-spin/entmax" -> "neulab/compare-mt" ["e"=1]
"deep-spin/entmax" -> "carolinlawrence/BiSon"
"amir-abdi/disentanglement-pytorch" -> "rr-learning/disentanglement_dataset"
"amir-abdi/disentanglement-pytorch" -> "google-research/disentanglement_lib"
"amir-abdi/disentanglement-pytorch" -> "nmichlo/disent"
"amir-abdi/disentanglement-pytorch" -> "YannDubs/disentangling-vae"
"amir-abdi/disentanglement-pytorch" -> "rtqichen/beta-tcvae"
"amir-abdi/disentanglement-pytorch" -> "1Konny/FactorVAE"
"amir-abdi/disentanglement-pytorch" -> "google-deepmind/dsprites-dataset"
"amir-abdi/disentanglement-pytorch" -> "iffsid/disentangling-disentanglement"
"amir-abdi/disentanglement-pytorch" -> "google-deepmind/3d-shapes"
"amir-abdi/disentanglement-pytorch" -> "1Konny/Beta-VAE"
"amir-abdi/disentanglement-pytorch" -> "Schlumberger/joint-vae"
"amir-abdi/disentanglement-pytorch" -> "sootlasten/disentangled-representation-papers" ["e"=1]
"titu1994/tfdiffeq" -> "mandubian/neural-ode"
"titu1994/tfdiffeq" -> "YuliaRubanova/latent_ode"
"titu1994/tfdiffeq" -> "EmilienDupont/augmented-neural-odes"
"titu1994/tfdiffeq" -> "Rachnog/Neural-ODE-Experiments"
"titu1994/tfdiffeq" -> "JSeam2/Neural-Ordinary-Differential-Equations"
"titu1994/tfdiffeq" -> "llSourcell/Neural_Differential_Equations"
"kasparmartens/NeuralProcesses" -> "geniki/neural-processes"
"vene/sparsemap" -> "andre-martins/AD3"
"vene/sparsemap" -> "deep-spin/sparse-marginalization-lvm"
"vene/sparsemap" -> "deep-spin/lp-sparsemap"
"harvardnlp/urnng" -> "vene/sparsemap" ["e"=1]
"EmilienDupont/augmented-neural-odes" -> "Zymrael/awesome-neural-ode"
"EmilienDupont/augmented-neural-odes" -> "msurtsukov/neural-ode"
"EmilienDupont/augmented-neural-odes" -> "patrick-kidger/NeuralCDE"
"EmilienDupont/augmented-neural-odes" -> "rtqichen/ffjord"
"EmilienDupont/augmented-neural-odes" -> "YuliaRubanova/latent_ode"
"EmilienDupont/augmented-neural-odes" -> "DiffEqML/torchdyn"
"EmilienDupont/augmented-neural-odes" -> "jacobjinkelly/easy-neural-ode"
"EmilienDupont/augmented-neural-odes" -> "amirgholami/anode"
"EmilienDupont/augmented-neural-odes" -> "a-norcliffe/sonode"
"EmilienDupont/augmented-neural-odes" -> "cfinlay/ffjord-rnode"
"EmilienDupont/augmented-neural-odes" -> "Rachnog/Neural-ODE-Experiments"
"EmilienDupont/augmented-neural-odes" -> "rtqichen/torchdiffeq"
"EmilienDupont/augmented-neural-odes" -> "patrick-kidger/torchcde"
"EmilienDupont/augmented-neural-odes" -> "google-research/torchsde"
"EmilienDupont/augmented-neural-odes" -> "EmilienDupont/neural-processes"
"daib13/TwoStageVAE" -> "jxhe/vae-lagging-encoder" ["e"=1]
"daib13/TwoStageVAE" -> "Schlumberger/joint-vae"
"daib13/TwoStageVAE" -> "rtqichen/beta-tcvae"
"daib13/TwoStageVAE" -> "1Konny/Beta-VAE"
"daib13/TwoStageVAE" -> "jmtomczak/vae_vampprior"
"daib13/TwoStageVAE" -> "YannDubs/disentangling-vae"
"Schlumberger/joint-vae" -> "rtqichen/beta-tcvae"
"Schlumberger/joint-vae" -> "1Konny/FactorVAE"
"Schlumberger/joint-vae" -> "1Konny/Beta-VAE"
"Schlumberger/joint-vae" -> "sootlasten/disentangled-representation-papers" ["e"=1]
"Schlumberger/joint-vae" -> "google-research/disentanglement_lib"
"Schlumberger/joint-vae" -> "YannDubs/disentangling-vae"
"Schlumberger/joint-vae" -> "google-deepmind/dsprites-dataset"
"Schlumberger/joint-vae" -> "amir-abdi/disentanglement-pytorch"
"Schlumberger/joint-vae" -> "jmtomczak/vae_vampprior"
"Schlumberger/joint-vae" -> "daib13/TwoStageVAE"
"Schlumberger/joint-vae" -> "miyosuda/disentangled_vae"
"Schlumberger/joint-vae" -> "jxhe/vae-lagging-encoder" ["e"=1]
"Schlumberger/joint-vae" -> "wohlert/semi-supervised-pytorch"
"Schlumberger/joint-vae" -> "iffsid/disentangling-disentanglement"
"Schlumberger/joint-vae" -> "tolstikhin/wae"
"ssydasheng/Bayesian_neural_network_papers" -> "AMLab-Amsterdam/FNP" ["e"=1]
"y0ast/Glow-PyTorch" -> "rosinality/glow-pytorch"
"y0ast/Glow-PyTorch" -> "chaiyujin/glow-pytorch"
"y0ast/Glow-PyTorch" -> "kamenbliznashki/normalizing_flows"
"y0ast/Glow-PyTorch" -> "chrischute/real-nvp"
"y0ast/Glow-PyTorch" -> "chrischute/glow"
"y0ast/Glow-PyTorch" -> "jhjacobsen/invertible-resnet"
"y0ast/Glow-PyTorch" -> "riannevdberg/sylvester-flows"
"y0ast/Glow-PyTorch" -> "rtqichen/residual-flows"
"y0ast/Glow-PyTorch" -> "gpapamak/maf"
"y0ast/Glow-PyTorch" -> "ikostrikov/pytorch-flows"
"y0ast/Glow-PyTorch" -> "karpathy/pytorch-normalizing-flows"
"y0ast/Glow-PyTorch" -> "bayesiains/nsf" ["e"=1]
"YuliaRubanova/latent_ode" -> "patrick-kidger/NeuralCDE"
"YuliaRubanova/latent_ode" -> "patrick-kidger/torchcde"
"YuliaRubanova/latent_ode" -> "edebrouwer/gru_ode_bayes"
"YuliaRubanova/latent_ode" -> "EmilienDupont/augmented-neural-odes"
"YuliaRubanova/latent_ode" -> "Zymrael/awesome-neural-ode"
"YuliaRubanova/latent_ode" -> "bayesiains/nsf" ["e"=1]
"YuliaRubanova/latent_ode" -> "google-research/torchsde"
"YuliaRubanova/latent_ode" -> "prichemond/ds3" ["e"=1]
"YuliaRubanova/latent_ode" -> "btgraham/Batchwise-Dropout" ["e"=1]
"YuliaRubanova/latent_ode" -> "MadryLab/cox" ["e"=1]
"YuliaRubanova/latent_ode" -> "renmengye/revnet-public" ["e"=1]
"YuliaRubanova/latent_ode" -> "manicman1999/Keras-BiGAN" ["e"=1]
"YuliaRubanova/latent_ode" -> "oxwhirl/treeqn" ["e"=1]
"YuliaRubanova/latent_ode" -> "msurtsukov/neural-ode"
"YuliaRubanova/latent_ode" -> "LeoYu/neural-tangent-kernel-UCI" ["e"=1]
"bayesiains/nsf" -> "johannbrehmer/manifold-flow" ["e"=1]
"bayesiains/nsf" -> "bayesiains/nflows" ["e"=1]
"hhb072/IntroVAE" -> "taldatech/soft-intro-vae-pytorch"
"Ramblurr/scriptbots" -> "karpathy/notpygamejs"
"Ramblurr/scriptbots" -> "GhengopelALPHA/scriptbots"
"Ramblurr/scriptbots" -> "stevemayne/gplusblog"
"ethanfetaya/NRI" -> "YuliaRubanova/latent_ode" ["e"=1]
"probtorch/probtorch" -> "pyprob/pyprob"
"probtorch/probtorch" -> "dpkingma/nips14-ssl" ["e"=1]
"probtorch/probtorch" -> "wohlert/semi-supervised-pytorch"
"probtorch/probtorch" -> "blei-lab/edward" ["e"=1]
"probtorch/probtorch" -> "pyro-ppl/pyro" ["e"=1]
"probtorch/probtorch" -> "ikostrikov/pytorch-flows"
"probtorch/probtorch" -> "google-research/disentanglement_lib"
"probtorch/probtorch" -> "ctallec/pyvarinf" ["e"=1]
"probtorch/probtorch" -> "karpathy/pytorch-normalizing-flows"
"probtorch/probtorch" -> "jluttine/tikz-bayesnet"
"probtorch/probtorch" -> "ColCarroll/minimc" ["e"=1]
"probtorch/probtorch" -> "didriknielsen/survae_flows"
"probtorch/probtorch" -> "cornellius-gp/gpytorch" ["e"=1]
"probtorch/probtorch" -> "sootlasten/disentangled-representation-papers" ["e"=1]
"probtorch/probtorch" -> "jmtomczak/vae_vampprior"
"jxhe/vae-lagging-encoder" -> "rtqichen/beta-tcvae" ["e"=1]
"tolstikhin/wae" -> "schelotto/Wasserstein-AutoEncoders"
"tolstikhin/wae" -> "1Konny/WAE-pytorch"
"tolstikhin/wae" -> "skolouri/swae"
"tolstikhin/wae" -> "sedelmeyer/wasserstein-auto-encoder"
"tolstikhin/wae" -> "jmtomczak/vae_vampprior"
"tolstikhin/wae" -> "paruby/Wasserstein-Auto-Encoders"
"tolstikhin/wae" -> "eifuentes/swae-pytorch"
"tolstikhin/wae" -> "Schlumberger/joint-vae"
"tolstikhin/wae" -> "jakezhaojb/ARAE" ["e"=1]
"tolstikhin/wae" -> "miyosuda/disentangled_vae"
"tolstikhin/wae" -> "google-research/disentanglement_lib"
"tolstikhin/wae" -> "RuiShu/vae-clustering" ["e"=1]
"tolstikhin/wae" -> "musyoku/adversarial-autoencoder" ["e"=1]
"tolstikhin/wae" -> "Nat-D/GMVAE" ["e"=1]
"tolstikhin/wae" -> "google-deepmind/dsprites-dataset"
"rr-learning/disentanglement_dataset" -> "AIcrowd/neurips2019_disentanglement_challenge_starter_kit"
"rr-learning/disentanglement_dataset" -> "google-deepmind/3d-shapes"
"rr-learning/disentanglement_dataset" -> "amir-abdi/disentanglement-pytorch"
"rr-learning/disentanglement_dataset" -> "nmichlo/disent"
"Sohl-Dickstein/Sum-of-Functions-Optimizer" -> "stevemayne/gplusblog"
"Sohl-Dickstein/Sum-of-Functions-Optimizer" -> "cpbotha/mlabwrap-purepy"
"Sohl-Dickstein/Sum-of-Functions-Optimizer" -> "bbabenko/simple_convnet"
"Sohl-Dickstein/Sum-of-Functions-Optimizer" -> "googleglass/mirror-quickstart-python"
"Sohl-Dickstein/Sum-of-Functions-Optimizer" -> "karpathy/twoolpy"
"riannevdberg/sylvester-flows" -> "nicola-decao/BNAF"
"riannevdberg/sylvester-flows" -> "bayesiains/nsf" ["e"=1]
"riannevdberg/sylvester-flows" -> "ex4sperans/variational-inference-with-normalizing-flows"
"riannevdberg/sylvester-flows" -> "kamenbliznashki/normalizing_flows"
"riannevdberg/sylvester-flows" -> "abdulfatir/normalizing-flows"
"riannevdberg/sylvester-flows" -> "acids-ircam/pytorch_flows"
"riannevdberg/sylvester-flows" -> "jmtomczak/vae_vampprior"
"riannevdberg/sylvester-flows" -> "rtqichen/ffjord"
"riannevdberg/sylvester-flows" -> "CW-Huang/NAF"
"riannevdberg/sylvester-flows" -> "ikostrikov/pytorch-flows"
"riannevdberg/sylvester-flows" -> "ericjang/normalizing-flows-tutorial"
"riannevdberg/sylvester-flows" -> "didriknielsen/survae_flows"
"riannevdberg/sylvester-flows" -> "aravindsrinivas/flowpp"
"riannevdberg/sylvester-flows" -> "ehoogeboom/convolution_exponential_and_sylvester"
"Subhajit135/CS236_DGM" -> "kolchinski/cs236"
"senya-ashukha/real-nvp-pytorch" -> "chrischute/real-nvp"
"senya-ashukha/real-nvp-pytorch" -> "ikostrikov/pytorch-flows"
"VinAIResearch/plasticbag-faster-rcnn" -> "VinAIResearch/PCC-pytorch"
"VinAIResearch/plasticbag-faster-rcnn" -> "natsukagami/nix-home"
"JSeam2/Neural-Ordinary-Differential-Equations" -> "mandubian/neural-ode"
"JSeam2/Neural-Ordinary-Differential-Equations" -> "jason71995/Keras_ODENet"
"JSeam2/Neural-Ordinary-Differential-Equations" -> "titu1994/tfdiffeq"
"JSeam2/Neural-Ordinary-Differential-Equations" -> "msurtsukov/neural-ode"
"mandubian/neural-ode" -> "jason71995/Keras_ODENet"
"mandubian/neural-ode" -> "titu1994/tfdiffeq"
"IoannisAntonoglou/optimBench" -> "GhengopelALPHA/scriptbots"
"IoannisAntonoglou/optimBench" -> "cpbotha/mlabwrap-purepy"
"IoannisAntonoglou/optimBench" -> "storborg/glass-teardown"
"IoannisAntonoglou/optimBench" -> "wearscript/wearscript-android"
"acids-ircam/pytorch_flows" -> "riannevdberg/sylvester-flows"
"acids-ircam/pytorch_flows" -> "tonyduan/normalizing-flows"
"acids-ircam/pytorch_flows" -> "LukasRinder/normalizing-flows"
"dfdazac/wassdistance" -> "koshian2/swd-pytorch" ["e"=1]
"nicola-decao/s-vae-tf" -> "nicola-decao/s-vae-pytorch"
"nicola-decao/s-vae-tf" -> "jiacheng-xu/vmf_vae_nlp" ["e"=1]
"brain-research/nngp" -> "cambridge-mlg/convcnp" ["e"=1]
"ananyahjha93/multi-level-vae" -> "DianeBouchacourt/multi-level-vae"
"ananyahjha93/multi-level-vae" -> "ananyahjha93/cycle-consistent-vae"
"ananyahjha93/multi-level-vae" -> "ananyahjha93/disentangling-factors-of-variation-using-adversarial-training"
"ananyahjha93/multi-level-vae" -> "ananyahjha93/challenges-in-disentangling"
"chrischute/glow" -> "chaiyujin/glow-pytorch"
"chrischute/glow" -> "chrischute/real-nvp"
"johannbrehmer/manifold-flow" -> "bayesiains/nsf" ["e"=1]
"johannbrehmer/manifold-flow" -> "bayesiains/nflows"
"johannbrehmer/manifold-flow" -> "johannbrehmer/pointers"
"johannbrehmer/manifold-flow" -> "Information-Fusion-Lab-Umass/NuX" ["e"=1]
"johannbrehmer/manifold-flow" -> "didriknielsen/survae_flows"
"johannbrehmer/manifold-flow" -> "conormdurkan/lfi" ["e"=1]
"johannbrehmer/manifold-flow" -> "riannevdberg/sylvester-flows"
"johannbrehmer/manifold-flow" -> "rtqichen/ffjord"
"johannbrehmer/manifold-flow" -> "justinalsing/pydelfi" ["e"=1]
"johannbrehmer/manifold-flow" -> "chrvt/denoising-normalizing-flow"
"johannbrehmer/manifold-flow" -> "sbi-benchmark/sbibm" ["e"=1]
"skolouri/swae" -> "eifuentes/swae-pytorch"
"nakosung/VQ-VAE" -> "hiwonjoon/tf-vqvae"
"aravindsrinivas/flowpp" -> "bayesiains/nsf" ["e"=1]
"aravindsrinivas/flowpp" -> "ehoogeboom/emerging"
"aravindsrinivas/flowpp" -> "gpapamak/maf"
"aravindsrinivas/flowpp" -> "izmailovpavel/flowgmm"
"aravindsrinivas/flowpp" -> "CW-Huang/NAF"
"aravindsrinivas/flowpp" -> "riannevdberg/sylvester-flows"
"aravindsrinivas/flowpp" -> "rtqichen/residual-flows"
"aravindsrinivas/flowpp" -> "PolinaKirichenko/flows_ood"
"aravindsrinivas/flowpp" -> "didriknielsen/survae_flows"
"nicolaspanel/node-svm" -> "karpathy/svmjs"
"nicolaspanel/node-svm" -> "rlidwka/node-fann" ["e"=1]
"paultsw/nice_pytorch" -> "chrischute/real-nvp"
"tonyduan/normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"tonyduan/normalizing-flows" -> "bayesiains/nsf" ["e"=1]
"tonyduan/normalizing-flows" -> "LukasRinder/normalizing-flows"
"tonyduan/normalizing-flows" -> "karpathy/pytorch-normalizing-flows"
"tonyduan/normalizing-flows" -> "bayesiains/nflows"
"tonyduan/normalizing-flows" -> "ex4sperans/variational-inference-with-normalizing-flows"
"tonyduan/normalizing-flows" -> "didriknielsen/survae_flows"
"tonyduan/normalizing-flows" -> "acids-ircam/pytorch_flows"
"tonyduan/normalizing-flows" -> "ikostrikov/pytorch-flows"
"tonyduan/normalizing-flows" -> "ericjang/normalizing-flows-tutorial"
"tonyduan/normalizing-flows" -> "chrischute/real-nvp"
"tonyduan/normalizing-flows" -> "TrentBrick/PyTorchDiscreteFlows"
"tonyduan/normalizing-flows" -> "abdulfatir/normalizing-flows"
"tonyduan/normalizing-flows" -> "CW-Huang/NAF"
"tonyduan/normalizing-flows" -> "gpapamak/maf"
"clever-algorithms/CleverAlgorithmsMachineLearning" -> "bbabenko/simple_convnet"
"clever-algorithms/CleverAlgorithmsMachineLearning" -> "GhengopelALPHA/scriptbots"
"clever-algorithms/CleverAlgorithmsMachineLearning" -> "cpbotha/mlabwrap-purepy"
"clever-algorithms/CleverAlgorithmsMachineLearning" -> "storborg/glass-teardown"
"datasig-ac-uk/esig" -> "datasig-ac-uk/RoughPy"
"tgcsaba/GPSig" -> "tgcsaba/KSig"
"tgcsaba/GPSig" -> "crispitagorico/sigkernel"
"hongseok-yang/probprog18" -> "lezcano/CPProb"
"harvardnlp/TextFlow" -> "CW-Huang/NAF"
"harvardnlp/TextFlow" -> "TrentBrick/PyTorchDiscreteFlows"
"geniki/neural-processes" -> "kasparmartens/NeuralProcesses"
"geniki/neural-processes" -> "EmilienDupont/neural-processes"
"geniki/neural-processes" -> "makora9143/pytorch-convcnp"
"cpbotha/mlabwrap-purepy" -> "stevemayne/gplusblog"
"cpbotha/mlabwrap-purepy" -> "GhengopelALPHA/scriptbots"
"storborg/glass-teardown" -> "GhengopelALPHA/scriptbots"
"karpathy/twoolpy" -> "cpbotha/mlabwrap-purepy"
"karpathy/twoolpy" -> "karpathy/nn"
"karpathy/twoolpy" -> "stevemayne/gplusblog"
"karpathy/twoolpy" -> "karpathy/optim"
"karpathy/twoolpy" -> "bbabenko/simple_convnet"
"karpathy/twoolpy" -> "storborg/glass-teardown"
"karpathy/twoolpy" -> "googleglass/mirror-quickstart-python"
"bbabenko/simple_convnet" -> "cpbotha/mlabwrap-purepy"
"bbabenko/simple_convnet" -> "stevemayne/gplusblog"
"bbabenko/simple_convnet" -> "GhengopelALPHA/scriptbots"
"bbabenko/simple_convnet" -> "googleglass/mirror-quickstart-python"
"CW-Huang/NAF" -> "CW-Huang/torchkit"
"CW-Huang/NAF" -> "nicola-decao/BNAF"
"CW-Huang/NAF" -> "harvardnlp/TextFlow"
"CW-Huang/NAF" -> "bayesiains/nsf" ["e"=1]
"CW-Huang/NAF" -> "gpapamak/maf"
"KrisKorrel/sparsemax-pytorch" -> "vene/sparse-structured-attention"
"KrisKorrel/sparsemax-pytorch" -> "gokceneraslan/SparseMax.torch"
"eifuentes/swae-pytorch" -> "skolouri/swae"
"eifuentes/swae-pytorch" -> "kimiandj/gsw"
"eifuentes/swae-pytorch" -> "VinAIResearch/DSW"
"eifuentes/swae-pytorch" -> "koshian2/swd-pytorch"
"yassersouri/pytorch-deep-sets" -> "manzilzaheer/DeepSets"
"singh-hrituraj/PixelCNN-Pytorch" -> "anordertoreclaim/PixelCNN"
"jason71995/Keras_ODENet" -> "mandubian/neural-ode"
"amzn/xfer" -> "amzn/MXFusion"
"amirgholami/anode" -> "cfinlay/ffjord-rnode"
"amirgholami/anode" -> "a-norcliffe/sonode"
"amirgholami/anode" -> "juntang-zhuang/torch_ACA"
"cianeastwood/qedr" -> "paruby/DIP-VAE"
"bhpfelix/Variational-Autoencoder-PyTorch" -> "1Konny/FactorVAE" ["e"=1]
"bhpfelix/Variational-Autoencoder-PyTorch" -> "schelotto/Wasserstein-AutoEncoders" ["e"=1]
"soobinseo/Attentive-Neural-Process" -> "wassname/attentive-neural-processes"
"soobinseo/Attentive-Neural-Process" -> "AMLab-Amsterdam/FNP"
"soobinseo/Attentive-Neural-Process" -> "EmilienDupont/neural-processes"
"Cyanogenoid/dspn" -> "Cyanogenoid/fspool"
"tbung/pytorch-revnet" -> "renmengye/revnet-public" ["e"=1]
"tbung/pytorch-revnet" -> "jhjacobsen/pytorch-i-revnet"
"abdulfatir/normalizing-flows" -> "ex4sperans/variational-inference-with-normalizing-flows"
"abdulfatir/normalizing-flows" -> "ericjang/normalizing-flows-tutorial"
"abdulfatir/normalizing-flows" -> "riannevdberg/sylvester-flows"
"abdulfatir/normalizing-flows" -> "LukasRinder/normalizing-flows"
"abdulfatir/normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"amzn/MXFusion" -> "amzn/emukit-playground"
"ananyahjha93/cycle-consistent-vae" -> "ananyahjha93/disentangling-factors-of-variation-using-adversarial-training"
"ananyahjha93/cycle-consistent-vae" -> "ananyahjha93/challenges-in-disentangling"
"ananyahjha93/cycle-consistent-vae" -> "ananyahjha93/multi-level-vae"
"ananyahjha93/cycle-consistent-vae" -> "HuQyang/Disentangling-Factors-of-Variation-by-Mixing-Them"
"Devin-Taylor/MultiAug" -> "jacobdeasy/geometric-js"
"CW-Huang/torchkit" -> "CW-Huang/NAF"
"upphiminn/jDBSCAN" -> "uhho/density-clustering"
"AIcrowd/neurips2019_disentanglement_challenge_starter_kit" -> "rr-learning/disentanglement_dataset"
"paruby/Wasserstein-Auto-Encoders" -> "paruby/ml-basics"
"paruby/Wasserstein-Auto-Encoders" -> "nikikilbertus/cf-fairness-sensitivity"
"ananyahjha93/challenges-in-disentangling" -> "ananyahjha93/disentangling-factors-of-variation-using-adversarial-training"
"ananyahjha93/disentangling-factors-of-variation-using-adversarial-training" -> "ananyahjha93/challenges-in-disentangling"
"ananyahjha93/disentangling-factors-of-variation-using-adversarial-training" -> "ananyahjha93/cycle-consistent-vae"
"ehoogeboom/emerging" -> "ehoogeboom/convolution_exponential_and_sylvester"
"EugenHotaj/pytorch-generative" -> "kamenbliznashki/pixel_models"
"EugenHotaj/pytorch-generative" -> "jzbontar/pixelcnn-pytorch"
"EugenHotaj/pytorch-generative" -> "rosinality/vq-vae-2-pytorch"
"EugenHotaj/pytorch-generative" -> "matthewvowels1/Awesome-VAEs"
"EugenHotaj/pytorch-generative" -> "karpathy/deep-vector-quantization"
"PAIR-code/scatter-gl" -> "PAIR-code/umap-js"
"PAIR-code/scatter-gl" -> "PAIR-code/understanding-umap"
"PAIR-code/scatter-gl" -> "ColinEberhardt/d3fc-webgl-hathi-explorer" ["e"=1]
"AntixK/PyTorch-VAE" -> "clementchadebec/benchmark_VAE" ["e"=1]
"AntixK/PyTorch-VAE" -> "rosinality/vq-vae-2-pytorch" ["e"=1]
"raminmh/liquid_time_constant_networks" -> "mlech26l/ncps"
"raminmh/liquid_time_constant_networks" -> "raminmh/CfC"
"raminmh/liquid_time_constant_networks" -> "raminmh/liquid-s4"
"raminmh/liquid_time_constant_networks" -> "kyegomez/LiqudNet"
"raminmh/liquid_time_constant_networks" -> "mlech26l/keras-ncp"
"raminmh/liquid_time_constant_networks" -> "makramchahine/drone_causality"
"raminmh/liquid_time_constant_networks" -> "safipatel/LNN-cancer-classification"
"raminmh/liquid_time_constant_networks" -> "DiffEqML/torchdyn"
"raminmh/liquid_time_constant_networks" -> "state-spaces/s4" ["e"=1]
"raminmh/liquid_time_constant_networks" -> "Zymrael/awesome-neural-ode"
"raminmh/liquid_time_constant_networks" -> "BindsNET/bindsnet" ["e"=1]
"raminmh/liquid_time_constant_networks" -> "HusseinJammal/Liquid-Neural-Networks-in-Stock-Market-Prediction"
"raminmh/liquid_time_constant_networks" -> "rtqichen/torchdiffeq"
"raminmh/liquid_time_constant_networks" -> "fg-research/lnn-sagemaker"
"williamgilpin/dysts" -> "DiffEqML/torchdyn" ["e"=1]
"williamgilpin/dysts" -> "jacobjinkelly/easy-neural-ode" ["e"=1]
"HIPS/autograd" -> "rtqichen/torchdiffeq" ["e"=1]
"websockets/wscat" -> "harthur/kittydar" ["e"=1]
"janosh/awesome-normalizing-flows" -> "bayesiains/nflows"
"janosh/awesome-normalizing-flows" -> "VincentStimper/normalizing-flows"
"janosh/awesome-normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"janosh/awesome-normalizing-flows" -> "karpathy/pytorch-normalizing-flows"
"janosh/awesome-normalizing-flows" -> "probabilists/zuko" ["e"=1]
"janosh/awesome-normalizing-flows" -> "facebookincubator/flowtorch"
"janosh/awesome-normalizing-flows" -> "vislearn/FrEIA"
"janosh/awesome-normalizing-flows" -> "tonyduan/normalizing-flows"
"janosh/awesome-normalizing-flows" -> "atong01/conditional-flow-matching" ["e"=1]
"janosh/awesome-normalizing-flows" -> "patrick-kidger/diffrax" ["e"=1]
"janosh/awesome-normalizing-flows" -> "Zymrael/awesome-neural-ode"
"janosh/awesome-normalizing-flows" -> "sbi-dev/sbi" ["e"=1]
"janosh/awesome-normalizing-flows" -> "kazewong/flowMC" ["e"=1]
"janosh/awesome-normalizing-flows" -> "ikostrikov/pytorch-flows"
"janosh/awesome-normalizing-flows" -> "Chen-Cai-OSU/awesome-equivariant-network" ["e"=1]
"phlippe/uvadlc_notebooks" -> "janosh/awesome-normalizing-flows" ["e"=1]
"cvxgrp/cvxpylayers" -> "DiffEqML/torchdyn" ["e"=1]
"cvxgrp/cvxpylayers" -> "rtqichen/torchdiffeq" ["e"=1]
"cvxgrp/cvxpylayers" -> "google-research/torchsde" ["e"=1]
"cvxgrp/cvxpylayers" -> "locuslab/deq" ["e"=1]
"sbi-dev/sbi" -> "bayesiains/nflows" ["e"=1]
"andriiheonia/hull" -> "uhho/density-clustering" ["e"=1]
"mlech26l/ncps" -> "raminmh/liquid_time_constant_networks"
"mlech26l/ncps" -> "raminmh/CfC"
"mlech26l/ncps" -> "mlech26l/keras-ncp"
"mlech26l/ncps" -> "raminmh/liquid-s4"
"mlech26l/ncps" -> "BindsNET/bindsnet" ["e"=1]
"mlech26l/ncps" -> "ml-jku/hopfield-layers" ["e"=1]
"mlech26l/ncps" -> "jeshraghian/snntorch" ["e"=1]
"mlech26l/ncps" -> "fangwei123456/spikingjelly" ["e"=1]
"mlech26l/ncps" -> "norse/norse" ["e"=1]
"mlech26l/ncps" -> "DiffEqML/torchdyn"
"mlech26l/ncps" -> "state-spaces/s4" ["e"=1]
"mlech26l/ncps" -> "ridgerchu/SpikeGPT" ["e"=1]
"mlech26l/ncps" -> "google/brain-tokyo-workshop" ["e"=1]
"mlech26l/ncps" -> "NX-AI/xlstm" ["e"=1]
"mlech26l/ncps" -> "Zymrael/awesome-neural-ode"
"karpathy/recurrentjs" -> "karpathy/reinforcejs"
"karpathy/recurrentjs" -> "karpathy/forestjs"
"karpathy/recurrentjs" -> "karpathy/tsnejs"
"karpathy/recurrentjs" -> "karpathy/svmjs"
"karpathy/recurrentjs" -> "karpathy/convnetjs" ["e"=1]
"karpathy/recurrentjs" -> "karpathy/neuraltalk" ["e"=1]
"karpathy/recurrentjs" -> "hardmaru/backprop-neat-js" ["e"=1]
"karpathy/recurrentjs" -> "kaishengtai/torch-ntm" ["e"=1]
"karpathy/recurrentjs" -> "wojciechz/learning_to_execute" ["e"=1]
"karpathy/recurrentjs" -> "karpathy/lifejs"
"karpathy/recurrentjs" -> "waylonflinn/weblas" ["e"=1]
"karpathy/recurrentjs" -> "facebookarchive/eyescream" ["e"=1]
"karpathy/recurrentjs" -> "cazala/synaptic" ["e"=1]
"karpathy/recurrentjs" -> "Element-Research/rnn" ["e"=1]
"karpathy/recurrentjs" -> "karpathy/examples"
"mfinzi/LieConv" -> "CUAI/Neural-Manifold-Ordinary-Differential-Equations" ["e"=1]
"erikbern/deep-pink" -> "bbabenko/simple_convnet" ["e"=1]
"erikbern/deep-pink" -> "googleglass/mirror-quickstart-python" ["e"=1]
"erikbern/deep-pink" -> "karpathy/twoolpy" ["e"=1]
"erikbern/deep-pink" -> "cpbotha/mlabwrap-purepy" ["e"=1]
"erikbern/deep-pink" -> "sytelus/HackerNewsData" ["e"=1]
"andreas128/SRFlow" -> "chaiyujin/glow-pytorch" ["e"=1]
"VincentStimper/normalizing-flows" -> "bayesiains/nflows"
"VincentStimper/normalizing-flows" -> "janosh/awesome-normalizing-flows"
"VincentStimper/normalizing-flows" -> "probabilists/zuko" ["e"=1]
"VincentStimper/normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"VincentStimper/normalizing-flows" -> "karpathy/pytorch-normalizing-flows"
"VincentStimper/normalizing-flows" -> "facebookincubator/flowtorch"
"VincentStimper/normalizing-flows" -> "atong01/conditional-flow-matching" ["e"=1]
"VincentStimper/normalizing-flows" -> "tonyduan/normalizing-flows"
"VincentStimper/normalizing-flows" -> "rosinality/glow-pytorch"
"VincentStimper/normalizing-flows" -> "bayesiains/nsf" ["e"=1]
"VincentStimper/normalizing-flows" -> "vislearn/FrEIA"
"VincentStimper/normalizing-flows" -> "ikostrikov/pytorch-flows"
"VincentStimper/normalizing-flows" -> "kazewong/flowMC" ["e"=1]
"VincentStimper/normalizing-flows" -> "rtqichen/ffjord"
"VincentStimper/normalizing-flows" -> "didriknielsen/survae_flows"
"dpkingma/nips14-ssl" -> "wohlert/semi-supervised-pytorch" ["e"=1]
"dpkingma/nips14-ssl" -> "probtorch/probtorch" ["e"=1]
"jornpeters/integer_discrete_flows" -> "ehoogeboom/emerging" ["e"=1]
"bayesiains/nflows" -> "janosh/awesome-normalizing-flows"
"bayesiains/nflows" -> "VincentStimper/normalizing-flows"
"bayesiains/nflows" -> "bayesiains/nsf" ["e"=1]
"bayesiains/nflows" -> "kamenbliznashki/normalizing_flows"
"bayesiains/nflows" -> "karpathy/pytorch-normalizing-flows"
"bayesiains/nflows" -> "probabilists/zuko" ["e"=1]
"bayesiains/nflows" -> "tonyduan/normalizing-flows"
"bayesiains/nflows" -> "sbi-dev/sbi" ["e"=1]
"bayesiains/nflows" -> "didriknielsen/survae_flows"
"bayesiains/nflows" -> "facebookincubator/flowtorch"
"bayesiains/nflows" -> "johannbrehmer/manifold-flow"
"bayesiains/nflows" -> "ikostrikov/pytorch-flows"
"bayesiains/nflows" -> "ChrisWaites/jax-flows" ["e"=1]
"bayesiains/nflows" -> "vislearn/FrEIA"
"bayesiains/nflows" -> "nicola-decao/BNAF"
"oreillymedia/t-SNE-tutorial" -> "karpathy/tsnejs" ["e"=1]
"XuezheMax/flowseq" -> "harvardnlp/TextFlow" ["e"=1]
"ml-jku/hopfield-layers" -> "google-research/torchsde" ["e"=1]
"ml-jku/hopfield-layers" -> "locuslab/deq" ["e"=1]
"ml-jku/hopfield-layers" -> "google-research/disentanglement_lib" ["e"=1]
"NVlabs/NVAE" -> "openai/vdvae"
"NVlabs/NVAE" -> "GlassyWing/nvae"
"NVlabs/NVAE" -> "didriknielsen/survae_flows"
"NVlabs/NVAE" -> "NVlabs/LSGM" ["e"=1]
"NVlabs/NVAE" -> "rosinality/vq-vae-2-pytorch"
"NVlabs/NVAE" -> "clementchadebec/benchmark_VAE"
"NVlabs/NVAE" -> "matthewvowels1/Awesome-VAEs"
"NVlabs/NVAE" -> "taldatech/soft-intro-vae-pytorch"
"NVlabs/NVAE" -> "yang-song/score_sde" ["e"=1]
"NVlabs/NVAE" -> "YannDubs/disentangling-vae"
"NVlabs/NVAE" -> "AntixK/PyTorch-VAE" ["e"=1]
"NVlabs/NVAE" -> "rosinality/glow-pytorch"
"NVlabs/NVAE" -> "mit-han-lab/data-efficient-gans" ["e"=1]
"NVlabs/NVAE" -> "rtqichen/ffjord"
"NVlabs/NVAE" -> "kamenbliznashki/normalizing_flows"
"sloisel/numeric" -> "karpathy/forestjs" ["e"=1]
"sloisel/numeric" -> "karpathy/svmjs" ["e"=1]
"karpathy/karpathy.github.io" -> "colah/colah.github.io"
"karpathy/karpathy.github.io" -> "karpathy/randomfun"
"karpathy/karpathy.github.io" -> "karpathy/transformers"
"karpathy/karpathy.github.io" -> "karpathy/lecun1989-repro"
"karpathy/karpathy.github.io" -> "karpathy/ulogme"
"karpathy/karpathy.github.io" -> "karpathy/karpathy"
"karpathy/karpathy.github.io" -> "karpathy/arxiv-sanity-lite"
"karpathy/karpathy.github.io" -> "karpathy/covid-sanity"
"karpathy/karpathy.github.io" -> "karpathy/deep-vector-quantization"
"karpathy/karpathy.github.io" -> "karpathy/examples"
"karpathy/karpathy.github.io" -> "karpathy/cryptos"
"karpathy/karpathy.github.io" -> "karpathy/notpygamejs"
"karpathy/karpathy.github.io" -> "karpathy/makemore" ["e"=1]
"karpathy/karpathy.github.io" -> "karpathy/pytorch-made"
"karpathy/karpathy.github.io" -> "karpathy/recurrentjs"
"DiffEqML/torchdyn" -> "Zymrael/awesome-neural-ode"
"DiffEqML/torchdyn" -> "google-research/torchsde"
"DiffEqML/torchdyn" -> "rtqichen/torchdiffeq"
"DiffEqML/torchdyn" -> "patrick-kidger/diffrax" ["e"=1]
"DiffEqML/torchdyn" -> "patrick-kidger/NeuralCDE"
"DiffEqML/torchdyn" -> "EmilienDupont/augmented-neural-odes"
"DiffEqML/torchdyn" -> "patrick-kidger/torchcde"
"DiffEqML/torchdyn" -> "NeuroDiffGym/neurodiffeq" ["e"=1]
"DiffEqML/torchdyn" -> "msurtsukov/neural-ode"
"DiffEqML/torchdyn" -> "rtqichen/ffjord"
"DiffEqML/torchdyn" -> "atong01/conditional-flow-matching" ["e"=1]
"DiffEqML/torchdyn" -> "YuliaRubanova/latent_ode"
"DiffEqML/torchdyn" -> "SciML/DiffEqFlux.jl" ["e"=1]
"DiffEqML/torchdyn" -> "tum-pbs/PhiFlow" ["e"=1]
"DiffEqML/torchdyn" -> "locuslab/deq"
"lezcano/geotorch" -> "google-research/torchsde" ["e"=1]
"lezcano/geotorch" -> "bayesiains/nflows" ["e"=1]
"MilesCranmer/symbolic_deep_learning" -> "MilesCranmer/lagrangian_nns" ["e"=1]
"MilesCranmer/symbolic_deep_learning" -> "DiffEqML/torchdyn" ["e"=1]
"MilesCranmer/symbolic_deep_learning" -> "google-research/torchsde" ["e"=1]
"google-research/torchsde" -> "DiffEqML/torchdyn"
"google-research/torchsde" -> "patrick-kidger/NeuralCDE"
"google-research/torchsde" -> "patrick-kidger/diffrax" ["e"=1]
"google-research/torchsde" -> "patrick-kidger/torchcde"
"google-research/torchsde" -> "rtqichen/torchdiffeq"
"google-research/torchsde" -> "Zymrael/awesome-neural-ode"
"google-research/torchsde" -> "YuliaRubanova/latent_ode"
"google-research/torchsde" -> "rtqichen/ffjord"
"google-research/torchsde" -> "msurtsukov/neural-ode"
"google-research/torchsde" -> "patrick-kidger/equinox" ["e"=1]
"google-research/torchsde" -> "bayesiains/nflows"
"google-research/torchsde" -> "yang-song/score_sde" ["e"=1]
"google-research/torchsde" -> "yang-song/score_sde_pytorch" ["e"=1]
"google-research/torchsde" -> "EmilienDupont/augmented-neural-odes"
"google-research/torchsde" -> "pytorch/functorch" ["e"=1]
"replicate/keepsake" -> "karpathy/deep-vector-quantization" ["e"=1]
"karpathy/tsnejs" -> "scienceai/tsne-js"
"karpathy/tsnejs" -> "tensorflow/tfjs-tsne" ["e"=1]
"karpathy/tsnejs" -> "PAIR-code/umap-js"
"karpathy/tsnejs" -> "karpathy/recurrentjs"
"karpathy/tsnejs" -> "lvdmaaten/bhtsne" ["e"=1]
"karpathy/tsnejs" -> "karpathy/forestjs"
"karpathy/tsnejs" -> "karpathy/reinforcejs"
"karpathy/tsnejs" -> "upphiminn/jLouvain" ["e"=1]
"karpathy/tsnejs" -> "kylemcdonald/AudioNotebooks" ["e"=1]
"karpathy/tsnejs" -> "karpathy/svmjs"
"karpathy/tsnejs" -> "karpathy/Random-Forest-Matlab"
"karpathy/tsnejs" -> "oreillymedia/t-SNE-tutorial" ["e"=1]
"karpathy/tsnejs" -> "karpathy/find-birds"
"karpathy/tsnejs" -> "danielfrg/tsne" ["e"=1]
"karpathy/tsnejs" -> "lferry007/LargeVis" ["e"=1]
"bw2/ConfigArgParse" -> "rtqichen/residual-flows" ["e"=1]
"AdamCobb/hamiltorch" -> "bayesiains/nflows" ["e"=1]
"AdamCobb/hamiltorch" -> "facebookincubator/flowtorch" ["e"=1]
"AdamCobb/hamiltorch" -> "VincentStimper/normalizing-flows" ["e"=1]
"wgrathwohl/JEM" -> "jhjacobsen/invertible-resnet" ["e"=1]
"wgrathwohl/JEM" -> "didriknielsen/survae_flows" ["e"=1]
"wgrathwohl/JEM" -> "rtqichen/residual-flows" ["e"=1]
"patrick-kidger/torchcde" -> "patrick-kidger/NeuralCDE"
"patrick-kidger/torchcde" -> "YuliaRubanova/latent_ode"
"patrick-kidger/torchcde" -> "google-research/torchsde"
"patrick-kidger/torchcde" -> "patrick-kidger/diffrax" ["e"=1]
"patrick-kidger/torchcde" -> "DiffEqML/torchdyn"
"patrick-kidger/torchcde" -> "patrick-kidger/signatory"
"patrick-kidger/torchcde" -> "mlech26l/ode-lstms"
"patrick-kidger/torchcde" -> "jambo6/neuralRDEs"
"patrick-kidger/torchcde" -> "Zymrael/awesome-neural-ode"
"patrick-kidger/torchcde" -> "edebrouwer/gru_ode_bayes"
"patrick-kidger/torchcde" -> "jeongwhanchoi/STG-NCDE" ["e"=1]
"patrick-kidger/torchcde" -> "EmilienDupont/augmented-neural-odes"
"patrick-kidger/torchcde" -> "msurtsukov/neural-ode"
"patrick-kidger/torchcde" -> "patrick-kidger/FasterNeuralDiffEq"
"patrick-kidger/torchcde" -> "rtqichen/torchdiffeq"
"CUAI/Neural-Manifold-Ordinary-Differential-Equations" -> "CUAI/Differentiable-Frechet-Mean" ["e"=1]
"locuslab/deq" -> "locuslab/mdeq"
"locuslab/deq" -> "locuslab/monotone_op_net"
"locuslab/deq" -> "DiffEqML/torchdyn"
"locuslab/deq" -> "rtqichen/ffjord"
"locuslab/deq" -> "locuslab/trellisnet"
"locuslab/deq" -> "locuslab/SATNet" ["e"=1]
"locuslab/deq" -> "YuliaRubanova/latent_ode"
"locuslab/deq" -> "Zymrael/awesome-neural-ode"
"locuslab/deq" -> "locuslab/torchdeq"
"locuslab/deq" -> "cvxgrp/cvxpylayers" ["e"=1]
"locuslab/deq" -> "akbir/deq-jax"
"locuslab/deq" -> "locuslab/optnet" ["e"=1]
"locuslab/deq" -> "EmilienDupont/augmented-neural-odes"
"locuslab/deq" -> "google-research/torchsde"
"locuslab/deq" -> "locuslab/deq-ddim"
"karpathy/scholaroctopus" -> "karpathy/simple-amt"
"karpathy/scholaroctopus" -> "karpathy/nn"
"karpathy/scholaroctopus" -> "karpathy/optim"
"jacobjinkelly/easy-neural-ode" -> "ChrisWaites/jax-flows" ["e"=1]
"jacobjinkelly/easy-neural-ode" -> "Information-Fusion-Lab-Umass/NuX" ["e"=1]
"jacobjinkelly/easy-neural-ode" -> "cfinlay/ffjord-rnode"
"jacobjinkelly/easy-neural-ode" -> "EmilienDupont/augmented-neural-odes"
"jacobjinkelly/easy-neural-ode" -> "SymJAX/SymJAX" ["e"=1]
"jacobjinkelly/easy-neural-ode" -> "xwinxu/bayeSDE"
"jacobjinkelly/easy-neural-ode" -> "Zymrael/awesome-neural-ode"
"jacobjinkelly/easy-neural-ode" -> "juntang-zhuang/torch_ACA"
"jacobjinkelly/easy-neural-ode" -> "johannbrehmer/manifold-flow"
"jacobjinkelly/easy-neural-ode" -> "CUAI/Neural-Manifold-Ordinary-Differential-Equations"
"jacobjinkelly/easy-neural-ode" -> "patrick-kidger/FasterNeuralDiffEq"
"jacobjinkelly/easy-neural-ode" -> "DiffEqML/torchdyn"
"koshian2/swd-pytorch" -> "eifuentes/swae-pytorch"
"karpathy/covid-sanity" -> "karpathy/find-birds"
"karpathy/covid-sanity" -> "karpathy/notpygamejs"
"karpathy/covid-sanity" -> "karpathy/optim"
"MilesCranmer/lagrangian_nns" -> "greydanus/hamiltonian-nn"
"MilesCranmer/lagrangian_nns" -> "mfinzi/constrained-hamiltonian-neural-networks"
"MilesCranmer/lagrangian_nns" -> "milutter/deep_lagrangian_networks"
"MilesCranmer/lagrangian_nns" -> "MilesCranmer/symbolic_deep_learning" ["e"=1]
"MilesCranmer/lagrangian_nns" -> "DiffEqML/torchdyn"
"MilesCranmer/lagrangian_nns" -> "Zymrael/awesome-neural-ode"
"MilesCranmer/lagrangian_nns" -> "wangleiphy/tensorgrad" ["e"=1]
"MilesCranmer/lagrangian_nns" -> "NeuroDiffGym/neurodiffeq" ["e"=1]
"MilesCranmer/lagrangian_nns" -> "dynamicslab/pysindy" ["e"=1]
"MilesCranmer/lagrangian_nns" -> "mfinzi/equivariant-MLP" ["e"=1]
"MilesCranmer/lagrangian_nns" -> "rtqichen/ffjord"
"MilesCranmer/lagrangian_nns" -> "mhibatallah/RNNWavefunctions" ["e"=1]
"MilesCranmer/lagrangian_nns" -> "SciML/DiffEqFlux.jl" ["e"=1]
"MilesCranmer/lagrangian_nns" -> "MilesCranmer/PySR" ["e"=1]
"MilesCranmer/lagrangian_nns" -> "SciML/NeuralPDE.jl" ["e"=1]
"mfinzi/constrained-hamiltonian-neural-networks" -> "anshu957/OrderChaosHNN"
"wesselb/NeuralProcesses.jl" -> "wesselb/neuralprocesses"
"wesselb/NeuralProcesses.jl" -> "cambridge-mlg/convcnp"
"Jackson-Kang/Pytorch-VAE-tutorial" -> "zalandoresearch/pytorch-vq-vae" ["e"=1]
"karpathy/researchpooler" -> "karpathy/twoolpy"
"karpathy/researchpooler" -> "karpathy/notpygamejs"
"karpathy/researchpooler" -> "karpathy/researchlei"
"karpathy/researchpooler" -> "karpathy/lifejs"
"karpathy/researchpooler" -> "googleglass/mirror-quickstart-python"
"karpathy/researchpooler" -> "karpathy/transformers"
"karpathy/researchpooler" -> "karpathy/optim"
"karpathy/researchpooler" -> "cpbotha/mlabwrap-purepy"
"karpathy/researchpooler" -> "bbabenko/simple_convnet"
"karpathy/researchpooler" -> "karpathy/Random-Forest-Matlab"
"karpathy/researchpooler" -> "stevemayne/gplusblog"
"karpathy/researchpooler" -> "karpathy/forestjs"
"karpathy/researchpooler" -> "karpathy/svmjs"
"karpathy/researchpooler" -> "karpathy/scriptsbots"
"karpathy/researchpooler" -> "Sohl-Dickstein/Sum-of-Functions-Optimizer"
"kilianFatras/awesome-optimal-transport" -> "kimiandj/gsw" ["e"=1]
"matthewvowels1/Awesome-VAEs" -> "YannDubs/disentangling-vae"
"matthewvowels1/Awesome-VAEs" -> "amir-abdi/disentanglement-pytorch"
"matthewvowels1/Awesome-VAEs" -> "google-research/disentanglement_lib"
"matthewvowels1/Awesome-VAEs" -> "janosh/awesome-normalizing-flows"
"matthewvowels1/Awesome-VAEs" -> "NVlabs/NVAE"
"matthewvowels1/Awesome-VAEs" -> "karpathy/pytorch-normalizing-flows"
"matthewvowels1/Awesome-VAEs" -> "rtqichen/beta-tcvae"
"matthewvowels1/Awesome-VAEs" -> "1Konny/Beta-VAE"
"matthewvowels1/Awesome-VAEs" -> "Schlumberger/joint-vae"
"matthewvowels1/Awesome-VAEs" -> "sootlasten/disentangled-representation-papers" ["e"=1]
"matthewvowels1/Awesome-VAEs" -> "google-deepmind/dsprites-dataset"
"matthewvowels1/Awesome-VAEs" -> "openai/vdvae"
"matthewvowels1/Awesome-VAEs" -> "didriknielsen/survae_flows"
"matthewvowels1/Awesome-VAEs" -> "bayesiains/nflows"
"matthewvowels1/Awesome-VAEs" -> "jariasf/GMVAE" ["e"=1]
"patrick-kidger/NeuralCDE" -> "patrick-kidger/torchcde"
"patrick-kidger/NeuralCDE" -> "YuliaRubanova/latent_ode"
"patrick-kidger/NeuralCDE" -> "google-research/torchsde"
"patrick-kidger/NeuralCDE" -> "EmilienDupont/augmented-neural-odes"
"patrick-kidger/NeuralCDE" -> "Zymrael/awesome-neural-ode"
"patrick-kidger/NeuralCDE" -> "jambo6/neuralRDEs"
"patrick-kidger/NeuralCDE" -> "DiffEqML/torchdyn"
"patrick-kidger/NeuralCDE" -> "patrick-kidger/signatory"
"patrick-kidger/NeuralCDE" -> "edebrouwer/gru_ode_bayes"
"patrick-kidger/NeuralCDE" -> "msurtsukov/neural-ode"
"patrick-kidger/NeuralCDE" -> "patrick-kidger/diffrax" ["e"=1]
"patrick-kidger/NeuralCDE" -> "mlech26l/ode-lstms"
"patrick-kidger/NeuralCDE" -> "rtqichen/ffjord"
"patrick-kidger/NeuralCDE" -> "rtqichen/torchdiffeq"
"patrick-kidger/NeuralCDE" -> "Zymrael/gde" ["e"=1]
"anordertoreclaim/PixelCNN" -> "singh-hrituraj/PixelCNN-Pytorch"
"mlech26l/ode-lstms" -> "edebrouwer/gru_ode_bayes"
"mlech26l/ode-lstms" -> "steveli/partial-encoder-decoder"
"karpathy/pytorch-normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"karpathy/pytorch-normalizing-flows" -> "bayesiains/nflows"
"karpathy/pytorch-normalizing-flows" -> "tonyduan/normalizing-flows"
"karpathy/pytorch-normalizing-flows" -> "janosh/awesome-normalizing-flows"
"karpathy/pytorch-normalizing-flows" -> "ikostrikov/pytorch-flows"
"karpathy/pytorch-normalizing-flows" -> "VincentStimper/normalizing-flows"
"karpathy/pytorch-normalizing-flows" -> "bayesiains/nsf" ["e"=1]
"karpathy/pytorch-normalizing-flows" -> "karpathy/pytorch-made"
"karpathy/pytorch-normalizing-flows" -> "ericjang/normalizing-flows-tutorial"
"karpathy/pytorch-normalizing-flows" -> "didriknielsen/survae_flows"
"karpathy/pytorch-normalizing-flows" -> "rtqichen/residual-flows"
"karpathy/pytorch-normalizing-flows" -> "rosinality/glow-pytorch"
"karpathy/pytorch-normalizing-flows" -> "gpapamak/maf"
"karpathy/pytorch-normalizing-flows" -> "rtqichen/ffjord"
"karpathy/pytorch-normalizing-flows" -> "nicola-decao/BNAF"
"colah/Conv-Nets-Series" -> "colah/Visualizing-Deep-Learning"
"colah/Visualizing-Deep-Learning" -> "colah/Conv-Nets-Series"
"VinAIResearch/DSW" -> "kimiandj/gsw"
"VinAIResearch/DSW" -> "VinAIResearch/PC3-pytorch"
"makora9143/pytorch-convcnp" -> "cambridge-mlg/convcnp"
"alessandroferrari/BING-Objectness" -> "alessandroferrari/R-CNN-Object-detection"
"alessandroferrari/BING-Objectness" -> "torrvision/Objectness"
"alessandroferrari/BING-Objectness" -> "yun-liu/BING"
"harvardnlp/pytorch-struct" -> "deep-spin/entmax" ["e"=1]
"vlievin/biva-pytorch" -> "addtt/ladder-vae-pytorch"
"vlievin/biva-pytorch" -> "larsmaaloee/BIVA"
"vlievin/biva-pytorch" -> "JakobHavtorn/hvae-oodd"
"rtqichen/residual-flows" -> "jhjacobsen/invertible-resnet"
"rtqichen/residual-flows" -> "didriknielsen/survae_flows"
"rtqichen/residual-flows" -> "rtqichen/ffjord"
"rtqichen/residual-flows" -> "bayesiains/nsf" ["e"=1]
"rtqichen/residual-flows" -> "PolinaKirichenko/flows_ood"
"rtqichen/residual-flows" -> "harvardnlp/TextFlow"
"rtqichen/residual-flows" -> "rosinality/glow-pytorch"
"rtqichen/residual-flows" -> "aravindsrinivas/flowpp"
"rtqichen/residual-flows" -> "ikostrikov/pytorch-flows"
"rtqichen/residual-flows" -> "jhjacobsen/pytorch-i-revnet"
"rtqichen/residual-flows" -> "kamenbliznashki/normalizing_flows"
"rtqichen/residual-flows" -> "XuezheMax/macow" ["e"=1]
"rtqichen/residual-flows" -> "patrick-kidger/FasterNeuralDiffEq"
"rtqichen/residual-flows" -> "chrischute/real-nvp"
"rtqichen/residual-flows" -> "tonyduan/normalizing-flows"
"bayesflow-org/bayesflow" -> "bayesiains/nflows" ["e"=1]
"dustinvtran/latex-templates" -> "jluttine/tikz-bayesnet" ["e"=1]
"2prime/ODE-DL" -> "Zymrael/awesome-neural-ode" ["e"=1]
"addtt/ladder-vae-pytorch" -> "vlievin/biva-pytorch"
"addtt/ladder-vae-pytorch" -> "GlassyWing/nvae"
"didriknielsen/survae_flows" -> "rtqichen/residual-flows"
"didriknielsen/survae_flows" -> "kamenbliznashki/normalizing_flows"
"didriknielsen/survae_flows" -> "bayesiains/nsf" ["e"=1]
"didriknielsen/survae_flows" -> "bayesiains/nflows"
"didriknielsen/survae_flows" -> "chrischute/real-nvp"
"didriknielsen/survae_flows" -> "nicola-decao/BNAF"
"didriknielsen/survae_flows" -> "tonyduan/normalizing-flows"
"didriknielsen/survae_flows" -> "riannevdberg/sylvester-flows"
"didriknielsen/survae_flows" -> "johannbrehmer/manifold-flow"
"didriknielsen/survae_flows" -> "ikostrikov/pytorch-flows"
"didriknielsen/survae_flows" -> "rtqichen/ffjord"
"didriknielsen/survae_flows" -> "gpapamak/maf"
"didriknielsen/survae_flows" -> "aravindsrinivas/flowpp"
"didriknielsen/survae_flows" -> "didriknielsen/pixelcnn_flow"
"didriknielsen/survae_flows" -> "izmailovpavel/flowgmm"
"VinAIResearch/PCC-pytorch" -> "VinAIResearch/plasticbag-faster-rcnn"
"VinAIResearch/PCC-pytorch" -> "VinAIResearch/PC3-pytorch"
"VinAIResearch/PCC-pytorch" -> "pkien01/MNIST-neural-network-classifier"
"VinAIResearch/PCC-pytorch" -> "pkien01/draw-on-face"
"cambridge-mlg/cnaps" -> "cambridge-mlg/convcnp" ["e"=1]
"cambridge-mlg/cnaps" -> "AMLab-Amsterdam/FNP" ["e"=1]
"YannDubs/Neural-Process-Family" -> "cambridge-mlg/convcnp"
"YannDubs/Neural-Process-Family" -> "wesselb/neuralprocesses"
"YannDubs/Neural-Process-Family" -> "EmilienDupont/neural-processes"
"YannDubs/Neural-Process-Family" -> "google-deepmind/neural-processes"
"YannDubs/Neural-Process-Family" -> "wassname/attentive-neural-processes"
"YannDubs/Neural-Process-Family" -> "soobinseo/Attentive-Neural-Process"
"YannDubs/Neural-Process-Family" -> "wesselb/NeuralProcesses.jl"
"YannDubs/Neural-Process-Family" -> "makora9143/pytorch-convcnp"
"YannDubs/Neural-Process-Family" -> "tung-nd/TNP-pytorch"
"YannDubs/Neural-Process-Family" -> "crisbodnar/ndp"
"YannDubs/Neural-Process-Family" -> "AMLab-Amsterdam/FNP"
"YannDubs/Neural-Process-Family" -> "vdutor/neural-diffusion-processes"
"YannDubs/Neural-Process-Family" -> "singhgautam/snp"
"YannDubs/Neural-Process-Family" -> "GitGyun/multi_task_neural_processes"
"YannDubs/Neural-Process-Family" -> "juho-lee/bnp"
"vislearn/conditional_INNs" -> "vislearn/analyzing_inverse_problems"
"facebookresearch/beanmachine" -> "facebookresearch/pplbench"
"facebookresearch/beanmachine" -> "facebookincubator/flowtorch"
"facebookresearch/beanmachine" -> "facebookresearch/diffkt"
"facebookresearch/beanmachine" -> "pyro-ppl/funsor" ["e"=1]
"facebookresearch/beanmachine" -> "jeremiecoullon/SGMCMCJax" ["e"=1]
"yewsiang/ConceptBottleneck" -> "mateoespinosa/cem" ["e"=1]
"rlouf/mcx" -> "facebookresearch/pplbench" ["e"=1]
"nmichlo/disent" -> "rr-learning/disentanglement_dataset"
"nmichlo/disent" -> "amir-abdi/disentanglement-pytorch"
"nmichlo/disent" -> "facebookresearch/disentangling-correlated-factors"
"nmichlo/disent" -> "YannDubs/disentangling-vae"
"google-deepmind/multi_object_datasets" -> "google-deepmind/dsprites-dataset" ["e"=1]
"xqding/RealNVP" -> "shirleyzhu233/realNVP"
"LukasRinder/normalizing-flows" -> "tonyduan/normalizing-flows"
"LukasRinder/normalizing-flows" -> "nicola-decao/BNAF"
"LukasRinder/normalizing-flows" -> "pierresegonne/VINF"
"LukasRinder/normalizing-flows" -> "abdulfatir/normalizing-flows"
"LukasRinder/normalizing-flows" -> "gpapamak/maf"
"LukasRinder/normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"LukasRinder/normalizing-flows" -> "acids-ircam/pytorch_flows"
"LukasRinder/normalizing-flows" -> "ericjang/normalizing-flows-tutorial"
"LukasRinder/normalizing-flows" -> "didriknielsen/survae_flows"
"LukasRinder/normalizing-flows" -> "PolinaKirichenko/flows_ood"
"LukasRinder/normalizing-flows" -> "izmailovpavel/flowgmm"
"PAIR-code/understanding-umap" -> "PAIR-code/scatter-gl"
"a-norcliffe/sonode" -> "crisbodnar/ndp"
"a-norcliffe/sonode" -> "jacobdeasy/geometric-js"
"ioangatop/srVAE" -> "ehoogeboom/convolution_exponential_and_sylvester" ["e"=1]
"wassname/attentive-neural-processes" -> "soobinseo/Attentive-Neural-Process"
"wassname/attentive-neural-processes" -> "KurochkinAlexey/Recurrent-neural-processes"
"wassname/attentive-neural-processes" -> "YannDubs/Neural-Process-Family"
"wassname/attentive-neural-processes" -> "cambridge-mlg/convcnp"
"juntang-zhuang/torch_ACA" -> "juntang-zhuang/TorchDiffEqPack"
"juntang-zhuang/torch_ACA" -> "cfinlay/ffjord-rnode"
"karpathy/sqlitedict" -> "karpathy/optim"
"karpathy/sqlitedict" -> "karpathy/nn"
"karpathy/sqlitedict" -> "karpathy/simple-amt"
"jambo6/neuralRDEs" -> "patrick-kidger/NeuralCDE"
"orybkin/sigma-vae-pytorch" -> "vlievin/biva-pytorch"
"sytelus/HackerNewsData" -> "GhengopelALPHA/scriptbots"
"sytelus/HackerNewsData" -> "googleglass/mirror-quickstart-python"
"sytelus/HackerNewsData" -> "cpbotha/mlabwrap-purepy"
"sytelus/HackerNewsData" -> "storborg/glass-teardown"
"jcjohnson/simple-amt" -> "Sohl-Dickstein/Sum-of-Functions-Optimizer" ["e"=1]
"jcjohnson/simple-amt" -> "googleglass/mirror-quickstart-python" ["e"=1]
"jcjohnson/simple-amt" -> "karpathy/twoolpy" ["e"=1]
"crispitagorico/sigkernel" -> "anh-tong/signax"
"crispitagorico/sigkernel" -> "tgcsaba/KSig"
"crispitagorico/sigkernel" -> "tgcsaba/GPSig"
"crispitagorico/sigkernel" -> "patrick-kidger/signatory"
"kimiandj/gsw" -> "VinAIResearch/DSW"
"kimiandj/gsw" -> "eifuentes/swae-pytorch"
"vislearn/analyzing_inverse_problems" -> "jaekookang/invertible_neural_networks"
"vislearn/analyzing_inverse_problems" -> "vislearn/conditional_INNs"
"vislearn/analyzing_inverse_problems" -> "vislearn/FrEIA"
"vislearn/analyzing_inverse_problems" -> "zabaras/inn-surrogate"
"vislearn/analyzing_inverse_problems" -> "vislearn/inn_toy_data"
"cfinlay/ffjord-rnode" -> "juntang-zhuang/torch_ACA"
"cfinlay/ffjord-rnode" -> "amirgholami/anode"
"stevemayne/gplusblog" -> "cpbotha/mlabwrap-purepy"
"jpzxshi/learner" -> "jpzxshi/sympnets"
"izmailovpavel/flowgmm" -> "PolinaKirichenko/flows_ood"
"izmailovpavel/flowgmm" -> "aravindsrinivas/flowpp"
"cambridge-mlg/convcnp" -> "makora9143/pytorch-convcnp"
"cambridge-mlg/convcnp" -> "YannDubs/Neural-Process-Family"
"cambridge-mlg/convcnp" -> "wesselb/neuralprocesses"
"cambridge-mlg/convcnp" -> "EmilienDupont/neural-processes"
"cambridge-mlg/convcnp" -> "wesselb/NeuralProcesses.jl"
"cambridge-mlg/convcnp" -> "annavaughan/convCNPClimate"
"cambridge-mlg/convcnp" -> "AMLab-Amsterdam/FNP"
"cambridge-mlg/convcnp" -> "wassname/attentive-neural-processes"
"cambridge-mlg/convcnp" -> "geniki/neural-processes"
"locuslab/mdeq" -> "locuslab/deq"
"locuslab/mdeq" -> "locuslab/monotone_op_net"
"locuslab/mdeq" -> "akbir/deq-jax"
"locuslab/mdeq" -> "locuslab/deq-ddim"
"locuslab/mdeq" -> "locuslab/torchdeq"
"locuslab/mdeq" -> "locuslab/ImpSq"
"TrentBrick/PyTorchDiscreteFlows" -> "phlippe/CategoricalNF"
"TrentBrick/PyTorchDiscreteFlows" -> "harvardnlp/TextFlow"
"GlassyWing/nvae" -> "nextml-code/template-nvae"
"GlassyWing/nvae" -> "addtt/ladder-vae-pytorch"
"GlassyWing/nvae" -> "NVlabs/NVAE"
"tvayer/SGW" -> "VinAIResearch/DSW" ["e"=1]
"jambo6/generalised-signature-method" -> "patrick-kidger/Deep-Signature-Transforms"
"jambo6/generalised-signature-method" -> "bottler/iisignature"
"cetmann/iunets" -> "silvandeleemput/memcnn"
"Physics-aware-AI/Symplectic-ODENet" -> "d-biswa/Symplectic-ODENet"
"Physics-aware-AI/Symplectic-ODENet" -> "DesmondZhong/Lagrangian_caVAE"
"crisbodnar/dgm" -> "jacobdeasy/geometric-js"
"Zymrael/gde" -> "a-norcliffe/sonode" ["e"=1]
"PolinaKirichenko/flows_ood" -> "boschresearch/hierarchical_anomaly_detection" ["e"=1]
"SigCGANs/Conditional-Sig-Wasserstein-GANs" -> "patrick-kidger/signatory" ["e"=1]
"ariercole/Cambridge_COVID-19_ICU" -> "jacobdeasy/geometric-js"
"jacobdeasy/geometric-js" -> "ariercole/Cambridge_COVID-19_ICU"
"jacobdeasy/geometric-js" -> "Devin-Taylor/MultiAug"
"pkien01/MNIST-neural-network-classifier" -> "pkien01/draw-on-face"
"pkien01/draw-on-face" -> "pkien01/MNIST-neural-network-classifier"
"singhgautam/snp" -> "KurochkinAlexey/Recurrent-neural-processes"
"rvinas/GTEx-imputation" -> "jacobdeasy/geometric-js"
"selfspy/selfspy" -> "karpathy/ulogme" ["e"=1]
"probml/pml-book" -> "janosh/awesome-normalizing-flows" ["e"=1]
"MaximeVandegar/Papers-in-100-Lines-of-Code" -> "VincentStimper/normalizing-flows" ["e"=1]
"MaximeVandegar/Papers-in-100-Lines-of-Code" -> "clementchadebec/benchmark_VAE" ["e"=1]
"MaximeVandegar/Papers-in-100-Lines-of-Code" -> "janosh/awesome-normalizing-flows" ["e"=1]
"karpathy/cryptos" -> "karpathy/makemore" ["e"=1]
"karpathy/cryptos" -> "karpathy/micrograd" ["e"=1]
"karpathy/cryptos" -> "karpathy/lecun1989-repro"
"karpathy/cryptos" -> "karpathy/transformers"
"karpathy/cryptos" -> "karpathy/arxiv-sanity-lite"
"karpathy/cryptos" -> "jimmysong/programmingbitcoin" ["e"=1]
"karpathy/cryptos" -> "karpathy/deep-vector-quantization"
"karpathy/cryptos" -> "karpathy/randomfun"
"karpathy/cryptos" -> "karpathy/ulogme"
"karpathy/cryptos" -> "karpathy/pytorch-normalizing-flows"
"karpathy/cryptos" -> "karpathy/researchpooler"
"karpathy/cryptos" -> "karpathy/nn-zero-to-hero" ["e"=1]
"karpathy/cryptos" -> "karpathy/llama2.c" ["e"=1]
"karpathy/cryptos" -> "karpathy/nano-llama31" ["e"=1]
"karpathy/cryptos" -> "karpathy/minbpe" ["e"=1]
"karpathy/reinforcejs" -> "karpathy/recurrentjs"
"karpathy/reinforcejs" -> "karpathy/convnetjs" ["e"=1]
"karpathy/reinforcejs" -> "rll/rllab" ["e"=1]
"karpathy/reinforcejs" -> "spragunr/deep_q_rl" ["e"=1]
"karpathy/reinforcejs" -> "janhuenermann/neurojs" ["e"=1]
"karpathy/reinforcejs" -> "karpathy/svmjs"
"karpathy/reinforcejs" -> "joschu/modular_rl" ["e"=1]
"karpathy/reinforcejs" -> "siemanko/tensorflow-deepq" ["e"=1]
"karpathy/reinforcejs" -> "karpathy/tsnejs"
"karpathy/reinforcejs" -> "junhyukoh/deep-reinforcement-learning-papers" ["e"=1]
"karpathy/reinforcejs" -> "BeTomorrow/ReImproveJS" ["e"=1]
"karpathy/reinforcejs" -> "Farama-Foundation/Arcade-Learning-Environment" ["e"=1]
"karpathy/reinforcejs" -> "SirTificate/gekko-neuralnet" ["e"=1]
"karpathy/reinforcejs" -> "coreylynch/async-rl" ["e"=1]
"karpathy/reinforcejs" -> "tambetm/simple_dqn" ["e"=1]
"aleximmer/Laplace" -> "bayesiains/nflows" ["e"=1]
"aleximmer/Laplace" -> "didriknielsen/survae_flows" ["e"=1]
"f-dangel/cockpit" -> "didriknielsen/survae_flows" ["e"=1]
"karpathy/deep-vector-quantization" -> "karpathy/pytorch-normalizing-flows"
"karpathy/deep-vector-quantization" -> "microsoft/VQ-Diffusion" ["e"=1]
"karpathy/deep-vector-quantization" -> "sony/sqvae"
"karpathy/deep-vector-quantization" -> "karpathy/researchpooler"
"karpathy/deep-vector-quantization" -> "MishaLaskin/vqvae"
"karpathy/deep-vector-quantization" -> "karpathy/pytorch-made"
"karpathy/deep-vector-quantization" -> "ritheshkumar95/pytorch-vqvae"
"karpathy/deep-vector-quantization" -> "karpathy/transformers"
"karpathy/deep-vector-quantization" -> "karpathy/arxiv-sanity-lite"
"karpathy/deep-vector-quantization" -> "karpathy/lecun1989-repro"
"karpathy/deep-vector-quantization" -> "lucidrains/vector-quantize-pytorch" ["e"=1]
"karpathy/deep-vector-quantization" -> "karpathy/notpygamejs"
"karpathy/deep-vector-quantization" -> "karpathy/ttmik"
"karpathy/deep-vector-quantization" -> "nadavbh12/VQ-VAE"
"karpathy/deep-vector-quantization" -> "karpathy/optim"
"lvdmaaten/bhtsne" -> "karpathy/tsnejs" ["e"=1]
"kjw0612/awesome-random-forest" -> "karpathy/Random-Forest-Matlab" ["e"=1]
"pytorch/functorch" -> "google-research/torchsde" ["e"=1]
"pytorch/functorch" -> "DiffEqML/torchdyn" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "bayesiains/nflows" ["e"=1]
"lucidrains/perceiver-pytorch" -> "juho-lee/set_transformer" ["e"=1]
"taldatech/soft-intro-vae-pytorch" -> "hhb072/IntroVAE"
"taldatech/soft-intro-vae-pytorch" -> "HuajieShao/ControlVAE-ICML2020"
"tmadl/semisup-learn" -> "wohlert/semi-supervised-pytorch" ["e"=1]
"pietrobarbiero/pytorch_explain" -> "mateoespinosa/cem"
"pietrobarbiero/pytorch_explain" -> "pietrobarbiero/logic_explained_networks"
"pietrobarbiero/pytorch_explain" -> "pietrobarbiero/entropy-lens"
"pietrobarbiero/pytorch_explain" -> "jacobdeasy/geometric-js"
"pietrobarbiero/pytorch_explain" -> "HekpoMaH/algorithmic-concepts-reasoning"
"patrick-kidger/diffrax" -> "google-research/torchsde" ["e"=1]
"patrick-kidger/diffrax" -> "DiffEqML/torchdyn" ["e"=1]
"patrick-kidger/diffrax" -> "patrick-kidger/torchcde" ["e"=1]
"pnnl/neuromancer" -> "DiffEqML/torchdyn" ["e"=1]
"mgermain/MADE" -> "gpapamak/maf"
"mgermain/MADE" -> "karpathy/pytorch-made"
"raminmh/CfC" -> "raminmh/liquid_time_constant_networks"
"raminmh/CfC" -> "raminmh/liquid-s4"
"raminmh/CfC" -> "mlech26l/ncps"
"raminmh/CfC" -> "mlech26l/keras-ncp"
"raminmh/CfC" -> "makramchahine/drone_causality"
"raminmh/CfC" -> "mlech26l/ode-lstms"
"raminmh/CfC" -> "ridgerchu/SpikeGPT" ["e"=1]
"raminmh/CfC" -> "patrick-kidger/diffrax" ["e"=1]
"raminmh/CfC" -> "makramchahine/rosetta_drone"
"raminmh/CfC" -> "DiffEqML/torchdyn"
"raminmh/CfC" -> "paperswithcode/galai" ["e"=1]
"raminmh/CfC" -> "state-spaces/s4" ["e"=1]
"raminmh/CfC" -> "lindermanlab/S5" ["e"=1]
"raminmh/CfC" -> "zjc062/mind-vis" ["e"=1]
"raminmh/CfC" -> "eloialonso/iris" ["e"=1]
"makramchahine/rosetta_drone" -> "makramchahine/drone_causality"
"jmtomczak/intro_dgm" -> "janosh/awesome-normalizing-flows"
"jmtomczak/intro_dgm" -> "clementchadebec/benchmark_VAE"
"jmtomczak/intro_dgm" -> "yang-song/score_sde" ["e"=1]
"jmtomczak/intro_dgm" -> "atong01/conditional-flow-matching" ["e"=1]
"jmtomczak/intro_dgm" -> "facebookresearch/flow_matching" ["e"=1]
"jmtomczak/intro_dgm" -> "NVlabs/NVAE"
"jmtomczak/intro_dgm" -> "yang-song/score_sde_pytorch" ["e"=1]
"jmtomczak/intro_dgm" -> "google-research/torchsde"
"jmtomczak/intro_dgm" -> "karpathy/pytorch-normalizing-flows"
"jmtomczak/intro_dgm" -> "VincentStimper/normalizing-flows"
"jmtomczak/intro_dgm" -> "jmtomczak/vae_vampprior"
"jmtomczak/intro_dgm" -> "NVlabs/edm" ["e"=1]
"jmtomczak/intro_dgm" -> "DiffEqML/torchdyn"
"jmtomczak/intro_dgm" -> "matthewvowels1/Awesome-VAEs"
"jmtomczak/intro_dgm" -> "bayesiains/nflows"
"patrick-kidger/torchtyping" -> "google-research/torchsde" ["e"=1]
"hardmaru/neuralslimevolley" -> "tkocisky/oxnn" ["e"=1]
"hardmaru/neuralslimevolley" -> "Sohl-Dickstein/Sum-of-Functions-Optimizer"
"hardmaru/neuralslimevolley" -> "Ramblurr/scriptbots"
"hardmaru/neuralslimevolley" -> "sytelus/HackerNewsData"
"hardmaru/neuralslimevolley" -> "GhengopelALPHA/scriptbots"
"hardmaru/neuralslimevolley" -> "stevemayne/gplusblog"
"hardmaru/neuralslimevolley" -> "cpbotha/mlabwrap-purepy"
"hardmaru/neuralslimevolley" -> "storborg/glass-teardown"
"facebookincubator/flowtorch" -> "bayesiains/nflows"
"facebookincubator/flowtorch" -> "probabilists/zuko" ["e"=1]
"facebookincubator/flowtorch" -> "janosh/awesome-normalizing-flows"
"facebookincubator/flowtorch" -> "VincentStimper/normalizing-flows"
"facebookincubator/flowtorch" -> "facebookresearch/beanmachine"
"facebookincubator/flowtorch" -> "noegroup/stochastic_normalizing_flows" ["e"=1]
"facebookincubator/flowtorch" -> "AdamCobb/hamiltorch" ["e"=1]
"facebookincubator/flowtorch" -> "nicola-decao/BNAF"
"facebookincubator/flowtorch" -> "gpapamak/maf"
"facebookincubator/flowtorch" -> "didriknielsen/survae_flows"
"facebookincubator/flowtorch" -> "karpathy/pytorch-normalizing-flows"
"openai/vdvae" -> "NVlabs/NVAE"
"openai/vdvae" -> "Rayhane-mamah/Efficient-VDVAE"
"openai/vdvae" -> "vlievin/biva-pytorch"
"openai/vdvae" -> "didriknielsen/survae_flows"
"openai/vdvae" -> "openai/distribution_augmentation"
"openai/vdvae" -> "addtt/ladder-vae-pytorch"
"openai/vdvae" -> "riannevdberg/sylvester-flows"
"openai/vdvae" -> "GlassyWing/nvae"
"openai/vdvae" -> "kamenbliznashki/normalizing_flows"
"openai/vdvae" -> "google-research/fitvid"
"openai/vdvae" -> "karpathy/pytorch-normalizing-flows"
"juntang-zhuang/TorchDiffEqPack" -> "juntang-zhuang/torch_ACA"
"karpathy/nn" -> "karpathy/optim"
"karpathy/nn" -> "karpathy/simple-amt"
"pietrobarbiero/logic_explained_networks" -> "pietrobarbiero/entropy-lens"
"HekpoMaH/algorithmic-concepts-reasoning" -> "jacobdeasy/geometric-js"
"wesselb/neuralprocesses" -> "cambridge-mlg/convcnp"
"wesselb/neuralprocesses" -> "wesselb/NeuralProcesses.jl"
"wesselb/neuralprocesses" -> "YannDubs/Neural-Process-Family"
"wesselb/neuralprocesses" -> "alan-turing-institute/deepsensor"
"karpathy/Random-Forest-Matlab" -> "karpathy/forestjs"
"karpathy/Random-Forest-Matlab" -> "karpathy/lifejs"
"karpathy/Random-Forest-Matlab" -> "karpathy/twoolpy"
"karpathy/Random-Forest-Matlab" -> "karpathy/notpygamejs"
"karpathy/Random-Forest-Matlab" -> "googleglass/mirror-quickstart-python"
"karpathy/Random-Forest-Matlab" -> "karpathy/scriptsbots"
"karpathy/Random-Forest-Matlab" -> "karpathy/researchpooler"
"karpathy/Random-Forest-Matlab" -> "karpathy/nn"
"karpathy/Random-Forest-Matlab" -> "karpathy/optim"
"karpathy/Random-Forest-Matlab" -> "karpathy/EigenLibSVM"
"tgcsaba/KSig" -> "tgcsaba/GPSig"
"karpathy/notpygamejs" -> "karpathy/lifejs"
"karpathy/notpygamejs" -> "Ramblurr/scriptbots"
"karpathy/notpygamejs" -> "karpathy/optim"
"karpathy/notpygamejs" -> "karpathy/sqlitedict"
"karpathy/notpygamejs" -> "karpathy/twoolpy"
"karpathy/notpygamejs" -> "JimAllanson/lifejs"
"ehoogeboom/convolution_exponential_and_sylvester" -> "ehoogeboom/emerging"
"karpathy/karpathy" -> "karpathy/optim"
"karpathy/karpathy" -> "karpathy/sqlitedict"
"crisbodnar/ndp" -> "a-norcliffe/sonode"
"crisbodnar/ndp" -> "jacobdeasy/geometric-js"
"jaekookang/invertible_neural_networks" -> "vislearn/analyzing_inverse_problems"
"karpathy/simple-amt" -> "karpathy/nn"
"karpathy/simple-amt" -> "karpathy/optim"
"karpathy/optim" -> "karpathy/nn"
"karpathy/optim" -> "karpathy/sqlitedict"
"1Konny/HVP" -> "GitGyun/multi_task_neural_processes"
"raminmh/liquid-s4" -> "raminmh/CfC"
"raminmh/liquid-s4" -> "raminmh/liquid_time_constant_networks"
"raminmh/liquid-s4" -> "lindermanlab/S5" ["e"=1]
"raminmh/liquid-s4" -> "kyegomez/LiqudNet"
"raminmh/liquid-s4" -> "mlech26l/ncps"
"raminmh/liquid-s4" -> "safipatel/LNN-cancer-classification"
"raminmh/liquid-s4" -> "kyegomez/LFM"
"raminmh/liquid-s4" -> "makramchahine/drone_causality"
"pnkraemer/tueplots" -> "bayesiains/nflows" ["e"=1]
"Jason2Brownlee/CleverAlgorithms" -> "clever-algorithms/CleverAlgorithmsMachineLearning" ["e"=1]
"dome272/VQGAN-pytorch" -> "MishaLaskin/vqvae" ["e"=1]
"dome272/VQGAN-pytorch" -> "ritheshkumar95/pytorch-vqvae" ["e"=1]
"dome272/VQGAN-pytorch" -> "rosinality/vq-vae-2-pytorch" ["e"=1]
"karpathy/lecun1989-repro" -> "karpathy/arxiv-sanity-lite"
"karpathy/lecun1989-repro" -> "karpathy/transformers"
"karpathy/lecun1989-repro" -> "karpathy/researchpooler"
"karpathy/lecun1989-repro" -> "karpathy/deep-vector-quantization"
"karpathy/lecun1989-repro" -> "karpathy/examples"
"karpathy/lecun1989-repro" -> "EurekaLabsAI/mlp" ["e"=1]
"karpathy/lecun1989-repro" -> "karpathy/cryptos"
"karpathy/lecun1989-repro" -> "karpathy/optim"
"karpathy/lecun1989-repro" -> "karpathy/randomfun"
"karpathy/lecun1989-repro" -> "karpathy/notpygamejs"
"karpathy/lecun1989-repro" -> "karpathy/makemore" ["e"=1]
"karpathy/lecun1989-repro" -> "EurekaLabsAI/micrograd" ["e"=1]
"karpathy/lecun1989-repro" -> "karpathy/ttmik"
"karpathy/lecun1989-repro" -> "karpathy/karpathy.github.io"
"karpathy/lecun1989-repro" -> "karpathy/karpathy"
"codeinthedark/editor" -> "rachelnicole/robokitty" ["e"=1]
"karpathy/randomfun" -> "karpathy/transformers"
"karpathy/randomfun" -> "karpathy/arxiv-sanity-lite"
"karpathy/randomfun" -> "karpathy/deep-vector-quantization"
"karpathy/randomfun" -> "karpathy/lecun1989-repro"
"karpathy/randomfun" -> "karpathy/examples"
"karpathy/randomfun" -> "karpathy/covid-sanity"
"karpathy/randomfun" -> "karpathy/karpathy.github.io"
"karpathy/randomfun" -> "karpathy/pytorch-normalizing-flows"
"karpathy/randomfun" -> "karpathy/makemore" ["e"=1]
"karpathy/randomfun" -> "karpathy/recurrentjs"
"karpathy/randomfun" -> "karpathy/notpygamejs"
"karpathy/randomfun" -> "openai/evolution-strategies-starter" ["e"=1]
"karpathy/randomfun" -> "karpathy/cryptos"
"karpathy/randomfun" -> "tysam-code/hlb-CIFAR10" ["e"=1]
"karpathy/randomfun" -> "karpathy/forestjs"
"davidADSP/Generative_Deep_Learning_2nd_Edition" -> "jmtomczak/intro_dgm" ["e"=1]
"probml/pml2-book" -> "jmtomczak/intro_dgm" ["e"=1]
"probml/pml2-book" -> "janosh/awesome-normalizing-flows" ["e"=1]
"karpathy/arxiv-sanity-preserver" -> "karpathy/arxiv-sanity-lite" ["e"=1]
"PrincetonVision/marvin" -> "Sohl-Dickstein/Sum-of-Functions-Optimizer" ["e"=1]
"PrincetonVision/marvin" -> "IoannisAntonoglou/optimBench" ["e"=1]
"lukasschwab/arxiv.py" -> "karpathy/arxiv-sanity-lite" ["e"=1]
"clementchadebec/benchmark_VAE" -> "AntixK/PyTorch-VAE" ["e"=1]
"clementchadebec/benchmark_VAE" -> "NVlabs/NVAE"
"clementchadebec/benchmark_VAE" -> "YannDubs/disentangling-vae"
"clementchadebec/benchmark_VAE" -> "google-research/disentanglement_lib"
"clementchadebec/benchmark_VAE" -> "janosh/awesome-normalizing-flows"
"clementchadebec/benchmark_VAE" -> "jmtomczak/intro_dgm"
"clementchadebec/benchmark_VAE" -> "rosinality/vq-vae-2-pytorch"
"clementchadebec/benchmark_VAE" -> "clementchadebec/pyraug"
"clementchadebec/benchmark_VAE" -> "VincentStimper/normalizing-flows"
"clementchadebec/benchmark_VAE" -> "lucidrains/vector-quantize-pytorch" ["e"=1]
"clementchadebec/benchmark_VAE" -> "matthewvowels1/Awesome-VAEs"
"clementchadebec/benchmark_VAE" -> "POSTECH-CVLab/PyTorch-StudioGAN" ["e"=1]
"clementchadebec/benchmark_VAE" -> "bayesiains/nflows"
"clementchadebec/benchmark_VAE" -> "atong01/conditional-flow-matching" ["e"=1]
"clementchadebec/benchmark_VAE" -> "openai/vdvae"
"harthur/kittydar" -> "girliemac/RPi-KittyCam"
"harthur/kittydar" -> "harthur/hog-descriptor"
"harthur/kittydar" -> "harthur/classifier" ["e"=1]
"harthur/kittydar" -> "sytelus/HackerNewsData"
"harthur/kittydar" -> "IoannisAntonoglou/optimBench"
"harthur/kittydar" -> "Sohl-Dickstein/Sum-of-Functions-Optimizer"
"yburda/iwae" -> "casperkaae/LVAE" ["e"=1]
"yburda/iwae" -> "ermongroup/Variational-Ladder-Autoencoder" ["e"=1]
"girliemac/RPi-KittyCam" -> "harthur/kittydar"
"girliemac/RPi-KittyCam" -> "rachelnicole/robokitty"
"SingleZombie/DL-Demos" -> "MishaLaskin/vqvae" ["e"=1]
"waylonflinn/weblas" -> "Sohl-Dickstein/Sum-of-Functions-Optimizer" ["e"=1]
"boschresearch/torchphysics" -> "DiffEqML/torchdyn" ["e"=1]
"rachelnicole/robokitty" -> "girliemac/RPi-KittyCam"
"microsoft/VQ-Diffusion" -> "rosinality/vq-vae-2-pytorch" ["e"=1]
"microsoft/VQ-Diffusion" -> "karpathy/deep-vector-quantization" ["e"=1]
"karpathy/arxiv-sanity-lite" -> "karpathy/arxiv-sanity-preserver" ["e"=1]
"karpathy/arxiv-sanity-lite" -> "karpathy/lecun1989-repro"
"karpathy/arxiv-sanity-lite" -> "karpathy/deep-vector-quantization"
"karpathy/arxiv-sanity-lite" -> "karpathy/randomfun"
"karpathy/arxiv-sanity-lite" -> "karpathy/cryptos"
"karpathy/arxiv-sanity-lite" -> "karpathy/ulogme"
"karpathy/arxiv-sanity-lite" -> "karpathy/makemore" ["e"=1]
"karpathy/arxiv-sanity-lite" -> "karpathy/researchpooler"
"karpathy/arxiv-sanity-lite" -> "karpathy/transformers"
"karpathy/arxiv-sanity-lite" -> "karpathy/covid-sanity"
"karpathy/arxiv-sanity-lite" -> "lukasschwab/arxiv.py" ["e"=1]
"karpathy/arxiv-sanity-lite" -> "tysam-code/hlb-CIFAR10" ["e"=1]
"karpathy/arxiv-sanity-lite" -> "karpathy/notpygamejs"
"karpathy/arxiv-sanity-lite" -> "google-deepmind/dm-haiku" ["e"=1]
"karpathy/arxiv-sanity-lite" -> "patrick-kidger/equinox" ["e"=1]
"cientgu/VQ-Diffusion" -> "MishaLaskin/vqvae" ["e"=1]
"sony/sqvae" -> "yukara-ikemiya/minimal-sqvae"
"harthur/hog-descriptor" -> "GhengopelALPHA/scriptbots"
"harthur/hog-descriptor" -> "cpbotha/mlabwrap-purepy"
"harthur/hog-descriptor" -> "storborg/glass-teardown"
"siemanko/tf-adversarial" -> "Sohl-Dickstein/Sum-of-Functions-Optimizer" ["e"=1]
"siemanko/tf-adversarial" -> "googleglass/mirror-quickstart-python" ["e"=1]
"mertyg/post-hoc-cbm" -> "mateoespinosa/cem" ["e"=1]
"karpathy/svmjs" -> "karpathy/forestjs"
"karpathy/svmjs" -> "nicolaspanel/node-svm"
"karpathy/svmjs" -> "karpathy/lifejs"
"karpathy/svmjs" -> "karpathy/researchpooler"
"karpathy/svmjs" -> "karpathy/twoolpy"
"karpathy/svmjs" -> "karpathy/notpygamejs"
"karpathy/svmjs" -> "karpathy/Random-Forest-Matlab"
"karpathy/svmjs" -> "karpathy/scriptsbots"
"karpathy/svmjs" -> "karpathy/recurrentjs"
"karpathy/svmjs" -> "harthur/hog-descriptor"
"karpathy/svmjs" -> "karpathy/researchlei"
"karpathy/svmjs" -> "karpathy/nn"
"karpathy/svmjs" -> "karpathy/reinforcejs"
"karpathy/svmjs" -> "bbabenko/simple_convnet"
"karpathy/svmjs" -> "googleglass/mirror-quickstart-python"
"karpathy/lifejs" -> "karpathy/notpygamejs"
"karpathy/lifejs" -> "karpathy/scriptsbots"
"karpathy/lifejs" -> "JimAllanson/lifejs"
"karpathy/lifejs" -> "karpathy/twoolpy"
"karpathy/lifejs" -> "Ramblurr/scriptbots"
"karpathy/lifejs" -> "karpathy/nn"
"karpathy/lifejs" -> "karpathy/optim"
"karpathy/lifejs" -> "karpathy/forestjs"
"karpathy/lifejs" -> "googleglass/mirror-quickstart-python"
"karpathy/lifejs" -> "storborg/glass-teardown"
"NVlabs/LSGM" -> "NVlabs/NVAE" ["e"=1]
"NVlabs/LSGM" -> "Rayhane-mamah/Efficient-VDVAE" ["e"=1]
"Rayhane-mamah/Efficient-VDVAE" -> "openai/vdvae"
"Rayhane-mamah/Efficient-VDVAE" -> "JohnnyYeeee/math_prog_synth_env"
"tung-nd/TNP-pytorch" -> "juho-lee/bnp"
"JimAllanson/lifejs" -> "karpathy/lifejs"
"JimAllanson/lifejs" -> "GhengopelALPHA/scriptbots"
"scienceai/tsne-js" -> "karpathy/tsnejs"
"scienceai/tsne-js" -> "PAIR-code/umap-js"
"GitGyun/multi_task_neural_processes" -> "GitGyun/chameleon"
"karpathy/makemore" -> "karpathy/cryptos" ["e"=1]
"karpathy/makemore" -> "karpathy/lecun1989-repro" ["e"=1]
"karpathy/makemore" -> "karpathy/arxiv-sanity-lite" ["e"=1]
"atong01/conditional-flow-matching" -> "DiffEqML/torchdyn" ["e"=1]
"atong01/conditional-flow-matching" -> "VincentStimper/normalizing-flows" ["e"=1]
"anh-tong/signax" -> "datasig-ac-uk/RoughPy"
"google-research/optformer" -> "automl/PFNs4BO" ["e"=1]
"google-research/optformer" -> "tung-nd/TNP-pytorch"
"google-research/optformer" -> "machinelearningnuremberg/HPO-B" ["e"=1]
"jluttine/tikz-bayesnet" -> "daft-dev/daft" ["e"=1]
"jluttine/tikz-bayesnet" -> "probtorch/probtorch"
"jluttine/tikz-bayesnet" -> "blei-lab/edward" ["e"=1]
"jluttine/tikz-bayesnet" -> "GPflow/GPflow" ["e"=1]
"jluttine/tikz-bayesnet" -> "dilinwang820/Stein-Variational-Gradient-Descent" ["e"=1]
"jluttine/tikz-bayesnet" -> "rlouf/mcx" ["e"=1]
"jluttine/tikz-bayesnet" -> "didriknielsen/survae_flows"
"jluttine/tikz-bayesnet" -> "bayesiains/nflows"
"jluttine/tikz-bayesnet" -> "PetarV-/TikZ" ["e"=1]
"jluttine/tikz-bayesnet" -> "enalisnick/stick-breaking_dgms" ["e"=1]
"jluttine/tikz-bayesnet" -> "jmtomczak/vae_vampprior"
"jluttine/tikz-bayesnet" -> "pyro-ppl/numpyro" ["e"=1]
"jluttine/tikz-bayesnet" -> "dpkingma/nips14-ssl" ["e"=1]
"jluttine/tikz-bayesnet" -> "AdamCobb/hamiltorch" ["e"=1]
"jluttine/tikz-bayesnet" -> "tolstikhin/wae"
"daft-dev/daft" -> "jluttine/tikz-bayesnet" ["e"=1]
"lindermanlab/S5" -> "raminmh/liquid-s4" ["e"=1]
"mlech26l/keras-ncp" -> "mlech26l/ncps"
"locuslab/torchdeq" -> "locuslab/deq-ddim"
"locuslab/torchdeq" -> "dgilton/deep_equilibrium_inverse"
"karpathy/transformers" -> "karpathy/optim"
"karpathy/transformers" -> "karpathy/notpygamejs"
"karpathy/transformers" -> "karpathy/karpathy"
"karpathy/transformers" -> "karpathy/researchpooler"
"karpathy/transformers" -> "karpathy/lifejs"
"karpathy/transformers" -> "karpathy/nn"
"karpathy/transformers" -> "karpathy/simple-amt"
"mateoespinosa/cem" -> "xmed-lab/ECBM"
"mateoespinosa/cem" -> "pietrobarbiero/pytorch_explain"
"probabilists/zuko" -> "bayesiains/nflows" ["e"=1]
"probabilists/zuko" -> "VincentStimper/normalizing-flows" ["e"=1]
"probabilists/zuko" -> "janosh/awesome-normalizing-flows" ["e"=1]
"probabilists/zuko" -> "facebookincubator/flowtorch" ["e"=1]
"andre-martins/TurboParser" -> "andre-martins/AD3"
"mattjj/svae" -> "ermongroup/Variational-Ladder-Autoencoder" ["e"=1]
"karpathy/forestjs" -> "karpathy/lifejs"
"karpathy/forestjs" -> "karpathy/svmjs"
"karpathy/forestjs" -> "karpathy/notpygamejs"
"karpathy/forestjs" -> "karpathy/Random-Forest-Matlab"
"karpathy/forestjs" -> "karpathy/scriptsbots"
"karpathy/forestjs" -> "karpathy/twoolpy"
"karpathy/forestjs" -> "bbabenko/simple_convnet"
"karpathy/forestjs" -> "googleglass/mirror-quickstart-python"
"karpathy/forestjs" -> "JimAllanson/lifejs"
"karpathy/forestjs" -> "Ramblurr/scriptbots"
"borisdayma/vit-vqgan" -> "GhengopelALPHA/scriptbots"
"borisdayma/vit-vqgan" -> "stevemayne/gplusblog"
"casperkaae/LVAE" -> "ermongroup/Variational-Ladder-Autoencoder"
"vdutor/neural-diffusion-processes" -> "cambridge-mlg/neural_diffusion_processes"
"bottler/iisignature" -> "patrick-kidger/Deep-Signature-Transforms"
"bottler/iisignature" -> "patrick-kidger/signatory"
"bottler/iisignature" -> "anh-tong/signax"
"bottler/iisignature" -> "datasig-ac-uk/esig"
"bottler/iisignature" -> "jambo6/generalised-signature-method"
"bottler/iisignature" -> "kormilitzin/the-signature-method-in-machine-learning"
"bottler/iisignature" -> "pafoster/path_signatures_introduction"
"jaanli/variational-autoencoder" -> "1Konny/Beta-VAE" ["e"=1]
"jaanli/variational-autoencoder" -> "matthewvowels1/Awesome-VAEs" ["e"=1]
"janhuenermann/neurojs" -> "karpathy/reinforcejs" ["e"=1]
"karpathy/paper-notes" -> "karpathy/tf-agent" ["e"=1]
"openai/pixel-cnn" -> "pclucas14/pixel-cnn-pp" ["e"=1]
"PetarV-/TikZ" -> "jluttine/tikz-bayesnet" ["e"=1]
"junyanz/CatPapers" -> "harthur/kittydar" ["e"=1]
"openai/InfoGAN" -> "JonathanRaiman/tensorflow-infogan" ["e"=1]
"openai/InfoGAN" -> "Natsu6767/InfoGAN-PyTorch" ["e"=1]
"safipatel/LNN-cancer-classification" -> "fg-research/lnn-sagemaker"
"safipatel/LNN-cancer-classification" -> "malcolmw/LTCNN"
"safipatel/LNN-cancer-classification" -> "makramchahine/drone_causality"
"safipatel/LNN-cancer-classification" -> "MMatulenko/LNN"
"safipatel/LNN-cancer-classification" -> "SeyedMuhammadHosseinMousavi/Liquid-Neural-Networks-LNNs-Classification"
"makramchahine/drone_causality" -> "makramchahine/rosetta_drone"
"makramchahine/drone_causality" -> "safipatel/LNN-cancer-classification"
"alan-turing-institute/deepsensor" -> "wesselb/neuralprocesses"
"openai/iaf" -> "jmtomczak/vae_vpflows" ["e"=1]
"openai/iaf" -> "ericjang/normalizing-flows-tutorial" ["e"=1]
"openai/iaf" -> "riannevdberg/sylvester-flows" ["e"=1]
"openai/iaf" -> "ermongroup/Variational-Ladder-Autoencoder" ["e"=1]
"openai/iaf" -> "jmtomczak/vae_vampprior" ["e"=1]
"buriburisuri/supervised_infogan" -> "JonathanRaiman/tensorflow-infogan" ["e"=1]
"datasig-ac-uk/RoughPy" -> "anh-tong/signax"
"princeton-computational-imaging/Delta-Prox" -> "dgilton/deep_equilibrium_inverse"
"karpathy/tf-agent" -> "karpathy/optim"
"karpathy/tf-agent" -> "karpathy/twoolpy"
"karpathy/tf-agent" -> "karpathy/nn"
"JonathanRaiman/tensorflow-infogan" -> "buriburisuri/supervised_infogan" ["e"=1]
"JonathanRaiman/tensorflow-infogan" -> "openai/InfoGAN" ["e"=1]
"JonathanRaiman/tensorflow-infogan" -> "pianomania/infoGAN-pytorch"
"fg-research/lnn-sagemaker" -> "SeyedMuhammadHosseinMousavi/Liquid-Neural-Networks-LNNs-Classification"
"fg-research/lnn-sagemaker" -> "safipatel/LNN-cancer-classification"
"ericjang/gumbel-softmax" -> "ermongroup/Variational-Ladder-Autoencoder" ["e"=1]
"ericjang/gumbel-softmax" -> "hiwonjoon/tf-vqvae" ["e"=1]
"ericjang/gumbel-softmax" -> "Schlumberger/joint-vae" ["e"=1]
"ericjang/gumbel-softmax" -> "harvardnlp/TextFlow" ["e"=1]
"PythonOT/POT" -> "rtqichen/torchdiffeq" ["e"=1]
"pytorch/tnt" -> "probtorch/probtorch" ["e"=1]
"ermongroup/cs228-notes" -> "deepgenerativemodels/notes" ["e"=1]
"pyprob/pyprob" -> "pyprob/ppx"
"pyprob/pyprob" -> "probtorch/probtorch"
"pyprob/pyprob" -> "amzn/MXFusion"
"pyprob/pyprob" -> "hongseok-yang/probprog18"
"pyprob/pyprob" -> "ColCarroll/minimc" ["e"=1]
"pyprob/pyprob" -> "pyro-ppl/funsor" ["e"=1]
"pyprob/pyprob" -> "rlouf/mcx" ["e"=1]
"pyprob/pyprob" -> "probprog/pyprob"
"pyprob/pyprob" -> "elfi-dev/elfi" ["e"=1]
"pyprob/pyprob" -> "madminer-tool/madminer" ["e"=1]
"anantzoid/Conditional-PixelCNN-decoder" -> "jzbontar/pixelcnn-pytorch" ["e"=1]
"anantzoid/Conditional-PixelCNN-decoder" -> "hiwonjoon/tf-vqvae" ["e"=1]
"anantzoid/Conditional-PixelCNN-decoder" -> "igul222/PixelVAE" ["e"=1]
"igul222/PixelVAE" -> "ermongroup/Generalized-PixelVAE"
"igul222/PixelVAE" -> "pbloem/pixel-models"
"RuiShu/vae-clustering" -> "ermongroup/Variational-Ladder-Autoencoder" ["e"=1]
"RuiShu/vae-clustering" -> "ananyahjha93/multi-level-vae" ["e"=1]
"miyosuda/disentangled_vae" -> "1Konny/Beta-VAE"
"miyosuda/disentangled_vae" -> "1Konny/FactorVAE"
"miyosuda/disentangled_vae" -> "google-deepmind/dsprites-dataset"
"miyosuda/disentangled_vae" -> "rtqichen/beta-tcvae"
"miyosuda/disentangled_vae" -> "ermongroup/Variational-Ladder-Autoencoder"
"miyosuda/disentangled_vae" -> "sootlasten/beta-vae"
"jmtomczak/vae_householder_flow" -> "jmtomczak/vae_vpflows"
"locuslab/optnet" -> "locuslab/deq" ["e"=1]
"PrajitR/fast-pixel-cnn" -> "pclucas14/pixel-cnn-pp" ["e"=1]
"PrajitR/fast-pixel-cnn" -> "kkleidal/GatedPixelCNNPyTorch" ["e"=1]
"ermongroup/Generalized-PixelVAE" -> "igul222/PixelVAE"
"Decentralised-AI/LFM-Liquid-AI-Liquid-Foundation-Models" -> "kyegomez/LFM"
"pianomania/infoGAN-pytorch" -> "Natsu6767/InfoGAN-PyTorch"
"pianomania/infoGAN-pytorch" -> "taeoh-kim/Pytorch_InfoGAN"
"pianomania/infoGAN-pytorch" -> "JonathanRaiman/tensorflow-infogan"
"HusseinJammal/Liquid-Neural-Networks-in-Stock-Market-Prediction" -> "fg-research/lnn-sagemaker"
"ermongroup/Variational-Ladder-Autoencoder" -> "casperkaae/LVAE"
"ermongroup/Variational-Ladder-Autoencoder" -> "ermongroup/Sequential-Variational-Autoencoder"
"ermongroup/Variational-Ladder-Autoencoder" -> "jmtomczak/vae_vampprior"
"ermongroup/Variational-Ladder-Autoencoder" -> "addtt/ladder-vae-pytorch"
"ermongroup/Variational-Ladder-Autoencoder" -> "ermongroup/Generalized-PixelVAE"
"ermongroup/Variational-Ladder-Autoencoder" -> "yburda/iwae" ["e"=1]
"ermongroup/Variational-Ladder-Autoencoder" -> "ShengjiaZhao/MMD-Variational-Autoencoder" ["e"=1]
"ermongroup/Variational-Ladder-Autoencoder" -> "vlievin/biva-pytorch"
"ermongroup/Variational-Ladder-Autoencoder" -> "miyosuda/disentangled_vae"
"ermongroup/Variational-Ladder-Autoencoder" -> "openai/iaf" ["e"=1]
"ermongroup/Variational-Ladder-Autoencoder" -> "harvardnlp/sa-vae" ["e"=1]
"kyegomez/LFM" -> "Decentralised-AI/LFM-Liquid-AI-Liquid-Foundation-Models"
"ermongroup/Sequential-Variational-Autoencoder" -> "ermongroup/Generalized-PixelVAE"
"ermongroup/Sequential-Variational-Autoencoder" -> "ermongroup/Variational-Ladder-Autoencoder"
"pyro-ppl/pyro" -> "rtqichen/torchdiffeq" ["e"=1]
"cornellius-gp/gpytorch" -> "rtqichen/torchdiffeq" ["e"=1]
"locuslab/pytorch_fft" -> "jhjacobsen/pytorch-i-revnet" ["e"=1]
"jakezhaojb/ARAE" -> "schelotto/Wasserstein-AutoEncoders" ["e"=1]
"CuriousAI/mean-teacher" -> "wohlert/semi-supervised-pytorch" ["e"=1]
"Naresh1318/Adversarial_Autoencoder" -> "tolstikhin/wae" ["e"=1]
"gpapamak/maf" -> "kamenbliznashki/normalizing_flows"
"gpapamak/maf" -> "CW-Huang/NAF"
"gpapamak/maf" -> "ericjang/normalizing-flows-tutorial"
"gpapamak/maf" -> "bayesiains/nsf" ["e"=1]
"gpapamak/maf" -> "mgermain/MADE"
"gpapamak/maf" -> "LukasRinder/normalizing-flows"
"gpapamak/maf" -> "aravindsrinivas/flowpp"
"gpapamak/maf" -> "ikostrikov/pytorch-flows"
"gpapamak/maf" -> "ex4sperans/variational-inference-with-normalizing-flows"
"gpapamak/maf" -> "didriknielsen/survae_flows"
"gpapamak/maf" -> "TrentBrick/PyTorchDiscreteFlows"
"gpapamak/maf" -> "rtqichen/ffjord"
"gpapamak/maf" -> "karpathy/pytorch-made"
"gpapamak/maf" -> "chrischute/real-nvp"
"gpapamak/maf" -> "tonyduan/normalizing-flows"
"kormilitzin/the-signature-method-in-machine-learning" -> "bottler/iisignature"
"kormilitzin/the-signature-method-in-machine-learning" -> "patrick-kidger/Deep-Signature-Transforms"
"google-deepmind/dsprites-dataset" -> "google-deepmind/3d-shapes"
"google-deepmind/dsprites-dataset" -> "rtqichen/beta-tcvae"
"google-deepmind/dsprites-dataset" -> "google-research/disentanglement_lib"
"google-deepmind/dsprites-dataset" -> "miyosuda/disentangled_vae"
"google-deepmind/dsprites-dataset" -> "YannDubs/disentangling-vae"
"google-deepmind/dsprites-dataset" -> "rr-learning/disentanglement_dataset"
"google-deepmind/dsprites-dataset" -> "1Konny/FactorVAE"
"google-deepmind/dsprites-dataset" -> "1Konny/Beta-VAE"
"google-deepmind/dsprites-dataset" -> "amir-abdi/disentanglement-pytorch"
"google-deepmind/dsprites-dataset" -> "Schlumberger/joint-vae"
"google-deepmind/dsprites-dataset" -> "google-deepmind/multi_object_datasets" ["e"=1]
"google-deepmind/dsprites-dataset" -> "sootlasten/disentangled-representation-papers" ["e"=1]
"google-deepmind/dsprites-dataset" -> "facebookresearch/clevr-dataset-gen" ["e"=1]
"google-deepmind/dsprites-dataset" -> "daib13/TwoStageVAE"
"google-deepmind/dsprites-dataset" -> "cianeastwood/qedr"
"ethanluoyc/pytorch-vae" -> "1Konny/Beta-VAE" ["e"=1]
"ethanluoyc/pytorch-vae" -> "1Konny/FactorVAE" ["e"=1]
"ethanluoyc/pytorch-vae" -> "miyosuda/disentangled_vae" ["e"=1]
"ethanluoyc/pytorch-vae" -> "schelotto/Wasserstein-AutoEncoders" ["e"=1]
"ethanluoyc/pytorch-vae" -> "nadavbh12/VQ-VAE" ["e"=1]
"ethanluoyc/pytorch-vae" -> "ritheshkumar95/pytorch-vqvae" ["e"=1]
"llSourcell/Convolutional_neural_network" -> "llSourcell/Neural_Differential_Equations" ["e"=1]
"renmengye/revnet-public" -> "jhjacobsen/pytorch-i-revnet" ["e"=1]
"renmengye/revnet-public" -> "tbung/pytorch-revnet" ["e"=1]
"facebookresearch/clevr-dataset-gen" -> "google-deepmind/dsprites-dataset" ["e"=1]
"pleonard212/pix-plot" -> "PAIR-code/umap-js" ["e"=1]
"karpathy/researchlei" -> "karpathy/scholaroctopus"
"karpathy/researchlei" -> "karpathy/researchpooler"
"karpathy/researchlei" -> "karpathy/MatlabWrapper"
"karpathy/researchlei" -> "karpathy/sqlitedict"
"jmtomczak/vae_vampprior" -> "riannevdberg/sylvester-flows"
"jmtomczak/vae_vampprior" -> "jmtomczak/vae_vpflows"
"jmtomczak/vae_vampprior" -> "xqding/Importance_Weighted_Autoencoders" ["e"=1]
"jmtomczak/vae_vampprior" -> "vlievin/biva-pytorch"
"jmtomczak/vae_vampprior" -> "ermongroup/Variational-Ladder-Autoencoder"
"jmtomczak/vae_vampprior" -> "CW-Huang/NAF"
"jmtomczak/vae_vampprior" -> "casperkaae/LVAE"
"jmtomczak/vae_vampprior" -> "tolstikhin/wae"
"jmtomczak/vae_vampprior" -> "jmtomczak/vae_householder_flow"
"wearscript/wearscript-android" -> "GhengopelALPHA/scriptbots"
"wearscript/wearscript-android" -> "cpbotha/mlabwrap-purepy"
"wearscript/wearscript-android" -> "storborg/glass-teardown"
"googleglass/mirror-quickstart-python" -> "cpbotha/mlabwrap-purepy"
"googleglass/mirror-quickstart-python" -> "stevemayne/gplusblog"
"googleglass/mirror-quickstart-python" -> "bbabenko/simple_convnet"
"googleglass/mirror-quickstart-python" -> "GhengopelALPHA/scriptbots"
"jzbontar/pixelcnn-pytorch" -> "pclucas14/pixel-cnn-pp"
"jzbontar/pixelcnn-pytorch" -> "kkleidal/GatedPixelCNNPyTorch"
"jzbontar/pixelcnn-pytorch" -> "singh-hrituraj/PixelCNN-Pytorch"
"jmtomczak/vae_vpflows" -> "kefirski/bdir_vae"
"jmtomczak/vae_vpflows" -> "jmtomczak/vae_householder_flow"
"google-research/arxiv-latex-cleaner" ["l"="-3.827,23.607", "c"=827]
"rtqichen/torchdiffeq" ["l"="22.907,14.56"]
"nomic-ai/deepscatter" ["l"="43.37,24.603", "c"=95]
"PAIR-code/scatter-gl" ["l"="23.583,14.361"]
"PAIR-code/umap-js" ["l"="23.549,14.362"]
"rosinality/vq-vae-2-pytorch" ["l"="23.162,14.311"]
"ritheshkumar95/pytorch-vqvae" ["l"="23.171,14.269"]
"zalandoresearch/pytorch-vq-vae" ["l"="23.144,14.265"]
"nadavbh12/VQ-VAE" ["l"="23.154,14.287"]
"MishaLaskin/vqvae" ["l"="23.192,14.291"]
"CompVis/taming-transformers" ["l"="45.914,31.524", "c"=605]
"AntixK/PyTorch-VAE" ["l"="45.877,31.629", "c"=605]
"lucidrains/vector-quantize-pytorch" ["l"="38.599,2.021", "c"=54]
"NVlabs/NVAE" ["l"="23.094,14.379"]
"rosinality/stylegan2-pytorch" ["l"="44.932,30.615", "c"=243]
"ajbrock/BigGAN-PyTorch" ["l"="45.825,29.003", "c"=170]
"microsoft/VQ-Diffusion" ["l"="45.911,31.562", "c"=605]
"rosinality/style-based-gan-pytorch" ["l"="45.86,28.946", "c"=170]
"vvvm23/vqvae-2" ["l"="23.221,14.278"]
"openai/guided-diffusion" ["l"="45.813,31.534", "c"=605]
"mseitzer/pytorch-fid" ["l"="45.808,31.452", "c"=605]
"PAIR-code/understanding-umap" ["l"="23.605,14.354"]
"saehm/DruidJS" ["l"="43.317,24.759", "c"=95]
"scienceai/tsne-js" ["l"="23.521,14.366"]
"karpathy/tsnejs" ["l"="23.469,14.372"]
"karpathy/convnetjs" ["l"="-32.667,-35.895", "c"=1115]
"karpathy/reinforcejs" ["l"="23.459,14.409"]
"patrick-kidger/Deep-Signature-Transforms" ["l"="22.933,14.751"]
"patrick-kidger/signatory" ["l"="22.919,14.72"]
"bottler/iisignature" ["l"="22.919,14.764"]
"jambo6/generalised-signature-method" ["l"="22.944,14.762"]
"kormilitzin/the-signature-method-in-machine-learning" ["l"="22.931,14.775"]
"crispitagorico/sigkernel" ["l"="22.889,14.756"]
"anh-tong/signax" ["l"="22.904,14.753"]
"datasig-ac-uk/esig" ["l"="22.916,14.745"]
"jambo6/neuralRDEs" ["l"="22.937,14.677"]
"SigCGANs/Conditional-Sig-Wasserstein-GANs" ["l"="-9.794,12.867", "c"=105]
"patrick-kidger/torchcde" ["l"="22.923,14.633"]
"tgcsaba/GPSig" ["l"="22.889,14.772"]
"patrick-kidger/NeuralCDE" ["l"="22.939,14.627"]
"imanolperez/market_simulator" ["l"="-9.837,12.906", "c"=105]
"datasig-ac-uk/RoughPy" ["l"="22.899,14.738"]
"datasig-ac-uk/signature_applications" ["l"="22.883,14.735"]
"google-deepmind/mathematics_dataset" ["l"="37.438,-0.204", "c"=126]
"google-deepmind/neural-processes" ["l"="23.104,14.66"]
"google-research/disentanglement_lib" ["l"="23.031,14.283"]
"sootlasten/disentangled-representation-papers" ["l"="23.621,14.89", "c"=728]
"YannDubs/disentangling-vae" ["l"="23.073,14.285"]
"google-deepmind/dsprites-dataset" ["l"="23.028,14.255"]
"rtqichen/beta-tcvae" ["l"="23.056,14.247"]
"amir-abdi/disentanglement-pytorch" ["l"="23.039,14.243"]
"1Konny/Beta-VAE" ["l"="23.07,14.259"]
"1Konny/FactorVAE" ["l"="23.048,14.259"]
"Schlumberger/joint-vae" ["l"="23.05,14.274"]
"rr-learning/disentanglement_dataset" ["l"="23.033,14.222"]
"google/compare_gan" ["l"="45.858,29.039", "c"=170]
"bayesiains/nsf" ["l"="23.608,14.889", "c"=728]
"kimhc6028/relational-networks" ["l"="23.489,14.801", "c"=728]
"matthewvowels1/Awesome-VAEs" ["l"="23.066,14.339"]
"ethanfetaya/NRI" ["l"="23.548,14.796", "c"=728]
"rdevon/DIM" ["l"="53.192,29.652", "c"=547]
"DiffEqML/torchdyn" ["l"="22.895,14.587"]
"Zymrael/awesome-neural-ode" ["l"="22.923,14.585"]
"rtqichen/ffjord" ["l"="22.999,14.516"]
"google-research/torchsde" ["l"="22.953,14.571"]
"msurtsukov/neural-ode" ["l"="22.907,14.607"]
"patrick-kidger/diffrax" ["l"="21.779,14.095", "c"=267]
"cornellius-gp/gpytorch" ["l"="45.783,26.104", "c"=68]
"YuliaRubanova/latent_ode" ["l"="22.924,14.609"]
"pyro-ppl/pyro" ["l"="45.709,26.076", "c"=68]
"EmilienDupont/augmented-neural-odes" ["l"="22.944,14.6"]
"HIPS/autograd" ["l"="45.729,26.037", "c"=68]
"lululxvi/deepxde" ["l"="21.758,15.917", "c"=516]
"atong01/conditional-flow-matching" ["l"="46.345,30.497", "c"=367]
"arogozhnikov/einops" ["l"="50.9,29.579", "c"=83]
"epfml/OptML_course" ["l"="21.472,13.818", "c"=267]
"janosh/awesome-normalizing-flows" ["l"="23.049,14.495"]
"dynamicslab/pysindy" ["l"="21.783,15.81", "c"=516]
"jiacheng-xu/vmf_vae_nlp" ["l"="57.695,29.368", "c"=1082]
"nicola-decao/s-vae-pytorch" ["l"="23.093,14.267"]
"bojone/vae" ["l"="46.174,29.286", "c"=170]
"bojone/flow" ["l"="23.109,14.467"]
"openai/glow" ["l"="45.798,29.058", "c"=170]
"chaiyujin/glow-pytorch" ["l"="23.007,14.469"]
"rosinality/glow-pytorch" ["l"="23.049,14.465"]
"nicola-decao/s-vae-tf" ["l"="23.099,14.2"]
"pimdh/lie-vae" ["l"="22.048,13.394", "c"=344]
"riannevdberg/sylvester-flows" ["l"="23.066,14.408"]
"emilemathieu/pvae" ["l"="21.277,14.087", "c"=267]
"jmtomczak/vae_vampprior" ["l"="23.063,14.311"]
"jxhe/vae-lagging-encoder" ["l"="57.691,29.389", "c"=1082]
"nicola-decao/power_spherical" ["l"="23.124,14.214"]
"arxiv-vanity/arxiv-vanity" ["l"="-4.345,21.994", "c"=276]
"karpathy/arxiv-sanity-lite" ["l"="23.301,14.35"]
"chiphuyen/sotawhat" ["l"="48.235,26.359", "c"=323]
"ikostrikov/pytorch-flows" ["l"="23.076,14.457"]
"facebookresearch/nevergrad" ["l"="45.711,26.14", "c"=68]
"google/neural-tangents" ["l"="21.667,13.957", "c"=267]
"dome272/VQGAN-pytorch" ["l"="46.564,30.581", "c"=367]
"cientgu/VQ-Diffusion" ["l"="46.573,30.538", "c"=367]
"karpathy/deep-vector-quantization" ["l"="23.256,14.34"]
"ermongroup/ddim" ["l"="45.709,31.569", "c"=605]
"LTH14/mar" ["l"="46.402,30.601", "c"=367]
"dataflowr/notebooks" ["l"="50.603,28.38", "c"=104]
"jmtomczak/intro_dgm" ["l"="23.009,14.419"]
"y0ast/Glow-PyTorch" ["l"="23.026,14.457"]
"kamenbliznashki/normalizing_flows" ["l"="23.059,14.447"]
"chrischute/real-nvp" ["l"="23.039,14.454"]
"rtqichen/residual-flows" ["l"="23.033,14.475"]
"chrischute/glow" ["l"="22.994,14.457"]
"jhjacobsen/invertible-resnet" ["l"="23.021,14.489"]
"shirleyzhu233/realNVP" ["l"="22.978,14.425"]
"bayesiains/nflows" ["l"="23.062,14.479"]
"karpathy/pytorch-normalizing-flows" ["l"="23.106,14.441"]
"VincentStimper/normalizing-flows" ["l"="23.077,14.484"]
"andreas128/SRFlow" ["l"="-35.083,21.481", "c"=127]
"karpathy/pytorch-made" ["l"="23.181,14.414"]
"mgermain/MADE" ["l"="23.155,14.443"]
"gpapamak/maf" ["l"="23.087,14.447"]
"karpathy/find-birds" ["l"="23.334,14.366"]
"ericjang/normalizing-flows-tutorial" ["l"="23.066,14.424"]
"nicola-decao/BNAF" ["l"="23.092,14.434"]
"karpathy/examples" ["l"="23.35,14.368"]
"ANLGBOY/MADE-with-PyTorch" ["l"="23.212,14.436"]
"ptrblck/prog_gans_pytorch_inference" ["l"="45.958,28.933", "c"=170]
"CW-Huang/NAF" ["l"="23.109,14.413"]
"jzbontar/pixelcnn-pytorch" ["l"="23.184,14.361"]
"karpathy/ulogme" ["l"="23.345,14.401"]
"selfspy/selfspy" ["l"="25.342,-26.41", "c"=32]
"Naereen/uLogMe" ["l"="23.354,14.445"]
"karpathy/karpathy.github.io" ["l"="23.324,14.399"]
"karpathy/researchlei" ["l"="23.395,14.365"]
"karpathy/notpygamejs" ["l"="23.368,14.349"]
"rejuvyesh/arbtt-graph" ["l"="25.226,-26.502", "c"=32]
"karpathy/cryptos" ["l"="23.286,14.387"]
"karpathy/gitstats" ["l"="23.385,14.438"]
"karpathy/paper-notes" ["l"="46.054,27.765", "c"=277]
"sourcegraph/thyme" ["l"="3.96,-8.063", "c"=0]
"karpathy/forestjs" ["l"="23.415,14.357"]
"karpathy/recurrentjs" ["l"="23.411,14.391"]
"colah/colah.github.io" ["l"="23.375,14.482"]
"colah/Conv-Nets-Series" ["l"="23.429,14.538"]
"facebookarchive/bAbI-tasks" ["l"="46.088,27.824", "c"=277]
"soumith/convnet-benchmarks" ["l"="47.812,29.023", "c"=89]
"Ranlot/single-parameter-fit" ["l"="22.75,14.497"]
"dragonfly/dragonfly" ["l"="45.869,26.212", "c"=68]
"greydanus/hamiltonian-nn" ["l"="22.849,14.546"]
"harthur/clustering" ["l"="23.537,14.42"]
"harthur/classifier" ["l"="-32.606,-36.011", "c"=1115]
"uhho/density-clustering" ["l"="23.592,14.439"]
"nicolaspanel/node-svm" ["l"="23.497,14.391"]
"Philmod/node-kmeans" ["l"="23.561,14.454"]
"loudinthecloud/pytorch-ntm" ["l"="46.128,27.938", "c"=277]
"jhjacobsen/pytorch-i-revnet" ["l"="22.992,14.491"]
"upphiminn/jDBSCAN" ["l"="23.622,14.439"]
"solzimer/skmeans" ["l"="23.625,14.467"]
"tonyduan/normalizing-flows" ["l"="23.072,14.439"]
"didriknielsen/survae_flows" ["l"="23.063,14.46"]
"karpathy/optim" ["l"="23.36,14.343"]
"karpathy/tf-agent" ["l"="23.361,14.318"]
"karpathy/twoolpy" ["l"="23.396,14.328"]
"karpathy/covid-sanity" ["l"="23.338,14.333"]
"vislearn/FrEIA" ["l"="23.063,14.52"]
"vislearn/analyzing_inverse_problems" ["l"="23.103,14.568"]
"vislearn/conditional_INNs" ["l"="23.083,14.568"]
"gudovskiy/cflow-ad" ["l"="53.361,14.17", "c"=669]
"pkuxmq/Invertible-Image-Rescaling" ["l"="-35.114,21.527", "c"=127]
"gathierry/FastFlow" ["l"="53.372,14.163", "c"=669]
"marco-rudolph/differnet" ["l"="53.371,14.131", "c"=669]
"openai/sparse_attention" ["l"="48.822,33.923", "c"=556]
"openai/distribution_augmentation" ["l"="23.206,14.41"]
"google-deepmind/3d-shapes" ["l"="23.018,14.23"]
"paruby/DIP-VAE" ["l"="22.994,14.202"]
"cianeastwood/qedr" ["l"="23.018,14.211"]
"kefirski/bdir_vae" ["l"="23.12,14.353"]
"jmtomczak/vae_vpflows" ["l"="23.102,14.343"]
"sbaurdlp/keras-iaf-mnist" ["l"="23.148,14.343"]
"abdulfatir/normalizing-flows" ["l"="23.038,14.432"]
"ex4sperans/variational-inference-with-normalizing-flows" ["l"="23.085,14.423"]
"openai/iaf" ["l"="46.004,29.288", "c"=170]
"LukasRinder/normalizing-flows" ["l"="23.05,14.417"]
"PolinaKirichenko/flows_ood" ["l"="23.032,14.419"]
"taesungp/real-nvp" ["l"="23.083,14.36"]
"acids-ircam/pytorch_flows" ["l"="23.049,14.398"]
"aravindsrinivas/flowpp" ["l"="23.055,14.434"]
"senya-ashukha/real-nvp-pytorch" ["l"="22.994,14.442"]
"paultsw/nice_pytorch" ["l"="23.102,14.486"]
"miyosuda/disentangled_vae" ["l"="23.059,14.232"]
"ananyahjha93/cycle-consistent-vae" ["l"="23.076,14.163"]
"daib13/TwoStageVAE" ["l"="23.079,14.246"]
"hiwonjoon/tf-vqvae" ["l"="23.181,14.237"]
"swasun/VQ-VAE-Speech" ["l"="37.356,2.663", "c"=117]
"nakosung/VQ-VAE" ["l"="23.198,14.222"]
"1Konny/VQ-VAE" ["l"="23.158,14.239"]
"pclucas14/pytorch-glow" ["l"="22.936,14.442"]
"corenel/pytorch-glow" ["l"="22.954,14.45"]
"openai/ebm_code_release" ["l"="45.509,31.632", "c"=605]
"MCG-NKU/CmCode" ["l"="47.658,35.196", "c"=695]
"torrvision/Objectness" ["l"="23.48,14.219"]
"nmichlo/disent" ["l"="23.055,14.214"]
"clementchadebec/benchmark_VAE" ["l"="23.056,14.368"]
"thunil/Physics-Based-Deep-Learning" ["l"="21.708,15.89", "c"=516]
"junku901/machine_learning" ["l"="-32.611,-35.949", "c"=1115]
"jacobjinkelly/easy-neural-ode" ["l"="22.973,14.608"]
"NeuroDiffGym/neurodiffeq" ["l"="21.759,15.948", "c"=516]
"2prime/ODE-DL" ["l"="21.864,16.129", "c"=516]
"pdebench/PDEBench" ["l"="21.792,15.907", "c"=516]
"Zymrael/gde" ["l"="52.52,17.255", "c"=815]
"ctallec/pyvarinf" ["l"="22.366,15.284", "c"=977]
"probtorch/probtorch" ["l"="23.001,14.332"]
"bhpfelix/Variational-Autoencoder-PyTorch" ["l"="46.297,29.341", "c"=170]
"iffsid/disentangling-disentanglement" ["l"="23.004,14.246"]
"AIcrowd/neurips2019_disentanglement_challenge_starter_kit" ["l"="23.035,14.203"]
"ethanluoyc/pytorch-vae" ["l"="46.235,29.334", "c"=170]
"edebrouwer/gru_ode_bayes" ["l"="22.919,14.659"]
"mlech26l/ode-lstms" ["l"="22.886,14.677"]
"PeterChe1990/GRU-D" ["l"="45.206,26.76", "c"=68]
"boschresearch/Continuous-Recurrent-Units" ["l"="45.267,24.701", "c"=166]
"bighuang624/DSANet" ["l"="44.9,24.222", "c"=166]
"zhiyongc/GRU-D" ["l"="45.223,26.764", "c"=68]
"freelunchtheorem/Conditional_Density_Estimation" ["l"="22.037,14.438", "c"=267]
"manzilzaheer/DeepSets" ["l"="23.172,14.871"]
"yassersouri/pytorch-deep-sets" ["l"="23.155,14.859"]
"juho-lee/set_transformer" ["l"="23.153,14.826"]
"dpernes/deepsets-digitsum" ["l"="23.165,14.9"]
"Cyanogenoid/dspn" ["l"="23.199,14.862"]
"giannisnik/repset" ["l"="23.188,14.9"]
"TropComplique/set-transformer" ["l"="23.13,14.844"]
"lucidrains/slot-attention" ["l"="48.903,32.43", "c"=300]
"phanideepgampa/stacked-capsule-networks" ["l"="51.027,33.308", "c"=314]
"deep-spin/entmax" ["l"="23.198,14.956"]
"sjhwang82/AdvancedML" ["l"="-5.047,-23.358", "c"=164]
"arrigonialberto86/set_transformer" ["l"="23.184,14.834"]
"juho-lee/bnp" ["l"="23.148,14.782"]
"lucidrains/perceiver-pytorch" ["l"="48.859,33.923", "c"=556]
"EmilienDupont/neural-processes" ["l"="23.092,14.701"]
"jw9730/setvae" ["l"="23.13,14.866"]
"tristandeleu/pytorch-meta" ["l"="57.81,19.398", "c"=433]
"jariasf/GMVAE" ["l"="53.135,29.858", "c"=547]
"timbmg/VAE-CVAE-MNIST" ["l"="46.233,29.354", "c"=170]
"williamFalcon/test-tube" ["l"="51.131,29.717", "c"=83]
"deepgenerativemodels/notes" ["l"="23.015,14.441"]
"Subhajit135/CS236_DGM" ["l"="22.919,14.41"]
"ermongroup/cs228-notes" ["l"="45.817,26.067", "c"=68]
"rll/deepul" ["l"="23.642,14.918", "c"=728]
"tengyuma/cs229m_notes" ["l"="22.283,15.199", "c"=977]
"paperswithcode/releasing-research-code" ["l"="-3.828,23.492", "c"=827]
"ermongroup/ncsn" ["l"="45.611,31.599", "c"=605]
"Rachnog/Neural-ODE-Experiments" ["l"="22.903,14.637"]
"llSourcell/Neural_Differential_Equations" ["l"="22.882,14.641"]
"JSeam2/Neural-Ordinary-Differential-Equations" ["l"="22.858,14.633"]
"titu1994/tfdiffeq" ["l"="22.885,14.619"]
"facebookresearch/adaptive-span" ["l"="48.781,33.928", "c"=556]
"hsinyilin19/ResNetVAE" ["l"="46.378,29.393", "c"=170]
"YannDubs/Neural-Process-Family" ["l"="23.123,14.729"]
"soobinseo/Attentive-Neural-Process" ["l"="23.09,14.718"]
"cambridge-mlg/convcnp" ["l"="23.126,14.709"]
"geniki/neural-processes" ["l"="23.12,14.687"]
"kasparmartens/NeuralProcesses" ["l"="23.138,14.672"]
"wassname/attentive-neural-processes" ["l"="23.109,14.715"]
"crisbodnar/ndp" ["l"="23.046,14.7"]
"AMLab-Amsterdam/FNP" ["l"="23.109,14.698"]
"wesselb/NeuralProcesses.jl" ["l"="23.138,14.701"]
"GPflow/GPflow" ["l"="45.874,26.135", "c"=68]
"Natsu6767/InfoGAN-PyTorch" ["l"="23.015,14.171"]
"pianomania/infoGAN-pytorch" ["l"="22.997,14.111"]
"openai/InfoGAN" ["l"="45.954,29.255", "c"=170]
"taeoh-kim/Pytorch_InfoGAN" ["l"="23.012,14.126"]
"raahii/infogan-pytorch" ["l"="23.005,14.145"]
"fjxmlzn/InfoGAN-CR" ["l"="22.985,14.142"]
"unixpickle/vq-vae-2" ["l"="23.167,14.202"]
"sony/sqvae" ["l"="23.239,14.257"]
"hrbigelow/ae-wavenet" ["l"="37.381,2.69", "c"=117]
"pclucas14/pixel-cnn-pp" ["l"="23.119,14.369"]
"ldeecke/gmm-torch" ["l"="46.391,8.018", "c"=148]
"bayesnet/bnt" ["l"="39.39,35.983", "c"=714]
"jluttine/tikz-bayesnet" ["l"="22.99,14.362"]
"wohlert/semi-supervised-pytorch" ["l"="23.035,14.311"]
"dpkingma/nips14-ssl" ["l"="45.021,27.691", "c"=789]
"saemundsson/semisupervised_vae" ["l"="45.066,27.69", "c"=789]
"CuriousAI/mean-teacher" ["l"="51.351,30.287", "c"=83]
"kimiyoung/ssl_bad_gan" ["l"="51.503,30.292", "c"=83]
"CuriousAI/ladder" ["l"="44.988,27.703", "c"=789]
"kefirski/pytorch_RVAE" ["l"="57.684,29.333", "c"=1082]
"larsmaaloee/auxiliary-deep-generative-models" ["l"="45.018,27.67", "c"=789]
"lyakaap/VAT-pytorch" ["l"="51.403,30.281", "c"=83]
"geomstats/geomstats" ["l"="21.528,14.017", "c"=267]
"openai/pixel-cnn" ["l"="45.952,29.278", "c"=170]
"kkleidal/GatedPixelCNNPyTorch" ["l"="23.162,14.357"]
"TrentBrick/PyTorchDiscreteFlows" ["l"="23.079,14.394"]
"PrajitR/fast-pixel-cnn" ["l"="45.989,29.351", "c"=170]
"vlievin/biva-pytorch" ["l"="23.124,14.306"]
"addtt/ladder-vae-pytorch" ["l"="23.128,14.329"]
"CW-Huang/CP-Flow" ["l"="61.149,14.9", "c"=480]
"CW-Huang/torchkit" ["l"="23.133,14.419"]
"kmkolasinski/deep-learning-notes" ["l"="22.939,14.539"]
"taki0112/Tensorflow-Cookbook" ["l"="50.625,28.329", "c"=104]
"mandubian/neural-ode" ["l"="22.861,14.609"]
"locuslab/deq" ["l"="22.853,14.575"]
"laurent-dinh/nice" ["l"="23.16,14.502"]
"bojone/gan-qp" ["l"="46.356,29.068", "c"=170]
"fmu2/NICE" ["l"="22.936,14.391"]
"xqding/RealNVP" ["l"="22.947,14.408"]
"salesforce/matchbox" ["l"="53.862,24.659", "c"=492]
"vene/sparsemap" ["l"="23.202,15.03"]
"cfinlay/ffjord-rnode" ["l"="22.999,14.59"]
"amirgholami/anode" ["l"="22.997,14.607"]
"johannbrehmer/manifold-flow" ["l"="23.033,14.522"]
"google/vae-seq" ["l"="52.552,14.658", "c"=569]
"ermongroup/Sequential-Variational-Autoencoder" ["l"="23.127,14.191"]
"MilesCranmer/lagrangian_nns" ["l"="22.879,14.526"]
"mfinzi/constrained-hamiltonian-neural-networks" ["l"="22.832,14.512"]
"milutter/deep_lagrangian_networks" ["l"="22.849,14.501"]
"Zymrael/PortHamiltonianNN" ["l"="22.807,14.537"]
"jpzxshi/sympnets" ["l"="22.804,14.504"]
"Physics-aware-AI/Symplectic-ODENet" ["l"="22.77,14.532"]
"ChrisRackauckas/universal_differential_equations" ["l"="22.153,16.656", "c"=77]
"a-norcliffe/sonode" ["l"="22.981,14.657"]
"anshu957/OrderChaosHNN" ["l"="22.828,14.528"]
"mariosmat/hamiltonianNNetODEs" ["l"="22.818,14.543"]
"CampusAI/Hamiltonian-Generative-Networks" ["l"="22.81,14.522"]
"vene/sparse-structured-attention" ["l"="23.235,15.03"]
"KrisKorrel/sparsemax-pytorch" ["l"="23.233,15.001"]
"xinychen/awesome-latex-drawing" ["l"="-4.69,21.913", "c"=276]
"varun-nagaraja/BING-Objectness" ["l"="23.479,14.192"]
"alessandroferrari/BING-Objectness" ["l"="23.501,14.188"]
"bbabenko/simple_convnet" ["l"="23.435,14.313"]
"karpathy/lifejs" ["l"="23.398,14.344"]
"karpathy/sqlitedict" ["l"="23.372,14.36"]
"silvandeleemput/memcnn" ["l"="22.956,14.476"]
"wgrathwohl/JEM" ["l"="45.504,31.657", "c"=605]
"renmengye/revnet-public" ["l"="23.545,14.841", "c"=728]
"tbung/pytorch-revnet" ["l"="22.948,14.494"]
"jhjacobsen/fully-invertible-revnet" ["l"="22.963,14.508"]
"locuslab/pytorch_fft" ["l"="51.419,30.01", "c"=83]
"JeremyCCHsu/vqvae-speech" ["l"="37.354,2.728", "c"=117]
"karpathy/scriptsbots" ["l"="23.408,14.325"]
"JimAllanson/lifejs" ["l"="23.425,14.332"]
"Ramblurr/scriptbots" ["l"="23.403,14.313"]
"GhengopelALPHA/scriptbots" ["l"="23.445,14.296"]
"karpathy/EigenLibSVM" ["l"="23.399,14.289"]
"schelotto/Wasserstein-AutoEncoders" ["l"="22.921,14.25"]
"tolstikhin/wae" ["l"="22.975,14.265"]
"sedelmeyer/wasserstein-auto-encoder" ["l"="22.944,14.232"]
"eifuentes/swae-pytorch" ["l"="22.87,14.24"]
"1Konny/WAE-pytorch" ["l"="22.934,14.269"]
"neale/Adversarial-Autoencoder" ["l"="46.184,29.483", "c"=170]
"jakezhaojb/ARAE" ["l"="57.732,29.378", "c"=1082]
"skolouri/swae" ["l"="22.897,14.255"]
"maitek/waae-pytorch" ["l"="46.185,29.503", "c"=170]
"cetmann/iunets" ["l"="22.912,14.464"]
"RobinBruegger/RevTorch" ["l"="62.134,36.801", "c"=178]
"locuslab/trellisnet" ["l"="22.788,14.6"]
"ofirpress/YouMayNotNeedAttention" ["l"="53.847,24.639", "c"=492]
"haohy/TCAN" ["l"="47.952,34.327", "c"=168]
"makora9143/pytorch-convcnp" ["l"="23.106,14.727"]
"harvardnlp/pytorch-struct" ["l"="57.622,29.477", "c"=1082]
"harvardnlp/cascaded-generation" ["l"="53.93,24.576", "c"=492]
"neulab/compare-mt" ["l"="53.854,24.762", "c"=492]
"carolinlawrence/BiSon" ["l"="23.225,14.967"]
"andre-martins/AD3" ["l"="23.208,15.077"]
"deep-spin/sparse-marginalization-lvm" ["l"="23.205,15.055"]
"deep-spin/lp-sparsemap" ["l"="23.181,15.049"]
"harvardnlp/urnng" ["l"="52.932,25.233", "c"=172]
"ssydasheng/Bayesian_neural_network_papers" ["l"="22.436,15.303", "c"=977]
"prichemond/ds3" ["l"="23.57,14.886", "c"=728]
"btgraham/Batchwise-Dropout" ["l"="23.572,14.886", "c"=728]
"MadryLab/cox" ["l"="23.578,14.882", "c"=728]
"manicman1999/Keras-BiGAN" ["l"="23.575,14.907", "c"=728]
"oxwhirl/treeqn" ["l"="23.577,14.877", "c"=728]
"LeoYu/neural-tangent-kernel-UCI" ["l"="23.565,14.873", "c"=728]
"hhb072/IntroVAE" ["l"="23.233,14.489"]
"taldatech/soft-intro-vae-pytorch" ["l"="23.206,14.471"]
"stevemayne/gplusblog" ["l"="23.418,14.3"]
"pyprob/pyprob" ["l"="22.906,14.225"]
"blei-lab/edward" ["l"="45.764,26.126", "c"=68]
"ColCarroll/minimc" ["l"="21.779,14.23", "c"=267]
"paruby/Wasserstein-Auto-Encoders" ["l"="22.943,14.199"]
"RuiShu/vae-clustering" ["l"="53.162,29.861", "c"=547]
"musyoku/adversarial-autoencoder" ["l"="46.138,29.429", "c"=170]
"Nat-D/GMVAE" ["l"="53.161,29.843", "c"=547]
"Sohl-Dickstein/Sum-of-Functions-Optimizer" ["l"="23.429,14.292"]
"cpbotha/mlabwrap-purepy" ["l"="23.437,14.303"]
"googleglass/mirror-quickstart-python" ["l"="23.425,14.318"]
"ehoogeboom/convolution_exponential_and_sylvester" ["l"="23.13,14.432"]
"kolchinski/cs236" ["l"="22.889,14.398"]
"VinAIResearch/plasticbag-faster-rcnn" ["l"="22.69,14.142"]
"VinAIResearch/PCC-pytorch" ["l"="22.706,14.164"]
"natsukagami/nix-home" ["l"="22.672,14.127"]
"jason71995/Keras_ODENet" ["l"="22.832,14.62"]
"IoannisAntonoglou/optimBench" ["l"="23.481,14.281"]
"storborg/glass-teardown" ["l"="23.449,14.306"]
"wearscript/wearscript-android" ["l"="23.463,14.289"]
"dfdazac/wassdistance" ["l"="21.552,13.846", "c"=267]
"koshian2/swd-pytorch" ["l"="22.846,14.222"]
"brain-research/nngp" ["l"="46.187,26.112", "c"=68]
"ananyahjha93/multi-level-vae" ["l"="23.079,14.119"]
"DianeBouchacourt/multi-level-vae" ["l"="23.08,14.09"]
"ananyahjha93/disentangling-factors-of-variation-using-adversarial-training" ["l"="23.08,14.138"]
"ananyahjha93/challenges-in-disentangling" ["l"="23.066,14.133"]
"johannbrehmer/pointers" ["l"="23.05,14.556"]
"Information-Fusion-Lab-Umass/NuX" ["l"="21.749,14.257", "c"=267]
"conormdurkan/lfi" ["l"="21.881,14.348", "c"=267]
"justinalsing/pydelfi" ["l"="21.969,14.254", "c"=267]
"chrvt/denoising-normalizing-flow" ["l"="23.036,14.559"]
"sbi-benchmark/sbibm" ["l"="21.884,14.308", "c"=267]
"ehoogeboom/emerging" ["l"="23.13,14.452"]
"izmailovpavel/flowgmm" ["l"="23.029,14.402"]
"karpathy/svmjs" ["l"="23.435,14.358"]
"rlidwka/node-fann" ["l"="-32.645,-36.013", "c"=1115]
"clever-algorithms/CleverAlgorithmsMachineLearning" ["l"="23.467,14.314"]
"tgcsaba/KSig" ["l"="22.876,14.788"]
"hongseok-yang/probprog18" ["l"="22.88,14.174"]
"lezcano/CPProb" ["l"="22.869,14.145"]
"harvardnlp/TextFlow" ["l"="23.094,14.408"]
"karpathy/nn" ["l"="23.382,14.346"]
"gokceneraslan/SparseMax.torch" ["l"="23.266,15.011"]
"kimiandj/gsw" ["l"="22.832,14.235"]
"VinAIResearch/DSW" ["l"="22.81,14.221"]
"singh-hrituraj/PixelCNN-Pytorch" ["l"="23.243,14.305"]
"anordertoreclaim/PixelCNN" ["l"="23.266,14.28"]
"amzn/xfer" ["l"="22.804,14.118"]
"amzn/MXFusion" ["l"="22.839,14.16"]
"juntang-zhuang/torch_ACA" ["l"="23.015,14.618"]
"Cyanogenoid/fspool" ["l"="23.228,14.881"]
"amzn/emukit-playground" ["l"="22.815,14.148"]
"HuQyang/Disentangling-Factors-of-Variation-by-Mixing-Them" ["l"="23.096,14.136"]
"Devin-Taylor/MultiAug" ["l"="22.997,14.778"]
"jacobdeasy/geometric-js" ["l"="23.009,14.763"]
"paruby/ml-basics" ["l"="22.921,14.166"]
"nikikilbertus/cf-fairness-sensitivity" ["l"="22.937,14.174"]
"EugenHotaj/pytorch-generative" ["l"="23.198,14.336"]
"kamenbliznashki/pixel_models" ["l"="23.228,14.325"]
"ColinEberhardt/d3fc-webgl-hathi-explorer" ["l"="43.377,24.658", "c"=95]
"raminmh/liquid_time_constant_networks" ["l"="22.822,14.679"]
"mlech26l/ncps" ["l"="22.794,14.65"]
"raminmh/CfC" ["l"="22.794,14.685"]
"raminmh/liquid-s4" ["l"="22.767,14.697"]
"kyegomez/LiqudNet" ["l"="22.795,14.715"]
"mlech26l/keras-ncp" ["l"="22.763,14.667"]
"makramchahine/drone_causality" ["l"="22.778,14.715"]
"safipatel/LNN-cancer-classification" ["l"="22.775,14.735"]
"state-spaces/s4" ["l"="49.031,34.068", "c"=556]
"BindsNET/bindsnet" ["l"="60.722,33.599", "c"=607]
"HusseinJammal/Liquid-Neural-Networks-in-Stock-Market-Prediction" ["l"="22.817,14.727"]
"fg-research/lnn-sagemaker" ["l"="22.797,14.734"]
"williamgilpin/dysts" ["l"="22.83,16.915", "c"=77]
"websockets/wscat" ["l"="46.121,29.132", "c"=170]
"harthur/kittydar" ["l"="23.515,14.259"]
"probabilists/zuko" ["l"="21.881,14.278", "c"=267]
"facebookincubator/flowtorch" ["l"="23.103,14.502"]
"sbi-dev/sbi" ["l"="21.891,14.261", "c"=267]
"kazewong/flowMC" ["l"="21.895,14.239", "c"=267]
"Chen-Cai-OSU/awesome-equivariant-network" ["l"="22.043,13.257", "c"=344]
"phlippe/uvadlc_notebooks" ["l"="21.682,14.055", "c"=267]
"cvxgrp/cvxpylayers" ["l"="61.282,14.898", "c"=480]
"andriiheonia/hull" ["l"="-10.274,4.083", "c"=1268]
"ml-jku/hopfield-layers" ["l"="23.711,14.926", "c"=728]
"jeshraghian/snntorch" ["l"="60.77,33.606", "c"=607]
"fangwei123456/spikingjelly" ["l"="60.782,33.628", "c"=607]
"norse/norse" ["l"="60.741,33.59", "c"=607]
"ridgerchu/SpikeGPT" ["l"="60.809,33.628", "c"=607]
"google/brain-tokyo-workshop" ["l"="-35.355,-2.738", "c"=1253]
"NX-AI/xlstm" ["l"="49.259,34.17", "c"=556]
"karpathy/neuraltalk" ["l"="47.92,28.94", "c"=89]
"hardmaru/backprop-neat-js" ["l"="-35.27,-2.736", "c"=1253]
"kaishengtai/torch-ntm" ["l"="46.024,27.733", "c"=277]
"wojciechz/learning_to_execute" ["l"="46.029,27.692", "c"=277]
"waylonflinn/weblas" ["l"="-32.392,-35.827", "c"=1115]
"facebookarchive/eyescream" ["l"="45.858,29.323", "c"=170]
"cazala/synaptic" ["l"="-32.63,-35.896", "c"=1115]
"Element-Research/rnn" ["l"="46.055,27.692", "c"=277]
"mfinzi/LieConv" ["l"="22.087,13.369", "c"=344]
"CUAI/Neural-Manifold-Ordinary-Differential-Equations" ["l"="23.008,14.655"]
"erikbern/deep-pink" ["l"="57.69,17.198", "c"=345]
"sytelus/HackerNewsData" ["l"="23.463,14.277"]
"jornpeters/integer_discrete_flows" ["l"="-39.255,21.762", "c"=806]
"ChrisWaites/jax-flows" ["l"="-1.103,3.007", "c"=258]
"oreillymedia/t-SNE-tutorial" ["l"="44.904,26.17", "c"=68]
"XuezheMax/flowseq" ["l"="53.946,24.635", "c"=492]
"openai/vdvae" ["l"="23.126,14.39"]
"GlassyWing/nvae" ["l"="23.138,14.36"]
"NVlabs/LSGM" ["l"="45.625,31.563", "c"=605]
"yang-song/score_sde" ["l"="45.687,31.564", "c"=605]
"mit-han-lab/data-efficient-gans" ["l"="44.931,30.537", "c"=243]
"sloisel/numeric" ["l"="-32.32,-35.763", "c"=1115]
"karpathy/randomfun" ["l"="23.313,14.376"]
"karpathy/transformers" ["l"="23.344,14.353"]
"karpathy/lecun1989-repro" ["l"="23.321,14.349"]
"karpathy/karpathy" ["l"="23.36,14.375"]
"karpathy/makemore" ["l"="40.192,0.753", "c"=7]
"SciML/DiffEqFlux.jl" ["l"="22.103,16.698", "c"=77]
"tum-pbs/PhiFlow" ["l"="21.772,15.86", "c"=516]
"lezcano/geotorch" ["l"="21.532,14.039", "c"=267]
"MilesCranmer/symbolic_deep_learning" ["l"="21.894,15.727", "c"=516]
"patrick-kidger/equinox" ["l"="21.765,14.073", "c"=267]
"yang-song/score_sde_pytorch" ["l"="45.727,31.575", "c"=605]
"pytorch/functorch" ["l"="21.677,14.079", "c"=267]
"replicate/keepsake" ["l"="45.305,25.954", "c"=68]
"tensorflow/tfjs-tsne" ["l"="23.531,14.877", "c"=728]
"lvdmaaten/bhtsne" ["l"="44.905,26.22", "c"=68]
"upphiminn/jLouvain" ["l"="-5.11,-41.553", "c"=333]
"kylemcdonald/AudioNotebooks" ["l"="38.545,3.808", "c"=201]
"karpathy/Random-Forest-Matlab" ["l"="23.411,14.339"]
"danielfrg/tsne" ["l"="57.478,23.946", "c"=864]
"lferry007/LargeVis" ["l"="44.938,26.231", "c"=68]
"bw2/ConfigArgParse" ["l"="22.366,13.777", "c"=267]
"AdamCobb/hamiltorch" ["l"="22.543,15.36", "c"=977]
"jeongwhanchoi/STG-NCDE" ["l"="52.448,17.275", "c"=815]
"patrick-kidger/FasterNeuralDiffEq" ["l"="22.99,14.571"]
"CUAI/Differentiable-Frechet-Mean" ["l"="21.348,14.061", "c"=267]
"locuslab/mdeq" ["l"="22.79,14.574"]
"locuslab/monotone_op_net" ["l"="22.812,14.583"]
"locuslab/SATNet" ["l"="23.509,14.89", "c"=728]
"locuslab/torchdeq" ["l"="22.763,14.565"]
"akbir/deq-jax" ["l"="22.814,14.565"]
"locuslab/optnet" ["l"="61.234,14.904", "c"=480]
"locuslab/deq-ddim" ["l"="22.791,14.554"]
"karpathy/scholaroctopus" ["l"="23.379,14.321"]
"karpathy/simple-amt" ["l"="23.367,14.335"]
"SymJAX/SymJAX" ["l"="21.841,14.169", "c"=267]
"xwinxu/bayeSDE" ["l"="22.991,14.681"]
"wangleiphy/tensorgrad" ["l"="21.783,17.775", "c"=863]
"mfinzi/equivariant-MLP" ["l"="22.073,13.303", "c"=344]
"mhibatallah/RNNWavefunctions" ["l"="21.79,17.701", "c"=863]
"MilesCranmer/PySR" ["l"="21.867,15.772", "c"=516]
"SciML/NeuralPDE.jl" ["l"="22.13,16.676", "c"=77]
"wesselb/neuralprocesses" ["l"="23.151,14.725"]
"Jackson-Kang/Pytorch-VAE-tutorial" ["l"="46.345,29.334", "c"=170]
"karpathy/researchpooler" ["l"="23.379,14.336"]
"kilianFatras/awesome-optimal-transport" ["l"="21.587,13.759", "c"=267]
"steveli/partial-encoder-decoder" ["l"="22.868,14.709"]
"colah/Visualizing-Deep-Learning" ["l"="23.453,14.56"]
"VinAIResearch/PC3-pytorch" ["l"="22.754,14.191"]
"alessandroferrari/R-CNN-Object-detection" ["l"="23.524,14.171"]
"yun-liu/BING" ["l"="23.508,14.159"]
"larsmaaloee/BIVA" ["l"="23.121,14.285"]
"JakobHavtorn/hvae-oodd" ["l"="23.121,14.272"]
"XuezheMax/macow" ["l"="53.996,24.57", "c"=492]
"bayesflow-org/bayesflow" ["l"="21.852,14.239", "c"=267]
"dustinvtran/latex-templates" ["l"="-4.675,22.014", "c"=276]
"didriknielsen/pixelcnn_flow" ["l"="23.121,14.493"]
"pkien01/MNIST-neural-network-classifier" ["l"="22.681,14.162"]
"pkien01/draw-on-face" ["l"="22.688,14.175"]
"cambridge-mlg/cnaps" ["l"="57.762,19.242", "c"=433]
"tung-nd/TNP-pytorch" ["l"="23.178,14.771"]
"vdutor/neural-diffusion-processes" ["l"="23.151,14.763"]
"singhgautam/snp" ["l"="23.121,14.76"]
"GitGyun/multi_task_neural_processes" ["l"="23.109,14.774"]
"facebookresearch/beanmachine" ["l"="23.161,14.552"]
"facebookresearch/pplbench" ["l"="23.196,14.591"]
"facebookresearch/diffkt" ["l"="23.196,14.568"]
"pyro-ppl/funsor" ["l"="22.059,14.351", "c"=267]
"jeremiecoullon/SGMCMCJax" ["l"="21.772,14.169", "c"=267]
"yewsiang/ConceptBottleneck" ["l"="24.114,14.108", "c"=1010]
"mateoespinosa/cem" ["l"="22.984,14.868"]
"rlouf/mcx" ["l"="21.796,14.182", "c"=267]
"facebookresearch/disentangling-correlated-factors" ["l"="23.049,14.159"]
"google-deepmind/multi_object_datasets" ["l"="48.923,32.434", "c"=300]
"pierresegonne/VINF" ["l"="23.002,14.39"]
"ioangatop/srVAE" ["l"="-34.917,21.494", "c"=127]
"KurochkinAlexey/Recurrent-neural-processes" ["l"="23.103,14.751"]
"juntang-zhuang/TorchDiffEqPack" ["l"="23.033,14.637"]
"orybkin/sigma-vae-pytorch" ["l"="23.198,14.254"]
"jcjohnson/simple-amt" ["l"="-19.196,13.442", "c"=173]
"jaekookang/invertible_neural_networks" ["l"="23.11,14.593"]
"zabaras/inn-surrogate" ["l"="23.131,14.598"]
"vislearn/inn_toy_data" ["l"="23.127,14.581"]
"jpzxshi/learner" ["l"="22.783,14.48"]
"annavaughan/convCNPClimate" ["l"="23.167,14.708"]
"locuslab/ImpSq" ["l"="22.744,14.581"]
"phlippe/CategoricalNF" ["l"="23.024,14.366"]
"nextml-code/template-nvae" ["l"="23.164,14.373"]
"tvayer/SGW" ["l"="21.563,13.787", "c"=267]
"d-biswa/Symplectic-ODENet" ["l"="22.74,14.538"]
"DesmondZhong/Lagrangian_caVAE" ["l"="22.733,14.524"]
"crisbodnar/dgm" ["l"="23.022,14.797"]
"boschresearch/hierarchical_anomaly_detection" ["l"="52.464,14.64", "c"=569]
"ariercole/Cambridge_COVID-19_ICU" ["l"="23.012,14.781"]
"rvinas/GTEx-imputation" ["l"="23.028,14.775"]
"probml/pml-book" ["l"="50.596,27.847", "c"=104]
"MaximeVandegar/Papers-in-100-Lines-of-Code" ["l"="63.607,1.705", "c"=134]
"karpathy/micrograd" ["l"="40.179,0.716", "c"=7]
"jimmysong/programmingbitcoin" ["l"="-18.527,10.714", "c"=122]
"karpathy/nn-zero-to-hero" ["l"="40.237,0.751", "c"=7]
"karpathy/llama2.c" ["l"="40.169,0.661", "c"=7]
"karpathy/nano-llama31" ["l"="38.947,-0.192", "c"=39]
"karpathy/minbpe" ["l"="40.261,0.682", "c"=7]
"rll/rllab" ["l"="57.483,18.133", "c"=45]
"spragunr/deep_q_rl" ["l"="57.3,18.109", "c"=45]
"janhuenermann/neurojs" ["l"="-32.64,-35.93", "c"=1115]
"joschu/modular_rl" ["l"="57.394,18.195", "c"=45]
"siemanko/tensorflow-deepq" ["l"="57.297,18.086", "c"=45]
"junhyukoh/deep-reinforcement-learning-papers" ["l"="57.439,18.074", "c"=45]
"BeTomorrow/ReImproveJS" ["l"="-32.523,-35.787", "c"=1115]
"Farama-Foundation/Arcade-Learning-Environment" ["l"="57.411,18.137", "c"=45]
"SirTificate/gekko-neuralnet" ["l"="-9.579,10.204", "c"=614]
"coreylynch/async-rl" ["l"="57.327,18.126", "c"=45]
"tambetm/simple_dqn" ["l"="57.326,18.099", "c"=45]
"aleximmer/Laplace" ["l"="22.555,15.398", "c"=977]
"f-dangel/cockpit" ["l"="21.613,14.015", "c"=267]
"karpathy/ttmik" ["l"="23.294,14.307"]
"kjw0612/awesome-random-forest" ["l"="47.841,28.88", "c"=89]
"bayesoptbook/bayesoptbook.github.io" ["l"="45.929,26.133", "c"=68]
"HuajieShao/ControlVAE-ICML2020" ["l"="23.246,14.512"]
"tmadl/semisup-learn" ["l"="45.093,27.738", "c"=789]
"pietrobarbiero/pytorch_explain" ["l"="22.999,14.841"]
"pietrobarbiero/logic_explained_networks" ["l"="23.007,14.878"]
"pietrobarbiero/entropy-lens" ["l"="23.012,14.863"]
"HekpoMaH/algorithmic-concepts-reasoning" ["l"="23.002,14.808"]
"pnnl/neuromancer" ["l"="61.338,14.926", "c"=480]
"makramchahine/rosetta_drone" ["l"="22.758,14.716"]
"paperswithcode/galai" ["l"="38.692,-0.804", "c"=39]
"lindermanlab/S5" ["l"="49.039,34.007", "c"=556]
"zjc062/mind-vis" ["l"="62.726,34.362", "c"=1109]
"eloialonso/iris" ["l"="59.285,17.557", "c"=169]
"facebookresearch/flow_matching" ["l"="46.345,30.569", "c"=367]
"NVlabs/edm" ["l"="45.738,31.592", "c"=605]
"patrick-kidger/torchtyping" ["l"="21.645,14.092", "c"=267]
"hardmaru/neuralslimevolley" ["l"="23.439,14.274"]
"tkocisky/oxnn" ["l"="45.908,27.659", "c"=277]
"noegroup/stochastic_normalizing_flows" ["l"="21.558,15.693", "c"=516]
"Rayhane-mamah/Efficient-VDVAE" ["l"="23.178,14.387"]
"google-research/fitvid" ["l"="23.158,14.403"]
"alan-turing-institute/deepsensor" ["l"="23.182,14.735"]
"1Konny/HVP" ["l"="23.107,14.801"]
"kyegomez/LFM" ["l"="22.7,14.735"]
"pnkraemer/tueplots" ["l"="21.913,14.286", "c"=267]
"Jason2Brownlee/CleverAlgorithms" ["l"="2.788,-35.621", "c"=171]
"EurekaLabsAI/mlp" ["l"="38.948,-0.129", "c"=39]
"EurekaLabsAI/micrograd" ["l"="38.975,-0.105", "c"=39]
"codeinthedark/editor" ["l"="23.119,-26.667", "c"=28]
"rachelnicole/robokitty" ["l"="23.625,14.203"]
"openai/evolution-strategies-starter" ["l"="57.409,18.235", "c"=45]
"tysam-code/hlb-CIFAR10" ["l"="38.736,-0.274", "c"=39]
"davidADSP/Generative_Deep_Learning_2nd_Edition" ["l"="47.712,26.439", "c"=323]
"probml/pml2-book" ["l"="50.593,27.798", "c"=104]
"karpathy/arxiv-sanity-preserver" ["l"="47.807,28.898", "c"=89]
"PrincetonVision/marvin" ["l"="45.911,27.56", "c"=277]
"lukasschwab/arxiv.py" ["l"="-34.152,16.216", "c"=996]
"clementchadebec/pyraug" ["l"="23.085,14.325"]
"POSTECH-CVLab/PyTorch-StudioGAN" ["l"="44.99,30.571", "c"=243]
"girliemac/RPi-KittyCam" ["l"="23.579,14.228"]
"harthur/hog-descriptor" ["l"="23.477,14.302"]
"yburda/iwae" ["l"="44.992,27.647", "c"=789]
"casperkaae/LVAE" ["l"="23.092,14.226"]
"ermongroup/Variational-Ladder-Autoencoder" ["l"="23.107,14.241"]
"SingleZombie/DL-Demos" ["l"="45.692,31.635", "c"=605]
"boschresearch/torchphysics" ["l"="21.783,15.939", "c"=516]
"google-deepmind/dm-haiku" ["l"="21.721,14.052", "c"=267]
"yukara-ikemiya/minimal-sqvae" ["l"="23.262,14.224"]
"siemanko/tf-adversarial" ["l"="45.938,27.531", "c"=277]
"mertyg/post-hoc-cbm" ["l"="24.125,14.085", "c"=1010]
"JohnnyYeeee/math_prog_synth_env" ["l"="23.209,14.387"]
"GitGyun/chameleon" ["l"="23.094,14.792"]
"google-research/optformer" ["l"="23.223,14.793"]
"automl/PFNs4BO" ["l"="46.571,26.692", "c"=68]
"machinelearningnuremberg/HPO-B" ["l"="46.71,26.764", "c"=68]
"daft-dev/daft" ["l"="23.527,14.945", "c"=728]
"dilinwang820/Stein-Variational-Gradient-Descent" ["l"="21.74,14.322", "c"=267]
"PetarV-/TikZ" ["l"="-4.62,21.857", "c"=276]
"enalisnick/stick-breaking_dgms" ["l"="45.161,27.638", "c"=789]
"pyro-ppl/numpyro" ["l"="21.752,14.11", "c"=267]
"dgilton/deep_equilibrium_inverse" ["l"="22.703,14.565"]
"xmed-lab/ECBM" ["l"="22.975,14.893"]
"andre-martins/TurboParser" ["l"="23.214,15.109"]
"mattjj/svae" ["l"="45.096,27.608", "c"=789]
"borisdayma/vit-vqgan" ["l"="23.426,14.261"]
"cambridge-mlg/neural_diffusion_processes" ["l"="23.167,14.786"]
"pafoster/path_signatures_introduction" ["l"="22.912,14.807"]
"jaanli/variational-autoencoder" ["l"="46.151,29.319", "c"=170]
"junyanz/CatPapers" ["l"="45.862,29.204", "c"=170]
"JonathanRaiman/tensorflow-infogan" ["l"="22.985,14.075"]
"malcolmw/LTCNN" ["l"="22.749,14.756"]
"MMatulenko/LNN" ["l"="22.761,14.766"]
"SeyedMuhammadHosseinMousavi/Liquid-Neural-Networks-LNNs-Classification" ["l"="22.781,14.757"]
"buriburisuri/supervised_infogan" ["l"="46.073,29.239", "c"=170]
"princeton-computational-imaging/Delta-Prox" ["l"="22.664,14.567"]
"ericjang/gumbel-softmax" ["l"="53.219,29.886", "c"=547]
"PythonOT/POT" ["l"="21.573,13.907", "c"=267]
"pytorch/tnt" ["l"="51.125,29.856", "c"=83]
"pyprob/ppx" ["l"="22.866,14.202"]
"probprog/pyprob" ["l"="22.89,14.197"]
"elfi-dev/elfi" ["l"="21.905,14.344", "c"=267]
"madminer-tool/madminer" ["l"="20.392,13.677", "c"=1146]
"anantzoid/Conditional-PixelCNN-decoder" ["l"="46.019,29.334", "c"=170]
"igul222/PixelVAE" ["l"="23.154,14.12"]
"ermongroup/Generalized-PixelVAE" ["l"="23.138,14.159"]
"pbloem/pixel-models" ["l"="23.165,14.089"]
"sootlasten/beta-vae" ["l"="23.056,14.188"]
"jmtomczak/vae_householder_flow" ["l"="23.102,14.316"]
"Decentralised-AI/LFM-Liquid-AI-Liquid-Foundation-Models" ["l"="22.675,14.751"]
"ShengjiaZhao/MMD-Variational-Autoencoder" ["l"="-0.999,2.944", "c"=258]
"harvardnlp/sa-vae" ["l"="57.722,29.391", "c"=1082]
"Naresh1318/Adversarial_Autoencoder" ["l"="46.161,29.427", "c"=170]
"facebookresearch/clevr-dataset-gen" ["l"="48.85,32.3", "c"=300]
"llSourcell/Convolutional_neural_network" ["l"="49.77,26.885", "c"=791]
"pleonard212/pix-plot" ["l"="-52.179,-11.617", "c"=1201]
"karpathy/MatlabWrapper" ["l"="23.453,14.347"]
"xqding/Importance_Weighted_Autoencoders" ["l"="45.036,27.646", "c"=789]
}