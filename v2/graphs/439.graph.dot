digraph G {
"Tiiiger/bert_score" -> "facebookresearch/DPR" ["e"=1]
"priya-dwivedi/cs224n-Squad-Project" -> "sachinbiradar9/Question-Answer-Selection" ["e"=1]
"tensorflow/ranking" -> "allegro/allRank" ["e"=1]
"tensorflow/ranking" -> "shiba24/learning2rank" ["e"=1]
"google-deepmind/mathematics_dataset" -> "google-research-datasets/natural-questions" ["e"=1]
"matsui528/faiss_tips" -> "staoxiao/LibVQ" ["e"=1]
"wenhuchen/Table-Fact-Checking" -> "facebookresearch/multihop_dense_retrieval" ["e"=1]
"facebookresearch/LAMA" -> "facebookresearch/KILT" ["e"=1]
"facebookresearch/LAMA" -> "facebookresearch/DPR" ["e"=1]
"facebookresearch/LAMA" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"pisa-engine/pisa" -> "ot/ds2i"
"pisa-engine/pisa" -> "allenai/ir_datasets"
"pisa-engine/pisa" -> "zhihu/rucene" ["e"=1]
"pisa-engine/pisa" -> "joaopalotti/trectools"
"pisa-engine/pisa" -> "osirrc/ciff"
"pisa-engine/pisa" -> "terrierteam/pyterrier_pisa"
"pisa-engine/pisa" -> "naver/splade"
"pisa-engine/pisa" -> "castorini/anserini"
"pisa-engine/pisa" -> "TusKANNy/seismic" ["e"=1]
"pisa-engine/pisa" -> "quickwit-oss/tantivy" ["e"=1]
"pisa-engine/pisa" -> "sebastian-hofstaetter/matchmaker"
"pisa-engine/pisa" -> "toshi-search/Toshi" ["e"=1]
"pisa-engine/pisa" -> "iresearch-toolkit/iresearch" ["e"=1]
"pisa-engine/pisa" -> "gvinciguerra/PGM-index" ["e"=1]
"pisa-engine/pisa" -> "fast-pack/FastPFOR" ["e"=1]
"tomohideshibata/BERT-related-papers" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"google-research-datasets/paws" -> "google-research-datasets/tydiqa" ["e"=1]
"google-research-datasets/paws" -> "facebookresearch/anli" ["e"=1]
"dorianbrown/rank_bm25" -> "castorini/pyserini"
"dorianbrown/rank_bm25" -> "beir-cellar/beir"
"dorianbrown/rank_bm25" -> "nhirakawa/BM25"
"dorianbrown/rank_bm25" -> "facebookresearch/DPR"
"dorianbrown/rank_bm25" -> "xhluca/bm25s" ["e"=1]
"dorianbrown/rank_bm25" -> "allenai/ir_datasets"
"dorianbrown/rank_bm25" -> "naver/splade"
"dorianbrown/rank_bm25" -> "castorini/pygaggle"
"dorianbrown/rank_bm25" -> "castorini/anserini"
"dorianbrown/rank_bm25" -> "princeton-nlp/SimCSE" ["e"=1]
"dorianbrown/rank_bm25" -> "texttron/tevatron"
"dorianbrown/rank_bm25" -> "facebookresearch/contriever"
"dorianbrown/rank_bm25" -> "microsoft/MSMARCO-Passage-Ranking"
"dorianbrown/rank_bm25" -> "facebookresearch/GENRE" ["e"=1]
"dorianbrown/rank_bm25" -> "embeddings-benchmark/mteb"
"microsoft/BlingFire" -> "castorini/anserini" ["e"=1]
"cvangysel/pytrec_eval" -> "joaopalotti/trectools"
"cvangysel/pytrec_eval" -> "usnistgov/trec_eval"
"cvangysel/pytrec_eval" -> "allenai/ir_datasets"
"cvangysel/pytrec_eval" -> "castorini/anserini"
"cvangysel/pytrec_eval" -> "Georgetown-IR-Lab/OpenNIR"
"cvangysel/pytrec_eval" -> "sebastian-hofstaetter/matchmaker"
"cvangysel/pytrec_eval" -> "beir-cellar/beir"
"cvangysel/pytrec_eval" -> "capreolus-ir/capreolus"
"cvangysel/pytrec_eval" -> "microsoft/ANCE"
"cvangysel/pytrec_eval" -> "thunlp/OpenMatch"
"cvangysel/pytrec_eval" -> "castorini/pyserini"
"cvangysel/pytrec_eval" -> "texttron/tevatron"
"cvangysel/pytrec_eval" -> "castorini/pygaggle"
"cvangysel/pytrec_eval" -> "microsoft/MSMARCO-Passage-Ranking"
"cvangysel/pytrec_eval" -> "nyu-dl/dl4marco-bert"
"jcpeterson/openwebtext" -> "facebookresearch/ELI5" ["e"=1]
"jcpeterson/openwebtext" -> "google-research/xtreme" ["e"=1]
"thunlp/TAADpapers" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"gnes-ai/gnes" -> "koursaros-ai/nboost" ["e"=1]
"gnes-ai/gnes" -> "castorini/anserini" ["e"=1]
"seriousran/awesome-qa" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"seriousran/awesome-qa" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"google-research-datasets/natural-questions" -> "google-research/language"
"google-research-datasets/natural-questions" -> "facebookresearch/DPR"
"google-research-datasets/natural-questions" -> "allenai/document-qa" ["e"=1]
"google-research-datasets/natural-questions" -> "hotpotqa/hotpot" ["e"=1]
"google-research-datasets/natural-questions" -> "mrqa/MRQA-Shared-Task-2019" ["e"=1]
"google-research-datasets/natural-questions" -> "danqi/acl2020-openqa-tutorial"
"google-research-datasets/natural-questions" -> "facebookresearch/KILT"
"google-research-datasets/natural-questions" -> "mandarjoshi90/triviaqa" ["e"=1]
"google-research-datasets/natural-questions" -> "princeton-nlp/DensePhrases"
"google-research-datasets/natural-questions" -> "nyu-dl/dl4marco-bert"
"google-research-datasets/natural-questions" -> "google-research-datasets/tydiqa"
"google-research-datasets/natural-questions" -> "allenai/bi-att-flow" ["e"=1]
"google-research-datasets/natural-questions" -> "facebookresearch/PAQ"
"google-research-datasets/natural-questions" -> "castorini/pyserini"
"google-research-datasets/natural-questions" -> "facebookresearch/FiD"
"Alir3z4/stop-words" -> "Alir3z4/python-stop-words"
"Alir3z4/stop-words" -> "6/stopwords-json"
"6/stopwords-json" -> "Alir3z4/stop-words"
"6/stopwords-json" -> "stopwords-iso/stopwords-iso"
"cedrickchee/awesome-transformer-nlp" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"NTMC-Community/awesome-neural-models-for-semantic-match" -> "nyu-dl/dl4marco-bert" ["e"=1]
"NTMC-Community/awesome-neural-models-for-semantic-match" -> "castorini/anserini" ["e"=1]
"NTMC-Community/awesome-neural-models-for-semantic-match" -> "AdeDZY/DeepCT" ["e"=1]
"NTMC-Community/awesome-neural-models-for-semantic-match" -> "AdeDZY/SIGIR19-BERT-IR" ["e"=1]
"google-research/language" -> "google-research-datasets/natural-questions"
"google-research/language" -> "facebookresearch/DPR"
"google-research/language" -> "danqi/acl2020-openqa-tutorial"
"google-research/language" -> "facebookresearch/KILT"
"google-research/language" -> "AkariAsai/learning_to_retrieve_reasoning_paths"
"google-research/language" -> "google-research/electra" ["e"=1]
"google-research/language" -> "facebookresearch/FiD"
"google-research/language" -> "facebookresearch/XLM" ["e"=1]
"google-research/language" -> "castorini/pyserini"
"google-research/language" -> "marcotcr/checklist" ["e"=1]
"google-research/language" -> "abisee/pointer-generator" ["e"=1]
"google-research/language" -> "tomohideshibata/BERT-related-papers" ["e"=1]
"google-research/language" -> "namisan/mt-dnn" ["e"=1]
"google-research/language" -> "thunlp/ERNIE" ["e"=1]
"google-research/language" -> "princeton-nlp/DensePhrases"
"QingyaoAi/Deep-Listwise-Context-Model-for-Ranking-Refinement" -> "ULTR-Community/ULTRA"
"QingyaoAi/Deep-Listwise-Context-Model-for-Ranking-Refinement" -> "rec-agent/drr"
"QingyaoAi/Deep-Listwise-Context-Model-for-Ranking-Refinement" -> "ChenglongChen/tensorflow-LTR"
"HarrieO/OnlineLearningToRank" -> "sak2km/OnlineLearningToRank"
"acbull/Unbiased_LambdaMart" -> "QingyaoAi/Unbiased-Learning-to-Rank-with-Unbiased-Propensity-Estimation"
"acbull/Unbiased_LambdaMart" -> "ULTR-Community/ULTRA"
"acbull/Unbiased_LambdaMart" -> "lezzago/LambdaMart"
"zszazi/Deep-learning-in-cloud" -> "bplank/awesome-neural-adaptation-in-NLP" ["e"=1]
"houchenyu/L2R" -> "lezzago/LambdaMart"
"houchenyu/L2R" -> "airalcorn2/RankNet"
"houchenyu/L2R" -> "haowei01/pytorch-examples"
"houchenyu/L2R" -> "liyinxiao/LambdaRankNN"
"houchenyu/L2R" -> "akanyaani/ranknet-tensorflow2.0" ["e"=1]
"houchenyu/L2R" -> "shiba24/learning2rank"
"baidu/DuReader" -> "PaddlePaddle/RocketQA" ["e"=1]
"stxxl/stxxl" -> "cosmo-team/cosmo" ["e"=1]
"iai-group/arXivDigest" -> "osirrc/jig"
"lintool/guide" -> "joaopalotti/trectools"
"lintool/guide" -> "allenai/ir_datasets"
"lintool/guide" -> "capreolus-ir/capreolus"
"lintool/guide" -> "sebastian-hofstaetter/matchmaker"
"lintool/guide" -> "castorini/pygaggle"
"lintool/guide" -> "castorini/chatty-goose"
"lintool/guide" -> "jingtaozhan/DRhard"
"lintool/guide" -> "luyug/COIL"
"lintool/guide" -> "texttron/tevatron"
"lintool/guide" -> "castorini/anserini"
"lintool/guide" -> "ielab/asyncval"
"lintool/guide" -> "facebookresearch/dpr-scale"
"lintool/guide" -> "Georgetown-IR-Lab/OpenNIR"
"lintool/guide" -> "castorini/pyserini"
"lintool/guide" -> "AdeDZY/DeepCT"
"chauff/conversationalIR" -> "prdwb/orconvqa-release"
"chauff/conversationalIR" -> "aliannejadi/qulac"
"chauff/conversationalIR" -> "microsoft/MSMARCO-Conversational-Search"
"chauff/conversationalIR" -> "thunlp/ConvDR"
"chauff/conversationalIR" -> "Georgetown-IR-Lab/OpenNIR"
"chauff/conversationalIR" -> "yangliuy/NeuralResponseRanking"
"chauff/conversationalIR" -> "microsoft/MIMICS"
"daltonj/treccastweb" -> "grill-lab/trec-cast-tools"
"daltonj/treccastweb" -> "microsoft/TREC-2019-Deep-Learning"
"daltonj/treccastweb" -> "microsoft/MSMARCO-Conversational-Search"
"daltonj/treccastweb" -> "prdwb/orconvqa-release"
"nyu-dl/dl4marco-bert" -> "castorini/anserini"
"nyu-dl/dl4marco-bert" -> "nyu-dl/dl4ir-doc2query"
"nyu-dl/dl4marco-bert" -> "castorini/duobert"
"nyu-dl/dl4marco-bert" -> "spacemanidol/MSMARCO"
"nyu-dl/dl4marco-bert" -> "sebastian-hofstaetter/matchmaker"
"nyu-dl/dl4marco-bert" -> "AdeDZY/SIGIR19-BERT-IR"
"nyu-dl/dl4marco-bert" -> "microsoft/MSMARCO-Passage-Ranking"
"nyu-dl/dl4marco-bert" -> "Georgetown-IR-Lab/cedr"
"nyu-dl/dl4marco-bert" -> "AdeDZY/DeepCT"
"nyu-dl/dl4marco-bert" -> "thunlp/OpenMatch"
"nyu-dl/dl4marco-bert" -> "castorini/docTTTTTquery"
"nyu-dl/dl4marco-bert" -> "castorini/pygaggle"
"nyu-dl/dl4marco-bert" -> "castorini/birch"
"nyu-dl/dl4marco-bert" -> "joaopalotti/trectools"
"nyu-dl/dl4marco-bert" -> "microsoft/TREC-2019-Deep-Learning"
"castorini/birch" -> "AdeDZY/SIGIR19-BERT-IR"
"castorini/birch" -> "Georgetown-IR-Lab/cedr"
"castorini/birch" -> "lintool/robust04-analysis"
"castorini/birch" -> "nyu-dl/dl4marco-bert"
"castorini/birch" -> "castorini/duobert"
"grill-lab/trec-cast-tools" -> "daltonj/treccastweb"
"microsoft/TREC-2019-Deep-Learning" -> "daltonj/treccastweb"
"microsoft/TREC-2019-Deep-Learning" -> "spacemanidol/MSMARCO"
"microsoft/TREC-2019-Deep-Learning" -> "AdeDZY/SIGIR19-BERT-IR"
"sebastian-hofstaetter/teaching" -> "sebastian-hofstaetter/matchmaker"
"sebastian-hofstaetter/teaching" -> "allenai/ir_datasets"
"sebastian-hofstaetter/teaching" -> "beir-cellar/beir"
"sebastian-hofstaetter/teaching" -> "texttron/tevatron"
"sebastian-hofstaetter/teaching" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"sebastian-hofstaetter/teaching" -> "castorini/pyserini"
"sebastian-hofstaetter/teaching" -> "zetaalphavector/InPars"
"sebastian-hofstaetter/teaching" -> "terrier-org/ecir2021tutorial"
"sebastian-hofstaetter/teaching" -> "castorini/anserini"
"sebastian-hofstaetter/teaching" -> "naver/splade"
"sebastian-hofstaetter/teaching" -> "terrier-org/pyterrier"
"sebastian-hofstaetter/teaching" -> "joaopalotti/trectools"
"sebastian-hofstaetter/teaching" -> "castorini/docTTTTTquery"
"sebastian-hofstaetter/teaching" -> "castorini/pygaggle"
"sebastian-hofstaetter/teaching" -> "caiyinqiong/Semantic-Retrieval-Models"
"zhihu/rucene" -> "pisa-engine/pisa" ["e"=1]
"ChenglongChen/tensorflow-DSMM" -> "ChenglongChen/tensorflow-LTR" ["e"=1]
"ShaoQiBNU/RankNet" -> "yanshanjing/RankNet-Pytorch"
"ShaoQiBNU/RankNet" -> "eggie5/RankNet"
"Georgetown-IR-Lab/cedr" -> "AdeDZY/SIGIR19-BERT-IR"
"Georgetown-IR-Lab/cedr" -> "Georgetown-IR-Lab/OpenNIR"
"Georgetown-IR-Lab/cedr" -> "nyu-dl/dl4marco-bert"
"Georgetown-IR-Lab/cedr" -> "sebastian-hofstaetter/sigir19-neural-ir"
"Georgetown-IR-Lab/cedr" -> "castorini/birch"
"Georgetown-IR-Lab/cedr" -> "capreolus-ir/capreolus"
"Georgetown-IR-Lab/cedr" -> "joaopalotti/trectools"
"Georgetown-IR-Lab/cedr" -> "canjiali/PARADE"
"Georgetown-IR-Lab/cedr" -> "hamed-zamani/snrm"
"Georgetown-IR-Lab/cedr" -> "sebastian-hofstaetter/matchmaker"
"Georgetown-IR-Lab/cedr" -> "faneshion/HiNT"
"sachinbiradar9/Question-Answer-Selection" -> "Alan-Lee123/answer-selection"
"sachinbiradar9/Question-Answer-Selection" -> "betterenvi/QA-rankit"
"sachinbiradar9/Question-Answer-Selection" -> "Chiang97912/QA_LSTM_ATTENTION"
"microsoft/MSMARCO-Conversational-Search" -> "daltonj/treccastweb"
"microsoft/MSMARCO-Conversational-Search" -> "grill-lab/trec-cast-tools"
"microsoft/MSMARCO-Conversational-Search" -> "chauff/conversationalIR"
"microsoft/MSMARCO-Conversational-Search" -> "thunlp/ReInfoSelect"
"nhirakawa/BM25" -> "dorianbrown/rank_bm25"
"nhirakawa/BM25" -> "NTMC-Community/MatchZoo-py" ["e"=1]
"oborchers/Fast_Sentence_Embeddings" -> "koursaros-ai/nboost" ["e"=1]
"facebookresearch/XNLI" -> "google-research/xtreme"
"facebookresearch/XNLI" -> "TalSchuster/CrossLingualContextualEmb"
"facebookresearch/XNLI" -> "artetxem/vecmap" ["e"=1]
"facebookresearch/XNLI" -> "facebookresearch/XLM" ["e"=1]
"facebookresearch/XNLI" -> "facebookresearch/MLDoc"
"facebookresearch/XNLI" -> "google-deepmind/xquad"
"facebookresearch/XNLI" -> "facebookresearch/anli"
"facebookresearch/XNLI" -> "OanaMariaCamburu/e-SNLI"
"HKUST-KnowComp/R-Net" -> "spacemanidol/MSMARCO" ["e"=1]
"jihoo-kim/Awesome-Generative-RecSys" -> "gabriben/awesome-generative-information-retrieval" ["e"=1]
"vespa-engine/sample-apps" -> "sebastian-hofstaetter/teaching" ["e"=1]
"hamed-zamani/snrm" -> "diazf/trec-data"
"hotpotqa/hotpot" -> "Alab-NII/2wikimultihop" ["e"=1]
"hotpotqa/hotpot" -> "StonyBrookNLP/musique" ["e"=1]
"hotpotqa/hotpot" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"hotpotqa/hotpot" -> "google-research-datasets/natural-questions" ["e"=1]
"ielab/relevation" -> "Georgetown-IR-Lab/covid-neural-ir"
"ChenglongChen/tensorflow-LTR" -> "andreweskeclarke/learning-rank-public"
"ChenglongChen/tensorflow-LTR" -> "airalcorn2/RankNet"
"ChenglongChen/tensorflow-LTR" -> "shiba24/learning2rank"
"ChenglongChen/tensorflow-LTR" -> "jma127/pyltr"
"ChenglongChen/tensorflow-LTR" -> "liyinxiao/LambdaRankNN"
"ChenglongChen/tensorflow-LTR" -> "QingyaoAi/Deep-Listwise-Context-Model-for-Ranking-Refinement"
"ChenglongChen/tensorflow-LTR" -> "lezzago/LambdaMart"
"ChenglongChen/tensorflow-LTR" -> "ChenglongChen/tensorflow-DSMM" ["e"=1]
"ChenglongChen/tensorflow-LTR" -> "akanyaani/ranknet-tensorflow2.0" ["e"=1]
"ChenglongChen/tensorflow-LTR" -> "zhangzibin/PairCNN-Ranking"
"ChenglongChen/tensorflow-LTR" -> "ShaoQiBNU/RankNet"
"microsoft/MSMARCO-Question-Answering" -> "microsoft/MSMARCO-Passage-Ranking"
"microsoft/MSMARCO-Question-Answering" -> "spacemanidol/MSMARCO"
"microsoft/MSMARCO-Question-Answering" -> "microsoft/TREC-2019-Deep-Learning"
"microsoft/MSMARCO-Question-Answering" -> "microsoft/MSMARCO-Conversational-Search"
"microsoft/MSMARCO-Question-Answering" -> "microsoft/MSMARCO-Document-Ranking"
"WenRichard/CNN-in-Answer-selection" -> "Chiang97912/QA_LSTM_ATTENTION"
"AdeDZY/K-NRM" -> "thunlp/EntityDuetNeuralRanking"
"AdeDZY/K-NRM" -> "AdeDZY/SIGIR19-BERT-IR"
"AdeDZY/K-NRM" -> "ucasir/NPRF"
"AdeDZY/K-NRM" -> "yunhenk/Conv-KNRM"
"AdeDZY/K-NRM" -> "khui/copacrr"
"AdeDZY/K-NRM" -> "nyu-dl/dl4marco-bert"
"AdeDZY/K-NRM" -> "Georgetown-IR-Lab/cedr"
"AdeDZY/K-NRM" -> "hamed-zamani/snrm"
"AdeDZY/K-NRM" -> "spacemanidol/MSMARCO"
"AdeDZY/K-NRM" -> "thunlp/Kernel-Based-Neural-Ranking-Models"
"AdeDZY/K-NRM" -> "sebastian-hofstaetter/sigir19-neural-ir"
"AdeDZY/K-NRM" -> "pl8787/MatchPyramid-TensorFlow" ["e"=1]
"yangliuy/NeuralResponseRanking" -> "prdwb/UserIntentPrediction"
"faneshion/HiNT" -> "osirrc/jig"
"thunlp/EntityDuetNeuralRanking" -> "AdeDZY/K-NRM"
"thunlp/EntityDuetNeuralRanking" -> "AdeDZY/SIGIR19-BERT-IR"
"thunlp/EntityDuetNeuralRanking" -> "thunlp/ReInfoSelect"
"thunlp/EntityDuetNeuralRanking" -> "thunlp/OpenMatch"
"thunlp/EntityDuetNeuralRanking" -> "faneshion/HiNT"
"nlpaueb/deep-relevance-ranking" -> "faneshion/HiNT"
"nlpaueb/deep-relevance-ranking" -> "ucasir/NPRF"
"wildltr/ptranking" -> "allegro/allRank"
"wildltr/ptranking" -> "shiba24/learning2rank"
"wildltr/ptranking" -> "ULTR-Community/ULTRA"
"wildltr/ptranking" -> "haowei01/pytorch-examples"
"wildltr/ptranking" -> "airalcorn2/RankNet"
"wildltr/ptranking" -> "houchenyu/L2R"
"wildltr/ptranking" -> "jma127/pyltr"
"wildltr/ptranking" -> "tensorflow/ranking" ["e"=1]
"wildltr/ptranking" -> "allenai/ir_datasets"
"wildltr/ptranking" -> "ChenglongChen/tensorflow-LTR"
"wildltr/ptranking" -> "acbull/Unbiased_LambdaMart"
"wildltr/ptranking" -> "nyu-dl/dl4marco-bert"
"wildltr/ptranking" -> "lezzago/LambdaMart"
"wildltr/ptranking" -> "Georgetown-IR-Lab/cedr"
"wildltr/ptranking" -> "thunlp/OpenMatch"
"haowei01/pytorch-examples" -> "airalcorn2/RankNet"
"haowei01/pytorch-examples" -> "houchenyu/L2R"
"haowei01/pytorch-examples" -> "wildltr/ptranking"
"haowei01/pytorch-examples" -> "liyinxiao/LambdaRankNN"
"haowei01/pytorch-examples" -> "lezzago/LambdaMart"
"haowei01/pytorch-examples" -> "allegro/allRank"
"AdeDZY/SIGIR19-BERT-IR" -> "Georgetown-IR-Lab/cedr"
"AdeDZY/SIGIR19-BERT-IR" -> "castorini/birch"
"AdeDZY/SIGIR19-BERT-IR" -> "microsoft/TREC-2019-Deep-Learning"
"AdeDZY/SIGIR19-BERT-IR" -> "sebastian-hofstaetter/sigir19-neural-ir"
"AdeDZY/SIGIR19-BERT-IR" -> "nyu-dl/dl4marco-bert"
"AdeDZY/SIGIR19-BERT-IR" -> "nyu-dl/dl4ir-doc2query"
"AdeDZY/SIGIR19-BERT-IR" -> "thunlp/EntityDuetNeuralRanking"
"AdeDZY/SIGIR19-BERT-IR" -> "capreolus-ir/capreolus"
"AdeDZY/SIGIR19-BERT-IR" -> "sebastian-hofstaetter/matchmaker"
"AdeDZY/SIGIR19-BERT-IR" -> "ucasir/NPRF"
"AdeDZY/SIGIR19-BERT-IR" -> "AdeDZY/DeepCT"
"AdeDZY/SIGIR19-BERT-IR" -> "hamed-zamani/snrm"
"AdeDZY/SIGIR19-BERT-IR" -> "AdeDZY/K-NRM"
"AdeDZY/SIGIR19-BERT-IR" -> "spacemanidol/MSMARCO"
"AdeDZY/SIGIR19-BERT-IR" -> "thunlp/Kernel-Based-Neural-Ranking-Models"
"THUDM/CogQA" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"NTMC-Community/MatchZoo-py" -> "Georgetown-IR-Lab/cedr" ["e"=1]
"NTMC-Community/MatchZoo-py" -> "nyu-dl/dl4marco-bert" ["e"=1]
"NTMC-Community/MatchZoo-py" -> "thunlp/OpenMatch" ["e"=1]
"NTMC-Community/MatchZoo-py" -> "AdeDZY/DeepCT" ["e"=1]
"NTMC-Community/MatchZoo-py" -> "castorini/anserini" ["e"=1]
"NTMC-Community/MatchZoo-py" -> "Albert-Ma/PROP" ["e"=1]
"NTMC-Community/MatchZoo-py" -> "sebastian-hofstaetter/matchmaker" ["e"=1]
"meta-toolkit/meta" -> "meta-toolkit/metapy"
"meta-toolkit/meta" -> "smassung/text-data-book-comments"
"meta-toolkit/meta" -> "mit-nlp/MITIE" ["e"=1]
"meta-toolkit/meta" -> "phaistos-networks/Trinity"
"meta-toolkit/meta" -> "FidoProject/Fido"
"studio-ousia/luke" -> "facebookresearch/KILT" ["e"=1]
"rikdz/GraphWriter" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"airalcorn2/Solr-LTR" -> "airalcorn2/RankNet" ["e"=1]
"diazf/trec-data" -> "diazf/indri"
"castorini/hedwig" -> "Georgetown-IR-Lab/cedr" ["e"=1]
"sophwats/XGBoost-lambdaMART" -> "sophwats/learning-to-rank"
"sophwats/learning-to-rank" -> "sophwats/XGBoost-lambdaMART"
"OanaMariaCamburu/e-SNLI" -> "SawanKumar28/nile"
"hsinyuan-huang/FlowQA" -> "prdwb/bert_hae" ["e"=1]
"hsinyuan-huang/FlowQA" -> "deepnlp-cs599-usc/quac" ["e"=1]
"facebookresearch/ELI5" -> "facebookresearch/KILT"
"facebookresearch/ELI5" -> "qipeng/golden-retriever" ["e"=1]
"guilgautier/DPPy" -> "ChengtaoLi/dpp"
"guilgautier/DPPy" -> "laming-chen/fast-map-dpp"
"guilgautier/DPPy" -> "LCSL/dpp-vfx"
"guilgautier/DPPy" -> "mehdidc/dpp"
"guilgautier/DPPy" -> "satwik77/pyDPP"
"facebookresearch/UnsupervisedQA" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"fclaude/libcds2" -> "fclaude/libcds"
"fclaude/libcds2" -> "cosmo-team/cosmo"
"fclaude/libcds" -> "fclaude/libcds2"
"microsoft/MSMARCO-Passage-Ranking" -> "microsoft/MSMARCO-Document-Ranking"
"microsoft/MSMARCO-Passage-Ranking" -> "nyu-dl/dl4marco-bert"
"microsoft/MSMARCO-Passage-Ranking" -> "thunlp/OpenMatch"
"microsoft/MSMARCO-Passage-Ranking" -> "microsoft/MSMARCO-Question-Answering"
"microsoft/MSMARCO-Passage-Ranking" -> "microsoft/TREC-2019-Deep-Learning"
"microsoft/MSMARCO-Passage-Ranking" -> "microsoft/ANCE"
"microsoft/MSMARCO-Passage-Ranking" -> "sebastian-hofstaetter/matchmaker"
"microsoft/MSMARCO-Passage-Ranking" -> "castorini/duobert"
"microsoft/MSMARCO-Passage-Ranking" -> "AdeDZY/DeepCT"
"microsoft/MSMARCO-Passage-Ranking" -> "castorini/docTTTTTquery"
"microsoft/MSMARCO-Passage-Ranking" -> "AdeDZY/SIGIR19-BERT-IR"
"microsoft/MSMARCO-Passage-Ranking" -> "spacemanidol/MSMARCO"
"microsoft/MSMARCO-Passage-Ranking" -> "Georgetown-IR-Lab/cedr"
"microsoft/MSMARCO-Passage-Ranking" -> "texttron/tevatron"
"microsoft/MSMARCO-Passage-Ranking" -> "usnistgov/trec_eval"
"spacemanidol/MSMARCO" -> "microsoft/TREC-2019-Deep-Learning"
"spacemanidol/MSMARCO" -> "nyu-dl/dl4marco-bert"
"spacemanidol/MSMARCO" -> "nyu-dl/dl4ir-doc2query"
"spacemanidol/MSMARCO" -> "sebastian-hofstaetter/sigir19-neural-ir"
"spacemanidol/MSMARCO" -> "AdeDZY/SIGIR19-BERT-IR"
"spacemanidol/MSMARCO" -> "zlsh80826/MSMARCO"
"spacemanidol/MSMARCO" -> "Georgetown-IR-Lab/cedr"
"spacemanidol/MSMARCO" -> "microsoft/MSMARCO-Question-Answering"
"spacemanidol/MSMARCO" -> "diazf/indri"
"spacemanidol/MSMARCO" -> "thunlp/Kernel-Based-Neural-Ranking-Models"
"spacemanidol/MSMARCO" -> "HKUST-KnowComp/R-Net" ["e"=1]
"spacemanidol/MSMARCO" -> "microsoft/MSMARCO-Passage-Ranking"
"spacemanidol/MSMARCO" -> "AdeDZY/K-NRM"
"QingyaoAi/Unbiased-Learning-to-Rank-with-Unbiased-Propensity-Estimation" -> "acbull/Unbiased_LambdaMart"
"QingyaoAi/Unbiased-Learning-to-Rank-with-Unbiased-Propensity-Estimation" -> "ULTR-Community/ULTRA"
"rec-agent/drr" -> "rank2rec/rerank"
"rank2rec/rerank" -> "rec-agent/drr"
"rank2rec/rerank" -> "hf4Academic/PRM"
"laming-chen/fast-map-dpp" -> "rec-agent/drr"
"laming-chen/fast-map-dpp" -> "tsinghua-fib-lab/DGCN"
"stevezheng23/xlnet_extension_tf" -> "prdwb/bert_hae"
"stevezheng23/xlnet_extension_tf" -> "ecchochan/roberta-squad"
"prdwb/bert_hae" -> "prdwb/attentive_history_selection"
"prdwb/bert_hae" -> "deepnlp-cs599-usc/quac"
"prdwb/bert_hae" -> "hsinyuan-huang/FlowQA" ["e"=1]
"prdwb/bert_hae" -> "prdwb/UserIntentPrediction"
"prdwb/bert_hae" -> "yangliuy/NeuralResponseRanking"
"prdwb/bert_hae" -> "MiuLab/FlowDelta"
"mrqa/MRQA-Shared-Task-2019" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"burglarhobbit/machine-reading-comprehension" -> "ujjax/machine-comprehension"
"burglarhobbit/machine-reading-comprehension" -> "zlsh80826/MSMARCO"
"eggie5/RankNet" -> "ShaoQiBNU/RankNet"
"aliannejadi/qulac" -> "microsoft/MIMICS"
"aliannejadi/qulac" -> "aliannejadi/ClariQ"
"aliannejadi/qulac" -> "chauff/conversationalIR"
"nyu-dl/dl4ir-doc2query" -> "nyu-dl/dl4marco-bert"
"nyu-dl/dl4ir-doc2query" -> "castorini/docTTTTTquery"
"nyu-dl/dl4ir-doc2query" -> "spacemanidol/MSMARCO"
"nyu-dl/dl4ir-doc2query" -> "AdeDZY/SIGIR19-BERT-IR"
"nyu-dl/dl4ir-doc2query" -> "castorini/duobert"
"zlsh80826/MSMARCO" -> "burglarhobbit/machine-reading-comprehension"
"metalaman/insuranceqa-pytorch" -> "Chiang97912/QA_LSTM_ATTENTION"
"diazf/indri" -> "diazf/trec-data"
"yanshanjing/RankNet-Pytorch" -> "ShaoQiBNU/RankNet"
"stanford-futuredata/ColBERT" -> "AnswerDotAI/RAGatouille" ["e"=1]
"stanford-futuredata/ColBERT" -> "castorini/pyserini"
"stanford-futuredata/ColBERT" -> "beir-cellar/beir"
"stanford-futuredata/ColBERT" -> "naver/splade"
"stanford-futuredata/ColBERT" -> "facebookresearch/DPR"
"stanford-futuredata/ColBERT" -> "stanfordnlp/dspy" ["e"=1]
"stanford-futuredata/ColBERT" -> "texttron/tevatron"
"stanford-futuredata/ColBERT" -> "huggingface/setfit" ["e"=1]
"stanford-futuredata/ColBERT" -> "AnswerDotAI/rerankers" ["e"=1]
"stanford-futuredata/ColBERT" -> "FlagOpen/FlagEmbedding" ["e"=1]
"stanford-futuredata/ColBERT" -> "castorini/anserini"
"stanford-futuredata/ColBERT" -> "axolotl-ai-cloud/axolotl" ["e"=1]
"stanford-futuredata/ColBERT" -> "UKPLab/sentence-transformers" ["e"=1]
"stanford-futuredata/ColBERT" -> "facebookresearch/contriever"
"stanford-futuredata/ColBERT" -> "princeton-nlp/SimCSE" ["e"=1]
"castorini/pyserini" -> "castorini/anserini"
"castorini/pyserini" -> "beir-cellar/beir"
"castorini/pyserini" -> "texttron/tevatron"
"castorini/pyserini" -> "facebookresearch/DPR"
"castorini/pyserini" -> "castorini/pygaggle"
"castorini/pyserini" -> "naver/splade"
"castorini/pyserini" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"castorini/pyserini" -> "facebookresearch/contriever"
"castorini/pyserini" -> "allenai/ir_datasets"
"castorini/pyserini" -> "stanford-futuredata/ColBERT"
"castorini/pyserini" -> "facebookresearch/FiD"
"castorini/pyserini" -> "sunnweiwei/RankGPT"
"castorini/pyserini" -> "facebookresearch/KILT"
"castorini/pyserini" -> "gabriben/awesome-generative-information-retrieval"
"castorini/pyserini" -> "microsoft/ANCE"
"castorini/duobert" -> "nyu-dl/dl4marco-bert"
"castorini/duobert" -> "capreolus-ir/capreolus"
"castorini/duobert" -> "nyu-dl/dl4ir-doc2query"
"castorini/pygaggle" -> "castorini/pyserini"
"castorini/pygaggle" -> "joaopalotti/trectools"
"castorini/pygaggle" -> "sebastian-hofstaetter/matchmaker"
"castorini/pygaggle" -> "texttron/tevatron"
"castorini/pygaggle" -> "nyu-dl/dl4marco-bert"
"castorini/pygaggle" -> "capreolus-ir/capreolus"
"castorini/pygaggle" -> "castorini/anserini"
"castorini/pygaggle" -> "castorini/duobert"
"castorini/pygaggle" -> "castorini/docTTTTTquery"
"castorini/pygaggle" -> "allenai/ir_datasets"
"castorini/pygaggle" -> "luyug/Reranker"
"castorini/pygaggle" -> "luyug/Condenser"
"castorini/pygaggle" -> "luyug/COIL"
"castorini/pygaggle" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"castorini/pygaggle" -> "castorini/anserini-notebooks"
"facebookresearch/DPR" -> "facebookresearch/FiD"
"facebookresearch/DPR" -> "castorini/pyserini"
"facebookresearch/DPR" -> "danqi/acl2020-openqa-tutorial"
"facebookresearch/DPR" -> "beir-cellar/beir"
"facebookresearch/DPR" -> "microsoft/ANCE"
"facebookresearch/DPR" -> "facebookresearch/contriever"
"facebookresearch/DPR" -> "princeton-nlp/DensePhrases"
"facebookresearch/DPR" -> "facebookresearch/KILT"
"facebookresearch/DPR" -> "google-research/language"
"facebookresearch/DPR" -> "google-research-datasets/natural-questions"
"facebookresearch/DPR" -> "texttron/tevatron"
"facebookresearch/DPR" -> "princeton-nlp/SimCSE" ["e"=1]
"facebookresearch/DPR" -> "castorini/anserini"
"facebookresearch/DPR" -> "AkariAsai/learning_to_retrieve_reasoning_paths"
"facebookresearch/DPR" -> "facebookresearch/GENRE" ["e"=1]
"microsoft/ANCE" -> "thunlp/OpenMatch"
"microsoft/ANCE" -> "Albert-Ma/PROP"
"microsoft/ANCE" -> "jingtaozhan/DRhard"
"microsoft/ANCE" -> "luyug/COIL"
"microsoft/ANCE" -> "sebastian-hofstaetter/matchmaker"
"microsoft/ANCE" -> "facebookresearch/DPR"
"microsoft/ANCE" -> "texttron/tevatron"
"microsoft/ANCE" -> "luyug/Condenser"
"microsoft/ANCE" -> "AdeDZY/DeepCT"
"microsoft/ANCE" -> "luyug/Reranker"
"microsoft/ANCE" -> "staoxiao/RetroMAE"
"microsoft/ANCE" -> "microsoft/MSMARCO-Passage-Ranking"
"microsoft/ANCE" -> "caiyinqiong/Semantic-Retrieval-Models"
"microsoft/ANCE" -> "jingtaozhan/RepBERT-Index"
"microsoft/ANCE" -> "nyu-dl/dl4marco-bert"
"google-research/xtreme" -> "facebookresearch/MLQA"
"google-research/xtreme" -> "facebookresearch/XLM" ["e"=1]
"google-research/xtreme" -> "facebookresearch/XNLI"
"google-research/xtreme" -> "google-research-datasets/tydiqa"
"google-research/xtreme" -> "google-deepmind/xquad"
"google-research/xtreme" -> "linzehui/mRASP" ["e"=1]
"google-research/xtreme" -> "neulab/awesome-align" ["e"=1]
"google-research/xtreme" -> "roomylee/nlp-papers-with-arxiv" ["e"=1]
"google-research/xtreme" -> "facebookresearch/cc_net" ["e"=1]
"google-research/xtreme" -> "facebookresearch/MLDoc"
"google-research/xtreme" -> "facebookresearch/LASER" ["e"=1]
"google-research/xtreme" -> "google-research/multilingual-t5" ["e"=1]
"google-research/xtreme" -> "google-research/electra" ["e"=1]
"google-research/xtreme" -> "shijie-wu/crosslingual-nlp"
"google-research/xtreme" -> "hplt-project/sacremoses" ["e"=1]
"microsoft/DeBERTa" -> "facebookresearch/DPR" ["e"=1]
"microsoft/DeBERTa" -> "beir-cellar/beir" ["e"=1]
"facebookresearch/BLINK" -> "facebookresearch/KILT" ["e"=1]
"facebookresearch/BLINK" -> "facebookresearch/FiD" ["e"=1]
"allegro/allRank" -> "wildltr/ptranking"
"allegro/allRank" -> "ULTR-Community/ULTRA"
"allegro/allRank" -> "tensorflow/ranking" ["e"=1]
"allegro/allRank" -> "haowei01/pytorch-examples"
"allegro/allRank" -> "shiba24/learning2rank"
"allegro/allRank" -> "houchenyu/L2R"
"allegro/allRank" -> "jma127/pyltr"
"allegro/allRank" -> "luyug/Reranker"
"allegro/allRank" -> "rjagerman/pytorchltr"
"allegro/allRank" -> "texttron/tevatron"
"allegro/allRank" -> "acbull/Unbiased_LambdaMart"
"allegro/allRank" -> "nyu-dl/dl4marco-bert"
"allegro/allRank" -> "Guzpenha/transformer_rankers"
"allegro/allRank" -> "beir-cellar/beir"
"allegro/allRank" -> "sebastian-hofstaetter/matchmaker"
"allenai/longformer" -> "facebookresearch/DPR" ["e"=1]
"marcotcr/checklist" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"marcotcr/checklist" -> "google-research/language" ["e"=1]
"patil-suraj/question_generation" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"Hironsan/bertsearch" -> "koursaros-ai/nboost" ["e"=1]
"Hironsan/bertsearch" -> "castorini/anserini" ["e"=1]
"koursaros-ai/nboost" -> "Hironsan/bertsearch" ["e"=1]
"koursaros-ai/nboost" -> "gnes-ai/gnes" ["e"=1]
"koursaros-ai/nboost" -> "nyu-dl/dl4marco-bert"
"koursaros-ai/nboost" -> "md-experiments/elastic_transformers" ["e"=1]
"koursaros-ai/nboost" -> "MighTguY/customized-symspell" ["e"=1]
"koursaros-ai/nboost" -> "PolyAI-LDN/polyai-models" ["e"=1]
"koursaros-ai/nboost" -> "castorini/anserini"
"koursaros-ai/nboost" -> "utterworks/fast-bert" ["e"=1]
"koursaros-ai/nboost" -> "SeaseLtd/rated-ranking-evaluator" ["e"=1]
"koursaros-ai/nboost" -> "ULTR-Community/ULTRA"
"koursaros-ai/nboost" -> "castorini/birch"
"koursaros-ai/nboost" -> "deepset-ai/FARM" ["e"=1]
"koursaros-ai/nboost" -> "oborchers/Fast_Sentence_Embeddings" ["e"=1]
"koursaros-ai/nboost" -> "thunlp/OpenMatch"
"koursaros-ai/nboost" -> "o19s/elasticsearch-learning-to-rank" ["e"=1]
"neubig/lowresource-nlp-bootcamp-2020" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"neubig/lowresource-nlp-bootcamp-2020" -> "facebookresearch/KILT" ["e"=1]
"terrier-org/pyterrier" -> "allenai/ir_datasets"
"terrier-org/pyterrier" -> "Georgetown-IR-Lab/OpenNIR"
"terrier-org/pyterrier" -> "terrierteam/ir_measures"
"terrier-org/pyterrier" -> "terrier-org/terrier-core"
"terrier-org/pyterrier" -> "terrier-org/ecir2021tutorial"
"terrier-org/pyterrier" -> "joaopalotti/trectools"
"terrier-org/pyterrier" -> "capreolus-ir/capreolus"
"terrier-org/pyterrier" -> "AmenRa/ranx"
"terrier-org/pyterrier" -> "sebastian-hofstaetter/matchmaker"
"terrier-org/pyterrier" -> "castorini/anserini"
"terrier-org/pyterrier" -> "texttron/tevatron"
"terrier-org/pyterrier" -> "terrierteam/pyterrier_colbert"
"terrier-org/pyterrier" -> "castorini/pyserini"
"terrier-org/pyterrier" -> "castorini/pygaggle"
"terrier-org/pyterrier" -> "ielab/llm-rankers"
"metarank/metarank" -> "beir-cellar/beir" ["e"=1]
"metarank/metarank" -> "naver/splade" ["e"=1]
"metarank/metarank" -> "markovi/PyClick" ["e"=1]
"facebookresearch/anli" -> "tommccoy1/hans" ["e"=1]
"facebookresearch/anli" -> "facebookresearch/PAQ"
"facebookresearch/anli" -> "AI-secure/InfoBERT" ["e"=1]
"facebookresearch/anli" -> "facebookresearch/KILT"
"facebookresearch/anli" -> "OanaMariaCamburu/e-SNLI"
"sebastian-hofstaetter/matchmaker" -> "sebastian-hofstaetter/neural-ranking-kd"
"sebastian-hofstaetter/matchmaker" -> "sebastian-hofstaetter/tas-balanced-dense-retrieval"
"sebastian-hofstaetter/matchmaker" -> "jingtaozhan/DRhard"
"sebastian-hofstaetter/matchmaker" -> "Georgetown-IR-Lab/OpenNIR"
"sebastian-hofstaetter/matchmaker" -> "luyug/COIL"
"sebastian-hofstaetter/matchmaker" -> "joaopalotti/trectools"
"sebastian-hofstaetter/matchmaker" -> "capreolus-ir/capreolus"
"sebastian-hofstaetter/matchmaker" -> "sebastian-hofstaetter/teaching"
"sebastian-hofstaetter/matchmaker" -> "thunlp/OpenMatch"
"sebastian-hofstaetter/matchmaker" -> "nyu-dl/dl4marco-bert"
"sebastian-hofstaetter/matchmaker" -> "AdeDZY/DeepCT"
"sebastian-hofstaetter/matchmaker" -> "microsoft/ANCE"
"sebastian-hofstaetter/matchmaker" -> "AdeDZY/SIGIR19-BERT-IR"
"sebastian-hofstaetter/matchmaker" -> "allenai/ir_datasets"
"sebastian-hofstaetter/matchmaker" -> "microsoft/TREC-2019-Deep-Learning"
"thunlp/COVID19-IRQA" -> "thunlp/ReInfoSelect"
"facebookresearch/cc_net" -> "google-research/xtreme" ["e"=1]
"markovi/PyClick" -> "varepsilon/clickmodels"
"markovi/PyClick" -> "ULTR-Community/ULTRA"
"markovi/PyClick" -> "o19s/hello-ltr" ["e"=1]
"markovi/PyClick" -> "THUIR/PSCMModel"
"markovi/PyClick" -> "HarrieO/OnlineLearningToRank"
"markovi/PyClick" -> "jma127/pyltr"
"markovi/PyClick" -> "usnistgov/trec_eval"
"markovi/PyClick" -> "terrier-org/ecir2021tutorial"
"markovi/PyClick" -> "mitre/quaerite" ["e"=1]
"castorini/anserini-notebooks" -> "capreolus-ir/capreolus"
"castorini/anserini-notebooks" -> "ielab/asyncval"
"svjan5/GNNs-for-NLP" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"google-research/fast-soft-sort" -> "wildltr/ptranking" ["e"=1]
"microsoft/macaw" -> "chauff/conversationalIR"
"microsoft/macaw" -> "aliannejadi/qulac"
"microsoft/macaw" -> "capreolus-ir/capreolus"
"ULTR-Community/ULTRA" -> "ULTR-Community/ULTRA_pytorch"
"ULTR-Community/ULTRA" -> "acbull/Unbiased_LambdaMart"
"ULTR-Community/ULTRA" -> "QingyaoAi/Unbiased-Learning-to-Rank-with-Unbiased-Propensity-Estimation"
"ULTR-Community/ULTRA" -> "QingyaoAi/Deep-Listwise-Context-Model-for-Ranking-Refinement"
"ULTR-Community/ULTRA" -> "sebastian-hofstaetter/matchmaker"
"ULTR-Community/ULTRA" -> "allegro/allRank"
"ULTR-Community/ULTRA" -> "markovi/PyClick"
"ULTR-Community/ULTRA" -> "wildltr/ptranking"
"ULTR-Community/ULTRA" -> "pl8787/SetRank"
"ULTR-Community/ULTRA" -> "lezzago/LambdaMart"
"ULTR-Community/ULTRA" -> "rank2rec/rerank"
"ULTR-Community/ULTRA" -> "HarrieO/OnlineLearningToRank"
"ULTR-Community/ULTRA" -> "jma127/pyltr"
"ULTR-Community/ULTRA" -> "AdeDZY/DeepCT"
"ULTR-Community/ULTRA" -> "luyug/Condenser"
"AdeDZY/DeepCT" -> "Albert-Ma/PROP"
"AdeDZY/DeepCT" -> "sebastian-hofstaetter/matchmaker"
"AdeDZY/DeepCT" -> "nyu-dl/dl4marco-bert"
"AdeDZY/DeepCT" -> "luyug/COIL"
"AdeDZY/DeepCT" -> "AdeDZY/SIGIR19-BERT-IR"
"AdeDZY/DeepCT" -> "luyug/Condenser"
"AdeDZY/DeepCT" -> "thunlp/OpenMatch"
"AdeDZY/DeepCT" -> "castorini/anserini"
"AdeDZY/DeepCT" -> "allenai/ir_datasets"
"AdeDZY/DeepCT" -> "microsoft/ANCE"
"AdeDZY/DeepCT" -> "luyug/Reranker"
"AdeDZY/DeepCT" -> "castorini/duobert"
"AdeDZY/DeepCT" -> "canjiali/PARADE"
"AdeDZY/DeepCT" -> "jingtaozhan/DRhard"
"AdeDZY/DeepCT" -> "Georgetown-IR-Lab/cedr"
"castorini/docTTTTTquery" -> "nyu-dl/dl4ir-doc2query"
"castorini/docTTTTTquery" -> "nyu-dl/dl4marco-bert"
"castorini/docTTTTTquery" -> "allenai/ir_datasets"
"castorini/docTTTTTquery" -> "sebastian-hofstaetter/matchmaker"
"castorini/docTTTTTquery" -> "texttron/tevatron"
"castorini/docTTTTTquery" -> "luyug/Condenser"
"castorini/docTTTTTquery" -> "castorini/pygaggle"
"castorini/docTTTTTquery" -> "capreolus-ir/capreolus"
"castorini/docTTTTTquery" -> "luyug/COIL"
"castorini/docTTTTTquery" -> "ArvinZhuang/DSI-transformers"
"castorini/docTTTTTquery" -> "joaopalotti/trectools"
"castorini/docTTTTTquery" -> "AdeDZY/DeepCT"
"castorini/docTTTTTquery" -> "UKPLab/gpl"
"castorini/docTTTTTquery" -> "microsoft/MSMARCO-Passage-Ranking"
"castorini/docTTTTTquery" -> "castorini/anserini"
"capreolus-ir/capreolus" -> "capreolus-ir/diffir"
"capreolus-ir/capreolus" -> "andrewyates/profane"
"capreolus-ir/capreolus" -> "Georgetown-IR-Lab/OpenNIR"
"capreolus-ir/capreolus" -> "joaopalotti/trectools"
"capreolus-ir/capreolus" -> "ielab/asyncval"
"allenai/unifiedqa" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"allenai/unifiedqa" -> "facebookresearch/multihop_dense_retrieval" ["e"=1]
"allenai/unifiedqa" -> "facebookresearch/KILT" ["e"=1]
"allenai/unifiedqa" -> "google-research-datasets/QED" ["e"=1]
"allenai/unifiedqa" -> "google-research-datasets/tydiqa" ["e"=1]
"allenai/unifiedqa" -> "facebookresearch/PAQ" ["e"=1]
"google-research/tapas" -> "facebookresearch/DPR" ["e"=1]
"google-research/tapas" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"ot/succinct" -> "ot/ds2i"
"ot/succinct" -> "xxsds/DYNAMIC" ["e"=1]
"ot/succinct" -> "ot/semi_index"
"ot/succinct" -> "fclaude/libcds"
"AmenRa/ranx" -> "allenai/ir_datasets"
"AmenRa/ranx" -> "terrier-org/pyterrier"
"AmenRa/ranx" -> "AmenRa/retriv"
"AmenRa/ranx" -> "joaopalotti/trectools"
"AmenRa/ranx" -> "lightonai/pylate" ["e"=1]
"AmenRa/ranx" -> "castorini/pygaggle"
"AmenRa/ranx" -> "texttron/tevatron"
"AmenRa/ranx" -> "naver/splade"
"AmenRa/ranx" -> "tira-io/ir-experiment-platform"
"AmenRa/ranx" -> "AnswerDotAI/rerankers" ["e"=1]
"AmenRa/ranx" -> "zetaalphavector/InPars"
"AmenRa/ranx" -> "usnistgov/trec_eval"
"AmenRa/ranx" -> "xhluca/bm25s" ["e"=1]
"AmenRa/ranx" -> "castorini/pyserini"
"AmenRa/ranx" -> "caiyinqiong/Semantic-Retrieval-Models"
"Georgetown-IR-Lab/OpenNIR" -> "capreolus-ir/capreolus"
"Georgetown-IR-Lab/OpenNIR" -> "Georgetown-IR-Lab/cedr"
"Georgetown-IR-Lab/OpenNIR" -> "sebastian-hofstaetter/matchmaker"
"Georgetown-IR-Lab/OpenNIR" -> "terrier-org/ecir2021tutorial"
"Georgetown-IR-Lab/OpenNIR" -> "joaopalotti/trectools"
"Georgetown-IR-Lab/OpenNIR" -> "allenai/ir_datasets"
"Georgetown-IR-Lab/OpenNIR" -> "terrier-org/pyterrier"
"Georgetown-IR-Lab/OpenNIR" -> "castorini/anserini-notebooks"
"Georgetown-IR-Lab/OpenNIR" -> "chauff/conversationalIR"
"Georgetown-IR-Lab/OpenNIR" -> "thunlp/OpenMatch"
"Georgetown-IR-Lab/OpenNIR" -> "canjiali/PARADE"
"Georgetown-IR-Lab/OpenNIR" -> "nyu-dl/dl4marco-bert"
"facebookresearch/FiD" -> "facebookresearch/DPR"
"facebookresearch/FiD" -> "facebookresearch/atlas"
"facebookresearch/FiD" -> "facebookresearch/contriever"
"facebookresearch/FiD" -> "facebookresearch/PAQ"
"facebookresearch/FiD" -> "facebookresearch/KILT"
"facebookresearch/FiD" -> "princeton-nlp/DensePhrases"
"facebookresearch/FiD" -> "danqi/acl2020-openqa-tutorial"
"facebookresearch/FiD" -> "castorini/pyserini"
"facebookresearch/FiD" -> "princeton-nlp/TRIME" ["e"=1]
"facebookresearch/FiD" -> "wyu97/GenRead"
"facebookresearch/FiD" -> "DevSinghSachan/emdr2"
"facebookresearch/FiD" -> "facebookresearch/GENRE" ["e"=1]
"facebookresearch/FiD" -> "castorini/pygaggle"
"facebookresearch/FiD" -> "AkariAsai/learning_to_retrieve_reasoning_paths"
"facebookresearch/FiD" -> "bigscience-workshop/t-zero" ["e"=1]
"microsoft/MPNet" -> "laiguokun/Funnel-Transformer" ["e"=1]
"microsoft/MPNet" -> "shijie-wu/crosslingual-nlp"
"microsoft/ProphetNet" -> "facebookresearch/FiD" ["e"=1]
"facebookresearch/KILT" -> "facebookresearch/GENRE" ["e"=1]
"facebookresearch/KILT" -> "facebookresearch/FiD"
"facebookresearch/KILT" -> "facebookresearch/DPR"
"facebookresearch/KILT" -> "facebookresearch/BLINK" ["e"=1]
"facebookresearch/KILT" -> "castorini/pyserini"
"facebookresearch/KILT" -> "facebookresearch/PAQ"
"facebookresearch/KILT" -> "princeton-nlp/DensePhrases"
"facebookresearch/KILT" -> "danqi/acl2020-openqa-tutorial"
"facebookresearch/KILT" -> "beir-cellar/beir"
"facebookresearch/KILT" -> "facebookresearch/LAMA" ["e"=1]
"facebookresearch/KILT" -> "AkariAsai/learning_to_retrieve_reasoning_paths"
"facebookresearch/KILT" -> "facebookresearch/atlas"
"facebookresearch/KILT" -> "AlexTMallen/adaptive-retrieval"
"facebookresearch/KILT" -> "google-research/language"
"facebookresearch/KILT" -> "facebookresearch/ELI5"
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "qipeng/golden-retriever" ["e"=1]
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "facebookresearch/multihop_dense_retrieval"
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "princeton-nlp/DensePhrases"
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "shmsw25/DecompRC" ["e"=1]
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "rajarshd/Multi-Step-Reasoning" ["e"=1]
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "facebookresearch/DPR"
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "seominjoon/denspi" ["e"=1]
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "facebookresearch/PAQ"
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "danqi/acl2020-openqa-tutorial"
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "yuwfan/HGN" ["e"=1]
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "nitishgupta/nmn-drop" ["e"=1]
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "facebookresearch/QA-Overlap"
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "allenai/unifiedqa" ["e"=1]
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "shmsw25/qa-hard-em" ["e"=1]
"AkariAsai/learning_to_retrieve_reasoning_paths" -> "allenai/document-qa" ["e"=1]
"JasonForJoy/Leaderboards-for-Multi-Turn-Response-Selection" -> "yangliuy/NeuralResponseRanking" ["e"=1]
"urvashik/knnlm" -> "facebookresearch/PAQ" ["e"=1]
"teacherpeterpan/Question-Generation-Paper-List" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"soulbliss/NLP-conference-compendium" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"frutik/awesome-search" -> "harpribot/awesome-information-retrieval" ["e"=1]
"SALT-NLP/MixText" -> "princeton-nlp/EntityQuestions" ["e"=1]
"danqi/acl2020-openqa-tutorial" -> "facebookresearch/DPR"
"danqi/acl2020-openqa-tutorial" -> "princeton-nlp/DensePhrases"
"danqi/acl2020-openqa-tutorial" -> "facebookresearch/FiD"
"danqi/acl2020-openqa-tutorial" -> "AkariAsai/learning_to_retrieve_reasoning_paths"
"danqi/acl2020-openqa-tutorial" -> "mrqa/MRQA-Shared-Task-2019" ["e"=1]
"danqi/acl2020-openqa-tutorial" -> "haitian-sun/GraftNet" ["e"=1]
"danqi/acl2020-openqa-tutorial" -> "google-research/language"
"danqi/acl2020-openqa-tutorial" -> "facebookresearch/KILT"
"danqi/acl2020-openqa-tutorial" -> "qipeng/golden-retriever" ["e"=1]
"danqi/acl2020-openqa-tutorial" -> "allenai/document-qa" ["e"=1]
"danqi/acl2020-openqa-tutorial" -> "malllabiisc/EmbedKGQA" ["e"=1]
"danqi/acl2020-openqa-tutorial" -> "thunlp/PLMpapers" ["e"=1]
"danqi/acl2020-openqa-tutorial" -> "thunlp/RCPapers" ["e"=1]
"danqi/acl2020-openqa-tutorial" -> "teacherpeterpan/Question-Generation-Paper-List" ["e"=1]
"danqi/acl2020-openqa-tutorial" -> "google-research-datasets/natural-questions"
"linkedin/detext" -> "ULTR-Community/ULTRA" ["e"=1]
"allenai/dont-stop-pretraining" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"microsoft/fastformers" -> "princeton-nlp/DensePhrases" ["e"=1]
"microsoft/fastformers" -> "studio-ousia/bpr" ["e"=1]
"microsoft/fastformers" -> "facebookresearch/KILT" ["e"=1]
"roomylee/nlp-papers-with-arxiv" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"thunlp/NeuIRPapers" -> "thunlp/ReInfoSelect"
"bplank/awesome-neural-adaptation-in-NLP" -> "xhan77/AdaptaBERT"
"bplank/awesome-neural-adaptation-in-NLP" -> "shijie-wu/crosslingual-nlp"
"facebookresearch/MLQA" -> "google-deepmind/xquad"
"facebookresearch/MLQA" -> "google-research-datasets/tydiqa"
"facebookresearch/MLQA" -> "google-research/xtreme"
"facebookresearch/MLQA" -> "thunlp/XQA"
"facebookresearch/MLQA" -> "apple/ml-mkqa"
"facebookresearch/MLQA" -> "AkariAsai/XORQA"
"apple/ml-mkqa" -> "mia-workshop/MIA-Shared-Task-2022"
"apple/ml-mkqa" -> "google-deepmind/xquad"
"jiangnanboy/learning_to_rank" -> "jma127/pyltr"
"jiangnanboy/learning_to_rank" -> "ChenglongChen/tensorflow-LTR"
"jiangnanboy/learning_to_rank" -> "myeclipse/wsdm_cup_2020_solution"
"jiangnanboy/learning_to_rank" -> "liyinxiao/LambdaRankNN"
"jiangnanboy/learning_to_rank" -> "lezzago/LambdaMart"
"jiangnanboy/learning_to_rank" -> "shiba24/learning2rank"
"jiangnanboy/learning_to_rank" -> "wildltr/ptranking"
"microsoft/MSMARCO-Document-Ranking" -> "Albert-Ma/PROP"
"microsoft/MSMARCO-Document-Ranking" -> "microsoft/MSMARCO-Passage-Ranking"
"microsoft/MSMARCO-Document-Ranking" -> "microsoft/MSMARCO-Document-Ranking-Submissions"
"microsoft/MSMARCO-Document-Ranking" -> "thunlp/OpenMatch"
"xhan77/AdaptaBERT" -> "bzantium/bert-AAD"
"cliang1453/BOND" -> "dmis-lab/GeNER" ["e"=1]
"canjiali/PARADE" -> "capreolus-ir/capreolus"
"cisnlp/simalign" -> "google-research-datasets/tydiqa" ["e"=1]
"pl8787/SetRank" -> "pl8787/wsdm2021-beyond-prp-tutorial"
"google-deepmind/xquad" -> "facebookresearch/MLQA"
"google-deepmind/xquad" -> "apple/ml-mkqa"
"neulab/nn4nlp-concepts" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"thunlp/ReInfoSelect" -> "thunlp/COVID19-IRQA"
"microsoft/MIMICS" -> "aliannejadi/qulac"
"microsoft/MIMICS" -> "aliannejadi/ClariQ"
"microsoft/MIMICS" -> "algoprog/Faspect"
"aliannejadi/ClariQ" -> "aliannejadi/qulac"
"aliannejadi/ClariQ" -> "microsoft/MIMICS"
"aliannejadi/ClariQ" -> "algoprog/Faspect"
"google-research-datasets/tydiqa" -> "facebookresearch/MLQA"
"google-research-datasets/tydiqa" -> "AkariAsai/XORQA"
"google-research-datasets/tydiqa" -> "thunlp/XQA"
"google-research-datasets/tydiqa" -> "google-deepmind/xquad"
"google-research-datasets/tydiqa" -> "cisnlp/simalign" ["e"=1]
"google-research-datasets/tydiqa" -> "google-research-datasets/QED"
"google-research-datasets/tydiqa" -> "facebookresearch/reconsider"
"google-research-datasets/tydiqa" -> "google-research/xtreme"
"thunlp/ConversationQueryRewriter" -> "castorini/chatty-goose"
"thunlp/ConversationQueryRewriter" -> "nickvosk/sigir2020-query-resolution"
"thunlp/ConversationQueryRewriter" -> "thunlp/ConvDR"
"ot/ds2i" -> "ot/partitioned_elias_fano"
"ot/ds2i" -> "ot/succinct"
"ot/ds2i" -> "jermp/clustered_elias_fano_indexes"
"thunlp/OpenMatch" -> "microsoft/ANCE"
"thunlp/OpenMatch" -> "Albert-Ma/PROP"
"thunlp/OpenMatch" -> "sebastian-hofstaetter/matchmaker"
"thunlp/OpenMatch" -> "nyu-dl/dl4marco-bert"
"thunlp/OpenMatch" -> "microsoft/MSMARCO-Document-Ranking"
"thunlp/OpenMatch" -> "thunlp/NeuIRPapers"
"thunlp/OpenMatch" -> "luyug/Reranker"
"thunlp/OpenMatch" -> "jingtaozhan/DRhard"
"thunlp/OpenMatch" -> "AdeDZY/DeepCT"
"thunlp/OpenMatch" -> "microsoft/MSMARCO-Passage-Ranking"
"thunlp/OpenMatch" -> "Georgetown-IR-Lab/OpenNIR"
"thunlp/OpenMatch" -> "luyug/COIL"
"thunlp/OpenMatch" -> "luyug/Condenser"
"thunlp/OpenMatch" -> "oaqa/FlexNeuART"
"thunlp/OpenMatch" -> "allenai/ir_datasets"
"liyinxiao/LambdaRankNN" -> "ChenglongChen/tensorflow-LTR"
"liyinxiao/LambdaRankNN" -> "liyinxiao/Ranking_Papers"
"liyinxiao/LambdaRankNN" -> "airalcorn2/RankNet"
"liyinxiao/LambdaRankNN" -> "houchenyu/L2R"
"MiuLab/FlowDelta" -> "prdwb/attentive_history_selection"
"jingtaozhan/RepBERT-Index" -> "jingtaozhan/DRhard"
"jingtaozhan/RepBERT-Index" -> "jingtaozhan/disentangled-retriever"
"jingtaozhan/RepBERT-Index" -> "jingtaozhan/RepCONC"
"qipeng/golden-retriever" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"qipeng/golden-retriever" -> "facebookresearch/QA-Overlap" ["e"=1]
"qipeng/golden-retriever" -> "facebookresearch/multihop_dense_retrieval" ["e"=1]
"prdwb/orconvqa-release" -> "prdwb/attentive_history_selection"
"prdwb/orconvqa-release" -> "castorini/chatty-goose"
"prdwb/orconvqa-release" -> "thunlp/ConvDR"
"rjagerman/pytorchltr" -> "rjagerman/sigir2020"
"facebookresearch/QA-Overlap" -> "facebookresearch/reconsider"
"facebookresearch/QA-Overlap" -> "facebookresearch/PAQ"
"prdwb/attentive_history_selection" -> "dmis-lab/excord"
"prdwb/attentive_history_selection" -> "MiuLab/FlowDelta"
"prdwb/attentive_history_selection" -> "JD-AI-Research-NLP/RoR"
"prdwb/attentive_history_selection" -> "prdwb/bert_hae"
"prdwb/attentive_history_selection" -> "prdwb/orconvqa-release"
"castorini/chatty-goose" -> "castorini/cqe"
"facebookresearch/GENRE" -> "facebookresearch/KILT" ["e"=1]
"facebookresearch/GENRE" -> "facebookresearch/DPR" ["e"=1]
"facebookresearch/GENRE" -> "facebookresearch/FiD" ["e"=1]
"facebookresearch/GENRE" -> "microsoft/ANCE" ["e"=1]
"facebookresearch/GENRE" -> "princeton-nlp/DensePhrases" ["e"=1]
"facebookresearch/GENRE" -> "facebookresearch/SEAL" ["e"=1]
"Albert-Ma/PROP" -> "Albert-Ma/COSTA"
"Albert-Ma/PROP" -> "jingtaozhan/DRhard"
"Albert-Ma/PROP" -> "luyug/COIL"
"Albert-Ma/PROP" -> "jingtaozhan/RepBERT-Index"
"Albert-Ma/PROP" -> "microsoft/ANCE"
"Albert-Ma/PROP" -> "thunlp/OpenMatch"
"Albert-Ma/PROP" -> "microsoft/MSMARCO-Document-Ranking"
"Albert-Ma/PROP" -> "AdeDZY/DeepCT"
"Albert-Ma/PROP" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"Albert-Ma/PROP" -> "zhengyima/Anchors"
"Albert-Ma/PROP" -> "xuanyuan14/ARES" ["e"=1]
"Albert-Ma/PROP" -> "microsoft/MSMARCO-Document-Ranking-Submissions"
"jingtaozhan/DRhard" -> "jingtaozhan/RepBERT-Index"
"jingtaozhan/DRhard" -> "jingtaozhan/RepCONC"
"jingtaozhan/DRhard" -> "jingtaozhan/JPQ"
"jingtaozhan/DRhard" -> "luyug/COIL"
"jingtaozhan/DRhard" -> "Albert-Ma/PROP"
"jingtaozhan/DRhard" -> "sebastian-hofstaetter/matchmaker"
"jingtaozhan/DRhard" -> "jingtaozhan/disentangled-retriever"
"jingtaozhan/DRhard" -> "microsoft/ANCE"
"jingtaozhan/DRhard" -> "luyug/Condenser"
"jingtaozhan/DRhard" -> "caiyinqiong/Semantic-Retrieval-Models"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "caiyinqiong/Semantic-Retrieval-Models"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "Albert-Ma/PROP"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "gabriben/awesome-generative-information-retrieval"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "texttron/tevatron"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "castorini/pyserini"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "RUCAIBox/DenseRetrieval"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "thunlp/OpenMatch"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "RUC-NLPIR/LLM4IR-Survey"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "beir-cellar/beir"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "allenai/ir_datasets"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "castorini/pygaggle"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "castorini/anserini"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "luyug/Condenser"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "sunnweiwei/RankGPT"
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" -> "AdeDZY/DeepCT"
"luyug/Reranker" -> "luyug/COIL"
"luyug/Reranker" -> "luyug/Condenser"
"luyug/Reranker" -> "texttron/tevatron"
"luyug/Reranker" -> "thunlp/OpenMatch"
"luyug/Reranker" -> "luyug/Dense"
"luyug/Reranker" -> "sebastian-hofstaetter/matchmaker"
"luyug/Reranker" -> "microsoft/ANCE"
"luyug/Reranker" -> "AdeDZY/DeepCT"
"luyug/Reranker" -> "jingtaozhan/DRhard"
"luyug/Reranker" -> "staoxiao/RetroMAE"
"luyug/Reranker" -> "Albert-Ma/PROP"
"luyug/Reranker" -> "castorini/pygaggle"
"luyug/Reranker" -> "sebastian-hofstaetter/neural-ranking-kd"
"luyug/Reranker" -> "luyug/GC-DPR"
"luyug/Reranker" -> "microsoft/MSMARCO-Document-Ranking"
"luyug/COIL" -> "jingtaozhan/DRhard"
"luyug/COIL" -> "luyug/Reranker"
"luyug/COIL" -> "Albert-Ma/PROP"
"luyug/COIL" -> "luyug/Condenser"
"luyug/COIL" -> "DI4IR/SIGIR2021"
"luyug/COIL" -> "sebastian-hofstaetter/matchmaker"
"luyug/COIL" -> "ielab/asyncval"
"luyug/COIL" -> "microsoft/ANCE"
"luyug/COIL" -> "princeton-nlp/EntityQuestions"
"luyug/COIL" -> "thongnt99/learned-sparse-retrieval"
"luyug/COIL" -> "jingtaozhan/RepCONC"
"luyug/COIL" -> "AdeDZY/DeepCT"
"luyug/COIL" -> "sebastian-hofstaetter/tas-balanced-dense-retrieval"
"luyug/Condenser" -> "luyug/COIL"
"luyug/Condenser" -> "luyug/Reranker"
"luyug/Condenser" -> "jingtaozhan/DRhard"
"luyug/Condenser" -> "texttron/tevatron"
"luyug/Condenser" -> "luyug/GradCache"
"luyug/Condenser" -> "luyug/Dense"
"luyug/Condenser" -> "sebastian-hofstaetter/neural-ranking-kd"
"luyug/Condenser" -> "microsoft/ANCE"
"luyug/Condenser" -> "AdeDZY/DeepCT"
"luyug/Condenser" -> "luyug/GC-DPR"
"luyug/Condenser" -> "jingtaozhan/RepCONC"
"luyug/Condenser" -> "castorini/docTTTTTquery"
"luyug/Condenser" -> "sebastian-hofstaetter/matchmaker"
"luyug/Condenser" -> "zetaalphavector/InPars"
"luyug/Condenser" -> "thunlp/OpenMatch"
"ULTR-Community/ULTRA_pytorch" -> "lixsh6/Tencent_wsdm_cup2023" ["e"=1]
"ULTR-Community/ULTRA_pytorch" -> "ULTR-Community/ULTRA"
"luyug/Dense" -> "ielab/asyncval"
"MaartenGr/KeyBERT" -> "stanford-futuredata/ColBERT" ["e"=1]
"princeton-nlp/SimCSE" -> "facebookresearch/DPR" ["e"=1]
"google-research/multilingual-t5" -> "google-research/xtreme" ["e"=1]
"google-research/multilingual-t5" -> "google-research/language" ["e"=1]
"yuchenlin/rebiber" -> "facebookresearch/DPR" ["e"=1]
"stanford-futuredata/Baleen" -> "hover-nlp/hover"
"attardi/wikiextractor" -> "facebookresearch/DPR" ["e"=1]
"beir-cellar/beir" -> "castorini/pyserini"
"beir-cellar/beir" -> "facebookresearch/DPR"
"beir-cellar/beir" -> "texttron/tevatron"
"beir-cellar/beir" -> "naver/splade"
"beir-cellar/beir" -> "castorini/anserini"
"beir-cellar/beir" -> "stanford-futuredata/ColBERT"
"beir-cellar/beir" -> "embeddings-benchmark/mteb"
"beir-cellar/beir" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"beir-cellar/beir" -> "allenai/ir_datasets"
"beir-cellar/beir" -> "facebookresearch/contriever"
"beir-cellar/beir" -> "castorini/pygaggle"
"beir-cellar/beir" -> "sebastian-hofstaetter/teaching"
"beir-cellar/beir" -> "facebookresearch/KILT"
"beir-cellar/beir" -> "cvangysel/pytrec_eval"
"beir-cellar/beir" -> "UKPLab/gpl"
"allenai/ir_datasets" -> "terrierteam/ir_measures"
"allenai/ir_datasets" -> "terrier-org/pyterrier"
"allenai/ir_datasets" -> "capreolus-ir/capreolus"
"allenai/ir_datasets" -> "Georgetown-IR-Lab/OpenNIR"
"allenai/ir_datasets" -> "texttron/tevatron"
"allenai/ir_datasets" -> "joaopalotti/trectools"
"allenai/ir_datasets" -> "sebastian-hofstaetter/matchmaker"
"allenai/ir_datasets" -> "AmenRa/ranx"
"allenai/ir_datasets" -> "castorini/docTTTTTquery"
"allenai/ir_datasets" -> "terrier-org/ecir2021tutorial"
"allenai/ir_datasets" -> "AdeDZY/DeepCT"
"allenai/ir_datasets" -> "sebastian-hofstaetter/teaching"
"allenai/ir_datasets" -> "luyug/COIL"
"allenai/ir_datasets" -> "thongnt99/learned-sparse-retrieval"
"allenai/ir_datasets" -> "castorini/pyserini"
"naver/splade" -> "texttron/tevatron"
"naver/splade" -> "beir-cellar/beir"
"naver/splade" -> "castorini/pyserini"
"naver/splade" -> "castorini/anserini"
"naver/splade" -> "allenai/ir_datasets"
"naver/splade" -> "stanford-futuredata/ColBERT"
"naver/splade" -> "castorini/docTTTTTquery"
"naver/splade" -> "luyug/Condenser"
"naver/splade" -> "sebastian-hofstaetter/matchmaker"
"naver/splade" -> "caiyinqiong/Semantic-Retrieval-Models"
"naver/splade" -> "gabriben/awesome-generative-information-retrieval"
"naver/splade" -> "staoxiao/RetroMAE"
"naver/splade" -> "project-miracl/miracl"
"naver/splade" -> "zetaalphavector/InPars"
"naver/splade" -> "facebookresearch/dpr-scale"
"zhijing-jin/nlp-phd-global-equality" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"caiyinqiong/Semantic-Retrieval-Models" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"caiyinqiong/Semantic-Retrieval-Models" -> "texttron/tevatron"
"caiyinqiong/Semantic-Retrieval-Models" -> "jingtaozhan/DRhard"
"caiyinqiong/Semantic-Retrieval-Models" -> "luyug/COIL"
"caiyinqiong/Semantic-Retrieval-Models" -> "sebastian-hofstaetter/matchmaker"
"caiyinqiong/Semantic-Retrieval-Models" -> "microsoft/ANCE"
"caiyinqiong/Semantic-Retrieval-Models" -> "IR-LLM/Awesome-Information-Retrieval-in-the-Age-of-Large-Language-Model" ["e"=1]
"caiyinqiong/Semantic-Retrieval-Models" -> "jingtaozhan/RepCONC"
"caiyinqiong/Semantic-Retrieval-Models" -> "staoxiao/RetroMAE"
"caiyinqiong/Semantic-Retrieval-Models" -> "RUCAIBox/DenseRetrieval"
"caiyinqiong/Semantic-Retrieval-Models" -> "allenai/ir_datasets"
"caiyinqiong/Semantic-Retrieval-Models" -> "jingtaozhan/JPQ"
"caiyinqiong/Semantic-Retrieval-Models" -> "naver/splade"
"caiyinqiong/Semantic-Retrieval-Models" -> "castorini/pygaggle"
"caiyinqiong/Semantic-Retrieval-Models" -> "zetaalphavector/InPars"
"teddykoker/torchsort" -> "allegro/allRank" ["e"=1]
"terrierteam/ir_measures" -> "seanmacavaney/autoqrels"
"terrierteam/ir_measures" -> "capreolus-ir/diffir"
"terrierteam/ir_measures" -> "allenai/ir_datasets"
"lintool/IR-Reproducibility" -> "leifos/simiir"
"sebastian-hofstaetter/tas-balanced-dense-retrieval" -> "OpenMatch/ANCE-Tele"
"sebastian-hofstaetter/tas-balanced-dense-retrieval" -> "HansiZeng/CL-DRD"
"terrier-org/ecir2021tutorial" -> "Georgetown-IR-Lab/OpenNIR"
"terrier-org/ecir2021tutorial" -> "terrier-org/pyterrier"
"terrier-org/ecir2021tutorial" -> "allenai/ir_datasets"
"terrier-org/ecir2021tutorial" -> "joaopalotti/trectools"
"terrier-org/ecir2021tutorial" -> "capreolus-ir/capreolus"
"terrier-org/ecir2021tutorial" -> "diazf/trec-data"
"terrier-org/ecir2021tutorial" -> "diazf/indri"
"zliucr/CrossNER" -> "xhan77/AdaptaBERT" ["e"=1]
"princeton-nlp/LM-BFF" -> "princeton-nlp/DensePhrases" ["e"=1]
"princeton-nlp/LM-BFF" -> "facebookresearch/DPR" ["e"=1]
"princeton-nlp/LM-BFF" -> "microsoft/ANCE" ["e"=1]
"styfeng/DataAug4NLP" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"sebastian-hofstaetter/neural-ranking-kd" -> "sebastian-hofstaetter/matchmaker"
"sebastian-hofstaetter/neural-ranking-kd" -> "sebastian-hofstaetter/tas-balanced-dense-retrieval"
"sebastian-hofstaetter/neural-ranking-kd" -> "luyug/Condenser"
"princeton-nlp/DensePhrases" -> "facebookresearch/FiD"
"princeton-nlp/DensePhrases" -> "danqi/acl2020-openqa-tutorial"
"princeton-nlp/DensePhrases" -> "facebookresearch/DPR"
"princeton-nlp/DensePhrases" -> "dmis-lab/GeNER"
"princeton-nlp/DensePhrases" -> "princeton-nlp/EntityQuestions"
"princeton-nlp/DensePhrases" -> "AkariAsai/learning_to_retrieve_reasoning_paths"
"princeton-nlp/DensePhrases" -> "facebookresearch/KILT"
"princeton-nlp/DensePhrases" -> "facebookresearch/PAQ"
"princeton-nlp/DensePhrases" -> "facebookresearch/multihop_dense_retrieval"
"princeton-nlp/DensePhrases" -> "microsoft/ANCE"
"princeton-nlp/DensePhrases" -> "studio-ousia/bpr"
"princeton-nlp/DensePhrases" -> "princeton-nlp/LM-BFF" ["e"=1]
"princeton-nlp/DensePhrases" -> "facebookresearch/GENRE" ["e"=1]
"princeton-nlp/DensePhrases" -> "shmsw25/bart-closed-book-qa"
"princeton-nlp/DensePhrases" -> "nyu-dl/dl4marco-bert"
"luyug/GC-DPR" -> "luyug/GradCache"
"luyug/GC-DPR" -> "luyug/Condenser"
"studio-ousia/bpr" -> "jingtaozhan/JPQ"
"studio-ousia/bpr" -> "facebookresearch/reconsider"
"jingtaozhan/JPQ" -> "jingtaozhan/RepCONC"
"jingtaozhan/JPQ" -> "jingtaozhan/DRhard"
"jingtaozhan/JPQ" -> "jingtaozhan/disentangled-retriever"
"facebookresearch/multihop_dense_retrieval" -> "facebookresearch/PAQ"
"facebookresearch/multihop_dense_retrieval" -> "teacherpeterpan/Unsupervised-Multi-hop-QA" ["e"=1]
"facebookresearch/multihop_dense_retrieval" -> "AkariAsai/learning_to_retrieve_reasoning_paths"
"facebookresearch/multihop_dense_retrieval" -> "qipeng/golden-retriever" ["e"=1]
"facebookresearch/multihop_dense_retrieval" -> "facebookresearch/reconsider"
"facebookresearch/multihop_dense_retrieval" -> "yuwfan/HGN" ["e"=1]
"facebookresearch/multihop_dense_retrieval" -> "zycdev/AISO" ["e"=1]
"facebookresearch/multihop_dense_retrieval" -> "studio-ousia/bpr"
"facebookresearch/multihop_dense_retrieval" -> "shmsw25/qa-hard-em" ["e"=1]
"facebookresearch/reconsider" -> "soco-ai/SF-QA"
"facebookresearch/reconsider" -> "AkariAsai/unanswerable_qa" ["e"=1]
"yasserg/jforests" -> "rjagerman/scalarank"
"mkusner/wmd" -> "aseveryn/deep-qa" ["e"=1]
"4AI/AGN" -> "4AI/RAN"
"pgvector/pgvector-python" -> "stanford-futuredata/ColBERT" ["e"=1]
"luyug/GradCache" -> "luyug/GC-DPR"
"luyug/GradCache" -> "luyug/Condenser"
"luyug/GradCache" -> "texttron/tevatron"
"luyug/GradCache" -> "luyug/COIL"
"luyug/GradCache" -> "facebookresearch/dpr-scale"
"luyug/GradCache" -> "luyug/Reranker"
"luyug/GradCache" -> "DAMO-NLP-SG/Inf-CLIP" ["e"=1]
"luyug/GradCache" -> "jingtaozhan/DRhard"
"luyug/GradCache" -> "sebastian-hofstaetter/tas-balanced-dense-retrieval"
"luyug/GradCache" -> "microsoft/ANCE"
"luyug/GradCache" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"luyug/GradCache" -> "ContextualAI/gritlm"
"luyug/GradCache" -> "staoxiao/RetroMAE"
"luyug/GradCache" -> "nomic-ai/contrastors"
"luyug/GradCache" -> "sebastian-hofstaetter/matchmaker"
"stanford-crfm/mistral" -> "facebookresearch/KILT" ["e"=1]
"unicamp-dl/mMARCO" -> "hltcoe/ColBERT-X"
"unicamp-dl/mMARCO" -> "castorini/mr.tydi"
"unicamp-dl/mMARCO" -> "zetaalphavector/InPars"
"unicamp-dl/mMARCO" -> "castorini/anserini-notebooks"
"unicamp-dl/mMARCO" -> "ielab/asyncval"
"unicamp-dl/mMARCO" -> "project-miracl/miracl"
"aseveryn/deep-qa" -> "shashankg7/Keras-CNN-QA"
"aseveryn/deep-qa" -> "zhangzibin/PairCNN-Ranking"
"aseveryn/deep-qa" -> "brmson/Sentence-selection"
"aseveryn/deep-qa" -> "castorini/NCE-CNN-Torch" ["e"=1]
"aseveryn/deep-qa" -> "betterenvi/QA-rankit"
"aseveryn/deep-qa" -> "carpedm20/attentive-reader-tensorflow" ["e"=1]
"aseveryn/deep-qa" -> "Isminoula/DL-to-Rank"
"DevSinghSachan/emdr2" -> "facebookresearch/reconsider"
"AkariAsai/CORA" -> "AkariAsai/XORQA"
"AkariAsai/CORA" -> "castorini/mr.tydi"
"StonyBrookNLP/musique" -> "Alab-NII/2wikimultihop"
"StonyBrookNLP/musique" -> "teacherpeterpan/Unsupervised-Multi-hop-QA" ["e"=1]
"StonyBrookNLP/musique" -> "stanford-futuredata/Baleen"
"Isminoula/DL-to-Rank" -> "aseveryn/deep-qa"
"Alab-NII/2wikimultihop" -> "StonyBrookNLP/musique"
"Alab-NII/2wikimultihop" -> "eladsegal/strategyqa"
"eladsegal/strategyqa" -> "Alab-NII/2wikimultihop"
"apple/ml-qrecc" -> "apple/ml-knowledge-conflicts"
"apple/ml-qrecc" -> "McGill-NLP/topiocqa" ["e"=1]
"apple/ml-qrecc" -> "thunlp/ConvDR"
"apple/ml-qrecc" -> "scai-conf/SCAI-QReCC-21"
"apple/ml-qrecc" -> "thunlp/ConversationQueryRewriter"
"apple/ml-qrecc" -> "prdwb/orconvqa-release"
"allenai/naacl2021-longdoc-tutorial" -> "princeton-nlp/DensePhrases" ["e"=1]
"discobot/ml-handbook" -> "discobot/wiki_crawl"
"shaoyx/UniNet" -> "DuoLife-QNL/GraSorw"
"shaoyx/UniNet" -> "staoxiao/LibVQ"
"morningmoni/GAR" -> "voidism/EAR"
"morningmoni/GAR" -> "DevSinghSachan/unsupervised-passage-reranking"
"castorini/mr.tydi" -> "AkariAsai/XORQA"
"castorini/mr.tydi" -> "AkariAsai/CORA"
"microsoft/MSMARCO-Document-Ranking-Submissions" -> "microsoft/MSMARCO-Passage-Ranking-Submissions"
"facebookresearch/PAQ" -> "facebookresearch/QA-Overlap"
"facebookresearch/PAQ" -> "facebookresearch/multihop_dense_retrieval"
"facebookresearch/PAQ" -> "facebookresearch/FiD"
"facebookresearch/PAQ" -> "studio-ousia/bpr"
"facebookresearch/PAQ" -> "dmis-lab/GeNER"
"princeton-nlp/OptiPrompt" -> "princeton-nlp/EntityQuestions" ["e"=1]
"javiergonzalezh/dpp" -> "mehdidc/dpp"
"AkariAsai/XORQA" -> "AkariAsai/CORA"
"AkariAsai/XORQA" -> "castorini/mr.tydi"
"dmis-lab/excord" -> "prdwb/attentive_history_selection"
"dmis-lab/excord" -> "JD-AI-Research-NLP/RoR"
"microsoft/SpeedyRec" -> "microsoft/MoPQ"
"microsoft/SpeedyRec" -> "microsoft/BiDR"
"PaddlePaddle/RocketQA" -> "baidu/DuReader" ["e"=1]
"PaddlePaddle/RocketQA" -> "facebookresearch/DPR"
"PaddlePaddle/RocketQA" -> "texttron/tevatron"
"PaddlePaddle/RocketQA" -> "RUCAIBox/DenseRetrieval"
"PaddlePaddle/RocketQA" -> "Alibaba-NLP/Multi-CPR"
"PaddlePaddle/RocketQA" -> "castorini/pyserini"
"PaddlePaddle/RocketQA" -> "beir-cellar/beir"
"PaddlePaddle/RocketQA" -> "luyug/Condenser"
"PaddlePaddle/RocketQA" -> "luhua-rain/MRC_Competition_Dureader" ["e"=1]
"PaddlePaddle/RocketQA" -> "PaddlePaddle/Research" ["e"=1]
"PaddlePaddle/RocketQA" -> "jingtaozhan/DRhard"
"PaddlePaddle/RocketQA" -> "microsoft/ANCE"
"PaddlePaddle/RocketQA" -> "PaddlePaddle/Knover" ["e"=1]
"PaddlePaddle/RocketQA" -> "THUIR/T2Ranking"
"PaddlePaddle/RocketQA" -> "thu-coai/CDial-GPT" ["e"=1]
"texttron/tevatron" -> "castorini/pyserini"
"texttron/tevatron" -> "luyug/Condenser"
"texttron/tevatron" -> "caiyinqiong/Semantic-Retrieval-Models"
"texttron/tevatron" -> "RUCAIBox/DenseRetrieval"
"texttron/tevatron" -> "luyug/Reranker"
"texttron/tevatron" -> "naver/splade"
"texttron/tevatron" -> "staoxiao/RetroMAE"
"texttron/tevatron" -> "allenai/ir_datasets"
"texttron/tevatron" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"texttron/tevatron" -> "beir-cellar/beir"
"texttron/tevatron" -> "facebookresearch/dpr-scale"
"texttron/tevatron" -> "microsoft/ANCE"
"texttron/tevatron" -> "sebastian-hofstaetter/matchmaker"
"texttron/tevatron" -> "castorini/pygaggle"
"texttron/tevatron" -> "gabriben/awesome-generative-information-retrieval"
"jingtaozhan/RepCONC" -> "jingtaozhan/JPQ"
"jingtaozhan/RepCONC" -> "jingtaozhan/DRhard"
"jingtaozhan/RepCONC" -> "staoxiao/LibVQ"
"jingtaozhan/RepCONC" -> "jingtaozhan/RepBERT-Index"
"jingtaozhan/RepCONC" -> "HansiZeng/CL-DRD"
"jingtaozhan/RepCONC" -> "oneal2000/Wikiformer" ["e"=1]
"facebookresearch/dpr-scale" -> "DevSinghSachan/emdr2"
"facebookresearch/dpr-scale" -> "texttron/tevatron"
"facebookresearch/dpr-scale" -> "facebookresearch/contriever"
"facebookresearch/dpr-scale" -> "microsoft/ANCE"
"facebookresearch/dpr-scale" -> "OpenMatch/COCO-DR"
"facebookresearch/dpr-scale" -> "facebookresearch/PAQ"
"facebookresearch/dpr-scale" -> "sebastian-hofstaetter/matchmaker"
"facebookresearch/dpr-scale" -> "ArvinZhuang/DSI-QG"
"facebookresearch/dpr-scale" -> "facebookresearch/atlas"
"facebookresearch/dpr-scale" -> "luyug/GradCache"
"microsoft/AR2" -> "microsoft/advNLG"
"facebookresearch/contriever" -> "facebookresearch/FiD"
"facebookresearch/contriever" -> "castorini/pyserini"
"facebookresearch/contriever" -> "texttron/tevatron"
"facebookresearch/contriever" -> "facebookresearch/DPR"
"facebookresearch/contriever" -> "facebookresearch/dpr-scale"
"facebookresearch/contriever" -> "facebookresearch/atlas"
"facebookresearch/contriever" -> "beir-cellar/beir"
"facebookresearch/contriever" -> "microsoft/ANCE"
"facebookresearch/contriever" -> "AkariAsai/self-rag" ["e"=1]
"facebookresearch/contriever" -> "princeton-nlp/ALCE"
"facebookresearch/contriever" -> "staoxiao/RetroMAE"
"facebookresearch/contriever" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"facebookresearch/contriever" -> "luyug/Condenser"
"facebookresearch/contriever" -> "facebookresearch/KILT"
"facebookresearch/contriever" -> "naver/splade"
"staoxiao/LibVQ" -> "microsoft/BiDR"
"staoxiao/LibVQ" -> "jingtaozhan/RepCONC"
"staoxiao/LibVQ" -> "shaoyx/UniNet"
"staoxiao/LibVQ" -> "namespace-Pt/Adon"
"ArvinZhuang/DSI-transformers" -> "ArvinZhuang/DSI-QG"
"ArvinZhuang/DSI-transformers" -> "solidsea98/Neural-Corpus-Indexer-NCI"
"ArvinZhuang/DSI-transformers" -> "facebookresearch/SEAL"
"ArvinZhuang/DSI-transformers" -> "m-shilpa/Transformer_Memory_As_A_Differentiable_Search_Index"
"ArvinZhuang/DSI-transformers" -> "VerdureChen/Understanding_DSI"
"ArvinZhuang/DSI-transformers" -> "zetaalphavector/InPars"
"ArvinZhuang/DSI-transformers" -> "castorini/docTTTTTquery"
"ArvinZhuang/DSI-transformers" -> "thongnt99/learned-sparse-retrieval"
"facebookresearch/SEAL" -> "ArvinZhuang/DSI-QG"
"facebookresearch/SEAL" -> "ArvinZhuang/DSI-transformers"
"facebookresearch/SEAL" -> "solidsea98/Neural-Corpus-Indexer-NCI"
"facebookresearch/SEAL" -> "liyongqi67/MINDER"
"facebookresearch/SEAL" -> "HansiZeng/RIPOR"
"facebookresearch/SEAL" -> "ict-bigdatalab/CorpusBrain"
"facebookresearch/SEAL" -> "wyu97/GenRead"
"facebookresearch/SEAL" -> "texttron/tevatron"
"Chriskuei/GERE" -> "ict-bigdatalab/CorpusBrain"
"Muennighoff/sgpt" -> "xlang-ai/instructor-embedding"
"Muennighoff/sgpt" -> "texttron/tevatron"
"Muennighoff/sgpt" -> "beir-cellar/beir"
"Muennighoff/sgpt" -> "ContextualAI/gritlm"
"Muennighoff/sgpt" -> "naver/splade"
"Muennighoff/sgpt" -> "embeddings-benchmark/mteb"
"Muennighoff/sgpt" -> "castorini/pyserini"
"Muennighoff/sgpt" -> "sunnweiwei/RankGPT"
"Muennighoff/sgpt" -> "zetaalphavector/InPars"
"Muennighoff/sgpt" -> "luyug/GradCache"
"Muennighoff/sgpt" -> "UKPLab/gpl"
"Muennighoff/sgpt" -> "OpenMatch/COCO-DR"
"Muennighoff/sgpt" -> "facebookresearch/contriever"
"Muennighoff/sgpt" -> "facebookresearch/dpr-scale"
"Muennighoff/sgpt" -> "wangyuxinwhy/uniem" ["e"=1]
"facebookresearch/Sphere" -> "facebookresearch/KILT" ["e"=1]
"facebookresearch/Sphere" -> "castorini/pyserini" ["e"=1]
"facebookresearch/Sphere" -> "facebookresearch/SEAL" ["e"=1]
"wikipedia2vec/wikipedia2vec" -> "facebookresearch/KILT" ["e"=1]
"embeddings-benchmark/mteb" -> "beir-cellar/beir"
"embeddings-benchmark/mteb" -> "FlagOpen/FlagEmbedding" ["e"=1]
"embeddings-benchmark/mteb" -> "xlang-ai/instructor-embedding"
"embeddings-benchmark/mteb" -> "huggingface/text-embeddings-inference" ["e"=1]
"embeddings-benchmark/mteb" -> "Muennighoff/sgpt"
"embeddings-benchmark/mteb" -> "McGill-NLP/llm2vec"
"embeddings-benchmark/mteb" -> "naver/splade"
"embeddings-benchmark/mteb" -> "wangyuxinwhy/uniem" ["e"=1]
"embeddings-benchmark/mteb" -> "stanford-futuredata/ColBERT"
"embeddings-benchmark/mteb" -> "princeton-nlp/SimCSE" ["e"=1]
"embeddings-benchmark/mteb" -> "xhluca/bm25s" ["e"=1]
"embeddings-benchmark/mteb" -> "explodinggradients/ragas" ["e"=1]
"embeddings-benchmark/mteb" -> "netease-youdao/BCEmbedding" ["e"=1]
"embeddings-benchmark/mteb" -> "castorini/pyserini"
"embeddings-benchmark/mteb" -> "open-compass/opencompass" ["e"=1]
"lucidrains/RETRO-pytorch" -> "facebookresearch/atlas" ["e"=1]
"lucidrains/RETRO-pytorch" -> "facebookresearch/contriever" ["e"=1]
"lucidrains/RETRO-pytorch" -> "AI21Labs/in-context-ralm" ["e"=1]
"lucidrains/RETRO-pytorch" -> "castorini/pyserini" ["e"=1]
"lucidrains/RETRO-pytorch" -> "facebookresearch/FiD" ["e"=1]
"lucidrains/RETRO-pytorch" -> "texttron/tevatron" ["e"=1]
"lucidrains/memorizing-transformers-pytorch" -> "ArvinZhuang/DSI-transformers" ["e"=1]
"acl-org/aclpubcheck" -> "facebookresearch/DPR" ["e"=1]
"acl-org/aclpubcheck" -> "facebookresearch/KILT" ["e"=1]
"bigscience-workshop/t-zero" -> "facebookresearch/FiD" ["e"=1]
"google/rax" -> "ULTR-Community/ULTRA_pytorch"
"smfrpc/smf" -> "phaistos-networks/Trinity" ["e"=1]
"castorini/anserini" -> "castorini/pyserini"
"castorini/anserini" -> "nyu-dl/dl4marco-bert"
"castorini/anserini" -> "AdeDZY/DeepCT"
"castorini/anserini" -> "naver/splade"
"castorini/anserini" -> "castorini/pygaggle"
"castorini/anserini" -> "texttron/tevatron"
"castorini/anserini" -> "beir-cellar/beir"
"castorini/anserini" -> "castorini/docTTTTTquery"
"castorini/anserini" -> "thunlp/OpenMatch"
"castorini/anserini" -> "facebookresearch/DPR"
"castorini/anserini" -> "allenai/ir_datasets"
"castorini/anserini" -> "castorini/anserini-notebooks"
"castorini/anserini" -> "usnistgov/trec_eval"
"castorini/anserini" -> "microsoft/ANCE"
"castorini/anserini" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"usnistgov/trec_eval" -> "cvangysel/pytrec_eval"
"usnistgov/trec_eval" -> "joaopalotti/trectools"
"usnistgov/trec_eval" -> "cvangysel/pyndri"
"usnistgov/trec_eval" -> "terrier-org/terrier-core"
"usnistgov/trec_eval" -> "chauff/conversationalIR"
"usnistgov/trec_eval" -> "castorini/anserini"
"usnistgov/trec_eval" -> "microsoft/MSMARCO-Passage-Ranking"
"usnistgov/trec_eval" -> "leifos/simiir"
"usnistgov/trec_eval" -> "teanalab/FieldedSDM" ["e"=1]
"usnistgov/trec_eval" -> "microsoft/TREC-2019-Deep-Learning"
"usnistgov/trec_eval" -> "allenai/ir_datasets"
"usnistgov/trec_eval" -> "lintool/IR-Reproducibility"
"usnistgov/trec_eval" -> "daltonj/treccastweb"
"usnistgov/trec_eval" -> "markovi/PyClick"
"usnistgov/trec_eval" -> "TREMA-UNH/trec-car-tools"
"alexa/massive" -> "google-research/xtreme" ["e"=1]
"shibing624/similarities" -> "PaddlePaddle/RocketQA" ["e"=1]
"DevSinghSachan/unsupervised-passage-reranking" -> "morningmoni/GAR"
"jma127/pyltr" -> "shiba24/learning2rank"
"jma127/pyltr" -> "lezzago/LambdaMart"
"jma127/pyltr" -> "ChenglongChen/tensorflow-LTR"
"jma127/pyltr" -> "airalcorn2/RankNet"
"jma127/pyltr" -> "jiangnanboy/learning_to_rank"
"jma127/pyltr" -> "mottalrd/learning-to-rank"
"jma127/pyltr" -> "markovi/PyClick"
"jma127/pyltr" -> "ULTR-Community/ULTRA"
"jma127/pyltr" -> "tensorflow/ranking" ["e"=1]
"jma127/pyltr" -> "andreweskeclarke/learning-rank-public"
"jma127/pyltr" -> "acbull/Unbiased_LambdaMart"
"jma127/pyltr" -> "wildltr/ptranking"
"jma127/pyltr" -> "discobot/LambdaMart"
"jma127/pyltr" -> "Isminoula/DL-to-Rank"
"jma127/pyltr" -> "zhangzibin/PairCNN-Ranking"
"terrierteam/pyterrier_pisa" -> "capreolus-ir/diffir"
"cvangysel/pyndri" -> "lintool/IR-Reproducibility"
"cvangysel/pyndri" -> "terrierteam/ir_measures"
"r-three/t-few" -> "facebookresearch/tart" ["e"=1]
"UKPLab/gpl" -> "castorini/docTTTTTquery"
"UKPLab/gpl" -> "zetaalphavector/InPars"
"UKPLab/gpl" -> "staoxiao/RetroMAE"
"UKPLab/gpl" -> "JetRunner/LaPraDoR"
"UKPLab/gpl" -> "beir-cellar/beir"
"UKPLab/gpl" -> "sebastian-hofstaetter/neural-ranking-kd"
"UKPLab/gpl" -> "voidism/DiffCSE" ["e"=1]
"UKPLab/gpl" -> "facebookresearch/dpr-scale"
"UKPLab/gpl" -> "luyug/COIL"
"UKPLab/gpl" -> "thongnt99/learned-sparse-retrieval"
"allenai/deep_qa" -> "aseveryn/deep-qa" ["e"=1]
"dmis-lab/BERN2" -> "dmis-lab/GeNER" ["e"=1]
"FidoProject/Fido" -> "FidoProject/Research"
"Alibaba-NLP/Multi-CPR" -> "THUIR/T2Ranking"
"Alibaba-NLP/Multi-CPR" -> "muyuuuu/E-commerce-Search-Recall" ["e"=1]
"Alibaba-NLP/Multi-CPR" -> "AlibabaResearch/HLATR"
"carpedm20/attentive-reader-tensorflow" -> "aseveryn/deep-qa" ["e"=1]
"princeton-nlp/EntityQuestions" -> "ielab/asyncval"
"princeton-nlp/EntityQuestions" -> "princeton-nlp/OptiPrompt" ["e"=1]
"princeton-nlp/EntityQuestions" -> "luyug/COIL"
"zetaalphavector/InPars" -> "thongnt99/learned-sparse-retrieval"
"zetaalphavector/InPars" -> "DevSinghSachan/unsupervised-passage-reranking"
"zetaalphavector/InPars" -> "unicamp-dl/mMARCO"
"zetaalphavector/InPars" -> "castorini/dhr"
"zetaalphavector/InPars" -> "studio-ousia/bpr"
"zetaalphavector/InPars" -> "zetaalphavector/RAGElo"
"zetaalphavector/InPars" -> "HansiZeng/CL-DRD"
"zetaalphavector/InPars" -> "google-research/t5x_retrieval"
"zetaalphavector/InPars" -> "terrierteam/ir_measures"
"jermp/data_compression_course" -> "ot/succinct" ["e"=1]
"RAIVNLab/MRL" -> "staoxiao/RetroMAE"
"RAIVNLab/MRL" -> "nomic-ai/contrastors"
"RAIVNLab/MRL" -> "SeanLee97/AnglE"
"RAIVNLab/MRL" -> "DunZhang/Stella"
"RAIVNLab/MRL" -> "ContextualAI/gritlm"
"RAIVNLab/MRL" -> "Muennighoff/sgpt"
"RAIVNLab/MRL" -> "SmartLi8/stella"
"RAIVNLab/MRL" -> "THUIR/T2Ranking"
"RAIVNLab/MRL" -> "luyug/GradCache"
"RAIVNLab/MRL" -> "amzn/trans-encoder" ["e"=1]
"shuzi/insuranceQA" -> "aseveryn/deep-qa" ["e"=1]
"apple/ml-knowledge-conflicts" -> "ellaneeman/disent_qa"
"castorini/dhr" -> "sebastian-hofstaetter/colberter"
"hltcoe/ColBERT-X" -> "hltcoe/patapsco"
"mehdidc/dpp" -> "javiergonzalezh/dpp"
"microsoft/BiDR" -> "microsoft/MoPQ"
"sebastian-hofstaetter/colberter" -> "castorini/dhr"
"princeton-nlp/EvalConvQA" -> "dmis-lab/excord"
"microsoft/MoPQ" -> "microsoft/BiDR"
"microsoft/MoPQ" -> "microsoft/SpeedyRec"
"ArvinZhuang/DSI-QG" -> "ArvinZhuang/DSI-transformers"
"ArvinZhuang/DSI-QG" -> "solidsea98/Neural-Corpus-Indexer-NCI"
"ArvinZhuang/DSI-QG" -> "facebookresearch/SEAL"
"ArvinZhuang/DSI-QG" -> "liyongqi67/MINDER"
"ArvinZhuang/DSI-QG" -> "m-shilpa/Transformer_Memory_As_A_Differentiable_Search_Index"
"ArvinZhuang/DSI-QG" -> "ict-bigdatalab/CorpusBrain"
"ict-bigdatalab/CorpusBrain" -> "Chriskuei/GERE"
"AlibabaResearch/HLATR" -> "Alibaba-NLP/HLATR"
"staoxiao/RetroMAE" -> "texttron/tevatron"
"staoxiao/RetroMAE" -> "AIR-Bench/AIR-Bench"
"staoxiao/RetroMAE" -> "staoxiao/LibVQ"
"staoxiao/RetroMAE" -> "ielab/llm-rankers"
"staoxiao/RetroMAE" -> "microsoft/ANCE"
"staoxiao/RetroMAE" -> "luyug/Reranker"
"staoxiao/RetroMAE" -> "RUCAIBox/DenseRetrieval"
"staoxiao/RetroMAE" -> "caiyinqiong/Semantic-Retrieval-Models"
"staoxiao/RetroMAE" -> "jingtaozhan/DRhard"
"staoxiao/RetroMAE" -> "THUIR/T2Ranking"
"staoxiao/RetroMAE" -> "microsoft/AR2"
"staoxiao/RetroMAE" -> "RUC-NLPIR/LLM4IR-Survey"
"staoxiao/RetroMAE" -> "UKPLab/gpl"
"staoxiao/RetroMAE" -> "OpenMatch/OpenMatch"
"staoxiao/RetroMAE" -> "castorini/docTTTTTquery"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "ArvinZhuang/DSI-QG"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "ArvinZhuang/DSI-transformers"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "facebookresearch/SEAL"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "HansiZeng/RIPOR"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "liyongqi67/MINDER"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "Chriskuei/awesome-generative-retrieval-models"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "sunnweiwei/GenRet"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "RUCAIBox/DenseRetrieval"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "ict-bigdatalab/CorpusBrain"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "jingtaozhan/RepCONC"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "m-shilpa/Transformer_Memory_As_A_Differentiable_Search_Index"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "gabriben/awesome-generative-information-retrieval"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "RUC-NLPIR/GenIR-Survey"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "VerdureChen/Understanding_DSI"
"solidsea98/Neural-Corpus-Indexer-NCI" -> "skleee/GLEN" ["e"=1]
"microsoft/SimXNS" -> "microsoft/advNLG"
"microsoft/SimXNS" -> "microsoft/AR2"
"microsoft/SimXNS" -> "ict-bigdatalab/CorpusBrain"
"RUCAIBox/DenseRetrieval" -> "texttron/tevatron"
"RUCAIBox/DenseRetrieval" -> "solidsea98/Neural-Corpus-Indexer-NCI"
"RUCAIBox/DenseRetrieval" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"RUCAIBox/DenseRetrieval" -> "staoxiao/RetroMAE"
"RUCAIBox/DenseRetrieval" -> "caiyinqiong/Semantic-Retrieval-Models"
"RUCAIBox/DenseRetrieval" -> "RUC-NLPIR/LLM4IR-Survey"
"RUCAIBox/DenseRetrieval" -> "jingtaozhan/DRhard"
"RUCAIBox/DenseRetrieval" -> "OpenMatch/OpenMatch"
"RUCAIBox/DenseRetrieval" -> "arian-askari/ChatGPT-RetrievalQA-CIKM2023"
"RUCAIBox/DenseRetrieval" -> "staoxiao/LibVQ"
"RUCAIBox/DenseRetrieval" -> "ArvinZhuang/DSI-QG"
"RUCAIBox/DenseRetrieval" -> "gabriben/awesome-generative-information-retrieval"
"RUCAIBox/DenseRetrieval" -> "zetaalphavector/InPars"
"StonyBrookNLP/ircot" -> "starsuzi/Adaptive-RAG"
"StonyBrookNLP/ircot" -> "AI21Labs/in-context-ralm"
"StonyBrookNLP/ircot" -> "oriyor/reasoning-on-cots"
"StonyBrookNLP/ircot" -> "jzbjyb/FLARE"
"StonyBrookNLP/ircot" -> "zorazrw/filco"
"StonyBrookNLP/ircot" -> "HuskyInSalt/CRAG"
"StonyBrookNLP/ircot" -> "wyu97/GenRead"
"StonyBrookNLP/ircot" -> "oneal2000/DRAGIN"
"StonyBrookNLP/ircot" -> "canghongjian/beam_retriever"
"StonyBrookNLP/ircot" -> "chanchimin/RQ-RAG"
"namespace-Pt/Adon" -> "DaoD/DCL"
"AI21Labs/in-context-ralm" -> "carriex/recomp"
"AI21Labs/in-context-ralm" -> "StonyBrookNLP/ircot"
"AI21Labs/in-context-ralm" -> "facebookresearch/atlas"
"AI21Labs/in-context-ralm" -> "wyu97/GenRead"
"AI21Labs/in-context-ralm" -> "jzbjyb/FLARE"
"AI21Labs/in-context-ralm" -> "RUC-GSAI/YuLan-IR" ["e"=1]
"AI21Labs/in-context-ralm" -> "princeton-nlp/ALCE"
"AI21Labs/in-context-ralm" -> "facebookresearch/dpr-scale"
"AI21Labs/in-context-ralm" -> "swj0419/REPLUG"
"AI21Labs/in-context-ralm" -> "oriyor/ret-robust"
"AI21Labs/in-context-ralm" -> "facebookresearch/FiD"
"AI21Labs/in-context-ralm" -> "zorazrw/filco"
"gabriben/awesome-generative-information-retrieval" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"gabriben/awesome-generative-information-retrieval" -> "RUC-NLPIR/LLM4IR-Survey"
"gabriben/awesome-generative-information-retrieval" -> "texttron/tevatron"
"gabriben/awesome-generative-information-retrieval" -> "RUC-NLPIR/GenIR-Survey"
"gabriben/awesome-generative-information-retrieval" -> "solidsea98/Neural-Corpus-Indexer-NCI"
"gabriben/awesome-generative-information-retrieval" -> "castorini/pyserini"
"gabriben/awesome-generative-information-retrieval" -> "ArvinZhuang/DSI-transformers"
"gabriben/awesome-generative-information-retrieval" -> "HansiZeng/RIPOR"
"gabriben/awesome-generative-information-retrieval" -> "sunnweiwei/RankGPT"
"gabriben/awesome-generative-information-retrieval" -> "RUCAIBox/DenseRetrieval"
"gabriben/awesome-generative-information-retrieval" -> "allenai/ir_datasets"
"gabriben/awesome-generative-information-retrieval" -> "naver/splade"
"gabriben/awesome-generative-information-retrieval" -> "Chriskuei/awesome-generative-retrieval-models"
"gabriben/awesome-generative-information-retrieval" -> "ielab/llm-rankers"
"gabriben/awesome-generative-information-retrieval" -> "facebookresearch/SEAL"
"facebookresearch/atlas" -> "facebookresearch/FiD"
"facebookresearch/atlas" -> "AI21Labs/in-context-ralm"
"facebookresearch/atlas" -> "facebookresearch/contriever"
"facebookresearch/atlas" -> "facebookresearch/dpr-scale"
"facebookresearch/atlas" -> "wyu97/GenRead"
"facebookresearch/atlas" -> "AlexTMallen/adaptive-retrieval"
"facebookresearch/atlas" -> "facebookresearch/DPR"
"facebookresearch/atlas" -> "facebookresearch/KILT"
"facebookresearch/atlas" -> "castorini/pyserini"
"facebookresearch/atlas" -> "princeton-nlp/ALCE"
"facebookresearch/atlas" -> "facebookresearch/tart"
"facebookresearch/atlas" -> "lucidrains/RETRO-pytorch" ["e"=1]
"facebookresearch/atlas" -> "princeton-nlp/AutoCompressors" ["e"=1]
"facebookresearch/atlas" -> "shmsw25/FActScore" ["e"=1]
"facebookresearch/atlas" -> "texttron/tevatron"
"nomic-ai/nomic" -> "nomic-ai/contrastors" ["e"=1]
"nomic-ai/nomic" -> "stanford-futuredata/ColBERT" ["e"=1]
"google/nomulus" -> "varepsilon/cas-eval" ["e"=1]
"IntelLabs/fastRAG" -> "stanford-futuredata/ColBERT" ["e"=1]
"IntelLabs/fastRAG" -> "jzbjyb/FLARE" ["e"=1]
"IntelLabs/fastRAG" -> "castorini/pyserini" ["e"=1]
"IntelLabs/fastRAG" -> "facebookresearch/atlas" ["e"=1]
"IntelLabs/fastRAG" -> "beir-cellar/beir" ["e"=1]
"IntelLabs/fastRAG" -> "ContextualAI/gritlm" ["e"=1]
"xlang-ai/instructor-embedding" -> "Muennighoff/sgpt"
"xlang-ai/instructor-embedding" -> "embeddings-benchmark/mteb"
"xlang-ai/instructor-embedding" -> "wangyuxinwhy/uniem" ["e"=1]
"xlang-ai/instructor-embedding" -> "huggingface/setfit" ["e"=1]
"xlang-ai/instructor-embedding" -> "texttron/tevatron"
"xlang-ai/instructor-embedding" -> "stanford-futuredata/ColBERT"
"xlang-ai/instructor-embedding" -> "beir-cellar/beir"
"xlang-ai/instructor-embedding" -> "yizhongw/self-instruct" ["e"=1]
"xlang-ai/instructor-embedding" -> "castorini/pyserini"
"xlang-ai/instructor-embedding" -> "facebookresearch/contriever"
"xlang-ai/instructor-embedding" -> "FlagOpen/FlagEmbedding" ["e"=1]
"xlang-ai/instructor-embedding" -> "princeton-nlp/SimCSE" ["e"=1]
"xlang-ai/instructor-embedding" -> "CarperAI/trlx" ["e"=1]
"xlang-ai/instructor-embedding" -> "huggingface/text-embeddings-inference" ["e"=1]
"xlang-ai/instructor-embedding" -> "AnswerDotAI/RAGatouille" ["e"=1]
"ofirpress/self-ask" -> "oriyor/reasoning-on-cots"
"texttron/hyde" -> "DevSinghSachan/unsupervised-passage-reranking"
"texttron/hyde" -> "castorini/pyserini"
"texttron/hyde" -> "xbmxb/RAG-query-rewriting"
"texttron/hyde" -> "facebookresearch/contriever"
"texttron/hyde" -> "zetaalphavector/InPars"
"texttron/hyde" -> "luyug/Condenser"
"texttron/hyde" -> "texttron/tevatron"
"texttron/hyde" -> "ielab/llm-rankers"
"texttron/hyde" -> "castorini/pygaggle"
"texttron/hyde" -> "luyug/COIL"
"texttron/hyde" -> "sebastian-hofstaetter/matchmaker"
"texttron/hyde" -> "gabriben/awesome-generative-information-retrieval"
"texttron/hyde" -> "luyug/Reranker"
"texttron/hyde" -> "jzbjyb/FLARE"
"texttron/hyde" -> "ielab/asyncval"
"OpenMatch/OpenMatch" -> "OpenMatch/MARVEL" ["e"=1]
"OpenMatch/OpenMatch" -> "NEUIR/PaperReading" ["e"=1]
"OpenMatch/OpenMatch" -> "texttron/tevatron"
"OpenMatch/OpenMatch" -> "OpenMatch/TASTE" ["e"=1]
"huggingface/setfit" -> "stanford-futuredata/ColBERT" ["e"=1]
"shiba24/learning2rank" -> "jma127/pyltr"
"shiba24/learning2rank" -> "airalcorn2/RankNet"
"shiba24/learning2rank" -> "ChenglongChen/tensorflow-LTR"
"shiba24/learning2rank" -> "andreweskeclarke/learning-rank-public"
"shiba24/learning2rank" -> "wildltr/ptranking"
"shiba24/learning2rank" -> "lezzago/LambdaMart"
"shiba24/learning2rank" -> "houchenyu/L2R"
"shiba24/learning2rank" -> "zhangzibin/PairCNN-Ranking"
"shiba24/learning2rank" -> "tensorflow/ranking" ["e"=1]
"shiba24/learning2rank" -> "fullflu/learning-to-rank"
"shiba24/learning2rank" -> "jattenberg/RankLib"
"shiba24/learning2rank" -> "mottalrd/learning-to-rank"
"shiba24/learning2rank" -> "QingyaoAi/Deep-Listwise-Context-Model-for-Ranking-Refinement"
"shiba24/learning2rank" -> "acbull/Unbiased_LambdaMart"
"shiba24/learning2rank" -> "Isminoula/DL-to-Rank"
"primeqa/primeqa" -> "naver/splade"
"primeqa/primeqa" -> "zetaalphavector/InPars"
"primeqa/primeqa" -> "texttron/tevatron"
"primeqa/primeqa" -> "facebookresearch/contriever"
"primeqa/primeqa" -> "beir-cellar/beir"
"primeqa/primeqa" -> "DevSinghSachan/art" ["e"=1]
"primeqa/primeqa" -> "facebookresearch/tart"
"primeqa/primeqa" -> "castorini/pyserini"
"primeqa/primeqa" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"primeqa/primeqa" -> "sebastian-hofstaetter/colberter"
"primeqa/primeqa" -> "naver/bergen"
"primeqa/primeqa" -> "facebookresearch/DPR"
"primeqa/primeqa" -> "label-sleuth/label-sleuth"
"primeqa/primeqa" -> "gabriben/awesome-generative-information-retrieval"
"primeqa/primeqa" -> "facebookresearch/dpr-scale"
"joaopalotti/trectools" -> "capreolus-ir/capreolus"
"joaopalotti/trectools" -> "sebastian-hofstaetter/matchmaker"
"joaopalotti/trectools" -> "Georgetown-IR-Lab/OpenNIR"
"joaopalotti/trectools" -> "cvangysel/pytrec_eval"
"joaopalotti/trectools" -> "castorini/pygaggle"
"joaopalotti/trectools" -> "allenai/ir_datasets"
"joaopalotti/trectools" -> "ielab/relevation"
"joaopalotti/trectools" -> "usnistgov/trec_eval"
"joaopalotti/trectools" -> "Georgetown-IR-Lab/cedr"
"joaopalotti/trectools" -> "cvangysel/pyndri"
"joaopalotti/trectools" -> "terrier-org/pyterrier"
"joaopalotti/trectools" -> "terrier-org/ecir2021tutorial"
"joaopalotti/trectools" -> "thongnt99/learned-sparse-retrieval"
"joaopalotti/trectools" -> "nyu-dl/dl4marco-bert"
"joaopalotti/trectools" -> "hamed-zamani/snrm"
"bigscience-workshop/xmtf" -> "apple/ml-mkqa" ["e"=1]
"reasoning-machines/pal" -> "texttron/tevatron" ["e"=1]
"facebookresearch/tart" -> "McGill-NLP/retriever-lm-reasoning"
"airalcorn2/Deep-Semantic-Similarity-Model" -> "aseveryn/deep-qa" ["e"=1]
"airalcorn2/Deep-Semantic-Similarity-Model" -> "zhangzibin/PairCNN-Ranking" ["e"=1]
"thongnt99/learned-sparse-retrieval" -> "thakur-nandan/sprint"
"label-sleuth/label-sleuth" -> "IBM/quality-controlled-paraphrase-generation"
"neulab/knn-transformers" -> "apple/ml-knowledge-conflicts" ["e"=1]
"jingtaozhan/disentangled-retriever" -> "jingtaozhan/extrapolate-eval"
"jingtaozhan/disentangled-retriever" -> "OpenMatch/COCO-DR"
"jingtaozhan/disentangled-retriever" -> "CSHaitao/JTR" ["e"=1]
"jingtaozhan/disentangled-retriever" -> "jingtaozhan/RepBERT-Index"
"eventql/eventql" -> "phaistos-networks/TANK" ["e"=1]
"project-miracl/miracl" -> "castorini/mr.tydi"
"project-miracl/miracl" -> "unicamp-dl/mMARCO"
"Doragd/Awesome-Sentence-Embedding" -> "RUCAIBox/DenseRetrieval" ["e"=1]
"AmenRa/retriv" -> "AmenRa/indxr"
"AmenRa/retriv" -> "AmenRa/ranx"
"AmenRa/retriv" -> "tira-io/ir-experiment-platform"
"wyu97/GenRead" -> "AI21Labs/in-context-ralm"
"wyu97/GenRead" -> "facebookresearch/SEAL"
"wyu97/GenRead" -> "facebookresearch/FiD"
"wyu97/GenRead" -> "DevSinghSachan/art" ["e"=1]
"wyu97/GenRead" -> "StonyBrookNLP/ircot"
"realtimeqa/realtimeqa_public" -> "wenhuchen/Time-Sensitive-QA"
"Chriskuei/awesome-generative-retrieval-models" -> "skleee/GLEN" ["e"=1]
"OpenMatch/COCO-DR" -> "jingtaozhan/disentangled-retriever"
"OpenMatch/COCO-DR" -> "OpenMatch/ANCE-Tele"
"grill-lab/CIS-Tutorial-SIGIR2022" -> "castorini/cqe"
"freedmand/semantra" -> "xlang-ai/instructor-embedding" ["e"=1]
"vec2text/vec2text" -> "naver/splade" ["e"=1]
"vec2text/vec2text" -> "ielab/llm-rankers" ["e"=1]
"vec2text/vec2text" -> "luyug/COIL" ["e"=1]
"vec2text/vec2text" -> "beir-cellar/beir" ["e"=1]
"sunnweiwei/RankGPT" -> "castorini/rank_llm"
"sunnweiwei/RankGPT" -> "texttron/tevatron"
"sunnweiwei/RankGPT" -> "ielab/llm-rankers"
"sunnweiwei/RankGPT" -> "castorini/pyserini"
"sunnweiwei/RankGPT" -> "RUC-NLPIR/LLM4IR-Survey"
"sunnweiwei/RankGPT" -> "castorini/pygaggle"
"sunnweiwei/RankGPT" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"sunnweiwei/RankGPT" -> "gabriben/awesome-generative-information-retrieval"
"sunnweiwei/RankGPT" -> "luyug/Reranker"
"sunnweiwei/RankGPT" -> "beir-cellar/beir"
"sunnweiwei/RankGPT" -> "jingtaozhan/DRhard"
"sunnweiwei/RankGPT" -> "RUCAIBox/LLMRank" ["e"=1]
"sunnweiwei/RankGPT" -> "Muennighoff/sgpt"
"sunnweiwei/RankGPT" -> "DevSinghSachan/unsupervised-passage-reranking"
"sunnweiwei/RankGPT" -> "microsoft/ANCE"
"liyongqi67/MINDER" -> "HansiZeng/RIPOR"
"liyongqi67/MINDER" -> "liyongqi67/LTRGR"
"liyongqi67/MINDER" -> "ArvinZhuang/DSI-QG"
"liyongqi67/MINDER" -> "sunnweiwei/GenRet"
"liyongqi67/MINDER" -> "yakt00/IRGen"
"RUC-GSAI/YuLan-IR" -> "arian-askari/ChatGPT-RetrievalQA-CIKM2023" ["e"=1]
"RUC-GSAI/YuLan-IR" -> "AI21Labs/in-context-ralm" ["e"=1]
"RUC-GSAI/YuLan-IR" -> "ArvinZhuang/DSI-QG" ["e"=1]
"RUC-GSAI/YuLan-Chat" -> "RUC-NLPIR/LLM4IR-Survey" ["e"=1]
"RUC-NLPIR/LLM4IR-Survey" -> "gabriben/awesome-generative-information-retrieval"
"RUC-NLPIR/LLM4IR-Survey" -> "texttron/tevatron"
"RUC-NLPIR/LLM4IR-Survey" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"RUC-NLPIR/LLM4IR-Survey" -> "ielab/llm-rankers"
"RUC-NLPIR/LLM4IR-Survey" -> "RUCAIBox/DenseRetrieval"
"RUC-NLPIR/LLM4IR-Survey" -> "sunnweiwei/RankGPT"
"RUC-NLPIR/LLM4IR-Survey" -> "RUC-NLPIR/GenIR-Survey"
"RUC-NLPIR/LLM4IR-Survey" -> "staoxiao/RetroMAE"
"RUC-NLPIR/LLM4IR-Survey" -> "RUC-GSAI/YuLan-IR" ["e"=1]
"RUC-NLPIR/LLM4IR-Survey" -> "castorini/pyserini"
"RUC-NLPIR/LLM4IR-Survey" -> "DaoD/INTERS"
"RUC-NLPIR/LLM4IR-Survey" -> "castorini/rank_llm"
"RUC-NLPIR/LLM4IR-Survey" -> "nancheng58/Awesome-LLM4RS-Papers" ["e"=1]
"RUC-NLPIR/LLM4IR-Survey" -> "IR-LLM/Awesome-Information-Retrieval-in-the-Age-of-Large-Language-Model" ["e"=1]
"RUC-NLPIR/LLM4IR-Survey" -> "naver/splade"
"white127/QA-deep-learning" -> "aseveryn/deep-qa" ["e"=1]
"vespa-engine/vespa" -> "stanford-futuredata/ColBERT" ["e"=1]
"zhangzibin/PairCNN-Ranking" -> "shashankg7/Keras-CNN-QA"
"zhangzibin/PairCNN-Ranking" -> "aseveryn/deep-qa"
"zhangzibin/PairCNN-Ranking" -> "pl8787/MatchPyramid-TensorFlow" ["e"=1]
"zhangzibin/PairCNN-Ranking" -> "shiba24/learning2rank"
"zhangzibin/PairCNN-Ranking" -> "ChenglongChen/tensorflow-LTR"
"zhangzibin/PairCNN-Ranking" -> "andreweskeclarke/learning-rank-public"
"run-llama/finetune-embedding" -> "yixuantt/MultiHop-RAG" ["e"=1]
"yuwvandy/KG-LLM-MDQA" -> "StonyBrookNLP/musique" ["e"=1]
"shmsw25/FActScore" -> "princeton-nlp/ALCE" ["e"=1]
"oaqa/FlexNeuART" -> "thunlp/OpenMatch"
"oaqa/FlexNeuART" -> "luyug/Condenser"
"oaqa/FlexNeuART" -> "jingtaozhan/RepBERT-Index"
"oaqa/FlexNeuART" -> "HansiZeng/CL-DRD"
"oaqa/FlexNeuART" -> "jingtaozhan/RepCONC"
"oaqa/FlexNeuART" -> "thongnt99/learned-sparse-retrieval"
"oaqa/FlexNeuART" -> "zetaalphavector/InPars"
"oaqa/FlexNeuART" -> "allenai/ir_datasets"
"oaqa/FlexNeuART" -> "rmit-ir/KrovetzStemmer"
"nelson-liu/lost-in-the-middle" -> "princeton-nlp/ALCE" ["e"=1]
"nelson-liu/lost-in-the-middle" -> "facebookresearch/FiD" ["e"=1]
"HazyResearch/m2" -> "nomic-ai/contrastors" ["e"=1]
"freshllms/freshqa" -> "realtimeqa/realtimeqa_public"
"freshllms/freshqa" -> "princeton-nlp/ALCE"
"srush/MiniChain" -> "primeqa/primeqa" ["e"=1]
"bpiyush/TestOfTime" -> "AngelosNal/Vision-DiffMask"
"princeton-nlp/ALCE" -> "shmsw25/FActScore" ["e"=1]
"princeton-nlp/ALCE" -> "jzbjyb/FLARE"
"princeton-nlp/ALCE" -> "AI21Labs/in-context-ralm"
"princeton-nlp/ALCE" -> "AkariAsai/self-rag" ["e"=1]
"princeton-nlp/ALCE" -> "AlexTMallen/adaptive-retrieval"
"princeton-nlp/ALCE" -> "freshllms/freshqa"
"princeton-nlp/ALCE" -> "facebookresearch/contriever"
"princeton-nlp/ALCE" -> "chaitanyamalaviya/ExpertQA" ["e"=1]
"princeton-nlp/ALCE" -> "facebookresearch/FiD"
"princeton-nlp/ALCE" -> "oriyor/ret-robust"
"princeton-nlp/ALCE" -> "facebookresearch/atlas"
"princeton-nlp/ALCE" -> "nelson-liu/lost-in-the-middle" ["e"=1]
"princeton-nlp/ALCE" -> "allenai/FineGrainedRLHF" ["e"=1]
"princeton-nlp/ALCE" -> "facebookresearch/DPR"
"princeton-nlp/ALCE" -> "princeton-nlp/AutoCompressors" ["e"=1]
"stanford-futuredata/ARES" -> "chen700564/RGB" ["e"=1]
"stanford-futuredata/ARES" -> "HuskyInSalt/CRAG" ["e"=1]
"stanford-futuredata/ARES" -> "yixuantt/MultiHop-RAG" ["e"=1]
"hollobit/GenAI_LLM_timeline" -> "facebookresearch/FiD" ["e"=1]
"google-research/distilling-step-by-step" -> "AI21Labs/in-context-ralm" ["e"=1]
"castorini/rank_llm" -> "sunnweiwei/RankGPT"
"castorini/rank_llm" -> "ielab/llm-rankers"
"castorini/rank_llm" -> "texttron/tevatron"
"castorini/rank_llm" -> "castorini/pyserini"
"castorini/rank_llm" -> "RUC-NLPIR/GenIR-Survey"
"castorini/rank_llm" -> "castorini/ragnarok"
"castorini/rank_llm" -> "RUC-NLPIR/LLM4IR-Survey"
"castorini/rank_llm" -> "allenai/ir_datasets"
"castorini/rank_llm" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"castorini/rank_llm" -> "AnswerDotAI/rerankers" ["e"=1]
"castorini/rank_llm" -> "facebookresearch/ReasonIR"
"castorini/rank_llm" -> "castorini/pygaggle"
"castorini/rank_llm" -> "NovaSearch-Team/RAG-Retrieval" ["e"=1]
"castorini/rank_llm" -> "xlang-ai/BRIGHT"
"castorini/rank_llm" -> "naver/bergen"
"sunnweiwei/GenRet" -> "liyongqi67/MINDER"
"sunnweiwei/GenRet" -> "HansiZeng/RIPOR"
"sunnweiwei/GenRet" -> "Furyton/GR-as-MVDR" ["e"=1]
"sunnweiwei/GenRet" -> "PeterGriffinJin/LMIndexer"
"chen700564/RGB" -> "IAAR-Shanghai/CRUD_RAG" ["e"=1]
"chen700564/RGB" -> "stanford-futuredata/ARES" ["e"=1]
"chen700564/RGB" -> "AI21Labs/in-context-ralm"
"chen700564/RGB" -> "RUC-GSAI/YuLan-IR" ["e"=1]
"chen700564/RGB" -> "jzbjyb/FLARE"
"chen700564/RGB" -> "florin-git/The-Power-of-Noise"
"chen700564/RGB" -> "HuskyInSalt/CRAG"
"chen700564/RGB" -> "open-compass/T-Eval" ["e"=1]
"chen700564/RGB" -> "starsuzi/Adaptive-RAG"
"jzbjyb/FLARE" -> "AkariAsai/self-rag" ["e"=1]
"jzbjyb/FLARE" -> "StonyBrookNLP/ircot"
"jzbjyb/FLARE" -> "AI21Labs/in-context-ralm"
"jzbjyb/FLARE" -> "princeton-nlp/ALCE"
"jzbjyb/FLARE" -> "facebookresearch/FiD"
"jzbjyb/FLARE" -> "texttron/tevatron"
"jzbjyb/FLARE" -> "Timothyxxx/RetrivalLMPapers" ["e"=1]
"jzbjyb/FLARE" -> "carriex/recomp"
"jzbjyb/FLARE" -> "chen700564/RGB"
"jzbjyb/FLARE" -> "facebookresearch/DPR"
"jzbjyb/FLARE" -> "RUC-GSAI/YuLan-IR" ["e"=1]
"jzbjyb/FLARE" -> "RUC-NLPIR/LLM4IR-Survey"
"jzbjyb/FLARE" -> "ArvinZhuang/DSI-QG"
"jzbjyb/FLARE" -> "xbmxb/RAG-query-rewriting"
"jzbjyb/FLARE" -> "wyu97/GenRead"
"raphaelsty/neural-cherche" -> "thongnt99/learned-sparse-retrieval" ["e"=1]
"sujitpal/dl-models-for-qa" -> "sachinbiradar9/Question-Answer-Selection" ["e"=1]
"sujitpal/dl-models-for-qa" -> "shashankg7/Keras-CNN-QA" ["e"=1]
"stopwords-iso/stopwords-iso" -> "stopwords-iso/stopwords-en"
"stopwords-iso/stopwords-iso" -> "quanteda/stopwords"
"stopwords-iso/stopwords-iso" -> "stopwords-iso/stopwords-zh"
"stopwords-iso/stopwords-iso" -> "6/stopwords-json"
"stopwords-iso/stopwords-iso" -> "stopwords-iso/stopwords-fr"
"stopwords-iso/stopwords-iso" -> "igorbrigadir/stopwords"
"Raudaschl/rag-fusion" -> "chen700564/RGB" ["e"=1]
"phaistos-networks/TANK" -> "phaistos-networks/Trinity"
"GAIR-NLP/factool" -> "princeton-nlp/ALCE" ["e"=1]
"SmartLi8/stella" -> "OpenSenseNova/piccolo-embedding"
"SmartLi8/stella" -> "THUIR/T2Ranking"
"SmartLi8/stella" -> "DunZhang/Stella"
"facebookresearch/belebele" -> "apple/ml-mkqa"
"AGI-Edgerunners/Plan-and-Solve-Prompting" -> "ofirpress/self-ask" ["e"=1]
"4AI/LS-LLaMA" -> "WhereIsAI/BiLLM"
"4AI/LS-LLaMA" -> "4AI/RAN"
"4AI/LS-LLaMA" -> "4AI/AGN"
"arian-askari/ChatGPT-RetrievalQA-CIKM2023" -> "jingtaozhan/RepCONC"
"arian-askari/ChatGPT-RetrievalQA-CIKM2023" -> "nelson-liu/evaluating-verifiability-in-generative-search-engines" ["e"=1]
"THUIR/T2Ranking" -> "Alibaba-NLP/Multi-CPR"
"THUIR/T2Ranking" -> "SmartLi8/stella"
"THUIR/T2Ranking" -> "THUIR/LeCaRDv2" ["e"=1]
"THUIR/T2Ranking" -> "texttron/tevatron"
"THUIR/T2Ranking" -> "jingtaozhan/disentangled-retriever"
"THUIR/T2Ranking" -> "staoxiao/RetroMAE"
"wangyuxinwhy/uniem" -> "THUIR/T2Ranking" ["e"=1]
"wangyuxinwhy/uniem" -> "SmartLi8/stella" ["e"=1]
"wangyuxinwhy/uniem" -> "xlang-ai/instructor-embedding" ["e"=1]
"discobot/LambdaMart" -> "discobot/wiki_crawl"
"discobot/LambdaMart" -> "discobot/ml-handbook"
"discobot/LambdaMart" -> "jattenberg/RankLib"
"discobot/LambdaMart" -> "lezzago/LambdaMart"
"jattenberg/RankLib" -> "discobot/LambdaMart"
"jattenberg/RankLib" -> "jobandtalent/RankLib"
"jattenberg/RankLib" -> "yasserg/jforests"
"yakt00/IRGen" -> "liyongqi67/GRACE"
"OSU-NLP-Group/LLM-Knowledge-Conflict" -> "apple/ml-knowledge-conflicts"
"urchade/GLiNER" -> "stanford-futuredata/ColBERT" ["e"=1]
"ielab/llm-rankers" -> "ielab/asyncval"
"ielab/llm-rankers" -> "HansiZeng/RIPOR"
"ielab/llm-rankers" -> "castorini/rank_llm"
"ielab/llm-rankers" -> "texttron/tevatron"
"ielab/llm-rankers" -> "staoxiao/RetroMAE"
"ielab/llm-rankers" -> "liuqi6777/Awesome-LLM4Ranking"
"HansiZeng/RIPOR" -> "HansiZeng/PAG"
"HansiZeng/RIPOR" -> "liyongqi67/MINDER"
"HansiZeng/RIPOR" -> "liyongqi67/LTRGR"
"RUC-NLPIR/FlashRAG" -> "RUC-NLPIR/LLM4IR-Survey" ["e"=1]
"RUC-NLPIR/GenIR-Survey" -> "liyongqi67/MINDER"
"RUC-NLPIR/GenIR-Survey" -> "gabriben/awesome-generative-information-retrieval"
"RUC-NLPIR/GenIR-Survey" -> "xlang-ai/BRIGHT"
"RUC-NLPIR/GenIR-Survey" -> "solidsea98/Neural-Corpus-Indexer-NCI"
"RUC-NLPIR/GenIR-Survey" -> "HansiZeng/RIPOR"
"RUC-NLPIR/GenIR-Survey" -> "Chriskuei/awesome-generative-retrieval-models"
"CraftJarvis/RAT" -> "dmis-lab/RAG2"
"CraftJarvis/RAT" -> "TergelMunkhbat/concise-reasoning"
"HuskyInSalt/CRAG" -> "starsuzi/Adaptive-RAG"
"HuskyInSalt/CRAG" -> "AkariAsai/self-rag" ["e"=1]
"HuskyInSalt/CRAG" -> "StonyBrookNLP/ircot"
"HuskyInSalt/CRAG" -> "chanchimin/RQ-RAG"
"HuskyInSalt/CRAG" -> "zorazrw/filco"
"HuskyInSalt/CRAG" -> "oneal2000/DRAGIN"
"HuskyInSalt/CRAG" -> "carriex/recomp"
"HuskyInSalt/CRAG" -> "oriyor/ret-robust"
"HuskyInSalt/CRAG" -> "OpenBMB/RAGEval" ["e"=1]
"HuskyInSalt/CRAG" -> "chen700564/RGB"
"HuskyInSalt/CRAG" -> "xbmxb/RAG-query-rewriting"
"HuskyInSalt/CRAG" -> "CraftJarvis/RAT"
"HuskyInSalt/CRAG" -> "AI21Labs/in-context-ralm"
"HuskyInSalt/CRAG" -> "parthsarthi03/raptor" ["e"=1]
"HuskyInSalt/CRAG" -> "princeton-nlp/ALCE"
"huggingface/text-embeddings-inference" -> "embeddings-benchmark/mteb" ["e"=1]
"AnswerDotAI/RAGatouille" -> "stanford-futuredata/ColBERT" ["e"=1]
"nlmatics/llmsherpa" -> "stanford-futuredata/ColBERT" ["e"=1]
"McGill-NLP/llm2vec" -> "ContextualAI/gritlm"
"McGill-NLP/llm2vec" -> "embeddings-benchmark/mteb"
"McGill-NLP/llm2vec" -> "jakespringer/echo-embeddings"
"McGill-NLP/llm2vec" -> "AnswerDotAI/ModernBERT" ["e"=1]
"McGill-NLP/llm2vec" -> "stanfordnlp/pyreft" ["e"=1]
"McGill-NLP/llm2vec" -> "TIGER-AI-Lab/VLM2Vec" ["e"=1]
"McGill-NLP/llm2vec" -> "microsoft/LLM2CLIP" ["e"=1]
"McGill-NLP/llm2vec" -> "stanford-futuredata/ColBERT"
"McGill-NLP/llm2vec" -> "AnswerDotAI/rerankers" ["e"=1]
"McGill-NLP/llm2vec" -> "nomic-ai/contrastors"
"McGill-NLP/llm2vec" -> "xhluca/bm25s" ["e"=1]
"McGill-NLP/llm2vec" -> "huggingface/setfit" ["e"=1]
"McGill-NLP/llm2vec" -> "SeanLee97/AnglE"
"McGill-NLP/llm2vec" -> "castorini/pyserini"
"McGill-NLP/llm2vec" -> "MinishLab/model2vec" ["e"=1]
"netease-youdao/BCEmbedding" -> "embeddings-benchmark/mteb" ["e"=1]
"shashankg7/Keras-CNN-QA" -> "aseveryn/deep-qa"
"shashankg7/Keras-CNN-QA" -> "zhangzibin/PairCNN-Ranking"
"stanfordnlp/pyreft" -> "McGill-NLP/llm2vec" ["e"=1]
"harpribot/awesome-information-retrieval" -> "ict-bigdatalab/awesome-pretrained-models-for-information-retrieval"
"harpribot/awesome-information-retrieval" -> "allenai/ir_datasets"
"harpribot/awesome-information-retrieval" -> "NTMC-Community/awesome-neural-models-for-semantic-match" ["e"=1]
"harpribot/awesome-information-retrieval" -> "gabriben/awesome-generative-information-retrieval"
"harpribot/awesome-information-retrieval" -> "castorini/anserini"
"harpribot/awesome-information-retrieval" -> "sebastian-hofstaetter/teaching"
"harpribot/awesome-information-retrieval" -> "lucasviola/awesome-functional-programming" ["e"=1]
"harpribot/awesome-information-retrieval" -> "castorini/pyserini"
"harpribot/awesome-information-retrieval" -> "beir-cellar/beir"
"harpribot/awesome-information-retrieval" -> "frutik/awesome-search" ["e"=1]
"harpribot/awesome-information-retrieval" -> "nyu-dl/dl4marco-bert"
"harpribot/awesome-information-retrieval" -> "o19s/elasticsearch-learning-to-rank" ["e"=1]
"harpribot/awesome-information-retrieval" -> "naver/splade"
"harpribot/awesome-information-retrieval" -> "terrier-org/pyterrier"
"harpribot/awesome-information-retrieval" -> "joaopalotti/trectools"
"ielab/PromptReps" -> "orionw/FollowIR"
"allenai/OLMo-Eval" -> "nomic-ai/contrastors" ["e"=1]
"stanford-oval/WikiChat" -> "stanford-futuredata/ColBERT" ["e"=1]
"nomic-ai/contrastors" -> "RAIVNLab/MRL"
"nomic-ai/contrastors" -> "lightonai/pylate" ["e"=1]
"nomic-ai/contrastors" -> "luyug/GradCache"
"nomic-ai/contrastors" -> "allenai/OLMo-Eval" ["e"=1]
"nomic-ai/contrastors" -> "AnswerDotAI/ModernBERT" ["e"=1]
"nomic-ai/contrastors" -> "AIR-Bench/AIR-Bench"
"nomic-ai/contrastors" -> "UKPLab/gpl"
"nomic-ai/contrastors" -> "HazyResearch/m2" ["e"=1]
"nomic-ai/contrastors" -> "texttron/tevatron"
"nomic-ai/contrastors" -> "staoxiao/RetroMAE"
"nomic-ai/contrastors" -> "NovaSearch-Team/RAG-Retrieval" ["e"=1]
"nomic-ai/contrastors" -> "xhluca/bm25s" ["e"=1]
"nomic-ai/contrastors" -> "raphaelsty/neural-cherche" ["e"=1]
"nomic-ai/contrastors" -> "castorini/rank_llm"
"nomic-ai/contrastors" -> "SeanLee97/AnglE"
"NovaSearch-Team/RAG-Retrieval" -> "castorini/rank_llm" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "texttron/tevatron" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "RUC-NLPIR/LLM4IR-Survey" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "xbmxb/RAG-query-rewriting" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "nomic-ai/contrastors" ["e"=1]
"NovaSearch-Team/RAG-Retrieval" -> "luyug/Reranker" ["e"=1]
"o19s/elasticsearch-learning-to-rank" -> "markovi/PyClick" ["e"=1]
"parthsarthi03/raptor" -> "HuskyInSalt/CRAG" ["e"=1]
"parthsarthi03/raptor" -> "stanford-futuredata/ColBERT" ["e"=1]
"parthsarthi03/raptor" -> "castorini/pyserini" ["e"=1]
"DaoD/INTERS" -> "ielab/llm-rankers"
"terrier-org/terrier-core" -> "terrier-org/pyterrier"
"terrier-org/terrier-core" -> "usnistgov/trec_eval"
"terrier-org/terrier-core" -> "cmacdonald/IRcourseHM"
"terrier-org/terrier-core" -> "joaopalotti/trectools"
"terrier-org/terrier-core" -> "Georgetown-IR-Lab/OpenNIR"
"terrier-org/terrier-core" -> "lintool/IR-Reproducibility"
"terrier-org/terrier-core" -> "osirrc/jig"
"terrier-org/terrier-core" -> "leifos/simiir"
"terrier-org/terrier-core" -> "cvangysel/pyndri"
"terrier-org/terrier-core" -> "diazf/trec-data"
"yixuantt/MultiHop-RAG" -> "StonyBrookNLP/ircot"
"yixuantt/MultiHop-RAG" -> "StonyBrookNLP/musique"
"yixuantt/MultiHop-RAG" -> "chanchimin/RQ-RAG"
"yixuantt/MultiHop-RAG" -> "Alab-NII/2wikimultihop"
"yixuantt/MultiHop-RAG" -> "Graph-RAG/GraphRAG" ["e"=1]
"yixuantt/MultiHop-RAG" -> "hyintell/RetrievalQA"
"yixuantt/MultiHop-RAG" -> "IAAR-Shanghai/CRUD_RAG" ["e"=1]
"yixuantt/MultiHop-RAG" -> "wyu97/GenRead"
"zetaalphavector/RAGElo" -> "zetaalphavector/InPars"
"zetaalphavector/RAGElo" -> "AngelosNal/Vision-DiffMask"
"hymie122/RAG-Survey" -> "RUC-NLPIR/LLM4IR-Survey" ["e"=1]
"varepsilon/clickmodels" -> "markovi/PyClick"
"varepsilon/clickmodels" -> "THUIR/PSCMModel"
"varepsilon/clickmodels" -> "wikimedia/search-MjoLniR"
"varepsilon/clickmodels" -> "varepsilon/cas-eval"
"jxzhangjhu/Awesome-LLM-RAG" -> "gabriben/awesome-generative-information-retrieval" ["e"=1]
"jxzhangjhu/Awesome-LLM-RAG" -> "jzbjyb/FLARE" ["e"=1]
"xbmxb/RAG-query-rewriting" -> "carriex/recomp"
"igorbrigadir/stopwords" -> "lintool/IR-Reproducibility"
"microsoft/MS-MARCO-Web-Search" -> "OpenMatch/OpenMatch"
"microsoft/MS-MARCO-Web-Search" -> "sebastian-hofstaetter/matchmaker"
"microsoft/MS-MARCO-Web-Search" -> "ielab/PromptReps"
"microsoft/MS-MARCO-Web-Search" -> "staoxiao/RetroMAE"
"webis-de/lightning-ir" -> "tira-io/tira"
"webis-de/lightning-ir" -> "AmenRa/indxr"
"AnswerDotAI/rerankers" -> "castorini/rank_llm" ["e"=1]
"AnswerDotAI/rerankers" -> "stanford-futuredata/ColBERT" ["e"=1]
"AnswerDotAI/rerankers" -> "AmenRa/ranx" ["e"=1]
"AnswerDotAI/rerankers" -> "sunnweiwei/RankGPT" ["e"=1]
"AkariAsai/self-rag" -> "HuskyInSalt/CRAG" ["e"=1]
"AkariAsai/self-rag" -> "jzbjyb/FLARE" ["e"=1]
"AkariAsai/self-rag" -> "princeton-nlp/ALCE" ["e"=1]
"AkariAsai/self-rag" -> "facebookresearch/contriever" ["e"=1]
"AkariAsai/self-rag" -> "castorini/pyserini" ["e"=1]
"AkariAsai/self-rag" -> "starsuzi/Adaptive-RAG" ["e"=1]
"oneal2000/DRAGIN" -> "Bocchi7/DRAGIN_simplified"
"oneal2000/DRAGIN" -> "oneal2000/MIND"
"oneal2000/DRAGIN" -> "oneal2000/PRAG"
"oneal2000/DRAGIN" -> "THU-KEG/SeaKR"
"oneal2000/DRAGIN" -> "starsuzi/Adaptive-RAG"
"oneal2000/DRAGIN" -> "chanchimin/RQ-RAG"
"oneal2000/DRAGIN" -> "xsc1234/INFO-RAG"
"oneal2000/DRAGIN" -> "StonyBrookNLP/ircot"
"IAAR-Shanghai/CRUD_RAG" -> "chen700564/RGB" ["e"=1]
"laura-dietz/tutorial-utilizing-kg" -> "cvangysel/SERT"
"laura-dietz/tutorial-utilizing-kg" -> "diazf/trec-data"
"SeanLee97/AnglE" -> "ContextualAI/gritlm"
"SeanLee97/AnglE" -> "staoxiao/RetroMAE"
"SeanLee97/AnglE" -> "SmartLi8/stella"
"SeanLee97/AnglE" -> "THUIR/T2Ranking"
"SeanLee97/AnglE" -> "4AI/LS-LLaMA"
"SeanLee97/AnglE" -> "RAIVNLab/MRL"
"SeanLee97/AnglE" -> "nomic-ai/contrastors"
"SeanLee97/AnglE" -> "project-miracl/miracl"
"SeanLee97/AnglE" -> "AnswerDotAI/rerankers" ["e"=1]
"SeanLee97/AnglE" -> "lightonai/pylate" ["e"=1]
"SeanLee97/AnglE" -> "castorini/rank_llm"
"SeanLee97/AnglE" -> "McGill-NLP/llm2vec"
"SeanLee97/AnglE" -> "embeddings-benchmark/mteb"
"SeanLee97/AnglE" -> "kongds/scaling_sentemb" ["e"=1]
"SeanLee97/AnglE" -> "sunnweiwei/RankGPT"
"chanchimin/RQ-RAG" -> "starsuzi/Adaptive-RAG"
"chanchimin/RQ-RAG" -> "oneal2000/DRAGIN"
"PrithivirajDamodaran/FlashRank" -> "castorini/rank_llm" ["e"=1]
"PrithivirajDamodaran/FlashRank" -> "naver/splade" ["e"=1]
"xhluca/bm25s" -> "texttron/tevatron" ["e"=1]
"xhluca/bm25s" -> "dorianbrown/rank_bm25" ["e"=1]
"xhluca/bm25s" -> "beir-cellar/beir" ["e"=1]
"xhluca/bm25s" -> "castorini/pyserini" ["e"=1]
"xhluca/bm25s" -> "naver/splade" ["e"=1]
"xhluca/bm25s" -> "AmenRa/ranx" ["e"=1]
"xhluca/bm25s" -> "embeddings-benchmark/mteb" ["e"=1]
"OSU-NLP-Group/TravelPlanner" -> "OSU-NLP-Group/LLM-Knowledge-Conflict" ["e"=1]
"lezzago/LambdaMart" -> "houchenyu/L2R"
"lezzago/LambdaMart" -> "jma127/pyltr"
"lezzago/LambdaMart" -> "discobot/LambdaMart"
"lezzago/LambdaMart" -> "sophwats/XGBoost-lambdaMART"
"lezzago/LambdaMart" -> "acbull/Unbiased_LambdaMart"
"lezzago/LambdaMart" -> "ChenglongChen/tensorflow-LTR"
"lezzago/LambdaMart" -> "shiba24/learning2rank"
"lezzago/LambdaMart" -> "ULTR-Community/ULTRA"
"lezzago/LambdaMart" -> "airalcorn2/RankNet"
"lezzago/LambdaMart" -> "QingyaoAi/Unbiased-Learning-to-Rank-with-Unbiased-Propensity-Estimation"
"lezzago/LambdaMart" -> "haowei01/pytorch-examples"
"lezzago/LambdaMart" -> "mottalrd/learning-to-rank"
"ContextualAI/gritlm" -> "McGill-NLP/llm2vec"
"ContextualAI/gritlm" -> "texttron/tevatron"
"ContextualAI/gritlm" -> "facebookresearch/dpr-scale"
"ContextualAI/gritlm" -> "SeanLee97/AnglE"
"ContextualAI/gritlm" -> "luyug/GradCache"
"ContextualAI/gritlm" -> "xlang-ai/BRIGHT"
"ContextualAI/gritlm" -> "AIR-Bench/AIR-Bench"
"ContextualAI/gritlm" -> "Muennighoff/sgpt"
"ContextualAI/gritlm" -> "ielab/llm-rankers"
"ContextualAI/gritlm" -> "naver/splade"
"ContextualAI/gritlm" -> "kongds/E5-V" ["e"=1]
"ContextualAI/gritlm" -> "staoxiao/RetroMAE"
"ContextualAI/gritlm" -> "castorini/rank_llm"
"ContextualAI/gritlm" -> "jakespringer/echo-embeddings"
"ContextualAI/gritlm" -> "ContextualAI/HALOs" ["e"=1]
"naver/bergen" -> "Marker-Inc-Korea/AutoRAG-example-korean-embedding-benchmark" ["e"=1]
"naver/bergen" -> "ielab/llm-rankers"
"starsuzi/Adaptive-RAG" -> "StonyBrookNLP/ircot"
"starsuzi/Adaptive-RAG" -> "HuskyInSalt/CRAG"
"starsuzi/Adaptive-RAG" -> "chanchimin/RQ-RAG"
"starsuzi/Adaptive-RAG" -> "oneal2000/DRAGIN"
"starsuzi/Adaptive-RAG" -> "zorazrw/filco"
"starsuzi/Adaptive-RAG" -> "AkariAsai/self-rag" ["e"=1]
"starsuzi/Adaptive-RAG" -> "myeon9h/PlanRAG"
"starsuzi/Adaptive-RAG" -> "chen700564/RGB"
"starsuzi/Adaptive-RAG" -> "eladsegal/strategyqa"
"TREMA-UNH/trec-car-tools" -> "grill-lab/trec-cast-tools"
"castorini/ragnarok" -> "TREC-RAG/trec-rag.github.io"
"zorazrw/filco" -> "carriex/recomp"
"zorazrw/filco" -> "StonyBrookNLP/ircot"
"zorazrw/filco" -> "oriyor/ret-robust"
"liyongqi67/GRACE" -> "liyongqi67/LTRGR"
"liyongqi67/GRACE" -> "yakt00/IRGen"
"carriex/recomp" -> "zorazrw/filco"
"carriex/recomp" -> "AI21Labs/in-context-ralm"
"carriex/recomp" -> "oriyor/ret-robust"
"AIR-Bench/AIR-Bench" -> "staoxiao/RetroMAE"
"AIR-Bench/AIR-Bench" -> "google-research-datasets/swim-ir"
"AIR-Bench/AIR-Bench" -> "xlang-ai/BRIGHT"
"AIR-Bench/AIR-Bench" -> "ielab/llm-rankers"
"HansiZeng/PAG" -> "HansiZeng/RIPOR"
"stopwords-iso/stopwords-zh" -> "baipengyan/Chinese-StopWords"
"lightonai/pylate" -> "AmenRa/ranx" ["e"=1]
"simongog/sdsl-lite" -> "ot/succinct" ["e"=1]
"amazon-science/RAGChecker" -> "beir-cellar/beir" ["e"=1]
"IntelLabs/RAG-FiT" -> "yixuantt/MultiHop-RAG" ["e"=1]
"OSU-NLP-Group/GrokkedTransformer" -> "OSU-NLP-Group/LLM-Knowledge-Conflict"
"OSU-NLP-Group/GrokkedTransformer" -> "OSU-NLP-Group/llm-planning-eval"
"DeepPavlovAdmin/convai" -> "aliannejadi/ClariQ" ["e"=1]
"luceneplusplus/LucenePlusPlus" -> "pisa-engine/pisa" ["e"=1]
"weizhepei/InstructRAG" -> "oriyor/ret-robust"
"MinishLab/model2vec" -> "McGill-NLP/llm2vec" ["e"=1]
"FudanDNN-NLP/RAG" -> "carriex/recomp"
"illuin-tech/colpali" -> "stanford-futuredata/ColBERT" ["e"=1]
"AnswerDotAI/ModernBERT" -> "nomic-ai/contrastors" ["e"=1]
"AnswerDotAI/ModernBERT" -> "McGill-NLP/llm2vec" ["e"=1]
"AnswerDotAI/ModernBERT" -> "stanford-futuredata/ColBERT" ["e"=1]
"ironjr/grokfast" -> "OSU-NLP-Group/GrokkedTransformer" ["e"=1]
"OpenSenseNova/piccolo-embedding" -> "SmartLi8/stella"
"OpenSenseNova/piccolo-embedding" -> "WhereIsAI/BiLLM"
"AkariAsai/OpenScholar" -> "RulinShao/retrieval-scaling" ["e"=1]
"AkariAsai/OpenScholar" -> "xlang-ai/BRIGHT" ["e"=1]
"AkariAsai/OpenScholar" -> "RUC-NLPIR/GenIR-Survey" ["e"=1]
"andreweskeclarke/learning-rank-public" -> "ChenglongChen/tensorflow-LTR"
"andreweskeclarke/learning-rank-public" -> "mzhang001/tfranknet"
"andreweskeclarke/learning-rank-public" -> "shiba24/learning2rank"
"phaistos-networks/Trinity" -> "ot/ds2i"
"nyu-mll/multiNLI" -> "OanaMariaCamburu/e-SNLI" ["e"=1]
"dmis-lab/RAG2" -> "TergelMunkhbat/concise-reasoning"
"airalcorn2/RankNet" -> "shiba24/learning2rank"
"airalcorn2/RankNet" -> "ChenglongChen/tensorflow-LTR"
"airalcorn2/RankNet" -> "houchenyu/L2R"
"airalcorn2/RankNet" -> "haowei01/pytorch-examples"
"airalcorn2/RankNet" -> "liyinxiao/LambdaRankNN"
"airalcorn2/RankNet" -> "jma127/pyltr"
"airalcorn2/RankNet" -> "airalcorn2/Solr-LTR" ["e"=1]
"airalcorn2/RankNet" -> "ShaoQiBNU/RankNet"
"airalcorn2/RankNet" -> "lezzago/LambdaMart"
"airalcorn2/RankNet" -> "wildltr/ptranking"
"airalcorn2/RankNet" -> "andreweskeclarke/learning-rank-public"
"airalcorn2/RankNet" -> "yanshanjing/RankNet-Pytorch"
"airalcorn2/RankNet" -> "bigdong89/xgboostExtension"
"airalcorn2/RankNet" -> "discobot/LambdaMart"
"xlang-ai/BRIGHT" -> "facebookresearch/ReasonIR"
"pillowsofwind/Knowledge-Conflicts-Survey" -> "OSU-NLP-Group/LLM-Knowledge-Conflict"
"RulinShao/retrieval-scaling" -> "xlang-ai/BRIGHT"
"RulinShao/retrieval-scaling" -> "castorini/ragnarok"
"discobot/wiki_crawl" -> "discobot/ml-handbook"
"orionw/promptriever" -> "ielab/PromptReps"
"UKPLab/acl2017-non-factoid-qa" -> "betterenvi/QA-rankit"
"liuqi6777/llm4ranking" -> "liuqi6777/Awesome-LLM4Ranking"
"sunnynexus/Search-o1" -> "RUC-NLPIR/LLM4IR-Survey" ["e"=1]
"facebookresearch/DrQA" -> "facebookresearch/DPR" ["e"=1]
"allenai/document-qa" -> "nyu-dl/dl4marco-bert" ["e"=1]
"facebookresearch/large_concept_model" -> "McGill-NLP/llm2vec" ["e"=1]
"awesome-rag/awesome-rag" -> "HuskyInSalt/CRAG" ["e"=1]
"awesome-rag/awesome-rag" -> "yixuantt/MultiHop-RAG" ["e"=1]
"oneal2000/PRAG" -> "Trae1ounG/DyPRAG"
"oneal2000/PRAG" -> "oneal2000/DRAGIN"
"facebookresearch/ReasonIR" -> "xlang-ai/BRIGHT"
"facebookresearch/ReasonIR" -> "RulinShao/massive-serve"
"facebookresearch/ReasonIR" -> "LeeSureman/E5-Retrieval-Reproduction"
"HITsz-TMG/KaLM-Embedding" -> "LeeSureman/E5-Retrieval-Reproduction"
"pl8787/textnet-release" -> "faneshion/HiNT" ["e"=1]
"TergelMunkhbat/concise-reasoning" -> "dmis-lab/RAG2"
"ujjax/machine-comprehension" -> "burglarhobbit/machine-reading-comprehension"
"Trae1ounG/DyPRAG" -> "oneal2000/PRAG"
"Tiiiger/bert_score" ["l"="58.292,29.049", "c"=665]
"facebookresearch/DPR" ["l"="54.497,25.597"]
"priya-dwivedi/cs224n-Squad-Project" ["l"="54.755,26.59", "c"=587]
"sachinbiradar9/Question-Answer-Selection" ["l"="54.847,26.065"]
"tensorflow/ranking" ["l"="58.143,23.462", "c"=161]
"allegro/allRank" ["l"="54.616,25.797"]
"shiba24/learning2rank" ["l"="54.688,25.88"]
"google-deepmind/mathematics_dataset" ["l"="37.438,-0.204", "c"=126]
"google-research-datasets/natural-questions" ["l"="54.528,25.556"]
"matsui528/faiss_tips" ["l"="-1.166,3.916", "c"=576]
"staoxiao/LibVQ" ["l"="54.38,25.722"]
"wenhuchen/Table-Fact-Checking" ["l"="37.832,-2.258", "c"=1210]
"facebookresearch/multihop_dense_retrieval" ["l"="54.545,25.517"]
"facebookresearch/LAMA" ["l"="49.998,38.071", "c"=684]
"facebookresearch/KILT" ["l"="54.501,25.555"]
"danqi/acl2020-openqa-tutorial" ["l"="54.495,25.53"]
"pisa-engine/pisa" ["l"="54.521,25.837"]
"ot/ds2i" ["l"="54.412,26.045"]
"allenai/ir_datasets" ["l"="54.516,25.736"]
"zhihu/rucene" ["l"="-10.082,-6.129", "c"=5]
"joaopalotti/trectools" ["l"="54.514,25.772"]
"osirrc/ciff" ["l"="54.531,25.875"]
"terrierteam/pyterrier_pisa" ["l"="54.548,25.852"]
"naver/splade" ["l"="54.533,25.684"]
"castorini/anserini" ["l"="54.522,25.717"]
"TusKANNy/seismic" ["l"="-0.909,3.882", "c"=576]
"quickwit-oss/tantivy" ["l"="-10.004,-6.013", "c"=5]
"sebastian-hofstaetter/matchmaker" ["l"="54.498,25.747"]
"toshi-search/Toshi" ["l"="-10.075,-6.082", "c"=5]
"iresearch-toolkit/iresearch" ["l"="-19.811,-24.056", "c"=10]
"gvinciguerra/PGM-index" ["l"="1.692,13.518", "c"=376]
"fast-pack/FastPFOR" ["l"="-19.315,-26.156", "c"=10]
"tomohideshibata/BERT-related-papers" ["l"="53.272,27.134", "c"=60]
"google-research-datasets/paws" ["l"="57.488,29.327", "c"=1082]
"google-research-datasets/tydiqa" ["l"="54.657,25.438"]
"facebookresearch/anli" ["l"="54.572,25.442"]
"dorianbrown/rank_bm25" ["l"="54.57,25.663"]
"castorini/pyserini" ["l"="54.512,25.65"]
"beir-cellar/beir" ["l"="54.538,25.659"]
"nhirakawa/BM25" ["l"="54.657,25.639"]
"xhluca/bm25s" ["l"="41.234,0.883", "c"=7]
"castorini/pygaggle" ["l"="54.505,25.713"]
"princeton-nlp/SimCSE" ["l"="53.339,27.107", "c"=60]
"texttron/tevatron" ["l"="54.504,25.68"]
"facebookresearch/contriever" ["l"="54.494,25.618"]
"microsoft/MSMARCO-Passage-Ranking" ["l"="54.468,25.769"]
"facebookresearch/GENRE" ["l"="-0.406,-42.173", "c"=934]
"embeddings-benchmark/mteb" ["l"="54.604,25.622"]
"microsoft/BlingFire" ["l"="52.887,25.655", "c"=172]
"cvangysel/pytrec_eval" ["l"="54.515,25.749"]
"usnistgov/trec_eval" ["l"="54.506,25.81"]
"Georgetown-IR-Lab/OpenNIR" ["l"="54.501,25.79"]
"capreolus-ir/capreolus" ["l"="54.504,25.777"]
"microsoft/ANCE" ["l"="54.475,25.7"]
"thunlp/OpenMatch" ["l"="54.467,25.755"]
"nyu-dl/dl4marco-bert" ["l"="54.495,25.763"]
"jcpeterson/openwebtext" ["l"="53.366,25.768", "c"=172]
"facebookresearch/ELI5" ["l"="54.512,25.484"]
"google-research/xtreme" ["l"="54.681,25.374"]
"thunlp/TAADpapers" ["l"="52.779,25.414", "c"=172]
"gnes-ai/gnes" ["l"="52.9,25.615", "c"=172]
"koursaros-ai/nboost" ["l"="54.558,25.795"]
"seriousran/awesome-qa" ["l"="55.513,26.132", "c"=1119]
"AkariAsai/learning_to_retrieve_reasoning_paths" ["l"="54.515,25.526"]
"google-research/language" ["l"="54.474,25.54"]
"allenai/document-qa" ["l"="54.714,26.491", "c"=587]
"hotpotqa/hotpot" ["l"="54.773,26.424", "c"=587]
"mrqa/MRQA-Shared-Task-2019" ["l"="54.744,26.404", "c"=587]
"mandarjoshi90/triviaqa" ["l"="54.725,26.453", "c"=587]
"princeton-nlp/DensePhrases" ["l"="54.506,25.572"]
"allenai/bi-att-flow" ["l"="54.681,26.519", "c"=587]
"facebookresearch/PAQ" ["l"="54.531,25.533"]
"facebookresearch/FiD" ["l"="54.475,25.57"]
"Alir3z4/stop-words" ["l"="54.063,26.08"]
"Alir3z4/python-stop-words" ["l"="54.029,26.099"]
"6/stopwords-json" ["l"="54.1,26.059"]
"stopwords-iso/stopwords-iso" ["l"="54.149,26.027"]
"cedrickchee/awesome-transformer-nlp" ["l"="53.421,27.127", "c"=60]
"NTMC-Community/awesome-neural-models-for-semantic-match" ["l"="53.257,27.397", "c"=60]
"AdeDZY/DeepCT" ["l"="54.482,25.746"]
"AdeDZY/SIGIR19-BERT-IR" ["l"="54.453,25.792"]
"google-research/electra" ["l"="53.282,27.163", "c"=60]
"facebookresearch/XLM" ["l"="53.036,25.657", "c"=172]
"marcotcr/checklist" ["l"="52.788,25.588", "c"=172]
"abisee/pointer-generator" ["l"="58.397,29.109", "c"=665]
"namisan/mt-dnn" ["l"="53.308,27.184", "c"=60]
"thunlp/ERNIE" ["l"="53.397,27.266", "c"=60]
"QingyaoAi/Deep-Listwise-Context-Model-for-Ranking-Refinement" ["l"="54.709,25.838"]
"ULTR-Community/ULTRA" ["l"="54.635,25.823"]
"rec-agent/drr" ["l"="54.794,25.83"]
"ChenglongChen/tensorflow-LTR" ["l"="54.705,25.874"]
"HarrieO/OnlineLearningToRank" ["l"="54.618,25.879"]
"sak2km/OnlineLearningToRank" ["l"="54.624,25.906"]
"acbull/Unbiased_LambdaMart" ["l"="54.657,25.843"]
"QingyaoAi/Unbiased-Learning-to-Rank-with-Unbiased-Propensity-Estimation" ["l"="54.645,25.855"]
"lezzago/LambdaMart" ["l"="54.682,25.858"]
"zszazi/Deep-learning-in-cloud" ["l"="23.656,15.155", "c"=728]
"bplank/awesome-neural-adaptation-in-NLP" ["l"="54.766,25.245"]
"houchenyu/L2R" ["l"="54.684,25.842"]
"airalcorn2/RankNet" ["l"="54.698,25.856"]
"haowei01/pytorch-examples" ["l"="54.669,25.829"]
"liyinxiao/LambdaRankNN" ["l"="54.715,25.853"]
"akanyaani/ranknet-tensorflow2.0" ["l"="53.428,25.934", "c"=172]
"baidu/DuReader" ["l"="54.664,26.542", "c"=587]
"PaddlePaddle/RocketQA" ["l"="54.461,25.635"]
"stxxl/stxxl" ["l"="1.577,13.486", "c"=376]
"cosmo-team/cosmo" ["l"="54.294,26.146"]
"iai-group/arXivDigest" ["l"="54.42,25.897"]
"osirrc/jig" ["l"="54.446,25.866"]
"lintool/guide" ["l"="54.498,25.736"]
"castorini/chatty-goose" ["l"="54.498,25.906"]
"jingtaozhan/DRhard" ["l"="54.458,25.708"]
"luyug/COIL" ["l"="54.468,25.716"]
"ielab/asyncval" ["l"="54.511,25.703"]
"facebookresearch/dpr-scale" ["l"="54.489,25.638"]
"chauff/conversationalIR" ["l"="54.478,25.902"]
"prdwb/orconvqa-release" ["l"="54.492,25.958"]
"aliannejadi/qulac" ["l"="54.463,25.93"]
"microsoft/MSMARCO-Conversational-Search" ["l"="54.444,25.887"]
"thunlp/ConvDR" ["l"="54.474,25.966"]
"yangliuy/NeuralResponseRanking" ["l"="54.498,25.994"]
"microsoft/MIMICS" ["l"="54.446,25.94"]
"daltonj/treccastweb" ["l"="54.47,25.873"]
"grill-lab/trec-cast-tools" ["l"="54.464,25.889"]
"microsoft/TREC-2019-Deep-Learning" ["l"="54.467,25.815"]
"nyu-dl/dl4ir-doc2query" ["l"="54.448,25.776"]
"castorini/duobert" ["l"="54.477,25.781"]
"spacemanidol/MSMARCO" ["l"="54.44,25.804"]
"Georgetown-IR-Lab/cedr" ["l"="54.482,25.796"]
"castorini/docTTTTTquery" ["l"="54.478,25.73"]
"castorini/birch" ["l"="54.468,25.801"]
"lintool/robust04-analysis" ["l"="54.413,25.795"]
"sebastian-hofstaetter/teaching" ["l"="54.539,25.719"]
"ict-bigdatalab/awesome-pretrained-models-for-information-retrieval" ["l"="54.487,25.687"]
"zetaalphavector/InPars" ["l"="54.521,25.676"]
"terrier-org/ecir2021tutorial" ["l"="54.522,25.792"]
"terrier-org/pyterrier" ["l"="54.531,25.759"]
"caiyinqiong/Semantic-Retrieval-Models" ["l"="54.491,25.703"]
"ChenglongChen/tensorflow-DSMM" ["l"="57.959,23.234", "c"=161]
"ShaoQiBNU/RankNet" ["l"="54.75,25.869"]
"yanshanjing/RankNet-Pytorch" ["l"="54.74,25.857"]
"eggie5/RankNet" ["l"="54.787,25.871"]
"sebastian-hofstaetter/sigir19-neural-ir" ["l"="54.426,25.795"]
"canjiali/PARADE" ["l"="54.488,25.81"]
"hamed-zamani/snrm" ["l"="54.457,25.824"]
"faneshion/HiNT" ["l"="54.424,25.847"]
"Alan-Lee123/answer-selection" ["l"="54.869,26.071"]
"betterenvi/QA-rankit" ["l"="54.804,26.025"]
"Chiang97912/QA_LSTM_ATTENTION" ["l"="54.869,26.092"]
"thunlp/ReInfoSelect" ["l"="54.402,25.871"]
"NTMC-Community/MatchZoo-py" ["l"="53.292,27.347", "c"=60]
"oborchers/Fast_Sentence_Embeddings" ["l"="52.756,25.548", "c"=172]
"facebookresearch/XNLI" ["l"="54.643,25.368"]
"TalSchuster/CrossLingualContextualEmb" ["l"="54.637,25.324"]
"artetxem/vecmap" ["l"="53.844,24.746", "c"=492]
"facebookresearch/MLDoc" ["l"="54.671,25.339"]
"google-deepmind/xquad" ["l"="54.702,25.389"]
"OanaMariaCamburu/e-SNLI" ["l"="54.597,25.379"]
"HKUST-KnowComp/R-Net" ["l"="54.695,26.506", "c"=587]
"jihoo-kim/Awesome-Generative-RecSys" ["l"="59.312,22.91", "c"=778]
"gabriben/awesome-generative-information-retrieval" ["l"="54.451,25.671"]
"vespa-engine/sample-apps" ["l"="-1.34,4.066", "c"=576]
"diazf/trec-data" ["l"="54.457,25.852"]
"Alab-NII/2wikimultihop" ["l"="54.222,25.507"]
"StonyBrookNLP/musique" ["l"="54.196,25.508"]
"ielab/relevation" ["l"="54.589,25.772"]
"Georgetown-IR-Lab/covid-neural-ir" ["l"="54.635,25.769"]
"andreweskeclarke/learning-rank-public" ["l"="54.705,25.899"]
"jma127/pyltr" ["l"="54.665,25.873"]
"zhangzibin/PairCNN-Ranking" ["l"="54.719,25.917"]
"microsoft/MSMARCO-Question-Answering" ["l"="54.438,25.824"]
"microsoft/MSMARCO-Document-Ranking" ["l"="54.434,25.765"]
"WenRichard/CNN-in-Answer-selection" ["l"="54.893,26.103"]
"AdeDZY/K-NRM" ["l"="54.419,25.81"]
"thunlp/EntityDuetNeuralRanking" ["l"="54.419,25.827"]
"ucasir/NPRF" ["l"="54.393,25.825"]
"yunhenk/Conv-KNRM" ["l"="54.372,25.832"]
"khui/copacrr" ["l"="54.362,25.818"]
"thunlp/Kernel-Based-Neural-Ranking-Models" ["l"="54.402,25.805"]
"pl8787/MatchPyramid-TensorFlow" ["l"="53.146,27.581", "c"=60]
"prdwb/UserIntentPrediction" ["l"="54.501,26.025"]
"nlpaueb/deep-relevance-ranking" ["l"="54.373,25.861"]
"wildltr/ptranking" ["l"="54.627,25.836"]
"THUDM/CogQA" ["l"="54.79,26.39", "c"=587]
"Albert-Ma/PROP" ["l"="54.446,25.735"]
"meta-toolkit/meta" ["l"="54.326,26.258"]
"meta-toolkit/metapy" ["l"="54.295,26.27"]
"smassung/text-data-book-comments" ["l"="54.338,26.285"]
"mit-nlp/MITIE" ["l"="55.592,28.319", "c"=513]
"phaistos-networks/Trinity" ["l"="54.369,26.173"]
"FidoProject/Fido" ["l"="54.305,26.312"]
"studio-ousia/luke" ["l"="-0.403,-42.199", "c"=934]
"rikdz/GraphWriter" ["l"="57.631,29.191", "c"=1082]
"airalcorn2/Solr-LTR" ["l"="-2.277,8.87", "c"=1024]
"diazf/indri" ["l"="54.467,25.834"]
"castorini/hedwig" ["l"="53.272,28.712", "c"=1200]
"sophwats/XGBoost-lambdaMART" ["l"="54.766,25.881"]
"sophwats/learning-to-rank" ["l"="54.796,25.892"]
"SawanKumar28/nile" ["l"="54.589,25.351"]
"hsinyuan-huang/FlowQA" ["l"="54.694,26.399", "c"=587]
"prdwb/bert_hae" ["l"="54.514,26.046"]
"deepnlp-cs599-usc/quac" ["l"="54.511,26.073"]
"qipeng/golden-retriever" ["l"="54.769,26.378", "c"=587]
"guilgautier/DPPy" ["l"="54.974,25.858"]
"ChengtaoLi/dpp" ["l"="54.993,25.876"]
"laming-chen/fast-map-dpp" ["l"="54.901,25.846"]
"LCSL/dpp-vfx" ["l"="54.977,25.88"]
"mehdidc/dpp" ["l"="55.01,25.848"]
"satwik77/pyDPP" ["l"="55.005,25.866"]
"facebookresearch/UnsupervisedQA" ["l"="54.708,26.282", "c"=587]
"fclaude/libcds2" ["l"="54.317,26.13"]
"fclaude/libcds" ["l"="54.338,26.112"]
"zlsh80826/MSMARCO" ["l"="54.352,25.842"]
"rank2rec/rerank" ["l"="54.755,25.819"]
"hf4Academic/PRM" ["l"="54.781,25.814"]
"tsinghua-fib-lab/DGCN" ["l"="54.93,25.846"]
"stevezheng23/xlnet_extension_tf" ["l"="54.533,26.097"]
"ecchochan/roberta-squad" ["l"="54.546,26.126"]
"prdwb/attentive_history_selection" ["l"="54.519,26.014"]
"MiuLab/FlowDelta" ["l"="54.525,26.031"]
"burglarhobbit/machine-reading-comprehension" ["l"="54.318,25.857"]
"ujjax/machine-comprehension" ["l"="54.292,25.869"]
"aliannejadi/ClariQ" ["l"="54.441,25.957"]
"metalaman/insuranceqa-pytorch" ["l"="54.874,26.113"]
"stanford-futuredata/ColBERT" ["l"="54.569,25.629"]
"AnswerDotAI/RAGatouille" ["l"="41.095,0.724", "c"=7]
"stanfordnlp/dspy" ["l"="40.726,0.466", "c"=7]
"huggingface/setfit" ["l"="52.568,25.752", "c"=172]
"AnswerDotAI/rerankers" ["l"="41.2,0.811", "c"=7]
"FlagOpen/FlagEmbedding" ["l"="38.963,-1.98", "c"=202]
"axolotl-ai-cloud/axolotl" ["l"="38.697,-0.594", "c"=39]
"UKPLab/sentence-transformers" ["l"="52.909,25.852", "c"=172]
"sunnweiwei/RankGPT" ["l"="54.487,25.659"]
"luyug/Reranker" ["l"="54.489,25.724"]
"luyug/Condenser" ["l"="54.485,25.714"]
"castorini/anserini-notebooks" ["l"="54.546,25.733"]
"staoxiao/RetroMAE" ["l"="54.502,25.693"]
"jingtaozhan/RepBERT-Index" ["l"="54.424,25.717"]
"facebookresearch/MLQA" ["l"="54.694,25.412"]
"linzehui/mRASP" ["l"="53.997,24.726", "c"=492]
"neulab/awesome-align" ["l"="53.864,24.816", "c"=492]
"roomylee/nlp-papers-with-arxiv" ["l"="-5.229,-23.089", "c"=164]
"facebookresearch/cc_net" ["l"="38.527,-0.625", "c"=39]
"facebookresearch/LASER" ["l"="52.968,25.635", "c"=172]
"google-research/multilingual-t5" ["l"="53.272,27.002", "c"=60]
"shijie-wu/crosslingual-nlp" ["l"="54.725,25.291"]
"hplt-project/sacremoses" ["l"="53.84,24.799", "c"=492]
"microsoft/DeBERTa" ["l"="53.231,27.124", "c"=60]
"facebookresearch/BLINK" ["l"="-0.394,-42.155", "c"=934]
"rjagerman/pytorchltr" ["l"="54.684,25.781"]
"Guzpenha/transformer_rankers" ["l"="54.617,25.857"]
"allenai/longformer" ["l"="53.252,27.091", "c"=60]
"patil-suraj/question_generation" ["l"="57.345,29.309", "c"=1082]
"Hironsan/bertsearch" ["l"="-2.445,8.83", "c"=1024]
"md-experiments/elastic_transformers" ["l"="-2.477,8.875", "c"=1024]
"MighTguY/customized-symspell" ["l"="-2.316,8.883", "c"=1024]
"PolyAI-LDN/polyai-models" ["l"="56.562,29.278", "c"=310]
"utterworks/fast-bert" ["l"="52.823,25.655", "c"=172]
"SeaseLtd/rated-ranking-evaluator" ["l"="-2.316,8.845", "c"=1024]
"deepset-ai/FARM" ["l"="52.738,25.6", "c"=172]
"o19s/elasticsearch-learning-to-rank" ["l"="-2.391,8.813", "c"=1024]
"neubig/lowresource-nlp-bootcamp-2020" ["l"="52.812,25.546", "c"=172]
"terrierteam/ir_measures" ["l"="54.545,25.773"]
"terrier-org/terrier-core" ["l"="54.485,25.832"]
"AmenRa/ranx" ["l"="54.553,25.749"]
"terrierteam/pyterrier_colbert" ["l"="54.607,25.762"]
"ielab/llm-rankers" ["l"="54.471,25.686"]
"metarank/metarank" ["l"="-2.405,8.868", "c"=1024]
"markovi/PyClick" ["l"="54.593,25.862"]
"tommccoy1/hans" ["l"="48.448,32.242", "c"=300]
"AI-secure/InfoBERT" ["l"="52.731,25.336", "c"=172]
"sebastian-hofstaetter/neural-ranking-kd" ["l"="54.46,25.733"]
"sebastian-hofstaetter/tas-balanced-dense-retrieval" ["l"="54.441,25.721"]
"thunlp/COVID19-IRQA" ["l"="54.38,25.889"]
"varepsilon/clickmodels" ["l"="54.609,25.929"]
"o19s/hello-ltr" ["l"="-2.326,8.833", "c"=1024]
"THUIR/PSCMModel" ["l"="54.599,25.904"]
"mitre/quaerite" ["l"="-2.303,8.879", "c"=1024]
"svjan5/GNNs-for-NLP" ["l"="55.726,26.74", "c"=464]
"google-research/fast-soft-sort" ["l"="21.671,13.817", "c"=267]
"microsoft/macaw" ["l"="54.494,25.885"]
"ULTR-Community/ULTRA_pytorch" ["l"="54.701,25.804"]
"pl8787/SetRank" ["l"="54.641,25.889"]
"ArvinZhuang/DSI-transformers" ["l"="54.42,25.668"]
"UKPLab/gpl" ["l"="54.491,25.673"]
"capreolus-ir/diffir" ["l"="54.543,25.816"]
"andrewyates/profane" ["l"="54.522,25.816"]
"allenai/unifiedqa" ["l"="55.727,25.928", "c"=1119]
"google-research-datasets/QED" ["l"="54.652,25.409"]
"google-research/tapas" ["l"="37.886,-2.277", "c"=1210]
"ot/succinct" ["l"="54.379,26.08"]
"xxsds/DYNAMIC" ["l"="-39.348,21.298", "c"=563]
"ot/semi_index" ["l"="54.373,26.106"]
"AmenRa/retriv" ["l"="54.584,25.813"]
"lightonai/pylate" ["l"="41.253,0.965", "c"=7]
"tira-io/ir-experiment-platform" ["l"="54.589,25.786"]
"facebookresearch/atlas" ["l"="54.454,25.579"]
"princeton-nlp/TRIME" ["l"="36.984,-2.623", "c"=797]
"wyu97/GenRead" ["l"="54.383,25.553"]
"DevSinghSachan/emdr2" ["l"="54.549,25.547"]
"bigscience-workshop/t-zero" ["l"="37.173,-0.038", "c"=126]
"microsoft/MPNet" ["l"="54.723,25.251"]
"laiguokun/Funnel-Transformer" ["l"="48.851,34.002", "c"=556]
"microsoft/ProphetNet" ["l"="45.987,30.757", "c"=367]
"AlexTMallen/adaptive-retrieval" ["l"="54.45,25.514"]
"shmsw25/DecompRC" ["l"="54.789,26.404", "c"=587]
"rajarshd/Multi-Step-Reasoning" ["l"="54.755,26.371", "c"=587]
"seominjoon/denspi" ["l"="54.776,26.347", "c"=587]
"yuwfan/HGN" ["l"="54.83,26.416", "c"=587]
"nitishgupta/nmn-drop" ["l"="54.299,27.425", "c"=60]
"facebookresearch/QA-Overlap" ["l"="54.549,25.498"]
"shmsw25/qa-hard-em" ["l"="54.755,26.338", "c"=587]
"JasonForJoy/Leaderboards-for-Multi-Turn-Response-Selection" ["l"="56.803,29.103", "c"=310]
"urvashik/knnlm" ["l"="36.965,-2.651", "c"=797]
"teacherpeterpan/Question-Generation-Paper-List" ["l"="57.342,29.28", "c"=1082]
"soulbliss/NLP-conference-compendium" ["l"="53.564,27.052", "c"=60]
"frutik/awesome-search" ["l"="-2.368,8.851", "c"=1024]
"harpribot/awesome-information-retrieval" ["l"="54.563,25.722"]
"SALT-NLP/MixText" ["l"="53.931,27.313", "c"=60]
"princeton-nlp/EntityQuestions" ["l"="54.477,25.647"]
"haitian-sun/GraftNet" ["l"="55.622,26.055", "c"=1119]
"malllabiisc/EmbedKGQA" ["l"="55.602,26.032", "c"=1119]
"thunlp/PLMpapers" ["l"="53.319,27.158", "c"=60]
"thunlp/RCPapers" ["l"="54.714,26.541", "c"=587]
"linkedin/detext" ["l"="52.65,25.609", "c"=172]
"allenai/dont-stop-pretraining" ["l"="53.345,27.068", "c"=60]
"microsoft/fastformers" ["l"="52.612,25.524", "c"=172]
"studio-ousia/bpr" ["l"="54.533,25.579"]
"thunlp/NeuIRPapers" ["l"="54.402,25.838"]
"xhan77/AdaptaBERT" ["l"="54.787,25.215"]
"thunlp/XQA" ["l"="54.699,25.436"]
"apple/ml-mkqa" ["l"="54.739,25.378"]
"AkariAsai/XORQA" ["l"="54.681,25.489"]
"mia-workshop/MIA-Shared-Task-2022" ["l"="54.767,25.373"]
"jiangnanboy/learning_to_rank" ["l"="54.674,25.897"]
"myeclipse/wsdm_cup_2020_solution" ["l"="54.679,25.95"]
"microsoft/MSMARCO-Document-Ranking-Submissions" ["l"="54.396,25.772"]
"bzantium/bert-AAD" ["l"="54.801,25.195"]
"cliang1453/BOND" ["l"="53.637,27.633", "c"=60]
"dmis-lab/GeNER" ["l"="54.563,25.526"]
"cisnlp/simalign" ["l"="53.845,24.831", "c"=492]
"pl8787/wsdm2021-beyond-prp-tutorial" ["l"="54.648,25.924"]
"neulab/nn4nlp-concepts" ["l"="53.121,25.504", "c"=172]
"algoprog/Faspect" ["l"="54.424,25.962"]
"facebookresearch/reconsider" ["l"="54.582,25.503"]
"thunlp/ConversationQueryRewriter" ["l"="54.475,25.981"]
"nickvosk/sigir2020-query-resolution" ["l"="54.458,25.999"]
"ot/partitioned_elias_fano" ["l"="54.413,26.071"]
"jermp/clustered_elias_fano_indexes" ["l"="54.389,26.053"]
"oaqa/FlexNeuART" ["l"="54.431,25.736"]
"liyinxiao/Ranking_Papers" ["l"="54.753,25.841"]
"jingtaozhan/disentangled-retriever" ["l"="54.429,25.691"]
"jingtaozhan/RepCONC" ["l"="54.42,25.707"]
"rjagerman/sigir2020" ["l"="54.715,25.774"]
"dmis-lab/excord" ["l"="54.546,26.033"]
"JD-AI-Research-NLP/RoR" ["l"="54.535,26.042"]
"castorini/cqe" ["l"="54.508,25.939"]
"facebookresearch/SEAL" ["l"="54.4,25.622"]
"Albert-Ma/COSTA" ["l"="54.393,25.758"]
"zhengyima/Anchors" ["l"="54.406,25.754"]
"xuanyuan14/ARES" ["l"="52.871,27.893", "c"=60]
"jingtaozhan/JPQ" ["l"="54.44,25.68"]
"RUCAIBox/DenseRetrieval" ["l"="54.448,25.689"]
"RUC-NLPIR/LLM4IR-Survey" ["l"="54.447,25.654"]
"luyug/Dense" ["l"="54.532,25.737"]
"luyug/GC-DPR" ["l"="54.508,25.726"]
"DI4IR/SIGIR2021" ["l"="54.409,25.733"]
"thongnt99/learned-sparse-retrieval" ["l"="54.453,25.719"]
"luyug/GradCache" ["l"="54.519,25.695"]
"lixsh6/Tencent_wsdm_cup2023" ["l"="52.837,27.942", "c"=60]
"MaartenGr/KeyBERT" ["l"="52.599,25.766", "c"=172]
"yuchenlin/rebiber" ["l"="-3.863,23.517", "c"=827]
"stanford-futuredata/Baleen" ["l"="54.154,25.501"]
"hover-nlp/hover" ["l"="54.129,25.493"]
"attardi/wikiextractor" ["l"="53.009,25.629", "c"=172]
"project-miracl/miracl" ["l"="54.634,25.62"]
"zhijing-jin/nlp-phd-global-equality" ["l"="-3.842,23.383", "c"=827]
"IR-LLM/Awesome-Information-Retrieval-in-the-Age-of-Large-Language-Model" ["l"="43.88,0.482", "c"=135]
"teddykoker/torchsort" ["l"="21.634,13.919", "c"=267]
"seanmacavaney/autoqrels" ["l"="54.576,25.781"]
"lintool/IR-Reproducibility" ["l"="54.433,25.866"]
"leifos/simiir" ["l"="54.474,25.851"]
"OpenMatch/ANCE-Tele" ["l"="54.403,25.698"]
"HansiZeng/CL-DRD" ["l"="54.44,25.705"]
"zliucr/CrossNER" ["l"="56.872,29.292", "c"=310]
"princeton-nlp/LM-BFF" ["l"="50.039,38.082", "c"=684]
"styfeng/DataAug4NLP" ["l"="52.673,25.732", "c"=172]
"shmsw25/bart-closed-book-qa" ["l"="54.485,25.488"]
"teacherpeterpan/Unsupervised-Multi-hop-QA" ["l"="37.815,-2.276", "c"=1210]
"zycdev/AISO" ["l"="54.792,26.335", "c"=587]
"soco-ai/SF-QA" ["l"="54.601,25.476"]
"AkariAsai/unanswerable_qa" ["l"="54.812,26.28", "c"=587]
"yasserg/jforests" ["l"="54.81,25.946"]
"rjagerman/scalarank" ["l"="54.831,25.959"]
"mkusner/wmd" ["l"="53.106,25.391", "c"=172]
"aseveryn/deep-qa" ["l"="54.747,25.966"]
"4AI/AGN" ["l"="54.76,25.661"]
"4AI/RAN" ["l"="54.753,25.648"]
"pgvector/pgvector-python" ["l"="3.951,13.361", "c"=850]
"DAMO-NLP-SG/Inf-CLIP" ["l"="47.755,33.075", "c"=373]
"ContextualAI/gritlm" ["l"="54.555,25.676"]
"nomic-ai/contrastors" ["l"="54.57,25.693"]
"stanford-crfm/mistral" ["l"="-0.318,-42.223", "c"=934]
"unicamp-dl/mMARCO" ["l"="54.599,25.647"]
"hltcoe/ColBERT-X" ["l"="54.679,25.611"]
"castorini/mr.tydi" ["l"="54.667,25.548"]
"shashankg7/Keras-CNN-QA" ["l"="54.742,25.946"]
"brmson/Sentence-selection" ["l"="54.77,25.997"]
"castorini/NCE-CNN-Torch" ["l"="52.848,27.446", "c"=60]
"carpedm20/attentive-reader-tensorflow" ["l"="54.668,26.635", "c"=587]
"Isminoula/DL-to-Rank" ["l"="54.713,25.938"]
"AkariAsai/CORA" ["l"="54.687,25.517"]
"eladsegal/strategyqa" ["l"="54.244,25.492"]
"apple/ml-qrecc" ["l"="54.474,26.019"]
"apple/ml-knowledge-conflicts" ["l"="54.482,26.107"]
"McGill-NLP/topiocqa" ["l"="37.105,0.25", "c"=126]
"scai-conf/SCAI-QReCC-21" ["l"="54.464,26.046"]
"allenai/naacl2021-longdoc-tutorial" ["l"="48.8,34.092", "c"=556]
"discobot/ml-handbook" ["l"="54.76,25.897"]
"discobot/wiki_crawl" ["l"="54.749,25.903"]
"shaoyx/UniNet" ["l"="54.339,25.735"]
"DuoLife-QNL/GraSorw" ["l"="54.3,25.742"]
"morningmoni/GAR" ["l"="54.37,25.612"]
"voidism/EAR" ["l"="54.325,25.603"]
"DevSinghSachan/unsupervised-passage-reranking" ["l"="54.427,25.634"]
"microsoft/MSMARCO-Passage-Ranking-Submissions" ["l"="54.36,25.783"]
"princeton-nlp/OptiPrompt" ["l"="49.956,38.053", "c"=684]
"javiergonzalezh/dpp" ["l"="55.031,25.847"]
"microsoft/SpeedyRec" ["l"="54.278,25.765"]
"microsoft/MoPQ" ["l"="54.294,25.763"]
"microsoft/BiDR" ["l"="54.314,25.753"]
"Alibaba-NLP/Multi-CPR" ["l"="54.437,25.616"]
"luhua-rain/MRC_Competition_Dureader" ["l"="53.404,27.285", "c"=60]
"PaddlePaddle/Research" ["l"="53.352,27.199", "c"=60]
"PaddlePaddle/Knover" ["l"="56.706,29.089", "c"=310]
"THUIR/T2Ranking" ["l"="54.521,25.664"]
"thu-coai/CDial-GPT" ["l"="53.33,27.134", "c"=60]
"oneal2000/Wikiformer" ["l"="52.864,27.921", "c"=60]
"OpenMatch/COCO-DR" ["l"="54.434,25.663"]
"ArvinZhuang/DSI-QG" ["l"="54.407,25.636"]
"microsoft/AR2" ["l"="54.549,25.594"]
"microsoft/advNLG" ["l"="54.576,25.558"]
"AkariAsai/self-rag" ["l"="41.139,0.746", "c"=7]
"princeton-nlp/ALCE" ["l"="54.43,25.535"]
"namespace-Pt/Adon" ["l"="54.319,25.728"]
"solidsea98/Neural-Corpus-Indexer-NCI" ["l"="54.402,25.654"]
"m-shilpa/Transformer_Memory_As_A_Differentiable_Search_Index" ["l"="54.387,25.649"]
"VerdureChen/Understanding_DSI" ["l"="54.375,25.666"]
"liyongqi67/MINDER" ["l"="54.365,25.641"]
"HansiZeng/RIPOR" ["l"="54.379,25.654"]
"ict-bigdatalab/CorpusBrain" ["l"="54.427,25.603"]
"Chriskuei/GERE" ["l"="54.402,25.594"]
"Muennighoff/sgpt" ["l"="54.539,25.638"]
"xlang-ai/instructor-embedding" ["l"="54.575,25.595"]
"wangyuxinwhy/uniem" ["l"="39.057,-2.129", "c"=202]
"facebookresearch/Sphere" ["l"="37.109,-2.713", "c"=797]
"wikipedia2vec/wikipedia2vec" ["l"="-0.43,-42.162", "c"=934]
"huggingface/text-embeddings-inference" ["l"="38.74,-0.669", "c"=39]
"McGill-NLP/llm2vec" ["l"="54.627,25.653"]
"explodinggradients/ragas" ["l"="40.902,0.598", "c"=7]
"netease-youdao/BCEmbedding" ["l"="38.98,-2.017", "c"=202]
"open-compass/opencompass" ["l"="38.902,-2.019", "c"=202]
"lucidrains/RETRO-pytorch" ["l"="-5.216,-23.353", "c"=164]
"AI21Labs/in-context-ralm" ["l"="54.396,25.53"]
"lucidrains/memorizing-transformers-pytorch" ["l"="37.965,-1.611", "c"=1218]
"acl-org/aclpubcheck" ["l"="36.784,-2.589", "c"=797]
"google/rax" ["l"="54.779,25.783"]
"smfrpc/smf" ["l"="0.833,14.178", "c"=115]
"cvangysel/pyndri" ["l"="54.501,25.829"]
"teanalab/FieldedSDM" ["l"="52.337,27.293", "c"=60]
"TREMA-UNH/trec-car-tools" ["l"="54.488,25.866"]
"alexa/massive" ["l"="56.73,29.253", "c"=310]
"shibing624/similarities" ["l"="38.949,-2.178", "c"=202]
"mottalrd/learning-to-rank" ["l"="54.711,25.888"]
"discobot/LambdaMart" ["l"="54.729,25.885"]
"r-three/t-few" ["l"="50.119,38.15", "c"=684]
"facebookresearch/tart" ["l"="54.429,25.575"]
"JetRunner/LaPraDoR" ["l"="54.455,25.611"]
"voidism/DiffCSE" ["l"="53.258,26.796", "c"=60]
"allenai/deep_qa" ["l"="55.894,28.39", "c"=513]
"dmis-lab/BERN2" ["l"="-33.491,16.346", "c"=404]
"FidoProject/Research" ["l"="54.297,26.337"]
"muyuuuu/E-commerce-Search-Recall" ["l"="53.35,26.804", "c"=60]
"AlibabaResearch/HLATR" ["l"="54.353,25.59"]
"castorini/dhr" ["l"="54.601,25.594"]
"zetaalphavector/RAGElo" ["l"="54.614,25.676"]
"google-research/t5x_retrieval" ["l"="54.617,25.713"]
"jermp/data_compression_course" ["l"="39.508,37.761", "c"=1288]
"RAIVNLab/MRL" ["l"="54.596,25.691"]
"SeanLee97/AnglE" ["l"="54.594,25.668"]
"DunZhang/Stella" ["l"="54.652,25.704"]
"SmartLi8/stella" ["l"="54.628,25.687"]
"amzn/trans-encoder" ["l"="53.24,26.762", "c"=60]
"shuzi/insuranceQA" ["l"="55.861,28.386", "c"=513]
"ellaneeman/disent_qa" ["l"="54.478,26.13"]
"sebastian-hofstaetter/colberter" ["l"="54.593,25.574"]
"hltcoe/patapsco" ["l"="54.711,25.597"]
"princeton-nlp/EvalConvQA" ["l"="54.566,26.059"]
"Alibaba-NLP/HLATR" ["l"="54.317,25.58"]
"AIR-Bench/AIR-Bench" ["l"="54.539,25.7"]
"OpenMatch/OpenMatch" ["l"="54.482,25.756"]
"Chriskuei/awesome-generative-retrieval-models" ["l"="54.385,25.676"]
"sunnweiwei/GenRet" ["l"="54.342,25.636"]
"RUC-NLPIR/GenIR-Survey" ["l"="54.402,25.668"]
"skleee/GLEN" ["l"="59.256,23.623", "c"=235]
"microsoft/SimXNS" ["l"="54.548,25.566"]
"arian-askari/ChatGPT-RetrievalQA-CIKM2023" ["l"="54.368,25.712"]
"StonyBrookNLP/ircot" ["l"="54.332,25.51"]
"starsuzi/Adaptive-RAG" ["l"="54.309,25.485"]
"oriyor/reasoning-on-cots" ["l"="54.317,25.42"]
"jzbjyb/FLARE" ["l"="54.404,25.563"]
"zorazrw/filco" ["l"="54.358,25.489"]
"HuskyInSalt/CRAG" ["l"="54.338,25.491"]
"oneal2000/DRAGIN" ["l"="54.28,25.469"]
"canghongjian/beam_retriever" ["l"="54.291,25.526"]
"chanchimin/RQ-RAG" ["l"="54.288,25.492"]
"DaoD/DCL" ["l"="54.284,25.731"]
"carriex/recomp" ["l"="54.373,25.505"]
"RUC-GSAI/YuLan-IR" ["l"="59.134,22.888", "c"=778]
"swj0419/REPLUG" ["l"="54.4,25.479"]
"oriyor/ret-robust" ["l"="54.385,25.489"]
"princeton-nlp/AutoCompressors" ["l"="38.083,-1.46", "c"=1218]
"shmsw25/FActScore" ["l"="37.612,-6.875", "c"=766]
"nomic-ai/nomic" ["l"="42.386,-2.153", "c"=1097]
"google/nomulus" ["l"="5.787,-4.46", "c"=725]
"varepsilon/cas-eval" ["l"="54.631,25.973"]
"IntelLabs/fastRAG" ["l"="41.095,0.79", "c"=7]
"yizhongw/self-instruct" ["l"="39.042,-2.296", "c"=202]
"CarperAI/trlx" ["l"="37.133,-0.204", "c"=126]
"ofirpress/self-ask" ["l"="54.302,25.36"]
"texttron/hyde" ["l"="54.464,25.657"]
"xbmxb/RAG-query-rewriting" ["l"="54.363,25.551"]
"OpenMatch/MARVEL" ["l"="-2.255,-33.877", "c"=30]
"NEUIR/PaperReading" ["l"="-2.267,-33.879", "c"=30]
"OpenMatch/TASTE" ["l"="-2.253,-33.888", "c"=30]
"fullflu/learning-to-rank" ["l"="54.689,25.92"]
"jattenberg/RankLib" ["l"="54.766,25.913"]
"primeqa/primeqa" ["l"="54.523,25.613"]
"DevSinghSachan/art" ["l"="37.008,-2.531", "c"=797]
"naver/bergen" ["l"="54.506,25.629"]
"label-sleuth/label-sleuth" ["l"="54.618,25.533"]
"bigscience-workshop/xmtf" ["l"="38.619,-0.603", "c"=39]
"reasoning-machines/pal" ["l"="36.861,-2.436", "c"=797]
"McGill-NLP/retriever-lm-reasoning" ["l"="54.38,25.576"]
"airalcorn2/Deep-Semantic-Similarity-Model" ["l"="57.95,23.308", "c"=161]
"thakur-nandan/sprint" ["l"="54.389,25.74"]
"IBM/quality-controlled-paraphrase-generation" ["l"="54.65,25.502"]
"neulab/knn-transformers" ["l"="36.924,-2.604", "c"=797]
"jingtaozhan/extrapolate-eval" ["l"="54.387,25.7"]
"CSHaitao/JTR" ["l"="52.872,27.881", "c"=60]
"eventql/eventql" ["l"="4.432,-7.593", "c"=0]
"phaistos-networks/TANK" ["l"="54.375,26.22"]
"Doragd/Awesome-Sentence-Embedding" ["l"="53.278,26.831", "c"=60]
"AmenRa/indxr" ["l"="54.58,25.884"]
"realtimeqa/realtimeqa_public" ["l"="54.427,25.398"]
"wenhuchen/Time-Sensitive-QA" ["l"="54.424,25.363"]
"grill-lab/CIS-Tutorial-SIGIR2022" ["l"="54.519,25.962"]
"freedmand/semantra" ["l"="41.194,-3.662", "c"=146]
"vec2text/vec2text" ["l"="37.93,-6.846", "c"=766]
"castorini/rank_llm" ["l"="54.47,25.673"]
"RUCAIBox/LLMRank" ["l"="59.246,22.896", "c"=778]
"liyongqi67/LTRGR" ["l"="54.331,25.648"]
"yakt00/IRGen" ["l"="54.314,25.639"]
"RUC-GSAI/YuLan-Chat" ["l"="59.154,22.862", "c"=778]
"DaoD/INTERS" ["l"="54.385,25.636"]
"nancheng58/Awesome-LLM4RS-Papers" ["l"="59.308,22.877", "c"=778]
"white127/QA-deep-learning" ["l"="55.836,28.388", "c"=513]
"vespa-engine/vespa" ["l"="-1.243,4.042", "c"=576]
"run-llama/finetune-embedding" ["l"="40.841,0.994", "c"=7]
"yixuantt/MultiHop-RAG" ["l"="54.261,25.515"]
"yuwvandy/KG-LLM-MDQA" ["l"="53.812,15.23", "c"=504]
"rmit-ir/KrovetzStemmer" ["l"="54.379,25.753"]
"nelson-liu/lost-in-the-middle" ["l"="38.031,-1.405", "c"=1218]
"HazyResearch/m2" ["l"="49.079,33.976", "c"=556]
"freshllms/freshqa" ["l"="54.429,25.46"]
"srush/MiniChain" ["l"="41.454,-3.802", "c"=146]
"bpiyush/TestOfTime" ["l"="54.732,25.631"]
"AngelosNal/Vision-DiffMask" ["l"="54.689,25.65"]
"chaitanyamalaviya/ExpertQA" ["l"="37.536,-6.826", "c"=766]
"allenai/FineGrainedRLHF" ["l"="37.317,-0.19", "c"=126]
"stanford-futuredata/ARES" ["l"="41.059,0.839", "c"=7]
"chen700564/RGB" ["l"="54.352,25.515"]
"hollobit/GenAI_LLM_timeline" ["l"="36.707,-2.539", "c"=797]
"google-research/distilling-step-by-step" ["l"="38.513,-0.333", "c"=39]
"castorini/ragnarok" ["l"="54.355,25.676"]
"facebookresearch/ReasonIR" ["l"="54.366,25.691"]
"NovaSearch-Team/RAG-Retrieval" ["l"="41.195,0.77", "c"=7]
"xlang-ai/BRIGHT" ["l"="54.416,25.686"]
"Furyton/GR-as-MVDR" ["l"="52.413,15.252", "c"=100]
"PeterGriffinJin/LMIndexer" ["l"="54.297,25.625"]
"IAAR-Shanghai/CRUD_RAG" ["l"="-54.911,-11.533", "c"=365]
"florin-git/The-Power-of-Noise" ["l"="54.338,25.465"]
"open-compass/T-Eval" ["l"="36.847,-1.216", "c"=795]
"Timothyxxx/RetrivalLMPapers" ["l"="36.801,-2.512", "c"=797]
"raphaelsty/neural-cherche" ["l"="41.306,1.111", "c"=7]
"sujitpal/dl-models-for-qa" ["l"="55.892,28.373", "c"=513]
"stopwords-iso/stopwords-en" ["l"="54.169,26.056"]
"quanteda/stopwords" ["l"="54.139,26.06"]
"stopwords-iso/stopwords-zh" ["l"="54.107,26.005"]
"stopwords-iso/stopwords-fr" ["l"="54.117,26.028"]
"igorbrigadir/stopwords" ["l"="54.277,25.957"]
"Raudaschl/rag-fusion" ["l"="41.017,0.792", "c"=7]
"GAIR-NLP/factool" ["l"="37.575,-6.899", "c"=766]
"OpenSenseNova/piccolo-embedding" ["l"="54.689,25.69"]
"facebookresearch/belebele" ["l"="54.784,25.346"]
"AGI-Edgerunners/Plan-and-Solve-Prompting" ["l"="36.713,-2.427", "c"=797]
"4AI/LS-LLaMA" ["l"="54.719,25.661"]
"WhereIsAI/BiLLM" ["l"="54.735,25.682"]
"nelson-liu/evaluating-verifiability-in-generative-search-engines" ["l"="37.504,-6.81", "c"=766]
"THUIR/LeCaRDv2" ["l"="52.904,27.8", "c"=60]
"jobandtalent/RankLib" ["l"="54.81,25.924"]
"liyongqi67/GRACE" ["l"="54.297,25.645"]
"OSU-NLP-Group/LLM-Knowledge-Conflict" ["l"="54.497,26.171"]
"urchade/GLiNER" ["l"="41.163,0.926", "c"=7]
"liuqi6777/Awesome-LLM4Ranking" ["l"="54.531,25.774"]
"HansiZeng/PAG" ["l"="54.348,25.655"]
"RUC-NLPIR/FlashRAG" ["l"="41.17,0.655", "c"=7]
"CraftJarvis/RAT" ["l"="54.285,25.41"]
"dmis-lab/RAG2" ["l"="54.26,25.391"]
"TergelMunkhbat/concise-reasoning" ["l"="54.271,25.382"]
"OpenBMB/RAGEval" ["l"="-2.413,-33.796", "c"=30]
"parthsarthi03/raptor" ["l"="41.174,0.695", "c"=7]
"nlmatics/llmsherpa" ["l"="41.055,0.669", "c"=7]
"jakespringer/echo-embeddings" ["l"="54.655,25.673"]
"AnswerDotAI/ModernBERT" ["l"="41.243,0.852", "c"=7]
"stanfordnlp/pyreft" ["l"="37.765,-6.896", "c"=766]
"TIGER-AI-Lab/VLM2Vec" ["l"="32.902,30.738", "c"=109]
"microsoft/LLM2CLIP" ["l"="48.879,30.422", "c"=191]
"MinishLab/model2vec" ["l"="41.292,0.639", "c"=7]
"lucasviola/awesome-functional-programming" ["l"="26.083,-26.231", "c"=32]
"ielab/PromptReps" ["l"="54.545,25.893"]
"orionw/FollowIR" ["l"="54.552,25.921"]
"allenai/OLMo-Eval" ["l"="38.475,-0.652", "c"=39]
"stanford-oval/WikiChat" ["l"="41.073,0.602", "c"=7]
"cmacdonald/IRcourseHM" ["l"="54.505,25.864"]
"Graph-RAG/GraphRAG" ["l"="53.705,15.409", "c"=504]
"hyintell/RetrievalQA" ["l"="54.217,25.489"]
"hymie122/RAG-Survey" ["l"="41.211,0.75", "c"=7]
"wikimedia/search-MjoLniR" ["l"="54.61,25.966"]
"jxzhangjhu/Awesome-LLM-RAG" ["l"="41.231,0.765", "c"=7]
"microsoft/MS-MARCO-Web-Search" ["l"="54.532,25.805"]
"webis-de/lightning-ir" ["l"="54.58,25.935"]
"tira-io/tira" ["l"="54.58,25.962"]
"Bocchi7/DRAGIN_simplified" ["l"="54.266,25.448"]
"oneal2000/MIND" ["l"="54.239,25.464"]
"oneal2000/PRAG" ["l"="54.23,25.439"]
"THU-KEG/SeaKR" ["l"="54.254,25.459"]
"xsc1234/INFO-RAG" ["l"="54.256,25.434"]
"laura-dietz/tutorial-utilizing-kg" ["l"="54.387,25.921"]
"cvangysel/SERT" ["l"="54.355,25.953"]
"kongds/scaling_sentemb" ["l"="53.288,26.785", "c"=60]
"PrithivirajDamodaran/FlashRank" ["l"="41.16,0.879", "c"=7]
"OSU-NLP-Group/TravelPlanner" ["l"="36.874,-1.455", "c"=795]
"kongds/E5-V" ["l"="32.878,30.741", "c"=109]
"ContextualAI/HALOs" ["l"="37.252,-0.265", "c"=126]
"Marker-Inc-Korea/AutoRAG-example-korean-embedding-benchmark" ["l"="-5.35,-23.276", "c"=164]
"myeon9h/PlanRAG" ["l"="54.291,25.442"]
"TREC-RAG/trec-rag.github.io" ["l"="54.317,25.67"]
"google-research-datasets/swim-ir" ["l"="54.603,25.728"]
"baipengyan/Chinese-StopWords" ["l"="54.08,25.999"]
"simongog/sdsl-lite" ["l"="-19.607,-26.186", "c"=10]
"amazon-science/RAGChecker" ["l"="41.183,0.717", "c"=7]
"IntelLabs/RAG-FiT" ["l"="41.337,0.637", "c"=7]
"OSU-NLP-Group/GrokkedTransformer" ["l"="54.516,26.214"]
"OSU-NLP-Group/llm-planning-eval" ["l"="54.525,26.242"]
"DeepPavlovAdmin/convai" ["l"="56.685,29.136", "c"=310]
"luceneplusplus/LucenePlusPlus" ["l"="-18.987,24.648", "c"=37]
"weizhepei/InstructRAG" ["l"="54.386,25.443"]
"FudanDNN-NLP/RAG" ["l"="54.358,25.428"]
"illuin-tech/colpali" ["l"="41.303,0.709", "c"=7]
"ironjr/grokfast" ["l"="38.714,-0.084", "c"=39]
"AkariAsai/OpenScholar" ["l"="37.475,-0.594", "c"=126]
"RulinShao/retrieval-scaling" ["l"="54.325,25.687"]
"mzhang001/tfranknet" ["l"="54.74,25.924"]
"nyu-mll/multiNLI" ["l"="53.07,27.436", "c"=60]
"bigdong89/xgboostExtension" ["l"="54.77,25.852"]
"pillowsofwind/Knowledge-Conflicts-Survey" ["l"="54.485,26.197"]
"orionw/promptriever" ["l"="54.543,25.938"]
"UKPLab/acl2017-non-factoid-qa" ["l"="54.818,26.048"]
"liuqi6777/llm4ranking" ["l"="54.56,25.827"]
"sunnynexus/Search-o1" ["l"="37.293,-0.55", "c"=126]
"facebookresearch/DrQA" ["l"="54.617,26.505", "c"=587]
"facebookresearch/large_concept_model" ["l"="37.317,-0.585", "c"=126]
"awesome-rag/awesome-rag" ["l"="37.119,-0.394", "c"=126]
"Trae1ounG/DyPRAG" ["l"="54.203,25.421"]
"RulinShao/massive-serve" ["l"="54.334,25.705"]
"LeeSureman/E5-Retrieval-Reproduction" ["l"="54.297,25.696"]
"HITsz-TMG/KaLM-Embedding" ["l"="54.248,25.698"]
"pl8787/textnet-release" ["l"="53.038,27.611", "c"=60]
}